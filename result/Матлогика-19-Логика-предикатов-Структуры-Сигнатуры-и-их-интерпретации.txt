И теперь мы начинаем изучение, собственно говоря, логики.
Ну, что имеется в виду?
Имеется в виду некий такой математический анализ рассуждений.
Прежде всего, математическое рассуждение.
То есть, в чем состоит наша цель?
Наша цель состоит в том, чтобы изучить математику.
И это не как работает математика вообще.
На самом деле мы уже, конечно, с логикой сталкивались,
но мы эту логику пользовались, мы ее не изучали.
То есть, как вы помните, мы использовали, например, кванторы,
мы использовали логические связки.
Помните ли вы какие у них таблицы из полуста?
Вот, не хотел бы это напоминать.
Все это мы уже использовали.
Ну, а теперь мы хотели бы эти вещи изучить.
Но тут без дела.
И с две стороны.
С одной стороны, что математики, так сказать, производят?
Ну, говорят, что математики перерабатывают копии от теоремы.
Значит, производят теоремы.
А что такое теорема?
Извините, а вы не на деле подключили.
Да? Давайте наделаем.
Что такое теорема?
Теоремы это что такое?
Ну, вот, видите, ответы разошлись.
Некоторые говорят, что это следствия за ксьом.
Другие говорят, что это даже не одна тавтология, а целый их набор.
Третьи говорят, что это посылки и заключения.
Но давайте держаться такого формулистического взаимодействия.
Ну, а теперь мы хотели бы, чтобы вы понимали,
что это посылки и заключения.
Но давайте держаться такого формулистического взгляда.
Теорема это нечто, записываемое на доске.
Некий текст.
Но, конечно, не всякий текст считается теоремой.
С одной стороны, этот текст должен быть некоторым образом понятен.
Можно считать, что он на некотором языке пишется.
А с другой стороны, это теорема, мы ждем, что она выражает некоторую истину.
То есть, может быть, она следует из каких-то ксьом в каком-то смысле.
Может быть, она является в каком-то смысле тавтологией.
То есть, по сути дела, основная наша мысль в том,
что вот то, что математики производят, теоремы, лемы и вообще утверждения,
это мы будем этот объект моделировать так называемыми формулами.
Мы будем эти объекты моделировать так называемыми формулами.
На самом деле здесь нет, но совершенно ничего удивительного.
Например, как выглядит теорема о том, что сложение натуральных чисел коммутативно.
Мы действительно можем написать такую формулу.
Для любого х, для любого у, х плюс у равно у плюс х.
Но здесь возник еще такой вопрос.
А нам хотелось бы каким-то образом сказать, что х и у натуральные.
Правильно?
Стоит ли поместить эту информацию в формулу?
С одной стороны, стоит.
Но с другой стороны, тут возникает еще ряд вопросов.
А что такое плюс? Что такое равно? Что они означают?
Если вы скажете, что все понимают, что такое плюс, то вы будете неправы.
Все-таки сложение на разных множествах устроено достаточно по-разному.
Например, при сложении натуральных чисел неправда,
что для любого n найдется число, которое в сумме с n даст 0.
А для сложения целых чисел это правда.
И с формальной точки зрения плюс может быть как функция натуральных чисел,
а может быть как и функция целых.
В формуле как видите, этой информации нет.
А если бы она даже и была, как бы могли мы ее записать?
Как мы могли бы формулу добавить, следя не о том, что равно означает раньше натуральных чисел,
а плюс означает их сложение.
Тоже не очень понятно.
Вообще возникают две области проблем.
Синтаксис, то есть то, что мы пишем на доске.
Сами по себе эти выражения, правила их построения.
И семантики, что они означают и в частности, когда и почему они бывают истинными.
Давайте постепенно мы эти проблемы будем решать.
Но на самом деле естественно идти не от синтаксиса, а от семантики, от значения.
Ну вот что вообще математика изучает?
Что является ее предметом, как вы считаете?
Что?
Модель, а что это за модель?
Заметьте, нам надо как бы этот предмет математики формализовать.
Нам надо будет упрощать.
Вот знаете, что математика, в математике есть, например, теория графов,
в которой есть такая теорема.
В любом конечном графе есть две, в котором больше одной вершины,
есть две различные вершины с одинаковым числом соседей, например.
Есть теория группы.
Она изучает группы.
Есть теория функций вещественного числа, ваш матанализ.
Там тоже есть какие-то теоремы.
Теоремы эти, они про что-то, про некоторый круг объектов.
Например, теоремы, которые вы изучаете нам от анализы, они про что?
Про вещественные числа и функции на них, правильно?
Ну, например, вот когда вы говорите, что любая функция,
которая на концах отрезка принимает значение разных знаков,
непрерывно, она где-то на отрезке принимает значение ноль, да?
Как это могло бы выглядеть?
Для любой функции, если она такая-то, импликация,
существует такая точка Х, где принимается значение ноль.
Вот, значит, по сути дела, каждая конкретная математическая область,
каждая конкретная математическая теория, она обычно ведет разговор о каком-то круге объектов.
Например, о графах или о точках какого-то произвольного графа,
если мы формулируем теоремы, которые выполняются в любом графе.
Вот такого рода вещь, или даже давайте мы немножко вернемся назад
и вспомним то, что было уже с нами, а именно порядки.
Вот, например, у нас была такая теорема, что, скажем,
если порядок линейный, то в любом подмножестве, значит, максимальный элемент является наибольшим.
Вот, то есть про что эта теорема? Про элементы порядка.
Какого? На самом деле любого. Теорема наша выглядит так.
Если порядок линейен, какой-то элемент максимален, то он является наибольшим.
Давайте эту теорему, например, запишем.
Ну, хорошо, будет сложновато немножко.
И вот этот круг объектов с определенными на них операциями,
даже, наверное, самый классический пример, это арифметика.
Вот как выглядит теорема арифметики?
Приведите пример какой-нибудь теоремы арифметики.
Ну да, можно сказать, что каждое число единственным образом разлагается в произведении простых.
Или, например, бесконечность множества простых.
Можно сказать, что для любого числа есть простое, которое больше его.
Обратите внимание, здесь кванторы для любого и существует, они пробегают область натуральных чисел.
И еще есть какие-то высказывания, точнее сказать, предикаты, типа того, что там что х простой и так далее.
Вот давайте мы сейчас абстрагируемся от всего этого и введем такое понятие как структура.
Это обобщение графа, порядка, группы, более или менее чего угодно.
Что такое структура?
Структура, или еще иногда называют моделью, значит, это такая четверка.
Значит, М, Р, Ф и С. Красивые.
Где у нас М это не пустое множество.
Это очень важно, что оно не пустое.
Оно называется носителем.
Оно называется носителем структуры.
Что такое Ф?
Ф это некоторое множество функций на нашей структуре.
То есть, что такое Ф?
Мы говорим, что для любого элемента этого множества Ф, значит, это что такое?
Ф это просто некоторая функция на наших элементах.
Давайте считать, что функция принимает хотя бы один аргумент.
То есть, некоторый набор функций, некоторое множество функций, неважно, конечные, бесконечные.
Правильно?
Вот в арифметике какие рассматриваются функции?
Сложение, сколько у нее аргументов?
А еще какие в арифметике есть функции?
Какие?
Умножения еще.
Какие?
Минус, да?
А сколько будет 3 минус 5?
Вычитание натуральных чисел, это разве функции на натуральных?
Она должна принимать целые значения.
То есть, вычитание не годится.
Обратите внимание, речь идет о всюду о определенных функциях.
То есть, некоторый набор функций.
Так, ну что еще в арифметике есть?
В арифметике есть отношения.
Меньше, равно, больше или равно, делит, да?
Вот эти отношения, они какие?
Бинарные, да?
А еще бывает такая вещь, как тернарное, энарное отношение.
Что это такое?
Что такое бинарное отношение?
Вспомните определение.
Ну что, пара.
Что такое тернарное отношение?
Троек.
Ну и так далее.
То есть, на самом деле, нам еще могут быть важны отношения.
Вот это R.
Это множество некоторых отношений.
Каких?
Ну, можем ли мы допускать нульарные отношения?
Ну давайте допустим.
Нульарные отношения это логический констант.
Истина или ложь.
А можем и не допускать.
Не знаю, хотим ли мы больше или меньше свободы.
Давайте больше.
Снимем эти ограничения.
Значит, где вот это R?
Это что такое?
Это просто отношение энарное.
Какое-то множество энок наших элементов.
Согласны?
N это натуральное число.
Нет, натуральные числа выполняют служебную роль.
Мы же изучаем математику математическими средствами.
Это количество аргументов, функций или отношения.
Ну а чем его заменить?
Ну и наконец третья.
Это множество констант.
Что такое константы?
Константы это выделенные элементы.
Их можно заменить на функции нуля аргументов.
Но можно и не заменять.
Давайте рассмотрим их отдельно.
Каждая константа это просто элемент нашего m.
Вот что такое структура.
Например, мы можем взять в качестве носителя структура натуральный ряд.
Мы можем взять вот такие отношения равно и меньше.
Мы можем взять такие функции плюс и умножить.
И мы можем взять две константы 0 и 1.
Вот пример структуры.
Обратите внимание.
Ведь понятно же, что легко доказать,
что для каждой функции отношения такое число N определено однозначно.
То есть по сути дела у каждой функции есть число ее аргументов.
Давайте на это обратим внимание.
Вот пример структуры.
Как бы это арифметика с двумя отношениями и с двумя функциями, двумя константами.
Понятно это?
Ну хорошо.
Структура у нас есть.
Вот это круг объектов, с которыми математики работают, допустим, в арифметике.
А вопрос такой.
Кстати, смотри.
Ну хорошо.
Вопрос такой.
А как же мы будем формулировать теоремы-то?
Теоремы-то это что?
Вот объекты, с которыми мы работаем, про что теоремы определилось.
А сами-то теоремы это что?
Сами теоремы это что такое?
Формулы.
А что такое формулы на этих элементах?
А утверждение что такое?
Как их промоделировать?
Но формула в самом простом понимании это последовательность каких-то символов, правильно?
Это слово в некотором алфавите.
Давайте этого и держаться.
Но если мы вот напишем формулу про арифметику.
3 плюс 2 равно 5.
Что нам здесь нужно?
Нам нужно как-то, нам нужны некоторые имена, из которых она состоит, правильно?
Вот мы сейчас вот этим вот составляющим нашей структуры дадим некие имена.
Но в принципе это можно сделать по-разному.
Поэтому у нас сейчас появится еще один объект.
Это будет список имен.
Так называемая сигнатура.
Что это такое?
Да.
Не, ни в коем случае, не все.
Но пока нам еще надо пройти некоторое расстояние до того, чтобы уметь отличить формулу от неформулы.
Значит сначала нам нужен список имен.
Сигнатура это вот такая вот тройка, состоящая из трех множеств.
Рел от слова relation отношения, функ от слова функция и конст от слова константа.
Вот такая вот тройка множеств.
При этом давайте примем некоторые разумные предположения.
Что множество рел никогда не пустое.
И даже, позвольте подумать, хотим ли мы ввести туда равенство.
Чтобы равенство было всегда.
Чтобы равенство было логическим символом.
Давайте сделаем так.
Давайте считать, что здесь всегда есть символ, который называется равно.
Или нет.
Позвольте мне немножко сосредоточиться, как это все оформлено.
Вот как.
Или без этого обойтись.
Ладно, оно не пустое.
Значит, что еще?
Ну, удобно предположить, что все они не пересекаются.
Все они не пересекаются.
Но этого еще мало.
На самом деле, конечно, в сигнатуре содержится чуть больше информации.
То есть, по сути дела, там еще есть некоторая функция.
Каждому R из этого рел и каждому F из этого ФНК
Поставлено в соответствие
Натуральное число.
Понятно, что имеется в виду.
Еще есть это число называется валентностью символа R или F.
Каждому символу из рел и каждому символу из ФНК
Поставлено в соответствие натуральное число.
Понятно ли, зачем такая штука нужна?
Не очень.
Сейчас постараемся объяснить.
Кстати, вот это число, которое поставлено в соответствие,
мы вот тут вот в скобках будем писать.
Вот эти штуки – это имена для объектов и структуры.
Это некий список имен. На что это похоже?
Вы объектно-ориентированное программирование проходите?
Так вот, это похоже на интерфейс класса.
Вот эта сигнатура – это некий интерфейс.
Здесь сказано, что у вас есть.
Например, здесь есть какая-то функция, может быть, с двумя аргументами.
Какое-то тернарное отношение, еще что-нибудь.
Это просто некий список символов.
Но вот что они означают?
Суть в том, что вот тонкий момент.
Мы, может быть, привыкли, что у каждого символа есть какое-то жесткое значение.
Например, плюс обозначает сложение.
Но ведь согласитесь, что сложение матриц и сложение натуральных чисел
все-таки устроено немножко по-разному.
То есть, в принципе, у символов может варьировать значение.
Мало ли что символ может означать.
Иногда одно, иногда другое.
Вот этот момент мы сейчас и должны с вами перехватить.
Да, своего рода полиморфизм, совершенно правильно.
Вот у нас есть один интерфейс и разные его реализации.
У нас будет один список имен, одна сигнатура и разные, как говорится, интерпретации.
И вот сейчас мы этот момент заметим.
Давайте начнем с примера.
Ну вот пусть у нас есть какая-то сигнатура.
Что у нее будет?
Ну пусть у нее будет один какой-то бинарный символ реляционный, меньше.
Пусть у нее будет один унарный символ функциональный, решеточка.
И пусть у нее будет один константный символ, я не знаю, пи.
Вот типичный пример сигнатуры.
Но а какой ей можно приписать значение?
Да какое угодно, смотрите.
Вот у нее будут две интерпретации.
То есть мы сейчас возьмем две структуры, которые некоторым образом нашу сигнатуру интерпретируют.
Например, мы можем взять такую структуру, взять натуральные числа.
Теперь нам надо объяснить, что будет означать меньше.
А меньше может обозначать любое, в принципе, бинарное отношение, правильно?
Например, делит.
Решетка может обозначать любую функцию унарную.
Например, какую?
Например, функцию возведения в квадрат, почему нет?
И пи может обозначать любую константу, любое натуральное число.
8, да.
Но это не единственная интерпретация, можно рассмотреть какую-нибудь другую.
Можно взять в качестве множества нашего вещественные числа.
В качестве отношений меньше можно взять отношения больше.
В качестве функции можно взять синус.
А в качестве константы пи взять число я.
Да, это интерфейс структуры, который содержит следующую информацию.
Список символов и их валентность, все.
Больше никакой информации там нет.
Валентность нужна для того, чтобы потребовать, чтобы символ валентности N
ему соответствовала функции, например, тоже с N-аргументами.
И сейчас мы свяжем структуры и сигнатуры.
Это содержится в понятии интерпретации.
Значит, и красивая.
Что такое интерпретация?
Интерпретация сигнатуры,
Интерпретация сигнатуры сигма.
Это что такое?
Это пара M красивая и красивая.
Где?
M это некоторая структура,
M это некоторая структура,
а I это некоторая функция.
Ну, откуда куда?
На самом деле можно формально так написать.
Давайте нашу структуру опишем.
Тут есть M, здесь есть R красивая, F красивая, C красивая.
А И это функция откуда куда?
Она принимает на вход символ из нашей сигнатуры.
Это все довольно абстрактно, но ничего не поделаешь.
Принимает на вход символ из нашей сигнатуры
и ставит ему в соответствие отношения функцию или константу.
Причем выполняются некоторые условия.
Выполняются некоторые условия. Какие?
Какие условия выполняются?
Но, во-первых, для любого символа отношения,
если у нас есть символ отношения валентности N,
то его интерпретация, вот эта штука называется
интерпретация символа R.
Его интерпретация, это что такое?
Это, собственно говоря, отношение на R.
И оно действительно, ну давайте, ну хорошо.
На самом деле можно было бы поступить и по-другому.
Можно было поступить немножко по-другому.
Давайте так.
Значит, как бы у нас структура существует независимо от сигнатуры.
Может быть, не очень хорошо, но это логично.
Значит, интерпретация символа R – это одно из отношений из нашего списка.
И при этом что о нем можно сказать?
Оно должно быть отношением валентности N.
Правильно?
Так.
Любая функция, любой символ функции из нашего списка,
его интерпретация – это что?
Это одна из наших функций.
И более того, она должна быть функцией N-аргументов.
Понятно?
И, наконец, третья.
Это константы.
Что о них можно сказать?
Любой символ константы, его интерпретация должна отобразить в некий элемент в нашей структуре.
Понятно это?
Тут есть определенная гибкость.
Например, остаются вопросы.
А может ли так быть, что у разных символов одинаковая интерпретация?
Почему нет?
Может.
Вполне.
То есть инъективность от этой И вообще не требуется.
Может ли так быть, что у…
Единственное, что мы не хотим, чтобы, например…
А, ну да, это все у нас будет автоматически.
Значит, хотим ли мы сюръективности?
Хотим ли мы, чтобы у каждого элемента здесь было имя?
Ну, может быть, хотим, может быть, нет.
Давайте не будем этого требовать.
Это нам на самом деле и не нужно.
То есть, по сути дела, что такое интерпретация?
Интерпретация – это приписывание символом.
Символом отношений приписываются отношения.
Символом функций приписываются функции.
Символом констант приписываются константы.
При этом есть ряд естественных вопросов.
Ну, хорошо.
А вот это же тоже символ.
Вот П символ, а Е что такое?
Здесь есть некий элемент обмана.
Но мы как бы считаем, что мы уже знаем, что есть что в нашей структуре.
А потом мы проводим вот это приписывание.
Понятно?
Нам не так уж нужны эти сигнатуры сами по себе.
Но нам важно, чтобы две структуры были интерпретациями одной и той же сигнатуры.
Поэтому мы будем говорить о такой штуке как сигма-структура.
Что такое сигма-структура?
Сигма-структура это на самом деле то же самое, что и интерпретация сигнатуры сигма.
Сигма-структура это просто интерпретация сигнатуры сигма.
Понятно это?
Мы не будем с вами говорить просто о структурах.
Мы почти всегда будем рассматривать структуру вместе с некоторой выбранной сигнаторой.
С некоторым списком имен.
Вы понимаете, если есть класс, то обращайтесь к его методам и прочему через его интерфейс.
Но здесь аналогичная ситуация.
Очень хорошо.
Естественно все это достаточно абстрактно, но мы на таком уровне абстракции работать не будем.
Давайте приведем примеры.
Вот мы возьмем некоторую естественную сигнатуру и посмотрим на ее разные интерпретации.
Тоже естественная.
Давайте возьмем такую сигнатуру.
Вот пусть у нас есть символ отношения равно.
Бинарно естественно.
Пусть у нас есть символ операции.
Кружочек.
Бинарный.
И пусть у нас есть константа нолик.
Давайте не нолик обозначим.
Какую-то букву Е от слова единицы.
Нейтральный элемент.
Это констант.
Какие у нас есть естественные структуры?
Например, мы можем взять натуральные числа с равенством сложением и нулем.
Согласны?
Мы можем взять натуральные числа с равенством, умножением и единицей.
Мы можем взять вещественные числа с равенством, сложением и нулем.
Мы можем взять отношения на каком-нибудь множестве.
Множество всех бинарных отношений.
Все бинарные отношения на каком-то А.
Равенство будет равенством.
Кружочек мы будем понимать как композицию.
А нейтральный элемент будем понимать как ид.
Ну и так далее.
Это все более или менее естественные.
Естественные интерпретации.
Но естественно есть и противоестественные.
Вы можете понимать, например, под этим кружочком не сложение,
а какой-нибудь там, я не знаю, синус х умножить на косинус х.
А подъемом можете понимать число π.
То есть в самой сигнатуре наложены лишь самые слабые ограничения на интерпретацию.
Здесь просто сказано, что вот это должно быть бинарное отношение.
А вот это должно быть функцией двух аргументов. Понятно?
Сказано на удивление мало.
Сказано очень мало.
Очень хорошо.
И давайте ведем обозначение, которым я все время буду пользоваться.
Вот это вот и от r.
Интерпретация символа r в структуре m.
Я ее буду обозначать r в степени m, если m это сигма структура.
Вот это я буду обозначать c в степени m красивая.
И вот это вот я буду обозначать f в степени m красивая.
То есть соответствующий символ в смысле такой-то интерпретации.
Понятно?
Поехали.
Значит, теперь давайте посмотрим, что же такое формула.
Формулы у нас составляются из элементов сигнатуры.
Но что такое формула?
Опять давайте начнем с примеров.
Вот пусть у нас есть арифметическая сигнатура, вот такая.
Есть равно и меньше, есть плюс и умножить.
И допустим, у нас есть все символы натуральных чисел в качестве констант.
Давайте приведем примеры формул.
Пожалуйста.
Формула обозначает теоремы, обозначает утверждение.
Да или нет?
Приведите пример формулы.
Один меньше двух.
Так, еще что?
Два плюс два равно четыре.
А вот такое.
Два плюс х равно у.
Это формула?
Почему нет?
Это же переменная.
У нас в формулах могут присутствовать переменные.
Иное дело, что эта формула обозначает не утверждение, а предикат.
Она зависит от того, что мы понимаем под х и у.
Но в целом она очень естественная.
А бывают же такие в математике?
Можно, например, написать так.
Для любого у существует такой х, что два плюс у равно х, чтобы это было правдой.
Вот пример формулы с кванторами.
Естественно, формулы можно комбинировать с помощью булевых связок.
Два равно нулю или существует такой х, что х умножить на х равно х.
Тоже формула, правильно?
Так, хорошо.
А вот такие объекты, например два плюс два, это формула?
Она обозначает какой-нибудь предикат?
Она обозначает что?
Объект или число, правильно?
А вот такое выражение х умножить на у, оно что обозначает?
Тоже число, но только зависище от переменных.
Вот это вот не формулы.
Такие объекты, они называются термами.
Такие объекты называются термами.
Давайте теперь формально, абстрактно.
Пусть есть какая-то сигма, структура m,
какая-то интерпретация сигнатуры m.
Тогда мы с вами сейчас определим, что является там термами,
а что является там формулами.
Конечно, тут тоже надо дать, к сожалению, индуктивное определение.
Я его немножко замаскирую.
Правила построения термов.
Множество всех термов обозначаем так.
Tm с индексом сигма.
Из чего же строятся термы?
Мы с вами уже договорились, что нам хотелось бы иметь переменные.
Нам хотелось бы иметь с вами переменные.
Откуда мы эти переменные возьмем?
Переменные – это буковки, а в носителе живут элементы.
В носителе, например, натуральный числ 0, 1, 2, 3.
А сами переменные – это какие-то буковки.
Мы с вами заведем некий алфавит переменных var.
Он будет фиксирован.
Мы будем считать переменных счетно много.
Мы будем считать, что вот у нас имеется счетно много переменных.
Это просто некие буковки.
Так вот, правила построения термов такие.
Если х – это переменная, то слово, состоящее только из одного этого х, считается термом.
Если у нас есть какой-то константный символ, то он тоже считается термом.
И третье.
Смотрите, как бы мы могли вот такой терм построить.
Например, 2 плюс 2 равно у.
Или там 2 плюс х равно у.
Это формула.
Давайте терм какой-нибудь.
Вот такой терм.
2 плюс х умножить на у.
Мы же хотим, чтобы это было термом.
Пока у нас есть такие правила.
Каждая переменная – это терм.
То есть, например, мы видим, что х – это терм, и у – это терм.
Почему? По правилу номер один.
Мы знаем, что двойка – это тоже терм.
По правилу номер два. Правильно?
А как нам вот эти плюсы и прочие внедрить?
Да, если у нас есть бинарная функция, функция валентности 2,
то мы можем ее как бы применить к термам и получить новый терм.
Но здесь нам хочется унифицировать обозначение.
Смотрите, плюсик ведь пишется между своими аргументами.
А если бы у нас было бы три аргумента или сто, это было бы неудобно.
Мы с вами будем пользоваться так называемой польской записью.
Мы не будем ее пользоваться на практике, естественно.
Мы будем ей пользоваться абстрактно, определяя, что такое терм.
То есть у нас будет такое правило.
Смотрите, если у нас есть функциональный символ,
если у нас есть функциональный символ валентности n,
и если у нас уже есть несколько термов, а именно n,
то вот мы можем построить такое выражение.
Обратите внимание, скобок в нем нет.
Мы пишем f, t1, t2 и так далее, tn.
И вот такое вот выражение мы тоже объявляем термом.
Понятно?
Ну то есть в случае арифметики, что мы делаем?
Давайте попробуем. Вот такое выражение плюс 2х будет термом по третьему правилу.
И вот такое вот выражение умножить на плюс 2xy тоже будет термом по третьему правилу.
Но это ничто иное, как польская или префиксная запись.
Вот такого вот, да? Понятно?
Очень хорошо. Мы определили, что такое терм, но пока непонятно, что же такое формула.
А у него нет имени? Нет, нельзя, нельзя. А у него нет имени?
Не константы не имели бы права.
Мы имеем право в формулах использовать только то, у чего есть имя или переменные.
Это принципиальный момент, хороший вопрос.
Ну, тоже хороший вопрос.
Надо доказывать теорему об однозначности разбора.
Так как мы благополучно эту тему пропустили в конце прошлого семестра,
то давайте поверим, что разбор такой возможен.
Но на чем он основан?
Мы читаем символ умножить. Мы знаем, что он ждет два аргумента.
Читаем следующий символ. Он плюс. Это значит, что мы опять ждем два аргумента.
Читаем следующий символ. Он двойка. Это листик нашего дерева.
Это означает, что первый аргумент плюса получен, и мы помним, что надо лишь ждать второго аргумента плюса.
Читаем следующий символ. Это х. Это листик дерева.
Все. Аргументы для плюса найдены. Мы поднимаемся на уровень выше и ожидаем второго аргумента для умножения.
Понятно это? Вы не писали такой калькулятор на программирование?
Писали? Так вот оно есть.
Хорошо. А как же построить формулу?
Как же построить формулу?
Ну, на самом деле...
На самом деле, формулу мы можем построить следующим образом.
Опять же, правила построения формул.
Вот если у нас есть какой-то символ отношения, например, в любой формуле может быть какой-то символ отношения.
Один меньше двух, да?
Если мы нарисуем дерево разбора этой формулы, как оно выглядит?
Меньше один и два, правильно?
Значит, если у нас есть какое-то отношение валентности N, и если у нас уже есть N термов, то тогда вот такая штука, я пишу R, а после него N термов.
Она тоже будет у нас формулой. Согласны?
Такие формулы называются атомарными.
Такие штуки называются атомарными формулами.
Согласны? Нормально?
Так, как еще можно строить формулы?
Формулы можно комбинировать с помощью логических связок, но это уже достаточно просто.
Если фи и пси это формулы, то тогда мы можем образовать новые формулы.
Тут вопрос, хотим ли мы использовать польскую запись? Давайте исходить из того, что не хотим.
Не фи, это формула. Фи конъюнтце пси, это формула. Мы скобки, естественно, будем опускать, где надо.
Фи или пси, это тоже формула. Фи влечет пси, это тоже формула.
Но на самом деле мы с вами жестко не фиксировали набор связок, которые у нас есть, поэтому может быть еще какие-то есть.
В зависимости от интересующего у нас набора связок.
Но давайте считать, что вот эти связки заведомо есть. Конъюнтце, дизъюнтце, импликация, отрицание. Нормально?
Так, как еще можно строить формулу?
С помощью кванторов. Вот смотрите, вот эта формула, равенство двух термов, это формула.
И мы на нее можем навесить квантор. Ну давайте так и сделаем.
Квантор бывает по какой-то переменной. Если х это переменная, и если фи это формула, то вот такое выражение для любого х фи это формула.
И выражение существует х фи. Это тоже формула. Обратите, пожалуйста, внимание на то, что мы не проверяем, входит ли х в фи или нет.
Ну то есть какой еще пример мы можем построить, формула?
Давайте построим пример такой. Значит, для любого х, х равно х, или существует у такое, что для любого х у меньше семи.
Вот как вы считаете это выражение, это формула? По каким правилам оно строится? Давайте докажем, что это формула.
Ну конечно еще скобки нужны, но я их опускаю. Давайте напишем, почему это формула. То есть сделаем ее построение.
Почему мы решили, что это формула? Ну потому что вот это была формула и вот это. Скажем так, если мы докажем, что вот эти вот выражения это формула, то применяя какое правило?
Применяя правило два для формул, применяя правило два для формул, f2 я его назову, мы убедимся, что это формула, правда?
А почему вот эта штука формула? Какое правило применяется? Применяя правило f3, вы спросите, вот переменами назывались v0, v1, а тут какие-то х.
Это тоже еще один обман, x и y обозначают какие-нибудь из v. Более того, принято считать, что если x и y разные, то и v, которые они обозначают, разные.
Вы можете считать, что эти x и y это метапеременные, переменные, которые обозначают переменные. Ну бывает же такое в программировании? Бывает, вот оно и есть.
Ну это сложная тема, некоторые, видите, нас покидают.
Значит, по правилу f3 мы могли бы получить это из того факта, что x равно x формула. А x формула?
x равно x формула? Да, по какому правилу? По первому. Значит, по правилу f1, чтобы это получить, нам надо доказать, что x терм, а x это терм, да, по правилу t1.
А вот эта штука формула, по какому, откуда мы ее получаем? Из формулы для любого x, y меньше 7, правильно? А ее мы получаем по f3.
А вот это откуда получаем? Обратите, пожалуйста, внимание, x не встречается в формуле y меньше 7. Но это ведь и не потребовано тут. Значит, можно.
Так, по f3 мы получаем ее отсюда. А это что? По первому правилу это получается из двух термов, y и 7.
А y и 7 будут термами. y будет термом по правилу 1 для термов, а 7 будет термом по правилу t2. Согласны? То есть, по сути дела, у каждой формулы есть построение.
Вот такой вот разбор. Понятно? То есть, довольно нетрудно доказать, почему что-то является формулой.
Более трудно доказать, что что-то формулой не является. Но мы эту увлекательную еще тему вычеркиваем и будем воспринимать чисто интуитивно.
Если кому интересно, читайте главу про индуктивное определение в конспекте. Посмотрите соответствующие видео.
То есть, мы поняли, что такое формулы, мы поняли, что такое термы. Правильно?
Но есть вопросы. А какая связь между формулами и как нам сказать, что формула истинна или ложна?
Давайте я напишу такую формулу.
Кстати, давайте еще ведем понятия. Я зря стер правила образования термов.
Вот еще ряд служебных понятий. Какие переменные входят в терм или формулу?
Как это понять?
Вот скажите, пожалуйста, какие переменные входят вот в эту формулу?
Х и у. Ну у же в ней кричается.
А какие переменные входят вот в этот терм?
Х. А мы сейчас дадим некие рекурсивные правила, которые позволяют нам вычислить,
какие переменные входят в тот или иной терм или формулу?
Вот мы заведем такую функцию v. Она принимает на вход терм или формулу
и выдает нам некое конечное множество переменных, которые там встречается.
Функция эта определяется рекурсивно. Опять же, мы не говорим, что это значит,
потому что пустили соответствующую главу. Воспринимаем интуитивно.
Но правила будут очень похожие на то, как определялся терм.
Ну вот если наш терм, мы знаем, что всякий терм это либо переменная, либо константа,
либо он имеет вид, функциональный символ и некий список термов, правильно?
Вот скажите, пожалуйста, если наш терм это переменная,
какие переменные там встречаются?
Очень научный вопрос. Очень трудный.
Ну включайте голову. Какие переменные встречаются в переменной Х?
Если перед нами константа, какие переменные там встречаются?
Никаких.
И наконец третья, какие переменные встречаются вот в таком терме?
Вот мы взяли функциональный символ и приписали к нему термы.
Какие переменные здесь есть?
Вы же программисты и без труда сможете по этим правилам посчитать множество переменных,
которые встречаются в любом терме. Согласны?
Точно так же и для формул мы напишем.
Какие переменные встречаются в формуле вот такой вот, в атомарной формуле?
Вот в такой формуле какие есть переменные?
Те, которые есть хотя бы в одном из термов. Согласны?
Так, а если наша формула имеет такой вид, там конъюнцы или дизъюнцы или ампликация?
Какие переменные встречаются?
Опять объединение. Согласны?
А если формула имеет такой вид для любого x, phi или там существует x, phi?
Какие переменные в ней встречаются?
Те, которые встречаются в phi плюс x. Согласны? Логичны это?
И есть еще одно синтоксическое понятие. Давайте его заведем.
Это vf, то есть free variables.
Переменные, имеющие свободное вхождение в нашу формулу.
Переменные, имеющие так называемое свободное вхождение в phi.
Они же параметры phi.
Давайте поймем, что имеется в виду, а потом напишем формальные правила.
А потом напишем формальные правила.
Ну вот смотрите, если у меня есть, например, такая формула.
Там x плюс 3 равно 5. Какие переменные в нее входят?
Свободно, то есть не связано кванторам.
Только x.
А какие переменные входят вот в такую формулу?
То есть существует x такое, что x плюс 3 равно 5.
Или x равно 7.
Ну вот если так, вот если у. Какие переменные имеют свободное вхождение?
То есть x связан кванторам.
Как бы формула зависит только от y. Понятно это?
Если я y заменю на x, то все равно x будет входить свободно,
потому что второе вхождение кванторам не связано.
Значит, давайте дадим определение вот этого fv.
Вы его запишите, но оно нам позже понадобится.
Здесь у нас есть такая формула.
То кто в нее входит свободно?
В такой формуле нет кванторов.
Свободно в нее входят вообще все те, кто в нее как-то входит, правильно?
Кто входит свободно в дизъюнцию, там, конъюнцию или импликацию?
Нет, неправда.
Объединение тех, кто свободно входит в фе или псе?
Ну в фе и псе могут быть кванторы.
А кто входит свободно вот в такую формулу?
Все, кто входит свободно в фе, но точно не в x.
Понятно это?
Вот сейчас многие из вас сделают крупную ошибку.
Вы должны понимать, что переменная это синтоксический объект.
Это не ее значение.
Вот когда вы видите переменную, вы сразу начинаете думать о том, чему она равна.
Она ничему не равна, это буква.
Вот то, что мы сейчас понимаем под переменной, оно никаким переменным не подвергается.
Это просто буковка.
Понимаете?
Примерно как в функциональном программировании.
Переменная это буква такая.
А значение этой переменной мы ей уже искусственно припишем.
Так, ну мы с вами немножко повозились с этими формулами,
а время у нас уже в значительной степени вышло.
Что нам нужно сделать?
Нам надо на семинаре, вот вы это запишите, я не питаю иллюзий, чтобы вы все это поняли и осознали.
На семинаре надо хорошенько разобраться с тем, что такое формула,
какие переменные входят свободно, какие вообще входят, что такое терм.
Ну, он будет проведен так или иначе.
И еще я дам одно определение, которое может пригодиться для семинара.
Это много времени не займет, но, к сожалению, я переключу ваше внимание от синтаксиса,
от формул опять на семантику, на структуры.
Вот представьте себе, что у нас есть M и N, это сигма-структура.
Давайте сейчас думать в интуитивных терминах, не вспоминайте эту формалистику.
Что это? Вот есть список имен, и есть две разные в интерпретации.
Вот у нас одна сигма-структура, вот у нас тут есть M и какие-то у нас отношения,
которые интерпретируют символы из сигма.
Я так вот напишу. Ну, или неважно.
Ну, что-то там вот есть и носитель, у нее M, а вот у этой носитель просто N.
N красивый, просто N. Вот есть две сигма-структуры.
Я хочу ввести понятие изоморфизма двух сигма-структур.
Что это такое? Альфа – это изоморфизм.
Это изоморфизм M и N. Альфа – это изоморфизм M и N, если выполняется следующее свойство.
Свойство ноль. Альфа – это биекция между носителями.
Сейчас мы дойдем в самое общее понятие изоморфизма.
Вот у нас был, например, изоморфизм порядков.
Я думаю, многим из вас знаком изоморфизм графов.
Бывает изоморфизм групп, да вообще самых разных математических объектов.
Мы дадим определение изоморфизму структуры.
Изоморфизм – это всегда биекция тех множеств, на которых определены структуры.
И кроме того, изоморфизм уважает все отношения функции константы, упомянутые в нашей сигнатории.
Что значит, что он уважает отношения?
Значит, для любого символа отношения, для любого набора элементов из М у нас имеет место следующее.
Как вы помните, R – это же отношение.
Вот у нас набор А принадлежит R в смысле M, когда и только тогда, когда вот такой набор, то есть это что такое?
Это альфа от А1 и так далее, альфа от АН.
Когда такой набор принадлежит нашему отношению R в смысле N.
Уже сразу пример, чтобы это не было голословным.
Например, А1 меньше А2 в смысле M, тогда и только тогда, когда альфа от А1 меньше, чем альфа от А2 в смысле N.
Узнали изоморфизм порядков?
А это общее понятие.
Второе. Уважаются функциональные символы.
Для любого функционального символа валентности N, смотрите, какое интересное равенство имеет место.
Для любой N-ки элементов из M у нас альфа от F, только F берется в смысле M.
Равно чему? Равно F в смысле N от альфы от A.
Смотрите, альфа и F перестановочные.
Сразу пример. Вам знакомый изоморфизм векторных пространств.
Был у вас? Был?
Смотрите, как он устроен. Если я применю альфу к сумме двух векторов в смысле пространства M, то получится что?
Сумма образов, но уже в смысле N.
Образ суммы равен сумме образов. Понятно?
Ну и, наконец, последний пункт – это уважение констант.
Последний пункт – это уважение констант.
В чем же это уважение состоит?
Оно состоит в том, что альфа от константа в смысле M, интерпретация нашей константы в M, равна соответствующей константе в N.
Сразу пример. Опять для векторных пространств.
Альфа от нулевого вектора должно быть равно нулевому вектору. Понятно?
Вот общее понятие изоморфизма.
Ну сколько там у нас? Минус сколько? Минус пять уже.
Ну давайте сворачиваться.
Ну, я понимаю, что понятного мало, но сейчас важно что?
Важно не паниковать.
Ничего страшного здесь нет.
Мы даже ни одной теории не показали.
Мы взяли много разных абстрактных определений.
Но к этому надо привыкать.
Посмотрите, посмотрите, что вы записали.
