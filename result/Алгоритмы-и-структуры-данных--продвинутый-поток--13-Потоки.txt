Сегодня и, видимо, там пару следующих занятий будем говорить о потоках, потому что говорить там
можно много, как говорится, и со вкусом. Значит, поехали. Так, ну, возникает первый, естественный
вопрос, а шо это вообще? Да, ну, как уже говорилось, так будьте внимательны, когда обсуждаете с кем-то потоки,
потому что на самом деле слово «поток» оно слишком многогранно. Потому что в английском языке там
этому слову и только в компьютерсайсе это слово «поток» соответствует три принципиально
непрераздах слова. Это «стрим», это «флоу» и это «тред». Ну, со стримами вы уже познакомились активно,
я думаю. Ну, тред – это то, что связано с многопоточным программированием. Ну, с этим вы
познакомитесь, видимо, семестр в четвертом. Нет, почему? Смотрите, просто продолжение данного
курса будет курс параллельной алгоритмы, где вы впервые столкнетесь с той частью C++, которая
отвечает за всякие параллельности, треда и так далее. И после него уже в пятом семестре будут
распределенные вычисления. Ну, может быть, у меня, конечно, среди не устаревшие, но тем не менее.
Но вообще скорее было так. Ну, раньше в этом месте называлось распределенные параллельные вычисления.
Суть одна. Это не то, что мы будем изучать сегодня. Сегодня в английском языке то,
что мы ищем, называется «флоу». Это может быть максимально похоже на поток, который течет
где-то там, куда-то вода. Ну, в некотором смысле да. Потому что, значит, если вводить формальное
определение, то это звучит так. Определение. Смотрите, здесь понятие сеть. Вот. Это. Это
мистический кортеж. Значит, скажем, V, E, C. Вот тут, кстати, на самом деле два определения есть.
Вместо E поставить V на V. Ну, сейчас увидите, что имеется в виду. Да, C, S, T. Значит, что это такое?
Значит, V, E. Это, соответственно, ориентированный граф. Ориентированный исключительно. Так, значит,
ну, пока ничего не тривиального. А вот дальше начинается интересность. Значит, C. Это так называемая
пропускная способность. Формально говоря, это. Так, формально говоря, это функция, которая каждому
ребру ставит в соответствии. Не отрицательное число. Да, не обязательно целое, боже упаси. Ну,
то есть, 99 процентов случаев у вас, конечно, это будет целые числа, что прихотает, но. Да, но,
строго говоря, в общем, целых чисел тут быть не обязано. Так, она называется, внимание, пропускная
способность. Вот, копайся. Ну вот, значит, S.
Значит, это просто вершина. Это просто вершина. Какая это вершина? Называется она исток. А T. Это
вершина, не совпадающая с истоком. Она называется исток. Ну, сразу скажем, да, исток. Но на английском это
называется обычно source. Ну вот, ну а здесь обычно употребляется слово sync. Хотя иногда встречалось
слово target, откуда, по-видимому, и буква T. Вот. Ну, в принципе, все понятно. Да, как бы просто набор
с пяти. Значит, спрашивает, какой глубокий смысл за этим всем хранится. Вот. Ну, давайте попробуем
нарисовать. Ну, то есть, нарисовать тут, в общем-то, достаточно тривиально. Значит, обратите внимание,
никаких ограничений на структуру самого графа нет. Значит, конкретно в таком виде, в общем-то,
можно, то есть, может быть, нарисован абсолютно любой граф с абсолютно какими-то произвольными
ребрами, может быть, даже кратными. Пожалуйста. Шесть, четыре, циклы, пожалуйста, там, сколько угодно.
То есть, вот как-то вот так, вот там и так далее. Три, два, там пять. Ну, теоретически можно даже
ноль. Непонятно зачем, правда, но вот. Да, и конечно же, да, ребра могут вести и в исток, пожалуйста,
сколько угодно это. Ну, вот, то есть, вот как-то вот так. Ну, то есть, обычно они, то есть, на практике
оказывается, что они чаще всего бесполезны, но тем не менее. Формально ничего этому не противоречит.
А, ну, и конечно же, да, ребра могут и вести друг в друга. Такие-то, ну, быть таким вот,
взаимообратными тоже, пожалуйста, это сколько угодно. Или вот что-нибудь еще, например, так,
вот тут, конечно, тоже. Давайте четыре, тут какой-нибудь, тут какой-нибудь еще, там два,
пожалуйста. Вот. Ну, вот так может выглядеть какая-нибудь сеть. Ну, пока, конечно, не очень понятно,
о каком, собственно, глубокий смысл этого всего мероприятия. Вот. Ну, давайте смотреть. Ну,
для того, чтобы, может быть, нот больше как-то познакомится, да, можно ввести понятие поток.
А можно сказать сразу идейно. То есть, что себе можно вообще в этом месте вообразить? То есть,
обычно эта карта чего-нибудь, например, ну, чаще всего приводит, чтобы уж было совсем про поток,
это поток про, ну, вот это водопровод. То есть, говорится следующее, что у нас вот водопровод
состоит из вот нескольких узлов. Каждый узел умеет там принимать воду и ее как-то перенаправлять.
Мы хотим наладить какой-то постоянный набор, постоянное притекание воды. При этом мы хотим,
чтобы вода втекала в систему в истоке и вытекала из стока. Ну, то есть, перенод,
а внутри перемещалась из S в T. И как-то текла. Ну, что значит как-то текла? Тут вот очень аккуратно
надо это, собственно, понимать. Значит, смотрите тут как. То есть, это не один раз, что она там
притекла и забыли, а постоянно. Потому что теоретически, конечно, можно было бы просто,
если мы хотим, чтобы какой-то объем жидкости у нас протек от S в T. Что делать? Ну, берем любой
путь и по чуть-чуть, по чуть-чуть, чем за какое-нибудь большое время протекаем. Но не эта наша цель. Наша цель,
чтобы поток протекал постоянно. Так, чтобы у нас, по каждой трубе в единицу времени, каждую единицу
времени притекало какое-то количество жидкости с тем расчетом, чтобы из S в T в эту же единицу
времени притекало как можно больше. Так, ну и все знают, это неинтересно. Хорошо. Ну, тем не менее.
Значит, что значит в единицу времени? Ну, то есть, это означает, что сразу себе можно вообразить,
что это вы не первый момент времени рассматриваете, а вот, предположим, что уже, допустим, может быть,
прошло какое-то большое время, и, так сказать, уже устакарилось, сколько воды будет везде идти. И вот,
например, какой-нибудь типичный поток, это вот вы решили. Но при этом зачем же нужны вот эти пропускные
способности? Ну, пропускные способности нужны для того, чтобы ограничить количество воды,
которая может протекать по трубе. Ну, потому что, понятно, в реальной жизни вряд ли вы будете
там бесконечное количество воды вообще за секунду через трубу прогонять. Просто физически не
сможете этого сделать. Поэтому вот так говорим, что через эту трубу единицу времени течет,
может течь четыре единицы воды. Ну вот, а здесь целых пять, а здесь два, ну и так далее. Вот.
Поэтому вот так и будем делать. Вот, например, какой-нибудь поток может выглядеть так. Вот мы
решаем, что давайте у нас будет вот по, скажем, вот этим вот трубам течь три единицы жидкости.
Например. Ну вот это вот в принципе тоже поток. А можно еще параллельно, то есть объявляю, что вот
тут по четыре. То есть смотрите, то есть как бы один раз запустили, и мы обнаружим, что в каждый
момент времени у нас, скажем, по каждой из этих труб течет по четыре единицы жидкости.
Да. Да, мы сами решаем, но с некоторыми ограничениями. Вот сейчас мы пытаемся,
по крайней мере, понять интуицию, с которой мы будем сейчас писать формальное определение. То есть
мы его, конечно, напишем. Но интуиция здесь следующая, что как бы каждую единицу времени у нас
здесь должно вот течь четыре единицы жидкости. Спрашивается, откуда они берутся? Но заметим,
что браться они могут. То есть, конечно, для того, чтобы по этому ребру вот из этой вершины в
единицу времени вытекало четыре единицы жидкости, то, наверное, за прошлую единицу времени,
наверное, эти четыре единицы должны туда втечь. То есть в принципе можно даже еще усилить,
потому что заметим, что мы тут можем еще одну единицу жидкости в пути. Но тогда у нас будут
проблемы. Вот нам что в этом смысле не нравится? Тогда получается, что вот в единицу времени вот
сюда втекает на одну единицу больше, чем вытекает. Это немножко нас не устраивает,
потому что получается, что в этой вершине будет бесконечно много воды собираться. Это черевато
бабахом. Вот. Но нас, соответственно, да, это не очень устраивает. Поэтому мы сделаем вот. Но мы
можем, смотрите, в каждой вершине мы можем поток распределять так, как мы считаем нужным. То есть
мы не обязаны эти пять единиц жидкости потом пускать по одной трубе. Вот. Вообще, ну, в некотором
смысле распаралились, конечно, но скорее распределить. Вот, например, в данном случае вот я, например,
сейчас вот от балды что-то рисую, можно вот так сделать. Ну да, вот казалось бы. То есть мы просто
берем эту единицу потока, отправляем сюда, и здесь вот может течь уже тоже четыре единицы потока,
которые притекли три отсюда, одна отсюда. Правда, есть одна маленькая проблема. Да, собственно,
не очень понятно, а куда, собственно, девать. Ну, куда можно девать? Так, ну ладно, тут без вариантов,
можно тут, конечно, сказать, а давайте вот так вот потекчет одна единица. Нет, это, ну вот. Но
тогда получается, что здесь все равно лишний один. Значит, то тогда давайте напишем вот единицы сюда.
И, ну, допустим, единицы сюда. Можно было, но мы разбираемся в определениях, а не то,
как было проще. То есть я вот просто привожу примеры, как и что мы вообще в принципе можем.
Вот. И так, то есть формальное определение действительно звучит, теперь вот может звучать так.
То есть вот определение пишем. Значит, поток в сети, там g равно, соответственно, VECST. Значит,
но здесь, на самом деле, можно ввести два. Ну, на самом деле, тут можно два определения ввести. Но,
значит, вот основное программистское может звучать так. Это функция f, которая каждому ребру ставит в
соответствии к какой-то число. Кстати, обратите внимание, на этот раз оно может быть отрицательным,
у которого выполняются следующие, как-то ни странно, два условия. Ну, условия номер раз.
Что для любого ребра E, конечно же. Так, хотя, кстати, интересно. Хотя нет. Конкретно в этом
случае мы все-таки запретим себе все-таки ставить. Давайте так скажем. Значит, у нас будет 0,
все-таки меньше либо равно f от E меньше либо равно c от E. Все-таки, говорим, что вода у нас течет
все-таки в определенную сторону, поэтому давайте вот без этого. Ну, было оно. И второе. Все-таки
напишем себе 0. И второе, как мы уже увиделись, в каждую промежуточную, обратите внимание,
промежуточную вершину. Сколько воды втекает, столько идет, чтобы втекать. Что это значит?
Это означает, что для любой вершины В, не совпадающей ни с истоком, ни со стоком, верно,
что сумма f от E равна сумме f от E. Где здесь E, где здесь вот так я напишу. Значит, да, все E это
ребра, но разница в том, что здесь мы рассматриваем входящие вершиновые ребра, а здесь мы рассматриваем
исходящие. Обратите внимание, это должно быть верно только для вершин, не совпадающих с
истоком. Истоки-истоки, естественно, это все не так. Так что вот такая диспозиция. Вот такое,
вот формальное определение такое. Вот формальное определение такое. Ф, да, но поток это f. Где? Тут
c из ev. А, ну из evr, но все-таки мы пишем, что f от E больше либо равно 0. Я просто это здесь написал,
но на самом деле, да, тут, конечно, по-разному это можно вводить. Сейчас я написал в том виде,
в котором, на самом деле, вы в подавляющем большинстве случаев будете это программировать.
Ну, на самом деле, не совсем так вы это будете программировать. Значит, чуть позже поймем,
почему. Вот, но пока же вот действительно, определение вот просто такое. То есть можно это
воспринимать как количество воды, хотя не менее красивое, может быть, даже где-то более жизненный
пример, это на самом деле представить, что это транспортная сеть. То есть это означает,
что точки – это города, а ребра – это дороги. И по каждой дороге у вас там информация, сколько
машин вы можете там в единицу времени по ней пускать. Ну, тупо там, сколько полос условно там
на дороге. Ну, конечно, да, мы здесь, конечно, немножко не учитываем, что там у дорог есть
какие-то длинные. Впрочем, это не особо и принципиально. Нет, хотя нет. Ну, хотя да, не особо
и принципиально, потому что после того, как сеть там некто загрузилась, там все дороги стали в
пробках. Ну, не стали в пробках, а едут уже там с постоянной скоростью какой-то, то, действительно,
в каждую вершину начинает вот прибывать указанное количество машин, отбывать указанное количество
машин, и вы там из истока пускаете какое-то количество машин. Вот. Ну, правда, ну вот. Ну,
теперь вы искали вопрос. Какая задача? Как вы, возможно, слышали? У нас есть задача о максимальном
потоке. А теперь внимание, вопрос. А что такое максимальный поток? Точнее, что означает, что
какой-то поток больше, чем какой-то. Ну, казалось бы, да, логично. Действительно, так и пишем,
определение. Ну, да. Так что, модуль f, допустим, я ее напишу так, с индексом s. Сейчас поймете,
почему. Индекс s. Просто суммируем все потоки, которые вытекают из вершины s. Ну, то есть,
казалось бы, да, все просто. То есть, это мы понимаем, сколько у нас, собственно, машинок вытекает,
это выезжает в единицу времени. Но здесь определение запускает одну маленькую подрядку. Вот прямо сейчас
вы видите, что у нас из истока выезжает аж на целых восемь машин. Восемь. Эта единица не имеет
кресла. Вроде все удобно. Можно сказать, что четыре из этих машин едут по такому пути. Одна из этих
машин едет по какому-то экзотическому пути. И еще три по такому. Впрочем, по-разному. Можно
говорить по такому пути, а можно сказать, а можно на самом деле еще отметить, что есть такой оригинальный
вариант. Одна единица значит четыре. Можно вообще так сказать. Четыре едут вот так. Одна едет вот так.
И какая-то одна машинка, вот мы ее загрузили, она тут катается. И еще три вот так. Да. Ну,
как бы, формаль-то не противоречит. Все еще круче. Просто на самом деле конкретно даже эта сеть может
дать нам следующую подляну. Смотрите, мы выпускаем еще одну машинку. Значит, запускаем ее сюда. Вот едет,
она едет. Пропускает ее сюда. Машинка. И тут машина так. Что, куда едет? Ой, пойду домой.
Нет, ну оно тут было. Тут еще четверочка стояла. Ну да. Ну, догадывайте, да. Но для начала,
отец. Потому что это как бы дает возможность как-то что-то накручивать. Потому что как бы вот
получается, что мы теперь можем гордо отчитаться, что у нас теперь мы пускаем в Т-9 машин. Правда,
у нас появилось, по-моему, вот как-то слово откат как-то в голове начинает крутиться как-то
активно. Потому что одна как-то к нам же и вернулась. То есть покаталась, покаталась,
вернулась. Но определению это не противоречит. Но как-то, тем не менее, до Т они все не доезжают.
Поэтому, соответственно, мы вынуждены, поэтому мы думаем, что как бы каждая машинка, ну,
по крайней мере, идейна. Когда она выезжает из С, она, наверное, должна либо вернуться в С,
либо доехать до Т. Поэтому мы вычитаем, поэтому вот в таком определении мы должны
вычесть то, что вернется в С. Так что вот такая красота.
Ну, как сказать, обычная нота. Обычно так и называют FPS. Ну, вообще, это называется величие. Ну, да.
Мощность потока. Или я, почему-то все время скатываюсь в названии величина потока. Ну,
такая, может быть, не совсем формально, потому что больше. Вот. Но на самом деле, конечно, теперь можно
заметить, что раз есть FPS, то можно мерить потоки по-другому. Сколько втекает в Т. Ну, то есть понятно.
Думаю, догадываетесь, что тут должно быть написано. Значит, E лежит в E. E.finish равно S минус.
Да, только Т, конечно. То есть сколько минус, соответственно, сколько оттуда вытекает, это мало ли. Тут, конечно,
на этой картинке это невозможно, но вообще говоря, тут какой-то цикл можно накрутить и на Т при желании.
Вот. E.start. Вот. То есть вот такими двумя способами можно считать, насколько круто у нас работает
наша сеть. То есть, как бы, да, сколько товаров выпускает S и сколько доходит до получателя.
Ну, вот и какая-то вот вопрос уже в связи вот с этими циклами и прочим. А это одно и то же. Вот,
и кажется, интуитивно, да, что вроде как вот у нас машинки, как бы, выезжают из Т, из S и доезжают
до Т. Или возвращаются в S, и тогда мы их не учитываем. И тогда мы их тут не учитываем. Вот. Ну,
мало ли, может быть, там как-то неудачное определение ввели. Вот. Но выясняется, да, что все-таки,
то есть есть такое уже мистическое первое утверждение, такое нетригиальное, что на самом
деле, да, вот в таком виде, в котором мы это определили, это одно и то же. То есть, обратите
внимание, без вот этого минуса это не было бы одно и то же и примером является просто вот этот
поток. Видите, да? Потому что выезжает из нас больше, чем въезжает в Т. Но как же это доказать?
Ну да. Ну да, действительно, можно, да. То есть, действительно, доказать, что тут звучит так,
что пишем 0 равно сумме всех потоков, точнее так, вот так, сумма по всем вершинам,
сумма по всем ребрам, исходящим из вершины V, F от E. Но я тут не буду E принадлежит E писать.
Минус сумма по всем V. Значит, суммируем по всем V количество машинок, которые, наоборот, въезжают.
Почему это равно нулю? Ну просто потому, что это одно и то же. По факту мы пробежались по всем
ребрам и просуммировали F, правда? То есть, просто вопрос лишь только в том, как мы группируем
слагаемое, правда? Ну а теперь давайте поиграемся еще кое с чем. То есть, теперь можно это даже более
аккуратно написать. Давайте теперь посуммируем по всем V и тут внутри просуммируем все входящие
и все исходящие. Вот. Но у нас есть маленькое утверждение, что каждая такая разность равна нулю.
Да, маленькая оговорка. Кроме S и T. То есть, вот теперь мы уже действительно начинаем вот этим вторым
условием активно пользоваться. То есть, мы начинаем пользоваться и, то есть, так вот пишем прямо по
второму условию. Видим, что действительно то же самое мы можем сказать. То есть, на самом деле,
мы можем выкинуть все вершины, кроме истока истока. То есть, мы можем сказать, что это равно, значит,
E.start равно S. Значит, минус E.finish равно S. F от E. Плюс то же самое по T. E.start равно T. И тут
E.finish равно T. Минус. Вот. И это равно чему? Ну вот. Но теперь замечаем, что вот это вот в точности вот
Fs. Вот, обратите внимание. Да, обратите внимание, именно минус. Видите, да? Тут finish start. Поэтому
минус, да. Вот такое вот на самом деле несложное доказательство. Ну, то есть, которое внутри себя
просто вот имеет, да, что. Вот, которое действительно показывает так более формально, да, что, да,
если у вас нигде вода не скапливает, ниоткуда, кроме исток, появляется только в истоке и исчезает
только в стоке, то все, что появилось в истоке, должно исчезнуть в стоке и наоборот. Ну вот. А все
остальное вот, соответственно, взаиму уничтожается. Вот. Поэтому, соответственно, можно ввести
определение, по сути, модуль F. Ну, в общем, вот. Выбирайте сами, короче, чему. В общем-то,
но чаще всего обычно, ну, конечно, более удобно обычно считать именно в таком виде, но на самом
деле на ваше усмотрение там при написании конкретного кода на самом деле можно и так и так, суть одна.
Ну, в общем, чаще всего сама величина потока будет еще из немножко других соображений появляться.
Вот. Так что вот такая красота есть. Значит, это вот в программистском виде определение вот
такие. Вот. Ну и, конечно, теперь остается только сформулировать задачу о максимальном потоке.
Ну, как вы думаете, как формулируется задача о максимальном потоке?
Ну да. Найти, действительно, задача о максимальном потоке. Найти поток с максимально возможной
величиной. Ну, для заданной сети. То есть, да, фиксированный граф, фиксирована пропускная
способность и фиксированный исток-исток. И сразу вот такой вопрос на разминку. А существует ли
максимальный поток? Хорошо. Начнем с разминки. Существует ли просто поток? Нет. Все гораздо
проще. Заметим, что определение не запрещает нам нулевой поток. То есть, просто давайте скажем,
что по нашей сети ничего не будет течить. Ну, как в этой задаче. Один водитель автобуса израсходовал
за месяц 89 литров бензина, а другой вообще никуда не ездил и никого не возил. И поэтому
сэкономил в 30 раз больше. Ну вот, да, задача. Сколько израсходовал за месяц первый водитель,
учитывая, что им в начале месяца выдавали одинаковое количество бензина. Вот можно по этому
пути пойти. То есть, как минимум нулевой поток работает. Но это, конечно, не самый большой поток,
который теоретически мог бы быть. Хорошо, поток в принципе существует. А существует ли
максимальный поток? Любые два сравнимы. И самое главное, да, заметим, что величина
потока не может происходить действительно в сумме пропускных способностей, исходящих из
стока рыбы. Чего конечная? Ну, сэшка конечная. Но само по себе максимальности потока это не
гарантирует. Существование максимального потока. Ну вот, смотрите. Интервал от 1 до 3. Полуинтервал
это же ограниченное множество. Ну вот теоретически. Ну-ка, давайте, да. Нет, вы, я думаю, там поможет
Матальян, если вы уже изучали слова, которыми можно в этом месте ругаться. Ну вот, может быть так,
что там существует какой-нибудь супремум, что там потоки бесконечно близко к нему существуют,
а вот конкретно стока не существует. Ну-ка, давайте такое упражнение по вотанализу. Что? Граф конечен.
Бесконечно графов мы в принципе не рассматриваем. А зачем нам ребро из стока в исток?
Особенно если вот напоминаю, что мы тут нарисовали себе целый числ, но потоп не обязан быть целыми
числами, я тут могу и там Е-машин пустить. Путей тогда, но у нас может быть бесконечное множество
пропусков способностей, которые мы пропускаем. Да-да-да, просто давайте сразу докажем Теремфорда
Фолкерсона. Да, прям сразу. Не, а без этого никак сразу. Нет, мы ее, конечно, докажем, куда мы денемся.
Ну смотрите, ну потому что я тут просто опускаю целое число машинок, да. Но я ж могу пустить половину
машинок, хетер-машинок, корень из двух машинок. Не говоря о том, что пропустые способности тоже могут
быть там, я не знаю, пьетом, что-нибудь в степени корень из двух. Да. Кого конечное число? Конечное,
и что? И что, а то, чтобы они могут течь, бесконечное число. Бесконечный число вариантов, да, они
неограниченные, но бесконечные числа. Можно сказать, что мы рассмотрим множество всех пропускных способностей,
и нам нет смысла пускать по какому-то ребру число, которое не лежит в этом множестве.
Сейчас чего пускать? Что значит нет смысла? Какой тут смысл, куда кого пускать, это еще вопрос.
Мы рассмотрим, то есть я так понимаю, идея в чем. Рассмотрим произвольный путь, если рассмотрим его
пропускные способности. И вот для данного f какой-то мы f взяли и смотрим. Если при данном f у нас не достигается
ни на одном либре, то что f от e равно c от e, что есть в рамках? Нет, ну есть понятно, нет, если существует путь, на котором f от e всегда меньше,
чем c от e, то поток можно увеличить, безусловно. Но как бы, но допустим, как бы у нас произошло-то так,
что какой бы мы путь не взяли от s до t, и тогда никакой путь так увеличить не получится. И что,
следует ли из этого, что он максимальный? Ну правда, это немножко да, потому что мало ли. Хочется,
потому что если рассматривать такие потоки, где достигается на любом пути. Ну вообще минимизировать
количество вариантов так может не получиться, как минимум там по всяким причинам в духе. Там,
допустим, я не знаю, то есть допустим тут 10, 10, 10 и тут допустим 5 пропускные способности. Тогда
тут может быть 5 единиц жидкости, но распределять их здесь я могу просто огромным количеством
вариантов. Нет, бесконечно. Ну другой вопрос, что да, конечно, с точки зрения задачи о потоке
кратные ребра могу, конечно, сжать в одно, но это просто как пример. Потому что это как бы,
если вам не нравится кратные ребра, то как бы еще можно лишние векшины увести.
Ну да, пи, там, допустим, я говорю е пополам, вот это вот. Но сумма будет больше пяти. Так
что все шо угодно может быть. Так что да, помните, да, у нас вы в действительнице. Вот так все же делать.
Да, изучим свойства максимального потока и с ним окажем, что он есть.
Чаще, по-моему, делают, изучают свойства максимального потока, находят противоречия
и доказывают, что его нет скорее. Вау, я не помню такой схемы.
А, ну тогда ее в явном виде надо привести тогда. Ну это приводится, но там прямо в явном виде
потом приводится, действительно. Не, ну я тут не случайно, как мотоналис все-таки, а не линал.
Ну, а почему?
Ну, потому что наш потолк может не смотреть.
Чего?
Если бы там было не столько строгое, то там уже можно было.
Чего, чего, чего?
Да, боже мой, погодите вы с этим разрезом. Не, все гораздо проще.
Да нет, в данном случае все гораздо проще. Заметим, что поток, помимо всего прочего, это вектор из чисел размера Е, правда?
Ну, модуль Е, хорошо. Ну, естественно, Е не то, которое там основание литеральных регулиров, а вот это вот.
Я понимаю, какое Е.
Ну вот, то есть как бы поток мы можем задать просто как бы списком, вот просто для каждого ребра приведя поток.
Ну, под множество. Вот, но самое приятное, что множество, я утверждаю, что самое интересное, что множество потоков оно замкнутое.
Есть такое подозрение.
Вот.
Хотя, чтобы сумма потоков прогнялась к потоку.
Ну, действительно, просто уже можно заметить следующее, что, предположим, что у вас есть последовательность потоков, которая сходится как вектор В в степени Е.
Сходится.
Теперь заметим следующее, что у нас, если, что, заметим, что раз она сходится, то сходится потокично.
Есть такое.
Вот, потокично.
Что значит, что сходится потокично?
Ну, это значит, что, если рассмотреть последовательность этих векторов, то как бы по каждой позиции мы получаем сходящуюся последовательность.
Придел вектор функции это предел координата.
Вот.
А значит, мы можем взять эти пределы координатные?
Ну, да.
То есть, можно рассмотреть.
И можно, и я утверждаю, что тогда этот предел, как вектор, он тоже будет представлять из себя поток.
Прикол.
Причем, более того, потока нот.
То есть, почему поток?
Ну, потому что, во-первых, ну, как бы, если в каждом из векторов последствия вот это было верно, то и в пределе, наверное, это тоже будет верно, потому что сумма конечная.
Вот.
А самое главное, что если на каждом ребре там все числа были от 0 до C от E, то и предел будет от 0 до C от E.
Вот.
То есть, получается, что множество потоков замкнуто.
Ну, множество потоков замкнуто, и величина потока предела равна, естественно, пределу величин потока.
Ну, тоже очевидно, правда?
Ну, не особо, но мы так.
Что, не очевидно?
Да ладно.
Вы мотонали сдавали в первом семестре?
По-моему, я, конечно, может, плохо представляю, но у меня ощущение, что, по-моему, если это не просто, то у вас должны были на передачу отправлять.
Нет?
Там какой-то другой магии сдавалось.
Странно.
Геометрия и кривую ВРН это...
Да какая кривая?
Ребят, вы чего?
Просто...
Ну, конечно, можно просто, даже если так, без высоких материй просто работать крестьянским образом.
Посмотрим последовательность потоков, величины которой сходятся к этому супремому.
Просто последовательность потоков рассмотрим.
Теперь заметим, у каждого из этих потоков по первому ребру что-то течет.
Эта последовательность ограничена, поэтому из нее можно выбрать сходящуюся под последовательность.
Это утверждение из вашего колоколя в первом семестре, если что.
Вы его как-то сдали.
Вот.
Поэтому давайте выберем сходящуюся под последовательность.
Все, выкинули.
Теперь рассматриваем по второму ребру.
Тоже от нее оставляем сходящуюся под последовательность.
И так далее.
И повторяем эту операцию Е раз.
То есть получаем...
Получается последовательность потоков, которые, собственно, сходятся куда надо.
То есть сходятся по точечно куда надо, и очевидно уже, что это поток и со всеми суммами.
Но.
То есть на самом деле никаких термин форда Фолкерсона тут не надо.
То есть просто вот...
Просто совсем базовые соображения с первым семестром от анализа.
Как-то, да.
Нет, надо подсунуть, потому что на колоколь мне надо такую задать, как упражнение.
На колоколь мне будет сильно проще доказать, видимо.
Вот.
Так вот.
Ну хорошо.
И так максимальный поток существует.
В чем именно как поток, а не как супремум.
Но очень хочется его найти.
Вот.
Ну, действительно, как же это можно было бы делать?
Вот.
Но на самом деле, да.
Как же его можно было...
А как его делать?
Ну давайте вообще...
Ну, начнем думать.
Как вообще можно искать поток?
Ну в принципе...
Смотрите.
Начальная идея.
Ну вот, хотя...
А, ну да.
Ну вот.
Ну давайте попробуем выжать максимум, действительно, из такого программического подхода.
Вот.
Ну на самом деле, конечно, первая идея.
Как искать максимальный поток?
Вот данная сеть.
Ну конечно, первый жадник, который возникает, это давайте искать пути от С до Т, вдоль которых можно увеличить поток.
То есть вот так вот просто.
Если мы нашли поток, вдоль которого там...
Путь от С до Т, вдоль которого ребра загружены не по максимуму, то, наверное, логично, что...
Вот, например, вот какой-нибудь...
А нет, тут такого пути уже следу нету, да?
Ну, то очевидно, что тогда давайте вдоль этого пути, значит, увеличим поток и возрадуемся.
Но возникает маленькая проблема.
Хорошо, вот мы так сделали, обнаружили, что в пути нет.
Просто вот очередной ДФС не привел к успеху.
Внимание, вопрос.
Так, является ли найденный поток максимальным?
Да или нет?
Ну, интуитивно кажется, что да.
Кажется, нет.
Так, ооо...
Есть контраблименты.
Ну да.
Потому что, к сожалению, выясняется, что поток иногда можно пустить не оптимально.
Хотя да, иногда хочется где-то там перепустить.
Ну вот, то есть тут проблема...
Вот, например, один из самых классических примеров, вот такой.
Смотрите.
Ну вот, как тут можно пустить поток?
Тут можно его пустить...
Ну да, вот так.
Тогда обратите внимание, вы просто взять и увеличить этот поток, вы не сможете.
Ну потому что ДФС у вас скажет, что по этому ребру идти нельзя.
Вот поэтому можно, поэтому можно отсюда выйти некуда.
Но тем не менее, как-то есть подозрение, что это мы просто неудачно пустили поток.
Мы же могли пустить вот так, так и получить размер 2.
Да, поэтому такой поток максимальным не является.
Кстати, такой поток называется, кстати, на будущее блокирующим.
Блокирующим.
То есть это означает, что поток называется блокирующим, если не существует в исходной сети путь от СДТ.
То есть не существует пути от СДТ, на каждом ребре которого F от E строго меньше, чем C от E.
Ну то есть улучшить.
Да, ну то есть так, ну да, что значит улучшить?
Улучшить его можно, там типа все снести и построить заново.
А вот прям конкретно найти пути вдоль него, что-то пустить, так нельзя.
Но тут, правда, вот аккуратно надо всегда провести.
Этот поток называется блокирующим.
То есть он в некотором смысле является локальным максимумом.
Да, он является локальным максимумом.
Но действительно, как мы уже на самом деле начали убеждаться, еще одно важное свойство потока заключается в том, что обычно если у нас есть какой-то поток, то его можно декомпозировать на пути.
То есть можно еще раз формально блокирующий поток, такой поток, который нельзя увеличить не по какому пути, да?
Да, то есть ну да.
Ну формально так, не существует пути от СДТ такого, что на каждом из ребер этого пути F от E строго меньше, чем C от E.
Но, конечно, это выглядит, конечно, да.
То есть как вы как опытные программисты должны, конечно, понимать, что само по себе это, конечно, не означает, что это оптималь, это означает, что конкретно жадно улучшить не получится.
Причем не просто жадно улучшить, а улучшить конкретно таким способом.
Ну вот, то есть, собственно, видите пример, что само по себе это еще ничего не значит.
Хотя, с другой стороны, эта жадность уже означает, на самом деле, больше, чем кажется.
Потому что можно заметить в принципе, что нельзя теперь, то есть фактически можно теперь ввести, кстати, эквивалентное определение, что поток называется блокирующим, если нельзя взять некоторые F-ки и улучшить их так, чтобы поток остался потоком.
То есть, альтернативное определение два.
Поток называется блокирующим, если не существует, если не существует потока строго большей величины, который мажоригует его по каждому ребру.
Да, то есть нельзя строго увеличить.
Нет, просто потока не существует.
Вот, предположим, мы берем поток, иногда можем взять поток и взять некоторые ребра и их увеличить.
И так, чтобы поток остался потоком.
Так вот, можно сказать, что поток является, до самом деле, блокирующим, если так увеличить, именно увеличить строго нельзя.
В чем некоторые ребра, не обязательно все.
То есть, легко заметить, что первому определению это полностью эквивалентно.
Ну, потому что, заметим, что если вы посмотрите само увеличение, насколько вы все увеличили, то то, что вы увеличили, оно тоже удовлетворяет свойством потока, правда?
Ну, а в каждом потоке, ну, а заметим маленькое приятное утверждение, любой поток величины больше нуля, можно декомпозировать на пути.
Вот, кстати, еще одна.
Ну, а заметим маленькое приятное утверждение, любой поток величины больше нуля, можно декомпозировать на пути.
Вот, кстати, еще одно утверждение, которое вам потребуется уже там в третьей задаче домашнего задания.
Декомпозировать на произвольные пути?
Ну да, то есть, вот вам...
Нет, смотрите, дан поток, да?
Вот мы в начале уже этим занимались, да? Вот мы хотим выезжать в восемь машин, там, девять машинок, да?
Вот мы очень хотим, собственно, для каждой машинки преследить, по какому маршруту она едет.
Вот, например, в нашем случае четыре машинки едут вот так, одна машинка, допустим, едет вот таким вот образом, и три машинки еще вот так едут.
Вот.
Ну, просто это очень странно, декомпозиция, вот, примерно, приводили, когда, значит, СТ, у нас вот здесь просто разделение происходит, а потом обратно мы сломываемся.
Ну да, ну и что?
Ну, его какая-то там будет декомпозиция.
А в чем проблема?
Нет, ну декомпозиция просто в данном случае не подразумевает, что каждое ребро лежит только в одном ребре.
В одном ребре.
То есть это декомпозиция, ну, в смысле, что каждая ребро только в одном пути лежит.
То есть как бы мы декомпозируем не ребра, мы декомпозируем поток.
Поэтому несколько единиц потока, несколько путей декомпозиции могут проходить через одни и те же ребра вполне.
То есть декомпозиция заключается в том, что каждый единиц потока будет находиться в своем пути?
Ну типа того, условно.
Когда напоминаем, что пути бывают, что бывают какие-нибудь там иррациональные ребры в потоке.
Так что поэтому не совсем корректно говорить именно про единицы.
Вот.
Но в данном случае эта декомпозиция может выглядеть так, что вот у нас есть, смотрите, четыре единицы потока текут так.
Одна единица потока течет вот так.
Видите, то есть они пересекаются даже.
И, допустим, три единицы потока.
Нет, не три.
Щас.
Чего?
Щас, погодите.
Давайте так.
Так, тут мы вроде все адекватно нашли.
Тут везде один, да?
Так, сколько тут осталось?
А, ну поэтому пока одну.
Ну да.
Получается интересно, что здесь прошло три единицы потока, здесь должно было пройти.
Но, правда, оказалось, что это еще не все.
Если внимательно посмотреть, то окажется, что вот поэтому ребро прошло четыре из пяти.
Потому что, понимаете, мы еще тут запустили вот такой циклик.
Ну вот.
То есть заветим, на самом деле, поэтому отсюда уже следует, на самом деле, что декомпозировать только на пути у вас поток скорее всего может не получиться, в принципе.
Вот, на самом деле, сразу вы можете обратить, кстати, на себя такое интересное внимание, смотрите, на такой вот интересный факт.
Вот.
Вот обратите внимание.
Это тоже поток.
Ну, не запущать ничего.
Вот, то есть это важно.
То есть если из истока ничего не вытекает, это не значит, что ни по какому ребру ничего не течет.
То есть, другого вопроса, что величина этого потока, конечно же, ноль.
Но факт остаётся фактом.
То есть вода не обязана, прям, обязательно вытекать из истока и втекать в исток.
Она может вытеки из истока и втеки в него обратно.
Может там, вытеки и из истока и вернуться обратно, может вот просто вот по циклу гонять.
Вот здесь вы тоже в декомпозиции могли, что есть путь вот такой, и есть вот там одна машинка, которая тут бегает.
Поэтому формально говорят не о декомпозиции на пути, но о декомпозиции на пути и циклы.
Прятая?
Да, нет, наверное.
Почему вы точите циклы?
Тогда пути будут только из СФТ, а циклы где угодно.
Наверное же, что циклы можно выкинуть и поток не уменьшится.
Чаще всего, конечно, если у вас задача найти максимальный поток и декомпозировать уже его, то да, то в принципе циклы вы можете не искать.
Но на всякий случай, да, стоит только, может быть, существование этой декомпозиции доказать, заодно выясним, сколько у нас в пути и циклов декомпозиции может быть вообще.
Но доказательство на самом деле очень простое.
Оно же практически алгоритм.
То есть, предположим, что из С, например, что-нибудь вытекает, да?
Ну, что поток можно декомпозировать.
Ну, идея на самом деле очень простая.
Значит, ну как будем декомпозировать?
Можно даже там без каких-то там заломных соображений.
Просто берем вершину С, извините, что-то вытекает, раз поток не нулевой, да?
А давайте пойдем ДФСом по ребрам, по которым течет что-то положительное.
Вот пойдем, да?
Вот будем просто жадно идти в каждой вершине, говорим, что раз в нее что-то входит, значит в нее что-то выходит, потому что вот, да?
Это хорошо может произойти.
Тогда у нас может быть два разных окончания.
Либо мы в какой-то момент тупо придем в вершину Т.
Или вершина С.
А каким ребрам еще ждем?
Вот тем, по которым течет не нулевой поток.
Ну, где вот Ф больше нуля.
И вот либо мы найдем, либо мы зациклимся.
Может быть в вершине С.
А может и нет, даже не важно.
То есть мы найдем либо путь от С до Т таким образом, либо цикл.
Но тогда что с путем вот этим вот?
Что с циклом мы в этой ситуации сделаем одну и ту же, один и тот же финт ушами.
Давайте рассмотрим все Ф-ки на этом пути.
Выберем из них минимум.
И скажем, что там минимум.
Он там допустим выяснил, что минимум равен два.
И скажем, что здесь течет две единицы потока.
И вычтем эту двоечку из всех.
Понята логика, да?
Вот. Ну и из цикла то же самое.
А потом мы и будем так повторять операцию, пока поток из С не закончится.
Вот спрашивается, сколько раз мы будем делать такую операцию?
Хочется сказать, что количество из С, это неверно.
Неверно.
Дело в том, что можно сделать один путь, а можно сделать путь и цикл.
Нет, путь и цикл мы не можем взять.
Не о самом пересекающейся поверхности, да?
Да.
Можно сказать, что в верхней от центра количество лепель управлять.
Ого.
На самом деле да.
Ну потому что мы же...
Ну вот уже.
Да, то есть заметим, что мы берем каждый раз так, что после каждой такой операции хоть на одном ребре у нас поток исчез.
Да, но мы оцениваем не количеством вершин, а количеством ребер.
Ну да, в данном случае бывает, что это еще и точная оценка.
Совершенно верно.
Правильно.
Правда, единственное оговорка, что только из С запускать не получится.
Ну тут по-разному, тут разные могут быть.
Ну да, потому что могут быть не связанные с С циклы.
То есть если полностью поток декомпозируют, то вам придется еще какие-то...
Хорошо, из С все закончилось.
Так, а где-то еще они тривиальные ребра есть?
Если есть, то собственно находим ребро и повторяем операцию.
Ну тут два варианта.
Можно С, можно все входящее в Т, так же абсолютно развлечься.
Вот там тоже будут либо зациклы, либо...
Ну точнее так, если из С уже ничего не вытекает, а в Т что-то втекает, значит там будут какие-то циклы уже.
Вот. Ну так, в общем короче, просто берем ребро и просто идем-идем-идем-идем до тех пор, пока не зациклимся.
Ну там уже, в общем, это уже локальность.
То есть в принципе даже здесь можно заметить, что если у нас произошел зацикл, мы кстати здесь можем не заморачиваться.
Нет, хотя нет, заморачиваться придется.
Иначе...
Ну как сказать, если бы там, ну в частых случаях можно не заморачиваться, например, если все потоки по каждому ребру величины 1.
Кстати, отдельно такой случай мы будем рассматривать.
А?
А мы доказали, что после проделанных операций у нас останутся только пути и циклы.
Ну...
Ну как сказать, ну скажем, в каждый момент времени то, что у нас остается, это корректный поток.
Ну вот.
И дальше тогда мы, на каждом шаге мы находим, вот просто вот этим же одним алгоритм, либо путь, либо цикл.
Поэтому в конце, ну то есть сначала мы, то что у нас останется, во-первых, это будет поток величины ноль.
Ну вот, а в потоке величины ноль, то есть если там какие-то ребра нетривиальные есть, то есть с не нулевым потоком, то мы берем ребро и просто проделываем тот же самый шагик.
Ну типа по принципу, вот жило было ребро, если по нему что-то текет, значит из этой вершины что-то вытекает.
Ну и там тоже, идем-идем-идем и за цикл произойдет.
Вот, собственно, и все.
Так что поэтому, то есть это и, поэтому и получится в итоге, как бы останутся только пути и цикла.
Вот.
Так что вот такая красота.
Вот такая красота.
Вот.
Вот.
Так.
Так что получается любой поток может декомпозировать на пути и циклы.
Из этого автоматически следует, да, что у нас, да, что действительно блокирующий поток, можно просто сказать, что если нельзя найти путь, по которому поток улучшается, то значит и в принципе, и в принципе для того, чтобы поток улучшить, нам что-то в нем придется уменьшать.
Вот.
Такая вот понятная идея, да?
Или нет?
Нет, ну просто смотри.
А вот как?
Ну потому что, предположим, что вы к этому потоку что-то прибавили, остался поток, да?
То, что вы прибавили, это тоже поток, причем не нулевой величины.
А что я прибавил к нему?
Ну.
Ну.
Ну.
Ну то, что его увеличило.
То есть предположим, что мы его как-то жадно увеличили.
Прибавил, видимо, к каждому ребру, ну что-то.
Что значит прибавил к каждому ребру что-то?
Поток, это помнишь?
Поток это функция?
Ну.
Ну мы говорим, что нет, у меня было, у нас было два определения блокирующего потока.
Да.
Может быть, мы доказываем эквалентность.
Хорошо.
Ну окей.
Вот.
То есть мы говорим, то там первое было слабое, что как бы, поток блокирующийся, нельзя найти пути, по которому поток можно увеличить.
Прям вот именно жадно увеличить.
Ну вот есть второе определение.
Поток блокирующийся, его нельзя просто увеличить, там увеличив, там, возможно, как, там, произвольный набор ребер.
Я вот решаю, что это одно и то же.
Да.
Потому что в том, что вы увеличили, можно, то, что вы увеличили, можно декомпозировать на пути цикла и, собственно, выбрать только один путь.
Вот.
Я, собственно, только это говорю.
Ну а теперь вы искали это просто.
Как же все-таки максимальный поток искали?
Ого-го-го.
Вот.
Ну основная идея потом, да, ну конечно, да, то есть понятно, что, то есть, оказывается, все равно продолжает работать жангер, но просто чуть-чуть более хитрый.
Как бы следующая идея заключает в том, что иногда воду можно отменять.
Вот, допустим, у нас вот, например, вот на таком примере течет одна единица жидкости.
А теперь заметим следующее.
Что мы заметим, что если мы, например, хотим по этому ребру отменить поток, да,
то это примерно то же самое, что вот с точки зрения вот в текущей системе отчета, то это то же самое, как пустить единицу потока по, так сказать, наоборот.
То есть мы можем себе вообразить, что мы по этой трубе можем обратно пустить единицу потока.
То есть по факту получится просто отмена.
Но тогда с этой точки, ну вот, то есть вообразим себе, да, что вот мы можем пускать как бы воду не только в ту сторону, если тут не достаточно, но и обратно с целью отмены.
И тогда получается вот что. То есть получается в данном случае, что, то есть можно вообразить себе примерно следующее.
То есть, то есть, допустим, что можно с этой точки зрения сделать?
Ну, мы замечаем, что теперь мы понимаем, что мы можем вот в эту сторону пустить единицу потока, да?
Вот, в эту все еще пустить единицу потока. В эту единицу, видите? Тут три Criminal Pr haut tight не magnifies, вот здесь очень интересно.
Здесь можно пустить единицу потока, здесь пустить единицу потока, и здесь пустить единицу потока.
И самое интересное, видите, вот пустить единицу потока сюда.
вот такая интересная вещь то есть это вот если мы разрешаем себе так отменить
и мы замечаем что тут уже путь а тест да ты существует
о не удивительно ну потому что на самом деле теория по рассочетания это
прямое следствие вот этой все теории на самом деле такой простой да и
возможно сегодня мы это даже еще и увидим потому что на самом деле да
алгоритм куна это просто упихан умятая обеими ногами собственно на самом деле
просто там метод форда фолкерсона
это скорее унесет конечно это все-таки поток вот и так значит помпом помпом
но вот получается что вот улучшить можно и в данном случае это то есть можно получить так сказать
пустить такой поток по факту получится что мы ну по факту получится что вот видите на
этом ребре у нас получилась отмена но поток и поток улучшился что нет почему эти мы не
отменяем обратите внимание сейчас чего мы сверху нет мы не разворачивали поток на
самом деле тут очень тут смотрите как это мы не разворачивали поток рыжий граф нужен был нам
чтобы просто нарисовать что предположим что мы можем пустить поток как в смысле вот пустить
поток по ребру там типа если у него не даст еще можно что-то пустить так и отменить поток мы
этот рыжий только с этой точки зрения нарисовали обнаружили вот этот путь вот вот поэтому мы по
это пропуск нет это пропускные способности на сколько-то сколько мы можем
пустить то есть понятно что эта штука изменилась теперь после того как мы вот это проделали
теперь вот 4-й теперь давайте вот теперь вот теперь у нас поток вот такой да то есть давайте
вот то есть режим я сейчас показал чем мы изменили да а теперь представим себе вот наоборот что
Давайте теперь представим, что так и произошло.
Вот, смотрите.
Получается примерно следующее.
Получилось, теперь распад меняли.
Получается 0, 1, 1, 1, 1, 1.
Вот такая радость.
То есть мы просто пустили путь, но если мы идем в другом направлении, мы вычитаем 1?
Ну, типа того, да.
То есть вот такой еще дополнительный жадник.
И теперь заметим, что к этой штуке тоже можно применить такой же жадник.
То есть нарисовать вот такую штуку.
Вот такая штука получается.
Вот такая.
То есть это я пишу пропускные способности тут.
И обнаружил, что на этот раз путей из СПТ нет.
Даже в этой штуке.
Направление.
Не, все изменилось.
Все рёбра, они справа налево идут.
Центральная, наоборот, тут оно шло вверх, тут оно вернулось на место.
Ну вот, это в единичной.
Я не понял, как мы вообще все это строим.
То есть оранжевый граф получился из исходного?
Мы просто посмотрели.
Нет, важно, что оранжевый граф получился.
Чтобы получить оранжевый граф, нужно не только сеть, но и какой-то поток в ней.
Ну да, потому что мы видим этот поток.
И его рёбра разворачиваем.
Нет, нет, нет.
Вот тут важно, потому что тут, к сожалению, это не совсем точный пример.
Почему они точили?
Потому что здесь только единичные рёбры.
Потому что если мы возьмём вот эту штуку, давайте вот эту сеть возьмём.
Вот нам, кстати, очень хочется выяснить, вот тот поток, который мы тут сейчас нашли, он максимален или нет?
Да, верхний.
Тут бы ещё сеть видеть, честно говоря.
Там вообще бы что-нибудь видеть.
Я пока не угадаю, как мы это делаем.
Ну, значит, вот смотрите, сейчас вы более точные.
Сейчас ведём обратные рёбры.
Да, погодите.
Кто-то хочет сначала интуитивно понять, что мы хотим, а потом уже там вводить формализм.
Я хочу так.
Я могу, конечно, просто написать определение этого оранжевого графа, сказать два слова, как оно на самом деле называется в науке.
Значит, смотрите.
Так, ну давайте нот.
Так, ну давайте посмотрим.
Сейчас давайте синеньким нарисую то, что было коричневое.
Так.
Ну можно, конечно.
Это новый заляпанный граф.
Ну допустим.
Так, вот тут шесть, тут семь.
Сверху шесть.
А ещё четыре было.
Я граф рисую исходно.
Это другой вопрос.
Нет, пускали мы по вот этому ребру, во-первых.
А в тексте вы просили перерисовать.
Я его сейчас полностью перерисую.
И мы будем идём искать максимальный поток.
Может быть даже заново.
Вот, значит, что тут у нас?
Тут тоже четыре.
Как это да?
Как это?
Сколько колёс у нашего автомобиля?
Четыре?
Почему?
С этой тут четыре написано.
В смысле?
А, в этом плане.
Ну да, ну да.
Так.
Ну ладно, как там да?
Сколько да?
Сколько может быть да?
Так.
Тут два.
Тут что там ещё у нас есть?
Так, что-то пятачок какой-то.
Значит пятачок.
Так.
Ой.
Тут что-то не хватает.
А, тут вот.
Семинары.
О.
О.
Ну вот.
Ну.
Так что давайте будем искать.
А там ещё обратно.
Где?
А, вот.
А, да.
Там ещё.
Там ещё вот.
А.
А, вот это вот.
Было, было, дело было.
Да.
Ну ноль конечно да.
Давайте поменять.
Давайте его выкинем.
Да, давайте его выкинем.
Ой.
Нет, что-то правда.
Да, давайте ещё это ребро выкинем,
потому что оно явно бессмысленное.
Нет, ну это точно бессмысленно.
Ну там-то мы цикл пустим.
А, ну мы не пустим.
Нет, то в жагнике, который мы сейчас хотим запускать,
мы его не пустим, да.
Так что прям эту семёрку тоже можно убирать спокойно,
на самом деле.
Ну, либо...
Нет, ладно, давайте так.
Ну да.
Да, тогда эти ребра можно сократить.
У нас совсем новый жагник.
Нет, ну такие соображения есть,
но они быстро заканчиваются.
Жалко, жалко.
Вот, значит, поехали.
Попробуем.
Ну да, сначала пытаемся пойти каким-нибудь жадным путём,
но жадный путь он, там, ДФС,
как говорится, неисповедимый пути ДФСа,
как говорится.
Так.
И поэтому запускаем ДФС и запускаем две единицы потока
вот по такому пути.
Например.
Так, ну давайте думать.
Что, что ещё из этого можно выжать?
Делаем обычный жадник без обрата.
Ну пока давайте просто для разминочки просто жагник.
Значит, пока просто...
По самому верху пустим.
А, давайте прямо по самому верху, да.
Давайте просто три единицы потока пустим.
Три.
Ну мы и пустим.
Нет, ну там, в смысле, пять будет.
Да, как...
Как говорит водитель, у тебя сколько классов образования?
Пять.
Пять.
Не знаю, что это значит, но вот.
Вот.
Ну да.
Должен.
Раз же целых пять классов должен пустить.
Не, не.
Вот у нас ещё по низу можно пустить.
Вот там ещё один по низу.
Ааа.
Там ещё единичку можно пустить.
Сначала...
Ой, сейчас, погодите.
А, у меня что-то...
А, ну если это ребро сюда идёт, то да.
Так, ладно, давайте вот так пустим.
И давайте что-нибудь ещё тут.
Ну давайте, давай, что-нибудь тупое.
Один.
Один, совсем один.
Так, три, три, один.
Вроде сходится.
Да.
Так, что ещё можно сделать?
Ну давайте, да.
Если запустить ДФС по ребрам, по которым ещё можно что-то пустить, то как бы мы доходим сюда-сюда, ну в смысле сюда, потом доходим сюда и тут.
Так, такой жадник уже перестал работать.
Ну давайте посмотрим.
Цикл мы не пускаем, да.
Цикл, ну, заметим, да, цикл бесполезно.
Заметим, если вы у вас в потоке нашли цикл, вы можете отменить по этому циклу поток, и величина потока от этого не поменяется.
То есть как бы...
Нет, просто у нас есть цикл из С в С, чтобы добавить поток.
Да, но величина от потока от этого не поменяется.
Да, так что как бы...
То есть поэтому давайте эти коррупционные схемы мы оставим.
Вот.
Ну а теперь давайте думать.
Как мы нарисуем?
По каким ребрам что ещё можно пускать?
Ну, значит, смотрите, давайте если я нарисую те же вершины.
Абсолютно те же, обратите внимание.
Вот, совсем те же.
Вот, вот и вот.
А теперь смотрим, смотрите.
По этому ребру.
Сюда мы ничего не пустим, а по этому ребру мы не пустим.
По этому ребру.
Сюда мы ничего не пустим, а по этому ребру пустим пять.
Вот это ребро начинает быть самым интересным.
Мы по нему можем пустить три единицы потока.
Ещё вперёд.
А можем отменить три единицы потока.
Поэтому мы нарисуем и то, и то.
Это мне очень интересно, что там происходит.
Я не знаю.
А нельзя ли это ребро...
Ну...
Сейчас, погодите.
Есть ещё вот это кратное ребро.
У него там просто четыре, а обратно проводить нет резона.
Вот.
Можно хорошие провести.
Но сейчас давайте мы хотя бы нашего жадника посмотрим.
Тут значит у нас сюда четыре и сюда три, потому что можно отменить.
Вот.
Так, значит ещё пара двоек.
Что-то у нас тут всё по половинкам два-два.
Но это совпадение, что числа одинаковые.
Числа разные.
У нас ещё будут...
А, ну вот тут всё вверх.
Тут сколько у нас получается?
Нолик.
Нет, такие наброцкие.
Да, сюда два.
Так, тут у нас что?
Сюда три.
Нет, сюда два.
Пять минус три.
А три как раз наоборот.
Это если очень кто-то хочет что-то поотменить.
Так, тут четыре.
Тут три.
Ну что?
Не обратно.
Так, ещё я тут шестёрочку забыл.
Ещё три и один.
Да, один ещё.
Ну и конечно её величество.
Вот.
Да, и вот то ещё которое.
Третье сверху.
А, там ещё два.
Вот это и вот это забыли.
Три и тут два.
А там ещё четвёрочку написали.
Где?
Третье сверху.
Вот.
Вот.
Вот мы нарисовали граф всех отмен.
Внимание!
Вопрос.
Можем ли мы что-то из этого выжить?
Ну давайте внимательно смотреть.
Как бы есть такая сложная технология 75-го года как DFS?
Ну ладно, на самом деле не уверен, что технология скорее всего...
Нет, технология это видимо известно было сильно раньше.
Там едва ли не в XIX веке упоминания есть, но в каких-то контекстах.
Но есть статья Тарьяна.
Правда в ней сразу есть DFS, а в ней...
Ну давайте что-нибудь простое сделаем.
Например, найдём компоненты вершины двусвязности.
Вот.
А потом...
А давайте ещё компоненты сильной связности найдём.
Вот.
Давайте будет у нас белый, серый, чёрный, фиолетовый.
В общем, статью рекомендую.
Там весело.
Как мы можем пустить потом два?
Ну по веку.
По какому веку?
Из S или B6.
Так, да.
И туда по 4, например.
Ну, например, да.
Обратите внимание на маленькую приятную вещь.
Да, можно так.
Ну, можно так, можно и так, неважно.
Не суть, конечно.
Да, то есть оказывается...
Это наш любимый режиграф показал нам, что есть ещё что выжимать.
То есть по факту, правда, это будет работать по принципу...
Вот действительно, что мы тут...
То есть раз мы нашли вот этот вот путь.
Там условно.
Пум-пум-пум-пум-пум-пум-пум-пум.
То значит, по факту, значит, надо пойти сюда.
Значит, давайте тут я вот реженьким напишу два.
Тут найти и тут четыре.
А наоборот, ноль.
Отменили, потому что.
Тут мы...
Вот тут два и тут пятачок.
Вот, кайф.
Можно ли сделать что-то ещё?
Но для этого нам нужно модифицировать режиграф.
Потому что режиграф, напоминаю, зависит не только от, собственно, самоисходной сети, но и потока, который в ней течёт.
Здесь получается шесть превращается в четыре, и появляется вот такое мистическое ребро.
Такой напарник с двоечкой.
Вот.
Что там у нас ещё?
Вот здесь заметим, что, значит, мы тут что-то отменяли.
То есть, поэтому получается, что вот это ребро исчезает.
А в ответ получается вот такое четыре.
Вот.
Здесь получается два-два.
Вот так и напарник два.
И здесь получается вот было четыре-три, стало два-пять.
Стало два-пять.
Так, ну чё?
Ну что, чё-нибудь выжить можно?
Ну да.
Ну да, потому что да, мы можем дойти сюда, можем дойти отсюда, никуда не выйдешь.
Можно дойти сюда и сюда, отсюда тоже уже.
Кроме этой векшины никуда не выйдешь.
Да.
Что это значит?
Значит ли это, что мы нашли максимальный поток?
Ну да, пока вообще не очевидно.
Ну вот.
Ну вот.
Ну на самом деле да, вообще говоря, вот это, почти вот это вот называется остаточная сеть.
Можно даже её так называть.
Хотя, ну в идеале конечно на реальной практике всё-таки, когда вы будете это реально кодить,
то есть на самом деле у вас все напарники вот тут будут.
На самом деле я буду нарисовать все вот эти ребра и сказать, что тут ноль.
Вот.
То есть это просто, чтобы я сейчас напишу формальное определение, которое будет максимально этой картинке соответствовать.
Так вот, вот так вот, вот это вот всё.
Вот.
Ну если нет, если найдется путь от СДТ, который проходит через это ребро, ну как бы да, придется улучшать.
Улучшать.
Ну тут как повезёт. Дело в том, что максимальных потоков, как бы те, где…
Не, после того, что когда мы почитаем, когда мы улучшаем.
Чего, когда…
Когда мы вычитаем из исходного драка, когда мы к нему добавляем что-то.
То есть когда мы проходим по ребру, по развёрнутой поток…
Да, ну как бы тогда у него поток-то уменьшается.
А когда дальше пускаем, то как бы он увеличивается.
Ну вот. Но определение может звучать так.
Значит, смотрите.
Ну вот, на самом деле звучит это примерно следующим образом.
Значит, определение.
Такое рыженькое у нас будет определение.
Пусть F, пусть G равно вот это вот V, E, C, S, T.
Сеть.
И F.
Поток в ней.
Тогда внимание, смотрите.
Значит, не, тогда определение. Остаточная сеть.
Это называется вот.
Остаточная сеть.
Значит, G… Внимание, G с индексом F. Обратите внимание.
То есть G символизирует, что это мы взяли как бы типа за основу ту же сеть G, но в ней поток F.
Тогда это то же самое, как смотрите.
То есть это вот сеть.
Ну вот.
То есть это фактически сеть тоже, то же самое F, но есть E, F и, соответственно, C, F. И сток, и сток не меняются.
Ну я не буду сейчас совсем формально прям писать, чтобы…
Но прям вот там будет не идеально сейчас формально будет.
Где E, F создаётся так.
Остаётся так.
Что где…
Где для каждого…
…гибра…
Значит, E равно, допустим, у V в исходном графе, да?
Значит, в…
Значит, допустим, G, значит, в E, F добавлены.
Значит, первое.
Значит, ребро.
Ребро U, V.
То есть ребро E1 равно U, V.
Причём, ну вот, с C, F от E1 равной, соответственно, C от E минус F от E.
То есть это символизирует вот это вот ребро.
То есть, видите, в данном случае вот для этого ребра мы добавляем ребро только с той способности 2, потому что только 2 можем сюда пустить.
Вот.
И второе.
И второе.
Ребро E2 равно V.
С C, F от E2 равной, наоборот, F от E.
Вот, кстати, вот нам, кстати, очень удобно, наконец-то, пригодился, что здесь оно не отрицательно.
Вот такая красота.
Вот формальное определение звучит так.
Ну, формально, чтобы совсем идеально формально это было, надо ещё написать.
А других ребер?
В C, в E, F? Нет.
Вот.
Ну, здесь по-разному можно очень по-разному писать.
Кстати, если вы откроете, скажем, Кормана, то там определение будут, по камере внешне может показаться, что ну вообще другие.
А мы это берём, ну, из практики.
Ну, кстати, а может и с них, я не помню.
Нет, то я так более нот.
Нет, то я так более нот.
Ну, с проблемом так, просто есть два определения.
Вот тем Корменовским очень удобно пользоваться для математических доказательств.
Вот мы даже, может быть, чуть позже сегодня увидим.
Вот. То есть мы это приведём.
Но сейчас я пользуюсь тем вот, то есть вот этим вот, этим вот просто удобно вот просто в компьютере вот ровно в этих терминах мыслить.
И тем более, что, ну, просто проблема в том, что ещё у Кормана определение будет основано на матрице смежности.
Вот. Ну, там, красиво будет, а вот будет немножко по-другому.
Ну, вот и оно, и оно, может быть, особенно поначалу будет немножко портить суть, и оно будет работать в некоторых предположениях.
Которые вот, ну, таких технических, конечно, предположения, то есть математически они ни на что не влияют, а технические принципи.
Вот. Вот такая красота.
Сет называется остаточная сеть.
Чем остаточная сеть приятна?
Очень приятно.
Остаточная сеть приятна тем, что если вы нашли, то есть у нас сейчас жадный принцип говорит, что если в остаточной сети есть путь по не нулевым ребрам от СДТ,
то тогда в исходной сети вдоль этого пути поток можно увеличить.
Вот, понимаете, да?
Ну, вот, действительно, наступает ситуация.
Вот, действительно, смотрите.
Вот наступает такая ситуация в какой-то момент, что от СДТ дойти нельзя.
От СДТ дойти нельзя.
Что делать?
Ну, вот.
От СДТ дойти нельзя.
Что делать?
Ну, вот.
Означает ли это, что поток действительно максимальный?
Или, может быть, это означает, что надо просто еще каким-то зубодробительным способом что-то делать?
Я думаю, что это зубодробительная доставка.
Ну, вот.
Ну, на самом деле, да.
В этом месте можно подумать в следующую сторону.
Это, кстати, иногда очень полезная мысль.
Смотрите.
Ну, то есть так просто.
Тут хочется именно как-то подумать, чтобы было естественно.
То есть я могу, конечно, просто написать все там.
Вести все определения.
Потому что, если вы знаете, что такое поток, вы, конечно, понятно догадываетесь, что тут сейчас на счет происходить.
Вот.
Это, конечно, да.
Хотя будет, конечно, и циклы.
Но там кунт такой просты, какие-то длинняющие цепи.
Нет, на самом деле кунт, это мы просто вот сейчас возьмем то, что мы тут сегодня изучаем и просто упихаем реализацию.
На самом деле.
Ой, да, да, да.
Ну, да, это немножко куперфильд.
Это так в каждом шоу там он там показывает какие-нибудь там это про простые фокусы.
Но все время предупреждают, что в конце там это он, там он растворит в воздухе башню, там статуй свободы.
Ну, вот.
А пока он покажет вам милый карточный фокус, который ему научил дедушка.
Вот такой фокус.
Да, очень красивый фокус, аплодисменты.
Да, но он это испепелит башню свободы, а статуй свободы.
Там это, господи, он растворит в воздухе восточный экспресс.
Ну ладно, один вагон мне важен.
Что он там еще делал?
А он пройдет сквозь Великую Китайскую стену.
Вот.
На самом деле, да.
Причем еще прочитает лекцию, как он это примерно датчик, с помощью какой-то там с употреблением слов там типа «дифузия».
Но да, потом придет какой-то, потом придет какая-то вредина в маске и покажет, собственно, примерно каким оптическим обманом этот эффект достигается.
В общем, менее крутым этот фокус не становится.
На самом деле.
Ну да.
Нет, ну как сказать, реально, просто в фокусах иногда, собственно, технология исполнения этого фокуса бывает еще круче самого фокуса.
Так вот.
Ну теперь давайте думать.
Вот предположим, что выяснилось, что у нас в остаточной сети пути от S до T нет.
Тогда давайте вот мыслить так.
Ну хорошо.
А как мы это выясним?
Ну вы это выясним понятно каким образом.
Мы это выясним так, что мы пойдем DFS.
Вот я сейчас буду только не нулевые ребра какие-то рисовать.
Вот, допустим, я от балды чего-то нарисовал, да, тут могут быть какие-то в другую сторону ребра.
Идем, идем, идем.
Но выяснится, что вот как бы, вот существует какая-то граница, через которую мы не перейдем.
Понимаете, да?
То есть выясняется, что дальше не идет.
То есть это не значит, что через нее не приходят ребра.
Не приходят ребра, это значит, что все ребра не нулевые, пока они меряют.
Не нулевые.
Они ведут все в эту сторону.
А в ту сторону только нулевые.
Понимаете, да?
Но тогда, смотрите, мы можем о чем задуматься.
Вот жили были у нас все вот эти вот ребра.
Допустим 5, 4, вот оказалось 6, 2, допустим 7.
То есть смотрите, вот у нас в эту сторону получается течет вот, ну вот, то есть вот такая вот ситуация.
Ну в общем сами по себе эти 5, 4, 6, 2, 7 еще ничего не значат.
Но это естественный вопрос.
Как говорится, а в принципе через эту границу можно что-то пустить?
Ну вот давайте просто задумаемся.
Как так вообще получилось?
Значит там по этому рюкту в ту сторону там чет 5, 4 и так далее.
Ну вот.
Чего?
Ну вот смотрите, давайте посмотрим.
То есть давайте посмотрим, что происходит, так сказать, в реальной жизни в этом месте.
То есть в реальной жизни это означает следствие, что течет какая-то вода.
То есть это означает что здесь есть вот, то есть какие-то ребра, в том числе и те же.
Там вот так вот, как-то да?
А может быть и не только там даже так вот, вот так вот, может быть и вот так.
А еще может быть все что угодно еще вот так, вот так, там все что угодно может быть на самом деле.
Но что мы про все эти ребра можем сказать, в исходной
ТСТ были такие ребра, но мы замечаем, что все эти
ребра нашим потоком сейчас насыщены.
То есть в ту сторону течет 5, то есть получается, что
скорее всего тут на самом деле просто 5 из 5.
И тут какой-нибудь там, допустим, 4 из 4.
Нет, всякое может быть.
На самом деле может еще быть ситуация, что вот здесь
нарисовано 6, но может быть это такое красивое сжатие,
на самом деле тут просто 2 из 2, но просто, а в эту
сторону течет 4, то есть там 4, ну типа 0 из 4, ну что-то
такое.
Ну кто-то жал, ну условно, конечно, в нашем случае
так не бывает.
Так, ну вот, то есть получается следующее, что у нас, мы
рассматриваем разрез и говорим, что, и вы так понимаете,
что ДФС-то у нас сейчас дошел до этих всех вершин,
правда?
Но раз пути нет, значит получается, что все ребра
здесь насыщены.
Да, кстати, вот еще одно определение, которое мы
активно будем пользоваться.
Ребро называется насыщенным, если f от e равно c от e.
Но тогда смотрите, вот возникает вопрос, вот у нас есть ребра,
там 5, 4, там 2, вот это мы не считаем, там какие-нибудь
2, там я не знаю, что-нибудь там, что тут у нас еще, ну
то есть пусть будет тут тоже 2, ну вот, и все они насыщены,
то есть тут какая-нибудь 7 из 7, тут там 8 из 8, тут я
не знаю, ну тут всякая, ну вот, 5, 5, там 2, ну что-то
вот такое.
Ну тогда смотрите, какая ситуация, получается, что
через этот разрез, каким-то, ну вот, хотя там вот всякое
бывает, конечно, то есть формально еще как бы внимательно
придеремся, но получается, что как бы были ребра и
все они насыщены.
Вот возникает вопрос такой, до уровня идеи, а в принципе
через этот разрез вообще может протекать больше?
Видите, тоже интуитивная мысль.
Ну, через эту границу, хорошо.
Пока мысль мистическая.
То есть мистическая.
Каждая вода у нас не просто течет из S в T, значит она
должна, наверное, эту границу пересечь.
Правда, сразу на уровне идеи имеем в виду, что она,
конечно, может ее хотя бы один раз пересечь, но она
может и так и туда-сюда ходить.
Вот.
Но возникает тем не менее, что у нас вот торчат туда
5, 4, вот 2, 2, 8, 7, 5, 2, и все ребра торчащие тут, которые
исходно торчали туда, они все закрыты.
А может ли...
Ну вот.
Но тогда заметим, что как бы есть подозрение, что
ну понятно, что может быть так, что действительно
как бы одна машинка занимает этих пропускных способностей
несколько.
Ну вот, такое может быть.
Но ситуация такая, сразу мы замечаем, что на самом
деле есть подозрение, что больше чем вот 5, плюс 4,
плюс 2, плюс 2, плюс 8, плюс 7, плюс 5, плюс 2, через эту
границу проходить не может, правда?
Но тогда отсюда возникает как-то, наверное, подозрение,
что действительно у нас получается, то есть такое
интересно, но тогда отсюда, тогда должно следовать,
что этот поток максимальный.
Просто потому, что мы нашли границу, через которую вот
следует просто воды, вот просто максимально много.
Не для одного?
Это для одного.
Для одного.
Это оранжевый товарищ, это он сам.
Это сам граф, а это его статочная сеть.
Ну там 8, 8, а там...
Да, потому что это вы...
Ну тут...
А хотя...
Они плотные, соответственно, вы поняли.
Вы поняли.
Нет, ну тут, да, тут...
Давайте лишнюю берем.
Ну давайте, да, что-то.
Нет, просто...
Ну, да.
Нет, на самом деле, да, они вот...
Я просто хотел сказать, что они не совсем вот прям
идеально соответствуют.
Там...
Там дадит...
Идея.
Да, ну хотя бы...
Нет, ну совсем на уровне идеи, конечно, вот можно
сказать так, ну просто вот эти...
Просто идея такая, что если она там...
То есть можно сказать так, что это 6 тут высекает из-за
того, что ну здесь просто есть ребро.
6, 0, вот так.
Вот просто оно есть.
Вот.
А тут, например, вот есть ребро 2 из...
Да, вот такое бывает, да.
И вот тут еще 7 бывает.
7 из 7, вот так.
Вот.
Хорошо, вот так.
Ну и тут всякое тут...
Тут какой-то еще геморрой, но неважно.
Вот.
На самом деле, да, идеально они соответствуют вот так.
Вот.
То есть поэтому возникает, что имеет смысл как бы
рассматривать, когда мы пытаемся понять, какой максимальный
поток мы можем пустить.
То есть и действительно вот имеет смысл рассматривать
не только сколько мы можем выйти из истока,
и сколько может втечь сток,
но и какие-то другие узкие места.
Ну, например, самый тупой пример это мог быть, это какая-нибудь
сеть вот в духе вот тут.
5, 3, допустим, 7.
Да?
Наоборот.
Да, то есть оказывается вот узкое место вот здесь.
Вот.
Вот возникает такая какая-то идея.
И вообще возникает ощущение, что просто если в остаточной сети
нет пути, то просто как будто мы натыкаемся на границу,
через которую мы при всем желании больше не пхнем.
Вот.
Понимаете, да?
Ну да.
Ну вот.
И в результате тогда получается...
Ну давайте остается только, значит, ввести тогда определение
для этих всех границ.
Определение такое.
Так.
Так.
Давайте, да, тут я Т сделаю поближе.
Но на этот раз, значит...
Так.
Ну давайте каким-нибудь еще...
Давайте скажем, что граница зеленая.
Вот.
Чтобы символизировать, что это одно и то же.
Ну вот.
И, значит, ведем понятие.
Пусть.
Ж равно ВСТ.
ССТ.
Тогда, смотрите.
Ну, тогда разрез.
СТ.
С большое и Т большое. Обратите внимание.
Это парамножество.
С и Т.
Таких что?
Ну давайте вот здесь совсем аккуратно писать, что.
Значит, С и Т.
Это подмножество В.
Значит, они не пересекаются.
Вот.
И третье.
И СТ принадлежит множеству С, а Т принадлежит СТ.
Вот.
Это формальное определение этой вот границы.
Ну, то есть, по факту, да, сам по себе этот разрез.
В общем-то... Ой.
В смысле, связан.
А, надо, да.
На самом деле, да, есть еще четвертая.
Да.
С объединенная с Т.
Ладно, равно В.
Да, это важно.
Ну, я сейчас буду покачивать.
Ну, пожалуйста.
Ну да, да, да.
Ну, я...
Давайте так напишем.
Да, понятно, что это называется С.
Ну, пожалуйста.
Да, хорошо, хорошо.
Пожалуйста, пожалуйста.
Ну, суть одна.
Хорошо, можно так.
Пожалуйста.
Можно действительно сказать, что...
А, можно это вообще...
Хорошо.
Что значит...
Что такое между собой связанное множество?
Что значит первое...
Нет.
Вот второе...
На это вот это свойство есть.
Оно вот с этим всем не связано.
То есть, то, что я тут эту кучу всего писал, на самом деле это обозначается вот так.
Да, но важно, что когда мы разбиваем границу, то есть нам важно, что с одной стороны находится...
С первой стороны находится исток, а со второй сток.
Это важно.
Поэтому...
Ну, правда, сами все разрезы, конечно, огромное количество.
Ну, два в степени.
Два в степени какой?
Мимо.
А, в степени модуль В?
Во, минус два, да, конечно.
Да, СТ фиксированы, да.
С точностью, да.
Погрешите, погрешите.
Ой, да-да-да, мультипликативный констант И4, да-да-да.
Так вот.
Значит, смотрите, что теперь мы с этим всем можем делать.
Значит, теперь можно как-то...
Если у нас есть граница, то на ней можно ввести таможню.
Вот.
Ну вот.
Значит, давайте...
Во-первых, давайте задумаемся.
То есть нам хочется, наверное, учитывать.
А сколько у нас воды через эту границу утекает?
Поэтому так и пишем.
Чистый поток...
Чистый, так сказать, даже в кавычках вводится определение, поток.
Ф от СТ.
Через разрез СТ.
Это что такое?
Ну, очень хочется, конечно, так и сказать.
Суммируем по всем ребрам.
Таким, что стартовая вершина...
Лежит с нашей стороны границы.
А финиш уже не с нашей.
Ф от Е.
То есть мы назвали потоком одновременно функцию, одновременно вот эту штуку всунуть?
Ну, мы, ну так, допустили такую вольность, конечно.
Ну, на самом деле, просто эта вольность такая, что мы сейчас быстро выясним, что нам больше не понадобится этим пользоваться.
Сейчас вы увидите, почему.
Так, ну а теперь-то давайте думать.
Какой пример, какой понятный пример подобрать?
Как это?
Спрашивайте, да.
Как говорится, недавняя, да.
Недавно из России, называется, уехала работать в Google в 10 программистов.
Что называется?
Трое из них вернулись.
Погибание вопрос.
Сколько мозгов?
Сколько мозгов утекло за рубеж?
Да, по такому, ну если почти, да, по такому определению 10.
Но что-то не то, правда.
Да, поэтому, как и вот у нас изначально было...
Ну да.
С этой точки зрения, так.
Ну вот.
Поэтому, конечно, мы всех вернувшихся...
Что же считаем?
Нет, ну я не знаю, там мало ли, будет у вас макроэкономика, там может быть сложнее.
Там как-то начинается в экономике, что, предположим, вы это что-то, скажем, я, ну вот скажем, если там Вася одолжил Пети 100 долларов,
то счастливы оба.
Потому что Вася счастлив, что у него есть 100 долларов, а Петя счастлив, что у него в будущем будет 100 долларов.
120.
А может даже и 120.
Нет, там это реально начинается и как бы и...
У нас это будет?
Нет.
Почему макроэкономики у вас не будет?
Это на Ярбе.
Да, ну жалко.
Ну не знаю, у нас просто было, но у нас будет как-то...
Был тот курс какой-то?
Нет, это был обязательный курс.
На третьем курсе такое.
Микросеместер микроэкономики, потом семестер макроэкономики.
Ну там микроэкономики, это вы маленькая компания, в этой, собственно, вы анализируете, что там делать, как вы там выставляете цену на свои товары и так далее.
Ну вот, а макроэкономика все просто.
Представьте, да, у вас на кухне стоит печатная машинка, которая печатает валюту.
Причем она умеет не просто печатать эту валюту, но еще ее засасывать иногда.
Вот вам нужно думать, вот вам нужно учиться ей правильно пользоваться, чтобы там, знаете, когда и каким образом там растет инфляция там и так далее.
Ну вот.
Да, иногда к вам товарищ майор стучится.
Нет, почему?
Нет, просто...
Владение печатной машины?
Нет, почему? Печатная машинка, которая печатает деньги где-то, да?
У каждой валюты есть и называется центробанк вообще-то.
Это-то есть, она как дома у каждого человека стоит.
Ну в офисе какая разница?
Нет, понятно, что по факту как бы там чаще всего это бывает, что там вы хотите там это, берете кредит от центробанка, дайте мне 10 тысяч рублей от центробанка.
Окей, у вас есть 10 тысяч рублей.
Круто, мы записываем.
Да, но вы нам должны.
Круто, да.
То есть как бы да, вам придется их заработать и откуда-то вернуть, ну а мы просто сказали, что...
А мы просто напечатали или сказали, что вот с на развитие технологии, что у вас они есть.
Но мы запомнили.
Нет, ну вообще это как бы так реально работает.
Ну как бы да, на полном счете так реально работает с какого-то момента.
Ну примерно года 71, на самом деле так работает.
До этого момента как-то следили, что за каждой бумажкой стоит там все-таки какой-то золотой слиток достает.
Вот.
Ну это в общем короче вот в курсе макроэкономики, вот собственно вот это все шоу будет.
Вот, значит что у нас?
Хорошо, значит чистый поток через разрез.
Вот сколько, сколько утекло через границу изо стока в сток?
Ну возникает естественное утверждение.
К чему этот чистый поток равен?
На мощности максимального потока.
На самом, не максимального, а просто потока этого.
Да, естественно, что наверное как бы если у нас все программисты бегут изо стока в сток,
то наверное через границу пересловывается ровно столько же, сколько изо стока вышло.
Потому что у нас нигде программисты, у нас нигде в промежутке стока программисты не появляются из неоткуда и не исчезают никуда.
Ну да.
Ну это вроде более-менее соответственно.
Не то чтобы это не соответственно.
Бывает конечно исключение.
Вот. Так вот.
Итак, мистическое утверждение.
F от st равно tu по mod f.
Доказательства, знаете, я даже не буду прописывать доказательства.
Потому что оно абсолютно идентичное доказательство того, что fs равно ft.
Прям абсолютно то же самое.
Только просто суммируете, только вы суммируете.
Да, да.
Нет, да, то есть нет.
То есть ну идея там такая, вы суммируете, то есть пишете, то есть суммируете вы потоки.
Но суммируете только не все ребра, а только ребра, которые связаны как-то с долей s.
Вот.
Там вот такая будет идея.
Причем, ну понятно, что там входящие со знаком плюс, там входящие со знаком минус.
Вот. Ну ладно.
И соответственно там вот.
А кажется, что это одно и то же.
Вот. Понятно, да?
Не.
Не понятно?
Не понятно.
Не понятно.
Ну то есть представим, что все ребра, которые ведут по су сторону, они все ведут в одну вершину.
И тогда это доказательство точно такое же будет.
Угу.
Ну типа того, да.
Вот.
Ну качество EDZ такое состоит.
Ну можно, ну вот.
Нет, ну давайте лучше попробуйте EDZ, можем потом это подоказывать.
Но как бы на самом деле просто просписывать, вот получится то же самое.
Походно в это верю.
Ну вот, а суть одна.
Так.
Сейчас чего-чего.
Угу.
Смотрите.
Какая тут диспозиция?
Вот.
Но если мы в это поверим, но это в общем-то, как я уже сказал, логично.
А, кстати, да.
Знаете, одно из доказательств, знаете какое может быть?
Декомпозируем, значит декомпозируем поток на пути и циклы.
Циклы.
Да, и рассмотрим.
Ну во-первых цикл, во-первых цикл никак не влияет ни на это, ни на это.
Почему?
Потому что как бы сколько раз мы туда прошли, столько и вошли.
Да?
А если мы рассмотрим конкретный путь от S до T, да?
То тогда смотрим.
Тогда этот путь в этой величине использовался один раз.
А вот эта штука использовала, а вот эта штука использовалась,
ну очевидно, что в эту сторону мы пришли на один раз больше, чем в ту сторону.
Поэтому в сумме кайф.
Да, вот еще вот так можно доказывать, да.
А, ну да, кстати, даже доказательство полноценное получилось.
Такое нет.
Ну вот, нет, если кто-то хочет расписывать через суммы, то, пожалуйста, это тоже можно.
Но вот на самом деле лучше там второй вот этот формализм,
лучше это, там вторую парадигму определения лучше вводить.
Там второй тип, и тогда там эти доказательства будут просто на халяву писаться.
Вот, при той же сути.
Так вот, хорошо.
Но это был, значит, чистый поток.
Но теперь можно заметить следующее.
Ой, сколько определений.
Ну ладно, значит, смотрите.
Ну вот, на самом деле, значит, есть еще определения.
Потому что про каждую таможенню, хорошо, мы научились определять, сколько воды утекает через таможенню.
Но возникает вопрос, мы же можем подумать, а какое максимальное количество воды может утекать через таможенню.
Так и пишем.
Смотрите.
Ну вот.
И тогда вот идея.
Ну я вот не буду это прописывать, все это вот то же самое.
Там типа данная сеть, данная разрез, так вот.
Пропускная способность разреза.
Пропускная способность таможенней в переводе говоря.
Вот.
С от СТ.
Вот сколько, честно говоря, теоретически может машин проехать.
Ну на самом деле да, в идеале, наверное, если все-таки каждая машина будет проезжать границу один раз, а не туда-обратно.
Ну вот.
Ну как повезет.
Ну как повезет.
Так, зависит от разреза.
Да, но это зависит от конкретного потока.
Но мы говорим, что, но как бы мы можем все равно, но в идеале все равно, да, вот все равно в идеале, это все-таки чтобы каждая машина проезжала один раз, чтобы их было побольше.
То есть у нас есть, потому что смотрите, определение такое, что вот С от УВ, где мы пишем, что У лежит в С.
Ну ладно, в нашей парадигме это так пишется.
Е.
Е.
Е.
Е.
Старт в С.
Значит, Е.
Финиш.
Лежит вот там.
О, вот такой вот красота.
Видите, да?
Ну да.
То есть в принципе, то есть он считает, что через таможню может притекать столько машин, исходя из расчета, что просто по каждому ребру, значит, там на каждом ребре у нас показывается, сколько в единицу времени может там проезжать по машин.
Да, конечно, в некоторых потоках, конечно, чистый поток через разрез не обязан этому соответствовать.
Но сразу видно мистическое утверждение.
Ф от СТ всегда меньше либо равно С от СТ.
Невероятно.
Ну вот, ну просто по определению понятно.
Потому что от С, потому что вот этой С мажорируется вот эта слагаемая, а вот это можно оценить как ноль.
Невероятно.
Да.
Ну вот.
Нет, ну невероятно, но важно.
То есть то, что мы сказали про пропускную способность, это реально верхняя граница.
Больше не протечет.
То есть в принципе раньше мы оценивали, то есть если мы думаем, как оценить сверху пропускную способность, то есть нашей сети вообще, то есть максимальный поток, то что мы имеем?
То мы имеем, что мы могли оценить там сколько может вытекать, сколько может текать, и теперь мы это обобщили.
Обобщили.
Да, обратите внимание, мы это буквально обобщили,
потому что, кстати, заметим, что вот на самом деле вот
есть такое утверждение, что модуль f, например, вот
модуль f, это на самом деле равно f от вот такого разреза
как s и, собственно, там v без s.
Для этого обратите внимание, это не свойство, это определение.
Обратите внимание.
Да, потому что, да, бывает и такой разрез, разрез из
одной вершины, из всех остальных, но помните, когда мы строили
алгоритм прима, кстати, мы с такими разрезами уже
сталкивались.
Что?
Да, я его даже еще вот так напишу.
Ну, как-то у нас же может быть цикл в себе.
А мы все учли.
Да ну.
Не, а какая разница, смотрите, что такое f, это сколько
потока вытекло из s минус сколько потоков текло,
что такое f от этого разреза, сколько потока протекло
из s куда-то, минус сколько потока текло из куда-то
в s.
Ну вот.
Если написать формальные буковки, то почему-то они
будут совпадать.
Так что на самом деле, то есть эта вот граница это
как бы немножко обобщает, но оказывается эта граница
точна.
Ну в каком плане?
Потому что мы оценить поток можем, переберем все два
в степени вы минус два, значит, разреза, для каждого
из них вычислим вот это и возьмем минимум.
Нет, потому что, да, вот теперь я могу сказать, следствие
для любого разреза st модуль f меньше либо равно c от st.
Вот все, железно.
Важный факт, да, то есть я могу этот поток оценивать
как пропускные способности, могу вот перебрать два
в степени там модуль v минус два чисел и выбрать из них
минимум.
И у нас вот возникло уже подозрение, что эта оценка
должна быть точной.
Ну подозрение вот базировалось на том, что если у нас выяснилось,
причем это как-то связано с остаточной сетью.
Потому что откуда мы вообще, почему мы вообще захотели
эти разрезы вообще рассматривать?
Потому что напоминаю, как у нас произошло.
Мы пытались, условно, пихать поток через остаточную
сеть, выяснилось, что не можем.
Мы рассмотрели, а докуда мы из это сможем дойти и
обнаружили, что там какой-то подозрительно насыщенный
разрез.
Вот полное ощущение, как будто в нем вот едва ли
не равенство достигается.
Потому что по камере все ребра насыщенные, а обратно
вроде как ничего не течет.
Потому что если бы обратно что-то текло, то у нас бы
и в эту сторону было бы ребро, по которому этот поток
можно отменить.
А в остаточной сети такого нет, понимаете, да?
Вот.
И в результате, ну практически мы уже, может быть, где-то
так проговорили то, что можно назвать теорема форда
Фолкерсона.
Фолкерсона.
Мистическая теорема.
Ну, я ее еще не сформулировал.
Пусть g равно, давайте прям коротко, g-e-c-s-t сеть и f поток
в ней.
Тогда соответственно следующие три утверждения эквивалентны.
Значит, утверждение номер раз f максимальный, ну в том
плане, что величина потока максимально возможна.
f максимальный, на хит, нет, ну вот, да, модуль f равно
c от s-t для некоторого разреза, ну вот, да, модуль f равно
c от s-t для некоторого разреза.
И третье, красивое, в остаточной сети g-f нет пути из s, из истоков
в сток, что важно, по не нулевым ребрам.
Вот такая красота. Вот, давайте смотреть. Ну, давайте
смотреть, что такое нот. То есть я сказал, что они не
обязательно все верны, они эквиваленты, то есть либо
одновременно все верны, либо одновременно все
не верны. Ну, давайте думать, как же это нам доказывать.
Ну, давайте что-нибудь очевидное тут есть. Ну, да. Ну, может
дать. Ну, из один сразу тут вообще все очевидно. Ну,
потому что эквивалента нет, конечно. Если поток максимальный,
то пути очевидно нет. Ну, да, иначе если бы он был,
мы бы увеличили поток. Да, я на обратной не претендую,
да это и не оптимально. Вот. Что еще можно сказать.
Но еще из этих всех утверждений мы уже доказали, что из двоечки
на самом деле следует идентичка. Потому что мы вот, ну, просто
вот из этого утверждения. Видите, да? То есть не такое
очевидное утверждение, но вот мы его уже вывели. Видите,
да? Так что остается только одно вывести, что если из
остаточной сети, в остаточности такого пути нет, то найдется
такой разрез. Вот это самое интересное. Но на самом деле
мы это практически уже сделали. Точнее так, мы этот разрез
уже брали из соображений, которые практически дают
нам доказательства. А именно, то есть как построить этот
разрез? Очень просто так. У вас нет пути из СПТ. Так,
давайте построим такой разрез, просто в котором
в С мы поместим то, откуда дойти можно. Ну вот, и утверждается,
что это он и есть. Почему это утверждается? Да просто
потому что, заметьте, в остаточной сети, потому что, смотрите
какая ситуация. Так, вот давайте это мы убираем, это
нам уже неинтересно. Точнее, это мы уже запомнили, это
простое определение. Значит, смотрите. Ну просто вот запустились
мы тут. Шли, шли, шли, шли, шли, шли, шли, шли, шли, шли,
шли, шли, шли, шли, шли, шли, шли, шли, шли, шли, шли, шли,
и уперлись в тупичок. Это означает, что у нас в остаточной
сети, обратите внимание, ребер в эту сторону нет. Вот
так. Да, я бы сказал даже не рыжим крестиком, а зеленым
крестиком. То есть, таможення больше ничего не пустит.
Ну, что это значит? Значит, это следующее. Это означает,
что в реальной жизни, когда у нас пропустная способность,
значит, смотрим. Ну, во-первых, заметим, что если в реальной
жизни рассматривать, то обязательно в обратную
сторону здесь будет ноль из уже неважных чего. Потому
что если бы мы вот тут по обратную сторону что-то
текло, то у нас была бы тут, в эту вершину. То обратите
внимание, тогда и эта вершина в остаточной сети бы оказалась,
потому что этому ребру соответствовало рыжее ребро здесь валимное,
правда? Вот. Ну, тогда просто это было противоречие с
определением этого множества. Помните, да, здесь как бы
находится множество, докуда из С по ненулевым ребрам
дойти можно, поэтому сюда вот. Ну, вот. Ну, в рыжем
графе да. Но теперь рассмотрим просто все синие ребра, проходящие
через этот разрез. Я утверждаю, что если рассмотреть ребры
из ТВС, то там поток понетекущий по нему равен нулю. Вот больше
тупо быть не может, потому что иначе тут рыжее ребро
было. А что касается этих ребр, то тут, допустим, находится
какая-нибудь там 19. Но тогда мы вынуждены усиливать,
что 19 и проходит, потому что в противном случае тоже
могли бы допускать еще чего-нибудь. Но тогда если вы просто
теперь возьмете, то есть F теперь осмотрим как чистый
поток, то есть просто вот сколько течет туда, минус
сколько течет сюда, то обнаружим, что вот эти ребра, идущие
назад, мы берем как нулевые, то есть учитываем как ноль,
а в ту сторону учитываем ровно как пропускная способность.
Получается в точности определение пропускной способности.
Все. Ну и получается, что терема доказана. Вот, собственно,
и все.
Ну мы рассмотрели, пусть у нас есть ребро с пропускной
способностью 19, идущий из доли S в долю T. Утверждение
заключается в том, что, видимо, в этом потоке по этому
ребру течет именно 19. Ну потому что иначе тут было
рыжее ребро. Не нулевое, конечно, рыжее ребро. Вот.
То есть поэтому получается, что когда мы будем суммировать
чистый поток, мы будем по ребрам, идущим назад, суммировать
нули, а по ребрам, идущим вперед, мы будем суммировать
в точности их пропускные способности. Так что следовательно
получилось. То есть на самом деле теперь заметим, что,
ну ладно, не то чтобы мы научились искать максимальный поток,
обратите внимание, мы еще не научились его искать,
но мы обнаружили эквивалентность задач поиска максимального
потока и минимального разреза на самом деле.
Потому что, ну потому что на самом деле поиск минимального
разреза это отдельная математическая задача. По умолчанию она
даже с потоками никак не связана. То есть просто
вобразить задача, потому что можно эту задачу отдельно
формулировать. Дан граф, взвешенный, все веса не отрицательные.
Там, ну правда, допустим, S и T, правда, фиксировано.
Я хочу провести разрез так, чтобы S и T разделились,
и при этом сумма ребер пересекающих разрез была как можно меньше.
Ну на этот раз сумма, понимаете, да? Это тоже отдельная задача.
Ну вот, но на самом деле, вот, оказывается, она решается
с помощью максимального потока. То есть если вы
нашли, вот у вас с небес по факсу прислали максимальный
поток, то минимальный разрез вы тоже найдете без проблем.
Вы просто, за O от E, то есть вы просто запустите DFS из
устока по не нулевым ребрам в остаточной сети.
Сейчас еще раз, если у меня есть ориентированный граф.
Ну, например, ориентированный, а можно и не ориентированный.
Хорошо, и не ориентированный, то... Ну не важно.
Ну ориентированный, то его можно сделать ориентированным.
Ну, например, да.
Ну, здесь есть пара технических моментов, конечно.
Но там важнейший момент, что задачи мы умеем решать
только в предположении, что веса всех ребер не отрицательны.
Это важно. Потому что пропускные способности, да.
Вот с отрицательными что-то наука, по-моему, как-то напряженно работает.
А тут так.
Поэтому, в чем чаще всего, кстати, в реальных задачах
на самом деле, да, то есть там, чаще всего, когда говорят,
задача решается потоком, то есть чаще всего, на самом
деле, говорить, задача решается разрезом, а не потоком.
Ну, то есть, на самом деле, просто поток используется как черный ящик,
который ищет разрез. То есть, если у вас есть какой-то там
принципиально другой метод, который работает на основе
идей, синказии и этапов, то, в общем-то, потока для этого не нужна.
Так что вот.
Ну, вот такая. Так что это вот мы отметили.
Ну, в строем мы еще так, как говорится, в какой-то момент,
в какой-то момент у нас еще будет такой семинар,
такой буквально семинар на этот раз.
Ну, вот.
У нас будут семинары.
Ну, как...
У нас будут семинары?
Ну, в некотором смысле, да.
Вау!
Нет, ну, возможно, даже когда-то сегодня будет, я думаю.
Ну, что, времени еще немного.
Я, собственно, поэтому и решил, на самом деле, пока это лучше.
Раз есть время, давайте кого-нибудь потоки максимально подробно обсудим.
Вот.
Ну, пока же так, значит, до перерыва у нас там осталось сколько там?
Ну, просто...
Ну, нет, я имею.
Нет, до перерыва...
Ну, уже нет смысла, как бы.
Да.
Уже нет смысла.
Ну ладно, где-то полчаса.
Но поговорим мы вот о чем.
Значит, смотрите.
Ну, диспозиция тут такая.
Значит, теперь как же этот максимальный поток искать?
Ну, на самом деле, да.
Мы убедились в том, что у нас жадник через остаточную сеть.
Значит, жадник через остаточную сеть, он работает.
То есть, и в принципе, теперь это можно даже формально...
Теперь уже формально действительно сформулировать.
Нет, формально сформулировать так себе слово сочетание, конечно, но...
Как это?
Фродам.
То есть, формализовать и сказать, что это теперь у нас будет называться метод Форда Фолкерсона.
Метод.
Метод Форда Фолкерсона.
Фолкерсон.
Значит, мистический метод звучит...
Ну, фактически звучит так.
Ваил...
Я прямо даже вот начну так писать.
Ваил в GF есть путь из S в T.
По не нулевым играм.
Ну, короче, пустить по этому пути максимально возможное...
Максимально возможное...
Количество...
Чего?
Воды.
Программистов.
Короче, количество единиц потока.
Условных единиц.
Вот так.
Знаете, там 90-е, как бы почему-то, я не знаю, почему-то...
Называется...
Про доллар был эфемизм условных единиц.
Или сокращенно УЕ.
Да, поэтому все получали зарплату УЕ.
Да, это реально так звучало, да.
Вот.
Вот такая вот диспозиция.
Максимальное возможное количество единиц потока.
Вот такая.
То есть, вот просто метод Форда Фолкерсона такой.
Почему я называю его метод, а не алгоритм?
Ну, потому что я ничего не говорю о том,
а как конкретно мы будем искать пути, правда?
Ну, самый тупой путь, это, конечно, ДФ.
Что можно сделать, это, конечно, ДФС.
Да.
Есть такая красота.
Но есть одна...
Ну, вот.
Ну, а что мы можем тогда сказать?
Ну, мы можем сказать так, что если метод Форда Фолкерсона
закончит свою работу,
то найденный поток реально максимальный.
И это вот, спасибо.
Да.
Но есть одна маленькая проблема.
А он закончит свою работу.
А он же с целыми работает.
Ну, как сказать?
Нет, он, ну, теоретически он может с кем везде работать.
Ну, в смысле, за нормальное время?
Да, ну, смотря, что для вас нормальное время.
На самом деле, я даже в целых числах могу привести пример,
где теоретически может работать очень больно.
Вот есть вот такой...
Вот есть такой классический пример.
Ну, то есть, конечно, классический пример там,
где я вам будет просто фатально не вести.
Он же работает вообще-то за моду Лев.
Ну, в единичном графе, да, за моду Лев на ДФС, да.
Ну, если ДФС нам искать, конечно.
Но это уже другого.
Нет, иногда, кстати, это помогает.
Иногда, кстати, это помогает.
Иногда такой метод помогает.
Если вы знаете, что у вас максимальный размер потока это два,
ну, то как бы тогда, как найти поток?
Ну, просто запустили два ДФС, и в общем-то все.
Нет, кстати, отсюда следует важная вещь.
Кстати, из вот этой теоремы и из этого метода,
что на самом деле, если все пропускные способности целые,
то тогда вы можете найти максимальный поток в целочисленном виде.
Нет, я имею в виду другое.
Из разреза следует только, что максимальная,
что как бы величина максимального потока будет целой.
А я утверждаю следующее, что вы еще и по каждому ребру будете пускать целое число жидкости.
Это более сильное утверждение.
Это уже из метода следует.
Потому что каждый ДФС у вас будет пускать по целому числу жидкости.
Но если вам фатально не везет,
то, например, вот в этом графе вы можете тут просто запускать миллиард ДФС вот таким вот нехитрым способом.
То есть, если вам как-то совсем фатально не везет.
Но, более того, это еще самое худшее.
То есть, на самом деле, если вы посмотрите...
На самом деле, тут я вас отошлю к Википедии.
Но бывает... Но там, оказывается, там еще круче.
В иррациональных числах вообще бывают примеры, когда этот метод не закончится никогда.
Это уже грустная история.
Да, нет. Самая грустная история, что вы скажете,
ну ладно, давайте сколько-то там интераций сделаем,
и это будет близко к максимали.
Нет.
Да, нет.
Ну просто из того, что какой бы тут черный ящик ни был,
даже если у вас тут сходится от СТ, и вы тут что-то ищете,
вы всегда можете добавить какое-нибудь ребро, и пусть ДФС опихаются только здесь.
Поэтому, как бы оказывается, вы можете просто...
Процесс у вас может даже не сойтись.
И это больно.
Поэтому просто так ДФС...
Ну нет, иногда работает.
То есть, иногда работает.
Будет у нас парасочетание, на самом деле,
он будет работать еще как.
Ну да, как вы уже догадываетесь...
Кто-то уже догадывается, на самом деле, алгоритм Куна
это просто там упиханный метод Форда Фолкерсона.
Вот.
Вот для этого у нас будет семи...
Вот для этого у нас будет семинар.
Да, как раз.
Чего?
Ну, погодите.
Ладно, давайте не будем торопиться.
Мы про сочетание еще подробно рассмотрим.
Сегодня же и рассмотрим, в общем-то.
Ну так, в принципе, вот...
До деница.
Так, во-первых, до деница.
Нет, мы сказали до деницу.
Окей, хорошо, хорошо.
Хорошо, хорошо.
До деница.
Не уверен.
Не уверен.
Хотелось бы, но не уверен.
Что все, да.
Что прям все сразу, это вот еще вопрос.
Остановись.
Мясо.
Да, давайте.
Ничего не надо.
Самое сложное мы там уже сделали.
Значит, смотрите.
Но, конечно, первые шаги для деница мы сделаем уже сегодня.
Ну, потому что для этого начнем мы, конечно, с простого.
Потому что тут вытекает...
Потому что вот конкретно вот этот граф наводить сразу будет хорошо.
DFS не получается.
А может BFS?
Вот.
Поэтому получается...
Алгоритм Эдмонса Карпа.
Подождите, тут будут сейчас эти алгоритмы.
Знаете, так пафосно.
Алгоритм Эдмонса Карпа.
Как бы пафосно.
То есть прям целых два автора.
А с точки зрения того, что мы уже сказали, на самом деле описывается одной фразой.
Метод Форда Фолкерсона.
С поиском путей BFS.
Вот такой вот красота.
То есть идея в том, что просто берем тупо метод Форда Фолкерсона, но вот эти вот пути и ищем, и пускаем, это просто BFS.
BFS в смысле, то есть ищем кратчайшее по количеству, внимание, ребер, пути.
Именно ребер.
То есть нам наплевать там, сколько по этим ребрам можно пустить.
Главное, чтобы было поменьше.
И конкретно в данном случае это неплохо работает.
Потому что тогда мы, собственно, за два BFS в общем-то все закончим, правда?
Но, конечно, этот маленький пример, это, конечно, сам по себе не показатель.
Да.
В каждый момент времени мы берем остаточную сеть и ищем кратчайший путь.
Но мы ищем, конечно, по не нулевым ребрамам.
Алгоритм Эдмонса Карпа.
Да.
Да.
Вот.
А, ну да, что-то мы забыли про английский.
Так что, да, вот остаточная сеть, кстати, называется.
Вот это Residual Network.
Вот так вот.
Это остаточная сеть.
А, ну сеть.
Да, вот вы уже догадались, как сеть называется.
Да, Network.
Эти товарищи.
Ну, тут, в общем-то, тут все тривиально.
Редкие случаи, как слышится, так и пишется.
Да, прям.
Через K?
Да.
Да, да, да, да, да.
Ну, надеюсь, там нет подлянки, что там карта через U какой-нибудь.
Или через C.
Нет, C точно нет.
А вот это, ну, в общем, ладно, вы там.
Так что вот, метод Форда Фолкерсона с поиском путей BFS.
Вот.
И вот, оказывается, что этот алгоритм, он работает.
Вау.
В смысле, конечно работает.
Сильно.
Полиномерально конечно работает.
Даже с иррациональным.
Да.
Не, ну, давайте, могли ли все поспеть про два-степеневое это?
Чего?
Какого?
Разрела?
Нет, ну, тут эти тут задачи, надо же поток найти.
Как бы, я хочу, да.
Как это?
Здравствуйте, да.
Как это называется?
Какие когда-нибудь мечты будущего?
Как это?
Жили были Россия, Китай, Индия, Евросоюз.
И хотели они пускать между собой много-много товаров.
Классные идеи.
И сказали они, а сколько товаров мы тут можем пускать?
Вот.
И пришли два американца.
И сказали, да, мы тут перебрали у вас тут два в степени разрезов.
Вот.
И нашли.
Вот минимальный.
Ответ 42.
Ну вот.
Ну правда, нам бы хотелось не только 42, а, собственно,
наладить торговля.
Не сказать, что где-то там в теоретических мечтах
мы тут могли бы торговать друг с другом на уровне 42.
Что бы это ни значило.
Но на самом деле все гораздо проще.
Ну, на самом деле, оказывается, в чем дело?
Но на самом деле базируется все на очень интересном утверждении.
Которое уже может гарантировать в некотором смысле конечности.
То есть утверждение.
Ну вот.
Для любой вершины В.
Дист от С и В.
В процессе.
Эдванса Карпа.
Внимание.
Не уменьшается.
То есть не может быть так, чтобы тут.
Ну то есть понятно, что расстояние меняется.
Потому что какие-то ребра становятся нулевыми.
Какие-то наоборот становятся ненулевыми.
Ну в остаточной сети, да?
Ну вот.
Но факт остается фактом.
Расстояние в процессе Эдванса Карпа не уменьшается.
Ну расстояние я естественно имею в виду в остаточной сети.
Ну вот я вот вижу.
То есть оно может меняться, оно будет увеличиваться конечно.
Но уменьшаться оно не будет.
Почему?
Ну догадаться очень простое.
Рассмотрим какую-то фазу Эдванса Карпа.
Да?
Ну минимальное количество ребер в пути от С до В нулевых.
Да, но именно в остаточной сети, что важно.
Значит я утверждаю, что расстояние не уменьшается.
Потому что как меняется граф?
Смотрите, вот у нас давайте рассмотрим какую-нибудь фазу.
Чтобы найти очередной путь, мы запускаем BFS.
И BFS у нас разбивает граф на вот такие слои.
Видите, да?
Где-то здесь даже T находится.
Но это не обязательно последний слой.
А могут быть еще вообще какие-то еще вершины, до которых мы вообще не дошли.
Ну кстати, но из Форда Фолкерсона, как мы сейчас легко увидим,
что если мы сейчас не можем дойти до S, то в процессе мы уже не сможем доходить до них никогда.
Ну у нас просто так устроено все.
Потому что у нас что-то меняется только для вершин, до которых мы из S дойти могли.
И так, граф у нас устроен так.
То есть граф устроен так, что у нас все ребра идут из слоя в следующий.
Вот как-то вот так.
Ну а также могут идти внутри одного слоя.
Не обязательно, я же говорю, могут быть внутри.
Могут, пожалуйста, это пожалуйста.
Это все пожалуйста.
Вот это все пожалуйста.
Единственное, что запрещено, это скакать из слоя через один, два и так далее.
Такого не бывает.
Все, вот так.
Вот так вот еще бывает.
Но сюда и в другом не бывает.
Ну вот не важно.
Теперь смотрите какая ситуация происходит.
Вот рассмотрим эти слои.
Прямо сейчас расстояние такие.
Это остаточная сеть, да?
Да.
Это остаточная сеть на какой-то фазе.
То есть мы уже там сколько-то потоков пустили, поэтому и остаточная сеть стала вот такой капсом.
Вот такой.
Значит, смотрите.
Тогда мы говорим, что мы нашли кратчайший путь.
Кратчайший путь выглядит вот таким вот образом.
Ну прямо сейчас да.
По определению БФС.
Мы же не просто так эти слои нарисовали.
Это вершины с расстоянием один, это расстояние два, это расстояние три и так далее.
Нет, я здесь нарисовал только не нулевые ребра.
Да, это важно.
Поэтому путь будет выглядеть именно так.
Но прямо сейчас обратите внимание.
Это один из путей, которые мы нашли в БФС.
Появятся обратные ребра.
Так они и называются обратные.
Мы точно можем сказать, что вот эти ребра точно появятся.
Может они даже и были, кстати.
Но теперь они точно есть.
В том плане, что они могли быть нулевыми.
Когда я сейчас говорю, ребра появились, я имею в виду, что они стали не нулевыми.
Потому что мы пропустили по этому пути поток.
Ну пропустить поток означает, что увеличить поток через F у всех этих ребер на максимально возможное число.
Но в этом смысле тогда, с точки зрения остаточной сети, что произойдет?
Тогда пропустая способность в остаточной сети вот этих вот обратных ребер на эту же константу увеличится.
Может она и была не нулевой, но теперь не нулевой точно станет.
А еще мы можем, кстати, сказать, и для нас тоже будет важно сейчас, что хотя бы одно из этих ребер исчезнет.
Ну пока нам сейчас для утверждения не важно, но как бы мы же увеличиваем не просто так,
мы увеличиваем так, чтобы по одному из этих ребер мы перестали мощь пустить, по крайней мере сейчас.
Может быть, кстати, таких ребер будет несколько.
Иногда бывает, что просто там убьются все ребра.
Но как бы пока у нас в общем случае гарантируется, что убьется только хотя бы одно.
Вот такое изменение претерпело это вот остаточная сеть.
А теперь давайте попробуем найти расстояние от СДВ в обновленной сети.
То есть на следующей итерации.
Заметим теперь следующее. Как изменилась сеть?
Вот рассмотрим те же слои. То есть обратите внимание, это слои, оставшиеся с предыдущего BFS.
Но в них было свойство, что у нас нет ребер, которые скачут из слоя через один или через два вперед и так далее.
А теперь вот было расстояние от СДВ в нашем случае 4.
Так вот, я утверждаю теперь следующее, что теперь на следующем шаре меньше 4 не будет.
Почему? Потому что если рассмотреть слои, которые остались с прошлого раза, то проход по каждому ребру увеличивает номер слоя не более чем на один все еще.
Потому что ребер, которые скачут у нас через слой, они так и не появились.
То есть все новые ребра, которые у нас появились, они идут назад.
Поэтому меньше чем 4 точно не будет. Может будет больше.
Потому что может быть вершина В была вот эта и там какой-то вот этот путь убился.
Но меньше уж точно не будет.
То есть таким образом мы показали, что на следующей итерации расстояние будет не меньше, чем до предыдущего твердения доказано.
Ну а за одной из этой же картинки следует, что если до вершины пути не было, то он и не появится.
Вот понимаете, да?
Но если пути не было, как может увеличиться тот, что нет?
Нет, если он есть, то вершины тут есть. Вот я тут нарисовал вершины, которых пути из С вообще нет.
А про красную? Ну да, оно могло увеличиться, да, все нормально.
Да, оно могло увеличиться, и это важно.
Нам главное, что оно не уменьшается.
А увеличиться оно могло, и мы этим будем пользоваться.
Вот. Теперь давайте думать, что происходит.
Теперь смотрите. Давайте теперь рассмотрим каждый.
И теперь заметим следующее, что расстояние только увеличивается.
То есть, ну вот, и остаются теми же.
Но заметим, что каждый BFS убил хотя бы одно ребро.
Теперь мы искали этот вопрос.
Ну правда заметим.
То есть очень хочется сказать, ну тогда из этого следует, что количество BFS будет не более чем E.
Ну потому что у нас всего E ребер.
Да. Ну хорошо, 2E.
Да, эти ребра могут быть и обратными, в общем-то быть.
Но все еще круче.
Потому что дело в том, что ребро, может быть так случится, что ребро придется убить несколько раз.
А элементарно.
Ситуация такая. Вот прямо сейчас мы убили вот это ребро.
Что значит убили? Сделали его, у него нулевая остаточная пропускная способность.
Но на следующих итерациях BFS, это мы тут один раз рисуем.
Но на самом деле там слои будут принципиально другие, пути будут принципиально другие.
И мы можем заходить.
И в какой-то момент может оказаться.
Да, вот это ребро может сыграть обратно.
Но тогда, когда мы по нему пустим поток, тогда это ребро разубилось обратно.
Да вот, наоборот ожило обратно.
Да, а потом в какой-то момент оно опять уже стало чуть дальше, но тоже на пути от SdT.
То есть расстояние от SdT увеличилось, но оно оказалось на пути.
И мы его опять убили.
Потом опять воскресили.
Потом опять убили.
И вопрос, сколько раз мы можем убить ребро?
Но заметим, да.
Даже, я бы сказал, в пополам.
Конкретное ребро можно убить не более, чем в пополам раз.
Причина очень проста.
Дело в том, что когда вы убиваете ребро, значит расстояние до его начала равно D,
а до конца D плюс 1, где D какое-то произвольное число.
Правда?
Ну, произвольное число меньше, чем V.
Даже V минус 1, но это уже мелочь.
Тогда смотрите.
Итак, вы его убили.
Да, как-то вы убили Виктора Ленуара.
Да, вот.
Соответственно.
Но теперь, что дальше?
Но теперь, чтобы оно ожило, нужно, чтобы здесь вот это ребро стало ребром BFS.
Но тогда это означает, когда оно живет, это означает, у этой вершины, раз сейчас D плюс 1,
то потом будет больше либо равно, чем D плюс 1,
а здесь, как следствие, должно быть больше либо равно, чем D плюс 2.
Правда?
Вот.
И тогда мы его убили, а вот это ребро ожило.
И тогда, в следующий раз, когда мы его захотим убить обратно,
тут уже будет больше либо равно, чем D плюс 2,
а тут, как следствие, больше либо равно, чем D плюс 3.
То есть, понятно.
Помните, да?
Ну, ребро ведет себя логично.
Если его один раз убили, то в следующий раз, когда его будут убивать,
оно будет держаться от истока подальше.
В общем-то, логично.
Вот.
Поэтому, как бы, оно себе гарантирует, что его убьют не более, чем V пополам раз.
Почему V пополам?
Потому что, ну, V пополам плюс один, может быть, я не знаю.
Потому что каждый скачок на расстоянии, видите, тут аж два, а не один.
А расстояние больше, чем V быть не может.
Мы сказали, что каждое ребро убьется не больше, чем V пополам раз.
Для каждого ребра мы считаем, что, ну, для ребра больше, чем V пополам раз.
Для каждого ребра мы считаем, что, ну, для ребра в начальном графе у нас есть два ребра в его сети.
Нет, у каждого ребра, да.
Но другое вопрос, что у нас ребер не E, а два E, это да.
То есть мы считаем для каждого ребра в остаточной сети, что он убьется не более V пополам раз.
Да.
Но в остаточной сети у нас два E ребер.
Да.
Два E ребер.
И это означает, ну, в принципе, асимпатически, в общем-то, это не принципиально.
И это означает, что всего у нас убийств будет, то есть не более чем, еще раз, два E умножить на V пополам.
Не V.
Ну, там может быть плюс один еще, но на самом деле там нет плюс один, потому что там V минус один расстояние, на самом деле.
А это на самом деле V минус два, ну, в общем, понятно.
Так что, короче, убийств будет не более, чем VE.
А почему сейчас V пополам можно повторить?
Потому что, смотрите, если вы один раз убили ребро, то в следующий раз, когда вы будете убивать это же ребро, именно вот это же, да, расстояние до вот его начала будет хотя бы на два больше.
Поэтому именно V пополам.
И так, значит, убийств будет не более, чем даже, ну, там можно просто сказать O от VE, но на самом деле просто VE.
Значит, VE убийств.
А это означает, то есть простое следствие, что, то есть простое следствие очень простое.
Что раз у нас VE итераций, ну, плюс одна может быть, чтобы выяснить, что все плохо.
Каждое работает за O от E, ну, может быть V плюс E.
Ну, хорошо, и тогда у нас получается такая симпточь, как VE на V плюс E.
Ну, на самом деле, я бы можно просто сказать VE квадрат.
Ну, я так скажу вам, смотрите, на самом деле...
Ну, я скажу так, запусти, потому что можно вначале запустить BFS, да, и сказать, что до кого я не дошел, до тех, кто все равно не дойду, так что давайте их приигнорим.
И получается, на самом деле, там, то есть на самом деле вот это вот V плюс E значения иметь не будет.
Ну, да, то есть на самом деле это V, тут на самом деле V надо заменить на минимум из VE.
Но чаще всего, ну, обычно об этом не заморачиваются, потому что чаще всего очень редкие случаи, когда V больше, чем E, ну, по понятным причинам.
Вот.
Что такое V плюс E? Почему вы за эту...
Ну, BFS у нас формально за V плюс E работает.
А х, что у нас такое?
Это вот этот х, это количество убийств.
Общее количество убийств?
Да.
Вот так.
Вы В тратите на то, чтобы в БФСе зачистить массив ювизм.
А Х, что у нас такое?
Это вот этот Х, количество убийств.
Общее количество убийств?
Да.
Вот так.
Ну почему меньше либра равно?
Потому что не каждое либро убивается.
Да, во-первых, не каждое либро убивается.
Во-вторых, в некоторых БФС вы убьете сразу несколько
А 2Е из того, что в остаточной сети 2Е ребра.
Помните, по исходному графу с Е-рёбрами мы для каждого
ребра добавили в эту штуку два?
Поэтому да.
У нас есть два ребра, и каждая очень очень хочет
умереть как можно большее число раз.
Что за фатализа?
Ну почему, наоборот, весело.
Нет, фатализа травмастная, это значит мы все умрём.
А тут как вы думаете?
Ну хорошо, можно по-другому.
И каждый хочет ожить.
И ещё раз.
И ещё раз.
О господи.
Жириновский это ребро в графе.
Интересно.
Не, по этой логике да.
Кто тут исток, кто сток.
Кто пропускная способность.
О господи.
Да, на самом деле.
Ну да.
А все да.
И потом грустно.
Да на самом деле все мы один большой водопровод.
И в итоге нас всех сольют.
Да, да, да.
Как не тот фатализм пошёл.
Ну да.
Не, ну там везде можно.
Все сядут на машинку и поедут через границу.
Ну да.
Не, ну как сказать.
Смотрите, на самом деле.
Ну во-первых, да, у нас не было перерыва 15 минут.
Нет, ну отчасти мы его скили из-за того, что я чуть опоздал.
Вот.
Но это неважно.
Впрочем, на самом деле мы здесь дошли, мне кажется,
до определенной такой хорошей точки.
Так что как раз вот здесь остановиться стоит.
Так что что мы и сделаем.
Ну вот.
Ну а соответственно потом продолжим.
И вот я не знаю.
Наверное будет не алгоритм Диница, наверное.
А в первую очередь мы все-таки посмотрим, что с этим можно сделать.
