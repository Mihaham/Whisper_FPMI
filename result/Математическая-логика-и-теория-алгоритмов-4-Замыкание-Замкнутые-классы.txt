значит что мы в прошлый раз изучили значит мы изучили что любую функцию значит можно представить
значит как кнф значит можно представить как dnf значит и так же можно представить как
многочлен жигалкин вот а какие связки нам нужны чтобы эти формы записывать но вот чтобы
представлять кнф dnf до ночи нам нужно отрицание конъюнции дизюнция ну и тут тоже отрицание
значит чтобы записывать многочлены нам нужна конъюнция то есть умножение или наоборот
умножение то есть конъюнция и сложение то есть ксор вот но на самом деле это мы определяли только
через сложение и умножение чтобы это записать нужно еще один символ единица потому что когда
определяли мы говорили что единица но это вот такое пустое произведение произведение нуля
переменных это как бы единица но с помощью переменной можно записать произведение одной
переменной с помощью нескольких переменных и конъюнции может сказать при zdję interject
нуля переменных нужно еще специальные силы единица вот с другой стороны чтобы записать
сумму нуля переменных. Специально символа не нужно, можно просто писать x-xor-x.
x-xor-x это 0, значит и поэтому, чтобы 0 записать другого,
других символов не нужно. Вот, на самом деле, в случае с KNF и с DNF можно
заметить закон Д. Моргана, и что P конъюнция Q это будет, так, сейчас дайте,
я не равно напишу, а эквивалентно, хотя можно и равно в данном случае. Да, дайте я,
наоборот, равно напишу, значит это равно отрицанию, дезюнции отрицаний.
Соответственно, можно все конъюнции заменить на вот такие штуки и останутся
только отрицание и дезюнция. Ну или наоборот, значит, можно писать, что P или Q
это будет отрицание, отрицание P и отрицание Q. Да, и можно, наоборот, все
дезюнции заменить на такие штуки, останутся только отрицание и конъюнция.
Вот, получается вывод, значит вывод, что можно, можно все формулы, значит, можно все
формулы записать, только используя все, сейчас не формулы, наверное, а функции.
Ну а форма как бы преобразована как эквивалентно, значит, функции записать,
так дайте я чуть подробнее напишу, значит, записать формулами, использующими только,
значит, использующими только. Ну вот, первый, значит, первый вариант только отрицание и конъюнция,
второй вариант только отрицание и дезюнция, значит, третий вариант только вот эти вот,
конъюнцию, ксор и единицу, ну и так далее, да, значит, можно еще много других вариантов,
ну давайте какой-нибудь еще не тривиальный вариант я напишу, значит, например, можно рассмотреть
импликацию и тождественную ноль, тождественную ложь, тоже, значит, это будет другой язык,
значит, импликация, тождественная ложь, но можно в этом языке тоже все что угодно записать,
значит, а именно отрицание будет записываться, ну как то, что из П следует ноль, значит,
это вообще полезный, полезная точка зрения на отрицание, да, что П неверно, если из П следует
ложь, да, то есть, как бы, если из П следует ложь, то П само ложно, и это тут и написано,
ну а дальше можно написать, например, да, значит, мы знаем, что, значит, П влечет Ку,
это то же самое, что не П или Ку, и тогда можно это опять же переначить и написать,
что П или Ку, это будет, что отрицание П влечет Ку, вот, а после этого происходит следующее,
что мы уже выразили отрицание, значит, и уже выразили дизюнцию, а через отрицание дизюнции
можно выразить все что угодно, через КНФ, ДНФ, тогда получается, что и через импликацию и ноль,
мы тоже можем выразить все что угодно, хорошо, значит, это примеры такие положительные, да,
значит, когда мы можем все выразить, дайте еще один пример, значит, пример, когда можно даже из
одной связки все выразить, значит, пусть есть штрих шефера, значит, штрих шефера это отрицание
конъюнции, штрих шефера это у нас отрицание конъюнции, значит, тогда нам только его одного хватит,
значит, почему, ну потому что теперь отрицание П это будет П штрих П, да, значит, почему,
ну потому что если П это ноль, да, то ноль конъюнции ноль это ноль, а потом еще отрицание это один, да,
поэтому ноль штрих ноль это один, ну а с единицей наоборот, единица конъюнции единицы это единица,
отрицание это ноль, то есть один штрих один это ноль, ну а дальше может, например, конъюнцию выразить,
значит, П конъюнция Q это будет отрицание штриха шефера, да, если штрих шефера это отрицание
конъюнции, то наоборот конъюнция это отрицание штриха шефера, ну а отрицание у нас уже есть,
то есть получается штрих шефера П и Q штрих сам с собой, вот, ну а дальше как раньше, если у нас есть
отрицание конъюнции, то тогда можно все что угодно выразить, вот, это вот такой пример, да,
значит, пример ровно одной операции, через которую все можно выразить, значит, у этого факта есть такое,
так сказать, электротехническое применение, да, что можно прям какие-то микросхемы поять логические,
которые будут вычислять логические функции, ну так что у каждого элемента, да, какой-нибудь реле там или
транзистор или что-нибудь еще, значит, у этого элемента есть какие-то проводки, которые в него входят,
вот, дальше в этом элементе что-то происходит и, соответственно, из него проводок выходит наружу,
но и этот элемент вычисляет логическую функцию, если в зависимости от того, есть ли ток на входящих
проводках, будет или не будет ток на исходящем проводе, но дальше еще может какие-нибудь разветвить
или ставить, да, как дублировать сигнал, вот, ну можно и не ставить, вот, тогда получается, что можно считать,
что у вас вот есть ассортимент таких базовых элементов, да, есть элемент отрицания и элемент
дизъюнция, и тогда из таких двух элементов вы можете спаять все что угодно, да, что у вас будет
вычислять любую функцию, вот, но есть какая-то вопрос, а можете только из одного элемента, значит, любую
схему спаять, да, потому что удобнее выпускать только один элемент, да, на производственной линии, но вот,
как раз штрих шефера является примером такого элемента, ну, а второй, например, стрелка пирса,
примерно, также делается, вот, поэтому там всякие люди, которые на низком уровне изучают всякие
процессоры и микросхемы, да, значит, они это очень любят, называют nand, потому что not end, а стрелку пирса
называют nor, да, потому что not or, ну и, соответственно, вот, в принципе, можно схему для любой функции
спаять вот только из таких элементов, да, хорошо, ну ладно, теперь с другой стороны, давайте посмотрим, пусть у нас
теперь, например, нет отрицания, да, пусть есть только, значит, пусть есть только
conjunction, disunction, implication, да, вот, пусть мы из наших четырех базовых связок убрали отрицание,
оставили только вот такие бинарные связки, значит, можно ли тогда все выразить? Ну, смотрите, значит,
knf-dnf уже не получится, да, потому что отрицание нужно, да, значит, начнешь галкин тоже не получится,
единицу-то можно получить, да, как p влечет p, а вот xor не понятно, как получить,
вот, на самом деле тут уже не все можно получить по следующей причине, смотрите, пусть мы написали
формулу только из conjunction, disunction, implication, без отрицаний, без xor, да, без чего-либо еще,
и подставили мы в нее все единицы, тогда что мы получаем, да, получаем, что единица
конъюнкция единицы это единица, значит, единица-дизюнкция единицы это единица,
и единица-импликация единицы это единица, ну и дальше можно индукции ей по обвстроению
формулы доказать, что тогда любая такая формула, будучи вычисленной на одних единицах, дает единицу,
да, то есть вот из этих трех вещей следует, что если мы в функцию подставим все единицы, значит,
то получится единица, вот, ну и так, скажем, если это саму экваленцию еще добавить,
например, то там тоже будет то же самое, вот, в общем, тут этого нам не хватит, да,
значит, нам нужно что-то, что единица превращает в ноль, не обязательно прям отрицание, да,
значит, может быть из штрих-шефера, да, или даже xor, да, вот если сюда добавить xor, то уже все
можно выразить, да, потому что единица через импликацию выражается, да, конъюнкции xor и единицы дают
через навещание нажигалкина все на свете, вот, но как раз xor на единицах две единицы превращает в ноль,
хорошо, то есть только такое препятствие, да, значит, такое препятствие, что если базовые связки,
значит, препятствие, что если базовые связки все сохраняют единицу, то есть при подстановке единиц дают
результат 1, то и все, что можно выразить, тоже сохраняет единицу, значит, то и все выразимое
тоже сохраняет единицу.
Вот, не, ну хорошо, допустим, допустим, мы от этого избавились, да, хорошо, давайте, ну вот если взять
импликацию xor, соответственно, конъюнкции дизъюнкции, да, то это нам даст все что угодно, даже на самом
деле просто импликация xor уже даст все что угодно, потому что через xor можно получить ноль, да, из
импликации нуля можно получить все что угодно, вот, хорошо, а теперь попробуем заменить импликацию на
xor вот в этом наборе, да, значит, и получим, например, значит, получим конъюнкции дизъюнкции xor, тогда вот того
препятствия не будет, да, потому что 1 xor 1 это ноль, но будет симметричное препятствие, что если мы нули
подставим, то, соответственно, будут оставаться одни нули, да, значит, тут получается препятствие,
что 0 конъюнкции 0 это 0, 0 дизъюнкции 0 это 0 и 0 xor 0 это 0, да, и получается симметричное, значит,
симметричное препятствие, что отсюда, соответственно, f от всех нулей должно равняться нулю,
так, ну, хорошо, значит, моя задача на сегодня это рассказать некоторую общую теорию, значит,
как по набору исходных функций понять все можно выразить или не все можно выразить,
значит, если это функция двух аргументов, то там, в принципе, не так уж и много вариантов,
ну, что-таки не так уж и мало, но не так уж и много, в принципе, можно как-то разобраться на
пальцах, но если исходные функции от произвольного числа аргументов тоже нужна некоторая теория,
вот, и вот эту теорию развил американский логик Эмиль Пост в середине 20 века, и он вообще ввел
полную классификацию, значит, полная классификация это уже немножко специальная тема для спецкурса,
скорее, чем для регулярных лекций, но самую важную часть мы изучим, значит, если вас заинтересует
более подробно, то ключевые слова, значит, это решетка Поста, значит, решетка, да, почему,
потому что вообще слово решетка это многозначное в математике, и разный объект называется решетками,
бывают решетки как упорядоченное множество, бывают решетки как экологические структуры,
бывают решетки как дискретные подножства пространства, вот, но, наверное, все, где-то три основных
значения, вот так, ну вот, значит, это, соответственно, значит, набор, ну, не набор, как бы, систематизация,
систематизация замкнутых классов вулевых функций, так, а что такое замкнутый класс, ну, сейчас поговорим,
значит, сначала нужно что-то вроде обобщенной формулы написать, но, смотрите, у нас в наших
в наших проектах построения формулы была унарная операция, это отрицание, которое просто приписывалось слева к формуле,
и были разные бинарные операции, которых можно было других добавить, да, не конъюнкции, дезинкции, импликации,
а любые другие можно взять, которые писались в так называемой инфиксной записи, да, когда символ операции
между двумя оперантами пишется, но если у вас функция от трех аргументов, то там понятие инфиксной записи уже будет
бессмысленно, хотя вообще иногда бывает, да, значит, есть вот такая вот функция, это называется тернарный оператор,
если вдруг кто не знает, это значит следующее, если p истинно, то оно берет q, а если p ложно, то берет r, да, то есть это
как бы такое if-then-else оператор, вот, но это, пожалуй, единственный пример, когда функция больше, чем от двух аргументов
записывается в инфиксной форме, вот, а обычно функции записывают все-таки вот так вот, да, например, функция большинства,
значит, majority от pqf, да, то есть есть какое-то специальное имя его функции, и дальше в скобках через запятую перечисляются аргументы.
Вот, ну и, значит, удобно, соответственно, в общем виде так записывать формулы, так, ну и давайте я прям параллельно,
параллельно можно говорить, значит, про суперпозицию функций, ну или по-простому композицию, да, но иногда говорят, что композиция
то, что мы в УХТЧ изучали, да, что композиция бывает у функции одного аргумента, а если функция многих аргументов, то это уже надо называть не композиция, а суперпозиция.
Так, значит, вот есть понятие суперпозиции функций, суперпозиция функций, значит, и можно также писать от формулы
с произвольным набором базовых связок.
Так, значит, с точки зрения, значит, это более-менее каждой формуле как записи соответствует функции как суперпозиция.
Значит, база рекурсивного определения, значит, это когда как бы глубина 0, значит, если глубина 0, значит, тогда суперпозиция глубины 0,
и это просто уже называется проектор, значит, проектор на ИТ-у координату, значит, от А1 и так далее АН, значит, это будет АИТ.
Значит, это проектор, вот, или еще есть такое красочное название из теории общественного выбора, это диктаторская функция.
Почему диктаторская? Ну, потому что вот как ИТ решил, так и будет, значит, тут ИТ и диктатор.
То есть вообще теория общественного выбора изучает такие правила агрегирования, что, например, к какому-то вопросу у каждого члена общества есть мнение
за или против, чтобы это была булева функция, нужно взять только два варианта, нельзя издержаться или скорее, ничего такого нет, просто либо 0, либо 1.
Ну, а вот эта функция агрегирования получает все эти мнения и какой-то результат возвращает.
Ну, вот диктаторская функция, когда есть один диктатор, и как диктатор решил, так и будет.
Хорошо, значит, в случае с формулой то глубина 0 это просто переменная, значит, здесь глубина 0 это просто ПИТ.
Значит, сама по себе переменная это формула глубины 0.
Так, ну а дальше, значит, глубина N, так, давайте, так, нет, N это у нас число переменных, но давайте глубина это D, значит D, D плюс 1, значит глубина D плюс 1.
Значит, это вот, что, это получается, что, ну какая-то запись вот такого вида F от phi 1 и так далее, phi kt, значит, где вот эти все phi t,
значит, phi t это формулы глубины меньше либо равно D.
Ну и вообще-то, если вы хотите, чтобы глубина была определена однозначно, то надо сказать, что они все меньше либо равно D и какая-то одна ровно D, тогда тут будет глубина D плюс 1.
Вот, если вам это не нужно, можно не обращать внимания и говорить, что они все глубины не больше D.
Вот, ну а F, это вот базовая связка, значит, F это базовая связка, значит, как говорят, валентности k или r-ности или местности.
Да, в общем, все эти слова означают, что k это сколько, ну в случае, смотрите, в случае функции k это сколько аргументов в функции, ну а в случае вот такой записи это просто сколько как бы мест для подстановки.
Вот, ну и чтобы было единообразно, можно всюду так записывать, да, со скобками, да, в инфиксной записи, в смысле не в инфиксной, а наоборот в префиксной записи,
когда сначала идет значок, а потом там в скобках через запятые перечисляются все аргументы.
Вот, значит, это с точки зрения формулы, ну а с точки зрения суперпозиции, ну аналогично, да, значит, что у вас,
да, что у вас есть какие-то функции, значит, g1 и так далее, gk, значит, это вот суперпозиция, суперпозиция глубины меньше либо равно d.
Соответственно, f это функция от k аргументов, ну и, соответственно, вот как бы суперпозиция, так, давайте я там напишу,
значит, суперпозиция будет, ну вот, примерно так и выглядеть, да, то есть будет, что h от a1 и так далее,
а n, значит, это будет f от g1, от a1 и так далее, а n, значит, и так далее, значит, gk от a1 и так далее, а n.
Вот, ну и видно, что, в общем, то, что я написал вот здесь, вот это, ну более-менее то же самое, да, что я написал,
вот здесь, вот только здесь, как бы раскручивается до основания, да, и получается какие-то длинные формулы,
а здесь получается, что мы как бы вычислили, что они за значение вернули, и эти значения подставили в функцию f.
Так, в общем, кратко, это все было к чему? Это все было к тому, что можно определить формулы не только от отрицания конечно-дизьюнца импликации,
но от любого набора базисных функций с каким угодным количеством аргументов, но и от любого набора базисных функций с каким угодным количеством аргументов,
и, соответственно, значения таких сложных формул будут подсчитываться, ну вот, по этому правилу фактически.
Мы же так раньше и говорили, что чтобы посчитать значение формулы, скажем, коньюнции, нужно посчитать значение одной части,
потом посчитать значение другой части, и как это будет работать?
Мы же так раньше и говорили, что чтобы посчитать значение формулы, скажем, коньюнции, нужно посчитать значение одной части,
потом посчитать значение другой части, и к этим значениям применить функцию i, то есть умножение, можно сказать, умножить эти значения.
Вот это можно обобщить на произвольный набор базовых связок.
Так, ну я надеюсь, это не очень сложно и более-менее понятно.
Да, h будет с производительской глубины t плюс 1.
Да, смотрите, мы считаем так, что у нас изначально задан какой-то набор переменных, от которых у нас все действует.
Но дальше, смотрите, вот зачем нужны проекторы, зачем нужен нулевой уровень?
Что как бы проектор, он от любого, сколько он длинного вектора, оставляет только одну координату.
И потом эти координаты уже можно подставлять во что-нибудь другое.
То есть, например, скажем, на первом уровне, если у нас есть базовая связка коньюнция,
то если у вас там есть 100 аргументов, то будут коньюнции, что мы можем взять там коньюнцию 31-й переменной и 28-й,
и как угодно так и комбинировать.
То есть, фактически, проекторы как функции позволяют подставлять любые переменные с точки зрения формулы.
Сейчас, что еще раз?
Число k задается тем, сколько аргументов функции f.
То есть, если f это коньюнция, то k равно 2.
Если f это majority, смотря сколько там аргументов, в данном случае 3 аргумента.
Ну и так далее.
То есть, вон там написано, что f функция тк-аргументов.
Ну ладно, давайте дальше.
Дальше есть понятие замыкания.
Если есть просто какой-то, не знаю, q, это какое-то любое множество, какое-то множество бульевых функций,
то тогда q в квадратных скобках, это множество всех суперпозиций.
Всех суперпозиций, всех глубин или еще всех порядков, говорят.
Вот, а класс называется замкнутым.
Значит, класс замкнутый.
Так, ну давайте как-нибудь его назовем.
Ну вот, я не знаю, класс R замкнутый.
Если его замыкание равно ему самому.
Вот, дальше тут есть всякие простые свойства.
Значит, они будут в основном на семинарах.
Да.
В качестве g мы берем суперпозиции меньшей глубины, а в качестве f берем элементы sql.
В качестве g это как раз spice воhaitа.
элемент Sq. Суперпозиции глубины на 1 меньше. Суперпозиции, они уже могут быть сложными.
Смотрите, суперпозиции глубины 0 – это проекторы, а суперпозиции глубины 1 – это
фактически исходные функции, но в которые внутрь поставлены какие угодно переменные
из нашего набора. Обычно считается так, что функция изначальная, у нее как бы
вот k аргументов фиксирована, а суперпозиции глубины 1 означает, что мы из нашего
большого множества n элементов выбрали какие-то k, может даже с повторами,
в каком-то порядке, их подставили вначально, и получили вот такую функцию от n аргументов.
Ну а дальше можно вот это накручивать по вот этой формуле.
Почему мы не используем их, используем их в качестве f?
Просто сами функции j, они могли получиться не Sq напрямую, а уже как суперпозиции
какого-то меньшего порядка. Вот такие несложные свойства, это называется и демпотентность.
Если мы взяли замыкание-замыкание, то это то же самое, что и разъять замыкание.
Почему это верно? Потому что мы-то в качестве функции f,
мы берем уже какие-то композиции, и мы их можем раскрутить и получить не композицию композиций,
а композицию исходных функций. А получается уже вот эта правая часть.
Соответственно получается, что замыкание любого множества – это замкнутый класс.
Получается, что замыкание q – это замкнутый класс.
Так, и теперь можно определить, что такое полная система.
Значит, какая-то там множество S. Сейчас, нет, S у меня сейчас будет.
Скажем множество P. Значит, множество P – это полная система.
Если ее замыкание – это все функции.
Ну, вообще все функции. Ну, значит, смотрите, все были его функции, конечно.
То, с чем мы начинали, например, множество из отрицаний конъюнса – это полная система.
Потому что суперпозиции можно выразить через KNF.
Все, что на первых экранах было – это были примеры полных систем.
Ну, здесь уместно сделать перерыв.
После перерыва глобальная цель – доказать критерий.
То система полная тогда и только тогда, когда там что-то верно.
Так, ну что, давайте попробуем продолжить.
Значит, смотрите, что сделал пост. Что это за решетка поста?
Значит, пост привел исчерпывающий список всех замкнутых классов.
Значит, почему эта решетка?
Есть еще такое вот свойство.
Значит, если мы возьмем...
Вот как бы еще есть такое утверждение,
то если Q и R – это замкнутые классы,
то тогда их пересечение – это тоже замкнутый класс.
Вот почему это так.
Ну, значит, смотрите, что означает, что Q – это замкнутый класс.
Ну, это значит, что если мы берем любые суперпозиции функции SQ,
тоже будут лежать в Q.
То есть, вот раз Q замкнутые, то любые суперпозиции функций SQ
лежат в Q.
Что значит, что R замкнутые?
Ну, то же самое, но только для R.
Значит, вот получается, что любые суперпозиции функций SQ
лежат в Q.
Ну, то же самое, но только для R.
Суперпозиции функций SQ лежат в R.
Ну, а смотрите, если мы берем суперпозиции функций,
которые лежат в пересечении.
Изначально их функции лежат в пересечении, значит, они лежат в Q,
и поэтому их замыкание лежит в Q.
Они лежат в R, поэтому их замыкание тоже лежит в R.
Значит, их замыкание лежит и в Q, и в R.
Соответственно, эти функции и в Q, и в R.
Ну, и потому их суперпозиция тоже.
Так, ну ладно, я надеюсь, это довольно-таки понятно.
Но вообще не ясно, как это такое много определений и мало примеров.
Сейчас давайте к примерам перейдем.
Свяжем то, что мы в самом начале лекции изучали,
про те наборы, с тем, что вот здесь происходит.
Какие есть примеры замкнутых классов?
И почему они замкнуты?
Значит, примеры замкнутых классов.
Так, первый пример. То, с чем мы начинали.
Если мы возьмем только конъюнцию, дизюнцию, импликацию,
еще может эквиваленцию, значит, все эти функции сохраняют единицу.
Но вот это можно определить как класс.
Он называется T1, или надо P1.
Значит, T1 это класс функций, сохраняющих единицу.
То есть, если мы подставим P1, то получим единицу.
Так, а почему он замкнутый?
Ну, надо по индукции доказывать.
Значит, база индукции тривиальная, это проектор.
То есть, формально докажем.
Теорема T1 замкнутый класс.
Теорема T1 замкнутый класс.
Значит, формально как нужно доказывать?
Надо доказывать по индукции, а индукцию надо начинать с базы.
А база – это проектор.
Так, дайте доказательства по индукции.
Соответственно, база – то проектор на любую координату.
Если у него подставить все единицы, то он, конечно же, выдаст единицу.
Ну, а дальше переход.
Значит, переход заключается в том, что если и функция F сохраняет единицу,
значит, тогда я тебя сюда отлесну, у нас форма выглядит вот так вот.
Соответственно, что нужно доказать?
Соответственно, что нужно доказать?
Что если и функция F сохраняет единицу, и по предложении индукции все вот эти вот GIT сохраняют единицу,
то тогда и такая суперпозиция тоже сохраняет единицу.
Так, возвращаемся сюда.
Значит, если F лежит в T1, и GIT лежат в T1,
то, соответственно, H лежит в T1, где H заданного той вот формулой.
Так, ну давайте аккуратно это проверим.
Значит, давайте перепишем.
Значит, F от G1.
Так, ну давайте я сюда уже единицы подставлю.
Значит, и так далее. Тут будет GKT от всех единиц.
Ну, смотрите, по предложении индукции все GIT сохраняют единицу,
поэтому можно написать, что вот это вот будет единица.
И G2 от всех единиц будет единица, и так далее.
И GKT от всех единиц будет единица.
То есть получается, что это равняется F от всех единиц.
И теперь нужно воспользоваться тем, что сама F сохраняет единицу,
поэтому, соответственно, это будет единица.
Ну вот, то есть получается, что H от всех единиц тоже единица.
Нет, а что происходит в других, это вообще неважно.
Значит, чтобы функция попала в этот класс, достаточно, чтобы при постановке единиц были единицы.
А чтобы при постановке нулей или единиц и нулей, это нам неважно.
То есть нужно проверить только вот это.
Сейчас, что еще раз?
Что-то не важно, как раз важно.
Нам что нужно доказать?
Нам нужно доказать, что выполнено вот это вот свойство для функции H.
Что мы сделали?
Значит, мы формулу для H, которая вот здесь.
Вот вместо всех этих аиток подставили одни единицы.
Значит, получили вот такое вот выражение.
Теперь, по предположению дуксу и все, что здесь внутри, раз жеит и сохраняет единицу,
то все значения внутри будут единицами.
Поэтому это равняется вот этому, и это тоже равно единице, потому что F сохраняет.
Не на каком-то одном, а именно на наборе всех единиц.
Не на каком-то, но вполне конкретно в одном наборе нам нужно конкретные значения.
То есть тут есть только один набор из всех единиц.
И мы именно его подставляем.
Так, ну чего, разобрались?
Потому что у нас определение такое.
У нас в определении только один набор, и именно для этого набора мы проверяем.
Так, хорошо, значит, дальше есть полностью симметричный класс.
Значит, полностью симметричный класс – это класс всех функций, сохраняющих ноль.
Значит, он обозначается T0.
Значит, это класс функций, сохраняющих ноль.
То есть должно быть, что F от всех нулей равняется нулю.
Дальше все точно так же делается, только все единицы мы заменяем на все нули.
И соответственно получаем, что T0 – это замкнутый класс.
Значит, T0 – это замкнутый класс.
Значит, аналогично предыдущему.
Вот, и это вот то было препятствие, да, после мы изучали, что если взять
конъюнцию, дизъюнцию и эксор, можно тогда все выразить или нельзя?
Нет, нельзя, потому что они все сохраняют ноль.
И поэтому все, что мы через них выразим, тоже сохраняет ноль.
Так, ну чего, понятно?
Так, хорошо.
Так, теперь что дальше бывает?
Дальше хитрее.
Так, ну давайте, наверное, самодвойственные функции.
Значит, это класс D.
Значит, класс D – это самодвойственная функция.
Или их еще могут называть нечетными.
Вообще, наверное, многие из вас знают, что такая нечетная функция,
просто как бы мат-анализ, да, это означает, что если у нее
аргумензование на противоположные, то она сама заменится на противоположные.
Или еще косо-симметричные, это еще называется.
Вот, значит, здесь то же самое, только, во-первых, аргументов много,
но и противоположные понимаются как отрицания.
Да, то есть вообще у любой функции есть двойственная.
Давайте пока прежде чем про самодвойственные говорить, поговорим просто про двойственные.
Значит, если есть какая-то функция F, да, значит, вот A1, и так далее, AN,
то по ней можно определить F со звездочкой.
Двойственная функция, значит, это будет отрицание F от отрицания A1, и так далее, отрицание AN.
Ну, например, что такое двойственная конъюнция?
Ну, давайте я вот так запишу в инфиксной записи, значит, двойственная конъюнция.
Значит, это что такое? Это мы берем отрицание P, конъюнцию, отрицание Q,
и ко всему этому вместе еще добавляем конъюнцию.
Это что за функция? Это дезюнция получается.
Вот, и наоборот, значит, двойственная дезюнция это конъюнция,
и вообще, на самом деле, они именно двойственные, они так на пары разбиваются.
Значит, F со звездочкой, со звездочкой это F.
Упражнение проверить, что если мы два раза берем двойственную, то получаем саму функцию.
Давайте еще один пример, XOR. Значит, что такое XOR со звездочкой от P?
Так, смотрите, что нам нужно сделать.
Нам нужно взять отрицание P по XOR с отрицанием Q
и у этого всего взять отрицание.
А это что за функция? Да, это экваленция,
потому что каждое отрицание даст плюс один, и будет три раза плюс один.
Ну, соответственно, два сократятся, один останется.
Ну, и получается, что это отрицание XOR, то есть это экваленция.
Ну, а соответственно, функция называется самодвойственная, если она двойственна сама себе.
Так, значит, самодвойственная.
Это означает, что F со звездочкой совпадает с F.
То есть на каждом аргументе мы такое проделали и ничего не поменялось.
Да, это другая звезда.
Это не звезда к линии, это другая звезда.
Звезда, так сказать, сопряжения.
Ну, это на какое-то комплексное сопряжение похоже, да, или что-то такое.
Да, мы ставим аргумент под отрицание, и все эти результаты тоже ставим под отрицание.
Какие функции будут самодвойственные?
Ну, вот, например, отрицание само по себе.
Смотрите, что такое отрицание со звездочкой от P.
Значит, по определению это получается, что мы ставим аргумент под отрицание,
потом как бы отрицание, которое сама функция F,
и потом еще одно отрицание, это вот внешнее отрицание, вот это вот.
Если смотреть сюда, то если есть само отрицание, то у нас получается 1, 2 и 3 отрицания.
Ну, а тройное отрицание – то же самое, что одинарное отрицание.
Двойное отрицание сокращается.
И это, кстати, даже интуиционисты признают.
Значит, они не признают, что можно всегда 2 отрицания стереть,
но что 2 отрицания из 3 можно стереть, они признают.
Вот это пример, что звездочка самодольственная.
Еще один пример самодольственной функции, это функция большинства.
Смотрите, большинство со звездочкой от PQR.
Это что такое? Это отрицание большинства от не P, не Q и не R.
Но смотрите, что здесь получается? Получается, что есть голосование с тремя избирателями.
Есть два варианта, за и против.
И теперь мы смотрите, что делаем. Мы меняем мнение каждого избирателя на противоположное.
Берем большинство, а потом у результата тоже берем противоположное.
Ясно, что это то же самое, что просто большинство.
Смотрите, большинство это единицы, если две или три единицы среди аргументов.
Когда мы поменяли вот здесь внутри, то есть двух или трех единиц стало два или три нуля,
то есть большинство получилось ноль, а потом взяли отрицание и снова один получился.
Поэтому большинство это самодольственная функция.
Вообще можно переписать по другому условию, как бы перекинуть одно отрицание отсюда вот сюда.
Почему оно нечетное?
Почему нечетное?
Потому что отрицание действует как минус. Можно другую часть перенести.
И тогда получится, что f от отрицания p1 и так далее отрицание pn.
Это отрицание f от p1 и так далее pn.
Это уже очень похоже на определение нечетной функции, где вместо минуса отрицание.
Так, хорошо.
Ну наконец, утверждение, что это замкнутый класс.
И это удобно именно для такого определения проверять.
Что мы как бы отрицание перекинули отсюда сюда, и теперь это стало удобно проверять.
Так, ну давайте вот аналогично вот этому запишем, только теперь с отрицаниями.
Так, у нас получается f от g1 от отрицания a1 и так далее отрицания аn.
Да, но база еще есть, база тривиальная.
Что мы как бы отрицание перекинули отсюда сюда, и теперь это стало удобно проверять.
Ну давайте вот аналогично вот этому запишем, только теперь с отрицаниями.
А еще есть база тривиальная, что если мы все аргументы поменяли на противоположные,
то и ты тоже поменялся на противоположные, поэтому проектор поменялся на противоположные.
Нет, это одно и то же.
Потому что отличие только в том, что мы отрицание перекинули с одной части в другую.
Ну так можно делать это эквивалентно.
А отличие в том, что мы отрицание принесли в другую часть.
Ну это, так сказать, дано же на минус единицу обе части.
Ну потому что если две вещи равны, то их отрицания тоже равны.
А поскольку одно отрицание сокращается, то как раз добавление отрицания к обеим частям,
это и означает перенос отрицаний с одной части в другую.
Так вот, почему замкнутый?
Мы составляем такое выражение, суперпозицию.
И дальше смотрите, мы применяем условия самодвойственности для внутренних функций.
То есть G1 у нас самодвойственная, поэтому можно все эти отрицания вынести наружу.
Значит, тут получаем, что получаем не G1, вот А1, и так далее, АН.
И так далее, и тут получаем не GKT, вот А1, и так далее, АН.
А теперь мы не забываем, что эти все штуки остаются как аргумент AF.
Вот, эти штуки остаются как аргумент AF.
И теперь мы используем самодвойственность GF.
Теперь все вот эти отрицания можно вынести наружу.
Так, и тут, извините, мелко получается.
Значит, отрицание F, вот уже G1 от А1, и так далее, АН.
И так далее, GKT от А1, и так далее, АН.
Как бы вот такая ступенчатая процедура, вынесли все отрицания наружу.
Нет, сама все звездочки это предъявление двойственности.
А самодвойственность, те, у которых двойственность, это они сами.
Да, самодвойственность означает, что двойственных функций это она сама.
Да, а нечетность получается от того, что мы перенесли одно отрицание в другую часть.
Ну, это эквивалентность, эквивалентное свойство.
То есть самодвойственный и нечетный, это одно и то же.
Значит, вообще, опять же, вот эта самодвойственность, это полезное свойство в теории общественного выбора.
Если все члены общества передумали наоборот, то все общество тоже должно передумать.
Можно вот так интерпретировать в терминах общественного выбора.
Так, хорошо, значит, еще два класса нам осталось из основных.
Значит, есть класс монотонных.
М – монотонная.
Ну, вообще, слово «монотонная» вы, наверное, хорошо знаете.
Если х меньше у, то f от х меньше f от у.
Или там меньше либо равно, там, в общем, всякое бывает, строго, нестрого.
Но здесь у нас много аргументов.
И вопрос возникает, а что, если у нас один аргумент вырос, а другой уменьшился?
Ну, ответ такой, что в этом случае мы не требуем ничего.
Да, монотонность означает следующее, что если все аргументы либо не изменились, либо выросли,
то тогда и значение должно либо не измениться, либо вырасти.
Да, то есть получается, давайте я это запишу.
Значит, если a1 меньше либо равно, чем b1, значит, a2 меньше либо равно, чем b2 и так далее,
а n меньше либо равно, чем bn, то тогда получается, что и f от a1 и так далее,
а n должно быть меньше либо равно, чем f от b1 и так далее, bn.
Вот, например, конъюнция и дезюнция – это монотонная функция.
Конъюнция и дезюнция – это монотонная функция.
А вот, например, импликации уже нет.
Значит, импликации нет. Почему?
Ну, потому что, например, 0 влечет 0 – это 1, а 1 влечет 0 – это 0.
Да, и получается, что мы аргумент увеличили.
Один аргумент увеличился с нуля на единицу, второй не изменили,
а значение функции, наоборот, изменилось с 1 на 0, то есть уменьшилось.
Вот, или, например, XOR. Значит, XOR тоже нет.
Значит, XOR нет. Почему?
Ну, потому что, например, единица XOR 0 – это единица, а единица XOR 1 – это 0.
То есть тоже получается, что один аргумент не изменился.
Второй аргумент вырос, а значение уменьшилось.
Вообще получается, что можно сказать следующее, что у нас же только 0 и единица – аргументы,
и меньше либо равно – это значит либо равно, либо a – это 0, а b – это 1.
Можно еще сказать так, что если значения всех аргументов либо не изменились,
либо изменились с нуля на единицу, то значение тоже либо не изменилось,
либо изменилось с нуля на единицу, то есть не могло измениться с единицы на 0.
Так. Ну хорошо, теперь почему это самодвостенное?
Да, кстати, есть еще такое понятие, я здесь запишу.
Значит, монотонные KNF и DNF.
Значит, это означает, что без отрицаний.
Значит, без отрицаний переменных.
Ну, если литералы берем только переменные, то это называется монотонные KNF и DNF.
Отрицание, конечно, тоже не монотонное.
Потому что отрицание нуля – это единица, отрицание единицы – это 0.
Как раз получается, что аргументы изменились с нуля на единицу, а значение изменилось с единицы на 0.
Так вот, утверждается, что m – это замкнутый класс.
Четвертое утверждение все того же вида, значит, что m – это замкнутый класс.
Почему?
Ну, давайте это тоже аккуратно напишем.
Так, давайте так я напишу.
Значит, тут будет f от g1 от a1 и так далее, aN.
Значит, а здесь внизу f от g1 от b1 и так далее, bN и так далее, gkt от b1 и так далее, bN.
Так, теперь смотрите, что у нас получается.
У нас получается, что все эти аиты выросли.
То есть аиты меньше, чем b.
Значит, опять же, с проектором все тривиально.
Проектор просто берет одну из аит и ровно такой неравенственный получается.
Поэтому можно сразу к переходу двигаться.
Что мы получаем?
Получаем, что вот эта вот штука g1 от аитых будет меньше либо равна, чем g1 от b-итых.
Значит, это по предложению индукции.
По предложению индукции все эти аиты не уменьшились.
Поэтому раз g1 монотонная, то, соответственно, оно тоже не уменьшилось.
Ну и так далее со всеми аргументами.
То есть gkt от аитых тоже будет меньше, чем gkt от b-итых.
Тоже потому, что мы предполагаем, что все предыдущие уже монотонные.
Значит, gkt монотонные.
Ну а после этого мы получается применяем уже свойство монотонности к этому всему.
Теперь, поскольку уже f монотонная, то теперь уже аргументы f не уменьшились.
Ну и значит, соответственно, получилось, что значение тоже не уменьшилось.
Поэтому композиция монотонных монотонна.
Так, ну что, понятно?
Так, ну и теперь у нас еще один класс остался из важных.
Значит, еще один класс это l, или иногда его еще a называют.
Значит, l это линейная функция.
Ну, значит, иногда их называют афинные.
Вообще, афинные это более правильное название, чем линейное.
Но, как бы, вот у Верщикина Шиня линейное написано.
Вот, значит, что это такое? Что такое вообще линейная функция?
Ну, это какая-то сумма с коэффициентами переменных.
Но у нас перемен от 0 или 1.
Ну, то есть, тут получается, что это многочлены Жигалкина.
То есть, выражаемые линейными многочленами Жигалкина.
Ну, а что это значит?
Это означает, что там просто сумма каких-то переменных и еще, может быть, плюс один.
То есть, вот это мы понимаем. Вот это плюс один как раз и есть камень преткновения.
Линейная, а не афинная.
Значит, вот как бы функция kx плюс b это линейная функция, или афинная.
Если линейная, тогда может быть плюс один.
Если говорить, что линейная только kx, а kx плюс b это афинная,
тогда нужно эти называть афинными.
Ну ладно, в общем, я думаю, что мы как-то разберемся.
Я буду говорить линейная.
То есть, получается, что f это сумма в смысле ксора каких-то поитых, ну или аитых,
да и может быть единица.
Ну, например, отрицание линейной функции.
Значит, отрицание p, это вот p плюс один, это линейная функция.
Или эквивалентность.
Значит, эквивалентность это px 41.
Или, может быть, функция четности там от большого числа аргументов, это parity называется.
Значит, функция parity, да, это вот там p1, ксор и так далее, ксор pn.
Вот это примеры линейных функций.
Ну, у отдельной перемены у нас всегда степень больше единицы,
вот важно, что мы разные перемены не умножаем друг на друга.
То есть, например, нелинейная, например, дизюнция.
Нелинейная, например, дизюнция, да, значит, это p ксор q.
Ксор q, да, значит, вот здесь произведение 2.
Значит, или импликация.
Значит, импликация, это мы считали в прошлый раз, да, значит, 1 плюс p плюс q.
Не, ну, имеет, конечно, ну, скорее, не просто.
Ну, а вот есть поле из двух элементов, да, и вот эта ножта всех слов из 0 единиц можно воспринимать как булиф куб,
да, то есть как как раз инмерный пространство над этим полем из двух элементов.
И тогда это будет в точности афинной функции.
Вот, но мы, как бы, это вообще можно применять разные математические приемы,
типа там коэффициент Фурье, да, или там чего-нибудь такого для изучения буливых функций.
Это очень интересная область, но все-таки выходит за рамки нашего основного курса.
Так, хорошо, значит, что мы успеем, наверное, понять, что L это замкнутый класс.
Значит, утверждение, что L это замкнутый класс.
Ну, смотрите, как это надо понимать.
Значит, мне кажется, что проще всего нарисовать, как бы, вот такую вот картинку, да,
что вот здесь вот какая-то сумма, значит, сумма, дальше мы ее ксорим еще с какой-то суммой.
То есть мы можем использовать, как бы, вот такую картинку, да,
сумма, значит, сумма, дальше мы ее ксорим еще с какой-то
суммой, значит, и так далее. И можно быть еще ксорим
с единицей, а может и не ксорим. Но смотрите, все
эти суммы – это суммы переменных. Ну тогда ясно, что тут повторы
сократятся, в том числе единицы, если там есть повтора
единицы. Ну и останется тоже сумма переменных и
может быть единица. Да, то есть понятно, а что что
здесь происходит? Я беру может быть такое выражение,
что сумма переменных и может быть единица,
и вместо каждой переменной тоже ну соответственно
подставляю сумму переменных и может быть единица,
ну и тоже получается такую длинную сумму и там могут
быть повторы, но если повторы сократятся и останется
снова суммы переменных каких-то и, может быть, единицы. Вот так. Ну чего, понятно? Или не очень?
Значит, это будет много на семинарах обсуждаться. Значит, я думаю, что в сильных группах будут какие-то
продвинутые вещи. Кроме этих пяти, там еще есть всякие интересные классы. Значит, по крайней
мере, в те группы, которые выскажут интерес, это будет разбираться. Так, а в следующий раз мы
докажем теорему. Если я сформулирую за оставшиеся две минуты, значит, теорема критерий ПОСТа.
А в следующий раз мы его докажем. Значит, критерий ПОСТа. Значит, это вот какая штука критерий ПОСТа.
Что утверждается, что вот эти вот пять классов — это, конечно, препятствие к полной системе.
Да, то есть если у нас все функции, точнее так, значит, если у нас класс, ну или там множество
целиком под множество одного из этих пяти классов, то он не будет полным. Но других препятствий не
может быть. Да, то есть, соответственно, ну, можно сформулировать так, что Q — это полная система.
Значит, Q — это полная система тогда и только тогда, когда Q содержит функцию, не сохраняющую
единицу. Значит, не сохраняющую единицу. Функцию, не сохраняющую ноль. Значит, немонотонную функцию,
немонотонную функцию, несамодвойственную функцию и нелинейную функцию. Вот, при этом одна и та же функция
может как бы несколько раз встречаться. Например, штрих-шефер, он сразу не один из них, и поэтому один
штрих-шефер — это полная система. Полная система означает, что мы через функции SQ можем выразить
любую функцию на суперпозиции. Вот так. Ну ладно, все, спасибо за внимание.
