Наверное, многие видели, что примерно в это время будут начинаться контрольные, чтобы 15 минут было на рассадку.
И, соответственно, потом лекции будут немного со сдвигом начинаться, и это и следующее.
У тех, кто на вторую часть уточения ходит, соответственно, раз в две недели будет окно в половину пары,
даже чуть больше, раз в две недели будет контрольная.
Сейчас я расскажу, как будет устроено оценивание.
Мы выработали некоторую схему, она немножко отличается от прошлого года, но в основных чертах повторяет.
В этом семестре у нас экзамен.
Экзамен. Соответственно, как обычно, 10-бальная шкала.
Эти 10 баллов складываются из трех компонент.
Три балла – это контрольные домашние задания. То есть то, что в прошлом семестре отвечал за всю оценку,
в этом семестре будет только за 30 процентов оценки отвечать.
Три балла – это контрольные плюс домашние задания.
Семь баллов – это устный экзамен.
И еще можно получить бонус плюс один.
Сейчас расскажу, что можно получить разными способами.
Какие есть блокирования?
Устный экзамен нужно сдать хотя бы на два из семи, чтобы сдать курс.
Это больше двух для зачета курса.
Скажем, не тебя здесь набрать два, а здесь один. Это не разрешается.
Два из семи не равно не у два, если есть хотя бы один за семестр.
Давайте я все напишу. Больше на три всего нужно для зачета.
Больше на два из семи за экзамен. Да, два из семи можно получить.
Это удовлетворительная оценка, и она становится удовлетворительной итоговой,
если есть хотя бы один балл за семестр.
А вот этот бонус засчитывается при хотя бы двух за семестр.
То есть он должен идти именно в дополнение, а не как замена.
Первая часть, в общем, все точно так же, только тема другая.
Как было в первом семестре, будут контролены раз в две недели,
на них будут тестовые задачи без переписывания, обязательные с тремя попытками сдачи.
Могут быть отдельные домашние задачи, и еще дополнительные, которые открываются,
если сдасти обязательно по данной теме.
Первая часть полностью повторяет.
Экзамен тоже будет разделен на три части.
Эти семь баллов за экзамен, они примерно так же разделяются на три части.
Из них два балла ставятся за основные определения и простые утверждения,
которые нужно отвечать вообще без подготовки.
То есть просто экзаменатор вас спрашивает, что такое что-нибудь, что кое-более формула.
Что кое-более формула, что кое-моё чем же Галкина из прошлого семестра.
Или, может быть, что-нибудь простое, например, как вывести овлечет А.
Это желательно сразу рассказывать.
Овлечет А это скорее на два балла из двух, а кое-более формула это на один балл из двух.
Там в программе будет написано, какие вопросы на единицу, какие на два.
Соответственно, те, которые на единицу, нужно прямо все знать.
Соответственно, тут тоже нужно набрать хотя бы один за этот вопрос.
Дальше три балла. Это билеты.
Билеты с подготовкой и, более того, при подготовке билетов можно использовать материалы.
Какие хотите, но только не онлайн.
То есть можно любые книги, любые конспекты, любые файлы, но только заранее скачанные.
Если использовать электронное устройство, нужно включить всю связь, авиарежим.
А просто читать с экрана можно.
Но это только при подготовке. При подготовке можно пользоваться любыми материалами.
После начала ответа нельзя пользоваться ничем, в том числе и нельзя написать себе листочек и с него потом читать.
При подготовке нужно либо рассказывать, либо как-то писать заново при экзоминаторе.
Там правила такие. Это сильно отличается от того, что обычно бывает, в том числе на УКТЧ.
Обычно, наоборот, ничем нельзя пользоваться, но зато можно пользоваться тем, что вы написали в процессе подготовки.
А здесь можно пользоваться всем, но только при подготовке, отвечая с чистого листа.
Как это будет устроено? Тут будет три вопроса в билете.
Три вопроса различного уровня сложности и по различным темам.
Они обязательно будут подобраны так, что три темы будут.
Темы – это множество, логика и вычислимость.
Обычно там бывает, что по 12 вопросов по каждой теме, и они разделены на 3 уровня, 4 уровня, 5.
Будут коммунированы три разных темы и три разных уровня сложности.
Тут тоже обязательно хотя бы на один вопрос из трех нужно ответить.
Если вы хотите получить минимальный зачет, то достаточно выучить вопросы на единичку и на тройку.
И если там еще есть один за семестр, то это на минимальный зачет хватит.
Если, наоборот, вы хотите больше, то есть еще третья часть, еще два балла.
Это дополнительные вопросы, разные дополнительные темы, вопросы повышенной сложности.
Там будет так устроено, что их не нужно все учить.
Там сформулирована как некоторая игра между экзаминатором и сдающим.
А именно игра в четыре раунда.
На первом раунде сдающий говорит, там еще тоже есть вопросы на плюс один балл и на плюс два балла.
Кстати, эти вопросы тоже засчитываются при большей либо равно четырех за основную часть экзамена.
То есть из пяти за основную часть.
То есть если меньше четырех, то на этом экзамен заканчивается.
Если четыре или пять, то можно еще получить плюс один или плюс два балла при желании.
Значит игра будет такая, сдающий выбирает на плюс один или на плюс два балла, хочет сдавать.
Дальше экзаминатор говорит, какой теме из трех хочет послушать.
На множество логикой вычислимости.
Сдающий называет три вопроса, которые он готов рассказать.
И экзаминатор из этих трех говорит, какой хочет послушать.
После этого уже без использования материалов.
Но при желании, при необходимости может подготовиться, можно рассказать.
Соответственно, если проанализировать эту игру, то видно, что достаточно выучить по три вопроса из каждой темы,
какие вам больше нравятся, и соответственно их отвечать.
Это экзамен, еще бонус.
Бонус бывает разного вида.
Бонус только плюс один.
Даже если вы захотели разные бонусы набрать, то на оценку это уже не будет влиять.
Интересно все сделать.
Во-первых, может быть бонус почти все задачи из домашнего задания.
Это на самом деле то, что было в прошлом году.
Но мы немного модифицируем пороги.
Этот порог будет немножко выше.
Но зато будут другие варианты.
Один вариант это много.
Не то чтобы все, но почти все.
Много, то есть почти все задачи из общего домашнего задания.
Может быть такой вариант.
Дальше, может быть, вариант, что у вас есть какие-то бонусы,
которые вы можете выучить по три вопроса из каждой темы.
Может быть такой вариант.
Дальше, может быть, вариант отдельные листочки
на какие-то дополнительные темы.
В прошлом году, в прошлом семестре
Иван Смирнов это сделал.
И там несколько людей получили такой бонус.
Я тоже хотел, но не получилось в прошлом году.
В этом году я хочу свои листочки сделать по приложениям в экономике.
Там есть нетривиальная вещь.
Каждый разработчик составит свои критерии.
Сколько задач нужно решить, в какой форме сдать, чтобы это было защитено.
Ну и третий вариант.
Скорее для группы информатиков это какая-то лабораторная работа,
так условно.
По программированию.
Не контест, то есть не просто написать программу,
которая решает задачку, а что-то исследовать,
но с применением программного кода.
Например, одна из тем, это могут быть те,
которые мы в прошлом семестре изучали,
но может быть что-нибудь еще.
Мы постараемся это не затягивать.
К середине марта, например, чтобы к середине марта уже все было,
чтобы вы могли выбирать, хотите, что вы хотите.
В верхней части это только в конце семестра будет.
Понятно, что будет в процессе семестра все контрольные и домашки,
но вот будет и итоговая домашка в конце семестра, где-то в мае.
Соответственно, бонус по первому варианту.
Может быть, в мае, в сентябре.
Мы, наверное, разрешим доздавать не прямо до экзамена,
но до пары дней до экзамена.
И в том числе, чтобы получить бонус.
Как всегда, пороги будут объявлены после последней контрольной,
то есть сколько на единицу, сколько на двойку, сколько на тройку.
Значит, они будут объявлены после последней контрольной
при выдаче итогового домашнего задания,
ну и, соответственно, можно будет доздавать.
До желаемой оценки.
Да, решайте, что делать.
Нельзя половина отсюда, половина отсюда.
Тут нужно что-то выбрать.
Тут задача дискретная, если не задача, извините,
правило дискретное, вставляем оценок в том числе,
в принципе, экзаминатор может поставить полтора вот здесь,
скажем, 2.5 вот здесь, и сказать, что это сумма 4.
Такое может быть.
Но в целом,
опять же, нет такого, что вы взяли билет,
рассказали его не очень, но что-то рассказали,
я вам посоветую плюс один.
Все-таки либо засчитывается, либо не засчитывается.
Вот такие правила.
Я сейчас начал делать файл, где они записаны,
я не успел доделать, но постараюсь на неделю доделать.
И уж точно отдельно правила про экзамен будут написаны в программе экзамина.
Прошлогоднюю программу можете посмотреть, она, как всегда, может немножко варьироваться,
что-то добавить, что-то удалиться.
Может примерно изучить, как она устроена.
Так, еще какие-нибудь вопросы.
Бонус в прошлом году не было, поэтому это мы сейчас будем разрабатывать.
Бонус был, но только по первому варианту.
Еще минут 10 есть.
Сегодня занимаемся позвонками,
дальше будем сдвигать примерно 15 минут.
За 10 минут до звонка давайте я вкратце расскажу содержание,
какие темы будем изучать в этом семестре.
Вот темы второго семестра.
В целом тут будет, можно сказать, два блока побольше,
и два блока поменьше.
Первый блок побольше это, можно написать так,
продвинутая теория множеств.
Она все еще будет не особо аксиоматическая,
то есть я не буду изучать аксиоматику Тернила Фрэнкеля.
Но мы изучим, во-первых, теорию орденалов до некоторой степени,
во-вторых, изучим блок утверждений, которые все друг к другу эквивалентны,
и все по-разному называются.
Одно утверждение называется аксиома выбора,
второе называется теорема Цернела, третье — лемма Цорна,
еще там бывает принцип Хаосдорфа, ну и так далее.
В общем, есть много такого рода утверждений.
Они все друг к другу эквивалентны и используются в математике
для разных интересных вещей.
Но, например, будет такая теорема.
Давайте я тут напишу флагманский результат,
которым будем стремиться.
Вот флагманский результат в этой части курса.
Такой результат, значит, его можно довольно легко понять формулировку.
Существует функция изрвер,
такая, что она аддитивная,
то есть это что означает?
Это означает, что для любого,
для любых х и у,
f от х плюс у равняется f от х плюс f от у.
Но нелинейная.
Но нелинейная.
То есть не существует такого альфа,
что для любого х f от х равняется альфа х.
На первый взгляд кажется, что это очень странно,
или даже невозможно.
Но тем не менее это возможно.
И мы докажем, что такую функцию можно построить.
Конечно, это при условии того, что мы принимаем этого всему выбора
и разрешаем пользоваться тем, что из нее получается.
Кроме этой теоремы, там есть много разных других интересных вещей.
Например, есть такая теорема,
что декарта в квадрат любого бесконечного множества
равномощен самому этому множеству.
Мы доказывали, что счетная множество в квадрате счетна,
а также, что континуальная множество в квадрате континуальна.
Но для любого бесконечного множества.
Есть такая философская проблема,
что чтобы рассуждать о бесконечных множествах,
нужно использовать конечный язык.
Мы рассуждаем, используя конечные фразы.
И тогда немножко теряет смысл вопрос о том,
что там на самом деле,
потому что на самом деле все конечное.
Есть только рассуждение о бесконечном.
И получается вопрос, как можно проводить рассуждение, чтобы получить то или иное.
Так, хорошо, значит.
Вторая часть.
Вторая часть это теория вычислимости,
которая оправдывает слова теория алгоритмов
в названии курса.
Теория вычислимости.
Здесь, наверное,
вот такой вот флагманский пример, флагманский результат.
Если вот здесь этот результат будет в самом конце,
то здесь почти в самом начале будет самый важный результат.
То, с чего началась теория вычислимости,
это результат о том, что есть неразрешимые задачи,
которые, тем не менее, можно сформулировать.
И одна из них это проблема остановки.
Неразрешимость проблемы остановки.
Проблема остановки, это вопрос такой,
дана какая-то программа для компьютера и дан вход,
и вопрос, остановится ли данная программа на данном входе.
И оказывается, что сам этот вопрос нельзя решить, написав другую программу.
Значит, нет программы,
которая,
которая, получив текст другой программы,
текст другой программы
и слово на входе,
и вход
для нее,
получив текст другой программы и вход для нее,
говорит, остановится ли эта программа или нет.
Говорит,
остановится ли эта программа.
А это вопрос, на самом деле, довольно важный,
для математики, по крайней мере.
Например, есть много открытых проблем, которые можно было бы решить,
если бы можно было решать проблемы остановки.
Например, проблема Гольдбаха.
Это не доказанная гипотеза, но и не опровергнутая.
Но при этом довольно легко написать программу,
которая будет искать контрпример,
которая будет перебирать все четные числа, пытаться разложить их в сумму двух нечетных,
проверять простоту, и, соответственно, если найдет разложение, то приходить к следующему числу.
Если гипотеза верна, то такая программа никогда не остановится.
А если гипотеза не верна, то эта программа найдет контрпример и остановится.
Поэтому проблема остановки – это не только что-то связанное с анализом самих программ,
но и имеющий отношение к другим областям математики.
Давайте кратко еще про оставшиеся две темы.
Сейчас я, наверное, на пару минут задержу после звонка, чтобы это рассказать,
и вторую часть начать уже с теории множеств.
Третья часть – это формальная арифметика.
Вот это на самом деле область, которая объединяет почти все, что мы проходили до сих пор.
Уж как минимум она объединяет с одной стороны теорию вычислимости,
а с другой стороны теорию языков первого порядка,
который мы изучали осенью.
Потому что с одной стороны формальная арифметика – это просто такая теория,
про натуральные числа, то есть там есть сложение, умножение, равенство, следование, ноль.
Ну и все, в принципе, этого достаточно.
И дальше можно записывать формулы через кванторы, в общем, все, как мы обсуждали.
И с другой стороны оказывается, что это достаточно мощная теория,
чтобы записывать вычислительные числа.
То есть можно записать форму, которая будет означать, что такая-то программа работает,
останавливается, выдает то-то и то-то.
И оказывается, что есть теорема очень тесно связанная с проблемой остановки.
Это теорема Йоделя о неполноте.
Теорема Йоделя о неполноте.
Значит, у нее есть много разных формулировок.
Ну, такая стабильная форму, которая у нас есть.
В общем, у нее есть много разных формулировок.
В общем, у нее есть много разных формулировок.
Ну, такая стандартная формулировка, что в арифметике есть утверждение,
которое нельзя не доказать, не опроверживать.
Да, оно как бы замкнутое, то есть либо истинно, либо ложное, стандартная моделя.
Но при этом не доказать, не опроверживать его нельзя.
Ну, можно еще что-то добавить.
Вот. Ну, можно еще так сформулировать, что множество истинных формул
и множество доказуемых формул это точно не одно и то же.
То есть множество истин не равняется множеству теорем.
То есть теорема – это доказуемое утверждение.
А истина – это вот истина.
Одна из формулировок такая, что даже не только формальная ахметика,
а любая достаточно мощная теория, либо неадекватна,
то есть в ней можно доказать неверное утверждение.
Например, противоречиво. Если противоречиво, то можно все что угодно доказать
по закону вывода из противоречия.
Если вы доказали какое-то утверждение и его отрицание,
то уже все что угодно можно вывести.
Но, в принципе, из неадекватности еще не следует противоречивость,
а просто что-то не то получается.
То есть либо неадекватна, либо неполна.
Неполна – это какое-то истинное утверждение, нельзя доказать.
Ну и четвертый пункт.
Четвертый раздел – это лямдоисчисление.
Лямдоисчисление.
Прямо такого результатов Лагманского я затрудняюсь предъявить,
но есть некоторая парадигма,
которая тут все работает.
Парадигма стоит в том, что все есть функция.
И это, опять же, немножко отличается от того, что у нас было до сих пор все множество.
Особенно мы в УКТЧ так начинали, что вот есть множество,
а дальше есть, например, пары. Это тоже такие специальные множества.
Дальше декарта произведения – это множество.
Соответствие – это множество. Отображение – это множество.
Машину тьюринга, вычислительную машину будем формулировать как картеше
из разных множеств и функций.
Это стандартная парадигма, что все есть множество.
Нутральные числа – это такие множества.
Помните, мы говорили, что есть пустое множество, это ноль, множество из пустое – это один и так далее.
А здесь, наоборот, все есть функция.
Это и число – это специальная функция, которая называется нумерал.
И какое-то логическое значение – это тоже специальная функция.
И обычные функции типа сложения – это тоже функции, которые функции нумералы
переводят в другие функции нумерала.
Это тоже некоторую вычислительную систему,
которая совсем иначе устроена, чем стандартные компьютеры и машины тьюринга.
Вкратце мы это изучим.
Эта теория стоит в основе подхода, который называется функциональное программирование.
Если вы планируете изучать, там будут спецкурсы на следующие годы, как я понимаю.
Соответственно, чтобы успешно программировать на функциональных языках,
нужно хотя бы до какой-то степени понимать эту теорию, которая за ними стоит.
Все, это такой план.
Сейчас делаем перерыв на 10 минут.
