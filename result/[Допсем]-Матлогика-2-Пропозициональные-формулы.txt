сказали про то, что такое языки формальные, рассмотрели формальный язык
в правильной скорости по всей видимости. Сегодня мы начинаем рассматривать новый
формальный язык, а именно, язык прополициональных форм.
Рассматриваем, во-первых, сначала, если язык нам нужен алфавит. Давайте смотреть.
Что у нас будет в алфавите по позициональной форме? Есть предложение?
0.1? Можете? Нет, к сожалению.
Переменные? Ну, вообще, да, давайте, смотрите, как сейчас будет. Мы выведем множество
переменных. Да, давайте. Одно обычно называется ВАХ. Сейчас чуть позже отсюда. И дополнительно
нам нужны, во-первых, ну, понятно, что нам нужны скобки. Без скобок мы никуда. Дальше,
позициональная формула это какие-то записи того, что потом мы говорим более функции. Для того,
чтобы записывать более функции нам понадобятся какие-то... Так совсем напишу. И понадобится нам
еще какие-то значки операции. Мы выбираем значок конъюнции, дизъюнции, инверсии и импликации.
Вот, четыре значка. Дополнительно у нас есть специальное множество ВАХ, о котором мы упомянули.
Первый вопрос. Сколько вообще, какая мощность множества ВАХ? Какие есть предложения? Сколько
всего переменных? Ну, наверное, сама переменная. Нет, про мощность. Сколько элементов
множества? ВАХ это множество переменных. Сколько всего переменных в этом множестве?
Один ноль, если мы говорим про более функции. Это уже не переменные, это конкретное значение,
это немножко другое. Бесконечное количество можно же как сколько угодно. Вот, смотри, бесконечное,
это уже правильно, потому что мы можем составить формулу с произвольным количеством переменных,
и любой количества нам будет не хватать. Сколько надо, столько и будет. Не совсем, нельзя так сказать,
сколько надо. Это в конкретных формулах, но язык же он состоит из слов, а формула — это какие-то
слова. Поэтому нам нужно запастись так, чтобы хватило сразу на все возможные формулы
попозициональные. То есть, как минимум, нам нужно какой-то язык, который будет достаточно для любого
там А и А и А и А и так далее. Любого конечного числа конъюнции А само собой нам должно хватить,
поэтому нам понадобится уже бесконечное. Но ответ бесконечный очень похож. Почему? Потому что
заслон бесконечности, скрывается бесконечно много разных бесконечностей. У вас уже было,
что тут про счетность, не счетность? Да. VAR-… Мы обычно считаем, что оно счетное.
VAR я сразу не стал записывать в язык, в алфавит. Во-первых, ну, алфавит мы, как правило,
хотим уж все-таки конечный алфавит, плюс и множество VAR будет некоторая другая роль,
нежели чем и просто символ алфавита. Более подробно, почему так, будет понятно уже на втором курсе,
когда будут грамматики на формальных языках. Плюс, почему отдельно вынесем множество VAR,
мы поймем в курсе моторики, потому что мы постоянно будем ввод дополнять сверх. Оно всегда есть какие-то
базовые элементы, откуда мы берем. Дальше мы задали алфавит, нам теперь нужно задать правило,
как мы строим сами слова алфавита. Слова языка называются попозициональными формами. Пока мы вообще
не подразумеваем никакого смысла по ними. Мы записали значок конъюнс и дизюнс,
импликация инверсий, но никакого смысла в том, что это именно то, что предполагалось. Возможно,
это просто умножение, сложение, деление, вычитание. Никто не запретит. Поэтому первое правило,
что мы говорим, что X принадлежит VAR, это пропозициональная формула. Следовательно,
X-пропозициональная формула. Только давайте я буду писать phi, а не X. Дальше phi-пропозициональная
формула. Следовательно, отрицание phi-пропозициональная формула. Третье phi-psi-пропозициональная
формула. Следовательно, первое это phi-конъюнция psi-пропозициональная формула. Дальше phi-дизюнция
psi-пропозициональная формула. И импликация psi-пропозициональная формула. Особое внимание
уделяем скобкам. Почему? Давайте посмотрим на следующую формулу. У нас есть A или B или C. С
таким вы могли уже столкнуться, но является ли это пропозициональной формулой? С точки зрения
формального введения этого множества, конечно же, это вообще не пропозициональная формула. Это не
пойми что. Правильно было бы там написать либо A или B или C и при этом не забыть еще верхние,
или A или B или C. Причем, вот например, с точки зрения смысла boolev функций, все три выражения,
они являются одинаковыми, но с точки зрения синтезиса того, как мы водили, все три выражения это
что-то разное. Первая это просто не пропозициональная формула, вторая это одна пропозициональная формула,
вторая другая пропозициональная формула. Давайте упомянем следующие три определения. В прошлый раз
мы особо с ними не столкнулись. Это суффикс, префикс и подслов. Соответственно, суффикс как
обозначается? A является суффиксом B, это по определению обозначает, что существует такое
слово C, что A конконтонация C есть B. Префикс A является префиксом B, по определению B. Если
существует такое C, что C A равняется B. Наоборот, префикс A. Соответственно, A является подсловом,
по определению существует C, существует D такие, что C A D равняется D. Как запомнить обозначение?
Очень просто. Рисуем две палки, теперь вспоминаем, префикс это что-то в начале, поэтому палочка в
начале. Если есть суффикс, то это что-то в конце, значит ставим палку в конце, под слово что-то внутри
слова, палка внутри слова, всё. Смысл этих значков тривиальный. Отметим простое свойство про суффиксов,
префиксов под слова, что для любого слова S выполнено в любом алфавите, а выполнено, что
слово является собственным суффиксом, собственным префиксом и просто под словом. Смысл, что такое
собственный, это нужно отдельно сказать. Давайте скажем, что такое собственное префикс-суффикс под
слово. Это префикс-суффикс, давайте префикс-суффикс под слово такое, что не
подает совсем слово. То есть, суффикс-префиксы по слова это знак нестрогого порядка, а собственные
что-то там это уже строгий порядок, когда мы запретили равенство. Порядки уже были на
УКДЧ или ещё нет? На Матане были. На Матане. Ну, хорошо, будем считать, что, конечно, у нас был
УКЧ, но вроде бы он, нет, хорошо вроде. Поехали. Теперь дополнительно смотрим, что. Вот у нас были
конъюнция, дизъюнция, инпликация, инверсия, сейчас, инверсия, инпликация. Давайте рассмотрим формулку вот
такую. Все же мы помним, что у НОГКЧ, мы рассматриваем там что-то типа А к СОРБ. Давайте даже поставлю скобки.
Вопрос это пропозициональная формула или нет? Нет. Нет. Но при этом это что-то, что задает синтезическую
запись булефункций. Сейчас скажу. То, как мы задали пропозициональные формулы, это способ, который позволит
в каждой булефункции спасать какую-то пропозициональную формулу, но не всегда это будет удобно в силу того, что
какие-то булевые операции нам придется расписать при помощи конъюнции, дизъюнции и прочих операций.
Например, к СОРБ. Мы не сможем просто записать красивым одним значком, нам нужно будет расписать более подробно.
Поэтому, например, всякие к СОРЫ, экваленции, там что есть, штрихи шефера, стрелки пирса и прочие операции мы можем
посмотреть, как просто некий такой синтезический сахар поверх языка пропозициональной формы.
Давайте сразу запишем две теоремы, на которые потом мы будем ссылаться.
Сразу предупреждаю. Теоремы я буду брать те, которые скорее всего у вас есть на реакциях.
Если нет на реакциях, то они есть в висточках, которые должны выкладываться, видимо они будут чуть позже.
Там доказательства есть, поэтому, ну, еще и СОРА сказывается, зачем тратить время на них.
Тем, кому интересно, могут там почитать.
Давайте.
Теорема, да. Звучит так. Не существует, значок существования перечеркнутый, читается, как не существует.
Не существует собственного префикса для пропозициональной формулы такого, что он сам является пропозициональной формулой.
Да, это теорема о собственном префиксе, пропозициональной формуле. Это раз.
Вторая теорема звучит так. Она о скобочном итоге, пропозициональной формуле.
Для любой пропозициональной формулы выполняется, что любой ее префикс имеет неотрицательный скобочный итог.
Причем, вот это вот нам особенно будет важно. Причем, он равен нулю тогда и только тогда, когда либо он и есть вся формула.
Либо он принадлежит следующему языку. Что это за язык? Это язык всех возможных последовательностей из инпликации.
То есть, просто на начале там стоит какой-то кусочек из нескольких инпликаций.
Импликации? Ой, инверсии немножко. Можно называть это отрицанием, можно называть инверсией. Инверсия более такое.
Иностранно-знаменственное слово. Хорошо. В общем, вот две теоремы. Их надо помнить. Они будут важны. Дайте дай название, чтобы как-то так.
Теперь, что? Мы говорили про синтоксический. Нам на лекции первой тире очень старую вводили.
Ну, в целом... В целом, она так и доказывается.
Сначала мы показали, что скобочный ток не отрицательный, а дальше, ну, собственный префикс через это и будет доказан.
Но доказательства... Ну, опустим этот, кто любит, тот на лекции походит, почитает, послушает.
В общем, на этом мы заканчиваем с синтаксисом. Переходим к семантике. Возможно, слова звучат немножко непонятно.
Поэтому давайте их расшифруем, потому что весь сматологический будет построен на том, что мы рассматриваем синтаксис, семантику и сравниваем их.
Синтаксис – это то, как мы записываем. Это, по сути, формальные языки, их продолжение.
Мы как-то берем, применяем теорию этих формальных языков, приводим новые языки, может быть, что-нибудь более интересное, чем просто языки.
Дальше. Семантика – это смысл, то есть то, как мы понимаем то, что записали интересными значками.
И, как правило, у нас есть синтаксическая формальная система и соответствующая ей модель того, как мы понимаем эту систему.
Например, здесь у нас заданы языки пропозициональной формулы, у нас есть хорошая модель – это Boolean функции.
И мы постоянно будем говорить про то, что они должны совпадать в одну сторону. То, что синтаксис задает семантику – это корректность, то есть он не задает ничего того, что мы не хотели бы понимать.
А в обратную сторону, что любой элемент из модели мы можем как-то синтаксически записать – это будет полнота.
Вот. У вас уже должна быть теорема корректности того, как мы ввели пропозициональные формулы и полноте, по-моему. Это будет точно в конспекте первой части.
И это второй. Нет, это будет в конспекте второй части.
Поэтому приступаем к семантике.
Извините, а вы не могли бы еще раз показать теорему буквально на секундочку?
Пожалуйста. Вот, пока теоремы просто так написаны.
Извините, я просто отошел на это время. Вы не могли бы буквально на секунду и буквально сказать, в чем их краткий смысл?
В чем их краткий смысл?
Да.
В общем, теорема о собственном префексе, что мы взяли нашу, сейчас скажу, что мы взяли какую-то произвольную пропозициональную формулу, и теперь мы хотим посмотреть на что-то, на какой-то его префикс.
И посмотреть, может ли так, что две пропозициональные формулы, начинается одна, начнется с другой, и при этом это будет одно и то же. Так вот, теорема тоже значит, что такого невозможно.
Если уже две пропозициональные формулы получились так, что одна является префиксом другой, то значит, какая-то из них не будет пропозициональной формулой.
А вторая, это обобщение теоремы о скобочном итоге для правильных скобочных последовательностей.
Там было, что любой префикс имеет неотрицательный скобочный итог, теперь мы... что делаем?
Мы говорим, что он не просто неотрицательный, а говорим, когда конкретно он может равняться нулю. Немножко уточнили.
Нулем он будет либо на всей формы, либо на каком-то префексе из инверсии.
Извините, можно уточнить?
Я не очень понимаю, почему так выходит. Мы ведь можем задать, типа, формулу...
Ну, пропозициональную формулу, типа, так, чтобы другая была ее префиксом. Почему бы нет?
Нельзя. Это доказанный факт. Если ты, конечно, сможешь так сделать, это будет интересно. Но есть подозрение, что не сможешь.
Сейчас, а в чем там заключается суть того, что, типа, нельзя? Потому что там баланс больше нуля будет, или почему?
Или, ну, типа...
Сейчас, я сейчас чат мото логики, кину ссылку на файл с прошлого года, где доказаны все теоремы. И почему так, вам будет понятно.
Все хорошо, полно спасибо.
Да, давайте пока другой вопрос.
Когда говорим, что скобочный итог префекса может быть равен нулю, если он принадлежит множеству звездок линии от инверсии,
то мы подразумеваем, что в это множество входит вар?
Сейчас.
Какое множество? Нет. Мы конкретно задали... Смотри, я сразу разделил, что есть вар, а есть вот отдельные символы.
Вар мы не включаем язык. Все, вот он живет как-то параллельно. Это просто хороший мешочек, откуда мы можем нацепить переменные.
Все, вот просто...
Давайте вторую. Все-таки, к сожалению, в прошлом году мне не запретили писать слишком часто.
Лекция 2.4, она должна быть вызываться. Вот.
Да.
Так вот, руку поднял. Просто задавайте вопросы.
Все, в чате Матлока я кинул ссылки на те лекции, в которых эти теоремы доказаны.
Поэтому возвращаемся к буллинг функции.
В общем, что такое буллифунция?
Просто сказать, что такое буллифунция не совсем можно, потому что... Как у нас функция характеризуется?
Она характеризуется множеством, из которого она действует, множеством, которое действует.
А все буллифунции, они делятся на те множества, из которых они действуют.
Поэтому нам придется сказать, что не просто буллифунция, а NR-ная буллифунция.
Везде и далее я буду писать не буллифунции, а BF.
Точно так же только по позициональной формулы я пишу PFO.
Такие вот понятные термины я буду сокращать просто до аббреватуры из первых букв.
Может кто-нибудь кинул ссылку на чат Матлогики?
А это круто. В чате Матлогики будут у вас... Домашки укладываются, все.
И пусть будут там есть какие-то вопросы, будут задавать туда, там будут отвечать.
Поэтому, если кто еще не в чате Матлогики, обязательно туда присоединитесь.
В общем, NR-ная. У нас появилось слово R-ная. Это прилагатель над слово R-ность.
На УКТЧ уже должны были сказать, что R-ность это количество аргументов.
Функции.
Поэтому NR-ная буллифунция это функция от N аргументов.
Тогда, что из себя представляет NR-ная буллифунция?
Это F из 0,1 в степени N в 0,1.
Все. Это определение того, что является NR-ной буллифунцией.
Это комитет функций, которая действует из 0,1 степени N в 0,1.
Просмотрим сначала две очень хорошие функции, которые могут быть в произвольной аргументации.
Первая.
Тождественный ноль. Обозначать будем его вот таким значком.
Перевернутая буква T.
Издается он как? Издается он следующим образом.
Для любого x1, ну на самом деле x1.
Для любого xn.
Выполняется, что f от x1 тогда xn равняется 0.
Аналогично с тем, что такое тождественный ноль.
Только мы заменим 0 на 1, мы получим тождественную единицу.
Единица.
Но только теперь мы будем означать не перевернутой буквой T, а просто буквой T.
На самом деле это не совсем буква T, но будем называть буквой T перевернутой буквой T.
И тогда мы здесь требуем просто не 0, а единицу.
Хорошо.
Дальше более-менее такой практический смысл будут иметь бинарные функции.
Ну и даже же тернарные они особо не нужны.
Поэтому просто рассмотрим бинарные функции.
Функции.
Бинарные буревые функции.
И их сколько всего может быть бинарных функций?
Как понять?
Смотрите.
Вот у нас было определение функций.
Что такое множество a в степени множества b?
Это множество всех возможных функций из множества b множество a.
Тогда все энарные буревые функции могут задаваться следующим выражением.
Куда они действуют?
Они действуют в 0,1.
А действуют они из 0,1 в степени n.
Соответственно, это следование или выполняется есть свой значок?
У выполняется есть свой значок.
Вот наш значок.
Мы тогда в прошлый раз говорили.
Когда у нас...
Как он называется?
Кручок.
Хо крейтеров он называется.
В лати их такой символ.
Этот значок именно выполняется.
Это не следование.
Следование у нас...
Они не совпадают.
Здесь я везде пишу, когда выполняется, именно значок выполняется.
У нас это определение того, что такое множество всех функций.
А теперь мы хотим понять, сколько в принципе таких функций.
Вопрос сколько?
Это вопрос о мощности множества.
То есть мы хотим узнать.
Вот модуль ставим.
Так.
Дальше.
Для конечных множеств есть свойство, что мы модули просто можем навесить и все в порядке.
Хоп.
Хоп.
Хоп.
Ну, понятно, что n это просто оно размножит множество само себя в n раз.
Нет, в степи нет.
Поэтому мы можем еще вот n вынести в верхней степи.
Жух.
Жух.
Пум-пум-пум.
Тройка, n.
Тогда теперь у нас вся задача вопроса о мощности множества всех инарных функций
связана с вопросу мощности множества 0,1.
Ну понятно, что там было.
Тогда это 2, здесь степень 2, степень n.
Все.
Вот так вот мы смогли посчитать, сколько всего существует инарных функций.
Теперь рассмотрим, что бинарные функции.
Сколько всего существует бинарных функций?
Ну, подставляем в эту формулу вместо n2.
Это равняется 2 в...
Какой?
2 в 2 это что?
4?
Равняется 16.
Их, конечно, 16, но прям все мы рассматриваем не будем.
Давайте пойдем постановим.
Первое, ну понятно, что это будет.
У нас уже были есть две.
Это тождественное 0, тождественная единица.
Удобным способом задания функции будет задание функции,
когда мы будем рассматривать.
Тождественная единица.
Удобным способом задания функции будет таблица истинности.
Думаю, что это такое объяснять не надо.
Давайте начнем с дизюнции.
Дизюнция.
Поехали.
Обозначается так.
Дизюнция В.
Таблица истинности у нас АВ.
Как быстро чертить таблицу истинности?
Можно 0, 1, 0, 0, 0, 0, 1, вот так вот,
инкриментить единицу, а можно делать следующим образом.
Мы начинаем чередовать 0, 1, 0, 1.
А дальше мы увеличиваем количество подряд идущих в два раза.
То есть здесь 0, 1, 0, 1.
Тогда следующий ряд будет 0, 0, 1.
Сейчас 0, 0, 1, 1.
0, 0, 1, 1.
1, 1.
Дальше 3 будет 4 раза 0, 4 раза единица.
Дальше еще одна впереди 8 раз 0, 8 раз единица и так далее.
Это нам понадобится другого номера.
И создаем мы нашу функцию на значении такого.
На нулях это 0, везде остальных это единица.
Хорошо.
Давайте скопируем сразу табличку.
Теперь у меня появляется функция конъюнция.
Обозначается она как A, ну что-то типа большой лямбд b.
Так, вжух.
Теперь конъюнция работает по аналогии с дезюнцией, но только теперь она равна единице только на наборе с дезюнцией.
Все.
Дальше.
Вот красиво получилось.
Все очень хорошо.
Конъюнция, дезюнция.
Дезюнция, импликация.
Импликация всегда равна единице, кроме одного случая, когда первая равняется единице, вторая равняется нулю.
Импликация.
Теперь мы возьмем что?
Возьмем XOR.
Ну или называется это по-другому.
Исключающее или.
Так.
Какое там еще?
Или еще можно называть его по-другому.
Сложение по модулю 2.
И все.
Возьмем еще.
Сложение.
Ну.
Из третьего названия.
Сложение по модулю 2.
Понятно, что как просто посчитать значение этой функции.
Давайте сложим.
Возьмем значение по модулю 2.
0 плюс 0 это 0.
0 плюс 1 это 1.
0 плюс 0 это 1.
1 плюс 1 это 2.
0 плюс 0 это 0.
0 плюс 1 это 1.
0 плюс 0 это 1.
1 плюс 1 это 2.
По модулю 2 это 0.
Взять по модулю это, ну, взять остаток отделения.
Хорошо.
XOR есть.
Давайте возьмем отрицание XOR.
Тогда получим функцию, которая будет равна 1 тогда и только тогда, когда обе переменные равны.
Своего рода равенство.
Эта функция называется эквиваленция.
Эквиваленция.
Обращу внимание, что это эквиваленция, не эквивалентность.
Обозначаем мы ее следующим образом.
Стрелки вправо-влево.
Еще вариант обозначений, когда мы пишем 1, 2, 3.
Возможно, в моданализе раз уже где-то писали 3.
Обычно, когда хотят, чтобы точно совпадают, пишут 3 тройное равенство.
Но мы будем пользоваться стрелочками вправо-вправо.
Тогда она задается как?
Звук.
Ух ты, я тут не исправил значок.
Значок как?
Функция единиц тогда и только тогда, когда обе переменные принимают одно и то же значение.
Жук-жук-жук.
Эквиваленция.
А теперь внимание две новых функции.
Возможно, в школе вы уже с ними сталкивались.
Возможно, нет.
Это функции штрих-шефера и стрелка пирса.
Их нужно запомнить, потому что на контрольной они скорее всего будут у вас использованы.
Если вы их не помните, то есть шанс, что вы просто не сможете шикнуть.
Штрих-шефера.
Обозначается он как штрих.
А-палка-б.
Другое название, которое помогает его запомнить.
Штрих-шефера называется еще как нанд.
Нанд это not-end.
Соответственно, это отрицание анда, а анд это конъюнция.
Давайте уже вот так.
Делаем парочку вот такого.
Давайте справа запишем на всякий случай, как у нас выглядела конъюнция.
Конъюнция это у нас 0,0,0,1.
Теперь мы берем и отрицание.
Получаем 1,1,1,0.
И получаем штрих-шефера.
По аналогии со штрихом шефера, здесь мы отрицали анд.
Теперь мы можем отрицать ор.
Получится функция nor или она называется стрелка пирса.
Это очень хорошие функции.
Чем из очень хорошей?
Это будет вопрос следующей контрольной.
Not-or.
Обозначается он следующим образом.
А, стрелка опущена вниз, B.
Извините, а после экваленции какая функция была?
После экваленции как раз штрих-шефера.
А, штрих-шефера.
Что он делает фактически?
Ну, смотри, что такое функция.
У тебя подается значение, набор значений.
И она вот по набору значений возвращает какое-то другое значение.
Так это же то же самое, что и.
А, нет.
Вот, зеленая.
Это отрицание.
А стрелка пирса это отрицание или.
Там будет 1, 0, 0, 0.
Тут я по сути рассказал все хорошие штуки.
Помимо импликации есть еще такая штука как обратная импликация.
То есть по сути как бы мы переставим B и A местами.
Но это мы переставили после названия переменных.
На самом деле функция осталась одна и та же.
А именно чтобы сохранить позиции A и B, то нам нужно будет развернуть значок.
Так мы получим то, что называется обратной импликацией.
То есть 0 теперь будет здесь.
Можно сделать отрицание импликации по аналогии с нандом нором.
Тогда функция будет называться отрицание импликации, отрицание обратной импликации.
Но это абсолютно не особо нужные функции.
Я не уверен, что кому-то не понадобится.
Хорошо.
И функция, про которую я не упомянул.
Вот это бинарные функции.
Есть унарная функция.
Инверсия.
Или отрицание.
Обозначаем ее как приставка A.
И тогда ее таблица истинности есть.
A 0 1 жух.
Отрицание это 1 0.
Дополнительно.
По аналогии с тождественным нором, тождественные нинцы, которые были для всех абсолютно буревых функций.
Есть для любой инарной функции.
Функции такой, что n больше равняется нинце, мы можем определить функции проекторов.
Проектор.
Чего-то там.
Вот чего-то там.
Обозначаем это обычно как.
Там можно на русском языке обозначать.
Pr.
It.
Можно обозначать от A, тогда rep.
Не так. От X1, тогда rep.
Можно проектор через латиницу.
Pr.
X1, тогда rep.
Что делает проектор?
Как он определяется?
То, что для любых X1, так далее, Xn выполнено, что проектор X it, X1, так далее, Xn равняется X it.
Что такое многоточие в своем проекторе?
Проектор какой именно координаты он?
Например, мы можем взять для унарных функций.
Можно взять проекции только одной координатой.
Он там один.
Для бинарных функций у нас два проектора.
Проектор первой компоненты, второй компоненты.
Для тернарных функций, то есть трех, это проектор первой
компоненты, второй компоненты, третий компонент и так далее.
И с инарной функцией все существует n проекторов.
даст нулём, потому что для нулярной функции существует ноль проектов.
Хорошо.
Тогда вот мы задали как-то boolev функции, рассмотрели конкретные случаи.
Дальше у нас есть теорема полнота-корректность,
которая докажет, что у нас есть boolev, у нас есть пропозициональная формула,
у нас есть boolev функции. Соответственно давайте я сделаю так.
Корректность, тогда корректность работает как, что все пропозициональные формулы задают только boolev функции,
это мы показали вложенность в одну сторону, а полнота покажет, что все boolev функции зададутся как-то
пропозициональными формулами. Таким образом у нас есть вложение в одну сторону в другую сторону,
поэтому мы имеем множество пропозициональных формул и множество boolev функций.
Хорошо, а в чем разница между экваленцией и эквалентностью?
Эквалентность это boolev функции, а эквалентность это понятие, которое в различных моментах может
обозначать разные вещи. Эквалентность это именно boolev функции. Вот например сейчас мы скажем,
что такое эквалентность пропозициональных формул. В таком случае эквалентность,
вообще если определять формально, что это такое, это отношение... Это у меня экран погас, да?
Извините, можно вопрос? Да. А что значит, что пропозициональные формулы, типа,
содержатся в boolev функциях, а boolev функциях содержатся в пропозициональных формулах?
Смотри, ну да, я не совсем корректно записываю именно вложение, что пропозициональные формулы,
смотри, у нас есть... Даже не так. Вот boolev функции мы можем представлять при помощи этих значеков.
Да. Дальше вот эти вот значки, которые более сложные boolev функции, мы можем выразить через
более простые. Конюнция, дизюнция, инвекция, инверсия. Тогда boolev функции мы можем как-то
задавать синтоксическими формулами. Ну да. Тогда теперь мы говорим, что у нас здесь слева есть
какие-то слова на нашем алфавитам и справа есть какие-то слова на нашем алфавитам. И теперь
мы говорим, что мы можем множество задаваемых слева совпадать с того, что задаваемых справа и
в обратную сторону. Вот что это означает. Да, то есть здесь, да, не прям вложение,
которое стандартное. Ну, оно просто будет две разные сущности, если я правильно понимаю.
Давайте так скажу. Вот. L над BF это язык, который над boolev функции задали выше.
Чисто формально, да. Вот так вот будет более правильно записать. Или там сказать, что по
прозициональным форму мы можем посчитать значение, сопоставив boolev функции. Можно так смотреть,
да, можно смотреть типа тут. В смысле, посчитали значение по тому, что выше.
Можно состоять в таком смысле. Но давайте, да, чисто формально, мы возьмем, сделаем стрелочку,
просто возьмем стрелочки. Вот у нас стрелочка туда, что можно по прозициональной формуле,
что прозициональная форма задаст какую-то boolev функцию. И в обратную сторону стрелочка,
что по любой boolev функции мы можем построить какую-то прозициональную форму. Я беру вот эту.
Хорошо, давайте фреу, чтобы было чуть покрасивее.
Я, кстати, да, если честно, я тоже сначала не мог понять пропозициональные формулы,
они от boolev функции, потому что как бы они отличаются. У нас же там просто буквы,
те же операции, что для boolev функции. Ну фактически это и есть boolev функции. То есть разницы никакой
нет фактически. Нет, как раз фактически в чем разница, что пропозициональные формулы,
почему формально нельзя было ставить знаки вложенности. Пропозициональная формула это синтаксис.
Это синтаксис. Соответственно, по синтаксису мы можем только что-то, это какая-то система записи,
просто иероглифы, которые мы смотрим как на иероглифы. Но мы можем этим иероглифом сопоставить
какой-то смысл. Вот, как раз зеленая стрелочка, это мы посчитали значение по смыслу, который мы
вот задали выше. А boolev функции это семантика. Это именно функции в том смысле, что вот какие-то
объекты, которые берут... Короче, пропозициональная форма типа это значки, а boolev функции это то,
что эти значки обозначают. Да, вот. Эти ориенты полноте корректности говорят о том, что наша
система записи и наша система смысла, они друг друга дополняют и не противоречны.
Сейчас понятнее? Да. Супер. По аналогии с этим мы еще очень много раз придем куда-то в этой
схеме, когда у нас будет слева синтаксис, справа семантика, теория полноте корректности. Поэтому
просто готовься морально. В общем, теперь, так как мы знаем, что с пропозициональной формой мы можем
сопоставить какую-то boolev функцию наоборот, то мы можем вести отношение на языке пропозициональной
формы. Отношение это предикат бинарный, то есть множество всех пар, причем это будет отношение
эквивалентности. В прямом смысле, который был один из классов бинарных предикатов, что оно
рефлексивно-симметрично-транзитивно. Ох, боги. Эквивалентность пропозициональных форм. Эквивалентность
пропозициональной формы мы будем означать следующим образом. Фи-1 значок эквиваленции psi. Так вот,
фи эквалентно psi тогда и только тогда, когда, давайте скажу, boolev функция psi,
даже действительно совпадает с boolev функцией от psi. Даже не так просто, в основном совпадение функции.
Из укатча вспоминаем, что такое функция. Функция это множество пар. Что такое совпадение множества,
это вложение одного множества в другое, то есть там пары, которые содержатся слева, и пары,
которые содержатся вправо, они все как-то там в обоих. Хорошо, ну понять, что это действительно
отношение эквивалентности на языке пропозициональных формул. Не составит трудностей,
если кому-то интересно, может. Эквивалентность пропозиционных формул это именно графическое,
да? Правильно понимаешь? Где? Эквивалентность пропозиционных формул это именно графическое
равенство, да? Нет, смотри. Пример. Давай вот я возьму, например, формулу A и A. Вот они эквивалентны,
две формулы. Или я могу, это очень тупой пример, я просто там саму собой формулу сделал,
можно сделать чуть более. Вот там их много. Понял, понял. Хорошо, теперь мы можем их как-то
проклассифицировать по тому, что задают эти пропозициональные формы, а именно у нас есть четыре
таких вот класса. Первая тавтология, то есть буливая функция от phi является единицей. Дальше
противоречие. Дальше есть выполнимое. Мы и не, и опровержимые.
Противоречие это такие, что буливая функция от phi это тождественная ноль. Выполнимое,
что существует x1, и так далее, xn, что буливая функция от phi на наборе значений x1, xn понимает
значение единицу. Опровержимое, что существует набор значений такое, что буливая функция на
нём будет принимать значение ноль. Всё, четыре таких вот класса. Давайте по... там вопросы пока вот
по этому пункту, по позициональной формуле буливой функции x5.
Попросов нет? Хорошо, тогда идём дальше. Вот в конспекте по-другому обозначается,
phi по позициональной формуле phi обрамляется в квадратной скобке. Ну, если так, то возможно,
да, будет сейчас, возможно, лучше писать так, как в лекциях, но сейчас... И так можно,
получается, да. Давайте, да, давайте я сделаю так, что вот, давайте я вспомню особое значение, x1, xn.
Вот, это же так, как в лекции, да? А если правильно помню? Да, да, да, всё так. Супер топ. Да, то есть здесь я буливую
функции, я просто вот особое обозначение, что это буливая функция, задаваемая этой формулой. Я говорю,
что я не хочу конкретные значения функции писать, потому что, наверное, вам нам от анализей должны
бы и рассказывать, что, например, когда мы пишем f от x, это не функция, это значение функции на x,
а это какое-то число. А сама функция правильной записи, это просто f. Это именно функция. То есть,
если мы формально смотрим, то вверху у нас какое-то число, снизу это функция. Поэтому вот, чтобы
именно саму функцию показать, я буду писать как bf от phi. Это именно сама функция. А его значение
будем писать, что значение. Поприсенсиональный формул на наборе таким, на наборе x1, xn это такая
штучка. Хорошо. Спасибо за замечание. Давайте переходить к dnf, knf. И да, это будет последняя
тема, против которую можно подержать. Dnf, knf. Поехали. Начинаем, конечно же, с определений. Первое
определение это литерал. Что литерал? Это переменная или ее отрицание. Хорошо. То есть,
если мы помним, в прошлый раз мы говорили про дерево распора. Сейчас мы определили своего рода листья
нашего дерева. Нам нужно было определить, какие базовые элементы. Базовые элементы это литералы.
Теперь мы можем объединять литералы. Как мы можем объединять? Литералы мы можем объединять дизюнцы
или коньюнцы. Соответственно, когда мы литералы объединяем дизюнцей, мы получаем дизюнт.
Это дизюнция литералов. Коньюнция литералов.
Литералов. Хорошо. Теперь мы можем объединять дизюнты и коньюнты. Дизюнты как мы можем объединить?
Но если мы объединим дизюнцы, то по сути у нас два дизюнта все равно сохранят свойство быть
дизюнтом. Поэтому единственный способ объединять дизюнты это коньюнция. И объединив коньюнцы и
дизюнты мы получим кнр. Коньюнтивно нормальную форму.
Р. Коньюнция дизюнтов. Дальше dnf по аналогии с кнр. Это дизюнцы.
Коньюнтов. Хорошо. Давайте посмотрим, что. Когда, во-первых, кнр и dnf могут совпадать? И могут ли?
Что значит кнр и dnf совпадают? Давайте посмотрим, когда кнр может совпадать с dnf.
Кнр на самом верхнем уровне это коньюнция дизюнтов. То есть выглядит она будет как-то так.
Коньюнция вот здесь, что-то там, дизюнция что-то там, как-то так.
Dnf же в свою очередь выглядит как дизюнция чего-то там, что дальше сконьюнтируется.
Вот как нам сделать? Смотрите, коньюнции нескольких, но коньюнция одна с самым собой.
Одного просто коньюнция. То есть это что-то, к чему мы просто не дописали значок вот этого.
То есть наверху мы сохраним просто значок дизюнца или коньюнца. И этот прием как раз заключается в том,
когда они могут равняться. Если мы возьмем просто один дизюнт, то мы формально удовлетворяем
определение кнр. У нас будет просто дизюнция литералов. Тогда здесь что нам нужно? Нам нужно,
чтобы все коньюнты, они состояли из одной переменной или ее отрицания. То есть здесь у нас l1
или l2 или так далее. Здесь у нас точно также превратится в l1 или l2 или так далее.
Это когда могут равняться первые случаи. Второй случай абсолютно аналогичный тому,
что было. Извините, я не очень понял. Я не очень понял сейчас, когда они равны. У нас же там
коньюнция, там дизюнция. Почему вы записали, что и там дизюнция? И справа тоже. Окей. Смотри,
давай смотреть на первый случай. Вот у нас два случая. l это литерал. Вот что такое здесь?
Вот у меня есть n раз коньюнтились какие-то литералы. Это что по определению? Дизюнт.
Смотри, knf это коньюнция дизюнтов. А что если у меня только один дизюнт? Он же тоже по сути
коньюнция дизюнтов. Только он один. То есть я просто не написал дальше значка вот этого коньюнции.
То есть это только если один дизюнт. Да, это вот все один дизюнт. А что? Тут у меня теперь коньюнты,
которые создаются на перемену. То есть получается, что литерал, если он один,
сам по себе, он является и коньюнтом, и дизюнтом? Да. Ага, понятно. То есть если у нас просто на
перемену, она может быть и knf, и dnf. Ну, это частный случай от того, что мы здесь расписали,
просто когда у нас мы же что-то написали n, n может равняться единице.
Плюс еще есть такая штука как пустые коньюнты и дизюнты. Сни, например, что такое пустой дизюнт?
Пустой коньюнт. Давайте не будем это пока не надо. Я сейчас буду долго думать.
В общем, n может равняться 0, тогда вы удивитесь, но мы придем к тому, что это будет...
Тогда это будет вот такие два значка. Эти два значка, если мы вспомним это,
тождественная истина и тождественная рожь. Что есть что, узнаем позже.
А n – это количество наших дизюнтов и коньюнтов?
n – это просто количество литералов. Оно может быть любым натуральным числом.
Еще раз напоминаю, что натуральное число – 0.
Но это так, рандомный факт, на который пока можно забить.
Вот, например, пустой дизюнт – это тождественная рожь, пустой коньюнт – это тождественная истина.
Давайте я это удалю, потому что еще собьет кого-то, в смысле, кто будет это считать.
Хорошо. Вот. Мы знаем, что такое кнф, днф, как их строить. Все помнят, сколько это человек
может строить алгоритм по строению. Нужно еще раз повторить.
Ну, я помню.
Супер. Тогда опустим алгоритм по строению кнфа, днфа. Прямо на практике там построим, посмотрим, что как.
Теперь мы хотим не просто кнфа, днфа, а хотим скнф сделать… скнф, s, dnf.
Это все те же кнфы, днфы. Вот, s – это совершенная кнф, днф.
Причем, что означает «совершенная»? То есть такая, что… первое. То есть для совершенного кнфа, днфа у нас есть два условия.
Первое условие, что в любом конъюнте или дизъюнте, в зависимости от того, что смотрим,
каждая переменная встречается ровно один раз.
Второе, что нет повторов дизъюнтов, кунюнтов.
Ну, очевидно, что мы можем перемещать. Давайте посмотрим, что. Например, вот здесь. Примером будет.
А или не Б. Это не является совершенной дизъюнтной нормальной формы, потому что у нас повторяются…
Совершенно конъюнтивно нормальная форма, потому что у нас повторяются два дизъюнта.
А что поднимается под повтором? Это не значит, что один и тот же?
Ну вот, у нас один и тот же дизъюнт прошел. Вот в этом примере.
А почему он один и тот же?
Ну, давай переставим Б и А местами.
А, подождите, это двойка? Или это Б в первом случае?
Это отрицание у нас.
А, это отрицание. Все, понял.
В общем, в матологике практически не будет чисел.
А вот можно тебе первое показать еще раз? Первый пункт.
Да, то есть, пусть у нас там было что?
Ну, например, у нас была функция от трех переменных.
Если у нас встретился дизъюнт, в котором две переменные, то понятно, что у нас есть какая-то переменная,
которая не вошла в этот дизъюнт, поэтому это несовершенно.
Совершенно мы прям хотим, чтобы в каждом дизъюнте была каждая переменная.
Вот когда алгоритм построения KNF-DNF, мы на самом деле строим из KNF, из DNF.
То есть мы берем каждую переменную, там с отрицанием и с этим, их там дизъюнтим-конюнтим,
потом все полученные штуки дизъюнтим-конюнтим,
и получаем совершенно конъюнтим нормальную или совершенно дизъюнтим нормальную.
А если я возьму A или не A и B,
ну понятно, что это не является совершенно дизъюнтим нормальной формой,
потому что в первом конюнте у меня нету переменной B.
Или даже если у меня все будут одинаково длинные, но у меня будет на самом деле
пересыпеременных больше, то у меня не подпадает под определение,
что каждая переменная состоится ровно один раз.
Что такое совершенно? Понятно ли еще есть вопросы?
Ну такие, видимо, вопросов нет.
Хорошо. Мы можем теперь делать их совершенными, мы знаем алгоритм,
но проблема с совершенными, что они какие-то уже очень слишком здоровые и не слишком удобные.
На самом деле вот у нас пример, который я привел в случае, когда не каждый пример,
но я не знаю, как это делать.
Я не знаю, как это делать.
И не слишком удобные.
На самом деле вот пример, который я привел в случае,
когда не каждая переменная входит один раз,
мы можем их немножко упрощать.
И как их упрощать?
На этот вопрос дает решение, дает ответ метод карт-карно.
В общем, для этого давайте просто вспомним про то, что есть такой объект, как булиф куб.
Куб в смысле Rn.
У вас уже были бы многомерные пространства на мотонализе?
На мотонализе нет.
Ну, в общем, я не знаю.
Я не знаю.
Я не знаю.
Я не знаю.
Я не знаю.
Я не знаю.
В мотонализе нет.
Нали-нали?
Ну, как сказать, просто вводилось.
Ноги?
Ну, короче, что такое там пространство размерности 2, R2, R3, R4?
Вы пока не знаете, да?
Нет, мы только это знаем.
То, что там базис может больше, чем 3 векторов состоять и все.
Ну, базис, вообще базис инмерного пространства будет состоять ровный из n векторов.
Ну, вот, да, только это знаем.
Окей.
В общем, хорошо.
Тогда работа в пространстве R3.
Это обычное наше трехмерное пространство.
Евпидо-школьное.
Родистериометрия же в школе есть.
В общем.
Мы можем работать с геометрией только до пространства R3.
Чуть дальше у нас уже начнутся беды, потому что, ну, как нам нарисовать чьи трехмерные пространства на листочке бумаги, мы пока это не знаем.
Вон, давайте я куб нарисую этот.
Вот у меня есть були в куб.
Например, что такое куб в пространстве R2, то есть в обычной плоскости это квадрат.
Куб в пространстве R1, то есть прямая плоскость.
Куб в пространстве R2, то есть в обычной плоскости это квадрат.
Куб в пространстве R1, то есть прямая, это точка.
Да.
Внезапно потом у нас появляется в R4 у нас еще есть более крутой куб и так далее и тому подобное.
Вот у нас есть були в куб.
Что на себе представляет?
У нас есть какая-то вершинка.
Мы говорим, что это вершинка 0,0.
3,0.
Ну, 3,0 это...
Давайте я вот так.
Давайте я вот так.
Жух.
Это вот.
Давайте.
X1,
X2,
X3.
Соответственно у нас здесь координаты.
Это 0,0,0.
Значит здесь координата 1,0,0.
Здесь координата 0,1,0.
Здесь координата 0,0,1.
Господи, хотя бы я могу диаметрию 0,0,1.
0,1,
0,
1,1,
1,1,1.
Вот.
У нас 8 вершин.
В ономерном пространстве у нас будет 2 степени вершин.
И вот как-то единичный куб, вершины.
Тогда,
во-первых, у нас свойства всех ребер,
которые мы можем отметить, что
все ребра отличаются ровно по одной координате на единицу.
Отличается только одна координата и на единицу.
Две остальные сохраняются.
Всё.
Это важно помнить.
Дальше.
В этих вершинах мы записываем значение функций на соответствующем наборе.
Здесь у нас набор вот этого.
0,0,0.
Здесь набор 0,1,1.
И так далее.
Вот.
Есть такая штука, как булевку.
Это всё красиво, приятно.
Но.
Есть одно но.
Немножко неудобно каждый раз чертить этот куб.
И так далее.
Поэтому мы можем куб спроекцировать на плоскость.
При помощи карты Карно.
И в принципе все карты Карно это есть своего рода проекция булевого куба.
В ономерном пространстве.
Так.
Поехали рисовать.
Как мы проекцируем его?
Проекцируем мы его следующим образом.
Дальше теперь сделаем какую-нибудь цветную штучку.
Давайте оранжем.
Всё.
Хорошо.
Теперь.
Там где четыре штуки.
Туда мы записываем две переменные.
Давайте я запишу сюда.
Советую один раз делать.
И всегда потом.
Здесь у меня будет переменная.
Х.
П.
Куяру будем сделать.
Поэтому здесь будет переменная ПК.
Здесь же переменная Р.
Тогда.
Я начинаю что делать.
В первой лечебнике ближе я сразу записываю значение.
0, 0.
Что это будет означать?
Что сверху это значение переменной П.
Снизу это значение переменной К.
Здесь просто Р.
Тогда следующую клетку я делаю как?
Я делаю новый набор значения переменных.
Такой что будет отличаться только одна переменная на единицу.
То есть здесь 0, 0 станет 0, 1.
Дальше уже 1, 1 нельзя.
Вот это очень важно.
Если только вы сделаете 1, 1.
Почти наверно у вас сразу неправильный ответ.
Ой, ой, ой, ой, ой.
1, 1 в конце должно быть.
Не может быть в конце.
Да, да, да.
Нам нельзя 1, 0.
Потому что у нас тогда будут отличаться обе переменные.
Нам можно только одну переменную сделать.
Поэтому здесь только 1, 1.
Тогда следующие вытовят 1, 0.
Можно просто запомнить что такая шапка у таблицы.
Можно запомнить правило что мы изменяем только одну переменную и получаем новый набор.
А мы можем начать не с 0, 1, а с 1, 0?
Можем.
То есть правило, то как вы запишете, оно абсолютно без разницы.
Что будет означать что вы напишите не с 0, а с 0, 1?
Это значит что вы просто как-то этот куб повернули у себя в пространство и вот так вот спроецировали.
Тогда вот соответствующая клетка это есть проекция вершины куба 0, 0, 0.
Это будет проекция 0, 1, 1.
Это проекция 1, 0, 0 и так далее.
Это карта корно.
Карту корно в данном случае можно представлять как куб от трех переменных.
Но если у вас внезапно появятся четыре переменные, то куб вы уже этот буллив не построите у себя.
А карту корно вы сможете очень легко построить.
Поэтому особенно на R4, ну не R4, то B4 у вас там будет все прекрасно.
B это будем считать что набор 0, 1. Обычно так делается.
Вот так вот, что мы делаем.
Теперь, когда мы хотим минимизировать какую-то функцию, функция задается ее вектором значений.
Извините, вот на вопрос.
Да.
А в клубе корно сначала идет значение ПК, потом значение R?
Ну, сейчас.
Есть разница, что есть П, что есть П, что есть Q, что есть R?
Смысл карты корно, что вот просто вас должно так что соответствовать, а дальше здесь я могу поменять местами эти переменные.
Я могу здесь записать P, здесь записать R.
Это все просто вращение куба в пространстве при проецировании.
Они не поменяют ничего.
Просто главное помнить, что вот здесь вот это именно переменная P, это переменная Q, это R.
И что мы сохраняем правило, что изменится только один...
Нет, я имею в виду, как это заполняется.
Типа в первой клеточке верхней левой будет 0, 0, 0, типа та, которая ниже 1, 0, 0 или 0, 0, 1?
Ну, сначала R?
Или безгладница?
Ну, вообще у тебя функция, она будет зависеть от переменных PQR.
А, ну значит P сначала, окей.
Да.
Если у тебя функция на самом...
Ну, в общем, функция такова, что от того, что мы запишем перемену в другом порядке,
ну, она сама свое значение не поменяет.
То есть, какая разница?
Вот там у нас была функция P следует Q, конъюнция R.
Какая разница, что я запишу переменные так, что я запишу переменные так?
Наверное так.
Но если я запишу вот так, то у меня просто перестанут переставиться строчки таблицистности.
Вот местами поменяется и все.
Глобально сама функция не изменится.
Поэтому здесь лишь вопрос того, какие значения мы в итоге тогда запишем вот эти кредки.
Вот давайте возьмем какую-то функцию.
Возьмем функцию какую?
Я хочу 0-0-0-0, 4-0-4 единицы, 2-0-2 единицы, 2-0-2 единицы, 0-1-0-1, 0-1-0-1.
Вот давайте Racquet, по тому, что а�фа видно порядок, наша Вселенная.
И значения функция F.
Давайте сделаем как...
Я хочу сделать... Здесь 0 поставлю, здесь 0 поставлю. Дальше я поставлю 0 где? Здесь, здесь, здесь 1, здесь 1, здесь 0.
Давайте, да. Хорошо. Тогда что? Теперь вот эти значения функции я расставляю либо в нашем
муливом кубе, либо в карте картон. Давайте я расставляю там и там, покажу, а дальше вы уберете
для себя более приятный способ. Здесь будет 0, значит 0 0 1 0, 1 0 0, 1 0 1. Дальше...
Это 4, у меня еще его тут. Все остальное 1. Здесь будет 0 0 0 0 0 1 1. Вот, я заполнил карту
карно и буллив куб для нашей функции. Теперь я начинаю решать задачу... О чем? Задачу
минимизации. Как минимизировать? Минимизировать мы делаем следующим образом. Нам нужно, давайте
нам нужно покрывать, я скажу, мы можем покрывать либо одну точку, либо покрывать точки на одной
линии, либо покрывать точки на одной плоскости, либо весь куб сразу. Ну, на самом деле, да,
весь куб сразу, это R3 пространства. Поэтому трудновато вам будет здесь понять. Но, как правило,
весь куб, ну понятно, что там, как вы умеете. В 1 1 1 должен быть 0. Так, в 1 1 1... А, я извиняюсь,
я думаю, мне сверху 1. Спасибо. В общем, теперь я хочу покрыть как можно меньшим количеством
вот этих фигур. Вот давайте покрывать куб. Куб я могу покрыть, во-первых, вот эту всю плоскость из нулей.
И мне осталось покрыть еще один 0. 0 я могу покрыть двумя способами. Я могу покрыть его просто,
а могу покрыть вот так вот. Вместе с этой вершинкой по одному ребру. Правило, что покрытия могут,
сейчас, покрытия могут накладываться. Никто не запрещает это. Вот я люблю покрывать как можно
больше, потому что так сами резюмки уменьшаются. Вот. А что значит это покрытие, в чем его смысл? Ну,
то есть мы должны все нули на более кубе покрыть. Вот видишь, у нас есть вершины помещены нулями.
Моя задача вот взять их как-то покрыть либо... Вот на карте Karnaut это чуть более понятно. Я
могу покрыть либо вот такими фигурками, то есть я могу покрыть просто чисто плоскостью. Все,
которые лежат на одной плоскости, я могу сказать, что вот я покрываю их одной плоскостью. Вот плоскостью
x1, 0, x3. Ну и для функции пропозициональной формулы еще. Ну, смотри, в прошлый раз мы сказали,
что они совпадают, поэтому нам без разницы. Для пропозициональной формулы еще ничего. У нас
есть некоторые более функции. Возможно это более функции, которая задана пропозициональной формулой.
Ну вот именно для нее еще. Пока мы отошли от темы пропозициональной формулы. У нас есть
просто некоторые функции, мы ее хотим кnf, dnf минимизировать. А можете еще раз повторить,
вот нули и единицы на вершинах куба, они откуда взялись? Мы их просто придумали? Нет, это мы
записали соответствующие значения функции. А что это за функция? Она где? Произвольная. А все-таки мы
просто придумали. Да, я вот придумал функцию. Я хочу сказать, что вот я хочу для нее написать
минимальную кnf, dnf. Понятно. Тогда вспомним, что такое кnf. Кnf мы минимизировали. Сейчас. Кnf,
она фиксирует нули. Поэтому для кnf мы выбирали нули, для nf мы выбирали единицы. А вы еще нули
не закрасили? Да, сейчас вот я его скажу. Вот я закрасил плоскостью, я закрасил. Вот у меня есть
плоскость. Плоскостью я закрасил эти четыре нуля, теперь мне нужно закрасить вон то. Я могу закрасить
его как зелье. Я могу закрасить пространством r0, пространством r0 это точка, могу закрасить
пространством r1, это прямая, например, вот так вот. Вот эту плоскость я закрасил пространством r2,
это плоскость. Могу закрасить пространством r3, это закрашу сразу весь куб, но весь куб понятно,
когда можно весь закрасить. Всё. Вот я потратил всего два закраски. А пространство r2?
Пространство r2 это плоскость. А можно закрасить одну вершину пространства r2? Ну вот последнюю.
Нет. Для того чтобы закрасить пространство r2 нам нужно чтобы на всех вершинах вот этим
вот пространством у нас было, везде были нули. Ну так а под углом если поставить это плоскость
под 45 градусов. Вот. Поэтому, ну это я говорю r2, на самом деле мы живем пространстве b2. Ой пространство b.
Пространство b давайте я скажу. Это пространство 01. Соответственно у нас есть b это b1, b2 это вот это вот
01, 2 и так далее. Поэтому углов у нас не существует. То есть здесь я покрасил пространство вот это
вот например у меня. Это пространство b1, это у меня пространство b2. Поэтому никаких углов я
сделать не смогу к сожалению. Там например кто-то подумает что, а вдруг я могу закрасить вот
каким-нибудь таким сечением. Такого сечения нельзя, его нету. Диагональных сечений у нас нет. У нас
вот сечение только это вот ребра. Ой грани. Хорошо, хорошо, хорошо. А можете повторить для чего это вообще
все сделано было? Чего мы добились? Чего всегда надо. Вот. Чего мы добились мы посмотрели как это в
пространстве. В пространстве я так понял что всем плохо, но есть люди которым вот этот способ
удобнее. Ну ладно. А теперь я покажу как это делается на карте корном и после этого я лично буду
пользоваться картами корном и как мы будем с ним когда-нибудь вернуться. А что делается, то что мы делаем?
Дальше мы просто сопоставляем этому соответствующий конъюнт или дизюнт и просто
записываем все. Наша задача просто покрыть, а дальше мы каждому покрытию сопоставляем. А у нас задача
представить функцию в виде tnf или knf? Да, которая будет минимальной. Минимальная это в смысле что она
включит в себя вот минимальное число этих конъюнтных дизюнтов. Ага, понятно. То есть максимально
приблизить к вот этой вот совершенной или какой? Не, как раз совершенная она не является минимальной.
Как правило. Совершенная это обычная, которая вот обычная. Да, совершенно у тебя просто прям вот
сколько можно вот столько мы всунули. Там больше совершенной можно всунуть только если мы начнем
делать какие-то глупости типа там повторы там подобное и мы начнем сам и мы начнем добавлять
какие-то пересекающиеся штуки которые из других состоят. Ну зачем? То есть хуже совершенной
только глупая knf. А мы хотим какую-то очень хорошую минимальную. Аналогичной задачей вот на плоскости
в пространстве у меня есть карта Karnaugh, которая прекрасна. Что мы делаем? Наша задача вот покрывать
нули единицы следующими способами. Мы можем покрыть квадратиком, можем покрыть вот двумя
клеточками. Причем как так, как так. Без разницы. Можем покрыть четырьмя клеточками вот такой
вот квадратик. Еще четыре клеточки можно сделать вот так. Либо если вы начертили карту Karnaugh не
горизонтально вертикально, у вас появится там четыре клеточки вниз. И ну и в самом плохом случае,
который у вас конечно никогда не встретится, это вот так покрыть все. Теперь как это чудо работает?
Вот давайте здесь как покрыть. Особенность карты Karnaugh, что на самом деле вот мы можем выйти за
края. Вот эти вот клеточки, они соединены на самом деле. По-другому еще есть вот это, можно
видеть из куба, а по-другому можно видеть, что карта Karnaugh это развертка Тора.
У нас был где-то там Тор. Я честно не умею собрать Тор. В общем, поняли, что вот эти вот крайние
штучки, они соединены, поэтому я могу сделать вот так. Раз, квадратик из четырех. И дополнительно
мне нужно покрыть еще один ноль. Это я возьму вот здесь прямую конечку. Все. Тогда теперь по карте Karnaugh это
чуть проще понимать. Мы оставляем как? Мы оставляем те перемены, которые не менялись на протяжении этого,
не менялись внутри. Вот это вот, за квадратикой или прямую конечку. Вот, например, в синем. Какая
перемена у нас не изменялась? P у нас изменялась, она здесь соединится, здесь ноль. R тоже изменялась,
а вот Q у нас не изменялась. Поэтому Q мы оставляем. Причем по аналоге как с KNF мы берем что? Мы если
переменная принимала значение ноль, то мы берем ее, а если принимала единицу, то значение отрицания.
Все, Q мы взяли. Что значит, что она изменялась или нет? Тут есть значение, мы говорим, когда
каких Q принимает значение ноль, ну допустим при нуле или при единице. Когда Q равно единицу,
у нас тоже есть значение ноль. Это в желтом прямоугольнике. Смотри, мы рассматриваем сейчас
синей прямоугольник и хотим ему сопоставить какое-то дизью. Смотрим, вот этот треугольник ему
соответствуют соответствующие поля из заголовки таблицы. На этих полях заголовки таблицы переменные
принимают какие-то значения. Вот мы выбираем те переменные, которые в соответствующих полях
заголовка таблицы не меняют свое значение. У нас такая только одна. Все, с этой штукой,
с нулями вторыми, вот у меня есть, им соответствует вот эта штучка, вот это и вот это. Какие переменные
тут не изменяются значения. Это P, это R. Тогда что я делаю? Остальное будет... Q у меня ноль. Нет,
Q у меня единица, поэтому я беру ее с отрицанием. Или что? R и с единицей я беру и тоже с отрицанием.
Мы ведь могли взять просто один квадратик. И тогда бы у нас ничего не менялось. Это бы не
повлияло? Да, вообще не повлияло. Там упрощать придется. Нет, не придется. Можно взять и один
квадратик, ну смотри, у тебя просто будет пыльник. Ну в чем разница? Если их объединить, то скобки
раскрыть придется, но то есть это чуть дольше. Нет, ну в общем да, я советую действительно брать
по максимуму квадратики, но по-моему у вас будет минимизация заключаться просто в том, чтобы у
вас было как можно меньше дизелинтов. Но конечно же да, если мы хотим прям действительно оптимизировать,
то лучше брать вот по максимуму брать покрытие. Здесь у нас есть более хорошее, вот такое,
поэтому я вам советую брать именно его. Давайте я его запишу оранжем. Как быстро понять, если внезапно
вы на контрольной забыли, нам брать отрицание или объединение. Отрицание или само переменную. Делается
следующим образом. Когда мы выбираем нули, мы делаем кнф. Почему мы делаем кнф? Потому что
конъюнция фиксирует ноль. Если хотя бы один из этих ноль, то значит все ноль. Мы хотим так
фиксировать все нули. Хорошо, если мы взяли кнф, то значит элементарно вот эти кусочки, это будут
дизюнты, то есть будет дизюнция. Теперь мы хотим что? Чтобы на выбранных нами значениях данная
функция принимала ноль, и при этом это будет объединение. Но когда она будет равняться нулю при
дизюнции... Извините, можно вопрос? Да. Почему мы решили те два нули покрыть типа желтым
прямоугольником? Ведь у нас получается, что один нули покрыт одновременно и, короче, и синим
квадратом и желтым прямоугольником. Почему мы не могли тот другой нуль просто желтым мелким
квадратиком в одну клетку покрыть? То есть в чем логика? Это у кеш у нас типа один нуль
покрывается одновременно и так и так? Да. Как я говорил, покрытие могут залазить друг на друга.
Это вообще без проблем. Серьезно? Да. Мы можем залазить друг на друга. Нам не надо пытаться делать
так, чтобы не налазить. Наоборот, оно будет налазить. Это вполне себе хорошо. Причем, чем больше мы берем,
тем меньше литералов идет. Потому что, как только ты расширяешь размер своего прямоугольника,
значит выкидываешь какую-то переменную из дизюнта или кондюнта. И это только лучше. А вот то,
что мы сейчас желтым цветом записали, это уже наш результат? Желтым цветом не совсем. Результатом
будет, мы возьмем кондюнцию этого добра и получим Q, кондюнция не P или не R. Все, вот это результат.
Есть возможность, пожалуйста, минутку потратить и еще раз рассказать не P и не R? Вкратце вообще,
вот как это получилось еще раз. Вот, давайте тогда для этого мы сразу попробуем решить номер.
Простите, можно точнее? А если бы мы взяли, сейчас скажу, и тот нулик только одной
клеточкой покрыли бы, то у нас что, получилось бы тоже самое, фактически ведь? Не совсем. Да-да-да,
получилось бы тоже самое, ведь у нас R не меняется и является единичкой, поэтому мы отрицаем P,
не меняется и является единичкой, поэтому тоже самое. А Q тоже не меняется, поэтому мы тоже Q берем.
А, да, и мы бы ее взяли тоже как отрицание единички, но потом бы мы типа убрали ее,
она бы сократилась бы. Ну, идейно, да. Поэтому проще сразу брать просто чуть больше квадратик.
То есть лучше брать квадратики больше, да? Да. Если есть возможность квадратик больше,
берем больше. Там вот, например, когда у нас, если будет с единичками, когда мы будем
минимизировать DNF, с DNF все налогично, только мы делаем с единицами. Можно вот сделать,
вот так вот как-нибудь, а можно просто взять два квадратика, вот так их пересечь, ну а прямоугольник.
Вот, у меня есть такая штука. Вот этот номер из контрольной. Давайте я воспользуюсь сайтом,
который мне построит таблицу с истинностью, потому что вычислить значение этой штуки, ну. А нам
надо будет на контрольной самим строить. Да. Правильно? Лично. Подождите, так это же
получилась несовершенная форма. Да, она, ну, смотри, первая задача совершенная, а потом нас
портит минимизировать. А как я говорил, что совершальная, она, как правило, не минимальная.
То есть строим минимальную просто типа для удобства, да? Да. Вот давайте я сейчас просто
построю таблицу с истинностью. Так, если строить таблицу с истинностью руками, очень
долго возможно есть способ упрощения формулы без таблицы с истинностью. Ну, давайте я расскажу,
как я делаю это на контрольной. Ладно, не дали мне никто делать. Если я внезапно ошибусь,
я не виноват. Тогда мы просто запишем правильную таблицу с истинностью и будем ей пользоваться.
В общем, с этим заданием, короче, внимательно, просто нужно правильно почитать значение. Поехали.
У нас, как я обычно делаю, в общем, у нас, как правило, функции, которые будут использоваться,
ну, это пропозициональные формулы, те функции, у них есть какая-то штука, которую они фиксируют.
Например, конъюнция, она фиксирует ноль, дизюнция фиксирует единицу. Сейчас, не, мне нужно не
фиксировать, как раз скажу. У них есть только один набор значений, на котором они принимают вот,
либо ноль единицы. Вот, например, конъюнция, она верна единице тогда и только тогда, когда вот единица.
Дизюнция, она ноль тогда и только тогда, когда оба нуля. Импликация это 1,0. Все, во всех
самых случаях она то. Поэтому, например, когда мы будем искать значения, вот у меня вверху есть
импликация. Так, у нас последнее действие, здесь это конъюнция. Сейчас, давайте это Дани Пальц делаю.
Вероятно, скоро мы сделаем перерыв, потому что у меня уже все. Надо попить хотя бы чего-то.
Вот, есть штука. Вот, у меня наверху вот эта штука. Соответственно, теперь что мы делаем? Мы
смотрим. Вот, она будет единицей только тогда, когда вот обе штуки единицы. Смотрим, когда это единица.
Вот, она будет единицей только тогда. Соответственно, если хотя бы одна из компонентов ноль, то везде ноль.
Поэтому, давайте посмотрим, когда это ноль. Это ноль тогда и только тогда. Можно просто
надки скобочек. Мне кажется, тут все хорошо. Там лишняя скобка получается. Все, понял.
Скобки покрасили, стало все понятно. В общем, если хотя бы за этих одна штука ноль, то все ноль.
Давайте смотреть, когда вот это за ноль. Это за ноль, когда это единица, это ноль. То есть,
P должно равняться нолью, а R тоже должно равняться нолью. Поехали, смотрим на всех таких наборах,
ставим ноль. Сразу, мы уже сразу можем все эти наборы не рассмотреть. Ноль, ну все.
Во всех остальных случаях правая скобка единицы, и она не влияет вообще никакого смысла. Смотрим,
теперь, когда это ноль. Это ноль, когда вот эта единица, это ноль. Когда права ноль? Если Q 0,
в первый случай, когда Q равняется нулю, если Q равняется нулю, то это единица, то тогда здесь
P и R. То есть, если Q равняется нулю, а P и R равняются единице, то все ноль. Но когда это? Это когда
какая-то из этих штук должна быть единица. Ну давайте, если вот здесь вот единица, это ноль,
Q 0, P единица, это ноль, ноль. Все. Мы говорим то, что у нас должно быть сначала единица,
потом ноль, а потом смотрим куда. Потом смотрим на первую скобку и говорим, что типа здесь должно
быть оба нуля, да? То есть, R 0 и при этом... Я что сделал? Здесь я сказал, что если это ноль,
то значит вот это все ноль и это ноль. Теперь я смотрю направо. Вот это ноль, когда канинца
равняется нулю. Когда хотя бы один из аргументов это ноль. Нет, да, окей. Да, все. Тогда я смотрю,
первый случай у меня Q равняется нулю, тогда здесь по-любому ноль. Здесь что? Q равняется
единице. Эта штука простится в PLR. Тогда, если PLR равняется единице, а Q равняется нулю,
то это вся скобка за единицы. То есть, вся скобка за нулица и будет. То есть, когда все перенули.
Когда Q 0, P 0 и R 0. Только тогда ноль. Нет. Когда PLR... А, да-да-да. То есть, когда Q 0,
а PLR единичка. Да. Все, правильно. Ну, вот я смотрю, у меня таких скобок было... Сейчас здесь скажу. У меня таких
штук было, когда Q равняется нулю, три позиции свободных. Вот я смотрю, первая позиция. У меня PLR
равняется единице, равняется... Вот мне, например, есть Q 0 единицы. Здесь у меня PLR равняется единице,
поэтому здесь просто всё. Ой-ой-ой-ой. Я просто здесь нули, конечно же. Второй случай, что когда у меня R или не
P равняется нулю. Когда это равняется нулю? Когда R единица, а P тоже единица. Если R и P единица,
то здесь R единица P единица. Мне нужно получить в сумме всю этой елки-полки единица. Это всё выражение
упрощается до NICU. NICU должно равняться единице. Значит, Q равняется нулю. Тогда на наборе...
Мы получили, что у нас R единица и P единица, и тогда получается, что у нас, если там впереди,
получается тоже единица. А, да, впереди тоже единица, потому что R единица. Тогда не без разницы,
какой Q. Просто где R и P равняются по единице, я могу проставить нули. Нет, подождите. Где R и P единицы,
то вообще-то будет всё нас окей, потому что у нас справа получится единичка типа из NIR следует
P, то есть из 0 следует 1, это окей. А здесь... Сейчас, ну, здесь, подождите, здесь следа получится 0,
умножить на что-то, то есть 0, но 0 у нас будет следовать, а, из единицы, да, всё прекрасно,
где R и P единицы, получается всё окей. Да. Поэтому всё, мы зафиксировали все наборы, где 0,
значит, у всех остальных единицы. Можно, например, делать так, я обычно так делаю.
Можно прямо в лоб считать каждое выражение, объединять, так вот рисовать таблицу. Второй
способ более надёжный, если есть время, позвольте стим, если времени в обрез. Какой? Ну, то есть
прямо в лоб вычислять каждое выражение, то есть сначала мы там написали Q, посчитали вот здесь
всё, дальше сделали вот это вот, 1 или R, и так далее. Вот с каждой из этих, а потом всё,
ты сидишь, просто объединяешь. Да, у тебя вот такая длиннющая таблица, и в конце вы значение. Это
немножко долго, но зато более надёжно. В общем, как вычислять таблицу естественности? Ну, это уже
ваше дело. Тут чего-то прям такого экстрадинарного я не расскажу. Нас просят что? Нас просят построить
из кнф-сднф? Можно нет? Приведите, о, всё, смотрите, нас просят просто к наиболее коротким конъюнктивным,
дизюктивным, нормальным форматом. Всё, нам даже не нужно из кнф-сднф. Вот у меня есть такая штука.
Теперь у меня есть карта Karnaut. Поехали, рисуем карту Karnaut. Нет, ладно, нафиг тут.
Карту Karnaut для всей этой функции? Ну да, карта Karnaut у нас для функций.
Всё, и теперь поставляю значение. Поехали. Единец у меня только на наборах 0.1.1, 0.1.1 и на наборе
1.1.0. 1.1.0. Вот, везде остальных у нас 0. Теперь мы берём, как мы помним, покрываем как можно
большими квадратиками. Причём помним, что вот эти вот края, они у нас связаны. Чтоб построить минимальную
кнф? Чтоб построить минимальную кнф, да. Мы покрываем 0. Сейчас вы мне показали, как строить
минимальную кнф. Ну сейчас я покажу, аналогично просто мы покрываем 1. Вот, мы покрываем 0. Что я вижу?
Я вижу квадрат, например. У меня что квадрату соответствует? Какой у меня? Квадрату соответствует
дизюнд. У меня R поменяло значение на квадрате, P поменяло значение на квадрате, Q не поменяло,
соответственно здесь у меня будет Q. Теперь у меня ещё два нуля. Как мне их покрыть? Вот,
например, я 0 могу покрыть вот так. Поэтому что соответствует? У меня здесь сохранили значение
только переменной P и R. Они с нулём. Вот у меня теперь есть такая штука. Здесь у меня сохранили
значение тоже P и R, но они обе принимали значение 1, поэтому я беру с отрицанием.
Тогда в ответ я пишу Q и P или R и не P или R. Всё. Вот моя минимальная, кто там, кнф.
Что если я хочу теперь минимизовывать единицы? Я точно так же теперь покрываю единицы. Там,
по-моему, задание ещё нужно было обосновать правильность. Что это значит? Ну там обосновать
правильность. Там, наоборот, написано, что обосновывать правильность не требуется. Да,
потому что, по сути, обоснование правильности, ну, нужно доказать метод Karno. Сейчас. Там написано
вот так, смотрите. Не надо обосновать, что она самая короткая, но нужно обосновать, что она правильная.
Что это значит? Нужно показать, что данная вами формула действительно имеет, она действительно
принимает те значения, которые надо, что на соответствии. Сейчас, у нас было вообще в
прошлых годах такое? Вторую таблицу и сильности построить, что ли? Да, в прошлом году такого не было.
Доказать, что они самые короткие не нужно, но нужно обосновать правильность. Все обе правильные,
хотя бы одна самая короткая. Правильная формула, ну, во-первых, что значит обосновать правильное?
Первое, что у нас, что это КНФ. Ну, понятно, что действительно вот это вот, все это дизюнты,
это все значит КНФ. Первый пункт, что правильно. Все, мы доказали, что это КНФ. Конечно, это длинный
идиотизм звучит, никогда такого не было. Доказываем, что правильно. А что здесь можно еще доказать?
Ну, смотри, первое это, что у нас, это КНФ. Ну, это очевидно. Знаешь, что что-то правильное,
но в целом очевидно. А что значит доказать, что оно правильно? Ну, доказать, что, во-первых,
ты построил действительно КНФ, а второе, что у нас соответствует буллер-функции, то есть построить
таблицу естественности, например. Так мы таблицу естественности фактически уже построили,
но мы уже построили ее, да. Можно же просто перерисовать ее и сказать, что вот, как будто
все совпадает. Вот, это то, что как раз я хотел предложить. Смотри, вот первое дело, что ты пишешь
КНФ. Ну, смотрите, да. Все, подпадает. Подпадает под определение дезюнка. Тогда их конъюнцы-КНФ.
Все, второе. Встроим еще раз. Еще раз таблицу естественности. Ну, то есть, можно же написать,
что построим таблицу истинности для вот этой вот функции. Ну, смотри, для конъюнца тут вообще прям
просто считать вот здесь, что. Когда это занадлежит? Ладно, я понял. Извините, а что мы написали их,
вот эти значок, пара их, или что там написано, слово какое? Это конъюнцы. Первое слово перед их?
Тогда. А, тогда конъюнцы. Сейчас, подпадает под определение дезюнка. Ну, то есть. Ну, понятно,
что, да, окей. Ладно, понятно, хорошо. То есть, встроим еще раз таблицу естественности и говорим,
что она совпадает с изначальной. Да, тогда будет функция равной. Ну, а дальше можно сказать,
что да. А насколько корректно то, что там КНФ попадает под определение дезюнка? Дезюнка,
это же то, из чего состоит КНФ, это же не сама КНФ. Смотри, я, вот стрелочки, это вот эти штучки.
Эти штучки, это вот они по определению дезюнка. Это дезюнкты, да. Да, тогда их конъюнцы это КНФ.
Значит, не КНФ подпадает под определение дезюнка, а вот их и ее составляющие получается. Да,
вот они подпадают под определение дезюнка, тогда их конъюнцы это КНФ. Все, мы построили КНФ.
Дальше строим таблицу естественности и говорим какую-нибудь такую фразу, типа значение буревой
функ, соответствующей полученной КНФ совпадает с значениями буревой функции,
соответствующей исходной пропозициональной формуле, следовательно... Что это мне хотят,
задачи? Как формулироваться задачи? Видите, формулы к наиболее конъюнц... Значит, следовательно,
следовательно, это, это есть ее конъюнктивно нормальная форма.
Там что-нибудь типа такое, ну, я правда не совсем понимаю смысл. Давайте еще в чате спросим про это,
но звучит просто ну как тупая отписка, и второй раз мы построили, мы просто продублируем таблицу
естественности и написали тупую фразу. Смысл этого... Я попытаюсь в чате сказать что-то бред. Возможно,
будет шанс, что это убило. Потому что по-хорошему доказывать правильность, ну, докажите правильность
того, что метод Корно работает. Вот это будет, но это ну вообще не материал-контроль. Да, для ДНФ,
ну в данном случае у нас получилось все грустно, у нас только две единицы, поэтому ну возьмем просто
дизюнкты, что у нас единица, соответственно, мы хотим конъюнцию брать, и нам нужно будет брать
п, конъюнция q. Значит, теперь нам нужно превратить единицу, и тут п надо превратить единицу q и r.
Ну если всегда дизюнкты, это мин ДНФ. И все то же самое, вот эта вот тупая штука с доказательством правильности.
Очень быстро посчитали, я не успел понять, как так быстро. Как посчитать ДНФ? Ну смотри,
у меня два квадратика, я не смогу, ну квадратики это не смогу никак расширить, поэтому понятно,
что будет два квадратика. Соответственно, теперь мне нужно квадратиком сопоставить дизюнкты. Смотри,
я хочу единицу. А они не меняются, мы записываем те, которые не меняются, да? Да, для квадратиков это
всегда все переменные. А, все, понял. Мне нужно будет взять с конъюнцией, поэтому конъюнция единицы,
когда все единицы, соответственно, я хочу превратить значение всех функций в единицы, всех
переменных в единицы. Поэтому, в первом случае, r обратил инверсию, а в втором случае q променял
инверсию. А мы будем проходить доказательства работы карты Karno? Нет. Более того, карты Karno даже
на лекциях рассматриваться не будут, но при этом вы их будете, по сути. А какой метод предлагается
на лекциях? Ну да, довольно интересно просто, если карта Karno... Какой? На лекциях не проходится
минимизация. Просто вот, ну, хотелось бы понимать, на семинарах не дается ничего для минимизации? Ну,
вообще, по идее, на семинарах должно было быть, и на семинарах вроде бы должно было быть,
помнится я, тогда у меня семинары, мы там что-то говорили про карты Karno. Ну вот у нас ведет семинар
мусатов, да? Ничего подобного пока не было. Ну, значит, не повезло. Что тут сказать? Я не могу
отвечать за то, что происходит на семинарах у вас. Вот задача решается, смотрите, либо минимизация
на картами Karno, это такой более приятный способ, либо можно очертить бурю в куб и брать вот,
покрывать его. Кому это нравится, ну, хотите рисуйте куб, дальше идея вся та же, просто мы
нарисовали переменные, которые не меняется, им выписываем. Но на карты Karno чуть более приятно.
Почему это работает? Давайте я поищу доказательства, хотя вы можете сами обыскать, но я поищу,
я его приложу. Ну, мне кажется, кому интересно, тот найдет. Навряд где есть много людей,
которые пойду сейчас гуглить. Все. Так что, ну, то, что не проходился, он так задумано,
это не было и в прошлого году. Ну, то есть, на семинарах вроде бы он рассматривается,
на лекциях нет, конечно же. Ну, спойлер у вас будет еще у КТЧ, но у КТЧ будет вообще,
во втором смеси будут очень много тем, которые на лекциях не проходятся, они должны быть на
семинарах, если на семинарах их не прошли, то будет проблематично. Поэтому вот, там они, по-моему,
помечаются черными кружочками, поэтому, если их случайно на семинаре не проходите, нужно прямо,
семинаристы просить, что давайте остальное отложим, смотрим, а там нет их. С матлогом, ну, я развожу ручки.
Поэтому вот, ну, работаем метод карт Карнова, их используем. Теперь появилось еще,
ну, приписка. Ладно, это я себе отметил, я уточил, это прям надо. Про СКНФ, СДНФ есть важный факт.
А вот, кстати, вы сказали СДНФ, СКНФ, что нас там не просят СДНФ, СКНФ, то есть, может быть,
такое, что попросят СДНФ, СКНФ написать для функции? Да? Ну, нет, смотри, если появился такой
пробный вариант, то вас точно не попросят. Проблема в том, что, почему-то мне помнится,
что была задача, в которой нужно строить СКНФ, СДНФ. Возможно, это будет просто потом в других контролях,
поэтому, ну, пока, видимо, вам вообще это не надо строить. Про СКНФ, СДНФ есть важный факт,
что, например, что такое единица тождественная? Это есть А или А, можно так сказать. Ну, то есть,
она сведется к тому, что там будет дизюнция, отрицание чего-то с самим собой, поэтому для
тождественной штуки не существует СДНФ, для этой не существует СКНФ.
Сейчас скажу, или наоборот, тождественной единицы, сейчас тождественные единицы,
СДНФ. А, нет, как раз, да, наоборот, как раз. Вот, смотрите, здесь в СКНФ, почему не существует
СКНФ, то есть мы придем к дизюнту, в котором будут две переменные, одно и то же. А если мы рассматриваем это
в СДНФ, то, ну, смотрите, в конъюнте там и там, и там у нас используется одна переменная, и она будет, она ровно один раз.
Но, опять же, мы там смотрим, на самом деле нужно количество переменных там, ну, просто размножим их,
продублировав эту штуку, для... Теперь вот наступают номера другие, в общем, они более приятные.
Первый номер, это последний номер про пропозициональный, он будет учиться. Он последний, вот, прям явно связанный
с что-то с формальными языками. После этого мы уже от этого отойдем, мы будем что-то более логическое.
Давайте смотреть. Перефикс формулы phi является формулой, то он совпадает с phi. Ну, мы говорили, да, что собственного префикса.
Да. Поэтому это да. Это просто я я. Если суффикс phi является формулой, то он совпадает с phi. Тоже да. Нет? Нет.
Вот я, например, могу сделать так. У меня есть собственный суффикс, просто вот эта вот штука.
Не собственный, то есть? Да, не собственный, да. Если два различных подслова формулы phi
являются формулой, то они не пересекаются. А можно вопрос? Это вот второй пример, может быть.
Второй. Да, прекрасно. Мне нравится идея. Да, тоже самое получается. Ответ нет. Подождите, про пункт А вопрос.
Я предлагаю такую формулу, допустим, А или Б, и, например, ну, вот в скобках дальше, и там, допустим, С или D, например, тоже в скобках.
Мы берем префикс А или Б, он является формулой и он не совпадает.
Значит, я не понял, что такое пропозициональная формула. В пропозициональной формуле у нас всегда
должны быть навешаны скобки по екоперации. То есть нельзя просто взять и брать скобки. Про это помним.
Вот про пункт Б. Если бы там еще дополнительно было сказано, что нет отрицаний, то есть инверсий,
то тогда это же было бы правдой? Звучит, как что да. Это будет следовать из теории про скобочный ток.
Извините, можно вопрос? Что подразумевается под длиной формулы количества значков? То есть
каждый значок это плюс один? Да. Открывающая скобка это плюс один, да, изыгрывающая тоже.
Ну да, просто каждый символ это 1. Можно пункт В объяснить? Ну, смотри, два различных подслова.
Само слово есть под слово, его суффикс это тоже под слово. Вот посмотрим на предыдущий
пример. У нас есть вот, например, такая штука. Они оба являются формулами и пересекаются.
Это про пункт Г? Это про пункт В. А, я про пункт Г, кажется, придумал пример, когда это может быть.
Ну давай. Типа, ставим два знака отрицания, потом в скобочках А или Б, и потом еще или
С. Смотри. Нет, или С после скобочек. Да, и последнюю скобочку убрать. Какую скобочку? Нет,
убрать вообще последнюю скобочку. Да, ее нельзя. Можно. Брать последнюю скобочку сейчас. Ну да,
вот. Чего говорим тогда? У нас всего сколько? Раз, два, три, четыре, пять. Раз, два, три, четыре,
пять, шесть, семь, восемь, девять этих. Если мы уберем или С, то у нас получится семь
значков и формулы. А если мы уберем сначала два знака отрицания, то получится тоже формула,
в которой семь значков. Вот они пересекаются. Их пересечение это в скобочках А или Б.
Ну, по сути, да. Вот к этому примеру. Но вообще... Сейчас.
Сейчас еще раз. Давай, какие слова ты берешь? Ну, в смысле, я говорю... А второе? А второе
начинают скобочки там, где А в скобочках А и Б или С, да? А теперь внимание, почему твой
пример не является хорошим. У нас последний... У нас здесь должны быть тогда скобки. У нас
нельзя чтобы... У нас, короче, всегда мудрецеоперация требует, чтобы сверху навесили. Поэтому твой
пример не работает. Тогда, наверное, другое должно быть. А вот как раз его и нет, потому что...
Почему? Ну, смотри. У нас есть... У нас есть вообще как слова могут пересекаться. То есть у нас
слово может пересекаться. Как то, что один... Ну, короче, по общему префиксу-суфиксу, либо одно
вложено в другое. Понятно, что вложение быть не может, потому что различные слова и они одинаковые длины.
Тогда они, значит, пересекаются по префиксу-суфиксу. Тогда что получается?
У нас есть... У нас здесь итог какой? Вот мы сделаем слово. У нас здесь вот это всё формула. Соответственно,
давай сделать что? Здесь у нас был какой-то ноль, здесь снова ноль, здесь тоже должно стать относительно
этого ноль. Если вы начали с первого символа, мы пошли сюда, то здесь больше или равно нулём.
Причём может равняться нулю только если это поток каких-то отрицаний. Если здесь скобочный отток,
в первый случай больше нуля. Давай рассмотрим. Больше нуля. Тогда к концу здесь будет что-то,
что должно к нулю понизить. То есть, суммарно, на вот этом вот подслове у нас отрицательный скобочный
итог. А у нас теория про то, что скобочный итог всегда не отрицательный. Значит, не может быть
такого, что на этом моменте у нас больше нуля. Значит, здесь у нас могло идти только отрицание.
Хорошо. Вот у нас будут отрицания, тогда у нас...
Сейчас.
Если просто отрицание даже не является формулой. Ну, само по себе.
Ну, а дальше идёт что-то ещё. Тогда вот, что может произойти. Смотрим. У нас здесь ноль.
Здесь на вот этом вот подслове у нас могло повыситься и дальше обратно ушло в ноль. То есть, у нас появился
префикс во втором слове, на котором равняется нулю. Причём это не самон. Значит, это тоже всё отрицание.
А значит, тогда первая формула, это просто вот, она вся представлена каким-то отрицательным. Но это
же не пропозициональная формула, поэтому такого быть не может. Сейчас вопрос. То есть, как мы
рассуждали, мы сказали, что рассмотрим два таких пересекающихся отрезка. Говорим, что первое символ
первого слова, там должен быть скобочный итог. Почему ноль? Смотри. Чипа перед первым символом.
Там же может открываться скобка быть. Почему вы там ноль записали? Давай ещё раз. Вот у нас есть
какое-то слово. Да. А можете, пожалуйста, по клеточкам нарисовать, чтобы было понятно, в какой
клеточке, какой символ. Просто типа это до или после. Вот если по клеточкам, тогда ясно.
По каждой клеточке это каждый символ. Вот так будет ясно. Да, хорошо. Смотри, вот тут у меня слово
начинается, вот это слово заканчивается. Вот тут я поставлю сколько-то там символов, там промежутки.
Вот у меня первое слово будет как-нибудь идти вот так.
Слово, а второе слово будет идти как-нибудь вот так.
Так, второе слово. Так, давайте. Вот так вот я сделаю, что хоп-хоп. Знаешь, что здесь я снова
поставлю три точки и здесь вот так. Там вот что-то внутри. В общем, начинаем смотреть относительно
первого слова. Давай, молодец. Когда мы пришли сюда? Вот, когда мы пришли вот сюда, на эту
границу к этому слову. Ну, здесь понятно, что больше равно нуля. Вот на этом префикс
у нас больше равно нуля. Тогда что значит? Тогда у меня есть два варианта. Либо к этому моменту у нас
станет ну, либо больше нуля. Давай рассматриваем, если стало на вот этой вот клетке стало больше нуля.
Первый случай. Больше нуля. Тогда вот здесь что-то больше нуля. Хорошо. Значит, за оставшуюся штуку
у нас должно появиться отрицательное количество, чтобы сумме стало нулем.
Значит, здесь распределяется префикс с отрицательным. Да, тогда ясно. Окей, если равно нулю, значит,
что это значит? Если равно нулю, это все были отрицания. Сейчас, а не может быть такого, что это
еще одна формула типа? Нет, у нас же теорема про собственный префикс. У нас собственный префикс,
если ноль, то это только последовательности с инверсией. А можно такой пример, если у нас, допустим,
скобочках а, и, б, а, или, б, а потом еще и, или, б, то типа, и, а, мы должны еще скобочки навесить,
да, и получается, что префикс не может иметь, что префикс не может быть формным, потому что там
баланс будет положительный. Ну, сейчас, ну не совсем, смотри. В общем, здесь у нас
стал ноль, здесь у нас ноль. Здесь получается суммарный префикс на вот, суммарный скобочный
ток на вот этом вот префиксе второго слова, он ноль. А значит, это все последовательность из
отрицаний, потому что собственный префикс второго слова. Ага. А значит, все первое слово
это просто последовательности инверсии, а такого быть не может, потому что это непропозициональный
фондов. Да, понятно. А то есть, если у нас, например, стоит отрицание из скобочка, как у нас в примере
для второго пункта, мы не должны навешивать скобочки? Нет, у нас нет. На отрицание, если бы еще какая-нибудь скобочка была, то тогда пришлось бы. Ну, была бы не одна, а две, например. Нет.
Вот наш вопрос. Окей, спасибо. Поэтому, Г, все. Ну и пункт Д, спойлер, как правило, такие, ну, очень маленькая вероятность,
он будет выполнен. Как правило, Г просто вычекивает. И спойлер, здесь написано, выберите верные утверждения,
но может оказываться так, что нужно будет выбрать одно. Поэтому не пугайтесь, в случае чего. Но такое бывает очень редко.
Так, теперь следующий задание это стремит.
У нас напоминание, что такое sknf и sdnf, и теперь про них свойства. Если число переменных больше 1, то одна и та же формула не может быть
навременно sknf и sdnf. Вспоминаем, когда, может быть, sknf и sdnf, когда knf и dnf могут совпадать,
ну, когда они вот так вот выглядят. Когда просто вот. Дизюнцы, конюнцы, что-то там. Но если у нас больше одних, то у нас по-любому нельзя сделать конюнты и дизюнты,
которые будут содержать только одну переменную. Потому что это совершенное, они, значит, не должны содержать всю. Поэтому совпадение sknf и sdnf в таком случае невозможно.
С пунктом B, ну, с пунктом B, может быть, то есть sknf и sdnf. Извините, можно точнить?
Про случаи, когда они совпадают. Получается, у нас же там получилось, что они совпадают, сейчас скажу куда, что если каждый, ну, конкретно если мы говорим про, сейчас, секундочку.
Короче, когда это либо просто дизюнцы, либо конюнцы.
Ну, да.
Ну, смотри, в любом случае, либо если конюнцы, либо дизюнцы, то у нас будет так, что либо конюнт будет из одной переменной, либо дизюнты из одной переменной.
Но у нас чисто переменных больше одних. А у нас это совершенное. А значит, в каждом конюнте и дизюнте должно быть хотя бы две переменных.
Ну, просто вопрос в том, что если мы говорим, что у нас типа sknf и sdnf совпадают. Вы сказали, что, допустим, если мы смотрим на sknf, то говорим, что у нас sknf и sdnf совпадают.
Вот если вот у нас в sdnf просто получается, каждый конюнкта это одна переменная, но получается тогда на совершенную форму.
Потому что, ну, как такое может быть, что у нас, блин, одна переменная, только которая сколько-то раз повторяется, это бред какой-то.
Ну, да. Именно поэтому это неверно. То есть, совершенность, она нам всё попортила.
То есть, если мы говорим про совершенность, то вообще не может такого быть, что они совпадают когда-либо.
Возможно, когда число переменных равняется одному.
А, ну, окей. Тогда у нас получается просто одна переменная справа и слева.
Да. У нас просто какой-нибудь там проектор.
Блин, понятно.
Вот, sknf и sdnf совпадают. Ну, тут пример давайте просто сделаем.
А или б. У нас функция дизюнкция, это её совершенно конюктивно нормальная форма, при этом это её дизюнктивно нормальная форма.
Сейчас, секундочку. То есть, это одновременно...
А, ну да, получается, если мы рассмотрим это как sknf, то типа у нас...
Понятно, да. Это будет один конюнкт, а если как dnf, то мы увидим, что у нас тут типа один дизюнкт, да?
Два дизюнкта. Ой, два конюнкта. У нас конюнкты.
Да-да-да, но несовершенно.
У любой функции tn переменных есть ровно одна sknf точностью до пристановки порядка дизюнтов и литералов.
Да.
Скнф только одна.
А теперь вспоминаем важное уточнение про sknf и dnf. У нас есть тождественная единица, тождественная ноль.
Вот, например, тождественную единицу для двух переменных у тебя не будет. Совершенно конюктивно нормальная форма.
Сейчас, знаете, можно еще раз, а почему так получается, если у меня тождественная истина для двух переменных, когда такое может быть вообще быть?
Когда легко, смотри.
Что это за функция тогда будет?
Это функция тождественной единицы от двух аргументов.
Сейчас. То есть у нас у нее не может быть sknf, потому что sknf мы там берем везде, где у нас вообще-то единички нет, поэтому...
Ну, грубо говоря.
Сейчас. С sknf мы конъектируем все возможные...
А, нолики. Да-да-да, нолики. А ноликов нет.
А что такое-то у меня? Экран гастит?
А, короче, для тождественной истины нету ноликов, поэтому мы типа не можем строить sknf, а для тождественной лжи нету единичек, поэтому не можем строить н道личку.
Наоборот, для тождественной истины нету ноликов, поэтому не можем строить krun封gre, а для тождественной лжи нету единичек, поэтому не можем строить dnf.
Но только замечания не просто connection krun, а sknf2, sknf2 иwhe.
Так, подождите, knf и dnf просто тоже мы не можем построить.
Можем. Это единственные единицы.
Да, как?
И knf и dnf, вот.
Ааа, блин, ну понятно, да-да-да, всё, совершенно не можем.
Просто мы не сможем сделать всё совершенно.
Хорошо, если функции нет с knf, то у неё есть с dnf.
Но если нет с knf, то скорее всего, когда мы строили таблицитность, у нас нигде не было нулей.
Ну значит у неё где-то будет единица, а значит мы сможем построить из dnf.
Да, конечно.
Ну и это, ну, тупая штучка.
Хорошо.
Номер 8.
А, это кажется корнояр, понял, что мы сегодня так делали.
Вот, нам нужно понять тавтологию выполнимой противоречия.
Здесь, как правило, ну, короче, здесь мы пользуемся тем методом, который я сказал.
То есть у нас есть какая-то, есть у всех этих функций особенность, что есть набор значений,
причём единственный, которым она там принимает тогда и только тогда единицу или ноль.
Вот, например, импликация будет принимать ноль тогда и только тогда,
когда посылка единицы заключение ноль.
То есть это всё единица, это ноль.
Смотрим сюда, здесь импликация снова ноль.
Значит, теперь здесь единица, здесь ноль.
Справа ноль.
Значит, П равняется единице, Р равняется ноль.
Мы хотим...
Скажите, то есть мы рассматриваем просто вариант, когда у нас получается ноль?
Да.
Он сверху, он возможен только в одном случае.
Вот мы его хотим посмотреть, возможен ли он.
Извините, можно точить, а противоречие это значит, когда всегда ноль?
Противоречие, когда всегда ноль, да.
Так, нам теперь мы хотим Q получить...
Мы хотим с левой получить единицу.
Для этого Q нам придётся сделать единицы.
Смотрим, что получилось в А, получилось ли там единица.
Из Q следует R, это ноль, из единицы следует ноль, это ноль.
У нас не получилось единица, соответственно, получить ноль по всей формуле мы не можем.
Значит, у нас всегда будет единица.
Да, это вторая.
Со второй штукой.
Аналогично, это всё должно дать...
Вот это должно выдать единицу, чтобы это стало нулём, это должно стать нулём.
Тогда это нулём, это единица.
Если это ноль, то 1, 0.
Q это 1, 1.
Тогда 1, 1, 0.
Проверяем, что всё хорошо.
У нас единичка изначально не получилась.
Из единицы следует ноль, это ноль.
Да, всё. Это тоже тавтология.
Третий номер.
Поехали.
Конъюнция.
Теперь для неё, когда она равняется нолью?
Когда всё равняется единице?
Когда всё равняется единице?
То есть вот это всё должно обратиться единице, это всё должно обратиться единице.
Ну, очевидно, что такое возможно.
Сейчас скажу.
Вот здесь вот сделаем единицу.
Тогда это всё станет с левой единицы.
Здесь сделаем ну, допустим, q0.
Тогда всё станет единицей, всё даст единицу.
Но в целом надо было понять,
что это типа...
Это sknf.
Причём sknf...
А, сейчас. Если это sknf, то это понятно, что это уже не...
Это sknf.
Здесь только два дизюнта.
Значит, у нас только два набора в таблице есть инстинкционированные.
Все остальные мы можем как-то менять.
А значит, это не ноль, не единица.
Поэтому это вот так.
Вот.
Теперь у нас всё немножко интереснее стало.
У нас теперь что-то похожее на минимальность.
sknf.
Не r.
Когда у нас всё равняется единице.
Но когда r равняется, получается ноль.
Хорошо.
И теперь вот эта скобка должна стать единицей.
Она станет единицей, когда q станет 0.
Это 0.
Тогда p должно стать тоже 0.
Смотрим.
0, 0, 0. Это 0.
Значит, даже если мы бы захотели поставить единицу,
мы всё равно станем 0.
Значит, это всегда противоречие.
Ну и последнее, как было с импликациями.
Это единица, это 0.
Значит, это единица, это 0.
p 0. То есть это простится просто.
Да, q следует r.
Должно равняться единице.
При этом r следует не q.
Тоже должно равняться единице.
Ну давайте посмотрим, что.
Если сначала мы хотим обратить в 0.
Да, вот мы сейчас хотим обратить в 0.
Как мы это можем делать?
Мы единицу давайте r сделаем 0.
Ой, да?
0.
Тогда это 0.
Тогда q нам тоже нужно будет сделать 0.
Всё. Мы обратили в единицу.
Мы нашли, когда у нас
вся функция обратится в 0.
Может она обратится в единицу?
Когда просто левая часть
равняется 0,
для этого p или q
должны
из них должно быть
0 следует r.
Хотим просто сделать это 0.
Когда из 0 следует хоть что-то,
это всегда единица.
Значит, r должно стать 0.
Это единица. Ну давайте я сделаю
p 1 1 2.
Набор не ждет выполняющей.
Всё.
Всё.
Вот.
Номер 9.
Номер 9
чисто на то, чтобы
помнить определение.
Если вы внезапно
забыли там про
штрихшефера стрелку пирса,
ну не судьба.
Берём делаем что?
Просто чертим таблицу истинности.
Давайте конъюнция.
Конъюнция у нас была какая?
0 0 1 1 0 1 0 1
Конъюнция у нас была
0 0 0 1
Дальше.
Дизъюнция.
0 0 0 1 1
1 0 1 0 1
Есть какой-нибудь способ быстрее сделать?
То есть, например, там, если додумать,
что у нас есть
функции 10, мы же не будем их все
делать.
Способ быстрее?
Я не знаю.
Просто чертим таблицу
быстро.
Всё. Отлично. Спасибо.
Способ быстрее вообще есть,
если ты будешь помнить, там, например,
умножение, там, минимум,
это всё. Конъюнция, там.
Это надо помнить.
Это уже сложно.
Да.
Это уже сложно.
Всё.
Только практикой помнись. Здесь как
1 0 1 0. Дальше
минимум.
Ну и плюс, там, могут дать функцию,
там, типа
A плюс B по модулю 5
да умножить на 3, потом взять модуль
по 2. Ну, такую функцию,
естественно, ты не запомнишь, тебе нужно вот просчитать
две такой сутики.
И такое было в прошлом году,
поэтому просто будьте готовы.
Инкликация
P следует Q.
Ой, минимум.
Извините, так что мы просто берём каждую функцию,
встроим для неё таблицу истины, потом смотрим,
есть ли среди них одинаковые таблицы истины.
Да.
В этом всё задача.
Минимум
максимум
умножение.
Задача меры халявная,
это просто балл, который must have.
Здесь единственный способ не получить балл,
как я в своё время это сделал.
Вы просто неправильно
прочитаете условия по невнимательности.
Всё. Других шансов нет.
Меньше равно, но
это верно, верно,
неверно, верно.
Всё, теперь разбиваем по группы.
Поехали.
Конъюнция, минимум,
умножение будут в одной группе,
дизъюнция, максимум в другой группе,
импликация,
всё равно в третью, всё.
Один, два, три.
Всё, а что требует задача?
Покажите разбиение
на группы одинаковых.
А, всё.
Десятая, она уже смысловая.
Могут быть разные варианты,
остальные.
Как решать
эту задачу?
Ну, короче,
как её делать?
Для начала мы чертим
таблицу истинности.
Следующую.
Она должна была быть
типа вниз.
Но
я её транспонирую, чтобы
проще умещать
на странице,
не листать туда-сюда.
Извините, можно точнить?
Можете немножко вверх прокручить,
чтобы условия увидеть?
Сколько существует
негавиолетных формулат?
Таких, что формулы
одновременно
являются тавтологиями.
Нужно, в принципе,
и про себя читать.
В общем, поехали чертим таблицу.
То есть, там, по-моему,
в прошлых годах я делал так,
что сначала таблица там была
А, ПКР,
но сейчас я попробовал таблицу ПКРа
и понял, что она более приятная,
понятная и хорошая.
Вот у нас есть две тавтологии.
Вот есть первая, вот есть вторая.
А в чём вопрос заключается?
Что значит негавиолетная формула А?
Ну,
ну,
ну,
а каковая негавиолетная формула А?
Помнить, мы говорили
квалентные формулы,
которые
задают
одинаковые более функции,
а это некоторые
формулы от переменных ПКР.
У нас
просто сколько таких формул
некавиолетных будет?
Задача чиста на
чтобы заполнить алгоритм ее решений. Извините, можно точнить? Диаформы считаются
эквивалентными, если у них для одного, каждому набору значений
соответствует одно и то же значение, да? Точнее, каждому набору переменных. Да, и значения на всех
наборах переменных совпадают. Короче, таблица истинности одинаковая, понятно? Да. В общем, рисуем
таблице истинности для этого добра. Давайте, чтобы не тратить наше время, я попытаюсь...
Будем надеяться, что... Я вроде проверял по онлайн-калькулятору, но если я не так,
ну, простите, это значит просто поменять условия. Смысл я сейчас расскажу.
Это первая, это вторая. Вот, короче, это вот соответственно первая от автологии, это вторая.
Дальше мы дополнительно можем что сделать? Мы можем нашу табличку разбить на... Вот выделить колонки
вот там. Что произошло, когда я разделил на такие вот колонки? Извините, можно просто... А нам
говорят, нужно, чтобы одновременно f1 и f2 были автологиями, тогда значений на уликах вообще не
должно быть. Вот сейчас мы этим будем заниматься. Короче, вот я разбил на под колонки. В чем смысл этих
под колонок? На этих колонок внутри колонки изменяется только значение переменной a. PQR у них
одинаково. Тогда мне теперь нужно будет вот внизу выбрать то значение a так, чтобы обе формулы
давали единицу. Вот, например, здесь я могу выбрать значение только 0, потому что если я выберу a1,
то у меня одна не обратится в автологию. Соответственно, здесь я выбираю только единицу,
здесь я выбираю только 0, здесь я выбираю только единицу, здесь я только 0, здесь я только единицу,
здесь я только единицу. И у меня осталась одна свободная. Тогда количество вариантов неквариентных
a будет ровно столько, сколько вот позиций я могу выбрать. Я могу что? Я могу выбрать. Даже не так
и скажу. В общем, у меня вот есть большие такие прямокольники. У меня вот есть набор на трех нулях,
и там есть два варианта. Соответственно, я 2 в степени 1 равняется 2. У меня есть два варианта.
Если бы у меня, например, вот здесь был бы один и здесь был бы один. У меня еще на выбор было вот
этот вот прямокольничек, вот этот. Соответственно, всего тогда у меня было вариантов 2 в степени 3 равняется 8.
Дальше же нас, все вернули как есть. Дальше нас просят, если существует, укажите количество,
проведите хотя бы один пример. Как привести пример? Мы берем теперь стом таблицу истинности
PQR, а здесь уже a будет как функция. Здесь a. Смотрите, в каких-то мы уже зафиксировали
переменные. Вот мы берем то, что зафиксировали, то и проставляем. Ну и дальше мне просто нужно
выбрать какое-то значение на пустых. Давайте я выберу 1, чтобы было меньше 0. И теперь я могу построить
формулу A, привести пример. Какой пример приведу? Я построю KNF по этой штуке. Минимизировать там
упрощать мне не надо, мне нужно просто привести пример. Поэтому что я делаю? Я беру P или Q или не R,
конъюнция P или не Q или не R, конъюнция, конъюнция не P или Q или не R. Все, вот пример такой. И ответ 2. Когда
может не быть таких? Когда у меня будет такой набор, что обе штуки примут значение 0.
Вот и как доказать, что не будет? Вот мы говорим, что на наборе переменных PQR, вот видите он здесь
одинаковый. Вот на этом наборе обе функции обнуляются, а значит вне зависимости они обе
обнуляются вне зависимости от значения A, хотя бы одна из этих функций обнулиться на наборе
переменных PQR равном 1.0. И перевели таблету сесленности, показали, что это действительно так,
все. Это доказать того, что такого быть не может. Это в целом очень легко, но и в другом случае,
когда сколько их тоже легко. А упрощать эту функцию надо или нет? Нет, тебе надо просто привести пример.
Кстати, спойлер. Обратите внимание на то, что 2 в степени что-то нужно правильно посчитать,
потому что у меня было 2 в степени 3 равняется 16, у меня не за очки, на задачу. А может объяснить,
какую последнюю функцию построили? Ну смотри, у меня здесь уже на какие-то наборы значения PQR
значение A выбрано. Мы зафиксировали так, чтобы это обратилось все в единицу всегда. Здесь единица будет,
здесь единица, здесь единица, здесь единица, здесь единица, здесь единица, здесь единица. Да вот,
мы запретили принимать нули, по сути. Тогда я беру вот эти все наборы, я их записал. Вот прям так,
я их все записал. У меня остались не заполненные клетки. Эти не заполненные клетки есть варианты того,
какие значения A может принимать. Ну я выбираю произвольное, которое я хочу. Я вот хочу построить
DNF и мне будет проще, если я сделаю, ой, я хочу построить KNF, и мне будет проще, если не будет нули.
Я беру, ставлю сюда единицу. И теперь просто я беру, выписываю KNF.
Спасибо.
11 мы разобрали. Давайте, если есть какие-то вопросы, сейчас их обсудим. В конце остался номер.
Промногочленжи Галкина. Что вы сейчас, напишите многочленжи Галкина, задающий ту же функцию,
что это форум. Как строить многочленжи Галкина? Ну называют, сейчас, спросим. Ответа недостаточно,
нужно объяснить, как он получен. Можно использовать любым известным вам методом, даже если вы не
имеете доказывать его коэксперимент. Как делать? Мы берем пользу всем методом треугольника Паскаля.
Вот, например, для этих форумов. Треугольник Паскаля. Ну что? Берем, выписываем, как наука,
тогда я рассказывал. Берем по модулю два склада соседние. Все. А теперь берем соответствующие
мономы. Берем сначала единичку. Вот эта единичка. Это у нас R, а в конце у нас PQR. Тогда ответ
1 XOR. R XOR PQR. Называется метод треугольника Паскаля. Вы не могли бы объяснить,
как он работает и как отсюда мы получаем этот? Просто у меня не было, с честным прошлым семинарием,
я не знаю. Ну давай еще раз объясню. В общем, у нас есть таблица истинности. Первая строчка мы
всегда сопоставляем моном единицу. Всегда просто, потому что нельзя набрать перемены.
Во всех остальных строчках мы сопоставляем моном, где, моном из переменных, те, моном из тех
переменных, которые принимают значение единицу. То есть, например, здесь R принимает единицу,
поэтому это R, здесь только Q, поэтому Q, здесь единица принимает QR. Здесь только P, здесь PR,
здесь PQ, здесь PQR. Все. Дальше мы берем, транспанируем вектор функции, вектор значений функции,
получаем строку и начинаем с соседней чисто XOR-ить и получать следующую строку длины на один меньше.
И вот так вот мы берем каждый раз XOR-им соседов. На XOR-е... Сейчас, секундочку, сейчас, извините,
можно просто, можете еще раз спробовать вверх, я хочу понять там, где... Почему мы каждой вот этой
строчке, тут типа R, сейчас, секундочку, буквально здесь единичка, а почему единичка? Потому что,
почему это единичка? Потому что так в таблице истинности устроено. Сейчас, а, все, я понял. Да,
просто у нас тут так в таблице истински построено, так она, потому что так она выглядит. Теперь мы
берем, так делаем, все. Тогда что? Мы нахурили, а теперь мы берем, смотрим на самый левый ряд.
Везде, где стоят единицы, мы берем следующие эти маномы, то есть берем первый, второй, последний,
это 1, R, P, Q, R. И все, просто соединяем с значками XOR. Сейчас, секундочку, 1, R, P, Q, R. А, я понял,
сейчас, то есть я понял, что мы каждый этой сопоставляем букву соответствующим тем,
как они идут тут в порядке, да? Окей. И там, где единички, мы умножаем на соответствующие произведения.
Ну, это есть много членов для Галкина, да? Да. А почему это работает? А это домашка. Это кому-то...
Сейчас, это... Это будет... Кому-то попадется домашняя задача, в которой нужно бы доказать то,
что вот это работает, это он работает. А, ну, что мы в итоге получили, это мы для чего делаем?
Это задача последняя. Ну, то есть там, что поплосят, выберите какую-то там из всех формул и постойте
для нее поляном Жигалкина. Не, мы в прошлый раз для чего-то другого же это делали. То есть это не
просто построить поляном Жигалкина, он для чего-то же используется. Ну, в данной задачи мы просто
хотим просто поляном Жигалкина. В прошлый раз мы это использовали для решения задач по теории
множества. Где он используется? Ну, с поляном Жигалкина... Почему он хороший? С ним удобнее
работать, если у вас какие-то учисления были. Плюс им удобно, например, доказывать, ну, опять же,
всякие теоретико-множественные факты, типа вложения. Как его доказывать? Ну, что такое вложение?
Попробуйте посмотреть, какой функции соответствует то, что A вложено в B. Спойлер там будет связан
с импликацией. Тогда просто строим поляном Жигалкина для импликации, вместо переменных
подставляем выражение, которое хотим, и проверяем, когда это равняется единице. Если это действительно
поучиниться, то все доказали. Если нет, то, ну, значит, неверно. Извините. Извините, а еще что-нибудь
будет сейчас? Нет. Извините, можно просто... Насчет разбора контроля на работу, просто он есть или нет?
Я выкладывал. А, да, то есть... А, я имею в виду, был разбор в плане, как сейчас? Ну, то есть,
когда все собирались в этом встречу и разбирали вместе, или не было? Нет, я просто выложил решение.
А можно будет, если что, вам задать вопрос по решению? Пиши прямо в чат, я отвечу. А, чат, хорошо. Там,
я, кстати, посмотрел, там есть очи пятка. Где-то, где-то это будет. А когда оценки будут, не скажете?
У вас же табличка есть, но в табличке... Хотя у меня нет еще оценок. Ну, вы ожидаете. А, как правило,
оценки будут появляться перед контролем. Ну, то есть, это будет в воскресенье. Короче, скорее
всего, с понедельника ожидаете появление контроля. С понедельника, который предшествует контролем на
той же неделе. За пару дней, короче. Возможно, есть семинаристы, которые появляются вообще в тот же
день перед контролем. У вас может быть так, чтобы ваши результаты появятся. У нас появлялись даже за
час до самой контроли. Извините, а метод треугольника Паскаля надо доказывать? Нет. У вас же формулировка
задачка, что просто только ответа не достаточно. Нужно объяснить, как он получен. Получен метод
треугольника Паскаля, его пишете. Доказывать, даже если вы не умеете доказывать поверхность.
Мы говорим, как метод треугольника Паскаля. Пожалуйста, рисуем сам треугольник Паскаля. То есть, вот
прямо его построили, показали, что написали эти мономчики, что этих выбрали. Только и его зачистить.
На сегодня все, да? Да. Если есть вопросы, я отвечу. Спасибо большое. А ссылка на разбор, она в канале есть, да?
Разбор контрольный. Там файл, да, есть, плюс я его приложу туда, где будет решение, потому что это контрольный второй и где будет.
Хорошо, спасибо. Все будет там же, где вот и первое просто. А можете, пожалуйста, еще раз кратко
проговорить, как вот седьмой номер решать, основные идеи? Седьмой. В общем, про седьмой нужно помнить,
что если у нас, что у нас СКНФ, СДНФ не будет для, скажу, СКНФ, СДНФ не, сейчас, я копью. Не существует
СКНФ, СДНФ, если переменных больше единицы, для тождественной единицы, тождественного нуля. Эти мы вот пользовались,
в частности, для использования вот АИД. Здесь вот мы смотрели, что вот, да, нет, вруб, пользовались в пункте В. Дальше, что мы
пользуемся? Мы пользуемся, когда ДНФ и КНФ могут равняться. Могут они равняться тогда и только тогда, когда они, по сути,
присоединяются либо к просто дизюнцию каких-то ветералов, либо конюнцию каких-то ветералов. Но в таком случае, при переменах больше одной, это будет уже несовершенном.
Дальше, мы пользовались тем, что вот метод, который по сравнению по таблице истинности, он строит именно СКНФ, СДНФ. Поэтому, если мы
не используем СКНФ, то, значит, там везде были эти нули, потому что, если хоть где-то был бы ноль, то мы смогли бы поставить, ой, СКНФ, нигде не было нулей, то есть, везде стояли единицы.
Но если бы был где-то ноль, то мы смогли бы построить СКНФ этим методом. Значит, везде стояли единицы. Если везде стояли единицы, то мы можем построить СДНФ
вот этим вот обычным методом. Всё. То есть, надо помнить, факт про единицу, тождественную единицу, тождественную ноль, что у них может не быть СКНФ, СДНФ, по-моему, у них в принципе не будет, да, у них в принципе не будет.
Второй факт, что крылья совпадают с СКНФ, СДНФ. И третий факт про то, как мы строим СКНФ, СДНФ. Под обицеизвестием.
Спасибо.
Не за что.
Варианты прошлых лет там я подправлю под то, что я по-новому прочитал, и я выложу. Будет, вероятно, где-нибудь понятельник мне раньше. То есть, завтра не будет. Пиши.
Видео. Видео как зальют.
Давайте, если есть какие-то вопросы, ещё я готов ответить. Если нет, то нет, всё. Есть, но тех усатого.
Ну, где его найти? Я в чате этого... Телеграма, в чате Матлока, я туда его...
Ребят, спасибо за бокс-семинар.
Не за что.
Всего доброго, до свидания.
Спасибо, до свидания.
Пока-пока.
