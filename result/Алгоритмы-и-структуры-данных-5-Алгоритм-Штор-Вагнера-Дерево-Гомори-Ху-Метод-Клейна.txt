Значит, что же такое МинКост, значит, о чём у нас разговор.
Ну, разговор у нас, как всегда, о том, ну, то есть мы снова
будем, у нас снова будет сеть, у нас снова будет поток,
но теперь маленькая фишечка, то есть теперь у нас поток
будет чего-то стоить.
То есть раньше мы как жили, раньше у нас есть какая-то
сеть, то есть у нас есть какие-то трубы, по которым
мы каким-то образом пускаем воду, то есть про каждую
трубу просто известно, сколько воды в единицу времени мы
можем пускать.
Вот так у нас всегда было.
Надо пустить из острока в сток, ну, там вот что-нибудь
такое.
Ну а теперь у нас есть маленькие, маленькие новости.
Теперь, ну вот, у нас оказывается, что мы должны не просто
пускать, а ещё и за каждую единицу потока, текущего
по трубе единицу времени, мы будем платить.
Причём плата зависит от трубы, то есть скажем так,
вот эта труба, например, дорогая, то есть здесь будет
единиц, здесь стоимость подешевшая, здесь 5, здесь
допустим ещё дешевле 3, а здесь прям супердорогая,
вот сюда 57, вот, а в этой трубе минус 57, да, стоимость
бывает отрицательная, то есть по принципу я труба,
я хочу, чтобы по мне текла вода, я готов за это доплачивать.
Вот это называется, вот, вполне, ну, вот это, собственно,
тоже вполне нормально, а эта труба ноль, вот, то
есть это такая вот нормальная такая дифферентная труба,
вот, вот.
Теперь у нас возникает такая естественная задача,
ну, вот, то есть надо найти всё ещё максимальный поток,
ну, вот, от СДТ, то есть пускать столько воды, сколько
возможно, но из всех потоков надо выбрать поток минимальной
стоимости, поэтому задача так называется, максимальный
поток минимальной стоимости, вот, но, на самом деле, как
это ни странно, решать мы будем немножко другую задачу.
Никогда такого не было.
Ну да, и вот опять, истинно так, вот, задача, ну, вот,
но на самом деле очень на неё похожа, задача будет
называться, поиск циркуляции минимальной стоимости.
Ну, здесь, видимо, стоит вести официальное определение,
то есть циркуляция там в сети, это поток величины
0, ну, у нас скорее нет, хоть, конечно, ну, да, можно там
ещё, там можно там ещё всякие это что-то требовать, чтобы
там по каждой трубе сколько-то текло, но вообще официально
определение, но это уже такие модификации.
Основное определение такое, значит, циркуляция, значит,
Заметьте, что если есть циркуляция с отрицательной ценой, то это очень хорошо.
Ну да, да, у нас, да, более того, на самом деле, только если есть отрицательные ребра
и вообще отрицательные циклы отрицательной стоимости,
то у нас вообще имеет смысл такой рассматривать, потому
что задача, да, на сеть найти циркуляцию хоть какую-нибудь,
она тривиальна, да, потому что есть такая циркуляция,
когда не по какой трубе ничего не течёт.
Это ценой.
Но оказывается, то есть как бы ничего ниоткуда не вытекает
и ничего никуда не втекает.
Но бывает, существуют более нетривиальные циркуляции.
Вот, то есть мы уже с вами изучали, то есть, например,
там вода может течь, вот просто мы тут можем запустить
единицу потока по какому-нибудь циклу, вот, например, вот
такого.
И более того, мы за это получим стоимость минус 54.
Обратите внимание, да?
То есть это, оказывается, выгодно.
То есть, да.
Более чем выгодно и даже похоже на 4.
Ну вот.
Нет, потому что у нас минус бесконечность цена.
Нет, у нас проблема в том, что...
А, да, да.
Нет, у нас способность бесконечна.
Всё.
Нет.
То есть, как бы, да.
То есть у нас, конечно, не выполняется основная функция,
то есть мы не перегоняем воду из точки С в точку Т,
но какую-то работу из сотрудников труб мы обеспечиваем.
И более того, оказывается, это даже выгодно.
Вот.
Нет, ну а что?
Ну, в принципе, нормально, потому что вообще сколько
существует работ вообще из-за того, чтобы что там
какие-то спонсоры готовы за неё платить.
Вот какой работе, как ни странно, даже участие в чемпионате
России по мини-футболу относится даже.
Ну, я не знаю, может...
Ну, то есть, может, у них там как-то построено, что
они там как-то зарабатывают на этих трансляциях, но
как-то...
Что-то у меня есть подозрение, что там этот чемпионат
существует только за счёт того, что есть конкретные
компании, которые как бы...
Ну, от которых просто нравится этот вид спорта.
Вот.
Хотя, хотя, впрочем, я здесь не копал.
Мне кажется, трансляция.
Ну, да, только внимание...
Ну, да, только, знаешь, это отдельная песня потом,
сколько зрителей на это ходят и где, простите, трансляции.
На каких очень-очень-очень глубоко кабельных каналах.
Ну, вот они проходят ещё.
Так что тут ещё такой момент.
Ну, хотя, не знаю, то есть, наверное, как-то это явно
поддерживается, учитывая, что как бы уровень мини-футбола
в России там вполне себе соответствует мировому
на самом деле.
У нас всё кроме футбола в мире.
Да?
Ну, нет, нет, биатлон у нас ещё есть.
Так, неважно.
Вот.
Ну, да, да, да.
Ну, пляжный, ну, пляжный футбол вообще, да.
Да, сборная России – действующий чемпион мира по пляжному футболу.
Хотя в России нет ни пляжей, ни футбола.
Да, мы помним это, да.
Вот.
В общем, самое страшное, что это шутка из КВН 2005,
там, какого-то лохматого года.
И эктуально до сих пор.
Ну, вот да.
Но единственная разница, что с тех пор сборная Россия
ещё раз стала чемпионом мира.
Ну, вот.
Но, видимо, принципиально ничего не поменялось, да.
Вот.
Ладно.
И так вот.
И так циркуляция.
Итак, у нас есть циркуляция.
Значит, циркуляция, поток величины 0.
Хорошо.
Значит, ещё такое.
Ну, во-первых, конечно, сразу нам поможет мистическое утверждение,
которое мы не явно пользовались всегда.
Но здесь я его даже запишу.
То есть, любая нот.
То есть, любую циркуляцию.
Там циркуляцию.
Можно декомпозировать.
На не более чем модуль E циклов.
Ну, в принципе, я думаю, если вы понимаете утверждение
о циркуляции просто в обычном графе, то, в общем-то,
я думаю, сомнений это утверждение у вас вызывать не должно.
То есть, фактически тоже та же самая теория
декомпозиции просто с учётом того, что пути от S до T у вас нет.
Ну, или если есть путь от S до T, то найдётся, наверное,
путь от T до S вот вам цикл.
Да, обратите внимание.
То есть, эти циклы могут проходить и через вершину S,
и через вершину T, и даже через обе.
Хотя заметим, что при понятии циркуляции, в общем-то,
понятия даже и stock, и stock, в общем-то, теряют смысл.
То есть, S и T, в общем-то, становятся обычными вершинами.
Вот.
То есть, тут, в общем-то, всё просто.
Ну, казалось бы, давайте подумаем.
Если ищем циркуляцию минимальной стоимости,
а какое отношение эта задача имеет к задаче о поиске
максимального потока минимальной стоимости?
Ну, если поток увеличены 0 максимальный, то ладно.
Вот.
Ну, так-то, конечно, да.
Можно заблочить, например, вершину R и найти максимальную циркуляцию,
а потом как-то добавить R.
А R это что?
Ой, не R, а T.
Нет, это T заблочить.
И что?
Но проблема в том, что через T тоже могут проходить хорошие циклы.
Да, их надо как-то добавить потом.
Вот, ага.
Осталось только придумать, как.
Хорошо.
Можно сделать другую вершину стоковую.
Ну, короче, из T провести в неребро, и по нему поток...
Куда? Откуда провести?
Из T в какую-то фейковую стоковую вершину.
Можно.
Но, на самом деле, для иллюстрации, да, я, возможно, не точно сформулировал вопрос,
не это имел в виду.
Но, на самом деле, да, я имел в виду, почему мы хотим рассматривать задачу о поиске
минимальной циркуляции.
Потому что, на самом деле, если мы умеем искать минимальную циркуляцию,
то мы максимальный поток минимальной стоимости тоже умеем искать.
Делаем мы это весьма элементарным способом.
Способ называется...
А давайте-ка добавим ребро из стока в исток
с, внимание, пропускной способностью плюс бесконечность
и стоимостью минус бесконечность.
Да.
Ну, понятно, что...
Ну, естественно, имеется в виду, что плюс бесконечность
это там какое-то число, которое там заведомо превзойдет все,
что вы там можете получить здесь.
То есть там можно там сказать, что это просто там едва ли не сумма
пропускных способностей, там называется, умножить на 100500.
Ну, какое-то там конечное число.
То есть настолько большое число, что действительно выгодно
просто всеми правдами и неправдами пускать по этому ребру
как можно больше потока.
Вот.
Ну, в общем, думаю, понятно.
То есть, в принципе, после этого у нас задача к циркуляции минимальной...
Вот так мы свели задачу о поиске максимального потока минимальной стоимости
к задаче о поиске циркуляции минимальной циркуляции.
К циркуляции минимальной стоимости.
Кстати, давайте, а ну-ка, еще такое упражнение для разминки.
А если я хочу найти поток величины k минимальной стоимости?
Ну, совершенно верно, да.
То есть, в принципе, если я тут напишу k, будет у меня поток
величины k минимальной стоимости.
То есть, в общем-то, то есть, не обязательно, то есть, не то чтобы
я буду сильно пользоваться тем, что этот поток обязательно максимальный.
Ну, впрочем, можно было и раньше это сказать, потому что,
как бы, думаю, тоже есть там стандартная олимпиадная логика,
что если вы хотите, чтобы у вас максимальный поток был не
тот, который реально максимальный, а только величины k,
то, в принципе, сделать какой-нибудь безобразие в духе вот этого вот
вам никто не мешает.
Ну, в принципе, я думаю, там кто-то такую логику себе применял.
Ну, тут хотя по-разному, потому что давайте тут оговоримся.
А кто вообще знает алгоритм поиска максимального потока
минимальной стоимости?
Знает.
Я его писал, но я его не помню очень хорошо.
Я помню примерно.
Я тоже, например, сейчас.
Ну, хорошо, давайте, кто его хотя бы когда-нибудь писал?
Ага.
Так, хорошо.
Ну, окей.
А кто-нибудь вообще знает, как его доказывать?
Что этот эпический жадник работает?
Матроиды какие-то.
Да?
Ну, скажем так, может и матроиды.
Я не знаю.
Вот.
То есть, на самом деле, может на языке матроидов это тоже расписывается.
Вот.
Ну, понятно.
Значит, смотрите.
Ну, то есть, да.
Ну, на самом деле, огласим, что алгоритм тут имеется в виду
такой известный там, видимо, в олимпиадной среде такой.
Как найти максимальный поток минимальной стоимости?
Делаем абсолютно первого попавшегося тупого форда
Фолкерсона.
Но при этом путь от СТ в остаточной сети мы выбираем таким
образом, чтобы его стоимость была минимальна.
Именно вот.
Да.
Но говоря об остаточной сети, конечно же, нужно сделать
еще оговорочку, что у каждого ребра есть там действительно
обратное ребро.
Изначально там пропускной способности ноль.
Но и, конечно, да.
Но цена, естественно, с минусом.
Но в том плане, что если выпустили поток по цене минус 57,
то, наверное, чтобы его отменить, надо заплатить 57.
Вот.
То есть, типа, возвращай деньги.
Ну или, наоборот, если вы заплатили три, то как бы
отменили поток, получили три обратно.
Да, алгоритм, по-моему, очень интересный.
Вот.
То есть, алгоритм, да.
То есть, такой дальше там начинается вопрос, как
его там писать с помощью каких-то dexter.
Ну, мы от этого тоже доберемся.
Правда, есть маленькая оговорка.
Такой алгоритм работает...
Такое, что потенциалы просто...
Ну вот, нам потребуется с этим разобраться.
Вот.
Правда, есть маленькая оговорка.
Этот алгоритм работает, конечно, только в предположении,
что изначально у вас в сети нет циклов отрицательной
стоимости.
Ну потому что, если бы они были, то вам приходилось
бы их как-нибудь находить и тоже по ним что-то пускать.
То есть, ну чаще всего, понятно, в каких-нибудь олимпиадных
задачах, в общем-то, стоимости изначально отрицательных
у вас там часто не бывает.
Ну вот.
Поэтому...
Ну вот, поэтому тут оговорка непринципиальна.
Ну, чем...
Алгоритм мы будем строже доказывать.
Конечно.
Ну более того, сейчас мы к этому приступим.
Потому что, ну вот, первый шаг, который мы сделаем,
это сведем задачу к поиске минимальной циркуляции.
Как ни странно.
Потому что поговорим о том, как устроена вообще минимальная
циркуляция.
Потому что есть маленькое, простое утверждение.
Да, ну во-первых, да.
Ну вот.
Так.
Ну давайте, да, договоримся сейчас.
То есть, договоримся тут еще о какой-то терминологии.
Значит, терминология такая.
Назовем циркуля...
Ну вот.
Циркуляция...
Ну давайте, ладно, введем уже тогда два термина.
Ничего страшного.
Циркуляция минимальна.
Если ее стоимость минимально возможна.
Да, я понимаю, что звучит казуистически, но тут имеет
смысл точно договариваться.
Максимально.
Вот употребляются действительно и такие.
Значит, термина.
Если...
Или можно было даже это назвать локально оптимально.
Если в остаточной сети...
Нет, ладно, не буду писать G, давайте честно напишем
уже тогда буковками.
Остаточной сети...
Нет.
Циклов отрицательной стоимости.
Да, эти маркеры будут долго выметриваться.
Видимо, надо просто отсюда вынести эти перманентные
маркеры, чтобы его ни у кого не было соблазнами
писать.
Ну вот.
Вот.
Поэтому я вот это и ввел.
То есть вот есть понятие минимально, есть понятие
оптимально, потому что по умолчанию, конечно, есть
желание просто эти слова взаимозаменять и не понимать
в чем разница.
Поэтому...
А на самом деле тут все-таки точно договариваются
обычно, что...
А это не кавален?
Ну, сфорулируем так.
Это теорема, которую надо доказывать.
То есть да.
То есть так и есть, да.
Вот теорема.
То есть циркуляция минимальна тогда и только тогда, когда
она оптимальна.
Ну думаю, это звучало бы менее парадоксально, если
бы я тут ввел термин локально оптимально.
Ну потому что тоже, я думаю, в Олимпиадах вы с таким
сталкивались, что если вы напрямую не можете улучшить
результат, значит вы считаете, что он лучший.
Но как бы это типичный подход какой-нибудь жадности.
Но далеко не всегда это работает.
То есть может быть вы упёрлись в локальный максимум, но
оказывается, если бы вы пошли куда-то в другую сторону,
вы бы нашли там максимум чуть побольше.
Тогда и только тогда, когда циркуляция оптимальна.
Вот.
Так.
Ну заметим на самом деле, ну как-то в одну сторону
конечно очевидно, так и скажем даже.
Там в эту сторону очевидно.
Почему?
Ну потому что понятно, что уж есть.
Ну потому что логика, как в Форде Фолкерсоне,
что если вы найдете в остаточной сети цикл отрицательной
стоимости, то давайте пропустим по нему там сколько-то
единиц потока, сколько можем, и получим циркуляцию
там меньшей стоимости.
Ну тут все очевидно, да?
Ну вот.
Ну и как в Форде Фолкерсоне возникает вопрос.
Хорошо, а допустим мы это делали, делали, делали,
вот уперлись, обнаружили, что больше нельзя.
Уважаемые знатоки спрашивают, а значит ли это, что это
минимум, или мы, или это, или нам не повезло.
Вот.
Значит, смотрите.
Значит, идея будет такая.
Вот.
Редкий случай, но здесь я видимо доказательства
даже напишу почти целиком.
Вот.
Ну я, да, я понимаю, да, за мной это обычно не водится,
но тем не менее.
Значит, смотрите.
Пусть.
Значит, пусть у нас есть циркуляция.
Значит, F это оптимальная циркуляция.
Значит, A, F штрих, минимальная.
Причем.
Ну вот.
Ну вот.
Ну вот.
Ну вот.
Ну вот.
Ну вот.
Ну вот.
Ну вот.
Ну вот.
Какие классные сюди-маркеры.
Вот.
Причем совершенно неожиданно выяснилось, что кост от F штрих
строго меньше, чем кост от F.
Тогда.
Тогда я могу сказать так.
В остаточной сети G с индексом F, обратите внимание, с индексом
F, существует циркуляция под кодовым названием F штрих
минус F.
Ну, догадывайтесь, что это значит, да?
Ну вот.
Ну то есть по каждому ребру мы пускаем там вот столько
сколько надо по нему пустить в F штрих, минус сколько
надо пустить в F.
То есть в остаточной сети очевидно такое существует.
Не очевидно.
Ну что ж.
Ну в плане не очевидно, почему по каждому ребру будет
нормальное значение.
В смысле нормальное?
Во-первых, у нас может быть отрицательное значение.
Может.
Во-вторых, оно может превысить.
Но с другой стороны мы заметим, что если мы пустим отрицательное
значение, значит мы по обратному ребру и ребру пустим положительное.
Нужно еще понять, почему он не превысит максимальное
значение и обратное, потому что у нас могло, например,
в нашем идти по ребру вперед в K, а в минимальном идти
по ребру назад в K.
И когда мы вычтем, получим 2K, что переполнит.
Но понимаете, какая проблема?
Если ты по обратному ребру пускал K, значит ты по моему
ребру пускал минус K.
И тем самым у тебя получается 2K запасы есть в остатке.
Ну можно просто сказать, что можно местами переставить.
То есть у нас G мы к нему применили, а потом мы применили.
Ну можно, да.
А в G изначальном существует F3?
Ну в принципе, да.
Ну тот вопрос, кому это...
Ну да, выкинули F3, потом прибавили F3.
Ну да.
То есть фактически это да.
Ну да, потому что F shape F это изменение.
Насколько надо изменить поток F, чтобы он превратился
в F3.
Ну окей, ладно, значение F3.
Вот.
Ну вот там, скажем так, могу просто оставить в качестве
посмотреть там, как это бьется формальными,
собственно, там, формальными определениями.
Вот.
Ну то есть идея, да, действительно, оказалось бы,
никаких проблем быть не должно, действительно,
просто потому что мы можем пустить в сети G и F
и можем пустить в F'.
То есть, значит, мы можем вести какие-то изменения
так, чтобы F превратился в F', и это будет, очевидно,
там, циркуляция в остаточной сети.
Так, формально, конечно, еще надо формально проверить,
что то, что мы тут сказали, это вообще циркуляция.
Да.
Но этот факт, видимо, вызывает сильно меньше сомнений.
Конечно.
Но это, давай, не будем тут часто копать формализм.
Тогда, ну вот, но еще фишка в том, что тогда существует
циркуляция F'-F, причем там ее стоимость,
ну, она, очевидно, равна там Kostotov'-Kostotov
и, соответственно, меньше нуля.
Тогда в декомпозиции F'-F
на циклы найдется хотя бы один цикл
отрицательной стоимости.
Да, противоречие.
Вот.
Ну, в принципе, вот, то есть, да, то есть, формально
может кто-то потребует, что-то еще какие-то две фразы надо
дописать.
Так, знаете, я там домашнее задание иногда с доказательством
писал в школе, и мне там его не зачли, потому что все
правильно написано, но не хватает последней фразы
с выводом.
Вот.
Чего-то мне сейчас вспомнилось.
Вот.
То есть, может быть, тут надо писать, следовательный
цикл найдется.
Там, ну, что-нибудь вот это.
Ну, как бы, да.
То есть, не знаю, там бывает, то есть, там бывает всякое,
но с другой стороны, там разговоры, там, там, какие
формалистические требования, там, у разных преподавателей
появляются, это уже другая песня.
Вот.
Ну, а суть, действительно, такая такая.
Ну, то есть, самое нетривиальное здесь может быть, а почему
в этой декомпозиции найдется цикл отрицательной стоимости?
Ну, думаю, достаточно очевидно, что стоимость циркуляции
это сумма вот этих вот циклов, на которые мы декомпозировали,
правда.
И если все они будут неотрицательны, то и сумма будет неотрицательной.
Вот.
То есть, таким образом получается, что действительно,
то есть, противоречия обнаружили.
Значит, получается, значит, если циркуляция оптимальная,
то, то есть, там, циркуляция не минимальная, то реально
оптимизировать ее можно.
Вот.
То есть, видите, пока, в общем-то, ничего сложного нет.
Ну, в общем, как-то не парадоксально, но, на самом деле,
и не будет особо.
То есть, тут больше реализационных проблем будет.
Реализационных?
Ну, потому что вам придется там вводить какую-то там адскую
дэкстру с потенциалами, чтобы это адекватно писать.
Не такую же адскую.
Ну да, и в 95 процентах случаев, на самом деле, там это
Форд Белман сам сработает.
Быстрее, чем дэкстра с потенциалами?
Ну, по разному, наверное.
Нет, кто-то, наверное, может ввести там, сделать задачу,
в которой, там, что дэкстра зайдет, а Форд Белман нет.
Нет, в контексте циркула была одна задача, в которой
заходил дэкстра и не заходил Форд Белман, но остальные...
Ну, понятно, понятно.
Окей.
Да, ну, в целом, конечно, да.
В целом, обычно, там, задачи все-таки там будут, там,
где-то просто не заморачиваются, потому что там,
потому что оставляются ими задачи все-таки, там,
собственно, придумай, а при чем тут поток минимальной
стоимости вообще.
Форд Белман за линию, я помню.
Вот.
Ой, да, да, да, да, да.
А, ну да, а, за линию, точно, да.
Да, как поезд Гамильтонова цикла, да, мы помним, да.
Вот.
Да.
Так вот.
Итак, значит, действительно, циркуляция такая, но теперь
остается только вопрос, а каким же образом вообще
можно эту минимальную циркуляцию искать, даже исходя
из этой теории?
Ну, можно, по идее, найти любой цикл отрицательного
веса и его уничтожить.
Ну, можно, ну, скажем так, да, но задача, да, только
с другой стороны, так, как мы умеем искать цикл отрицательного
веса?
Ой, какими-то там Флойдами закуп.
Или там, дай бог, чтобы этими, что там, каким-то
Фордом Белманом ЗВЕ.
Да.
Вот.
Ну, в общем, давайте, ну да, причем, более того,
это один цикл, а сколько вы их будете искать, значит,
получается одному богу ведомо.
Вот.
Не больше, чем я раз.
Кто сказал?
Ну, у нас цикл отменяет одно
Ну и что?
А следующий цикл его возвращает обратно.
Так что увы.
То есть тут...
Мы решаем задачу минимальной циркуляции.
Да, мы решаем задачу минимальной циркуляции.
Правда, предварительно убедившись, что максимальный
поток минимальной стоимости с ней очень тупо сводится.
Ну, тут, на самом деле, тут примерно, на самом деле,
как алгоритм Куна.
То есть потом мы посмотрим, как этот алгоритм будет
работать с этой задачей и там напишем более оптимальную
версию.
Вот.
Итак, ищем циркуляцию.
Так, давайте это я тоже уберу.
Вот.
Вот.
И приводит нас это к следующему.
Значит, как нам это сделать?
Как нам это сделать?
Как нам это сделать?
Вот.
Но на самом деле идея у нас будет такая.
Значит, мы...
То есть на самом деле мы будем
на самом деле делать так.
Мы будем добавлять рёбра по очереди в граф.
То есть изначально граф у нас будет вообще пуст.
будет вообще пуст, мы будем добавлять ребра условно
по одному и добиваться того, чтобы в каждый момент
времени в остаточной сети циклов отрицательной стоимости
не было.
Вот, понятно?
Что мы делаем?
Вот, ну хорошо, да, давайте сейчас пока, ну правда,
в этот алгоритм, чтобы жестко его как-то оценивать,
нам придется предположить, что стоимость у него, пропсные
способности у него целочисленные.
Вот, более того, мы даже в принципе без особого
в этом месте ограничения общности можем даже предположить,
что все ребра имеют пропускную способность 1.
Ну да, если пропускная способность больше, значит вообще примерно
единичные ребра.
Да, ну вот у нас такой алгоритм, как минимум, для первого
алгоритма сойдет.
Правда, у нас будет практически и последний, но что делать,
там как бы есть более продвинутые алгоритмы, но они за рамки
нашего курса все-таки выходят, увы.
Вот, все такие алгоритмы изучать, то как бы да, возникли
ощущения, что трех семестров мало.
Да, есть такой риск.
Нет, а что потоки, ребята, знаете, что далеко ходить,
разве не интересно, как искать кратчайшие пути в неориентированном
графе ЗВ плюс Е, с целыми не отрицательными, но произвольными
по величине весами.
Интересно было бы ЗВ плюс Е искать с отрицательными
весами.
Ну, это пока наука не в курсе дела, это как минимум.
Или там можно было, или тогда еще нужно было далеко
ходить, или вот, собственно, искать, как софтхип помогает
искать миностоп за адекватное время, или вот этот лучший
алгоритм еще можно изучить, то есть что там еще можно
сделать.
Миностоп онлайн.
Ну, вот что-нибудь такое.
Так что, уконин онлайн, добавление буковки за loglogn.
Что там еще бывает вообще?
То есть там...
Ну, нет, там ситуация просто проблема, алгоритм уконина
он работает за линию, но он амортизированный, да?
Ну вот.
А теперь задача.
Хочется добавлять буковку и модифицировать дерево
так, чтобы стоимость была железобетонная.
По-моему, лучший алгоритм на текущий момент имеет
в этом месте этим точку что-то типа loglogn.
Нет, именно loglogn не путать.
Но это другой вопрос, да.
Ну вот, не говоря уже о том, что можно там еще разные
алгоритмы построения, или там кольцо фаз за линию
еще можно сделать.
Ну, не в смысле, которые там уконины ДФС, а в смысле
нормальные алгоритмы.
Ну, loglogn, как керман, это, конечно, хорошо, но...
Ну, да.
Нет, это правильно говорить loglogn, которого часто путают
с керманом.
Да.
Вот так скажем.
Ну ладно.
Это просто на скидку, чем можно было бы заниматься,
если бы у нас было не три семестра А4.
А, все, я понял, что надо заниматься этим точку.
А керман константо, log звездочек константо, loglog
это а керман.
Ну, понятно, да.
Хотя, да.
Там дальше люди предлагают еще сказать, что хориен
логорифм.
Ну, понятно, да.
Хорошие.
Кому это в жизни приближается?
Ну, скажем так, разве что ученым, которые там будут
работать в области теоретической информатики.
Хотя, в каждой статье вам подробно статьи подробно
напишут, а, собственно, откуда эта задача взялась
и вообще зачем она нужна на практике.
Так что, знаете, то есть дерево доминаторов, то
что ж не с потолка взялось, допустим, да, что просто
вот тут прикольная задача такая, я тут придумал.
Вот, то есть, и так далее.
То есть, ну и там всякие вон алгоритмы, там мина
сто тоже, там практически, какая-то практическая задача
была, то есть там электро, там про электросеть, да,
или там, ну, про качайшие пути, я вообще молчу.
То есть, тут, я думаю, там сама формулировка уже
говорит, зачем задача нужна.
Нет.
Ну, ой, там, слушайте, в этих статьях там вам подробно
там покидают про всякие там анализы биопоследовательностей.
Там что?
Потому что там поиски подстроки в строке там при анализе
ДНК, это прям святое там везде.
Так что как бы нет, мы как бы не просто так это все
придумывается.
Это придумывали не для того, чтобы нам тут на Олимпиадах
не было скучно.
То есть, нет, конечно, да, то есть в какой-то степени
нет, конечно, но в этом смысле это в любой математике
так, то есть там можно там углубиться в какие-то
вещи, которые вообще непонятно зачем нужны на практике,
но тем не менее математики ими занимаются.
Через 300 лет их применится.
Ну, может быть.
Их или разработанные идеи, да, совершенно верно, совершенно
верно.
Ну, да.
То есть, ну, как вы знаете, когда, причем, более того,
в математике как-то, то есть, как бы за занятия казалось
бы такой математикой еще гранты какие-то выделяют
даже представить.
Ну, вот, причем даже у нас в стране, что интересно.
Так что, соответственно, вот так вот идем.
Значит, теперь как будем искать?
Идея будет такая, как я уже сказал, изначально граф
пустой-пустой-пустой-пустой-пустой-пустой-пустой-пустой-пустой-пустой-пустой-пустой-пустой-пустой,
ну короче, поняли, да, вот и будем добавлять по
одному ребру.
В каждый момент времени у нас есть остаточная сеть
И мы, там, какая-то остаточная сеть, и мы будем гарантировать, что в это, ну, я рисую единичные ребра, да, и я гарантирую, что на текущий момент в этой остаточной сети нет никаких циклов отрицательной стоимости.
И пришло к нам новое ребро.
Ну, допустим, вот оно.
Но, внимание, вопрос. Мог ли появиться новый цикл отрицательной стоимости?
Очевидно, мог.
Как говорится, ответ вполне.
Но теперь давайте думать, а как выяснить, появился ли цикл отрицательной стоимости или не появился?
Ну, нам нужен кратчайший путь между грошинами в старом графе.
Да. Ну, логично, да. Если он появился, значит, он, очевидно, проходит через это ребро.
Значит, у нас есть какой-то путь от этой вершины до этой, такой, что его стоимость этого пути плюс стоимость этого ребра меньше нуля.
То есть, остается только проверить. Давайте найдем, там, любыми средствами кратчайший путь отсюда-сюда, и поймем, есть ли цикл отрицательной...
И поймем, получился цикл отрицательной стоимости. Если не получился, значит, новый цикл отрицательной стоимости не произошло.
Идем дальше. Понимаете, да?
А что делать, если все-таки цикл оказался отрицательной стоимостью?
Ну, наша жадность, конечно, говорит, ну так давайте пустим единицу потока по этому циклу, чего бы нет.
У нас все ребра единичные, поэтому все ребра сразу пропадут?
Да, все ребра пропадут. Но появится обратное.
Почему все ребра единичные?
Потому что мы так договорились, на самом деле.
Ай-яй-яй, конечно, поэтому цикл отрицательной стоимости положительный, но есть иван.
Да, что ж, цикл отрицательной стоимости могли появиться в другом месте.
В другом месте, да.
Почему они...
самом деле. Граф из единичных, имею в виду, что граф целочисленный на самом деле,
то есть целочисленными пропускными способностями. Да, на стоимости такого ограничения нет.
И заметим, что у нас... Нет, ну сейчас мы просто пользуемся тем, что у нас все по единичке.
Хотя в общем-то это неважно на самом деле. Важно на самом деле,
давайте сейчас для простоты предположим, что у нас единичка, и чуть позже тогда поймем,
что делать, если там больше единички или даже случайно что-то не целочисленное.
Ну почему нет, профессиональные способности не целочисленные бывают.
Да, мы даже в hard life даже с этим столкнулись.
Бывает, да. Более того, здесь это тоже, забегая вперед, так может произойти.
Да, но ничего страшного. Спокойно, спокойно. Сейчас все будет.
Так, во-первых, нам сейчас интересно такое, что делать, если мы тут как проверить,
что после того, как мы пустили поток по этому циклу, по этому свежеобразованному
циклу отрицательной стоимости, как убедиться, что отрицательного цикла нет или наоборот убедиться,
что есть? Нет, ну есть тупой вариант взять все вот вновь добавившиеся рёбра и просто их тоже по одному добавлять, как и все остальные циклы.
Ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой,
но сейчас мы это докажем, а заодно введем еще одно приятное понятие.
Короче, это будет по цене, да?
Да. Да, именно по цене.
Да, для этого мы введем, то есть оказывается полезным ввести понятие потенциал.
Что такое в данном случае потенциал?
То есть будем говорить, что потенциал – это просто такая функция P,
которая ставит в соответствии каждой вершине какое-то мистическое будь здоров число.
Ну, это просто какое-то число.
Может положительное, может отрицательное.
То есть в общем-то в определении потенциала больше ничего нет.
Этого потенциала, конечно.
То есть не путать, конечно, со всякими потенциалами из амортизационного анализа.
Вот. Ну, а с этим, ну вот.
Ну, во-первых, относительно каждого потенциала
можно ввести понятие приведенная стоимость.
Ребра.
То есть приведенная стоимость.
То есть кост с индексом P от конкретного ребра E
она будет равна чему?
Она будет как всегда равна
обычной стоимости E
плюс потенциал от начала
минус потенциал финиша.
Вот. Ну, кстати, мы вот когда изучали алгоритм Джонсона
мы уже сталкивались с этой штукой, правда?
Помните было дело, да?
Поэтому я думаю вас не сильно удивит там утверждение
о том, что пусть РО это путь от У до В.
Тогда оказывается, что приведенная стоимость этого пути
она равна просто кост.
То есть она просто равна обычной стоимости
плюс потенциал в начале, минус потенциал в конце.
Ну, думаю, это...
Так, надо расписывать почему это так?
Нет.
Думаю, также очевиден и еще какой-нибудь веселый факт.
Сейчас только не кост У, кост В, а ПУПВ.
Чего?
А, ой, да, спасибо.
Ну вот, ну еще заметим, что если РО это цикл
то просто вот, отметим важный момент, что
тогда приведенная стоимость цикла равна
обычной стоимости цикла.
То есть потенциал на них никак не влияет.
Вот.
То есть вот, введем такую вот полезную штуку.
Ну, сильно полезная она становится, на самом деле,
когда мы вводим еще такое мистическое определение.
Потенциал П
не отрицательный
не отрицательный
если
для любого ребра
то есть для любого ребра
ну, давайте, можем оговориться еще сказать, что у которого
пропускная способность
больше нуля
имеется в виду.
Вот, соответственно,
его приведенная стоимость
не отрицательна.
То есть вот так.
Ну, была отрицательна, а приведенная
стоимость относить к такой потенциалу
стала положительной.
Ну, в смысле,
мы просто не закладываем на так
не отрицательный потенциал.
Ну, типа того, да.
Нет, ну а в чем проблема?
Нет, ну давайте вспоминать.
То есть, на самом деле, если вы сейчас
вспомните алгоритм Джонса,
то вы практически без труда пробьете
то, что будет происходить дальше.
Просто
то есть, на самом деле,
просто мы даже
даже в этой теории доказывали
мистическую теорему.
Существует не отрицательный потенциал
тогда и только тогда,
когда нет
циклов отрицательного веса.
Да, да.
Так compañей, что мы
в не отрицательном потенциале
для ребер отрицательного веса
ничего не гарантируем.
Чего?
Чего не гарантируем?
Ничего не гарантируем.
А, для кого не гарантируем?
Для ребер отрицательного веса.
А что мы должны для них гарантировать?
Давайте вспомним, заодно вспомним откуда это доказательство
берется.
В одну сторону очевидно, потому что неотрицательный
потенциал гарантирует отсутствие циклов отрицательной
стоимости.
Вес циклов не меняется от неотрицательного потенциала
циклов.
Все приведенные стоимости очевидно тоже неотрицательные
циклы.
Ну и наоборот, запускаем пылфрейт с любой вершины.
Ой, не пылфрейт, ну короче находим расстояние от любой
вершины и кладем потенциал от расстояния.
Ну вот.
Ну да, вот в обрат.
Не очевидно, если в цикле все отрицательные ребра,
мы для них ничего не гарантируем про приведенные стоимости
и все.
Нет, ну то есть, предположим, что у тебя нашелся случайный
неотрицательный потенциал, тогда очевидно рассмотрим
любой цикл, утверждение, его стоимость неотрицательна,
потому что его приведенная стоимость железобетонно
неотрицательна, потому что у каждого ребра этого цикла
стоимость...
Вы за С обозначили пропускную способность и не стоимость.
Я так понимаю?
То есть, там все ребра были отрицательные стоимости.
Да, за С я, естественно, обозначил пропускную способность
и не стоимость.
А, все.
Да, давайте не путать С и КОСТ.
Все, окей.
Вот.
А, если в этом проблема была, то окей.
В этом проблема была, да.
Все, все, все.
Да, С это пропускная способность, КОСТ это стоимость, да.
Теперь вопросов много.
Вот, хорошо.
Теперь тогда, значит, в одну сторону очевидно, в другую
сторону.
И как найти, что делать, если нет циклов отрицательной
стоимости?
Тогда, оказывается, потенциал можно ввести неожиданно
тупым образом.
Берем какую-нибудь дополнительную вершину О и проводим из
нее ребра, ну, на самом деле, достаточно произвольной
стоимости.
И тупо находим кратчайший путь.
И тогда в качестве потенциала объявляем кратчайшее расстояние
от О до каждой из вершин.
Утверждение, этот потенциал не отрицательный.
Все, воспоминается, да?
Ну, доказательство очень простое, да, что как доказать,
что вот эта величина больше либо равна нуля, если по
АТУ это расстояние, да?
Если ребро лежит в дереве кратчайших расстояний,
то у него приведенная стоимость ноль, а если не лежит, то
она там не может быть меньше нуля, потому что иначе у
нас новое кратчайшее расстояние.
Ну, сказать, наверное, можно и так.
Ну, это прям супер тупое рассуждение просто по построению.
Ну, не совсем так, знаешь, оно, по-моему, немножко попахивает
чем-то в духе, то есть чем-то в духе оно понятно, потому
что оно понятно.
Не, ну, в смысле, если у нас вот в этих зеленых ребрах
лежит наше ребро, то все очевидно?
Нужно очевидно, что у нас приведенная стоимость
ребра ноль.
Ну, если ребро лежит на кратчайшем пути, то, конечно,
а если не лежит, ну, предположим, у него приведенная стоимость
отрицательная, тогда там, кажется, получится просто,
что расстояние до там конечной вершины у нас будет меньше,
чем кратчайше.
Да, и будет вопрос, а почему получится?
В смысле?
Ну, почему получится?
Что там что-то там меньше, какое-то расстояние правильно
посчитано.
Почему получится?
Мы хотим сказать, что у нас все кратчайшие пути сохраняются
за счет свойств.
Ну, скажем так.
Нет, сказать-то да.
Стоимость пути от начальной до там конечной, от начальной
вершины, вот в целом в графе до конечной вершины этого
ребра у нас там какой-то х, если мы сейчас добавляем,
если у нас сейчас отрицательная стоимость, то мы переходя
в то, что мы получаем, расстояние меньше.
Ну да, осталось только выяснить, сколько минут вы это будете
мне потом на экзамене расписывать.
Не, если там, в смысле, поводить переменный расписатель,
то страшно.
Да.
Я вам сейчас, по-моему, просто назову это в две строчки,
на самом деле скажу то же самое.
То есть идея очень простая.
Рассмотрим вот эту стоимость.
Для любого ребра дистов.
Смотрите.
Тогда смотрите.
П от В это кратчайшее расстояние от О до В, а КОСТОТРО от пути
до У, то есть там, ну вот, а сейчас, нет, не то, вот это.
Да, то есть расстояние, то есть это расстояние, это
длина кратчайшего пути до финиша, да?
А вот что это такое?
Расстояние до стартовой вершины плюс стоимость
ребра от стартовой до финишной.
Это длина какого-то пути до той же самой финишной
вершины.
Но как бы, если вы вычтите длину какого-то пути, из
длины какого-то пути вычтите длину минимального пути,
то, очевидно, вы получите отрицательное число.
Просто по определению слова минимальный путь.
Вот.
То есть, в общем-то, и всё.
То есть, я думаю, вот это, пока, как мне кажется, от
этих двух предложений уже точно вопросов не возникнет.
Уже не будет там, скорее всего, неукрованно.
Не, там можно поиздеваться над экзаменуем и попросить
расписание определения минимального пути и там
вообще пути и просто поприкалываться.
Ну, если, ну, мы уже можем предположить, что мы, наверное,
в третьем семестре, как бы, да, понятие «путь» у нас
вводилось в прошлом, в прошлые разы.
Это я должен был над вами издеваться во втором семестре,
если не в первом.
Вот.
Так что это уже, да.
Но, с другой стороны, я думаю, там, вот этим децентром
мы всё-таки заниматься не будем.
Потому что, ну, это как-то совсем уже на оценку, там,
это шо вам ставить, ноль или один.
А преподаватели обычно в этом месте не заморачиваются,
вот просто ставят неут и идёт спать, как бы.
Соответственно, да.
Вот.
Значит, да, то есть, теория, мы действительно тут достаточно
простая.
Более того, мы сейчас, на самом деле, её начнём
пользовать.
Потому что это-то утверждение достаточно простое.
Более того, оно в Джонсоне было.
Мы им в явном виде пользовались.
Помните, да?
То есть, мы им пользовались, потому что мы даже просто
в алгоритме поиска качайших путей между всеми парами
вершин в явном виде это делали.
И это помогало нам теперь от каждой вершины найти
расстояние до остальных с помощью дэекстра с потенциалами.
Помните, да?
То есть, более того, я вам даже сейчас скажу, что мы сейчас
эту дэекстру с потенциалами будем использовать.
Потому что идея следующая.
Значит, ну, значит, мы будем поддерживать.
Значит, теперь смотрите, внимание.
Значит, может сказать, мы начинаем приближаться
к алгоритму.
То есть, нет, на этот раз, конечно же, мы не будем вводить
вот эту мистическую вершину и что-то рисовать.
Вот.
Мы будем пока просто поддерживать инвариант, что у нас
в каждый момент времени есть неотрицательный потенциал
в остаточной сети.
Ну, и сначально это поддержать очень легко.
Когда у вас нет ребер, в принципе, подойдет вам
какой потенциал?
Ноль.
Ну, может сказать нулевой.
А можно сказать любой.
Да, пока нет ребер, в общем-то, подойдет что угодно.
Вот.
Ну, лучше, конечно, нулевой, просто чтобы у вас там
какие-то там неожиданные переполнения не возникали.
Вот.
Топереча.
Ну, тогда идея такая.
Если у вас перед вот добавлением новым ребра был неотрицательный
потенциал, то вы можете, наверное, без труда найти
кратчайшее расстояние от вот этой вершины до всех
остальных.
За Dx, правда?
Ну да, все ребра неотрицательные, да.
Ну, приведенное неотрицательное, поэтому, вот.
Поэтому там расстояние ищут.
Но важный момент.
Вот.
Более того, в этом месте, что нам очень важно, мы
перепишем потенциал.
То есть у нас вот был потенциал P до, в смысле начала шара,
да.
То есть когда мы вот, если мы вот тут, вот давайте
предположим, что мы добавляем ребро из вершины U в вершины
V.
Там стоимость какой-нибудь там кост, да.
И мы сразу себе СК пропишем, что расстояние P после, это
будет просто расстояние, то есть от какой-нибудь
вершины W, до какой-нибудь, потенциал какой-нибудь
вершины W, это расстояние от вершины Dv до вершины
W.
Но обратите внимание, расстояние, видите, я здесь не
пишу индекс потенциала, и это не случайно.
Потому что я имею в виду не приведенное расстояние,
а реальное.
Ну да, ну то есть мы считаем приведенное, потом мы,
зная потенциал, вычисляем реальное, а потом мы его
перезаписываем.
Ну вот.
Ну на самом деле, да.
То есть тут легко видеть, да, что, наверное, если вы
нашли приведенное расстояние, да, то, очевидно, получить
из него реальное расстояние без проблем.
С помощью вот этого вот вершины, правда?
Ну там, прибавляем потенциал в конце, вычитаем потенциал
в начале, все.
Но тем не менее, печальная оговорка здесь есть.
А расстояние в каком графе до того, как мы упустили
или после того?
До.
Ну как бы, да, то есть без учета этого ребра.
Ну там, правда, два варианта.
Либо отрицательный цикл есть, и тогда все расстояния
– это минус бесконечность.
Либо цикла отрицательного веса нет, и тогда это ребро
не на что не влияет.
Нет, нет, нет, в смысле, вот у нас был граф, мы добавили
ребро и пустили единичку.
Куда пустили?
Нет, мы могли пустить, могли не пустить.
Мы пока еще ничего не пускали.
Ну вот, главное, что мы пустили единичку.
У нас поменялся вера.
И там расстояние реальное тоже поменялось.
Поменялись.
Но нас они пока не интересуют.
Да, мы на каждом шаге будем искать новые расстояния,
если что.
Что такое ПДО и ППОС?
Значит, мы говорим, пусть у нас был какой-то граф,
то есть была какая-то остаточная сеть, и в ней был неотрицательный
потенциал, говорим мы.
И вот рассмотрим, и вот на очередном шаге мы добавляем
ребро от УВ.
И вот я расписываю.
Так вот, я утверждаю, что в процессе этого шага
мы потенциал поменяем.
И этот потенциал, поэтому я говорю, появились потенциал
то, что было раньше, а это потенциал то, который будет
в результате.
Вот.
Потому что в процессе этого шага я дону новый потенциал,
потому что я найду кратчайшее расстояние от этой вершины
до всех остальных.
Ну без учета этого ребра.
Ну расстояние, естественно, я ищу по ненасыщенным ребрам,
но думаю, это понятно.
Ну, к сожалению, вредная оговорка, которую придется
сделать, тут все-таки есть.
Как вы думаете, какая?
У нас нет понятия связанной не связанности в ориентированном
графе.
Да, но идея правильная, действительно.
Особенно поначалу никто не сказал, что мы от вершины
V до всех вершин можем дойти.
Проблема, да?
Но идейно все остается.
То есть до кого дотянемся, потенциал пишем такой.
Нет.
Нет, конечно, не нолики.
Нет, ну оставлять прежний тоже не получится.
Ну то есть там могут быть какие-то остальные какие-то
ребра, да, для них хотелось бы оставить потенциал прежний.
Но есть проблема, потому что есть вот то, до чего мы
дотянулись, есть остальной мир.
И из этого остального мира в нас ребра вполне себе
существуют.
Да, в эту сторону нет, но в нашу сторону да.
Поэтому если мы тут потенциал не поменяем, а тут поменяем,
то с этими ребрами могут быть проблемы.
О чем мы тогда хотим делать?
Просто берем старый, в остальном мире берем старый
потенциал и прибавляем ко всем, ко всем потенциалам
одну и ту же константу.
Так, чтобы все эти ребра стали не отрицательными.
Вот, ну там просто условно говоря там найдем какую-нибудь
там минимальную приведенную стоимость как бы такого
ребра, да, то есть допустим она оказалась там минус
179, ну значит ко всем потенциалам этих вершин прибавляем 179
и все.
Вот такая нехитрая идея.
Еще раз, какая константа?
Инф?
Нет, инф не надо у вас при полнении будет.
Просто пробежимся по всем таким ребрам, найдем ее
минимальную, найдем минимальную приведенную стоимость таких
ребр.
И ко всем потенциалам вершин просто прибавим значит
там минус эту стоимость, ну то есть вычтем эту стоимость
короче.
Ну то есть типа если она там минус 179, значит вычтем
минус 179, то есть прибавим 179.
А для, берем потенциал, который был раньше, но ко
всем вершинам вне этой вот достижения, зоны достигаемости
прибавляем одну и ту же константу с тем расчетом,
чтобы вот у всех ребер, которые ведут из вне зоны достигаемости
в зону достигаемости, учетная там приведенная стоимость
стала не отрицательной.
Вот собственно и все.
Дист мы считаем, ну дист мы считаем, да, дист естественно
имеется в виду в остаточной CD, да.
То есть тут, то есть индекс мы тут пожалуй и напишем.
G с индексом F конечно.
По не насыщенным ребрам, естественно.
Но теперь смотрите какая фишка.
Зачем мы собственно еще и потенциал себе подменили.
Ну тут фишка такая, предположим неожиданно выяснилось,
что цикл отрицательный, ну тогда заметим, что относительно
этого потенциала у нас все ребра не отрицательные,
да, кроме возможно вот этого вот.
Потому что мы же расстояние-то без учета этого ребра искали,
как было правильно замечено.
Ну вот, ну в принципе, если это ребро оказалось не
отрицательным относительно нового потенциала, значит
ура, нам повезло.
То есть просто никаких циклов, но правда это означает,
что циклов отрицательной стоимости нет.
Вот, ну что делать, если цикл отрицательной стоимости
вот по такому расстоянию нашелся?
Ну тогда идея очень простая.
Давайте пустим, то есть давайте тут запустим циркуляцию
величины 1, тогда это ребро получается убилось, но
появились, и эти все ребра убились, ну мы ж типо в единичные
ребра верим, но появились обратные ребра.
Понимаете, да?
Ну заметим, что приведенная стоимость вот этого ребра
теперь точно положительная, правда?
Сейчас, если приведенная стоимость этого ребра отрицательная
декваленда тому, что у нас есть циклы отрицательного
веса?
Ну вообще да.
Ну потому что давайте подумаем, потенциал это, вершина
В сейчас ноль, да?
Потенциал вершины У, это как раз и есть расстояние.
То есть получается расстояние от В до У плюс кост минус
ноль, это в точности получается стоимость этого цикла.
То есть приведенная стоимость этого ребра в точности длины
этого цикла.
Вот, ну а значит если мы и провели это все, значит
тогда приведенная стоимость ребра ВУ теперь положительная.
Понимаете, да?
Но с другой стороны заметим, что если вот у этого ребра
была приведенная стоимость, скажем, 5, то тогда у этого
ребра приведенная стоимость должна быть равна очевидно
минус 5,правда?
И получается, что убили одно отрицательное ребро,
появились другие.
Так может показаться.
Но теперь мистическая магия.
Хотя не мистическая, потому что кто-то уже упомянул,
что если ребро лежит на корчайшем пути, то его
приведенная стоимость ноль.
То есть, ну как повезло?
Мы подогнали потенциал вообще, да, мы специально
подогнали потенциал.
Теперь заметили, что относительно этого нового потенциала
вот у этих ребер приведенная стоимость ноль.
Следовательно, если вы замените на обратное, то
у этих обратных ребер приведенная стоимость тоже ноль.
Следовательно, этот потенциал не отрицательный.
То есть для всех стальных ребер он остался неотрицательным, а для этих нормальным?
Приведенная стоимость это стоимость плюс ПА, минус ПБ?
Если мы пройдем в другую сторону, у нас получится...
Минус от потенциалов пойдет и минус от ребра от стоимости.
Почему они остаются неотрицательными?
Так, что не так?
Так, что не так?
Так, что не так?
Чувствуется, что тогда будет кричайший путь, который по новому появится.
Да.
Нет, ну не утверждается, а просто возьмем кричайший путь.
Это называется возьмем кричайший путь от ВДУ, который мы нашли при поиске, при подсчете этого потенциала.
Да, то есть мы пропустили по циклу с этим кричайшим путем и этим ребром, значит, единицу потока.
Так как у нас все ребра единичные, напоминаю для простоты, то мы как бы эти ребра убили, а вместо них поставили обратные.
То мы как бы эти ребра убили, а вместо них поставили обратные.
И это ребро мы, красное, убили и поставили обратные.
Теперь, значит, утверждение, что вот этих ребр кричайшего пути приведенная стоимость относительно нового потенциала была ноль.
Ну, раз она была ноль, значит и у обратных она ноль.
Вот, а у этого ребра она была отрицательна, значит у обратного она положительна.
Все, ура, победа.
В общем-то, да. Тут, конечно, надо очень четко понимать, что алгоритм, конечно, немножко взрывает мозг, потому что тут надо понимать, что расстояние реальное.
То есть у вас есть потенциал, с помощью которого вы находите расстояние, сначала в чем находите приведенное расстояние, потом под ним вы восстанавливаете реальное расстояние и из этих реальных расстояний вы делаете новый потенциал.
Поняли логику, да?
Вот.
Вот, то есть тут просто главное, надо не запутаться.
То есть, если вы, да, один раз это поняли, то как бы ничего сложного в этом нет, но как бы часто алгоритм вызывает небольшой, некоторый взрыв мозга в этом месте.
Вот. Ну, впрочем.
И вы получили что-то типа e²q.
Так. Ну, как сказать.
Ну, получается, да. То есть, на самом деле, вы, получается, протал, то есть, ищете такой путь e раз, каждый делаете за e логовое.
Ну, формально говоря, вы можете, конечно, написать этот алгоритм за e квадрат плюс e на v логовое.
Еще можно.
Это формально.
Ну, да, понятно. В реалисте, видимо, dx с кучей шубаначи никто писать не будет, да?
Вот. Но, тем не менее, формально мы должны сказать, что такое возможно.
Да. Ну, теперь давайте думать, что поменяется, если у нас пропускные способности целые, но бывают больше единицы?
Боль.
Да нет.
Ну, на самом деле, никакой боли нет, потому что, на самом деле, просто надо это все домножить на c.
Большого бы счет.
Нет. Сейчас, кажется, хочется сразу добавлять ребра нормальные.
Хочется, сейчас, нет.
Ну, вот, нет. В реальности, как бы, это скорее может сделаться так.
То есть, как-то оптимизировать. Оптимизировать можно так.
То есть, возьмем ребро, найдем цикл, да?
По этому циклу мы, по этому циклу мы, значит, пропустим столько, сколько сможем по этому кратчайшему пути, да?
Вот. Ну, или по самому этому ребру.
Вот. Но если оказалось, что мы тут, по этому циклу, пропустили меньше, чем пропускная способность этого ребра, то мы сказали так.
Давайте мысленно расщепим это ребро на пропускную способность, вот, соответствующей этому кратчайшему пути и все остальное.
И добавим сначала первое, потом второе.
После добавления первого, получается, у нас циркуляция исчезла.
Значит, дальше теперь начинаем добавлять параллельные ребры.
Понятно.
То есть, в коде действительно это, то есть, в коде это выразится, что пока у вас, значит, это ребро не стало, там, сотрясает там,
пока из этого ребра еще есть что пихать, значит, вы там начинаете что-то, там, ищете кратчайшие пути.
Один путь, второй путь, третий путь и так далее.
Ну да. Хотя это уже напоминает, знаете, да, это как это, как сделать шикарный рейтинг ночной передачи.
Ну вот, то есть, идея очень простая, да. То есть, идея очень простая.
Представьте, такая темная студия.
Значит, там сидят там несколько человек, и там ведущий говорит, здравствуйте, дорогие друзья.
Сегодня мы обсудим такую важную, актуальную тему, как референдум в Шотландии.
Слово эксперт.
Значит, эксперт. Абсолютно никуда не спешащий эксперт.
Значит, так спокойно садится, так, может быть, даже затягивается сигарой.
Ну, может, не затягивается и говорит, ой, Шотландия, вы знаете, замечательная страна.
Вы знаете, я много раз был в Шотландии, и в Шотландии замечательная природа.
Знаете, вот представьте себе, действительно горы.
Действительно вот, ну вот, и на горе, вы знаете, вот на зеленой травке пасутся овцы.
Одна овца, две овцы, три овцы.
Все, до утра в радость все, потому что фантастические рейтинги, всю ночь все смотрели.
Вот.
Так что вот.
Хорошие новости, чтобы поспать.
Нет, это даже не новости, это уже аналитическая передача какая-то.
Ну, такая ток-шоу.
Ну, как бы, вот.
Анализируют сом, да.
Так что когда, тогда красивый вариант, на самом деле, такой очень милый.
Хотя шутки шутками, но, между прочим, на первом канале что-то подобное сейчас выпускается, да.
Правда, есть подозрение, ну, подкаст ЛАП называется.
Правда, там, видимо, обсуждения бывают гораздо более интересными, на самом деле.
Там никто никому не хочет усыпить.
И вместо овц козлы.
Нет, почему козлы?
Нет, там, наоборот, когда я первый раз увидел там что-то такое передача, там вообще было на самом деле очень, там, собственно, какое-то было очень интересное обсуждение.
Называется, там, о темах религии, там, литературе, в том числе современной.
Вот, то есть это, причем, с участием там действующих писателей, там, и называется, там, и очень.
Ну, вот, и также священника, причем, тоже очень образованных, на самом деле было очень интересно, на самом деле.
Правда, потом, когда я второй раз увидел, там была уже, там, третья или четвертая лекция какой-то женщины-астролога.
Ну, вот, там такое, там, уже, что, да, несколько, как бы, да, понизило уровень культуальность лично в моих глазах.
Ну, вот, такое было.
Но, в принципе, то есть, почему бы и нет.
Собственно, даже приятно было, что вот, вот, наконец, он по телевизору что-то адекватное показывает, а не это.
Ну, 8.8 алгоритма, это, конечно, не улучшило, да.
Безусловно, так.
Мы как бы можем добавлять, ну, нас могут ребра добавляться обратно, и нас никак не оценивают.
Да.
Но более того, в дробных ребрах еще и мы не знаем, сколько мы будем пихать, поэтому, может, вообще не сойдется.
Да.
А, нет, не ладно.
Вот.
То есть, в принципе, ладно, вот это вот, то есть, такой вот пихалочный, на самом деле, мы будем называть, там, видимо, метод клейна, мы его будем называть.
Клейна?
Клейна.
Я не знаю, да, тот ли этот товарищ с бутылкой, но...
Четверная группа Света.
Товарищ с бутылкой, скорее всего.
Чтобы в формулировке, да.
Товарищ с бутылкой, скорее всего.
Чтобы в формулировке, это именно он, да.
Тот товарищ, который с 4 по V4.
Ну да, да, да, да, да, да, да, да.
Вот.
Есть такое, да.
Вот.
А теперь, значит, вот такой вот алгоритм работает, да.
То есть, здесь я могу только отметить, что, да, существует по идее алгоритм, конечно, который ищет, там, ну, то ли мент-кос, то ли циркуляцию, на самом деле, за какую-то полиномиальную, то есть, стоимость, которая полинома ТВ, то есть, не зависит от никаких пропускных специалов.
Да, но мы с вами это так и оставим.
Нет, я просто пока как бы рассказал, что да, есть, но как бы, да, мы, к сожалению, у нас нет гарантии, что мы рассматриваем там только чемпионские алгоритмы, да.
Потому что, к сожалению, там я боюсь, что, как бы, для того, чтобы рассматривать чемпионские алгоритмы, нам очень хорошо нужно понимать даже вот то, что у нас в курсе вообще есть.
И еще там примерно.
Не показалось, там C.
Нет, C умножить на вот это все.
C на E логовое?
Ну, потому что, да, мы, как бы, добавляем, добавляли мы типа E ребер, и для каждого ребра запускали отдельную DX труда.
После этой симпатики в окно летит стул, след за стулом в окно люди туда и сидят.
Чего? О, Господи.
Это полная жесть, в смысле.
О, Господи. Кошмар какой. Да, главное не наоборот, да.
Так. Вот. Ну.
Да, на самом деле, это сумма.
Да, ну не, да. Нет, понятно, я согласен, что это не лучшая симпатика, конечно, в жизни, хотя там, если у вас там, хотя у вас там 50, хотя на какие-нибудь там, я не знаю, 50 вершины 200 ребер, в принципе, нормально.
Это сумма ребер на E логовое?
Ну, по большому счету, да. То есть, сумма пропускной способности на E логовое, если вы там в целом виде, да.
Вы знаете, у нас не часто 50 вершин в графах.
На потоке всегда.
Ну, почему? Вот в воскресенье, ну, в воскресенье, а, в воскресенье 200 было, да, нормально.
Я надеюсь, там не будет потом.
Нет, я имею в виду прошедшее воскресенье.
Я возьму распечатки с потоками, блин, на воскресенье.
Правильно. Ну, возьми. Правда.
Правда, нет смысла их распечатывать, потому что все равно из дома писать будете.
Да. Да, кстати.
У меня есть распечатки.
Пожалуйста.
Ну.
У меня распечатки?
Я не могу у тебя уточнить, как они к этому относятся.
Ну, они написали, типа, что...
И потоки, и каяль.
Я такого не писал.
Там можно использовать материалы слинования, обликованные до начала.
Ну, я не знаю. Одно дело, нет, материал это одна, но другое просто, сколько вы имеете право их копипастить.
Или подразумевается, что вы это делаете в режиме перепечатки Steam ноутбука.
Типа, очевидно, они никак не проверят перепечаток я об материалах.
Не совсем. Если...
Или, типа...
Они имеют право, если заподозрят неладное, потребовать от вас, ну, скажем, там, я не знаю, запись, там, скринкаста происходящего на всех ваших компах.
Кстати.
То есть, даже они там ругаются, даже в этом месте ругаются даже словами типа OBS Studio.
О, ужас.
Ну, вот.
Ну, сформулируем так. Если к вам не будет никаких вопросов, то, как бы, можете не... то, как бы, все нормально.
Но, просто, если вас заподозрят в читерство, у вас подобного не будет, то, то, как бы, подобного рода запись может пойти вам в плюс. Вот так.
Как могут вообще заподозриться?
Ну, если неожиданно выяснится, что на 37-й минуте вы неожиданно знали 5 задач.
Или там хотя бы 3.
Причем, по убыванию сложностей.
Или там, или какой-нибудь еще там тупняк в духе, что что-то у вас там это саббиты в одно и то же время с трех айпишников.
Там каких-нибудь. Ну, вот, что-нибудь подобное. Это я так на вскидку говорю. Да, это самое халявное, что они могут сделать.
Это у одного компа, да?
Да, мы об этом и говорим. Да, если было бы с трех компов, то, пожалуйста.
Да, не, читинг все равно возможно разное.
Нет, ну, читинг. Да, но другой вопрос.
Чтобы не затролить.
Нет, ну, это из цикла, зачем это вам надо, да. Ну, вот.
Как это?
Ну, то есть, чтобы тебя потом не затролили, да?
Да, потому что нет, читинг тут два момента есть. Во-первых, как бы, найдут, сделайте читинг, тебя забанят.
Вполне вероятно, что пожизненно. Ну, вот, и зачем тебе это надо?
Вот. А то тебе, не, просто тебе еще в следующем семестре зачет по ACPC курсу получать.
В следующем.
В следующем. Ну, как всегда, тут просто фишка, да.
Особенность программы заключается в том, что, видимо, в весеннем семестре как бы есть возможность запускать вот этот вот курс.
Да, еще особенность программы в том, что ACPC курс примерно никак не связан с возможностью участвовать в ACPC.
Ну, да, нет, не связан.
Но другой вопрос, что, как ты думаешь, захотим ли мы, чтобы этот курс проходил человек, который заведомо в ACPC участвовать не будет?
Я думаю, что таких людей процентов 50.
Нет, нет, почему нет.
Просто все участвуют.
Нет, это неправда, нет. Участвуют в ACPC все, другой вопрос, как бы, какие цели они ставят, до какого уровня дойдут.
Потому что я же думаю, надеюсь, что у тебя…
Какие цели? Получить бонусы к экзамену?
Ну, не знаю, ну, я думаю, ну, мне кажется, у тебя цель все-таки чуть повыше, наверное.
Все-таки есть подозрение, что, наверное, тебе хотелось там съездить на полуфинал, например, да?
Хотелось бы.
Ну, вот.
Пить или пить?
А, вот.
Зачем вы здесь?
Да, что-то…
Пить или пить?
Вот так.
Я пытаюсь, но у меня не получается.
Я пытаюсь, но у меня не получается.
Так, ладно.
Так, ребят, все.
Так, тишина, давайте, видимо, возникает вопрос по алгоритму, а мы так забалтуемся.
Перерыв, в принципе, действительно, время приходит, это да.
Нет, ну, а что тут?
Ну, давайте, собственно, тогда уж минкосты добьем уже.
Потому что, в общем-то, близко.
Значит, смотрите.
Фишка тут, на самом деле, следующая.
Да, то есть, на самом деле, как теперь искать максимальный поток минимальной стоимости?
Подожди, я правильно понял, что у нас, если не целочисленные ребра, не гарантировано даже, что алгоритмы становятся.
Так, если не целочисленные ребра, то что?
То не гарантировано даже, что алгоритмы становятся.
Да, именно так.
Вот.
Как и везде.
Ну, вот, ну, не везде, а просто, да, вот.
Как во всех потоках, кажется.
Да, но не во всех, это называется просто.
У нас один поток.
Денис.
Денис, кажется, тоже ломается на...
Нет, нет, нет.
Нет, в квадрате, нет, у Дениса четкая симпатика в квадрате, мы это доказывали.
А, он просто не найдет, видимо, оптимальный на нецелочисленных.
Там просто точно была же проблема.
Нет, там с точностью никакой проблемы нет.
С точностью у меня могли быть проблемы, что мы там, что в целочисленных сетях мы могли бы там оценивать как-то по-другому.
То есть там более круто.
Нет, в смысле, с дробными ребрами разве Денис нормально работает?
Абсолютно, абсолютно, абсолютно.
То есть просто стандартный Денис за В квадрат Е обрабатывает сколь угодно дробные ребра.
Ладно.
Так что вот, так что можно пересмотреть запись.
Да.
То есть равна, как Эдманскарпы кушает и там все вот эти проталкивания предпотока там и так далее.
То есть никаких проблем.
Вот.
Все эти алкоголики, никто из них нигде не подразумевал, что пропускные способности ребр бывают нецелыми.
То есть, наоборот, обязаны быть целыми.
То есть все они, то есть там никаких проблем нет.
Ну как бы, по яте там блокирующего потока, там блокированного ребра и так далее, они от этого не зависели.
Вот.
Так вот.
Итак, пришло время.
О, а где Сева, кстати?
Не будет Сева.
Не будет Сева, а что случилось?
Он формалки делает.
А, а ты сделал?
А я не делаю.
Ну хорошо, ладно.
Ну формалки, так формалки.
Ладно, субавтомата не будет, так что формалки сделаем.
Пока что по формалкам мы написали сильно больше кода, чем по алкоголам.
Ну, да.
Так, ну ладно, давайте уже добьем.
Так, ребят, все.
Так, ребят, я тоже люблю поболтать, но как бы давайте все-таки время не тратить.
А то действительно, что-то уже многовато сидим.
Вот.
В пустую смысле, многовато сидим.
Вот.
Значит, теперь давайте думать.
Например, максимальный поток минимальной стоимости на СТ.
Ну вот тогда как мы это можем делать?
Ну, оптимально, ну, во-первых, да, здесь придется, к сожалению, оговориться.
И сказать, что, конечно, это мы будем делать только в сети, в которой изначально циклов отрицательной стоимости нет.
Вот.
Ну вот, то есть, предположим, что у нас такая задача.
Найди максимальный поток минимальной стоимости в ситуации, когда циклов отрицательной стоимости нет.
Как тогда это сделать?
А очень просто.
Потому что, ну, то есть, будем делать абсолютно тот же.
Ну, то есть, помним, как свести задачу к циркуляции, да?
То есть, напомним, мы забабахивали тут вот это ребро с пропускной способностью плюс бесконечности и стоимостью минус бесконечность, да?
Тогда что мы делаем?
Ну, тогда идея такая.
Ищем циркуляцию.
Ну, как мы будем искать циркуляцию?
Идея такая.
Давайте сначала добавим в граф, то есть, возьмем нулевой потенциал.
Нулевой.
И добавим туда все вот эти ребра.
То есть, заметим, что ничего пускать не надо, потому что ничего не найдем.
То есть, можем даже просто добавить эти ребра в граф, и все.
Потому что мы точно знаем, что циркуляции циклов их будут сказать на стоимости нет, да?
А дальше мы начнем добавлять вот это ребро, ну, типа, по одной единичке, ну, или по сколько там надо, да?
Понимаете, да?
Но тогда по факту, то есть, что вам нужно будет?
Получается, на каждом шаге вы будете делать следующее.
Вы будете искать кратчайший путь от СТ, и по нему проталкивать поток, правда?
Ну, и запускать его сюда.
И будете это делать так, до тех пор, пока поток не сойдется.
Понимаете, да?
И к чему нас это приводит?
Ну, вот.
Ну, то есть, это приводит к тому, что к нашему официальному шагу.
То есть, как ищется максимальный поток минимальной стоимости в графе, в котором изначально,
по крайней мере, нет цикла в отрицательной стоимости.
Все.
Значит, мы просто тупо ищем поток методом Форда Фолкерсона, но просто на каждом шаге находим путь кратчайшей по стоимости.
Да, нам плевать, сколько мы по нему протолкнем, главное, чтоб больше нуля.
Там один, там, одна десятая, там, я не знаю, один делить на корень из двух степени сто пятьсот, там, не принципиально.
Главное, чтобы больше нуля.
То есть, мы еще раз сказали, что любой путь,
между ширами проходит по ребру ТС?
Нет.
Нет, по ТС, кратчайший путь от ЭСТНВ.
Ну, нет, мы сказали так, что в каждый момент времени все циклы отрицательной стоимости будут проходить по ребру ТС.
А для того, чтобы найти...
Ну, потому что...
Изначально тут циклов нету, но дальше структура алгоритма говорит, что дальше их тоже не появится.
А вот ребро оно перманентно добавленное.
Оно? Ну, реально, ну, как сказать, что такое перманентно добавленное?
Ну, в плане, мы его добавили, до начала работал алгоритм, условно, да?
Ну, и то мысленно, потому что реальности мы этого ребра, естественно, строить не будем.
Ну, реальности, мы же они хотим обосновать, да?
Да, ну, а видите, что мы его вставили и ищем минимальную циркуляцию.
Ну, у нас...
А так как у него стоимость минус бесконечность, то минимальная циркуляция подразумевает, что мы по этому ребру пустим столько потока, сколько вообще возможно.
Ну, у нас же может быть, например, в какой-то момент мы добавляем очередное ребро, и вот это конвалент связанности не связанности с СТ.
Нет, тут фишка такая, мы это ребро добавляем в конце, то есть сначала мы эти все добавим, потом вот это.
Ну, тогда, то есть сначала, ну, вот мы хотим найти циркуляцию, да, максимальную?
Нет, ну, в таком графе да.
В таком графе да.
Мы говорим, что...
Ну...
Я не понимаю, почему обоснованно говоришь, что мы каждый раз очень кратчайший в пути засыпая.
Потому что, смотри, ну, давай так, еще раз.
Как у нас устроен вообще алгоритм поиска минимальной циркуляции?
Он говорит нам так, изначально у нас ребра вообще нет, мы добавляем ребра про одному, и при добавлении, что мы делаем?
Проверяем.
Но как проверяем?
Не просто так, мы добавляем ребро, и из конца в начало ищем кратчайший путь.
Проверяем.
То есть, если с этим кратчайшим путем, если это кратчайший путь плюс ребро не образует циклу отрицательного веса, то мы ничего не делаем.
А если образует, то мы именно по этому пути и ребру, значит, проталкиваем поток.
И вот, и наука у нас сумела показать, что после этого все в порядке.
Итак, теперь еще раз, а теперь задача.
Наша задача – найти максимальный поток минимальной стоимости в сети, в которой циклов отрицательной стоимости нет.
Если цикл отрицательной стоимости мог быть, то у нас вот та синтетика, которая…
Ну да, то придется вот так делать.
Тут уже ничего не поделаешь.
Но если только там структура задачи не подразумевает, что вы эти циклы отрицательной стоимости как-то быстрее найдете.
А, мы предположили, что в сети нет циклов.
Да, мы предположили, да.
И тогда получается…
Нам вообще не выгодно брать.
Сейчас, что из этого следует?
А следует из этого… Я сразу сформулирую, что.
Потому что дело в том, что алгоритм – это алгоритм абсолютно все равно, в каком порядке мы ребра добавляем.
Поэтому почему бы там сначала не добавить все вот эти ребра, а потом в конце добавить это?
А, то есть когда мы добавляем эти ребра, у нас каждый раз циркуляция ноль.
Да, то есть минимальная циркуляция ноль, потому что там никаких циклов там нету, которые бы нам…
А после этого мы просто вот так тупо делали.
Да, а после этого мы пропускаем поток циклы только через это ребро и проталкиваем их через кратчайшие пути от S до T.
И получается у нас какой-то…
То есть работает это, получается, за…
Ну, часто это пишут что-то типа модуль этого F на либо VE, либо E лог V.
В зависимости от того, потому что кратчайший путь можно в ту…
В общем, там без потенциалов просто пихать форда Белмана.
И часто это заходит.
А можно на самом деле забабахать потенциалы, если хотите ускорить.
Ну, правда, чтобы забабахать потенциалы, видимо, там хотя бы одного форда Белмана в начале вам пустить, конечно, придется.
Но, правда, есть еще приятная мелкая оговорка.
Дайте еще какая.
Помните, мы говорили о том, чтобы построить новый потенциал, вам нужно найти расстояние и с остальными вершинами пошаманить.
Так вот, заметьте маленькую приятную вещь.
Если вы от Элс в какой-то момент не дотянулись до какой-то вершины, то вы до нее не дотянетесь никогда больше.
Да, у нас в одном из первых занятий по потокам было там…
Мы доказывали, что если вы забабахиваете форда Фолкерсона в любом виде и в какой-то момент выяснилось, что вы, например, от вершины не можете дойти до Т,
то у вас сейчас нет пути от вершины до Т, то вы от этой вершины до Т, этот путь больше и не появится никогда.
Ну и от этой вершины на самом деле тоже доказывается аналогично.
То есть это просто к чему я? Это я к тому, что, в общем-то, когда вы тут забабахиваете новый потенциал, вы там об те вершины, то есть можете вообще не заморачиваться.
Просто есть там потенциал плюс бесконечность, ну и начхать. То есть все равно вам это не понадобится. То есть вам этот потенциал нужен только, чтобы качайшие пути найти.
И делаете вы это до тех пор, пока от С до Т качайший путь есть.
Да, то есть там надо очень, конечно, еще раз подчеркну, аккуратно, конечно, рассчитывать, в какой момент вы ищете расстояние,
отличать приведенное расстояние от реального, потому что новый потенциал – это реальное расстояние, а не приведенное относительно чего угодно.
То есть такой вот маленький технический момент, но если вы прям это четко понимаете, то написать вам это труда составит ровно столько же, сколько написать вам труда,
сколько составит вам написать труда, написать адекватную дэйкстру.
То есть у нас итоговая симпатика – это ВЕ плюс модуль Ф на дэйкстру.
Да, ВЕ плюс модуль Ф на дэйкстру, если вы пишете это с дэйкстрой.
Нет, понятно, с точки зрения нашего курса официальная симпатика ВЕ плюс модуль Ф на Е плюс В лог В.
Естественно, да, потому что в нашем курсе куча фибоначей есть.
Да, в реальной жизни не особо, но тем не менее, вот такая асимптотика.
Причем разные случаи бывают, причем, видимо, следующую ситуацию мы после перерыва рассмотрим,
потому что, да, асимптотика выглядит страшно, но, например, есть ситуация, в которой она может выглядеть не страшно.
Это если мы ищем максимальное просочетание минимальной стоимости.
Или если быть точнее, совершенное просочетание минимальной стоимости.
Ну, представьте себе, у нас есть полный двудольный граф,
и у каждого ребра есть стоимость.
Надо найти совершенное просочетание минимальной стоимости.
Внимание, вопрос. Если вы стандартным образом сведете задачу к потоку,
какую асимптотику вы получите? Венгерский алгоритм тоже решает эту задачу.
Вот чуть позже скажу. Сначала скажите, в эту задачу асимптотику умеете решать.
Венгерский поднимается в куб. А этот? Нам, наверное, не нужно делать ВНМ.
Так, а если в модуле ФТВ? Так, а здесь чему равно? ЕТВ квадрат, но ВВ у нас нет, кажется. Ну да.
А, стоп, ЕВ квадрат. У нас тут можно не бабахать. Ну, там можно, на самом деле, забабахать тупую до
экструза Е плюс В квадрат. Да, такая асимптотика тоже есть. В результате на самом деле парадокс.
То есть с этой точки зрения, видимо, теоретического смысла на самом деле
венгерский алгоритм не имеет, потому что он будет решать ту же самую задачу за ВВ куб.
Отлично, я как раз его не знаю. Да, может в том числе и поэтому. Но, скажем так, алгоритм красивый.
Думаю, изобретался, видимо, ранее. И константу имеет, конечно, получше, чем, если вы будете там
Минкоста с Дэйкстрами с сетями писать. Поэтому, все-таки, считаю, что изучить этот алгоритм
смысл стоит. И мы этим займемся после перерыва. Значит, какую задачу мы сейчас будем решать?
Сейчас мы будем искать, ну давайте для простоты скажем, совершенное парасочетание в полном двудольном графе.
Ну то есть мы будем считать, что у нас с вами есть по N вершин в каждой из двух долей двудольного графа.
Тут N вершин, тут N вершин. Ну понятно, это доля L, это доля R. И граф полный. И у каждой вершины, у каждого ребра стоимость.
Ну, сразу оговоримся, что если граф не полный, то, в общем-то, не сильно принципиально, потому что мы можем считать, что
стоимости всех несуществующих ребер равны просто бесконечности.
Ну и наша задача найти совершенное парасочетание минимального веса.
Ну понятно, что найти просто парасочетание тривиально, но... ой, куда это я поверил.
Ладно, значит, смотрите. Идем дальше.
Значит, идем, соответственно, дальше. Ну вот, спрашивается, как же мы это будем делать?
Ну вот, на самом деле, да, хейтлайнером сегодняшнего занятия является понятие потенциал в разных его интерпретациях.
Вот и сейчас мы тоже введем даже целых два потенциала.
Смотрите внимательно. У нас будет потенциал U и потенциал V.
Вот, ну не перепутайте, вот эту R и вот эту R, да?
Вот.
То есть это мы будем называть потенциал.
О, понятно?
Вот.
U-потенциал и V-потенциал.
Да, просто U-потенциал для левой доли, а V-потенциал для правой доли.
Да, а еще у нас будет понятие A.
То есть...
Да, мы сейчас обсуждаем венгерский алгоритм.
Да.
Да, если что, мы будем считать, что вес ребра, соединяющего и-тую вершину левой доли и житую вершину правой доли, это A, и T, G, D.
Вот, понятно, да?
Вот.
И у нас будет invariant.
Значит, для любых I, G верно, что A, I, T, G, T минус U, I, T минус V, G, T больше либо равно 0.
А нам нужен минимальный вес или максимальный?
Минимальный.
Вот.
Это мы уже начали решать.
Нет условия задачи, найдите просочетание минимального веса.
Ну, максимальное просочетание минимального веса.
Вот.
Но для решения этой задачи мы будем использовать вот такие какие-то потенциалы у V,
которые изначально чему-то равны, а постепенно будут модифицированы.
Ну, например, самое простое, кстати, сказать, что мы без особого ограничения обществе можем считать, что все ребра не отрицательные.
Можем такое сказать?
Ну, конечно, можем, потому что мы, если они отрицательные, давайте ко всем ребрам прибавим одну и ту же константу.
Потому что величина просочетания все равно...
Да, потому что у всех совершенных просочетаний тогда все равно будет один и тот же.
Да, потому что у всех совершенных просочетаний тогда от этого величина увеличится только на вот эту константу умножить на n.
Все.
Итак, значит у нас будет какой-то потенциал, но не просто, мы у него будем, то есть мы будем как-то этот потенциал модифицировать,
но поддерживая, вот мы расписываемся в этом, будем поддерживать вот такой вариант.
A i t j это стоимость ребра.
А у нас ребры есть между любыми для вершинами?
Да, у нас полный граф.
Ну, если и не полный, то значит для остальных ребр считаем, что плюс бесконечности.
Стоимость.
Да, то есть у нас цель именно совершенное просочетание найти,
хотя, в общем-то, если у вас есть задача найти максимальное просочетание минимальной стоимости,
то как бы это тоже к совершенному так сводится, потому что понятно, что плюс бесконечности и захочется взять как можно меньше.
Вот, любыми средствами, поэтому это все одно и то же.
Итак, ну как же нам это поможет?
Ну, вариант, конечно, вот такой, и теперь у нас тогда мистическая цель.
Да, во-первых, еще одно важное определение.
Ребро.
Значит, какой-нибудь i j.
Жесткое.
Вот тут сразу вводится понятие, что ребро жесткое, если, если вот это вот a j minus u j minus v j равно 0.
Значит, на самом деле, в терминах такого варианта и такого определения на самом деле нашу цель можно смодифицировать так.
Нам нужно подшаманить потенциал и найти совершенное просочетание на жестких ребрах.
Вот такая неожиданная идея.
То есть я вот просто давайте сразу сформулирую утверждение.
Совершенное просочетание на жестких ребрах.
Совершенное просочетание на жестких ребрах.
И скромное.
Непонятно, почему можно подбрать потенциал на любое, непонятно, почему.
Да, безусловно.
Но я в этом утверждении этого не утверждаю.
Да.
Я утверждаю только одно.
Предположим, что у нас наш потенциал как-то подшаманился так, что на жестких ребрах нашлось совершенное просочетание.
Но еще непонятно, почему существует LV-штен вариант?
Нет, он всегда существует, потому что если мы сказали, например, что все веса не отрицательные, существует потенциал волевой.
Да, это как минимум.
Но если предположим, что как-то потенциал подшаманился как-то, и на жестких, относительно его ребрах нашлось совершенное просочетание.
Тогда я утверждаю, что это просочетание и скромное, то есть оно реально минимальная стоимость.
Почему?
Да просто потому, что если вы просуммируете, вот просуммируем вот эти нули по всем ребрам этого совершенного просочетания.
Что получится?
Ноль.
Ну, с одной стороны, получится ноль.
Просто потому, что на ideological
и
ront
więks السурд Mm
Вот мышцы были эффективнее в сумме А, но получается это всегда так.
Но если вы нашли на жестких ребрах, то получается это будет выполнено.
то есть конечно да это может быть непроизвольный потенциал то есть как вы отсюда следует что
получается что мы должны подогнать как-то потенциал так чтобы сумма всех потенциалов была вот этим
вот такая вот красота вот
вот поэтому значит наша цель искать просочетание на жестких ребрах ну на самом деле мы будем
пытаться логика будет что-то типа алгоритма куна но тем более в общем-то не далеко уходим
потому что кун мало того что венгар так еще и насколько помню причастен к этому алгоритму
вот кстати вот значит идея будет такая мы будем идти по вершинам левой доли и в каждый момент
времени считать что у нас и в каждый момент времени у нас будет какое-то просочетание на
жестких ребрах которые покрывает в точности пройденные вершины левой доли и какие-то непонятно
какие но вершины правой доли вот понятно и так как же мы будем обновляться вот пришла у нас
новая вершина назовем ее спрашивается как мы попытаемся добавить ее в просочетание конечно
запускаем dfs ищем из нее удлиняющую цепь ну как всегда ребра просочетаний смотрят справа налево
все остальные слева направо но единственное что мы делаем это ищем эту удлиняющую цепь
исключительно по жестким естественно ребра вот это просочетание оно на жестких
ребрах мы поддерживаем и все да просто оно покрыло вот эти первые векшины вот вот такая
идея вот понятно вот то есть просто запускаем dfs ищем удлиняющую цепь вдоль этой удлиняющей
цепи значит улучшаем просочетания и все хочется нам сказать почему нет почему может работать
потому повезет кстати и сработает а почему это может нет а что тут а что тут выполнять ну как бы
если у тебя он перед началом изначально он тебя выполнен что у тебя все ребра не отрицательная
потенциалы все равны нулю например вот а вот это уже вопрос и более того даже более глобальный
вопрос даже если оно так счит а почему длиняющая цепь вообще найдется более глобальный вопрос ну я
сейчас на это вопрос и просто скопом и отвеки ответа это конечно может и не произойти но тогда
идея очень простая смотрите тогда мы мы запускаем вот мы запускаем dfs и что-то обошли помните мы
уже недавно чем-то подобным кстати занимались то есть вот dfs у нас тут взял что-то там обошел там
какие-то вершины вот и так и будем называть ну давайте для просто там назовем l плюс r плюс
да а также у нас еще есть понятия там какие-то l минус и r минус то есть то что dfs не обошел да
как мы знаем ну то есть в r плюс у нас не допустим в r плюс не попало ни одного ни одной вершины
не из просочетания но это да из вот из вот этой вершины да только из нее и вот предполонит но
теперь выскакивает вопрос по нот почему dfs не пошел дальше да потому что гребра то есть но
просто видимо как бы ниоткуда из l плюс а видимо не ведут куда-то в новые вершины жесткие рёбра
правда понимаете вот да да важный момент dfs ходит исключительно по жестким рёбрам да ну
справа налево он ходит естественно вообще только по рёбрам просочетания да находим только по
может возникнуть проблема что мы там просто вот упираемся через этих вершин вот в эти все ну
то есть рёбра крыши ведут у нас полный граф но они все к сожалению куда он не ходит снизу
то есть те которые мы еще не добавили ну вот да так ну вот внимание вопрос что же делать
но на самом деле идея очень простая значит надо как-то пошаманить потенциалы так чтобы и старые
рёбра не убить и новые рёбра там собственно приведенные стоимости 0 появились но для этого
мы поступим следующим образом мы рассмотрим все вот эти рёбра которые соединяют допустим
l плюс с r минус да и найдем минимум и объявим его дельта вот давайте введем понятие дельта это
минимум стоимости так сказать рябра который ведет из из вершины из вершины и в вершину g но
при этом да вот я специально цветами выделил но и напишу прямо что и лежит в левой доле
тоже в l плюсе то есть вот и g лежит в минус понимаете логику да вот
значит теперь значит это такой вот дельта вот выяснилось ну выяснилось что это дельта больше
нуля ой за кост я обозначил что я обозначил да да да да да значит я имею ввиду шокер ну
куда кост это на самом деле что такое давайте я тут сразу напишу в качестве коста я имею
ввиду естественно а и т житая минус соответственно у от и минус в от же
тут у тут в вот ну ашки мы не трогаем а вот ушки и вешки наверное надо бы
ну так теперь давайте подумаем как бы пошаманить потенциалы так чтобы вот это
ребро нот чтобы вот это ребро оказалось ну левым все потенциалы за и плюс прибавить
ну давайте думать потому что в принципе да возникает идея да что можно например чтобы вот
это ребро превратилось в 0 все такие ребра там которые ну то есть все такие ребра у нас весом
дельта и больше да ну перд давайте их приблизим к нулю то есть давайте скажем то есть давайте
скажем что фор и лежащим в l плюс что мы сделаем значит уит а плюс равно дельта так ну что ж
уже неплохо замену вот новый хикает вопрос давайте подумаем что же произойдет теперь с
ребрами вы сейчас давайте смотреть значит l плюс r минус ну давайте вот просто все просто все
варианты выпишут спокойно дойдем не торопитесь пока давайте проверяем давайте чтобы просто
лучше понимать происходящее давайте поймем что у нас происходит если вот выполнили вот эту
операцию то есть заметим что здесь у нас получился не просто ока еще и нашлось хотя бы одно нулевое
ребро теперь да вот значит l минус r плюс вот ну что произошло с этими ребрами а тоже ок потому
что с ними не произошло вообще ничего равно как и с ребрами l минус и r минус да потому что мы
их просто эти доли не трогали то есть тут ок но вот остается только рассмотреть l плюс
r плюс то есть те ребра по которым у нас dfs ходил но тут возникают проблемы какие проблемы очень
простые что дело в том что у всех вот этих ребер получается приведенная стоимость тоже уменьшилась
на дельту но только если вот для этих ребер мы гарантировали что она была не меньше дельты
то для этих ребер такой гарантии нет более того как было правильно замечено ранее у нас есть
жесткие ребра которые вообще могли теперь поломаться что же делать как же исправить эту
поломку да совершенно верно 4g но это всегда придется такое делать да то есть vg минус равна
нет теперь давайте смотреть еще не погодить но давайте смотреть ну давайте так вот эти два
случая ну давайте смотреть но так и так перепроверять придется потому что да там что-то не сломалось но
по другим причинам значит по еще раз l плюс r минус так да все рассуждение абсолютно то же
самое l минус r плюс но здесь вес этих ребер только увеличился обратите внимание видите да нет мы
уменьшили потенциал следовательно приведенная стоимость увеличилась нет это я про l минус
r плюс ну да могли потеряться жесткие ребра соединяющие л минус ср плюс еще не испоросочетание
да такое могло быть потому что l минус да и да л минус ср минус ну как бы из l минус
ср минус как всегда как ничего не касается так ничего не касается и наконец l плюс r плюс
но здесь да веса этих ребер не поменялись причем это очень важно что не поменялись то есть это
означает маленькую приятную вещь что у вас во первых при таком изменении потенциала жесткие
ребра по которым прошел dfs остались таковыми понимаете да то есть они остались таковыми но
при этом у вас теперь из этого l плюс а есть еще появилось хотя бы одно ребро который ведет
вас во что-то новое это вот вот это вот ребро вот это вот такое дельта вот понятно но тогда
теперь идея отличная давайте запустим теперь с отрывом отметки и запустим у еще раз попробуем
найти удлиняющие цепи но это нас приведет к тому что все постепенно так бы осторожно да ты так
задаешь вопрос а на самом деле как бы от того что я рассказал до этого вопроса два года прошло
в реальности за интриговал но вот ну вот нет я расскажу про что произошло но пока вот давайте
добьем значит просто предлагать давайте еще раз запустим dfs и r плюс а как ель плюс расширится да
ну либо нашлась удлиняющая цепь может нам повезло либо расширился или плюс и мы повторяем эту
операцию но рано или поздно так как у нас расширится постоянно происходит расширение мы вынуждены
будем наткнуться на вершину не покрытую просочетанием удлиняющая цепь найдется
принятие аналоги там так вот давайте подумать какая симптомик у нас фактически до в вершин
в каждой мы запускаем куна за в квадрат но этого куна мы узнали в квадрат раз а сколько а
в нот а в раз получается и того получается в 4 но тем не менее это первая исторически версия по
медведи не 54 кого-то хотя ладно тут я тут я про год могу это могу обмануть собственно первая
версия придуманная какими-то двумя венгами вот но максимум через два года пришли два других
венгра возможно кстати среди них где-то притаился кум я не помню кстати среди кого он притаился но
по-моему ну где-то он там был рядом ходил нет мы запускаем нет кун просто в квадрат работает
ну да это же у нас в квадрат работает да вот но собственно пришли но пришли следующие два венгра
посмотрели это который сказали слушайте вы тут посмотрели на алгоритм и подумали слушайте а нельзя
как-то раз уж у вас тут старые вершины обошли вот по ним еще раз не бегать действительно
то есть нельзя как-то побыстрее но давайте думать как можно этот век четвертый оптимизировать
до хотя бы куба ну потому что у нас же есть с вами но вот у нас же есть куб на минкости
ну так к сожалению не сделаем забирай вперед но у меня почему-то мне ощущения которые тоже
лучше вот как бы лучше загуглить проверить что по-моему это все делось до того как вообще там
изобрели эти минкост и прочую радость если что вот значит смотрите давайте думать как этот
алгоритм превратить в куб но давайте посмотрим а что мы тут так долго делаем ну да мы запускаем
квадрат но давайте начнем с простого а что мы помимо дфс и делаем зава квадрат
вот как что мы делаем вот есть вот одна важная вообще принципиальная вещь
который был алгоритм и делаем зава квадрата нам от этого не очень
не почему потенциал мы пересчитываем за линию пересчитывать но если вы как бы в
явном виде не переписываете все приведенные стоимости то как бы вы это за лигию делать
вот да то есть обратите внимание как мы ищем дельт в топовом виде нам эту дельту
приходится реально за квадрат искать вот возникает вопрос а можно ли эту дельту
все-таки каким-то мистическим образом искать побыстрее вот какие варианты
сейчас нам хочется ее просто заново не искать ну да ну не совсем понимаете там набрал множество
ребер которые вы рассматриваете оно на самом деле как бы ужимается потому что поэтому как бы то есть
пришел пришел пришел пришел предлагаешь фибоначи это все запихать ой да ну просто если на каждом
шаге это делать то там это будет там что но отсортить тогда но как-то
но нет понимаешь тут проблема просто не очень понятно как ты их брать
просто ты по списку бежишь то у тебя вот какой есть минимальный ребро она находится где-то вот
здесь вы минус и минус внимание вопрос но ты что с ним делать ну то есть ладно допустим конкретно
на этой террации его надо пропустить но в будущем допустим у тебя обнаружилось ребро которое как-то
не проходит которое там вот тебе там не имеет отношения да ну да но просто тебе ну правда у
тебя эти ребра из этого списка придется как добавлять туда так и удалять ну вот какие-то
какие проблемы есть да но как-то ощущения шепал вот это как-то придется то есть это то ли хипами
как-то делать то ли еще потому что звать ребра как бы не подряд идущие вот нет тут идея как
бы сократить на самом деле себе в данном случае работу в раз можно попробовать гораздо более
простым образом вот каким образом да я в общем-то дот да в общем-то очень простым введем просто мы
будем поддерживать такую функцию как такой массив как так как она называется вот официально
называется мин же от же на самом деле я бы ее назвал конечно ну так ага нет ну не минует что по
сути да ладно давайте называть мин дельта а дж ну что это такое это минимум вот этого а и того
житого минус уитого минус в житого по всем и лежащим в l плюсе вот такая идея давайте на
каждой террации будем такую штуку штуку поддерживать да именно для второй доли
ну и здесь можно сказать что мы по факту мы ее будем поддерживать конечно только для
эрбинуса поэтому поэтому я это синий ким и пришел
вот ну во первых да заметить теперь приятную вещь что если у нас такая мин дельта поддержа
ну то есть давайте подумаем какие у нас так ладные расходы на то чтобы эту мин дельту поддерживать
да ну потому что во первых да хотя до первого про зачем нам такая мин дельта но очевидно
что на каждом шаге дельту такая штука позволит искать теперь за линию согласны остался только
вопрос как ее поддерживать но поддерживать ее тоже да но давайте посмотрим как ее поддерживать
очень просто если у нас появилась новая вершина в l плюсе да то в тот момент когда она появилась
в дф если мы можем пробежаться по всем ребрам из нее и попытаться это эту штуку обновить а еще она
меняется когда вот ну да но то да действительно там и то есть иногда еще меняется потенциал но
с другой стороны заметим маленькую приятную вещь что меняется он только когда мы кль плюсу и
плюсу примере там прибавляем что-то да то есть пода по сути это означает что вот этот минимум
просто изменится на одну и ту же константу а именно уменьшится на то что вы там прибавили
к потенциалу видите да вот то есть получается что да то есть у вас то есть получается у вас
теперь единственное что работает завет четвертый это дфс потому что все остальное вы делаете
завеку согласны вот но теперь вы чекайте просто чем же мы все это делали неужели мы можем сократить
сделать так чтобы у нас в дфсов каждый из которых работает завэ квадрат работали
суммарно не закуп но в плане мы очевидно те вершины которые посетили ну вот он да ну на
самом деле да действительно идея такая что давайте просто старые юзиды никуда не девать а вместо
этого если мы нашли что после применения потенциала у нас оказалось что мин дельта там равно нулю на
вершины так давайте во первых мы просто скажем так а какой у нее жесткое ребро а вот вот это вот
так то давайте предположим что дфс в этом месте пошел по этому ребру и прозапускаем дфс из этой
вершины вот то есть просто запускаем запускаем и все то есть запускаем тот же самый обход тогда
получится что сумма то есть дфсов все еще в но при этом оказывается что вы по каждой вершине эти
дфс и суммарно проходит не более чем по одному разу и получается что сумма получается в четвертой
сократилась до в куба нет но что потому что что мы делали то есть мы нашли просто мы сделали
абсолютно то же самое просто с двумя оговорками во первых мы дельту нашли зали просто из вот этой
штуки да а теперь заметили следующее что если мы теперь заново запустим дфс из у он по любому
обойдет все тоже самое да плюс еще как минимум вот эту вершину да тогда эта идея такая хорошо
эти вершины он обойдет причем напрямую да по тем же ребрам плюс он еще обойдет то что он обойдет
из этой вершины так давайте из этой вершины дфс и запустим не стирая старых пометок
а почему у нас не появится ребер и спами из уже посещенных а почему у нас в смысле не появится
ну в смысле почему ну почему когда мы поищаем вершину мы рассмотрим все ребра и больше никаких
от нее нет пародии нет стоп стоп стоп нет что еще имеется в виду нет мы просто говорим что вот
это раз мы эту вершину взяли значит вот то есть тут у нее какой-то реброс вот жесткое ребро здесь
значит дфс может дфс может по нему и пройти в принципе
да
почему не работаем нет ну не работаем но нет ну да в будущем но так это итерация
не один раз делается то есть мы как бы за все ли дфс из этой вершины и делаем то же самое
ну если конечно там мы не дошли до вершины без про сочетания в правой доле
ну вот обошли вот это вот все да так вот это левая вершина мы ее помечаем да мы все это
помечаем юзер да вдруг у нас после манипуляции из вот этой вершины добавится еще одно жесткое
но так так мы его и нашли вот вот это вот жесткое ребро добавилось и мы из нее дфс запустили то есть
мы запускаем дфс каждый раз когда у нас находится ну да так более того мы эту манипуляцию делаем для
того чтобы оно нашлось ну вот то есть мы смотрим какие жесткие ребра у нас появились ну типа того
да у нас могло появиться не вполне но просто тогда это означает что на следующей итерации вот
этой дельта будет равно нулю на самом деле то есть ты там просто сделал дельта умеешь
и нашел вот это жесткое ребро запустил дфс потом по остальным вершинам пробежался дельта все еще
но значит тут еще где-то жесткое ребро есть вот и так далее вот такая вот такая вот не очень
не очень хитрая идея то есть в общем-то кодится приятно и как бы практика показывает что по
сравнению с минкостом естественно она имеет то есть имеет преимущество в константе
ну да ну потому что в рамках того что дфс уже ранее обошел жесткие ребра остались жесткими
вот просто мы нашли вершину что дфс новый он бы прошел эти вершины плюс еще как минимум вот
это поэтому мы запускаем дф эти вершины не проходим а вместо этого запускаем не стирая
старых пометок запускаем дфс сразу отсюда вот ну там запоминает что мы в нее пришли по жесткому
нам еще важно что из-за плюсов и минус и из-за ну потому что ну потому что мы могли тогда сходить
не не не мы же не из-за справа налево мы ходим только по ребрам про сочетание и нам наплевать
на самом деле то есть может быть вот это жесткое ребро просто мы до него еще не добрались
не факт потому что может это но это может ребро вело в новую вершину относительно дфс а да
но из этой версии эта вершина в про сочетании которая ведет вот сюда то есть тогда по факту
то есть мы идем сюда и дф и пытаемся это тоже вершина для нас новая но вот и мы из нее там
дфс какие-то запускаем вот так что вот такая вот нехитрая ладно хитрая конечно немножко но
такая достаточно прикольная технология так есть ли тут какие-то вопросы нету хорошо
вот но на самом деле да в этом месте мы заканчиваем исследовать говорить о каких-то там потоках со
стоимости ами похожих задачах вот и возвращено и возвращаемся к задаче о поиске минимального
разреза внезапно да да да несколько но нам эти технологии устроена так что можно дойти хоть
какую-нибудь одно фишка просто будет в том что если у тех появилось одновременно несколько ты
нашел одно запустил из этой вершины дфс и просто будет факт что следующая дельта будет равна нулю
то есть просто потенциал не меньше просто из этой вершины спускаешься вот ну то есть
ты там конечно можешь пробежаться по всем вершинам и записать себе в очередь откуда
дфс надо запускать но это как бы не поможет вот то есть это такая локальность вот но да
разумеется вы можете его опять изгнать но это будет шлит но это будет лишь рецидив
прецедента дача сказал нам ну как быть ну читай да об этом подробно читайте в серии книг
полигатор и каменный философ как ведь да я ничего не перепутал такая книжка реально есть ну там
это там но там ладно трилогия там но я пока стираю да полигатор и каменный философ там
полигатор личные деревья мардионы и там 9 подвигов сена если вот очень рекомендую на
самом деле на эти просто такой очень просто добрая книжка с хорошим юмором
итак теперь еще ищем минимальный разрез то есть прям задачу мы сейчас можем сформулировать даже
без потока и в общем-то кстати решать мы ее тоже будем практически без потока задача такая дан
взвешенный не ориентированный граф но все веса не отрицательные да ну формально я должен
граф не обязан быть планарным конечно но ну что-нибудь такое задача найти минимальный разрез
спрашивается что как может показаться не хватает формулировки задач да казалось бы да
потому что действительно у нас понятие разрез обычно требовало и столько и столько а мы хотим
глобальные да но совершенно верно значит мы ищем глобально то есть это задача о глобальном разрезе
чем она отличается отличается вот чем то есть у нас графе нет никакого и столько и столько мы
просто хотим разделить вершины на две доли так чтобы вес суммарный вес ребер пересекающих этот
разрез был минимальным правда едино просто на абсолютно произвольные доли с и т вот то есть
они не пересекаются их объединение равно в но единственное что нам нужно ограничение на
это разрез это то что с и т оба не пусты но в противном случае понятно тогда минимальный разрез это
типа одна доля пустая в другой все да но мы только что сказали давайте еще раз подчеркнем что все
веса ребер не отрицательно это нам будет дожить и принципиально вот бабах ну или так вот
так что вот такая вот неожиданная ситуация вот ну здесь к сожалению сейчас будет немножко грустно
почему грустно потому что сейчас я выдаю просто сейчас я сделаю то что как бы не дай
как бы не в стиле в которой я не очень люблю я просто расскажу алгоритм просто докажу что он
работает а че так можно было но вот я не люблю потому что я люблю как бы рассказывать в том стиле
что как бы мы поняли какие идеи за ним стоят и как это можно вообще как это и смешные вещи
можно придумывать вот но это к сожалению не тот случай нет нет смотрите как-то один раз можно
нет смотрите как-то это придумать можно потому что авторы вот предлагаем вам но алгоритма алгоритм
значит алгоритм называется алгоритм штор вагна я сразу скажу да как по моему уже упоминали да
значит штор это мотильда штор это мотильда вот мотильда штор там и ну а да кто-то скажет
до композитор кто-то скажет голуля и тогда да да да и тогда нету надо нет а суть в том что думаю
вагнер это достаточно распространение германии фамилия поэтому тут называется шутить позже там
бесконечно долго вот поэтому это я просто упомяну для того что говорит что как бы алгоритм штор
вагнера то есть как бы правильно говорить алгоритм штор вагнера не штора вагнера а что вот так значит
этот значит он попробует нам найти этот глобальный разрез за а какой симптутику мы
вообще посчитаем крутой да так мы умеем в четвертой ноге каким образом так вот да самая
тупая идея давайте переберем пары вершин которые типа точно должны пойти по разным долям и
между ними найдем мин разрез максимально потом да то есть принципе это задача решается за я так
в общем случае напишу в на там max flow max flow search вот то есть принципе да потому что может
сказать что давайте вот эта вершина будет всегда в доле с ну а теперь переберем кто точно будет в
доле t и и вперед можно даже там не асимпатически оптимизировать это что давайте предположим
сначала что вот эта вершина будет в другой доле запустим поток потом мы типа сожмем в одну там
на меньшем графе запустим еще и так далее да но да но это не оскорение симпатическое так но
максимальный поток мы с вами умеем искать за какой симптотику за веку у нас чемпионская
симптотика с вами да да кстати да ограничение на целочисленность этих ребер нету если что
точнее нет сла численность вот поэтому мы умеем в куб там лада наука я надеюсь умеет ве ну потому
что может выяснить что наука тоже умеет только там сводчист только там целыми не отрицательными
там пропустыми способностями которые влезают в битность вашего компилятора так как всегда вот
то есть может быть просто честно я не проверял может там такая подлянка а может и нет ну вот но
неважно потому что даже если и так то это получится в купе а наша ставка веку да причем сейчас
будет очень простой по реализации алгоритм который вообще не требует ничего нет нет вот это алгоритм
такой просто берем первый вот говорим что это эту вершину мы называем с и она будет всегда в одной
доле в левой доле допустим теперь мы перебираем а кто будет в правой доле то есть тупо перебираем
и для каждой из них вот пусть она например она будет вершины т давайте найдем минимальный разрез
между вершинами с и т уже в старой терминологии да ребра не ориентированная да но это нам малину
не портила ну вот ну вот поэтому я говорю малину не портила ну да нет ну мы уже это ладно мы это
уже обсуждали давайте там как бы так ребят раз мы сегодня раз мы сегодня как бы хотим не
засиживаться до семи и вот что давайте не будем этого делать вот собственно ну в принципе вообще
говоря да все я тоже по идее заинтересован том чтобы не до семи сидеть вот так вот значит как
значит предлагается это делать значит предлагается сделать следующий берем первую попавшуюся вершину
назовем ее в ноль таки так но вот мы создадим из нее целое множество а
потом значит в ноль это произвольная вершина потом добавим в это множество вершину в 1
потом вершину в 2 потом вершину в 3 и так далее в общем в каком-то порядке эти вершины все
добавим и у нас появится мистическое утверждение вот мистическое утверждение о том что на самом
деле когда у нас было вот было множество какой-то момент было множество а единственное что в нем
не лежит это вершина в n-1 понимаете да так вот будет мистическое утверждение мин разрез между
vn-2 и vn-1 это вот это вот такая ставка между двумя последними вершинами которые мы добавили
нет это я просто сказал что нас ждет мы будем добавлять вершины в каком-то порядке но в каком-то
порядке но мы будем давлять таким хитрым способом что окажется что вот если что минимальный разрез
между двумя последними вершинами который последний добавили это разрез в котором в одну долю мы
отправляем последнюю вершину а в остальную а в остальное все нет я утверждается только вот это
что минимальный разрез между конкретными двумя вершинами это вот это поэтому дальше алгоритм
чего нет все что я утверждаю буду утверждать это то что вот у меня есть две вершины и
минимальный разрез между ними это вот это что конкретно но вот этот разрез в котором в одной
доле vn-1 то есть последние добавленные вершина а в остальном все остальное а в другой доле
все остальное последними двумя добавленными в n-2 и vn-1 вот ровно такой мы это будем точно знать
потому что если мы это точно знаем ну потому что смотрите абстрактно так потому что вот
предположим что у нас есть черный ящик какой-то да который говорит который каким-то нам образом
сообщает так смотрите ребят вот есть вот эти две вершины вот эти вот разные дам так вот
минимальный разрез между конкретно между ними это вот это то есть на самом деле мы утверждаем
что всегда существует такая вершина которая минимальный разрез между ней между ней и и нет
это ну нет мы утверждаю что существуют всегда две вершины такие что минимальный разрез между
ними это разрез который отделяет одну из этих вершин от всех остальных да и то не правда да
да да нет правда нет точно утверждение существуют две такие вершины минимальный разрез между
которыми это разрез отделяющий одну из этих вершин от всего остального графа более того наш
вот этот алгоритм то есть мы будем выбирать вершины таким образом чтобы их в явном виде найдем как это
нам помогает ну давайте сразу глобально посмотрим то есть как я уже сказал то есть у нас есть какой-то
черный ящик который мог говорить так вот вася вот петя вот миноразрез между ними
какой вывод мы можем из этого сделать тогда у нас два варианта минимальный разрез тогда либо
вот этот разрез либо какой-то из разрезов у кого в котором вася и петя железобетонно с одной
стороны находится правда но тогда идея такая мы запомнили этот ответ сжали вася и петю в единое
целое и повторили алгоритм еще раз грешки сказал нет это не во четвертый потому что мы этот
черный ящик забегай вперед сделаем завод квадрат вот такова моя ставка не гадость
алгоритм шторм вагдера не путать и никакой гадости нет то есть классный алгоритм да но это не будет
кукарек ну ты знаешь ну да да да ну не знаю доказательный кукарек это как живой труп если
честно а тут пока не понятно но с другой стороны я алгоритм не доказал то есть я еще не рассказал
какие эти вешки беру так давайте так если у нас вот этот черный ящик внутри которого я эти вешки
беру сработает понятно что мы делаем в остальном вот так вот и так переходим в черный ящик на черном
ящике мы делаем следующее то есть смотрите так мы значит добавляем вершины в какой-то порядке но
как я уже сказал вершина в 0 фокусник говорит нам что вершина в 0 абсолютно произвольная и это
действительно так а вот остальные вершины выбираются по следующему принципу в и это это
аргмакс значит от у и а этого мы еще и можем проверить является разрез минимальным за получается
от но мы найдем по факту да мы найдем в разрезов и выберем с них минимальный так чтобы проверять ну
каждый вычисляем его величину заве хотя на самом деле мы там по-другому ее вычислять
будет но там ну плюс жатино оно же тоже за за от там сколько там в но как и будешь за от
в плюс всем я кажется вы его сделаете вот так вот значит упире у должно лежать в без аи того где
внимание аи-то это вот это вот объединение в 0 в 1 и так далее в и минус 1
что-то подозрительно как я выбираю максимум пар спросите вы да ну дело в том что я забыл
написать буковку да эта строчка тоже вызывает компилэшен эррор потому что что такое потому
что да да мы можем поверить что в это вес но у нас в это вес ребра а ребро соединение не
может соединять вершину и множество да но мы должны просто это сказать в явном виде то есть
есть у меня есть какие-то то есть как бы если у меня есть вес и какое-то под множество б там
б это вот под множество да то конечно же мы просто скажем что это сумма w от v и б там так сказать для
всех б лежащих в б все более того аналогичным образом я могу и там w между б там множеством
б и множеством ц объявить ровно тем же способом то есть просто сумма w от б ц где там б лежит в
б ц лежит но это мне кажется просто это у нас будет достаточно удобно почему ракмакс по всем
ю а ю не используется форма лиформы используется потому что я очепятался вот и на самом деле здесь
надо писать у спасибо за вопрос вот это называет компилэшен и все остальное я бы сказал так и
это тоже да вот отлично вот то есть вот такая штука то есть получается следующее нас каждом
момент будет будет товаре то есть такое множество а мы будем смотреть на остальные вершины и
смотреть и смотреть и находить вершину которая связана с множеством а точнее с тем что чем
оно сейчас равно максимально сильно по именно сумме весов да но что максимально сильно можно
но дабл я двух вершин это с это вес ребра между ними ну или 0 если такого ребра нет
да можно считать что без особого не серьезности что граф полный чего да мы теперь то есть теперь
это мы уже полностью описали алгоритм так не давайте сейчас ответим на более простой вопрос
за костюм точку можем это реализовать тут как бы не наврать сейчас ну как и всегда
один так кажется все можно кажется все за квадрат каким образом ну просто
ну практически да можно делать отсылку просто на алгоритм дейкстр на самом деле
да ну или так да ну как угодно всем сюда суть одна для каждой вершины мы эту сумму в явном
виде поддерживаем когда но вершина добавляется множество а мы пробегаемся по всем ребрам из
нее и обновляем даблы то есть принципе суммарно это работает за в квадрат плюс е вот когда при
большом желании пожалуйста может то есть в принципе дай этот в куб можно реализовать в итоге за
ве плюс в квадрат лог в если очень хочется ну на самом деле зачастую это лучше ну да причем
да настолько сильно что конечно мы идем и пишем кучу фиба начи да ну тут уже зависит от того
насколько нам это надо да и насколько константа куча фиба начи перевесит все плюсы да вот но
суть одна но потому что суть в том что вы но суть то что вы все эти все все все вершины
недобавленной ва будете хранить в куче на максимум по вот этому параметру и каждое
прибавление тогда будет приводить вас к так сказать инкриски но инкриски на максимум то
же самое как диприски на минимум то есть это это для того чтобы у вас это делалось за от единицы
вот так что такая красота но теперь остается только действительно самое сладенькое самый ну то
есть как алгоритм понятия на реализация понятно да то есть остается только вопрос почему заявленное
мной утверждение вообще верно вот вообще имеет хоть какое-то отношение к этому происходящим
вот честно говоря да в этом смысле очень было бы очень интересная конечно песня как это придумали
но доказательства звучит так смотрите давайте я так скажу давайте для удобства скажу что с
это у меня в н-2 и т у меня в н-1 вот мы хотим доказать что минимальный разрез между то есть
хотим доказать что минимальный разрез между с и т это вот собственно т это так сказать в без
ст и т вот это мы хотим показать да так вот пусть с это какой-то разрез
между с и т вот вот такая вот радость а теперь смотрите значит делать так
значит давайте я сейчас сделаю так сейчас я вот это я так мысленно провел черту между разрезом
ц и пусть а вершины я буду записывать вот так сверху вниз в 0 в 1 в 2 в 3 упс в 4 и там вот
пум пум и только вот в конце еще мы знаем с и в конце т сторона не принципиально там может
быть с было здесь это было здесь но я вам просто заранее скажу это не сильно принципиально так
вот теперь внимание неожиданное определение значит вершина вы критическая если v и минус
1 и v и в разных долях c ну то есть переводи говоря мне интересует вершина вот это вот это вот это
и вот это и сама вершина т кстати критическая ну даже не кстати а просто это нам очень важно
нет мы не хотим мы не будем его лечить мы просто докажем что он не меньше чем то что нам надо
но то что нам надо то что нам надо представляется как ты здесь все остальное здесь это нам в идеале
так вот а теперь внимание ключевое утверждение ключевое утверждение мистическая совсем мистическая
нет рано чтобы его ввести придется ввести еще одно определение пусть у меня c в это множество
гребер нот гребер там каких-то там x игрок таких что x и игрок оба лежат в множестве давайте так
с и т назовем его значит а и т объединенное свои там ну и все в принципе понятно нам
вот ну то есть просто вот мы тут добавили дошли до этой вершины давайте посмотрим на вот разрез
так вот по большому счету так вот мы сейчас будем доказывать мистическое утверждение если
вершина в это критическая то я утверждаю что я утверждаю что вес этого разреза
то есть вес этого цейтова то есть очевидно сумма этих ребер больше либо равно чем чем если бы
я тупо среди нот посчитал сумму всех ребер из выитого ваи ты
в ноль не критическая а ты критическая
ну то есть так вот смотрите если вот это выитая то как бы но тот сейта это все ребра которые вот
где-то здесь вот так теперь хочется сказать следующее что если мы докажем тут что по большому
счету нам осталось доказать только это утверждение если мы поверим в него то мы победили почему потому
что вершина т критическая а для вершины т как вот для вершины вн минус 1 на самом деле это
утверждение ровно это и значит что вес этого разреза больше либо равен чем разреза между
т и всем остальным да просто тут имейте ввиду что мы добавляли как бы вершины вершины вершины
и вот тут смотрели ребра которые тут появляются среди этих вершин но когда мы дойдем до т равная
вн минус 1 да то есть напомню что т у нас это вн минус 1 то тогда получается что вот это множество
это тупо множество всех вершин вот а ой я наврал все-таки вот знал же я тут что-то должен забыть конечно
что имеется ввиду не просто все ребра имеется ввиду все ребра разреза вот теперь логично да
да но да да верно но бессмысленно для первого такого и что она перепрыгнула нет ну для первого
неинтересно не для самого первого вот этого 4 доказать неинтересно потому что вот в таком
виде на самом деле вот эти две величины тупо совпадают обратите внимание у нас вот вершины
мы вот как-то упорядочили в том порядке в котором мы это когда мы а нет но сам ну нет это не вы это
это вот надо вот самый первый раз когда мы нашли критическую вершину да то есть первый раз когда
смена пошла то есть заметим что как бы ребра пересекающий разрез до этого момента и ребра
соединяющие в 4 со всем остальным это ровно одни и те же ребра с одними и теми же весами поэтому как
бы хуже но поэтому утверждение советов как вы уже догадались мы будем доказывать это утверждение
по индукции для всех критических вершин в порядке их появления понятно да вот
значит теперь делаем переход так ну ладно понятно лишь то как бы если мы доказали это
утверждение то мы победили да ну потому что да мы берем просто все разрезы да не понятно почему
по определению потому что мы говорим раз мы она потому что она не произвольна
эсперит последняя эсперит последняя да вот да важный момент поэтому как бы да и более того
то есть окажется что для этого разреза будет верно что сумма что вес этого разреза это больше
если бы ты просто там посоединяли со всеми остальными но если мы поверим в это утверждение
того будет критическое поэтому это будет так то есть поэтому все что нам остается
это поверить в это утверждение но чтобы доказательно поверить в это утверждение
чтобы доказательно поверить в это утверждение, оказываем
по индукции, по появлению этих эти 4 крышек, база,
как мы уже сказали, очевидна, теперь переход, жел был
разрез, мы тут шли-шли-шли-шли, шли-шли-шли-шли, и вот мы
наконец пришли в какую-то предыдущую вершину, в,
там допустим, пт, да, и вот после этого шли-шли-шли
по этой, нет, неправильно, тут у нас было впт, критическая
вершина, потом шли-шли-шли, и мы тут неожиданно пришли
в вq, и вп и вq это две последовательные вершины, предполагаем, что
для вп, то есть как бы предположение индукции, что w от вп и ap оказалось
меньше либо равно, чем w от чего, от c петтова, понимаете,
да? Вот, понимаете? Вот. Нет, у нас индукция по этому
индексу, да? Нет, не по количеству, то есть индукция такая,
мы это утверждение хотим доказать для всех критических
вершин, но мы это доказываем так, сначала для первой
критической вершины, которая вообще появилась, потом
для второй, потом для третьей и так далее. То есть, по сути,
индукция по порядковому номеру критической вершины.
А, у нас они идут сверху вниз как бы? Ну, это нет,
я, нет, потому что я их так нарисовал, я их нарисовал
сверху вниз в том порядке, в котором они появляются
в множестве a. То есть, напоминаю, это не рандомный порядок
вершин, это рандомная только v0, а все остальное, каждое
следующее, определяется жестко. Ну, единственное
только не жесткое, что если максимумов несколько,
выбираете любой. Естественно. Вот. Так вот, поехали. Предположение
индукции, что вот мы дошли до вершины p критической,
все хорошо, после нее мы шли, шли, шли, шли и бах, нашлась
следующая критическая вершина vq. Хотим? То есть, давайте
так и напишем. Хотим wq и aq меньше либо равно wcq. Тогда что?
Значит, давайте это доказывать. Тогда смотрите, а что такое
wcq? Это вообще, заметим, что, то есть, какие ребра вот
выше этих лежат? Ну, во-первых, это все ребра в cp, согласны?
Во-вторых, это ребра, соединяющие wq и все остальные, да? И aq. Ну,
все вот эти вот. Так, так, так, так, так, так, так, так,
так, так, так, так. Там пересеченная, так сказать, с другой долей.
Ну, давайте, ладно, давайте без ограничений общности
будем считать, что эта доля левая, а эта правая. Ну,
без ограничений общности, да. То есть, левая которая
свеку, а правая свп, да? Ну, вот. Ну, то есть, это у нас
действительно будет aq с, там, пересеченная с, действительно,
райтом, да? Плюс что? Плюс, ну, вот эти вот новые вершины
с райта и пересеченные. Ну, то есть, w из фактически
a, вот я так скажу, ap. Ой, не ap. Почему ap? Ap. И с множеством
в п, в п плюс один. Нет, опять не в п, а левт от ap. Хорошо,
да. Так. Или это не влияет? Сейчас. Если я нигде не набажил.
Хотя, ну, вот. Нет, ну, почему? Это должно влиять, по идее.
Так, левт, да? Так ap пересеченная с левтом. И, значит, множество
вот это вот, в п, в п плюс один, в у минус один. Вот. Кого учли?
Да, хорошо. Да, правильно. Совершенно верно. Так, отлично.
Так, ну, давайте теперь пытаться это как-то оценивать. Вот.
Вот. Ну, заметим на самом деле следующее. На самом деле, так, начнем
с простого. Начнем с того, что сократим вот это. И да, я не ошибся в интонационном
ударении. Или, ну, да. Ну, вот эти вот ребра я просто проигнорирую.
То есть я просто напишу, что это больше либо равно v от cp, плюс w от vq.
Нет, я еще пока ее не бахаю. Я просто говорю, что я просто убрал личное,
потому что оно не отрицательное. Здесь важный момент. Здесь мы пользуемся тем,
что у нас веса ребер не отрицательные. Далее. Это, ну вот, это больше либо равно.
А вот теперь мы бахаем предположение индукции и говорим, что это v от ap,
plus, значит, v от vq, значит, aq, и right.
Где? Нет, w просто функция w, это вес просто ребер между двумя множествами.
Другой вопрос, что, да, конкретно здесь мы следим, что эти все ребра пересекают
разрезы, естественно. Ну, у нас просто так получается. То есть, как видите,
я здесь соединяю vq с ребрами и вершинами какими-то предыдущими, но при этом лежащими в правой доле.
Просто я сейчас задумался, наверное, насчет того, не можем ли мы сказать, что w от…
Ну, если уж такое обозначение w, то, вероятно, не можем, но можно было бы, наверное,
сказать, что w от vq и aq пересечь с right – это то же самое, что w от vq aq, если бы это были ребры…
Нет, это не то, да. Но это не ребры. Ну, не-не-не, лучше не надо так определять,
потому что дело в том, что мы же ввели вот эту штуку, еще когда алгоритм определяли,
никакого разреза c какого-то произвольного у нас еще не было. Поэтому лучше не надо так делать.
Вот. А теперь смотрите. Здесь мы воспользуемся предположением индукции.
Предположением. Тут не отрицательность. Трицательность.
Вот. Тот предположение индукции. А теперь мы, наконец, воспользуемся структурой по построениям алгоритма.
Мы им воспользуемся, чтобы сказать, что w от vq и aq больше либо равно, чем w от vq и aq.
Плюс vq и, соответственно, aq, пересеченное с right.
Я утверждаю, что это теперь просто больше либо равно, чем w от vq и aq.
Давайте подумаем. А что это за вершины, которые находятся здесь и здесь?
Я утверждаю, что это в точности все вершины выше wq.
На самом деле да, потому что... Давайте внимательно посмотрим.
Ну да, по модулю того, что некоторые из этих вершин будут учтены по два раза.
В силу неотрицательности ребер мы пишем тут больше либо равно.
Смотрите. Что это за вес? Мы соединяем wq с вершинами ap, а также с вершинами aq, но которые справа.
Я просто не вижу, что изменилось между последней строкой и той, которая выше.
Вот тут p, а тут q. Давайте пожирнее.
Тут p, тут q. Вот что поменялось.
Итак, получается мы эту wq пытаемся соединить с ap и пытаемся соединить с вот этим вот.
А там в конце неравенство?
Нет, это неравенство почему? Потому что в ap есть также и вершины правой доли.
То есть все вершины выше wq из правой доли, они повторяются.
Но самое для нас главное, что все эти вершины покрыты, а других нет.
Поэтому мы с чистой совестью пишем больше либо равно.
Очень просто. Давайте вспомним, как wq оказалось на этом месте?
У нас здесь по предположению…
Нет, у нас алгоритм был устроен так. В какой-то момент множество a было в этом состоянии.
Первый ap и вершины добавили.
Мы искали такую вершину, чтобы вот это w было максимальным.
Это оказалось ap, видимо.
Следовательно, это… Но так как q было добавлено позже, то она тоже участвовала в этом.
Следовательно.
Так что вот такая красота.
То есть такая вот вредная, жадная красота.
К сожалению, не очень понятно, как это придумали.
Нет, ну догадки есть.
Нет, не любой, потому что бывают неверные кукарики.
Да, бывают, конечно, недоказуемые кукарики.
Ну да, хорошо мы поняли, что у нас вот этот разрез-то минимальный.
А дальше можно еще раз…
Да, отлично.
Теперь тогда у вас…
Тогда если возвращаться к глобальной задаче, то у вас два варианта.
Тогда ответ.
Либо который разделяет s и t.
И это вот он.
Либо разрез, в котором s и t железно лежат в одной доле.
Тогда как такие… Первый разрез мы научились находить.
А второй делаем очень просто.
Мы объединяем, сжимаем s и t в одну вершину.
Просто там объединяем ребра.
Если образовались какие-нибудь кратные, может быть, мы их даже там тоже объединяем.
А можно не объедеть, неважно.
И на оставшем графе из n-1 вершины и сколько там ребр повторяем этот алгоритм.
И так делаем до тех пор, пока у нас там не останется вообще одна вершина.
То есть теперь интерация одного этого же…
Да.
Ну n-1 даже.
Интерация вот этого вот.
Но это кохивая декстра работает за квадрат.
Поэтому суммарная кубка.
Да.
Так что вот такая красота.
Мы там говорили, что на самом деле w e плюс w квадрат 2 w e.
А просто как вы этот максимум будете находить?
То есть по факту идея такая.
Давайте для каждой вершинки вы будете вот эту текущую сумму хранить.
И когда у вас новая вершинка будет добавляться в множество a, вы будете релаксировать как бы.
Придется…
Да.
Ну это неважно.
Релаксация…
Ну суммарно мы будем релаксировать по е-ребрам.
Остается только сделать так, чтобы вы в раз доставали…
Надо в раз доставать максимум.
И чтобы он доставал…
И тогда идея такая.
Давайте все это хранить в куче фибоначчи на максимум.
Окей.
Ну вот.
Так как веса ребер не отрицательная, еще раз этим пользуемся.
То как бы в данном случае тогда эта релаксация будет за 1.
Вот.
Вот.
Но у нас остался неожиданный финал.
Вот.
Значит смотрите.
Какую последнюю тему хочется теперь рассмотреть?
Нет.
Все.
Последнюю тему на потоках.
Ужин.
Ужин.
Ужин нам не нужен.
Вот.
Нет.
Какая геометрия?
Нет.
Потому что мы теперь копнем дальше.
Это…
Нет.
Фишка так…
Это тот самый алгоритм, который ищет крочейшее расстояние
СВ плюс Е.
Ой.
Там расстрел тут еще.
Да.
Но.
Вот.
Не надо.
Это как бы…
Осталось куча времени до 18.30.
Ну вот.
Следующего дня.
О кучаса.
Да.
Не-не-не-не.
Там…
Ну давайте так.
Я сейчас начну, о чем мы будем говорить.
Потом, видимо, выдохнуть там все-таки придется перед
таким финальным запуском.
И после этого мы…
Два.
Да.
Я знаю.
Но смотрите.
Но сейчас…
Но я думаю, мне хватит максимум 10 минут для того, чтобы
описать, о чем мы ищем сейчас будет.
Потому что, смотрите, фишка будет…
Фишка будет сейчас достаточно эпическая.
Значит, фишка будет такая.
Потому что нас сейчас будет интересовать…
Вот хорошо.
Мы научились находить хоть какой-нибудь минимальный
разрез.
Так вот.
Теперь у нас будет такая задача.
А теперь я хочу отвечать на запросы.
В духе.
Данные две вершины.
Дайте мне, пожалуйста, минимальный разрез между ними.
Вот прям настолько хочу.
Там дерево какое-то.
Да.
Так вот.
И сейчас будет мистическая теория, мы сразу.
Мистическая, но простая, как выясняется.
То есть понятно, что в квадрат разрезов, понятно, что их
можно описать за у от в, суммарно в куб.
Но оказывается, я эти разрезы могу описать гораздо короче.
Вот у меня есть тут какой-то мерзкий граф, который там
как-то устроен.
Бла-бла-бла-бла.
Так вот.
Как устроены разрезы.
Так вот.
Идея такая.
Оказывается, существует дерево на тех же самых вершинах
с какими-то весами.
Надо просто взять какое-то дерево и заявить, что минимальный
разрез между, скажем, вот этой вершиной и вот этой
вершиной.
Это просто вот давайте прогуляемся, просто по сути минимальный разрез вот в этом дереве.
А что такое минимальный разрез в этом дереве?
Просто прогуляемся по пути и найдем минимум.
Тут начинается...
Начинается вопрос, а сфигали, простите?
Абсолютно правомерно сфигали.
Вот.
Но тем, значит...
Ну вот.
Какая-то вопрос больше насчет того, как мы на это дерево строим.
Так, нет, погодите.
Для начала, почему оно существует, почему это дерево?
И мы с этого и начнем, потому что, как это ни странно, очень просто ответить на вопрос, почему оно существует.
Смотрите, просто сейчас фантастика будет.
Потому что идея такая...
Да, ну просто в случае чего делаем ежати...
Тихо-тихо-тихо-тихо-тихо.
Кого?
Господи, еж это да, шедевр.
Сейчас еж, это в какой-то игре, это как вот это...
А, это в шахматах вот это вот, построение пешками, да, вот это, да.
Вот.
Да, наверно.
Соник играет в шахматы, ух-та.
Вот.
Так вот.
Значит, внимание.
Значит, идея очень простая.
Во-первых, давайте введем понятие F, от...
ФУВ, это, понятно, что стоимость...
Мин разреза.
Мин разреза...
Между У и В.
У и В.
У и В.
Начнем с мист...
Значит, мистическое утверждение.
F, от УВ больше либо равно минимума, чем из F, от УВ и F, ВВ.
Для абсолютно любого В.
Либо в одно идут то, или в другое.
Ну, логично, да?
То есть, как бы, логично, рассмотрим разрезы У и В, и они делятся на два типа.
Где W окажется в доле В, и где W окажется в доле У, правда?
И каждый из этих разрезов участвует в чемпионате на разрез там либо вот этой, либо вот этой.
Ну, отсюда, в общем-то, утверждение следует.
Сейчас.
Чего?
Ну, я не знаю.
Ну, я не знаю.
Ну, я не знаю.
Ну, я не знаю.
Да, минимум.
Именно минимум.
Это важно.
Так, стоп.
Как скажешь?
А, нет, стоп.
Что есть?
Сейчас.
То есть, мы говорили, что либо У отделено от W?
Либо этот разрез отделяет У от W, и тогда получается, что этот разрез, он значит
больше либо равен, чем минимальный разрез между У и В.
Да.
Либо этот разрез разделяет W и В, и тогда этот разрез
больше либо равен, чем минимальный разрез между W и В.
А у нас тоже, кстати, будут ребра?
Нет.
У нас тоже ребра.
Да, у нас везде ребра не отрицательные.
Да.
Ника, и все.
Вот, да, это важно.
Почему-то в этой науке как-то с отрицательными ребрами
работа почему-то…
Не задавалась.
Да.
Да, так лучше.
То есть, вот такое утверждение мистическое.
В принципе, отсюда можно вывести на самом деле более
крутую обстановку.
W1, W1, W2, W2, W3, и так далее, Wk-1, V.
В F собираем?
Да.
Да.
Ну, прямое следствие, да?
Ну, я тут, ну, подставлять просто могу.
То есть, каждую F, каждую следующую я заменяю на как-бы
минимум из вот этой F и как-бы следующей.
Ну, вроде похоже.
Вроде похоже, да?
Отлично.
Ну, тогда смотрите, какая же турна.
Значит, как вы этим воспользуетесь?
Весьма неожиданно.
Давайте мысленно создадим матрицу вот этих вот минразрезов.
Ну, формально это у вас там записывается, когда
вот так вот.
Ну, понятно, что, естественно, там на диагонали стоят,
что там стоит.
Ну, видимо, нули или плюс бесконечности.
Вот.
Так вот.
Сейчас будет такая неожиданная идея.
А давайте найдем в этом, то есть F можно воспринимать
как матрицу смежности какого-то графа, да?
Можно.
То есть давайте так теперь введем.
ГР это граф с матрицей смежности.
А теперь возьмем минус 100 этого графа.
Или там что-нибудь.
Почему минус 100?
Ну, захотелось.
А почему именно мин?
А что?
Макс.
На самом деле, да.
Так вот, пусть T это Макс Астов ГР.
Не, я, честно, это первый раз слушаю, но там Астов просился.
Ну, хотим же дерево получить, типа.
Логично.
Так вот, это, так вот, утверждение, внимание, утверждение.
Это оно.
Ну, вот остается понять почему.
Смотрите.
Вот, допустим, T это вот это вот дерево, да?
Вот, я тут рассматриваю вершины УВ, и тут у меня
еще какие-то вершины АВС, да?
Ну, там неважно, сколько вершин на пути, да?
И понятно, вес этих ребер, какой тут?
F от УА, F от АВ, F от ВС, F от ЦВ, да?
Ну, что нам, по сути, надо показать?
То есть, хотим, по большому счету, показать, что Минразрез
между УВ это в точности минимум между вот этими штуками,
да?
То есть, F от УВ больше, то есть, он в точности равен
минимума из чего?
F от, значит, УА, F от АВ, F от ВС, F от ЦВ.
Ну, а теперь заметим следующее.
Ну, чтобы доказать равенство, надо доказать, что оно больше
либо равно и что оно меньше либо равно.
Больше либо равно, ну, видно, да?
То есть, просто я вот отсылаю вот сюда.
А как доказать, что меньше либо равно?
Ну, оно меньше либо равно каждому должно быть.
Ну, оно меньше либо равно каждому.
Почему?
А потому что отсылка к данному заданию в прошлом
семестре.
Вспомнить бы формулировку еще.
А формулировка там была такая.
В миностове, вот, допустим, это миностов, да?
Тогда оказывалось, что если вы добавите сюда ребро,
вот возьмете какое-нибудь ребро, не изостово, то оно
должно быть больше либо равно, чем все, что здесь.
Потому что иначе это просто не миностов, да?
То есть, здесь для maxostova то же самое, только с другой
стороной.
Понятно.
То есть, как бы здесь отсылка к утверждению, здесь структура
maxostova.
Честно, оно меньше либо равно, чем любой разрез?
Честно, любой из этих товарищей.
Ну, потому что вот, да.
Ну, то есть, как бы f от uv, это как бы вот в том графе
gr, это как бы вот еще одно ребро, вот f от uv.
Но так как у нас максимальный остов, то получается, что
это ребро меньше либо равно.
Если бы оно было больше хоть кого-нибудь из них,
то, значит, мы бы вытянули то, что меньше, добавили
бы это, и получили бы больше остов.
Миша сломался, не стянул.
Похоже.
Да?
Так, это ты про что похоже?
Кому ответил, да?
Про себе.
Тихо, тихо, тихо, тихо.
Ладно, спокойно сейчас.
Потому что граф.
Ну, я назвал граф gr от слова graph.
Я не хотел его назвать g, потому что у меня f это матрица,
а g как бы граф.
Я, наверное, должен был назвать это g с индексом f.
Ну вот, но тут, да.
Вот.
То есть, таким образом, то есть, видите, вообще не сложным
образом оказывается, что такое дерево вообще существует.
И называется это дерево гомориху.
Это оно и есть.
О, познакомьтесь.
Это дерево гомориху.
Как его построить?
Ну, самый тупой способ его построить просто вот как
и сказали.
Давайте построим все.
Ну, это чекнуться можно.
То есть, в явном виде найдем все разрезы, и после этого
в этом графе за каким-нибудь честным примом найдем
max разрез.
Это будет работать за, тупой алгоритм будет работать
за v квадрат на max поток.
Ну, это чекнуться.
Ну, вот.
Ну, это да, многовато.
Так вот, последнее, что мы видим в этом, там,
последняя тема по потокам, это как это превратить в
вот.
Так что вот такая идея.
Ну, это вот то, что у нас.
Это видимо то, что нам хочется сделать еще сегодня.
Скажем так, сильно много не будет, поэтому, я думаю,
финальный перерывчик сделать надо.
Финальный марш-бросок.
Попробуем построить дерево гомориху за n поток.
Но для того, чтобы построить, нам, конечно, потребуется
кое-что подоказывать.
Каким образом?
Ну, ну вот.
Ну, идея будет весьма неожиданная.
Смотрите, ну, значит, делать мы будем так.
Значит, вот у нас есть целый жрав.
Да, в нем еще какие-то ребра.
Я возьму в нем первые две, там, две абсолютно первые
попавшиеся вершины и найду между ними минразрез.
Вот он.
После этого я буду это изображать вот так.
Вот у меня вершина U, вот у меня вершина V.
Вот, то есть у меня есть такие две метовершины,
которые я соединяю ребром, вот этим вот F от UV,
который я только что нашел.
Не знаю, как вы, а тут вижу две печеньки.
Ну, не волнуйтесь, ужин приближается, спокойно.
Тем более, что, видите, я благодаря этому тоже,
вот как вы можете заметить, что мы тут чуть-чуть
поперекусываем, да, не совсем хорошо, но я как бы
тоже этим щитом пользуюсь, так что.
Ну, сейчас уже нет, но вы увидели.
Так что, поэтому осторожно.
Значит, смотрите, значит, F от UV.
Значит, теперь дальше, что мы теперь сделаем?
Дальше мы возьмем, ну, в какой-то из этих долей,
чтобы хотя бы две вершины найдется, правда?
Идется?
Ну, вот.
Ну, если в графе было две вершины того дерева,
можно было и не строить, да.
Так вот, берем тоже две первые попавшиеся вершины.
Какие-нибудь вот X игр.
И находим между ними разрез.
Но находим не просто так.
Мне кажется, мы выигрываем с реальностью.
Нет, то есть, да.
Значит, смотрите, фишка будет следующая.
Сейчас будет сразу мистическое утверждение.
Вот пусть у меня X игр оказались в одной доле разреза.
Так вот, я утверждаю, значит, утверждение такое.
То есть, если вот эта доля A, а вот эта, допустим, A с тильдой, да,
то я утверждаю следующее.
Ну, вот.
Выгодно, ну, скажем так, если по-лимпиадному формулировать,
можно так.
Значит, выгодно брать такой разрез, такой X игр разрез,
что A с тильдой целиком лежит в одной из долей.
То есть, минимально это значит, что в любом минимальном разрезе между X и Y?
Нет, не в любом.
Более слабо, существует, да, существует минимальный разрез,
в котором вот эта A с тильдой целиком лежит в одной из долей.
Что-то бред.
Нет, не бред, а...
Нет, это не бред.
Бредом это не надо.
Понятно, почему.
Да, и почему, и почему.
А почему, понятно, там не самое тривиальное доказательство сейчас будет.
Почувствуй.
Почувствуй нашу любовь, да, так.
Хочется сказать что-то.
Почувствуй наш мир на разрезе.
Ну, типа я говорю.
Так, тихо, тихо, тихо.
Если мы возьмем путь в гомориху от X до Y,
и у нас F от УВ где-то скриво от него подвешено,
то у нас одно из по деревьев будет целиком сбоку от этого пути.
А если F от УВ между ними...
У нас же нет еще гомориху.
Так, спокойно.
Так, тихо, деревьев еще нет.
Так, нет, сейчас.
Мы знаем, что есть к дереву гомориху, но мы не знаем как его построить.
Да, ну вообще никто не сказал, что вот это ребро имеет отношение к дереву гомориху.
Да, это обидно.
Проблема.
Ну вот, какое-то.
Ну значит, смотрите, поэтому доказывать будем так.
Итак, жил-был разрез когда-то.
Вот.
Допустим, был.
Да, при нем.
Вот.
Вот жил один разрез, и вот есть минразрез между X и Y.
Вот.
Значит, и X и Y оказались в разных долях разреза, ну по определению разреза между X и Y.
Вот они.
И, допустим, без ограничений общности У оказалась в одной доле с X.
Вот.
Так.
Ну теперь я утверждаю.
Ну вот.
Ну вот.
А где же оказалась В?
Ну давайте предположим.
Теперь у нас есть два случая.
Тут пока случаев не было без ограничений общности, да?
А теперь случаи есть.
Давайте рассмотрим случаи, когда у меня В оказалась вот в этой доле.
И тут еще какие-то точечки.
Вот.
Значит, да, давайте в каждой из этих четвертей какие-то вершины есть.
На самом деле я хочу сейчас показать, что если я вот это вот перенесу вот сюда,
то хуже не станет.
Понятно, да?
В смысле?
Если я вот эти вершины перенесу сюда, то это тоже будет разрез между X и Y,
но его величина будет от этого не увеличиться.
Может, нам повезет и она уменьшится.
Сейчас мы встроим разрез всего грамма, да?
Да.
Да.
Значит, смотрите, вот у меня В оказалось здесь.
Значит, давайте думать.
Так, ну, во-первых, давайте эти четыре четверти как-нибудь назовем.
Ну, их назовем.
X большое.
Или как-нибудь еще их назовем.
Давайте X у.
Нет, ну, раз...
Ладно, давайте, чтобы буквы не путать, давайте так.
Нет, ну, с волной это нормально будет.
Знаете, как мы сделаем?
Это будет B, это будет C, это будет C с волной, это будет B с волной.
Теперь, смотрите, переносим, теперь мы можем сказать,
переносим вершины из C стильдой в B стильдой.
B стильдой.
Значит, тогда величина разреза, тогда стоимость...
Значит, стоимость разреза.
Ну, вот между X и Y.
Значит, она, во-первых, она была.
И была она равна тому, что я буду называть
WB C плюс WB, там, соответственно, C с тильдой, плюс W...
Что там еще?
B с тильдой C плюс WB с тильдой C с тильдой.
Понятно? Была она ровно такая, правда?
А стала она...
Ну, соответственно, тогда C против всех.
То есть, поехали.
Значит, BC плюс B с тильдой C плюс W...
Чего? C с тильдой.
Заметим, что у нас...
Да.
Ну да. То есть, хотим.
Значит, теперь смотрите. Хотим. Что мы хотим?
Мы перенесли C с тильдой внутри B с тильдой?
Да.
Поэтому как бы стоимость была такая.
То есть, хотим, чтобы то, что было, было больше либо равно того, что стало.
То есть, хотим BC плюс BC с тильдой плюс B...
Вот это мы хотим.
Хотим, чтобы это было больше либо равно, чем WB C плюс WB с тильдой C плюс WC с тильдой C.
Значит, шлёп-шлёп.
Как говорит уже известный вам классик? Уже же известный?
С первого семеста.
Да ладно.
В девятом ты точно.
Ну ты понятно.
Ну не знаю. Мне казалось, твой папа приедет с ним до знакомчатера.
Чуть дольше, наверное.
Я не мой папа.
Ну ладно.
Хорошо.
Ну ладно, я всё понял.
Так, ладно, всё-всё-всё. Ладно, не будем это обсуждать. Хорошо.
Вот.
Пойду с его девятым классом.
Чего?
Погоди, по-моему, когда он уехал, учился в девятом классе, тебя, скорее всего, на свете не было.
Он уже был знаком.
По транзитивности.
А это да.
Так, ну в общем такая вот радость.
Ну давайте так.
Мы хотим, чтобы у нас, в общем, это эквалентно тому, что ноль больше либо равно.
Минус b с тильдой.
Минус.
Вот так.
И плюс c с тильдой.
Да.
С.
С с тильдой, да.
Ну там порядок не будет.
Вот. Ну теперь у нас есть какая-то вопрос.
Действительно.
Откуда мы это можем действительно вывести?
Да, может я даже зря это написал на самом деле.
Знаете, давайте я все-таки по-другому напишу.
Все-таки давайте так.
А ведущий плюс какую-то особую нагрузку несет?
Ну просто, ну не хотелось стирать.
Ну как же мы это докажем?
Вообще, а чем мы можем вообще пользоваться?
Ну где-то же мы, наверное, должны воспользоваться тем, что вот этот вот разрез между u и v уже железно-минимальный, правда?
Ну где-то должны, да?
Ну вот.
А теперь возникает вопрос.
Чего не хватает для того, чтобы какое-то из этих слагаемых превратилось в разрез uv?
Ну слева нельзя.
Ну слева нельзя их соблюдить.
Ничего.
Слева нельзя их по-другому соблюдить.
А вот, ну давайте смотреть.
Вот этот вот разрез он что обедает?
bc против b с тильдой и c с тильдой, да?
Слева против b с тильдой.
Мы можем взять, сделать...
А, нет, можем.
Не можем.
Чего? Чего можем?
Что можем? Кого можем? Где можем?
Мы все можем.
Ну да.
Попрос, получится ли у нас?
У нас все получится.
Ну можно залезть на один квадратик храу, то есть взять b, c, c с тильдой.
Так.
И написать, что такой разрез меньше либо равен чем.
Больше либо равен.
Больше либо равен чем.
Так.
Давайте.
Знаем.
Говорим мы.
Знаем.
Что w b с тильдой c с тильдой.
Плюс w значит вот этого b с тильдой c.
Плюс w...
Чего там еще?
b с тильдой b.
Оно больше либо равно, чем w b с тильдой, плюс w b с c с тильдой, плюс w c b с тильдой, плюс w c c с тильдой.
Ну потому что эта величина какого-то разрезу между u и v, а эта величина минимального разрезу между u и v, правда?
Понимаете, да?
Вот.
Вот.
Ну так.
Ну что мы тут видим?
Шлеп, шлеп видим.
Еще шлеп, шлеп есть?
Ну разумеется есть.
Вот он.
Шлеп, шлеп.
Ну что как вам?
Еще раз что произошло?
Ну я написал вот это утверждение, которое мы точно знаем.
А откуда?
Потому что мы рассмотрели разрез между u и v вот этот вот.
Мы знаем, что он минимальный между u и v.
Но его величина равна вот этому.
Сейчас.
Вы четверное слагаемое уменьшили одно, чем...
Чем тройное слагаемое, в которое разрез проводит так в одной доле вот это вот, а в другой доле все остальное.
Окей.
Вот.
И смотрите, какое...
Чего?
Эта...
Эта величина разреза вот такого.
Ага.
Вот.
Вот.
Так что такое не нравится, мы точно знаем.
Но смотрите, что...
То есть мы это пошлеп-шлепали.
То есть из этого вывели, что wb с тильдой c с тильдой больше либо равно w c c с тильдой плюс даже еще что-то.
А доказать мы должны, что уже не равенство, только мы одно слагаемое из меньшей части перетащили больше.
Так это нам повезло, да?
Ага.
А если у нас v будет сверху, то такого, наверное, не будет.
Ну, такое не будет, будет другая.
Ну, просто другую там...
Не важно, что такое большой запас.
Нет.
На 2 vpc.
Ну, вот.
Ну, такая вот интересная листик.
Вот.
Так что...
Ну, в итоге получается такая вот действительно логичная мысль, что...
Нет, ну, какой запас?
Wb c тильдой, то есть...
Ну да.
Ну да.
Разница, то есть разница, это вот это вот.
То есть, видимо, теорема как раз о том, что либо вот этого, либо вот этого быть не должно в природе.
Но теорема, собственно, об этом вообще-то и говорит.
Вот.
Так что остается доказательство завершить, просто сделав вывод вот такой.
Сейчас еще раз к вам.
Мы...
Почему мы решили, что W находится там?
Почему на него?
Ну, потому что на самом деле мы рассмотрели один из двух случаев.
Второй случай остается в качестве упражнения.
Ну, идентичного.
Вот.
То есть да, это не совсем тот же случай, но...
Вот.
Так что вот ура.
То есть оказывается первая идея.
То есть на самом первом шаге оказывается, вот когда вы берете тут две вершины,
то выгодно на самом деле, то есть оказывается все вот это вот сжать.
Ну, просто сжать в одну вершину.
И после этого искать минразрез.
А мы же на самом деле доказали не то, что есть такой минразрез,
а то, что в любом минразрезе гарантировано так.
Ну, не совсем, не совсем.
Дело в том, что...
Нет, дело в том, что на самом деле тут какие-то важные слагаемые могут разацануть.
Ну, как это слагаемые?
Поэтому это означает, что может...
То есть среди оптимальных разрезов точно найдется тот, что нам нужен, вот хорошего вида.
Но могут быть именно разрезы плохого вида.
Если там перекинешь куда-то какую-то вершину, и вес не поменяется.
Вы сами сказали, что они ноль в точности, когда у нас пустое множество.
Если множество пустое, это как раз значит, что все вершины с одной стороны.
Нет, ну не совсем.
Нет, ну там да.
Ну с формулированным так.
Ну там понятно.
Основной случай, конечно, нам будет говорить, например, найдется какая-нибудь вершина,
которая никак не связана вот с этими.
Тогда куда ее кидать, в общем-то, неважно.
И тут как бы на равенство не повлияет.
Вот.
Но просто нам говорят, что можно...
То есть давайте просто все, что связано надо, видимо, придется пихать в одну сторону,
а там все остальные вершины, ну и не принципиально.
Вот.
Так что такая вот несильная штука.
Ну проблема, конечно, этой штуки в том, что надо точно знать, что куда переносить.
То есть, честно говоря, тут вот как бы нет такого,
что вот есть какое-то общее представление, из которого это следует.
Да, вот.
Ну типа не напишется с нуля, потому что нужно принести вот это слева направо вообще.
Нет, ну на самом деле просто нет.
Нет, идея простая.
Надо знать, что вот просто вот эту долю надо перетащить сюда, и типа будет не хуже.
Ну вот.
А дальше все вводится, потому что, во-первых, мы дальше честно записали,
что мы хотим доказать, то есть вот в терминах w.
А потом мы просто, а потом мы попытались просто воспользоваться единственным,
чем мы знаем про эти разрезы.
И у чуда оно заработало.
Да, и у чуда сошлось, да.
Вот.
То есть, если этого не помнишь, то есть можно как бы на ощупь там пытаться вообще разобраться,
что тут можно сделать, да, и там какие-то исследования вести,
но вот можно точно знать.
Ну как всегда, в статье как бы просто, да, утверждение, вот такое доказательство.
Вот оно.
Ну, как видим, доказательства на лицо.
Тут это спорить не с чем.
Вот.
Так вот.
Значит, давайте пойдем дальше.
Нет, тут как бы и да.
То есть, фактически тут два таких нетривиальных факта,
из которых после этого, собственно, следует победа автоматически.
Вот.
Ну вот.
Так что, смотрите, теперь идея на самом деле будет такая.
То есть, пришло время на самом деле сказать сам алгоритм, как он будет работать.
Так что, впрочем, я сейчас скажу,
поэтому если там где-нибудь на КлубФорсе случайно появится задача на это,
а такое бывает,
там как минимум одна задача на это есть.
Которая была где-нибудь F1.
Ну, естественно.
Ну, блин.
Чтобы до туда дойти, понимаете, нужно по-хорошему предыдущий порешать.
Ну, или быстренько эту написать и всех обогнать.
Вдруг вы там, ты там чемпион потоков.
Чемпион потока по потокам.
Колобур.
Вот.
Так.
Вот.
Значит, смотрите, идея теперь такая.
Второй шаг.
То есть, первый шаг алгоритма у нас вот две такие метавершины.
Теперь я сейчас сделаю из этих двух метавершин три метавершины.
Как я это сделаю?
Очень просто.
Я возьму две вершины из вот отсюда.
И распилю метавершины на две.
То есть, ну, просто найду, но при этом я сожму вот это остильное и прям башото единое.
Вот.
Да, прям вот возьму и сожму.
После этого найду минразрез между х.
Тогда у меня получится.
То есть, вот этот вот разрез.
Фх игрок.
То есть, у меня тут будет игрок.
Тут у меня будет х.
Тут какая-то бла-бла-блашка.
Тут у меня бла-бла-блашка.
Вот.
Ну, теперь спрашивайте.
Теперь у меня идея.
Я хочу вот эту метавершину остильной куда-то подвесить.
Куда я ее подвешу?
Ну, очевидно, туда, где у меня окажется вершина у.
Ну, без ограничения общности с х.
Вот.
Что?
Вот.
И вот у меня теперь текущая версия дерева выглядит вот так.
Ну, и как вы уже догадываетесь, я сейчас буду повторять эту операцию до тех пор, пока в каждой из метавершин мне останется по одной вершине.
Это очень странно.
Можете повторить, почему?
Ну, идея очень простая.
У меня была метавершина.
Так вот, смотрите, когда я ищу разрез между х и игрок, у меня с какой-то из этих сторон окажется у, правда?
Да.
Тогда я утверждаюсь, тогда эту вот метавершину остильной я подцеплю за тоже ребро f от uv к той из вот этих вот половинок метавершин, в которой оказалось у.
А, это то, что мы делаем, мы пока ничего не утверждаем.
Пока ничего не утверждаем.
Я ничего не утверждаю.
Все, что у нас до этого было, мы это вот все делаем неразъединенным кусочком.
Чего-чего-чего-чего?
То есть, если вот сейчас...
Да, при этом, когда мы это делали, остильной сжималась до единой вершины.
Я имею в виду, если мы сейчас будем пилить, мы опять просто одну из этих...
Да. Более того, сейчас я даже скажу, как это будет в общем виде выглядеть.
В общем виде это будет выглядеть вот так.
То есть, у меня в каждый момент времени у меня будет какое-то мистическое дерево.
Такое веселое, такое веселое дерево.
Я буду говорить так.
У меня в какой-то из этих метавершин, наверное, есть две вершины.
Вот допустим, вот здесь.
Так вот, у меня идея такая.
Я рассмотрю все поддеревья, которые получатся по удалению ее.
Значит, сожму их в единую метавершину.
Вот так это произойдет.
И найду минразрез между ними.
Получится вот что-то такое.
Но при этом идея будет такая, что каждая ребро существует не просто так.
То есть, я буду соблюдать важный инвариант.
Внимание, инвариант.
Для любого, если у меня тут есть какой-то реброс f, который равно f от uv,
то есть, это означает, что у меня в этой доле есть вершина u,
а именно в метавершине есть, а тут есть v.
И они обладают таким свойством, что минразрез между u и v равен именно вот этому весу.
То есть, я буду поддерживать такой инвариант.
Я не понимаю, вот вы тыкаете в две рандомных вершины.
Нет, это не рандомные вершины.
Я поддерживаю инвариант, что изначально у меня вообще одна метавершина, в принципе.
Нет, ну простые вершины.
Хотя нет, все тут гораздо проще.
Для того, чтобы понять, как алгоритм устроен, все еще проще.
Мы все это сжали до единой вершины, поэтому когда мы найдем минразрез,
мы посмотрим, в чью долю разреза попала вот эта штука, и это ребро подцепим именно к этой доле.
Это да, нет, я имею в виду...
Вот вы взяли две вершины в начале.
Да, первая попавшаяся.
Взяли ребро f в от u в.
Нет, не просто, я разделил граф...
Взяли минразрез f от u в.
Да, то есть, а стиль-то это не просто так.
В какой стати он вообще должен лежать в дереве гамарюху, как ребро?
Вы утверждаете, что оно будет в итоге лежать в дереве гамарюху, как ребро?
Будет, но я не сказал, что оно будет соединять именно в вершины u и v.
Чего?
Нет, вы же поддерживаете такой вариант.
Нет.
Не совсем так.
Я поддерживаю вариант, что в мета-вершинах, которые соединяет это ребро,
значит, найдутся две вершины, у которых минразрез вот такой.
Сейчас, вон там подвесили, поэтому как раз в вершине, где была u.
Нет, это я описывал вариант.
Просто совпадение буквок.
Давай напишу a и b, если это...
Вы же изначально выбираете две вообще рандомные.
Нет, я говорю именно про вершины u и v.
И утверждаете потом...
Ну, а для вершин...
Так на ребро u и v в конце будет соединять вершины f от f.
Хорошо.
Будем считать, что я наврал.
Потому что делать будем по-другому.
Мы не будем заморачиваться от вершины u и v.
Мы вместо этого скажем, что куда эта вершина...
То есть, когда мы тут искали минразрез здесь, то куда эта как бы сжатая вершина попала,
туда мы ее и подсыпем.
Но это не обязательно будет рядом с вершиной u?
Не обязательно.
Стоп.
А как она была вообще соединена с вот компонентом, который y и x?
Чего?
Вместе с u.
Она была...
В смысле?
Она же вообще присутствует.
Нет, она присутствует.
Просто перед тем, как искать минразрез между их сыгрок, мы ее сжали в одну вершину.
И к чему подсоединили?
Да, к чему она вот так и подсоединили?
Ну, просто...
Вот она подсоединится к той...
Ну, как бы мета-вершина распалась на две вот этим разрезом.
Так вот.
Вот эта вот сама она как вершина, она тоже в какую-то долю разреза попала тогда.
Ну, вот так вот.
В какую долю она попала, кто и подсоединяет.
Видимо, мы вообще забиваем на это ребро, на котором написано fullway,
и просто рассматриваем все ребра в начальном графе.
Ну да.
Сто лишь разницы, что мы...
На это ребро мы забиваем.
Мы рассматриваем, что вот эти вершины, они сжаты...
То есть они соединены со всеми этими, но только это мы сжали в одно.
А все ребра, которые ведут из этой правой штуки влево,
все будут лежать по одну сторону разреза.
Все вот эти вершины, да.
Вершины понятно, а ребра-то?
Ну, какие-то будут пересекать разрез, какие-то нет.
В минимальности разреза они, естественно, тоже будут принимать участие.
Ну, просто мы только что доказали их, как минимум, на первом шаге,
что действительно оказывается, когда мы ищем разрез между игроками,
выгодно эту вершину сжать в одну.
Сейчас я все равно не понял, почему мы, дорогие правые вершины,
должны быть именно в той части, где лежит У.
Почему не в верхней?
Ну, кажется, мы выяснили, что это неправда.
Почему это мы выяснили, что это неправда?
Что мы ее подсоединяем не в той части, где лежит У.
Да, мы подсоединили не там, где, возможно, лежит У, а...
Там, где она оказалась, возможно, в верхней.
Возможно, хотя...
Ну, просто ладно, видимо.
Еще раз можно?
Куда мы подрешим эту вершину?
Я думал, в У.
Не там, где У.
Хотя ладно, может, есть два варианта.
Либо к вершине У, либо туда, где разрез.
Значит, пришло время, видимо, еще какой-то мистической теории.
Туда, где разрез, это куда?
Ну, куда она попала, туда и подвешивать.
Что она?
Мета-вершина.
У меня все еще кокает вот такой момент.
Почему изначально, в самом начале алгоритма, мы просто берем две рандомные вершины,
берем миноразрез между ними и утверждаем, что у нас точно будет ребро с таким миноразрезом.
Потому что ребро у нас, в итоге, там N-1, а КСУ...
И мы, видимо, утверждаем, что таким образом, что и миноразрезов у нас N-1, максимум.
Просто странно, потому что если и миноразрезов различных больше, то у нас все сломалось уже.
Ребро поменюем на пути.
У нас дерево того же, да?
Чего?
Вот это ребро, оно равно миниуму на пути к дереве, на молитву.
Можно говорить, его, выбрать, сколько будет.
Получится уже не на слове.
Ну, максимум, нет.
На мычу.
Ребро и ребро можно вставать в дерево.
Ну, то есть, мы таким образом просто утверждаем, что у нас различных...
Сейчас он будет.
Да, в том числе.
Что у нас различных разрезов не больше, чем N-1.
Вот это уже интересный факт.
Что значит различные разрезы?
По значению.
По размеру потока у нас различных разрезов всего в графе может быть максимум.
Ну, потому что предположим, что больше.
Ну, подходящий.
Тогда как бы у нас не любой разрез может попасть в дерево.
Ладно, отбой тревоги.
Забиваем на U.
Верным все-таки решим и все-таки по разрезу судим, а не по этому.
Вот.
Нет.
А инвариант остается, что существует две вершины.
Просто тут вместо V придется...
Если вершина U оказалась здесь, то значит вместо U какая-то найдется еще вершина.
Скорее всего та же X.
А это второй нетривиальный факт.
Который мы сейчас будем садиться и доказывать.
Значит, факт такой.
Ну, факт на самом деле...
Хочется доказать следующее.
Внимание.
Вот, допустим, мы тут попилили.
У нас произошел вот такой...
И разрез, например, лег вот так.
И оказалось, что вершина U находится здесь.
Тогда я утверждаю, что в этой вершине найдется вершина.
Ну, на самом деле...
Просто это будет вершина X.
Такая, что на самом деле F от V тупо равно...
Там, видимо, будет F от X, V.
Вот, понятно?
Ну, не X, наверное, какая-то вершина X.
В смысле, какая-то вершина X это нет вершины.
Ну, скажем так.
Ну, на самом деле это будет X, потому что вполне вероятно, что в этой вершине, кроме X больше ничего нет.
Нет, а может быть и есть, почему-то.
Ну, у нас доказательства на это обращать внимание не будет.
Вот, значит, действительно.
Как мы это попытаемся доказать?
Мы говорим, что мы вершину V засовываем в противоположную к вершине.
Ну, вот.
Нет, предположим, что так получилось.
Просто рассмотрим Минразрез.
У вполне могло оказаться и с той же стороны, что и остильной.
Но если это так произошло, значит, мы победили.
Значит, само всё образовалось.
А теперь предположим, что нам не повезло.
Ну, могло быть такое.
Но тогда оказывается маленькая приятная теперь вещь.
Заметим, что мы попытаемся просто показать, что нам действительно хочется показать, что F от XV на самом деле это F от UV.
По большому счёту.
Так, но как же нам это показать?
Ну, начнём с простого.
Начнём с того, что простое утверждение.
F от XV меньше либо равно, чем F от UV.
F от XV меньше либо равно, чем F от UV.
Это простое утверждение.
Почему оно простое?
Да потому что дело в том, что вот у нас есть F от UV, это величина какого-то разреза между XV, правда?
Ну да, такое-то не может быть меньше.
То есть вот.
Это простое утверждение.
Это простое утверждение.
Это простое утверждение.
Это простое утверждение.
Это простое утверждение.
Это простое утверждение.
Это простое утверждение.
Это простое утверждение.
Это простое утверждение.
Это простое утверждение.
Это простое утверждение.
Это простое утверждение.
Это простое утверждение.
Это простое утверждение.
Это простое утверждление.
Это простое утверждение.
И это простое утверждение.
Это простое утверждение.
Это простое утверждение над Q1.
Это простое утверждение.
Ну и Q2.
Это простое утверждение над Q1.
Это простое утверждение.
Ну joke the mitzvah.
Это простое утверждение.
Ну это простое утверждение.
Это простое утверждение над Q2.
Ну Q2.
Но, с другой стороны, утверждать, что что-то, видимо, где-то
убить можно.
Вот действительно, как вы думаете, да, что, ну вот,
то есть можно ли теперь вот из этих троих кого-нибудь
взять и убить.
Давайте внимательно посмотрите, я утверждаю, что, как бы,
можно уверенно убить.
Почему?
Ну, почему?
Что-то понятное.
Ведь игрок же это не просто так.
Нет, наоборот, меньше либравным доказали, теперь доказываем
больше либравным.
Чего?
УВ?
Да, совершенно верно.
Значит...
Нет, сейчас, погодите, почему?
Нет, погодите, вот сейчас, погодите, почему?
Нет, погодите, вот сейчас, погодите, сейчас про это...
УВ минимальный разрез ХВ какой-нибудь?
Нет?
Нет.
Нет, ну, смотрите, нет, вот это вот, нет, погодите,
у нас было вот это простое утверждение, которое смотрело
здесь, что F от УВ это в том числе и разрез между ХВ,
поэтому F от ХВ еще меньше.
Так, что мы теперь хотим?
А, то есть теперь мы каким-то образом на халяву хотим,
что F от ХВ, к сожалению, да, у нас больше никаких
разрезов нет.
Но пока можно заметить следующее, я утверждаю, что тем же простым
образом, заметив, что вот это вот, это минимальный
разрез между ХВ, но также это и какой-то разрез между
УВ, правда?
Следовательно, F от ХВ больше либо равно, чем F от УВ.
То есть это позволяет нам сказать, просто убить вот
эту штуку, потому что это равно минимуму из F у и F от УВ.
Вот, понятно, да?
Мы так предположили.
Еще раз, мы пытаемся доказать, что после того, как мы вот
так вот проведем разрез между ХВ и АСТ, и вот это
отправим в нужную долю, то там найдется хорошая
вершина.
Но там оказалось, что если У нашлась тут, то мы победили,
а если У нашлась тут, значит докажем, что Х нам тоже,
в принципе, подойдет.
F от ХВ больше, чем F от УВ?
Да.
Потому что УВ – это разрез между ХВ?
Нет, потому что вот этот F от ХВ – это какой-то
разрез между УВ.
Ну да.
Вот.
Поэтому внутри вот этого минимума, значит, одно
из чисел заведомо не меньше другого, и вот это больше
просто убираем.
Вот.
Теперь, если бы мы еще и доказали, что F от ИГКУ
больше либо равен F от УВ, то, конечно, мы бы победили,
правда?
Но маленькая проблема.
Как вы абсолютно правильно сказали, как бы разрез от
F от ИГКУ мы не знаем вообще ничего.
То есть вообще ничего, потому что в плане, что, заметим,
что все наши разрезы, которые мы тут рассматривали, они
обладают таким свойством, что ИГКУ все время в одной
доле, оказывается.
Тогда, смотрите, сейчас будет вообще просто супер,
прям читерская идея.
Давайте этим воспользуемся.
А давайте просто возьмем, соединим ИГКУ ребром какого-нибудь
веса, например, 5.
Что поменяется?
Заметим, что минимальный разрез между У и В от этого
не поменялся.
Осторожно?
И минимальный разрез, видимо, вот этот вот тоже никак
не поменялся, правда?
То есть поменялось единственное только то, что я здесь могу
написать не F и ГКУ, а F и ГКУ плюс 5.
Ну, точнее так.
Почему FXV от этого не поменяется?
А какие страны по той же причине?
Потому что, смотрите, мы нашли минразрез между X и Y.
А теперь заметим, что если мы теперь хотим искать
минразрез между X и Y, то вот это вот мы можем...
А, блин, рекурсия, да?
А, нет, все правильно.
Мы можем вот это вот ужать в одну вершину.
Просто по ранее доказанной лемме, правда?
И тогда получается, что вот это ребро на что не влияет,
потому что оно все равно окажется сжато.
То есть вот такой неожиданный финт ушами.
Ну и заметим, что туда записано.
Да, но заметим, что 5 это Дед Мороз.
То есть записать можно все что угодно.
Там 5, 5, там в степени 55.
В общем, короче, я тут сколько угодно большое число могу написать.
57 в степени 179, как же ваши любимые числа.
Ой, Господи.
Ну вот, вот такая магия, да.
Да, магия, но тем не менее.
Вот такой парадокс, да.
То есть может быть контринтуитивно, но...
Что за дичь? У нас же могла быть...
То есть это мы умозрительно сделали?
Или это мы буквально умозрительно сделали?
Чего?
Ну, в алгоритме мы, естественно, этого не делаем.
Но мы сделали умозрительно и заметили,
что мин разреза от этого не поменяется.
Потому что у EV это не просто вершина,
а вершины, которые в обоих этих разрезах почему-то попадают в одну долю.
То есть следовательно, если мы между ними добавим ребро,
то ничего не поменяется.
Ну, другие разрезы не поменяются.
Ну, вот рассматриваемые нами разрезы не поменяются,
а разрез между UV увеличится на это ребро.
Мы просто в рамках доказательств конкретного факта это используем.
Да, то есть это мы используем для того,
что мы, получается, можем показать,
что fxy больше либо равно минимуму из f от UV,
f и gq плюс абсолютно любая константа.
Ну, доказательств такое.
Ну, вот, Даня, вот, да, вот.
Ну, что делать, да?
Да.
Может быть так же, если это константа 0,
тогда это...
Нет, это будет верно.
Нет, скажи так.
При 0 это будет просто fxv больше,
либо равно вот этого.
Это верное утверждение.
Да, и вполне вероятно,
что f и gq на самом деле меньше,
чем f от UV.
Это вполне вероятно.
Но...
Но так же верно и то,
что если взять минимум из f от gq плюс
f от UV,
то тоже, оказывается, это верно.
Вот, с любой константой.
Но так как мы, наконец, когда-то,
возьмем любую константу так,
чтобы f от UV стало меньше,
и отсюда выводим,
что f от xv больше либо равно,
чем f от UV.
Да, да.
Я чувствую его мысль.
Да, feel my energy.
Да, и вот.
Сейчас, как мы еще раз согласуем
это с f от xv?
Очень просто.
На f от xv добавление этого ребра
не влияет никак, как мы выяснили.
Потому что в старом графе
без добавления этого ребра
разрез между...
разрез между x и v
минимально отправлял y и u
в одну долю.
Это теорема, которую мы доказали
перед этим.
Вот, поэтому как бы от добавления этого
ребра f от xv не поменялся.
f от UV
тоже очевидно
не поменялся.
Потому что был вот такой
минразрез, но от того,
что вы тут добавили ребро,
менять этот разрез смысла нет.
Ну и все.
То есть f от xv
все еще остался больше либо равно,
чем f от UV под тем же причинам.
Но единственное, что поменялось
в этих утверждениях, это f от y,
который увеличился на это ребро.
Тут просто
без комментариев.
Но это уже другой вопрос.
И
что нужно употреблять, чтобы
это придумать?
Вопросы к авторам я не знаю.
Есть контакты?
Скажем так.
Мы еще не построили.
Мы рассмотрели, что мы как-то второй шаг
адекватно сделали.
Но на самом деле
основное интеллектуальное ядро
мы в общем-то сделали.
Мне пока не приятно, почему то,
что можно было построить.
Ничего.
Нет, дальше мы
еще раз теперь.
В утверждение поверили?
Хорошо.
Тогда смотрите.
Как у нас будет устроен алгоритм?
Алгоритм будет устроен так.
Вот он у меня.
Знаете, это отбивка.
Знаете, у одного лектора
когда он что-то стирает или быстро делает
на балалайчике,
там у Маврина что-то такое
или там у Трушины еще такой прикол есть,
когда он там выписывает какое-то вот это.
Вот.
Значит, делаем так.
В каждый момент времени у нас есть
мистический граф из метавершин.
Метавершины. Вот они.
На этих метавершинах образуется дерево.
Вот.
Вот так нарисуем.
Вот.
И про это дерево у нас будет
такой инвариант.
Значит, на каждом дереве нарисовано какое-то
мистическое число f.
И гарантируется следующее, внимание.
Гарантируется, что
можно в соединяемых метавершинах
выбрать по одной вершине
a и b.
Такой что, внимание,
минимальный разрез между a и b
равен, во-первых, именно этому числу.
А во-вторых,
если рассмотреть, что он представляет себя по вершинам,
то он представляет из себя ровно вот это.
Вот это.
Вот. Понятно, да?
Опять печеньки.
Нет, ну инвариант-то понятен.
То есть у нас ставка на инвариант.
Тогда, если мы верим в этот инвариант,
то алгоритм заканчивается, когда в каждой мета
в вершине останется по одной вершине.
Логично, да?
Ну и в принципе
тогда из этого будет
автоматически следовать,
что это
мистическое...
То есть получится, что у нас есть какое-то
мистическое дерево.
Такое, что
про каждую пару вершин
мы знаем, что минразрез между ними
это ровно вот это, правда?
Понимаете, да?
А которые не соседние?
Что-что?
Вот. А теперь давайте разбираться.
Теперь я утверждаю,
ну теперь очень хочется утверждать,
что минимальный разрез
между этими двумя вершинами
это минимум
на этом пути, правда?
Ну вот, давайте посмотрим.
Доказательство будет очень простое.
Ну, во-первых, заметим, что
минразрез между этими штуками
он больше либо равен
минимуму на этом пути.
Это мы уже точно знаем, правда?
Ну почему?
Потому что если это, допустим,
x и y это v1, v2, v3,
то мы вот это знаем, да?
Вот это знаем, да?
То есть,
f от x и y больше либо равен
минимуму из этих разрезов.
Но!
Рассмотрим вот этот минимум.
Вот он, дельта, да?
Заметим, что
разрез между x и y,
x и y, которые равен
дельта, существует.
Вот он.
Ну, в смысле, вот он.
Просто в явном виде, да?
То есть, он, значит, получается
и больше либо равен, и меньше либо равен.
Значит, получается, это и есть
минимальный разрез еще и между x и y,
а также между любыми двумя вершинами, которые
тут имеют место быть.
Не, между любыми
другими вам не обязан быть минимальным.
А, ну согласен, хорошо, да.
Это критически важно.
Да-да-да, извините, ошибся.
А он больше либо равен, потому что есть пути
за разрезом? Ну, потому что да.
Это же не просто пути, это конкретные разрезы
между, да.
Ну, если мы докажем,
что этот вариант соблюдается, то да.
А зачем мы делали тогда
все это?
Что?
Нет, это мы пока делали для разминки, чтобы просто
войти в эту штуку и показать, что
дерево вообще есть.
То есть, в дальнейшее это мы как бы углубляем эти знания.
Но, как бы, если
вас задача просто показать, что дерево существует,
то вот, пожалуйста.
Вот.
А тут оказывается, что просто его можно строить
за В квадрат потоков, а за В потоков.
Ну и теперь пришло время, наверное, финалочки.
Пришло время понять, почему,
когда мы... Потому что на каждом шаре алгоритмы
что мы теперь делаем? Выбираем две первые попавшиеся
вершины, да.
Ну, во-первых, сжимаем
каждую из этих вершин
во что-то единое, да.
Сжимаем, сжимаем и сжимаем.
Нет.
А, потому что, да, в какой
вершине выделял? А, ну давайте я вот в этой
вершине, допустим, выделял вот эти новые
вершины, мы их назовем, давайте, по IQ.
Да, тогда тут вот так вот
вот такое объединение, на самом деле.
Вот, вот.
Нет, почему?
Нет, слева.
Ой-ой-ой, ух ты.
Вот, вот, теперь так.
То есть, ну да, три вершинки, теперь да.
И теперь я утверждаю, что теперь каждую из них
нужно сжать,
каждую из них нужно сжать,
найти имен разрез
и в этом разрезе
посмотреть, куда эти вершинки попали и туда
их и подвести.
Вот.
Спрашиваю, да, вы, наверное, спросите,
а почему, собственно, так, да?
Скажите, вопрос, как
найти такой разрез,
чтобы целиком влезли
сердце?
Так, сжать каждую из этих нот.
Нет, просто я не сказал, что каждый из этих
сжатых вершин подвесится к одной доле.
Кто-то из них подвесится к одной, а кто-то
к другой. И это нормально для нас.
И мы подвесим их. Да, мы только что доказывали, что
к другой доле подвешивать можно, там найдется.
Ну да.
Главное, что
нужно подвесить к той доле, которая оказалась
в миноразрезе.
Понятно. Мы доказали, что, в смысле,
нам не важно, к какой доле,
в другой доле тоже найдется нужная вершина.
Ну, по сути, да.
Единственная проблема, что в данном случае надо доказать,
что это можно делать одновременно
для разных вершин,
потому что мы это доказывали все-таки для одной.
Мерзость.
Да, мерзость.
Скорее это...
Но это чего?
Чего-чего?
Я тебя не слышу.
Единственная психологическая проблема
может быть, что мы доказали, что
для каждой отдельной вершины это
верно, но как бы еще не совсем
доказали, что это одновременно для них
можно делать.
Понятно, что это делается там, видимо,
тремя-пятью правильно сформулированными предложениями
на самом деле.
Да, потому что сначала мы начинаем с того,
что замечаем, что когда ищем минразрез между
А и Б, мы можем сжать сначала
вот эту вершину.
Потом вон ту вершину.
Потом вон ту вершину.
Для каждой из них там просто аккуратненько
утверждение верно.
Ну, и когда разжимаем, типа тоже по очереди
аккуратненько верно.
Ну, видимо, да. На самом деле, да. Получается так.
По большому счету, да.
Еще раз по комплексу
мы понимаем
в какой доле прицепить вершину.
Мы же вот эти вершины
сжали в
исходном графе. То есть в исходном графе
у нас эта вершина не одним ребром
с этим всем соединена, а вот кучей ребр.
Она даже со всеми этими
вершинами тоже они связаны.
Но это множество вершин мы сжали.
Это множество вершин сжали.
И вот это вот все. И вот это множество вершин сжали.
Теперь берем вершина А и Б,
ищем между ними в сжатом графе
минразрез.
А в сжатом графе мы добавляем
ребро
из сжатой вершины
куда?
Ну, как бы, скажем так,
если она оказалась в одной доле с А
в разрезе минимальном, да,
то мы ее соединяем этим ребром с...
Если мы сначала ищем разрез.
Да.
Нет, сначала сжимаем,
потом ищем разрез.
Сжимаем, потом ищем разрез.
Когда мы сжимаем, как мы добавляем ребры.
Какие? Вот эти?
Ну очень просто. Смотрим на эту вершину.
Она оказалась либо в одной доле с А,
либо в одной доле с Б.
У нас же разреза еще нет.
Нет, мы же его только что нашли.
Так, если что, вот это ребро графу
никакого отношения не имеет.
Ну да.
То есть как бы это ребро мы никуда не добавляем.
Мы добавляем там в дерево,
но разрез, конечно, с его помощью не ищется.
То есть смотрите,
граф живет в другом мире.
В мире, где приходит информация.
Так, берем граф,
возьми вот это множество вершин
и сожми их в одну.
Ну понятно, что если тут торчали
ребра там в какие-то вершины,
то они теперь будут торчать из одной этой вершины.
А если там были внутри ребра,
значит мы их уничтожаем.
Если пришла информация,
сожми вот эти вершины в одну.
То есть мы те ребра, которые торчали из вершин
в нежатом графе,
мы их проводим просто из одной вершины?
Да.
Ну просто я думал, что там одно ребро будет.
Не-не, боже упаси.
Да просто это в другом мире.
То есть не путать вот эту нашу диаграмму
с метавершинами и деревом
и реальный граф.
То есть сжали,
построили разрез
и соответственно в реальном...
Вот эта вершина
распалась
на две соединенные ребром F и B.
А вот эти ребра
мы подсоединяем.
Если вот эта сжатая вершина в разрезе
оказалась с вот этой долей,
значит подсоединяем к A, иначе к B.
И аккуратненько
проверяем все указанные леммы.
Вот.
Не куча фибоначи, да?
Да.
Что-то вот позавчера у нас была куча фибоначи,
выяснилось, что это халявный алгоритм.
Ну как-то да,
ну просто как-то реально
она как-то очень просто пошла.
Что-то у нас она не простошная.
Ну, не знаю.
Нет, есть вероятность,
что возможно до меня неожиданно.
Нет, есть вероятность, что возможно до меня
неожиданно дошло, как это еще проще рассказывать.
Да?
Нет, да, в принципе нет.
То есть это означает да.
К сожалению, мы не успели говорить про любовь.
Про любовь.
Вот.
Да-да-да.
Но зачем да?
Но это называется да. Зачем любовь, когда есть гомориху?
Да.
Ладно. Ну в принципе это означает, что да.
Ну да. Но это в плане, что на сегодня все.
Так что на сегодня все.
С потоками тоже все.
Значит, будем говорить о геометрии.
Или о строчках, я подумаю.
Геометрия тоже была любовь. Есть?
Есть.
Значит 16 в конце.
