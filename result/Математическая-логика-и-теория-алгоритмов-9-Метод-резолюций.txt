Так, давайте начинать. Сегодня мы продолжим разговор про метод резолюций.
Резолюции в прошлой раз не было, мы только познакомились с построением KNF по разным задачам.
Я думаю, что в конце мы немножко начнем новую тему про формулы с кванторами.
Я еще немножко поговорю про то, как строить KNF, выполнимость которых соответствует наличию решения какой-то задачи.
Строение KNF, выполнимость которых эквивалентна разрешимости некоторых задач.
В прошлый раз было два примера. Один пример это раскраска в три цвета вершин графа, так что пососедние были покрашены в разные цвета.
И второй пример задача о ферзях. Как расставить ферзи на доске шахматной, чтобы они не били друг друга.
Если просто пустая шахтная доска, то это вообще умеют решать.
Например, если на каких-то полях уже стоят ферзии, а какие-то другие запрещены, то это уже получается очень много разных задач.
И как это в целом решать, непонятно. Никакого простого алгоритма нет.
На самом деле, если мы хотим использовать SAT-солверы, то есть какое-то программное обеспечение, которое решает задачу, то нам все-таки нужно, чтобы полученная задача была не слишком большой.
Полученная КНФ. Нужно, чтобы полученная КНФ была не слишком большой.
Давайте я приведу пример, в котором как раз всякие очевидные способы дают слишком большую КНФ, а чтобы получилась небольшая КНФ, нужно немножко похитрее поступить.
Это задача о клике. Еще один пример. Это задача о клике, то есть о полном подграфе.
Тут даны граф. Опять стеория графов задача. Даны граф G и число K.
Вопрос, существует ли множество вершин, множество иска вершин, множество иска вершин, попарно соединенных между собой.
Попарно соединенных между собой.
Вот как бы мы это могли решать.
Сейчас я приведу несколько примеров, которые вроде как задача выполнимости связанная, но на самом деле что-то странное дают.
Например, попытка 1.
Ну, например, можно сказать так. Для каждой вершины войдет 1, если вершина входит в клику и 0, если не входит.
Я рассказываю сейчас, как приходит в голову делать, но как не надо делать.
Можно сразу написать, что это попытка неудачная будет. Неудачная.
Не то, чтобы совсем неудачная, но там будет не то, что мне нужно.
Значит, по вершине V заведем P в это.
Значит, P в это будет единица, если V лежит вот в этой клике.
Т, где C это клика. Значит, 0, если V не лежит.
Вот. Ну, C это как раз то, что нам нужно найти.
Не, ну правильно так. Мы еще и значения переменных не знаем.
Это как бы то, что мы хотим сделать.
Что потом, если мы найдем значения переменных, то можно наоборот сказать, что C это нож тех вершин, для которых перемена равна единице.
И C это искомое клико.
Да, теперь нужно писать условия.
Ну, можно писать просто вот такие вот условия.
Значит, во-первых, для каждой пары U и V, значит, можно написать, то если, значит, P U и P V, то тогда U V это ребро.
Так, а значит, как это вообще написать?
Первый проблем в том, что у меня тут написано какие-то булевые переменные, а вот здесь что-то совсем не булевое, какое-то сложное выражение.
Вот. Но можно написать так. Значит, смотрите, если U V это ребро, то тогда тут будет единица, это просто можно вычеркнуть.
Это будетождественные истинные условия.
Вот. Можно написать наоборот, что U V не принадлежит E, то тогда отрицание, значит, отрицание P U и P V.
Ну, что будет эквивалентно отрицание P U или отрицание P V.
Ну, и тогда можно сказать, что просто для всех, значит, для всех нерёбер добавим вот такие вот, так это вот.
Значит, для всех нерёбер добавим KNF вот такие вот дизъюнкты.
Да, то есть это, по крайней мере, будет что-то похожее на KNF.
Да, то есть, значит, иными словами получается, значит, для всех, значит, для всех U V, которые не ребра, значит, добавим, значит, KNF.
Вот такие вот дизъюнкты, значит, не P U или не P V.
Так. Ну, хорошо, но это нам только сказать, что это клика.
А ещё нужно, чтобы она была большого размера.
Вот. И это основная загвоздка, значит, пока что тут как бы ничего страшного, тут ничего неудачного нету.
Вот. А неудачно будет записывать, да, значит, записывать, что там хотя бы ковершин.
Ну, значит, например, неудачный способ такой, да, что мы возьмём большую дизъюнкцию.
Ну, давайте, смотрите, то, что у нас это будет не KNF, а там какая-нибудь другая форма, это, в принципе, не очень важно.
Да, можно потом преобразовать как-нибудь.
Проблема будет в другом.
Значит, я возьму большую дизъюнкцию по всем наборам, значит, и 1, и так далее, и k.
Ну, значит, это час, лучше давайте я.
Это как множество, так.
Ещё, да. Ой, так много стёр.
Итак, вот.
Значит, дизъюнкции по множествам.
И 1, и так далее, и k, которые под множество, множество вершин.
Ну, вы считаете, что там N вершин.
Да, я считаю, что здесь N это число вершину графа.
Так, а тут будет дизъюнкция, соответственно, P и 1, конъюнкция, и так далее, конъюнкция P и k.
Вот, это не KNF, ну и ничего страшного.
Значит, будем, в принципе, можно к выполнимости просто формулу сводить, а потом к выполнимости KNF.
Мы про это ещё поговорим.
Вот, ну и в принципе, да, конечно, если тут k единиц, то в эту дизъюнкцию попадёт набор из этих k индексов.
И здесь это будет истинно.
Вот, а если меньше, чем k единиц, тогда в любой такой набор попадает хотя бы 1 ноль, и это всё будет ложно.
Вот, но в чём проблема? Почему это неудачная попытка?
Потому что это будет слишком длинная формула.
Сейчас есть длина формулы. Длина формулы будет порядка CSNPK.
Вот, и если k достаточно большое, то это будет экспоненциального размера.
Так, вы таких оценок ещё не делали, да, или делали?
Вот, если k это, скажем, 1 десятая н, это вы не знаете примерно сколько будет.
Но, наверное, вы знаете, что CSNPNПЛАМ это самое большое число сочетаний.
Значит, это проще доказывается.
И это означает, что CSNPNПЛАМ будет больше, чем 1 делить на 2n, даже не 2n, а 1 делить на n плюс 1, от 2 в н-ной степени.
То есть это будет порядка экспонента.
Ну, в общем, если k это линейная функция от n, это и будет так.
То есть это будет порядка какой-то константы P в n-ной степени, значит, если k будет порядка n.
Ну вот, если это будет n пополам, то вы это знаете, как доказывать?
Если это будет там какая-нибудь 1 сотая н даже, то в какой-то момент должно быть.
Ну, к тыче, может, в следующем семестре.
Ну, а в самом деле, сейчас, кто не знает, что такое формула Стирлинга?
Она на Монтане была, да, или ещё нет? Или просто знаете?
Ну, в общем, если поставить формулу для числа сочетания формулы Стирлинга и там немножко посокращать, то, в общем, вот это и получится.
Вот, так вот, экспонента, это мы считаем, что много.
Значит, мы хотим...
Не, сейчас, вот эту тильду я понимаю, что там какой-то множитель есть.
Сейчас, но это называется т, это большой, а т, что k больше, чем какая-то маленькая константа, умножить на n, вложительная, и меньше, чем какая-то большая константа, умножить на n.
Да, вот эту тильду я в этом смысле здесь понимаю.
Вот, в общем, мы хотим, чтобы не такая длинная формула была, чтобы она была, наоборот, порядка n с какой-то степени.
Так, значит, мы хотим, чтобы длина формулы была больше, нет, не больше, но меньше.
В общем, умел порядок, наоборот, не c в степени, а на n степени c.
Вы, наверное, знаете, что любой полином растет медленнее, чем любая экспонента.
Вот, соответственно, вот такого добиться сложнее, чем то, что написано.
Нет, так мы берем все вместе. Мы берем и вот эти вот формулы, и вот эту вот формулу.
То, что это клика, это получается из вот этих формул. А то, что там большого размера, это из вот этой формулы получается.
Ну, значит, у нас k единица должно быть, и они все соединены друг с другом.
Ну, вот поэтому, так. Ладно, значит, там бывает еще много способов делать неправильно.
Значит, у меня в прошлогоднем конспекте там еще пара способов написано. Давайте я сейчас расскажу, как правильно сделать.
Вот так. Давайте не будем делать еще две неудачных попытки. Я сразу расскажу, как правильно.
Так, значит, попытка два сразу будет удачная.
Значит, мы сделаем... Не, смотрите, в принципе, можно даже вот эту попытку один отремонтировать,
сказав, что просто сумма этих всех π и так должна быть больше либо равна k.
И дальше делать какую-то двоичную арифметику, чтобы эти нули и единицы складывать, не сорить, а складывать, как полагается,
и при помощи двоичной арифметики выразить через формулы. И, в общем, это можно довести.
Но это будет не очень просто. Я расскажу вариант, когда сразу будет и просто, и коротко, и правильно.
Значит, мы здесь сделаем другие переменные. Вместо переменных с одним индексом мы сделаем переменные с двумя индексами.
Значит, тут будут переменные с двумя индексами. Значит, π и t в это.
Значит, где i будет от одного до k. Значит, i от одного до k, а v это вершина.
И мы будем считать, что у нас не просто есть клика, а клика с пронумерованными вершинами.
То есть, интерпретируется эта применная так.
Значит, π и v равняются единице, если v это вершина.
Ну, и тогда, значит, какие условия?
Ну, а первое, что мы делаем, мы делаем переменные с двумя индексами.
Ну, а второе, что мы делаем, мы делаем переменные с двумя индексами.
Ну, а первое, под каждым номером у нас какая-то вершина должна быть.
То есть, для любого i у меня условия, что p и 1, или и так далее, или p и tn.
Под каждым номером есть вершина.
Под каждым номером есть вершина.
Так, значит, дальше можно потребовать, чтобы под каждым номером была ровно одна вершина.
Это вообще даже не обязательно, но так как-то приятнее.
Чтобы прямо так интерпретировалось, что под каждым номером одна вершина.
То есть, это означает не p и t ut, или не p и t vt.
Значит, это если u не равно v.
Если u не равно v, означает, что не может быть под одним номером две вершины.
Значит, нет разных вершин под одним номером.
Значит, дальше нужно потребовать наоборот, чтобы одна и та же вершина не могла быть по двумя номерами.
Так, значит, третья, третья наоборот.
Значит, не p и t ut, или не p и t vt.
Значит, это при неравном же.
Это означает, что одна вершина не может быть под разными номерами.
На самом деле, даже это можно исключить, если у вас в графе нет петель.
И это будет следовать из дальнейшего.
Значит, и дальнейшее, что это клика.
Значит, p и t ut и p и vt.
Значит, следовательно, uv это ребро.
Ну, и вот эта вот запись точно так же, как и в прошлый раз.
Это аналог вот этого.
Мы делаем именно формулу вот таким образом.
Это означает, что есть для всех нерёбер, для всех пар вершин, которые не ребра,
Добавляем условия.
Значит, не p и t ut, или не p и t vt.
И это для всех и для всех же.
Для всех и неравных же.
Ну, вот видно, что третье это на самом деле частный случай.
Если петля из uv-u это не ребро, то в точности третье то же самое, что четвёртое.
Поэтому, если петель и так нету, то тогда можно сказать, что мы только четвёртое добавляем.
Если петли есть, тогда это нужно отдельно дописать.
Ну, хорошо.
Что утверждается?
Во-первых, утверждается, что тут маленькая длина.
Значит, какая тут длина?
Ну, смотрите, это у нас для всех и.
То есть это порядка k таких формул.
Давайте я напишу, сколько у нас всего формул получается.
Значит, таких формул у нас будет порядка k.
Поломалось.
Так, вот тут дайте.
Значит, этих k штук.
Этих сколько?
Значит, тут получается, что и у нас любое от одного до k, а u и v любые от одного до n,
ну и соответственно любые пары.
То есть тут получается k и умножить на n, на n-1 пополам.
Да, тут получается вот столько формул.
Но это не больше, чем n в кубе.
Сейчас, это штуки, это штуки формул.
Да, если общую длину мерить, то да, то нужно еще на n умножить.
Да, зато у второй там нужно на констант умножить.
Но вообще не важно, в любом случае, второе будет больше.
Так, значит, теперь здесь и не равно g.
Тут получается наоборот.
Значит, тут как бы k на k-1 пополам умножить на n штук.
Ну и самое большое, наверное, в самом деле здесь будет.
Здесь будет, ну хотя нет, только когда как самое большое.
Значит, это будет k на k-1 пополам.
Кстати, вот здесь вот u и v нужно менять местами.
То есть тут нужно умножить, видимо, на n в квадрате,
минус n, потому что петли мы уже здесь запретили.
И еще минус число ребер.
Даже для каждого неребра нужно такую формулу написать.
Ну, в любом случае, даже эта штука будет не больше чем n в четвертой.
Поэтому суммарная длина будет как раз полиномиально от m.
Вот так. Хорошо, а почему это правильная формула?
Ну, не знаю, наверное, более-менее понятно.
Да, что, смотрите, если клика есть, ну а сами это в одну сторону понятно,
в другую не совсем понятно.
Значит, если клика есть, то мы можем пронумеровать ее вершины совершенно любым образом.
Да, произвольно выберем, какая там первая, вторая, это даль какая ката.
И определим переменные, вот как здесь написано,
что на единицы, если v это и эта вершина клики, ноль наоборот.
Ну и тогда проверим, что эти все выполнены.
Ну, смотрите, у нас под каждым номером есть вершина.
Значит, это у нас получилось.
Значит, действительно, только одна вершина,
и это тоже верно.
Значит, дальше, действительно, и у одной вершины только один номер.
Ну, у нас была клика иска разных вершин.
Ну и раз это клик, то четвертая тоже будет верна.
Вот, это в одну сторону верно.
Хорошо, а теперь пусть наоборот.
Значит, пусть наоборот.
И у нас, соответственно, конъюнкция из вот этих всех дезинюктов выполнима.
То есть, есть какой-то набор значений p, i, t, ut, что все формулы выяснены.
Ну да, смотрите, за счет первых двух формул у нас для каждого индекса i есть ровно одна вершина.
За счет первых хотя бы один вершvitн, чтобы это deverлоeté, да, созвездующей переменной была истина,
за счет второго будет ровно одна вершина.
А за счет третьего это все будет разная вершина.
То есть, их будет столько сколько индексов, то есть к Ka штук.
Ну а за счет четвертого эти k штук это будет клика.
Ну вот и получится, что если все формы истины, то, значит, это будет клика из каверши.
Ну вот, соответственно, контрольной через неделю у тех, кто там нарешал,
у кого-то будет только выводимость, а у тех, кто нарешал много, будет задача вот такого рода,
где нужно будет составить формулу по, соответственно, какому-то написанному условию.
Ну и вот нужно будет написать что-то вот в таком вот духе.
Так, ну хорошо.
Так, теперь давайте вот в таком порядке пойдем.
Значит, я расскажу, собственно, что такой метод резолюций,
а потом я расскажу, почему любую формулу можно свести вот именно к КНФ.
Так, значит, что такое одна резолюция?
Значит, резолюция это вот такая штука.
Это тоже некоторые правила вывода, которые работают именно с КНФ.
И этот правил вывода выглядит так, что если у вас есть один дизюнк А или Х,
есть другой дизюнк Б или не Х, то тогда можно вывести А или Б,
и вот это вот А или Б называется резольвент.
Так, в каком смысле это правило вывода?
В следующем смысле, что если на некотором наборе, значит, утверждение довольно простое,
если на некотором наборе значений А или Х и Б или не Х истинное,
то и А или Б истинно на том же наборе.
Но вообще-то это почти очевидно.
Потому что, смотрите, если Х истинно, тогда не Х ложный, должно быть Б истинно,
и тогда А или Б истинно. Если Х ложно, то тогда А истинно.
То есть получается, что если Х ложно, то тогда А истинно, и тогда А или Б истинно.
Вот если Х истинно, то тогда не Х ложно, тогда Б истинно, и тогда тоже А или Б истинно.
А или Б истинно.
Хорошо. Значит, если сами А и Б являются дезюмптами, и там есть повторные литералы,
то тогда можно эти повторы исключить.
Если в А и В есть повторные литералы, то можно их исключить.
То есть, например, будет, скажем, П или Q или R, и, например, не Q или R или S.
Ну, во-первых, там можно менять местами, поэтому этот Х может быть и в середине формулы.
То есть здесь в качестве Х выступает Q, а в качестве А выступает P или R, в качестве B выступает R или S.
Но вот R повторяется и там, и там, поэтому можно его два раза не записывать.
То есть резольвента будет P или R или S.
Значит, важно, чтобы только у одной переменной было это вхождение в один дезюмпт без отрицания, в другую с отрицанием.
Вот если, например, написать, значит, P или Q или R, а вторую будет не Q или не R или S, то не нужно писать, что в результате будет P или S.
Значит, если это аккуратно сделалось, то будет P или R или не R или S.
Ну и вот это будет тождестная истина, и поэтому, ну, поэтому вообще такое не надо делать, да, это как бы ничего не принесет.
Значит, это тождестная истина, значит, поэтому это ничего не даст.
Это как бы формально верно, а фактически ничего не даст.
Вот, и еще есть специальный случай, когда A и B пустые.
Значит, мы еще рассматриваем специальный вариант символ противоречия, это пустой дезюмпт.
Пустой дезюмпт.
Он получится, если вот A и B пустые, то есть если есть X, есть не X, то в качестве резольвента будет пустой дезюмпт.
Нет, это, наоборот, ноль.
Значит, это тождестная ложь, потому что это же дезюмпт.
Пусть есть какая-то ассоциативная операция, что такое, как бы она применена к пустому множеству, но это будет нейтральный элемент.
То есть пустая сумма это ноль, потому что ноль не меняет сумму, пустой произведение это единица, потому что умножение на единицу не меняет произведения.
дизюнцы это ноль, потому что дизюнцы с нулем не меняет значение вот значит но это
смотрите метод резолюции значит метод резолюции это как бы из исходного к
исходному набору дизюнтов добавлять себе возможные резолюции пока что-то
возможно добавить метод резолюции
значит к исходному набору дизюнтов
добавлять всевозможные резольвенты
добавляйте всевозможные резольвенты
значит пока это возможно пока появляются новые
вот ну и тогда когда основной вопрос это получится в итоге пустой дизюнт или
не получится вот тут теория такая
что
не смотрите теория такая что исходная формула да то есть кнф всех дизюнтов
выполнимо тогда только тогда когда методе резолюции не получится пустой
дизюнт но и наоборот да значит можно писать что
исходная кнф невыполнимо тогда и только тогда когда можно вывести можно вывести
пустой дизюнт но дать какой-нибудь примерчик и потом этим перерыв будет так
примерчик но например насчет п или ку или r насчет и скажем неку или r
насчет и п или не и не п
значит это такой простой искусственный пример значит
как работает метод резолюции но сначала вот из этих двух значит из этих двух
получается п или r
на как раз ку не ку и р повторяет поэтому п или п или r значит дальше из
уже полученного нового дизюнта и того исходного получается п да опять же п
повторяется а р и не р противоположная ну и наконец из полученного п и
имеющегося отрицания п получается пустой дизюнт
вот соответственно и это действительно не выполнимая формула это аждественная
ноль можете построить таблицу истинности и это будет аждественной ноль
вот ну и вот как часто бывает в одну сторону это теорема очевидная и нас следует
просто из предыдущего утверждения
вот вот из этого утверждения нас следует да что смотрите если
если на некотором наборе всякая nf истина да то есть все эти скобки истинны
то и все что мы из них можем вывести медом изолюция тоже будет истинна а
тогда получится что и пустой дизюнт истинный но пустой дизюнта естественно
ложный он не может быть истинным вот получается что если вывели пустой
дизюнт значит она не выполнима вот сейчас давайте перерыв после перерыва
обратную сторону так аж по поводу вопросов перерыве значит смотрите за
счет того что мы вот здесь вот склеивали да сейчас вот здесь вот дамы склеивали
одинаковое за счет этого у нас всего будет конечное число возможно где из
юнктов да потому что каждая переменная может либо входить сама либо ходить
с отрицанием либо не входить никак да вот давайте вот такие вот мы тоже не
будем выводить да хотя все равно будет конечное число но просто скажем что если
то это же ясно истинно, то это нам ничего не дает, и мы это не будем использовать.
Вот, и тогда получается просто число возможных дезинутов, это будет там 3 в степени число переменных.
Потому что для каждой перемены есть три варианта. Либо входит сама, либо с отрицанием, либо не входит вообще.
Ну, в скобку, в одну скобку входит. Соответственно, скоба – конечное число,
и поэтому, если на каждом шаге появляется новое, то после какого-то шага уже ничего добавить нельзя.
Да, когда ничего не можно добавить, то значит метод закончился.
Вот, значит, соответственно, в одну сторону это легко.
То есть, если так, это значит вот в эту сторону, вправо-налево, давайте запишу тоже.
Значит, если КНФ выполнимое, значит, тогда все дезюнкты верны на некотором наборе.
На некотором наборе. И, следовательно, все резольвенты тоже верны.
Все резольвенты верны на том же наборе.
Вот. А при этом пустой дезюнкт аж детственно ложен, поэтому он не может быть верен на этом наборе.
Значит, он не резольвент. При этом пустой дезюнкт аж детственно ложен,
поэтому, в частности, он ложен на этом наборе.
Значит, ложен на этом наборе. И, следовательно, он не резольвента.
Ну, не резольвента никакого уровня.
Вот. Это как бы контрпозиция получилась. Что если выполнимо, то не можем вывести пустой дезюнкт.
Значит, если можем, значит, она невыполнима.
Ну, а теперь в эту сторону
Опять возьмем контрпозицию. Что если нельзя вывести пустой дезюнкт, то, значит, выполнимо.
Значит, нельзя вывести пустой дезюнкт, следовательно, формула выполнима.
Значит, это что-то типа теоремы о полноте. То есть, вот это можно сказать, что это теоремы о полноте методы резолюции.
Ну, а то, соответственно, было теорема корректности.
Значит, смотрите, как мы это будем делать.
Ну, рассмотрим множество всех резольвент.
Скажем, назовем его C.
Значит, C это множество всех резольвент.
Множество всех резольвент любого порядка.
Значит, мы его назовем, разобьем на уровне.
Значит, C и T это множество резольвент,
в которых входят только первые и-переменных.
Только P1 и так далее P и.
И тогда тот факт, что не выводится пустой дезюнкт, означает, что C0 это пустое множество.
Потому что пустой дезюнкт это единственный дезюнкт, который ни одной переменной не зависит.
Значит, этот не выводится пустой дезюнкт. Следовательно, C0 это пустое множество.
Так, ну и теперь будем по индукции доказывать, что существует набор,
на котором выполнены все...
А, значит, при этом смотрите, тут на самом деле иерархия происходит.
Да, то есть, ну давайте я тут напишу.
Значит, C0 вложено в P1, это вложено в P2 и так далее.
А последнее, Cn, равняется C.
Так.
Да, то есть каждый раз у нас все больше и больше переменных, поэтому они друг другу вкладываются.
Такая иерархия получается.
Вот, значит, мы доказываем по индукции.
Значит, докажем по индукции.
Следующее.
Да, что есть набор, на котором выполнены все из циитова.
Значит, есть набор,
на котором выполнены все элементы цииты.
Вот, и база у нас есть.
База — это то, что C0 — это пустое множество.
Да, вообще, когда рассуждаете по индукции, никогда нельзя забывать про базу.
Потому что переход тут будет, независимо от того, выполняться, выводится пустой дизайн или нет.
А вот база, только если он не выводится.
Значит, база за счет того, что C0 — это пустое множество,
но и все элементы пустого множества выполнены на любом наборе или на каком-то наборе.
Так, хорошо. Дальше будем строить постепенно.
Да, и, кстати, тут можно...
Если у нас цииты, то там должны значить только первых и переменных.
Поэтому можно здесь приписать так.
Значит, набор значений P1 и так далее, PIT.
Переход.
Значит, смотрите, вот это C и плюс первое делится на три части.
Значит, C и плюс первое делится на три части.
Значит, на CIT, на те, которые содержат P и плюс первое,
и на те, которые содержат не P и плюс первое.
Да, мы договорились, что те, которые то и другое содержат, автоматически верны, и мы их исключаем.
Что еще раз?
Ой, да, равно, да.
Вот, значит, C и плюс первое делится на три части.
И дальше получается следующее, что вот первая часть CIT, да, эти все уже выполнены.
Уже выполнены.
Вот, а из этих некоторые тоже могут быть выполнены.
Значит, эти уже выполнены все.
А эти тоже могут быть выполнены.
Тоже могут быть выполнены.
Значит, за счет значений P1 и так далее, PIT.
Вот.
Вот утверждается, что либо сверху, либо снизу должны быть все выполнены.
Значит, утверждается, что в одном из двух классов,
значит, в одном из двух классов, хотя бы в одном, может быть даже в обоих,
хотя бы в одном из двух классов, выполнены все.
Значит, почему?
Ну, потому что, смотрите, иначе, я здесь продолжу.
Значит, иначе, что у нас есть?
Значит, иначе есть disjunct.
Значит, какое-то P и плюс первое или D0.
Значит, такое, что D0 от вот этих значений P1 и так далее, PIT, ложен.
Значит, то есть в первой группе есть тот, который ложен на вот имеющихся значениях.
Значит, и также есть disjunct.
Значит, не P и плюс первое или D1.
Значит, такое, что D1 от этих же значений тоже равен нулю.
Но дальше можно делать резолюцию.
Значит, резольвента.
Резольвента.
Значит, соответственно, P и плюс первое или D0.
Не P и плюс первое или D1.
Получаем D0 или D1.
Итак, получается, что, во-первых, вот это D0 или D1 лежит в цитам.
Здесь скобки возьму.
Лежит в цитам, потому что там только переменная от первой до этой.
Ну и во-вторых, значит, вот это вот D0 или D1 от P1 и так далее PIT равно нулю.
И это противоречие.
Это противоречие, потому что по предположению индукция мы предположили, что все элементы CIT равны единице.
Значит, это противоречит предположению индукции.
А именно, что все элементы CIT равны единице.
Ну вот, значит, получается, что в одном из двух классов выполнено все.
Ну а тогда за счет выбора значения P и плюс один можно сделать истинными все элементы другого класса.
То есть, например, если выполнено все отсюда, то мы скажем, что P и плюс первое равно нулю и все отсюда тоже будут выполнены.
Или наоборот, выполнено все отсюда, тогда мы скажем, что P и плюс первое равно единице.
И все отсюда будут выполнены.
Тогда я тебя сюда припишу.
За счет значения P и плюс один можно выполнить все скобки из другого класса.
Ну вот, ну и последнее, что нужно сказать.
Нужно сказать, что мы не только исходные дизъюнкты выполнили, но и все, что из них можно вывести.
Ну и значит, в том числе и исходные тоже.
По итогам процедуры будут выполнены все резольвенты и в том числе все исходные дизъюнкты.
Что и требовалось.
Да, это у нас где было? Это здесь где-то было.
Что мы, собственно, доказываем?
Значит, доказываем вот это вот, что форма выполнима.
То есть все скобки одновременно истинны.
Так можно, да, здесь переключить.
Значит, получаем, что в итоге.
В итоге получаем, что выполнены все резольвенты.
Ну и в том числе, в том числе выполнены и исходные дизъюнкты.
Ну а что и требовалось.
Вот.
Вот получается альтернативный метод.
Ну что же, есть какие-нибудь вопросы?
Значит, последнее, что я хочу показать,
значит, это то, что этот метод можно применять не только для задачи выполнимости, но и для вывода тавтологии.
Да, мы именно для этого делались из числений высказываний.
Значит, в том числе можно применять их к доказательству тавтологии.
Значит, применение к доказательству тавтологии.
Ну, собственно, вместо того, чтобы выводить формулу, мы будем опровергать ее отрицание.
Значит, вместо вывода фи будем опровергать отрицание фи.
Так.
Ну, значит, тут вообще-то отрицание фи вовсе не обязан быть КНФ.
Да, то есть, чтобы это сделать и чтобы вообще применять метрорезолюции,
нужно сначала преобразовать как-то к формату КНФ, при этом не слишком увеличить длину.
Сейчас я давайте вам покажу, как это сделать.
Значит, сначала нужно преобразовать к КНФ.
Ну, естественно, затем...
Значит, сначала нужно преобразовать к КНФ.
Затем, значит, опровергнуть методом резолюции.
Опровергнуть методом резолюции.
Так. Значит, как мы это будем делать?
Ну, в общем, в виде это как довольно муторно записывается.
Давайте я на примере покажу, и надеюсь, что будет понятно.
Так. Значит, на примере это формула контрапозиция.
Значит, закон контрапозиция.
То есть, P влечет Q, влечет не Q, влечет не P.
Так. Значит, прежде чем переходить к примеру и рассказать, что, собственно, нужно делать,
давайте заметим следующее.
Значит, такую вот формулу, скажем, не знаю, дайте мне другие буквы, какие-нибудь,
что A равняется B влечет C.
Значит, вот это можно понимать как функция от трех аргументов.
Значит, это функция от трех аргументов.
Да, ну какая-то бульба функции от трех аргументов.
Ну, можете тождественную, это эквиваленция имеется в виду.
Да, можете писать эквиваленцию, может тождественная равенство, это все одно и то же.
Соответственно, у нее есть KNF, как в любой функции.
Значит, у нее есть KNF.
Причем, поскольку здесь всего три аргумента, это будет три KNF.
Да, в том смысле, что в каждой скобке три литерала.
Вот, ну и даже можно написать.
Так.
Значит, сейчас я напишу.
KNF будет такая.
Значит, B или A.
Значит, и не C или A.
И не A или не B или C.
Так, значит, как это получить?
Ну, во-первых, можно, как вы умеете, составить таблицу истинности и составить такую штуку.
Или раскрыть, превратить инпликацию в дизюнцию.
Значит, эквиваленцию тоже там какую-то конъюнцию дизюнции.
И раскрыть скобки.
Но также именно у такой записи есть прозрачный смысл.
Смотрите, что означает последняя скобка.
Она означает, что если верно A, то тогда не B или C.
Ну, а не B или C, это как раз то, что из B следует C.
То есть если верно A.
Сейчас как бы давать я подстрочный перевод на язык импликаций.
Значит, вот это означает, что из A следует, что из B следует C.
Значит, это означает, что из C следует A.
А это означает, что из не B следует A.
Но если как бы теперь мысленно вместо A подставить B в лечо C, то это получится тавтология.
Значит, есть таково антождество, что из B следует C.
А здесь будут две аксиомы.
Аксиома 1 и аксиома 9.
Но оказывается, что вот этих требований достаточно.
То есть если верно заключение, то верна импликация.
Если не верна посылка, то верна импликация.
И если верна импликация, то верна вот такая дезъюнция.
Вот, в общем, вот это такая КНФ.
Так, теперь дальше дело со всей формулой.
Так, ну вот у нас P влечет Q, влечет не Q, влечет не P.
Значит, введем новые переменные.
Значит, скажем, что вот это вот равняется R.
Вот это вот равняется S.
И вот это вот равняется T.
И скажем, напишем вот такую систему.
Напишем вот такую систему.
Я буду равенство писать.
Вы, если хотите, можете антождественное равенство или экваленцию писать.
Значит, R равняется P влечет Q.
S равняется не P. Ой, не Q.
Не Q влечет не P.
T равняется R влечет S.
И еще не T.
Потому что я же хочу противоречие сделать.
Да, то есть вообще-то, если тут все правильно вычислено, если это тавтология,
то тогда T должно быть антождественной истинной.
Но если я еще не T добавляю, то должна получиться противоречивая система.
И тогда вот эту противоречивую систему можно опровергать медным резолюцией.
Вот, значит, как в общем случае это работает?
В общем случае нужно как бы для каждой подформулы завести свою переменную
и написать, во-первых, вот такое вот итеративное вычисление значения формулы,
и, во-вторых, добавить отрицание той переменной, которая соответствует всей формуле.
Тогда, если исходная формула была тавтологией,
то вот такая система вместе с этим отрицанием должна получиться противоречием.
И, соответственно, это противоречие можно отвергать, опровергать медным резолюцией.
Ну хорошо, давайте я покажу, как это, собственно, происходит.
Значит, тут вот каждому из этих равенств будет протестовать три формулы,
и еще вот эта вот одна, то есть всего десять формул будет.
Но на самом деле не все из них будут использоваться при выводе противоречия.
Да, только некоторые.
Так, ну давайте, дайте я все-таки здесь все это напишу.
Немножко меньше будет, чтобы там перед глазами было.
Так, значит, видите, у меня первая формула, R в роли A, P в роли B и Q в роли C.
Значит, соответственно, нужно написать, значит, P или R.
Значит, P или R.
Так, а давайте я конъюнции просто не буду писать.
Сэкономлю назначка конъюнция.
Значит, P или R.
Оскобки буду, чтобы они друг от друга отделялись.
Значит, P или R, соответственно, дальше не Q, не Q или R.
Дальше не R, или не P, или Q.
Значит, это первая скобка.
Так, дальше вторая скобка.
Тут немножко похитрее.
Значит, в качестве B будет не Q, в качестве C не P.
И в качестве A будет S.
Так, значит, B будет не Q или S.
Значит, дальше как бы не не P.
Ну, мы будем двойное отрицание брать.
И тут получится P, P или S.
Значит, дальше... Ой, не хочет писать здесь.
Ну ладно.
Здесь продолжим.
Так, это не S, или Q, или не P.
Так, если увидите ошибку, то исправляйте.
Значит, дальше последняя такая же система.
Значит, тут будет R или T.
Значит, дальше не S, или T.
И дальше будет не T, или не R, или S.
Так, и последнее не T. Давайте я тоже в скобке возьму для единообразия.
Так, ну хорошо.
А значит, теперь как отсюда выводить противоречия?
Ну вот, по этой формуле.
Три раза вместо A, B и C подставлять то, что там написано.
Так, хорошо.
Ну, давайте смотреть, что тут можно вывести.
Значит, вот отсюда и отсюда можно вывести R.
А отсюда и отсюда можно вывести не S.
Но это вот отсюда.
Вот отсюда, только я еще снял военное отрицание.
Значит, у меня в качестве C, в качестве C у меня не P.
Значит, здесь будет не не P, и двойное отрицание снимаю.
Так, хорошо.
Значит, вот получили R, получили не S.
Дальше смотрите, из не S, значит, и вот этого, значит, получили не Q.
И также из не S, и вот этого, получили P.
А дальше, значит, из R, и вот этого, получили не P или не Q.
Ой, не P или Q.
Ну а дальше уже видно, значит, отсюда и отсюда получили Q.
Значит, отсюда и отсюда получили пустой дезинут.
Ну вот, соответственно, теорияма о полноте как раз говорит, что если
исходная форма была тавтологией, то тогда вот здесь вот мы должны суметь вывести пустой дезинут.
Соответственно, если пустой дезинут не выводится, то та старая форма была бы не тавтологией.
На самом деле, тот вывод, который здесь, он еще имеет, значит, он имеет
некоторое такое словесное рассуждение.
Значит, смотрите, ну смотрите, пусть у нас вот эта импликация ложна.
Что это означает?
Ну это означает, что ее посылка истина заключения ложна.
И это в точности то, что здесь происходит.
Значит, R это посылка, то есть посылка истина.
Да, заключение ложно.
Хорошо, значит, дальше посылка истина, значит, верна импликация появляет четко.
Но импликация появляет четко, это дезюнция не по или ку.
А с другой стороны заключение тоже импликация.
Если импликация ложна, то значит, здесь вот эта посылка истина, а вот это заключение ложно.
Ну, то есть получается, что не ку, значит, не ку получается истина, а не по ложь, то есть по истинно.
В принципе, здесь на самом деле снятие двойного отрицания необязательно.
Если вводить еще другие платформулы для самих вот этих отрицаний, то можно и без двойного отрицания справиться,
но просто будет еще больший формул.
Ну вот, это получается противоречие, что с одной стороны не по или ку истина, а с другой стороны по истинно, а ку ложно.
И вот это противоречие как раз показывает, что вся большая импликация не может быть ложной.
Ну вот, какие-нибудь вопросы.
Значит, смотрите, если мы вылили пустой дизюнкт, то тогда исходная система была несовместная, она невыполнимая.
Но что нам говорит исходная система?
Она говорит, что мы последовательно вычисляем значение формулы, получаем значение t, и при этом t ложно.
Но если это невыполнимо, значит, вычисляя значение формулы, мы не можем получить ложь.
А это означает, что формула тавтология.
Тавтология, значит, везде истинно, значит, вычисляя ее значение, мы не можем получить ложь.
Вот, значит, вот такой метод.
Так, ну ладно, значит, сейчас про квантера уже нет смысла начинать разговор.
Давайте я чуть-чуть еще поговорю про резолюция.
Значит, на самом деле аналогичным образом можно работать и наброс задачи о выполнимости.
Значит, аналогичной техникой...
Аналогичной техникой можно свести...
Любую задачу о выполнимости...
Любую задачу о выполнимости произвольной формулы...
Значит, к задаче о выполнимости KNF и, более того, о выполнимости 3KNF.
Прежде чем понятно...
Нет, значит, смотрите, этот метод вообще говоря не быстрый.
То есть как бы полный метод это вывести все, что угодно, а их экспоненциально много может быть выводимых.
И посмотреть, есть ли там противоречия, есть ли там пустой дизайн.
Но если мы уже вывели все, что угодно и пустого дизайн нет, то она выполнима.
Но, значит, смотрите, быстрого метода, более быстрого, чем экспонента,
быстрого метода решения задачи о выполнимости неизвестно.
Поэтому любой метод решения будет в лучшем случае экспоненциальным.
В частности, это тоже, но тем не менее он будет работать.
За экспоненциальное время он будет работать.
Значит, любую задачу о выполнимости произвольной формулы можно свести к задаче о выполнимости 3KNF.
Значит, 3KNF значит с каждой скобки максимум 3 разных литерала.
Ну и метод аналогичный, а только метод такой же.
Но вместо отрицания T в конце, вместо отрицания T добавлять просто T.
Ну и тогда получается, что если наоборот, если формула есть противоречие,
если формула противоречие, то тогда вот это T должно быть точно нулем.
И тогда если мы еще добавим T, то должны вывести пустой дизьон.
А если хотя бы на каком-то наборе будет единица, то мы как бы выведем на самом деле значение этого набора.
На самом деле можно еще заметить вот такие вещи.
Наблюдение.
Если с KNF методом резолюции можно вывести, например, P,
то тогда P равно единиц в любом выполняющем наборе.
Значит, то P равняется единице в любом выполняющем наборе.
Ну а соответственно, если не P, то тогда P равно 0 в любом выполняющем наборе.
Ну а если и P, и не P, то тогда, значит, выполняющих наборов нет вообще.
Почему это верно?
Ну потому что, смотрите, если был выполняющий набор, в первом случае,
если был выполняющий набор, где P равно 0, то можно было бы добавить не P, и осталось бы еще выполнимый KNF.
А тогда, если мы вывели еще и P, то тогда, потом мы вывели бы студию из юнт, и она была бы невыполнимая.
Значит, если мы вывели P, то тогда все-таки P должно быть равно единиц.
Но здесь аналогично.
Ну и это позволяет не только проверять выполнимость, но и искать выполняющие наборы.
И в целом, значит, если пытаться метаморезолюцией искать выполняющий набор,
или вообще пытаться что-то решать метаморезолюцией, то нужно пытаться получать все более и более короткие дизьюнт.
Но это не всегда получается.
Так, сейчас я еще одну фразу скажу.
Это, на самом деле, теорема.
То есть построены явно невыполнимые формулы, у которых, тем не менее, самый короткий вывод противоречий метаморезолюции будет экспоненциально длинный.
Все, спасибо за внимание.
