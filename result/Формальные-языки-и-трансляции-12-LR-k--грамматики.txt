Сегодня обсуждаем LRK парсер, давайте немножко по расшифровке.
L потому что он читает слово слева направо, R потому что
слово, которое он генерирует правосторонний.
Для того чтобы построить что-то новое нужно понять
почему чего-то старого было недостаточно.
Давайте вспоминать вообще, от чего мы начали думать
о парсерах.
Казалось бы, есть какой-то замечательный объект называется
шрифт плюс автомат.
Вот что тут у нас, epsilon 2.0 epsilon 2.0 s, тут у нас было
что-то написано вроде epsilon a alpha r, либо a маленькая
маленькая epsilon, вот тут мы завершались.
Ну вообще хочется сказать, что если этот автомат парсит
вывод, то он это делает оптимальным образом, но чтобы это было
еще линейным образом, нужно сказать, что у нас в грамматике
нет пустых переходов всяких, но как избавляться от пустых
правил мы поняли.
В нормальной форме комского это было как подчасть.
И как построить по работе такого автомата вывод тоже
понятно, вы отслеживаете на этой педле какие правила
применялись, в каком порядке, и вот примененные первые
правила вам дадут вывод на выходе, и дерево вывода.
Основный вопрос, который нужно тут понять, на момент,
пока мы еще не дошли до LR парсера, чем плох такой
автомат?
Он работает за линию, за каждый шаг, он либо для
такие правила, это будет o от w, либо такие, это длина
вывода.
Если у нас пустых правил нет, то длина вывода просто
равна длине слова, ну там с точностью какие-то константы
до двух по-моему.
Он недетерминированный, если бы мы его детерминировали,
если бы это было можно, если бы мы обойдем все исполнения,
это будет экспонента.
Отсюда мы начали понимать вообще, зачем нужны парсеры,
зачем нужно было, например, кокеангрекосами.
Потом построили early parser, давайте вспомните, что там
было.
Проблема early parser было то, что у нас какие-то ситуации,
мы штатные какие-то вещи обходили несколько раз,
то есть, вспоминаем, мы клали ситуации такого
вида, альфа, точка, бета и клали в джи.
Если вы посмотрите, особенно на разбор, я надеюсь, на лекции
были какие-то разборы, он прямо на скобке, при разборе
вот такого слова, две буквы а, потом две буквы б, и вот
такого слова, ну громадько-рисобок очевидно, s, ас, бс, либо
мы видим, что до того, как дойти сюда, облгритм
сделает одинаковую работу, потому что дерево вывода
здесь и здесь одинаково с точностью последнего символа.
Вот тут надо раскрыть kb, а тут надо ks раскрыть.
Это доводит на мысль о том, что алгритм early, если
взять несколько запусков на разных словах, на одной
грамматике, будет считать одни и те же вещи много
раз.
Давайте попробуем какие-то вещи предпочитать, то есть,
какие ситуации другие порождают, например, все приникли запихнуть
в единое большое состояние, просто помнить, что здесь
у нас вылезла такая ситуация, какие ситуации у нас порождают,
чтобы не делать снова предыдущие комплеты.
В принципе, вот это то, что происходит в alr-парсере,
мы с вами возьмем early, мы запустим какой-то предпочет
первую фазу, вот, и дальше будем просто ходить по множественной
ситуации.
По сути, остаться только сканы.
Откуда вообще будет линия следовать?
Ровно по тому причине, что сканов early идет ровно
линию.
Все, что идет остальное, это были предыдущие комплеты.
Утверждается, идем предыдущие комплеты в фазе предпочета
и все получается.
Но для того, чтобы до этого дойти, нужно в целом пройти
очень много всяких страданий.
Так, значит, это я уберу.
Главное, замонти вот такой автомат, все, что будет
прийти, оно будет к этому автомату сводиться.
Ну, собственно говоря, можно ввести ситуацию, как
в alr, оставив войдет то, что нам нужно.
В конспекте это называется lrk-ситуация, давайте пока
ограничимся lr0-ситуацией.
Ну, что у нас там?
Определение на правой части первой страницы.
А, стрелка, бета 1, точка бета 2.
Если тут идет конспект, пока еще можно не начинать
вводить конспект, потому что пока еще ничего содержательного
не было, пока только подводка.
Дальше запяду писать не будем, потому что будем
предполагать, что всякий раз, когда мы увидим такое
дерево, неважно, где оно находится.
Значит, вот это будет lr0-ситуация.
То есть такая ситуация в целом получается то же самое,
что было в lr.
Что мы можем вывести каким-то образом, вывести букву a,
отсюда получить бета 1, точка бета 2.
Точка означает то же самое, что в прошлый раз.
Мы дочитали слово вот отсюда.
Просто теперь буква находится там, и это будет уже неважно.
Вот.
Пока еще я не ввел, просто говорю, это будет lr0-ситуация.
Сейчас я введу, что такое lrk, и я получу здесь это примерно
подточнее.
Пока я говорю, что ситуация будет такой объект.
Вы понимаете, пока lr0 как единое обозначение, не
как lr от параметра.
Пока просто вот lr-ситуация такой объект, где вот этот
это правило.
Правило с удлиненной позиции.
lr-ситуация допустима для префикса.
Будем взять обстричь это множеством w, g сверху k,
в нашем случае будет сверху 0, от альфа, бета, если можно
вывести как.
Ну что мы тут пишем?
Из s, альфа будет вот здесь появляться, сейчас это пишу
как раз.
Альфа, а, там не знаю, какой-то дельта, уже неважно.
И за один шаг все правостороннее.
Альфа, бета, дельта.
Мы можем получить вот такой вот префикс, при помощи
какого-то вывода, в котором последнее правило вот такое
фиксировано.
В early было то же самое.
В последних часов хочу упомянуть какую-то интуицию, что lr-разбор
подходит к lr-разбор.
А дальше мы будем с вами продиктировать алгоритм
early.
То есть мы говорим, что если тут точка находится
перед большой буквой, то можно в это же множество
допустимых ситуаций.
То есть давайте тут напишем.
Значит, точка B, бета 2.
Отсюда следует, что можно делать вот такой вот вывод.
Альфа, бета, B, вот, и потом за один шаг из бета дельта.
Альфа, бета, это дельта.
Вот, это будет завтра замыкание.
Пока в чем интуиция?
Мы говорим, что ситуация допустимая, есть вывод.
Говорим, что допустимая такая ситуация, если точка
перед буквой, допустимая ситуация с правилом из этой
буквы что-то, где точка не перемещается.
Тут будет правило что?
Бета, стрелка.
И это точка перед начальем.
Пока мы еще не дошли.
Пока давайте lr-ноль поймем.
Что?
Да, lr-ноль пока введено.
Я говорю, что тут ноль на самом деле написан.
Мы сами говорим, что мы все предикты и все комплиты
сделаем на фазе предпочета.
Это значит, что мы не знаем какое у нас слово, поэтому
тут никакого не составить.
Мы понимаем, какие у нас будут допустимые ситуации.
А потом скажем, что если у нас была допустимая какая-то
ситуация вида, а, стрелка, альфа, точка, а маленькая,
бета, прочитав букву а, станет допустимой ситуация
точка перенесена сюда и все ее замыкания при помощи
пилетов и комплитов пустого слова соответственно.
В чем проблема?
Это могло бы работать, потому что это ровно то, как поступает
shift plus автомат.
Почему это могло бы работать понятно, почему это не может
работать?
Потому что всякий раз, когда вот здесь нужно поставить
новый предикт, у вас могут быть разные правила для
вот здесь.
Там это 1, какое-то это 2.
И получается, что у меня в какой-то момент могут
выйти две ситуации.
То есть я там предсказал два варианта, прочитал
оба варианта, получил а, так, альфа, а, в, ну выводы
правосторонние, поэтому тут будут, значит, соглашения,
которые я говорил еще на первый раз, которые я вел,
маленькие буквы латинские, это просто слова из маленьких
букв.
То есть там нет ни терминалов.
Правый терминал, из него выводится за один шаг альфа,
бета, в.
И, значит, вот здесь ситуация допустима.
О, не а, тут с, прошу прощения.
Ну, все же везуточка, выводится сколько-то шагов.
А что про за один шаг, да.
Давайте вот зайти на ксединчик, чтобы было проще.
Вот.
Гамма, б, х.
Как-то другой вывод произошел, и вдруг так получилось,
гамма, дельта, х, который оказался равен альфа, бета,
то есть я получил вот этот префикс двумя способами,
вот таким и таким.
Как это могло возникнуть?
Давайте посмотрим.
У меня было гамма.
Я к нему, использовав правила, b, стрелка, это 1, бета, это
2.
Поставил его сюда.
Гамма это 1, бета это 2, х.
И сказал, что вот это альфа, бета.
То есть я, когда вижу на стеке альфа, бета, не знаю,
что мне делать.
Сворачивать бета в а, либо идти дальше, читать что-нибудь
еще в будущем, и сворачивать вот это все большое в одну
большую букву b.
Алгоритм, поскольку он может допустить, у него вероятная
ситуация и такая, и такая есть.
Не знает, что ему делать сейчас, сворачивать или
не сворачивать.
Эта штука будет будущим названа shift-use-conflict.
Ой, сейчас.
Это reduce-use-conflict.
Либо rr, либо sr.
Reduce, это значит, что мы сворачиваем здесь b, бета,
в букву a.
И продолжаем дальше парсить.
Вот этот автобус, который я нарисовал.
Мы хоть хотим, чтобы этот автомат вот эту вот букву
бета забрал, ну не букву, строку бета забрал, поставил
букву a на стек.
И пошел дальше парсить.
Либо, возможно, хотим делать по-другому.
Хотим еще что-нибудь прочитать.
Потом свернуть больше, в большую букву b.
Вот недетерминированный автомат, он может сделать
и так, и так.
Какое-то неправильное, какое-то неправильное.
Ну, алгоритм, который должен сделать один выбор сделать,
он не может выбор сделать.
Вопрос, который всегда высказывают в формальных
языках и в парсинге.
А что делать, когда есть у тебя однозначность?
Ответ.
Сделать такое определение, чтобы не было.
То есть я сейчас скажу, что lrk-громатика, это такая
громатика, что если у меня возможно вот это и это,
то это один и тот же случай.
Ясна ли идея?
Сейчас я просто напишу громатику, напишу вот это
все снова, заново, уже как доказанный факт.
Какая идея?
Зачем нужно определение?
Да нет?
Если у вас одинаковый префикс, то они одинаково
водятся?
Да.
Если у вас одинаковый префикс, последний шаг
можете предсказать.
Вам не важно, что предсказано вот здесь.
Последний шаг предсказаться однозначно.
В этом случае reduce, в этом случае какой-то там дополнительный
перенос еще сверх, и потом reduce сюда наверх.
Знаете вопрос?
Вот на первой парте.
Что?
А какой reduce?
Ну, у вас же был shift-due с автоматом?
Перенос свертка?
Не было.
Не было?
Плохо, что не было.
Вспоминаете автомат, который был на лекции, когда вы доказывали
про автомат и кассгроматику?
У него было тут две операции.
Ставим букву на stack и снимаем правую часть, ставим большую
букву на stack.
Вот один из них перенос, ставим букву на stack.
Перенос.
Нет, нет, нет.
У вас был почти такой автомат.
Буквы стали много.
Вот.
Ну, я уже поругался с Павлом, потому что был не тот автомат,
но тем не менее можете взять как упражнение себе, что
есть другой автомат, который делает наоборот.
Он ставит букву на stack, либо снимает правую часть,
ставит левую часть.
Из чего он начинает?
Ставит букву S.
Сейчас.
Вернее, нет.
Начинает с пустого слова, а потом букву S снимает
один раз.
Вот так вот он делает.
Правую часть он снимает.
То есть там, получается, завершаешь состояние.
Справа, это вот.
Ну, грубо говоря, он на каждом шаге либо ставит
что-то на stack, либо сворачивает левую часть, ставит правую
часть.
Смотрите.
Автомат целиком.
Давайте.
Автомат целиком.
Давайте посмотрим.
Ну, просто утверждается, что это задача, которую
надо порешать.
Так.
Давайте посмотрим.
Вот здесь, что у нас?
Буква A ставится на stack.
И второе.
Ничего не происходит.
Снимается αR, ставится A.
В конце снимается S.
Что там?
Эпсилон, эпсилон, S.
Вот.
Ну, перенос свертка.
Либо перенесли, либо свернули.
Да.
Может быть, замкнутый, потому что здесь именно правая
буква.
Это то, что снимается так.
Вот.
Я вообще не хочу этому автомату дать внимание, потому что
это не то, о чем мы сегодня разговариваем.
Вы не воспалитесь.
Вот.
Я на него сослался, потому что думал, что где-то он происходил
на семинарах.
Я бы даже клок добавил в свое время.
Вот.
Мы сейчас с собой договоримся, что ты на следующих лекциях
в следующем году вот такой автомат рассказываешь,
прям очень надо.
Так.
Вот здесь, на самом деле, я был уверен, что этот автомат
где-нибудь появлялся.
Но, тем не менее, значит, здесь можно либо свернуть
B, а то в A, либо не свернуть.
Что-нибудь другое сделать, а то свернуть в будущем.
Давайте назовем грамматикой или арграмматикой, если
такого не возникает.
Слушайте, давайте теперь определение переходим.
Так.
Ага.
Вопрос, который был задан.
Вот утверждается, что есть грамматики, которые все
еще не знают сворачиваться или не сворачиваться, но
если дать им подсказку, а именно, поставить первую
K-бук в слово, которое они еще не видели.
То есть, автомат переносит свертка, он будет видеть
вот этот стэк.
Как это прочитать слово?
Вот это у него очень обработанная часть.
Если дать ему подсказку и разрешить ему поставить
вот эти K-бук, он после этого делает однозначный
выбор.
Вот K – это то сам подглядывание.
То есть, мы говорим, что используя стэк, который
имеет автомат переноса свертка, и следующие K-бук,
которые остались в слове для прочтения, вот обычный
автомат их не умеет подсматривать.
И у нас есть задача в курсе, что на самом деле можно
перестроить вот тот автомат, МП-автомат, чтобы он занимался
подглядыванием.
Но это оставляется скобками.
А алгоритм?
Алгоритм.
Значит, теперь смотрим, что тут написано.
Пусть есть два вывода.
S' выводит что-нибудь αw, за один шаг αβw.
S' выводит со звездочкой γbx, выводит за один шаг αβy.
Так, сейчас я тут немножко вытру, чтобы оно не мешалось.
Вот так вот.
Альфа, бета, у.
Как может взять с альфы?
Я объяснил, что вдруг у нас либо гамма короткая,
и тогда при выводе b гамма пополнится, чтобы это добавилось,
либо гамма длинная.
Тогда мы там какой-то кусочек бета вывели, и все на альфа-бета
получится.
Это уже неважно.
Штрих – это главный сил в гарматике.
Мы говорим, что у нас гарматика стартует с S' N' P.
Почему не S?
Потому что я всегда предполагаю, что у нас была какая-то гарматика,
где S – это стартный терминал.
Я добавил стартный терминал S' и сделал вот такое правило.
S' в S.
И звездочка означает, что мы выводим за какое-то количество
шагов произвольные.
Из единицы означает, что за один шаг выводим.
Дальше пишем, первые k-букв у W равны первые k-букв у Y.
Интуитивно.
Это означает, что здесь первые k-букв одинаковые.
Но, а что если вот это не слово?
Тут, понятное дело, A была самой правой буквой, мы ее
открыли, поэтому было W, а сразу W.
Но здесь был X.
При выводе b появилось еще что-нибудь.
Значит, нам нужно first, вот эти вот самые первые k-букв,
обобщить на случай сроки терминалами.
Поэтому давайте, собственно, вводить это чуть более
строго и чуть более объемно.
Так, что нам отоставляю?
А если мы сейчас вводим эквивалентное объективное
состояние?
Пока, пока.
Я еще ввожу определение.
LR как грамматика?
Я бы еще не закончил.
Подождите, дайте мне закончить определение.
First k, а строки с не терминалами.
Это такие слова из k-букв или меньше, что я могу из
гамма вывести W с каким-то хвостом, то есть префикс,
и дальше одно из двух.
Либо W равен k, то есть это честный k-букв префиксов,
либо W меньше, чем k, и при этом X пустой.
То есть я все-таки могу вывести короткое слово,
считаю, что префиксом из k-букв этого слово является
оно само.
На практике это будет означать, что вы просто все
ваши слова доклеите какой-нибудь доллар в конце, то есть
ваши слова имеют бесконечную большую длину, и доллары
в конце написаны.
То есть это какая-то реализация, которая нам не сильно помешает,
но для формулиза нужно.
Мы говорим, грамматика это LR как грамматика, если
что.
И существование таких двух выводов, двух выводов,
что первые k-букв совпали у W и у Y.
При этом, заметьте, W это строка из сигма со звездой,
а на нем чем-то другим быть не может, потому что она,
если бы она не связана с терминалом, а не было бы
самой правой буквы, вывод правосторонний.
Но Y может держать на терминале буквы сейчас, потому что
X был строкой из сигма со звездой, но B, когда она скрытась,
она могла сюда добавить букву, потому что А это то,
что мы выделили.
Вопрос?
Не вопрос.
Хорошо.
Сигма объединения N со звездой.
Почему?
Слова, префиксы слова, которые можно вывести.
Вывели все нужные слова, взяли все нужные префиксы.
K или меньше, если у вас ничего дальше нет.
Если вывели короткое слово, больше, чем K, тогда вы
берете вот эти k-букви и все.
Считайте для себя, для удобства, что у вас просто
все слова, которые вы вводите, имеют доллары в конце.
Вот очень много долларов в конце.
Тогда здесь мы будем брать не меньше K, а мы будем брать
W и дописывать к нему доллары.
Так, чтобы так А добить.
В реализации, на самом деле, можно сделать так, чтобы
долларов не было, но это уже, когда на сценариях вы
будете о том, как это нормально написать.
Из того, что ферсты совпали, означает, что у вас A равно
B, альфа равно гамма, и что там?
Х равен Y.
Значит, тут, внимание, кто бы читал Тихо Ульманн, там
есть небольшая ошибка.
Они пишут, что альфа, а.
Сейчас.
Y равно гамма, BX.
Это не то же самое.
Ровны не строки, равны состальные части.
То есть, вот это равно этому, это равно этом, и вот это
равно этому.
То есть, эти два вывода, это один и тот же вывод, на
самом деле.
По крайней мере, с учтением последнего правила.
Теперь определенно закончилось.
У вас был вопрос по определению.
Грамматика.
LRK-грамматика.
Если из того, что есть два вывода, и выполнено такое
условие, это один вывод.
Ферст K вот этого и вот этого.
Как множество, да.
Но при этом, FK от W, это вполне определенное множество
одноэлементного множества.
Одноэлементное множество.
То есть, вы говорите, что здесь можно получить
те же самые K-букв.
Чтобы вы не выводили, K-букв повторяться.
Для ферст 0 это означает, что у вас просто тут.
Вот.
Для ферст 0 это означает, что здесь просто одинаковые
строки написаны.
Вот.
Такие дела.
Так.
Ну, что такое ферст 0?
Так.
Ну, не Epsilon.
Epsilon, на самом деле.
Да, вы правы.
Вот.
Это означает, что я могу получить буквы в всего
одним способом.
Потому что это всегда верно.
Если у вас здесь два вывода, вот таких вот, так что
префесы одинаковые.
Не важно, что тут находится, здесь были одинаковые
буквы.
Что X и Y?
Еще раз.
Это определение.
альфа равно гамме, икс равно равен игреку да то грамматика лерка грамматика то
есть я имея имея стэк и имея кабукв однозначно определяю что должен был
взять на предыдущем шаге как работает дальше алгоритм он смотрит стэк смотрит
кабукв говорит что есть сегодня способ это делать он его помнит он посчитал
заранее он сворачивает b сюда потом здесь смотрим стэк смотрим кабукв
снова сворачиваем ну или там или переносим у него на каждой шаге работы есть сегодня
вариант действий который запомнил заранее вот что происходит так значит здесь поставить
себе пометку которая потом вернусь потому что это не совсем то что нужно но поскольку мы
пока не способны видеть разницу я вот этот мет пока оставлю тут не ферс написан на самом
деле вот давайте мы чуть дальше по этим определением поработаем и тогда вернусь
сюда почему не ферст на помните может не сконцикле ци я это потеряю вот здесь
а пока двигаемся дальше в сторону допустимых ситуаций
вопрос задавайте
следует да ну как бы мы требуем равен со всех трех
ну на самом деле все что нам нужно что тут правые части одинаковые тут буква одинаковым
правом открылась зачем просто сказать что из того что эти вещи равны у меня тут была
одинаковая буква и права который применился но тоже одинаковая вот что тут на самом деле написано
что тут все правосторонние все везде правосторонний это стал в самом начале все
в дуб правосторонний смотрите дубль от чисто из терминалов по какой причине вы букву а раскрыли
тут это значит что это буква самая правая значит что проведения ничего нет тут и кто же только из
букв но y нет потому что бета это не правая часть правила из б это какая-то строка правой части
правила из б я показывал на той доске как что может происходить может быть еще очень много
всего странного но вот это вся цитата может произойти вот значит определение вы с ним увидели
еще не понял определение еще раз есть есть два вывода два вывода такое что я получаю одинаковый
стэк тут альфабет тут альфа бета и у меня совпали первый кабак вот здесь и здесь да ну это то что
еще не лежит то есть то что мы еще не видели по факту тогда будет прочитано слово это будет
первый кабак непричитной части у вас как выглядит слово вот было слово mp автомат он вот сюда дошел
вот это прочитал вот это у него с кореткой торчит вот он вот это кабак посмотрел и говорит что
есть у меня к букв значит я применяю вот это правило мы задаем вопрос а что если может быть
еще вот это правило автомат отвечает нельзя потому что если бы тут были кабак одинаковый и тут
стэк одинаковый то последние правила бы пляться однозначно увидели да из того что вы знаете стэк
что на нем альфа бета и того чтобы идти к букв вы одним образом определяете предыдущие правила
которая применялась принято утверждение сколько там n раз вы говорите что у вас вся работа однозначная
так ну теперь давайте чинить дальше определение у нас было вкж или наоборот неважно от альфа бета
вот собственно говоря был вопрос что такое как почему мы будем может быть не нулевым наоборот
давайте наоборот вот допустимые ситуации для префикса альфа бета значит ситуация называется
допустимый так что такое ситуация то же самое что я писал а стрелка бета 1 точка бета 2 дальше
теперь мы должны запомнить ситуацию только где мы находимся в дереве что мы еще видим дальше чтобы
не однозначно разрешилось это что бы не разрешилось мы отдельно поставим ситуацию где лежит такой
префис такой какой-то какой-то префикс поэтому добавляем сюда у это строка ну здесь мы со строка
сейчас разделим видите вас вот тут разделилась альфа это то что было до буквы бета то что
после буквы потому что допустим префикс он для одной строки делается то есть я говорю
допустим если я могу поделить его на две части вот равно это и написано это все что я могу не
только так это получить еще может какой-то альфа штрих бета штрих какой-нибудь равный ему он свои
правила предпринесет значит это правила допустима то есть она лежит вот здесь если
это ситуация да значит есть вывод а штрих ну вывод существует вот то что написано сверху вывод
со звездой альфа бета дв за один шаг сейчас минуту альфа а в альфа бета дв тут надо понять
какой основной вещь вот это правила фиксировано это правил ровно по стой так вот альфа бета 1 вот
так отвечаю на ваш вопрос и вот это равно альфа бета о теперь точно нормально я принял правила
поставлю точку и говорю что вот этот префикс это вот этот префикс что можно было убрать ну
просто для чего я пишу так потому что я хочу вот такие ситуации отлавливать
смотрите у вас было правило вы как вырли отметили тут какую-то позицию и сказали что у вас вот до этой
позиции вы в воде альфа 1 бета 1 это альфа бета вот допустим мы сами хотим поддерживать
но у вас бы точку выкручивали точка это это часть обозначения про нижнюю точку ну я пишу
если так будет понятнее это тоже самое для того чтобы видеть что вот эта точка находится вот
здесь и вот префикс отделился это для понимания на самом деле вот существует вывод и альфа не
значит мы сегодня да мы сегодня движемся в сторону к альфе 5 9 о том что что я же говорил что это
цепочек который мы видели скобок в будущем то есть ситуация это где мы находимся в
дереве и что мы видим с плави а так и ферст к а дубль ва у равно ну тут не раунду царя
принадлежит вот спасибо замечания ну от этого бы то не было да то есть вы получили вот этот
рефикс так минутку не сложилось так мы же видим вот вот это на самом деле поэтому у равно
ферст к я все медленно того чтобы саму здесь не потеряться бета 2 у бубля о вот такие дела
ну на самом деле принадлежность ну пишем равенство смотрите это же это множество слов то же самое
выражение было мы когда писали что там слово принимается вот тут вот у в частности это первый
как букв вот такого с такой строки при этом такая строка она не терминала поэтому выводим
из нее все что можно вывести и говорим что у тут лежит нет вот так вот требуем вот так
да я иду вслед за хульманом да возможно у вас будут еще какие-то другие ситуации там лежать
ага смотрите идейно это означает что вы получили букву а тут была альфа ну альф один какой-то
отсюда получили бета 1 бета 2 в этот момент вы пока были в дереве вы дочитали слово вот сюда
дочитали до этой точки дочитали дочитали так что вам осталось прочитать ну вот вот это и вот
это правильно ну пусть это дерево верное вот это и вот это слове мы видим у вот у первых букв вот
вот эти вот персамые первые буквы а в зереве мы видим бета 2 который мы еще не построили и
то что еще за ним сверху было вот здесь да у позволяет нам отделить на дальше ситуации
то есть мы говорим что в этой ситуации нужно будет иногда shift на reduce но вот у да самодозначность
у это строка это прям строка кайле меньше да касса звездой с обозначение вот отсюда
в ожидании растут потому что ферс бывает строки маленькой длины в случае когда вы до конца строки
дошли так сейчас ничего тут не забыл сказать ага одну минутку надо двигаться очень аккуратно
очень медленно вот почему я пишу тут альфа бета снова же потому что я хочу потом отследить
правила достоит точка в конце чтобы по ним свернуться вот значит давайте посмотрим
теперь на такое множество у нас предыдущие предыдущие просто восстановим вот ну здесь
иногда вообще как closer иногда не обозначают собственно говоря ну дайте напишу чтобы оно
тут было клоус от какого-то может ситуации там г большого вот значит мы для каждой ситуации
вида давайте тут напишем вот так ну гамма большой греческая вот и возьмем к нему вот
такие ситуации б стрелка точка точка это вот так для ситуации а стрелка бета 1 точка
б так есть надо нормально писать давайте неважно так бета 2 вот тут какой-то в
смотреть это предикт этот счет что если мы имеем вот такую ситуацию у нас вот выводим
а до буквы б и сказать что можно добавить сюда вот здесь надо чтобы совпали буквы тут тут я
значит внимание я самumn на лекции я что может пользоваться на семинарах потому что я не
верю что это можно сказать без конспектов конспектор который я сделал можно принести
собой на экзамен конспекты вы взяли сами что за лекции может быть собой на экзамен просто
отвечать надо было чистого листа написать все можно вспомнить можно будет по конспекту
То есть, грубо говоря, читайкспект на экзавне не выйдет, надо
будет объяснить, что происходит.
Вот.
Так.
Угу.
Так, я сейчас обращусь.
Можно даже ахульму на собой принести на самом деле.
Вот, ну только в этой теме.
Так, о, вот оно.
Ага.
Что нам тут нужно?
Нам нужно, чтобы вот этот у… Ну, значит, на крыльях
просто вот этот у… Ну, давайте нарисуем.
S штрих, бета 1, точка B, бета 2.
Здесь точка… Вот так вот.
Давайте посмотрим.
Мы знаем, что после этого правила шла строка U.
Что после этого правила идет?
После этого правила идет вот эта строка, бета 2U.
Это значит, что здесь V лежит в ферстке от бета 2U.
А, бета 2V маленькая.
О, восстановили.
Так, вот это вот я описался, пока говорил.
Конечно.
Вот здесь, вот U-був, который мы видим тут, они находятся
вот здесь.
То есть, просто отслеживайте, когда вы это будете писать,
отслеживайте здесь, в дереве, что находится после правила.
Тут, после правила, вот здесь оно находится, а вот
здесь, как оно находится после правила, находится вот
тут.
Что за множество?
Допустимость?
Мы говорим о ситуации, да, мы говорим о ситуации
видов, лежащих в G.
Ага.
Спасибо большое.
Вот.
Но я closure использовать не буду, я буду говорить,
что просто V – это замкнутая множество ситуаций.
Я скажу, что там лежат все, никаких других.
На практике.
Смотрите, в реализации вы получите какие-то ситуации,
потом будете их замыкать.
Это будет на следующей лекции.
Да, в теории мы просто говорим, что здесь, здесь уже лежат
все нужные там ситуации, все замыкания тут есть.
Поэтому мы сами говорим, что мы на текущей лекции
уже построили здесь все VKG, и они все замкнуты.
То есть, там лежит все, что нужно.
А на следующей лекции я объясню, как строить эти
ситуации итеративно.
А что нужно будет сделать?
Нужно будет проточить везде точки и все везде все замкнуть.
Но это давайте оставим в следующий раз.
Объект, в котором мы сегодня работаем, это VKG для всех,
возможно, префиксов.
Вопрос.
Префиксов там много, они бывают сколько года большой
длины, а ситуация конечна.
Ответ.
Почему так?
Потому что в принципе ситуация конечна.
Вот такой объект, он конечный.
Стоит вот это.
Правило, позиция, слово.
Значит, у всех ситуаций конечна много.
Это означает, что у всех подмогу ситуации конечна
много.
Слово короткой длины и правило.
Еще раз, это правила грамматики.
А, стрелка, бета, 1, бета, 2.
То же самое, что в Erle было.
Я начал до самом начале.
Вот мы принесли Erle сюда.
Я очень пытался, чтобы было очевидно, что ситуации
такие же, как в Erle.
Ничего не поменялось.
LR это просто Erle с предпочитыванием.
Понятно ли тут, что я говорю?
Надеюсь, хотя бы немножко понятно.
Объясняю, смотрите, почему у нас в Erle ситуации было
конечно много.
Мы говорили, что ситуация в Erle это просто картридж
из трех элементов.
Тут тоже картридж из трех элементов, что нужно знать?
Правила.
Какое-то от же.
Точка, тоже от же.
Слово, это какая-то там 1, плюс 2, плюс 3, и далее
до плюска.
Этого всего конечно много.
Дальше говорю, смотрите, если ситуации конечно много,
значит множество ситуаций тоже конечно много, два в
степени.
Правильно?
А префиксов бесконечно много.
Тут же префиксы сколько года длинные бывают?
Это значит, что какие-то префиксы совпадут.
Для каких-то префиксов совпадут может быть ситуацией.
И вот на это будет вестись игра.
Дальше тут Павел Грибыч не даст собрать, что на самом
деле, когда вы пишете Erle, у вас эта экспонентная ситуация
достигается.
Кому интересен, значит, доклад по теме Erle, это сжатый
Erle.
Но это ко мне может подойти отдельнее в обыдом.
Теперь мы будем строить вот такие объекты.
На следующей лекции на этой лекции говорим, что
Пусть у нас есть ВКЖ, это все допустимые ситуации.
Вот.
Сейчас тут одно из двух.
Вопрос.
Зачем у нас такое страшное определение?
Почему мы не могли сказать просто, что у нас есть W?
Так.
И у нас есть QZ.
Так.
Что они равны?
Не совсем, нет.
Что они оба...
Что у них по обоих перс, это некоторая строка.
Смотрите, в чем проблема.
У вас последнее правило вот здесь.
Б.
Был как это 1, бета это 2.
Ну, один из примеров.
Это означает, что вы при чтении...
Ну, вдруг на какое правило возникало?
Вы при чтении, это 1, ушло в гамма, получалось альфа.
Бета осталось, это 2, ушло в х.
Значит, вы при чтении слова будете не х видеть.
У вас вот здесь ритм остановится.
Он будет видеть, это 2х, а не х.
Я объясняю, почему определение ваше не будет работать.
Дальше...
Что?
О, определение из нирка еще более неправильное,
чем то, которое было дано в Аха-Ульмане.
Я по нирку все время пытался рассказывать,
потому что из него не выйдут нужные на факты.
Так, ну давайте сейчас буду дальше работать.
Ну, в частности, в частности,
при нирка начинается применение Аха-Ульмана.
Если вы не верите мне, поверьте Аха-Ульману.
У них все-таки есть именитые имена большие.
Больше, чем УЭТМО, наверное.
Что?
Это не имя, это фамилия.
Ха-ха-ха-ха.
Хороший комментарий.
Теперь посмотрим.
Грамматика, ЛРК-грамматика.
Это то же самое,
что для...
Ну, давайте так, для любого...
любого уйтиного префикса.
Еще раз, это теорема из оригинальной книжки.
Я оставлю пидель, для того, чтобы вы потом нашли.
Давайте я вам отвечу после того,
как я сейчас это все доказываю,
потому что я сейчас читаю не с Аха-Ульмана.
В Аха-Ульмане была ошибка, в этом проблема.
Даже там была ошибка, потому что на нирке.
Так.
Значит, если...
Давайте так вот.
Если...
Стрелка Бета с точкой У...
Значит, допустима...
Допустима.
То недопустима.
Никакая другая ситуация вида А1.
Что у нас там?
Бета 1.
Бета 2 В.
И У лежит.
Ферст К.
Так, теперь момент истины.
То, что называл в конфликте анализ определения.
Давайте посмотрим.
Какая ситуация?
Что это означает?
Здесь допустимость означает,
что если ты видишь вот эту ситуацию,
в множестве допустимых ситуаций, В,
что надо доделать? Вопрос какой-то в зал.
Кто-нибудь может ответить?
Вот, если есть такую ситуацию,
какая операция она нужна?
Свертка.
А здесь нужен перенос.
Потому что вот Бета 2 еще не пуст.
Но!
Что может быть плохого произойти?
Давайте дотти аремы.
Я тут напишу краткую сфотку.
Анализ.
У нас в скетче много грамматики.
Что?
Почему в скетче много грамматики?
Я говорю, если грамматика-то ЛРК, то вот это верно.
Класс грамматик.
Вот здесь КС грамматики, есть ЛРК грамматики.
Сейчас никогда.
Дело в том, что у вас
вот здесь, в префисе, может по-другому разбиться.
Вдруг это еще какой-то альфа-1, бета-1.
И это то, что тут возникало.
То, почему это делал.
Еще раз, эта ситуация допустим только в одном случае,
когда у вас есть вывод,
в котором это право применилось,
и вот это произошло.
Гамма на стейке остался.
Ну, что такое допустимая ситуация?
Смотрите, вот здесь.
Я говорю, что ситуация допустима, если мы
взять вывод, применив это право последним,
чтобы получить гамму.
Альфа-1, бета-1.
И при этом альфа-бета, это альфа-1, бета-1.
Или нетер,
и любое другое правило.
То есть я говорю, что я однозначно определяю
и не терминал, и еще и право, значит, определяю.
Вот тут написано, что нету конфликтов.
Потому что если у вас
вот это надо делать свертку,
а вот это, если у вас бета-2 не плюс,
надо делать перенос, а если бета-2 плюс,
надо свертку делать.
Ну, это пока еще на уровне...
Еще пока алгоритма у нас нет.
Я спросил в зал интуицию, люди поняли,
что нужно делать тут свертку, а тут перенос.
Ну, с вашей точки зрения,
это просто теория, она работает, наверное.
Если вот это допустимо,
то это не допустимо.
То, что грамматика
принадлежит классам ИРК,
эквивалентно к тому, что
запустимо такая ситуация, то никакой другой такой ситуации, запустимо не бывает.
Вот этого нет. Для любой строки гамма.
Господа, это есть, на самом деле его нет.
Значит, для любой строки гамма.
Если это допустимо, то вот это не допустимо.
Все.
Это пишут для простоты слушателей.
Допустимо для гамма.
Господа, ну вот написано. Допустимо.
Я же говорил.
Строка допустимо для префекса какого-то,
если верен вывод.
Это было множество...
Множество ситуаций допустимо, да.
В эту ситуацию допустимо наложено множество.
Спасибо, что ответили.
Честное слово.
Второе правило.
Ну, это очевидно, что не равна.
Нету другой ситуации, да.
Это очевидный факт, да.
Это разные правила.
Ситуации могут быть одинаковыми.
Именно буквы могут быть одинаковыми.
Но правила разные.
Так, у меня есть огромное желание спеть анализ,
еще доказатель-то есть.
Теперь давайте понимать, почему тут
так и не ферст, а что-то другое.
Так, эта запись все-таки оставлю, она мне очень нужна.
Несмотря на то, что ее все ругают, я ее очень оставлю.
Пусть будет корректная запись, но она очень нужна.
Еще раз, все для гамма.
В гамме не бывает двух одинаковых...
Таких ситуаций разных.
В чем проблема?
Вот.
Альгоритм работает с ферстом.
Но, что если у нас бета2?
Это какая-то срока, которая выводила нам эпсилон.
Что это означает?
Что это означает?
Давайте посмотрим.
А1-стрелка,
бета1-точка,
а,
бета2-стрелка,
а,
бета3-стрелка,
а,
а-стрелка,
точка.
Что я хочу сказать?
Я по замыканию, в допустимых ситуациях,
я, если вижу вот это, то точно добавлю.
И казалось бы,
противоречие с определением.
Почему? Потому что...
Потому что тут стоит точка перед буквой.
А тут точка в конце.
Но при этом обе ситуации допустимы.
Вот это плохо.
Поэтому,
Поэтому здесь нам поставить не ферс, а другую функцию.
Еще раз, мы хотим гарантировать, что если ситуации противоречат,
то здесь что-то существенное написано.
Например, тут, если написана буква А, то по замыканию будет точка в конце.
Но вы знаете, что нужно делать здесь именно сверху А фустое слово,
потому что в этой ситуации нет никаких операций.
Тут никакого переноса не определяется.
Мы хотим сделать перенос, если вот буква находится прямо здесь.
Тогда мы будем делать перенос, да?
Еще раз, я приду к следующей лекции.
Сейчас я тюремму доказываю.
Я объясняю, почему формовка именно такая, а не какая другая.
Так, давайте поднимем руки. Кто понимает, что с переносом сверху происходит?
Это прямо полезно сейчас знать.
Вот, еще полезно. Плохо.
Тогда давайте я докажу просто тюремму, и на следующей лекции я приду алгоритму.
Видимо, я не получу исправить интуицию.
Ну, ЕФФ принадлежит. Сейчас я напишу, что это такое.
ЕФФ от какой-то строки А.
Это такие В, лежащие в форст от А.
А если существует вывод, что там у нас?
Альфа, бета, w.
Вот так вот, w.
И последнее правило.
Не альфа в пустое слово.
То есть, такие выводы существуют, что на последнем шаге у нас не было сверки букв в пустое слово.
Для чего-то я уже попытался объяснить, но, видимо, никто ничего не понял. Ну, бывает.
Для тюреммы это все-таки не важно.
Возвращаясь в определение ЛРК грамматики, там у нас были не фёрсты равные, не фёрст, а ЕФФ равен ЕФФ.
Вот. Ну, значит, если я не успею в следующий раз объяснить, почему нужен ЕФФ, а не фёрст, это вы в конспекте будете читать.
Вот.
Что? Здесь звёздочка, здесь один.
И у вас последний шаг вот здесь. Это не буква, приходящая с пустого слова, а это что-то, приходящее в какую-то не пустую строку.
Так, давайте доказывать.
Интуиция, если вдруг кто-то действительно понимает, что происходит, надеюсь, что такой человек всё-таки есть.
Что, если тут есть шифт, то это перенос буквы из вот этого бета.
А не перенос буквы из будущего.
То есть вот бета 2В реализует первую перенесённую букву на стэк именно из бета 2.
Вот.
Но, более того, ЕФФ на практике даже не пригодится.
Это надо будет потом посмотреть.
Так, ну что, в одну сторону.
Какусно это, значит, доказывать.
Ага, необходимость.
Значит так, это вот так.
Значит, пусть две ситуации допустимы.
Ну, пусть и то, и то допустимы.
Значит, тогда пишем выводы.
Первые ситуации допустимы.
Значит, можно вывести вот так.
Со звездой.
Альфа, А, В.
Альфа, бета, В.
Вторая ситуация.
Альфа, 1.
Бета, 1, бета, 2.
Х.
Это по символу просто равно.
А, ну, даже не нужно ничего писать.
Почему он писал там альфа, бета, альфа, 1, бета, 1?
Вот он альфа, бета, вот он альфа, 1, бета, 1.
Так, и?
Какой момент w превратилось в u наоборот?
Где у вас w превратилось в u?
Вывод есть?
Вывод есть.
Отлично.
Еще раз.
Слева написано, что это какие-то две ситуации...
Существует вывод?
Существует вывод?
А блин допустимы чего больше?
Слева есть вокруг.
Где она справа?
Дайте дописать, пожалуйста.
Я дописал выводы.
Сейчас дописываю остальные условия.
Так, first k w это u.
First k x это v.
Вот.
И альфа, бета.
Это альфа, 1, бета, 1.
Пока мне достаточно писать ферсты.
Значит, насчет ЕФФ я потом проговорю, в каком месте нужно будет написать здесь,
что вывод имеет не предзвольный вид, а какой-то конкретный вид.
Это будет совсем-совсем дальше.
В первой части ферста достаточно.
Ну, понятно, что существует вывод, в котором нет сверки в пустое слово.
То этот вывод можно просто ферст загнать.
Да?
Ну, я предполагаю, что есть две...
А, значит, вверх-вправо.
Вот так вот.
Я предполагаю, что есть две противоречивые ситуации.
В них вывожу, что нет леровости.
А, ну громадка леровая.
Громадка леровая, сана лерова для какого така?
Ну, я здесь написал.
Гамма равно альфа, это альфа, бета, 1.
Потом меня за это поругали, я все-таки все на это оставил.
Так, поехали.
Так, что мы хотим сделать?
Хотим сказать, что у нас либо буквы разные, либо правые части разные.
Что?
Ну, здесь, да, здесь, на самом деле, написано альфа, 1, а, 1, х.
И потом уже альфа, 1, альфа, альфа, 1, бета, 1, бета, 2, х.
О, вот так вот.
Круто.
Что, поехали разбирать.
Как считаться были выглядеть?
Сейчас будут три случая.
Так.
Что по случаем?
Чуть первая.
Потому что тут first от х.
Вот.
Чтобы оно тут лежало, ситуация была допустима.
Вот этот вот v, где он тут есть, должен появляться после этого правила.
Ну, вот он после правила появился.
Бета, 1, бета, 2 окончились, потом х появился.
Случай 1.
Да, здесь все принадлежится в написанном.
Так.
Значит, смотрим.
First k от вот этого – это u.
First k от вот этого – это v.
Просто доказывать это без интуиции невозможно.
Вот за что пытаюсь бороться всю лекцию.
Так.
Поехали.
Что?
Да, потому что вы буквуа не раскрыли.
Ну, буквуа 1.
Альфа, 1, бета, 1, бета, 2, х.
Что такое допустимость?
Допустимость.
Допустимость – это то, что у вас строка после запятой, вот здесь.
После запятой.
Она появляется после применения этого правила.
После применения правила бета, 1, бета, 2 находится х.
Вот это тут написано.
После применения правила а, 1 в бета, 1, бета, 2 находится х.
Я пишу first от х равно v.
Вот этому v.
Допустимость написал.
Так.
Ну, поехали разбираться.
Значит, у нас первый случай.
Бета, 2 пуст, и это конфликт двусверток.
То есть мы не знаем, свернуть вот это правило или вот это правило.
Ну, а ситуации же разные.
Это значит, что верно одно из двух.
Либо а равно а1, не равно а1.
Либо бета не равно бета1.
Вот любой из этих случаев, которые реализуются, говорит вам, что эти два вывода различны.
Но при этом...
Вот она тут.
И используем свойство, что v лежит в EFF, а в частности еще и в first от бета, 2.
Сейчас не v, у.
То есть, если бета, 2 не существует, то я получаю бета двумя разными правилами.
При этом first совпали.
Вот значит, у и у равно v.
Потому что бета, 2 у нас нет.
Значит, вот здесь у лежит в EFF, а бета, 2 в, это просто у равно v.
Тут строка sk букв и тут строка sk букв.
Значит, либо а1 не равно а, либо бета не равно бета1.
Оба случаев, которые могут реализоваться, говорят, что эти выводы разные.
А прилине нарушено.
Второй случай тоже простой.
Бета, 2 состоит только из динетерминалов.
Динетерминалов.
Где прямое v, где кривое v?
Ну я же сказал, бета пустой, значит, строки равные.
Принадлежатся равенству, не тот же символ.
Живите с этим.
Да?
Смотрите, еще раз.
Пишу два вывода.
Допустимо, допустимо.
Написал.
Пишу то, что допустимо, значит, first здесь у, здесь v.
Написал.
Ну а у меня у и в не обыкакие.
А у лежит first от бета, 2 в.
Говорю, если бета, 2 пуст, тогда просто у и в одинаковые.
Потому что иначе по-другому никак не может быть, что у лежит first.
Если у это строка из букв и v это строка из букв.
Вот оно здесь есть.
Ну вот это предположение случая, а вот это из того, что ситуация разная.
Вы же точно сказали, что это предположение, что уровня v тому, что бета, 2 равно action.
Да.
Еще раз, бета, 2 равно action.
Отсюда следует, что уровня v и одно из этих двух выполнено.
Все прекрасно.
Что?
Давайте и сотру.
Все, и нет, не написано.
Так.
Давайте разбираться дальше.
Бета, 2 состоит из букв.
Что это следует?
Перепишем второй вывод.
S штрих, а1х, отсюда за один шаг, а1, бета 1, zx.
Вот и first k от zx равно u.
Подставили бета вот здесь.
Значит, в определении мы имели, что у нас равно вот это, вот это и вот это.
Давайте напишем как произведение для простоты.
Так это случай отделил, его уже не существует.
Значит, аa, zx равно а1, а1, x.
То есть, я говорю, вот это одинаково, эти одинаково, эти одинаково.
Из определения эллеровости.
Сокращаем x, потому что это только буквы.
Так, дальше.
Значит, z не пуст.
Но здесь в чем проблема?
У нас есть 2 строка из букв, а 1 это не терминал.
Не терминал не может кончиться на строку из букв.
Поэтому у вас получается, что эти 2 строки не равны.
Ну а мы же есть предположение того, что у нас в определении эллеровости вот это равно, это равно и вот здесь равно.
Значит, можно их перемножить.
В конспекте я отдельно прописал, что у нас есть два случая.
Вахвульмань, то, что там писали, аa, аx равно γ, б, у.
Но этого не достаточно.
Если кому-то интересно, напишите, я скину пример, который я к этому нашел.
Поэтому вместо этого я пишу вот так.
α, γ, β, а, x, y.
Вот такие дела.
Тогда я говорю, что если у меня β это строка из букв, то это тоже прямое нарушение применения эллеровости.
Что тут написано?
Это случай, когда мы не знаем сворачиваться по правилу такому или такому.
То есть, на стейке что нужно сделать?
Забрать β, поставить а, или забрать β, поставить а1?
А вот это случай, когда мы не знаем, нужно сворачиваться или читать дальше слово.
Споделайте определение по автомату.
У него было две операции.
Перенос и свертка.
Что?
А автомат выяснил в начале лекции.
Был такой автомат.
Вот.
Здесь мы делаем перенос, а свертку мы не делаем.
Так, ну третий случай.
Что?
С чем именно противоречие?
Я выписал вот эту строку по символю.
Что вывод?
Еще раз, первый случай, β2 пуст.
Второй случай, β2 не пуст и стоит только из букв.
Это предположение, хорошо.
Да, пишем два вывода.
Вот, первый вывод.
Здесь второй вывод расписали.
Вот первый вывод.
Отлично.
Вот второй вывод, он внизу.
Я его переписал, поставил β2.
Вот он.
Подставим β2 как Z?
Это β2, это Z?
Да.
Записал вот это.
Альфа АХ равно гамма БЮ.
Предположение леровости.
Альфа АХ, гамма БЮ.
Где W?
Где W?
Никакого W нет.
Никакого W нет.
Альфа 1А1Х, альфа 1, бета 1, ЗХ.
А первый вывод?
А первый вывод, вот он здесь.
Недавно написано W.
Куда оно делось?
Никуда не делось, вот оно здесь написано.
Два разных вывода.
Первый вывод, второй вывод.
Отлично.
Почему внизу вы сравниваете результаты другого вывода?
Альфа АХ, гамма ВС, альфа АЮ, гамма БЮ.
Проверьте определение, вы это увидите.
Вот так, чтобы не тратить время, давайте двигаться к третьему случаю.
Это в лоб написано определение.
Так, у меня микрофон упал.
Давайте я там напишу, клауз же мне сегодня потребуется больше.
Так.
Самое плохое, что тут возникает, вот он именно, когда у нас здесь
после точки ходятся большие буквы,
которые сворачиваются в пустые слова.
В этом вся проблема.
Потому что вот это два хороших случая.
Как мы видим, тут просто в лоб сразу следует, что у нас
предпочтение с определением.
Вот тут то, что просто стоит в начале теоремы,
анализ определения называется.
Просьба всех перечислять это в конспекте.
Это прям очень важно.
Фраза просто следует анализ определения.
Пускай в бета 2 есть не терминал.
Что будет сейчас происходить?
Мы возьмем второй вывод и дотащим этого не терминала
так, чтобы вот этот EFF реализовался.
Чтобы там явно было написано либо точка в конце,
либо буква в конце.
Потому что терминал в конце нам не поможет.
И будет два плохих случая.
Первое, это мы дотащим до маленькой буквы
и получим противоречие со вторым случаем.
Второе, здесь и тут находится буква, которая приходит пустое слово,
мы дойдем до нее и поставим точку в конце.
И третье, если вдруг окажется, что то, что мы доведем до терминала,
окажется вот этим терминалом.
И в тот момент мы скажем, что эти ситуации одинаковые.
В этом красота всей науки.
Но сейчас аккуратно, сейчас будем все это расписывать.
Начнем как ставится Бета2 в течение вывода.
Был Бета2, что с ним происходило?
Так.
Ждем последний случай, когда у нас будет U1, B, U3,
U1, U2, U3.
Выделяю сам последний шаг.
Внимание!
U1 и U2 не пусты.
Почему?
Нельзя открыть Бета в B пустое слово.
Тут написано, что нельзя.
Запрещено.
Пустое слово.
Ну смотрите, если U1 пуст, то U2 не пуст.
В частности это означает, что у нас U1 и U2 не пуст.
То есть либо U1 что-то имеет, либо он пустой,
тогда U2 что-то имеет.
Вот это мне потребуется.
Такс.
Угу.
Ага, вот сюда.
Да.
Смотрите, я тут написал, я...
Вот только что я теряю, потому что это анализ определения.
Ровно про это говорил.
Мы хотим, чтобы перенос, который конститует тут,
задействовал букву из Бета2.
Если по какой-то причине
буква, которая вот эта вот U попала вот сюда,
а тут пустое слово на самом деле выведется,
то ситуация не конфликтует.
Эта ситуация, в принципе, предикта одна-другой.
Поэтому я говорю, что ситуация конфликтует,
если есть такой вывод, при котором тут не пустая строка.
Эта не пустая строка выводится так,
что последняя буква не открывается в эпсилон.
Определение ЕФФ.
Ровно такое.
Почитайте конспект снова.
Там я это попытался максимально понятно написать,
еще попросил огромную лепсину проверить на понятность.
Именно потому, что тут ЕФФ и не ферст,
и пример поставили к Ахвульману,
и потом, например, вообще исправили.
Такс.
Угу.
Случай 3.
Так это написал.
Так, двигаемся дальше.
Эш-трих выводится с выводочкой А1А1Х.
Дальше это А1Б1Б2Х.
Дальше А1Б1У1.
Значит, это за один шаг вот здесь.
Это со звездой.
Взяли последний шаг этого вывода.
3Х.
Смотрите, теперь я возьму не вот этот шаг вывода,
а вот этот шаг вывода.
И скажу, что поскольку этот вывод существует,
и вот это допустимо, вот это тоже будет допустимо,
и с ним придут противоречия.
Такс.
Чит И.
Пишем тут.
А1Б1 равно АБ.
То есть вот этот префикс, он все еще такой же.
Это вот этот префикс.
Это вот этот префикс.
Тут был выписан.
Откатываюсь назад.
Вот здесь.
АБ.
Смотрите, что произошло.
Дошли сюда.
Понаблюдали за Б1.
В какой-то момент...
Ага.
Да, это же Б20.
Значит, у нас А1Б1 был.
А потом что-то произошло тут.
То есть мы это дотащили.
Так.
Значит, теперь определение аллерграмматики смотрим
для двух символов.
Для Б большого.
Вот.
И для А большого.
Вот.
Такс.
И записываем определение не в терминах равенства
частей, а в терминах равенства строк.
Собственно, напоминаю, я сейчас напишу равенство
строк, но это чуть более слабый факт.
В обратную сторону нам нужно будет вот отсюда следовать.
Но пока этого достаточно.
Альфа Х равно гамма БЙ.
Записываю.
Альфа.
А, теперь что у нас находится после Б?
Вот это и находится.
Что тут есть?
Так.
У1, у2, у3, х.
Вот они.
У1, у2, у3 и еще х на конце.
Альфа 1.
Бета 1.
У1, у2, у3, х.
Вот он.
Альфа 1.
Вот он тут.
То есть как мы говорили, не темно так раскрылся,
что какая-то часть уехала вправо.
Это приписываю сюда.
Альфа А, у1, у2, у3, х.
Равно альфа 1, у1, Б, у3, х.
Вот.
Значит, в терминах определения давайте тут напишу.
Гамма это альфа 1, Бета 1, у1.
Смотрите.
Объясняю, что тут произошло.
Мы говорим, что должно было произойти.
Гамма БХ, альфа Бета Y.
Что тут написано?
Гамма БХ за один шаг.
Альфа, вот это альфа Бета, вот это Y.
Все переназвалось.
Еще раз.
Из С получили гамма БХ.
Гамма БХ.
Что это означает?
Что когда у нас были гаммы,
не обязательно, что у нас Б вообще хоть что-то вывело в нужен стек.
Возможно, стек у нас и до этого был, вот как здесь.
Вот он гамма.
Вот этот шаг вывода всегда ничего не добавляет.
Но в определении, в определении это все еще корректно.
Гамма БХ стала альфа Бета Y.
То есть я прошу заметить, вот то, что у нас тут было написано.
Гамма БХ, альфа Бета Y.
За этим шагом очень много чего скрывается.
Возможно, гамма это уже альфа Бета, как у нас тут получилось.
Возможно, гамма это пустослова, и Бета в соло выведет альфа Бета еще что-нибудь сбоку.
Возможно, гамма это альфа кусок Бета, и иногда мы с Б выведем оставшийся кусок Бета.
В этом времени зажито вообще все.
В частности, вот я беру такой случай.
Напрасную строку альфа А у 1, у 2, у 3 Х.
Альфа 1, Бет 1, у 1, Б у 3 Х.
У 3 Х уходит, потому что они одинаковы.
Просто строки из маленьких букв.
Так.
А где-то там...
Сейчас я проверю, все ли я правильно схвачаю.
Так, давайте я начну стирать что-нибудь.
А вот это теперь два случая.
Я потом все это буду сейчас выписывать, пока буду с учетей разбирать.
Фу-фу-фу-фу-фу-фу.
Так, осталось.
Альфа А у 1, у 2.
Альфа 1, Бет 1, у 1, Б у 3.
Где противоречие?
Противоречие в том, что вот это, господа, не пустая строка.
Если бы это была пустая строка, мы бы вполне могли сказать, что А равно Б, а А равно вот этому.
И ровно на этом построил один из студентов прошлого года, контр-пример.
Потому что вдруг вывод, который вы тут построили, вот здесь,
совпал с выводом, который был первый.
И вы хотели бы, чтобы это были разные ситуации, но не одинаковые ситуации.
Вот.
Необходимость установлена.
Как-то вообще надо понимать интуитивно.
Строим два вывода.
Хороший случай, если у вас стоит точка в конце, либо точка перед маленькой буквой.
Тогда это сразу противоречие.
Плохой случай, если стоит точка перед большой буквой.
Тогда мы делаем все нужные предикты, спускаемся вниз, вот как здесь.
Я спустился вниз, а ты, сука, смог.
И достиг момента, когда у нас точка будет перед маленькой буквой стоять.
Вот эта точка и вылезла.
Должна быть буква, а написано не буква.
Значит, почему момент наступит?
Почему здесь оно не для этого пустого слова?
Потому что этот вывод сворачивает последние правила не как пустое слово.
Так.
Во-первых, в сторону сейчас вообще за один шаг справимся.
Так, справимся.
Сейчас мы увидим, почему в определении нужен был EF, а не First.
Так.
Достаточность.
Значит так, сколько времени до конца лекции остается?
Четыре минуты?
Я промежуточный факт один оставлю за полями, потому что он написан в конспекте.
Вот один из самых, наверное, хорошо расписанных фактов.
Это если у нас есть в определении два вывода.
S' выводит γбх и отсюда вводит за один шаг γδх.
И S' выводит αβw.
Так, αaw.
αβw.
Это конспект к определению.
То я могу считать, что γδ больше бранчем αβ.
Почему я могу так считать?
В определении мы фиксируем вот этот вывод, а второй по нему подгоняем.
Если так получилось, что у меня γδ меньше, чем αβ, я меня выводу местами.
Так теперь нужно очень аккуратно и дотошно расписать, чтобы все буквы совпали.
Вот это я сейчас, наверное, опущу.
Сложный факт.
Меняю их местами и говорю, что теперь γδ больше, чем αβ.
И все буквы переназову.
Я тебя сейчас отправляю в конспект, там это расписано.
Сейчас мы хотим построить противоречивую ситуацию.
Так, ну что для этого нужно сделать?
Так, рассмотрим шаг вывода.
Вот этот.
Вот этот.
Поскольку вот этот гамма дельта больше, чем αβ, там было правило что-то вроде бета 1, точкой бета 2 какой-нибудь.
По той причине, поскольку вот здесь стек больше, чем тут.
Давайте отделим, что-то было больше вот сюда.
И с того, что это противоречие грамматики, получаем, что у равен, поскольку здесь длиннее, где оно было, вот так, здесь у, то или это строка из букв.
Вот это тоже видно, если расписать.
Вот это вот.
Сейчас просто не хочу это делать, мне реально не хватает времени.
ЛР такая штука, что никому не хватает времени нормально сказать.
Вот.
К от W.
Мы хотели бы написать, что это ферст.
К от бета 1х.
Вот.
Так, почему это верно?
Ну так как это контрпример.
Собственно говоря, вот это, здесь же 100 дельта попало бета 1, бета 2.
Да.
Вот он.
Да, вот он, бета 2, а вот он X попал.
Вот оно вот сюда попало.
И здесь ферст.
Но у нас, вот там, как мы поняли, нужно не ферст, а EF.
Поэтому в определении, я просто говорю, что тут не ферст, а EF.
И вот ровно вот этот шаг вывода является противоречием с определением.
Так, давайте пока я сейчас.
Последнее слово.
Если бы дописал был ферст, мы бы что делали?
Мы бы нашли вот это бета 1 и тащили бы W дальше, пока там не возникла бы маленькая буква.
В чем была проблема?
Мы могли тащить это W дальше и наткнуться вот в это W.
Альфа, А, W.
И вот поскольку такое реально существует, мы просто не занимаемся тем, что тащим W дальше, а просто пишем EF.
Этот EF пошел в определение.
Поэтому определение, которое дано у меня, чуть более сильное, чем у меня, которое дано в Ахаульмане.
В этом примерно верно.
Надеюсь, теперь стало хоть чуть-чуть понятно, почему тут EF и вот тут EF.
Все, всем спасибо.
