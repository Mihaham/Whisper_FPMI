По крайней мере, начнем мы сегодня такого семинарчика
такого.
Вот.
Ну, например, значит, что мы в прошлый раз и делали.
Ну, по большому счету, можно сказать так, что в прошлый
раз мы с вами научились делать с многочленами все.
Все в плане арифметических операций, в смысле, складывать,
вычитать, умножать и делить в инцити смыслах.
Было дело, да?
Ну, можно только раз в сплее разминочки.
Вот делить мы, например, мы научились делить многочлены
с остатком.
А также научились делить многочлен какой-нибудь там
P от T по модулю, допустим, T в степени К.
А вот давайте разомнемся, смотрите, в многочленах
еще также бывает операция такая.
Это называется, там, такая нот, там, складывать, вычитать,
умножать и даже делить многочлены по модулю какой-нибудь
даже не T в степени К, а какого-нибудь многочлена
H от T.
А можно не надо?
Надо, надо.
Вот, Иване, вопрос к вам.
Как это делать?
Какой алгоритм Euclide?
Ну, у нас есть остаток многочлена по модулю многочлена.
Делаем все равно то же самое, что делали бы, как будто
это были нормальные вычиты по модулю.
Так.
Это при чем работает затеяние?
Сейчас, погодите, погодите, погодите.
Ну, вот.
Так, ну, действительно.
Так, сейчас, погодите, вот сейчас поймем, при чем
тут вообще Euclide, что-то я не понял.
Так, вот, казалось бы.
K от T умножить на, там, так вот вам нужно найти, да,
неудачные буквы, ну ладно, неважно.
Там, допустим, на A от T плюс B от T.
Да, и мы знаем, так, нет, вранья, нот.
То есть, что нам нужно?
То есть, нам нужно, чтобы P от T действительно был равен
K от T умножить на A от T плюс, ну, что значит по модулю T?
По модулю H от T.
Ну, да, по модулю H от T.
Это значит, что H от T умножить на, так, B от T.
Так, ну, да, действительно.
А?
Можно, пожалуйста, еще раз постановку задачи, можно,
пожалуйста, другим маркером ничего не видно?
Ну, не знаю, может, у меня проблемы с зрением, но...
Нет, у тебя не проблемы с зрением.
Чуть даже у тебя, и мне тоже плохо.
У тебя тоже проблемы с зрением.
Я не знаю, у меня, видимо, какое-то другое зрение, я...
Видимо, так, у вас очки получше.
Ну, может быть, может быть.
Так.
Значит, смотрите.
Так, еще раз.
Значит, хотим поделить P от T на K от T по модулю H от T.
Для этого нам нужно найти, что P от T равно K от T на A от T
плюс H от T на B от T.
K от T на A от T плюс H от T на B от T.
Вот очень хочется найти такие многочлены.
Причем крайне желательно.
Соответственно, ну, вот крайне желательно, чтобы степень
хотя бы многочлена A от T, наверное, была меньше,
чем степень многочленов H от T.
Ну, потому что очевидно, что в классе эквалентности
по модулю H от T найдется ровно один представитель,
у которого степень меньше H от T.
Ну, думаю, это очевидно, да?
Или нет?
Так, есть кто живой?
Нет.
Да?
Сразу умерли.
Ну, молодцы.
Так.
Только что мы делаем?
Вот у меня тоже вопрос, я уже нифига не понял.
Мы ищем много многочленов?
Нет.
Мы делим многочлены по модулю.
Только по модулю H от T, а не как раньше T в степени K.
То есть такая чуть-чуть-чуть докрученная задача.
Что?
Теряние многочленов по модулю вызывает это когнитивный
диссонанс, что ли?
Или что?
Ну, в принципе, специально для этого тут написано
вот такое определение.
Что нам вообще надо?
То есть данные многочлены P и Q.
Мне очень хочется представить многочлен P в виде Q умножить
на A плюс A умножить на B.
Где многочлен A имеет степень меньше, чем H.
Да-да.
Ну вот.
Ну вот.
Почему A имеет степень меньше, чем H?
Разве мы не лишали такого?
Нет.
Нет.
Мы решали эту задачу, когда H было T в степени K.
Непонятно, почему степень A меньше, чем степень H.
Ну, потому что предположим, что A больше ли правда.
Тогда давайте побочитаем H, умножим на что-нибудь
таким образом, чтобы старшие коэффициенты убились.
А мы должны требовать, что степень A меньше, чем
степень H минус степень Q?
Ну, нет, это не принципиально.
Ну, то есть это уже, видимо, будет...
Нет, это, кстати, будет даже не правдой.
А вот из-за этого коэффициента.
Потому что в Q умножить на A никто не требует, чтобы
там не происходило переполнение.
Просто эти переполнения будут куда-то укладываться
во что-то, делящееся на H.
Ну, старший коэффициент...
Ну, старший коэффициент всегда может компенсировать
чем-то, да.
Только желательно, чтобы когда мы их будем компенсировать...
Ну вот.
Ну и для того, чтобы у нас все умножения были по A,
давайте правильно заявить тогда сразу,
что DEC P меньше, чем DEC H
и, конечно же, DEC Q меньше, чем DEC H.
Сейчас, еще раз.
Вот если у нас Q на A больше, чем H,
то мы вычитаем H и делаем меньше.
Нет, почему это работает?
Да, вот я тоже DEC P меньше, чем DEC H.
Нет, почему? Работает нут.
Ну, тогда у нас DEC A должно быть меньше,
чем DEC H.
Так мы же не из A ее вычитаем из произведения.
Почему DEC P меньше?
Нет, ну, смотри.
Если у нас DEC A хотя бы H плюс Q,
то у нас есть член хотя бы степень H.
Нет, это если H плюс Q.
Нет, степень A не более, чем степень H.
Да, но, нет, да, ну, в плане,
это не слишком строгое делание.
Ну, не знаю, ну, вот...
Ну, допустим, Q T на A T равно...
Ну, вот пусть степень H это K
и Q в T на A.
А T это равно X степени K на A
плюс какое-то еще что-то.
Тогда на этой степени A можно же убить
просто с помощью H от T.
И оставить просто вот это оставшее.
Что-то вообще не понимаю, каким образом.
От того, что вы там убили в A меньшую степень,
как бы там вроде перемножение по модулю
могло поменяться.
Потому что произведение поменялось
на, скажем, какую-то...
на код T умножить на какую-то степень.
И кто сказал, что это как-то связано с A,
это непонятно.
Вот надо включать абстрактного математика.
Потому что вам еще матанализ давать.
Абстрактный математик умер
после последней строчки.
Так, стоп.
Ну, не знаю.
Слишком слабая абстрактная математика,
ребята.
Давайте без нижнего тупого юмора, пожалуйста.
Соответственно.
Нет, тут давайте, видимо, чтобы было понятие,
давайте попробуем пример разобрать.
Вот давайте так попробуем.
Вот что будет, если я перемножу?
1 плюс x плюс 3x квадрат
на, допустим, 2 минус 4x
плюс 7x квадрат
по модулю.
Ну, допустим...
Давайте 1 минус x плюс x...
Там x кубе давайте для простоты вычислений.
Ну, давайте посмотрим.
Если посчитать это произведение многочленов,
то что получится?
Так, получится 2.
Так, значит, минус 2x
плюс...
Так, 6 минус 4 плюс 7.
Это...
Значит, 6 минус 4 плюс 7.
Да, 9x квадрат.
Так, при кубе что будет?
Ну да, минус 5.
И тут, соответственно,
21х4.
Так, чему это равно по модулю
1 минус x плюс
x в кубе?
Так, ну, во-первых,
мы можем вычесть вот это вот,
умножить на 21х.
Так, ну давайте прям можно столбиком
пробрать.
21х4, да,
минус... Сколько там?
21x в квадрате
и плюс 21x.
Вычитаем.
Там шлёп-шлёп, получается,
минус 5x кубе,
30x квадрат.
Действительно, минус 23x2.
Да, здесь вот так.
Так, что ещё?
Ну и теперь давайте вычитаем
ещё то же самое, но умноженное уже на 5.
Минус 5x кубе,
тут у нас плюс 5x.
И минус 1.
Вычитаем, шлёп-шлёп,
остаётся 30x квадрат,
минус 28x
и плюс 3.
Вот, нет, ну раз тут минус,
значит тут плюс.
Вот.
А, тут минус 5, да.
Да, тут минус 5, значит тут 7, да.
Окей.
Так, вот так выглядит умножение по
вот такому интересному модулю.
Вот.
Ну в принципе отсюда следует,
что если вы поделите вот это
на это по модулю
1-3x кубе, получится вот это.
Поделим?
Ну да. Ну вот поделим вот это на это.
Нет, просто тут требовало, кто-то утверждал
почему-то, что степень этой штуки
обязательно должна быть меньше либо равна
там что-то типа h-q
или что-то в этом роде.
Ну в принципе да, потому что
многочлены нравятся, по-моему это
очень многочлены, кажется.
Каким условиям должен доверять
многочлен, чтобы мы могли по модуле
его делить нормально?
Ну, на самом деле да, есть там
определенные условия, на самом деле.
То есть у них там тоже начинаются
какие-то разложимости,
приводимости, неприводимости, там
общие условия.
Но тем не менее
называется делить, можно
пробовать.
Делить можно пробовать, действительно.
То есть делить
на самом деле можно пробовать
простым, естественным образом.
Называется этот образ хотя бы алгоритм
Ивклида.
Ну хотя бы
за какую-то, если хотя бы
за какую-то асим точку
действительно, то можно это сделать алгоритмом
Ивклида, действительно.
Ну просто вспомним, как у нас устроен вообще алгоритм
когда мы ноты ищем.
Ну не нота, а вот собственно решаем
диафантовое уравнение.
То есть мы пишем, что если там допустим
степень Q меньше, чем h, то мы
пишем то, что мы можем поделить h
на Q
и получить соответственно там
нот. И получить
что h равно Q на
что-то там
умножить на x плюс y.
И тогда у нас это уравнение
получается равно Q от t
на там соответственно
там a от t
плюс x
соответственно
плюс y умножить на
там b от t
и причем степень
y на этот раз меньше, чем
степень Q.
Вот. Ну остается теперь
ну вот.
Ну то есть остается только запуститься от
этого вот y и Q
рекурсивно.
Вот.
Ну то есть
в самом конце
действительно останется, что p от t
будет равно там условно
z от t
на какой-то там d от t
и d от t потребуется найти, потому что тут будет 0.
Все, что вам
останется, это попробовать
все, что
вам останется, это
поделить p от t на
z от t.
Причем обратите внимание
на этот раз в честную.
Понимаете, да?
Поэтому останется только вопрос
делится ли p от t
на z от t?
Ну делится в том плане вы делитесь с остатком
и проверяете равен ли остаток
нулю.
Вот.
Ну, собственно, если получится,
то, соответственно, тогда вы аккуратно
восстанавливаете ответ.
Вот, внимание, вопрос. За какое
сим-точку этот алгоритм работает?
За o
достаточно быстро.
Логи террасы за каждый n.
Логи террасы где-где?
Берем по модулю.
Так. Где берем по модулю?
Берем по модулю. И что?
И сколько раз вы эти многочлены
будете по модулю брать?
Да. То есть, заметим,
что
если, допустим,
все деления с остатком делаются
за n лог n,
ну там, учитывая, пусть у нас действительно
степень h равна действительно n,
тогда все деления делаются
за n лог n, ну и террасы у нас
n. Поэтому, на самом деле,
получается не такая уж
и хорошая сим-точка.
Будь здоров.
Да, действительно.
Получается n квадрат лог n. А теперь
внимание, вопрос. А
нельзя ли все-таки попытаться
лупить его чуть побыстрее?
А то как-то n квадрат лог n
А?
Ну как, ну
поделим
h на q
с остатком, пользуясь тем,
что степень q меньше, чем степень h.
Пусть у нас h
равно q на x плюс i.
Тогда уравнение
приобретает
вот такой вид.
А вам не нужно
еще x от t
умножить на b от t?
Чего? Зачем?
Где?
Ну потому что было h от t на b от t,
вы вынесли из h
q на x и
вынесли x. А, окей.
Так.
Так, окей, хорошо.
Сделаем.
Так, и чего?
Так, вот так что ли?
Так.
Чего? x от t плюс
b от t.
Вот.
Ну вот. Ну и соответственно, то есть
фактически теперь, давайте,
можно теперь вот это вот объявить как h'
от t,
вот это объявить как b' от t
и решать теперь это диафантовое уравнение уже
не относительно q и h, а относительно q и i.
То есть нашли h' и b,
и b', собственно,
по ним теперь легко восстановили
b, потому что b равно b', а равно вот
вот это.
Потому что
у нас тут
во-первых, по условиям,
во-вторых, если мы пытаемся
найти
такой маркетин h,
то p равно q умножить на a по модулю h.
Но когда вы умножаете по модулю h, очевидно, вы
q можете подменить на
любой маркетин эквивалентный
по модулю q, а среди них
найдется обязательно тот,
которого степень меньше, чем h.
Ну, вообще говоря, да,
хотя
ну, в принципе, да.
Что?
А потому что сколько...
Ну, смотрите, каждую итерацию вы делаете
за n лог n?
Спрашивается, а сколько
у вас итераций?
Сколько шагов, вот сколько шагов?
Сколько раз вы будете рекурсивно вызываться?
Ну, да.
Ну, да, то есть у вас, да.
Нет.
Ну, это как повезет.
То есть формулируем так.
Если умножен h,
там, допустим, степень 57,
там нарастен q в степени 55,
то тогда
на следующей итерации нарастен h будет
в степени 54.
Ну, если повезет меньше,
ну, вообще в лучшем случае 54.
То есть, получается, ну, вот, после
55-54, потом q станет
в степени 53, ну и так далее.
Так что, увы.
Честно говоря,
что-то вообще не вижу. Как?
Ну, когда вы вычитаете
так эти многочлены, вообще не понятно,
почему, когда вы обнулите один член,
неожиданно убьется, там, неожиданно
убьется и следующий, хотя бы следующий.
Честно говоря, вообще не понятно,
с какого перепуга такое должно быть.
Ну вот, скорее всего, да.
Так что теперь у вас есть какая-то вопрос.
Ну, как вы есть, подождите,
ну, как-то делить, ну, вот как-то
по модулю t в степени k мы многочлены делили
за n лог n.
А почему-то вот,
ну, вот,
а почему-то делить по модулю
произвольному почему-то уже
требует какого-то n квадрата.
Спрашивается точно?
А точно?
Или, может быть, как-то можно
быстрее?
Что проверка корректности?
О, Господи, вспомнили
называется.
Нет, мод воит, конечно, наше
все.
Ну, вот.
Ну, тут какая-то стобус выслухается,
семидар устроить, чтобы вы что-то придумали, вспомнили вообще.
Вот давайте вспомним хотя бы.
Ну, это квадраты.
Ну, вот.
Ну, да, тут
отдельный мог бы технический вопрос,
а можем ли мы
технические шоколадки?
Не, реально, ну, действительно,
квадрат, а вот возникает вопрос,
а если вы, интересно, а не можем ли мы
действительно сделать это столбиком?
Получится квадрат.
Я думаю, что можно сделать такой.
А точно? Нет, точно.
Потому что, когда там проблема просто, да,
если в тупую столбиком оплачивать
у старшим, то как бы есть подозрение,
что когда вы начнете там вычитать всякие ашки,
у вас там младший коэффициент начнет изменяться.
Так что, видимо, да,
не все так просто.
Ну, в прямом.
Чего?
Ну, как бы,
ну, сдвигайте, вычитайте там.
Ну, понимаете, чем проблема?
Вот, допустим, сейчас вот начнем
мы вот тут делить столбиком
опять то же самое.
2 плюс х минус х квадрат
делить на, допустим,
я не знаю,
1 минус 2х плюс 3х квадрат.
И все это мы делаем
по модулю 1 минус х плюс х кубе, да?
От старшего к младшему.
Что?
От старшего к младшему.
А как от старшего к младшему?
Просто так же.
Что такое так же?
Ну, вот я...
Просто что такое так же?
Вот здесь, допустим, я напишу 1 треть
и тут напишу вот это вот.
Там 1 треть минус 2 трети х
плюс там, я не знаю, х квадрат.
Ну даже нам же полностью надо поделить,
чтобы тут все убилось.
Ну, конечно.
Не, поделить с остатком как бы
мы уже умеем с прошлого раза
делить с остатком, но нам надо же
мы же по модуле многочлены делим.
Вот.
Можно еще раз?
Мы когда там представили h
как вот код х
плюс y,
следующая итерация она будет...
Чего?
И по какому модулю она будет?
Ну, в смысле?
Нет, у нас в этом уравнении
уже никакого модуля нет.
Мы решаем диафантовое уравнение.
Как бы есть qh известное,
а и b неизвестное.
А и b еще.
Все.
Единственное,
только нам бы каким-то мистическим образом
бы хотелось, чтобы
как-то попытаться
это решить быстрее, чем за n квадрат лога.
Вот.
А вот теперь давайте вспоминать.
Потому что, когда мы делали по модулю
t в степеника, у нас как-то лог m
все-таки вылез.
Мы никаких диафантовых уравнений там
и не решали.
Вот внимание и вопрос. Каким же мистическим образом
мы это сделали?
И в чем она заключалась?
Что такое
обычный модуль?
Мы делили по модулю
t в степени...
t в степени что?
t в степени ничто.
Ничто это что?
Ну, t в степени как?
Ну, и как вы добивались того,
что там n лог n, а не там
n лог n, а не n квадрат лог n?
Но мы ее отругляли.
Кого?
Мы точно не отругляли.
Так, давайте вспоминать, вспоминать.
Давайте.
Так, ну да. То есть вот действительно
оказывалось, там оказывалась такая идея,
что наращен по модулю t в степени k
действительно можно разбить на две половинки
и находить первую половинку
тем методом,
что сказав, а давайте на вторую половинку
забьем в том плане, что будем
делить не по модулю t в степени k,
а по модулю t в степени
k пополам.
А вот теперь у вас есть какая-то вопрос.
А нельзя ли здесь сделать
что-нибудь подобное?
Ну, да нет, как раскладывать
вы можете наращивать, конечно, вопрос.
А просто пообрубать какие-то степени
нельзя?
Хотите отрубить первую половину степеней?
Ну, как-нибудь.
Ну, старую, скорее вторую.
Ну, это смотря как записывается.
А как предлагаете?
Вот действительно.
Вот очень хочется действительно
сказать, что давайте вот, что h у нас,
допустим, это многочлен
размера n, допустим, да?
Ну, да, ну-ка давайте проверять.
Вот давайте попробуем
в явном виде выписать, да?
С hn-1,
допустим.
Ну, давайте ладно, может быть
даже нам проще будет, если у нас на этот раз
размер n будет, но n степень двойки,
естественно, да?
Картинка называется, картинка называется, ну,
допустим.
С нашим желанием
делить пополам.
Ну, почему?
Не, ну, давайте так,
p равно, ну, почему
нечетное, в p и q их-то четное,
нормально.
p2t в квадрате плюс и так далее,
плюс p, на этот раз
n минус 1, t в степени l минус 1.
И qt то же самое
равно q0,
1 на t
плюс чего?
Так,
ну,
возможно, ну, в p и q
уж точно вполне могут быть.
Да, ваш, конечно,
вопрос. Ну, давайте покажешь, давайте
для простоты степень двойки, а там посмотрим.
Так, ну, давайте
скажем, как всегда, p равно
p0 плюс там p1
на t в степени n пополам.
Вот q равно q0 плюс
q1 на t в степени
n пополам.
Вот.
Ну, как бы да,
в идеале, конечно, хотелось бы
действительно найти,
ну, вот, ну, еще
заодно сказать желательно, что,
вот, я не знаю, вот, можно ли сказать
что h равно, допустим, h0
от t
плюс h1 от t умножить
на qt в степени n пополам или
что-нибудь даже еще.
Там, может быть, даже
плюс один даже какой-нибудь, чтобы тут вот
была степень ровная n пополам.
Вот,
вот,
вот,
вот,
вот.
Вот, возникает такой вопрос, действительно.
Что
ну, вот
что оно, вот, что у нас тут
может тогда возникнуть действительно?
А
они так и так,
разное обратите внимание.
Мы же умножать умеем по модулю, а можно обратно искать?
Обратное?
А оно существует?
Ну, действительно, хотя...
Только теперь вы искаете вопрос.
Допустим хотелось бы искать обратное.
Допустим, мы верим, что оно даже существует,
потому что там выяснится, что там...
Чего? Ну, а что делать?
Нет, ну хоть...
Теперь просто возникает вопрос, действительно.
Хотя, с другой стороны...
Нет, вот просто действительно, идея такая.
А действительно, хотя может и...
Вот действительно, если аж вот так вот распилить.
Ну, потому что сказать, что...
Ну, давайте так.
Вот если мы знаем, что p равно...
Допустим, да?
q на а, плюс аж на b, да?
То, можешь сказать то же самое,
что у нас есть равенство
и по модулю t в степени n пополам.
Есть такое равенство, правда?
Тогда, по модулю t в степени n пополам,
равенство звучит так.
То есть оно равно p0, равно...
Ну, соответственно, t в степени n пополам.
Значит, чему оно равно?
Там q0 на, возможно, какое-то еще a0,
плюс, ну, соответственно,
аж 0 на b0.
Согласны?
Вот.
И тогда, в принципе, действительно...
И тогда, в принципе, возникает такой вопрос.
А что нам тогда мешает попробовать
поделить, допустим, p0 на q0?
По модулю h0.
То есть вот, допустим,
мы вот такие вот...
То есть по модулю t в степени n пополам это вот равно.
То есть, допустим, вот мы говорим,
что мы ищем a0 и b0,
там, допустим, рекурсивно.
Вот.
Можем так сказать?
Или не можем?
А что не так?
Нет, ну а что не следует?
Давайте что...
Так.
Ну, давайте так.
Ну, давайте так.
Верим ли мы, что a0 и b0...
Да, вот хочется туда сказать.
Верите ли вы, что...
Верим ли мы, что там a0 и b0
определяются однозначно?
Не особо.
Не особо? Почему?
Ну да.
Нет, ну что такое? Да, тут...
Так, что, неужели это не помогает?
Конечно.
Нет, ну а что такое?
Ладно, надо же что-то изобрести.
Так.
Так, что там за хохот пошел?
Так, вот действительно.
Вот действительно.
Можем ли вы сказать, действительно, что...
Нет, ну вот что...
Хотя действительно нет, конечно, что...
Нет, ну действительно, да?
В самом деле, они вроде достаточно должны
определяться, просто потому, что
обратите внимание, видите?
То есть a0 и b0 мы ищем не просто как многочлены,
а как многочлены размера
не более, чем t в степени пополам.
Вот.
Что?
Ну, мы на 0, извините, не делим.
Ну, мы не предпочитаем эту ситуацию.
Как интересно.
Так.
Ну, тогда давайте какая-то нот...
Ну, тогда давайте какая-то...
Хорошо, а что делать, если q оказалось
там просто, это, какая-то большая
степень t-шки, умноженная на многочлен?
А, ну да, на этот...
А, действительно, на этот раз это вполне возможно.
Да, проблема, проблема.
Черт, неужели...
Нет, чёрт, то есть хочется сказать, что
неужели нельзя просто так взять и...
просто так взять и поделить?
Ну, это как-то бред.
Ну, хотелось бы, конечно.
Ой, безобразие какое.
Ну нет, ну ладно, нельзя, так нельзя.
Не будем заканчивать.
Не будем заканчивать.
Ну нет, ну ладно, нельзя, так нельзя.
Не будем зависать.
Жалко, жалко.
Ладно, сейчас попробуем ещё одну задачу.
Нет, другую.
Давайте попробуем ещё...
Ну-ка, интересно, покорится ли нам
хотя бы задача о рюкзаке?
Увы.
Увы.
Ну нет, вы поняли, что хотя бы делить
многочлены по модулю можно хотя бы за N квадрат Луген.
Это вы, конечно, молодцы.
Но у нас да.
Значит, далее.
Ладно, задача о рюкзаке.
Нет, ты Миша, не надо.
Так.
Значит, задача такая.
Итак, смотрите.
У нас есть N предметов.
Весят они S1, S2, S3
и так далее.
S, N.
И нам известно, что
вот сумма всех S-ок.
Да, все S-ки целые.
Положительные.
И сумма их равна S.
Так вот, я хочу
для каждого
из чисел от нуля до S понять,
сколько существует под множество
вот этих S-ок, сумма которых равна
этому числу.
Да.
Да.
А, ну да, мы с вами
не знаем, что такое динамическое
программирование, но, как всегда,
дебилами мы прикидываться не будем.
Что?
Ну, давайте будем считать,
что и там,
ну, как всегда, порядка 10 в пятый,
может быть, там N до 10 в пятый,
S там 3 на 10 в пятый.
Нет, мы так и можем как раз, мы можем
изначально единички поставить там, где у нас просто
S-ки.
Это не единички, а количество для каждого.
А затем что?
Даже бинарно
да, но если это
да
сейчас, погодите, погодите,
погодите. Нет, меня
смущает вот что.
Нет, с одной стороны, идея, конечно, логичная,
что когда вы перемножаете, да, у вас
получается, каждый раз, когда
у вас получается какой-то X в степени K,
это получается X1 в степени
откуда-то взяли K1,
откуда-то взяли K2, откуда-то взяли
K3 и так далее.
Нам нужно перемножать
только
если вы просто один многочлен в степень
возведете, то вы как бы один и тот же предмет
рискуете несколько раз, брат.
Да, то есть на самом деле, да,
да, то есть
на самом деле, по большому счету, все, что нам
нужно, это перемножить многочлен.
1 плюс X в степени S,
ой, давайте T, да,
у нас же T,
плюс T в степени
S3 на
и так далее умножить на 1 плюс
T в степени SN.
Так, вот, допустим,
у нас есть такие многочлены, очень хочется их перемножать.
Вправивается. За какую
осень точку вы умеете их перемножать?
За разделяй.
За разделяй.
За разделяй.
Так, да, осталось только выяснить, да,
что такое размер многочлена, да?
Вот, да,
плюс один еще.
Ну, как
это делать?
Так, и что?
То есть, в принципе, все эти многочлены
могут оказаться так приличного порядка.
Или
не все.
Нам не нужны больше,
чем все. Чего еще раз?
В смысле, когда у нас появляется
степень, в которой хотя бы
S3-1, просто кокаем ее и все.
Кокаем? Куда кокаем?
Просто считаем все по модулю
T или S3.
Но она у нас не появится,
просто потому что сумма всех S
равна S большому, так что...
Да, конечно.
Нет, в рюкзаке, помните, одна из важных свойств
рюкзака заключается в том, что
сумма всех весов не сильно большая.
Нам не нужна сумма весов,
нам нужна
вес тот, который мы хотим набрать.
Да, по модулю X.
А, ну это да.
Но, допустим, нам сказали, что S
не сильно большое и, собственно, нас
устраивает.
Ну, тогда можно даже по модулю не брать.
Да, можно даже по модулю не брать. А как все-таки
произведение найти?
Перемножать каждый раз по минимализму,
можно разделяйку написать, просто
разбивать половину.
О, господи, какая нота.
А как не учитывать еще раз одинаковые?
Перемножать их,
а то даже перемножать результаты.
Сейчас, кого, кого, какие?
А почему они не маленьких не брать?
Пока никаких проблем. Мы сказали, что
нам нужно найти произведение вот этого
многочлена, пока мы...
Да, осталось
выяснить, как нормальное произведение
найти. Просто ответ в таком виде
нас не устраивает, естественно.
Да.
Если каждый Z встречается,
то тогда будет просто квадрат
и сумма разграва будет прожата.
Что? Почему?
Нет, вы знаете, что сумма всех
из Z равно S.
Да, тогда...
Да, смотрите, да.
Тогда, заметьте, что, если
ски скили больше, то можно попробовать
счетерить следующим образом.
Тогда можно заметить, что
все S-ки можно разбить на маленькие,
то есть те, которые не более, чем
корень из S, и на большие,
те, которые корень из S.
Как?
Ну, как сказать, это уменьшит количество
скобочек.
Ну, не уменьшит, а просто заметим, что
давайте попробуем
привести подобные слагаемые.
Тогда заметим, что вот этих
слагаемых множителей
не более, чем корень из S,
а этих множителей
тоже не более, чем корень из S.
А этих тоже не больше,
чем корень из S.
Потому что, как бы,
если их будет больше, чем корень из S,
то их сумма будет больше, чем в S.
Ну, давайте посмотрим.
Ну, давайте вот разведем.
Пусть у нас мелкие.
То есть это будет там
S1-штрих, S2-штрих и так далее.
Там S какой-нибудь, там K-штрих.
Ну, вот эти вот S.
А крупные, допустим,
ну, что-нибудь там про
S1-2-штриха.
Ну, как бы, если они
раз они крупные, значит их будет
больше штрихов.
Ну, K, L там, ну, вот.
Вот. И там получается, да,
это не совсем K плюс L равно N,
это неверно, потому что
мы тут попытаемся 1,5
штрихов.
Да, мы тут попытаемся 1
плюс T в степени S1-штрих
и все это возвести еще в какую-то
степень.
То есть, допустим, D1-штрих.
Вот.
Ну, просто я подобные привел.
В степени D,
K-штрих.
Теперь надо умножить на что-то еще.
И на вот эти вот большие.
Вот этих вот L, значит L
не превосходит корни
из S. То есть,
и K, и L. И K тоже не превосходит.
Потому что мы рассматриваем мелкие
различные.
Степени.
Ну, в смысле,
все эти числа, ну, допустим, все мелкие
не происходят корни из S.
Каждый из них встречается сколько-то раз.
Вот давайте, вот это сколько-то раз сюда.
Да, вот так вот мы сделаем.
Значит, 1 плюс T на вот это.
Так, вот это. А, здесь уже
степени нет, что приятно.
Так, ну, уже неплохо.
У нас уже многочленов стало
хотя бы корень.
Так.
Теперь вытекает вопрос.
За какое время мы можем
их перемножить?
Ну, такая ставочка.
За какое время
можно их перемножить?
Да.
За S.
За S log S.
Ух ты.
Это когда...
Нет.
Ну да, просто действительно, просто интересно,
каким образом?
Нет, я вам так скажу.
Самое смешное, что я знаю алгоритм
как-то...
Хотя, да, это туповато говорить,
что я знаю алгоритм, который перемножает
за S корни и за S, да?
Да, это называется
перемножаем вот это.
Не, бинарное
возведение как-то плохо, но тут просто, смотрите,
щит может быть такой.
Как мы в нашей фурятине
вообще перемножаем?
Мы находим значение
в точках там 1,
помните WS,
WS в квадрате,
WS в степени S-1.
Ой, по биному Ньютона...
Так, да, допоминаю, дэшки, кстати,
помните, тут еще может быть
такая проблема, что дэшки, как бы,
сами в себе до корня быть не обязаны, да?
Ну да. А в чем проблема?
Ну, чего?
Ну, дэшки
с одним штрихом не обязаны.
А, у нас корни...
Не обязаны.
Что? Какие корни?
Что за значение вылезает?
Сейчас, чего, кого?
Ну, я хотел
возводить сами значения в степень S,
в степень D,
и тогда они переполнятся сразу.
Нет, ну,
скажем так,
что приятно, когда мы вот эти значения
возводим в степени S, это, в общем-то,
для нас не сильно большая проблема. Почему?
Потому что мы помним, что
WS в степени S равно 1.
Это да, я имею в виду, что
п от этих значений возводим
в степень D.
Но возводим.
Да, или если быть точнее, мы там
берем эту степень, прибавляем единицу
и потом в степень D возводим.
Ну да, если...
Куда улетим?
Нет, почему? Ну, почему?
Возводим значение D.
Это придется на этот раз каждую степень
возводить.
Но, тем не менее, возникает вопрос.
Скажем так,
заявляется, что, в принципе,
почему-то это все можно каким-то образом
сделать, еще и вот за, примерно, вот
такую асимпточку, на самом деле.
Ага.
Даже, да,
даже еще есть слога, слоганка,
откуда-то, непонятно откуда.
Самое первое решение,
которое было предложено,
та же барувка
от Миша, она уже работает
за... Так, что такое барувка от
Миша, во-первых?
Так.
Так, и вы утверждаете,
что это работает вот за столько?
Так, погодите, откуда у нас
слоев? Я пока вижу N-1
умножение.
Окей, ну в смысле, да, по-нормальному
просто написать разделяйку.
Так. Ну, допустим,
написали, какую разделяйку вы хотите написать.
Вы предлагаете написать
T в степени С1,
то есть вы предлагаете, что, если
вот первое, что мне приходит в голову, по
слову разделяйка, то есть вот так вот, что ли?
Да. Умножить вот это, умножить
вот это, возрадоваться там потом, да?
Ну, за N-логан
возрадоваться, естественно. А, ладно,
за S-логан возрадоваться, да.
B
Ага.
Да-да-да, или получить
T-л, да?
Так.
Ага.
Так, ну вот давайте вычислять,
почему мы не получим T-л. Если,
то есть, казалось бы, да, идея простая,
перемножим, найдем вот это произведение,
найдем вот это произведение.
Нет,
ну нет, еще нам придется
поперемножать за S-логан.
Да, и мы получаем,
что каждый слой работает за S-логан.
Ну да, то есть, получается,
угу.
Так.
Ну, заметим, да, что,
давайте так у нас получится, T-л,
N-л, давайте так, T-л, T-л,
да?
Так.
Значит, T-л, да,
где S эта сумма всех вот этих вот?
В нашем случае равно получается
T от N пополам
и какой-то там S-штрих
плюс
T от N пополам S
минус S-штрих
плюс
T-л от S-лог С.
Говорим мы.
Но
S-штрих, как вы уже догадываетесь,
это сумма первых N пополам С.
Совсем в тупую.
Да.
Ну вот, да, мы сказали.
Метро изделия властвует.
Мы, чтобы найти произведение
N-скобок,
мы находим произведение
первых N пополам скобок,
произведение вторых N пополам скобок
и результат перенажаем.
Получается вот примерно
такая рекуррента.
По каким-то вот
миистическим причинам
мы утверждаем, что это S-лог S-лог N.
Почему мы это утверждаем?
Вот.
Потому что у нас почему-то,
ну ладно, лог N допустим мы тут вынесем
какой-нибудь, да?
Там лог N-1 получится.
Но у нас почему-то возникает ощущение,
что вот S-штрих
лог S-штрих
плюс S-S-штрих
лог S-S-штрих.
Верить...
Ну вот.
Вот спрашивается,
можно ли заявлять,
что это не превосходит
S-лог S?
Очевидно, что.
Возьмите по максимуму
этих двух логовитмов,
отчего не по моему.
Просто скажем, что
S-штрих меньше, чем S пополам,
а...
Ну и что?
Ну, когда мы S умножить
на лог S-S-штрих
отцениваем сверху как
S-лог S,
а S-штрих
лог S-S-штрих
меньше нуля.
А, проидите, о чем мы мучаемся?
А нельзя сразу оба раза это
сверху как S-лог S оценить и не париться?
Ну или даже да.
Вот, точно.
Да, прям совсем в тупую.
Это лог S, это лог S,
это в сумме S.
Да, вообще халява какая-то, да.
Да.
Не, ну что?
Ну правда, из-за того, что мы так в тупую делаем,
у нас тут вот этот лишний лог N вылезает.
Очень бы, конечно, хотелось сказать, что это равно
прям совсем S-лог S, но это, я боюсь, не так,
потому что если вы там на каждом шаге
будете отщипывать тут очень маленькие
S-штрих, то как бы, видимо,
S-лог S на лог N будет вылезать в явном виде.
Если что?
Так, если что пополам?
Нет, если все нот.
Так, нет, если...
Нет, ну если оно будет пополам, то
то что?
А, тоже проблема будет, да?
Да.
То есть, если мы перемножаем 1 плюс T
Ну, типа того, да.
Ну окей.
Так, ну в любом случае неплохо.
Хотя, кстати, да, может, давайте попробуем
задаться вопросом.
А если, а если вот действительно
у нас, как у нас бывает в рюкзаке,
нам даны вот эти S-ки, да?
Вот эти S, да, но
их сумма может быть очень большой, на нас
интересует все там, все суммы, которые
не представляют 3 на 10 в пятый.
Можно ли вот забабахать
что-нибудь подобное и получить победу?
Ну, конечно.
Просто обрезать.
Да.
Только есть одна маленькая проблема.
К сожалению, вот такую рекурренту мы
такие рекурренты мы уже не напишем.
Видите, здесь мы жестко пользуемся тем,
что тут вот сумма разбивается
на две.
Ну да.
То есть, там боюсь, если вот так вот
в тупую делать, то да, мы конечно
на каждом шаге будем отсекать то, что
больше, чем там, то, что нам надо.
Но рекуррента на этот раз получится
T от NS
равно 2T от N пополам.
И того же самого S, даже не S,
а там другая буква уже W, допустим, да?
Плюс этот
S лог S.
Ладно, W лог W.
Это только для NS.
Так что я боюсь, что, по-моему, это
W лог W внушить на N получится.
Сейчас, а мы не можем уже делать тот же алгоритм,
который был предложен до этого Миши,
просто брать два минимайла, их сливать,
если что, в раз или в минуту.
Но все равно вы можете.
Если у нас
максимальный S сильно больше,
то W будет лучше.
А если не сильно больше, то мы только в нескольких
последних шагах так сделаем, но это не страшно.
Ага.
Оценить бы, оценить бы.
Нет, ну вот я не знаю, тут вообще
на самом деле, знаете, Вазикет
на самом деле так, Вазикет такая интересная
мысль, на самом деле, в какой-то момент.
Там
просто как...
Не, ну да,
так просто, наверное, не получится, потому что конечно
можно было бы сказать, что если мы берем там какую-то жадность,
жадность, то через некоторое количество
итераций у нас там минимальные элементы
начнут, называется, быть
очень большими.
Но боюсь, да, в совокупности
нам это все равно не поможет.
Честно говоря.
Так что да, придет кисаться.
Ладно.
Так, ну-ка давайте посмотрим, что у нас
еще есть.
А?
А никак.
Самый-самый, вот этот весь, первый
мелкий, крупный, он зафейлился.
Этим способом, нет, этим способом мы задачу
не решили.
Нет, если, так, давайте так,
возвращаемся. Значит, мы продолжаем
решать задачу, когда у нас есть N, есть
S, да?
И там идея возникла, что
делаем разделяем властой, то есть, честно,
разделяем скобочки на первая пополам
и вторая пополам, вообще не важно, по какому
принципу. И получается
асимптотика.
Ну вот.
И у нас неожиданно получилась асимптотика
вот S лога, S лог N, просто вот
здесь. Ну, можно аккуратно
по индукции расписать. А можно
просто расписать, что, как бы, на каждом
уровне у нас происходит не более, чем S
лога здесь.
Вот.
Это, собственно, в общем-то, это все,
что мы Железбетона сказали.
Все остальное, это там мысли как-то
это модифицировать, но они неудачные.
Вот.
Ну,
пока мы не доказали, что они
удачные, они
неудачные.
Они неудачные, если не зашли.
Нет, если они
зашли, это может быть не мысли
удачные, а тесты удачные.
Ну, мысль-то все равно
удачная была.
Ну, может быть, да, потому что у нас
есть какие-то ходят, какие-то бродят мысли
в ДУТе, что, а давайте пытаться
перемножать скобочки, но в каждый момент
времени брать скобочки
с минимальной степью.
Да, ВСК это у нас такой соблазн,
но, как бы, почему это, почему нельзя
там, скажем, заготовить против этого нормальный
контртест, непонятно. Ну, например,
когда, почему нельзя заготовить там тест,
где все S будут равны W
минус 1, например, условно,
или плюс-минус W,
тогда, как вы там будете делать, непонятно.
Нет, ну, хотя
это не совсем непонятно, то есть, тогда
тогда будет заявлено, что если все
там, допустим, Sки у вас равны
W минус, там, что-то очень мелкое,
то тогда нам говорят, что, ага,
отлично, в вашем произведении тогда сумма
любых двух S-ок выйдет за пределы W.
Тогда все, что вам нужно от произведения,
это найти там маномы, которые там
будут либо единицы, либо только одно из W,
вы это делаете быстро.
Да нет, дальше идут кукарики, которые маленькие.
Вот, нет, а вот
я говорю, что если все
Sки большие, то, как бы, нормально.
Вот, хотя,
ну, вот, а вот если Sки бывают
и маленькие, и большие какие-нибудь, то вот
да, куда да.
Возможно, начинаются кукарики, да.
Так, ладно, не суть.
Так, ладно, да.
Ой, сколько еще задачек у нас?
TL?
Как сказать, нет.
TL, когда притестирующаяся система приходит
и в явном виде нам об этом сообщает.
До этого времени TL нет.
Поэтому, слушайте, поэтому я сейчас
просто попробую проанонсировать следующую задачу.
Чего?
За N log S
и
за N log S
за S log N
может быть.
Не знаю.
Я вот это знаю.
И, собственно,
и, как сказать,
и великий адепт тоже считает, что
собственно, вот столько.
Да, в роли великого адепта
Александр Кульков, да.
Вот.
Если что.
И вот следующая задача,
которую он нам предлагает, она вообще еще более веселая.
Да, задача.
Даны числа K и N
и хочется найти
сейчас, когда нот.
Да, у нас типа семинар.
Вот.
Вот прям интрига, интересно, да.
Вот такая вот формулировка задачи.
Осталось только понять, что это значит.
Что?
А, дано, дано.
А, дано, дано, дано, пардон.
Вот здесь, конечно.
Степени.
Ну, короче, пока равно
даны K и N.
То есть надо найти сумму
каких степеней.
Да, только, видимо, фишка
ну, скажем так.
Вот, собственно, видимо, имелись в виду, чтобы эту формулу найти.
Просто да, я это дам.
Потому что начало решения, в принципе,
такое, да, мистическое утверждение.
Это многочлен степени K плюс один,
на самом деле.
Чего?
Это же сумма геометрической прогрессии.
Чего? Если бы.
Нет, это не K в степени M, это M в степени K, да.
Тогда чисто беру.
Так, ну давайте вспоминать. У вас, наверное, на УКТЧ
должно было быть. Откуда берется
суббока этой степени?
Ой. Ну, это выражали через предыдущий
произведатель. А, да.
Чего?
Производящей функции? Чего? Где?
Нет, мы считали для
ка-минус первых степеней.
Так.
Потом вставали какую-то штуку
и изначально...
Да, точно ка-минус первых, а не
ка-плюс первых.
Мы как бы шли от
маленьких степеней более...
Но это, конечно, да.
Нет, просто смотрите. Известен в ней метод,
как вы говорите, такое. Что такое
M плюс один в степени
K плюс один, минус один?
Что это такое?
Ну вот.
Ну вот.
Так, сейчас.
Что за бред? Так.
Ну да, там возникало
что-то такое, да, что-то.
Да, FK плюс первая, темп плюс один.
Минус FK плюс первая от
M.
Это у нас, с одной стороны,
это равно вроде как M плюс
один в степени K плюс один, минус один.
А с другой стороны, это равно
вот. А с другой стороны, если там
каждую эту...
Ну вот.
Нет или нет?
Так.
А с другой стороны, это он...
Так, ну чего вы равно, чего вы зависаете-то?
Как бы не надо зависать вместе со мной, надо
меня выводить из этого состояния.
Так.
Так.
Вот. Нет, сейчас.
Да нет, вроде.
А, вот так.
Надо вот это сказать, да, что здесь
сумма по всем и равно, допустим,
допустим,
от 0 до M.
Такой, чтобы там
и плюс один в степени K
минус и в степени K.
Во.
Нет, это
но вот. Это равно, если
это равно, значит,
там по всем и, это
и тогда тут по всем ж надо теперь
прибегать от нуля до K минус один.
Такой величины,
как, кажется,
с из K по ж умножить
на i в степени
ж. Во.
Так, это понятно, чего я написал, да?
Да.
Нет, у меня
вот. Нет,
тут в другом. Нет,
вот как бы мысль другая могла быть.
Просто мы говорим, что мы знаем, что вот это
видимо какой-то многочлен, тут даже
видно какой, да?
Что на самом деле там нужно
допустим,
допустим, все каты, сумма каток
степеней, там многочлен степени K плюс один.
Это классический факт такой, да?
И нам жутко его хочется именно в этом
виде, в виде этого многочлена и найти.
Вот в этом фишка.
Вот и вот.
И вот возникает вопрос. Нельзя ли этот
многочлен за, собственно, K выковырить?
То есть нет, так это понятно,
что если вы прям сумму ищете,
то естественно она там достаточно быстро вылетит, да.
Называется в одно место.
Это да.
Чего?
Ну пока это называется
сумма по всем J равно от
0 до K минус один.
Это называется C из K по J.
Так.
Не.
Да, лучше тут не M, а N написать, конечно.
Вот так.
Вот, и дальше тут.
И дальше тут сумма
по I равно 0N.
И в степени J.
Вот.
Что не так?
Господи, что у вас
вообще смешит постоянно?
Формула.
Что?
Господи, формула, да, да, да.
Ну это да.
Как это? Тина Кандалати долго не думевала,
почему при фразе принцип действия банитовой палочки
называется, там участники начинают
валяться со смеха.
Нужно жутко смешить слово принцип.
Ну типа, знаете, это ты принцип,
я принцип, вот это все.
Так, о чем я говорю
вообще?
Так, ну вот прям действительно это у нас сходится
вообще или как?
Что мы сделали? Мы взяли...
Ну я, ну скажем так, я
скажем так, я свел
ну вот.
Так, ну я тут
попытался свести сумму
да,
ну я тут просто что-то позаписывал, обнаружил,
что там сумма, допустим,
да, ну в принципе, заметим так,
что мы вот написали вот такую вот интересную
штуку.
Да, пораскладывали ее тут по биному
ньютона. А, хотя нет,
это неправда, кстати, вот. А, вот
как правда, вот, вот,
сейчас хорошо будет.
Вот, вот, вот.
Да, и тут как плюс один, конечно.
Во.
А, вот теперь все нормально, да.
Не, просто да,
фишка дальше возникала тут
в том, что как бы
заметил, что у нас тут суммы житых степеней,
причем житом от нуля до к-минус один.
И, соответственно, теперь из этого
можно выразить сумму катор степеней,
как вот эту штуку, минус там
все предыдущие многочлены.
Что такое?
Самое
левое.
Самое левое выражение
во второй строчки
на доске, как мы вообще
считали? Самое левое?
Да, зачем?
Как мы вообще считали?
Да.
Ну, мы сказали,
ну, вот, это был уровень,
вот, заметим, что.
Просто, это, просто, на самом деле, это метод,
как эта степень выводится.
Ладно, что, видимо, что-то,
что-то, я чувствую, видимо, имелось в виду, да,
посчитайте эту штуку по модулю, видимо, да.
Ну, да, нет, там по модуле неинтересно,
ну, там, как бы, понятно, или там, типа, разделим
на первые n пополам коэффициентов,
на следующие n пополам коэффициентов, там, вычислим
первые и бла-бла-бла.
Ну, вроде да, да?
Ну, как бы, когда вы там суммируете,
по m равно от нуля до n пополам, так и величина,
как, допустим, m в степени
ка плюс там m плюс
n пополам в степени ка.
Не, реально, ну и...
Нет, ладно, правда,
будет тут, конечно, велкая проблема, что вам придется
складывать не только m в степени ка,
но m в степени там всех мелких степеней,
правда, при этом.
Ну, с другой стороны, ну вот,
чего?
Так, ну ладно.
Так, ладно, вот на это,
так, а, а вот это уже твель, да?
Так, ладно, господа, давайте
продолжим, что ли?
Ой, а то у нас тут еще много задачек.
Так.
Да, кончить.
Да.
Да, кончить.
Ладно, попробуем
порешать задачи
с чуть более известным решением.
Так.
Так, ладно.
Так, господа,
вылезаем, да?
Так, ну что ж,
продолжим разминочку.
Значит, сначала сейчас вырешим задачу,
с которой, казалось бы, мы вообще начали.
А начали... чего?
Не, не вы... Не, даже не два часа назад,
вообще когда-то начали.
Ой, нас фоткают, круто.
Так.
Не, не до столько.
Да-да-да, вы сейчас скажите,
написать Hello World, ага.
Да ладно.
А с чего вы программировать
учиться начинали?
А, да, понятно, да.
На мониципле было 3 часа, первые 2 подготовили,
да, потратили на то, чтобы узнать,
что такое программирование, да-да-да.
Ага, оставшегося часа хватило,
чтобы действительно выиграть мониципле, да-да-да.
Оставшегося часа хватило, чтобы закрыться
на паскале.
Да-да-да.
Так вот.
Задача была так...
А задача исходно
примерно такая.
Ну вот, значит, смотрите.
Да, многочлен, ну допустим.
Да, ну допустим
размера n.
И надо
найти его значение
в n точках.
АТ0,
АТ1 вот.
Да, вот ведь помните, мы с этой задачей
начали. Правда, мы
быстренько слились, сказав, что
ой, а давайте эти t будут еще и красивыми.
Ну вот
это вот там степень каких-то там корней
из единиц.
А вот теперь у нас задача, что теперь
t-шки произвольные.
Да, произвольные.
Главное попарно различные.
Вот.
Чаво пофиг.
Ну если t-шки совпадут, значит
t-шек будет чуть поменьше, ничего страшного.
Ну ладно, допустим.
Так, ну вот и спрашивается,
как же нам вычислить эти n значения
и желать то быстрее, чем за квадрат?
Разделяйкой.
Разделяйкой, а как?
Ну делить надо.
На что?
На произведение вида x-t0,
x-t1.
Вернее t-t0.
А, да, t-t0
на t-t1.
Да, ну действительно, да, начнем с маленького
простого факта.
Да, действительно, a t0
равно, на самом деле, да, в некотором смысле
a t% t-t0.
Да, вот такое
мистическое знание.
Знаете, как-то, типичная ситуация,
когда это называется неверно
формально, но верно по сути.
Ну как бы, это многочлен, ну как бы
это число, это многочлен.
Число не может быть равно многочлену.
Многочлен в степени 0.
Да.
Ну, как сказать, нет, если...
Да.
То есть, как бы, вектор из одного числа,
одно число, формально говоря, это не одно и то же,
поэтому пишем тут равно в калычках.
Можно было это...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
вот согласны поэтому возникает вот то просто да очень хочется применить как
всегда метод разделяй властвуй до хедлайнер собственно наших нескольких
лекций тогда что тут предлагается что предлагается для того чтобы найти
значение на членов n точках надо найти значение в первых и пополам точках и во
вторых и пополам точках логично да то есть объединение тут даже собственно
вообще не знаю нет смысла заморачиваться единственная ток проблема очень хочется
вызваться рекурсивно но не очень понятно как искать значение пополам
точек в многочлене размера n
мы знаем что-то подобное но вот что бы знаем
чего фурия какой фурия что умеет значение в номере нет фурия умеет
зачем на чем точках если эти точки равны там каком-нибудь коордиона степени из
единицы комплексного произвольных вот напряж
да вот мы хотим действительно чтобы у нас найти значение многочлена в
первых и пополам точках вот каким-то рекурсивным вызовом и каким-то вторым
рекурсивным вызовом вот хочется нам а тен пополам там соответственно а тен
пополам плюс один и так далее а от n минус 1 вот хотелось бы единственное
ток что если вы хотим вызываться рекурсивно то наверно неплохо было бы
чтобы многочлены были оба размера n пополам что же это могут быть за
многочлены то есть нужно передать сюда какой там многочлен размера n пополам у
которого значение вот в этих точках такой же как у многочлена а
ага да именно именно то есть в качестве много то есть здесь мы берем
многочлен а штрих где а штрих равен а процент вот этой вот мистической штуке
который мы сегодня уже сталкивались да ну естественно но мы че зря в прошлый
раз страдали изучали этот собственно как делить многочлены что ли
а сколько а сколько еще ну получается два вот один ищем и второго ищем тут
что ну да только тут тут еще добивочка вам больше скажу вам еще вот это
произведение откуда-то придется выкопать хотя с другой стороны это
называется а за какое время мы это произведение умеем выкапывать кстати
так из каких предыдущих шагов а вот тот подлянка в том что у нас нет никаких
предыдущих шагов нам сначала нужно вычислить эти многочлены а потом запустить
рекурсию поэтому никаких предыдущих шагов нет
да то есть да да да в этом и смысл да то есть мы значит построим на этих тэшках
опять дерево отрезков ну да как всегда мы не знаем что это такое но как всегда
мы не делаем вид что мы и дебилы поэтому да а полный протокол мэршсорт вот вот
это мы знаем вот да что такое дерево отрезков как мэршсорт только в каждой
клеточке одно число не массив вот точно вот но начну идти такая строим такой
типа мэршсорта то есть только в каждой ячейке мэршсорта там соответственно
произведение многочленов вот этого сельтова поекты но понятно что имеется
в виду да это мы кстати какое время мы это строим вот это вот супер
произведение там супер произведение с подотрезками да ух ты мечта мечта а реально
конечно ну как всегда потому что чтобы построить наращение размера n вам придется потратить
т от n равно 2 т от n пополамо они независимы тут вы как бы не пересхлопките и плюс т
от н лога н мы уже с вами даже в домашнем задании выясняли что т от n равно т это от
n лог квадрат так что дерево отрезков построили ну и теперь все что нам остается это теперь
делать процентики ну процентики мы тоже умеем делать за н лог квадрат но точнее за н лог
н каждый процентик и в результате получается что н лог квадрат н это получается наша общая асимптутика
вот понятной идее
но это берется из того что если я возьму а процент вот это вот то я утверждаю что у этого
многочлена значение в точке т 0 т 1 так далее там вот вот это и вот они не будут те же самые что
были многочлена а
потому что такое а процент вот это вот это получается а штрих равно а минус вот т минус
т 0 на вот эти вот все скобочки неважно какие да умножить на еще какой-то многочлен
b тогда заметьте если я подставлю т 0 то вот эта вот штука просто возьмет и обнулиться все
абсолютно аналогичным образом обнулиться и т 1 и в т 1 и т 2 и так далее очень очень удобно
оказывается вот так что получается видите как хорошо уметь делить многочлены знаете
за н лог н вот такие такие вещи сразу на халяву начинают получаться вот так ладно как говорится
попробуем чуть повысить планочку а теперь давайте решим обратную задачу то есть мы вот по этому
восстановили вот там посчитали вот это а теперь давайте по вот этому восстановим вот это так
понятно что я сказал да именно то есть много есть многочлен размера n его но как бы он неизвестен
но известные его значение в н каких-то точках восстановить коэффициентом многочлена да это
интерполяция да ну хотелось бы конечно да так ну продиктуйте мне лагранжа то что я его не помню
так так так так так да да да да да да да да то есть
давайте сейчас вот я допишу я за супермагическую формулу но вот да поэтому я и пишу да значит
а от т и т умножить на произведение значит по ж по всем g неравно и что там ты минус т g т
делить на произведение по всем g неравно и т и т минус т g т это называется интерполиционный
многочлен лагранжа конечно нету давайте смотрите давайте подставим вот что будет конкретно вот
если у нас вот т и т сюда поставить что будет если подставить т и т то видим что в мономе
связанном с и как бы это здесь будет а умножить на т и т умножить на но на откровенно единицу
правда вот а что будет если в этот моном подставлю какой-нибудь там т g т где g неравно и тогда
заметим что этот моном так же сна обнулиться что не очевидно вот
ну хотим найти многочлен в виде вот этих коэффициентов вот утверждается что а т
на самом деле как многочлен равно вот такой штуке доказательства там будет что-то из цикла
из там матрицы вандермонда следует что такое многочлен существует и единственное и теперь
заметим что вот это подходит если и неравна g но он нас обновится но ведь но
ну заметим что мы это рассматриваем для всех и вот давайте сделаем по-другому рассмотрим
какой-нибудь точку т нулевое тогда заметим когда и равно нулю в этом месте здесь образуется а т
нулевое и здесь единица потому что вот как раз когда вместо т подставляем т нулевое и все
жи прибегают и тут и тут все значения неравны нулю поэтому сократились получается единица
а теперь рассмотрим моном где и неравну нулю да здесь находится а 3 т но это уже неважно почему
да просто потому что среди вот ну потому что среди вот этих вот монумов есть моном т минус
т 0 и когда мы туда подставляем т 0 то это все торжественно за нуляец
что ну когда и не равно нулю до а подставляем т 0 ну я на примере показываю что если подставить
то в мономе нулевом останется а т нулевой а все остальные торжественно за нуляца
следовательный результат получится от 0 что а ты ну а если подставить 3 это это получится
от 3 этого да потому что тоже и ты за нули и ты выдаст то что надо все остальные за нуляц да это
это называется да вот еще раз говорю интерполюционный многочлен лагранжа осталось только
многочлен лагранжа остается только выяснить маленькую веселую вещь а как бы его теперь
построить за ну побыстрее чем квадрат потому что дальше видно что в тупую вот эту штуку это
похоже на квадрат даже если мы это произведение найдем как-то быстро да хоть как-нибудь быстро
и то сомнительно да а ну хорошо допустим это произведение мы найдем за т.е. за лог квадрат
полное произведение да а потом как каждый из них мы будем там честно за линию делить получится
квадрат но хотелось бы наверное что-то чуть-чуть побыстрее правда ну как сказать нет минут
нижние то все да нижние то все это да наш наш формат это да хотя никто не думал что наш
формат это да так но действительно хотя давайте снова попробуем разделяй властвуй
действительно разделяй властвуй говорит нам что хорошо давайте восстановим два многочлена там
два получим два многочлена размера n пополам вот для вот таких значений точно увидел
область и там еще в начале слова было но вот так-то не так-то до вначале был бит потом отделил
бог от единства от нуля увидел он что это хорошо там да да да и сказал бог и доплодить
размножайтесь так появилась информация да да да мы помним эту классику да так так вот ну
хорошо допустим мы восстановили многочлен если нам это надо я уж не знаю я не уверен что нам
это понадобится но получился многочлен а 0 многочлен а 1 внимание вопрос можно ли теперь
по многочлену а 0 и а 1 попытаться восстановить многочлен а а казалось бы вот нам бы просто
хотелось да чтобы у нас был многочлен который который в этих вот точках давал те же значения
да а в этих точках сначала давал тоже что и а 1 вот ну возникает же какое-то ощущение что должно
же быть что-то ответ должен быть в каком-то виде а 0 умножить на что-то плюс а 1 умножить на что-то
да нет такого ощущения что нету а ведь действительно ну смотрите а что вам мешает многочлен
а 1 умножить на многочлен t-t 0 на t-t 1 и так далее t-t n пополам минус 1
вот смотрите как интересно если мы теперь скажем что ответ у нас это а 0 плюс а 1 на вот
что-то то получится многочлен у которого вот в этих n точках значения равны ровно тому чему надо
не правда да правда единственная проблема конечно значение немножко поеду да правда немножко поеду
да потому что ответ конечно хочет еще подгонять что тут давайте еще т на т n пополам там вот вот
это все подгоним да плюс 1 t минус t n минус 1 а посчитали а сейчас подгоним чтобы а то есть
вот предлагаете с а 0 ничего не делать да так хорошо вот вы установили многочлен а 0 и ищем
ответ так нет нет пройдет что неправильно смотрите это у нас пока вот была озвучу идею пока еще
ничего не получилось что давайте ответ это будет просто а 0 плюс а 1 на вот это я правильно
спрыгнул так вот давайте погодите а 1 мы еще рекурсивно не запускали пока мы просто говорим
что заметим что многочлен любой многочлен вот такого вида удовлетворит нас с точки
зрения значений вот в этих точках понятно да вот но вот но теперь возникает такое маленькая
проблема что а да вот у нас должен быть какой-то многочлен и теперь давайте проверим что будет
вот в этих точках вы то есть давайте так но то есть получится что если мы подставим вот это вот
а 0 плюс а 1 на т ст 0 там t минус t 1 бум бум бум t минус t n пополам минус 1 если вы подставим сюда
например точку там точка т2 вот так вот то что получится получится внимание а 0 от т н пополам
плюс то что мы хотим ладно не то что мы хотим а вот а 1 от т н пополам т вот этого мы еще не
знаем да на вот это вот безобразие то есть т н пополам минус t 0 там вот это все т н пополам
минус t 1 и так далее т н пополам минус т н пополам минус 1 и это должно быть все равно а от т н пополам
по моему скажем так по моему попахивает линейным уравнением с одним неизвестным
ну потому что заметим что у нас есть одно неизвестное вот оно и в принципе можно из нее
но вот можно так если вычислить значение 0 в этой точке и значение т н пополам вот это вот
вычислить то тогда мы без труда поймем чему должно быть значение равно значением на расчлене
а 1 в этой точке согласны более того как n пополам я привел как пример то есть вместо
n пополам я могу подставить любое вот на самом деле я могу тут подставить абсолютно любой
индекс от n пополам до n минус 1 согласны то есть я тут прям вот то есть я тут могу прям вот
вот так вот жи писать вот пишем жи жи жи жи и жи соответственно у нас лежит на полу интервале
от n пополам до n минус 1 ура казалось бы да ну как ура но теперь тогда получается смотрите давайте
теперь то есть в принципе это уже попахивает решением правда давайте оговоримся что нам
нужно чтобы это решение запустить то есть нам нужно запуститься рекурсивно там получить
то есть давайте пишем прям сразу то есть т от н равно пишем т от н пополам плюс что нам
еще надо у нас получился многочлен а 0 и нам нужно выяснить его значение в н пополам точках так
так да экстра полировать это мы уже научились делать за о от n лог квадрат n плюс что еще можно
сделать так а подстава проблема еще надо взять вот этот многочлен вот вот этот точнее многочлен
вот без а1 вот этот многочлен и подставить в него n пополам точек то есть надо найти сам этот
многочлен и собственно еще и там n точка и найти его значение в n точках так за какое время
можем найти этот многочлен да заметил что да за n лог квадрат мы его с нуля можем найти а потом
еще за n лог квадрат еще и от радости там еще и подставить очень короче 3 от н лог квадрат
вот так еще там какая-то линия на то чтобы вычислить эти значения еще одна интерполяция
вот так что потом а потом еще одна но а потом еще одна фурьятина ну в общем плюс от н лог
n там получается но это уже мило но рядом с н лог квадратом это уже мелочи а ну и все но
там еще линия какая-то там на сложение но это уже совсем в общем короче говоря это 2 т от
н пополам плюс это от н лог квадрат н за как спрашивается к чему равно т т от н да так
что ура так что вот такая еще одна развивочная задача пала да мы научились экстра полировать
многочлен и интерполировать многочлен чего но а что ну пишите вашу корневу господи давайте
нет ну как сказать не ну можно конечно за квадрат попихать но ну может быть
ну я не знаю ну как знаете когда у вас решение зло куб начинается каше мышление нельзя там
корень пихнуть нет кстати вообще интересно конечно нет а еще действительно интересно
вот вообще можно ли это сделать как-нибудь за корень но то есть я не знаю вот давайте прикинем
какую на какую рекурренту мы могли претендовать вот теперь если бы у нас было т от н равно корень
т от корень из n плюс ну допустим вот это от шо тут надо вставить чтоб т от н было там н корней из n
ну давайте хотя бы т от н например поставим хотя может быть даже не рекуррента потому что что
такое корневуха корневуха это говорит что давайте возьмем многочлен н разобьем его на блоке по корень
с каждым из ним делать что-то тупое а потом их как-то тупо объединим можем ли мы тут
что-то подобное забабахть ну вот да вот это и проблема но если кто-то придумает будет классно
а томан вот а то мало ли вдруг тут есть это адепты корневой оптимизации мало ли а то знаете
тут он а то кошмар знаете гуглишь конспект автора потом выяснил что он куда шел там
что он настолько популярней что на кутфорсе при него прожарка есть правда она не связана
с fft а там найти то знаете я так почитал там лучше в конце занятия почитаю там это отдельно
шикарная вещь на самом деле как это называется нет да нет это не троллинг автора потому что
автор там потому что дарок эти прожарка идет от имени персонажа называется к созданию создание
образа которого автор имеет непосредственное отношение поэтому поэтому да поэтому да саму
прожарку читать можно да так хорошо конечно да однажды автор попытался собрать шкаф языки
но у него все равно получился сувмаз чего а это не экстраполяции это значит нет смотрите там так
там значит одна экстраполяция там значит вот одна экстраполяция одно создание вот этого
многочлена и одна его экстраполяция и одна уже его экстраполяция поэтому поэтому я там пишу
3 но понятно с точки зрения 7 точки конечно шут 4 5 8 10 не принципиально но но но но но но вот так
что там у нас дальше так у нас там есть так есть еще что-нибудь простенько или прям надо уже а
о не да да нет ну ладно надо еще задачу рассмотреть значит тоже внутри стандартная задача вот я не
помню вот давайте так вот мы с вами такой рассматривали вот смотрите так вот вы с
вами делали скалярное произведение понятно так значит смотрите данном случае под скалярным
произведением я имею в виду следующее так а ну значит про дуэль то мы с вами решали даже
про дуэль не решали так а нашел мы сейчас задачи решаем драсти приехали понятно что
на ифе будут понятно что не носу в масла ладно ладно еще задача про дуэль такая разминочная
задача знаете как это называется задачи можно формулировать двумя способами первый способ так
да но там это сколько-то чисел от одного до миллиона сколько из них можно составить
арифметических прогрессий длины 3 вот в идее была задача такая но а во всяких домашних
заданиях контестах пишется следующая красивая история петь и вася очень любят стреляться
на дуэлях вот но нет они просто любят вот эту красоту и романтику старины и пинтбол это
приводит да ну и ну я не знаю как они там надевают цилиндры там нашлемы но вот как-то я не знаю вот
но в общем ну короче говоря это приводит к тому что соответственно дуэли они не страдают ну кроме
как морально из-за поражения там разве что вот поэтому они хотят как можно больше дуэлей но что
такое дуэль вообще да значит дуэль имеет обычно значит в качестве для дуэля нужно следующее
обычно нужна какая-то прямая дорога и барьер но как вообще дуэль устроена да то есть ставится
там барьер возможно саблями или чем-то еще не важно там расчеркивается значит там каждому игроку
так сказать дается значит по одному значит по одному там револьверу с одним патроном значит
они около этого барьера становится спиной друг к другу там делают по одинаковое количество шаров
разворачиваются и там по сигналу секунданта начинают сходиться у каждого есть один выстрел
но дальше собственно да у вас есть выстрел кто побеждает тот кто ушел с этого здоровее ну или
хотя бы на своих ногах вот соответственно да но если ты промахнулся значит ты тебе остается
что-то по моему идти назад нельзя поэтому тебе остается только стоять и ждать пока тебя застрелит
если ты промашь да но это ладно это уже там как вы даты называется тогда так чика тут конечно
как тактика поведения во время самой дуэли это уже там ну там все зависит от того насколько вы
хорошо стреляете потому что как бы и возможно самая выигрышная трактика это вы там просто неделю
сидите там вы просто не вылезаете из тира а потом просто во время самой дуэли просто с финальной
точки просто поднимаете пистолет и отправляете пулю в лоб все вот ну собственно тут но там дальше
конечно но там дальше вопрос конечно я не знаю что будет если как бы противник тоже будет
обладать этим скиллом дальше там ну это я конечно подозреваю что рискнуйте погибнуть оба но это
не александр хуйков тут ничего смотрел и чего авто авто вас тут причем и в этом я дуэли это дуэли
ладно так вот а да ну хорошо ну если интересно смотрел читал собственно кайф вот значит
смотрите да гори поток тут не причем потому что в дуэли в гори потре в конце концов там не
один выстрел там более интеллектуальная игра ну вот значит смотрите значит петь и
вася решили значит собственно как-то реконструировать дуэли для этого они у
себя там где-то на черной речке нашли очень очень очень прямую аллею да прямую смысл там
длины 10 в пятый да и она при этом прямая да там какой-то мистический даже кривиз на земле там
как-то не портит жизнь соответственно так вот и самая приятная она не просто длины 10 5 а там
еще видимо она настолько прямая что там еще и какие-то беговые состязания проводили и
поставили метровые отсечки метровые да ну 10 5 метров то у аллеи да нормально да да да да
вот так вот и самое приятное на каждой метке может быть кустик кустик вот а может и не стоять
значит значит отойдет так вот что такое для них красивая дуэль красивая дуэль для них это когда
они значит ставят барьер в метричке с кустиком и потом расходятся на одинаковое расстояние тоже
до метрички причем тоже в которой есть кустик могут быть могут не быть не суть важно да
вот внимание вопрос значит вот они хотят провести дуэли всеми возможными способами и вот
жутко им интересно сколько этих способов нет я же говорю они они играют в пинтбол так что как
бы там так что так что знаете так что так что там так что они там готовы проводить регулярный
сезон там проводить статистику там и так далее вот это вообще это первая задача на фурье
которые не связаны которые которые не на умножьте там многочлены или там ведь не это первая задача на
расстоянии к там в массиве в табличке это следующая задача которую мы будем решать вот значит
спрашивается вот внимание вопрос казалось бы причем тут фурье да вот не вот к вам вот это к
вам вопрос причем тут фурье и что так да ну вот значит смотрите идея хаса очень простая построим
поле многочлен такой многочлен черные речки устроен он будет очень просто все коэффициенты
он будет степени 10 в пятой и все коэффициенты будут 0 единица в зависимости от ну угадайте
чего собственно есть кустик или нет так нет тут ну лег тут там вот 114 плюс там очень короче
шестой и седьмой там вот в данном случае и с десятой в общем была была так вот значит давайте
посмотрим дот а теперь давайте скажем что пусть многочлен б равен а умножить на а а
теперь я вот сейчас в экзотическом виде немножко запишу что такое в этом многочлене
б 2 ж это ну пусть у меня б равно там допустим вот это вот б 0 плюс б 1 х плюс ладно т будь
здоров квадрат плюс б 3 т в кубе плюс и так далее там плюс в общем короче так вот что такое в
этом многочлене б 2 жид коэффициент чуть такое но вот на самом деле да можно сказать что это
примерно следующая штука перебираем по значит на самом деле ну ну вообще по официальному
определению да это равно б и т умножить на б то есть а и т умножить на а 2 ж минус и где и прибегает
значение от нуля до двух же логично да это я но это просто определение при произведении многочленов
а теперь запишем это по-другому я могу записать что это равно смотрите чему что это равно б ж в
квадрате а ж в квадрате плюс сумма по всем и от одного даже такой штуке как а ж минус и умножить
на а ж плюс и и все это умножить еще и на два вот как вам такое утверждение
почему потому что при нуле будет ажитое на ажито мы его уже учли почему я отдельно
ажитое в квадрате вынял вынул потому что заметил что эта штука каждая будет по два раза а центральная
будет один раз вот но теперь в принципе заметим что что такое дуэль дуэль и когда у нас есть
число это когда у нас есть число вот это вот ж ж минус и и ж плюс и логично да и заметим что ну
во-первых заметим что конечно ажитое должно быть то есть если пусть ажитое равно единице мы
смотрим количество дуэлей в них да но заметим что если при и вот дуэль задан каком-то и вот
этот дуэль возможно то этот маном будет единичкой а если дуэль тут невозможно хотя бы в одной из
этих позиций есть кустик то это будет ноль то есть получается что если б2 ж нечетно можно даже так
сказать если оно нечетно то как бы вычитаем единицу делим на два и получаем количество дуэлей с
барьером ж которые можно провести но если оно четное то очевидно что значит тут стоял
нолик и тут ничего провести нельзя но это неважно да можем по нечетности б2 ж а можем
просто сразу перебирать есть ли вожитом кустик вот собственно вся задачка решение за м логен причем
что самое в чем как константа здесь еще и приятно быстрая потому что заметим что здесь надо не
3 ффт запускать а 2 но потому что когда вы запускаете как бы произведение ашки на саму
себя то как бы два раза у него ффт запускать не надо так что вот такая веселая задача
не знаю случайно вот такая вот приятная вещь значит но это неважно даже просто переберем все
позиции где может быть джи вот пусть вышитый позиции тут деревца стоит тогда заметим что
тут будет ответ один плюс очень паха по факту двойное количество дуэлей все
да разделяйте называется ффт да а как вот значит условия в общем короче дан массивчик из
пустых мест и кустиков нужно найти все пары и жи даже жи и такие что в позициях жи минус
и жи и жи плюсы стоят кустики ну и дальше там какая-то красивая легенда про дуэли да
нет это задача из контеста назвать должна вызываться дуэль ладно значит идем дальше
ладно значит так значит что нам еще надо нам конечно еще обязательно надо поговорить про
скалярное произведение что я имею в виду что я имею в виду под скалярным произведением
под скалярным произведением я имею в виду следующее значит смотрите у меня есть массив длины n
вот и есть массив b так чисто тут давайте я тут абсолютно произвольные напишу я очень хочу
найти скалярное произведение между массивом b и любой из под строк а что такое скалярное
произведение это типа вот в данном случае 6 умножить на 2 5 умножить на 3 2 умножить на 6
3 умножить на 2 и 8 можно опять все это просуммировать и мне вот спрашивается как бы это сделать не за nm
да да ладно да ну да действительно на самом деле для того чтобы это найти надо
просто перевернуть b классическая идея да просто перевернуть 8 3 2 5 6 и так и теперь
заметим следующее что теперь нам надо да то есть 2 умножить на 6 3 умножить на 5 6 умножить на 2
2 умножить на 2 5 умножить на 8 и заметим что если мы вообразим себе что а и б это и бр это
коэффициенты многочлена то мы просто перемножаем эти многочлены и в соответствии и при соответствующей
там степени т но вот у вас соответственно просто вот ровно это произведение будет просто по
определению согласны вот согласны вот собственно и все да это вот просто действительно такая маленькая
техническая маленькая техническая штука которая полезна по уметь вот она же принципе помогает
решать вот сейчас я возьму примерно ту же задачу только ее немножко переформулирую
чего да но там даже если про спишите можно что понять при каком очевидно вот так идем дальше
значит смотрите в общем-то есть похожая задача там каких-то информатик так даже есть хотя решается
абсолютно также ну смысл такой что в массиве а есть опять есть массив а длинный n
господи что там опять и у нас есть но б это теперь не просто массив а шаблон
нет не тот шаблон но смотрите там ситуация нет это такая штука смотрите есть такой
прямоугольник в котором как бы некоторые клетки вырезаны а некоторые нет вот примерно вот так
это будет выглядеть например и когда я прикладываю этот шаблон как бы под строке то какие-то числа
я вижу а какие-то нет но и там задача формулируется так я хочу приложить так чтобы сумма была как
можно больше ну или там или лучше сразу приложить всеми способами этот шаблон так чтобы у меня
получилось чтобы и посмотреть какие там суммы получаются да абсолютно то же самое просто тут
или нет вот хорошо
но нужно перебрать все позиции куда можно приложить б и для каждой этой позиции выдать какая там сумма
видимых чисел ну по сути говорим что бэшки от коэффициентов с нули к ноли к единичке и дальше
посвоим предыдущей задачи да вот вот но просто у этой задачи есть такая соседняя классическая так
на не начинаем приближать как-то потому что тут как бы сейчас в дезабто будет а да вам может
показаться что эти задачи просты вот но как выясняется эти задачи уровня финала чемпионата
мира по программированию прошлая нет не знаю ну скалярное произведение я бы назвал нет она
там седьмая по сложности была или шестая что-то в этом роде или даже восьмая там я не знаю на этот
раз поздавали кстати по моему и прилично вот значит смотрите тут другое но вот значит смотрите
на этот раз сейчас вы будете потому что идея в том что мы сейчас с вами будем неожиданно искать
подстройки в строке значит задача такая данные две строки сейчас мы тут для простоты скажем что
из символов а и б вот дана строка с нет и дана строка т строка п тоже из ашек и бэшек ну короче
сколько в хождении строки п строку с да префикс функция z функция хэши ага да
суффикс на автомат и прочие и прочие умные слова которые мы не знаем и на этот раз надо
понимать чем проблема то что да эта задача решается при фикс функции но теперь у меня следующий
прикол да вопросики в смысле нет звездочка это произвольная под строка звездочка вопросик
это один символ да то есть количество хождение говоря в предположении что на месте вопросика
может быть все что угодно да тут по моему вся суффиксная гадость братья собственно тут
начинает вылетать в трубу предыдущей задачи просто ашки наверное заменяем да то есть заметим
теперь маленькую приятную вещь то есть да заметил что вот давайте пока предполагаем что только ашки и
бэшки у вас в контесте есть та же самая задача что вот только там есть буковки а цт и г ну да
легенда дн кашная да но формально говоря все что мы рассматриваем баян так а вопросик
сейчас давайте без вопросов без вопросов это как но что если у нас нет вопросов
не но давайте сразу скажем во первых значит я утверждаю что есть у нас две буковки то
задача решается одной фф тежкой ну в смысле двумя вот молодцы да это решается двумя фф тежками
потому что если я забабаху и многочлен 1 0 0 1 0 0 то я могу как бы сделать произведение и
такжественно заявить но сколько мне существует вхождений в которых там каждая буковка а строки
п накладывается именно на буковку а в строке с логично да вот а потом делаем то же самое с
буковкой б то есть еще одну фф тежку делаем причем более того что приятно там даже в эске
даже лишний фф тежку делать не надо и получаем радость то есть суммируем и все что нам ну то
есть суммируем и все что нам нужно теперь пробежаться по всем хождениям посмотреть
скальки из них вот колития там сумма там получившегося результата равна количеству
невопросных символов строке ну надо надо да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да
да
нет мы хотим найти количество вхождений пс как подстроте с учетом шаблона, но в том
плане что если ашка то на этом месте должно быть ашка если б то si
если вопросик то может быть что угодно да то есть я буковки совпадает 토� length
по барабану
мы можем просто единичкой представлять везде, и потом проверять, что сумма равна просто длине b.
Ну потому что у нас вопрос, который дал единицу, исключает, что этот же вопрос...
Ну это ладно, ну это на самом деле...
Нет, ну в общем да, это вариация одного и того же, в общем да.
Ну основная идея, ну как бы...
Ну основная идея, что как бы, смотрите, под строка подходит, тогда и только тогда, когда, во-первых, подходит вот такой шаблон, ну в терминах предыдущих задач...
То есть вот подходит вот такой шаблон, вот аа, да?
И тогда мы, ну понятно, здесь мы рисуем единички нолики, и в эске мы тоже единички напротив ашек рисуем, и нолики в остальных местах.
И с помощью fftшки узнаем, какие вхождения тут.
Ну и второе, что получается...
Это еще одно, еще одна красота, b и b.
Ну вот у bшки тоже самое делаем, только теперь единички ставим напротив b.
То есть все, что нам теперь нужно, то есть найти все вхождения, в которых и все вхождения.
То есть все, что нам теперь нужно, то есть найти все вхождения, в которых и все ашки попали, куда надо, и все бшки попали, куда надо.
Кстати, есть подозрение, что мы все-таки можем не делать ffts с массивом ks, потому что там это вроде бы просто, ну условно, многочлен f заменяется на 1-n.
Ну это да.
Да-да-да, ну нет, в данном случае да.
Но с другой стороны, а теперь представьте, но это начинает не работать, если у вас много, если у нас есть строка не из двух букв, а хотя бы из трех-четырех.
То есть заметим, что давайте так, если тут буковок, у нас буковки из алфавита сигма, то у нас с вами есть решение за o от сигма на n логен.
Ну мы можем ставить в одни единички, в другие n плюс единички, в 5n плюс 1 в квадрате единички.
И что будет?
Ну типа мы ставим на h будет 1, на b будет n plus 1 и ставим остаток на n plus 1 в квадрате.
И чем это поможет?
И либо мы находим остаток по модулю n plus 1, по модулю n в квадрате, для n plus 1 в квадрате.
Вот эти штуки, идеи они будут независимы.
Ну это конкретно, а для трех-четырех что делать?
То есть n квадрат, n куб и прочие ажраменные числа?
Да.
Да ладно.
Ну вот, нет, на самом деле, да.
Следующая идея у нас, которая возникнет, это попытаться все-таки этот сигму убить, все-таки перейти каким-то образом к n логену.
Ну вот да, вот смотрите, да, правильно, совершенно верно.
Вопросик, как бы понятно, ставим ноль, но хочется h и b поставить так, чтобы a квадрат было равно 1, b квадрат равно 1.
Ну точнее не a на a, точнее то, что стоит, вы в принципе не обязаны тут числа одинаковые ставить, да.
Но желательно было так, чтобы то, что стоит в ашке здесь, умножить на то, что стоит в ашке здесь было равно 1.
Ну давайте так, вот мы хотим, ну сейчас основная идея такая, мы хотим сделать одно фурье, да.
Сейчас у нас алфавит символов, так?
Да.
Вот у нас есть алфавит символов.
Ну допустим вот у нас, допустим у нас есть вот там буковки какие-нибудь a, b, c, d, допустим 4, да.
Я хочу вместо каждой из этих букв в строке s поставить числа, какие?
Значит a, s, t, b, s, t, c, s, t, d, s, t.
А в p-шке соответственно поставить a, p, t, b, p, t, c, p, t, d, p, t.
И сделаю я следующий чит.
То есть я хочу сделать так, чтобы условие, смотрите, чтобы у меня было, например, a, s, t умножить на a, p, t было равно 1.
Понятно, да?
А дальше мы...
А дальше мы...
А вот, ну вот, а если я домножаю допустим a, s на какой-нибудь там b, p, t, я очень хочу, чтобы оно было...
Меньше единицы.
Ну, что такое...
Дело в том, что...
Ну что такое меньше единицы, вот непонятно.
Действительно, да, если я напишу вот так, то как-бы как-то будет в действительных числах непонятно.
Ну ладно.
Ну в действительных числах.
Если вы это будете, если эти числа делать действительными, то не очень понятно.
Ну то есть в идеале было бы неплохо.
Если мы сделали произведение так, что произведение соответствующих букв дают единицу, а произведение несоответствующих дают что-то меньше единицы, да,
то тогда заметим, что все, что нам нужно, это теперь подставить эти числа там p-шки в p-шки, s-ки в s-ки, сделать там произведением с разворотом.
И тогда, если здесь, на месте, где есть вхождение строти, получится ровно вот сколько тут символов,
а если вхождения нет, то получится что-то строго меньше.
Вот, понятная идея?
Да.
Но это получается...
Сигма, наверное...
Нет, сигма на этот...
Если мы такие а-шки, б-шки вот эти подгоним, то как-бы сигма на этот раз убивается.
То-то и прикол.
Мы независимые подгоняем.
Независимо.
Ну, конечно, зависимо.
Если мы должны подогнать так, чтобы произведение соответствующих чисел вот это на это, там, или это на это было равно ровно 1.
А произведение вот этого на этого было меньше единицы.
Все, вы имеете в виду, что если бы мы делали за сигму на lg, то мы бы просто ставили по s к единице, а во все остальные нули, да?
Ну, это мы уже давно обсудили.
Мы с вопросиками это тоже обсудили, да.
А что вопросики?
Вопросики всегда ставим ноль, потому что нам по барабану.
И потом мы читаем количество бросиков иaugeing количество бросиков и сравним, да?
Ну, например, да.
Видите, мы всегдаchien все ставить единицу, тогда мы получим тлюну, которая
куда единицу? Если везде ставить единицу, то как-бы.
Вопросиками не надо ставить единицу.
Потому что тогда единица будет подождаться на ту букву, которая там будет.
Лучше поставить ноль.
Ну, Лиㅋㅋㅋㅋ на что угодно это ноль.
А один умножить на что угодно это шо угодно.
угодно это что угодно господи ну ты как-то слил ты вот слушай как бы это устарел все
человечество перестало цепляться за сигму все это все это ста все это прошлый
век мы уже отказались от егэ все точнее наоборот все мы уже изучили историю
пошли дальше все вот а вот мы сидим и чешемся теперь
то ты проблема что в действительных числах как такое подобрать не очень
понятно вот именно чтобы меньше было что если где-то оно будет меньше где-то
больше то они могут друг друга компенсировать но есть идея да мало
кто знает но есть комплексные числа хотя в этой теории вообще все знают что есть
комплексные числа и есть такая неожиданная идея что можно сделать так
чтобы ашки были равно единице а здесь надо потребовать чтобы действительная
часть вот этого числа была меньше единиц
вот такая вот идея да
но и тогда в общем идея такая я сопоставляю abcd значит такие углы как
фи-а-фи-б-фи-ц-фи-д по большому счету по произвольной главное что по парно
различные и а это и у меня будет равно е в степени и фи-а-т а об этой будет равно
е в степени ну естественно минус и фи-а-т
во
красота
ну совсем на чего фи разбить ну совсем на целое не надо потому что фи должно
быть от нуля до двух пи но как бы но то смотрите тут главное как бы сделать так
чтобы эти фи прилично различались чтобы вас там поточить то есть утверждать что
начиная с какого-то момента конечно там будут проблемы с точностью естественно
ну как все-таки лонг даблы перемножаете все-таки дата все дела
но смотрите ну просто идея такая если вы перемножите ешку на свою сопряженную
то вы получите в точности один но но но поможет следующим образом на часы
но вот нет просто три но поможет так потому что если ты подставила эту шаблоны у
тебя будут там а б а б и тут что угодно что угодно там допустим б ада то тогда
заметим что ты отсюда получишь единицу отсюда получишь единицу отсюда получишь
единицу отсюда получишь единицу это вот четыре ну да естественно а где вы
фурье пользовались тем что это действительные числа вот да но
заметишь тут получится четыре а если тут малейшее не совпадение то тогда у
тебя получится в действительной части строго меньше чем 4 главное чтобы было
отличимо меньше но
меньше прям один делить на н ну не факт чем больше н тем более разные углы тут
надо подгонять ну как сказать в принципе конечно видимо чтобы тут ешки были
максимально различные да наверное имеет смысл делать чтобы там фи а б цд вот
в данном случае то есть были то есть это е в степени 2 пи и поделить на модуль
сигма ну и умножить там на какой-то там же да ну то есть короче корни житой
степени из единицы но это самое тупое что можно делать чтобы у вас там по кругу
вот эта вот штука шла да вот и все что он только теперь вот вам надо это только
тогда тогда вместо то есть как бы вот это вот меньше единицы превратиться в
меньше либо равно там условно там чего там получается ну да получается что-то
типа косинус там 2 пи и поделить на модуль сигма дальше все будет зависеть от
того насколько этот косинус мелкий потому что любое ну смотрите если у вас
речь идет о корнях там сигматы степени из единицы то любое произведение двух
таких корней это тоже корень сигматы степени из единицы вот и получается что
оно либо единица либо меньше либо равно вот этого косинуса поэтому дальше все
будет зависеть от того насколько косинус там очевидно чем больше размер
алфавита тем больше у вас проблемы с косинусом вот да ну при по крайней мере
не сильно больших сигма конечно причем самое интересное но вот так но вот то
есть это самом деле ладно если да зря я скажу говорю на камеру но ладно в общем
короче мы почти решили то есть мы почти мы нас то есть это задача уже по
формулевки близко к тому что реально вот на финале в бангладесе было
нет а как а как вы умеете решать кстати если в эске есть вопросики
а если вы здесь вопрос если вы скажите вот еще что-то сделать это гамма
но по сути нужно для каждого зрителя понимать сколько вопросов совпадает
ну в принципе да ладно давайте так ладно такая лада то есть в этом месте да то
есть что делать если в эске тоже есть вопросики да оставим там в качестве там
самостоятельного обсуждения там это там самостоятельного упражнения действительно
это уже не это уже не сложно рядом совсем эти как так чего-чего кого ой ой ой лада
значит смотрите так вот слющайте усложненную версию подобной задачи значит
то ты так вот так вот на финале ладно я крыша риску сейчас крыша живи сом на
финале было такое так ребят так вот на финале была такая же задача только там
были двумерные таблички ага смотрите дана табличка n на m каждая клетчика
раскрашена в один из цветов цены превосходит 10 табличка ну дай бог так дай бог памяти
какая по моему там вот я не помню там на м там не более чем то ли 10 пятый то ли
они вообще обе по соточке если честно ну давайте там скажем что n на m не
превосходит 10 пятый вот то есть они тут покрашены в какие-то цвета вот то есть
там тут покрашены какие-то цвета там понятно тут там какие-нибудь вот более
адекватные цвета но адекватные в смысле яркие да что-то зелененькое там ну и так
далее и дана теперь табличка поменьше это штрих на м штрих в общем только условно
но там не помню точную формулировку ночем суть в том что короче тоже есть вот
закрашенные клеточки а есть вопросики ну то есть это типа что там может быть что угодно
ну вот вот так вот спрашивается но вот и спрашивается сколько у нас существует мест по моему в
которых вот этот вот шаблончик подходит да она и да просто меньше ну может и больше тогда
ответ 0 но просто меньше поворачивать шаблон нельзя и чего
ну да да да да да да давайте ну давайте так действительно да действительно заметил что
да одно из решений действительно заключается том что давайте эту штуку мы превращаем в строчку
просто вот конкретинируем все вот это вот это мы тоже превращаем строчку но только каждую строчку
теперь делаем размера м добивая ну скажем вопросиками ну еще там ограничение что когда
мы делаем тогда теперь надо подставлять строчку в строчку но подставлять не во все позиции а
только в те в которых вот там переполнение не происходит так понятно тут о чем речь
где здесь не а здесь то зачем нету нету мы здесь добавляем так чтобы вот длина вот
этой строки стала равна м а потому что смотрите потому что идея вот такая предположим что мы
хотим учиться проверить вот допустим вот там ну я не знаю вот эту вот штуку да тогда заметим что
когда мы как бы это схлопнем строчку то как бы и смотрите вот начинает с этого момента это
соответствует этому это это это это это это это это потом дальше вот эти вот клеточки значит
попадут под вопросики да я тут много нарисовал в данном случае надо три вопросика да эти
попадут под вопросики так далее да то есть конечно если вы подставите вот этот клеточку
вот сюда то тут получится это соответствует этой это это это это дальше вот это как бы
начнет вот этой совпадать то есть это надо просто не просто не надо рассматривать но вот
надо просто некоторые не рассматриваем да ну вот то есть м на м там помню 10 5 и так далее в общем
ну вот так что на самом деле вот оказывается вот поздравляю это была седьмая посложительная задача
на последнем финале cpc так что если кто-то думать что какие-то божьи космические задачи то вот на
самом деле вот ну ладно правда нет там кашу уровень растет это по-моему второй раз в истории
когда там на финале дали задачу на фурье но вот нет ну как сказать но с одной стороны да но с
другой стороны судя по всему скажу так скажу так с другой стороны можно сказать что это сейчас
хорошее слишком хорошо известная теория то есть как бы сейчас это и цикла то есть просто теория
которую надо знать и такие задачи надо просто садиться и щелк нет вот но к сожалению но вот
но видимо но как как сказать да там но там видимо это они там они там и собственно более ранних
задач посыпались к сожалению но вот так что датечка да вы будете командой фистеха вы собственно
таких задачах не посыпитесь вот так что вот но вот ладно да должен еще конечно сказать да
так что спо да спонсор задачи у нас финал чемпионата мира как вы это спонда да спода
ладно должен сказать спонсор решения иван андросов это тренера соратова если что вот
его команда эту задачу сдала второй вообще вот саратовская саратовский государственной
инститет тренера иван андросов да нет нет нет ну нет он сам он-то сообщил до сильно раньше
нет это нет это нет это нет ну как бы нет это не слив это просто как бы баян просто знаете
просто как бы видимо для составителей финала возможно фугей такой что-то не совсем тривиальная
просто в россии фуге знают давно потому что говорят что там 15 году когда впервые на финале
появилась датчина фуге то есть они вообще в жюри было считала что там фуге это супер какой-то
сложный неизвестный алгоритм поэтому там почти только только самые топы его решат и они обнаружили
что и с удивлением обнаружили как минимум среди российских команд почему-то задача пользовалась
большой популярностью потому что видимо выяснилось что да в россии оказывается фф это давно не новость
хотя скорее всего не в россии тоже потому что там китайцы с этим фуге тоже многое умеют делать на
самом деле вот ой да да да да да да но я надеюсь до этого мы тоже доживем но да не не не не но
когда вот в 2019 году с удивлением обнаружил что седьмой по сложности задачи там оказалась задача
по-моему практически упражнение на хакарасе да но такой но там я говорю все короче говоря дайте
вот в общем пока я по таким финалу финалы бывают раз на раз на раз то есть такие вот то есть как
сейчас вот финалы видимо если такие же будут то там видимо первые несколько задачи такие стандарта
там ну где-то стандартные где-то очень такие простые задачи которые вот просто вот берутся
тем что если вот много тренируетесь то вы такие задачи сидите и щелкаете просто достаточно
быстро вот может быть по-разному когда я был на финале в 2014 году там наоборот был там были
было гробяра но просто чтобы вы понимали там как бы из 12 задач значит там 3 был контест на 12
задачах третье место решила 5 11 место решила 4 но там мы решили две но вот но там и это бы мы
решили две и да чего но первые два места решили 7 да как кстати да как кстати неожиданная вещь
оказывается да как это закон подлости если вы заморозку уходите в заморозку выигрывая второго
места две задачи и если вы при этом заморозку сдаете седьмую еще одну то это не значит что
вы выиграли но это да потому что это команда вот там как команда с евстроповым тогда вот реально
там там что-то первое место там команда мг 6 задач второе место видимо спб 4 4 задачи но
видимо эти спб 4 очень быстро решили первые 4 задача потом зависли потому что они там заморозку
знали три задачи в итоге выиграли на что кто все эти люди ну ладно но это да но не на на
самом деле да да не да никогда так не было потому что по факту кстати они там вышка
зали десятую задачу за две минуты до собственно долон гранкова то там 50 там 455 457 было вот но
вот но это ах ладно это но это но это называется как бы да то есть это это было очень классно
для заморозки но как бы просто не надо тупить на первой задачах но в общем всякое бывает тем
более что конкретно четверть финали это еще не принципиально вот давайте гораздо страшнее будет
если это пройдет в полуфинале и как бы вашим противнику а что команда из вашего живу за
ну ну нет там разные тактики бывают что так знаете потому что там есть есть какая-нибудь
стандартная геома которую надо просто сесть и писать то как бы соком у вас обычно хорошая
тактика это где-то в середине контеста во член команды кто умеет писать геометрию садится
и пишет остальные его там периодически сгоняют чтобы писать более адекватные задачи
ну вот может и зря так стоп сколько там времени теперь ой кайф какой так
так ну ладно про простые задачи мы как что поговорили ладно слушайте корридор
слушайте другую задачу сейчас будет совсем другая задача вот сейчас вот вот мы говорили
о рекуррентах сейчас мы будем с вами рекуррент и решать любите рекуррент
значит смотрите значит садачка
будем решать такую рекурренту значит смотрите рекуррента f и плюс катэ равно
смотрите а нулевое f и т плюс а 1 f и плюс первая плюс а f а 2 f и плюс 2 плюс и так далее плюс
а к-1 f и плюс к-1 нам рейгородский начальник объяснять вот так но тогда вот
наверно после русского вы знаете как найти фэнны так ну давайте смотреть да ладно ну
на чем постепенно ладно допустим что к не превосходит я не знаю там действительно 10 ну для
разминочки да тогда мы тогда действительно есть такое стандартное решение как там какой-нибудь
f там допустим там то есть допустим и там какой-нибудь и плюс к плюс там и плюс катэ f и плюс к-1 т т т f и
плюс первая равно тому же самому только вот f и т f и плюс первая пум-пум-пум f и плюс к-1 и все это
обложено какую-то там матрицу так значит смотрим так но что тут надо в первую строчку мы прям
честно выписываем все вот эти коэффициенты правда в обратном порядке но неважно а здесь чем а дальше
что мы делаем но здесь мы выписываем там всякие там диагональ единичек логично да ну и после этого
вам остается только сказать что в общем короче возвести эту матрицу в правильную степень
домножить на вектор исходных значений и возрадоваться за какой всем точку это работает
но до кав кубе логан да 2 3 5 4 дем логан да да да да да оптимизация метода куперсмита винограда
который работает за два точка два три восемь один да да да мы помним да ну да или просто
штрафсона уже написать что тут уже так что еще можно сделать но на самом деле да то есть что
имеется ввиду да действительно зачем можно это можно какой-нибудь там окопать какой-нибудь
который возможно квадрат вам там где-то да ой боже ладно мы тут не будем заморачиваться
а вместо этого действительно давайте объявим нашу великую производящую функцию как у нас так как
говорит у нас да со старый городский говорите да откуда вы тогда откуда вы тогда а у вас был
демид да так а где у вас был демид а хорошо но давайте просто городский бы в этом месте сказал
давайте рассмотрим картинку было дело картинка f 0 плюс f 1 x плюс f 2 x квадрат плюс там f 3 x
кубе плюс и так далее до бесконечности да никто не сказал что этот ряд хоть где-то кроме нуля
сходится а ну скорее чем скорее всего он и не сходится в общем-то чего вот ну в нули это
сходится ну как бы да нет ну в идеале знаете как бы нет тут разные варианты дайте есть как бы
такая функция но если вам очень хочется чтоб сходился то иногда например помогает ввести
такую экспоненциальную производящую функцию которая делает вот то же самое только еще на
фортериалы делит вот вчера например задача кает обе сильно помогло вот
ну что загнали же в итоге ну не но там дальше просто там но там дальше нравится надо знать
после еще какую теорию знать там какая-то обратная формула ла гранша там еще там
производство а производные там еще надурать в общем да в общем да вот вот ровно по этим причинам
хотелось бы разобраться в ней досконально но давайте хотя бы с этим разберемся для начала
так что треть чем приятно это картинка но когда я говорю картинка я имею ввиду что да вот у нас
есть такие последствия мы с ними можем делать те же операции что на многочленами только на
бесконечность да вот и тогда у этой картинки есть какая-то приятная штука то есть о но вот то есть
у этой картинки известно что но давайте так возьмем характеристическим так что что такое
характеристический многочлен так вот кто-то там употреблял слова характеристически многочлен
тут тут ругался что это такое ну вот да на самом деле да вот такой рекуррент давайте рассмотрим
такую штуку как хи от x которая будет равно такой интересной величине как x в степени какой там
катой получается минус а к-1 х степени к-1 минус вот это вот x к-2 минус и так далее минус а 0
вот хотелось бы вот действительно что-то такое сделать спрашивается а как вот действительно
тот факт что у нас рекуррент устроена вот таким образом выразить в терминах вот этой
производящей функции характеристического многочлена как это выглядит как это сделать
ну ф и плюс катая это если мы ф от x уножим на x катае чего
сейчас чего каково он нужен ну и плюс катае она выражается через ф и т как если мы
ну на какое сейчас ф и ты что что такое ф это это число да так ну-ка давайте что за
так что вы там гуглите что ли вылезайте давайте из компов давайте тут нужен давайте где
я имел в виду что можно переписать как бы изначально вот этого траинства как
f большой от x умножить на x катой равно а 0 на f большой от x плюс а 0 на x на f большой
от x и так далее на самом деле производящая функция вроде как должна получаться из
на какой-то еще нет ну утверждение такое но на самом деле это можно переписать так в общем
это f от x обладает таким свойством что f от x на произвести если перемножить эту
производящую функцию на x от x что получится тупо 0
нет
так хорошо а чему оно равно тогда
так ну да но как сейчас да ну заметим что ладно в этом произведении начинает с
катой степени действительно все такжественно обратиться в ноль согласны
вот
да в то в то я не в то да ладно ну давайте в ту сделаем господи пожалуйста что
так тупо нет но давайте но давайте проверять вот у этого произведения допустим при x в степени
m действительно что у нас тут находится ну допустим находится очевидно но по
значит ну очевидно так f значит допустим f допустим f и минус каты очевидно ну потому что тут
при f и минус катом тут был x степени м-ка тут x каты вот минус f и минус ка плюс 1 на а нулевой
минус f м-ка плюс 2 на а 1 но плюс соответственно и так далее так что там у нас в конце получается
так так как у нас тут так так так почему
в смысле не до конца развернули 1 минус чего
так не понял так ну в данном случае как бы обратить внимание до 0 находится
при меньшем индексе 1 при меньшем индексе как здесь
x от x мы не нам не до конца его любовь но нет у
около оно, ну нет, ну может быть, хотя при х как бы, причетом я причет, что х тут должно стоять вот именно при единице.
Кажется, нужно всё, чтобы скорее х в степеника умножить на х и добавить единицу в конце, простите.
Сейчас, всего какая единица, ну вот какая.
Убрать х в степеника.
Ну вот как-то по-другому должно быть.
И добавить один.
Ну не один, да, но вот.
Ну ещё правда будет работать, если...
А давайте...
Не-не-не-не-не-не, ну вот как-то.
Ну вот так.
Не, ну может один, но там просто деление какое-то вот не такое получается.
Я могу как бы рассказать решение просто без введения понятия характеристические функции.
Но там как бы...
Ну скажи так, был нот.
Нет, ну будет там такое, но в итоге будет что-то эквивалентное делению всё-таки наподобного рода многочлен.
Ну да.
По-хорошему, деление не должно меняться, если мы добавим в конце, но мы хотим ноль делить.
Но если мы добавим в конце, типа акато равное нулю, то у нас делить на хи уже нельзя будет.
Ну если мы сюда ноль добавим, то да, но мы не добавляем, зачем нам его добавлять?
Он про то, что пока не минус первое, может быть одно нулю, и тогда мы банально поделить не сможем.
Такого не должно.
Поэтому в конце так или иначе должно быть завет и деление.
Так мы что...
Нет, у нас надо чтобы все степени начиная с ката обнулились, а какие-то первые пусть остаются чем угодно.
Как бы утверждение пока...
То есть как бы...
Чтобы решить задачу, поделить что-то на хи потом когда-нибудь.
Чтобы поделить что-то на хи, нужно чтобы хи был понятный нам свободный член.
Поэтому логично, что свободный член будет один.
Ну не знаю, мы должны делить вот на это.
Единичка должна быть в X ката, а не при свободном члене.
Чтобы поделить на степеной ряд, нужна единичка как раз при свободном члене.
У нас взятие обратно...
Так мы же там не делим...
Ну там мы не делим там по моду любой другой.
У нас взятие обратного многочлена идет рекурсивно в левую, в левую, в левую часть.
Поэтому у нас в свободном члене, кажется, нужна единица, чтобы в славном конце может быть...
Ну значит видим у вас какое-то принципиально другое решение.
Мы делим на хи от X, не все.
Это наше решение.
У нас хи от X другой.
Выбивать бы тоже единицы на херликс.
Пока мы умножаем.
Нет, то вы...
Я пока да, то-то...
Так...
А почему мы не хотим просто попробовать то, что мы Денису предлагаем, и все?
Ну...
Видимо потому что у меня сейчас что-то должно быть в другую сторону.
Что вы хотите сделать, товарищи?
Ну давайте так, ладно.
Расскажу решение, которое у меня есть. Все, вообще без этого всего.
Значит вообще без этого всего.
То есть просто делается просто ручками, и каких умных слов, типа этистические функции тут не появляются.
Просто есть вообще другое.
Но идея такая.
У нас возникает как-то...
Вот вы говорите, что каждый коэффициент выражается линейным образом через предыдущие к, да?
Но у нас есть такое жуткое подозрение, что на самом деле каждая f отсюда может быть выражена как бы тоже линейным образом через какие-то k подряд предыдущих коэффициентов, да?
Ну да, то есть я, например, хочу написать такое.
Вот я хочу сказать, что f и плюс k плюс там допустим значит shift.
Значит shift, да, где shift это какое-то мистическое число больше либо равно нуля.
Я хочу сказать, что это должно быть.
Значит a нулевое shift-овое, так shift это не степень, если что, а индекс тоже.
Вот f допустим it, плюс a первое shift-овое, f и плюс первое, плюс и так далее, плюс a соответственно k минус первое.
Shift-овое на f и плюс k плюс 1.
То есть в общем глубокий смысл в том, что как бы вместо того, чтобы искать там n коэффициент, я хочу найти ну допустим чтобы у меня был shift равен ну скажем n минус k.
Ну да, для этого неплохо было бы конечно показать, что такие вообще ашки существуют.
Но они существуют, на самом деле, я вот на примере i плюс k плюс 1, shift равно 1 покажу, откуда они берутся.
Они берутся так, f и плюс k плюс первое у нас равно, как известно, a нулевое f и плюс первое, плюс a первое f и плюс 1, плюс a второе f и плюс 2, плюс и так далее, плюс a k минус первое.
И так далее, плюс a k минус первое f и плюс k.
Ну заметим, что у нас тут все f-ки в общем-то те, которые нам надо от i и плюс k минус 1.
Только единственное у нас вот это лишнее.
Но теперь мы заметим, что вот эту f-ку мы можем развернуть рекурсивно тоже, правда?
В результате получится следующее, получится, значит, a нуль умножить на k минус 1 f нуль, плюс далее, a нуль плюс a 1, a k минус 1.
Там соответственно f там, так ладно, тут f и t, тут f и плюс первое, плюс там, что там у нас дальше?
Дальше, значит, a первое плюс a второе на a k минус второе, f что-то там, значит, и плюс второе, плюс и так далее, плюс, ну и в самом конце у нас там что образуется?
Плюс a k минус второе плюс a k минус первое, а тут везде k минус первое, что я тут чушь пишу какую-то.
Значит, k минус первое на a k минус первое, не буду писать в квадрате для унификации, f и плюс k минус 1.
Вот, то есть вот как минимум по такой схеме я в принципе могу заявить, что вот эти вот коэффициенты, например, да, то есть вот такие вот коэффициенты, они все равны a, вот при шифт равно 1, это a нуль 1, это a 1 1, это вот типа a k минус 1, вот, понятная идея, да?
Чего рассказать?
Ну скажем так, я утверждаю, что скажем так, утверждение, для любого шифт больше либо равно нуля, существуют вот такие k чисел, такие что для любого и верно вот эту.
Шифт это не степень, шифт это индекс, ну я тут мог через запятую написать, но так короче, да, шифт это индекс в данном случае, а не степень.
Это a нулевое, шифтовое, двойнекс, да?
Да.
Скажем, кстати, вот можно сказать, что вот все a и t это то же самое, что a и t нулевое.
Вот.
Вот, то доказательство того, что они примерно существуют, вот, то есть, например, вот я доказал, что при шифт равно 1, так и коэффициенты существуют.
На самом деле абсолютно аналогично по индукции я могу доказать, что если существуют шифтовые коэффициенты, существует шифт плюс первое.
То есть, я думаю, понятна идея, то есть, я просто вот здесь везде шифты пишу и не парюсь.
Понятно, да?
Так вот, ну идея просто в том, чтобы эти, чтобы шифтовый коэффициент при шифт равно n, мне бы получить не за там n умножить на k, а как-нибудь повыстрее.
Вот.
То есть, вот у меня такая идея.
Да, вот я надеялся, что нам тут, да.
Ну, на самом деле можно сейчас вот без производящих функций, сейчас я просто покажу, как это на самом деле можно легко сделать.
Так.
Значит, смотрите.
Так.
Значит, смотрите.
Чем поможет? Чего поможет?
Значит, теперь смотрите.
Ну, идея такая.
Заметим, что по шифту получить, скажем, два шифта.
Как мы, шифт плюс один, можно без труда, как видите, за линию, да.
Видите?
А теперь основная идея тут заключается в том, что мы по шифту будем получать два шифта.
Как получить два шифта по шифту?
А очень просто.
Дело в том, что f из плюс k плюс два шифта.
Значит, поехали.
Ну, давайте уже распишем.
Значит, давайте в виде суммы.
По g равно от нуля до k минус один.
Такой получается a gt соответственно шифтовая умножить на f и плюс k плюс шифт.
Плюс g.
Внезапно, да.
Видите?
А лучше я еще и g1 напишу.
На самом деле, внимание, это равно g2, то есть на самом деле это как бы та же самая сумма.
Я ее могу написать так.
То есть та же самая сумма, только внутри я еще прибегу с суммой по g2.
От нуля до k минус один.
И получится у меня следующее, внимание.
То есть получится у меня a g1 шифтовая, на a g2 шифтовая.
И здесь получается f и плюс k.
А почему из плюс k-то вообще?
Так.
Чего?
Так, нет.
А, ну.
Так, нет.
Сейчас, где-то тут со сдвигами индексов что-то не то.
Так, погодите, а вот это вот вообще верно?
Да.
А, ну да, не совсем так, видимо.
Чтобы совсем удалось.
Но есть виды, которые собираются подolanзин.
Удoniьте, что, все он очень милый, конечно.
별аж не он он для меняέрки
первая
solid
Удобно было, да, наверное, как бы, то есть, наверное, должно...
Ладно, давайте по-другому сейчас это определим.
Давайте будем говорить, что у нас есть вот, на самом деле, не и плюс к, плюс шифт, а и плюс шифт,
где шифт больше либо равен, чем к. Во!
Нет, тоже неправильно. Так.
Ну, там, потому что, как бы, нет, удваивать-то мы сейчас будем легко,
а вот как превращать быстро к, скажем, в полтора к, вот будет уже непонятно.
Зачем?
Мы просто обратным возведением степени, наверное, придем.
Каким возведением степени?
Как мы к будем превращать в полтора к?
Сейчас мы же можем шифт-1 и шифт-2 превратить в шифт-1 и шифт-2 или нет?
А зачем нам полтора к?
Просто раскладываем число в сумму степени 2.
Нужно условие шифта типа х, наверное.
Так.
Нет, там просто, ну, просто если вот честно формулу подставлять, видите, то есть как бы,
если тут было к, то как бы тут это к должно исчезать.
Давайте у нас, пусть у нас было и плюс к, плюс м, мы просто скажем, что...
Ну, мы типа возведем, будем возводить пенарду степень N, вот, только в обратном порядке,
где нужно добавлять единицу, только нужно нажать на 2.
И таким образом...
Ну, вот мы, так мы и пытаемся выяснить, как тут вот шифт на 2 нам нажать, и получается затык.
А не получается много это 2?
Ну, вот он у нас затык, потому что у нас тут индексы не сходятся.
То есть, ну или, то есть, пока, то есть, вот как-то они вот некрасиво сходят,
потому что вот я при таком вот определении, например, то есть, смотрите, в чем проблема.
Шифт был больше либо равно нуля.
То есть, если вот и плюс к, плюс шифт, вот шифт больше либо равно нуля мы написали,
теперь мы пытаемся шифт превратить в 2 шифт.
Пишем f и плюс к, плюс 2 шифт.
И я пытался выразить это через вот шифт плюс g1.
Но, как бы, и почему-то есть подозрение, что, как бы, вот, на самом деле, так,
если я вот так поставлю, то это будет верное утверждение.
Или неверное?
То есть, как бы, потому что, то есть, получается, k должно вот быть вырезано.
Вот в чем проблема.
Вот, и тогда получается, второй раз я вот это уже раскрыть не могу,
потому что у меня тут k-шки не хватает.
Вот поэтому теперь возникает вопрос, как бы сделать, ну вот,
то есть, как бы, чтобы это как-то вот вместе было, надо то ли тут 2k писать,
чтобы тут было морло написаться k плюс шифт, и тогда дальше тут будет адекватно.
Вот тут как-то вот так тогда будет.
Вот, и тогда это уже будет похоже на хоть какую-то правду.
Но тогда это было бы правильнее написать, если бы k на самом деле в шифт входило.
Но минус тогда, но тогда будет, тогда этот переход будет работать только при шифте больше либо равном k.
Вот.
То есть, вот такая идея.
То есть, в принципе, да, заметим, в чем идея, да, то есть, конкретно здесь, получается,
сделать этот переход на два шага получается адекватно.
Потому что, да, заметим, что здесь у нас, конечно, рекуррента получается, скажем,
рекуррента получается с коэффициентами в количестве не k, а 2k, да, видите, да?
Видите?
Вот.
То есть, получается 2k, но...
Ну, вот.
То есть, получается там, давайте так я пока напишу для простоты.
То есть, это равно сумма каких-то коэффициентов, там условно, bgt на f и плюс g,
прибегает значение от нуля до, получается, 2k минус 2, где-то, да?
Да.
Что?
Ну, проблема будет в том, что как бы удвоение будет работать только если шифт больше либо равен k.
То есть, шифт 1, шифт, допустим, 3 в шифт 6, при k равно 110 в пятый превратить не удастся.
Сейчас, ну, для одного найдется, и для двух найдется, и для трех, но если вы каждый будет искать, будет как квадрат.
Я не буду каждый искать.
То есть, там, чтобы домножать на 2 шифты, нам нужно что-то конкретное делать?
Ну, да, чтобы домножать шифт на 2, нам нужны ашки для данного шифта и все.
Нет.
Ну, вот, я чисто вот формально по индексам расписал и обнаружил, что просто так это не работает.
Тогда либо найдите у меня ошибку, либо смиритесь с тем, что как бы вот этот переход работает только для шифт больше либо равно k.
В смысле, он будет работать в том же виде, если шифт меньше k?
Ну, у меня, да, только я вынужден писать тут 2k, обратите внимание.
То есть, допустим, мы ка занесли в шифт.
Нет, ты их.
У нас теперь есть вот та формула для f и плюс шифт.
Ну, допустим.
Она у нас есть для любого шифта хотя бы ноль.
Есть одна проблема, у нас нет формулы для шифт равно k пополам.
Есть. f и плюс k пополам равно f и плюс k пополам.
Это корректная формула в том виде.
Да.
А, ну, допустим, да, действительно.
Хорошо, хорошо, ладно.
Давайте тогда сделаем.
Попробуем сделать такой чип.
Значит, кашки лишние убираем.
Да, хорошо, и плюс два шифт.
Так, тут мы говорим и плюс шифт.
И при этом говорим, что вот это вот всегда, да, шифт больше либо равно нуля.
И говорим, что если шифт меньше k, то тогда говорим, что a и t шифтовая.
Равно, просто вот и равно шифт.
Ну, стандартное обозначение, да.
Типа, что эта штука равна один, если это true и ноль, если false.
Да.
Да, ладно, специально для сишников напишем вот так, да.
Так.
Ну, хорошо, да, ладно.
Хорошо, допустим.
Так, ну да, тогда в принципе, да, похоже на победу по модулю отчего.
Итак, как получить из шифта два шифта?
То есть мы поняли, что f и плюс два шифтовая можно вывести как линейную рекурренту вот с такими b-шками, да.
Ну, тут два варианта.
Как эти b-шки получить?
И главное, как из этих b-шек получить то, что нам надо.
Получить, собственно, так, чтобы это было...
Потому что в итоге мы должны получить каким-то образом, чтобы тут g скакала от нуля до k-1.
Чтобы вот эти вот получались a2 шифтовая, gt, f и плюс gt.
Ну, ответьте, какая-то вопрос.
Если у нас есть эти b-шки, как получить вот эти h-шки?
Вот эти b-шки, допустим, эти b-шки у нас есть.
Их много, их целых 2k.
Ладно, минус один.
Надо их свести к тому, чтобы было всего k-чисел.
А вот отсюда.
Мы тут, допустим, формулу как-то поразворачивали тут и что-то свернули.
Потому что уже намек на то, что явно тут что-то попахивает каким-то произведением многочленов, правда?
Но объективно.
На самом деле я могу так сказать, что давайте я введу многочлен b от x равный там b0 плюс b1x плюс b2x2 плюс и так далее.
Плюс b2k-2 на x в степени 2k-2.
Тогда я утверждаю, что b равно, такая вот мистическое утверждение, на самом деле b от x равно a с индексом shift от x и все это в квадрате.
Ну, если вы понимаете, что такое h-shift.
Ну, логично, да? Просто вот налицо.
Это приятно, да. Если у нас есть h-shift, то как бы мы его возвести в квадрат за каллог k сможем.
Сможем?
B это какая-то сумма h, да?
Ну b, ну смотрите, мы вывели вот эту формулу, да?
То есть ее можно интерпретировать как сумма вот f от и плюс g умножена на какой-то там коэффициент.
Вот эти коэффициенты мы обозначим bgt.
Ну, если я тут правильные подобные слагаемые приведу.
Из исходного оно берется.
Вот.
И тогда я говорю, что если я из этих больших беру многочлен, то я утверждаю, что этот многочлен получается просто многочлен, который я бы получал из shift-овых коэффициентов и возвел бы их в квадрат.
Вот просто оно.
Допустим.
Так, теперь мне жутко интересно, как мне из этих больших, как мне из этих больших действительно попытаться действительно получить нормальный коэффициент.
Вот. Здесь я попытаюсь просто, давайте я приведу, возьму конкретный пример.
Конкретный пример такой.
Допустим, у меня a shift-овая, ну, допустим, у меня k равно, для примера, ну, я не знаю, 5.
Ну, и, допустим, мы это все делаем по какому-нибудь модулю, да?
Допустим.
Поэтому там могут получаться рандомные коэффициенты, и у меня получится, что a shift-овая от x оказалась равно, там я не знаю, 5, плюс 4x, минус там, я не знаю, x в квадрат, минус 7x в кубе.
Плюс, ну, я не знаю, 3x в четвертой.
Ну, от балды как-то что-нибудь, да?
Так числа абсолютно от балды, да?
Ну, то есть, это был бы эквалент от, ну, вот.
Вот.
Ну, вот.
Ну, и получилось бы, что b у меня, значит, равно в квадрате.
Ой, да, не самый, ну, вот.
И тогда я знаю, что b от x у меня равно, ну, там, чему у меня получается, 25, плюс там, сколько там, 40x, там плюс, так вот, ой, господи, у кого-нибудь там есть под рукой это произведение многочленов там в гугле?
Есть.
Вот.
Вот.
Сколько там получается?
Минус 10.
Да, минус 10 плюс 16, да, видимо, 6x в квадрат, там, вот это все, да?
Вот.
Ну, все, сколько там?
25, плюс 40x, плюс 6x в квадрат, минус 78x в квадрат.
Дальше.
Минус 25x в четвертой, плюс 38x в пятой, плюс 43x в шестой, минус 42x в седьмой, плюс 9x в восьмой.
Ага, спасибо.
Вот, вот такая у нас b-шка получилась.
То есть, как бы, это у меня выводится, да?
То есть, в переводе говоря это я понял уже, что у меня, значит, f и плюс два шифтовое, да?
Равно чему?
Оно равно, получается, 25, 25f it, да, плюс 40f и плюс первое, плюс и так далее, плюс там в конце остается 9f и плюс два, и плюс сколько там?
И плюс восемь, да?
Понятно, да?
Вот.
Но теперь фишка такая.
Давайте вспомним, что у нас есть вообще-то исходная рекуррента, которая равна, ну, допустим, которая говорила нам, что f и плюс kt равно что-нибудь попроще.
Там я не знаю, 3, минус там, 3f, допустим, it, да, минус 2f и плюс первое, плюс там 4f и плюс второе, минус f и плюс третье, плюс f и плюс четвертое, я от балды написал, да?
Вот, допустим, у нас так, да?
Зачем я это делаю?
А теперь я замечу вот что.
Я же могу пока, вот это и плюс восьмое, такжественно загнать в предыдущие коэффициенты, правда?
То есть что я для этого должен сделать?
То есть если у меня тут вот, то есть давайте я так, если у меня вот есть вот эта последовательность, 25, 46, там, минус 78, минус 25, 38, там, 43, минус 42, 9, да?
Тогда смотрите, что я могу сделать.
Я могу на самом деле вот эту девятку убить, я могу эту девятку убить, а вместо этой девятки, вот, написать вот эти вот в К предыдущих.
Правда?
То есть я могу написать что тут плюс 3 умножить на 9.
Тут я могу написать minus 2 умножить на 9.
Тут я напишу plus 4 умножить на 9, да?
То есть плюс соответственно, минус 9.
Теперь тут тоже плюс 9.
И тогда у меня получается, что рекурренты выражаются
уже не через 9 коэффициентов, а через 8, только они теперь
равны 25, 46, так, минус 78 плюс 27 это сколько?
51.
Так, тут у нас 18 это минус 7, тут у нас получается 38
плюс 36, 74, так, тут надо 34, тут называется минус
33.
Но теперь заметим, что вот это минус 33 мы тоже можем
убить, правда?
Тоже можем убить аналогичным образом.
И повторив так операцию K раз, мы прекрасно можем сделать
что?
Правильно, мы можем оставить вот эти вот K коэффициентов,
согласны?
Если мы будем делать это в тупую, то у нас уже симптотика
решения, кстати, К квадрат логн получается, но это
можно сделать быстрее, потому что вот это вот вычитание
вот это и прибавление вот это, ничего вам не напоминает?
Так вот, просто я утверждаю, если внимательно на это
посмотреть, я утверждаю, что то, что останется, это
будет многочлен В, только не В, а остаток от него по
очень интересному модулю, х в K-той, минус, значит,
какое у нас там вот, видите, было вот это, вот это было,
значит, минус х в K минус 1, минус х в K минус 2, там,
нет, наоборот, тут плюс, потому что тут был минус, минус
4х в степени K минус 3, а, но тут даже не K просто уже,
понятно, что тут х5, тут х4, тут 3, 2, вот, 4, плюс, дальше
2х минус 3, ну то есть, заметим, что фактически то, что мы
делали, это делили столбиком вот этот многочлен В на
вот этот многочлен, просто по модулю брали, понимаете,
да?
Вот именно, ну вот, два вывода, во-первых, как бы вот это
теперь превращается в О от К лог К лог Н, но просто
потому что, вот, обратите внимание, то есть, как бы,
ну, потому что вот это деление мы умеем делать за К лог
К, соответственно, да?
А во-вторых, вот ровно поэтому мне, я вот цеплялся там ровно
за этот многочлен, потому что я знал, что он, что возникает
именно он.
Поэтому вот и была задача, нельзя ли это увидеть в
терминах производящих функций.
Вот, то есть, вот у меня вот было вот такое решение,
можно в принципе его так мыслить, то почему-то жуткое
подозрение, что действительно его можно вывести, то есть,
как-то вот не такими олимпиадными лайфхаками.
Ну, ну, на вкус и цвет.
Ну, давайте, вот, давайте, так, давайте, так, ну, ну,
давайте заметим, что если х в катой степени мы заменим
на катый член, ну, все х в катой заменим на, все х
в катой заменим на фкатый, то что будет?
То у нас получится ноль, ну, просто потому что это
регуляторное соотношение.
Ну, есть такое, что, вот, так, давай, так, нет, это понятно,
нет, ну, это вот, ну, это да, ну, давай, так, производящую
функцию мы все еще вот такую рассматриваем, да, или какую-то
еще.
Сейчас я не очень просто осознаю, зачем нам нужна
производящая функция.
Вот, короче, вот у нас есть этот многочлен, вот, то
есть, если мы х в катой гнем заменим на фкатый, то мы
получим ноль.
Ну, давайте заметим, что если мы домножаем этот многочлен
на...
Сейчас, погоди, погоди, погоди, а вот в этом я уже не
уверен.
Ну, мы какую-то другую производящую функцию рассматриваем,
по-моему.
Нет, ну, просто рассматриваем, пока что мы не осматриваем
никакую производящую функцию, просто рассматриваем характеристический
многочлен.
Он насматривает функцию, которая любой многочлен
переходит в число вот тем способом, который он написал.
Чего?
Ну, просто мы многочлен х в степени n, переходим число
fmd.
fmd, да.
fmd.
И...
Это если, ну, это если мы найдем такое мистическое
х.
Нет, просто х в степени n это сингл просто.
Короче, рассматриваем формально степенную ряд, скажем.
Ну, по-моему, а это что такое?
Не тот формально степенную ряд.
Это тоже формально степенную ряд.
Нет?
Ну, не тот.
Не тот, нет.
А какой?
Короче, сейчас.
Нам нужен какой-то.
Он изначально равен х в n, дальше мы его хотим как-то
преобразовывать, чтобы остались только коэффициент, чтобы
не нулевый коэффициент остались только при первых kx.
И чтобы на каждом шагу, если просуммировать по всем
коэффициентам этот коэффициент на соответствующем f, у нас
получалось fnt.
Ну, то есть можно попробовать.
Вот у нас есть этот характеристический многочлен, который мы записывали.
Записывали.
Какой?
Вот этот или другой какой-то?
Характеристический, который мы в итоге использовали.
Так, ну хорошо, давайте вот, ладно, рассмотрим, даже
не будем ругаться характеристическим.
Вот это рассмотрим.
Да.
А в каком порядке мы в итоге будем?
А, ну нет, здесь придется, видимо, все-таки.
Minus ak-1 на xk-5.
Вот именно в таком, именно в такой его порядке.
Так, давайте.
И...
Вот.
Теперь.
Так.
В этом многочлене, если мы заменим xk-t на fk-t, вот просто
символ xk-t заменим на fk-t, то у нас получится 0.
Просто потому, как мы его строили.
Но, безусловно, чем нам поможет?
Заметим, что если мы хи от x домножим на любой другой
многочлен, и точно так же, и проведем такую же замену,
у нас все еще будет 0.
Ну просто потому, что у нас...
Так.
Ну это просто какая-то мистическая операция.
Вместо степени k подставим...
Да, да.
Вместо символа x в k-t подставим fk-t.
Там не сойдется.
Сойдется.
Все сойдется.
Да, я не знаю, а в более каких-то вот нехерномагических
терминах это можно выразить?
Потому что пока, как бы это, пока просто подставим
что-то там куда-то там, где-то там сойдется.
Нет, ну просто в этих терминах, когда все решение
имеет вид, давайте мы возьмем многочлен x в степени n
и поделим его по модулю на хи от x.
Да, и возьмем остаток по модулю хи от x.
И наконец мы получили все коэффициенты, которые мы хотели.
Да, но просто в этом как бы...
Да, но просто в нашем твитсе.
Нет, ну это надо где-то просто как-то вот...
Ну типа мы характеристически многочлен ставим, строим
таким же способом, что типа заменим fk-t на символ x в k-t.
Ну я не знаю, вот мы...
Я не знаю, я не понимаю, что такое заменить символ fk-t
символ x в k-t.
Нет, вот тут...
Нет.
Ну порисуй.
Я не знаю.
Мне пока эти образы вообще ничего не говорят.
Хотим найти fnt.
Давай.
Ага.
Ну давайте напишем...
В каждый момент времени хотим искать какую-то линейную комбинацию f.
Давайте мы напишем коэффициенты.
Изначально это куча нулей, единичка вот на позиции n.
То есть вот мы хотим найти вот такую линейную комбинацию f.
Хотим.
Дальше мы говорим, что вот эту единичку можно расписать по рекурренции.
Получится 0, 0 и так далее.
Там a0, a1, так далее.
ak-1.
И 0.
Здесь это nt-позиция.
Ну и так будем убивать вот эти коэффициенты.
Хорошо, теперь давайте напишем вот для этих последовательностей их произведущей функции.
Тогда вот эта операция соответствует вычитанию
хи от х на какой-то х в n-катой.
То есть по сути, чтобы вот эти коэффициенты все привести в начало...
Да короче, мы берем...
А, тогда без всяких произведящих функций.
Все, что мы делаем, берем х-венды, процент вот это.
Да, но произведящие функции нужно, чтобы объяснить, причем тут х-венды.
Да, а где они тут помогают?
Пока мы просто заявили, что пока вот то, что мы там делали,
на самом деле мы делаем просто n раз.
И дальше мы просто все, что дальше делаем, это возводим х-венную степень
по этому модулю просто быстрым возведением степени.
Все, что мы делаем. Нет?
Ну в смысле, то же самое можно получить отсюда, но типа это
быстрый способ получить с нуля.
Чероса? Нет, а произведящие функции тут при чем вообще?
Ну, потому что вот это преобразование, его удобно смотреть в виде произведящих функций.
Ну да, а где мы его посмотрели в виде произведящих функций?
Вот здесь. Ну, если мы напишем произведающие функции для этих последовательностей,
то это преобразование соответствует вот такому.
То есть как раз произведящие функции вот это вот не меняется по модуле х.
То есть как раз нам нужна произведящая функция исходная.
Но это не произведящая функция, это не произведающая функция, это просто многочлен получается.
Ну, это произведящая функция, в которой нули просто на конце бесконечные.
В некотором смысле это и многочлен.
Да, это не совсем та произведящая функция, но окей, ладно, спасибо.
Но можно и так мыслить. Да.
Да, на самом деле да, действительно.
Да, то есть основное решение действительно заключается в том, что по большому счету,
то есть откуда эти шифты берутся, то есть просто оказывается нам нужно найти
x, v происходящие, там, собственно, процент вот этого многочлена x от x.
И то есть если чуть-чуть присоединить с коэффициентами, то можно легко убедиться,
что да, что если многочлен вот x, v честно делить с остатком,
то каждое убиение там очередной там старшей степени это ровно то же самое,
что мы делаем в делении столбиком.
Видимо не этого многочлена.
Этого, этого. Именно этого.
Именно этого.
Вот, прям в точности этого.
Вот, правда, но единственное, к сожалению, это пока тоже на уровне,
что заметим, что то, что мы делали, это то же самое мы делаем в делении многочленов.
Вот, конечно, в идеале бы вот, неплохо было бы вот просто в терминах вот какой-нибудь вот этой
в зависимости функции бы понять, что там что же, ну вот что-то еще на эту тему.
Ну там я не, то есть я не знаю, откуда там, то есть там просто выражается это деление
немного сильно, а не просто вот заметим, что это вот то же самое и давайте с этим шаманить.
То есть да, дальше после этого да, можно вот это было не расписывать, то есть это мы просто
что-то заметили, а так на самом деле, по большому счету задача найдите x, v в процент
вот этот многочлен, да, мы это, ну вот это мы делаем за вот k, l, k на log n,
потому что быстрое возведение в степень ура, да.
Ну, ну такое, да, не, действительно, может там как-то, ну вот, не, просто интересно,
да, жаль, да, можно найти действительно x, да, вот это вот конечно можно, но, так,
так, ладно, там, нам перерыв в этом не, так, так, ну ладно, да, пожалуй, перерыв
пришло время сделать. Видимо, многомерное ффт, наверное, нет смысла начинать.
Можно его вообще не начинать? Нельзя. А в смысле? Слушай, вот поедешь ты когда-нибудь
на полуфинал, а тебе там задачи на ффт дадут, что ты делать будешь?
Да, я ее не придумаю. Вот. Дальше, да, дальше вот не придумаешь,
у тебя будет команда, которая придумает прежде. А Геомана тоже напишет.
Да, сразу не участвовал ВСПС, но, ну. Ну, да. О, господи. А вот зря. Ну, и что нет?
Ну, знаешь, это, это выучишь напишешь, а потом выяснишь, что эта команда это не напишет.
Так она напишет три других задачи, блин. Ну и что? За то время, что я буду писать там многомерное ффт.
Ой, господи. Нет. Ну, во-первых, у тебя есть, это, тим-ноутбук. Во-вторых, там, как бы,
ничего от, многомерного ффт нет, ничего, в принципе, отличие от обычного ффт, на самом деле.
Что? В какой, погодите, какой туалет? Есть, тим-ноутбук, шпарал те легальный, не надо.
Ага. Ну, да. Сначала по строчкам, потом по столбцам еще надо сделать. А тогда.
И все. Ладно. Давайте все так. Ладно, сегодня придется рассмотреть пару задач попроще.
А, вот, например, о. Так. Ну да, хотя. Так. Ладно, господа. Задачка.
Задачка. Данного члена А от Н, то есть А от Х. Так, ребят, задачка. Так, смотрите, задачка.
И дано число К. Я очень хочу найти А в степени К, ну, например, процент Х в степени Н.
Знаете, хочется чуть-чуть подумать, за какую асимпточку можно это сделать.
Ага. Чего? Асимпточка какая получится? Константа?
Модуль А лог А лог Н. Модуль А лог К. Чего? Модуль А лог А на лог К. Ну, Н лог Н лог К, да.
Ну да, потому что заметим такое тупое решение. Заметим, что никто нам не мешает просто честно делать умножение по моделю к степени Н за Н лог Н.
Таких умножений нам надо О от лог К, поэтому Н лог Н лог К ура.
А теперь все-таки давайте попробуем еще решить одну задачу, которая не понятно как решать, а нельзя ли это сделать быстрее.
Потому что великий магистр почему-то заявляет, что это решается за Н лог Н.
За Н лог Н? Вау. За Н лог К Н? А каким образом?
Ну, посчитать его в Т. Где? У кого? Так. Возвести значение в катую степень. Так. Посчитать обратное в Т.
А возвести значение в катую степень можно за единицу.
Сейчас, погоди, а как ты... Нет, ну тут мы как всегда верим, что у нас какой-нибудь адекватный модуль все в порядке, но...
Нет, а так вот действительно интересно, если вот...
Нет, то есть пока, кстати, заметьте, пока мы делали вот этот алгоритм, обратите внимание, то есть мы как бы говорили, что мы там умеем перемножать, если мы там живем в каком-то адекватном поле, то все в порядке.
А теперь как бы это сделать все-таки за Н лог Н?
Ну-ка какие технологии могут нам позволить действительно убить этот лог К?
Да, на всякий случай, на парах не кушают. Так что убирай, давайте.
Ну, я могу пройтись и собрать еду со всех. А то знаете, я как раз тоже проголодался, так что знаете.
Так что давайте все-таки не будем. То есть я скажу, я сам люблю украсаны и чипсы и все такое, но не надо.
Так вот, ну и что делать?
Ведь действительно, вот просто действительно есть подозрение, что кажется, что можно где-то побыстрее это делать, да?
Но почему побыстрее? Потому что давайте представим себе, что N равно, допустим, 2, да?
То есть получается, мы хотим возвести А0 плюс А1х в степень К и сказать, что это процент 2.
Можем ли мы это сделать за, быстрая нота, за от единицы?
Вот то-то, ну ладно. Ладно, так, залог К можем на самом деле.
Потому что получится А0 в степени К плюс, сколько там получается? К на А0 на А0 в степени К минус 1 на А1.
А нельзя К взять по модулю Ф2?
К взять по модулю и чего? А чем поможет?
А чем поможет?
А, так нам же не, ладно, я тут описал СХ2.
Вот так, конечно, да. Правда, единственная проблема, что А0 вам, видимо, в какую-то степень придется повозводить.
Ну да, почему-то есть подозрение, что да.
Ну плюс лог К в нашем правиле.
Чего?
Да, ну хорошо, это работает за лог К, но с другой стороны, заметим, что n лог n в случае n равно 2, это тоже лот единиц.
Так что, формально говоря, не спаслись.
Ну вообще давайте вот, а если вот процент, ну давайте вот посмотрим, а процентик х кубик что будет?
А как процент n?
Чего?
Ну вот, ну процентик х кубик тут как-то, по-моему, еще повеселее будет.
Потому что будет вот так, ну вот, потому что будет вот такое, что там еще будет?
Кажется, будет еще что-то типа С из К подва, например, А0 в степени К минус 1 А1 А2.
Будет такое?
А, еще надо вот там домножить.
Ну в общем-то, что-то какими-то такими методами, такими росписями, кажется, уже будут проблемы.
Поэтому вот прям хочется попытать действительно счастья другой технологии.
Понимаете, какой технологии мы вообще тут любим пользоваться?
А вот допустим, что у нас А равно А0 плюс А1 на х в степени n пополам.
Вот мне прям жутко интересно, а такое сейчас не прокатит?
Да? Точно?
Вот.
Значит, давайте смотреть.
Ну давайте смотреть. Так, мы это возьмем.
Да, мы возьмем вот это в степень К.
Заметим, что, да, если у нас хn пополам возводится хотя бы во вторую степень, то оно вылетает. Правда?
Нет, по модулю х в степени n уже.
Возвращаем все к исходному.
Вот допустим, мы А в степени К хотим сказать процент х в степени n.
Раскладываем А как два многочлена. То есть А в степени К это вот А0 плюс А1х.
Вот это в степени К.
Тогда действительно давайте смотреть.
АК процент х в степени n это равно А0 плюс А1 х в степени n пополам в степени К.
Значит, это равно.
Ну давайте так честно уже распишем.
Это равно сумма по всем g от 0 до K.
С из К плюс g.
А0 в степени g.
А1 в степени g.
Нет, давайте лучше не так напишем.
А0 в степень К минус g.
А1 в степени g и х в степени n пополам умножить на g.
Есть такое?
Теперь заметим, что по модулю х в степени n это что такое?
Это по большому счету только первые два слагаемых.
Видно, да?
Н пополам берем с поправлением вверх?
Н пополам мы берем.
Ну н мы как всегда делаем в степень двойки и не паримся.
Ну когда мы по модулю не берем, не факт, что нам...
Нормально, нормально.
Нет, вы уже обсуждали, что чтобы взять по модулю х в степени 57 надо взять по модулю х в степени 64 и потом обрубить 7 коэффициентов.
Что, нет?
Ну да.
Итак, по модулю х в степени n замечаем, что при g больше либо равном двух что-то исчезает.
И все что у нас остается это А0 в степени К плюс А1 в степени К минус 1 на х в степени n пополам.
Так.
А у нас А0 исчезнет?
Откуда у нас ушла А0 из второго модула?
Ой.
Куда же туда и К?
Туда же туда и К.
Там еще К должен быть в норме.
А, ой, К еще.
Ну ладно, допустим.
Так, то есть это равно А0, значит А0 умножить на А0 в степени К минус 1 плюс К на А1 в степени К минус 1.
Чего?
Май, ну шо вы придираетесь?
Ну шо?
Ой, ну правильно, правильно.
Ой, Господи.
Да, нет, здесь вот так вот, вот так на самом деле сразу надо писать, поэтому тут как раз все правильно.
А0 плюс К А1 х в степени n пополам.
Все.
Ну поздравляю, мы выиграли.
Или нет?
Так, ну ладно, на самом деле, к сожалению, да, мы еще, да, конечно, очень хочется сказать, что теперь достаточно возвести А0 в степень К минус 1 и возрадоваться, да?
Но что-то у меня есть подозрение, что это не так.
Надо, сейчас, надо найти А0 и А1.
Чего?
Надо еще найти А0 и А1.
Нет, А0 и А1 нам даны, потому что нам дан А.
То есть, как бы, вот эту штоку мы найдем без труда.
А в чем это пройдет?
Проблема в том, что нам нужно найти А0 в степени К минус 1 процент х в степени n.
Ну, по крайней мере, вот.
Вот в чем, собственно, проблема.
Ну вот, и поэтому нот, и вот нот, в этом-то вот, собственно, и затык.
Потому что если бы свели бы задачу к возведению степень по модулю х в степени n пополам, то да, это победа n лога n радость.
А так n лог квадрат, да?
А так?
Ну так, ну не сказал бы, что пока не n лог квадратовый.
Ну раз каждый раз уменьшается в два раза, да?
Сейчас.
Нет, не уменьшается.
Ну как сказать, если модуль не уменьшается в два раза, то это по барабану.
Потому что малейшее возведение в степень, и у нас уже многочлен размера n.
И как бы, и ничего нам не помогает.
Так, а каким образом, а каким образом zn лог квадрат это будет, кстати, хотя бы zn лог квадрат вообще есть тут побег?
У нас всего будет лог шагов, потому что степень многочленов каждый раз уменьшается в два раза.
Так у нас будет, типа, какие-то операции смещены.
Ну да, будет n лог n и n лог шагов.
Сейчас.
Но проблема в том, что я боюсь, когда вы будете тут передавать рекурсивно, вы не сможете это передавать, как x в степени n пополам.
Мы не будем передавать x в степени n.
Мы подождем, пока 0 станет меньше, чем n.
Так, погодите, если вы передадите x в степени n, то вы передадите а0, а0, как многочлен из n коэффициентов.
По-моему, это просто зацикл.
У нас n константа вообще на весь вход, а мы передаем только многочлен.
Степень многочлена уменьшается в два раза.
Да, но когда мы тут делим пополам, мы пользуемся тем, что размер этого многочлена n.
Так что да, не все так, к сожалению, вот.
То есть не все так, к сожалению, просто в датском королевстве.
А тут тем более.
Ну мы заметили, вот отсюда сюда.
Мы просто убили все мономы, в которых x в степени как минимум n.
А это все мономы, в которых g равно 2, 3, 4, 5.
Это умножить, конечно.
Но не минус же.
Так, ну вот, вот прозикает вопрос.
Действительно, можно ли тут было бы сделать что-нибудь еще?
То есть не знаю, просто очень, конечно, хочется сказать, что да.
Ну потому что действительно, помните, когда мы делили,
действительно у нас там, когда мы там обращали многочлен,
у нас было как-то вообще, как-то мы ухитрялись там свести кровозведение.
Здесь мы тоже можем возвести, на самом деле, по модулю x в степени n пополам.
И в общем-то вот это слагаемое, кстати, заметим, что для того,
чтобы вычислить вот это слагаемое, нам вот a0 в степени k-1 реально достаточно знать
только по модулю x в степени n пополам, согласны?
Ну просто потому что как бы большие коэффициенты приведут к ауту относительно x в степени n.
Но только единственная проблема, что у нас есть вот эта гадость.
И вот что с этой гадостью делать, понятно, не очень.
Вот что с этой гадостью можно сделать?
У a размера n, размер n.
Нам очень хотелось бы, чтобы, ну вот, то есть наша задача, да,
попытаться свести вот это вот желательно к одному, каким-то хотя бы
нескольким возведением степень по модулю n пополам.
Остается только выяснить, как же это сделать.
Потому что при всех остальных тут будет x в степени n, x в степени n, там полтора n, там два n и так далее.
Да, да, да, да, именно, именно.
Так вот, вот это и оно, что прям вот, называется, тут в этом смысле балдежно.
Вопрос только как бы, как в этом смысле это a в степени k как-нибудь убить так, чтобы вот получилось как-то хорошо.
Вот этого непонятно.
Просто действительно вот как бы голубая мечта.
То есть допустим мы вот a0 в степени k-1, допустим, возвели действительно только по модулю x в степени n пополам.
То есть этого нам, к сожалению, не хватает, потому что, к сожалению, здесь есть коэффициенты,
потому что коэффициенты здесь от степени n пополам до n-1 могут повлиять на ответ.
Но скажи так, если мы посчитали ко-минус первую степень, то k мы посчитаем просто одним умножением.
Да, но это будет все еще по одному и тому же модулю пополам.
Вот в чем, как бы тут есть такой маленький зоковыка.
Ну вот да, вот я не знаю, может быть с этими мелкими коэффициентами можно действительно как-то аккуратненько справиться.
Ну да.
Что в переходе?
В каком переходе, где в переходе?
Так, ну давайте тоже пока постираем, пока думаем.
Вот нам, нет, ну скажи так, если в самом конце нам одно число потребуется возводить в степень k, то как бы будет хорошо.
Будет хорошо.
То есть будет n лог n плюс лог k, а это само по себе не страшно.
Нет, другой вопрос, что наверное да, может возникнуть ощущение, что возможно мы тут несколько чисел одновременно умеем в какой-то степени возводить.
Да, прям действительно, так прям действительно интересно.
Ну ладно, можно конечно, как всегда ладно, во всех случаях можно как бы у автора спросить, что он имел в виду, как всегда.
Так, ну ладно, так, ну ладно.
Ну ладно.
Ой, господи, ли еще тут.
Ладно, вот хочется прям, как-то ребят, знаете, картинка называется, ребят, я сейчас чисто попробую, хорошо?
А давайте я скажу, что a t равно a 0 t плюс t на a 1 t.
Ну деление как в фуриатине, да?
Ну вообще да.
Ну как всегда, знаете, как кто-то говорит, вот я не люблю так это, но кто-то говорит, как мы решаем задачи?
Мы берем задачу и подставляем туда все шаблоны, которые у нас в голове есть.
Если ни один шаблон не прошел, значит мы не умеем решать эту задачу.
Вот я не знаю, мне как бы, честно говоря, я не знаю, моя душа против таких подходов, но, но судя по всему,
видимо вплоть до практически любых успехов, видимо, олимпиадном программировании таким методом достичь можно.
Хотя нет, нет, есть совсем в идеале просто забатовать все задачи, применять все баяны, но тоже сложно.
Все-таки на реале олимпиаде что-то придумать на основе старых баянов вам все-таки придется.
Ладно, нет, просто я вот, так, вот интересно, просто если я вот такое подставлю, то что будет?
Потому что действительно a от t в степени k будет равно, ну, так, это будет равно, как всегда, a0 от t в квадрате плюс t на a1 от t квадрат.
Значит, так, все это равно в степени k, да?
Так.
Так, ну к чему это нас приводит?
Так, ну, так, на этот раз давайте напишем по биному csk по g, a0 в степени g от t квадрат на a1 от gt в степени какой?
a1g от t квадрате и еще домножить на t в степени g.
Так, ну ладно, по модулю t в степени n тут, конечно, так просто не выбросишься.
Ну, допустим, ладно, можно написать, что это теперь сравнимо по модулю t в степени n, да, не по модулю k, то есть g можно перебирать не до нуля, а условно до n.
Так.
Хочется сказать t от t квадрата на t, а я за ней плачу.
Ну вот, здесь tk минус g, вот так вот.
Чего хочется?
Нет, так там вот вроде нот.
Ну картинка называется, так-то вроде адекватно, да, но вот.
Нет, ну почему?
Нет, ну почему?
Потому что если вы подставляете здесь, если вы ищете многочлен, где вместо t подставляете t квадрат, то как бы заметим, что, то есть как бы, ну вот.
Ну то есть когда вы тут возводите вот эту степень, да, то как бы вам действительно нужно возводить только многочлен размера n пополам по модулю x в степени n пополам, правда?
Ну потому что что значит вы подставляете t квадрат?
Значит у всех x вы показаете степень и подставляете увеличивается в два раза, правда?
Так что следовательно, так что, ну вот.
Так что следовательно, ну то есть как минимум можно сделать два рекурсивных вызова, там на 0 и 1 можно сделать, да?
А, единственная только оговорка, что тут k минус g, допустим, да?
Так.
А, хотя нет, нельзя, потому что, а, тут степени разные, ой-ой-ой-ой.
Так, ладно.
Ой, Господи, еще одно простое упражнение, которое мы, по крайней мере, в лице меня не умеем решать.
Ну окей, ничего, научимся, куда мы идем.
Откуда мы идем?
А беру я задачу, я вот просто открыл блок, собственно, Александра Кулькова.
У него есть конспектик по fft, и у него идут тут по списку упражнений, которые он приводит.
Вот большинство из них, вот мы пока из них за заявленную осимпточку не решили.
Так, ну смотрите, какие тут, вот есть у него степенной ряд, но степенной ряд, по-моему, я просто сейчас, я так и не понял, что имелось, что вообще хочется найти.
Также есть еще упражнение общее, такое интересное, смотрите, нам, видимо, пригодится.
Общая схема кулитьюки.
То есть пусть n равно pq, придумайте алгоритм, сводящий преобразование фурьера размера n к p преобразованием фурьера размера q за o от n дополнительных операций.
Ну, могу повторить заклинание.
Итак, смотрите, имейте в виду, n равно pq.
Вот, надо свести fft размера n к p, соответственно, преобразованием фурье размера q.
Ань, ну я думаю любые.
Ну давайте так, преобразование фурье в данном случае, это типа найдем значение многочленов в корнях там n степени из единиц.
Ровно n мы не подгоняем, n под степень двойки.
Так, что мы говорим?
Вот, допустим, что у нас вот есть вот такие коэффициенты.
Так, ну и чего, как воспользоваться тем, что n равно pq?
Вот, по сравнению с q, как видимо q рекурсивными, то есть нам хочется сделать перекурсивных запусков размера q и сделать n дополнительных действий.
Или даже не рекурсивные.
Пq просто, ну n равно pq, все.
Я подозреваю, что pq не обязательно просты.
Так, а, то есть хотите сказать, что at равно вот этому что ли?
А, ну действительно, давайте, как нас Фурьятина учила, да?
A0 от t, плюс t от t в степени q, потом t умножить на a1 от t в степени q, плюс и так далее, плюс t в степени p-1, на a1 от t в степени q, да, ура.
А, да, да, да, a p-1, конечно, да.
Так, отлично, да?
Значит, теперь, значит, теперь говорим.
Так, то есть, да, вот, то есть вот такая штука, да, и мы хотим как бы найти значение всего вот этого вот, да, в точках там 1, там w, значит w там, допустим, pqt, wpq в квадрате и так далее, wpqt в степени q.
Вот хотелось бы.
А нам же нужно в каждом из этих многочленов искать значение не в q-точках, а в n-точках.
В p-точках.
Да, то есть, да.
В n-точках.
В p-точках, потому что заметим, что если я возведу все вот эти n-точек, pq равно n, потому что в кутую степень, да, то есть я вот возвяжу там, в кутую степень, то я получу в точности 1, wp, wp в квадрате и так далее, в какой-то момент я получу там wp в степени p-1, 1, там wp, p, ну и так далее, в общем, короче, в общем, таких зациклов я получу q раз.
Да, ну давайте я просто официально напишу, что wn равно e в степени там 2ep поделить на n.
Да, тогда это точно будет верно.
И тогда будет идея такая, что а0 уж в этих точках, вот эти все многочлены, то есть мы нашли, то есть p вызову на фурье размера q.
Так, все, что нам теперь остается.
Так, ну что нам теперь остается?
Так, теперь нам, правда, надо сделать n дополнительных действий.
Пока если делать в тупую, там совсем в тупую, то это получится не n дополнительных действий, а получается n умножить на, увидимо, p.
Как бы это сделать не за n?
Ну, чего? За n на p так, смотрим.
Ну, во-первых, ну после рекурсивных запусков мы прям часто перебрали все n корней вот этих, и каждый из них аккуратненько сюда подставили.
Ну, там в h мы нашли значение, и соответственно часто тут повозводили вот эту t в степени и возрадовались.
Вот.
Так, чего мы хотим?
Типа, что значение с периодом q как-нибудь хорошо между собой?
Ну, как по кухте у нас с периодом n пополам значение хорошо соотносится между друг другом.
Ну, вот мы нет, мы уже воспользуемся тем, что они с периодом q хорошо соотносятся, поэтому...
А мы считаем, типа, 20 значений зараж, если у нас?
Нет, ну мы и так уже сказали, что мы уже свели... Ладно, у нас тут нот.
Мы считаем каждое значение отдельно, а там мы считали прямо два зараза.
Да, кстати, тут не совсем круто.
Вот так скорее.
И каждая h к этому наращения размера p, если что.
Ну вот, теперь возникает вопрос.
Ну, в принципе, заметим следующее, что...
То есть, допустим, что t... Заметим следующее, что когда мы возводим w в степень q, у нас получается всего p различных значений, да?
Там получается какая-то матрица из них.
Ну вот.
И их... Ну вот.
Нет, и при каждом таком у нас... Ну, на самом деле, странно, потому что...
Да, потому что, знаете, вот именно тут формулировка, да, сведите...
Да, за o от n дополнительных действий сведите к p преобразованием фурье размера q.
Ну ладно, мы свели q преобразованием размера p.
Просто проблема в том, что как бы я умею сейчас лёту сводить только к тому, чтобы на оставшемся сделать ещё там какие-то фурьешки.
Ну, кажется, в явном виде, ну, прям как заявлением невозможно сделать.
Потому что, ну, если p равно 1, то мы за o от n дополнительных действий свели q n фурьешек размера 1.
То есть мы, типа, посчитали фурьешку за o от n.
Так.
Ну, посчитай. Так.
Либо мы прорывы сделали в науке.
Да.
Сейчас, то есть для p равно 2...
А, да.
Ну, тут странно, да.
Так, ну давайте так, мы в эту формулу верим для начала.
А правда ли, что бы больше удобного было?
А какая разница?
Ну, что вы почините?
Добро и добро. Нет, ну как бы...
Нет, ну починить что?
Всё, это работает.
Один на фигу?
Потому что мы берём, как бы, ну понятно, откуда берётся...
Аж это как бы все коэффициенты, то есть понятно, что...
Аж от t.
Это понятно, это что такое?
Это ажt плюс ажпт.
Получается на t плюс...
Аж плюс 2пт на t в квадрате плюс и так далее.
А нет.
Только не p, а q.
Вот.
Поэтому с q многочленов, каждый вот по своему остатку по q работает в индексах.
Получается степень, то есть размер каждого на решение на p.
Так, ну картинка называется свели...
Да, можно, конечно, сказать даст.
Да, прям вот интересно, да? Интересно, да?
Нет, ну почему, кстати, подойдите.
Как? То есть прям здесь и...
Так, прям если n равно 1 умножить на n, где-то какие-то проблемы возникали?
Да, мы прияздовались.
Мы действительно умеем доделывать это.
Да.
И так, ну, вот, вот, вот.
Вот, вот.
Ну, вот, вот, вот.
Вот.
И вот.
То есть мы действительно умеем доделывать это.
За золото.
Нет, ну, фурье за...
Ну, как бы...
Так.
Тут можно сделать куфурье размера p и еще p-фурье размера.
Вот, да.
И это называется, да, и это похоже на многомерное преобразование фурье, на самом деле.
Кстати.
Да.
Да, ну действительно, да.
Да, давайте попробуем.
Если мы вот эти многочлены каким-то образом вычислили,
то тогда получается, что вы там от, допустим, wn в степени,
там wn в степени какой-нибудь там p умножить на...
Ладно.
Давайте q умножить на g1 плюс, допустим, g2 какой-нибудь.
Так.
Это что такое у нас равно?
Так.
Так.
Это у нас равно, прибираемся по g равно от 0 до p-1.
И это равно wn в степени там, соответственно, qg1 плюс g2.
И все это умножить на g, видимо, как-то в процентике.
И умножить на ajt от wn в степени там...
qg1 плюс g2.
Называется так, вот так вот.
Умножить на g и умножить на q еще.
Так, бра-ра.
Так, что-то не то.
Нет, что-то не то.
И, скорее всего, тут надо писать q, тут надо писать p.
И какая-то еще здесь.
Вот так вот подставляем.
Во.
Да, потому что здесь получается хорошо, потому что придомножение q, p, значит это вот ликвидируется.
То есть получается я здесь могу написать g2 там на q и еще на g.
Так, ну замечательно, да.
То есть это получается следующее, что если зафиксировать...
Да, по камере мы видим, что если зафиксировать g2...
То есть обратите внимание, да.
Если зафиксировать g2, то вот эти все значения, это получается там какие-то...
Получаются p значений там в каких-то точках, вот корня в этой степени из единицы.
Ну вот, ну и в принципе получается, что мы из них делаем многочлен.
Просто туда что-то подставляем.
В роли чего-то, вот это.
Так, о, что уже, да.
