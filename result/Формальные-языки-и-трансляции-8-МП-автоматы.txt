Итак, всем доброго дня. Продолжаем. Мучения, связанные с грамматикой, а может и удовольствие.
В прошлый раз мы с вами построили такую конструкцию, которая якобы нам должна позволить из грамматики в нормальной форме хомского превратить грамматику в нормальную форму грейбах.
Напоминаю, первая идея, которая у нас была, это просто надо грамотно раскрыть первую букву и ее достать.
То есть мы хотим ввести новые нетерминалы вида A левое деление B и будем доказывать следующее соотношение.
A левое деление B будет выводить не терминал W тогда и только тогда, когда, собственно, это в нашей грамматике G, давайте грейбах назовем, тогда и только тогда, когда у нас из грамматики в нормальной форме хомского будет выводиться вот такое соотношение.
Это у нас грамматика в нормальной форме хомского.
Давайте поймем. Мы так это соотношение писали, кто помнит? Или в обратную сторону?
Но давайте теперь аккуратненько проведем доказательства. Мы с вами говорили, что доказательства справа налево мы по факту с вами уже показали.
Идеологически. Но давайте еще раз пройдемся.
Значит, смотрите, индукция по длине вывода. Опять наше любимое слово.
Так, давайте базу проверим.
Так, я сегодня букву B не хочу писать.
База индукции. Значит, у нас из A выводится B, W. За сколько шагов в базовом случае?
А еще, если подумать...
Это... Нет.
Ноль.
Что? У нас может быть такое, что из не терминала A мы выводим не терминал B и слово W за ноль шагов?
Ну да, из этого сразу будет следовать. Если у нас такое получается, то A равно B, а W пустое слово.
Ну а тогда, что нам позволяет вывести из A без B?
Это тогда что у нас? A для выделения A, а из него мы что можем вывести по определению грамматики?
Новый.
Новый.
Пустое слово.
Собственно, давайте обозначать эти правила. Это правило вида 3, это правило вида 2, это правило вида этим.
По правилу 3.
А теперь переход.
Так, A левое деление B выводит B W за большее число шагов.
Тогда что мы можем сказать с учетом того, что мы уже выводили?
А потому что у нас, если мы выводим за ноль шагов, то у нас левая часть совпадает просто с правой.
А это одна большая буква, B это одна большая буква. Слово это...
Ну потому что у нас B равняется A, мы просто вместо B подставили A.
Радиологично или нет?
Ну да.
Ну по факту...
Вот. Да, да, да, да.
Где?
Ну да, ну мы индуктивно...
А выводит B W за ноль шагов, значит, A совпадает с B, это один символ.
Значит, новая вершина A без B, это на самом деле вершина A без A.
Хорошо, а почему А выводит А?
Да, мы выбрали такое правило в грамматике.
Переход. Пусть у нас A выводил B W за к шагов.
Тогда давайте я скажу следующее.
Вспоминаем рассуждение из предыдущей лекции.
А как мы эту картинку построили? Напоминаю еще раз.
Значит, у нас, если мы из A выводим B W, то существует такой момент, когда мы получили этот не терминал B, фиксируем этот момент.
Значит, он появлялся из какого-то не терминала C за один шаг.
Почему правило C выводит B D у нас? Кто понимает?
Почему правило выглядит именно так?
Потому что грамматика, которая у нас была, была в нормальной форме хомска.
Потом мы делаем следующее. Проматываем это все ниже и пытаемся понять, как вытащить первую букву.
Предположим, что у нас первая буква в этом слове была равна E.
А как мы можем выводить букву из грамматики в нормальной форме хомского?
Собственно, из какого-то не терминала E большое.
Значит, он должен был появиться на пути вывода из D в E.
Значит, у нас есть не терминал E.
И тогда смотрите, что у нас получается. У нас получается вот такое дерево вывода.
Значит, предположим, что это выводилось за L шагов.
Значит, давайте посчитаем, за какое количество шагов тогда выводилось вот это вот соотношение.
А, мы фиксируем первый момент времени, когда у нас вывелся не терминал B.
А как он мог появиться? Откуда?
Ну, обозначим ВС.
Уводились, потому что грамматика в нормальной форме хомского.
Так, давайте посчитаем. Чтобы это все вывести, нам нужно K шагов.
Здесь L, здесь 1, здесь 1.
Значит, здесь количество шагов равняется K минус L минус 2.
Вроде бы считайте.
И тогда у нас получается следующее.
Давайте напишу рассуждение о дереве.
Мы получаем следующее, что из А.
Из А у нас выводится CZ за L шагов.
А дальше что у нас получается с вами?
Из D выводится EX за K минус L минус 2 шагов.
Тогда мы можем из этого факта, по предположению индукции, написать следующее, что
А левое деление C у нас выводит Z.
А D левое деление E выводит X.
Так ведь?
Ну, потому что количество шагов у нас меньше, чем то, которое у нас было.
А теперь смотрите, что у нас получается.
У нас есть правило C выводит BD.
У нас есть правило E выводит Z.
Что у нас получается?
У нас есть правило C выводит BD.
У нас есть правило E выводит Epsilon.
Тогда у нас из A без B за один шаг выводим E, D без E, A без C.
И из того, что мы вывели в предположение индукции, мы получаем, что отсюда выводится E, отсюда выводится X, а отсюда выводится Z.
Собственно, это наше слово W.
Переход индукции доказан.
Ну, собственно, мы просто формально взяли и написали то, что мы в прошлый раз сделали для того, чтобы написать это правило в грамматике.
Так, все здесь чисто.
Где?
Так, A в УСБВ за два перехода.
Ну, значит, здесь у нас один переход, здесь один переход, значит, здесь ноль переходов.
Так ведь? L тогда равно нулю.
Автоматом.
Да, L равно нулю.
Получается, опять же, A равно C.
А такое правило у нас есть по базе индукции.
Да, ну и здесь получается.
Из D выводится E и X.
Просто это тоже выводится со ноль шагов, поэтому D равно E.
И, собственно, тут тоже никаких проблем нет.
Я ответил на вопрос?
Хорошо.
То есть в одну сторону мы с вами предположение индукции доказали.
А теперь в другую сторону.
Так, переходим доказать в другую сторону.
Ну, собственно, тут это...
Угадайте, как мы его будем делать.
Ваши мысли, господа.
С чего мы начали доказать в предыдущую сторону?
С какого слова?
Индукция.
Ну, и здесь тоже будем делать индукцию.
Индукция по длине вывода.
Значит, база.
А без А.
Ой, давайте сейчас это.
Я погорячился.
А, левое деление B выводит слово W.
За сколько шагов мы можем минимально здесь вывестись?
1, 5, 10, 20, ноль.
Ну, и здесь тоже будем делать индукцию по длине вывода.
1, 5, 10, 20, ноль.
У нас слева написано не терминал.
Нам надо его как-то в слово превратить.
Все то, что у нас множество не терминалов и множество терминалов не пересекается,
наверное, за ноль шагов мы это не сможем.
За один.
Хорошо.
А это значит, что у нас есть правило A без B выводит слово W.
Так, смотрим на доску.
И что мы получаем?
Какое правило нам подходит?
Третьего типа нам подходит правило.
А равно B, W равняется Эпсилон.
И в итоге что мы получаем?
А выводится А Эпсилон.
Которые по факту являются B W.
Так, вас доказали?
Чисто, да?
Хорошо.
Переход.
Переходим на другую доску.
Так.
Ну, поехали.
Значит, первое.
Значит, у нас A без левого деления W выводит слово W за какое-то количество шагов.
Тогда мы можем посмотреть первый шаг, в котором мы это все могли вывести.
За один шаг мы можем раскрыть это все только по правилу, который у нас есть.
По некоторому правилу.
Но из этого мы можем раскрыть все только по правилу, который у нас есть.
По некоторому правилу.
Но из этого правила мы с вами понимаем сразу автоматом, что у нас C выводит BD, а E выводит E.
И тогда за какое-то меньшее число шагов мы можем сказать, что D без E выводит слово…
Ну, давайте придумайте букву алфавита.
Мягкий знак.
Так, твердый знак.
Хорошо, пусть будет мягкий знак.
А?
Ладно, пусть будет твердый знак.
Хорошо.
А без C выводит…
Z.
Нет, Z это не очень хорошо, греческий букву не очень хорошо использовать, потому что они полагают, что у нас есть там терминал и не терминал одновременно.
Да.
И?
Давайте U.
Ладно, давайте U, ладно.
Хорошо.
А U?
Давайте тогда это смотреть.
По предположению индукции, из этих фактов следует, что…
Так.
D выводит твердый знак E.
E.
А C выводит, получается, E.
C.
Вот так, да?
Ну, конечно, E твердый знак.
Ну, вы же сами понимаете, кто лектор тут.
Так.
Нет, это слова.
Слова.
Да.
Это слова, да.
Ну что, давайте выводить тогда.
Давайте из A поймем, что мы можем вывести.
В нашей грамматике.
Значит, мы можем вывести с вами C и.
Да?
Ну, давайте я тут еще напишу, что мы вывели.
Мы выводим слово E…
Чего?
Твердый знак И, да?
То есть нам надо получить с правой части B вот этого слова, да?
Нормально.
Юморная лекция, это позитивно.
Так, C.
Значит, из C выводим BD.
BD и.
А из D мы вводим E твердый знак.
E.
Твердый знак И.
Ну и потом E раскрываем в E маленькую.
E.
Твердый знак И.
Все, вроде вывели вот это слово.
Вот это слово у нас совпадает с вот этим.
Отлично.
Доказали переход.
Угу.
Так, вот эту лему мы с вами доказали.
Да?
Хорошо.
Так, что C и выводит что?
А потому что у нас, когда мы расписали один раз так правила, у нас такое правило было первым,
оно автоматически предполагало при появлении, что у нас из C выводится BD, а из E выводится E.
Ага.
Так.
А вариант A говорит, что мы из стартования терминала, то есть это не из новой композиции таких.
Так, хорошо.
Я в конце прошлой лекции задал упражнение.
Кто-нибудь его решил?
Хорошо, тогда разберем чуть позже.
А?
Да.
Где?
А, это не терминал.
Да, хорошо, давайте уточним, что для всех не терминалов вида A, мы добавляем вот такое правило.
Хорошо, спасибо за замечание.
Сейчас мы просто с ним бодаться будем.
Собственно, коллеги, мы с вами длину доказали.
Теперь давайте ей воспользуемся.
Есть тут тряпка меньшей мокроты.
О, есть сухая тряпка, офигеть.
Так.
Итак, предположим, что мы теперь из S.
Давайте начнем следующее.
Пусть мы в грамматике ЖЖ, которая в нормальной форме хомского, вывели слово W.
Этому переходим к доказательству факта.
Ну а это эквивалентно тому, что у нас слово лежит в языке, задаваемой грамматикой в нормальной форме хомского.
Да?
Тогда давайте подумаем.
Что мы можем сказать про слово W?
Тут надо рассмотреть два варианта.
Каких?
Какой вариант проще всего рассмотреть?
Да, да, да.
Какой случай проще всего разобрать?
Пустое слово.
Да?
Если у нас пустое слово, то мы можем сказать, что это в нормальной форме хомого.
То есть, если у нас пустое слово, то мы можем сказать, что это в нормальной форме хомого.
Да?
Если у нас пустое слово, то тогда что мы понимаем?
Мы понимаем, что S выводит Эпсилон.
Есть правила в нормальной форме хомского.
Ну и давайте оставим это же правило в нормальной форме грейбах.
Нам никто не мешает это сделать.
Да?
Ну и получается, что туда же можно в обе стороны сделать такое соотношение.
Потому что если у нас слово есть пустое и там, и там,
то давайте сразу добавлять правила вида S, вводит Эпсилон.
Мы доказываем, что язык, задаваемый грамматикой в нормальной форме хомского,
совпадает с языком, задаваемый грамматикой в нормальной форме грейбах.
Вот.
Значит, язык, задаваемый грамматикой в нормальной форме хомского.
Получается, если мы из грамматики нормальной формы хомского,
из слова S выводим слово W.
Второй случай.
Какой?
Слово W не пустое.
Следовательно, существует такая буква А,
что у нас слово распадается в виде АУ.
Да?
Выделяем первую букву.
Тогда давайте подумаем, как эта буква могла появиться.
Давайте картинку опять же снова нарисую.
Как эта буква у нас появляется?
Как у нас произвольная буква появляется из грамматики в нормальной форме хомского?
Из сквайзна терминала.
Из сквайзна терминала А какого-то.
Из хомского вы грейбах сначала.
Ага, ну смотрите, давайте тогда из этого, из картинка.
Получается, что у нас из S выводится АУ,
и за один шаг у нас выводится АУ.
Но если у нас из S выводится АУ, то что мы можем с вами сказать?
Использую лему.
Мне кажется, можем сказать, что у нас S без А выводит что?
У.
А тогда в новой грамматике у нас мы можем из S.
У нас есть по второму правилу грамматики любой переход вида А, S без А.
А из леммы будет следовать, что эта штука равна У, и мы получаем наше слово W.
Значит слово W лежит в грамматике, задаваем в нормальной форме грейбах.
А давайте, давайте четвертое правило добавим.
Лучше так не делать.
Ну циклические зависимости, с ними бороться потом.
Давайте мы добавим правило S в ВВ Тепсилон.
Если.
Правило грамматики в нормальной форме холмского, вот так вот.
Хорошо.
Так, в одну сторону доказали, как в другую сторону доказывать?
Остался один небольшой пункт.
Итак, пусть у нас.
Угу, тогда у нас из S выводится W.
Если у нас W не пустое, а мы этот случай уже рассмотрели.
Значит W равно АУ.
Ну а для произвольного не терминала у нас с вами что есть?
У нас есть правило второго типа.
То есть рассмотрим первый момент вывода в этой грамматике.
То есть из S за один шаг мы обязаны откуда-то начать.
И мы обязаны начать вот таким вот образом.
Где А.
А.
Где А.
А принадлежит.
Ой GH.
Так, отлично.
А и тогда что мы пишем?
Ну давайте тогда мы понимаем, что из этого S без А выводят У.
Это в грамматике нормально в форме грейбах.
Из этого по лемме будет следовать, что из S мы выводим АУ в нормальной форме хомского.
А из этого, поскольку у нас есть вот такой не терминал, то мы выводим АУ, то бишь наше слово W.
Что?
Мне кажется все в ауте, давайте это соображать.
То есть идея такая.
Значит рассмотрим.
Из S выводится АС без А.
Это единственное правило, к которому мы можем попробовать разобрать наше слово.
Посмотрев на первую букву и понятие, с какого не терминала оно выводится.
А из S без А тогда должно выводиться слово АУ.
А из С без А мы должны выводить слово АУ.
А из S без А тогда должно выводиться слово АУ.
Получается из этого, что S без А у нас будет У, и по лемме мы обратно возвращаемся.
Нигде я вас не обманул?
Вроде нет. Если обману, скажите.
Так, а теперь упражнение. Как доказывать упражнение?
Почему?
Можно убрать.
Вопрос.
Вообще достижимо.
Они могли достижимо, как раз когда в переходе индукции у нас был шаг,
что если у нас это выводится за два шага, то вот тут по крайней мере пустой вывод.
И тут был пустой вывод, и он нам нужен.
Да, давайте посмотрим на правила, из которых оно получилось.
И вообще, как мы вот такие не терминалы называли с вами?
В одно из предыдущих занятий наших.
Точно называли?
Да, мы их называли обсем порождающими.
Ага, и что мы делали с обсем порождающими?
Мы их убирали.
А теперь смотрите, у нас есть правила грамматики.
Если мы запустим для нашей грамматики алгоритм удаления обсем порождающих символов,
то как это правило может измениться?
Оба из двух не могут удалиться, может удалиться только один из них.
Да, добираем новое правило.
Так, вот такое правило подходит нам для нормальной формы грейбов?
Так, а такое?
Тоже подходит.
В смысле оба не могут удалиться?
Не, они оба могут быть обсем порождающими, но просто напоминаю, что когда мы удаляли обсем порождающий символ,
то мы прикрывали ровно одну часть из правил, и у нас все сходилось.
Мы себе можем позволить, что оба удалились, и все равно будут удалиться?
Да, да.
На самом деле, если мы отсюда, даже если символ внезапно окажется обсем порождающим,
то у нас останется из-за своего отца, поэтому все окей.
Поэтому надо требовать правила, что из них терминала у нас может вывестися ровно одна буква.
Смотрите, мы с вами хорошо разобрались в контексте свободными грамматиками,
но пока что не понимаем, как с ними работать в терминах компьютерных языков.
Напоминаю, что у нас были с вами регулярные выражения, которые можно достаточно просто задавать человеческим языком,
но достаточно сложно работать в них с компьютерами.
Поэтому давайте придумаем некоторый эквалент.
Он будет называться mp-автоматом, или автомат с магазиной памяти.
Следующая тема, которую мы будем с вами смотреть.
Поскольку, к сожалению, магазин, я не хочу объяснять, что такое магазин.
Посмотрите информацию в интернете, если хотите.
Давайте мы просто его будем называть автомат со стэком.
Это будет автомат, к которому сбоку будет приделан стэк.
И давайте его определим.
Значит, mp-автомат, это будет шестерка.
Так, q, что там?
Сигма, гамма, дельта, q0f.
Что у нас добавилось с вами?
Какая буква появилась новая?
Гамма, отлично.
Значит, где у нас q, это множество состояний.
Значит, сигма, это алфавит.
Он опять же у нас конечный.
Гамма, это так называемый стэковый алфавит.
Q0, это стартовое состояние.
f под множество q, это множество завершающих состояний.
Я остался определить дельта.
Значит, давайте я специально покажу термин,
как у нас будет определяться переговор.
Давайте я покажу термин,
как у нас будет определяться переходы в нашем стэковом автомате.
На самом деле, идея следующая.
Мы что-то будем с вами снимать со стэка,
что-то будем класть на стэк,
и как-то будем переходить к новому переходу.
А?
Да, конечно же.
А?
Да.
Но на самом деле, это условие можно не требовать,
потому что так получается,
что стэк и алфавит сами не пересекаются в конструкции автомата.
Сейчас мы это увидим.
Поэтому они могут пересекаться, могут не пересекаться,
а вот в агроматике терминалы и нетерминалы не могут пересекаться,
потому что нам надо понять,
из нетерминалов можно что-то выводить или не можем.
Так, значит, что там у нас получается?
Q на сигма со звездой,
на гамма со звездой,
декартового произведения на...
Иначе это еще можно писать так.
Q1, значит, у альфа,
у гамма со звездой,
значит, у альфа,
Q2 бета.
Вот, значит, вот это, это гамма со звездой,
это сигма со звездой, это гамма со звездой.
При этом, конечно, количество состояний у нас меньше бесконечности.
Начиннее такая.
И идея такая.
Мы для того, чтобы перейти из состояния Q1 в состояние Q2,
мы должны заплатить на вход альфу.
Это несколько стеков алфавитов.
То есть представьте себе, вы идете такие с, я не знаю...
Так, видимо, про фишки абстракции не очень.
Вы фишки играли?
Блин, черт.
Ладно, идете, короче, идете на рынок или куда-нибудь там,
в Южный двор, вам надо расплатиться, вам надо что-то купить.
Вы идете такие.
А представьте, что у вас этот кошелек в виде стека.
Вы берете, снимаете себе несколько монеток оттуда, платите,
и дальше в другой стек, ну, представьте себе, что, не знаю, там,
вы купили этот, как там...
Не знаю, билеты не банка России, а банка вот этих вот,
которые бывают, продают купюрки, которые непонятные,
и кладете их себе.
Да, да, да.
Ну вот, и кладете себе обратно.
Но при этом еще получаете что-то.
То есть вы приходите, кладете некоторую сумму,
значит, получаете необходимые товары,
а потом еще сдачку кладете себе обратно.
Вот.
Только это все на уровне стека.
И сразу скажу, что если у нас альфа состоит из
нескольких элементов стека алфавита,
то мы сначала снимаем b, потом снимаем a.
Угу, договорились.
То есть это делает все справа налево.
Вот это первое.
Угу.
Вот, а переходы будут обозначаться так в графе.
Так.
Да, сначала кладем a, потом кладем b.
Вот, переходы будут писаться таким образом.
Угу.
А теперь давайте подумаем.
А как бы выводить слово?
Мы начинаем, как вы думаете, с чем?
На входе.
Да, мы начинаем всегда в q0,
и у нас пустой стек.
Ну и слово у нас тоже пустое.
Ага.
А в конце что мы хотим с вами получить?
Да, мы хотим прожить всю жизнь замечательно,
значит, и умереть с нулем на счету.
Но при этом накопив некоторую сумму,
но при этом накопив некоторое богатство.
Так.
Так, сейчас секунду, давайте стек у нас будет вот здесь.
Вот, при этом эта штука будет в завершающем состоянии,
и стек тоже пустой.
Угу.
Какой он нам термин помогал работать в автоматах?
Да, выводимость.
Здесь нам тоже необходимо определить выводимость.
И конфигурация.
А?
Че, че, че, еще раз?
Да, двоеточем или запятой, не важно, короче, чем разделять,
главное, что разделять.
Давайте, чтобы была консистенция с лекцией, я посмотрю,
как определяется конфигурация.
Скорее всего это Q.
Это мы прошли.
Вот такие автоматы, в принципе, тут можно строить.
Вот, и тут можно понять, что распознается слово BAA.
Как BAA распознать, кто понимает?
Распознать, может вывести?
Ну, вывести.
Из Q0?
Из Q0 пойти куда?
В Q1.
А у нас же буква B должна быть первая.
А у нас нет, пока что буквы это рано.
Просто в стэк положили A.
А ничего, что мы на выход написали букву A?
Сейчас, где у нас...
А, выход, сейчас, что у нас где?
Первое это слово, которое мы пишем на выход,
второе это то, что мы читаем со стэка,
третье то, что кладем на стэк.
Да, из Q0 идем в Q2, кладем две буквы A на стэк,
потом мы снимаем эти две буквы со стэка, пишем две буквы A.
А АББУ как вывести?
АББУ.
В Q1.
Да, в Q1.
Дальше вращаемся в Q1,
потом переходим из Q1 в Q2,
кладем A на стэк, и дальше Q2 снимаем A со стэка.
Ну, стэк, кажется, из момента времени у нас будет пустой.
Ну, в конце.
То есть наша цель дойти до конца с пустым стэком.
Окей, с этим примером разобрались?
Да, хорошо.
Ну, на семинарах мы еще с вами будем разбираться с этим.
Итак, конфигурация.
Значит, эта тройка получается Q у гамма.
Под множество.
И это у нас конфигурация.
Или, как разработчики говорят, сокращенно конфиг.
Значит...
А?
Или?
Ну, или...
Чего?
Ну, просто сказать под множество.
А.
Согласен.
Да.
А теперь давайте отомнем, что же такое отношение в выводимости.
Значит, она должна вовнутрь отвернуться отношениям.
Она, во-первых, должна быть минимальным, рефлексивным, транзитивным.
Как мы любим.
Так мы любим.
С вами.
А второе.
Нам надо проэмулировать с вами переход.
Значит, нам надо, смотрите, для любого.
Q1 у альфа Q2 бета.
Принадлежащее множество переходов.
А для любого.
Слово w.
Для любого гамма, принадлежащего гамма со звездой,
должно быть выполнено следующее.
Q1.
Теперь, смотрите, тут слово w у.
То есть, все, что у нас оставлялось в отношениях в выводимости.
Гамма альфа.
Ну, выводится что?
Давайте подумаем.
Что должно выводить?
Первый элемент какой?
Q2 в гамма бета.
Q2?
Да, только, sorry, я что-то перепутал.
У w.
Мы же у должны считать со входом.
W, а тут гамма бета.
То есть, смотрите, мы считываем со входа, а снимаем с вершины стека.
Альфа.
Не-не-не.
Дописываем это, когда мы в терминах пути воспринимаем.
Когда мы воспринимаем в терминах конфигурации, что у нас на входе?
Какое слово у нас на входе находится?
Да, помните в владимирском автомате?
То есть, у нас вот это вот Q, это у нас состоять, не?
Что прочитать?
А вот это у нас текущий стек.
И тогда как определить, что слово лежит в языке задаваемого автоматом?
Ага.
Ну а что таких слов?
Что из Q0, Epsilon, мы выводим Q, Epsilon, Epsilon, где Q это некоторое завершающее состояние.
Это бета такая.
Сейчас перепишу.
Вот, теперь на бета похоже.
Окей.
В общем такое определение.
И вообще цель нашего занятия, ну, сегодняшнего и того, что мы будем добивать,
это показать, что mp-автомат и qln-tk с грамматиком.
Но первый факт, который мы с вами докажем, это следующий.
Давайте утверждение это.
Для любого mp-автомата
существует mp-автомат.
Давайте тут mp-автомат.
Что это mp-автомат?
Такой, что l от m равняется l от m-штрих.
И для любого q1, qα выводит q2, так это переход, принадлежит дельта от m-штрих.
Давайте я буду писать может переходов таким образом.
Упростим это соотношение следующим образом.
Вот таким образом.
То есть мы либо что-то снимаем со стека, либо что-то кладем со стека,
либо пишем слово на выход, либо ничего не делаем.
Давайте подумаем, почему это можно сделать.
Ну да.
Давайте картиночку похожу.
Так это мы с вами выбили.
Да, кстати, avn и bn выводятся таким образом.
Это всякие примеры.
А, вот, даже вот такое можно затребовать.
Но в принципе доказательство будет не очень...
Так, давайте.
Но это более такое.
А, это слабее?
Ну, в общем нам скорее всего нужно будет...
Да, нам по идее должно хватить этого.
Давайте подумаем, почему это так.
Ну давайте рассмотрим произвольное слово.
Как его разбить?
А, не-не-не, это, короче, бак в презентации был.
То есть мы даже сильнее докажем.
Давайте лучше скобочках напишем.
Значит, смотрите.
Идея такая.
Значит, берем наше слово и разбиваем на переходы.
То есть у нас был переход...
a1, an, an, a1.
Кто-нибудь понимает, почему в таком порядке пишется буква a?
Почему буква a пишется в обратном порядке?
Потому что буква a пишется в обратном порядке.
Почему буква a пишется в обратном порядке?
Да, в обратном.
Это мы заменяем на переход a1, an разбиваем.
Дальше у нас получается, мы со стека можем снять...
Получается a1.
Первое.
Потом мы, получается, снимаем с вами...
epsilon, an, epsilon.
Ой, тут m, n, k должно быть.
m, m, n.
А дальше кладем...
b1, epsilon, epsilon, bk.
Но в итоге эти переходы будут ровно эквалентны.
Потому что если мы пойдем по этой цепочке, а мы проходим только по этой цепочке,
то мы пишем слово вот это целиком.
Дальше мы пишем вот это слово целиком.
Снимаем со стека в обратном порядке.
А и дальше пишем b1, bk в таком порядке.
А если наоборот, то мы можем всю цепочку разбить на это соотношение.
То есть если у нас что-то здесь лежало на стеке,
то первое, что мы снимем со стека, это a1,
второе a2, третье a3 и так далее до an.
Теперь давайте следствие.
Так, с этим фактом понятно?
Следствие.
Можно потребовать...
Модуль α плюс модуль b равняется единиц.
Как?
Предположим себе, что у нас есть переход.
Так.
Попытка номер три.
Как его пофиксить?
Для того, чтобы один символ на стеке был.
Правильно.
Это отвратительный способ, но нам понадобится.
Вот там проблем будет.
Там со стеком проблемы начнутся.
А, да.
Вот такая вот история.
То есть это заменяется на такую конструкцию.
А?
А?
А?
А?
А?
А?
А?
А?
А?
А?
Ну?
Да.
Так, на этом презентация закончилась.
Давайте я сейчас открою следующую презентацию.
Собственно, теперь мы перейдем с вами...
Мы догоняем программу, кстати, с вами.
Давайте с вами...
Вот.
Давайте поймем эквивалентный ЛКС грамматики МП-автоматом.
И сформулируем теорему, которую мы с вами будем доказывать.
Значит, давайте решим, в каком порядке мы с вами будем доказывать.
Мы хотим с вами сегодня оба пункта успеть.
Или мы можем доказать один пункт и более мощный факт, связанный с КС-грамматиками.
Молее мощный.
Хорошо, давайте тогда попробуем.
Как раз для этого нам нужна будет нормальная форма Грейбах.
Как ни странно.
Хорошо.
Давайте докажем теорему.
Для любого КС-языка L задаваем L от G.
Существует...
Автомат M такой, что...
L от...
Сейчас, секунду.
L от G равняется L от M.
Вот.
Более того...
Для любого...
Он будет без эпсилом перехода.
В этом автомате.
Вот, это на самом деле два факта, которым мы будем доказывать отдельно.
Нет.
Там именно с КС-грамматики получится МП-автомат такого вида.
Да.
Ну, просто сначала лучше рассмотреть вот эту идею, а потом рассказать этот факт.
Окей, смотрите.
Давайте построим следующую вещь.
Представим себе, у нас есть некоторая грамматика.
Угу.
И сделаем фишку, сделаем очень простой автомат.
В нем будет всего два состояния.
И переходы в нем будут такие.
Кладем S на стэк.
А дальше для каждого правила вида...
А в А.
Нет.
Для каждого правила А выводит Альфа, мы сделаем следующее.
Мы...
Тут сделаем вот такую вот петлю.
И допишем правила.
Что мы будем снимать со стэка А.
Точнее, ничего не будем писать.
Со стэка будем снимать А.
А класснее стэк что?
Кто догадается?
Нет, не Альфа.
А?
А?
А?
Нет, нет, нет.
Да, перевернутая.
Вот.
Кстати, кто на контрольной будет они пользоваться, не забывайте переворачивать.
Потому что если не перевернете, половину баллов за контрольную задачу потеряете.
Вот.
И еще нам надо добавить следующее правило.
Так.
Да вы издеваетесь.
Если у нас с вами есть не терминал...
Ой, есть какой-то терминал, оказался в какой-то части правила,
то мы его снимаем и на вход кладем Амселон.
Вопрос, почему так некрасиво делать?
Кто понимает?
Нет, нет, нет, нет.
В терминах именно определение кс-мп-автомата.
Мы там сказали, что у нас стэковый алфавит не должен пересекаться с множеством не терминалов.
А здесь он у нас пересекся. Как лечить?
Либо убрать требования из определения и в принципе ничего не ломается.
Либо для каждого терминального символа завести копию,
которая будет эквивалентна этому терминальному символу.
Да.
В общем, вот такой вот факт.
И мы сейчас будем с вами доказывать следующее утверждение,
опять же, индукции по длине слова.
Да, да, да. Все на второй вершине.
Да.
Классно. А давайте еще подумаем.
Ну, пока мы будем, пока идея свежа,
давайте подумаем, что же мы можем сделать для нормальной грабатики в нормальной форме грейбах.
Как этот автомат можно заимпровить?
Потому что идея будет ровно аналогичная.
Значит, смотрите.
Какие правила у нас в грамматике в нормальной форме грейбах есть?
Ой, аккуратнее будете.
Хочется сделать так, чтобы каждый раз мы что-то снимали с и правила.
Да. Смотрите, у нас в каждом правиле есть первая буква.
Поэтому вот такое вот правило, когда мы встречаем в петле,
то мы будем читать букву А, снимать стека А и класть что?
Сб.
Здесь получается А. Снимаем букву СА с выхода, пишем Б.
Эпсилон.
И осталось правильно тут прочертить из старта.
Потому что пока что у нас тут переход, эпсилон, эпсилон, эс.
Ну, у старта вот это состояние в завершающем, да?
А?
Нет, ну а остальные слова какие?
Ну а здесь нужно посмотреть, какого рода правила есть у нас.
Ну и, собственно, опять же сделать следующее, что для такого правила написать переход, что
мы читаем А, со стека снимаем эпсилон, кладем СБ.
Получается тут кладем Б и так далее.
Это доска почти, да, это доска продолжения прошлых доски?
А?
Не-не-не, значит, вот эта идея для вот этого факта?
А вот эта идея для вот этого факта?
Просто доказательства будут аналогичны.
Вот, я поэтому хочу сразу эти два факта практически одновременно и показать.
То есть, смотрите, здесь у нас mp-автомат есть, в нем есть эпсилон перехода по буквам,
а в этом mp-автомате у нас эпсилон переходов по буквам нету.
Ну, кажется, это красивая идея.
Вот, поэтому давайте доказывать, значит, сначала вот этот факт.
Если успеем, будем показывать вот этот факт.
А?
А?
Да, чтобы всегда писали хотя бы одну букву на выход.
Вот, поэтому давайте доказывать следующий факт.
Лемма.
А пусть α
принадлежит n объединить с сигмой.
Тогда из q1 α эпсилон выводится q1 эпсилон эпсилон,
тогда и только тогда, когда в грамматике из α выводится w.
О, стоп, что-то я забыл.
Да, я забыл.
Вот так.
Нет, тут для одного символа, доказывается.
Ну, то есть тут может быть терминал, а может быть не терминал.
Вот.
Так, сейчас проверим.
Ну, по факту вроде так.
Ну да, мы должны доказать, что язык, задаваемый вот этим автоматом,
совпадает с языком эквелитной в этой грамматике.
Что?
Ну, два состояния q1, q0, q1.
Вот, переходы такие.
Ну что, давайте попробуем показать это в обе стороны.
Без звездочки.
Так, давайте начнем с левого направо.
Опять же у нас индукция под линей вывода.
Так, база.
За какое число шагов мы можем это сделать?
А если подумать?
За ноль.
Так, что у нас тогда получается?
А, стоп, у нас α объединить...
Да, за ноль не можем, потому что α у нас принадлежит n объединить σ.
Значит, за один шаг.
Так, это получается, что у нас есть правила в нашем автомате.
И с q1 мы снимаем со стека...
Так, получается, считаем слово w.
Снимаем со стека...
Вот так вот.
Так.
А?
Да, q1 везде.
Везде q1, то есть мы работаем именно с правой вершиной.
Так, ну что, давайте думать, когда у нас это все лежит в правилах грамматики.
Так, смотрите, значит, если у нас α не терминал...
Тогда w чему равняется?
Можешь ли я на чему-то равняться?
Смотрите, какое у нас правило.
У нас, если α есть, мы а...
Точнее, если мы а снимаем со стека, да,
то мы всегда кладем правую часть правила перевернутую.
На стек.
А если мы снимаем со стека, то мы всегда кладем правую часть правила перевернутую.
На стек.
А что мы на стек кладем здесь?
Эпсилон.
Слово равно эпсилон.
Так, во-первых, мы на стек кладем эпсилон,
то есть у нас, получается, было правило, во-первых...
Так, во-первых, было правило a выводит эпсилон в правилах грамматики, да.
А во-вторых, поскольку у нас а не терминал,
и со входа мы снимаем эпсилон, то w тоже равняется эпсилоном.
Да, то есть тут дабл факт.
Ага.
Ну а тогда смотрите, что у нас получается.
У нас получается α выводит w.
Почему это так?
Потому что у нас w равно эпсилон, а эта штука равно а.
У нас из а выводится пустое слово по правилам грамматики.
Так, сошлось?
Еще раз.
Нам надо посмотреть, когда у нас такое правило появляется по автомате.
У нас, напоминаю, правила вида.
Давайте, чтобы было понимание.
Я их перепишу.
Значит, если у нас было правило вида а стрелочка альфа,
то у нас появляется правило вида q1.
Получается, мы читаем эпсилон со входа, снимаем со стека а,
кладем q1 альфа реверснутая.
Если у нас есть любой не терминал,
то у нас правило вида q1 аа q1 эпсилон.
Какое подходит вот под это?
Если у нас а это не терминал,
нам подходит правило q1 эпсилон а выводит q1 а реверснутая.
Тогда у нас а реверснутая это эпсилон.
И получается, что у нас...
Так, давайте я сейчас еще раз напишу.
То есть у нас а равно а,
а это значит, что у нас есть правило а выводит некоторое слово...
Давайте бета.
То есть у нас есть правило а выводит бета.
Из этого будет следовать, что бета реверснутая равно эпсилон.
Следовательно, бета равно эпсилон.
Так то есть?
А вторая история, которая у нас может быть.
Если мы используем это правило,
то из этого будет следовать, что w равно пустому слову.
И получается тогда, что у нас из а выводится эпсилон,
а эпсилон по счастливой случайности у нас равняется w.
Так, давайте дальше двигаться тогда.
Второй случай, а это буква.
Альфа это буква.
Угу.
Да.
Потому что мы будем пользоваться этим правилом.
Давайте их обозначим по второму правилу.
Следовательно, альфа равная а выводит а, которое является буква.
То есть вас доказано.
Переход.
Вот первый самый нетриальный переход, который у нас появится.
Итак, смотрите, пусть у нас есть правило...
У нас написано с вами следующее.
Q1 w а за к шагов у нас выводит Q1 эпсилон эпсилон.
Давайте подумаем, какие два варианта у нас могут быть.
Первого правила.
Первое правило.
Мы можем снять либо не терминал, либо тут буква находится.
Но может ли тут находиться буква? Давайте подумаем.
Ну, смотрите, то есть у нас получается...
Либо альфа это какое-то бета а, либо альфа это какое-то бета а маленькое.
Какой случай проще, как вы думаете? Второй или...
Да, все, согласен.
Согласен, да.
Значит у нас альфа либо терминал, либо альфа не терминал.
Но если альфа терминал, то что тогда?
Кажется, тогда мы проигрываем, потому что k равно 1.
Почему k равно 1 будет в этом случае?
Ну да, потому что если мы попытаемся подействовать по первому правилу, нам надо снимать не терминал.
Нужен не терминал.
А по второму правилу у нас окажется, что стэк пустой.
Поэтому этот случай у нас автоматом отлетает. Теперь смотрим на этот случай.
Итак, пусть у нас правила грамматики было такое.
И почему, кстати, сразу расскажу, почему мы затребовали в нашем правиле,
в нашем переходе индукции, чтобы альфа была объединением терминалов и нетерминалов.
Тоже поймем, это крайне интересно.
Итак, значит у нас альфа не терминал.
Тогда у нас есть...
Давайте посмотрим, что у нас произойдет за один шаг.
Мы этот шаг можем делать только в том случае, что если у нас есть правило, а выводит какое-то b.
Так ведь?
Тогда у нас получается q1, что мы там? w, beta-реверснутые.
Так?
А теперь фишка. Давайте разберем бета.
Пусть у нас бета, это бета 1, бета 2 и так далее, бета kt, где бета it принадлежит n объединить с сигмой.
Так, то есть получается, что вот эта вот штука у нас это bkt, bkt, bk-1 и так далее, b1.
Так?
А теперь фишка.
Как у нас стек разбирается?
Тут я даже стек нарисую.
Это стек.
Вопрос, когда мы затронем бета kt, ой, бета 2?
А? Нет.
На втором шаге у нас может быть следующее, что мы из бета 1 что-то снимаем, кладем что-то на стек.
А?
Тогда мы снимем бета 2 со стеков.
Когда справа ничего нету.
Ага.
Именно в этот момент мы будем снимать бета 2.
Да?
Давайте найдем тот момент, когда мы начнем снимать бета 2 со стека.
Мы же сможем отследить такой момент?
А? Нет.
У нас же в правилах грамматики левая часть снимается со стека, правая кладется.
Поэтому потом опять же мы счищаем все, что у нас было в правой части, потом раскрываем, раскрываем.
И только тогда, когда у нас там появятся какие-то терминалы, тогда мы точно будем уверены, что у нас все в порядке.
А?
То есть, у нас получается Q1.
Что там было у нас? W?
Ага.
Ага.
Ага.
Ага.
Ага.
Ага.
Ага.
Ага.
Ага.
Ага.
Ага.
Ага.
Ага.
Ага.
Ага.
У нас получается Q1.
Что там было у нас? W?
Ой.
А?
А?
W, A.
За один шаг мы снимаем Q1.
Так, что у нас получается?
W.
И за L шагов у нас произойдет следующее.
Мы, поскольку у нас здесь входное слово,
то мы, получается, сделаем следующее.
Мы находим состояние Q1.
При этом у нас будет какое-то слово W1.
Здесь написано какое-то другое.
Но на стеке у нас будет β2.
То есть отсечем тот момент, когда у нас В1 со всей правой части отпадет.
Так.
Тогда смотрите, что мы можем понять.
Тогда мы можем сказать, что W это U1V1.
То есть мы считали здесь слово U1.
При наших разборках.
Сейчас, стоп.
Да.
U1 считали, осталось слово W1.
Тогда...
Из Q1 по U1, по не терминалу или терминалу B1,
мы из L шагов вывели Q1.
Что получаем?
Эпсилон.
Эпсилон.
Да, то есть стек у нас, по сути, не обновился.
Мы сняли только B1.
А из-за этого как раз по предположению индукции у нас получается следующее,
что β1 выводило U1.
Так ведь?
Это основная идея этого доказательства.
Давайте напишу.
Аналогично отцепим.
И получим по тем же...
По тем же самым соотношениям U2, Uk.
И тогда у нас все слово целиком.
Это будет U1, U2 и так далее, Uk.
А из A за один шаг мы выводим B1.
Bkt.
И тут мы выводим U1 и так далее Uk.
А это, собственно, наш слово W.
Индукционный переход мы с вами доказали.
Так, ну, поскольку у нас уже время потихонечку подходит к концу,
то, наверное, доказательства в обратную сторону мы проведем с вами чуть позже.
На самом деле оно будет сильно проще.
Почему? Потому что мы возьмем терминал, посмотрим первое правило,
посмотрим, как это раскроется и просто все снимем со стека.
Все лишнее.
Вот. Давайте, наверное, задаем вопросы.
А так, на этом, я думаю, мы закончим.
И в следующий раз мы добьем все доказательства тех фактов, которые у нас были.
Все, всем спасибо.
