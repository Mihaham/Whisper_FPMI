Сегодня у нас предпоследняя лекция, 2 декабря, кажется.
И сегодня и в следующий раз мы поговорим про диаграмму
Воронова и триангуляции Делане.
Воронова, триангуляции Делане.
Оба товарища российские-советские математики Делане, в частности,
насколько мне известно, был завкафедрой высшей математики в МФТИ когда-то.
И это алгоритмы, в их честь, собственно, названные.
Начинаем с диаграммы Воронова.
Так, отзапятая, кстати, они вдалеке.
Начинаем с диаграммы Воронова.
И чтобы дать какую-то мотивировку, для чего это зачем-то нужно,
обычно рассматривается такая Post Office Problem.
Post Office Problem.
Ну, идея очень простая.
Представьте себе, что вы живете в какой-то стране.
Давайте для простоты будем считать, что страна у нас задана на плоскости,
то есть нету там никаких препятствий, нету столбов, нету зданий.
Короче, расстояние между точками – это просто вклеивая расстояние между точками.
Да, то есть без движений, без препятствий.
Значит, есть у вас какая-то страна, и с ней уже открыты несколько почтовых отделений.
И Н почтовых отделений.
И, собственно, вам нужно понять, а вот если какой-то человек хочет отправить какое-нибудь письмо,
то в какое самое близкое почтовое отделение ему нужно пойти?
Просто из этих Н отделений какое из них самое близкое к каждому конкретному человеку?
К каждой конкретной точке на плоскости.
Ну и здесь будет какая-то такая картинка.
Давайте я что-то такое нарисую.
Весьма условно картинку.
Понятно, что наша плоскость развивается на Н частей, на Н регионов.
И в каждом регионе, соответственно, самое близкое почтовое отделение к данной точке –
это есть вот та точка, отвечающая каждому региону.
Вот у меня была черная точка, это почтовое отделение.
Все разбилось на Н регионов.
В каждом регионе самое близкое почтовое отделение – это та, которая в ней лежит.
То отделение, которое лежит в соответствующем регионе.
Ну, здесь что можно сказать?
Можно сказать, что вот эти вот точки, по умолчанию, они называются сайтами.
От английского слова «сайт» как бы просто местно на плоскости.
Поскольку у нас и так будет много всяких точек, ребер и вершин и так далее,
я, наверное, чаще буду говорить слово «сайт»,
чтобы отличать вот эти точки множества, по которым строится это разбиение плоскости на Н регионов,
отличать их вот, скажем, вот этих вот вершин.
Потому что понятно, что есть какие-то точки, скажем, равноудаленные.
Ну, тут у меня, конечно, плохо нарисовано,
но вот, например, эта точка, она будет вершиной диаграммы Воронова
и будет равноудалена от трех сайтов, от трех почтовых отделений.
И, собственно, чтобы не смешивать понятия, скажем, вершина, извините, диаграмма Воронова
и почтовые отделения я буду, собственно, вот это называть вершинами диаграммы Воронова,
а это называть сайтами.
Сайт.
Ну, сайт, не вот веб-сайт, а вот именно вот он, близкого, как бы,
какая-то локация, какая-то просто точка на плоскость.
Вот. И, собственно, это разделение плоскости на Н регионов,
внутри каждого из которых свое почтовое отделение самое близкое, это есть диаграмма Воронова.
Ну, давайте что-нибудь напишем.
Реагирование.
Пусть…
Это набор точек ПН,Magenta, далее ПН.
Давайте напишем набор сайтов.
Набор сайтов.
Пусть
В от ПАИТОГО ячейка диаграмма Воронова.
Диаграмма Воронова.
Давайте на всякий случай уточню, что в элементном падеже эта фамилия вороной.
Не воронов, ничего такое, а вот именно вороной.
Так вот, vpi это множество точек, которые к точке pi ближе, чем ко всем остальным.
Это множество точек q на плоскости, q из r квадрат,
таких, что расстояние от q до pi не больше, чем расстояние от q до pg,
для любого другого RG, для всех остальных точек сайтов.
Это называется ячейкой диаграммы вороного.
Соответственно, регион точек, которые ближе всего располагаются к этой точке,
к этому сайту, чем ко всем остальным.
И набор этих ячеек вместе с соответствием, какая ячейка соответствует какой точке,
это все взять в совокупность, называть диаграммами вороного.
Обозначается вор от p.
Диаграмма вороного построена по множеству сайтов p.
Это совокупность всех ячеек диаграммы вороного.
Совокупность всех ячеек w.
Вот, и собственно, та картинка, которая у нас была на прошлом слайде,
это есть пример диаграммы вороного.
Такое разбиение плоскости на регионах,
внутри каждого из которых своя точка, свой сайт самый близкий.
Ну и соответственно, из этого определения сразу же рождается очень простой,
но не очень эффективный алгоритм построения диаграммы вороного.
Наивный алгоритм построения.
Наивный алгоритм построения.
Если мы рассмотрим вот такое вот условие прификсированных i и j,
мы очень легко поймем, что множество q, удовлетворяющих такому неравенству,
это как раз эта полуплоскость, лежащая по одной из двух сторон середины
параметрикуляра между p и j, и причем по той стороне, которая содержит p i.
То есть вот если мы нарисуем на плоскости две точки p i и p j,
рассмотрим середину и параметрикуляр, котрески между ними,
то есть найдем середину отрезочка, проведем тропинекулярную прямую,
тогда множество точек q, удовлетворяющих этому неравенству,
это в точности вот эта множество точек.
Все, что лежит по ту же сторону серпера, что и точка p i, что и сайт p i.
Ну это очевидно, просто так работает середина тропинекуляра.
На середине тропинекуляра как раз таки лежат те и только те точки,
которые равны удалению от p i и p j.
Но если мы отступим в любую из двух сторон,
то будет приблизиться либо к p i, либо к p j,
и раз нам нужно, чтобы к p i мы были ближе,
то, собственно, значит, мы должны находиться по ту же сторону, что и p i.
Тогда алгоритм будет такой.
Давайте мы для каждого сайта, для каждой точки из диаграмма Воронова,
мы просто построим все вот эти вот полуплоскости,
то есть здесь у нас сколько? Здесь у нас n-1 неравенство,
то есть для каждого сайта p i у нас есть n-1 неравенство
на нужное множество точек q.
Так вот давайте все эти n-1 полуплоскости пересечем,
получим какую-то фигурку,
и, собственно, это будет ячейка нашей диаграммы.
А пересекать полуплоскости мы умеем за n-1 неравенство
с помощью алгоритма с прошлой лекции.
В итоге алгоритм такой.
Для каждого i
построить n-1 полуплоскость
определяемую неравенством
ну, вот, собственно, тем самым красным,
да, dist u p i,
уменьшим равно dist u p j.
Пересечь полуплоскости за n-логен,
полуплоскости за o-tn-логен,
ну, и так для каждого i.
В итоге, если мы точим вот n-кварат логен,
потому что для каждой точки мы пересекаем от n-полуплоскостей
каждое пересечение работает за n-логен.
Все, понятно.
Вот такой алгоритм, корректно работающий,
ну, не сильно эффективный, да, n-кварат логен.
Мы построим, окей, ну, короче, есть, если убить, но лучше, чем это.
Вот, но эта штука нам позволяет понять, что
ну, какие-то свойства, какие-то минимальные свойства
нашей диаграммы позволят понять.
Например, как минимум то, что каждая ячейка — это выпуклая фигура.
Значит, следствие этого алгоритма.
Каждая ячейка диаграммы Воронова —
это выпуклая фигура.
Ну, я напишу обобщенный выпуклый многоугольник.
Обобщенный
выпуклый многоугольник.
Вот, то есть часто это, в принципе, будет на самом деле выпуклый многоугольник,
если это грани ограничено, да, если эти ячейки ограничены.
Вот, но если они ограничены, как у нас это было раньше,
это будет что-то такое вот многоугольное и бесконечное там, грубо говоря, в две стороны.
Да, вот, например, если я нарисую такой набор сайтов,
квадратик и точка в центре этого квадратика,
то у меня диаграмма Воронова будет какая-то такая.
Будет один такой многоугольник.
И вот такие четыре луча — вправо-вверх и вниз-вверх, вправо-влево, вниз-вверх.
Соответственно, каждая ячейка — это вот есть у меня такой внутри ромбик, это тоже будет.
Ну, это будет выпуклый многоугольник.
А вот этот обобщенный многоугольник, то есть, собственно, какая-то ломаная,
выпукло-ломаная, которая ограничивает нашу фигуру,
только она может быть как бы бесконечной.
Соответственно, фигура тоже не ограничена.
Ну и почему это все верно, почему это обязательно выпуклая фигура?
Просто потому что мы пересекаем n-1 выпуклую фигуру.
Мы знаем, что полуплоскость — это, конечно, выпуклая фигура, это очевидно.
Ну а дальше, если мы пересекаем любое количество выпуклых фигур, мы получаем тоже выпуклую фигуру.
Доказательство пересечения выпуклых фигур.
Ну и поскольку мы пересекаем конечное множество фигур,
каждая из которых имеет, я скажу так, кусочно сейчас как-то.
Короче, граница каждой из которых является ломаной,
ну вообще даже прямой, потому что полуплоскость в качестве границы имеет прямую.
Но когда мы пересекаем конечное количество таких фигур,
понятное дело, что граница результата, граница пересечения — это ломаные из конечного числа звеньев.
Да, потому что мы пересекаем конечное количество прямых, получаем там конечное количество точек,
и соединения могут быть только отрезками.
Там никаких дуг окружности и ничего такого не появляется.
Поэтому, конечно, результат всегда либо многогольник ограниченный, выпуклый,
либо такой обобщенный многогольник, куда-то смотрящий бесконечности.
Вот такое простое следствие из нашего алгоритма.
Вот, хорошо.
Ну и чтобы понять, что этот алгоритм, в принципе, далек от оптимального,
давайте на самом деле убедимся, что диаграмма Воронова линейна по количеству вот этих вот всяких вершин и ребер в ней.
То есть мы понимаем, что если у меня есть n сайтов, n исходных точек, n почтовых отделений,
то, в принципе, на этой картинке видно, что вершин у диаграммы Воронова совсем немного.
Вот здесь 4 вершинки всего. Да, ну и ребер сколько здесь? Ну, 8 ребер.
Так вот, давайте докажем, что вершин и ребер в диаграмме Воронова на самом деле всегда линейное количество,
а это в частности означает, что наш алгоритм, скорее всего, далек от оптимального.
То есть мы за квадрат построили линейную структуру.
Да, это нас наталкивает на мысль о том, что алгоритм можно сделать получше.
Если было бы наоборот, если бы мы вдруг смогли доказать, что бывают такие примеры,
где диаграмма Воронова квадратична по количеству там точек и ребер, то, понятно,
там ничего сильного к встрече у квадрата Воронова сделать нельзя.
Итак, утверждение.
Утверждение.
Если...
Сначала первое утверждение.
Если все сайты ИСП лежат на одной прямой,
давайте первый пункт утверждения на одной прямой,
то диаграмма Воронова для множества точек П состоит из n-1 параллельной прямой.
Параллельной прямой.
Утверждение второе.
В противном случае...
В противном случае...
Ребрами диаграммы Воронова могут выступать только отрезки или лучи.
Могут выступать только отрезки или лучи.
Причем диаграмма Воронова связана,
причем диаграмма Воронова связана,
ну, если ее воспринимать как граф,
если ее воспринимать как укладку,
ну, вот того графа...
Окей, если просто ее воспринимать как граф,
если ее воспринимать как граф,
то есть у нас есть все равно какие-то вершины, есть ребра между ними,
как граф. То есть у нас есть все равно какие-то вершины, есть ребра между ними, и вот если рассматривать это графом, то он будет связан.
Так, ну доказательства. Первый пункт очевиден, если у нас есть точки напрямую, давайте их нарисую на горизонтальной прямой,
тогда как выглядит для них диаграмма Воронова? Ну, значит, как выглядит множество точек, которые к первой из них ближе всего?
Понятно, что нужно провести сер пер между первой и второй, и все, что живет слева от него, это, собственно, ячейка диаграммы Воронова на первой точке.
Это будет V от V1. Дальше мы проводим сер пер между второй и третьей, это будет диаграмма Воронова для второй точки, ну и так далее.
Это диаграмма, эээ, не диаграмма, ячейка. Да, ячейка для третьей, ячейка для четвертой.
Очевидно, что ровно так выглядит диаграмма Воронова, и здесь, собственно, у меня нет никаких вершин в диаграмме, есть только набор из N-у основной параллельной прямой.
А вторая часть, пусть не все лежат на одной прямой.
Давайте докажем сначала, что не бывает бесконечных прямых, да, таких двусторонних прямых, ну, лучи, как мы поняли, уже бывают.
Лучи, которые в какой-то точке начинаются и потом уходят на бесконечность, такие точки бывают.
Вот давайте докажем, что не бывает таких прямых, которые бесконечны в обе стороны.
Докажем, что не бывает прямых.
Вот, ну пусть это не так, пусть бывают.
Пусть бывают. Тогда же картинка какая-то такая, вот есть какие-то две точки.
Да, мы понимаем, что прямая, если откуда-то и берется, то она, конечно, является серпером между какими-то двумя точками, а серединный перпендикуляр между двумя точками.
Вот пусть это такой бесконечный серединный перпендикуляр между ПИПЖ.
И эта прямая входит в диаграмму Воронова как бы без заменения на целиком, вся такая бесконечная прямая пошла в ответ.
Хорошо, но раз мы знаем, что не все точки лежат на одной прямой, то вот вне этой прямой ПИПЖ есть еще хотя бы одна точка.
Давайте не умоляемся считать, что она лежит в правой полуголоскости.
Вот пусть есть какая-то там точка ПК, что она не лежит на прямой ИЖ, не лежит на прямой ПИПЖ.
Ну и при этом лежит как бы по ту же сторону, под серединой перпендикуляра, что ИПЖ.
Давайте просто на картинке считаем, что ПКТ там же от Сепера, где и ПЖ.
Хорошо, давайте посмотрим серединный перпендикуляр между этими двумя точками ПЖ и ПК.
Поскольку ПЖ и ПК не лежат на вот этой же самой гер toppingsальной прямой,
то серединный перпендикуляр будет непараллели вот этому исходному середину перпендикуляра.
Но поскольку ПК не на одной прямой, то этот серединный перпендикуляр непараллелен к второму серединному перпендикularesу,
пересекутся. Ну давайте я понаглевил, вот так вот нарисую, прямо поперек текста. Вот где-то они пересекутся.
Тогда что это значит? Это значит, что вот эти вот все точки, лежащие на этом середине пирникуляре, они
ближе к ПК, чем к ПЖ. Давайте здесь вот какую-нибудь точку Q. Тогда понятно, что distance от Q до ПК меньше,
чем distance от Q до ПЖ. Ну просто потому, что эти все точки лежат по неправильную сторону от середины
пирникуляра, то есть по ту сторону, которая ближе к ПК, чем к ПЖ. Но тогда, извините меня, вот эти
точки, они никак не могли в диаграмме Воронова, они никак не могли лежать на середине пирникуляре
между ПИ и ПЖ, просто потому, что ПЖ не оптимальная точка для них. То есть для них ближе находится
точка ПК, а значит, вот этот вот кусок границы, вот все, что находится выше этой точки пересечения,
это никак не может лежать в диаграмме Воронова, потому что для них ближайшая точка не ПЖ, а ПК или даже
более близкая. Все эти точки Q находятся ближе к ПК, чем к ПЖ. Следовательно,
не могут находиться на границе ячейки ПЖ. Ну а мы исходно предположили, что есть вот эта
бесконечная длинная прямая ПИ и ПЖ, в обе стороны бесконечная, которая, ну собственно, раз она есть,
то она является разделяющей прямой между ячейки Воронова для точки И, для сайта И и для сайта Ж.
Ну а мы показали, что на общей стороне двух ячеек мы как бы неправильно нашли ответ, потому что
для них для всех точка ПК ближе, чем ПЖ. Но противоречие, получается, бесконечных прямых быть не
может. И как бы в этом случае, даже если картинка такая, то максимум, какая может быть общая
часть границы между ИТ и житой ячейкой, это вот то, что находится ниже этой точки. Все, что вниз,
это потенциально может быть куском границы между ИТ и житой точками. Но все, что выше, оно точно
уже не лежит на этой границе. Так мы показали, что прямых точно не бывает,
коль скоро не все точки на одной примуте. Ну значит, отсюда сразу следует, отсюда сразу следует,
что ребра, это только отрезки или лучи, только отрезки или лучи. Ну так как ребра, это по сути
пересечение двух выпуков-ногогольников, ну или двух обобщенных выпуков-ногогольников. Причем они
пересекаются, конечно, по множеству меры ноль, потому что у меня есть разбиение плоскости на какие-то
ячейки диаграмма Воронова. Пересечение двух соседних ячеек, это, собственно, часть их общей границы,
это множество точек, которые равны одоленную двух каких-то сайтов. Ну и тогда понятно, что это
общая часть, общая часть границы, это выпуклая фигура, меры ноль, значит либо отрезок, либо лучик.
То есть не может быть там, ну, во-первых, не появляется никаких кусков окружности и так далее,
у меня все прямолинейное всегда, пока что. Ну и это непрерывный кусочек, потому что все выпукло,
на пересечении двух выпуков. Значит, все, что может быть, это только отрезки и лучи, вот прямых мы избавились.
Вот и отсюда следует, что на самом деле диаграмма связана, отсюда следует,
следует, что диаграмма Воронова для множества точек П связана. Вот, ну, потому что если это не так,
если это не так, тогда, ну, как такое может быть? Как такое может быть? Давайте подумаем. На самом деле,
единственный случай, когда такое может быть, это что, если у меня в диаграмме Воронова есть две
параллельные прямые, которые являются ребрами нашего, нашей диаграммы? Такое может быть. Ну,
то есть, соответственно, какая-то ячейка ограничена просто двумя параллельными прямыми,
с левой справа. Она может быть не связана, только если какая-то из ячеек ограничена с двух сторон
параллельными прямыми. Вот, но мы знаем, что у нас нету ребр прямых, у нас есть только ребра лучи,
значит, такой картинки точно не будет, и, в общем-то, где-то здесь будет какое-то соединение между
этими двумя кусочками. Вот. Ну, можно сказать, что противоречие, да, то есть, если есть несвязанность,
то обязательно какая-то такая, и точка заключена между двумя вертикальными прямыми, ну, в смысле
параллельными прямыми. А такого не бывает, потому что мы доказали, что прямых в нашей
диаграмме уже нет. Вот, хорошо. Это мы доказали. И отсюда, собственно, это утверждение нам не то,
что очень нужно, да, про связанность диаграмма Воронова, не нужно для алгоритмов, вот, но нужно
для того, чтобы показать линейность. Значит, теорема. Если n хотя бы 3, если есть хотя бы 3 сайта,
то в диаграмме Воронова, ну, и давайте подпишем, что не все точки на одной прямой, потому что если
все точки на одной прямой, мы уже все это поняли, и не все сайты лежат на одной прямой,
то ворот Q содержит не более 2 и минус 5 вершин
и не более
3 и минус 6 ребер. Ну, собственно, докажем линейность размера нашей диаграммы. Доказательства.
Из того, что у меня граф связный, я могу сразу применить формулу Euler. Формулу Euler, напоминаю,
нам важна связанность графа, связанность планарного графа, так как есть связанность. Вот, но здесь есть
все еще небольшая тонкость, потому что у меня есть такие бесконечные ребра, да, как вы поняли,
есть такие, бывают такие лучи, они всегда будут от них никуда не деться, которые выходят на
бесконечность. И с ними тоже что-то надо сделать, потому что иначе это как бы не граф, а такой, ну,
не знаю, бесконечный граф, что ли, с таким мы не работаем. Давайте тогда мы нашу диаграмму немножко
подправим. Давайте нарисую опять какую-то картинку. Значит, вот есть сайты черные, а диаграмму нарисую
красных. Вот какая-то такая диаграмма. Давайте тогда просто искусственно создадим новую вершинку,
которую назовем Wess index бесконечность, и вот эти вот все бесконечные, вот эти полубесконечные
ребра, все вот эти лучи, мы их как бы так вот замкнем на W бесконечность без пересечений друг
с дружкой. То есть будет какая-то такая вот картинка, какая-то такая картинка, и теперь это будет уже
конечный граф. То есть мы взяли W бесконечность достаточно далеко, так чтобы эти, соответственно,
куски кривых можно было нарисовать так, чтобы они не пересекались друг с дружкой. И теперь
получится конечный уже граф, для которого можно написать формулу Euler. Ну, давайте я напомню,
что давайте я напишу полсловами, что если мы возьмем число вершин в графе, вычтем число ребер и
прибавим число граней, то получим двойку, если исходно планарный граф связан. Значит, что у нас
здесь? Число вершин, это сколько? Это W плюс один. Если у меня было исходно W вершин в моем графе,
в диаграмме Воронова, то теперь их стало на одну больше, потому что мы добавили одну новую
W бесконечность. Дальше, если было изначально E ребер, то здесь E и осталось, потому что каждое
полубесконечное я, собственно, просто продолжил. То есть я новых ребер не вводил и старый не
удалял. Число ребер осталось таким же, как было. Вот вопрос, что с гранями. Грани, как я понимаю,
здесь N. Потому что, например, на этой картинке у меня есть 5 сайтов и 1, 2, 3, 4, 5 фейсов, 5 граней.
Ну, собственно, понятно, почему граней ровно N, потому что мы разбиваем всю плоскость на N как раз
в ячеек, в диаграмме Воронова. Каждый ячейк это грань. Ну а дальше, если мы как-то их соединили,
то число граней не изменится. Здесь, конечно, имеется в виду, что внешняя грань остается,
но внешняя грань, она, конечно, учитывается в формуле A. Поэтому граней будет в точности N.
Вот это равно 2. Хорошо, что В плюс 1 минус E. А вот почему мы можем так их нарисовать,
ну так пересечь лучи, чтобы, ну так их провести в В бесконечном, чтобы они не пересекались?
Ну, интересный вопрос. Стереографическая проекция. Если вам что-то сказало,
то хорошо. Ну, блин, давайте подумаем немножко. Ну, можно сказать, наверное, что такое. Давайте
посмотрим на все наши лучи. Так, лучи в одну точку соберутся, и все, получим граф на сфере.
А, ну да, да, да, да, в принципе, хороший ответ. То есть, что такое сериографическая
проекция? Это мы типа, давайте положим какую-то, вот это у нас плоскость, давайте на нее сверху
положим такую сферку. Давайте считать, что вот все происходит на плоскости. Я сверху кладу такую
сферу, и бесконечные лучи на этой сфере вычерчивают, ну как какие-то дуги окружности. И вот если за В
бесконечно взять там какой-нибудь северный полюс этой окружности, то как раз эти все дуги,
когда мы проведем, соберутся в северном полюсе. Вот, можно сказать так. Либо можно сказать,
что давайте посмотрим, в принципе, на все наши лучи, на то, какие лучи у нас нарисованы на
плоскости. Вот, их можно как-то упорядочить по наклону угла, то есть все лучи будут как-то там,
ну вот, в таком порядке как-то обходиться, в порядке против всего истрелки. Ну и давайте просто там
заведем какую-то точку с координатами, плюс бесконечность, плюс бесконечность, и проведем,
ну там, эти лучи так дополним, ну вот, собственно, как на картинке, да, то есть, зная порядок
сортировки всех лучей, мы можем там почти что явной формулой писать, как именно должны эти
тревоги быть устроены, так чтобы они все не пересекались. Ну, тут можно немножко помахать
руками, это довольно интуитивно, кажется, довольно понятный факт. Итак, значит, давайте
немножко упрощу, давайте я единичку вычту, из обеих частей, вот, будет v-x-x-x равно 1. Едем дальше,
мне нужна будет еще одна оценка, мне нужна оценка, что 2e больше равно 3v плюс 1. Значит,
откуда это берется? Это берется из того, что это в точности сумма степней всех вершин,
сумма степней всех вершин, ну, потому что, когда если мы просумерем все вершины,
получим точности 2e, это проблема рукопожатия или как это называется, простой факт. А это нижняя
оценка, нижняя оценка на сумму степеней, так как степень каждой вершины хотя бы 3,
степень каждой вершины, каждый вершины хотя бы 3. Вот, по-хорошему, это надо тоже еще как-то
пояснить, почему степень каждой вершины хотя бы 3. Ну, смотрите, для v-бесконечности это очевидно,
потому что v-бесконечность соединена, по крайней мере, с n вот этими бесконечными лучами. Ну,
окей, их там возможно не n. Короче, легко увидеть, что этих бесконечных лучей тоже хотя бы 3. Давайте
это отдельно, да, соединена хотя бы с тремя бесконечными лучами. Вот, а для нормальных точек,
для нормальных вершин нашей диаграммы Воронова, что может быть, вот если у меня есть какая-то
вершинка диаграммы Воронова, то как локально вокруг нее может быть устроена диаграмма? Ну,
смотрите, мы понимаем, что все наши фигуры – это обобщенные, обобщенные выпуклонные угольники.
Но раз они выпуклые, то все углы при их вершинках меньше, чем 180 градусов. То есть, локально,
картинка какая-то такая. Есть несколько углов, торчащих за этой вершинки, в сумме они дают 360,
но, значит, раз каждый из них меньше, чем 180, значит, их хотя бы 3. Раз каждый из углов меньше
180, меньше π. Меньше π, меньше π. Значит, углов, чтобы набрать 2π, их должно быть хотя бы 3.
Значит, степень каждой вершины хотя бы 3. Тоже самое с выбесконечностью, на самом деле,
потому что вот эти вот лучи, они заметают целиком угол 2π, и между двумя соседними угол не больше,
чем π. Опять-таки из-за всяких выпуклостей. Вот, между соседними угол меньше, чем π,
а нужно набрать 2π. Ну, значит, их там хотя бы 3. Поэтому выбесконечность тоже хотя бы 3 луча.
Степень тоже хотя бы 3. Вот, значит, есть такая оценочка. 2e больше ночи, 3v плюс 1. Ну, а дальше
нужно просто подставить эту старую формулу и получить все нужные нам оценки. Значит, давайте
я напишу, что e больше ночи, 3 пополам, v плюс 3 вторых. Дальше вернусь и перепишу старую формулу,
что v минус e плюс n равна енице. Так, отсюда выражу e. Напишу, что e это v плюс n минус 1.
Дальше вот на эту штуку напишу оценку сверху. 3 вторых v плюс 3 вторых. Что-нибудь перенесу,
переведу подобные и получу оценку на число вершин. Вот получу, что вершин не больше 2n минус 5.
Ну, а раз совершен столько, то опять-таки вот из этой формулы, ну, точнее, точнее вот из этого
выражения мы знаем оценку сверху на e. Раз e равно v плюс n минус 1 и v не больше, чем вот это,
может себе поставить, будет не больше, чем 3n минус 6. Доказали. Короче, формула Эйлера с
добавлением одной вершинки на бесконечности, на которую мы замыкаем все бесконечные лучи.
Вот, хорошо. Получается, что наша структура она линейная, в ней от n вершин от n ребер. Вот,
и значит, можно надеяться на то, что есть какой-то открытый побыстрее. Хорошо. Значит, мы доказали.
Дальше нужен будет критерий того, что какая-то точка является вершиной и то,
что какой-то отрезок, ну, и там между двумя вершинками есть ребро. Давайте дадим определение.
Пусть p это опять набор свайков. А q это какая-то точка плоскости. Тогда cq от p это круг максимального
радиуса с центром в q, с центром в q, который внутри себя не содержит ни одного свайта,
который внутри, в скобышках, во внутренности. То есть именно во внутренности, на границе он
кого-то может содержать, а именно, что во внутренности он содержит, который внутри не содержит ни одного
свайта. Вот, и такой круг мы будем называть максимальным пустым кругом. Максимальный пустой круг.
Вот картинку тоже давайте нарисуем. Вот есть какие-то точки. Мы берем какую-то точку q и рисуем
максимальный круг, да, так чтобы внутри никого не было, но на границе, соответственно, обязательно
кто-то будет, потому что мы же не можем бесконечно расширять круг, так чтобы в нем никого не было.
Обязательно в какой-то момент на границе кто-то будет. И вот в зависимости от того, сколько точек попали на
границу этого пустого круга, у нас есть разные свойства для этой точки q. Итак, теорема.
Первый пункт. Точка q является вершиной диаграммы Воронова, является вершиной диаграммы Воронова,
если только если cq код p на своей границе содержит, по крайней мере, три сайта. Ну понятно,
что если он содержит кого-то, то обязательно граница, потому что внутри круга никого нет.
Давайте я в столбочках это припишу. Содержит на своей границе, на своей границе, по крайней
мере, три сайта. По крайней мере, три сайта. И второй факт. Мы охарактеризовали все вершины
диаграммы Воронова. Теперь давайте охарактеризуем ребра. В диаграмме Воронова есть кусок середины
перпендикуляра между p и pg. Участвует середина перпендикуляра к p и pg. То есть мы уже понимаем,
что каждый сервер, он либо вообще не входит в середину гуляции, то есть это какая-то полуплоскость,
которая накладывает ограничения, но более слабо, чем все остальные. То есть когда мы пересекаем,
скажем, все полуплоскости, отвечающие и тому сайту, то какая-то конкретно житая полуплоскость может
быть слишком слабая и не накладывать новых ограничений по сравнению со всеми остальными. Так вот,
иначе этот сервер участвует и нам задает либо отрезок, либо луч, как мы уже доказали. Ну,
давайте считать, что выраженные случаи, когда все на одной прямой, мы не рассматриваем. Иначе у нас
этот сервер является ребром, если только если существует точка q на этом середине перпендикуляре.
Так, забыл стрелки, на середине перпендикуляре к PIPG. Такая, что максимальный пустой круг с центром в Q
не содержит кроме PIPG никаких других точек, не содержит других сайтов, кроме PIPG. То есть
на границе, понятно, на границе будут лежать PIPG, а давайте я немножко перепишу все-таки это
условие. Этот максимальный круг содержит на границе PIPG, а больше никому не содержит,
а больше никаких сайтов не содержит, ни внутри, ни на границе. Вот такую теорему
критерии ребра и вершины мы сейчас докажем. Так, доказательства. Первый пункт, давайте скажем,
мы пойдем слева-направо. Пусть какая-то вершина является вершиной, какая-то точка является
вершиной диаграммы Вараного. Ну что значит, что это вершина? Это значит, что она, раз это какая-то
вершина на границе каких-то там многоугольников, то она получается равна и удалена от нескольких
сайтов. И причем у этих сайтов хотя бы три, мы поняли, что если это вершина, то у нее степень хотя бы
3, давайте точка Q, это вершина, у нее степень хотя бы 3, значит она входит хотя бы в три ячейки
диаграммы Вараного. Там какая-то одна ячейка, первая, вот какая-то вторая, вот какая-то третья. Значит Q
лежит на границе хотя бы трех ячеек. Q лежит на границе хотя бы трех ячеек диаграммы Вараного.
Ну, значит, понятное дело, она равна удалена от сайтов, которые порождают эти ячейки. Вот эти
вот три сайта черненькие, значит она от них равна удалена, раз она лежит на границе каждого
из них, то она равна удалена от всех этих сайтов. Значит Q равна удалена от сайтов соответствующих
этим ячейкам. В этом круге уже на границе есть хотя бы три точки, ну понятно, что если степень
Q больше чем три, то там может быть несколько точек на границе этого круга. Теперь вопрос,
почему внутри этого круга нет ничего другого? То есть этот круг я рисую с центром Q, он содержит
наши три сайта, почему нет никого другого? Ну, если было бы кто-то другой внутри круга, то есть
представьте, что есть какой-то сайт внутри, вот тогда это значит, извините, что точка Q, она не
лежит не то что на границе вот этих трех старых ячеек, но даже просто не принадлежит этим ячейкам,
потому что к ней эта точка была бы ближе, значит она лежала бы просто в другой ячейке, она не
могла лежать в этих трех старых. Если есть более близкий сайт, то Q не могла лежать в трех
исходных ячейках, потому что если она в ячейке лежит, это значит, что какая-то точка, что сайт,
порождающий эту ячейку, самый близкий к ней, ну а если есть какая-то точка внутри окружности,
то получается, что этот сайт ближе к Q, чем все, которые мы построили, чем те,
которые получают для грамма воронного, ну значит противоречие. То есть в обратную сторону,
пусть у меня точка Q, мы для нее построили максимальный круг, максимальный пустой круг,
и на его границе есть хотя бы три точки, хотя бы три сайта, хотя бы три, потому что его разделение,
три или больше. Так, почему тогда это обязательно вершина? Ну давайте я нарисую эту окружность,
давайте я отцирструю все сайты в порядке следования по этой окружности, тогда понятно, что Q лежит на
вот этих вот всех серединах перпендикулярных. Так, вот, сейчас, на секунду, ну да, собственно,
опять, ближе к Q никого нет, а да, можно просто сказать, что получается, что Q лежит одновременно,
хотя бы в трех ячейках, потому что ближе к ней никого нет и получается, что, когда я расширяю
радиус, я, получается, ну, пытаюсь понять, какая точка ко мне сама близкого. Пока никого нет,
никого нет, потом я так расширяюсь, что одновременно сразу хотя бы три точки
стали ко мне самыми близкими. Но раз хотя бы три точки стали ко мне самыми близкими,
значит я лежу хотя бы в трех ячейках. Да? Получается, что Q, к Q есть хотя бы три самых
самых близких сайта, самых близких сайта. Значит q лежит хотя бы в трех ячейках,
q лежит хотя бы в трех ячейках, ну значит она просто является обязательно вершиной всех этих ячейок,
у вершины всех этих ячейок, потому что когда вы пересекаете по крайней мере три обобщенных
выблоков наугольника, у вас в перечень с Naomi обязательно будет вершина, потому что там не может быть
ребро, да, потому что если у вас пересечение трех наугольников это ребро, то получается, что один
лежит где-то сверху, второй где-то снизу, а третий, он не может здесь как бы нигде содержаться,
чтобы быть выклым и не пересекаться с остальными, то есть если есть 3 ячейки выклых, которые
пересекаются, то они могут пересекаться только по вершине, собственно вот обязательно вершина
диаграмм Веронома. Вот такой первый фрагмент теории. Первый пункт на критерии того, что точка является
вершиной. Второй давайте вспомним, это про то, когда что-то является ребром. Значит, что-то является
ребром, точнее, серийный перкуляр КПИ и КПЖ участвуют в диаграмме Веронома, если на этом сервере есть
какая-то точка такая, что максимальный круг с центром в ней содержит КПИ и КПЖ, но больше никого это не содержит.
Давайте опять слева-направо. Слева-направо это означает, что у меня серийный перкуляр участвует
в диаграмме Веронома. То есть, есть два сайта КПИ и КПЖ. Есть серийный перкуляр между ними, ну и по крайней
мере, какой-то его отрезок, какой-то его отрезок входит в нашу диаграмму Веронома. Какой-то его
нетривиальный, не пустой отрезок, даже, я бы сказал, отрезок положительной меры. То есть, ну не просто
точка, а какой-то отрезок входит в диаграмму Веронома. Тогда почему на нём обязательно есть такая хорошая точка?
Давайте возьмём любую точку на этом ребре. Давайте построим максимальный круг с центром этой точки,
и поймём, что он вот ровно такой. Возьмём в качестве Q любую внутреннюю точку ребра,
то есть не вершину, внутреннюю точку ребра. Рассматриваем максимальный круг, тогда понятно,
что P и Pg точно здесь лежат, ну то есть они просто ровно удалены от Q, поэтому они будут
лежать на этом круге. И внутри этого круга никого точно не будет, потому что, если был бы кто-то
ближе, то, соответственно, Q не могла лежать одновременно и в это ячейке, и в жито ячейке,
она потому что лежала бы в другой ячейке и, соответственно, не могла лежать в P или Pg,
поэтому здесь никого нет. И на круге также никого больше нету, потому что, если кто-то был бы,
то получается, что Q должна была быть вершиной, а мы предположили, что мы берём внутреннюю точку.
Итак, рассматриваем с Q от P, максимальный вот этот пустой круг. Внутри него,
нет, не так, не так, ссори, давайте его рассмотрим. Рассмотрим круг с центром в Q и радиусом у Pg,
он также содержит Pg, потому что расстояния равны, поскольку Q лежит на серене при пулькуляре.
Дальше, он пустой, так как иначе, повторюсь, если есть какая-то точка внутри этого круга,
то точка Q просто, ну мы предположили, что Q лежит на ребре, которая разделяет иту и житую ячейку.
Получается, что ита и житая ячейка имеют какой-то общий кусок границы, и к Q самые близкие сайты,
это ита и житая ячейка. Но если есть какая-то точка внутри этого круга, то получается,
к ней есть ещё более близкий сайт, что противоречит предположению. Он пустой, так как иначе,
к Q есть более близкий сайт. И ещё на границе никого нет, потому что иначе будут вершины,
на границе круга никого больше нет, так как иначе Q должна быть вершиной по первому пункту,
должна быть вершиной диаграмма Воронова по первому пункту. Вот теперь всё. И в обратную сторону.
Значит, мы предполагаем, что есть какие-то два сайта PIPG, есть бесконечная середина вертикуляр
между ними, и есть хотя бы одна точка на нём, такая, что максимальный круг с центром этой точки
проходит через PIPG и больше никого не содержит ни внутри, ни на границе себя. Там какой-то круг,
он больше никого не содержит. Тогда почему обязательно есть ребро, разделяющее иту,
житую иссейку в диаграмме Воронова. Так, сейчас сообразим.
Да, ну что означает это условие? Это означает, что к Q ближайшие два сайта, это и ты и житый,
а все остальные строго дальше. Самые близкие к Q, это PIPG, а все остальные строго дальше.
Значит, если я ещё немножечко пошевелю эту точку Q вверх и вниз вдоль этого середины
вертикуляра, то у меня всё ещё будет выполняться в том же условии, что точки PIPG будут одинаково
близки, а все остальные всё ещё будут строго дальше. Ну, потому что у меня функция расстояния
непрерывна. Значит, здесь есть какой-то небольшой, но положительный длинный интервал на этом середине
вертикуляра. Такой, что целиком этот интервал как бы более близок, извините, одинаково близок
к PIPG, а все остальные дальше. Ну, значит, понятное дело, что это просто кусок границы между иты и житой
ячейкой. Это значит, что интервал вокруг Q — это общий кусок границы двух ячеек ВПИТОГО и ВПЖИТОГО.
Ну, потому что к этим ко всем точкам самые близкие — это ИТ и АЖИТОГО. Они лежат в пересечении наших
двух ячеек. Значит, они на границе. Получается, что эта штука — это кусок границы. Мы это и доказали.
Мы и хотели доказать, что ИТ и АЖИТОГО ячейка имеют общий кусок границы, который является под
множеством середины вертикуляра. Ну, а длина этого интервала нам не важна. Главное, что какая часть
входит. То есть мы получили условия на ребро. Доказали теоремку, которая характеризует все наши
вершины и ребра, наш диаграмм Варанова. Хорошо, теперь давайте мы кратко и очень неподробно разберем
алгоритм, который Зайн Луген может построить диаграмм Варанова. Мы не будем выдавать в его детали.
Вот, мы на следующей лекции разберем вероятность алгоритма для обстреливания ренабляции деланой,
и, собственно, из него можно будет построить диаграмм Варанова. Давайте так очень на пальцах
опишем алгоритм FORTUNE по строению диаграмма Варанова. Вот, и нам дамы эти факты, эти критерии,
вершинки и ребра, конечно, будут нужны. Итак, алгоритм будет такой, это будет просто сканирующая прямая
с верху вниз. Ну просто это, я погорячусь, конечно, но основная идея, что это просто сканирующая,
что это сканирующая прямая с верху вниз. Ну, идея такая. Вот есть какое-то текущее положение
моей прямой горизонтальной, есть какие-то сайты выше этой прямой, есть какие-то сайты ниже этой прямой.
И нам хотелось бы как бы сказать, давайте представим, что выше этой прямой я уже построил
правильную диаграмму Воронова, дальше я спускаю l вниз, появляются новые точки, как-то диаграмм перестраивается,
хотелось бы так сказать. Но здесь, к сожалению, это не совсем корректно так говорить, потому что
верхняя часть диаграмм Воронова вполне себе может зависеть от точек, которые лежат ниже этой l, то есть
точки, лежащие ниже l, которые мы пока даже не рассмотрели, они вполне спокойно могут влиять на
вид диаграмма Воронова сверху, потому что нам нужно будет строить серпиры от этой точки, от этого сайта,
ко всем остальным данную, соответственно, вот какая-нибудь такая штука будет являться куском границы
одной из ячеек, а мы еще даже не знаем про эту точку, соответственно, про серпир мы ничего не знаем,
поэтому не то, что я поддерживаю корректную диаграмму Воронова сверху, потому что она зависит
от того, что находится снизу. Ну хорошо, давайте мы тем не менее подумаем, а какую часть диаграммы
Воронова мы хотя бы можем вообще себе, какой мы точно знаем, какая диаграмма Воронова точно
построена и которая какая-то очень не будет меняться, но на самом деле, смотрите если есть какая-то
точка q, от которой до ближайшего сайта расстояние меньше, чем до прямой, вот если до точки q
расстояние, если от точки q расстоянии до ближайшего сайта меньше, чем до прямой, давайте겠습니다,
тогда для точки q я уже точно знаю, где она лежит, в какой ячейке она лежит, ну потому что я знаю,
что ближе к ней это вот это, а все что ниже этой прямой точно не повлияет на ячейку вершины q,
ячейки точки q, потому что если до прямой l расстояние уже больше, чем x, то соответственно всех
остальных точек расстояние будет еще больше, потому что они лежат под прямой, соответственно расстояние будет
больше. Теперь у меня вопрос к вам, знаете ли вы, как выглядит множество точек q, ну давайте я фиксирую
какой-то пыли, знаете ли вы, как выглядит множество точек q, которые ближе к вершине, к сайту, чем к вот этой
горизонтальной прямой? Параболы. Да, это параболы, потому что если мы, наоборот, сделаем, если мы, да,
да, ну внутренняя часть параболы, да, потому что если мы приравняем x равно y, то мы получим условия,
что расстояние от точки до сайта должно быть равно расстоянию от точки до прямой, это как раз там
одной из свойств параболы, вот, соответственно, у нас будет какая-то такая картинка, это множество точек,
которые равно удальны от точки и от прямой, соответственно, точка, это будет фокусом параболы,
прямая будет директрисом параболы, фокус директрисов, ну соответственно, все что лежит выше этой
параболы, это и будет та часть, где мы точно уже знаем ответ, что эта точка ближе, чем прямая
значит ближе, чем все нерассмотренные точки. Хорошо, теперь давайте для каждый, для каждого просмотренного
сайта я построю такую параболу и рассмотрю их нижнюю огибающую, то есть будет какая-то
картинка, для каждого сайта я рисую параболу, какую-то такую, да, что-то такое будет, не знаю,
здесь весьма схематично что-то нарисую, вот, и рассмотрим нижнюю огибающую,
вот, что-то такое безобразное, некрасивое, но что получится, и все, что лежит выше этой
нижней огибающей, там уже целиком знаем наш диаграмм, там уже целиком знаем наш диаграмм.
Хорошо, ну а вот это вот синяя нижняя огибающая серпарабол называется в литературе по-английски
beach line, по-русски береговая линия, береговая линия, то есть береговая линия наша состоит из
нескольких кусков парабол, причем, заметьте, у нас одна парабола может давать несколько кусков,
как вот эта вот первая, да, есть у нее этот левый бесконечный кусок, и есть вот этот еще конечный
второй кусочек, вот этот здесь, который заключен опять между какими-то двумя другими параболами,
то есть не то, что у нас непрерывно идет одна парабола, потом другая, потом третья и так далее,
а еще они могут так перемежаться, что сначала первая, потом вторая, потом опять первая,
каким-то своим кусочком, ничего страшного, просто подчеркну, что такое тоже бывает. Ну и тогда
смотрите, как меняется этот профиль, как меняется как бы статус этой береговой линии, когда мы
двигаем нашу директрису, когда мы двигаем нашу сканирующую прямую вниз, ну появляются иногда
новые точки, когда у меня происходит спуск до очередного сайта, у меня происходит так
называемый site event, событие точка, сайт event это по-русски событие точка, событие точка,
соответственно в этот момент в наш профиль, в наш статус вклинивается новая парабола,
которая в самом начале выглядит как просто вот такая бесконечная прямая верха, потому что если
у вас точка лежит на прямой, на директрисе, то парабола вырождается просто в прямую,
ну соответственно на самом деле в такую бесконечную прямую, мы ее рисуем полубесконечной, только вверх,
и соответственно если мы L чуть-чуть вниз подвинем, то уже вместо вот этой прямой у меня будет какая-то
такая очень-очень узкая, очень тоненькая парабола, ну и она соответственно с течением времени будет
так расширяться и расширяться. У меня есть сайт и влент, это когда какая-то новая парабола вставляется
в береговую линию, новая парабола вставляется в береговую линию,
вот есть второй тип событий, это так называемый circle event,
circle event это когда какие-то три параболы, не так, короче когда одна из парабола удаляется из
береговой линии. Смотрите, вот есть у меня какие-то три параболки, например как-то вот так выглядящие,
есть три параболы, и вот если я L буду сдвигать вниз, то вполне себе может быть такое, что у меня
эти параболы начнут выглядеть как-то так, соответственно вот эта центральная средняя дуга
выродится в точку, то есть она будет выглядеть как-то вот так, но нижнее огибающее ее уже перестанет
содержать, то есть одна из дуг вырождается в точку, и соответственно нам нужно будет удалять эту дугу
параболы из нашего статуса, из нашего профиля того, что находится выше сканирующей прямой,
вот почему это circle event, потому что эта точка, она на самом деле будет вершиной нашей диаграммы
Воронова, и она одновременно равно удалена от четырех элементов, она равна от фокуса первой параболы,
от фокуса второй параболы, от фокуса третьей параболы и от директрисы, потому что в момент,
когда одна из дуг параболы, то есть одна дуга параболы пропадает, это означает, что как бы
происходит касание вот этой вот параболы с двумя другими, соответственно, точка пересечения,
по крайней мере, что вот эта вот точка пересечения равно удалена от трех фокусов,
ну еще поскольку все это происходит на параболе, то она еще и равно удалена от прямой, поэтому такой
circle event с центром этой точки, вот такой вот будет большой circle, большой круг, который содержит
на себе три фокуса и касается сканирующей прямой, то есть circle event по-русски это событие окружности,
событие окружности. Вот, для такого мы просто подсчитываем, смотрим на все тройки подряд
идущих двух парабол, вычисляем вот эту вот точку лежащую, ну равно удаленную от этих трех фокусов,
то есть по сути просто строим центрописные окружности для вот этого треугольника,
для трех последующих фокусов строим эту самую точечку, вот, и говорим, что если L находится на
расстоянии R от этой точки, где R это радиус описанной окружности, то вот нам нужно добавить новое
событие, при котором у меня появляется вершина диаграммы Воронова, поскольку она равно удалена
от трех вершинок, от трех сайтов, значит появляется вершина диаграммы Воронова и одна из дуг удаляется,
одна из двух парабол удаляется, появляется новая вершина. Вот, ну а при движении этой L у меня как
раз вершины, вершины, вот эти вот пересечения парабол будут заметать рёвры, потому что смотрите,
когда, ну то есть что такое вообще вот эти вот точки вершины, это как раз точки, которые равно
удалены от каких-то двух сайтов и больше ни от кого, да, потому что если бы они были ещё от кого-то,
ну на том же сцене, то там их было хотя бы три, это была бы уже вершина, и соответственно,
одна из парабол была бы несущественна, но это так, да, на пальцах. То есть вот эти вершины, они на
самом деле, как бы пересечение соседних парабол, они вычерчивают нам ребра, и в случае, когда у меня,
скажем, вот эти вот, ну да, они вот так вот движутся, соответственно, вычерчивают ребра, и в какой-то
момент они схлопываются, тогда одна из двух пропадает, становится какая-то вот такая картинка,
вот, и мы получили вершину. Ну и дальше опять она там как-то расходится, появляются новые, новые
ребра и так далее. То есть точки пересечения парабол заметают ребра, а удаление дуг парабол
соответствует появлению вершины, ну или то же самое, что схлопываются какие-то два ребра в одной
точке. Вот, ну и соответственно алгоритм просто идёт аккуратно так сверху вниз, поддерживает все
события, которые будут происходить, да, то есть для всех трёх соседних параболок поддерживает вот
эту точку пересечения, точку описанной окружности, заводит себе новый событие, что если прямая L
дошла до такого уровня, то появляется circle event, и там нужно как-то аккуратно удалить, провести
новые ребра и добавить новую вершинку диаграмма Воронова. Вот, ну а если cycle event, то нужно
просто добавлять вот такую параболу, понимать, где она здесь пересекает одну, ну там, одну из
парабол, которые были раньше в статусе, разбить как-то, ну подразбить мой статус, что сначала у меня
есть вот этот кусок параболы, потом этот кусок параболы, потом этот кусок параболы, то есть раньше
была одна парабол, теперь стало три, вот, ну, точнее три дуги параболы. И тоже, то же самое нужно потом
будет опять все тройки перебрать аккуратно, подряд идущие тройки перебрать, понять, не порождает
ли они circle event, и если порождает, то тоже его добавить в очередь событий. Событий будет всего
линейное количество, потому что каждое событие у меня это либо вершина диаграммы, либо одна из
один сайтов, поэтому событие линейное количество, ну а дальше я симпатизирую, давайте напишем, что это
событий, вот этот событий, а их вся обработка обрабатывается, можно сделать за n log n, потому что
нам, ну, тут нужно хренеть какое-то дерево поиска на статусе, какое-нибудь дерево поиска, типа
декартовый дерево или какое ваше любимое, авель дерево, дерево поиска на статусе, вот эти куски
парабол как хранятся, потом вставка, удаление, все делается алгоритмом. Вот такое очень недетальное
описание этого алгоритма, писать здесь, конечно, его не очень хочется, потому что много всякой
вот если вопросы по тому, что здесь происходит, ну так, да, как бы без кода, мы будем его писать,
не предполагается, то есть я скорее на лекциях расскажу, на следующей лекции расскажу вероятность
алгоритм для построения triangulation делана, и вот его уже можно писать, то есть в принципе вы это можете
там где-нибудь подробнее прочитать и закодить, или просто основа в том, что рассказ тоже закодить,
вот, но как бы будет круто, но не обязательно. А он легче, чем этот? Ну, на любителя, но мне кажется,
что тут легче, по крайней мере для меня, тот, который я буду рассказывать, легче,
так, здесь как-то больше надо думать, там надо меньше думать, там просто больше писать,
но меньше думать, и поэтому мне кажется, что этот алгоритм проще, то есть там понимать нужно меньше,
всяких событий меньше и так далее, поэтому мне кажется, тот проще. Вот, хорошо, значит, это была
основная идея алгоритма Форчуна, и как бы можно сказать, что мы более-менее писали, как можно
за НЛГН строить диаграмм Воронова. Повторюсь, что вот эти вот узлы пересечения парабол,
они нам и вычерчивают все ребра, значит, как бы, ну, мы знаем, собственно, всю диаграмму. Хорошо,
теперь давай тогда переключаемся на триангуляцию делана, триангуляция делана, что это такое,
зачем это нужно и так далее. Ну, сначала давайте определение. Видимо, опять я скажу,
что есть набор сайтов, пусть П, это набор сайтов. Сначала вообще, что такое триангуляция? Триангуляция
множества точек. Мы с вами знаем, что такое триангуляция многоугольника, это разбиение
внутренней части многоугольника на несколько попарно не пересекающихся треугольников, так что
вместе они покрывают весь исходы многоугольника, ну, не пересекающихся по внутренностям, то есть
они могут пересекаться по границе. Значит, здесь у нас нет многоугольника, здесь у нас есть только
набор точек, набор сайтов, и нам тоже нужно определить триангуляцию. Ну, тут все то же самое,
значит, это набор попарно не пересекающихся по внутренности, не пересекающихся по внутренности
треугольников с вершинами в сайтах, с вершинами в сайтах. Ну, я напишу так,
объединение которых равно выпуклооболочке множество сайтов, объединение которых равно
конвекс от p. Примерно рисую, значит, мы понимаем, что нам нужна выпуклооболочка множества точек
p, множество сайтов p, ну, вот есть какая-то выпуклооболочка, допустим. Дальше внутри есть еще какие-то сайты, внутри или на границе, кстати, вполне спокойно могут быть какие-то сайты. Ну, например,
треангуляция, это вот что такое. То есть треангуляция, конечно, может быть много, ну, вот одну из возможных я нарисую.
Вот эта треангуляция. Соответственно, несколько треугольников, вершины в сайтах, все пересекаются
только по границам или вообще не пересекаются. Ну, и объединение равно выпуклооболочке множество сайтов p. Вот, пожалуйста, вам что такое треангуляция.
А, ну и, конечно, ребра выпуклооболочки тоже являются ребрами наших треугольников. Надо тоже нарисовать. Вот один треугольник,
вот второй треугольник. И здесь тоже есть треангуляция. Зачем это может быть нужно? Ну, давайте пример ландшафт.
Задача такая. У вас есть какая-то карта, ну, карта горной местности или не обязательно горной местности, просто произвольной местности,
где вы для некоторых точек знаете высоту. Да, то есть понятно, что у каждой точки на Земле есть какая-то своя высота над уровнем моря.
Вот если локально моделировать там поверхность как плоскую поверхность, то у каждой, ну, не как плоскую поверхность,
а как плоскость, над которой есть как бы вот какая-то фигура Земля. То есть, грубо говоря, мы говорим, что есть нулевой уровень, нулевой уровень моря,
а дальше Земля вот как-то там над ним сверху находится. То есть вот это плоскость моря и Земля это там вот какая-то такая горная штука над ней.
Просто motto.
Начинаем localized limit.
Земля это уровень моря.
Как, откуда нам могут быть известны вот эти вот высоты над уровнем моря в каждой точке.
Ну, понятное дело, что нам не может быть достоверно известна высота в каждой возможной точке, скорее нам известно что-то дискретное.
Скажем, нам известна высота в этой точке, в этой точке, в этой точке, в эти точки, в эти точки.
Есть у вас просто несколько точек на плоскости, то есть если мы спроектируем все точки, в которых мы мерили, спроектируем их на море, то по сути есть просто много точек, в каждой из которых написано хоть число.
Высота h1, h2, h3, hn. Короче, есть несколько точек, в каждой числе это значит высоту.
А дальше ваша задача как-то по вот этим вот кусочкам, ну как бы частичным данным по измерениям в n точках, ну как-то довольно хорошо, довольно близко представить настоящий ландшафт.
То есть мы забываем, что нам известна конфигурация ландшафта целиком, мы знаем только измерение в n точках, и вот мы хотим теперь восстановить как бы сам ландшафт, ну как можно более, как можно тоньше, как можно лучше.
Ну здесь есть два способа, как можно восстановить ландшафт. Давайте напишем восстановление, восстановление ландшафта по n точкам.
Первый способ через диаграмму Воронова. Диаграмма Воронова. Начинает работать следующим образом. Давайте мы вот на этой плоскости, на уровне моря, давайте мы построим диаграмму Воронова для этих точек, для этих сайтов.
Вот здесь опять-таки будет какая-то такая картиночка, опять неправдоподобная у меня, ну бокс.
Так я нарисую, а совсем не стараясь. Вот какая-то такая диаграмма Воронова есть.
И чтобы смоделировать исходный ландшафт, давайте, окей, вот у меня есть какая-то ячейка диаграммы, и здесь есть какая-то высота htp.
Давайте тогда просто этот нагугольник, я подниму вверх на высоту htp, и тогда в пространстве у меня будет такая вот ступенчатая штука, давайте я нарисую, как могу.
А то есть там есть по этому нагугольник ячейка на плоскости, я поднимаю все клетки этой ячейки вверх на одну и ту же высоту, получается тоже нагугольник уже в пространстве.
Дальше был какой-то другой здесь нагугольник, я его тоже поднял на свою высоту, который соответствует той точке, которая внутри него лежит.
И вот так у меня получается такая ступенчатая моделирование ландшафта, такие ступеньки.
Ну в принципе неплохой способ, но конечно здесь все очень дискретно, очень разрывное.
Если скажем у двух довольно близких точек сильно разная высота, то у вас получается, что какой-то безумный скачок, что у вас ландшафт он даже не непрерывный, у вас есть такой скачок между двумя близкими точками.
Проблема это не непрерывность, проблема отсутствие непрерывности.
Второй способ это как раз через треангуляцию пойти, треангуляция, я буду писать так треугольник, для краткости треангуляция.
Что это значит? Вот давайте я на исходном множестве точек, на исходном множестве сайта, где я померяю высоту, построю какую-нибудь треангуляцию.
Давайте здесь опять-таки это сделаем. Вот есть точки, давайте есть какая-то треангуляция.
Дальше я что знаю? Я знаю для каждой точки, для каждого сайта, я по сути знаю высоту этой точки, где она над уровнем моря находится.
然後 давайте теперь все эти точки поднимем на нужную высоту, и треугольники у меня тоже поднимутся.
Получится, что каждый треугольник станет наклонным к треугольнику между сайтами, где мы знаем высоту.
То есть такая картинка превратится во что всё такое. Есть у меня точки какие-то, то есть я каждую точки поднимаю на свою высоту.
Дальше здесь треангулируется треугольник, треугольник, такой треугольник, такой треугольник, такой треугольник.
То есть это уже какая-то более адекватная штука, она будет, конечно, уже непрерывная,
потому что на каждом треугольнике у меня такое непрерывное движение,
и сшиваются два треугольника по общему куску ребра, которые тоже являются отрезком из одной точки в другую.
То есть сшивка разных наших кусков функций тоже непрерывная.
Поэтому тоже будет непрерывная функция, в принципе, это уже что-то более адекватное.
Здесь есть непрерывность.
Хорошо, но давайте еще рассмотрим такой пример, почему любая тренгуляция нам не подойдет.
Например, давайте моделируем какую-нибудь узкую гору, такой горный хребет,
и, соответственно, набор высот, который мы намерили, может быть, например, таким.
Здесь по бокам нули, какая-нибудь равнина, почти что затопленная водой на уровне моря,
а здесь какая-нибудь узкая, но высокая гора, скажем, число порядка тысячи.
То есть в идеале мы хотели бы нарисовать ландшафт какой-то такой.
Здесь что-то плоское, а здесь вот такой вот скачок, который соответствует нашему горному хребту.
Вот что-то такое мы хотели бы нарисовать.
Вот это примерное наше то, как выглядит ландшафт.
Я, конечно, ужасно нарисовал, давайте лучше сделаю.
Так это выглядит, все. Ну и там так спускается.
Здесь есть, конечно, хорошая тренгуляция, например, что-то вот такое.
Сейчас давайте, можно нарисовать что-нибудь такое.
Если рассматривать вот такую тренгуляцию, то, в принципе, все получится нормально,
потому что здесь будет треугольник, лежащий на плоскости,
здесь просто эта точка, она поднимается на высоту тысячи,
а здесь будет такой треугольник наклонный, как раз вот что-то такое.
Значит, здесь тоже самое будет такой треугольник наклонный с высотой тысячи.
Короче, так будет нормально. То есть какая-то ангуляция нам подойдет.
Но если мы рассмотрим плохую треангуляцию, сейчас я ее нарисую.
Например, давайте рассмотрим треангуляцию, в которую входит вот, скажем, такой треугольник.
Ну да, скажем, просто вот так.
Это есть, и вот это есть.
Вот такие два треугольника, скажем, есть.
Тогда, смотрите, вот здесь, поскольку у меня высота ноль, и здесь высота ноль,
то весь вот этот отрезок, весь отрезок между ними,
тоже соответствует куску треугольника на высоте ноль, то есть здесь в виде нули.
Эти точки не подозревают даже, что в этом же треугольнике есть совершенно высота тысячи.
И получится в нашей треангуляции какая-то такая штука.
Вот есть один треугольник какой-то такой, есть другой треугольник какой-то вот такой.
Ладно, забейте, тяжело рисовать.
Короче, у меня получится, что в нашем горном хрипте есть такие просадки на нулевую высоту.
Вот эта высота тысяча, она потом переходит в высоту ноль, потом опять тысяча,
а потом, если опять такая же плохая треангуляция, то будет высота ноль.
И так далее. То есть вместо какого-то непрерывного хрипта мы получим вот такие вот
постоянные скачки от тысячи до нуля, от высоты тысячи до высоты ноль.
Понятно, что это что-то плохое.
И один из выходов, который на практике помогает, это избавляться от,
какая проблема, можно на этом рисунке понять, что мы, по сути, взяли треугольник с очень маленьким углом.
И, короче, на практике часто так бывает, что угол, чем меньше, тем менее адекватному треугольнику он соответствует.
Ну, как у нас здесь есть какой-то маленький угол, то есть это значит,
он такой длинный, тонкий и как бы соединяет далекие точки.
То есть даже если там какие-то близкие высоты, там ноль-ноль,
то третья вершина может быть с какой-то очень-очень другой высотой.
А мы такого не хотим.
Но на практике часто пытаются вот этот вот минимально возможный угол максимизировать.
Здесь проблема.
Это так называемые тонкие треугольники, то есть маленькие углы.
То есть маленькие углы.
Маленькие углы.
Ну и отсюда, собственно, и возникает задача.
Это таким образом триангулировать наше множество сайтов,
чтобы минимальный из углов всех задействованных треугольников был как можно больше.
Найти триангуляцию, в которой минимальный угол максимально.
Значит, среди триангуляций нам нужно искать вот в каком-то смысле экстремальную,
в которой все углы ограничены снизу каким-то там часом радиан как можно больше,
чтобы у нас не было очень таких тонких выраженных треугольников.
То есть эти треугольники, они почти что близки даже к отрезкам.
То есть здесь, если такой маленький угол, то это почти что даже выраженный треугольник,
почти что просто отрезок, если эта точка очень недалеко отстоит вот под стороны.
Вот с таким мы хотим бороться.
Хорошо. Ну и вот, собственно, триангуляция Делане – это ровно то, что нам дает триангуляцию с минимально возможным углом.
Давайте пока не будем формально писать, что такое триангуляция Делане.
Мы потом позднее докажем, что если правильно задать триангуляцию Делане,
мы чуть позже это определим, то в ней минимальный угол будет максимально возможным.
А пока что давайте мы докажем опять утверждение про линейность размера триангуляции
и даже то, что в любой триангуляции одинаковое число ребер и треугольников.
Значит, пусть есть триангуляция множества из n сайтов,
причем на границе выпуклой оболочки этого множества, он в p, лежит k сайтов.
То есть мы поняли, что на выпуклой оболочке бывают сайты, это ничего не проявляется.
Вот пусть их суммарно на k, учитывая в частности точки на сторонах, то есть не только на границе, но и на сторонах.
Да, ну и причем не все сайты на одной прямой.
Тогда утверждается, что в этой триангуляции, то есть на самом деле в любой триангуляции
по данному множеству точек, ровно 2n-2-k треугольника и 3n-3-k ребер.
То есть если есть какой-то набор сайтов, на выпуклой оболочке которого лежит k сайтов,
и причем не все сайты на одной прямой, тогда какой бы мы триангуляцию не рассмотрели,
в ней обязательно одинаковое число треугольников и одинаковое число ребер.
Доказать все это опять формула Эйлера.
Связанность здесь очевидна.
Очевидно, потому что поскольку триангуляция в объединении дает всю выпуклую оболочку, то понятное дело там,
но по сути каждая точка просто покрыта таким треугольником.
Чтобы доказать связанность, давайте рассмотрим любые две точки.
Они покрыты каким-то треугольниками, и грани, точнее границы, вот эти стороны тоже каким-то покрыты,
и мы можем так переходить, чтобы попасть в одно треугольник и в другое.
Связанность здесь на пальцах просто доказывается.
Что мы тогда знаем? Мы знаем, что число вершин.
Но число вершин мы знаем. Здесь n вершин. Давайте я напишу опять-таки формула Эйлера.
Вершины минус ребра плюс грани.
Это двойка.
И пусть всего m треугольников.
Пусть m треугольников наша треангуляция.
Хорошо, тогда вершин ровно n, потому что мы в качестве вершин рассматриваем только сайты, n сайтов у нас.
Дальше минус e ребер и плюс сколько будет граний.
У меня m треугольников, это ограниченные грани, и плюс есть одна неограниченная бесконечная грань,
которая равна плоскость без выпуклого оболочки.
Поэтому грани у меня будет ровно m плюс 1.
Теперь давайте еще причиняем число ребер.
Ребер у нас на самом деле будет 3m плюс k пополам.
Потому что в каждом из m треугольников ровно 3 ребра.
Дальше у внешней грани ровно k ребр.
Потому что раз k сайтов лежит в выпуклой оболочке, то получается ровно k отрезка.
Каждый отрезок это ребро внешней грани.
И все делим попothам, потому что таким образом я каждую сторону précédентно적 почитал 2х.
Каждую сторону между двумя треугольниками я почитал от 2 треугольников,
а если сторона это часть выпуклой оболочки, то она от треугольника пришла и от внешней грани.
Поэтому нужно поделить пополам, чтобы как раз каждый ребер посчитать по 1 раз.
В итоге получается уравнение n-3n плюс k пополам плюс m плюс 1 равно 2, но отсюда все следует.
Отсюда следует, что m это 2n-2-k, то есть мы решаем просто линейное уравнение, получаем, что m ровно вот такое,
вот это будет m, ну а шлой Ребер считается уже по вот этой форме.
Все. То есть опять линейный размер, линейное число треугольников, линейное число Ребер,
и причем нам даже не важно, какая именно эта треугуляция. В любой треугуляции будет ровно столько треугольников, ровно столько Ребер.
Хорошо. Так, ну смотрите, поскольку времени особо не остается, давайте мы определим, что такое треугуляция делана,
и пока что ничего не будем доказывать, все докажем в следующий раз.
Что определение? Пусть p набор сайтов, а ворот p это его диаграмма Воронова.
Диаграмма Воронова.
Тогда граф делан, не треугуляция, а граф.
Это вот что такое. Значит, вершины это сайты, вершины это сайты, то есть вершины ровно m по количеству сайтов,
а ребра соединяют сайты, ячейки которых имеют общий кусок границы положительной длины, то есть либо разделяют ребро,
либо разделяют общий луч. То есть ребра соединяют сайты, ячейки которых имеют общую сторону в виде ребра или луча.
Это граф делан. То есть мы просто взяли в качестве вершин наши исходные сайты, а ребра провели для тех пар сайтов ячейки Воронова,
которых пересекаются по чему-то содержательному, не по вершинке и не по пустому множеству, а по ребру положительной длины или по бесконечному лучу.
Это граф делан. Теорема, которую мы докажем в следующий раз, что граф делан на самом деле плоский.
Граф делан на плоский. То есть если мы просто таким образом проведем ребра, ну а ребра это прям вот отрезки соединяющие два сайта,
ребро это отрезок, и если нарисовать такую картинку, то граф обязательно будет все плоский. Вот как в этом примере, давайте его опять нарисую.
Есть 5 сайтов, есть диаграмма Воронова, вот такая вот. Соответственно, как здесь будет выглядеть наша триангуляция, точнее наш граф делан.
Вершины это сайты, а соединяются те сайты, ячейки которых разделяют общий кусок границы.
То есть в частности у меня вот эта вот будет соединяться со всеми четырьмя, потому что есть вот эти ребра в диаграмме Воронова,
которые как раз разделяют две средние ячейки, а также будут вот такие ребра проведены для всех вот этих вот вершинок.
Поскольку вот есть скажем вот этот луч, который разделяет наши две ячейки, значит мы проведем отрезок между вот этими двумя сайтами, которые отличают соседним ячейкам.
И утверждаю, что такая укладка этого графа, то есть просто если провести ребра в качестве отрезков, то получится у нас плоский граф, то есть без пересечений.
Ну это, наверное, докажем в следующий раз.
Ну и определение следующее, что теперь у меня есть вот этот граф делан, в нем некоторые игра не могут быть на самом деле не обязательно треугольниками, а произвольными многоугольниками.
В нем некоторые игра не могут быть на самом деле не обязательно треугольниками, а произвольными многоугольниками.
Так вот, триангуляция деланная.
Это триангуляция, полученная из графа деланная, из графа деланная, под разбиением всех граней на треугольнике.
Давайте быстро объясним, что это значит. Вы смотрите, я построил граф деланная, он у меня уже получился из триангуляции.
То есть есть наши пять точек, каждая граница треугольника – это уже триангуляция.
В общем случае это не обязательно так.
Может быть такое, что когда вы нарисовали такой граф деланная, у вас одна из граней будет, скажем, четырехугольников.
Ну или даже пятиугольников.
То есть, в принципе, грани этого графа, который мы построили выше, они могут быть нетреугольными.
Да, никто не запрещает.
И это происходит ровно в том случае, когда вот эти вот пять сайты, они равноудалены от какой-то одной и той же точки,
которая будет являться вершиной диаграммы Рано.
То есть какая-то точка Q, равноудаленная от больше, чем трех сайтов, вот такая.
То есть на этом круге лежат сразу четыре, пять, шесть много сайтов.
И тогда в качестве грани графа деланная будет вот такой многугольник выступать.
И дальше, чтобы получить реангуляцию этого...
Ну это потому что точек, это потому что сайты.
Давайте я просто произвольным образом доподразобью этот многоугольник на треугольнике.
Ну скажем, вот так.
И давайте здесь вставлю важное слово, любая реангуляция.
То есть мы получили граф.
Каждая грань, которая, как мы докажем, является выпуклым многоугольником.
И потом мы его просто подразбиваем на треугольнике, как угодно.
То есть неважно, я проведу вот такие две диагонали, или скажем, вот такие две диагонали,
как не проводи там диагонали, то есть как не дотреангулируй этот выпуклым многоугольник,
получим реангуляцию деланной.
То есть по определению треангуляцию деланной строится так.
Мы построили сначала граф деланной, потом каждую грань произвольным образом треангулировали,
и то, что получилось, это есть реангуляция деланной.
И мы докажем про эту штуку свойства, то что если так строить реангуляцию деланной,
то, то есть если так ее определить, то как раз-таки это будет реангуляция,
у которой минимальный угол максимально возможен.
Вот, ну тогда на этом все, и заканчиваем в следующий раз про деланной.
Спасибо, до свидания.
