Добрый вечер, переходим к изучению кратчайших путей графов.
На всех ребрах будут написаны числа, веса и стоимость верёжки.
И нас будет интересовать вопрос о том, за какое наименьшее расстояние, за какое наименьшему стоимость можно добраться до навершинки.
Отделение с нормальным графом, как я могу говорить, это стоимость на ребрах.
Формально можно определить так.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Добрый вечер, переходим к изучению кратчайших путей графов.
Расстояние между двумя крышинами равно минимальным крышинам.
Расстояние между двумя крышинами равно минимальным крышинам.
Расстояние между двумя крышинами равно минимальным крышинам.
Расстояние между двумя крышинами равно минимальным крышинам.
Расстояние между двумя крышинами равно минимальным крышинам.
Расстояние между двумя крышинами равно минимальным крышинам.
Расстояние между двумя крышинами равно минимальным крышинам.
Расстояние между двумя крышинами равно минимальным крышинам.
Расстояние между двумя крышинами равно минимαςrip youtubers ideia
Расстояние между двумя крышинами равно минимась resulting
1. Расстояние между двумя крышинами равно 1.1 m.
1. Расстояние между двумя крышинами равно 1.zione
1. Расстояние между двумя крышинами равно 1.osing
1. Ironablo 2. Earthx hold
1.Bromwells знаю
2. DPS
1. Part forecasting
Входит в ширину, а он начинает следующую задачу.
Он принимает нынешний граф, то есть граф, в котором до уива равно единица,
принимает также ненависть в С, и находит состояние вот в С до всей стороны.
Дальше удастся найти единицу.
С разрешу В, для всех хороших найти прошедшее состояние от С до В.
Вот, у меня фиксируется какой-то старший, оттуда я хочу посчитать все расстояния.
И вот код С, это всех по всевершим графу, я хочу найти прошедшее состояние.
А в данном случае расстояние по члену реверсу, то есть какой наименьший член реверс,
нужно пройти по графу, чтобы попасть в каждое направление до уива.
Вот, где здесь будет очень проста, то есть что алдейты будут работать примерно там.
Ну смотрите, мы знаем, что единственная вершина расстояния до которой ноль, это сама С.
Потому что на любое расстояние значит, что никуда идти не нужно, но понятно, что это только С.
Дальше, как выглядят вершины, до которых в состоянии 1?
Ну понятно, эти вершины, когда есть ребро из С.
Я все исходящие кебра рассматриваю.
Понятно, что для них до всех не страшно еметься.
И только для них.
А нет никаких других вершин, до которых есть не умеют еметься.
Дальше, до каких вершин есть два?
Ну, видимо, это те, которые вот как раз одну ребро из С взяли,
потом еще одну ребро взяли из той вершины.
Дальше рассматриваем все вот эти исходящие реверс.
И говорим, что до этих вершин, как сказать, равно не будет.
Ну и так далее.
У нас граф раскладывается из слои.
В каждом слое расстояние вот С у них какое-то фиксированное.
Ну и у нас как вот так.
Итеративно, слой за слоем мы их будем получать.
Вот, что если мы нашли слой с каким-нибудь фиксированным расстоянием,
то дальше нужно перебрать все из них исходящие ребра
и мы получим следующий слой.
Ну, вроде так.
Вот.
Ну, давайте я вот напишу, как это можно сделать.
Я заведу...
Да.
Первое, что мне нужно, я хочу завести с вами процедуру
раскрытие вершинки для удобства.
Раскрытие вершинки.
То есть раскрытие в каждом этих переборах всех отстоячих ребр
и обновление ответа для всех концов всех вот этих ребр.
Что я хочу от процедуры рейкспана?
Мы понимаем, что в рейкспане В
ведет себя примерно так.
Ну вот.
В.
Я хочу рассмотреть все исходящие ребра
и обновить ответ для всех вот этих концов всех этих ребр.
Ну понятно, здесь будет какое-то расстояние К,
но здесь расстояние К может быть.
Ну давайте так и сделаем, значит.
Для того, чтобы их синтез не сплощу.
Давайте.
Я сделаю цикл по всем ребрам,
лежащим по списке жевут В.
Вот.
То есть, а как обычно жевут В?
Это список всех ребр, которые торчат из зашинки В.
Ну и есть какая-то структура, которая хранит информацию про ребро.
Все, что нужно.
А как ребро характеризуется?
Ну, наверное, началом, концом, весом.
Если надо еще номер какой-нибудь, это атака,
то есть уникальный админификат.
Ну и такая структура,
которая отвечает за ребро.
Вот.
Так вот, чтобы админифицировать ребра.
Немного.
А...
Ну давайте просто обновим.
Давайте вот скажем, что...
Д.
Давайте для красности будем писать Д, а не И.
А потом будем писать, что D вот есть у шторку.
А где ребро Е,
идет из точки в ровную,
из точки в хвостикую.
Вот.
Д вот есть у шторку,
а линия сразу там уже лежала.
Да, потому что мало ли вдруг,
где этот шин уже и так ранее найден в категории короткого ответа.
Я не хочу его затирать.
Я не хочу его затирать.
Я не хочу его затирать.
Ответ я не хочу его затирать.
Я либо оставляю старый ответ,
либо пишу то, что было в В плюс 1.
Сделаю в В плюс 1.
Так работает эксплана.
Ну, в общем случае, здесь будет написано вместо единички
в верхнюю штуку В,
то есть если про Е.
Ну, пока что в нашем случае в случае дает просто единичка,
то же самое, что здесь.
Вот.
Теперь.
А как мне будет установлен смартфон БМС?
Давайте я заведу сначала вот эту миссию D,
где мы узнаем все расстояния.
Ну, будет БМС, да, это объекта.
Изначально мы скажем бесконечности.
Считаем изначально, что вот все расстояния бесконечности.
Пока что из D не докудываем до C.
Можно сказать, что в каждом 3D адреса 0,
потому что мы знаем, что как человек,
в каждом 3D адреса есть 0.
Вот, ну и давайте я заберу очередь вершины,
которые мне предстоит раскрыть.
То есть вот я буду в очередь складировать те вершины,
которые, как бы, я уже обнаружил,
но которые еще не раскрыл.
То есть я по вот этому вот графу
буду идти, к примеру, на танки.
Я сначала на S расстою, потом одну за другой
буду раскрывать вот эти вершинки,
и пока я их раскрываю,
вершинкой следующего слоя тоже очередь добавляюсь.
То есть я вот так вот по первому слою
и в это же время я добавляю в очередь все вершины
с второго слоя.
Вот, в очередь у меня нет вершин.
Повторяю очередь вершин.
Изначально я в очередь добавляю вершину S.
Я так, единственное, раскрываю.
Дальше, пока у меня есть вершины, которые
нужно мне раскрывать,
там по карту не пустая.
Я достаю из очереди
первую вершину.
Будучка top.
Сразу ее удаляю
из очереди.
Раскрываю.
Вот.
Раскрываю.
И мне нужно для всех тех новых вершин,
которые я только что увидел, да?
То есть, когда я сразу вот эту вот слою осматриваю,
мне нужно добавить в очередь все вершинки,
которые я только что увидел в первый раз.
То есть, когда я увидел
новый путь.
Раньше я их вообще не видел.
Раньше было дыра, но было бесконечно.
Теперь я увидел, что теперь остается
не двое вершин.
Ну, их надо в очередь больше балансить.
Давайте перепишем.
То есть, по факту, я перепишу Ришпэн,
только с условием того, что я еще
новые вершины добавляю в очередь.
Перебираю вершины,
то есть,
напишу это так.
Если
д под конца
этого вера было равно плюс бесконечности,
тогда, ну, во-первых, мне нужно
это растение обновить.
Ну, скажем, что
две вершины с одином.
Вот.
А во-вторых, мне вершин
надо добавить в очередь.
И двух вершин.
Ну, вроде бы и все.
По сути, вот то, что здесь
написано.
То есть, я раскрываю,
обновляю состояние все, которые
получил.
То есть, у меня двух вершин.
Какой-то длинный, у меня будет 30 секунд
до дешевого, длинный один побольше.
Ну, давайте покажем
корректность
подтверждения.
Во-первых,
то есть,
ДФС
выбирает вершины.
То есть, я рассматриваю вершины,
порядка застанет, нет?
Ну,
ну,
ну,
ну,
ну,
ну,
это не умывание
значения для
вот такой скорых.
Почти пишу так.
после рассмотрения последней вершины
со значением t равно k
когда у меня BFS, рассмотрел все первые k-слоёв
и катастрофь тоже полностью рассмотрел
к моменту рассмотрения последней вершины с d равно t
у меня все вершины с состоянием не больше k-плюс один
найдены и в них написано правильно d
давайте подишем так, чтобы не было и не было
если расстояние BFS могло не превосходить k-плюс один
то с d-о-тру корректно найдены
я не говорю, что для всех вершин я нашел ответ
я говорю, что я нашел правильный ответ только для тех вершин, до которых расстояние больше k-плюс один
во-вторых, в очереди будут лежать все вершины, до которых расстояние ровное
в очереди лежат в точности все вершины, для которых расстояние равно k-плюс один
когда я осмотрел левое 1-2-ое педали ката-слой
к моменту разрешения рассмотрения ката-слой
у меня в очереди будет лежать полностью k-плюс 1-2-ой
вот что ожидается на этой доске
если мы это докажем, то у нас получается такое впечатление
что BFS правильно находит все расстояния
именно потому что он работает по слоям
сначала он правильно обработал левое 1-ое педали ката-слой
дальше добавил BFS 1-ое педали ката-слой
то есть BFS находит правильные листи
BFS находит корректное расстояние
и причем делает он это за линейное время
потому что ввиду этого выпущения, ввиду первого пункта
каждый решинка мне размножится всего один раз
и суммарно время раскрытий будет по отэму
чтобы суммарно работать все расстояния
каждый решинка добавит всего один раз
и суммарно все экшванышни работают по отэму
каждый решинок добавит всего один раз
давайте впечатления указать
ну, первое, это совсем понятно
просто так алкоголиками устроим, что сначала есть только одно
нулевое значение в массиве D
потом, если я рассматриваю решение, если D в углу РК
я добавляю только большее значение
значит, извлекаемое без того, что ростовое
я добавляю только большее, значит, извлекаемое значение может увеличить
вот, почему вот это верно?
давайте покажем
1, 2, 2
2 за карамон 0
очень видно, что происходит с карамоном 0
при карамону 0 я говорю, что у меня в очереди изначально лежит только С
после рассмотрения этой самой последней вершинки, то есть после рассмотрения С
ну понятно, когда я все рассматриваю
я как раз нахожу все вершины на расстоянии ровно один
и все их добавляю в очередь
значит, к моменту завершения рассмотрения любого слоя
у меня в очереди будут лежать все вершины только первого слоя
понятно?
вот, вот переход
спустит верно для РК
а что это значит?
это значит, что я нашел все вершины на расстоянии большего слоя как раз один
и в очереди лежат все вершины на расстоянии ровно 2
как раз 2
то есть я рассмотрел все предыдущие слои, теперь в очередь у меня просто вот этот карпус 2
ну дальше как об этом говорить?
дальше он рассматривает целиком один свой
все эти вершины раскрывает
и все, что из них достижено за одно репро, добавляет опять в очередь
но тогда понятно, что с одной стороны все вершины в сцене карпус 2 мы найдем
с другой стороны ничего лишнего не добавят
поэтому мы же и дуем
да, то есть еще раз, когда я рассматриваю целиком свой
во-первых
ну понятно, я добавляю только вершины, которые я еще не видел
значит в очереди, в конце рассмотрения этой очереди
добавят только вершины на сцене карпус 2
и они добавятся все, потому что если есть какой-то путь
а если есть какая-то вершина с расстоянием равном на карпус 2
то можно рассмотреть на этот путь и последнее репро
тогда на этой вершине расстояние равно карпус 1
и значит нам отдельно здесь в очереди присутствует, а значит я вот эту вершину должен добавить
то есть если лишним не добавлю, с другой стороны все, что нужно, я тоже должен добавить
надо подробно делать
вот
вот понятно
ну все, чтобы работать за линией, находить расстояние будет с, до всех станет хорошо
хорошо
хорошо
так, ну теперь небольшое обобщение
называется ноль-капель
это обобщение, это балдаритма
на случай, когда у нас висовая функция не совсем такая групповая
и схема бревна и ничек представляет
а это случай, когда все веса это целое число отряду капель
маленькие целые числа
я считаю, что здесь какой-нибудь кайф, небольшое целое число, там типа 15
ну идея здесь следующая
что мы делали это раньше
я просто, я довел одну большую очередь, в которую сваливал все вершины по мере их находения
а и так получалось, что я находил вершины порядка увеличения расстояния в них
вот и просто в этот порядок шел, шел и находился в новой вершине
теперь давайте что-то по-другому сделаем
давайте я заведу явным образом для каждого расстояния
для каждого х
очередь вершин с расстоянием ровно х
а вот для каждого х
заведем очередь
очередь под х
куда будем складывать вершины с расстоянием х
машина
с наденьем расстояния х
вот, то есть не в одной очереди все пройдется
а по слоям, попробуем говорить
у меня есть, скажем, с
в любой слое отдельно будет первый слое
второй слое и так далее
и для каждого слоя будет своя очередь
вот не в одной, а по девять
вот, ну во-первых, скажите, пожалуйста, какое еще ограничение на х?
сколько нам достаточно для очередей?
ну да, точно хватит вот столько очередей
потому что, как я уже сказал, в случае неоприцательности всех игр
ребер достаточно рассматривать только простые пути
пути без цикливаний
а значит на всех этих путях максимум n-1 ребра
то есть мы где-то начинаем, где-то заканчиваем
и никогда не повторяемся, не зацикливаемся
то значит различных ребер там максимум n-1
ну, то есть даже можно было бы у нас с вами написать там
х на минус 1, но не буду, не буду встать
пора встать на констанцию
вот, значит, n, ребер по другому ряду пути
и каждый имеет вес максимум k
ну вот, заведем столько очередей
и дальше будем делать иначе похожее
так, ну, здесь давайте напишу
вот тут будет сфальт
и сфальт будет работать
к скрэншу, а, скрэншу, к химии в
вот здесь совершенно в
а я вижу, что у него опять где-то дикие коллекции урок
причем они могут быть уже разными кусок
ну и, наверное, я хочу сказать, что если у меня
если мне неизвестен какой-то акуль в ход пресса
скажем, в состоянии отверстия
то дальше я пусть могу продлить приклеиванием
вот каждый из этих, получить путь
новой длины до всех вот этих вот крышин
ну и давайте опять-таки обнолим
до всех вот этих крышин кратчайшее расстояние
через вот этот путь, вот этот вот
дай дальше, плюс приклеивание
вот, ну, посмотрите, здесь может быть такая закройстка небольшая, что
давайте в картинку нанесем
вот так
вот так
смотрите, если я начну вот в этом графе работать
с, тогда у меня сначала одно понятно
вот до этой вершины будет найдено расстояние 1
до этой вершины будет найдено расстояние 10
в частности, вот эта вершина поместится в десятую опцию
ну, потому что до ее найдения длины 10
эта вершина будет держать в десятую опцию
но с другой стороны, потом, когда я буду рассматривать вот эту вершину уже
я найду до нее более короткий путь длины, суммарно, 2
вот в этой левая веточке путь будет длиной 2
а значит к этой вершине я опять добавлю тоже в очередь
вот во второй лодке
то есть я изначально нашел путь длины 10
а дальше смогу просто пройти до пути длины 2
ну и так возможно
каждая вершинка может быть в нескольких очередях
если я до нее нахожу все более и более короткой пути
значит, в принципе, в этом самом случае может быть в нескольких очередях
в каком наибольшем количестве очередей она может покупать?
ну, то ли k, то ли k плюс 1, да
в самом деле, видимо, k плюс 1, потому что
сейчас или k
нет, получается k плюс 1, да
потому что, например, есть вершинка s
из нее есть ребро веса k
какую-нибудь нашу вершину 2v
и дальше по ребрам нулевого веса, например
достижены вот такие вот
ребра 1, 2, и так далее
тогда если я сначала найду до корей
добавлю вершину k в очередь
потом обработаю вот такой путь
добавлю вершину k в очередь в первую очередь
и так далее, в конце концов набуду в 0,8
ну, не важно, главное, что вершину нужно
покупать в нескольких очередях сразу
и чтобы нам не раскрывать одну эту вершину много раз
потому что, ну, нет смысла, если мы вершину уже когда-то раскрыли
на меньшему расстоянию, нет смысла ее раскрывать на большем расстоянии
потому что это нам не даст уменьшение пути
а откуда нам знать, что она не может выбывать в большом количестве очередей, чем k?
ну, давайте осмотрим первое время, когда она добавится
пусть она добавится в очередь на 0,8
Как она могла туда добавить?
Я рассматривал нашу вершину
Нашел рифро, вес не больше k
Так что суммарно
Здесь получается расстояние x
Тогда понятно, что она могла добавить
сколько больше здесь номеральных
Вот вот этой и вот этой
Ну окей, давай
Пусть вот досюда
было расстояние k
Пусть здесь написано
Какой-нибудь вес, да?
Вес не больше, чем k
Тогда вот эта вот вершина добавится
в очередь номером l плюс w
Понятно, что в очередь
с большими номерами мы ее добавлять не будем
Потому что мы добавляем только, если мы нашли
как-то более круглые ответы
С одной стороны, мы ее нашли
Мы добавили ее в очередь
С другой стороны, мы в этот момент
раскрываем вершину l и очередь
То есть мы нашли v, когда раскрывали l
Ну тогда потенциально
l могла купать только в очереди между ними
l плюс w
Потому что меньше путь, чем до v
будет не может, потому что
мы докажем это, что
если мы раскрываем вашу круглую
а v еще не найдено, значит до v
не может постоянно быть меньше, чем до v
То есть мы будем раскрывать вершину
в порядке увеличения в тюрьме
Поэтому до v путь меньше, чем до v
будет не может
Значит, это могло быть l плюс w
и здесь как раз максимум капусты
Вот, но мораль была такая, что
потенциально я буду брать в несколько очередей
и поэтому я буду входить в гулевский флаг
раскрывал и я буду отвергать
И если я вза мной раскрывал
если я его не раскрывал
то я просто сделаю v
а иначе сразу
вымешать и раскрывать
Ну дальше делаю обычно раскрывать
и перевернуть все ребра
И если я до этого вершины
нашел более короткий путь
то добавляю эту вершину в очередь в нудную
по всем ребрам
Давайте сберем тот самый x
равный d от v
плюс стоимость ребра
то есть e точку w
Дальше тот самый x
В какую очередь нужно положить вершину w
e точка t
Ну и если это реально осмысленно
то есть если расстояние до нее
больше чем x
то я кладу туда x
и добавляю эту вершину в x в очередь
Конец
Здравствуй, Кирюш
Вот, ну и собственно
самая крутая скачка будет
если он заводит
в чучь очередей
0 до nk
изначально в нудную добавляет s
дальше идет моим очередям в порядке
разрастания номера
и раскрывает следующую кинемию
дальше в цикле по x
от 0 до nk
ну давайте я просто пишу
пока код x не густо
значит раскрывает следующую кинемию
раскрывает
раскрывает
следующую кинемию
я просто иду по слоям
и раскрываю в том же порядке
что у меня был в обычном вирфейсе
просто в порядке застанем номера
так, ну давайте к этому кинем
разоряканность
я знаю что
после
рассмотрения
x в очереди
в x в очереди
а в нудную добавляю
в нудную добавляю
в нудную добавляю
в нудную добавляю
а
а вот так
после рассмотрения x в очереди
все вершины
все вершины v
расстояние которых меньше
чем x
во первых будут раскрыты
во вторых
до них будет найдено правильное расстояние
будут раскрыты
и
до них найдено правильное расстояние
как раз
в этом процессе
обхода всех очередей
левая, фера, вторая и так далее
и дальше внутри каждой очереди
просто раскрыты все вершины
пока очереди не опустеют
к моменту завершения
рассмотрения x в очереди
все вершинки с расстоянием v
будут найдены
до них будет просчитано правильное расстояние
и более того будут раскрыты
через них все остальные ответы
так
если в сервисе будет больше x
то я неужели раскрыл
и до всех соседей тоже ответ
уже как бы обновил и пересчитал
так, ну до церкви
будет церкви x
база
x равно 0
что такое x равно 0?
мне нужно понять
когда завершится нулевая расстояние
ну изначально там лежит только tс
но потенциально
туда можно еще что-то добавлять
потому что если внезапно
не создаётся есть ревро нулевого веса
то они тоже будут добавляться
в ту же самую очередь
потому что до них расстояние будет тоже нулевым
они будут постепенно добавляться вот здесь и там
если x 0
и вес будет 0
тогда будут добавляться все на нулевую
но это нормально
главное что смотрите
Ψ
то я точно найду все верхи на сцене 0
ну если я разм restoлю ревро нулевого веса
то все что достельно к ревру нулевого веса из с
я точно обойдусь
я сначала рас häрс
и получу такие першинки
теперь мы격м раскроем
– и т.д. wounds
понятно что я нашел все вершиныdog
если я поочеленно буду все вершины раскрывать
то это за решение нулевого веса
то значит найдется
вот, значит будет момент времени
понятно, что очередь целиком обойдет все вот эти вот вершинки
до них найдет правильное расстояние равное нулю
и все их расстроят
поэтому база более или менее чрезвычайна
надо обратить за решением, что нулевой вовсе нет
вот нуля
побывает
все вершины
в расстоянии до которых одно нулю
ну и, конечно, только
ни каких-либо других вершин это больше не будет
ну и понятно, если они в очередь поповали, то они сейчас уже раскрылись
ну теперь переход
переход вот эти насадьи
вот
то есть я считаю, что в моменте
решения цимуста первой очереди
я ее все рассмотрел
нашел все вершины в расстоянии не больше нити минус один
и все их раскрыли
ну давайте поймем
то есть теперь что?
теперь нам нужно показать, что все вершины на расстоянии х будут рассмотрены в этой очереди
и раскроются
все вершины с меньшим расстоянием уже
они уже доказаны
теперь мы рассмотрим путь вершин на расстоянии х
в своем договаривании
х на миллионов на микс
дырный микс
мне нужно доказать, что эта вершинка побывает
в очереди с уровнем х
и раскроется
а я за нее найду край вот этой
ну хорошо, вот если здесь путь
имеет вес х
то давайте рассмотрим вот на эту пути
вот последнюю вершинку
на которой расстояние не х
это такая вершина
на пути, что она может стоимость уменьшиться
ну понятно, если все суммарно х
то у меня может быть несколько
последних, которые нулевые
ну я вот сейчас
нахожу первое не нулевое его
и смотрю на его начало
это последняя вершина
на этой пути
расстояние которой не х
такая же, что
расстояние у нее
уменьшилось
вот
ну тогда понятно, что
по предположению нукции
у была уже рассмотрена
да у нее было найдено правильное расстояние
и она была раскрыта
а если у меня
у меня есть
у меня есть
у меня есть
и она была раскрыта
да, значит
по предположению нукции ум
проскрыта
ну раз она раскрыта
то значит в частности вот в этой вершинке
тоже найдено правильное расстояние
потому что у меня вот
все эта часть одного простащего пути
я знаю про чьем состояние вот крестного ум
и еще плюс этой вершинкой я тоже добавил
в компьютером участие
вот, ну а дальше здесь серебрами
это его местная пути
и я рассматриваю
последнее не нулевое ребро
а дальше у меня будет куча нулевых ребр
и понятно, что если вот эта вершинка
Т
я ее добавил, понятное дело в очередь
и дальше из нее я увижу все ребра нулевого веса
точно так
если у меня Т в очереди
значит по ребрам нулевого веса
я тоже все буду потихонечку раскрывать
значит Т у меня тоже
просмотрено
да не будет найдено правильное расстояние
ладно, что у нас просмотрено
до Т
найдено правильное расстояние
правильное расстояние
и она
лежит в X, конечно
значит
В тоже
все будет нравится
похоже на право
просмотрено
а Т точно попадет в X
не в X минус первую
если до У расстояние
скажем для определенности
Х минус один
ведь до Т нулевое ребро
я взял на последнюю
на которой расстояние меньше Х
до всех нулевых ребро ровно Х
то есть между У и Т не нулевое ребро
между У и Т не нулевое
по факту рассматриваю
последнее не нулевое ребро
вот это не ноль, а все остальные
ну хорошо
тогда давайте перейдем еще 5 минут
потом продолжим
вот здесь будет
такая
карту С
ну почему
на эту слоганную облему
оно берется от того, что каждая крышина будет раскрыта
максимум один раз
за счет того, что я восстановил коллажончик
а эта крышина раскрыта
я больше ее не раскрываю
поэтому суммарно
она будет раскрыта на один раз
ну а НК
потому что у меня НК 4
и каждая крышина потенциально может быть
запушена максимум
как раз к капусту на очередь
показали, что
если крышина впервые была добавлена в очередь
в номер Х, тогда потенциально она может добавиться
в очередь из минус один, а если вдвоем взяли под
Х минус К
а меньше в очередь добавлена быть не может
потому что она должна была быть рассматривана как раньше
ну значит суммарно
НК примерно
один, ну не важно
вот
ну и поэтому суммарно
10 будет прекрасно
вот
ну это очень хорошо, если
маленькое число какое-нибудь
да, если в НК все может быть
так, ну это
последняя вариация
ВФС, это второнний ВФС
второнний
второнний ВФС
ВФС
здесь
задача такая, что у вас
данные
у вас граф показывает
опять нерфешные, то есть серебрайничного веса
вот
и вам дадут две конкретные вершины
между которыми есть какие-то расстояния
вот, то есть не вот одной до всех
а от одной до другой
конкретной, другой вершины
ну понятно
в частном случае обычного ВФС
можно будет делать обычный ВФС
в частности
мы тогда получили здесь вот ДСДС
но вот здесь можно сделать
второнний ВФС, который иногда работает
чуть-чуть эффективнее
больше, чем когда надо
ну идея очень простая
давайте просто ВФС запустим с двух сторон
у нас сначала
мы скажем, с решенной стене будет
1.С
и на сцене 1.С
потом от НИР
найдем все решенные на сцене 2.С
от НИР решенные на сцене 2.С
ну и так далее, в каким-то состоянии будем идти, пока они в перегрузе не перезерутся
я нашел на позицию
на расстоянии К здесь
и на сцене К здесь, и не больше
то есть ожидай вот этих областей
и выиграй здесь
вот, и тогда ты узнаешь, что
расстояние ДСДСС
правильное расстояние
будет странно
видим
по всем промежуточным решением М
расстояние играется так
ДСМ
плюс ДТМСМ
ну где ДСМ
это то расстояние, которое приходится
к расстоянию ДСДСС
это тот ДССС
то есть ДЗОДСС
ДСПМТР
это то расстояние, которое приходится к ДТМСМ
вот
вот так вот, да?
ну да
ну, а если здесь я вам что-то сказать
нормально, что то факто
прозвучает параллельно к ДВДССС
первый
это обычный BFX
на обычном графе
который по слоям все рассматривает
а второй
это на самом деле BFX на обратном графе
потому что мне нужно сказать
вот это вот
поэтому мне лучше было
вот эти все ребра развернуть
я вожу противоположную ориентацию
все ребра инвертирую
и запускаю BFX
на реверсный граф
на реверсный граф
здесь реверсный граф
и все направления к инвертирую
потому что мне нужно идти противоположную ориентацию
вот
давайте еще раз пропишу сюда
как бы завершаем
когда будет финальная
вершина
или как бы
собеса
когда
будет финальная
вершина В
просмотрена с обеих сторон
и дальше я скажу
что вот эта вершина вот эта
вот
заметьте
я не утверждаю
что расстояние обязательно будет
через эту вершину В
возможно оно будет как по-другому
то есть
не всегда
правильный будет вот эта вершина
вот эта вершина
которая вы нашли
а
ну сейчас
заметьте
а
а
цветы вот перед ней
если вы может не нашли
значит нас
меньше
ну как бы то да
ну дело в том что мы могли
найти за одно расширение
сразу много вершин
если какую-то мы нашли первой
это еще не значит что она подходит
наверное
ну ни в кого да
тогда будут расширенные вершины
да у меня больше капель секунды
я полностью рассмотрел
давайте так
я делаю так
я сначала нашел первый свой с обеих сторон
потом второй свой с обеих сторон
я пересекся когда они впервые пересеклись
то есть нашлась вершина с обеих сторон
я до конца обрабатывал оба слоя
с левой и с правой
и вот после этого нахожу вот эту вершину
давайте совершим охот
когда
будет найдена вершина
и будут целиком
а мы имеем оба слоя
и будут целиком рассмотрены оба слоя
вот еще
вот это
почему нужно
лечь свой слоя
рассмотреть
может не нужно
давайте я делаю так
сейчас докажу потом пойму
может быть там что-то там
например давай так
почему-то это верно
ну смотрите если
поскольку у меня есть вот эта вершина
которая попала в оба облачка
с левой и с правой
то я точно знаю что расстояние
не больше чем 2к
я прям железно знаю
если я с левой обработал целиком
с левой и с правой
и они пересеклись значит есть
будны не больше чем 2к
ну теперь понятно
ответ не больше чем вот столько
и примерно такой величины
я не нашел
я знаю будны
что-то в этом
ну пусть есть только более
короткий путь
предположим что будет расстояние
меньше чем 2к
ну давайте мы нарисуем
давайте мы нарисуем
пусть на пути
я в кзт л и
л меньше чем 2к
ну смотрите
во-первых если незаметно есть
не больше чем 2к
тогда
такой путь я точно найду
если л не больше чем k
то ну этот путь будет найден
потому что я целиком слезу
то есть я по парку расширялся до 2к
если я попала не больше чем 2к
то я точно найду
вот здесь
3т равный т
я получу правильно
т
обнаружится
одна руки на слева
следует
тс т
будет правильно
ну а иначе здесь
если это будет достаточно большое
то давайте рассмотрим на этом пути
типа вершинку с номером k
давайте рассмотрим вершину
по расстоянию которой ровно k
вот здесь вот получается
точность и карера
здесь вот да вот здесь
карера
значит тогда вот внутри
там найдется сколько
л минус k
с одной стороны с другой стороны
поскольку л меньше чем 2к
то здесь меньше чем k
вот
ну значит м будет найдена с обеих сторон
с левой и с правой
то есть м лежит
на расстоянии k по л дс
значит будет найдена
потому что я k с этой стороны посмотрел
то есть с правой стороны
то есть с стороны d
потому что здесь я тоже k смотрел
в этом случае
м будет
найдена с обеих сторон
не совсем
смотрите я
утверждаю что
нет я просто хочу
доказать
что минимум вот этот
минимум в правильном расстоянии
как я это делаю
я говорю что если оно
ровно 2к то я вот здесь
нашел
если оно вдруг меньше
то я утверждаю что
если оно меньше
то я утверждаю что существует
такое дым для которого
такая сумма равна тому числу
я здесь не делаю
я знаю что отсюда до сюда
я нашел расстояние k
и отсюда до сюда я нашел расстояние m
вот эти расположенные правила
их сумма равна тому числу
если будет более короткий
то я знаю через какую центральную
решению
ну наверно это можно уточнить
на случай когда я читал
по ссылке в описании
под видео
так
ну а так вроде бы доказать
вот то есть за счет
это может быть нужно
как раз вот так
инстинкционно расширяющаяся графка
представьте что у вас
есть какая-то решетка
и у каждой расширы примерно
одинаковое количество средей
Каждый раз, когда он приходит в вершинку, у вас появляются несколько новых соседей
Здесь выгибает вам 3 таких соседей
У каждого из них, давайте, там, еще 3 таких новых соседей
И каждый из них опять еще дает таких новых соседей, и так далее
То есть у вас будет походка, там, каждый свой специально растет, каждый раз все три раза
И то же самое с названием D
У D есть соседа, у каждого из них есть 3 новых соседа
И так далее, драф потенциально растет
Ну и вот теперь представьте, что если вы этот драф ухранить как бы не хотите
Нам, например, ждать минуту
Сейчас потом может быть можно, если вы какую-нибудь головоломку решаете
У вас вершина графа, это состояние головоломки
Где какие числа таблички распологены
Как именно киньти кубики лежат в большом квадратике
Например, у вас какая-нибудь головоломка такая, что у вас какие-нибудь квадратики здесь лежали
И можно так перевернуть, переставить
Вот, тогда вершина графа может задавать расположение этих квадратиков внутри большого квадрата
Ну а ребро – это переход, да, один ход, как можно один вместе
Какая-нибудь головоломка
Ну и тогда, как раз, у вас степень кажущей примерно одинаковая
Потому что количество ходов из каждого состояния примерно одинаковая
Вот, и тогда, вместо того, чтобы упускать обычные ДВП с СТС в Т
Чтобы найти внимание к действию
Которая, собственно, вот так вот
Она и каждый раз все больше и больше вершин рассматривала голову
Значит, тогда в этом случае вы бы рассмотрели, типа, там, 3 степени л вершины
А в случае, когда вы идете параллельно с двух сторон
Вы рассмотрите примерно 2 на 300 миллиметров по лампочкам
Вы закончите, когда они в первой игре иссякаются
Вы рассмотрите, например, левый пополам
Вот, и поэтому можно в силе сэкономить вершин в основном
Ну вот, и там нужны, наверное, некоторые таблицы, чтобы эффективно хранить
Вот здесь, за такой реализацией, я не храню граф явно
Потому что если храню граф явно, то быстрее, чем в обычном ВФС, не получится сделать
Ну а если вот эту же функцию Д, которую я храню, если хранить там в коинструктурке
То есть если хранить таблицы, например, в состоянии расшириваться
И расстояние в них хранить кэшматы, то вполне себе получится ускорение по сравнению с обычным односпоронним
Да, но, наверное, получится, если хранить все это в обычной форме
Просто потому что мы пройдемся по меньшему числе
Ну, да, это справедливость, в общем-то, да
Но вместо того, если у вас есть ресурсы, как хранить граф
То почему оно мне обойтись?
Ну, тут, как говорится, в целом, да
Если у нас есть память для хранения, и у меня нет памяти на то, чтобы еще раз хранить
То можно так сделать, согласен
Попросим
Так а можете еще раз объяснить, как с хэш-таблицей?
С хэш-таблицей, ну, смотрите, мне нужно хранить
Мне нужно хранить по факту расстояния D
Да, у меня ВФС использует массив D
Мне нужно до каждой шины хранить расстояние до 0
Вот поскольку теперь у меня граф огромный
И, ну, я не хочу заводить массив D до каждой шины
Все они хотят заводить, так разве что, свое значение
Я храню по факту хэш-таблицей, которую постепенно добавляю
Когда мне нужно
Ну, да
Ну, как мавку вот говорят
Когда появляется необходимость хранить D, вы его заводите
Пока нет, все будет
А тогда, как мы, ребра хранить, которые тоже великой массива?
Ну, данный контент, значит, можно не хранить
А каждый раз на ходу вычислять
Если вы знаете состояние вашей игрунки
То вам не надо хранить все ровно
Вы же сами можете посчитать
А когда передвинуть? Как оно происходит?
Ладно, более или нет?
Понятно
Так, хорошо
Тогда едем дальше
Переходим к его виду D-ти
Вот это решение задача хрэш-таблицей
В случае произволения отрицательной функции стоить
Здесь, к этому либу, это просто
Функция, что не отрицает отрицательную функцию
Вот
И опять задача будет с
Найти все расстояния вот здесь, вот здесь
Найти здесь, вот здесь
Так
Так
Идея здесь будет такая
В каком смысле будет обобщение
того, что мы делали в BFS
В BFS, на самом деле, я всегда
что в обычном BFS, что в 0k BFS
делал следующее
Я брал вершину с минимальным D
и раскрывал ее
Они не лежат в каких-то очередях
Но, по сути, я просто выбирал вершину
с минимальным значением D
и ее раскрывал
Так делал, пока есть нераспредележность
Давайте ровно это сделаем
Пока
Ну, там, как обычно, изначально
Д, на самом деле, у него все остальные бесконечности
Все остальные
Бесконечности
Пока
Есть нераспредележность
Я беру вершину с минимальным значением D
А среди не раскрываю
Выбираю вершину с минимальным значением D
и раскрываю
Среди всех нераспредележност
B
B
С минимальным значением D
И раскрываю
Конец
Возьмите вершину с минимальным значением D
Возьмите вершину с минимальным значением D
Возьмите вершину с минимальным значением D
Возьмите вершину с минимальным значением D
Возьмите вершину с минимальным значением D
Возьмите вершину с минимальным значением D
Возьмите вершину с минимальным значением D
Возьмите вершину с минимальным значением D
Возьмите вершину с минимальным значением D
Держится следующее
Что когда я какую-то вершину раскрываю
В этот момент Dnion найдено правильное расстояние
То есть так же как раньше
Потенциально для каждой вершинки
D от V может много раз обновляться
Я нашел один путь
Потому что более короткий, еще более короткий
То есть само по себе D от V
Может уменьшаться
Может уменьшаться для данной вершины
Но в момент, когда я ее раскрываю
То есть когда ее D минимально возможно
Среди всех не раскрывается
Вот в этот момент Dnion посчитано
Уже правильное расстояние
Потому что никак по-другому я его уменьшить не смогу
Я нашел какой-то путь, раскрываю
Значит никаких более коротких идей
Я Dnion не найду
Вот собственно утверждается, что
В момент раскрытия V
В момент раскрытия V
У меня будет верно, что Dnion V
К тому Dnion S
Ну а если это верно, то я рано или поздно
Обойду весь граф, все вершинки раскрою
И значит для всех вершин
Будет найдено правильное расстояние
Так, почему это верно?
Ну смотрите, значит
Давайте начнем, как вот так
Пусть у меня вот это будет раскрыто
Может раскрыто
Раскрыто или не раскрыто
Вот это все вершинки, которые уже раскрыты
Это вершинки, которые еще не раскрыты
Давайте первое замечание такое
Пусть есть какая-то вершина Q
Среди не раскрытых
До которой кратчайший путь
Устроен в следующем образе
Он как-то ходит по раскрытым
И потом заодно ребро
Перепрыгивает из раскрытых
И больше не победит не раскрытым никого
То есть я начинаю так
Пусть у не раскрытая
И пусть кратчайший путь
Вот с до у
Проходит только по раскрытым
То есть только по раскрытым и в путь
Никакой не раскрытой функции
Пусть кратчайший путь
И за свободу
Не использует других не раскрытых кратчей
Тогда я выключаю
Если это верно
Если в какой-то момент времени
У не раскрытой, но до нее кратчайший путь
Не проходит по другим не раскрытым
Тогда я выключаю чтобы ее тоже найдено
На правильном расстоянии
Вот
Вот
То есть я на самом деле
Вот этому же им доказываю
Как обычно по индукции
Я считаю, что вот эти все вершинки раскрыты
До них почти направлено расстояние
Тогда если эти вершины почти направлено
И все они раскрыты
То в частности в момент раскрытия этой вершинки
Я обновил расстояние до уку
И посчитал его как правильное
То есть я учел вот этот путь
Отсюда потом плюсит ребро
И значит я до уку в частности нашел кратчайший путь
Значит то, что там лежит до уку
Это правильное расстояние
То есть я его нашел
Потому что оно никакие другие еще не раскрытые кратча
Не использует
А эти все здесь все кратчайшие вершинки нашли
А первая замечательная
Дальше, товарищ Варум
Оно противно
Дальше противно
Пусть
Вот это все раскрыто
Это не раскрыто
И пусть вершина В
Это вершина
С минимальным D
Среди не раскрыто
Пусть В
Это вершина
С минимальным значением D
Среди не раскрыто
Среди не раскрыто
Вот
Мне хотелось бы доказать вот это утверждение
А что если D
Снимально не раскрыто
То сейчас когда ее начнут раскрывать
То у нее уже начнется правильное расстояние
То есть то, что в ней лежит до уку
Пусть
Делает В
Больше или меньше
Ну понятно
Меньше или меньше не может быть
Потому что у нас есть только какие-то корректные пути
А может быть только такое
Что я какой-то контейнный кратчайший путь не учу
Я нашел какой-то больший
Но не нашел кратчайший
А может быть не больше
Ну и давайте вы нарисуем
Давайте нарисуем правильный кратчайший путь
С
В
Давайте нарисуем кратчайший путь
От С
Как он идет?
Ну он там как-то ходит по раскрытым
Потом когда-то в первые, скажем, пересекает
И попадает в множество нераскрытых
Потом как-то ходит здесь
Возможно вот что-нибудь сюда
Вот это я написал кратчайший путь от С
Кратчайший путь от С
Пусть у это первое нераскрытое множество нераскрытое
Тогда
Тогда
Ну что тут надо сказать
То есть мы с одной стороны
По этому в shin tap
Вот эта рома
Под downs
Ну как раз иzedит вот на эту роль
Роль того ш steal
Потому что если в Mic startled
Кратчайший путь réalizing
Вот эта роль будет кратчайший
По хру King
random
а по предыдущему замечанию, del2 равно dist sql
это с одной стороны
с другой стороны, понятно, что dist sql не больше, чем dist sv
потому что это какой-то префикс, больше, чем ути
и дальше у меня есть строгая граница, dist sv строга меньше, чем del2
ну все, это тогда как два ежащих, то есть мы получим, что del2 строга меньше, чем del2
но Q при этом тоже не раскрыто
а значит вы не являетесь минимальней жестом
а вот есть тоже не раскрытая горшина, D значение которой меньше
вы можете противоречиваться этим
такого не бывает, предыдущие всегда корректно работают
так, понятно?
хорошо
корректность доказательств, сейчас давайте просим точку
смотрите, можно наивно реализовать просто за вот этим квадратом
ну во-первых, можно взять вот так
потому что можно просто все эти проверки делать наивно
а как найти минимальную нераскрытую?
можно просто пройтись по всем нераскрытым и найти ту, которая D минимальна
итак, амбас
у меня суммарно был первое открытие, пусть каждая нераскрытая будет за вот этим
то есть у меня 10 квадрат времени уходит на то, чтобы находить нераскрытую
ну и суммарно раскрытие будет работать за вот Эмму
я, конечно, имею в виду, что Эмму не больше нераскрытой
ну понятно, в случае, если нет кратных фребер, то Эмму максимально подразделяет
наивно реализацию
но иногда это можно сделать побыстрее
потому что, смотрите, что нам нужно?
нам нужно найти массив D, находить в нем минимум
там мне нужно найти там минимальное значение дёртвы
и раскрывать
а при раскрытии у меня происходит только уменьшение D
то есть, смотрите, мне нужно что сделать?
мне нужно M раз к Эмму
M раз к Эмму
и максимум M раз уменьшать значение
потому что при раскрытии какие-то дешки могли уменьшаться
и нужно M раз взять уменьшение значения
уменьшить значение
что можно использовать?
кучу
ну кучу, да, проще всего
кучу как раз ровно этой делаем
там у меня есть дёртвик с ракмином и декрестин
вот, если взять обычную динарную кучу
у нас будет лучше всего взять M0
ну потому что декризы работают за логарифом
экстракты работают за логарифом
это в случае, что M хотя бы имеется в виду
ну понятно, если M сильнее чем N, то граф не связан
можно обрубить всё, что недостижимо
тогда M будет как раз в этом
это обычная бинарная куча
но если использовать кучу Моначи
то у нас получится асимптотика
асимптотика чуть получше будет приемливаться в Моначи
это куча Моначи
ну потому что в куче Моначи декрестки работают
и учётно за единичку амортизированную
поэтому суммарный вклад декрестки
были как раз у отм
потому что там единичка амортизированная
ну а экстракты работают за логариф
бинарная куча, да, бинарная куча
это Моначи
вот
ну поэтому как бы
кучу использовать в этом плане лучше
потому что
ну например, куча Моначи, которые декрестки очень позволяют улучшить
а если вы делаете это с помощью сета
то лучше ему это будет выглядеть
ну вот
такие дела
то есть вторая дает гарантированное улучшение
а первая только вот с условием
не, не, ну
смотрите
вот это условие
это не условие, на самом деле
это как бы
это не то что ограничение
а да, это констатация факта
да, констатация факта
то есть формально
должен быть с тем логен и с тем логен
потому что у меня хрен на экстрактах
но поскольку
вот это вот верно
всегда можно считать
то, что я опускаю и оставляю только М-лог
а это верно
потому что если М меньше
то граф не связан
я могу отбросить сначала то, что не достижено в принципе
и тогда уже М будет равно
хотя вот М-1
дело в том, что если ребер
квадратичное количество
то М-квадрат логен даже хуже
правильно, я не сказал, но это надо сказать
да, это правильно
эта штука не всегда выглядит
чем вот эта
то здесь будет по-прежнему квадрат
а здесь будет Н-квадрат логен
и вот такая активизация, она будет даже хуже
чем обычные наивные ДЕКСЫ
поэтому сдвигите обратно
значит если у вас тема очень большая
то эффективнее всего просто обычную ДЕКСИю не писать
вот это будет даже лучше
видимо кучей банансов, потому что здесь тоже будет квадрат
и это, в общем, не лучше
чем самый-самый квадрат ДЕКСИ
на плотных графах ДЕКСИ можно писать вообще без кучи
лучше всего
ну вот
вот
замечание
или нет, они будут замечать
не заметно
последнее, значит это второннее ДЕКСИ
второннее зрение ДЕКСИ
поскольку это такая же как в БФСе
есть две вершинки
мне нужно найти расстояние между ними
то есть есть расстояние нужно найти
ну а рисовая функция у меня просто есть более не отрицательная
вот, ну второннее ДЕКСИ работает
собственно как ДЕКСИ в двух сторонах
я запускаю парамерно
ДЕКСИ вот отсюда
она как бы рассматривает все вот эти кучи
находящие расстояние
и в обратную сторону
то есть я здесь графы разворачиваю
и нахожу постепенно вот эти вот все
вершинки как раз
расстояния в двух сторонах
да, ну парамерно ДЕКСИ в двух сторонах
вот, и значит я останавливаюсь
да, я завершаю этот обход
ааа
когда опять вершины будут раскрыты
будет слово
останавливаемся
когда
некая вершина будет
будет
осмотрена с вершином
вот
вот
значит как это формально работает
у меня есть
по факту две кучи
одна куча здесь
другая куча как бы в Т
я параллельно запускаю вот какую ДЕКСИ
и ДЕКСИ вот по обратному графу вот отсюда
дальше у меня есть две кучи
я извлекаю
как бы я смотрю на минимум
на минимум в обеих кучах
и тот который меньше я обрабатываю
а то есть
если здесь минимальная вершина
5, а здесь 3
то я сначала обрабатываю В
то есть я буквально обрабатываю возрастание расстояния
а если у меня две кучи
достаю минимум и смотрю кто меньше
я обрабатываю тот, кто меньше
вот, и когда впервые
какая-то вершинка В будет найдена
и обработана и отсюда и отсюда
то есть я ее нашел с обеих сторон
раскрыл с обеих сторон
и вот впервые когда какая-то вершина раскрыта с обеих сторон
я завершаюсь
и опять где я говорю что расстояние
это минимум по центру вершины в одном креме
ДОКСИ
плюс ДЕКСИ
ВЕРШИНКА ВОЛЯТОВАЯ
так, почему ты веришь?
почему минимальная вот такая вот сумма
ВУТРОНА ДЕСИТЕЛЬНАЯ СТОЯТЬ
ну хорошо, давайте
действуем
что мы получили
что какая-то вершинка была
Вылазав, если он найд şeh meta, я Свинь.
Ну пусть, скажем, вот здесь настоянийPoint, корMusik, я не знаю...
Ну опять давайте скажем, что мы получили что-нибудь расходом AimTest.
Точно не больше Какого-нибудь Мака, здесь настоянийlikür- dois grain powder подل Lawrenceaj Дмитриев confrontation-like planter.
И, ну как-еббо такой Quest지 от psDarен, игрlie framework.
Опять, могут ли быть более короткиеอก Sempre announcing, что оба=#2idän Chapman Esto дляochimetre в Pinage.
и с расстоянием меньше нумака.
Ну, во-первых, если l не больше чем k,
то я утверждаю, что d, s, d вот с t это ответ.
Странно, потому что если l не больше чем k,
то значит расстояние до t будет еще не больше чем k.
А если я рассмотрю вот эту вот вершинку,
то значит все вершины на расстоянии меньше и на равном.
Так, ну так, наверное, хорошо говорить?
Давайте я здесь включу ровно k, а здесь лучше меньше.
То есть если l меньше чем k,
а я здесь раскрою вершины в стене ровно k,
то значит все меньше, я тоже вот точно рассмотрел, точно раскрою.
Поэтому вот это расстояние точно правильно найдено,
и значит будет учтено в ответе.
То есть если я сажу d, s от t и d, s от t,
а вот это будет 0.
То есть я как раз получу, я как раз так же расстоян.
Ну, а если вещь достаточно большая,
то я опять найду просто садовую вершину на этом пути.
А, давайте я рассмотрю прощаживание d от t.
Возьму на этом пути, видимо,
первую вершину расстояния, которая хотя бы k,
такое, что вот здесь вот больше равном k,
а вот здесь вот меньше чем k.
То есть пусть это правильный прощаживание,
я найду на нем первую вершину расстояния,
которая хотя бы k.
То есть до конца будет меньше чем k, а до конца будет меньше чем k.
Так, ну тогда, смотрите,
с одной стороны d, s от q правильно посчитано,
d, s от q корректно,
потому что вот эта вершина,
до этой вершины расстояния меньше чем k,
значит она просмотрена и раскрыта ранее.
Значит, для этого раскрыта и до q найдено правильное расстояние.
Если q раскрыта, то вдоль этой вершины будет правильный ответ,
и для q найдено правильное расстояние вот вверху q.
Значит, вот это корректно.
С другой стороны, оставшиеся расстояния от q до t
меньше чем k.
Потому что если здесь хотя бы k,
то у нас будет меньше чем q.
Потому что если здесь хотя бы k,
но l меньше, вот l меньше чем 2k,
значит здесь сумма меньше чем 2k.
Значит, с той стороны она тоже рассмотрена и раскрыта.
Теперь это тоже корректно.
Корректно расставлено и не даже раскрыто.
Ну и все, сейчас я их сложу, у меня будет корректный на q.
А вы можете повторить почему d, s, q корректно?
D, s, q.
Вот, смотрите, я такова, что вот это расстояние больше либо равно
от q до t меньше чем k.
То есть эта первая вершина такая, что сумма надо найти.
Тогда давайте откатимся назад сюда.
Посмотрим на предпоследнюю ширину.
Здесь 2мм меньше чем k.
Значит, эта вершина была просмотрена и раскрыта при действии слева.
То есть если я вышел до v и y, то все меньше и пода.
Поэтому эта раскрыта и длина птиц распространена вот сюда.
Поэтому здесь вот что-то.
Ну вот, какой бы ни был путь,
то есть я написал, что в какой бы ни был путь,
в каждой ни был бы стройник.
Я точно знаю какую-то центральную ширину,
до которой излево и справа костюмы правильное расстояние.
Значит, если я это просумирую, я буду учтем.
Ну вот.
Ну и опять эта штука полезна в случае такого большого графа.
Дает, собственно, такой же примучный как этот стройник BFS,
только в случае, когда у вас ребра взвешиваются.
Ну все, спасибо.
