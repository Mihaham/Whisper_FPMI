Мы с вами продолжаем, меня в прошлый раз не было, а коллега Виталий подменил меня немного свежими лекциями, значит, я сделал все результаты пересмотреть, посмотри в вопрос.
У меня есть вопрос, я подношу извинения, мне пришлось уехать.
Будет еще один блок, который будет читать Виталий, он достаточно хардовый, но презентацию там с поискениями, с примерами они будут выложены.
Что еще? Кажется, будущий вопрос по поводу колоколема, когда он будет, он будет по притворительным планам, я считал, он будет в начале ноября.
Я могу ошибаться в плюс-минус неделю с датами, но вроде бы, если мы сегодня отчитываем лекцию, даже что-то успеваем, то он будет в конце октября, скорее всего начнется.
Если мы сегодня не успеем одну тему, то он где-то будет в начале ноября. Где-то вот такие вот у нас эстимейты по колоколам будут проводиться совместно, там будет несколько семинаристов, мы еще точно с форматом до конца не отделились.
Ну, мы друг другу обычно уходим, да, я там буду. Но это не значит, что можно скалявить и, допустим, начать проводить.
Так, давайте комментируем, на чем вы в прошлый раз-то остановились?
Мы доказали, что конечная формата и квалифтная контекция не действует на матче.
Нет, а мне не действует на матче.
Так, а вы, в определенной контекции, свободны на матче?
Да, все кроматисты кроматисты.
Ну да, давайте напомним его, потому что сегодня нам придется им пользоваться.
И с чего она состоит?
Из множественных терминалов.
Да, это множественные терминалы, ага.
Из множественных терминалов.
Алфавит, дальше.
Стартовый терминал S.
Да, стартовый терминал S, иногда его меняется правилами и множество правил.
И какие свойства должны быть выполнены?
Первое.
Что должны мы сказать про множественные терминалы?
Англичная.
Да.
Все правила перехода имеют особенный вид.
Да, все правила перехода имеют особенный вид.
Так, давайте скажем, что мы знаем про вот это.
Пустое.
Пустое.
S где лежит у нас?
Ага.
И четвертое, это именно определение контекста свободной графантики.
F у нас имеет вид A,
стрелочка альфа.
Из этого значит, что F имеет под множество N
на N объединить сигму со звездой.
Да, все правила пишутся таким образом, здесь всегда стоит Z, N, V.
Последняя запись не формальная.
Вот это да.
Вот это формальная.
Вот.
Дальше еще одно напоминание.
У нас было правило штопа.
Как оно у нас удавалось?
Что-то идет у нас, кажется, поверни, не обязательно слева берут одни терминалы.
А, мы...
У нас есть...
У нас есть контекст свободной графантики, да.
Да, мы вспоминаем контекст свободной графантики, потому что мы сегодня про них говорили.
Так.
Как определяется воводимость над графантикой?
Это у нас напоминает, наименьшее.
Нефексивно-транситивное отношение такое, что...
Что?
Ну, если есть правила, то...
Не, ну, давайте все-таки...
Из альфа.
Так, сейчас еще получается...
Ну, если для контекста свободной графантики писать, то это будет вот так.
Фи, а, кси выгодят фи, альфа, кси.
Вот.
Это вот такое...
РТ.
РТ?
А, рефексивно-транситивное?
Вот мы и поняли, как Артар расшифровывается.
Так.
Ага.
И давайте еще одно напоминание.
Когда у нас слово лежит в языке, задаваем ему в грамматике.
Когда он лежит в языке.
Да.
А можно вопрос?
Да, конечно.
Если мы пересмотрели свободные контекстно-речимые грамматики,
то правилы перекода по общей линии можно запишем, но с правом будет альфа.
В одном случае, нам когда-нибудь сказалось,
она будет из символа...
Из другой элемента и из символа, да.
Альфа в этом есть в истории.
Да, если это контекстно...
Это если смотреть определение контекстно-зависимого грамматика,
то есть здесь всегда, по-моему,
должен быть не терминальный символ,
как минимум один, или от слова должен быть не пустой.
То есть там просто определение контекстно-зависимого грамматика
сильно похоже с определением воводимости для произвольного грамматика.
Поэтому это может запутать несколько.
Так.
Ну, кажется, мы с вами ввели необходимое определение.
Теперь давайте расскажем, что у нас сегодня на обед.
Сегодня у нас в программе...
Так, стоп.
Значит, план сегодня достаточно простный.
Надо понять, как можно упрощать контексты поводного грамматика.
Это все, что мы сегодня ввели.
Точнее, это первая часть нашего балета,
вторая часть нашего балета будет на следующей лекции.
Потому что их еще можно упрощать.
Итак.
Значит, давайте введем такой понятие, как нормальная форма контекста.
Я говорю, что это невиданная понятие,
и оно, значит, нам будет сильно помогать в будущем.
Давайте его введу.
Значит, грамматика называется...
контексты поводного грамматика называется грамматика в нормальной форме Хомского,
если все ее правила имеют вид такой, только такой.
Я сейчас перечислю их правила.
Значит...
Значит, правила имеют один из трех видов.
А. Интерпенал.
А, это символ алфавита более того.
А.
Дальше у нас А.
С.
А.
Получается...
B.C. не равны S.
И третье правило из S полует С.
Ага.
Давайте подумаем.
Вот, если у нас грамматика находится в такой виде,
какие следствия мы можем автоматам понять?
Про это граммо.
Если у нас грамматика такая замечательная.
Вот, представим, что у нас грамматика находится в нормальной форме Хомского,
то есть все правила имеют в том, какой вид.
Угу.
Повершенную форму надо понять.
Никакой, ни терминалу не может расстаться пустой, кроме старт.
Да, кроме старта.
То есть, если у нас слово пустое, то оно распознается только одним правилом.
То есть, нет необозначенности по выводу слова.
Раз.
С кого заключена необозначенность?
Ну, типа, что у нас не может быть такого, что, там, не знаю,
из A выводится в C, из B выводится в С.
Типа, что здесь не A?
Да.
Такого быть не может.
Угу.
Давайте посмотрим на наше дерево.
И если мы, так, было бы понятие дерево, было бы.
Да, не по манеру.
Да, не по манеру.
То есть, это последовательность замены штопора на левой части, на правой части.
Только это можно и выразить не дерево.
То есть, поэтому называется в дерево вывода.
То есть, A в C, B в A, T, C в A, T.
Да, важно только, как раскрывается.
То есть, в эту последовательность, на самом деле, будет такая.
Из A за один шаг выводится, допустим, по C.
Из B мы выводим епсилон.
Если мы начинаем идти слева, то есть, получается C.
И потом еще за один шаг мы выводимся.
То есть, вот эта цепочка называется деревом вывода.
А мы предполагаем, что на правой стороне.
Ну, да.
На правой стороне, значит, открывается самая правая левая терминал.
В левой стороне открывается самая левая терминал.
Вот.
Так, что еще?
Давайте еще выводы накидаем.
Дерево получается двоичное.
Да, дерево получается двоичное.
А это значит следующее, что если у нас высота дерева H максимальная, то есть, от корня,
то можем ли мы как-то понять, какая у нас длина хвороба?
Да.
Немощь, чем 2 в степени H плюс-минус 1.
Потому что, ну, там надо определять, где корень, где не корень.
Да.
Вот.
Это на самом деле будет полезным свойством, которое нам позволит понимать,
какие языки являются, какие языки не являются в этой школе.
Вот этого штука нам сильно поможет.
Вот.
А давайте поймем, поговорим про нормальную форму комства.
А те, о которых мы сегодня будем показывать, любая грамматика,
какая-то грамматика,
эквивалентна.
Давайте G обозначим.
Эквивалентна грамматики.
Сейчас я вас немножко испугаю.
Давайте, наверное, назовем G-C.
Некоторые только.
Нормальная форма комства.
Вот вы думаете, откуда тут слово 6, откуда тут цифра 7 появилась?
Семь шагов.
Будет семь шагов.
А?
Страшно.
Да.
Поэтому мы на эту почти всю лекцию убьем.
А?
Ну, потому что правила могут быть всякие коря.
Да?
И первая была, которая у нас есть.
Помните задачку семи норов был?
Была такая.
Есть автомат.
Автомат, язык.
Как задать язык всех, у кого претимся?
В чем подлоков в этой задаче?
Да, там были некоторые состояния, которые были неправдающими.
То есть, от которых нельзя дойти до конца.
Их надо было убирать.
И здесь, в этой лекции,
здесь первое, с чем мы начнем работать, это как раз с такими символами.
Вот.
Значит, давайте перечислим пункты нашей программы.
Первое, что мы сделаем, мы удалим непорождающие символы.
Второе, что мы сделаем, мы удалим недостижимые символы.
То есть, символы, которые недостижимые стартового.
Тоже поясним, что это такое.
Удаление правил вот такого вида.
A и C это штабы?
A и C это пример.
В общем, когда у нас в правой части правила есть и терминалы, и итерминалы.
А.
Ну, это просто презентация, чтобы...
То есть, это вопрос, какого языка?
Да-да-да-да.
Дальше убираем длинные правила, в которых правая часть состоит из более, чем двух итерминалов.
Как вы думаете, после этого шага какие правила у нас останутся?
Да, останутся правила из не терминалов A и C.
Из не терминала дальше какие еще правила?
Стройки?
А, кстати, смешанным еще относятся в которых это...
В которых есть маленькие пункты.
Вот.
Я немножко делаюсь?
Сейчас.
Так.
Да-да.
Ну, вот еще вот какие смешанные правила?
Смешанные правила в которых есть хотя бы один терминальный символ.
И его смена достаточно большая.
То есть, грубо говоря, давайте...
А вот это не смешанная правила, а вот это не смешанная правила.
Это не смешанное правило, да.
Ой, нет, так сейчас, куда?
Вот это смешанное правило?
Ага.
А вот это не смешанное правило?
Отлично.
Остались все правила, которые нам нужны, и еще лишние.
На самом деле останутся пары здесь, а, б, с, а, в, а, в и в, а, в, а.
Дальше, после этого, мы будем избавляться от апсилон правилов, а, в, а, в.
Но на самом деле, фишка состоит в том, что их просто так нельзя убрать.
Потому что нам надо как-то будет распознать пустое слово.
Сейчас будут все определения.
Непорождающие, грубо говоря, символы, из которых нельзя его раскрыть в какой-то последствии терминальных символов.
Вот. Дальше нам придется обработать пустое слово.
И на седьмом шаге удаление одиночных правил.
То есть нам останется убрать правила Котового Рова.
Да. Причем, в одном из курток я могу сказать ровно доказательство, ровно логично одному факту, который был у нас в самом начале курса.
Точно-точно будет совпадать.
Ну что, вот такой у нас план на сегодня. Поехали, да?
А, давайте введем понятие, так, все эти шаги они у нас будут.
Давайте начнем с непорождающих символов.
Поехали. Первый шаг.
Давайте обозначим Y каким?
Да, Y порождающим.
Если существует такое слово W, что из Y мы можем вывести слово W.
Непорождающие это, знаете, такого, какого-нибудь.
И на первом шаге мы сделаем следующее.
Удалим?
Да, да, да. Да, без проблем, конечно.
Среди наших задач попросили, чтобы у нас не было правил вида A, B, C, D, B, C, A, S.
В каком шаге они издаются?
Мы издаемся на шаге 5 и 6.
А почему шаги 6 в этом не говорят?
Ну потому что они на слайд не помещаются.
Ладно.
Значит, смотрите, давайте предположим, что будет, если у нас есть непорождающие символы.
Как только в слове имелся непорождающий символ, мы поняли.
Ну мы поняли, да. Теперь надо доказать.
Давайте построим грамматику G1.
N1 sigma P s P1.
Такое, что N1 равно A принадлежит N, а это порождающие.
Вот.
А P1 давайте обозначим следующим.
Я вот так напишу, но рукой.
Я напишу, что это правило Fn на множество правил N1.
Да, то есть выкидываем все правила, которые содержат правила из N1.
То есть в нем есть только N1.
А если у нас только N1 из N1 остается?
Так, N1 не останется.
Хороший вопрос. Ну может быть такое, что грамматика ничего не украдет.
Я знаю, в чем вопрос.
Нет, просто утверждение в том, что у нас N1 может охранять пустынку.
Нет, не может, если там есть.
А S1 может быть непорождающим.
Ну да, изначально грамматика бывает.
Ну да.
Так.
Это проблема?
Давайте попробуем.
Проблема в том, что оно будет обратно на N1, даже если оно не порождающее.
Ну да.
Ну давайте скажем так.
Если N1 равно пустому, то...
N1 не не играет пустынку.
Просто N1, дайте вы думать, что он не несет все.
Да.
Сейчас, дайте-ка подуму.
Так, интересный вопрос.
То есть как сделать такую грамматику, которая была бы в нормальной форме Хомского,
и при этом ничего не распознавала?
Все правила имеют такой вид.
Да, нам не обязательно.
Просто говорим тупо.
Да.
Все.
N1 не должно быть пустым.
Почему?
А, стоп.
Нужно N1 поменять, и все.
Нужно N1 определить, как оно порождающее.
Да.
Хорошо.
Да ладно, давайте напишем так.
Давайте сделаем так.
Добавляем эту штуку, если N1 пустой.
Вот так вот.
Вот.
Костылем, короче.
Да, в общем.
Да, давайте закостыляем.
Да.
Все, отлично.
Теперь нам что надо доказать с вами?
По факту нам надо доказать, что Lg1 равняется Lts.
Ой, Lg.
Как доказываем это?
Что мы можем сказать точно?
Ну да.
Ну так как любой путь, который у нас был.
Да.
Так как...
Если у нас S выводит g1 какое-то слово дубль V.
То давайте напишу в цепи вывода.
А, мы можем пользоваться как раз понятием дерева вывода.
Вывода, все не терминалы.
Lg1 равняется Lts, то что мы хотим доказать.
То стереи вывода, все не терминалы.
Принадлежат N1.
Следовательно, они принадлежат N.
Так.
А теперь смотрите, предположим, что у нас существует
слово W, принадлежащее Lg1 без Lg.
Ой, наоборот.
Lg без Lg1.
Что тогда мы можем сказать?
Не, ну блин.
Значит, у нас есть цепь вывода.
Из S мы вывели какую-то цепь альфа, пусть d.
Я утверждаю, что в дереве вывода этого слова тогда появляется
не терминал, которого не было здесь.
Дерево вывода я тут пользуюсь как определение последовательности.
Да, да, давайте последовательность.
Смотрите, тогда что у нас существует?
Тогда у нас существует d.
Что у нас из S выводится альфа, д, бета и выводится слово w.
При этом d будет лежать в N без N1.
Да, потому что если бы такого d не нашлось,
то значит слово бы просто лежало в языке задаваемой грамматикой N1.
Ой, Lg1.
Ну а тогда мы можем сказать,
что если у нас альфа, д, бета выводят w,
значит существуют x и y такие, что альфа...
Давайте z еще возьмем.
Что альфа выводит x, d выводит y, а бета выводит z.
Кто найдет противоречие?
А можете объяснить, пожалуйста, почему они не существуют?
Противоречие тискет видно, потому что где не прочитаешь, но...
Почему существует?
Потому что каждый раз, когда мы раскрываем штопор,
мы берем левый не терминал и раскрываем его каким-то образом.
То есть вот эту цепочку нам надо довести до конца,
вот эту цепочку нам тоже надо довести до конца,
и вот эту последствия нам тоже надо раскрыть до терминала.
Потому что этот цепатарий считается формальным или нет?
Если да, то есть проблема.
Все, что ты говорил, это формально или нет?
Не, ну...
Просто скажи, что не д, а как бы он это перейдет, я так могу.
Ну тут надо по идее как это говорить формально.
Значит, у нас есть... Рассмотрим последовательность выводов.
Рассмотрим первый момент, когда у нас не терминал d раскроется.
Значит, он заменится на y.
Заменится на y.
Значит, потом рассмотрим последствия цепочку, которая ссылкается здесь.
Она в какой-то момент должна дойти до терминала,
значит, она дойдет до кого-то терминала с какого-то слова x.
То есть каждую не терминал рассмотрим здесь,
раскрываем до последнего, до талого, так сказать, и это.
И смотрим, в какое слово там это переходит.
Это вот формально, если пояснять.
Да, да, да.
Как обычно, наименьшее рефлексивное и транзитивное отношение, собственно, отвечает за то, что это все до конца раскроется.
Да.
Да, можно так.
Да.
Ну, можно так.
Ну, вывод такой, что d не порождающий.
Да.
Фейл.
Последовательность.
Дерево в нашем случае это последовательность вывода.
Что, с первым шагом разобрались?
Да?
Да, да, да, произвольная.
Конечно.
Так, что?
Готовы ко второму шагу?
Да.
Второй шаг удавля...
Так, это тут пруфы, можно посмотреть.
Руны такие же.
Нахождение порождающих символов.
Да, алгоритм надо пояснить, потому что все-таки к нормальной форме Хомского хочется приходить алгоритмически.
Вопрос.
Как находить порождающие символы?
Ну, странным бы флэтсом.
Так, все знают, что такое обход в ширину?
Мне кажется, не все знают.
Ну да.
Смотрите, создаем очередь.
Добавляем в очередь вершины вида такого.
Правило вида.
А, стрелочка w.
Угу.
Дальше, на следующем шаге, когда мы достаем правила из очереди, что мы делаем?
Мы берем и из правых частей правил вычеркиваем этот терминал.
То есть, если бы у нас было, там не знаю, х, айб, да, то значит, вот этот символ что-то порождает, так ведь?
А значит, чтобы символ х стал порождающим, что нам необходимо сделать?
Чтобы у и b были порождающими.
Да, ну поэтому мы делаем следующее.
Мы зачеркиваем а из всех таких правых частей правил и смотрим справа остались только терминалы или нет.
Если остаются только терминалы, то мы х добавляем в множество порождающих и закидываем в очередь.
То есть, bfs.
Не очень.
Ну, в общем, алгоритм обработки через очередь.
Спасибо.
Так, что? Это такой алгоритм? Вот этот алгоритм понятен?
Ну, какой был?
Не, реалибантность не будет куклой.
Я абсолютно не знаю.
Да, я довольен.
Давайте вам рассказать, что только не буду спрошу спрашивать на экзамене, не будет куклы.
Давайте так.
Идею я рассказал.
То есть, если попросят формальный пруф, скажите, что рассказываете мне идею.
Идея какая?
Вот смотрим, значит, у нас есть правила вида x, a, y, b.
Как понять, x-порождающий или нет?
Не терминала.
Ну, приблизительно набор не терминалов.
Да, да, да.
Этот не терминал является порождающим в том случае, если все не терминалы в каком-то из правил, в правой части, все не терминалы будут порождающими.
Потому что каждый из не терминалов мы раскрываем до слова.
Допустим, это w1, это w2.
Ну и все. И тогда мы победили.
Поэтому мы говорим, заводим, по сути, для каждого правила множество не терминалов, которые еще не факт, что являются порождающими.
То есть, для вот этого правила, допустим, у нас будет такое множество вот таким.
A, y, b.
A, y, b.
Да?
И в тот бац оказывается, что мы инициируем очередь из всех таких правил, из всех таких не терминалов, что они содержат такое правило.
Ну, значит, они явно порождающие.
Потом мы достаем этот элемент из очереди и видим, ага, в правой части правил у нас есть A.
Из A у нас что-то выводится, вычеркиваем, это не терминал из очереди.
Ой, из этого множества.
И если при этом какое-то множество остается пустым, ну, допустим, мы в какой-то момент вычеркнули y и в какой-то момент вычеркнули b,
это значит, что у нас x является порождающим и мы его можем засунуть в очередь, если в этом не было.
Ну, конечно.
Ну, да.
Да, да, да.
Ну, да, вот это.
Ну.
Ну.
С этой, которая.
Да, да, да.
Ладненько.
Что это?
Давайте оптимизацию.
Понятная идея.
Давайте пример, короче.
Смотрите, непорождающие символы BD.
Почему?
Почему здесь непорождающие символы BAD?
Кто может мне сказать?
Да.
Ну, то есть, смотрите, у нас получается следующее.
У нас есть правило ASBS.
Что там еще есть у нас?
Я просто не вижу что сверху.
Так, смотрите, какие символы у нас точно порождающие здесь?
S, A.
Закидываем их в очередь.
Достаем S из очереди.
Ой, сори.
Угу.
Ну.
Вот.
Значит, смотрите, что у нас?
S непорождающий.
Ой, S порождающий.
Поэтому в правых частях правил мы берем, вычеркиваем эти штуки.
Ну, потому что они уже что-то порождают.
Угу.
В правых частях у нас остались терминалы, не терминалы.
Вроде остались.
То есть, тут AB есть, тут D есть.
Угу.
Поехали дальше.
Достаем A из очереди.
Вот.
Угу.
Поехали дальше.
Достаем A из очереди.
Вычеркиваем A.
Остается B, остается D.
Да?
Очередь пустая.
Закончился алгоритм.
Значит, символы B и D у нас являются непорождающими.
Ага.
Ну, значит, эти правила мы выкидываем.
Так.
Извините.
А когда у нас...
Ну, пример.
Если бы у нас, допустим, было бы правило...
Не знаю.
В этой же грамматике было бы правило из D вводит A.
Да?
А то что бы у нас изменилось?
Мы бы достали A из очереди.
Да?
Зачеркнули бы вот эту штуку.
Здесь у нас было бы пустое уже справа.
Справа.
Поэтому мы бы D положили в очередь.
В этом моменте времени.
Ну и тогда, если бы мы D положили в очередь, мы бы отсюда вычеркнули.
Ну, я бы снова стал порождающим, но как бы этого уже не надо.
Так.
Давайте до перерыва мы еще успеем второй шаг сделать с вами.
Второй шаг удаления недостижимых символов.
Значит, символ называется достижимым, если до него можно дойти.
Да выводит...
Ой, из S выводится phi до psi.
Как вы думаете, грамматика G2 как строится будет?
Ну да.
Ровно то же самое.
Опять же, с теми же самыми ограничениями, которые у нас были до этого.
Н.
Ой.
А достижимый.
АП2.
Это P у проекта N2.
А?
Да, из N1, конечно же.
И тут P1, да.
Ну да.
И тут P1, да.
Что теперь нам надо доказать?
Тут на самом деле уже два факта надо доказывать.
Каких?
Первый, какой?
Первый, что языки совпадают.
А есть еще второй факт.
Кто может догадаться, какой второй факт?
А?
А?
Не, ну корректность мы докажем удалением, доказательством того, что у нас языки совпадают.
Не, ну они так будут все достижимы, если это...
Не, ну если они...
А какая проблема могла?
Мы удалили все непорождающие символы, мы удалили все недостижимые символы.
Что могло бы быть?
На факту некоторые состояния могли бы стать снова непорождающими.
Да, и это надо обработать.
На самом деле порождающих новых там не появится, но это надо показать.
Итак, значит, нам надо доказать, что Lg2 равняется Lg1.
Какое вложение, опять же...
Да, да.
Сужение множество. Так, сейчас, секунду, как бы это аккуратненько объяснить.
Lg2 вложено в Lg1.
Но потому что если бы мы, опять же, из S выводим в дубль в Lg1, в G2, то мы это делаем по не терминалу N2.
Ну, следовательно, мы это делаем по N1.
Так, теперь в другую сторону. Пусть слово w лежит в дополнении.
Тогда что? У нас, опять же, получается следующая вещь.
Что существует такое D.
Получается Lg1 в N1 без N2 такое, что из S выводится αdβ выводит слово w.
То есть у нас в пути вывода точно бы встретился наш вывод из не терминалов.
Какая часть противоречит? Правая или левая? Там правая противоречила, а тут левая противоречит.
Недостижимость. Все, значит, языки совпадают.
Теперь что нам необходимо доказать? Второй в пункт.
Неопорождающих не появилось.
Так, тут некоторая замудренная цепочка будет.
Итак, пусть у нас с вами...
Пусть какой-нибудь это D. Так, сейчас, секунду. Что у нас должен быть?
Он у нас должен быть... Пусть D это некоторые непорождающие.
В G2. Да? Ну тогда что мы про D можем сказать относительно G1?
Нет, мы можем сказать, что пока D был достижимым.
А?
Он не достижим, может быть.
Нет, мы можем сказать, что пока D был достижимым.
А?
Он не достижим, может быть.
Да.
Ну, теперь давайте напишем, что же у нас получается.
Теперь давайте напишем, что же у нас получается.
У нас должно получаться следующее, что у нас есть D.
В грамматике G1.
А из D...
То есть давайте напишу так.
А, смотрите, а D еще достижим в, получается, G2.
Да, Вить?
Так.
Сейчас как бы написать это.
Да, да, да.
Мы предполагаем, что D, не порождающие в G2,
и они должны прийти к противоречию.
Такого быть не может.
А D будет сказать, что все уже на пути достижимые,
значит, не это в G2.
Так, сейчас, секунду.
Вот смотрите, что у нас хочется сказать.
У нас с вами D,
достижимый в G2.
Это значит у нас...
Но при этом не порождающий.
То есть из него не должно никакого слова порождаться.
В нем путь от D до G1.
Ага.
И, значит, там должен быть какой-то недостижимый.
Да, давайте рассмотрим путь, который содержит D.
Такой точно есть.
Потому что это штука порождающая.
И что?
Ну, это значит, что по правам идти,
у нас должен появиться в какой-то момент
символ, не терминальный символ за G1,
не являющийся достижимым.
А это будет противоречие,
потому что путь у нас прямо тут расписан,
будет как D.
Так, секунду.
Сейчас, секунду.
Чтобы этот путь перестал работать,
который вот на том написан,
по-первых, у нас будет для того,
чтобы результат не достиг,
что этот символ порождающий,
нам нужно, чтобы этот путь перестал работать,
чтобы этот путь перестал работать,
чтобы этот символ порождающий,
нам нужно, чтобы второй век,
потому что если нет достижима A, B, D,
то нам нужно в этой второй веке,
либо это же такой же путь работает в G2,
либо нет.
Но там есть удалённый символ.
Удалённый, значит, надуман, недостижимый.
Да, согласен.
Спасибо большое.
Что-то затупил.
Смотрите.
Давайте рассмотрим путь вывода слова D в W1.
Да?
Значит...
Давайте посмотрим следующее.
Значит, каким-то образом у нас из D
выводилось слово W.
Тогда у нас мы можем расписать,
что D выводит какое-то гамма E.
Если у нас гамма выводит...
D выводит гамма E,
получается дельта.
Вот.
Это получается у нас в грамматике G1.
А если вот этот вывод...
Давайте предположим,
что у нас D выводит какое-то Y в G1.
И выводит Y в грамматике G1.
То есть получается, что если у нас
все такие штуки, все E лежат в P1...
Ой, в N1.
Да?
Точнее, все E лежат в N2,
тогда у нас D получается будет достижимым.
Так ведь?
Все вырубились, кажется, да?
То есть, смотрите, история такая,
что давайте посмотрим,
а почему же он не порождается?
Что ему могло сломать пораждаемость?
Это значит, что у нас был какой-то не терминал,
который сломает ему пораждаемость.
Да? Вот тут вот.
Давайте я напишу это хорошо.
D.
Да, мы уже 2.
Следовательно, существует такое E из N1 без N2,
что выполнено вот это вот свойство.
Да, то есть мы получается убрали наш символ E.
Сейчас.
Сейчас мы убираем символ E.
Сейчас, давайте, может быть,
перерыв небольшой устроим.
Я сейчас дотуплю доказательства.
Рань, что-то такая достаточно очевидная история.
Что-то...
В общем...
Давайте продолжать.
В общем, рубрика «Помощь зала» сработала.
Смотрите. Короче...
У нас есть D достижимый в N1.
D, G2. Да?
Это значит что?
Это значит, существует путь,
вывод из F с альфа, D, B, G2.
Да?
А теперь смотрите.
У нас D, D, порождающий в...
В где? В G1.
Да? Это значит, что у нас есть вывод из D
по слову Y в G1.
А теперь смотрите.
Значит, что значит, что D стал непорождающим в G2?
Это значит, существует такое E,
который был удален на пути,
что у нас из D выводится какой-то гамма E дельта,
а из него выводится Y.
Причем вот здесь у нас с вами вывод идет по...
Тут даже неважно почему.
Можно сказать, что вывод идет в грамматике G1.
Тогда смотрите, что у нас получается.
Объединяем что из S.
Мы в игре, в гамматике, в игре, в игре, в игре, в игре,
в игре, в игре, в игре, в игре.
Что из S?
Мы, значит, в игре, в грамматике G1 выводим альфа D бета,
а из этого мы вводим альфа гамма E дельта бета в G1.
А тогда у нас E каким был в G1?
Он был децижим.
В плане моего предмета?
Да.
Да.
Следовательно, E достижим в G1.
Следовательно, у нас противоречилось тем, что E был удален.
Все, спасибо, я затупил.
Постараюсь больше не тупить.
На самом деле, как ни странно, это был самый сложный момент доказательств.
Это сиаремы.
Доказать, что у нас при удалении недостижимых,
ничего не порождающих, ничего нового не появляется.
Итак, вот это понятно?
Хорошо, следующий вопрос.
Как искать недостижимые символы?
Застяжим все точно, это самый обычный обход.
Да, обычный DFS.
Обычный обход графа со стартовой вершины запускаем,
все вершины, которые не дошли.
Все не терминалы, до которых не дошли.
Шаг третий.
Удаляем какие смешанные правила.
Так, ну вот это прикол.
Это мы прошли.
Вот такого типа.
Что сделать хочется?
Чтобы все буковки большие были.
Это же такого типа, значит, не держащиеся объекты.
Хотя бы один терминал, хотя бы они не терминалы.
Давайте так.
Пусть смешанное у нас будет такое.
Либо содержит хотя бы два терминала.
Либо хотя бы один терминал, хотя бы один не терминал.
Вот так вот.
Ну, давайте посмотрим.
Тут проще на примере показать.
Не, ну там две большие будут несмеховны.
Не, ну там две большие будут несмешанными.
Потому что у нас могут быть определенные...
Могут быть все не терминалы, тогда это правило не смешано.
Так, смотрите, какой финт ушами хочется сделать.
Отвернуть терминал не терминалами.
То есть мы добавляем правила вида.
А вот это правило заменяем на правило.
Ну а такое.
Сейчас, а почему мы щадим правила, состоящие из двух терминалов?
Из двух терминалов.
А, стоп, они не набрали?
Ну, чтобы потом с ним не бораться.
Ну, чтобы потом с ним не бораться.
Ну, чтобы потом с ним не бораться.
Ну, чтобы потом с ним не бораться.
Ну, мы не хотим...
Да, мы их не щадем.
Итак, ну, тут как доказывать, что lg3 равняется lg2?
Давайте подумаем.
Ну, тут на уровне правил делается.
То есть допустим, у нас...
Давайте я в качестве экземпляра на этом примере покажу.
Вдруг у нас а...
Выводил какое-то слово w.
Тут проще сделать так.
Да, рассмотрим те деревья выводов, в которых мы прошлись по другим правилам.
То есть тут проще даже сделать... Сейчас, как?
Давайте подумаем.
То есть у нас...
Давайте рассмотрим первый момент в дереве вывода, когда у нас что-то пошло не так.
Какой у нас первый момент несовпадения мог быть?
Смотрите.
Первый момент несовпадения у нас мог быть такой, что у нас...
Мы за один шаг какое-то правило вывели.
Какое правило у нас могло быть?
Могло ли быть первым правилом, в котором у нас вышло несовпадение?
Вот такое правило.
Какое правило у нас есть?
Где большая буква меняется на маленькую?
Ну, у нас есть две посредности вывода.
Давайте зафиксируем вывод. Левосторонний вывод, допустим.
В грамматике получается нашего слова lg3 и lg2.
lg2 и начнем смотреть типа так стоп сейчас а давайте сделаем блин я ссоре сегодня надо это надо
больше отдыхать давайте проще сделаем короче давайте докажем что lg3 вложена в lg2 и lg2 вложена
в lg3 почему lg3 вложена в lg2 потому что смотрите если в какой-то момент времени мы встретили
вывод по смешанному правилу за один шаг то как его обойти в новой грамматике
да да да вот так согласен так ну что нам надо сделать нам надо просто зайти вот так вот
потом за один шаг заменить букву b да и потом за один шаг
заменить эту историю на вот такое то есть в одну сторону так
в обратную сторону
да здесь делается следующее как только у нас встречается правило вида
новый вывод новый это значит по правилам g3
условия в то есть допустим мы делаем следующее что у нас из с выводится какое-то слово в да и
в какой-то момент за один шаг мы раскрываем следующее по новому правилу там не знаю альфа б
бета а тут у нас было получается альфа б бета да то поскольку у нас все такие правила появились
в момент появления грамматики ну в момент появления новой грамматики то их по факту по факту
можно присоединить к старым правилам грамматики то есть то есть сейчас альфа
здесь скорее всего лучше так сказать то есть мы делаем следующее вот у нас есть дерево вывода
вот здесь последствия вывода и давайте мы сразу сделаем все правила которые у нас были вида
б бета новые правила мы просто зачеркнем те переходы то есть мы по факту когда у нас вот
такая вот штука произошла в новом правиле мы просто мысленно вот так вот дрем и вычеркиваем эти
правила вот а дальше мы смотрим что когда такие правила у нас появлялись они про они
появлялись совокупности только со старыми правилами грамматики да да причем сразу скажу
что последствия правил вывода мы можем их переставлять в любом порядке давайте просто
фиксируем их порядок вот переставим их грамотно порядки и дальше мы их как раз
схлопнем в предыдущие правила так кажется это кажется стали в ауте в общем в общем вот такой
кейс да тут аккуратненько доказывать чуть сложнее но в целом получается правила без
однобуквенной ой без длинных переходов давайте к следующему шагу перейдем
четвертый шаг это удаление длинных правил больше больше двух не терминал да что с ними
делать было но тут можно сделать делать вот так типа так сейчас давайте прикинем давайте вот так
а 1 б 1 вот такие вот заменим вот это правило на последовательность вот этих правил да опять
почему лг 4 будет вложен в лг 3 лг 3 вложено в лг 4 почему ну у нас есть такое правило мы раскрываем
вот таким образом и получается цепочка вывода то есть получается у нас стоп сейчас это еще доказываю
да то есть я вот это вот могу
могу заменить на такую цепочку в обратную сторону как
ну да тут история такая что если у нас замены нет то есть если с из w не содержит правил так
сказать дать напишу без замен ну то все ок если у нас есть какая-то замена то заметим что с у нас
получается b 1 и так далее b n минус 1 приходит вся цепь целиком то есть у нас не может где-то
просто не терминал b 2 появится он обязательно появляется со всеми не терминалами которые
порождают эту цепь вывода ну и поэтому раз у нас есть эта цепь то мы по ней можем развернуть и
вот это правило чего но нам надо чтобы все правила состояли из не больше чем двух не терминалов
да но вот у нас длинные правила было мы берем объем на куски на два говорим что это плюс еще все
остальное потом берем вот это плюс остальное третье плюс остальное то есть это штука заводится
для остальных так живем мы мы уже прошли 4 4 шага вот собственно доказательств какие правила у
нас остались нас остались правила вот такого типа и как говорится мы теперь должны избавляться
от epsilon правил для этого нам нужно ввести понятие epsilon порождающих символов
определение это шаг 5
а epsilon порождающий если заводится
теперь смотрите какая фишка тут замена давайте я на слайде покажу потом перепишу
делается следующее нам нужно явным образом выпилить все что может порождать и все он
значит делается так добавим правила
б если из а выводится бц а с ц может выводится epsilon добавим правила а выводит ц если а выводит
бц б выводит epsilon и будем убирать правила вида вот теперь как говорится получим грамматику
g5 а все кто выводит epsilon давайте научимся находить их как их находить точно так же как
искать по ищем порождающие только проверяем что порождаем epsilon все то есть по сути что
нам необходимо нам нужно из правой части правил убрать epsilon порождающие вот если они есть тут
кажется сейчас секунду а ц в epsilon нет окажется не нужен итак получим грамматику g5 и тут хочется
сказать соблазну что давайте докажем что lg5 равно lg4 но это неправда а что правды будет
да собственно поэтому нам надо будет обрабатывать пустое слово и так а давайте
докажем это утверждение и так у из дубль в так да сразу скажу что мы
рассмотрим произвольно не пустое слово и вот здесь мы наконец-таки будем пользоваться нашим
любимым словом индукция по длине вывода
да потом вернем индукции по длине вывода база и с с мы вывели слово в за один шаг
грамматики g4 при этом слово не пустое из-за того что будет следовать
ну какие правила у нас остались когда мы за один шаг можем букву вывести
одну букву значит с дубль в равно а ясно ну значит это правило оставал оставалось и в этом выгромать
все начальный хотя можно и для произвольного доказывать сейчас подумаем так теперь дальше
значит предположим следующее значит для произвольных слов длины меньше к мы все доказали
так давайте теперь посмотрим что мы можем заперта слов меньше к да и наверное нам надо доказывать
сейчас я подумаю кажется это для произвольного не терминала надо доказывать сейчас дайте
секундочку я немножечко это утверждение индукции что если у нас из произвольного не терминала
выводилось какое-то не пустое слово грамматики в g4 то оно будет выводиться вы грамматики g5
да для произвольного да да да да все хорошо переход давайте рассмотрим вывод слова а все
ага почему за один шаг вы вот одно да теперь смотрите пусть заказ шагов мы дошли до слова
для меньшего шага все было ok тогда что у нас у нас грамматика g4 да в ней какие правила могли быть
да а в б цели а в а в epsilon тут это вряд ли нас интересует но смотрите мы отсекать будем
сейчас первый шаг да и так дальше у нас могут быть первые несколько случаев первый а выводит
бц за один шаг грамматики g4 и мы выводим это все за каменус один шаг грамматики g4 второй шаг мы
что у нас еще могло быть да а какой из случаев мы так давайте первый вот этот пуст первый
случай этот пуст второй случай что мы можем сказать про оба эти два случая давайте второй
случай рассмотрим мне кажется он проще ну да то есть если рассмотреть второй случай то получается
поскольку w предположение индукции получается у нас g5 w а а выводилась в
тоже потому что у нас было правила грамматики
так стоп сейчас секунду в g4 да мы убираем только правила
а выводится б это все в g5 это раз шок первый случай интереснее
пусть b выводила у а ц выводила w ой в первый случай достаточно простой у не пустое и в не пустое
что в этом случае делаем если два слова не пустые да g5 целует в грамматики g5
ну да да да спасибо так какой случай будем разбирать у пустое или в пустое
ну за меньшее число шагов мы выводим это пустоту то есть если слов дайте дайте утверждение все
таки которые мы доказываем вот такое
так отлично давайте рассмотрим случай у пустое слово да значит б выводит
грамматики g4 а следовательно у нас а выводит с есть грамматики вы грамматики g5 да давайте за
один шаг я буду писать ну да а выводится за один шаг это значит что оно выводит у нас что выводит
слово w которая по факту будет дуб которая будет нашим словом потому что у пустое наверное
аналогично только а а с акцентирует так как добавилось правило а вот так добавилось правило
поскольку у нас б эпсилон порождающие вот оно добавилось спасибо так ну в одну сторону доказали
кажется может быть случае что у эпсилон и в эпсилон нет хорошо да потому что это будет неверно
вот а значит смотрите дальше следующий факт опять же еще одна индукция
вот такой вот
база какая да да да привыкаем один шаг я же говорил в начале курса что индукцию мы будем
говорить сто пятьсот раз добавлялись ли у нас правила из а выводится не термина и за
выводится терминал нет значит иза у нас в g4 опять же за один шаг было это правило то есть база ровно
такая же теперь переход так вот это я не буду стирать это нам понадобится просто
тут интересно а выводится за пусть один громадь же 5 за один шаг выводится бц и
является дубльвэ тогда что мы можем про это сказать
да
в g4 но из этого выводится что там б выводил какое-то у в g5
сейчас секунду
давайте скажем так пусть это выводила какое-то ув равное дубльвэ вот так то есть
б выводила у ц выводила в и получается чтобы цел у нас поводило слово дубльвэ просто
тут надо аккуратненько проходиться но надо сказать что у не пустое и вы не пустое в данном
случае так как в g5 вот потому что если посмотреть на правила грамматики у нас
ничего из пустой ничто пустое порождаться нем не может у нас удалились все правила за
да да да вот а это значит что у нас получается б в эту g4 в g5 ц выводят в g5 в
да они оба не пустые вот и получается что у нас а выводит в итоге в g4
тоже g4 это просто равенство вот значит смотрите что мы мы не успели доказать значит получается
энное количество пунктов на самом деле последний пункт доказывается просто ровно
аналогично тому как мы удаляли эпсом перехода в автомате значит да дальше надо будет смотрите
крат краткая идея которым будем повторять будущим смотрите у нас получается а выводит
g5 за один шаг выводит получает слово в и тут надо просто понять как это правило могло появиться как
оно могло появиться оно либо уже было и все хорошо либо она появилась при таких махинациях
и тогда надо понять что происходит громадки g4 вот да да да да да вот да надо расписать
потому что это важно все да что-то сегодня я не рассчитал по планам так можно задавать
вопросы и всем спасибо
