всем доброго дня мы с вами снова продолжаем наши лекции и теперь у нас
наступает самый сложный часть нашего курса как и в практическом плане так и
теоретическом плане мы сегодня с вами уже на самом деле продолжаем
рассматривать телералгоритм потому что некоторое введение мы с вами сделали в
прошлый раз но с нихаил просил немного повторить мы сегодня это немного
повторим и даже более того обобщим собственно давайте начнем с того что у
нас было на предыдущей лекции
да мы посмотрели с вами mp автоматы да что еще было да нормально форма грейбах
но давайте с точки зрения алгоритмов мы с вами поймем что у нас происходило
до этого какой алгоритм последний мы разбор
синтоксического разбирали ну или ноль то понятно до или ноль
early если мы говорим тот алгоритм который работает хоть за какое-то время
алгоритм перенос свертка работает все-таки за непонятное время вот он может
работать за экспоненциальное время но хотя перенос алгоритм перенос свертка нам
сегодня понадобится итак значит мы с вами познакомились с
мп автоматами и рассмотрели алгоритм early и как раз когда мы с вами
познакомились с мп автоматами мы с вами поняли что у нас существует автомат
перенос свертка да у нас вами напомню у нас храним стэк текущих вершин и
текущую позицию условий на вершине стэк он если у нас написано правая часть
правила то мы заменяем на левую часть правила это правила reduce либо мы
добавляем символ в стэк считывая его совхода это операция shift так все это
все прекрасно помнят да я надеюсь хорошо значит в чем проблема вот на
текущий момент который мы пытаемся решить
нет не обязательно потому что у нас на вершине стэка допустим может быть
несколько символов
нет а нет мы почему
вот у нас
а нет у нас есть правила у нас всегда есть правила за счет прочитывания
буквы снять две последние два последних не терминала с стэка
так да да это есть
ну да ну в общем есть
ну да но все равно решать и приводить грамматику какой-то нормальной форме
ради того чтобы строить какой-то парсер ну вы с вами поняли что на примере
алгоритма кока янгера косами это не оптимальный вариант так в чем проблема в
автомате перенос свертка значит давайте вспомним да непонятно что делать
сворачивать непонятно или считывая следующий символ либо непонятно по какому
правилу сворачивать если есть два таких правила вот это мы с вами обговорили то
есть ну тут есть еще некоторые правила понять что на вершине стэка у нас
находится правая часть правила грамматики такая вычислительно сложная задача
поэтому хотелось бы ее каким-то образом тоже решать собственно решение первые
проблемы которая у нас возникает это значит построение ситуации из алгоритма
early да помните у нас как оно обозначалось в алгоритме early у нас
алгоритм early это обозначалось следующим образом
и же то есть мы находимся в текущей позиции дерева разбора считываем считали до
родительской вершины позиции доитова здесь мы считываем позицию до житого вот
и собственно здесь нам нужно избавиться от множества символов которые у нас есть
от и и же потому что они дают кубическое время работы собственно здесь давайте
обозначим ситуации сразу скажу что это будет lr 0 ситуация пока что это правила
вида а стрелочка альфа точка бета то есть точка у нас стоит где-то в позиции слова можно
ее воспринимать как индекс количество прочитанных символов но удобнее нам будет рисовать как точку
вот и давайте мы с вами накапливаем с вами детерминированный конечный автомат собственно
и всегда мы добавляем сначала правила ш. стрелочка точка s собственно если у нас есть правила
грамматики вот для такого слова то мы понимаем что когда мы находимся в начале слова то у нас
позиции с 3 стрелочка точка с дальше мы делаем предикт с стрелочка точка б потом считываем
букву а мы выполняем комп позицию правила с штрих стрелочка а точка б дальше делаем
предикт у нас получается b-стрелочка точка b и после прочитывания буквы b мы
получаем правила b-стрелочка b-точка пока-пока быстрее повторение старый
собственно как мы их получили эти правила
ну собственно тут можно заметить что мы делаем либо переход по эпсиону да то
есть мы спускаемся в нашу грамматику либо делаем переход по букве по
определенной букве итак значит давайте еще раз зафиксируем главную идею
алгоритма которая у нас будет на семинаре будет детальная практика
посвященная этому значит мы строим дк в над множеством ситуаций переход по
символу это сдвиг точки а эпсом переход это раскрытие не терминала
аналог правила предикт вот это основная идея которую мы с вами будем
держать по ходу всей лекции и возможно даже не одно я даже двух а может и трех
посмотрим как пойдет
давайте хорошо скажу пока значит это ситуация в которой идет просмотр на
каблук вперед
вот так
то есть мы вот смотрите пример лр 1 ситуация это будет следующая вещь альфа
стрелочка точка б а что это означает давайте я пока в виде деревьев нарисую
чтобы было неформально обозначение это означает следующее что у нас есть не
терминал а дальше мы находимся в позиции правила альфа стрелочка точка бета а
первый символ который у нас выводится здесь после вывода этого правила это
символ а то есть после того как мы выйдем из этого дерева следующий символ
который мы можем прочитать это символа
да для конкретного дерева разборов
но он не зависит но гипотетически мы говорим что ситуация будет допустимый
если мы в каком-то дереве разбора давайте лучше каев каком-то дереве
разбора после вывода правила а стрелочка альфа точка б это первым символ
который можем встретить это символа то есть мы как бы смотрим на один шаг
вперед после того как после выхода ну позиция нам все равно нужно отслеживать
правила суть давайте физический смысл в чем была про в чем была проблема
комплита ну так обсудим вот смотрите допустим у нас была ситуация б стрелочка
гамма точка да и нам не понятно типа с каким правилом это конкетинировать обычно
мы это конкетинировали с правилом точка б б это да ну и хотелось бы отсечь список
вариантов с которым мы можем двигаться давайте предположим что теперь мы знаем
как какой символ у нас идет дальше после этой точки ну и тогда понятно что нам
нужны только те символы в которых в кавычках первый символ б это это который
может водиться это это сильно ограничивает количество вариантов
которые мы можем перебирать
но нам все равно нужно трекать где мы сейчас находимся все равно скан это
предикты никто не отменял нашем случае все равно нужно прочитать букву нам нужно
что что что для всех троллей для всех полз да да да ну то есть мы фиксируем
конкретный вывод да и
ну да в одно состояние только
ну да ну то есть оно будет сильно расти экспоненциально не знаю но росим
ну да ну и с точки зрения теории на самом деле это может доказать что любой
лирика автомат можно свести калира 1 1 автоматом ну чуть сложнее так в общем
вот мотивация зачем нам нужна следующая буква то есть мы говорим сколько
первых букв мы можем вывести после этого значит смотрите важный момент если
мы не сможем выводить ни одну букву давайте введем символ конца слова
по идее да его можно сколько угодно раз повторять но если мы будем
рассматривать а лир один нам достаточно будет одного раза
хорошо значит теперь идея значит которая тоже мы в прошлый раз говорили что если у
нас есть тупик в автомате то нам надо делать операцию reduce да сворачиваться по правой
части грамматики то есть если грубо говоря да маточка то мы откатываемся
назад и потом делаем переход по символу б
какой делать backtrack будет написано фра или самой грамматики вот значит тут дальше есть
алгоритм вот для такой грамматики давайте я напишу чтобы мы поняли что есть пример
не лер ноль грамматики так какие правила тут можете продиктовать
кажется я все написал да вот и давайте нарисуем быстро этот автомат
так дальше идет переход по букве а
в стрелочку точка б и дальше смотрите еще добавим правила так тут идет переход по букве
б. то есть смотрите что у нас происходит если мы находимся в конце этого правила
это неважно какая буква следующая мы возвращаемся обратно по вот этой букве
б и идем в ту сторону вот а теперь давайте добавим еще одно правило грамматики который
нам все сломает давайте добавим правила б следует б ц тогда у нас в переходе по
букве б будет вот такое правило так вопрос что сделать мы находимся в этой ситуации если
следующий символ не ц мы кажется понимаем что нам делать нам надо откатиться двинуться право а
что делаете следующий символ ц ну да правильно ответ плакать да почему почему нам надо это грустить
потому что нам непонятно считывать следующий символ ц либо откатываться по правилу да у
нас возникает так называемый shift-reduce конфликт то есть мы не понимаем что нам делать shift или
reduce как это разрешать а давайте посмотрим действительно какая следующая буква у нас
с вами выводится вот для этого как раз мы с вами ведем следующую вещь а давайте посмотрим
значит здесь у нас выводится конец слова доллар
есть тоже следующий символ доллар значит дальше мы читаем букву а
доллар и смотрите здесь дальше так тоже будет доллар потому что это конец слова
я объясню как это все строится после чуть-чуть после как эти переходы делаются ну можете
догадаться в принципе а дальше делается переход по букве b
b c точка доллар и вот смотрите давайте обратить внимание на вот это правило что она говорит что
если мы с вами сворачиваемся последний по этому правилу мы можем свернуться тогда когда следующий
символ это доллар то есть когда это конец слова то есть у нас два варианта здесь два либо это
конец слова и тогда мы делаем reduce либо тогда следующая буква ц и мы едем дальше то есть
имея следующую буквы мы с вами разрешаем конфликт вот вот вот в чем идея понятно как
разрешился конфликт символ конца слова а нет нет конечно же не всегда просто смотрите вот
образно говоря с штрих выводит с первый символ который мы можем вывести после с какой
после как разобрали ас конец слова дальше смотрите что у нас идет дальше значит мы читаем
обе после выхода этого слова что мы читаем после разбора после выхода из вот этого правила
тоже доллар поэтому доллар здесь есть дальше смотрите переходим двигаем точку сюда и делаем
опять сдвиг что мы можем прочитать после этого правила после как мы выпрыгнем из б да и смотрите
если бы правила было бы здесь а б ц тогда бы здесь вместо б стрелочка точка б б стрелочка
точка б ц вместо доллара здесь был бы символ вот этот вот ц ну надо уметь считать первый символ
который выводится из не терминала ц да сейчас мы введем как раз множество которое математически
формально это все определит да потому что мы да ну если говорить чисто по картинке то да если
мы говорим про эфемерный смысл да который здесь закладывается мы говорим что вот это действие мы
делаем редюс только при условии того что следующая буква такая а ну он есть да мы просто
да не для всех грамматиков ну и не для всех однозначных да да мы все-таки грамматики
не поверить их очень так сказать их хватает да тоже писать языки программирования ну много
ну там если мы говорим честно про языки программирования там есть несколько под
парсеров в каждый момент времени то есть грубо говоря одну конструкцию парсием одним парсером
дальше в другую парсию других парсеров ну да
можно ну надо думать
смотрите мы делаем редюс только если следующий символ совпадают вот и делаем шифт если мы
переходим по букве если есть переход по букве мало или родин сильно больше грубо говоря
правильные скобочные последовательства это не лр 0 грамматика но зато это уже лр 1 грамматика
вот то есть правильные скобочные последовательства можно задать и лр 1 грамматика и собственно это
будет на семинарах разбираться вот именно тогда кстати это по-моему одна из последних лекций
которые вот об этом доказывать одно из последних лекций которые мы будем доказывать в курсе
да зато разумировав это будет очень огромный можно конечно ладно значит
да только это не практически вообще никак не применил мы все-таки здесь про практику тоже
говорим да согласен ладно чего собственно алгоритм к это просмотр на кабок вперед значит сейчас
давайте остановимся здесь я спрошу понятно ли в чем состоит суть вообще построение вот
эта история ну что сейчас пойдут формальное определение ну во-первых нам нужно формально
определить алгоритм во-вторых нам нужно формально определить как вот эти ситуации строится потому
что мы пока это сделали каким-то образом неформально то есть если у нас здесь будет правило
а бц да то как вот эту штуку считать в смысле первый символ как этой штуке считать то есть
ну нет то есть все равно тут надо какие-то манипуляции так или иначе делать вот помните
мы в прошлый раз вами определяли go to и closure но мы с вами их определяли для lr 0 грамматик
а было
да давайте тогда начнем формально определять собственно поехали первое определение значит
тут некоторые скукопки могут пропадать так а тряп тряп тряп где у нас
многозначная шутка честно мы тут вообще про однозначную грамматику говорил
итак значит смотрите первое что мы определим с вами это множество ферст
альфа это множество таких символов а что альфа а выводит а у
объединить символом доллар если у нас альфа эпсилон порождающий то есть из альфы может
выводиться эпсилон то есть по факту множество ферст это первый не термин первый символ который
может вывестись из последности терминалов и не терминалов так логично это это индикатор
знакомы с функцией индикатор вот так у кого теория мер была все знают что такое индикаторная
функция вот у нас здесь использована то есть смотрите ферст это первый не терминал который у
нас может быть вы может вывестись значит дальше лр 1 ситуация что сейчас
значит лр 1 ситуация это значит кортеж вида альфа стрелочка альфа точка бета запятая а опять же
про точку ее можно напоминаю вынести в позицию индексу правила такое оно определяется для всех
правил вида а стрелочка альфа бета и для а из символа объединен с последовательностью символом
доллар вопрос упражнение как как выводится лр 0 ситуация что поменяется в определение да не
будет буква так значит это формальное определение множество ситуаций а оно у нас уже было написано
кстати ну да теперь нам нужно каким-то образом определить перехода сразу говорю мы работаем
с вами с алфавитом перенос с автоматом перенос вертка и давайте то что у нас находится на
префиксе может находиться на префиксе этого автомата на стеке назовем активным префиксом
это неформальное определение было теперь формальное определение значит следующее мы говорим
значит альфа
префикс если существует
такое разложение альфа в виде альфа 1 бета 1 такое что из с смотрите здесь очень важно я
пишу это в последний раз поскольку у нас алгоритм парсер будет являться восходящим то есть он
строится снизу вверх то правила у нас образуются вот таким образом то есть слева направо если мы
идем с так сказать смотрим снизу наверх но сверху вниз если мы будем смотреть то эти правила
будут сначала появляться справа а потом слева да да да если вы развернете алгоритм перенос
свертка наоборот и посмотрите когда какой не терминал у вас всегда раскрывается будет
раскрываться всегда самый правый не терминал то есть если мы снизу вверх сворачиваем самым
левым не терминал в самый левый не терминал то если мы сделаем таймлапс обратно то у нас
будет раскрываться самый правый не терминал по ходу действия сверху вниз да поэтому везде у нас
будет использоваться правосторонний вывод то есть если у нас сейчас раскрывается какой-то не
терминал то значит все все что находится справа от него уже раскрыто поэтому мы здесь выводим
альфа-1 а у а дальше смотрите за один шаг мы раскрываем это альфа-1 бета 2 бета 2 у и вот это
у нас альфа то есть по факту смотрите что происходит давайте я поясню на стэке что
происходит в этот момент времени то есть по факту мы с вами делаем следующее у нас на стэке был альфа
один дальше мы собираем правила а стрелочка бета 1 бета 2 то есть бета 1 дальше у нас на входе
осталось прочитать слово у какое-то да и по факту ну после того как мы хотим прочитать это все и
вот здесь вот мы в какой-то ближайший момент времени будем собирать правила бета 2 то есть
как только мы соберем бета 2 мы соберем после свертки наши правила а и все что останется
справа это будет то то есть вот это у нас активное состояние стэка вот так это определение понятно
правосторонний вывод да я сказал что у нас весь вывод правосторонний вот и дальше мы это будем
опускать хорошо так теперь еще одно сломанное определение и нам где это бета 2
так а теперь смотрите что мы с вами будем делать мы говорим с вами определение 4
а бета 2 а допустимая ситуация для активного префикса
так вы не против если я буду сокращать активный префикс ап
так для ап альфа если смотрите
ну по факту это тот момент когда это то что может находиться в стэке во время алгоритма
перенос свертка просто мы это формализовали каким образом это может быть то есть мы сейчас
ожидаем то что у нас будет сворачивание какого-то правила вот мы разбираем конкретное слово в
w который у нас существует у нас есть разбор активного у нас есть существует разбор после
которого мы свернем это в какой-то не терминал а у нас останется справа у после этого прочитать
после того как мы прочитаем это правило и как раз это определенное состояние нашего правила то
есть это состояние префиксов состояние стека который у нас может быть в этом алгоритме
не обязательно за один шаг не обязательно это просто префикс который вот существует где-то в
какой момент вывода так значит смотрите так я думаю с определением понятно теперь давайте
во-первых нарисуем картинку во-вторых посмотрим что происходит значит из s штрих у нас выводится
так альфа для активного префикса давайте я напишу здесь так если смотрите из s штрих
за правосторонним выводом выводим альфа а у дальше за один шаг выводим альфа бета 1 бета 2 у
вот и теперь внимательно смотрите а будет лежать все пошли ферстап от у
теперь картинку давайте посмотрим на картинку что это означает это означает что из s штрих
мы выводим альфа а у дальше за один шаг поскольку здесь у нас уже все раскрыто мы получаем бета 1 бета 2
да и ой чудеса смотрите у это первая буква которая может вывестись отсюда а вот он префикс активный
то есть это то что у нас находится на стэке нашего алфавита перенос автомата перед нос
свертка то есть мы говорим грубо говоря если у нас это будет наша цель будет доказывать в
какой-то момент времени что если у нас на стэке автомата перенос свертка находится сейчас альфа бета
1 да то у нас гипотетически возможно вот такая ситуация понятно ли это определение
но после вывода вот этой штуки это говорится что а это первый символ который выводится вот
с правой части нет у это слово да да либо это доллар если у пустой смотрим на определение
ферст ага вот а вообще можно определить для последствий терминалов не терминалов собственно
контрольный вопрос почему ситуация является называется допустимый но мы кажется у него сейчас
ответили уже просто что у нас активный этот префикс это состояние в автомате и вот такую
ситуацию мы можем увидеть во время разбора перенос свертка теории да будем доказывать что
обязательно достигается хорошо так теперь еще два определения которые у нас были в прошлый раз и
которые нам обобщают кое-что и здесь мы здесь я опять тоже нарисую картинку это определение 5
значит а клоуже мы в прошлый раз его определяли для или родим ситуации для лер ноль ситуации
сейчас для лер один определяем ситуации значит клоуже от и это минимально наименьший по включению
такое что во-первых и является подножством g а второе смотрите делаем следующее если альфа
стрелочка альфа точка бета точнее б бета а принадлежит g и бета стрелочка точка гамма
принадлежит правилам грамматики то смотрите что у нас получается а бета стрелочка точка гамма
c принадлежит значит нашим множество g и смотрите для любого c принадлежащего first от бета а
давайте посмотрим на определение да они похожи то есть а теперь смотрите картинка вот мы
находимся на а значит здесь у нас альфа б бета здесь у нас гамма мы находимся здесь и первый
символ который мы хотим вывести это символ а цесна какой символ мы можем вывести после
того как мы выпрыгиваем из этого дерева ну смотрите это либо а если бета эпсел порождающий
либо первый символ бета это можно записать вот таким вот образом first от бета
вопрос что нам задает клоуза в данном контексте вот в терминах картинок вот этих вот
ну просто мы берем и строим состояние нашего автомата да то есть мы берем какое-то правило
и делаем его замыкание по факту мы делаем предикт со сохранением вывода следующей буквы
а аккуратным способом так понятно определение клоуза вопроса сейчас этими фактами был
этим определение будем это оперировать так что именно непонятно не смотрите вот у нас есть
ситуация альфа стрелочка а стрелочка альфа точка б бета а преднадлежащая множество ситуации
g дальше берем правила но это на и меньше замыкание вот а дальше посмотрим типа а если у нас есть
такая ситуация есть такая из такого правила хочется сделать аналог предикта ну делаем
следующее мы делаем переход в правила б стрелочка точка гамма да и дальше нам нужно
понять какой первый символ может выводиться после этого ну вот а первый символ который
может выводиться это любой символ который лежит вот в этом множестве first от бета
да причем замечу что бета это не обязательно термин последствий терминалов ой не обязательно
это слово какое-то хорошо то есть мы поняли с вами что делает клоуза и теперь последнее
определение которое нам сегодня понадобится это определение 6 go to и по лямбда
это клоуза вот такого множества
где
принадлежит и
то есть это по факту либо scan либо то что мы хотели с вами в опции complete по факту это
переходы в нашем автомате да мы просто двигаем точку за лямбду
смысл право налево нет слева направо у нас все такие правила при которых было вот такое условие
у нас было такое правило у нас у нас и было такое правило такая ситуация
точка получить такое правило так и теперь мы с вами за пол пары ввели все формулировки
теперь наша цель за полтора за полторы лекции все доказать так что морально настраивайтесь
первые несколько фактов которые нам помогут заключается в том что мы с вами будем доказывать
следующие леммом давайте я сейчас их проговорю сначала и потом мы с вами сразу выясним смысл тот
который мы в них закладываем потому что чтобы у вас сразу сложилась целая картинка а дм это
множество до так смотрите хорошо определение 7 забыл это множество всех допустимых ситуаций
для активного префикса альф да
активный префикс это то что у нас находится на стеке на автомата перенос вертки в какой-то
момент не но оно подходит просто в какой-то момент мы в тупик зайдем и не сможем сделать
либо действия какой-то по букве либо сделать свертку то есть это работает для произвольного
слова просто как обычно он работает распознаваемость словом в мп автомате да либо мы не можем
прочитать следующую букву либо мы не можем пройти в следующее состояние выполнить какой-то
переход по правилам здесь ровно так же вот значит теперь давайте по по фактам первый факт
которому доказывать если и лежит в подможестве альфы то замыкание тоже там лежит по факту
оно говорит следующее что замыкание не выбивает нас из состояния одного автомата да то есть если
мы получили какую-то какую-то ситуацию либо какой-то набор ситуации берем замыкание но что
допустимого префикса осталось второе свойство которое тоже важно если у нас есть какой-то
активный префикс да то следующий активный префикс мы получаем при помощи операции
go to то есть мы по факту говорим что у нас переход в переход в автомате коррекции
в нашу потому что вот это задает переход в автомате а собственно а мы хотим строить
состояние в автомате таким образом чтобы у нас там был какой-то путь этот путь как раз
будет соответствовать активному префиксу третье лемма которая говорит что клоуже
от вот такого стартовой ситуации это все слова которые принимают с активным префиксом эпсилон то
здесь по факту мы говорим что стартовое состояние в нашем автомате корректная значит смотрите у
нас получается что стартовая состояние в нашем автомате корректная дальше перехода корректный
это значит что тот автомат которое мы с вами построим является каким корректным
Да. Значит, это следующие факты. Давайте сейчас промотаем следующие вещи. Так,
следующие, значит, примеры. Это корректность будет наша автомата. Если мы, значит,
докажем, что у нас с вами после прочтения слова у из остеодеина будет
некоторая последовательность, то из этой последовательности мы можем как раз
вывести необходимый префикс. Это как раз нам даст корректность работы нашего алгоритма
в целиком. То есть каждый момент времени мы с вами смотрим, какой путь у нас в
автомате находится, и видим, что там выводится слово. Финальное состояние будет у нас вот такое.
Было такое, стало состояние такое. Вот. Мы сделали переход по s. Собственно, у нас на стеке будет,
если вот это обозначить 0, вот это обозначить 1, то у нас на стеке будет q0 sq1. Вот. Собственно,
из этого s мы как раз можем нашу прочитать слово. То есть, если вы смотрите, у нас слово
w прочитано, из s у нас выводится, и у нас есть вот такое состояние. w прочитано,
тогда у нас из s будет выводиться w. Собственно, что и нам и даст корректность. То есть любое
слово, которое дает распознавание в вот этом lr-автомате, он сразу нам даст распознавание нашего
слова. А это состояние в нашем автомате. То есть мы будем хранить путь, по которому мы идем в этом
автомате. Ну это давайте сейчас чуть-то попозже отложим, чтобы вот это у нас зафиксировалось.
Так. Значит, давайте попробуем сегодня до конца нашей лекции доказать вот эти вот факты.
Значит, и для этого нам нужно будет следующую вещь. Так. Ага. Что, перевделаем или нет? А? Что?
Делаем. Ну хорошо, тогда давайте пять минут перерыва, я пока с доски сотру. Ну потому что
надо немножко освежиться. Да? Будет. А вам на какие числа?
Можно. Ну только надо условия выполнить будет. Ну сдать все к концу семестра.
Да, нужно там хотя бы хор пять в семестре иметь.
Двадцать в сорока.
Ну когда это на зачетные сессии? Когда договоримся? Да, кстати, если кто-то из групп 131, 133, 153, 155 пойдет,
то вы нам сильно поможете. Флане, у вас экзамен в один день, в шести групп. Ну-ну. Да я видел.
А в смысле, экзамены по функциону нынче? Так, нам нужен клоу же пока.
Да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да,
да, да, да, да, да, да, да.
Э-э-э, вернул.
Это по какому?
Это что, меня нормально на экс-ваус принимать?
Почти любого.
Что-то я думал, что она...
Богданом-то дай 2,25.
Не, ну, перед колоком я вас на экс-ваус, ну-то нормально.
Господи.
Я просто заболел тогда airy в underground.
А время вырабатывается, умение того призвать.
Не, когда я...
Надо переехать к ней.
Не, когда я медленно читаю, у среднестатистического человека в фистехе к таким не относятся.
Меня могут слушать на 1,25.
То есть, если среднестатистический человек попробует меня послушать сейчас в мою лекцию по формалкам,
надо на 0,75 ставить.
Ну, человек, не то что с улицы, но который, допустим, совсем новичок.
Не, с улицы в фистехе это другой разговор.
Скажем так, если определение не владеть, то можно и на x3.
Ну, это...
Скорость 4.
Да.
Так.
Что, давайте продолжать, я думаю.
Можно это?
Так, я на всякий случай буду держать при себе определение к лоужу.
Вот, чтобы у нас ничего не было забыто.
Да.
Весь материал на экзамене можно с 0,5, да?
Нет.
LR можно с конспектом.
Да.
Да.
LR можно с конспектом.
Да, да, да.
Ну, сам видите, я с конспектом сегодня нахожусь.
Итак, давайте предположим, что мы продолжаем с вами.
Наказываем вот эту ляму.
Итак, пусть у нас альфа, стрелочка бета1.beta2, а принадлежит адам альфа.
А b, стрелочка гамма, принадлежит правилам грамматики.
Тогда нам нужно показать, что правила...
Так, бета, бета, гамма2.
Нам нужно показать, что правило бета, стрелочка, точка гамма...
Принадлежит, значит, c.
Давайте рассмотрим c, где, значит, такое, что c принадлежит first от бета2а.
Нам нужно доказать, что он тоже лежит в множестве допустимых ситуаций для префикса а.
Значит, для активного префикса альфа.
Значит, давайте смотреть.
Если вот это у нас лежит, тогда у нас из s, значит, выводится какое-то альфа, стрих, бета1.
Так, погорячился.
А.
Какое-то у.
Дальше за один шаг мы выводим альфа, штрих.
Так, секунду.
Бета1, бета2у.
Так, забываю бету.
2у.
А и дальше за какое-то количество шаков мы раскрываем вот это альфа, штрих, бета1, бета, ву.
Да.
И потом...
И потом за один шаг мы раскрываем это альфа, штрих, бета1, гамма, ву.
Вот такой у нас вывод получается.
Везде вывод правосторонний.
То есть мы раскрываем сначала правила, потом раскрываем бета2, потом сворачиваем правую часть правила.
Теперь смотрите, значит, что мы знаем из этого всего.
Во-первых, мы знаем, что а принадлежит ферста2.
И нам нужно рассмотреть с, принадлежащая ферст от бета2а.
То есть нам нужно его найти.
И сейчас я понял, что нам нужно воспользоваться некоторой леммой, которую я забыл сформулировать.
Да, значит, смотрите, есть вот такая вот лемма.
Лемма называется о нахождении множества клоузжа.
А?
Нет.
Смотрите, давайте я скажу так, что если у нас из альфа выводится какое-то слово у,
тогда до любого а принадлежащего ферста2 гаммы существует b, принадлежащий ферст,
такое, что а принадлежит ферст от альфа бета.
То есть смысл такой, что если у нас есть вывод какой-то правой части правила,
то существует такой первый символ, которым его можно заменить.
Да, то есть если у нас из альфа выводится какое-то у,
тогда для любого а, которое лежит во множестве ферста2 гаммы,
существует такое b из множества...
Гамма?
Гамма любое, да.
Существует b, лежащий во множестве ферст от гаммы, такое, что из а выводится ферст от альфа бета.
Давайте докажем вот эту лему, потому что она нам понадобится в нескольких местах.
И вот первый момент, где она понадобится, она понадобится ровно здесь.
Значит, первая лемма, которая очевидная.
Если у нас из альфа выводится бета, то ферст от бета является подножством ферст от а.
Ферст от альфа.
Так, будем доказывать ее?
Ну, здесь посмотрим первый символ, который выводится из бета, тогда он первый символ, который выводится из альфа.
Лемма два.
Да.
Пусть альфа выводится у, тогда...
Ну, так, да, согласен.
Блин, потому что я это...
То, что я занимаюсь тем, что...
Гамма, такое, что а принадлежит ферст альфа бета.
Альфа б.
Ну, давайте доказывать.
Смотрите, значит, а принадлежит ферст от...
У гамма. Значит, какие у нас варианты есть?
Тут существует два возможных варианта.
Ну, да.
Либо первый вариант у это ах,
второй вариант это у эпсилон.
Так, ну, смотрите.
Тогда, если у нас у это ах,
тогда, смотрите, альфа выводится у и вводится ах.
Вне зависимости от любой буквы б.
Логично.
Второй вариант, у это эпсилон.
Ферст от гаммы, если оно пустое, это доллар, это символ конца слова.
Смотрите, дальше, если у у нас эпсилон,
то тогда а принадлежит ферст от гамма.
Ну, тогда вопрос, чему взять b?
b равняется a. Все, доказали.
То есть, вот такая тонкий факт,
но который нам везде понадобится.
Хоть и очевидный.
Ну вот, теперь смотрите.
Давайте вернемся в нашу лему.
Да, в лему.
Пойдет. Ладно, разберемся.
Значит, смотрите.
Наша цель, давайте попробуем состыковать.
Нам нужно найти ц принадлежащий ферст альфа-2.
Такое, чтобы у нас с вами все было корректно.
Давайте посмотрим, на самом деле, ц принадлежит ферст от чего.
Вот из вот этого факта мы получаем, ц принадлежит ферст от чего?
От vu.
Логично?
Мы доказываем следующее, что вот эта вот множество,
вот эта вот ситуация, она будет допустимой.
Что ситуация, которая появляется из вот этих двух правил,
где ц принадлежит ферст от бета-2,
она будет допустимой для активного префикса альфа.
Вот, ну смотрите.
Значит, у нас ц принадлежит ферст от au, vu.
Значит, дальше, смотрите, говорим следующее.
Следовательно, существует тут какое-то бета,
существует а, которое на самом деле будет тем же самым а, которое здесь есть.
Вот.
Так, сейчас существует, давайте ц лучше напишу.
Вот ц принадлежит ферст от бета-2.
А вот ц принадлежит ферст от бета-2.
Давайте ц лучше напишу.
Сейчас напишем аккуратненько.
Вот, для вот этого вот ц, которое у нас есть,
так, бета-2 выводит u, выводит слово v.
Существует некоторое, так, давайте сейчас состыковим это все с леммой.
Да.
Значит, смотрите, здесь можно аккуратненько сказать,
что на самом деле вот это ц восстанавливается однозначно.
Для вот этих правил, судя из этих лемм.
Поэтому для ц, которое у нас будет ферст от бета-2а,
которое здесь есть, сейчас, дайте момент.
Так, ладно, давайте сделаем по-другому немного.
Смотрите, у нас ц лежит ферст от бета-2а.
И нам нужно здесь доказать следующее, что на самом деле, да,
бета-2, бета-2, вот оно.
Бета не было. У нас это было просто для конкретного символа.
Смотрите, чтобы доказать допустимость, давайте я промотаю вот сюда.
Вот она. Это допустимость, вот она.
То есть нам нужно доказать, что вот это вот ц, которое лежит ферст от бета-2а,
будет лежать в ферст от ву.
Вот. Значит, ну, опять же, смотрим, почему это так?
В это слово, которое раскрылось из бета-2 в какой-то момент времени.
Ну, смотрим, значит, что у нас получается. Вариант первый, который есть.
Бета-2 выводит в неравную пустому.
Ну, тогда понятно, что ц это, точнее, что в это цх.
Ферст от ву.
Значит, второй вариант.
B2 равняется епсилон. Ой, В равняется епсилон.
Следовательно, так, B2 вводится епсилон.
В вводится епсилон, значит, из B2 вводится В равное епсилон.
Епсилон. Следовательно, ц принадлежит ферст от а.
Следовательно, ц равно а. Вот.
И тогда ц принадлежит ферст от ву, которая просто ферст от у.
А вот это у нас есть, потому что у нас а изначально была лежащим ферст от у.
Вот.
Доказали. Вроде этот факт доказали.
Так, первую лему доказали. Точнее, даже мы доказали раз, два, три леммы.
Что, доказываем теорему первую?
Мне кажется, на этом мы с вами как раз и закончим сегодня.
Вот это вот.
Сейчас.
В смысле?
Да.
Да.
Да.
Да, х1, так далее, хк, это да, это символы просто.
Да.
Тогда к больше нуля и важно.
Тогда go to от adam,
xkt, adam.
В какую сторону очевидно?
Справно или слева-направо?
Наоборот, слева-направо.
Итак, пусть у нас, смотрите, а стрелочка, а точка хктб
принадлежит adam,
xk-1.
Ну тогда, смотрите,
а, а стрелочка а хкт, точка б,
а принадлежит go to adam.
Давайте я буду сокращать это, x1 к-1,
xкт.
Вот, смотрите, допустим, у нас вот такая вот ситуация есть для некоторого активного префикса,
2к-1, мы считываем букву к, двигаем точку за ним.
Да, да.
Вот.
Берем любую ситуацию, да, которая у нас есть,
да, и делаем go to.
Для тех ситуаций, которые есть с точкой. Вспоминаем определение go to.
Мы берем все правила, которые у нас были, такого типа,
двигаем точку для них, а дальше что делаем?
А дальше мы делаем closer.
Ну да, для этой стороны будет closer.
Причем, смотрите,
что важно?
Чего?
Мне кажется, тут это уже, все уже начинают шуметь.
Значит, смотрите, вот эта вот штука дополнительно будет принадлежать adam,
x1 и так далее, xk.
Почему вот эта штука будет лежать в adam, x1, xk?
Ну, давайте посмотрим.
И за штрих правосторонней грамматикой выводим a.
Так, что выводим?
Какое-то альфа-1.
Дальше у нас a, гамма.
Точнее какое-то слово u.
Дальше за один шаг мы выводим альфа-1.
Альфа, xк, бета, наша u.
У принадлежит, а принадлежит фёрстату.
Так, смотрите, а лежит у нас в фёрстату.
А альфа-а, альфа-1-а, это x1 и так далее, xk-1.
Следовательно, альфа-1, альфа-xк, это x1 и xк.
Да, то есть мы просто двигаем точку.
У нас активный префикс меняется с x1, xk-1 до x1, xк.
Да, кто-то поплыл.
Логично, да?
Да, то есть смотрите, просто мы берём выводе, точку меняем с одного силы на другой.
Ничего криминального не происходит.
А теперь смотрите, значит у нас вот эта штука лежит в голту, вот эта штука лежит в клоуже.
А что такое клоуже от голту?
Кто мне может сказать?
Да, это просто голту.
Да, замыкание от замыкания ничего не меняет.
Так, а при этом смотрите, мы доказали, что клоуже от admissible нас тоже оставляет в том же самом множестве.
Вот, поэтому мы доказали с вами следующую вещь, что голту вот этой штуки вложено в аддом от этой штуки.
Да, то есть берём базовый элемент, он лежит в admissible, берём замыкание, он остаётся в пределах тех же самых admissible.
Это как раз то, что нам даёт Лемма.
В обратную сторону.
Я надеюсь, я сегодня не кокну.
Хотя, наверное, уже кокнул.
Так, поехали, следующая.
И постараюсь картинки рисовать.
Так, значит, в обратную сторону.
Пусть а, бета два, а принадлежит admissible от х1 и так далее к а.
Нам нужно доказать, что эта штука лежит в голту от аддома х1, х2, ой, х1, хк.
Значит, давайте нарисуем картинку.
Смотрите, из штрих у нас выводится какой-то момент а.
Пусть у нас выводится здесь символы с х1 по хgт.
Тут у нас какой-то у.
А дальше за один раз у нас выводится хgт плюс один, хкт бета два у.
Точка стоит здесь.
Это означает, что эта штука у нас активный префикс.
При этом а это ферста ту.
Так, теперь смотрите.
Сейчас будет взрыв башки.
Не было еще.
Обозначим вот эту штуку за d.
И вот вспомним наше любимое слово.
Индукция, нет.
Индукция по параметру d.
Под линии вывода отсюда до сюда.
То есть у нас индукция идет под линии вывода.
Смотрите, суть в чем.
Давайте еще раз.
Мы хотим доказать, что вот эта штука,
если у нас есть вот такая ситуация,
которая появилась после d шагов, раскрывается после d шагов,
то эта ситуация будет находиться в go to от х1 и так далее,
хk минус 1 по хк тому.
Мы делаем индукцию по параметру d здесь.
Так, сейчас скажу.
Сейчас.
d это у нас с вами.
d это глубина вот этого вывода.
Количество шагов, которые мы делаем.
Да.
Ну вообще у нас правосторонний вывод, поэтому у нас выведено.
Да, да, да.
На этом мы забиваем.
Так, смотрите.
Значит, здесь есть два варианта.
Первый вариант следующий.
Он простой.
пусть g меньше k.
Это значит, что у нас из a выводится какой-то набор символов.
Тогда смотрите.
У нас получается следующее, что a стрелочка x1, xg плюс 1,
xk минус 1, xkt.
Давайте я точку буду поставить b.
Бета 2 принадлежит адам.
x1, xk минус 1.
А, символ забываю.
Почему это так?
Потому что изначально x1, xg, xkt у нас лежит в адам.
От нашей конкатинации.
Значит, одна из этих штук, если мы сдвинем точку слева,
то по определению адам ничего не поменяется.
В этом выводе, поставим точку сюда, поставим точку сюда,
ситуация все равно будет допустима только для любого активного префикса.
Окей.
Значит, смотрите.
Получается a стрелочка xg плюс 1, k.
kt b2 a принадлежит go to.
k минус 1, xkt.
То есть этот спуск достаточно простой.
Вот это?
Смотрите, вот это лежит в адме такой штуки.
И поскольку у нас есть как раз фиксированное правило,
из которого у нас получается адам от этой штуки,
и до него у нас был адам, и до него у нас точно был,
и перед xkт у нас был какой-то символ,
то мы можем просто точку сдвинуть.
Просто вывод будет тот же самый.
Мы раскрылись по этому же правилу.
Просто вместо префикса, который у нас был от xg плюс 1 до xkт,
мы берем префикс от xg плюс 1 до xkт минус 1.
Я пока с доски сотру.
Где?
А, в данном случае бета 1 это у нас вот такая штука.
Да, вот они есть.
Давайте считать, что перед выводом символа a мы раскрыли первые g символов, которые были.
Дальше у нас раскрывается при помощи этого правила символы от xg плюс 1 до xkт.
А это как раз бета 1.
Так.
Вот второй переход будет взрывным.
Сначала, смотрите, мы делаем следующее.
Мы говорим, вот это вот сюда.
Да, бета 1 это xg плюс 1 до xkт.
То есть у нас есть чай...
То есть смотрите, у нас разбивается наш...
То есть когда мы раскрываем из а вот эту штуку,
у нас символ здесь xg плюс 1 до xkт,
а здесь x1 до xg.
Смотрим два случая.
Либо g меньше k, либо g равняется k.
А какой?
Если у нас x1xk, то это активный префикс.
Как бы у нас есть что-то, что мы раскрыли до раскрытия нашему терминалу a,
и что-то, что имеется вид после раскрытия терминала a.
В конкатинации это x1xk.
Вопрос.
Что это за символы?
Так.
Второй случай.
g равняется k.
И здесь как раз нам нужно кое-что нарисовать еще детальнее.
Давайте рассмотрим следующую вещь.
Рассмотрим, как у нас появляется наш символ a.
То есть вот он у нас a,
который точка b2.
И за d шагов у нас была вот такая картинка.
Дальше за один шаг сверху у нас на самом деле может быть несколько ситуаций.
Давайте мы с вами вот это назовем, вот это назовем гамма,
а вот это назовем гамма штрих.
Наша цель, смотрите, важно доказать следующее,
что наша цель будет доказать,
что вот эта вот ситуация b2 для какого-то символа x,
который тут нужно считать,
будет являться допустимой.
Точнее, то, что он получается некоторым замыканием множества ситуаций.
И тогда у нас по замыканию множества closure мы с вами это получим.
То есть наша цель каким-то образом сдвинуть точку перед экскатом.
Хотя вот этой точки перед экскатом у нас нет.
Да, точка после экскатого.
То есть нам нужно где-то вверху найти экскаты для того, чтобы сдвинуть точку над ним.
То есть нам нужно доказать, что вот эти все ситуации
на самом деле являются каким-то очень жутким операцией closure,
которая у нас есть.
То есть нам нужно найти ситуацию, в которой мы сдвинули точку перед экскатой.
Так, ну смотрите, здесь как раз нам нужно сделать следующее.
Смотрите, так, так, так, так, так.
Пусть это, да.
Значит, смотрите, давайте я тут напишу.
Значит, С у нас из вот этого вывода будет лежать first,
гамма, гамма, штрих.
Так, стоп.
А, вот это символ А.
То есть мы смотрим вот эту ситуацию.
У нас А лежит first от гамма, гамма, штрих.
Да, если у нас эта ситуация допустима для активного префикса.
Нет, нет, нет, нет.
Мы можем сказать, что, смотрите, вот это выводится какое-то В,
а вот это выводится W.
Да, оно лежит справа от А.
First WV.
Так, дальше, значит, смотрите.
Нам нужно, а?
Кто? First?
Ну доллар всегда есть для этих целей.
Символ конца строки у нас всегда есть.
Нет, нет, нет, это конец дерева вывода.
У в данном случае это WV.
То есть сначала мы раскрываем все до С.
Дальше мы раскрываем до А.
И, собственно, вот у нас правило есть.
То есть это все, что у нас находится справа от С.
Гамма, штрих?
Ну да.
Нет, смотрите, гамма, штрих это С без штрих,
а гамма это А без С, вот так.
Да, за один шаг.
А вот это количество шагов D минус 1.
Да, хорошо.
Смотрите, тогда мы можем сказать следующее.
Так, сейчас пойму.
Отлично.
Теперь давайте воспользуемся вот этой леммой,
которая говорит следующее, что давайте заметим,
что существует B, принадлежащее first от гамма, штрих такое,
что А принадлежит first от чего?
От гаммы.
От гаммы B.
Лемма.
Теперь смотрите, фишка.
Следующая.
Смотрите, вот эта штука B лежит first от гамма, штрих.
И смотрите, а это означает, что С-стрелочка точка альфа-гамма
и этот символ B принадлежит Адам, х1 и так далее, хкаты.
Дальше сделаем следующее.
Смотрите, что мы понимаем?
Мы понимаем, что А-стрелочка Б2 принадлежит правильной грамматике.
Смотрите, вот это по предположению индукция,
значит, вот эта вот ситуация будет принадлежать множеству go to,
Адам, х1 и так далее, хk-1, хкаты.
То есть вот оно работает у нас в предположении индукции.
А теперь смотрите, из вот этих двух фактов у нас получается,
что А-стрелочка точка Б2, С, которая лежит first,
а мы берем как раз вот эта гамма-бета, которая нам нужна была,
принадлежит closure от вот этой ситуации, а гамма-бета.
А что нам дает операция closure?
Почему она лежит в closure?
Ну, по определению.
Смотрите, мы берем правила нашей грамматики, берем не терминал, который у нас есть,
и берем first от правой части.
А по лемме как раз мы говорим, ой, а внезапно у нас С принадлежит first.
Так, сейчас, секунду, только я что-то накосячу где-то.
А, А тут.
Вот.
То есть как раз, смотрите, у нас А получается лежит в ферсте от гаммы-бета, вот то А.
Как раз для этого нам нужна была лемма.
Да, а это значит, что вот эта вот ситуация лежит в замыкании.
Ну, этого множество ситуации.
Ну, а это означает, что вот эта штука, ну, поскольку вот эта лежит в go2,
а эта является под множеством go2, то это и само все является под множеством go2.
Фух.
Доказали это теорем.
Приношу извинения за то, что опоздали, задержались, но добили это доказательство в итоге.
Значит, смотрите, по формату в следующий раз, значит, мы будем с вами доказывать вот эту вот лему вторую.
Она доказывается, не поверите, ровно так же, как вот эта теорема, ровно той же самой индукции.
Только база другая.
Вот.
А дальше уже будем рассматривать остальные факты.
Все.
На самом деле, на самом деле, это была самая сложная теорема из этой темы.
А?
А какая?
Вот.
Вот эта?
А что?
У нас такое неформальное правило, доказательство LR на отл.
Не, ну, что если вы доказываете LR, то это там, как говорят, минимально отл будет.
Ну, это грустно будет, с учетом того, что вы пользуетесь от DKA.
Все, ладно, давайте разбегаться.
