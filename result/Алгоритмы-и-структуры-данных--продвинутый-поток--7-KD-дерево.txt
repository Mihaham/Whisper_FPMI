Ну, прежде чем доходить до, собственно, едва ли не вершины, там, вершины нашего курса,
конечно, нельзя обойти вниманием такую замечательную структуру данных, как кодэдерево.
Кодэдерево, по-русски или по-английски? Вообще, говорят по-английски, да. Кодэдерево. То есть,
кодэ, в данном случае, обычно конвертное дерево. Ну ладно, на самом деле, мы не будем обсуждать там
прям совсем кодэ. То есть, на самом деле, основное, что мы будем обсуждать, это называется 2D дерево.
Вот. Осталось, чтобы выяснить, что это значит. А значит, это следующее. Мы попытаемся решить такую
неожиданную задачу, с которой мы, по идее, когда-то сталкивались, когда обсуждали феточка.
Задача такая. Смотрите. Дано n точек. Вот. Да, n точек на плоскости. Пока, для начала, там,
для простоты, будем считать, что они не меняются. Это фиксированное множество точек. И дальше с ними
нужно что-то делать. Ну, самое базовое, что можно было бы с ними делать, это даются запросы, типа,
дан прямоугольник. Да, внимание, прямоугольник на этот раз в стороны параллельный, осям координата не
как в прошлый раз, да? Вот именно параллельный. И нам нужно, и надо сказать, сколько в нём точек.
Ну, например, это вот такая самая базовая задача. То есть, на самом деле, то, что мы придумаем, можно
там гораздо лучше делать. То есть, например, можно сказать, что давайте в каждой точке написано число.
То есть, я не знаю, пять, семь, там, восемь, двадцать пять, тридцать шесть, четыре. И там, и так далее, там, шесть, там, восемь, два, пять, семь, там, один, два, пять, семь, десять. Вот. И там, ну, три запроса, там, в ДУХе, дан прямоугольник, найди сумму этих чисел. А ещё, ну вот, а ещё там могут быть запросы,
а возьми, пожалуйста, точку и поменяй в ней число. Ну, по факту, как мы убедимся, на самом деле, всё, что умело быть там, то есть, на самом деле, там развлекаться можно едва ли не на уровне, не до уровня присваивания на прямоугольнике, на самом деле.
То есть, такая структура, которая просто фенвичик из хомяка. То есть, да, мы, конечно, уже там, помнишь, в прошлом году делали это всякими там, называть это же, там, какими-то деревом фенвиков, деревьями фенвиков, да? Было дело.
Но, тем не менее, но, правда, я боюсь, что там совсем присваивание на прямоугольнике, боюсь, всё-таки дерево фенвиков у нас не тянет, потому что оно даже присваивание на подотрезке не тянет. А мы вот всё-таки берёмся это сделать.
Ну вот, на самом деле, ещё много чего ещё. Потому что, зачастую, если не заниматься, не цепляться за симптомикой, то на самом деле, когда дерево будет позволять там делать какие-то вопросы в духе, добавь точку и удали точку ещё, а потом ещё возьми точку и найди ближайшую.
То есть, ну, точнее так, это уже будет не очень симпатически, но, ну вот, но так, в целом, на, так сказать, реалии данных оно на самом деле вполне может помочь.
Потому что работать оно будет в следующем интересном углу.
Значит, смотрите, то есть, ну, как следует из названия, это дерево, даже подвешенное. И работать оно будет так. Значит, строиться на этих точках дерева будет следующим образом.
Значит, мы возьмём все эти точки и разделим их в какую-нибудь вертикальную прямую по Х.
Берсикально прямая нечедакий точка может не проходить.
Ну, на самом деле так, как повезёт. То есть, на самом деле, может так случиться, что такой точке такой прямой не бывает, естественно.
Не бывает такой.
Ну, нельзя провести такую прямую, чтобы там слева и справа оказалось одинаковое число точек.
Ну, я это не требую.
Ну, а я вот скажу, что в идеале хотелось бы именно так.
Но это в идеале. Потому что по факту может так случиться, что, ну, опять-таки, это количество точек может быть нечётным, но это, естественно, мелочи.
Но самое главное там, что в середине может оказаться очень много точек на одной прямой.
Но в этом случае тогда, если их тут будет очень много точек, то мы сделаем так, то мы вот до медианной точки, ну, мы там до какой-то точки отправим их типа влево, а остальные отправим вправо.
Ну, понятно.
Ну, а с тем, чтобы разделилось пополам.
Вот.
То есть, в принципе, вот получается.
То есть, получается, мы вот разделили наш, так сказать, баунденбокс на, можно сказать, два баунденбокса.
Что мы делаем теперь?
Ну, на самом деле, да, это практически мы сейчас корню подвесили детей.
Кто корень?
Ну, корень. Ну, скажем так, у нас каждая вершина будет отвечать за какое-то множество точек. Корень отвечает за всех.
А, то есть мы через какую-то вершину?
Нет, не обязательно через вершину.
Ага.
Не обязательно через вершину.
Не обязательно через вершину.
Ну, хотя в принципе можно.
Скажем так, в принципе можно, но не обязательно.
Вот.
Ну вот, теперь, значит, два ребенка, каждый отвечает за половину точек.
На перечал.
Внутри каждого из них, значит, каждой части мы тоже делим точки на две равные по количеству части.
Но, очень важный момент.
Теперь мы делим не по иксу, а по игроку.
Так, сколько у нас тут?
Раз, два, три, четыре.
Так, это не точки.
Пять, шесть, семь, восемь, девять, десять, один, двенадцать.
Ну, значит, где-то надо шесть точек поотсекать.
В общем, получается вот что-то подобное.
Вот.
Можно прям вот так нарисовать.
И вот.
А здесь, обратите внимание, у меня вообще вот так получается.
Очень здорово.
Вот.
Вот.
Тут вот такая вот жидная линия.
И во второй половине мы тоже так делаем.
Но, обратите внимание, то есть вполне вероятно, что граница пройдет чуть-чуть в другом месте очень сильно.
Вот в нашем случае, вот где-то вот здесь.
Вот видите, прямоугольники получатся вот примерно вот тут.
Вот.
Теперь в каждом из них.
То есть вот у нас уже четыре внука образовалось.
В каждом внуке мы делаем ту же операцию, но важно, что мы постоянно чередуем.
Собственно, по каким координатам мы все это делим.
Вот.
В данном случае вот.
То есть сейчас вот делим снова по иксу.
Тут получается вот такой прямоугольник.
И вот такой прямоугольник получается.
Так.
Что еще?
Ну вот.
Здесь, соответственно, тоже как-то пилить надо.
Ну, допустим, вот.
Примерно вот так.
Вот, например, условно.
Пум-пум-пум.
И там две точки остались.
То есть, заметим, что если остались две точки, то здесь уже просто разделяем точки.
И соответственно, просто получается под прямоугольники, которые отвечают только за одну точку.
Естественно, дальше не строим.
Вот.
Ну и так далее.
Здесь тоже делим их примерно вот тоже пополам.
По количеству.
Тут так делим.
Тут так делим, получается.
Ну и так далее.
Ну принцип вы поняли, да?
Вот.
То есть вот такое подвешенное дерево.
Кстати, за какой всем точку мы можем это построить?
У нас мы делим напополам.
Ну да.
Ну да.
То есть в принципе получается такой достаточно уверенный N log N.
И получается вот такое тоже.
Что-то отдаленно напоминающее дерево отрезков.
Правда?
Ну вот.
Ну это очевидно.
Логариф, тут уровень, очевидно, логарифом.
Тут хорошо.
То есть да, потому что, например, делим по именно точке пополам.
То есть площади этих прямоугольников нам не важны.
Ну вот.
И да.
Но что теперь можно с этим всем делать?
Ну заметим, что теперь.
Ну вот.
Если мы хотим, например, найти количество точек.
Ну идея очень простая.
Ну, во-первых, в каждом, ну, например, самое простое, что можно делать,
это в каждом прямоугольнике пытаться искать количество точек.
Да?
Ну и как это можно сделать?
В каждом прямоугольнике что за каждом?
Ну в каждом прямоугольнике, в смысле, в каждой вершине?
Ну, то есть, в каждом вершине соответствует прямоугольника по прям�угольнику.
Не в плане вложенных в го coupa прямоугольника.
Или я не понял?
Ну, в каждом вершине соответствует прямоугольника.
Что с этой деревной?
Ну да.
Вот.
Mattissin package вложеннаяlee every one of Achmed's coordinates.
То есть которая корридирует в своем прямоугольнике, eating point..
Дерево в дереве отрезков каждая вершина отличается под отрезок элементов.
Вот так вот.
Да.
То есть вот у нас действительно примерно так начинает выглядеть наше любимое дерево.
Вот таким вот образом.
Так, вот там тоже еще что-то возникает.
Как видно, вот такие точки там, где-то там.
В общем, такая вот.
Такая вот где-то красота.
И соответственно, почему ноты?
И как же нам теперь пытаться искать количество точек внутри какого-то по прямоугольцу?
Не обязательно из этих, да?
Они у нас приходит запрос и там придет по прямоугольцу.
Да.
А вот аналог.
В дереве отрезков мы говорили, что...
Как мы делали это в дереве отрезков?
В дереве отрезков мы объявляли, что у нас есть несколько выделенных отрезков каких-то, да?
Там тоже от...
Которые, в каждом из которых мы поддерживали сколько там внутри точек лежит, да?
Ну или там сумму на отрезке, или что-нибудь еще.
Здесь мы это можем сделать.
Да. Здесь мы тоже это можем сделать.
То есть в каждой вершине, вот для каждого соответствия по прямоугольцу, хранить сколько там точек.
Это вообще-то при построении легко делать, правда?
Вот.
Но почему это нас приводит?
Но вот приводит...
Но теперь мы искать вопрос
А что делать?
Что делать?
Если очень хочется...
Например, вот дам какой-нибудь абсолютно произвольный там мерзкий прямоугольник.
И хочется посчитать количество точек в нём.
Кажется, какая же у нас личная идея?
Да.
Ну конечно есть абсолютно напрашивающаяся идея.
То есть действительно делаем просто как в дереве отрезков.
То есть когда мы работаем с какой-то вершиной,
мы говорим, что если эта вершина целиком лежит в этом прямоугольнике,
то давайте прибавим.
То давайте просто прибавим это количество к ответу и выбросимся.
Соответственно, если они не пересекаются,
то тоже скажем, что здесь ловить нечего,
и тоже выбросимся.
То есть мы храним в каждой вершине левую и правую границу, нижнюю и верхнюю?
Ну да.
Причём, да.
Причём заметим, что можно практически реально
баунденбод хранить.
Особенно если мы говорим о статической версии.
Да.
Если уж очень хочется говорить о статической версии.
Вот.
Чему это нас...
Ну вот.
Соответственно, если прямоугольники пересекаются,
то тогда придётся от двух вершин их запускаться.
Спасибо.
Да.
То есть технология полностью идентична деревоотрезкам.
Более того, пока точки не меняются,
в общем-то вы с этим...
Тут можете делать всё абсолютно то же самое,
что делали там в деревеотресках.
То есть, пожалуйста, присваивание на под прямоугольнике там,
прибавление на под прямоугольника какое-нибудь.
То есть практически всё что угодно.
Ну, желательно коммутативное, конечно, да?
Потому что...
В каком оно?
Потому что...
Потому что конкретный порядок точек внутри прямоугольника тут естественным образом низа.
Вот.
Ну, в принципе, вот, пожалуйста.
То есть можно присваивание, прибавление, там всё что угодно.
То есть технология, в общем-то, достаточно простая.
Да, выглядит разумно.
Да, выглядит разумно.
Остаётся только маленький неприятный момент.
Такой может быть самый весёлый на самом деле в этой структуре.
За какой осимпточек это будет работать?
Я думаю, за лохо, да.
Да?
Почему?
То есть как мы оценивали это?
Да у нас там просто было два метра...
Ну, две границы всё-таки у отрезка.
По этому запросу.
И спуститься в них, это было...
Гаррифмы.
И всё.
А все остальные у нас просто на вот единицы.
А вы давайте посмотрим.
Так, ну давайте попробуем порисовать.
Давайте попробуем.
Чем это просто там приводит.
Действительно.
Что действительно?
Если это было дерево отрезка.
То, что мы делаем.
Дерево отрезков действительно всё просто.
То есть мы говорили, что некогда там
доказательства можно проводить следующим образом.
То есть некоторое время мы
честно спускаемся
до какого-то ребёнка,
внутри которого всё находится.
Но в какой-то момент мы обнаруживаем,
что всё-таки наш подотрезок
начинает пересекать
середину этого ребёнка.
И тогда у нас тут
единственная реальная развилка.
Ну, реальная, то есть что
в каждый из веток будет проходить что-то
отличное от быстрого выбрасывания.
Вот.
И так вот.
Вот дальше получалось, что теперь надо
донайчейкой, надо найти ответ
на каком-то её суффиксе или префиксе.
Ну а суффикс-префикс понятно,
что там тогда получалось, либо вы
правую вершину полностью берёте и идёте влево,
либо вы левую вершину полностью
игнорируете и идёте только вправую.
И тогда получается, что дальше реальных
шагов вы сделаете не больше высоты дерева
и тут не больше высоты дерева.
Отсюда и получался логарифм. Правда?
Вот.
Что же происходит, когда вы
пытаетесь обобщить эту технологию
на, собственно,
2D?
Ну и здесь на самом деле уже
да, то есть начало
казалось бы то же самое.
То есть этот прямоугольник будет некоторое
время куда-то там в каких-то
детей спускаться.
Вот. То есть там спускаемся,
спускаемся, спускаемся, то есть он там
оказывается, оказывается,
оказывается, но баба в какой-то момент
он попал под разделение.
Но значит ли это, что
каждый, что дальше теперь
у нас там
существенных развилок не будет?
Вот это, а кто сказал?
Никаких гарантий.
То есть более этого может быть вполне себе
следующая какая-нибудь развилочка.
Ну вот. И дальше может быть
вполне себе весело.
Правда.
Да, но как?
Четверочкой.
Нет. Четверочкой.
Ну тут я скажу смотреть.
Вот.
Ну вот.
Но тут на самом деле давайте
так скажем.
Смотрите. Давайте-ка я
для примера того, как
бы это будем делать, вот сейчас я попробую
еще раз оценить деревоотреск.
Ну, потому что я напишу
следующее. Вот пусть у меня допустим
ТАТ.
И Т я буду рисовать с таким
индексом.
То есть пусть у меня, например
то есть пусть будем
рисовать,
что вот например
то, что я хочу, у меня
жиром я буду рисовать
то, что я хочу.
Ну вот. А то, что хочется посчитать
а
пунктиром я буду считать
что, собственно, типа
на каком отрезке я типа нахожусь.
Тогда смотрите.
То есть это будет считаться, что
вот у меня дан большой отрезок длины N
и внутри его я хочу найти
вот там сумму
чисел на каком-то вот таком подотреске.
Ну, на каком-то, то есть по нему я ничего не знаю.
Тогда теперь
заметим, что у него будет два варианта.
Значит два варианта. Когда я поделю
пополам, у меня получится
либо T от того же
самого
от N пополам
плюс O от единицы.
Либо
либо он все-таки разделится.
Но тогда у нас будет
новая, сейчас мы введем новую
T.
Новая T у нас будет как бы
гарантировать, что я буду
на префиксе.
Только их тогда уже будет два
T от N пополам
плюс O от единицы.
Наверное T от префикса
плюс T от суффикса.
Там же один префикс, один суффикс.
Да, но тут мы заметим,
что тут префикс и суффикс обрабатываются
симметрично. То есть поэтому
на самом деле там можно сказать, что T от префикса
плюс T от суффикса, но суть одна.
Есть только такая суть, что
почему у нас есть только T от N в таком случае
от
ну, когда у нас вложено целиком
еще по нему ничего, почему не рассматривать
один ситуацию.
T от N это с префикса сразу
начинается.
Ну, на самом деле так.
Ну да, могут быть, конечно,
теоретически есть случаи,
что это просто O от единицы, конечно.
Но тут проблема такая, что
как конкретно вычитается это T,
мы не знаем. То есть это зависит от конкретного отрезка.
Поэтому наша цель
доказать какую-то верхнюю оценку.
То есть
по большому счету
мы хотим для каждого T
найти какую-то асимптотику.
Что она там, скажем,
не превосходит, скажем, C умножить
на
N в степени
две трети.
Допустим, вы доказали, что
каждый из этих тесек не превосходит
C на
N в степени
или может быть там
это будет на две трети, а это будет на одну третью.
Мы же не знаем.
Мы пока не знаем, мы пока
расписываем.
То есть каждый из этих трех вариантов.
Ну, давайте
смотреть.
Что у нас тогда может быть?
Вот, давайте
рассмотрим, что это
за T. Ну, здесь действительно
видим, что пока из новых тешек у нас появилось
только вот это. Давайте ее разбирать.
Итак,
T от N равно чему?
Ну, на самом деле,
здесь получается все достаточно
просто.
Ну да, потому что
по факту это равно...
Смотрите, я могу так красиво
расписать. Тут два варианта расписать.
Либо это будет T
от вот такого жирного
отрезка.
От N пополам.
Плюс T от...
Ну, T все-таки
с индексом тоже префикса.
От N пополам.
Плюс вот единица.
Либо, наоборот, что это равно
T от
префикса.
От N пополам.
Плюс T от
пустого отрезка. Вот так, допустим,
напишем. Ну, это я так вот просто пишу,
чтобы понятно было, вот единица.
А можно еще раз
объяснить эти обозначения?
Ну, это означает все еще. Смотрите, мы каждый раз
по факту...
То есть мы каждый раз приходим в какую-то вершину
деревоотреска.
Вот, смотрите, какую-то отрезку. И хотим найти
сумму не на все. Там, на некотором
подотреске этой вершины.
Дело, которое не просто подотрезок, а вот он
еще и как-то относительно ее расположен.
В данном случае мы точно знаем, что это префикс,
например.
Или вот в этом обозначении мы точно знаем,
что этот отрезок полностью с ней, допустим,
совпадает.
Или в данном случае он означает, что
на самом деле этот подотрезок пустой.
Вот так все.
Как-то не явно
подповарили симметричную ситуацию
когда у нас касание
вертикальной и горизонтальной стороны,
или что?
Нет, погодите, это мы деревоотреской рисуем.
У вас деревоотреска?
Пока деревоотреска.
Я пока
провожу еще один анализ деревоотресков
для того, чтобы показать, как мы это будем делать.
Хорошо, потому что я не то делаю.
Вот.
Деревоотреска пока
двумере тут
не причем.
Ну, давайте смотреть, как же тут можно все сделать.
Ну, заметим следующее. Можно сразу заметить,
что вот эта штука равна
автоматически от единицы.
Поэтому давайте мы ее
просто вытираем.
Ну, в принципе,
мы ее вытираем.
Вот эту мы тоже вытираем.
И получается вот такая штука.
Вот она.
Вот.
Всему это нас приводит.
А приводит нас это...
То есть получается какая-то
перекуретта вида f от n равно
f от n пополам плюс o от единицы.
Правда?
То есть отсюда автоматически следует,
что это равно
o от логарифма n.
Логично, да?
Думаю, даже там...
желающие могут часто доказать это
по индукции.
Думаю, это и так понятно.
Но тогда получается,
что... значит, тогда мы тут
подставляемся и пишем, что это равно...
Получается, видим, что...
Ну вот.
Что t от n у нас получается равно
либо t от n пополам, либо
там, соответственно,
2 логарифма
n пополам.
Ну ладно, в любом случае o от логарифма
n.
Логично, да?
Потому что, смотрите, если эта штука
точно o от логарифма, да?
То как бы, если ее домножить на 2,
то она останется o от логарифма.
Ну, то есть, да, нормально o от логарифма n пополам,
но o от n логарифма n пополам
это o от логарифма n, правда?
Вот.
Ну и, короче, это уже тоже можно убрать, просто
сказать, что... Получается, у нас...
Значит, соответственно, есть несколько
вариантов.
То есть, действительно, либо t от n просто
сразу говорят, что o от логарифма n.
То есть, либо вот такой вот еще
рекурсивный вызов.
Но в худшем случае, очевидно, будет логарифм, правда?
Сейчас, а можно еще
короче использовать?
Значит, еще раз.
Что происходит?
Ну и говорим, что
когда мы вычисляем... То есть, допустим,
есть у нас вот этот подотрезок имеет длину n
большой, да?
А подотрезок, который мы с ума
ищем, он там может быть произвольным, да?
То рекуррент o может расписаться
тремя случаями.
Первый случай, что o просто o от единицы.
Второй случай, что
o будет там, действительно, просто такой же
вызов от себя o от единицы.
Ну, формально надо было написать четыре случая,
что... Ну, формально надо было написать, что
на самом деле, чтобы совсем правильно написать.
Тут надо написать, что будет вот такой случай
плюс t...
Пишу. Плюс t
просто от пустоты.
Ну, понятно, что
на самом деле это как-то тоже можно
убрать, это мы знаем, да?
Либо еще можно было расписать, что
этот отрезок все-таки распилится
на два, но один из них будет
префиксом и другой суффиксом, но здесь
t для префикса и для суффикса мы
объединяем в одну силу симметричности.
Вот.
То есть, получается, расписать надо
вот всеми тремя вариантами.
Чтобы это сделать точнее, мы теперь
расписываем эту нашу новую рекурренту,
которая появилась. Что у нас
получилось?
Получилось, соответственно,
здесь она просто так получилось,
что она
два варианта, но в обоих
она свелась практически
к самой себе.
Еще мог быть, конечно, вариант, когда
это ровно половина,
то есть, там могло быть, что...
Ну, короче, тоже от единицы могло быть.
Но в худшем случае, очевидно, что
если брать в худшем случае, то очевидно, что получается,
что эта штука явно логоритку,
правда?
Ну, тогда, если раскручивать обратно,
то получается, что здесь в худшем случае ТАТ
тоже логорифум, то есть, можно прям теперь
доказать по индукции, что это не более, чем логорифум.
Ну, пока это выглядит
какое-то замудренное доказательство,
и так уже понятного факта, что дерево отрезков
за логорифмом работает, да?
Вот.
Так что вот, ну вот, такое доказательство.
Ну вот.
Значит, ну теперь, возможно, будет наглядие,
если я сейчас то же самое начну забабахивать
в коде дерева.
В общем, знаете, чем приятна эта технология,
что я ее могу применять, не зная заранее
какой будет ответ.
Да, кто-то говорит, лог квадрат, может
лог там кто-то там на четверочку-то кробка
ставил, да?
А вот давайте разбираться.
Вот, знаете, я даже не буду полить интервью
заранее.
Вот таким же
типо методом доказывали о том, что у нас там
суммирование счетного числа УАТ
дает нам то же УАТ.
Вот этот момент
с, собственно, 2
на Т это лог 2.
Но это же не
такая штука в плане.
Константно меняется и...
Ну, понимаете,
нет, смотрите.
Ну, там, да, вот действительно...
Опасная очень. Нет, смотрите,
ну, штука казалась бы опасная,
но проблема в том, что когда вы, если вы это начнете
прям аккуратно по индукции доказывать,
то тогда это,
ну, то здесь
тогда никаких там проблем не возникнет.
Просто там проблема в том, что
вы это рассуждение УАТ
с УАТН равно УАТН, там же ошибка была
в чем, что если вы это разворачиваете,
то вы как бы суммируете не константное
количество УАТНов, а большое количество
УАТНов какое-то.
Какое-то АТН зависщее.
А здесь же можно прям честно
по индукции доказывать, что
там сначала эта штука не превосходит
УАТН, а потом та штука не превосходит
УАТН.
Ну, там константы будут просто разные.
То есть сначала вы докажете, что это
не превосходит СЛОГН для константы С,
да?
А потом вы докажете, что
вот эта штука там,
то есть вот эта штука не превосходит D логарифма,
где D равно, ну, например, 20.
Не окажешь, что
будет достаточно, потому что у нас
логарифм пополам берется и С штука
просто... Не, этого не достаточно,
логарифм Н пополам, а это логарифм Н-1.
Ну, вот.
То есть, ну, разве что вот эта вот единица
убьется, но как бы константу,
но эта двойка-то никуда не делится.
Поэтому как бы да.
Да.
Вот вы видите, это один раз происходит.
То есть, если вы тут один раз это развернули,
то как бы больше вон там внутри вот эта штука,
она не вылезет. То есть она
как бы автономно работает.
Поэтому, как ни странно, это работает.
Вот.
А теперь давайте попробуем
провернуть то же самое
в каденте, ребята.
Да, ну, вот сейчас
8, кажется.
Да, ну, свести какие-то
может по всем этим.
Ну, как бы, что тут ставить?
Сейчас мы, знаете, как бы,
знаете, как это называется,
чем приятна эта дорога, тем, что
как бы, называется понятно,
что делать, надо только, возможно, заранее
не угадывать, что там будет, а прям честно
по ней идти.
Знаете, как Шерлок, как вот
упоминали, лежавший тут Шерлок Холмс
говорил, да.
Вот, да, сейчас его убрали.
Но в какой-то момент он так и говорил, да,
что
да, не знаю, то есть, как бы, на одном конце
у нас висит гусь,
а на другом человек, которому
грозит 7 лет каторги, если мы не докажем
его невиновность. Впрочем, может,
может, наши ростки приведут к тому, что виноват
он. Но в любом случае
у нас есть ниточка,
ускользлющая от полиции, случайно попавшая
к нам, давайте дойдем до ней до конца.
Так что, собственно,
ну, это голубой каргун, если что,
но я думаю, вы узнаете. Вот.
Так вот.
Значит, ну, поехали. Так.
Ну, честно скажу, возможно, ладно,
ладно, пока начнем так, но, честно скажу,
скорее всего, нам это придется стереть.
Значит, поехали.
Ну, с чего начнем?
Так, начнем с того, что у нас есть наш
глобальный прямоугольник,
и внутри его мы ищем
какую-то сумму.
Ну, относительно строго.
То есть, смотрите,
в данном случае, когда эта
если штука не соприкасается с
этой границей, то я говорю, что она на самом деле
может этой границе касаться, а может
не касаться.
В данном случае, да.
Ну, то есть, вполне вероятно, что это будет ситуация,
когда это, то есть, весь прямоугольник
запросил.
Вот. Поэтому мы так и пишем, что
первую, да,
поэтому первую вариант дай мне, что это вот единицы,
но это не самый интересный вариант.
Какой еще есть вариант?
Ну, есть вариант, что
ну, как бы, что мы действительно
честно попилим, да?
Ну, то есть, первое, что мы делаем, это как бы
честно пилим по вертикали, правда?
Но!
Ну, когда пилим по вертикали,
могут быть два случая. Первый, приятный
для нас случай.
Это
пустота,
плюс
плюс
что называется?
Я же любимый.
Ну, в смысле он же любимый.
Ну, и вот единица, конечно.
Вот.
Вот, может быть, такая красота.
Да, мы, конечно, так и сказали,
что лата,
это от единицы, давай, если я там не буду
себе, может быть,
не будем ромоздить.
Вот.
Вот.
Понятно, что это вот единица.
Можно просто это зачерпнуть.
Но, как бы, к сожалению, это не дает нам
возможности сказать, что у нас теперь всегда такая рекуррента,
поэтому t равно логарифм.
Да, почему?
Потому что есть, к сожалению, третий, самый
неприятный для нас случай.
Когда это делится вот так?
Ну, теперь смотрите, что мы делаем.
Следующее разбиение у нас будет уже не по вертикали,
а по горизонтали, правда?
Сейчас мы рассмотрели разбиение по вертикали,
когда у нас пустота была, или это был тоже?
Да, когда была пустота,
и все остальное, да.
То есть, когда прибывали целиком,
целиком пошел либо влево, либо вправо.
Вот.
Вот.
Может так разбить, что и запрос отправился и влево,
и вправо.
Ну, отлично.
Когда мы отправимся влево и вправо,
теперь поворачиваем.
Так, внимание, господа.
Значит, теперь внимание, чтобы избежать
в случае, когда говорить, что
чтобы тут не писать с индексом, что
типа тут мы делим по Х, где мы ФТ-шки делим по Х
по игроку.
Нет, ну, нет.
Нет, мы не будем его скипнуть,
а будем крутить.
Ну, потому что так, следующий раз мы будем делить по горизонтали.
Но если мы повернем картинки
на 90 градусов, да,
то получится,
что делить снова по вертикали.
В плавой части крутим.
Влево стабилизуем.
Зачем?
Ну, давайте так, так как это уже не тривиальное
действие, давайте сначала
как бы честно покрутим обе.
И получится интересное следующее.
А, кстати, как крутить?
Вопрос номер раз.
Что такое N вообще?
Н?
Количество точек.
Баудинбокс.
Количество точек вот в этом
баудинбоксе, в котором мы живем.
Вот. Значит, получается следующее.
Если так поворачивать,
если вот обе эти части так мысленно повернуть,
то получится,
ну ладно там, в зависимости
как вы это мыслите и как будет поворачиваться,
ну по факту получится. В одной части
получится вот что-то подобного рода.
Вот видите,
на этот раз мы гарантируем, что мы и привязались
к границе, да.
А в другой части,
ну да, то есть можно
поворачивать на 90 градусов, можно их
или менять.
Ну вот.
А, ну правда, смотрите, тогда если брать вот эту половину
иксы, как имеют листами, то да, получится
немножко другое.
То есть на самом деле
получится вот это.
Ну давайте я
просто аккуратно нарисую, чтобы было понятно,
что происходит. А так да, не одинаково.
Это правда.
Сейчас вот это вот просто тупо мы
с листом, что получится,
поделим и поделим.
Вот.
Ну в плане мы поиграем мысленно.
Окей.
Ну вот, смотрите, то есть на самом деле
в одном случае, если мы их с Игорем
после каждого этого рекурсированного запуска
поменяем местами мы, хотя бы мы,
то получится в одном случае прямоугольник
заведомо привязан к
верхней границе прямоугольника
в другой книжке.
Но эти случаи, я думаю, достаточно очевидны,
что это одно и то же, правда?
Ну какая симметрия во все стороны?
Ну, видите, симметрия тут, видите,
она не во все стороны, да, но
как будешь от того, что вы там переберете картинку
вот просто вот так вот, да, то я...
Нет, я утверждаю, что вот эти два случая эквивалентны
и еще они эквивалентны будут
в случае, когда у нас вот сбоку
так вот, так же или сбок-бок.
А, ну вот, а вот не совсем на этот раз.
Потому что когда мы рисуем случаи, мы
подразумеваем, что мы делим вот так.
Именно при вертикале.
Поэтому они не совсем эквивалентны.
Но конкретно эти, ну явно эквивалентны, да?
Вот.
Поэтому давайте вместо вот этого я
вот буду рисовать до красоты вот этот случай
и будем говорить, что это на самом деле
просто два вот таких случая.
Да, но...
Если они не совсем эквивалентны, то
как раз получается то, что мы сделали это...
А, а это будет верно, потому что у нас там...
Ну вот.
Значит, теперь давайте разбираться, что будет здесь.
Теперь пилим эту штуку
пополам.
А, ну, что это?
Так.
Это...
Это один рекуррент.
Но у нас теперь возникла новая штука.
Вот эта.
Давайте ее расписываем.
Следующий номер.
Следующий номер нашей программы.
Значит, вот такая красота.
Значит, АТ.
Ну, как всегда, два варианта.
Вариант первый.
Разделяющая прямая
прошла мимо этой штуки.
Может быть, вариант, что
сразу отъединиться?
Сразу отъединиться?
А, ну, ладно, давайте оставим это время.
Теоретически, да.
Да, теоретически нам нужно да, фантастически повести.
Ну, что?
Да, фантастически повести.
Ну, на самом деле, я думаю, в какой-то момент мы можем
просто отказать, просто игнорировать
эти, собственно, совсем уж там, простые случаи.
Ну, вот. А теоретически есть.
Вот у нас привели вертикаль, и она целиком оказалась лево.
Какой, теперь какие картинки
я должен нарисовать?
Первое, это если такая же плюс пустая,
то прихищу к нему вот так.
Да, симметрично отразить.
А, ну, в общем, какая, что такая, штука,
симметрично отразится одинаково.
И получится картинка,
вот, не совсем эквивалентная,
но вот такая.
Да, почему она
не эквивалентная? Потому что, когда мы ее будем делить
вот пополам, видите, картинки будут другие
получаться немножко.
Вот, n пополам,
плюс o отъединиться. Или,
а если она
таки попилилась, то что получится?
Ну, если она не попилилась, а почему-то
у нее была граница.
Чего?
Ну, сейчас случай, который записан.
Да, это был случай, когда
граница не прошла через это прямоугольник.
Почему мы показались
у границы нарисованными?
Ну, потому что мы изначально
были у границы нарисованы,
просто у этого прямоугольника мы еще
x и y местами поменяли на помина.
Да, это важно.
Так, перейдем.
Так, а когда мы
поделили, ну, здесь тоже, когда x и y,
то там что получится?
Ну, формально получится, конечно,
то есть я тут должен нарисовать вот какие-то
вот такую красоту.
И плюс еще вот такую красоту.
Ну, на самом деле, заметим, что
в случае углов, какой бы из
четырех углов ни было, в суть все равно одна, правда?
Ну, есть такое подозрение.
Да.
Поэтому на самом деле мы тут тоже на самом деле
будем все сводить к одном углу.
Но вообще, конечно, видите, то есть как бы
работа разрастается, потому что
даже несмотря на то, что мы тут
два уголка превратили в один уголок,
а тем не менее,
обратите внимание,
тем не менее у нас
уже две новые тэшки появились.
Ну, и че?
Как говорится, врагу не сдается.
Страшно представить, как это
наверное сделают камеры.
Мне тоже.
Скажем так, честно говоря,
я не знаю, как они это делали в камерном случае,
а самое страшное, что они это сделали.
Знем камерного куба, делим
камеры. Ну, я не знаю,
может быть, они... Кабы вклеить экспоненты, откавывали.
Нет, ну,
как бы, не будем пока полететь...
Пока тут не хотим полететь.
Естественно, я потом все скажу, но...
Не, я про К говорю,
потому что тут же К2, так что...
Да, тут К2.
Ну, давайте смотреть.
Все будет получаться. Внимание.
Такая, ого.
Значит, смотрите, хорошо.
Теперь давайте смотреть. Ну, конечно, эта
штука явно более общая, чем вот эта,
потому что это по факту может быть частным
случаем этой, правда?
Поэтому начнем с нее.
Поехали. Т.
От боли общего начнем.
Или от боли частного? От боли общего, конечно.
Почему?
Ну, мы и так сверху идем, ведь мы начали
с самого-самого. В анализе
краски ДО мы шли от боли частного,
когда у нас, мы границы самые предвинутые,
мы начали эту симпатику, потом
перешли к болю. Не, не совсем. Там
было так. Когда мы писали рекуренты,
мы шли от общего к частному.
Потом нарисовали,
получили замкнутую систему, значит, рекурент.
Ну да. И после оно вот.
И потом от частного там
сначала вот частный нашли, потом начали
раскручивать в общую. Ровно это мы проделаем здесь.
Но для этого нам нужно расписать все рекуренты.
То есть пока мы идем
от общего к частному. Поэтому вот я выбираю
пока самую общую рекурент.
Из этих двух боли общую.
Да, точно, да. Сейчас будет
интересно, да?
Да, ну тут конечно, да.
Пописать тут конечно придется.
Так, ну какие тут варианты есть?
Да, если повезет
вот единицы.
Вот единицы, порезали, ничего не произошло.
Ну да, ну на самом деле тут два варианта.
То есть как бы, либо
если порезали, ничего не произошло, и получится
мы свелись к опять вот этой вот.
Опять к себе любимому вот этому вот.
Это у нас было бы уже, обратите внимание.
Вот это рекурент.
Это вот буквально то же самое, что было вот здесь, понимаете, да?
Вот.
Ну вот плюс от единицы.
Могло быть так.
А могло быть по-другому.
А могло быть, что если распил, все-таки тут
что-то распилил.
Не, тогда не если бы.
Тогда смотрите, у нас появляется новая штука.
Вот такая красотачка получается.
И еще плюс вот это вот.
Вот.
Но здесь заметим, что имеет смысл
рассматривать только худший случай.
Поэтому давайте вот это просто убегаем.
Ну типа тут эта штука, а здесь та же штука.
Плюс еще вот эта, понимаете, да?
Вот.
Вот.
Вот.
Оп-оп-оп.
И еще оп-оп-оп.
Вот такая красота.
Если вы понимаете, о чем.
Вот.
Так.
Ну отлично.
У нас же кажется, должно быть все
в два случая.
В одном случае у нас будет
деление
что?
А. Соберитесь.
Что?
А. Соберитесь штуки.
А. А.
Красота, да?
Красота, да?
Ну вот так.
Да.
Ну такая, да.
Какая-то гадость.
Да нет.
Ну давайте смотреть.
Ну теперь так, что у нас теперь есть?
Теперь есть уголочек.
И вот эта штука.
Уголочек придвинут к двум сторонам.
Только к двум соседним сторонам.
А эта к двум противоположным.
Так. Ну что?
Как вы говорите, что из этого мы выбираем?
Ну давайте с уголочек начнем.
Ну давайте, ладно.
Да, ладно. Давайте выберем
то, что появилось раньше. Хорошо.
Итак, давайте уголочек
смотреть.
Идем в порядке БФС.
Ну получается так.
Ну не совсем в порядке БФС.
У нас такой БФС с приоритетом, что ли.
Но кого выбирать между ними
действительно непонятно.
Скажите, а если мы своим лестикальным разрезом
в той ситуации не попали на прямоугольничек,
то тогда у нас
будет же просто, кажется,
деление, ну,
хочу, останется только вот
в этом услагаемое?
Да-да-да. Это был вот этот случай.
Но этот случай, он по-любому лучше,
строго лучше вот этого случая,
да.
Ну вот.
Вот.
Да.
Это называется.
Ну вот так.
Так.
Ну теперь, когда мы тут пилим пополам,
то два варианта. Либо мы этот уголочек не задеваем,
либо задеваем.
В чем, если не задеваем, то тут уголочек остается
вен пополаме, а если тут задеваем,
то тоже вен пополаме остается уголочек,
но просто добавляется еще слагаемое.
То есть давайте я тут тоже этот лишний случай
даже писать не буду.
Я просто напишу, что это равно
на самом деле, и пишу
вот этот лучший случай, когда что-то разделилось.
И тогда это получается смотреть
уже очень интересная вещь, когда мы уже
привязались к трех сторонам.
Господи.
Трех сторонам, кажется, и тот
появился.
Вот этот? Да.
Ну не совсем. Он сведется либо к себе любимому,
либо к доктору.
Ну сейчас увидим.
Давайте не будем мыслить одновременно
на несколькими случаях.
Параллельно алкориммы это в следующем семестве.
Да, да, да.
Семафорум, мютексы, требы, да, и прочумные слова.
Ну и давайте тут еще что у нас получается.
Уголочек, естественно.
Ну уголочек у нас и в Африке уголочек.
Уголочек, естественно.
Так, ну если работать
боефесиком, да, то
что у нас там еще есть?
Так, Т от вот этого
вот этого вот
безобразия.
Безобразие.
Ну вот.
Ага.
Пока что две штуки остаются.
Ну да, пока мы
не расписали вот эту штуку
из собственного уголочек.
Не совсем, у нас еще новая штука вот эта есть.
А, кроме этого
еще две, да, хорошо.
Ну да.
Значит, что происходит?
Ну значит
пилим. Ну тут два варианта, то есть на этот раз
придется два варианта написать, потому что
либо это как бы
ну да,
то есть по-любому, да, то есть либо это
сведется к горизонтальной полосе.
Вот, плюсов от единицы.
Ну если я вот подраспил, прошел мимо.
Либо
получится два Т от
вот этого счастья.
А, даже не вот этого счастья, а
да, а вот
прям вот этого счастья.
Ой, какая красота получается.
Вот это ж, да, вор.
Так, ну ладно,
пока, конечно, рекурренты немножко
разрастаются, да? Немножко.
Ну да. Давайте
вертикальную доделаем, которая по
другим сторонам. Какая вертикальная?
Нет, влево смотрим. Нет, так, давайте
так, давайте, так, все, все
надо где? Так, уголочек
а, да, вот это вот. А, ну да,
а, ну да, в порядке
БФС отдала, эпично.
Давайте, давайте эту делать, тем более
что кажется, что она сейчас будет
немножко сама замкнутая, да?
Так.
Да, вот я чувствовал, что это нам
не хватит, но давайте.
Чего?
Давайте.
Ну как такие?
А, ну да.
Ну тут главное, это на камере
видно, вам все видно, да, поэтому можно
по идее носку полностью использовать.
А то, знаете, а то тут
просто на первом курсе, да, знаете,
знаете, на первом курсе еще,
давайте еще ходят, Олег, все по 30 человек.
Еще.
Не, ну почему?
Ну помните, у вас тоже были эти золотые
времена. Да, вчера выходили
из общага, там ребята оттужали стекы
в шести, ой, очи в шести стеках.
Это основной факт. А у них тоже
так сказали? Ну,
я Степану вполне может.
А у них поможет? Ну просто
очередь на шести стек отличная, я рассказывал
не позавчера.
Это было неделю назад.
Я Степану в него снимаю, потом идет неинтересно.
Нет, то почему?
Да, да.
А.
А кто там прям
кулаком?
А, ну кулак и накей, хорошо.
Ладно, не вопрос, не вопрос.
Хорошо.
Ладика.
Так, ладно.
Так.
Ну ладно, давайте.
Так, ну давайте так. Что там у нас дальше?
Да, вертикальные полоса.
Да.
Так, вертикальный.
Нет, погодите, вертикальная полоса.
Да, вертикальная, три стороны.
Да, это очень приятная
вещь.
Потому что как ее не распили, у вас получится
либо полностью закрашенная,
либо пустая.
В общем, короче,
Т от той же самой
горизонтальной
от Н пополам
плюс О объединиться.
Так, ну давайте так.
Кто там дальше в порядке БФС идет?
Так, дальше в порядке БФС.
Так, этот мы расписали.
Дальше идет горизонтальная полоса.
Так, горизонтальная полоса
чем у нас приводит?
Ну и здесь вообще один вариант.
И две вертикальные
полосы.
Здесь вообще все просто.
Так, что еще?
Горизонтальная полка еще вниз.
А, ну да, вот она и встретилась.
Давно пора с ней разобраться.
Так, горизонтальные полоса.
Здесь тоже
без случаев.
Просто две
вертикальные.
От Н пополам плюс О объединиться.
Так, и что?
Все?
Теперь надо посчитать.
А, то есть
то есть это
не понятно.
То есть это типа все, да?
Так.
Ну понятно, да-да-да.
Интересный анализ там был
в техмерном случае.
Там есть общая
техмерная оценка.
А, ну смотрите.
Нет, смотрите.
Нет, на самом деле,
смотрите.
Ну да, здесь они все-таки мы не угадали немножко с порядком.
Но ничего страшного.
Каким порядком?
Ну давайте начнем вот с этой штуки.
Потому что заметим, что
эта штука расписывается через нее же.
То есть в принципе
то есть можно честно
расписать на самом деле.
Что это равно? На самом деле
2Т
получается
как там честно записано.
От Н поделить на 4
плюс, ну там, более жирное
но О объединиться.
Так, ну-ка, вот теперь внимание вопрос.
Наконец-то у нас получилась замкнутая рекуррента.
Так, правильно.
Теперь поздравляем
и пишем, что это
О от корни
из Н.
Так.
Ну разбираемся дальше.
Но отсюда автоматически следует,
что это тоже корни. Правда?
Ну потому что раз это О от корни,
то и это соответственно
О от корни.
Так.
Это называется да.
Что у нас дальше?
Значит соответственно
секунда, почему так?
Почему?
Если вот эта штука от корни,
то там тоже.
Ну если мы доказали,
что вот эта штука это О.
Понял.
Значит поехали.
Сейчас начнем этот корень прообразывать.
Потому что да.
Горизонтальная полоса, видимо,
само по себе смодится к вертикальной.
Поэтому здесь мы вот в этом случае
можем прям честно и написать, что это
равно на самом деле тоже
2T от вертикальной полосы
от N поделить так 4
плюс О объединиться.
То есть у нас два варианта.
Либо мы сводимся к двум
случаям себя же на N поделить так 4,
либо нам сразу говорят, что это корень.
Поэтому отсюда не
сильно сложно будет доказать по индукции,
что это реально корень, правда?
Значит получается О
от корни.
Ну и автоматически вот это корень.
Так, ну отлично.
Так, ну что, теперь сворачиваемся дальше.
Так, теперь у нас получается, что
T уголочка от N равно
T от уголочка от N пополам
плюс O от корни из N.
Так, мастер-теорема кажется применима и здесь.
Нет?
Ну хотя ладно, здесь она
совсем ступила применимо, потому что
корень из N плюс корень из N пополам
плюс корень из N на 4 и так далее, по-любому
геометрическая прогрессия, правда?
Поэтому мы заключаем, что
это тоже O от корни из N.
Ну смотри, еще у тебя рекуррента
какая-то F от N
равно F от N пополам
плюс O от корни из N.
Ну вот.
То есть честно скажем,
можно там применять
мастер-теорему, да, что
там
что она там
это один из методов движения.
Да, можно применить,
но в данном случае это и само, очевидно.
Нет, ну ничего. Можно раскрыть
O от корни из N плюс
O от корни из N пополам
плюс O от корни из N на 4.
Это очевидно O от корни из N,
потому что получится
корень из N на 1
плюс 1 делить на корень из 2
плюс 1 делить на 2
плюс такая, то есть
геометрическая прогрессия.
Ну она ограничена.
Ну если у тебя есть
геометрическая прогрессия
с коэффициентом меньше единицы,
то как бы ее сумма по-любому ограничена.
Это был уголочек, да?
Вторую штуку можно скинуть.
А, прям...
Нет, вторую...
Мы еще до этой давайте доживем.
Не, ну а что тут?
Тут сопротивление бесполезно,
то есть тут она свелась к двум штукам
и обеи...
Нет, стоп.
Да, пока еще нет.
Да, да, да, не совсем.
Ну ничего, во-первых, заметим, что
ладно, это тоже корень.
Так, вот эту штуку мы
пока не знаем.
Но с другой стороны, тут можно
действительно что делать?
Но про уголочек-то мы тоже знаем,
что он корень, правда?
Поэтому теперь можно
тоже сделать так. Так, то есть эта штука
либо просто корень,
либо сводится к штуке,
которая является...
То есть это равно
о от корень
плюс t от себя g.
Только вообще
от n поделительно 4
на самом деле.
Логично, да?
Ну, будет логично.
Вот. Но так надо,
то есть рекурренты еще круче. То есть тут уже
не f at n попало, а f at n и 4.
То есть это будет
корень еще из меньшей константы.
Так что вывод
действительно, что это тоже от корни.
Ну и
наконец финал.
Может быть самое
не тривиальное в этом месте получается.
То есть нам говорят,
что это либо сразу от корня
и z,
либо
t от себя любимого пополам
плюс o от единицы.
Понятно, да?
Ну вот. Ну и, собственно,
внимание и вопрос.
Чему же тогда эта штука равна?
От корня и z.
Конечно.
Ну, действительно, что тут?
Потому что она либо сразу равна корню и z,
либо от единицы
плюс корень и z, либо от единицы плюс
от единицы плюс корень и z.
В общем, либо какая-то цепь. Только там корень и z
уже поделительно 4, ну и так далее.
И сниз будет не более логоритм.
Так что дает по-любому корень.
Вот.
Так что вот, ура, победили.
Второй случай дает нам логоритм.
Чего?
Второй случай дает нам логоритм,
но третий дает корень по-любому корень.
Да, ну как бы да.
И в любой момент, когда вы тут идете
по цепочке у вас
мы можем отретвиться, поэтому
верхняя оценка по-любому корень.
Ну вот.
Так что, соответственно, радуйся.
Ну теперь, если
трезво взглянуть на маркера, который
беседовал со Швейцаром.
Ну вот, вместо
стейта вытереть. Теперь основной факт.
Что мы доказали?
Мы доказали, что вот это вот мистическое
2D дерево работает за корень.
На операцию. Да.
Оказывается.
Вот еще одна корневуха.
Да есть хуха?
Ну да.
А что, какие патологии вошли?
Ну конечно, да, че.
Ну понятно, есть плитрибилд, есть алгоритм лофф.
А есть вот это.
Это плитрибилд вообще.
Да, вот это вот.
Прежде, чем начинается, есть 3DMO еще.
Вот.
Ну соответственно, так.
Перерыв.
А который час?
9.50. А, 9.50?
Ну еще есть совсем перерыв?
Ну есть проект. Ну скажем так.
Перерыв, конечно, уже постепенно приходит
действительно, тем более, что дальше.
Но про эту инструктуру еще у меня
пара слов все-таки для вас не есть.
А улучшаем мы?
Ну, мне неизвестно.
Это не то,
для чего она сделана.
Ну, на самом деле, ну, как сказать?
Существует просто так, да?
Нет, конечно, тут на самом деле,
если вы копьете, собственно,
уже рекламирующуюся ноутнигу
препарата Шеймаса,
ну, вот, являющуюся, на самом деле,
первой в истории два линии,
продолжающей быть мощнейшей монографией
на тему вычислительной геометрии,
то на самом деле,
то есть эта
структура, особенно если говорить о
реальных данных, а не специально
в каких-то этих ваших Олимпиадах,
то структура данных на самом деле
используется не только.
Вы знаете, который мы сказали, пожалуйста,
вот вам все законень делается, да?
Правда, с оговорочкой, что точки
не меняются?
Ну, вот, на реальной практике,
на самом деле, на реальной практике,
там
называется, кто-то может захотеть
сказать, а давайте точки добавлять и удалять.
Как это можно сделать?
Ну,
по каждой точке не нужно, потому что
тут разные варианты.
Потому что на практике, да,
если точки раскиданы равномерно,
потому что откуда структура взялась,
то структура взялась из реальной практики.
Но точки там, скорее, не обязательно будут
подгоняться в какой-то
нетривиальный тест,
поэтому, оказывается, если вы там добавить
какую-то точку, то, кажется, легче будет
ее аккуратненько в этом дереве отрезков
и аккуратно вставить аналогично двоичному дереву
поиска. То есть, знаете,
аналогия такая, что в двоичном дереве поиска,
если вы будете кидать там такие-то рандомные числа,
то, вполне вероятно, что никаких проблем
у вас там с балансом не возникнет само по себе.
То есть, можно
не заморачивать, чтобы это были именно
эти картячки.
Тут же может возникнуть проблема, что у нас
через несколько раз станет просто
не пополам.
Да, точек будет не пополам, но приблизительно
пополам.
Ну, смотрите.
Если не очень много запросов,
ну, смотрите. Нет, не слишком много
баланса. Нет, понимаете, в чем проблема?
Если вы сделаете...
Смотрите, то так. Если вы добавите
много точек, но они будут расположены
равномерно, то, как бы, если там дерево будет
равномерно прирастать листами, то, собственно,
ничего страшного с балансом не случится.
Проблема будет, если вы там в одно место будете.
Вот.
То есть, тут такая идея.
Ну и, конечно, никто не мешает вам
говорить, что там устраивает периодический
перестройку.
Ну, вот, например, если у вас задача
присваивать, делать вот это,
присваивание сумму на подотреске,
то есть, на самом деле, абсолютно стандартная
корневуха,
абсолютно
аналогичная сплит ребилку.
Говорит она
следующее, что
а давайте-ка,
если нам пришла новая точка,
давайте пока не будем...
То есть, давайте эту штуку перестраивать не будем.
Вот эту штуку
перестраивать не будем.
А мы эту точку поставим рядом.
А просто вот она у нас будет рядом лежать.
Если мы захотим найти сумму на подотреске,
то мы найдем сумму в кадре дерева,
потом посмотрим эту точку и скажем, так,
а она в нашем...
Под прямой уголеньки лежит?
Так, лежит? Ну, добавляем. Не лежит, не добавляем.
Если надо сделать присваивание
на под прямой уголеньке, тоже с этой точкой
работаем отели.
Если приходит вторая точка, значит мы с двумя
точками работаем.
Если приходит корень точек,
то вот тут-то мы уже
можем начать перестраивать.
Единственное, конечно, что может вам
не понравиться, это то, что дерево,
что это дерево, к сожалению, строится у нас
за кое-что точку.
Да, вот оно строится за логарифм.
Это нам, конечно, может нравиться не очень.
Но с другой стороны,
а потому что, смотрите,
потому что на каждой корень
из N операции вы тратите сумму
и не N действия, а N ОП.
Нет, на самом деле не больно.
Если правильно подогнать губин,
то у вас на каждую операцию будет корень из N ОП.
Но на самом деле в данном случае есть
подозрение, что можно, скажем так,
да, один раз вы дерево построили за N ОП
в самом начале, но после этого
вы там как-то отсортированные эти точки
уже можете как-то
хранить, поэтому там
думается, что никаких проблем, особенных не будет.
Ну, например,
потому что,
хотя тут, конечно,
да, то есть как
бы это делать так, чтобы действительно
каждых детей реально не за линию строить,
да, это вот может быть не очень понятно.
Но, кажется,
можно придумать. Но в любом случае, в худшем случае
можно за корень из N ОП, то есть какие-то подобные технологии
забабахивать, например.
Вот, но на самом деле,
то есть самое
прикольное в этом, что
то есть, как ни странно, это коды дерева
могут использовать вообще задачу вида.
У вас есть N точек, мы эти точки добавляем,
удаляем, а потом дальше запрос.
Дан какой-нибудь пункт это, и скажите,
пожалуйста, какая из наших точек
в коде дерева к нему ближайшая?
Вот такая.
И в принципе, если точки
видны рандомно, то кодой дерева
в принципе может с этим работать
вполне себе адекватно.
А именно, так, пилем
точки на два, допустим, находим ответ
здесь, да? Теперь начинаем искать
ответ тут. Так, ищем ответ тут, но теперь
заметим, что весь этот прямоугольник уже
дальше, чем то, что мы нашли, поэтому можно
отсесть.
То есть просто говорим, что если
прямоугольник уже дальше, чем ответ, который мы нашли,
то, ну, что?
Вызывайте. Значит, мы от него отсекаемся. Если нет,
ну, значит, вот здесь это не совсем так,
поэтому придется тут еще тоже попилить,
тогда вот этот прямоугольник исчезает,
с этим работает.
То есть, к сожалению, здесь, формально
говоря, то есть что мы можем сказать об
всем точке в худшем случае?
Ничего хорошего
не можем сказать.
Просто потому, что
если у вас, извините, это
точка, там, то есть эта точка
стоит в центре тюрьмы, а это все
включенные вот такие.
Вот.
Очень так.
Вот. Ну, у векторов там,
по-моему, тюрьма действительно там вот
система именно такая, то
как бы никаких отсечений не получится,
вам реально придется все точки так или иначе
перебрать.
Поэтому, ну, поэтому в худшем
случае ли нет, но в принципе в таком адекватном
почему нет?
То есть, в принципе, знаете, вот это тоже интересно,
потому что, честно скажу, я очень
люблю действительно рассматривать это структуру
данных, в которой ничего хорошего
не докажешь.
Но, тем не менее, они применяются.
Вот. И, собственно, там
для любителей таких структур, которые реально,
причем главная структура реально, собственно,
на всех практиках используется, в общем,
приометрия. Думается, это одна из тех тем,
в которых, как бы, зачем это все нужно, в общем-то,
сомнений зачастую не вызывает.
Это вроде в машином в учении вспоминается.
Ну, и...
Ну...
В машином в учении, кстати, тоже, да.
Но геометрия, она и сама в себе
используется, потому что любые карты
рисовать, искать объекты, какие угодно, пожалуйста.
Там 2D, 3D,
пожалуйста, там не два линии какой-нибудь там
и геймдизайн тут уже начинается,
ну всякие.
Ну, можно
попробовать, конечно.
Ну, но будет больно.
Ну, потому что
еще более проблем нет.
А, кстати, еще забыл сказать,
да, я обещал, что вот в нашей
исходной задаче это за корень из M.
Так вот, можно действительно
аналогично сделать и в камерном пространстве.
Ну, там понятно,
типа, видим сначала по одной,
по одной, потом по второй, потом
по третьей, потом по четвертой вот этого.
Ну, так вот, утверждается,
что там уситрились доказать, но там
ассердточка получается O от M в степени
внимание, 1
минус 1 девять на
K.
С
словом, когда дерево.
Да, это прямо так. Вот 2D дерева,
мы подставляем двойку и получаем наш
любимый корень.
В трехмерном пространстве это будет
M в степени две трети. Ну, аналогично
3D МО, да?
Ну, вот. Ну, а есть, соответственно,
там, видимо, 4D МО будет работать.
То есть вот такие вот, на самом деле,
веселья связывают нас действительно
с этим всем.
Вот, такая красота.
Так, ну что,
есть ли тут какие-то
вопросы?
Удивительно, нет?
Ну, здесь действительно такая прида.
Ну, в этом смысле приятная структура данных
с веселым анализом.
Да.
Как это называется? Тут
это называется, да, честно, вы можете
забыть симптомику, но
быстренько ее вывести.
Ну, да,
осторожно,
потому что, да.
Нет, конечно, структура подлая, конечно,
потому что если вы хотите быстро ответить на вопросы,
какой она работает, то будет соблазн, конечно.
Ну, квадрат.
Ну, вот, вообще нет.
Оказывается, да,
это совершенно неожиданно.
Так, ну,
ладненько.
Как-то не странно, видимо, можно перерыв устроить.
Почему? Потому что
ну, следующая тема, которую хочется обсуждать,
это, конечно, диаграмма Воронова
и триангуляция ВЛАД.
Как книжка называется?
Так, значит, книжка, книжка.
Значит, она называется так,
что приятно, она есть на русском языке.
Ну, лучше выиграем.
Ну, ладно, если говорить о ссылках,
я вам сейчас вот так скажу.
Значит, препарата.
На какую тему?
Вот просто можете считать, что это
учебник по нашему курсу.
Так, есть из Шеймос.
Вот его имени, к сожалению, за памятью.
Вычислительные биометы.
То есть, книжка такая.
Написана в 1975 году,
переведена на русский язык в 1989.
Вот. Ну, правда,
как-то не странно, специалист
почему-то ее не совсем советует.
Ну, не совсем.
Так, она очень классная, там очень много
вообще действительно интересных и хороших
результатов действительно сделано.
Вот. Но единственное только, что
так как это была первая книжка, то естественно
некоторые идеи действительно рассказываются
практически так, как их придумали.
Поэтому там по понятости она может проигрывать
каким-то там более современным учебником.
Вычислительной биометрии.
Тут, я, к сожалению, не помню, но
там что-то там помнится.
В карбоне лежал какой-то там англоязычный
учебник. Там по-моему фамилия почему-то
смутно, почему-то используется фамилия
Overmars, что ли.
Там что-то Overmars Computational Geometry,
что-то такое.
Ну, может.
Соответственно там такое.
Ну, может быть
это будет, то есть как бы да, то есть это как бы
понятно, более адекватные переосмысления
и как следствие там все те же самые вещи могут
объясняться там на порядок понятнее.
Но хотя в принципе я не знаю, вот это штука красивая
на самом деле. Но книжка тем не менее красивая.
Вот. Но на самом деле
если говорить еще о крутом источнике,
то на самом деле здесь нельзя
не сослаться, вот я вам очень рекомендую.
На самом деле
просто
то есть искать
на ютубе просто
такую фамилию как Кировяткина.
Значит, кто это? Это реально
это абсолютно реальный ученый
просто из области вычислительной
геометрии.
Просто реальный ученый.
Ну, она там, ну, собственно она из Питера,
она в Питере активно читает версии.
И, собственно, есть там видео
лекции, в частности, например, можно найти
такую питерскую штуку как
Computer Science Club.
Вот сайт примерно вот такой
comskyclub.ru
Там, ну там в принципе
я думаю, не только ее лекции можно найти, там
много чего очень можно найти, там
на самом деле вообще очень там
каких-то интересных лекций, то есть просто
отдельно сайт рекомендовать.
Но, в частности, у нее есть достаточно мощный
курс по вычислительной геометрии.
И в чем, действительно, это рассказывать будет
реально специалист из области.
Поэтому вот,
поэтому здесь вот очень-очень
рекомендую.
Так, так, так,
книжку, книжку сказал.
Так, ладно, еще какие вопросы?
Рэдди и мета?
Ну ладно, значит тогда пошли отдыхать
и готовиться к диаграммам.
