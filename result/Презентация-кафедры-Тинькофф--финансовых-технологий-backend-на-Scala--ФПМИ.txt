Всем привет! Ребят, сегодня будет у нас презентация базовой кафедры организации
Тинькофф, кафедры финансовых технологий. Мы расскажем, как все устроено, что мы
делаем, чем мы занимаемся, как нам попасть. В общем, разные вопросы рассмотрим. Для
начала представлюсь, меня зовут Марат, я в Тинькоффе работаю в проекте Тинькофф
инвестиции. Мы делаем лучшего в мире брокера, мы делаем удобный клиентский
сервис. Я сам занимаюсь задачами привлечения, плюс мы проводим с командой
инвестиционные чемпионаты. Вот у нас прошел российский инвестиционный чемпионат
в конце 2022 года. Сейчас мы снова повторяем этот опыт. В общем, занимаюсь
задачами инвестиций. Также занимаюсь делами кафедры, читаю на кафедре курс по
финансовым технологиям, ну и когда время остается, занимаюсь какими-то
своими задачами, которые мне нравятся по науке. Но это больше, наверное, как
некое такое хобби. О чем сегодня мы расскажем, рассказ будет посвящен нашей
кафедре, что мы из себя представляем, какие проекты делают наши студенты, как
можно построить карьеру в Тинькофф, обучаясь на нашей кафедре. Расскажу, как
поступить на нашу кафедру и какие есть направления. Мы на каждом из направлений
задерживаемся поподробнее и соответствующие мои коллеги расскажут
про каждое из направлений подробно, может быть им позадавать вопросы
интересующие. После каждого блока мы послушаем ответы на вопросы. Вопросы
общего характера тоже в конце можно будет задать, если что-то будет непонятно в
течение презентации. Что за история с базовой кафедрой?
Базовые кафедры и наши, и вообще базовые кафедры в целом. Я сравню
две ситуации, как принято в целом и как делаем мы. В целом это прекрасный
пример такой вот синергией системы высшего образования и индустрии, когда вы
сразу получаете необходимые рабочие навыки. Вот в обычной ситуации, в
системе классического образования курсы бывают оторваны от реальности. Что это
значит? То есть вам дают прекрасные предметы, интересные возможно, возможно
там глубокие, но вот вы приходите на работу и говорят, не-не-не, все это вот не
надо, вот теперь вот научись вот этому. У нас такого нет. У нас вот все,
чему мы обучаем, применяется в реальной жизни. Те работы, которые делают студенты
там в качестве курсовых, там в последствии в качестве дипломных, это все
полезно, все идет напрот, все помогает в итоге нашим клиентам. Вот это вот
прекрасное чувство, конечно. Во-вторых, момент с трудоустройством. То есть как
принято, вы заканчиваете в УС, потом устраиваетесь на работу, бывает долго
муторно ищете работу. Здесь это есть способ сразу же устроиться на работу в
компании, поступив на кафедру. В случае с балкалавриатом, да, то есть мы сейчас
говорим про выбор кафедры на этапе балкалавриата, можно трудоустроиться
после первого семестра. Ну и, конечно же, вот этот вариант с гибким учебным
планом. Обычно вот вам то, что предложили, да, то-то вы и учитесь. Здесь есть
возможность да выбирать какие-то курсы, да, выбрать то, что себе, ну, то, что
интересно отказаться от того, что не так интересно. Там есть, ну, определенный
процесс по этому поводу, да, но в целом вот есть такая возможность. Переходя так
вот, ну, от какой-то общей информации, можно привести даже примеры тех
ребят и тех проектов, которые они делают. Вот это все ребята, которые учились на
нашей кафедре, да. Например, Женя Бритсон сейчас занимается головосовым
Да, начинал он с экспериментов на больших массивах данных, работал вот с голосовыми
технологиями, да, и вот сейчас он занимается таким вот необходимым и
интересным проектом. С Наташей Бобровской мы вообще тесно сотрудничаем, она тоже из
инвестиций, сейчас занимается нашей социальной сетью Pulse, вообще-то
социальная сеть, которая не имеет аналогов, да, то есть социальная сеть для
инвесторов, вот. И она сейчас вот занимается развитием, ну, в качестве такого
продукт-лида, продукт-менеджера, занимается развитием социальной сети Pulse.
Начинала она работая над чатбодом еще в студенческие годы и вот увеличила
метрики по нашему чатбоду, да, ну или вот Александр Князев занимается задачами
речевой аналитики, для этого там он использовал и математические модели
внедрял, да, и какие-то новые технологии, да, и вот добился тоже значительных
успехов. Это только вот проекты, которые вот сразу там, ну, нам удалось вспомнить,
которые вот сразу как примеры, но в целом проектов гораздо больше, еще раз
повторюсь, все наши студенты занимаются, ну, какими-то актуальными, необходимыми
для компании, для клиентов вещами. Расскажу про возможность карьерного роста, это
конечно больше на примере магистратуры, да, но понятно, что воронка вот начинается
уже с баклавриата глобально, да, вот. Большинство студентов, ну, вот, не
большинство, вообще все студенты, которые к нам приходят в магистратуру, начинают
с каких-то джуновских позиций, да, начинают свое развитие, ну, вот, в компании
с каких-то джуновских позиций, но уже к окончанию обучения на кафедре
становятся мидл специалистами, мидл, мидл плюс специалистами, то есть
подавляющее большинство, вот, а даже какое-то количество, да, и немалое
количество становится синер специалистами и даже руководителями направлений, ну,
то есть это, ну, я бы сказал, что это впечатляющая статистика. Немножко про
процесс поступления на кафедру, да, нужно будет подать заявку на сайте, да, это
произойдет, ну, сами процессы, которые там начнутся, это будет осенью, да, но заявку
можно подать уже сейчас, да, затем нужно будет пройти онлайн экзамен, ну, а затем
пройти некоторые собеседования, ну, собеседования на кафедру, да, по сути, там
техническое собеседование, мотивационное собеседование, вот, ну, и такой вот уже
дальше формальный момент, если вы попадаете на кафедру, вам пришел
положительный ответ, то надо будет подать заявление в учебный офис о том, что вы
выбрали нашу кафедру финансовых технологий. Совсем коротко скажу про
направление, да, потому что коллеги сейчас раскроют вообще какие там предметы,
какие курсы, вот, в рамках баклавриата у нас два направления, направление
продуктовой аналитики и направление бэкэнда на скала. Внутри компании это, ну,
очень-очень важные направления, да, то есть нам всегда нужны аналитики, нам
нужны разработчики на скала, да, вот, и мы в рамках этих направлений учим, вот, как я
уже говорил, учим каким-то актуальным вещам, которые будут пригождаться на
практике. Здесь такой вот QR-код, можете его, ну, распознать и вступить в группу,
где мы будем отвечать, оперативно разбирать вопросы, если там сегодня не будет
вопросов, завтра они появятся, да, тут мы будем всегда на связи, вот,
присоединяйтесь, вот. Я сейчас буду передавать слово коллеги, поэтому этот слайд пока
повисит, у вас будет время, чтобы, чтобы, ну, отсканировать и присоединиться к
группе. Всё, я передаю слово Владу, да, Влад расскажет про направление
продуктовой аналитики.
Так, все отсканировали, кто хотел. Буду считать, что да. Всем привет, меня зовут Влад,
сейчас я вам расскажу про направление продуктовой аналитики на нашей кафедре.
Значит, начнем с того, что я расскажу вам, кто я такой. Я руководитель отдела
аналитики продуктовой команды, развивающей крезитование наличными у нас в компании.
Что это значит? Это значит, что я координирую работу небольшой команды
продуктовых аналитиков, чтобы решать задачи, которые перед нами ставятся, как
перед продуктом, и я эти задачи там как-то декомпозирую, распределяю между ребятами,
и там мы вместе это все, все эти задачи челленджем, вместе приходим к цели,
которые перед нами ставятся. В компании я работаю уже 6 лет, начинал я с простого
продуктового аналитика, а закончил, ну вот где закончил. У меня есть довольно
большое образование, возможно вы слышали, что помимо бакалавриата у вас есть еще
магистратура, и мы эту магистратуру все вместе запускали, и в общем работал с большим количеством
образовательных проектов в разных вузах, в том числе на Пистейхе.
Кого вообще направление продуктовой аналитики в нашем бакалавриате заинтересует? Тех, в первую
очередь тех, кого интересует быстрый результат от выполнения ваших задач. Зачастую, может быть,
зачастую, ну вот, например, в фундаментальной науке результаты выполнения задач, они могут
быть где-то там на далеком горизонте, то есть условно. Курсач вы пишете, вы его можете начать
за полгода, и за это время вы можете успеть, может быть, разочароваться в нем, или в своей теме,
в направлении, которое вы выбрали, или иногда вы можете заниматься более сложными задачами,
на решение которых нужно много лет. Многих ребят такое демотивирует, такое демотивировало и меня,
и мне всегда вот хотелось такого постоянного, постоянных выбросов допамина, чисто за счет того,
что я решаю задачу, я получаю результат, вот он, он осязаемый, вот тебе такая воображаемая конфета.
Наши задачи продуктовой аналитики чаще всего решаются в рамках одного месяца, или если декомпозировать
какую-то более сложную задачу, то задачи решаются там в рамках недель, одной-двух недель, поэтому
результат вы получаете быстро. При этом мы не теряем связь с наукой, это не размахивание руками,
мы все еще применяем методы математической статистики в наших задачах, так что мозг не заржавеет,
так сказать. Важно еще отметить, что задачи, с которыми мы сталкиваемся, они всегда,
их можно описать в виде какой-то логической цепочки, где вы приходите от вашей цели,
которая перед вами ставится, к результату, вот каждый шажок между этим можно как-то обосновать,
либо с помощью просто таких логических выводов, либо с помощью экспериментов,
которые вы же сами будете проводить. И может возникнуть вопрос, откуда мы эти задачи берем?
А эти задачи мы придумываем сами зачастую. Мы, конечно, можем иногда там оглядываться на рынок,
можем посмотреть, что там происходит, вдохновиться чем-то, но чаще всего задачи мы придумываем сами,
потому что мы придумываем что-то свое прорывное. И вот здесь в наших задачах раскрывается такой
творческий подход. Так что если вас такое интересует, то задача продуктовой аналитики
это для вас. Почему вам было бы интересно прийти к нам быкловариат? Давайте начнем с такого,
с примера я сам с механика математического в культет МГУ пришел работать в Тинькофф 6 лет назад,
будучи студентом четвертого курса. И я столкнулся с большой проблемой, что с одной стороны была учеба,
которая от меня довольно много требовала, с другой стороны была работа, которая требовала от меня чуть
ли не больше. И это не только мой пример, на самом деле почти там почти все наши коллеги,
они так или иначе начинали студенческих лет, и многие хотели, многие сейчас хотят начинать
работать рано, и вот внимание, ваше внимание и время они делятся на два потока, на учебу, работу.
Какую проблему сейчас решает быкловариат и там впоследствии еще и магистратура? Быкловариат
позволяет совмещать учебный рабочий процесс, учит совмещать их в будущем, то есть вы там с
маленьких шашков начинаете, но потихоньку вы приходите к тому, что то, чему вы обучаетесь,
оно вам пригождается в том, над чем вы работаете, и в конце концов вы будете готовы перейти к вот
такому финальному 100 процентов рабочему процессу, потому что институт вам даст все, что вам необходимо.
Ну также бакловариат это такая лестница на другие наши проекты, где можно себя раскрыть,
это могут быть как стажировки, где вы решаете просто какую-то конкретную задачу за ограниченный
промежуток времени, и понятное дело, хорошие оценки на бакловариате скорее всего гарантируют вам
поступление в магистратуру, потому что вы будете знать все, что мы от вас требуем, когда вы
поступаете в магистратуру, а в магистратуре вы получите, условно, все бенефиты сотрудников
нашей компании. Что еще, наверное, суперважный момент, что диплом в бакловариате и диплом
в магистратуре это полностью рабочие задачи, никаких выдуманных задач на каких-то искусственных
данных ничего такого не будет. Выйти в штат можно довольно рано, ну и давайте перейдем к,
я все абстрактно рассказывал, какие-то задачи, а что за задачи такие? Давайте расскажу,
кто такой продуктовый аналитик и что мы от него ждем. Ну значит профессию аналитик в индустрии
можно увидеть много где и в разных компаниях, и разные компании под аналитиками подразумевают
разное. Если так подумать, то они там много где могут встречаться, вот здесь вот есть направление,
где их можно встретить аналитиков, звери такого. Если прям попытаться все это обобщить,
то как будто получается, что аналитик это кто-то, кто работает с численным описанием какого-то
проекта. Сложный, очень абстрактно, пока ничего не понятно. Давайте сужать наш поиск. Какие бывают
аналитики, сейчас я расскажу примерно вот как это у нас в компании работает. Мы работаем с большим
количеством продуктов, которые составляют большую экосистему. Давайте там какой-нибудь примерчик,
то есть есть у нас например какие-нибудь дебетовые карточки и есть инвестиции. Казалось бы разные
продукты, но давайте предзадумываемся. В дебетовых карточках есть какие-то там денежные транзакции и
в инвестициях есть тоже денежные транзакции. То есть если делать какую-то систему, которая
управляет денежными транзакциями, то скорее всего, логичнее всего сделать так, чтобы эта система
была общая для всех продуктов, которые эту систему используют. Ну и так у нас на самом деле и есть,
что все продукты, которые по смыслу в каких-то местах пересекаются, они пользуются общими
системами. Поэтому работу всей нашей экосистемы можно изобразить, сильно упрощая вот такой
диаграммкой, сеткой из продуктов и систем. Соответственно нам надо как-то развивать продукты.
Вот выходит какой-то аналитик, который решает задачи, исследует те или иные элементы продукта
с помощью данных. Когда он приходит в первый день, он обычно занимается каким-то узким
пересечением продукта и системы. Но со временем его зона ответственности начинает расти. У него
растет экспертиза, его задачи начинают распространяться либо на весь продукт кросссистемно,
либо на одну систему кросспродуктово. И продуктовый аналитик, он вот обычно развивает один продукт
кросссистемно. При этом развивать продукт непосредственно можно разными способами. С одной
стороны, что можно сделать? Что нужно делать, чтобы развивать продукт? Нужно как-то его улучшать.
Соответственно нужно ответить на два вопроса. Что делать и как делать? Соответственно на вопрос
как делать у нас отвечают обычно бизнес аналитики. Они договаривают с командами разработки, чтобы те
или иные наши идеи были реализованы. А вот на вопрос что делать, отвечают непосредственно
числовые аналитики. И вот под продуктовыми аналитиками, я подразумеваю сейчас, и под
направлением продуктовой аналитики, про которые я сейчас рассказываю, подразумеваются числовые
продуктовые аналитики, которые с помощью данных пытаются понять, а что же все-таки сделать с
продуктом, чтобы он развивался. Соответственно, если прям максимальную такую выжимку сделать,
о том что и дать какое-то определение, кто такой продуктовый аналитик у нас в компании,
это вот такой партнер бизнеса, который используя данные о продукте, с которым он работает,
используя личный опыт и применяя к этому всему знание статистики, его какие-то математические
методы, превращает вот эти все данные в призыв к действию. Что нужно сделать с продуктом,
чтобы достичь определенной цели. Еще приближаемся, зум такой делаем, попробуем провести аналогию,
как должны выглядеть, чем занимается продуктовый аналитик. Не все продуктовые аналитики любят,
когда я такую аналогию делаю, но мне она нравится, потому что она довольно наглядная. Вот представьте
себе такого врача-терапевта или врача-диетолога, который может узнать все о своем пациенте,
может дать совет почему угодно, но там ни в чем конкретным супер специалистом не является. Вот
такой врач-терапевт чем занимается? Он может найти у пациента какую-то проблему, предложить
решение этой проблемы, вылечить его, объяснить как вылечится. Может какую-то диагностику провести,
соответственно, если эту диагностику он проведет, он может как-то спрогнозировать, что будет с его
пациентом в будущем. Даже если пациент здоров, то он может составить какой-то там план, я не знаю,
питание или витамины какие-то дать, чтобы пациент стал еще быстрее, сильнее, быстрее,
сильнее. И продуктовый аналитик работает примерно так же, только в отношении какого-то проекта.
И если переводить это на какой-то наш язык, то выглядит это так тематически, что он использует
вот те знания, которые у него есть, он как-то метризует, описывает продукт с помощью метрик,
использует свои знания, подходы, знания и научные свои знания, применяет это к скопу задач,
похожей на то, о котором я рассказывал с врачом терапевта, только вот к продукту,
и пытается достичь определенной цели, которая перед ним ставится, например, на год достичь,
прийти к тому, чтобы у вас было n тысяч клиентов.
Подход к задачам. Здесь можно как инструкцию к действию рассказать. В первую очередь,
продуктовый аналитик разбирается с тем, как работает тот или иной проект, над которым он
должен работать, понимает, в чем цель, и дальше понятно, что проект может быть
какой-то очень сложный, там может быть много этапов, поэтому этот проект дровится на большое
количество этапов, у каждого подэтапа определяется мини-цель и ищутся слабые места,
или просто какие-то идеи, которые могут, может эти места не слабые, но все равно можно сделать этот
вот кусочек процесса лучше, соответственно, вот эти места, они как точки роста, они осознаются
и укрепляются, реализуется какое-то улучшение продукта. Самое важное, что главный вопрос,
который аналитик должен задавать ко всему вокруг и к себе в том числе, это вопрос почему. Я уже
несколько раз говорил про цели, вот всегда нужно понимать свою цель и стремиться к ней.
Хорошо, несколько слов о том, кто вас погрузит в методы, которыми пользуются продуктовые аналитики.
Все наши курсы, связанные с аналитикой, рассказывают наши действующие сотрудники. Мы
рассказываем исключительно о том, с чем мы сталкивались сами, какие-то решения, которые мы
либо придумали сами, либо они существуют уже для подобного типа задач, эти задачи часто встречаются,
и вот эту учебную программу мы полировали не один год, потому что мы начинали ее рассказывать
еще в магистратуре, а сейчас мы ее адаптировали для бакалавриата. Вкратце о том, чему научим,
но там гораздо больше на самом деле. Опять же, вникать в суть проекта, искать его цель,
работать с данными, у нас все записывается в наши базы данных, научим вас работать с ними,
научим превращать какие-то сырые, нечитаемые, вообще непонятные данные в метрики, по которым
можно сделать вывод. Понятное дело, что научим вас там SQL, научим превращать вот эти метрики
в четкий логический вывод, что делать дальше, ну и, разумеется, научим вас доносить эти выводы
до, условно, вашего соседа. Научим вас визуализировать это все, в том числе с помощью
Python. Научим вас статистическим методом, здесь на них заострять внимания не буду,
на основе вот этого вывода научим вас принимать решения, прям говорить, что делать дальше. Наверное,
чтобы вот это все подытожить, хочу сказать, что вот аналитическое мышление, которое мы вот этими
словно пунктами развиваем, оно часто помогает в жизни, потому что, на самом деле, если
призадумываться, то проблемы, с которыми вы сталкиваетесь в жизни, они часто решаются очень
похожими способами. Напоследок скажу, какие вступительные испытания есть для наших будущих
бакалавров. Значит, нужно пройти вступительный тест, это не сложная прикладная математика,
в основном это олимпиадные задачи с элементами теории вероятности, это кейс, это что значит,
это какая-то прикладная задача, нужно применить логику, может быть, немножко интуицию воображения,
очень похоже на наши реальные задачи, но там чуть меньше математики, чем на самом деле.
И, наконец, нужно пройти мотивационное собеседование, где просто наши рекрутеры
обсудят с вами ваш предыдущий опыт и попытаются узнать, зачем вы, почему вы хотите именно к нам.
Вот, и если вы эти все три испытания пройдете, то добро пожаловать к нам. Вот, на этом у меня все.
Если есть какие-то вопросы по продуктовой аналитике, я, конечно, так общу, пытался это объяснить,
может быть, как-то на примерах, задавайте вопросы, сейчас могу ответить на них.
Потому что есть определенные расхождения между тем, что делает терапевт, и тем,
чем занимается продуктовый аналитик, это чуть более глубокие задачи, наверное,
ну нам кажется глубокий терапевт, может кажется по-другому, но это такое,
очень для каждому можно его объяснить, по крайней мере. А вот как раз Марат,
который сейчас до меня выступал, он читает курс по, как он называется, финансовая математика,
и там всякие интересные методы. Скажи, ребята.
Это не всегда связано непосредственно с задачами продуктовой аналитики, но вот многие продуктовые,
ну есть продуктовые аналитики, которые и с такими задачами тоже сталкиваются,
то есть это как такая отрасль у нас. И про такое мы тоже расскажем. Да, кто, давай ты.
Вот там первые два этапа, там проверяется твои знания, на третьем скорее общение,
ну просто чтобы понять там, получится найти контакт, идешь ли ты на контакт условно.
А вот тесты, вот эти все в начале онлайновые, они же на время, да, идут? Вот, они на время.
Соответственно тебе на время нужно решать задачи, там сначала просто прикладывай математику,
потом кейс, тоже все онлайне. Все довольны. Так, давай еще.
Смотри, у нас есть такая типа профессиональная программа, которая уникальна для каждого направления,
но я так понимаю, если очень хочешь, то можешь какой-нибудь другой курс взять, да?
Да, но это только доп-нагрузка.
Доп-нагрузка, да. То есть есть обязательные, и они в том числе связаны с твоими профессиональными
навыками, которые мы хотим у вас развить, но остальное в доп-нагрузку, и оно не факт, что будет связано.
У нас еще бакалавры не выпускались? Я тебе про магистратуру расскажу, нормально?
Во, расскажу тебе про магу. Значит, смотри, у меня прям в команде есть аналитик Ярик.
Я говорил, я занимаюсь кредитованием наличным. Он единственный человек, который решает, какую ставку
клиенту по кредиту назначить. Вот мы что-то одобряем клиенту кредит и думаем, какую ставку
одобрить. Вот он сформулировал логику, логику ставок, какому клиенту что предложить. И сейчас,
ну то есть он какую-то логику уже выстроил, но она получена в результате экспериментов, тестов,
которые мы проводили. А мы сейчас более, он сейчас решает более глубокую задачу, он строит модель,
которая в зависимости от предложенной, ну теоретически предложенной ставки, пытается
предсказать, возьмет клиент кредит или нет. Такая предсказательная модель выдачи кредита условно.
Вот и там и немножко email используется и просто те методы, обычные продуктовые аналитики,
проверка гипотез, это все вместе собирается и вот сейчас он завершает работу. И вот скоро эта
модель, она у него сейчас еще не готова, но когда он ее допилит, эта модель появится на проде и она
будет работать вот у нас прямо в нашем процессе. Причем не он сам ее в процесс встраивает,
да, ну то есть он написал, напишет алгоритм, а потом этот алгоритм в нашу систему, которая принимает
решение по клиенту, его пишут, ну то есть он эту модель, он ее передаст, ее в пишут и она будет
работать. Так, еще вопросы.
Учебный план. Никит, помоги.
Учебный план, да, сейчас мы еще могли, но в принципе там, в этой презентации мы с кем-нибудь,
там вот на сайтах СТОР-меморатор рассказывал, там были предметы. В СТОР-мемораторе появится
список этих предметов и список тем, что можно получить подробнее. Какие-то онлайн, а какие-то
на байке, в следующем году должен, ну да. Еще вопросы.
Ну, есть учебный план, а, во.
У вас будет какой-то спор по вашему умению, по вашему учебному деятельству, у вас будет
департамент по вашим кураторам, у вас будет выгодный домашний станок, и на основе всего этого уже
команда будет видеть, и твоя единица будет как вам, и у вас будет департамент.
Ну, будем считать, что вопросов нет, если что, потом подходите, вам лично расскажу. Все,
передаю слово. Так, всем привет. Я вам сейчас расскажу про направление бэкэнд разработки
на нашей кафедре. Ну и, конечно же, немножко о себе. Меня зовут Бровкин Антон Александрович,
у меня 10 плюс, чуть-чуть побольше, чем 10 плюс опыта промышленной разработки.
Разные годы я писал на разных языках, это были C++ когда-то очень давно, ну,
C-классами на самом деле. Это была Java, это был C-sharp, это был JavaScript, и последние, получается,
8 лет мой основной язык это Scala. Ну, это не значит, что я вот эти все предыдущие забыл,
просто Scala мне нравится больше всего. Тинькофф, я занимаю позицию архитектора решений, то есть я
такой большой дядя, который там что-то проектирует какие-то большие серьезные системы, решает,
ну, проектирует дизайн, решение каких-то больших сложных задач, ну, а также помогает инженерам,
их локальные задачи решить так, чтобы в итоге клиентам было не так больно, чтобы решения были
более надежными, более быстрыми, более поддержанными, ну, и так далее, да, всякие такие, всякое такое
качество. Ну, а также последние три года я читаю лекции в магистратуре МФТИ, ну, и вот последний
семестр еще и бакалаврят. Ну, раз уж я упомянул про Scala, давайте я расскажу, как я вообще сюда
попал. Scala, на самом деле, язык такой немножко, мягко говоря, не самый популярный, да, это не
Java, это не C-Sharp. Как это было? Десять лет назад в тринадцатом году на одной из конференций это
был High-Load++, я услышал доклад от Twitter, посмотрел доклад от Twitter, и там как раз какой-то инженер
из Twitter рассказал про Scala. Ну, честно говоря, доклад мне не понравился, то есть он, по сути,
это было вот, смотрите, ребята, мы можем вот, смотрите, написать строку, да, у нее там через
точечку написать to string, вот теперь классно это все работает, ну, вот, или к любому объекту написать
to string, ну, что-то такое. Я посмотрел на это и думаю, ну, господи, еще один язык под JVM, зачем
есть же Java? Окей. Буквально прошло пара лет, чуть-чуть поменьше, и, ну, мне вообще интересны
высоконагруженные распределенные системы. И тогда я услышал про framework Aka, заинтересовался им,
ну, как раз в разрезе вот этого своего интереса, high-load системы. Aka написана на Scala,
поэтому интересно стало язык, и в второй половине 2015 года у меня появилась задача,
которую как раз там можно было поэкспериментировать, и нужно было написать некоторый микросервис,
и было принято решение взять Scala. Фактически с нуля там удалось изучить язык, и мне удалось
написать этот код. Как раз я там Mac использовал. Ну, что могу сказать, мне очень понравился язык,
показалось очень приятным для работы, поэтому я втянулся, изучал глубже, ну, и вот я здесь,
перед вами такой красивый, рассказываю про направление Scala. Давайте от меня перейдем
к нашей кафедре, к нашему направлению, вообще, чем мы занимаемся. Здесь важный момент, самый
важный момент, то, что на нашем направлении мы готовим инженеров по разработке, то есть,
чему мы учим, мы учим решать, в первую очередь, реальные задачи, настоящие, которые встречаются
каждый день, ну, либо через день хотя бы. Мы учим работать с бизнес-требованиями, то есть,
любой инженер должен уметь понять бизнес-постановку и уже перевести в решение,
а не просто по какой-то готовой спецификации, где вам все до соплей расписано, просто перевести
в код. Нет. Мы учим и архитектуре бэкэн-систем, как вот это все запроектировать так, чтобы было
качественно, чтобы это было быстро, надежно. Учим современным инженерным практикам и подходам,
разумеется, почему, потому что мы сами их у себя применяем. Ну, вы знаете, Тинькофф это не
просто банк, это технологическая компания, в первую очередь, причем это одна из лидирующих
технологических компаний нашей стране, ну, и в мире, наверное, тоже. И лидерами нельзя стать,
если не использовать какие-то передовые подходы и практики, технологии, мы их используем, и мы
естественно этому учим тоже и наших студентов. Ну и, конечно же, мы учим программированию,
как, собственно говоря, пользоваться инструментом. И у нас два основных предмета на кафедре,
это архитектура, как раз где мы рассказываем про подходы, про практики, про паттерны,
про такие вещи, как continuous integration, continuous delivery, и так далее. Вот куча всяких вот этих
слов. И мы учим второй предмет, это функционально программирование на языке скала, которое,
собственно, и дало название нашему направлению. Ну и давайте поподробнее про саму скалку расскажу,
про этот язык, ну и почему он мне нравится, и почему мы его используем. Ну, во-первых,
тут важно сказать, да, почему мне нравится скала. Это очень лаконичный язык, буквально в
несколько строчек можно написать то, что на другом языке займет у вас экран другой. Скала
очень выразительный язык, в нем много всяких средств, синтаксических, синтаксического сахара,
каких-то ключевых слов, которые вам позволяют многие вещи выразить довольно просто. А еще
одни и те же вещи написать несколькими разными способами, они все будут правильные. Ну и сложные
вещи, таким образом, легко и просто описывать. Еще один важный момент, скала это JVM-based язык,
то есть ее можно, конечно, скомпилировать скала JS JavaScript, скомпилировать скала Native,
но в первую очередь используют именно компиляцию Java bytecode. Чем это классно? Тем, что в продакшене
с этим легко работать, потому что это аналогично Java приложениям. Для среди инженеров, для инженеров
по эксплуатации это вообще прекрасно. Скала, как я сказал, такой язык, скажем так, не слишком
широко распространенный, но тем не менее, у него есть сообщество, это сообщество достаточно активно
развивается. Если вы посмотрите в Telegram-е чатики, посвященные скала, вы увидите, да, они не слишком
населенные, но довольно активные. Ну и, конечно, такое сообщество способствует постоянному
развитию и языка, и экосистемы. Ну и, финально, часто говорят, что, ну, есть такое мнение, что скала
это функциональный язык, на самом деле это не совсем правда, но, тем не менее, скала за счет
своего синтаксиса, за счет своих особенностей как бы подталкивает разработчиков, которые пишут
на этом языке, именно к использованию функциональной парадигмы. И это важно, и вот почему.
Ну, вкратце, что такое функциональное программирование? Я сейчас не буду рассчитать длинную лекцию про
лямбда исчисления, про Лонза Чорща, про машины тюринга и так далее. Ну вот, вкратце, функциональная
парадигма это о чем? Это неизменяемая структура данных, это функции, как переменные, возвращаемые
значения. Еще говорят, функции в функциональном программировании это объект первого класса. Ну вот,
то есть их можно вернуть, можно передать как параметр. Очень важное свойство, на чем вообще
строится функциональная программирование, это ссылочная прозрачность. Ну, если грубо, то это
функции, детерминированные, однозначенные, примерно как это в математике, математическом смысле слова,
в которых нет побочных эффектов. Ну и для того, чтобы все-таки побочные эффекты иметь, есть
функциональные эффекты, и основной инструмент это композиция. То есть, программа на функциональном
языке на самом деле это функция, чистая функция, которая принимает что-то на вход, возвращает
какой-то результат, и дальше этот результат можно проинтерпретировать, и она у вас выполнит
полезную работу. И эту функцию можно собрать путем композиции. Может быть, немножечко сложно
объясняю, но давайте вот по профитам, да, посмотрим по профитам, что это позволяет, функциональная
парадигма, функциональное программирование позволяет описывать логику алгоритма декларативно.
Оно позволяет, за счет декларативности, позволяет достичь того, что вот это вот описание, оно у вас
достаточно понятное, прозрачное. Плюс, за счет того, что свойства ссылочной прозрачности,
незаменяемой структуры данных, которые используется ФП, у вас нет, не будет никаких проблем с конкурентным
выполнением кода. По-моему, у вас есть такой курс, и вы знаете, да, вот эти симафоры, критические
секции и так далее, но вот ФП с этим все гораздо проще. И более того, этот код работает быстро и
эффективно. А еще, то, чего на этом слайде нет, но о чем важно сказать, функционально написанный код,
он очень хорошо композируется. То есть, фактически, вы пишете маленькие кусочки, вы можете из них
собирать разные программы, из различных под программ путем композиции, и это довольно легко,
довольно просто сделать. То есть, по сути, на выходе вы получите надежный,
тестируемый, композируемый, хорошо работающий код. И почему это важно именно в Тинькофф? Казалось бы,
да, почему бы не использовать какие-то более традиционные подходы? Давайте, как мы используем
скалу? Мы ее используем для того, чтобы в первую очередь писать опишки. Опишки, какие-то ближние
бэкенды, с которыми взаимодействуют наши фронтенды, веб-странички, мобильные приложения.
Ну и примерно две трети API у нас написаны на скалу. Оставшиеся это C sharp и Java. Нам критически
важна доступность и скорость работы этого нашего API. Почему? Ну, потому что у нас десятки
миллионов клиентов, на самом деле. И потому что Тинькофф, ну, как вы знаете, у нас нет никаких
отделений, никаких офисов для клиентов. У нас все взаимодействие с клиентом с нами происходит либо
через web-front, либо через мобильное приложение. Если web-front не работает, клиент недовольный,
он уходит. Если мобильное приложение не работает, клиент не может сделать свою работу. То, что он
хочет, перести деньги, совершить покупку, сделать ставку на инвестициях, закупить что-нибудь,
проинвестировать, открыть счет, закрыть счет, и так далее, всякие разные вещи.
Нам важно, чтобы клиент мог это делать 24 часа в сутки, 7 дней в неделю.
Поэтому стабильность, надежность — это для нас очень важно.
Ну а за счет того, что на скала можно сложные вещи написать достаточно просто,
она нам позволяет справиться вот с вот этой нагрузкой, которая нам генерят
десятки клиентов каждый день и обеспечить нужную доступность и скорость работы.
Ну а почему это сложно? На самом деле, потому что любая простая вещь под серьезной
нагрузкой становится действительно сложной. Там приходится начинать думать о том, а что нам
сделать так, чтобы обеспечить надежность ну хотя бы три девяточки, а то и четыре.
Как это сделать? Нужно использовать там какие-нибудь паттерны, подходы и так далее.
Скала позволяет довольно легко и красиво описать. У вас не будет мессии в коде,
и это все тестируется и прогнозируется. Что еще можно сказать про скалов теньков?
У нас в компании самое большое среди российских работодателей скала сообщества.
Несколько сотен скалист, ну примерно 300 человек. Среди них есть как студенты-магистры,
пока еще магистры, осенью, я думаю, бакалавра добавится. Вот так и те,
кто закончили магистратуру, ну и те люди, которые пришли, скажем так, с улицы.
Мы работаем не только над своими проектами, не только над своими опишками и так далее,
мы еще и работаем с опенсорс-проектами. Да, теньков вкладываются в опенсорс-проекты,
даже некоторые библиотеки, фреймарки, которые используются в Скалом мире,
они вышли именно из нашей компании. Как пример, TOFU. У нас организуются регулярные метапы,
наши ребята пишут статьи, входят на конференции, то есть это сообщество, которое у нас есть,
оно еще активно развивается. Ну и, конечно же, мы преподаем, мы внутри себя тоже развиваем
какую-то базу знаний, которую когда-нибудь рано или поздно мы тоже расширим на публику.
Про сам курс расскажу тоже более подробно. Естественно, мы у вас в курсе по скала научим
основам языка, научим синтаксису, ну, база. Конечно же, мы познакомимся с коллекцией,
методами работы с ними, потому что, ну, мы все-таки зачем программируем, да,
чтобы большие массивы данных обрабатывать. Большие массивы это коллекции, как без них.
Мы научимся писать асинхронные или многопоточные, как хотите, код стандартными
средствами языка. Под капот заглянем, увидим, как это устроено в кишочках и почему такой API.
Мы посмотрим, как средства ОУП, объектно-ориентированную программирую скала,
организованы. Как я сказал, скала толкает, конечно, к функциональной парадигме,
но изначально, в принципе, это ОУП-язык. Немножечко мы с вами познакомимся еще и с
математической основой функционального программирования. Это, в первую очередь,
лямбда-исчисления, точнее, вспомним, скорее всего, да, насколько я знаю, вам его преподают.
Вспомним упрямительно к FP и некоторые вещи из теории категорий. Ровно столько, сколько нужно
для понимания происходящего и не больше не погружаясь в глубины глубин, чтобы, в первую очередь,
решать инженерные задачи. Научимся функциональному дизайну, это очень важно для человека,
который пишет в функциональном стиле. Ну и в итоге вы сможете писать полноценный
функциональный код на скала как с нуля, так и с помощью современных каких-то библиотек.
Ну и что тут еще сказать после этого, ну или в процессе этого. Добро пожаловать в сообщество
скалоразработчиков Тинков. Тоже должен упомянуть об этом. Смотрите, по поводу стажировки и дальнейшей
карьеры, как вообще у нас происходит путь развития Scala Junior. То есть Марат рассказывал нас,
студенты, которые поступают нам на работу через два года, ну примерно через полтора года на
самом деле, достигают мидалу уровня. Давайте я расскажу, как это вот в случае Scala происходит.
Ну, во-первых, буквально с самого начала у вас будут реальные задачи, то есть вы попадете в
команду, у вас будут реальные задачи, которые вы будете решать. Здесь не надо пугаться,
потому что задачи будут от простых к сложным, разумеется. То есть сперва это возможно какие-то
тесты написать. Мы очень много тестов пишем. Современная бэк-энд разработка без автоматизированного
тестирования — это нонсенс. Какие-то простые вещи, типа простые рефакторинги, удалить фича,
флаг, какой-то неиспользуемый код. Буквально на этом вы как раз сможете набить руку,
познакомиться с языком и применить уже более лучше знания, которые вы получите на лекции.
Дальше вы будете уже реализовывать какие-то бизнес-фичи, относительно небольшие или,
может быть, технические какие-то фичи. Делать это по подробной технической постановке,
которую вам коллеги подготовят. Ну а дальше вы уже научитесь и сами готовить техническую
постановку, то есть перерабатывать абстрактно-постальную задачу в конкретные решения на языке. И, конечно же,
вот весь этот путь вы будете не одни. У вас обязательно будет ментор, который будет вас
спровождать. Ну это обязательно. У нас все джунгли так проходят, не только студенты. Это очень важно,
потому что ментор всегда поможет ответить на какие-то вопросы, что-то подскажет, расскажет и так далее.
Тоже важный момент. Мы везде во всем Тинькофф практикуем обязательное перекрестное код-ревью.
Мы смотрим код друг друга. Опытные инженеры смотрят код более юных коллег, более юные
коллеги смотрят код более опытных инженеров. За счет чего передаются практики, собирается обратная
связь. Вы в этом тоже, конечно, будете участвовать. Вы будете смотреть чужой код, спрашивать, почему так.
Написано они, так, аналогично. И коллеги вам будут помогать сделать ваш код лучше. Через это вы
будете на практике учиться. Ну и, конечно же, вы окажетесь в команде, поэтому вы будете участвовать
в командах активностях. Ну, от команды к команде они могут различаться, но в любом случае вас
будут какие-нибудь лимитинги, у вас будут какие-нибудь ретроспективы, пополнения, триомига, ну и так далее.
Всякие умные слова. Ну, еще чего команда придумает. Тоже все это интересно, полезно и поможет вам
получить реальный практический опыт. Так, ну и что у нас осталось? Осталось про вступительный экзамен
поговорить. То есть все это, как вам, как вам сюда попасть? Как вам попасть к нам на кафедру? Да очень
просто. Вам, естественно, нужно подать будет заявку, да, об этом уже сказали мои коллеги.
Конкретно на наше направление у вас будет контест по программированию, то есть это какая-то онлайн
задачка или онлайн задачки, которые вам надо будет решить. Условно вам будет дана неделя и три
часа на решение нескольких задачек в течение этой недели. Что вам пригодится? Знание и понимание
алгоритмов и структуры данных. Это важно, потому что без вот этих знаний сложно вам будет решить
задачки качественно. Знание и понимание сложности алгоритмов, естественно, это тоже важно, чтобы
решение было оптимальное. Какой-либо язык программирования вам тоже потребуется, без него вы,
конечно же, не сможете код написать. После того, как вы сдадите этот экзамен, да, у вас будет
некоторое собеседование, там мы проверим, наши сотрудники проверят, насколько вы хорошо знаете,
опять же, понимаете вот эти предметы, алгоритмы, структуры данных, но уже не на примере задачек,
а уже в ходе беседы. Ну и какое-то мотивационное тоже интервью. После этого мы будем принимать
решение о зачислении или не о зачислении. И финально, что хотелось бы сказать, если вас интересует
разработка, если вы хотите писать код, если вы хотите развиваться в сторону инженера по
разработке, если вам интересны бэкэн-системы, распределенные бэкэн-системы, высоконагруженные
бэкэн-системы, если вас интересует и функциональное программирование, какие-то теоретические,
какая-то теория программирования, если вот эти все условия выполняются, ну или хотя бы часть из
них, то наше направление это как раз то, что вам нужно. Приходите к нам, и я закончил. Если у вас
есть какие-то вопросы, задавайте только, пожалуйста, погромче. Есть компании, где еще используются
скалы, это Яндекс, в Сбире на скала пишут что-то, на Омин, по-моему, скала разработка, ну это вот так
вот на скидку. Вообще, на самом деле, скала достаточно широко используется в обработке больших данных
дат инженерии, но не только. Опишки на ней тоже пишут. Вот в частности Яндекс и Яндекс Вертикали,
там у них имена опишки. Хороший вопрос. Смотрите, наш предмет, на самом деле, называется
функциональное программирование на языке скала. То есть мы, да, мы, конечно, вам покажем,
расскажем на конкретный язык и покажем, как на нем писать функциональный код. Но в ходе вот этого
в наших лекций мы вам расскажем про паттерны функционального программирования, про концепции
абстракций, которые используются в ФП. И те же самые концепции абстракций используются в любом
другом языке, где поддерживается функциональная парадигма. А на самом деле сейчас почти любой
современный язык программирования поддерживает так или иначе какие-то элементы хотя бы ФП. То есть
есть чисто функциональные языки типа Хаскель или Ирланд, но они совсем мало популярны. Ирланд
это вам вообще в Швеции надо. Вот. Но, тем не менее, допустим, те же самые функции, как параметры,
как вращаемые значения, ну или так называемые лямбды, это есть и в шарпе, это есть в джаве,
это, конечно, есть в котлене, даже в плюсах это есть. И лексические замыкания там есть, там тоже
можно писать код функционально, ну или раз, например. То есть знания, которые вы получите,
они на самом деле, ну с поправкой на синтаксис конкретного языка и на его выразительные возможности,
они применимы и за пределами скалы.
Твиттер.
Так, ну смотрите, Scala это твиттер. Твиттер, кстати, очень много в ScalaMir тоже доконтрибьютил,
у них есть свои библиотечки, свои подходы, свои фреймарки. Недавно они заопенсорсили,
по-моему, рекомендательный алгоритм, можно посмотреть на Гитхабе. Вот. Он написан на Scala.
Значит, что у нас еще есть? У нас есть Netflix. Netflix на Scala пишет именно бэкэнды, то есть это не
дата-инженерия, это именно бэкэнды. Правда, по-моему, в последнее время они диверсифицируют стэк,
но у них Scala еще по-прежнему много. Ну и она будет оставаться. Так, что еще упомянуть?
Шведский, ну, вообще, европейский финтех Klarna. Ну они, в принципе, в FPGeek, они пишут функциональные
парадигмы, у них все FP, то есть они фронты на TypeScript это FP в функциональном стиле пишут,
там можно так. У них бэкэнды на Ирланге, Хаскеле, Scala и, естественно, везде все
функционально на полный максимум. Кстати, такая достаточно известная компания, у нас она не на
слуху, но в Европе, известно, они, например, предоставляют рассрочку. Бинпель такой продукт,
очень хороший и полезный. У нас тоже такой есть. Так, что еще? Кого бы еще вспомнить? Есть Evolution,
это GameDev, гэмблинг точнее, скорее. У них бэкэнды и у них функциональный стиль. Ну это вот то,
что примерно на слуху, такое достаточно крупное. Вообще, Scala частенько присутствует в банках,
правда, частенько это все-таки обработка каких-то больших данных, это Spark и какие-то SparkJobs,
которые написаны на Scala. Вот, ну вот как-то так. То есть, в принципе, по миру ситуация, на самом
деле, если в двух словах, примерно как в России. Scala есть, часто используется в дат-инженерии,
реже для каких-то бэкэндов. Scala не является каким-то мейнстрим-языком, то есть это не то,
что вы в любой компании найдете, но, тем не менее, язык используется и развивается.
Я преподаю и в магистратуре, и в бакалавриате.
Дипломные. Ну давайте пример приведу. Вообще, мы тоже пишем, у нас студенты тоже пишут работы
дипломные на рабочие темы, также как и в продуктовой аналитике. Можно сказать, что можно подумать,
точнее, что это как-то тяжело. Мы типа код пишем, а дипломная работа это какое-то исследование,
какая-то наукоемкая штука, в основании и так далее. Научная ценность. На самом деле,
ее тоже можно найти и достаточно несложно найти у нас, потому что берем большую задачу, берем
разные подходы, с помощью которых эту задачу можно решить. Эти подходы сравниваем, ищем какие-то
определенные метрики, ищем какие-то критерии, почему нам подходит то или иное решение. Сравниваем
по этим критериям разные варианты. Выбираем нужный, реализовываем, описываем полученные
результаты. Ну по сути, вот дипломная работа. Так же как и в любом другом направлении. Качество
примера. Один из студентов, ну это магистратура, конечно, тем не менее. Дипломная работа была
посвящена тому, чтобы написать, ну какой-то предложить путь и реализовать этот путь для,
казалось бы, просто простой обертки. Обертки к методам. То есть суть задачи была в том,
что нам важно обеспечивать какую-то отказ-устойчивость надежности, и не хочется бизнес-логику
загромождать техническими особенностями. То есть когда у вас бизнес-логика написана,
описывает именно саму бизнес-суть решаемой задачи, да, не хочется туда встраивать что-то,
что говорит о том, что вот в случае недоступности такого-то сервиса мы должны повторить или там
использовать circuit breaker, еще какие-нибудь такие умные слова. Вот это очень легко делать обертками.
Обертки можно на скалы реализовать разными способами. И работа была посвящена тому,
чтобы выбрать правильный способ реализовать. В итоге там были выбраны макросы. Это довольно
тоже интересная область. То есть это, по сути, когда мы программируем компилятор, за нас написать
какой-то код, код сгенерировать в процессе компиляции. Вот, в итоге была выбрана именно эта тема.
Студент показал, что именно вот такой подход подойдет в конкретных обстоятельствах. То есть
именно макросы, а не какой-то хитрый паттерн-интерпретатор, которых на скала можно
по-разному реализовать. Ну, отличная работа на самом деле. Так, ну что ж, если у вас вопросы
закончились. Спасибо.
