Всем доброго дня. Мы с вами продолжаем изучать страсти, связанные с Элер-алгоритмом. Сегодня у нас вторая лекция, посвященная Элеру, и я пока подумаю, будем делать так, что мы сначала, собственно, будем говорить еще одну лекцию про Элер. У нас в плане три лекции, посвященные Элеру, вот. И, значит, на семинарах, возможно, у кого-то сейчас начнется новая тема, а она связана с конечными преобразователями.
То есть, это когда у автомата есть, помимо входа, есть еще и выход. Вот. Посмотрим. Возможно, чтобы вы лучше подготовились к контрольной, мы немного поменяем темы. Вот.
Собственно, а последнюю тему про преобразование, преобразователь перенесем чуть раньше, а тема, связанная с Элером, там, про ДМП-автоматы, будем говорить, детерминированный МП-автомат, мы оставим после.
Значит, я сразу выписал перед началом нашего занятия список фактов, которые, возможно, у нас есть, поэтому я думаю, что лучше сделать так, что навести камеру на это все дело, на список этих фактов, значит, на паузе можете посмотреть, что происходит.
Вот. И, собственно, будем двигаться дальше. Значит, смотрите, в прошлый раз мы доказали очень важный факт, который по факту нам говорит, а что же у нас со собой представляет наше состояние в автомате.
То есть мы с вами видим, что у нас есть, что такое, давайте еще раз напомним, что такое допустимая ситуация для активного префикса, это по факту состояние стека, которое у нас может быть в автомате перенос свертка.
И мы доказали следующий факт, что на самом деле операция GoTo может быть имплементирована как перенос, собственно, допустимого префикса.
То есть означает, что замыкание, то есть мы делаем переход по какой-то букве, делаем замыкание, мы переходим в ту же самую, собственно, какой-то сет допустимых ситуаций для активного префикса.
Вот что мы с вами сделали. То есть как бы получается, что у нас с вами согласовано состояние в нашем автомате.
Но давайте начнем с того, что нам все-таки нужно немножечко более формально определить наши переходы в автомате, потому что в прошлый раз я как бы пока говорил, что давайте мы возьмем переходы по букве А и сделаем какое-то действие.
Вот. И давайте как раз мы с вами это определим. Мы будем с вами говорить, что если у нас есть состояние в автомате И, какое-то, да, то есть вот оно состояние И может состоянии.
Помните, мы говорили следующее, что у нас с вами есть какой-то переход вида альфа, стрелочка альфа, точка Абета, С.
Да. И мы говорили, что давайте для всех таких переходов сделаем переход в автомате такой, что альфа, стрелочка альфа, А, точка Бета, С будут находиться здесь.
И после этого еще и построим замыкание всех этих переходов. По факту мы с вами видим, что мы просто можем математически формально написать следующую вещь.
С учетом того факта. То есть мы по факту пишем следующую вещь, что из И в А у нас идет переход в Гоуту и А.
Если у нас находится какое-то слово на стеке, мы делаем шифт в состояние Гоуту и А. То есть мы берем и переходим по нашей букве А в нашем стеке.
Да, то есть наша цель опять же в автомате перенос свертка всегда определять какое мы действие делаем своим. Мы делаем либо шифт, либо редьюз.
Так, я надеюсь, что это на семинарах все отработали.
Михаил такой сидит. Ладно, я Дмитрию передам.
Нет, мы это отказали, здесь семинар.
А, видимо пример будет сегодня тогда.
Хорошо, значит это первая вещь.
А вторая ситуация, которая у нас возникает, это ситуация такая, что у нас допустим альфа, бета, точка и здесь следующий символ С.
И, собственно, нам нужно сделать какое-то действие.
Смотрите, давайте внимательно посмотрим на вот эту картинку.
Альфа, бета мы находимся здесь в деревьевом угоду.
Что нужно сделать? Нам нужно как-то подняться вверх для того, чтобы понять, какая следующая буква.
Да, то есть нам нужно подняться наверх, это обычная операция complete в алгоритме Erle.
Но нам бы неплохо было бы отсечь ненужные варианты.
Поэтому смотрите, что мы делаем.
Мы говорим, ага, что такое С в терминах допустимого префикса?
Давайте вспоминать.
Вот это С. Это первый символ, который выведется здесь.
Мы говорим, мы находимся в конце правила, у нас ситуация такая.
Следующая буква, которая здесь есть, есть буква С.
Читаем букву со входа, и внезапно оказывается эта буква С.
Мы с вами сразу, предиктивно, можем получить следующую букву.
То есть остальные все варианты будут отсекаться.
То есть мы просто считываем.
Да, мы точно делаем complete, это операция reduce.
Если мы сейчас докажем.
Давайте я тут один тонкий момент скажу.
Что по индукции тут надо очень просто аккуратно все расписывать.
Да, это такие, совсем реальный факт.
Что дальше у нас на вершине стека, ну мы это с вами сейчас будем тоже делать.
Внезапно окажется Бета.
Вот, когда мы определим наше состояние в переходе автомат, перенос свертка.
Да, и тогда мы с вами снимаем этот Б.
Который здесь есть.
И кладем букву А на наш стек.
Мы не читаем следующую букву строки, мы смотрим на следующую букву.
Да, мы смотрим следующую букву строки.
Если она в стеке, то мы будем утверждать, что там точно лежит Б.
То может лежать.
Да, может лежать Бета.
Если она там не лежит, то мы не делаем.
Нет, мы будем даже утверждать сейчас, секунду.
Мы даже будем утверждать, что если мы попали конкретно в эту ситуацию.
Именно так, то там Бета на стеке будет лежать.
По нашему алгоритму.
Вот, это как раз следовать будет вот из вот этой штуки.
Смотрите.
Давайте внимательно посмотрим.
У нас оператор Гоуту.
В стеке?
Ну.
Да, да, да.
Мы конкретно в каком-то месте строки находим.
Нет, нет, нет, смотрите.
У нас есть одно дело СТДИИН.
То есть мы прочитали какое-то слово У уже с вами.
Мы находимся здесь.
Следующий символ у нас символ С.
Не, не.
Если мы конкретно находимся в разборе текущем конкретного слова, то мы следующий символ точно узнаем.
То есть мы здесь берем фиксированность.
Да, хорошо.
Вот, поэтому, значит, в таком моменте мы будем делать тридьюз.
О, правило, стрелочка Бета точка.
Значит, здесь бывают два типа конфликтов.
Значит, когда мы это не можем сделать.
Это либо тридьюз, когда у нас, возможно, в ситуации, либо такая штука, либо такая штука.
Для этого здесь символ должен быть А.
Либо ситуация редьюз-редьюз, когда у нас две вершины стека совпадают.
И это, кстати, нас намекает на то, что, оказывается, есть такое понятие, как детерминированный МП-автомат.
То есть, по факту, у нас получается, что у стека один префикс является частью второго префикса.
То есть это как раз дает недетерминированность в МП-автомате.
Поэтому LR-автоматы очень сильно связаны с CDMP-автоматами.
Поэтому это то, что мы с вами будем смотреть еще на одной лекции.
Шифт редьюз конфликта.
Значит, давайте теперь мы с вами немножечко определим более точно наш алгоритм, который здесь есть.
И давайте будем говорить, что мы с вами на стеке будем хранить
не состояние, не наш стек, а путь в автомате.
Сейчас я расшифру это.
Да.
То есть Q0, X1, Q1, X2, Q2 и так далее.
То есть будем хранить путь в нашем автомате.
И тогда давайте подумаем, как наши правила могут быть преобразованы.
Сейчас я найду, где это в слайде у меня.
Во, а, вот оно, смотрите.
Это как раз на том же слайде.
Значит, смотрите, что у нас происходит.
Когда у нас с вами есть состояние ИА,
и мы делаем go to,
то мы по факту делаем следующее.
Вот у нас было состояние Q0, X1, Q1, Xкт, Qкт.
Дальше мы добавляем сигнал А
и пишем Qкт, плюс первое, равняется go to Qкта.
То есть мы считываем наши слова со входа, букву наши со входа
и записываем на стек, куда мы переходим в нашем автомате.
Это что мы делаем, если нам необходимо сделать shift.
Значит, если нам необходимо делать reduce,
так, давайте я буду здесь писать,
по правилу, а, стрелочка, точка, альфа, точка.
Давайте формально посчитаем, сколько тогда у нас с вами символов здесь есть.
То есть, допустим, это Y1 и так далее, Yrt, это R символов.
Ну, тогда наша цель будет доказать, что если у нас на стеке,
тогда на стеке у нас в ходе алгоритма будет следующее.
Будет где-то Y1, там, P1, Yrt, Prt.
А здесь это по нулевую.
Ну, тогда смотрите, что мы можем с вами сделать.
Нам надо будет это тоже доказывать, что с выводимостью все проблемы не будет.
Значит, мы находимся вот в такой ситуации.
Собственно, значит, здесь у нас с вами есть правило, а, стрелочка, альфа, точка.
Вот оно нам задается.
А значит, что здесь тоже есть переход по букве А.
То есть, здесь есть переход по букве А, футболту, от по нуля.
Тогда мы смотрите правило, что мы можем сделать.
Мы снимаем два R символов со стека, то есть, удвоенное количество символов правой части правила.
Кладем, значит, вершину А.
И получаем переход вот такой вот.
Окей? Это было, да?
Вот. Единственное, значит, теперь, чтобы вот эти все факты доказать
и идти к тому, что на самом деле на вершине стека у нас находится некоторый активный префикс,
нам нужно доказать следующий факт.
И это как раз, по-моему, у нас лемма вторая.
Да, это лемма вторая, которая...
О, Господи, у нас опять проблема с нумерацией.
Давайте назовем лемма 3.
Ну да, тут нумерация.
Вы не против, если я лему тоже вторую назову?
Хорошо. Ну, фаути, Господи.
Так, значит, смотрите.
А?
Да-да-да-да-да. Непосредственное изложение.
Значит, смотрите, нам нужно доказать следующий факт.
Closure изо штрих.s$ будет равняться аддаматепсум.
Если мы это с вами докажем, то мы получаем как раз, что у нас...
Если мы оказались в каком-то состоянии, то путь у нас по факту является активным префиксом в автомате переноса сверка.
Вот тот путь, который мы прошли до этого состояния.
Вот.
И причем это как раз ситуация будет для допустимого префикса.
Так, давайте доказывать.
Значит, смотрите.
Доказательство слева направо.
Оно простое.
Почему?
Да-да, ложность.
Ну, давайте вспоминать, что такое ситуация, допустимая для активного префикса.
Я утверждаю, что s-штрих.s$ предлежит аддаматепсум.
Ну, действительно.
Давайте посмотрим.
Значит, s-штрих.
Стрелочка.
Дальше мы раскрываем, собственно, s-эпсилон.
Точнее, s-штрих.эпсилон.
И за один раз мы с вами s-штрих раскрываем в s-эпсилон.
При этом, что у нас находится до вот этого символа, у нас находится пустота.
Да, я пользуюсь просто определением, допустим, ситуации для активного префикса.
Вон оно написано там на доске.
Вот.
А вам видно, кстати, то, что на доске написано?
Да.
Или, не, так, нам все вот мигают.
Давайте немножко цветокором займемся.
Да.
Всем зрителям ютуба приношу извинения.
Сейчас будет настройка цветокора.
Так, лучше стало?
Так, что там с камерой, нормально?
Да.
Все, отлично.
Нет, ну просто цвет на камере поменялся.
Вот.
Значит, смотрите.
То есть у нас получается вот из вот этого, что из s-штрих.эс-доллар принадлежит адаматепсилон.
Ну, следовательно, closer от этого состояния.
Адаматепсилон.
То есть в одну сторону достаточно просто все доказалось.
Ну, нам нужно гарантировать, что когда мы делаем допустимую ситуацию для активного префикса,
что справа уже все раскрыто.
То есть как бы у нас вывод правосторонний.
У нас вывод правосторонний, поэтому когда мы раскрываем символ, у нас он должен быть уже раскрыт.
То есть все, что справа от него, должно быть раскрыто.
Вот.
Я это показываю, что справа на самом деле не что-то пустое, а что это пустое слово.
А там не s-штрих?
Где?
s-штрих.эс-доллар.
Нет.
s-штрих.эс-доллар.
Тут за ноль шагов по факту вывод идет.
Ну, там у вас s-штрих.эс-доллар.
Да-да-да.
А.
А.
Вот так.
Вот.
А.
А.
А.
Да.
Да.
И все, что до него, это как раз будет активным префиксом.
Он пустой.
Так.
Хорошо.
Значит, давайте двигаться дальше тогда.
Переход по обратную сторону.
И здесь нужно...
Да.
А.
Какую тряпочку?
Вот эту?
Там вода.
Да, тряпку в воде.
А.
Ну, давайте.
Главное, чтобы это не было потом.
Как говорится, кернлдампа не было после этого с доской.
Дампа-ядра, когда все, типа, на доске невозможно писать.
А?
Ну, это когда у вас это...
Да ладно, уехали.
Да ладно, Михаил у меня на группе был.
Ладно, давайте доказать вам другую сторону.
Значит, доказать вам другую сторону.
Значит, не поверите, индукция по длине вывода.
То есть, у нас, смотрите, мы понимаем с вами следующую вещь.
Допустим, у нас с вами...
А.
Стрелочка точка бета...
Прилежит Адам Атепсел.
Значит, я надеюсь, не надо пояснять, почему точка в левой части правила.
Не надо.
Потому что если бы точка была бы не в левой части правила,
то у нас бы уже активный префикс был бы не пустым.
Да.
Собственно, докажем утверждение, что...
А.
Стрелочка точка б.
Прилежит клоуже...
Стрих.
Стрелочка точка С доллар.
Как мы это будем доказывать?
Индукции, да.
Давайте я точно скажу даже, как.
Значит, смотрите.
Тогда мы, смотрите, что можем сказать?
Мы можем сказать, из-за штрих, да,
в какой-то момент времени у нас выявилось АУ,
да, и за один шаг у нас раскрывается...
Что?
Ой, я забыл символ С.
Да, пусть будет символ А здесь.
И здесь тоже будет символ А.
Значит, за какой-то один шаг у нас раскрывается следующий.
Вот эта штука в БУ.
Причем, смотрите, у нас получается, что А принадлежит фёрстату.
Так.
И индукция по этому параметру D.
База.
D равное нулю.
Тогда что у нас получается, когда D равно нулю?
Ну, это то же самое было.
Значит, у нас, смотрите, получается,
штрих за ноль шагов побывается АУ.
Следовательно, А это штрих, а У это эпсилон.
Ну, и тогда понимаем, что...
А поскольку у нас из-за штрих есть только одно правило,
которое выводит С.
Это единственное правило, которое у нас выводится в штрих.
Из этого будет следовать, что на самом деле бета это что у нас?
Бета это С.
Ну и что мы получаем с вами?
Мы получаем...
Да.
Получаем, штрих выводит...
Выводит S штрих эпсилон.
Выводит за один раз С эпсилон.
Да.
И получается, что у нас...
Так, а А это где у нас?
Да. А А это конец строки.
Вот. И мы получаем, что...
Точка бета А.
Это на самом деле не что иное, как S штрих.
Точка S доллар.
Угу. Логично?
Так.
Теперь переход.
Рубрика на бдительность наших, так сказать, слушателей.
Как мы будем вот оказывать?
Не, ну это понятно.
Какой факт на правой доске мы с вами будем использовать?
Нет.
Утверждение под номером 1 и 2 третьих. Утверждение на свойстве множества клоуза.
Мы как раз закончили на том, что в прошлый раз начали вы его использовать.
Итак, давайте мы с вами теперь сделаем вот такую вещь.
Начнем с того, что мы будем использовать.
Итак, давайте мы с вами теперь сделаем вот такую вещь.
Значит, распишем кое-что.
Смотрите, давайте мы посмотрим последний переход, который у нас был до этого.
Собственно, за D минус 1 шагов мы с вами получаем какое-то B.
Господи, сейчас главное не это.
Я сейчас символы какие-то напишу.
B гамма 1.
Дальше мы их раскрываем.
B у 1.
Дальше, за один шаг мы с вами раскрываем...
Что мы с вами раскрываем?
А, нет, стоп, туплю. У нас же правая часть уже раскрыта.
Всегда забываешь, что у нас правосторонний вывод.
Значит, B у 1.
Дальше, значит, смотрите.
За один шаг мы раскрываем какое-то A гамма 2 у 1.
То есть у нас есть с вами правило.
И дальше за какое-то число шагов мы раскрываем A у 2 у 1.
Которое в нашем случае это будет U.
И дальше за один шаг мы раскрываем B у.
Хорошо.
Значит, дальше у нас с вами получается следующее.
Вот это вот правило...
Чего? Посмотрите, что мы сделали.
Мы сделали следующую вещь.
Мы, собственно, сказали, что вот этот вот вывод, который у нас был...
Вот этот, из S в A у, он у нас за D шагов.
А дальше я говорю, что за некоторое меньшее число шагов...
Мы на самом деле получаем раскрытие правила B стрелочка A гамма 2 для нашей штуки.
То есть как мы смотрим первый символ, который раскрывал A.
То есть у нас здесь A.
Есть B, а это означает, что его раскрыл до этого какой-то другой символ.
Вот.
И мы говорим, что давайте раскроем вот это все до конца.
Ну да. Нам надо доказать индукционный переход сейчас.
Вот. Из-за как шагов это меньше.
Поэтому, значит, смотрите, что у нас получается.
Утверждение такое.
Да.
Значит, воспользуемся предположением индукции.
И мы получаем следующую интересную вещь.
Собственно...
Да.
Значит, B.
Значит, B.
Стрелочка.
Точка альфа 2 гамма.
Какой-то символ, который у нас еще не был.
B.
Давайте я вот для нотации обозначу вот это все дело за ку-ноль.
То есть ку-ноль это вот это.
Для сокращения.
Принадлежит ку-ноль.
Принадлежит ку-ноль.
Для любого...
Бета, принадлежащая ферст.
Вот. Смотрите.
Для любого ферста, принадлежащего...
Бета, принадлежащего ферста, тату-1.
Да.
Ну то есть это означает, что B это первый символ, который у нас выводился вот здесь.
Угу.
Так. Ну смотрите.
Тогда утверждение следующее.
Давайте посмотрим опять на нашу замечательную лему.
Которая была здесь.
Значит, что она говорит нам?
Что если мы берем, что для любого символа, который принадлежит ферста, тату, гамма, существует бета, принадлежащий ферст от гамма.
Бета, принадлежащий ферст от гамма у нас уже есть.
Смотрите, B, принадлежащий ферст, тату-1.
Да.
То есть и тогда нам нужно сказать, что вот такое вот свойство будет выполнено.
Да, давайте его искать.
Нам просто сейчас нужно построить клоузжи.
Вот. Значит, смотрите.
У нас с вами ситуация, которая здесь была, это альфа стрелочка точка бета-а.
Собственно, для того, чтобы сделать клоузжи, нам нужно следующее.
Нужно...
Значит, первое, что нам нужно, это а.
Стрелочка точка...
А, стрелочка бета, принадлежащая правилам грамматики.
А во-вторых, нам нужно...
А, гамма-2, точка бета, принадлежащая чему?
Нашему ку-ноль.
Да, ку-ноль – это замыкание.
Вот, и теперь смотрите.
Собственно, что нам нужно сделать?
Нужно...
А, гамма-2, точка бета, принадлежащая чему?
Нашему ку-ноль.
А что нам нужно сделать?
Нам нужно, чтобы вот это вот все провернуть, нам нужен элемент из ферст гамма-2 бета.
То есть нам нужно, чтобы получить замыкание, нам нужно ферст гамма-2 бета.
По определению.
Да?
А теперь смотрите.
Собственно, вот оно и получается.
Да, давайте.
Смотрите, давайте еще раз идея, как эти все факты доказываются.
Эти факты все доказываются таким образом.
Мы берем какую-то ситуацию, нам нужно получить, что какая-то ситуация получена замыканием другой ситуации.
Да.
Соответственно, чтобы у нас произошло замыкание, по определению, нам нужно получить нашим Garrett-1,
по определению, нам нужен первый символ относительно какого-то правила, то есть опять же, то есть вот у нас 1, вот у нас 2.
Соответственно, B-стрелочка гамма.c может работать только в том случае, если c у нас принадлежит ферста а2 а, то есть ферст вот этой штуки.
Только тогда мы можем делать замыкание.
Ну это для деревьев, там надо рисовать деревья и будет, собственно, понятно, что первый символ, который выводится после символа B, это должен быть ферст от а2а.
Вот, и как раз мы вот этот вот ферст сейчас еще и ищем с вами. То есть мы хотим с вами здесь сказать в нашем факте, что А будет лежать в ферст гамма 2б.
Ну, чтобы мы это сделали с вами замыкание. То есть если А, ферст от гамма 2б, то тогда что у нас будет, собственно, мы получим с вами следующее, что А,
стрелочка точка B, А будет лежать в нашем куноре по замыканию.
Собственно, а теперь смотрите, почему мы можем воспользоваться леммой. Потому что, собственно, нам нужно показать, что А принадлежит ферст гамма 2у1.
Давайте напишу так. Что, блин, где это будем написать? На камере видно?
А принадлежит ферст гамма 2у1. Вот, почему? Потому что это первый символ, который у нас выводится после раскрытия этого всего, после раскрытия вот этого правила.
А, стрелочка B, точка А. Да, вот он А. Это первый символ. Это по определению допустимого префикса.
Вот. То есть еще раз. То есть мы берем и аккуратненько расписываем. Мы берем A. Это первый символ, который выводится здесь.
Дальше смотрим. Ага, у нас B, первый символ, который выводится здесь. А значит с ним мы можем придумать правило, для которого производится замыкание.
Вот такая логика утверждения. То есть как бы... То есть берем вот это, ищем с чем замыкать, строим замыкание.
Так, давайте я спрошу, понятно или нет? Ну, приблизительно понятно. Вот, это доказывает нам факт. Вот, который нам нужен. Это наш Лебо.
Так, давайте двигаться дальше. Вы не против? Хорошо. Следующий факт, который будет заключаться в том, что мы с вами докажем два утверждения, которые здесь есть.
После прочтения слова, у нас с вами будет находиться некоторая последовательность всегда. Kujite. Такое, что Kujite равно адам от X1 и так далее и jite.
Для некоторого jite. То есть мы как бы говорим, что во время работы с анализатора, который мы с вами строим, у нас с вами будет находиться последовательность кужитов, которые будут как раз соответствовать адам от кужитов.
Слушайте, первый факт, я честно скажу, что он доказывает, если вы хотите слишком формально вот это все внедрить, просто берете индукцию по построению алгоритма.
Вот, который мы делали. Если у нас есть какое-то действие, то делаем go to. У нас добавляется ситуация на stack, у нас меняется активный префикс.
Если нам нужна операция reduce в нашем действии, то мы берем, выполняем операцию reduce и снимаем действие с stack. То есть это как раз идет из леммы нашего факта.
Главное, что нам нужно было доказать в этом факте, это база. База нашей индукции. База нашей индукции как раз формулируется вот этой леммой.
Поэтому эту часть мы не будем доказывать, а будем доказывать вторую часть.
Давайте назовем ее. Как она называется? Лемма 3, да, у нас? Давайте. Давайте лемма 3. То есть второй пункт мы с вами разберем.
Так, давайте мы как раз сейчас вот эту вот сотрем. Это, по-моему, нам уже... Не, пусть это будет.
Прямо вот эту часть.
Так.
Лемма 3.
Значит, утверждение первое.
Значит, во время...
Во время работы лироалгоритма, значит, первое.
Немножко переформулируем.
КУКАТЭ то
для любого джинни больше чем К
КУДЖИТЭ то
для любого джинни больше чем К
КУДЖИТЭ то
для любого джинни больше чем К
КУДЖИТЭ
это аддом от Х1 Хj.
То есть как бы все вот эти состояния, это допустимые префиксы.
Для определенного... для определенного действия.
Индукция делается.
То есть, опять же, помните, я показывал действие несколько минут назад.
Что типа, если мы делаем операцию шифт, давайте я вкратце расскажу тогда.
То есть, смотрите, допустим, у нас было, значит, КУДЖИТЭ, мы сделали переход А.
Соответственно, у нас на стеке получается КУДЖИТЭА ГОЛТУ от КУДЖИТЭА.
Это если мы делаем операцию шифт.
Да?
А что такое ГОЛТУ?
Аддом Х1 и так далее Хgта.
Кто мне может сказать?
Да, да, да.
Собственно, доказали первый факт.
Если у нас выполняется ретюз, то тогда нам нужно сделать следующее.
Собственно, тогда мы говорим, что у нас было, значит, Х1 и так далее Хлт.
И мы перешли по символу В.
Сделали ретюз по правилам В.
В.
Собственно, тогда у нас снимается правая часть правила по В.
Мы с вами находились в нашей ситуации, которая была вот эта вот Х1 и так далее Хлт.
То есть, вот это у нас КУЛТ.
Поскольку мы прошлись по этому правилу, то там было правило что-то точка бета.
Гамма точка бета-бета.
Соответственно, здесь есть оператор перехода по букве В.
Который сдвигает это состояние.
А, собственно, опять же, тут опять же мы пользуемся правилом перехода к луту.
То есть, мы можем использовать правила перехода к луту.
А, собственно, опять же, тут опять же мы пользуемся правилом перехода к луту.
То есть, как бы, смотрите, история такая, что вот база это была лемма.
Вторая переход в этом факте это терема номер два.
Которая мы с вами муторно доказывали уже, если считать суммарное время, то целую лексу.
Это, на самом деле, были самые сложные факты.
А теперь второй факт из этой леммы.
Давайте я даже назову лемма три точка два.
Лемма три точка два.
Значит, она заключается в следующем, что если после прочтения У
на стеке
есть
х1, так далее, хк, q0,
q1, и так далее, хк, qк,
то внезапно
х1, хк выводит слово У.
Ну, это буковки маленькие и большие.
То есть, мы берем путь в нашем автомате, мы переходим либо по терминалу, либо не по интерминалу,
мы переходим в состояние кукаты.
Вот, и смотрите, вот это самый основной факт, который нам нужен.
Мы говорим, что если у нас прочитается слово У на стеке,
если после прочтения У, давайте я напишу,
из эстедаин
на стеке есть q0, х1, q1, и так далее, хк, qк, то х1, и так далее, хк, и вот слово У.
Это, наоборот, это корректность.
То есть, с этим фактом мы с вами докажем корректность алгоритма LR.
То есть, вот то, что, грубо говоря, вот когда мы переходим с вами на стеке,
мы с вами гуляем, гуляем, гуляем,
и дошли в состояние кукаты.
Здесь, на стеке, у нас написано, было, вот наш путь.
Да, а со входа мы прочитали слово У.
Так, подождите, что на самом деле, из вот этого того, что пути,
возможно, что мы его еще не раскрыли, мы его не раскрыли,
мы его не раскрыли.
На самом деле, из вот этого того, что пути, возможно, что мы его еще не раскрыли,
во все возможные не терминалы, да,
но вот это вот как раз выводит наше слово У, которое мы прочитали из эстедеева.
Ну да, по факту.
Да, именно так.
Вот это нам надо доказать.
Собственная индукция по числу шагов алгоритма.
Собственная индукция по числу шагов алгоритма.
База.
Д.
Д равно нулю.
Что у нас на стеке?
А?
К у ноль.
Да?
Х1хк это равно епсилон.
Длина в алгоритме.
Смотрите, к у ноль вот наш путь.
Х1хк это епсилон.
У в нашем случае равно епсилон.
Да потому что мы ничего не прочитали.
Сглядит на епсилон, вот это епсилон.
Переход.
Переход.
Значит, смотрите.
Какое у нас последнее действие,
последнее действие, которое у нас могло быть в алгоритме нашем?
Либо shift, либо reduce.
Первый суть у нас произошел shift по типу уа.
Тогда смотрите, у нас получается следующее, что
хк в нашем случае равняется а.
То есть у нас путь с вами к у ноль х1,
к у 2 х2,
к у к-1,
а к у кт.
Так, смотрите.
А дальше у нас получается следующее,
что по предположению индукции,
то есть вот это у нас последний шаг.
По предположению индукции,
значит у нас с вами
х1,
хк-1
прочитало какое-то некоторое слово w,
которое было на входе.
До этого.
Ну отлично.
Тогда вопрос, что считывает у нас слово х1,
а так далее, хк?
Это слово уа,
ой, это слово ва.
То есть смотрите, что у нас произошло.
Мы делаем, у нас со входа прочитано слово w,
следующий символ а.
Мы говорим что? Мы снимаем его со входа
и кладем на stack.
Считываем букву со входа
и кладем эту букву в stack.
То есть вот это вот слово как раз
наше слово у, которое мы с вами хотели.
Да-да.
Это тоже самое ва.
То есть это первый шаг.
С редюсом чуть сложнее.
Да, where will be the last letter.
Как бы мы просто сделали переход
и в нашем автомате,
и считывание нашей слухбуква одновременно.
Так, переход.
Так, теперь второе действие
в переходе, это правило редюс.
Собственно, здесь нам нужно следующее.
Так, пусть последним шагом
была свертка.
По правилу вот такого
x-катая,
стрелочка
y-r.
Да, то есть у нас
как x-катая могла появиться?
Это либо как перенос,
либо как свертка.
Этого символа
x-катого. То есть у нас
ситуация такая.
Вот.
Мы находились здесь, мы передвинулись
здесь.
Хорошо. Ну тогда смотрите,
что мы получаем.
По предыдущему шагу
x1, так далее,
x-катая минус 1,
y1, yrt
выводит слово u.
Да.
А теперь смотрите, что у нас
получается. У нас получается
следующая вещь. Сколько мы с вами
символ прочитали?
Тогда у нас явно x1,
x-катая, в другой
случае
будет
тут немножко в обратную
сторону. Нам нужно сказать, что поскольку у нас
правила выводятся, да,
а мы осуществили свертку вот по
такому правилу,
свертка.
То есть это получается, что у нас
как раз есть правило.
То есть за один шаг
получили вот такой вот.
И из него мы вывели слово u.
Как бы немножко реверснуть надо.
То есть из-за того, что у нас вот это правило
получено по свертке, то из x1, x-ка
выводится вот это вот слово u.
Все.
Показали наш факт.
Ну, то есть надо просто мутерно
разобрать эти все вещи.
Теперь, как заказывается корректность
нашего алгоритма?
Что если алгоритм наш заканчивает
работу корректно,
то, собственно,
то слово лежит в языке.
Ну да, тут даже все проще. Смотрите.
Корректность.
Значит, что...
Когда мы говорим, что слово лежит в языке?
Наслаждайтесь.
А что,
когда мы говорим, что слово лежит в языке?
Ну, когда мы говорим, что слово лежит в языке,
давайте определимся.
Мы говорим тогда,
и только тогда,
когда у нас, смотрите,
вход уже пуст,
следующий символ
epsilon
конец строки,
то есть...
вход пуст, это,
да, синонимы.
Да, это синонимы. То есть следующий символ у нас доллар.
Да? И мы находимся
в ситуации
h3 х s точка доллар.
Ну а как мы в эту ситуацию попали?
Мы не вот так попали.
Что такое?
Что? q0?
Ну q0,
это замыкание,
там есть ситуация h3
х s точка доллар.
Собственно, не все замыкания его.
Это стартовое состояние в нашем алгоритме.
А теперь смотрите, а что у нас
на стэке тогда будет написано?
Если мы это обозначим q1,
то у нас написано q0
s q1.
А?
Не надо ничего сворачивать.
Это уже все.
Давайте посмотрим лему нашу.
Если после прочтения нашего слова
на стэке оказывается вот такое,
то вот это выводит
наш слово.
Вход пуст, значит, смотрите,
прочитали, думали в.
Прочитали в.
На стэке у нас такое, а значит,
по утверждению леммы 3.2
нашу выводится.
Вот мы и доказали алгоритм Euler в одну сторону.
Мы доказали с вами корректность
алгоритма Euler.
Ну что, как вам?
Ну да.
Старался максимально разъяснить все
тонкие переходы,
которых нет в конспекте.
Вот.
А?
Ну то есть если это конспектировать,
то это там не
4 страницы займет,
как это в конспекте, будет страниц 8.
Вот. Не бойтесь, на экзамене
это не надо будет все в этом.
В одном билете
рассказывать.
А?
Ну, нескольких, да.
Да.
Да. Можно и не строго,
но на таком уровне, что и я рассказывал.
Что?
Ну, можно, по крайней мере, идеи,
основные факты.
Ну, меньше.
Ну, это да.
Так.
Разобрались с полнотой, да?
Ой, с корректностью. Теперь давайте в обратную
сторону. Полнота.
Что если...
А, не, стоп.
Я опять
полноту с корректностью путаю.
Нет.
Полнота это означает, что
все, что распознается этим алгоритмом.
Да.
А полнота это обратное, что если слово лежит в
языке, то мы его распознаем алгоритмом.
Все.
Да, да, да. Все.
Так. Теперь основная лемма.
Для другого
факта. Так.
Это получается у нас будет лемма 4.
А это у нас
25 минут есть.
Ну, да.
Ну, то есть мы доказали, что если алгоритм
заканчивает работу успешно, то...
Ну, типа того. Теперь нам надо обратно доказать.
Ага.
Ладно. Короче, разберемся.
Да.
Сформулируем
корректно тогда.
На члеммах 4.
Итак, смотрите.
Если у нас
из э-штрих
выводится следующая вещь.
Х1 и так далее. Хк, тв.
И это выводят
у v.
Причем?
Какие конфликты?
А мы их не разрешаем. Мы говорим следующее,
что мы работаем только для тех громадей,
у которых нет этих конфликтов.
Да.
Мы говорим, что мы работаем только
с тем типом громадей, у которых нет
этих конфликтов.
Вот. Если у нас
обнаруживается такой конфликт,
мы говорим, громадька плохая, и идем
ее переделывать.
То есть мы говорим,
хк, тв.
Любое слово,
в чтении которого
нас не пересчитывает,
и ни разу не возникает
какой-то конфликт.
Угу.
Что если для такого автомата мы все
проделаем, то слово лежит в языке.
Вот мы доказали это.
А теперь если слово лежит в языке,
то будет существовать вывод
в этом автомате.
Так, то после прочтения
у нас теки,
у нас теки в какой-то момент,
вот важно, в какой-то момент.
Да, да. Ни шиф, ни редюс.
Да.
Хк, тв. То есть говорим
в следующем, что если у нас есть какой-то активный
префикс, то есть то, что находится
на автомате перед нас свертка,
то после прочтения нашего вот там,
вот этого слова на стеке,
у нас действительно будет какой-то активный префикс.
То есть раньше мы говорили, есть активный
префикс, и выводится слово у.
На путь в нашем автомате выводится
слово у. Здесь же ситуация обратная.
Нам нужно по этому слову у найти,
быть в автомате, да.
Ох, значит, смотрите,
тут сейчас будет тоже мутерное доказательство,
к сожалению.
А?
Ну оно полурукомахательное.
Значит, смотрите.
А?
Значит, смотрите,
делаем индукцию.
Тут я бы сказал, что это
доказательство
будет рукомахательным, если вы
не поняли, как работает предыдущая стадия.
Вот если вы поняли,
как работает предыдущая стадия, то оно
не будет выглядеть рукомахательным.
Просто смотрите, делаем
индукцию по длине у
и вывода
х1, это
по количеству шагов
в у.
Вот этот число, это параметр
нашей индукции.
Так, смотрите,
на счет базы индукции,
база,
да,
тут еще скорее
всю индукцию по параметру
рука надо будет брать.
Значит, база,
у равно
ε,
к равное
нулю.
Да? То есть смотрите, у нас
что получается?
У нас с вами получается следующая вещь.
То есть у нас у эксилон, а здесь
вот к равное нулю. То есть у нас получается
вывод наш такой,
что у нас
из-за штрих
выводится
εw,
сейчас, секунду,
да,
выводится εw,
вот, и утверждение следующее.
Тогда у нас существует активный префикс,
который выводит слово о.
Существует путь.
О, путь,
на самом деле, будет вот такой,
q0 в автомате. То есть мы
не прочитали никакого слова
исхода,
да, как бы, и нечего разбирать.
Да, кажется,
что за ерунда,
но,
типа, вот это важный переход.
Так.
Теперь, смотрите, переход.
Пере-ход.
Значит,
есть и два варианта.
Точно.
По длине вывода, x1, xcata.
Значит, смотрите.
Утверждение, что нам надо посмотреть
вот этот
вот вывод, да,
и посмотреть первый шаг.
Первый символ, который у нас будет раскрываться,
это вот этот вот символ.
Да, у нас вывод правосторонний,
поэтому вот этот символ будет первым.
И, возможно,
два варианта.
Вариант номер первый.
xcata равно a,
и второе
xcata равно a.
Логично, да?
То есть это либо терминал, либо не терминал.
Ну, давайте тогда, смотрите,
что мы с вами
можем сделать.
Значит,
xcata равняется a.
Тогда, значит, давайте обозначим
у равное
у штриха.
Ну, и тогда у нас, смотрите,
что получается.
У нас получается,
что из штрих
выводится
x1, и так далее, xcata
минус один.
Так,
xcata, xcata минус один.
А, в,
из которого выводится
у штриха в, который является у.
Ну, логично, буквы прочитали.
Как бы xcata это а.
Так,
а теперь, смотрите,
помните, мы с вами
доказали факт,
вот по
lemme3.1
то, что
префикс активного префикса
является
является
активным префиксом.
Ну, если,
значит, сложно это разобрать,
ну, то можно вывести
это.
То есть, префикс любого активного префикса
является активным префиксом.
Ну да, вот.
Поэтому, смотрите,
у нас получается, что есть
вот это, по предположению индукции,
у нас с вами есть вывод,
который
xt-t-t-t,
xc-1 выводит у штрих,
следовательно,
у нас есть путь q0,
x1, q2,
x2,
и т.д., qk-1,
ой,
xk-1, qk.
То есть, у нас существует такой путь,
ну, предположение индукции,
которое у нас тут имеется.
Нет, нет, нет. По лейме.
А?
Давайте напишем лейма 3.1.
Как? Используем лейму 3.1.
А?
Чё?
Ой.
Вот так.
Вот.
Вот. Всё, да.
По лейме 3.1 напишем здесь.
Вот. То есть,
главное, что префикс активного префикса
является префиксом.
Вот.
А давайте поймём, что такое активный префикс
из определения?
Кто помнит?
Да.
Ну, да.
Если точнее сказать,
что то, что может появиться
на стеке автомата перенос свёртка.
А это значит, что у нас
с вами существует
вот такая картинка,
что у нас с вами
считывается
x1, и т.д., qk, xk-1,
а дальше
у нас с вами
существует
значит, ситуация А,
здесь символ А,
и здесь какой-то дальше
бета. То есть, это я расшифровываю
следующее. Что такое
активный префикс?
Угу.
То есть, мы прочитали
с входа слова w
и следующий символ
А.
Следующий символ у нас
получается А.
И, собственно,
здесь существует
состояние, у которого мы
можем точку
расположить вот здесь.
Значит, у нас есть
вот эта вот точка. Мы находимся в состоянии qk-1.
Ой, мы находимся в состоянии qk-1.
Да?
То есть, это у нас go to
от q0 по x1, xk-1.
А это значит, что есть ситуации, в которых
точку мы можем задвинуть за А.
Что точка стоит перед ними
до обухлой А.
Так.
Кажется, мы тут
выпали еще разок.
В очередной.
То есть,
снова, да. То есть, идея такая,
мы находим вот этот вот активный префикс
за слово x1 и так далее,
xk, ta. Смотрим, собственно,
ситуацию, в которой мы с вами
находимся в этот момент времени.
В этот момент
времени мы получаем с вами, что
ситуация после А
стоит точка. Такая ситуация есть.
Да. То есть, тут смотрите,
в чем тонкий момент. Мы как бы пользуемся
доказательствами предыдущих пунктов.
Да. То есть, у нас есть такая-то ситуация.
Вот такая ситуация.
А как она могла получиться?
Она получается из qk-1,
в которой была ситуация
что-то там,
точка А, бета, там
С какое-то, тут гамма.
Да. И с нее
мы можем с вами сделать шифт,
получив ситуацию. Давайте.
А.
Стрелочка гамма А, точка Б, запятая
С.
То есть, мы с вами как раз
вот этот вот шифт
искали.
Ага?
Или не ага?
С это произвольный символ.
Ну, ничего не меняется.
Справа от вывода ничего
не меняется.
Так. Хорошо.
Ух.
Следующий пункт сложнее.
Нашли шифт. Теперь надо
надо откопать reduce.
Смысл того, что мы доказываем.
Смотрите, если у нас есть какой-то активный префикс
для разбора нашего слова,
то на самом деле
существует путь по автомате,
для которого как раз
разобран этот префикс.
То есть, мы собрали с вами какой-то активный префикс,
а вдруг мы его как-то собирали по-другому,
и он не отражается в нашем автомате.
То есть, как бы мы там
говорили, что вот из пути
в предыдущих фактах
мы говорили, вот у нас есть путь в автомате,
он выводит наш префикс слова.
А здесь наоборот.
Что у нас уже существует...
Да, они определяются для грамматики вообще.
Активный префикс определяется для грамматики.
Для произвольной.
Мы там не пользовались вообще никаким образом автоматом.
Мы просто сказали, что
эфемерный смысл активного префикса
это то, что может находиться на автомате переносвётка.
Так, давайте следующий факт.
Второй факт.
Смотрите, какой.
Да, будет.
Но это странно, до тех пор, пока мы не обнаружим
shift-reduce-conflict
и reduce-reduce-conflict.
Если мы их обнаружим, мы просто выкидываем.
Но это не идёт по конфликту.
Итак, значит, теперь, смотрите,
второй вариант, который у нас есть,
это x-катая,
это наш символ a.
Значит, что такое
x1, так далее,
x-катая выводит некоторое слово u
в правостороннем выводе.
Смотрите, это означает следующее,
что x1, так далее,
xk-1,
xk-t
за один шаг
выводит x1, так далее,
xk-1, y1,
и так далее, yr.
И вот оно уже вводит слово u.
Логично?
Логично?
Хорошо.
Тогда у нас с вами
это тоже будет являться
некоторым активным префиксом.
Потому что, собственно,
почему?
Потому что у нас опять же выводит слово x1,
так далее, xk-t.
И почему это именно активный префикс?
Потому что у нас y1,
которое у нас
с вами раскрывается,
является активным префиксом.
Как бы это объяснить?
Вот у нас
такая вот ситуация
возникает.
И на самом деле,
чтобы это получить...
Это может быть либо символ, да.
Да, и вот
и момент времени.
Ну да.
Можно так. То есть по факту
мы, если мы воспользуемся определением
активного префикса, то мы просто
можем сказать, что у нас
по факту мы уже все раскрыли,
все, что у нас находилось с правой части,
и мы как раз в этот момент времени
раскрываем этот символ.
То есть это по факту является активным префиксом.
Ну а тогда смотрите, у нас есть
с вами путь.
Следующий.
Все, тряпка улетела.
Даже тряпка устала сегодня у нас.
А это мы делаем
за меньшую числу шагов.
То есть смотрите, здесь это было
определенное количество шагов
до символа U.
А здесь мы уменьшили
количество шагов до вывода символа U.
То есть вот здесь именно у нас идет
индукционный переход.
По предположению индукции
существует q0, x1 и так далее,
qk, t,
x, k-1.
Я надеюсь опять не ошибся
с обозначениями.
qk-2.
qk-1.
q1, q1-.
y2, q2-.
И так далее.
yr, qr-.
Вот.
Да, да, да.
Да, да.
Да, да.
Да, да.
Именно так.
Вот. Собственно, а теперь смотрите.
Что у нас
происходит? Вот это у нас состояние
в нашем автомате.
Обращу внимание, вот
как оно записано у нас.
Как раз вот эти
два r символов
у нас.
Значит, теперь смотрите.
Что у нас получается?
У нас изо штрих выводится
xk, t, v.
Потом за один шаг
xk-1,
yr,
v.
Вот. А теперь
давайте вспоминать.
Собственно, смотрите.
Предположим, что есть
b, это first at 2.
Ой, b это first at v.
Да блин. v, v, v.
А b лежит first at 2.
Возьмем произвольный b, принадлежащий
частоту.
И вот тут катарс изменить
утверждение, что
xk, t,
стрелочка y1,
точка, точка, yr,
запятая b,
принадлежит at
x1,
так далее,
xk-1, y1,
и так далее, yr.
Все, катарс
снова.
То есть это чисто по определению
admissible множества.
Да. А теперь
смотрите.
Ой, смотрите. Мы с вами находимся
в состоянии QR-штрих.
Мы с вами находимся
в admissible множестве.
Точка при этом находится здесь.
Что мы сможем с вами сделать?
Так, ну куда шифку?
Мы можем сделать
редюс по вот этому правилу.
Он откатывается назад,
идет вперед.
То есть по дереву поднимается вверх.
Значит, у нас есть редюс.
И, возможно, вам на семинаре
это показывали уже, что
типа вот это вот зачеркивается
и пишется
xk-1.
Go to
qk-1, xk-1.
Все, мы доказали эту лему.
Нет, мы это не будем
делать.
Ну, как сказать?
Там есть один тонкий переход
между qk-1 и qk-1
на предсказаниях.
Там нужно
кое-какое другое множество вводить.
Здесь мы вводили по факту
admissible множество. Там более широкое множество
надо вводить и все аккуратненько
проводить.
Так. Теперь
доказательство полноты
или корректности, как мы
ее там называли, только в обратную сторону.
Вы не поверите, мы даже
успели вовремя.
Да.
Нет, я наоборот
считал, что
я это расскажу за час, но
прикидывал, что как раз
на полтора хватит.
Со всеми пояснениями.
Так.
Значит, теперь доказательство самого факта.
Полнота.
Итак, пусть
слово w лежит в языке
задаваемой нашей грамматикой.
Да.
Тогда смотрите, что у нас получается
с вами. Мы получаем
с вами, что
у нас есть вот такая вещь.
s-трих за один шаг
вводит s, и s
вводит w.
Собственно, мы добавили правила s-трих
вводит s, добавили символ w.
Раскрыли символ w.
Так, а теперь смотрите,
что у нас получается.
Тогда у нас x1, xk, t.
Это s.
Гениально, да?
А тогда у нас на стеке
существует q0,
s, q1.
Ой, а что такое q0, qs1?
В q0, s, q1 лежит ситуация
s-трих, стрелочка
с, точка доллар.
А после этого алгоритм
говорит акц.
Кохнуло.
Ого, нифига себе
его кохнуло.
Не выдерживает.
Все.
Да.
А мы это доказывать не будем.
Нет, вы тоже это не будете.
А данную загадку оставим
на официатель.
Так.
Нет, это для подготовки
до материала.
Так.
Тут скринкат свой обрывался.
Будет, только
ее нужно будет из двух частей сделать.
В общем, да тут уже
на самом деле на презентации
нечего было говорить, поэтому
я просто оставлю запись.
В общем, смотрите, мы с вами доказали
алгоритм, доказали его коррект
из работы. Ура, ура.
С некоторыми, возможно,
подводными камнями, но я постарался
сделать так, чтобы подводных камней было как можно
меньше. То есть, в сравнении с
оригинальным конспектом, я попытался
убрать практически все.
Практически все
непонятное.
Непонятное, да, нужно расставлять акценты.
Значит, смотрите,
в качестве такого упражнения
на понимание
LR алгоритма...
Нет.
Состоит следующее.
С моей группы
уже это разбирали.
Нужно понять, почему
грамматика, которая
корректно работает для LR алгоритма,
является однозначной.
Ну да,
надо доказать, что если у вас
все корректно построилось,
да, все...
Да,
смотрите,
на самом деле, если говорить
чисто неформально, давайте посмотрим
на первую ситуацию,
в которой у нас...
Давайте разберем.
Две минуты это делается.
Нет,
серьезно, делается
за две минуты.
Смотрите, предположим себе, что
у нас с вами
утверждение LR-1
грамматика однозначная.
Ну, по факту, да.
Я, возможно, просто
переформулировал. Представьте себе, что у нас
с вами в грамматике два разных дерева
вымода.
А что значит, что у нас с вами
два разных дерева вымода?
Два пути.
Это значит, что когда мы начнем
собирать нашу грамматику справа наверх,
снизу вверх,
да, рассмотрим
первый момент времени
в нашем алгоритме, когда у нас
с вами в классическом алгоритме
перенос свертка,
не LR алгоритма.
В классическом алгоритме перенос свертка
у нас произойдет свертка не по тому правилу.
То есть в дереве 1
у нас, допустим, будет свертка такая,
а в алгоритме 2 у нас
свертка будет такая.
Смотрите, тогда
что у нас получается? Здесь у нас с вами
следующий символ — это A.
Причем,
смотрите, мы доказали с вами, что
мы читаем по определенному активному
префиксу. То есть у нас на стеке
до этого момента активный префикс
совпадал.
То есть все действия до момента этого
совпадали. А теперь смотрите,
что происходит. У нас, значит,
в одном состоянии
мы можем сделать либо
shift по букве A — это второе дерево,
либо reduce по букве A.
Это первая картинка.
То есть в одном том
состоянии у нас есть shift и reduce.
Ну да,
тут есть разные варианты.
Да.
Либо у нас есть shift-reduce-conflict,
либо у нас есть reduce-reduce-conflict.
Да. Значит,
смотрите, теперь нам нужно будет
посвятить еще одну реакцию.
Знаете чему?
Наказать по всем точке
этого алгоритма.
Это линия.
Да. И этому
будем так делать через другую конструкцию,
которая называется детерминированный
МП-автомат.
Потому что, на самом деле, если подумать,
или алгоритм — это детерминированный МП-автомат.
Там нужно бесконечных циклов
избавляться и понимать, как...
Без нормальных форм.
Да, именно такие.
Классно.
Только при нормальной форме стоит клуб.
Ну, можно так,
но все равно хочется для любой грамотики это сделать.
Ну, это да, тоже было.
Главное...
Нет.
Главное, Out of Memory не схватить после этого.
Ой, плохая идея.
Плохая идея HDFS монтировать.
Как Slop.
У вас все диски отлетят сразу.
Это тут
локальный мем для третьего курса.
У вас будет это.
У вас будет это.
Ага.
Вот.
Говорит, знаю одну, знаю тройню, знаю третью.
Ладно, значит, давайте заканчивать на этом все.
Спасибо большое, что дослушали
и выжили.
Вот, в следующий раз уже будем смотреть,
наверное, другую тему. Немножко отдохнем
от нее и...
Потом уже переключимся
снова на МП-автомат.
Все, всем спасибо.
