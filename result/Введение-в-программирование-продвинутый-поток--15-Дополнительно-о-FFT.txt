Ладно, многочлены поделили, числа поделили.
Ладно, давайте попробуем тогда немножко размяться.
Итак, что еще можно вообще делать с перемножением многочленов?
Да, как я уже сказал, не именно с фурье, а скорее с перемножением многочленов.
Но начнем мы с такой маленькой разминочной задачи про дуэль.
Итак, представьте, задача заключается в следующем.
Два товарища очень любят стреляться на дуэлях.
Из пинбольных орудий, конечно.
Что болит?
Во-первых, если в правильной одежде, то нормально, а во-вторых, как всегда.
Если из какого-то вида спорта, то есть чего-то убрать в риск для жизни, то это превращается в вид спорта, где можно четверть финал, полуфинал и так далее.
Или потом в финале большой матч до пяти побед, я не знаю.
В общем, они очень это любят.
Но вообще теперь возникает вопрос. Что такое дуэль вообще?
Ну, конкретно в их интерпретации обычно это происходит так.
Значит, есть некий прямой отрезок.
У товарищей есть по одному пистолету в каждом пистолете один патрон.
В середине стоит барьер.
Они становятся спиной друг к другу.
Значит, расходятся на какое-то одинаковое расстояние.
Раз, сворачиваются.
И по команде секунданта сходитесь.
Собственно, игра начинается. Они идут навстречу друг к другу.
Каждый имеет право выстрелить в тот момент, когда он считает нужным.
Вы можете стрелять сразу, выстрелить когда-нибудь потом.
Если вас очень хорошо попали, то до вашего выстрела речь может не дойти.
Вот такая интеллектуальная игра.
Но товарищам очень хотелось это опробировать.
То есть они там у себя рядом с Черной Речкой нашли даже для этого дела идеально прямую аллею.
Длины 10 в пятый.
Да, ну как всегда, да.
Даже кривизна земли каким-то образом не помешала.
Ну или сантиметров, я не знаю.
Ну тоже сомнительно, сейчас увидите почему.
Она мало того, что идеально прямая, так еще и хорошо размельчена прям по метрам.
Вообще изначально планировалось засадить кустариками.
Через каждый метр тут какие-то кустарики посадить.
Но пока посадили не все. Где-то посадили, где-то нет.
Товарищи хотят устроить дуэль.
Думают устроить дуэль так, что барьер должен быть на какой-нибудь отметке.
И соответственно разойтись они должны на одинаковое расстояние тоже до какого-то дерева.
Но они очень любят дуэль, поэтому возникает вопрос, сколько различных дуэлей они могут...
Да, вполне.
Ну до разведки, на которой стоит куст, причем в обе стороны.
И они должны быть на одинаковом расстоянии. Вот такая вот задачка.
Вот спрашивается, причем тут SST?
Да.
Ну в общем-то это даже менее критично на самом деле.
Да, да, да.
Так, ну совершенно верно, да.
Что это было?
Рассмотреть. А идея очень простая.
Ну да, то есть действительно.
Чем отличаются дуэли с центром в позиции, скажем, в точке A?
То есть это какие-то дуэли типа A плюс X и A минус X.
Эти числа интересны тем, что их сумма не зависит от X, потому что их сумма равна 2A.
И теперь возникает такая идея.
А давайте действительно забабахаем многочлен.
Вот прям так и забабахаем.
Вот нам допустим АТ равно, ну в нашем случае будет T в четвертой, там плюс T в шестой,
плюс T в восьмой, плюс T в девятой, плюс T в десятой, плюс T, ну соответственно, в тринадцатой.
Видите, да?
То есть вот какая-нибудь такая приятность.
Вот.
И вот нам хочется, ну вот.
И теперь вот идея такая.
А давайте попробуем многочлен А умножить на сам себя.
Тогда что получится?
Тогда вот действительно давайте задумаемся, что у нас будет, например, при коэффициенте T в двенадцатой.
Но при Т в двенадцатой будет находиться, ну если тут коэффициенты назвать там A0, A1, A2 и так далее,
то что это такое?
То при Т в двенадцатой тут будет, например, A0, A12, плюс A1, A11, плюс A2, A10, плюс и так далее,
плюс там A12, A0.
Вот.
То есть вот такая скобочка.
Заметим, что каждое произведение оно вообще символизирует дуэль,
которая может быть с центром шестерки.
Ну правда, ладно, с оговоркой, без учета того, что там в этой шестерке есть единичка или нет, правда?
Причем более того, именно в такой терминологии вот A, T у нас понимаем, что либо произведение равно единице и дуэль возможны,
либо ноль, и она и ее нет.
Очень удобно.
То есть единственное, конечно, какие оговорки надо сделать?
Ну, во-первых, заметим, что каждая не тривиальная дуэль,
потому что заметим, что где-то тут на самом деле, на самом деле есть коэффициент А6 в квадрате.
Вот.
Но помимо этого коэффициента, то есть это коэффициент символизирует такую тривиальную дуэль,
то есть это дуэль через платок.
То есть в принципе тоже вариант на самом деле, когда вы там просто рядом стоите,
стреляетесь просто через платок,
только проблема в том, что только в одном из пистолетов заряд.
Да, то есть практически рандом.
Ну, то есть вы вытягиваете наугад.
То есть да, вот бы было такой вариант.
Вот.
Соответственно.
Но мы тут через платок не стреляемся,
но помимо этого слагаем,
и все остальные символизируют дуэль.
Причем у стена, она, как видите, два раза.
Вот.
Поэтому на самом деле, можно просто сразу сказать,
что если у нас при каком-нибудь Т в степени,
допустим, 2К оказался нечетный, допустим, коэффициент,
то значит, получается, это означает, что ТКТ было с единичкой,
в нем можно устраивать дуэли,
и количество дуэли, которые тут можно устроить, этот коэффициент пополам.
Вот.
Ну или можно было просто, конечно, проверить, перебирать все К,
скажем так, если вот в центре К можно устраивать,
то отберем коэффициент делим на два.
Так вот так.
То есть вот такая вот не сильно сложная задачка.
Вот.
То есть действительно, вот оказывается,
что если тут где-то что-то надо просуммировать,
то, скорее всего, все в порядке.
Вот.
Ну давайте, да, хочется сказать это,
давайте поднимем планочку,
но на самом деле следующая задача, в общем-то,
сильно сложнее не будет.
Смотрите.
Задача такая.
Ну вот.
По-разному ее можно формулировать.
Вот, например, я ее так,
чтобы, может быть, совсем запутать.
Вот представь себе, есть массив чисел.
Вот.
Абсолютно тут.
Какие сами все числа вообще отбалдаются.
Вот.
Значит, у нас есть трафарет.
Это вот какой-то такой массив
меньшей длины.
Ну трафарет, ну то есть это значит,
что где-то тут есть дырочки,
а где-то дырочек нет.
И когда я могу этот массив
наложить, как бы, на вот
в какое-то место большого массива
и увидеть в окошечках какие-то чиселки.
Вот. Я могу эти чиселки просуммировать.
Внимание. Вопрос.
А какие числа я могу
вообще получить?
Ну в том плане, что я могу этих наложить
вот сюда, сюда, сюда, сюда.
Там n-m плюс одно число.
Вот я все эти числа хочу получить.
Прям вот как последовательность.
Ну на самом деле, да.
То есть, действительно, тут мы введем
многочлен, формально говоря.
А, Т, равно, соответственно,
вот так и введем.
Значит, в данном случае
5 плюс 4t плюс
2t квадрат плюс 4t в кубе
плюс 3t в четвертый
плюс t в пятый
плюс 7t в шестой
плюс 5t в седьмой
плюс 6t в восьмой
плюс 8t в девятый.
Вот. А здесь,
а вот здесь мы сделаем хипрея.
А здесь, знаете, я даже
не буду разворачивать саму маску,
я просто многочлен нарисую чуть по-другому.
То есть, bt
у меня будет равен.
Сразу напишу.
0 плюс, значит,
t плюс t квадрат
плюс 0
на t в кубе
плюс t в четвертый.
Почему я нарисовал
именно в обратном порядке?
Потому что заметим, что
когда я буду перемножать
теперь a на b,
что у меня получится, тогда
при t в четвертый у меня будет
5, то есть смотрите,
5 на t в четвертый,
то есть 5 умножить на 1 плюс 4 умножить на 0
плюс 2 умножить на 1
плюс 4 умножить на 1 плюс 3 умножить на 0.
То есть ровно та сумма, обратите внимание,
которая нам нужна.
Вот, понимаете, да?
Вот.
То есть, видите, вот зачем, собственно, развернули?
А что будет
при четвертом, при
степени 4, окажется вот
ровно то, что будет, если мы приложим
сюда. А если мы хотим приложить
чуть правее, то тогда получается
будет тогда 4 на 1
плюс 2 на 0 плюс 4 на 1 плюс 3
на 1 плюс 1
на 0. Это будет тоже
то, что будет просто при пятом
коэффициенте.
Понимаете, да?
Вот. И так далее. То есть вот оказывается
действительно очень удобно. То есть на самом деле
задача могла быть сформулирована в виде,
что, ну, вот
и можно так сформулировать. Вот для массивов
двух одинаковой длины, вот двух массивов
одинаковой длины
существует такое понятие, как
скалярное
произведение, например, да?
Так что я не сказал расстояние хэминга, но это
не совсем, да? То есть просто, когда мы
просто кладем один
один над другим и прям вот
делаем такие, суммируем вот такие
попарные произведения, да?
А можно сказать, что давайте
вот у меня есть один массив, есть более маленький
массив, я его прикладываю везде и хочу
везде скалярное произведение.
Ну, как легко убедиться, ровно этим же
хаком, то есть мы это можем легко сделать.
Вот.
Да. То есть вот такая вот
действительно при...
Вот такая вот приятность есть.
Вот.
Так что, соответственно, да,
чуть-чуть поразминались.
Вот.
Вот.
Давайте, значит, еще
попробуем.
Что еще хочется сделать?
Ну, иногда...
Вот.
Так.
А, ну, впрочем,
если немножко
разминаться, то на самом деле тут есть
конечно еще чит, связанный именно с комплексными
числами.
Вот.
Но, правда, тут, к сожалению, еще придется
вспомнить, что такое FFT само по себе.
Да. То есть не как черный ящик,
типа, что у нас есть перемножение
многочленов.
А может, в общем, нам и повезет.
Вот. Ну, потому что
дело в том, что действительно сколько FFT
вообще обычно нам надо, чтобы перемножить
два многочлена?
Сколько раз там нужно
запустить там функцию, которая вычисляет
там...
Нет, зачем?
То есть не понятно.
Ну, конечно, три, да.
То есть у нас, помним, один преобразовали,
второй преобразовали, помните,
перемножили там по члену,
а потом применили обратно, которое свелось
к обычному.
Только там еще поделить на T и подставить там
другое. Ну, понятно, не важно.
Вот.
Так вот возникает
неожиданная идея.
Если вы... Чаще всего вы, наверное,
перемножаете все-таки не комплексные
многочлены, а действительные.
Правда?
А вот тогда...
Ну, вот.
А вот возникает такая задача. Смотрите. Вот если,
допустим, мы хотим перемножать многочлены
даже одинаковой длины,
вот прям вот, АТ
равно там, так и написать,
А0 плюс А1Т плюс
А2Т квадрат плюс и так далее,
Е плюс АН минус 1
на Т в степень Н минус 1.
И B от Т.
Значит, у меня там B0
плюс B1Т плюс B2Т
квадрат плюс и так далее,
плюс BН минус 1 Т в степень
Н минус 1. Даже для веселья
пусть Н еще и степень 2.
Вот.
Вот. И мы как...
Как устроено перемножение? Мы делаем FFT для этого,
FFT для этого,
ну и там перемножаем.
А теперь возникает вопрос.
Смотрите. Возникает такая идея.
Давайте введем такой интересный
многочлен, я даже вот D от
Т назову,
который будет равен
вот А0 плюс B0
на И, где И там не моя единица,
а не то, что вы подумали.
Хотя, скорее всего, вы именно это и подумали.
А что такое не моя единица?
Ну...
Ну индекс.
Как...
Как это называется? Что такое рота?
Рота? Ну рота!
Ну под носой.
Ну вот шо?
В роту входит 150 человек.
Так.
Так.
Вот.
Ну вот.
Вот хочется взять
и, ну то есть
действительно сказать, что вот взять просто
многочлен, который в действительной части написан
многочлен А, а в мнимой части многочлен
B.
И...
Ну вот. И соответственно
запустить, так сказать, FFT
от D от
Т.
Вот внимание и вопрос.
Можно ли по...
Вот теперь задача.
По FFT
от D от Т, то есть по этим корням,
восстановить FFTшки
для многочлена
А и многочлена B.
Да.
Да.
Да.
Да.
Да.
Да.
Да.
Ну хотела, да. Нет, в принципе, да.
Как всегда, конечно, да.
То есть вылить воду из чайника,
конечно, действительно
это конечно здорово.
Но нам, конечно, хотелось, чтобы лишних FFT
больше не делать.
Давайте.
Ну у нас будут такие штуки,
как D от единицы,
D от...
Так. Как у нас там буква
называлась? Да, господи, вот так
оно называется. D от W
в квадрате и так далее.
Напоминаю W от W
в степени n-1,
где Wn равно
вот этот вот комплексный корень
на степени из единицы. Вот этот вот.
Да, вот у нас откуда-то взялся.
Давайте попробуем из этого
вычислить от единицы.
Но это очень легко. Так.
А от единицы каким образом?
Ну, забить
на воображаемую часть
и оставить только настоящую.
Вот. Да, но на самом деле
ну как? Не совсем так.
Хотя
это правда, да.
То есть мы замечаем, что эта штука на самом деле
равно тупо A от единицы
плюс B от единицы
умножить на I.
Да. То есть поэтому
конкретно для
нуля действительно вы это без труда
сделаете. А вот дальше
я боюсь так халявно вы уже
не проскочите.
Ну давайте посмотрим.
Ну давайте
посмотрим. Ну давайте попробуем
для начала в явном виде пописать.
Давайте сравним усилия.
Так D от Wn в степени g.
Это что такое?
Ну, формально говоря,
по определению, это я просто
перебираю все коэффициенты и говорю, что
это DkT
на Wn
в степени g
умножить на k.
Вот. Согласны, да?
Ну вот. Как говорится, это похоже.
Ну или если прям более точно
расписать.
Вот они еще там спрашивают, зачем я каждую неделю
маркеры беру.
Так.
Ну вот. То есть на самом деле получается
можно расписать так. Я вот даже
сразу распишу вот так.
Значит akTWn
в степени gk
плюс i на
n-1 bk
Wn
в степени gk. Да, на этот раз эти
числа уже глубоко комплексные, поэтому
просто так мы друг от друга не отличим.
Но тем не менее.
Вот.
Ну а теперь давайте
вот.
Ну действительно. То есть
какая тут
идея? То есть очень хочется
например, чтобы узнать вот эту h,
то есть вот эту вот часть.
То есть хочется убить эту часть.
То есть в принципе нам бы помогло,
если бы у нас вот
получилось то же самое, то только тут
бы стоял не
допустим знак плюс, а
знак минус.
Найти такую же
штуку.
Ну если бы у вас было
тоже, вот такое же
число, только тут знак минус.
Да, дополнительно.
Конечно, да.
Да, если и то и то, то да, то мы там
складываем пополам.
Вот. Ну а с другой стороны действительно.
Откуда же нам их
взять?
Ну на самом деле что нужно сделать, чтобы плюс
и заменился на минус и?
Конечно же взять сопряженное.
Вот.
Вот давайте. Если мы о этой штуке возьмем
сопряженное, то получится
что?
Ну давайте
посмотрим какая.
То есть берем сопряженное.
Ну получится понятно, что
ладно, сопряженная сумма это сумма
сопряженных, сопряженное произведение
сопряженных, да, это все знают.
А сопряженная действительного числа равна
самому действительному числу.
Поэтому получается примерно следующая штука.
Значит АК, сопряженная
WN, вот в этой мистической
степени.
Минус и
на сумму
значит BKT
и WN
в степени ЖК.
Вот.
Теперь вот внимание вопрос.
А чему у нас
равно сопряженная WN?
То же самое, только степень с минусом.
То есть на самом деле
можно заметить, что это равно
то есть можно так написать, что это равно
А от WN в степени
минус Ж
минус И
В от WN
в степени
минус Ж.
Но правда, смотрите как интересно.
Ведь дело в том, что у нас на самом деле
будет что-то похожее, на самом деле уже есть.
Ну да, потому что WN в степени
минус Ж
то же самое, что WN в степени
N минус Ж.
Ж равно нулю мы даже не рассматриваем,
потому что мы уже его рассмотрели.
Так.
Но что же у нас тогда будет?
То есть в принципе да,
если тут написать, что это равно
действительно A от
действительно WG
плюс I на IB
на WN в степени Ж.
Но правда мы замечаем, то есть очень хочется
рассмотреть такую штуку, как WN
в степени минус Ж.
Чему она равна? Она равна
ну A от
WN в степени минус Ж
плюс I на
B от WN в степени
минус Ж.
Но к сожалению,
если прям честно писать,
честно подставить вместо Ж минус Ж, то
как бы непонятно с чего там взялся минус.
Так что к сожалению, пока
действительно не все так хорошо.
Вот, тупо это.
Вот.
Так.
Но тут
мы действительно
вот, то есть
вот.
Но теперь давайте смотреть.
Но тогда давайте попробуем наоборот.
То есть раз WN минус Ж
равно тому, то
сопряженное к нему
равно
чему оно равно?
Ну оно равно,
на самом деле, так как у нас A это
многочисленность с действительными коэффициентами,
то получается A от
сопряженного к WN минус Ж
минус I на
B на WN в степени
минус Ж сопряженной.
Вот.
Но сопряженное
к WN в степени минус Ж
это в точности WN в степени Ж,
как мы уже узнали.
Значит,
D от WN в степени Ж
то есть оказывается нам надо
просто взять,
то есть если мы рассмотрим D от WN
в степени Ж
и D от WN в степени минус Ж
и возьмем к нему сопряженное,
то есть просто
минимую часть на минус единичку
домножим,
то оказывается у нас есть число
вот это
минус это
и есть число вот это плюс это.
И тут посложу, у меня получится 2A
от WN в степени Ж.
Все, делим на 2,
получаем A, ну и потом соответственно
и B.
То есть вот такой
оказывается приятный лайфхак,
который позволяет вам
разделить,
вот, позволяет вам разделить,
короче.
Шо?
Были некоторые где-то источники,
в смысле, что мы
очень хорошо замяли вопросик
с тем, что когда мы
доделали приятный лайфхак, мы как бы забиваем
на минимую часть, потому что она скорее всего
немного замешалась
и оставляем как
действительно ее тоже округляем.
А вот здесь как бы
с точностью 2 раза больше
стало. Нет, мы не совсем
заминаем. Мы не замярием,
мы сказали, что у нас есть
такие данные, которые говорят, что если коэффициенты не
превосходят 10 в 11 и 10 в 12,
то это по точности работает нормально.
Вот, то есть это просто
такой практически факт.
То есть на чуть больше, ну вот
да, проблемы.
Ну вот, ну и здесь на самом деле
примерно тоже, то есть возможно где-то
ну, то есть там
под 10 в 11
думаю, это нормально работать будет.
Вот.
Так что да, есть вот такой
маленький приятный лайфхак.
Лайфхак чек.
Так, ну что, остались у нас еще
остались, какие у нас еще мелочи
остались?
Ну да, ладно, мелочей видимо не осталось.
А, хотя нет, оставь.
А, нет, ну конечно.
Значит, смотрите,
что еще есть.
Ну, на самом деле, конечно, в какой-то момент
да, может быть, конечно, очень красиво было,
конечно, на этом
и закончить.
Но все-таки не будем. Да, вот.
Вот, да, вот. Большой у меня соблазн, конечно,
оставить эту мелкую задачу на самый-самый
конец, то есть
конец четвертого севинара, потому что
я думаю, сегодня мы с Фурье уже закончим.
Вот.
Так.
Но мелкая задача будет такая.
Нет, ладно, оставлю наконец.
Нет, не могу.
Ну, просто
она объективная.
Просто знаете, как-то по закону хорошего
закольцованного произведения эта задача
должна стоять в конце.
А пока же мы, давайте
повеселимся
с более такой приятной задачей.
Казалось бы, да, многочленов тут, казалось бы,
не будет, а будут
линейные рекурренты.
А именно, давайте вот представим себе,
что у нас есть рекуррента вот такого
вида. A и плюс N
равно.
Значит, чему равно?
Значит, C0 A и T
плюс C1 A
и плюс A1.
Нет, лучше K, кстати, вот так.
Плюс C2
на A и плюс 2.
Плюс и так далее.
Плюс Ck-1
на A и плюс K
минус 1.
Ну, где, понятно, I равно 0,
1, 2 и так до бесконечности.
Ну и, соответственно, понятно, что она
инициализируется какими-то вот A0,
A1, A2 и так далее.
А там
допустим, K-1.
Ну, если вы самый первый
коэффициент K знаете, то вот следующие
определяются вот таким вот образом,
где C это вот какие-то
заданные, раз и навсегда, коэффициенты.
Вот.
Так вот, мистическая
задачка.
Найти
А от М.
Вот такое вот
неожиданное БУ.
Вот, да.
Ну, естественно, тут, конечно,
правильный вопрос, а какие ограничения?
Потому что может быть
просто за M на K его честно
и вычислить.
Но, естественно, мы потребуем от себя
чуть побольше.
Как минимум, мы потребуем, что
N у нас может быть в 10, 18.
Вот.
Не-не-не, у нас
все по какому-нибудь хорошему модулю.
Ну, тут мы, как всегда, можем
уговориться, что, во-первых, можно сказать, что у нас
очень хороший модуль, вот тот самый
фурьешный, да?
Это с одной стороны.
А с другой стороны, правда, заметим, что
если у нас надо делать умножение
по нефурьешному модулю,
то, на самом деле, его, скорее всего,
будет легко свести к умножению
по двум-трём обычным.
Вот такие фурьешные модуля.
Нет, ну, смотрите.
Нет, ну, смотрите.
Нужно для того, чтобы сделать FFT
по модулю, скажем, 10, 9, плюс 7.
Но, по-хорошему, для этого просто надо взять
один нарэксен, второй нарэксен, тупо,
можно их тупо перемножить, а потом все коэффициенты
взять по модулю миллиард 7, правда?
Ну, почему не сработает?
Нет, ну, конечно,
по модулю того, что числа 10, 24
у нас не хранятся,
на самом деле, почему бы
ему и не сработать?
Вот.
Значит, идея,
на самом деле, следующая.
Вот. Ну, да,
то есть, конечно, да, 10, 24 это, конечно, может быть
многовато, но тем не менее. Значит, идея такая.
Значит,
как сделать адекватный FFT?
Ну, идея такая. То есть, пусть у нас есть какие-нибудь
модули типа там P1,
допустим, P2 и P3,
все примерно
10, 9, и они
достаточно фурьершны.
Ну, то есть, помните, вот это
вот все там 1, плюс там
что-то там на 2
в адекватной степени, да?
Помните? Ну, обсуждали.
Ну, так вот.
Но заметим
следующее, что мы знаем,
что если мы произведем перемножение
этих многочленов вот по этим
трем модулям,
то, в принципе, мы по китайской теории
об остатках можем восстановить и сами результаты,
потому что, раз тут все числа изначально
не превосходили 10, 9,
и тут, и допустим,
там у них тут n не превосходило,
ну, там, как всегда, 10,
допустим, 6,
то тогда мы замечаем, что
если тупо перемножить эти многочлены,
то тогда у нас коэффициенты
не будут превосходить.
Чего они у нас не будут происходить? Давайте посчитаем.
То есть, там каждое произведение
это 10, 18.
Нет, почему в 15?
Смотрите, тут 10, 9 на 10, 9
каждое произведение
и в каждом коэффициенте
суммируется 10, 6.
10, 24.
Не совсем я отбалды это число взял.
Так.
Хорошо,
говорим мы.
Но тогда, смотрите, если вы знаете,
но я утверждаю, что если у вас число не более
чем 10, 24, и вы знаете
его остаток отделения на p1, p2
и p3, 10, 9,
то тогда я утверждаю, что по этим данным вы
вот это число можете восстановить однозначно.
Понятно это все.
Китайская теория об остатках, там дальше уже
либо диафантовое уравнение,
либо еще какая-нибудь красивая математика,
потому что были какие-то красивые
эти штуки, что там x в степени p2
на степени p1-1.
Там что-то такое,
там плюс
x2,
какие-то такие формулы
возникали.
Соответственно,
восстановить можно.
Так, надо подробнее.
Ну вот, что-то подобное.
Ну там, ладно, то есть там про малую
фирму вам, наверное, нет смысла рассказывать.
Ну вот, собственно, да, у вас есть
УКТЧ, господи.
Так что думаете вы.
Ну понятно.
Ну ладно.
Ну да, логично.
Ну вот.
Так что, в принципе, на самом деле,
если вы делаете умножение даже по обычному модулю,
на самом деле, можно подобными лайфхаками
попытаться это сделать, типа,
и свести к умножению по обычному. Правда, их
формально говоря, их несколько, но
как бы, если...
Но, пока ими, это n-логи.
Так вот. Ну, короче говоря, ладно,
мы тут не будем замарить, я говорю, что вот у нас
m1018, да, естественно, вся эта рекуррента
этого читается по какому-нибудь модулю,
может быть, желательно, фугешному.
Даже.
То есть, поэтому, да, поэтому у нас там ответ
длинным не будет.
Ну вот, внимание, вопрос.
Как же нам его найти?
Ну, тут, наверное, надо
расти постепенно, поэтому давайте
так, разминочка, k равно 10.
А чем тебе k равно 2 легче,
чем k равно 10?
А, да?
Да ладно.
Я не знаю, по-моему, если там начнешь
решать квадратный уравнение, рассматривать все
случаи, тебе будет больно.
А уравнение 10-й
к степени ты не начнешь решать, в принципе.
А уравнение 10-й к степени
ты не начнешь решать, в принципе.
Так.
Ну, какие варианты?
k равно 10.
Какого?
Элементарно, смотрите.
То есть...
Это да.
Правда, она не элементарно единичная,
но...
А, да?
А.
Не, ну это уже интересно.
Хотя, как известно,
смотрите, доказательства. То есть терема
в матемае
не интересных натуральных чисел нету.
Доказательства.
Так, предположим, что это не так.
Тогда, среди неинтересных натуральных чисел
найдется минимальное.
Посмотрим на него. Интересно.
Да.
Потому что, да, в натуральном, да, в любом подмножении
натуральных чисел найдется минимальное.
В любом бесконечном.
Просто возьмем первое
попавшее число и заметим, что либо оно минимум,
либо минимум кто-то, кто меньше его.
А кто-то, а кого-то...
Да, это важно.
Для целых это да.
Для целых числа могут быть неинтересными, да.
А натуральные нет.
Так вот. На самом деле
можно попытаться придумать матрицу,
чтобы было верно вот такое вот
равенство.
Ага.
Так, совершенно верно.
Да, давайте так и напишем, да.
Тут С, как получается,
К-1,
К-20,
К-20,
К-20,
К-20,
К-20,
К-20,
К-20,
К-20,
К-20,
К-20,
К-20,
К-20,
К-20,
К-20,
Там вот ноль, там ноль, ноль, в общем, что-то такое, вот, ну и вот тут везде ноль, да?
Вот, то есть чем приятна эта матрица? Она приятна тем, что она не зависит от И.
Только от С-шек зависит. И тогда мы замечаем, что если мы хотим тут столбезы, чтобы вот тут было АН-ное,
да, то есть я могу, например, так сказать, что А и там Н плюс К минус 1, там и так далее АН-ное.
Это равно теперь М в степени Н на вот эту вот А0, А1, там и так далее, АК минус 1. Ура!
Вот. И теперь, то есть все, что вам остается, это возвести эту матрицу с помощью быстрого возведения в степень,
там, в Н-ую степень и домножить на этот вектор. Все. Можете возводить даже если там не в Н-ую степень,
а в Н минус К какую-нибудь там, но это уже мелкие детали, принципиально ни на что не влияющие.
То есть более того, такое решение работает даже не столько для карабно 10, сколько даже там карабно 100 вполне подойдет.
Вот. То есть ну формально, конечно, да, может быть, если вы умеете уменьшать матрицу там этими там
Копперсмитами, Виноградами за Н в степени 2.2354, но этот, который улучшенный способ за там предыдущего мета за Н в степени 2.23881.
Ну да. Вот. Не значит, то может быть и быстрее, хотя сомнительно они так сами сомневаются, что это прям на практике прям так круто работает.
Вот. Не важно. Но, конечно, да, это такое базовое соображение, то есть, конечно, да, в некоторых динамических программированиях это нам тоже пригождается.
Ну что делать? Ну вот. Но теперь, значит, попробуем все-таки повысить планку.
Давайте скажем, что все-таки К у нас приблизительно 2000.
Да, сразу скажу на самом деле. Что?
Ну да. Но нам хочется быстрее. За сутки. За сутки, да.
Ну почему? Как квадрат логарифом нормально?
Нет. На нее-то можно, но если я возместив квадрат, она уже будет не красивой.
Это правда. Это правда, да.
Ну окей. Но на самом деле тут, честно скажу, лучше думайте сразу в другую сторону. У нас все-таки лекция про фуриарий, про матрицу.
Поэтому есть подозрение, что вам должно помочь FFT.
Да? Закем?
Короче, план такой. Решение будет выглядеть либо как возьмем FFT от A в FFT от C и перемножим их типа A0 на вот то, что оказалось в FFT от A,
на то, что оказалось в FFT от C на 10 и 18, ну на FFT или не N.
Короче, что-то похожее работать будет. Возьмем быстрее образование FFT от массива A, от массива C.
Дальше, по сути, давайте сначала попробуем взять просто эксклярное произведение.
Давайте.
Получим то, что нужно. А теперь это не эксклярное произведение, а то, что в нулевой чеке, на то, что в нулевой чеке другого, в степени N.
Так, нулевой... чего?
У нас есть два массива, которые получились после преображения. В нормальном случае мы бы просто взяли их эксклярное произведение.
Ну, взяли бы. А мы что сделаем?
А теперь мы берем то, что в нулевой ящике, по ящикам умножаем то, что в FFT от A, на то, что FFT от C в степени 10 и 18.
И что? Чем это помогает?
Нет, не должно, иначе бы камеры упадут.
Ну, я тут тоже. Может, я, конечно, занизил ограничение, чтобы усложнить задачу, как это часто водится.
Так, нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Нулевой ящик.
Не понятно.
Да ладно.
Ну хотя, смотрите.
Чего-то вы сыты.
Чего-то много.
Не понятно.
Так, это не понятно.
Я же не знаю, что это такое.
Это не понятно.
Потому что это не похоже на классическими атомными алгоритмами.
Ну почему?
А как насчет...
Ну не знаю, потому что тут могут возникнуть ассоциации с таким комбинаторным алгоритмом как LCA.
Да, у меня не может.
Нет?
А двоичными подъемами?
У меня тоже не может.
Нет, ну просто вот, идея на самом деле такая.
Идеи не одного дерева.
Да, то с другой стороны, смотрите.
Ну вот.
Ну или какая-то такая ситуация.
Чтобы возвести их число в степень 2n, что нужно?
Возвести его в степень а2 и в квадрат.
Ну, например, да.
Вот.
Ну и здесь, на самом деле, можно попытаться заметить,
что если вы там хотите посчитать какое-нибудь число а2н, да?
Вот, чтобы...
Если вы умеете считать число аn,
то, наверное, вы умеете считать число 2n.
Не умеете.
Не умеете?
Вот.
Но, смотрите.
Начнем тогда вот с чего, смотрите.
Вот вы умеете считать, допустим,
и плюс катое число
через такие коэффициенты, правда?
Но я утверждаю, что на самом деле
существует...
Что можно записать еще так,
что а и плюс ка плюс первое
будет тоже равно,
вот так я напишу, c0,1.
Значит, а и т
плюс c1,1,
а и плюс первое.
А сейчас скажу.
Сейчас допишу и сейчас все скажу.
Нет, если что,
1 это не степень, это индекс.
Как вы уже догадались.
Просто я утверждаю,
что можно подогнать вот такие коэффициенты,
чтобы
я через вот
ка, идущих подряд ашек,
вычислял не следующую ашку,
а как бы через одну.
Вот. Собственно, даже понятно,
откуда я ее возьму, да?
Ну, понятно, что я это запишу
через и плюс один и плюс ка, потом и плюс ка подставлю, да?
Но заметим, что я так могу, в принципе,
и плюс ка плюс два
подставить, правда?
Да, но
пока это просто
математический факт.
Я могу ввести такое понятие,
как
вот, то есть
такие коэффициенты, как c0,
ну, допустим, ладно, давайте
букву m
возьмем.
Вот могу взять вот такую штуку.
С, допустим,
k-1m.
Вот. То есть, существуют
такие штуки, что
на самом деле для любого и
будет верно, что а
значит и плюс ка плюс
м
будет равна
c0 в степени m.
Значит, как там
было? Значит, аит
плюс c1mt
значит аи плюс
первая, плюс
c2mt значит
аи плюс второе, плюс
и так далее, плюс
ck-1n
значит а и плюс
k-1.
Вот.
То есть, пока у нас получился такой
математический факт, что просто такие коэффициенты
вот существуют.
Вот, понимаете, да?
Вот.
Так вот, но фишка, ну вот,
и в принципе я неплохо был бы их найти,
потому что если мы вот, допустим,
н-ные такие коэффициенты найдем
для какого-то n,
ну там, научимся
искать, то соответственно там соответствующие
н-ные числа мы тоже найдем, правда?
Вот.
Но для этого мы вот о чем
подумаем. Так вот.
А.
А почему не для каждой
и свои cm?
Ну вот так вот. Ну давайте, да,
давайте аккуратно распишем, значит.
Откуда они вообще берутся?
Значит, как вообще получить
там, ну как, ну понятно,
как их вообще получить?
Как вообще вот c1 коэффициенты получить?
Ну получается они очень просто.
Дело в том, что вот аи плюс k плюс 1
равно, ну если вот прям в тупую
изначально расписывать,
вот, плюс 1, плюс
c1, аи плюс 2, плюс
c2, аи плюс 3,
плюс и так далее, плюс
c, k, минус 1, а
и плюс k
минус 1.
Фу, уро, и плюс k. Разве?
Ну теперь заметим, вспомним, что у нас
и плюс k чему-то равно, правда?
То есть это можно написать так, что c,
это я пока тупо переписываю,
плюс c1, значит,
аи плюс 2, плюс
и так далее, плюс c,
значит, k, минус 2,
аи плюс k, минус 1,
плюс
c, k, минус
1 на, а вот здесь
мы и плюс k вспоминаем, что это равно c0,
значит, аи плюс
c1, аи плюс 1,
плюс и так далее,
плюс c, k
минус 1 на, а
и плюс k, минус 1,
ура.
Теперь я могу это тупо
перегруппировать
и у меня получится примерно
следующее, значит,
c, k, минус 1, c0,
значит, аи т, плюс
там, c0, плюс
c, k, минус 1,
c1,
аи плюс
1, да, плюс там
значит, c1, плюс
c, k, минус 1
на,
c2, а, и плюс
2, плюс и так далее.
Вот.
То есть, собственно, именно эти коэффициенты
я теперь могу просто объявить как
c0, 1, c0, 2 и так далее.
Вот в чем идея.
То есть, более того, заметим, что
как бы да, я сделал это на один шаг
вперед, но если бы у меня тут было и плюс
2, плюс m, я мог бы просто делать
ту же самую процедуру, только
много раз.
М раз.
Но, конечно, хотелось бы
эти коэффициенты выкапывать
чуть-чуть побыстрее, очень сильно.
Как же мы это будем делать?
Ну, идея будет
у нас заключаться
в следующем.
Смотрите.
Давайте попробуем выкопать,
то есть, мы научились вот этим,
вот подобной махинации
аналогичной мы можем
по коэффициентам порядка m
получать коэффициенты порядка
m плюс 1.
Срасно, да? Пока все просто.
А теперь идея такая.
А давайте попробуем
из m
получить
2m.
О, пустая доска, классно.
Вот.
Как же мы это сделаем?
Ну, давайте просто
самым-самым-самым
тупым образом это напишем.
Значит, a и плюс k
плюс 2m.
Это что такое?
Ну, мы знаем, запишем
через m, вот пусть мы знаем
м т коэффициенты, тогда мы можем
так и написать, что это равно,
к чему это равно.
Вот, соответственно, это равно
c0mt на a
и плюс k плюс mt
плюс c1m
a и плюс k
плюс m
плюс 1.
Там, плюс и так далее,
плюс cmk-1.
Значит, a...
Так, стоп.
Нет, не так.
Вот здесь
колени.
Да, вот так.
Вот.
Вот теперь хорошо.
Вот теперь хорошо, вот теперь
получается.
k и плюс m
и плюс m плюс 1.
Тут и плюс m плюс 2.
Ну, тут как раз и плюс
и плюс k минус эти.
То есть, видите, мы одну m-ку как бы
убрали.
А теперь заметим, что каждую
из наших мы тоже можем расписать
через те же самые коэффициенты, правда?
Видите, да?
Что получится?
Получится. Значит, давайте смотреть
внимательно. c0m на
c0m
значит a и t.
Видите, тут не просто
a и t, тут a и плюс mt, да?
Тут вот плюс...
Вот. Значит,
a и t плюс c1m a
и плюс 1.
Плюс c,
значит, это 2m a
и плюс 2.
Плюс и так далее.
Плюс c k
минус 1m.
Значит, a и плюс k
минус 1.
Палюс.
Значит, c1m
на
c0m
a и плюс 1
плюс c1m
a и плюс 2
плюс c2m
a и плюс 3
плюс и так далее.
Плюс c k
минус 1m
на a и плюс k.
Видите, да?
Вот.
Плюс.
Ну, давайте все-таки так.
Для чуть большей красоты
я тут на один лишний напишу.
Значит, c0m a и плюс 2
плюс c1m
a и плюс 3
плюс c2m
a и плюс 4
плюс и так далее.
Плюс c k
минус 1m
a и плюс k
плюс 1.
Ну, плюс, да.
И так далее.
Ну и что-то у нас будет теперь в итоге
в самом конце.
В самом конце у нас тут будет
что там получается будет?
Ну да, k минус 1 получается.
k минус 1m.
Значит, тут получается опять
c0m a
и плюс k минус 1.
Нет, почему и плюс k минус 1?
Да, и плюс k минус 1, да.
Плюс
c1m a
и плюс k.
Плюс c2m
a и плюс k плюс 1.
Плюс и так далее.
Плюс c.
Значит, что тут получается?
Ну да, тут
c k минус 1m.
И тут ашечка получается
какая?
Получается, да, да.
И плюс 2k минус 2.
Вот.
Значит, смотрите.
Ну, теперь давайте внимательно смотреть.
Что же у нас тут
будет получаться?
Вот, давайте, то есть
теперь давайте попробуем это погруппировать.
Ну, заметим, конечно, что ашки,
ашек у нас, правда, не k минус 1.
Ну, там их 2k.
Но все-таки давайте посмотрим
на какие коэффициенты получаются.
Значит, при a и там получается
ну, просто
c0m умножить
на c0m.
А что получается при a и плюс 1?
А что получается при a и плюс 1?
Так, далее.
А что получается при a и плюс 2?
С1m.
С1m.
С1m.
Плюс c2m.
С0m.
А и плюс 2.
Ну, да, очень удобно.
Но, тем не менее, хочется их
так попереписывать.
Вот.
Потому что, в принципе, да, тут уже можно найти
какую-то закономерность, правда?
Ну, вот.
Закономерность заключает в том, что это
до жути похожее, на самом деле, на коэффициенты
перемножения каких-то многочленов, правда?
Ну, и действительно. То есть, фактически вы должны
просто из этих c-шек взять многочлен
размера k,
перемножить его на сам себя и, собственно,
ровно нужные коэффициенты и получится.
То есть, можно вот таким образом убедиться.
Можно более строго доказать,
написав все то же самое, только в терминах
там вот этих вот сигом.
То есть, тогда там это совсем надежно
получится.
Но увидеть это можно вот таким вот образом.
Итак.
Да.
Ну, да. То есть, да, маленькая проблема
заключается в том, что, да, мы научились
выражать i плюс 2m-ый коэффициент
через коэффициенты
и настояние 2m от него,
но единственный минус у нас
заключается в том, что этих
коэффициентов у нас не k,
как хотелось бы, а
2k. Ну ладно, 2k-1.
Ну, а теперь давайте думать.
Сильно ли это большая проблема?
Сильно.
Вот там же хотелось через
как коэффициентов, а не через 2k-1?
Вот как вы думаете?
Как такой проблем побагать?
Чего?
Куда? Кого развернуть?
Что вы имеете в виду? Что развернуть там?
Цк-1, цк-2 и так далее?
ТРЕВОЖНАЯ МУЗЫКА
Ну да, ответ у вас прям пред глазами, да.
Не, не там, вон там
А зачем нам их считать?
Нам скорее наоборот.
То есть смотрите, мы с вами только что получили, что
у нас a и плюс два мт равно, я напишу так, от балды,
там d нулевое i t, плюс d один i плюс первое, плюс и так далее,
плюс d, у нас там сколько там, 2k минус второе, там a и плюс
2k минус два.
Где d, какие-то коэффициенты, но зато для любого i.
Ну вот, мы раньше, помните, мы так сводили к предыдущему
шагу, как наш шаг раньше, беря последнюю ашку и расписывая
ее через сшки.
А что нам мешает вот эту ашку просто расписать через
сшки предыдущих?
Ну, через а и плюс 2k минус 3, минус 4 и так далее.
То есть они все здесь уложатся.
У нас же k порядка 2000, так что можно в квадрат.
Ну да, то есть обратите внимание, я не случайно k 2000.
То есть предлагается просто прям честно в тупую это
сделать.
Прям вместо вот этой штуки, то есть просто сказать,
что вот эта штука равна опять сумму вот этих вот
с житых на а там условно и плюс k минус 2 плюс ж.
И тогда сказать, что у меня теперь в этой линии, и тогда
если их перегруппировать, то получится, что ашек у меня
будет уже тут не до минус 2, а до минус 3.
Повторим эту операцию k раз, и у меня тут останутся
собственно только а к ашек, то, что мне и надо.
То есть таким образом, смотрите, то есть чтобы посчитать,
чтобы перейти от m к 2m, мне нужно одно произведение
двух многочленов размера k одинаково, что приятно.
Которое можно сделать за квадрат.
Да, кстати, можно сделать за квадрат, а потом не менее
в тупую вот это вот за квадрат проверить.
Ну вот.
Даже вурье не нужно.
Ну как сказать.
Ну я боюсь, это впендюривание в алгоритм черного ящика
не делает задачу тривиально или нетривиально.
Вот, мне кажется так.
И так, то есть таким образом у нас какая симптомика
получилась, кстати?
Ну а теперь, нет, теперь, ладно, теперь задача.
Хорошо, а там к 2m перешли.
Теперь задача получить n коэффициенты.
Давайте я разложу на стипинг 2 и научусь вспомнить того,
что научусь также складывать.
Ага.
Ну да, то есть, ну во-первых, да, тут дальше два механизма
есть.
Да, можно, конечно, сказать, что если у нас есть коэффициенты
по m1 и m2, то мы типа можем аналогичным образом
получить m1 плюс m2, на самом деле.
Ну как хотелось бы.
Ну в принципе, роспись ровно та же.
Только я при второй росписи, у меня тут просто, то есть
просто при первой росписи, то есть у меня тут m1 плюс m2,
при первой росписи у меня тут m2, а потом при второй m1.
Вот, это вы уже можете в качестве упражнения расписать.
Тем более, что на самом деле необходимости в этом нет.
Потому что на самом деле нам уже достаточно того,
что мы по m можем понимать m плюс 1 и по m понимать 2m.
То есть, на самом деле, да.
Так что, соответственно, просто там умеем прибавлять,
умеем радоваться и, в общем-то, все.
Вот.
Так что, соответственно.
Ну тогда какая всем точка-то получается?
Да, совершенно верно.
Такой уровень медиум.
А вот теперь задача, в которой все-таки не придется
ничего принципиально нового придумывать.
Но как это часто бывает, а если я тут все-таки пару нулей еще напишу?
Так, да, здесь фурия, а тут очки.
Ну-ка, давайте внимательно подумаем.
Нет, вот подумайте, это можно увидеть.
Давайте подумайте, может, просписывайте чуть-чуть там.
Давайте.
То есть тут как бы нужно выглядеть более точно, какие тут формулы вообще появляются.
А при чем тут фурия?
Ну-ка, именно.
То есть мы хотим домножить эту вторую половину,
которую многочлен, который эти все ашки торжественно обнулит.
Ну понятно, да.
Просто обычно, если вы будете их домножать на какой-то многочлен,
то там, скорее всего, просто эти коэффициенты, они же не в эту сторону пойдут.
Ну давайте, давайте, давайте.
Так, давайте.
Как-то на вас даже не похоже.
Это вообще не понятно.
Ну не знаю, нет, обычно у вас как-то всегда это...
Ну как сказать, обычно у вас в вашем стиле в течение пары минут
поделите уже кучу идей, на которых мы потом вытягиваем все алгоритмы.
Ну вот почти всегда это работает обычно.
А это что?
Да, это говорят люди, доказавшие мастер-тиререму.
Да, Антон доказал мастер-тиререму и ушел.
Ну окей, хорошо.
Вот это вот дешку.
Отсадить.
Отсадить внимательно.
На самом деле тут половина задачи решается методом,
а давайте просто ручками это проделаем.
Не получилось ни один из предыдущих шагов проделать ручками.
Ну, смотрите.
Давайте рассмотрим пример.
Да.
Давайте это редкий случай, рассмотрим пример.
Вот представьте себе, что были и были у нас цешки.
Какие?
Ну, допустим, пять, два, три, четыре, один.
Вот это цешки.
И, допустим, у нас появились дешки.
Ну тоже сейчас от балды распишем, потому что какие-то первые попавшиеся дешки.
Кстати, сколько у нас там дешек будет?
Девять штук, да?
Вот дешки у нас получились, допустим,
d0, d1, d2 и так далее, d8.
И стали они равны, но по каким-то модулям, там черти шоу,
поэтому тоже можем, в общем-то, написать от балды.
Четыре, два, восемь.
Ладно, так не получится.
Так, 5, d6, d7, d8.
Один, два, три, ноль, два, пять.
Видите, да?
Давайте смотрите.
Что нам нужно сделать?
Мы берем восьмую и расписываем, и отправляем ее в седьмую.
То есть смотрите, что у меня получается.
То есть тут у меня получается ноль, а вот здесь я прибавляю вот эти все цешки.
Только умноженные на 5, обратите внимание.
То есть получается, я прибавляю 2 плюс 5, то есть у меня тут получается 7.
Тут у меня получается аж 20.
Тут у меня получается плюс 15, 18.
Сколько?
Двенадцать, да.
Тут 12, ну и там, соответственно, 26.
Вот.
Ну вот, теперь расписываем семерочку.
Ну вот, расписываем семерочку.
Так, значит, тут у нас получается нолик.
А тут поехали, 27.
Тут получается, сколько там, плюс 28, 46.
Значит, тут получается плюс 21, 33.
Тут получается плюс 14, 40.
И тут получается плюс 35, 43.
Видите, да?
Вот, так, 27.
Так, ну тоже расписываем, 27.
Так, 66, 73.
Так, тут 73.
Так, 27 на 4 это 108.
Так, 141.
Вот, ладно, пока я тут упражняюсь в умножении, это называется сразу.
Тут это просто ничего не напоминает.
Нигде мы такую картинку не видели.
Так, значит, это на 3. Сколько там, 81.
Так, тут 121.
Тут там, сколько там, 54, 43.
Это 97.
О, их сезону 27 на 5.
Так, окей.
Вот.
Да, уверены?
А теперь смотрите.
Вот, возьмем такой многочлен.
Вот.
Вот сейчас мы его возьмем.
И попытаемся поделиться остатком.
Чего?
Поделиться остатком.
Правда, нам потребуется, нам даже и остаток и понадобится.
Нам многочлен.
Смотрите, какого вида.
Вот.
Минус.
Так, только тут минус t в четвертой,
минус 4t в кубе,
минус 3t в квадрате.
Вон оттуда.
Вот оно, вот 5, вот 2.
Вот.
Вот.
Вот.
Вот оно, вот 5, вот 2.
Ага.
А теперь давайте сейчас будем делиться остатком.
Ну.
Точно.
Ну вот.
Давайте аккуратно поделим.
Делим 5t.
Это старшее на старшее, получается тут 5t в кубе.
Теперь давайте смотреть.
Тут получается 5t восьмой.
А вот тут, слева направо я немножко пишу, такая арабская вещь.
Ну что делать?
Что у нас тут получается?
Значит, так.
5t восьмой, минус 5t в седьмой.
Значит, тут получается в шестой у нас
минус 20t в шестой.
Значит, минус сколько там? Пятнадцать, да?
t в пятой.
Значит, минус 10t в четвертой.
Минус 25t в кубе.
Вот. То есть теперь смотрите, что происходит.
Так как тут минусы, вот это вот шлеп-шлепается.
А здесь вот эти коэффициенты,
то есть 2 минус минус 5, это 2 плюс 5.
То есть получается то самое.
7t в седьмой, плюс 20t в шестой,
плюс там 18t в пятой,
плюс 12t в четвертой,
плюс 26t в кубе.
Ой, знакомые циферки, да?
То есть по факту, да, вы как бы этот коэффициент,
перенесли вот сюда, как раз прибавили
и домножили на ц.
Можно повторить, но, соответственно,
получается, что на самом деле по факту
вам нужно просто поделить это,
взять это как многочлен и поделить его
на вот мистический многочлен вот такого вида.
А делить мы за энлогенумеем.
В чем редкий случай, нам потребуется
впервые в жизни не частное, а именно остаток.
Обратите внимание.
И ровно этот остаток – это то, что нам надо.
И таким образом эта махинация
и предлагает нам
превратить k log n в k log k.
Так что вот такая вот
на самом деле красота.
Да.
Так, ну что, есть ли тут
какие-то вопросы?
Ну, можно было попробовать, да.
Ну, бывает, ничего страшного.
Как вы знаете, все-таки многие идеи
все равно, может быть, лучше ложатся, если их попытаться придумать.
Если вы там до конца полностью не придумаете.
То есть все равно как-то ощущаете.
Ну, это другой вопрос.
Нет, ну знаете, там, знаете, иногда я люблю на самом деле такие вопросы в ЧГК, например,
когда тоже так это думаешь, думаешь, там разные варианты перебрал,
там разные гипотезы, а потом тебе сообщают ответ,
и он тебя вот удивляет, потому что ты там то ли вообще в эту сторону не думал,
то ли такого нет, то ли такой подлянки не ожидал.
Ну, то есть на самом деле это прям особая красота получается.
Но тогда именно для этого нужно, чтобы вы именно
для этого поработали.
Или аналогичный пример, то есть как известно, там,
как бы, вот если вы там, там, смотрите, что-нибудь там, это
великолепная, там, шахматная партия, там, я не знаю, Александра
Алёхина, там, я не знаю, если он Александр, конечно.
Вот, там что-нибудь, вот обычная то есть или там, кто-нибудь там великолепный,
или лучшая партия Магдуса Карлсона,
там, в 2013 году, там и так далее.
Но тут вот есть такое подозрение, что обычно, если товарищ сыграл
лучшую партию, то есть подозрение, что на той стороне доски тоже там
не хухры-мухры-шо сидело, правда.
Тоже там, скорее всего, кто-то сильно сидел, потому что
как бы, наверное, против детсадовца он, наверное, шедевр играть не будет.
Так, ну ладно, есть тут вопросов нет,
но тогда, кажется, вот пришло время перерывчика.
Так, ну что ж, пришло
время перейти к...
Так, там пришло время. А, ну да, пришло раз.
Раз, потом в конце закрут. Значит, пришло время перейти
к многомерному преобразованию фурье.
Значит, на всякий случай прошу сегодня в конце это ещё напомнить, что там,
что помимо него есть ещё одна штука, которая не связана
с многомерным преобразованием фурье.
Вот, но на ней вот, как я уже сказал, очень хочется закончить, ну просто вот.
Это чертовски правильно было бы.
Ну не чертовски, но вот.
И так, значит, подумаем вот о чём.
То есть вот, как известно,
мы до сих пор работали с многочленами
от одной переменной.
Вот.
Но бывают многочлены, в принципе, и от двух переменных,
выглядящие вот примерно там следующим каким-то образом.
То есть какой-нибудь там 5 плюс
x, y в четвёртой, плюс y в кубе, там, я не знаю,
минус 6 x квадрат,
плюс там 7, я не знаю, x в кубе,
y восьмой, ну и так далее.
Вот, в принципе, такая штука есть.
То есть пока вот для простоты от двух переменных.
И нам бы очень хотелось
эти многочлены уметь тоже перемножать.
Ну а именно, значит, более точно сказать, что
давайте скажем, что у нас многочлен имеет по x размер n,
а по игроку размер m.
Это что то же самое. То есть мы просто расписываем.
Что у нас, значит,
степень i мы, по x мы перебираем
от 0 до n минус 1,
а степень по игроку
от 0 до m минус 1.
А это j и x в степени i,
и игрок в степени j.
Вот.
То есть вот такая вот штука. То есть у нас получается
коэффициенты образуют на этот раз не массивчик, а вот
табличку вот такую n
на m.
Понимаете, да?
Ну и вот, соответственно, теперь.
И теперь, соответственно, представим себе, что мы
чего?
Значит, теперь мы хотим взять два таких многочлена,
может быть даже одинакового размера.
Одинакового размера.
И их поделить.
Тут делить не понятно, что такое делить
в данном случае.
Вот мы хотим поумножать.
Ну вот возникает такой внимание вопрос.
Как же это сделать?
Какие варианты?
Ну да.
Можно совсем в тупую перебирать тут все
по слагаемому тут, слагаемому тут, поперебножать, порадоваться.
Да, совершенно верно. Действительно, это можно успешно
сделать.
Да.
Да.
Ну как сказать, давайте так. То есть если у нас в a
был моном i1 g1, а в b
и 2g2, то попадут они куда?
То есть они...
Да, совершенно верно.
Так, то есть получается, то есть как бы
фактически...
Так, откуда? Вот, допустим, вот в эту ячейку.
Откуда же в нее попадут?
Как говорится, попадут отсюда
и отсюда, отсюда
и отсюда.
Что-что как-то еще.
Отсюда и откуда?
Ну примерно вот этот вот вектор отсюда.
Тут, видите, тут на самом деле это сумма векторов на самом деле такая.
Так что много откуда попадут.
Ну давайте подумаем вот о чем.
Ну да.
Да, согласен.
Согласен, да.
Согласен.
Но, заметьте в следующее, пока у нас это
перемножение в тупую, это n2 m2.
Можно за n2 m.
Вау.
Как?
Смотри.
Да, но тогда это не n2 m, а n2 m log m, наверное.
Да.
А зря. Они все-таки тоже в 20 раз это
время работы увеличивает.
Ну все.
Ну все-таки.
Значит, хорошо.
Но на самом деле, да, тут можно постройки, можно, я бы сказал,
даже так правильно заметить, что давайте так скажем, что
a от x игр можно себе представить
в виде
такой замечательной суммы
по i от нуля до n-1
как x в степени i умножить
на a it от игр.
А именно, то есть, смотрите, то есть, я
просто вот, то есть, обратите внимание, то есть, если я вот рассмотрю вот вы
умножили на a вот такой ряд, то заметим, что
то есть, это все коэффициенты, которые стоят при x в степени i
и каких-то играх. Если вынести к степени i,
то у меня получается многочлен.
Вот. То есть, в принципе, ну я и про b
могу, в общем-то, то же самое сказать, да.
Значит, i равно n-1
и там x в степени i на, на этот раз b it от игр.
И тогда
такой вариант умножения в тупую звучит
теперь так, что
с одной стороны, ну вот, что когда, то есть, мы перемножаем,
то есть, у нас квадрат слагаемых, но каждый
мы, значит, в каждом слагаемом мы делаем перемножение
двух многочленов
за m лог m. То есть, получается, что там, допустим,
квадрат m квадрат такжественно превратился в n квадрат
m лог m.
Видите, да? Видите?
Вот.
Но теперь давайте думать вот о чем.
Конечно, этот квадрат тоже хочется убить. Каким образом?
Ну вот. А, в общем-то,
достаточно просты.
Смотрите. Ведь на самом деле,
давайте вспомним, то есть, на этот раз там все-таки придется
вспомнить, как же конкретно мы делали
одномерное FFT.
Мы считали значение в интересных прикольных патчах.
Да, совершенно верно.
Вот. А теперь вот возникает вопрос.
А не получится ли у нас что-нибудь подобное здесь?
Было бы круто, но у нас как-то пресечения будут кажется.
Ну, давайте смотреть.
Вот давайте к каждой ашке.
Ну, давайте так.
Вот там бы, действительно, хотелось бы, чтобы вот у нас есть
многочлен AXY как в таблице, и хочется перевести это
в таблицу A от WN в степени I
и WN в степени G.
WN, конечно, да.
Ну, заметим следующее,
что если нам тут потребуется для каждого ряда
явно FFT разлечься.
Ну, вот.
И тогда, смотрите, ну, с другой стороны, заметим следующее,
что что такое A, допустим,
от X и WN?
Ну, вот.
Ну, с другой стороны, заметим следующее,
допустим, от X и WN в степени G.
Что это такое? WN в степени G.
Это, значит, I равно нулю
N-1, X в степени I
на A и T от
WN в степени G.
Ну, обратите внимание, что поменялось?
Поменялось то, что вот этот многочлен превратился
в число, правда?
Вот. То есть на самом деле,
ну, в принципе, да, ничего удивительного.
То есть как бы если бы подставили один игр, то у нас многочлен стал
теперь это одной переменной.
Но более того, смотрите,
то есть по идее я должен теперь,
то есть если я хочу посчитать, зафиксировать G
и посчитать вот эту штуку для всех I,
то фактически что? У меня получился
одномерный многочлен,
и я должен фактически к нему FFTA применить, правда?
Секунду. Здесь у тебя A и T
от WN в степени G.
Да.
Это число, оно разное для разных I.
Конечно.
Но при каждом X в степени I стоит свое число.
То есть получается это многочлен
от X. Вот.
И если мы хотим теперь и в качестве X что-то подставить,
там WN в какой-нибудь степени,
ну, и здесь давайте вот я тут K напишу,
чтобы мы не путались.
Вот так вот. На самом деле.
То есть если мы в качестве X хотим WN в какой-нибудь степени теперь
то фактически мы должны взять теперь
ну, привод уже подставленном G, мы должны взять уже этот многочлен.
Видите, да?
И просто подставить у него
эти значения, то есть к нему для этого можно
просто применить FFT.
А теперь фишка. Смотрите.
Как бы эти все числа объединяет один факт.
То есть видите, мы подставляем одно и то же WN в степени G, правда?
Но откуда мы взяли эти коэффициенты?
Ну, взяли мы их, наверное,
когда мы взяли вот эту H табличку
и для каждого
в каждом ряду сделали FFT.
Да?
Но тогда оказалось следующее, что
тогда, на самом деле, я утверждаю, что
просто все нужные коэффициенты находятся тупо в G столбце.
Ну, потому что обратите внимание,
что именно здесь находится A0
от WN в степени G.
Ну, потому что тут в этом ряду в принципе находится
A0 от WN в степени 0,
там A0 от WN в степени 1
и так далее.
Ну, просто по определению FFT, правда?
Вот.
Но с другой стороны, тут и A1 получается
WN в степени 0, значит,
тут A1 от WN в степени 1, ну и так далее.
А в G там в столбце A1 от WN в степени G.
То есть получается мистический факт.
То есть, короче говоря, у нас получился многочлен,
коэффициент которого образует тупо в G столбец.
И мы хотим идем сделать FFT.
Но не остается, Лена, то есть тогда получается,
что надо, может быть, просто пройтись по столбцу
и в каждом столбце сделать FFT.
Вот, понимаете, да?
Откуда это взялось, не очень понятно.
В смысле, интуиции нихуй нет.
Ну, вот.
Ну...
А почему?
Ну, по факту мы просто...
Тут даже интуиция просто мы начали аккуратненько
подставлять по одной переменной.
Сначала одну переменную подставить.
Смотри, если в наращение из двух перемен
подставить вместо одной переменной значение,
получится наращение одной переменной, правда?
Вот.
Ну, вот.
Ну, мы, собственно, что такое FFT?
То есть мы в одновременный многочлен подставляем
заданный набор значений, да?
Ну, мы это и сделали.
Ну, тогда если сделать вот такой вот ряд,
в каждом ряду это сделать, то в каждом столбце получится
просто значение... То есть если тут так...
В столбце получается значение всех многочленов
Вот. То есть в ряду находится значение
одного и того же многочлена в разных точках, а столбце
наоборот. Точка одна, многочлены разные.
Вот. Но остается только вспомнить,
что действительно при каких коэффициентах они стояли.
То есть они стояли, когда у вас там х был
разных степеней.
Ну да, тут, конечно, не знаю, какую-нибудь более, может быть,
наглядную интуицию тут сложно предложить.
Вот. Ну, тут, конечно, наглядность, интуиция тут на вкус и цвет.
Вот.
И так. То есть вот действительно получается, что
теперь у нас действительно есть многочлен по х,
теперь мы можем сделать еще и FFT по столбцам.
То есть таким образом мы делаем FFT
сначала по всем рядам, потом
по всем столбцам.
Ну, в принципе, как вы дорадуетесь, можно было сначала
по всем столбцам, потом по всем рядам, суть была бы та же.
Правда?
Потому что подставляли бы в другом порядке.
Вот.
То есть вот такая красота.
Ну, тогда, то есть действительно тогда перемножение,
ну вот, ну тогда получается, если, давайте считать,
за сколько времени это будет?
Ну, по времени получится N умножить на m лог m, это вот
по всем рядам.
И по всем столбцам получается m на
n лог m.
Ну, что такое лог m плюс лог m?
Это лог m. Совершенно верно.
То есть получается в итоге Nm лог Nm.
То есть вот такая вот красота.
Вот. То есть опять, ну, то есть в принципе опять же,
то есть получается количество коэффициентов на логарифам, количество коэффициентов.
Ну, в общем-то, то, что у нас до этого и было.
Ну, теперь понятно, чтобы
реально перемножить 2 многочлен,
ну, конечно же, чтобы реально перемножить 2 многочлены,
вам, конечно, потребуется...
Понятно, что эти Nm
эти nm мысленно там понятно домножить на два раза, потому что вам же еще обратное потом восстанавливать. Правда?
Правда, кстати, возникает интересный вопрос. Действительно, вот, да, на тему того,
почему это правильно, потому что, формально говоря, мы даже не умеем доказывать, что для
двумерного многочлена, то есть размеров nm, то есть значение вот в этих вот точках
действительно его однозначно восстановят. Хотя, насколько мы не умеем это доказывать?
Нет, на самом деле мы сейчас, мы можем прямо сейчас доказать это и очень тупо.
Ну, практически да. То есть просто заметим, что по многочлену мы вот делаем вот эти
действия и получаем значение. Ну вот, но просто приятность в том, что эти действия они обратимы.
То есть просто, дайте бы, один из вариантов, например, там рассказывать fft, на самом деле есть,
это просто давайте, как сделать обратное fft? Давайте посмотрим, что делает прямое fft и заметим,
что все эти действия можно просто в обратном порядке проделать. То есть само по себе это уже,
уже доказательство того, что, то есть как бы, что нам нужно? То есть нам даны значения многочлена в точках,
то есть нам нужно придумать какой-то такой многочлен, по которому вот этот алгоритм выдаст вот это.
Но мы просто обращаем действие, однозначно восстановим многочлен. Это уже само по себе
доказательство получается, что он существует и единственное. То есть просто потому, что у нас
есть обратимый алгоритм. Тут, да, правда, отдельный прикол, да, конечно, тут надо быть внимательными,
да, кажется, что, да, раз выеду сначала по рядам, потом по столбцам, значит и обратное надо
брать. Сначала по столбцам, потом по рядам. Но на самом деле, как вы догадываетесь, если вы обратное
тоже сделаете, сначала по рядам, потом по столбцам, то тоже получите то же самое. Вот. Такой вот локальный
юмор получится. Вот. Так что вот, действительно, вот, то есть теперь вот таким образом получается,
что мы умеем делать двумерное FFT. Ну, на самом деле, ровно таким же образом можно сделать и трехмерное FFT.
Ну, вообще, любое мерное FFT на самом деле так можно сделать. Ну, единственное, возможно, вот, то есть
тоже вот асимптотики там получится тоже там, соответственно, размер таблички, ну, алгоритм размера таблички.
На два стебени размер таблички. Почему? На два стебени количества размерностей. Почему? Потому что когда мы
умножаем, мы забыли табличку два раза расширить. А, да, проблема. Проблема небольшая. Говорят, по дереву Фенрика
тоже забывают что-то на самом деле на два степени. Не, ну, почему не? Когда там камерную табличку, это помнят.
Хотя, да, могут и забыть. Это, да, да, да, да. Нет, это, безусловно. Вот, но, казалось бы, да, казалось бы, маленькая,
действительно приятная штучка. Так, ничего я по ней рассказать не забыл. Нет, вроде ничего. Да, ну, собственно, да.
Ну, сама в себе эта штука действительно простая. Да, вот так вот, многомерное преобразование делается с ней.
Там тоже можно теперь пытаться делать вот эти все задачи с табличками, с трафаретами, но уже в двумерном виде.
Ну, в общем, тут по-разному. Я на всякий случай расскажу, как еще можно было бы, на самом деле, попытаться перемножать два
двумерных многочлена. Вот, то есть на самом деле можно было еще действительно считерить и по многочлену вот такого вида, то есть двумерному, построить многочлен одномерный.
Точно. Мы что делаем? Кто, как где? Я пытался вспомнить, как я решил задачу, о которой нужно было трафарет с таблички искать, и так он сводился к одному.
Вот, да, на самом деле, да, потому что можно как бы вместо AXY, да, то есть можно вот эту сумму AITGT X в степени IY в степени G, то есть можно на самом деле здесь сказать, что это будет сумма AITGT, там какой-нибудь переменный Z в степени I плюс, там, по-моему, два, ну, допустим, два MG, ладно, по барабану, или NG, так, M или N.
Да, лучше N. Ну, N, конечно, N лучше, потому что у нас ишки от нуля до N минус 1. Вот. Да, зачем они нам надо, да? Ну, заметим, что, во-первых, по этому многочлену вот этот вот тоже многочлен восстанавливается, правда? Однозначно.
Ну, теперь самое приятное, что если мы А и Б так сделаем, то тогда в произведении у нас будет что-то типа, значит, AITI1G1, BI2G2 и отправится это все в Z в степень I1 плюс I2 плюс 2N на G1 плюс G2, вот, видите, да?
То есть, когда мы будем перемножать вот этот многочлен, но заметим следующее, что по этой степени действительно I1 плюс I2 и G1 плюс G2 восстанавливаются, правда?
То есть, однозначно. То есть, я по этому Z могу их сыграть. То есть, тогда, поэтому отсюда можно, тогда уже легко как раз увидеть, ну, увидеть вот уже и там, может быть, более аккуратно доказать, что на самом деле как бы перемножаю, то есть, произведение Ашек и Бэшек потом, то есть, на самом деле идентично вот этой штуке.
То есть, на самом деле вот можно вот так развлечься еще. Ну, а можно, соответственно, вот так, типа FFT по строчкам, FFT по столбцам, FFT по вот этому вот, ну или сколько у вас там размерностей.
Вот. Да, казалось бы, это вот простая вещь, но оказывается, с помощью этой штуки на самом деле можно очень неплохо копнуть, потому что сейчас я предложу задачу, которая, на первый взгляд, вообще не как с FFT не связана, вот вообще не при нее.
Ну вот. Ну, как сказать? Ну, хотя, да, про дуэль тоже не очевидно, причем тут FFT, да, согласен. Ну вот. Ну, а сейчас вот прям вообще, по-моему, задача такая, значит, у вас, значит, есть функция.
Функция F. Значит, это функция из множества 2 в степени 0, 1 и так далее, n-1. Ну, допустим, r, не важно куда. Ну, или что то же самое, то есть, обратите внимание, то есть, у меня здесь в качестве параметра практически такие n-битная масочка.
Ну, или просто под множество элементов. Вот. То есть, какая функция абсолютно произвольная? Ну, просто набор 2 в степенье значений. Так вот, я хочу делать, ну, и у меня еще функция g есть вот такая.
Так вот. Значит, я хочу сделать мистическую функцию. Я хочу сделать вот такую же функцию, только при этом я хочу следующее, что h от какой-нибудь масочки у меня должен быть равен.
В сумме f от m1, значит, на g от m2, где m1 it m2 равно m.
Ну, я почему тут пишу it, потому что в качестве it я хочу подставить or and xor.
Так, и как же предлагается делать or? Какой?
Это, ну, шо, шо, я хотел только вспомнить, что это.
Ну, вот. Да, казалось бы, да. Все больше удар. Для конкретно ora кто-то, возможно, даже задает решение.
Да, потому что последний, ну, я, ну, впрочем, я даже его упоминал, потому что это знаменитая sum over subset.
Вот. Значит, давайте внимательно смотреть.
Так.
Давайте.
Так, на что нам тут внимательно смотреть?
Значит.
Так.
Ой, еще махер есть. Круто.
Вот. Значит, смотрите. Внимательно.
Так, ну, во-первых, да. Ну, начнем с того, кстати, что or and на самом деле достаточно похожие задачи, правда?
Да, как можно заметить, что если вы там пытаетесь решать задачу для and, то вы во всех масках можете инвертировать биты и and превратиться в or, правда?
Поэтому, в общем-то, с идейной точки зрения and можно не рассматривать.
Теперь давайте смотреть.
Я сказал, давайте смотреть.
Итак, давайте смотреть or.
Значит, местицизм тут предлагается такой.
Значит, предлагается взять f, такую, то есть по функции f маленькая, то есть так, причем тут fft, да?
Ну, так и есть вот, как бы, до легком уровне.
Значит, объяснение, значит, такое.
Давайте по функции f построим функцию f большое.
Вот такую вот.
И скажу я следующее, что f от m это сумма f от m' по всем m', так сказать, под маском m.
Да, поэтому это называется sosdp.
Потому что sum over subsets.
Собственно, sum sum over subsets.
Ну вот, по-морскому sos, да.
Вот.
Это страшная картинка, да.
Как-то знаете, что такое sos, по-морскому sos должен четко и всегда знать любой матрос.
Это точно капитан.
Конечно, капитан можно отвечать и воспроизводит ему вот это, да.
Вот, значит, спрашивается, зачем нам это?
Так вот, мистическое утверждение.
Значит, мистическое утверждение.
G тоже большим стало?
Да, и f, и h.
А h-то да.
Ну, понятно, что я...
Ну, смотрите, g это просто функция, а h, давайте мы вот у этого безобразия тоже, у него существует его большой аналог.
Так вот, есть такая мистическая функция.
Это g, она тоже большая или нет?
Да.
Нет, ну вы по хвостику-то не ориентируетесь.
Маленькая вот, большая вот.
Обычно мы просто внутрь загибаем, и все.
Нет, ну смотрите, нет, ладно, вот так.
Вот это маленькая, а вот это большое, видите?
Ладно.
Вот в этом равенство, да.
Ну да, да, да, как это?
Нет, понятно, это да, это обычные 100 долларов.
Потом достаем такой огромный лист, а это фальшивка.
Там на ней нет водяных знаков, ее с трудом принимают банкоматы и все такое.
Ладно, ну давайте посмотрим.
Что же это?
Вот откуда-то с небес по факсу нам прислали вот такое равенство.
Вот ворону.
Или там это, вороня где-то бог послал вот это вот.
Вот.
Ну вот, ну и конечно ворона хочет проверить, что это ей прислали.
Ну давайте думать, что такое f от m и g от m.
Так.
Ну давайте все-таки проверим.
Значит, сумма, значит тут f от m штрих на g от m два штриха.
То есть тупо сумма по всем подмаскам.
Видим, да?
По всем парам подмасок.
По всем парам подмасок.
M-ки, да?
Где обманывается условие, что m1 нужно m2 это m?
Нигде пока что.
Пока нигде.
Пока я просто сказал, что f от m, g от m равно вот этой штуке.
Больше я ничего не сказал.
Но я могу теперь это перформулировать.
То есть я перебираю такие пары подмасок, что каждый из этих паров,
что каждый из этих подмасок является подмаской m.
Но есть мистическое, но теперь есть еще одно мистическое, заметим, шо.
Мы заметим, что две подмаски являются подмаской м,
тогда и только тогда, когда m-штрих or m2-штриха является подмаской m.
Поэтому получается, что я могу тогда это записать в виде просто вот суммы f от m-штрих g от m2-штриха.
То есть я просто перебираю такие, что m-штрих or m2-штриха является подмаской m.
Но это уже просто по определению h от m.
То есть вот типичный пример ситуации, когда непонятно,
когда вообще непонятно, с каких небес по факсу нам это прислали, но как говорится, проверить легко, но налицо.
Но тогда, смотрите, но тогда мы можем просто сделать ровно ту же технологию,
что и делали fft, то есть я превращаю, превратим f в f большое, g в g большое,
тогда значит потом h построим вот так вот за 2 в степени n,
а потом по h большому построим h маленькое.
Вот такая штука.
Теперь внимание, вопрос, как же это сделать?
Как превратить f маленькое в f большое?
Говори в степени n.
О, точно, да.
А, правда, еще надо обсудить тогда, как перебирать все подмаски за 3 в степени n.
А, ну да, хотя можно сейчас обсудить, можно обсудить, когда мы будем обсуждать dp по профилю.
Но обычно у меня это просто в этом месте происходит.
Ну хотя это и неважно, потому что все равно это 3 в степени n это не та штука,
которая нас здесь будет удовлетворять.
Итак, как же превратить f в f?
f
Ну давайте dp it gt это...
Может все-таки mask, mask gt?
Ну да.
Давайте вот все-таки.
Так, dp mask gt, g у нас видимо от 0 до n будет,
mask, ну mask понятно.
Шет такое.
Вот как бы это, давай как это определить.
Это сумма по всем f маленькая от чего-то,
что является, что напреки все длины g является подмаской маски.
Шет такое.
Шет не точно.
Вот давайте аккуратнее.
А дальше нули, давайте так.
Нули, да ладно.
Не, ну не знаю, по-моему может попроще.
Пусть у нас m, значит суммируем по всем подмаскам маски,
таким что первые.
g bit у m и mask совпадают.
Вот, такая вот красота.
То есть вот введем такую dp.
Ну во-первых заметим, что, ну тут немножко такой обратность
получилось, потому что заметим, что dp от mask нулевое,
это в точности что?
Это то, что мы хотели.
Да, то есть f большое от маски.
Но с другой стороны, d, все буквально с другой стороны,
f от маски n равно наоборот f от маски.
То есть переберем все подмаски, у которых совпадают n bit.
А у нас всего n bit, так что получается ровная f от маски.
То есть поэтому получается, что нам бы хочется уметь как-то
насчитывать dp, как-нибудь так это,
возможно как-то перечислить справа налево, слева направо.
Как раз вот перегонять.
Но нам, ладно, чтобы получить из этого f это f,
нам придется, это редкий случай, идти от n до нуля.
Но давайте думать, как же это сделать?
Так, нет, это понятно, да.
Да, ну это понятно, да.
Ладно, давай так и напишу, хорошо.
0, for там маск, от нуля, то 2 в степень n минус 1, и что?
dp, маск gt, равно dp, маск g минус первое.
Минус первое?
Плюс первое.
Вот.
Так.
Ага.
Плюс dp, маск, что-то.
Ой-ой-ой.
Не-не.
Ну да не, кто-то так торопишься, спокойно.
Смотрите.
Итак, вы зафиксировали первое g bit, да?
Да.
Мы идем справа налево, но теперь смотрите,
мы можем попытаться, раз мы первое g bit зафиксировали,
0, 1 и так далее, вот g минус 1.
Можем попытаться зафиксировать и g-ты, правда?
Ну вот.
Зафиксировать и g-ты, тогда у нас будет g плюс 1 bit зафиксирован.
Мы его можем зафиксировать не более чем двумя способами.
Потому что мы можем зафиксировать, что он 0,
и иногда, если с маской повезет, можно зафиксировать, что он 1, правда?
Да.
Вот.
Ну вот.
Ну вот.
Ну действительно, если он 0, то на самом деле просто надо вот так скопировать и все.
Вот.
То есть я могу написать так.
То есть я могу так.
Если маск, если g-ты bit там есть,
ну я чаще всего пишу вот таким вот образом.
Вы скорее всего пишете другим.
Вот.
Ну вот.
Ну неважно.
Так, то dp маск g-ты будет плюс равно dp.
Ну вот, маск.
А, можно даже так, тут конечно немножко запутано получилось,
но можно и так.
Во.
Вот такая красота.
Да.
То есть как бы, смотрите, зафиксировать ту же масочку,
то есть тот же bit, который есть, это всегда святое дело,
но если это bit еще единичка, то тогда я могу его и обнулить.
И тогда тоже к ответу прибавить.
Более того, это преобразование чаще всего,
ну вот,
то есть это преобразование на самом деле чаще всего даже пишут не вот в таком двумерном массиве,
а даже в одномерном.
Ну потому что, это мы с вами определили dp скорее для математических целей,
потому что на самом деле выполнить это преобразование я могу прекрасно и в одномерном массиве на самом деле.
А, типа за римми памяти.
Да.
Ну да, то есть там будет еще такой мега сжатый код,
то есть что-то for g равно n-1 до нуля,
хотя, кстати, по барабану в каком порядке биты перебирать на самом деле будет.
Дальше for,
значит, mask равно от нуля до 2 в степени n-1,
значит, мы говорим, что если mask n-1 хресь-хресь g,
то dp масковое plus равно
dp от mask
mask минус 1 хресь-хресь g.
То есть вот на самом деле в одном массиве это вообще вот так пишется.
Красный маркер, жалко, пишет не очень, но
суть такая.
Но это мы превратили, это мы как бы отсюда-сюда прошлись.
Но теперь заметим маленькую приятную вещь.
Что нам нужно поменять в этом коде, чтобы пробег получился в обратную сторону?
Ну вот, в идеале по-хорошему надо тут, конечно,
для обратности написать от нуля до n-1,
и тут вместо плюса написать минус.
Но на самом деле, так как в каком порядке биты перебирать по барабану,
то на самом деле вот этого можно не делать.
То есть опять же, видите, прямое от обратного отличается только тем,
что там вы плюс заменили буквально.
То есть вот таким вот образом,
вот таким вот образом
у нас получилось OA2 в степени n на n.
Да, то есть в принципе достаточно известная,
то есть она вот, особенно если,
то есть если так глубже не копать,
то в принципе вот такая вот простая вещь,
то есть периодически в задачах вот подсолвывают.
То есть дальше там начинаются какие-то словосочетания,
потому что, как бы, дай бог мне не ошибиться,
но вообще это даже в науке может называться как свертка волша Адамара, кстати.
А это не анаксвор?
А может анаксвор?
Хорошо.
Ладно, ну для OR тоже есть, не важно.
Так вот, но на самом деле,
почему эта штука рассматривается именно здесь?
Потому что у нас цель такая,
мы собственно копнем, а откуда она вообще взялась?
Ну да, просто заметим, что вот так вот делается.
Вот.
Вот.
Но на самом деле, да,
как это называется, казалось бы,
при чем тут многомерное преобразование фурье, да?
Так вот, на самом деле это оно.
Значит, давайте смотреть внимательно где.
Вот.
Ну а для этого, может быть, давайте время,
да, вот мы помним, какое-то такое решение динамика есть,
какая-то такая мистика есть,
может быть.
Так.
Значит, это мы все убираем.
Давайте просто себе представим,
что мы пытаемся проделать вот это вот.
Вот.
Но для этого мы попытаемся подумать вот о чем.
То есть мы можем попытаться подумать об F и G
как,
ну, что-то типа о многочленах.
О многочленах,
о темпераменах.
То есть вот такое вот буголга.
Да.
То есть представить себе, что у нас есть вот такая
фактически функция F от x1, x2, x3 и так далее, xn.
Что приятно по каждой переменной степени более чем 1.
Вот, удобно, правда?
Тогда, в принципе,
но теперь заметим,
тогда, теперь, как можно было бы вообще-то пытаться решать эту задачу?
Можно было пытаться ее решать,
но вот так, что вот у нас вот есть F такая функция,
есть G вот такой многочлен,
и можем попытаться найти произведение.
Назовем его,
как мы его назовем?
Да, вот так лучше не называть.
Давайте, как там?
Давайте, назовем его C.
Ну, просто раз мы всегда произведение C называем, правда?
Ну, вот.
Ну, заметим, что, конечно, почему я писал C?
Потому что C, конечно, многочлену соответствующему H
ни в коем случае не равен, согласны?
Вот.
То есть, Боже упаси, ни в коем случае не равен.
Но мы можем заметить,
что по крайней мере по многочлену C
многочлен H
можно однозначно восстановить, правда?
Просто?
Пока нет.
Пока нет.
Ну, смотрите.
Вот, допустим, тут у нас было
что-нибудь типа 5х1х3х4,
а тут было, допустим, 7х2х4х8.
Допустим.
Тогда произведение этих маномов,
тогда, смотрите,
тогда в произведение масочек
это должно было отправиться в
что-то типа 35х1х2х3х4х8.
Ну, такая масочка.
Нет, это в произведении многочленов.
Ну, хорошо, да, ладно.
В произведении многочленов, да,
вот если перемножить эти маномы, получится так.
Но, с другой стороны, это соответствовало масочке
что-то типа 1011000,
а это соответствует масочке
01000001.
И тогда этот Орик бы соответствовал
масочке 1 11110001.
Да?
Ну, тогда, смотрите.
Заметьте, что приятность.
То есть в чем разница?
Разница в том, что тут две единички
превращаются в единичку,
а тут две единички в степени
превращаются в двоечку, правда?
Ну, с другой стороны, видите,
ничего страшного в этом нет
само по себе,
потому что двоечка,
что такое двоечка вообще?
То есть вы замечаете, что
на самом деле по маному,
который у нас в произведении получится,
мы можем легко понять,
чему он соответствует, правда?
Ну, да.
Потому что по большому счету, да,
то есть чтобы из манома и степени получить масочку,
надо просто двойки на единицы занять, правда?
Так что такая вот маленькая,
приятная вещь.
Но я не говорю, что
может быть где-то по произведению
достаточно легко было бы это восстановить.
Единственная проблема,
что произведение
считается долго.
То есть если мы сейчас с вами
забабахаем
n-мердное преобразование фурье
в этом месте,
то какая у нас там
симпатика получится?
Да, нормально.
Да.
Да.
Да, в степени 1n.
Угу.
Все.
Если бы на жод нуалэ,
помните, что для перемножения многочленов
у нас по каждой размерности в два раза надо умножить, да?
Четырех степенен.
Вот вы же и замечали,
помнится кто-то из вас, да,
что в фенвике мы что-то тут два степенен,
лишь не забываем, да?
Да.
Просто так не получится,
поэтому в тупую это получится 4 степени n,
а на самом деле вон можно было уже 4 степени n
и не заморять.
Вот теперь давайте думать,
как это можно оптимизировать?
Ну хотелось.
Нет, ну на самом деле тут две оптимизации.
Одна тупая, одна умная.
Вот есть одна тупая оптимизация,
которая 4 в степенен нам сократит.
Получим просто 1n.
Нет.
Ладно, подсказка.
Она получит 3 в степенен.
Получим 3 в степенен.
Нет.
Нет.
Нет.
Нет, нет.
Да.
Да, Лена умная.
Не processed.
Не run.
Не run.
Не run.
Не run.
Не run.
Не run.
Мы можем взять,
перебрать
все 2 separately.
а не из подмасок, а из структуры f of t.
А из структуры f of t. Откуда? Вот давайте так.
В f of t у нас откуда 4 степени n принялось?
Да, то есть мы как бы увеличили в два раза.
А теперь у нас есть вопрос.
А зачем мы всегда увеличиваем в два раза?
Ну да, потому что размер, наращение размера n на наращение размера n.
Да, на самом деле да, достаточно 2n-1.
Правда, мы умножали 2n, потому что нам принципиально была степень двойки.
Но теперь заметьте маленькую приятную вещь.
Когда у вас каждое одномерное f of t размера 2, 3, 4,
то вы можете даже сказать, что сделать его даже размера 3,
потому что вы всё равно его сделаете за от трёх, правда?
Да, можете даже подставить туда даже комплексные корни степени 3 из единицы, если очень хочется.
Вот, и тогда получается, что если у вас размер будет там степени 3,
то есть у вас тогда будет, то есть им аномов тут 3 в степени n,
и собственно там произведения будут все такие адекватные, поэтому слава нот.
Поэтому будет ура, а симптотика 3 в степени n.
Правда, на n?
Ну это уже оптимизация.
А теперь следующий чит.
Потому что заметим, что когда у нас f of t размера совсем уж 3,
ну понятно, мы замечаем, что мы можем ещё и числа выбирать такие, какие мы хотим, вообще любые на этот раз.
То есть раньше мы выбирали комплексные числа.
Вот, ну а теперь заметим, что если мы выберем 57, 179, 2007,
то в принципе тоже можно и прямое и обратное преобразование проводить, правда?
Ну что, берём эту матрицу Вандермонда с 57, то есть там 1, 57, 57 в квадрате, 1179, 179, 179, подать и честно её обращаем.
Вот.
Но мы пойдём более хитрым путём.
На самом деле, как вы смотрите, нам нужны значения какого-то многочленов в точках.
То есть когда мы перемножали, мы получали вот такое.
Но с другой стороны заметим,
вот мы помним, как получить многочлен, да, то есть по многочлену С мы помним, мы можем получить его брата H.
Как мы его получаем? Заменяя хит в квадрат на хит, правда?
Понимаете, да?
Но идея теперь заключается в следующем.
Заметим, что не во всех точках, что конечно, когда мы этот многочлен заменяем, то конечно значения, что в принципе эти многочлены меняются, правда?
Но если мы их рассмотрим, но если мы их рассмотрим в таких точках, что значение, в таких иксах, что значение от этого замены не поменяется,
то будет неплохо, правда?
Ну, в единиц не поменяется.
То есть смотрите какой.
А нужно ли нам больше?
А нужно ли нам больше?
А теперь будет две.
Значит, смотрите, что будет, если мы сейчас в наглую и сделаем FFT, но в каждом многочлене будет у нас брать не три точки, а две, 0 и 1.
Тогда смотрите, что у нас получится.
Ну, во-первых, это будет за два в степени n на n, да?
Понимаете, да?
Понимаете?
Ну, смотрите.
Ну, давайте проделаем F, вот это вот, такое псевдо, вот это вот FFT, да?
Только там, только на каждом измерении, то есть в каждой икс будем подставлять 0 и 1, два значения.
Понимаете, да?
Понимаете, да?
То есть я вот проделаю вот эту мистику и проделаю вот эти произведения.
То, что у меня получится, это будет, то есть у меня получится значение вот этого реального многочлена C произведения, да?
В точках, там, в точках 0 и 1 в степени n, правда?
Да.
Конечно же, по нему нельзя восстановить сам многочлен C, потому что там надо 3 в степени n точек.
Но нам это и не нужно.
Потому что мы заметим, что эти значения многочлена C в этих точках, они на самом деле просто равны значению нужного нам многочлена H вот в этих точках.
Ровно потому, что вот 0 и 1 обладают таким приятным свойством, видите, да?
И тогда получается, то есть на самом деле, да, мы сделали эти произведения и получается у нас значение многочлена H в точках, и мы можем сделать обратное преобразование только вот от 0 и 1.
Таким образом мы просто подобрали две, вот мы снова применили этот чит, мы подобрали такие две точки, чтобы нам было хорошо.
Но самое главное теперь, а теперь давайте внимательно увидим.
Как это будет выглядеть в коде?
Вот как это вот мистическое преобразование Fourier будет выглядеть в коде?
Вот.
Ну, в коде оно будет выглядеть, да, что, ну, конечно, f от n переменных мы писать не будем, да?
Ну, мы могли бы, конечно, там написать, да, что for там x2 равно от 0 до 1, там x3 от 0 до 1 и так далее, xn равно от 0 до 1, да.
Извините, да, в наглую предположив, что вообще там pum pum pum c++ писать можно, да?
Вот это вот.
Ну вот, ну и там что, ну вот, а теперь думаем, что у нас получается?
У нас есть два значения, да, то есть у нас есть f от 0, там от 0, x2 и так далее, xn.
И от единицы.
Заметим, что эти два значения, если я их особенно назову, допустим, для красоты a и b, то они образуют многочлен a плюс bt, правда, от одной переменной, правда?
И мы хотим вот эти ab заменить на значение этого многочлена в точке 0 и 1.
Но значение в точке 0 это и есть a, а значение в точке b это a плюс b.
Поэтому получается, что я должен написать, что f от, просто все, что должен сделать, плюс равно f от 0, x2, xn.
А если мы переведем это на язык масочек, то предыдущий код воспроизвелся сам собой.
Ну для одного и что?
Правильно, ну просто да, вот эту вот штуку придется сделать это n раз, только я буду пропускать...
f от x1, 1 или нет?
Ну да, правильно, значит x1, дальше 4x1, потом пропускаем x2, 4x3, там 4x4.
Что? Чего? Я не понимаю.
Пум-пум-пум еще.
Вот. Нет, ну просто смотри, просто как выглядит n-мерное прообразование в фурье?
Ну давай так, 2-мерное как? Мы все делаем по строкам, потом по столбцам.
Как делаем 3-мерное? По строкам, по столбцам, по ыть.
Как сделаем n-мерное?
Ну смотри, это мы сделали только все fft по одному из n направлений.
Да.
Ну по тому направлению, который x1.
Ну то есть смотрите, вот x1 направлено сюда, x2 перпендикулярно, x3 перпендикулярно и в обоем, x4 перпендикулярно там и всем, ну и так далее.
Вот, ну простая картинка, да.
То есть на самом деле да, вот будет такая вторая пачка форов, и в ней будет то же самое, f от...
Получается x1, 1, x3, x4 и так далее xn, плюс равно f от x1, 0, x3 и так далее xn.
Вот, и на самом деле в таких патчах я должен n-штук написать.
Это если прям честно писать n-мерное прообразование в фурье.
Но, конечно же мы этого делать не будем, тем более что и f мы наверное будем хранить не в n-мерном массиве, правда?
Мы его будем хранить в виде масочки, правда?
Но тогда получается нам нужно будет, то есть фактически, то есть эта пачка, тогда если тут вот хранить f от m, то получается нам нужно просто перебрать все масочки.
То есть for m равно от 0 до 2 в степени n-1.
Значит, если m and 1, то соответственно f от m, плюс равно f от m, в данном случае, минус 1.
На что заменится вторая пачка?
То же самое, то есть тоже прибираемся опять по всем масочкам и говорим, значит, if m and 2, то f от m, плюс равно f от m, минус 2.
То есть дальше соответственно тут будет на этом месте 4, 8, 16 и так далее.
Но на самом деле просто так и напрашивается, что остается только добавить, что на самом деле перебирать, что это 2 в степени g, и тогда получится for g от 0 до n-1,
for m равно 0 до 2 в степени n-1, if 1 х х g, то f от m, плюс равно f от m, минус 1 х х g.
Ну вот, код тогда, логика принципиально другая, а код тот же самый.
То есть более того, на самом деле, как бы если дальше, то есть на самом деле получилось, что да, мы сделали просто инвергенное преобразование в фурье.
Но просто если мы, то есть правда вот с 0 и 1, но видимо, если очень аккуратно покопать, что конкретно там мы в итоге делаем и что это преобразование в итоге делает, то тогда и получается, что да, по факту мы считаем сумму на подмножстве.
То есть вот на самом деле, откуда это взялось.
Ну что, давайте догадайтесь за оставшуюся минуту, откуда взялся нод, как теперь сделать то же самое к ссорам.
Ну тут так называется, что такое так же?
Нет, смотря что такое так же не получит.
Потому что давайте воспроизведем еще раз технологию. То есть технология говорит, что мы хотим перемножать два многочлена, но потом мы заметили, что если вычислять значение многочлена в точках 0 и 1, значит так, мы хотели вычислить произведение, а потом сократить двойку в единицу и получить нужный нам многочлен.
Заметили, что на единичке это свойство?
Да, мы заметили, что квадрат превращался в ноль.
Так, ну не в ноль, а в степень ноль.
В степень ноль.
Да, то есть теперь у нас получается вот тут.
Это получится к ссорам.
Да, тогда получится к ссорам.
А существуют ли такие иксы, у которых квадрат превращается в X нулевое?
Есть ноль.
Нету нуля.
Ноль в нулевой степени не равно 1.
Так, давайте.
А у каких чисел х квадрате равен х нулевой?
И минус единичке.
И минус единичке.
Да, это прям в явном виде оно на самом деле.
То есть делаем то же самое, только вычисляем многочлены.
То есть это вот одномерные многочлены.
В точках не 0,1, а 1, минус 1.
Ну тогда тут получается, здесь получается а плюс b и а минус b.
То есть просто делаем буквально то же самое.
То есть в этих точках у произведения и у того, что надо значения совпадают.
Поэтому остается только применить обратное fft.
Но там придется тоже поскладывать, но еще пополам взять.
Но получится вот абсолютно то же самое.
А элементарно?
Ну практически нам на каждом шаге, на житом шаге надо перебрать все пары масок, которые отличаются только житым битом.
Значит смотри, получится примерно следующее.
То есть в нашем случае...
Так, ну вот...
Синего маркера не валялось.
Ну ладно, смотри.
Значит в данном случае получится так.
Значит, так сказать, int ссылка a в данном случае равно f от n минус 1 хресь-хресь z.
Ну я тут ссылку введу, чтобы было удобно.
Я хочу просто заменить a и b, то есть как многочлен размера 2,
на значение этого многочлена в точках 1 и минус 1.
И заменю я их, выражаясь питоновским языком, a, b равно, там, равно a плюс b, a минус b.
Вот и все.
Так что вот такая вот красивая магия.
С какого момента?
На самом деле с момента, когда мы превратили факт, что x² равно x для 0 единицы
в многоверное преобразование в QE, как-то схлопнувшее что-то,
он как-то переведет это куда-то и что-то получит.
Я не могу понять шаг с многоверным преобразованием в QE.
Я могу написать такую сумму под масками, как сумму под масками?
Еще раз, схема, f и g, жили-были f и g.
Которые были функции из масок и функции из n перемен.
Вот такие функции, мы им сопоставили многочлены.
Сопоставили, потому что неверно, что f будет то же самое.
То есть каждой функции мы сопоставили вот такой многочлен.
У нас была мечта.
Откуда взялась коэффициент?
Это коэффициент, это значение функции f в этой маске.
Да, тут может быть немножко путаница, потому что многочлен и эта функция это неравные функции.
Но теперь мы заметили, что если бы мы нашли произведение этого многочлена,
то тогда бы мы получили многочлен, из которого потом обрубив лишние двойки, мы бы получили радость.
Такой же многочлен, но для того, что нам надо.
Мы сказали следующее.
Что такое многомерное произведение fft по сути?
Мы берем какие-нибудь два, три, четыре значения, находим значение многочленов f и g в этих точках.
Тогда мы нашли, мы решили, а давайте найдем значение многочленов f и g в точках 0 и 1.
В общем, 0 и 1 не потому, что они фолсты.
Ну, в смысле?
Ну, да, да, да.
Каждый х является любым 0.
В общем, 0 и 1 мы взяли не потому, что они фолсты, но потому, что x² равно x.
Как мы этим воспользовались?
Мы знаем значение многочлена соответствующего f, соответствующего g.
Следовательно, знаем значение их произведения.
Но так как в точках 0 и 1 x² равно x, то тогда мы знаем многочлена соответствующего h, соответствующего функции h вот в этих точках.
Если мы посчитали значение всех этих штук, а потом взяли скалярное подчленение.
Ну да, взяли, да.
Ну, не скалярное, а подчленное.
Скалярное это если бы мы их еще и просуммировали.
Да, да, да, конечно.
Вот.
Но тогда получается, что мы нашли значение многочлена соответствующего этой функции в точках 0 и 1 в степени n.
Вот.
Ну и все, что нам остается, теперь это просто...
Мы его нашли, если мы сделали какое-то...
Если мы научились вычислять нужную нам точку.
Да.
Мы во всех их точках вычлили.
Получилось, что у нас тут 2 в степени n значений мы нашли, а мы наращили на h самого 2 в степени n коэффициентов.
Сейчас.
А в какой момент мы нашли эти значения?
Как мы нашли значения этих многоченых в ровных нам точках?
В тот момент, когда мы тупо их перемножили.
Так, секунду. Не, как?
Смотри, когда ты перемножишь значения f...
Ты нашел значение многоченого f в какой-то точке, да?
Как?
Ну, в f и g мы запустили аналог многомерного преобразования фурье.
Вот я это не понял, потому что дальше мы их перемножим очевидно.
Ну, а что я не понял? Ровно так же, как было раньше.
А как это превратилось в такую сумму?
Даже в такую сумму, как это превратилось?
Как эту сумму дальше сворачивать очевидно?
Ну, смотри еще. Откуда мы это взяли?
Смотри, у нас есть многочлен.
Обычная, да? То есть, допустим, есть у нас многочлен a0 плюс, условно, там a1t плюс a2t² плюс a3t в кубе плюс a4t в четвертой,
даже чтобы до степень горьки не цепляться, да?
Напишу, да?
То что такое одномерное fft? Ну, обобщенно.
Это я записываю значения этих многоченых в точках.
Ну, я не знаю, в точке, условно, 57, 179, там, 2007.
Там я не знаю.
Давай, 345, да? Да.
Но в данном случае, в данном случае заметим, что,
ну, то есть, когда мы делаем n-мерное прообразование fft, мы как бы сводим его к куче одномерных, правда?
То есть, мы перебираем каждое направление и по каждому направлению говорим,
что фиксируем все возможные, перебираем все возможные значения остальных, фиксируем их.
А когда мы фиксируем все остальные переменные, да, у нас как бы у этой переменной стоится одномерный многочлен,
именно к нему мы это fft прибавляем и делаем.
Но теперь, смотрите, теперь в нашем случае получилась ситуация, что у нас каждый многочлен имеет размер 2.
То есть, вот он a0 плюс a1t, да?
Мы хотим его заменить на значение в точке 0 и в точке 1.
Но теперь мы просто заметили, что a0 равно тупо a0, а a1 равно тупо a0 плюс a1.
То есть, получается, чтобы превратить, то есть мы, у нас есть массив a0, a1, мы хотим, чтобы в том же самом массиве было написано a0 и a0 плюс a1.
Но для того, чтобы получить из этого массива этот, все, что нам нужно, это просто прибавить к этому к этому числу это.
Что мы вон там везде и делаем.
Почему у нас с лева plus b, а где?
Почему у нас весь точек минус 1 получился а плюс b?
Потому что сейчас я про орг рассказывал.
Не-не-не, с красным маркером.
А красным маркером, потому что красный маркер это то, что мы делали для ксора.
Почему у нас с лева plus b, а этот точек минус 1?
Ну, потому что мы так решили, что здесь будет а плюс b, а здесь а минус b.
Но на самом деле лучше так.
Ну, потому что если вот так, то это будет...
Почему можно как угодно?
Потому что суть у нас одна. Найти значение этих наращенов только уже в токиках не 0.1 в степени, а минус 1.1 в степени.
То есть мы тут подменили, чтобы у нас суть квадратцев подал с нулевой степенью.
Почему мы здесь делаем именно 1 минус 1?
Потому что на самом деле, если вы думаете, что такое fft для массива размера 2,
то если вы там расписали, что такое корни второй степени из единицы, то это будет как раз 1 минус 1, а не наоборот.
Поэтому для отсора мы буквально запустили fft.
То есть не почти fft, а буквально.
То есть на этот раз это оно.
Так что тут вот такая вот маленькая красота.
Ну не совсем. То есть вы тут a плюс b и a минус b.
Но тогда, смотрите, тогда как получить a из них?
Их тоже надо сложить, но только еще пополам поделить.
А тут наоборот, вычистить пополам.
Но это опять то же самое fft.
То есть как бы делаем...
Здесь даже не придется менять ничего.
Да, вы можете просто запустить функцию fft от массивов размера 2.
Но правда, по факту вам лучше этого не делать, конечно, а лучше аналогичный код написать.
Можно просто повторить, а потом сексент назад поделить.
Ну да.
Ну вот. Так что вот такая вот...
Эх, приятная вещь.
Ну в принципе да, остались только две мелочи на самом деле на fft.
Что-то мы быстро идем.
Ну ладно.
Так, ну что? Ладно.
Я уже не понимаю.
Если мы запустим обратное, то тот же самый код просто запустим.
И в конце поделим все коэффициенты по 2a.
Или если мы запустим тот же самый код, и когда получаем a минус b, равно a плюс b пополам и запидаем a минус b пополам.
Ну, получится не совсем...
В самом конце тогда надо будет не на 2 делить, а на 2 в степени n.
Ну да.
Нет, ну на самом деле вы и в обычном fft у вас есть выбор.
В самом конце поделить на n или в каждый момент времени делить на 2.
Когда вы вот это преобразование бабочки делаете.
Помните, вы же как раз...
Помните, у вас там тоже заклинание есть.
У вас есть u, v, и потом там в переменные вы пишете там куда-то u плюс v, а потом u минус v.
Заклинание.
Вот. Знакомое, да?
Так вот, на самом деле один из вариантов обратного произвязывания fft сказать, что если вы делаете обратное, давайте в этот момент под на 2 поделим.
Так что вот такая красота.
Нет, слушайте, а давайте сейчас...
Слушайте, у меня такое предложение.
Давайте сейчас все-таки все fft добьем.
А третью пару мы можем просто начать чуть попозже.
Ну или закончить чуть пораньше, там не важно.
У нас там на четвертой паре за 30 минут до конца начинается экстремация Региросского.
Да?
А, то есть если мы...
А, то есть...
А, ну то есть сейчас самое оно, попродолжать, да?
Окей.
Что?
Как мы избавились от int?
А int избавились очень просто.
Дело в том, что мы просто взяли функции f и j, в них мысленно инвертировали все битики.
И тогда там просто or превратился в int.
И наоборот.
f с чертой такое, что f с чертой от них ремасты.
Ну типа да.
Но самое, что f от полной маски 40.
Ну вот.
Ладно, значит смотрите.
Какой, собственно, простой?
Я сразу скажу простой.
Я думаю, сейчас больше 10 минут у нас тут не осталось.
Просто вот очень хотелось закончить именно этой задачей.
Вот мне кажется, это было бы очень красиво.
Задача такая.
Да, многочлен.
Вот как-то вот именно вот сейчас хочется тогда в конце рассмотреть такую задачу.
Я хочу найти его значение в n точках.
Только на этот раз они мне сверху даны.
В общем, помните, мы с нее-то и начинали.
Поэтому хотелось ей закончить.
Ну ей и ее братом.
Так.
Вот.
Как же это сделать?
Ну вот.
Но правда, да, но честно скажу, да, сразу предупрежду.
Ладно, n лог n тут не будет.
Да, тут будет n лог квадрат.
Чего?
Ну вот.
Ну на самом деле да.
Вот.
Ну вот.
Какое?
Непонятно.
Непонятно.
Ну я даже подскажу, тут тоже разделяй власть.
Да, хочется придумать какие-то более удобные точки, в которых его можно было бы посчитать.
Да.
А лучше посчитать его в чем?
В n полом точках?
А, вот так.
Хочется тоже посчитать его короткую версию в n полом точках.
И другую его короткую версию в n полом точках.
А что такое короткая?
Да, очень хочется свести задачу к...
Очень хочется свести действительно задачу к задаче размера n пополам.
Да, то есть как-то вот сказать, что что-то хочется, конечно, чтобы тут было от...
Чтобы тут надо было бы...
То есть чтобы значение только в этих точках.
n пополам минус один.
И тут хочется, чтобы что-то было от t n пополам, а от t n минус один.
Только не а от, а все-таки...
Ну а от.
Нет, так-то легко сделать.
Ну нет, это как-то разделить что-то там и возможно как-то что-то получить.
Ну хотелось бы.
Правда остается только действительно вопрос.
А как это действительно можно было бы действительно так активно нот так прямо разделить?
И вообще получится ли?
А что если взять n-решлен a0 плюс a2 t2 плюс a4 t4 и так далее?
Взяли и?
Считать в точках t0 квадрат, t1 квадрат.
Взять, заменить все квадраты на обычные степени.
И что?
Потом посчитать его в точках t1 квадрат, t2 квадрат.
И сказать, что это то, что там не было.
Да, но только тогда у вас проблем будет, что у вас квадрат...
Нарешение размера n пополам будет.
Но тогда и точек, в которых вы хотите их посчитать, будет n.
Обид, да?
Да, вот обид.
Да, поэтому да.
В идеале, конечно...
Да, действительно, хотя...
То есть как бы это действительно можно было бы сделать?
Ну можно было бы...
Но на самом деле, смотрите, вот мы хотим какой-то многочлены посчитать его значение вот в этих точках, да?
Но заметим, что если я из этого многочлена вычту какой-нибудь многочлен, у которого значения вот в этих точках равны нулю,
то значение не поменяется, правда?
Прикольно.
Поэтому смотрите, какая идея.
Давайте я вот тут попытаюсь пополам посчитать его значение,
поэтому смотрите, какая идея.
Давайте я вот тут попытаюсь подсунуть многочлен a, то есть подсунуть a минус...
Ну какого вам многочлена, а значения в этих точках равны нулю?
Ну во-первых, мы не можем fft в произвольных точках, а во-вторых, задача построить многочлен n пополам той степени не вырожденный.
Что там n пополам, размер n пополам?
Вот, конечно.
t минус там t0, t минус t1 и так далее.
Но на самом деле просто у вас, ну как бы в перспективе вам придется также их там пополам делить,
поэтому у вас там получится дерево таких многочленов, дерево отрезков таких многочленов.
Вот, каждое следующее это типа произведение детей, кстати, ровно отсюда и лог квадрат появляется.
Да, ну конечно же, если вы вычтете из многочлена a вот этот многочлен,
значение этого многочлена в этих точках будет тем же самым, что и у многочлена a,
но конечно же степень этого многочлена упасть dn пополам не обязана.
Но, фишка теперь такая, раз уж мы тут все равно имеем право на этой высоте делать n log n,
то есть у нас просто идея, что я могу вычесть не просто этот многочлен, а этот многочлен умножить на вообще что угодно, правда?
Так у меня идея такая, а давайте я a поделюсь с остатком вот на это.
И возьму остаток.
То есть я возьму, поэтому я тут а не минус возьму эту штуку, а a процентик эта штука.
То есть многочлен будет в степени строго меньше, чем n пополам, а значения его в этих точках будут те же.
Ну и здесь соответственно a процент, вот это вот t-tn пополам, там t-tn пополам плюс один,
t-tn пополам плюс один, t-tn минус один.
И запустимся к нему рекурсивно.
Да, поэтому остается только их рекурсивно найти.
Но там такая, сначала вам придется построить дерево, вот эти многочлены насчитать, а потом уже идти еще раз так уже вниз и начать брать вот эти процентики, процентики, процентики.
Вот такая красота.
То есть вот так вот.
Ну это получается, это к сожалению n лог квадрата не лог, но это не n квадрат хотя бы.
Ну и правда конечно нельзя тогда не рассмотреть ее брата, называется интерполяция многочлена.
То есть когда мы хотим не по многочлену получить значение, а наоборот по значениям получить.
Вот как теперь по вот таким, вот теперь давайте наоборот.
Как вот по ним получить собственно сам многочлен.
То есть я знаю, что это многочлен размера n или даже менее, у которого значения вот в этих точках равны вот этим системам.
Хочу восстановить многочлен, но я знаю, что как минимум я знаю, что я могу решить там систему лениных уравнений, но я хочу быстрее.
Вот как мне теперь готов этот многочлен восстановить.
То же самое.
Ну погодите.
Сейчас, а зачем нам их считать?
Нет, ну тут смотрите, тут разделяем властность работает так.
Давайте разделим эти точки на две половинки как всегда.
И рекурсивно, вот откуда-нибудь из рекурсии получим такой многочлен, так сказать, аж триг.
Это многочлен размера n пополам, который совпадает с а вот в этих точках.
Тут я получу аж триг и тут я получу а2 штриха.
То есть он совпадает во вторых точках.
Так вот спрашивается, как мне их смиксовать?
На самом деле да.
Но как оно теперь будет работать?
А работать оно будет так.
Но давайте я сразу скажу.
Потому что в идеале я хочу просто расширить этот многочлен так, чтобы он в остальных всех точках левр он был равен нулю.
Как мне это сделать?
Я просто делаю аж триг от t и честно говорю t н пополам минус один.
Значит так t минус t н пополам t.
Значит t минус t значит n пополам плюс один.
Ну и так далее.
Значит t минус t н.
Вот, понимаете, да?
Ну как бы вот эти многочлены мы уже научились за n лог квадрат насчитывать, да?
И тут все равно за n лог н домножим.
Правда есть маленькая проблема.
Проблема заключается в том, что да, в этих точках многочлен равен нулю, но в точках t0, t1 и так далее...
Да, он уже не очень понятно вот.
Он уже, я бы сказал, даже к черту чему равен, правда?
То есть на самом деле мы теперь можем заметить, что да, что теперь вот эта штука, если так домножить, то он в t0 будет...
То есть значение домножится на фактике вот t0 минус t н минус пополам вот этого.
Да, но надо тогда все значения поделить.
В смысле? Давайте...
Все левые значения.
Перекурсию передавать.
Да, другие значения. Да, совершенно верно.
Откуда мы их сейчас возьмем, правда?
В смысле?
t1 минус t.
А, ну да, но тут мы обнаружим, что мы уже интерполяцию, то есть это подставлятие на значение умеем.
Это лог квадрат, что ли?
Да.
Господи.
Да.
Да, то есть идея такая, что мы каждое вот это значение будем на самом деле делить.
Делить вот на такое число.
То есть фактически что нам нужно для того, чтобы их вот так поделить?
Нам надо найти, взять вот этот многочлен и подставить в него числа t0, t1, t2 и так далее.
Да, они все не равны нулю, поэтому можно поделить.
То есть это поделим так, то поделим, то поделим, то поделим и так далее.
Вот.
И тогда получится, что итоговую мы обнаружили, тогда мы домножаем на эту штуку и тогда он получается ради того, чего надо.
Ну, делаем это, делаем то же самое с этой стороны, складываем, радуемся.
Вот.
Да, получается лог квадрат.
Вот. Да.
Так что вот такое вот шоу.
Вот.
Как говорится, вот таким вот было быстрое преобразование фурье.
Господи, что ж вам еще рассказывать-то теперь?
Нет, ну, точнее я найду, что рассказывать.
Честно говоря, я даже не ожидал, что мы так быстро закончим.
Но судя по всему, знаете, когда вы рассказывать не три пары подряд и четыре пары подряд, все-таки свои преимущества имеет.
Нет, просто я вас могу, кстати, могу вас поздравить, по меркам как минимум двухлетней, даже однолетней давности мы только что закончили программу первого семестра.
Нет, заметьте, и это при том, что софт-хипа там не было.
