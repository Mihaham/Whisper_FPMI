Всем доброго дня! Сегодня мы с вами продолжаем проходить тему конечных преобразований.
И сегодня нам важной целью будет доказать именно то, что конечные преобразования замкнуты относительно контекста свободности.
То есть вот у нас был факт, нам нужно доказать теорияму 5. Давайте я замучу пока кого-нибудь из вас.
Я догадываюсь, что надо сделать вот так. Если я ошибаюсь, то извините.
Фак, которым мы доказываем, мы будем говорить, что если у нас L является контекст свободным языком,
то образ контекста свободного языка как соответствие тоже является контекст свободным языком.
Мы сегодня с вами докажем этот факт. Получается теорияма 5 у нас с вами.
Давайте сформулируем. У нас есть LKS язык. Psi это конечное преобразование.
Тогда нам надо показать, что Psi от L является контекст свободным языком.
Давайте поймем, какая идея доказательства. Идея доказательства состоит в том, что у нас есть с вами теремнева.
Поэтому давайте воспользуемся ее. Напоминая, что это французская фамилия, ударение всегда ставится на последние слова.
Мы знаем с вами, что Psi это такая вещь. Это у нас с вами обратный гомоморфизм неудлиняющий.
Это у нас ограничение на регулярный язык. И это у нас с вами еще один неудлиняющий гомоморфизм.
То есть у нас напишу Psi и Phi неудлиняющий гомоморфизм.
Тогда смотрите, что мы с вами можем сделать. Нам надо доказать три факта.
Первый факт заключается в том, что если у нас Phi гомоморфизм, есть какой-то L, это KS язык.
Нам надо доказать, что Phi в минус 1 от L это тоже KS язык.
Второй факт. Он немножечко сложнее. Нам нужно с вами показать, что если у нас с вами L KS язык,
тогда ID R от L, что является L пересечь с R, это KS язык. Если R у нас регулярный.
То есть мы с вами говорили следующий факт.
Мы с вами говорили, что у нас контексты свободной языки не замкнуты относительно пересечения.
Но оказывается, они замкнуты относительно пересечения с регулярным языком.
Этот факт я как раз оставлял на конец, чтобы его сегодня попытаться доказать.
И мы его с вами будем доказывать через построение еще одной нормальной формы.
Третий факт, который у нас есть с вами. Пусть у нас с вами есть это гомоморфизм.
Давайте опять же.
C есть гомоморфизм, L KS язык, тогда образ при гомоморфизме у нас с вами тоже является KS языком.
Вот такие три факта у нас с вами есть.
Если мы их докажем вместе, то понятно, сначала у нас с вами идет KS язык,
потом берем образ, потом образ.
И потом еще раз образ мы с вами берем и получаем то, что мы, собственно, хотим.
То есть у нас как раз складывается целиком картинка.
По этим моментам понятно?
То есть что мы с вами будем, какие три факта мы с вами будем показывать?
Давайте сделаем вот так.
Двигаемся дальше.
Вот никого не слышу, в чате тоже пустота, тишь да гладь.
Здесь все понятно.
Хорошо, давайте тогда отвинемся дальше и докажем с вами как раз сначала про гомоморфизм.
То есть начнем с доказательства третьего пункта.
На самом деле не все просто.
Смотрите, давайте рассмотрим L. У нас он является KS язык.
Следовательно, существует такая грамматика G, N sigma KS.
Такая, что язык задаваемый грамматика G равно L.
Но тогда мы с вами можем сделать достаточно все просто.
Давайте рассмотрим G в нормальной форме холмского.
Напоминаю, что у нас правило там имеет три вида.
У нас либо из SV epsilon, либо мы делаем из A в BC, либо из A в A.
Да, ну тогда давайте построим грамматику G' для Fiat L.
На самом деле давайте я даже вот так сделаю табличку.
Давайте вот этому перенесем с вами.
Ну видно, смотрите, тут важно что показать.
Как эту штуку мы с вами будем преобразовывать для гомоморфизма.
Что у нас с вами получается?
У нас с вами получается, что вот это преобразование нам надо все буквы перенести в право.
При этом мы понимаем, что если мы хотим сделать гомоморфизм,
то каждая буква должна перейти в образ этой буквы при гомоморфизме.
Поэтому мы сразу скажем, что это правило у нас перекроет из A Fiat,
а остальные мы с вами не меняем.
Да, ну и тогда можно показать, что если у нас здесь у нас в грамматике G выводилась дубль V,
тогда и только тогда, когда в грамматике G' мы с вами вводим Fiat V.
Там делается какой-нибудь индукция под линией вывода в обе стороны.
Для любого A.
То есть мы по сути с вами будем доказывать следующий факт.
А и G выводится W, тогда и только тогда, когда из A у нас уже штрих выводится W'.
Ой, не W', а Fiat W.
Ну индукция не сложная, я не хочу сейчас тратить время на то, чтобы ее показывать.
Так, хорошо. С этим пунктом понятно, как делается?
Давайте активнее быть. Я, конечно, понимаю, что конец семестра и всякое такое, но это...
Ну да, все понятно.
Хорошо, теперь погнали с первым пунктом. Покажем.
То есть у нас с вами есть L, KS язык.
Дальше у нас с вами есть phi, не удлиняющий коммоморфин.
Тут важно, что он у нас не удлиняющий.
А дальше нам надо с вами показать, что phi в минус 1 это от L у нас тоже будет KS язык.
И смотрите, что нам надо получить с вами.
Нам на самом деле нужно понять, чему равняется прообраз буквы.
Потому что если у нас с вами V принадлежит phi в минус 1 от L, тогда и только тогда,
когда получается phi от V принадлежит L.
Да, ну у нас есть такое с вами соотношение.
И соответственно, если мы хотим понять, как у нас буква будет работать при прообразе,
то есть как ее можно получить, важно, что у нас коммоморфизм не удлиняющий.
И давайте это как раз рассмотрим.
Опять же, давайте поймем следующее.
Пусть у нас есть phi и давайте рассмотрим такое множество гомоэпсилон.
Мы на самом деле с вами его уже в прошлый раз рассматривали, когда доказывали для неавтоматности.
Здесь мы с вами что говорим?
Давайте мы посмотрим все буквы из алфавита исходного.
Такое, что phi от A равно ε.
Да, мы можем с вами коммоморфизм настраивать на отдельных буквах.
И для гамма давайте от буквы α, пусть будет, это множество всех букв A из гамма,
таких, что phi от A равняется α.
Я почекну, что α это у нас буква.
Тогда давайте поймем, чему равняется phi в минус 1 от ε.
Гомоэпсилон.
Гомоэпсилон.
Да, только со звездой.
То есть у нас с эти буквы мог повторяться какое-то количество раз.
Да, это важно.
И смотрите, что еще важно я забыл сказать.
Важно, что гомоэпсилон объединить по всем α.
Гамма альфа это гамма.
Да, то есть так, поскольку у нас гомоморфизм не удлиняющий.
Сумма гомоэпсилон.
Ой, сумма, я молодец.
Давайте объединение напишу.
Это все-таки объединение.
То есть объединение по всем гомоэпсилон и гомоэпсилон у нас гамма.
Потому что образ любой буквы при гомоморфизме это любое пустое слово, либо альфа.
Так как у нас phi не удлиняющий.
Так, смотрите.
То есть у нас получается phi в минус 1 от ε это гомоэпсилон со звездой.
Теперь смотрите, что мы с вами сделаем.
Скажите, чему тогда равняется у нас phi в минус 1 от а?
От альфы.
Гомо-альфа плюс гомоэпсилон со звездой.
Точнее тут надо, потому что если...
С плюсиком.
А ну или там?
Типа гомоэпсилон со звездой, гомо-альфа гомоэпсилон со звездой?
Да.
Потому что, смотрите, если у нас есть слово phi от v равняется альфа, то наше слово w мы можем распилить на три части.
Вот первый кусок у нас может отобразиться в ε.
Второй кусок у нас отображается в альфа, а все остальное отображается в ε.
Вот.
Ну, что мы с вами можем сказать?
Мы можем сказать с вами, что мы с вами...
Давайте заведем.
Не терминала.
s альфа.
Значит, что они будут делать?
Нам нужно построить с вами грамматику, которая из s альфа будет выводить phi в минус 1 альфа.
То есть идея, вот у нас с вами есть какое-то слово, нам надо его задать грамматикой обратным преобразованием.
Напоминаю, что phi в минус 1 альфа – это у нас γ ε со звездой, γ альфа, γ ε со звездой.
Так как у нас γ ε со звездой, γ альфа, γ ε со звездой регулярный,
это несложно видеть то, мы можем построить
γ альфа равный что-то там, и, по-моему, там четвертый символ – это s альфа, выводящий этот язык.
Распознающий этот язык.
И тогда мы с вами можем построить теперь грамматику для обратного гоморфизма.
Опять же, пусть у нас с вами был l, который у нас находился, грамматикой вида l это g, g это nf хомского.
Давайте посмотрим, как мы будем строить с вами phi в минус 1 от l.
С учетом того, что у нас этот факт есть. Нам опять же надо рассмотреть три правила.
Первая – это g ε, вторая – это из a в bc, а третья – это из a в a.
Давайте поймем, во что у нас первое правило превратится.
В g ε?
Ну, да, g ε.
Смотрите, тут можно сказать, что это s должно превратиться в стартование терминала для s ε.
Ну, для s ε, s ε выводит g ε со звездой.
Ну, это достаточно легко построить. Давайте даже я сейчас скажу, как построить это.
Значит, грамматика будет такая.
Тут у нас получается, из s ε выводится любой символ.
Давайте x, s ε, а из s ε у нас может вывести с x.
Нет, давайте из s ε вводится x.
Где у нас любой x берется из g ε?
Такая грамматика у нас с вами для g ε со звездой будет.
Я тут ее просто детально привел, чтобы было понятно, как она строится.
Хорошо, что со вторым правилом делаем?
Ничего не надо.
Да, мы ничего не делаем.
А с третьим?
Почему мы во втором правиле не можем в начале добавить ε в серединке и в конце?
А смысл?
Ну, типа у нас же и так грамматика без ε порождающая.
Хотя можно.
В принципе, не надо, индукционным шагом можно получить.
Давай лучше все-таки добавим.
Я что-то так подумал.
На всякий пожарный.
Да, я согласен, что промежутки можно вывести.
Так, из а.
С третьего правила что у нас получается?
А в с а?
Да, а в с а.
На самом деле получается такая замена, и дальше а мы раскрываем.
На самом деле тут можно попытаться доказать в качестве упражнения.
Я вот сейчас понял, что ε в этом месте не нужен.
Давайте я напишу.
Эсэпсиум вот здесь не нужен.
Потому что на самом деле в с а у нас так есть эсэпсиум.
Так, понятно ли в чем тут идея?
Как ее докручивать?
Да.
Все, хорошо.
Теперь давайте разберемся с самым основным фактом.
Его можно доказывать в одну сторону более простым способом.
То есть напрямую.
А можно доказывать более сложным образом.
И более сложный образ нам нужен будет для того, чтобы некоторые свойства грамматик можно было упрощать и свойства МП автоматов.
А именно мы сейчас займемся вопросом следующим.
Что если у нас L это КС язык, R это регулярный.
Тогда L пересечь с R КС язык.
Давайте я сейчас просто сделаю цепочку выводов, из которых мы это будем получать.
Это будет на самом деле следовать из факта, что существует МП автомат.
Такое, что для любого перехода вида q1, u, а, q2b.
Смотрите внимательно.
Длина u равняется единиц.
То есть автомат без эсэпсиум-переходов.
Да, это интересный факт.
Мы с вами доказывали в прошлые разы, что у нас длина на входе не больше чем 1, а сумма альфы и бета равняется единиц.
Теперь мы снимаем ограничение на сумму альфы и бета, но мы кладем ограничение на букву u.
Мы с вами строили подобные автоматы уже из КС граммати.
Но здесь мы с вами сделаем еще один фентушами.
Мы с вами построим нормальную форму, которая будет называться грейбах.
Сразу скажу, что грейбах это женская фамилия, она не склоняется.
Женские иностранные фамилии не склоняются.
И давайте мы эту цепочку с вами как раз и проработаем.
Значит, смотрите, что мы с вами скажем.
Мы с вами скажем, что грамматика же находится в нормальных формах грейбах, если все ее правила имеют вид.
Первый вид правил – это такой, a, b, c.
Второй вид правил – это a, a, b.
Третий вид правил – это a в a.
И четвертый, давайте вот так сделаем, это s в epsilon.
А еще надо сказать, что b и c – это не стартовые, конечно же.
Итак, скажите, в чем отличие ее от нормальной формы Хомского?
Первые два правила совсем другие.
Да, но они при этом похожи чем-то с нормальной формы Хомского.
То есть у нас в нормальной форме Хомского было a в b, c.
Это хомский.
Здесь правила a в a, а здесь s в epsilon.
Как вы думаете, при помощи какой нормальной формы парсить проще будет?
Грейбах.
Да, грейбах на самом деле, потому что здесь главная идея, что у нас вытаскивается каждый раз одна буква.
Если мы просто сделаем с вами алгоритм Покайонгера-Косами, то там константа будет значительно ниже.
Ну, потому что если мы посмотрим с вами динамику по подотрескам, которая у нас была, то у нас первый символ снимается.
То есть мы сразу спускаемся на плену на 1 меньше.
Но минус этой грамматики состоит в том, что в ней будет очень большое количество нетерминалов.
Значит, это плюс, минус большое количество нетерминалов.
Сейчас мы это с вами как раз и будем видеть.
Так, определение понятно? Нормальная форма? Грейбах.
То есть идея, еще раз, вытащить первую букву в любом правиле, кроме s в epsilon.
Давайте сейчас я веду некоторое определение.
Точнее, немножечко поговорю про мысль, как мы будем приводить к нормальной форме Грейбах.
И дальше я чуть-чуть формализую.
Смотрите, нам надо как-то вытащить первую букву из дерева вывода.
Давайте рассмотрим такую ситуацию.
Что у нас с вами есть дерево A, и первый не терминал, который у нас раскрывается, это не терминал B.
Сразу скажу, что давайте рассмотрим G в NF Хомского.
Смотрите, мы вводим не терминал B, а дальше мы говорим, что мы вводим какое-то слово W.
То есть вытащим именно первый не терминал из этого дерева вывода, который у нас с вами есть.
Понятно, что B дальше раскрывается в какое-то под деревом.
Тогда давайте подумаем, как мы можем вывести W.
Для этого введем обозначение.
Я, может быть, не буду ввести ее в классической нотации, но давайте, чтобы понять.
Мы будем говорить, что введем не терминалы вида A без B, которые будут выводить W тогда и только тогда,
когда из A мы можем вывести B в W.
То есть мы хотим вот эту картинку с вами превратить в вот такую картинку, чтобы у нас A без B выводил W.
Давайте я только все-таки это дерево нарисую.
Вот такая идея.
А теперь давайте поймем, как у нас такая картинка могла появиться.
Смотрите, берем A и берем первый момент вывода, когда у нас появился не терминал B.
Первый момент вывода.
Напоминаю, у нас нотация такая, что внутри под дерева вот этой куска елки мы будем писать количество раз, за которые у нас это все раскрывается.
У нас с вами раскрылся какой-то не терминал B, а тут, допустим, у нас с вами будет не терминал, пусть D будет.
А здесь у нас будет с вами не терминал C тогда.
А здесь у нас пусть будет какое-то слово U.
Тогда давайте придумываем как раз с вами, как мы будем менять A без B.
Давайте я зелененьким подчеркну.
Понимаете ли вы, как мы можем теперь вывести U в наших нотациях?
A без C.
Да, A без C. То есть смотрите, что мы делаем. Мы говорим, что в конце мы вводим с вами A без C.
Так, хорошо. Можно было бы сразу написать, что это A без C и получается C без B, но это нам ничему не приведет.
Поэтому давайте рассмотрим вот здесь первый не терминал, который у нас с вами раскрылся.
Первый терминал из D.
Почему он существует?
Из нормальной формы Хомского.
Да, в нормальной форме Хомского D у нас не эпсилон порождающий.
Так, что мы с вами получаем? У нас получается, смотрите, есть какой-то не терминал E, который дальше порождает E.
Вот эту штуку давайте я напишу.
За один шаг у нас порождает E.
Теперь рассмотрим вот тут пусть у нас было P.
Там же могло быть много не терминал.
Где, где, где?
То есть там E могло быть по 1, по 2 и так далее. Мы же из D не за один шаг вывели такое.
Нет, из D не за один шаг. Мы именно смотрим вот этот кусок у нас за один шаг.
То есть посмотрим, как тут первая буква из D вышла вообще.
Да, понятно, что у нас там еще много спочек не терминалов.
Но понятно, что когда эта спочка не терминалов у нас прервется и у нас из какой-то буквы выведется...
Пусть первая буква вот этого слова, которая выводится, это буква E.
Мы вывели из какого-то терминала E.
Тогда давайте допишем наши правила.
То есть нам надо, смотрите, нам надо обозначить вот эту букву E.
А с другой стороны нам надо еще обозначить вот эту, как мы вот это слово P могли вывести.
Давайте я по маленьким буквам напишу.
Как мы с вами могли P вывести в наших терминалах?
D без E.
Ага. D без E.
И что осталось еще?
Ну нам надо первую маленькую букву вывести.
Получается E.
Да. То есть смотрите, что у нас получается.
Мы будем добавлять правила вот такого типа.
Да, то есть если у нас с вами есть цепочка...
Да, вот я идеологию рассказал.
Теперь как это все приводить?
То есть у нас с вами...
Во-первых, пусть у нас с вами G' это будет N'εP'.
Так, стартовый не терминал пусть будет S.
Теперь смотрите, N' у нас с вами будет состоять из вот таких правил.
Это стартовый не терминал.
Объединить со всеми не терминалами вида A, B.
Ну так сейчас.
A, B принадлежащим M.
Да, то есть это первая цепочка.
То есть это те не терминалы, которые мы с вами определяем.
Дальше смотрите правила, как мы определяем.
Первое правило, которое у нас с вами появляется,
это вывести из вот такой вот штуки ε.
Да, то есть что из не терминала без его того же мы можем вывести только пустое слово.
Второе правило, которое у нас с вами будет, это нам надо стартануть.
Ну тогда мы можем с вами сказать.
Давайте посмотрим первую букву A, которая выведется у нас из S.
А здесь напишем S без A.
Причем у нас с вами есть правила AA, принадлежащие правилам грамматики.
То есть вот эта картинка давайте я вот сюда нарисую.
Мы с вами из S что-то выводим.
Потом смотрим A, который раскрылся в первый раз в A.
За один шаг.
И дальше те правила, которые мы с вами написали.
Давайте я как раз его с картинки спишу.
Значит, что у нас получается?
Правила из A без B.
У нас с вами выводится E, D без E, A без C.
При условии того, что...
Так, давайте смотреть.
Какие у нас правила грамматики были?
Значит, у нас было правило грамматики C, B, D.
C, B, D без E.
Стрелочка E тоже принадлежит правилам грамматики.
Тогда мы с вами сможем построить именно вот эту картинку.
Можете, пожалуйста, объяснить вторую скопочку в объединении?
Вот эту?
Да.
Она обозначает, от кого мы можем стартануть.
То есть мы говорим следующее.
Нам же надо опять же ототкнуться от стартового терминала.
То есть мы выживаем слово и стартоваем терминал.
Идея такая. Давайте посмотрим первую букву, которую мы можем вывести
и понять, из какого правила оно выводится.
Тогда мы понимаем, что у нас слово выводится из первого не терминала A,
оно выводит букву A маленькую.
А вот эту вот штуку как раз мы и оставляем под вывод S без A.
У нас для каждых двух не терминалов есть X без Y.
Да.
То есть мы сразу видим, что у нас количество состояний увеличивается в квадрат раз.
То есть мощность N-штрих, мы с вами видим, что это
о, большое от мощности N в квадрате.
Можно вопрос про третью скобку?
Мы не должны наложить какие-то ограничения на A?
То есть чтобы оно в каком-то правиле тоже?
Да не, не надо.
Мы же рассматриваем все гипотетические такие случаи.
Просто там понятно, что если построить приведение громадских нормальных форм и грейбах таким способом,
там просто будет видно, что множество из этих символов будут недостижимыми.
Ну и мы на них дружненько забьем.
Или непорождающие.
Ну то есть тут квадрат, но тут квадрат мусора будет.
То есть ну какие-то существенно значимые кстати немного.
Так, давайте выясним.
Сделаем мы перерыв для того, чтобы это осмыслить.
Или двинемся дальше?
Двинемся дальше.
Хорошо, давайте тогда дальше.
Двинемся.
И теперь нам надо будет с вами доказать следующий факт.
Именно утверждение.
Которое говорит слева, ну по сути лево, что для любых a и b принадлежащих n,
для любого w и sigma со звездой у нас с вами получается a выводится bv в грамматике g тогда и только тогда,
когда a без b вводится в w в грамматике g'.
Давайте сначала покажем факт слева направо, а потом факт справа налево.
Справа налево он сильно проще, потому что там вывод в грамматике просто пишется.
Поэтому давайте начнем с факта слева направо.
На самом деле часть доказательств мы с вами провели уже.
И начнем наше доказательство индукции по длине вывода.
База.
Количество шагов ноль.
Тогда из этого мы сразу понимаем, что a равно b, а w равно epsilon.
И мы хотим, чтобы a без b у нас с вами выводил epsilon.
Но мы с вами специально добавили правила a без a в правилах грамматики.
Вот оно у нас у нас у нас правила есть в правилах грамматики p'.
База доказали.
Теперь переход.
Я могу тут написать так. Замык картинку.
Потому что на самом деле мы с вами в картинке это все показали.
Ну давайте я сейчас еще раз напишу.
Значит у нас с вами a выводит bv.
То есть еще раз a выводит bv.
Значит найдем c такой, что он за один шаг выводит это bd.
Дальше у нас с вами получается вот эта картинка превращается в вот такую вещь.
c bd за один шаг.
И еще нам нужно с вами из d вывести e за один шаг.
Вот у нас у нас с вами картинка. Я продублировал.
Смотрите, сделаем D, E, пусть Z, и за один шаг мы делаем EZ, первая буква.
То есть у нас с вами получается вот так.
И мы можем сказать тогда, что у нас, а тут пусть А будет.
То есть получаем вывод, А выводит счет СУ.
Дальше у нас получается с вами вывод BDU, и дальше вывод EZU, и вывод EZU.
Ну тогда смотрите, что мы с вами можем сказать.
Мы можем с вами сказать, что D выводит EZ, следовательно D без E выводит Z в Z'.
И дальше мы можем сказать следующее, что C без D.
Так, а, у нас получается A выводит СУ, следовательно A без C выводит ZU.
Да, и получаем мы с вами на самом деле следующее, что мы можем с вами сказать.
Давайте рассмотрим правила грамматики, которые у нас было.
Вот это вот A без B выводит у нас с одной стороны.
Так, сейчас E.
У нас получается, там неправда написано, где BDU выводит EZU, потому что B исчезла.
А, стоп, вернем зад Б. Вот так получается. Получается Без У.
Получаем, A без B выводит Е. Дальше у нас получается D без E.
А по предположению индукции, вот тут мы работаем, вот это все предположение индукции.
Получаем с вами, что вот это EZU, а ЕZU это у нас как раз слово W.
Все, сделаем переход.
А вот мы как-то никак не задействовали вторую скобку, которая была, где один терминал.
Ну, в смысле, где одна буква и один не терминал в нашем доказательстве.
Где, где, где, где?
Вторая скобка, там, где у нас EZU выводится А, и вот эта фигня.
А, мы сейчас ее даем. Мы пока еще не воспользовались.
Вот мы сейчас утверждение индукции докажем, потом мы покажем, что это.
И стартовым терминалом вводится слово тогда, и только тогда, когда это.
То есть в обратную сторону, когда будем доказывать, это нам понадобится?
Даже не в обратную сторону, мы когда будем доказывать уже соответствие, что эти две грамматики распознают один и тот же язык.
Там мы этим поспользуемся.
Так, ну, в одну сторону мы с вами показали.
В вторую сторону все намного проще.
Опять же, делаем индукцию по длине выводов же штрих.
База.
Так, давайте вот так сделаем.
Значит, A без B у нас за один шаг выводит слово W.
А, теперь смотрим на правила нашей грамматики.
Где же мы за один шаг могли с вами вывести слово?
Только в первом случае.
Да, только в первом случае.
Значит, у нас получается W равно Эпсилон, B равно A.
Ну, тогда у нас получается A вводит A Эпсилон.
Все, чисто.
Теперь переход.
Смотрите, что мы говорим.
А без B каким образом могли получить?
A без B за один шаг вывода.
У нас работает какое-то правило.
Давайте я напишу вот так.
Я сейчас символы от балды возьму.
Да.
Значит, главное.
Да.
C без D.
И главное, чтобы у нас остаковка была здесь.
Так.
A без F.
Сделаем маппинг небольшой.
То есть я специально написал вот такую вот вещь.
Причем мы с вами видим, что тогда у нас должно быть правило.
Причем D у нас выводит E, принадлежит правилам грамматики.
Да, я специально поменял буквы, чтобы было понятно немножко.
Так, а здесь давайте я просто скопирую это правило.
Значит, я просто перепишу сейчас.
Значит, у нас, смотрите.
Я просто вижу, что у меня происходит на доске.
Вы тоже можете за этим следить.
Значит, смотрите.
У нас с вами вот этот вот не терминал.
В нашем случае это C.
А здесь эта штука, которая выводит вот эту штуку.
То есть у нас получается с вами из F.
Тут у нас E, C без D, A без F.
То есть у нас получается F меняется на C.
Значит, B остается.
А вот это D, в нашем случае это C.
Я сейчас просто, я вот так написал, как это получается.
У нас с вами.
А теперь смотрите, что у нас с вами получается.
Нам нужно показать, что мы можем сделать.
Значит, смотрите.
Мы говорим, что C без D выводит некоторое слово U.
Следовательно, у нас C выводит DU, по предположению индукции.
Дальше.
A без F.
Пусть у нас выводит V.
Следовательно, у нас C выводит FV, по предположению индукции.
A выводит FV, по предположению индукции.
И теперь смотрите, что мы с вами должны вывести.
Нам нужно из A вывести EUV.
Поехали расписывать.
Значит, что у нас есть?
FV.
Дальше F мы можем заменить на BCV.
C мы заменяем на DU.
B, D, U, V.
А здесь мы заменяем D на E.
EUV.
Да, то есть мы здесь с вами выводим EUV, а здесь мы с вами выводим из A в EUV.
Ну, кажется, сошлось.
То есть получается индукционный переход делается намного проще.
Вы этот, вот здесь.
Так, факт в обратную сторону.
Пойдете?
Хорошо, теперь давайте докажем, что lg равняется lg-стрик.
Так, смотрите, что у нас получается.
Получается, что FV принадлежит lg тогда и только тогда, когда из S мы выводим с вами слово W.
А сразу скажем следующее.
Что если у нас S выводит W.
Тут может два случая быть.
Первый случай.
Первый случай.
Первый случай.
S выводит epsilon, то есть W равно epsilon.
Ну, тогда переносим правило S в epsilon g-стрик.
Да, то есть, да, я забыл сказать, что я тут забыл написать одно правило, кажется.
Да, давайте его все-таки допишем.
Тут его не хватает у нас с вами.
То есть S epsilon, если у нас S epsilon принадлежал правилу P.
Да, нам его не хватало для разбора.
Ну и второй случай.
W не равно epsilon.
Тогда у нас, смотрите, получается W равно au.
Да, то есть, если у нас получается S выводит за какое-то количество раз.
Тут надо сказать, что у нас появляется некоторый терминал A, который выводит U.
И потом за один шаг мы выводим au, так как у нас g в nf-хобского.
Да, мы опять же смотрим первый раз, когда мы раскрыли терминал A.
Получаем полемию, полемию имеется в виду по утверждению.
У нас получается с вами S без A выводит U.
А значит, у грамматики g-штрих мы можем написать следующее.
Да, тут важно сказать, что при этом у нас будет a-стрит.
Так, смотрите, что у нас получается.
Мы получаем с вами, что S без A выводит U.
Значит, S в грамматике g-штрих мы можем сказать выведет A.
A, S без A.
Да, у нас было такое правило в грамматике.
И потом мы с вами еще один раз прогоняем, получаем au.
То есть это доказательство, что l-adj вложено в l-adj-штрих.
Это раз.
Теперь в обратную сторону.
Пусть у нас l-adj-штрих вложено в l-adj.
Как мы тут стартуем?
Мы стартуем с л-adj-штрихом.
Мы стартуем с л-adj-штрихом.
Пусть у нас l-adj-штрих вложено в l-adj.
Как мы тут стартуем?
Мы стартуем здесь с g-штрих, A, S без A.
Где A без A прожит в правилах грамматики P.
Да, то есть опять же мы говорим с вами, что w равно au.
Получаем S выводит g-штрих, A, S без A.
И получаем, что тогда у нас S без A вводит u.
В итоге получаем следующий вывод.
Значит, как мы выводим с вами?
В итоге у нас получается S выводит au,
а здесь z мы вводим au, то есть тоже самое w.
В итоге мы с вами доказали теорему,
которую мы с вами хотели.
То есть самая сложная идея здесь,
это нарисовать картинку.
То есть еще раз, самая фишка,
это нарисовать вот эту картинку.
И идея того, что давайте рассмотрим то,
что у нас может выводиться без первого не терминала,
который мы выделяем.
А какую теорию мы сейчас сказали просто,
что мы возможно привести к этой форме?
Да, что любую грамматику можно привести к нормальной форме греймах.
А где, кстати, вообще можно использовать нормальную форму греймах?
А мы сейчас ее будем использовать как раз.
Алексей, ты скорее всего не сходу пришел,
вот мы тут строили план, что мы будем делать.
Ну да.
Имел в виду практическое использование.
Практическое использование,
но мы можем сильно уменьшить симпатику в кокаинг и ракасами.
Время на обработку,
но при этом у нас количество терминала станет сильно больше в квадрат раз.
Так, люди, скажите, где я вас обманул?
Обман на экране скрывается.
Может из этой буквы А могла выводиться изначально?
Нет, такого быть у нас в принципе может быть,
но ладно, оставим такое правило.
Такие правила у нас могут быть.
Тут есть на самом деле один подвох,
который говорит, что это грамматика не в нормальной форме греймах.
Вот сейчас, если посмотреть на правила поштриха.
У нас связа без А следует эпсилум?
Да, у нас с вами есть эпсилум переходов.
Как избавляться будем от них?
Как они происходят?
Сделаем алгоритм избавления эпсилум-переходов.
Как они происходят?
Сделаем алгоритм избавления эпсилум-переходов.
Эпспора ждающих.
И там получится, что как раз у нас и появится правило вида из А следует из Б.
То есть смотрите еще раз.
То есть у нас что может быть?
Какие правила?
У нас есть правило из А, АВЦ.
Есть правило из А в АВ.
Значит, если у нас получается, если у нас В выводит эпсилум, то мы делаем плюс.
А выводит АВ, АС.
Да, но если С эпсимум-порождающий, то мы делаем аналогичный вывод.
А если здесь В эпсимум-порождающий, то мы добавляем правила.
А вводит Б.
Ой, А вводит А.
Только тут стрелочки у нас были.
Так, ну теперь вроде верно.
Все.
Поэтому перенесем вот этот перенос.
Конец доказательств вот сюда.
Так.
Ну что, давайте двигаться дальше тогда.
Теперь нам нужно доказать следующий факт по цепочке.
А именно сказать, что любая грамматика задается...
Как сделаем?
Это теорема.
Это по-моему теорема у нас 6, если я не ошибаюсь.
Что любой МП-автомат можно привести в яквиду.
Ку1 А альфа, ку2 бета.
Где А принадлежит Сигну.
Давайте напишем вот так.
Да, то есть автомат без эпсимум-переходов.
Ничего, давайте доказывать.
Давайте L от M равняется L.
Следовательно, построим G в NF-грейбах.
Можем?
Можем.
И дальше нам нужно правило переходов, которые у нас были.
Давайте я напомню конструкцию, которую мы с вами встроили в прошлый раз,
когда мы строили по CS-грамматике МП-автомат.
Напоминание.
CS в МП.
У нас конструкция была такая.
Здесь у нас было Эпсилон, Эпсилон С мы клали.
А потом делали следующее.
Эпсилон А альфа перевернутая.
Это у нас в состоянии был завершающим.
Либо А аэпсилон.
То есть мы снимали символ алфавита.
Эпсилон.
Да, и тут у нас были проблемы с тем, что вот эти вот у нас были эпсимум-переходы.
То есть для NF-грейбах у нас была бы картинка такая.
Давайте я канонические случаи покажу.
Значит, смотрите, картинка у нас была бы такая.
Значит, А аэпсилон.
Здесь бы у нас было Эпсилон А, А Б С.
Либо Эпсилон А, А Б.
Либо Эпсилон С, А Б С.
Либо Эпсилон С, А Б.
А, ну еще могут быть переходы вот такие вот у нас.
Эпсилон А, А.
Вот такой лепесток у нас получается.
И давайте подумаем, можем ли мы этот лепесток каким-нибудь образом упростить.
Так, чтобы мы при этом сразу с вами это.
Со входа до что-то кушали.
Вспоминаем, как мы все переходы в обычном автомате выбираем.
Ну вот все эти переходы, где по правилам мы можем, наверное, заметить, что мы читаем букву А.
И потом делаем А, Б, С.
Да, именно так.
То есть смотрите, что мы с вами делаем.
Сейчас это можно сделать более формально.
Давайте я предлагаю пока что на неформальном уровне остановиться.
Потому что там еще две индукции будут.
Но алгоритм будет ровно таком же как удаление Эпсилон Перехода.
Потому что здесь мы это с вами должны делать.
То есть смотрите, первый переход, который у нас с вами будет, давайте я их буду стягивать.
То есть мы читаем А.
Потом стартовый не терминал мы съедаем.
Кладем нас так и его разворачиваем.
То есть у нас получается с вами...
Давайте я подчеркну специальное действие.
То есть мы берем вот этот переход.
Потом мы берем, допустим, вот этот переход.
И вот этот переход. И объединяем их вместе.
То есть это у нас первый идет.
Это у нас идет второй.
Это у нас идет третий.
И мы получаем, значит, что со входа мы...
То есть смотрите, кладем С.
Давайте появление стека проиммулируем.
У нас С.
Потом на стеке у нас получается А, Б, С.
А потом мы снимаем А, получаем Б, С.
То есть нам достаточно здесь со входа положить Эпсилум, а на выход вплюнуть Б, С.
Аналогичным образом у нас получается правило вида вот такого.
Ну, если у нас было, допустим, правило из С выводится А, какой-то не терминал.
А нам же нужно забрать С из стека?
Не-не-не, нам не нужно забрать С из стека.
У нас его нет.
Мы сразу его взяли и забрали.
Так, ну и, допустим, еще могли бы быть такие правила.
То есть для каждого случая у нас есть свой кандидат.
А теперь, смотрите, давайте второй кейс рассмотрим.
Когда мы, допустим, рассмотрели вот такое правило.
Раз.
И тогда мы первым действием, которое было здесь, съедаем это правило.
А вторым правилом съедаем вот это правило.
И тогда у нас получается здесь что?
Можно спрос, а вот А2, А2, это если у нас есть правило С в А?
Да, если правило С в А. Такое тоже может быть.
Но у нас в исходном автомате его, кажется, нет.
Не-не-не, мы говорили, что у нас все правила имеют один из трех видов.
То есть это у нас...
Нет, я понимаю, но вот в автомате, который вышел на рисунку, кажется, у нас такого нет.
Вот в этом?
Да, нет, который справа.
Да, да, его нет, но мы гипотетически предполагаем, что он может быть там.
Да, мы рассматриваем все возможные случаи.
Ну, понятно, это можно более формально записать, да.
Но здесь, в общем, смотрите, что у нас получается.
Фиолетовый кейс. Это получается А.
Потом мы, по сути, должны со стека снять А.
А дальше мы должны с вами положить туда ВС.
Да, аналогичным образом у нас добавляется ААБ.
То есть это у нас правило, если у нас...
Давайте я буду писать вот так вот.
ААВЦ. Здесь у нас будет правило ААБ.
И если у нас вот такая штука, то у нас правило АВА.
Давайте я напишу доказательства аналогично тому...
...удалению эпсилон-переходов.
То есть, опять же, индукция в одну сторону, индукция в обратную сторону.
По длине вывода.
Ага.
А у нас еще в завершающем состоянии, может быть, стартово?
Да, да, завершающе стартово, если я сэпсилон-эпсилон, да.
Да, я напишу.
Если у нас из С выводился Аэпсилон, да.
Да, конечно же.
Ну, понятно, как мы конструкцию преобразовали.
Да, то есть нормальная форма грейма позволяет просто на халяву получить такой автомат.
Так, товарищи, а теперь догадываетесь, как доказать, что пересечение контекста свободного языка и регулярно выявляется в контексте свободного?
Построить дикарту произведения этого автомата и регулярно?
Все, да. Да, именно так.
То есть, если у нас L это КС язык, R это регулярный,
то L пересечь с R это КС язык.
Ну да, эти докажем.
Будем говорить с вами, что L равно L от M, где M это МП-автомат с однобуквенными переходами,
а R это L от... давайте я тут MП назову, а здесь у нас M,
где M это... давайте скажем, пусть будет ДК, хрен с ним.
Ну, вообще достаточно автомат с однобуквенными переходами.
Дальше напишем, устроим дикартовое произведение.
Как мы будем его строить с вами?
Строим автомат... давайте МР назовем его.
Который будет обладать QMP штрих.
Дальше у нас получается с вами Сигма.
Здесь у нас гамма получается.
Дельта МР сейчас определим.
Стартовая это получается у нас Q0 пара, Q0MQ0MP, и завершающая это FFM на FP.
Ну, а дельта штрих, дельта МР, это переходы вида такого.
Значит, у нас получается... давайте я обозначаю опять Q1MQ1MP.
Так, со стека мы должны снять что-то, да?
Получаем Q2MQ2MP.
Бета, если у нас с вами есть переход вида.
Q1MQ2M принадлежит дельта М.
И есть переход Q1MQ2M принадлежит дельта М.
Ну и дальше надо доказать по индукции следующий факт.
Доказать, что у нас Q1MQ1MP конфигурация W эпсилон выводит конфигурацию Q2MQ2MP.
Эпсилон-эпсилон тогда и только тогда, когда у нас выполняется два соотношения.
Конфигурация Q1MQ2MQ1MP в эпсилон выводит Q2MQ2M.
А второе свойство это Q1MW вводит Q2M эпсилон.
Ну что, индукционные переходы тут достаточно понятные.
Если мы докажем в одну сторону, то и в другую обратно тоже докажем.
Наверное я покажу пункты справа налево, потому что слева направо достаточно очевидны.
Не то что очевидны, но он проделывается.
Берем, делаем индукцию по K плюс L.
В базе K равно 0, L равно 0.
Ну что получаем? Мы получаем, что Q1MQ2MQ1M равно Q2M, а W равно эпсилон.
Ну и получаем то же соотношение, которое мы с вами хотим.
Переход. Давайте рассмотрим первый вывод в mp-автомат.
В нашем, да. Мы говорим, что у нас пусть W это какое-то ау.
Тогда у нас получается переход Q1MW эпсилон.
Дальше за один раз мы с вами переходим Q3MQ, снимаем букву U.
Получаем на стеке альфа.
И дальше мы получаем Q2MP эпсилон эпсилон.
А в автомате тогда у нас получается Q2Q1W эпсилон.
Вводят Q2Q эпсилон, вводят Q3.
Так, сейчас, секунду.
Q3, здесь у нас получается Q2 эпсилон.
Сейчас, секунду.
Кажется, я это, конечно, погоретился тут.
Давайте быстренько чекну.
Но тут, смотрите, один факт, который я тут кричу,
что для любого стека надо рассматривать.
Да, смотрите, давайте уточним факт немножечко.
Смотрите, давайте сразу пойму, в чем лажа.
Тут, видите, альфа на стеке, а тут эпсилон на стеке.
Поэтому здесь не все так тривиально.
Давайте все-таки состояние стека тоже хранить.
Тогда точно. Вот так, альфа, бета, альфа, бета.
И тогда у нас получается вот здесь, если у нас с вами будет альфа,
здесь у нас гамма будет, а здесь у нас будет бета.
Теперь у нас с вами все сойдется.
Да, забыли состояние стека.
Тогда, смотрите, напоминаю, что это у нас с вами AU.
А теперь смотрите, что у нас получается.
У нас получается, по предположению, q3mp, q2mp, u гамма выводят q3mp, q3m.
Вот так у нас получается.
Здесь у нас получается q2mp, q2m, эпсилон, бета.
А теперь смотрим, какой переход у нас получается здесь.
С вами получается q1a, альфа выводят за один шаг q3, эпсилон, гамма.
А здесь у нас q1a, эпсилон.
Так, стоп, секунду.
Давайте я вот тут поправлю, здесь нет конфигурации,
потому что мы действуем в автомате.
А здесь у нас получается q1a, за один шаг мы вводим q3, эпсилон.
Что это значит?
У нас тут на самом деле есть переход.
Смотрите, я напишу, что это так.
У нас альфа тогда это n-то альфа штрих, а гамма это гамма штрих.
И у нас есть переход как раз из q1a альфа штрих, у нас есть переход в q3 гамма штрих.
То есть у нас на стеке что-то могло быть по дороге посередине.
И тогда из вот этих двух фактов у нас получается с вами есть переход вида q1.
То есть тут mp у нас с вами только.
q1 mp q1 a альфа штрих v пару q3 mp q3 гамма штрих.
Да, то есть заметьте, что у нас со стеком тут получается.
И тогда мы с вами можем написать из этого.
Опять же добавить нашу u в конец и добавить n-то в конец.
То есть мы получаем с вами q1 mp q1 au здесь n альфа штрих выводит q3 mp q3.
А мы снимаем со входа, получаем u, это n гамма штрих.
То есть вот это у нас с вами гамма, вот это у нас с вами дубльва.
И дальше мы берем вот этим вот синеньким собакином и привязываем вот это вот соотношение.
А дальше после того, как мы с вами показываем переход в одну сторону,
переход в другую сторону, ну и получаем как раз требуемое соотношение.
То есть таким образом мы немножко с вами задержались.
Давайте просуммирую, что мы с вами в итоге сделали.
За сегодня мы с вами взяли, построили грамматику в нормальной форме греймах.
Относительно этого мы с вами построили mp автомат без опсилу переходов.
После этого мы с вами показали, что пересечение контекста свободного языка
с регулярным является, ну контекст свободного языка
с регулярным является контекст свободного языком.
А поверх этого мы с вами уже доказали, что контексты свободные языки
относительно взятия образок от конечного преобразования.
Тем самым поздравляю, мы с вами закончили тему конечных преобразований.
И в следующий раз мы с вами тогда устроим такую последнюю лекцию,
в которой мы с вами поймем, а можем ли мы по количеству букв в слове чего-нибудь допонять.
В частности, мы с вами докажем факт, что любой язык,
одна буквина алфавитом, который является контекст свободы, является регулярным.
Всё, давайте задавайте вопросы, если они есть.
На следующей неделе будем что делать?
На следующей неделе что делать будем?
Ну да.
Идея такая, что попытаться попонять по количеству букв в слове что-нибудь.
Ну, количество букв А, Б, С и так далее.
Там, знаете, смесь линейной алгебры и формальных языков будет такой.
И обо всем по теорему попавится.
Да-да-да, Нюш, я хотел её сегодня начать, но я понял,
Я думаю, вот эту теорему доказать нам нужно было некоторые факты пройти.
Вот так вот.
Ну всё тогда. Давайте всем хорошего дня.
