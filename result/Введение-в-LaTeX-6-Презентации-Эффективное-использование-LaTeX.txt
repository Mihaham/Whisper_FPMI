всем привет у нас сегодня планируется последнее занятие по лотеху да собрали
аншлаг нас сегодня удивительно много очень рад что вы пришли да сегодня у нас планы
закрыть все наши долги которые мы обещали обещали мы презентации рассказать про всякие
лайфхаки как набирать код быстрее чем вы набираете сейчас ну в общем чтобы это как-то лучше шла
в продакшн немножко библиография а потом если останутся вопросы поучаем на вопросы если
останутся вопросов то просто ратимся будем отдыхать да ну или так так план у нас презентации
да все-таки давайте я буду переговорить пора пора уже чтобы так оно было что хочется
про презентации в первую очередь сказать что концептуально они очень мало отличаются от
всего основного что пишется в техе мы раньше всегда писали наш document класс это там article
или может быть book или что-нибудь такое вот есть специальный класс документов который называется
beamer и ну как раз бы всего одну строчку поменяли она на самом деле смысл меняется очень сильно если
все предыдущие виды документов отличались максимум набором заголовков которые они допускают и
может правила информатирования по умолчанию которые все редактируются beamer прям меняет так
сказать процессор на процессор с презентацией и делает прям все иначе но тем не менее интерфейс
с ним работать можно практически так как с обычным документом меняется буквально только тот факт что
теперь вам нужно каждый кусочек материала который вы хотите поместить на отдельный слайд заворачивает
специальное окружение frame но будут при этом особенности которые поскольку презентация
концептуально немножко отличается от обычных документов вы ее показываете листа я а не просто
как книгу которую отдельные страницы то то есть тут на одной странице которая физически может
быть в принципе разный контент меняющийся во времени которая зависит от того сколько раз
вы нажали стрелочку вправо сколько раз вы показали какие-то скрытые элементы конечно такого
нельзя было бы сделать для обычного технического файла ну про это поговорим теперь буду вот просто
расшифровывать более менее frame это специальное окружение ну как английского кадр специальное
окружение просто для каждое картинечко который вы видите это frame вот прям сейчас все что
перед вами это frame но то есть под капотом он там видимо как-то очень грамотно собирает контент
в нужное место по центру обрамляет его там заголовком обрамляет его тайтлом и всем остальным
чтобы вы в качестве информации документа много чего делает но интерфейс на это просто штучка
которая нужно чтобы сделать отдельный слайд да и вот для биммера специфично то что если вы
раньше мы настраивали документы как-то там пакетом геометрии настраивать там текст это шрифт цветы
шрифт текста и все такое ну какими-то командами вот для биммера есть специальные темы темы для
презентаций их довольно много в шито встроенных они гуглится можно посмотреть посылочек которые
презентация предложил но когда я буду в презентацию она будет кликабельная можете воспользоваться
сейчас просто у меня интернет нет я не продемонстрирую но вообще-то вот если посылки пройти там будет
прям набор разных тем что такое тема тема это вообще правила по которым презентация как бы
форматируется это и там цветовая схема и шрифты используемые и там скажем геометрия того как
всякие блоки типа там теорем и определение выделяются и то как размещается всякая мета информация
типа заголовков даты и прочего в каком углу на грубо говоря размещается как выглядит навигационная
панель всякие такие очень много чего это все регулируется темой и вот ну как правило вам почти
любая проекту что все довольно симпатичные но можно просто полистать по выбирать какая вам
больше проглянется это вот просто тема но при этом может быть у вас типа все устраивает скажет
оскверение геометрия но вот очень хочется поменять цвет на другой допустим встроенные цвета это
какой-нибудь ну там красно-серый немножко режущие глаза такие бывают а вот вам хочется вот скажем
как у меня сейчас белую синюю презентажку но при этом вас устраивает все остальное тогда вы берете
юс им та которая в списке нашли тема почти все назван всех этих университетов вот с этим надо
смириться университет конечно сам американские там ну и европейские вот это буквально скопировано
из преамбулы презентации которые увидели прямо сейчас это тема кембридж юс это калер циндолфин
соответственно я уж не помню какая там по оболчанию цветовая схема в кембридж но вот какая-то
которая мне не понравилось я решил ее оверрайднуть чтобы это сделать я использовал отдельную команду
юс калер тем которая просто поверх тема которая уже задана записывает именно чтобы цвета будут
не такие как там а те которые вы укажете кроме того можно отдельно задавать всякими командами я
их тоже тут указал юс инер theme юс аутер theme юс фонд theme можете погуглить это все-таки специфичные
вещи которые вам могут принципе не пригодится поэтому я не упоминаю но к бимеру есть документация
и там расшифровывается все довольно подробно и вот если вам не нравится какой-то конкретный
элемент вашей презентации номер не в формате ваших презентаций и вы не хотите прям выбирать
новую тему с нуля то можете попробовать поискать какой именно элементом хочется поменять на другой
ну нет я имею ввиду под с нуля я имею ввиду что ты можешь прям выбрать прям другую тему
который будет прям все по-другому потом привыкать как как не жить ну вот если вам хочется все
оставить только что-то одно простое поменять как скажем цвета то вот это вот ваш выход
для бимера нужно что-то отдельно подключать а что жалуются в эльбине должно
смотрите у вас какой формат установки теха был какой дистрибутив
не встречал но ты те гипотез несколько либо я сейчас обманываю что-то нужно подключить мы это
можем проверить либо же у вас просто не что-то не докачано вы скажем скачали какой-то минимальный
пакет в котором не все не все всякие содержимое было и вот что-то из него ну там докачивается
отдельно просто как скажем устроен мег тех он на риту подхватывает чего ему не хватает это качество
время компиляции если вообще нет интернета вы не докачаете например но чтобы не было сложно
давайте просто посмотрю исходники прям это не редактор это одно мы говорим про дистрибутив
все-таки в первую очередь так сейчас то что мне нужно нет это расширение вы с кодом умеет
только по светку синтезис сделать все остальное разумеется делается иначе вот давайте смотреть вот
это прям исходники текущей презентации которые вы видели я делаю и документ класс это параметры
ну типа размешиваются по умолчанию хайдол сапсекшнс это вот ну просто мне хочется чтобы навигации
были только секции первого уровня все остальные просто не будут отражаться это не важно забейте
такой параметр который тоже гуглится дальше тема дальше как будто вещи совершенно не
специфичной презентации в общем я утверждаю что я ничего не делаю ну ничего сфичного чтобы
вас не чтобы у меня заработала у вас нет так что скорее всего у вас не хватает чего-то
дистрибутива и к сожалению я не в состоянии это быстро пофиксить потому что я просто не знаю
какие у вас дистрибутива вот можно еще проверить а есть это такой пакет биммера что стилистически
ну здесь такие расширения для биммера но это не то что нам нужно короче это не пакет
который докачивается это прям какой-то кусок который у вас тут не установился или даже не
собираться установиться к сожалению сейчас мы не сможем это быстро починить я уверен что
это гуглится давайте продолжим можем после занятий поработать и забраться это так сказать
побуду а пока вот давайте поверим что юспакетч биммер на самом деле работает и скрывает на
доступ к вот такому виду картинкам вот ну и вот там начнется убирать тему и вот вот на этой
стадии на самом деле мы уже настроили весь внешний вид это конечно большое преимущество перед
всякими там штуками которые делают презентации потом какие-то google презентации какие-то
powerpoint и там мне кажется этим намного больше возни ну как-то приятнее душе что две строчки
кодом написал все работает с коробки дальше есть такая строчка которая наверное нам даже не
нужно запоминать но в общем поскольку как мы уже поняли биммер отрисовывается несколько по
своему это своя атмосфера то управлять можно элементами как-то вот не так как мы управляли
иначе вот например есть такая штука navigation symbols это вот ну вот если бы я этого не сделал то
скорее всего прямо вот сверху был бы навигационный как-то navbar называется навигационная панель
наверное по-русски вот список всех секций презентации которые есть подсвеченная та которая выбрана
сейчас там все кликабельное можно переходить по всем разным ну кстати давайте опять же почему бы
не проверить вот допустим я уберу эту строку ну значит что он остановился потому что пошло не так
это к сожалению да разумеется нужно сам документ сделать и наверное стоит указать размер шрифта как
здесь хоть какой-то вот смотрите я зарекоментировал документ смотрите у меня привык конечно цвета
инвертирования но я вас не буду пугать я вас немножко обманул nav symbols все-таки не то
что на navbar navbar он устраивается на уровне видимо темы вот видимо в кембридже просто
нет такого и слава богу вот то что я убрал это вот эта вот штучка вот видите здесь вот
кнопочки типа листать слайды по-разному кнопочек довольно много я даже не знаю что они все значат
никогда ими не пользовался мне кажется не загромождают слайд я их всегда убираю вот и
вот для этого нужна такая команда что я говорю навигация cybles вместо них теперь будет пусто
ничего не будет вот в этом была задача да ну и как я уже сказал можно переобрететь какие-то
кусочки этой темы если вам нравится в ней все кроме чего-то одного тут лучше документацию
рецепт универсального нет но все довольно просто по цветам мы разобрали не нравится цвет использовала
вот так с шрифтом что очень похоже ну и там и так далее да еще немножко про специфку бимера
печатка в общем я уже как-то заикался что в бимере тоже секции по секции все такое и даже заикался
что вот я у себя в документе использовал там ну в общем убрал сапс сапсекшн с какой-то строчкой кода
в качестве параметра документ классу но в общем в принципе структуризация документа здесь тоже
поддерживается и можно сделать так чтобы у вас разные слайды относитесь к разным секциям и
на что это влияет это влияет на отрисовку прям название секции вот вот здесь вот вот эта
вот текущая секция называется основной мерзкий презентации более того вы видели ее содержание
просто потому что содержание формируется как мы помним тоже по всяким секциям под секциям они
почему-то еще другой природы и в частности это для презентации тоже будет верно и поэтому как
только я перехожу дальше ну следующим слайдом то вот в этом самом верхнем углу теперь всегда
будет название текущей секции как появляется такой слайд сейчас тоже покажу но вернее я покажу
немножко другую технику а то как появляется конкретно такого вида слайды которые показывают
только название текущей секции больше ничего можем посмотреть с новой сходкой в презентации
разобраться тоже не сложно но в общем да по специфику что общего что секции в принципе
существует что не общего вот теперь к секциям относятся не какие-то произвольные куски текста
а прям вот целые фреймы я поэкспериментировал попытался внутри фрейма сэкшн сэкшн конечно
комплируется но как будто бы эффекта по крайней мере с точки зрения отрисовки вот здесь они не
имеют то есть посреди слайда решить что вы в такой-то секции уже нельзя в принципе это логично
наверное если у вас ну что как-то одна секция вы посреди слайда поменяли ее на другую непонятно
что отрисовывать в этом углу то ли первую то ли вторую вообще какой-то конфликт и он думает не
очень долго он не трясет просто ничего ни первую ни вторую поэтому чтобы точно ничего не сломать
ну и что в общем типа логичнее просто с точки зрения того как вы это будете делать но делать
секции перед фреймами то есть ваша презентация это некий набор фреймов а вот уже между ними
всякие секции под секции что хотите как вы будете это структуризовать влияет это как я уже сказал
на отрисовку где-то в самом уголочке слайда что вы наверное даже не замечали ни разу за все
наши занятия до этого но тем не менее вот оно существует ну и также на содержание это более
существенно содержание это полезно ну и вот как делать такие специфичные штуки например вот
такую вот у нас есть такое тех задания хочется перед переходом к новой этой к новой секции
презентация показать крупно только номер текущей секции вернее как название номера текущей
секции как будто мы были бы содержание но при этом только его кроме всего остального можно
сделать так есть такая специальная команда с бимером приходящая от биггин секшн ну буквально
какой код вставить на стадии компиляции в момент когда начинается новая секция он вставляет такой
код begin frame table of contents ну то есть он создает новый слайд которого у нас раньше не было
который будет иметь за который будет иметь заголовок table of contents мы еще расшифруем как
с этими фрами работать но в общем его обязательный аргумент это заголовок фрейма скажем текущий
фрейм имеет заголовок выделения разделов вот тут точно также он написан begin frame выделение
разделов и дальше весь этот текст вот он делает такой фрейм а внутри него нет ничего кроме
содержания чтобы содержание не просто а вот только текущей секции я не уверен что для того чтобы
это заработало чтобы прям такой корин секшн работал не нужно делать больше ничего возможно это
какой-то специально определенный счетчик я этот кусочек кода все-таки ну украл не за что я его
сочинил но формально возможность примерно такая что мы можем задавать вот на стадии компиляции
пожалуйста в такие-то места вставь какой-то новый код исполнит еще какую-то логику которая раньше
не было можем поэкспериментировать мне не жалко честно говоря никогда не пытался мне кажется что
это довольно эрганично смотрится если у нас типа весь текст выровняем по левому краю то как будто бы
и заголовкам тоже место именно там но вот посмотрим что будет но попробуем вот видимо тут надо делать
помните такой модификатор да который до конца блока делает все по центру так смотрим
изменения оно не сработало нет это это это оно же тот самый слайд оно не сработало но знаете мне
кажется не должно было вот это конечно задал вопрос ну ладно задал утверждение наверное
правильно так сказать в общем это какое-то сильное утверждение которое я не очень хочу
обсуждать да я думаю что это был микрофон да
но как-то к сожалению мы так и не дошли до разговора перутика неграциональный режим это
уже такая продвинутая что происходит под капотом наверное для понимания когда нам как к юзерам
это не очень нужно ну и как-то мне кажется если мы делали еще одну лекцию только про это то мы
никого тут не увидели да наверное не стоит того так что я хотел донести все-таки этим слайдом вот
есть такая фича можно пользоваться но вот если ты хочешь что-то другое сделать то видимо лучше
идти в google типа how to center titles of frames in bimmer и почти наверное первый ответ там будет
констакт overflow и тебе там покажут как это делается возможно что будет устаревшее решение
коваром это 20 лет но наверняка все еще работает поддерживается ничего плохого я в этом не вижу
я про эту стаж как-то упоминал да вот теперь немножко про окружение которые прям с бимером
проезжают мы уже увидели что такое frame сейчас мы еще закрепим как все-таки им пользоваться
и некоторые другие первых до frame ну окружение с ними работа всегда одинаковая их нужно там
открыть закрыть все что внутри обрабатывается по правилам данного окружения данном случае
правила такие что вот оно собирает красивый слайд все как полагается у фрейма есть некоторые
параметры отрисовки вот например закораживаю да sorry есть у фрейма некоторые необязательные
аргументы которые управляют тем ну в общем задают некие правила того как слайд собирается есть
оберег модификатор там b c или t ну как мы видели наверное на стадии когда смотрели таблицы или
что-то еще bottom center top это выравнивание текста какое там по центру слайда по верхнему краю по
нижнему краю вот такая вещь по левому правому я не умею наверное это делается просто типа
обычно как везде просто потому что как бы горизонтальные правила фреймах у нас не меняются
они такие же как у обычных документах просто какой-то текст идет сколько-то строк подряд а вертикальные
правила меняются потому что их все-таки время сдает сам поэтому наверное естественно ждать что
есть только такие модификаторы а за лево-право модификаторов нет ну и ладно fragile вот тут не
хочется капаза что он конкретно делает но он несколько исправляет логику собирания слайда
если в вашем слайде есть какие-то такие немножко опасные объекты такие как вставки кода какие-то
картинки в общем чтобы оно грамотно собралось и чтобы оно в процессе не сломалось оно скорее всего
сломается если этого не сделаете вот нужно указывать parameter fragile скажем прямо в текущем слайде
есть snippet кода вот тут вот здесь вот и вот если я не указываю parameter fragile оно просто не
компилится вот это я сейчас запомню как мантру и даже не думать почему это так но в общем есть
особенности ну как отрисовки того и другого чтобы это было именно в таком виде plane ну вот
наверное мы видели это когда говорили про калантитулы что вот есть такая штука page style
и мы можем сдавать use page style там empty кажется так это называется калантитулах чтобы их не было
тут plane делает похожую вещь он говорит убери мне там и вот это и вот это чтобы был просто голый
слайд без ничего вот может пригодится мне не пригождалось но вроде понятно для чего это может
быть нужно вот и чего тут не указано а указать стоит у фрейма есть еще обязательный аргумент я
про него уже заикнулся и даже показал обязательно аргумент да при том что как бы формулировать
коллизии названий обязательно с точки зрения теха потому что заворачивается в фигурные скобки но
при этом можно в принципе не указывать ничего не поломается если вы не указать просто не будет
заголовка но это заголовок слайда это то что отрисовывается верхней строкой там шрицам
который специально указан который присмотрен данной темой все такое и тут есть такая особенность
но это скорее пространности вообще с сборки презентаций в общем почему-то даже с указанием
параметра fragile сниппет кода жалуется но за что у тебя там есть эндфрейм а фрейм еще не кончился я ему
говорю но вообще-то это эндфрейм в рамках сниппета кода он не касается внешнего текста но почему-то оно
все равно жалуется не комплируется короче на самом деле в этом фрейме написано фрейм через русскую
букву а потому что тогда тогда он не жалуется ну потому что для него это уже другое наименование
обошли проблему это довольно странно я к сожалению не успел погуглить все-таки в чем под капотом
проблема но вот как будто бы те кто разрабатывались вставка сниппетов кода не учли что в презентациях
некоторые слайды резервированы их не нужно распознавать вот не знаю вот такая особенность
да окружение блок это как раз тоже вещь приезжающая именно с бимером который вы раньше не
видели она делает ровно то что вы видите вот здесь она позволяет отрисовать текст как-то
особым образом какие-то заголовщик ему указать выделить немножко то как именно он выделяется
определяется темой документа вот в теме кембридж выделение вот такое немножко там тень за собой
отбрасывает и типа заголовок будет цветным причем так такого же света как основная тема
цветовая это все наверное можно регулировать никогда не пытался но вот на что посмотреть стоит
так это вот как это выглядит просто как этот слайд сделан ну у нас в первый раз такое занятие
что я показываю презентацию сделанную в техе и рассказываю как делать презентации в техе
поэтому кажется местом прямо ее же и разбирать да ой сорян сейчас я вспомню как это контр плюс
наверное окей здесь нет а здесь блин раньше получалось да раньше как-то это а смотри
получилось справились так это мы уже видели вот окружение блок вот так буквально используется есть
я понимаю придется на монтаже это все вырезать ну вот эти вот моменты потому что они скорее всего
ухо будут резать просто не по детски ну надо было проходить сюда ногами правильно не смотреть
записи это надо было оставить интерфейс как видим довольно понятный также было с фремами
просто беги на блок его обязательно аргумент это название собственно этого блока это то что
будет давайте тут тоже отмотаю нужно место это вот заголовок который приезжает вот сюда вот
определение например есть также альтернативная ему штучка alert блок но соответственно она делает
то же самое выделение по правилам блока да но заголовок уже будет красной тут это не очень видно
потому что у меня инвертируем цветовая схема если мы если вернемся в белую схему то тут прямо
такой симпатичный красный шрифт я уверен что да хорошее замечание действительно и
блоки и alert блоки то как они конкретно выглядят зависит от вашей текущей темы это все управляется
вот еще на том высоком уровне однако я думаю что наверное цвета шрифтов можно везде менять
ну в плане не прям менять цветовую схему а поменять прям только цвет шрифта но вот
я не уверен как это делается в принципе можем попробовать типа а что будет если вот мы
прям в этом блоке скажем что у нас текст color она же знает у меня такое надеюсь
нужно скачать пакет да ну ладно мне кажется это интересный эксперимент я готов потратить на него
одну минуточку что я хочу сделать я хочу попробовать поменять цвет за заголовка блока не меняю
ничего вне его я надеюсь у меня получится если нет конечно не очень ты хотелось потому что
сейчас повтори пожалуйста вопрос не очень поняла
ну это в целом нормально что есть какие-то вложенные окружения которые складывают свои
эффекты мы как-то на одном из первых занятий обсуждали что можно как-то скомпановать свое
окружение которые все вместе будут лежать не прям сделать свой environment который в начале
environment открывает 3 окружения а в конце его все 3 закрывает иногда так может быть полезно мы
даже так как что делали мы совмещали окружение для центра и модификатор для жирного шрифта
но смотрите у нас получилось я кажется просто упоминал как перекрашивать текст есть команда
textcolor который первым принимает какого будет цвета текст в формате который техом как-то
заранее предусмотрен есть разные варианты там можно ргб указывать несколько чиселок есть
некоторые заранее вбитые ключевые слова типа red green blue хотя у леши про это тоже было в
прошлый раз я вспомнил ключевые слова может быть разные но как бы правила набора цветов они
мне кажется везде очень более или менее одинаковыми вот ну и собственно дальше аргумент то текст
который мы перекрашиваем как видим мы сделали наш просто блок таким же как alert блок потому что
они отличались в общем за друг от друга только текстом только твердом текста и оказывается
все редактируется ну и хорошо так что беремене так летит каждый раз
видимо это будет не очень хорошо в полноэкранном режиме но тут я думаю все более менее понятно уже
да стоит еще прокомментировать что во первых у нас цвет все-таки тут прям red red а тут не прям
red а тот красный который в битву схему камбридж уэса при схеме долфин не прям красный возможно как
это по-другому он называется не всегда можно подобрать их типа пргб правильный код и точно
получится но в общем-то мы не то чтобы грея прям имикрировать просто мы хотели понять что это
возможно это возможно кроме того те окружения которые у нас бывали раньше ну теоремы если
помните и всякие штуки типа доказательств теорем которые не вполне теоремы но работают похожим
образом вот они тут тоже живут и являют собой просто тоже выделенные блоки то есть любая теорема
да вот в презентации превращается выделенный блок у которого будет заголовок такой ну вот как
окружение называлось ну как какой вы выбрали ключевое слово для данного окружения на стадии
объявления тут тоже все факционирует будет более того доказательства как видите это обычное
окружение proof может тоже проверить это вот обычное окружение proof вообще ничего не меняли но
вот квадратика так же как обычно документах это довольно приятно не нужно делать его как-то
по-своему что все это отметить тут как-то по дурацки что все было на русском а сериум на английском
да в общем так вышло что в бимере заранее определили некоторое количество теорем там теорема лемма
кажется определение в общем слова типа там сериум definition лемма все за забронены под все те
окружения которые были там по умолчанию и они к сожалению язычные поэтому если делать свои то
вы должны или как-то переопределять переобрать окружение честно говоря я не умею я умею только
делать new environment потому что можно делать и renew но чтобы не рисковать можно делать свое
окружение сериум там нижний прочерк и оно уже будет ну типа его мы сделаем на русском языке у вас
не будет проблемы такой команды точно можно или некомнатно делали а вот renew environment я не
уверен что есть вот чем дело и вот я сейчас не хочу рисковать пытаться проверить потому что
вдруг нет там потратим время ну короче вам всегда вы можете сделать свою свою категорию теорем
которые будет заключен словом не сериум аферим нижний прочерк мне кажется не очень проблемно есть
что окружение columns которые делают буквально следующее оно разбивает текст ну там данного
слайда вот на нужное количество колонок ну не совсем оно указывает ширину каждой колонке вот
можем опять же посмотреть прямо на слайде как как в прошлый раз это довольно полезно прошло
было понятно там ничего особо не делали смотри вот так же как это было для там когда мы говорили
про картинки про всякие такие вещи в общем есть такой если как текст витс которая выдает вам
числовое значение ширины текста ну в общем понятно что я имею ввиду естественно мы делим пополам
и поэтому получается деление пополам а тут вот подельно на три части причем неравные и
наверное там коэффициенты просто другие стоят да просто другие коэффициенты 0 2 0 3 0 5
это разве важно этот же комментарий а в этом плане
возможно есть какие-то особенности возможно это имеет сакральный смысл но сейчас я не хочу
проверять мне кажется без них тоже заработает нет даже не так наверное проблема была бы если
у нас было пустой колонка дальше уже есть текст мы же помним что у нас там множественные пробелы
множественные enter все схлопываются и влияние особо не оказывают на отрисовку объектов и
проблема может быть только если у вас было прям пусто то есть у вас в окружении есть только
пробелы только enter никакого текста и вот тогда она может пожаловаться типичный кейс вот вы
хотите сделать доказательства у вас оно там в 200 он доказывается вы делаете itemize 2 блока
itemize в одну сторону в другую сторону и вы делаете begin proof а потом сразу делать begin itemize потому
что казалось бы именно там пора уже и начать и вот тогда он начнет его не с новой строки он начнет
его прям вот доказательства и дальше первый же маркер этого маркерованного списка хотя казалось
бы он обязан начинать с новой строки но почему-то этого не происходит я это всегда обходил как я
оставил просто фиктивный один пробел этот неразрывный который тильдой делается после
бегинпроф тогда он считал что какой-то текст есть а потом уже начинал новую строку иначе почему-то
не работало наверное сейчас было про то же самое сказано да про какой-то похожие вещи но в
всяком случае это какая-то экзотика если вы это встретите вы скорее всего на гуглите как-то как
с этим бороться а вот на уровне высоком я думаю все понятно как это делается вот overlay вот как
сказать ну вернее даже уже рекламировал что вот презентация в отличие документов могут на одной
и той же странице контент отображать не весь сразу а по чуть-чуть вот как раз об этом будем
говорить вот скажем я могу покликать много раз и как видите он не только появляется он еще пропадает
в общем по-разному можно делать и вот давайте посмотрим как такая вещь реализована написан какой-то
текст не важно какой именно текст потому сейчас просто походим на код
ну как сказать на стадии на стадии подъяв документа это уже прямо разные страницы это
прям у меня прям страница вот такая чуть прям перед ней вот такая вот такая то есть они прям
уже раздельно существует да это конечно хорошее наблюдение тут номер один тот же как бы для
зрителя который презентацию смотрит мы все еще на одной и той же странице поэтому для него
должен быть это незаметно а так да в этой презентации на самом деле страниц ни фига не 16 а штук 50
как раз из этих overlay ну потому что каждый такой overlay он как бы дублирует тот контент который
нужно отрисовать заново вот смотрим на код вот оказывается в всяких там маркированных
номерованных списках можно в качестве такого хитрого параметра этих треугольных скобках
указывать на в общем после какого количества нажатий после какого количества переходов на
это слайд иными словами появляется этот текст вот тут скажем вот у этого написано единичка и
минус ну дефис значит с единички и далее то есть он прямо сначала как слайд был открыт всегда
будет его видно с первого же нажатия дальше вот эта стучка только с четвертого раза появится и
только с тех пор и будет видно причем скорее всего четвертый не у нас всего пять ладно сейчас об этом
поговорим в общем четвертого и далее эта стучка будет появляться при втором нажатии при третьем
она обратно пропадет ведь нет тройки а четвертого и далее потому 4 минус появится снова и будет
видна все время здесь то же самое только начиная с третьего а тут уже аж с пятого вот ну он видимо
берет максимум да берет максимум чтобы все числа которые были тут упомянуты но до них дело
дошло вот он соображает да да да да ну то есть то что тут ничего дальше нет как раз то и означает
мы конец не указываем до конца который сам определишь и он определяет что конец в случае 5
потому что больше пяти у нас тут ничего не происходит нового ему дальше нет смысла колепать
новые слайды они все будут одинаковыми да да все так вот поскольку ну мы тут показали что можно
через запятую то есть много разных опций много разных интервалов которые не пересекаются это
главное пожалуйста да ну знаете снова вспомним как это выглядело с самого начала вот появляется один
а второй вернее тот который на самом деле третий а второй мы скрыли он появится еще не скоро
потом пропадает этот потому что мы только на двойке а потом начинает четверки но появляется
новый который был на пункте 3 потом не появляться снова все а потом тот который был на пятом и только
он вот такой прикол честно сказать мне такая фича как бы не очень нравится потому что мне
как бы немножко коробит что слайды становится очень много они как бы в общем то одинаковые и
как бы ваша презентация разрастается в размерах из-за этого но если вам хочется именно чтобы
это было эффектно чтобы было красиво показать и вам не жалко при этом размера презентации то
это такая вот фича который можно пользоваться
а в тихие возможности строить еще всякие эффекты?
Уф, нет, я думаю что нельзя я думаю что если было можно это было бы ужасно
можно гифки вставлять?
ну гифки понятно что можно но вот если хочется чтобы у тебя прям один слайд там скажем как в этом
паверпонте там сворачивался и заменял другой вот мне кажется это во-первых ну не очень нужно
потому что как правило это презентации которые показывают в научных конференциях где как бы
это зависит от приигрывателя
можно на том крабате настроить так чтобы он листал
ну да конечно конечно можно
на уровне приигрывателя можно но
а почему ты думаешь что будет ужасно?
ну потому что
ну во-первых как-то не
не смотря какая цель
как-то дезориентировать немножко слишком много анимаций и когда ты рассказываешь какой-то там
догадывается что сложная теорема которую ты тут полгода сочинял а у тебя там такие бегают картинки то есть сюда
давай здесь берем буквы в плазму
вот да это будет что-то не то
да ну в общем
сейчас что я хочу сказать вообще по этому поводу
надо понимать что техова презентация
это PDF-документ
это не специальный объект
виза там точка-точка паверпоинт как у Майкрософта
и ни что угодно еще
там просто некуда зашить информацию
о том как переключать слайды
понимаете?
можно поменять только сам контент этой PDF-ки
и контентом мы управляем вот прямо сейчас вы это видели
а вот анимации это уже что-то что
ну в общем это не теха это отвечает
для этого отвечает уже проигрыватель
там наверное можно это настроить
но я никогда этого не делал
да
вот
ну тут иллюстрация того же
самого на самом деле
просто в прошлом рассказе
сначала был пример без пояснения как он устроен
а потом уже то как это устроено
но в общем да интерфейс можем
закрепить он именно такой что
после айтомов в аниме рейтах
и в айтомайзах можно указывать
параметр в треугольных скобках
который является собой некую строку
характеризующую на какие
показы слайда нужно показывать этот контент
вот
ну вроде больше ничего интересного нет
вот
немножко другой подход к тому же самому
если у нас нет айтомайза а нужно просто
какие-то куски текста чтобы они постепенно
появлялись друг за другом ну
в том же примере когда вы докажете
большой теорема вам хочется
утверждения один за другим чтобы они появлялись
но вот допустим это не itny
а просто какие-то блоки текста
есть команды которые позволяют
отрисовку всего
чтобы ODO остановить до
следующего клика мышкой
и только после следующего клика показывает дальше
это команда PAUS
она, так как able compiled, то что нужно
вот то что до команды PAUS
отрисовывается после первого клика
их может быть много на одном слайде
и после второго клика отрисовывается то, что от первой команды PAUS до второй
ну и так далее сколько угодно swords
Ну и так далее, сколько угодно, много раз. И опять же, слайдов с разным контентом наклепается столько, сколько у вас команд пауз.
Ну понимаете, потому что каждый раз нужно, чтобы было другое изображение на этом слайде. Поэтому они будут множиться, неизбежно.
Ну это уже типа после компиляции.
Да-да-да, это в процессе компиляции слайды размножатся. Для вас это будет в техолом файле, ну точка тех, это будет, конечно, один слайд, в котором, как раз-таки, все эти параметры будут указаны. Вот.
Еще комментарий. Короче, онли, когда что-то делает, оно не эмулируется, как будто невидимым.
То есть, когда всякие вот онковоры пауза, оно оставляет место под то, что нужно.
Да.
А если онли, то оно просто его рисует, а больше его не...
Да, это хороший комментарий, давай я это отрезюмирую. Команда пауз работает как модификатор.
Просто вот она появилась, и поведение, ну то есть, все, что было до, в первый раз, все, что после, во второй. Никаких аргументов нет.
Просто команда пауз и все. Команда онковор и онли аргументы имеют.
И то, что является их аргументом, это именно тот текст, который вы хотите как-то нетривиально изобразить на слайде.
Команда онковор говорит, что вот, начиная с этого момента, как мы это встретили, текст, он появляется,
и дальше, какие бы там паузы ни паузы ни были, все время будет отображен.
А онли будет показан только единожды, этот текст.
Ну то есть, сейчас, как бы сказать, онковор, это по сути, там еще, видимо, есть аргумент, который указывает,
начиная с какого слайда, начиная с какого номера слайда в рамках этой страницы, начинать показывать.
Вот, в этом плане онковор эквивалентен тому, что вы видели для айтомайзов.
Что вот, скажем, вот, запомните блок по цифре 2, ненужная информация.
Он, хоть он, его не было все это время, но место под него было зарезервировано.
То есть, все это время там было пусто, пока он не появится.
То есть, он его именно что скрывает, но место остается.
А онли просто выпиливает его навсегда из тех других слайдов.
Он говорит, вот, на текущем показе покажи, а на остальных просто вообще этого кода нет на стадии генерации этого слайда.
Опять же, я с этими, такими штучками балуюсь довольно мало.
Мне просто не очень нравится, что вот множество слайдов, что много кликов у тебя показывают,
не очень много новой информации, вот, мне это как бы неудобно.
Но так точно делают, поэтому, наверное, при этом не бесполезно рассказать.
Вдруг вы тоже так захотите, почему бы нет.
Вот.
Да, давайте я продемонстрирую заново.
Смотри, какой прикол.
Смотри внимательно на то, что происходит в форте для примеров.
Загораживаю, да?
Сорри.
Берите.
Жирный шриц потихонечку захватывает все остальное.
Видите?
Это потому, что у команд textbf, textit, ну и им подобных модификаторов текста,
наврал, не модификаторов, textbf это все-таки не модификатор, а команда, которая принимает текстом какой-то аргумент.
Вот.
Не модификаторов, а, ну, скажем, команд модификации текста,
у них тоже есть такой аргумент, который питается треугольной скобки,
и в которой указывается только при каких-то номерах слайдов его применять.
Сейчас увидим перебором, к сожалению.
Ну, как к сожалению, не то чтобы это очень страшно выглядит.
Выглядит это вот таким вот образом.
Смотрите.
После каждого текста bf указано явно, когда его применять.
Первый текст bf, начиная со второго показа и далее до конца, потому что дефис и без продолжения.
В принципе, да, можно очень упоротые вещи, я так понимаю, делать.
Показывать то одно, то другое, чередовать в диагоничное количество раз.
Но, в частности, поэтому мне не очень нравится вся техника, потому что она позволяет такие вещи.
Но согласитесь, штука эффектная.
То есть, ну, прикольно это выглядит, что вот потихонечку она в силу вступает.
Очень простой интерфейс.
Просто есть аргумент, который регулирует, с какого момента нужно это применять.
Нет, опять же, напоминаем, что презентация в техе это просто pdf-ка.
Для нее нет понятия проигрывания, понятия время.
Ничего для нее нет.
Это просто статичный файлик.
И вся динамика создается именно за счет того, что мы делаем много разных слайдов.
Вернее, много разных версий одного слайда под разные клики.
Только вообще-то возникает динамика.
Про времени, про что он вообще не знает.
Типа того.
Да.
Ну и вот опять, как возникают разные слайды.
Ну, потому что тут много раз применяется команда пауз.
Каждая пауза плодит новый, так сказать, подслайд данного слайда.
Вот первая пауза слайдов стало два.
Вторая их стала три.
И так вот, сколько-то их стало.
С тех пор у нас есть знамерованное некоторое количество слайдов.
И поэтому, типа, не бессмысленно делать вот такие вот модификаторы.
Потому что у нас есть много слайдов.
Мы можем говорить только на каких и показывать.
Итак, вот мы согласованно все сделали, что текст появляется там на первом слайде,
а начинается второго, он жирный.
И так верно для всех остальных.
Появляется на втором, а на третьего он жирный.
Ну и так далее до самого конца.
Последний он появляется.
И вот после него уже ничего нового не происходит.
Потому что текст закончился.
Но вот модификатор поменяется мне сразу.
Только через слайд после его появления.
Вот.
Ой, кстати, Uncover.
Вот как я говорил, у него тоже есть такой же аргумент,
который тоже управляет, на какие номера слайдов должно это влиять.
То есть я листаю, листаю, листаю.
Потом оп.
Еще одним кликом я делаю Uncover.
Показываю то, что раньше было скрыто.
Более того.
Как раз именно поэтому у нас изначально все, что на этом слайде смещено немножко вверх.
Потому что все это время там был спрятан блок с кодом, который все это смещал.
Да.
А потом, когда оно появится, все съедет.
В общем, да.
Такая вот вещь.
Тут вы могли заметить, что немножко по-другому выглядит отрисовка кода.
Раньше это был верботим.
Ну, не важно, что это значит.
В общем, раньше я по-другому отрисовывал.
А тут я стырил.
Такой вариант очертания.
Но он тоже имеет место.
Это делается по кетам листинг.
Кажется, я про него упоминал на чертом занятии.
Про то, что он существует.
И что его полезно использовать, когда вы пишете какие-то алгоритмы.
Что вот, скажем, я видел билеты по языку C++, например, по экзамену.
И вот там было много примеров кода.
Там были прям куча полюсовых файлов.
Там .cpp.
И они с помощью листинга вставлялись в тех.
И там симпатично.
Была по секс-синтаксисам.
Все по правилам.
Вот в помощи вот этого подобного рода команда.
Ну, такая вот.
В экзамене C++ код на листочках распечатали?
Нет, нет.
Я не это имею в виду.
Я имею в виду...
Я имею в виду, чуваки типа готовились к экзамену.
Писали билеты.
У них был, типа, целотеховый конспект как-то все заботать.
И там были примеры кода, как красиво подсвеченные,
красиво адресованные благодаря PacketTouristings.
Эта рекламная интеграция сейчас не относилась к тягущей теме,
но просто кажется, что это стоит упомянуть,
как образочек жизни.
Ну и последний мой слайд,
ну, вернее, последний мой кусочек,
который я хочу сегодня вам сказать,
про библиографии,
потому что я при этом упоминал.
В общем, когда вы пишете какие-то статьи,
у вас выникает необходимость писать список литературы,
который вы используете.
Расписка литературы, а он же библиография.
Как он создается?
Вот есть окружение библиографии,
вернее, за библиографией.
У него есть обязательно этот параметр.
Его нужно вот так вот принимать.
Это, как бы, пример лейбла максимальной ширины,
который он ожидает, чтобы потом адресовать.
То есть, если бы я тут сделал примером лейбла
какую-то абрикадабру из 10 символов,
он бы форматировал библиографию так,
чтобы было много места слева,
чтобы всегда умещался огромный лейбл в 10 символов,
а только потом все содержательное.
Помните, у нас были маркерованные списки,
и там можно было делать маркеры кастомные,
сейчас эти довольно длинные.
И когда были очень длинные маркеры,
они двигали все остальное.
И чтобы с таким бороться,
потому что в библиографии характерно,
что тут все-таки будут не прям просто по номерам идти
разные вхождения,
а по каким-то специальным ключевым словам,
которые каждому...
Ну, не знаю, вы, наверное, видели, что...
Ну, допустим, книга какого-то Иванова,
на нее любят отсылаться специальным кодом,
типа ИВ-1, например, в честь Иванова.
И вот такие ключевые слова могут разостаться,
и чтобы все было симпатично,
нужно пример такого длинного лейбла
указывать в 10 качеств аргумента.
Это странный синтаксис, я такого больше нигде не видел,
но оно вот так.
А дальше все очень похоже
на обычные маркированные, номерованные списки.
Просто вместо item у нас будет bib-item.
А в качестве аргумента...
Вот сейчас надо так сказать не дать себя обмануть.
В качестве аргумента подается не тот маркер,
который будет отрисован на стадии генерации,
а тот...
Это такой лейбл, с которым вы можете потом пользоваться,
чтобы к нему отсылаться.
Как вы помните, была команда rev,
которая позволяет отсылаться на какие-то куски текста,
ранее упомянутые, или на уравнения.
Вот это лейбл, который позволяет на него отсылаться.
То, что будет отрисовано, это другой аргумент.
К сожалению, в презентацию я не вставил какой,
потому что я сам подзабыл, по-моему,
в квадратных скобках нужно еще рядочком указать.
Ну вот, допустим, если это был бы Иванов,
вы бы указали еще один аргумент, там написали if-1.
И вот это уже было бы то,
как это отрисовывается в самой библиографии.
Но если вам потом потребуется в качестве...
Ну, типа вот вы пишете,
а там дальнейшее изучение данного вопроса
можно найти в книге такой-то.
Вы пишете команду v в книге такой-то,
это v, сайт, команда сайт,
и дальше лейбл, который вы указали.
Вот те самые лейблы, которые b1, b2, b3,
ну или любые другие, которые у вас были.
И тогда он грамотно подставит
ровно тот идентификатор книги,
который вы выбрали потом
для конкретной этой книги.
Будь то там if-1, который вы тут напишете,
пока я, к сожалению, не показал как,
или там просто его порядковый номер,
если вы не указали никакого идентификатора,
потому что, да, по умолчанию просто будет нумерация,
просто будут все книжчики 1, 2, 3 и так далее.
И в данном случае, если я здесь скажу,
скажем, сайт и в качестве аргумента b2,
вторую книгу, он просто мне скажет
2 в квадратных скобках, потому что это вторая книга,
у нее будет номер 2 в библиографии,
а квадратные скобки применяются
просто для всех таких штук,
для ослания на литературу.
Вот такое вы наверняка в книжках видели. Вот.
И с моей части, наверное, это все.
Ну, то есть, вроде как мы так
пробежали с голопом про какие-то особые фичи биммера,
и вот про такие вещи,
которые вам просто могут в жизни пригодиться,
если вы будете какие-то статьи писать.
И сейчас я передаю слово Илью.
Так, ну в общем,
вы вроде что-то узнали,
ну ладно, как что-то, очень много чего узнали про тех,
если слышите меня сейчас.
Поэтому пришло время
раскрыть Залесов, как это научиться
все делать быстро, потому что
пока все какие-то, все громоздко и неудобно.
Вот.
В общем, все это
вдохновлено
вот этой статьей
одного
европейца, не знаю подробнее.
Ну, в общем,
что-то такое.
Да, текст на английском, это статьи.
И, в общем, это
для ВИМа, и я думаю, ВИМ
здесь мало кто будет техать,
а если будет, ну в общем,
не спрашивай.
В общем,
поэтому все будут, я буду все показывать для ВИС-кода.
ВИС-код, очень крутая стрельба
за свободки, может уже знали. Вот.
Не такой, как ВИМ, но
стараются. Вот.
Это примеры того, что
короче, я в весной,
в общем, я
в какой-то момент на сессии решил, что хочу затехать
весь Матан и Линалда,
и в какой-то момент
я начал технику скоростью полтора часа
на лекцию, ну то есть очень быстро.
Ну, а выглядели куски лекции примерно вот так.
И сейчас я
покажу, как такое вот можно набирать реально
со скоростью лектора, или даже иногда быстрее, чем лектор.
Ну, сначала немного
эстетики, вот.
Видите, это технический код, но здесь
что-то не так, вот, есть какие,
ну, он как будто бы уже скомпилирован весь,
да? Вот, фишка в том,
что вот этот плагин,
ну, это вот консиал, он есть и для ВИМ,
и для ВИС кода еще могличевая,
какое-то такое, оказывается, слово, которое за это отвечает.
В общем, он позволяет,
как только вы перестаёте вашей мышкой
быть в фокусе на символе, он заменяет символ,
но уже скомпилированный. То есть, если я подойду мышкой
к символу, вот, для любого,
то он его развернут в forall. Его же можно будет
писать, редактировать, в общем, как будто
обычный текст работать. Да, сейчас покажу просто
на примере. Вот, например.
Вот, вот, меньше равно, я подошел,
он меньше равно, ушел,
всё, он стал символом.
Ну, и так с каждым. Вот.
Схема такая. Очень упрощает...
Это окружение propositions, да?
Не-не-не, это плагин
консиал или, я не знаю, как его назвать,
консиал. Вот.
В общем, он позволяет очень визуально,
визуально очень упрощать.
Вот. То есть, у вас форму не разрастается,
а остаются маленькими.
Да. А у меня такой вопрос, сорри,
как он оживется всякими там долларами
и прочим? Доллар он просто невидимыми делает.
А как их сделать видимыми обратно,
если он хочет убрать их или там добавить?
Это в настройках у него можно.
Не-не, как только ты проходишь мимо доллара, он появляется.
У вас туман войны такой, просто туман войны.
Не, ну можно убрать
эту настройку, там всё настраивается, понятно,
как обычно. Дальше.
Что такое snippet, глобально? Snippet — это просто
какой-то набор символов,
который превращается в другой, более большой
набор символов. Вот. По каким-то
правилам. Иногда просто, если
слово такое, то сделай так.
Иногда ещё он смотрит на, например,
что такое в конце цифры и сделай так в зависимости
от цифры. Вот. Но здесь, например,
например, когда
он показывает текущую дату, то есть
тут вызывается какой-то скрипт на JavaScript
и, ну, текущую дату
ставит. Вот. Это всё с помощью
того, что написано в статье,
ну там, в смысле, там и ссылка была,
можете кликнуть там, как всё это скачать на
Biscuit. Вот. Как только вы всё установите,
уже вот такая штука будет предустановлена даже.
— Эта гифка интегрирована? — Эта гифка, да, интегрирована.
Вот.
Да, ещё
в Biscuit, видите, у вас работает физиосетч, то есть вы пишете
дегги, а он, ну, date
greeting.
Ну, заметили, да? То есть он, можно
писать не подряд, можно пропускать буквы. Вот.
Он сейчас синеньким выделит. Вот, видите,
можно пропускать.
Он так свободно, очень вольно ищет.
Теперь примеры лучших
Latex Snippets. Первый — это доллары.
Всех устал писать доллары.
Поэтому есть Snippet, который вы просто пишете по-английски
MK, он разворачивает это в 2 доллара и
расставляет табуле отсюда, видите, вот эти серенькие кусочки.
То, что...
Сейчас ещё раз начну. Расставляет их так,
то, что вы... Вот.
Вот вы сейчас пишете на 3 долларов, да?
Нажмёте Tab и сразу будете за долларами.
Это как бы, ну, понятно, скорость гораздо
быстрее, чем нажать доллар, написать
что-то ещё раз доллар, стрелочки. А так всё
с Tabами очень быстро и
беззаботно. Дальше, для греческих
кукв — A, A, альфа, D, D, дельта,
ну и так далее. Опять очень
удобно, мегаудобно просто.
А ещё вместе вот с этим, с
канциалем
вообще просто не жизнь, а сказка
становится.
Вот.
Дальше, деление индексы. Ну, индексы — это ладно,
это просто, ну,
например, или G, или K,
или вот 45,
он даже сам понимает, что нужно вернуть
в эти фигуры-скопочки. Дропь.
Он написал A и поделить, и он сразу
преобразовал это в дробь A и поделить.
Если он пишет в скобочке какое-то сложное выражение,
он всё, что в скобочках возьмёт, завихнёт в дробь
и продолжит в другом месте. Вот.
Можно просто нажать два раза слеш, тогда будет
сначала, ну, тогда будет уже
вот эта фрекшн.
Вот, два раза слеш нажимайте просто.
Он автоматически превращается вот такое. Первый табуляция
здесь, второй табуляция здесь, последний, как всегда, снаружи.
Ну, чтобы быстро набирать.
Схема ясна, да?
Короткое определение,
это просто я очень
часто написать, что
в долларах, тире и дальше
определение. Поэтому просто сделал DF,
то есть это такой набор букв, который просто в жизни
не встретится, ну, то есть нет английских слов, которые
начинаются с DF. Вот.
Поэтому пишу DF, он сразу разворачивается в доллары,
пишет тире, ставит сюда
табуляцию и наружу табуляцию.
Вот.
Дальше пошли уже специфические символы,
ой, специфические штуки, видите, сумме.
Он сразу развернул его, весь, вообще весь,
я написал, как
G индексы везде одинаково поменялись,
то есть я могу, ну, индексы, они как бы
синхронизированы поля, то есть я
поменял G на I, и оно везде поменялось на I.
Вот. Дальше там, ну, дальше уже
хожу и меняю каждый символ,
могу в любой момент просто там
стереть конца суммы, дописать, что еще хочу,
ну, если какая-то сумма там квадратов, например.
Вот.
Так, здесь понятно, да, что произошло?
Примерно. Вот. То есть
можно делать так, чтобы вот эти поля,
ну, топ-стопы они называются, то есть
куда вы по табу перепрыгиваете, чтобы какие-то
из них были синхронизированы, потому что, например,
как индекс, пример хороший, потому что, ну, вот он,
одна паи, другая паи, это, в общем,
видите, уже сумма, можно набирать
быстрее, чем электроризуют.
Вот. Ну, инфинити тоже два нуля, просто
или две собачки, как когда удобнее было,
ну, вот. Два нуля
превращается сразу в инфинити.
Вот. Дальше. Вектор. Просто после числа
ставите точку запятой или запятую с точкой,
неважно, в каком порядке, просто два раза нажимаете вот по этим
формулам, сразу вращит вектор.
Вот. Дальше модуль
ABS разворачивает в два модуля,
причем left-right, если вы знаете, чтобы неправильные высоты были.
Вот. Дальше опять вектор, опять
табуляцию правильно ставит, и дальше, чтобы
опять степень, опять неудобно писать, степень, фигурные
скобочки, просто TD делает
степень, правильные фигурные скобочки, и правильно
заставляет остановки для табов.
Вот.
Видите, скорость я набрал вот эту формулу. Ну,
ну, то есть...
Нет, нет. Это все ашнипс.
Ашнипс. Хиперснипс.
Вот этот, вот сейчас...
Вот эта ссылочка.
Вторая ссылочка, да-да-да. Первая это...
Да, про реализацию еще буду,
но установка, да, ашнипс. То есть, вот эта
консиаль, это именно визуальная
штука, вот ссылка, где ее искать.
А вся,
вся машина работает под вот
вот этот хиперснипс.
Вот.
Простейшая закулисье.
Вот этот модуль. Ну, синксис мега простой.
Начинается симпет, закачивается симпет.
Буковка А большая означает
автоматически. Если убрать,
то надо будет по знаку таб. Вот.
Соответственно, вот тут,
вот наверху очень плохо сделано,
так нехорошо делать. В общем, всегда последний
таб-стоп, он именно
доллар-ноль,
ну, в общем, зарезервировано, а дальше
один, два, три и так далее. Ну, вот здесь
ой-ей-ей.
Что-то он, ему плохо стало. Вот.
Как здесь? Видите? Вот один, два, три.
Вот, дальше вот можно так издавать
дефолтное значение для таб-стопов.
Например, вот этот таб-стоп один
по дефолту И, один по дефолту И, один
по дефолту И. Вот дальше два по дефолту
один, три по дефолту Н, четыре по дефолту
А и так далее. Вот.
Ну, тут можно проглядеть синксис, который я писал.
Вот. Ну там, ну,
схема такая. Для синкса,
для штук, которые заканчиваются точкой
в конце или нижней подчерканью,
или еще что-то такое, для этого всего нужно
регулярное выражение, то есть вы задаете, типа если что угодно заканчивается на две цифры, дальше пробел идет или еще что-то, то значит
вот эти две цифры это нижний индекс, обязательно надо и так-то сделать. Вот это уже, ну я в слайд не вставлял, я выложу файлики, которые, ну
которые, все настроено, все, что я там за свою жизнь накидал, но я как-то причешу это и выложу в чат.
Так, по Стимпетам есть какие-то вопросы еще?
Именно поэтому. Ну то есть, в общем-то, это понятно, как бы это та штука, которая практически не гуглится,
потому что сайтов, где это есть всего, там три или четыре,
просто всего. Вот, но в целом, ну,
схема ясна и там, в общем, там у того человека очень много примеров, то есть у того человека, насколько далеко он зашел, он прям считает интегралы в техе, в смысле
он пишет, посчитай мне интеграл sin x dx, его
enter и это все превращается в интеграл sin x dx, ну то есть он его интегрирует и все это в техе пишет, уже высчитывает и
правильно пишет, это он с помощью питона делал, вот, ну в общем,
ну чтобы, ну там, или чтобы считать что-то еще, вот, но это уже, конечно, оверкил, я поэтому не показываю, но в целом, как бы, все, все можно, вот,
но он там, по-моему, затехал 1700 страниц суммарно за свою жизнь, в общем, крутой человек. Да, следующая штука
очень полезная, видите, я сейчас типа ходил где-то по файлу и мне, ну вот, я там, ну там лектор, он же обычно там, то доказательств, что-то пишет, то еще где-то, вот, и дальше начинается новое,
предложение, определение, вот, очень удобно, оказывается, сделать какой-то кейп бидинг, который просто будет прыгать в сам кайнс файл и добавлять, ну, пустые строчки, как ни странно, делается он,
ну, надо сначала добавить кейп бидинг, ну, не сначала, в смысле, сначала надо добавить макрос, например, ну, для этого надо скачать расширение
макрос, вот, а потом добавить макрос в сеттинг.json, например, я его назвал go to end latech,
он спускает курсор вниз, как ни странно, а дальше поднимает два раза наверх,
работает безотказно, вот, а дальше назначил его какой-то какой-то, ну, какой-то комбинации клавиш, ну, у меня мак, поэтому, кмд, а так, понятно, на венде другие.
Да, сеттинг.json, кейп бидинг.json, немного другой файл, но это не страшно, вот,
опять-таки, это гуглится прекрасно, поэтому миллион сайтов, миллион гайдов, все, что угодно, вот, по этой ссылке для макросов, а так, просто latech, ой,
вис код кейп бидингс и все будет готово.
У меня все.
Ну, тут немного, но, в общем, эффективно.
Может быть, стоит посмотреть, типа, реализацию этих снимков, повнимательнее, типа, вот, как, типа, с нуля настроить все, вот, ты показал, типа, исходный код, а вот, куда его вставить, чтобы это заработало и все такое, вот, наверное, вот такие вещи, понятно?
Куда его вставить, нет, ну, там, наверное, зря увеличиваю, ну, вообще, когда вы скачаете, то есть, тут есть hsnips, ну, вот, в вис коде есть расширение, h, или как они там называются, вот,
хипер снипс, вот, да, есть решение хипер снипс.
Я справлюсь.
Вот, есть решение хипер снипс, оно у меня, как видите, установлено, только не установить, вот, и дальше есть файлик, ну, там, есть командная строка в вис коде,
в вис коде ты просто пишете hsnips, и он, вот, open snippets file, вот, он у меня только один для латеха, и вот, как все эти реализации выглядят.
Тут есть какие-то, ну, вот, как выглядит gives you the calendar, ну, короче, date greeting.
Видите, он не автоматически никакой, вот, hello from your snippet, и дальше запускается скрипт на джаваскрипте, вот, вот, fraction symbol, как я говорил, да, вот, ставят две штуки, и дальше, ну,
первый топ-стоп, второй топ-стоп, третий топ-стоп, это fraction без скобочек, это который был a делить на 6, тут гигантский этот,
гигантское регулярное выражение, которое описывает, ну, условия триггера, как ни странно, ну, если покопаться в этих, в регулярных выражениях, в принципе,
быстро довольно станет понятно, что здесь происходит, то есть, как бы, вначале идет почти все что угодно, дальше нижнее подчеркивание, дальше какое-то количество цифр хотя бы одна,
вот, или еще что-то, а, нет, дальше какое-то количество, нет, нет, нет, короче, я так сходу у них не разбираюсь, вот, дальше, вот здесь, здесь пример того,
как можно парсить вот это fraction без скобочки, ну, то есть, как можно парсить уже, когда просто регулярного выражения не хватает, то есть, какой-то базовый триггер,
ну, дальше нужно уже покровать, не распросите, а что там, как делать, тут просто, вот, после этих слов, вот этих двух слов, начинается скрипт на Javascript, который, ну,
ну, дальше у вас уже вообще в руки развязаны абсолютно полностью, вот, ну, тут есть автоматическое разворачивание матриц, типа, там, n на n, какой-то там, n на n, причем,
топ-стопы еще правильно расставляют, ну, чтобы там, то есть, при основном желании можно сделать так, чтобы таблицы все, там, типа, вы просто пишете,
table 4x4, он делает всю таблицу, все правильно, все топ-стопы выставлять правильно, вы заполоните, как в Excel просто, и радуешься жизни, вот, я до такого еще не дошел,
вот, underset, да, вот, типа, почти все что угодно, да, и дальше, если идет какое-то количество, ну, или от 0 до 10, или из ЖК хотя бы один раз,
и дальше любой терминальный, ну, не терминальный, там, любой пробейный символ процент, слайд шесс, скобочки, точки, бла-бла-бла, то дальше он, ну, вот, здесь перебор, типа, нужно ли ставить фигуру на скобочки, нет,
типа, мол, если длина ожидаемого индекса 1, то не надо ставить фигуру на скобочки, иначе надо, ну, и так далее, вот, ну, тут еще, в общем, очень-очень много.
Ну, дальше какие-то уже такие прям совсем, совсем уже я делал под себя, когда вот, я понимаю то, что мне нужно очень часто строить там E красивое с нижним индексом K и сверху пермидигулярно,
ну, там, для линала нужно было есть сопряженное пространство, что-то ортогональное пространство, вот, я просто сделал стимпет EPK, я понимаю, что EPK я не нажимаю никогда, ну, в смысле, нет никакого слова, который начнется с EPK,
все, я сделал, чтобы EPK превращалось вот, вот в это, и все, и горе себе не знал, то есть, как только я техно лекцию видел какой-то там набор из, не знаю, там, из 20 сим, ну, какой-то набор, который мне трудно печатать символов, но он возвращается хотя бы там два раза, я понимаю, что он раз десять еще встретится, я просто сюда дописывал его, ну, вот, видите, там PLL, N, EG, вот, это вот в конце уже были такие прям, прям, под конкретную задачу сниппета, и это безупречно срабатывало, то есть, если кто-то знает Терешина, то Терешина, наверное, полтора X без пауз техно, вот.
Ну, это особенность Терешина немного, ну, в общем, вот, ну, те же пределы, то есть, чтобы вот, ну, в общем, все эти сложные конструкции можно легко загонять в сниппета, как я для суммы делал, для интегралов, для последовательностей, ну, типа, аэнты, бла-бла-бла, любые множества задавать тоже можно, ну, то есть, в общем, любая работа, которая вам казалась рутинной, довольно быстро, вы понимаете, как ее довольно просто сделать сниппетами, а если у вас есть какой-то прям, офигеть какой запрос, ну,
JavaScript, вот, в принципе, ну, дальше возможности безграничны, да, да, да, ну, то есть, сейчас я покажу это, например, вот, тут, да, ЕПК, да, например, ЕПК, CTRL-Z, CTRL-Z, не понял, как будет отменить на маке?
Ну, вот, я его и нажимаю, так это он переключился, не понял, а, я промахивался, короче, вот, ЕПК, отмена, отмена, все, и продолжаем, то есть, одна отмена, и все, он как будто Голи не знал, у меня один раз была какая-то проблема с этим, но она быстро исправилась, то есть, у меня там, короче, я по одной вертикальной черте генерирую сразу модуль, но почему-то после отмены он
сразу перегенерировался еще раз, видимо, потому что это был только один символ, то есть, короче, один символ триггер, это плохо, но, я думаю, вы это быстро понимаете, ну, сами понимаете, потому что символов конечное количество, в общем, гораздо лучше брать какие-то комбинации вот для таких вещей, там, из двух, из трех символов, потому что они, ну, очень вряд ли зарезервированы под что-то, вот, еще образцы, в принципе, на счет этого точно можете писать или в чате, или мне, потому что я много с этим, в общем, провозился,
я буду по тщательному просто, ну, если конкретно будет возникать, вплоть от «не могу скачать» до «хочу такой сниппет, помоги, как реализовать». Тогда, так, наверное, да, я передаю микрофон товарищу, начальнику штаба, что?
— Что именно? — Ну, какая-то кодостайл, но…
— Что, а шнип это или? — Ну, да, все-таки.
— Ну, это же похоже на «Define C++». — Нет, они же сразу раскрываются в то, что нужно.
— Ну да. — Но у тебя еще и кодостайл лучше нравится, потому что у тебя он…
— Ну, я бы сказал так, что то, что касается подкапотной реализации в рамках разработки, что вот, ну, как сами сниппеты пишутся, это, ну, конечно, там может быть страшный код, но его никто никогда не увидит, кроме тебя.
Он будет всегда же лежать у тебя там, в твоем редакторе, и все. В этом плане, наверное, переживать кодстайл мне очень нужно, если, конечно, не будет потом это перелопачивать.
А так, да, в самом-то моменте это уже ни на что не влияет, ты уже имеешь выходной симпатичный вполне себе код, еще и хорошо размещенный, чтобы ты был с ним переключаться.
Вот, да, спасибо, Леша, это было прям круто. Я даже немножко воодушевился, может, я наконец-то это заботаю.
Я четыре года техал, четыре года генерацией не пользовался, но как будто бы я мог себе много времени сэкономить, наверное, много часов своей жизни.
Вот, ура, на этом наш курс, наверное, и заканчивается.
Мне кажется, у нас в стиле прям все, что вам должно было, нужно было вкатиться в тех прям и решать любые свои задачи.
Если мы оказались неправы и мы не все ваши задачи решили, то, пожалуйста, напишите, мы придумаем, как это исправить.
Ну, вам просто расскажем как-то локально, что к чему, а потом глобально подумаем, а может это потом когда-то это рассказать.
Ну, вдруг, ну, типа, хочешь развиваться, расти, чтобы, в общем, был какой-то опус магнума, который, может быть, потом всегда пользоваться, но все случаи жизни находить в себе ответы.
А так, да, спасибо, что пришли сегодня, очень приятно было вас видеть, да, на этом мы все, совсем. Ура.
