Всем доброго дня! Давайте знакомиться с теми, с теми, что мы еще не знакомы. Меня зовут Павел Ахтямов, и я буду читать лекции по курсу формальных языков.
Мы с вами будем работать с семестром. Начало нашего занятия будет в одиннадцать сорок, как мы договорились, по формату занятий.
У меня есть презентации, в которых есть краткая обиживка с картинками, со всякими примерами, и есть по факту немножко расписанные идеи доказательств.
Полностью доказательства будут написаны на доске, кроме тех лучек, в которых мы будем с вами эти доказательства переводить в интересный формат.
Потому что вы не поверите, по ходу изучения этого курса будет ровно одно слово, которое вас очень сильно задолбит.
Это слово называется индукция. Мы все будем делать индукцией по какому-то параметру.
Поэтому какие-то моменты, связанные с этим шагом, мы иногда будем опускать, говорить только о том-кем момент.
Значит, коллеги там переслали кварчевый логот для приглашения в чат, поэтому мы его быстро пронеснем. На стоп-кадре кто захочет, тот может найти.
Давайте поговорим, про что это курс.
Он, на самом деле, если говорить теоретически, вышел с курсом от логики.
Но при этом по практике он приближен именно к компиляторам.
То есть это prerequisites к тому, чтобы научиться работать с компиляторами и уметь понимать, как они пишутся.
У нас будет 4 блока в нашем курсе.
Во-первых, первое, что мы будем делать, мы будем заниматься лексическим анализом.
Тем самым мы с вами научимся автоматически определять типы слов.
И для этого нам понадобится абстракция в виде автоматов регулярных выражений.
Дальше мы с вами перейдем к более высокой тематике.
Мы поговорим про всякие виды граманских.
И тем самым мы с вами будем рассматривать токсический разбор.
Что значит токсический разбор? Что русский язык называл?
Подлежащий сказуемое определение дополнение обстоятельств.
Ну, это тогда.
Ну, собственно, мы понимаем, что простое предложение – это подлежащий сказуемое.
Но где на самом деле подлежащий сказуемое, это нужно тоже определить.
Вот мы как раз попытаемся про это поговорить с точки зрения автоматики.
Дальше мы поговорим немножко про то, как парсы связываются с машинами тюринга.
Где они находятся в Иерархии.
Потому что машины тюринга – это вообще все обменивающие объекты.
Вам это сказали, что машины тюринга – это все обменивающие объекты?
А, ничего себе.
И как раз у нас будет практическая часть нашего курса.
Мы посмотрим с вами, как писать парсы.
Собственно, давайте мы как раз к практике перейдем.
Да, система оценивания. У нас будет экзамен.
Вы видели на самом деле, я сейчас просто вкратце пробегусь
и остановлюсь на тех моментах, которые я не объяснил.
Потому что вчера вечером был пост,
по которому детально описаны системы оценивания.
Значит, вклад всего этого дела – 50 процентов это балловый свет,
50 процентов это экзамен.
Экзамен при этом является блокирующим.
Теперь детально про систему оценивания.
Значит, у нас в ходе света будут две контрольные,
которые будут стоить 7 баллов.
В издачу ДЗ – 5 баллов, в активных семинарах – 3 балла.
И вы видите замечательный под названием «колокна».
Мы в этом году думали проводить его или нет.
И коллегиальным решением,
с счетом того, что коллеги, которые сейчас являются ассистентами,
не семинаристами по курсу, они сдавали колокну
и они сказали, что это им было крайне полезно.
Потому что вы просто в середине семестра
по факту забатываете первую половину курса,
а потом вы сдаете ее в конце.
То есть у вас в памяти остается информация.
И у нас есть с вами два направления.
Мы где-то в середине октября разделим все на ответственную часть.
Кто хочет хорошо покопаться в эту часть, связанную с надлогом,
то у нас будет доклад,
в котором нужно будет рассказать одну из статей,
которая посвящена тематике курса и чуть-чуть дальше,
и рассказать ее в полусеминарии.
Причислять статюру, забрать ее,
выделить в интересных моментах.
При этом у нас есть список статей,
которые варьируются максимальным баллом,
которые вы можете получить за доклад,
более максимальным.
Если вы хотите рассказать что-нибудь совсем простенькое,
это будет 5.
Если что-нибудь сложнее, то 7-8.
Если вы хотите какую-то умернюю статюру забрать,
то это уже будет 10-20.
И у нас есть практическое направление,
в котором будет основная практика,
которая будет оцениваться из 10 баллов.
Он посвящен реализации разных алгоритмов.
Но если у вас есть желание написать что-то типа интерпретатора
или простенького статюлятора языка программирования,
то это тоже вполне возможно.
И это направление у них тоже курирует.
Да, значит, колокол у нас является блокирующим,
потому что нужно все-таки его сдать.
Мы уверены, что вы готовы сдавать экзамен.
Но при этом не бойтесь,
у нас будет колоколь где-то в конце октября,
в начале ноября.
И если вы вдруг не сдадите колоколь,
у нас будет еще один,
который уже сдает экзамен.
Да, одно из двух.
То есть вы выбираете выедать по теоретическому направлению
или по практическому направлению.
Ну, тогда вы третий раз ставите его уже на экзамен.
И вам сдается передача.
А экзамен вы уже сдаете на передачу.
А?
Не, были в прошлом году случаи,
когда экзамен у колоколов сдавали на передачу.
А экзамен уже наконец сдавали.
Ну, ничего.
Ну, что-то типа того.
Ну, знаете, обычно колоколом не сдать.
Это редко здесь.
Ну, бывает.
Но это настолько редко в Ленинграде,
что...
У вас с теорией меры началась что-то?
Иначе ли...
Не, ну, там...
А что, у вероятности начались?
Ну, вот.
Да.
В общем, там расстреление вернули.
Понимаете такое?
У вероятности дать колоколам это расстреление вернули
с каким-то параметром П.
Вот.
Больше, чем 0,5.
Ладно.
Значит, смотрите, вы могли бы только спросить,
посчитать сумму баллов сколько получится?
42.
А максимум 40.
Ну, мы закладываем некоторые люди.
В связи с тем, что вдруг что-то не получится.
То есть, вы приходите получать оценки на сумме,
получаете оценки за экзамен.
А дальше они суммируются, делятся пополам.
А дальше есть некоторая формула в Ленинграде.
Не совсем.
Очень близко к тематическому, но не совсем.
Ну, там зависит отробная часть.
Вот.
Так.
Ну, если что, задавайте вопросы в чате.
Фик.
Это F-A-Q.
Да.
Да-да-да.
Так.
Ладно.
Про выбор.
Выбор надо будет сделать.
И так, это середина сентября.
Вот.
Мы даем время на определение того,
почему мы даем время,
потому что у вас будет домашнее задание,
связанное с его практикой.
Вот.
Одно из домашних заданий.
Да-да.
Вы не поверите.
Так.
Значит, теперь про книжки немножко поговорим,
которые можно читать.
Первая книжка – это «Пентус. Математическая теория формальных языков».
Книжка – замечательное доказательство неопущенного.
То есть, есть какая-то более полная версия,
но, к сожалению, я ее в интернете не находил.
Что?
Что это такое?
Я про такую не знаю,
но если вы напишите, будет замечательно.
Глобальную список литературы.
Вторая книжка – «Аха Ульман».
Это совсем фундаментальная книжка –
«Теория синтетического анализа за переводы и капилляции».
Том первый.
Он давно-давно вышел.
Тоже можно учетнуть информацию.
И вторая книга – это «Аха Сити Ульман. Компиляторы принципа своей неанализ».
Это вот для тех, кто захочет закопаться в теорию компиляции
и разобрать ее.
Книжка называется «Дрэгон Бук».
Почему она называется «Дрэгон Бук»?
Потому что она крайне интересная.
Там на обложке нарисован дракон.
И вы не поверите, что, скорее всего,
если вы напишите в поисковике «Дрэгон Бук»,
то вы найдете эту книжку.
Прямо сразу.
Так.
Это что касается организационных моментов.
Давайте быстро вопроса.
Два.
А?
Ну, если вы готовы, то можно.
Так.
В общем, вся информация еще дополнительно будет в чате продублирована.
Так что вы с вами.
Я предлагаю начинать.
Вот.
А начнем мы с вами вот с такого замечательного определения.
Значит, некоторые напоминания с курсом математической логики.
У всех был курс математической логики
или дискретной математики.
Да? Все. Хорошо.
Значит, смотрите.
Давайте вспомнить, что такое алфавит.
Алфавит – это некоторое, не пустое, конечное множество.
Подчеркну, что это конечное множество,
элементы которого называются символами.
Значит, алфавит мы будем обозначать обычно буквой сигма.
Если у нас будет еще какой-то дополнительный алфавит,
мы будем обозначать буквой гаммы.
Большая.
Значит, какие у нас есть важные определения?
Во-первых, что у нас есть сигма с звездой – это множество всех слов.
И второй термин, который у нас с вами есть – это пустое слово.
Это важно просто подчеркнуть,
потому что пустое слово у нас будет включаться достаточно часто.
А что такое язык?
Язык – это некоторое подножество языка сигмы с звездой.
Какие операции мы можем получать над языками?
Все теоретико-множественные операции, которые у нас есть над языками,
у нас поддерживаются.
Какие теоретико-множественные операции вы знаете?
Да, обмение, пересечение, разность.
Да, есть дополнение до всего множества.
То есть у нас есть L1 без N2,
и у нас есть дополнение языка L,
которое будет, на самом деле, обозначать сигму с звездой без этого языка.
Вот, и нам необходима еще один 10-й термин,
который показывает, что два языка можно контонировать.
То есть если у нас есть язык L1-L2,
то мы можем определить язык L1-L2,
который является контонацией всех слуг
таким образом.
Важно, что при этом L1-L2 будут являться подножеством одного языка,
чтобы это было все порядка.
Да, конечные слова.
То есть мы можем сказать, что
сигма со звездой, давайте я просто это немножко напомню,
что это последствия символов L1-L2,
где у иты прям лежат сигмы.
Последствий с конечными словами.
Без конечных слов.
Без конечных слов в нашем курсе разбираться не будет.
Ну да, конечно, мы можем взять объединение этих двух алфавитов,
и контонация тогда будет взять объединение.
Конечно.
В терминах контонации точку мы с вами будем опускать.
Так, это некоторые напоминания,
и давайте познакомимся с первым математическим определением,
на что это похоже.
Да, на машину тюринга.
На самом деле, недetermинированный конечный автомат
это некоторое подножество машины тюринга.
Точнее, оно задает языки.
Так, давайте тоже придем к первому определению.
Мы будем говорить, что недetermинированный конечный автомат
это пятерка.
Оно обычно обозначается М.
Это Q, Сигма, Дельта, Гамма.
Ой, так, ну ноль и Р.
Значит, давайте расшифровим, что это такое.
Значит, Q это множество состояний.
При этом, мощность Q меньше бесконечность.
То есть, мы хотим рассматривать те объекты, которые можно запрограммировать.
Запрограммировать что-то бесконечное.
Возможно или невозможно?
Ну, вот пока.
Не, ну оно разрешимо.
Оно разрешим этот алгоритм, который мы получили.
Ну, который мы можем написать.
Все-таки для того, чтобы написать, нам нужно конечное количество символов.
Поэтому, если мы что-то хотим распознавать,
то объект, который это распознает, собственно, должен быть конечным.
Так, Сигма в данном деле алфавит.
Значит, Дельта это множество переходов,
Q на Сигма со звездой на Q.
Обычно они будут писаться таким образом,
что из пары Q1 по слову W мы переходим в некоторое состояние Q2.
То есть, это вот математическое определение,
а вот это то, как мы будем это писать.
То есть, вот это у нас элемент множества Q,
а это элемент Q2,
да, то есть, вот это у нас элемент множества Q,
вот это у нас элемент Сигма со звездой,
а вот это элемент множества Q.
Значит, Q0 это стартовое состояние,
и последнее F под множество Q это множество завершающего состояния.
Это математическое определение.
Важно, что, хочу подчеркнуть, здесь под множество,
то есть, мы можем завершаться в разном количестве состояния.
Кажется, что этот объект вообще непонятен.
Так?
Ну да, типа вот какие-то непонятных пять букв.
Для этого, чтобы разобраться с этим, давайте приведем пример.
Значит, картинка, как это все дело рисуется.
На самом деле, мы с вами можем сказать следующее,
что, поскольку множество Q у нас является конечным,
то давайте мы их обумом отрисовываем как вершины некоторого графа.
Раз.
Дальше у нас с вами есть оповид, пока он непонятен,
а дальше у нас есть множество переходов.
По факту, что это означает?
Что откуда-то, куда-то мы переходим по какому-то слову.
Это означает, что на нашем графе мы можем нарисовать ребро,
которое ведет из одной вершины в другую,
а на ребре написано определенное слово.
С понятием взвешенные графы знакомы?
Ну вот, да, это то же самое.
Приблизительно только на ребре написан какой-то переход.
Так, Q0, это стартовое состояние.
На картинке оно обозначается вот таким образом.
То есть, что стрелочка из-неоткуда-то идет в состояние под номером Q0.
Не, интермированное это означает следующее,
что, во-первых, у нас на переходах могут быть опять слова,
а в детерминированных автоматах будут переходы только по буквам разрешены.
Не, ну просто сейчас, когда мы убедим термин выводимости слова,
будет понятно, что этот автомат не детерминирован.
Если, грубо говоря, говорить, почему автомат является недетерминированным,
это означает, что какое-то слово можно распознать дважды.
То есть, мы можем от старта до конца по ребрам прочитать слово несколькими способами.
Пока нам это не запрещено.
Но с точки зрения распознавания алгоритмов это неприятно.
Потому что алгоритмически это будет тяжело кодировать, тяжело распознавать.
Но мы его не специфицируем.
То есть, вот недетерминированный автомат может обладать несколькими свойствами, которые вы сейчас видите.
Ну, пока...
Да.
Куда?
Да, вторая вершина может быть разная.
То есть, здесь может быть вот такое.
Да, да.
Ну, хорошего просто не мешает. Давайте сейчас мелко звук какой-нибудь попробуем.
Так.
Так, ну что, давайте попрактикуемся, найдем буквы на картинке.
Так, Q.
В нашем случае это что?
Ага.
Сигма.
Аб.
Не, пустое слово это...
Это на самом деле слово, это не символ.
Да.
Согласен.
Здесь мы не специфицируем.
Ну, по картинке мы не можем...
Так, Q0. Ну понятно где.
А F.
Так вот он называется.
Q1, Q2.
Значит, это нотация тетофская.
Завершающее состояние в техе обозначается вот так.
А если мы говорим про бумажное написание, то можно завершающее состояние обозначать вот так.
Просто...
А?
Ну да, согласен.
Ну, то есть вы выбираете как хотите.
А переходов здесь на самом деле много. Давайте какой-нибудь из них перечислим.
Какой-нибудь интересный.
А?
Ну да.
Еще?
Еще?
Ну это неинтересный переход.
Да, Q2, B, A, O1.
Да ладно.
А завершающее это означает, что мы можем завершиться, но не обязаны в нем завершаться.
Нет, нет.
Нет.
Да, по факту считайте, что у нас есть какое-то слово на входе.
И наша цель распознать это слово.
Да, пока мы просто до этого не дошли.
Так, ну давайте теперь, собственно, возникает вопрос.
А как распознавать слова, которые у нас есть здесь?
Да.
Да, ну либо мы останавливаемся в ходе.
Ну, я думаю, что мы не сможем это сделать.
Да.
Да.
Да.
Да.
Да.
Да.
Да.
Ну да.
Ну это, кстати, идея того, как это детерминировать.
А?
Ну по словам, ну зависит от какого слова входа.
Если у нас слово в входное B, то мы из Q0 перейдем в ходе по B и там останавливаемся.
Да.
Ну мы можем сами выбрать.
Бинго!
Да, кто-то уже читал батериал.
А, все, понятно.
Так, давайте теперь перейдем в строгую математику.
Вот мы с вами говорим, что как-то идти по переходам, и мы что-то получим.
Ну, у нас курс, все-таки, теория формальных языков.
А это значит, что это все должно быть определено формально.
Так, давайте введем термин достижимости.
Собственно, для этого мы вводим понятие конфигурации в автомате.
Сейчас, давайте я найду мел.
И мы ведем второе определение.
Конфигурация.
Конфигурация.
Это пара QW, где Q промежит Q у, а W промежит sigma со звездой.
Вот такое вот множество.
И теперь мы, наконец-таки, можем определить отношение под названием штопор.
Ну, на штопор не похоже, вот это вот.
Вот, отношение выводимости.
Это наименьшее рефлексивное-транзитивное отношение.
То скажите, что такое рефлексивное и транзитивное?
Да, рефлексивное это означает, что два элемента находятся в этом отношении.
А транзитивное это значит, что если у нас A связано с B, B связано с C, то A связано с C.
Да, кстати, выводимость определяется конкретным автоматом M.
Да, и конфигурациями конкретным автоматом M.
То есть, если у нас автомат другой, то отношение будет другое.
Значит, смотрите, теперь, как оно определяется.
Для любых слов QW, давайте, чтобы по слайдам ориентироваться, а, там QW, промежищим sigma со звездой,
происходит следующее. А, и для любых Q1, Q2, для любого перехода.
Так, для любого Q, кодик Q2 при QSB выполнена следующая вещь. Что?
Q1, WRQ выводит Q2 снова Q.
Значит, как это воспринимать? Воспринимать это надо следующим образом.
Представьте себе, что у вас написано в эстедаине слово WRQ.
Вы находитесь в состоянии Q1.
И тогда говорится, что вы можете по переходу вот этому прочитать слово W.
То есть, отсечь то, что происходит здесь, и перейти в состояние QP.
Да. Да, именно так. То есть, это строго математическое определение.
А? Да. То, что нам осталось прочитать. Зачем нужна рефлексивность?
Да, это нужно чисто для строгих математических органов, чтобы у нас мы могли написать вот, допустим, вот такую вещь.
Так. Обычно мы будем указывать внизу... Да. А?
Не-не-не. Это выводимость. Переходов у нас как раз нет.
Получается, мы иногда будем указывать количество переходов внизу, за которые мы это делаем.
То есть, из-за этой конфигурации в эту конфигурацию мы можем попасть на 0 ходов.
Если за 1 ход, то это означает, что мы переходим по состоянию QP.
Но при этом количество переходов здесь может быть происходит.
Угу. Вот. Вот такое определение.
Как воспринимать, мы уже это поняли.
Это означает наименьшее подключение множества, которое подходит.
То есть, смотрите, по факту это индуктивное определение.
То есть, все такие конфигурации у нас есть.
Дальше. По переходу мы можем породить выводимость за 1 шаг.
После этого индуктивность у нас вырождается, определение за 2 шага, за 3 шага, за 4 шага и так далее.
Да. Продестрируемся на расчет. И как раз можно попробовать доказать.
Мы это не будем строго требовать, что это будет для меньших подключений от машины.
Почему важно наименьшее?
Да. Иначе можно взять все выводы и в итоге у нас определение просто сломается.
Так. Давайте пример.
А. Нет. Давайте не пример. Давайте поймем, как теперь определить выводимость слова в автомате. Распознаваемость.
Распознаваемость.
Да. Мы формально можем написать.
Да. Смотрите. Что означает язык распознаваемый автоматом?
Это множество всех слов.
Такое, что существует какое-то завершающее состояние.
Такое, что мы из стартового состояния, имея на входе слово W, можем дойти до конечного состояния.
Да. На входе останется action.
Все. Мы формально определили, что означает, что слово лежит в языке распознаваемого автомата.
Вообще, да?
Бегите.
А. Нет. Мы фиксируем. Мы говорим, что для любого перехода, который у нас есть,
то есть для любого перехода, который у нас есть, будет следовать, что для любого слова, которое мы допишем после, мы можем снять его с входа.
Ага. Вот. То есть вот так вот мы это все определяем.
То есть, собственно, и математически мы как раз с этим определением можем работать.
Собственно, и еще одно определение. Язык называется автоматным, если существует недетерминирный конечный автомат, который его распознает.
Ну, то есть здесь мы язык распознаваем автоматным, а язык распознаваем некоторым автоматом, вот он определяется так.
Но язык называется автоматным, если существует какой-то автомат, который, язык которого совпадает с нашим текущим.
Вот. Давайте пример некоторые разберем. И меня попросили его рассказать, просто потому что, чтобы вы понимали, как будут все плюс-минус факты.
Да. Да, спасибо большое. Да-да-да-да. Всегда забываю это написать.
Многие переходы, конечно, конечны. Надо будет с вами поправить.
Не, вообще никак не следует. Да-да-да. Итак, смотрите. Давайте рассмотрим в качестве примера вот такой автомат.
Мы будем хотим распознать множество слов в вида А вкат и В вельдер. ДКЛ не отрицательный.
Мы хотим доказать, что он является автоматом. Да? Вот автомат.
Вот автомат. А теперь начинается веселье с формальным доказательством того, что это слово является, что этот автомат распознает данный язык.
Ну, да. На самом деле, смотрите. Да.
Ну, да, конечно. Вот. Есть такой прикол.
Смотрите, что нам необходимо здесь сделать. Нам необходимо доказать два некоторых существующих факта.
То есть, смотрите, наша цель. Да. Смотрите, у нас есть L. Давайте вот этот L1. Обозначим, есть L2 равная LAT.
Тогда нам нужно доказать, что L1 равняется L2. Таким образом это можно сделать.
Как доказывается, что два множества равны? Да, одно вложено в другое.
Давайте попробуем привести, так сказать, с обеих сторон.
Значит, давайте начнем с первого факта. Что L1 вложено в L2.
О, да. То есть, обычную... На самом деле, тут надо написать некоторую цепочку.
Это мы доказываем, что L1 вложено в L2. Что мы делаем? Мы задним переход.
Снимаем одну букву. И так повторяем.
Это мы можем делать по как раз тому, что у нас есть переход в автомате.
Q0 B вельтой. Дальше за один переход мы переходим в Q1 B вельтой.
И снимаем все буквы.
Q1 B.
Так, Q1, конечно, мы победили. Вот он такой длинный был на доске.
Теперь в обратную сторону. Здесь уже интереснее.
И можно сказать, здесь есть некоторое рукомахание, но давайте попытаемся обойти без него.
Для этого мы заметим два факта, которые здесь написаны.
Факт номер один. Что если у нас Q0 B выводит слово Q0 ε, тогда и только тогда...
...тогда B равняется авкадой.
Да, да. А теперь как это доказать?
Ну, в одну сторону на самом деле мы можем доказать это все дело.
Индукции по кар.
База кара равняется нулю.
Когда у нас из Q0 B за ноль шагов выводится Q0 B.
Переход.
Рассматриваем слово вида авкады плюс один.
Да, на самом деле мы это уже расписали.
За один шаг мы снимаем.
А здесь мы по предположению индукции можем сказать, что это Q0 B.
Это в одну сторону.
Теперь в обратную сторону.
В обратную сторону что мы с вами делаем?
Делаем индукцию по длине вывода.
На самом деле мы с вами понимаем, что здесь Q0 B.
Вот.
Да, да.
База.
Длина вывода ноль.
Но из этого будет следовать, что за ноль шагов мы куда можем прийти?
Только в себя.
Переход.
Смотрите, переход.
Значит, что мы делаем?
Мы говорим, что слово у нас WAU.
Давайте вэхуем.
И рассмотрим первый шаг, куда мы могли прийти.
Из Q0 WAU у нас есть два варианта, куда пойти.
Либо мы пойдем в Q1, ну тогда мы с вами проиграем, потому что мы в Q0 не вернемся.
Либо мы сделаем переход в Q0.
Ну да, то есть мы это видим.
То есть это тут тонкий момент, что...
Ну да.
Вот.
Вот смотрите, из этого будет следовать, что W равно A.
А здесь из предположения индукции, из вот этого предположения индукции, будет следовать, что U это какое-то A в капле.
Следовательно, WAU это A каплю с первой.
Ну здесь оно вышло по длине слова, потому что у нас количество переходов одно и то же.
По факту это длинует с индукции по длине выхода.
То есть мы смотрим с вами на первый переход, понимаем, куда идти по первому переходу.
А дальше в пользу предположения индукции, то, что вот у нас...
Вот у нас, как раз, замеченное количество шпоф, мы получаем вот такой факт.
Да?
Да?
Ну?
Нет, нет, нет.
Вот именно...
А, смотрите, здесь, если говорить про факт, это означает, что если W равно A в капле, то вот этот вот термин существует.
Потому что вот этот объект существует во множестве вводимости.
В отношении вводимости.
То есть он мне гарантирует, что это всегда так.
Нет.
Нет, мы здесь не делаем.
А?
Нет, в кодинг есть компонент, только что в кодинг мы можем закончить, а в ноль мы закончить не можем.
Это тот же самый термин.
То есть я сказал как раз, что в техе мы обозначаем так, но мы можем на бумаге обозначать так.
Да.
Ну, смотрите, здесь аналогично будет доказываться, что SQ1 вводится на W тогда и только тогда, когда слово равняется W.
Да?
А дальше мы пишем последовательно, что SQ0, слово WU, мы какое-то количество шагов раскручиваемся до слова U.
Потом у нас существует вот этот вот перемышленный переход по Эпсилону.
И мы съедаем слово U целиком.
Тем самым, объединяя вот эти два факта, мы получаем, что первая цепочка – это авкатый, а вторая цепочка – это ВВЛ.
В итоге у нас слово получается в виду авкатый ВВЛ.
Вот.
Меня просто попросили вот это рассказать команде семинаристов, чтобы потом вопросов не было, а типа, о чем мы на семинарии ВУКСы доказываем, а на лекциях о алкологии.
Нет.
Ладно, следующий факт будет алкологический, кстати.
Который мы уже пропустим.
То есть вот формально, если попросим расписать вот это все по индукции, мы вот делаем вот таким образом.
Так, давайте двигаться дальше.
Мы будем сейчас доказывать два факта.
И эта цель как раз достаточно быстрая.
Первое утверждение, что в определении автомата можно считать, что существует одно завершающее состояние.
Именно так.
Это с точки зрения формальных утверждений, да.
Ну то есть по факту, что у нас несколько завершает, что у нас одно завершает, вообще погода не играет.
Это как раз то, что мы делаем, да.
И вот, вот, вот.
И вот, вот.
А вот, вот, вот.
Ну, вот, вот.
Ну, вот, вот.
А вот, вот.
Ну, вот.
Ну, вот.
Ага.
Можно считать, что завершающее состояние один.
Значит идея доказательства.
А мы берем все состояния, которые у нас были.
Делаем из них в эпсовом переходе в новое завершающее состояние.
Вот.
Если это формально писать.
У нас был автомат М.
Мы строим автомат М-штрих.
М-штрих.
В котором у нас состояние Q0 объединенное Qf.
Сигма.
Дельта-штрих.
Q0.
И завершающее состояние это множество Qf.
Да.
При этом дельта-штрих.
Это у нас дельта объединив.
С множеством Qf.
Qf.
Где купрен и жит Q-штрих.
Ой.
Купрен и жит Q-штрих.
А, это формально.
Что нам теперь надо показать формально?
Да.
Нам надо показать формально, что это один и тот же язык.
Да.
Ну, давайте покажем.
Чего-чего?
Ой, да.
Извините, опечатка.
Не смех, да.
Ну, что?
Давайте покажем это.
Я не помню.
На презентации есть доказательства.
Да, их есть.
Естественно.
Так, ну, смотрите еще.
Ну, да.
Смотрите, слово лежит в LFM.
Это что значит?
Это значит, что существует Qf.
Такое, что из Q0 по слово W мы переходим в Qe.
Да.
Ну, а теперь смотрите.
Значит, это у нас в автомате M.
Тогда из вот этого следует, что из Q0 по W мы можем в автомате M-штрих перейти в Qe.
Так как у нас дельта вложена в дельта-штрих.
Да.
А здесь мы уже за один переход.
Поскольку у нас существует новый переход, мы переходим в Qe.
M-штрих.
То есть переходим один раз.
Теперь в обратную сторону.
W лежит на M-штрих.
Это означает, что из Q0 по слову W существует зака переходов в переход в Qf.
Какой переход нам надо рассмотреть?
Последний.
Ну, да.
Да, формально все-таки стоит об этом сказать, потому что если K равно 0, то Q0 равно R.
Это приходит противоречию, потому что мы добавили новую вершину в нашу множество.
Значит, мы можем рассмотреть последний переход.
Значит, существует Q.
Такое, что из Q0 мы по слову Uw за камену с один переход перешли в какое-то Q,
прочитав слово W, и дальше за один шаг мы переходим в Qf.
Ну, давайте подумаем, что означает, что мы перешли в Qf.
Это значит, что мы перешли по новому переходу.
Да, из этого будет следовать, что Q принадлежит F, а W принадлежит Epsilon.
Ой, W равняется Epsilon.
А второй F-шаг, который мы с вами можем заметить, из этого, из транзитивности определений,
которое у нас есть, мы можем сказать следующее, что Q0, Q будет тогда за камену с один шаг выводить QEpsilon.
У принадлежит F, в этом и выглядели.
Из этого будет получаться что?
Что U принадлежит L и D.
Следовательно, Uw, которая равняется U, которая равняется V, будет лежать в языке с двумя автоматами F.
Да.
Так, вот этот вот переход, да?
Да, сейчас давайте подумаем.
Да, хороший вопрос.
Я всегда думал, можно ли упростить определение выводимости слова автомат в конфигурации, но вот кажется нельзя.
Давайте мы дополнительно в выводимости в конфигурация добавим следующее свойство, что мы можем выбирать букву с конца.
Понятно, что это?
Нет, то есть давайте вот, чтобы вот такой фазовый переход у нас произошел, мы просто в определение конфигурации в выводимости добавим это свойство.
Да, давайте, давайте мы его формально напишем.
Надо подумать.
Вот, честно сходу.
Вот, раньше оно было, раньше оно добавлялось, потом я почему-то решил его брать, и вот, видимо, надо вернуть снова.
Давайте пока добавлю, если что, мы уточним, что для любого у уменьшающего сигнанса с другой, такое, что для любых троек такое, что у уменьшает сигнанс с другой,
такое, что для любых троек такое, что у1, а ув выводит у2в, из этого будет следовать, что у1, у, вот так.
У этого свойства как раз им не хватает, потому что мы решили с конца убрать букву В, слово В.
А, слушайте, да, по факту мы нифига не убрали, да, потому что В пустое слово.
Ну да.
А, ну да.
А, ну да, тут еще формально нужно сказать, что, смотрите.
Ну да.
Да, то есть тут надо, тут я понял вас, что мы типа пошли вот, типа, если бы мы сузили множество дельта вот на вот эту вот печь, да, вот это у нас QF,
то есть QF мы обратно не могли пройти, и в итоге у нас вот этот вот переход не сломался.
Да.
Да. Да, есть такое.
Ну да, да, мы говорим, что да, если у нас, что если у нас какой-то переход идет из QF, то это, да, ну давайте я этот момент то, так сказать,
точню, что, в качестве замечания, что если у нас из QF W идет состояние Q ε, то из этого будет следовать сразу, что В равняется ε, а Q равняется QF.
Вот. Тогда мы, кажется, починили это.
Все отлично.
Хорошо. Ну вот, формальное доказательство.
Мы его пропустим.
Вот оно расписано.
Так, а теперь смотрите, следующее утверждение, которое у нас будет.
Мы можем сказать, что в любом автомате у нас не более чем однобукленные переходы.
У любого N,K,M существует N,K,M', такое, что L от M, штрих, равняется L от M,
и у любого Q1, Q2, принадлежащая дельта, штрих, будет пополнять следующее, что длина слова W не больше чем L.
Если мы сейчас начнем это все дело формально доказывать, мы застрянем на полторы лекции.
Да.
Да.
Ну...
Гениальная идея.
Гениальная идея, но лучше все-таки новоалфавитную использовать.
Все-таки с теоретической точки зрения это работает, это интересное доказательство.
А с теоретической точки зрения все-таки лучше подумать на статистическом доказательстве.
Все, да.
Формально это долго доказывать.
Да.
Да, в данном моменте можно.
Ну, потому что...
Ну...
Ну, как бы...
Ну, я говорю, тут нужно долго и муторно писать все эти индуктивные переходы.
Да.
Да.
Да.
Да.
Да.
Хороший моргает.
Так, ладно, раз презентация моргает, теперь мы докажем с вами первую теорему.
Доказательство вот этого факта понятно, что идея доказательства.
Что мы берем букву и разбиваем нам слова.
Теорема будет заключаться в том, что мы вместо знака не больше поставим знак равно.
То есть мы с вами построим автомат с однобуквенной переходами.
Собственно, и это уже нас хоть как-то приближает к детерминированности нашего автомата.
Так, теорема 1.
В условиях утверждения 2, знак не больше, можно заменить на знак равно.
Понятно, формально означает, что у любого МК существует такое МК, у которого все переходы имеют длину слова.
Имеют длину слова равные единице.
Да, и кстати, замечательная картинка, как это происходит.
Да, и кстати, презентация будет в картинке.
Если вы хотите посмотреть примеры, то там возможность посмотреть.
Итак, вот она теорема.
Как вы думаете, какой шаг будет первым?
Доказательство этой теоремы.
Нет, сначала у вас будет один шаг.
И вы, если вы хотите посмотреть примеры.
Вы думаете, какой шаг будет первым?
Доказательство этой теоремы.
Нет, сначала убрать переходы длинные.
То есть перевести автомат в виду, который здесь.
Да, а потом как-то убрать эпсилу.
Да, да, пока да.
Это мы будем уже решать на следующей лекции.
Ну, ну, да, конечно, легко в 10 классе это проходилось.
Так, значит, смотрите, идея.
Да, идея, удаляем, стягиваем переходы.
Я сейчас картиночную покажу, потому что это алгоритм.
Смотрите, если у нас есть переход такого типа.
Вы не моделите, пожалуйста.
То мы делаем следующее.
Мы добавляем переход, который стягивает эти эпсилы перехода.
И идет переход по букве А.
Транситивное замыкание кто-нибудь слышал?
Не такое вы поняли.
То есть мы добавляем новый переход, который у нас возникает вот таким вот образом.
А если у нас есть вот такая цепочка из эпсилу,
в которой у нас ведут завершающие состояния,
как вы думаете, все состояния делаем завершающими?
Третий пункт удаляем все эпсилы перехода.
Ну, не важно, достижимость по эпсилам.
То есть у них может быть, здесь могут быть одинаковые вершины.
Да, ну то есть теперь нам надо математически определить,
как обойти кейс с бесконечным-конечным переходом.
Вот.
Для этого нам нужно математическое формальное определение,
и мы его доказываем сейчас.
Нет, в нем будет конечное число перехода.
Это я гарантирую.
Не-не-не-не-не.
Мы не будем дублировать.
Вот так.
Ну, просто мы будем заводить конкретно,
конкретные переходы мы будем заводить,
чтобы этих проблем не возникло.
Давайте посмотрим картинку на формае доказательства.
А, тут пример, как этот автомат будет выглядеть.
Ну, да.
Здесь просто картинки, как этот автомат будет выглядеть.
Да, то есть вот они были в самом переходе, мы их удаляем.
Да.
Вот, смотрите, вот такой автомат получается.
Кстати, можете начать писать алгоритм.
Это вам может помочь.
Ну, мы начали писать алгоритм.
Ну, он звучался на буквальном переходе.
Атомат, который стоит.
Так, смотрите.
Значит, ведем дополнительное множество.
Обозначим дельта от Q в
множество тех состояний у штрих,
такое, что из Q0
из Q по V
мы можем дойти до состояния у штрих.
Вот это нужно для того, чтобы как раз бесконечное количество
состояний не городить.
Как раз Михаил спросил его.
А теперь, смотрите, делаем интересную вещь.
Интересная вещь состоит в том,
что давайте мы в новом автомате
определим дельта штрих в следующем образом.
Что это все слова
Q1, A, Q2.
Что существует?
Q3, принадлежащая Q.
Такое, что
Q3
это дельта из Q1 по х
что?
Это те состояния,
да,
в которые можно дойти, имея на ходе слово W.
Достежим.
Вот.
А теперь, смотрите, что мы делаем.
Вот давайте посмотрим на картинку.
Вот мы что делаем?
Мы по факту делаем следующее.
Что из Q1 до Q3
мы доходим по Эпсилону,
а потом по этой букве А
делаем переход с пульба.
Вот это формально здесь написано.
Да.
То есть здесь все конечные объекты у нас.
То есть Q3 у нас может быть конечное количество.
Переходов таких конечных,
соответственно уже в таких состояниях у нас будет конечное.
Ага.
Да.
Да.
Да.
Соответственно наш новый автомат будет выглядеть следующим образом.
Q
сигма
дельта штрих
Q0
и здесь важная F штриха будет.
F штрих
будет множество состояний Q
такие, что
существует QF
F
что
да, так
вот так
Ну да, я просто это записал.
Вот так, да.
Ну нам теперь надо доказать, что ничего нового нет.
Логично?
Так.
Вот я
проекта
не моргай.
Ой.
Так.
Потому что
потому что принадлежит.
Вот так.
Все.
Усадь не было в чатке.
Я что-то разбежался,
интердинированным это будет аналогично.
Ну что, давайте доказывать.
Так.
Давайте сначала начнем
с простого факта.
Как вы думаете, что проще?
Из MF4 доказывают?
То, что из новом автомате.
Если есть путь, то в старом есть.
Или наоборот.
Ну давайте
начнем справа налево.
Пусть у нас B.
Bnt
лежит в электрочке.
W1Wnt это буквы.
Ну что тогда у нас получается?
Смотрите.
Когда у нас
существует
такое Q
принадлежащее в F',
что из Q0
по слову W
мы доходим
в новом автомате M',
до слова Qepso.
А что означает
вот эта вот вещь?
То, что это лежит в F'.
Это означает,
что существует QF
из F',
такое, что
из дельты
это в старом автомате.
QF
Да.
А.
Да.
Да, да, да, да.
Так, здесь
закрывается в другом порядке.
Так.
Вот.
Пойдет?
Ага.
Ну если что,
при монтаже
надо лучше
доску оставлять,
вот, смотрите.
Тогда у нас
существует Q из F,
что delta штрих
delta от Q штрих
epsilon равняется Q.
То есть,
delta Q epsilon.
Из этого будет следовать, что
что в новом автомате F
из Q
по epsilon
в автомате M
достижим QF.
QF epsilon.
Это мы раскрыли, что такое, что в купорном лежит F,
F с крышечкой.
А теперь,
так,
то есть мы по факту восстановили последний кусок цепи в нашем автомате.
А теперь вот эти вот
сомкнутые состояния нам надо разомкнуть.
Смотрите.
Какое у нас там у нас состояние?
Q было, да?
Смотрите, здесь важно, что у нас все переходы однобухленные.
Это означает, что из Q0
в M штрих за один переход
мы с вами можем дойти в Q0.
Какое это состояние? Q1.
В Q0
мы можем дойти в Q1.
В Q1
мы можем дойти в Q1.
В2, ВNT.
Дальше за один переход мы можем с вами дойти до Q1.
Q2,
V3,
VNT
и так далее.
Что?
Ну, там тонкие моменты могут возникнуть.
То, что именно на Q1.
Вот эти переходы.
Давайте рассмотрим какой-нибудь из переходов.
Вот этот вот.
На.
Смотрите.
Из этого следует,
поскольку этот переход в одном месте был,
то у нас получается есть переход
Q0
по букве V1
в Q1
в дельта штрих.
Но тогда
у нас,
вот если мы берем определение,
то существует
Q1 штрих
такое, что
Q1 штрих
принадлежит дельта
Q0
ε.
А Q1 штрих
и Q1 штрих
по слову W1
переходит в Q1.
И это лежит в старом множестве состоянии.
Но из этого следует, что если мы напишем
множество в выводимости Q0
V1 в старом автомате,
то из вот этого факта
мы будем получать,
что есть переход Q1
штрих по слову W1.
А дальше
используя вот этот факт,
мы будем получать
Q1
штрих
используя вот этот факт
это в автомате N.
Мы получаем,
что мы находим Q1
читая слово W1.
Ура!
То есть мы получаем
вот этот вот переход,
который был в М-штрих,
можем сделать и в автомате N.
Да.
В итоге
аналогично для K,
мы получаем
N, мы получаем следующее.
Мы получаем следующее, что?
В N, мы
уже в автомате M
делаем переход Q0
до нашего состояния Qε,
а дальше
вот тот аппендикс,
который у нас был
в правой доске,
добавляем.
Да.
Да.
Будет задача
в домашних заданиях
показать, что
нельзя это сделать.
Да.
Это не чинится.
Есть примеры языков,
которые
выломаются,
на которых нельзя подплыть.
Энкасы однобухними
переходами
не оставлять состоять.
Вот.
После этого следует,
что наше слово
W,
W1, Wn
лежит в языке,
задаваемое.
Это доказательств
в одну сторону.
А доказательств
в вторую сторону.
Оно сложнее.
Для этого нам нужно
написать несколько буквок.
Итак.
Пусть у нас слово W
равняется W1.
Wnt
лежит в языке,
задаваемое.
Тогда
существует
Q,
принадлежащая
F большая,
такое, что
из Q0
заходят
несколько шагов,
но в таком-то
завершающем состоянии
на входе
имеется F.
И вот тут
начинается веселье.
Я сейчас скажу,
это немножко неформально.
Давайте мы,
поскольку у нас
все переходы
имеют длину
либо 0,
либо 1,
будем отслеживать
тот момент,
когда мы считываем букву.
Да, у нас есть
конечный путь.
То есть у нас
есть
некоторые переходы.
Давайте
здесь напишу.
Ну типа здесь как раз вот
Да, то есть смотрите,
что у нас получается.
У нас Q0
Wnt
Дальше у нас идет
какой-нибудь переход.
Q1
1
2
Да, давайте обозначим
это минус K.
Потом
мы делаем
минус K плюс 1
K1
Дальше у нас
покритит
состояние Q1 0
И потом
за один шаг
мы уже считываем
ту букву,
которая у нас есть.
Q1
W2
Wn
То есть
неформально
отслеживаем
тот переход,
по которому мы
прочитали определенную букву.
Да, тут просто сейчас
индексов будет
очень много.
Минус K2
Q2
И так далее.
Потом у нас
останется какой-то момент,
в котором
так, тут с индексами
ими напороть
Qnt ε
И дальше у нас
уже идет
вывод до нашего Q ε.
Я не буду раскрывать
эту цепочку целиком,
но вот с индексом
получается так.
Тогда из верхней строки
у нас что будет следовать?
В новом переходе.
У нас получается,
смотрите,
Q1 0
принадлежит дельта
от Q0
ε
И есть переход
в автомате.
Да.
Следует
переход с Q1
И, значит, из этого
что у нас будет следовать?
Да, из этого
будет следовать,
что у нас
в новом автомате
есть переход
из Q0
по слову W1
по слову
состояния Q1
и так далее.
Повторяем это
для всех строк
аналогично.
А из вот этого следа,
а из вот этой штуки
будет следовать что?
Да, что Qn принадлежит f3.
Да.
ε
Здесь у нас получается
Qn-1
Wnt
будет следовать
Qnt-1
А если теперь
это все объединить?
Да.
Но мы получаем
полный выбор.
Wnt
выводит
Q1
Это уже будет
в нашем состоянии m'
То есть вот это
у нас все m'
m'
m'
Qnt-ε
Qnt
принадлежит f'
Собственно, из этого
следует, что
принадлежит языку
задаваемому
по f'
Все, закончили
доказательства.
Такое
внутреннее
немножко доказательство,
потому что
буквок надо порасписать.
Идеально, да.
Значит, в качестве
упражнения,
которое там
может быть на семинах
разбруться,
почему
мы сначала
стягиваем
переходы
то есть почему
мы сначала идем
по f'
а потом стягиваем
переходы по b'
Наоборот,
делать нельзя.
То есть
Да, тут просто
формально все
подвисывается.
Давайте я просто
покажу.
В общем, почему
делается картинка
вот так, а не
наоборот?
Почему
сначала
не стягиваем
так, что сначала
делаем переход
по b'
а потом по f'
Вот да.
Это упражнение.
Вот.
Мы даже плюс-минус
сегодня успели.
Да.
Значит, мы с вами
сегодня
познакомились
с тем,
что такое
конечный автомат,
что такое
неоперимерный
конечный автомат,
разобрали,
как его
вводить
и предели
его к
однобуквенным
переходам.
Значит, в следующий раз
мы с вами будем
строить
неоперимерный
конечный автомат
и поговорим
еще немного о том,
как распознавать
вот.
Давайте вопросы.
А по-другому
это означает,
что мы берем
переход
по букве a
и по епсуанам
и мы их не стягиваем.
Сейчас нарисую картинку.
Слышишь?
Слышишь?
То есть почему
нельзя делать вот так?
Почему мы делаем
именно так, а не так?
Кажется,
с точки зрения
просто процесс
это одно и то же,
но вот так
делать нельзя.
Ну вот,
просто
люди,
обычно, которые
не смотрят
лекции
и не смотрят
на семинары,
приходят
на первого контроля
и делают вот так.
Ну вот,
просто
практически пример,
что реально так бывает.
Вот сзади
вот так.
Ну вот да,
то есть
аккуратнее с тем,
что надо стягивать
минуту.
А не так.
Так.
Все.
