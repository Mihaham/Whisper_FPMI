Давайте, наконец-то, давайте перейдем от чего-то мерско-технического к чему-то прекрасному,
к геометрии. Это, конечно, может прозвучать как болт иногда, конечно, но что делать?
Ну, действительно, на самом деле, действительно, геометрия, конечно, часто сводится к какой-то
действительно достаточно мерзкой технике. Ну вот, поэтому иногда становится важного,
для чего нам нужен был сегодня? Прямо настолько к физнесу действительно нужен был проект. То есть
для того, что сегодня мы какие-то простые вещи все-таки покодим. Потому что там часто бывает,
что там, потому что в геометрии бывает много простых вещей. Сыкла, ну понятно, как написать. Ну вот,
но как бы часто есть риск, что можно написать их сильно более сложно, чем можно было бы,
и при этом запутаться. А геометрия у нас, это, конечно, самая вещь, где действительно очень важно
не путаться, очень важно действительно понимать происходящее прям максимально точно,
потому что там любое какое-то там соображение, там соображение, виды, ну понятно, что это так,
называется, там ждет, потом обернется вам какие-нибудь ВА-37, и вы будете долго думать,
почему. А выяснится, что там проблема, что отрезки бывают там чисто вертикальными, там, например,
все отрезки могут быть чисто вертикальными. Да, ну иногда они вырожденными бывают. Нет,
обычно, ну чаще всего все-таки нет, такое вам явно в виде пропишу, что все отрезки не вырождены.
Но там всякое, да, всякое это бывает, то есть тут уже максимальная аккуратность, максимальная точность,
поэтому, да, но благо мы сейчас с вами находимся все-таки не там в восьмом классе конч школы,
а на втором курсе вуза, это означает, что вы, то есть в принципе, дошедшие до сюда, по идее,
сдали экзамен по линалу, поэтому это означает, что видимо какая-то хорошая соображалка по геометрии
у вас уже есть. Ну, в частности, вам не нужно прям излишне долго вводить там какие-то базовые
объекты. Какие у нас базовые объекты в геометрии? Да, мы будем говорить в первую очередь о двумерной
геометрии и, конечно, ключевым у нас является понятие вектора, но вектора не того, как у нас,
то есть это вектор, это такой не динамический массив, а вот геометрический вектор. Ну давайте
просто, хотя тут, конечно, уже проблемы на уровне определения, а что такое вообще вектор?
Класс эквивалентности направленных отрезков. Да, в школе учат вектор, это направленный отрезок,
но это, к сожалению, хюжболотное. Да, то есть правильная точность это называется, да,
это вектор, это класс эквивалентности направленных отрезков относительно параллельного переноса.
Я учил в билетке. Классно, где учил? У нас было, это первое
определение с первой лекцией, Полиналыч. Замечательно, замечательно. Ну, тогда вам не надо
рассказывать, что вектората можно складывать, вычитать, умножать на число, наверное, да. Но
все-таки какие-то вещи, то есть, напомню, применительно к обычно вычислительной геометрии.
Потому что вектор можно складывать, можно вычитать, можно умножать на число, причем
отрицательная и даже ноль. Вот, ну еще как-то, ну вот, еще у вектора можно искать его длину,
а можно искать, чаще, чаще бывает, что нужно искать не длину, а ее квадрат. Это очень приятно,
потому что квадрат может быть того же типа, что и сам вектор, а вот корень из него взлетать
придется уже точно в каких-то непонятных доблах, ну или там, я не знаю, в каком поле вы живете.
Вот. Ну а что у нас еще у векторов есть? Ну, конечно, важно, конечно, отметить, что, то есть,
мы действительно как-то хотим иногда сравнивать вектора друг с другом, то есть, какие-то
искать взаимоотношения. Ну и важным взаимоотношением, конечно, у векторов является скалярное
произведение. Так, вот тут, конечно, да, я тоже рискую повторить, конечно, то, что у вас было
на первых лекциях по линалу, но тем не менее. Вот в нашем случае, то есть, допустим, есть,
у нас даны два векторов V1 и V2. Ну вот, да, ну, конечно, да, с точки зрения линала скалярным
произведением может быть любое отношение между двумя векторами, удовлетворяющее какие-то свойства
билинейной формы. Вот, но с точки зрения нашей сугубо прикладной жизни скалярное произведение,
то есть, вот V1, V2, это что такое? А вот тут как выводить? На самом деле, у этой штуки можно
вводить два определения и доказать, что они эквивалентны, то есть, вывести из одного второго. Мы
сделаем вот как. То есть, на самом деле, мы скажем, что по определению скалярное произведение это
произведение длин векторов на косинус угла между ними. Вот. Нет, нас это не колышет. Мы живем в
обычной 2D геометрии, то есть, мы не изобретаем себе супер линейное пространство повёрнутое
какие-то, поэтому для нас длина, это прям вот длина вот этого отрезка, поэтому она потеряем
пифагора, корень, язык, квадрат, спецыгры, квадрат, всё. Нет, ну как же, нет, ну как?
В вашем определении зависит этот координат. Зависит. Ну, это нормально. Мы живем в декартовой
системе координат, как бы всё нормально. Вот. То есть, мы живем в декартовой системе координат,
то есть, как бы на одной и той же плоскости их можно вводить, в этом мы и верим. Вот. То есть,
поэтому совсем уж в эксиоматику школьной геометрии мы вдаваться не будем. Теоретически, мы, конечно,
можем там это вводить. Кажется, что с точки зрения школьной геометрии всё нормально,
но если будет как в УЗИ, то уже начинается беда. Нет, то есть, если капнуть, то уж совсем настолько,
наверное, капать будем, хотя какую-то вузовскую логику мы применим. Да, в УЗИ мы скорее, мы кость
у нас вводили через вот эти вот штуки. О да. Потому что у нас длина это скалярный квадрат, а кость
мы ввели так, чтобы у нас поделилась, потому что водитель, как это, длину через скалярное
произведение некорректно, как-то она сама, ой, сейчас скалярное произведение через длину некорректно,
так как у нас длина произведена через скалярное. Нет, то есть, это глобально абстрактно вводить туда.
Но мы сейчас будем пользоваться всё-таки более школьным определением. Ну ладно, если уже
рашла речь, давайте вспомним, а что такое косинус вообще? Да, вот тогда самый страшный вопрос,
а что такое косинус вообще? Да-да-да-да. Кто-то, кто-то немножко... Частная часть, я в степени ифи.
Я сказал школьная, а не прям вот настолько, да, замечательно. Придётся ещё экспоненту там вводить,
нет. Ну всё гораздо проще. То есть, мы говорим, что у нас есть действительно плоскость, мы берём
единичную окружность, берём вот единичный вектор и поворачиваем его на угол альфа.
Да, и тогда оказывается, что абсцисса тогда конца этого вектора будет равна косинусу альфа,
а ордината синусу. Это прям определение. Вот. Ну в школе, конечно, в 7 классе дают и более тупое
определение, что там что-то там про отношение прилежащего к катераке по тенузе. И это,
в общем, тоже, и это согласуется с этим определением в диапазоне от 0 до 90 градусов, конечно. Так,
вот. Ну, соответственно, да, и так, длина понятна, нахикосинус понятна, но есть мистическая тема,
что нам, конечно, иногда будет очень хотеться вычислить это скалярное произведение. Но оказывается,
что она обладает маленьким приятным свойством. Каким? Что, оказывается, её можно выразить очень
легко через координаты. Но каким образом? Ну, чтобы это понять, мы обнаружим, что, конечно,
эта штука линейна, оказывается. Вот мы пока не знаем, как ее выражать есть корректно, но мы знаем,
что она линейна. Ну, потому что она линейна по каждому своих координат, то есть билинейна. Да,
то есть, ну, во-первых, заметим, что, во-первых, там v1, v2 равно v2, v1. Давайте я вот стрелочки,
уж извините, рисовать не буду. Вот. Хотя, конечно, по-хорошему надо бы. Вот. Ещё известно,
что там, скажем, а v1, v2 равно а на v1, v2. Ну, на самом деле, доказательство это факто не так
тривиально, как кажется. Потому что, если вы, допустим, v1 домножаете прям на положительное
число, то, в общем-то, становится всё очевидно. А если домножаете на отрицательное, то здесь
тогда надо аккуратно рассмотреть, что длина увеличилась не в минус три раза, а в три раза,
но, то есть, умножение на минус достигается из-за того, что cos p-alpha равен minus cos alpha,
как отсюда видно. Вот. Понятно, да? Это понятно, да? Мне кажется, этот билет на ут будет самым
другом среди всех. Да ладно. Не, ну, по-моему, сдавшие линал не должны этого пугаться. Так,
что у нас ещё есть? Есть, на самом деле, самый нетривиальный фактор из биленейности. Это то,
что, там, допустим, v1 на v2 плюс v3 равен v1 v2 плюс v1 v3. И вот тут действительно не всегда n-от. И
вот это так, из этого определения не так очевидно. Вот. То есть, тут н-от. Но доказательство здесь
оказывается такое, потому что, заметим, на самом деле, следующее. Вот, действительно, давайте
вот нарисуем действительно шутку о скалярной произведении v1 на v2, на самом деле. Вот, давайте
вот v2 даже подальше нарисуем. То есть, на самом деле, если вы домножите v2 на cos с угла между ними,
то вы получите длину проекции с точностью до плюс-минус. Я это буду называть длина
ориентированной проекции на заданную прямую. То есть, если проекция со направлена, то она,
мы будем смотреть, то тогда она будет положительна. Если разно направлена, то будет отрицательна.
Тогда легко убедиться, что у нас, как раз, получается длина такой проекции. Вот. Ну,
и действительно тогда несложно видеть, что когда вы складываете v2 с v3, то и проекции тоже
складываются. Вот. Причем даже с учетом ориентации, там можно аккуратно все случаи увидеть. Понимаете,
да? Вот. Отсюда и получается вот такое утверждение. Вот. То есть, полезно себе его видеть именно так.
Итак. Ну, в принципе, да, эти три теория, мы говорят нам о том, что у нас функция,
что действительно такое скалярное произведение, это билинейная функция. Но теперь остается только
заметить, что скалярное произведение вектора там 1,0 на себя любимого равно 1. Скалярное
произведение вектора 1,0 на 0,1 равно 0. И скалярное произведение 0,1, 0,1 равно 1.
Ну, можно сказать, что оно симметрично? Ну, точнее.
Ну, мы, я и сказал. Нет, 1,0 и 0,1 это раз для вектора. Вот. Ну, скажем так. Присимметрично, а, это первое.
Не-не-не. Если бы, как бы, я использовал симметрично, чтобы здесь не писал 0,1 на 1,0. Вот. В принципе,
то есть, на самом деле, я утверждаю, что из этих четырех фактов, в принципе, скалярное, там,
то есть, это скалярное произведение определяется однозначно. То есть, мы могли сказать по-другому,
что скалярное произведение — это такая билинейная функция с вот такими базовыми значениями.
Логично, да? Вот. То есть, в принципе, на самом деле, из нее можно вывести. Ну, давайте вот
быстренько сделаем это. То есть, отсюда тогда можно вывести, что пусть у меня, допустим,
v1 равно, допустим, вот я так скажу, x1 на e1 плюс y1 на e2. Ну, понятно, e1 — это вот там, то есть,
понятно, это вектор 1,0, а это вектор 0,1. И тогда что получается? Ну, вот v2, очевидно, тогда тоже
будет равно x2 e1 плюс e2 e2. И тогда поехали. Скалярное произведение v1 v2 равно чему? x1 e1
плюс e1 e2. И там, соответственно, x2 e1 плюс e2 e2. Это равно. Вот. Но если разложить, то есть,
если разложить по вот этому третьему свойству, что смущает? Ну, вот. То есть, если разложить по
третьему свойству, то получится, что это равно x1 e1 плюс e1 на e2, запятая x2 e2, плюс x1 e1 плюс
x1 e2, запятая, а тут x2 e1, а тут x2 e2, да. Ну, здесь, в общем-то, да, ничего себе. Ну, вот. Ну, в принципе,
заметим, что я их могу, что тут есть симметричность, я их могу поменять местами и разложить по второму,
и потом поменять их местами обратно. Там получится что-то типа x1 e1, там x2 e1 плюс
игрок 1 e2 на x2 e1, плюс x1 e1 на игрок 2 e2, плюс игрок 1 e2 игрок 2 e2. Вот. Ну, теперь давайте
вспомним, что у нас еще есть второе свойство, по которому буховку можно выносить из первого
аргумента, но с точностью до свапа можно из второго тоже. Получится x1 x2 e1 e1 плюс игрок 1
значит x2 на e2 e1, вот, плюс x1 игрок 2 на e1 e2, значит, плюс игрок 1 игрок 2 на e2 e2. Теперь мы замечаем,
что теперь мы замечаем конкретно в нашем случае, в случае скалярного произведения, что это у нас,
значит, это у нас 1, это 0, это 0, это 1, и получаем, что в случае скалярного произведения у нас
получается мистическая формула x1 x2 плюс игрок 1 игрок 2. Вот. Да. То есть вот, собственно, и вывели.
Вот. То есть можно было скалярное произведение определить наоборот, определить вот так,
а потом неожиданно доказать, что. Доказательство было бы, что, заметим, что скалярное произведение
удовлетворяет этим свойствам, вот эта функция обладает вот этим свойством, и, а такая функция
одна. Так что, соответственно. Ну, там, как угодно, в общем, можно. Вот. То есть, это, ну, то есть,
это в принципе я написал основополагающие такие свойства, которые определяют само скалярное
произведение. Ну, вот. Ну, впрочем, оно нам, конечно, ну, то есть оно нам вообще чем приятно? Оно приятно тем,
что, в общем-то, в том же, если вы храните вектора в каком-то типе, типе t, то, в общем-то, скалярное
произведение вычисляется ровно в том же типе, без всяких там доблов. Что можно сделать со скалярным
произведением? Ну, самый тупой пример, конечно, то есть какие-нибудь там свойства еще можно там
написать. Какие можно свойства написать? Ну, можно написать, что там, допустим, мы можем написать,
что v1, v2 равно нулю тогда и только тогда, когда v1 перпендикулярно v2. То есть, если нам задача
проверить верно ли, что там вектора перпендикулярные, то, соответственно, надо просто вычислить скалярное
произведение и проверить не ноль ли это. Вот. Да, ну, на эту тему, в принципе, можно вообще сделать
еще вывод, что там, допустим, минус yx всегда перпендикулярен вектору xy, на самом деле. То есть,
если ваша задача повернуть вектор xy до 90 градусов, вы просто рисуете минус yx. Почему? А вот потому,
что подходит. Вот. Так. Какие там у нас еще, что еще можно сделать с скалярным произведением? Так-так-так-так-так-так-так-так-так.
Что-то, наверное, можно. Какие там еще свойства были? А, ну, конечно, заметим, что у нас не только
про перпендикулярность можно говорить. Про скалярное произведение можно еще понять уже на
уровне скалярного произведения. Если вектора не перпендикулярны, то какой угол между ними?
Острый или тупой? Как это сделать? Ну, вот. Ну, на самом деле, да. Можно заметить, что скалярное
произведение положительно тогда и только тогда, когда угол между v1, v2 острый и, соответственно,
меньше нуля, когда тупой. То есть, обратите внимание, вот очень важно, что чтобы узнать
угол острый или тупой, не нужно вычислять какой-то косинус, что-то там делать. Боже упаси. То есть,
надо просто вычислить скалярное произведение и проверить, является ли угол. То есть, что
получилось? Ноль больше нуля меньше. То есть, это делается абсолютно точно. Да. Ну, на всякий
случай, когда я говорю абсолютно точно, то есть, я имею в виду, в первую очередь, я имею в виду
какое-нибудь поле. То есть, как я уже этим рассказывал, то есть, я там, собственно, в своей
какой-то научной работе писал всю эту геометрию, но там все жилось в поле a плюс b. Ну, например,
a плюс b не из двух, где а и b – рациональные числа. Рациональные числа писал в питоне, поэтому там
конкретные длины числителей и знаменателей не принципиально. И тогда просто чем это приятно?
Это приятно тем, что такие числа можно складывать, вычитать, умножать и делить, и все, что укладывалось
в эту парадигму, делалось абсолютно точно. То есть, я не мог абсолютно точно вычислить, конечно,
длину вектора, но квадраты ее длины я абсолютно точно вычислить мог. Но всякие вот эти скалярные
произведения, векторные произведения я, конечно, мог вычислить без проблем. Вот. Но, кстати,
в принципе, уже идея в том, что, как минимум, вот, то есть, еще, конечно, приятное свойство,
что вы, если вам нужно вычислить косинус угла, именно косинус, то его можно вычислить вот таким
нехитрым образом, правда, это уже не абсолютно точно. Но, тем не менее, ну да, если они, ну,
если мечта, мечта. Обычно это не так. И более того, даже если изначально это так,
то там погрешность начинает накапливаться. Поэтому иногда их приходится нормировать. Но,
впрочем, об этом позже. Вот. Так, но, конечно, у нашего скалярного произведения есть замечательный
напарник. Напарник называется... Тензорное произведение. Вау! Не, ну не настолько. Нет,
если в тензорное. Нет, то, что я имею в виду, обычно мы его будем называть, это, конечно,
некорректно абсолютно, но мы будем называть его векторным произведением. Да, это, конечно,
некорректно, потому что, на самом деле, векторового произведения, как вы уже знаете, в двумерной
геометрии не существует, да. Оно существует только в трехмерной геометрии, в семимерной,
геометрии. По-моему, там были какие-то приколы или что. Вот. И вообще, то, что я сейчас напишу,
это будет вообще официально называется псевдовекторное произведение или даже
косое произведение. Но мы его будем называть вектором. Итак, что же это такое? Это будет
V1, V2 присвоить. Ну, абсолютно то же самое, но на синус. Че? Че? В чём вопрос? В чём? Окей. Вот.
Это у нас такое скалярное. Так, господи. Не, вопрос какой-то интересный, что-то Миша завис.
Ладно. Так, ладно, пока не заморачивайся. Ладно. Значит, смотрите. Так, ребят. Теперь давайте
смотреть, что верно про векторное произведение. Ну, заметим, на самом деле следующее, что векторовое
произведение симметричность не верно, но антисимметричность верна. Да, смотрите, тут очень важно заметить,
что когда мы говорим угол, нам важно, в какую сторону он ориентирован. Потому что если мы альфа
заменим на минус альфа, то и векторное произведение от этого поменяет знак. Поэтому мы будем говорить,
что в1, в2... То есть мы будем говорить, что когда мы говорим векторное произведение в1, в2,
мы будем иметь в виду тот угол альфа, на который надо повернуть в1 против часовой стрелки,
чтобы он с в2 составился. Да. Здесь, конечно, стоит оговориться, что мы имеем в виду по умолчанию,
конечно, систему... То есть вот такую систему координат, где как бы есть... То есть такой как
это называется обычно там что-то типа правостороннее, левостороннее. В общем, короче говоря, ту, в которой
1, 0 надо повернуть на 90 градусов против часовой стрелки, чтобы получить 0, 1. Да, заметьте, в общем
случае это не так. Потому что в принципе иногда бывает, что я могу ось Х отправить туда, а ось Y
вниз, и тогда у нас там повороты по и против немножко перепутаются. Ну, с точки зрения знака, конечно.
Вот. Но обычно мы будем предъявлять себе вот что-то подобное. Или если имеем в виду что-то другое,
то там уж будем явно проговаривать, впрочем, это нам будет неудобно. Так. Но заметим следующее. Да,
первое свойство такое превращается в антисимметричность. Вот. Значит, но второе
свойство, очевидно, верно. То есть более того, выносить можно, очевидно, не только из первой
скобочки, но и из второй. Потому что вы можете их посвапать со знаком минус, вынести ашечку,
а потом посвапать еще раз и убить старый минус. Ну, потому что минус на минус дает плюс, как говорится.
Вот. Самое, конечно, не тривиальное может быть это то, что у нас вот такая линейность. То есть,
как это называется, дистрибует, видимо, не дистрибутивность. Ну, хорошо. Ну, не важно.
Значит, заметим, что действительно, короче говоря, вот это свойство все еще верно. Правда,
как это доказывать? Ну, идея на самом деле та же. Просто заметим, что такое векторное произведение.
Это когда у вас есть вектор V1. Вот. Как-то вот так вот, да. Это вектор V1. И на самом деле,
что такое V2? Это проведен такой ориентированный перпендикуляр, повернутый до 90 градусов против
часовой стрелки. И тогда что получается? И тогда я утверждаю, что тогда V2 на синус — это длина тоже
ориентированной проекции на этот ориентированный перпендикуляр. Ну, отсюда, в общем-то, вот эта
линейность тоже очевидна. Понятно? Вот. То есть, видим, что эта штука тоже линейна. Осталось только
задать ее базисное значение. Почему? Нет, почему? Все. Не, положительность тут не нужна никакая.
Потому что, нет, из этого вот вывод. То есть, на самом деле, нам нужна только базисное значение,
чтобы вывод, в общем-то, не поменялся от слова «никак». И все. Ну, антисимметрическое. А это
не важно. Смотри, она, я утверждаю так, она билинейная, ну, как сказать, билинейная,
коссимметрическая. То есть, из того, что она билинейная, ее можно разложить вот в таком виде.
Но мы ее задаем базисными значениями. Просто их, по-хорошему, их надо не три, а четыре. Мы четвертое
выводим из симметричности или антисимметричности. Кстати, здесь это принципиально. Потому что здесь
мы вместо единицы пишем 0, здесь мы пишем единицу, имея в виду, что 0,1 на 1,0 будет минус 1. А здесь будет
0. В результате, то есть, если я тут пишу рыжим, то тут получается 0, тут получается минус 1. Ну,
тут я понятно, что я тут пишу абсолютно то же самое. То есть, везде вместо скалярда, то есть, там,
по линейности я все разложить могу, могу, могу, могу, могу, могу, могу, могу, могу, могу, могу,
вот я тут могу, могу, могу, тут не могу, вот тут могу, вот тут могу, вот тут могу. Вот. Но тогда
получается неожиданно, и тогда здесь получается наоборот, вот эти штуки уничтожаются, и здесь
тогда получается x1, y2, минус x2, y1. Вот так. То есть, вывод абсолютно такой же. Вот. И так,
да, то есть, вот такие вот два наших просто великих произведения, из которых мы живем.
Но векторное произведение имеет таких базовых свойств куда больше, на самом деле, чем скалярд.
Определитель. Определитель. Ну, да, ну, ну, скажем так, для нас это пока будет не более чем,
заметим шо, если мы запишем x1, x2, x2 в матрицу, то это будет ее определитель. Ага, как интересно.
Вот. Хотя, конечно, формально говоря, да. Мы получаем для нмерных векторов. Нет, для нмерных
векторов мы не получаем. Ну, там нужда, чтобы квадратная матрица получалась. То есть, да,
в трехмерии там получится в один ряд, придется запихать три базисных вектора, и тогда получится
определитель этой матрицы просто. Да. Это мы, да. Но, погодите, давайте не как бы забирать себе прям
излишне в трехмерную геометрию. Нам сейчас тут надо с этим разобраться. То есть, у нас с вами
прикладные приземленные цели. То есть, мы сейчас это, как бы в супер-какую-то великость сейчас не
лезем. То есть, нам бы тут, то есть, нам бы тут хотя бы вот там называются базовые вещи разобрать.
Значит, давайте смотреть, какие у нас свойства есть. Ну, во-первых, конечно, что означает,
что векторное произведение равно нулю? Ну, в принципе, да. То есть, давайте вот сразу пишем,
давайте. Рыжие, да, были у нас фиолетовые свойства, теперь у нас рыжие свойства. Рыжие свойства такие,
что v1 параллелен v2, именно параллелен, тогда и только тогда, когда скалярное произведение равно нулю.
Векторное произведение равно нулю, параллелен. Но обратите внимание, да, то есть под это подходят
как случаи, когда они со направлены, так и когда они разно направлены. Вот, кстати, давайте это
поймем. А как понять в этом случае вектора со направлены или разно направлены?
Не понятно. Нет, давайте реально. Ну, типа у нас либо 0, либо 180 угол. Ну, да. Так, и как
отличить 0 от 180? И что? Ну, что-то черное, рыжие, фиолетовое. Ну, какая-то скобочка перекрешена в рыжий
цвет. И что? Так, это давайте, ты сейчас снарк это не включай. Это у нас снарк очень любит, это
действительно явно там это сказать водическую фразу в расчете на то, что у вас как бы щелкнет
какой-то мем и вы поймете, что он имеет в виду. Да, как вам, в сожалению, не все мемы, которые он
имеет в виду, считываются на раз и вообще известны, поэтому вот не надо так делать. Вот. То есть давайте
скажем в явном виде, чтобы определиться направленность, разнооправленность, то есть нужно,
то есть нужно в самый надежный способ это тупо взять скалярное произведение. Да, тут очень
опасно, потому что тут начинаются всякие места, где там какая-то ребенка скажет, ну понятно,
как это делать, надо просто там посмотреть, а верно ли, что тут, скажем, х у этих векторов одинакового
знака или разного. И рассматривает так, если тут больше нуля, тут больше нуля, значит они
сонаправлены. Если тут больше нуля, тут меньше нуля, значит они разно направлены. Все. Говорит ребенок,
нет, хуже, я еще не спросил, а если этот меньше нуля, а этого х меньше нуля, а у этого больше нуля,
тогда что? Ну, то есть понятно, что в этом случае можно рассмотреть, но просто ребеночек его забыл.
Это как минимум это, это я только навскидку. То есть если вот этот меньше, этот меньше, то он
тоже его забыл или очи прятался где-нибудь, да. Это я еще молчу про случай, когда оба вектора
вертикальные. Вот. То есть тогда это сейчас приводит там какие-то бесконечные ва, то есть в этом
месте ребенок начинает плакать и начинает просто там делать вид, что задач по геометрии не существует.
Ой-ой-ой. Да, ну можно развлекаться как угодно, но на самом деле так, шутки шутками, но на самом деле
это именно поэтому на самом деле я сейчас вот прям вот так жестко хотел экран, потому что какие-то
вот сейчас простые вещи мы будем с вами просто прописывать, потому что там вот в геометрии
действительно от того как вы пишете сильно зависит просто степень там количества ошибок,
которые вы можете допустить. Вот. То есть потому что вот лучше всего мыслить о терминах векторов
скалярного произведения, ну по моему опыту конечно, то есть мы тут с вами можем обсуждать самые разные
подходы, но в скалярном произведении все надежно, потому что чем приятны вот векторные скалярные
произведения, они не зависят от того, что вы повернете континент на 57 градусов. То есть помните, да?
То есть ваши рассуждения желательно не должны зависеть от того, повернете ли вы картинку на 57
градусов или на 90 градусов или до чего-нибудь еще. То есть вот поэтому нужно быть максимально надежным.
Поэтому самая надежная проверка сонаправленности разнонаправленности это вот скалярное
произведение больше нуля или меньше нуля. Тогда плевать, вектора там горизонтальные,
там вертикальные, там сколько угодно косые, как угодно. Ну конечно да. Обычно конечно да. Ну
вообще да, мы конечно во всех свойствах конечно начинаем подразумевать, что вектора не нулевые,
потому что нулевой вектор с любым вектором, конечно скалярный вектор надаст ноль, тут без
вариантов. Но угол с ним не будет ни 90 градусов, ни 0 градусов, нет просто такого понятия. Но если
вектора заведомы не нулевые, то оба то такие свойства верны. Так, это у нас как минимум
сонаправленность. Более того, на самом деле, то есть на самом деле можно еще определять маленькую
приятную вещь. То есть вот это вот что-то типа вот этого круга можно на самом деле нарисовать
для на самом деле произвольных векторов v1, v2. Смотрите, потому что если я нарисую какой-нибудь
абсолютно произвольный вектор v1, то я могу через него провести вот такую прямую, а могу
провести вот такую еще вертикальную, значит, ориентацию. Тогда смотрите, если у меня v2 указывает
вот в эту нот, то есть оказывается, если у меня v2 указывает какую-то вот влевую полуплоскость
относительно вектора v1, то это эквивалентно тому, что v1, v2 больше нуля. А если я отправлю
вектор v2 куда-нибудь вот сюда, то здесь v1, v2 меньше нуля. Вот, понимаете, да? То есть это,
кстати, очень удобно. То есть по вектору можно смотреть, v2 смотрит слева. Вот мы это будем
называть как, что v2 будет смотреть слева от v1 или справа. То есть это будет означать так,
что мы идем смотрим вот вдоль v1. Вот все, вот это вот есть прямая, вот есть полуплоскость слева,
вот полуплоскость справа по ходу моего движения. Ну вот, или вот, ну можно говорить, да, для меня
противчасовой и там подчасовой, ну я но-то, а можно слева-справа тут. Вот, и это очень удобно,
то есть как компьютеру объявить, что находится слева, а что справа. То есть проверять у кого
там меньше x или y, это естественно не сработает от слова никак и ни в каком виде. Вот, то есть
а тут у нас v1, v2, то есть оказывается так. То есть более того, в принципе, видите, то есть можно на
самом деле поделить получается полуплоскость на такие четыре четверти, в которой сказать,
что в этой полуплоскости v1, v2 больше нуля, а скалярное произведение значит тоже больше нуля.
Здесь получается, что скалярное произведение больше нуля, то есть векторное произведение больше нуля,
а скалярное меньше нуля. Здесь получается наоборот. Тут векторное меньше нуля, а скалярное меньше ноля,
а тут получается векторное меньше, скалярное больше. Вот. То есть такая вот идея. Ну и естественно,
на самих прямых какие-то пограничные случаи, да, то есть если вектор сюда ett, то будет так. Понятно,
да вот что-то вот так какие у нас там какие еще так свойства забыл а нет в общем-то никакие
основные я в общем-то и рассказал хотя конечно ну не ну сейчас сейчас сейчас вот ну план вот
ну да ну да не до площади каких-то там чего-то мы еще доживем вот так так так так так хотя
хотя нет в этом месте в принципе можно уже нет в этом месте на самом деле можно уже и кодить
да погодите вы нет как сам по себе угол сказать это мы отдельно поговорим на самом деле это как бы
вещь такая ладно давайте немножко покодим значит для этого давайте поймем так ну давайте так что
нам вообще понадобится ну заранее скажем что по include нам потребуется конечно какой-нибудь c
мат и ну тут по-разному на самом деле где где-то такая константа есть где-то константа п есть где-то
нет не вовсе нет каких-то там каких-то компиляторов надо ее там прописывать каких-то не надо там
поэтому я обычно не заморачиваюсь и пишу стандарта так ну во-первых я пишу неудобно
тейп дефолонг дабл какой-нибудь там лд и конст там лд п равно а коз л от минус 1
ну сложно ну ну могут быть и другие способы да хорошо не так не буду на это я не буду
божью по семью утверждать что это единственный способ но обычно так и пишу но тогда здесь еще
обратив внимание до как вы уже догадываясь с мать есть такие функции как кос там sin там и так далее
там какой-нибудь там кота ну и так далее есть конечно функция а коз на коз это ну это не вот
этот вот предмет с компьютерами да вот собственно аркосин но здесь отметим что еще видимо старых
стандартов осталась еще такая функция а коз селл которая советом и принимает только вон дабл
ну на самом деле с вами по камере современных версиях а коз тоже а коз от лунг дабла тоже будет
жить в лунг дабла но вообще да то есть там пом перегруженная функция то есть для даблов даблы
для лунг даблов даблы там для флота флота и так далее вот но по умолчанию он будет кастовать в
даблы то есть если я просто писала коз минус один то я боюсь что это вы получили дабл то есть
надо либо это кастануть к лунг даблу либо вот я люблю просто сразу писать l и не париться
но здесь кстати еще подляну еще должен предупредить что если кто-то любит писать
вежаке то как бы есть одна проблема тут вот одна но вот одна командочка на полуфинале так
предпологу заняла девятое место вместо второго только из-за того что посылала подвижу подвижуалкой
как выяснилось если тот же код послать было под там каким гнушным компилятором то все бы работала
то то где это место превратилось бы во второе ну по-моему не ну там нет это была по-моему это
была по-моему нет но это была какая-то команда им групповым с календаром да на то да на тот
моментом у них конкурент ну там по конкурентом за звук кто-то мгну по-моему не было вот но просто
но вопрос не в этом вопрос том почему так произошло потому что должен предупредить вообще то есть
надо предупредить о типах потому что вообще говоря лунг дабл по идее весит в два раза больше
чем дабл ну типичная диспозиция дабл 8 байт по моему а лунг дабл 16 да вот но это означает что
повышается в два раза точность ну так у вас же уже ако сбыло но относительно то есть да ну
например ну по иноплеем но должна быть примерно да но смотрите ну давайте вспомним нет ну можно
прям максимально точно посмотреть конечно размер мантисы вот но давайте еще вспомним так у вас
акос был вот но наверное просто на первом занятии акоса должны были рассказывать как устроены
типа как минимум да прям сразу да но давайте вспоминать вот давайте спросим как устроены
вообще дробные типы давайте вспомним в т++ как минимум да и везде в общем-то там 52 11 знак то есть
что это означает это означает что мы представляем наш любой дабл видя какого-то числа значит там
между единицей двойкой единиц electrical двойка не включительно да умножить на два в какой-то
степени да то есть в какой степени это называется экспонента и и соответственно swimroot а само это
значение там пишется там в виде 1 точка бла бла бла на 1 точку не пишется потому что понятшую
один точка а бла бла бла занимает 52 байт то есть получается относительно то есть число сюда
в habían с понадобить наслаждается с относительной точностью там dark labs какой-то относительно
точностью что-то типа не менее чем 2 в минус 52 и получается вот на абсолютная
точность может разница потому что она конечно зависит от того собственно от
экспонента вот но очи заметь но да да это дабл он весит 8 байт лонг дабл он
весит 16 байт там может зависеть от их текстуры потому что понятно что
точность должна быть ну где-то уж уж каким-нибудь где-нибудь там 100 бит там
найдется ну плюс-минус хотя вот но просто да но просто фишка в том что
визжаке по мистическим причинам лонг дабл и дабл это одинаковые типы вот именно
визжаке именно визжал студии вот то есть оказывается вот в нормальных
компиляторах этого нет то есть там обычно там лонг дабл сильно помогает
кстати неожиданное преимущество перед джава и типа языком джава кстати потому что
в языке джава нет типа лонг дабл есть только дабл вот но не ну вот это все но
ин 128 формально говоря все плюс прессе нету но как бы но формально говоря тогда
и пбд со все плюс прессе нету это да ну потому что он не является стандартом
си плюс плюс то есть это как ну да ну нет вот там нет там что там ну то есть они
не будут уже там уже говорите конкретно что нет но обычно действительно этого
всего нету то есть конечно дайся в компиляторе компилятор это поставляет
по свое там потому что он так хочет это конечно рех этим не пользоваться но
соответственно так вот ладно это про лонг дабл поговорили надо было говорится
так вот так это вот лонг дабл но с другой стороны давайте мы так сделаем то есть
обычно конечно ну точки часто пишут cpld но с другой стороны в большинстве
случаев задач по геометрии на самом деле вам вычисления в целых числах на
самом деле вот так достаточно и это кстати будьте внимательны то есть как
что всегда кажется вот геометрии с большой соблазна считают что если у вас
вау ну значит там что-то с точностью не то что-то мелочь хотя бы в подавляющей
большинстве случаев там на самом деле там ваши ва 7 к точности не имеют никакого
отношения скорее это будет либо вы случай не учли либо просто поверили в
какой-то алгоритм потому что там подумали три минуты что там подумали по
принципу так вот есть алгоритм я там за 30 секунд обсуждения там обдумывание не
понял почему он не работает значит он верный как знаете знаете это такая
женская логика по колмогорову он что-то считал что женская логика заключается
в том что если из а следует б и б приятно то а верно вот я не знаю вопрос
к академику колмогорову почему он так считал вот но вот соответственно в этом
отношении но не в смысле что он конкретно так считал конечно да явно но
вот но такой вот сталкиваюсь но вот но как бы был как бы в геометрии то есть ну
в олимпиадном программиру я все принципе иногда очень хочется так думать да я
придумал алгоритм он вроде как работает давайте его писать да да что
доказывать господи вы что с ума сошли так доказательств путь математики
занимаются мы программисты вы просто напишем получим акцент но вот ну так как
то есть самое страшное до какого-то момента это действительно работает но
исключительно до какого-то момента так сейчас я прошу
и так значит пишем диаметрию и так начито будем считать что у нас
координат тип координат будет какой-нибудь аккорд допустим да а что такое ну
не но там просто разные типы бывают но обычно типичный поэтом point он же на
самом деле геометрический вектор вот мы сейчас мы там не будем писать супер
идеальную реализацию в которой там по интей вектор это разные классы да ну
вот поэтому так начитая коорд так что-то не так вы пишем да эх ну да значит но
вот так ну что с этим поэтом можно делать но первое что обычно с ним нужно
сделать это вот оператор плюс а то знаете некоторые любят когда там хотят поскладывать
вектор или там что-то с ними делать делать все время в каждой строчки писать
отдельно по иксам отдельно по игрокам то есть как это классик называл а это
геометрия без функций да вот да да да да да но вот а для себе для симметричности так ну мне
вот как-то почему-то мне удобно удобней уже складываю все-таки точку с точку они к
точке прибавляют точку для меня как-то все-таки плюс это внешний оператор если я писал плюс
равно конечно имело бы смысл писать его внутри это да ну по какому-то код стайлу
наверное не надо нет но мне кажется ну просто так вот пока не рекрасивши так
ой ой а ну а ну в этой реализации данчим да да ничего не поделаешь в этот раз придется
что-что
так ну вы можете поставить ну короче да ну да ну сложно конечно так хотя согласно ладно
нет но на самом деле так нет вот так вы будем пушей то есть концерт до влада то есть у меня нет
цели написать прям идеальный код потому что понятно что цели бывают разданку интернпиаде
там шаблоны вы писать вряд ли будете ну да ну а в принципе да но желает описать то что ты
сдал раз уж ты сдал именно его но вот а хочется чтобы не был так так вот так смотрите вот так что
насчет дальше так дальше на сцену скалярное векторное произведение но здесь я люблю дел так
но здесь оставили параде там на самом деле тут как бы у разных авторов по-разному я люблю чтобы
у меня умножение было вектором произведение вот так честно и пишем по один ножник с плюс п2
ноши на игрок минус по один точка и как у нас на п2 точка x но и конечно его величество скалярное
произведение каким значком пометить его правильно к сор да вот но как говорится а мы учимся по другому
так так то ли а так я еще забыл предупредить до шоу звать у нас на лекциях не принято так это
стрелять ты давай вот все пришел сидеть пиши давай и но ты то по делу так вот что еще здесь но
здесь на самом деле конечно надо договориться что конечно вот есть у вас т-корт это какой-нибудь
целый тип это там лонг-лонг чаще всего чаще всего в геометрии помогает как и странно лонг-лонг но
если вы пишете какой-нибудь лд то тут возникают проблемы что там часто вам то есть вот вам уже
например говорят то есть там равны или допустим два вектора да вот например бул а и квал допустим
но вот а вот тут просто потому что тут как раз вот маленькая проблема из-за которой это
почему-то рука не поворачивается реализовать как оператор равно если если бы если бы не одно
для меня оператор равно он должен быть все-таки транзитиве но тут транзитивность все-таки
такая шаткая очень поэтому я тут предпочитаю все-таки функцию а и квал если у вас типа ошибка
если у вас на пограничном случае то у вас и само решение работать не будет потому что
ну в принципе можно как сказать и так дать мне но вот но не задумею но скажем так мою
чувство прекрасного требует так не настаиваю то есть как бы то есть я как-то что-то я показываю
просто как это вот можно писать его смотри это как бы имеет определенные какие-то преимущества да
это может иметь какие-то недостатки то есть конечно же но поэтому тут вот аккурат вот да как
она обычно работает давайте я покажу в даблах даблах она обычно ну пишет что пишет эпсилон какой-нибудь
ну один из самых типичных эпсилонов 1 и минус 12 ну бывает 12 бывает 10 там по ситуации нет нормально
ну 10 вот ну там ладно 10 хорошо ну но по ситуации там от задачи зависит ну вот и обычно там начинают
писать то есть можно тут то есть если уж поставить себе цель написать прям красивую библиотечку то
можно сказать так то есть вопрос являет как написать является ли число нулём нет но скажем
так я покажу с одной стороны как все красивую библиотечку ну как вы смотрите потому что как
бы во первых ну вот нет ну и тем не менее все-таки скажем так я покажу какие-то приемы которые
помогут вам и в олимпиадной жизни и в какой-то жизни там более адекватной поэтому соответственно
вот вот то сейчас вот чтобы проверить является ли число нулём вы вспоминает вот такую функцию
фапсал да обратите внимание да есть такая геометрическая функция но геометрическая
функция ну геометрическая функция просто функция фапс ну фапс это означает что он
это модуль какого-то дробного числа ну тут вот надо смотреть современном мире скорее всего
работает а у меня а у меня бывали в люке старых компиляторах то есть нет современном-то мире
наверное там скорее всего работает да куда же деваться но обычно для конкретно даблов
используется фапсал вот фапс или вот для лонг дабла фапсал ну как бы я в этом смысле
старая я поступил на фистех до того как появился 11 стандарт да так так же сами понимаете вот
вот поэтому тут появляются функции из зиро более того в принципе можно не только зир теперь
можно сравнивать то есть если я хочу сравнить два числа то обычных сравнивают через разницу
вот более того появляются еще какие-нибудь там то есть еще оказывается иногда полезно даже
ввести функцию int c просто вывести знак план даже не здесь наверное надо делать вот
то есть ну и тогда тут надо честно написать что если это 0 то как бы то есть если то вернуть 0
то есть l за ретурн там соответственно
уже нет так
ну нет ну как сказать просто как бы это опять же из чувства прекрасного что как бы случай
случай типа равноправно вот за сам по сей факт а за после ретурна никогда не слышал нет ну как бы
скажи так у каждой у каждой компании в этом месте может быть свое мнение свои привычки
свои чувства прекрасного как-то готов разные код стайлы в гектаре код стайла вообще требует
чтобы у вас извините там типа назывались не с большой буквы то ли а так значит соответственно
чего не слышу а
а пардон неправ неправ неправ да
хорошо хорошо вот че еще так это у нас r equal то есть можно написать какие-нибудь теперь с
помощью сигнала можно еще написать boo из less than или в других переводах less than так но чтобы
она была за два то здесь надо просто написать ретурн сигнум от z 1 минус 2 меньше нуля не там
точка запятой ну хорошо да но понятно смотрите тут очень удобно теперь потому что можно теперь
написать из морзен там допустим морор и квал зен вот ну и так далее остальные три функции писать
не буду вот то есть вот такое вот бла бла бла но вот супер вот да оператор называют так так вот
но это вот но это если вот и говорится то есть что делать если вы координаты в даблах хранить
то есть в большинстве случаев кстати вам не требует хранить координаты в даблах то есть
многие там и сравнивать что-то в даблах то есть в реальности вам требуется на самом деле только
то есть обучить и в целых числах то этого всего естественно не надо и желательно чтобы вас чем
меньше даблов в геометрическом коде тем лучше вот так что еще надо сделать оно не помешает конечно
знаменитая функция лен 2 у вектора то есть вот это имеет смысл сделать методом да обычно очень
полезно оказывается там чтобы не вызывать лишних проблем с компиляции чтобы лен 2 был
констант почему он должен быть константом знаете тут есть неожиданная подлянка потому что например
вот очень хочется написать такой вот данные две точки найдите квадрат расстояния да вот например
дист 2 и тогда вот что хочется написать ну хочется написать конечно по 2 минус по 1 точка точка лен 2
все абсолютно нормально но я вам просто да тут просто вообще компилироваться ничего не
компилируется но если вы тут константу берете там он он как-то вы запит
но проблема в том что почему-то очень почему-то очень не любит вызов неконстантных методов у
каких-то вот вот этих вот время там каких-то вот каких-то вот этих вот временных перемен ну я не
я просто говорю на что напарывался если что поэтому обычно тут там помогает просто там
просто пишите тут будет просто пишите константе не парьтесь вот мы конечно а да вот можно еще
написать еще так можно там соответственно лен но его уже придется реально в лонг дабла тут тут
уже ничего не поделаешь вот так вот то есть вот такие вот вещи значит тут еще вот такие
технические вещи есть так ну что есть ли тут еще какие-то вопросы еще ищешь и сейчас
ну вот нет смотрите нет просто я так скажу начинает с этого момента то есть на самом деле
давайте так я буду все-таки предполагать что у меня т-корт это какой-то целый тип поэтому я
сейчас вот с этими вот из моря злес заморачиваться не буду то есть будем дальше всегда иметь в виду
что когда сравниваем что-то то как бы если даблы то сравниваем как-то с эпсилом если без даблов
то сравниваем честно вот давайте напишем нашу первую функцию ну первую такой адекватную функцию
бул а и квал тьфу пардон аку не не это не дай это не та первая функция вот это первых так
даны два вектора по 1 по 2 внимание вопрос коллинярный ли они да или нет как мне это написать
но ну нет коллинярный вот давайте вдавьи мать и вопрос коллинярный параллельный
ну и по каким определением ну хорошо ладно ну давай так являются вектора но давайте но
нас спросили другой являются ли вектора коллинярными коллинярные это обычно два вектора если так вот давайте
так вот у нас есть понятие коллинярные вектора они коллинярные если они как бы как бы тут уже
наоборот и со направленный разом направлен нас обычно устраивает поэтому приколи ничего поэтому
в данном случае мы пишем что давайте продиктуйте мне код
так давай скалярная произведение у нас это ксочек
так прям так и пишем до по один к сорпедуа равно ну я уже сказал мы начинается этот момент и
считаем что там случай еще все числа адекватно целые или там или это какой-нибудь там поле
там сравнение проходит абсолютно точно вот такая красота меня бы у меня такие проблемы были
вполне вероятно нет а ну почему нет рвелью в каком-то виде было то есть какое-то понятие
на чем то есть конечно так ладно ладно не ребят тут более страшные проблемы какой код на самом
деле этот код не работает не поэтому дать но давайте что вектора коллинярные если они
ну словно говоря лежат на одной прямой мы с них отложить от точки 0 и допустим
но я предчувствую что на фигне определение нет нет нет нет подлянка не они вообще не в этом
какой скалярное произведение вы чего ты скалярная сказал я явно видим услышал
слово скалярная произведение вы да ну ладно конечно да не мне конечно предъявить проблему
что я там понятно что я имел ввиду подумаешь я сказал другое конечно да но но да но кросс у
нас это умножение потому что вы только что смотрели как я их вводил но мне очень
жаль что подобные вещи для вас не интуитивно да но но не но для меня вот так нет уж да извините
да я пишу через умножение через умножение к соке вот так что да давайте привыкаем тут
у нас векторное произведение так вот неожиданная функция из онлайн то есть дана прямая то есть
у меня есть прямая которая задана точками а и б внимание вопрос лежит ли точка п на прямой
да или нет да естественно можно даже написать что ассет но вот то есть там скажем называется
не а там там не арик вол там допустим а бы хотя конкретно здесь можно было уже и ввести
оператор конечно хорошо хорошо пожалуйста
но это крыша в реальном коде сложит такой опасно такой писать потому что это конечно увеличит
время работ но каждый раз когда в смысле если напишите ассет то как бы каждый раз когда будет
вызываться функции она будет а не нет конечно не не ну это согласен так и так давайте как же
мне написать функцию из онлайн так а может так и нот перенесем а в начало координат проверим
что вектора п и б неожиданно к линиарной дем или что то же самое а давайте просто проверим что
вектора п минус а и б минус а к линиарной ну да да но напоминаем у нам как бы мы тут как бы
сейчас код пишем поэтому как бы сейчас вот будьте внимательны то есть она сейчас то есть на нас
сейчас задача максимально эффективно это реализовать то есть а не из цикла ну понятно как
делать а как вы там напишите не важно тут к сожалению важно поэтому пишем там п1 минус а умножить на
б минус а должно быть равно нулю да да можно писать так но просто на эти тут как бы олимпиадный
подход или такой подход если вы будете как бы если вы напишите там у себя в темную будьте супер
красивую библиотеку это будет красиво да просто до первой задачи на контесте который вы хотите
свою помощью сдать потому что пока потому что вы там столько времени потратите на перевбивание
библиотеки что больше и пользоваться не хотите говорю личный опыт вот ну вот сейчас они пишут
сейчас их скорее это просто мы каждую конкретную задачку думаем как их писать то есть можно
написать так или можно писать там ритурн арко линьер от p там p минус а б минус а ну в данном
случае как бы то есть как бы с точки зрения идеальной библиотеки конечно надо было вот это
написать но с точки зрения олимпиад ну с точки зрения олимпиад вы вообще не будете писать
функцию из онлайн скорее всего то есть скорее всего хотя рекомендуется это все-таки сделать
но да но да но лучше такие функции кэш прописывать неважно как они там вызываются друзьям важно
просто чтобы как вы помните да чем более код похож на там ли ваш язык похож на литературно
английский тем как бы легче объяснить соседу что там находится да и самому себе через полтора часа
тоже вот если вы напишите функцию из онлайн и тут написали что у вас тут будет написано
то как бы сосед скажет я конечно не понимаю в геометрии но по моему в минус б равно нулю
или там что-то еще в этом вроде вот и так почему это кстати вот важный момент то есть особенно
если вы кстати в последний час пишете когда там какую-то геометрию это очень полезно когда
человек начнется на если его что вбивает геометрию соответственно в там ком но там когда после
некоторого момента просто берет и распечатывает ассокамандники идут и читают чтобы просто
проверить что проверить что да он правильно вообще вбил геометрию потому что она по на пятом
числу как бы там очи пятаться или перепутать вектор и пределиться скалярным можно везде
вот то есть придет так что рекомендую то есть помните чем более то ближе к делу тем больше вы
там должны помогать друг другу если там избавиться от лишних баров да нет это как бы нет так что тут
соответственно так что еще так ну и конечно вот функция которые все вот начинают писать по разному
хотя но был из он сегмент дан отрезок аб скажите пожалуйста лежит ли точка п на отрезке аб на
этот раз кстати отрезок аб может быть уничтожен но да а ведь действительно смотрите да то есть
давайте посмотрим какая какая-то маленькая подлянка есть соблазн написать из он уайн ну
проверим что п лежит напрямой а теперь как проверить что п лежит между а и б но такая
не детская реализация который все очень любит давайте проверим что п лежит в баунденбоксе от
а и б ну там типа п лежит там между х а и б проверить что-либо между игроками и так далее
то есть дети любят так писать но быстро выяснять что там надо тогда рассматривать
а если от очко x но а если а точка x больше чем бы точка икс а ну тогда так ладно пишем у нас
было написано там а точка x меньше либо равно п точка из пточке смешали в ps C тоже самое с
игроком но давайте это скопи пастим из-за ней меньше ли равно на больше левые в этом дети с
удивлением узнают что оказывается бывают случаи когда в точку икс больше чем бы точка
а точка игр меньше, чем b точка игр.
Эти случаи тоже надо рассматривать, оказывается.
Даже такую технологию можно написать, конечно,
сильно эффективнее.
Ну, вынести функцию проверки, лежит ли число
между двумя другими в отдельную функцию,
внутри делать свапы правильные.
Но на самом деле необходимости в этом нет.
То есть колярные векторные произведения вам
помогут этого избежать.
Потому что здесь bounding box.
Здесь этого надо избегать.
Поэтому какой вариант?
Ну вот предлагается следующее.
Хочется сказать, что нам нужно,
что точка P лежит относительно точки A
с той же стороны, что и B.
Как же это проверить?
Ну да.
P-A XOR B-A
должно быть больше либо равно 0.
Обратите внимание, больше либо равно,
потому что если P совпало с A,
нас вполне устраивает.
Да.
Но это как бы, ну вот.
Ну и проверить то же самое относительно B.
P-B,
A-B.
Вот.
Да.
Ну вот теперь да.
Ну теперь вот задача.
У этого кода есть маленькая подлянка.
Так, ну Миша знает, ребята.
Видите, в чем тут?
В чем тут подлянка у этого кода?
Вот.
Вот.
Теоретически, в принципе,
отрезок может оказаться вырожденным.
И заметим,
что если A совпало B,
то на самом деле у нас
здесь true будет практически всегда.
Ну вот.
Действительно, практически.
Просто всегда.
Из онлайн, конечно,
тут осеркнется, конечно.
Вот.
Да.
То есть он, конечно, неожиданно осеркнется.
Но часто,
если мы не возобьем,
то тогда вот как бы вот это условие
вернет true, и вот эти оба условия
тоже вернут true. Поэтому небезопасно.
То есть да.
Есть такой случай.
Нет.
Ну когда, ну давайте.
Ну или по крайней мере попробуем тогда мое решение.
Просто я обычно пишу
вот что.
Я вот так пишу.
Да.
Да.
То есть обратите внимание, видите, если там
P совпало с A и B будет 0, если
A лежит строго между A и B,
то получится меньше нуля.
То есть вектора разнонаправленные будут.
А если точка лежит
где-то вне, то получится больше нуля.
Более того, если A и B совпадают,
то тогда это скалярдопроизведение
тоже окажется больше нуля.
Ну если, конечно, P не совпадет.
То есть получается магическим
образом, то есть магическим образом
все сработало.
Ну, кстати, да.
Ну хорошо, да.
В принципе, да, в реальном
олимпиадном коде, наверное, вы не будете
там прям сводить изон сербинг
изонлайн и напишете
вот скорее вот
то есть на олимпиаде я бы скорее вот так
написал.
Вот видите, одно вектор, когда
на скалярдой никаких этих ваших баунден боксов
и никаких этих ваших уравнений
прямой там каких-нибудь еще.
Кто-то любит...
Ой, ну мы ее будем
избегать. Да.
Вот.
А, ну, окей.
Ладно.
Значит, это у нас
изон сербинг.
Так, ну давайте так.
Так, ладно, по этой функции вопрос какие-нибудь есть?
Хорошо.
Так.
Что нам еще надо сделать? Давайте
проверим. Даны две
прямые. Да, заметьте, я стараюсь, я сознательно
пытаюсь вот
parallel or equal.
Вот. Да, вот
правильно было отмечено, что формально говоря
параллельными называются прямые, которые не пересекаются.
Да, это приводит нас к той ситуации,
что прямая не параллельна самой себе.
Поэтому, говорит,
хочется проверить.
То есть, но интуитивно нам, как бы
иногда мы очень любим...
Да,
как-то интердитивность тоже.
И вообще считать, что прямая параллельна
сама себе, потому что она как бы типа в одну
там они в одном направлении идут.
Итак, даны две прямые. A1B1 и A2B2.
Скажите, пожалуйста, верно ли, что они
параллельны или совпадают?
Спрашивается, как мне
это сделать?
А сейчас у вас уравнение
прямое есть или нет? Нет.
Нет, у меня есть только то, что я
вот в коде написал.
То есть, как бы мы с вами
это ген, да, это ген тулимск
сделаем все с нуля своими руками.
А вы не хотите создать структуру прямая? Нет.
Не хочу.
Или вы хотите ее сделать с уравнением
3 глава? Нет.
Чаще всего в подавляющем большинстве
в задачах обычно именно
задача вам прямая скорее всего
задается двумя точками, которые вы
откуда-то взяли, там пересеченничу.
Вы должны взять 3 числа. Так, Толя,
пиши давай.
Можно в структуру положить 2
эти, 2 поэнта.
Ну, можно положить, но обычно...
Чтобы не писать 4 поэнта,
поэнта негативно странно.
Нет, ну да. Ну, не знаю.
Нет, прямая А1,
Б1, прямая 2, Б2.
Как проверить меня? В параллелье
ли эти прямые?
Или там совпадают?
В параллельность направляющих фекторов.
Так, параллельность направляющих фекторов.
А как проверить параллельность направляющих
фекторов?
Ну вот. Ну да, с точки
зрения Олимпиад мы должны, конечно, написать
return r colinear,
там B1-A1
и B2-A2.
Ну а на Олимпиаде
мы бы честно написали
B1-A1
умножить на B2-A2
равно 0.
Так.
Ну вот начинается
вообще неожиданная функция.
Смотрите.
А теперь неожиданно нам пришли
две прямые. Гарантирует
значит, как мы будем?
Point A1, Point
B1.
Тут у вас уже Point, может быть, круглого
типа. Чего?
У вас Point, типа
мы, например, рассматриваем Point
типа int, а пересечение
типа double. Может быть.
Но сейчас
вот. Но обычно в таких случаях мы везде
пишем long double и не заморачиваемся.
Но чаще всего так. Поэтому сейчас
я подозреваю, что T-coord это какое-то адекватное
поле, в котором
деление существует.
Но вопрос, какое деление
делать? Да, начнем
с того, что
то есть проверим, что, во-первых, чтобы искать
пересечение оно было точкой, нужно гарантировать,
что прямые не параллельны.
Ну это я тут так пишу, конечно, в реальном коде вы так
писать не будете.
Все можно. Итак, даны прямые.
Как мне найти их точку
пересечения?
Вы не хотите решать систему?
Нет. Даже
памятую, что вы там это знаете правила
крамора, все равно не хочу.
Да, черная магия, определитель
какой-то нет.
Ну его там надо, возможно, еще надо
помнить, надо это. На самом деле тут
я всегда агитирую немножко
за другой способ.
Который этого всего вам
не требует.
Смотрите немножко
сейчас будет немножко
магии.
Я делаю особую уличную
магию. Хотите посмотреть немного магии?
Значит, смотрите.
Итак, даны
две прямые.
Прямая A1B1
и прямая
A2B2.
Вот даны точки A1B1, а как
бы мне записать прямую A1B1
как множество точек.
Структура, просто направляющий
вектор. Ну да.
Ну так и напишем. Мы это
напишем вот в таком виде. Это множество точек
вида A1
плюс B1-A1
умножить на T.
Вот, кстати, забыли написать, что мы, оказывается,
вектора еще на число умеем домножать.
Вот. По
всем,
где T пробирает все действительные значения.
Это вот прямая
первая.
А как мне записать теперь вторую прямую?
Ну угадайте.
Сразу скажу так же неправильно.
Да, мы напишем неожиданно по-другому.
Вторая прямая.
Это множество таких точек
P, что
векторное произведение P-A2
на B2-A2
равно 0.
Теперь что нам нужно? Нам нужно
попытаться найти такое T, чтобы
вот эта точка легла на вторую прямую,
правда? Так давайте
подставим.
Что получится?
A1 плюс B1
минус A1
на T-A2
B2-A2
равно 0.
То есть вместо того, чтобы решать систему
уравнений, двух уравнений с двумя
неизвестными, мы решаем одно
линейное уравнение с одним
неизвестным.
Вот.
Так и сказать.
Ну нет, если
как сказать, конечно,
если расписывать там действительно, что
там что-то, то есть понятно, что как бы
это подразумевает, что у нас, нет, ну не совсем
почему, это одно линейное уравнение, в чем проблема.
Хотя, ну вот, но вектор
супер, да, ну просто вектор и произведение
это число.
То есть если я это распишу,
если я честно как бы раскрою значение
вектора произведения и там
сожму все подобное, то у меня получится линейное
уравнение.
Да.
Да это было бы, конечно,
векторное, да.
Потому что в трехмерной геометрии, конечно,
векторное произведение, векторное вектор, это вектор,
это да. Но мы
живем в славном, чарующем,
упалительном двумерном мире, в котором
векторе произведения это число.
Вот. Более того, линейность этого
уравнения выводится из
линейности самого векторного произведения.
Ну я просто сразу могу написать, что
t на там
b1-a1
b2-a2
плюс
a1-a2
b2-a2
равно нулю.
Вот. И смотрите, какая магия.
В чем все еще сразу укладывается.
Вот это векторное произведение
заведомо не равно нулю. Почему?
Потому что оно равно нулю тогда
и только тогда, когда эти прямые как раз параллельные
совпадают. Удобно, да?
То есть даже наоборот,
если они не параллельные,
то не параллельные
не совпадают, то оказывается, что
решение этого уравнения существует
единственно. Понятно, да?
И мы автоматически пишем, что t
равно минус
a1-a2
минус a2.
Ну, да, я могу посвапать, но я
не люблю этого делать просто.
Ну, на самом деле так.
Если вы распишете это
через x и через y, то на самом
деле скорее всего получится буквально то же самое.
Ну, почти.
t равно вот это, да, и ответ
на задачу это на самом деле
ответ на задачу это конечно не t,
ответ на задачу это a1 плюс
b1-a1 умножить
на t.
Ну, по факту, да.
Ну, по факту,
надо признать, что это действительно
очень похоже на
правила Крамера. Это да.
Особенно, если вы распишете
как вы из этих a1 и b1
из точек реально сделаете уравнение
прямой.
Ну, потому что как делается обычно уравнение прямой?
Разность игроков минус разность
иксов. Можно через
искалярного произведения это еще и вывести.
Но не будем сейчас этого делать.
Вот. То есть можно так.
То есть формулы-то в общем-то
просто по-разному записаны и там
примерно одни и те же, но просто можно
с сильно разных точек зрения это сделать.
Я вот люблю такую точку зрения.
Чтоб там никаких систем уравнений не вводить.
В результате это нас приводит
к тому, что...
Так, ну я забыл, что надо
точки умножать уметь.
Я вот сделаю это вот как.
Вот.
И еще я, конечно, сразу люблю тут
сделать небольшую копипасту.
А тут занятия будут?
Нет, просто я так поняла, что надо
это все закрыть.
Ну, я не знаю.
Я не знаю.
Я не знаю.
Я поняла, что надо это все закрыть.
А у вас до скальки вообще будет?
Ну, вообще до...
Да.
Я так понимаю, что Алексей надо будет уходить.
У них как это?
Хранилище данных.
Нет, ну скажи так.
Если там будет работать, то как бы...
Нет, в смысле, если там вот мой ноут
подключится, то как бы без проблем.
Ну это не программа.
Тут мы по кабелю сидим.
Вот по ВГАшечке.
Вот, да.
Нет, а там с программой не получилось в итоге.
Ну, собственно, ровно поэтому и пересели вообще.
Ага.
Да.
Так вот.
Да, но здесь просто я люблю такую копипасту,
потому что иногда бывает удобно умножать
не вектор на число, а число на вектор.
То есть я вот
чистого для этого делаю.
Можно совсем избавиться от копипасты
и написать тут прям.
То есть вместо вот этого вот так честно
все.
Все.
Но это уже
не принципиально.
Вот, так вот.
Значит, научились умножать.
Ну и так и пишем.
Теперь Т-корд.
Или там может быть лонг дабл, я не знаю там
по-разному. Т равно.
Так, что у нас там по формуле получилось?
Так, минус
А1 минус
А2.
Значит умножить на
B. Что там было?
B2 минус
A2.
Делить на
там что-то умножить на что-то.
В роли
что-то. Так, B2 минус
A2.
И что-то еще.
Вот.
Красота.
Так, что
при все имеющиеся
структуры, которые вы скорее всего реализуете.
Ну скажи так. Идея
то же самое. Но есть
как бы не знаю.
Да?
Ну окей.
Ну тогда это сдавай.
Ну супер.
Ну супер.
Ну ты прямо и дерево написал,
две задачи я писал.
Дерево написал?
Дерево написано.
Дерево написано.
Окей. Отлично.
Ну тогда все.
Что?
Ну сейчас
если я отвечу на карту.
Так что пока
спокойно.
Ну да.
Осталось только придумать
адекватную альтернативу.
Знаешь, это типичная ситуация.
Лучше не придумал.
Так.
Вот. Ладно.
И так. Значит это вот так.
До свидания. Давай удачи.
Да.
Да.
Вот так вот, да.
Как говорится, то ли засветился на камеру.
Да.
Вот.
И так.
Так. Что нам еще надо?
Так. Ну ладно. Тут как-то так.
Ну соответственно.
Тут какие-нибудь вопросы еще есть?
Знаете что, можно будет сесть
в 43-43-43 там.
Там все свободно.
Там подключается.
Да. Классно.
Ой.
Ну хорошо. Опять будем камеру перетаскивать.
Да.
Да. Не. Ну ладно. Камеру перетаскиваем.
Хорошо.
Камеру перетасчиваем.
Это мы сделаем.
Так. Ну что?
Так. Кстати, господа.
Это оригинально звучит вопрос.
Не пришло ли в Риме сделать перерыв?
Или сегодня уже нет смысла?
Сегодня?
Вообще по плану у нас два перерыва за пару.
Ну это да.
С другой стороны, учитывая, что у нас там в первой паре
начали на час позже.
Так, и перерыв делается не для того, чтобы
меньше пройти,
а для того, чтобы отдохнуть после непрерывного.
Ну это да.
Ну можете сказать, что у нас тут сейчас было
неприятно. Ну ладно. Нет. Ну как хотите.
Давайте можем. Да, можем.
Например, через действительный перерыв.
И тогда у нас есть один перерыв.
Но в целом как раз.
Нет. Ну в принципе, если считать,
что мы начали в три, то прошло час сорок.
На самом деле.
А когда дальше какая-то глобальная новая тема идет?
Да не то чтобы.
Нет, ну несколько функций мы еще напишем.
Ну давай так. Сейчас надо написать
еще две функции, связанные с всякими
пересечениями.
То есть следующая функция, которую я хочу написать,
это дан отрезок,
дана прямая. Пересекает ли отрезок прямую,
да или нет.
И будет, конечно, еще
пересечения. Пересекаются ли
два отрезка, да или нет.
Ну то самое в целых числах, естественно.
Да, ну в принципе логично, потому что после этого
у меня начнутся там работы, там всякие работы
с углами, поэтому да.
Это будет логично. Хорошо. Итак, задача.
То есть тут, это вот такая классика.
Das Segment
Intersects
Line
Итак, дан отрезок,
я его буду называть
там S1,
L2 у него точки будут, да.
А на прямой точки
будут, допустим,
L1, L2.
Вот как мне узнать,
пересекает ли отрезок прямую,
да или нет.
Ну там все в целых числах, да.
Ну глупый вариант
донатить пересечения, проверить отрезок прямой.
Ну в том-то, но тут даже в школе
уже обычно приплакают, что хочется это сделать
в целых числах, без всяких там этих даблов каких-то
лишних.
Не говоря уже о другой подляночке.
Есть еще маленькая подляночка, на самом деле
заключается в том, что отрезок может быть
и параллелен прямой.
Или лежать на ней.
И тогда понятие точки
пересечения не получится.
Ну можно заевать, что они параллельны?
Ну понятно.
Ну можно. Нет, можно заевать.
Но давайте тогда подумаем вот о чем.
А как хорошо, предположим, что мы знаем,
что отрезок не параллелен прямой.
Как нам тогда
выяснить,
пересекает ли
отрезок прямую?
Можно взять бесконечно удаленная точка справа
на прямой, бесконечно удаленная точка слева
на прямой, пересекаются ли
отрезки? Нет, проверить, что
кросс имеет разный знак.
А бесконечно удаленную точку прям
надо?
Да, потому что у нас может быть
две точки, которые раздаются прямая, могут лежать
с одной стороны отрезка.
Так, так, так, так.
Слушай, как интересно.
Дай-ка мы это даже нарисуем.
Также лабала прямая.
Вот прямая.
L1, L2.
Так.
И вот нарисуйте отрезок
снизу от нее.
Допустим, давай.
Там какой-нибудь
S1, S2 и
Теперь если мы L1 угоним далеко влево,
а L2 далеко вправо,
и что поменяется?
Тогда они будут по разные стороны
от S2-S1.
А прям надо, чтобы они были
Векторное произведение S2 и
Нет, а зачем нам нужно, чтобы L1, L2
были с одной стороны относительно
S1, S2?
Сейчас, что я вообще говорю?
Нет, ну
ты хочешь поречь, чтобы L1, L2 были по
разные стороны от S1, S2?
Ладно, я че сказал?
Но я бы сказал наоборот. Нас интересует
верно ли, что S1, S2 находятся по
разные стороны относительно L1, L2?
Логично.
А как выяснить сторону?
Ну, на самом деле, я заметил, что в некотором смысле
сторона, на которой находится точка относительно прямой
ориентированной прямой, допустим,
в эту сторону, это, как вы уже
выяснили, знак Векторного
произведения L1, L2 на L1, S1,
правда? Понимаете, да?
Вот в данном случае
это Векторное, это на это будет меньше 0,
это на это тоже меньше 0, поэтому мы точно
знаем, что отрезок целиком лежит в правой
полуплоскости.
Если бы он был больше 0, то они бы
тоже тут лежали. Понятно, да? То есть, по сути, нас
интересует, чтобы сигнумы были
какие?
Ну, хочется сказать, что различные.
С точностью до нуля.
Да, но с точностью до нуля. То есть, если они оба
не нули, то эти точки не лежат напрямой,
то нас, то по идее, надо просто
сказать, чтобы они были.
Но здесь, да. Но, на самом деле,
заметил, что есть еще вот такие случаи.
То есть, в такой случае, тогда
один 0, а другой положительный нас устраивает.
Или один 0, другой отрицательный нас тоже
устраивает. А если оба нуля, то
нас это тоже устраивает.
Поэтому смотрите тут.
Поэтому, на самом деле, если очень аккуратно писать,
то получается очень красивый вариант.
То есть, можно писать
сигнум от
л2 минус
l1 умножить на
s1 минус
l1
умножить на сигнум
умножить на
то же самое
l2 минус l1
и s2 минус l1.
Так вот, произведение
двух сигнумов должно быть меньше,
чем 0. Почему я пишу именно сигнум?
Это вот тот опасность.
Потому что, смотрите, потому что дело в том,
что есть у вас вектора, допустим,
то есть, все координаты до какого-то,
то есть, ну, они обычно не происходят какого-то числа
c.
Тогда векторное произведение, ну, проговорим давайте все-таки,
тогда векторное произведение, модуль его может быть
что-то типа 2c квадрат, правда?
Ну, если вы 2c квадрат
переносите
другое, получите 4c4.
То есть, если там c хотя бы миллион,
то вы уже ожребли
переполнение типа.
Поэтому надо с этим быть очень
аккуратным.
Вот, кстати, нет, на эту тему, кстати, еще тут надо быть
аккуратным, потому что мы тут на разборе
одного этапа кубка МФ3
недавно нагрелись.
Тут возникает вопрос.
Тут возникает вопрос.
То есть, если у нас, допустим, точки целые,
возникает вопрос,
насколько
то есть там,
возникает вопрос, насколько далеко
от двух этих отрезков может находиться
точка пересечения?
Вот, допустим, все
координаты в 1b1, a2b2 не
происходят с.
Какой порядок тогда может быть у
ноты?
Или у точки пересечения?
Нет.
А, ну, квадрат.
Вот, у меня тоже была такая абсолютно
психологическая уверенность, но нет.
Вот у t-шки, вот по этой формуле,
действительно квадрат, это правда.
Заметим, да,
что тут.
Знаменатели у нас целые,
поэтому получается тут квадрат.
Но когда мы вот это вычисляем, получается куб.
Поэтому, в принципе,
точка может уйти куда-нибудь на куб,
и это нам было принципиально.
Нет, стоп, сейчас.
Кажется...
Кажется, не должно.
Ну, вопрос самый хороший случай.
Если у нас есть pounding box
размера c,
мы взяли почти параллельно верхнюю основанию,
чуть-чуть ниже, и почти
параллельно верхнюю, нижнюю основанию,
чуть-чуть выше.
И?
Тогда у нас, если точки целые,
если точки целые, тогда мы
за 20 шагов
вычитаем хотя бы один.
А пертикальный размер тоже
c.
Ну, я не верю, что это оптимальный случай.
Потому что, может быть, можно подобрать два
определенных вектора в других направлениях,
которые, как бы, за, допустим,
c по x будут передвигаться не на 1,
а на что-то еще.
Потому что никто же не сказал, что там
эти вектора обязаны за c передвигаться именно на целую часть.
То есть, может, они
передвигаются на не целые части, причем там
как-то отличающиеся от нуля,
но на очень мало.
Они, в принципе, по-видимому, они могут
отличаться там на как раз ту самую 1 миллионную.
Я говорю про то, что теоретически, конечно, следует,
но если у нас bx1-a1
большое,
то мы и делим нам многое.
Но с другой стороны, смотри, с точки модулей,
ну, там, по идее, модули на косинусов,
у нас единственное, что здесь происходит, это вот
модуль b1-a1 сокращается с вот этим
модулем, да?
И так, и сокращается еще что по величине?
Там, с одной стороны, вот этот модуль с вот этим
модулем. Что у нас остается?
a1-a2 и 2-синуса.
Но как там относятся друг к другу эти 2-синуса?
Хрен его знает.
Ну вот, короче,
кажется, что вот мы получили оценку
на куб, но кажется, что она может быть сильно
избыточная, в плане
То есть хочется все равно доказывать, что квадрат,
но либо привести пример каких-то конкретных факторов,
которые, естественно, мало отличаются.
Ну да. Ну правда, самый простой
пример, который можно привести, да.
Самый простой, это который у меня,
но он на квадрат. И не очень понятно,
как его улучшать.
Может быть можно, но как?
Ну вот. Ну не, ну самый-то
Не, ну самый тупой вариант, это взять,
допустим, сет, там, сколько у вас там
получается цепки четвертых векторов,
отсортировать их и попытаться смотреть на два
соседних.
И откладывать их от каких-то
точек, там, удаленных
друг от друга под подальше.
Ну да, ну не совсем перебрать, а
перебрать, отсортировать, чтобы брать
вектора максимально сонаправленные друг с другом.
Может быть.
Ага, если вообще
математическое ожидание можно было это
умножать и делить.
Была бы красота.
Ну вот.
Да, тем не менее. То есть гарантия у нас нет.
Ну да, просто гарантия только. Ну просто,
по-моему, мы нагревали, чтобы кто-то пытался
расписать такое решение, которое
рассчитывало, что там уходит не более чем
на квадрат, и там получался какой-то тейль.
Ну вот, потому что там ограничение
было такие, что как бы, если бы уходило на квадрат,
то как бы должно залетать без вопросов.
Не, ну подожди.
А, но это правда, это не кубка в ты,
это был там командный контест.
Нет, там, да, ну более того, можно, ладно,
могу даже и рассказать, раз уж к слову пришлось.
Там задача была такая.
Короче, там, ну там,
что-то дан выпуклый многоугольник.
Из целых точек, целые точки, там все
тоже не превосходят, по-моему,
там тоже какой-то тысячки помнится.
И что самое приятное, многоугольник сам размера
50. Скажите,
я хочу добавить в него
одну вершину так, чтобы
строго выпуклый многоугольник оказался,
строго выпуклый, продолжил быть строго выпуклым
многоугольником, значит,
и на одну вершину, и эта точка
тоже должна быть целой. Внимание
вопрос, сколькими способами я могу это
сделать?
Да, это самая сложная задача контеста была,
между прочим.
Нет, ну там
люди писали, как бы понятно, там чемпионы
в этом контесте как бы принимали
участие действующие чемпионы мира,
ну эти китайцы из MIT, да?
Это был там американский какой-то,
видимо, то ли четвертфинал, то скорее четвертфинал,
видимо, чем полуфинал, но все-таки.
Ну понятно, да, идея на решение понятна,
что давайте вот там, то есть надо
просто рассмотреть вот эти вот треугольники и посмотреть
сколько точек внутри них лежит.
Да, если бы каждая вот эта точка
пересечения была целой, мы вообще могли
формулы Пика пользоваться в принципе,
но, увы, точка,
к сожалению, ну вот. Поэтому
какое напрашивается решение? Ну самое тупое
решение, так как цена небольшая, ну так давайте
тут по х честно идти и поддерживать
какие тут игроки находятся.
То есть прям в идеале
прям мне очень хотел честно идти,
пока мы до пересечения не дойдем.
Есть одна маленькая проблема.
То есть если пересечение было порядка квадрата,
идем до миллион, получаем там решение
за миллион на пятьдесят.
Но если оно до куба, то извините, это ТЛ.
То это ТЛе придется думать.
Ну, смотрите, там же не миллион,
а четыре миллиона.
Ну четыре, и что?
А поддерживаете вы за сколько?
За лог, небось?
Нету, почему нету, я могу аккуратно
двумя указателями идти.
В правильном направлении, так что это для меня.
Кажется, что все равно может быть ТЛ и не за куба.
Может.
Нет, ну там...
Нет, ну там будет про нод.
По-моему, там проблемы были
с кубом.
Интересно придумать два вектора, которые находятся в кубе.
Да, это конечно да.
Понятно, что задача
в принципе на самом деле не сильно сложная,
она решается и без этого.
Потому что на самом деле заметим, что
направляющие вектора адекватные.
То есть понятно, что если они очень далеко уйдут,
то на самом деле тут...
Ну понятно, что задача на самом деле связывается
к методу трапеции,
которая говорит, мне интересно, сколько целых точек в этой трапеции,
минус сколько целых точек в этой трапеции.
А для каждой конкретной трапеции
я уже могу честно идти вот так
и заметим, что если я пройду
не более чем тысячу координат, я пройду
ровно по этому направляющему вектору.
И если я тут вычислю, сколько у меня тут точек,
то в следующем векторе
дальше следующие вектора будут
давать графметическую прогрессию,
которая сворачивается. То есть останется нам
только за тысячу пройти вот эту вот финалочку.
Это у нас вот такое было,
что еще вы неожиданно можете обсудить,
если на разборы вы таки будете ходить.
Да.
Чего?
Нет.
В четверг не будет никакого разбора.
Не знаю.
А, ну ладно, значит
тогда напишу еще раз. Нет, как мы тут уже договорились,
что на этой неделе ничего не будет.
Более того, даже кубоком в три продляется
неделя.
Ну с тренами тоже я бы посвел
это аккуратнее.
Если вы хотите написать трены, уверены, что она
не заставит вас потом прийти в воскресенье
мертвыми, то пожалуйста.
Но уставшими.
Но как бы, смотрите, ваша цель сейчас
в воскресенье прийти максимально во всеоружие.
Часто бывает, что принято
даже за неделю до конца уже обычно
ничего не делаем, просто чтобы не уставать.
Пятница в субботу?
Ну это уже, пожалуйста, да.
Ну просто, скорее всего, вам и так на неделю есть, чем заняться,
наверное, да.
Нет, я вас не отговорю. Если у вас есть
прям силы и желание написать четверг тренировку,
то пожалуйста.
Я хочу все-таки парочку тренировок написать.
Ну пожалуйста.
Но я говорю, с этой поусталость. Если вы будете
чувствовать, что вам нужно
сильно преодолевать себя, то может быть даже и не надо.
На самом деле.
Ну то есть вот.
Так что поаккуратнее с этим.
Вот.
Так что нет, но тут как всегда, это уже на ваш.
Так вот.
А, вы английский скипните.
Ну вы поаккуратнее.
Ага.
Ой, достайте на это.
Нет, это было.
Да-да-да.
Что лучше, бутылка?
Что лучше, бутылка пива или
мексиканский сериал?
Конечно, мексиканский сериал.
Конечно, только с ним вы можете начать
настоящую мексиканскую драму.
Вы когда-нибудь говорили, друзья, всем по мексиканскому
сериалу я угощаю.
Как говорится,
рекламы моего детства это называется.
А или там что лучше, пиво или зубная паста?
Конечно, зубная паста.
С ней ваши зубы будут
достигнуть идеальной белизны и будут здоровыми.
Но вы когда-нибудь играли с друзьями в боулинг
на ящик зубной пасты.
Ну вот что-то такое.
Вот.
Ой, ладно.
А то звучит, как будто я уже пиво рекламирую.
Вот.
Ладно.
Давайте последнюю функцию и пойдем на перерыв.
Функция, как вы уже догадались,
а segments intersecting.
Ну вот тут
уже проблема.
Давайте, тут уже отрезки
1x1.
Но подлянка в том, что, к сожалению,
красивого способа избежать случаев
я здесь не знаю.
Потому что да, очень хочется
написать вот эти вот два произведения сигнума
и сказать, что
если они оба меньше либо равно нуля, то мы победили.
Но это работает,
это, видимо, работает, если отрезки
не параллельны.
А что делать, если они параллельны?
Тогда это, конечно, сигнумы будут равны нулю.
Но, к сожалению, вот единственный случай,
когда эти штуки там меньше
либо равны нуля отрезки не параллельны,
это когда они лежат на одной прямой,
но при этом не пересекаются, сволочь.
Так, давайте, когда это может ломаться?
Пока это вот эти пятки.
Но утверждается, что да.
Да, то есть, конечно, если они не лежат
на одной прямой, то, конечно, вы просто берете
вот две вот такие проверки
в две стороны
и не заморачивайтесь.
Ну, так считайте, если они не параллельны,
если они параллельны, ну, если они
лежат на разных прямых, то сразу фейл,
а если лежат на одной,
то...
Ну, а теперь давайте думать.
Ну, давайте так, если, допустим,
R, давайте так напишем, R параллел,
там параллел,
как там... А, у нас было так.
Ну, давайте. Ну, пораду можно и так.
Давай так, если они параллельны,
то делаем одно.
Ну, по-разному, ну, смотря, как напишется.
Иначе return
does segments
segment intersects line
A1, B1, A2,
B2,
end-end
Ну, очевидно, то же самое.
Только
B2, A1, B1.
Да, то есть, вот этот случай, конечно, очевиден.
А если они параллельны, то что делать?
Параллельны не совпадают даже.
Да, конечно, что
первое надо проверить, что если они не совпадают,
то до свидания.
А как проверить, кстати, даны два отрезка,
которые заведомо лежат на одной прямой?
Скажите, пожалуйста, пересекаются ли они?
Да или нет?
Да, вот, вестическое утверждение.
Если отрезки лежат на одной прямой,
то они пересекаются тогда и только тогда, когда
один из концов одного из отрезков
лежит на другом отрезке.
То есть, не может быть так, что они пересекаются
какими-то внутренними частями.
Вот.
Поэтому тут можно написать return
is on segment
A1, B2,
A2, B2
или
is on segment
B1, A2,
B2
или
что там еще?
Ну да, четыре случая.
Ладно, формально можно показать,
что реально достаточно трех любых,
но...
Ну да, нормально,
по-моему.
Ну можете просто более короткие названия писать.
Причем, заметим, что эта функция сработает,
если прямые реально параллельны.
Параллельны не совпадают,
тогда эти IF автоматически вылетят.
Кроме того, я в принципе написал бы
даже
могу теперь вообще написать
даже без if и else
а могу теперь написать вообще вот так.
Во.
Угу.
Так, проблема.
Так, ну хорошо.
Так, дай.
Ладно, все, ладно, не могу, хорошо,
хорошо, ничего я не могу безобразить.
Вот так.
Вот.
Да, придется так писать.
Угу.
Не, ну с доты одной точки,
с двумя концами другого отрезка
это зависит куда, это даст вам куда
падает проекция.
Но там, тогда все там,
но кажется это никак не коррелирует
пересечением, потому что
там
потому что допустим там
потому что в принципе вот
то есть отрезок может быть там вот такой
там вот такой.
Не, ну а куда еще проще?
Вот.
Ну и шо?
А че?
Ну не знаю.
Ну не знаю, мне нормально.
Не, ну причем более того еще и видно откуда.
То есть как бы чтобы убедиться,
что как бы случай разорваный, давайте утверждение.
То есть мы верим просто в утверждение,
что если отрезки лежат на одной прямой
и пересекаются, то один из концов одного
из отрезков лежит на другом.
Да, как выглядит доказательство?
Доказательство выглядит так. Рассмотрим эту прямую
и вот у нас точка пересечения. Давайте двигаться
из нее в одну сторону до тех пор,
пока не наткнемся на что-то.
То есть пока мы находимся в пересечении.
Ну что нам может помешать? Но остановиться
очевидно можем только когда наткнемся на
конец какого-то отрезка. Пока мы не наткнемся на один конец
отрезка, мы на обоих отрезках лежим.
Правда?
Ну значит натыкаемся на первую эту точку конец
какого-то отрезка, но заметим, что этот конец лежит
и на другом. Все.
В принципе из этого же следует
практически что
это если есть внутренние пересечения,
то есть там есть какая-то
бывают пересечения всяких вот такого рода,
то есть вот
здесь тогда очевидно.
Я знаю кажется, как упростить.
Нужно вести на точках
оператор меньше, интуитивно
образом,
что мы сравниваем парик с координацией, потом поедем
к координациям.
Потом можно будет,
если они на одной прямой лежат,
то как пресечение двух отрезков на прямой,
что максимум больше,
меньше, больше, чем минимум?
Ну да, более известный,
но понятно, более известный, когда пересекаются
пересекаются или баундед бокс,
ну можно
правда не забыть, что надо
все максимины надо сравнивать
не только по иксу, но и по игроку,
а еще их
да, да, да, а еще надо
эти максимуминимумы с двух сторон сравнивать.
Нет.
Либо максимум по иксу
б1 меньше, чем минимум из иксов.
Нет, нет, нет. Я определяю на точках
оператор меньше, который сначала
сравнивает иксы, а потом эрики.
Потом я беру
потом я беру как просто на прямой
беру максимум
из левой границы.
И он должен быть
больше, чем минимум из правой границы.
Да смотри, маленькая проблема,
желать только оператор меньше
на точках обычно не определяют,
то есть обычно, если его определяют, его определяют принципиально
другим образом.
По векторному произведению.
Чего?
То в клоболочку люди
так строят.
Ну я всегда определяю просто
идутимым образом.
Но это называется разные компораторы.
Обычно оператор меньше, обычно все-таки
к счастью популярному углу делают.
Никогда в жизни не видел.
Ну окей.
Ну бывает.
Ну
может и так.
Но не стоит важно.
Если лень 54 проверки,
можете написать 3. Хотя конечно твой метод
будет лучше, что там ни одного умножения не надо делать.
Это да.
Это кстати реально преимущество.
Вот.
Так, ну хорошо. Значит это вот что касается
всяких прямых отрезков и их там пересечений,
натешений друг от друга, вот это мы все и
написали.
Ладно, дальше надо будет говорить, дальше будем говорить
немножко про углы площади и даже
многоугольники.
Вот.
Поэтому вот сейчас уже точно пришло время
сделать перерыв.
Давайте перейдем к углу.
Смотрите.
Начнем с того, ну зачем с того простого.
Даны два вектора, найдите пожалуйста
ориентированный угол между ними.
Ну как его найти?
Так, ну начнем с того, смотря что вам надо
найти. Если вам не нужен
угол, потому что часто бывает, что
вы говорите, я хочу найти угол. Зачем?
Чтобы посчитать его там косинус, синус и так далее.
Вот тут будьте внимательны. Если вам
не нужен сам угол как число, нужен только
косинус и синус, то векторное и скалярное
произведение вас приветствует.
Вот.
Но если вам нужен сам угол, просто именно как
число, то, ну здесь да, как это делать?
Да, многие маленькие дети
начинают в этом месте говорить, ну давайте посчитаем
косинус и возьмем оркосинус.
Действительно, почему нет?
Почему нельзя?
Да, почему нет? Потому что проблема в том, что пока вы
не начинали, если вы хотите прям честный угол
сделать, то с оркосинусом
проблем не будет, это будет прям идеально.
Да, потому что оркосинус
это та функция, которая возвращает кисло от
нуля до пика, вы помните, да?
Ну правда, маленькие дети могут захотеть,
а давайте возьмем векторное и орксинус.
Ну тогда у вас проблемы.
Их, могут быть небольшие.
Потому что в зависимости от того,
в каком порядке возьмете вектора, там будет плюс-минус.
И для тупых углов будут проблемы.
А, все нормально.
Это оркосинус тупые углы не выдаст.
Оркосинус, да.
Но это если вы хотите угол прям вот этот честный.
В детском смысле.
Вот понимаете, кодовое слово
геометрия это та вещь,
где мы с очень большой опаской
должны относиться к понятию
понятно как сделать.
То есть да, понятно надо
разобрать случаи, я даже верю, что
каждый из вас может действительно это сделать
аккуратненько, но
с другой стороны, там за паре контестов
или еще чего-то ошибиться легко.
Ладно, подстава в этом коде.
Ну ладно. То есть на самом деле
можно, понятно, что надо там
то есть мы уже с вами изучали, что
в какой четверти лежит этот угол, можно
и по скалярному поверхному произведению, по их знакам
определить. Да. Можно эти четыре
случая аккуратно разобрать и там плюс-пи-минус.
Чего?
Ну, я сказал,
как минимум четыре можно рассмотреть, а на самом деле
многие схлопываются, да.
Но на самом деле просто угол
просто так не ищут.
Тут редкий для меня случай, но я буду
сейчас говорить из цикла, что вот просто дети
выучите, угол ищется
вот так.
Ну, скажем так, у меня
с бэши, где я искал угол, вот так,
зашла нормально.
Ну да, но все-таки обычно
обычно все-таки
считается оптимальным
следующим образом.
Вот.
То есть официально
оптимальным способом нахождения угла
по двум векторам считается вот такое заклинание.
У нас тангенс не всегда определен.
А это не тангенс, это аттан-2.
Аттан-2 функция,
которая, вообще говоря, никакой тангенс
вам не вычисляет.
Значит, да.
То есть, конечно, чтобы это было
меньшим заклинанием, значит, расскажу, что это за функция
вообще.
Формально говоря, то есть это функция вместо
того, чтобы делать, вы там разбирали случаи
с этими актангенсами, которые тоже, кстати, от
минус пипа ламда, пипа ламда.
То есть, на самом деле, аттан-2
это такая функция.
Аттан-2
х
это, значит, да,
обратите внимание, да, вот именно от х.
Это
ну вот,
ну вот, это
ориентированный угол,
вот так напишу,
между вектором 1, 0
и х игр.
Почему я не написал
полярный угол, казалось бы, да,
стандартное слово сочетание в этом месте?
Видимо, другие границы.
Ну, потому что полярный, потому что
здесь ориентированный угол, он будет
возвращаться, по-моему, в
от минус пи до пи.
В чем от минус пи? Почему-то не включить.
Ну, понятно. Почему?
Почему минус?
У нас пи не минус пи.
Да, эквивалентно.
Да, это да. Но это отвечает
на вопрос, почему
это полуинтервал и не отрезок,
но почему это полуинтервал именно в эту сторону,
это не отвечает. Ну, окей.
На самом деле, смотрите,
если я хочу, значит, полярный угол,
это то же самое,
то есть, как бы,
то же самое, но только
от нуля до 2 пи.
Поэтому если у вас будет задача найти полярный угол,
то задач будет, возьмите вот этот угол,
если он отрицательный, прибавьте 2 пи.
То есть, тут тоже придется
ифчик поставить.
Ну, вообще, вот атан-2
занимается вот этим.
Это прям официальное определение.
Значит, считается, что эта функция уже устроена так,
что она сработает просто
эффективнее и точнее, чем если вы там будете
развлекаться саркосинусами.
Ну, собственно,
поэтому считается, что вот
пишите угол вот так, не ошибетесь.
Вот.
Но это, как бы, если вы ищете что-то похожее
на полярный угол.
А почему пишем вот так?
Потому что
что такое y и x?
По сути, заметим, что если
у нас ответ равен альфа,
то тогда мы замечаем,
что y равно, это
длина нашего вектора на синус
альфа
и длина на
косинус альфа.
Логично, да?
То есть, по сути, получается так.
Вы передаете ватан-2
синус альфа и косинус альфа,
умноженное на положительную константу,
он вам в ответ возвращает альфа.
Ну, тогда, смотрите.
Ну, тогда теперь, когда мы
передаем векторное произведение
и скалярное, вы передаете как
синус альфа и косинус альфа,
только умноженное на
произведение
длин этих векторов.
Так что вот такой
неожиданный чит.
Понятно?
Вот.
Так что вот такая
вот штука есть.
Поэтому тут угол принято считать
таким образом, то есть
как бы желательно это просто
выучить во все темноутбуки, записать
и, собственно, больше
не думать об этом.
Тем более, что, знаете,
как еще полезно было, чем меньше вы думаете
о подобных базовых вещах, тем больше
как бы там мозговой энергии
у вас остается на то, чтобы там
решать реально сложные задачи.
Потому что сложные задачи они...
Что такое сложные задачи? Сложное обычно слово
сложенное. То есть вам надо из кучи таких
кирпичиков составить какое-то решение.
Правда? Нет.
Ну, вот. Ну, жизненно видимо.
Все отходки трудные задачи,
но не сложные. Ну,
скажи так, это другой вид сложных
задач, да.
Но вообще говорят, да.
Сложные обычно от слова сложенные.
То есть обычно, да. Хотя
вот, да, бывают отходки, конечно, да, что задачи
сложные с цикла, заметим что,
но тогда... Ну, правда, это если
сложность только в том, чтобы придумать какую-то идею,
после которой решение становится простое, то как бы
кому кар, потом придет какой-нибудь там
туда... Вы завалитесь,
а потом придет какой-нибудь восьмиклассник и скажет, что задача
очевидна. Почему? Потому что лично ему эта идея
пришла в голову сразу.
Почему те или иные идеи
кому-то приходят в голову быстро, а кому-то медленно.
Иногда
это одному богу известно.
Вот.
Соответственно.
Так вот.
Это у нас действительно значит,
как найти угол.
Так, где у меня тут?
Ну вот,
так что тут вот действительно важно это
подчеркнуть.
Хотя вот я не знаю, это настолько важно,
что иногда ощущение, что геометрию надо на самом деле
переносить в первый семестр,
пока все еще ходят.
Мне сказал Максим, что вы им в первом
семестре читали.
В прошлом году.
В прошлом году я в первом семестре читал потоки,
а не геометрию.
Да.
Нет, ну там просто программа первого семестра,
первого курса закончилась, поэтому я так перешел к потокам.
В нашем случае
я не читал потоки
на первом курсе, только по той причине, что мы
до них не успели дойти.
Ну вот.
Так вот, идем дальше.
Если это был financial, то у нас дальше.
Так.
Ну вот.
Следующая функция, что-то у меня тут
странное что-то написано,
из counterclockwise почему-то.
Понятно.
Правда ли, что
многоугольник по часовой стрелке?
Точно, это многоугольник, да.
Но нет, рано.
Про многоугольник мне еще рано говорить.
Я скажу по-другому.
Потому что у меня еще есть важная интересная функция.
Я хочу повернуть
вектор
на угол альфа.
Ну смотрите, как я это сделаю.
Я буду передавать не сам угол альфа,
а вот мне очень хочется
передавать косинус и синус.
Не одна задача из контекста
не сдается этим методам.
Стала.
Ну.
Ну.
Ну как сказать, я боюсь так.
Если бы я на каждый мой чих, который я рассказывал
до лекции, продавал хотя бы по одной задаче,
я боюсь, вы бы застрелились.
Шутка.
Это решение одной задачи в домашних.
Так.
Ну это технический момент.
Да.
Но просто чаще всего бывает,
что вы косинус и синус угла
или хотя бы что-то одно из них,
знаете раньше, чем сам угол а.
И сам угол вам даже не нужен.
Но как же это?
Но как же вообще это сделать?
Курс линала в полночь?
Ну как сказать, да.
Из курса линала,
бывает, или просто,
вы знаете, на какую матричку надо намножить.
Иксы и как, да.
Но как бы тут остается вопрос,
откуда мы эту матричку вообще взяли.
Ну на самом деле...
Комплексные экспоненты, вроде, оттуда должны образоваться.
Да, отлично.
Но на самом деле все гораздо проще.
Дело в том, что вектор В,
это можно проделать,
это равен
E1 умножить на х
плюс E2 умножить на у.
То есть в принципе,
на самом деле, если я поверну
базисные вектора E1 и E2 на угол а,
то я к ним просто применяю этот
x и y, и у меня получается. Правда?
А теперь давайте...
Ну вот.
То есть ас равно.
Теперь у меня что-то на х
плюс что-то на у.
А теперь давайте думать.
Я хочу повернуть
вектор 1.0
базисный
на угол альфа.
Что у меня получится?
Вот задача.
Повернуть вектор 1.0
на угол альфа против часовой стрелки.
Вектор с какими координатами у меня получится?
Да. По определению понятия
косинус и синус.
Прошу заметить.
Ну нам, видимо, нужно что-то начать.
Может...
Нет, проявляю, что не так.
Не знаю.
Ну да, да.
Вот.
Так.
Сейчас мы увидим, откуда
это берется.
А давайте подумаем.
А E2, базисный вектор 0.1.
Ну я просто тут горизонтально
просто вектор пишу, а не вектор.
Горизонтально я просто вектор пишу, а не вертикально.
Поэтому могут быть коллизии.
Но как бы по-хорошему
я должен написать вот этот столбец
умножить на X, этот столбец умножить на Y.
Поэтому все нормально.
А теперь давайте вот, кстати, об этом.
А как повернуть вектор 0.1
на угол альфа?
Давайте. Задача чуть
посложнее.
Ну можно написать
косинус альфа плюс 90, синус альфа плюс 90?
Ну вообще да.
То есть вообще
по-хорошему да. А плюс 90.
Ну ладно, в нашем
случае pi пополам.
А плюс
pi пополам. Ну теперь давайте вспоминать.
Чему равен косинус
а плюс pi пополам?
Ну мы знаем ответ, поэтому не очень
по-разному.
Но на самом деле
давайте вообразим в себе картинку.
То есть такие вещи нужно
брать бумажка,
рисовать картинка.
Смотрите.
Смотрите.
То есть если вы тут
вот.
То есть смотрите.
Если вот это косинус,
вот это синус.
А теперь вы неожиданно взяли
и повернули на 90 градусов.
Ну тогда
смотрите. То есть вот это вот должно перейти
вот сюда. То есть вот
это вот должно быть теперь
косинус а. Правда?
Видите, да?
И вот этот вот отрезок
теперь, вот этот вот должен
перейти теперь вот сюда.
Но только тут он был в плюс, откладывался,
а тут минус. Тут получается минус
синус альфа. То есть получается
отсюда из картинки получается,
что косинус альфа плюс
пи пополам
равен чему? Правильно.
Синус альфа.
Только минус.
Ну а соответственно
как уже догадывается,
синус альфа плюс пи пополам
равен косинус.
Вот.
Синус, косинус. Все просто.
Вот.
Так что в результате
этих несложных
преобразований получается
минус синус а и косинус а.
Вот.
То есть в результате я пишу
вот такое заклинание
в итоге пишу.
Да, да, да.
Вот. Ну и здесь
здесь у нас вот так.
Понятно?
Вот.
Так что вот такая красота.
Вот. Ну то есть по-разному
можно делать.
Или вот.
Ну может в принципе просто.
Чаще конечно помнят ответ по-другому.
То есть помнят ответ, что на самом деле
там в виде x' и x'
равно на самом деле
косинус а, минус синус а.
Значит
синус а косинус а
на x.
Вот.
Можно вот.
Часто ответ помнят еще вот в таком виде.
Ну как легко убедиться.
Что она по большому счету.
То есть на самом деле здесь можно так.
То есть на самом деле можно еще, если вы не очень хорошо
разбираетесь в линале,
то можно это делать по-другому. Я помню примерно
формулу, но я ее в случае чего могу доказать.
Как мне доказать
эту формулу, если я ничего не понимаю в линале?
Очень просто.
Давайте докажем, что этот ответ
правильный.
Что нужно, чтобы доказать, что вот
вектор v,
что вектор v' это как бы тот же
самый вектор v, только повернутый на угол альфы.
Что нужно для этого?
Ну, во-первых,
должно быть, что
модуль v в квадрате
даже равно модуль v' в квадрате.
То есть во-первых, у них длины
совпадают.
Что еще?
А еще
нужно проверить, что
длины совпадают и угол
между ними адекватный.
Но углы совпадают
только тогда, когда совпадают их
косинусы и синусы.
А косинусы и синусы можно проверить даже с помощью
скалярных и векторных произведений.
То есть идея такая.
То есть я просто напишу, что
скалярное произведение равно
модуль v в квадрате
на косинус альфа
и v на v'
равно
модуль v в квадрате
синус альфа.
То есть по сути остается только взять эту
систему и очень-очень-очень
аккуратно это проверить.
Ну, воспоминая
мистические формулы.
Что?
Ну да, мне тоже нравится.
Вот.
Ну, в принципе, да.
Более того, если не сошлось, то вы еще можете
подогнать, где тут минус синус надо,
где-то плюс синус.
То есть, в принципе, если у вас будет не сходиться,
то вы еще и будете помнить, а где тут надо
что-то подставить, чтобы сошлось.
Это так на случай, если вы случайно формулу
забыли. Ну, лучше ее, конечно, не забывать,
но, как бы, давайте, то есть часто скажем,
на олимпиаде полезный скилл как бы
перепроверять. Знаете, даже на соревнованиях
по шахматам этот скилл применяют.
Нет. Да.
Сейчас, наоборот, там же какой-то
грозместие говорил шахматный,
что
ты должен доверять себе,
читать один раз, потому что, если
два раза читать, то еще... Да, но я не об этом.
Дело вот в чем. Нет,
я имею в виду следствие. С одной стороны, да.
Но с другой стороны, несколько первых ходов
обычно игроки делают
по домашнему, по уже известной им
теории. То есть, первые
ходы совсем стандартные дебюты, а дальше
они определяются тем, в какие конкретно
направления теории
они хотят привести партию.
Вот.
Но дальше, поэтому
периодически игроков озекает следующее,
что человек там явно знает теорию,
он по идее знает, куда надо ходить, но он
перепроверяет.
Потому что он не просто так знает, что туда надо ходить,
не просто потому, что ему там умные дяди
сказали.
Ну да, что не перепутал,
потому что можно пытаться играть
быстро, но бывает такой
специфик, называется перепутал порядок ходов.
И тогда бывает, что там, если
ходы сделать не в том порядке, то противник этим
будет очень сильно воспользоваться.
Ну вот. То есть, поэтому там
в шахматах такое встречается.
Вот.
Еще если нашел выигрыш, его можно проверять
сколько угодно времени.
Если он правильный, то выиграли,
а если не правильный,
то вы это поймете раньше,
чем мы.
Ну да.
В шахматах это не актуально, потому что там
выигрыш обычно в несколько ходов,
либо очень длинный, но понятный.
А, ну да.
Ну да.
Но не будем сейчас копать.
Ладно. Так вот.
Проверите это.
Не будем сейчас с вами расписывать, как это проверять.
Ну я сказал, просто честно,
тут все расписываете, сворачиваете,
сокращаете лишнее.
Помните, основное трагометрическое
трождество, вот это что, косинус квадрат
плюс инус квадрат равно 1.
Ну, то есть, конечно, там какой-то базовый школьный
геометр обычно все-таки полет там.
Но помнить, увы, надо.
Вот.
Так что это вот мы тоже разобрали.
Так, ну хорошо.
Это были углы.
Ладно, теперь давайте перейдем к чему-нибудь еще.
Например, многоугольник.
Вот.
Ну вот, действительно, что такое обычно многоугольник?
Ну, многоугольник обычно
это просто вектор
точек, правда?
Вот.
То есть, обычно это вот какой-то просто
вектор точек.
Ну, про него, ну, обычно, конечно, мы рассматриваем
в первую очередь простые многоугольники,
там без всяких самопересечений и
самокасаний.
Ну, а давайте первую нот.
Первое, что мы хотим сделать, это, например,
ну, можно попробовать, скажем,
найти его площадь.
Теперь внимание и вопрос.
Как найти площадь?
Как найти площадь?
Ну, на самом деле, тут, конечно, полезно знать
два метода.
Да, ну, во-первых, да. Начнем, конечно,
с простого. Давайте предположим, что
многоугольник выпуклый.
Ну, это потом выяснится,
что никакой.
Ну, визуально, ну, вот.
Так, ну, на самом деле, можно начать с чего?
Как найти площадь треугольника?
Векторное произведение.
Да, модуль векторного, ну, если прям
честно, то модуль векторного
произведения пополам, правда?
Ну, помним школьную формулу, да, что
площадь треугольника это половина
произведения двухстороннего синуса угла
между ними, да?
Ну, вот.
Ну, понятно, что через высоту, но, как вы
поняли, тут проблема, да, что
когда мы это пишем, мы должны это помнить,
а не, там, понятно, как это
выводить через высоту, там, это понятно,
но, помнить, к сожалению,
но это, как бы, надо именно помнить.
Ну, нет.
Каждый раз это можно выводить за 5 секунд.
Нет, ты знаешь, но для того, чтобы
выводить, нужно знать, что это есть.
Потому что, как бы, тут фишка бывает,
да, вы, как бы, знаешь, как это бывает?
Если тебе поставить такую задачу, ты это выведешь,
да, но, как бы, чтобы
решить задачи на олимпиаде,
или где-нибудь еще, нужно было, чтоб ты
откуда-то вспомнил про эту формулу, вообще.
Вот. Так вот.
Но это если площадь.
Как посчитать площадь выпуклого угольника?
Ну, на то он и выпуклый,
что можно его просто поделить
вот так диагоналями на треугольнике,
скажем, вот, а это будет, пусть, нулевая
точка какая-нибудь там,
там, п0. И, честно сказать, что
у нас площадь равна
чему? То есть
s равна,
то есть, там, допустим, 1 вторая
сумма по всем
и равно, там, допустим, от 1 до
n минус 2,
там, p и t,
там, минус
p0,
ну вот, на
p и плюс 1 минус
p0.
Вот. Можно, в принципе, написать
модуль. Видно, да?
А можно не писать.
Потому что, в принципе,
если я напишу вот так, то что получится?
То получится, казалось бы,
та же площадь.
Ну вот. Но с оговоркой.
Если многоугольник
ориентирован
против
часовой стрелки,
тогда легко заметить, что
тогда все эти треугольники будут,
у всех треугольников
пекторонапресение будет давать нужный
знак, да?
Но, с другой стороны, заметим, что
если многоугольник идет против часовой
стрелки, то тогда окажется
вот эта штука окажется отрицательной.
Вот. То есть, обычно
это называют, то есть, тут вводится понятие
ориентированная площадь.
Ориентированная
площадь.
То есть, что это означает?
Мы хотим, чтобы у нас площадь, она была
со знаком плюс, если многоугольник
ориентирован против часовой стрелки,
и меньше 0, если ориентирован
по часовой стрелке.
Правда, возникает естественный вопрос.
А что такое по часовой стрелке, а что
такое против часовой стрелки?
Если площадь больше 0?
Да. Обычно это сводит
к определению,
кто-то может написать, но
для нас это все-таки хочется что-то более
общее. Вот.
Ну, действительно, просто тут еще проблема в том, что интуитивно
это понятно, если многоугольник выпуклый,
но если он, скажем,
какая-то гадость,
вот вы его сейчас как рисуете?
То как бы непонятно,
это как бы по часовой стрелке?
Вот что, какое направление тут будет?
Если индекс вращения положительный,
то по часовой, если
отрицательный, то против.
Что такое
индекс вращения?
Относительно точки внутри.
О господи.
Индекс, ну вообще да.
Хотя да, наверное, так по умному называется.
Да, действительно, очень хотелось бы,
чтобы у нас была точка, скажем,
внутри многоугольника. Ой, а что
такое внутри многоугольника, кстати?
Вот эти так вот.
У нас по какой-то
все время жардано.
Да.
Одна из них будет конечная.
Нет, не конечная, а ограниченная.
Ну, да. Одна ограниченная,
другая нет. Да. Так что ограниченная называется
внутри, остальная снаружи.
А, то я сказал эту байку, видимо.
Нет? Нет?
Ну ладно, не важно. На самом деле,
может быть. Я люблю рассказывать, потому что утверждалось,
что там стародавниво времена, когда в ВУЗы
поступали с помощью устных
экзаменов, вот иногда
была такая практика. То есть, предположим, что вам
какого-то талантливого абитуриента надо завалить.
И тогда ему можно задавать подобного рода
вопрос. Ну, там
можно начать просто с каких-то еще хотя бы вопросов.
Почему бесектриса угла в треугольнике
пересекает там противоположную сторону,
например?
Или там что-нибудь еще
в этом роде. В общем, там
что такое внутри? И там вот учили,
что такие вопросы, что если внутри, вы должны
сказать заклинания. Вот, по теоремы
Жардана любая, санкнутая,
не самопересекающаяся кривая,
делит плоскость
за исключение саму себя на две
связанные части, одна из которых является
ограниченной, другая нет.
Вот, доказательства теоремы Жардана
выходят за рамки школьной
программы. Вот там какие-то такие заклинания
были.
У тебя не завалили, что ты EG сдавал?
Отчасти,
это была отчасти одним из других методов,
почему EG вообще ввели.
Потому что вот это вот...
Нет, так-то да,
ты ответил правильно.
Ну, там они попытались
завалить другими средствами.
Там была бы попытка, они
просто дали тебе задачу, в которую ты бы почти
заведомо не решил, просто, но
потом ты бы никому никогда не смог доказать,
что эта задача сложная.
Потому что у всех этих задач
очень тупое решение, но просто
оно там...
очень тупое, но просто вот почему-то
очень-очень-очень-очень
немногие почему-то могут эту задачу с нуля
решить. Вот просто вот бывают такие подлые задачи.
То есть как бы если показать задачу и решение,
никому в жизни не докажешь, что задача была
сложная. Или там
требовало какие-то знания, больше там
знаний из школьной программы.
Так что тут...
Ну, тут
мы вам все, что мы можем предложить. Вот вам примерный
список таких задач. Тренируйтесь.
Вот.
Ну, против лады, сейчас
не актуально, потому что... Ну ладно, тут у вас
ЕГ, а у вас ЕГ, у вас
в СЕРС, в общем-то, так что...
Так что в этом смысле да.
Так вот. Ну ладно,
на тему внутри-снаружи, вот поняли?
Действительно. Хочется, если уж точка внутри,
то идея действительно такая.
Тут бывает полезно еще воображать
себе это. Может быть умное слово индекс
вращения. Часто его там
вообще в курсе математики могут вести как
правильный интеграл. То есть какой-то там интеграл
чего-нибудь, а потом заметим, что
этот интеграл это всегда делится на 2П.
Хотя смысл тут очень простой. Жила
была точка, которая идет по многоугольнику.
А вот идея такая,
вы стоите в какой-то точке, допустим,
в какой-то точке, и на нее смотрите.
И когда точка двигается, вы
поворачиваете. Иногда поворачиваетесь
как бы вот. То есть вот она так идет, вы
поворачиваетесь налево,
и еще она идет, поворачиваетесь
направо и так далее.
Видимо, обычно под индексом
вращения подразумевается ровно вот это.
И вам теперь жутко интересно,
когда эта точка...
если вот эта точка,
за которой вы следите, пройдет по
многоугольнику. На какой угол вы повернетесь?
Но есть подозрение, понятно, что угол, на который вы повернетесь, он будет делиться на 2p, очевидно, правда?
Но другой вопрос, он будет 0 или что-то нетривиальное?
Вот, ну хочется обычно так, то есть оказывается так, что если точка лежит вне многоугольника, то этот угол будет 0.
Утверждение. Если точка вне многоугольника, то он будет 0.
Если она будет внутри многоугольника и точка шла, кажется, против часовой стрелки, то он будет положить, то он будет ровно 2p.
А если по часовой стрелке, то минус 2p. Правда, остался только выяснить маленький интересный момент.
А что такое против часовой стрелки, а что такое по? Вот в этом вот экзотическом случае.
Ну здесь я просто скажу простое определение. Мы будем говорить, что мы идем против часовой стрелки, если когда мы идем по границе,
как бы сам многоугольник остается слева. Ну как сам многоугольник?
Нет, понятно, что когда мы вот тут идем, да у нас тут и слева и справа есть все что угодно, да?
Но здесь вот это будет так, что если мы вот прямо на столечко отойдем лево, мы должны быть в многоугольнике.
А если на столечко отойдем в другую сторону, то мы должны быть вне многоугольника.
Может наверно еще определить, что существует сторона слева, от которой есть многоугольник?
Ну можно наверно сказать и так. Но это когда-нибудь может быть где-то существует. Она бы хочется прямо вот локально это понимать.
Ну тут просто это как угодно. То есть по сути мы идем так.
По сути мы как бы идем не по самой этой стороне, а как бы мы идем чуть-чуть слева от этой стороны и как бы касаемся этой стены.
То есть просто вот идем и утверждается, что когда мы вот так обходим, то мы как бы идем...
То есть если мы таким образом вот именно вот по правую руку у нас стена и мы так идем, то получается мы идем против часовой стрелки.
Согласуюсь с тем, что выпукло в многоугольнике это как раз против часовой стрелки будет, а подчасовой наоборот это если мы левый.
Вот тут такая идея. На самом деле полезная такая визуализация, которая в целом бывает очень полезна.
Понятно, да?
Вот.
Так вот. Но теперь у нас есть вопрос. А можно ли это утверждение доказать?
Что конкретно?
Ну про ноль, два пи и минус два пи.
А то может там четыре пи, восемь пи, мало ли.
Ну тут как бы аккуратно, а то я тут, по-моему, а то пока я тут ходил, тут был один преподаватель, который в этом месте мог вам начать очень сильно визаться.
Вот.
Но видимо вы его не знаете.
Вот.
9 утра тут был?
Ну я не знаю, кто тут был в 9 утра. Может и он.
Вот.
Так вот.
Ну просто там Аркадий Борисович Критков известен тем, что он в этом месте начинает визаться очень сильно.
То есть настолько сильно, просто у меня по камере когда-то была репутация, что я очень сильно вижусь в доказательствах.
Ну сейчас наверно уже нет, но все-таки.
Ну вот так вот. В любом случае даже я в свои, так сказать, лучшие годы, видимо, по сомнению с Аркадием Борисовичем я там просто принимаю доказательства на халяву.
В любом случае.
Вот.
Так вот.
Ну давайте смотреть. Ну во-первых начнем с того, что пусть у нас точка лежит вне многоугольника.
Ну интуитивно заметим маленькую приятную вещь.
Если у меня этот, если я этот, вот пусть у меня есть функция.
F от X это типа мы вот обошли многоугольник, сколько у меня угол получился, да?
Наверное интуитивно очевидно, что это функция непрерывная, правда?
Какая еще раз функция?
Какая еще раз функция?
Ну на какой угол мы повернулись, глядя на точку, обошедшую вокруг многоугольника?
Обошедшую, что?
В плане пока пошли по границе?
Ну вот жила-была муха, летела она вокруг многоугольника. Мы на ней, мы стояли вот тут и смотрели, да?
На какой угол мы суммарно повернулись?
Вот пусть у меня эта функция.
Муха не поворачивалась, муха летела вдоль границы. Поворачивались мы, глядя на нее.
А, ну да.
И вот это как бы функция от точки, где мы стояли, да?
Так вот, заметим, что эта функция, она вне многоугольника явно непрерывна, правда?
Не на границе, ну да.
Нет, ну она как минимум непрерывна.
Потому что угол, на который мы повернемся, пока муха летит, допустим, от начала ребра к концу, явно непрерывна.
Но заметим следующее, что у нас функция имеет какие-то определенные значения дискретные.
То есть там только 0, 2p, 4p, 6p и т.д. Ну и минус 2p, минус 4p и т.д. Правда?
Мы это, кстати говоря, строго догадали?
Чего? Что функция непрерывна?
Нет, что имеет дискретные значения вот эти.
Ну потому что мы смотрели вот в эту точку, да, и после того, как она облетит, мы будем смотреть ровно туда же.
Ну как бы, то есть мы смотрели в точку, повернулись на какой-то угол и смотрим туда же.
Но отсюда очевидно, что угол делится на 2p, ровно отсюда и очевидно.
То есть да, может быть кто-то, как я уже сказал, формальной математике может такое не примут, потому что это типа отсылка к какому-то там лично вашему визуальному образу.
Но, как по мне, этот образ достаточно точен.
Поэтому я его и рассказываю.
Но для любой точки не на границе.
Нет, ну в смысле.
Ну да, пока мы, ну вот, скажем так, да, то есть мы можем говорить, что функция непрерывна и для точек, ну вот.
Ну тогда для точек она непрерывна на области вне границы и на области внутри границы.
Но тогда из этого следует, что она и вне границы и внутри границы она константа.
А, ну да.
Ну потому что она не может, чтобы перейти от 0 до 2p, она должна принять все значения между 0 и 2p, допустим, да, а этого не бывает.
Но отсюда только остается только увидеть, что давайте эту точку уберем максимально далеко.
Просто настолько, настолько, настолько далеко.
Так, не знаю, ладно, видно меня-то.
Вот.
Нет, прям настолько, да.
Ну вот, настолько далеко, что как бы я уже понимаю, что у меня весь многоугольник лежит в каком-то вот маленьком угле.
То есть в таком угле я вот так вот поворачиваюсь.
Чуть-чуть.
Ну очевидно, что если я тут вот смотрел куда-то и тут наповорачивался, очевидно, никакие 2p меня уже не вылезут.
Чтобы у меня было 2p, я тут должен как-то переоборачиваться, а назад я не повернусь.
Это уже начинает напоминать клемму до аломера.
Возможно.
Возможно.
Вот.
Поэтому здесь получается 0.
Более сложно доказать, что если я внутри многоугольника, то есть если я как-то нахожусь внутри многоугольника, то вот при подчасовой стрелке получится реально 2p.
Вот.
Тут, конечно, вот.
Наверное, хочется встать очень близко к какой-то вершине, и тогда у меня весь многоугольник к внешней вершине.
Ну вот.
И тогда весь многоугольник, кроме нее, будет лежать по одну сторону от нас.
Ну, возможно.
Нет, ну можно, наверное, и так, но можно по-другому, значит можно тут по-разному.
На самом деле в многоугольнике есть такая не самая тривиальная теория.
Мало кто знает, но внутри что?
Но внутри любого многоугольника можно провести диагональ, которая лежит полностью внутри.
Ну вот.
И это тоже.
Ну вот.
Как такую диагональ найти?
Ну, такой тупой, доказывается, такое.
Ну, во-первых, заметим, что будет, то есть найдется какая-нибудь такая вершина, например.
Ну, например, рассмотрим там какую-нибудь самую верхнюю вершину, например, многоугольника.
То есть максимальную появление.
И заметим, что угол внутри нее, вот тут по камере в эпсилонокрестности целиком, лишит внутри многоугольника.
Вот.
Ну, тогда получается следующее.
Рассмотрим вот эту диагональ, соединяющую две соседние вершины.
Может, нам повезет, и это и есть хорошая диагональ.
А может, не повезет.
То есть, потому что тут вот кто-то сюда, он от такой еще заходить будет.
Что тогда сделать?
Ну, тогда идея такая.
Давайте тогда, так как у нас, тогда у нас внутри этого треугольника образовались какие-то вершины.
То есть какие-то отрезки, какие-то вершины.
Давайте через все вершины проведем прямую параллельную вот этой типа потенциальной диагонали.
И найдем, и выберем из этих вершин, у которых это прямая ближе всех к этой точке.
Да, вот будьте внимательны, просто самую близкую точку выбрать может не сойтись.
Потому что там может быть точка, может быть у вас там какая-нибудь самая длинная.
То есть там может быть самая близкая, но там, но ее там будет пересекать вот какая-нибудь такая мерзкая диагональ.
Что тут будет ближе к чему. То есть это будет вот точка ближе к чему вот эта, но проблема.
А, да, я понял.
Да, на самом деле даже вот такая будет более точная картинка с тупым углом.
Вот.
Ну то есть вот какой-то вот такой случай.
То есть вы хотите взять вот эту точку и вас ждет фейл.
Поэтому вот лучше, поэтому берем прямую параллельную вот эту и тут тоже очевидно адекватно.
Вот.
А я просто это к чему.
Так вот, давайте, ну заметим, что я могу тут двигаться внутри многоугольника как угодно.
И в принципе вот этот вот поворот от этого не меняется, как вы выяснили.
Так вот, давайте проведем какую-нибудь диагональ.
Нет, Том, вы не доказали тиремму.
Нет, тиремма была о том, что можно провести диагональ сначала.
Эту мы доказали.
Потому что вот она диагональ.
Она диагональ.
А, диагональ.
Да.
Ну короче, не обязательно треугольник отсекается.
Да, абсолютно не обязательно.
Да.
Давайте я подвигаю точку, возьму эту диагональ, подвигаю точку в многоугольнике так, чтобы она на этой диагональ не попала.
Тогда смотрите, многоугольник разбился.
Ну, точнее так, к этому обходу, заметим, к этому обходу, скажем, против часовой стрелки,
то есть можно сказать, что многоугольник разбился на два,
но при этом таких, что сумма обходов относительно этой точки вот этого многоугольника и вот этого многоугольника,
она идентична исходному обходу, правда?
Почему? Потому что мы тут добавили плюс угол, а тут добавили минус тот же самый угол, и они поубивались.
Саня, вы прошли туда-обратно?
Да.
Ну, это просто привело к тому, что я могу теперь рассмотреть вот этот обход и вот этот обход, вот этот вот обход, да?
И так сумма этих обходов – это просто один вот этот обход.
Окей, я понял.
Вот, ребята, вы поняли?
Есть кто-нибудь? Ну вот.
Так вот, для чего я это сделал?
Вот. Ну, сделал я очевидно для того, чтобы действительно тут проводить нот,
чтобы сказать, что понятно, что точка лежит в одном из этих многоугольников и вне другого,
поэтому ту, которую внутри мы убиваем, почему убиваем? Потому что обход по ней дал вклад ноль.
То есть, на самом деле, то есть по факту, кстати, можно еще интерпретировать тот же результат тем же образом,
что вот рассмотреть, на какой угол мы повернулись за этот обход – это то же самое, чтобы посмотреть,
на какой угол мы повернулись, пройдя по этому ребру.
То есть, видите, пути могут быть разные, но если вы начали в этой точке и закончили вот в этой,
то как бы угол в итоге будет один.
Ну, точнее так, один с точностью до вот этих вот поворотов, да?
То есть, здесь как бы это можно аккуратненько там… Получается так, эту штуку можно сдуть, не задевая вот это.
То есть, если я тут поставлю вместо себя штырь и начну тут вот эту веревочку натягивать,
то как бы в штырь веревочка не упрется.
Да, еще такой визуальный образ, да.
Вот. Ну, так вот, что мы сделали?
Ну, сделали мы… Да, сейчас. Чего?
Ну, так мы сейчас сделали маленькую приятную вещь, мы уменьшили количество вершин многоугольника.
В такой локе можно было взять просто наш многугольник, надуть его до окружности и заметить…
Ну, как бы взять исходный многугольник, надуть до окружности…
Ну, подожди, надуть не получится, потому что, извиняюсь у тебя, если просто тупо надуть,
то у тебя надо думать, как сделать так, чтобы вот это вот не в одну и ту же точку пошло.
Ну, то есть, она будет… Вот эта штука, она будет выдаваться.
Ну, вот да, вот желательно аккуратно сделать так, что так можно, да.
Тогда мы либо внутри окружности, либо снаружи.
Ну, неважно. Значит, смотрите, важно другое.
Ну, на самом деле так, утверждается такое, что, в общем, таким вот образом берем диагональ,
то есть мы, получается, свели задачу вроде как к меньшему количеству вершин, правда?
Да.
Да.
Вот.
Ну, раз тогда у нас меньше число вершин, тогда, получается, рано или поздно,
я утверждаю так, рано или поздно мы попадем в выпуклый многугольник.
В треугольник.
Да, ну, можно сказать, что рано или поздно мы просто попадем в треугольник.
Ну, а в треугольнике уже очевидно, что если был обход против часовой стрелки,
то будет плюс два π, если по-частовой, то минус два π.
То есть, в принципе, вот таким образом, на самом деле, это можно доказать.
Отдатка.
Вот.
То есть, как бы, угол, можно, то есть, по идее, обратите внимание, то есть,
угол, который мы тут рассматриваем, можно действительно вот таким образом и найти.
Но самое смешное, что это отчасти может быть таким же образом,
на самом деле, можно найти и площадь.
Потому что, на самом деле, есть мистический факт.
Вот мы говорим, что для выпуклого многугольника можно найти площадь вот таким образом.
Ну, во-первых, заметим, что давайте я напишу вот так.
Я напишу, что тут от 0 до n минус 1 и будем считать, что pn тождественно равно p0.
А теперь заметим следующее.
Я утверждаю, то есть, рассмотрим функцию f от точки A,
которая будет равна, ну, допустим, той же самой функции.
И равно 0, n минус 1, pi минус A, pi плюс 1 минус A.
Рассмотрим вот такую функцию.
Так вот, мистическое утверждение.
f от A равно константе.
То есть, оно от самой точки A не зависит никак, только от многугольника.
Ну, доказать это, на самом деле, очень просто, смотрите.
То есть, сейчас я просто проделаю, чтобы вы увидели, что никакой магии тут нет.
Да, pi минус A, pi плюс 1 минус A.
Ну, понятно, одну вторую я убью, потому что понятно.
Так что давайте честно раскладываем по линейности.
Что у меня получается? n минус 1, pi, там pi, pi плюс 1.
Минус сумма по всем i равно от n минус 1.
Значит, вектор, например, pi на A.
Минус такая же сумма, но наоборот.
A на pi.
Ну, можно, ладно, давайте вот, могу по-честному написать A, i плюс 1.
Плюс сумма по всем i от 0 до n минус 1, минус A, минус A.
Вот я просто предельно честно разложил вот это векторное произведение.
Ну, теперь что заметим?
Ну, во-первых, шлёп.
Потому что векторное произведение вектора на самого себя равно по любому 0.
А ещё заметим, шлёп, шлёп.
Потому что, во-первых, я здесь суммирую по точкам немножко в другом порядке,
но от пристановки без слагаемых суммы не меняется.
А во-вторых, заметим, что вот это то же самое, шлёп, это только на минус 1.
Ну всё.
То есть получается, это всегда равно тому же самому, как если бы вместо точки A
подставили начало координат.
То есть поэтому оказывается, что для выпуклованного угольника площадь можно
найти ориентированную площадь.
В общем, именно ориентированную площадь можно найти вот по такой формуле,
причём абсолютно плевать, где находится точка 0.0.
Вне многоугольника, внутри многоугольника или даже на границе.
Понятно, да?
То есть если многоугольник, то есть ещё раз, если многоугольник выпуклый, то ура.
Но вот вопрос.
А что, если он невыпуклый?
То есть, что если он невыпуклый?
А теперь мистический факт.
Для невыпуклого многоугольника верна абсолютно та же формула.
В чём, опять же, тоже вот прям как и у нас, у нас есть такая формула,
в чём, опять же, тоже вот прям честные те же векторные произведения.
То есть, обетим, никаких модулей.
То есть нам важно, когда плюс, а когда минус.
Потому что когда плюс, это будет означать, что многоугольник мы обходили против часовой стрелки.
А если это минус, то по.
Как-то доказывать это можно самыми разными средствами.
Нет, но мы доказали, что константа.
Да, но опять очевидно, что константа.
Нет, ну не совсем так.
Можно по-разному это делать.
Понятно, что константа, но доказывать можно так.
Если цель просто как-то доказать, то картинка вот перед глазами на самом деле.
Потому что давайте, пусть многоугольник, если многоугольник выпуклый, то мы знаем, что это правда.
Если многоугольник невыпуклый, проведём в нём диагональ.
И скажем, что как бы ориентированная площадь всего многоугольника – это сумма ориентированных площадей.
В чём заметим, что прибавив вот это, прибавив вот это, то есть вот к этой сумме добавился 0.
Это 0, правда?
Понимаете, да?
То есть вот эта исходная сумма оказалась сумме вот этих многоугольников, то есть просто плюс-минус.
Ну и всё, теперь остаётся только свести дальше и идти по индукции по числу вершин.
Потому что внутри каждого многоугольника, то есть по сути будет так.
Мы просто многоугольник вот этим методом распиливаем на треугольники, в каждом треугольнике формула верна.
А когда мы это всё просуммировали, получили ориентированную площадь многоугольника, в которой там все внутренние рёбры поубивались.
Ориентированную площадь мы так и определили, что если мы обходили многоугольник, если вершины многоугольника заданы в порядке против часовой стрелки, то площадь должна быть положительная.
А если они идут по часовой стрелке, то отрицательная.
Чего?
равно площади, но со знаком в зависимости от порядка обхода, что там с обходами все в порядке, ну типа того, но впрочем понять это можно по-другому, то есть есть более полезное доказательство, ну по сложности примерно такое же, но просто тут важны в том числе и идеи, поэтому с какой стороны смотреть, потому что чаще это доказывают по-другому, вот мы доказали, что это константа,
поэтому давайте возьмем какую-нибудь точку где-нибудь вне многоугольника, значит тогда вот у нас многоугольник, я не буду сейчас сильно много сторон рисовать, и теперь смотрите, это многоугольник,
так, да вот синий макер, да как-то вот у тебя слово синий, какое это член предложения, синий, ну сам ты синий, так, значит идея такая, давайте идем против часовой стрелки, тогда у нас получаются шумы, ну вот, то есть получается идем как бы, как бы по сути получается такая продвинутая,
то есть у нас есть такая вот муха, которая тут летит, мы ее держим на веревочке такой вот, которая всегда натянута правда, ну поводок такой классический, знаете, ну знаете у собачьего такой поводок, что он может быть всегда натянут, то есть она там когда-то убегает, он как бы удлиняется, потом это сжимается и так далее, вот допустим у вас такая собачка бегает, и вы говорите, что вы тут замощаете какую-то площадь, но как бы эту площадь вы замощаете, если вы и поворачиваетесь против часовой стрелки, вы замощаетесь со знаком минус,
а если замощаете подчасовой, то есть наоборот подчасовой стрелка с знаком минус, а тут со знаком плюс, вот, ну вот, чего, о боже, законы Кеплера, боже мой, так,
да, да, да, ну там, да, там, да, там замечают такое вот, да, делается какое-то заметим, что, так, ну давайте вот так, ну вот, я примерно так вот это изображу, да, вот, значит там просто идея, ну ладно, да, даже я слишком много нарисовал, пожалуй, давайте я попроще нарисую, вот, давайте хотя бы флажок нарисую, вот, идея такая теперь,
давайте вот так даже нарисую, вот так, вот так, вот так, так вот так, теперь смотрите, когда я прохожу по вот этому, в эту сторону, я как бы у всех вот этих вот триугольничков рисую минусики, да, потом прохожу по этим и рисую, тогда замощаю как бы, так, это был минусик, а тут теперь рисую плюсик,
вот тут плюсик и вот тут плюсик то есть видите как бы вот эти части как бы взаимоуничтожились
вот видите да что они так не видите а что не нравится нет а что тебе не нравится то ну нет
ну возможно надо найти хотя иногда да строгость начинает включать строгость иногда начинает
мы не верим нарисованной картинке да то есть не верим таки образу это называется так значит
что тут еще тут еще получается так и плюсики плюсики плюсики плюсики так и тут мы когда шли
тут у нас получается этот плюсик плюсик а вот в общем-то и все но теперь можно легко заметить
легко заметить что как бы все части которые у нас тут получились внутри многоугольника
получились со знаком плюс ровно одним, а все остальные части поуничтожались.
В случае этого многоугольника получилось, заметим что. Но на самом деле, конечно,
доказательства можно провести и более строго. Потому что давайте в общем случае возьмем нашу
точку где-нибудь достаточно далеко. Мы знаем, что функция константа, поэтому точку возьмем где-то
подальше. А теперь давайте возьмем ее где-нибудь далеко. То есть тогда мы знаем, что весь
многоугольник у нас лежит в одном угле. Этот уголочек у нас как-то разбивается на какие-то углы,
вот эти маленькие. Такое, что внутри каждого из этих углов нет ни одной вершины. Так вот,
давайте посмотрим, как эта функция будет смотреть на площади пересечения многоугольника и каждого из
уголков. Заметим, по сути, следующее. Но там будет происходить так. То есть у нас есть просто
несколько сторон, которые пересекают этот угол. Как пересекать, какие-то вершины могут на самих
сторонах угла лежать, понятно. Там могут быть вообще экзотические все случаи, вот эти вот все,
вот это вот и так далее. Но это нам не важно. А важно нам другое. Смотрите, нам важно как эти
все стороны были учтены. Во-первых, начнем с того, что этих сторон четное количество. Почему четное?
Потому что мы можем прямо по бисектрисе этого угла вот из этой вершины просто честно идти.
Сначала мы находимся вне многоугольника и каждый раз, когда пересекаем сторону,
если были вне, то стали внутри, если стали внутри, то стали вне. Но так как в конце мы должны
выйти в бесконечный аут, то получается, что сторон должно быть конечное количество.
Не просто конечное, но четное. Конечно оно будет, потому что у нас многоугольник конечный. Но более
того, смотрите как интересно. Я утверждаю, что если у нас многоугольник ориентирован против
часовой стрелки, то смотрите как интересно. Тогда относительно нас первая встреченная
сторона будет смотреть вправо. Ну для того, чтобы у нас как бы, потому что у нас тут было пусто,
а тут густо. А вот это наоборот слева, потому что слева от нее тут как раз внутренности,
и тут они так чередуются, справа слева, справа слева. Но тогда смотрите, когда муха проходила
именно по этим ребрам, смотрим вот внутри этого угла, то смотрите, мы не знаем даже в каком порядке
муха проходила по этим ребрам, порядок может быть самый разный. Вполне вероятно, что она ходила
как угодно. То есть там вложенность отрезков может быть какая угодно. То есть там гарантировать
можно, что там скорее всего будет что-то похожее на... То есть какая-то вложенность там иметь
место будет. Хотя нет, не факт, там какая-то спиралька может быть. Ну да, я имею ввиду,
я просто хотел показать, что порядок может быть любым, но это неважно. Потому что когда мы видим
вот этот отрезок, понятно, мы тут рисуем минус. Когда мы видим этот отрезок, мы рисуем плюс-плюс,
в общем тут рисуем минус-минус-минус. Ну в общем суть понятна. То есть, очевидно,
что каждая часть, над которой находится четное число отрезков, уничтожается, а над которой не
четное, там останется ровно на один плюсик больше, чем минусик. То есть, по-моему, уже достаточно
строго получилось даже. Но тут, конечно, пришлось ради этого пописать, сказать, что функция не зависит
от точек, поэтому точку где-нибудь подальше отнесли. Хотя, в общем-то, не то, чтобы мы прям сильно
глубоко пользовались тем, что точка находится даже не просто далеко от угольника, а просто,
что она вне его находится. Вне мы пользовались, чтобы тут мы начинали с аута, это да. Но в принципе,
если бы точка была внутри, рассуждение было бы такие же, только их тут было бы нечетное количество.
Ну, хочется типа сделать какую-то, ну типа мы можем, если она где-то внутри многугольника,
мы можем ее обходить внезапно. И что? По неучтенной, ну, то есть, мы вот так прошли,
потом вот здесь обошли, еще раз вот так прошли, и вот это, кажется, может что-то ломать. Ну, вряд ли.
Ну, особо не должно ломать по одной простой причине. Смотри, ты вот смотришь в каком-то
направлении и видишь какие-то отрезки. Ну, потому что когда ты пересек границу,
наверное, ты вышел из вне многоугольника, внутри многоугольника или наоборот. Это по-любому.
Вот. Нет, ну как сказать, нет. Формально, конечно, придется доказать, что у тебя этот лучик
действительно там вышел из внутри многоугольника, а вне многоугольника, конечно. То есть там типа
рассмотрим ребро, рассмотрим очень близкие точки с двух сторон от ребра. Докажите, что как бы нельзя
пройти от одной точки до другой, не пересекая ногу. Кстати, мы как-то в школе, в школе мы с кем-то
пытались доказать, можно доказать, правда, используя понятие какие-то непрерывности, но доказать
как-то можно, но это больно. В плане очевидно, что это очень плохо доказывается, но это не та
проблема, на которую нам нужно обращаться. Нет, ну тут какого момента строгости? Можно как бы в конце
готовы просто умным дядям поверить, что это работает. Ну как умным дядям, вы, собственно,
сами, думаю, неоднократно эту формулу в жизни использовали, правда? Какую? Вот эту, что вы плывете.
Отлично. Ну нет, ну есть, подождите, когда вы пишете задачи по геометрии, там с площадями,
то, наверное, площадь многоугольника вы вот так ищете. Да, и сколько в школе вообще бывает задач
по геометрии, да. Окей. Ну а на самом деле, конечно, тут важно отметить, что это не единственный
способ. То есть, в принципе, нет, это на самом деле приятности в качестве дополнительного бонуса,
это вам считает то, что как определить, многоугольник идет против часовой стрелки или по. Вычислим ориентированную
площадь и посмотрим на ее знак. Приятно, да? Вот. Соответственно. А если вы вместо площади
у каждых двух векторов ищете атан-2 и его суммируете, то вы можете еще и заодно определить, лежит ли
точка внутри многоугольника или вне многоугольника. А может, я к вам третий вопрос. Давай. Я правильно понимаю, что если точка лежит на границе,
то ее так называемый индекс обхода получится пи или минус пи. Да. Ну на самом деле, да. Ну там просто, ну как сказать, формально
надо сказать, что индекс обхода тут не определен, потому что в какой-то момент муха придет в нас и у нас получится.
Ну там получается, да. Там плюс-минус пи, да. Вот. Да. Вот. Ну правда, с этим индексом подлянка, но с другой стороны,
причем самое страшное, вот действительно, так можно определять лежит ли точка внутри многоугольника,
но самое для меня страшное, что, по-моему, кто-то реально эту задачу так решал. Вот реальный индекс
обхода. Ну реально, то есть задача лежит, ну потому что есть стандартная задача, лежит ли точка внутри
многоугольника, одна точка внутри одного многоугольника, да. Так, вот все. Вот меня
очень пугает, что есть люди, которые реально считают, что она так решается. Ну, не знаю,
мне что-то ощущение, что такие люди как-то, знаете, обрезают, то есть, так, ну знаете, как-то опыты
учителя геометрии, как бы, знаете, иногда, смотря, как ты решаешь какую-то задачу, понимают, что какие-то
более сложные задачи ты не решишь в принципе. Почему? Потому что мыслишь неправильно. Ну вот, то есть,
нет, это, конечно, то есть, более формально так, ты не знаешь каких-то более простых идей, на базе которых
решаются более сложные задачи. Нет, с точки зрения, если была там одна задача, да. Но нет, ну тут
называется это кабу-как. Но на самом деле, если говорить о реальных минусах, то минус будет
заключаться в том, что ты будешь 10 в шестой раз вызывать атан-2. Это по Константе не очень.
Потому что атан-2 это жирная операция. Ну вот, все-таки, да. Поэтому, конечно, это, поэтому задача
лежит ли точка многоугольника решается по-другому. Но я еще про площадей не договорил.
Да, у нас, конечно, занятия. А, ну, можно, конечно, да. А выпуклых, да. А выпуклых,
не выпуклых и точек внутри можно, конечно. Ой, жаль, конечно. Хорошо было бы сегодня, но что делать?
Да, будем надеяться, что на четверг финале не будет задачи, когда лежит ли точка внутри многоугольника.
Нет, ну, писать легко, но как бы вы уж сами убедились. Ну, там по-разному. Там, на самом деле,
об этой задачи можно там бесконечно говорить, поэтому еще не будем пока не говорить. Там просто,
там куча разных решений есть, на самом деле. И их можно очень по-разному обыкнуть.
Согласна, что если задача состоит в следующем, написать наиболее быстро в код, наиболее простой,
то это хорошая реализация? Ну, более-менее, да. У меня была задача в этом, потому что это была задача на концовку.
Ну да, но чаще всего, но чаще всего у тебя будет задача написать, использовать это в качестве под
задачи. Я вот это использовал, чтобы стрессы написать. А, ну, с точки зрения быстрого кода,
конечно, да, это классно, это без вопросов, да, окей. Да, никто не против, да. Никто не
спорит с тем, что это решение быстро пишется и хорошо работает. Ну, просто тут напоминаю,
курс по геометрии, то есть, как вы знаете, то есть, курс по геометрии, как бы иногда бывает там,
что там иногда просто, как бы в каких-то местах просто нужно знать там более оптимальные подходы.
Потому что если вы зафиксировались, что я могу вот это придумать, то как вот, то есть, как вы знаете,
есть у вас подход, что я попытаюсь пользоваться тем, что я сам придумал. Да, это, конечно, классно,
действительно это круто, это как бы там, то есть, это действительно дает вам возможность придумать
какие-то там более крутые задачи и вообще поднять себе ЧСВ там и все такое. Но минус будет, то если
вы будете слишком этим увлекаться и вообще не обсуждая никогда ни с кем, а как еще можно было
решить эту задачу, то как бы минус, но вот, то тогда в какой-то момент неожиданно выяснишь,
что просто выяснишь какие-то задачи вы умеете хорошо решать, какие-то плохо. Почему? Просто потому,
что те идеи, которые вы придумаете, они там либо не приводят к решениям, либо приводят к
эффективным решениям. Каким-то менее эффективным решением, чем есть у ваших соседей, которые просто
знают другие идеи. Ну или просто придумали другие идеи. Да, это на самом деле еще одна, да, то есть,
с этой точки зрения, кстати, да, почему вообще на разборы контестов ходить полезно, даже если вы
там все решили. Ну или хотя бы обсуждать. То есть, да, понятно, действительно, желания, конечно, тратить
на это время особо нет, то есть понятно, да, это фистеха, это осень, это ноябрь, это коронавирус,
не говоря уже о остальных там всех обстоятельствах, называется, нашей жизни, это да. Да, он еще
существует. Да, найдите его, да, в смысле лишнее, да, да, да, да, да, да, да, да, почему-то если кто-то,
да, по-моему, называется, да, один лысый чувак из Кирова, потому почему-то это предъявлял. Уберите
лишние из логического ряда. Грязь, мрак, там называется ужас, тверь. Угадайте, какой, по его мнению,
правильный ответ. Мрак, потому что он непостоянный. Неправильный. Он меняется. Нет, там все проще.
Там все было гораздо правильнее. Правильный ответ. Там нет ничего лишнего. Да, я не знаю,
чем лично этому мужику из Кирова не угодила тверь. Все слишком, слушай, слишком сложно. Слушай,
речь идет о энергетическом номере в КВН, вот не надо там слишком сложно мыслить. Конечно,
там наоборот, если у тебя шутка базируется на чем-то слишком сложном, то лучше ее не говорить,
потому что зал не поймет. Если ты хочешь сказать шутку из пяти слов из зала,
поэтому нужно прочитать лекцию о том, что значит каждое из этих пяти слов,
значит лучше шутку не говорить. Или как-то по-другому сдавать. По-разному. Так, ладно,
давайте я последнее расскажу, что я хотел рассказать, потом после этого можно и про юмор
поговорить уже. Там пока будем собираться. Просто я хотел сказать следующее, что как выясняется,
как минимум в спортивном программировании, да и вообще глобально, полезно помнить,
что площадь ищется и другим способом. Способ называется метод трапеции. Вместо того, чтобы
искать ее вот так, ее любят искать следующим образом. Давайте себе вообразим, что многоугольник
лежит выше оси Х. Тогда идея такая. Делаем примерно то же самое. Идем по многоугольнику и для
каждого ребра прибавляем к площади вот такую трапецию. Площадь такой трапеции, к чему она равна?
Она равна, очевидно, одна вторая на произведение вот этой разности по Х на полусумму икоков,
правда? Да, я два раза одну вторую сказал. То есть как бы мы суммируем игроки, берем разность
иксов и домножаем на двое и прибавляем. Но при этом важный момент. Разность иксов мы берем
прям тоже ориентированно. То есть если там этот икс, то есть мы берем вот этот икс,
минус этот икс. Чтобы когда мы идем вот в эту сторону, у нас был со знаком минус, а если в эту,
то со знаком плюс. И тогда можно абсолютно тем же самым способом убедиться, что это тоже площадь,
причем тоже ориентированная. Но типа того. Вот. Ну, то есть там получится разность иксов,
разность икоков, но там легко заметить, что если вы прибавите к многоугольнику ко всем игрокам
какую-то константу или вычтите, то как бы сумма не поменяется. Вот. Но там просто она не поменяется,
потому что она увеличится на c на сумму разности иксов, может на 2, а сумма разности иксов полноугольнику
очевидно слопнется в ноль. Вот. И это, ну вот. Но оказывается, да, то есть идея как бы то же самое,
но знаете, в какой-то момент неожиданно в лоше встретилась задача, в которой действительно этот
метод был очень полезен. Задача была такая. Значит, плоскость покрасили вот таким вот способом. То
есть провели все вертикальные прямые. Вертикальные прямые, там x равно чему-то целому. А полосы
между ними покрасили вот в шахматном порядке. Черный-белый, черный-белый и так далее. Так вот
задача. Дан многоугольник с целыми вершинами, найдите, пожалуйста, черную часть его площади.
Вот. То есть задача очень сложная, пока вы не вспоминаете метод трапеции. Потому что метод
трапеции решается абсолютно так же, только для трапеции нужно найти площадь черной трапеции,
а не черную часть площади трапеции, а не всю трапецию. Ну там, конечно, точки до 10 в 9,
поэтому вам там повозиться как-то там с какими-то арифметическими прогрессиями придется,
но как бы идея на задачу уже становится простой. Вот. То есть это вот действительно полезно. То есть
ну как всегда, да, что такое олипиады? Это когда просто посмотрели какие-то стандартные вещи под
неожиданным углом. По крайней мере, неожиданным для вас. Вот. Так что получается, площади
действительно ищутся так. Да, жалко. Жалко, что на этом придется остановиться. К сожалению,
улезло у нас сегодня занятие, но...
