вот курс введения пла тех ну тут есть содержание то о чем вы сегодня говорить
ну если коротко это некие азы которые позволят уже сегодняшнего дня вам что-то печатать
но сначала хочется немного поговорить ну чем мотивация вообще выбирать тех
перед другими аналогами ну тем же там вордом или там рукопистами записи ну вот
первых я нашел такой классный график что график того как зависит объем усилий от
сложности документа которым хочется подготовить видим некий скачок в начале
который как бы говорит о том что в тех не очень просто вкатиться нужно наверное иметь
хоть какой-то минимально оба спрограммирование чтобы понимать как устроенец и к разметке но
при этом когда лишь заходят каких-то больших проектах которых нужно настраивать какой-то
сложное форматирование или в которых много математики который ворд не очень поддерживает ну понятно что
у тех имеет огромное преимущество ну и наверное где-то примерно рядом с вордом проходит график
отвечающий рукописным записям который тоже понятно что может делать кто угодно но чем
больше становится объем работы тем сложнее наверное такую штуку вести в хорошем качестве
вот что еще можно сказать про лотех ну язык довольно старый ему лет 20 или 30 его начал
разрабатывать еще до 0 минут который наверное известен до сих пор язык живет развивается
дополняется кем-то расширениями но из-за этого возникают некие проблемы что на самом деле вот
кто-то может быть же пытался поставить себе техно компьютер какой-нибудь дистрибутив тех
лайва или там мегтех а и вы могли заметить то что он там довольно большое по объему выставят его
многим тем что как бы вот есть базовости таксист теха который не очень сложный и его ограниченное
количество на изучу много расширений которые решают какие-то задачи более простым путем какой-то
набор годы инкапсулирует уже в новой команды но насколько эти расширения делать уже разные люди
то ну в общем возникает много расширений которые решает похожие задачи которые друг другом
конфликтует более того возникает какой-то legacy код который вообще все еще работает но ему уже
не следовало бы какие-то решения он продвигает которые сейчас уже считается в общем не очень
правильными и которые могут возить проблемы в долгосрочном перспективе и поэтому когда начинаешь
гуглить что-то связанное с теком довольно легко потеряться скажем находишь какие-то посты на
форумах 2008 года который какой-то вообще не такой какой у тебя и тебе приходится под него
подстраиваться если ты не можешь найти другого решения но вот хочется сделать так чтобы вы знали
какие-то самые современные разумные подходы к тому как делать какие-то вещи в документах
наверное будем сразу приступать я заготовил сразу маленький документ в котором буду что-то
писать по мере того будем смотреть на новые примеры кода ну вот простейшее что можно было
написать на лотехе выглядит таким вот образом кто-нибудь кстати ну поставил себе ваш редактор и
может прямо сейчас пробовать у себя код
тишина видимо руки пока не дошли ну во всяком случае это будет происходить еще здесь а вот
вопрос по этому поводу крас можно да конечно вот есть же оверлиг да вроде бы называть да есть
ну а какой редактор оффлайн можно поставить то есть я большое полотно на эту тему выкатил в
нашем канале вот там под разной операционки какие бывают сетапы лотеха которые можно сделать там
есть тех студию есть в эскоде можно делать много вариантов потом почитайте что-нибудь наверняка
ну я думаю да такие вещи мы обсудим уже после спрятательной части да и что-то
меня это имеет такой вид уже здесь наверное можно начать проникаться тем как имеет какой
вид имеет инфы с лотеха но ведь примерно такой что вот здесь очень много команд которые
имеют вид бэкслэш и какое-то слово возможно потом какие-то параметры причем в разных видов
скобочек мы потом разберемся почему они разные ну и вот на языке этих команд протестировать
иметь такой вид я продублировал его здесь а что-то происходит срочка document класс это
неизбежно начало либо у тегмента лотехи поскольку ну она объявляет собственно формат файла которые
далее будет заполняться контентом здесь мы уточняем что это будет бумага формата 4 12 шрифт
его можно варьировать там 90 14 как выводно но это считается стандартным решением то же самое
бумага и понятно что 4 единицы формата это все гуглится какие там опции бывают но этих обычно
хватает article это мы дальше об этом поговорим в общем один из один из типов документов
который определяет какие виды заголовков у них есть распоряжение но это будет есть какой-то
очень большой документ там книга там хочется чтобы были там и главы и какие-то подглавы и разделы
ну мы об этом подробно поговорим пока можно не заморачиваться ну вот article и пусть и вот все
содержательное что происходит документе пишется в рамках окружения document ну про окружение мы тоже
будем говорить что это такое но пока это может быть некоторой мантрой что вот есть нечто
называемое документом и мы должны его открыть и беги нам закрыть вендом и все что происходит
оно происходит внутри этого окружения чем-то похоже как-то делается в html наверное сталкивался
что там есть тег body открывающий тег закрывающий и вот все что на сайте происходит он пишется
внутри этого тега та же самая история ну понятно что этого мало хочется писать какие-то более
сражательные вещи но начать хочется наверно с того чтобы у нас был русский язык распоряжение и
вот если мы попробуем прямо сейчас написать здесь вместо hello world привет мир и заделать
комплировать то нам скорее всего пожалуются ну видим некий большой набор жалоб но в целом
есть подозрение что это связано с кодировками да из-за того что написано какие-то вот такие
вещи но как это решается кодировки нужно прописать как прописываются кодировки написано прям здесь
это снова ну тоже пока некая мантра которую лучше запомнить потом обсудим почему это работает
именно так но вот нужно подключить пакеты команда use package пакеты label это пакет для
работы с языком в том плане что как контролировать переноса слов с одной строки на другую как
правильно форматировать текст ну то есть все вот такие правила которые для каждого языка
специфично они хранятся в этом пакете и его подключение с опцией русского языка позволит
теху работать с русским языком корректно так как мы от него это ожидаем вот и теперь пакеты фонтен
и input и ну и это encoding и отсюда понятно что они делают фонд это кодировка шрифта документа того
что происходит вот скажем тут на превью странички пока ничего не происходит потому что все поломалось
но это кодировка в которой пишется уже документ формате pdf вот input и это кодировка в которой мы
пишем сам текст ну и нам хочется чтобы у тех понимал русские буквы как следствие мы подключаем
utf и уникод и униколь русские буквы точно есть ну и я прям не глядя могу скопировать эти три
строчки это частая практика что некоторые вещи кода которые предваряют документ типа вот таких
построек кодировки на самом деле они в их один раз в жизни сделали и с тех пор вы просто
копируете из документа документ они работают слава богу не потому что они какие-то сложные
а скорее потому что там много тонкостей строчек 100 которые непонятно зачем будет перенабирать
каждый раз заново пока не ясно откуда тут за строчкам тут их всего 5 но по мере нашего
погружения в новый новый материал будет возникать новая вещь кто-то сюда хочется внести
ну как видим мы уже добились того чтобы у нас поддерживаются русские буквы ну здорово да и
что я хочу сказать поводу всего что происходило вот до begin document весь этот код который как-то
говорит там вот он какого формата у нас документ какой там у него размер всякие там поля колонт
титулы какой там язык какие кодировки и к ним свои команды которые потом будем разбирать все
этот побочная информация которая конечно к документу имеет отношение но при этом сама никак не
отражается в тексте вот это все называется преамбулы и вообще считается хорошим тоном ее
выносить в отдельный файл как это делается мы будем потом подробно говорить пока просто покажу
что вот есть команда input который мы вбиваем имя файлов которые мы хотим подключить пока вы не
созданы попробовать создать его поместить то что было в преамбуле сделать команду что будет
происходить на стадии компиляции то что было написано в файле преамбул просто заменит то
что было написано здесь в инпуте ну примерно как defined c++ если вы с этим сталкивались вот и
ну просто с кодом после замены будет работать компилятор и в общем будет тот же самый результат
ничего не изменится здесь наверное что что хотел сказать но презентация конечно потом будет
в общем доступе вы сможете ее почитать но да наверное прокомментирует также что такое
usepackage все-таки как я уже говорил лотех это штука которая работает с большим количеством людей
да вопрос к расчете презентации будет ли да будет для тех разобраться большим количеством людей
они делали разные расширения которые собираюсь пакеты и вот каждый пакет package он вырез
некоторые задачи решать там может какие-то команды добавлять которые какое-то форматирование
делают который у нас раньше не было или там задание кодировки может и столкнулись и вот все такие
вещи они по умолчанию ну чтобы документ не перегружать чтобы у компилятора было ну вы
наверно понимаете чем больше у компилятора команд нужно поддерживать тем будет сложнее устроена
компиляция тем будет там больше дерево разбора поэтому по умолчанию они все не подключен конечно
и чтобы мы указали чтоб конкретном документе мы хотим чтобы эти пакеты использовались мы пишем
мы будем постоянно встречать вот двигаемся дальше ну да хочется начать писать математическое
потому что наверное мы здесь заить у тех нужен для того чтобы писать какие-то формулы и есть два
режима набора форму как я в предметашке написал можно набирать формулы в рамках знаков доллара
можно набирать формулы ограниченные квадратными скобками но вот экранированными бэкслэшем в чем
разница то что набрано в рамках знаков одного доллара оно называется формулой внутри строки
и то есть если мы попробуем это тоже скопировать код прямо в основной документ то мы увидим что
вот это вот образовар равно 4 оно будет помещено прям таки саму строку с текстом не будет вынесено
никак отдельно будет иметь такой же размер шрифта ну и так далее если мы сделаем второй вариант
который предлагается сравнение оба ставлю в рамках одного документа то вот я утверждаю что он выйдет
новую строку будет отцентрирован и будет даже шрифт наверное побольше ну в общем наверное понятно
в чем принципиальная разница хочется наверное какие-то ключевые вещи которые должны быть на
виду у читателя выносить концентрированном виде в отдалении от всего можно будет настраивать
какие-то рамочки обводилась мы потом поговорим как такие вещи делать ну а вот такие промежуточные
выгодки которые нам не хотелось бы чтобы они лишний раз отсекали на себя внимание но в лучших
рамках самого текста помещать вот для этого есть 20 разных подходов если кто-то уже сталкивался с
техом то он наверное слышал что есть ну как будто бы третий вариант набора формул двойные доллары
они имеют на самом деле такой же эффект как эффект скобочек квадратных но это считается
тоже вторевшей практикой сейчас в общем новые фичи которые возникают уже не предполагает чтобы
это поддерживалась и лучше так не делать можете потом погуглить это там миллион есть вопросов
нас так оверфол почему лучше делать скобочки квадратные они доллары но локально пока мы делаем
что-то простое а для нас не будет но однако чтобы сразу привыкать к хорошему стилю будем делать так
пока не очень быстро все понятно хорошо ага ну далее как мы могли заметить у нас уже возникали
какие-то команды use package document class но вот у тех он весь построен на работе с командами команды
которые будем в тексте использовать признак правила регенерировать некий символ которого
у нас нет на клавиатуре но который при этом очень естественно было бы использовать если мы
пытаемся какую-то формулу набрать ну тут вот есть пример я наверное звучит аж не буду локопировать
просто перенаберу наверно чтобы подчеркнуть что это не так сложно как кажется на первый взгляд вот
мы хотим написать что-то такое что интеграл от минус конечности для бесконечности такой функции
интеграл басона известные вещи и предположим что я уже знаю какие-то команды теха и знаю как все
реализуется тогда мы действия довольно простые я говорю но значок интеграла это команда и начал
минус бесконечности но это минус и знак бесконечности это команда инфе то же самое с плюсом плюс и
команда инфе индексация верхняя нижняя вот таким вот символом мы это потом повторим пока можете
не заморачиваться далее что мы хотим но вот функцию экспоненты которые казали какой-то вот
минус квадрат пополам но это значит е степени степень это верхний индекс поэтому за комплекс
внутри дробь дробь команда фрэкшн тут минус минус x квадрате пополам а ну кстати dx раз мы говорим
про интеграл но это все равно чему корень из двух п корень от команды скорости 2 бит
команда пай и это должно скомплиироваться вот можно было даже не подсматривая просто глядя
что мы хотим сделать добиться такого результата некий набор команд можем смотреться генерировал
нам но по символе то что мы хотели мы хотели интеграл мы сделали команду и мы хотели
бесконечности мы сделали команду инфе ну и так далее мы потом подробно обсудим какие бывают
команды где их можно искать как их запоминать но общая идея вообще всего что будет происходить
далее примерно такая есть некий набор команд который мы учимся пользоваться и как только мы
руку набили мы делаем довольно быстро и при этом получается какой-то довольно красивый
результат в том шефорде наверное это было бы не так то реально сделать ну да тут есть
сразу ссылочка на сайт из презентации она ведет но можем посмотреть если есть желание сайт
detoxify он позволяет по нарисованной картинке определять какой символ в техе мог бы это быть
ну допустим я хочу символ изоморфизма равенство и она волнистая линия над ним я бы нарисую и
подожду что мне выдаст ну вот он нашел на символ конк который мне как раз таки хотелось и это
более-менее для всего верно когда вы знаете что вы конкретно хотите написать но не знаете
как реализовать можете пойти в google обязательно подскажут вот если речь именно об а символьном
наборе то символы можно искать здесь есть приложение которые прям таки печатный текст
прям целые формулы преобразуют в тех какой-то может быть нейронкой это тоже гуглица тоже
вещь хорошая может пригодится но мы сейчас не столько об этом секунду закрыть лишнее интересно
как это сделать ясно пресса презентации ну в общем-то мы ничего не пропустили вот есть
разные сайты и на них можно сказать разные симптомы вот теперь постараемся как-то по полотенце
или разложить то что происходило вот с этой вот формулой какие бывают разные так сказать
категории команд в техе для набора формул ну это может на первый взгляд казаться немножко
страшающий или может быть беремоска но по мере практики как-то они быстро запоминаются ну и
тем более что они все делают примерно ровно то что в них написано в этом плане их довольно
ну например до индексации вы наверняка слухивались таким что верхний индекс и
нижний индекс и выделяется нижним прочерком и зеркал флекс вот некие примеры кода как это
будет реализовано можете вчитаться и если есть вопрос это сказать что не так
вопрос немножко не поэтому там в начале прям были 12 секунды единиц размер шрифта да да все так
ну я его поменял он мне короче не поменялся а ты должен был заново скомплиировать файл а я
скомплиировал ставил 100 и оно ничего не произошло знаешь им дело ну не все размер шрифт которые мы
ожидаем поддерживать слоте там по умолчанию и штук 10 там 10 12 какие-то такие типичные может
быть 8 надо поискать какие-то рядом поддерживаются прям сейчас чтобы поддерживать другие нужны
отдельные пакеты если хочешь можешь их поискать честно сказать никогда никогда не
предназвался как менять размер шрифта не глобально во всем документе а там для конкретной строчки мы
довольно скоро поговорим поэтому ну не возникает в разумной ситуации нужды делать шрифт всего
документа сотом это очень много это пара букв на строчку и как раз с этим расчетом что это
обычно не возникает нужды это не поддерживается по умолчанию вот хотелось бы уточнить как записать
возведение в степени индексированного сверху какого-то элемента имеешь в виду если у нас в
степени еще степень ну фактически если у нас есть индексированный сверху до какой-то там x и
мы хотим показать что он взойдет степень а ну тут наверное простейший вариант такой лучше всего чтобы
тебя точно все поняли просто скобочки сделать что у нас есть x в степени n и даже не степени
этого я про индексированный индексом и и все это в степени так точно будет понятно в техе
насколько я знаю нет так сказать возможности делать прямо многоэтажные конструкции такого
вида но вроде результат разумный какой мы ожидали да благодарю хорошо а если сделать x в степени
n в степени n ну то что n в степени n было а ну такое возможно это запросто но для этого нам
потребуются фигурные скобочки я про это внимание раньше не обращал можем считать даже вот эти
вот команды индексации это вот нижний прочер церковь flex тоже ну как бы командами лотеха которые
принимают какие-то аргументы аргументы команд если они не односимбльные заворачиваются фигурные
скобки ну знаете как в плюсах если у нас там в цикле больше одной строки надо тоже это
заворачивать и у нас тут мы хотим чтобы у нас в индексе верхнем было аж какая-то конструкция
сложная степени n поэтому мы все то что будет в индексе заворачиваем фигурные скобки а тут уже
пишем n степени мы могли бы эту n тоже завернуть фигурные скобки но это бы не имело никакого
эффекта потому что всего один символ ну получено то что мы хотели полагаю
да да все понятно спасибо вот наверное поэтому слайда все что я хотел сказать что вот так есть
в яхте нижние индексы и если у нас много символов сразу хочется уместить этот индекс мы заворачиваем
скобочки теперь греческий алфавит как я уже говорил в лотехе все команды ну они делают более
менее то что в них написано если мы хотим греческую букву альфа маленькую мы пишем альфа со
страшной буквы хотим заглавную греческую букву гамма пишем гамма но уже заглавной буквы чтобы
буквы заглавных но как видим все работает дает какие-то греческие буквы вопрос на засыпку такой
почему команды альфа большое не поддерживается вот если я попробую набрать тут альфа большое ну
то есть альфа заглавной буквы мне скажут я не знаю такой команды есть идея
она выглядит также как уже имеющийся какой-то символ который можно набрать проще да все так
заглавная альфа это просто латинская буква а и было бы странно под латинской буквы а звать
отдельную команду мы так и можем набрать да спасибо ну и в общем более-менее также любые
спецсимволы которые нам нужны вызываются мы хотим квантер какой-нибудь существования мы пишем
экзис опять же очень естественно как называется то и делаем хотим квантер всеобщести пишем
порол и он даст нам нужен нам квантер вот опять же как только у нас возникает символ который
мы раньше писать не умели описать его хочется если он есть в техе мы можем найти его на сайте
детек сифа или там полистать какие-нибудь мануалы ну если его нет придется делать его самому это
посложнее мы сегодня не будем обсуждать но глобально будем может быть цачу занятия можем
учесть занятия тут наверное тоже все понятно и вот тут я сразу две темы поднимаю в следующем
слайде вот у нас встречалась формулке которая была для примера дробь вот хочу еще раз закрепить
работать команда фрэк но слово fraction дает нам дробь из числителей знаменателя его у нее два
аргумента повторюсь каждый аргумент команды заворачивается в фигурной скобке если он не
односимбльный то есть даже если он односимбльный тоже можно но по крайней мере не обязательно но
если символов несколько ваш в аргументах команды то точно заворачивайте здесь нас два
аргумента 4 знаменатель допустим мы хотим 15 26 это надо генерирует дробь в которой будет
здесь какой нам надо это тоже какой нам надо еще раз подчеркну если бы мы не использовали
фигурные скобки то было бы что-то странное но бы я во первых даже такая запись непонятно что
означает но как было тех кто распрасил он бы подумал ага у меня есть два аргумента по одному
символу потому что нет фигурных скобок это 1 и 5 я из них соберу дробь а дальше разбирать
сами потом 2 и 6 их просто печата вот и здесь есть такой примерчик в котором есть пример
применения фрака и фигурными скобками и без них ну то есть как видим у нас аргументы односимбльные
3 и 4 поэтому они преобразуются в дробь 3 четвертых как мы как мы бы хотели если на что-то более
сложная скажем у нас сложим числитель который аж сумма дробей то мы конечно заворачиваем и
получаем ожидаем результат вот понятно ли по этой строке что произошло
да понятно хорошо вот ну и стоит еще подчеркнуть тут он встретился впервые символа центральной
точке си дот ну понятно что он делает он делает точку по центру строки им можно
вражать умножение если это удобно может там еще какие-то операции может конкатонацию строк
что-нибудь такое но вот идея в том что он немножко отличается от других операторов которые у нас
раньше были продон не операторов других команд раньше у нас были команды вида там омега большое
генерила просто символ омега большое и все и дальше текст шел как обычно а команды другой
категории которые бинарные операции например как все дот они отличаются тем что они вокруг себя
еще генерят небольшие пробелечки чтобы отделить себя от двух оперантов этой операции то есть если
мы написали давайте какой-нибудь дурацкий пример допустим вот мы хотим там один exists ну это что-то
не осмысленное конечно но вот у нас есть два символа обычного языка и между ними символ
который пенерица команды нам просто клад и регист встала ровно между ними да сколько бы
пробелов я не поставил на тех их все сожмет до одного тоже примерно как в плюсах вы же знаете что
там тоже может стать сколько угодно пробелов или новых строк все равно не все схлопываются в один
пробел или в одну новую строку то же самое здесь вот как видим не возникают пробелов но если я
хочу их родить какой-то команды которая бинарная операция например команда times это команда
умножения крестиком ну типа times тоже в английском умножить как видим не просто тут стал крестик он
еще и пробел и проставил между собой и единицей нолем чтобы это выглядело красиво в техе почти
все про красоту мы это снова блюда тоже много есть разных гонорных операторов можно гуглить я
парочек примеров привел что вот есть умножение есть операторы сравнения g это greater or equal
делает опять же ровно то что написано конк это congruent или изоморфный там о плац это как бы
плюс завернутый и в о ну или в кружочек там знак прямой суммы если угодно ну и там similar
дает нам вот такое вот волнистую линию их масса самых разных они все легко гулятся но самые
основные их может быть штука 5 запоминаются буквально за пару документов практики ну и
следующий очень похожий тип команд это операторы вот бинарные операции ставили
пробелы и слева от себя и справа от себя оператор эту штуку принимающие только один аргумент ну
например там синус косинус какой-нибудь или оператор ранга в алгебре если вы скил сталкивались
или там размерности или там ядро или образ в общем это все операторы ну то есть это нечто
принимающая на вход один аргумент что-то него характерно перед аргументом хватит ставить
пробел чтобы отделить текст название оператора вот его аргумент вот для этого но в латехе есть
отдельная категория в команд который генериат символ и пробел после него называемый оператор
ну вот оператор синуса это то что мы видим здесь это опять же команда sin очень ожидаемая которая
в качестве аргумента принимает x и ставит разумного размера пробел между с минусом и x если
мы попытались набрать просто sin x ну в плане без команд без всего просто текстов то он подумал
что это все как бы однобуквенные переменные набрал бы другим шрифтом и вообще было бы некрасиво
и непонятно вот если мы захотели набрать скинуть даже другим шрифтом который нам подходит мы потом
поговорим как шрифты менять пока не очень важно если мы просто набрали у этим шрифтом дальше
поставили истон вы конечно все нам как надо отрисовал но пробел не поставил ну и тоже это как-то
не очень лицеприятно правильный подход это использовать команду sin и как видим что мы
хотели то и получить да они все операторы которые нам встретиться в жизни золотехи уже забиты
потому что как правило такие там многобуквенные сочетания не очень еще видны их легко создавать
самому вот я пару примеров накидал какие мне встречались на практике которые делал сам ну
я про это тоже поговорим попозже видимо в следующем занятии на самых таких ранних порах нам
не пригодится просто ну пусть будет понимание того что если чего-то нет это
можно создать вот их всегда просто не всегда очень просто но еще немножко о вид скобах пока что
нас была ситуация что вот мы пытались возвести индексированный икс еще какой-то степень ну
да скобки бывают разные их техи много во первых да это чтобы вас не путала скобки как бы
отделяющей среду разработки ну вернее среду текущей формулы что вот есть 1 кранированная
квадратная 2 кранированная квадратная на эти вы пока забейте вот а что происходит с держательного
у нас есть просто круглые скобки держащие дробь и пополам есть скобки которые добавляется
некоторые префиксы префиксы манифицирующие ее размер если скобкам тут дорисую префикс big
причем давайте к одной просто big в которой будет 2g смотрим что будет нам генерировался такое
странное выражение в котором каждая из скобок больше своего обычного размера но при этом левая
но не много больше правая прям сильно больше это из наших префиксов которые манифицируют
размер мы в разумной ситуации конечно лучше делать согласованными big тут big здесь тогда получится
какой-то ожидаемый результат но как видим здесь это был некий оверкил очень большие скобки такие
нам на практике конечно не нужны крайне для такого выражения чтобы сказать лотеху типа подстрой
размера скобок сам префикс используются такие используются к левой скобке префикс левт правой
скобки префикс райт что опять же довольно ожидаем тогда он сам поймет какого размера скобки
ему нужны чтобы это было наиболее благозвучно и такие поставит вот имеем такой результат здесь
пример такой тоже привезен у нас был скобка большая дробь и полом и вот он большой дробь
подобрал оптимальный размер скобок вот в такой ситуации как видим big просто слишком маленькие
big 2g слишком большие а вот левт-райт прям оптимально подобрали ну и в общем хорошая
практика является в любой ситуации левт-райт если у вас скобок что-то сложнее чем просто
односимильные переменные там какие-то может быть знаки суммы там может быть дроби и экспоненты
правило это увеличивает размер строки и приходится как скобки модифицировать значит будет некрасиво ну
что еще бывает бывает фигурные скобки бывают квадратные скобки бывают скобки округления вниз или
вверх соответственно округление вниз это floor как вы знаете английского языка поэтому команды
генерирует нужные символы а вверх это и сейл ну а слово силин сейчас я даже скажу вот сейл там
дробь а на б и пер сейл а как видим мы получили нужный символ но он опять плохого размера и
мы уже знаем как это решать может быть скажете ну да все так припишем рефиксы скажем теху разберись
с размерами символов он разберется сделает хорошо как мы хотели здорово тут наверное все что хотел
сказать ну разве что отмечу заметьте фигурные скобки тут не простые а экранированные тоже
бэкслэшами почему так но вы уже заметили что обычные фигурные скобки в лотеке имеют
значение аргумента команд то есть ну он их считает что вот мы пытаемся какую-то команду
сделать это какой-то аргумент скобках подон и чтобы не было синактическая противоречия нужно
такие спец символы которые имеют свое значение экранировать и бэкслэш я про это еще поговорю
отдельно но идей такая я прямо сейчас про это говорю как удобно вот есть всякие спец символы
которые мы уже встречали доллар ну это вы уже заметили окружение формулы внутри строки бэкслэш
ну это просто спец символ который команд все объявляют есть фигурные скобки а персанды мы
их пока не встречали как спец символа но еще встретим и то же самое с этими хэштегами нижнее
подчеркивание встречали как нижний индекс и процент это знак комментария в техе то что
начинается процента и до конца строки считается комментариям не комплинируется если мы хотим
написать то мы кронируем слешом и получаем опять что то что хотели ну почему у нас тут не
двойной бэкслэш бэкслэш и набранный текстом бэкслэш ну потому что было бы странно и кронировать
бэкслэш бэкслэш согласитесь и тем более что двойная бэкслэш имеет в техе свое уникальное
значение которое мы пока не встречали наверное сегодня не встретим но в общем мы про него
вот это более-менее все что касается касалось простого набора формул то есть на самом деле
то что он рассказал хватает чтобы какие-то такие штуки набирать ну или что-то что
встречается на вашей практике какие-то сложные техники у нас еще будут наверное будут только
на третьем занятии а вот сейчас хочется немного поговорить о том как собственно документы красиво
организовывать как форматировать текст у них в общем как делать презентабельные работы и
этом будет довольно много времени посвящено и начнем мы просто с этих там форматирование текста вот
ну первое естественное желание если вы допустим пишете большой конспект по курсу то наверное
хочется разбивать вон какие-то кусочки там как я уже говорил главы раздела подразделы ну вот
реализуется это техи командами section subsection subsection sub subsection это если мы
артикул я напомню вот мы прям были написали вот есть вот артикул поэтому у нас только в
распоряжении такие команды если бы написали бук то были бы что-то типа chapter или может
быть part ну в общем какие-то больше единицы текста которые тоже имеют свое название ну во всяком
случае тут нам такого точно хватает мне не для одного курса не пригождалось иметь больше
уровня вложенности поэтому всем рекомендую этим ограничиваться ну тут нет примера как
это будет выглядеть давайте скопирую код посмотрим не очень понятно собственно в чем
вообще результат но вот команда section и не рит таким заголовавшим шрифтом то но тот текст
который мы написали в качестве аргумента и при этом номирует его то есть секции все
номированные если я тут сделаю вторую секцию напишут скажем вторая секция то вот он добавит ее
снизу уже с номером 2 ну и тем же шрифтом что и первая секция подразделы поменьше и шрифты
там поменьше соответственно и номерация вложена в номерацию секции то есть все подразделы одной
секции имеют первое одно и то же первое число если мне хотим номерации мы делаем команду там
секшен или сапсекшен со звездой звезда говорит номерация нам сейчас не нужна для этого
раздела и более того номерация дальше не ломается то есть пусть у нас был ненумерованный раздел
дальше будет не один три а все-таки 1 2 потому что мы вот этот номерованный просто никак не
учитывали вот тогда немного поговорим про всякий стиль текста ну типичное наше желание текст
курсивный подчеркнутый все как всегда всех это тоже можно делать есть разные опции есть два
таких глобальных подхода которые друг друга отличаются подход командный и подход через
модификатора но командно это то что мы уже что мы уже умеем мы знаем что бывают команды
которые какие-то аргументы с этим аргументом что-то делают вот есть скажем команда текст текст
бф которая то что внутри него делать жирным вот я и напишу тут черный текст утверждаю что
тоже с комбилицией будет черным черистом написано ну кажется каким-то громоздким целых
шассимволов чтобы сделать но можно делать легче выделяем шлифт сделаем контрол б контрол
б сам генерит этот набор который нам нужен техи вообще много макросов мы можем даже делать
свои макросы под наши нужды но при этом мы тоже будем позже говорить ну не сегодня нам пригодится
ну даже история с курсивом есть у нас текст и то слово италик курсивный текст
ну как мы ожидали получили классивный текст а если мы хотим сделать чтобы было
другое и наши действия будут но ежедневно и курсивный просто рядом их поставить ну практически
так вот прям так все-таки наверное не сработает не хочу рисковать но сработает точно вот так то
есть все что является аргументом текст бф будет черным а его аргументом является уже курсивный
то есть как бы друг на друга не просто ложится это довольно громоздка что сникает два уровня
вложенности фигурных скобок это не очень красиво для такой ситуации второй подход который
модификаторных как это работает на самом деле каждый пара фигурных скобок задает некую область
видимости внутри этой области работают какие-то модификаторы стиля возможно если мы их напишем
и по окончании этой области по выходе из него все эти модификаторы убираются но точно так же
как скопы программирование плюсов питание то же самое все вот тут будет какой-то текст мы
можем навесить внутри этого блока видимости сколько угодно модификаторов но проблема в том
что модификатор это не команды они имеют немножко другое написание чтобы друг друга отличать то
есть уже не так с бэйфа бэйф сериус не знаю для него макроса но не очень сложно написание
дальше италья пишется вот так и шейп ну и если хотим можем еще сделать большой шрифт я про это
потом буду говорить но вот есть модификатор large который делает шрифт большим или даже очень большим
вот долго комплиировал но сгенерировал то что мы хотели он все три модификатора сложил
вместе и до конца области видимости их применял текст у нас и большой и курсивный и жирный а тут
обычный текст может мы вышли из области видимости и модификаторы убить больше не работают вот здесь
наверное все что сказать да вот типичные полезные модификаторы во первых модификаторы размера
можете посмотреть какой это имеет эффект у них к сожалению нет аналога через команды размеры
представляется только модификаторами поэтому если вы хотите ставить размер какого-то блока текста
то либо блок заворачивайте скобки чтобы не повлиять на весь документ либо по окончании блока
пишите снова тот размер который был изначально чтобы ничего не испортить ну то есть был large
прописали текст который должен быть large допустим хочется чтобы дальше его не было пишите
обратно команду normal size давайте отрезюми какие бывают команды бывает huge бывает large
капсу бывает large просто заглавный бывает large бывает какой normal size small ну и так далее я
поставлю точки до команды dot с команды точек ну и в общем это будут разные размеры шрифта
построенные уже на основе текущего основного размера основной размер у нас там был двенадцатый
когда допустим но смола то десятый 16 ну и так далее там примерно какие-то вот такие почеты
производится это всегда работает ну и заметим так как только команда huge модификатор сменилась
команды large ну следующий аж к столу меньше потому что модификатор один того же типа перекрывает
другой все модификаторы размера это модификатор одного типа может быть не больше одного одновременно
и еще модификатор шрифта и ну шрифты к счастью можно менять еще и командами вот мы встречали как-то
раз когда мы там синус обрабатывали разные подходы к написанию синуса вот там был модификатор
шрифта навешан на один подходов к синусу но это вот так делается если шрифт завернуть
такую команду то он будет написать немножко по-другому тут за засечками тут без засечек тут
вообще какой-то странный а тут так сказать капитальный вариант но это когда у нас строчные
буквы по размеру как заглавный но маленький гоня в 2 3 размера что-то вот такое в целом
довольно редкая вещь мне никогда не пригождалась на практике но она существует этим можно
пользоваться вернее такие штуки нужны когда мы набираем формулы некоторые название требует
конкретного шрифта скажем название задачи сложности вычисления принта писать шрифтом
вот этим вот текст сф или скажем от ожидания дисперсию значки принято писать шейстом текст
сф а например ну оператор принадлежит писать шрифтом вот этим вот рм но в общем есть разные
вариации мы с этим еще оттолкнемся успеем поговорить но вообще это все гуглится шрифта
удовольствия много они все есть в интернете ну и последнее что хочется сегодня рассказать
такая техника окружение вот мы говорили по всяким модификаторе стиля его добыть нам хочется ну
много разных команд которые как то стилизуют текст завернуть воедино вот допустим мы хотим
далее одной командой всегда делать так чтобы рамка блока был и шириной и курсивной и большой
текст и мы не хотим писать каждый раз это заново для этого есть окружение окружение такая штука
которая прямо были объявляется мы сегодня не будем делать свои окружение не будем сами писать
но в общем можно тут что-то написать в преампле как-то объявить каким-то названием назвать
допустим my environment и с тех пор когда мы хотим модифицировать какой-то текст по стилю мы
пишем begin my environment ну и там тоже самое и конечно у меня так жалуются потому что я такой
следы не объявлял он его не знает но вот если бы была какая-то среда которая существует
внутри нее бы просто все модификаторы стили которые нужны применились сами и на этом все
закончились чтобы примеры хоть какие-то были есть уже строенные среды например среда центр делает
вы можете наверное угадать что она центрирует текст который написан здесь то есть текст по
умолчанию у нас по ширине выравнивается а вот центр среда она говорит выравнивают по центру
или например окружение флажрайт оно делает текст выровненный право наверное так это пишется
тоже ожидаемо флажрайт он то и делает текст упирается правую сторону строки ну кстати мы
еще можем заметить что у нас довольно странные поля какие-то большие и строка довольно короткая
мы с этим сегодня бороться не будем пока мы смиримся с форматированием по умолчанию
этой страницы это будет на следующем занятии но просто чтобы не перегружать сегодня вот так
есть окружение и вот важный подвид окружений это окружение называемый теоремами что они
делают вот часто вы встречали каких-то учебниках там выражение вид теорема там 5 выполним тот и тот
вот вот ну чтобы не писать каждый раз теорема и еще и вспоминать какого он должен быть номера
люди придумали окружение и теорем чтобы они работали нужно использовать пакет а и мс от слова
американская мессиатрица сайти у амс общедованы много пакетов для тех они как правило все
полезные потом про это поговорим ну вот есть такой пакет который отвечает за теорема вот мы
этот пакет подключим какую теорема объявим вот такую пока не очень важно что есть символы
значит мы об этом будем подробно говорить завтра ну завтра через неделю но в общем можно сказать что
вот мы хотим теорема такого стиля плейм и хотим чтобы она называлась теорема и с тех пор если мы
будем говорить бегин феерам что-то писать будет что-то элементарное то вот это теорема она будет
произварена текстом теорема номер такой-то жирным шрифтом все как полагается тут допустим 5
посмотрим что будет но все работает нам за нас написали слово теорема оставили правильный
номер все как у людей можно делать не номерованные теорема то есть как всегда вот у нас было с
экшен звездочка без звездочки номерованная неномерованная то что мы здесь звездочка
делает теорема неномерованная но хочу предостеречь звездочка лотихия много значений
имеет вот в этом случае звездочка означает нашему номерации отключили а есть команда у
которой звездочка имеет какой-то другой модификации поведения но всегда идея в том что звездочка
говорит что как бы эта команда имеет немножко другую логику не как оригинал вот в нашем случае
номерацию убирает если мы хотим другое название ради бога можно назвать это ляма ну то есть будет
вырисовать текст ляма а можно даже переименовать назвать его ляма что довольно естественно
если мы так написали вот так поменять значение сработает до основу все то что мы ожидали вот
примерно такой инструмент очень нужный встречается постоянно если вы пишите это конспекта
ну конечно хочется больше власти на теку какого стиля будет то что написано внутри мы поговорим
о том как делать свои теоремы но там попозже это довольно просто но опять сегодня перегружать на
самом деле на сегодня как бы основной материал уже почти закончился я сейчас некие замечания
приведу которые могут помочь первых да есть пакеты которые вы подключили раз в жизни и забыли
например пакеты от амс они просто дают нам какие-то новые символы математические какие-то новые
шрифты теоремки в общем одни плюсы нам это будет всегда пригождаться поэтому можно вообще не
глядя в любую преамбула копировать строки вот эту use package все подряд что бы написано у нас
преамбула будет разрастаться до больших размеров я забыл что я ляма уже ударил из преамбулы и он
не понимает что я хочу вот будут пакеты которые постоянно прикажется мы не будем
убирать в целом это нормальная практика что у вас есть там 1 2 преамбулы на всю жизнь и вы
просто их переиспользуете из раза в раз может быть как-то дополняя под конкретный случай что
еще хочется сказать вот такое типографское замечание вот их и много разных тираж есть
тиражки длинные которые выражаются тремя дефисами но при этом есть просто тиражка длинная а есть
тиражка длинная с кавычкой спереди это такая российская тиражка чтобы отделять подержащий
отсказуемого у них там немножко другие правила как таять пробелы это конечно совсем ерунда но
я как-то привык что для чешуя сказуемо отделяются тиражкой с кавычками а другой ситуации тиражка
вот такая есть тире покороче оно нужно вроде как только личных промежутков не знаю больше мест
применения но есть обычный дефис чтобы слова друг друга отделять ну и понятно что нужно
путать это с минусом который режим математическом там вообще свои правила немножко свой мир
про формулы всякие разные сложные техники через два занятия наверное и через занятия но во всяком
случае минус который в долларах это уже минус математически но то есть даже среда открытая
математическая всего на один символ она уж на это символ точно влияет давайте сравним тут
напишем минус а просто минуса в рамках окружения математического ну легко видеть что это
прям сильно разные начертания да вот и поэтому везде где встречается какие-то переменные это числа
это знаки вот всегда это задарачивайте в доллара даже если это один символ потому что это будет
по-другому написано будет куда приятнее но потому что будет выделяться из остального текста что
еще тут я написал да про точки я сказал что вместо многоточия лучше ставить команду dots
который стоит правильная типографская многоточие есть разные вариации которые математически мы про
них позже будем говорить ну и вот есть тоже встроенные кавычки чтобы не писать кавычки которые
по умолчанию есть есть лапки они ставится как два знака больше два знака меньше но на печати
преобразуются уже в красивые кавычки какое-то название давайте посмотрим на них вот ну да
наверное это все что сегодня рассказать есть какие-то вопросы после них наверное поговорим там про
то что будет дальше на курсе происходить и на этом закончим но вопрос насчет модификаторов и команд
то что там шрифт текста стиль когда лучше использовать модификатор это команда ну я бы так
сказал когда у тебя нужно сразу много разных модификаторов на весь вернее много разных
эффектов тексту применить наверное тебе не хочется что у тебя было много слоев фигурных
скобочек поэтому ты делаешь один блок и тут напишешь один блок внутри напишешь всем нужные
те модификаторы какие-то там потом будешь набирать весь текст если у тебя какой-то нужно одно
применить что-то допустим жирный шрифт как часто бывает тут набираешь текст и наверное тебе
хочется не париться блоками сделать просто вот это ну то есть они раньше никакой не имеют что
то что то это применение к некоторому блоку текста некоторого эффекта но лично мне кажется что как-то
приятнее глазу когда один модификатор пишется вот так а много модификаторов пишется через
модификатор спасибо
