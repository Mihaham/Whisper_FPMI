У нас остаются непростые лекции по геометрии. Сегодня диаграмма Баранова.
Сразу насчет имени. У чувака была фамилия Вараной. Родительная поддержка Баранова.
И пожалуйста не ставьте удаление по-другому. Задача. Представьте себе, что у вас на плоскости есть
вен почтовых отделений. В каких-то конкретных точках. И не знаю, город это вся плоскость. На
плоскости живут жители. Вам нужно для каждого жителя, то есть по сути для каждой точки плоскости,
найти самое ближайшее почтовое отделение из вот этих вот n уже построенных. То есть n точек
у нас уже даны. Нужно разбить по сути всю плоскость по признаку того, какой из почтовых
отделений ближайшее. Ну, будет какая-то такая картинка. Не очень аккуратно рисую, но что-то
такое будет. Да, вот здесь в этом четырехугольнике ближайшее почтовое отделение вот это, в этом,
ну, таком вот бесконечном многугольнике вот это, здесь вот это, здесь вот это, здесь вот это. Вот,
ну и такую задачу мы будем сегодня решать. Есть n конкретных фиксированных точек, надо разбить
плоскость на, соответственно, n областей по признаку того, какая из исходных точек ближайшая.
Значит, вот это называется post office problem. Ну, соответственно, задача про почтовое
отделение. Давайте кратенько напишем n почтовых отделений. Значит, я сегодня их буду называть
сайтами, n сайтов. Ну, это, собственно, от английского site, которое, ну, вот типа локация какая-то,
точка, место. Потому что у нас так вот много всяких точек. Я пока задачу формулировал сам уже
десять раз, сказал слово точка. Вот, чтобы отличать обычные точки плоскости от почтовых отделений,
я буду почтовое отделение называть сайтами. Вот это вот сайты, а все остальное просто точки плоскости,
просто точки. Вот, ну и, соответственно, n почтовых отделений. Давайте сразу определение. Пусть
P множество сайтов конечное. Тогда вывод P i t это, собственно, множество точек,
которые ближе всего находятся к i t, к этому сайту, чем ко всем остальным. Множество таких x,
да, что, ну, напишу dist от x до P i не больше, чем dist от x до всех остальных. Все такие точки,
которые к i t, у сайтов ближе, чем ко всем остальным, то есть distance не больше,
чем до всех остальных. Вот, эта штука будет называться ящикой диаграммы Воронова.
Но, соответственно, сама диаграмма – это просто совокупность всех этих ячеек. То есть диаграмма
Воронова – это описание множества сайтов плюс всех ячеек. Буду обозначать вор от P,
ну так, напишу, совокупность P всех ячеек. Пока понятно? Хорошо. Ну вот,
значит, задача будет их построить. Ну, кто-нибудь может предложить алгоритм какой-нибудь сразу,
вроде даже на семинаре было, да. Да-да-да, давайте просто для каждой точки поймем,
что вот это множество – это множество пересечений полуплоскостей, да, потому что каждое такое не
равнится за эту полуплоскость. Их будет n на нас одна штука в каждой ячейке. Пересекаем их
алгоритмом с прошлой лекции за n log n. Получается, что каждая ячейка у нас строится за n log n. Всего
ячейка n, поэтому алгоритм за n log n. Значит, каждая ячейка V от P – это пересечение n-1 полуплоскости.
Потому что, повторюсь, вот это вот неравенство задает полуплоскость. Если у вас фиксированы
два сайта P и Pg, то множество точек плоскости удовлетворяющих от такого неравенства – это,
одна из двух полуплоскостей, получается, после проведения середины перпендикуляра к точкам P и Pg.
Если я рисую P и Pg, рисую отрезок между ними, рисую к нему середину перпендикуляр, то вот это
вот все – это точки ближе к Pg, чем к Pg. Ну и наоборот, это все – точки ближе к Pg, чем Pg.
Соответственно, я рисую для конкретного сайта все вот эти вот полуплоскости n-1 штуку,
пересекаю за n log n, получаю вот такой алгоритм. Хорошо. Ну какие можно отсюда сделать выводы?
Как минимум, что каждая ячейка диаграммы Воронова – это обобщенный выпуклогоугольник.
Мы в прошлый раз описывали, как они все могут выглядеть. То есть это либо обычный выпуклогоугольник,
либо какая-нибудь вот такая вот бесконечная чашечка, либо там полоса, либо отрезок. Такого
уже не будет. Ну короче, в любом случае это всегда какой-то обобщенный выпуклогоугольник.
Каждая ячейка – обобщенный выпуклогоугольник.
Так, утверждение. Сейчас давайте попытаемся понять, какой у нас будет размер диаграммы.
Вот смотрите, диаграмму я тут нарисовал на конкретном примере. Как она устроена? Значит,
здесь есть какие-то многоугольники, у них соответственно есть вершины, давайте их выделю
тоже точечками. Есть вершины, есть ребра, то есть отрезки между вершинами, есть еще такие
бесконечные лучи. Вот я утверждаю, что их будет всегда линейное количество. Утверждение,
значит, пусть по этому множество сайтов. Тогда, во-первых, если они все лежат на одной прямой,
то диаграмма Воронова состоит из N-1 параллельной прямой и не содержит вершин.
Из N-1 параллельной прямой. Ну, не содержит вершин, не буду писать ленин. А во-вторых,
иначе, значит, в противном случае число вершин в диаграмме Воронова не больше чем 2N-5,
ребер не больше чем 3N-6. Где под ребром, я понимаю, либо, ну, короче, под ребром,
я понимаю, в сторону многоугольника. То есть это либо отрезок конечный, либо бесконечный луч.
Так, сори, я поторопился, извините. Это пока я не буду готов доказать. Я сначала докажу,
что в противном случае все ребра это либо отрезки, либо лучи. Вот так. То есть у меня нет ребер прямых.
Вот. И уже отсюда мы докажем вот это вот утверждение про линейность размера. Вот.
Причем еще диаграмма связана, нам еще нужно будет. Причем диаграмма связана. Так. Значит,
еще раз. Но это выраженный случай. Если все на одной прямой, то понятно. Давайте сразу
напишем, как выглядит картиночка и как выглядит диаграмма. Вот они все на одной прямой лежат.
Вот. Ну, тогда понятно, что диаграмма состоит просто из вот этих вот середины
перпендигуляров между соседями. Вот что-то такое. Соответственно, вот это, это ячейка
этого сайта, вот ячейка следующего сайта, вот ячейка следующего сайта, ну и так далее.
N-0-1 параллельно прямая, вершин нет. Собственно, это полное описание все диаграммы Воронова.
Почему это корректно? Ну, потому что если я для каждого конкретного сайта рассмотрю все
полуплоскости, которые я пересекаю, то они все будут параллельны, да, потому что все на одной
прямой, значит серпер, ну, в общем, на, на, все серперы будут параллельны. Значит, я пересекаю
полуплоскости, которые параллельны, прямые, которых параллельны. Значит, это просто какое-то
ограничение слева-справа. Вот это самое точное ограничение слева, это самое точное ограничение
справа. Поэтому первый случай стревиален. Вот. А во втором, когда это неверно и, соответственно,
есть неколинярные точки, то я утверждаю, что у меня не будет вот таких вот прямых,
у меня могут быть максимум лучи в качестве ребер, и она более того будет связана.
Ну, можно считать как граф, да, то есть, если я скажу, что у меня есть, что вершины это точки,
короче, вершины многоугольников, ребро проводится между вершинами, короче,
между соседними вершинами многоугольника, и тогда вот эта картинка, ну, и, соответственно,
есть еще вот такие ребра, которые как бы к какой-то вершине подвешены и там, ну,
словно на бесконечность уходят. Вот такой граф будет связан, связан. Да. Да, да. Главное,
чтобы было хотя бы три, не лежащие на одной. Итак, второй пункт.
Надо доказать, что не бывает прямых, которые становятся ребрами. Ну, пусть есть.
Пусть какое-то ребро это целое прямое. От противного идем. Мы знаем, откуда у нас берутся
ребра от того, что мы пересекаем полуплоскости. То есть, мы взяли какую-то ячейку для Гарма Воронова,
рассмотрели одну из полуплоскостей ее задающих, и она целиком вошла в границу ячейки, да, то есть,
мы ее как бы ни с кем не пересекли. То есть, вот была какая-то, был какой-то сайт ПИ, был другой
сайт ПЖ, мы провели середину, предпределяли к этому отрезку, и вот эта прямая целиком входит в
нашу диаграмму, да, то есть, она, скажем, является границей этой ячейки диаграммы. Вот, окей. Ну,
раз так, то раз не все сайты на одной прямой, то есть какой-то еще третий сайт, не лежащий
на прямой ПИ ПЖ. Вот давайте я его где-нибудь здесь нарисую. Да, раз не все лежат на одной прямой,
то пусть ПК не лежит на прямой ПИ ПЖ. Так, ну тогда давайте, например, посмотрим на ячейку
диаграммы Воронова, вывод ПЖ, вот на эту ячейку, для этой вершинки. Поскольку здесь есть еще сайт ПК,
то значит, в частности, мы должны были пересечь вот такую вот полуплоскость. Но, понятно дело,
что этот середина предпределлярка ПЖ ПК и этот середина предпределлярка ПИ ПЖ, они не параллельны,
потому что прямые, к которым мы строили серперы, были не параллельны, да, поскольку это не одна
прямая. Значит, вот эти две длинные прямые, два середины, где-то пересекутся, где-то пересекутся,
вот. Ну, тогда не может быть такого, что вся вот эта прямая целиком входит у нас в, ну, является
границей какой-то ячейки диаграммы Воронова, потому что давайте рассмотрим все эти точки на
предмет близости к ПК. Понятно, что какая-то часть, то есть, соответственно, после пересечения у меня
образовалось два луча вниз и вверх, на одном луче точка ПЖ ближе, чем ПК, на другом луче, наоборот,
ПК ближе, чем ПЖ. Поэтому вот эти вот все точки, они точно не могут лежать в житой ячейке диаграммы
Воронова, просто потому что для них ПК строго ближе, чем ПЖ. Не могут лежать в житой ячейке
диаграмм Воронова. Но мы предположили, что они все, что у нас есть вот такое ребро, но раз оно есть,
то есть оно как бы никем другим не пересекается, оно является границей, разделяющей двух ячей
диаграмм Воронова, ПИ и ПЖ. То есть мы предположили, что они на границе, но показали, что даже не могут
лежать просто в ячейке. Противоречие. Вот как так. То есть все, получается, что прямых не
бывает, и ребрами могут наступать только либо конечный отрезок, либо лучи.
Значит, ребра, отрезки или лучи. В частности, это означает, что граница любой конкретной ячейки
связана. Потому что когда мы пересекаем полуплоскости, единственный случай, когда у нас появляется
несвязанная граница, это вот эта полоса. Все остальные случаи, мы рисовали на прошлой лекции,
там будет связанная граница. Потому что есть как минимум две прямые, находящиеся по углу меньше 180,
значит они точно пересекутся, уже будет некий угол, ну а дальше вы будете просто от него что-то отсекать.
Поэтому вот это не недопустимый случай, может быть такое или такое. Значит, граница связана.
Тогда граница каждой конкретной ячейки В от ПИ, каждый ячейки В от ПИ связана.
А нам надо доказать еще, что вообще весь граф связан. То есть, что не просто граница каждой
конкретной ячейки связана, но и между разными ячейками тоже можно пройти каким-то путем.
Давайте что-нибудь нарисуем. Так, что-нибудь простое давайте, долго не рисовать.
Вот, значит рассмотрим такой пример, вот сайты жирным выделю. Мы знаем, что у каждой конкретной
ячейки граница связана. Вот у нас пять ячей, для каждой ячейки граница связана. Теперь я хочу
показать, что между точками границ разных ячеек тоже есть некий путь по границам, то есть по вот
этим вот ребрам. Ну давайте я где-нибудь начну. Сейчас, не очень интересный пример получился.
Ну ладно, бог с ним, где-нибудь закончу. Я хочу показать, что у меня этот граф связан, то есть
есть путь по границе, по ребрам между какими-то двумя произвольными точками. Для этого давайте
я проведу такой отрезок и посмотрю, что на нем происходит. Значит, на нем мы сначала находимся
внутри какой-то одной ячейки, потом переходим в другую, потом переходим в третью и так далее.
Ну и, смотрите, поскольку у нас внутри каждой ячейки граница связана, значит путь от первой
точки до второй я точно могу совершить путем хождения по границе первой ячейки. Дальше я перемещаюсь
во вторую ячейку, но я знаю, что у нее граница тоже связана. При этом мне нужно от одной точки границы
следующей вот этой ячейки добраться до другой точки границы. Ну вот есть еще какое-то такое
продолжение пути и так далее. То есть на этом отрезке у меня как-то меняются номера ячеек,
в каждой ячейке есть путь по границе от первой точки до второй, я могу пройти. Потом во второй
также прохожу, в третьей и так далее, пока не веду до конечной точки. Значит, граф связан.
Так, что-нибудь надо написать. Проводим отрезок
между точками на границах. Он пересекает некоторые ячейки.
Внутри каждой из них есть путь. Внутри каждой есть путь, ну значит все эти пути
можно склеить в один длинный путь из начала в конец. Все, значит у нас картинка связанная получается.
Дальше. Зачем это нам нужно было? Значит, главный результат, что у нас размер линейный,
что вершины ребер линейное количество. А знаете ли вы что-нибудь, какой-нибудь результат для
графов на плоскости, который требует связанности? Да, формула Эйлера. Значит у нас
получается связанный граф, мы для него можем бахнуть формулу Эйлера. Она говорит, что давайте
я прям так словами напишу, что число вершин минус число ребер плюс число грани. В планарно связанном
графе это двойка. Коль скоро он связан, но мы связанность уже доказали, не буду прописывать.
Можно применить, потому что граф связан. Вот, но здесь небольшая загвоздка есть в том, что это как
бы не совсем граф, потому что я сказал, здесь есть какие-то вот такие ребра бесконечные, которые
как бы к какой-то вершине привязаны и уходят на бесконечность. А давайте сделаем нормальным графом.
Следующим образом, значит давайте мы введем какой-нибудь достаточно большой bounding box,
такой, что он будет пересекать только вот эти бесконечные лучи. Вот давайте у нас там была какая-то
картинка, сейчас совсем от балду что-нибудь нарисуют. Была такая картинка, были конечные
нагугольники, были бесконечные лучи, уходящие куда-то там. Вот, давайте нарисуем bounding box,
который пересекает, который настолько большой, что пересекает только бесконечные лучи. То есть,
что вся вот эта вот ограниченная часть находится внутри. Что-нибудь вот такое я нарисую. Так,
значит теперь на этом конечном куске плоскости у нас уже получился нормальный граф. Нормальный
конечно связанный граф. Вот, что я сделаю для удобства? Значит давайте я вне этого bounding
box введу новую вершинку, назову ее WSNX бесконечность. Давайте WSNX бесконечность.
Вот, и понятно, что я могу соединить все вот эти вот точки пересечения лучей с bounding box с
точкой P бесконечность без самопересечения, чтобы остался планарный граф. То есть,
я могу дорисовать картинку как-то вот так. Значит, я не буду строго доказывать это вершение,
но его можно понять следующим образом. То есть, что у вас есть? У вас есть прямоугольник,
точка вне него. Я утверждаю, что можно нарисовать вот такие вот кривые, которые будут не
пересекаться и вести от любой точки границы прямоугольника к внешней вершине. Ну, вроде
понятно. То есть, мы для вот этих точек можем просто проводить вот такие вот отрезки,
которые точно не будут ни с кем не пересекаться. Здесь можно задать какой-нибудь конкретный
формулам дуги-параболы, и вот эти вот все будут типа концентрические и не пересекаться ни с чем
предыдущим. То же самое можно сделать здесь, написать какое-то явное уравнение, такое,
что все вот эти вот дуги будут не пересекаться. Ну, и здесь какой-нибудь тоже замкнуть, не знаю,
как угодно. Понятно, что такое непрерывное отображение из точки в вот такую кривую,
что они все не пересекаются. Понятно, что такое есть. Не буду явно это выписывать. По картинке понятно,
что так можно рисовать. Вот. Ну и все. Тогда, значит, давайте анализировать этот граф.
Сколько в нем чего? Значит, вершин в нем n плюс 2, вершин в нем, sorry, n плюс 1, глупо сказать,
n плюс 1, нет, v плюс 1. Где v это число вершин в исходном графе? То есть v это вот точки
пересечения, ну, точки вершины многоугольника. Вот это вот v. Плюс 1, потому что добавляется еще
одна вот такая штука внешняя. Значит, дальше ребер. Ну, число ребер вроде бы не поменялось,
то есть у вот этого графа с дополнительной вершинкой число ребер не поменялось просто потому,
что мы все лучи продлили в какую-то нормальную точку конечную, поэтому число ребер такое же,
как было изначально. То есть ребер просто e. Столько же, сколько было. Вот. А грани,
я утверждаю, что будет ровно n, ну, потому что каждая грань, по сути, задается каким-то сайтом. То
есть у нас сейчас есть разбиение плоскости на какие-то грани. Внутри каждой грани будет ровно
один сайт. На, например, вот здесь вот это какой-то сайт. То есть, по сути, если бы я рассматривал вот
эту картинку, то у меня здесь было бы в том числе n граней. Вот в этом баундинг-боксе у меня было бы
n граней по одной на каждый сайт. Ну, и теперь я просто их там соединяю. Получается еще одна
такая бесконечная внешняя для одного из сайтов вот этого. Вот. А все остальные будут ограниченными,
ну и бог с ними. Грани все равно n. Вот. Ну все. Значит у нас получается, что v плюс 1 минус e плюс n это
двойка. Так, ну еще я утверждаю, видимо, что 2e больше или равно 3 на v плюс 1. То есть в этом графе,
который я построил, 2 умножить на e больше или равно чем 3 умножить на число вершин. Почему
тоже стандартное утверждение для полноценных графов, что если у вас там все грани хотя бы
треугольные, то вот это верно. Да, ну, значит, почему это так? Давайте поймем, что вот это вот
с одной стороны сумма степеней всех вершин. Сумма степеней всех вершин. 2e это всегда сумма степеней
всех вершин. С другой стороны, я утверждаю, что степень любой вершины это хотя бы тройка вот в
этом новом графе. Значит, с другой стороны, степень каждой вершины хотя бы 3. Следовательно,
сумма всех степеней это хотя бы 3 на v плюс 1. Сумма степеней хотя бы 3 на v плюс 1. Ну и отсюда
получается вот это вот неравенство. Значит, вопрос, почему это верно? Почему степень каждой вершины
хотя бы 3? Опять какая-то неприятная геометрия. Давайте посмотрим на вершины многоугольников,
на нормальные вершины. Почему из них выходит хотя бы 3 ребра? То есть, смотрите, у нас есть точка,
из нее что-то выходит, при этом она является вершиной, значит, она является стыком каких-то
вершин, сори, она является стыком нескольких многоугольников. То есть, она является угловой
вершиной в нескольких многоугольниках, при этом вот эти вот углы всех этих многоугольников,
да, они образуют угол 360 градусов. Но поскольку многоугольники выпуклые, то в них все углы
строго меньше, чем 180 градусов, значит, каждый из них меньше, чем 180. Поэтому чтобы набрать 360,
их должно быть хотя бы 3. То есть, если вот здесь вот все меньше, чем π из-за выпуклости, значит,
тогда суммарно их надо хотя бы 3 штуки, чтобы набрать 2π. Вот, значит, для этих вершин понятно,
что степень хотя бы тройка просто потому, что они являются вершинами многоугольников,
при которых углы меньше, чем 180. Дальше. Почему вот здесь степень хотя бы 3 так? Почему здесь степень
хотя бы 3? Ну пусть не так. Пусть здесь степень меньше, чем 3, то есть там два или меньше. Что
вообще, чему равна степень этой штуки? Степень этой вершинки — это просто число вот этих
бесконечных лучей, уходящих куда-то там за bounding box в нашем исходном графе. Значит,
мне нужно показать, что лучей, уходящих на бесконечность в нашей картинке, всегда хотя бы 3.
Почему это так? Ну давайте нарисуем, попробуем понять, может ли быть там их два. Вот был наш
bounding box, из него выходило всего два луча. Давайте вот так нарисуем. Из него исходило всего два луча.
Тогда смотрите, опять-таки поскольку суммарный угол, заметаемый двумя лучами, не больше, чем 180
градусов, я могу смело сказать, например, что вот в этой вот полуплоскости нет ни одной
граничной точки, ни одной ячейки. Ну потому что я уже вышел за пределы bounding box, и я эти два луча
тоже смог выкинуть из своей полуплоскости, просто потому что они заметали угол не больше,
значит, я могу достаточно далеко отодвинуться, чтобы их не содержать. Тоже не очень формально,
но тем не менее, можно информализовать, можно найти точку перчения лучей, можно найти, ну как бы,
у нас будет что-то такое, можно уйти достаточно далеко, чтобы здесь не было вершин луча и,
соответственно, взять одну из двух полуплоскостей. Ну все, у нас получается бесконечная полуплоскость,
где нет ни одной граничной точки. Смотрите, самое главное, что у нас, ну мы доказали,
что все ячейки это уже выплаканные многоугольники, у которых, следовательно,
все вершинные углы меньше 180 градусов. Угол при любой вершине меньше 180. Дальше,
что такое вершина? Эта точка, ну по сути, это, на самом деле, точка перчения, как минимум,
трех нет, короче, нескольких многоугольников. И при этом эта вершина, то есть, как бы вот из
нее выходит несколько таких линий, я знаю, что угол между каждой парой соседей меньше,
чем 180 градусов, потому что это все углы многоугольников. Значит, этих углов должно быть хотя бы три,
чтобы в сумме они давали два π. Вот, ну значит, степень хотя бы три. Вот, значит, еще раз сюда,
это мы для внутренних вершин показали, для вершин многоугольников. Теперь почему-то
верно для п бесконечности. Еще раз, если там степень два и меньше, то значит, лучей, пересекающих
наш bounding box, максимум два, и можно найти бесконечную полуплоскость, которая не содержит
граничных точек нашей диаграммы. Но такого быть не может, мы с вами уже знаем, как выглядят все
потенциально возможные наши обобщенные многоугольники. То есть, они либо конечные,
либо вот такие вот обобщенные многоугольники. Ну и понятно, что ни один из них не содержит
целиком какой-то полуплоскости. Опять, потому что здесь есть какие-то двеграничные, которые при
пересечении дали вам какой-то угол. Ну и понятно, что если вы рисуете угол, то он никакую полуплоскость
целиком не содержит. Тут тоже надо немножко подумать, представить, почему вот эта вот штука,
получаемая в частности как подобность какого-то угла бесконечного, никакой полуплоскости не
содержит. Подумали вроде как, осознали, что как бы вы ее не рисовали, то есть она должна либо
пересекать границу, либо быть целиком вне, чтобы ее не... Короче, никак такого быть не может. Все,
значит двух лучений нам недостаточно, значит степень хотя бы 3. Поэтому у каждой
вышины степень хотя бы 3. Окей? Вот, ну все. Значит тогда это верное неравенство, ну а дальше
я его просто могу уже вот здесь вот использовать и смело получить то, что нужно. Значит давайте
отсюда выручим равно E. В плюс или минус 1. Дальше это подставляю в неравенство. Ну и получаю то,
что надо. Ой, зачем-то знак поменял. Вы не больше 2 и минус 5. Возвращаюсь сюда. E тогда не больше
чем 3 и минус 6, как и обещал. Все.
Итого, мы доказали, что если у нас все точки, все сайты на одной прямой, то мы знаем как выглядят
диаграммы просто параллельные прямые, а иначе в них все равно линейный, короче, она линейного
размера. Поэтому есть надежда на то, что алгоритм будет, ну там, линейный или примерно линейный. У
нас будет N log N алгоритм. Вот. По крайней мере есть надежда на то, что поскольку памяти нам
нужно не очень много, для хранения всего этого нам достаточно линейной памяти, значит в принципе
есть надежда на какой-то там адекватный алгоритм. Так, окей. Значит дальше, чтобы уже приближаться
к алгоритму, мне нужно еще немножко определений и утверждений доказать. Значит первое определение,
пусть P набор сайтов, набор сайтов, пусть Q это какая-то точка, произвольная точка плоскости,
тогда максимальный пустой круг для Q, я буду обозначать его С от Q, ну иногда можно будет
подписывать С на ксампе от Q, если вдруг непонятно какой набор сайтов, не буду этого делать. Значит
максимальный пустой круг это круг максимального радиуса с центром в Q, который в своей
внутренности не содержит сайтов. Круг максимального радиуса с центром в Q,
который в своей внутренности не содержит сайтов вообще, не содержит ни одного сайта,
не содержит ни одного сайта. На границе можно, а внутри нельзя.
Картинку давайте опять бахнем, значит вот если у меня есть какой-нибудь такой набор сайтов,
такой нарисую, например для вот этой вот точки максимальный круг выглядит как-то вот так.
Ну что-то такое, да и конечно тут еще художник, но тем не менее. Для вот этой точки Q максимальный
круг выглядит ровно вот так, то есть внутри нет сайтов, а на границе вот два аж попало,
может быть три, может быть четыре. На границе круга может быть, повторюсь, сколько угодно,
но внутри нельзя ни одного, и среди таких кругов выбираем максимальный, то есть по сути просто
встали сюда, раздуваем кружок пока можем, пока на его границе кто-то не попадет,
пока один из сайтов не пойдет на границу, возможно сразу несколько попадет.
Повреждение, во-первых, точка Q является вершиной диаграммы Воронова, ну то есть вершиной одного из
многоугольников, который является ячейкой диаграммы Воронова, если и только если,
C от Q на своей границе содержит по крайней мере три сайта, содержит, ну я не буду прописывать на
границе, потому что понятно, что во внутренности никого нет, единственное где может содержать это
на границе, поэтому содержит, ну давайте один раз напишу, на границе хотя бы три сайта,
хотя бы три сайта, то есть если внезапно на этот круг на границе попало три сайта,
то это обязательно вершина какого-то многоугольника в диаграмме Воронова. Вот,
ну и во-вторых, кусок серединного перпендикуляра
КПИПЖ является ребром диаграммы Воронова,
если и только если на этом середине перпендикуляря есть точка такая, что C от Q, то есть круг с центром
в этой точке, содержит на границе только ПИПЖ и больше никого, значит кусок серпера КПИПЖ
является ребром, если и только если на нём есть точка Q такая, что C от Q содержит ПИПЖ
и больше никого не содержит. ПИПЖ и больше никого не содержит, и больше никого.
Формировка понятна? Еще раз, вершины это те точки, что на максимальном круге есть хотя бы три сайта,
а ребра характеризуется тем, что можно взять на нём какую-то точку, что максимальный круг
содержит вот эти два сайта и больше никого, то есть здесь хотя бы три, а здесь ровно два.
Соответственно, у нас есть критерий для вершины и для ребра, что что-то является вершиной, что что-то является ребром.
Так, и вроде уже после того, как мы докажем, мы будем готовы пределять алгоритм,
поэтому осталось чуть-чуть потерпеть геометрии. Ну давайте первый слева направо,
первый слева направо. Значит, я утверждаю, что если Q вершина, то она равна удольна хотя бы от трёх сайтов,
по сути, да, что написано вот здесь вот, что она равна удольна хотя бы от трёх сайтов. Ну окей,
что значит, что она вершина? Значит, что она является точкой пересечения нескольких
многоугольников. Ну что-нибудь такое давайте нарисую. Вот есть несколько многоугольников,
являющихся вершинами, являющимися ячееками диаграмма Воронова. Есть какая-то точка Q,
которая является вершиной всех этих многоугольников. Мы уже с вами доказывали,
что вот эти вот точки, являющиеся вершинами, имеют цепень хотя бы три, поэтому они действительно
в ходе хотя бы в 3-многоугольника, значит они равноудалены от сайтов, которые отвечают вот
этим вот ячейкам, да, то есть вот здесь есть какой-то site.py, здесь есть site.pg, здесь есть site.pk, здесь есть site.pl,
q равно удалена от них от всех, потому что она лежит как бы во всех этих вот ячейках, значит q
общая вершина, общая вершина хотя бы трех ячеек, хотя бы трех ячеек, почему хотя бы трех, мы
доказывали вот здесь вот, что все углы меньше со 80, а чтобы получить угол 360, значит нам
нужно хотя бы 3-многоугольника, значит q равно удалена от хотя бы трех сайтов, ну на этой картинке
четырех, значит давайте тогда проведем вот этот вот круг с центром в q и проходящей через все вот эти
вот сайты равно удаленные от q, единственное, что мне осталось доказать, что внутри этого круга
никого нет, потому что я уже знаю, что на границе есть хотя бы три точки, если я покажу, что внутри
никого нету, то значит это тот самый максимальный пустой круг, круг максимального радиуса,
внутри никого не содержащий, а на границе он внезапно содержит хотя бы три точки,
значит почему внутри никого нет, ну просто если кто-то есть строго внутри этого круга,
p,m, то эта точка получается более близкая, чем все вот эти вот другие, значит на самом деле q не
могла лежать ни в одной из предыдущих ячеек, потому что p,m строго ближе, противоречие,
если p,m внутри круга, то dist от q до p,m строго меньше, чем, скажем, dist от q до p,
значит q не могла лежать в ячейке для этой точки, для этого сайта, а мы изначально предположили,
что она там лежит, да, то есть вот здесь вот мы предположили, что q это вершина нескольких
многоугольников, то есть сейчас она лежит там вот в этих вот ячейках p,i, p,g, p,k, p,l,
но если есть какая-то точка внутри, если есть какой-то сайт внутри, то значит этот сайт более
близкий, чем все остальные, и q не могла просто по определению лежать ни в одной из этих ячеек,
противоречие. Окей? Обратно, я утверждаю, что если dist от q содержит хотя бы три сайта,
то это обязательно вершина. Давайте нарисуем dist от q, то есть q есть dist от q. Сюда попали
внезапно хотя бы три сайта p,i,p,g,p,k. Почему q это обязательно вершина? Почему q вершина какого-то
многоугольника? Ну, смотрите, я утверждаю, что если p,i,p,g,p,k лежат на границе этого круга,
то обязательно q лежит в пересечении всех ячеек, соответствующих этим сайтам. Если их там больше,
то еще дальше можно продлить пересечение, потому что внутри этого круга никого нет, значит самые
близкие точки, самые близкие сайты q, это одновременно и p,g, и p,k, и p,l. Ну, короче,
p,i, p,g, p,k. Глупость, еще раз, значит поскольку внутри круга больше сайтов нету, то самые близкие
сайты q, это одновременно все сайты на границе этого круга. Внутри никого нет, значит все на
этом расстоянии они подходят. Поэтому q является точкой пересечения как минимум трех ячеек,
ну а понятно, что ячейки, если мы берем три разные ячейки, то пересекаться они могут только по точке,
потому что у вас есть выпуклые многоугольники, вы их пересекаете, понятно, что пересечение может
быть только точкой, то есть общей вершиной. Потому что, скажем, когда вы берете два
многоугольника, мы знаем с вами, что многоугольники у нас пересекаются, ну по сути они не то чтобы
пересекаются, они могут только кол-то общий кусок границы иметь, потому что это по сути у
нас есть разбиение плоскости. Вот, когда вы пересекаете два многоугольника, у вас получается
максимум какая-то сторона. Когда вы пересекаете еще какой-то третий, но понятно, что получается
от этой стороны может быть только какая-то точка крайняя, которая является вершиной всего вот
этого, потому что если была сторона, и вы ее пересекли
еще с многоугольником, то поскольку вот здесь вот
и вот здесь вот эта внутренность других многоугольников,
то, соответственно, никакие внутренние точки этого
отрезка вы содержать не можете. Значит, пересечение
состоит только из одной точки, которая является
одновременной вершиной всех этих многоугольников.
Вот это вот состоит только из общей вершины. То есть
тут нам надо понять, как выглядят вот эти три наши
многоугольника. Еще раз, у нас есть три многоугольника
на плоскости, которые не пересекаются внутренностями.
Значит, тогда пересечение первых двух – это максимум
какое-то общее ребро. А если я его пересеку с еще многоугольником,
то поскольку все внутренние точки этого ребра лежат
только здесь и больше нигде, то лежать в многоугольнике
может быть либо только вот эта точка, либо только
вот эта точка. Обе одновременно не могут, потому что если
обе одновременно, то значит весь отрезок тоже. Ну все.
Значит, единственная точка, удовлетворяющая такому
условию – это общая вершина всех многоугольников. Значит,
это вершина нашей диаграммы. Так, второй пункт. Что там
было? Что серпер задает ребро, если на нем есть
точка, равную удаленную от ПЕПЖ, больше ни от кого.
Давайте нарисуем. То есть ПЕПЖ. И со всего вот этого
середины предметикуляра есть хотя бы какой-то кусочек
положительной длины, который задает одно из ребер нашей
диаграммы. Давайте возьмем какую-нибудь внутреннюю
точку этого отрезка. Внутреннюю точку этого отрезка. Я утверждаю
тогда, что максимальный круг для нее содержит только
ПЕПЖ и больше никого. Сейчас будет непросто. Вот. Значит,
еще раз. Пусть какой-то кусок середины предметикуляра
между ПЕПЖ участвует в диаграмме. То есть это там
сторона или бесконечный луч. Давайте возьмем внутреннюю
точку этой стороны. Какую-то точку Q. Отлично, от концов.
И проведем круг радиуса так, чтобы на него попали и ПИ и ПЖ. Они обе попадут,
потому что раз Q на серпере, то соответственно они обе сразу попадут,
если я проведу круг с центром в Q. Надо показать, что внутри
никого нет и на границе тоже никого нет. Ну почему внутри
никого нет? Понятно. Если кто-то внутри, если какая-то ПМ внутри,
то опять ПМ более близко к Q, чем ПИ и ПЖ, а Q это как раз
граница разделения между ПИ и ПЖ. В противоречии, точка, лежащая в ПИ,
лежит ближе, ну точнее в ячейке ПИ, лежит ближе к ПМ. Такого быть не может.
А, поэтому опять внутри круга никого не бывает. Почему не может никого на границе?
Вопрос к вам. Почему не может быть такого, что вот этот круг, который я нарисовался,
держит одновременно три точки? Ну или можно сказать, что если здесь хотя бы три точки,
то по первому пункту это вершина, а это мы знаем, что внутренняя точка,
внутренняя точка ребра. Вот. Значит, давайте пропишем опять. Внутри круга
не может быть точек, не может быть сайтов, не может быть сайтов. Так как иначе ДИСТ КПМ
меньше, чем ДИСТ УПИ, на границе тоже не может быть сайтов, на границе тоже не может быть сайтов
отличных от ПИ и ПЖ. Отличных от ПИ и ПЖ, так как иначе по первому пункту кое-то вершина,
а мы предположили, что кое-то как раз внутренняя точка ребра, то есть, но не вершина, противоречие.
Так. Да, любую внутреннюю точку ребра, на самом деле, действительно.
Так, но обратно. Значит, мы знаем, что на серпере есть какая-то точка, содержащая ПИ и ПЖ. В смысле,
точка такая, что максимальный круг содержит ПИ и ПЖ и больше никого не содержит. Почему тогда
кусок серперы участвует в нашей диаграмме? Ну, смотрите, вот есть некая точка Q, есть максимальный
круг с центром в ней, он содержит ПИ и ПЖ. И больше никого не содержит. То есть, это значит,
что все остальные сайты имеют расстояние от Q строго больше, чем радиус этого круга. То есть,
все остальные сайты где-то снаружи этого круга лежат, строго снаружи. Это значит, что если я,
сейчас немножко неформально будет, но это можно легко формализовать. Значит, это значит, что если
я немножечко подвигаюсь от Q в обе стороны по середине перпинкуляров и буду рисовать такой же
круг, содержащий ПИ и ПЖ, то никаких других сайтов ни внутрь, ни на границе я, короче,
не вберу. Да, но потому что все они находятся на расстоянии, там, хотя бы эпсилон от этого круга,
значит, можно здесь подобрать такой, там, не знаю, эпсилон 9 на миллиард, что, ну, там, наверное,
какая-то другая форма, но тем не менее. Если я немножечко подвигаюсь в обе стороны от этой
точки и буду рисовать такой же круг, то в него ни один из сайтов не попадет, потому что если
они были вне исходного круга, то можно так немножко пошевелить круг, чтобы они были вне нового круга,
ну, из непрерывности просто. Вот. Значит, мы понимаем, что не просто Q обладает таким свойством,
что на круге только две точки, но и некий, ну, как бы, некий отрезок на самом деле, или там можно
считать, некий интервал. Настер пери. Настер середины перпендикуляции вот такой. Так. Ну и тогда
я утверждаю, что это обязательно вот все вот это вот, это внутренние точки, внутренние точки ребер.
А, ну, на самом деле можно сказать просто так. Смотрите, вот этот отрезок, все вот эти точки,
это общий кусок границы между вот этими двумя ячейками. Между ИТ и житой ячейкой. Ну,
потому что это точки, равно удаленные от ПИ и ПЖ и больше ни от кого, все остальные дальше. Поэтому
как раз это общий кусок границы между двумя вот этими ячейками. Они лежат только в этих двух
ячейках и больше нигде. Ну, все, значит, вот это вот, это как раз некий разделяющий кусок между
двумя ячейками. Значит, точки на этом отрезке лежат только в вывод ПИ и ВПЖ. А значит,
это как раз общий кусок границы. Потому что пересекаться ячейки могут только по границе,
там по отрезку или по лучу, и все вот эти вот точки, это как раз тот самый, ну, как минимум,
какое-то подмножство этого куска границы. Значит, точно в общую границу между ними входит
какой-то отрезок серпира. Это мы и доказываем. Что какой-то кусок этого середины перпендикуляра
является общим куском границы для двух ячеек. Входит в нашу диаграмму. Ну, все.
Так. Все, чудесно. Еще раз. Мы с вами показали, что вершины диаграммы Воронова получаются как
такие точки, что в их пустом круге есть хотя бы три сайта, а ребра вычерчиваются такими точками,
что в их пустом круге ровно два сайта. Вот какая мораль этого утверждения. И теперь с его помощью
мы будем строить алгоритм. Значит, алгоритм называется алгоритмом Форчуна по, ну, собственно,
фамилия автора. Алгоритм у нас будет, ну, по сути, сканлайном. Значит, мы будем идти, конечно,
прямой сверху вниз, обрабатывать сайты один за другим в порядке прохождения их сканлайном,
и будем как-то перестраивать нашу текущую диаграмму Воронова. Значит, вот представьте
себе, что какие-то точки, какие-то сайты мы уже обработали. Сканирующая прямая где-то вот здесь,
движется вниз. Какие-то сайты она еще не обработала. Давайте что-нибудь вот такое нарисую. Мы рассмотрели
пока только все, что выше этой прямой, все, что ниже мы не знаем. Значит, есть соблазн сказать,
как обычно у нас это в сканлайне работает, сканирующая прямой работает, что мы как бы
хотим сказать, что если прямая находится в некотором положении, то все, что выше нее мы уже точно
построили. То есть, грубо говоря, что мы построили диаграмму Воронова вот в этой вот верхней
полуплоскости. Здесь, однако, такого сказать нельзя, потому что мы еще не все точки рассмотрели,
и некоторые точки, которые, например, придут очень скоро, они могут вполне себе повлиять на вид
диаграммы Воронова в этой верхней полуплоскости. Потому что, скажем, вот здесь ячейка будет
какая-то вот такая, например, а этот луч мы ниоткуда не найдем, пока эту точку не увидим. Поэтому,
ну не полностью я могу построить здесь диаграмму, она все-таки как-то зависит от того, что ниже этой
прямой находится. Но точно есть какая-то область внутри этой полуплоскости, то есть выше сканирующей
прямой, для которой я знаю, как выглядит диаграмма. А именно, это в частности такие точки Q. Давайте
X. Это такие точки X, для которых хотя бы одна из точек, уже просмотренных, хотя бы один из
рассмотренных сайтов, ближе, чем прямая. Тогда, если, скажем, эта точка ближе, то есть к X-у эта
точка ближе, чем прямая, то понятно, что все, что ниже прямой, еще дальше. Поэтому для X-а пофигу,
что происходит ниже прямой. Для него есть какая-то достаточно близкая точка, все остальные
новопоявляющиеся будут дальше, поэтому они на вид диаграммы в точке X не повлияют.
Вот. Ну и соответственно, мне нужно нарисовать такую область в верхней полуплоскости,
которая ограникивает все такие точки, для которых хотя бы одна, хотя бы один из сайтов вверху ближе,
чем прямая. Что это за область? Что за оно, что точек X, для которых некий сайт ближе, чем прямая.
Не, не кругов. Чуть хитрее. Чего? Да, параболы. На самом деле, если мы фиксируем сайт и прямую,
и рассматриваем, скажем, множество точек, равноудаленных от сайта и прямой, то это парабола.
Вот для этого сайта и прямой будет какая-то такая парабола. Ну, это там одной, так, плохо нарисовал,
сейчас перерисую. Одно из там характеристических свойств, что вот есть там фокус, есть директрица
у парабол. Ну вот это вот ровно оно. Итого, если я для каждого сайта над сканирующей прямой построю
парабол, отделяющую ее от директрицы. Ну, как-нибудь что-нибудь вот такое я нарисую. Да, и рассматриваю
нижнюю огибающую всех этих парабол, то я получу множество точек, где я уже заведомо знаю вид
диаграммы. Потому что, если она лежит над вот этой вот нижней огибающей, то значит хотя бы один
сайт выше вот этой вот прямой, ближе, чем прямая. Значит, все, что ниже, оно еще дальше, и оно точно
не влияет на вид диаграммы. Окей? Вот. Ну чудесно. Значит, давайте тогда поддерживать вот такое страшное
безобразие, вот этот вот набор, набор дуг-парабол, которые отделяют изученное множество от еще не
изученного, и понимать, что с ним происходит. Ну, то есть понятно, что там, что происходит,
например. Когда наша директрица спускается чуть-чуть ниже, у меня возникает новая точка, и по сути
вот здесь вот рождается новая парабола. Потому что, когда директрица пройдет еще чуть ниже,
но она станет уже адекватной параболой. Вот давайте я так нарисую. Чуть ниже спустилась,
тут возникла какая-то адекватная вот такая парабола. А в момент, когда она еще только появляется,
но она, понятно, выражается вот с такой вот луч, то есть как бы такую не раскрывшуюся параболу,
вот такую вот. Потому что множество точек удаленных от этой точки, ну, равно удаленных от точки от прямой,
это просто вот такой луч. Ну, значит, на самом деле прямая, но поскольку мы живем в верхней
полкоскости, то вот это вот. Соответственно, у нас появляется новая парабола, и мне нужно вклинить,
смотрите, вот сюда вот нужно вклинить новую параболу. То есть у меня было вот это, вот это,
вот это, потом вот это, и она теперь расщепляется некой новой параболой. То есть вот здесь вот теперь
будет, ну там, при движении директрисы вниз, у меня будет вот такая, вот такая и так далее. То есть у меня,
по сути, вот эта вот дуга расщепилась на два кусочка слева, потом будет новая парабола, вот это вот,
да, и потом, ну, правый, правый, правый кусок той же парабола. Вот, и надо все это поддерживать. И
еще понимать, когда появляются вершины, ну, давайте, давайте тоже сейчас про это скажу. Значит, смотрите,
точки пересечения соседних парабол – это такие точки, которые равно удалены от двух фокусов,
и больше ни от кого. Ну, потому что эта точка процветения – двух парабол. Поэтому вот эти
вот точки пересечения соседних двух парабол вычерчиваются нам рёбра. У нас есть критерий,
что рёбра как раз вычерчиваются точками, равно удаленными от двух каких-то сайтов, и больше ни
от кого. Значит, это как раз ребра. Вот. А вершины появляются, когда у нас три параболы схлопываются
в одну. Например, вот здесь вот у меня будет вот эта вот картинка, да? Вот так вот у меня. Ну,
в какой-то момент вот так вот было. Если я буду спускаться чуть ниже, у меня эта парабола будет
все как бы худеть и худеть, и у меня рано или поздно картинка станет вот такой. Ну как-то вот
так. То есть у меня вот эта парабола, она схлопнется в точку. То есть она будет пересекаться с предыдущей
по точке просто. И она, соответственно, как бы потом удалится из моей вот этой вот линии. Из
множества двух парабол. Соответственно, вот здесь вот в этой точке происходит такой случай, что у меня
три парабола одновременно пересеклись. А значит, эта точка равна трех фокусов. То есть от трех
сайтов. Поэтому эта вершина. Вот. Ну и все, значит, нам нужно аккуратно просто следить за траекторией
всех вот этих вот пересечений соседних парабол. Понимать, что если три одновременно пересеклись
все эти вершины. Вот. Ну и аккуратненько все вот вычерчивать, пока мы идем вот эта директрица
сверху вниз. Такой алгоритм. С ребрами. Смотрите. Ребра вычерчиваются точками пересечения двух
соседних парабол. То есть у меня все параболы упрямочены слева направо. Я рассматриваю точку
пересечения любых двух соседних парабол. Вот она, например. И я утверждаю, что при движении директрицы
вниз, эта траектория этой точки пересечения двух парабол будет как раз вычерчивать очередное
ребро. Ну потому что просто эта точка раз пересечения двух парабол и больше, ну и ровно двух,
то она равна от двух фокусов. Ну а это вот. А есть точка такая, что пустой круг содержит только эти
веревки и больше никого. Поэтому эта штука вычерчивает нам ребро. Так, ну давайте теперь какие-то детали.
Насколько получится. Значит, во-первых, давайте я скажу, что вот эта вот штука на бурду к парабол
я буду называть береговой линией. Береговая линия. Наверное, береговая, потому что на волны
какие-то похожи. Такой какой-то фронт, волна идет. Вот поэтому береговая линия. Надо понять,
как я это буду хранить. Ну понятно, что поскольку тут возникают запросы добавления парабол и удаления
парабол. Повторюсь, добавление — это когда приходит новый сайт, и он вставляет такой парабол изначально
выраженный, потом раскрывающийся. А это добавление параболы. По крайней мере, там, дуг параболы. А удаление
происходит, когда три соседние параболы схлопываются, пересекаются в одной точке. И, соответственно,
у меня вот центральный из них удаляется из береговой линии. Она порождает вершину и потом удаляется.
Значит, мне нужно код дерева поиска. Раз мне нужна вставка удаления, ну и там, наверное,
как-то нужно по нему быстро итерироваться. Тогда все будет храниться в дереве поиска.
Дерево поиска. Значит, насколько я понимаю, здесь хватит. Я к своему студу ни разу не писал этот
алгоритм. Но, насколько я понимаю, здесь будет достаточно даже обычного сета. То есть, не нужно
писать свое дерево поиска. Достаточно будет обычного сета, ну или мульти-сета, в крайнем случае.
Сета или мульти-сета. Потому что мы сейчас поймем, как это можно все аккуратно хранить,
чтобы не изобретать свой велосипед. Вот. Чем характеризуется каждый конкретный элемент
нашего сета? Давайте я буду говорить сет для простоты. Чем характеризуется элемент нашего
сета? Элемент – это дуга парабола. Вот что-то такое. Значит, чем характеризуется дуга? Видимо,
своим фокусом, очевидно. Потому что, чтобы понимать, что у здоровья не прямой, нам нужно
хранить фокус текущий. Нужно хранить фокус этой параболы. Вот. Так. И, видимо, я буду хранить
еще фокус следующей параболы, чтобы понимать, где заканчиваются текущие и начинается следующее.
Потому что, например, вот здесь, смотрите, вот здесь, когда у меня вот эта дуга перекроет
в следующую, ну мне же нужно как-то понимать, где заканчиваются предыдущие и где начинается
следующее. Для этого давайте я буду просто хранить фокус левой параболы и фокус правой,
два последних фокуса. Ну и, соответственно, из них я уже смогу понять, где находится точка
пресечения. То есть я знаю фокус левой параболы, фокус правой параболы, координату директрисы,
y-координату директрисы. Ну и из них я уже вот эту вот координату в любом момент времени могу
посчитать. Значит, элемент C это дуга параболы, задающаяся фокусами, ну двумя фокусами.
Двумя фокусами. Пи и пыжи. Значит, еще раз, если у меня есть два фокуса пи и пыжи,
то дуга параболы это какой-то такой вот кусок. На самом деле мы еще не знаем,
где он заканчивается слева. Вроде это будет не обязательно, но если нужно,
я могу еще хранить третий фокус. Это вот как бы фокус предыдущей параболы слева. Это будет
не обязательно. Или написать. Нет, давайте так, то есть еще раз, смотрите, дуга параболы задается
как бы своим концом, как точкой причине двух парабол, и вот какой-то кусок слева. Мы не знаем,
какой именно слева, то есть мы не знаем, насколько влево он продлевается, то есть где пересечение
с предыдущей параболой. Но нам это будет на самом деле не нужно. А если нужно, мы всегда можем
вставить в сигнатуру нашего элемента еще фокус предыдущей параболы, чтобы искать вот эту вот
конкретную дугу. Но нам это будет не нужно, будет всегда хватать двух фокусов. Этот и следующий.
Вот, значит, еще тут важен порядок, потому что, например, когда вот в этом случае,
когда я вставлял очередную параболу, она может рассечь одну и ту же параболу на две дуги. То
есть, может быть, вот какая-то такая картинка. Вот так вот нарисую. Бывают вот такие вот картинки,
сейчас. Вот, бывают вот такие картинки. И, соответственно, здесь может быть такое,
что сначала идет дуга одной параболы, потом дуга другой параболы, потом опять дуга той,
с которой мы начали. Ну и здесь тогда просто важен порядок. Если мы знаем, что вот здесь фокус
Pi у большой параболы фокус Pi, а здесь фокус Pj, то у меня, соответственно, будет вот эта вот дуга
характеризуется парой Pi-Pj. Эта дуга характеризуется парой Pj-Pi. Эта пара характеризуется,
sorry, эта дуга характеризуется парой Pi, ну и, соответственно, там Pk-Dk это следующая парабола.
То есть, вот здесь как бы важен порядок, что Pi-Pj я как бы, значит, рассматриваю пересечение,
ну, точнее, дугу до первого пересечения. Pj-Pj, значит, рассматриваю дугу, по сути, до второго
пересечения. Поэтому как бы здесь важен порядок. Тот фокус, который идет первым,
это я рассматриваю дугу этой параболы, а вторая задает ограничение справа. Вот я их пересекаю,
рассматриваю самое левое ограничение этой дуги новой параболой, и оно, собственно, и будет
ограничивать, ограничивать мою дугу справа. Так, ну и, соответственно, упорядоченные эти
элементы будут по x-координате точки пересечения вот этих круг парабола. То есть, у меня каждый
элемент это, по сути, некая вот такая дуга с фиксированным правым концом, и чтобы сравнить,
какой элемент идет раньше другого, я вычисляю x-координаты вот этой точки и сравню их между
двумя элементами. Потому что, если у меня есть вот такая пара парабол и какая-то следующая,
здесь вот, я знаю, соответственно, координаты вот эту, координаты вот эту, раньше идет та дуга,
у которой раньше конец. Поэтому я говорю, что нам не важен левый конец, нам важен только правый
конец. У кого правый конец меньше, тот идет раньше в нашем дереве, в нашем сете. Ну,
мы храним, как бы, по сути, директрисы, что это одна переменная, и равно чему-то, y равно
константе. Вот. Ну, у нас там будет какая-то переменная, означающая, по сути, уровень текущей
директрисы, но как прямую мы ее явно не храним. Вот. Значит, это то, как у нас хранится наш скамлайн,
наша береговая линия. Теперь, смотрите, у нас есть два типа событий. Первое событие — это
так называемое событие точка. По-английски, это событие, когда директриса доходит до очередного
сайта, какой-то там ПКТ. Значит, что здесь происходит? Здесь происходит ставка новой параболы,
пока что выраженной в наш сет, в нашу береговую линию. Значит, как это можно сделать? Ну, смотрите,
у нас есть в сете какие-то там параболы, какие-то дуги-парабол. Мне нужно бинпоискам,
а точнее просто спускам в нашем дереве, понять, где находится та дуга, которая содержит вот эту
вот x-координату. Ну, если я знаю, где заканчиваются все дуги, то есть у меня вот сейчас в моем битчлайне,
в моей береговой линии, по сути, есть вот эти вот x-координаты концов всех дуг. То есть есть
координаты вот этой точки, вот этой и так далее. Мне нужно понять, между какими двумя вставляется
наш новый сайт. Вот где-то здесь. Это, по сути, просто лавербаунд какой-то, лавербаунд по данной
координате x. Значит, я в моей береговой линии нахожу с помощью лавербаунда, с помощью спуска
по дереву ту дугу, которая рассекается этой параболой, и мне нужно вставить теперь эту параболу
внутрь моей береговой линии. Причем, если раньше у меня была вот такая дуга параболы, рассекающаяся
теперь новой параболой, то мне нужно старую дугу удалить, вставить вот такую дугу, потом вот такую,
и потом вот такую. Да, потому что в приятном случае, когда рассечение происходит не по вершине,
не по точке причины двух парабол, а просто по внутренности параболы, у меня сначала будет
начало этой дуги, потом новая парабола, потом завершение этой дуги. То есть, по сути, здесь
вот это вот не надо даже, на самом деле, перевставлять, потому что это, на самом деле,
будет и так. То есть, содержимое этой дуги будет такое же, как раньше. То есть, она задаётся
своим фокусом и фокусом следующей параболы. То есть, на самом деле, эта дуга можно ее сохранить.
По сути, нужно просто вставить две новые дуги. Дуга между вот этой параболой и ПКТ, и между ПКТ
и вот этой параболой. Получается просто два инсерта. Ну, вставили, и что-то там произошло.
Появилась новая парабола, она, соответственно, теперь начала пересекаться с предыдущей,
и вот эти вот вершины начали вычерчивать какие-то ребра наша диаграмма. И второе событие — это
событие окружность, по-английски circle event. Это когда мы понимаем, что три параболы
схлопываются, и центральный из них удаляется. Было вот что-то такое, потом они движутся вниз,
как бы эти становятся все более и более такими острыми, а эта, ну, как бы, она такая тупая
остается, и у них пересечение вырождается в точку. Соответственно, у меня должно произойти
удаление вот этой центральной параболы из береговой линии. Значит, здесь тоже все очень просто.
Мне нужно просто пересечь, ну, точнее, вот у меня есть три соседних дуги параболы. Если их фокусы
попарно различны, то есть, если фокус этих параболов отвечают разным сайтам, вот есть три
соседние дуги параболы, если они отвечают разным фокусам, то можно построить просто описанную
окружность этого треугольника. Ее центр будет как раз той самой точкой, ну, по сути, вершиной
диаграммы Варанова. Вот. И нужно сказать, что в этот момент времени, то есть, когда директриса доходит до
того момента, когда эти параболы пересекаются в одной точке, нужно сказать, что в этот момент времени
нужно центральную параболу удалить и создать члену диаграммы Варанова. Ну, давай чуть подробнее
пропишу. Значит, рассматриваем три последовательные дуги парабол, последовательные дуги парабол.
Пусть они отвечают различным сайтам
ПИ, ПЖ, ПК.
Значит, что происходит в момент времени, когда центральный в них вырождается? То есть, когда
происходит что-то вот такое. Так сейчас. Так. Так. Ну, как-то вот так. Значит, я понимаю, что эта точка,
поскольку параболы, это там, точки равнодаленные от точки и прямой, значит, в этот момент времени
точка пересечения равна удалена от, как минимум, четырех объектов. Во-первых, фокуса ПИ, во-вторых,
фокус ПЖ, в-третьих, фокус ПК, ну и в-четвертых, директрисы. Значит, тогда это событие, получается,
это событие, когда одна из параболов вырождается и удаляется из береговой линии, происходит в
момент времени, когда y равно y координате этой точки плюс радиус окружности. Ну, не буду прописывать,
в общем, мне же что нужно? Мне нужно событие упорядочивать по ординате директрисы. То есть,
я иду сверху вниз, каждый раз достаю максимальную ординату события. А это событие происходит тогда,
когда y вот этой вот директрисы равен y координате вот этой точки пересечения плюс радиус окружности.
Ну, потому что директриса равнодалена от точки пересечения, также как все остальные фокусы,
а фокус находится на расстоянии r. То есть, мне нужно построить описанную окружность этого
треугольника, найти у нее центр и радиус, а дальше вниз от этого центра отступить на радиус и получить
y координату директрисы, в момент времени, в который происходит вот это самое схлопывание одной из
параболов. Вот.
Так. Последнее, что надо сказать. Бывает иногда такое, что... Ну, представьте себе следующую
ситуацию. Вот мы шли-шли-шли, в какой-то момент времени три дуги парабол были последовательными.
Значит, одна задавалась фокусом P и другая Pg, третья Pk. И мы такие сказали, окей, когда-то там в
будущем произойдет событие, когда средний из них выродится, произойдет событие типа circle event,
родится вершина диаграммы Воронова. Вот. Это произойдет в какой-то момент времени. А потом,
до наступления этого момента, происходит неожиданное, и, например, там, не знаю, что-нибудь из
этого, начинает пересекаться какой-то новый парабол. Вот так. То есть, например, происходит
новый site event, и одна из дуг парабол под расщепляется к какой-то другой парабол. Тогда, соответственно,
вот эти вот три дуги парабол уже будут непоследовательными. Они будут еще... Между ними
будет еще кто-то. И, по сути, это означает, что до этого момента времени, до появления этой вершины,
произойдет что-то другое, и одна из парабол умрет еще раньше. Значит, вот это вот событие,
которое я добавил, на самом деле может быть так называемым false alarm, ложной тревогой. Это как бы,
ну, мы сказали себе, что если типа ничего меняться не будет, то здесь будет вершина диаграммы Воронова.
Но что-то до этого поменялось. До того, как мы дошли до этого момента, еще что-то поменялось.
Произошла вставка, скажем, новой дуги в нашу береговую линию, и значит, ну, эта точка, как бы, уже
неверное утверждение о том, что это вершина диаграммы Воронова. Она не является точкой
общения трех парабол. Вот, ее нужно как бы удалить. Значит, если мы это видим, то есть если какие-то
три парабола раньше задавали circle event, а теперь перестали быть последовательными, то можно просто
удалить из очереди событий вот этот circle event. Вот, но на таком высоком уровне вроде бы все.
Так, вопросики есть? Хорошо, давайте чуть-чуть еще детали на кого-нибудь примере нарисуем. Да.
Да, да. Как только у нас происходит изменение береговой линии, вставка или удаление,
мы рассматриваем все тройки подряд идущих, считаем их центр описанной окружности и вставляем новый
circle event. Да, в смысле, вот такой. Тогда не будет, да, мы видим, что три последовательные дуги задают
всего лишь два сайта, значит, они на самом деле не задают. Давайте я сразу нарисую, когда это
происходит. Вот давайте здесь нарисуем, значит, было какой-то p i, приходит здесь какой-то p j.
Значит, вот когда директориса здесь, у меня есть просто всего одна парабола, какая-то вот такая.
Значит, дальше директориса двигается вниз-нис-нис, парабола все расширяется, раскрывается вот так.
Затем пришло p j, в какое-то момент в времени директориса достигает вот этой вот ординаты,
и у меня вот эта парабола рассекается вот такой параболой. Очень кривая, но я пытался. Значит,
что происходит? В этот момент времени у меня эта точка равна удальна от p i и p j. Значит, точка
перчения вот этих двух парабол, одна из которых выражена, равна удальна от p i и p j. Дальше у меня
директориса, когда двигается вниз, эта парабола будет раскрываться, нижняя парабола будет раскрываться,
и, соответственно, эта точка двигается вниз и вверх одновременно. То есть сейчас будет две
точки пересечения, одна двигается вниз, другая как бы вверх. Но при этом это все еще точка,
разделяющая две ячейки диаграмма Воронова, и ту, и житую. И получается, что в момент времени,
когда у меня появилась новая парабола p j, у меня родилась новая точка, давайте сразу две точки
породим. Вот я рождаю одну точку, которая является граничной точкой наших двух ячеек. Дальше,
когда нижняя парабола начинает раскрываться, эта точка с одной стороны как бы будет двигаться вниз,
с другой стороны двигаться вверх, и по сути она будет вычерчивать очередное ребро. Причем она
будет вычерчивать откуда-то из центра, не с вершины, а откуда-то из центра. Раз здесь и вверх и вниз идет
это пересечение двух парабол, то по сути у меня ребро вычерчивается откуда-то из середины. Это
нормально, так и будет. Ну, значит, нам нужно просто хранить, что в момент времени, когда они
пересеклись в первый раз, точка была вот здесь, а дальше, когда приходит еще новая штука и
приходит circle event, мы понимаем, что этот отрезок идет там до какой-то координации. И, соответственно,
вот здесь будет ребро, здесь там будет еще ребро, ну и получается у меня такое, ну не всем диаграмма
Воронова, но диаграмма Воронова с какими-то еще вершинами на сторонах. Потому что я при пересечении
двух парабол завожу вершину, да, окей, она будет на самом деле какой-то внутренней точкой на стороне,
но потом просто ее она будет удалить, потому что все вершины степени 2, которые лежат просто на
какой-то стороне, можно будет подчистить, потому что они выполняют только служебную информацию о том,
что здесь вот начинается пересечение двух ребер. Вот мы его здесь заметили.
Ну, я не знаю, как это сделать без этого, потому что если вы здесь вершину не завели, то как вам
понять, как выглядит эта сторона? То есть вы взяли такие, окей, там три параболы пересеклись,
здесь будет circle event, здесь происходит вершина диаграмма Воронова. А какая сторона вот здесь
идет? Непонятно, куда она идет, какие у нее координаты? Что? Да, да, да, то есть мы знаем вершину,
а ребро непонятно куда идет. Поэтому лучше просто завести здесь вершинку, провести здесь такой
отрезок. Ну и собственно, вот вам, пожалуйста, ребро. Так, значит, четыре минутки. Давайте еще
раз кратко все проговорю. При вставке или удалении дуги параболы рассматриваем
все новые тройки подряд предыдущих парабол, все новые тройки последовательных дуг.
И ими пытаемся продеть circle event. Ну там, скажем, как только одна парабола вставилась,
у меня появились две новые тройки. Скоро будет была какая-то такая картинка. У меня вставляется
здесь парабола. Соответственно, появляется тройка. Давайте я нарисую. Тройка последовательных дуг.
Вот это, вот это и вот это. Ну и соответственно, давайте белым выделю. Вот это, вот это и вот это.
А ну и. Ну вот это как бы можно не считать, потому что она и так будет здесь, здесь будут два
одинаковых фокуса, поэтому это можно игнорить. Ну короче, вот появляется какие-то новые тройки,
их нужно все обработать. Конечно, что каждый из них задает, если тут реально три разных фокуса,
и это не точки на одной прямой, то они сдают какой-то центрописной окружности, а значит,
и вот всех нужно обработать. Удаляем, удаляем, да, удаляем. Значит, события храним, по сути,
просто в куче, ну или там в очереди с приоритетом, давайте напишу в куче. Достаем события с максимальным
y. Достаем события с максимальным значением y. Вот оно и будет как бы самое раннее, то где
что-то происходит. И нам действительно достаточно кучи, потому что здесь нам что нужно? Нам нужно
добавлять элементы в множество событий, извлекать события с максимальным y, ну то есть экстремальное
доставать. Еще иногда надо будет удалять, да, если у нас приходит false alarm, но на самом деле можно
просто для каждой тройки парабол хранить указательный элемент в куче, который надо удалить,
и если что, удаляйте с кучи. Удалять по указателю мы умеем. Так, сейчас, одну секунду. Давайте единственный
момент в конце скажу, что у нас вопрос, как этот сканлайн инициализируется. Значит, в простой
случае, если у нас есть всего одна точка с максимальным y, тогда нужно просто нарисовать
вот такую параболу и больше ничего. Вот, а если у нас есть несколько точек с максимальным y,
то этот случай нужно отдельно заефать и сказать, что у нас в первый момент времени есть вот несколько
таких парабол вырожденных. То есть, я их так рисую, они на самом деле просто будут прямыми,
да, лучами вверх. Они будут на самом деле не пересекаться, то есть никакая пара среди здесь
не пересекается. И это единственный момент времени, когда в нашей диаграмме параболы не пересекаются.
То есть, только если в начале у нас есть несколько прямых на вот этой прямой, несколько сайтов на
директрисе, то у меня все параболы будут вот такими лучами вверх, они будут не пересекаться. А
дальше, как только я пройду на epsilon хотя бы вниз, у меня уже все они раскроются и будут
заметать вообще, ну как бы, на бесконечности будут заметать бесконечно большие координаты. Все
будут попарно пересекаться и так далее. То есть, единственный плохой момент времени — это начало,
если есть несколько точек с одной максимальной ординатой. Тогда вот это нужно отдельно заефать,
что я просто вставляю эти параболы, не пытаюсь их даже пересекать, потому что они не пересекаются,
ну ни одна из них ни с кем не пересекается. Вот и просто иду дальше. А дальше уже вставляются
какие-то, они пересекаются с предыдущими и так далее. Вот, ну на этом все. Спасибо.
