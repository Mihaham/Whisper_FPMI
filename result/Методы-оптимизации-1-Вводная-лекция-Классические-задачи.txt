Давайте начнём, курс этих двух читей, всё это уже
читалось два или три раза, в этом году будет существенно
отличаться я надеюсь от того что было раньше, поэтому
пожалуйста ну в общем, надейтесь что есть записи какие-то
но не полагайтесь на них напрямую и не только на
них.
Как обычно курс стоит из двух частей, первая часть
больше про теорию, вторая часть больше про методы
практику приложения пакета решения различных задач
большой размерности вот и в общем всё то что как
так или иначе запускается на компьютерах различного
размера скажем так вот я надеюсь что с теорией
мы разберёмся ну типа за полтора месяца вот и
с теорией будет такой подход значит она будет максимально
простой понятной и иллюстративной чтобы не было более страдания
с неочевидными доказательствами вот поэтому на лекциях будут
доказательства типа на полстранички я их буду писать
вот тут вот соответственно всё сложное что тем не менее
нам будет необходимо я буду выкладывать в виде пдфки
и тем кто интересуется и хочет глубоко погрузиться
можно будет с ним ознакомиться вот то есть тратить там
типа лекцию на доказательства я в этом семестре уже не
буду вот прошлом в прошлый раз я так пробовал делать
но в общем не все доживали до конца было не очень интересно
сейчас дойдем секунду сейчас пока о чем дальше будет
про то как задавать вот значит во второй половине курса
будет больше картина каких-то алгоритмов ну вот не в том
смысле как структуру данных которые наверное у всех
были вот алгоритмов именно того как типа вот те структуры
данных используется в реальной жизни более менее вот которая
как там связана с различными приложениями про которые
тоже будем говорить вот в общем-то список блоков
тут приведен обычно вот это вот я не успеваю вот но
я надеюсь что в этом семестре у меня все получится в очередной
раз ну я как более серьезно настроен скажем так вот
и про коническую оптимизацию с дп я бы расскажу более
подробно вот ну тут еще будет несколько новых тем
которые я пока сюда не добавил вот но немножко их упомянув
в дальнейшем вот значит то есть сначала мы занимаемся
математическими обоснованиями того почему это может работать
потом смотрим на то как эти математические обоснования
реально работают на практике какие задачи можно решать
какие там проблемы что известно что неизвестно и вообще
на какой на какой стадии сейчас наук вот или понятно
да пожалуйста вопрос задавайте сразу поднимайте руки
кричите там как-то проявляйте себя это всегда оживляет
немножко немножко лекции и становится поинтереснее
вот так да ну в общем теперь вот ваш вопрос немножко
осветим ну по плану лекции семинара каждую неделю
возможно у кого-то семинар уже был конь был кого-то
был окей вот ну в общем в плане соотношения лекции
семинаров я постараюсь ну я надеюсь что получится
так что они будут немножко пересекаться вот но все-таки
будут друг другу более менее дополнять вот семинаристы
могу сказать очень разные у всех с немножко свой взгляд
на то что надо рассказывать и так задумано поэтому
я рекомендую вам возможности ну как-то заранее договориться
и выяснить семинаристы что будет происходить в
каком формате и как это будет выглядеть в плане сдачи
в плане материала в плане вида домашних заданий вот
и найти того семинариста который больше всего соответствует
вашим пожеланиям скажем так вот то есть какой-то
минимум будут будут просить все ну какой-то там типа
разный уровень освоения курса подразумевает разную
степень вовлеченности и время которое вы готовы
на него потратить вот поэтому не удивляйтесь если у ваших
коллег из других групп будет немножко отличаться
программа задание и еще что-то это нормально вот то
есть я надеюсь что вы каждый найдет себе очень семинарист
стиль изложения и тематика которого будет подходить
на лучший образ вот это что касается до лекции семинаров
значит по отчетности по моему всегда зачет дип зачет
в конце оценку ставить семинарист вот по результатам
работы в семестре по плану там обычно типа в середине
контрольная по теории по первой части в конце зачет
по ну в конце как бы я рекомендовал сделать устный зачет некоторые
но это опять же на усмотрение семинариста может быть
воздавали домашками и не придется ничего потом
сдавать вот ну то есть тут различные уровни балансировки
он возможно вот возможно каким-то образом будет учитываться
активность на лекции пока не знаю не могу гарантировать
поэтому в общем в процессе того как пойдет дело будет
ясно будет ли что-то будет ли как-то посещение лекции
учитываться в выставлении токовой оценки по дефолту
пока нет вот возможно чуть-чуть поменяется но не сильно
то есть не думайте что если вы не ходили то все пропало
и ничего все вы не сдадите вот это не так ну если вы
и что делать то вы зададите если вы и делать ничего
не будет то тут ничем не сможем помочь к сожалению
вот это про отчетности понятно что надо делать да да это
семинарист вам скажет что будут спрашивать на зачете
то есть не будет такого что вы приходите вас corporations
странно что вы никогда не как бы нет то есть вы выясняете
семинариста что надо подготовить вам все подробно должны
объяснить рассказать показать пересougherствовать
пересказать там то есть еще раз задача максимально вам комфортные условия
создать для того чтобы вы разобрались в тематике вот так по шагам которые надо
сделать перед тем как начинать что-то изучать содержательное понятно короче
надо выяснить что вам на у ваших семинаристов что надо сделать чтобы
сдать курс вот это основная ваша задача в первые там две недели вот там первую
неделю надо понять кому будете ходить чтобы сам расписание в общем устаканилось
все такое вот а потом уже у того кого будете ходить понять что надо делать
чтобы все сдать вот это в общем ваша приоритетная цель вот наша приоритетная
цель сделать так чтобы процедура вашей сдачи была совмещена с тем чтобы что-то
узнали нового интересно и в дальнейшем не забыли это после сдачи все как
обычно вот так значит да слайды выкладываются сюда там сейчас лежит
архив прошлого года и первая лекция собственно вот эта лекция ну почти вот
эта лекция она немножко уже поменялась поменялась пока я тут добирался вот
поэтому как бы я обновлю материалом того что сегодня ну что как бы расскажу
непосредственно вот там будут лежать слайды к ним можно обращаться смотреть
как бы вдохновляться задать какие-то вопросы вот поэтому это все приветствует
всячески значит какие-то семинары которые я когда-то давно делал по моему
18 что ли год будет вот лежат вот здесь на них тоже может смотреть но в общем
это и некоторый ориентир по тематике но это все было давно поэтому сейчас я бы
я надеюсь что семинаристы будут рассказывать что-то более как бы
актуально бодрые и веселые чем то что вот здесь вот но опять же для ориентира
на экране вот значит так да значит организационные вопросы почти все я
собираю всегда отзывы по от вас отзывы на лекции на семинары вот вот отзывы
прошлого года более менее релевантные поэтому в общем-то я думаю можно
составить представление о том чем люди занимаются в среднем и кому что
нравится кому не нравится вот поэтому в общем с учетом всего вот этого вот
единственное что видимо не удастся совместить это вот желание усилить
теоретическую нагрузку но я и как бы надеюсь усилить просто за счет того что
кому интерес тот прочитает вот и я все ресурсы для этого выдам вот а все остальное
как бы будет усиленно в плане именно широты и более больше практичности чем
это было в прошлом году вот ну в общем если кто-то не не хочет ходить или не
может то ничего страшного как вы просто занимайтесь семинаристом и
пожалуйста в комфортном вам режиме можно вполне себе неплохо все изучить вот
поэтому значит пожалуйста подойдите ко мне кто-нибудь из типа представитель
курса или как это называется у вас вот мне нужно будет сделать телеграм этот
канал группу для того чтобы можно я мог кидать вам какие-то дополнительную
информацию информировать о том что какая-нибудь лекция будет в зуме такой
тоже возможно ближе к концу семестра к сожалению вот и да и собственно выложить
ссылку на опрос а там типа чего нравится что не нравится понятно вот и пожалуйста
как бы если что-то не нравится пишите сразу не нравится это медленно
рассказывайте ничего непонятно там не знаю что еще может не понравится все
обычно нравится
все нравится всегда не верю лектор мямлит понятно буду не буду мямлить
лично вот все хорошо вот ну и там доказательства непонятной слишком
быстро сложно утверждение потерялись там еще вот то же самое про семинаристов если
вам что-то не нравится в том как ведут семинар пожалуйста пишите вот мы по
мере сил будем пытаться как-то исправлять к сожалению тут меньше
наверное свободы непосредственного влияния вот но как бы будем пытаться как-то
удовлетворить ваши пожелания по мере возможности вот это про то как вы можете
влиять на то что будет происходить то есть можно предлагать какие-то темы
спрашивать уточнения какие-то я либо это буду включать в полноценной лекции
либо присылать про ссылочки на какие-то материалы которые будут на данный
вопрос отвечать вот поэтому как бы степень погружения глубины материала на
вашей как бы отчасти на вас тоже лежит вот поэтому если будет интересно то
ее велкам задавайте вопросы и все все как обычно так формат взаимодействия как
все будет происходить понятно есть какие-то еще вопросы
окей так да значит что нового будет в этом году я надеюсь подготовить все-таки
лекцию про оптимизацию на многообразиях которые я все уже пару лет хочу сделать
по нормальному не получается вот и прорабатывать оптимизацию тоже добавится
добавить слайды это просто два отдельных типа типа задач про которые
ну полезно знать и видеть их в совершенно неожиданных ситуациях и
понимать что а вот здесь надо вот такие-то методы есть вот там есть
какая-то книжка толстая мне в нее можно посмотреть и найти все что надо вот про
методы будет немножко больше в части простахастику обсудим что такое
смешанная точность как она помогает сократить требуемую память и почему
какие нюансы с процедурой решения в этом случае появляются кто-нибудь знает
что такое смешанная точность руки поднимите если знаете там микс пресижен
еще так может быть на английском нет окей впереди много интересных вот значит
да но еще про те уже сказал что долги доказательств будет поменьше побольше
будет каких-то картинок кода возможно и алгоритмов да но очень пакеты такие-то
наверное еще тоже обсудим это вот короче вот это все будет во второй
половине поэтому я настоятельно рекомендую вам дожить до второй половины
курса и по максимуму присутствовать на занятиях вот так ну в общем про
литературу пару слов основная книга бойда и вандерберге
конвейс оптимизейшн стенп русский курс вот замечательная замечательное
издание всем рекомендую некоторые наверное в каком-то смысле образец
учебника к таким каким он должен быть где там полстранички теории и там три
страницы примеров вот как она работает поэтому всячески рекомендую там с одной
стороны много примеров разобрана с другой стороны много примеров данов
заданиях вот поэтому возможности для самоконтроля у вас тоже будет более чем
достаточно вот по первой части кому кто хочет погрузиться поглубже есть по
теории вот такой вот список книжка юрия в генчнестерова больше наверное все-таки
ну она и про теорию тоже но она про теорию для методов вот вот здесь книжка
достаточно продвинутая для тех кто хочет прям погрузиться в теорию и
геометрию всех объектов которые будем рассматривать как можно глубже вот здесь
но отчасти тоже про методы но и то в общем да вот основа выпуклого анализа вот
здесь вот толстая книжка три стране станет не больше вот если интересно
именно как это теория выпуклых множеств там выпуклых функций какие они
там есть свойства сколько там типов вот мы и это немножко коснемся так чтобы
понять зачем это надо вот а лезть как бы глубинной детали мы не будет вот если
как бы интересно вот все можно посмотреть про методы основная книжка вот это да по
моему они все ну или почти всем доступны в открытом доступе поэтому надеюсь
проблем с литературой не возникнет если возникнет то пишите я выложу просто группу
и проблем не будет да только вот это по моему мы так просто не найти вот остальное все вроде
доступно вот вот эта книжка просто как бы сборник методов для разного типа задач
открываете какая задача а вот такой-то метод все отлично вот и ну то есть про то как они
собственно конструируются исходя из каких соображений вот так понятно откуда черпать
дополнительную информацию прекрасно так отлично 20 минут так ну в общем немножко мотивации зачем
курс в принципе задача оптимизации ставится когда нужно понять какое элемент некоторого
множества является хуже или лучше чем какой-то другой элемент вот и соответственно если вы
у вас есть некоторые перечень возможностей ну да решение вот и вам нужно понять вот а что
делать то вы ставите некоторую задачу оптимизации решаете и получаете тот элемент который минимизирует
заданную вами функцию понятно что здесь очень легко пристрелить стрельнуть себе в ногу если
вы немножко ошибетесь в выборе целевой функции который вы минимизируете или ошибетесь в том
множестве на котором вы хотите найти за один элемент вот поэтому тут важно очень как бы сама
постановка задачи она критично важна помимо потом методов которые будут эту задачу решать
потому что если вы ошибетесь на этапе постановки то на этапе решения вы точно ничего хорошего не
получите вот ну в общем этого этого как бы подхода куча приложений вот понятно что самое как бы
известно данный момент всякое там машинное обучение диплёрник и прочие там рекомендации
системы где ваша целевая функция это просто функция ошибок на ошибки на данных вот вы хотите
пытаетесь ее всячески образом минимизировать при этом вы огребаете ошибку на тесты выборки там
переобучаетесь получаете смещенные результаты либо незадобно у вас там оказывается много
выбросов и ваша модель оказывается не так не достаточно точна это все вам расскажут на соответствующем
курсе наверное даже в этом семестре или нет ну прекрасно вот поэтому часть приложений которые
будем рассматривать они будут отсюда часть будет не только отсюда потому что хочется дать как бы
кругозор чуть-чуть шире чем одна одно направление вот есть еще такая штука называется молекулярное
моделирование там это тоже активно используется когда вам нужно какой-нибудь там тип белок собрать
из кусочков так чтобы это соедение был устойчиво устойчивое соединение так а физика у кого-нибудь
была такая не будь была у кого да ну хорошо вот устойчивое соединение там где потенциальная
энергия минимально может быть помните такой принцип вот ну вот минимизация потенциальной энергии у
какой-то какого-то белка собранного из разных атомов с учетом взаимодействий это это достаточно
сложная задача ее всяческим образом там приближенно пытаются решать но в общем это тоже некоторое
приложение для которого важно понимать что такое целевая функция что такое там запись мина чего-то
там при условии вот поэтому если кто-то хочет погрузиться в эту область то вы там наверняка
встретите упоминать методов вот и эти методы ну то есть хочется чтобы после прохождения курса вы
понимали что значит или иные аббревиатуры и те или иные как модификации ключевые слова вот есть
еще финансах портфоли оптимизейшн когда у вас есть активы у вас есть точнее у вас есть бюджет у
вас есть список активов надо понять куда вложиться что получить побольше ожидаемую прибыль им поменьше
риска поменьше рискнуть вложенными средствами вот в общем это все тоже делает с помощью
оптимизации и вообще финансов это довольно широко распространено потому что ну там нужна какая-то
объективность в том чтобы как объяснить вашему начальнику что вы вложились те активы которые
надо вот но вот есть модель и мы ее решаем мы ее решаем правильно потому что это модель
имеет такие свойства и поскольку наметь такие свойства то то что мы решили правильно и вот мы
вложились получили там то или иное вот такой-то как бы эпсилон плюс минус вот про это части как
раз таки рабастая оптимизация и говорит ну про это потом вот ну оптимальное управление кто не
слышал когда ничего про оптимальное управление вот в общем вот это про то как регу как управлять
всякими механическими системы типа работа техника там ракеты спутники вот эта вся история она про
оптимальное управление и то как в общем как управлять физическими системами так чтобы некоторые
функционалы качества типа затрата топлива точка финального состояния была за была
собственно достигнута с минимальными какими-то потерями издержками прочим вот но обработка
сигналов это собственно части вот сюда реферирует уже ну всякий динойзинг дополнение пропусков
обработка речи отчасти тоже сюда входит в общем все это концепция одна и та же специфика
отличается но в общем идеи общие общие общие основки задач и их вид он более-менее один тот же
слушайте там сначала делается гистограммка специальная которая из ну в общем извал извал
ну да вот эта штука вот и они там их ну короче говоря волна превращается в эту гистограммку
потом загоняется в нейронку и смотрится на по обучающий в руки в какие слова это все эти
сигналы отображается то есть там ну чаще всего да сейчас уже чаще всего да до этого там вроде
были какие-то марковский модель что ли но я тут честно говоря не хочу сейчас обманывать вот если
будет интересно можно подробнее потом поговорить вот так много других может быть встретимся по
ходу дел вот так вопрос кинть есть и вопросов нет ну очень ладно посмотрим насколько насколько
мотивация была успешной так значит ну основные шаги я уже вкратце упомянул ну давайте еще раз их
как бы списком перечислим то сначала сделал надо понять что вы хотите там и сложная чаще всего вот
это задать целевую функцию формализовать ваши требования к решению то есть что надо от решения
потребовать от элемента вашего множества чтобы вы сказали окей это то что мне надо собственно
дальше надо понять из каких с какого множества вы хотите выбрать этот элемент вот ну и тут как
бы классически ну либо вы вам любой элемент годится это самая простая ситуация вот есть не любой то
какие вот типичные ограничения ну типичные и самое сложное когда вы хотите чтобы у вас ну
у вас вы кодируете ваши множество просто бинарными векторами и хотите вы выбрать
некоторые бинарный вектор вот это все очень сложно но довольно часто встречается вот ну или
у вас там ваша переменная какие-нибудь товары грузы и вам нужно потребовать чтобы они были там
вот или если вы пытаетесь приблизить некоторые вероятные распределения то у вас ограничение
то чтобы ваши распределения был распределение тот вектор который вы найдете сдавал некоторые
распределения что это за ограничение кто знает это прекрасно как у вас нет функции мы живем в
Важный комментарий, мы живем в конечномерном пространстве.
Вот у нас есть распределение, соответственно, это представляется
в виде вектора, каждый элемент которого, это там некоторая
вероятность.
Да, что такое интеграл в конечномерном случае.
Ничего сложного не будет, интеграл ли бега, вот функциональный
анализ, вам там резвитесь или интеграл ли бега на
здоровье.
Все конечномерное, вероятностное распределение, что это,
как дискретное там, кто-то ничего не помнит.
Ну сумма равна единице, да, сумма равна единице
и элементы все не отрицательные, вот вам будет распределение.
Вот.
Так, что еще, а, ну бывают еще хитрые штуки, когда
вам нужно матрицу найти.
Все помнят, что такое матрица.
Так, хорошо, это нам понадобится очень сильно, поэтому заранее
предупреждаю.
Что, ну в общем, если будет возможность, освежите
там линию алгебры.
Я может быть какой-нибудь этот чит-шит, что называется
скину, чтобы был, в общем-то, вы освежили, что такое там,
это собственное, разложение по собственным векторам,
там одно, другое, как там матрицу на вектор умножить,
это все очень активно пригодится.
Так, да, и бывает, что надо на матрицу наложить ограничение,
что она там не отрицательно определена, например.
Все повещи такое не отрицательно определенность.
Поднимите руки, кто помнит.
Я помню, прекрасно.
Вот, пример, когда так, это, например, нужно найти
матрицу к вариации в многомерном гауссовском распределении.
То есть модель, что у нас данные гауссовские, мы хотим,
как бы, понять, какая там матрица к вариации.
Вот, а физический смысл этого, собственно, в том, что
матрица к вариации отвечает за тот же самый пресловутый
риск в финансах, например.
Другие примеры, когда нужно найти матрицу, будут
ближе к концу рассказаны, это связано опять же с одной
стороны задачами на графах и с другой стороны с построением
выпуклых приближений или еще называют их релаксации
для комбинаторных задач, то есть когда у вас изначально
было что-то дискретное, а вы делаете хитрые-хитрые
преобразования и получаете некоторую непрерывную
задачу, но у вас переменная из вектора стала матрицей.
И там тоже на нее специально ограничения накладываются,
часть из которых переписывается как ограничение на то, что
некоторая матрица будет положить на полуопределенную.
Наверное, понятно, что такое ограничение более трудоемкое
и неприятное, чем ограничение, что вектор по элементам
больше или равен нуля, например.
Чисто из каких-то разумных соображений, что ограничение,
что какой-то вектор больше или равен нуля по элементам
и ограничение, что для любого вектора некоторая квадратичная
форма больше или равна нуля, это выглядит все как
будто немного несравнимой величины.
И в общем, для работы с такими задачами существуют
отдельные подходы, которые не опираются ни на кредитарии
сильвестры, ни на определение, у них там и некоторая своя
методика есть.
Так, окей, допустим, но что мы разобрались.
После этого вы соединяете первые два пункта и записываете
финальную постановку задачи в некотором виде, в некоторой
форме, общий вид которой будет на следующем слайде
или через слайд.
Значит, записали, проследились, расстроились, ну или порадовались,
не знаю, как повезет.
И после этого проанализировали то, что получилось, и после
этого понимаем, какой алгоритм больше всего подходит.
То есть, задача непрерывная, дискретная, выпуклое-невыпуклое,
можно посчитать градиент, так ладно, что такое градиент,
есть знания?
А поднимите рюк, ты знаешь, что такое градиент, так ну
кто-то знает, окей, хорошо.
Вот, и соответственно, после этого выбирается
наилучший алгоритм, исходя из теории, исходя из опыта,
каких-то тестовых экспериментов, ну и после этого этот алгоритм
реализуется, проверяется корректность, либо опять
же теоретически, либо практически, и получается все это запускается,
тестируется и анализируется то, насколько ваши ожидания
по эффективности решения впадают в то, что вы реально
пронаблюдали.
То есть, может, у вас там в теории все было прекрасно,
но внезапно одна итерация метода занимает там 10 часов
и вы грустите из-за этого, хотя в теории все было хорошо.
Вот, короче, про это мы больше будем говорить во второй
части.
Это общие шаги по тому, как стать задачей.
Вопросы?
Не слишком быстро?
Громче.
Ответом является элемент того множества, который
вы вот здесь задали.
Ну, то есть, иногда по-разному ставят, либо говорят, что
мы хотим найти значение и нам все равно на каком
элементе это достигает значения, либо говорят, что мы хотим
нам интерес сам элемент, и тогда вы просто подставляете
элемент в функцию и получаете то, что надо.
Конечно-мерное множество, под множество Rn, ну или под
множество матриц.
Ну, это почти одно и то же.
Да, про почти одно и то же.
Скалярное произведение матриц, кто знает, как
определяется?
Ну, у вас есть две матрицы, надо скалярное произведение
посчитать между ними.
Скалярное произведение, да, нет, руки поднимите,
кто знает?
Ага, никто не знает, ну окей, а, вот, знаете, хорошо,
good.
Ну это я все тоже буду рассказывать, поэтому я просто заранее
хочу понять, насколько надо погружаться в эти детали.
Да-да, громче только.
Нет, ну у вас Rn и у вас как бы, типа, не по-действительной
числу, у вас там, типа, бесконечно, очень бесконечно
много.
Или, может быть, я не понял.
Ну, теоретически прекрасно, вот, смотрите, у вас на отрезке,
да, например, и у вас какая-нибудь функция вот такая вот, и там
какой-нибудь один узкий пик в минус 100, вот, и вы
будете этот пик искать, пока все точки не пройдете.
Ну, понятно?
Подойдите на перерыве, мы с вами подробнее это обсудим,
давайте так, будет проще.
Так, еще вопросы?
Окей.
Так, ну, в общем, установка задачи выглядит вот так.
Давайте разбираться, что значит каждая буквка.
Значит, мин, ключевое слово, означает, что мы хотим найти
минимум.
Еще иногда пишут максимум, максимум, что мы хотим
найти максимум.
Не удивляйтесь.
Понятно, что задачу на минимум можно преобразовать
задачу на максимум довольно тривиальным образом, а именно
сказав, что мы хотим найти минимум от минус функции.
Я надеюсь, это понятно.
Заранее скажу, что аргумент, короче, решение, в смысле
x такой задачи будет совпадать, но оптимальное значение
будет минус от решения, короче, я всего лишь хочу
сказать, что максимум от функции это минус от минимума
минус функции, вот, не более того.
Не думайте, что если у вас решение будет совпадать,
в смысле x со звездочкой, то надо просто будет подставить
и получить то, что надо, нет, надо еще минус перед
этим написать.
Это детали, ладно.
Значит, это называется f0 целевая функция, помню,
даже есть какие-то обозначения.
Да, вот x искомый вектор лежит в множестве x большое, которое
возможно некоторым хитрым образом быть задано, так
что не укладываться вот в такие вот ограничения.
Мы немножко про это поговорим через месяц, наверное.
Вот, f0 целевая функция, значит, из Rn в R, то есть пока живем
в мире, где мы минимизируем некоторое число, вот, есть
отдельная большая наука про то, что делать, если
у вас минимизируется что-то многомерное, то есть многокритериальная
оптимизация, так называемая, когда у вас много величин,
там, типа, стоимость средства, ой, стоимость время, вот,
там, так, окей, вот, давайте я сейчас договорю и перерыв.
Вот, значит, все будет отображаться в скалях, поэтому если вдруг
у вас в каком-то месте получилось, что вы минимизируете вектор,
то задумайтесь, наверное, вы где-то ошиблись.
То есть тут проверка размерности будет очень активно нам
помогать везде, вот.
Значит, ну, собственно, fкат и функция ограничений
тоже скалярные, видите, с нольем сравниваются.
Вот, ну, тут вот написано Rn, но, может быть, еще от матрицы,
то есть n на n, может быть, вот, ну, пример тут написан,
давайте тогда 5 минут перерыв и я немножко пару слов скажу
про это.
Да, надеюсь, вы немножко размялись, отдохнули.
Да, значит, мне тут спасибо напомнили, что вот это две
буквы означает Subjects2, то есть при условии что, вот,
это называется функция ограничений равенства, это называется
функция ограничений равенства, они просто какие-то, ну,
чаще всего они у нас будут непрерывными как минимум,
вот, ну, в дальнейшем будем требовать там дифференцируемости,
дваждиференцируемости, ну, короче, в процессе разработки
всей техники будет понятно, какие ограничения надо
сюда добавить, чтобы все работало, вот, поэтому
в общем, ну, то есть, короче говоря, эта типа сумма равна
единице, это типа все элементы неотрицательные, ну, в общем,
все знаки здесь, ну, то есть важно, что тут равенств
не равенств, потому что, ну, я надеюсь, понятно, что
от одного к другому легко перейти, ну, в смысле, от
одного знака не равенств от другого легко перейти
в нажалина миус единиц, вот.
Иногда вообще пишут без равенств, кто знает, кто
скажет, почему это то же самое.
Ну, два не равенства, конечно.
Можно больше либо равно, меньше либо равно добавить и
вы ничего не потеряете.
Понятно, да?
Такие простые вопросы.
Вот.
Значит, ну, пример такой простой, наивный, но, наверное,
поначалу только такие надо приводить, что хотим
есть как бы X, это некоторый размер инвестиций, либо
доля от его бюджета, вот F0, суммарный риск или там
вариация прибыли, то есть чаще всего там берут квадратичную
формулу с некоторой положительной матрицей, которую как-то
там по историческим данным ее вычисляют.
Вот.
Ну и Fcad, собственно, то ограничение на бюджет, которое есть,
то есть либо сколько вы готовы вложить в каждый
актив как минимум, либо сколько вы готовы как максимум
вложить в каждый актив, либо там, в общем, ограничение,
плюс ограничение на то, что это у вас типа доля X, то
есть сумма равна единице и каждый элемент не отрицательный.
Вот.
Еще бывает, что говорят, ну, требуют, чтобы ожидаемая
средняя доходность была там больше, чем сколько-то.
Вот.
Ну тут тоже понятно вроде, что… Так, а случайные процессы
были какие-нибудь?
У кого-нибудь?
Нет?
Чего?
Окей.
Ладно.
Окей.
Немножко тоже, может быть, поговорим в процессе.
Так.
Понятно, чтобы означать каждую букву?
При условии SubjectTo сокращённо, то есть это просто две буквы,
которые обозначают, что дальше будет идти список
ограничений.
Что вы не просто писали там минимум, а потом список
функций, но как-то обозначали, что вот это то, а вот это
вот это.
Так, ещё вопросы.
Да, смотрите, по поводу множества X, какие множества не могут
быть описаны вот такими вот ограничениями.
Ну, невыпуклые тоже могут быть.
Громче.
Во.
Да.
То есть если у вас что-то там открыто где-то, то это
всё отправляется вот сюда.
И когда, то есть к чему приводит наличие подобных как-то
открытых множеств в таких постановках, мы там ближе
к концу месяца увидим.
То есть понятно, что минимум на открытом множестве
тяжело найти, поэтому там как-то замыкают или кое-что
другое делают.
Так, вроде я всё пояснил.
Так, да, окей, да, ну, в общем, стандартные определения,
я думаю, все их знают, поэтому, пожалуйста, посмотрите и
спросите, если что-то непонятно.
Наверное, так будет проще, чем я буду сейчас объяснять,
чем там локальность и глобальность отличаются.
Так, ну что, понятно?
Ну, в смысле, прочитали, осознали, вспомнили вопросы.
Окей.
Вот, значит, альтернативная запись вот так вот записывается.
Если нужно вести обозначение решения, именно, как бы,
самого икса, вот, пишут, что икса звёздочка равно
аргмин от вот того, что было вот тут, вот, ну, соответственно,
пишут, что argmax, если нужно найти максимум, и вести
обозначение для элемента, на котором максимум достигается.
То есть понятно, что, в общем-то, множество элементов,
которых достигается, может быть, больше одного элемента,
если у вас такая вот функция, то у вас бесконечно много
минимумов.
Вот.
При этом, как бы, само значение одно, и нас будет интересовать
просто какой-то элемент из множества, минимумов,
как бы.
Я на все эти технические детали сейчас не хочу застрять
внимание, просто, если вдруг у вас, вы начёте об этом
думать, то вы правильно об этом думаете, но мы будем
следовать максимально простой концепции, что
нас интересует просто какой-то элемент из множества,
минимумов.
Вот.
Так, окей.
Да, ну, в общем, теперь, собственно, про то, как решать, вкратце
основные моменты скажу, в дальнейшем будем, собственно,
гружаться глубже в специфику каждого типа задач.
Значит, в общем случае всё плохо, произвольная нелинейная
задача оптимизации, они там НП полные, тяжёлые,
переборные.
В общем случае тяжело решаемые.
Вот.
Порой помогает всякая рандомизация, про которую
тоже немножко поговорим, вот, но тут, как бы, непонятно,
как мне аккуратно работать, так чтобы, там, от запуска
к запуску вы получали что-то более-менее одинаковое,
какие гарантии можно по этому поводу дать, вот.
Ну и сколько там ждать, пока сойдётся к приемливому
решению тоже непонятно.
Вот.
Поэтому с ордомизацией как-то грустно, так, Сон слушал,
да?
Вот.
К счастью, классы, некоторые классы задач решаются
быстро.
Ну, собственно, вот они, наверное, от простого к
сложному более-менее, вот.
Самое простое линейное, нехорошо говорить, в общем,
простое по виду линейное программирование, которое,
там, решали в 50-х, 60-х годах, вот, второе, наименьшие
квадраты, у которых вообще есть аналитическое решение,
но, в общем, там тоже некоторые свои науки про это есть,
вот.
Более, как бы, близкое к нам малоранговая аппроксимация
матриц, 80-е, 90-е, может быть, частично 2000-е, вот, выпукла
оптимизация, окончательно более-менее устаканилась,
как бы, стало более-менее понятно к концу 90-х, вот.
В общем, сейчас, вкратце, поговорим про все эти задачи,
сколько успеем.
Ну, да, вроде, полчасика еще есть.
Вот.
Ну, собственно, история развития, вот, наверное, до вот этого
момента более-менее объективна, вот это вот уже более-менее
субъективно, поэтому, как бы, так, критически тоже
к этому относитесь, вот.
Если вы вдруг поймете в какой-то момент, что тут
что-то неправильно или пропущено, то, пожалуйста, общите и
поясните, будет очень интересно.
Ну, в общем, 40-вый, 50-тый, да, линейно-квадратичная,
потом геометрическая, тоже поговорим ближе через
пару раз, по-моему, уже, что это за геометрическая
оптимизация.
Ну, то есть, программирование, имеется в виду оптимизация
по историческим причинам, потому что, в общем, программинг
с английского переводится, имеется в виду, как оптимизация.
Вот, но, в общем, как это называется, ложный друг
переводчика, короче говоря, что, программирование,
в смысле программинг, это не совсем то же самое, что
программирование в смысле русского языка.
В 90-е Юрий Евгеньевич Нестеров и Аркадий Семенович Немировский
разработали и закончили полинамерные методов внутренней
точки для конических задач.
Что это такое, мы тоже поговорим ближе к концу.
Что вот это такое, ближе к концу, а что вот это такое,
ближе к концу сентября.
В 2000-е годы это более-менее прорабасная оптимизация
и реалацизация комменторных задач, то есть собственно
здесь разработали технологию решения выпуклых задач
более-менее любых, ну не совсем любых, а здесь ее
начали применять для приближения комменторных задач.
В 10-х в основном занимались тактическими методами
не выпуклых задачами и глобальной оптимизацией,
ну и сейчас очень продолжает заниматься, просто это
я скорее наверное то, с чего начало более-менее какой-то
всплеск, рассвет и самое начало, вот, да, как-то так.
Ну в общем, чтобы было более-менее понятно логика развития
науки, наверное в 20-х более-менее будет развиваться всякая
распределенная история, когда у вас много серверов,
вам надо распределенный у вас сохранится параметр
и надо все это уметь оптимизировать, хотя у вас все данные они
хранятся в разных местах физически, вот, ну в общем
это еще впереди.
Ну да, собственно, по современному правлению пару слов, что
мы хотим решать задачи большой размерности, ну где-то
такой наверное, когда у вас там помещается, да, кстати,
кто понимает, сколько, какая размерность помещается
на ноутбуке?
Сколько?
У вас оперативка столько помещается?
Ну а вы как вычисляете когда-то надо… 10-10, интересно, а сколько
это?
Ну 16 это не десятки, ну в общем, но на ноутбуке да,
ну в общем, ну специализированного вам там и про пролезть
уже на ду.
Да, ну в общем, обычно на уровне матрицы вы наверное
на компьютере можете хранить что-то типа десятки тысяч
размерность более-менее безболезненно, вот, ну можете
посчитать там, сколько дабл весь, сколько весит
один дабл и сколько у вас оперативки и потом наверное
квадрат умножить получить не очень хорошую, не очень
хорошую масштабируемость в общем всей этой истории,
ну в общем, про распределенный оптимизатор я тоже немножко
уже упомянул, высокий порядок что-то такое тоже будет
ясно в начале ноября, я надеюсь, вот, и так, стокастика,
невыпуклость, ну и приложение, в общем, немножко про все
это в разные моменты курса будет упоминаться и я надеюсь
будет понятно к чему это все было сейчас сказано,
вот, некоторые анонс на будущее, да, в общем, линейное
программирование, линейный программинг, в общем, придумали
на прямолинейно, ставится стандартные в форме, я
говорю стандартные потому что их там несколько бывает
разных они все равносильны но для простоты проще думать
об этом как стандартная форма вы минимизируете
линейную функцию на некотором полиэдральном множестве
ну то есть многоугольник короче говоря набор линейных
ограничений неравенств ну типа вот такой видно вот
и значит вопрос как найти решение понятное дело вот
ну аналитически вы его не найдете почему вы его аналитически
найдете станет ясно примерно через месяц полтора вот
там все довольно несложно кто может угадать где вообще
решение искать вот исходя просто глядя на картинку
и здравый смысл подключить надо на границе еще поточнее
вершине да это правда решение будет вершине вот и по
сути дела грубо говоря все это можно свести к перебору
вершин да ну раз мы знаем вершине давайте переберем
а сколько тут надо немножко наверное вспомнить либо
комбинаторику либо тоже здравый смысл подключить
сколько вершин может быть у вот такого вот множества
в инмерном пространстве скорее интересует асимптотика
какой самый плохой многоугольник можно придумать громче квадрат
так интересно еще какие варианты так ну это снизу
в лучшем случае скатимся скатимся конечно не беспокойтесь
все так и будет то есть их там экспоненциально много
поэтому перебирать грустно поэтому перебирают хитрым
образом гуляя по вершинкам так чтобы значение цельевой
функции не уменьшалось вот это все я тут пару слов
рассказываю но это типа лет 30 наверное работы большого
сообщества людей вот для того чтобы разработать
собственно симблекс метод вот который тут вот решает
эти такие задачи гуляя по вершинкам и минимизируя
вот такую функцию вот в общем метод настолько классный
что входит в топ 10 алгоритм 20 века вот тут и списочек
можно по ссылке будет перейти посмотреть какие еще методы
входит кстати может кто как вы думаете какие методы
пошли в топ 10 лучших алгоритмов какие ваши любимые алгоритмы
короче говоря вопрос очень простой а я ничего не слышу
давайте по очереди так все замолчали понятно ну не
совсем да быстрое проявление фурье ok кто знает что такое
быстрое проявление фурье так еще да и экстра так
еще честно говоря не помню входит ли он туда но может
входит это то же самое почти quicksort да кышам вроде нет
слишком специально кажется так ну наверное кто слишком
старая слишком специально вот это нужно знаете очень
много где то есть вот эти задачи то есть почему они
как бы там ими занимались сто лет потому что к ним
сводится там составление расписаний там поездов
самолетов всего прочего к ним сводится та же самая
те же там и финансы в некотором в некотором там в некотором
виде нет ну почти короче в общем посмотрите кому
интересно там все должно работать вот возможно часть
это вообще еще не знаете но в общем для интереса
развития круга расширение горизонтов мне кажется
достаточно полезно там что-то продолжать и есть да но
я не уверен что хаффман ну то есть там вам картинки
что ли короче ладно так давайте вернемся к почему
это важно вот и значит расписание финансы по-моему какие-то
рекомендации на ютубе делаются вот решая какую-то такую
задачу вот если будет интересно я пришлю ссылочку на источник
вот и для решения таких задач как бы есть огромное
количество разных разных пакетов там одни открыты
вот и что более важно такие задачи являются кирпичиком
для решения такого же рода задач только если часть
иксов дискретные то есть вам наверное говорили что
есть у вас есть какая-то дискретность в допустим
ножице то все плохо и надо перебирать более-менее
ну или там ветви границы слышали кто-нибудь такие
слова да наверное да ну да да да вот это вот из той же
из вот этой всей науки вот и то как бы все плохо экспоненциально
либо приближенно и типа не очень понятно что делать
вот здесь оказывается что есть достаточно эффективная
технология по тому как свести одну задачу дискретной
оптимизации с линейной с частично целочисленными
или бинарными переменными к последовательности задач
линейного программирования такого с непрерывными
переменными вот и поэтому эффективно быстро решать
вот такое это значит что эффективно и быстро решать
дискретные задачи которые очень важны нужны в технике
и производстве вот поэтому это все важно и ну про это
мы поговорим наверное на одной или двух лекциях не
больше вот и ну в общем я все ссылки дам я надеюсь что
вкратце будет понятно принцип строения методов и основные
нюансы в их запуске и реализации так понятно как что зовет задачи
где нужно почему важно где искать решение те формальные
доказательства обсуждения будут там ближе к концу там
в одной из последних лекций вопросы
окей
вторая задача очень простая на меньшей квадраты классика жанра я думаю типа 19 век наверное вот
проводим кривую по точкам короче говоря задача называется вот если у вас так понятно ли все
обозначения давайте сразу я задам этот вопрос или непонятно что-то там палочки нижняя двойка верхняя двойка
а прекрасный вопрос ну вот смотрите вот здесь по-моему короче говоря точки набросные в соответствии
по-моему синусом зашумленным вот а кривая там какой-то куб или пятая степень и надо найти
коэффициенты вот то есть у нас есть точки это у них есть x и соответственно y вот y идет вот
в x мы считаем значение нашей как бы базистой функции что ли может так сказать вот и ставим
ее в столбцы матрицы а и хотим понять как из в общем хотим понять как какая функция с
какими параметрами линейными приближает нашу неизвестную функцию ничего не понятно да
смотрите прямая почему была прямая потому что у вас был параметр параметр как-то угол
наклона и сдвиг так вот но все будет работать если вы линейную модель замените на квадратичную
или полинамиальную важно чтобы у вас коэффициенты были линейно входили в выражение непонятно
громче вроде понятно прекрасно так да давайте я вижу что как это может быть слишком быстро вот
смотрите давайте попробуем что-то порисовать так а может быть вот так надо сделать
вроде получше стал да а вот если вот так сделать очень огонь да талз разрешение поправить ну
вот смотрите когда у вас было кто-то про что-то вот такое да наверное было
так и чего-нибудь вот так типа у вас был дан x некоторые ваши точки вы хотели найти
так ну это есть про прямую вот начало прошу но тоже сам будет работать если у вас как бы
ваш f от w x будет грубо говоря там w 1 x квадрат плюс w 2 x там в общем ну например так ну можно
там типа x третий там ничего не важно какая у вас как бы никакой у вас базис да простите за
почерк я буду над этим работать вот важно что у вас вот вот эти вот коэффициентики они все линейно
входят понятно ну и как это записать в матричном виде очень просто у вас ваше x там единичка
2 и 3 это типа вот так а там w 1 w 2 ну почти w 3 w 2 w 1 w 4 это типа столбец вот ну и
собственно вы умножаете получаете число и вы читаете из числа понятно ну и поскольку у вас
несколько то вы как бы их так стэкаете в строке и вас получается матрица и справа вектор
да нет
вот ну собственно вот да наверное я сюда добавлю более простую запись чтобы не шокировать
тех кто будет это впервые смотреть вот ну и получается вот такая вот довольно ну короче даже
если вы не знаете модель но вы можете там условно какие-то базистые функции взять и
попытаться линейную комбинацию к зафи можно там sin и cos в общем все что вы знаете так
установка значит понятно так хорошо вот здесь стоит двойка что это значит двойка так хорошо
какие нормы еще есть что это какая-то цифра стоит нет цифра 1 да первая норма у нас будет
активно использоваться это сумма модулей элемента вектора вот мы еще я сейчас это еще
напишу но видимо надо будет добавить на слайд вот и бесконечная норма нас будет тоже интересовать
это максимум модули элементов вот пожалуйста потихоньку запоминайте как это все называется вот
значит у такой значит есть аналитическое решение вот оно вот значит уметь получать и объяснять
почему решение именно такое в общем надо будет непременно если вы хотите сдать курс вот поэтому
если вы попадаете на переиздачу а да кстати про переиздачу раз уж я зашла значит можно будет
получить незачет от семинариста и тогда переиздача в отведенное время будет мне вот у нас такое
распределение труда со семинаристами я принимаю все переиздачи вот надеюсь таковых не будет но на
всякий случай сообщаю чтобы вы понимали что надо будет делать вот для вычисления этой штуки есть
эффективные методы то есть стратегия давайте мы все посчитаем вычислим обратную матрицу и
множим ее на вектор это плохая идея вот ближе к делу ну ближе вот когда мы к этому подойдем я
покажу почему это плохая идея вот и как бы с чем это связано и что ломается вот может что-нибудь
знает уже почему почему это плохая идея так сначала вы да но не только далее во да это другая
проблема немножко но тоже как бы в пределе вырождается в то что вот это может быть вырожденной
матрица кто знает как посмотреть на матрицу а точнее что надо проверить у матрицы а чтобы
понять что вот это будет вырождено ну матрица ведь она прямоугольная так ранг надо проверить
окей и чем вы надо сравнить да с миу ну чаще всего надо будет сравнить с том столбцов конечно
потому что здесь ну понятно я надеюсь вот что наличие линейно зависимых столбцов приводит
к тому что вот это получается вырождено нужно ли это формально показать это буквально одностройщика
поэтому это можно сделать или это всем очевидно да давайте ну вот смотрите
нас интересует вот такая вот матрица да что мы про нее знаем знаем что если мы возьмем от
нее вот такое выражение то есть мы попробуем проверить ее на определенность да то это то
то это то же самое что и вот так очевиден ли такой переход
да нет не очевиден не очевиден окей ну давайте вспоминать значит а б транспонированная равно
б транспонированная на транспонированная стало ли сейчас очевидно или не очевидно вот это
матрешка короче надо ли пояснять подробнее прекрасно давайте давайте вспомним что такое она
б да ну вот она б и и жи а и ка б ка жи
так а сейчас надо
или нет
ну чего на
а смотрите а а икс вот это это было а это б
вы правильно спросили или нет
сейчас погодите я запутался в том давайте вот так вот эту строчкой надо объяснить вот эту а тут
вот же а я понял смотрите да окей что такое вторая норма вот да вечный вопрос это икс транспонир
сумма квадрата ну отлично все так нужно ли еще что-то пояснять про транспонирование там
нет вроде ок так всем ок так хорошо ну и в общем-то понятно наверное что ну вот эта матрица будет
не строго положительно определена когда эта штука будет нулём ну она 0 когда вот это 0 а если
это 0 для ненулёвого икса это значит что столб цели независима просто по определению
ну да чуть больше одной строчки ну ладно смотрите значок положительный полуопределенности вот такой
вот ну соответственно строго определенности там без нижнего вот это вот завиточка вот отрицательный
такой же только в другую сторону поэтому если мы будем дальше писать что-то типа а больше либо
равно нуля то это по элементной больше либо равно нуля а если вот такая круга круглая будет штука то
это определенность пожалуйста не путайте а то будет печально ну то есть понятно что вот это вот
то что а больше либо равно нуля это типа n квадрат просто линейных ограничений
ну смотрите вот это вот ну определение положительной определенности я с этого
как раз начал не просто так вот нам надо чтобы проверить знак вот этой штуки для
произвольного ненулёвого икса так прекрасно мы преобразовали так что это квадрат второй
нормы он всегда не отрицателен ну то есть поэтому эта штука положительно положительно
да ой простите да вы правильно меня тут поймали заметили тут надо вот так
равенство потому что мы хотим получить условия при котором эта штука не строго больше нуля
то есть если бы она была строго больше нуля то вот здесь был не было бы этого нижнего нижнего
вот этого вот завиточка полуопределенность
но если это равно нулю это значит что матрица будет вырождена мы хотим понять при каких
условиях на исходную матрицу эта матрица будет вырождена короче немножко такая логика
да отлично ну связано с тем что надо решить линейную систему с этой матрицей она может
быть вырождена грустно будьте здоровы непонятно не очень понятно окей так вспоминаем линейную
алгебру хорошо что мы знаем про системы линейных уравнений мы знаем что решение
определено когда матрица полного ранга она перк квадратная должна быть а во-вторых там
должны быть ли на независимые сроки столбцы был такое как-то один одинокий одинокий крик
в пустыне что называется да ну то есть обратная матрица определена только для матриц у которых
полный ранг там она квадратные там метод гаусс и может он знает но вот там если вы начнете
его делать для вырожденной матрицы у вас получится там деление на ноль в некотором момент вот
нет вот да это спасибо за вопрос смотрите эта штука еще называется решение переопределенных
переопределенных переопределенных линейных систем потому что вот здесь видите квадратная
матрица стоит то есть мы не можем просто взять и сказать окей а минус первой потому что это
квадратная штука вот и тут на самом деле хорошо бы еще мне добавить что м больше n да я добавлю
высокая такая матрица вот и что такое решить такую систему ну вот ее не в некотором классическом
как в подходе ее решать смысле минимизации просто невязки то есть найти такой x так чтобы
произведение было можно ближе к правой части по второй норке вот поэтому вся эта балалайка
идет сюда и вот решение записывается вот так при этом никто не гарантирует что это совместная
будет система то есть у вас там невязка может быть не ноль запросто
ну и прекрасно очень хорошо ну мы не мы ну окей значит кому-то будет полезно то что будет тут
происходить так понятно в каком месте был непонятно как получаем это будет через пару месяцев пока
просто как бы анонс анонс и проблемы которые этот анонс собой несет чему то есть ищем решение
такой задачи у нее аналитическое решение такое проблемы с его явным применением в том что во
первых тут может быть так плохая обусловленность то есть ошибки округления при обращении там не
надо никогда обращать и второе то что она вообще может быть выражено как мы только что показали
если столбцы а линии независимая такая вот сложная цепочка да да вот вот вот она а x минус
b вторая норма в квадрате то есть я сюда добавлю какую-нибудь простую простой вид этой же задачи
просто это в общем виде написано поговорим про это в свое время про как там что обрабатывать это
немножко отдельная история так да в общем все это технология поэтому в принципе вам нужно
вызвать правильную функцию в правильном языке программирование из правильной библиотеки и
все вам сделает благополучно с некоторой точностью параметры запуска вам нужно понимать и про это мы
будем немножко позже говорить да у этой штуки есть статистическая интерпретация через как
будет сказать короче оценку максимального правдоподобия может быть кто-то про это слышал
кто слышал в общем ладно про это в общем не удивляйтесь когда на статистике у вас такая же
значит выплавить в некоторый момент вот она выплавится ровно вот вот в силу вот этого пункта так
и последний на сегодня к сожалению опять ничего не успел но это стандартная история вот короче
малоранговая опроксимация low rank approximation да я буду стараться давать всегда англоязычные
термины чтобы вы могли искать литературу и источники более-менее по всему интернету вот
так ну давайте смотрим на обозначение буковки все понятны отлично знаете фрабениус его норма
ну тоже норма да только фрабениус вы нет фрабениус оба нормы это просто сумма
квадрат ну короче корень и сумма квадратов всех элементов матрицы в общем тоже самое что для
вектора l2 но не совсем ну то есть они они не друг другом не индуцируется так а про матрицы
у вас что не было когда-нибудь ok ладно тогда я напомню в следующий раз может быть или да в
следующий раз это будет уместно вот короче хотим найти дана некоторая прямоугольная матрица x ой
а простите да вот она вот и хотим найти такую матрицу x ранга не больше к что короче они
хорошо друг друга приближают понятна задача так ну давайте я напишу да надо
будет сюда добавить фрабениус его норма да это ладно не хочется порт не хочет слайд конечно
разбавлять ну давайте я напишу тогда то есть то есть это f ну вот так
ну в общем тоже самое короче что было для вектора только для матрицы вы просто все
складывайте с квадратами и не мучаетесь так буквально давайте еще пять минут я надеюсь
я успею вот в общем геометрически это ну в смысле геометрически на картинке это вот так вот
выглядит то есть ищем две матрицы на самом деле которые одна высокая другая длинная вот и их
произведение должно давать приближать исходную матрицу да это называть сингулярно разложение
имеет аналитическое решение хотя задача сложная в плане того что она не выпукло и у нее там не все
хорошо со свойствами но о чудо есть аналитическое решение это раз и есть эффективные устойчивые
методы которые это решение находят это два вот значит три матрицы две из которых унитарные то
есть артегональные у нас все действительное вот и одна диагональная сигма вот берете первый
ка столбцов ка строк и вас получается решение почему это важно ну это важно потому что нужно
что-то зажимать и памяти всегда не хватает вот ну например возьмем картинку это типа изображение
трехмерный тензор с такими размерностями вот и возьмем эффективный ранг для каждого цвета вот
ну вот тут ранг ранг 10 вот я посчитал по каждому цвету сингулярное разложение состэкал каждую
матричку получил вот такую картинку получилось джать ну типа вот во столько вот ну типа 3 3 процента
вот то есть тройка здесь потому что три матрицы вот и вот выражение в числителе это по сути
количество чисел которые надо хранить для того чтобы ну вот это короче хранить то есть тут
вот вот здесь вот м на к тут n на к и тут диагональка вот значит это было 10 это 50 ну уже типа получше
и 100 кажется почти ну тут по краям есть некоторые артефакты вот здесь вот а так в целом вроде
довольно неплохо ну и типа в три раза вот надо меньше элементов хранить чтобы можно было потом
восстановить как восстановить изображение вот но это все было да вот еще но вот это отношение того
сколько элементов надо хранить если воспользоваться вот этим представлением виде произведения к тому
сколько было изначально то есть три матрицы по 493 700 вот так 100 150 да но в общем как ранг определить
по убыванию сингулярного чисел то есть по убыванию того что на диагонали стоит вот так ну и ладно давайте
это это я в следующий раз более подробно расскажу так все всем спасибо в следующий раз продолжим с
