[00:00.000 --> 00:05.000]  ДПИТ на 2 в степени минусы по 2.
[00:05.000 --> 00:10.000]  С из Н по, видимо, и минус 1.
[00:10.000 --> 00:14.000]  ДПИТ на 2 в степени минусы по 2.
[00:14.000 --> 00:17.000]  Нет, С-ка надо.
[00:17.000 --> 00:28.000]  ДПИТ на 2 в степени минусы по 2.
[00:28.000 --> 00:32.000]  Так.
[00:32.000 --> 00:37.000]  Сейчас, не перебивайте, спокойно.
[00:37.000 --> 00:40.000]  Идея такая, пусть ДПИТ количество связанных графов.
[00:40.000 --> 00:42.000]  Что такое количество связанных графов?
[00:42.000 --> 00:45.000]  Это количество всего графов, минус количество несвязанных графов.
[00:45.000 --> 00:53.000]  В каждом связанном графе есть компоненты связанности, которые содержат вершину номер 1 и все остальные.
[00:53.000 --> 00:57.000]  Эта компонента содержит и вершин от 1 до N-1.
[00:57.000 --> 00:59.000]  Вот мы и перебираем.
[00:59.000 --> 01:02.000]  Мы выбираем ее, то есть что это за вершины.
[01:02.000 --> 01:04.000]  Вот и минус 1, первая вершина на месте.
[01:04.000 --> 01:08.000]  Мы выбираем ДПИТ способ сделать ее связанной.
[01:08.000 --> 01:09.000]  Это должно быть связанной.
[01:09.000 --> 01:16.000]  И 2 в степени все остальные ребра на всех остальных вершинах.
[01:16.000 --> 01:18.000]  Вот.
[01:18.000 --> 01:19.000]  Так.
[01:19.000 --> 01:22.000]  А теперь осталась только задачка.
[01:22.000 --> 01:23.000]  А теперь задача.
[01:23.000 --> 01:26.000]  Упихайте эту формулу.
[01:26.000 --> 01:33.000]  То есть упихайте эту формулу так, чтобы она считалась не за квадрат.
[01:33.000 --> 01:34.000]  Вот.
[01:34.000 --> 01:37.000]  Но, видимо, это уже Денис на лекции рассказывал.
[01:37.000 --> 01:40.000]  Ну или...
[01:40.000 --> 01:41.000]  Да.
[01:41.000 --> 01:43.000]  Ой, а точно цшка нужна вообще, да?
[01:43.000 --> 01:46.000]  Черт, нужна.
[01:46.000 --> 01:47.000]  А то просто...
[01:47.000 --> 01:50.000]  Ну как бы нет, просто возбождаем.
[01:50.000 --> 01:53.000]  Цшка не из N-1 по N-1.
[01:53.000 --> 01:54.000]  Да.
[01:54.000 --> 01:55.000]  Н-1 по N-1.
[01:55.000 --> 01:57.000]  Хорошо, да, N-1.
[01:57.000 --> 01:59.000]  Ну и это помогает?
[01:59.000 --> 02:01.000]  Не сильно, да, неправда.
[02:01.000 --> 02:04.000]  То есть нет, в общем, просто на халяву сказать, что давайте
[02:04.000 --> 02:07.000]  рассмотрим производящую функцию ДПИ, заметим уравнение,
[02:07.000 --> 02:08.000]  пока не помогает.
[02:08.000 --> 02:11.000]  Ну можно почитать количество, наоборот, не связанных грамм.
[02:11.000 --> 02:13.000]  Кажется, чуть-чуть упрощаем, все.
[02:13.000 --> 02:14.000]  Отдаешь один.
[02:14.000 --> 02:15.000]  Ну да.
[02:15.000 --> 02:16.000]  Ну да.
[02:16.000 --> 02:19.000]  Нет, есть, конечно.
[02:19.000 --> 02:20.000]  Ага.
[02:20.000 --> 02:23.000]  Нет, ЦСН-1 по...
[02:27.000 --> 02:28.000]  Нет.
[02:28.000 --> 02:29.000]  Сильное желание.
[02:29.000 --> 02:31.000]  Подожди, а как-то не связанная грамма.
[02:31.000 --> 02:33.000]  Будешь сказать, там же форма меняется.
[02:33.000 --> 02:35.000]  Там же ДПИ будет другая уже, да?
[02:35.000 --> 02:36.000]  Да, это правда.
[02:36.000 --> 02:37.000]  Да.
[02:37.000 --> 02:38.000]  Я не прав.
[02:38.000 --> 02:39.000]  Там никакой причины общаться.
[02:39.000 --> 02:40.000]  Да.
[02:40.000 --> 02:41.000]  Да.
[02:41.000 --> 02:42.000]  Нет, может, вы думаете, что все не сильно?
[02:42.000 --> 02:43.000]  Сходите с ним просить.
[02:43.000 --> 02:45.000]  Ну так, а больше всего расписать двоечи глажки под суммой.
[02:45.000 --> 02:49.000]  Нет, тут, видимо, логика такая.
[02:49.000 --> 02:51.000]  Значит, это N-1 факториал.
[02:51.000 --> 02:54.000]  Тут мы делим на I-1 факториал.
[02:54.000 --> 02:57.000]  И тут N-I факториал.
[02:57.000 --> 02:58.000]  Да?
[02:58.000 --> 03:01.000]  Поэтому как бы есть идея такая.
[03:03.000 --> 03:04.000]  Как?
[03:04.000 --> 03:06.000]  Ну, ЦСН-1.
[03:06.000 --> 03:09.000]  Факториал может пихать в экспенсионную прозвищу функцию.
[03:09.000 --> 03:10.000]  Да-да.
[03:10.000 --> 03:12.000]  Вот непонятно, что делать.
[03:12.000 --> 03:13.000]  А, нет.
[03:13.000 --> 03:14.000]  А, смотрите.
[03:14.000 --> 03:15.000]  Нет, смотрите.
[03:15.000 --> 03:16.000]  Нет, все круче.
[03:16.000 --> 03:17.000]  Смотрите.
[03:17.000 --> 03:19.000]  Запишем равенство таким образом.
[03:19.000 --> 03:27.000]  ДПН на N-1 факториал равно 2 в степени ЦСН по 2 делить
[03:27.000 --> 03:34.000]  на N-1 факториал минус сумма по всем И от 1 до N-1.
[03:34.000 --> 03:41.000]  Значит, ДПИТ будет 0.
[03:41.000 --> 03:48.000]  ДПИТ делить на I-1 факториал умножить на 2 в степени ЦСН-I
[03:48.000 --> 03:52.000]  по 2 делить на N-I факториал.
[03:52.000 --> 03:53.000]  Вот.
[03:53.000 --> 03:54.000]  Вот.
[03:54.000 --> 03:55.000]  Так.
[03:55.000 --> 03:58.000]  Ну, я не знаю, насколько это честное умножение я сейчас
[03:58.000 --> 03:59.000]  не готов сказать.
[03:59.000 --> 04:02.000]  А, ну, видимо, надо сказать, что ДП от 0 равно 0, видимо,
[04:02.000 --> 04:03.000]  для удобства.
[04:03.000 --> 04:04.000]  Да?
[04:04.000 --> 04:05.000]  Да.
[04:05.000 --> 04:06.000]  А ДП от 0 равно 0?
[04:06.000 --> 04:07.000]  Да.
[04:07.000 --> 04:19.000]  Ну, то есть, да, давайте, вот это ряд А, а это ряд B.
[04:19.000 --> 04:27.000]  А это ДП, а это X.
[04:27.000 --> 04:30.000]  Вот этот ряд X.
[04:30.000 --> 04:33.000]  Тогда получается, тогда должно получается, вроде как
[04:33.000 --> 04:35.000]  все более-менее сходится.
[04:35.000 --> 04:38.000]  Ну, если считать, что ДП от 0 равно 0, да, то есть вот
[04:38.000 --> 04:44.000]  типа X от 0 равно 0, да, и B от 0 равно 0, кстати, давайте
[04:44.000 --> 04:51.000]  еще скажем, чтобы удобно было.
[04:51.000 --> 04:53.000]  Потому что мы так и хотели сказать.
[04:53.000 --> 04:54.000]  Сколько?
[04:54.000 --> 04:56.000]  Ну, сколько существует связанных графонов для вершинах?
[04:56.000 --> 04:57.000]  Ответ.
[04:57.000 --> 04:58.000]  Черт его знает.
[04:58.000 --> 05:04.000]  Ну, для N минусы-то он нормальный, потому что хочется записать
[05:04.000 --> 05:07.000]  вот такое уравнение.
[05:07.000 --> 05:08.000]  Да, X.
[05:08.000 --> 05:14.000]  Да, X, нет, у X умножить не может, и вот тут, и тут N
[05:14.000 --> 05:16.000]  минусы-то, как бы, смотрите, тут перемножается, и тут
[05:16.000 --> 05:18.000]  перемножается N минусы-то член.
[05:18.000 --> 05:20.000]  Так что, казалось бы, кайфец.
[05:20.000 --> 05:23.000]  То есть, я говорю, то есть, надо только, чтобы и у
[05:23.000 --> 05:27.000]  X и у B, значит, там были, там, как бы, вначале 0-ки,
[05:27.000 --> 05:30.000]  видимо, для того, чтобы это, как бы, было адекватно.
[05:30.000 --> 05:33.000]  Ну, чтобы там вот с N-ными членами не было.
[05:33.000 --> 05:35.000]  Нет, а это просто вот рассмотрим.
[05:40.000 --> 05:42.000]  Ну, похоже, но не совсем.
[05:42.000 --> 05:45.000]  Видите, тут N и N минус 1, а тут N минусы и N минусы.
[05:45.000 --> 05:47.000]  То есть, разница.
[05:47.000 --> 05:49.000]  Разница есть.
[05:49.000 --> 05:51.000]  Ну, видимо, B это просто умножить на N, да?
[05:51.000 --> 05:55.000]  Ну, нет, ну там формально можно говорить, что сейчас,
[05:55.000 --> 05:58.000]  как бы, что это такое.
[05:58.000 --> 06:00.000]  Знаете, что это такое?
[06:00.000 --> 06:03.000]  Нет, а равно B' умножить на X.
[06:03.000 --> 06:05.000]  Вот можно вот так написать.
[06:05.000 --> 06:09.000]  Да, а мало кто знает, то формальные ряды можно дифференцировать.
[06:09.000 --> 06:13.000]  Вот, да.
[06:13.000 --> 06:16.000]  Ну, просто как убить лишнюю N знаменателя?
[06:16.000 --> 06:19.000]  Дифференцируем, а потом домножаем обратно на X.
[06:19.000 --> 06:23.000]  То есть, степень при X остается, а в знаменателе вот лишняя N убивается.
[06:23.000 --> 06:27.000]  Если мы, короче, поставим сейчас вместо A' на X нас ползет,
[06:27.000 --> 06:30.000]  что X равен нулю решения.
[06:30.000 --> 06:32.000]  Ну, X равно...
[06:32.000 --> 06:34.000]  Почему X равно нулю решения?
[06:34.000 --> 06:36.000]  Просто она шутка, потому что у нас рядом означает...
[06:36.000 --> 06:37.000]  Да, да, да.
[06:37.000 --> 06:40.000]  Ну, в смысле, я понимаю, это просто шутка была.
[06:40.000 --> 06:42.000]  А, шутка.
[06:42.000 --> 06:44.000]  Ага, да.
[06:44.000 --> 06:46.000]  Да, шутка, да.
[06:46.000 --> 06:47.000]  Ну, вот.
[06:47.000 --> 06:49.000]  Ну, нет, то-то по...
[06:49.000 --> 06:50.000]  Ой, замечательно.
[06:50.000 --> 06:51.000]  Да, 1 плюс B, во.
[06:51.000 --> 06:52.000]  Все.
[06:52.000 --> 06:53.000]  Ну, да, вот.
[06:53.000 --> 06:55.000]  То есть, в сущности, вот.
[06:55.000 --> 06:56.000]  Ну, да, вот.
[06:56.000 --> 06:58.000]  То есть, в сущности, гениальный ZD.
[06:58.000 --> 07:04.000]  Считается, если там еще нужен только для фиксированного N?
[07:04.000 --> 07:06.000]  Да, маловероятно.
[07:06.000 --> 07:08.000]  Как мы, кстати, расти получаем?
[07:08.000 --> 07:10.000]  Последний расти получается просто с первого.
[07:10.000 --> 07:11.000]  Нет.
[07:11.000 --> 07:12.000]  Если вам...
[07:12.000 --> 07:14.000]  Нет, смотря для какого фиксирования.
[07:14.000 --> 07:17.000]  Нет, если ваша задача посчитать для какого-нибудь N эту штуку,
[07:17.000 --> 07:19.000]  то как бы...
[07:19.000 --> 07:24.000]  То как бы да, на самом деле, реально выполнять деление никому не надо, естественно.
[07:25.000 --> 07:30.000]  Потому что как найти N-ый член вот этой вот формального степенного ряда, да?
[07:30.000 --> 07:33.000]  Да, нет.
[07:33.000 --> 07:37.000]  Нет, потому что у нас есть стандартный факт, как выпустить N-ый ряд.
[07:37.000 --> 07:43.000]  То есть, допустим, у нас есть какой-нибудь такой ряд вида P от X делить на Q от X.
[07:43.000 --> 07:46.000]  Так, ну, вот.
[07:46.000 --> 07:47.000]  Ну, вот.
[07:47.000 --> 07:49.000]  Причем N, допустим, не сильно...
[07:49.000 --> 07:50.000]  Ну, вот.
[07:50.000 --> 07:51.000]  Так, ну, вот.
[07:51.000 --> 07:58.000]  Причем, допустим, допустим, еще и там выясняется, что, допустим, Q может быть там не сильно большое какое-нибудь, да?
[07:58.000 --> 07:59.000]  Ну, вот.
[07:59.000 --> 08:01.000]  Ну, желательно, чтобы там Q было не сильно большое.
[08:01.000 --> 08:02.000]  Просто у нас...
[08:02.000 --> 08:05.000]  Да, нет, это рассказывал, потому что это нужно было, когда мы линейную рекурренту искали,
[08:05.000 --> 08:07.000]  но, в принципе, это должен работать и так.
[08:07.000 --> 08:10.000]  Потому что, в принципе, можно написать вот такую маленькую приятную вещь.
[08:15.000 --> 08:17.000]  Вот.
[08:17.000 --> 08:19.000]  Значит, чем это нам помогает?
[08:19.000 --> 08:21.000]  То есть, пока ничего не делим, только перемножаем.
[08:21.000 --> 08:22.000]  Ну, чем это нам помогает?
[08:22.000 --> 08:28.000]  А помогает нам это тем, что вот в этой штуке есть только там X квадраты.
[08:28.000 --> 08:30.000]  То есть, ну, вот.
[08:30.000 --> 08:32.000]  А так как есть при X квадрат...
[08:32.000 --> 08:38.000]  То есть, получается, здесь, на самом деле, коэффициентов не нулевых будет, во-первых, столько же, сколько было раньше.
[08:38.000 --> 08:46.000]  А во-вторых, вот здесь их, конечно, будет уже в два раза больше, но при этом заметим, что интересует нас только половина из них.
[08:47.000 --> 08:50.000]  Ну, вот это, то есть, эту штуку можно написать так.
[08:50.000 --> 08:52.000]  P штрих от X.
[08:52.000 --> 08:54.000]  Ну ладно, давайте так.
[08:54.000 --> 08:58.000]  P1 от X квадрат плюс X на P2 от X квадрат.
[08:58.000 --> 08:59.000]  Вот так назовем.
[08:59.000 --> 09:03.000]  И делим мы это на там Q1 от X квадрат.
[09:03.000 --> 09:05.000]  Вот так.
[09:05.000 --> 09:11.000]  То есть, в результате, вместо того, чтобы искать n-ый коэффициент вот такого отношения,
[09:12.000 --> 09:13.000]  Нужно найти n пополам.
[09:13.000 --> 09:15.000]  Ты там плюс-минус один коэффициент.
[09:15.000 --> 09:19.000]  Там либо такой рекуррент, либо такой.
[09:19.000 --> 09:21.000]  Вот.
[09:21.000 --> 09:23.000]  Так же.
[09:23.000 --> 09:25.000]  То есть, а, правда.
[09:25.000 --> 09:26.000]  Ну вот.
[09:26.000 --> 09:27.000]  Так же соответственно.
[09:27.000 --> 09:29.000]  То есть, единственная проблема, что...
[09:29.000 --> 09:30.000]  Ну вот.
[09:30.000 --> 09:34.000]  Нет, почему лог квадрат?
[09:34.000 --> 09:35.000]  Ну, в принципе, да.
[09:35.000 --> 09:36.000]  Получается, да.
[09:36.000 --> 09:37.000]  Получается лог квадрат.
[09:37.000 --> 09:39.000]  Поделить, конечно, лучше.
[09:39.000 --> 09:41.000]  Ну, если вы там 100 тысяч на элементах.
[09:41.000 --> 09:45.000]  То есть, в данном случае, да, в рекурренте он у нас неплохо работал, когда у нас Q было мелкое.
[09:45.000 --> 09:48.000]  Ну, помните, у нас там n log n log k получался, да.
[09:48.000 --> 09:50.000]  Вот.
[09:50.000 --> 09:51.000]  То есть, это, конечно, да.
[09:51.000 --> 09:52.000]  Ну вот.
[09:52.000 --> 09:55.000]  То есть, поделить, поделить, конечно, будет все-таки проще.
[09:55.000 --> 09:57.000]  Да.
[09:57.000 --> 09:59.000]  Чего?
[10:01.000 --> 10:03.000]  Так.
[10:03.000 --> 10:05.000]  Ну да.
[10:05.000 --> 10:07.000]  Если можно сказать.
[10:07.000 --> 10:09.000]  Там на кейф было стоять про то, как я делаю.
[10:09.000 --> 10:11.000]  И сказать, типа, я на члене рекуррента.
[10:11.000 --> 10:12.000]  И там комментарии.
[10:12.000 --> 10:14.000]  Прямо в точно такие же обозначениях.
[10:14.000 --> 10:15.000]  Я смотрю, такой, типа.
[10:15.000 --> 10:16.000]  Прямо.
[10:16.000 --> 10:17.000]  Прямо.
[10:17.000 --> 10:19.000]  Оказалось, что комментарий оставил некий голова.
[10:19.000 --> 10:23.000]  Ну, я вам больше скажу, я этот лайхак оттуда же и взял.
[10:23.000 --> 10:25.000]  Ну да.
[10:25.000 --> 10:27.000]  Ну что, я тоже кейф читаю, да.
[10:27.000 --> 10:29.000]  Вот так мало.
[10:29.000 --> 10:30.000]  Так что, да.
[10:30.000 --> 10:32.000]  Это очень понравилось.
[10:32.000 --> 10:34.000]  Ну как бы, да.
[10:34.000 --> 10:35.000]  Да.
[10:35.000 --> 10:36.000]  Да, конечно, да.
[10:36.000 --> 10:38.000]  Можно, конечно, тебе сказать, да, господи, вы что думаете?
[10:38.000 --> 10:40.000]  Майк Мирзаянов думаете, откуда?
[10:42.000 --> 10:43.000]  Да.
[10:43.000 --> 10:44.000]  Но это как всегда.
[10:44.000 --> 10:45.000]  Да.
[10:45.000 --> 10:47.000]  Как шутка, это не заходит, потому что не является общей
[10:47.000 --> 10:49.000]  сделанным фактом, что он из Саратовского государственного
[10:49.000 --> 10:50.000]  университета там, допустим.
[10:50.000 --> 10:51.000]  Да.
[10:51.000 --> 10:53.000]  А в какой-то момент переехал в ЭТМО вместе с Кодфорсиасом.
[10:53.000 --> 10:54.000]  Ну.
[10:54.000 --> 10:55.000]  Вот.
[10:55.000 --> 10:57.000]  Забыл за собой и Саратовский?
[10:57.000 --> 10:58.000]  Нет.
[10:58.000 --> 10:59.000]  Ну, не знаю.
[10:59.000 --> 11:00.000]  Нет.
[11:00.000 --> 11:01.000]  Ну как?
[11:01.000 --> 11:02.000]  Нет.
[11:02.000 --> 11:03.000]  Ну как архив?
[11:03.000 --> 11:04.000]  Африканский видео все-таки.
[11:04.000 --> 11:07.000]  Или какой архив он был?
[11:07.000 --> 11:08.000]  Нет.
[11:08.000 --> 11:09.000]  Ну как такие?
[11:09.000 --> 11:10.000]  Нет, СГУ.
[11:10.000 --> 11:11.000]  Нет, ну да-да-да-да.
[11:11.000 --> 11:14.000]  А СМС ГУ, конечно, да, какой-то аналактимусы есть, это да,
[11:14.000 --> 11:17.000]  но кто поддерживает, сейчас я не знаю.
[11:17.000 --> 11:19.000]  Он просто отдельно в ТАФУ нахвилит.
[11:19.000 --> 11:20.000]  А, да.
[11:20.000 --> 11:21.000]  А, да.
[11:21.000 --> 11:22.000]  Ну окей, хорошо.
[11:22.000 --> 11:24.000]  Так, ладненько.
[11:24.000 --> 11:26.000]  Вообще, да.
[11:26.000 --> 11:27.000]  Да.
[11:27.000 --> 11:28.000]  Тема лекции вообще у нас потоки.
[11:28.000 --> 11:29.000]  Да.
[11:29.000 --> 11:30.000]  Вот.
[11:30.000 --> 11:31.000]  Ну да, это видно.
[11:31.000 --> 11:32.000]  Ну ничего.
[11:32.000 --> 11:41.000]  На часа третий две доски все-таки принципиальные, потому что я утверждаю, что основную тему лекции всю я выпишу просто на одну доску.
[11:41.000 --> 11:50.000]  То есть на самом деле вместо может быть... То есть запись потребуется только в качестве аудиоверсии, чтобы тут расписать, а что это все значит вообще.
[11:50.000 --> 11:53.000]  Сегодня мы будем искать поток.
[11:53.000 --> 12:05.000]  Причем более того, если вам вы очень не любите алгоритм Диница, или вам кажется, что поиск блокирующей потоки это что-то страшное, громоздкое, непонятное и лучше этого избегать, ликуйте сегодня вождей.
[12:05.000 --> 12:10.000]  Сегодня мы будем проталкивать предпотоки.
[12:10.000 --> 12:15.000]  Мы будем называть это технологией Голберга.
[12:15.000 --> 12:17.000]  Ну, мы уже говорили.
[12:17.000 --> 12:23.000]  Хедлайнером сегодняшнего мероприятия является американский математик Эндрю Владислав Голберг.
[12:23.000 --> 12:40.000]  Так. Нет вопрос в каком... Нет, обсудить-то обсудим, куда мы денемся, да.
[12:40.000 --> 12:43.000]  А вот когда мы его обсудим, это вопрос.
[12:43.000 --> 12:46.000]  Ладно, ну ладно, времени у нас много, успеем все.
[12:46.000 --> 12:52.000]  Ладно, спасибо за напоминание, да. Ой, господи, а то как-то уже бежит, как это потоки без масштабирования, что-то такое.
[12:52.000 --> 12:57.000]  Ладно, значит, смотрите, пока проталкивание предпотока.
[12:57.000 --> 13:00.000]  Значит, как мы его будем проталкивать?
[13:00.000 --> 13:02.000]  Значит, идея очень проста.
[13:02.000 --> 13:07.000]  Мы... Ну, начнем мы с весьма неожиданной вещью.
[13:07.000 --> 13:13.000]  Вот раньше мы говорили, что дальше у нас практически в каждый момент времени в сети тек именно поток.
[13:13.000 --> 13:19.000]  Не всегда оптимальный, но мы там искали какие-то там удлиняющие пути в остаточной сети, как-то пропихивали.
[13:20.000 --> 13:23.000]  Сегодня мы от этого откажемся.
[13:23.000 --> 13:26.000]  Значит, мы заявим теперь, что у нас...
[13:26.000 --> 13:29.000]  Значит, теперь у нас будет определение.
[13:29.000 --> 13:33.000]  Значит, пусть у нас есть сеть, как всегда.
[13:33.000 --> 13:39.000]  Ну, давайте вот ВЕЦСТ.
[13:39.000 --> 13:43.000]  Тогда, значит, Ф...
[13:43.000 --> 13:47.000]  Значит, давайте ЗЕ, соответственно, Р.
[13:47.000 --> 13:49.000]  Больше либо равно нуля.
[13:49.000 --> 13:52.000]  Это предпоток.
[13:55.000 --> 13:57.000]  Вот.
[13:57.000 --> 14:05.000]  Если для любой вершины В, ну, которой не исток, исток, естественно...
[14:05.000 --> 14:09.000]  Значит, ну, во-первых...
[14:09.000 --> 14:19.000]  Во-первых, оказывается, что сумма входящих потоков оказывается больше либо равна, чем сумма исходящих.
[14:19.000 --> 14:21.000]  Так, ну и сразу напишу.
[14:21.000 --> 14:24.000]  Второе. И второе, конечно...
[14:27.000 --> 14:31.000]  Сейчас... Нет, я просто сказал... Нет, я просто это уже сказал.
[14:31.000 --> 14:34.000]  Вот. Нет, я подпишу, да, естественно.
[14:34.000 --> 14:36.000]  Да-да-да-да.
[14:36.000 --> 14:39.000]  E.finish равно V.
[14:39.000 --> 14:43.000]  E.start равно V.
[14:43.000 --> 14:47.000]  Ну и, конечно, вот это условие надо подписать.
[14:47.000 --> 14:53.000]  То есть, на самом деле, это отличие от определения потока только в вот этом знаке.
[14:53.000 --> 14:58.000]  То есть, фактически, поток это такой предпоток, у которого тут равенство.
[14:59.000 --> 15:04.000]  Вот, да. То есть, на этот раз мы разрешаем себе, чтобы там в вершине скапливалось бесконечное количество машин.
[15:04.000 --> 15:07.000]  Но появляться из них откуда они все еще не могут.
[15:09.000 --> 15:12.000]  Вот. Так вот, у нас будет идея, что мы будем...
[15:12.000 --> 15:19.000]  Как бы у нас в каждый момент времени теперь в сети будет предпоток, и мы его будем проталкивать по каким-то правилам.
[15:19.000 --> 15:22.000]  Но причем правила будут очень жесткие.
[15:23.000 --> 15:25.000]  Значит, во-первых, у нас есть...
[15:25.000 --> 15:30.000]  Значит, во-первых, у нас есть действительно такое определение предпотока.
[15:30.000 --> 15:38.000]  А во-вторых, у нас еще неожиданно появляется в сети такое понятие, как высота.
[15:48.000 --> 15:50.000]  Нет, ладно, вранье.
[15:50.000 --> 15:52.000]  Да, высота числа целая.
[15:53.000 --> 15:55.000]  Не отрицательная.
[15:55.000 --> 15:59.000]  Ну, это не раз, она всегда фиксированная функция.
[15:59.000 --> 16:05.000]  Но у нее есть, значит, маленькие требования.
[16:07.000 --> 16:09.000]  Требования будут такие.
[16:09.000 --> 16:12.000]  Значит, в каждом момент времени будет выполняться.
[16:12.000 --> 16:19.000]  Во-первых, что ашот, значит, из стока будет всегда равен модулю V.
[16:21.000 --> 16:25.000]  А высота стока всегда будет равна нулю.
[16:27.000 --> 16:29.000]  Вот, это два таких условия.
[16:29.000 --> 16:31.000]  Но есть и важное третье.
[16:33.000 --> 16:35.000]  Значит, важное третье.
[16:38.000 --> 16:41.000]  То есть, для любого ребра в остаточной сети...
[16:41.000 --> 16:42.000]  Вот я называю так.
[16:42.000 --> 16:45.000]  Для любого ребра, допустим, у там...
[16:46.000 --> 16:49.000]  Давайте В, У, допустим, С.
[16:50.000 --> 16:54.000]  Значит, лежащим в, внимание, остаточной сети...
[16:55.000 --> 16:57.000]  Ладно, в G, F, вот так.
[16:58.000 --> 16:59.000]  Хотя надо было E, F сказать.
[16:59.000 --> 17:01.000]  Ну ладно, не важно.
[17:03.000 --> 17:05.000]  Ну ладно, E, хорошо, хорошо.
[17:05.000 --> 17:07.000]  Ну, Господи, ну.
[17:07.000 --> 17:09.000]  Швы такие вредные.
[17:10.000 --> 17:11.000]  Значит, итак.
[17:11.000 --> 17:15.000]  Для любого такого ребра в остаточной сети,
[17:15.000 --> 17:18.000]  естественно, с подразумеванием, что С больше нуля,
[17:20.000 --> 17:28.000]  оказывается верно, что высота У не меньше, чем высота В минус 1.
[17:34.000 --> 17:38.000]  То есть, если у вас в остаточной сети есть живое какое-то ребро,
[17:38.000 --> 17:41.000]  то оно может уменьшать высоту не более, чем на 1.
[17:42.000 --> 17:44.000]  Да, оно его может не уменьшать вообще.
[17:44.000 --> 17:47.000]  Оно может его там отправлять просто куда-то в небеса,
[17:47.000 --> 17:50.000]  но ниже, чем на одну ступеньку, вы не спуститесь.
[17:54.000 --> 17:58.000]  Да, высота вполне может быть там сколь угодно большой.
[17:58.000 --> 18:00.000]  По крайней мере, на уровне определения.
[18:00.000 --> 18:02.000]  Естественно, при тех ограничениях, которые у нас будут,
[18:02.000 --> 18:06.000]  мы докажем, что это невозможно, но тем не менее.
[18:08.000 --> 18:10.000]  А.
[18:10.000 --> 18:12.000]  Ну, и сейчас, конечно, не очень возможно.
[18:12.000 --> 18:16.000]  Е от ФС, это же у нас больше, чем и ребро с обычной капасти,
[18:16.000 --> 18:18.000]  которая с капасти 0 обратно.
[18:20.000 --> 18:22.000]  Кажется, что он просто больше, чем вот такие машины.
[18:27.000 --> 18:29.000]  Что такое Е от ФС?
[18:29.000 --> 18:30.000]  Это, получается, мудрость.
[18:30.000 --> 18:32.000]  Это е от ФС или от С?
[18:32.000 --> 18:34.000]  Да, у нас есть. Добавляются ребра, которые обратно.
[18:34.000 --> 18:35.000]  Да.
[18:35.000 --> 18:36.000]  Да, это да.
[18:36.000 --> 18:39.000]  Получается, что если ребро заполнено, то то обратное тоже,
[18:39.000 --> 18:41.000]  на счет сети он тоже имеет больше 0.
[18:41.000 --> 18:44.000]  Нет, если ребро обратное, какое-то ребро заполнено,
[18:44.000 --> 18:46.000]  то оно как бы здесь не учитывается.
[18:46.000 --> 18:48.000]  Не случайно здесь С больше 0 написал.
[18:48.000 --> 18:50.000]  На счет сети имеется вопрос.
[18:50.000 --> 18:52.000]  Кто по которому еще поток может пройти?
[18:53.000 --> 18:58.000]  Да, то есть имеется в виду ребра, по которому поток пустить может.
[18:58.000 --> 19:01.000]  То есть ребра с пропускной способностью 0 здесь нас не интересует.
[19:01.000 --> 19:04.000]  Да, но пропускная способность именно остаточная.
[19:04.000 --> 19:05.000]  Это важно.
[19:07.000 --> 19:10.000]  Такие ребра мы будем называть ненасыщенными.
[19:11.000 --> 19:13.000]  Но у нас будут насыщенные ребра,
[19:13.000 --> 19:16.000]  которых понятно Ф равно С и ненасыщенные.
[19:19.000 --> 19:21.000]  Вот у нас есть такая высота.
[19:22.000 --> 19:25.000]  Мы будем пытаться менять предпоток и высоту.
[19:25.000 --> 19:28.000]  Соблюдая вот этот вариант, конечно.
[19:29.000 --> 19:36.000]  Но при этом мы очень жестко себе описываем,
[19:36.000 --> 19:41.000]  каким конкретно образом мы будем менять диспозицию.
[19:41.000 --> 19:43.000]  Как мы ее будем менять?
[19:44.000 --> 19:48.000]  Будем мы ее уметь с помощью всего двух функций.
[19:49.000 --> 19:56.000]  Первая функция вас приветствует Пуш от В.
[19:59.000 --> 20:00.000]  Вот.
[20:01.000 --> 20:03.000]  Нет, враги.
[20:03.000 --> 20:06.000]  Не В, а Е.
[20:08.000 --> 20:11.000]  Ну давайте, которые мы назовем В, У.
[20:12.000 --> 20:14.000]  Ну и допустим С.
[20:17.000 --> 20:18.000]  Вот.
[20:19.000 --> 20:21.000]  Ну какие у нас требования?
[20:21.000 --> 20:25.000]  К тому, чтобы для какого-то ребра можно было вызвать функцию Пуш.
[20:27.000 --> 20:29.000]  Ну, во-первых,
[20:30.000 --> 20:35.000]  excess от Е, fo от В должен быть строго больше нуля.
[20:38.000 --> 20:39.000]  Ой.
[20:39.000 --> 20:41.000]  А что такое excess?
[20:43.000 --> 20:44.000]  Да.
[20:44.000 --> 20:46.000]  Это, как следует из названия,
[20:46.000 --> 20:47.000]  это такой избыток.
[20:47.000 --> 20:51.000]  Вот мы можем написать на самом деле вот такое определение.
[20:51.000 --> 20:53.000]  Вот такая разность должна быть больше либо равно нуля.
[20:53.000 --> 20:56.000]  Давайте вот эту вот, значит, соответственно,
[20:56.000 --> 21:01.000]  вот эту вот разность будем называть excess от В.
[21:02.000 --> 21:03.000]  Или избыток.
[21:05.000 --> 21:08.000]  То есть такая логичность.
[21:08.000 --> 21:10.000]  Для того, чтобы пустить по ребру какие-то машинки,
[21:10.000 --> 21:13.000]  мы будем называть их excess от V.
[21:13.000 --> 21:14.000]  Такая логичность.
[21:14.000 --> 21:16.000]  Для того, чтобы пустить по ребру какие-то машинки,
[21:16.000 --> 21:19.000]  нужно, чтобы они в начале этого ребра были.
[21:20.000 --> 21:21.000]  Вот.
[21:23.000 --> 21:25.000]  И второе требование.
[21:25.000 --> 21:29.000]  Машинки у нас умеют ездить только вниз.
[21:30.000 --> 21:32.000]  Потому что на бензине мы экономим.
[21:32.000 --> 21:33.000]  Соответственно.
[21:33.000 --> 21:35.000]  Поэтому мы прям жестко себе требуем,
[21:35.000 --> 21:42.000]  что h2 обязан быть равен h2-1.
[21:43.000 --> 21:44.000]  Ладно.
[21:44.000 --> 21:46.000]  Видимо, надо тут, в такой формулевке надо написать,
[21:46.000 --> 21:49.000]  конечно, там, что вот это вот.
[21:50.000 --> 21:52.000]  Да, давайте так вот напишем.
[21:54.000 --> 21:55.000]  Во.
[21:56.000 --> 21:57.000]  Вот так.
[21:58.000 --> 22:01.000]  Но давайте напишем, что это c, конечно, должно быть больше нуля.
[22:01.000 --> 22:08.000]  Ну, то есть, пихаем предпоток только в ноток.
[22:08.000 --> 22:12.000]  Только, соответственно, по ненасыщенным ребрам.
[22:17.000 --> 22:18.000]  Да.
[22:19.000 --> 22:21.000]  Ну, я просто тут c пишу вот здесь.
[22:21.000 --> 22:22.000]  Да.
[22:22.000 --> 22:23.000]  Могу с индексом f написать.
[22:23.000 --> 22:25.000]  Ну, давайте, ладно, если вам так удобнее будет.
[22:25.000 --> 22:26.000]  Давайте так.
[22:28.000 --> 22:29.000]  Да.
[22:29.000 --> 22:30.000]  Да.
[22:32.000 --> 22:33.000]  Вот так.
[22:34.000 --> 22:36.000]  Да, пожалуй, да, это правильно будет.
[22:37.000 --> 22:38.000]  Так вот.
[22:38.000 --> 22:39.000]  Что же делает Пуш?
[22:41.000 --> 22:42.000]  Что делает Пуш?
[22:47.000 --> 22:49.000]  Ну, делает он простую вещь.
[22:49.000 --> 22:52.000]  Он по этому ребру пускает столько потока, сколько может.
[22:52.000 --> 23:02.000]  Ну, то есть, у слов договора там дельта f это будет минимум
[23:02.000 --> 23:06.000]  из, соответственно, cf и чего там?
[23:06.000 --> 23:08.000]  Excess от v.
[23:12.000 --> 23:13.000]  Ну, вот.
[23:13.000 --> 23:15.000]  Ну, и пишем, соответственно.
[23:16.000 --> 23:17.000]  Так.
[23:17.000 --> 23:19.000]  Ну, значит, теперь надо прибор реально пустить.
[23:19.000 --> 23:24.000]  Значит, пишем там push flow от e.
[23:26.000 --> 23:28.000]  Ну, в смысле, вот реально пустить поток, типа вот это.
[23:28.000 --> 23:30.000]  Там типа и тут пустить по обратному ребру.
[23:30.000 --> 23:31.000]  Там пустить вот это все.
[23:32.000 --> 23:33.000]  Вот.
[23:33.000 --> 23:36.000]  Ну, и, возможно, не забыть о том, чтобы там какой-нибудь
[23:36.000 --> 23:39.000]  excess от v минус равно дельта f.
[23:41.000 --> 23:43.000]  А тут дельта f, конечно, надо написать.
[23:44.000 --> 23:45.000]  Вот.
[23:46.000 --> 23:50.000]  И excess от u плюс равно дельта f.
[23:51.000 --> 23:52.000]  Вот.
[23:52.000 --> 23:54.000]  Ну, потому что это excess там по-любому насчитывать
[23:54.000 --> 23:55.000]  придется.
[23:57.000 --> 23:59.000]  То есть, вот такое, ну, вот.
[23:59.000 --> 24:03.000]  То есть, вот только в таких случаях мы будем пускать поток.
[24:10.000 --> 24:11.000]  Чего?
[24:11.000 --> 24:12.000]  Да.
[24:15.000 --> 24:17.000]  То есть, опускаем только вниз.
[24:20.000 --> 24:21.000]  Ну, значит, да.
[24:21.000 --> 24:23.000]  Как это вообще пронициализировать?
[24:23.000 --> 24:24.000]  Это вообще отдельная песня.
[24:25.000 --> 24:26.000]  Это мы тоже обсудим.
[24:28.000 --> 24:30.000]  Значит, это у нас push.
[24:32.000 --> 24:35.000]  Это единственная функция, которая будет реально менять потоки.
[24:35.000 --> 24:39.000]  Но для того, чтобы этот поток, чтобы можно было что-то
[24:39.000 --> 24:42.000]  адекватно делать, наверное, как-то надо уметь менять высоты.
[24:46.000 --> 24:50.000]  Справиться с этим нам поможет функция relabel.
[24:51.000 --> 24:54.000]  Или в других переводах лифт еще она иногда называется.
[24:55.000 --> 24:56.000]  Лифт.
[24:57.000 --> 25:00.000]  Итак, значит, функция relabel от v.
[25:01.000 --> 25:03.000]  Которая не исток и несток.
[25:05.000 --> 25:11.000]  Значит, требования к этой функции.
[25:14.000 --> 25:15.000]  Какие у нас требования?
[25:19.000 --> 25:20.000]  Ну, требования тупые.
[25:21.000 --> 25:22.000]  На самом деле, я скажу так.
[25:23.000 --> 25:29.000]  Из v нельзя, значит, первое.
[25:30.000 --> 25:34.000]  Значит, из v нельзя выполнить push.
[25:35.000 --> 25:44.000]  Но, тем не менее, excess от v больше 0.
[25:45.000 --> 25:46.000]  Вот.
[25:47.000 --> 25:50.000]  То есть, если у векшины нет избытка, то мы с ней ничего не делаем.
[26:00.000 --> 26:03.000]  Ну, действие в принципе можно сказать одно.
[26:06.000 --> 26:08.000]  Ну, просто h от v.
[26:08.000 --> 26:13.000]  Просто надо поднять вершину v на минимальную высоту, с которой push сделать можно.
[26:15.000 --> 26:16.000]  Ну, формально я так и напишу.
[26:17.000 --> 26:30.000]  Это 1 плюс минимум, значит, h от u такое, что там v у cf лежит в еф и cf больше 0.
[26:33.000 --> 26:34.000]  Вот.
[26:35.000 --> 26:38.000]  Ну, понятно, что все такие h от u как бы больше либо равно, чем h от v.
[26:38.000 --> 26:41.000]  Поэтому как бы высота увеличивается хотя бы на 1.
[26:49.000 --> 26:50.000]  Ну.
[27:02.000 --> 27:03.000]  Нет увеличения.
[27:04.000 --> 27:05.000]  Строго увеличения.
[27:25.000 --> 27:26.000]  Да.
[27:26.000 --> 27:27.000]  У нас были вот эти три…
[27:34.000 --> 27:35.000]  Ну да.
[27:39.000 --> 27:40.000]  Ну вот, да.
[27:40.000 --> 27:43.000]  А если будет равенство, значит push можно было выполнить.
[27:53.000 --> 27:54.000]  Ну, сразу скажу.
[27:54.000 --> 27:58.000]  Смотрите, такому быть не может по одной простой причине.
[27:58.000 --> 28:03.000]  А раз у вас xs от v больше 0, значит в эту вершину что-то втекает.
[28:04.000 --> 28:08.000]  А раз в эту вершину что-то втекает, значит в остаточной сети есть обратное ребро.
[28:09.000 --> 28:10.000]  Вот.
[28:12.000 --> 28:15.000]  Да, тут вот оказывается такая неожиданная вещь.
[28:15.000 --> 28:19.000]  Но на самом деле еще был действительно вопрос, как это инициализировать.
[28:21.000 --> 28:24.000]  Значит, инициализировать будем так.
[28:25.000 --> 28:26.000]  Значит, и нет.
[28:28.000 --> 28:30.000]  Значит, инициализация.
[28:30.000 --> 28:35.000]  То есть на самом деле может быть много алгоритмов, но инициализация будет одна и та же.
[28:38.000 --> 28:39.000]  Значит, идея такая.
[28:40.000 --> 28:47.000]  Ну, во-первых, изначально h от v равно 0, где v лежит просто по…
[28:48.000 --> 28:51.000]  Ну, просто во всех вершинах изначально высота 0.
[28:51.000 --> 28:55.000]  Ну, кроме, конечно же, там, понятно, h от s равно 0v.
[28:55.000 --> 28:58.000]  Давайте h от t, уж так и быть, выделим, равно 0.
[29:02.000 --> 29:08.000]  А теперь перебираем все ребра, торчащие из истока.
[29:13.000 --> 29:14.000]  Ну, вот там допустим.
[29:18.000 --> 29:21.000]  И по всем этим ребрам впускаем поток.
[29:21.000 --> 29:22.000]  Причем на максимум прям.
[29:27.000 --> 29:28.000]  Все.
[29:39.000 --> 29:41.000]  Нет, именно push-flow.
[29:42.000 --> 29:43.000]  Смотрите, какая ситуация.
[29:43.000 --> 29:49.000]  Действительно, когда мы нарисовали такие высоты, у нас могут быть ребра, которые ведут с высоты v в высоту 0.
[29:50.000 --> 29:52.000]  Ну, как могут быть, они почти, наверное, есть.
[29:54.000 --> 29:56.000]  Поэтому как добиться того, чтобы вариант сохранился?
[29:56.000 --> 29:57.000]  Очень просто.
[29:57.000 --> 29:59.000]  А давайте насытим все такие ребра.
[30:03.000 --> 30:08.000]  Обратите внимание, теперь у нас нет ребер, ведущих с высоты v, на высоту 0.
[30:09.000 --> 30:12.000]  Но есть ребра с высоты 0, на высоту…
[30:13.000 --> 30:14.000]  Бывают 0, а бывают v.
[30:15.000 --> 30:19.000]  Кстати, обратите внимание, что в самом начале вы не можете сделать push.
[30:20.000 --> 30:22.000]  То есть вам придется делать relabel.
[30:24.000 --> 30:25.000]  Ну, ничего страшного.
[30:25.000 --> 30:27.000]  В чем теперь заключается концепция?
[30:29.000 --> 30:34.000]  То есть будем называть это концепция проталкивания предпотока.
[30:34.000 --> 30:38.000]  То есть мета-алгоритм получается у нас такой, который мы будем называть.
[30:38.000 --> 30:41.000]  То есть была у нас концепция блокирующих потоков.
[30:41.000 --> 30:45.000]  А теперь у нас будет, собственно, концепция, как мы ее будем называть, Голдберга.
[30:54.000 --> 30:57.000]  Хотя, если мы их тронем, ничего страшного не будет.
[30:59.000 --> 31:06.000]  Ну, с точки зрения нашей задачи, заметим, что у нас ничего не поменяется, если мы по петле пустим максимально возможный поток.
[31:06.000 --> 31:08.000]  То есть ничего страшного не будет.
[31:12.000 --> 31:18.000]  Нет, я имею в виду, что здесь даже не надо заморачиваться, что будем считать, что петель нет, вот это все.
[31:19.000 --> 31:21.000]  Это концепция их кушает автоматически.
[31:23.000 --> 31:25.000]  Итак, концепция Голдберга.
[31:26.000 --> 31:28.000]  Ну, во-первых, выполняем линит.
[31:35.000 --> 31:36.000]  И второе.
[31:37.000 --> 31:43.000]  Делаем push и relabel.
[31:44.000 --> 31:45.000]  Пока можем.
[31:45.000 --> 31:46.000]  Вот.
[32:07.000 --> 32:08.000]  Что значит пока можем?
[32:09.000 --> 32:11.000]  Вот прям буквально.
[32:11.000 --> 32:21.000]  Можно писать было vile, там можно хоть у какой-то вершины сделать push и relabel, берем какую-то вершину и делаем из нее push или relabel.
[32:41.000 --> 32:53.000]  Ну, было хорошее ребро, а стало вот таким.
[32:54.000 --> 33:03.000]  А тут ограничение на высоту только снизу, если оно было выполнено, то как бы от того, что вершина увеличилась, соответственно у нас этот инвериент точно не нарушился.
[33:12.000 --> 33:14.000]  Не, на исходящих понятно.
[33:15.000 --> 33:17.000]  Потому что ты берешь минимум по всем h от u.
[33:18.000 --> 33:19.000]  Где входящих?
[33:20.000 --> 33:21.000]  У тебя выполнялось неравенство.
[33:22.000 --> 33:23.000]  Ты увеличил h от u.
[33:38.000 --> 33:39.000]  Вот.
[33:41.000 --> 33:42.000]  Так вот.
[33:43.000 --> 33:45.000]  Так, ну вот теперь возникает вопрос.
[33:46.000 --> 33:52.000]  Ну вот, то есть метод заключается в том, что как бы тут ничего не сказано о том, как мы ищем эту вершину, как выбираем, делаем push или relabel.
[33:57.000 --> 34:00.000]  Да, ну осталось только выяснить, как вершину найти.
[34:01.000 --> 34:03.000]  Ну, правда, для нас это возникает вопрос.
[34:04.000 --> 34:07.000]  Хорошо, допустим у нас в какой-то момент выяснилось, что нельзя сделать push или relabel.
[34:08.000 --> 34:09.000]  Да, внимание, вопрос.
[34:10.000 --> 34:12.000]  И будет, и значит что?
[34:14.000 --> 34:15.000]  Ну.
[34:16.000 --> 34:17.000]  Ну.
[34:18.000 --> 34:19.000]  Такой.
[34:20.000 --> 34:21.000]  Серьезно?
[34:22.000 --> 34:23.000]  Так.
[34:24.000 --> 34:25.000]  Так, говоришь.
[34:27.000 --> 34:28.000]  Ну.
[34:29.000 --> 34:31.000]  Ну, не, ну что, маркер как вот, маркер как маркер для флипчартов.
[34:32.000 --> 34:33.000]  Да, все нормально.
[34:34.000 --> 34:35.000]  Ну да, да, да, да, да.
[34:35.000 --> 34:36.000]  Да, да, да, да, да.
[34:37.000 --> 34:38.000]  Печально, но ладно.
[34:41.000 --> 34:42.000]  Надо.
[34:43.000 --> 34:44.000]  Что-то по push call.
[34:45.000 --> 34:47.000]  Access должен выполняться в функции push call.
[34:48.000 --> 34:49.000]  Да, кажется, что Access.
[34:50.000 --> 34:52.000]  За обновление Access должна выполнять функцию push call.
[34:53.000 --> 34:54.000]  Да.
[34:55.000 --> 34:56.000]  Вот, то есть Access это будет, да.
[34:57.000 --> 34:58.000]  Лучше верно в красной 4.
[34:59.000 --> 35:00.000]  Либо в зеленом написать.
[35:01.000 --> 35:02.000]  В зеленом?
[35:03.000 --> 35:04.000]  Ну, мы не изменяем Access в одном из случаев.
[35:05.000 --> 35:06.000]  Мы не изменяем.
[35:07.000 --> 35:08.000]  Я вас понял, да.
[35:13.000 --> 35:17.000]  Ну, давайте AccessA2 плюс равно, плюс равно C напишем.
[35:18.000 --> 35:19.000]  Да.
[35:20.000 --> 35:24.000]  Ну, можно было бы AccessAtest написать еще для удобства, но необходимости в этом нет.
[35:25.000 --> 35:29.000]  Нет, ну, можно писать AccessAtest, да, он ни на что не повлияет, он будет, видимо,
[35:30.000 --> 35:33.000]  может быть, в итоге он будет там запись, насколько пихнется.
[35:33.000 --> 35:35.000]  Почему я от S ульцем?
[35:36.000 --> 35:37.000]  Там же выменяет.
[35:38.000 --> 35:39.000]  И кем?
[35:40.000 --> 35:41.000]  А, ульцем.
[35:42.000 --> 35:43.000]  Еще вопрос.
[35:44.000 --> 35:45.000]  Да.
[35:46.000 --> 35:49.000]  Делебрактор, который выходит из S, он не может AccessAtest слушать.
[35:50.000 --> 35:51.000]  Что, AccessAtest просто бесконечный?
[35:52.000 --> 35:53.000]  Да, просто бесконечный.
[35:54.000 --> 35:55.000]  Сейчас.
[35:56.000 --> 35:57.000]  Где написать, кем написать?
[35:58.000 --> 36:01.000]  Я вам скажу, что если мы просто будем Access снять, то нормально.
[36:01.000 --> 36:10.000]  А если в конце будет AccessAtest менять, то будто бы в конце AccessAtest будет минус по поводу.
[36:11.000 --> 36:12.000]  Ну, вообще говорят да.
[36:13.000 --> 36:15.000]  Так, ну, породите.
[36:16.000 --> 36:17.000]  Начнем с маленького приятного утверждения.
[36:18.000 --> 36:19.000]  Давайте.
[36:20.000 --> 36:26.000]  Во-первых, заметим, что если AccessAtest, ну, такое, тупое утверждение 1,
[36:27.000 --> 36:28.000]  утверждение.
[36:28.000 --> 36:49.000]  Если Access от V больше нуля, то из V можно сделать либо push, либо relabel.
[36:49.000 --> 36:50.000]  Вот.
[36:51.000 --> 36:52.000]  То есть.
[36:53.000 --> 36:56.000]  Ну, действительно, просто либо у вас есть ребро ведущее.
[36:57.000 --> 36:58.000]  Ну, просто рассмотрим.
[36:59.000 --> 37:04.000]  То есть, как мы уже сказали, ключевое такое соображение, что из вершины V существует ребро, ненасыщенное ребро.
[37:05.000 --> 37:07.000]  Теперь, ну, вот, рассмотрим все кириллы.
[37:08.000 --> 37:14.000]  Либо хотя бы одно из них ведет в высоту ниже, и тогда мы можем сделать push, либо ни одно не ведет, и тогда можно сделать push.
[37:14.000 --> 37:15.000]  Вот.
[37:16.000 --> 37:23.000]  Ну, потому что логично, как бы, как бы, либо можно сделать push, либо нельзя сделать push, и тогда можно сделать relabel.
[37:24.000 --> 37:26.000]  Да, просто вот, как бы, на уровне логики.
[37:27.000 --> 37:28.000]  Вот.
[37:29.000 --> 37:30.000]  Так что здесь пока тривиально.
[37:33.000 --> 37:35.000]  То есть, таким образом, вывод такой.
[37:36.000 --> 37:40.000]  То есть, этот алгоритм заканчивается, как бы, на уровне логики.
[37:40.000 --> 37:42.000]  Таким образом, вывод такой.
[37:43.000 --> 37:49.000]  То есть, этот алгоритм, в тот момент, когда алгоритм заканчивается, эксцессы исчезают.
[37:52.000 --> 37:55.000]  Да, как в науке называется предпоток с нулевыми эксцессами?
[37:56.000 --> 37:57.000]  Поток.
[37:58.000 --> 37:59.000]  Совершенно верно.
[38:00.000 --> 38:01.000]  Да, давайте это тоже зафиксируем.
[38:02.000 --> 38:03.000]  То есть, утверждение.
[38:04.000 --> 38:05.000]  Так и так и напишем.
[38:05.000 --> 38:17.000]  Предпоток с нулевыми эксцессами – это поток.
[38:25.000 --> 38:27.000]  То есть, в принципе, приятная новость.
[38:30.000 --> 38:33.000]  Когда алгоритм закончится, мы получим поток.
[38:35.000 --> 38:36.000]  Вот.
[38:37.000 --> 38:39.000]  Но есть более важная теорияма для нас.
[38:40.000 --> 38:41.000]  Можно уж даже теориям сказать.
[38:42.000 --> 38:43.000]  Ну вот.
[38:44.000 --> 38:53.000]  Если алгоритм, основанный на КГ алгоритм, на концепции Голберга алгоритм,
[38:53.000 --> 38:54.000]  завершился.
[38:59.000 --> 39:00.000]  То…
[39:00.000 --> 39:01.000]  Что?
[39:02.000 --> 39:03.000]  Ну вот.
[39:04.000 --> 39:05.000]  То…
[39:05.000 --> 39:08.000]  Значит, имеющийся предпоток с нулевыми эксцессами.
[39:09.000 --> 39:12.000]  То есть, мы получим поток с нулевыми эксцессами.
[39:13.000 --> 39:14.000]  Ну вот.
[39:15.000 --> 39:16.000]  Ну вот.
[39:17.000 --> 39:18.000]  Ну вот.
[39:19.000 --> 39:22.000]  То есть, мы получим поток с нулевыми эксцессами.
[39:23.000 --> 39:39.320]  имеющийся предпоток является максимальным
[39:39.320 --> 39:52.640]  потоком в сети G
[39:52.640 --> 40:03.760]  ну пока стоит добавить только до об чем он собственно максимальный
[40:03.760 --> 40:14.600]  ну черема говорит ну как это говорит как бы нет там лет 15-20 наскорбли но у нас на
[40:14.600 --> 40:36.960]  заборах они такое пишут и че да да хочется сказать что да у нас нет
[40:36.960 --> 40:42.120]  удлиняющего пути в остаточной сети там это вот поэтому потеряем форда фолкерсона
[40:42.120 --> 40:52.840]  поток максимально хочется сказать а почему нет пути то вообще так и что
[40:52.840 --> 40:55.880]  но это же не значит что пути нет
[41:22.840 --> 41:32.360]  нет по причем тут почему пушки пушку можно делать только пушку сейчас
[41:32.360 --> 41:41.840]  делать потому что у нас эксцессов нету ну не обязательно
[41:41.840 --> 42:00.120]  не правда почему нет для всех этих ребер это утверждение продолжает быть выполнено
[42:00.120 --> 42:04.840]  во первых мы как бы не можем сделать пушки не по этой причине даже то есть там
[42:04.840 --> 42:09.560]  то есть ну какая какие-то ребра торчат вверх это да но это проблема все равно у нас
[42:09.560 --> 42:14.920]  эксцессов у нас эксцесса обнулились поэтому пошло нечего пушить так ну-ка
[42:44.920 --> 43:03.680]  но да но да заметим что да да рассмотрим простой удлиняющий путь улучшающий да
[43:03.680 --> 43:08.040]  заметим что он состоит не более чем 2 минус 1 ребер поэтому получается что
[43:08.040 --> 43:14.200]  высота коня высота т должна быть хотя бы 1 ну потому что каждый шаг по инварианту
[43:14.200 --> 43:21.720]  уменьшает высоту не более чем на 1 а может и не уменьшает вообще можно и так сказать или еще
[43:21.720 --> 43:27.320]  красивое рассуждение можно с другой стороны посмотреть попрешу заметил рассмотрим высоты
[43:27.320 --> 43:36.560]  от 0 до v заметим что по принципу дирихле найдется высота на которой вершин нет тогда
[43:37.200 --> 43:44.880]  тогда рассмотрим такой то есть пусть эта высота какая-нибудь там 57 тогда у нас возникает разрез
[43:44.880 --> 43:52.920]  57 то есть вершины по высоте выше 57 и ниже утверждение это этот разрез насыщенный
[43:52.920 --> 44:01.040]  потому что нет у ребер которые ведут из вершины выше этой высоты вершину ниже этой высоты
[44:01.040 --> 44:14.720]  ну почему ну собственно вот почему понятно да вот тем более того кстати это удобно
[44:14.720 --> 44:18.960]  судьи да еще вопрос о том вот была классическая задача как найти минимальный разрез в сети но
[44:18.960 --> 44:24.800]  вот как бы концепция голберка предлагает вам еще один неожиданный способ прям буквально на
[44:24.800 --> 44:33.960]  халяву его найти вот так что классно то есть как бы да то есть если это вообще закончится
[44:33.960 --> 44:54.240]  когда-нибудь то значит потом и найдем максимальный поток да да да да да совершенно
[44:54.720 --> 45:00.400]  да парадокс этой концепции заключается в том что в каждый момент времени пути из-за
[45:00.400 --> 45:10.320]  сфты нету но это нормально потому что по сути я бы сказал так потому что тот концепция работает
[45:10.320 --> 45:17.920]  так вся вода значит но опять мы насытили в серебре из-за значит теперь в процессе вся вода будет
[45:17.920 --> 45:23.960]  либо заперта ну вода там будет куда-то там гоняться по вершинам как-то там перегоняться но в
[45:23.960 --> 45:28.320]  какой-то момент кончится закончится то есть каждая машинка в итоге либо придет в т либо
[45:28.320 --> 45:37.080]  вернется в с вот так чем магическим образом окажется что в т пихнется максимально большое
[45:37.080 --> 45:53.360]  количество машин но что-то ну не знаю ну как сказать
[45:53.360 --> 46:09.480]  так но вот да но вообще но возникает каше более интеллектуальное утверждение спрашивается
[46:09.480 --> 46:16.800]  а не может ли быть но вот там не окажется ли случайно что алгоритм будет работать бесконечно
[46:16.800 --> 46:32.680]  да ну что да но мы можем сделать релайбл увиди и что да вот сразу сказать такая интеллектуальная
[46:32.680 --> 46:37.800]  ситуация жила было ребро мы сделали пуш потом сделали релайбл от этой вершины сделали пуш по
[46:38.800 --> 47:05.120]  опять повысили вот это вот так не уменьшаем не уменьшаем например да
[47:05.120 --> 47:11.800]  то есть конечно да то есть вдруг мы можем у вершины сделать бесконечное число релайбл
[47:11.800 --> 47:39.480]  нет вот тут ну тут интересно прочитать интуицию да так давайте это а я тут пока немножко это
[47:39.480 --> 47:43.280]  ой поликвидирую последствия маркера
[48:09.480 --> 48:13.760]  при этом на самом деле когда высота всех стало хотя бы два
[48:13.760 --> 48:37.040]  когда мы уже не можем последнюю вершину вообще ничего и что а ты где в том что ты делаешь
[49:07.040 --> 49:23.960]  так ну ладно этот подстерк нет ну ладно таких соображениях конечно сложно придумать хотя
[49:23.960 --> 49:30.960]  наверное можно но ладно не было но я боюсь там это я думаю это не за 2 минуты делается ключевая
[49:30.960 --> 49:43.400]  лемма звучит так на эту тему пусть excess от в больше нуля да ну давайте на всякий случай
[49:43.400 --> 49:50.480]  ладно оговоримся везде когда я пишу excess от в больше нуля я подозреваю что в это не
[49:50.480 --> 49:59.440]  исток и несток а вот а ну собственно а ну собственно заметим что я здесь в общем-то в определении
[49:59.440 --> 50:13.280]  может говорить что excess я рассматриваю вершины только такие не исток и несток ну ну как сказать
[50:13.280 --> 50:43.280]  да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да
[50:43.280 --> 50:57.300]  да да да да да да да да да да да да да-да-да да да да да да да да да да да convert лsk
[50:57.300 --> 51:06.100]  скажем нет ну это даже по-моему то то знаете так тонкость граничится с буквоедством на самом деле если честно да да потому что
[51:06.100 --> 51:25.940]  поэтому легче уже вот так написать вот все вот то есть знаете действительно что в концерте что безопаснее называется каждую там каждую секунду кричать
[51:25.940 --> 51:39.540]  осторожно сосулька осторожно сосулька осторожно сосулька или то но вот или потом когда кому-то на голову придется сулька сказать мы же в начале ну мы же когда-то там в начале 2 дня назад предупреждали что там сосульки
[51:39.540 --> 51:54.380]  сложная аналогия да ну ладно вот короче говоря я имею ввиду вот что давайте в каждом месте вы вот это писать значит если excess у и сосулька
[51:54.380 --> 51:56.860]  вот
[51:56.860 --> 52:21.060]  то ладно значит из в в с существует путь ну какой путь ну естественно да в остаточной так сказать сети по не нулевым ребрам
[52:21.140 --> 52:50.300]  нет жеф на этот раз нет нет сторожа придется обезвреживать именно вам тут на этот раз именно жеф потому что уже жеф это собственно все сеть весь граф в том числе и вершина вот ну ключевое утверждение такое ну следствие из него очевидно
[52:50.300 --> 52:59.140]  то есть просто следствие видеться ремы тогда а шатве меньше либо равно 2 модуль вы минус 1
[53:08.900 --> 53:10.700]  ну если в эту левую поверить конечно
[53:10.700 --> 53:26.780]  вот но осталось только выяснить а откуда же это лемма взялась из какого кармана я ее достал
[53:26.780 --> 53:51.980]  ну как сказать да вот ну вот а идея на самом деле оказывается очень проста смотрите жила была вершина в и был в ней избыто то есть лишние машинки приезжали да допустим что до эса я дойти не могу
[53:51.980 --> 54:12.900]  тогда идея такая а давайте я посмотрю а докуда я вообще могу дойти прям вот как-то вот как всегда dfs по не нулевым ребрам запущу короче да то есть получится какая-то красота красота красота в общем вот это типа вот пусть
[54:13.900 --> 54:37.700]  я дойти могу и где-то оказалось с так вот утверждение значит в это множество в текает положительное количество машин почему так ну я тут сейчас вот не хочу расписывать хотя можно вот
[54:37.700 --> 54:53.500]  расписать аналогично тому как это делали там два занятия назад но типа то есть давайте просто то есть если я присумирую ну если я присумирую все эксцс включая кстати t если он тут случайно окажется то я получу строго положительное число правда
[54:53.500 --> 55:12.020]  ну потому что увы он положить но всех не отрицать вот но тогда смотрите но тогда что такое эксц это как бы входящие машинки минус исходящие да если у нас тут пока какой какое-то ребро внутри этого множества есть то
[55:12.020 --> 55:17.540]  то тогда вот то тогда у вас очевидно там исходящие входящие также там поубиваются
[55:17.540 --> 55:41.820]  может у каждого но смотрите но в каждый момент времени когда вы делаете релайбл когда вы делаете релайбл у вас эксц больше нуля значит в этот момент у
[55:41.820 --> 55:47.460]  вас существует путь до вершины с а у вершины с высота фиксировано модуль в
[55:47.460 --> 55:59.660]  да но да но просто мы не сильно большой высоты можем до этого с упасть
[55:59.660 --> 56:20.540]  я могу например первым шагом сделать нет плюс равно 100 не можешь вранье так плюс
[56:20.540 --> 56:26.820]  равно 100 можешь но теперь фишки такая плюс равно 100 конечно ты сделать можешь но фишка
[56:26.820 --> 56:32.100]  в том что после этого если у тебя кажется там вы плюс 100 высота допустим да то как бы тебе
[56:32.100 --> 56:40.580]  потребуется 100 вершин для того чтобы спуститься до с то есть как бы взлететь влететь легко а вернуться
[56:40.580 --> 56:55.380]  обратно проблема вот так что вот так что вернемся клейме что такое суммарный избыток вот этого
[56:55.940 --> 57:03.380]  но я утверждаю что это просто сколько машинок въезжает извне минус сколько выезжает вовне причем то есть то
[57:03.380 --> 57:13.380]  что внутри оно тут по плюс минусе ц вот но так как эта сумма больше нуля значит хотя бы одна машинка
[57:13.380 --> 57:22.180]  сюда въезжает а это означает что хотя бы одно обратное ребро они нулевое в остатке сидит тут
[57:22.180 --> 57:36.820]  существует противоречие вот ну противоречие с тем что мы казалось бы мы сказали что как будто вот
[57:36.820 --> 57:44.340]  это все вершины в которых мы можем дотянуться оказывается не все да вопрос на понимание а каким
[57:44.340 --> 57:53.140]  образом это как бы это вот это противоречие каким образом наличие вершины s внутри этого множества
[57:53.140 --> 58:02.940]  дизавуирует указанное противоречие да совершенно верно да именно то есть s это единственная вершина
[58:02.940 --> 58:08.100]  у которой может быть и почти всегда и будет отрицательный избыток да совершенно верно
[58:08.100 --> 58:17.060]  господи вообще надо как-то переучиваться чтобы xs называть избытком а то знаете это при вот
[58:17.060 --> 58:21.980]  кстати вот на защите диплома вас может ждать неожиданный прикол нет вам знаком такой человек
[58:21.980 --> 58:27.140]  как константин вячеслав киеваранцов нет ну вы с ним познакомитесь потому что это один из
[58:27.140 --> 58:32.860]  ведущих если не ведущих специалистов преподаватель в области машинного обучения вот так что у вас
[58:32.860 --> 58:37.380]  свое время это обязательно ждет не обязательно с ним или или как-то еще но я думаю там так или
[58:37.580 --> 58:43.380]  видимо там со его творчеством там вы познакомитесь так вот значит на защите диплома значит кто-то
[58:43.380 --> 58:49.580]  засчитал диплом по машинному обучению но вот но вот ей естественно там употреблял там какие-то
[58:49.580 --> 58:54.780]  слова там типа типа там фичи фичи там добавим фичи обучим чемпием посчитаем пиджа там и так
[58:54.780 --> 58:59.980]  далее значит в какой то что этоzar Herroto говорит на правах записlate зануды значит позволю себе
[58:59.980 --> 59:06.020]  заметить что употребление в русской речи слова bitches оскорбляет русскоязычные сообщество аula
[59:06.020 --> 59:30.020]  но от машинного обучения оно так и есть, поэтому надо говорить не фичи, а там студент, факторы, признаки, нет почему, претензия в том, что защита диплома ввелась на русском языке,
[59:30.020 --> 59:40.020]  а употребляем мы соответственно какой-то англоязычный термин, хотя в русском языке есть нормальный аналог, в данном случае абсолютно идентичный.
[59:40.020 --> 59:56.020]  Нет, ну тут у нас так, код мы пишем, да, но я постоят к тому, что по-хорошему надо называть там excess, надо называть избытком, да не будет у нас,
[59:56.020 --> 01:00:06.020]  ну почему, нет, в данном случае функции нет, по-русски избыток там, поэтому excess, ну так.
[01:00:06.020 --> 01:00:24.020]  Нет, ну мы говорим определитель, да, тут нас путает то, что мы вроде и в математике как бы и в программировании конечно там пишем код на русском языке,
[01:00:24.020 --> 01:00:28.020]  в программировании конечно там пишем код на английском языке, это да.
[01:00:28.020 --> 01:00:30.020]  Ну как бы да.
[01:00:30.020 --> 01:00:33.020]  Сказать, что мы можем сделать.
[01:00:33.020 --> 01:00:45.020]  Нет, ну у нас, да, можем, не, ну все равно, нет, когда мы запретаем функцию, мы ж пишем там f от x, а не там y от x, к сожалению, да.
[01:00:45.020 --> 01:00:52.020]  Ну тогда уж есть y от x, y от a, например, я не знаю или там y от f, вот этого вот.
[01:00:52.020 --> 01:01:01.020]  Было, но к сожалению, это мы прикалывались, да, то есть это мы больше прикалывались, чем это приняли, чем так реально пишут.
[01:01:01.020 --> 01:01:17.020]  То есть как бы, то есть мало ли, там нет у меня учителей, там мой преподаватель физики вообще прикалывался, что может быть вы там когда-нибудь это изучите глубокую физику вообще и там изобретете закон, который будет там написан вот как-то вот в таком формате, там вот я не знаю.
[01:01:17.020 --> 01:01:23.020]  Там будет закон Руховича такой, да, например, да.
[01:01:23.020 --> 01:01:26.020]  Тут дот там можно все чертить.
[01:01:26.020 --> 01:01:30.020]  Нет, это одна буква.
[01:01:30.020 --> 01:01:34.020]  Нет, ну может быть вот такой закон, да, действительно, пожалуйста.
[01:01:34.020 --> 01:01:38.020]  Вот так формально сегодня рыды называют.
[01:01:38.020 --> 01:01:42.020]  Ну в общем-то.
[01:01:43.020 --> 01:01:48.020]  Ну нет, на еге осторожно, там можете есть.
[01:01:48.020 --> 01:01:55.020]  Ну тут нет, ну окей, тогда ладно.
[01:01:55.020 --> 01:02:02.020]  Ну там как бы, скажем так, есть риск, что как бы это проверяющий эксперт может не оценить юмора.
[01:02:02.020 --> 01:02:05.020]  Там мало ли, знаете, ну вот.
[01:02:05.020 --> 01:02:07.020]  Нет, ну как сказать.
[01:02:07.020 --> 01:02:16.020]  Ну а он скажет, ну извините, если вас в школе не научили, что буквы нельзя называть русскими, там функции не называются русскими буквами, ну соответственно.
[01:02:16.020 --> 01:02:19.020]  Ну да, ну как сказать.
[01:02:19.020 --> 01:02:34.020]  Как говорится, разные мнения, там опасно, потому что когда-то на заре еге были прецеденты, когда там бабушка посчитала, что там человек не умеет писать сортировку от того, что он написал не пузырёк, а кусорт.
[01:02:34.020 --> 01:02:38.020]  Вот, ну сейчас такого нету, конечно, уже видимо безобразие.
[01:02:38.020 --> 01:02:42.020]  Ну если это правда, это может, мне там байку передавали, конечно.
[01:02:42.020 --> 01:02:44.020]  Такое, ладно.
[01:02:44.020 --> 01:02:48.020]  Так, итак, смотрите, к чему мы в итоге подошли.
[01:02:48.020 --> 01:02:57.020]  Подошли мы в итоге к тому, что у нас высота оказывается ограничена, причём ещё и вполне себе простой пандемиальная вещь.
[01:02:57.020 --> 01:03:07.020]  То есть более того, на самом деле, мало того, что из этого следует алгоритм конечный, так ещё и возникает ощущение, что мы и выполним не более, чем пандемиальное число действий.
[01:03:07.020 --> 01:03:12.020]  Более того, сейчас мы даже получим более точные оценки на то.
[01:03:12.020 --> 01:03:16.020]  Значит, смотрите.
[01:03:16.020 --> 01:03:20.020]  Нет.
[01:03:20.020 --> 01:03:26.020]  Почему?
[01:03:26.020 --> 01:03:32.020]  Не совсем так.
[01:03:32.020 --> 01:03:40.020]  Это почти правильное утверждение, если рассматривать не все пуши, а один конкретный вид пуши.
[01:03:40.020 --> 01:03:44.020]  Называется это будет это вид насыщающие пуши.
[01:03:44.020 --> 01:03:46.020]  Значит, смотрите.
[01:03:46.020 --> 01:03:48.020]  Да, действительно, вот идея, действительно.
[01:03:48.020 --> 01:03:50.020]  Так, ну начнём с простого факта.
[01:03:50.020 --> 01:03:54.020]  Все релеблы выполняются суммарно за ООВЕ.
[01:03:54.020 --> 01:03:58.020]  Да.
[01:03:58.020 --> 01:04:00.020]  Ну потому что для каждой вершины...
[01:04:00.020 --> 01:04:02.020]  Нет, нет, давай так.
[01:04:02.020 --> 01:04:06.020]  Один релебл для одной вершины выполняется вообще за её степеньку.
[01:04:06.020 --> 01:04:12.020]  Выполнять релебл, делать релебл мы будем не более, чем там вот 2V-1 раз.
[01:04:12.020 --> 01:04:16.020]  Да, для каждой вершины не более, чем 2V-1 раз.
[01:04:16.020 --> 01:04:24.020]  Тогда если мы посуммируем по всем вершинам, по всем её релеблам, то получится 2V-1 раз на сумму по всем ребрам.
[01:04:24.020 --> 01:04:26.020]  Так, давайте, хорошо.
[01:04:26.020 --> 01:04:28.020]  Мы это делаем.
[01:04:28.020 --> 01:04:32.020]  Пробираемся по всем вершинам, значит, релеблы.
[01:04:32.020 --> 01:04:36.020]  И делаем количество релеблов.
[01:04:36.020 --> 01:04:38.020]  Отправляем в ящик.
[01:04:38.020 --> 01:04:40.020]  Ну, получается, что мы всё это делаем.
[01:04:40.020 --> 01:04:42.020]  Делаем по всему вершинам.
[01:04:42.020 --> 01:05:08.020]  Так, давайте, хорошо. Мы это делаем, пробираемся по всем вершинам релейбла и делаем на количество релейблов от v умножить на дег от v, это не превосходит сумму по всем вершинам 2 модуль v-1 на дег от v.
[01:05:08.020 --> 01:05:15.020]  Это равно 2 модуль v-1 на сумму дег от v.
[01:05:15.020 --> 01:05:40.020]  Равно, короче, 2 модуль v-1 на, ну давайте 2e напишем, да, все. То есть да, приятно, и даже еще константа не сильно большая. Не это там от v-e, где там o может быть 57 в степени 179.
[01:05:40.020 --> 01:05:42.020]  Нет, тут умножить.
[01:05:47.020 --> 01:05:52.020]  Ну это как это, в науке это называется умалое, да.
[01:05:53.020 --> 01:06:01.020]  Нет, там есть, конечно, чемпионаты, там, конечно, хотя там разные чемпионаты иногда. Бывает, например, чемпионаты, как известно сортировать быстрее, чем за n лог n нельзя.
[01:06:02.020 --> 01:06:09.020]  А теперь задача, а сортировать за n лог n плюс cn, где c как можно меньше. Да, такой чемпионат в науке реально есть.
[01:06:10.020 --> 01:06:12.020]  Вот.
[01:06:15.020 --> 01:06:17.020]  Вот он утверждает.
[01:06:17.020 --> 01:06:19.020]  Так.
[01:06:26.020 --> 01:06:27.020]  Итак, стрелайбл это да.
[01:06:27.020 --> 01:06:29.020]  Это да. Значит, теперь пуши.
[01:06:30.020 --> 01:06:36.020]  Значит, пуши у нас бывают, давайте скажем, насыщенные, не насыщенные пуши, а насыщающие.
[01:06:39.020 --> 01:06:48.020]  То есть это когда в результате, соответственно, вот это вот c, там cf становится в результате пуша нулем.
[01:06:53.020 --> 01:06:55.020]  А еще бывают ненасыщающие.
[01:06:57.020 --> 01:06:59.020]  Насыщающие, которые полностью капастик 0 свой, да?
[01:07:00.020 --> 01:07:01.020]  Не совсем.
[01:07:02.020 --> 01:07:04.020]  Ну, формально мы все равно напишем вот так.
[01:07:05.020 --> 01:07:11.020]  Потому что дело в том, что, то есть почему мы не можем просто написать, что ненасыщающие это те, которые делают excess 0?
[01:07:12.020 --> 01:07:19.020]  Потому что бывают пуши, которые в общем-то и ребро убили, и избыток обнулили.
[01:07:20.020 --> 01:07:26.020]  Вот. Поэтому, поэтому мы будем их относить в категорию насыщающих.
[01:07:27.020 --> 01:07:32.020]  Насыщающие, когда минимум сработал по c, а ненасыщающие, когда минимум сработал по excess.
[01:07:33.020 --> 01:07:34.020]  Да, причем строго по excess.
[01:07:35.020 --> 01:07:37.020]  Да, то есть если ничья, то отправляем насыщающие.
[01:07:40.020 --> 01:07:45.020]  Так вот, и теперь вот уже было оглашено практически действительно утверждение верное.
[01:07:46.020 --> 01:07:48.020]  То есть только вот по модулю этого одного слова.
[01:07:49.020 --> 01:07:51.020]  В процессе?
[01:07:52.020 --> 01:08:12.020]  Нет, в процессе концепции Голберга будет выполнено не более чем, я даже тут обычно пишу 2v-e, но я даже не пишу 2v-1 на…
[01:08:13.020 --> 01:08:14.020]  На e.
[01:08:15.020 --> 01:08:18.020]  А, на e. Да, не на 2e, а на e.
[01:08:18.020 --> 01:08:23.020]  Да, потому что как бы… Ну сейчас увидите почему.
[01:08:24.020 --> 01:08:26.020]  Насыщающих пушей.
[01:08:31.020 --> 01:08:32.020]  Почему так?
[01:08:38.020 --> 01:08:39.020]  Ну вот.
[01:08:41.020 --> 01:08:43.020]  Именно насыщающих, это важно.
[01:08:48.020 --> 01:09:02.020]  Ну все, что мы можем делать с вершиной после насыщающего пуша, это ревей.
[01:09:03.020 --> 01:09:05.020]  А что значит с вершиной?
[01:09:06.020 --> 01:09:09.020]  Нет, с вершиной мы можем делать все, что угодно, но фишка такая, да.
[01:09:10.020 --> 01:09:15.020]  Допустим, пусть ребро находится на высотах 57-56, и вы сделали насыщающий пуш.
[01:09:16.020 --> 01:09:26.020]  Для того, чтобы вы сделали следующий насыщающий пуш, или вообще следующий пуш, что нужно, нужно, чтобы эта вершина обогнала эту, вы сделали пуш по обратному ребру, не важно насыщающий или нет.
[01:09:27.020 --> 01:09:29.020]  А потом обогнали еще и вот эту вершину.
[01:09:31.020 --> 01:09:35.020]  То есть это означает, что по каждому конкретному ребру вообще там…
[01:09:36.020 --> 01:09:37.020]  То есть получается…
[01:09:39.020 --> 01:09:40.020]  По сути, да.
[01:09:40.020 --> 01:09:48.020]  Но можно даже уточнить, заметим, что если мы рассматриваем ребро и обратное, то заметим, что на каждой паре высот вы сделаете не более одного насыщающего пуша по обоим этим ребрам.
[01:09:49.020 --> 01:09:51.020]  Поэтому я вот здесь пишу вот так.
[01:09:56.020 --> 01:09:59.020]  Ну смотри, жила было ребро на высоте 57-56.
[01:10:00.020 --> 01:10:01.020]  Мы его насытили.
[01:10:02.020 --> 01:10:03.020]  Что нужно, чтобы еще раз его насытить?
[01:10:04.020 --> 01:10:07.020]  Нужно его насытить, то есть пихнуть поток по обратному ребру.
[01:10:07.020 --> 01:10:13.020]  Но для этого нужно, чтобы вот у этой вершины высота стала 58+.
[01:10:14.020 --> 01:10:15.020]  Кто эта вершина?
[01:10:16.020 --> 01:10:17.020]  Конец ребра.
[01:10:18.020 --> 01:10:22.020]  Ну просто она же должна в этом направлении пойти.
[01:10:23.020 --> 01:10:31.020]  Но мало этого, мы должны еще теперь в итоге повысить потом эту вершину на 59+, и уже тогда делать повторный пуш.
[01:10:31.020 --> 01:10:32.020]  Насытили это ребро.
[01:10:33.020 --> 01:10:34.020]  То есть пропускать способность у него ноль.
[01:10:35.020 --> 01:10:38.020]  Чтобы оно стало не ноль, нужно, чтобы в обратную сторону что-то протекло.
[01:10:39.020 --> 01:10:40.020]  Мы это можем сделать только через пуш.
[01:10:41.020 --> 01:10:45.020]  А пуш требует, чтобы вот эта вершина тогда, если хотим в эту сторону делать пуш, стала выше.
[01:10:46.020 --> 01:10:49.020]  То есть мы должны сделать не просто релейбла, а чтобы высота увеличилась хотя бы на два.
[01:10:51.020 --> 01:10:52.020]  Вот, хорошо.
[01:10:53.020 --> 01:10:54.020]  Сделали.
[01:10:54.020 --> 01:10:56.020]  А теперь пуш, вы хотите еще раз пуш в эту сторону?
[01:10:57.020 --> 01:10:58.020]  Так давайте теперь эта вершина должна выше стать.
[01:10:59.020 --> 01:11:06.020]  Получается, что высота обоих вершин между двумя пушами увеличились как минимум на два.
[01:11:07.020 --> 01:11:13.020]  То есть я поэтому 2VE я бы отсюда на халяву вывел, но если чуть-чуть внимательно присмотреться, можно увидеть и 2V-1.
[01:11:13.020 --> 01:11:14.020]  Ладно, на самом деле вот так.
[01:11:17.020 --> 01:11:18.020]  Нет, ладно, не так.
[01:11:25.020 --> 01:11:26.020]  1-1.
[01:11:27.020 --> 01:11:28.020]  Ладно, 1.
[01:11:29.020 --> 01:11:32.020]  Потому что с высоты 2V-1 пуш может быть, и с высоты 1 тоже.
[01:11:33.020 --> 01:11:35.020]  Но если мы будем делать это, то мы будем делать так.
[01:11:36.020 --> 01:11:39.020]  А если мы будем делать это с высоты 2V-1, то мы будем делать так.
[01:11:39.020 --> 01:11:43.020]  Потому что с высоты 2V-1 пуш может быть, и с высоты 1 тоже может быть.
[01:11:44.020 --> 01:11:46.020]  Что у нас на прошлой лекции было?
[01:11:47.020 --> 01:11:50.020]  Я не помню точно где, но мы точно также оценивали количество.
[01:11:51.020 --> 01:11:53.020]  Да, это был Эдман Скарп.
[01:11:58.020 --> 01:12:00.020]  Потому что да, там была похожая ситуация.
[01:12:01.020 --> 01:12:04.020]  То есть дело в том, что мы проталкивали поток, то есть помните как был Эдман Скарп?
[01:12:04.020 --> 01:12:05.020]  Мы запускали БФС.
[01:12:06.020 --> 01:12:12.020]  И поток пропускался только по ребрам, у которых там расстояние, правда наоборот, тут 57, тут 58.
[01:12:13.020 --> 01:12:16.020]  Но тогда выяснялось, что для того, чтобы...
[01:12:25.020 --> 01:12:26.020]  Ну да, типа того, да.
[01:12:27.020 --> 01:12:31.020]  То есть там выяснялось, что для того, чтобы разносытить это ребро, нужно чтобы эта вершина обогнала это.
[01:12:32.020 --> 01:12:34.020]  Тут было 58, 59, а потом 59, 60.
[01:12:35.020 --> 01:12:39.020]  Поэтому выяснялось, что по каждому ребру, каждое ребро может насытиться не более чем V пополам раз.
[01:12:40.020 --> 01:12:41.020]  Выяснялось у нас.
[01:12:42.020 --> 01:12:44.020]  Отсюда мы доказывали симпатику Эдман Скарпа.
[01:12:45.020 --> 01:12:50.020]  Да, то есть идея вот почти такая же, только конечно немножко в другом контексте.
[01:12:53.020 --> 01:12:55.020]  Так, ух ты, вот чудо, кроме нас там кто-то есть.
[01:12:55.020 --> 01:13:00.020]  А то в общем-то стало вообще казаться, что только мы сюда пришли, а так больше там занятий нигде нет.
[01:13:02.020 --> 01:13:04.020]  Я догадываюсь, что неправильно, да.
[01:13:05.020 --> 01:13:06.020]  Правильно?
[01:13:07.020 --> 01:13:11.020]  Ну нет, это странно было бы правильно, потому что почему мы занимаемся, а остальные нет.
[01:13:12.020 --> 01:13:15.020]  Не то, чтобы я против, я обеими руками за, но как бы...
[01:13:16.020 --> 01:13:17.020]  Чего?
[01:13:18.020 --> 01:13:19.020]  Ну да.
[01:13:20.020 --> 01:13:21.020]  Ну это да.
[01:13:22.020 --> 01:13:23.020]  Но они тоже на физитете как бы, да.
[01:13:24.020 --> 01:13:25.020]  Ну это да.
[01:13:26.020 --> 01:13:27.020]  Нет, ну всякое бывает.
[01:13:28.020 --> 01:13:32.020]  На физитете, конечно, общепринятые выходные часто игнорируются, но с другой стороны, я как-то раз пришел на занятия, а никого нет.
[01:13:33.020 --> 01:13:35.020]  А мне сказали, а чего, да, 8 мая праздник, да, все.
[01:13:36.020 --> 01:13:38.020]  Так что скорее всего 8 мая будет выходной.
[01:13:39.020 --> 01:13:41.020]  Ладно, правда настос с вами скорее всего них.
[01:13:42.020 --> 01:13:45.020]  Да, конкретно на занятия алгоритмов это не коснется.
[01:13:46.020 --> 01:13:47.020]  Так, ладно.
[01:13:48.020 --> 01:13:50.020]  Так, есть еще тут какие-то вопросы?
[01:13:51.020 --> 01:13:52.020]  Да.
[01:13:53.020 --> 01:13:54.020]  То есть мы еще не каштаром...
[01:13:55.020 --> 01:13:57.020]  Как это, не то чтобы в принципе не любим по баллоне?
[01:13:58.020 --> 01:13:59.020]  Нет, ну...
[01:14:00.020 --> 01:14:02.020]  Нет, нет, вопрос будет...
[01:14:03.020 --> 01:14:07.020]  Нет, чтобы понять как это писать, надо будет предъявить алгоритм как это делать.
[01:14:08.020 --> 01:14:12.020]  Но вот фишка в том, что писать это конечно будет прям муа, потому что тут все очень просто пишет.
[01:14:13.020 --> 01:14:14.020]  Нет, вот...
[01:14:17.020 --> 01:14:19.020]  Да, а теперь вопрос как, как ищем конкретно?
[01:14:21.020 --> 01:14:22.020]  Да.
[01:14:23.020 --> 01:14:27.020]  Но фишка в том, что про эту концепцию можно кучу всего доказать, что мы сейчас делаем.
[01:14:28.020 --> 01:14:30.020]  Уже до того, как мы предъявили хоть один алгоритм.
[01:14:31.020 --> 01:14:38.020]  Потому что, видите, мало того, что релейблов, то есть высоты небольшие, так еще и оказывается насыщающих кушей оказывается мало.
[01:14:39.020 --> 01:14:40.020]  Мы не насыщающие.
[01:14:41.020 --> 01:14:42.020]  Да, не насыщающие мы не оценили.
[01:14:43.020 --> 01:14:47.020]  Но я думаю мы это сделаем после перерыва, который уже явно наступает.
[01:14:48.020 --> 01:14:50.020]  Ладно, все, возвращаемся к делу.
[01:14:51.020 --> 01:14:52.020]  Итак, на чем мы остановились?
[01:14:53.020 --> 01:14:57.020]  Мы остановились на том, что релейблы у нас, оказывается, суммарно работают за VE, насыщающих кушей тоже VE.
[01:14:58.020 --> 01:14:59.020]  Теперь мне стекает вопрос.
[01:15:00.020 --> 01:15:01.020]  Спрашивать, а сколько бывает ненасыщающих?
[01:15:02.020 --> 01:15:04.020]  Вот, но это уже не так тривиально.
[01:15:05.020 --> 01:15:09.020]  Потому что ненасыщающих кушей на одной высоте может быть сколько угодно.
[01:15:10.020 --> 01:15:17.020]  Единственное только, что мы знаем, это, конечно, то, что каждый ненасыщающий куш обнуляет испыток.
[01:15:21.020 --> 01:15:24.020]  Так, поэтому возникает нот.
[01:15:25.020 --> 01:15:27.020]  Ну, действительно, у нас возникает теорияма.
[01:15:29.020 --> 01:15:30.020]  Там тоже, видимо.
[01:15:31.020 --> 01:15:33.020]  Ладно, теорияма в процессе.
[01:15:33.020 --> 01:15:34.020]  В процессе.
[01:15:38.020 --> 01:15:40.020]  В процессе КГ будет выполнено.
[01:15:42.020 --> 01:15:43.020]  Будет.
[01:15:50.020 --> 01:15:51.020]  Не более чем.
[01:15:58.020 --> 01:16:01.020]  Не более чем ненасыщающих куш.
[01:16:02.020 --> 01:16:04.020]  Да, определенно, не более чем.
[01:16:07.020 --> 01:16:08.020]  Как же получить оценку?
[01:16:17.020 --> 01:16:22.020]  Ну, как всегда, чтобы получить оценку, надо ввести правильный потенцеваль.
[01:16:25.020 --> 01:16:26.020]  Какой потенцеваль ввести?
[01:16:31.020 --> 01:16:32.020]  100.
[01:16:55.020 --> 01:16:57.020]  Чем приятен такой потенцеваль?
[01:16:58.020 --> 01:17:03.020]  Потенцеваль приятен тем, что каждый ненасыщающий куш уменьшил потенциал хотя бы на один.
[01:17:13.020 --> 01:17:14.020]  Но мог увеличить.
[01:17:16.020 --> 01:17:17.020]  Это неправда.
[01:17:18.020 --> 01:17:22.020]  Нет, насыщающий мог его увеличить на высоту той вершины, в которую он проводился.
[01:17:24.020 --> 01:17:25.020]  Поэтому не все так просто.
[01:17:28.020 --> 01:17:38.020]  То есть насыщающий куш – это плюс не более чем 2v-1.
[01:17:41.020 --> 01:17:42.020]  2v-2.
[01:17:52.020 --> 01:17:53.020]  То есть когда ты делаешь куш…
[01:17:58.020 --> 01:17:59.020]  То есть он…
[01:18:20.020 --> 01:18:21.020]  Да.
[01:18:22.020 --> 01:18:26.020]  Но тут вопрос не до какой степени она может расти, а насколько она суммарно может увеличить.
[01:18:27.020 --> 01:18:29.020]  Она же внутри этого диапазона может туда-сюда ходить.
[01:18:34.020 --> 01:18:35.020]  Это насыщающий.
[01:18:36.020 --> 01:18:38.020]  Не насыщающий.
[01:18:41.020 --> 01:18:43.020]  Плюс не более чем минус один.
[01:18:43.020 --> 01:18:44.020]  Минус один.
[01:18:50.020 --> 01:18:53.020]  Да, но у нас на потенциал еще влияют релейблы, очевидно.
[01:18:55.020 --> 01:18:57.020]  Но как влияют на потенциал релейблы?
[01:19:03.020 --> 01:19:12.020]  Заметим, что по каждой вершине, если высота вершины увеличилась 57 на 179, то и потенциал увеличился на 179-57.
[01:19:13.020 --> 01:19:14.020]  Почему насыщающие…
[01:19:29.020 --> 01:19:30.020]  Так что вот такие оценки.
[01:19:31.020 --> 01:19:40.020]  То есть так как насыщающий всегда уменьшает потенциал, меньше нуля он не становится, значит получается можно написать сумму вот этого вот.
[01:19:43.020 --> 01:19:52.020]  Вот, нет, ну да.
[01:19:54.020 --> 01:19:57.020]  Ну как много, на самом деле получается там…
[01:19:58.020 --> 01:20:11.020]  Ну на самом деле я вам так скажу, можно написать, что это не превосходит, называется 4 модуль V на модуль E плюс 2 модуль V в квадрате.
[01:20:13.020 --> 01:20:22.020]  Вот теперь хорошо.
[01:20:26.020 --> 01:20:41.020]  Ну у нас высота не более чем 2V минус 1, но нам даже не важно сколько релейблов, нам важно, что суммарно по каждой вершине как бы релейбл увеличил потенциал не более чем на 2V минус 1, а все вершины 2V минус 2.
[01:20:44.020 --> 01:20:52.020]  Ну нет, мы даже не считали, мы считали, что высота не более чем 2V минус 1, а каждый релейбл увеличивает высоту хотя бы на 1.
[01:20:53.020 --> 01:20:55.020]  Но это и не важно.
[01:20:56.020 --> 01:21:02.020]  Нас сейчас интересует, нас сейчас даже не интересно количество релейблов, нам интересует на какую высоту они задирают вершины.
[01:21:03.020 --> 01:21:04.020]  Вот.
[01:21:05.020 --> 01:21:11.020]  Ну то есть нет, на самом деле произошла как бы историческая ситуация.
[01:21:11.020 --> 01:21:12.020]  Вот.
[01:21:19.020 --> 01:21:21.020]  Почему на одну? А я не на одну, я на все считал.
[01:21:22.020 --> 01:21:23.020]  Да.
[01:21:23.020 --> 01:21:24.020]  Ладно.
[01:21:24.020 --> 01:21:26.020]  Так хорошо, да, неправ, неправ, неправ.
[01:21:28.020 --> 01:21:29.020]  Вот так.
[01:21:29.020 --> 01:21:30.020]  Вот.
[01:21:34.020 --> 01:21:38.020]  Да, то есть не насыщаясь каждой, не насыщающей 2V минус 2 суммарно вот столько.
[01:21:39.020 --> 01:21:41.020]  Релейблы суммарно вот столько, да.
[01:21:42.020 --> 01:21:43.020]  Хорошо.
[01:21:43.020 --> 01:21:45.020]  Но получается очень интересная вещь.
[01:21:46.020 --> 01:21:55.020]  То есть мы уже достигаем асимптотики 1, если нам просто с небес по факсу в каждый момент времени сообщают, а что собственно делать.
[01:21:56.020 --> 01:22:01.020]  То есть обратите внимание, мы в принципе оказывается пушей сделаем не более чем от V2E.
[01:22:03.020 --> 01:22:05.020]  И релейблы суммарно работают с ZVE.
[01:22:10.020 --> 01:22:13.020]  Нет, ну смотрите, ну да, то есть в качестве упражнения придумать.
[01:22:25.020 --> 01:22:26.020]  Ну там так.
[01:22:26.020 --> 01:22:27.020]  Ну там начинается техника.
[01:22:27.020 --> 01:22:29.020]  Во-первых, давайте, давайте.
[01:22:32.020 --> 01:22:34.020]  Нет, ну на уровне кукарека давайте так.
[01:22:34.020 --> 01:22:37.020]  Надо придумать не очередь, а можно придумать там, скажем, двухсвязный список.
[01:22:37.020 --> 01:22:38.020]  Почему двухсвязный список?
[01:22:38.020 --> 01:22:40.020]  Потому что из него удобно из середины удалять.
[01:22:41.020 --> 01:22:45.020]  Давайте запишем, будем хранить двухсвязный список вершин, у которых там избыток больше 0.
[01:22:46.020 --> 01:22:47.020]  Вот.
[01:22:47.020 --> 01:22:53.020]  А еще у каждой вершины давайте хранить там, я не знаю, там список ребер.
[01:22:53.020 --> 01:22:57.020]  Там тоже список ребер, по которым можно сделать пуш, допустим.
[01:22:58.020 --> 01:23:00.020]  И при каждом релейбле его там аккуратно поддерживать.
[01:23:02.020 --> 01:23:03.020]  Ну в принципе можно, да?
[01:23:04.020 --> 01:23:05.020]  Ну вот.
[01:23:05.020 --> 01:23:12.020]  То есть там аккуратно можно допилить, и тогда получается на каждом шаге вы за от единицы будете понимать, надо релейбл делать или пуш.
[01:23:12.020 --> 01:23:13.020]  Если пуш, то где?
[01:23:16.020 --> 01:23:22.020]  А его никто не, а его никто не требует за от единицы, потому что они суммарно ZVE работают, от нас устраивает.
[01:23:24.020 --> 01:23:26.020]  То есть обратите внимание, узкое место не здесь.
[01:23:29.020 --> 01:23:30.020]  Чего?
[01:23:30.020 --> 01:23:33.020]  То есть узкое место на самом деле это вот здесь, в ненасыщающих пушах.
[01:23:34.020 --> 01:23:38.020]  Потому что все остальное, кроме них, работает ZVE само, просто само работает ZVE.
[01:23:41.020 --> 01:23:42.020]  Вот.
[01:23:42.020 --> 01:23:47.020]  Но это же и дает возможность действительно думать, а как бы действительно они взяли как-нибудь красиво организовать.
[01:23:47.020 --> 01:23:53.020]  Действительно там поиск, там, собственно, там пушие релейблы действительно так, чтобы тут было побыстрее.
[01:23:55.020 --> 01:23:56.020]  Вот.
[01:23:56.020 --> 01:23:58.020]  Но для этого надо возвыситься над концепцией пуш релейбу.
[01:24:02.020 --> 01:24:04.020]  Потому что, ну что такое возвыситься?
[01:24:04.020 --> 01:24:06.020]  Ну идея, идея она будет так.
[01:24:06.020 --> 01:24:10.020]  Ну потому что как у вас будет обычно, вот представься, что вы пишете в коде.
[01:24:10.020 --> 01:24:11.020]  Да?
[01:24:11.020 --> 01:24:12.020]  Как вы пишете код?
[01:24:12.020 --> 01:24:16.020]  Ну наверное вы напишете сеть, напишете значит там какой-нибудь класс.
[01:24:16.020 --> 01:24:28.020]  У которого будет там функция пуш, функция релейбл и соответственно что-то еще вроде что-то еще виртуальный там чисто виртуальный метод значит там найти поток.
[01:24:31.020 --> 01:24:32.020]  Ну да.
[01:24:32.020 --> 01:24:41.020]  Ну потому что это это типа класс типа типа типа типа отнаследуете от него собственно все алгоритмы наследы там которые основаны на пуш релейблу.
[01:24:42.020 --> 01:24:44.020]  Да еще желательно вы там.
[01:24:44.020 --> 01:24:46.020]  А вы еще там напишете конструктор.
[01:24:48.020 --> 01:24:53.020]  То есть там фишка такая еще напишете конструктор, который будет принимать в себя сеть и делать вот это.
[01:24:53.020 --> 01:24:54.020]  Это важно.
[01:24:56.020 --> 01:24:59.020]  Это как бы заметь это не часть.
[01:24:59.020 --> 01:25:00.020]  То есть это как бы часть концепции.
[01:25:02.020 --> 01:25:03.020]  Вот.
[01:25:03.020 --> 01:25:05.020]  То есть и нет мы не перегрузим.
[01:25:05.020 --> 01:25:06.020]  Это да.
[01:25:06.020 --> 01:25:09.020]  То есть максимум что можно сделать это дополнительное действие делать, но не более.
[01:25:09.020 --> 01:25:10.020]  Вот.
[01:25:11.020 --> 01:25:12.020]  Ну там можно задуматься.
[01:25:12.020 --> 01:25:21.020]  Ну вот там разные варианты есть значит то вот то есть то есть возможно у вас в самом классе даже сеть может быть будет даже как то доступно только в режиме ридонли.
[01:25:22.020 --> 01:25:23.020]  Вот.
[01:25:23.020 --> 01:25:31.020]  А ну вот а что-то мне но что-то мне но ты высоты тоже в режиме ридонли и менять их можно только с помощью методов пуши релейбл.
[01:25:32.020 --> 01:25:34.020]  Ну в идеале так концептуально.
[01:25:34.020 --> 01:25:40.020]  Ну вот то есть ну в идеале то есть я себя там просил вас там написать супер код там с код ревью то я требовал что-нибудь подобного.
[01:25:41.020 --> 01:25:42.020]  Вот но вам повезло.
[01:25:42.020 --> 01:25:43.020]  Да вот конкретно вам.
[01:25:43.020 --> 01:25:44.020]  Да.
[01:25:47.020 --> 01:25:50.020]  Нет в прошлом по-моему нет в прошлом по-моему не было.
[01:25:50.020 --> 01:25:55.020]  Но скажи так скажи так несколько несколько поколений ваших предшественников такое писал.
[01:25:56.020 --> 01:25:57.020]  Вот.
[01:25:57.020 --> 01:26:01.020]  То есть в какой-то момент я стал что-то упирать больше на больше на алгоритмы чем на коде.
[01:26:01.020 --> 01:26:07.020]  Ну отчасти видимо с приходом того что у нас тут у вас есть соседний предмет на котором вас мучают всем всем по всеми подобными вещами.
[01:26:08.020 --> 01:26:09.020]  Вот.
[01:26:09.020 --> 01:26:15.020]  Ну собственно причем более того это логично делать это именно там потому что это занятие за задание по C++ а не по алгоритмам на самом деле.
[01:26:15.020 --> 01:26:16.020]  Чего.
[01:26:18.020 --> 01:26:19.020]  А.
[01:26:19.020 --> 01:26:20.020]  Ой ну даже.
[01:26:21.020 --> 01:26:22.020]  Ну да.
[01:26:22.020 --> 01:26:26.020]  Ну вот хотя не так хотя надо хотя надо подумать может на самом деле зря это дело может на самом деле.
[01:26:26.020 --> 01:26:27.020]  Вот так вот.
[01:26:27.020 --> 01:26:30.020]  Но на самом деле сейчас дальше на самом деле было бы еще круче.
[01:26:31.020 --> 01:26:38.020]  Мало того чтобы написали такой класс но прежде чем реализовывать алгоритм вы бы ввели наследник вы бы ввели наследника.
[01:26:38.020 --> 01:26:42.020]  Называется Dischargeable там такой Dischargeable.
[01:26:44.020 --> 01:26:47.020]  Значит смотрите апгрейд этой концепции.
[01:26:48.020 --> 01:26:50.020]  Мы запрещаем себе пользоваться пушкой лейбл.
[01:26:50.020 --> 01:26:51.020]  То есть мы отправляем в приват.
[01:26:53.020 --> 01:26:58.020]  А разрешаем себе пользоваться только великой функцией Discharge.
[01:27:20.020 --> 01:27:21.020]  Смотрите.
[01:27:22.020 --> 01:27:23.020]  Значит фишка такая.
[01:27:24.020 --> 01:27:25.020]  Потому что да.
[01:27:26.020 --> 01:27:31.020]  Значит но алгоритм будет значит он вообще по идее работает для абсолютно любой вершины мы будем запускать.
[01:27:32.020 --> 01:27:35.020]  Он даже не будет требовать чтобы чтобы избыток был больше нуля.
[01:27:37.020 --> 01:27:41.020]  Хотя работать он будет такой ваил.
[01:27:41.020 --> 01:27:43.020]  Он будет работать такой ваил.
[01:27:44.020 --> 01:27:51.020]  Но то есть действительно как следует из названия там цель обнулить избыток в это распихать вещества.
[01:27:52.020 --> 01:27:53.020]  Ваил.
[01:27:54.020 --> 01:27:55.020]  Ваил.
[01:27:56.020 --> 01:27:57.020]  Ваил.
[01:27:58.020 --> 01:27:59.020]  Ваил.
[01:28:00.020 --> 01:28:01.020]  Ваил.
[01:28:02.020 --> 01:28:03.020]  Ваил.
[01:28:04.020 --> 01:28:05.020]  Ваил.
[01:28:06.020 --> 01:28:07.020]  Ваил.
[01:28:07.020 --> 01:28:16.460]  там цель обнулить избыток В, то есть распихать его куда-нибудь. Как мы его будем делать? Ну идея тут
[01:28:16.460 --> 01:28:24.620]  подсказывается Ефимом Батьковичем Деницем. Потому что смотрите какая идея. Допустим мы, ну то есть
[01:28:24.620 --> 01:28:30.740]  как мы вообще теоретически могли бы искать вершину в ребро, по которому можно сделать пушь? Наверное
[01:28:30.740 --> 01:28:40.460]  мы бежали по списку ребр, правда? А теперь ситуация. Жили-были ребра. Вот, вы бежите-бежите-бежите-бежите-бежите
[01:28:40.460 --> 01:28:48.420]  и неожиданно выяснилось, что пушь делается вот по этому ребру. Тогда есть подозрение, что до
[01:28:48.420 --> 01:28:54.420]  ближайшего релейбла, наверное, вот эти ребра трогать смысла нету, правда? Потому что либо они
[01:28:54.420 --> 01:29:00.380]  насыщены, либо не подходят по высотам. А если они сейчас не подходят по высотам, то они в общем-то,
[01:29:00.380 --> 01:29:07.340]  если там будет релейбл от этих вершин, тем более не подойдут. Поэтому храним тот самый, я вот забыл,
[01:29:07.340 --> 01:29:17.500]  как мы его в прошлый раз называли, итератор от вершины, от ребра. Значит, смотрите. Значит, пишем.
[01:29:17.500 --> 01:29:27.780]  Значит, если оказалось, что итератор, ну вот. Значит, если оказалось, что вот этот вот it от v,
[01:29:27.780 --> 01:29:47.300]  validin, то что мы делаем? Не факт, не факт, не факт, не факт. Validin это означает, что как бы этот
[01:29:47.300 --> 01:30:03.180]  итератор указывает на какое-то ребро. Ну типа да, помните у нас было. Сейчас все будет спокойно. Нет,
[01:30:03.180 --> 01:30:09.260]  тут просто есть очень аккуратная реализация с такой минимизацией символов. Смотрите, тут просто
[01:30:09.260 --> 01:30:20.380]  ситуация такая. Оказывается, что если, оказывается, что значит it, значит c, ну давайте я так, it c
[01:30:20.380 --> 01:30:34.340]  минус it f оказалось больше нуля, end-end, значит h от it finish оказался действительно равен h от v
[01:30:34.940 --> 01:30:43.980]  но h от v минус 1, то в этом случае что я делаю? Да, тогда я просто делаю push. Причем обратите
[01:30:43.980 --> 01:30:50.500]  внимание, итератор я не двигаю, потому что может оказаться это ненасыщающий push, поэтому делаю
[01:30:50.500 --> 01:31:02.940]  тут push от, ну так сказать it. Ну можно звездочка, push от it напишу короче. Тут конечно it от v
[01:31:02.940 --> 01:31:16.860]  везде подразумевается. Вот так. Вот, в противном случае я делаю, то есть it от v точка next. Не
[01:31:16.860 --> 01:31:23.860]  переприсваиваю, а именно точка next, он типа сам внутри себя двигается. Смотрите, это очень удобно
[01:31:23.860 --> 01:31:30.740]  обретите внимание, то есть сразу, что если у меня сейчас xs обнулился из быта, то указатель
[01:31:30.740 --> 01:31:37.420]  должен остаться на этом ребре, что он и делает. А если это насыщающий push, то то есть на следующей
[01:31:37.420 --> 01:31:41.940]  итерации он посмотрит на это же ребро, скажет, что у него там остаточная пропускная способность 0,
[01:31:41.940 --> 01:31:51.260]  поэтому он перейдет дальше. В этом смысле здесь удобно. Так вот, значит это был такой. Ну а в
[01:31:51.260 --> 01:31:57.700]  противном случае, что мы делаем? Если оказалось, что итератор уже не валиден, то очевидно нам
[01:31:57.700 --> 01:32:12.100]  просто нужно сделать relabel от v, во-первых, и объявить, что it от v равно begin от v. Все, это вся функция.
[01:32:12.100 --> 01:32:32.740]  Да мы и push больше нигде больше делать не будем. То есть на самом деле дополняю, то есть теперь такая,
[01:32:32.740 --> 01:33:01.180]  то есть так сказать discharge концепция. То есть первый init и второе. Делаем discharge пока,
[01:33:01.180 --> 01:33:23.140]  пока что. Ну вот, пока есть, нет, можем мы всегда. Пока есть вершины с excess больше нуля. Ну формально
[01:33:23.140 --> 01:33:30.220]  я должен вот так написать, конечно. Вот, то есть мы, да, то есть мы себе, то есть мы даже уже
[01:33:30.220 --> 01:33:37.860]  использовали push relabel, делегируем конкретные функции. Да, это называется, мы пишем код более
[01:33:37.860 --> 01:33:46.660]  высокого уровня, кстати. Вот. Да, ну чем-то нам поможет.
[01:33:46.660 --> 01:34:12.180]  Нет, ну можем, да. Нет, что мы можем. Нет, мы всегда можем, вопрос только конкретно как.
[01:34:12.180 --> 01:34:22.860]  Ну да, нет. Ну да, допустим мы даже там, да, то есть допустим мы даже в push relabel допилим
[01:34:22.860 --> 01:34:36.180]  там соответственно 6 там. Да, нет, это можно, безусловно. Но вопрос как бы улучшить ли нам
[01:34:36.180 --> 01:34:45.620]  это асимптотику. То есть, к сожалению, да, потому что непонятно, за сколько это работает, потому что,
[01:34:45.620 --> 01:34:51.300]  да, потому что в принципе, то есть понятно, что discharge конечно выполнит, то есть в итоге так,
[01:34:51.300 --> 01:34:56.100]  discharge, если избыток был больше нуля, то он конечно выполнит. Хоть либо push, либо relabel уж выполнит.
[01:34:56.100 --> 01:35:02.900]  Но это вполне может оказаться ненасыщающей push и как бы пока ничего не понятно. И ничего не
[01:35:02.900 --> 01:35:10.620]  горит. Поэтому нам придется придумать пару новых алгоритмов. Вот. Ну то есть, конечно, да,
[01:35:10.620 --> 01:35:16.300]  если вы будете просто там поддерживать очередь из выточенных вершин, и тогда, тогда, пожалуйста,
[01:35:16.300 --> 01:35:26.460]  да, там как бы асимптотика будет автоматически от в квадрате. Да, но это ничего страшного,
[01:35:26.460 --> 01:35:30.940]  потому что асимптотика, у движения такое, сами по себе, если у нас сама по себе последует из
[01:35:30.940 --> 01:35:36.780]  discharge, да, если мы просто рассмотрим алгоритм, то она будет работать за от, я утверждаю,
[01:35:36.780 --> 01:35:45.860]  что она будет работать за от ve плюс количество вызовов discharge. Да, потому что, почему? Ну,
[01:35:45.860 --> 01:35:51.180]  потому что суммарно пробегания вот эти по всем ребрам, они все равно за ve работают. Ну, за два
[01:35:51.180 --> 01:36:01.020]  ve в смысле. Понятно, да? Ну, утверждение такое, рассмотрим последовательность discharge,
[01:36:01.020 --> 01:36:23.980]  которые, а ну давайте напишу, что я тут уже собственно. Вот, значит, утверждение
[01:36:23.980 --> 01:36:36.860]  последовательность discharge, то есть не весь алгоритм, а именно вот последовательность discharge
[01:36:36.860 --> 01:37:06.820]  в процессе, ну назовем это dk, не буду здесь спалчем, вот работает за от ve плюс количество
[01:37:06.820 --> 01:37:27.940]  именно вызовов discharge. А смотрите, ну потому что, смотрите, discharge будет двух типов, те,
[01:37:27.940 --> 01:37:34.900]  которые заканчиваются за от единицы и те, которые двигают итератор. Ну, те, которые за от единицы,
[01:37:34.900 --> 01:37:44.060]  они пишутся сюда, вот сюда. А все остальные двигают, значит, а кто у нас двигает? Ну,
[01:37:44.060 --> 01:37:52.500]  либо у нас двигается итератор, значит, вот здесь, либо он двигается здесь, и мы делаем relabel. Но,
[01:37:52.500 --> 01:38:00.300]  но, как мы помним, у нас высота, то есть relabel меняет высоту, значит, высота меняется не более,
[01:38:00.300 --> 01:38:08.780]  чем там 2v минус один раз. Вот, и итератор у нас двигается тут в процессе, то есть между relabel
[01:38:08.780 --> 01:38:14.900]  и итератор двигается не более, чем там степень вершины раз. Ну и relabel тоже работает за степень
[01:38:14.900 --> 01:38:40.460]  вершины раз. Да, да, да. Не более, чем дек, поэтому сумма. Да, да, да. Ну, можно, ну там.
[01:38:44.900 --> 01:38:55.540]  Нет, это не совсем так, потому что есть еще, потому что в discharge вы еще натыкаетесь на неинтересные
[01:38:55.540 --> 01:39:08.780]  ребра, по которым нельзя сделать push. И вы на них тоже тратите next. Нет, это тоже WE, да. А мы еще ни
[01:39:08.780 --> 01:39:17.620]  одного алгоритма не сказали. Смотрите еще раз. Рассмотрим, значит, в последствии discharge. У нас
[01:39:17.620 --> 01:39:22.620]  discharge бывает двух типов. Те, которые двигают итератор, и те, которые не двигают. Но те,
[01:39:22.620 --> 01:39:29.820]  которые не двигают, они завершаются за вот единицы. Их, соответственно, вот столько. А те,
[01:39:29.820 --> 01:39:35.500]  которые двигают, ну давайте подумаем, сколько раз у нас итератор двигается. Между relabel и
[01:39:35.500 --> 01:39:43.780]  итератор двигается сколько раз? Ну, ровно там, держат вершины раз. Логично, да? Вот. Более того,
[01:39:43.780 --> 01:39:50.460]  relabel, каждый relabel, кстати, потом работает за такую же асимптотику. Но relabel у нас самих там
[01:39:50.460 --> 01:39:56.460]  2 вы минус 1, правда? То есть, получается, у каждой вершины тогда суммарно этих движений итераторов
[01:39:56.460 --> 01:40:06.340]  от 2v умножить на ее степень. А суммарная степень всех вершин, когда мы суммируем,
[01:40:06.340 --> 01:40:13.340]  получается е. Все. Получается вот такой. Получается от 2e. Двойки какие-то убрал, естественно.
[01:40:13.340 --> 01:40:23.300]  Так что вот такой вот красота. Остается только придумать совсем красоту, как теперь пихать
[01:40:23.300 --> 01:40:29.660]  поток как-нибудь хорошо. Потому что если от балды искать на каждом шаге, куда делать дискчатч,
[01:40:29.660 --> 01:40:43.500]  то может быть больно. Вот. Ну, значит, смотрите. Ну, начнем с Кормана. Потому что Корман и компания
[01:40:43.500 --> 01:40:49.460]  в этом месте предлагают алгоритм, который они гордо называют, поднять в начало.
[01:40:49.460 --> 01:41:18.700]  Они говорят. Ну вот. Занесем все вершины, которые не исток,
[01:41:18.700 --> 01:41:39.140]  и там, соответственно, сток в односвязанный список. Дальше алгоритм говорит следующее.
[01:41:39.140 --> 01:41:53.060]  Будем. Значит, будет, значит, будет, значит, будет, но вот. Пройдемся по списку.
[01:41:53.060 --> 01:42:14.260]  Вот. И выполним дискчатч от каждой вершины. От каждой вершины.
[01:42:23.060 --> 01:42:48.860]  Вот. Да, важный момент. Значит, при этом, если в результате дискчатч, значит, высота вершины В
[01:42:48.860 --> 01:43:06.180]  увеличилась, то. Ладно, тут скобочки поставим. То. Что мы сделаем? То мы, да. Как следует из
[01:43:06.180 --> 01:43:34.100]  дозвания, да. То поместим В в начало списка. И, внимание, начнем заново. Вот.
[01:43:36.180 --> 01:43:58.380]  А все. Ну, давайте хорошо напишу. Ну и, соответственно, если дошли до конца. Вот. То завершаем работу.
[01:44:06.180 --> 01:44:31.100]  Вот. Вот такой простой алгоритм. Простой. Почему он работает? Ну да. Вообще, да. Вообще не очевидно,
[01:44:31.100 --> 01:44:38.380]  почему этот алгоритм вообще, действительно, хотя бы находит поток. Действительно. Да,
[01:44:38.380 --> 01:44:43.140]  потому что хочется сказать. То есть, да, он делает какие-то дискчатчи. Конечно, там все хорошо. Но
[01:44:43.140 --> 01:44:49.380]  хотя бы, это хорошо. Допустим, он закончился. Хотя еще отдельная песня. Закончился ли он? Хотя,
[01:44:49.380 --> 01:44:54.060]  ладно, когда-нибудь. Да, понятно, что он закончился, потому что релейблов у нас не бесконечное
[01:44:54.060 --> 01:45:01.580]  количество. Это да. Но возникает вопрос. Да, а верно ли, что в конце у нас вообще, как бы,
[01:45:01.580 --> 01:45:18.300]  все избытки убились? Ну, в целом. Ну, что такое в целом? Все эксцессы в целом. Знаете, как это.
[01:45:18.300 --> 01:45:33.260]  Смотрите. Идея очень простая. Значит, на самом деле базируется все на одном очень интересном
[01:45:33.260 --> 01:45:57.620]  наблюдении. В каждый момент времени для любого ребра ВУЦФ, там, лежащим в ЕФ, такому, что можно
[01:45:57.620 --> 01:46:09.300]  выполнить пуш от Е. Нет, ладно, не можно выполнить. Неправильно так писать. Правильно писать такого,
[01:46:09.300 --> 01:46:17.460]  что С от Ф больше нуля и H от В равно H от У плюс 1. Да, это не эквивалентно тому, что можно выполнить
[01:46:17.460 --> 01:46:42.020]  пуш по причине избытка. Вот так вот. Верно следующее, что У в списке идет дальше В.
[01:46:42.020 --> 01:47:02.740]  Ну или, соответственно, У равно Т, естественно. Ладно или С, хорошо. Ну, можно. Ну, можно. Не, ну,
[01:47:02.740 --> 01:47:17.860]  можно С от Ф в конец списка запихнуть, конечно, если хочется. Да, но в самом начале у тебя все высоты равны
[01:47:17.860 --> 01:47:23.500]  нулю и ребер, по которому ты можешь сделать, нет вообще. Да, вот в этом смысле кайфежно. Ребра,
[01:47:23.500 --> 01:47:31.060]  по которым делать пуш, появляются потом. Как это называется, да. Как-то говорят в некоторых областях,
[01:47:31.060 --> 01:47:37.140]  удовольствие должно случиться потом. Сначала должно случиться совпадение интересов,
[01:47:37.140 --> 01:47:52.860]  собственных общих взглядов. Так, о чем я это вообще? Вот, соответственно, волшебство должно
[01:47:52.860 --> 01:48:01.980]  случиться потом. Вот. Так вот. А в процессе теперь давайте думать, в какой момент это условие может
[01:48:01.980 --> 01:48:12.700]  вообще нарушиться? Да, изначально это так. Теперь по индукции. Пока диск-чаши делают тупо пуши,
[01:48:12.700 --> 01:48:23.460]  у нас это условие не меняется от слова никак, правда? Да, потому что, вот, потому что,
[01:48:23.460 --> 01:48:28.900]  ну, заметим следующее, что в результате того, что мы делаем пуш, у нас появляется обратное ребро,
[01:48:28.900 --> 01:48:36.540]  которое ведет наоборот, как бы увеличивает высоту, поэтому на это условие не влияет никак. То есть
[01:48:36.540 --> 01:48:41.340]  проблема может возникнуть только у вершины В, у которой мы неожиданно решили вызвать релейбл.
[01:48:41.340 --> 01:48:50.620]  Но, как мы уже в самом начале обсуждали, в результате того, что мы вызвали релейбл,
[01:48:50.620 --> 01:48:57.580]  в новых интересных входящих ребер не появилось именно входящих. Вот мы в самом начале это
[01:48:57.580 --> 01:49:05.380]  обсуждали, вот как я спрашивал. Ну, потому что не может так случиться, что у тебя вершина В
[01:49:05.380 --> 01:49:10.140]  поднялась, и тут, оказывается, из какой-то вершины в нее появился ребро с разностью высот минус один.
[01:49:10.140 --> 01:49:15.660]  Это значит, что перед этим оно было с разностью высот минус много, а такого у нас не было просто
[01:49:15.660 --> 01:49:29.220]  по исходной концепции пуш релейбл. Вот у нас там написано. Ну, зато могли появиться исходящие
[01:49:29.220 --> 01:49:35.700]  интересные ребра. Но ровно для того, чтобы избежать их проблем, мы их перетаскиваем в начало.
[01:49:35.700 --> 01:49:50.820]  Такая вот неожиданная приятность. Так что получается, что алгоритм работает. Все более того,
[01:49:50.820 --> 01:49:56.020]  в каждый момент времени интересные ребра в нем образуют ациклическую сеть, причем топологическая
[01:49:56.580 --> 01:50:05.300]  у нас в списке топологическая сортировка этой сети. Но из-за этой лемы автоматически следует,
[01:50:05.300 --> 01:50:14.940]  что если алгоритм закончился, то он найдет вам правильный ответ. Да, почему он заканчивается?
[01:50:14.940 --> 01:50:22.260]  Ну, потому что у нас каждый проход заканчивается либо концом алгоритма, либо релейблом. А релейблов у
[01:50:22.260 --> 01:50:33.180]  нас мало. Вот. Нет, почему? Мало. Сколько у нас самих релейблов, так сказать? Да, давайте подумаем,
[01:50:33.180 --> 01:50:41.940]  кстати. Нет, релейблов у нас не ве. Релейблов самих вызовов релейблов в квадрат. Другое,
[01:50:41.940 --> 01:50:47.980]  просто они суммарно работают за ве. А тут нам вот это утверждение сразу помогает. То есть мы
[01:50:47.980 --> 01:50:55.300]  работаем за количество дисчарч. Но наш алгоритм... Сколько раз дисчарчи вызываются в этом алгоритме?
[01:50:55.300 --> 01:51:01.540]  Они вызываются в умножить на количество релейблов плюс один. Да, в куб.
[01:51:01.540 --> 01:51:15.700]  Значит, почему? Ну, потому что, смотрите, потому что граф у вас ассоциклический, да, с интересными
[01:51:15.700 --> 01:51:21.940]  релейблами. То есть это означает следующее, что когда вы делаете разрядку, весь этот избыток
[01:51:21.940 --> 01:51:26.820]  переходит в вершины, которые пока не выполнены релейбл, они переходят в вершины, которые находятся
[01:51:26.820 --> 01:51:33.980]  дальше по списку, ну или высоты. То есть это означает, что если вы дошли до этой вершины сейчас,
[01:51:33.980 --> 01:51:40.540]  то перед этими вершинами, то есть перед этим у вас тут в этих вершинах избытка нет и не появится,
[01:51:40.540 --> 01:51:45.940]  пока им не до ближайшего релейбла. То есть тогда получается, если вы дошли до конца, значит вы
[01:51:45.940 --> 01:51:55.220]  такжественно зачистили все избытки. Так, нет, не так. Вот, такжественно зачистили все избытки. Вот так.
[01:51:55.220 --> 01:52:07.180]  Да, и более того, и пуши мы делаем именно только в сторону топологической сортировки. Так что вот
[01:52:07.180 --> 01:52:15.140]  такая красота. Уже, кстати, не самый неприятный пишущийся алгоритм, не правда ли? То есть какой-нибудь
[01:52:15.140 --> 01:52:25.780]  с СТД листом вообще на халяву напишете. Чего? Нет, вам из середины очереди придется доставать вершину.
[01:52:25.780 --> 01:52:40.780]  Да, мы всегда начинаем сначала, но потом ты в середине останавливаешься и перетаскиваешь
[01:52:40.780 --> 01:52:47.940]  элемент в начало. То, что ты достал из очереди, ну ты зря достал. Да, мы не удаляем, мы идем по
[01:52:47.940 --> 01:52:53.740]  очереди, но как бы это. То есть мы проходимся по списку. Вот, но в принципе это уже можно написать,
[01:52:53.740 --> 01:52:58.340]  и как мы уже выяснили, это уже работает за В куб. Ну, формально за Ве плюс В куб, но понятно,
[01:52:58.340 --> 01:53:10.020]  что это В куб. Потому что у нас проходов мало. Потому что у нас проходов В квадрат. Почему В
[01:53:10.020 --> 01:53:16.580]  квадрат? Потому что каждый проход заканчивается релейблом. А релейблов у нас В квадрат. Ура,
[01:53:16.580 --> 01:53:32.540]  да здравствует у нас. Ну вот, В куб плюс Ве. Ну, В куб формально плюс Ве, но как бы. Потому что это
[01:53:32.540 --> 01:53:37.420]  единственная причина, когда у тебя Ве может оказаться больше, чем В куб. Но в противном случае
[01:53:37.420 --> 01:53:45.900]  Е это не более чем. Да, можно сделать там формальную симптомику. Можно, да, а если аккуратно делать,
[01:53:45.900 --> 01:53:53.060]  получится симптомика В куб плюс Е. Ну, где Е уходит именно на склеивание. Ну ладно, В плюс Е там,
[01:53:53.060 --> 01:54:00.980]  но В вписывается в В куб, поэтому да. Вот, но это уже такие там просто прикольные мелочи. Вот,
[01:54:00.980 --> 01:54:09.060]  так что в принципе, казалось бы, да, алгоритм. То есть в принципе, кажется, что действительно,
[01:54:09.060 --> 01:54:14.620]  можно остановиться, но есть еще более просто пишущийся алгоритм.
[01:54:14.620 --> 01:54:38.300]  Вот. Нет, очень маленький. Нет, ну на самом деле, ну маленький. Смотрите, и по констанции главное
[01:54:38.300 --> 01:54:42.940]  по коду, потому что обратите внимание, что вы делаете. То есть вы делаете, то есть по коду вы
[01:54:42.940 --> 01:55:06.980]  пишете буквально там push, relabel, discharge и вот пять строчек на это. Все. Ну не знаю, может вылезти.
[01:55:06.980 --> 01:55:19.580]  Ну есть подозрения, но вылезти может. Ну вот, так что да. Нет, в принципе, забавно было,
[01:55:19.580 --> 01:55:23.300]  когда на входном тестировании на ICPC кто-то сказал, что там какой-то задачи на поток писал,
[01:55:23.300 --> 01:55:29.940]  кто-то писал прям вот это или какой-нибудь другой аналог. Потому что это не единственный алгоритм
[01:55:29.940 --> 01:55:39.940]  поиска ЗВК с помощью вот этого вот. Почему? Потому что это вот алгоритм, который предлагают
[01:55:39.940 --> 01:55:44.980]  кормы на компании. Ну ладно, я не гарантирую, что это придумали именно кормы на компании,
[01:55:44.980 --> 01:55:57.340]  но вот они предлагают такое. Но называется, слушайте, другой алгоритм. Возможно,
[01:55:57.340 --> 01:56:11.900]  еще более нагло пишущийся. Ну быстрее, не быстрее сейчас вот вопрос, конечно, но тем не менее.
[01:56:11.900 --> 01:56:23.220]  Ну просто, тут сейчас будет из цикла «Ощутите красоту игры». Значит, есть такая идея. Значит,
[01:56:23.220 --> 01:56:43.500]  алгоритм два. Значит, делаем ИНИТ, а дальше потом пробегаемся там. Заводим там Q,
[01:56:43.500 --> 01:56:52.940]  там допустим Q. Заводим на этот раз очередь. Вот. Значит, пробегаемся.
[01:57:13.500 --> 01:57:31.020]  Then. How do you think? What will be next line? Exactly. Как будто у нас другие варианты,
[01:57:31.020 --> 01:57:33.780]  что очереди есть действительно. Вот.
[01:58:01.020 --> 01:58:19.420]  It's almost all. Yeah, but with small detail. We should change not the charge, but push. In push we should say.
[01:58:31.020 --> 01:58:59.220]  Something like that. Yeah, I know that Q does not have this method, of course, but nevertheless.
[01:58:59.220 --> 01:59:15.780]  No, no, no. You should use just array used, of course. Used array or something like, for example,
[01:59:15.780 --> 01:59:24.780]  if excess of U was equal to zero immediately before push, then we should insert this.
[01:59:24.780 --> 01:59:33.980]  No, no, no, it's not true. Yeah, it's true. Yeah, okay.
[01:59:33.980 --> 01:59:44.220]  Ну не совсем. Есть массив excess, есть массив use of. Массив use of просто хранит.
[01:59:44.220 --> 01:59:52.220]  Просто вы сделали в вершину, сделали push, а вершина уже в очереди там сидит. Такое могло быть.
[01:59:52.220 --> 02:00:06.420]  Все, новый алгоритм. Вот. Если она в очереди нет, потому что ты уже мог ее добавить,
[02:00:06.420 --> 02:00:24.380]  по сути, кстати, да. На момент этой проверки ты мог уже добавить. Нет, а там вот том и фишка.
[02:00:24.380 --> 02:00:29.220]  Проверка может выполняться по принципу, если перед push значит так избыток U был равен нулю,
[02:00:29.220 --> 02:00:36.820]  значит добавляем в очередь. А нет, нет. Да, даже вот так. Да, даже вот так вчителить можно, да.
[02:00:36.820 --> 02:00:41.700]  То есть может это кому-то это может показаться проще, чем какой-то там лист изобретать,
[02:00:41.700 --> 02:00:48.380]  в начало какой-то пихать. Хотя, хотя плюс-минус одинаково. Но тут нет, тут просто интересно,
[02:00:48.380 --> 02:00:54.180]  что просто поворачивать голову можно по-разному. Просто фишка в том, что это тоже работает за куб.
[02:00:54.180 --> 02:01:00.940]  Да, немножко жалко, что я вам не даю это в качестве домашнего задания доказать,
[02:01:00.940 --> 02:01:06.460]  что это за куб работает. Не было, когда-то это была красивой теоретической задачей,
[02:01:06.460 --> 02:01:13.980]  ну ладно, сейчас я так расскажу. А доказательство, между прочим, очень простое. Ну вот такие,
[02:01:13.980 --> 02:01:19.500]  вообразить себе это надо так. Смотрите, вот у вас изначально в вершине Q находятся какие-то
[02:01:19.500 --> 02:01:37.060]  вершины. Назовем вот эти вот вершины с их обработкой. Это типа там блок 0. Ну изначально
[02:01:37.060 --> 02:01:44.260]  просто это все вершины, в которые ведут ребра из истока. Но это другой вопрос. Пока вы обрабатываете
[02:01:44.260 --> 02:01:51.020]  эти вершины, в очередь будет добавлено что-то еще. Это что-то еще мы назовем блок 1.
[02:01:51.020 --> 02:02:01.420]  Какая симметрическая разница? Смотрите, вот очередь. То, что в ней изначально находится,
[02:02:01.420 --> 02:02:08.740]  назовем блок 0. Когда алгоритм, когда мы достанем все эти вершины и подисчерчим их, у нас в очередь
[02:02:08.740 --> 02:02:15.300]  добавится что-то еще потом. Это мы назовем блок 1. Обрабатывая блок 1, в очереди окажется блок 2.
[02:02:15.300 --> 02:02:26.500]  Ну и так далее. А теперь выесекает вопрос. Нам жутко интересно, сколько блоков будет?
[02:02:26.500 --> 02:02:41.860]  Не на столько. Ну совмещаем, что вообще в каждом блоке каждая вершина находится не более чем один
[02:02:41.860 --> 02:02:56.260]  раз. Потому что юзят. Потому что каждый блок формируется, когда мы обрабатываем вот эти
[02:02:56.260 --> 02:03:07.660]  предыдущие вершины. Поэтому каждая вершина лишний раз не добавится. А теперь выесекает вопрос,
[02:03:07.660 --> 02:03:14.340]  а сколько самих блоков? По нашему утверждению мы оцениваем количество дисчерчей. Количество
[02:03:14.340 --> 02:03:20.580]  дисчерчей это в на количество блоков. А сколько у нас блоков? А какие у нас блоки вообще бывают?
[02:03:20.580 --> 02:03:31.740]  Ну блоки у нас бывают в том, что блоки бывают двух типов, внутри которых произошел релейбл и
[02:03:31.740 --> 02:03:48.460]  внутри которых не произошел. А есть остальные? А вот давайте-ка, а вообразите себе ситуацию.
[02:03:48.460 --> 02:03:55.420]  Бывают блоки, внутри которых вообще ничего не произошло.
[02:04:18.460 --> 02:04:41.580]  Не совсем. За ее степень, плюс сколько раз вызывался дисчерч. Может, вполне может. Дисчерч может
[02:04:41.580 --> 02:04:51.300]  состоять из одного ненасыщающего пуша. Так что тут такая неприятная мелочь есть.
[02:04:51.300 --> 02:04:58.740]  Поэтому нет. Тут надо просто вообразить себе, что происходит с избытками относительно высот.
[02:04:58.740 --> 02:05:10.220]  Вот жил-был вершин. Мы пробежались по всем вершинам, в которых были избытки. Проделали
[02:05:10.220 --> 02:05:20.300]  из них пуш и при этом релейблов не было, никакие высоты не изменились. Что можно сказать про
[02:05:20.300 --> 02:05:33.420]  расположение избытков в сети? Нет, они не стали нулевые. Потому что вполне вероятно,
[02:05:33.420 --> 02:05:39.260]  что вы разрядили вершину, а потом в следующей вершине, собственно, все-таки наделали в
[02:05:39.260 --> 02:05:43.220]  предыдущий избыток. Мы что-то не гарантируем, что эти вершины отсортированы по высоте.
[02:05:43.220 --> 02:05:54.820]  Нет, при желании можно различие отсортировать их по высоте, конечно, подсчетом. Но фишка алгоритма
[02:05:54.820 --> 02:05:59.620]  в том, что этого не душит. Потому что самое главное, что вам надо, будет выполнено и так.
[02:05:59.620 --> 02:06:19.940]  Что же у нас произойдет? Заметим, что произойдет следующее, что избыток в целом станет пониже.
[02:06:20.300 --> 02:06:36.740]  Например, максимальная высота вершины с избытком заведомо уменьшится после одного
[02:06:36.740 --> 02:06:49.300]  блока без релейбла. Если у нас там все избытки находятся на высоте максимум 179, то после одного
[02:06:49.340 --> 02:06:57.060]  блока без релейблов максимальная высота явно будет 178, потому что мы тут на высоте 179 все избытки
[02:06:57.060 --> 02:07:09.140]  зачистим. Но избытки у нас идут строго вниз при пушах. Единственный способ увеличить высоту
[02:07:09.140 --> 02:07:20.820]  какого-то избытка, это вызвать релейбл. Если бы отсортировали, там бы аккуратненько понизили,
[02:07:20.820 --> 02:07:26.180]  но на самом деле достаточно, оказывается, ввести еще один потенцеваль.
[02:07:26.180 --> 02:07:50.740]  Блока в блоках с релейблами, вот так скажем, их не более чем в куб. Сейчас мы ее формализуем.
[02:07:50.740 --> 02:07:58.540]  Мы вводим потенцеваль, как вон тот потенцеваль, только не sum, а max.
[02:08:12.380 --> 02:08:17.780]  Давайте будем потенцевал и хранить максимальную высоту избыточной вершины.
[02:08:17.780 --> 02:08:31.340]  Для простоты будем считать, что t здесь тоже учитывается,
[02:08:31.340 --> 02:08:35.220]  но для того, чтобы у нас не выяснилось, что вершин нет, поэтому потенциал
[02:08:35.220 --> 02:08:52.660]  резко ушел в минус бесконечности. Это уже будет модификация, но просто нет, можно,
[02:08:52.660 --> 02:09:02.420]  но просто зачем, когда у вас есть уже вот это? Уже проще написано. Давайте докажем, что мы докажем.
[02:09:03.020 --> 02:09:10.180]  Заметим, что потенциал, если у нас есть блок, который без релейблов, то в таком блоке потенциал
[02:09:10.180 --> 02:09:18.580]  уменьшается на один, хотя бы на один. Но каждый релейбл, обратите внимание, увеличивает потенциал
[02:09:18.580 --> 02:09:29.940]  насколько? А можно точнее оценить. Потенциал, он увеличивает на не более чем разность высот,
[02:09:29.940 --> 02:09:36.860]  на которую этот релейбл вообще вершину поднял. То есть если релейбл поднял вершину с высоты 57 на
[02:09:36.860 --> 02:09:51.300]  высоту 179, то тогда и потенциал этот увеличился не более чем на 122. Логично, да? Вот. Но таких дельт,
[02:09:51.300 --> 02:09:55.540]  если дельты именно по всем вершинам просуммировать, то тогда получится сколько там,
[02:09:55.540 --> 02:10:04.300]  2v2. Ну 2v-1 на v-2, если быть точнее. Ну тогда получается суммарно потенциал увеличивается не
[02:10:04.300 --> 02:10:11.020]  более чем на o от v2 при релейблах, а без релейблов каждая фаза его уменьшает хотя бы на один.
[02:10:11.020 --> 02:10:24.180]  Значит фаз без релейблов тоже o от v2. Ну может возникают, но зато какой кот. Впрочем, да,
[02:10:25.060 --> 02:10:34.020]  кто-то нам уже предлагает активно какие-то ноты. Давайте на каждом шаге их отсортируем,
[02:10:34.020 --> 02:10:57.300]  да, чтобы красиво было. Ну да, потому что на самом, да, а если есть задача написать код попроще,
[02:10:57.300 --> 02:11:02.980]  то сейчас вообще ощутите кайф.
[02:11:27.300 --> 02:11:44.500]  Во. А вам слабо. Вот просто вот-вот вообще в тупую. Никаких очередей, никаких сортировок,
[02:11:44.500 --> 02:11:54.140]  просто вот. Да, доказательства абсолютно тоже самое, как вы догадались. Ну по красоте кода,
[02:11:54.140 --> 02:12:03.740]  да, доказательства абсолютно такое же, как вы понимаете. Да даже не блок, просто итерация влайл.
[02:12:03.740 --> 02:12:15.940]  Просто пробирайтесь по лишним алгоритмам. Ну смотрите, тут два варианта, либо вы берете тупо по всем
[02:12:15.940 --> 02:12:20.860]  вершинам, либо вы где-то там в пуш увеличиваете константу пуша на то, чтобы там поддерживать
[02:12:20.860 --> 02:12:26.060]  эксцессы. То есть да, конечно вы скажете, что тут надо как-то избытки проверять, но понятно,
[02:12:26.060 --> 02:12:30.740]  что в реальности это проверяется, что просто помечаем тут флагом, называется, а был ли тут
[02:12:30.740 --> 02:12:39.060]  избыток на самом деле и в общем-то все. То есть если пробежались влайлом и избытка нигде не
[02:12:39.060 --> 02:13:02.100]  нашлось, значит бляк, все. Не, это называется, это больше похоже на предподсчет, скорее предизучение,
[02:13:02.100 --> 02:13:06.860]  потому что это называется, потому что тут ситуация такая, вы пишете все эти алгоритмы,
[02:13:06.860 --> 02:13:11.980]  там разными способами видимо там какими-то, исследуете какой из них там лучше и быстрее и
[02:13:11.980 --> 02:13:17.220]  соответственно лучший заносите себе в Team Notebook. Все. Это делается естественно до контеста.
[02:13:17.220 --> 02:13:24.340]  Правда парадокс в том, что конечно не один из этих алгоритмов конечно старого доброго
[02:13:24.340 --> 02:13:29.580]  Деница вам не отменит, потому что скажем таким образом про сочетание на 100 тысяч вы не пихнете,
[02:13:29.580 --> 02:13:37.740]  поэтому Деница вам писать придется. Вот так или иначе. Но с другой стороны, если у вас там
[02:13:37.740 --> 02:13:45.500]  просто граф на 200 вершин, то можно написать и это и будет кайф. То есть формально вообще могло
[02:13:45.500 --> 02:13:49.900]  быть распространено мнение о том, что в Олимпиадах может быть это все вообще не надо.
[02:13:49.900 --> 02:14:00.300]  И вот потому что. Пуши лейбл. Не, не, не, не. Тут вас приветствует команда Mipshovermasters,
[02:14:00.300 --> 02:14:04.180]  которая буквально позавчера написала контест, в котором две первые халявы решаются потоками.
[02:14:04.180 --> 02:14:19.500]  Нет. Идея на потоке есть, но писать там потоков не надо. Чего? Нет, может вы задачу нет,
[02:14:19.500 --> 02:14:25.020]  может в эту задачу г, конечно, сдали, конечно, там какие-нибудь жаги, может какой-то доказатель.
[02:14:25.020 --> 02:14:33.980]  Ну там тупая дпшка, следующая да, но как бы следующая из. Потому что по
[02:14:33.980 --> 02:14:37.740]  принципу там напишите сети, давайте искать минимальный разрез в ней, ну как выясняется,
[02:14:37.740 --> 02:14:42.020]  что в ней динамика ищется. Но в задаче е в общем-то тоже. Только вам прямо сказали,
[02:14:42.020 --> 02:14:50.740]  найдите поток, да. Вот, да, это конечно весело. Так, ну ладно, да, хорошо. Ой,
[02:14:50.740 --> 02:14:54.380]  надеюсь Глеб Костырев не будет сейчас смотреть это видео достаточно быстро, потому что,
[02:14:54.380 --> 02:15:00.660]  ну я просто хотел, чтобы этот контест они тоже написали. Вот, это вот как-то да,
[02:15:00.660 --> 02:15:06.260]  а то они решили отдохнуть перед гуиром. Да, но судя по результату, это помогло не очень.
[02:15:06.260 --> 02:15:12.420]  Ну плюс одну ничья получилось, но по штрафу как бы вы были сильнее, да.
[02:15:12.420 --> 02:15:26.820]  Почему? Рассмотрим, ну вот у нас значит, вот у нас этот нотоносец, ну только там, понятно,
[02:15:26.820 --> 02:15:33.700]  линии у нас не 5, а 2v-1, ну в смысле 2v. Вот, и вот, допустим, у нас есть ноточки с избытком.
[02:15:33.700 --> 02:15:42.260]  Спрашивается, теперь мы, куда девается избыток? Из каждой вершины избыток девается на высоту
[02:15:42.260 --> 02:15:48.460]  строго на один меньше. Да, то есть они тут как угодно, но теперь рассмотрим вот вершины на
[02:15:48.460 --> 02:15:56.580]  самой высокой линии. Тогда весь их избыток опустится. Ну дискчарч занимается тем,
[02:15:56.580 --> 02:16:05.860]  что опускает избытки. Да, если релейбл не случился, тут вообще в процессе, мы тут везде
[02:16:05.860 --> 02:16:11.380]  пробежали, релейбл не случился, тогда все избытки опустились, в частности с верхней линии избыток
[02:16:11.380 --> 02:16:23.860]  опустился. Чего? В каком их? Нет, у нас дискчарч заканчивается ровно в одном случае, пока
[02:16:23.860 --> 02:16:36.020]  excess больше 0. То есть пока есть что пихать, пихаем. Так что вот такая красота. Так,
[02:16:36.020 --> 02:16:50.540]  еще тут какие-то вопросы? Вот. Да. С корнем? Нет, ну с корнем не знаю. Нет, ну нет, есть алгоритм
[02:16:50.540 --> 02:17:07.420]  какой-то в 8 точке, в котором возникают корни. Вау, лог в квадрат, лог в квадрат делить на е.
[02:17:07.420 --> 02:17:22.540]  Я понимаю, да. Ну как бы за ве лог ве умею. А, и вы умеете. Ну это просто 1 и в процессе линкад.
[02:17:22.540 --> 02:17:26.700]  Мы это в прошлый раз обсудили, но это именно лог в, а не в квадрат делить на е.
[02:17:26.700 --> 02:17:47.660]  Нет, Сеанора. Какого Сеанора? Нет, линкад это слейтер Атальяна, не путайте. Чего? Сеанор? Где?
[02:17:47.660 --> 02:17:58.060]  Сеанор? Не-не-не, другой какой-то. Нет, линкад-то понятно, да. Нет, просто нет. Нет, ну тут
[02:17:58.060 --> 02:18:06.420]  действительно возникает вопрос, да, как тут упихать за в квадрат делить на е, действительно. Я прям даже
[02:18:06.420 --> 02:18:10.220]  интересно, можно ли вообще глядя на это, сейчас просто на халяву упихать за в квадрат делить на е.
[02:18:10.220 --> 02:18:13.940]  Но тут возникает вопрос, откуда можете оставить 7 точек вообще в квадрат делить на е.
[02:18:13.940 --> 02:18:39.460]  Это не он. Да, но это не он. Да, но нет, этот может, наверное, за единицу пихнуть, причем так,
[02:18:39.460 --> 02:18:55.420]  что мало не покажется. Да, вариант билда. Так, в квадрат делить на е, типа там доказывается,
[02:18:55.420 --> 02:19:06.820]  что фаз мало, что ли, вот этих вот или шо. Или там типа аккуратно гарантируем, что у нас релебов
[02:19:06.820 --> 02:19:13.300]  будет мало. Как это выказано, непонятно главное, как из большого е делать.
[02:19:13.300 --> 02:19:26.180]  Здесь написано на википедии, как это называется. На английской википедии? Ну да, конечно.
[02:19:26.180 --> 02:19:49.780]  В квадрат делить на е. Нет, давайте потом. Откуда такая 7 точка взяться может вообще?
[02:19:49.780 --> 02:20:14.300]  Ну, наверное, там какой-то есть потенциал, что происходит. Нет, ну там есть, но там непонятно.
[02:20:14.300 --> 02:20:29.460]  Ну там щит, конечно, такой понятный, не очень. Нет, там нету. Возникает, конечно, нет, прям страшно,
[02:20:29.460 --> 02:20:36.020]  а там прям точно страшно. Или возникает просто мысль такая, как Рома предлагал, давайте отсортируем
[02:20:36.020 --> 02:20:43.500]  вершины. Идея такая, давайте отсортируем вершины в порядке убывания высоты и будем
[02:20:43.500 --> 02:20:48.660]  делать дискчарч именно в этом порядке. В чем более того, даже еще в качестве прикола,
[02:20:48.660 --> 02:20:52.860]  давайте делать не просто дискчарч, а типа если надо сделать релебл, то мы в этом месте остановимся.
[02:20:52.860 --> 02:21:01.220]  К чему нас это приведет? Приведет к тому, что мы за О от В плюс Е, обратите внимание,
[02:21:01.220 --> 02:21:12.540]  значит какую-то воду протолкнем, какую-то совсем до упора протолкнем, а все остальное будет что?
[02:21:12.540 --> 02:21:20.700]  А потом все остальное повышаем куда-то. Да, потом можно сказать, а давайте теперь прибежимся снизу
[02:21:20.700 --> 02:21:30.140]  вверх и будем делать релеблы. А может АВ, а впрочем по барабану. Ну просто что, идея в том,
[02:21:30.140 --> 02:21:41.740]  чтобы все сразу релеблы сделать. То есть фишка на самом деле в том, что мы потратили все эти пуши
[02:21:42.700 --> 02:21:50.380]  в Ве плюс количество дискчарчей. Получается за фазу. Если потенциал брать в качестве суммы,
[02:21:50.380 --> 02:22:04.300]  то значит мы уменьшили потенциал. Причем кажется, что не на единицу, а может быть много вершин.
[02:22:04.300 --> 02:22:07.020]  А потом сделали кучу релеблов.
[02:22:07.020 --> 02:22:26.060]  То, что здесь написано, в основе этого алгоритма, некий ахуджа энд орлин, добавили скейлинг и смогли
[02:22:26.060 --> 02:22:35.100]  запустить этот алгоритм за обольшую нм плюс р квадрат лог у, а потом привязав к этому динамик 30,
[02:22:35.740 --> 02:22:39.100]  вот конечно динамик 30, а просто линкат.
[02:22:39.100 --> 02:22:45.100]  Да, линкат. Смогли добиться 8 точек и уже вот так.
[02:22:45.100 --> 02:22:51.100]  Интересный вариант. Нет, ну линкат-то да, но осталось только выяснить. Осталось только придумать,
[02:22:51.100 --> 02:22:57.100]  где. Возможно, правда, для этого нам придется понять, а что такое масштабирование и как оно работает.
[02:22:57.100 --> 02:23:01.100]  Нет, в нашем случае это мы как бы следующим заходом, но давайте так.
[02:23:01.100 --> 02:23:05.100]  Пока остановимся, хотя в принципе интересный этот момент, подумать.
[02:23:05.100 --> 02:23:11.100]  Ну, значит, смотрите, ладно, потому что у нас в принципе появится алгоритм за VE лог V, это тоже неплохо.
[02:23:11.100 --> 02:23:19.100]  Вот, но до этого она. Хотя нет, VE лог V неинтересно, он уже появился, а вот VE лог C.
[02:23:19.100 --> 02:23:21.100]  Где у нас VE лог V появился?
[02:23:21.100 --> 02:23:23.100]  В Диннице.
[02:23:23.100 --> 02:23:25.100]  Ну, у нас был алгоритм Диннице, да.
[02:23:25.100 --> 02:23:27.100]  Но у меня за VE лог V работает.
[02:23:27.100 --> 02:23:29.100]  Ну, а почему, ну вот.
[02:23:29.100 --> 02:23:35.100]  Там идея такая, ну просто если вы для каждой ноты вы в Диннице храните от каждой вершины указательный указатель, да.
[02:23:35.100 --> 02:23:41.100]  Так вот, идея такая, если рассмотреть все эти ребра, на которые эти указатели смотрят, получится по две, там, лес-деревьев.
[02:23:41.100 --> 02:23:45.100]  Вот, ну там, фишка заключается. То есть давай.
[02:23:53.100 --> 02:23:56.100]  Но это на халяву или как-то по-другому?
[02:23:56.100 --> 02:23:58.100]  На халяву.
[02:23:58.100 --> 02:24:00.100]  Просто одна секция.
[02:24:00.100 --> 02:24:02.100]  Сейчас.
[02:24:02.100 --> 02:24:07.100]  Здесь есть section 5, use of dynamic trees, и здесь просто описывается, как сюда припушиваются.
[02:24:07.100 --> 02:24:10.100]  Да, но это сюда, это в смысле в их какой-то новый алгоритм, который...
[02:24:10.100 --> 02:24:13.100]  Нет, нет, нет. Ну, здесь кажется, что...
[02:24:13.100 --> 02:24:18.100]  А, пропушили label? Так.
[02:24:18.100 --> 02:24:24.100]  Ну, в крайней мере, первые четыре секции показывают то, что мы сделали.
[02:24:24.100 --> 02:24:29.100]  Нет, ну, конечно...
[02:24:33.100 --> 02:24:38.100]  Ну, такой, конечно.
[02:24:38.100 --> 02:24:43.100]  Вообще говоря, когда, если мы начинаем уже соединить совершенно на слои по высотам,
[02:24:43.100 --> 02:24:51.100]  то их, ну как, обновлять все слои label для...
[02:24:51.100 --> 02:24:55.100]  Ну, пишем сразу, и у нас discharge написано вот так, как тоже.
[02:24:55.100 --> 02:24:57.100]  Мне кажется, мы сейчас просто изобретаем, как мы делимся.
[02:24:57.100 --> 02:25:02.100]  А дальше уже, может, VIRON может прокрепить, и VINCA, и все.
[02:25:02.100 --> 02:25:07.100]  Кстати, ну, я не всем понимаю, вот кажется, вот этот способ, потому что VIRON нормально не делается.
[02:25:08.100 --> 02:25:11.100]  Ну, этот...
[02:25:11.100 --> 02:25:14.100]  Ну, с масштабированием, да, тут напряг.
[02:25:14.100 --> 02:25:16.100]  Нет, я догадываюсь, откуда тут можно взять линкат.
[02:25:16.100 --> 02:25:18.100]  Да, опять же, стержи указателей.
[02:25:18.100 --> 02:25:21.100]  То есть, если мы возьмем все ребра, на которые сейчас вот этот смотрим дисчак,
[02:25:21.100 --> 02:25:24.100]  ну, допустим, по этим ребрам можно нормально push делать,
[02:25:24.100 --> 02:25:29.100]  то тогда из этих ребр можно действительно сделать подвешенное дерево, это да.
[02:25:29.100 --> 02:25:31.100]  Ну, там фишка-то, они делаются...
[02:25:31.100 --> 02:25:34.100]  Ну, там, видимо, идея в том, что давайте возьмем целый путь,
[02:25:34.100 --> 02:25:36.100]  и на нем прям супер-пуш.
[02:25:36.100 --> 02:25:38.100]  Прям супер-пуш на нем сделаем, да.
[02:25:38.100 --> 02:25:42.100]  Потому что суммарно беготнее лишний раз с итератором их будет VE все равно, да.
[02:25:42.100 --> 02:25:44.100]  Но это уже похоже на Денису.
[02:25:44.100 --> 02:25:46.100]  Да, на Деница, да.
[02:25:46.100 --> 02:25:48.100]  Ну, похоже.
[02:25:48.100 --> 02:25:49.100]  Ладно.
[02:25:49.100 --> 02:25:51.100]  Нет.
[02:25:51.100 --> 02:25:53.100]  Ремарк.
[02:25:53.100 --> 02:25:55.100]  Ремарк.
[02:25:55.100 --> 02:25:57.100]  Ремарк.
[02:25:57.100 --> 02:25:59.100]  Ремарк.
[02:25:59.100 --> 02:26:01.100]  Ремарк.
[02:26:01.100 --> 02:26:03.100]  Ремарк.
[02:26:03.100 --> 02:26:05.100]  Нет, здесь ничего.
[02:26:05.100 --> 02:26:07.100]  Ну, давайте так.
[02:26:07.100 --> 02:26:09.100]  На всякий случай давайте...
[02:26:09.100 --> 02:26:11.100]  Так, ладно, давайте вспомним.
[02:26:11.100 --> 02:26:14.100]  На всякий случай и так надо вспоминать, откуда он с Линкадом Деницем брался.
[02:26:14.100 --> 02:26:16.100]  Значит, на третьем.
[02:26:16.100 --> 02:26:18.100]  Давайте вспомним.
[02:26:18.100 --> 02:26:20.100]  Линкад Деницем брался следующим образом, смотрите.
[02:26:20.100 --> 02:26:22.100]  То есть, когда у нас есть вот эта вот сеть, веселая, да,
[02:26:22.100 --> 02:26:24.100]  то как бы у нас в каждый момент времени,
[02:26:24.100 --> 02:26:26.100]  у каждой вершины был итератор,
[02:26:26.100 --> 02:26:28.100]  который смотрел на какое-то ребро.
[02:26:28.100 --> 02:26:30.100]  Так вот, если рассмотреть все,
[02:26:30.100 --> 02:26:32.100]  в каждый момент времени рассмотреть все
[02:26:32.100 --> 02:26:34.100]  ребра, на которые указывают все эти указатели,
[02:26:34.100 --> 02:26:36.100]  то получится набор деревьев
[02:26:36.100 --> 02:26:38.100]  подвешенных.
[02:26:38.100 --> 02:26:40.100]  Одно из них подвешено даже к вершине T.
[02:26:42.100 --> 02:26:44.100]  Идея, на самом деле, такая.
[02:26:44.100 --> 02:26:46.100]  Понятно, дерево может быть какое-нибудь
[02:26:46.100 --> 02:26:48.100]  произвольное, куда-нибудь рандомно
[02:26:48.100 --> 02:26:50.100]  подвешенное, не туда.
[02:26:50.100 --> 02:26:52.100]  Пока у нас вершина S,
[02:26:52.100 --> 02:26:54.100]  значит, идея теперь такая,
[02:26:54.100 --> 02:26:56.100]  что
[02:26:56.100 --> 02:26:58.100]  говорим,
[02:26:58.100 --> 02:27:00.100]  смотрим, куда подвешена вершина
[02:27:00.100 --> 02:27:02.100]  S.
[02:27:02.100 --> 02:27:04.100]  Если вершина S подвешена к вершине T,
[02:27:04.100 --> 02:27:06.100]  то мы
[02:27:06.100 --> 02:27:08.100]  берем весь этот путь.
[02:27:08.100 --> 02:27:10.100]  На нем делаем прямо за логарифом
[02:27:10.100 --> 02:27:12.100]  единый пуш на минимум на нем.
[02:27:12.100 --> 02:27:14.100]  Это делается с помощью линкада.
[02:27:14.100 --> 02:27:16.100]  В линкаде будет такая отложенная
[02:27:16.100 --> 02:27:18.100]  операция, сделай пуш по моему
[02:27:18.100 --> 02:27:20.100]  ребру.
[02:27:20.100 --> 02:27:22.100]  Не только по моему, а по всему,
[02:27:22.100 --> 02:27:24.100]  что у меня там есть.
[02:27:24.100 --> 02:27:26.100]  По сути, пуш на пути.
[02:27:26.100 --> 02:27:28.100]  Только возьми теперь вот этот минимум
[02:27:28.100 --> 02:27:30.100]  и сдвинь на нем указатель.
[02:27:30.100 --> 02:27:32.100]  А сдвиг указателя, это что такое?
[02:27:32.100 --> 02:27:34.100]  Это переподвешивание.
[02:27:40.100 --> 02:27:42.100]  Еще бывает, что из S путь у вас
[02:27:42.100 --> 02:27:44.100]  ведет не в T, но значит, вы доходите
[02:27:44.100 --> 02:27:46.100]  до конца этого пути и, соответственно,
[02:27:46.100 --> 02:27:48.100]  сдвигаете
[02:27:48.100 --> 02:27:50.100]  последнее ребро.
[02:27:50.100 --> 02:27:52.100]  Или выясняете, что там уже
[02:27:52.100 --> 02:27:54.100]  больше некуда сдвигать, значит, вот это
[02:27:54.100 --> 02:27:56.100]  сдвигает.
[02:27:56.100 --> 02:27:58.100]  Но тогда это означает, что вы там
[02:27:58.100 --> 02:28:00.100]  шли-шли-шли-шли и куда-то
[02:28:00.100 --> 02:28:02.100]  пришли. Тогда надо просто видим
[02:28:02.100 --> 02:28:04.100]  вот это ребро идет неправильно, надо его
[02:28:04.100 --> 02:28:06.100]  сдвинуть.
[02:28:06.100 --> 02:28:08.100]  Последнее на этом пути. Или если его нет,
[02:28:08.100 --> 02:28:10.100]  значит его убить и тогда уже... Но это все
[02:28:10.100 --> 02:28:12.100]  равно wild true.
[02:28:12.100 --> 02:28:14.100]  Потому что
[02:28:14.100 --> 02:28:16.100]  это
[02:28:16.100 --> 02:28:18.100]  идентично
[02:28:18.100 --> 02:28:20.100]  обычному алгоритму Деница.
[02:28:20.100 --> 02:28:22.100]  Кончится просто тем,
[02:28:22.100 --> 02:28:24.100]  что
[02:28:24.100 --> 02:28:26.100]  у вас просто путь будет состоять из одной
[02:28:26.100 --> 02:28:28.100]  вершины S, потому что даже из вершины S закончились
[02:28:28.100 --> 02:28:30.100]  ребра.
[02:28:30.100 --> 02:28:32.100]  Но это и будет означать, что алгоритм Деница
[02:28:32.100 --> 02:28:34.100]  закончился.
[02:28:34.100 --> 02:28:36.100]  Но при этом заметим, что
[02:28:36.100 --> 02:28:38.100]  интераций у нас немного, потому что каждая
[02:28:38.100 --> 02:28:40.100]  интерация тут либо сдвигает
[02:28:40.100 --> 02:28:42.100]  либо убивает ребро и все равно сдвигает
[02:28:42.100 --> 02:28:44.100]  итератор. А сдвигаются суммарно
[02:28:44.100 --> 02:28:46.100]  итераторы за E.
[02:28:46.100 --> 02:28:48.100]  И каждый работает с алгоритмом.
[02:28:48.100 --> 02:28:50.100]  Потому что это линка.
[02:28:50.100 --> 02:28:52.100]  Нет, yellow V.
[02:28:52.100 --> 02:28:54.100]  У вас yellow V.
[02:28:54.100 --> 02:28:56.100]  А фаз Деница у вас V,
[02:28:56.100 --> 02:28:58.100]  поэтому
[02:28:58.100 --> 02:29:00.100]  этого получается yellow V.
[02:29:00.100 --> 02:29:02.100]  Здесь то, что
[02:29:02.100 --> 02:29:04.100]  мы хотим применить
[02:29:04.100 --> 02:29:06.100]  пушилей.
[02:29:06.100 --> 02:29:08.100]  Здесь пушилей будет тоже
[02:29:08.100 --> 02:29:10.100]  какой-то пушла.
[02:29:10.100 --> 02:29:12.100]  Нет,
[02:29:12.100 --> 02:29:14.100]  здесь тоже
[02:29:14.100 --> 02:29:16.100]  возможен там действительно, видимо, фишка
[02:29:16.100 --> 02:29:18.100]  в том, что если я тоже буду в каждой вершине хранить
[02:29:18.100 --> 02:29:20.100]  итератор на то, что я могу
[02:29:20.100 --> 02:29:22.100]  сделать, то, конечно, эти итераторы тоже будут
[02:29:22.100 --> 02:29:24.100]  что они будут?
[02:29:26.100 --> 02:29:28.100]  Они тоже будут образовывать такие
[02:29:28.100 --> 02:29:30.100]  подвешенные деревья. Правда, корень будет внизу
[02:29:32.100 --> 02:29:34.100]  где-то.
[02:29:34.100 --> 02:29:36.100]  И тогда, по идее, для каждой вершины
[02:29:36.100 --> 02:29:38.100]  и вот тут сверху вообще можете сказать
[02:29:38.100 --> 02:29:40.100]  ой, а давайте возьмем
[02:29:40.100 --> 02:29:42.100]  допустим возьмем этот
[02:29:42.100 --> 02:29:44.100]  эксцесс и прям допустим его полностью сделаем.
[02:29:46.100 --> 02:29:48.100]  Чего?
[02:29:48.100 --> 02:29:50.100]  А потому что из каждой вершины исходит
[02:29:50.100 --> 02:29:52.100]  ровно одно ребро, которое мы сейчас смотрим.
[02:29:52.100 --> 02:29:54.100]  Вот.
[02:29:54.100 --> 02:29:56.100]  Да, но правда
[02:29:56.100 --> 02:29:58.100]  это такая модификация, это не совсем
[02:29:58.100 --> 02:30:00.100]  пушилей был, потому что мы как бы
[02:30:00.100 --> 02:30:02.100]  на пути мы тогда будем пропихивать
[02:30:02.100 --> 02:30:04.100]  столько потока сколько здесь,
[02:30:04.100 --> 02:30:06.100]  а там теоретически ниже мы могли бы этих
[02:30:06.100 --> 02:30:08.100]  пушей делать побольше.
[02:30:08.100 --> 02:30:10.100]  То есть тут
[02:30:10.100 --> 02:30:12.100]  надо поаккуратнее в этом плане делать.
[02:30:12.100 --> 02:30:14.100]  Наверно
[02:30:14.100 --> 02:30:16.100]  подразумевается, что где-то вот в этом месте мы
[02:30:16.100 --> 02:30:18.100]  тут можем себе там обхалявить жизнь каким-то
[02:30:18.100 --> 02:30:20.100]  образом. Вот.
[02:30:20.100 --> 02:30:22.100]  Видимо куда-то в эту сторону
[02:30:22.100 --> 02:30:24.100]  надо думать, но возможно они там придумали
[02:30:24.100 --> 02:30:26.100]  что-то еще, я не знаю.
[02:30:28.100 --> 02:30:30.100]  Да, ну
[02:30:30.100 --> 02:30:32.100]  не откажусь.
[02:30:32.100 --> 02:30:34.100]  Кстати,
[02:30:34.100 --> 02:30:36.100]  пришли, пожалуйста, будет действительно интересно.
[02:30:44.100 --> 02:30:46.100]  Еще здесь есть такая интересная
[02:30:46.100 --> 02:30:48.100]  ремарка.
[02:30:48.100 --> 02:30:50.100]  Срочу алгоритм все очередь.
[02:30:50.100 --> 02:30:52.100]  Потом написано,
[02:30:52.100 --> 02:30:54.100]  что
[02:30:54.100 --> 02:30:56.100]  какие-то индусы умеют пропачкать, что это работает
[02:30:56.100 --> 02:30:58.100]  не за m-ку, а за m-ку над корень.
[02:31:02.100 --> 02:31:04.100]  Какие...
[02:31:06.100 --> 02:31:08.100]  Корень, а ну корень из m, да.
[02:31:08.100 --> 02:31:10.100]  А ну при ликвидации кратных
[02:31:10.100 --> 02:31:12.100]  ребер, да это строго не хуже, вот так
[02:31:12.100 --> 02:31:14.100]  скажем.
[02:31:14.100 --> 02:31:16.100]  Не сказать, что строго лучше,
[02:31:16.100 --> 02:31:18.100]  что m бывает в квадрат, но
[02:31:18.100 --> 02:31:20.100]  да, но не хуже заведом.
[02:31:40.100 --> 02:31:42.100]  Ну, допустим.
[02:31:46.100 --> 02:31:48.100]  Так, ну выбирать.
[02:32:10.100 --> 02:32:12.100]  Нет, самое смешное, да, что нет, в принципе
[02:32:12.100 --> 02:32:14.100]  можно вообще поддерживать
[02:32:14.100 --> 02:32:16.100]  там, скажем так, можно вообще поддерживать
[02:32:16.100 --> 02:32:18.100]  на самом деле самую большую высоту, можно
[02:32:18.100 --> 02:32:20.100]  поддерживать даже вроде без особой потери
[02:32:20.100 --> 02:32:22.100]  асимптутики.
[02:32:26.100 --> 02:32:28.100]  Но она как-то там, что при пуше, она все равно
[02:32:28.100 --> 02:32:30.100]  меняется не более чем, максимум
[02:32:30.100 --> 02:32:32.100]  меняется не более чем на один.
[02:32:36.100 --> 02:32:38.100]  Так, хорошо.
[02:32:38.100 --> 02:32:40.100]  Так.
[02:32:46.100 --> 02:32:48.100]  Ну, понятно, да.
[02:33:08.100 --> 02:33:10.100]  Мы сказали, что этот способ
[02:33:10.100 --> 02:33:12.100]  работает за n квадрат
[02:33:12.100 --> 02:33:14.100]  корень из m.
[02:33:16.100 --> 02:33:18.100]  То есть на самом деле достаточно сортир получается?
[02:33:18.100 --> 02:33:20.100]  Нет.
[02:33:20.100 --> 02:33:22.100]  Ну, не совсем сортир,
[02:33:22.100 --> 02:33:24.100]  именно на каждом шаге найдем
[02:33:24.100 --> 02:33:26.100]  из всех вершин выберем вершину с максимальной высотой.
[02:33:26.100 --> 02:33:28.100]  Ну, в принципе это легко делается на самом деле.
[02:33:28.100 --> 02:33:30.100]  Давайте, то есть давайте для каждой высоты
[02:33:30.100 --> 02:33:32.100]  хранить какие вершины у нас сейчас
[02:33:32.100 --> 02:33:34.100]  на этой высоте есть.
[02:33:34.100 --> 02:33:36.100]  Ну, избыточные естественно, да.
[02:33:36.100 --> 02:33:38.100]  То есть при пуше это
[02:33:38.100 --> 02:33:40.100]  поддерживается элементарно.
[02:33:40.100 --> 02:33:42.100]  При релейбле в общем-то тоже,
[02:33:42.100 --> 02:33:44.100]  потому что при релейбле у нас есть запас по времени.
[02:33:46.100 --> 02:33:48.100]  Точнее так, при релейбле делаем так.
[02:33:48.100 --> 02:33:50.100]  При релейбле мы можем это сделать
[02:33:50.100 --> 02:33:52.100]  просто там.
[02:33:52.100 --> 02:33:54.100]  А, в прочем,
[02:33:54.100 --> 02:33:56.100]  неважно, потому что если выполнили
[02:33:56.100 --> 02:33:58.100]  релейбл и вершина повысилась до какой-то высоты,
[02:33:58.100 --> 02:34:00.100]  можем проверить, не максимум ли это.
[02:34:00.100 --> 02:34:02.100]  То есть поэтому в релейбле вообще
[02:34:02.100 --> 02:34:04.100]  проблем нет, с поддержкой максимума нету.
[02:34:04.100 --> 02:34:09.660]  ну вот а если мы вот с этой высоты делаем там пуш то тогда высота уменьшается не
[02:34:09.660 --> 02:34:22.820]  более чем на один поэтому за вот единицей и находимся равно ну как
[02:34:22.820 --> 02:34:27.980]  может добавиться может нет но смотрите как а элементарно потому что а какая
[02:34:27.980 --> 02:34:34.780]  будет максимальная высота если был ри лейбл то это он а если а если ну если в
[02:34:34.780 --> 02:34:39.500]  процессе директоре был ри лейбл то это высота то это вершины будет но а форте
[02:34:39.500 --> 02:34:42.300]  нет это вершины не будет потому что она не интересная потому что у них сейчас
[02:34:42.300 --> 02:34:49.060]  избытка нет а на смотрите а давайте так утверждение такое если выполнить
[02:34:49.060 --> 02:34:54.540]  и был ри лейбл то самая высокая вершина интересующая нас находится в высоте в
[02:34:54.540 --> 02:35:02.980]  новой высоте этой вершины минус 1 ну потому что мы после потому что мы эту
[02:35:02.980 --> 02:35:07.700]  вершину значит последний раз 10 и могло быть несколько ри лейблов да но когда мы
[02:35:07.700 --> 02:35:12.660]  последний раз устаканили на ее высоту и собственно полностью разрядили но это
[02:35:12.660 --> 02:35:17.180]  мы сделаем только пушам и тогда пуш привел к тому что на высоте вот это минус
[02:35:17.180 --> 02:35:22.300]  один есть избыточная вершина так что следует на высоте но то она тут точно
[02:35:22.300 --> 02:35:27.740]  будет поэтому значит новая максимальная высота это вот этот ри лейбл минус 1 да
[02:35:27.740 --> 02:35:38.700]  ну господи как это нет да да да ну да к сожалению не могу сказать на камеру как
[02:35:38.700 --> 02:35:42.180]  имский там с кай хабом дочь и дочь что пользоваться какой там александра в
[02:35:42.180 --> 02:36:01.220]  океан там лишь не могу такие фамилии называть да ну а не там доказали где-нибудь
[02:36:01.220 --> 02:36:05.140]  на 27 странице там типа как мелкое утверждение
[02:36:05.860 --> 02:36:14.500]  господи мясо мясо мясо нет смысла что нет нет что что что доказывать то я не
[02:36:14.500 --> 02:36:21.340]  понял вот мы сделали и был до вершина в итоге попало на высоту 179 тогда куда
[02:36:21.340 --> 02:36:25.860]  она последний раз дело куда она делал свой избыток с высоты 179 когда она только
[02:36:25.860 --> 02:36:30.540]  попала в экшен 179 избыток в ней был куда она делал свой избыток в какую-то
[02:36:30.540 --> 02:36:36.980]  вершину на высоте 178 вывод утверждение значит тогда на вершине стоит но так
[02:36:36.980 --> 02:36:43.140]  как эта вершина была по максимальной по высоте то 179 это еще больше значит вывод
[02:36:43.140 --> 02:36:49.780]  макс больше чем 170 178 высоты не будет 178 достигнута то есть вывод
[02:36:49.780 --> 02:37:04.540]  но вот так что то есть это то есть как бы вот то есть вот какой-нибудь вот подобного
[02:37:04.540 --> 02:37:07.500]  рода алгоритм можно реализовать там без особой потеря симптутики да
[02:37:07.500 --> 02:37:22.540]  вот так что-то то есть другой вопрос чем это поможет вот да вот нет а вот
[02:37:22.540 --> 02:37:34.740]  они просто в тупую находить жадную максимуму вообще-то само ну понятно что
[02:37:34.740 --> 02:37:46.820]  сатурейта да сатурейта двое это мы знаем мы разделяем вот так покажем что
[02:37:46.820 --> 02:38:11.500]  вот так вот так ладно давайте ладно не во время лекции наделать потому что как бы это
[02:38:11.500 --> 02:38:15.940]  можно было бы делать если якобы все но на этом у меня материал на семестр закончился но есть
[02:38:15.940 --> 02:38:22.900]  одна проблема он не закончился и более того мне даже здесь еще и кое-что есть нет погодите мы
[02:38:22.900 --> 02:38:29.220]  вот здесь мы должны обсудить другое как харлайд закуп пихать теперь не закуп лог ц там до логовая
[02:38:29.220 --> 02:38:35.220]  точнее да там лог бен поиск вот этот вот да а я утверждаю ну потому что как у нас был устроен
[02:38:35.220 --> 02:38:41.180]  харлайд напомню да так но тут надо вспомнить как у нас был устроен решение задачи харлайд
[02:38:41.180 --> 02:38:51.620]  так да да мы делаем над так но теперь но тут нам как бы уже придется вспоминать как мы конкретно
[02:38:51.620 --> 02:38:58.660]  делали сеть вот мы че говорили так вот допустим у нас есть с и мы хотим понять существует ли
[02:38:58.660 --> 02:39:07.780]  подграф плотности строго больше чем ц помните да вот то есть но вот но что такое но мы говорили
[02:39:08.120 --> 02:39:13.780]  е ж 3 дилить на модуль ваш трех должно быть строго больше чем ц это это верно тогда и
[02:39:13.780 --> 02:39:20.060]  только тогда когда 0 больше чем ц модуль во штрих минус модуль е штрих и мы пытались строить
[02:39:20.060 --> 02:39:24.180]  сеть с отрицательными ребрами так чтобы у вас там пропускная способность разреза была такая
[02:39:24.180 --> 02:39:32.220]  помните да ну правда с отрицательными ребрами мы решили там с отрицательными ребрами ведущими
[02:39:32.220 --> 02:39:39.040]  там сток мы проблему решали было дело ну давай но правда давайте вспомним как
[02:39:39.040 --> 02:39:47.960]  вот что такое ц от в штрих то есть там ц в штрих ну чтобы вот эта штука попала
[02:39:47.960 --> 02:39:52.680]  в разрез надо просто говорить что давайте из каждой вершины то есть ну
[02:39:52.680 --> 02:39:58.040]  как всегда мы там у нас есть вершины есть и сток и сток то есть как всегда у
[02:39:58.040 --> 02:40:08.320]  нас там есть и сток есть сток и с каждой вершины в мы отправляем веселое ребро
[02:40:08.320 --> 02:40:16.160]  пропускной способности с но это типа что если то есть вы говорим что в этой
[02:40:16.160 --> 02:40:19.440]  доле разреза у нас все что мы берем под множество а в то что не берем
[02:40:19.440 --> 02:40:26.040]  понимаете да вот но откуда взять минимум но что такое и штрих и штрих это
[02:40:26.040 --> 02:40:33.720]  получается все ребра которые ведут из доли с в долю с правда вот значит тогда
[02:40:33.720 --> 02:40:38.320]  идея такая но заметим что е штрих то есть из доли с в долю с это на самом деле
[02:40:38.320 --> 02:40:49.100]  равно ц модуль в штрих минус как там получается минус модуль е плюс е 2
[02:40:49.100 --> 02:40:58.580]  штриха придумали мы где я два штриха то есть как бы это все ребра которые не из
[02:40:58.580 --> 02:41:12.020]  этого множества понимаете да так значит но вот можно было бы придумать так но мы
[02:41:12.020 --> 02:41:17.020]  придумали по-другому потому что на самом деле вот потому что на самом деле нам
[02:41:17.020 --> 02:41:23.980]  захотелось сказать что как бы что такое ребра торчащие из ве штрих это как бы
[02:41:23.980 --> 02:41:28.900]  ну как бы ребра то есть если у нас из какой-то вершины вы торчит ребра она лежит ве
[02:41:28.900 --> 02:41:37.300]  штрих из нее торчит ребра то она ведет либо ве штрих либо куда-то еще правда вот но
[02:41:37.300 --> 02:41:42.300]  правда но вот но правда теперь вот у нас идея была такая мы тут домножаем на два то есть
[02:41:42.380 --> 02:41:52.500]  мы хотим вот то есть 20 ве штрих и тогда вот у нас идея такая что если я присуммирую то есть
[02:41:52.500 --> 02:41:58.460]  если я просуммирую все степени всех вершин ве штрих то что у меня получится то у меня получится
[02:41:58.460 --> 02:42:04.420]  что все ребра которые ведут из ве штрих ве штрих учтутся два раза а все ребра ведущие из ве штрих
[02:42:04.420 --> 02:42:11.540]  не ве штрих учтутся один раз правда поэтому получается следующее то есть вот минус сумма там
[02:42:11.540 --> 02:42:22.420]  диагат ве по всем ве лежащих ве штрих плюс ну вот ну плюс получается количество ребер в разрезе
[02:42:22.420 --> 02:42:27.100]  поэтому то есть идея такая что есть у всех ребер тут оказывается в обе стороны пропускная
[02:42:27.100 --> 02:42:35.460]  способность объявляется один но из каждой взятой вершины мы здесь пишем не с отце минус степень
[02:42:35.460 --> 02:42:55.580]  этой вершины да и конечно 20 да понятно да да правда да у нас вазикал парадокс что из
[02:42:55.740 --> 02:43:01.340]  не торчит ни одного ребра но это компенсируется тем что вот эти пропускные способности бывают
[02:43:01.340 --> 02:43:09.620]  отрицательные понятно да поэтому поэтому на самом деле делается то есть это так то есть на
[02:43:09.620 --> 02:43:14.860]  самом деле оригинал советовал так давайте сразу тут еще просто прибавим двое ну чтобы вот эта
[02:43:14.860 --> 02:43:24.780]  степень сразу убилась и здесь тогда сразу прибавим двое и у нас возникнет естественный
[02:43:24.780 --> 02:43:30.500]  вопрос ну и после этого тогда возникнет вопрос существует ли вот в этом в этой уже
[02:43:30.500 --> 02:43:39.180]  абсолютно нормальной сети разрез величины строго меньше чем вот этот вот а это разрез
[02:43:39.180 --> 02:43:50.780]  величины там 2 модуль е на воду и ве минус 2 да или нет чего а действительно а откуда два
[02:43:50.780 --> 02:44:06.220]  если теж у нас не в графе до 2 2 и вы да ну потому ну вот ну потому что у нас тут когда мы тут
[02:44:06.220 --> 02:44:14.700]  суммируем то там степени то как бы каждый ребро кто бьет из в 4 в 4 будет учтено два раза вот
[02:44:14.700 --> 02:44:27.100]  ну вот что но вот но нет нет просто идея такая вот просто вот 2 е штрих то есть ребра из
[02:44:27.100 --> 02:44:35.900]  свс их учитываем так просуммируем все степени в штрих тогда эти ребра учтены два раза но при
[02:44:35.900 --> 02:44:41.900]  этом есть еще ребра кто ведут из ве штрих куда-то еще они как бы и учитываются один лишний раз
[02:44:41.900 --> 02:44:54.260]  поэтому тут вот минус это и плюс разрез по этой логике это называется почему мы не модуль
[02:44:54.260 --> 02:45:11.820]  пишем ну хорошо допустим а чертова знает зачем может потому что потоки там всякие не знаю ну да
[02:45:11.820 --> 02:45:24.340]  ну на самом деле да ну вот но потому что нет смысла что значит корректно но потому что если
[02:45:24.340 --> 02:45:30.460]  я к любой вершине добавлю вот такие два ребра тут плюс 2 и тут плюс 2 то величина любого разреза
[02:45:30.460 --> 02:45:36.380]  увеличится ровно на двое чем не важно это вершина попала в левую долю или вправо
[02:45:36.380 --> 02:45:52.060]  ну по-разному можно дам вот а теперь красота но вот теперь вот эти карты просто хорошо такой
[02:45:52.060 --> 02:46:00.100]  максимальный поток в таком графе мы научились пихать за сколько но то есть мы нет поток мы
[02:46:01.060 --> 02:46:11.300]  вот но вот но да получается но то научились пихать за выкуп и получается hardlife мы умеем
[02:46:11.300 --> 02:46:18.540]  риск решать за в куб логовая получается потому что ну а потом ну потому что там реальный бен
[02:46:18.540 --> 02:46:24.600]  поиск там за в квадрата там на лог в квадрата потому что там всего в квадрат дребей отдельный
[02:46:24.600 --> 02:46:28.260]  вопрос как там организов generating ну как там организовать на самом деле бин поиск он
[02:46:28.260 --> 02:46:33.300]  с другой стороны, пока у нас асимптотика с кубом, можно просто эти дроби честно
[02:46:33.300 --> 02:46:37.220]  выписать и отсортировать, и потом по ним реально честно бинпоиск делать,
[02:46:37.220 --> 02:46:43.780]  то есть решение получится еще и в целых числах, но на самом деле тут фишка оказывается в том,
[02:46:43.780 --> 02:46:53.460]  что на самом деле от бинпоиска можно здесь избавиться, потому что у нас сеть очень красиво
[02:46:53.460 --> 02:47:01.340]  устроена, давайте представим себе, что мы движемся по вот этим вот С в каком порядке,
[02:47:01.340 --> 02:47:23.860]  но мы да, поэтому в бинпоиске у нас будет вопрос, существует ли подграф, у которого степень больше
[02:47:23.860 --> 02:47:33.540]  чем С, но не совсем, если идти по убыванию, то как бы смотрите, мы для предыдущего С нашли
[02:47:33.540 --> 02:47:41.500]  какой-то ответ, но выяснилось, что некоторые вот тут ребра могли перенасытиться, потому что вот
[02:47:41.500 --> 02:47:46.180]  возможно в предыдущем потоке ребро оказалось насыщенно, у нас там было все в порядке,
[02:47:46.180 --> 02:47:55.660]  но нам идея такая, нам при каждом С хочется найти максимальный поток, даже другой вопрос,
[02:47:55.660 --> 02:48:02.900]  к чему он там равен, это нам даже не так важно, но допустим мы при каком-то идее такая, при каком-то
[02:48:02.900 --> 02:48:09.780]  С мы нашли максимальный поток, а теперь давайте уменьшим С чуть-чуть, то есть допустим С там
[02:48:09.780 --> 02:48:18.180]  перешло в какой-то там С штрих меньше, чем С, вот тогда что произошло, тогда могло произойти,
[02:48:18.180 --> 02:48:24.420]  но заметим какие проблемы возникли, проблемы возникли только в том, что у нас у этих вот ребер
[02:48:24.420 --> 02:48:29.180]  пропускная способность уменьшилась, а это означает, что в предыдущем потоке могли быть
[02:48:29.180 --> 02:48:33.500]  проблемы, но правда, если там течет по ним вода и все равно так, чтобы тут в 2 С штрих
[02:48:33.500 --> 02:48:41.820]  укладывается, значит все в порядке, но если как бы потока там течет много, значит мы этот лишний
[02:48:41.820 --> 02:48:50.940]  поток отменяем, как мы его отменяем, то есть на самом деле мы просто говорим,
[02:48:50.940 --> 02:48:59.740]  что у нас то есть эксцесс от этой вершины резко стал больше нуля, причем обратите внимание,
[02:48:59.740 --> 02:49:04.100]  немножко парадокса, да, у этой вершины может быть какая угодно высота при этом,
[02:49:04.100 --> 02:49:10.460]  да, важный момент, обратите внимание, да, мы как бы высоты остаются с предыдущей террацией,
[02:49:10.460 --> 02:49:18.580]  смотрите тут просто чит возникает такой, дело в том, что когда вы тут делаете избыток,
[02:49:18.580 --> 02:49:27.180]  вот это ребро остается насыщенным, поэтому с этим ребром там никаких проблем с вот этой вот высотой
[02:49:27.180 --> 02:49:34.380]  не будет, да, вот, ну как бы заметим, что у нас инвариант на ребра никак не зависит от избытка в
[02:49:34.380 --> 02:49:40.260]  принципе, да, поэтому как бы мы просто делаем избыток так, чтобы не произошло ничего лишнего,
[02:49:40.260 --> 02:49:55.180]  да, то есть просто отольем и продолжим работу, ну понятно, да, эксц понятно будет больше нуля и
[02:49:55.180 --> 02:50:02.020]  продолжим там любой вот этот алгоритм, то есть заметим все асимптотики обратите внимание будут
[02:50:02.020 --> 02:50:09.900]  выполнены, то есть там любого из этих алгоритмов они продолжат быть выполнены, вот давайте самое
[02:50:09.900 --> 02:50:15.100]  простое рассмотрим вот эту например алгоритм будем делать, то есть на каждой его итерации будет
[02:50:15.100 --> 02:50:27.740]  то же самое, то есть либо высота уменьшится, либо мы выполним релейбл, да, что нет, а вы симптотики,
[02:50:27.740 --> 02:50:32.660]  но утверждение такое, что дело в том, что ну как бы хочется сказать, что мы как будто суммарно как
[02:50:32.660 --> 02:50:39.540]  будто пихаем поток один раз, а не много, это правда, оказывается в некоторых, ну не совсем так, но
[02:50:39.540 --> 02:50:45.660]  просто смотрите, вот у нас было доказательство, что один раз мы ищем, пока эксц есть и как бы все
[02:50:45.660 --> 02:50:52.020]  нормально, да, единственная разность теперь происходит, что иногда у нас как бы избытки
[02:50:52.020 --> 02:51:00.260]  появляются просто сами собой по внешним причинам, но каждая такая операция увеличивает наш избыт,
[02:51:00.260 --> 02:51:11.940]  то есть увеличивает потенциал не более чем на 2v, правда, вот этот, да, увеличивает на 2v и делает
[02:51:11.940 --> 02:51:17.060]  она это не более чем в квадрат раз, потому что у нас всего в квадрат сэшек вот этих,
[02:51:17.060 --> 02:51:31.580]  какой вы, ну вот, то есть тогда получается суммарно потенциал, ну вот так, нет, никакой, мы не делаем бинт,
[02:51:31.580 --> 02:51:36.820]  вот такая фишка, мы не делаем бинт поиск, мы идем аккуратненько, а хотя нет, погодите, если потенциал
[02:51:36.820 --> 02:51:42.220]  суммарно увеличивается на v-куп, то у нас итерации вот таких v-куп дает v в четвертый, нет, пока еще,
[02:51:42.220 --> 02:51:46.220]  нет, пока еще рано радует, нет, надо додумать, так,
[02:52:02.220 --> 02:52:08.180]  нет, мы должны убить лог, поэтому, то есть, что мы идем вот как-то вот,
[02:52:13.220 --> 02:52:27.220]  вот мы смотрим, считаем для начала для правой границы поток, вот этим, да, теперь берем центр, считаем для него, если для него все плохо, откатываемся, если неплохо, переходим...
[02:52:27.220 --> 02:52:30.220]  Ну откатываемся, прям заново совсем придется откатываться.
[02:52:30.220 --> 02:52:34.220]  Если откатываемся к тому, что было для правой границы, ну тогда там...
[02:52:34.220 --> 02:52:40.220]  Все еще будешь делать горифом запуска в поток, вот этих вот, которые наследуются...
[02:52:40.220 --> 02:52:45.220]  Нет, нет, нет, если откатываешься заново, то там, извините, работа с потенциалом вылетает в трубу.
[02:52:45.220 --> 02:52:51.220]  Мне гарантия, что у тебя то, что ты от того откатываешься, это будет нормально.
[02:52:51.220 --> 02:52:56.220]  У тебя все хорошо будет, как будто все равно будет тебе честный еще один запуск в поток.
[02:53:02.220 --> 02:53:13.220]  Вот, поэтому, да, ну-ка, ну-ка давайте аккуратненько, да, тут не все, ну вот, то есть, да, хочется, конечно, да, хочется сказать, что тут действительно как-то аккуратнее, да,
[02:53:13.220 --> 02:53:19.220]  то есть потенциал у нас, конечно, называется, может неожиданно возрадоваться.
[02:53:29.220 --> 02:53:35.220]  Это не, ну как не сильно, ну, насколько-то, а нам, нам пока, как бы пока мы никак не пользуемся тем, насколько это уменьшилось.
[02:53:35.220 --> 02:53:38.220]  Я, я, я, я всем то, что отцы никак не зависит, кстати.
[02:53:39.220 --> 02:53:53.220]  Вот, нет, у нас просто фишка, что, как бы, были какие-то избытки, то есть были, были у вершины какие-то избытки, и неожиданно выяснилось, что там, на ребрах, на ребрах, причем, правда, ребрах ведущих, правда, в Т.
[02:53:56.220 --> 02:54:03.220]  Нет, хотя нет, эти ребра все еще насыщенные, видимо, будут таковыми, но просто на вершинах появились еще какие-то избытки, которые мы начинаем еще куда-то пихать.
[02:54:03.220 --> 02:54:31.220]  Вот, возникает естественный вопрос, почему, почему, то есть почему, как бы, ну вот, то есть как бы, то есть совсем, совсем примитивный анализ у нас пока, что с кем, то есть мы замечаем, что так как мы тут, то есть замечаем, что мы, получается, в квадрат раз увеличиваем потенциал, ну вот, и это, а, стоп, погодите.
[02:54:33.220 --> 02:54:38.220]  Нет, нет, потенциал увеличивается на а от в, и он делает это в квадрат раз в процессе.
[02:54:40.220 --> 02:54:46.220]  Нет, да, мы и по высотам просто избытки, а, хотя нет, у меня есть неожиданный чип.
[02:54:47.220 --> 02:54:51.220]  Идея такая, вот у нас есть отсортированный массив вот этих в квадратах, да?
[02:54:53.220 --> 02:54:58.220]  Так вот, идея такая, давайте возьмем в этом ряду каждый в этот элемент.
[02:54:58.220 --> 02:55:03.220]  Возьмем каждый в этот элемент.
[02:55:05.220 --> 02:55:10.220]  Запустим этот алгоритм, запустим этот алгоритм только на этих дробях.
[02:55:12.220 --> 02:55:27.220]  Вот, тогда у нас потенциал будет увеличиваться в процессе не более чем в раз, каждый раз увеличивается на 2v, не более чем 2v, значит получается добавление к увеличению потенциала суммарно не более чем от v квадрат, значит все еще v куб.
[02:55:29.220 --> 02:55:32.220]  Вот, да.
[02:55:33.220 --> 02:55:38.220]  Делим на выпусков, находим в каждом.
[02:55:39.220 --> 02:55:40.220]  Нет, в каждом мы ничего не находим.
[02:55:41.220 --> 02:55:42.220]  Идем с конца.
[02:55:43.220 --> 02:55:45.220]  Вычленяем под последовательность длины v, вот так.
[02:55:46.220 --> 02:55:49.220]  Такое, что между каждыми двумя элементами тоже не больше чем v элемента.
[02:55:50.220 --> 02:55:51.220]  Да.
[02:55:52.220 --> 02:55:53.220]  Ну вот, да.
[02:55:53.220 --> 02:55:54.220]  А какая разница?
[02:55:55.220 --> 02:55:56.220]  Сейчас увидим.
[02:55:57.220 --> 02:56:00.220]  Идем с конца, делаем вот эту штуку, до тех пор пока мы можем.
[02:56:01.220 --> 02:56:02.220]  Пока не есть, надеюсь, первый раз.
[02:56:03.220 --> 02:56:04.220]  Первый раз мы нашли штуку на которой меньше.
[02:56:05.220 --> 02:56:08.220]  Хорошо, значит начнем предыдущий, а от него пойдем просто по элементам до этого.
[02:56:09.220 --> 02:56:11.220]  Можем даже заново запустить.
[02:56:12.220 --> 02:56:14.220]  Были две дроби, вот для этой все хорошо, а для этой уже нет.
[02:56:15.220 --> 02:56:18.220]  Ну и мы просто идем здесь вот сзади, потому что между ними очень мало.
[02:56:18.220 --> 02:56:19.220]  Так.
[02:56:20.220 --> 02:56:21.220]  Ну вот.
[02:56:22.220 --> 02:56:23.220]  Вроде работает.
[02:56:24.220 --> 02:56:26.220]  Ну это не кажется, просто два раза по кубу получилось.
[02:56:27.220 --> 02:56:28.220]  Ну как нянчка мы берем.
[02:56:29.220 --> 02:56:31.220]  Так господи, что за умирание, господи.
[02:56:36.220 --> 02:56:42.220]  Ну для того, что смотрите, нам нужно, скажем так, как бы мы умеем делать это как бы
[02:56:42.220 --> 02:56:48.220]  за В куб, если у нас вот это уменьшение проходит не более чем В раз.
[02:56:49.220 --> 02:56:50.220]  А у нас дробей В квадрат.
[02:56:51.220 --> 02:56:55.220]  Поэтому идея такая, давайте поделим последователь на блоки по В.
[02:56:56.220 --> 02:57:00.220]  И сначала поймем в каком блоке у нас будет ответ, как мы это поймем.
[02:57:01.220 --> 02:57:03.220]  Давайте в каждом блоке возьмем начало, начальную цешку.
[02:57:04.220 --> 02:57:07.220]  И значит для этих вот, ну всего у нас тогда получится В.
[02:57:07.220 --> 02:57:08.220]  Начало, начальную цешку.
[02:57:09.220 --> 02:57:12.220]  И значит для этих вот, ну всего у нас тогда получится В.
[02:57:13.220 --> 02:57:14.220]  Начало блока.
[02:57:15.220 --> 02:57:16.220]  И для них вот за куб поймем, собственно, где там ответ между какими.
[02:57:17.220 --> 02:57:18.220]  Вот.
[02:57:19.220 --> 02:57:20.220]  Это мы поняли за куб.
[02:57:21.220 --> 02:57:22.220]  То есть, но теперь у нас тогда остался блок и в блоке вариантов тоже В.
[02:57:23.220 --> 02:57:24.220]  Тоже В.
[02:57:24.220 --> 02:57:29.220]  Ну вот мы берем В, например, а не 2х, чтобы получить тот же бинпоиск.
[02:57:30.220 --> 02:57:33.220]  Мы сейчас делали бинпоиск, но делили не на две части.
[02:57:34.220 --> 02:57:39.220]  Потому что мы, ну потому что, ну чтобы блока рифмы избавиться.
[02:57:40.220 --> 02:57:42.220]  Тупой бинпоиск делал все это за В куб блок В.
[02:57:43.220 --> 02:57:44.220]  Потому что мы заново запускали поток.
[02:57:45.220 --> 02:57:47.220]  То есть у нас есть переменная кат, которая зависит.
[02:57:48.220 --> 02:57:49.220]  А, все я понял, все.
[02:57:50.220 --> 02:57:51.220]  Ну вот, да.
[02:57:51.220 --> 02:57:53.220]  Да, тут нетривиально немножко, но тем не менее, да.
[02:57:54.220 --> 02:57:59.220]  Что оказывается просто этот алгоритм устроен так, что как бы если я там, допустим, у меня есть,
[02:58:00.220 --> 02:58:04.220]  от В раз у меня неожиданно уменьшаются пропускные способности каких-то ребер.
[02:58:05.220 --> 02:58:11.220]  Причем что приятно, кстати, обратить внимание, абсолютно любых ребер на самом деле.
[02:58:12.220 --> 02:58:14.220]  То есть на самом деле эта технология говорит нам следующее.
[02:58:14.220 --> 02:58:22.220]  Мы можем просто сказать, что, ой, а у нас, допустим, у нескольких ребер неожиданно уменьшилась пропускная способность.
[02:58:23.220 --> 02:58:27.220]  Нам сейчас абсолютно было плевать на то, что эти ребра обязательно ведут в Т на самом деле.
[02:58:28.220 --> 02:58:29.220]  Это могут быть любые ребра.
[02:58:30.220 --> 02:58:32.220]  То есть надо их просто разно...
[02:58:33.220 --> 02:58:34.220]  То есть там просто на заданную высоту как бы.
[02:58:35.220 --> 02:58:39.220]  То есть если там лишнее что-то образовалось, значит объявляем тут избыток и продолжаем.
[02:58:40.220 --> 02:58:42.220]  То есть главное, что это прям именно пачкой получилось.
[02:58:42.220 --> 02:58:43.220]  То есть если таких...
[02:58:44.220 --> 02:58:45.220]  То есть как бы понятно, мы там...
[02:58:46.220 --> 02:58:50.220]  То есть каждую пачку мы можем обработать так, что вот асимптотика куб от этого не потерялась.
[02:58:51.220 --> 02:58:52.220]  Почему после...
[02:58:53.220 --> 02:58:54.220]  У нас мы запустили...
[02:58:55.220 --> 02:58:56.220]  Если мы сделали вот ваитрац, идем с конца, да?
[02:58:57.220 --> 02:58:58.220]  Да.
[02:58:59.220 --> 02:59:02.220]  Почему после последней предпоследней будут работать за, понимаем, за В квадрат?
[02:59:03.220 --> 02:59:05.220]  Нет, она не верна, что каждая итерация будет работать за квадрат.
[02:59:06.220 --> 02:59:08.220]  Верно, что суммарно все это будет работать за куб.
[02:59:08.220 --> 02:59:09.220]  Нет, да.
[02:59:10.220 --> 02:59:11.220]  Да.
[02:59:13.220 --> 02:59:14.220]  В квадрат.
[02:59:15.220 --> 02:59:16.220]  Нет, ну смотрите, у нас так...
[02:59:17.220 --> 02:59:18.220]  Но нам известно, что...
[02:59:19.220 --> 02:59:20.220]  За счет чего у нас вообще победа, да?
[02:59:21.220 --> 02:59:22.220]  Напомним вот алгоритм.
[02:59:23.220 --> 02:59:26.220]  У нас есть потенциал, и он говорит, что там вот каждый лишний вайл, да?
[02:59:27.220 --> 02:59:28.220]  То есть каждый вот этот фор, да?
[02:59:29.220 --> 02:59:31.220]  Ну то есть сколько у нас этих форов вообще?
[02:59:32.220 --> 02:59:34.220]  Ну потому что, да, мы говорим, мы работаем с в.е. плюс калибры.
[02:59:34.220 --> 02:59:35.220]  Сколько у нас этих форов вообще?
[02:59:36.220 --> 02:59:38.220]  Ну потому что, да, мы говорим, мы работаем с в.е. плюс калибры.
[02:59:39.220 --> 02:59:41.220]  Спрашивается, сколько вот этих форов будет?
[02:59:42.220 --> 02:59:43.220]  Мы хотим доказать, что вот В квадрат.
[02:59:44.220 --> 02:59:45.220]  Почему мы это говорим?
[02:59:46.220 --> 02:59:53.220]  Потому что мы замечаем, что у нас как бы все форы делятся на те форы, в которых были релеблы, а их так и так В квадрат, да?
[02:59:54.220 --> 02:59:58.220]  А есть те, которые без релебла, но они уменьшают потенциал.
[02:59:59.220 --> 03:00:02.220]  Остается только убедиться, что суммарно потенциал увеличивается не более, чем на В квадрат.
[03:00:02.220 --> 03:00:07.220]  Ну релеблы его увеличивают суммарно на 2 В квадрат, поэтому это нас устраивает.
[03:00:08.220 --> 03:00:13.220]  Но теперь к ним прибавляется еще увеличение потенциалов, которые есть у нас, то есть которые вот за счет этого.
[03:00:14.220 --> 03:00:19.220]  Но так как каждое конкретное добавление вот на все ребра, то есть если мы один раз скопом все ребра уменьшили какие-то,
[03:00:20.220 --> 03:00:25.220]  то тогда потенциал увеличивается не более чем на 2 В, потому что максимум.
[03:00:25.220 --> 03:00:32.220]  Следовательно, если мы делаем это не более чем в раз, то суммарно потенциал увеличился еще дополнительно на О от В квадрат.
[03:00:33.220 --> 03:00:38.220]  И это нас устраивает. То есть куб остается жив, потому что высоты мы не обнуляем.
[03:00:38.220 --> 03:00:57.220]  Продолжаем его запускать. Высота не затирает, совершенно верно.
[03:00:58.220 --> 03:01:02.220]  То есть алгоритм обладает таким свойством.
[03:01:03.220 --> 03:01:08.220]  То есть блокирующие потоки тут, кажется, просто так не помогут.
[03:01:09.220 --> 03:01:13.220]  А вот в процессе Push Relay вот оказывается уменьшать ребра можно.
[03:01:14.220 --> 03:01:23.220]  Увеличивать ребра это, конечно, проблема, потому что если вы увеличите пропускную способность ребра, то проблемы могут возникнуть.
[03:01:23.220 --> 03:01:28.220]  Хотя нет.
[03:01:29.220 --> 03:01:37.220]  Хотя, кстати, увеличение ребра, если у вас у какого-то ребра неожиданно увеличилась пропускная способность, то это тоже не проблема.
[03:01:38.220 --> 03:01:45.220]  Потому что мы говорим, а давайте-ка из этого ребра просто по максимуму пихнем воды, и избыток будет здесь.
[03:01:46.220 --> 03:01:54.220]  У вас два варианта. Либо это ребро торчит вверх, там ведет куда-то вверх, и тогда избыток, и тогда ничего вообще не меняем.
[03:01:55.220 --> 03:01:57.220]  Либо это ребро ведет куда-то вниз.
[03:01:58.220 --> 03:02:03.220]  Тогда вы говорите, а давайте-ка пихнем по максимуму из этого ребра, и избыток тогда будет внизу.
[03:02:04.220 --> 03:02:09.220]  Тогда по новым тогда не нулевым ребром будет обратное ребро, но будет торчать ветвь, и у нас победа.
[03:02:11.220 --> 03:02:13.220]  Да, это если увеличиваем.
[03:02:15.220 --> 03:02:17.220]  То есть получается вот такой неожиданный чит.
[03:02:18.220 --> 03:02:20.220]  Ну, в данном ноте.
[03:02:21.220 --> 03:02:22.220]  Чего?
[03:02:27.220 --> 03:02:29.220]  Ну, эксцесс меньше нуля мы делать не можем.
[03:02:30.220 --> 03:02:32.220]  Тогда как мы припихиваем по максимуму?
[03:02:35.220 --> 03:02:39.220]  Ну, мы припихиваем по максимуму, который на текущий момент.
[03:02:40.220 --> 03:02:54.220]  А если появилось новое ребро, то нам надо добиться, нам просто надо сделать какие-нибудь, хотя нет, эксцессами просто так, может, на халяву не получится.
[03:02:54.220 --> 03:02:59.220]  Здесь мы все-таки воспользовались тем, что мы все-таки из Т делали эти эксцессы.
[03:03:00.220 --> 03:03:05.220]  То есть отменили какой-то поток, и тем самым просто отменили поток в Т, поэтому...
[03:03:06.220 --> 03:03:08.220]  Мы, кстати, все еще умеем удалять ребро.
[03:03:09.220 --> 03:03:10.220]  Чего?
[03:03:11.220 --> 03:03:13.220]  Мы умеем искать потоки и удалять ребра, если у нас есть еще закуп.
[03:03:14.220 --> 03:03:15.220]  Нет, удалять ребра мы умеем.
[03:03:16.220 --> 03:03:18.220]  Но, правда, нет, аккуратно, просто рандомно удалять ребра нельзя.
[03:03:19.220 --> 03:03:21.220]  То есть не в текущий момент.
[03:03:21.220 --> 03:03:23.220]  Смотри, нельзя сказать, что мы умеем там.
[03:03:24.220 --> 03:03:25.220]  Делаем два запроса.
[03:03:26.220 --> 03:03:28.220]  Первое – удали ребро, второй – скажи поток.
[03:03:29.220 --> 03:03:30.220]  Нет, это мы суммарно ЗВК делать не умеем.
[03:03:31.220 --> 03:03:33.220]  То есть это мы делаем, только если ребра удаляете там не более чем В раз.
[03:03:34.220 --> 03:03:35.220]  Вот так.
[03:03:36.220 --> 03:03:37.220]  Ну, ребро вообще-то...
[03:03:38.220 --> 03:03:40.220]  Нет, давайте еще раз подумаем.
[03:03:41.220 --> 03:03:42.220]  Ладресу уже об этом зашла речь.
[03:03:43.220 --> 03:03:46.220]  То есть что делать, если от вас попросили уменьшить пропускную способность?
[03:03:46.220 --> 03:03:48.220]  Какого-нибудь произвольного, абсолютно произвольного ребра.
[03:03:49.220 --> 03:03:51.220]  На этот раз не обязательно ведущего в Т.
[03:03:53.220 --> 03:03:54.220]  Вот.
[03:03:55.220 --> 03:03:57.220]  Так, что у нас тогда?
[03:03:59.220 --> 03:04:00.220]  Сейчас.
[03:04:01.220 --> 03:04:05.220]  Нет, тут раз надо добить, потому что дальнейшая тема будет уже никак не связана с предпотоками.
[03:04:06.220 --> 03:04:07.220]  Вот.
[03:04:08.220 --> 03:04:09.220]  Чего?
[03:04:09.220 --> 03:04:12.220]  Ну вот, допустим, мы уменьшили пропускную способность.
[03:04:13.220 --> 03:04:14.220]  Тогда что это означает?
[03:04:15.220 --> 03:04:17.220]  Тут вопрос, какой поток тут тек?
[03:04:18.220 --> 03:04:24.220]  Если потока течет меньше, чем С3 меньше либо равно, то ничего делать вообще не надо, и так кайф.
[03:04:25.220 --> 03:04:31.220]  Если потока текло стало течь больше, чем С3, значит вот этот F-С3 лишний,
[03:04:31.220 --> 03:04:32.220]  надо отмерить.
[03:04:33.220 --> 03:04:34.220]  Но как мы это делаем?
[03:04:35.220 --> 03:04:37.220]  А, правда, слушайте, нельзя это так просто сделать.
[03:04:38.220 --> 03:04:42.220]  Потому что здесь XS плюс F-С3, а тут минус F.
[03:04:43.220 --> 03:04:45.220]  А, да, тут проблема, потому что...
[03:04:46.220 --> 03:04:48.220]  Да-да-да, тут мы все-таки пользуемся тем, что у это Т было.
[03:04:49.220 --> 03:04:50.220]  Да, потому что у этого Т было.
[03:04:51.220 --> 03:04:52.220]  Вот.
[03:04:53.220 --> 03:04:54.220]  Вот.
[03:04:54.220 --> 03:04:56.220]  А, да, тут проблема, потому что...
[03:04:57.220 --> 03:04:59.220]  Да-да-да, тут мы все-таки пользуемся тем, что у этого Т было.
[03:05:00.220 --> 03:05:04.220]  Да, потому что Т это единственная вершина, которая там...
[03:05:05.220 --> 03:05:06.220]  Ну да.
[03:05:07.220 --> 03:05:09.220]  Что, из Т типа ничего не выйдет?
[03:05:10.220 --> 03:05:12.220]  Что в Т может быть там...
[03:05:13.220 --> 03:05:14.220]  В Т может быть отрицательный XS.
[03:05:15.220 --> 03:05:16.220]  Нет.
[03:05:17.220 --> 03:05:18.220]  Нет.
[03:05:19.220 --> 03:05:20.220]  Нет, отрицательный XS у нас в С.
[03:05:21.220 --> 03:05:22.220]  В Т он как раз глубоко положительный.
[03:05:22.220 --> 03:05:27.220]  Просто фишка в том, что XS там просто из Т у нас фишка, что из Т ничего не вытекает.
[03:05:28.220 --> 03:05:30.220]  То есть поэтому как бы там...
[03:05:31.220 --> 03:05:32.220]  Да, ладно, хорошо.
[03:05:33.220 --> 03:05:34.220]  Ладно, это тоже хорошо было понять, ладно.
[03:05:35.220 --> 03:05:37.220]  То есть мы все-таки пользуемся тем, что у нас тут ребра именно в Т и никуда, кроме...
[03:05:38.220 --> 03:05:39.220]  Жаль, жаль, жаль.
[03:05:40.220 --> 03:05:42.220]  Нет, может, конечно, если там на ребрах...
[03:05:46.220 --> 03:05:47.220]  Ладно.
[03:05:47.220 --> 03:05:48.220]  Так, ладно.
[03:06:14.220 --> 03:06:15.220]  Так, ладно.
[03:06:15.220 --> 03:06:16.220]  Ладно, я думаю так.
[03:06:17.220 --> 03:06:18.220]  Так, по-моему так.
[03:06:19.220 --> 03:06:20.220]  Ладно, давайте так.
[03:06:21.220 --> 03:06:22.220]  Ладно, думать это уже можно, но я думаю точно.
[03:06:23.220 --> 03:06:26.220]  Сейчас надо сделать перерыв, а потом сделать финальный наскок, собственно, чтобы разобраться с масштабированием.
[03:06:27.220 --> 03:06:28.220]  Вот.
[03:06:29.220 --> 03:06:30.220]  Так что вот, что мы сегодня еще и сделаем.
[03:06:31.220 --> 03:06:33.220]  Ладно, давайте немножко о масштабировании поговорим.
[03:06:34.220 --> 03:06:37.220]  Значит, масштабирование это тоже предслов численный алгоритм, если что.
[03:06:38.220 --> 03:06:39.220]  Да, то есть напоминаю, да.
[03:06:40.220 --> 03:06:44.220]  То есть там в дробях, то есть в дробных числах это будет работать только там...
[03:06:45.220 --> 03:06:46.220]  Ну, там с трудом уже начнет работать.
[03:06:47.220 --> 03:06:48.220]  По крайней мере, упихивать до упора.
[03:06:49.220 --> 03:06:50.220]  По крайней мере, вы будете там бесконечно долго.
[03:06:51.220 --> 03:06:54.220]  То есть можно, наверное, про масштабирование говорить, что у вас там вы найдете ответ,
[03:06:55.220 --> 03:07:00.220]  поток, отличающийся от максимального, не более чем на сколько-то, забегая вперед.
[03:07:01.220 --> 03:07:02.220]  Вот, но соответственно.
[03:07:03.220 --> 03:07:05.220]  Ну, то есть у нас пока предварительная идея такая, что все...
[03:07:06.220 --> 03:07:07.220]  Итак, говорим о масштабировании.
[03:07:12.220 --> 03:07:13.220]  Давайте разберем тут быстренько идею.
[03:07:14.220 --> 03:07:17.220]  Значит, идея такая, что все пропускные способности у нас целочисленные.
[03:07:18.220 --> 03:07:21.220]  То есть это вот E в Z больше 0.
[03:07:22.220 --> 03:07:23.220]  Может даже больше 0.
[03:07:24.220 --> 03:07:25.220]  Вот.
[03:07:26.220 --> 03:07:29.220]  И в чем заключается самый тупой алгоритм масштабирования, который делается?
[03:07:31.220 --> 03:07:36.220]  Он говорит, что давайте переберем, допустим, степени двойки.
[03:07:36.220 --> 03:07:43.220]  Допустим, какой-нибудь R равно 2 в степени log2C округленное вниз.
[03:07:45.220 --> 03:07:49.220]  Там R больше 0, Rdiv равно 2.
[03:07:50.220 --> 03:07:51.220]  Вот так вот скажем, да?
[03:07:54.220 --> 03:08:01.220]  Значит, пихаем поток в 0.
[03:08:01.220 --> 03:08:14.220]  То есть пихаем поток методом Форда Фолкерсона,
[03:08:15.220 --> 03:08:33.220]  рассматривая, правда, при этом лишь ребра с остаточной пропускной способностью больше либо равно, чем R.
[03:08:33.220 --> 03:08:43.220]  То есть по сути вы там DFS запускаете по ребрам с остаточной пропускной способностью хотя бы R.
[03:08:48.220 --> 03:08:49.220]  Вот, спрашивается.
[03:08:54.220 --> 03:08:56.220]  Ну, спрашивается, за сколько это будет работать.
[03:08:57.220 --> 03:08:58.220]  Значит, утверждение.
[03:09:01.220 --> 03:09:08.220]  После фазы, после R-фазы, назовем это R-итерацией,
[03:09:08.220 --> 03:09:26.220]  останется пустить, то есть ну просто вот мы тут спустили сколько-то потока, и сколько-то нам по стоку еще осталось до максимума.
[03:09:27.220 --> 03:09:35.220]  Так вот, останется пустить не более чем, даже строго меньше, чем?
[03:09:38.220 --> 03:09:39.220]  R-новое.
[03:09:42.220 --> 03:09:43.220]  R-новое?
[03:09:44.220 --> 03:09:46.220]  Ну, R-новое оценка, которая вроде работает.
[03:09:47.220 --> 03:09:48.220]  Скорее R-ное, наверное.
[03:09:49.220 --> 03:09:51.220]  Ну, в разрезе у нас все.
[03:09:52.220 --> 03:09:53.220]  Да, хорошо, R-ное.
[03:09:54.220 --> 03:09:56.220]  Да, почему это так?
[03:09:57.220 --> 03:09:58.220]  Ну, идея стандартная.
[03:09:59.220 --> 03:10:02.220]  Пусть выяснилось, что по таким ребрам из S до T дойти нельзя.
[03:10:03.220 --> 03:10:05.220]  Ну, давайте как всегда рассмотрим, а докуда можно.
[03:10:06.220 --> 03:10:07.220]  Нашли, поставили разрез.
[03:10:08.220 --> 03:10:09.220]  Пропускная способность этого разреза.
[03:10:10.220 --> 03:10:11.220]  Так, разрез пересекает не более, чем E-ребер.
[03:10:12.220 --> 03:10:14.220]  У каждой пропускная способность получается меньше, чем R.
[03:10:15.220 --> 03:10:17.220]  Ну, потому что было бы R, прошли бы еще.
[03:10:18.220 --> 03:10:20.220]  Значит, получается суммарно осталось пихнуть не более, чем Re.
[03:10:23.220 --> 03:10:25.220]  Ну, тогда мистическое утверждение.
[03:10:26.220 --> 03:10:27.220]  Следствие.
[03:10:32.220 --> 03:10:33.220]  Ну, вот.
[03:10:34.220 --> 03:10:35.220]  На каждой итерации.
[03:10:39.220 --> 03:10:40.220]  Итерации.
[03:10:41.220 --> 03:10:42.220]  Удается найти.
[03:10:43.220 --> 03:10:46.220]  Удается найти.
[03:10:48.220 --> 03:10:51.220]  Строго меньше, чем 2 модуль E.
[03:10:53.220 --> 03:10:58.220]  Собственно, улучшающих, увеличивающих путей.
[03:11:00.220 --> 03:11:04.220]  Ну, потому что дело в том, что на каждой следующей фазе вы будете пихать R пополам.
[03:11:05.220 --> 03:11:07.220]  А вам осталось пихнуть не более, чем Re.
[03:11:08.220 --> 03:11:10.220]  Значит, больше, чем 2E не пихнете.
[03:11:11.220 --> 03:11:12.220]  Логично, да?
[03:11:19.220 --> 03:11:21.220]  А можете считать, что была нулевая?
[03:11:21.220 --> 03:11:22.220]  Ну, скажем так.
[03:11:23.220 --> 03:11:26.220]  Ну, log2c, c это максимальная пропускная способность.
[03:11:27.220 --> 03:11:32.220]  Можете считать, что вы перед этим делали итерацию в 2 раза больше.
[03:11:33.220 --> 03:11:36.220]  У вас получится, кстати, разрез от просто s и все.
[03:11:37.220 --> 03:11:39.220]  Так что можете считать, что была нулевая итерация.
[03:11:43.220 --> 03:11:44.220]  Итого тогда.
[03:11:46.220 --> 03:11:47.220]  Ну, вот такое следствие.
[03:11:47.220 --> 03:11:48.220]  Такое следствие.
[03:11:49.220 --> 03:11:51.220]  Значит, асимптотика у нас получается от E.
[03:11:52.220 --> 03:11:53.220]  Ну, DFS у нас за E работает.
[03:11:54.220 --> 03:11:55.220]  Даже не за V плюс E, а за E, если правильно делать.
[03:11:56.220 --> 03:12:00.220]  От модуль E умножить на сколько там?
[03:12:01.220 --> 03:12:03.220]  Получается, ну, вот.
[03:12:04.220 --> 03:12:05.220]  Ну, да.
[03:12:07.220 --> 03:12:09.220]  Значит, DFS работает за E.
[03:12:10.220 --> 03:12:12.220]  Значит, DFS работает за E.
[03:12:13.220 --> 03:12:14.220]  Самих DFS тоже от E.
[03:12:14.220 --> 03:12:18.220]  И еще домножаем на логарифм, потому что мы это логарифм разделаем.
[03:12:21.220 --> 03:12:22.220]  Вот.
[03:12:23.220 --> 03:12:24.220]  E квадрат, logc.
[03:12:25.220 --> 03:12:26.220]  Вот.
[03:12:27.220 --> 03:12:28.220]  Ладно.
[03:12:29.220 --> 03:12:30.220]  Не буду дописывать.
[03:12:31.220 --> 03:12:32.220]  Формально, конечно, это ни черта не утверждение.
[03:12:33.220 --> 03:12:34.220]  Ну ладно, и утверждение, но тривиальное.
[03:12:35.220 --> 03:12:36.220]  Но понятно, что имеется в виду.
[03:12:37.220 --> 03:12:42.220]  Это самое тупое масштабирование самым тупым DFS.
[03:12:42.220 --> 03:12:43.220]  Чего?
[03:12:44.220 --> 03:12:45.220]  Ну, да.
[03:12:46.220 --> 03:12:50.220]  То есть часто бывает, что уже пихайте это и будет вам счастье.
[03:12:51.220 --> 03:12:52.220]  Абсолютно.
[03:12:53.220 --> 03:12:54.220]  Да.
[03:12:55.220 --> 03:12:56.220]  Абсолютно любым DFS.
[03:12:57.220 --> 03:12:58.220]  Да.
[03:12:59.220 --> 03:13:00.220]  Абсолютно.
[03:13:01.220 --> 03:13:02.220]  Да.
[03:13:03.220 --> 03:13:04.220]  Абсолютно любым DFS.
[03:13:05.220 --> 03:13:06.220]  Да.
[03:13:07.220 --> 03:13:08.220]  А то есть, как бы если мы...
[03:13:09.220 --> 03:13:10.220]  Это работает за N.
[03:13:10.220 --> 03:13:14.220]  Слушайте, если вообще просто DFS искать путь, вам может вообще никогда не закончиться.
[03:13:15.220 --> 03:13:16.220]  Да.
[03:13:17.220 --> 03:13:18.220]  Да.
[03:13:19.220 --> 03:13:20.220]  Да, но здесь важный момент.
[03:13:21.220 --> 03:13:24.220]  Мы пользуемся, мы очень сильно пользуемся тем, что тут целочисленная сеть.
[03:13:25.220 --> 03:13:26.220]  В смысле, если...
[03:13:27.220 --> 03:13:28.220]  Ну, в целочисленной...
[03:13:29.220 --> 03:13:36.220]  Ищем просто DFS, и даже если у нас целочисленная сеть, то у нас даже тогда может в 8-м плотечке вылезти C и не подлогарифм.
[03:13:37.220 --> 03:13:38.220]  Да.
[03:13:38.220 --> 03:13:39.220]  Ну да.
[03:13:40.220 --> 03:13:41.220]  Но масштабирование это убивает.
[03:13:42.220 --> 03:13:44.220]  Правда в 8-м точке вылезает C.
[03:13:45.220 --> 03:13:46.220]  То есть это не полинома твоей.
[03:13:47.220 --> 03:13:48.220]  Вот.
[03:13:49.220 --> 03:13:50.220]  Так же соответственно.
[03:13:51.220 --> 03:13:52.220]  То есть там O от C не будет, будет вот тот.
[03:13:53.220 --> 03:13:54.220]  То есть там C не будет, будет лог C.
[03:13:55.220 --> 03:13:56.220]  Да.
[03:13:57.220 --> 03:13:58.220]  Так.
[03:13:59.220 --> 03:14:00.220]  Это вот такое масштабирование.
[03:14:01.220 --> 03:14:03.220]  Но самое веселое для нас, это что делать, если мы захотим...
[03:14:04.220 --> 03:14:07.220]  Если нам очень хочется делать динец плюс масштабирование.
[03:14:08.220 --> 03:14:09.220]  Да.
[03:14:10.220 --> 03:14:11.220]  Но тут важный момент.
[03:14:12.220 --> 03:14:16.220]  Но тут для того, чтобы это понять, нам нужно сказать следующее.
[03:14:17.220 --> 03:14:21.220]  Нам нужно извить, а где у нас собственно масштабирование...
[03:14:22.220 --> 03:14:23.220]  Когда мы делаем масштабирование?
[03:14:24.220 --> 03:14:25.220]  Потому что можно же...
[03:14:26.220 --> 03:14:29.220]  Ну тут просто как бы вот эту сумму всегда можно понять двумя способами.
[03:14:30.220 --> 03:14:31.220]  Можно понять, что там...
[03:14:32.220 --> 03:14:36.220]  Ну, допустим, делаем вот это, и на каждый итерат составляем только ребра с прутом.
[03:14:36.220 --> 03:14:39.220]  И на каждый итерат составляем только ребра с прутом с способностью больше либо равно R,
[03:14:40.220 --> 03:14:41.220]  и делаем на них динец честного.
[03:14:42.220 --> 03:14:43.220]  А можно делать наоборот.
[03:14:44.220 --> 03:14:45.220]  Ну вот.
[03:14:46.220 --> 03:14:49.220]  Можно делать динца и каждый блокирующий поток искать с помощью масштабирования.
[03:14:51.220 --> 03:14:52.220]  Вот мы пойдем вторым путем.
[03:14:55.220 --> 03:14:57.220]  То есть динец плюс масштабирование.
[03:14:58.220 --> 03:14:59.220]  Значит, будем делать так.
[03:15:01.220 --> 03:15:02.220]  Там.
[03:15:03.220 --> 03:15:04.220]  То есть как бы пишем стандартного динца.
[03:15:04.220 --> 03:15:05.220]  While true.
[03:15:06.220 --> 03:15:07.220]  Но сначала пишем KBP.
[03:15:09.220 --> 03:15:11.220]  То есть BFS от S.
[03:15:12.220 --> 03:15:14.220]  Ну типа, типа слоистая сеть.
[03:15:16.220 --> 03:15:17.220]  Устроим.
[03:15:20.220 --> 03:15:29.220]  Значит, понятно, что если оказалось, что D от T равно плюс бесконечность, то как бы выбрасываемся.
[03:15:30.220 --> 03:15:32.220]  Так, как у нас по-английски будет выбрасываться?
[03:15:33.220 --> 03:15:34.220]  Правильно.
[03:15:35.220 --> 03:15:36.220]  Да.
[03:15:37.220 --> 03:15:38.220]  Да, бряк.
[03:15:39.220 --> 03:15:40.220]  Да, бряк.
[03:15:41.220 --> 03:15:42.220]  Вот.
[03:15:43.220 --> 03:15:44.220]  Это называется.
[03:15:45.220 --> 03:15:46.220]  Как будет по-английски lose?
[03:15:47.220 --> 03:15:48.220]  Ответ карман.
[03:15:49.220 --> 03:15:50.220]  Да, потому что потит.
[03:15:51.220 --> 03:15:52.220]  Да, как-то не странно.
[03:15:53.220 --> 03:15:54.220]  Почему-то потит.
[03:15:55.220 --> 03:15:56.220]  Ну там lose это да.
[03:15:57.220 --> 03:15:58.220]  Lunga в гольфе это hole.
[03:15:59.220 --> 03:16:00.220]  Вот.
[03:16:01.220 --> 03:16:02.220]  Ну вот.
[03:16:03.220 --> 03:16:05.220]  И теперь значит for.
[03:16:06.220 --> 03:16:08.220]  Соответственно там R равно.
[03:16:09.220 --> 03:16:12.220]  Ну допустим можно даже, вот можно даже я вот так честно написал, но можно написать так.
[03:16:13.220 --> 03:16:14.220]  Там R равно C.
[03:16:15.220 --> 03:16:16.220]  R там больше нуля.
[03:16:17.220 --> 03:16:19.220]  Там R там diff равно 2.
[03:16:20.220 --> 03:16:24.220]  Ну тут конечно там оценка будет чуть-чуть не такая там, но суть останется той же.
[03:16:25.220 --> 03:16:27.220]  Значит, и тут ищем.
[03:16:27.220 --> 03:16:35.220]  Там блокирующий поток методом прям вот на этот раз честно, на этот раз методом Диница.
[03:16:38.220 --> 03:16:39.220]  Методом Диница.
[03:16:41.220 --> 03:16:42.220]  Рассматривая.
[03:16:45.220 --> 03:16:46.220]  Рассматривая.
[03:16:48.220 --> 03:16:49.220]  Только.
[03:16:50.220 --> 03:16:51.220]  Рассматривая.
[03:16:53.220 --> 03:16:54.220]  Только.
[03:16:56.220 --> 03:16:57.220]  Ребра.
[03:17:01.220 --> 03:17:04.220]  Да, только ребра с остаточной пустой способностью.
[03:17:05.220 --> 03:17:07.220]  Больше либо равно R, Е естественно.
[03:17:10.220 --> 03:17:11.220]  Вот.
[03:17:11.220 --> 03:17:12.220]  Понятно?
[03:17:17.220 --> 03:17:18.220]  Да.
[03:17:18.220 --> 03:17:19.220]  Ну уже внутри БФС.
[03:17:20.220 --> 03:17:22.220]  Нет, внутри БФС мы никакие ребра как всегда не удаляем.
[03:17:23.220 --> 03:17:25.220]  Внутри БФС нам по барабану, в БФС мы рассматриваем все.
[03:17:27.220 --> 03:17:33.220]  То есть обратите внимание, само масштабирование идет только не в БФС, а только в блокирующем потоке.
[03:17:35.220 --> 03:17:36.220]  Да.
[03:17:36.220 --> 03:17:37.220]  Такие не в ДФС, а в ДФСах.
[03:17:37.220 --> 03:17:40.220]  То есть мы делаем здесь фактически лог СДФСов.
[03:17:59.220 --> 03:18:01.220]  Нет, зачем, погоди, зачем, какие ограничения?
[03:18:08.220 --> 03:18:11.220]  Так мы и так не выбросили, не понял, о чем вы.
[03:18:12.220 --> 03:18:14.220]  Все, я вот уже здесь выбросился сразу.
[03:18:15.220 --> 03:18:17.220]  Вайл, если что, вот здесь заканчивается.
[03:18:19.220 --> 03:18:20.220]  Вот, ну теперь давайте думать.
[03:18:22.220 --> 03:18:24.220]  Почему-то жуткое утверждение, что это работает круто.
[03:18:26.220 --> 03:18:31.220]  Теория, о которой мы сегодня хотим доказать, это то, что это работает за В, Е, лог, С.
[03:18:34.220 --> 03:18:36.220]  Почему-то мы такое утверждаем.
[03:18:37.220 --> 03:18:39.220]  Каждая фазка работает...
[03:18:48.220 --> 03:18:55.220]  Нет, ну ДФС будет работать за Е, казалось бы, хотелось бы, по крайней мере.
[03:18:56.220 --> 03:19:00.220]  Ну тупой ДФС работал бы за Е, их был бы всего лог С, поэтому фаз всего В.
[03:19:01.220 --> 03:19:04.220]  Да, мы хотим показать, что каждая фаза единица работает за Е, лог С.
[03:19:05.220 --> 03:19:07.220]  Понятно цель, да?
[03:19:08.220 --> 03:19:09.220]  Понятно?
[03:19:10.220 --> 03:19:11.220]  Все еще живы.
[03:19:15.220 --> 03:19:18.220]  Е, лог, хотим показать, что тут все работает за Е, лог, С.
[03:19:19.220 --> 03:19:20.220]  А как мы это будем показывать?
[03:19:21.220 --> 03:19:24.220]  Но давайте вспомним, за что у нас работает Д?
[03:19:24.220 --> 03:19:27.220]  ЗБМ, ГНМ блокирует, ГНМ блокирует.
[03:19:54.220 --> 03:19:56.220]  Поэтому думать надо теперь над следующим.
[03:19:57.220 --> 03:19:58.220]  Теперь внимание, вопрос.
[03:19:59.220 --> 03:20:02.220]  То есть он в какой-то момент находит путь и прописывает по нему что-то.
[03:20:04.220 --> 03:20:05.220]  Вправивается.
[03:20:12.220 --> 03:20:14.220]  Ну а теперь давайте думать, почему он...
[03:20:17.220 --> 03:20:18.220]  У нас, казалось бы, какой-то масштабирует.
[03:20:19.220 --> 03:20:20.220]  Теперь давайте думать.
[03:20:20.220 --> 03:20:28.220]  Мы ищем пути, значит, ребра Р, но при этом помним, что мы уже пробежались по ребрам 2R.
[03:20:31.220 --> 03:20:36.220]  То есть пробежались по ребраме личной 2R, причем на том же БФС, обратите внимание, причем мы туда-сюда не бегаем.
[03:20:37.220 --> 03:20:40.220]  На ребрах 2R и там что-то попихали.
[03:20:41.220 --> 03:20:44.220]  И мы теперь точно знаем, что на таких ребрах мы от С до Т дойти не можем.
[03:20:46.220 --> 03:20:47.220]  Спрашивается.
[03:20:47.220 --> 03:20:51.220]  Спрашивается, ну и какой вывод из этого можно сделать?
[03:20:57.220 --> 03:21:00.220]  Вот возникает такой естественный вопрос.
[03:21:03.220 --> 03:21:04.220]  ДФС-ом...
[03:21:05.220 --> 03:21:06.220]  Ну как?
[03:21:07.220 --> 03:21:08.220]  Куда не бегаем?
[03:21:09.220 --> 03:21:13.220]  Можно не спускаться, получается, по ребрам, который больше, чем 2R.
[03:21:16.220 --> 03:21:18.220]  Нет, почему? Это неправда.
[03:21:19.220 --> 03:21:26.220]  Это неправда. Может мы не дойдем до 2R, до пути длины 2R, но мы можем дойти, но там мы встретим, можем ребра где-нибудь 1.5R, например.
[03:21:27.220 --> 03:21:29.220]  Или там 1.2R.
[03:21:31.220 --> 03:21:33.220]  Так, ну-ка, ну-ка, ну-ка, ну-ка.
[03:21:34.220 --> 03:21:35.220]  Что мы еще можем сделать?
[03:21:35.220 --> 03:21:37.220]  Но хотелось бы, наверное.
[03:21:40.220 --> 03:21:42.220]  А сколько у нас путей может быть?
[03:21:45.220 --> 03:21:46.220]  Пойдем.
[03:21:47.220 --> 03:21:49.220]  У нас есть стандартный метод определения.
[03:21:50.220 --> 03:21:55.220]  Запустим из С, Д, Ф, С, правда, по слоистой сети и посмотрим, докуда можем дойти.
[03:21:56.220 --> 03:22:00.220]  Выйти из этого разреза мы можем не более, чем дойти.
[03:22:00.220 --> 03:22:03.220]  То есть по сумме там будет строго меньше, чем 2R на, допустим, модуль Е.
[03:22:04.220 --> 03:22:05.220]  Логично, да?
[03:22:09.220 --> 03:22:10.220]  Вот.
[03:22:11.220 --> 03:22:12.220]  Тогда.
[03:22:13.220 --> 03:22:14.220]  Так, ну что это означает?
[03:22:15.220 --> 03:22:16.220]  Так, насколько это нам помогает?
[03:22:17.220 --> 03:22:18.220]  Это означает, в принципе, следующее.
[03:22:19.220 --> 03:22:21.220]  Пока нам это не то, чтобы помогает.
[03:22:23.220 --> 03:22:35.220]  Ну, хочется сказать, что это означает, что в следующих DFS мы на самом деле протолкнем, получается, как и ранее было, не более, чем 2E путей.
[03:22:35.220 --> 03:22:37.220]  Получается, вроде, да?
[03:22:37.220 --> 03:22:48.220]  Это означает, что в следующих ДФС мы на самом деле протолкнем, получается, как и ранее было, не более чем 2e путей.
[03:22:50.220 --> 03:22:52.220]  Получается вроде, да?
[03:22:53.220 --> 03:22:55.220]  В следующих облегхазах сумасшедшие.
[03:22:58.220 --> 03:23:03.220]  То есть, мы можем, бывает, тоже внести под рассмотрение.
[03:23:07.220 --> 03:23:09.220]  В бане? А, нет, сейчас.
[03:23:10.220 --> 03:23:14.220]  Посмотрим, может, у нас этот развес наслаждается сети, да?
[03:23:22.220 --> 03:23:24.220]  А может, я перепутал, а?
[03:23:24.220 --> 03:23:27.220]  Может, все-таки другую интерпретацию обыштабирования нужна?
[03:23:37.220 --> 03:23:39.220]  Так, работало, да?
[03:23:44.220 --> 03:23:46.220]  А нет, очевидно.
[03:23:53.220 --> 03:23:57.220]  Нет, там, понимаете, какая ситуация? Хорошо.
[03:23:57.220 --> 03:23:59.220]  Давайте так.
[03:24:00.220 --> 03:24:01.220]  Да.
[03:24:01.220 --> 03:24:03.220]  Хорошо.
[03:24:03.220 --> 03:24:05.220]  Давайте сюда.
[03:24:05.220 --> 03:24:07.220]  Хорошо.
[03:24:07.220 --> 03:24:10.220]  R больше 0, R делить равно 2.
[03:24:10.220 --> 03:24:11.220]  Господи.
[03:24:11.220 --> 03:24:13.220]  Хорошо, давайте так, пожалуйста.
[03:24:16.220 --> 03:24:18.220]  Ну, тут я его убрал.
[03:24:22.220 --> 03:24:24.220]  А, это да.
[03:24:24.220 --> 03:24:26.220]  Да, хорошо.
[03:24:26.220 --> 03:24:28.220]  Так, ну давайте так.
[03:24:28.220 --> 03:24:29.220]  Теперь смотрите.
[03:24:29.220 --> 03:24:30.220]  Давайте так.
[03:24:30.220 --> 03:24:32.220]  Да, мы запустили 1.
[03:24:32.220 --> 03:24:36.220]  Точнее, запустим цена вот какой-нибудь R равно R.
[03:24:37.220 --> 03:24:43.220]  Значит, мы знаем, что улучшающих путей на этом 1 у нас будет не более чем 2e.
[03:24:43.220 --> 03:24:52.220]  Но за сколько у нас суммарно работают все блокирующие потоки здесь?
[03:24:52.220 --> 03:24:54.220]  Суммарно Wild True.
[03:24:54.220 --> 03:24:58.220]  Да, ну вот, суммарно Wild True, да.
[03:24:58.220 --> 03:25:00.220]  Улучшающих путей плюс...
[03:25:00.220 --> 03:25:03.220]  Да, ой, здесь тоже BFS от S.
[03:25:03.220 --> 03:25:05.220]  BFS нам Wild True не нужен.
[03:25:05.220 --> 03:25:07.220]  Нет, нужен. Почему?
[03:25:07.220 --> 03:25:10.220]  Да, Wild True не нужен, да.
[03:25:10.220 --> 03:25:12.220]  Да, так.
[03:25:12.220 --> 03:25:14.220]  Так, давайте так.
[03:25:14.220 --> 03:25:16.220]  Давайте так.
[03:25:17.220 --> 03:25:19.220]  Значит, запускаем.
[03:25:19.220 --> 03:25:20.220]  Значит...
[03:25:20.220 --> 03:25:22.220]  На месте форука можно добавить?
[03:25:22.220 --> 03:25:24.220]  Нет, нет, не нужно.
[03:25:24.220 --> 03:25:26.220]  А, нет, не нужно.
[03:25:26.220 --> 03:25:36.220]  Надо просто сказать, что в BFS мы тоже рассматриваем только ребра с пропускными способностями от R.
[03:25:36.220 --> 03:25:38.220]  Да, блокирующий поток.
[03:25:38.220 --> 03:25:41.220]  И блокирующий поток тоже это учитываем, естественно.
[03:25:41.220 --> 03:25:43.220]  Нужно, например...
[03:25:43.220 --> 03:25:45.220]  Wild BFS.
[03:25:45.220 --> 03:25:47.220]  Это там внутри.
[03:25:47.220 --> 03:25:49.220]  Просто мы ищем в итоге.
[03:25:49.220 --> 03:25:51.220]  Пишу Wild BFS.
[03:25:51.220 --> 03:25:53.220]  Нет, вообще так, Wild True.
[03:25:53.220 --> 03:25:55.220]  Нет, Wild True тоже самое.
[03:25:55.220 --> 03:25:57.220]  BFS пишем.
[03:25:57.220 --> 03:26:02.220]  Значит, если осталось плюс бесконечность, бракается Wild, но не for.
[03:26:02.220 --> 03:26:04.220]  Это не return, это брек.
[03:26:04.220 --> 03:26:06.220]  Не путать.
[03:26:06.220 --> 03:26:10.220]  То есть как бы из этого цикла мы не выбрасываемся.
[03:26:10.220 --> 03:26:12.220]  Зачем это?
[03:26:12.220 --> 03:26:14.220]  Потому что фаза...
[03:26:14.220 --> 03:26:17.220]  Потому что фаз может быть, но мы прям до упора ищем.
[03:26:19.220 --> 03:26:21.220]  Просто не нужно каждое аж BFS.
[03:26:21.220 --> 03:26:23.220]  Ну вот, то есть смотрите.
[03:26:23.220 --> 03:26:25.220]  Чего?
[03:26:25.220 --> 03:26:27.220]  Саша, скажи, что мы делаем.
[03:26:27.220 --> 03:26:28.220]  Вам нужен BFS.
[03:26:28.220 --> 03:26:30.220]  По-моему, там пишется таким образом.
[03:26:30.220 --> 03:26:31.220]  Мы делаем форик, да?
[03:26:31.220 --> 03:26:35.220]  Затем запускаем BFS на сети только на ребрах больших и равных R.
[03:26:35.220 --> 03:26:37.220]  Я просто покрою всю реализацию.
[03:26:37.220 --> 03:26:38.220]  Да.
[03:26:38.220 --> 03:26:40.220]  И там пишется таким образом.
[03:26:40.220 --> 03:26:44.220]  Если D от T стало больше в сравнении с плюс бесконечности,
[03:26:44.220 --> 03:26:46.220]  то...
[03:26:46.220 --> 03:26:48.220]  Мы ничего не делаем.
[03:26:48.220 --> 03:26:50.220]  На этой R это рация.
[03:26:50.220 --> 03:26:52.220]  Да, на этой R это рация.
[03:26:52.220 --> 03:26:54.220]  Мы ничего не делаем.
[03:26:54.220 --> 03:26:56.220]  А иначе делаем wild BFS.
[03:26:56.220 --> 03:26:58.220]  То есть мы ищем блокирующий поток.
[03:26:58.220 --> 03:27:00.220]  Да.
[03:27:00.220 --> 03:27:02.220]  И приходим...
[03:27:02.220 --> 03:27:05.220]  Нет, ну не один ищем блокирующий поток, а ищем...
[03:27:05.220 --> 03:27:07.220]  Да, нужно найти больше аналогиш потом.
[03:27:07.220 --> 03:27:09.220]  Знаешь, что я сделаю сейчас?
[03:27:09.220 --> 03:27:10.220]  Ну да.
[03:27:10.220 --> 03:27:12.220]  Это прям делаем честного Деница.
[03:27:12.220 --> 03:27:14.220]  То есть разница только в Денице.
[03:27:14.220 --> 03:27:16.220]  Когда рассматриваем ребра, проверяем не просто,
[03:27:16.220 --> 03:27:18.220]  что у него больше 0,
[03:27:18.220 --> 03:27:20.220]  а проверяем, что она больше либо равна R.
[03:27:20.220 --> 03:27:21.220]  Все.
[03:27:21.220 --> 03:27:23.220]  Это единственное, что мы в Денице меняем,
[03:27:23.220 --> 03:27:25.220]  а дальше Деницу пишут абсолютно честно.
[03:27:25.220 --> 03:27:27.220]  Понятно.
[03:27:27.220 --> 03:27:29.220]  Ну вот.
[03:27:29.220 --> 03:27:31.220]  Вот так предлагается.
[03:27:31.220 --> 03:27:33.220]  Буквально вот этот код предлагается.
[03:27:33.220 --> 03:27:35.220]  Чего?
[03:27:35.220 --> 03:27:37.220]  Саша именно это и предлагает.
[03:27:37.220 --> 03:27:39.220]  Я просто помню, писал ему,
[03:27:39.220 --> 03:27:41.220]  у него есть шаблон.
[03:27:41.220 --> 03:27:43.220]  Ну я не знаю.
[03:27:43.220 --> 03:27:45.220]  Предлагается именно это.
[03:27:45.220 --> 03:27:47.220]  То есть форм внешний.
[03:27:47.220 --> 03:27:49.220]  А тут тогда Дениц честный,
[03:27:49.220 --> 03:27:51.220]  тогда других вариантов нет.
[03:27:51.220 --> 03:27:53.220]  Ну и все.
[03:27:53.220 --> 03:27:55.220]  Теперь давайте смотреть,
[03:27:55.220 --> 03:27:57.220]  за сколько работает Дениц внутри.
[03:27:57.220 --> 03:27:59.220]  Смотрите, какая фишка.
[03:27:59.220 --> 03:28:01.220]  Я отражаю следующее,
[03:28:01.220 --> 03:28:03.220]  что Дениц тогда будет работать
[03:28:03.220 --> 03:28:05.220]  они будут работать за сколько?
[03:28:05.220 --> 03:28:07.220]  Я утверждаю, что они будут
[03:28:07.220 --> 03:28:09.220]  они будут работать
[03:28:09.220 --> 03:28:11.220]  суммарно
[03:28:11.220 --> 03:28:13.220]  по всем
[03:28:13.220 --> 03:28:15.220]  суммарно
[03:28:15.220 --> 03:28:17.220]  по всем BFS
[03:28:17.220 --> 03:28:19.220]  давайте вот так, суммарно по всем BFS
[03:28:19.220 --> 03:28:21.220]  да?
[03:28:21.220 --> 03:28:23.220]  Значит, модуль
[03:28:23.220 --> 03:28:25.220]  количество удаленных ребер
[03:28:25.220 --> 03:28:27.220]  плюс V
[03:28:27.220 --> 03:28:29.220]  на
[03:28:29.220 --> 03:28:31.220]  количество путей.
[03:28:31.220 --> 03:28:33.220]  Количество путей, по которым мы что-то
[03:28:33.220 --> 03:28:35.220]  пропихнули. Понятно, да?
[03:28:35.220 --> 03:28:37.220]  Ну теперь
[03:28:37.220 --> 03:28:39.220]  разложим это по суммам.
[03:28:39.220 --> 03:28:41.220]  Это работает BFS на суммы
[03:28:41.220 --> 03:28:43.220]  E удаленных, плюс
[03:28:43.220 --> 03:28:45.220]  модуль V на сумму по всем
[03:28:45.220 --> 03:28:47.220]  BFS количества путей.
[03:28:47.220 --> 03:28:49.220]  Но
[03:28:49.220 --> 03:28:51.220]  количество удаленных путей
[03:28:51.220 --> 03:28:53.220]  количество
[03:28:53.220 --> 03:28:55.220]  удаленных путей на каждом BFS их E
[03:29:01.220 --> 03:29:03.220]  Хотя нет, неправда.
[03:29:03.220 --> 03:29:05.220]  На каждом конкретном BFS
[03:29:05.220 --> 03:29:07.220]  удаленных ребер E
[03:29:09.220 --> 03:29:11.220]  А всего BFS у нас
[03:29:11.220 --> 03:29:13.220]  соответственно V.
[03:29:13.220 --> 03:29:15.220]  Поэтому пишем, это не более, чем
[03:29:15.220 --> 03:29:17.220]  модуль V.
[03:29:17.220 --> 03:29:19.220]  Количество BFS
[03:29:19.220 --> 03:29:21.220]  умножить на
[03:29:21.220 --> 03:29:23.220]  модуль E
[03:29:23.220 --> 03:29:25.220]  плюс модуль V
[03:29:25.220 --> 03:29:27.220]  на количество путей. Сколько у нас путей?
[03:29:27.220 --> 03:29:29.220]  Но смотрите, у нас осталось
[03:29:29.220 --> 03:29:31.220]  пихнуть не более, там меньше, чем
[03:29:31.220 --> 03:29:33.220]  два E.
[03:29:33.220 --> 03:29:35.220]  Да.
[03:29:35.220 --> 03:29:37.220]  И на каждом пути, который мы нашли
[03:29:37.220 --> 03:29:39.220]  пихаем хотя бы R.
[03:29:39.220 --> 03:29:41.220]  Значит тут получается
[03:29:41.220 --> 03:29:43.220]  спокойно домножаем на 2E.
[03:29:45.220 --> 03:29:47.220]  Но BFS у нас тоже,
[03:29:47.220 --> 03:29:49.220]  извините, V.
[03:29:49.220 --> 03:29:51.220]  Мораль.
[03:29:51.220 --> 03:29:53.220]  О от модуль V на модуль E.
[03:29:55.220 --> 03:29:57.220]  Ну
[03:29:57.220 --> 03:29:59.220]  по традиции
[03:29:59.220 --> 03:30:01.220]  просто в концепции блокирующих потоков
[03:30:01.220 --> 03:30:03.220]  мы знаем, что их
[03:30:03.220 --> 03:30:05.220]  потому что расстояние там не уменьшается.
[03:30:05.220 --> 03:30:07.220]  Ладно, здесь будет отдельная песня, может быть
[03:30:07.220 --> 03:30:09.220]  чуть-чуть придется модифицировать доказательства, чтобы
[03:30:09.220 --> 03:30:11.220]  там убедиться, что несмотря на то, что мы тут
[03:30:11.220 --> 03:30:13.220]  ребра рассматриваем не все, а только такие,
[03:30:13.220 --> 03:30:15.220]  но когда некоторые иногда исчезают,
[03:30:15.220 --> 03:30:17.220]  там бывают обратные ребра,
[03:30:17.220 --> 03:30:19.220]  то профессиональная способность меньше, но потом они
[03:30:19.220 --> 03:30:21.220]  неожиданно появляются.
[03:30:21.220 --> 03:30:23.220]  Возможно чуть-чуть придется
[03:30:23.220 --> 03:30:25.220]  по шаманитам доказательствам, но суть та же.
[03:30:25.220 --> 03:30:27.220]  Расстояние до вершины
[03:30:27.220 --> 03:30:29.220]  уменьшаться от этого не начнет.
[03:30:31.220 --> 03:30:33.220]  Вот В.
[03:30:33.220 --> 03:30:35.220]  Повторил.
[03:30:43.220 --> 03:30:45.220]  Дениц как работает?
[03:30:45.220 --> 03:30:47.220]  Каждый DFS в Денице
[03:30:47.220 --> 03:30:49.220]  работает так.
[03:30:49.220 --> 03:30:51.220]  Он в итоге
[03:30:51.220 --> 03:30:53.220]  находит путь, а до этого какие-то ребра удаляет.
[03:30:53.220 --> 03:30:55.220]  Это все, что он делает.
[03:30:57.220 --> 03:30:59.220]  Поэтому мы отдельно суммируем,
[03:30:59.220 --> 03:31:01.220]  что DFS удаляют и какие пути нашли.
[03:31:01.220 --> 03:31:03.220]  Но каждый путь
[03:31:03.220 --> 03:31:05.220]  обрабатывается за В.
[03:31:09.220 --> 03:31:11.220]  При одном BFS
[03:31:11.220 --> 03:31:13.220]  удаляем ребер, понятно сколько их.
[03:31:15.220 --> 03:31:17.220]  А теперь нас интересует, а сколько
[03:31:17.220 --> 03:31:19.220]  путей за все BFS мы вообще нашли?
[03:31:19.220 --> 03:31:21.220]  А теперь вспоминаем, что мы живем
[03:31:21.220 --> 03:31:23.220]  в этом вот форе.
[03:31:25.220 --> 03:31:27.220]  Так как мы больше ничего не смогли сделать
[03:31:27.220 --> 03:31:29.220]  на предыдущей итерации, значит
[03:31:29.220 --> 03:31:31.220]  путей длины 2R не существует.
[03:31:35.220 --> 03:31:37.220]  Это означает, что минимальный разрез
[03:31:37.220 --> 03:31:39.220]  меньше, чем 2R по той же логике.
[03:31:41.220 --> 03:31:43.220]  Мы на следующей итерации
[03:31:43.220 --> 03:31:45.220]  пихнем не более, чем 2R путей.
[03:31:51.220 --> 03:31:53.220]  Кошмар, уже не первый раз в подряд
[03:31:53.220 --> 03:31:55.220]  две интерпретации этого суммы
[03:31:55.220 --> 03:31:57.220]  я второй раз не угадываю.
[03:31:59.220 --> 03:32:01.220]  Как всегда, мораль, помните доказательства.
[03:32:01.220 --> 03:32:03.220]  Где сойдется, то и пишите.
[03:32:05.220 --> 03:32:07.220]  В данном случае достаточно
[03:32:07.220 --> 03:32:09.220]  просто сходит.
[03:32:11.220 --> 03:32:13.220]  Так что можете написать VE лог C. Если не заходит,
[03:32:13.220 --> 03:32:15.220]  придется писать линкад.
[03:32:17.220 --> 03:32:19.220]  Но лог V это меньше,
[03:32:19.220 --> 03:32:21.220]  чем лог C, правда?
[03:32:23.220 --> 03:32:25.220]  Ну, конечно. Ну давайте подумаем.
[03:32:25.220 --> 03:32:27.220]  Допустим, у вас V обычно это сколько?
[03:32:27.220 --> 03:32:29.220]  100, а C это обычно там
[03:32:29.220 --> 03:32:31.220]  10-9.
[03:32:31.220 --> 03:32:33.220]  Логарифм 10-9
[03:32:33.220 --> 03:32:35.220]  это 30, логарифм
[03:32:35.220 --> 03:32:37.220]  100 это
[03:32:37.220 --> 03:32:39.220]  7. 30 подлита 7.
[03:32:39.220 --> 03:32:41.220]  Оптимизация в 4 раза.
[03:32:43.220 --> 03:32:45.220]  Очень хочется верить, что мы не стараемся написать
[03:32:45.220 --> 03:32:47.220]  даже масштабирование.
[03:32:49.220 --> 03:32:51.220]  А, ну да.
[03:32:55.220 --> 03:32:57.220]  Ну там от E зависит,
[03:32:57.220 --> 03:32:59.220]  на самом деле.
[03:32:59.220 --> 03:33:01.220]  Правильно замечено, что
[03:33:01.220 --> 03:33:03.220]  если у нас V100, то в общем-то мы садимся
[03:33:03.220 --> 03:33:05.220]  и пишем любой кубический алгоритм и не паримся.
[03:33:05.220 --> 03:33:07.220]  Поэтому да, актуально
[03:33:07.220 --> 03:33:09.220]  становится, если у нас V2000
[03:33:09.220 --> 03:33:11.220]  и E2000.
[03:33:11.220 --> 03:33:13.220]  Даже не 5.
[03:33:15.220 --> 03:33:17.220]  И тогда, правда,
[03:33:17.220 --> 03:33:19.220]  если C у вас 10-9, то
[03:33:23.220 --> 03:33:25.220]  за лето пишется за...
[03:33:25.220 --> 03:33:27.220]  Нет, за лето пишется, за
[03:33:27.220 --> 03:33:29.220]  осень упихивается.
[03:33:33.220 --> 03:33:35.220]  Ну окей.
[03:33:35.220 --> 03:33:37.220]  Да, алгоритм конечно там...
[03:33:37.220 --> 03:33:39.220]  Это делает алгоритм динется с линкатом
[03:33:39.220 --> 03:33:41.220]  сильно теоретическим.
[03:33:41.220 --> 03:33:43.220]  Да.
[03:33:43.220 --> 03:33:45.220]  Так.
[03:33:45.220 --> 03:33:47.220]  Ну вот, так что да.
[03:33:47.220 --> 03:33:49.220]  Так что вот получается.
[03:33:49.220 --> 03:33:51.220]  Неплохо.
[03:33:51.220 --> 03:33:53.220]  Давай.
[03:33:57.220 --> 03:33:59.220]  Да.
[03:33:59.220 --> 03:34:01.220]  Правда, что мы можем пускать потоки,
[03:34:01.220 --> 03:34:03.220]  вообще, вот мы в R трассы,
[03:34:03.220 --> 03:34:05.220]  мы можем пускать потоки
[03:34:05.220 --> 03:34:07.220]  только кратные R.
[03:34:07.220 --> 03:34:09.220]  Просто вообще, только кратные R.
[03:34:09.220 --> 03:34:11.220]  То есть, если он даже больше...
[03:34:11.220 --> 03:34:13.220]  Даже если у нас больше, то пускай кратные R.
[03:34:13.220 --> 03:34:15.220]  Да, пожалуйста.
[03:34:15.220 --> 03:34:17.220]  Ну да, ровно та же причина.
[03:34:17.220 --> 03:34:19.220]  То есть как бы...
[03:34:19.220 --> 03:34:21.220]  То есть как бы...
[03:34:21.220 --> 03:34:23.220]  Ну да, вы знаете, что пути
[03:34:23.220 --> 03:34:25.220]  длины 2R у вас не найдется.
[03:34:25.220 --> 03:34:27.220]  Вот.
[03:34:27.220 --> 03:34:29.220]  Поэтому разрез вот такой,
[03:34:29.220 --> 03:34:31.220]  вы ищете, на каждом пути
[03:34:31.220 --> 03:34:33.220]  просто убиваете ровно R.
[03:34:33.220 --> 03:34:35.220]  Поэтому все оценки остаются.
[03:34:35.220 --> 03:34:37.220]  Я...
[03:34:37.220 --> 03:34:39.220]  Ладно, нет.
[03:34:39.220 --> 03:34:41.220]  Я просто хотел сказать,
[03:34:41.220 --> 03:34:43.220]  что раз у нас остались...
[03:34:43.220 --> 03:34:45.220]  Мы...
[03:34:45.220 --> 03:34:47.220]  Мы выпустили поток
[03:34:47.220 --> 03:34:49.220]  кратные R.
[03:34:49.220 --> 03:34:51.220]  Правда, если
[03:34:51.220 --> 03:34:53.220]  ребро
[03:34:53.220 --> 03:34:55.220]  веса больше,
[03:34:55.220 --> 03:34:57.220]  чем условно R,
[03:34:57.220 --> 03:34:59.220]  по ребру можно пустить еще поток
[03:34:59.220 --> 03:35:01.220]  какой-то большой, но мы не пустили,
[03:35:01.220 --> 03:35:03.220]  то можно, в самом деле, ограничить
[03:35:03.220 --> 03:35:05.220]  ее пропускной способности,
[03:35:05.220 --> 03:35:07.220]  потому что мы уже не пустим поток.
[03:35:07.220 --> 03:35:09.220]  Мы пустим, вполне себе.
[03:35:09.220 --> 03:35:11.220]  Вполне вероятно, что вы найдете еще один путь
[03:35:11.220 --> 03:35:13.220]  пропускной способности R, который еще раз пройдет
[03:35:13.220 --> 03:35:15.220]  по этому же большому ребру.
[03:35:15.220 --> 03:35:17.220]  Да, там может быть
[03:35:17.220 --> 03:35:19.220]  пропускной способности R. То есть как бы
[03:35:19.220 --> 03:35:21.220]  и 2R, и 3R, и так. То есть у нас гарантии
[03:35:21.220 --> 03:35:23.220]  только что мы не найдем путь, прям целый
[03:35:23.220 --> 03:35:25.220]  путь на 2R. Ну вот.
[03:35:25.220 --> 03:35:27.220]  Но конкретные ребра могут быть и R,
[03:35:27.220 --> 03:35:29.220]  и 2R, и там миллиард.
[03:35:29.220 --> 03:35:31.220]  Пожалуйста.
[03:35:31.220 --> 03:35:33.220]  Ну, например, да.
[03:35:33.220 --> 03:35:35.220]  Так что вот такая радость.
[03:35:37.220 --> 03:35:39.220]  Так что да. Ой.
[03:35:39.220 --> 03:35:41.220]  Слушайте, красота. Хорошую дырочку.
[03:35:41.220 --> 03:35:43.220]  Ну ладно. В следующий раз нам предстоит
[03:35:47.220 --> 03:35:49.220]  масштабирование.
[03:35:49.220 --> 03:35:51.220]  А чем может...
[03:35:51.220 --> 03:35:53.220]  А я вот не знаю, чем может
[03:35:53.220 --> 03:35:55.220]  помочь масштабирование.
[03:35:55.220 --> 03:35:57.220]  Да лучше тогда
[03:35:57.220 --> 03:35:59.220]  уже вот этот предложенный алгоритм.
[03:35:59.220 --> 03:36:01.220]  Не прислал еще?
[03:36:01.220 --> 03:36:03.220]  Вот давай, да.
[03:36:03.220 --> 03:36:05.220]  Вот эту статью и пришли.
[03:36:05.220 --> 03:36:07.220]  Про корень изъеда. Это интересно.
[03:36:07.220 --> 03:36:09.220]  Ну а что, да.
[03:36:09.220 --> 03:36:11.220]  Ну а что, изучим. Будет у нас
[03:36:11.220 --> 03:36:13.220]  такая крутая новинка.
[03:36:13.220 --> 03:36:15.220]  Все ваши предшественники умеют поток только
[03:36:15.220 --> 03:36:17.220]  за купы искать. Мы пойдем дальше.
[03:36:21.220 --> 03:36:23.220]  Нет, они так не...
[03:36:23.220 --> 03:36:25.220]  Извините, у нас ни у кого не было алгоритма,
[03:36:25.220 --> 03:36:27.220]  что на каждом шаге тупо находим вершину
[03:36:27.220 --> 03:36:29.220]  с максимальной высотой
[03:36:29.220 --> 03:36:31.220]  и пихаем из нее.
[03:36:31.220 --> 03:36:33.220]  Вот там
[03:36:33.220 --> 03:36:35.220]  алгоритм такой. Давайте тупо так делать.
[03:36:35.220 --> 03:36:37.220]  Оказывается, это работает за V квадрат E.
[03:36:51.220 --> 03:36:53.220]  Ой, ну как сказать...
[03:36:53.220 --> 03:36:55.220]  С точки зрения практики, да.
[03:36:55.220 --> 03:36:57.220]  Но я тебе больше скажу. На практике
[03:36:57.220 --> 03:36:59.220]  в 99% случаев
[03:36:59.220 --> 03:37:01.220]  ты вообще даже не будешь знать, что такое Push Relay
[03:37:01.220 --> 03:37:03.220]  и будешь везде писать Диница, и он будет всегда работать.
[03:37:03.220 --> 03:37:05.220]  Там почти наверно. Это другое вопрос.
[03:37:05.220 --> 03:37:07.220]  Да.
[03:37:07.220 --> 03:37:09.220]  Кубичный код. Это находит статью,
[03:37:09.220 --> 03:37:11.220]  доказывает, что он работает, на самом деле, за квадратом на корень.
[03:37:11.220 --> 03:37:13.220]  Ага, посылаешь...
[03:37:13.220 --> 03:37:15.220]  Да, посылаешь об этом
[03:37:15.220 --> 03:37:17.220]  клад жюри и
[03:37:17.220 --> 03:37:19.220]  называется ноды, гордо задираешь нос и уходишь
[03:37:19.220 --> 03:37:21.220]  с контеста. Да, конечно.
[03:37:21.220 --> 03:37:23.220]  Конечно, жюри
[03:37:23.220 --> 03:37:25.220]  разводят руками, потому что там было решение
[03:37:25.220 --> 03:37:27.220]  за линию простой жадности.
[03:37:27.220 --> 03:37:29.220]  Или как
[03:37:29.220 --> 03:37:31.220]  в тачешке бывает. Вы изобретаете
[03:37:31.220 --> 03:37:33.220]  решение, которое работает за
[03:37:33.220 --> 03:37:35.220]  сумму на 2 в степени количества
[03:37:35.220 --> 03:37:37.220]  различных простых делителей числа N.
[03:37:37.220 --> 03:37:39.220]  Значит, говорите, что это
[03:37:39.220 --> 03:37:41.220]  должно работать, потому что сумма алгоритма работает
[03:37:41.220 --> 03:37:43.220]  за 136 миллионов.
[03:37:43.220 --> 03:37:45.220]  Значит, гордо
[03:37:45.220 --> 03:37:47.220]  получаете ТЛ,
[03:37:47.220 --> 03:37:49.220]  гордо уходите. Жюри разводят руками,
[03:37:49.220 --> 03:37:51.220]  потому что у жюри было нормальное решение
[03:37:51.220 --> 03:37:53.220]  в тачешке.
[03:37:53.220 --> 03:37:55.220]  Ну, это вот
[03:37:55.220 --> 03:37:57.220]  кого-то вчера, да, кого-то позавчера
[03:37:57.220 --> 03:37:59.220]  не было, просто такой прикол случился.
[03:37:59.220 --> 03:38:01.220]  Ой,
[03:38:01.220 --> 03:38:03.220]  хотя ладно, можно будет вам этот контест тоже
[03:38:03.220 --> 03:38:05.220]  дать. Интересно, со сколько
[03:38:05.220 --> 03:38:07.220]  вы справитесь.
[03:38:07.220 --> 03:38:09.220]  Так, ладно, есть ли тут какие-то вопросы?
[03:38:09.220 --> 03:38:11.220]  Еще.
[03:38:11.220 --> 03:38:13.220]  Так,
[03:38:13.220 --> 03:38:15.220]  ладно, четко.
[03:38:15.220 --> 03:38:17.220]  Да ничего.
[03:38:17.220 --> 03:38:19.220]  Ну, просто вот за эту
[03:38:19.220 --> 03:38:21.220]  четко вы можете добиться того, чтобы у вас там
[03:38:21.220 --> 03:38:23.220]  осталось, чтобы у вас там
[03:38:23.220 --> 03:38:25.220]  осталось все пути,
[03:38:25.220 --> 03:38:27.220]  которые вы могли пихать, меньше единицы.
[03:38:27.220 --> 03:38:29.220]  Но, правда, оставшееся,
[03:38:29.220 --> 03:38:31.220]  останется вам пустить где-то там
[03:38:31.220 --> 03:38:33.220]  2E и так далее.
[03:38:33.220 --> 03:38:35.220]  Мы же можем и дальше уменьшать.
[03:38:35.220 --> 03:38:37.220]  Мы, кажется, можем все еще за лофф С
[03:38:37.220 --> 03:38:39.220]  сделать так, чтобы у нас,
[03:38:39.220 --> 03:38:41.220]  за лофф С умножить на E,
[03:38:41.220 --> 03:38:43.220]  чтобы у нас поток был не больше, чем
[03:38:43.220 --> 03:38:45.220]  1,9 на С.
[03:38:45.220 --> 03:38:47.220]  Ну,
[03:38:47.220 --> 03:38:49.220]  типа того, да.
[03:38:49.220 --> 03:38:51.220]  Ну, разве что так? А,
[03:38:51.220 --> 03:38:53.220]  нет, погодите, ой, на эту тему
[03:38:53.220 --> 03:38:55.220]  я, господи, еще одна важная вещь,
[03:38:55.220 --> 03:38:57.220]  которую я забыл сказать. Ой,
[03:38:57.220 --> 03:38:59.220]  про просочетание.
[03:38:59.220 --> 03:39:01.220]  Ладно, если уже зашла
[03:39:01.220 --> 03:39:03.220]  речь о том, как
[03:39:03.220 --> 03:39:05.220]  найти не весь поток, а почти весь,
[03:39:05.220 --> 03:39:07.220]  то есть вообще крутая задача.
[03:39:11.220 --> 03:39:13.220]  Чего?
[03:39:13.220 --> 03:39:15.220]  Нет, просто ситуация такая. Допустим, вы хотите
[03:39:15.220 --> 03:39:17.220]  найти, вот даже тут такая задача.
[03:39:17.220 --> 03:39:19.220]  Дан двудольный граф, хочется найти просочетание.
[03:39:23.220 --> 03:39:25.220]  Нет, погодите. Нет, там
[03:39:25.220 --> 03:39:27.220]  другая фишка. Ничего не надо думать, просто
[03:39:27.220 --> 03:39:29.220]  ситуация такая.
[03:39:29.220 --> 03:39:31.220]  Ну, там обнаружил,
[03:39:31.220 --> 03:39:33.220]  просто весело. Ну, предположим, что
[03:39:33.220 --> 03:39:35.220]  просто так, вы даже, как бы, дадан вам
[03:39:35.220 --> 03:39:37.220]  двудольный граф, и вам говорят, так, значит,
[03:39:37.220 --> 03:39:39.220]  миллион вершин, два миллиона рыб.
[03:39:39.220 --> 03:39:41.220]  Но при этом
[03:39:41.220 --> 03:39:43.220]  вам, при этом,
[03:39:43.220 --> 03:39:45.220]  ладно, так и быть, мы зачтем вам ответ,
[03:39:45.220 --> 03:39:47.220]  если ответ это
[03:39:47.220 --> 03:39:49.220]  95 процентов от максимального.
[03:39:51.220 --> 03:39:53.220]  Да, но теорем
[03:39:53.220 --> 03:39:55.220]  об этом я, по-моему, не успел рассказать, поэтому
[03:39:55.220 --> 03:39:57.220]  надо сейчас быстро.
[03:39:57.220 --> 03:39:59.220]  Условие рассказывал, а решение не рассказывал.
[03:40:01.220 --> 03:40:03.220]  А решение, ну вот. Ну, решение достаточно
[03:40:03.220 --> 03:40:05.220]  тупое, теперь вот можно его рассказать.
[03:40:05.220 --> 03:40:07.220]  Сделаем 19
[03:40:07.220 --> 03:40:09.220]  итераций единица. Все.
[03:40:09.220 --> 03:40:11.220]  Да.
[03:40:11.220 --> 03:40:13.220]  Ну, правда, нет. Да, правда,
[03:40:13.220 --> 03:40:15.220]  это тоже будет тейлиться, вам придется это пихать
[03:40:15.220 --> 03:40:17.220]  всеми правдами и неправдами.
[03:40:17.220 --> 03:40:19.220]  Вот. Потому что он там
[03:40:19.220 --> 03:40:21.220]  закрутил, конечно, жестко.
[03:40:21.220 --> 03:40:23.220]  Но, тем не менее, утверждение, если вы сделаете
[03:40:23.220 --> 03:40:25.220]  19 итераций единица, то
[03:40:25.220 --> 03:40:27.220]  оказывается, вы найдете 95 процентов.
[03:40:27.220 --> 03:40:29.220]  Собственно, действительно.
[03:40:29.220 --> 03:40:31.220]  То есть, про сочетание размера не менее,
[03:40:31.220 --> 03:40:33.220]  чем 95 процентов от максимального.
[03:40:35.220 --> 03:40:37.220]  Мы даже обобщим это утверждение.
[03:40:37.220 --> 03:40:39.220]  Мы рассмотрим ситуацию, когда мы сделали
[03:40:39.220 --> 03:40:41.220]  к итерации единица при поиске
[03:40:41.220 --> 03:40:43.220]  про сочетание.
[03:40:43.220 --> 03:40:45.220]  Смотрите.
[03:40:45.220 --> 03:40:47.220]  Что же делать?
[03:40:47.220 --> 03:40:49.220]  Значит, третье такое. Мы сделали
[03:40:49.220 --> 03:40:51.220]  к. Что произошло после
[03:40:51.220 --> 03:40:53.220]  к итерации единица?
[03:40:53.220 --> 03:40:55.220]  Расстояние от
[03:40:55.220 --> 03:40:57.220]  СДТ стало больше, чем
[03:40:57.220 --> 03:40:59.220]  сколько?
[03:41:01.220 --> 03:41:03.220]  Ну, вот.
[03:41:03.220 --> 03:41:05.220]  А точнее?
[03:41:07.220 --> 03:41:09.220]  Чем?
[03:41:11.220 --> 03:41:13.220]  Три?
[03:41:13.220 --> 03:41:15.220]  Да, было три.
[03:41:15.220 --> 03:41:17.220]  Потом хотя бы пять, потом хотя бы семь и так далее.
[03:41:17.220 --> 03:41:19.220]  Так что, в принципе,
[03:41:19.220 --> 03:41:21.220]  можно заметить, что там расстояние все стали
[03:41:21.220 --> 03:41:23.220]  2k плюс три. Что это означает?
[03:41:23.220 --> 03:41:25.220]  Рассмотрим в остаточной сети
[03:41:25.220 --> 03:41:27.220]  максимальный поток.
[03:41:27.220 --> 03:41:29.220]  Этот поток будет состоять из
[03:41:29.220 --> 03:41:31.220]  вот таких вот удлиняющих цепей.
[03:41:31.220 --> 03:41:33.220]  Вот так вот, да?
[03:41:33.220 --> 03:41:35.220]  И тут еще давайте нарисуем.
[03:41:35.220 --> 03:41:37.220]  Но заметим, что
[03:41:37.220 --> 03:41:39.220]  в каждой из них вот этих вот
[03:41:39.220 --> 03:41:41.220]  ребер хотя бы 2k
[03:41:41.220 --> 03:41:43.220]  плюс один.
[03:41:43.220 --> 03:41:45.220]  Но как устроена
[03:41:45.220 --> 03:41:47.220]  удлиняющая цепь?
[03:41:47.220 --> 03:41:49.220]  Оно устроено так, что вот это вот
[03:41:49.220 --> 03:41:51.220]  ребра, это ребра, которые у вас
[03:41:51.220 --> 03:41:53.220]  при сочетании уже ранее найдены,
[03:41:53.220 --> 03:41:55.220]  и каждая удлиняющая
[03:41:55.220 --> 03:41:57.220]  цепь как бы увеличивает
[03:41:57.220 --> 03:41:59.220]  цепь.
[03:41:59.220 --> 03:42:01.220]  Каждая удлиняющая цепь как бы увеличит вам
[03:42:01.220 --> 03:42:03.220]  про сочетания на один.
[03:42:03.220 --> 03:42:05.220]  Но, смотрите, так как мы взяли
[03:42:05.220 --> 03:42:07.220]  просто максимальный поток целиком,
[03:42:07.220 --> 03:42:09.220]  то эти все пути как бы по ребрам не пересекаются.
[03:42:11.220 --> 03:42:13.220]  Логично, да?
[03:42:13.220 --> 03:42:15.220]  Вот.
[03:42:15.220 --> 03:42:17.220]  Да и по вершинам не пересекаются. Впрочем, это неважно.
[03:42:17.220 --> 03:42:19.220]  А важно другое.
[03:42:19.220 --> 03:42:21.220]  Что для того, чтобы найти,
[03:42:21.220 --> 03:42:23.220]  чтобы увеличить тогда
[03:42:23.220 --> 03:42:25.220]  по каждому пути про сочетания
[03:42:25.220 --> 03:42:27.220]  на один, вам нужно найти
[03:42:27.220 --> 03:42:29.220]  и взять для этого целых
[03:42:29.220 --> 03:42:31.220]  коребр, которые вы нашли раньше.
[03:42:33.220 --> 03:42:35.220]  Понимаете, да?
[03:42:35.220 --> 03:42:37.220]  То есть вывод неутешительный.
[03:42:37.220 --> 03:42:39.220]  Точнее, наоборот, утешительный.
[03:42:39.220 --> 03:42:41.220]  Величина оставшегося
[03:42:41.220 --> 03:42:43.220]  потока
[03:42:45.220 --> 03:42:47.220]  не превосходит
[03:42:49.220 --> 03:42:51.220]  величины уже найденного
[03:42:53.220 --> 03:42:55.220]  делить на к.
[03:42:57.220 --> 03:42:59.220]  То есть вы нашли
[03:42:59.220 --> 03:43:01.220]  сколько-то, а осталось найти
[03:43:01.220 --> 03:43:03.220]  вк раз меньше.
[03:43:03.220 --> 03:43:05.220]  Но!
[03:43:05.220 --> 03:43:07.220]  Тогда из этого следует, что
[03:43:07.220 --> 03:43:09.220]  модуль f это что такое?
[03:43:09.220 --> 03:43:11.220]  Это в точности модуль f найденного
[03:43:11.220 --> 03:43:13.220]  плюс модуль f
[03:43:13.220 --> 03:43:15.220]  сколько там осталось.
[03:43:15.220 --> 03:43:17.220]  Да?
[03:43:17.220 --> 03:43:19.220]  И это...
[03:43:19.220 --> 03:43:21.220]  Но, как мы уже поняли,
[03:43:21.220 --> 03:43:23.220]  соответственно,
[03:43:23.220 --> 03:43:25.220]  тогда
[03:43:25.220 --> 03:43:27.220]  оставшиеся мы оцениваем,
[03:43:27.220 --> 03:43:29.220]  как f найденное на k,
[03:43:29.220 --> 03:43:31.220]  и получается тут модуль f
[03:43:31.220 --> 03:43:33.220]  найденного умножить
[03:43:33.220 --> 03:43:35.220]  на сколько?
[03:43:35.220 --> 03:43:37.220]  На k плюс 1 делить на k.
[03:43:45.220 --> 03:43:47.220]  Откуда?
[03:43:51.220 --> 03:43:53.220]  Да, и там было что-то похожее,
[03:43:53.220 --> 03:43:55.220]  но, правда, немножко из других
[03:43:55.220 --> 03:43:57.220]  рассуждений. А, ну хотя примерно
[03:43:57.220 --> 03:43:59.220]  такие же, да?
[03:44:01.220 --> 03:44:03.220]  Ну, там такое, да.
[03:44:05.220 --> 03:44:07.220]  Да, но тут как бы
[03:44:07.220 --> 03:44:09.220]  теорема по-другому формулируется.
[03:44:09.220 --> 03:44:11.220]  Пусть мы сделали k-итерации,
[03:44:11.220 --> 03:44:13.220]  тогда мы нашли уже что-то.
[03:44:13.220 --> 03:44:15.220]  Получается, выводим мы следующее,
[03:44:15.220 --> 03:44:17.220]  что это f найденное
[03:44:17.220 --> 03:44:19.220]  отсюда получается больше
[03:44:19.220 --> 03:44:21.220]  либо равно, чем k поделить
[03:44:21.220 --> 03:44:23.220]  k плюс 1 на модуле f.
[03:44:25.220 --> 03:44:27.220]  То есть это означает, то есть это локальное такое,
[03:44:27.220 --> 03:44:29.220]  то есть мы сделали k-итерации и уже нашли
[03:44:29.220 --> 03:44:31.220]  вот столько.
[03:44:31.220 --> 03:44:33.220]  Да, это мы будем
[03:44:33.220 --> 03:44:35.220]  это называть в кавычках теорема
[03:44:35.220 --> 03:44:37.220]  Данилюка.
[03:44:39.220 --> 03:44:41.220]  Вот.
[03:44:41.220 --> 03:44:43.220]  Ну, как бы
[03:44:43.220 --> 03:44:45.220]  утверждение доказано
[03:44:45.220 --> 03:44:47.220]  Алексеем Данилюком, собственно,
[03:44:47.220 --> 03:44:49.220]  в своей дипломной работе.
[03:44:51.220 --> 03:44:53.220]  Ну, да.
[03:44:53.220 --> 03:44:55.220]  Ну, просто каждой единичке
[03:44:55.220 --> 03:44:57.220]  вот этого потока в декомпозиции
[03:44:57.220 --> 03:44:59.220]  оставшегося, ему соответствует
[03:44:59.220 --> 03:45:01.220]  k-реберфпросочетание,
[03:45:01.220 --> 03:45:03.220]  то есть k-реберфпросочетание, то есть k-единец потока
[03:45:03.220 --> 03:45:05.220]  уже найденного.
[03:45:07.220 --> 03:45:09.220]  Потому что, ну, длина такая.
[03:45:09.220 --> 03:45:11.220]  И пути тут так устроены.
[03:45:11.220 --> 03:45:13.220]  Да.
[03:45:13.220 --> 03:45:15.220]  Вот.
[03:45:15.220 --> 03:45:17.220]  Вот такое вот
[03:45:17.220 --> 03:45:19.220]  неожиданное, заметим, шо.
[03:45:19.220 --> 03:45:21.220]  Это жесть.
[03:45:23.220 --> 03:45:25.220]  Да.
[03:45:25.220 --> 03:45:27.220]  Ну, то есть это такое просто красивое,
[03:45:27.220 --> 03:45:29.220]  заметим, шо.
[03:45:29.220 --> 03:45:31.220]  То есть, оказывается, да, то есть
[03:45:31.220 --> 03:45:33.220]  оказывается, там
[03:45:33.220 --> 03:45:35.220]  Денис достаточно быстро найдет почти
[03:45:35.220 --> 03:45:37.220]  все, что вам надо.
[03:45:39.220 --> 03:45:41.220]  Вот.
[03:45:43.220 --> 03:45:45.220]  Ну, там
[03:45:45.220 --> 03:45:47.220]  о, господи,
[03:45:47.220 --> 03:45:49.220]  кошмар.
[03:45:51.220 --> 03:45:53.220]  Вот.
[03:45:57.220 --> 03:45:59.220]  Так.
[03:45:59.220 --> 03:46:01.220]  Так, ладно, так, есть ли еще что-то,
[03:46:01.220 --> 03:46:03.220]  я шо сюда могу за быстро?
[03:46:17.220 --> 03:46:19.220]  Ну, может.
[03:46:19.220 --> 03:46:21.220]  А что шафлит? БФС возрадовался,
[03:46:21.220 --> 03:46:23.220]  что тут тебе шафлит?
[03:46:23.220 --> 03:46:25.220]  А, или ты хочешь прям ДФС
[03:46:25.220 --> 03:46:27.220]  и найти за это, ну, не знаю.
[03:46:27.220 --> 03:46:29.220]  Скажем так, там проблема в том,
[03:46:29.220 --> 03:46:31.220]  что, по-моему, как бы на самом Петрозаводке
[03:46:31.220 --> 03:46:33.220]  даже дохи никто не сдал.
[03:46:33.220 --> 03:46:35.220]  Хотя пихать пытались многие.
[03:46:35.220 --> 03:46:37.220]  Ну, я не знаю, и может быть многие из них на самом деле
[03:46:37.220 --> 03:46:39.220]  до этого додумались.
[03:46:39.220 --> 03:46:41.220]  Вот.
[03:46:41.220 --> 03:46:43.220]  Ну, то есть, в принципе, если поставить себе цель,
[03:46:43.220 --> 03:46:45.220]  если вы себе поставите цель подумать,
[03:46:45.220 --> 03:46:47.220]  то это, наверное, вот это вот там
[03:46:47.220 --> 03:46:49.220]  непридумываемым не выглядит.
[03:46:49.220 --> 03:46:51.220]  Вот. Но другой вопрос,
[03:46:51.220 --> 03:46:53.220]  что он там, конечно, прям совсем закрутил,
[03:46:53.220 --> 03:46:55.220]  то есть там совсем какие-то там мощные тесты
[03:46:55.220 --> 03:46:57.220]  там, видимо, написал, там какие-то, ну,
[03:46:57.220 --> 03:46:59.220]  ТЛ там две секунды был, но тем не менее там
[03:46:59.220 --> 03:47:01.220]  это не...
[03:47:01.220 --> 03:47:03.220]  За Е корней из В, да.
[03:47:03.220 --> 03:47:05.220]  Ну, естественно, понятно, надо было,
[03:47:05.220 --> 03:47:07.220]  чтобы просто Деницкий зашел за корней
[03:47:07.220 --> 03:47:09.220]  за Е корней из В, но
[03:47:09.220 --> 03:47:11.220]  как бы это вот успешно добился.
[03:47:11.220 --> 03:47:13.220]  Вот.
[03:47:13.220 --> 03:47:15.220]  Так же, соответственно.
[03:47:15.220 --> 03:47:17.220]  Нет, это при этом в том, что там надо было
[03:47:17.220 --> 03:47:19.220]  упихивать, потому что как бы
[03:47:19.220 --> 03:47:21.220]  сильно логичные жаги, которые захочет
[03:47:21.220 --> 03:47:23.220]  писать любой липиадник. Давайте напишем
[03:47:23.220 --> 03:47:25.220]  теница и будем пихать туда итерации не
[03:47:25.220 --> 03:47:27.220]  за корень из В, а по
[03:47:27.220 --> 03:47:29.220]  кавтейлю, по кавтейле умещается.
[03:47:29.220 --> 03:47:31.220]  Почему это не сходится?
[03:47:31.220 --> 03:47:33.220]  Ну, потому что, видимо, это
[03:47:33.220 --> 03:47:35.220]  Данилюк очень постарался.
[03:47:35.220 --> 03:47:37.220]  То есть он человек постарался, там
[03:47:37.220 --> 03:47:39.220]  ужал константу там хорошо, наверное.
[03:47:39.220 --> 03:47:41.220]  То есть там, видимо, можно как-то очень хорошо
[03:47:41.220 --> 03:47:43.220]  писать это.
[03:47:43.220 --> 03:47:45.220]  Остался.
[03:47:49.220 --> 03:47:51.220]  Ну, может. Ну, не знаю.
[03:47:51.220 --> 03:47:53.220]  Вот никому не удалось, хотя почти, наверное,
[03:47:53.220 --> 03:47:55.220]  люди пытались. Нет, может, конечно,
[03:47:55.220 --> 03:47:57.220]  в Петрозаводске такие вещи там жадности не пихают,
[03:47:57.220 --> 03:47:59.220]  а зря. Ну, что там мне
[03:47:59.220 --> 03:48:01.220]  в это не верится.
[03:48:01.220 --> 03:48:03.220]  Все еще очень странно, что
[03:48:03.220 --> 03:48:05.220]  в Петрозаводске 19 итераций заходят, а
[03:48:05.220 --> 03:48:07.220]  написать итерации пока не таяли.
[03:48:07.220 --> 03:48:09.220]  Нет, ну, просто может быть следующая итерация.
[03:48:09.220 --> 03:48:11.220]  Это еще фишка в том, что, я думаю, там
[03:48:11.220 --> 03:48:13.220]  почти, наверное, были тесты, где 18 не заходит.
[03:48:13.220 --> 03:48:15.220]  Ну, мне так кажется.
[03:48:15.220 --> 03:48:17.220]  Ну да, все еще.
[03:48:17.220 --> 03:48:19.220]  То есть
[03:48:19.220 --> 03:48:21.220]  вы же не могли проверить, придумали ли
[03:48:21.220 --> 03:48:23.220]  участник вот это или написал сочетание.
[03:48:23.220 --> 03:48:25.220]  Ну, это да. Но там, видимо, просто фишка была
[03:48:25.220 --> 03:48:27.220]  в том, что надо было еще и ДФС очень хорошо
[03:48:27.220 --> 03:48:29.220]  написать. Прямо-то как-то
[03:48:29.220 --> 03:48:31.220]  очень хорошо.
[03:48:33.220 --> 03:48:35.220]  Но это вопрос уже,
[03:48:35.220 --> 03:48:37.220]  как говорится, к Данилюку.
[03:48:37.220 --> 03:48:39.220]  Осталось только выяснить, где он сейчас.
[03:48:39.220 --> 03:48:41.220]  Уже не в Португалии.
[03:48:41.220 --> 03:48:43.220]  А, вы следите, да?
[03:48:45.220 --> 03:48:47.220]  Понятно, да. Уже не в Португалии.
[03:48:47.220 --> 03:48:49.220]  Это где? В Испании?
[03:48:49.220 --> 03:48:51.220]  Ну, может в Испании.
[03:48:51.220 --> 03:48:53.220]  Ладно. Так, ладно.
[03:48:53.220 --> 03:48:55.220]  На этом мы, пожалуй, остановимся.
[03:48:55.220 --> 03:48:57.220]  Так что да, пора уже на самом деле
[03:48:57.220 --> 03:48:59.220]  останавливаться.
