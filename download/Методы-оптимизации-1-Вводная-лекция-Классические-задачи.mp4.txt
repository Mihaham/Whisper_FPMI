[00:00.000 --> 00:13.480]  Давайте начнём, курс этих двух читей, всё это уже
[00:13.480 --> 00:17.360]  читалось два или три раза, в этом году будет существенно
[00:17.360 --> 00:20.560]  отличаться я надеюсь от того что было раньше, поэтому
[00:20.560 --> 00:25.280]  пожалуйста ну в общем, надейтесь что есть записи какие-то
[00:25.280 --> 00:28.800]  но не полагайтесь на них напрямую и не только на
[00:28.800 --> 00:29.800]  них.
[00:29.800 --> 00:35.320]  Как обычно курс стоит из двух частей, первая часть
[00:35.320 --> 00:39.100]  больше про теорию, вторая часть больше про методы
[00:39.100 --> 00:42.000]  практику приложения пакета решения различных задач
[00:42.000 --> 00:46.600]  большой размерности вот и в общем всё то что как
[00:46.600 --> 00:49.120]  так или иначе запускается на компьютерах различного
[00:49.120 --> 00:52.600]  размера скажем так вот я надеюсь что с теорией
[00:52.600 --> 00:57.960]  мы разберёмся ну типа за полтора месяца вот и
[00:58.040 --> 01:02.240]  с теорией будет такой подход значит она будет максимально
[01:02.240 --> 01:06.480]  простой понятной и иллюстративной чтобы не было более страдания
[01:06.480 --> 01:11.600]  с неочевидными доказательствами вот поэтому на лекциях будут
[01:11.600 --> 01:15.200]  доказательства типа на полстранички я их буду писать
[01:15.200 --> 01:20.120]  вот тут вот соответственно всё сложное что тем не менее
[01:20.120 --> 01:23.360]  нам будет необходимо я буду выкладывать в виде пдфки
[01:23.360 --> 01:26.400]  и тем кто интересуется и хочет глубоко погрузиться
[01:26.400 --> 01:29.080]  можно будет с ним ознакомиться вот то есть тратить там
[01:29.080 --> 01:31.840]  типа лекцию на доказательства я в этом семестре уже не
[01:31.840 --> 01:34.680]  буду вот прошлом в прошлый раз я так пробовал делать
[01:34.680 --> 01:42.840]  но в общем не все доживали до конца было не очень интересно
[01:42.840 --> 01:45.960]  сейчас дойдем секунду сейчас пока о чем дальше будет
[01:45.960 --> 01:50.360]  про то как задавать вот значит во второй половине курса
[01:50.360 --> 01:55.040]  будет больше картина каких-то алгоритмов ну вот не в том
[01:55.040 --> 01:57.120]  смысле как структуру данных которые наверное у всех
[01:57.120 --> 02:01.000]  были вот алгоритмов именно того как типа вот те структуры
[02:01.000 --> 02:04.680]  данных используется в реальной жизни более менее вот которая
[02:04.680 --> 02:07.080]  как там связана с различными приложениями про которые
[02:07.080 --> 02:11.720]  тоже будем говорить вот в общем-то список блоков
[02:11.720 --> 02:17.360]  тут приведен обычно вот это вот я не успеваю вот но
[02:17.360 --> 02:20.760]  я надеюсь что в этом семестре у меня все получится в очередной
[02:20.760 --> 02:24.240]  раз ну я как более серьезно настроен скажем так вот
[02:24.240 --> 02:27.640]  и про коническую оптимизацию с дп я бы расскажу более
[02:27.640 --> 02:31.440]  подробно вот ну тут еще будет несколько новых тем
[02:31.440 --> 02:35.480]  которые я пока сюда не добавил вот но немножко их упомянув
[02:35.480 --> 02:39.720]  в дальнейшем вот значит то есть сначала мы занимаемся
[02:39.720 --> 02:43.000]  математическими обоснованиями того почему это может работать
[02:43.000 --> 02:45.360]  потом смотрим на то как эти математические обоснования
[02:45.360 --> 02:48.040]  реально работают на практике какие задачи можно решать
[02:48.040 --> 02:53.360]  какие там проблемы что известно что неизвестно и вообще
[02:53.360 --> 02:58.120]  на какой на какой стадии сейчас наук вот или понятно
[02:58.120 --> 03:04.560]  да пожалуйста вопрос задавайте сразу поднимайте руки
[03:04.560 --> 03:09.240]  кричите там как-то проявляйте себя это всегда оживляет
[03:09.240 --> 03:12.560]  немножко немножко лекции и становится поинтереснее
[03:12.560 --> 03:17.760]  вот так да ну в общем теперь вот ваш вопрос немножко
[03:17.760 --> 03:20.760]  осветим ну по плану лекции семинара каждую неделю
[03:20.760 --> 03:24.200]  возможно у кого-то семинар уже был конь был кого-то
[03:24.200 --> 03:30.120]  был окей вот ну в общем в плане соотношения лекции
[03:30.120 --> 03:33.000]  семинаров я постараюсь ну я надеюсь что получится
[03:33.000 --> 03:36.760]  так что они будут немножко пересекаться вот но все-таки
[03:36.760 --> 03:41.480]  будут друг другу более менее дополнять вот семинаристы
[03:41.480 --> 03:45.000]  могу сказать очень разные у всех с немножко свой взгляд
[03:45.000 --> 03:48.240]  на то что надо рассказывать и так задумано поэтому
[03:48.480 --> 03:54.720]  я рекомендую вам возможности ну как-то заранее договориться
[03:54.720 --> 03:56.560]  и выяснить семинаристы что будет происходить в
[03:56.560 --> 04:01.000]  каком формате и как это будет выглядеть в плане сдачи
[04:01.000 --> 04:05.680]  в плане материала в плане вида домашних заданий вот
[04:05.680 --> 04:08.520]  и найти того семинариста который больше всего соответствует
[04:08.520 --> 04:12.440]  вашим пожеланиям скажем так вот то есть какой-то
[04:12.440 --> 04:16.440]  минимум будут будут просить все ну какой-то там типа
[04:16.440 --> 04:18.680]  разный уровень освоения курса подразумевает разную
[04:18.680 --> 04:21.200]  степень вовлеченности и время которое вы готовы
[04:21.200 --> 04:25.120]  на него потратить вот поэтому не удивляйтесь если у ваших
[04:25.120 --> 04:26.960]  коллег из других групп будет немножко отличаться
[04:26.960 --> 04:30.040]  программа задание и еще что-то это нормально вот то
[04:30.040 --> 04:33.080]  есть я надеюсь что вы каждый найдет себе очень семинарист
[04:33.080 --> 04:35.960]  стиль изложения и тематика которого будет подходить
[04:35.960 --> 04:39.720]  на лучший образ вот это что касается до лекции семинаров
[04:39.720 --> 04:45.080]  значит по отчетности по моему всегда зачет дип зачет
[04:45.080 --> 04:49.880]  в конце оценку ставить семинарист вот по результатам
[04:49.880 --> 04:55.440]  работы в семестре по плану там обычно типа в середине
[04:55.440 --> 05:01.440]  контрольная по теории по первой части в конце зачет
[05:01.440 --> 05:06.760]  по ну в конце как бы я рекомендовал сделать устный зачет некоторые
[05:06.760 --> 05:08.360]  но это опять же на усмотрение семинариста может быть
[05:08.360 --> 05:10.840]  воздавали домашками и не придется ничего потом
[05:10.840 --> 05:14.800]  сдавать вот ну то есть тут различные уровни балансировки
[05:14.800 --> 05:19.600]  он возможно вот возможно каким-то образом будет учитываться
[05:19.600 --> 05:22.200]  активность на лекции пока не знаю не могу гарантировать
[05:22.200 --> 05:25.600]  поэтому в общем в процессе того как пойдет дело будет
[05:25.600 --> 05:29.760]  ясно будет ли что-то будет ли как-то посещение лекции
[05:29.760 --> 05:33.120]  учитываться в выставлении токовой оценки по дефолту
[05:33.120 --> 05:36.000]  пока нет вот возможно чуть-чуть поменяется но не сильно
[05:36.000 --> 05:39.240]  то есть не думайте что если вы не ходили то все пропало
[05:39.240 --> 05:43.280]  и ничего все вы не сдадите вот это не так ну если вы
[05:43.280 --> 05:45.800]  и что делать то вы зададите если вы и делать ничего
[05:45.800 --> 05:50.340]  не будет то тут ничем не сможем помочь к сожалению
[05:50.340 --> 05:55.560]  вот это про отчетности понятно что надо делать да да это
[05:55.560 --> 05:59.260]  семинарист вам скажет что будут спрашивать на зачете
[05:59.260 --> 06:04.100]  то есть не будет такого что вы приходите вас corporations
[06:04.100 --> 06:07.800]  странно что вы никогда не как бы нет то есть вы выясняете
[06:07.800 --> 06:11.080]  семинариста что надо подготовить вам все подробно должны
[06:11.080 --> 06:12.640]  объяснить рассказать показать пересougherствовать
[06:12.640 --> 06:17.600]  пересказать там то есть еще раз задача максимально вам комфортные условия
[06:17.600 --> 06:25.240]  создать для того чтобы вы разобрались в тематике вот так по шагам которые надо
[06:25.240 --> 06:31.920]  сделать перед тем как начинать что-то изучать содержательное понятно короче
[06:31.920 --> 06:34.760]  надо выяснить что вам на у ваших семинаристов что надо сделать чтобы
[06:34.760 --> 06:39.640]  сдать курс вот это основная ваша задача в первые там две недели вот там первую
[06:39.640 --> 06:44.520]  неделю надо понять кому будете ходить чтобы сам расписание в общем устаканилось
[06:44.520 --> 06:48.640]  все такое вот а потом уже у того кого будете ходить понять что надо делать
[06:48.640 --> 06:53.000]  чтобы все сдать вот это в общем ваша приоритетная цель вот наша приоритетная
[06:53.000 --> 06:56.360]  цель сделать так чтобы процедура вашей сдачи была совмещена с тем чтобы что-то
[06:56.360 --> 07:00.760]  узнали нового интересно и в дальнейшем не забыли это после сдачи все как
[07:00.760 --> 07:07.760]  обычно вот так значит да слайды выкладываются сюда там сейчас лежит
[07:08.040 --> 07:12.960]  архив прошлого года и первая лекция собственно вот эта лекция ну почти вот
[07:12.960 --> 07:16.700]  эта лекция она немножко уже поменялась поменялась пока я тут добирался вот
[07:16.700 --> 07:21.400]  поэтому как бы я обновлю материалом того что сегодня ну что как бы расскажу
[07:21.400 --> 07:26.280]  непосредственно вот там будут лежать слайды к ним можно обращаться смотреть
[07:26.280 --> 07:33.040]  как бы вдохновляться задать какие-то вопросы вот поэтому это все приветствует
[07:33.040 --> 07:36.880]  всячески значит какие-то семинары которые я когда-то давно делал по моему
[07:36.880 --> 07:43.280]  18 что ли год будет вот лежат вот здесь на них тоже может смотреть но в общем
[07:43.280 --> 07:48.480]  это и некоторый ориентир по тематике но это все было давно поэтому сейчас я бы
[07:48.480 --> 07:52.520]  я надеюсь что семинаристы будут рассказывать что-то более как бы
[07:52.520 --> 07:58.000]  актуально бодрые и веселые чем то что вот здесь вот но опять же для ориентира
[07:58.600 --> 08:09.120]  на экране вот значит так да значит организационные вопросы почти все я
[08:09.120 --> 08:17.640]  собираю всегда отзывы по от вас отзывы на лекции на семинары вот вот отзывы
[08:17.640 --> 08:22.120]  прошлого года более менее релевантные поэтому в общем-то я думаю можно
[08:22.120 --> 08:27.040]  составить представление о том чем люди занимаются в среднем и кому что
[08:27.040 --> 08:34.080]  нравится кому не нравится вот поэтому в общем с учетом всего вот этого вот
[08:34.080 --> 08:39.720]  единственное что видимо не удастся совместить это вот желание усилить
[08:39.720 --> 08:42.960]  теоретическую нагрузку но я и как бы надеюсь усилить просто за счет того что
[08:42.960 --> 08:47.800]  кому интерес тот прочитает вот и я все ресурсы для этого выдам вот а все остальное
[08:47.800 --> 08:54.080]  как бы будет усиленно в плане именно широты и более больше практичности чем
[08:54.080 --> 08:59.200]  это было в прошлом году вот ну в общем если кто-то не не хочет ходить или не
[08:59.200 --> 09:02.440]  может то ничего страшного как вы просто занимайтесь семинаристом и
[09:02.440 --> 09:07.720]  пожалуйста в комфортном вам режиме можно вполне себе неплохо все изучить вот
[09:07.720 --> 09:12.980]  поэтому значит пожалуйста подойдите ко мне кто-нибудь из типа представитель
[09:12.980 --> 09:17.920]  курса или как это называется у вас вот мне нужно будет сделать телеграм этот
[09:17.920 --> 09:22.240]  канал группу для того чтобы можно я мог кидать вам какие-то дополнительную
[09:22.240 --> 09:27.680]  информацию информировать о том что какая-нибудь лекция будет в зуме такой
[09:27.680 --> 09:34.040]  тоже возможно ближе к концу семестра к сожалению вот и да и собственно выложить
[09:34.040 --> 09:42.160]  ссылку на опрос а там типа чего нравится что не нравится понятно вот и пожалуйста
[09:42.160 --> 09:45.800]  как бы если что-то не нравится пишите сразу не нравится это медленно
[09:45.800 --> 09:49.840]  рассказывайте ничего непонятно там не знаю что еще может не понравится все
[09:49.840 --> 09:52.360]  обычно нравится
[09:55.280 --> 10:00.440]  все нравится всегда не верю лектор мямлит понятно буду не буду мямлить
[10:00.440 --> 10:11.880]  лично вот все хорошо вот ну и там доказательства непонятной слишком
[10:11.880 --> 10:18.080]  быстро сложно утверждение потерялись там еще вот то же самое про семинаристов если
[10:18.080 --> 10:21.540]  вам что-то не нравится в том как ведут семинар пожалуйста пишите вот мы по
[10:21.540 --> 10:26.160]  мере сил будем пытаться как-то исправлять к сожалению тут меньше
[10:26.160 --> 10:31.280]  наверное свободы непосредственного влияния вот но как бы будем пытаться как-то
[10:31.280 --> 10:37.400]  удовлетворить ваши пожелания по мере возможности вот это про то как вы можете
[10:37.400 --> 10:40.960]  влиять на то что будет происходить то есть можно предлагать какие-то темы
[10:40.960 --> 10:44.920]  спрашивать уточнения какие-то я либо это буду включать в полноценной лекции
[10:44.920 --> 10:48.320]  либо присылать про ссылочки на какие-то материалы которые будут на данный
[10:48.320 --> 10:54.880]  вопрос отвечать вот поэтому как бы степень погружения глубины материала на
[10:54.880 --> 10:59.800]  вашей как бы отчасти на вас тоже лежит вот поэтому если будет интересно то
[10:59.800 --> 11:08.400]  ее велкам задавайте вопросы и все все как обычно так формат взаимодействия как
[11:08.400 --> 11:13.600]  все будет происходить понятно есть какие-то еще вопросы
[11:13.600 --> 11:20.200]  окей так да значит что нового будет в этом году я надеюсь подготовить все-таки
[11:20.200 --> 11:24.480]  лекцию про оптимизацию на многообразиях которые я все уже пару лет хочу сделать
[11:24.480 --> 11:28.640]  по нормальному не получается вот и прорабатывать оптимизацию тоже добавится
[11:28.640 --> 11:34.080]  добавить слайды это просто два отдельных типа типа задач про которые
[11:34.080 --> 11:38.480]  ну полезно знать и видеть их в совершенно неожиданных ситуациях и
[11:38.480 --> 11:42.560]  понимать что а вот здесь надо вот такие-то методы есть вот там есть
[11:42.560 --> 11:48.880]  какая-то книжка толстая мне в нее можно посмотреть и найти все что надо вот про
[11:48.880 --> 11:53.640]  методы будет немножко больше в части простахастику обсудим что такое
[11:53.640 --> 11:57.920]  смешанная точность как она помогает сократить требуемую память и почему
[11:57.920 --> 12:04.920]  какие нюансы с процедурой решения в этом случае появляются кто-нибудь знает
[12:04.920 --> 12:09.760]  что такое смешанная точность руки поднимите если знаете там микс пресижен
[12:09.760 --> 12:17.800]  еще так может быть на английском нет окей впереди много интересных вот значит
[12:17.800 --> 12:22.720]  да но еще про те уже сказал что долги доказательств будет поменьше побольше
[12:22.720 --> 12:31.000]  будет каких-то картинок кода возможно и алгоритмов да но очень пакеты такие-то
[12:31.000 --> 12:34.920]  наверное еще тоже обсудим это вот короче вот это все будет во второй
[12:34.920 --> 12:39.640]  половине поэтому я настоятельно рекомендую вам дожить до второй половины
[12:39.640 --> 12:45.160]  курса и по максимуму присутствовать на занятиях вот так ну в общем про
[12:45.160 --> 12:49.440]  литературу пару слов основная книга бойда и вандерберге
[12:49.440 --> 12:54.920]  конвейс оптимизейшн стенп русский курс вот замечательная замечательное
[12:54.920 --> 12:59.520]  издание всем рекомендую некоторые наверное в каком-то смысле образец
[12:59.520 --> 13:05.360]  учебника к таким каким он должен быть где там полстранички теории и там три
[13:05.360 --> 13:11.400]  страницы примеров вот как она работает поэтому всячески рекомендую там с одной
[13:11.400 --> 13:15.040]  стороны много примеров разобрана с другой стороны много примеров данов
[13:15.040 --> 13:21.120]  заданиях вот поэтому возможности для самоконтроля у вас тоже будет более чем
[13:21.120 --> 13:27.120]  достаточно вот по первой части кому кто хочет погрузиться поглубже есть по
[13:27.120 --> 13:34.800]  теории вот такой вот список книжка юрия в генчнестерова больше наверное все-таки
[13:34.800 --> 13:40.840]  ну она и про теорию тоже но она про теорию для методов вот вот здесь книжка
[13:40.840 --> 13:45.480]  достаточно продвинутая для тех кто хочет прям погрузиться в теорию и
[13:45.480 --> 13:51.280]  геометрию всех объектов которые будем рассматривать как можно глубже вот здесь
[13:51.280 --> 13:56.200]  но отчасти тоже про методы но и то в общем да вот основа выпуклого анализа вот
[13:56.200 --> 14:03.040]  здесь вот толстая книжка три стране станет не больше вот если интересно
[14:03.040 --> 14:08.440]  именно как это теория выпуклых множеств там выпуклых функций какие они
[14:08.440 --> 14:14.360]  там есть свойства сколько там типов вот мы и это немножко коснемся так чтобы
[14:14.360 --> 14:19.920]  понять зачем это надо вот а лезть как бы глубинной детали мы не будет вот если
[14:19.920 --> 14:26.080]  как бы интересно вот все можно посмотреть про методы основная книжка вот это да по
[14:26.080 --> 14:30.040]  моему они все ну или почти всем доступны в открытом доступе поэтому надеюсь
[14:30.040 --> 14:36.880]  проблем с литературой не возникнет если возникнет то пишите я выложу просто группу
[14:36.880 --> 14:43.720]  и проблем не будет да только вот это по моему мы так просто не найти вот остальное все вроде
[14:43.720 --> 14:49.720]  доступно вот вот эта книжка просто как бы сборник методов для разного типа задач
[14:49.720 --> 14:55.720]  открываете какая задача а вот такой-то метод все отлично вот и ну то есть про то как они
[14:55.720 --> 15:03.080]  собственно конструируются исходя из каких соображений вот так понятно откуда черпать
[15:03.080 --> 15:12.040]  дополнительную информацию прекрасно так отлично 20 минут так ну в общем немножко мотивации зачем
[15:12.040 --> 15:23.000]  курс в принципе задача оптимизации ставится когда нужно понять какое элемент некоторого
[15:23.000 --> 15:29.200]  множества является хуже или лучше чем какой-то другой элемент вот и соответственно если вы
[15:29.200 --> 15:36.960]  у вас есть некоторые перечень возможностей ну да решение вот и вам нужно понять вот а что
[15:36.960 --> 15:44.600]  делать то вы ставите некоторую задачу оптимизации решаете и получаете тот элемент который минимизирует
[15:44.600 --> 15:49.920]  заданную вами функцию понятно что здесь очень легко пристрелить стрельнуть себе в ногу если
[15:49.920 --> 15:55.600]  вы немножко ошибетесь в выборе целевой функции который вы минимизируете или ошибетесь в том
[15:55.600 --> 16:01.760]  множестве на котором вы хотите найти за один элемент вот поэтому тут важно очень как бы сама
[16:01.760 --> 16:07.520]  постановка задачи она критично важна помимо потом методов которые будут эту задачу решать
[16:07.520 --> 16:11.560]  потому что если вы ошибетесь на этапе постановки то на этапе решения вы точно ничего хорошего не
[16:11.560 --> 16:17.600]  получите вот ну в общем этого этого как бы подхода куча приложений вот понятно что самое как бы
[16:17.600 --> 16:22.320]  известно данный момент всякое там машинное обучение диплёрник и прочие там рекомендации
[16:22.320 --> 16:28.760]  системы где ваша целевая функция это просто функция ошибок на ошибки на данных вот вы хотите
[16:28.760 --> 16:35.720]  пытаетесь ее всячески образом минимизировать при этом вы огребаете ошибку на тесты выборки там
[16:35.720 --> 16:43.640]  переобучаетесь получаете смещенные результаты либо незадобно у вас там оказывается много
[16:43.640 --> 16:49.360]  выбросов и ваша модель оказывается не так не достаточно точна это все вам расскажут на соответствующем
[16:49.360 --> 16:56.560]  курсе наверное даже в этом семестре или нет ну прекрасно вот поэтому часть приложений которые
[16:56.560 --> 17:00.800]  будем рассматривать они будут отсюда часть будет не только отсюда потому что хочется дать как бы
[17:00.800 --> 17:08.520]  кругозор чуть-чуть шире чем одна одно направление вот есть еще такая штука называется молекулярное
[17:08.520 --> 17:15.080]  моделирование там это тоже активно используется когда вам нужно какой-нибудь там тип белок собрать
[17:15.080 --> 17:20.520]  из кусочков так чтобы это соедение был устойчиво устойчивое соединение так а физика у кого-нибудь
[17:20.520 --> 17:25.400]  была такая не будь была у кого да ну хорошо вот устойчивое соединение там где потенциальная
[17:25.400 --> 17:30.000]  энергия минимально может быть помните такой принцип вот ну вот минимизация потенциальной энергии у
[17:30.000 --> 17:36.320]  какой-то какого-то белка собранного из разных атомов с учетом взаимодействий это это достаточно
[17:36.320 --> 17:42.400]  сложная задача ее всяческим образом там приближенно пытаются решать но в общем это тоже некоторое
[17:42.400 --> 17:47.920]  приложение для которого важно понимать что такое целевая функция что такое там запись мина чего-то
[17:47.920 --> 17:53.440]  там при условии вот поэтому если кто-то хочет погрузиться в эту область то вы там наверняка
[17:53.440 --> 18:00.440]  встретите упоминать методов вот и эти методы ну то есть хочется чтобы после прохождения курса вы
[18:00.440 --> 18:07.600]  понимали что значит или иные аббревиатуры и те или иные как модификации ключевые слова вот есть
[18:07.600 --> 18:14.280]  еще финансах портфоли оптимизейшн когда у вас есть активы у вас есть точнее у вас есть бюджет у
[18:14.280 --> 18:20.360]  вас есть список активов надо понять куда вложиться что получить побольше ожидаемую прибыль им поменьше
[18:20.360 --> 18:26.480]  риска поменьше рискнуть вложенными средствами вот в общем это все тоже делает с помощью
[18:26.480 --> 18:33.400]  оптимизации и вообще финансов это довольно широко распространено потому что ну там нужна какая-то
[18:33.400 --> 18:37.840]  объективность в том чтобы как объяснить вашему начальнику что вы вложились те активы которые
[18:37.840 --> 18:43.240]  надо вот но вот есть модель и мы ее решаем мы ее решаем правильно потому что это модель
[18:43.240 --> 18:48.000]  имеет такие свойства и поскольку наметь такие свойства то то что мы решили правильно и вот мы
[18:48.000 --> 18:54.480]  вложились получили там то или иное вот такой-то как бы эпсилон плюс минус вот про это части как
[18:54.480 --> 19:02.320]  раз таки рабастая оптимизация и говорит ну про это потом вот ну оптимальное управление кто не
[19:02.320 --> 19:11.080]  слышал когда ничего про оптимальное управление вот в общем вот это про то как регу как управлять
[19:11.080 --> 19:18.160]  всякими механическими системы типа работа техника там ракеты спутники вот эта вся история она про
[19:18.160 --> 19:25.000]  оптимальное управление и то как в общем как управлять физическими системами так чтобы некоторые
[19:25.000 --> 19:31.560]  функционалы качества типа затрата топлива точка финального состояния была за была
[19:31.560 --> 19:39.640]  собственно достигнута с минимальными какими-то потерями издержками прочим вот но обработка
[19:39.640 --> 19:45.920]  сигналов это собственно части вот сюда реферирует уже ну всякий динойзинг дополнение пропусков
[19:45.920 --> 19:54.280]  обработка речи отчасти тоже сюда входит в общем все это концепция одна и та же специфика
[19:54.280 --> 20:01.680]  отличается но в общем идеи общие общие общие основки задач и их вид он более-менее один тот же
[20:01.800 --> 20:13.200]  слушайте там сначала делается гистограммка специальная которая из ну в общем извал извал
[20:13.200 --> 20:21.440]  ну да вот эта штука вот и они там их ну короче говоря волна превращается в эту гистограммку
[20:21.440 --> 20:28.720]  потом загоняется в нейронку и смотрится на по обучающий в руки в какие слова это все эти
[20:28.720 --> 20:36.640]  сигналы отображается то есть там ну чаще всего да сейчас уже чаще всего да до этого там вроде
[20:36.640 --> 20:43.840]  были какие-то марковский модель что ли но я тут честно говоря не хочу сейчас обманывать вот если
[20:43.840 --> 20:50.680]  будет интересно можно подробнее потом поговорить вот так много других может быть встретимся по
[20:50.680 --> 21:02.360]  ходу дел вот так вопрос кинть есть и вопросов нет ну очень ладно посмотрим насколько насколько
[21:02.360 --> 21:10.400]  мотивация была успешной так значит ну основные шаги я уже вкратце упомянул ну давайте еще раз их
[21:10.400 --> 21:17.520]  как бы списком перечислим то сначала сделал надо понять что вы хотите там и сложная чаще всего вот
[21:17.520 --> 21:24.720]  это задать целевую функцию формализовать ваши требования к решению то есть что надо от решения
[21:24.720 --> 21:30.920]  потребовать от элемента вашего множества чтобы вы сказали окей это то что мне надо собственно
[21:30.920 --> 21:37.000]  дальше надо понять из каких с какого множества вы хотите выбрать этот элемент вот ну и тут как
[21:37.000 --> 21:42.720]  бы классически ну либо вы вам любой элемент годится это самая простая ситуация вот есть не любой то
[21:42.720 --> 21:51.000]  какие вот типичные ограничения ну типичные и самое сложное когда вы хотите чтобы у вас ну
[21:51.000 --> 21:56.200]  у вас вы кодируете ваши множество просто бинарными векторами и хотите вы выбрать
[21:56.200 --> 22:01.200]  некоторые бинарный вектор вот это все очень сложно но довольно часто встречается вот ну или
[22:01.200 --> 22:06.960]  у вас там ваша переменная какие-нибудь товары грузы и вам нужно потребовать чтобы они были там
[22:07.760 --> 22:14.780]  вот или если вы пытаетесь приблизить некоторые вероятные распределения то у вас ограничение
[22:14.780 --> 22:20.400]  то чтобы ваши распределения был распределение тот вектор который вы найдете сдавал некоторые
[22:20.400 --> 22:32.320]  распределения что это за ограничение кто знает это прекрасно как у вас нет функции мы живем в
[22:32.320 --> 22:36.160]  Важный комментарий, мы живем в конечномерном пространстве.
[22:36.160 --> 22:38.640]  Вот у нас есть распределение, соответственно, это представляется
[22:38.640 --> 22:42.120]  в виде вектора, каждый элемент которого, это там некоторая
[22:42.120 --> 22:43.120]  вероятность.
[22:43.120 --> 22:47.960]  Да, что такое интеграл в конечномерном случае.
[22:47.960 --> 22:57.840]  Ничего сложного не будет, интеграл ли бега, вот функциональный
[22:57.840 --> 23:00.760]  анализ, вам там резвитесь или интеграл ли бега на
[23:00.760 --> 23:01.760]  здоровье.
[23:02.600 --> 23:06.000]  Все конечномерное, вероятностное распределение, что это,
[23:06.000 --> 23:08.640]  как дискретное там, кто-то ничего не помнит.
[23:08.640 --> 23:13.000]  Ну сумма равна единице, да, сумма равна единице
[23:13.000 --> 23:15.880]  и элементы все не отрицательные, вот вам будет распределение.
[23:15.880 --> 23:16.880]  Вот.
[23:16.880 --> 23:20.320]  Так, что еще, а, ну бывают еще хитрые штуки, когда
[23:20.320 --> 23:21.320]  вам нужно матрицу найти.
[23:21.320 --> 23:23.640]  Все помнят, что такое матрица.
[23:23.640 --> 23:28.240]  Так, хорошо, это нам понадобится очень сильно, поэтому заранее
[23:28.240 --> 23:29.240]  предупреждаю.
[23:29.400 --> 23:31.480]  Что, ну в общем, если будет возможность, освежите
[23:31.480 --> 23:32.480]  там линию алгебры.
[23:32.480 --> 23:35.600]  Я может быть какой-нибудь этот чит-шит, что называется
[23:35.600 --> 23:39.640]  скину, чтобы был, в общем-то, вы освежили, что такое там,
[23:39.640 --> 23:43.000]  это собственное, разложение по собственным векторам,
[23:43.000 --> 23:46.600]  там одно, другое, как там матрицу на вектор умножить,
[23:46.600 --> 23:48.640]  это все очень активно пригодится.
[23:48.640 --> 23:53.640]  Так, да, и бывает, что надо на матрицу наложить ограничение,
[23:53.640 --> 23:56.040]  что она там не отрицательно определена, например.
[23:56.040 --> 23:57.640]  Все повещи такое не отрицательно определенность.
[23:59.640 --> 24:00.640]  Поднимите руки, кто помнит.
[24:00.640 --> 24:03.640]  Я помню, прекрасно.
[24:03.640 --> 24:09.520]  Вот, пример, когда так, это, например, нужно найти
[24:09.520 --> 24:12.720]  матрицу к вариации в многомерном гауссовском распределении.
[24:12.720 --> 24:15.440]  То есть модель, что у нас данные гауссовские, мы хотим,
[24:15.440 --> 24:18.240]  как бы, понять, какая там матрица к вариации.
[24:18.240 --> 24:20.840]  Вот, а физический смысл этого, собственно, в том, что
[24:20.840 --> 24:23.320]  матрица к вариации отвечает за тот же самый пресловутый
[24:23.320 --> 24:25.640]  риск в финансах, например.
[24:26.040 --> 24:33.080]  Другие примеры, когда нужно найти матрицу, будут
[24:33.080 --> 24:37.360]  ближе к концу рассказаны, это связано опять же с одной
[24:37.360 --> 24:43.920]  стороны задачами на графах и с другой стороны с построением
[24:43.920 --> 24:47.320]  выпуклых приближений или еще называют их релаксации
[24:47.320 --> 24:49.960]  для комбинаторных задач, то есть когда у вас изначально
[24:49.960 --> 24:54.120]  было что-то дискретное, а вы делаете хитрые-хитрые
[24:54.120 --> 24:56.320]  преобразования и получаете некоторую непрерывную
[24:56.320 --> 24:59.000]  задачу, но у вас переменная из вектора стала матрицей.
[24:59.000 --> 25:01.800]  И там тоже на нее специально ограничения накладываются,
[25:01.800 --> 25:04.560]  часть из которых переписывается как ограничение на то, что
[25:04.560 --> 25:06.720]  некоторая матрица будет положить на полуопределенную.
[25:06.720 --> 25:13.680]  Наверное, понятно, что такое ограничение более трудоемкое
[25:13.680 --> 25:16.360]  и неприятное, чем ограничение, что вектор по элементам
[25:16.360 --> 25:18.360]  больше или равен нуля, например.
[25:18.360 --> 25:24.920]  Чисто из каких-то разумных соображений, что ограничение,
[25:24.920 --> 25:28.680]  что какой-то вектор больше или равен нуля по элементам
[25:28.680 --> 25:33.360]  и ограничение, что для любого вектора некоторая квадратичная
[25:33.360 --> 25:35.960]  форма больше или равна нуля, это выглядит все как
[25:35.960 --> 25:37.960]  будто немного несравнимой величины.
[25:37.960 --> 25:41.600]  И в общем, для работы с такими задачами существуют
[25:41.600 --> 25:43.880]  отдельные подходы, которые не опираются ни на кредитарии
[25:43.880 --> 25:46.120]  сильвестры, ни на определение, у них там и некоторая своя
[25:46.120 --> 25:47.120]  методика есть.
[25:47.120 --> 25:53.080]  Так, окей, допустим, но что мы разобрались.
[25:53.080 --> 25:55.840]  После этого вы соединяете первые два пункта и записываете
[25:55.840 --> 26:00.200]  финальную постановку задачи в некотором виде, в некоторой
[26:00.200 --> 26:03.280]  форме, общий вид которой будет на следующем слайде
[26:03.280 --> 26:06.280]  или через слайд.
[26:06.280 --> 26:11.360]  Значит, записали, проследились, расстроились, ну или порадовались,
[26:11.360 --> 26:12.360]  не знаю, как повезет.
[26:12.840 --> 26:16.280]  И после этого проанализировали то, что получилось, и после
[26:16.280 --> 26:19.960]  этого понимаем, какой алгоритм больше всего подходит.
[26:19.960 --> 26:25.240]  То есть, задача непрерывная, дискретная, выпуклое-невыпуклое,
[26:25.240 --> 26:28.960]  можно посчитать градиент, так ладно, что такое градиент,
[26:28.960 --> 26:29.960]  есть знания?
[26:29.960 --> 26:32.960]  А поднимите рюк, ты знаешь, что такое градиент, так ну
[26:32.960 --> 26:33.960]  кто-то знает, окей, хорошо.
[26:33.960 --> 26:40.680]  Вот, и соответственно, после этого выбирается
[26:40.680 --> 26:44.880]  наилучший алгоритм, исходя из теории, исходя из опыта,
[26:44.880 --> 26:48.360]  каких-то тестовых экспериментов, ну и после этого этот алгоритм
[26:48.360 --> 26:50.800]  реализуется, проверяется корректность, либо опять
[26:50.800 --> 26:56.600]  же теоретически, либо практически, и получается все это запускается,
[26:56.600 --> 26:59.200]  тестируется и анализируется то, насколько ваши ожидания
[26:59.200 --> 27:02.040]  по эффективности решения впадают в то, что вы реально
[27:02.040 --> 27:03.040]  пронаблюдали.
[27:03.040 --> 27:06.080]  То есть, может, у вас там в теории все было прекрасно,
[27:06.080 --> 27:10.640]  но внезапно одна итерация метода занимает там 10 часов
[27:10.640 --> 27:13.880]  и вы грустите из-за этого, хотя в теории все было хорошо.
[27:13.880 --> 27:16.560]  Вот, короче, про это мы больше будем говорить во второй
[27:16.560 --> 27:17.560]  части.
[27:17.560 --> 27:21.600]  Это общие шаги по тому, как стать задачей.
[27:21.600 --> 27:25.640]  Вопросы?
[27:25.640 --> 27:34.600]  Не слишком быстро?
[27:35.600 --> 27:42.560]  Громче.
[27:42.560 --> 27:45.000]  Ответом является элемент того множества, который
[27:45.000 --> 27:46.320]  вы вот здесь задали.
[27:46.320 --> 27:51.600]  Ну, то есть, иногда по-разному ставят, либо говорят, что
[27:51.600 --> 27:53.880]  мы хотим найти значение и нам все равно на каком
[27:53.880 --> 27:56.920]  элементе это достигает значения, либо говорят, что мы хотим
[27:56.920 --> 27:59.280]  нам интерес сам элемент, и тогда вы просто подставляете
[27:59.280 --> 28:03.360]  элемент в функцию и получаете то, что надо.
[28:03.360 --> 28:14.600]  Конечно-мерное множество, под множество Rn, ну или под
[28:14.600 --> 28:15.600]  множество матриц.
[28:15.600 --> 28:18.600]  Ну, это почти одно и то же.
[28:18.600 --> 28:21.160]  Да, про почти одно и то же.
[28:21.160 --> 28:22.920]  Скалярное произведение матриц, кто знает, как
[28:22.920 --> 28:23.920]  определяется?
[28:23.920 --> 28:28.680]  Ну, у вас есть две матрицы, надо скалярное произведение
[28:28.680 --> 28:29.760]  посчитать между ними.
[28:29.760 --> 28:35.360]  Скалярное произведение, да, нет, руки поднимите,
[28:35.360 --> 28:36.360]  кто знает?
[28:36.360 --> 28:40.160]  Ага, никто не знает, ну окей, а, вот, знаете, хорошо,
[28:40.160 --> 28:41.160]  good.
[28:41.160 --> 28:42.680]  Ну это я все тоже буду рассказывать, поэтому я просто заранее
[28:42.680 --> 28:45.640]  хочу понять, насколько надо погружаться в эти детали.
[28:45.640 --> 28:47.840]  Да-да, громче только.
[28:47.840 --> 29:05.600]  Нет, ну у вас Rn и у вас как бы, типа, не по-действительной
[29:05.600 --> 29:08.240]  числу, у вас там, типа, бесконечно, очень бесконечно
[29:08.240 --> 29:09.240]  много.
[29:09.240 --> 29:13.200]  Или, может быть, я не понял.
[29:14.200 --> 29:18.760]  Ну, теоретически прекрасно, вот, смотрите, у вас на отрезке,
[29:18.760 --> 29:22.080]  да, например, и у вас какая-нибудь функция вот такая вот, и там
[29:22.080 --> 29:26.280]  какой-нибудь один узкий пик в минус 100, вот, и вы
[29:26.280 --> 29:28.960]  будете этот пик искать, пока все точки не пройдете.
[29:28.960 --> 29:36.480]  Ну, понятно?
[29:36.480 --> 29:38.400]  Подойдите на перерыве, мы с вами подробнее это обсудим,
[29:38.400 --> 29:41.320]  давайте так, будет проще.
[29:41.680 --> 29:44.680]  Так, еще вопросы?
[29:44.680 --> 29:45.680]  Окей.
[29:45.680 --> 29:51.720]  Так, ну, в общем, установка задачи выглядит вот так.
[29:51.720 --> 29:53.240]  Давайте разбираться, что значит каждая буквка.
[29:53.240 --> 29:57.520]  Значит, мин, ключевое слово, означает, что мы хотим найти
[29:57.520 --> 29:58.520]  минимум.
[29:58.520 --> 30:00.280]  Еще иногда пишут максимум, максимум, что мы хотим
[30:00.280 --> 30:01.280]  найти максимум.
[30:01.280 --> 30:02.280]  Не удивляйтесь.
[30:02.280 --> 30:06.880]  Понятно, что задачу на минимум можно преобразовать
[30:06.880 --> 30:10.440]  задачу на максимум довольно тривиальным образом, а именно
[30:10.440 --> 30:13.080]  сказав, что мы хотим найти минимум от минус функции.
[30:13.080 --> 30:17.000]  Я надеюсь, это понятно.
[30:17.000 --> 30:22.800]  Заранее скажу, что аргумент, короче, решение, в смысле
[30:22.800 --> 30:26.400]  x такой задачи будет совпадать, но оптимальное значение
[30:26.400 --> 30:32.680]  будет минус от решения, короче, я всего лишь хочу
[30:32.680 --> 30:36.000]  сказать, что максимум от функции это минус от минимума
[30:36.000 --> 30:38.720]  минус функции, вот, не более того.
[30:39.480 --> 30:42.360]  Не думайте, что если у вас решение будет совпадать,
[30:42.360 --> 30:45.320]  в смысле x со звездочкой, то надо просто будет подставить
[30:45.320 --> 30:47.320]  и получить то, что надо, нет, надо еще минус перед
[30:47.320 --> 30:48.320]  этим написать.
[30:48.320 --> 30:50.320]  Это детали, ладно.
[30:50.320 --> 30:54.040]  Значит, это называется f0 целевая функция, помню,
[30:54.040 --> 30:55.480]  даже есть какие-то обозначения.
[30:55.480 --> 30:59.560]  Да, вот x искомый вектор лежит в множестве x большое, которое
[30:59.560 --> 31:02.640]  возможно некоторым хитрым образом быть задано, так
[31:02.640 --> 31:06.000]  что не укладываться вот в такие вот ограничения.
[31:06.000 --> 31:09.880]  Мы немножко про это поговорим через месяц, наверное.
[31:09.880 --> 31:14.840]  Вот, f0 целевая функция, значит, из Rn в R, то есть пока живем
[31:14.840 --> 31:19.440]  в мире, где мы минимизируем некоторое число, вот, есть
[31:19.440 --> 31:21.680]  отдельная большая наука про то, что делать, если
[31:21.680 --> 31:24.720]  у вас минимизируется что-то многомерное, то есть многокритериальная
[31:24.720 --> 31:28.360]  оптимизация, так называемая, когда у вас много величин,
[31:28.360 --> 31:35.880]  там, типа, стоимость средства, ой, стоимость время, вот,
[31:35.880 --> 31:41.480]  там, так, окей, вот, давайте я сейчас договорю и перерыв.
[31:41.480 --> 31:46.120]  Вот, значит, все будет отображаться в скалях, поэтому если вдруг
[31:46.120 --> 31:48.960]  у вас в каком-то месте получилось, что вы минимизируете вектор,
[31:48.960 --> 31:51.080]  то задумайтесь, наверное, вы где-то ошиблись.
[31:51.080 --> 31:54.000]  То есть тут проверка размерности будет очень активно нам
[31:54.000 --> 31:56.480]  помогать везде, вот.
[31:56.960 --> 31:59.160]  Значит, ну, собственно, fкат и функция ограничений
[31:59.160 --> 32:01.160]  тоже скалярные, видите, с нольем сравниваются.
[32:01.160 --> 32:04.320]  Вот, ну, тут вот написано Rn, но, может быть, еще от матрицы,
[32:04.320 --> 32:09.920]  то есть n на n, может быть, вот, ну, пример тут написан,
[32:09.920 --> 32:13.560]  давайте тогда 5 минут перерыв и я немножко пару слов скажу
[32:13.560 --> 32:14.560]  про это.
[32:14.560 --> 32:18.240]  Да, надеюсь, вы немножко размялись, отдохнули.
[32:18.240 --> 32:24.920]  Да, значит, мне тут спасибо напомнили, что вот это две
[32:24.920 --> 32:31.680]  буквы означает Subjects2, то есть при условии что, вот,
[32:31.680 --> 32:34.000]  это называется функция ограничений равенства, это называется
[32:34.000 --> 32:37.680]  функция ограничений равенства, они просто какие-то, ну,
[32:37.680 --> 32:39.960]  чаще всего они у нас будут непрерывными как минимум,
[32:39.960 --> 32:44.800]  вот, ну, в дальнейшем будем требовать там дифференцируемости,
[32:44.800 --> 32:47.760]  дваждиференцируемости, ну, короче, в процессе разработки
[32:47.760 --> 32:51.480]  всей техники будет понятно, какие ограничения надо
[32:51.480 --> 32:54.880]  сюда добавить, чтобы все работало, вот, поэтому
[32:55.000 --> 32:58.840]  в общем, ну, то есть, короче говоря, эта типа сумма равна
[32:58.840 --> 33:02.240]  единице, это типа все элементы неотрицательные, ну, в общем,
[33:02.240 --> 33:05.000]  все знаки здесь, ну, то есть важно, что тут равенств
[33:05.000 --> 33:07.440]  не равенств, потому что, ну, я надеюсь, понятно, что
[33:07.440 --> 33:09.780]  от одного к другому легко перейти, ну, в смысле, от
[33:09.780 --> 33:11.420]  одного знака не равенств от другого легко перейти
[33:11.420 --> 33:14.240]  в нажалина миус единиц, вот.
[33:14.240 --> 33:17.000]  Иногда вообще пишут без равенств, кто знает, кто
[33:17.000 --> 33:19.600]  скажет, почему это то же самое.
[33:19.600 --> 33:22.400]  Ну, два не равенства, конечно.
[33:22.400 --> 33:24.280]  Можно больше либо равно, меньше либо равно добавить и
[33:24.280 --> 33:25.720]  вы ничего не потеряете.
[33:25.720 --> 33:28.840]  Понятно, да?
[33:28.840 --> 33:29.840]  Такие простые вопросы.
[33:29.840 --> 33:30.840]  Вот.
[33:30.840 --> 33:37.000]  Значит, ну, пример такой простой, наивный, но, наверное,
[33:37.000 --> 33:40.880]  поначалу только такие надо приводить, что хотим
[33:40.880 --> 33:45.160]  есть как бы X, это некоторый размер инвестиций, либо
[33:45.160 --> 33:50.720]  доля от его бюджета, вот F0, суммарный риск или там
[33:50.720 --> 33:53.280]  вариация прибыли, то есть чаще всего там берут квадратичную
[33:53.280 --> 33:56.840]  формулу с некоторой положительной матрицей, которую как-то
[33:56.840 --> 33:58.840]  там по историческим данным ее вычисляют.
[33:58.840 --> 33:59.840]  Вот.
[33:59.840 --> 34:03.200]  Ну и Fcad, собственно, то ограничение на бюджет, которое есть,
[34:03.200 --> 34:06.200]  то есть либо сколько вы готовы вложить в каждый
[34:06.200 --> 34:10.600]  актив как минимум, либо сколько вы готовы как максимум
[34:10.600 --> 34:13.960]  вложить в каждый актив, либо там, в общем, ограничение,
[34:13.960 --> 34:17.320]  плюс ограничение на то, что это у вас типа доля X, то
[34:17.320 --> 34:20.200]  есть сумма равна единице и каждый элемент не отрицательный.
[34:20.200 --> 34:21.200]  Вот.
[34:22.120 --> 34:26.680]  Еще бывает, что говорят, ну, требуют, чтобы ожидаемая
[34:26.680 --> 34:29.200]  средняя доходность была там больше, чем сколько-то.
[34:29.200 --> 34:30.200]  Вот.
[34:30.200 --> 34:35.080]  Ну тут тоже понятно вроде, что… Так, а случайные процессы
[34:35.080 --> 34:36.080]  были какие-нибудь?
[34:36.080 --> 34:37.080]  У кого-нибудь?
[34:37.080 --> 34:38.080]  Нет?
[34:38.080 --> 34:39.080]  Чего?
[34:39.080 --> 34:40.080]  Окей.
[34:40.080 --> 34:41.080]  Ладно.
[34:41.080 --> 34:42.080]  Окей.
[34:42.080 --> 34:43.080]  Немножко тоже, может быть, поговорим в процессе.
[34:43.080 --> 34:44.080]  Так.
[34:44.080 --> 34:49.440]  Понятно, чтобы означать каждую букву?
[34:49.440 --> 34:56.520]  При условии SubjectTo сокращённо, то есть это просто две буквы,
[34:56.520 --> 34:58.400]  которые обозначают, что дальше будет идти список
[34:58.400 --> 34:59.400]  ограничений.
[34:59.400 --> 35:01.960]  Что вы не просто писали там минимум, а потом список
[35:01.960 --> 35:04.520]  функций, но как-то обозначали, что вот это то, а вот это
[35:04.520 --> 35:05.520]  вот это.
[35:05.520 --> 35:09.520]  Так, ещё вопросы.
[35:09.600 --> 35:23.760]  Да, смотрите, по поводу множества X, какие множества не могут
[35:23.760 --> 35:26.200]  быть описаны вот такими вот ограничениями.
[35:26.200 --> 35:31.520]  Ну, невыпуклые тоже могут быть.
[35:31.520 --> 35:32.520]  Громче.
[35:32.520 --> 35:33.520]  Во.
[35:33.520 --> 35:34.520]  Да.
[35:34.520 --> 35:41.640]  То есть если у вас что-то там открыто где-то, то это
[35:41.640 --> 35:42.640]  всё отправляется вот сюда.
[35:42.640 --> 35:48.800]  И когда, то есть к чему приводит наличие подобных как-то
[35:48.800 --> 35:51.440]  открытых множеств в таких постановках, мы там ближе
[35:51.440 --> 35:52.920]  к концу месяца увидим.
[35:52.920 --> 35:55.520]  То есть понятно, что минимум на открытом множестве
[35:55.520 --> 35:59.360]  тяжело найти, поэтому там как-то замыкают или кое-что
[35:59.360 --> 36:00.360]  другое делают.
[36:01.200 --> 36:04.600]  Так, вроде я всё пояснил.
[36:04.600 --> 36:12.280]  Так, да, окей, да, ну, в общем, стандартные определения,
[36:12.280 --> 36:15.800]  я думаю, все их знают, поэтому, пожалуйста, посмотрите и
[36:15.800 --> 36:17.560]  спросите, если что-то непонятно.
[36:17.560 --> 36:20.600]  Наверное, так будет проще, чем я буду сейчас объяснять,
[36:20.600 --> 36:22.320]  чем там локальность и глобальность отличаются.
[36:30.360 --> 36:46.520]  Так, ну что, понятно?
[36:46.520 --> 36:54.040]  Ну, в смысле, прочитали, осознали, вспомнили вопросы.
[36:54.040 --> 36:55.040]  Окей.
[36:55.040 --> 36:58.160]  Вот, значит, альтернативная запись вот так вот записывается.
[36:58.960 --> 37:03.040]  Если нужно вести обозначение решения, именно, как бы,
[37:03.040 --> 37:06.040]  самого икса, вот, пишут, что икса звёздочка равно
[37:06.040 --> 37:17.360]  аргмин от вот того, что было вот тут, вот, ну, соответственно,
[37:17.360 --> 37:20.600]  пишут, что argmax, если нужно найти максимум, и вести
[37:20.600 --> 37:24.760]  обозначение для элемента, на котором максимум достигается.
[37:24.760 --> 37:27.520]  То есть понятно, что, в общем-то, множество элементов,
[37:27.520 --> 37:30.200]  которых достигается, может быть, больше одного элемента,
[37:30.200 --> 37:34.680]  если у вас такая вот функция, то у вас бесконечно много
[37:34.680 --> 37:35.680]  минимумов.
[37:35.680 --> 37:36.680]  Вот.
[37:36.680 --> 37:39.840]  При этом, как бы, само значение одно, и нас будет интересовать
[37:39.840 --> 37:42.400]  просто какой-то элемент из множества, минимумов,
[37:42.400 --> 37:43.400]  как бы.
[37:43.400 --> 37:47.160]  Я на все эти технические детали сейчас не хочу застрять
[37:47.160 --> 37:51.080]  внимание, просто, если вдруг у вас, вы начёте об этом
[37:51.080 --> 37:56.200]  думать, то вы правильно об этом думаете, но мы будем
[37:56.200 --> 37:58.320]  следовать максимально простой концепции, что
[37:58.320 --> 38:01.920]  нас интересует просто какой-то элемент из множества,
[38:01.920 --> 38:02.920]  минимумов.
[38:02.920 --> 38:03.920]  Вот.
[38:03.920 --> 38:04.920]  Так, окей.
[38:04.920 --> 38:08.800]  Да, ну, в общем, теперь, собственно, про то, как решать, вкратце
[38:08.800 --> 38:12.360]  основные моменты скажу, в дальнейшем будем, собственно,
[38:12.360 --> 38:15.240]  гружаться глубже в специфику каждого типа задач.
[38:15.240 --> 38:20.040]  Значит, в общем случае всё плохо, произвольная нелинейная
[38:20.040 --> 38:25.440]  задача оптимизации, они там НП полные, тяжёлые,
[38:25.440 --> 38:26.440]  переборные.
[38:26.440 --> 38:27.920]  В общем случае тяжело решаемые.
[38:27.920 --> 38:28.920]  Вот.
[38:28.920 --> 38:32.600]  Порой помогает всякая рандомизация, про которую
[38:32.600 --> 38:37.160]  тоже немножко поговорим, вот, но тут, как бы, непонятно,
[38:37.160 --> 38:39.760]  как мне аккуратно работать, так чтобы, там, от запуска
[38:39.760 --> 38:43.960]  к запуску вы получали что-то более-менее одинаковое,
[38:43.960 --> 38:46.800]  какие гарантии можно по этому поводу дать, вот.
[38:46.800 --> 38:48.880]  Ну и сколько там ждать, пока сойдётся к приемливому
[38:48.880 --> 38:49.880]  решению тоже непонятно.
[38:49.880 --> 38:50.880]  Вот.
[38:50.880 --> 38:53.880]  Поэтому с ордомизацией как-то грустно, так, Сон слушал,
[38:53.880 --> 38:54.880]  да?
[38:54.880 --> 38:55.880]  Вот.
[38:55.880 --> 38:59.000]  К счастью, классы, некоторые классы задач решаются
[38:59.000 --> 39:00.000]  быстро.
[39:00.000 --> 39:04.560]  Ну, собственно, вот они, наверное, от простого к
[39:04.560 --> 39:08.320]  сложному более-менее, вот.
[39:08.320 --> 39:12.360]  Самое простое линейное, нехорошо говорить, в общем,
[39:12.360 --> 39:15.640]  простое по виду линейное программирование, которое,
[39:15.640 --> 39:20.360]  там, решали в 50-х, 60-х годах, вот, второе, наименьшие
[39:20.360 --> 39:22.640]  квадраты, у которых вообще есть аналитическое решение,
[39:22.640 --> 39:26.040]  но, в общем, там тоже некоторые свои науки про это есть,
[39:26.040 --> 39:27.040]  вот.
[39:27.040 --> 39:29.440]  Более, как бы, близкое к нам малоранговая аппроксимация
[39:29.440 --> 39:34.680]  матриц, 80-е, 90-е, может быть, частично 2000-е, вот, выпукла
[39:34.680 --> 39:39.320]  оптимизация, окончательно более-менее устаканилась,
[39:39.320 --> 39:44.400]  как бы, стало более-менее понятно к концу 90-х, вот.
[39:44.400 --> 39:49.040]  В общем, сейчас, вкратце, поговорим про все эти задачи,
[39:49.040 --> 39:50.040]  сколько успеем.
[39:50.040 --> 39:52.680]  Ну, да, вроде, полчасика еще есть.
[39:52.680 --> 39:53.680]  Вот.
[39:53.680 --> 39:57.840]  Ну, собственно, история развития, вот, наверное, до вот этого
[39:57.840 --> 40:00.840]  момента более-менее объективна, вот это вот уже более-менее
[40:00.840 --> 40:03.920]  субъективно, поэтому, как бы, так, критически тоже
[40:03.920 --> 40:05.520]  к этому относитесь, вот.
[40:05.520 --> 40:07.880]  Если вы вдруг поймете в какой-то момент, что тут
[40:07.880 --> 40:10.360]  что-то неправильно или пропущено, то, пожалуйста, общите и
[40:10.360 --> 40:11.360]  поясните, будет очень интересно.
[40:11.600 --> 40:15.000]  Ну, в общем, 40-вый, 50-тый, да, линейно-квадратичная,
[40:15.000 --> 40:17.560]  потом геометрическая, тоже поговорим ближе через
[40:17.560 --> 40:20.800]  пару раз, по-моему, уже, что это за геометрическая
[40:20.800 --> 40:21.800]  оптимизация.
[40:21.800 --> 40:23.960]  Ну, то есть, программирование, имеется в виду оптимизация
[40:23.960 --> 40:27.500]  по историческим причинам, потому что, в общем, программинг
[40:27.500 --> 40:31.040]  с английского переводится, имеется в виду, как оптимизация.
[40:31.040 --> 40:36.480]  Вот, но, в общем, как это называется, ложный друг
[40:36.480 --> 40:38.860]  переводчика, короче говоря, что, программирование,
[40:38.860 --> 40:41.680]  в смысле программинг, это не совсем то же самое, что
[40:41.680 --> 40:44.680]  программирование в смысле русского языка.
[40:44.680 --> 40:50.080]  В 90-е Юрий Евгеньевич Нестеров и Аркадий Семенович Немировский
[40:50.080 --> 40:52.560]  разработали и закончили полинамерные методов внутренней
[40:52.560 --> 40:54.840]  точки для конических задач.
[40:54.840 --> 40:58.200]  Что это такое, мы тоже поговорим ближе к концу.
[40:58.200 --> 41:02.120]  Что вот это такое, ближе к концу, а что вот это такое,
[41:02.120 --> 41:03.120]  ближе к концу сентября.
[41:03.120 --> 41:14.420]  В 2000-е годы это более-менее прорабасная оптимизация
[41:14.420 --> 41:17.420]  и реалацизация комменторных задач, то есть собственно
[41:17.420 --> 41:20.660]  здесь разработали технологию решения выпуклых задач
[41:20.660 --> 41:23.660]  более-менее любых, ну не совсем любых, а здесь ее
[41:23.660 --> 41:26.620]  начали применять для приближения комменторных задач.
[41:26.620 --> 41:30.060]  В 10-х в основном занимались тактическими методами
[41:30.060 --> 41:32.720]  не выпуклых задачами и глобальной оптимизацией,
[41:32.720 --> 41:34.760]  ну и сейчас очень продолжает заниматься, просто это
[41:34.760 --> 41:37.680]  я скорее наверное то, с чего начало более-менее какой-то
[41:37.680 --> 41:46.040]  всплеск, рассвет и самое начало, вот, да, как-то так.
[41:46.040 --> 41:49.240]  Ну в общем, чтобы было более-менее понятно логика развития
[41:49.240 --> 41:53.720]  науки, наверное в 20-х более-менее будет развиваться всякая
[41:53.720 --> 41:56.280]  распределенная история, когда у вас много серверов,
[41:56.280 --> 41:58.560]  вам надо распределенный у вас сохранится параметр
[41:58.560 --> 42:02.420]  и надо все это уметь оптимизировать, хотя у вас все данные они
[42:02.420 --> 42:05.620]  хранятся в разных местах физически, вот, ну в общем
[42:05.620 --> 42:06.620]  это еще впереди.
[42:06.620 --> 42:10.980]  Ну да, собственно, по современному правлению пару слов, что
[42:10.980 --> 42:14.540]  мы хотим решать задачи большой размерности, ну где-то
[42:14.540 --> 42:19.020]  такой наверное, когда у вас там помещается, да, кстати,
[42:19.020 --> 42:21.660]  кто понимает, сколько, какая размерность помещается
[42:21.660 --> 42:23.660]  на ноутбуке?
[42:23.660 --> 42:25.660]  Сколько?
[42:25.760 --> 42:30.760]  У вас оперативка столько помещается?
[42:30.760 --> 42:39.560]  Ну а вы как вычисляете когда-то надо… 10-10, интересно, а сколько
[42:39.560 --> 42:41.560]  это?
[42:41.560 --> 42:52.360]  Ну 16 это не десятки, ну в общем, но на ноутбуке да,
[42:52.360 --> 42:55.660]  ну в общем, ну специализированного вам там и про пролезть
[42:55.660 --> 42:56.660]  уже на ду.
[42:56.660 --> 43:01.220]  Да, ну в общем, обычно на уровне матрицы вы наверное
[43:01.220 --> 43:03.980]  на компьютере можете хранить что-то типа десятки тысяч
[43:03.980 --> 43:07.340]  размерность более-менее безболезненно, вот, ну можете
[43:07.340 --> 43:09.460]  посчитать там, сколько дабл весь, сколько весит
[43:09.460 --> 43:12.300]  один дабл и сколько у вас оперативки и потом наверное
[43:12.300 --> 43:17.220]  квадрат умножить получить не очень хорошую, не очень
[43:17.220 --> 43:20.260]  хорошую масштабируемость в общем всей этой истории,
[43:20.260 --> 43:23.560]  ну в общем, про распределенный оптимизатор я тоже немножко
[43:23.560 --> 43:28.000]  уже упомянул, высокий порядок что-то такое тоже будет
[43:28.000 --> 43:34.560]  ясно в начале ноября, я надеюсь, вот, и так, стокастика,
[43:34.560 --> 43:38.640]  невыпуклость, ну и приложение, в общем, немножко про все
[43:38.640 --> 43:43.840]  это в разные моменты курса будет упоминаться и я надеюсь
[43:43.840 --> 43:48.080]  будет понятно к чему это все было сейчас сказано,
[43:48.080 --> 43:52.060]  вот, некоторые анонс на будущее, да, в общем, линейное
[43:52.060 --> 43:54.260]  программирование, линейный программинг, в общем, придумали
[43:54.260 --> 43:59.120]  на прямолинейно, ставится стандартные в форме, я
[43:59.120 --> 44:01.120]  говорю стандартные потому что их там несколько бывает
[44:01.120 --> 44:05.540]  разных они все равносильны но для простоты проще думать
[44:05.540 --> 44:08.380]  об этом как стандартная форма вы минимизируете
[44:08.380 --> 44:13.300]  линейную функцию на некотором полиэдральном множестве
[44:13.300 --> 44:15.880]  ну то есть многоугольник короче говоря набор линейных
[44:15.880 --> 44:23.900]  ограничений неравенств ну типа вот такой видно вот
[44:23.900 --> 44:28.860]  и значит вопрос как найти решение понятное дело вот
[44:28.860 --> 44:32.580]  ну аналитически вы его не найдете почему вы его аналитически
[44:32.580 --> 44:35.820]  найдете станет ясно примерно через месяц полтора вот
[44:35.820 --> 44:41.900]  там все довольно несложно кто может угадать где вообще
[44:41.900 --> 44:45.020]  решение искать вот исходя просто глядя на картинку
[44:45.020 --> 44:52.600]  и здравый смысл подключить надо на границе еще поточнее
[44:52.600 --> 44:59.200]  вершине да это правда решение будет вершине вот и по
[44:59.200 --> 45:01.840]  сути дела грубо говоря все это можно свести к перебору
[45:01.840 --> 45:08.200]  вершин да ну раз мы знаем вершине давайте переберем
[45:08.200 --> 45:11.080]  а сколько тут надо немножко наверное вспомнить либо
[45:11.080 --> 45:13.440]  комбинаторику либо тоже здравый смысл подключить
[45:13.600 --> 45:17.360]  сколько вершин может быть у вот такого вот множества
[45:17.360 --> 45:29.720]  в инмерном пространстве скорее интересует асимптотика
[45:29.720 --> 45:40.640]  какой самый плохой многоугольник можно придумать громче квадрат
[45:40.640 --> 45:50.760]  так интересно еще какие варианты так ну это снизу
[45:50.760 --> 46:02.680]  в лучшем случае скатимся скатимся конечно не беспокойтесь
[46:02.680 --> 46:05.460]  все так и будет то есть их там экспоненциально много
[46:05.460 --> 46:09.140]  поэтому перебирать грустно поэтому перебирают хитрым
[46:09.140 --> 46:12.060]  образом гуляя по вершинкам так чтобы значение цельевой
[46:12.060 --> 46:16.500]  функции не уменьшалось вот это все я тут пару слов
[46:16.500 --> 46:19.660]  рассказываю но это типа лет 30 наверное работы большого
[46:19.660 --> 46:23.580]  сообщества людей вот для того чтобы разработать
[46:23.580 --> 46:27.980]  собственно симблекс метод вот который тут вот решает
[46:27.980 --> 46:32.460]  эти такие задачи гуляя по вершинкам и минимизируя
[46:32.460 --> 46:36.180]  вот такую функцию вот в общем метод настолько классный
[46:36.180 --> 46:40.020]  что входит в топ 10 алгоритм 20 века вот тут и списочек
[46:40.020 --> 46:42.380]  можно по ссылке будет перейти посмотреть какие еще методы
[46:42.380 --> 46:46.100]  входит кстати может кто как вы думаете какие методы
[46:46.100 --> 46:52.820]  пошли в топ 10 лучших алгоритмов какие ваши любимые алгоритмы
[46:52.820 --> 47:00.020]  короче говоря вопрос очень простой а я ничего не слышу
[47:00.020 --> 47:07.420]  давайте по очереди так все замолчали понятно ну не
[47:07.420 --> 47:12.460]  совсем да быстрое проявление фурье ok кто знает что такое
[47:12.460 --> 47:21.700]  быстрое проявление фурье так еще да и экстра так
[47:21.700 --> 47:26.180]  еще честно говоря не помню входит ли он туда но может
[47:26.180 --> 47:40.820]  входит это то же самое почти quicksort да кышам вроде нет
[47:40.820 --> 47:53.680]  слишком специально кажется так ну наверное кто слишком
[47:53.680 --> 48:06.760]  старая слишком специально вот это нужно знаете очень
[48:06.760 --> 48:09.640]  много где то есть вот эти задачи то есть почему они
[48:09.640 --> 48:14.040]  как бы там ими занимались сто лет потому что к ним
[48:14.040 --> 48:16.680]  сводится там составление расписаний там поездов
[48:16.680 --> 48:21.040]  самолетов всего прочего к ним сводится та же самая
[48:21.040 --> 48:25.160]  те же там и финансы в некотором в некотором там в некотором
[48:25.160 --> 48:33.340]  виде нет ну почти короче в общем посмотрите кому
[48:33.340 --> 48:36.920]  интересно там все должно работать вот возможно часть
[48:36.920 --> 48:39.960]  это вообще еще не знаете но в общем для интереса
[48:39.960 --> 48:42.520]  развития круга расширение горизонтов мне кажется
[48:42.520 --> 48:58.920]  достаточно полезно там что-то продолжать и есть да но
[48:58.920 --> 49:01.560]  я не уверен что хаффман ну то есть там вам картинки
[49:01.560 --> 49:08.920]  что ли короче ладно так давайте вернемся к почему
[49:08.920 --> 49:18.320]  это важно вот и значит расписание финансы по-моему какие-то
[49:18.320 --> 49:21.440]  рекомендации на ютубе делаются вот решая какую-то такую
[49:21.440 --> 49:26.480]  задачу вот если будет интересно я пришлю ссылочку на источник
[49:26.480 --> 49:29.200]  вот и для решения таких задач как бы есть огромное
[49:29.200 --> 49:32.800]  количество разных разных пакетов там одни открыты
[49:33.800 --> 49:41.040]  вот и что более важно такие задачи являются кирпичиком
[49:41.040 --> 49:44.000]  для решения такого же рода задач только если часть
[49:44.000 --> 49:47.440]  иксов дискретные то есть вам наверное говорили что
[49:47.440 --> 49:50.160]  есть у вас есть какая-то дискретность в допустим
[49:50.160 --> 49:53.360]  ножице то все плохо и надо перебирать более-менее
[49:53.360 --> 49:56.080]  ну или там ветви границы слышали кто-нибудь такие
[49:56.080 --> 50:04.960]  слова да наверное да ну да да да вот это вот из той же
[50:04.960 --> 50:10.640]  из вот этой всей науки вот и то как бы все плохо экспоненциально
[50:10.640 --> 50:13.960]  либо приближенно и типа не очень понятно что делать
[50:13.960 --> 50:18.080]  вот здесь оказывается что есть достаточно эффективная
[50:18.080 --> 50:21.280]  технология по тому как свести одну задачу дискретной
[50:21.280 --> 50:24.960]  оптимизации с линейной с частично целочисленными
[50:24.960 --> 50:29.200]  или бинарными переменными к последовательности задач
[50:29.200 --> 50:31.680]  линейного программирования такого с непрерывными
[50:31.680 --> 50:35.200]  переменными вот и поэтому эффективно быстро решать
[50:35.200 --> 50:38.840]  вот такое это значит что эффективно и быстро решать
[50:38.840 --> 50:41.960]  дискретные задачи которые очень важны нужны в технике
[50:41.960 --> 50:48.800]  и производстве вот поэтому это все важно и ну про это
[50:48.800 --> 50:50.760]  мы поговорим наверное на одной или двух лекциях не
[50:50.760 --> 50:54.040]  больше вот и ну в общем я все ссылки дам я надеюсь что
[50:54.080 --> 50:58.600]  вкратце будет понятно принцип строения методов и основные
[50:58.600 --> 51:05.360]  нюансы в их запуске и реализации так понятно как что зовет задачи
[51:05.360 --> 51:10.800]  где нужно почему важно где искать решение те формальные
[51:10.800 --> 51:13.880]  доказательства обсуждения будут там ближе к концу там
[51:13.880 --> 51:17.320]  в одной из последних лекций вопросы
[51:17.320 --> 51:22.400]  окей
[51:22.400 --> 51:33.840]  вторая задача очень простая на меньшей квадраты классика жанра я думаю типа 19 век наверное вот
[51:33.840 --> 51:41.440]  проводим кривую по точкам короче говоря задача называется вот если у вас так понятно ли все
[51:41.440 --> 51:52.240]  обозначения давайте сразу я задам этот вопрос или непонятно что-то там палочки нижняя двойка верхняя двойка
[51:57.400 --> 52:07.200]  а прекрасный вопрос ну вот смотрите вот здесь по-моему короче говоря точки набросные в соответствии
[52:07.200 --> 52:15.000]  по-моему синусом зашумленным вот а кривая там какой-то куб или пятая степень и надо найти
[52:15.000 --> 52:25.040]  коэффициенты вот то есть у нас есть точки это у них есть x и соответственно y вот y идет вот
[52:25.040 --> 52:35.720]  в x мы считаем значение нашей как бы базистой функции что ли может так сказать вот и ставим
[52:35.720 --> 52:49.080]  ее в столбцы матрицы а и хотим понять как из в общем хотим понять как какая функция с
[52:49.080 --> 52:57.760]  какими параметрами линейными приближает нашу неизвестную функцию ничего не понятно да
[52:57.760 --> 53:13.080]  смотрите прямая почему была прямая потому что у вас был параметр параметр как-то угол
[53:13.080 --> 53:21.360]  наклона и сдвиг так вот но все будет работать если вы линейную модель замените на квадратичную
[53:21.360 --> 53:29.040]  или полинамиальную важно чтобы у вас коэффициенты были линейно входили в выражение непонятно
[53:29.040 --> 53:41.000]  громче вроде понятно прекрасно так да давайте я вижу что как это может быть слишком быстро вот
[53:41.000 --> 53:49.160]  смотрите давайте попробуем что-то порисовать так а может быть вот так надо сделать
[53:49.160 --> 54:00.360]  вроде получше стал да а вот если вот так сделать очень огонь да талз разрешение поправить ну
[54:00.360 --> 54:11.520]  вот смотрите когда у вас было кто-то про что-то вот такое да наверное было
[54:16.400 --> 54:23.280]  так и чего-нибудь вот так типа у вас был дан x некоторые ваши точки вы хотели найти
[54:24.120 --> 54:33.200]  так ну это есть про прямую вот начало прошу но тоже сам будет работать если у вас как бы
[54:33.200 --> 54:45.680]  ваш f от w x будет грубо говоря там w 1 x квадрат плюс w 2 x там в общем ну например так ну можно
[54:45.680 --> 54:53.280]  там типа x третий там ничего не важно какая у вас как бы никакой у вас базис да простите за
[54:53.280 --> 54:58.400]  почерк я буду над этим работать вот важно что у вас вот вот эти вот коэффициентики они все линейно
[54:58.400 --> 55:10.160]  входят понятно ну и как это записать в матричном виде очень просто у вас ваше x там единичка
[55:10.760 --> 55:26.360]  2 и 3 это типа вот так а там w 1 w 2 ну почти w 3 w 2 w 1 w 4 это типа столбец вот ну и
[55:26.360 --> 55:36.000]  собственно вы умножаете получаете число и вы читаете из числа понятно ну и поскольку у вас
[55:36.200 --> 55:42.440]  несколько то вы как бы их так стэкаете в строке и вас получается матрица и справа вектор
[55:46.840 --> 55:47.440]  да нет
[55:56.040 --> 56:02.640]  вот ну собственно вот да наверное я сюда добавлю более простую запись чтобы не шокировать
[56:02.640 --> 56:11.440]  тех кто будет это впервые смотреть вот ну и получается вот такая вот довольно ну короче даже
[56:11.440 --> 56:15.240]  если вы не знаете модель но вы можете там условно какие-то базистые функции взять и
[56:15.240 --> 56:22.400]  попытаться линейную комбинацию к зафи можно там sin и cos в общем все что вы знаете так
[56:22.400 --> 56:31.800]  установка значит понятно так хорошо вот здесь стоит двойка что это значит двойка так хорошо
[56:31.800 --> 56:46.880]  какие нормы еще есть что это какая-то цифра стоит нет цифра 1 да первая норма у нас будет
[56:46.880 --> 56:54.120]  активно использоваться это сумма модулей элемента вектора вот мы еще я сейчас это еще
[56:54.120 --> 56:59.360]  напишу но видимо надо будет добавить на слайд вот и бесконечная норма нас будет тоже интересовать
[56:59.360 --> 57:06.760]  это максимум модули элементов вот пожалуйста потихоньку запоминайте как это все называется вот
[57:06.760 --> 57:14.400]  значит у такой значит есть аналитическое решение вот оно вот значит уметь получать и объяснять
[57:14.400 --> 57:21.440]  почему решение именно такое в общем надо будет непременно если вы хотите сдать курс вот поэтому
[57:21.440 --> 57:27.480]  если вы попадаете на переиздачу а да кстати про переиздачу раз уж я зашла значит можно будет
[57:27.480 --> 57:35.120]  получить незачет от семинариста и тогда переиздача в отведенное время будет мне вот у нас такое
[57:35.120 --> 57:43.280]  распределение труда со семинаристами я принимаю все переиздачи вот надеюсь таковых не будет но на
[57:43.280 --> 57:53.880]  всякий случай сообщаю чтобы вы понимали что надо будет делать вот для вычисления этой штуки есть
[57:53.880 --> 57:59.680]  эффективные методы то есть стратегия давайте мы все посчитаем вычислим обратную матрицу и
[57:59.680 --> 58:05.800]  множим ее на вектор это плохая идея вот ближе к делу ну ближе вот когда мы к этому подойдем я
[58:05.800 --> 58:14.800]  покажу почему это плохая идея вот и как бы с чем это связано и что ломается вот может что-нибудь
[58:14.800 --> 58:27.480]  знает уже почему почему это плохая идея так сначала вы да но не только далее во да это другая
[58:27.480 --> 58:33.920]  проблема немножко но тоже как бы в пределе вырождается в то что вот это может быть вырожденной
[58:33.920 --> 58:40.400]  матрица кто знает как посмотреть на матрицу а точнее что надо проверить у матрицы а чтобы
[58:40.400 --> 58:53.000]  понять что вот это будет вырождено ну матрица ведь она прямоугольная так ранг надо проверить
[58:53.000 --> 59:04.880]  окей и чем вы надо сравнить да с миу ну чаще всего надо будет сравнить с том столбцов конечно
[59:04.880 --> 59:14.800]  потому что здесь ну понятно я надеюсь вот что наличие линейно зависимых столбцов приводит
[59:14.800 --> 59:21.240]  к тому что вот это получается вырождено нужно ли это формально показать это буквально одностройщика
[59:21.240 --> 59:32.000]  поэтому это можно сделать или это всем очевидно да давайте ну вот смотрите
[59:37.000 --> 59:44.200]  нас интересует вот такая вот матрица да что мы про нее знаем знаем что если мы возьмем от
[59:44.200 --> 59:50.480]  нее вот такое выражение то есть мы попробуем проверить ее на определенность да то это то
[59:50.480 --> 59:58.720]  то это то же самое что и вот так очевиден ли такой переход
[01:00:04.040 --> 01:00:14.160]  да нет не очевиден не очевиден окей ну давайте вспоминать значит а б транспонированная равно
[01:00:14.160 --> 01:00:24.720]  б транспонированная на транспонированная стало ли сейчас очевидно или не очевидно вот это
[01:00:24.720 --> 01:00:42.640]  матрешка короче надо ли пояснять подробнее прекрасно давайте давайте вспомним что такое она
[01:00:42.640 --> 01:00:53.120]  б да ну вот она б и и жи а и ка б ка жи
[01:00:57.960 --> 01:00:58.760]  так а сейчас надо
[01:01:07.040 --> 01:01:07.560]  или нет
[01:01:07.560 --> 01:01:12.120]  ну чего на
[01:01:18.120 --> 01:01:23.640]  а смотрите а а икс вот это это было а это б
[01:01:31.640 --> 01:01:34.080]  вы правильно спросили или нет
[01:01:37.560 --> 01:01:47.800]  сейчас погодите я запутался в том давайте вот так вот эту строчкой надо объяснить вот эту а тут
[01:01:47.800 --> 01:02:01.840]  вот же а я понял смотрите да окей что такое вторая норма вот да вечный вопрос это икс транспонир
[01:02:02.680 --> 01:02:14.160]  сумма квадрата ну отлично все так нужно ли еще что-то пояснять про транспонирование там
[01:02:14.160 --> 01:02:29.960]  нет вроде ок так всем ок так хорошо ну и в общем-то понятно наверное что ну вот эта матрица будет
[01:02:29.960 --> 01:02:42.240]  не строго положительно определена когда эта штука будет нулём ну она 0 когда вот это 0 а если
[01:02:42.240 --> 01:02:47.200]  это 0 для ненулёвого икса это значит что столб цели независима просто по определению
[01:02:47.200 --> 01:02:58.440]  ну да чуть больше одной строчки ну ладно смотрите значок положительный полуопределенности вот такой
[01:02:58.440 --> 01:03:09.040]  вот ну соответственно строго определенности там без нижнего вот это вот завиточка вот отрицательный
[01:03:09.040 --> 01:03:16.840]  такой же только в другую сторону поэтому если мы будем дальше писать что-то типа а больше либо
[01:03:16.840 --> 01:03:22.320]  равно нуля то это по элементной больше либо равно нуля а если вот такая круга круглая будет штука то
[01:03:22.320 --> 01:03:30.640]  это определенность пожалуйста не путайте а то будет печально ну то есть понятно что вот это вот
[01:03:30.640 --> 01:03:35.840]  то что а больше либо равно нуля это типа n квадрат просто линейных ограничений
[01:03:45.520 --> 01:03:49.640]  ну смотрите вот это вот ну определение положительной определенности я с этого
[01:03:49.640 --> 01:03:53.600]  как раз начал не просто так вот нам надо чтобы проверить знак вот этой штуки для
[01:03:53.600 --> 01:04:01.080]  произвольного ненулёвого икса так прекрасно мы преобразовали так что это квадрат второй
[01:04:01.080 --> 01:04:09.640]  нормы он всегда не отрицателен ну то есть поэтому эта штука положительно положительно
[01:04:09.640 --> 01:04:19.800]  да ой простите да вы правильно меня тут поймали заметили тут надо вот так
[01:04:19.800 --> 01:04:32.520]  равенство потому что мы хотим получить условия при котором эта штука не строго больше нуля
[01:04:32.520 --> 01:04:39.680]  то есть если бы она была строго больше нуля то вот здесь был не было бы этого нижнего нижнего
[01:04:40.120 --> 01:04:46.760]  вот этого вот завиточка полуопределенность
[01:04:46.760 --> 01:04:55.640]  но если это равно нулю это значит что матрица будет вырождена мы хотим понять при каких
[01:04:55.640 --> 01:04:59.040]  условиях на исходную матрицу эта матрица будет вырождена короче немножко такая логика
[01:04:59.040 --> 01:05:09.800]  да отлично ну связано с тем что надо решить линейную систему с этой матрицей она может
[01:05:09.800 --> 01:05:17.720]  быть вырождена грустно будьте здоровы непонятно не очень понятно окей так вспоминаем линейную
[01:05:17.720 --> 01:05:23.880]  алгебру хорошо что мы знаем про системы линейных уравнений мы знаем что решение
[01:05:23.880 --> 01:05:28.680]  определено когда матрица полного ранга она перк квадратная должна быть а во-вторых там
[01:05:28.680 --> 01:05:39.120]  должны быть ли на независимые сроки столбцы был такое как-то один одинокий одинокий крик
[01:05:39.120 --> 01:05:48.800]  в пустыне что называется да ну то есть обратная матрица определена только для матриц у которых
[01:05:49.800 --> 01:05:59.760]  полный ранг там она квадратные там метод гаусс и может он знает но вот там если вы начнете
[01:05:59.760 --> 01:06:06.880]  его делать для вырожденной матрицы у вас получится там деление на ноль в некотором момент вот
[01:06:06.880 --> 01:06:17.120]  нет вот да это спасибо за вопрос смотрите эта штука еще называется решение переопределенных
[01:06:17.120 --> 01:06:21.920]  переопределенных переопределенных линейных систем потому что вот здесь видите квадратная
[01:06:21.920 --> 01:06:28.440]  матрица стоит то есть мы не можем просто взять и сказать окей а минус первой потому что это
[01:06:28.440 --> 01:06:36.000]  квадратная штука вот и тут на самом деле хорошо бы еще мне добавить что м больше n да я добавлю
[01:06:36.000 --> 01:06:45.880]  высокая такая матрица вот и что такое решить такую систему ну вот ее не в некотором классическом
[01:06:45.880 --> 01:06:52.920]  как в подходе ее решать смысле минимизации просто невязки то есть найти такой x так чтобы
[01:06:52.920 --> 01:07:02.480]  произведение было можно ближе к правой части по второй норке вот поэтому вся эта балалайка
[01:07:02.480 --> 01:07:07.480]  идет сюда и вот решение записывается вот так при этом никто не гарантирует что это совместная
[01:07:07.480 --> 01:07:10.440]  будет система то есть у вас там невязка может быть не ноль запросто
[01:07:10.440 --> 01:07:22.520]  ну и прекрасно очень хорошо ну мы не мы ну окей значит кому-то будет полезно то что будет тут
[01:07:22.520 --> 01:07:33.480]  происходить так понятно в каком месте был непонятно как получаем это будет через пару месяцев пока
[01:07:33.480 --> 01:07:40.680]  просто как бы анонс анонс и проблемы которые этот анонс собой несет чему то есть ищем решение
[01:07:40.680 --> 01:07:47.400]  такой задачи у нее аналитическое решение такое проблемы с его явным применением в том что во
[01:07:47.400 --> 01:07:54.240]  первых тут может быть так плохая обусловленность то есть ошибки округления при обращении там не
[01:07:54.240 --> 01:07:58.640]  надо никогда обращать и второе то что она вообще может быть выражено как мы только что показали
[01:07:58.640 --> 01:08:10.880]  если столбцы а линии независимая такая вот сложная цепочка да да вот вот вот она а x минус
[01:08:10.880 --> 01:08:16.560]  b вторая норма в квадрате то есть я сюда добавлю какую-нибудь простую простой вид этой же задачи
[01:08:16.560 --> 01:08:34.480]  просто это в общем виде написано поговорим про это в свое время про как там что обрабатывать это
[01:08:34.480 --> 01:08:39.080]  немножко отдельная история так да в общем все это технология поэтому в принципе вам нужно
[01:08:39.080 --> 01:08:42.480]  вызвать правильную функцию в правильном языке программирование из правильной библиотеки и
[01:08:42.480 --> 01:08:51.920]  все вам сделает благополучно с некоторой точностью параметры запуска вам нужно понимать и про это мы
[01:08:51.920 --> 01:09:00.480]  будем немножко позже говорить да у этой штуки есть статистическая интерпретация через как
[01:09:00.480 --> 01:09:04.200]  будет сказать короче оценку максимального правдоподобия может быть кто-то про это слышал
[01:09:04.200 --> 01:09:09.960]  кто слышал в общем ладно про это в общем не удивляйтесь когда на статистике у вас такая же
[01:09:09.960 --> 01:09:15.360]  значит выплавить в некоторый момент вот она выплавится ровно вот вот в силу вот этого пункта так
[01:09:15.360 --> 01:09:20.680]  и последний на сегодня к сожалению опять ничего не успел но это стандартная история вот короче
[01:09:20.680 --> 01:09:25.520]  малоранговая опроксимация low rank approximation да я буду стараться давать всегда англоязычные
[01:09:25.520 --> 01:09:30.720]  термины чтобы вы могли искать литературу и источники более-менее по всему интернету вот
[01:09:30.720 --> 01:09:38.120]  так ну давайте смотрим на обозначение буковки все понятны отлично знаете фрабениус его норма
[01:09:38.120 --> 01:09:46.760]  ну тоже норма да только фрабениус вы нет фрабениус оба нормы это просто сумма
[01:09:46.760 --> 01:09:55.240]  квадрат ну короче корень и сумма квадратов всех элементов матрицы в общем тоже самое что для
[01:09:55.240 --> 01:10:02.760]  вектора l2 но не совсем ну то есть они они не друг другом не индуцируется так а про матрицы
[01:10:03.120 --> 01:10:12.680]  у вас что не было когда-нибудь ok ладно тогда я напомню в следующий раз может быть или да в
[01:10:12.680 --> 01:10:18.840]  следующий раз это будет уместно вот короче хотим найти дана некоторая прямоугольная матрица x ой
[01:10:18.840 --> 01:10:26.640]  а простите да вот она вот и хотим найти такую матрицу x ранга не больше к что короче они
[01:10:26.640 --> 01:10:35.360]  хорошо друг друга приближают понятна задача так ну давайте я напишу да надо
[01:10:35.360 --> 01:10:41.400]  будет сюда добавить фрабениус его норма да это ладно не хочется порт не хочет слайд конечно
[01:10:41.400 --> 01:10:58.120]  разбавлять ну давайте я напишу тогда то есть то есть это f ну вот так
[01:11:01.760 --> 01:11:05.600]  ну в общем тоже самое короче что было для вектора только для матрицы вы просто все
[01:11:05.600 --> 01:11:11.240]  складывайте с квадратами и не мучаетесь так буквально давайте еще пять минут я надеюсь
[01:11:11.240 --> 01:11:17.840]  я успею вот в общем геометрически это ну в смысле геометрически на картинке это вот так вот
[01:11:17.840 --> 01:11:25.520]  выглядит то есть ищем две матрицы на самом деле которые одна высокая другая длинная вот и их
[01:11:25.520 --> 01:11:32.640]  произведение должно давать приближать исходную матрицу да это называть сингулярно разложение
[01:11:32.640 --> 01:11:38.240]  имеет аналитическое решение хотя задача сложная в плане того что она не выпукло и у нее там не все
[01:11:38.240 --> 01:11:46.560]  хорошо со свойствами но о чудо есть аналитическое решение это раз и есть эффективные устойчивые
[01:11:46.560 --> 01:11:53.840]  методы которые это решение находят это два вот значит три матрицы две из которых унитарные то
[01:11:53.840 --> 01:12:00.160]  есть артегональные у нас все действительное вот и одна диагональная сигма вот берете первый
[01:12:00.160 --> 01:12:08.040]  ка столбцов ка строк и вас получается решение почему это важно ну это важно потому что нужно
[01:12:08.040 --> 01:12:14.720]  что-то зажимать и памяти всегда не хватает вот ну например возьмем картинку это типа изображение
[01:12:14.720 --> 01:12:23.960]  трехмерный тензор с такими размерностями вот и возьмем эффективный ранг для каждого цвета вот
[01:12:23.960 --> 01:12:32.080]  ну вот тут ранг ранг 10 вот я посчитал по каждому цвету сингулярное разложение состэкал каждую
[01:12:32.080 --> 01:12:43.240]  матричку получил вот такую картинку получилось джать ну типа вот во столько вот ну типа 3 3 процента
[01:12:43.240 --> 01:12:54.160]  вот то есть тройка здесь потому что три матрицы вот и вот выражение в числителе это по сути
[01:12:54.160 --> 01:13:00.640]  количество чисел которые надо хранить для того чтобы ну вот это короче хранить то есть тут
[01:13:00.640 --> 01:13:12.520]  вот вот здесь вот м на к тут n на к и тут диагональка вот значит это было 10 это 50 ну уже типа получше
[01:13:12.520 --> 01:13:22.720]  и 100 кажется почти ну тут по краям есть некоторые артефакты вот здесь вот а так в целом вроде
[01:13:22.720 --> 01:13:30.520]  довольно неплохо ну и типа в три раза вот надо меньше элементов хранить чтобы можно было потом
[01:13:30.520 --> 01:13:38.200]  восстановить как восстановить изображение вот но это все было да вот еще но вот это отношение того
[01:13:38.200 --> 01:13:46.880]  сколько элементов надо хранить если воспользоваться вот этим представлением виде произведения к тому
[01:13:46.880 --> 01:13:57.240]  сколько было изначально то есть три матрицы по 493 700 вот так 100 150 да но в общем как ранг определить
[01:13:57.240 --> 01:14:05.040]  по убыванию сингулярного чисел то есть по убыванию того что на диагонали стоит вот так ну и ладно давайте
[01:14:05.040 --> 01:14:10.400]  это это я в следующий раз более подробно расскажу так все всем спасибо в следующий раз продолжим с
