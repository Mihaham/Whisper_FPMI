[00:00.000 --> 00:13.000]  Сейчас у нас пятое занятие по теху, и сегодня основная
[00:13.000 --> 00:19.140]  тема – это как рисовать, и цель – научиться рисовать
[00:19.140 --> 00:22.500]  эффективно в нескольких смыслах.
[00:22.500 --> 00:26.500]  В первом, чтобы сложные рисунки можно было не пытаться
[00:26.500 --> 00:30.100]  как-то рисовать рукой, а как-то упрощать процесс
[00:30.100 --> 00:31.100]  рисования.
[00:31.100 --> 00:33.500]  А второе, чтобы можно было легко в паре строчек изменить
[00:33.500 --> 00:36.540]  какие-то параметры рисунка, например, цвет всех смолгательных
[00:36.540 --> 00:38.100]  линий или что-то такое.
[00:38.100 --> 00:57.900]  В общем, все будет состоять из двух частей.
[00:57.900 --> 01:03.100]  Сначала какие-то общие слова про тикс, во второй
[01:03.100 --> 01:08.940]  части уже более сложные учисления, более сложные,
[01:08.940 --> 01:12.620]  более удобные тем временем, и в конце рассмотрим какие-то
[01:12.620 --> 01:13.620]  примеры.
[01:13.620 --> 01:22.020]  Да, для того, чтобы тикс начал работать, как и с большинством
[01:22.020 --> 01:25.700]  в техе, нужно подключить соответствующую либу,
[01:25.700 --> 01:32.340]  вот, да, это либо тикс, вот, ну и все, уже можно прямо
[01:32.340 --> 01:34.420]  рисовать в первой строчке.
[01:34.420 --> 01:36.740]  Вот, самый простой рисунок, который я смог придумать,
[01:36.740 --> 01:37.740]  выглядит примерно так.
[01:37.740 --> 01:45.020]  Чуть позже мы рассмотрим, что здесь значит в этой строчке.
[01:45.020 --> 01:48.300]  Вот, но, в общем, хочу обратить внимание, во-первых, на точку
[01:48.300 --> 01:49.300]  запятой в конце.
[01:49.300 --> 01:52.100]  Часто можно про нее забыть, и дальше будут какие-то
[01:52.100 --> 01:53.100]  странные ошибки.
[01:53.100 --> 01:54.100]  Вот.
[01:54.100 --> 01:58.300]  Ну и про единицы измерений тоже стоит сказать.
[01:59.300 --> 02:05.740]  То есть, в пойнтсах, в инчах, в каких-то еще единицах,
[02:05.740 --> 02:06.740]  они все какие-то разные.
[02:06.740 --> 02:10.580]  Ну, подробнее про них можно в Гугле посчитать, но, в
[02:10.580 --> 02:14.940]  общем, все можно, ну, можно указать в разных единицах,
[02:14.940 --> 02:15.940]  все длинные.
[02:15.940 --> 02:16.940]  Вот, теперь ближе к синтезису.
[02:16.940 --> 02:17.940]  У меня есть два вопроса.
[02:17.940 --> 02:18.940]  Во-первых, правда ли, что тут нужен математический
[02:18.940 --> 02:19.940]  режим?
[02:19.940 --> 02:20.940]  Оно просто работает самостоятельно, без долгого, без ничего?
[02:20.940 --> 02:21.940]  Какой режим нужен?
[02:21.940 --> 02:22.940]  Математический.
[02:22.940 --> 02:27.940]  А, нет, тут никакой математический режим не нужен, потому что
[02:28.580 --> 02:29.580]  он не нужен.
[02:29.580 --> 02:30.580]  Оно работает, ну, то есть, вот эта строчка, она скимпилится
[02:30.580 --> 02:37.580]  просто в строчке как текст, как текст обычный, но, понятно
[02:37.580 --> 02:40.060]  то, что, скорее всего, это будет обернуто в окружение
[02:40.060 --> 02:43.300]  фиджа, потому что это какой-то плавающий объект, и вообще
[02:43.300 --> 02:45.860]  это же какая-то картинка, и все-таки она для всех
[02:45.860 --> 02:50.500]  картинок в техе, принято их окружать в окружение
[02:50.500 --> 02:51.500]  фиджа.
[02:51.500 --> 02:52.500]  Вот.
[02:52.500 --> 02:55.500]  Поэтому, нет, математический мод тут вообще ни при чем,
[02:55.500 --> 02:56.500]  и не нужен.
[02:57.060 --> 02:58.060]  Окей.
[02:58.060 --> 02:59.060]  Спасибо.
[02:59.060 --> 03:00.060]  Тогда второй вопрос.
[03:00.060 --> 03:01.060]  Точка запятой критична.
[03:01.060 --> 03:03.060]  Поскольку мы пока что живем в варианте тигза, который
[03:03.060 --> 03:06.060]  модификатор, который поможет от тигз до конца строки,
[03:06.060 --> 03:09.060]  или это же будет важно, когда мы будем делать большие
[03:09.060 --> 03:11.060]  картинки по много строкам, тоже будет точка запятой?
[03:11.060 --> 03:14.060]  Вообще, когда мы будем делать, ну, чуть подробнее скажу,
[03:14.060 --> 03:19.060]  но, в общем, да, как только мы зашли в тело тигза, тигз
[03:19.060 --> 03:22.060]  начинает распарствовать все на своем языке, и у него
[03:22.060 --> 03:25.060]  для, ну, для удобства ему все должно оказываться.
[03:25.060 --> 03:26.060]  Точка запятой.
[03:26.060 --> 03:27.060]  Вот.
[03:27.060 --> 03:28.060]  Это также будет...
[03:28.060 --> 03:30.060]  Ну, то есть, просто некоторые команды не могут даже помечать
[03:30.060 --> 03:32.060]  одну строчку по своей длине.
[03:32.060 --> 03:33.060]  Вот.
[03:33.060 --> 03:35.060]  Но, чтобы понять, где закончится строчка, нужна точка запятой.
[03:35.060 --> 03:38.060]  Ну, имеется в виду, вот, строчка синтезическая с точки
[03:38.060 --> 03:39.060]  зрения тигза.
[03:42.060 --> 03:43.060]  Да.
[03:43.060 --> 03:47.060]  Теперь, в общем, самые основы, это вот эти две черточки,
[03:47.060 --> 03:51.060]  которые были, это синтаксист, так называемый, пути.
[03:51.060 --> 03:52.060]  Вот.
[03:52.060 --> 03:54.060]  Собственно, это основной блок всех рисунков в тигзе.
[03:54.060 --> 03:58.060]  Он стоит из точек и, ну, таких прямых.
[03:58.060 --> 03:59.060]  Вот.
[03:59.060 --> 04:02.060]  А теперь уже, да, мы поместили это в окружение тигз-пигзи,
[04:02.060 --> 04:08.060]  потому что, ну, так, скорее всего, обычные рисунки у
[04:08.060 --> 04:11.060]  вас будут начинаться, ну, будут в окружении тигз-пигзи.
[04:11.060 --> 04:12.060]  Вот.
[04:12.060 --> 04:13.060]  Дальше идет...
[04:13.060 --> 04:16.060]  Строка начинается с команды, что нужно сделать.
[04:16.060 --> 04:19.060]  Команда будет раздвинуть, например, расположить,
[04:19.060 --> 04:23.060]  задать узел, потом мы посудим, что это еще что-то, или,
[04:23.060 --> 04:24.060]  например, нарисовать.
[04:24.060 --> 04:25.060]  Вот.
[04:25.060 --> 04:26.060]  И вот.
[04:26.060 --> 04:28.060]  Эта команда начинается нарисовать, и дальше указывается
[04:28.060 --> 04:29.060]  путь.
[04:29.060 --> 04:31.060]  И, соответственно, вот.
[04:31.060 --> 04:34.060]  Сначала берется точка с координатами минус 1 на
[04:34.060 --> 04:40.060]  5 по Х и ноль по Y, потом она движется сюда, потом сюда
[04:40.060 --> 04:41.060]  и сюда.
[04:41.060 --> 04:44.060]  Ну, и по пути, как бы, вот, ну, по пути оставляет
[04:44.060 --> 04:45.060]  за собой рисунок.
[04:45.060 --> 04:53.060]  Теперь, да, пару слов, пару слов про то, что уже мы говорили
[04:53.060 --> 05:03.060]  как разные способы, вот, потому что, в общем, этот
[05:03.060 --> 05:07.060]  способ гораздо предпочтительнее, потому что у вас не будут,
[05:07.060 --> 05:08.060]  скорее всего, односрочных рисунков.
[05:08.060 --> 05:10.060]  То есть все односрочные рисунки, которые будут
[05:10.060 --> 05:14.060]  здесь, это вот просто самые-самые минимальные примеры
[05:14.060 --> 05:21.060]  а все рисунки стоят там из 20-ти, срок из 30-ти может.
[05:21.060 --> 05:25.060]  Соответственно, вот, ну, тут больше нечем сказать.
[05:25.060 --> 05:28.060]  В общем, я иногда буду писать так, но подразумевается
[05:28.060 --> 05:29.060]  вот так вот.
[05:29.060 --> 05:30.060]  Да.
[05:30.060 --> 05:32.060]  Ну, и, еще раз, каждая строчка, именно смысловая строчка,
[05:32.060 --> 05:39.060]  заканчивается точкой за пятой.
[05:39.060 --> 05:47.060]  Следующий шаг развития умения рисовать, это умение рисовать
[05:47.060 --> 05:48.060]  круги.
[05:48.060 --> 05:50.060]  Ну, то есть с прямыми уже разобрались и, в принципе,
[05:50.060 --> 05:54.060]  не доставляет никаких трудностей, ну, чисто рисовать какие-то
[05:54.060 --> 05:58.060]  полигоны, квадраты или что-то такое, вот, проблема уже
[05:58.060 --> 05:59.060]  с кругами.
[05:59.060 --> 06:07.060]  Вот, но для этого есть, есть команда circle, но это не команда
[06:07.060 --> 06:11.060]  рисования, это уже команда в самой, самой, самой фигуры.
[06:11.060 --> 06:14.060]  Вот, то есть мы опять начинаем, ну, тикс, то, что я говорил,
[06:14.060 --> 06:18.060]  то, что он может опускаться, если мы находимся внутри
[06:18.060 --> 06:21.060]  окружения тикс-пикчер, дальше мы начинаем рисовать,
[06:21.060 --> 06:24.060]  и дальше, когда у нас была просто точка, просто точка
[06:24.060 --> 06:29.060]  или кусок пути, то вот этот circle 10, ну, circle из скобочков
[06:29.060 --> 06:32.060]  радиус рассматривается как кусок пути, вот, как
[06:32.060 --> 06:36.060]  отдельная точка или там прямая, или две прямых, вот,
[06:36.060 --> 06:38.060]  и рисуют соответственно кружок.
[06:38.060 --> 06:43.060]  Вот, чтобы нарисовать эллипс синтаксис такой, а чтобы
[06:43.060 --> 06:46.060]  нарисовать повернутый эллипс, например, можно нарисовать
[06:46.060 --> 06:49.060]  обычный эллипс, но передать ему какой-то модификатор.
[06:49.060 --> 06:51.060]  Модификаторы, поскольку они необязательно, как это
[06:51.060 --> 06:55.060]  принято, передаются в квадратных скобках, вот, их расположение
[06:55.060 --> 07:02.060]  обычно ни на что не влияет, но, в общем, принято располагать
[07:02.060 --> 07:06.060]  их перед тем, как они начинают использоваться.
[07:06.060 --> 07:09.060]  То есть мы хотим повернуть вот эллипс, мы хотим повернуть
[07:09.060 --> 07:12.060]  эллипс и пишем перед эллипсом, поэтому повернуть 30.
[07:12.060 --> 07:21.060]  Вот, как-то так.
[07:21.060 --> 07:24.060]  Следующий еще довольно популярный пример, вот, ну,
[07:24.060 --> 07:25.060]  насчет упрощения рисунков.
[07:25.060 --> 07:27.060]  Например, нам нужно рисовать сетку.
[07:27.060 --> 07:30.060]  То есть понятно, что прямые круги можно рисовать, ну,
[07:30.060 --> 07:34.060]  какими-то способами, типа там, ну, поинты или что-то
[07:34.060 --> 07:35.060]  подобное.
[07:35.060 --> 07:41.060]  Вот, но здесь уже начинаем использовать какие-то упрощения,
[07:41.060 --> 07:43.060]  какие-то готовые решения.
[07:43.060 --> 07:46.060]  Вот, например, есть готовое решение для рисования
[07:46.060 --> 07:47.060]  сетки.
[07:47.060 --> 07:48.060]  Вот.
[07:48.060 --> 07:50.060]  Опять-таки смотрим, что здесь происходит.
[07:50.060 --> 07:53.060]  У нас есть несколько необязательных аргументов.
[07:53.060 --> 07:56.060]  Они, ну, у них есть какие-то значения по умолчанию,
[07:56.060 --> 07:59.060]  поэтому они необязательные, вроде единичка или что-то
[07:59.060 --> 08:00.060]  такое.
[08:00.060 --> 08:03.060]  Но можно их уточнять.
[08:03.060 --> 08:04.060]  Вот.
[08:04.060 --> 08:08.060]  Дальше, дальше идет команда grid, ну, то есть
[08:08.060 --> 08:13.060]  нарезать сетку.
[08:13.060 --> 08:15.060]  Вот.
[08:15.060 --> 08:17.060]  Дальше идет размер сетки.
[08:17.060 --> 08:18.060]  Вот.
[08:18.060 --> 08:24.060]  Ну, подгоняется под, то есть размер – это, ну,
[08:24.060 --> 08:27.060]  сколько, не больше, чем сколько она будет занимать,
[08:27.060 --> 08:29.060]  и при этом пытается подгонять максимальное количество
[08:29.060 --> 08:30.060]  шагов.
[08:30.060 --> 08:32.060]  То есть, видите, здесь получается пять шагов, потому что
[08:32.060 --> 08:35.060]  степ 0,4, а здесь 4, потому что степ 0,5.
[08:35.060 --> 08:38.060]  В этой строчке у нас появилось что-то новое.
[08:38.060 --> 08:41.060]  Перед командой мы получили координаты.
[08:41.060 --> 08:42.060]  Вот.
[08:42.060 --> 08:46.060]  Это означает, где мы должны нарисовать, в каком месте
[08:46.060 --> 08:49.060]  он должен начать рисовать объект.
[08:49.060 --> 08:53.060]  У каждого объекта вот эта точка, от которой он
[08:53.060 --> 08:56.060]  рисуется разно, у круга это центр, у сетки я точно
[08:56.060 --> 08:57.060]  не помню.
[08:57.060 --> 09:00.060]  У точки, понятно, самоточка, потому что самоточка рисуется
[09:00.060 --> 09:05.060]  вот так, как раз без всяких команд.
[09:05.060 --> 09:06.060]  Вот.
[09:06.060 --> 09:08.060]  Ну, дальше уже будем смотреть ближе к примерам.
[09:08.060 --> 09:11.060]  Ну, а тут мы уже научились говорить, где рисовать.
[09:11.060 --> 09:14.060]  Ну, вот, видимо, мы указываем левый нижний и правый верхний
[09:14.060 --> 09:15.060]  угол.
[09:15.060 --> 09:17.060]  А вот что было бы, если бы я сделал, скажем, х-степ
[09:17.060 --> 09:19.060]  не кратный 2, но типа 0,3?
[09:19.060 --> 09:22.060]  Да-да-да, если бы было 0,3, то он бы подобрал максимально,
[09:22.060 --> 09:24.060]  ну, он бы заполнял пока может, а потом сдался.
[09:24.060 --> 09:28.060]  То есть те прямые, которые по вертикали, они бы нарисовались
[09:28.060 --> 09:31.060]  сколько можно, а горизонтальные бы кончились не на них,
[09:31.060 --> 09:34.060]  а подальше, потому что вертикальный был на 1,8, а дальше были
[09:34.060 --> 09:35.060]  еще горизонтальные.
[09:35.060 --> 09:38.060]  Да, то есть если бы шаг был 0,3, то тут были такие зубцы
[09:38.060 --> 09:39.060]  торчали.
[09:39.060 --> 09:40.060]  Да, понял.
[09:40.060 --> 09:41.060]  То есть она просто клипается.
[09:41.060 --> 09:44.060]  Ну, то есть внутренне это устроено, она рисуется
[09:44.060 --> 09:47.060]  больше чем нужно, потом клипается.
[09:47.060 --> 09:48.060]  Вот.
[09:48.060 --> 09:49.060]  Просто клипается.
[09:49.060 --> 09:51.060]  Да, теперь немного про компетацию объектов.
[09:51.060 --> 09:52.060]  Вот.
[09:52.060 --> 09:53.060]  Вот пример, как она клипается, например.
[09:53.060 --> 09:56.060]  Давайте теперь более сложный рисунок.
[09:56.060 --> 10:00.060]  Здесь я, видите, вначале не пишу тикс, я здесь подразумеваю
[10:00.060 --> 10:02.060]  то, что все вот это в окружении тикс-пикча.
[10:02.060 --> 10:08.060]  Итак, сначала мы рисуем в корнях 0,0, кружок радиусом
[10:08.060 --> 10:12.060]  10 пунктов нарисовали.
[10:12.060 --> 10:15.060]  Дальше мы рисуем опять в том же, у эллипса тоже
[10:15.060 --> 10:18.060]  берется центр за отчетную точку.
[10:18.060 --> 10:22.060]  Рисуем эллипс 20 и 10 пунктов.
[10:22.060 --> 10:25.060]  Дальше делаем то же самое, только повернуто на 3 градусов.
[10:25.060 --> 10:27.060]  Вот этот повернутый эллипс.
[10:27.060 --> 10:28.060]  Вот.
[10:28.060 --> 10:30.060]  И дальше, смотрите, дальше мы рисуем сетку.
[10:30.060 --> 10:31.060]  Вот.
[10:31.060 --> 10:33.060]  Мы тут не указывали отдельно x-step, y-step.
[10:33.060 --> 10:36.060]  Команда просто step задает и x-step, и y-step.
[10:36.060 --> 10:39.060]  Ну, потому что нам уже квадратная сетка, это удобно.
[10:39.060 --> 10:42.060]  Да, как было верно замечено, это крадиент левого нижнего
[10:42.060 --> 10:44.060]  угла, это крадиент правого верхнего угла.
[10:44.060 --> 10:45.060]  Вот.
[10:45.060 --> 10:48.060]  Да, мы говорим, где рисовать.
[10:48.060 --> 10:49.060]  Говорим, рисовать сетку.
[10:49.060 --> 10:51.060]  Говорим, докуда ее рисовать.
[10:51.060 --> 10:52.060]  Вот.
[10:52.060 --> 10:55.060]  И еще у нас появились дополнительные параметры, необязательные.
[10:55.060 --> 10:57.060]  Grey и everything.
[10:57.060 --> 10:58.060]  Вот.
[10:58.060 --> 11:02.060]  Это, как можно догадаться, то, что означает за стиль
[11:02.060 --> 11:05.060]  рисования, ну, именно цвет и толщину.
[11:05.060 --> 11:09.060]  Если сравнить с предыдущим слайдом, ну, даже не с предыдущим
[11:09.060 --> 11:15.060]  слайдом, а просто с рисунками кругов и эллипсов, линии
[11:15.060 --> 11:17.060]  стали потоньше и посерее.
[11:17.060 --> 11:21.060]  То есть, они уже выполняют реальную функцию фона, и
[11:21.060 --> 11:24.060]  так уже выглядит куда приятнее.
[11:24.060 --> 11:26.060]  Да, и насчет, опять-таки, удобства рисования.
[11:26.060 --> 11:30.060]  Такой сложный рисунок рисовать руками, ну, может быть,
[11:30.060 --> 11:33.060]  довольно долго, особенно если мы до этого, например,
[11:33.060 --> 11:34.060]  рисовали эти рисунки.
[11:34.060 --> 11:37.060]  А здесь копирование рисунков, просто копирование строчек,
[11:37.060 --> 11:41.060]  что, ну, в общем, ускоряет и делает процесс более
[11:41.060 --> 11:42.060]  контролируемым.
[11:42.060 --> 11:43.060]  Вот.
[11:43.060 --> 11:47.060]  Теперь поговорим про тему идентификатора, которую
[11:47.060 --> 11:50.060]  только что обозначил.
[11:50.060 --> 11:51.060]  Вот.
[11:51.060 --> 11:54.060]  Здесь у нас сетка используется как, ну, просто какой-то
[11:54.060 --> 11:56.060]  фон, то есть, вспомогательные линии.
[11:56.060 --> 11:57.060]  Вот.
[11:57.060 --> 11:59.060]  И мы потратили для того, чтобы сделать ее вспомогательной
[11:59.060 --> 12:01.060]  линии целых два аргумента.
[12:01.060 --> 12:03.060]  Серый и очень тонкий.
[12:03.060 --> 12:04.060]  Вот.
[12:04.060 --> 12:07.060]  Потом мы сказали, серый очень тонкий, а в голове хотели
[12:07.060 --> 12:09.060]  сказать, нам нужна вспомогательная линия.
[12:09.060 --> 12:10.060]  Вот.
[12:10.060 --> 12:13.060]  Причем, например, мы можем рисовать не только сетку
[12:13.060 --> 12:16.060]  вспомогательной линии, но и какие-то отдельные части
[12:16.060 --> 12:18.060]  рисунка нам нужны как вспомогательная линия.
[12:18.060 --> 12:21.060]  Просто какая-то линия, может, кружок отдельный, еще что-то
[12:21.060 --> 12:22.060]  более сложное.
[12:22.060 --> 12:23.060]  Вот.
[12:23.060 --> 12:27.060]  И мы можем сделать отдельный стиль для них.
[12:27.060 --> 12:33.060]  Синтакси задания стиля очень, ну, такой неочевидный.
[12:33.060 --> 12:34.060]  Вот.
[12:34.060 --> 12:37.060]  Но, если коротко, тиксет – это команда, которая задает
[12:37.060 --> 12:40.060]  какие-то странные настройки для тигза.
[12:40.060 --> 12:41.060]  Вот.
[12:41.060 --> 12:44.060]  Подробнее про нее можно почитать где-то в гугле,
[12:44.060 --> 12:46.060]  но, например, для такого решения.
[12:46.060 --> 12:49.060]  Мы указываем свой стиль, в данном случае helplines.
[12:49.060 --> 12:50.060]  Вот.
[12:50.060 --> 12:53.060]  И дальше указываем то, что мы, ну, свой не стиль, свой,
[12:53.060 --> 12:57.060]  как бы, резервируем имя helplines.
[12:57.060 --> 13:00.060]  Он учитывает с пробелой все такое, потому что там
[13:00.060 --> 13:02.060]  главная запятая, чтобы не было, потому что он через
[13:02.060 --> 13:03.060]  запятую их разделяет.
[13:03.060 --> 13:04.060]  Вот.
[13:04.060 --> 13:05.060]  И дальше мы конкретизируем, что для этого имени нас
[13:05.060 --> 13:06.060]  интересует некий стиль.
[13:06.060 --> 13:07.060]  Вот.
[13:07.060 --> 13:10.060]  И вот эта точка стиля – это поле его, типа.
[13:10.060 --> 13:13.060]  И мы приравниваем его набору из параметров.
[13:13.060 --> 13:15.060]  Ну, собственно, очень тонкий и серый.
[13:15.060 --> 13:16.060]  Вот.
[13:16.060 --> 13:18.060]  И теперь эта строчка выглядит немного по-другому.
[13:18.060 --> 13:20.060]  Мы говорим то, что у нас t должно быть, ну, пол сантиметра.
[13:20.060 --> 13:23.060]  И еще это должно быть нарисовано вспомогательными линиями.
[13:23.060 --> 13:25.060]  Мы вот прям, явно говорим вспомогательные линии.
[13:25.060 --> 13:27.060]  И, ну, кардианты те же самые оставляем.
[13:27.060 --> 13:29.060]  Мы получаем то, что мы хотели, только теперь более читаемо.
[13:29.060 --> 13:32.060]  То есть, ну, в общем, да.
[13:37.060 --> 13:40.060]  Стиль – очень удобная штука.
[13:40.060 --> 13:48.060]  Со временем рисования понятно, что стиль сильно упрощает
[13:48.060 --> 13:51.060]  жизнь, потому что объекты разбиваются на какие-то классы.
[13:51.060 --> 13:54.060]  У нас может быть, например, ну, вспомогательность
[13:54.060 --> 13:55.060]  вспомогательная.
[13:55.060 --> 13:58.060]  Например, мы можем последовательно рисовать рисунок,
[13:58.060 --> 14:00.060]  и нам хочется, например, мы перерисовываем какой-то
[14:00.060 --> 14:01.060]  рисунок очень постепенно.
[14:01.060 --> 14:04.060]  И нам надо, хочется, чтобы какие-то части рисунка были
[14:04.060 --> 14:07.060]  ну, ново добавленные были выделены как новые,
[14:07.060 --> 14:10.060]  а только что удаленные были помещены как старые.
[14:10.060 --> 14:12.060]  Тогда такое последовательное изменение рисунка будет
[14:12.060 --> 14:15.060]  сооружаться просто копированием предыдущего рисунка,
[14:15.060 --> 14:20.060]  помещанием удаленных...
[14:20.060 --> 14:21.060]  объектов, как...
[14:21.060 --> 14:23.060]  стилем удаленные, а новых помещением
[14:23.060 --> 14:25.260]  а с новым помещением стилем новое, и это будет сразу
[14:25.260 --> 14:27.620]  отражаться в картинке, как так хочется.
[14:27.620 --> 14:33.060]  Сейчас немного больше про синтаксис, вот, например,
[14:33.060 --> 14:37.720]  мы сделали свой объект helplines, и у него стиль вот очень
[14:37.720 --> 14:40.340]  тонкий, и цвет задали немного по-другому.
[14:40.340 --> 14:46.060]  Сейчас объясню, что значит, вот хэштег 1 у вас уже вроде
[14:46.060 --> 14:49.620]  было, про то, как делать свои команды и макросы,
[14:49.620 --> 14:52.740]  вот, это ровно то же самое, это первый аргумент макроса,
[14:52.740 --> 14:54.540]  то есть сейчас helplines у нас будет принимать какие-то
[14:54.540 --> 14:55.540]  аргументы.
[14:55.540 --> 14:58.260]  Вот, и дальше мы указываем то, что дефолтный принимаемый
[14:58.260 --> 15:00.620]  аргумент helplines равен черным.
[15:00.620 --> 15:02.620]  Теперь как это применять?
[15:02.620 --> 15:06.020]  Да, теперь мы делаем следующий стиль, вспомогательная
[15:06.020 --> 15:07.020]  сетка.
[15:07.020 --> 15:12.820]  Вспомогательная сетка принимает своим параметром, вспомогательная
[15:12.820 --> 15:16.140]  сетка, она всегда вспомогательная, черными линиями, и у нее
[15:16.140 --> 15:17.940]  в качестве параметра остается все-таки шаг, потому что
[15:17.940 --> 15:21.340]  шаг надо, ну, стоит варьировать под какие-то свои цели, вот,
[15:21.340 --> 15:25.260]  ну и дальше задаем дефолтное значение для шага равным
[15:25.260 --> 15:26.260]  на 5 сантиметров.
[15:26.260 --> 15:27.260]  Вот.
[15:27.260 --> 15:31.260]  И дальше, да, и вот пример, как задавать значение, значение
[15:31.260 --> 15:35.460]  задается через равно, то есть вот helplines равно black означает
[15:35.460 --> 15:40.940]  вызвать стиль helplines с вот этим параметром один
[15:40.940 --> 15:41.940]  равным black'у.
[15:41.940 --> 15:44.740]  То есть мы black поставим сюда, вот, здесь мы могли
[15:44.740 --> 15:47.740]  написать helgrid равно один сантиметр, и тогда бы они
[15:47.740 --> 15:49.420]  стали два раза больше, потому что один сантиметр
[15:49.420 --> 15:50.420]  поставился сюда.
[15:50.420 --> 15:52.860]  Бесправимцев передаем, передается дефолтное значение.
[15:52.860 --> 15:53.860]  Вот.
[15:53.860 --> 15:56.820]  Теперь наша строчка стала еще более сочетаемая, теперь
[15:56.820 --> 15:59.220]  мы просто говорим вспомогательная сетка и все тут.
[15:59.220 --> 16:02.820]  И отдельно где-то там, единым для всего проекта мы можем
[16:02.820 --> 16:06.300]  менять настройки этой вспомогательной сетки.
[16:06.300 --> 16:12.020]  Да, мы уже проговорили про всякие опции рисунка
[16:12.020 --> 16:17.620]  по типу тонкие, толстые или цвета, вот, ну, собственно,
[16:17.620 --> 16:20.980]  есть три основных стиля, я больше не придумал.
[16:20.980 --> 16:26.900]  Сначала идет толщина, ультра это совсем прям V, чуть-чуть
[16:26.900 --> 16:27.900]  послабее.
[16:27.900 --> 16:36.460]  Понятно, thin тонкий, semi-thick это что-то посередине, толстый,
[16:36.460 --> 16:37.460]  очень толстый, совсем толстый.
[16:37.460 --> 16:38.460]  Вот.
[16:38.460 --> 16:39.460]  Цвета.
[16:39.460 --> 16:44.380]  Есть список цветов, просто человеческий гуглится цвета
[16:45.220 --> 16:46.220]  Вот.
[16:46.220 --> 16:47.220]  Ну, цвета тикс, в смысле.
[16:47.220 --> 16:48.220]  Вот.
[16:48.220 --> 16:49.220]  Ну, это gray, red, blue.
[16:49.220 --> 16:50.220]  В общем, если пробовать, например, white или black, то
[16:50.220 --> 16:51.220]  скорее всего это сработает.
[16:51.220 --> 16:54.100]  Дальше иногда интересует более тонкая настройка.
[16:54.100 --> 16:56.940]  И, например, цвет может давать таким, казалось бы, немного
[16:56.940 --> 16:59.100]  сложным синтаксисом, но тут имеется в виду то, что
[16:59.100 --> 17:03.180]  RGB за максимум принимается 255 и дальше смешиваются
[17:03.180 --> 17:09.900]  три цвета, то есть половинка синего, 66,255 зеленого и 21
[17:09.900 --> 17:10.900]  красного.
[17:10.900 --> 17:14.140]  То есть он будет не максимально по яркости, ну, в общем, схема
[17:14.140 --> 17:15.140]  понятна.
[17:15.140 --> 17:20.380]  А дальше можно миксовать словесные цвета, ну, или
[17:20.380 --> 17:22.260]  не только словесные, на самом деле, можно миксовать
[17:22.260 --> 17:23.260]  два цвета.
[17:23.260 --> 17:25.740]  Эти цвета могут быть заданы также этим образом.
[17:25.740 --> 17:26.740]  Вот.
[17:26.740 --> 17:27.740]  Что оценивает такая запись?
[17:27.740 --> 17:32.020]  Это означает то, что взять вот 10% первого цвета, а остальное
[17:32.020 --> 17:33.020]  залить вторым цветом.
[17:33.020 --> 17:35.020]  Ну, он смешивает просто их.
[17:35.020 --> 17:36.020]  Вот.
[17:36.020 --> 17:38.300]  И прозрачность это мы смешиваем с ничем, то есть мы берем
[17:38.300 --> 17:41.180]  зеленый и смешиваем, ну, с ничем смешиваем, то есть
[17:41.180 --> 17:42.180]  зеленый.
[17:42.180 --> 17:45.260]  10% зеленого, а остальное не брать.
[17:45.260 --> 17:46.620]  Поэтому синтез сейчас такой схожий.
[17:46.620 --> 17:52.740]  И дальше еще все-таки тикс же рисуют линии обычно,
[17:52.740 --> 17:53.740]  вот.
[17:53.740 --> 17:56.660]  Ну, если мы не говорим точку, то в целом он рисует линии.
[17:56.660 --> 17:57.660]  Вот.
[17:57.660 --> 17:58.940]  И кружочки, и все рисуют линии.
[17:58.940 --> 18:05.020]  Поэтому еще одна характеристика линии есть, она может быть
[18:05.020 --> 18:10.540]  штрихованной, может быть пунктирной вроде называется.
[18:10.540 --> 18:11.540]  Вот.
[18:11.540 --> 18:14.940]  Также есть миллион других вариантов, которые реже
[18:14.940 --> 18:15.940]  используются в жизни.
[18:15.940 --> 18:18.780]  Есть штрих-пунктирная, есть штрих-пунктирная.
[18:18.780 --> 18:23.340]  Помимо таких обычных классических, которые я только что назвал,
[18:23.340 --> 18:25.780]  еще есть какие-то зигзагообразные, еще какая-то.
[18:25.780 --> 18:28.740]  Все это есть или в дополнительной библиотеке, или еще где-то,
[18:28.740 --> 18:30.660]  но это все про то же самое.
[18:30.660 --> 18:36.660]  Просто гуглите Line Style в тигзе и будет счастье, если нужно.
[18:36.660 --> 18:37.660]  Ну, если нужно что-то такое.
[18:37.660 --> 18:38.660]  Так.
[18:38.660 --> 18:39.660]  Про опции.
[18:39.660 --> 18:40.660]  Рисуем.
[18:40.660 --> 18:50.100]  У рисования есть несколько опций встроенных, то есть
[18:50.100 --> 18:54.660]  можно передавать просто аргументы, вот параметры
[18:54.660 --> 19:00.700]  передавать для рисования линии, цвет линии, толщина
[19:00.700 --> 19:06.740]  линии, стиль линии, передаются просто в одну, ну просто
[19:06.740 --> 19:10.380]  в квадратные скобочки, перед тем, как рисовать.
[19:10.380 --> 19:16.420]  Однако, например, когда мы рисуем какой-то полигон,
[19:16.420 --> 19:20.620]  мы хотим, например, его залить, ну, нам может такое
[19:20.620 --> 19:21.620]  понадобится.
[19:21.620 --> 19:26.820]  Для этого есть специальная команда, параметр Fill, которым
[19:26.820 --> 19:28.540]  можно передать аргумент цвет.
[19:28.540 --> 19:33.180]  Ну, без аргумента его использовать нельзя, нет, может можно
[19:33.180 --> 19:34.180]  даже, не знаю.
[19:34.260 --> 19:36.260]  На общем, без аргумента его использовать как-то
[19:36.260 --> 19:39.540]  неразумно, вот, ему придается аргумент цвет.
[19:39.540 --> 19:40.540]  Вот.
[19:40.540 --> 19:43.780]  Да, в этой строчке, вот, пример зачем нужно точка
[19:43.780 --> 19:46.060]  запятой, потому что, ну, здесь, понятно, продолжать
[19:46.060 --> 19:48.980]  вообще неудобно, а линия как бы еще не закончилась.
[19:48.980 --> 19:49.980]  Ну и вот.
[19:49.980 --> 19:55.220]  То есть тигз сам по себе и энтер игнорирует, и пробела,
[19:55.220 --> 19:58.820]  ну, в большинстве своем, как и тех.
[19:58.900 --> 20:04.180]  Есть полезный макро, ну, полезный шорткат Cycle, как
[20:04.180 --> 20:06.220]  я уже сказал, когда мы нарисовали полигон, в общем, он нужен
[20:06.220 --> 20:07.220]  для того, чтобы замкнуть.
[20:07.220 --> 20:12.500]  То есть мы из 0.0 пошли в 1.0, из 1.0 пошли в 1.1, из 1.1 пошли
[20:12.500 --> 20:16.740]  в 0.1, дальше хочется сказать 0.0, но опять-таки копировать
[20:16.740 --> 20:20.700]  плохо, ну, в смысле не копировать, а если можно избежать повторений
[20:20.700 --> 20:24.580]  чего-то в коде, лучше избегать, поэтому придумали Cycle.
[20:24.580 --> 20:26.420]  То есть, если мы поменяем там, нам надо будет поменять
[20:26.420 --> 20:28.260]  только в самом начале стартовую точку.
[20:28.260 --> 20:34.820]  Ну, вот еще один пример, просто, еще один пример.
[20:34.820 --> 20:39.180]  Да, здесь мы нарисовали, то есть здесь был обычный
[20:39.180 --> 20:41.180]  путь, а здесь началось что-то новое.
[20:41.180 --> 20:46.340]  Здесь сразу две новых штуки случились.
[20:46.340 --> 20:48.820]  Первое – это вот такой синтаксис.
[20:48.820 --> 20:53.420]  Вот, точку, точку, можно задавать не так, как в декардах
[20:53.420 --> 20:56.140]  кардиналах, ну, мы как-то с вами привыкли уже, не особо
[20:56.140 --> 20:58.980]  обсуждать, а то, что у нас x, y, x, y, вот, но иногда
[20:58.980 --> 21:01.780]  удобно в полярных задавать, особенно для каких-то радиальных
[21:01.780 --> 21:02.780]  рисунков.
[21:02.780 --> 21:08.700]  Схема простая, угол, радиус, угол в градусах, радиус,
[21:08.700 --> 21:12.500]  ну, можно указывать размер, можно не указывать, ну,
[21:12.500 --> 21:15.500]  размер нас не имеет сюда.
[21:15.500 --> 21:19.300]  Следующий, то есть, точка указывается в скобочках,
[21:19.300 --> 21:22.740]  точка может быть либо x за 5y, либо угол двоеточечия,
[21:22.740 --> 21:24.860]  радиус, либо еще кое-что, обсудим позже, во второй
[21:24.860 --> 21:25.860]  части.
[21:25.860 --> 21:32.060]  Следующее, к точке есть, можно использовать модификатор.
[21:32.060 --> 21:35.260]  Например, если мы поставим переточку плюс, то это будет
[21:35.260 --> 21:41.900]  означать то, что нам нужно брать не абсолютное значение
[21:41.900 --> 21:46.140]  этой кардинала, а прибавлять его к предыдущему, к тому
[21:46.140 --> 21:48.020]  месту, где перо остановилось.
[21:48.020 --> 21:51.580]  То есть, вот здесь перо встало на точку 2.0 и остановилось.
[21:51.580 --> 21:56.740]  И дальше, от этого места мы должны прибавить эту
[21:56.740 --> 21:58.260]  координату и начать там рисовать.
[21:58.260 --> 22:05.540]  Еще есть синтез, когда вместо двух дефизов ставится два
[22:05.540 --> 22:09.220]  плюса, он означает примерно то же самое, но есть нюанс
[22:09.220 --> 22:17.420]  в том, что в таком случае он будет перемещать и не
[22:17.420 --> 22:18.420]  рисовать путь.
[22:19.260 --> 22:24.860]  А в этом случае он нарисовал путь до смещенной точки.
[22:24.860 --> 22:27.060]  А если вместо двух минусов стоит два плюса, то он будет
[22:27.060 --> 22:29.620]  просто перемещать, но не рисовать путь, просто перемещение
[22:29.620 --> 22:30.620]  пера по воздуху.
[22:30.620 --> 22:39.540]  Дальше у нас была команда Circle, была команда Ellipse, была
[22:39.540 --> 22:40.540]  Grid.
[22:40.540 --> 22:43.740]  Есть команда, модификатор лучше назвать, в общем, ключевое
[22:43.740 --> 22:44.740]  слово.
[22:44.740 --> 22:45.740]  Дуга.
[22:46.060 --> 22:52.420]  Дуга означает два параметра, откуда стартовый угол, конечный
[22:52.420 --> 23:00.820]  угол и радиус отчитывается от предыдущего места пера
[23:00.820 --> 23:05.940]  и нарисует дугу, вот он нарисовал эту дугу.
[23:05.940 --> 23:08.100]  Дальше Cycle, опять возвращаемся в старт.
[23:08.100 --> 23:10.660]  Тут уже Cycle напрашивается, потому что уже 2.0 какая-то
[23:10.660 --> 23:15.020]  странная точка, ну в смысле 0.0 еще ладно, но 2.0 звучит
[23:15.020 --> 23:18.460]  как что-то, что можно поменять, тем более, если мы поменяем
[23:18.460 --> 23:25.060]  здесь точку на 2.0, например, на точку 3, на точку 3,0, то
[23:25.060 --> 23:27.540]  вот эта вся часть сместится вместе со стартовой точкой,
[23:27.540 --> 23:30.620]  тогда использование Cycle вообще очень оправдано.
[23:30.620 --> 23:34.540]  Вот, соответственно, замечание насчет первой строчки.
[23:34.540 --> 23:36.580]  Как только мы узнали про относительные координаты,
[23:36.580 --> 23:38.740]  для того, чтобы написать квадрат, логичнее было
[23:38.740 --> 23:42.900]  бы везде здесь писать относительные координаты, для того, чтобы
[23:42.900 --> 23:45.540]  если мы поменяем стартовую точку, надо было поменить
[23:45.540 --> 23:46.540]  только стартовую точку.
[23:46.540 --> 23:49.780]  Да, то есть здесь было бы плюс один запятая ноль, здесь
[23:49.780 --> 23:53.460]  плюс ноль запятая один, здесь плюс ноль запятая минус
[23:53.460 --> 23:58.940]  один, а нет, плюс минус один запятая ноль, а здесь Cycle.
[23:58.940 --> 24:04.340]  Так, здесь вроде, ну да, и использовали заливку как-то
[24:04.340 --> 24:09.300]  так, так, ну вроде, вроде все по этому слайду.
[24:09.300 --> 24:14.580]  Да, следующий этап это стрелочки, следующий этап,
[24:14.580 --> 24:17.620]  который возникает при попытках нарисовать что-то.
[24:17.620 --> 24:22.060]  И сначала я нарисовал обычную стрелку, вот видите, вне
[24:22.060 --> 24:26.020]  окружения Text Picture, вот просто в тексте, без всяких формул,
[24:26.020 --> 24:27.020]  без чего, просто стрелочка.
[24:27.020 --> 24:35.020]  Факт того, что перо после своей остановки должно
[24:35.860 --> 24:38.420]  рисовать стрелочку, после своей последней остановки
[24:38.420 --> 24:42.060]  должно рисовать стрелочку, означает, ну придается вот
[24:42.060 --> 24:44.740]  таким параметром, по таким необязательным параметрам,
[24:44.740 --> 24:51.740]  в квадратных скобочках, да, вот, как бы в форме стрелочки.
[24:51.740 --> 24:57.980]  Вот, но, в общем, вот, вот этот первый рисунок, вот,
[24:57.980 --> 25:00.460]  но выглядит как-то не очень красиво, и в общем большинству
[25:00.460 --> 25:04.300]  людей не нравятся эти стрелочки по опыту.
[25:04.300 --> 25:07.300]  Вот, поэтому есть очень хорошая стрелочка такая
[25:07.300 --> 25:12.180]  общепринятая, называется Steels, вот, в общем, чтобы ее
[25:12.180 --> 25:18.260]  использовать, это как бы, читать так, стрелочка
[25:18.260 --> 25:22.260]  приравнять Steels, вот, то есть как бы мы задаем стрелку
[25:22.260 --> 25:25.380]  равную чему-то там, здесь вместо Steels можно написать,
[25:25.380 --> 25:28.300]  например, вот, Lattech, то есть стрелочка равно Lattech,
[25:28.300 --> 25:30.900]  вот, или здесь просто minus Steels можно писать, Lattech
[25:30.900 --> 25:35.100]  это тоже вот такая стрелочка, но сейчас покажу, вот такая,
[25:35.100 --> 25:38.140]  сейчас покажу конкретнее, да, вот, здесь мы уже пришли
[25:38.140 --> 25:42.460]  к параметрам всей картины, вот, ну, сверху, если читаем,
[25:42.460 --> 25:44.140]  здесь появились параметры всей картины, то есть понятно,
[25:44.140 --> 25:45.740]  что есть какие-то параметры, которые интересны для всей
[25:45.740 --> 25:48.100]  картины, например, мы, может быть, хотим, чтобы вообще
[25:48.100 --> 25:51.460]  вся картина была нарисована тонкими линиями или что-то
[25:51.460 --> 25:53.740]  такое, чтобы не дублировать это каждый раз, можно передать
[25:53.740 --> 25:58.380]  это в самом начале всего тикс-пикчера окружения.
[25:58.380 --> 26:01.620]  Вот, на самом деле, когда мы выходим в тикс-пикчер,
[26:01.620 --> 26:05.580]  открывается некий тиксовский скоп, некое пространство,
[26:05.580 --> 26:07.740]  которое можно еще руками внутри тикс-пикчера отдельно
[26:07.740 --> 26:10.340]  задавать, как-то это настраивать, но это уже более сложная
[26:10.340 --> 26:13.060]  история, просто, знаете, если интересно будет, можно
[26:13.060 --> 26:14.060]  погуглить.
[26:14.060 --> 26:16.900]  Вот, дальше начинаем то, что мы делаем, начинаем
[26:16.900 --> 26:17.900]  делать то, что мы уже умеем.
[26:17.900 --> 26:21.780]  Так, рисуем, рисуем со стрелочкой, непросто, так, из точки
[26:21.780 --> 26:22.780]  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
[26:51.780 --> 26:58.780]  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
[27:21.780 --> 27:28.780]  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
[27:51.780 --> 27:58.780]  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
[28:21.780 --> 28:28.780]  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
[28:51.780 --> 28:58.780]  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
[29:21.780 --> 29:28.780]  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
[29:51.780 --> 29:58.780]  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
[30:21.780 --> 30:28.780]  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
[30:51.780 --> 30:58.780]  0, 0, 0, 0, 0, 0, 0, 0, 0, 0
[31:21.780 --> 31:28.780]  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
[31:51.780 --> 31:58.780]  0, 0, 0, 0, 0, 0, 0, 0, 0, 0
[32:21.780 --> 32:28.780]  0, 0, 0, 0, 0, 0, 0, 0, 0, 0
[32:51.780 --> 32:58.780]  0, 0, 0, 0, 0, 0, 0, 0, 0
[33:21.780 --> 33:28.780]  0, 0, 0, 0, 0, 0, 0, 0, 0
[33:51.780 --> 33:58.780]  0, 0, 0, 0, 0, 0, 0
[34:21.780 --> 34:28.780]  0, 0, 0, 0, 0, 0, 0
[34:51.780 --> 34:58.780]  0, 0, 0, 0, 0, 0, 0
[35:21.780 --> 35:28.780]  0, 0, 0, 0, 0, 0, 0
[35:51.780 --> 35:58.780]  0, 0, 0, 0, 0, 0, 0
[36:21.780 --> 36:28.780]  0, 0, 0, 0, 0, 0, 0
[36:51.780 --> 36:58.780]  0, 0, 0, 0, 0, 0, 0
[37:21.780 --> 37:28.780]  0, 0, 0, 0, 0, 0
[37:51.780 --> 37:58.780]  0, 0, 0, 0, 0, 0
[38:21.780 --> 38:28.780]  0, 0, 0, 0, 0, 0
[38:51.780 --> 38:58.780]  0, 0, 0, 0, 0, 0
[39:21.780 --> 39:28.780]  0, 0, 0, 0, 0, 0, 0
[39:51.780 --> 39:58.780]  0, 0, 0, 0, 0, 0
[40:21.780 --> 40:28.780]  0, 0, 0, 0, 0, 0, 0
[40:51.780 --> 40:58.780]  0, 0, 0, 0, 0, 0
[41:21.780 --> 41:28.780]  0, 0, 0, 0, 0, 0, 0
[41:51.780 --> 41:58.780]  0, 0, 0, 0, 0
[42:21.780 --> 42:28.780]  0, 0, 0, 0, 0, 0
[42:51.780 --> 42:58.780]  0, 0, 0, 0, 0, 0
[43:21.780 --> 43:28.780]  0, 0, 0, 0, 0, 0
[43:51.780 --> 43:58.780]  0, 0, 0, 0, 0
[44:21.780 --> 44:28.780]  0, 0, 0, 0, 0, 0
[44:51.780 --> 44:58.780]  0, 0, 0, 0, 0, 0
[45:21.780 --> 45:28.780]  0, 0, 0, 0, 0, 0
[45:51.780 --> 45:58.780]  0, 0, 0, 0, 0, 0
[46:21.780 --> 46:28.780]  0, 0, 0, 0, 0, 0
[46:51.780 --> 46:58.780]  0, 0, 0, 0, 0, 0
[47:21.780 --> 47:28.780]  0, 0, 0, 0, 0, 0
[47:51.780 --> 47:58.780]  0, 0, 0, 0, 0, 0
[48:21.780 --> 48:28.780]  0, 0, 0, 0, 0
[48:51.780 --> 48:58.780]  0, 0, 0, 0
[49:21.780 --> 49:28.780]  0, 0, 0, 0, 0, 0
[49:51.780 --> 49:58.780]  0, 0, 0, 0, 0, 0
[50:21.780 --> 50:28.780]  0, 0, 0, 0, 0, 0
[50:51.780 --> 50:58.780]  0, 0, 0, 0, 0, 0
[51:21.780 --> 51:28.780]  0, 0, 0, 0
[51:51.780 --> 51:58.780]  0, 0, 0, 0, 0
[52:21.780 --> 52:28.780]  0, 0, 0, 0, 0
[52:51.780 --> 52:58.780]  0, 0, 0, 0, 0
[53:21.780 --> 53:28.780]  0, 0, 0, 0, 0
[53:51.780 --> 53:58.780]  0, 0, 0, 0
[54:21.780 --> 54:28.780]  0, 0, 0, 0, 0
[54:51.780 --> 54:58.780]  0, 0, 0, 0, 0
[55:21.780 --> 55:28.780]  0, 0, 0, 0
[55:51.780 --> 55:58.780]  0, 0, 0, 0, 0
[56:21.780 --> 56:28.780]  0, 0, 0, 0, 0
[56:51.780 --> 56:58.780]  0, 0, 0, 0
[57:21.780 --> 57:28.780]  0, 0, 0, 0, 0
[57:51.780 --> 57:58.780]  0, 0, 0, 0, 0
[58:21.780 --> 58:28.780]  0, 0, 0, 0, 0
[58:51.780 --> 58:58.780]  0, 0, 0, 0
[59:21.780 --> 59:28.780]  0, 0, 0, 0, 0
[59:51.780 --> 59:58.780]  0, 0, 0, 0
[01:00:21.780 --> 01:00:28.780]  0, 0, 0, 0, 0
[01:00:51.780 --> 01:00:58.780]  0, 0, 0, 0, 0
[01:01:21.780 --> 01:01:28.780]  0, 0, 0, 0
[01:01:51.780 --> 01:01:58.780]  0, 0, 0, 0, 0
[01:02:21.780 --> 01:02:28.780]  0, 0, 0, 0, 0
[01:02:51.780 --> 01:02:58.780]  0, 0, 0, 0, 0
[01:03:21.780 --> 01:03:28.780]  0, 0, 0, 0, 0
[01:03:51.780 --> 01:03:58.780]  0, 0, 0, 0, 0
[01:04:21.780 --> 01:04:28.780]  0, 0, 0, 0, 0
[01:04:51.780 --> 01:04:58.780]  0, 0, 0, 0, 0
[01:05:21.780 --> 01:05:28.780]  0, 0, 0, 0, 0
[01:05:51.780 --> 01:05:58.780]  0, 0, 0, 0, 0
[01:06:21.780 --> 01:06:28.780]  0, 0, 0, 0, 0
[01:06:51.780 --> 01:06:58.780]  0, 0, 0, 0
[01:07:21.780 --> 01:07:28.780]  0, 0, 0, 0, 0
[01:07:51.780 --> 01:07:58.780]  0, 0, 0, 0
[01:08:21.780 --> 01:08:28.780]  0, 0, 0, 0, 0
[01:08:51.780 --> 01:08:58.780]  0, 0, 0, 0, 0
[01:09:21.780 --> 01:09:28.780]  0, 0, 0, 0, 0
[01:09:51.780 --> 01:09:58.780]  0, 0, 0, 0, 0
[01:10:21.780 --> 01:10:28.780]  0, 0, 0, 0, 0
[01:10:51.780 --> 01:10:58.780]  0, 0, 0, 0, 0
[01:11:21.780 --> 01:11:28.780]  0, 0, 0, 0, 0
