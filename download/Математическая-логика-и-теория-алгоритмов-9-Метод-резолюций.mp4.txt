[00:00.000 --> 00:11.000]  Так, давайте начинать. Сегодня мы продолжим разговор про метод резолюций.
[00:11.000 --> 00:20.000]  Резолюции в прошлой раз не было, мы только познакомились с построением KNF по разным задачам.
[00:20.000 --> 00:28.000]  Я думаю, что в конце мы немножко начнем новую тему про формулы с кванторами.
[00:28.000 --> 00:46.000]  Я еще немножко поговорю про то, как строить KNF, выполнимость которых соответствует наличию решения какой-то задачи.
[00:46.000 --> 01:06.000]  Строение KNF, выполнимость которых эквивалентна разрешимости некоторых задач.
[01:16.000 --> 01:29.000]  В прошлый раз было два примера. Один пример это раскраска в три цвета вершин графа, так что пососедние были покрашены в разные цвета.
[01:29.000 --> 01:40.000]  И второй пример задача о ферзях. Как расставить ферзи на доске шахматной, чтобы они не били друг друга.
[01:40.000 --> 01:46.000]  Если просто пустая шахтная доска, то это вообще умеют решать.
[01:46.000 --> 01:57.000]  Например, если на каких-то полях уже стоят ферзии, а какие-то другие запрещены, то это уже получается очень много разных задач.
[01:57.000 --> 02:04.000]  И как это в целом решать, непонятно. Никакого простого алгоритма нет.
[02:04.000 --> 02:18.000]  На самом деле, если мы хотим использовать SAT-солверы, то есть какое-то программное обеспечение, которое решает задачу, то нам все-таки нужно, чтобы полученная задача была не слишком большой.
[02:18.000 --> 02:43.000]  Полученная КНФ. Нужно, чтобы полученная КНФ была не слишком большой.
[02:43.000 --> 02:58.000]  Давайте я приведу пример, в котором как раз всякие очевидные способы дают слишком большую КНФ, а чтобы получилась небольшая КНФ, нужно немножко похитрее поступить.
[02:58.000 --> 03:14.000]  Это задача о клике. Еще один пример. Это задача о клике, то есть о полном подграфе.
[03:14.000 --> 03:32.000]  Тут даны граф. Опять стеория графов задача. Даны граф G и число K.
[03:32.000 --> 04:00.000]  Вопрос, существует ли множество вершин, множество иска вершин, множество иска вершин, попарно соединенных между собой.
[04:00.000 --> 04:10.000]  Попарно соединенных между собой.
[04:10.000 --> 04:31.000]  Вот как бы мы это могли решать.
[04:31.000 --> 04:43.000]  Сейчас я приведу несколько примеров, которые вроде как задача выполнимости связанная, но на самом деле что-то странное дают.
[04:43.000 --> 04:53.000]  Например, попытка 1.
[04:53.000 --> 05:08.000]  Ну, например, можно сказать так. Для каждой вершины войдет 1, если вершина входит в клику и 0, если не входит.
[05:08.000 --> 05:23.000]  Я рассказываю сейчас, как приходит в голову делать, но как не надо делать.
[05:23.000 --> 05:38.000]  Можно сразу написать, что это попытка неудачная будет. Неудачная.
[05:38.000 --> 05:43.000]  Не то, чтобы совсем неудачная, но там будет не то, что мне нужно.
[05:43.000 --> 05:51.000]  Значит, по вершине V заведем P в это.
[05:51.000 --> 06:03.000]  Значит, P в это будет единица, если V лежит вот в этой клике.
[06:03.000 --> 06:11.000]  Т, где C это клика. Значит, 0, если V не лежит.
[06:11.000 --> 06:22.000]  Вот. Ну, C это как раз то, что нам нужно найти.
[06:22.000 --> 06:26.000]  Не, ну правильно так. Мы еще и значения переменных не знаем.
[06:26.000 --> 06:29.000]  Это как бы то, что мы хотим сделать.
[06:29.000 --> 06:36.000]  Что потом, если мы найдем значения переменных, то можно наоборот сказать, что C это нож тех вершин, для которых перемена равна единице.
[06:36.000 --> 06:40.000]  И C это искомое клико.
[06:40.000 --> 06:43.000]  Да, теперь нужно писать условия.
[06:43.000 --> 06:48.000]  Ну, можно писать просто вот такие вот условия.
[06:48.000 --> 07:17.000]  Значит, во-первых, для каждой пары U и V, значит, можно написать, то если, значит, P U и P V, то тогда U V это ребро.
[07:17.000 --> 07:22.000]  Так, а значит, как это вообще написать?
[07:22.000 --> 07:31.000]  Первый проблем в том, что у меня тут написано какие-то булевые переменные, а вот здесь что-то совсем не булевое, какое-то сложное выражение.
[07:31.000 --> 07:39.000]  Вот. Но можно написать так. Значит, смотрите, если U V это ребро, то тогда тут будет единица, это просто можно вычеркнуть.
[07:39.000 --> 07:41.000]  Это будетождественные истинные условия.
[07:41.000 --> 07:55.000]  Вот. Можно написать наоборот, что U V не принадлежит E, то тогда отрицание, значит, отрицание P U и P V.
[07:55.000 --> 08:03.000]  Ну, что будет эквивалентно отрицание P U или отрицание P V.
[08:03.000 --> 08:14.000]  Ну, и тогда можно сказать, что просто для всех, значит, для всех нерёбер добавим вот такие вот, так это вот.
[08:14.000 --> 08:19.000]  Значит, для всех нерёбер добавим KNF вот такие вот дизъюнкты.
[08:19.000 --> 08:23.000]  Да, то есть это, по крайней мере, будет что-то похожее на KNF.
[08:23.000 --> 08:41.000]  Да, то есть, значит, иными словами получается, значит, для всех, значит, для всех U V, которые не ребра, значит, добавим, значит, KNF.
[08:41.000 --> 08:49.000]  Вот такие вот дизъюнкты, значит, не P U или не P V.
[08:49.000 --> 08:55.000]  Так. Ну, хорошо, но это нам только сказать, что это клика.
[08:55.000 --> 08:59.000]  А ещё нужно, чтобы она была большого размера.
[08:59.000 --> 09:07.000]  Вот. И это основная загвоздка, значит, пока что тут как бы ничего страшного, тут ничего неудачного нету.
[09:07.000 --> 09:16.000]  Вот. А неудачно будет записывать, да, значит, записывать, что там хотя бы ковершин.
[09:16.000 --> 09:32.000]  Ну, значит, например, неудачный способ такой, да, что мы возьмём большую дизъюнкцию.
[09:32.000 --> 09:37.000]  Ну, давайте, смотрите, то, что у нас это будет не KNF, а там какая-нибудь другая форма, это, в принципе, не очень важно.
[09:37.000 --> 09:41.000]  Да, можно потом преобразовать как-нибудь.
[09:41.000 --> 09:44.000]  Проблема будет в другом.
[09:44.000 --> 09:55.000]  Значит, я возьму большую дизъюнкцию по всем наборам, значит, и 1, и так далее, и k.
[09:55.000 --> 10:00.000]  Ну, значит, это час, лучше давайте я.
[10:00.000 --> 10:06.000]  Это как множество, так.
[10:06.000 --> 10:13.000]  Ещё, да. Ой, так много стёр.
[10:13.000 --> 10:16.000]  Итак, вот.
[10:16.000 --> 10:19.000]  Значит, дизъюнкции по множествам.
[10:19.000 --> 10:26.000]  И 1, и так далее, и k, которые под множество, множество вершин.
[10:26.000 --> 10:30.000]  Ну, вы считаете, что там N вершин.
[10:30.000 --> 10:40.000]  Да, я считаю, что здесь N это число вершину графа.
[10:40.000 --> 10:54.000]  Так, а тут будет дизъюнкция, соответственно, P и 1, конъюнкция, и так далее, конъюнкция P и k.
[10:54.000 --> 10:58.000]  Вот, это не KNF, ну и ничего страшного.
[10:58.000 --> 11:08.000]  Значит, будем, в принципе, можно к выполнимости просто формулу сводить, а потом к выполнимости KNF.
[11:08.000 --> 11:10.000]  Мы про это ещё поговорим.
[11:10.000 --> 11:19.000]  Вот, ну и в принципе, да, конечно, если тут k единиц, то в эту дизъюнкцию попадёт набор из этих k индексов.
[11:19.000 --> 11:21.000]  И здесь это будет истинно.
[11:21.000 --> 11:27.000]  Вот, а если меньше, чем k единиц, тогда в любой такой набор попадает хотя бы 1 ноль, и это всё будет ложно.
[11:27.000 --> 11:31.000]  Вот, но в чём проблема? Почему это неудачная попытка?
[11:31.000 --> 11:34.000]  Потому что это будет слишком длинная формула.
[11:34.000 --> 11:45.000]  Сейчас есть длина формулы. Длина формулы будет порядка CSNPK.
[11:48.000 --> 11:56.000]  Вот, и если k достаточно большое, то это будет экспоненциального размера.
[11:56.000 --> 12:02.000]  Так, вы таких оценок ещё не делали, да, или делали?
[12:02.000 --> 12:09.000]  Вот, если k это, скажем, 1 десятая н, это вы не знаете примерно сколько будет.
[12:09.000 --> 12:16.000]  Но, наверное, вы знаете, что CSNPNПЛАМ это самое большое число сочетаний.
[12:16.000 --> 12:19.000]  Значит, это проще доказывается.
[12:19.000 --> 12:31.000]  И это означает, что CSNPNПЛАМ будет больше, чем 1 делить на 2n, даже не 2n, а 1 делить на n плюс 1, от 2 в н-ной степени.
[12:32.000 --> 12:36.000]  То есть это будет порядка экспонента.
[12:36.000 --> 12:41.000]  Ну, в общем, если k это линейная функция от n, это и будет так.
[12:41.000 --> 12:58.000]  То есть это будет порядка какой-то константы P в n-ной степени, значит, если k будет порядка n.
[12:58.000 --> 13:02.000]  Ну вот, если это будет n пополам, то вы это знаете, как доказывать?
[13:02.000 --> 13:09.000]  Если это будет там какая-нибудь 1 сотая н даже, то в какой-то момент должно быть.
[13:09.000 --> 13:13.000]  Ну, к тыче, может, в следующем семестре.
[13:13.000 --> 13:17.000]  Ну, а в самом деле, сейчас, кто не знает, что такое формула Стирлинга?
[13:17.000 --> 13:22.000]  Она на Монтане была, да, или ещё нет? Или просто знаете?
[13:22.000 --> 13:31.000]  Ну, в общем, если поставить формулу для числа сочетания формулы Стирлинга и там немножко посокращать, то, в общем, вот это и получится.
[13:31.000 --> 13:37.000]  Вот, так вот, экспонента, это мы считаем, что много.
[13:37.000 --> 13:47.000]  Значит, мы хотим...
[13:47.000 --> 13:56.000]  Не, сейчас, вот эту тильду я понимаю, что там какой-то множитель есть.
[13:56.000 --> 14:10.000]  Сейчас, но это называется т, это большой, а т, что k больше, чем какая-то маленькая константа, умножить на n, вложительная, и меньше, чем какая-то большая константа, умножить на n.
[14:10.000 --> 14:15.000]  Да, вот эту тильду я в этом смысле здесь понимаю.
[14:15.000 --> 14:30.000]  Вот, в общем, мы хотим, чтобы не такая длинная формула была, чтобы она была, наоборот, порядка n с какой-то степени.
[14:30.000 --> 14:46.000]  Так, значит, мы хотим, чтобы длина формулы была больше, нет, не больше, но меньше.
[14:46.000 --> 14:51.000]  В общем, умел порядок, наоборот, не c в степени, а на n степени c.
[14:51.000 --> 14:57.000]  Вы, наверное, знаете, что любой полином растет медленнее, чем любая экспонента.
[14:57.000 --> 15:03.000]  Вот, соответственно, вот такого добиться сложнее, чем то, что написано.
[15:03.000 --> 15:26.000]  Нет, так мы берем все вместе. Мы берем и вот эти вот формулы, и вот эту вот формулу.
[15:26.000 --> 15:36.000]  То, что это клика, это получается из вот этих формул. А то, что там большого размера, это из вот этой формулы получается.
[15:36.000 --> 15:44.000]  Ну, значит, у нас k единица должно быть, и они все соединены друг с другом.
[15:44.000 --> 15:56.000]  Ну, вот поэтому, так. Ладно, значит, там бывает еще много способов делать неправильно.
[15:56.000 --> 16:03.000]  Значит, у меня в прошлогоднем конспекте там еще пара способов написано. Давайте я сейчас расскажу, как правильно сделать.
[16:03.000 --> 16:13.000]  Вот так. Давайте не будем делать еще две неудачных попытки. Я сразу расскажу, как правильно.
[16:13.000 --> 16:23.000]  Так, значит, попытка два сразу будет удачная.
[16:23.000 --> 16:38.000]  Значит, мы сделаем... Не, смотрите, в принципе, можно даже вот эту попытку один отремонтировать,
[16:38.000 --> 16:44.000]  сказав, что просто сумма этих всех π и так должна быть больше либо равна k.
[16:44.000 --> 16:52.000]  И дальше делать какую-то двоичную арифметику, чтобы эти нули и единицы складывать, не сорить, а складывать, как полагается,
[16:52.000 --> 16:59.000]  и при помощи двоичной арифметики выразить через формулы. И, в общем, это можно довести.
[16:59.000 --> 17:07.000]  Но это будет не очень просто. Я расскажу вариант, когда сразу будет и просто, и коротко, и правильно.
[17:07.000 --> 17:18.000]  Значит, мы здесь сделаем другие переменные. Вместо переменных с одним индексом мы сделаем переменные с двумя индексами.
[17:18.000 --> 17:28.000]  Значит, тут будут переменные с двумя индексами. Значит, π и t в это.
[17:28.000 --> 17:38.000]  Значит, где i будет от одного до k. Значит, i от одного до k, а v это вершина.
[17:38.000 --> 17:46.000]  И мы будем считать, что у нас не просто есть клика, а клика с пронумерованными вершинами.
[17:46.000 --> 17:52.000]  То есть, интерпретируется эта применная так.
[17:52.000 --> 18:00.000]  Значит, π и v равняются единице, если v это вершина.
[18:00.000 --> 18:06.000]  Ну, и тогда, значит, какие условия?
[18:06.000 --> 18:14.000]  Ну, а первое, что мы делаем, мы делаем переменные с двумя индексами.
[18:14.000 --> 18:22.000]  Ну, а второе, что мы делаем, мы делаем переменные с двумя индексами.
[18:22.000 --> 18:32.000]  Ну, а первое, под каждым номером у нас какая-то вершина должна быть.
[18:32.000 --> 18:44.000]  То есть, для любого i у меня условия, что p и 1, или и так далее, или p и tn.
[18:44.000 --> 18:54.000]  Под каждым номером есть вершина.
[18:54.000 --> 19:04.000]  Под каждым номером есть вершина.
[19:04.000 --> 19:10.000]  Так, значит, дальше можно потребовать, чтобы под каждым номером была ровно одна вершина.
[19:10.000 --> 19:16.000]  Это вообще даже не обязательно, но так как-то приятнее.
[19:16.000 --> 19:22.000]  Чтобы прямо так интерпретировалось, что под каждым номером одна вершина.
[19:22.000 --> 19:28.000]  То есть, это означает не p и t ut, или не p и t vt.
[19:28.000 --> 19:34.000]  Значит, это если u не равно v.
[19:34.000 --> 19:40.000]  Если u не равно v, означает, что не может быть под одним номером две вершины.
[19:40.000 --> 19:58.000]  Значит, нет разных вершин под одним номером.
[19:58.000 --> 20:08.000]  Значит, дальше нужно потребовать наоборот, чтобы одна и та же вершина не могла быть по двумя номерами.
[20:08.000 --> 20:14.000]  Так, значит, третья, третья наоборот.
[20:14.000 --> 20:26.000]  Значит, не p и t ut, или не p и t vt.
[20:26.000 --> 20:30.000]  Значит, это при неравном же.
[20:30.000 --> 20:48.000]  Это означает, что одна вершина не может быть под разными номерами.
[20:48.000 --> 20:52.000]  На самом деле, даже это можно исключить, если у вас в графе нет петель.
[20:52.000 --> 20:56.000]  И это будет следовать из дальнейшего.
[20:56.000 --> 21:00.000]  Значит, и дальнейшее, что это клика.
[21:00.000 --> 21:06.000]  Значит, p и t ut и p и vt.
[21:06.000 --> 21:12.000]  Значит, следовательно, uv это ребро.
[21:12.000 --> 21:18.000]  Ну, и вот эта вот запись точно так же, как и в прошлый раз.
[21:18.000 --> 21:21.000]  Это аналог вот этого.
[21:21.000 --> 21:27.000]  Мы делаем именно формулу вот таким образом.
[21:27.000 --> 21:42.000]  Это означает, что есть для всех нерёбер, для всех пар вершин, которые не ребра,
[21:42.000 --> 21:47.000]  Добавляем условия.
[21:47.000 --> 21:53.000]  Значит, не p и t ut, или не p и t vt.
[21:53.000 --> 22:01.000]  И это для всех и для всех же.
[22:01.000 --> 22:07.000]  Для всех и неравных же.
[22:07.000 --> 22:14.000]  Ну, вот видно, что третье это на самом деле частный случай.
[22:14.000 --> 22:21.000]  Если петля из uv-u это не ребро, то в точности третье то же самое, что четвёртое.
[22:21.000 --> 22:28.000]  Поэтому, если петель и так нету, то тогда можно сказать, что мы только четвёртое добавляем.
[22:28.000 --> 22:34.000]  Если петли есть, тогда это нужно отдельно дописать.
[22:34.000 --> 22:39.000]  Ну, хорошо.
[22:39.000 --> 22:41.000]  Что утверждается?
[22:41.000 --> 22:44.000]  Во-первых, утверждается, что тут маленькая длина.
[22:44.000 --> 22:46.000]  Значит, какая тут длина?
[22:46.000 --> 22:48.000]  Ну, смотрите, это у нас для всех и.
[22:48.000 --> 22:51.000]  То есть это порядка k таких формул.
[22:51.000 --> 22:56.000]  Давайте я напишу, сколько у нас всего формул получается.
[22:56.000 --> 23:02.000]  Значит, таких формул у нас будет порядка k.
[23:02.000 --> 23:04.000]  Поломалось.
[23:17.000 --> 23:19.000]  Так, вот тут дайте.
[23:19.000 --> 23:21.000]  Значит, этих k штук.
[23:23.000 --> 23:26.000]  Этих сколько?
[23:26.000 --> 23:42.000]  Значит, тут получается, что и у нас любое от одного до k, а u и v любые от одного до n,
[23:42.000 --> 23:44.000]  ну и соответственно любые пары.
[23:44.000 --> 23:50.000]  То есть тут получается k и умножить на n, на n-1 пополам.
[23:50.000 --> 23:54.000]  Да, тут получается вот столько формул.
[23:54.000 --> 23:56.000]  Но это не больше, чем n в кубе.
[24:06.000 --> 24:09.000]  Сейчас, это штуки, это штуки формул.
[24:09.000 --> 24:12.000]  Да, если общую длину мерить, то да, то нужно еще на n умножить.
[24:15.000 --> 24:18.000]  Да, зато у второй там нужно на констант умножить.
[24:18.000 --> 24:22.000]  Но вообще не важно, в любом случае, второе будет больше.
[24:24.000 --> 24:29.000]  Так, значит, теперь здесь и не равно g.
[24:29.000 --> 24:31.000]  Тут получается наоборот.
[24:31.000 --> 24:38.000]  Значит, тут как бы k на k-1 пополам умножить на n штук.
[24:38.000 --> 24:42.000]  Ну и самое большое, наверное, в самом деле здесь будет.
[24:42.000 --> 24:49.000]  Здесь будет, ну хотя нет, только когда как самое большое.
[24:49.000 --> 24:55.000]  Значит, это будет k на k-1 пополам.
[24:55.000 --> 24:58.000]  Кстати, вот здесь вот u и v нужно менять местами.
[25:00.000 --> 25:08.000]  То есть тут нужно умножить, видимо, на n в квадрате,
[25:08.000 --> 25:13.000]  минус n, потому что петли мы уже здесь запретили.
[25:13.000 --> 25:17.000]  И еще минус число ребер.
[25:19.000 --> 25:22.000]  Даже для каждого неребра нужно такую формулу написать.
[25:24.000 --> 25:27.000]  Ну, в любом случае, даже эта штука будет не больше чем n в четвертой.
[25:27.000 --> 25:32.000]  Поэтому суммарная длина будет как раз полиномиально от m.
[25:35.000 --> 25:38.000]  Вот так. Хорошо, а почему это правильная формула?
[25:38.000 --> 25:40.000]  Ну, не знаю, наверное, более-менее понятно.
[25:40.000 --> 25:44.000]  Да, что, смотрите, если клика есть, ну а сами это в одну сторону понятно,
[25:44.000 --> 25:46.000]  в другую не совсем понятно.
[25:46.000 --> 25:50.000]  Значит, если клика есть, то мы можем пронумеровать ее вершины совершенно любым образом.
[25:52.000 --> 25:56.000]  Да, произвольно выберем, какая там первая, вторая, это даль какая ката.
[25:56.000 --> 26:00.000]  И определим переменные, вот как здесь написано,
[26:00.000 --> 26:04.000]  что на единицы, если v это и эта вершина клики, ноль наоборот.
[26:05.000 --> 26:07.000]  Ну и тогда проверим, что эти все выполнены.
[26:08.000 --> 26:11.000]  Ну, смотрите, у нас под каждым номером есть вершина.
[26:11.000 --> 26:13.000]  Значит, это у нас получилось.
[26:14.000 --> 26:18.000]  Значит, действительно, только одна вершина,
[26:18.000 --> 26:20.000]  и это тоже верно.
[26:21.000 --> 26:28.000]  Значит, дальше, действительно, и у одной вершины только один номер.
[26:28.000 --> 26:30.000]  Ну, у нас была клика иска разных вершин.
[26:31.000 --> 26:33.000]  Ну и раз это клик, то четвертая тоже будет верна.
[26:36.000 --> 26:38.000]  Вот, это в одну сторону верно.
[26:38.000 --> 26:40.000]  Хорошо, а теперь пусть наоборот.
[26:40.000 --> 26:42.000]  Значит, пусть наоборот.
[26:44.000 --> 26:49.000]  И у нас, соответственно, конъюнкция из вот этих всех дезинюктов выполнима.
[26:51.000 --> 26:57.000]  То есть, есть какой-то набор значений p, i, t, ut, что все формулы выяснены.
[26:58.000 --> 27:05.000]  Ну да, смотрите, за счет первых двух формул у нас для каждого индекса i есть ровно одна вершина.
[27:05.000 --> 27:14.000]  За счет первых хотя бы один вершvitн, чтобы это deverлоeté, да, созвездующей переменной была истина,
[27:14.000 --> 27:16.000]  за счет второго будет ровно одна вершина.
[27:18.000 --> 27:20.000]  А за счет третьего это все будет разная вершина.
[27:21.000 --> 27:24.000]  То есть, их будет столько сколько индексов, то есть к Ka штук.
[27:26.000 --> 27:29.000]  Ну а за счет четвертого эти k штук это будет клика.
[27:29.000 --> 27:34.000]  Ну вот и получится, что если все формы истины, то, значит, это будет клика из каверши.
[27:44.000 --> 27:54.000]  Ну вот, соответственно, контрольной через неделю у тех, кто там нарешал,
[27:54.000 --> 28:02.000]  у кого-то будет только выводимость, а у тех, кто нарешал много, будет задача вот такого рода,
[28:02.000 --> 28:09.000]  где нужно будет составить формулу по, соответственно, какому-то написанному условию.
[28:09.000 --> 28:13.000]  Ну и вот нужно будет написать что-то вот в таком вот духе.
[28:18.000 --> 28:20.000]  Так, ну хорошо.
[28:24.000 --> 28:28.000]  Так, теперь давайте вот в таком порядке пойдем.
[28:28.000 --> 28:32.000]  Значит, я расскажу, собственно, что такой метод резолюций,
[28:32.000 --> 28:40.000]  а потом я расскажу, почему любую формулу можно свести вот именно к КНФ.
[28:46.000 --> 28:52.000]  Так, значит, что такое одна резолюция?
[28:54.000 --> 29:00.000]  Значит, резолюция это вот такая штука.
[29:00.000 --> 29:06.000]  Это тоже некоторые правила вывода, которые работают именно с КНФ.
[29:06.000 --> 29:12.000]  И этот правил вывода выглядит так, что если у вас есть один дизюнк А или Х,
[29:12.000 --> 29:20.000]  есть другой дизюнк Б или не Х, то тогда можно вывести А или Б,
[29:20.000 --> 29:24.000]  и вот это вот А или Б называется резольвент.
[29:36.000 --> 29:39.000]  Так, в каком смысле это правило вывода?
[29:39.000 --> 29:47.000]  В следующем смысле, что если на некотором наборе, значит, утверждение довольно простое,
[29:47.000 --> 30:04.000]  если на некотором наборе значений А или Х и Б или не Х истинное,
[30:06.000 --> 30:14.000]  то и А или Б истинно на том же наборе.
[30:14.000 --> 30:17.000]  Но вообще-то это почти очевидно.
[30:17.000 --> 30:22.000]  Потому что, смотрите, если Х истинно, тогда не Х ложный, должно быть Б истинно,
[30:22.000 --> 30:28.000]  и тогда А или Б истинно. Если Х ложно, то тогда А истинно.
[30:28.000 --> 30:41.000]  То есть получается, что если Х ложно, то тогда А истинно, и тогда А или Б истинно.
[30:42.000 --> 30:56.000]  Вот если Х истинно, то тогда не Х ложно, тогда Б истинно, и тогда тоже А или Б истинно.
[30:56.000 --> 30:58.000]  А или Б истинно.
[31:05.000 --> 31:15.000]  Хорошо. Значит, если сами А и Б являются дезюмптами, и там есть повторные литералы,
[31:15.000 --> 31:18.000]  то тогда можно эти повторы исключить.
[31:23.000 --> 31:34.000]  Если в А и В есть повторные литералы, то можно их исключить.
[31:34.000 --> 31:56.000]  То есть, например, будет, скажем, П или Q или R, и, например, не Q или R или S.
[31:56.000 --> 32:04.000]  Ну, во-первых, там можно менять местами, поэтому этот Х может быть и в середине формулы.
[32:04.000 --> 32:15.000]  То есть здесь в качестве Х выступает Q, а в качестве А выступает P или R, в качестве B выступает R или S.
[32:15.000 --> 32:21.000]  Но вот R повторяется и там, и там, поэтому можно его два раза не записывать.
[32:21.000 --> 32:25.000]  То есть резольвента будет P или R или S.
[32:29.000 --> 32:45.000]  Значит, важно, чтобы только у одной переменной было это вхождение в один дезюмпт без отрицания, в другую с отрицанием.
[32:45.000 --> 33:02.000]  Вот если, например, написать, значит, P или Q или R, а вторую будет не Q или не R или S, то не нужно писать, что в результате будет P или S.
[33:02.000 --> 33:09.000]  Значит, если это аккуратно сделалось, то будет P или R или не R или S.
[33:09.000 --> 33:19.000]  Ну и вот это будет тождестная истина, и поэтому, ну, поэтому вообще такое не надо делать, да, это как бы ничего не принесет.
[33:19.000 --> 33:27.000]  Значит, это тождестная истина, значит, поэтому это ничего не даст.
[33:27.000 --> 33:34.000]  Это как бы формально верно, а фактически ничего не даст.
[33:35.000 --> 33:42.000]  Вот, и еще есть специальный случай, когда A и B пустые.
[33:42.000 --> 33:50.000]  Значит, мы еще рассматриваем специальный вариант символ противоречия, это пустой дезюмпт.
[33:50.000 --> 33:54.000]  Пустой дезюмпт.
[33:55.000 --> 34:08.000]  Он получится, если вот A и B пустые, то есть если есть X, есть не X, то в качестве резольвента будет пустой дезюмпт.
[34:19.000 --> 34:22.000]  Нет, это, наоборот, ноль.
[34:24.000 --> 34:32.000]  Значит, это тождестная ложь, потому что это же дезюмпт.
[34:32.000 --> 34:41.000]  Пусть есть какая-то ассоциативная операция, что такое, как бы она применена к пустому множеству, но это будет нейтральный элемент.
[34:41.000 --> 34:48.000]  То есть пустая сумма это ноль, потому что ноль не меняет сумму, пустой произведение это единица, потому что умножение на единицу не меняет произведения.
[34:48.000 --> 34:59.200]  дизюнцы это ноль, потому что дизюнцы с нулем не меняет значение вот значит но это
[34:59.200 --> 35:07.440]  смотрите метод резолюции значит метод резолюции это как бы из исходного к
[35:07.440 --> 35:11.960]  исходному набору дизюнтов добавлять себе возможные резолюции пока что-то
[35:11.960 --> 35:19.800]  возможно добавить метод резолюции
[35:23.280 --> 35:31.400]  значит к исходному набору дизюнтов
[35:35.600 --> 35:39.720]  добавлять всевозможные резольвенты
[35:42.960 --> 35:47.240]  добавляйте всевозможные резольвенты
[35:51.280 --> 36:00.920]  значит пока это возможно пока появляются новые
[36:00.920 --> 36:15.880]  вот ну и тогда когда основной вопрос это получится в итоге пустой дизюнт или
[36:15.880 --> 36:22.960]  не получится вот тут теория такая
[36:25.520 --> 36:27.920]  что
[36:30.920 --> 36:37.600]  не смотрите теория такая что исходная формула да то есть кнф всех дизюнтов
[36:37.600 --> 36:43.560]  выполнимо тогда только тогда когда методе резолюции не получится пустой
[36:43.560 --> 36:48.280]  дизюнт но и наоборот да значит можно писать что
[36:49.120 --> 37:02.680]  исходная кнф невыполнимо тогда и только тогда когда можно вывести можно вывести
[37:02.680 --> 37:13.320]  пустой дизюнт но дать какой-нибудь примерчик и потом этим перерыв будет так
[37:13.320 --> 37:24.920]  примерчик но например насчет п или ку или r насчет и скажем неку или r
[37:24.920 --> 37:34.160]  насчет и п или не и не п
[37:37.160 --> 37:40.760]  значит это такой простой искусственный пример значит
[37:40.760 --> 37:51.240]  как работает метод резолюции но сначала вот из этих двух значит из этих двух
[37:51.240 --> 37:55.360]  получается п или r
[37:56.880 --> 38:04.480]  на как раз ку не ку и р повторяет поэтому п или п или r значит дальше из
[38:04.480 --> 38:13.000]  уже полученного нового дизюнта и того исходного получается п да опять же п
[38:13.000 --> 38:21.000]  повторяется а р и не р противоположная ну и наконец из полученного п и
[38:21.000 --> 38:25.600]  имеющегося отрицания п получается пустой дизюнт
[38:26.720 --> 38:32.280]  вот соответственно и это действительно не выполнимая формула это аждественная
[38:32.280 --> 38:38.600]  ноль можете построить таблицу истинности и это будет аждественной ноль
[38:42.440 --> 38:48.200]  вот ну и вот как часто бывает в одну сторону это теорема очевидная и нас следует
[38:48.200 --> 38:51.360]  просто из предыдущего утверждения
[38:52.360 --> 39:00.160]  вот вот из этого утверждения нас следует да что смотрите если
[39:14.160 --> 39:20.920]  если на некотором наборе всякая nf истина да то есть все эти скобки истинны
[39:20.920 --> 39:25.480]  то и все что мы из них можем вывести медом изолюция тоже будет истинна а
[39:25.480 --> 39:30.160]  тогда получится что и пустой дизюнт истинный но пустой дизюнта естественно
[39:30.160 --> 39:35.720]  ложный он не может быть истинным вот получается что если вывели пустой
[39:35.720 --> 39:40.880]  дизюнт значит она не выполнима вот сейчас давайте перерыв после перерыва
[39:40.880 --> 39:47.800]  обратную сторону так аж по поводу вопросов перерыве значит смотрите за
[39:47.880 --> 39:52.680]  счет того что мы вот здесь вот склеивали да сейчас вот здесь вот дамы склеивали
[39:52.680 --> 39:58.400]  одинаковое за счет этого у нас всего будет конечное число возможно где из
[39:58.400 --> 40:04.200]  юнктов да потому что каждая переменная может либо входить сама либо ходить
[40:04.200 --> 40:08.960]  с отрицанием либо не входить никак да вот давайте вот такие вот мы тоже не
[40:08.960 --> 40:13.720]  будем выводить да хотя все равно будет конечное число но просто скажем что если
[40:13.720 --> 40:19.720]  то это же ясно истинно, то это нам ничего не дает, и мы это не будем использовать.
[40:19.720 --> 40:27.720]  Вот, и тогда получается просто число возможных дезинутов, это будет там 3 в степени число переменных.
[40:27.720 --> 40:34.720]  Потому что для каждой перемены есть три варианта. Либо входит сама, либо с отрицанием, либо не входит вообще.
[40:34.720 --> 40:39.720]  Ну, в скобку, в одну скобку входит. Соответственно, скоба – конечное число,
[40:39.720 --> 40:48.720]  и поэтому, если на каждом шаге появляется новое, то после какого-то шага уже ничего добавить нельзя.
[40:48.720 --> 40:54.720]  Да, когда ничего не можно добавить, то значит метод закончился.
[40:55.720 --> 41:01.720]  Вот, значит, соответственно, в одну сторону это легко.
[41:01.720 --> 41:10.720]  То есть, если так, это значит вот в эту сторону, вправо-налево, давайте запишу тоже.
[41:10.720 --> 41:28.720]  Значит, если КНФ выполнимое, значит, тогда все дезюнкты верны на некотором наборе.
[41:28.720 --> 41:38.720]  На некотором наборе. И, следовательно, все резольвенты тоже верны.
[41:38.720 --> 41:45.720]  Все резольвенты верны на том же наборе.
[41:45.720 --> 42:00.720]  Вот. А при этом пустой дезюнкт аж детственно ложен, поэтому он не может быть верен на этом наборе.
[42:00.720 --> 42:10.720]  Значит, он не резольвент. При этом пустой дезюнкт аж детственно ложен,
[42:11.720 --> 42:17.720]  поэтому, в частности, он ложен на этом наборе.
[42:17.720 --> 42:29.720]  Значит, ложен на этом наборе. И, следовательно, он не резольвента.
[42:29.720 --> 42:35.720]  Ну, не резольвента никакого уровня.
[42:35.720 --> 42:41.720]  Вот. Это как бы контрпозиция получилась. Что если выполнимо, то не можем вывести пустой дезюнкт.
[42:41.720 --> 42:45.720]  Значит, если можем, значит, она невыполнима.
[42:45.720 --> 42:58.720]  Ну, а теперь в эту сторону
[42:58.720 --> 43:08.720]  Опять возьмем контрпозицию. Что если нельзя вывести пустой дезюнкт, то, значит, выполнимо.
[43:08.720 --> 43:19.720]  Значит, нельзя вывести пустой дезюнкт, следовательно, формула выполнима.
[43:19.720 --> 43:28.720]  Значит, это что-то типа теоремы о полноте. То есть, вот это можно сказать, что это теоремы о полноте методы резолюции.
[43:40.720 --> 43:44.720]  Ну, а то, соответственно, было теорема корректности.
[43:44.720 --> 43:48.720]  Значит, смотрите, как мы это будем делать.
[43:48.720 --> 43:56.720]  Ну, рассмотрим множество всех резольвент.
[43:56.720 --> 44:00.720]  Скажем, назовем его C.
[44:00.720 --> 44:08.720]  Значит, C это множество всех резольвент.
[44:08.720 --> 44:13.720]  Множество всех резольвент любого порядка.
[44:13.720 --> 44:16.720]  Значит, мы его назовем, разобьем на уровне.
[44:16.720 --> 44:24.720]  Значит, C и T это множество резольвент,
[44:24.720 --> 44:33.720]  в которых входят только первые и-переменных.
[44:33.720 --> 44:41.720]  Только P1 и так далее P и.
[44:41.720 --> 44:51.720]  И тогда тот факт, что не выводится пустой дезюнкт, означает, что C0 это пустое множество.
[44:51.720 --> 45:06.720]  Потому что пустой дезюнкт это единственный дезюнкт, который ни одной переменной не зависит.
[45:06.720 --> 45:16.720]  Значит, этот не выводится пустой дезюнкт. Следовательно, C0 это пустое множество.
[45:16.720 --> 45:22.720]  Так, ну и теперь будем по индукции доказывать, что существует набор,
[45:22.720 --> 45:26.720]  на котором выполнены все...
[45:26.720 --> 45:30.720]  А, значит, при этом смотрите, тут на самом деле иерархия происходит.
[45:30.720 --> 45:35.720]  Да, то есть, ну давайте я тут напишу.
[45:35.720 --> 45:41.720]  Значит, C0 вложено в P1, это вложено в P2 и так далее.
[45:41.720 --> 45:46.720]  А последнее, Cn, равняется C.
[45:46.720 --> 45:51.720]  Так.
[46:01.720 --> 46:05.720]  Да, то есть каждый раз у нас все больше и больше переменных, поэтому они друг другу вкладываются.
[46:05.720 --> 46:09.720]  Такая иерархия получается.
[46:09.720 --> 46:13.720]  Вот, значит, мы доказываем по индукции.
[46:13.720 --> 46:17.720]  Значит, докажем по индукции.
[46:17.720 --> 46:19.720]  Следующее.
[46:19.720 --> 46:25.720]  Да, что есть набор, на котором выполнены все из циитова.
[46:25.720 --> 46:30.720]  Значит, есть набор,
[46:30.720 --> 46:42.720]  на котором выполнены все элементы цииты.
[46:42.720 --> 46:44.720]  Вот, и база у нас есть.
[46:44.720 --> 46:47.720]  База — это то, что C0 — это пустое множество.
[46:47.720 --> 46:51.720]  Да, вообще, когда рассуждаете по индукции, никогда нельзя забывать про базу.
[46:51.720 --> 46:58.720]  Потому что переход тут будет, независимо от того, выполняться, выводится пустой дизайн или нет.
[46:58.720 --> 47:03.720]  А вот база, только если он не выводится.
[47:03.720 --> 47:07.720]  Значит, база за счет того, что C0 — это пустое множество,
[47:07.720 --> 47:15.720]  но и все элементы пустого множества выполнены на любом наборе или на каком-то наборе.
[47:15.720 --> 47:22.720]  Так, хорошо. Дальше будем строить постепенно.
[47:22.720 --> 47:26.720]  Да, и, кстати, тут можно...
[47:26.720 --> 47:30.720]  Если у нас цииты, то там должны значить только первых и переменных.
[47:30.720 --> 47:34.720]  Поэтому можно здесь приписать так.
[47:34.720 --> 47:39.720]  Значит, набор значений P1 и так далее, PIT.
[47:43.720 --> 47:45.720]  Переход.
[47:49.720 --> 47:55.720]  Значит, смотрите, вот это C и плюс первое делится на три части.
[47:55.720 --> 47:59.720]  Значит, C и плюс первое делится на три части.
[47:59.720 --> 48:08.720]  Значит, на CIT, на те, которые содержат P и плюс первое,
[48:08.720 --> 48:13.720]  и на те, которые содержат не P и плюс первое.
[48:13.720 --> 48:19.720]  Да, мы договорились, что те, которые то и другое содержат, автоматически верны, и мы их исключаем.
[48:19.720 --> 48:22.720]  Что еще раз?
[48:22.720 --> 48:25.720]  Ой, да, равно, да.
[48:29.720 --> 48:39.720]  Вот, значит, C и плюс первое делится на три части.
[48:39.720 --> 48:47.720]  И дальше получается следующее, что вот первая часть CIT, да, эти все уже выполнены.
[48:47.720 --> 48:50.720]  Уже выполнены.
[48:50.720 --> 48:55.720]  Вот, а из этих некоторые тоже могут быть выполнены.
[48:55.720 --> 48:59.720]  Значит, эти уже выполнены все.
[48:59.720 --> 49:04.720]  А эти тоже могут быть выполнены.
[49:04.720 --> 49:08.720]  Тоже могут быть выполнены.
[49:08.720 --> 49:18.720]  Значит, за счет значений P1 и так далее, PIT.
[49:19.720 --> 49:22.720]  Вот.
[49:22.720 --> 49:34.720]  Вот утверждается, что либо сверху, либо снизу должны быть все выполнены.
[49:34.720 --> 49:41.720]  Значит, утверждается, что в одном из двух классов,
[49:41.720 --> 49:47.720]  значит, в одном из двух классов, хотя бы в одном, может быть даже в обоих,
[49:47.720 --> 49:52.720]  хотя бы в одном из двух классов, выполнены все.
[49:52.720 --> 49:57.720]  Значит, почему?
[49:57.720 --> 50:02.720]  Ну, потому что, смотрите, иначе, я здесь продолжу.
[50:02.720 --> 50:09.720]  Значит, иначе, что у нас есть?
[50:09.720 --> 50:14.720]  Значит, иначе есть disjunct.
[50:14.720 --> 50:23.720]  Значит, какое-то P и плюс первое или D0.
[50:23.720 --> 50:33.720]  Значит, такое, что D0 от вот этих значений P1 и так далее, PIT, ложен.
[50:33.720 --> 50:40.720]  Значит, то есть в первой группе есть тот, который ложен на вот имеющихся значениях.
[50:40.720 --> 50:47.720]  Значит, и также есть disjunct.
[50:47.720 --> 50:52.720]  Значит, не P и плюс первое или D1.
[50:52.720 --> 51:00.720]  Значит, такое, что D1 от этих же значений тоже равен нулю.
[51:00.720 --> 51:05.720]  Но дальше можно делать резолюцию.
[51:05.720 --> 51:11.720]  Значит, резольвента.
[51:11.720 --> 51:14.720]  Резольвента.
[51:14.720 --> 51:18.720]  Значит, соответственно, P и плюс первое или D0.
[51:18.720 --> 51:21.720]  Не P и плюс первое или D1.
[51:21.720 --> 51:24.720]  Получаем D0 или D1.
[51:24.720 --> 51:36.720]  Итак, получается, что, во-первых, вот это D0 или D1 лежит в цитам.
[51:36.720 --> 51:39.720]  Здесь скобки возьму.
[51:39.720 --> 51:45.720]  Лежит в цитам, потому что там только переменная от первой до этой.
[51:46.720 --> 52:05.720]  Ну и во-вторых, значит, вот это вот D0 или D1 от P1 и так далее PIT равно нулю.
[52:05.720 --> 52:07.720]  И это противоречие.
[52:07.720 --> 52:17.720]  Это противоречие, потому что по предположению индукция мы предположили, что все элементы CIT равны единице.
[52:17.720 --> 52:28.720]  Значит, это противоречит предположению индукции.
[52:28.720 --> 52:44.720]  А именно, что все элементы CIT равны единице.
[52:44.720 --> 52:51.720]  Ну вот, значит, получается, что в одном из двух классов выполнено все.
[52:51.720 --> 53:01.720]  Ну а тогда за счет выбора значения P и плюс один можно сделать истинными все элементы другого класса.
[53:01.720 --> 53:08.720]  То есть, например, если выполнено все отсюда, то мы скажем, что P и плюс первое равно нулю и все отсюда тоже будут выполнены.
[53:08.720 --> 53:12.720]  Или наоборот, выполнено все отсюда, тогда мы скажем, что P и плюс первое равно единице.
[53:12.720 --> 53:15.720]  И все отсюда будут выполнены.
[53:15.720 --> 53:20.720]  Тогда я тебя сюда припишу.
[53:20.720 --> 53:35.720]  За счет значения P и плюс один можно выполнить все скобки из другого класса.
[53:45.720 --> 53:49.720]  Ну вот, ну и последнее, что нужно сказать.
[53:49.720 --> 53:57.720]  Нужно сказать, что мы не только исходные дизъюнкты выполнили, но и все, что из них можно вывести.
[53:57.720 --> 54:05.720]  Ну и значит, в том числе и исходные тоже.
[54:05.720 --> 54:15.720]  По итогам процедуры будут выполнены все резольвенты и в том числе все исходные дизъюнкты.
[54:15.720 --> 54:17.720]  Что и требовалось.
[54:17.720 --> 54:20.720]  Да, это у нас где было? Это здесь где-то было.
[54:20.720 --> 54:24.720]  Что мы, собственно, доказываем?
[54:24.720 --> 54:27.720]  Значит, доказываем вот это вот, что форма выполнима.
[54:27.720 --> 54:33.720]  То есть все скобки одновременно истинны.
[54:33.720 --> 54:38.720]  Так можно, да, здесь переключить.
[54:38.720 --> 54:44.720]  Значит, получаем, что в итоге.
[54:44.720 --> 54:55.720]  В итоге получаем, что выполнены все резольвенты.
[54:55.720 --> 55:11.720]  Ну и в том числе, в том числе выполнены и исходные дизъюнкты.
[55:11.720 --> 55:22.720]  Ну а что и требовалось.
[55:22.720 --> 55:25.720]  Вот.
[55:25.720 --> 55:30.720]  Вот получается альтернативный метод.
[55:30.720 --> 55:39.720]  Ну что же, есть какие-нибудь вопросы?
[55:39.720 --> 55:42.720]  Значит, последнее, что я хочу показать,
[55:42.720 --> 55:49.720]  значит, это то, что этот метод можно применять не только для задачи выполнимости, но и для вывода тавтологии.
[55:49.720 --> 55:53.720]  Да, мы именно для этого делались из числений высказываний.
[55:53.720 --> 56:02.720]  Значит, в том числе можно применять их к доказательству тавтологии.
[56:02.720 --> 56:15.720]  Значит, применение к доказательству тавтологии.
[56:15.720 --> 56:23.720]  Ну, собственно, вместо того, чтобы выводить формулу, мы будем опровергать ее отрицание.
[56:23.720 --> 56:46.720]  Значит, вместо вывода фи будем опровергать отрицание фи.
[56:46.720 --> 56:48.720]  Так.
[56:48.720 --> 56:53.720]  Ну, значит, тут вообще-то отрицание фи вовсе не обязан быть КНФ.
[56:53.720 --> 56:57.720]  Да, то есть, чтобы это сделать и чтобы вообще применять метрорезолюции,
[56:57.720 --> 57:03.720]  нужно сначала преобразовать как-то к формату КНФ, при этом не слишком увеличить длину.
[57:03.720 --> 57:08.720]  Сейчас я давайте вам покажу, как это сделать.
[57:08.720 --> 57:22.720]  Значит, сначала нужно преобразовать к КНФ.
[57:22.720 --> 57:27.720]  Ну, естественно, затем...
[57:27.720 --> 57:30.720]  Значит, сначала нужно преобразовать к КНФ.
[57:30.720 --> 57:38.720]  Затем, значит, опровергнуть методом резолюции.
[57:38.720 --> 57:48.720]  Опровергнуть методом резолюции.
[57:48.720 --> 57:51.720]  Так. Значит, как мы это будем делать?
[57:51.720 --> 57:54.720]  Ну, в общем, в виде это как довольно муторно записывается.
[57:54.720 --> 57:59.720]  Давайте я на примере покажу, и надеюсь, что будет понятно.
[57:59.720 --> 58:07.720]  Так. Значит, на примере это формула контрапозиция.
[58:07.720 --> 58:15.720]  Значит, закон контрапозиция.
[58:15.720 --> 58:25.720]  То есть, P влечет Q, влечет не Q, влечет не P.
[58:25.720 --> 58:31.720]  Так. Значит, прежде чем переходить к примеру и рассказать, что, собственно, нужно делать,
[58:31.720 --> 58:36.720]  давайте заметим следующее.
[58:36.720 --> 58:42.720]  Значит, такую вот формулу, скажем, не знаю, дайте мне другие буквы, какие-нибудь,
[58:42.720 --> 58:47.720]  что A равняется B влечет C.
[58:47.720 --> 58:54.720]  Значит, вот это можно понимать как функция от трех аргументов.
[58:54.720 --> 59:02.720]  Значит, это функция от трех аргументов.
[59:02.720 --> 59:10.720]  Да, ну какая-то бульба функции от трех аргументов.
[59:10.720 --> 59:14.720]  Ну, можете тождественную, это эквиваленция имеется в виду.
[59:14.720 --> 59:20.720]  Да, можете писать эквиваленцию, может тождественная равенство, это все одно и то же.
[59:20.720 --> 59:26.720]  Соответственно, у нее есть KNF, как в любой функции.
[59:26.720 --> 59:32.720]  Значит, у нее есть KNF.
[59:32.720 --> 59:37.720]  Причем, поскольку здесь всего три аргумента, это будет три KNF.
[59:37.720 --> 59:42.720]  Да, в том смысле, что в каждой скобке три литерала.
[59:42.720 --> 59:47.720]  Вот, ну и даже можно написать.
[59:47.720 --> 59:50.720]  Так.
[59:50.720 --> 59:53.720]  Значит, сейчас я напишу.
[59:53.720 --> 59:57.720]  KNF будет такая.
[59:57.720 --> 01:00:04.720]  Значит, B или A.
[01:00:04.720 --> 01:00:09.720]  Значит, и не C или A.
[01:00:09.720 --> 01:00:19.720]  И не A или не B или C.
[01:00:19.720 --> 01:00:21.720]  Так, значит, как это получить?
[01:00:21.720 --> 01:00:30.720]  Ну, во-первых, можно, как вы умеете, составить таблицу истинности и составить такую штуку.
[01:00:30.720 --> 01:00:35.720]  Или раскрыть, превратить инпликацию в дизюнцию.
[01:00:35.720 --> 01:00:38.720]  Значит, эквиваленцию тоже там какую-то конъюнцию дизюнции.
[01:00:38.720 --> 01:00:40.720]  И раскрыть скобки.
[01:00:40.720 --> 01:00:44.720]  Но также именно у такой записи есть прозрачный смысл.
[01:00:44.720 --> 01:00:48.720]  Смотрите, что означает последняя скобка.
[01:00:48.720 --> 01:00:53.720]  Она означает, что если верно A, то тогда не B или C.
[01:00:53.720 --> 01:00:57.720]  Ну, а не B или C, это как раз то, что из B следует C.
[01:00:57.720 --> 01:01:01.720]  То есть если верно A.
[01:01:01.720 --> 01:01:06.720]  Сейчас как бы давать я подстрочный перевод на язык импликаций.
[01:01:06.720 --> 01:01:13.720]  Значит, вот это означает, что из A следует, что из B следует C.
[01:01:13.720 --> 01:01:19.720]  Значит, это означает, что из C следует A.
[01:01:19.720 --> 01:01:25.720]  А это означает, что из не B следует A.
[01:01:25.720 --> 01:01:33.720]  Но если как бы теперь мысленно вместо A подставить B в лечо C, то это получится тавтология.
[01:01:33.720 --> 01:01:38.720]  Значит, есть таково антождество, что из B следует C.
[01:01:38.720 --> 01:01:40.720]  А здесь будут две аксиомы.
[01:01:40.720 --> 01:01:43.720]  Аксиома 1 и аксиома 9.
[01:01:43.720 --> 01:01:47.720]  Но оказывается, что вот этих требований достаточно.
[01:01:47.720 --> 01:01:52.720]  То есть если верно заключение, то верна импликация.
[01:01:52.720 --> 01:01:56.720]  Если не верна посылка, то верна импликация.
[01:01:56.720 --> 01:02:01.720]  И если верна импликация, то верна вот такая дезъюнция.
[01:02:01.720 --> 01:02:06.720]  Вот, в общем, вот это такая КНФ.
[01:02:06.720 --> 01:02:14.720]  Так, теперь дальше дело со всей формулой.
[01:02:14.720 --> 01:02:24.720]  Так, ну вот у нас P влечет Q, влечет не Q, влечет не P.
[01:02:24.720 --> 01:02:30.720]  Значит, введем новые переменные.
[01:02:30.720 --> 01:02:38.720]  Значит, скажем, что вот это вот равняется R.
[01:02:38.720 --> 01:02:42.720]  Вот это вот равняется S.
[01:02:42.720 --> 01:02:47.720]  И вот это вот равняется T.
[01:02:47.720 --> 01:02:53.720]  И скажем, напишем вот такую систему.
[01:02:53.720 --> 01:02:59.720]  Напишем вот такую систему.
[01:02:59.720 --> 01:03:01.720]  Я буду равенство писать.
[01:03:01.720 --> 01:03:04.720]  Вы, если хотите, можете антождественное равенство или экваленцию писать.
[01:03:04.720 --> 01:03:10.720]  Значит, R равняется P влечет Q.
[01:03:10.720 --> 01:03:18.720]  S равняется не P. Ой, не Q.
[01:03:18.720 --> 01:03:21.720]  Не Q влечет не P.
[01:03:21.720 --> 01:03:26.720]  T равняется R влечет S.
[01:03:26.720 --> 01:03:30.720]  И еще не T.
[01:03:31.720 --> 01:03:35.720]  Потому что я же хочу противоречие сделать.
[01:03:35.720 --> 01:03:39.720]  Да, то есть вообще-то, если тут все правильно вычислено, если это тавтология,
[01:03:39.720 --> 01:03:42.720]  то тогда T должно быть антождественной истинной.
[01:03:42.720 --> 01:03:47.720]  Но если я еще не T добавляю, то должна получиться противоречивая система.
[01:03:47.720 --> 01:03:55.720]  И тогда вот эту противоречивую систему можно опровергать медным резолюцией.
[01:03:55.720 --> 01:03:58.720]  Вот, значит, как в общем случае это работает?
[01:03:58.720 --> 01:04:04.720]  В общем случае нужно как бы для каждой подформулы завести свою переменную
[01:04:04.720 --> 01:04:10.720]  и написать, во-первых, вот такое вот итеративное вычисление значения формулы,
[01:04:10.720 --> 01:04:15.720]  и, во-вторых, добавить отрицание той переменной, которая соответствует всей формуле.
[01:04:15.720 --> 01:04:18.720]  Тогда, если исходная формула была тавтологией,
[01:04:18.720 --> 01:04:24.720]  то вот такая система вместе с этим отрицанием должна получиться противоречием.
[01:04:24.720 --> 01:04:29.720]  И, соответственно, это противоречие можно отвергать, опровергать медным резолюцией.
[01:04:36.720 --> 01:04:40.720]  Ну хорошо, давайте я покажу, как это, собственно, происходит.
[01:04:40.720 --> 01:04:46.720]  Значит, тут вот каждому из этих равенств будет протестовать три формулы,
[01:04:46.720 --> 01:04:49.720]  и еще вот эта вот одна, то есть всего десять формул будет.
[01:04:49.720 --> 01:04:52.720]  Но на самом деле не все из них будут использоваться при выводе противоречия.
[01:04:52.720 --> 01:04:54.720]  Да, только некоторые.
[01:04:54.720 --> 01:04:59.720]  Так, ну давайте, дайте я все-таки здесь все это напишу.
[01:04:59.720 --> 01:05:03.720]  Немножко меньше будет, чтобы там перед глазами было.
[01:05:03.720 --> 01:05:11.720]  Так, значит, видите, у меня первая формула, R в роли A, P в роли B и Q в роли C.
[01:05:11.720 --> 01:05:19.720]  Значит, соответственно, нужно написать, значит, P или R.
[01:05:19.720 --> 01:05:22.720]  Значит, P или R.
[01:05:22.720 --> 01:05:26.720]  Так, а давайте я конъюнции просто не буду писать.
[01:05:26.720 --> 01:05:29.720]  Сэкономлю назначка конъюнция.
[01:05:29.720 --> 01:05:32.720]  Значит, P или R.
[01:05:32.720 --> 01:05:35.720]  Оскобки буду, чтобы они друг от друга отделялись.
[01:05:35.720 --> 01:05:42.720]  Значит, P или R, соответственно, дальше не Q, не Q или R.
[01:05:42.720 --> 01:05:48.720]  Дальше не R, или не P, или Q.
[01:05:48.720 --> 01:05:50.720]  Значит, это первая скобка.
[01:05:50.720 --> 01:05:53.720]  Так, дальше вторая скобка.
[01:05:53.720 --> 01:05:54.720]  Тут немножко похитрее.
[01:05:54.720 --> 01:05:57.720]  Значит, в качестве B будет не Q, в качестве C не P.
[01:05:57.720 --> 01:06:00.720]  И в качестве A будет S.
[01:06:00.720 --> 01:06:09.720]  Так, значит, B будет не Q или S.
[01:06:09.720 --> 01:06:12.720]  Значит, дальше как бы не не P.
[01:06:12.720 --> 01:06:15.720]  Ну, мы будем двойное отрицание брать.
[01:06:15.720 --> 01:06:20.720]  И тут получится P, P или S.
[01:06:20.720 --> 01:06:24.720]  Значит, дальше... Ой, не хочет писать здесь.
[01:06:24.720 --> 01:06:30.720]  Ну ладно.
[01:06:30.720 --> 01:06:34.720]  Здесь продолжим.
[01:06:34.720 --> 01:06:39.720]  Так, это не S, или Q, или не P.
[01:06:39.720 --> 01:06:43.720]  Так, если увидите ошибку, то исправляйте.
[01:06:43.720 --> 01:06:49.720]  Значит, дальше последняя такая же система.
[01:06:49.720 --> 01:06:55.720]  Значит, тут будет R или T.
[01:06:55.720 --> 01:06:59.720]  Значит, дальше не S, или T.
[01:06:59.720 --> 01:07:06.720]  И дальше будет не T, или не R, или S.
[01:07:06.720 --> 01:07:12.720]  Так, и последнее не T. Давайте я тоже в скобке возьму для единообразия.
[01:07:12.720 --> 01:07:15.720]  Так, ну хорошо.
[01:07:15.720 --> 01:07:22.720]  А значит, теперь как отсюда выводить противоречия?
[01:07:22.720 --> 01:07:25.720]  Ну вот, по этой формуле.
[01:07:25.720 --> 01:07:35.720]  Три раза вместо A, B и C подставлять то, что там написано.
[01:07:36.720 --> 01:07:39.720]  Так, хорошо.
[01:07:39.720 --> 01:07:44.720]  Ну, давайте смотреть, что тут можно вывести.
[01:07:44.720 --> 01:07:54.720]  Значит, вот отсюда и отсюда можно вывести R.
[01:07:54.720 --> 01:08:04.720]  А отсюда и отсюда можно вывести не S.
[01:08:04.720 --> 01:08:06.720]  Но это вот отсюда.
[01:08:06.720 --> 01:08:10.720]  Вот отсюда, только я еще снял военное отрицание.
[01:08:10.720 --> 01:08:13.720]  Значит, у меня в качестве C, в качестве C у меня не P.
[01:08:13.720 --> 01:08:19.720]  Значит, здесь будет не не P, и двойное отрицание снимаю.
[01:08:19.720 --> 01:08:22.720]  Так, хорошо.
[01:08:22.720 --> 01:08:26.720]  Значит, вот получили R, получили не S.
[01:08:26.720 --> 01:08:41.720]  Дальше смотрите, из не S, значит, и вот этого, значит, получили не Q.
[01:08:41.720 --> 01:08:50.720]  И также из не S, и вот этого, получили P.
[01:08:50.720 --> 01:08:57.720]  А дальше, значит, из R, и вот этого, получили не P или не Q.
[01:08:57.720 --> 01:09:00.720]  Ой, не P или Q.
[01:09:00.720 --> 01:09:04.720]  Ну а дальше уже видно, значит, отсюда и отсюда получили Q.
[01:09:04.720 --> 01:09:12.720]  Значит, отсюда и отсюда получили пустой дезинут.
[01:09:12.720 --> 01:09:18.720]  Ну вот, соответственно, теорияма о полноте как раз говорит, что если
[01:09:18.720 --> 01:09:27.720]  исходная форма была тавтологией, то тогда вот здесь вот мы должны суметь вывести пустой дезинут.
[01:09:27.720 --> 01:09:40.720]  Соответственно, если пустой дезинут не выводится, то та старая форма была бы не тавтологией.
[01:09:40.720 --> 01:09:47.720]  На самом деле, тот вывод, который здесь, он еще имеет, значит, он имеет
[01:09:47.720 --> 01:09:50.720]  некоторое такое словесное рассуждение.
[01:09:50.720 --> 01:09:56.720]  Значит, смотрите, ну смотрите, пусть у нас вот эта импликация ложна.
[01:09:56.720 --> 01:09:58.720]  Что это означает?
[01:09:58.720 --> 01:10:01.720]  Ну это означает, что ее посылка истина заключения ложна.
[01:10:01.720 --> 01:10:03.720]  И это в точности то, что здесь происходит.
[01:10:03.720 --> 01:10:06.720]  Значит, R это посылка, то есть посылка истина.
[01:10:06.720 --> 01:10:10.720]  Да, заключение ложно.
[01:10:10.720 --> 01:10:16.720]  Хорошо, значит, дальше посылка истина, значит, верна импликация появляет четко.
[01:10:16.720 --> 01:10:20.720]  Но импликация появляет четко, это дезюнция не по или ку.
[01:10:20.720 --> 01:10:22.720]  А с другой стороны заключение тоже импликация.
[01:10:22.720 --> 01:10:29.720]  Если импликация ложна, то значит, здесь вот эта посылка истина, а вот это заключение ложно.
[01:10:29.720 --> 01:10:39.720]  Ну, то есть получается, что не ку, значит, не ку получается истина, а не по ложь, то есть по истинно.
[01:10:39.720 --> 01:10:43.720]  В принципе, здесь на самом деле снятие двойного отрицания необязательно.
[01:10:43.720 --> 01:10:51.720]  Если вводить еще другие платформулы для самих вот этих отрицаний, то можно и без двойного отрицания справиться,
[01:10:51.720 --> 01:10:54.720]  но просто будет еще больший формул.
[01:10:54.720 --> 01:11:02.720]  Ну вот, это получается противоречие, что с одной стороны не по или ку истина, а с другой стороны по истинно, а ку ложно.
[01:11:02.720 --> 01:11:07.720]  И вот это противоречие как раз показывает, что вся большая импликация не может быть ложной.
[01:11:13.720 --> 01:11:16.720]  Ну вот, какие-нибудь вопросы.
[01:11:25.720 --> 01:11:35.720]  Значит, смотрите, если мы вылили пустой дизюнкт, то тогда исходная система была несовместная, она невыполнимая.
[01:11:35.720 --> 01:11:37.720]  Но что нам говорит исходная система?
[01:11:37.720 --> 01:11:44.720]  Она говорит, что мы последовательно вычисляем значение формулы, получаем значение t, и при этом t ложно.
[01:11:44.720 --> 01:11:49.720]  Но если это невыполнимо, значит, вычисляя значение формулы, мы не можем получить ложь.
[01:11:49.720 --> 01:11:52.720]  А это означает, что формула тавтология.
[01:11:55.720 --> 01:12:01.720]  Тавтология, значит, везде истинно, значит, вычисляя ее значение, мы не можем получить ложь.
[01:12:03.720 --> 01:12:07.720]  Вот, значит, вот такой метод.
[01:12:10.720 --> 01:12:17.720]  Так, ну ладно, значит, сейчас про квантера уже нет смысла начинать разговор.
[01:12:17.720 --> 01:12:20.720]  Давайте я чуть-чуть еще поговорю про резолюция.
[01:12:21.720 --> 01:12:27.720]  Значит, на самом деле аналогичным образом можно работать и наброс задачи о выполнимости.
[01:12:34.720 --> 01:12:36.720]  Значит, аналогичной техникой...
[01:12:42.720 --> 01:12:47.720]  Аналогичной техникой можно свести...
[01:12:50.720 --> 01:12:52.720]  Любую задачу о выполнимости...
[01:12:56.720 --> 01:13:00.720]  Любую задачу о выполнимости произвольной формулы...
[01:13:06.720 --> 01:13:19.720]  Значит, к задаче о выполнимости KNF и, более того, о выполнимости 3KNF.
[01:13:21.720 --> 01:13:23.720]  Прежде чем понятно...
[01:13:36.720 --> 01:13:40.720]  Нет, значит, смотрите, этот метод вообще говоря не быстрый.
[01:13:40.720 --> 01:13:50.720]  То есть как бы полный метод это вывести все, что угодно, а их экспоненциально много может быть выводимых.
[01:13:50.720 --> 01:13:54.720]  И посмотреть, есть ли там противоречия, есть ли там пустой дизайн.
[01:13:54.720 --> 01:13:59.720]  Но если мы уже вывели все, что угодно и пустого дизайн нет, то она выполнима.
[01:14:00.720 --> 01:14:06.720]  Но, значит, смотрите, быстрого метода, более быстрого, чем экспонента,
[01:14:06.720 --> 01:14:09.720]  быстрого метода решения задачи о выполнимости неизвестно.
[01:14:10.720 --> 01:14:14.720]  Поэтому любой метод решения будет в лучшем случае экспоненциальным.
[01:14:14.720 --> 01:14:17.720]  В частности, это тоже, но тем не менее он будет работать.
[01:14:17.720 --> 01:14:20.720]  За экспоненциальное время он будет работать.
[01:14:20.720 --> 01:14:26.720]  Значит, любую задачу о выполнимости произвольной формулы можно свести к задаче о выполнимости 3KNF.
[01:14:26.720 --> 01:14:32.720]  Значит, 3KNF значит с каждой скобки максимум 3 разных литерала.
[01:14:33.720 --> 01:14:44.720]  Ну и метод аналогичный, а только метод такой же.
[01:14:48.720 --> 01:14:57.720]  Но вместо отрицания T в конце, вместо отрицания T добавлять просто T.
[01:14:57.720 --> 01:15:06.720]  Ну и тогда получается, что если наоборот, если формула есть противоречие,
[01:15:06.720 --> 01:15:13.720]  если формула противоречие, то тогда вот это T должно быть точно нулем.
[01:15:13.720 --> 01:15:19.720]  И тогда если мы еще добавим T, то должны вывести пустой дизьон.
[01:15:19.720 --> 01:15:30.720]  А если хотя бы на каком-то наборе будет единица, то мы как бы выведем на самом деле значение этого набора.
[01:15:30.720 --> 01:15:36.720]  На самом деле можно еще заметить вот такие вещи.
[01:15:36.720 --> 01:15:42.720]  Наблюдение.
[01:15:42.720 --> 01:16:03.720]  Если с KNF методом резолюции можно вывести, например, P,
[01:16:03.720 --> 01:16:09.720]  то тогда P равно единиц в любом выполняющем наборе.
[01:16:09.720 --> 01:16:15.720]  Значит, то P равняется единице в любом выполняющем наборе.
[01:16:21.720 --> 01:16:29.720]  Ну а соответственно, если не P, то тогда P равно 0 в любом выполняющем наборе.
[01:16:29.720 --> 01:16:34.720]  Ну а если и P, и не P, то тогда, значит, выполняющих наборов нет вообще.
[01:16:34.720 --> 01:16:36.720]  Почему это верно?
[01:16:36.720 --> 01:16:43.720]  Ну потому что, смотрите, если был выполняющий набор, в первом случае,
[01:16:43.720 --> 01:16:51.720]  если был выполняющий набор, где P равно 0, то можно было бы добавить не P, и осталось бы еще выполнимый KNF.
[01:16:51.720 --> 01:17:01.720]  А тогда, если мы вывели еще и P, то тогда, потом мы вывели бы студию из юнт, и она была бы невыполнимая.
[01:17:01.720 --> 01:17:05.720]  Значит, если мы вывели P, то тогда все-таки P должно быть равно единиц.
[01:17:05.720 --> 01:17:07.720]  Но здесь аналогично.
[01:17:07.720 --> 01:17:14.720]  Ну и это позволяет не только проверять выполнимость, но и искать выполняющие наборы.
[01:17:14.720 --> 01:17:24.720]  И в целом, значит, если пытаться метаморезолюцией искать выполняющий набор,
[01:17:24.720 --> 01:17:32.720]  или вообще пытаться что-то решать метаморезолюцией, то нужно пытаться получать все более и более короткие дизьюнт.
[01:17:32.720 --> 01:17:36.720]  Но это не всегда получается.
[01:17:36.720 --> 01:17:42.720]  Так, сейчас я еще одну фразу скажу.
[01:17:44.720 --> 01:17:49.720]  Это, на самом деле, теорема.
[01:17:49.720 --> 01:18:01.720]  То есть построены явно невыполнимые формулы, у которых, тем не менее, самый короткий вывод противоречий метаморезолюции будет экспоненциально длинный.
[01:18:01.720 --> 01:18:04.720]  Все, спасибо за внимание.
