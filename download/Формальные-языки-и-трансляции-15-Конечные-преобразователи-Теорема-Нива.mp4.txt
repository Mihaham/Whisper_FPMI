[00:00.000 --> 00:13.520]  Всем доброго дня. Сегодня у нас последняя лекция. Сразу по организационным вещам. У нас заканчивается
[00:13.520 --> 00:20.360]  семестр, значит на занятиях, на зачетной неделе мы с вами будем переписывать контрольные,
[00:20.360 --> 00:26.400]  переписывать всякие, перездавать колоквы, все дела связанные с ними, а также у нас будет такое
[00:26.400 --> 00:34.520]  мероприятие как удосроченный экзамен. Он будет у нас либо в субботу в 12.00, либо в понедельник в 11.00.
[00:34.520 --> 00:42.240]  Следственно, кто у кого есть желание, записывайтесь. Значит сразу скажу, что если вы хотите сдавать в
[00:42.240 --> 00:48.720]  субботу, то надо записаться по среду, включительно если вы хотите сдавать в понедельник, то надо
[00:48.720 --> 01:01.320]  записаться по пятницу. Зачем это сделано? Для того, чтобы мы еще и смогли проверить ваши
[01:01.320 --> 01:07.840]  контрольные практики и так далее в быстром формате. Ланика, давайте вспоминать, какая тема у нас была
[01:07.840 --> 01:15.920]  в прошлый раз. Отлично, конечный преобразователь. Что мы с вами научились понимать про конечный
[01:15.920 --> 01:34.480]  преобразователя? Да, отлично. И относительно каких операций мы поняли замкнутое конечное
[01:34.480 --> 01:59.480]  преобразование? Композиция. Композиция, раз. Вот, и сегодня мы с вами как раз посмотрим,
[01:59.480 --> 02:08.680]  что же можно с этим делать. Итак, для этого нам надо будет с вами показать некоторые факты,
[02:08.680 --> 02:15.440]  а пример будет у нас следующий. Мы с вами показали в прошлый раз, что мы можем конечный, точнее
[02:15.440 --> 02:21.640]  обычный гомоморфизм, представить в виде конечного преобразования, то есть построить его конечный
[02:21.640 --> 02:30.200]  преобразователь. Давайте подумаем, как мы будем строить обратный гомоморфизм. Еще один пример.
[02:30.200 --> 03:00.040]  Именно так, то есть. Ну и еще, так, ну, единственное, надо показать следующий
[03:00.040 --> 03:04.760]  факт, почему мы можем определять относительно одной буквы. Вопрос, чему равняется phi от epsilon
[03:04.760 --> 03:16.120]  для любого гомоморфизма? Epsilon. Почему? Потому что если мы возьмем phi от а, это у нас phi от
[03:16.120 --> 03:29.240]  epsilon, phi от а на phi от epsilon. В данном случае только epsilon. Вот, поэтому такой пример будет как раз
[03:29.240 --> 03:35.160]  работать, то есть нам достаточно определить образ каждой буквы. Вот, и теперь смотрите, у нас
[03:35.160 --> 03:40.760]  получается следующее, что обратный гомоморфизм и прямой гомоморфизм являются конечными
[03:40.760 --> 03:46.680]  преобразованиями. Ограничение на регулярный язык тоже задается конечным преобразованием,
[03:46.680 --> 03:53.120]  и конечное преобразование занято относительно композиции. Вот, поэтому, значит, смотрите,
[03:53.120 --> 03:58.880]  мы будем с вами, а, да, еще одно, еще одно определение понадобится, это не удлиняющий
[03:58.880 --> 04:16.640]  гомоморфизм. Тоже сегодня мы с ним очень будем хорошо работать плотно. Я бы сказал,
[04:16.640 --> 04:28.320]  что это гомоморфизм, у которого константа Липшица равняется единиц. Вот, определение.
[04:28.320 --> 04:50.200]  Все знают, что такое константа Липшица? Да ладно. На каком-то отрезке. Вот это константа Липшица.
[04:50.200 --> 05:04.680]  Для функции. Некоторые функции Фи. Вот, давайте рассмотрим, значит,
[05:04.680 --> 05:11.680]  чему у нас может быть образ буквы при неудлиняющем гомоморфизме.
[05:11.680 --> 05:27.120]  Длина этой штуки. Как будет сверху ограничено? 1. Значит, у нас всегда получается либо Фи от А,
[05:27.120 --> 05:33.520]  это B, где B принадлежит гамма со звездой в нашем выходном алфавите, либо Фи от А равно пустому
[05:33.520 --> 05:41.920]  слову. Вот, это нам еще понадобится в нашем занятии. Итак, смотрите, вот у нас есть какие-то базовые
[05:41.920 --> 05:49.360]  блоки и есть замечательное утверждение, которое говорит следующее. Теремонева называется, она
[05:49.360 --> 05:55.680]  говорит, что любое конечное преобразование можно представить в виде композиции трех более простых
[05:55.680 --> 06:02.320]  конечных преобразований. А именно, значит, первое у нас идет обратный неудлиняющий гомоморфизм,
[06:02.320 --> 06:11.280]  второе ограничение на регулярный язык и третье это неудлиняющий гомоморфизм. Кстати,
[06:11.280 --> 06:16.160]  неудлиняющий, возможно, что это какой-то баг, сейчас посмотрим, потому что мне кажется все-таки,
[06:16.160 --> 06:23.800]  что он не является неудлиняющим. В общем, будем доказать эту теорему. На самом деле,
[06:23.800 --> 06:32.920]  доказательство не очень сложное. Да, ударение на последний слог. Это не Нива, на ней не ездят.
[06:32.920 --> 06:59.800]  Можно представить в виде ограничений на некоторый регулярный язык, вот это неудлиняющий гомоморфизм.
[07:03.440 --> 07:20.360]  Вот это у нас гомоморфизм, а это у нас какой-то регулярный язык. Так, ну что, а теперь смотрите
[07:20.360 --> 07:33.600]  аналогию, которая у вас должна быть в связи с этой теоремой. Кто-нибудь помнит вот такой
[07:33.600 --> 07:57.840]  замечательный факт. Встречались с ним? Да, сингулярное разложение матрицы. Причем мы
[07:57.840 --> 08:03.560]  понимаем с вами в этом факте, что D это у нас диагональная матрица из квадратов собственных
[08:03.560 --> 08:17.080]  значений, а U и V это артагональная матрица. То есть, любое преобразование можно представить в виде
[08:17.080 --> 08:30.560]  поворота, сжатия, растяжение диагональной матрицы и еще одного поворота. Ну, всегда по-разному пишут,
[08:30.560 --> 08:36.200]  просто для нотации обычную, ну, математических, если писать выкладки после этого, свойства,
[08:36.200 --> 08:42.480]  которые используются, обычно именно говорят, что матрица V является транспонированной. Чисто для
[08:42.480 --> 08:49.960]  удобства, для того, чтобы собственные значения хорошо выписывались и всякие формулы. Значит,
[08:49.960 --> 08:53.640]  возможно, что вам этот факт нигде больше не понадобится, но если вы вдруг внезапно
[08:53.640 --> 08:57.120]  займетесь каким-нибудь машинным обучением, этот факт у вас будет всплывать достаточно часто.
[08:57.120 --> 09:17.120]  Ну, смотрите, гомоморфизм это у нас что такое? Обратный гомоморфизм мы можем сделать identity?
[09:17.120 --> 09:26.960]  Identity у нас является гомоморфизмом? Вот. Дальше у нас идет ограничение на sigma со звездой. Да,
[09:26.960 --> 09:34.880]  то есть identity на identity получается. Ну, а дальше наш гомоморфизм, который мы построили. Какой?
[09:34.880 --> 09:45.360]  А, удвоение каждой буквы. Надо будет на примере посмотреть, сейчас доказательство
[09:45.360 --> 09:55.440]  конструктивное будет просто. Вот. Я говорю, что не обязательно это будет не удлиняющим гомоморфизм,
[09:55.440 --> 10:03.040]  а надо уточнить. Вот. Скорее всего это будет не так. Итак, собственно, давайте докажем эту теорему.
[10:03.040 --> 10:14.960]  Идея такая. Что у нас с вами такое конечный преобразователь? Автомат.
[10:14.960 --> 10:44.840]  Так, только у нас phi, кажется, да. А? Черт. А в таковом теореме, формулер в теорем,
[10:44.840 --> 11:00.360]  у нас phi было, да? А, сейчас, секунду. А, это phi. Короче, я слепой. Хорошо. Вот. Хорошо.
[11:00.360 --> 11:18.120]  Пофиксили. Так, смотрите, конечный преобразователь. Причем, какой конечный
[11:18.120 --> 11:23.960]  преобразователь мы с вами можем взять? Какому простому виду мы с вами в прошлый раз приводили
[11:23.960 --> 11:42.200]  конечный преобразователь? Да, у нас на переходе либо аэ, либо эб. А теперь фишка очень красивая.
[11:42.200 --> 11:53.920]  Давайте возьмем слово. Пусть у нас и сигма со звездой, и гамма со звездой. Да? И сделаем
[11:53.920 --> 12:11.400]  следующую вещь. Мы с вами сделаем трансформацию. Вот сейчас очень аккуратно. А мы с вами это, так,
[12:11.400 --> 12:22.720]  psi, так, phi, не удлиняющий гамма-морфизм, сделаем следующее из дельта в сигма со звездой.
[12:22.720 --> 12:38.000]  Дельта – это переход в автомате. То есть мы каждому переходу в автомате поставим
[12:38.000 --> 13:03.400]  следующее соотношение. Phi от q1a q2b будет выдавать букву А. Вот. Единственное, давайте поймем,
[13:03.400 --> 13:08.320]  что же такое дельта со звездой? То есть как алфавит надо множеством дельта делать?
[13:08.320 --> 13:33.440]  Вывод в автомате – это на самом деле элемент множества дельта со звездой. Вот у нас переходы
[13:33.440 --> 13:57.600]  либо такие, либо такие. Вот. Вывод в автомате – это будет элемент дельта со звездой. Ну,
[13:57.600 --> 14:02.000]  поэтому это можно считать гамма-морфизмом. То есть по факту у нас по пути автомате этот
[14:02.000 --> 14:10.960]  гамма-морфизм будет выдавать слово, которое мы принимаем из эстедеина. Ага. Гамма-морфизм
[14:10.960 --> 14:22.680]  не удлиняющий, потому что это элемент дельты, а здесь либо буква, либо пустое множество. То есть
[14:22.680 --> 14:29.400]  что у нас будет делать phi в минус первое? Оно берет слово, которое мы принимаем на вход,
[14:29.400 --> 14:38.160]  и превращает его в путь в автомате. Дальше. Нам надо его ограничить на регулярный язык.
[14:38.160 --> 14:48.240]  Согласны? После этого. Потому что у нас обратный гамма-морфизм может быть множественный.
[14:48.240 --> 15:06.920]  Теперь у нас будет следующее. Я его сейчас поясню. Я пока в кавычках напишу.
[15:18.240 --> 15:27.280]  Да, одной букве А может соответствовать несколько переходов, поэтому этот прообраз неоднозначный.
[15:27.280 --> 15:37.760]  Да, обратный А? Да, ну то есть мы берем все множество, но из-за того, что нам не хочется,
[15:37.760 --> 15:43.760]  чтобы лишние ограничения, ну какие-то другие прообразы у нас были, мы эту всю штуку ограничиваем
[15:43.760 --> 15:52.920]  на множество путей в нашем автомате. От стартовы до завершающихся... Ага. Так, понятно почему R регулярный?
[15:52.920 --> 16:08.040]  Потому что мы можем явно построить автомат, который принимает множество из дельты это. Ну то есть
[16:08.040 --> 16:25.720]  там будет еще пример, но по факту R это у нас с вами... Сейчас. На ребрах дельта написан
[16:25.720 --> 16:38.200]  буква алфавита дельта. Ну а дальше над этим алфавитом мы просто строим автомат. Собственно,
[16:38.200 --> 16:43.360]  у нас и стартовые, у нас есть переходы, у нас просто алфавит меняется в нашем автомате.
[16:43.360 --> 16:50.120]  С того, какие буквы на нем входа и выходы были написаны, на то, собственно, какое именно это
[16:50.120 --> 16:55.400]  ребро. Все ребра можно переномировать. Тут единственное, надо сказать, что модуль дельта
[16:55.400 --> 17:03.120]  будет этот. Модуль дельта меньше бесконечности, это важно. Иначе бы мы над этой штукой язык не
[17:03.120 --> 17:16.280]  построили. Ага. Так, а теперь давайте подумаем, чем же у нас будет это. То есть смотрите, мы что
[17:16.280 --> 17:24.160]  взяли? Мы взяли наш автомат, наш вход, перевели его множество ребер автомата, выкинули все лишнее.
[17:24.160 --> 17:33.200]  Теперь что нам надо сделать? Склеить обратно. И у нас преобразование будет следующее. У нас
[17:33.200 --> 17:58.280]  фи, ой, это от q1aq2ε будет равняться ε, и это q1εq2β будет равняться b. Все, приехали.
[18:03.200 --> 18:16.480]  Нет, полагались, потому что здесь, если на входе несколько букв, то гаммарфизм сразу
[18:16.480 --> 18:30.800]  является неудлиняющим. Ага, давай доказать те ряды. Как бы явная конструкция, но дальше как это
[18:30.800 --> 18:39.800]  доказывать. Значит, давайте проговорим все-таки. То есть пусть у нас слово принадлежит некоторому
[18:39.800 --> 18:50.680]  конечному преобразователю ψ, тогда рассмотрим пару. Сейчас попробую быстренько. То есть у нас
[18:50.680 --> 19:04.600]  пара uv принадлежит нашему ψ, тогда и только тогда, когда существует вывод из q0u ε,
[19:04.600 --> 19:19.240]  которые выводят в нашем автомате q εv, причем мы можем фиксануть ребра по пути delta1 и т.д. delta m.
[19:19.240 --> 19:36.720]  Но тогда что у нас получается? У нас получается, что delta1 и т.д. delta m принадлежит прообразу
[19:36.720 --> 19:52.960]  нашего обратного гаммарфизма от слова u. Ну а delta1 и т.д. delta n в другой стороне принадлежит
[19:52.960 --> 20:08.400]  обратному гаммарфизму от v. Но при этом одновременно по построению delta n принадлежит у нас множеству r,
[20:08.400 --> 20:22.800]  нашему языку r. То есть получается из этого мы сразу получаем, что у нас есть вот это
[20:22.800 --> 20:32.560]  пара влежит в выкомпозиции. Дальше мы ограничим это все на регулярку, а дальше мы берем гаммарфизм.
[20:32.560 --> 20:44.240]  В обратную сторону давайте рассмотрим, какие у нас с вами были преобразования.
[20:44.240 --> 21:04.600]  У нас получается с вами пара u, v. Это на самом деле пара у дельта, дельта, давайте n какое-то,
[21:04.600 --> 21:15.840]  на композицию delta n, t, delta n, t. Тут входы выхода на композицию delta n, t, v. Ну собственно из этого
[21:15.840 --> 21:23.080]  будет следовать, что delta n, t это путь в нашем автомате. Из этого следовать будет, что delta n, t это у нас
[21:23.080 --> 21:36.480]  получается опять же обратная трансформация, обратного гаммарфизма на это слово. И здесь тоже мы
[21:36.480 --> 21:43.800]  получаем обратное преобразование. То есть в обе стороны доказательства строятся, ну и собственно
[21:43.800 --> 21:48.280]  этим мы его можем закончить. То есть главное тут, смотрите, главное тут запомнить картинку,
[21:48.400 --> 21:57.760]  как это делается. То есть запоминаем, входы мы переводим в ребра, ребра переписываем в слово в
[21:57.760 --> 22:05.080]  регулярку, а потом по этим ребрам мы восстанавливаем выход. Давайте пример посмотрим. Так, понятно ли
[22:05.080 --> 22:18.200]  доказательство этого факта? Потому что здесь на входе мы всегда принимаем одну букву
[22:18.200 --> 22:27.240]  алфавита дельта. Да, алфавита дельта у нас, а выход всегда либо один, либо пустой. Давайте
[22:27.240 --> 22:33.280]  попробуем построить два примера тогда, поскольку один пример уже запросили у нас. Собственно это
[22:33.280 --> 22:42.240]  доказательство. Во, замечательная картинка. Только не знаю. Давайте мы, так давайте выберем свет.
[22:42.240 --> 22:53.360]  Так, во, кажется так будет виднее. Видно, что на доске. Так, давайте попробуем с этой штуки сделать
[22:53.360 --> 22:59.960]  какой-то пример. Алфавит ребер. Ну тут он у меня обозначен тетой, но на самом деле это дельта. То
[22:59.960 --> 23:11.960]  есть у нас есть ребра Q01, Q02, Q13, Q23, Q33. Значит прямой гомоморфизм, а точнее обратный гомоморфизм.
[23:11.960 --> 23:18.960]  Его можно построить, а вот регулярное выражение у нас будет вот такое. Напоминаю, что по любому
[23:18.960 --> 23:23.000]  автомату мы можем с вами строить регулярные выражения. Эта теремоклиния у нас была в начале.
[23:23.000 --> 23:33.840]  Собственно получается у нас регулярное выражение либо Q01, Q13, либо Q02, Q23, либо получается Q33
[23:33.840 --> 23:52.800]  со звездой. И у меня, и кажется сейчас у нас был вопрос, как выглядит этот пример в случае тогда,
[23:52.800 --> 24:10.080]  когда мы делаем удвоение каждой буквы. Ну если типа действует так, мы можем сделать похитрее,
[24:10.080 --> 24:19.840]  можно построить конструктивное доказательство. То есть у нас есть ребро X, phi от X. Где наш гомоморфизм?
[24:19.840 --> 24:26.560]  Это удвоение. То есть по факту X, X, X. Дальше мы переводим это в автомат,
[24:26.560 --> 24:37.960]  который делает сначала по входу X выход епсилом. По епсилому пишет X. И дальше по епсилому делает X.
[24:37.960 --> 24:49.000]  Вот такой вот. Давайте эту вершинку обозначим 1, эту вершинку 2. 1X эту вершинку обозначим 2X.
[24:49.000 --> 24:54.040]  А эту вершинку обозначим 3X. И тогда регулярка у нас будет страшная.
[24:54.040 --> 25:23.600]  Так. Давайте я так напишу. Сумма по X. 0,1X на 1,2X на 2,0X. Это со звездой.
[25:23.600 --> 25:32.400]  Ага. То есть для каждого X мы эту петлю разворачиваем на последовательность трех путей.
[25:32.400 --> 25:39.120]  Вот. И берем X, X со звездой. То есть это получается композиция слов длины 3.
[25:39.120 --> 25:56.760]  Да. Ну и опять же обратный гоморфизм строится. Так. Понятны примеры? Как строить регулярные
[25:56.760 --> 26:03.760]  выражения? Отлично. Теперь про применение этого факта. Оно позволяет нам доказать очень много
[26:03.880 --> 26:09.520]  разных интересных фактов. Мы будем доказывать с вами следующее. Представим себе, что у нас
[26:09.520 --> 26:17.680]  на входе подается автомат или регулярный язык. Как вы думаете, образ регулярного языка при
[26:17.680 --> 26:28.560]  конечном преобразовании каким будет? Регулярным. Да. А конечный... свободного языка? Правильно.
[26:28.560 --> 26:36.080]  Все. Мы сейчас это будем доказывать. Итак, смотрите, теперь на самом деле у нас есть аппарат.
[26:36.080 --> 26:41.680]  Мы можем доказать на самом деле, что регулярные языки замкнуты относительно гомоморфизма
[26:41.680 --> 26:51.680]  неудлиняющего, прообраза гомоморфизма и ограничений на регулярный язык. Вот. Поэтому
[26:51.680 --> 27:12.680]  давайте это сформулируем как факт. Пусть у нас phi kp, r регулярный,
[27:12.680 --> 27:24.720]  следовательно, psi от r. Как образ языка при конечном преобразовании? Регулярный. Да,
[27:24.720 --> 27:33.520]  оказательство. Значит, представляем psi как некоторые phi в минус первой id на r, давайте r
[27:33.520 --> 27:44.480]  delta композиция с некоторым это. Ну и нам надо доказать, что phi в минус первой от r будет регулярным,
[27:44.480 --> 27:51.240]  ограничение на регулярный будет тоже регулярным, ну и соответственно гомоморфизм тоже будет
[27:51.240 --> 28:07.800]  регулярным. Так, ну давайте подумаем. У нас phi неудлиняющий. Давайте решим уравнение.
[28:21.240 --> 28:35.320]  Вот такое вот. Решаем уравнение в регулярных языках. У нас phi неудлиняющий гомоморфизм,
[28:35.320 --> 28:47.160]  нам надо понять, как у нас решается это уравнение. Да, давайте обозначим множество х,
[28:47.160 --> 29:00.840]  подножие sigma такое, что phi от x равняется epsilon. Тогда у нас получается v, это у нас x звездой.
[29:00.840 --> 29:25.280]  Так, давайте сейчас. Вроде так, да? Ну x напишем как сумму буквок. Да, v принадлежит. Вот,
[29:25.560 --> 29:34.600]  получается, смотрите, phi в минус первой от epsilon будет равняться языком, задавающим
[29:34.600 --> 29:43.160]  регулярное выражение x звездой. Так ведь? Ага, задача сложнее.
[29:43.160 --> 30:03.560]  Мы хотим понять, как решается вот это уравнение. phi от w равняется epsilon. Да,
[30:03.560 --> 30:08.940]  который неудлиняющий гомоморфизм. Просто утверждение такое, что поскольку наш гомоморфизм не
[30:08.940 --> 30:13.100]  удлиняющий, то любое слово, которое у нас есть, можно представить в виде каких-то базовых
[30:13.100 --> 30:27.540]  компонентов. Так, ну что, давайте решать теперь phi от... равно b? Да, b это символ.
[30:27.540 --> 30:55.580]  Ну да. Смотрите, так. Почему это так? Ну, смотрите, допустим, у нас слово разбивается в некоторые
[30:55.580 --> 31:09.020]  компоненты. Так, пусть k минус 1. И только одна из этих букв может прийти в букву b,
[31:09.020 --> 31:21.420]  остальные все должны перейти в epsilon. Пусть это буква k. Вот, тогда вот эти все буквы,
[31:21.420 --> 31:28.940]  они переходят в epsilon. А значит, что вот эта вот штука
[31:28.940 --> 31:38.420]  принадлежит языку, задаваемой x звездой. И вот эта штука у нас тоже лежит в языке,
[31:38.420 --> 32:06.420]  задаваемой x звездой. А теперь смотрите, в чем фишка. Теперь давайте решать. Вот такое вот уравнение.
[32:06.420 --> 32:23.900]  Произвольное уравнение. А, хотя бы два. Ну, смотрите, суть в том, что опять же,
[32:23.900 --> 32:30.020]  я вернусь к слайдам, то есть как бы решение phi от x равно epsilon, это некоторое множество слов,
[32:30.020 --> 32:36.220]  которое мы можем обозначать либо x, либо x epsilon. Дальше, если у нас есть уравнение для ad буквы,
[32:36.220 --> 32:41.460]  то мы можем сделать вот такую вот вещь. Да, то есть у нас получается phi минус 1 adb,
[32:41.460 --> 32:49.820]  мы можем обозначить как тоже. Давайте нотацию введем все-таки, чтобы не забыть. То есть,
[32:49.820 --> 33:03.820]  это x epsilon, это x epsilon, а здесь у нас будет, вот это пусть у нас xb будет. Вот, а дальше утверждается
[33:03.820 --> 33:12.780]  следующее, что вот эти вот все свойства можно переложить для общего языка. Для этого нам достаточно?
[33:12.780 --> 33:38.460]  Где, где, где? А, язык задаваем регулярным выражением. Да, нам надо взять его элементы,
[33:38.460 --> 33:43.460]  просуммировать все буквки и получить регулярные выражения. Вот тут детально на слайде написано.
[33:43.460 --> 33:58.500]  Вот, и смотрите теперь, что у нас получается. У нас phi в минус 1 от произвольного слова,
[33:58.500 --> 34:13.540]  вот слово в штрих. Это что? Нам надо разложить вот эту вот всю вещь на составные части. То есть,
[34:13.540 --> 34:24.580]  у нас было слово, допустим, aba ca ba, вот это вот слово. Нам нужно заменить вот эту вот штуку на
[34:24.580 --> 34:39.300]  следующее, x. О, господи, сейчас. Давайте какое-нибудь короче слово, aba. Aba у нас заменяется на следующее,
[34:39.300 --> 35:06.620]  x, е, че у нас получается? x, е, xb, xe, xa. Вот такое вот регулярное выражение у нас будет приводить к образу
[35:06.620 --> 35:08.620]  к образу АБА.
[35:14.620 --> 35:16.620]  Вот.
[35:16.620 --> 35:18.620]  Ну, я просто тупо написал.
[35:18.620 --> 35:20.620]  Понятно, что они сокращаются.
[35:22.620 --> 35:24.620]  То есть вот это сокращается, вот это сокращается тоже.
[35:26.620 --> 35:28.620]  Ну, а дальше
[35:30.620 --> 35:32.620]  что мы с вами говорили, товарищи?
[35:32.620 --> 35:34.620]  Если у нас есть регулярные выражения,
[35:36.620 --> 35:38.620]  что будет, если на автомате мы напишем регулярные выражения?
[35:42.620 --> 35:44.620]  Регулярный автомат.
[35:44.620 --> 35:46.620]  Множество языков задаваем регулярными автоматами
[35:46.620 --> 35:48.620]  совпадает с чем у нас?
[35:50.620 --> 35:52.620]  С множеством регулярных языков.
[36:06.620 --> 36:08.620]  Так, давайте этот факт докажем,
[36:08.620 --> 36:10.620]  а потом пойдем на перерыв.
[36:12.620 --> 36:14.620]  Так, то есть мы доказали,
[36:14.620 --> 36:16.620]  что если у нас есть неудлиняющий гомоморфизм,
[36:16.620 --> 36:18.620]  то прообраз от него будет регулярным.
[36:24.620 --> 36:26.620]  Так, следующий пункт.
[36:30.620 --> 36:32.620]  L регулярный.
[36:32.620 --> 36:34.620]  R дельта регулярный.
[36:40.620 --> 36:42.620]  И чему у нас будет равняться id
[36:44.620 --> 36:46.620]  на этот регулярную дельту от множества l?
[36:52.620 --> 36:54.620]  Трещением языков.
[36:58.620 --> 37:00.620]  Это какой язык у нас будет?
[37:02.620 --> 37:04.620]  Трещение двух регулярных языков.
[37:12.620 --> 37:14.620]  Так, хорошо. Ну а что с гомоморфизмом делать будем?
[37:32.620 --> 37:34.620]  Заменяем регулярный язык и заменяем все гомоморфизмы.
[38:02.620 --> 38:04.620]  Регулярный язык прогоняем через l и получаем регулярный язык.
[38:06.620 --> 38:08.620]  Да, то есть образ любого регулярного языка
[38:08.620 --> 38:10.620]  является регулярным.
[38:12.620 --> 38:14.620]  Все, доказали.
[38:16.620 --> 38:18.620]  Ну а давайте после перерыва докажем,
[38:18.620 --> 38:20.620]  что для контекста свободных языков будет ровно то же самое,
[38:20.620 --> 38:22.620]  только там будет некоторое усложнение.
[38:22.620 --> 38:24.620]  В перерыв можете вспомнить,
[38:24.620 --> 38:26.620]  как выглядит нормальная форма хомского.
[38:26.620 --> 38:28.620]  Давайте потихонечку продолжать.
[38:32.620 --> 38:34.620]  Давайте следующий факт,
[38:34.620 --> 38:36.620]  который мы с вами будем доказывать,
[38:36.620 --> 38:38.620]  что пусть у нас l это кс язык,
[38:42.620 --> 38:44.620]  получается psi это у нас конечный преобразователь,
[38:48.620 --> 38:50.620]  тогда
[38:52.620 --> 38:54.620]  тоже кс язык.
[38:56.620 --> 38:58.620]  Итак, давайте поймем,
[38:58.620 --> 39:00.620]  какой из фактов мы быстро докажем.
[39:00.620 --> 39:02.620]  Опять же, используем теория манева,
[39:02.620 --> 39:04.620]  мы получаем,
[39:04.620 --> 39:06.620]  что у нас
[39:10.620 --> 39:12.620]  dphi это не удлиняющий.
[39:26.620 --> 39:28.620]  Не, мы три доказали.
[39:30.620 --> 39:32.620]  Вот первый.
[39:34.620 --> 39:36.620]  Вот это первый факт,
[39:36.620 --> 39:38.620]  которым мы доказывали, да?
[39:38.620 --> 39:40.620]  Вот это сужение на регулярный,
[39:40.620 --> 39:42.620]  а третье
[39:42.620 --> 39:44.620]  заменили
[39:44.620 --> 39:46.620]  в регулярночке везде буковки
[39:46.620 --> 39:48.620]  на образ гомоморфизма,
[39:48.620 --> 39:50.620]  от этих буковочек.
[39:50.620 --> 39:52.620]  Получили регулярку.
[39:52.620 --> 39:54.620]  Так, давайте поймем,
[39:54.620 --> 39:56.620]  какой из этих трех пунктов
[39:56.620 --> 39:58.620]  проще всего доказать,
[39:58.620 --> 40:00.620]  обладая некоторыми нашими знаниями.
[40:04.620 --> 40:06.620]  Обратный гомоморфизм, ограничение
[40:06.620 --> 40:08.620]  на регулярный или
[40:08.620 --> 40:10.620]  прямой гомоморфизм?
[40:10.620 --> 40:12.620]  Да, ограничение на регулярный.
[40:12.620 --> 40:14.620]  Пусть у нас l
[40:14.620 --> 40:16.620]  это кс,
[40:16.620 --> 40:18.620]  r это у нас регулярный язык,
[40:22.620 --> 40:24.620]  получаем id на регулярный язык,
[40:24.620 --> 40:26.620]  чему равняется у нас с вами
[40:26.620 --> 40:28.620]  от языка l.
[40:38.620 --> 40:40.620]  Все замолчали.
[40:40.620 --> 40:42.620]  Показывают мысли,
[40:42.620 --> 40:44.620]  да вон показано, да.
[40:44.620 --> 40:46.620]  Смотрите,
[40:46.620 --> 40:48.620]  это пересечение ks
[40:48.620 --> 40:50.620]  и регулярного, а пересечение
[40:50.620 --> 40:52.620]  ks регулярного у нас какой язык?
[40:52.620 --> 40:54.620]  ks.
[40:54.620 --> 40:56.620]  Мы это доказывали с вами.
[40:56.620 --> 40:58.620]  Так, теперь делаем
[40:58.620 --> 41:00.620]  обратный гомоморфизм.
[41:00.620 --> 41:02.620]  И здесь нам понадобится
[41:02.620 --> 41:04.620]  решение нашего уравнения,
[41:04.620 --> 41:06.620]  поэтому я его стирать не буду.
[41:14.620 --> 41:16.620]  Итак, смотрите,
[41:16.620 --> 41:18.620]  пусть у нас l это ks язык,
[41:24.620 --> 41:26.620]  следовательно, существует g
[41:30.620 --> 41:32.620]  в n в хомского.
[41:36.620 --> 41:38.620]  На самом деле нормальная форма
[41:38.620 --> 41:40.620]  хомского здесь нужна чисто для упрощения.
[41:40.620 --> 41:42.620]  Доказательства.
[41:42.620 --> 41:44.620]  Такая, что l от g равняется l.
[41:50.620 --> 41:52.620]  Какие у нас правила есть в грамматике
[41:52.620 --> 41:54.620]  в нормальной форме хомского?
[42:08.620 --> 42:10.620]  Ну, а на самом деле теперь
[42:10.620 --> 42:12.620]  фишка в чем?
[42:12.620 --> 42:14.620]  Смотрите,
[42:14.620 --> 42:16.620]  х,
[42:16.620 --> 42:18.620]  ой, х эпсилон,
[42:18.620 --> 42:20.620]  это что у нас с вами?
[42:22.620 --> 42:24.620]  Так, смотрите.
[42:30.620 --> 42:32.620]  Мы знаем, как решается это уравнение.
[42:32.620 --> 42:34.620]  Мы понимаем с вами,
[42:34.620 --> 42:36.620]  что phi в минус l,
[42:36.620 --> 42:38.620]  первый от эпсилон,
[42:38.620 --> 42:40.620]  это что у нас с вами?
[42:42.620 --> 42:44.620]  И это х эпсилон со звездой.
[42:46.620 --> 42:48.620]  Давайте построим грамматику.
[42:48.620 --> 42:50.620]  g эпсилон
[42:50.620 --> 42:52.620]  равняется
[42:52.620 --> 42:54.620]  s эпсилон,
[42:54.620 --> 42:56.620]  а p
[42:58.620 --> 43:00.620]  что там у нас?
[43:00.620 --> 43:02.620]  n эпсилон, чего не хватает?
[43:02.620 --> 43:04.620]  Сигма.
[43:06.620 --> 43:08.620]  Только давайте сигма штрих.
[43:14.620 --> 43:16.620]  Смотрите, фишка в чем?
[43:16.620 --> 43:18.620]  У нас есть прообраз v эпсилон.
[43:20.620 --> 43:22.620]  У нас есть грамматика,
[43:22.620 --> 43:24.620]  которая по языку g
[43:24.620 --> 43:26.620]  распознает наш язык l.
[43:26.620 --> 43:28.620]  Идея такая,
[43:28.620 --> 43:30.620]  как получить прообраз из этой фишки?
[43:30.620 --> 43:32.620]  Давайте здесь заменим буквы
[43:32.620 --> 43:34.620]  на их прообраза.
[43:36.620 --> 43:38.620]  Да, только буквы на их прообраза
[43:38.620 --> 43:40.620]  надо заменить красиво,
[43:40.620 --> 43:42.620]  потому что все-таки здесь у нас регулярные выражения висят.
[43:42.620 --> 43:44.620]  Поэтому мы должны
[43:44.620 --> 43:46.620]  эти регулярные выражения превратить
[43:46.620 --> 43:48.620]  в автоматы,
[43:48.620 --> 43:50.620]  в грамматики, которые распознают именно этот язык.
[43:58.620 --> 44:00.620]  То есть нам надо это все
[44:00.620 --> 44:02.620]  заменить на phi в минус 1 от a.
[44:02.620 --> 44:04.620]  А здесь это надо заменить phi в минус
[44:04.620 --> 44:06.620]  1 от эпсилон.
[44:06.620 --> 44:08.620]  Есть регулярки, соответственно мы пишем
[44:08.620 --> 44:10.620]  вот такую грамматику
[44:10.620 --> 44:12.620]  и для буквы a
[44:12.620 --> 44:14.620]  мы тоже пишем такую.
[44:14.620 --> 44:16.620]  Да.
[44:24.620 --> 44:26.620]  И тогда мы заменяем нашу грамматику
[44:26.620 --> 44:28.620]  на следующую.
[44:28.620 --> 44:30.620]  Все правила.
[44:34.620 --> 44:36.620]  Подвешиваем
[44:36.620 --> 44:38.620]  всю эту историю.
[44:38.620 --> 44:40.620]  s заменяем на
[44:40.620 --> 44:42.620]  s эпсилон,
[44:42.620 --> 44:44.620]  a заменяем на bc,
[44:44.620 --> 44:46.620]  а a заменяем
[44:46.620 --> 44:48.620]  на sa.
[44:48.620 --> 44:50.620]  Да, и вот эти вот sa
[44:50.620 --> 44:52.620]  у нас как раз задают прообразы.
[44:52.620 --> 44:54.620]  Нашу букву.
[44:54.620 --> 44:56.620]  Все.
[44:58.620 --> 45:00.620]  Да,
[45:00.620 --> 45:02.620]  понятно как строится
[45:02.620 --> 45:04.620]  прообраз при неудлиняющем гаммарфизме?
[45:06.620 --> 45:08.620]  Мы воспользовались фактом тем,
[45:08.620 --> 45:10.620]  что у нас есть ограничение на регулярном языке.
[45:10.620 --> 45:12.620]  Так.
[45:20.620 --> 45:22.620]  Автомат по регулярке, мы для него
[45:22.620 --> 45:24.620]  кс-грамматику строим.
[45:26.620 --> 45:28.620]  Мы же по регулярке можем
[45:28.620 --> 45:30.620]  кс-грамматику построить?
[45:36.620 --> 45:38.620]  Мы делаем следующее.
[45:38.620 --> 45:40.620]  У нас была классическая грамматика
[45:40.620 --> 45:42.620]  в нормальной форме хомска. У нас есть выход буквы,
[45:42.620 --> 45:44.620]  есть выход эпсилон.
[45:44.620 --> 45:46.620]  Мы вместо выхода эпсилона хотим
[45:46.620 --> 45:48.620]  положить сюда прообраз.
[45:50.620 --> 45:52.620]  Поэтому мы берем для
[45:52.620 --> 45:54.620]  вот этой штуки, строим
[45:54.620 --> 45:56.620]  кс-грамматику.
[45:56.620 --> 45:58.620]  У нас есть стартованный терминал
[45:58.620 --> 46:00.620]  для этой грамматики.
[46:00.620 --> 46:02.620]  Есть же?
[46:02.620 --> 46:04.620]  Да, да, да.
[46:04.620 --> 46:06.620]  Ну, то есть для х со звездой
[46:06.620 --> 46:08.620]  давайте образно.
[46:10.620 --> 46:12.620]  То есть у нас, если у нас есть
[46:12.620 --> 46:14.620]  х эпсилон со звездой, то грамматика эта
[46:14.620 --> 46:16.620]  задается так.
[46:16.620 --> 46:18.620]  С эпсилон.
[46:20.620 --> 46:22.620]  Как это, господи?
[46:24.620 --> 46:26.620]  Х эпсилон
[46:26.620 --> 46:28.620]  с эпсилон
[46:28.620 --> 46:30.620]  или эпсилон?
[46:30.620 --> 46:32.620]  Х эпсилон со звездой задается такой грамматикой.
[46:32.620 --> 46:34.620]  Ну все.
[46:34.620 --> 46:36.620]  А теперь мы делаем следующее.
[46:36.620 --> 46:38.620]  Вот у нас была грамматика, мы берем вместо
[46:38.620 --> 46:40.620]  эпсилона, подставляем сюда
[46:40.620 --> 46:42.620]  эс-эпсилон.
[46:42.620 --> 46:44.620]  И таким образом мы
[46:44.620 --> 46:46.620]  вместо того, чтобы выводить слово
[46:46.620 --> 46:48.620]  эпсилон, мы выводим прообраз слова
[46:48.620 --> 46:50.620]  эпсилон при обратном гаммарфизме.
[46:54.620 --> 46:56.620]  Саша, цель в том, чтобы вместо того, чтобы
[46:56.620 --> 46:58.620]  выводить сам язык, выводить те слова,
[46:58.620 --> 47:00.620]  которые для гаммарфизмы пригодились
[47:00.620 --> 47:02.620]  в слова эпсилона.
[47:02.620 --> 47:04.620]  Да, построить грамматику,
[47:04.620 --> 47:06.620]  которую...
[47:06.620 --> 47:08.620]  Чтобы писать букву А, нужно писать то, что для гаммарфизмы
[47:08.620 --> 47:10.620]  идет в букву А.
[47:10.620 --> 47:12.620]  Чтобы это выводить, мы вместо
[47:12.620 --> 47:14.620]  грамматики эпсилона заменяем
[47:14.620 --> 47:16.620]  маленькую букву А в правильных правилах
[47:16.620 --> 47:18.620]  на грамматику,
[47:18.620 --> 47:20.620]  которая привозит
[47:20.620 --> 47:22.620]  эту маленькую букву А
[47:22.620 --> 47:24.620]  в образе.
[47:24.620 --> 47:26.620]  Вот.
[47:26.620 --> 47:28.620]  Да, то есть получается у нас
[47:28.620 --> 47:30.620]  образ...
[47:34.620 --> 47:36.620]  Как он называется?
[47:36.620 --> 47:38.620]  Фи в минус первое у нас тоже
[47:38.620 --> 47:40.620]  КС будет, потому что мы явно
[47:40.620 --> 47:42.620]  КС-грамматику построили для него.
[47:42.620 --> 47:44.620]  Так, а теперь
[47:44.620 --> 47:46.620]  вопрос. Как строить образ при
[47:46.620 --> 47:48.620]  прямом гаммарфизме?
[47:48.620 --> 47:50.620]  А?
[47:50.620 --> 47:52.620]  Ну да, значит
[47:52.620 --> 47:54.620]  С у нас
[47:54.620 --> 47:56.620]  А переводилась в А,
[47:56.620 --> 47:58.620]  значит мы вот это вот правило
[47:58.620 --> 48:00.620]  трансформируем А, переводится
[48:00.620 --> 48:02.620]  в образ этой буквы при
[48:02.620 --> 48:04.620]  гаммарфизме.
[48:04.620 --> 48:06.620]  Ну а С в эпсилон
[48:06.620 --> 48:08.620]  на что заменяется?
[48:10.620 --> 48:12.620]  На С в эпсилон, да.
[48:12.620 --> 48:14.620]  Все.
[48:16.620 --> 48:18.620]  Доказали.
[48:22.620 --> 48:24.620]  Теперь вопрос.
[48:26.620 --> 48:28.620]  Может ли быть такое
[48:30.620 --> 48:32.620]  упражнение, которое за
[48:32.620 --> 48:34.620]  1 решается?
[48:36.620 --> 48:38.620]  Можно ли построить
[48:38.620 --> 48:40.620]  конечное преобразование,
[48:44.620 --> 48:46.620]  которое все слова вида
[48:46.620 --> 48:48.620]  АВН и БВН будут переводить
[48:48.620 --> 48:50.620]  в слова АВН и БВН и ЦВН?
[48:52.620 --> 48:54.620]  При конечном преобразовании.
[49:00.620 --> 49:02.620]  Почему?
[49:02.620 --> 49:04.620]  Да.
[49:04.620 --> 49:06.620]  Это КС язык, а это не
[49:06.620 --> 49:08.620]  КС язык.
[49:12.620 --> 49:14.620]  Ура!
[49:14.620 --> 49:16.620]  Ну так же мы понимаем с вами следующее, что
[49:16.620 --> 49:18.620]  нельзя никакую букву удваивать вот так.
[49:18.620 --> 49:20.620]  Это тоже
[49:20.620 --> 49:22.620]  нельзя задать.
[49:28.620 --> 49:30.620]  Так.
[49:30.620 --> 49:32.620]  Это вот одно из способств,
[49:32.620 --> 49:34.620]  которое позволяет доказывать, что что-то
[49:34.620 --> 49:36.620]  не является конечным преобразованием,
[49:36.620 --> 49:38.620]  не сдается конечным преобразованием.
[49:38.620 --> 49:40.620]  Как вы думаете, есть ли еще какой-то
[49:40.620 --> 49:42.620]  способ?
[49:42.620 --> 49:44.620]  Да.
[49:44.620 --> 49:46.620]  Есть.
[49:46.620 --> 49:48.620]  Да.
[49:52.620 --> 49:54.620]  Хотите рубрику
[49:54.620 --> 49:56.620]  «Эксперимент»?
[49:58.620 --> 50:00.620]  Ну, это она.
[50:00.620 --> 50:02.620]  Только мы ее сформулируем.
[50:02.620 --> 50:04.620]  Только сформулируйте, вы сейчас ее вы.
[50:12.620 --> 50:14.620]  Хорошо.
[50:14.620 --> 50:16.620]  Итак, значит,
[50:16.620 --> 50:18.620]  если у нас С есть конечное
[50:18.620 --> 50:20.620]  преобразование,
[50:20.620 --> 50:22.620]  то
[50:22.620 --> 50:24.620]  существует что?
[50:26.620 --> 50:28.620]  Да.
[50:28.620 --> 50:30.620]  Дальше.
[50:32.620 --> 50:34.620]  Какое слово? У нас нет слов.
[50:34.620 --> 50:36.620]  Пары.
[50:36.620 --> 50:38.620]  Так.
[50:42.620 --> 50:44.620]  Такая что?
[50:48.620 --> 50:50.620]  Так. Какой простой вид
[50:50.620 --> 50:52.620]  у нас есть у конечного преобразования?
[50:54.620 --> 50:56.620]  Либо А,
[50:56.620 --> 50:58.620]  либо Э.
[50:58.620 --> 51:00.620]  Да.
[51:00.620 --> 51:02.620]  Сумма длин
[51:02.620 --> 51:04.620]  больше равна...
[51:04.620 --> 51:06.620]  Больше или больше равна?
[51:06.620 --> 51:08.620]  По-моему, больше равна, чем П.
[51:10.620 --> 51:12.620]  То есть мы пользуемся тем,
[51:12.620 --> 51:14.620]  что у нас переходы либо
[51:14.620 --> 51:16.620]  А, Э,
[51:16.620 --> 51:18.620]  либо Э.
[51:20.620 --> 51:22.620]  Да.
[51:24.620 --> 51:26.620]  Существует такое у1,
[51:26.620 --> 51:28.620]  у2, у3.
[51:30.620 --> 51:32.620]  Такие что?
[51:34.620 --> 51:36.620]  Так, условия какие?
[51:38.620 --> 51:40.620]  Условия какие у нас?
[51:42.620 --> 51:44.620]  Сумма длин у1, у2.
[51:48.620 --> 51:50.620]  Да.
[51:52.620 --> 51:54.620]  Так, что еще?
[51:58.620 --> 52:00.620]  Да.
[52:04.620 --> 52:06.620]  Угу.
[52:08.620 --> 52:10.620]  Такие что для любого К
[52:10.620 --> 52:12.620]  больше равно нуля.
[52:24.620 --> 52:26.620]  Ой.
[52:26.620 --> 52:28.620]  Не языку, а конечному преобразованию.
[52:28.620 --> 52:30.620]  Доказательство.
[52:30.620 --> 52:32.620]  Аналогично тому,
[52:32.620 --> 52:34.620]  как это проводилось для автоматов,
[52:34.620 --> 52:36.620]  только, собственно,
[52:36.620 --> 52:38.620]  перехода.
[52:40.620 --> 52:42.620]  Нет.
[52:42.620 --> 52:44.620]  Тогда надо вспоминать доказательство.
[52:44.620 --> 52:46.620]  Мы берем, делаем цикл,
[52:46.620 --> 52:48.620]  делаем первое пересечение.
[52:48.620 --> 52:50.620]  Тут у нас будет пара у1,
[52:50.620 --> 52:52.620]  в1,
[52:52.620 --> 52:54.620]  в2,
[52:54.620 --> 52:56.620]  в3,
[52:56.620 --> 52:58.620]  тут у нас будет пара у1, в1,
[53:00.620 --> 53:02.620]  здесь пара у2, в2,
[53:02.620 --> 53:04.620]  а здесь пара у3, в3.
[53:06.620 --> 53:08.620]  Поскольку это первый цикл,
[53:08.620 --> 53:10.620]  то в нем длина не больше, чем П.
[53:12.620 --> 53:14.620]  Да, да.
[53:16.620 --> 53:18.620]  А?
[53:18.620 --> 53:20.620]  Ну да, у1, в1 могут быть любыми,
[53:20.620 --> 53:22.620]  но в сумме они имеют длину не больше, чем П.
[53:26.620 --> 53:28.620]  Да.
[53:30.620 --> 53:32.620]  Да, первое пересечение.
[53:36.620 --> 53:38.620]  Давайте какой-нибудь пример.
[53:46.620 --> 53:48.620]  Мы, кажется, его начали обсуждать
[53:48.620 --> 53:50.620]  в прошлый раз.
[53:52.620 --> 53:54.620]  Давайте вспоминать, что такое
[53:54.620 --> 53:56.620]  тивриб.
[53:56.620 --> 53:58.620]  Тивриб.
[54:08.620 --> 54:10.620]  Ой, тивирб только.
[54:24.620 --> 54:26.620]  Это разворот слова «привет».
[54:30.620 --> 54:32.620]  Шок-контент.
[54:32.620 --> 54:34.620]  Ну что?
[54:34.620 --> 54:36.620]  Давайте рассмотрим пример.
[54:38.620 --> 54:40.620]  Почему нельзя
[54:40.620 --> 54:42.620]  эту штуку задать конечным преобразованием?
[54:48.620 --> 54:50.620]  Да, давайте слова подберем.
[54:50.620 --> 54:52.620]  То есть, берем произвольное П.
[54:56.620 --> 54:58.620]  Ага.
[54:58.620 --> 55:00.620]  Теперь берем пару слов.
[55:02.620 --> 55:04.620]  Которые в сумме длина больше, чем РП.
[55:04.620 --> 55:06.620]  Давайте возьмем слова АВПТ и ВВПТ.
[55:08.620 --> 55:10.620]  А слово В, тогда каким должно быть?
[55:10.620 --> 55:12.620]  ВВПТ и АВПТ.
[55:14.620 --> 55:16.620]  Понимаем, что в ВВПТ
[55:16.620 --> 55:18.620]  и ВВПТ
[55:18.620 --> 55:20.620]  поднимаем, что у нас
[55:20.620 --> 55:22.620]  для любого разбиения
[55:22.620 --> 55:24.620]  должно быть
[55:24.620 --> 55:26.620]  выполнено вот такое соотношение,
[55:26.620 --> 55:28.620]  что сумма длин
[55:32.620 --> 55:34.620]  меньше, чем П.
[55:34.620 --> 55:36.620]  Ой, больше равно, чем так.
[55:36.620 --> 55:38.620]  Меньше равно, чем П.
[55:38.620 --> 55:40.620]  Тогда скажите, что у нас такое
[55:40.620 --> 55:42.620]  У1 и У2?
[55:42.620 --> 55:44.620]  АВПТ
[55:46.620 --> 55:48.620]  АВПТ
[55:50.620 --> 55:52.620]  ВВПТ
[55:56.620 --> 55:58.620]  Получается следующее, что
[55:58.620 --> 56:00.620]  у нас У2
[56:00.620 --> 56:02.620]  получается АВПТ
[56:02.620 --> 56:04.620]  В2 равнается ВВПТ.
[56:06.620 --> 56:08.620]  Мы можем взять даже
[56:08.620 --> 56:10.620]  У1, У2 в квадрате, У3.
[56:10.620 --> 56:12.620]  Получим, что это у нас
[56:12.620 --> 56:14.620]  А в степени
[56:14.620 --> 56:16.620]  Т плюс П
[56:16.620 --> 56:18.620]  ВВПТ.
[56:22.620 --> 56:24.620]  А здесь у нас получается
[56:24.620 --> 56:26.620]  В в какой?
[56:26.620 --> 56:28.620]  В в степени
[56:28.620 --> 56:30.620]  П плюс С
[56:30.620 --> 56:32.620]  АВПТ.
[56:34.620 --> 56:36.620]  Получается, что либо у нас
[56:36.620 --> 56:38.620]  Т больше нуля, либо С
[56:38.620 --> 56:40.620]  ВВС больше нуля и у нас идет нарушение.
[56:42.620 --> 56:44.620]  Ура!
[56:48.620 --> 56:50.620]  Приходим к фейлу.
[56:54.620 --> 56:56.620]  Как вы думаете, что еще
[56:56.620 --> 56:58.620]  нельзя делать?
[57:02.620 --> 57:04.620]  Что еще нельзя делать?
[57:04.620 --> 57:06.620]  Это более сложный пример.
[57:10.620 --> 57:12.620]  Почему нельзя переводить число
[57:12.620 --> 57:14.620]  из двоичной системы в троичную?
[57:16.620 --> 57:18.620]  Отношение должно быть рациональным
[57:18.620 --> 57:20.620]  числом.
[57:24.620 --> 57:26.620]  Что, на семинаре рассказали?
[57:28.620 --> 57:30.620]  А, ну давайте разберем как раз.
[57:30.620 --> 57:32.620]  У нас как раз есть время.
[57:32.620 --> 57:34.620]  Не странно.
[57:36.620 --> 57:38.620]  Так.
[57:38.620 --> 57:40.620]  А может быть вопрос?
[57:40.620 --> 57:42.620]  Я считаю, что мы не задали преобразование
[57:42.620 --> 57:44.620]  не просто автоматом,
[57:44.620 --> 57:46.620]  а степеном автоматом.
[57:48.620 --> 57:50.620]  А просто странно, что такое преобразование
[57:50.620 --> 57:52.620]  сохраняет эти возможности,
[57:52.620 --> 57:54.620]  а то преобразование сохраняло?
[57:54.620 --> 57:56.620]  То преобразование?
[57:56.620 --> 57:58.620]  Не сохраняло?
[57:58.620 --> 58:00.620]  Нет, скорее всего оно бы не сохраняло,
[58:00.620 --> 58:02.620]  потому что
[58:02.620 --> 58:04.620]  мы бы смогли тогда
[58:04.620 --> 58:06.620]  АВН и БВН, кажется, переводить в
[58:06.620 --> 58:08.620]  АВН, БВН и ЦВН.
[58:08.620 --> 58:10.620]  Просто положить какое-то количество
[58:10.620 --> 58:12.620]  букв А на стэк на входе, да?
[58:12.620 --> 58:14.620]  А или нет?
[58:18.620 --> 58:20.620]  Положить одновременно их же выводить,
[58:20.620 --> 58:22.620]  а потом читать со стэка
[58:22.620 --> 58:24.620]  Да, а потом читать со стэка
[58:24.620 --> 58:26.620]  и как раз записать все буквы С.
[58:26.620 --> 58:28.620]  То есть, смотрите,
[58:28.620 --> 58:30.620]  предположим, что у нас
[58:30.620 --> 58:32.620]  КП со стэком.
[58:34.620 --> 58:36.620]  Мысленно предположим,
[58:36.620 --> 58:38.620]  давайте построим,
[58:38.620 --> 58:40.620]  как из АВН и БВН
[58:40.620 --> 58:42.620]  перевести все АВН и БВН и ЦВН.
[58:44.620 --> 58:46.620]  Идея такая,
[58:46.620 --> 58:48.620]  у нас с вами есть АВН и БВН,
[58:50.620 --> 58:52.620]  когда у нас встречается
[58:52.620 --> 58:54.620]  буква А,
[58:56.620 --> 58:58.620]  то мы делаем на стэк плюс А.
[59:00.620 --> 59:02.620]  Ну, давайте даже...
[59:04.620 --> 59:06.620]  Да, можно просто читать
[59:06.620 --> 59:08.620]  АВН, АВН, БВН,
[59:08.620 --> 59:10.620]  АВН и ЦВН на стэк.
[59:10.620 --> 59:12.620]  А если мы закончим за слово
[59:12.620 --> 59:14.620]  АВН и БВН карты?
[59:16.620 --> 59:18.620]  Зачем нам это делать?
[59:18.620 --> 59:20.620]  Не.
[59:20.620 --> 59:22.620]  А!
[59:22.620 --> 59:24.620]  Ну...
[59:24.620 --> 59:26.620]  Да, он должен свалиться.
[59:30.620 --> 59:32.620]  Ну, типа для слов вида АВН и БВН
[59:32.620 --> 59:34.620]  он должен ничего не выводить.
[59:36.620 --> 59:38.620]  Не, ну если у нас
[59:38.620 --> 59:40.620]  нет ограничений на такое,
[59:40.620 --> 59:42.620]  то кажется, что будет это.
[59:44.620 --> 59:46.620]  Если у нас нет таких ограничений,
[59:46.620 --> 59:48.620]  то у нас как бы для образования
[59:48.620 --> 59:50.620]  работает и слово АВН и П звездочка,
[59:50.620 --> 59:52.620]  и слова АВН и П звездочка,
[59:52.620 --> 59:54.620]  АВН и П звездочка.
[59:56.620 --> 59:58.620]  Можно сделать проще,
[59:58.620 --> 01:00:00.620]  можно на вход получать АВН,
[01:00:00.620 --> 01:00:02.620]  и тогда мы на входе получаем
[01:00:02.620 --> 01:00:04.620]  языка звездочка,
[01:00:04.620 --> 01:00:06.620]  а на выходе давайте АВН и БВН.
[01:00:06.620 --> 01:00:08.620]  Ну, по крайней мере у нас, смотрите,
[01:00:08.620 --> 01:00:10.620]  у нас не будет замкнутости относительно
[01:00:10.620 --> 01:00:12.620]  автоматных языков.
[01:00:12.620 --> 01:00:14.620]  Смотрите, да, давайте...
[01:00:16.620 --> 01:00:18.620]  Ну да, потому что
[01:00:18.620 --> 01:00:20.620]  тогда мы АВН
[01:00:20.620 --> 01:00:22.620]  можем перевратить всегда в слово вида АВН и БВН.
[01:00:22.620 --> 01:00:24.620]  Как?
[01:00:24.620 --> 01:00:26.620]  Мы читаем букву А,
[01:00:28.620 --> 01:00:30.620]  выводим аутпут А
[01:00:32.620 --> 01:00:34.620]  и делаем стэк плюс А.
[01:00:36.620 --> 01:00:38.620]  А потом мы делаем...
[01:00:40.620 --> 01:00:42.620]  Из стэка вычитаем букву А
[01:00:44.620 --> 01:00:46.620]  и пишем в аутпут букву Б.
[01:00:50.620 --> 01:00:52.620]  То есть, по крайней мере,
[01:00:52.620 --> 01:00:54.620]  замкнутости относительно
[01:00:54.620 --> 01:00:56.620]  регулярных языков
[01:00:56.620 --> 01:00:58.620]  в этой штуке уже не будет.
[01:00:58.620 --> 01:01:00.620]  Получается, это теорически
[01:01:00.620 --> 01:01:02.620]  может быть более общая история?
[01:01:02.620 --> 01:01:04.620]  Ну да, но надо аккуратненько
[01:01:04.620 --> 01:01:06.620]  исследовать эту всю тему.
[01:01:06.620 --> 01:01:08.620]  Это куда можно двигаться.
[01:01:08.620 --> 01:01:10.620]  Итак, давайте тогда последний пример
[01:01:10.620 --> 01:01:12.620]  как раз разберем,
[01:01:12.620 --> 01:01:14.620]  и дальше я немножечко подведу итоги
[01:01:14.620 --> 01:01:16.620]  и куда, собственно, в этой
[01:01:16.620 --> 01:01:18.620]  истории можно двигаться.
[01:01:18.620 --> 01:01:20.620]  Аутро, так сказать.
[01:01:20.620 --> 01:01:22.620]  Сделаем нашего курса.
[01:01:22.620 --> 01:01:24.620]  Итак, смотрите.
[01:01:24.620 --> 01:01:26.620]  Число в двоичной системе переводим в
[01:01:26.620 --> 01:01:28.620]  троичной системе.
[01:01:28.620 --> 01:01:30.620]  Тогда возьмем любое число.
[01:01:30.620 --> 01:01:32.620]  Дай число из всех единичек
[01:01:32.620 --> 01:01:34.620]  возьмем, образно говоря.
[01:01:38.620 --> 01:01:40.620]  Оно переводится в какое-то число
[01:01:40.620 --> 01:01:42.620]  х в троичной системе.
[01:01:42.620 --> 01:01:44.620]  Теперь берем
[01:01:44.620 --> 01:01:46.620]  лему о разрастании.
[01:01:46.620 --> 01:01:48.620]  У нас получается следующее, что
[01:01:48.620 --> 01:01:50.620]  у нас у1, у2, у3.
[01:01:56.620 --> 01:01:58.620]  Это в какой-то получается
[01:01:58.620 --> 01:02:00.620]  в сколько их тут?
[01:02:00.620 --> 01:02:02.620]  П раз.
[01:02:02.620 --> 01:02:04.620]  Вот, поэтому получается у2,
[01:02:04.620 --> 01:02:06.620]  у нас с вами какое?
[01:02:06.620 --> 01:02:08.620]  Это как 1,
[01:02:08.620 --> 01:02:10.620]  1 и так далее
[01:02:10.620 --> 01:02:12.620]  в катой степени.
[01:02:12.620 --> 01:02:14.620]  А
[01:02:14.620 --> 01:02:16.620]  слово в2,
[01:02:16.620 --> 01:02:18.620]  это будет какое-то, ну пусть
[01:02:18.620 --> 01:02:20.620]  т в троичной системе исчисления.
[01:02:20.620 --> 01:02:22.620]  И дальше мы должны перебрать три варианта
[01:02:22.620 --> 01:02:24.620]  с вами.
[01:02:24.620 --> 01:02:26.620]  Первый вариант.
[01:02:26.620 --> 01:02:28.620]  Если у нас слово у2 пусто,
[01:02:28.620 --> 01:02:30.620]  то тогда в чем
[01:02:30.620 --> 01:02:32.620]  у нас проблема?
[01:02:34.620 --> 01:02:36.620]  То, что у нас
[01:02:36.620 --> 01:02:38.620]  в2 больше нуля,
[01:02:38.620 --> 01:02:40.620]  и мы получается
[01:02:40.620 --> 01:02:42.620]  по любому числу в двоичной системе
[01:02:42.620 --> 01:02:44.620]  исчисления, по такому числу в двоичной системе
[01:02:44.620 --> 01:02:46.620]  можно получить очень много чисел
[01:02:46.620 --> 01:02:48.620]  в троичной системе исчисления.
[01:02:48.620 --> 01:02:50.620]  То есть у нас
[01:02:50.620 --> 01:02:52.620]  получается
[01:02:52.620 --> 01:02:54.620]  у3
[01:02:54.620 --> 01:02:56.620]  переводится
[01:02:56.620 --> 01:02:58.620]  в1, в2,
[01:02:58.620 --> 01:03:00.620]  в катой, в3.
[01:03:00.620 --> 01:03:02.620]  Стоится такого быть не может.
[01:03:02.620 --> 01:03:04.620]  Аналогично мы можем посмотреть число,
[01:03:04.620 --> 01:03:06.620]  если в2 равняется нуля.
[01:03:06.620 --> 01:03:08.620]  Здесь мы получаем
[01:03:08.620 --> 01:03:10.620]  у1, у2,
[01:03:10.620 --> 01:03:12.620]  в катой, у3,
[01:03:12.620 --> 01:03:14.620]  в1, в2, в3.
[01:03:14.620 --> 01:03:16.620]  То есть опять же не прокатывается.
[01:03:16.620 --> 01:03:18.620]  А если у нас у2
[01:03:18.620 --> 01:03:20.620]  плюс в2
[01:03:20.620 --> 01:03:22.620]  больше нуля,
[01:03:22.620 --> 01:03:24.620]  то
[01:03:24.620 --> 01:03:26.620]  смотрите, мы можем...
[01:03:26.620 --> 01:03:28.620]  Как эту штуку сверху оценить?
[01:03:28.620 --> 01:03:30.620]  Сумму этих двух чисел.
[01:03:30.620 --> 01:03:32.620]  П.
[01:03:34.620 --> 01:03:36.620]  И тогда, смотрите,
[01:03:36.620 --> 01:03:38.620]  мы можем померить отношение
[01:03:40.620 --> 01:03:42.620]  к нему.
[01:03:44.620 --> 01:03:46.620]  Ой.
[01:04:04.620 --> 01:04:06.620]  К чему эта штука стремится?
[01:04:06.620 --> 01:04:08.620]  Ага.
[01:04:10.620 --> 01:04:12.620]  Вот. Причем
[01:04:12.620 --> 01:04:14.620]  у этой штуки какая-то ограниченная
[01:04:14.620 --> 01:04:16.620]  дробная часть.
[01:04:16.620 --> 01:04:18.620]  То есть знаменатель этой дроби не больше, чем
[01:04:18.620 --> 01:04:20.620]  П. Да?
[01:04:20.620 --> 01:04:22.620]  Ну а по факту, это к чему
[01:04:22.620 --> 01:04:24.620]  должна стремиться?
[01:04:28.620 --> 01:04:30.620]  А, так.
[01:04:36.620 --> 01:04:38.620]  Так, если у нас число
[01:04:38.620 --> 01:04:40.620]  два вентой,
[01:04:40.620 --> 01:04:42.620]  да.
[01:04:46.620 --> 01:04:48.620]  Да, ну в общем, к какому-то
[01:04:48.620 --> 01:04:50.620]  логарифму, вот,
[01:04:50.620 --> 01:04:52.620]  тут надо понять, что где стоит,
[01:04:52.620 --> 01:04:54.620]  но в общем, а?
[01:04:54.620 --> 01:04:56.620]  В двоичной системе должно быть более длинное число.
[01:04:56.620 --> 01:04:58.620]  В двоичной системе должно быть более
[01:04:58.620 --> 01:05:00.620]  длинное число.
[01:05:00.620 --> 01:05:02.620]  Тогда наоборот.
[01:05:02.620 --> 01:05:04.620]  Но эта штука не
[01:05:04.620 --> 01:05:06.620]  одержит в множестве
[01:05:06.620 --> 01:05:08.620]  рациональных чисел.
[01:05:08.620 --> 01:05:10.620]  Да, поэтому у нас
[01:05:10.620 --> 01:05:12.620]  в одном месте эта штука к одной
[01:05:12.620 --> 01:05:14.620]  части стремится, а это к другой.
[01:05:14.620 --> 01:05:16.620]  Проиграли.
[01:05:18.620 --> 01:05:20.620]  Вот такой пример.
[01:05:20.620 --> 01:05:22.620]  Так, у нас даже осталось
[01:05:22.620 --> 01:05:24.620]  13 минут с вами.
[01:05:24.620 --> 01:05:26.620]  Мы с вами даже,
[01:05:26.620 --> 01:05:28.620]  кажется, закрыли весь блок.
[01:05:28.620 --> 01:05:30.620]  Давайте посмотрим, может, что-нибудь.
[01:05:30.620 --> 01:05:32.620]  А, более сложный пример.
[01:05:32.620 --> 01:05:34.620]  Собственно, по-моему,
[01:05:34.620 --> 01:05:36.620]  моим группам я дал это в домашке.
[01:05:36.620 --> 01:05:38.620]  Почему нельзя
[01:05:38.620 --> 01:05:40.620]  два числа перемножать?
[01:05:40.620 --> 01:05:42.620]  Почему нельзя число в квадрат
[01:05:42.620 --> 01:05:44.620]  переводить? И почему, собственно,
[01:05:44.620 --> 01:05:46.620]  есть проблемы некоторые с правильным искобочным
[01:05:46.620 --> 01:05:48.620]  последовательностью?
[01:05:48.620 --> 01:05:50.620]  Значит, давайте теперь
[01:05:50.620 --> 01:05:52.620]  поймем, куда
[01:05:52.620 --> 01:05:54.620]  можно с этой стороны
[01:05:54.620 --> 01:05:56.620]  двигаться. Во-первых, значит,
[01:05:56.620 --> 01:05:58.620]  есть такая теория, которую мы
[01:05:58.620 --> 01:06:00.620]  не будем рассказывать,
[01:06:00.620 --> 01:06:02.620]  от Диари Махомского Шуцембирже,
[01:06:02.620 --> 01:06:04.620]  которая говорит, что на самом деле любой
[01:06:04.620 --> 01:06:06.620]  КС-язык можно представить
[01:06:06.620 --> 01:06:08.620]  в виде комоморфизма
[01:06:08.620 --> 01:06:10.620]  относительно
[01:06:10.620 --> 01:06:12.620]  пересечения, кажется,
[01:06:12.620 --> 01:06:14.620]  языка с правильным искобочным
[01:06:14.620 --> 01:06:16.620]  последовательством на некоторые регулярные выражения.
[01:06:16.620 --> 01:06:18.620]  То есть вообще как представляется
[01:06:18.620 --> 01:06:20.620]  любое, попытаться разобраться,
[01:06:20.620 --> 01:06:22.620]  как выглядит любой
[01:06:22.620 --> 01:06:24.620]  контекст свободный язык. Это раз.
[01:06:24.620 --> 01:06:26.620]  Вторая тема, которую можно поисследовать,
[01:06:26.620 --> 01:06:28.620]  это посмотреть, что же будет с конечным преобразователем,
[01:06:28.620 --> 01:06:30.620]  если к нему, допустим, стэк присобачить.
[01:06:30.620 --> 01:06:32.620]  Третья история,
[01:06:32.620 --> 01:06:34.620]  о которой можно двигаться, значит,
[01:06:34.620 --> 01:06:36.620]  сразу скажу, это
[01:06:36.620 --> 01:06:38.620]  новые типы парсеров появились,
[01:06:38.620 --> 01:06:40.620]  так называемые parsing expression
[01:06:40.620 --> 01:06:42.620]  grammars. И, собственно,
[01:06:42.620 --> 01:06:44.620]  если
[01:06:44.620 --> 01:06:46.620]  внимательно
[01:06:46.620 --> 01:06:48.620]  посмотреть,
[01:06:50.620 --> 01:06:52.620]  зайти
[01:06:52.620 --> 01:06:54.620]  в замечательную
[01:06:54.620 --> 01:06:56.620]  историю,
[01:06:56.620 --> 01:06:58.620]  в релиз нол спайтон
[01:06:58.620 --> 01:07:00.620]  3.10,
[01:07:00.620 --> 01:07:02.620]  кажется,
[01:07:02.620 --> 01:07:04.620]  где-то это здесь должно быть.
[01:07:20.620 --> 01:07:22.620]  Видите, нол
[01:07:22.620 --> 01:07:24.620]  не лл1 capacity of new parser.
[01:07:26.620 --> 01:07:28.620]  Вот. И нас встречает
[01:07:28.620 --> 01:07:30.620]  такая вещь, которая ни фига не видно.
[01:07:32.620 --> 01:07:34.620]  В общем, раньше питон использовал
[01:07:34.620 --> 01:07:36.620]  лл1 parser.
[01:07:36.620 --> 01:07:38.620]  А?
[01:07:38.620 --> 01:07:40.620]  Да.
[01:07:40.620 --> 01:07:42.620]  Сейчас перешли на новую
[01:07:42.620 --> 01:07:44.620]  тип парсеров под названием
[01:07:44.620 --> 01:07:46.620]  peg parser.
[01:07:46.620 --> 01:07:48.620]  В нем есть замечательный синтаксис,
[01:07:48.620 --> 01:07:50.620]  в котором по факту
[01:07:50.620 --> 01:07:56.620]  можно выводить, и пока что математически даже неизвестно, какому классу языков приводят пег-парсеры.
[01:07:56.620 --> 01:07:58.620]  Какой класс языков они распознают?
[01:07:58.620 --> 01:08:03.620]  Потому что, по-моему, через него можно AVEND, ABVEND, AVEND распознавать при некоторых ограничениях.
[01:08:03.620 --> 01:08:05.620]  Ну и вывод в нем достаточно сложен.
[01:08:05.620 --> 01:08:09.620]  То есть он подходит для какого-то типа, определенного типа грамматика.
[01:08:09.620 --> 01:08:11.620]  Вот это куда можно копаться.
[01:08:11.620 --> 01:08:19.620]  Значит, другая тема, к которой можно копаться, это связь, значит, так называемых контекстно свободных языков.
[01:08:19.620 --> 01:08:25.620]  Получается однозначных контекст свободных грамматик.
[01:08:25.620 --> 01:08:32.620]  И получаются этих, детерминированных автоматов с магазинной памятью.
[01:08:32.620 --> 01:08:33.620]  Такие есть.
[01:08:33.620 --> 01:08:37.620]  Возможно, вы помните такие штуки, если решали когда-то задачу с EG.
[01:08:37.620 --> 01:08:44.620]  Там надо было, есть какое-то входное выражение, там надо было распарсить что-то, подобрать токен, который к чему-то подходит.
[01:08:44.620 --> 01:08:47.620]  Вот, то есть это тоже можно смотреть.
[01:08:47.620 --> 01:08:53.620]  Там, кажется, Виталий еще выкинул всякий список тем, которые можно прийти послушать к нему на доп-семинар.
[01:08:53.620 --> 01:09:00.620]  Ну и последняя вещь, если совсем подниматься, то можно разбираться в этой штуке с контекстом свободными грамматиками.
[01:09:00.620 --> 01:09:08.620]  Либо подниматься уже на машины тюринга и пытаться с ними работать с точки зрения некоторых ограничений по памяти.
[01:09:08.620 --> 01:09:13.620]  Как раз эти классы NP, P-Space и всякие прочие вещи, это будет на курсе сложности вычислений.
[01:09:14.620 --> 01:09:21.620]  Ну а можно пойти писать компилятор, сказать, ребят, нам этого хватит. Погнали писать компилятор.
[01:09:21.620 --> 01:09:30.620]  И тогда уже будет веселье с тем, что на вершинах дерева вывода у нас будут уже не абы что.
[01:09:30.620 --> 01:09:35.620]  То есть не какой-то узел дерева, а возможно будет висеть какое-то выражение на выходе.
[01:09:35.620 --> 01:09:40.620]  И тогда нам надо будет уже проверять семантический анализ и строить другое дерево,
[01:09:40.620 --> 01:09:46.620]  которое уже будет более приспособленным для какого-то типичного исполнения.
[01:09:46.620 --> 01:09:51.620]  Вроде бы плюс-минус я перечислил все вещи, куда можно двигаться от этой темы.
[01:09:51.620 --> 01:09:56.620]  Так что вот такой курс.
[01:09:56.620 --> 01:10:00.620]  И давайте последняя вещь, которая может быть полезна вам.
[01:10:00.620 --> 01:10:09.620]  Будет, что на самом деле все задания контрольных работ были сгенерены автоматически.
[01:10:09.620 --> 01:10:14.620]  Наверное, вы слышали про это.
[01:10:14.620 --> 01:10:21.620]  Да, собственно, на самом деле для того, чтобы падежи использовать,
[01:10:21.620 --> 01:10:28.620]  почему мы приходили к конечному преобразованию, есть такой пакет Pymorphy 2 называется.
[01:10:28.620 --> 01:10:33.620]  И, собственно, при помощи него можно строить какие-то простые конечные преобразования,
[01:10:34.620 --> 01:10:39.620]  типа приведения слов к другим падежам и согласования с числительными.
[01:10:39.620 --> 01:10:41.620]  Очень мощная тема.
[01:10:41.620 --> 01:10:49.620]  Поэтому у нас в автоматическом генераторе вариантов контроля не было 2 буква, 3 буква, 4 буква.
[01:10:49.620 --> 01:10:54.620]  И согласование это может тоже делать при помощи конечных преобразователей.
[01:10:54.620 --> 01:10:56.620]  В общем, я думаю, на этом все.
[01:10:56.620 --> 01:10:58.620]  Если есть вопросы, задавайте.
[01:10:58.620 --> 01:11:02.620]  А так, думаю, спасибо, что пришли, выходили на лекции.
