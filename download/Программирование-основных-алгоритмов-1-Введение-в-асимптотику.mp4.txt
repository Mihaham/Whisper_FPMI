[00:00.000 --> 00:10.000]  Так, ну окей, всем доброго утра. Я вас приветствую на курсе алгоритмов и структур данных.
[00:10.000 --> 00:15.000]  И, как вы могли заметить, здесь много народу, хотя никто из вас не ожидал, что у вас столько будет,
[00:15.000 --> 00:23.000]  потому что у нас огромная мишанина получилась в силу определенных особенностей.
[00:23.000 --> 00:30.000]  Ну, что поделать? Это такие организационные моменты. А давайте приступим.
[00:30.000 --> 00:38.000]  Ну окей, как меня можно звать? Так, меня зовут Кулапин Артур Евгеньевич.
[00:38.000 --> 00:50.000]  Окей, ваши семинаристы уже должны были по-хорошему вам выслать ссылку на чат.
[00:50.000 --> 00:58.000]  Ну, на канал курса в телеграме, там же есть ссылка на чат и все, все организационное. Если нет, то я сейчас напишу.
[00:58.000 --> 01:09.000]  И сейчас мне придется подтянуть немного, потому что...
[01:09.000 --> 01:30.000]  Так, по-моему, она вот такая вот, но те, кто есть, может верить. Ну, вроде бы да.
[01:39.000 --> 02:04.000]  Я продолжу тогда, видимо, раз просит. Окей, это канал курса, там будет появляться вся организационная
[02:04.000 --> 02:12.000]  информация. Сейчас там есть уже ведомость в ней, можно найти формулу, как у вас будет ставиться оценка за этот курс.
[02:12.000 --> 02:18.000]  И там же есть ссылка на первый контест, первое домашнее задание. Он откроется после лекции.
[02:18.000 --> 02:26.000]  Есть три цюка. Дедлайн через чуть меньше чем две недели. Так что, спешите решать.
[02:27.000 --> 02:33.000]  Да, сразу скажу, что у нас, ну, давайте, наверное, выпишу, как у нас будет устроена система оценивания.
[02:33.000 --> 02:51.000]  Она устроена следующим образом. Пусть K это доля от максимума за контеста.
[02:51.000 --> 02:56.000]  Там в ведомости указана разболотка всех задач, какая, сколько, весят.
[02:56.000 --> 03:05.000]  То есть берется ваш набранный бал, делится на идеального студента, так называемого, и получается число от нуля до одного.
[03:05.000 --> 03:12.000]  То есть на СТ это бла-бла-бла за теорки, так называемые.
[03:12.000 --> 03:21.000]  Теоретические домашние задания. Это будет набор некоторых задач, которые вам предстоит решить и зачитить либо семинаристам, либо ассистентам.
[03:21.000 --> 03:25.000]  Они уже будут сами устанавливать формат, как вы будете это делать.
[03:25.000 --> 03:35.000]  Тогда, ну, соответственно, это от нуля до одного, от нуля до одного.
[03:35.000 --> 03:42.000]  И то мы получаем такую формулу на самом деле.
[03:42.000 --> 03:50.000]  То есть семь с половиной за контест плюс два с половиной на теорки. В сумме десять. Офигелятся по правилам математики.
[03:50.000 --> 03:58.000]  Да, если что, будут бонусные задачи. То есть на самом деле здесь можно больше, чем один будет получить.
[03:58.000 --> 04:04.000]  Там альфа, альфа, больше на единицы. В контестах аналогично будет.
[04:04.000 --> 04:11.000]  То есть можно получить больше десяти, но это вам в плюс, но я смотрю, что кто-то получит больше десяти.
[04:11.000 --> 04:18.000]  Будем честными. Вот это формула.
[04:18.000 --> 04:23.000]  Давайте назовем это так. За зачет.
[04:23.000 --> 04:27.000]  Потому что у некоторых из вас и зачет, и экзамен в этом семестре по курсу алгоритмов.
[04:27.000 --> 04:33.000]  Поэтому это только за зачет. Экзамен – это вообще отдельное мероприятие, которое с зачетом никак не связано.
[04:33.000 --> 04:39.000]  Они живут в параллельных плоскостях и, соответственно, оценки друг на друга никак не влияют.
[04:39.000 --> 04:46.000]  У тех, у кого будет только зачет, возможно, если нам состав семинаристов будет очень скучно в декабре,
[04:46.000 --> 04:51.000]  мы проведем еще устный зачет, который будет с каким-то весом фигурировать с этой штукой.
[04:51.000 --> 04:58.000]  Но это не точно. Следите за объявлениями в канале и будете все знать.
[05:02.000 --> 05:06.000]  Есть ли вопросы по организации курса?
[05:06.000 --> 05:11.000]  Ну, видимо, вопросов нет. То есть, всем понятно, как вы будете получать оценку.
[05:11.000 --> 05:16.000]  Соответственно, да.
[05:16.000 --> 05:21.000]  Окей.
[05:21.000 --> 05:24.000]  Все понятно, про это все сказали.
[05:24.000 --> 05:30.000]  Ну, тогда давайте пойдем вообще о том, зачем изучаем алгоритмы и структуры данных.
[05:30.000 --> 05:35.000]  Может быть, есть те, кто знает ответ на этот вопрос.
[05:35.000 --> 05:40.000]  Если все это уже за вас реализовано в других библиотеках.
[05:40.000 --> 05:44.000]  Ну, вот вы знаете, мне вот всю неделю писали люди с первого курса, которые
[05:44.000 --> 05:49.000]  не понимали, что это такое.
[05:49.000 --> 05:54.000]  Ну, я не знаю.
[05:54.000 --> 05:59.000]  Ну, вот вы знаете, мне вот всю неделю писали люди с первого курса, которые
[05:59.000 --> 06:04.000]  попали по распиленному контесту в базу, но хотят очень в основу.
[06:04.000 --> 06:08.000]  Вот, я очень хочу услышать от них ответ на этот вопрос, потому что они зачем-то хотели в основу.
[06:08.000 --> 06:13.000]  Значит, они, наверное, знают, зачем нужны алгоритмы. Вот, здесь есть такие?
[06:13.000 --> 06:18.000]  Ну, нет. Окей.
[06:18.000 --> 06:23.000]  Ну, на самом деле алгоритмы нужны внезапно не для того, чтобы вы знали кучу алгоритмов. Вау.
[06:23.000 --> 06:28.000]  Если вы умеете там, не знаю, писать какой-нибудь суффиксный автомат, то, конечно, круто.
[06:28.000 --> 06:33.000]  Но то, что вы знаете, что он существует, это вам никакого преимущества не дает.
[06:33.000 --> 06:38.000]  Собственно, поэтому и существуют контесты и терки для того, чтобы вы учились видеть в разных условиях,
[06:38.000 --> 06:43.000]  где вам нужно применить тот или иной алгоритм. Потому что никто в будущем вам не будет ставить задачу,
[06:43.000 --> 06:48.000]  не знаю, напиши бинпоиск. Ну, такого не будет, к сожалению.
[06:49.000 --> 06:53.000]  Вот, там придется учиться их видеть. Ну, или понимать, что...
[06:53.000 --> 06:58.000]  Или это как бы одна сторона медали. Другая сторона медали, вам нужно...
[06:58.000 --> 07:03.000]  Будет понимать, что быстрее какие-то задачи просто решить нельзя.
[07:03.000 --> 07:08.000]  Мир жесток, да. Не все можно решать очень быстро.
[07:08.000 --> 07:13.000]  Окей. То есть наша мотивация – это научиться их видеть эти алгоритмы,
[07:13.000 --> 07:18.000]  распознавать их и, быть может, применять по возможности.
[07:18.000 --> 07:23.000]  Потому что, опять же, далеко не каждый захочет видеть в вашем коде какую-нибудь фибоначевую кучу,
[07:23.000 --> 07:28.000]  потому что это очень сложно и неподдерживаемо.
[07:28.000 --> 07:33.000]  Теперь перейдем к плану курса. Курс двухсеместровый.
[07:33.000 --> 07:38.000]  У нас будет два семестра. Давайте как-нибудь разделим, наверное.
[07:43.000 --> 07:48.000]  В первом семестре мы начинаем в самых основ-основ.
[07:48.000 --> 07:53.000]  Это асимптотика, бинпоиск, бла-бла-бла.
[07:53.000 --> 07:58.000]  Затем идем к... То есть у нас в первом семестре посвящен куча структур данных на самом деле.
[07:58.000 --> 08:03.000]  То есть здесь в основном структуры данных.
[08:03.000 --> 08:08.000]  Ну, такие как хэш-таблицы.
[08:08.000 --> 08:13.000]  Это деревья поиска.
[08:13.000 --> 08:18.000]  Ну, что еще? Ну, какие-нибудь деревья отрезков будут обязательно.
[08:22.000 --> 08:27.000]  Ну, тысячи их.
[08:27.000 --> 08:32.000]  Может быть, мы сюда еще успеем в сон динамическое программирование, геометрию, сортировки, кучу и так далее.
[08:32.000 --> 08:37.000]  Но, скажем так, это еще открытый вопрос.
[08:37.000 --> 08:42.000]  Геометрия, динамическое программирование.
[08:42.000 --> 08:47.000]  А вот второй семестр будет полностью посвящен тому, как применять разные из этих штук в определенных задачах.
[08:47.000 --> 08:52.000]  Ну, соответственно, здесь будут два конкретных больших блока. Это будут графы.
[08:52.000 --> 08:57.000]  И вот здесь у нас будет геометрия.
[08:57.000 --> 09:02.000]  Здесь будут два конкретных больших блока. Это будут графы.
[09:02.000 --> 09:07.000]  А что именно из графов? Это будут всякие обходы. Обходы в ширину, обходы в глубину.
[09:11.000 --> 09:16.000]  Дальше это будут кратчайшие пути.
[09:16.000 --> 09:21.000]  Это некоторые известные алгоритмы DX3.
[09:21.000 --> 09:26.000]  И зацепим в зависимости от того, как мы будем с вами контактировать.
[09:30.000 --> 09:35.000]  И третий кусочек программы. Это будут всякие потоки.
[09:38.000 --> 09:42.000]  Это первое. И второе. Это будут строки.
[09:42.000 --> 09:49.000]  Это вот то, что проходит на третьем, так сказать, третьем семестре по МАИ.
[09:49.000 --> 09:52.000]  В своем курсе основных алгоритмов.
[09:52.000 --> 09:55.000]  Вот такой вот у нас план.
[09:55.000 --> 09:58.000]  А сегодня мы начнем с самого-самого-самого-базового.
[09:58.000 --> 10:01.000]  С чего только можно начать.
[10:01.000 --> 10:06.000]  Это мы с вами поймем вообще, как оценивать алгоритмы, хороший или плохой.
[10:06.000 --> 10:11.000]  Вот у вас есть, допустим, две программы, решающие одну и ту же задачу.
[10:11.000 --> 10:14.000]  Одна из них заходит по ТЛюБ-контест, другая нет.
[10:14.000 --> 10:18.000]  Вопрос, почему? Как можно понять вообще, эффективно ли программа или нет?
[10:18.000 --> 10:20.000]  И в каких терминах это понимать?
[10:32.000 --> 10:34.000]  Да, у нас будут сами две величины.
[10:34.000 --> 10:37.000]  Характеристики, нажимаем так, за которые мы будем следить.
[10:37.000 --> 10:39.000]  Это время и память.
[10:39.000 --> 10:41.000]  У нас два вида ресурсов, на самом деле.
[10:49.000 --> 10:52.000]  Ну, собственно, память у нас будет обычная оперативная.
[10:52.000 --> 10:56.000]  Мы будем жить в прекрасном мире, на котором мы смотрим в розовых очках.
[10:56.000 --> 10:59.000]  Где у нас все вмещается в оперативку.
[10:59.000 --> 11:02.000]  Все прекрасно работает, все очень быстро с памятью и так далее.
[11:02.000 --> 11:05.000]  К сожалению, в жизни это не так, но
[11:05.000 --> 11:10.000]  чтобы изучать эту науку, надо пройти сначала то, что мы сейчас будем проходить.
[11:10.000 --> 11:13.000]  А время, ну время, оно везде время.
[11:13.000 --> 11:15.000]  И в каких терминах это измерять?
[11:15.000 --> 11:19.000]  Не очень понятно, но программа отработала секунду.
[11:19.000 --> 11:23.000]  На другом железе она может отработать за 0,5 секунды, например.
[11:23.000 --> 11:25.000]  Или за 10 секунд.
[11:25.000 --> 11:27.000]  Что?
[11:27.000 --> 11:31.000]  Ну да, очень сложно говорить про физическое время.
[11:31.000 --> 11:35.000]  И поэтому здесь были введены асимпатические классы.
[11:35.000 --> 11:38.000]  Давайте будем введем определение.
[11:38.000 --> 11:43.000]  Пусть f, g это функции, определенные на n.
[11:49.000 --> 11:51.000]  Вот.
[11:51.000 --> 11:53.000]  Тогда...
[11:57.000 --> 12:00.000]  Если что, это поточная аудитория арки. Заходите.
[12:00.000 --> 12:03.000]  Тогда f от n.
[12:03.000 --> 12:06.000]  Если...
[12:06.000 --> 12:08.000]  Ну...
[12:08.000 --> 12:10.000]  Давайте подумаем.
[12:10.000 --> 12:14.000]  Сначала графически пробуем изобразить, потому что у нас есть первокурсники, которые
[12:14.000 --> 12:18.000]  еще с кванторами не очень владеют, скажем так.
[12:18.000 --> 12:20.000]  Что мы хотим?
[12:20.000 --> 12:23.000]  То есть у нас есть какой-то график g от n.
[12:23.000 --> 12:26.000]  И у нас есть график g от n.
[12:26.000 --> 12:29.000]  И у нас есть график g от n.
[12:29.000 --> 12:32.000]  То есть у нас есть какой-то график g от n.
[12:35.000 --> 12:38.000]  И мы хотим, чтобы f от n, начиная с какого-то момента,
[12:38.000 --> 12:42.000]  лежало ниже, чем какая-то константа c умножить на g от n.
[12:43.000 --> 12:47.000]  То есть как мы хотим, чтобы f от n как-то вот так вот себя ввела.
[12:51.000 --> 12:56.000]  То есть в какой-то момент n0, они могут сравняться, но дальше f должна быть ниже, чем g.
[12:57.000 --> 13:00.000]  Давайте упражнение по мотонализу, запишите это в кванторах.
[13:00.000 --> 13:04.000]  Кто может сказать как-то в кванторах эту мысль?
[13:15.000 --> 13:18.000]  Давайте как-нибудь так сформулируем, да?
[13:18.000 --> 13:21.000]  Тут n0 натуральный.
[13:21.000 --> 13:24.000]  Существует c, такое, что
[13:25.000 --> 13:28.000]  для любого n больше либо равного n0,
[13:29.000 --> 13:32.000]  f от n меньше, в общем, c на g от n.
[13:35.000 --> 13:37.000]  Похоже на правду?
[13:41.000 --> 13:44.000]  Да, мы считаем, что c больше нуля. Справедливо.
[13:44.000 --> 13:51.000]  Вот собственно мы будем говорить, что f равно o от g, если вот такое вот выполнено.
[13:52.000 --> 13:56.000]  Поэтому у нас как бы классы алгоритмов подразделяются на полиномиальные,
[13:56.000 --> 13:58.000]  это которые o больше от полинома.
[13:58.000 --> 14:01.000]  И так далее, и так далее. Давайте рассмотрим какой-нибудь пример.
[14:01.000 --> 14:16.000]  Доказать, что f от n...
[14:16.000 --> 14:19.000]  Ну, как-нибудь не знаю.
[14:19.000 --> 14:33.500]  Вот такая вот f от n, это какой-то многочлен, n куб плюс n квадрат плюс n в степени альфы пускай,
[14:33.500 --> 14:44.920]  и f от n по большой от n в степени альфы. Здесь даже двоечку поставлю. То есть нам
[14:44.920 --> 14:48.840]  можно показать, что многочленок достаточно сокращать до старшей степени. Вот это вот
[14:48.840 --> 14:57.760]  байду. Я верю, что вы с этим сами справитесь, потому что это несложно. Вы просто берете,
[14:57.760 --> 15:05.160]  там не знаю, n равное 3, подбираете f, и подбираете n0, начиная с которого
[15:05.160 --> 15:10.280]  13 степени альфа больше, чем вот эта штука. Оно обязательно такое найдется в силу монотонности.
[15:20.280 --> 15:25.240]  Да, это правда. Это правда, действительно. Здесь можно написать что угодно,
[15:25.240 --> 15:41.120]  но обычно сокращают до наиболее старшего. Да, конечно, потому что у вас целомножить на g от n. То есть
[15:41.120 --> 15:47.840]  вы сюда можете от 3n в степени альфы написать спокойно. Но обычно их опускают, то есть берут
[15:47.840 --> 15:57.640]  наиболее значимую функцию. Давайте из чего-нибудь такого, что более интересное. У вас будет множество
[15:57.640 --> 16:04.680]  примеров на семинаре, которые будут у кого-то на этой неделе, у кого-то на следующей. Вот такой пример.
[16:04.680 --> 16:06.840]  Давайте это сатру, наверное, уже не нужно.
[16:06.840 --> 16:34.640]  Правда ли, что f равно от g?
[16:37.640 --> 16:51.840]  Смотрите, что такое логарифт по основанию гамма от n? Это можно, например, так написать. Согласны?
[16:51.840 --> 16:56.800]  А мы договорились, что мультипликативные константы нас не интересуют в обольшом,
[16:56.800 --> 17:04.320]  поэтому всегда пишут просто лог без основания. Да, программисты настолько ленивы, что им лень писать
[17:04.320 --> 17:10.520]  основания. Для простой жизни давайте напишу двоичный. Обычно нас будет интересовать двоичный
[17:10.520 --> 17:21.360]  логарифм. Просто формула перехода логарифма к другому основанию. Вот вопрос, правда ли, что это
[17:21.360 --> 17:31.960]  для таких f уже верно? Не правда, да? Естественно, не правда. n делить на лог растет гораздо быстрее,
[17:31.960 --> 17:41.200]  чем лог. Я предлагаю вам написать рисание этого определения и, соответственно, построить нужные
[17:41.200 --> 17:58.400]  вам наборы входных данных самостоятельно. Еще у нас будет несколько терминов. Это будет
[17:58.400 --> 18:12.400]  омега большая и тета большая. Окей, ну я вернусь все-таки к той доске и напишу вот здесь вот
[18:12.400 --> 18:29.420]  определение. f от n, омега большая g от n. Да, это вот омега большая, но я думаю физики знают,
[18:29.420 --> 18:39.980]  что это буква. Вот. Если вот бла-бла-бла-бла-бла. Сейчас я на один уровень даже их помещу.
[18:39.980 --> 19:02.260]  Вот. Выглядит странно, да? То есть что мы хотим? Мы хотим, чтобы у нас функция f,
[19:02.260 --> 19:12.340]  всегда, какую бы мы не выбирали константу, f всегда была бы выше, чем g. То есть, на самом деле,
[19:12.340 --> 19:21.660]  что мы хотим? Мы хотим, чтобы у нас было здесь не так написано. Для любой c больше нуля найдется
[19:21.660 --> 19:29.340]  n0, принадлежащий n. Вот здесь вот так вот важно порядок расставить. Какую бы вы константу не
[19:29.340 --> 19:34.300]  выбирали, найдется момент такой, что начиная с него f будет больше равна, чем в целом нужна эта
[19:34.300 --> 19:42.780]  функция. То есть, если здесь у нас ограничение сверху роста, то здесь ограничение снизу. И обычно,
[19:42.780 --> 19:49.180]  обычно, мы будем жить в прекрасном мире, где мы будем оценивать только о большие. Потому что
[19:49.180 --> 19:55.940]  оценить сверху всегда проще, чем оценить снизу. Ну вот в математике есть всякие задачи на оценку
[19:55.940 --> 20:00.900]  плюс пример. То есть, вам нужно там где-то оценить что-то и провести пример. То есть,
[20:00.900 --> 20:05.780]  какой-то пример и показать, что лучше нельзя. То же здесь, вам нужно показать, что у вас g от n
[20:05.780 --> 20:11.140]  достижимо. А показать, что лучше, чем g от n нельзя, очень сложно. Очень сложно доказывать,
[20:11.140 --> 20:17.300]  когда очень сложно доказывать утверждение, вида. Правда ли, что мы не можем сделать что-то лучше,
[20:17.300 --> 20:24.060]  чем? То есть, правда ли, что это оптимальное время, лучше нельзя? И существует лишь несколько алгоритм,
[20:24.060 --> 20:29.340]  для которых доказаны такие асимпотики. О них мы будем говорить, скорее всего, через лекцию. Это
[20:29.340 --> 20:34.940]  всякие сортировки. Там доказано, что лучше, чем n лог n нельзя, просто-напросто, при определенных
[20:34.940 --> 20:42.780]  условиях. Но в целом, будем очень редко получать омега. Обычно, будем гнаться за вот этим,
[20:42.780 --> 20:56.060]  то нам этого будет хватать вообще с головой. Ну, это у большой, если что.
[20:56.060 --> 21:07.620]  Ну, это в краске будет рассматриваться на семинарах. Вы будете доказывать, что правда,
[21:07.620 --> 21:13.700]  что неправда. То есть, как можно эти значки менять местами. Вот. Ну, есть еще третье определение.
[21:13.700 --> 21:25.380]  Давайте я напишу для полноты картины. Это большая буковка тета. Вот такое, буква O, в ней буква N.
[21:25.380 --> 21:45.060]  Вот это тета. Если для любых c1 больше c2 больше 0, существует n0. Такое, что для любого n,
[21:45.060 --> 22:05.140]  f от n будет зажато с двух сторон. Вот. То есть, это как вообще победа. То есть, как мы получили,
[22:05.140 --> 22:10.460]  что у нас f от n, начиная с некоторых моментов, ведет себя как функция g от n, асинтетически. Ну,
[22:10.620 --> 22:17.860]  с точностью это константы. Вот. То есть, мы смогли зажать между двумя рамками, причем они одинаковые.
[22:17.860 --> 22:23.740]  Они очень близки друг к другу. Вот теты мы будем получать еще реже, чем омеги. Потому что,
[22:23.740 --> 22:31.780]  чтобы доказать тету, вам нужно получить O большое. Это мы обычно будем делать. Получить омегу большую
[22:31.780 --> 22:43.700]  — это сложнее. А получить омегу равную ошке — это почти невозможно обычно. Вот. Окей. Как-то так.
[22:43.700 --> 22:56.340]  Вопросы пока что? Про умалые? Смотрите, умалые нам вообще не нужно, на самом деле. Нам нужно
[22:56.540 --> 23:02.020]  вот эти три штуки. Есть еще их младшие братья-близнецы, назовем это так. Это омега-малые,
[23:02.020 --> 23:08.660]  о-малые и тета-малые. На них никто не пользуется. Потому что это, скажем так,
[23:08.660 --> 23:15.940]  приоргатива больше математиков, чем программистов. Вот. Нас-то в математике будет либо в
[23:15.940 --> 23:23.620]  матанализе умалое встречаться, либо же у тех, кто на ПМИ, на курсе Райгородского. Не знаю,
[23:23.620 --> 23:30.300]  есть ли похожий курс у ПМФов. Наверное, езде будет еще умалое. Поэтому я тактично уйду от этого вопроса.
[23:30.300 --> 23:46.780]  Так, сколько у нас времени? 25 минут. Да. А вы как хотите сформулировать?
[23:46.780 --> 23:55.660]  И что?
[23:55.660 --> 24:14.940]  Действительно.
[24:14.940 --> 24:26.700]  Окей, ладно. Давайте оставим пока что это под вопросом. Да, ладно, я подумаю, точно скажу,
[24:26.700 --> 24:37.980]  потому что произошел просак. Окей, тогда теперь что мы будем делать дальше? На самом деле,
[24:37.980 --> 24:43.140]  дальше нас интересуют рекуррентные соотношения, их ассинтетическое поведение. Потому что
[24:43.140 --> 24:50.460]  многие алгоритмы выполняются рекурсивно. Где вы разбиваете под задачу на части,
[24:50.460 --> 24:59.740]  что-то с ними делаете, и там дальше что-то решаете. Одно из самых известных рекуррент – это вот такая
[24:59.740 --> 25:13.340]  штука. Вот, там пример рекуррентного соотношения. Ну, кто-нибудь может узнать,
[25:13.340 --> 25:19.980]  что здесь спрятано? Какой алгоритм работает вот с таком вот временным соотношением? Ну да,
[25:19.980 --> 25:25.420]  это бинпоиск всем известный. Ну, для тех, кто не знает, мы сейчас будем пояснять, что такое бинпоиск.
[25:25.420 --> 25:45.900]  Вот. Ну, давайте так вот. Пусть f от n – это монотонная функция. Ну, для определенности она будет строго
[25:45.900 --> 25:59.500]  возрастать. Возрастающе. Тогда, ну, есть такая теорема в монотонализе, строго возрастающая.
[26:07.580 --> 26:09.500]  Ну, из монотона или из наивных соображений.
[26:09.500 --> 26:27.460]  Для любой c найдется n0 такое, что… И будут выполнены два требования. f от n0 больше либо равно c,
[26:27.460 --> 26:36.740]  и для любого n1 меньше, чем n0, f от n1 меньше, чем c. Даже не так, давайте тоже формулируем. Для
[26:36.740 --> 26:48.540]  любого n2 вот так вот. Вот. Ну, здесь для любой цеп хорошая, надо сказать,
[26:48.540 --> 26:54.420]  есть область определенности функции, есть область значений, по-моему, называется. Вот область
[26:54.420 --> 27:00.740]  значений функции, если вы возьмете тут константу, то тогда у вас будет выполнено такое соотношение.
[27:01.220 --> 27:12.900]  Собственно, задача обычного бинпоиска – это найти вот это вот n0, найти какое-то пороговое значение.
[27:12.900 --> 27:18.900]  То есть найти такое минимальное n0, начиная с которого там что-то верно. Вот обычно у нас все задачи,
[27:18.900 --> 27:26.100]  которые будут звучать, найдите минимальное, не знаю, к, чтобы, бла-бла-бла, или максимальное
[27:26.100 --> 27:32.340]  l, чтобы, бла-бла-бла, они все у вас будут на бинпоиск. То есть у вас будет как-то
[27:32.340 --> 27:43.220]  встает такой предикат. Пусть b от n – это предикат. Ну, предикат – это такая-то типа функция,
[27:43.220 --> 27:57.300]  которая разрешает либо 0, либо 1, true-false. Такой, что для любого n больше-либо равного n0, b от n
[27:57.300 --> 28:18.900]  равно 1, 0. Задача – найти n0. Вот что мы хотим – найти n0. И мы хотим это сделать быстрее,
[28:18.900 --> 28:35.700]  чем перебирать все возможные n из области функции f. Ну, давайте нарисуем какой-нибудь график,
[28:35.700 --> 28:46.620]  чтобы было понятней чуть-чуть, что происходит. То есть, как бы, вот ваше такое пороговое поведение.
[28:46.620 --> 29:09.900]  То есть, у вас как-то вот так вот функция ведет себя. Здесь n0, это n, это f, n. То есть, у вас
[29:09.900 --> 29:13.700]  какая-то вот такая вот графика этого предиката, и вам нужно найти этот n0. Ну, как это можно делать?
[29:13.700 --> 29:27.060]  Ну, допустим, вы знаете, что он лежит в каких-то окрестностях от a до b. Ну, что вы тогда делаете?
[29:27.060 --> 29:45.860]  Вы просто алгоритм следующий. Пойска n0. Первый шаг – это m равно a плюс b пополам. Вы выбираете серединку
[29:45.860 --> 30:03.140]  где-то здесь. Если у вас… Второй шаг. Если p от m еще равно единице, то если вы попали вот так вот,
[30:03.140 --> 30:08.100]  значит, что у вас где-то вот в этой области находится ваше 0, и вы сокращаете задачу ровно в два раза,
[30:08.100 --> 30:29.660]  то говорите, будто бы, что b равно m. Иначе a равно m. Шаг третий. Повторять 1, 2 пока.
[30:29.660 --> 30:43.980]  Пока у вас такое вот соотношение выполнено. Ну, если у нас n0, это натуральное. Иначе у вас будет
[30:43.980 --> 30:50.100]  все это заданное точностью. Ну, о том, если у вас здесь a, b, m – это какие-то вещественные числа,
[30:50.100 --> 30:55.660]  вы будете говорить опять же на семинарах. Спойлер, у вас вещественных чисел не бывает в компьютерах.
[30:55.660 --> 31:00.260]  Вот. Их невозможно сохранить полностью. Поэтому все это сведется к дискретному
[31:00.260 --> 31:07.980]  случаю. Просто немного менее приятному, назовем это так. Вот. Ну, и давайте посмотрим. Просто выпишем
[31:07.980 --> 31:22.460]  этот алгоритм. Давайте обозначим l – это модуль b минуса. Тогда за сколько вы найдете ответ на
[31:22.460 --> 31:36.060]  отрезки длины l? Ну, вы сведете задачу к задаче вдвое меньше. Плюс выполнив o от единицы действий.
[31:36.060 --> 31:42.020]  Если у вас, ну, этот предикат, этот p, считается за o от единиц, то есть за какое-то константное число
[31:42.020 --> 31:48.940]  операций. Понятное дело, что в общем случае предикат будет не за единицу считаться. И тогда у вас будет
[31:48.940 --> 31:57.940]  стать какое-то o от p, где p – это время подсчета этого предиката. Вот. Ну, как решать эту рекурренту?
[31:57.940 --> 32:11.100]  Ну, и в целом, как решать рекурренты? У рекуррент есть несколько способов их решений. Вот первый
[32:11.100 --> 32:17.660]  способ – это для тех, кто когда-то знаком с алгоритмами в свое время в школе, это мастер-теорема,
[32:17.660 --> 32:24.500]  вот огромная, страшная теорема. Ну, наверное, она бы заняла у нас вот посюда бы место,
[32:24.500 --> 32:31.140]  все ее формулировки, если не больше. Поэтому ее обычно никто не помнит полную формулировку и
[32:31.140 --> 32:37.340]  когда надо, мне просто заглядывают. Вот. А доказательство у нее тут, наверное, ну, пару таких
[32:37.340 --> 32:43.180]  быдосок огромных заняло, поэтому мы не будем этим заниматься с вами. Все-таки у нас как-то так
[32:43.180 --> 32:51.820]  сжатый курс алгоритма. Относительно сжатый, конечно, но все-таки. Вот. Вот. Есть несколько методов
[32:51.820 --> 33:11.380]  решения рекуррентов. Ну, и нулевой метод – это мастер-теорема такая. Подробнее все про нее
[33:11.380 --> 33:17.780]  написано в книге Формана в третьем издании. Прекрасные чти, во всем на ночь советую. 50
[33:17.780 --> 33:25.780]  страниц в день и будете знать алгоритмы. Правда, не те, что мы проходим. Вот. Но полезно. Так,
[33:25.780 --> 33:38.500]  теперь нормальный способ. Первый человеческий – это метод подстановки. Ну, в целом, казалось бы,
[33:38.500 --> 33:45.540]  это почти единственный метод. Но есть еще один, который мы с вами посмотрим чуть позже. Это анализ
[33:45.540 --> 33:56.940]  дерева рекурсия. Вот. Но мы его потом посмотрим, потому что у нас сегодня не будет алгоритмов,
[33:56.940 --> 34:16.580]  которым он применим. В момент подстановки мы сейчас им решим эту рекурренту. Ну, давайте решать.
[34:16.580 --> 34:31.380]  Ну, мы сделаем все очень просто. Мы возьмем и метод подстановки называется… Просто
[34:31.380 --> 34:35.460]  просто возьмите и подставьте это же выражение сюда же. То есть проведите одну интерацию еще.
[34:35.460 --> 34:56.180]  Так. Давайте так сделаем. Вот. Это лишняя скобка. То есть вот ваша единица осталась,
[34:56.180 --> 35:01.060]  а эту превратили, будто бы вы здесь вместо L сделали замену переменных L пополам.
[35:01.060 --> 35:23.100]  Логично. Сделаем K шагов. Ну, то есть на каждом шаге у вас будет как-то вот так-то выглядеть.
[35:31.220 --> 35:47.860]  Вот. Ну, мы будем искренне верить, что для любого гамма меньше 1, t от гамма равно 0. Вот. Это у нас
[35:47.860 --> 35:52.260]  будет такое требование, чтобы у нас была какая-то база, так сказать, нашей рекурсии. Чтобы не могли
[35:52.500 --> 36:06.500]  долго спускаться. Ну, тогда давайте сделаем вот такое вот. Так. t от L поделить на 2 в степени
[36:06.500 --> 36:19.740]  округленный верх логариф двуечный. Конечно, есть, потому что у вас здесь K шаг. K у вас не
[36:19.740 --> 36:25.380]  констант. У вас K произвольный здесь. То есть, понятное дело, что если бы это был второй шаг,
[36:25.380 --> 36:30.700]  у вас от единицы схлопнулось бы от единицы. Но, в общем-то, в случае у вас число шагов,
[36:30.700 --> 36:36.860]  оно не константное. Оно зависит как функция от L. Поэтому мы не можем так просто взять и забить на
[36:36.860 --> 36:55.460]  него. Вот. Плюс вот. Ну, понятное дело, что вот это вот число в скобках меньше 1. Согласны?
[36:55.460 --> 37:03.580]  Ну, и двуечный логариф L округленный вверх. Значит, да, в этой штуке это хотя бы L. Значит,
[37:03.580 --> 37:09.460]  здесь меньше, в общем, 1. Значит, мы по вот этому вот требованию говорим, что это 0. Просто-напросто.
[37:20.900 --> 37:26.780]  Вот лог L. То есть, такой вот метод подстановки. Он просто берется, и вы делаете один шаг,
[37:26.780 --> 37:32.260]  и понимаете примерно, как у вас будет меняться ваше рекуррентное соотношение. Дальше делаете
[37:32.260 --> 37:38.180]  еще шаг. Ну, и так далее. То есть, вы видите общий вид изменения на катом шаге, и дальше из него уже
[37:38.180 --> 37:44.180]  ка устремляете. Ну, не в бесконечность, когда у вас вот эта рекуррентная часть идет в 0. Подбираете
[37:44.180 --> 38:01.300]  нужное ка и побеждаете. Да. Смотрите. Ну, действительно, если…
[38:01.300 --> 38:16.820]  Это верное замечание очень. Давайте скажем так. Замечание. Правда ли вот это, что N2 равно O2 в степени N?
[38:16.820 --> 38:25.460]  Ну, вот. То есть, как бы, понятное дело, что оценка O большим, она в некотором плане немножко
[38:25.460 --> 38:32.780]  бессмысленна. Потому что она не дает вам никакой точности. Вот. Поэтому всегда старается выбрать
[38:32.780 --> 38:38.980]  под O большим функцию как можно меньше. Вот. Ну, понятное дело, что если я скажу, что… Ну вот,
[38:38.980 --> 38:45.460]  вот этого штука bin-поиск называлась, если что. Потому что бинарный вы делите пополам. Вот. Если я скажу,
[38:45.460 --> 38:53.020]  что bin-поиск работает за O от L, то же правда. Вот. Но, скорее всего, от вас будет ждать нет ответа.
[38:53.020 --> 39:05.660]  Смотрите, мы здесь немножко договариваемся, что у нас не может быть с двух сторон O. Вот. Потому
[39:05.660 --> 39:21.380]  что… Что? Так нет, это вот… Это преобразование все T от L. У вас здесь-то нет O. Ну, грубо говоря,
[39:21.940 --> 39:28.300]  у вас здесь есть запись без O слева. То есть это будто бы модификация одного и того же. Формально
[39:28.300 --> 39:37.580]  мы никогда не будем писать вот так вот. Потому что, во-первых, это неправда просто-напросто. Потому
[39:37.580 --> 39:42.580]  что мы искренне верим, что равенство все-таки в две стороны читается. Здесь в обе стороны неверно.
[39:42.580 --> 39:48.980]  Вы можете сказать вот так вот. Вложенность поставить. И вот это уже будет правдой с одной
[39:48.980 --> 39:55.940]  стороны. Вот. Но мы просто так никогда не делаем. Ну, потому что так сложилось. Мы не пишем с обеих
[39:55.940 --> 40:03.940]  сторон O большие. Ну и на самом деле вот O от J от N это просто класс функций множества в некотором
[40:03.940 --> 40:10.900]  плане. Поэтому здесь можно смело писать знак принадлежности. И вроде бы даже с точки зрения
[40:10.900 --> 40:16.220]  формальной математики это будет вернее. Мы уже все привыкли здесь писать равенство, поэтому здесь
[40:16.420 --> 40:24.100]  такая вот сумятица получается. Вот. Поэтому мы дабы избежать некорректных выражений не будем писать,
[40:24.100 --> 40:29.820]  что Омега большое от чего-то равно O большое от чего-то. Потому что это просто бессмыслится. Мы
[40:29.820 --> 40:46.140]  запрещаем себе такие выражения. Что еще раз? Ну, это прозрение.
[40:46.220 --> 40:55.940]  Ну, это смотрите. Хорошо. Я пишу подробнее. Мы хотим, чтобы L поделить на 2 степени K оказалось
[40:55.940 --> 41:01.420]  строго меньше единички. Потому что тогда у нас здесь вот эта вот штука пропадет. И только тогда. Мы
[41:01.420 --> 41:07.780]  договорились, что только тогда она и пропадает. Ну, что мы тогда делаем? Мы просто берем и говорим.
[41:07.780 --> 41:17.940]  Тогда K. Ну, что-то 2 степени K больше, чем L. K больше равно, чем логарифт натворичный L,
[41:17.940 --> 41:20.980]  а углённый вверх. То есть мы решаем такое неравенство с вами, на самом деле.
[41:20.980 --> 41:33.140]  Окей. Ну, тогда, если здесь вопросов больше нет, мы пойдем дальше, наверное. Так, давайте я вам
[41:33.140 --> 41:41.860]  сразу же скажу, что в определении Омега большого я вам всем наврал. Но оно было здесь написано. Там
[41:41.860 --> 41:46.580]  просто был вот знак другую сторону здесь. Я написал, что здесь для любого С больше нуля найдется. Но,
[41:46.580 --> 41:53.700]  конечно, это неправда. Там вот в том углу были правы. Да, там тоже будут два канфра существует.
[41:53.700 --> 42:01.860]  Пожалуйста, поправьте. Окей. Почти весь этот семестр посвящен структурам данных, как мы с вами
[42:01.860 --> 42:08.500]  говорили. И большая часть у нас будет как бы две стороны этих структур данных. Одна будет работать,
[42:08.500 --> 42:15.420]  мы будем идти к деревьям поисками, наверное. Вот вторая половина структур данных у нас будет
[42:15.420 --> 42:21.820]  связана с обработкой запросов на подотресках. То есть нас будут, как правило, интересовать такие
[42:21.820 --> 42:29.580]  издачи, как сумма на подотреске в массе, там минимум на подотреске и всякие другие их, как бы так
[42:29.580 --> 42:37.420]  сказать, интересные есть. Собственно, нас будет, давайте, наверное, тогда
[42:37.420 --> 42:50.860]  РМК и РСК. Вот у нас будут две задачи, которые нас будут волновать весь семестр. Это РМК и РСК я сейчас
[42:50.860 --> 43:00.380]  все объясню, если что. Ну подсловка у них общая, есть масси, мы хотим что-то узнавать на подотреске.
[43:00.380 --> 43:11.740]  Это range не query. Ну с английским не очень, поэтому может быть query надо по-другому произносить.
[43:11.740 --> 43:19.300]  Вот. Это запрос минимума на подотреске.
[43:19.300 --> 43:32.460]  И второе, это РСК будет нас интересовать. Ну давайте гении дедукции.
[43:32.460 --> 43:48.260]  Какое здесь будет слово написано? Да, range сам query. Бла-бла-бла. Вот. У них есть несколько постановок.
[43:48.260 --> 44:01.900]  Давайте сформулируем. Есть статик. Это массив не меняется.
[44:03.060 --> 44:18.660]  То есть он как его дали, такой он и остается все время. Есть вариант динамик. Это изменения разрешены.
[44:19.660 --> 44:40.260]  В чем-нибудь от самых разных видов. Вот. Есть еще два термина. Это онлайн. Если что, мы все это будем потом еще повторять.
[44:40.260 --> 44:46.140]  Можно, скажем так, просто запомнить. Это временную память, чтобы понимать, что происходит.
[44:46.140 --> 45:09.260]  Вот. Онлайн это запросы неизвестны заранее. Есть еще одна версия. Это из обновлайн. Это бла-бла-бла. Известны.
[45:09.260 --> 45:25.380]  То есть вам известно все вопросы и это прекрасно. Можете там что-то сделать. Как там подсортировать. Отыть на них все в облегченном порядке и дальше вывести их в том, в котором вас спрашивали.
[45:25.380 --> 45:34.380]  Обычно мы будем жить с онлайн задачами, ну потому что мир устроен так, что все у нас онлайн. 21 век.
[45:34.500 --> 45:52.500]  И сегодня мы будем с вами решать вот такую вот задачу. Онлайн стать РСК. Вот это вот точно будет интересоваться с вами сегодня.
[45:52.620 --> 46:15.620]  В статическом массиве отвечать на запросы ЭЛЕР, который переводит нас вот в такую вот штуку.
[46:15.740 --> 46:29.740]  То есть он дает запрос ЭЛЕР и мы должны работать с его вещью. Вот это что мы будем сегодня учиться работать с этим.
[46:29.740 --> 46:39.740]  Да, ну я думаю сразу можно догадаться, что если у вас есть решение для динамик задачи, то как бы есть решение для статика. Потому что статика это одно что динамик.
[46:39.860 --> 46:47.860]  Аналогично с онлайн и оффлайн, если у вас есть решение для онлайн, то понятное дело и для оффлайн оно у вас есть.
[46:47.860 --> 46:55.860]  То есть как бы здесь можно и оффлайн писать, но динамик здесь нельзя, динамик он не умеет менять массивы.
[46:55.980 --> 47:06.980]  Ну что здесь предлагается сделать? Здесь предлагается сделать следующее, что давайте посчитаем вот такой вот массив.
[47:07.100 --> 47:15.100]  Ведем массив в префиксах сумм.
[47:15.220 --> 47:35.220]  Приопитый, это будет сумма вот такого вот вложения от миллиарда.
[47:35.220 --> 47:39.220]  Ну давайте в один амбецапт будем жить.
[47:39.340 --> 47:55.340]  Ну в массиве 1, 2, 3, 4, 5 это будет массив 1, 3, 6, 10, 15 тогда.
[47:55.460 --> 48:03.460]  Вот, ну тогда что такое сумма по i от l до r?
[48:05.460 --> 48:07.460]  Это же на самом деле что такое?
[48:09.460 --> 48:11.460]  Давайте я напишу полностью эту сумму.
[48:11.580 --> 48:27.580]  Согласны ли вы с этим утверждением?
[48:27.580 --> 48:31.580]  Ну она вроде очевидна на самом деле.
[48:31.700 --> 48:37.700]  Что мы как бы взяли сумму от начала до r и вычеркнули все лишнее.
[48:37.700 --> 48:43.700]  Все, что здесь попало лишний хвост мы взяли и удалили.
[48:43.700 --> 48:47.700]  Ну тогда можно сказать, что это равно.
[48:47.700 --> 48:51.700]  Выпишем вот так.
[48:51.820 --> 49:01.820]  Согласны ли вы с этим утверждением?
[49:01.820 --> 49:03.820]  Ну просто схватили эту запись прекрасно.
[49:15.820 --> 49:17.820]  Ну победа.
[49:17.940 --> 49:19.940]  То есть мы с вами научились.
[49:20.940 --> 49:24.940]  То есть если мы один раз почитали массив пред,
[49:24.940 --> 49:28.940]  то тогда мы с вами научились отвечать на вот единицы на запрос.
[49:28.940 --> 49:30.940]  Согласны?
[49:32.940 --> 49:34.940]  Как считать массив пред?
[49:36.940 --> 49:38.940]  Ну сделаем вот так вот.
[49:40.940 --> 49:44.940]  Первый пред нулевой равный нулю.
[49:45.060 --> 49:57.060]  И ты равно а и ты плюс пред и минус один.
[49:57.060 --> 49:59.060]  Есть такое вот соотношение есть у него.
[49:59.060 --> 50:01.060]  Ну вроде логично, да?
[50:01.180 --> 50:03.180]  Вот так.
[50:11.180 --> 50:15.180]  Тогда пред с помощью такого интересной процедуры у вас считается за линию.
[50:15.180 --> 50:17.180]  Ну за линейное время от размера h.
[50:17.180 --> 50:19.180]  Почему?
[50:19.180 --> 50:21.180]  Ну на самом деле понятно.
[50:21.180 --> 50:22.180]  Почему?
[50:22.180 --> 50:24.180]  Потому что у вас здесь.
[50:24.300 --> 50:26.300]  Короче говоря, да.
[50:26.300 --> 50:28.300]  Вот здесь просто проходите каждый индекс массива пред,
[50:28.300 --> 50:30.300]  он имеет размер h.
[50:30.300 --> 50:32.300]  Вот.
[50:32.300 --> 50:34.300]  И здесь у вас единицы.
[50:34.300 --> 50:36.300]  Просто сложение.
[50:42.300 --> 50:44.300]  Вот.
[50:44.300 --> 50:48.300]  Ну поэтому дело, что вам этот пред надо где-то хранить.
[50:48.420 --> 50:50.420]  То есть надо по идее эту память выделить, да?
[50:50.420 --> 50:52.420]  По-хорошему.
[50:52.420 --> 50:54.420]  То есть создать отдельно массивчик,
[50:54.420 --> 50:56.420]  вот так вот его заполнить.
[50:56.420 --> 50:58.420]  Ну на самом деле, по-хорошему,
[50:58.420 --> 51:00.420]  вам не нужно это делать,
[51:00.420 --> 51:02.420]  потому что вы можете писать прямо поверх массива a.
[51:02.420 --> 51:04.420]  Почему нет?
[51:04.420 --> 51:06.420]  Ну типа вам на момент подсчета ita момент,
[51:06.420 --> 51:08.420]  вам прежние h не нужны.
[51:08.420 --> 51:10.420]  Вам нужна только a ita,
[51:10.420 --> 51:12.420]  которую вы будете сейчас перезаписывать.
[51:12.420 --> 51:14.420]  Вот.
[51:14.420 --> 51:16.420]  Вот.
[51:16.540 --> 51:18.540]  И пред, и минус первый.
[51:18.540 --> 51:20.540]  Вот.
[51:20.540 --> 51:22.540]  Это у вас уже посчитанную записку.
[51:22.540 --> 51:24.540]  То есть у вас даже корректно будет писать поверх массива a.
[51:24.540 --> 51:26.540]  Вот этот массив пред.
[51:26.540 --> 51:28.540]  Вау, круто, да?
[51:28.540 --> 51:30.540]  Поэтому можно даже до памяти выделить на самом деле.
[51:34.540 --> 51:36.540]  Массив статический, да.
[51:36.540 --> 51:38.540]  Но ваш задача звучит так.
[51:38.540 --> 51:40.540]  У вас есть массив pzn элементов
[51:40.540 --> 51:42.540]  и q запросов к нему.
[51:42.540 --> 51:44.540]  У вас есть пзн элементов,
[51:44.660 --> 51:46.660]  и q запросов к нему.
[51:46.660 --> 51:48.660]  Сумма на подотреске.
[51:48.660 --> 51:50.660]  То есть как устроен сам массив,
[51:50.660 --> 51:52.660]  вас не очень интересует, если честно.
[51:52.660 --> 51:54.660]  Вас не просят его вернуть в исходном виде.
[51:54.660 --> 51:56.660]  Хотя его можно вернуть
[51:56.660 --> 51:58.660]  из массива pzn, сумму обратно построить,
[51:58.660 --> 52:00.660]  на самом деле, как массив разности,
[52:00.660 --> 52:02.660]  и просто последовать.
[52:02.660 --> 52:04.660]  Но это нам не очень интересно.
[52:04.660 --> 52:06.660]  И в самом деле я к тому, что здесь можно
[52:06.660 --> 52:08.660]  до памяти выделять под массив pzn.
[52:08.660 --> 52:10.660]  Но понятное дело, что в контесте у вас будут задачи на это,
[52:10.660 --> 52:12.660]  и там можно везде выделять до памяти,
[52:12.780 --> 52:14.780]  то есть банально проще жить с этим всем.
[52:14.780 --> 52:16.780]  Вот.
[52:16.780 --> 52:18.780]  Но, так сказать, просто для вашего сведения,
[52:18.780 --> 52:20.780]  что можно пересписывать его.
[52:20.780 --> 52:22.780]  Вот.
[52:22.780 --> 52:24.780]  Тогда ответный запрос
[52:24.780 --> 52:26.780]  зовут единица, да?
[52:33.780 --> 52:35.780]  Вот. И все-таки решение...
[52:39.780 --> 52:41.780]  Мы будем обозначать разные
[52:41.900 --> 52:43.900]  решения вот этих вот задачей в родской рамку
[52:43.900 --> 52:45.900]  таким вот образом, что
[52:50.900 --> 52:52.900]  будем говорить, что это какая-то вот такая вот пара
[52:57.900 --> 52:59.900]  где вот это вот это время построения вашей
[52:59.900 --> 53:01.900]  вспомогательной штуки для ответных запросов,
[53:01.900 --> 53:03.900]  а вот это время ответа на запрос в мощи нее.
[53:03.900 --> 53:05.900]  То есть мы за o от n построили массив
[53:05.900 --> 53:07.900]  пред, а дальше
[53:07.900 --> 53:09.900]  на один запрос ответили за от единицы
[53:10.020 --> 53:12.020]  просто вычитанием двух значений в массиве.
[53:12.020 --> 53:14.020]  Ну, разностью.
[53:17.020 --> 53:19.020]  Пара
[53:19.020 --> 53:21.020]  время
[53:21.020 --> 53:23.020]  построения
[53:23.020 --> 53:25.020]  плюс время
[53:25.020 --> 53:27.020]  запроса.
[53:32.020 --> 53:34.020]  Ну,
[53:34.020 --> 53:36.020]  вопрос в студию
[53:36.020 --> 53:38.020]  можно ли
[53:38.140 --> 53:40.140]  так считать минимума под отрезки?
[53:45.140 --> 53:47.140]  Ну, почему нет?
[53:57.140 --> 53:59.140]  Ну, давайте кто-нибудь.
[54:01.140 --> 54:03.140]  И что?
[54:03.260 --> 54:05.260]  Ну, понятно, что
[54:05.260 --> 54:07.260]  ну, может как-то это можно там...
[54:07.260 --> 54:09.260]  Ну, да, минимум действительно не получится.
[54:09.260 --> 54:11.260]  Хорошо. Какое требование, в общем, на операцию
[54:11.260 --> 54:13.260]  мы можем наложить, чтобы получилось?
[54:13.260 --> 54:15.260]  Можно же не только сумму
[54:15.260 --> 54:17.260]  считать на отрезки, я не знаю там, ну...
[54:17.260 --> 54:19.260]  Вдруг нам захочется побитого i
[54:19.260 --> 54:21.260]  посчитать на отрезки?
[54:21.260 --> 54:23.260]  Вдруг нам захочется чем-то?
[54:23.260 --> 54:25.260]  Обратимость?
[54:25.260 --> 54:27.260]  Да, мы хотели, ну,
[54:27.260 --> 54:29.260]  посчитать на отрезки.
[54:29.260 --> 54:31.260]  Ну, да.
[54:31.380 --> 54:33.380]  Да, мы хотели обратимость,
[54:33.380 --> 54:35.380]  во-первых.
[54:35.380 --> 54:37.380]  Да и в главных, в общем-то.
[54:37.380 --> 54:39.380]  Это первое, что мы хотим обратимость,
[54:39.380 --> 54:41.380]  мы хотим иметь обратную операцию.
[54:41.380 --> 54:43.380]  Ну, то есть, там, если кто-то там знаком стал
[54:43.380 --> 54:45.380]  неправильно в школе,
[54:45.380 --> 54:47.380]  например, у вас группа, там, это
[54:47.380 --> 54:49.380]  множество, где у вас есть ассоциативная
[54:49.380 --> 54:51.380]  и бинарная операция,
[54:51.380 --> 54:53.380]  то, конечно, там есть обратные элементы.
[54:53.380 --> 54:55.380]  Вот.
[54:55.380 --> 54:57.380]  Мы как бы хотим уметь обращать элементы,
[54:57.380 --> 54:59.380]  чтобы
[54:59.500 --> 55:01.500]  у вас был минимум минус.
[55:01.500 --> 55:03.500]  С минимумом так не получится.
[55:03.500 --> 55:05.500]  У вас минимум необратим.
[55:05.500 --> 55:07.500]  Ну, под обратимостью есть подразумевание следующее.
[55:07.500 --> 55:09.500]  Что у вас для любых
[55:09.500 --> 55:11.500]  А, Б,
[55:11.500 --> 55:13.500]  решение
[55:13.500 --> 55:15.500]  уравнения
[55:15.500 --> 55:17.500]  минимум
[55:17.500 --> 55:19.500]  под АХ равно
[55:19.500 --> 55:21.500]  Б,
[55:21.500 --> 55:23.500]  единственно.
[55:23.500 --> 55:25.500]  Вот тогда мы считаем,
[55:25.500 --> 55:27.500]  что минимум обратим,
[55:27.620 --> 55:29.620]  уравнение разрешается единственным образом.
[55:29.620 --> 55:31.620]  Ну, вместо минимума всегда поставьте произвольную F,
[55:31.620 --> 55:33.620]  вы получите объявление обратимым.
[55:33.620 --> 55:35.620]  Функции в нашем конкретном курсе.
[55:37.620 --> 55:39.620]  Но это неправда.
[55:41.620 --> 55:43.620]  Неправда.
[55:43.620 --> 55:45.620]  Поэтому минимум не обратим.
[55:52.620 --> 55:54.620]  Вот. Ну, еще что мы хотим делать?
[55:54.620 --> 55:56.620]  Мы хотим иметь ассоциативность все-таки.
[55:56.740 --> 55:58.740]  Ассоциативность,
[55:58.740 --> 56:00.740]  как скобочки не расстреляют,
[56:00.740 --> 56:02.740]  в результате не тот же.
[56:02.740 --> 56:04.740]  Все-таки нам здесь стало важно,
[56:04.740 --> 56:06.740]  когда мы это делаем.
[56:06.740 --> 56:08.740]  Ну, и, наверное,
[56:08.740 --> 56:10.740]  не знаю, какую-нибудь коммунативность,
[56:10.740 --> 56:12.740]  наверное, тоже хотелось бы.
[56:12.740 --> 56:14.740]  Или нет?
[56:14.740 --> 56:16.740]  Вроде не обязательно.
[56:16.740 --> 56:18.740]  Ну, вроде нет, действительно,
[56:18.740 --> 56:20.740]  мы все считаем здесь,
[56:20.740 --> 56:22.740]  короче говоря, от большего индекса в единицу,
[56:22.740 --> 56:24.740]  вроде бы можно без коммунативности обойтись.
[56:24.860 --> 56:26.860]  Но обычно она всегда будет присутствовать.
[56:26.860 --> 56:28.860]  Придумать ассоциативную,
[56:28.860 --> 56:30.860]  некоммунативную аккорацию сложно.
[56:30.860 --> 56:32.860]  Но один из примеров
[56:32.860 --> 56:34.860]  это умножение матрицы.
[56:34.860 --> 56:36.860]  Она ассоциативна, но некоммунативна.
[56:38.860 --> 56:40.860]  И внезапно не всегда обратим.
[56:43.860 --> 56:45.860]  У вас уже была первая пара по линаву,
[56:45.860 --> 56:47.860]  по аналитам.
[56:47.860 --> 56:49.860]  Те, кто уже был в курсе,
[56:49.860 --> 56:51.860]  вы знаете, что есть выраженная матрица
[56:51.860 --> 56:53.860]  и с ними уравнение не всегда
[56:53.980 --> 56:55.980]  в разрешении.
[56:59.980 --> 57:01.980]  Ну что тогда?
[57:03.980 --> 57:05.980]  У нас до конца пары.
[57:05.980 --> 57:07.980]  Получается еще 15 минут.
[57:07.980 --> 57:09.980]  15 минут.
[57:09.980 --> 57:11.980]  Ну окей,
[57:11.980 --> 57:13.980]  посмотрите, что мы разобрались, ты молодец.
[57:13.980 --> 57:15.980]  Ну, окей,
[57:15.980 --> 57:17.980]  какие еще операции обратимы?
[57:17.980 --> 57:19.980]  Ну, операция умножить, она обратима,
[57:19.980 --> 57:21.980]  пока вы не пытаетесь делить на ноль.
[57:22.100 --> 57:24.100]  Поэтому нули придется отдельно
[57:24.100 --> 57:26.100]  ифать.
[57:26.100 --> 57:28.100]  Здесь никак не будет так.
[57:28.100 --> 57:30.100]  Что еще?
[57:31.100 --> 57:33.100]  Ну, ладно.
[57:33.100 --> 57:35.100]  Примеры обратимых операций сам придумайте.
[57:35.100 --> 57:37.100]  Ну, либо в домашних встретите.
[57:42.100 --> 57:44.100]  А, ну вот, кстати,
[57:44.100 --> 57:46.100]  давайте разберем такую задачу.
[57:46.220 --> 57:48.220]  Вот у вас есть массив АИП.
[58:02.220 --> 58:04.220]  Это фродская лир.
[58:04.220 --> 58:06.220]  Хотим вернуть следующую.
[58:06.220 --> 58:08.220]  Ну, знаете, что такое средне-гармоническая, да?
[58:08.340 --> 58:10.340]  Ну, казалось бы, у вас вообще нигде встречи не может.
[58:10.340 --> 58:12.340]  Вообще нигде.
[58:12.340 --> 58:14.340]  Ну, пример такой.
[58:16.340 --> 58:18.340]  Ну, все-таки вы в тучбольной физике когда-то знали,
[58:18.340 --> 58:20.340]  вы вроде не знаете.
[58:20.340 --> 58:22.340]  Когда-то вы уже знали, все.
[58:22.340 --> 58:24.340]  Наверное.
[58:24.340 --> 58:26.340]  Значит мы все, наверно.
[58:26.340 --> 58:28.340]  Ну, давайте посмотрим.
[58:28.340 --> 58:30.340]  Ну, вот,
[58:30.340 --> 58:32.340]  ну, вот,
[58:32.340 --> 58:34.340]  вот,
[58:34.340 --> 58:36.340]  ну, вот,
[58:36.340 --> 58:40.340]  Наверное, значит, мы сегодня, наверное, спустили бы.
[58:40.340 --> 58:45.340]  Вот, и у вас там, если автомобиль едет...
[58:45.340 --> 58:47.340]  Как считать среднюю скорость у автомобиля?
[58:47.340 --> 58:51.340]  Если он проезжает равные промежутки пути просто разными скоростями.
[58:51.340 --> 58:53.340]  V1, V2, и ты дали там V.
[58:53.340 --> 58:55.340]  Раскал паса.
[58:55.340 --> 58:57.340]  Вот, побито.
[58:57.340 --> 58:59.340]  S, S, S, S.
[58:59.340 --> 59:03.340]  V1, V2, V3, V4.
[59:03.340 --> 59:05.340]  Как вы считаете среднюю скорость?
[59:07.340 --> 59:09.340]  Да, V4, S.
[59:09.340 --> 59:11.340]  V9, S9, V1.
[59:14.340 --> 59:16.340]  На V.
[59:16.340 --> 59:18.340]  На S.
[59:18.340 --> 59:20.340]  Ну, давайте на это все пробить.
[59:25.340 --> 59:28.340]  Если у вас там хотите выгонять что-то среднее,
[59:28.340 --> 59:30.340]  вот, просто на каком-то подотреске,
[59:30.340 --> 59:33.340]  ну, например, не знаю, у вас там испытание нового двигателя идет,
[59:33.340 --> 59:38.340]  вот, и вы хотите узнать, какая у него там была зрения скорость на таком-то отрезке.
[59:38.340 --> 59:42.340]  Вот, тогда вы можете принять этот вот запрос, быстро обрабатывать это.
[59:42.340 --> 59:44.340]  Ну, не знаю, зачем-то вам это пригодилось.
[59:44.340 --> 59:48.340]  Вот, это минимальная жизнеспособная легенда, какая-то задача.
[59:48.340 --> 59:49.340]  Вот.
[59:49.340 --> 59:51.340]  Вверху.
[59:51.340 --> 59:53.340]  Что?
[59:53.340 --> 59:55.340]  Возможно, я не помню.
[59:55.340 --> 59:57.340]  Ну, может быть, это неважно.
[59:57.340 --> 59:59.340]  Ну, давайте A.
[01:00:02.340 --> 01:00:03.340]  Вот так вот.
[01:00:03.340 --> 01:00:06.340]  Ну, умножить на число, это меньшее из проблем, скажем так,
[01:00:06.340 --> 01:00:09.340]  которые мы можем встретить в этой задачи.
[01:00:09.340 --> 01:00:10.340]  Вот.
[01:00:10.340 --> 01:00:12.340]  Ну, какое здесь решение?
[01:00:12.340 --> 01:00:15.340]  Ну, решение, давайте перейдем к массиву обратно.
[01:00:15.340 --> 01:00:18.340]  То есть вместо A, будем писать 1 делить на A и везде.
[01:00:18.340 --> 01:00:20.340]  Да?
[01:00:21.340 --> 01:00:23.340]  То есть мы...
[01:00:23.340 --> 01:00:25.340]  A1.
[01:00:25.340 --> 01:00:26.340]  А я?
[01:00:26.340 --> 01:00:28.340]  Переведем A1.
[01:00:30.340 --> 01:00:31.340]  Вот.
[01:00:31.340 --> 01:00:34.340]  Тогда ответом будет на запрос или...
[01:00:34.340 --> 01:00:38.340]  Возьмем прегрессные суммы на вот таком вот уже массиве, возьмем, да?
[01:00:38.340 --> 01:00:40.340]  Тогда мы получим знаменатель.
[01:00:40.340 --> 01:00:42.340]  Эту формулу.
[01:00:42.340 --> 01:00:44.340]  Ну, и вернем 1 делить на эту штуку.
[01:00:44.340 --> 01:00:47.340]  Ну, умножить еще на эту коэффициент.
[01:00:47.340 --> 01:00:49.340]  То есть за эту единицу тоже можно обрабатывать.
[01:00:49.340 --> 01:00:52.340]  То есть, на самом деле, операции типа среднего гармонического
[01:00:52.340 --> 01:00:54.340]  внезапно, вообще-то, проходят.
[01:00:54.340 --> 01:00:57.340]  Хотя, оказалось бы, они немножко необратимы.
[01:00:57.340 --> 01:01:01.340]  Не понятно вообще, что такое обратимость для среднего гармонического.
[01:01:01.340 --> 01:01:03.340]  Понятно, но...
[01:01:04.340 --> 01:01:06.340]  Что-то типа такого.
[01:01:09.340 --> 01:01:11.340]  Ну, откуда можно выразить, верно?
[01:01:11.340 --> 01:01:13.340]  Значит, пить, да, но...
[01:01:13.340 --> 01:01:15.340]  Так не очевидно.
[01:01:17.340 --> 01:01:20.340]  Можно еще раз? Почему минимум был необратим у нас?
[01:01:20.340 --> 01:01:22.340]  Давайте решим уравнение.
[01:01:29.340 --> 01:01:31.340]  Их все равно 4, их все равно 5, и так далее подходят.
[01:01:31.340 --> 01:01:33.340]  То есть у вас решение единственное.
[01:01:33.340 --> 01:01:35.340]  Поэтому вас меня не обратили.
[01:01:37.340 --> 01:01:39.340]  Ну, окей.
[01:01:42.340 --> 01:01:45.340]  Ну, давайте начнем, когда тема следующей векции.
[01:01:51.340 --> 01:01:54.340]  А именно, у нас с вами такая будет сейчас...
[01:01:54.340 --> 01:01:57.340]  Ну, в следующей векции не страшно.
[01:01:59.340 --> 01:02:01.340]  Нужно будет такое отступление,
[01:02:01.340 --> 01:02:03.340]  назовем это в некотором бане,
[01:02:03.340 --> 01:02:05.340]  данье уважения классическим курсам по алгоритму.
[01:02:05.340 --> 01:02:07.340]  Вот.
[01:02:07.340 --> 01:02:09.340]  Утверждение на контейнеры.
[01:02:17.340 --> 01:02:19.340]  Вот, нас будет рисовать
[01:02:19.340 --> 01:02:21.340]  следующие штуки
[01:02:25.340 --> 01:02:27.340]  в списке
[01:02:27.340 --> 01:02:29.340]  односвязанным
[01:02:29.340 --> 01:02:31.340]  и несвязанным.
[01:02:34.340 --> 01:02:36.340]  Дальше нас будет рисовать
[01:02:36.340 --> 01:02:38.340]  степ,
[01:02:41.340 --> 01:02:43.340]  очередь
[01:02:45.340 --> 01:02:47.340]  и деп.
[01:02:47.340 --> 01:02:49.340]  Вот, нас будут рисовать такие вот контейнеры.
[01:02:51.340 --> 01:02:53.340]  Ну, давайте, наверное, поговорим
[01:02:53.340 --> 01:02:55.340]  про списки,
[01:02:55.340 --> 01:02:57.340]  про это трио поговорим в следующий раз.
[01:02:57.340 --> 01:02:59.340]  Ну, сколько успеем, столько успеем.
[01:03:01.340 --> 01:03:03.340]  Так сказать,
[01:03:03.340 --> 01:03:05.340]  больше успеем сегодня,
[01:03:05.340 --> 01:03:07.340]  больше успеем в семестре.
[01:03:08.340 --> 01:03:10.340]  Значит, больше будет экзамен.
[01:03:12.340 --> 01:03:14.340]  И больше домашний.
[01:03:17.340 --> 01:03:19.340]  Ну, вот мне институты уже пересылали сообщение
[01:03:19.340 --> 01:03:21.340]  из чата в групп, что спрашивают, когда
[01:03:21.340 --> 01:03:23.340]  уже домашние будут.
[01:03:23.340 --> 01:03:25.340]  Вот, так что я
[01:03:25.340 --> 01:03:27.340]  вчера напрягся
[01:03:27.340 --> 01:03:29.340]  и все-таки доделал контест первым
[01:03:29.340 --> 01:03:31.340]  и первый теоретический домашний был уже в субботу
[01:03:31.340 --> 01:03:33.340]  в чате.
[01:03:33.340 --> 01:03:35.340]  Да, там деплайны, там сроки выполнены
[01:03:35.340 --> 01:03:37.340]  в две недели примерно на каждую неделю.
[01:03:37.340 --> 01:03:39.340]  Вот, ну, возможно, у вас
[01:03:39.340 --> 01:03:41.340]  не будет перерывов перед
[01:03:41.340 --> 01:03:43.340]  вторым домашним заданием, потому что
[01:03:43.340 --> 01:03:45.340]  потому что лучше
[01:03:45.340 --> 01:03:47.340]  сейчас сделать как можно больше, чем в декабре
[01:03:47.340 --> 01:03:49.340]  страдать, потому что в декабре
[01:03:49.340 --> 01:03:51.340]  и так будет много предметов, которые займут ваше
[01:03:51.340 --> 01:03:53.340]  место в сердечке.
[01:03:53.340 --> 01:03:55.340]  Вот, например,
[01:03:55.340 --> 01:03:57.340]  домашний по мотану третья
[01:03:57.340 --> 01:03:59.340]  и я думаю, что тогда
[01:03:59.340 --> 01:04:01.340]  контестом будет не очень нравится
[01:04:01.340 --> 01:04:03.340]  дополнительный, тем более там
[01:04:03.340 --> 01:04:05.340]  тема будет достаточно тяжелая,
[01:04:05.340 --> 01:04:07.340]  а не вот то, что в первом контесте.
[01:04:07.340 --> 01:04:09.340]  Потому что в первый контест, скорее всего, вам сядете
[01:04:09.340 --> 01:04:11.340]  и за пару тройку вечеров зарешаете, потому что
[01:04:11.340 --> 01:04:13.340]  он легкий.
[01:04:13.340 --> 01:04:15.340]  Это так чисто, чтобы вас расслабить, вот, а потом
[01:04:15.340 --> 01:04:17.340]  да.
[01:04:17.340 --> 01:04:19.340]  А ограничения по времени на контесте нет?
[01:04:19.340 --> 01:04:21.340]  Конечно, есть.
[01:04:21.340 --> 01:04:23.340]  Это не то, чтобы вы типа сели
[01:04:23.340 --> 01:04:25.340]  и у вас ровно три часа чтобы решить. Нет, такого нет.
[01:04:25.340 --> 01:04:27.340]  У вас как бы есть у всех
[01:04:27.340 --> 01:04:29.340]  общий финишный флажок.
[01:04:29.340 --> 01:04:31.340]  Вот там, по-моему,
[01:04:31.340 --> 01:04:33.340]  во вторник через две недели, 23.59.
[01:04:33.340 --> 01:04:35.340]  Вот.
[01:04:35.340 --> 01:04:37.340]  Мы можете начать хоть в 10.30 утра
[01:04:37.340 --> 01:04:39.340]  контест откроется.
[01:04:39.340 --> 01:04:41.340]  Сегодня, да. Мы можете хоть
[01:04:41.340 --> 01:04:43.340]  в 10.30. Ладно, нет, это будет плохо, что на записи
[01:04:43.340 --> 01:04:45.340]  останется не ходить на пары следующие. Вот.
[01:04:45.340 --> 01:04:47.340]  Ходите на них, а потом вот после пар
[01:04:47.340 --> 01:04:49.340]  открыть контест, вот.
[01:04:49.340 --> 01:04:51.340]  И начать его решать. Хоть все две недели
[01:04:51.340 --> 01:04:53.340]  обрешайтесь. Ладно, на пары ходите.
[01:04:53.340 --> 01:04:55.340]  Можно на мои только ходить.
[01:04:55.340 --> 01:04:57.340]  И на фюру.
[01:04:57.340 --> 01:04:59.340]  Штрафы за посылки есть вообще? Нет.
[01:04:59.340 --> 01:05:01.340]  А, кстати,
[01:05:01.340 --> 01:05:03.340]  небольшое нововведение.
[01:05:03.340 --> 01:05:05.340]  Вот, вы могли слышать от старших
[01:05:05.340 --> 01:05:07.340]  курсов, что
[01:05:07.340 --> 01:05:09.340]  существуют всякие архивы на
[01:05:09.340 --> 01:05:11.340]  Водхабе, на Гитлабе с решениями.
[01:05:11.340 --> 01:05:13.340]  Вот. Пишу вас расстроить.
[01:05:13.340 --> 01:05:15.340]  Во-первых, половина, значит,
[01:05:15.340 --> 01:05:17.340]  поменена с прошлого года. Вы
[01:05:17.340 --> 01:05:19.340]  сказать не очень сможете. Во-вторых, поменена
[01:05:19.340 --> 01:05:21.340]  легенда почти вся. Поэтому
[01:05:21.340 --> 01:05:23.340]  искать будет труднее.
[01:05:23.340 --> 01:05:25.340]  Третьих и самых
[01:05:25.340 --> 01:05:27.340]  главных, мы наконец-то,
[01:05:27.340 --> 01:05:29.340]  ну как наконец-то?
[01:05:29.340 --> 01:05:31.340]  Я уже давно так делал. Вот. Наконец-то
[01:05:31.340 --> 01:05:33.340]  удалось, ну, говори Степанова и
[01:05:33.340 --> 01:05:35.340]  Илью Даниловича, электра в основном потоке,
[01:05:35.340 --> 01:05:37.340]  что мы перейдем все
[01:05:37.340 --> 01:05:39.340]  на Яндекс.Контест, решать Контест,
[01:05:39.340 --> 01:05:41.340]  потому что можно настроить код стайл автоматически
[01:05:41.340 --> 01:05:43.340]  при отправке.
[01:05:43.340 --> 01:05:45.340]  Вот. Поэтому вы будете отсылывать
[01:05:45.340 --> 01:05:47.340]  код. Вам тестирующая система будет говорить,
[01:05:47.340 --> 01:05:49.340]  что вы крайне неправы и что ваш код крайне
[01:05:49.340 --> 01:05:51.340]  далек от идеала, назовем это так.
[01:05:51.340 --> 01:05:53.340]  Но она будет говорить, где ваши ошибки
[01:05:53.340 --> 01:05:55.340]  и будет выдавать ошибку компиляции вам
[01:05:55.340 --> 01:05:57.340]  вердикт. Если вы
[01:05:57.340 --> 01:05:59.340]  потратите на первую задачу посылок 30,
[01:05:59.340 --> 01:06:01.340]  чтобы заслать, это не страшно.
[01:06:01.340 --> 01:06:03.340]  Да, еще будут включены
[01:06:03.340 --> 01:06:05.340]  санитайзеры. Санитайзеры
[01:06:05.340 --> 01:06:07.340]  это такая штука, которая внезапно
[01:06:07.340 --> 01:06:09.340]  проверяет, как вы обращаетесь с памятью.
[01:06:09.340 --> 01:06:11.340]  То есть,
[01:06:11.340 --> 01:06:13.340]  если вы выделим осип и пошли за его
[01:06:13.340 --> 01:06:15.340]  границы, она скажет вам, что вы
[01:06:15.340 --> 01:06:17.340]  неправы и выдаст вам ошибку
[01:06:17.340 --> 01:06:19.340]  исполнения.
[01:06:19.340 --> 01:06:21.340]  Круто? Чего вы не улыбаетесь?
[01:06:21.340 --> 01:06:23.340]  Круто. А насколько хорош
[01:06:23.340 --> 01:06:25.340]  эта проверка
[01:06:25.340 --> 01:06:27.340]  код стайла? Ну, она просто
[01:06:27.340 --> 01:06:29.340]  идет. Ну, типа там включена одна
[01:06:29.340 --> 01:06:31.340]  настройка. Делает как в Гугле.
[01:06:31.340 --> 01:06:33.340]  Но она проверяет прям вплоть до
[01:06:33.340 --> 01:06:35.340]  правил названия перемена.
[01:06:35.340 --> 01:06:37.340]  Вплоть до того, чтобы ты в приватных полях в строек ставил нижние подчерки.
[01:06:37.340 --> 01:06:39.340]  И чтобы у тебя
[01:06:39.340 --> 01:06:41.340]  константы с буквы K маленькие начинают.
[01:06:41.340 --> 01:06:43.340]  Ура.
[01:06:43.340 --> 01:06:45.340]  Но вам семинаристы подробнее
[01:06:45.340 --> 01:06:47.340]  про это расскажут.
[01:06:47.340 --> 01:06:49.340]  Сегодня вечером, если у вас будет
[01:06:49.340 --> 01:06:51.340]  желание, вы можете заслать
[01:06:51.340 --> 01:06:53.340]  первую задачу, Леха,
[01:06:53.340 --> 01:06:55.340]  и обнаружить, что
[01:06:55.340 --> 01:06:57.340]  она не сдается.
[01:06:57.340 --> 01:06:59.340]  Я утверждаю,
[01:06:59.340 --> 01:07:01.340]  что за конечное число этой рации вы ее сдадите.
[01:07:01.340 --> 01:07:03.340]  Зададите все.
[01:07:03.340 --> 01:07:05.340]  Может быть, что эта рация будет большим.
[01:07:05.340 --> 01:07:07.340]  Если у вас закончится предел стой-то рации,
[01:07:07.340 --> 01:07:09.340]  вы напишите в чат, я до тысячи подниму.
[01:07:09.340 --> 01:07:11.340]  Думаю,
[01:07:11.340 --> 01:07:13.340]  тысячи вам точно хватит.
[01:07:13.340 --> 01:07:15.340]  Вы недооцениваете.
[01:07:15.340 --> 01:07:17.340]  Не, я, конечно, понимаю, что могу вас недооценивать.
[01:07:17.340 --> 01:07:19.340]  Я тогда просто ограничу время, чтобы вы не могли
[01:07:19.340 --> 01:07:21.340]  дудосить эту систему.
[01:07:21.340 --> 01:07:23.340]  Раз в десять секунд хотя бы
[01:07:23.340 --> 01:07:25.340]  слать.
[01:07:25.340 --> 01:07:27.340]  Оставлю сток посылок, чтобы, типа,
[01:07:27.340 --> 01:07:29.340]  если вы будете непрерывно слать посылки,
[01:07:29.340 --> 01:07:31.340]  чтобы вы не могли исчерпать лимит.
[01:07:31.340 --> 01:07:33.340]  Но вы не доводите до такого, пожалуйста.
[01:07:33.340 --> 01:07:35.340]  Будут введены какие-нибудь санкции
[01:07:35.340 --> 01:07:37.340]  таким людям.
[01:07:39.340 --> 01:07:41.340]  Так, окей. Смотрите.
[01:07:41.340 --> 01:07:43.340]  Да, еще
[01:07:43.340 --> 01:07:45.340]  в ведомости вы могли...
[01:07:45.340 --> 01:07:47.340]  У нас 35 минут. Я решил,
[01:07:47.340 --> 01:07:49.340]  что мне лень рассказывать про то.
[01:07:49.340 --> 01:07:51.340]  Буду на следующей неделе рассказывать.
[01:07:51.340 --> 01:07:53.340]  Расскажу дальше про моменты еще.
[01:07:53.340 --> 01:07:55.340]  Ведомости у вас, да, может стратки сворачивать.
[01:07:55.340 --> 01:07:57.340]  Ведомости у вас некоторые задачи отмечены
[01:07:57.340 --> 01:07:59.340]  простеньким. Это задача с ревью
[01:07:59.340 --> 01:08:01.340]  для семинариста или ассистента.
[01:08:01.340 --> 01:08:03.340]  Вот.
[01:08:03.340 --> 01:08:05.340]  Это значит, что они будут реально проверить
[01:08:05.340 --> 01:08:07.340]  ваш код и смотреть, чтобы вы,
[01:08:07.340 --> 01:08:09.340]  типа, код стайлу все сделали,
[01:08:09.340 --> 01:08:11.340]  но все-таки ваш код можно читать.
[01:08:11.340 --> 01:08:13.340]  Сразу скажу,
[01:08:13.340 --> 01:08:15.340]  что код вот такого вот вида
[01:08:21.340 --> 01:08:23.340]  не пройдет проверку
[01:08:23.340 --> 01:08:25.340]  код стайла. Ну, в принципе, проверку
[01:08:25.340 --> 01:08:27.340]  в ревью не пройдет.
[01:08:27.340 --> 01:08:29.340]  А как правильно?
[01:08:29.340 --> 01:08:31.340]  Во-первых, нужно разные строки разносить.
[01:08:31.340 --> 01:08:33.340]  Во-вторых, непонятно, что тут A, что тут B.
[01:08:33.340 --> 01:08:35.340]  Вы должны конкретно прописывать полностью
[01:08:35.340 --> 01:08:37.340]  словами. Например,
[01:08:37.340 --> 01:08:39.340]  их,
[01:08:39.340 --> 01:08:41.340]  даже если в условии,
[01:08:41.340 --> 01:08:43.340]  они
[01:08:43.340 --> 01:08:45.340]  названы в условии сокращенно,
[01:08:45.340 --> 01:08:47.340]  просто чтобы
[01:08:47.340 --> 01:08:49.340]  была как бы проведена связь между легендой
[01:08:49.340 --> 01:08:51.340]  и входным форматом.
[01:08:51.340 --> 01:08:53.340]  Только для этого их так называются.
[01:08:53.340 --> 01:08:55.340]  Как же?
[01:08:57.340 --> 01:08:59.340]  Потому что у вас, ну, по-моему, я не помню,
[01:08:59.340 --> 01:09:01.340]  расшатан или нет, просто требования
[01:09:01.340 --> 01:09:03.340]  такой косметической гугля.
[01:09:03.340 --> 01:09:05.340]  Ну, потому что, как бы, когда ты читаешь так,
[01:09:05.340 --> 01:09:07.340]  ты будто бы
[01:09:07.340 --> 01:09:09.340]  не замечаешь запятую, продолжаешь дальше
[01:09:09.340 --> 01:09:11.340]  читать одно и то же имя. А так у тебя четко
[01:09:11.340 --> 01:09:13.340]  разделены все сущности.
[01:09:13.340 --> 01:09:15.340]  Вот. Я
[01:09:15.340 --> 01:09:17.340]  надеюсь, я вас обрадовал под конец
[01:09:17.340 --> 01:09:19.340]  лекции.
[01:09:19.340 --> 01:09:21.340]  Вот. Тем, кто
[01:09:21.340 --> 01:09:23.340]  хотел все еще с базы
[01:09:23.340 --> 01:09:25.340]  перейти в основу, я все-таки советую
[01:09:25.340 --> 01:09:27.340]  подумать. У вас таких новостей?
