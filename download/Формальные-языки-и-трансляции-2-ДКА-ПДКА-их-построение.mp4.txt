[00:00.000 --> 00:10.000]  Ну, кто помнит, на чем мы с вами в прошлый раз остановились?
[00:10.000 --> 00:15.000]  Какую мы с вами теорему доказывали?
[00:15.000 --> 00:26.000]  Да, мы начали доказывать с вами теорему, что для любого
[00:26.000 --> 00:35.000]  недетерминированного автомата, существует недетерминированный автомат, в котором есть ровно один переход.
[00:35.000 --> 00:40.000]  И давайте вспомним, какие у нас были действующие лица.
[00:40.000 --> 00:43.000]  И что мы с вами доказывали.
[00:43.000 --> 00:47.000]  В общем, давайте я выпишу.
[00:47.000 --> 00:51.000]  Да, сегодня мы, видимо, будем писать слева направо или справа налево?
[00:51.000 --> 00:54.000]  Давайте слева направо.
[00:54.000 --> 01:02.000]  Итак, значит, мы с вами положили дельта штрих равно...
[01:02.000 --> 01:04.000]  Что у нас получается?
[01:04.000 --> 01:12.000]  Это напоминаю, у нас было стягивание переходов.
[01:12.000 --> 01:14.000]  Дельта Q.
[01:14.000 --> 01:16.000]  Кто помнит, что у нас?
[01:16.000 --> 01:22.000]  Кажется, дельта Q1 эпсилон.
[01:22.000 --> 01:30.000]  И был переход из Q3 по букве А в Q2.
[01:30.000 --> 01:38.000]  То есть, у нас были переходы по эпсилонам, мы их протянули, добавили букву, переход по букве, пришли в Q2.
[01:38.000 --> 01:41.000]  Дальше у нас F штрих.
[01:41.000 --> 01:43.000]  Это были ребята следующие.
[01:43.000 --> 01:53.000]  Это состояния такие, что дельта от Q...
[01:53.000 --> 01:55.000]  Сейчас, секунду.
[01:55.000 --> 02:02.000]  Это теку штриха такие, что...
[02:02.000 --> 02:06.000]  Эпсилон принадлежали F.
[02:06.000 --> 02:09.000]  А что еще?
[02:09.000 --> 02:14.000]  Q0 вроде не поменялось у нас с вами.
[02:14.000 --> 02:16.000]  Ой, не принадлежит F.
[02:16.000 --> 02:20.000]  Sorry, туплю.
[02:20.000 --> 02:21.000]  Не пересекались.
[02:21.000 --> 02:26.000]  Потому что, смотрите, дельта Q3 эпсилон, это у нас было множество.
[02:26.000 --> 02:34.000]  Напоминаю, это множество всех переходов, множество всех вершин достижимых из текущего состояния по эпсилонам.
[02:34.000 --> 02:45.000]  И наша цель была доказать, что LATM, язык, задаваемый предыдущим автоматом, совпадает с языком, предыдущим, задаваемым новым автоматом.
[02:45.000 --> 02:49.000]  Давайте вспоминать, какую сторону мы с вами доказали.
[02:49.000 --> 02:55.000]  LATM вложено LATM штрих или LM штрих вложено в LATM?
[02:55.000 --> 02:58.000]  LATM вложено LATM штрих, да?
[02:58.000 --> 02:59.000]  Хорошо.
[02:59.000 --> 03:05.000]  Ну, значит, теперь наша цель доказать это все в обратную сторону.
[03:05.000 --> 03:08.000]  Отлично. Давайте докажем.
[03:08.000 --> 03:13.000]  Пусть у нас слово лежит в языке, задаваемым M штрих.
[03:13.000 --> 03:16.000]  Что это значит по факту?
[03:16.000 --> 03:25.000]  Это означает, что существует такое Q штрих, которое доходит к завершающим состоянием F штрих.
[03:25.000 --> 03:38.000]  Такое, что из конфигурации Q0 по слову W мы попадаем при помощи штопора в Q штрих эпсилон.
[03:38.000 --> 03:42.000]  Да, какое-то количество шагов.
[03:42.000 --> 03:47.000]  Давайте думать следующее, что у нас получается.
[03:47.000 --> 03:50.000]  Давайте рассмотрим вот это свойство.
[03:50.000 --> 03:52.000]  Что мы знаем для Q штрих?
[03:52.000 --> 03:59.000]  Мы знаем, что дельта от Q штрих эпсилон, пересеченная с F, не пустое множество.
[03:59.000 --> 04:01.000]  Давайте напишем это.
[04:08.000 --> 04:11.000]  А что такое у нас дельта Q штрих эпсилон?
[04:11.000 --> 04:28.000]  Множество вершин таких, что из Q штрих эпсилон мы можем в автомате M дойти до Q два штриха эпсилон.
[04:29.000 --> 04:41.000]  А если эта история пересекается с множеством завершающих состояния по непустому множеству, это что значит?
[04:41.000 --> 05:04.000]  Из этих двух фактов следует, что существует такое Q два штрих, находящиеся в множестве завершающих состояния нашего автомата, что Q штрих эпсилон
[05:04.000 --> 05:12.000]  Q эпсилон выводится уже не в автомате M штрих, а в автомате N.
[05:12.000 --> 05:16.000]  То есть мы построили с вами путь до конца.
[05:20.000 --> 05:24.000]  А теперь давайте вспоминать, что мы знаем про автомат M штрих.
[05:24.000 --> 05:29.000]  Какие переходы в нем имеют вид? Все переходы.
[05:30.000 --> 05:34.000]  Однобуквенные.
[05:34.000 --> 05:36.000]  Смотрите.
[05:36.000 --> 05:47.000]  Тогда мы можем сказать, что наше слово W можем представить в виде слова W1Wk, где WIT принадлежит множеству сигма.
[05:47.000 --> 05:51.000]  И тогда что мы с вами можем написать?
[05:51.000 --> 05:59.000]  Мы можем раскрыть этот переход на K отдельных переходов, где каждый из этих K отдельных переходов по отдельной букве.
[05:59.000 --> 06:02.000]  Потому что у нас все переходы однобуквенные.
[06:02.000 --> 06:13.000]  То мы можем сказать, что существует Q1Qk.
[06:13.000 --> 06:17.000]  Извините, об этом сете, о котором вы писали, из двух пунктов.
[06:17.000 --> 06:20.000]  Оно разнесется только из второго.
[06:20.000 --> 06:22.000]  Существует Q два штриха.
[06:22.000 --> 06:25.000]  А, ну да, конечно, оно существует только из этого пункта.
[06:25.000 --> 06:27.000]  Да, согласен.
[06:29.000 --> 06:31.000]  Вот так.
[06:32.000 --> 06:35.000]  Смотрите, теперь выписываем цепочку.
[06:35.000 --> 06:38.000]  Которая у нас получается.
[06:43.000 --> 06:52.000]  За один переход в автомате m штрих мы доходим до состояния Q1Wk.
[06:56.000 --> 06:59.000]  А здесь что мы получаем?
[06:59.000 --> 07:01.000]  Кукаты.
[07:03.000 --> 07:05.000]  Кукаты.
[07:05.000 --> 07:08.000]  Чему получается у нас равно?
[07:08.000 --> 07:10.000]  Кто понимает по картинке?
[07:14.000 --> 07:15.000]  Кштрих.
[07:15.000 --> 07:17.000]  Кштрих, да.
[07:25.000 --> 07:28.000]  Теперь давайте посмотрим определенный переход.
[07:28.000 --> 07:32.000]  Ну, допустим, все эти переходы лежат в m штрих.
[07:32.000 --> 07:34.000]  Причем переходы были за один раз.
[07:34.000 --> 07:38.000]  Поэтому я сейчас буду писать снизу.
[07:38.000 --> 07:41.000]  И мы вот такие цепочки нарисуем.
[07:44.000 --> 07:46.000]  Однобуквенные.
[07:49.000 --> 07:51.000]  Все ковидом заболели?
[07:51.000 --> 07:53.000]  Дружненько.
[07:53.000 --> 07:56.000]  Ну ладно, хорошо.
[07:57.000 --> 07:59.000]  Так.
[08:01.000 --> 08:04.000]  Ну давайте распишем первый переход.
[08:04.000 --> 08:13.000]  Из этого следует, что на самом деле Q0W1Q2 принадлежит дельта штрих.
[08:13.000 --> 08:14.000]  Да?
[08:14.000 --> 08:16.000]  А это что значит?
[08:16.000 --> 08:19.000]  Это существует такое.
[08:19.000 --> 08:24.000]  Давайте обозначим его Q1.
[08:24.000 --> 08:28.000]  Существует такое Q1 штрих.
[08:28.000 --> 08:29.000]  Что?
[08:29.000 --> 08:36.000]  Дельта от Q0 апсилу принадлежит Q.
[08:36.000 --> 08:40.000]  Наоборот, Q1 принадлежит этому множеству.
[08:40.000 --> 08:42.000]  Да, и...
[08:42.000 --> 08:44.000]  Ой, Q1 штрих.
[08:44.000 --> 08:46.000]  И дельта...
[08:46.000 --> 08:49.000]  Сейчас, секунду.
[08:49.000 --> 08:51.000]  Получается Q1 штрих.
[08:51.000 --> 08:54.000]  W1.
[08:54.000 --> 08:58.000]  Переходят в Q1.
[09:03.000 --> 09:07.000]  А что из этих двух фактов у нас следует?
[09:07.000 --> 09:11.000]  Давайте это в терминах дельта напишем.
[09:11.000 --> 09:13.000]  Смотрите.
[09:13.000 --> 09:15.000]  Это как мы распишем?
[09:15.000 --> 09:18.000]  Давайте напишем следующее.
[09:18.000 --> 09:22.000]  Вот у нас Q0.
[09:22.000 --> 09:25.000]  WQ.
[09:25.000 --> 09:30.000]  Если мы дошли с вами до Q1 штрих, не потеряв ничего,
[09:30.000 --> 09:32.000]  то это что у нас получается?
[09:32.000 --> 09:36.000]  Это у нас получается Q1 штрих.
[09:36.000 --> 09:40.000]  W1 WQ.
[09:40.000 --> 09:44.000]  И это путь в автомате M у нас.
[09:44.000 --> 09:49.000]  Потом в автомате M за один шаг. Мы куда идем?
[09:49.000 --> 09:52.000]  Исходя из этой.
[09:52.000 --> 09:54.000]  Ага.
[09:54.000 --> 09:57.000]  Q1.
[10:01.000 --> 10:03.000]  Так.
[10:03.000 --> 10:07.000]  А это что у нас такое?
[10:07.000 --> 10:10.000]  По факту.
[10:10.000 --> 10:11.000]  Индукция.
[10:11.000 --> 10:17.000]  Но не индукция, но это ровно то же самое, что находится у нас здесь.
[10:17.000 --> 10:21.000]  То есть посмотрите, наш путь в автомате M штрих
[10:21.000 --> 10:28.000]  за один переход заменился на цепочку переходов в автомате M.
[10:28.000 --> 10:30.000]  Да?
[10:30.000 --> 10:36.000]  Потом, аналогично, повторяя все процедуры, мы можем сделать цепочку здесь.
[10:36.000 --> 10:39.000]  Цепочку здесь, доходим до сюда, до Q штрих.
[10:39.000 --> 10:43.000]  И как осталось нам до конца дойти?
[10:46.000 --> 10:49.000]  Где место на доске?
[10:49.000 --> 10:52.000]  У нас есть переход Q3.
[11:00.000 --> 11:03.000]  Давайте я его обведу.
[11:03.000 --> 11:07.000]  Вот, из вот этого перехода.
[11:07.000 --> 11:12.000]  Получается, что у нас существует завершающее состояние Q2 штрих,
[11:12.000 --> 11:19.000]  в котором из Q0 по автомате M мы можем дойти, имея все слово целиком, на входе.
[11:19.000 --> 11:24.000]  Мы доходим до завершающего состояния Q2 штрих, на входе остается епсел.
[11:24.000 --> 11:27.000]  Из этого мы можем сделать вывод.
[11:38.000 --> 11:43.000]  Собственно, это и завершает наше доказательство.
[11:48.000 --> 11:52.000]  То есть в прошлый раз, когда мы пытались собрать это все в цепочку,
[11:52.000 --> 11:56.000]  это было сложнее, чем эту цепочку развернуть.
[11:56.000 --> 11:59.000]  Потому что у нас определения были такие.
[11:59.000 --> 12:02.000]  Так, понятно доказательство этой теоремы?
[12:02.000 --> 12:06.000]  А что вообще означает за M штрих 1? Что значит еще один?
[12:06.000 --> 12:08.000]  Где?
[12:08.000 --> 12:11.000]  Переход за один шаг.
[12:11.000 --> 12:14.000]  Переход за один шаг в автомате.
[12:18.000 --> 12:21.000]  Вопросы, замечания, пожелания?
[12:24.000 --> 12:27.000]  Вообще понятно, что произошло?
[12:27.000 --> 12:30.000]  А может еще раз проговорить?
[12:30.000 --> 12:33.000]  В общих чертах, что мы делаем?
[12:33.000 --> 12:40.000]  Во-первых, нам надо дойти как-то до завершающего состояния в старом автомате, в F.
[12:40.000 --> 12:42.000]  Ну как мы это делаем?
[12:42.000 --> 12:46.000]  Мы понимаем, что мы дошли до завершающего состояния в новом автомате.
[12:46.000 --> 12:48.000]  А как новый автомат построиться?
[12:48.000 --> 12:57.000]  Это не что иное, что нам по епселонам позволяет дойти до завершающего состояния в предыдущем автомате.
[12:57.000 --> 12:59.000]  Строим дорожку.
[12:59.000 --> 13:01.000]  Эта дорожка такая.
[13:01.000 --> 13:05.000]  А дальше мы понимаем, что у нас все переходы однобуквенные в автомате,
[13:05.000 --> 13:09.000]  поэтому мы можем разобрать ровно каждый переход, в котором мы съедаем по одной букве.
[13:09.000 --> 13:16.000]  И каждый переход по одной букве мы просто раскидываем на цепочку из вот таких действий,
[13:16.000 --> 13:21.000]  которые по сути в обход нам дают цепочку перехода в старом автомате.
[13:22.000 --> 13:26.000]  Все, замкнули истории, получили весь путь.
[13:30.000 --> 13:32.000]  Ого!
[13:32.000 --> 13:35.000]  Или все спят уже на второй неделе?
[13:37.000 --> 13:39.000]  Ого, хорошо.
[13:39.000 --> 13:42.000]  Так, ну тут есть краткое доказательство этого всего факта.
[13:42.000 --> 13:43.000]  У нас неинтересно.
[13:43.000 --> 13:47.000]  На самом деле, смотрите, что мы теперь можем сделать.
[13:47.000 --> 13:49.000]  Я скипну.
[13:49.000 --> 13:51.000]  Давайте поймем, как...
[13:51.000 --> 13:53.000]  Ну, все-таки у нас курс немножко практический.
[13:53.000 --> 13:55.000]  Давайте поймем, как мы будем хранить автоматы.
[13:57.000 --> 14:01.000]  Ну, что вообще собой представляет автомат по факту?
[14:02.000 --> 14:03.000]  Граф.
[14:03.000 --> 14:07.000]  И он даже больше похож на взвешенный граф.
[14:07.000 --> 14:10.000]  Да, только у нас переходы это будут...
[14:10.000 --> 14:15.000]  То есть вместо весов этого графа у нас будут переходы по словам.
[14:15.000 --> 14:16.000]  Вот.
[14:16.000 --> 14:19.000]  Мы можем хранить nk списком переходов.
[14:19.000 --> 14:22.000]  И мы можем даже сделать следующую вещь,
[14:22.000 --> 14:28.000]  что nk с эпсилоном переходами хранить вот в таком, я не знаю, векторе векторов.
[14:29.000 --> 14:32.000]  Точнее, не векторе векторов, а векторе чего?
[14:33.000 --> 14:37.000]  Ну, если здесь символ, то можно векторе векторов.
[14:37.000 --> 14:41.000]  Просто занумеровав все переходы по определенной букве.
[14:41.000 --> 14:46.000]  Размерность алфавита у нас конечная, поэтому каждую букву мы можем занумеровать.
[14:48.000 --> 14:49.000]  Да?
[14:50.000 --> 14:51.000]  Вот.
[14:51.000 --> 14:55.000]  И сразу скажу, что здесь будут храниться переходы...
[14:55.000 --> 14:58.000]  То есть, говорим, работаем сразу с автоматами,
[14:58.000 --> 15:01.000]  у которых длина переходов не более чем один.
[15:01.000 --> 15:03.000]  То есть не более чем однобукленные переходы.
[15:04.000 --> 15:05.000]  Вот.
[15:05.000 --> 15:06.000]  Однобукленными переходами...
[15:06.000 --> 15:10.000]  Ну, просто у нас эпсилон пропадает, и получается такая интересная картинка.
[15:12.000 --> 15:13.000]  Вот.
[15:14.000 --> 15:17.000]  Давайте поймем, как удалять эпсилон-переходы на практике.
[15:21.000 --> 15:24.000]  Проводить так же, только алгоритмически оптимально.
[15:24.000 --> 15:28.000]  Да, алгоритмически оптимально. Как алгоритмически оптимально?
[15:28.000 --> 15:30.000]  Чтобы для каждой вершины найти...
[15:30.000 --> 15:32.000]  А, ну, кстати, что это вообще будет значить?
[15:32.000 --> 15:35.000]  У нас может быть линейный, при что я различный автомат,
[15:35.000 --> 15:38.000]  у нас может быть линейный, при что я различный автомат,
[15:38.000 --> 15:40.000]  у нас может быть линейный, при что я различный автомат,
[15:40.000 --> 15:42.000]  у нас может быть линейный, при что я различный автомат.
[15:42.000 --> 15:45.000]  Ну да, он скорее всего может так превратиться.
[15:45.000 --> 15:48.000]  На самом деле, здесь алгоритм такой.
[15:48.000 --> 15:52.000]  Мы будем строить с вами транзитивное замыкание графа по эпсилон-переходам.
[15:53.000 --> 15:54.000]  Значит, что это такое?
[15:54.000 --> 15:58.000]  Давайте для каждого состояния будем хранить следующий переход.
[15:59.000 --> 16:00.000]  Следующее множество.
[16:00.000 --> 16:03.000]  ΔК от Q эпсилон это то,
[16:03.000 --> 16:07.000]  до куда мы можем дойти по эпсилон-переходам не более чем заказ шагов.
[16:09.000 --> 16:10.000]  Ага, вопрос.
[16:11.000 --> 16:12.000]  Контрольный.
[16:14.000 --> 16:17.000]  Дельта ноль от Q эпсилон. Чему равняется?
[16:20.000 --> 16:21.000]  Q.
[16:27.000 --> 16:30.000]  А как посчитать ΔК плюс один Q эпсилон?
[16:30.000 --> 16:31.000]  Хорошо.
[16:42.000 --> 16:44.000]  Ну это объединение по...
[16:44.000 --> 16:48.000]  Ну, как мы можем дойти до любого состояния за Q плюс один шаг?
[16:48.000 --> 16:52.000]  Мы можем либо посмотреть, за что мы можем дойти за Q шагов,
[16:53.000 --> 16:56.000]  и потом посмотреть, что мы будем делать за один переход.
[16:56.000 --> 17:00.000]  Либо мы можем написать следующее.
[17:03.000 --> 17:05.000]  Сейчас, дайте-ка подумать, как лучше записать.
[17:13.000 --> 17:14.000]  Q штрих.
[17:19.000 --> 17:22.000]  Получается Дельта Ката.
[17:24.000 --> 17:25.000]  Вот так вот.
[17:26.000 --> 17:27.000]  Ага.
[17:32.000 --> 17:33.000]  Вопрос.
[17:33.000 --> 17:35.000]  На знание языков все плюс-плюс.
[17:35.000 --> 17:39.000]  Какая структура данных отлично подходит для того, чтобы решать эту задачу?
[17:39.000 --> 17:40.000]  Конечно же.
[17:43.000 --> 17:47.000]  Ну, потому что у нас по факту для каждого состояния есть битовая маска.
[17:49.000 --> 17:52.000]  Ну, а по факту это свойство объединения битовых масок.
[17:53.000 --> 18:01.000]  Ну, наверное, ICM-щики поймут, если вы умеете строить транзитивное замыкание за вот такую величину.
[18:01.000 --> 18:03.000]  Там, по-моему, такое, да?
[18:03.000 --> 18:04.000]  Я не помню.
[18:05.000 --> 18:07.000]  ICM-щики что-нибудь пишут подобное?
[18:09.000 --> 18:10.000]  Или нет уже?
[18:11.000 --> 18:12.000]  Вот, у нас были...
[18:12.000 --> 18:13.000]  А?
[18:14.000 --> 18:16.000]  А, это количество вершин графии...
[18:16.000 --> 18:19.000]  А, ну, это олимпионники, которые там, типа, быстро задачки пишут.
[18:23.000 --> 18:25.000]  Давайте подумаем, до какого.
[18:32.000 --> 18:33.000]  А?
[18:34.000 --> 18:36.000]  Ну, может быть.
[18:38.000 --> 18:40.000]  Ну, короче, порядка кубов все равно.
[18:40.000 --> 18:43.000]  Я точно симптотику не помню в этом.
[18:43.000 --> 18:46.000]  Но главное, что там константа 32 в знаменателе.
[18:47.000 --> 18:50.000]  Да, она позволяет задачки запихнуть всякие разные.
[18:52.000 --> 18:53.000]  Вот.
[18:53.000 --> 18:58.000]  Давайте подумаем, какой максимально к нам надо?
[19:01.000 --> 19:02.000]  Ну, модуль Q.
[19:02.000 --> 19:04.000]  Я думаю, точно хватит.
[19:14.000 --> 19:19.000]  Ну, потому что там, по принципу дирекле, мы дойдем все равно в какое-то состояние дважды.
[19:20.000 --> 19:22.000]  Вот, и эту цепочку можно будет замкнуть.
[19:26.000 --> 19:29.000]  Да, можно, да, отслеживать до сих пор, пока меняется состояние.
[19:29.000 --> 19:30.000]  Но оно будет в мульку.
[19:30.000 --> 19:34.000]  Смотрите, сложность каждого перехода будет O от модуль дельта действий.
[19:35.000 --> 19:39.000]  То есть, можно эффективно реализовать эту штуку за O от модуль дельта действий.
[19:40.000 --> 19:41.000]  От количества переходов.
[19:44.000 --> 19:47.000]  Вот, потому что, видите, объединение этой штуки.
[19:49.000 --> 19:51.000]  Вот, по дельту от Q эпсимум.
[19:51.000 --> 19:53.000]  То есть, нам надо просмотреть все переходы.
[19:56.000 --> 19:58.000]  Всего итерации O от модуль Q.
[19:59.000 --> 20:03.000]  В итоге, симптотика получается O от модуль Q на модуль дельта.
[20:03.000 --> 20:06.000]  Тут еще подсказали, что, возможно, еще Q в кубе где-то возникнет.
[20:08.000 --> 20:12.000]  В общем, если мы предполагаем, что количество переходов в состоянии максимально,
[20:12.000 --> 20:15.000]  ну, это порядка квадратов приблизительно,
[20:15.000 --> 20:19.000]  вот, количество переходов приблизительно квадрата, количество стоян,
[20:19.000 --> 20:20.000]  то мы получаем куб.
[20:22.000 --> 20:27.000]  Да, привыкайте, здесь все причесания, приведения к нормальному виду,
[20:27.000 --> 20:28.000]  работают за куб.
[20:29.000 --> 20:30.000]  Да, тут быстрее никак.
[20:31.000 --> 20:32.000]  Обычно.
[20:33.000 --> 20:36.000]  Так, понятно, как можно построить дельта от Q эпсимум.
[20:42.000 --> 20:44.000]  Ну, по факту мы строим так дельта от Q эпсимум.
[20:48.000 --> 20:50.000]  Так, давайте к следующему алгоритму перейдем.
[20:50.000 --> 20:51.000]  А теперь вопрос.
[20:52.000 --> 20:55.000]  Как проверять принадлежность слова автоматному языку?
[20:59.000 --> 21:00.000]  Ну, смотрите.
[21:00.000 --> 21:04.000]  Во-первых, мы сделали все переходы однобуквенными в автомате.
[21:05.000 --> 21:06.000]  Да, до этого.
[21:06.000 --> 21:12.000]  И теперь мы можем с вами эффективно проходиться по множеству состояний.
[21:12.000 --> 21:13.000]  Смотрите.
[21:14.000 --> 21:15.000]  Алгоритм.
[21:15.000 --> 21:16.000]  Первое.
[21:16.000 --> 21:17.000]  Строим НК с однобуквенными переходами.
[21:17.000 --> 21:18.000]  Это раз.
[21:19.000 --> 21:20.000]  Два.
[21:20.000 --> 21:24.000]  Для каждого слова на каждой итерации W равен W1 на НК.
[21:24.000 --> 21:25.000]  Что мы делаем?
[21:26.000 --> 21:31.000]  Мы по факту можем хранить множество дельта от Q0, W1 и WMT.
[21:32.000 --> 21:34.000]  Да, то есть префиксы.
[21:34.000 --> 21:36.000]  До куда мы дошли до префикса?
[21:38.000 --> 21:40.000]  Давайте картинку нарисую.
[21:47.000 --> 21:49.000]  Так, это дельта получается.
[21:54.000 --> 21:56.000]  Как посчитать дельта от следующего?
[22:04.000 --> 22:07.000]  Что сделать, если мы хотим добавить еще одну букву?
[22:11.000 --> 22:20.000]  Ну да, то есть мы идем до N, а потом из каждой из них пытаться сделать переход по WMT плюс 1.
[22:21.000 --> 22:23.000]  То есть опять же это будет двойная дельта.
[22:25.000 --> 22:28.000]  Опять же, похожее объединение у нас с вами получится.
[22:28.000 --> 22:30.000]  И что, какая симптотика будет в этой истории?
[22:36.000 --> 22:37.000]  Ну не только.
[22:41.000 --> 22:45.000]  Да, и в конце проверяем, что кукаты не пересекают со множеством завершающих состояний.
[22:45.000 --> 22:47.000]  То есть дойти дошли мы или до конца, или да нет.
[22:48.000 --> 22:49.000]  Окей.
[22:49.000 --> 22:51.000]  Давайте подумаем тогда.
[22:52.000 --> 22:54.000]  Временно каждый запрос будет такой.
[22:55.000 --> 22:59.000]  Длина слова умножить на количество переходов плюс количество состояний.
[23:02.000 --> 23:10.000]  Почему? Потому что на самом деле нам нужно в каждом переходе сделать объединение.
[23:10.000 --> 23:11.000]  Ну давайте напишем сейчас.
[23:12.000 --> 23:18.000]  То есть что такое дельта от Q0 в1 вM плюс 1?
[23:20.000 --> 23:27.000]  Это по факту дельта от объединения, во-первых, в Паку.
[23:27.000 --> 23:37.000]  В Паку, принадлежащем дельта от Q0 w1 wMt, дельта Q вM плюс 1.
[23:43.000 --> 23:44.000]  Смотрите.
[23:45.000 --> 23:47.000]  Дельта Q в М плюс 1.
[23:48.000 --> 23:50.000]  Дельта Q в М плюс 1.
[23:51.000 --> 23:53.000]  Дельта Q в М плюс 1.
[23:54.000 --> 23:55.000]  Угу.
[23:56.000 --> 23:58.000]  Смотрите, в чем особенность состоит.
[23:59.000 --> 24:04.000]  Особенность состоит в том, мощность вот этого множества чего может достигать у нас.
[24:05.000 --> 24:08.000]  Состояния, в которые мы перешли по букве.
[24:13.000 --> 24:15.000]  Этих состояний у большой от модуль Q.
[24:19.000 --> 24:21.000]  Переходов у от модуль дельта.
[24:23.000 --> 24:25.000]  Слушайте, а может быть тут даже у большего симптома?
[24:26.000 --> 24:27.000]  Давайте подумаем.
[24:28.000 --> 24:29.000]  Может быть что?
[24:30.000 --> 24:32.000]  Я говорю, может тут произведение модуль дельта на модуль Q?
[24:33.000 --> 24:34.000]  Нет.
[24:35.000 --> 24:37.000]  Да, я тоже думаю, что это как-то фигово.
[24:38.000 --> 24:39.000]  Это иллюзия.
[24:40.000 --> 24:41.000]  А на самом деле сумма дельта.
[24:42.000 --> 24:44.000]  Да, а, тут амортизировано.
[24:45.000 --> 24:47.000]  Мы же суммарно по всем переходам пройдем.
[24:48.000 --> 24:49.000]  И на каждом переходе мы можем обновиться.
[24:50.000 --> 24:51.000]  То есть сумма по дельту.
[24:52.000 --> 24:55.000]  Максимально это будет от модуль дельта плюс модуль Q.
[24:56.000 --> 24:57.000]  Да, согласен.
[24:58.000 --> 25:00.000]  То есть, во-первых, нам надо перебрать все так или иначе вершины.
[25:01.000 --> 25:02.000]  Все состояния.
[25:03.000 --> 25:06.000]  А во-вторых, пройти по всем переходам возможным в нашем графе.
[25:07.000 --> 25:08.000]  Возможно.
[25:09.000 --> 25:10.000]  То есть, это от модуль дельта по ноль Q.
[25:11.000 --> 25:12.000]  Ну и что думаете?
[25:13.000 --> 25:14.000]  Это быстрый алгоритм?
[25:16.000 --> 25:17.000]  Ну вот теперь представьте.
[25:18.000 --> 25:19.000]  Вы пишете программу.
[25:19.000 --> 25:21.000]  Там мы пишем с вами программу, какой-нибудь компилятор, да?
[25:22.000 --> 25:23.000]  И мы такие.
[25:24.000 --> 25:27.000]  Количество состояния в нашем автомате, я не знаю, сотня тысяч?
[25:28.000 --> 25:30.000]  Ну, не сотни тысяч, там сотни, да?
[25:31.000 --> 25:33.000]  Количество переходов там, не знаю, десятки тысяч.
[25:34.000 --> 25:38.000]  А длина нашей программы, ну какая?
[25:39.000 --> 25:41.000]  Ну, я не знаю, какая.
[25:42.000 --> 25:45.000]  Ну, 100 килобайт.
[25:46.000 --> 25:47.000]  Ну, 100 килобайт, да.
[25:47.000 --> 25:48.000]  Хорошо, в библиотеку собираем.
[25:49.000 --> 25:50.000]  100 килобайт.
[25:51.000 --> 25:52.000]  Значит, получаем 10 в пятый, на 10 в четвертый.
[25:53.000 --> 25:56.000]  Ну, и еще на какие-нибудь затраты, типа константы порядка сотни.
[25:57.000 --> 25:58.000]  Вопрос.
[25:59.000 --> 26:00.000]  Сколько у нас будет работать компиляция?
[26:01.000 --> 26:04.000]  Ну, это зависит от того, как быстро изобретут более быстрый процесс.
[26:05.000 --> 26:06.000]  Ну да.
[26:07.000 --> 26:08.000]  Ну, в общем, это, как говорится, до фига.
[26:10.000 --> 26:11.000]  Вот.
[26:12.000 --> 26:13.000]  А вот тут вопрос.
[26:14.000 --> 26:15.000]  Как вот одну?
[26:15.000 --> 26:19.000]  А тематически вот эта вот плохая стратегия, как сравнивается с рекурсивным спуском?
[26:20.000 --> 26:22.000]  Рекурсивный спуск – это немножко вообще про другое.
[26:23.000 --> 26:26.000]  Потому что мы про рекурсивный спуск будем говорить в терминах грамматик.
[26:27.000 --> 26:28.000]  Все-таки мы здесь автоматы.
[26:29.000 --> 26:30.000]  Про автоматы говорим.
[26:31.000 --> 26:34.000]  И здесь наша цель вообще состоит в том, чтобы, грубо говоря, у нас есть какой-то текст.
[26:35.000 --> 26:36.000]  Да, длинный-длинный текст.
[26:37.000 --> 26:39.000]  И его разобрать на наборы символов.
[26:40.000 --> 26:42.000]  Ну, наборы токенов, то есть вычленито.
[26:42.000 --> 26:43.000]  Вот.
[26:44.000 --> 26:45.000]  Как это делается, кратце говоря.
[26:46.000 --> 26:47.000]  Мы идем по входному тексту.
[26:48.000 --> 26:49.000]  Закидываем наш входной текст в автомат.
[26:50.000 --> 26:51.000]  Как только мы дошли до завершающего состояния.
[26:52.000 --> 26:53.000]  Отсекаем токен.
[26:54.000 --> 26:56.000]  Ну, в первом приближении это работает так.
[26:57.000 --> 26:58.000]  Это не полный алгоритм.
[26:59.000 --> 27:00.000]  Потому что там надо пройтись вперед, пройтись назад.
[27:01.000 --> 27:02.000]  Там отсечь токен.
[27:03.000 --> 27:04.000]  Вот.
[27:05.000 --> 27:06.000]  Это совсем не то.
[27:07.000 --> 27:09.000]  В общем, и потом мы наш текст нарезаем на токены.
[27:09.000 --> 27:13.000]  То есть это там либо переменные, либо там, не знаю, точка запятой, скобочки и так далее.
[27:14.000 --> 27:15.000]  Парсим вот эти все типы.
[27:16.000 --> 27:18.000]  В общем, асимптотика достаточно большая.
[27:19.000 --> 27:22.000]  Как вы думаете, за сколько хотелось бы это делать?
[27:23.000 --> 27:24.000]  За длинный.
[27:25.000 --> 27:26.000]  Да, за длинный слово хочется это делать.
[27:27.000 --> 27:33.000]  Не домножая никакие асимптотики, связанные с автоматом.
[27:34.000 --> 27:36.000]  Да, но тут доп. памяти еще указано.
[27:37.000 --> 27:38.000]  В общем, мы поняли.
[27:39.000 --> 27:42.000]  Во-первых, почему возникает неоднозначность?
[27:43.000 --> 27:46.000]  Потому что на самом деле у нас неоднозначность поиска переходов по буквам.
[27:47.000 --> 27:52.000]  Почему? Потому что у нас мощность множества дельта не равна единице.
[27:53.000 --> 27:56.000]  То есть мы можем перейти по одной и той же букве в разные места.
[27:57.000 --> 27:59.000]  Плюс нам надо хранить эту неоднозначность.
[28:00.000 --> 28:02.000]  А как именно мы это можем сделать?
[28:02.000 --> 28:03.000]  Вектор надо хранить.
[28:04.000 --> 28:11.000]  А сколько в одном векторе у нас на один элемент хранится?
[28:12.000 --> 28:13.000]  Отводится место?
[28:14.000 --> 28:15.000]  В байтах.
[28:16.000 --> 28:17.000]  Вектор НТОФ, если.
[28:22.000 --> 28:25.000]  Я помню число, типа 12 байт в сумме на один элемент.
[28:26.000 --> 28:27.000]  Но я могу ошибаться.
[28:27.000 --> 28:28.000]  В смысле? Х3?
[28:31.000 --> 28:32.000]  Ну ладно, ладно.
[28:33.000 --> 28:34.000]  В общем, какой-то оверхед есть.
[28:35.000 --> 28:36.000]  В общем, это бред.
[28:37.000 --> 28:38.000]  Смотрите.
[28:39.000 --> 28:41.000]  Для этого мы вводим следующее определение.
[28:42.000 --> 28:43.000]  Вводим следующий термин.
[28:44.000 --> 28:45.000]  Он называется детерминированный конечный автомат.
[28:47.000 --> 28:51.000]  А детерминированный конечный автомат мы будем называть произвольным.
[28:51.000 --> 28:54.000]  Нет, не произвольное НК, а НК определенного вида.
[28:56.000 --> 29:00.000]  Давайте напишу.
[29:01.000 --> 29:02.000]  D, K, A, N.
[29:10.000 --> 29:17.000]  Такой, что для любого вектора у нас есть детерминированный конечный автомат.
[29:18.000 --> 29:24.000]  Такой, что для любого кун.
[29:30.000 --> 29:37.000]  Во-первых, меньше равно единице.
[29:38.000 --> 29:50.000]  Во-вторых, для любого перехода он является однобуквенным.
[29:51.000 --> 29:57.000]  То есть это автомат с однобуквенными переходами, в котором по любому состоянию, по любой букве, можем перейти не более чем в одно место.
[30:01.000 --> 30:03.000]  Давайте подумаем, как улучшится алгоритм.
[30:04.000 --> 30:05.000]  Алгоритм наш.
[30:08.000 --> 30:14.000]  Как тогда наш алгоритм будет выглядеть при належности слова по детерминированному конечному автомату?
[30:15.000 --> 30:19.000]  Смотрим, если есть переход по нашей букве, так идем по нему.
[30:20.000 --> 30:25.000]  Ну да, если есть переход по букве, то идем. Если нет перехода по букве, ну извините, проиграли.
[30:26.000 --> 30:27.000]  Смотрим, дошли мы до конца или нет.
[30:32.000 --> 30:33.000]  Отличный алгоритм.
[30:34.000 --> 30:36.000]  Но как вы думаете, есть ли здесь подвохи?
[30:37.000 --> 30:38.000]  Как построить сегодня?
[30:39.000 --> 30:42.000]  Первое, как построить детермины качественного автомата, во-вторых, какие затраты у нас будут.
[30:47.000 --> 30:53.000]  Дополнительная память, которая у нас будет, это логариф мод количества состояний.
[30:54.000 --> 30:57.000]  Но это зависит от того, в какой системе числения хранить. Я тут могу ошибаться.
[30:58.000 --> 31:04.000]  Тут либо количество состояний в новом автомате, либо количество состояний в старом автомате.
[31:04.000 --> 31:09.000]  Я спрашиваю, а что за фигня? На самом деле нам надо будет хранить индексы вершин в автомате.
[31:10.000 --> 31:15.000]  А время этого автомата, построение этого автомата, ну как вам?
[31:16.000 --> 31:17.000]  Отлично.
[31:22.000 --> 31:24.000]  Ну многовато, да.
[31:24.000 --> 31:34.000]  Давайте подумаем, почему это нам помогает? Почему мы забиваем на такую дополнительную сложность?
[31:47.000 --> 31:48.000]  Смотрите, прикол.
[31:49.000 --> 31:52.000]  Давайте вспоминать, что у нас в компиляторе происходит.
[31:54.000 --> 31:56.000]  Ну в первой стадии компиляция.
[31:57.000 --> 31:58.000]  При процессинге?
[31:58.000 --> 31:59.000]  При процессинге.
[32:00.000 --> 32:06.000]  Ну и вообще, когда мы строим какую-то структуру, сколько раз нам ее надо построить для компиляции?
[32:08.000 --> 32:09.000]  Один раз.
[32:10.000 --> 32:18.000]  Для любого языка программирования, которое мы с вами пишем, для любого парсера, для любого domain-specific language языка мы делаем один раз.
[32:20.000 --> 32:22.000]  То есть автомат строится один раз и навека.
[32:23.000 --> 32:27.000]  Ну до тех пор, пока вы не решите перекомпилировать свой язык программирования.
[32:28.000 --> 32:30.000]  Вот, поэтому на такую вещь можно забить.
[32:31.000 --> 32:37.000]  Я не помню, надо посмотреть, сколько в языках программирования количество состояний в детабилированном качественном автомате.
[32:37.000 --> 32:39.000]  Я не думаю, что слишком уж много.
[32:53.000 --> 33:02.000]  Ну да, конечно, там конечно не все так точно, ну типа не то как мы это математически смотрим, там на практике это все делается.
[33:03.000 --> 33:05.000]  Плюс это еще делается каким-нибудь BFS.
[33:06.000 --> 33:12.000]  То есть этот алгоритм на самом деле он BFS, в максимуме он 2 в степени ку, на самом деле он обычно занимает меньше сложности.
[33:14.000 --> 33:17.000]  Вот, это значит то, что мы с вами должны были пройти в прошлый раз.
[33:18.000 --> 33:23.000]  Теперь давайте я скачаю вторую презентацию.
[33:24.000 --> 33:28.000]  Или мы допустим сейчас можем сделать перерыв, прежде чем мы будем с вами строить конечную DKA.
[33:30.000 --> 33:37.000]  Давайте сделаем перерыв, потому что мы в следующей серии будем с вами говорить про то, как DKA построить.
[33:37.000 --> 33:47.000]  Значит, наша цель сейчас понять откуда степень двойки возникает.
[33:50.000 --> 33:55.000]  Здесь нам понадобится как раз наше множество дельта.
[33:56.000 --> 34:03.000]  И цель, которую мы преследуем, ну по крайней мере во второй половине нашего занятия, если мы может еще успеем.
[34:04.000 --> 34:10.000]  Нам надо доказать, что для любого недетерминированного конечного автомата существует аналогичный ему детерминированный конечный автомат.
[34:13.000 --> 34:23.000]  Для любого NKN, давайте я обозначу опять же ку сигма дельта ку ноль f,
[34:24.000 --> 34:31.000]  существует DKA м штрих такой, что l от m равняется l от m штрих.
[34:34.000 --> 34:43.000]  Итак, смотрите, нам необходимо будет вести следующее определение.
[34:50.000 --> 34:59.000]  Обозначение. Давайте обозначим дельта от s по слову w.
[35:00.000 --> 35:06.000]  s это множество, если что, под множество q с звездой, под множество q.
[35:07.000 --> 35:15.000]  Объединение. По всем q из s дельта от qv.
[35:15.000 --> 35:23.000]  Логичное определение. То есть мы пытаемся не из определенной вершины перейти по букве по слову,
[35:24.000 --> 35:31.000]  а из некоторого множества вершин перейти по букве.
[35:32.000 --> 35:40.000]  И тогда смотрите, какой автомат мы будем с вами строить. Мы с вами будем строить автомат на множестве всех подножеств.
[35:40.000 --> 35:48.000]  Два в степеннику. Альфавит, как вы думаете, поменяется, не поменяется?
[35:49.000 --> 35:56.000]  Конечно, не поменяется. Так, дельта штрих подумаем.
[35:57.000 --> 36:01.000]  Стартовое состояние, как вы думаете, какое будет?
[36:01.000 --> 36:06.000]  Ну, стартовая единичка, все остальные нули, да. Или множество с ку-ноль.
[36:07.000 --> 36:13.000]  И штрих. Давайте определять, что же такое дельта штрих будет.
[36:14.000 --> 36:20.000]  Вот это? Мы раньше пытались проявить дельту с ку-ноль.
[36:21.000 --> 36:26.000]  Вот это? Мы раньше пытались проявить дельту с ку-ноль.
[36:26.000 --> 36:32.000]  Вот это? Мы раньше пытались пройти от перехода по букве...
[36:33.000 --> 36:36.000]  Ой, от любого состояния по какому-то слову.
[36:37.000 --> 36:40.000]  Теперь нам надо будет от множества перейти по какому-то слову.
[36:41.000 --> 36:47.000]  Да, да, да... И сейчас будут картинки поясняющие, OK?
[36:48.000 --> 36:51.000]  У меня на презентации просто подготовили на картинки для дельта.
[36:51.000 --> 37:00.000]  Зачем это? Да, кстати, забыл сказать, что можно считать, что агрема там в основномутном переходе.
[37:07.000 --> 37:11.000]  Ну, потому что мы уже научились в любом раз выводить свой разыказ в основномутном переходе.
[37:12.000 --> 37:16.000]  Итак, давайте я пока собру.
[37:21.000 --> 37:26.000]  И давайте подумать, и надо будет переходить с вами из множества по букве А.
[37:27.000 --> 37:31.000]  Отъединение здесь по примерам.
[37:32.000 --> 37:41.000]  Ну да, конечно. Из множества С по букве А, мы на самом деле будем переходить в это место.
[37:44.000 --> 37:47.000]  А вы что, мне идею вообще даете?
[37:47.000 --> 37:49.000]  А? Идея?
[37:50.000 --> 37:57.000]  Идея такая, на самом деле, запустить ВФС в составном решении и просто собирать множество, которое мы переходим по каждому.
[37:58.000 --> 38:03.000]  Чтобы при качестве состояния ходить под множество решений, в которых мы могли бы находиться на этом шаре.
[38:04.000 --> 38:05.000]  Да.
[38:07.000 --> 38:09.000]  Ну, а это...
[38:10.000 --> 38:15.000]  Эшлиф, это будут такие С в состоянии...
[38:15.000 --> 38:29.000]  На самом деле, с какого-то тракса вы еще встретитесь на курсе математической лынги, ой, на курсе творческих сленг.
[38:30.000 --> 38:32.000]  Таким образом можно ввести язык МП.
[38:33.000 --> 38:41.000]  Потому что, я не знаю, я бы не сказал, что МП на самом деле заключается в букве М.
[38:42.000 --> 38:43.000]  Нет.
[38:44.000 --> 38:49.000]  Ладно, хорошо. Это, в общем, на букве Н собирается слово недetermинирование.
[38:50.000 --> 38:55.000]  В общем, которое можно, типа, по большему деревню ходить туда-обратно.
[38:56.000 --> 38:59.000]  Ну, там, какая-то недetermинированность переходов.
[39:00.000 --> 39:06.000]  Вот, а здесь мы пытаемся эту недetermинанность сложать в множество переходов, в которые мы можем пройти по каждому состоянию.
[39:07.000 --> 39:09.000]  Где какого-то множества состояний.
[39:09.000 --> 39:13.000]  И нам надо будет доказать, что L от N совпадает с L от N на 4.
[39:14.000 --> 39:16.000]  Ну, давайте сделаем небольшой пауз.
[39:17.000 --> 39:23.000]  Пауз в плане этого, а пауз в плане того, чтобы понять, что происходит с этой всей историей.
[39:25.000 --> 39:27.000]  Смотрите, пример.
[39:28.000 --> 39:31.000]  У нас с вами будут готовы замечательные автоматы.
[39:32.000 --> 39:34.000]  Он у нас с одномокровными переходами.
[39:35.000 --> 39:36.000]  Да?
[39:36.000 --> 39:37.000]  Да?
[39:38.000 --> 39:43.000]  Давайте посмотрим, как вы думаете, чему равняется будет проекта от Q1 по букве А.
[39:44.000 --> 39:45.000]  Q1-Q2.
[39:46.000 --> 39:47.000]  Q2, Q1-Q2.
[39:48.000 --> 39:49.000]  Q1-Q2.
[39:50.000 --> 39:52.000]  Дальше, как вы думаете, если это Q0-Q2A-B, куда мы переходим?
[39:53.000 --> 39:54.000]  Q3-Q4.
[39:55.000 --> 39:56.000]  Q3-Q4, да.
[39:57.000 --> 40:00.000]  Ну, вот это получается 0-A-B, Q3-Q4.
[40:01.000 --> 40:04.000]  А теперь смотрите, как мы будем строить этот доминированный, конечно, автомат.
[40:05.000 --> 40:08.000]  В общем, мы начинаем с вершины Q0.
[40:09.000 --> 40:11.000]  И идем по букве А сначала.
[40:12.000 --> 40:14.000]  Смотрим, какие вершины мы с вами можем перейти.
[40:17.000 --> 40:20.000]  Мы из вершины Q0 можем перейти A в Q1-Q2.
[40:21.000 --> 40:23.000]  Поэтому мы создаем вершину, которая называется Q1-Q2.
[40:24.000 --> 40:25.000]  Здесь Q1-Q2.
[40:26.000 --> 40:27.000]  Мы делаем переход на Q1.
[40:28.000 --> 40:31.000]  Потом смотрим, из вершины Q1-Q2 мы куда можем перейти?
[40:34.000 --> 40:35.000]  Внутри.
[40:36.000 --> 40:37.000]  А из вершины Q1-Q2?
[40:38.000 --> 40:39.000]  Кучки.
[40:40.000 --> 40:43.000]  Это значит, что мы говорим, что из состояния Q1-Q2 мы можем перейти в состояние Q3-Q4.
[40:45.000 --> 40:49.000]  При этом, если у нас сегодня одно состояние в текущем состоянии было завершающее,
[40:49.000 --> 40:57.000]  то есть идея такая, что мы смогли хоть одна вершина из этого логу спать оказалась завершающей.
[40:58.000 --> 41:05.000]  Это значит, что идеологически из каждого состояния мы можем пройти по слову и по базе одной из этих завершающих состояний.
[41:08.000 --> 41:09.000]  Ага?
[41:11.000 --> 41:14.000]  Это идея того, как вся история строится.
[41:15.000 --> 41:16.000]  А что такое F?
[41:16.000 --> 41:21.000]  Ну, F- это все такие подмножества, которые пересекаются с F?
[41:22.000 --> 41:26.000]  Да, это все такие подмножества, которые пересекаются с F в завершающем состоянии.
[41:27.000 --> 41:28.000]  Вот как?
[41:29.000 --> 41:31.000]  У нас же раньше F это было просто какое-то конкретное состояние.
[41:32.000 --> 41:33.000]  F нет.
[41:34.000 --> 41:35.000]  Это было какое-то множество состояний.
[41:36.000 --> 41:41.000]  Просто мы не делали один осознание, которое говорит, что мощность Q1-Q2 можно брать на единицы.
[41:42.000 --> 41:46.000]  Но если посмотреть автоматизацию на футболе, то не обязательно.
[41:47.000 --> 41:48.000]  Я помню.
[41:49.000 --> 41:51.000]  Кстати, вам надо по нашему футболу.
[42:00.000 --> 42:01.000]  На этом примере идея понятна?
[42:02.000 --> 42:03.000]  Что происходит?
[42:04.000 --> 42:05.000]  Да.
[42:06.000 --> 42:07.000]  Ага.
[42:07.000 --> 42:13.000]  В общем, смотрите.
[42:14.000 --> 42:16.000]  Мы с вами сейчас будем доказывать следующую рему.
[42:17.000 --> 42:20.000]  Именно такой смысл.
[42:21.000 --> 42:22.000]  Что?
[42:28.000 --> 42:30.000]  Это вот.
[42:31.000 --> 42:32.000]  Дельта 3.
[42:33.000 --> 42:35.000]  Состояние футбола.
[42:36.000 --> 42:37.000]  Вот.
[42:38.000 --> 42:39.000]  Словом выиграешь.
[42:40.000 --> 42:41.000]  Равняется.
[42:42.000 --> 42:43.000]  Дельта.
[42:44.000 --> 42:45.000]  Вот множество 0.
[42:46.000 --> 42:47.000]  Словом выиграешь.
[42:50.000 --> 42:52.000]  Давайте поймем, где такая конструкция.
[42:53.000 --> 42:54.000]  Тут сложно.
[42:55.000 --> 42:58.000]  Это дельта 3 как состояние автоматики.
[43:01.000 --> 43:03.000]  А это дельта от чего?
[43:03.000 --> 43:04.000]  От ножка состояния.
[43:05.000 --> 43:06.000]  От ножка состояния автоматики.
[43:07.000 --> 43:08.000]  Вот.
[43:09.000 --> 43:10.000]  И поздравляю.
[43:11.000 --> 43:12.000]  С вами второй раз.
[43:13.000 --> 43:14.000]  В этот раз у нас новая модель.
[43:15.000 --> 43:16.000]  В этот раз у нас нормальная.
[43:17.000 --> 43:19.000]  В общем, давайте доказывать конструкцию индукции.
[43:20.000 --> 43:21.000]  Словом выиграешь.
[43:25.000 --> 43:26.000]  Так.
[43:29.000 --> 43:30.000]  Дельта 2.
[43:30.000 --> 43:31.000]  Словом выиграешь.
[43:32.000 --> 43:33.000]  Словом выиграешь.
[43:36.000 --> 43:37.000]  Словом выиграешь.
[43:39.000 --> 43:40.000]  Угу.
[43:41.000 --> 43:43.000]  А давайте подумаем.
[43:44.000 --> 43:47.000]  Чему равняется дельта от 0 до B?
[43:49.000 --> 43:50.000]  Словом выиграешь.
[43:53.000 --> 43:54.000]  0.
[43:55.000 --> 43:56.000]  Ну, это обвинение.
[43:57.000 --> 43:58.000]  Выиграешь 0.
[43:58.000 --> 43:59.000]  Словом выиграешь 0.
[44:00.000 --> 44:02.000]  Дельта от 0 до B.
[44:04.000 --> 44:05.000]  Ой, от 0.
[44:06.000 --> 44:07.000]  То есть это у нас.
[44:08.000 --> 44:09.000]  Сейчас.
[44:10.000 --> 44:11.000]  Вот так.
[44:12.000 --> 44:13.000]  Но при этом 0 у нас может быть только 0.
[44:14.000 --> 44:15.000]  Поэтому это дельта от 0 до B.
[44:16.000 --> 44:17.000]  А дельта от 0 до B.
[44:18.000 --> 44:19.000]  Какого достоинства у нас вами?
[44:20.000 --> 44:21.000]  0.
[44:22.000 --> 44:23.000]  Да, это будет дальше 0.
[44:24.000 --> 44:25.000]  Так как у нас все переходы на исходном автомате были от 0 до B.
[44:28.000 --> 44:30.000]  А что же это какая-то дельта штриха?
[44:37.000 --> 44:38.000]  Дельта перехода.
[44:44.000 --> 44:45.000]  Куда мы можем перейти?
[44:46.000 --> 44:47.000]  Ну, только в множество 0.
[44:48.000 --> 44:49.000]  Потому что он одезерминированный.
[44:50.000 --> 44:51.000]  Да, в нем нет перехода.
[44:52.000 --> 44:53.000]  Поэтому это у нас получается.
[44:54.000 --> 44:55.000]  Дельта от чего?
[44:56.000 --> 44:57.000]  Просто здесь.
[44:58.000 --> 44:59.000]  Ну, потому что туда мы перейдем.
[45:00.000 --> 45:01.000]  Переход на автомате.
[45:02.000 --> 45:03.000]  Кроме как то еще.
[45:04.000 --> 45:05.000]  Кроме как то еще.
[45:06.000 --> 45:07.000]  Хорошо.
[45:08.000 --> 45:09.000]  Давай тогда переход.
[45:18.000 --> 45:19.000]  Тут можно пройти двумя спусками.
[45:28.000 --> 45:29.000]  Shirley's.
[45:29.000 --> 45:30.000]  Torれて.
[45:31.000 --> 45:32.000]  В tudpe, g.
[45:34.000 --> 45:35.000]  sashay.
[45:37.000 --> 45:38.000]  Провер параллельно в canceled period.
[45:39.000 --> 45:40.000]  loose.
[45:41.000 --> 45:42.000] ubers who.
[45:43.000 --> 45:44.000]  lazy.
[45:45.000 --> 45:46.000] IX, mm-hmm.
[45:47.000 --> 45:48.000] �락, mm-hmm, mm-hmm.
[45:49.000 --> 45:50.000]  So, все.
[45:51.000 --> 45:52.000]  В общем, 6 autistic.
[45:53.000 --> 45:54.000]  Сziękuję.
[45:55.000 --> 45:56.000]  С.
[45:56.000 --> 46:08.000]  Давайте положим, что у нас есть слово W, это какое-то слово W шрифт на А.
[46:12.000 --> 46:15.000]  Сейчас попробую.
[46:18.000 --> 46:21.000]  Да, наверное так лучше сделать.
[46:21.000 --> 46:23.000]  Сейчас посмотрим.
[46:23.000 --> 46:26.000]  А, да, давайте смотреть.
[46:26.000 --> 46:31.000]  Тогда давайте посмотрим, что же у нас такое.
[46:31.000 --> 46:36.000]  Это тоже в них, вот, мы их убрали.
[46:36.000 --> 46:54.000]  Куда может перелететь по слову W шрифта?
[46:54.000 --> 46:57.000]  В нашем автомате.
[46:57.000 --> 47:05.000]  Объединение по всем вершинам из дельта штрих от куной в штрих, дельта от куа.
[47:05.000 --> 47:10.000]  Да, на самом деле это получается у нас по кул.
[47:17.000 --> 47:20.000]  Так, секунду, что получается у нас?
[47:22.000 --> 47:25.000]  Дельта штрих, вот, внимание.
[47:28.000 --> 47:30.000]  Сейчас, секунду.
[47:30.000 --> 47:37.000]  А, дельта штрих, это если что у нас множество, да?
[47:37.000 --> 47:38.000]  Да.
[47:49.000 --> 47:53.000]  То есть, смотрите, я утверждаю, что это дельта штрих.
[47:53.000 --> 48:12.000]  Вот, получается чайку, вот дельта штрих от куной, рука.
[48:12.000 --> 48:15.000]  Ваш штрих?
[48:15.000 --> 48:16.000]  Думаю, ваш штрих.
[48:16.000 --> 48:17.000]  Ваш штрих.
[48:24.000 --> 48:25.000]  Почему это так?
[48:29.000 --> 48:31.000]  Потому что что такое дельта штрих?
[48:33.000 --> 48:34.000]  Ну, по факту.
[48:34.000 --> 48:38.000]  Это множество состояний.
[48:39.000 --> 48:44.000]  Сейчас, секунду.
[48:44.000 --> 48:51.000]  Это множество состояний кул, из которых мы можем в...
[48:54.000 --> 48:57.000]  Которые мы попали из кунуль два пр.
[48:58.000 --> 49:01.000]  Так, давайте я напишу так.
[49:01.000 --> 49:03.000]  Из множества куной.
[49:04.000 --> 49:07.000]  Форма, слово это будет больше не х.
[49:16.000 --> 49:18.000]  Ага, давайте вот так.
[49:18.000 --> 49:20.000]  Вот так, множество С.
[49:20.000 --> 49:24.000]  Мы переходим в конфигурацию состоящих множества С.
[49:24.000 --> 49:26.000]  И у нас получилось вот так.
[49:26.000 --> 49:28.000]  Да, все-таки это множество.
[49:28.000 --> 49:29.000]  Да?
[49:29.000 --> 49:32.000]  Но, поскольку у нас автомат утерминированный.
[49:32.000 --> 49:35.000]  То это множество из чиноз состоит.
[49:35.000 --> 49:37.000]  Сейчас, секунду.
[49:42.000 --> 49:43.000]  Тут...
[49:43.000 --> 49:45.000]  Ну, дельта штрих от куны С.
[49:45.000 --> 49:46.000]  Он с такими...
[49:46.000 --> 49:47.000]  Ну, сейчас я напишу.
[49:47.000 --> 49:48.000]  Да-да-да.
[49:48.000 --> 49:51.000]  Просто такие куклы можно опасть.
[49:51.000 --> 49:55.000]  Да-да-да, сейчас я напишу.
[49:55.000 --> 49:57.000]  Да-да-да, сейчас я напишу.
[49:57.000 --> 49:58.000]  Я просто...
[49:58.000 --> 50:00.000]  Давайте так лучше.
[50:04.000 --> 50:06.000]  Если на это обозначим С.
[50:06.000 --> 50:07.000]  Вот эта штука для С.
[50:07.000 --> 50:10.000]  Ну, мы на самом деле попадаем вот так.
[50:14.000 --> 50:16.000]  Да?
[50:20.000 --> 50:21.000]  Так.
[50:21.000 --> 50:22.000]  Отлично.
[50:22.000 --> 50:23.000]  Ну, тогда смотрите.
[50:23.000 --> 50:25.000]  Что мы можем сказать?
[50:25.000 --> 50:27.000]  Мы можем сказать, что...
[50:27.000 --> 50:30.000]  Поскольку у нас все переходы в этом слове однознательные.
[50:30.000 --> 50:32.000]  В этом автомате.
[50:32.000 --> 50:33.000]  Да?
[50:33.000 --> 50:34.000]  Это что мы можем сказать?
[50:34.000 --> 50:36.000]  Мы можем написать следующее.
[50:36.000 --> 50:37.000]  Что...
[50:37.000 --> 50:40.000]  За какое отстранительное состояние мы переходим в Т.
[50:40.000 --> 50:42.000]  По уровню А.
[50:42.000 --> 50:45.000]  За который уровень переход мы переходим из...
[50:47.000 --> 50:50.000]  Вот этой штуки в СС.
[50:50.000 --> 50:52.000]  На ста автомате.
[50:52.000 --> 50:55.000]  Тогда что у нас получается, человек?
[50:57.000 --> 50:59.000]  У нас получается, что...
[50:59.000 --> 51:01.000]  Из...
[51:01.000 --> 51:03.000]  Кунори.
[51:03.000 --> 51:06.000]  Вот, словом мы пошли.
[51:06.000 --> 51:08.000]  Мы переходим...
[51:08.000 --> 51:11.000]  В этой очереди.
[51:11.000 --> 51:12.000]  Ага.
[51:12.000 --> 51:14.000]  А из этого что следует?
[51:14.000 --> 51:16.000]  Чему сравняется у нас?
[51:19.000 --> 51:20.000]  А?
[51:20.000 --> 51:21.000]  Это что такое?
[51:21.000 --> 51:22.000]  А Т, это...
[51:22.000 --> 51:25.000]  Мы за какое количество переходов в автомате Р'
[51:25.000 --> 51:26.000]  нашим новым
[51:26.000 --> 51:29.000]  несловно думая по С' перешли до СС.
[51:30.000 --> 51:31.000]  Да?
[51:31.000 --> 51:33.000]  Посмотрим все переходы, правильно? Посмотрим.
[51:33.000 --> 51:36.000]  Посмотрим какое это состояние от Т.
[51:37.000 --> 51:39.000]  Да, штука такое в состоянии от Т.
[51:39.000 --> 51:41.000]  Вот тогда у нас получается, что из Ку-муль
[51:41.000 --> 51:44.000]  пошел вот в узольную штуку и переходим в Т.
[51:47.000 --> 51:49.000]  А это что у нас такое работает?
[51:49.000 --> 51:50.000]  С.
[51:50.000 --> 51:51.000]  Вот.
[51:54.000 --> 51:55.000]  Вот так?
[51:55.000 --> 51:56.000]  Да.
[51:56.000 --> 51:58.000]  Это сгорится, а в Ку-муль
[51:58.000 --> 51:59.000]  не сгорится.
[51:59.000 --> 52:01.000]  Да, первым у нас на самом деле отдаст
[52:01.000 --> 52:03.000]  сразу дырка, штука, Ку-муль и выстрел.
[52:08.000 --> 52:09.000]  Ага.
[52:13.000 --> 52:14.000]  Чего?
[52:14.000 --> 52:15.000]  Переход.
[52:15.000 --> 52:17.000]  Переход, значит смотрите.
[52:17.000 --> 52:19.000]  Мы хотим понять, почему вот это
[52:19.000 --> 52:21.000]  можно написать таким образом.
[52:21.000 --> 52:22.000]  Да?
[52:22.000 --> 52:24.000]  Потому что это вообще символ из разного.
[52:24.000 --> 52:26.000]  То есть почему мы можем этот переход
[52:26.000 --> 52:27.000]  оставить пополам?
[52:27.000 --> 52:29.000]  Давайте смотреть.
[52:29.000 --> 52:30.000]  Как мы делаем?
[52:30.000 --> 52:32.000]  Мы говорим, автоматия М4.
[52:32.000 --> 52:34.000]  На самом деле, если на этом обозначен
[52:34.000 --> 52:36.000]  за множество С, то у нас в нашем
[52:36.000 --> 52:38.000]  депрессивном, конечно, автомате есть
[52:38.000 --> 52:41.000]  переход, который находим у нас
[52:41.000 --> 52:43.000]  с слова дубль-баш-трихана, а на конце есть
[52:43.000 --> 52:44.000]  С.
[52:45.000 --> 52:47.000]  Этот переход, этот автомат самодумный
[52:47.000 --> 52:48.000]  переход.
[52:48.000 --> 52:49.000]  Да?
[52:49.000 --> 52:51.000]  Это значит существует момент за секунду
[52:51.000 --> 52:53.000]  до этого, в котором вы не сверили
[52:53.000 --> 52:55.000]  эту букву.
[52:55.000 --> 52:57.000]  Фиксируем этот момент, зафиксируем
[52:57.000 --> 52:59.000]  этот момент и обозначим вот
[52:59.000 --> 53:01.000]  состояние С.
[53:01.000 --> 53:03.000]  Это множество на самом деле.
[53:03.000 --> 53:05.000]  Да и получается, что в этом множестве,
[53:05.000 --> 53:07.000]  если мы убираем локу А справа,
[53:07.000 --> 53:09.000]  то мы получаем дельта от
[53:09.000 --> 53:11.000]  ку-муль дубль-баш-трихана, после перехода
[53:11.000 --> 53:13.000]  в Т-эпсул.
[53:13.000 --> 53:15.000]  А это раз дельта штиха от ку-муль
[53:15.000 --> 53:17.000]  дубль-баш-трихана.
[53:17.000 --> 53:19.000]  Вот.
[53:19.000 --> 53:21.000]  Получается, что
[53:21.000 --> 53:23.000]  последний переход это вот эта дельта.
[53:25.000 --> 53:27.000]  Ага.
[53:27.000 --> 53:29.000]  А теперь смотрите, что мы можем
[53:29.000 --> 53:31.000]  сделать с этим выражением.
[53:35.000 --> 53:37.000]  Мы знаем по предположению Дуктю,
[53:37.000 --> 53:39.000]  что это штрих с В-штрихом
[53:39.000 --> 53:41.000]  равно дельта с В-штрихом.
[53:41.000 --> 53:43.000]  Так.
[53:43.000 --> 53:45.000]  Это на самом деле дельта-штрих.
[53:45.000 --> 53:47.000]  Вот.
[53:47.000 --> 53:49.000]  Получается
[53:49.000 --> 53:51.000]  дельта
[53:51.000 --> 53:53.000]  от множества ку-муль
[53:53.000 --> 53:55.000]  на слово дубль-баш-трих
[53:55.000 --> 53:57.000]  и это по лукля.
[53:59.000 --> 54:01.000]  То есть мы можем заменить дельту.
[54:03.000 --> 54:05.000]  Осталось понять,
[54:05.000 --> 54:07.000]  почему
[54:07.000 --> 54:09.000]  мы вот эту дельту-штрих
[54:09.000 --> 54:11.000]  можем заменить на дельту.
[54:15.000 --> 54:17.000]  А?
[54:17.000 --> 54:19.000]  В предположении Дуктю?
[54:19.000 --> 54:21.000]  Нет, в предположении Дуктю уже работает.
[54:23.000 --> 54:25.000]  Потому что переходы для буквы?
[54:27.000 --> 54:29.000]  Потому что
[54:29.000 --> 54:31.000]  вот это,
[54:31.000 --> 54:33.000]  этот уже переход даже на автомате.
[54:35.000 --> 54:37.000]  То есть смотрите, мы переходим
[54:37.000 --> 54:39.000]  по одной букве в автомате,
[54:39.000 --> 54:41.000]  меняя вот эту штуку
[54:41.000 --> 54:43.000]  на дельту.
[54:43.000 --> 54:45.000]  Да?
[54:45.000 --> 54:47.000]  Поэтому мы вот этот переход
[54:47.000 --> 54:49.000]  по одной букве можем заменить
[54:49.000 --> 54:51.000]  с дельта-штрих на дельту.
[54:51.000 --> 54:53.000]  Сейчас я поясню.
[54:53.000 --> 54:55.000]  Сейчас я поясню.
[55:05.000 --> 55:07.000]  Так, у нас получается,
[55:07.000 --> 55:09.000]  смотрите,
[55:11.000 --> 55:13.000]  просто если на выдох штука
[55:13.000 --> 55:15.000]  раздача МЗТ,
[55:15.000 --> 55:17.000]  получается,
[55:17.000 --> 55:19.000]  у нас выводим впереди
[55:23.000 --> 55:25.000]  Так, смотрите,
[55:25.000 --> 55:27.000]  у нас получается,
[55:27.000 --> 55:29.000]  есть переход
[55:29.000 --> 55:31.000]  из буквы Т, из МЗТ,
[55:31.000 --> 55:33.000]  по букве С,
[55:33.000 --> 55:35.000]  ну, если мы используем дельту-штрих.
[55:39.000 --> 55:41.000]  Дельта-штрих.
[55:43.000 --> 55:45.000]  Ну, я напоминаю, что мы работаем
[55:45.000 --> 55:47.000]  тех терминах. И получается,
[55:47.000 --> 55:49.000]  получается,
[55:53.000 --> 55:55.000]  что
[55:55.000 --> 55:57.000]  из этого следует,
[55:57.000 --> 55:59.000]  что С
[55:59.000 --> 56:01.000]  на самом деле отмечено
[56:01.000 --> 56:03.000]  как дельта-СА.
[56:05.000 --> 56:07.000]  Ага.
[56:07.000 --> 56:09.000]  Ну, это он
[56:09.000 --> 56:11.000]  по дельте-дельту.
[56:13.000 --> 56:15.000]  А это, поскольку
[56:15.000 --> 56:17.000]  я там применю же дельту-штрих,
[56:17.000 --> 56:19.000]  то это получается у нас,
[56:19.000 --> 56:21.000]  что С
[56:21.000 --> 56:23.000]  напоминается дельту-штрих
[56:23.000 --> 56:25.000]  от входа ТА.
[56:29.000 --> 56:31.000]  Только тут дельта-ТА у нас.
[56:31.000 --> 56:33.000]  Ну, потому что
[56:33.000 --> 56:35.000]  слово Т, а переход по букве А.
[56:37.000 --> 56:39.000]  Ага.
[56:41.000 --> 56:43.000]  Так, а вот это, что мы можем сделать
[56:43.000 --> 56:45.000]  с вами, с этой штукой?
[56:45.000 --> 56:47.000]  С двойной вентой.
[56:49.000 --> 56:51.000]  Ну, это дейта от
[56:51.000 --> 56:53.000]  Кун Ольгис по В-штриху.
[56:55.000 --> 56:57.000]  Это по определению венты
[56:57.000 --> 56:59.000]  нам стоит.
[57:01.000 --> 57:03.000]  Опять, что мы можем расписать, существует
[57:03.000 --> 57:05.000]  там промежуточная решина,
[57:05.000 --> 57:07.000]  такая, что
[57:07.000 --> 57:09.000]  ты получишь такой переход.
[57:09.000 --> 57:11.000]  В общем, с вами
[57:11.000 --> 57:13.000]  зафиксируется очень много таких переводов времени.
[57:15.000 --> 57:17.000]  Но
[57:17.000 --> 57:19.000]  вот, оказалось, что такое.
[57:19.000 --> 57:21.000]  То есть, это он, когда... Посмотри.
[57:21.000 --> 57:23.000]  Давайте еще раз идею. Мы раскрываем
[57:23.000 --> 57:25.000]  все, кроме последней буфы,
[57:25.000 --> 57:27.000]  а здесь
[57:27.000 --> 57:29.000]  объясняем, почему переходы
[57:29.000 --> 57:31.000]  интернеры, конечно, на автомате
[57:31.000 --> 57:33.000]  нужно развить на наборы, развить
[57:33.000 --> 57:35.000]  подможество, кроме перехода
[57:35.000 --> 57:37.000]  в последний буф, раз.
[57:37.000 --> 57:39.000]  Да? Вот эту штуку
[57:39.000 --> 57:41.000]  заменяем только в положение индукции,
[57:41.000 --> 57:43.000]  а последнюю штуку заменяем,
[57:43.000 --> 57:45.000]  просто даться из перехода в автомате.
[57:47.000 --> 57:49.000]  Перше?
[57:49.000 --> 57:51.000]  Понятно?
[57:53.000 --> 57:55.000]  Или все отрубились
[57:55.000 --> 57:57.000]  и спать хотят?
[57:57.000 --> 57:59.000]  На, слушай.
[58:03.000 --> 58:05.000]  Ну, у нас получилась
[58:05.000 --> 58:07.000]  дельта-штрих от дельты, да?
[58:07.000 --> 58:09.000]  Мы хотим теперь эту штуку
[58:09.000 --> 58:11.000]  заменить на дельту от дельты.
[58:11.000 --> 58:13.000]  Как мы это делаем?
[58:13.000 --> 58:15.000]  Почему так можем сделать?
[58:15.000 --> 58:17.000]  Потому что, если разведем дельту от начания,
[58:17.000 --> 58:19.000]  то у нас была вот эта штука,
[58:19.000 --> 58:21.000]  это D,
[58:21.000 --> 58:23.000]  есть переход по моду A.
[58:23.000 --> 58:25.000]  Понимаем, что из D по A
[58:25.000 --> 58:27.000]  мы переходим в мощность S.
[58:29.000 --> 58:31.000]  Да? Вот.
[58:31.000 --> 58:33.000]  Переходим в мощность S. Но с другой стороны,
[58:33.000 --> 58:35.000]  по определению
[58:35.000 --> 58:37.000]  состояния, как мы строили,
[58:37.000 --> 58:39.000]  что же на самом деле S
[58:39.000 --> 58:41.000]  должно быть дельта-штрих?
[58:41.000 --> 58:43.000]  Это D по A,
[58:43.000 --> 58:45.000]  ровно отсюда.
[58:45.000 --> 58:47.000]  Вот, но с другой стороны,
[58:47.000 --> 58:49.000]  это переход в автомате дельта-штрих,
[58:49.000 --> 58:51.000]  поэтому дельта-штрих от A получаем.
[58:51.000 --> 58:53.000]  То есть, получается,
[58:53.000 --> 58:55.000]  дельта от A равно дельта-штрих от A.
[58:55.000 --> 58:57.000]  У меня получается, что мы вот тут
[58:57.000 --> 58:59.000]  дельта-штрих можем раскрыть.
[58:59.000 --> 59:01.000]  Вот, а в конце потом мы сильнее
[59:01.000 --> 59:03.000]  не дельта.
[59:03.000 --> 59:05.000]  А может еще раз?
[59:05.000 --> 59:07.000]  Вот это тоже?
[59:07.000 --> 59:09.000]  Ну да.
[59:09.000 --> 59:11.000]  Ну это мы просто расписали,
[59:11.000 --> 59:13.000]  что такое дельта-штрих от D по A.
[59:13.000 --> 59:15.000]  А.
[59:15.000 --> 59:17.000]  А может уже
[59:17.000 --> 59:19.000]  от D по A не получается,
[59:19.000 --> 59:21.000]  просто вставление вместо S
[59:21.000 --> 59:23.000]  по определению мощности с 0?
[59:29.000 --> 59:31.000]  Нет, ну нет.
[59:31.000 --> 59:33.000]  Вот над D же у вас там
[59:33.000 --> 59:35.000]  определение или нет?
[59:35.000 --> 59:37.000]  Это переход по B где?
[59:37.000 --> 59:39.000]  Но не по слову.
[59:39.000 --> 59:41.000]  А мы доказываем, что это для слова работает.
[59:41.000 --> 59:43.000]  Так это лучше.
[59:43.000 --> 59:45.000]  Так, давай, пройдем в минуту.
[59:47.000 --> 59:49.000]  В общем, тут, опять же,
[59:49.000 --> 59:51.000]  есть доказательства.
[59:51.000 --> 59:53.000]  Будем почитать.
[59:53.000 --> 59:55.000]  Ну, собственно, мы его пояснили.
[59:55.000 --> 59:57.000]  Ну, то есть,
[59:57.000 --> 59:59.000]  по автоматам уже.
[59:59.000 --> 01:00:01.000]  Вот, теперь смотрите.
[01:00:01.000 --> 01:00:03.000]  Давайте теперь перейдем
[01:00:03.000 --> 01:00:05.000]  к доказательству теории.
[01:00:07.000 --> 01:00:09.000]  А
[01:00:09.000 --> 01:00:11.000]  для этого мне надо что-то стереть.
[01:00:11.000 --> 01:00:13.000]  Ну, давайте, я думаю,
[01:00:13.000 --> 01:00:15.000]  что это достаточно.
[01:00:17.000 --> 01:00:19.000]  Нам надо доказать
[01:00:19.000 --> 01:00:21.000]  следующей партии, понятно?
[01:00:21.000 --> 01:00:23.000]  Итак, на третьем.
[01:00:23.000 --> 01:00:25.000]  Если думать, что это язык
[01:00:25.000 --> 01:00:27.000]  есть, ну давай ОМНР.
[01:00:29.000 --> 01:00:31.000]  Чему это может быть
[01:00:31.000 --> 01:00:33.000]  квалифицированным?
[01:00:33.000 --> 01:00:35.000]  Этой квалифицированной
[01:00:35.000 --> 01:00:37.000]  существует Q,
[01:00:37.000 --> 01:00:39.000]  принадлежащую в прошлом завершенном состоянии.
[01:00:39.000 --> 01:00:41.000]  Что?
[01:00:41.000 --> 01:00:43.000]  Q принадлежит
[01:00:43.000 --> 01:00:45.000]  на дельтр-кулоне по основному дебюржанту.
[01:00:49.000 --> 01:00:51.000]  Ага.
[01:00:53.000 --> 01:00:55.000]  А это разве теорема,
[01:00:55.000 --> 01:00:57.000]  а не просто дебюржанная?
[01:00:57.000 --> 01:00:59.000]  Не, на доказательстве теорема.
[01:00:59.000 --> 01:01:01.000]  А.
[01:01:07.000 --> 01:01:09.000]  Так.
[01:01:09.000 --> 01:01:11.000]  Смотрите.
[01:01:11.000 --> 01:01:13.000]  Это значит, что существует завершенном состоянии.
[01:01:13.000 --> 01:01:15.000]  Такой, что Q принадлежит
[01:01:15.000 --> 01:01:17.000]  дельтр-кулоне по основному дебюржанту.
[01:01:19.000 --> 01:01:21.000]  Вопрос. А как это можно переписать?
[01:01:23.000 --> 01:01:25.000]  Что дельтр-кулоне по основному дебюржанту.
[01:01:25.000 --> 01:01:27.000]  Ну, мы это можем переписать
[01:01:27.000 --> 01:01:29.000]  и квалифицировать образом.
[01:01:31.000 --> 01:01:33.000]  Во-первых,
[01:01:37.000 --> 01:01:39.000]  мы можем написать, что
[01:01:39.000 --> 01:01:41.000]  дельтр-кулоне
[01:01:41.000 --> 01:01:43.000]  Q, QB
[01:01:43.000 --> 01:01:45.000]  пересечь дно, что завершает
[01:01:45.000 --> 01:01:47.000]  в состоянии дебюржанта.
[01:01:47.000 --> 01:01:49.000]  Да?
[01:01:49.000 --> 01:01:51.000]  Угу.
[01:01:51.000 --> 01:01:53.000]  Теперь, смотрите.
[01:01:55.000 --> 01:01:57.000]  А
[01:01:57.000 --> 01:01:59.000]  мы можем дальше
[01:01:59.000 --> 01:02:01.000]  переписать.
[01:02:01.000 --> 01:02:03.000]  Что это непонятно, потому что
[01:02:03.000 --> 01:02:05.000]  дельты из множества кумоль
[01:02:05.000 --> 01:02:07.000]  по слову DQB
[01:02:07.000 --> 01:02:09.000]  пересечься от кумуста.
[01:02:09.000 --> 01:02:11.000]  Да, потому что
[01:02:11.000 --> 01:02:13.000]  эта штука это объединение
[01:02:13.000 --> 01:02:15.000]  по всем множествам, которые лежат здесь.
[01:02:15.000 --> 01:02:17.000]  А это кумоль.
[01:02:17.000 --> 01:02:19.000]  Теперь, чем мы можем с вами
[01:02:19.000 --> 01:02:21.000]  переписаться?
[01:02:21.000 --> 01:02:23.000]  Демо.
[01:02:23.000 --> 01:02:25.000]  Демо.
[01:02:25.000 --> 01:02:27.000]  Демо.
[01:02:27.000 --> 01:02:29.000]  Демо.
[01:02:35.000 --> 01:02:37.000]  Дельт-каш-трика в кумоле D.
[01:02:41.000 --> 01:02:43.000]  Да,
[01:02:43.000 --> 01:02:45.000]  на доказательствах демо осталось.
[01:02:45.000 --> 01:02:47.000]  Т.е. с демо не осталось недалеко.
[01:02:49.000 --> 01:02:51.000]  Ага.
[01:02:51.000 --> 01:02:53.000]  Знаете, что
[01:02:53.000 --> 01:02:55.000]  дельт-каш-трика в кумоле D
[01:02:55.000 --> 01:02:57.000]  принадлежит к кумоле D.
[01:02:57.000 --> 01:02:59.000]  Да.
[01:03:09.000 --> 01:03:11.000]  Это что к варианту?
[01:03:13.000 --> 01:03:15.000]  Потому что D проглатывает с автоматом.
[01:03:15.000 --> 01:03:17.000]  Да.
[01:03:17.000 --> 01:03:19.000]  Я не знаю, когда.
[01:03:19.000 --> 01:03:21.000]  Давайте вот все делать.
[01:03:27.000 --> 01:03:29.000]  Все, показатель.
[01:03:33.000 --> 01:03:35.000]  Т.е. идея
[01:03:35.000 --> 01:03:37.000]  аккуратненько расписать индукции,
[01:03:37.000 --> 01:03:39.000]  а дальше посмотреть,
[01:03:39.000 --> 01:03:41.000]  делаться, грамотно сделать соответствия
[01:03:41.000 --> 01:03:43.000]  между переходом к кумоле D
[01:03:43.000 --> 01:03:45.000]  и переходом к кумоле D
[01:03:45.000 --> 01:03:47.000]  с автоматом.
[01:03:49.000 --> 01:03:51.000]  Что, как вам показатель в теореме?
[01:03:51.000 --> 01:03:53.000]  Хорошо.
[01:03:53.000 --> 01:03:55.000]  Нормально.
[01:03:55.000 --> 01:03:57.000]  Ладно, не переживайте, для этого сама
[01:03:57.000 --> 01:03:59.000]  можно начать лекцию.
[01:03:59.000 --> 01:04:01.000]  Сейчас будет все проще.
[01:04:01.000 --> 01:04:03.000]  Давайте вернемся к...
[01:04:03.000 --> 01:04:05.000]  Так, вопрос
[01:04:05.000 --> 01:04:07.000]  подоказывает в теореме.
[01:04:07.000 --> 01:04:09.000]  Нет, быстрее.
[01:04:09.000 --> 01:04:11.000]  Свидетель не сможет.
[01:04:11.000 --> 01:04:13.000]  Почему такие простые
[01:04:13.000 --> 01:04:15.000]  параметры в этом времени?
[01:04:15.000 --> 01:04:17.000]  Ну, потому что он на то все формальных рисунков.
[01:04:17.000 --> 01:04:19.000]  Да, на это все время можно и не жаловаться.
[01:04:23.000 --> 01:04:25.000]  Что все это формально записать,
[01:04:25.000 --> 01:04:27.000]  это будет быстрее.
[01:04:29.000 --> 01:04:31.000]  Будешь какие-то
[01:04:31.000 --> 01:04:33.000]  манипуляции произвести.
[01:04:33.000 --> 01:04:35.000]  Итак, вернемся к сложности,
[01:04:35.000 --> 01:04:37.000]  которые належат в новую языку,
[01:04:37.000 --> 01:04:39.000]  т.е. первого конечного автомата.
[01:04:39.000 --> 01:04:41.000]  Во-первых, у нас время по длине слова.
[01:04:41.000 --> 01:04:43.000]  Дополнительная память. Давайте подумаем,
[01:04:43.000 --> 01:04:45.000]  почему дополнительная память у нас проиграется.
[01:04:51.000 --> 01:04:53.000]  Да, в бинбаске длины
[01:04:53.000 --> 01:04:55.000]  в состоянии
[01:04:55.000 --> 01:04:57.000]  мы находимся.
[01:04:57.000 --> 01:04:59.000]  Здесь для состояния
[01:04:59.000 --> 01:05:01.000]  нового автомата.
[01:05:01.000 --> 01:05:03.000]  Да.
[01:05:03.000 --> 01:05:05.000]  Да, просто нужно хранить
[01:05:05.000 --> 01:05:07.000]  одежды к состоянию.
[01:05:07.000 --> 01:05:09.000]  Время по строению автомата
[01:05:09.000 --> 01:05:11.000]  это в баске, это не в модельку,
[01:05:11.000 --> 01:05:13.000]  но для модельку это в старом автомате.
[01:05:13.000 --> 01:05:15.000]  Да, немножко в баке.
[01:05:15.000 --> 01:05:17.000]  Но в автомате это будет
[01:05:17.000 --> 01:05:19.000]  длина у большой одежды в одну.
[01:05:21.000 --> 01:05:23.000]  Надо бы поправить эти заказы.
[01:05:25.000 --> 01:05:27.000]  У меня есть вопрос
[01:05:27.000 --> 01:05:29.000]  к своей сложности,
[01:05:29.000 --> 01:05:31.000]  которая раньше не была.
[01:05:31.000 --> 01:05:33.000]  У меня есть вопрос о W,
[01:05:33.000 --> 01:05:35.000]  если у нас
[01:05:35.000 --> 01:05:37.000]  обращение
[01:05:37.000 --> 01:05:39.000]  с фактически
[01:05:39.000 --> 01:05:41.000]  динарной строкой длины
[01:05:41.000 --> 01:05:43.000]  больше, чем машинное слово.
[01:05:43.000 --> 01:05:45.000]  Если
[01:05:45.000 --> 01:05:47.000]  аскут достаточно не бывает,
[01:05:47.000 --> 01:05:49.000]  то само обращение
[01:05:49.000 --> 01:05:51.000]  к массивам, в которых
[01:05:51.000 --> 01:05:53.000]  лежат переходы, или какими
[01:05:53.000 --> 01:05:55.000]  баскетчерами, которые лежат переходы,
[01:05:55.000 --> 01:05:57.000]  не будет короче разуметься.
[01:05:57.000 --> 01:05:59.000]  Ооо, это не из-за того,
[01:05:59.000 --> 01:06:01.000]  да. Но люди просто
[01:06:01.000 --> 01:06:03.000]  живут в памяти.
[01:06:03.000 --> 01:06:05.000]  Они не нуждаются на их ощущения,
[01:06:05.000 --> 01:06:07.000]  они живут в памяти.
[01:06:07.000 --> 01:06:09.000]  Сейчас мы можем сказать от модуль В
[01:06:09.000 --> 01:06:11.000]  на логариф модуль Q,
[01:06:11.000 --> 01:06:13.000]  и все равно будет хорошо.
[01:06:13.000 --> 01:06:15.000]  А будет логариф
[01:06:15.000 --> 01:06:17.000]  нового Q.
[01:06:17.000 --> 01:06:19.000]  Логариф нового Q
[01:06:19.000 --> 01:06:21.000]  это старая ассутация.
[01:06:21.000 --> 01:06:23.000]  Равно.
[01:06:23.000 --> 01:06:25.000]  Дэйн Брэйн тоже не говорит,
[01:06:25.000 --> 01:06:27.000]  что можно просто взять и по-любому
[01:06:27.000 --> 01:06:29.000]  как собраться,
[01:06:29.000 --> 01:06:31.000]  по-любому внутри W.
[01:06:31.000 --> 01:06:33.000]  Сейчас нет, а почему логариф
[01:06:33.000 --> 01:06:35.000]  это не правда, нет.
[01:06:35.000 --> 01:06:37.000]  А логариф у нас размером старый.
[01:06:37.000 --> 01:06:39.000]  То есть логариф новый.
[01:06:39.000 --> 01:06:41.000]  Ну потому что беда в маске
[01:06:41.000 --> 01:06:43.000]  надо хранить просто.
[01:06:43.000 --> 01:06:45.000]  Это проблема, если
[01:06:45.000 --> 01:06:47.000]  можно встроить такие такие
[01:06:47.000 --> 01:06:49.000]  серии. Да, в общем
[01:06:49.000 --> 01:06:51.000]  есть такие проблемы, да,
[01:06:51.000 --> 01:06:53.000]  есть беда в маске.
[01:06:53.000 --> 01:06:55.000]  Обычно, наверное, количество
[01:06:55.000 --> 01:06:57.000]  состояний не 20 литров,
[01:06:57.000 --> 01:06:59.000]  это он меньше,
[01:06:59.000 --> 01:07:01.000]  его можно просто изменировать.
[01:07:01.000 --> 01:07:03.000]  Там, грубо говоря,
[01:07:03.000 --> 01:07:05.000]  вероятность того,
[01:07:05.000 --> 01:07:07.000]  что мера того,
[01:07:07.000 --> 01:07:09.000]  что мы то событие, которое
[01:07:09.000 --> 01:07:11.000]  достигли, вот,
[01:07:11.000 --> 01:07:13.000]  а константа в ротовстве панико,
[01:07:13.000 --> 01:07:15.000]  она очень малая.
[01:07:15.000 --> 01:07:17.000]  Это у нас не может быть. Да.
[01:07:17.000 --> 01:07:19.000]  Товарищи,
[01:07:19.000 --> 01:07:21.000]  значит, это еще не все.
[01:07:21.000 --> 01:07:23.000]  Это не все виды автоматов,
[01:07:23.000 --> 01:07:25.000]  а бывают автоматы
[01:07:25.000 --> 01:07:27.000]  полные.
[01:07:27.000 --> 01:07:29.000]  Они нам важны для чего?
[01:07:29.000 --> 01:07:31.000]  Они нам важны для того, чтобы
[01:07:31.000 --> 01:07:33.000]  мы всегда знали
[01:07:33.000 --> 01:07:35.000]  по такой букве, куда мы идем.
[01:07:37.000 --> 01:07:39.000]  То есть отличие определения полного
[01:07:39.000 --> 01:07:41.000]  интерьерного коричневого автомата,
[01:07:41.000 --> 01:07:43.000]  что это PDK, в котором знак
[01:07:43.000 --> 01:07:45.000]  это PDK, в котором знак
[01:07:45.000 --> 01:07:47.000]  не больше заменяется
[01:07:47.000 --> 01:07:49.000]  на знак равно.
[01:07:53.000 --> 01:07:55.000]  Но определение.
[01:07:55.000 --> 01:07:57.000]  Ага.
[01:07:57.000 --> 01:07:59.000]  То есть всегда
[01:07:59.000 --> 01:08:01.000]  по любому автомату,
[01:08:01.000 --> 01:08:03.000]  по любому состоянию,
[01:08:03.000 --> 01:08:05.000]  по любому букве мы можем куда-то
[01:08:05.000 --> 01:08:07.000]  перейти.
[01:08:07.000 --> 01:08:09.000]  Есть у меня как что сделать?
[01:08:09.000 --> 01:08:11.000]  Добавить как бы мусорную
[01:08:11.000 --> 01:08:13.000]  состоянию?
[01:08:13.000 --> 01:08:15.000]  Надо ввести все пусты?
[01:08:15.000 --> 01:08:17.000]  Да. Вот смотрите,
[01:08:17.000 --> 01:08:19.000]  вот идея такая.
[01:08:19.000 --> 01:08:21.000]  Допустим, у нас есть переход по букве A,
[01:08:21.000 --> 01:08:23.000]  нет перехода по букве B.
[01:08:23.000 --> 01:08:25.000]  Когда мы заводим мусорную вершину,
[01:08:25.000 --> 01:08:27.000]  делаем переход по букве B.
[01:08:27.000 --> 01:08:29.000]  А в мусорной вершине какие переходы
[01:08:29.000 --> 01:08:31.000]  будут? Себя сам себя.
[01:08:31.000 --> 01:08:33.000]  Да-да. С звуком А.
[01:08:35.000 --> 01:08:37.000]  Вот. Понятно, что можно
[01:08:37.000 --> 01:08:39.000]  ополуммировать арены для любого PDK,
[01:08:39.000 --> 01:08:41.000]  для того, чтобы полный PDK существует PDK,
[01:08:41.000 --> 01:08:43.000]  доказательство будет
[01:08:43.000 --> 01:08:45.000]  ровно вот такое.
[01:08:49.000 --> 01:08:51.000]  Единственное, надо доказать, что
[01:08:51.000 --> 01:08:53.000]  здесь уже надо опираться
[01:08:53.000 --> 01:08:55.000]  на структуру теории графа,
[01:08:55.000 --> 01:08:57.000]  то есть показать, что если вы зашли в стоковую вершину,
[01:08:57.000 --> 01:08:59.000]  то вы из нее выпустите.
[01:08:59.000 --> 01:09:01.000]  Вот. Это надо, например,
[01:09:01.000 --> 01:09:03.000]  логически зарегистрировать.
[01:09:03.000 --> 01:09:05.000]  Ну вот, давайте пример построим.
[01:09:05.000 --> 01:09:07.000]  А, кстати, идея доказательства
[01:09:07.000 --> 01:09:09.000]  понятна? Да.
[01:09:09.000 --> 01:09:11.000]  Картинка в образе.
[01:09:15.000 --> 01:09:17.000]  Берем правую
[01:09:17.000 --> 01:09:19.000]  левую картинку,
[01:09:19.000 --> 01:09:21.000]  а стоковую вершину,
[01:09:21.000 --> 01:09:23.000]  я не знаю,
[01:09:23.000 --> 01:09:25.000]  красный или зелёный.
[01:09:25.000 --> 01:09:27.000]  Я просто не вижу.
[01:09:27.000 --> 01:09:29.000]  А, я понял.
[01:09:29.000 --> 01:09:31.000]  Надо будет всё по всеми целях делать.
[01:09:31.000 --> 01:09:33.000]  Хорошо.
[01:09:37.000 --> 01:09:39.000]  Хорошо.
[01:09:39.000 --> 01:09:41.000]  Следующая теория,
[01:09:41.000 --> 01:09:43.000]  которую мы сейчас хотим обсудить,
[01:09:43.000 --> 01:09:45.000]  это теория,
[01:09:45.000 --> 01:09:47.000]  которая доказательства не очень сложная.
[01:09:47.000 --> 01:09:49.000]  Вот теория.
[01:09:49.000 --> 01:09:51.000]  Это свойство автоматных языков.
[01:09:51.000 --> 01:09:53.000]  Значит, смотрите,
[01:09:53.000 --> 01:09:55.000]  автоматные языки
[01:09:55.000 --> 01:09:57.000]  замкнуты относительно всех теоретических
[01:09:57.000 --> 01:09:59.000]  множественных операций.
[01:09:59.000 --> 01:10:01.000]  И замкнуты относительно операций клини.
[01:10:01.000 --> 01:10:03.000]  То есть если у нас
[01:10:03.000 --> 01:10:05.000]  язык L распознается автоматом,
[01:10:05.000 --> 01:10:07.000]  то язык L со звездой
[01:10:07.000 --> 01:10:09.000]  тоже распознается некоторым автоматом.
[01:10:11.000 --> 01:10:13.000]  Давайте догадываем эти фазы.
[01:10:13.000 --> 01:10:15.000]  И сразу скажу,
[01:10:15.000 --> 01:10:17.000]  что у нас дальше
[01:10:17.000 --> 01:10:19.000]  будут рассматриваться
[01:10:19.000 --> 01:10:21.000]  автоматы с одним заключающим состоянием.
[01:10:21.000 --> 01:10:23.000]  Вопрос. У нас есть два автомата.
[01:10:23.000 --> 01:10:25.000]  Как построить автомат для саркетинации?
[01:10:25.000 --> 01:10:27.000]  Соединим конечное
[01:10:27.000 --> 01:10:29.000]  состояние одного с началом другого?
[01:10:29.000 --> 01:10:31.000]  Соединим. Соединим конечное
[01:10:31.000 --> 01:10:33.000]  состояние одного с началом другого.
[01:10:37.000 --> 01:10:39.000]  Вот это. Надо на картинке
[01:10:39.000 --> 01:10:41.000]  посмотреть.
[01:10:43.000 --> 01:10:45.000]  Объединение.
[01:10:47.000 --> 01:10:49.000]  Если у нас здесь
[01:10:49.000 --> 01:10:51.000]  была последовательная соединение,
[01:10:51.000 --> 01:10:53.000]  то вспоминаем, что у нас
[01:10:53.000 --> 01:10:55.000]  в кроме курсвики какое соединение у нас получается?
[01:10:55.000 --> 01:10:57.000]  Параллельное.
[01:10:57.000 --> 01:10:59.000]  Правильно.
[01:10:59.000 --> 01:11:01.000]  Ага.
[01:11:01.000 --> 01:11:03.000]  Собственно, добавляем в это три года.
[01:11:03.000 --> 01:11:05.000]  Единственное, что надо в конец
[01:11:05.000 --> 01:11:07.000]  делать это же объединение, чтобы у нас автоматы
[01:11:07.000 --> 01:11:09.000]  так же оставались одним завершающим состоянием.
[01:11:09.000 --> 01:11:11.000]  Ой, чиху, мне кажется, у меня
[01:11:11.000 --> 01:11:13.000]  не хватает.
[01:11:13.000 --> 01:11:15.000]  А вот какой пункт называется, зачем мы
[01:11:15.000 --> 01:11:17.000]  оставляем автоматы уже в состоянии?
[01:11:17.000 --> 01:11:19.000]  А, чтобы потом не поролся
[01:11:19.000 --> 01:11:21.000]  с этими проблемами.
[01:11:21.000 --> 01:11:23.000]  Потому что когда мы будем замыкать
[01:11:23.000 --> 01:11:25.000]  эту всю историю, там будут проблемы.
[01:11:27.000 --> 01:11:29.000]  Ну, чтоб много переходов
[01:11:29.000 --> 01:11:31.000]  не было.
[01:11:33.000 --> 01:11:35.000]  Как звездочку сделать?
[01:11:35.000 --> 01:11:37.000]  Из всех звезд.
[01:11:37.000 --> 01:11:39.000]  Смотрите, предлагаю
[01:11:39.000 --> 01:11:41.000]  историю такую.
[01:11:41.000 --> 01:11:43.000]  То есть у нас
[01:11:43.000 --> 01:11:45.000]  есть автомат.
[01:11:47.000 --> 01:11:49.000]  Можно попробовать сделать
[01:11:49.000 --> 01:11:51.000]  вот так. Можно.
[01:11:53.000 --> 01:11:55.000]  Но это не сработает.
[01:11:55.000 --> 01:11:57.000]  Это не сработает.
[01:11:57.000 --> 01:11:59.000]  Нужно сделать начальное состояние принимающим,
[01:11:59.000 --> 01:12:01.000]  а после...
[01:12:01.000 --> 01:12:03.000]  Это не сработает,
[01:12:03.000 --> 01:12:05.000]  это упражнение, подумайте, почему это не работает.
[01:12:05.000 --> 01:12:07.000]  А работает такая картинка.
[01:12:09.000 --> 01:12:11.000]  То есть нам надо сколько-то раз
[01:12:11.000 --> 01:12:13.000]  провернуть наши слова.
[01:12:13.000 --> 01:12:15.000]  Мы заходим в внутреннюю структуру,
[01:12:17.000 --> 01:12:19.000]  заливаем счетчик,
[01:12:19.000 --> 01:12:21.000]  считаем, сколько раз нам надо пройти,
[01:12:21.000 --> 01:12:23.000]  выходим, заходим, выходим.
[01:12:23.000 --> 01:12:25.000]  При этом завершающий состояние,
[01:12:25.000 --> 01:12:27.000]  смотри, тут одно завершающее состояние,
[01:12:27.000 --> 01:12:29.000]  это просто визуальный эффект.
[01:12:29.000 --> 01:12:31.000]  Завершающее состояние это первое состояние.
[01:12:31.000 --> 01:12:33.000]  Стартовое.
[01:12:35.000 --> 01:12:37.000]  Угу.
[01:12:37.000 --> 01:12:39.000]  Все.
[01:12:39.000 --> 01:12:41.000]  Что дальше?
[01:12:43.000 --> 01:12:45.000]  Что? Здесь?
[01:12:45.000 --> 01:12:47.000]  Можете подсказать сейчас, пожалуйста,
[01:12:47.000 --> 01:12:49.000]  что не так с тем,
[01:12:49.000 --> 01:12:51.000]  даже если стартовое состояние делается...
[01:12:51.000 --> 01:12:53.000]  Это упражнение.
[01:12:53.000 --> 01:12:55.000]  Проблема будет с цифрами, на самом деле.
[01:12:55.000 --> 01:12:57.000]  Если здесь цифра была,
[01:12:57.000 --> 01:12:59.000]  то мы начнем с чем-то больше.
[01:12:59.000 --> 01:13:01.000]  С чем-то много слов.
[01:13:01.000 --> 01:13:03.000]  Да, да.
[01:13:03.000 --> 01:13:05.000]  Просто чьи-то примеры.
[01:13:05.000 --> 01:13:07.000]  Можно?
[01:13:07.000 --> 01:13:09.000]  Ну, по факту, да.
[01:13:09.000 --> 01:13:11.000]  Мы считаем, сколько раз мы
[01:13:11.000 --> 01:13:13.000]  прошли через этот ассоциационный переход.
[01:13:13.000 --> 01:13:15.000]  Сколько раз мы приедем
[01:13:15.000 --> 01:13:17.000]  к нашему автоматику.
[01:13:17.000 --> 01:13:19.000]  Столько раз мы проходим через этот автомат
[01:13:19.000 --> 01:13:21.000]  целиком, и получается,
[01:13:21.000 --> 01:13:23.000]  если мы прошли какой-то рассказ,
[01:13:23.000 --> 01:13:25.000]  то мы распознали слово из языка
[01:13:25.000 --> 01:13:27.000]  «эльфка».
[01:13:27.000 --> 01:13:29.000]  Ну, вот.
[01:13:29.000 --> 01:13:31.000]  То есть здесь есть язык.
[01:13:31.000 --> 01:13:33.000]  Да, да.
[01:13:35.000 --> 01:13:37.000]  Да, смотрите.
[01:13:37.000 --> 01:13:39.000]  Есть доказательства
[01:13:39.000 --> 01:13:41.000]  для математиков
[01:13:41.000 --> 01:13:43.000]  перечечения.
[01:13:43.000 --> 01:13:45.000]  Потому что перечечения принадлежат
[01:13:45.000 --> 01:13:47.000]  через законный орган.
[01:13:47.000 --> 01:13:49.000]  Есть математическое формальное доказательство.
[01:13:49.000 --> 01:13:51.000]  И, я думаю, такое вы будете
[01:13:51.000 --> 01:13:53.000]  строить на семинарах.
[01:13:53.000 --> 01:13:55.000]  То есть у нас есть один автомат,
[01:13:55.000 --> 01:13:57.000]  есть второй автомат, мы строим декарного
[01:13:57.000 --> 01:13:59.000]  образования двух автоматов.
[01:14:01.000 --> 01:14:03.000]  То есть, и повторяются переходы
[01:14:03.000 --> 01:14:05.000]  по индексам. Смотрите, если у нас
[01:14:05.000 --> 01:14:07.000]  из первого автомата во втором
[01:14:07.000 --> 01:14:09.000]  был переход по первому состоянию,
[01:14:09.000 --> 01:14:11.000]  а во втором — цикли,
[01:14:11.000 --> 01:14:13.000]  то, видите, мы берем и переносимся по строкам.
[01:14:15.000 --> 01:14:17.000]  То есть, смотрите, мы переносимся
[01:14:17.000 --> 01:14:19.000]  из одного словца в другой,
[01:14:19.000 --> 01:14:21.000]  но по строкам остаемся там.
[01:14:23.000 --> 01:14:25.000]  Вот. Завершающий состояние —
[01:14:25.000 --> 01:14:27.000]  это которое будет там и сам завершающим.
[01:14:31.000 --> 01:14:33.000]  Хорошо.
[01:14:33.000 --> 01:14:35.000]  Наполнение как строить, как вы думаете?
[01:14:39.000 --> 01:14:41.000]  Построить полный автомат?
[01:14:41.000 --> 01:14:43.000]  Построить полный автомат,
[01:14:43.000 --> 01:14:45.000]  в котором мы уверены,
[01:14:45.000 --> 01:14:47.000]  что по каждой букве
[01:14:47.000 --> 01:14:49.000]  все сделаем, да?
[01:14:49.000 --> 01:14:51.000]  И все завершающие состояния сделаем,
[01:14:51.000 --> 01:14:53.000]  не завершающие,
[01:14:53.000 --> 01:14:55.000]  и наоборот.
[01:14:55.000 --> 01:14:57.000]  То есть, получается, смотрите,
[01:14:57.000 --> 01:14:59.000]  агонка автомат. То есть, мы
[01:14:59.000 --> 01:15:01.000]  пошли в каком-то состоянии,
[01:15:01.000 --> 01:15:03.000]  дошли до конца
[01:15:03.000 --> 01:15:05.000]  изначально в автомате,
[01:15:05.000 --> 01:15:07.000]  а потом говорят, опа, а ты не пришел в конец.
[01:15:07.000 --> 01:15:09.000]  Все, иди гуляй.
[01:15:09.000 --> 01:15:11.000]  Не понятно.
[01:15:11.000 --> 01:15:13.000]  Даже для этого нужно детерминировать.
[01:15:13.000 --> 01:15:15.000]  Детерминированный, полный.
[01:15:15.000 --> 01:15:17.000]  Детерминированный он всегда полный.
[01:15:17.000 --> 01:15:19.000]  Полный он всегда детерминированный.
[01:15:19.000 --> 01:15:21.000]  Да.
[01:15:21.000 --> 01:15:23.000]  То есть, строим ПДК
[01:15:23.000 --> 01:15:25.000]  и завершающий, не завершающий.
[01:15:29.000 --> 01:15:31.000]  Вот.
[01:15:31.000 --> 01:15:33.000]  И давайте
[01:15:33.000 --> 01:15:35.000]  такую мотивацию закинем
[01:15:35.000 --> 01:15:37.000]  на следующий раз.
[01:15:37.000 --> 01:15:39.000]  Попрос, который
[01:15:39.000 --> 01:15:41.000]  заключается в чем?
[01:15:41.000 --> 01:15:43.000]  В чем проблема автоматики?
[01:15:47.000 --> 01:15:49.000]  У них нет проблем.
[01:15:49.000 --> 01:15:51.000]  Они прекрасны.
[01:15:53.000 --> 01:15:55.000]  Он для какого
[01:15:55.000 --> 01:15:57.000]  высока понятен больше?
[01:15:57.000 --> 01:15:59.000]  На компьютере.
[01:16:03.000 --> 01:16:05.000]  На компьютере, потому что
[01:16:05.000 --> 01:16:07.000]  мы можем запродать прямо алгоритм.
[01:16:07.000 --> 01:16:09.000]  Да, да, да.
[01:16:09.000 --> 01:16:11.000]  Одным человеком более удобна
[01:16:11.000 --> 01:16:13.000]  другая абстракция.
[01:16:13.000 --> 01:16:15.000]  Какая? Регулярные языки.
[01:16:17.000 --> 01:16:19.000]  Собственно,
[01:16:19.000 --> 01:16:21.000]  регулярные выражения у нас есть.
[01:16:23.000 --> 01:16:25.000]  Давайте напомним
[01:16:25.000 --> 01:16:27.000]  о исполнении регулярных языков.
[01:16:27.000 --> 01:16:29.000]  Вспомним семинар.
[01:16:29.000 --> 01:16:31.000]  Тут ровно та же самая книжка,
[01:16:31.000 --> 01:16:33.000]  которая была на семинарах.
[01:16:33.000 --> 01:16:35.000]  Если у нас регулярное выражение
[01:16:35.000 --> 01:16:37.000]  это ноль, то если
[01:16:37.000 --> 01:16:39.000]  создаваем регулярное выражение,
[01:16:39.000 --> 01:16:41.000]  это пустое слово.
[01:16:41.000 --> 01:16:43.000]  Для единички
[01:16:43.000 --> 01:16:45.000]  это слово из пустого символа.
[01:16:47.000 --> 01:16:49.000]  О, пустое слово.
[01:16:49.000 --> 01:16:51.000]  Дальше что? Я букву, это что
[01:16:51.000 --> 01:16:53.000]  будет?
[01:16:55.000 --> 01:16:57.000]  Множить из этого
[01:16:57.000 --> 01:16:59.000]  этой буквы.
[01:16:59.000 --> 01:17:01.000]  Дальше относительно каких операций
[01:17:01.000 --> 01:17:03.000]  еще у нас есть регулярных языков?
[01:17:03.000 --> 01:17:05.000]  Умножить плюс.
[01:17:05.000 --> 01:17:07.000]  Умножить плюс и звездочка.
[01:17:07.000 --> 01:17:09.000]  Плюс это огненение
[01:17:11.000 --> 01:17:13.000]  умножить от этой патинации
[01:17:13.000 --> 01:17:15.000]  буквы языков.
[01:17:15.000 --> 01:17:17.000]  Итерация к линии
[01:17:17.000 --> 01:17:19.000]  это такая что
[01:17:19.000 --> 01:17:21.000]  при этом приоритет операции у нас
[01:17:21.000 --> 01:17:23.000]  получается таким.
[01:17:23.000 --> 01:17:25.000]  Попрос.
[01:17:25.000 --> 01:17:27.000]  Последний.
[01:17:27.000 --> 01:17:29.000]  Который хочется спросить.
[01:17:29.000 --> 01:17:31.000]  Зачем мы доказывали сам что
[01:17:31.000 --> 01:17:33.000]  это операция для автоматных языков?
[01:17:33.000 --> 01:17:35.000]  Только что.
[01:17:39.000 --> 01:17:41.000]  Он скажет что регулярная
[01:17:41.000 --> 01:17:43.000]  качество
[01:17:43.000 --> 01:17:45.000]  ноготение.
[01:17:47.000 --> 01:17:49.000]  Да, что если у нас язык
[01:17:49.000 --> 01:17:51.000]  регулярный и он создается каким-то
[01:17:51.000 --> 01:17:53.000]  ноготением, то он является
[01:17:53.000 --> 01:17:55.000]  автоматом. Для него можно построить
[01:17:55.000 --> 01:17:57.000]  автомат.
[01:17:57.000 --> 01:17:59.000]  А нам осталось доказать
[01:17:59.000 --> 01:18:01.000]  базовый дух цифры.
[01:18:03.000 --> 01:18:05.000]  Давайте отсюда. Как выглядит автомат
[01:18:05.000 --> 01:18:07.000]  для нуля?
[01:18:15.000 --> 01:18:17.000]  А если нам нужно оценивать
[01:18:17.000 --> 01:18:19.000]  состояние?
[01:18:19.000 --> 01:18:21.000]  Нет.
[01:18:23.000 --> 01:18:25.000]  Помните мы доказывали
[01:18:25.000 --> 01:18:27.000]  что замкнутость у нас должна быть
[01:18:27.000 --> 01:18:29.000]  с одним завершающим состоянием.
[01:18:29.000 --> 01:18:31.000]  Все как раз.
[01:18:31.000 --> 01:18:33.000]  Как выглядит у нас две
[01:18:33.000 --> 01:18:35.000]  единички?
[01:18:35.000 --> 01:18:37.000]  Просто Q0 с завершающей и
[01:18:37.000 --> 01:18:39.000]  больше Q0.
[01:18:39.000 --> 01:18:41.000]  Как выглядит льда буквы?
[01:18:41.000 --> 01:18:43.000]  Из Q0 ребров
[01:18:43.000 --> 01:18:45.000]  по этой букве завершающие.
[01:18:45.000 --> 01:18:47.000]  А дальше что нам остается
[01:18:47.000 --> 01:18:49.000]  сказать?
[01:18:49.000 --> 01:18:51.000]  Индукция в построении.
[01:18:51.000 --> 01:18:53.000]  Индукция собственно пользуется фактом
[01:18:53.000 --> 01:18:55.000]  западности автомата языка.
[01:18:55.000 --> 01:18:57.000]  Все,
[01:18:57.000 --> 01:18:59.000]  спасибо на этом.
