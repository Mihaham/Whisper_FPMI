[00:00.000 --> 00:11.000]  Так, ну, во-первых, да, начнем с того, что наша ставка была, да, что мы, что у нас есть n чисел,
[00:11.000 --> 00:21.000]  x0 меньше, чем x1, давайте так x2, ну, так соберем немножко, что у нас есть xn-1, вот.
[00:21.000 --> 00:28.000]  И нам очень хочется научиться искать в них там successor, predecessor
[00:28.000 --> 00:36.000]  за асимптотику log wn. Вот хочется построить мистическую структуру данных.
[00:36.000 --> 00:45.000]  С помощью там каких-то мистических b деревьев мы свели эту задачу к ситуации, когда n не превосходит w.
[00:45.000 --> 00:51.000]  И не просто w, а w в степени 1 делить на 5.
[00:51.000 --> 00:56.000]  Ну, для наших текущих исследований нет смысла повторять, каким конкретным образом мы это свели.
[00:56.000 --> 00:59.000]  Мы просто уже поверили, что если мы это научимся делать за,
[00:59.000 --> 01:06.000]  только вот требуется теперь это делать за от единицы, то и общую задачу мы каким-нибудь образом выкрутим.
[01:06.000 --> 01:16.000]  Вот. Мы обнаружили следующее. Мы обнаружили, что у нас есть интересные биты.
[01:16.000 --> 01:30.000]  B0, B1, B2 и так далее, там B, r-1, где r меньше либо равно n, которое меньше либо равно w в степени 1,5.
[01:30.000 --> 01:35.000]  Так что вот такое вот все весело. Вот такая красота.
[01:35.000 --> 01:39.000]  Что дальше?
[01:40.000 --> 01:44.000]  Что?
[01:44.000 --> 01:46.000]  А, ну вообще да.
[01:46.000 --> 01:48.000]  Но это уже мелочи.
[01:48.000 --> 01:54.000]  Вот. И мы объявили себе следующую интересную вещь.
[01:54.000 --> 02:07.000]  То есть мы сказали, что у нас есть мечта по x получить скетч от x, который равен чью-то в битах.
[02:07.000 --> 02:11.000]  Правильно для этого мы еще и с индексами что-то там подшаманили.
[02:11.000 --> 02:17.000]  Вот. А помните у нас тут нолики, вот эти вот они сверху были, да?
[02:17.000 --> 02:19.000]  Да, что-то я не знаю.
[02:19.000 --> 02:21.000]  Как это давайте...
[02:21.000 --> 02:26.000]  Предлагаем, что у нас с самого начала уже сейчас ассортированы?
[02:26.000 --> 02:29.000]  Нет, ну b-шки-то ассортированы. Они нам даже известны.
[02:29.000 --> 02:31.000]  Не b-шки, а x-ы.
[02:31.000 --> 02:33.000]  Ну x-ы да.
[02:33.000 --> 02:39.000]  Ну как бы мы, как вы уже выяснили, за n log w мы ассортировать умеем.
[02:39.000 --> 02:43.000]  Ну нас интересует в первую очередь этим дотиком запроса.
[02:43.000 --> 02:48.000]  Там построение, ну там потом может быть как-нибудь.
[02:48.000 --> 02:50.000]  Вот. Это мне интересно.
[02:50.000 --> 02:52.000]  Значит далее.
[02:52.000 --> 02:54.000]  Значит теперь жил-был вот нод.
[02:54.000 --> 02:56.000]  Итак, как вот строить скетч?
[02:56.000 --> 03:05.000]  То есть который у нас по определению равен x там b0, x b1, там x b2, x r-1.
[03:05.000 --> 03:07.000]  Вот.
[03:09.000 --> 03:11.000]  То есть ну какая у нас мечта?
[03:11.000 --> 03:13.000]  Как мы в прошлый раз обнаружили?
[03:13.000 --> 03:16.000]  Не будем сейчас повторять эту всю масочную магию.
[03:16.000 --> 03:18.000]  Твоя как звучит, конечно.
[03:18.000 --> 03:19.000]  Вот.
[03:19.000 --> 03:31.000]  Значит чтобы не повторять эту нод, мы скажем только, что у нас была бы мечта свести поиск лавербаундов, апербаундов в x-ах к поиску лавербаундов, апердаудов по скетчам.
[03:31.000 --> 03:33.000]  X r-1?
[03:33.000 --> 03:34.000]  Да.
[03:34.000 --> 03:35.000]  X r-1.
[03:35.000 --> 03:37.000]  Да, да, да, да, да, забыл.
[03:37.000 --> 03:40.000]  B r-1, да, без условий.
[03:40.000 --> 03:42.000]  Вот.
[03:43.000 --> 03:44.000]  Вот.
[03:44.000 --> 03:47.000]  Но очень хочется как-то это искать вот по скетчам.
[03:47.000 --> 04:02.000]  И действительно мы обнаружили, что скетчи обладают таким приятным свойством, что, ну то есть по определению интересных битов у нас интересное заключается в том, что x-ы сами по себе можно сравнивать чисто по скетчам.
[04:02.000 --> 04:03.000]  Вот.
[04:03.000 --> 04:05.000]  Удобно, правда?
[04:05.000 --> 04:06.000]  Вот.
[04:06.000 --> 04:07.000]  То есть вот такая нод.
[04:07.000 --> 04:10.000]  Оказывается вот очень удобно.
[04:10.000 --> 04:11.000]  Вот.
[04:11.000 --> 04:24.000]  Но, к сожалению, выясняется, что если в эти x-ы затерзался рандомный не связанный с ними y, то конкретно сравнение по вот этим b-шкам может ничего не дать.
[04:26.000 --> 04:29.000]  Действительно, есть у нас такая проблема, правда?
[04:30.000 --> 04:31.000]  Вот.
[04:32.000 --> 04:34.000]  То есть это с одной стороны.
[04:34.000 --> 04:35.000]  Ну, вы, кажется, через нас решили.
[04:35.000 --> 04:36.000]  Нет.
[04:36.000 --> 04:37.000]  Нет.
[04:37.000 --> 04:40.000]  Через маски мы решили немножко другое.
[04:40.000 --> 04:44.000]  Через маски мы решили, мы сказали, мы вообще забили на скетчи.
[04:44.000 --> 04:46.000]  То есть через маски мы решили следующее.
[04:46.000 --> 04:59.000]  Мы сказали, что если эти x-ы мелкие, то есть они тоже не происходят, скажем w в степени 1 на 5, то тогда мы действительно там с помощью красивой битовой магии умеем искать лавербаунд и пербаунд за o от единицы.
[04:59.000 --> 05:00.000]  Вот.
[05:00.000 --> 05:05.000]  Более того, мы обнаружили, что в принципе, если там длина чисел будет даже w в степени...
[05:05.000 --> 05:14.000]  Там либо чисел будет там w в степени 4 поделить на 5, либо длина чисел будет w в степени 4 на 5, это нас тоже устроит.
[05:15.000 --> 05:17.000]  То есть, ну, по большому-то счету.
[05:17.000 --> 05:19.000]  Главное, чтобы эти блоки в w уместились.
[05:19.000 --> 05:22.000]  Ну, или в худшем случае в 2 w, в общем, тоже, наверное.
[05:22.000 --> 05:24.000]  Все числа на всей своей длиной.
[05:25.000 --> 05:26.000]  Ну да.
[05:26.000 --> 05:27.000]  Вот это.
[05:27.000 --> 05:34.000]  Ну, у нас такого нет, потому что у нас, к сожалению, суммарная длина чисел сейчас w на n, поэтому это нас...
[05:34.000 --> 05:36.000]  Поэтому так на халяву не устроит.
[05:36.000 --> 05:37.000]  Но вот уже...
[05:37.000 --> 05:43.000]  Но, по крайней мере, у нас хотя бы чисел мало, поэтому вот есть мечта как-то сравнивать по b-шкам.
[05:43.000 --> 05:44.000]  Что делать?
[05:45.000 --> 05:46.000]  Смотрите.
[05:47.000 --> 05:48.000]  Ну вот.
[05:48.000 --> 05:49.000]  Ну вот.
[05:49.000 --> 05:50.000]  Вот это две проблемы.
[05:50.000 --> 05:54.000]  То есть, во-первых, как с помощью скетчей действительно сравнивать, а во-вторых, как этот скетч вообще вычислять.
[05:54.000 --> 05:56.000]  Нам же еще скетч надо золотые единицы вычислить, правда?
[05:57.000 --> 06:00.000]  Просто так его тут вот это вот не выковыряешь.
[06:02.000 --> 06:03.000]  Вот.
[06:04.000 --> 06:05.000]  Ну или пока...
[06:05.000 --> 06:06.000]  Ну, точнее так.
[06:06.000 --> 06:11.000]  Если наша задача была бы просто справнивать числа по скетчу, то, конечно, можно было забабахать масочку,
[06:11.000 --> 06:14.000]  где единицы стоят в интересных битах и ноль иначе.
[06:14.000 --> 06:20.000]  И тогда n с любым x или там игроком это как раз вот там, так сказать, срезка этих интересных бит.
[06:20.000 --> 06:22.000]  Но тогда у вас маска будет длинная.
[06:22.000 --> 06:27.000]  Потому что интересные биты, они могут быть сколь угодно близко к началу, и сколь угодно близко к концу.
[06:28.000 --> 06:29.000]  Вот.
[06:29.000 --> 06:30.000]  То есть, тут вот.
[06:30.000 --> 06:31.000]  Поэтому нам...
[06:31.000 --> 06:33.000]  Ну, но это мы вот в будущем почешемся.
[06:33.000 --> 06:36.000]  А пока вот, смотри, сейчас будет самое сложное, что тут есть.
[06:36.000 --> 06:38.000]  Вот сейчас реально магия начнется.
[06:38.000 --> 06:39.000]  Тут вот...
[06:40.000 --> 06:43.000]  Сейчас вот тут надо включиться прям вот по максимуму.
[06:44.000 --> 06:46.000]  Сейчас, потому что возможно сейчас вот там...
[06:46.000 --> 06:47.000]  То есть, я не знаю.
[06:48.000 --> 06:52.000]  То есть, честно, что я, по-моему, суммарно вот над дальнейшим думал где-то дня два.
[06:54.000 --> 06:55.000]  Ну вот.
[06:55.000 --> 06:57.000]  И возможно сейчас еще один день будем думать вместе с вами.
[06:58.000 --> 06:59.000]  Нет, я надеюсь, что нет.
[06:59.000 --> 07:00.000]  Я себе тут...
[07:00.000 --> 07:01.000]  Вот, кстати, да.
[07:01.000 --> 07:07.000]  Просто если тут кто-то говорил о том, чтобы сфотографировать мой конспект, ну, можете это сделать.
[07:11.000 --> 07:12.000]  Вот.
[07:13.000 --> 07:15.000]  Так что мясо тут сейчас будет то еще.
[07:16.000 --> 07:17.000]  Ну, значит, смотрите.
[07:19.000 --> 07:20.000]  Конспект.
[07:20.000 --> 07:23.000]  Сейчас будем внимательно понимать, что будет.
[07:23.000 --> 07:24.000]  А именно.
[07:24.000 --> 07:25.000]  Итак, давайте себе представим.
[07:26.000 --> 07:29.000]  Найдем лавербаунд по скетчам.
[07:30.000 --> 07:35.000]  То есть, пусть обнаружилось, что у нас, ну, скажем, давайте, скетч...
[07:37.000 --> 07:41.000]  Значит, от какого-то экскратова оказался...
[07:42.000 --> 07:44.000]  Ну, допустим, я не знаю.
[07:46.000 --> 07:47.000]  Вот.
[07:47.000 --> 07:49.000]  Ну, давайте, равная отдельно.
[07:49.000 --> 07:50.000]  Давайте пока для простоты.
[07:50.000 --> 07:51.000]  Так.
[07:51.000 --> 07:55.000]  Скетч от х-степеника меньше, чем скетч от х.
[07:57.000 --> 07:58.000]  Вот.
[07:58.000 --> 07:59.000]  От игрок, да.
[07:59.000 --> 08:00.000]  У наших игрок пришел, да.
[08:01.000 --> 08:02.000]  Вот.
[08:02.000 --> 08:03.000]  Допустим, скетч от игрок.
[08:04.000 --> 08:11.000]  И он оказался меньше, чем скетч, значит, от х-степеника плюс один.
[08:12.000 --> 08:14.000]  Не в степени, а с индексом.
[08:15.000 --> 08:16.000]  Вот.
[08:16.000 --> 08:17.000]  Такая вот красота.
[08:20.000 --> 08:21.000]  Да.
[08:21.000 --> 08:23.000]  Значит, теперь, ну, идея такая.
[08:23.000 --> 08:24.000]  Хорошо.
[08:24.000 --> 08:26.000]  То есть, допустим, эти лавербы...
[08:27.000 --> 08:29.000]  Там такие кашки нашлись.
[08:31.000 --> 08:32.000]  Вот, да.
[08:32.000 --> 08:34.000]  Такие кашки нашлись и, собственно, хорошо.
[08:34.000 --> 08:36.000]  К чему это нас приводит?
[08:36.000 --> 08:40.000]  Давайте у этих вот соседей найдем ЛЦП.
[08:42.000 --> 08:43.000]  А именно, смотрите.
[08:43.000 --> 08:45.000]  Прямо по классическому...
[08:45.000 --> 08:47.000]  А, мы не знаем, что такое.
[08:48.000 --> 08:49.000]  Exactly.
[08:50.000 --> 08:52.000]  Ну, формально-то мы не знаем об этом, да.
[08:54.000 --> 08:55.000]  Значит, смотрите.
[08:55.000 --> 08:56.000]  Сейчас мы введем.
[08:56.000 --> 08:57.000]  Давайте.
[08:57.000 --> 08:58.000]  Вот давайте представим.
[08:58.000 --> 09:00.000]  Давайте пусть у меня это.
[09:01.000 --> 09:03.000]  Значит, L...
[09:04.000 --> 09:06.000]  Значит, Lкт, значит...
[09:06.000 --> 09:07.000]  Да и так, и так.
[09:08.000 --> 09:11.000]  Lкт это будет равно LЦП.
[09:14.000 --> 09:15.000]  Вот.
[09:15.000 --> 09:16.000]  Так.
[09:16.000 --> 09:17.000]  LЦП чего?
[09:18.000 --> 09:20.000]  Получается из скатова или...
[09:20.000 --> 09:21.000]  Ну, вот скетчей.
[09:21.000 --> 09:22.000]  Ну, допустим, да.
[09:23.000 --> 09:24.000]  Скетчей.
[09:24.000 --> 09:25.000]  LЦП, да.
[09:25.000 --> 09:27.000]  Скетч обязательно, да.
[09:27.000 --> 09:29.000]  Скетч от икскатова.
[09:30.000 --> 09:31.000]  Скетч.
[09:31.000 --> 09:32.000]  Ну, как сказать?
[09:32.000 --> 09:35.000]  То есть, я бы скорее сказал LЦП непосредственно скатовый.
[09:35.000 --> 09:37.000]  Нет, ну, найти их LЦП это как бы...
[09:37.000 --> 09:38.000]  Ну, мы помним.
[09:38.000 --> 09:40.000]  Это не проблема, потому что берем их к сор и смотрим,
[09:40.000 --> 09:41.000]  сколько там в начале нулей.
[09:41.000 --> 09:43.000]  Или что то же самое к те первые единицы.
[09:44.000 --> 09:45.000]  Вот.
[09:46.000 --> 09:48.000]  Да, то есть L, напоминаю, я тут...
[09:49.000 --> 09:50.000]  Ну, не напоминаю, да.
[09:50.000 --> 09:53.000]  Longest common prefix.
[09:56.000 --> 09:57.000]  Во.
[09:59.000 --> 10:03.000]  Lк плюс один будет равно то же самое.
[10:04.000 --> 10:05.000]  Скетч.
[10:07.000 --> 10:10.000]  Значит, х в степени ка плюс один.
[10:11.000 --> 10:13.000]  И, соответственно, скетч.
[10:14.000 --> 10:15.000]  От икск.
[10:18.000 --> 10:19.000]  Вот.
[10:24.000 --> 10:28.000]  Ну, во-первых, что в таком случае можно заметить?
[10:29.000 --> 10:34.000]  Вот давайте попробуем теперь мысленно нарисовать борь из иксов.
[10:36.000 --> 10:40.000]  А точнее то место, где там между ними затесался икс.
[10:42.000 --> 10:44.000]  Борь из иксов.
[10:44.000 --> 10:45.000]  Да.
[10:45.000 --> 10:46.000]  Мысленно.
[10:47.000 --> 10:48.000]  Ну, мысленно, да.
[10:48.000 --> 10:50.000]  Мы тут думаем, да.
[10:50.000 --> 10:52.000]  Как-то это сладновато мысленно.
[10:52.000 --> 10:53.000]  Зачем это вообще нам надо?
[10:54.000 --> 10:55.000]  Нет.
[10:55.000 --> 10:58.000]  А надо нам для того, чтобы вообразить, как эти иксы устроены
[10:58.000 --> 11:01.000]  и как все-таки найти лавербаунт или апербаунт.
[11:01.000 --> 11:03.000]  То есть в начале у нас такая идея была.
[11:03.000 --> 11:05.000]  Мы в начале просто имитировали правый блок чисто на иксах.
[11:05.000 --> 11:08.000]  А сейчас мы хотим, типа, давайте теперь посмотрим на этот блок, да?
[11:08.000 --> 11:09.000]  Нет.
[11:10.000 --> 11:12.000]  У нас цель та же.
[11:12.000 --> 11:16.000]  Нет, мы хотим найти лавербаунт игрока среди иксов.
[11:16.000 --> 11:21.000]  Мы нашли лавербаунт игрока среди, ну, по скетчам.
[11:21.000 --> 11:24.000]  И хотим теперь внимательно посмотреть на дерево иксов
[11:24.000 --> 11:30.000]  и понять, собственно, как и каким образом этот лавербаунт у игроков
[11:30.000 --> 11:33.000]  или апербаунт, сейчас как получится, надо искать.
[11:35.000 --> 11:37.000]  Значит, смотрите внимательно.
[11:39.000 --> 11:41.000]  Значит, напоминаю, да?
[11:41.000 --> 11:45.000]  То есть скетчи у нас устроены так, что иксы отсортированы не только сами по себе,
[11:45.000 --> 11:48.000]  то есть по своим значениям, но и по скетчам, помните, да?
[11:48.000 --> 11:50.000]  А теперь смотрите.
[11:51.000 --> 11:54.000]  Итак, значит, жил был корень.
[11:55.000 --> 11:57.000]  Вот он. Видите, да?
[11:57.000 --> 11:59.000]  Жил был корень.
[11:59.000 --> 12:02.000]  И шла от него дорожка.
[12:02.000 --> 12:05.000]  И шли по этой дорожке три брата.
[12:05.000 --> 12:09.000]  Икс-к, игрок и икс-к плюс эти.
[12:12.000 --> 12:15.000]  Но в какой-то момент эти дорожки разошлись.
[12:18.000 --> 12:20.000]  Ну, начнем со следующего.
[12:20.000 --> 12:23.000]  Во-первых, я утверждаю, что лк...
[12:24.000 --> 12:27.000]  Значит, когда же они могли разойтись?
[12:28.000 --> 12:31.000]  Ну, в первую очередь, конечно...
[12:35.000 --> 12:37.000]  Что-что.
[12:37.000 --> 12:39.000]  Ну вот, могло.
[12:39.000 --> 12:45.000]  Хотя заметим, что лк и лк плюс один, действительно, заметим сами по себе еще.
[12:45.000 --> 12:47.000]  То есть заметим, что пока...
[12:47.000 --> 12:51.000]  Во-первых, заметим, что пока икс-к и икс-к плюс один не разошлись между собой,
[12:51.000 --> 12:57.000]  игрок очень хотелось бы сказать, что игрок тоже находится между ними.
[12:57.000 --> 12:59.000]  Но это не так.
[12:59.000 --> 13:01.000]  Да.
[13:01.000 --> 13:03.000]  Действительно.
[13:03.000 --> 13:05.000]  Или, действительно, можно заметить в себе следующее, что...
[13:05.000 --> 13:08.000]  Мы просто можем сказать, что у нас есть такое l,
[13:08.000 --> 13:23.000]  которое равно lcp от скетч, значит, от икс-к и скетч от икс в степени k плюс один.
[13:23.000 --> 13:26.000]  Да, мы могли бы себе такое заявить.
[13:26.000 --> 13:28.000]  Ну а что мы видим?
[13:28.000 --> 13:31.000]  Видим мы следующее.
[13:31.000 --> 13:33.000]  Значит, хорошо.
[13:33.000 --> 13:35.000]  Жил был икс.
[13:35.000 --> 13:39.000]  Вот икс и икс-к, да, они в какой-то момент, конечно, разошлись.
[13:39.000 --> 13:44.000]  И, да, на этот раз мы его точно знаем.
[13:44.000 --> 13:48.000]  То есть этот момент произошел на каком уровне?
[13:48.000 --> 13:51.000]  Уровень мы не скажем, мы скажем на каком ветвении.
[13:51.000 --> 13:53.000]  Ну, я бы сказал так.
[13:53.000 --> 13:57.000]  Этот уровень bl плюс один, я бы даже сказал.
[13:57.000 --> 13:59.000]  Ну да.
[13:59.000 --> 14:00.000]  Да.
[14:00.000 --> 14:02.000]  Это вот очень интересно получилось.
[14:02.000 --> 14:04.000]  Да.
[14:04.000 --> 14:06.000]  Ну теперь смотрите.
[14:06.000 --> 14:09.000]  Так мы были положены, что ветвление там произошло?
[14:09.000 --> 14:11.000]  Ну, по определению.
[14:11.000 --> 14:13.000]  Подождите секундочку.
[14:13.000 --> 14:15.000]  Потому что, смотрите, когда идут иксы,
[14:15.000 --> 14:19.000]  заметим, что только биты скетча определяют, в какой момент они расходятся.
[14:19.000 --> 14:23.000]  А почему они не могут включаться в дня скетча?
[14:23.000 --> 14:27.000]  По определению того, что такое скетчевые биты.
[14:27.000 --> 14:32.000]  Помните, биты, скетчевые биты, помните, это в точности те биты,
[14:32.000 --> 14:35.000]  в которых вообще какие-то развилки происходят у иксов.
[14:35.000 --> 14:37.000]  Вот именно у иксов.
[14:37.000 --> 14:41.000]  Вот.
[14:41.000 --> 14:45.000]  Так что вот.
[14:45.000 --> 14:47.000]  То есть что получается?
[14:48.000 --> 14:50.000]  Что-что?
[14:50.000 --> 14:52.000]  Нумерация бэшек у нас с нуля идет.
[14:52.000 --> 14:54.000]  Может, там все-таки л?
[14:54.000 --> 14:58.000]  Нумерация бэшек?
[14:58.000 --> 15:00.000]  Каких бэшек?
[15:00.000 --> 15:02.000]  Ну, которые как-то интересные биты.
[15:02.000 --> 15:04.000]  Ну, с нуля, да, что?
[15:04.000 --> 15:07.000]  Может, они совсем не понимают, что там бэш с 1.
[15:07.000 --> 15:09.000]  Ну, lcp это количество.
[15:09.000 --> 15:11.000]  Это длина.
[15:11.000 --> 15:13.000]  А, ну тогда да, согласен.
[15:13.000 --> 15:15.000]  Все, уговорили, уговорили.
[15:15.000 --> 15:17.000]  Уговорили, уговорили.
[15:23.000 --> 15:25.000]  Значит, теперь?
[15:25.000 --> 15:27.000]  Ну, а теперь возникает вопрос.
[15:27.000 --> 15:31.000]  Где от этой всей братьи ответвился игрок?
[15:31.000 --> 15:33.000]  Привет.
[15:33.000 --> 15:35.000]  Здрасьте.
[15:35.000 --> 15:39.000]  Добро пожаловать.
[15:39.000 --> 15:43.000]  Итак, где от этой всей братьи ответвился игрок?
[15:43.000 --> 15:47.000]  Ну, у нас на самом деле, да, тут есть.
[15:47.000 --> 15:49.000]  Гарантировать я могу только одно.
[15:49.000 --> 15:53.000]  Он не ответвился от этой братьи конкретно в этой точке.
[15:59.000 --> 16:01.000]  Игрок.
[16:01.000 --> 16:03.000]  Игрок.
[16:13.000 --> 16:19.000]  Так что вот, действительно, вот такая у нас тут красота получается.
[16:23.000 --> 16:27.000]  Но теперь мы думаем вот о чем.
[16:31.000 --> 16:33.000]  Да.
[16:33.000 --> 16:37.000]  Потому что, да, у нас тут как бы разветвление прям на три различные ветки.
[16:37.000 --> 16:39.000]  Такого у нас не бывает.
[16:39.000 --> 16:41.000]  Вот.
[16:41.000 --> 16:45.000]  То есть она произошла либо где-то выше этой точки, либо где-то ниже.
[16:45.000 --> 16:49.000]  Ну, мы можем легко вычислить, где это произошло.
[16:49.000 --> 16:53.000]  Но давайте внимательно думать.
[16:53.000 --> 16:59.000]  Внимательно думать на тему того, что делать, если вот игрок, например, ответвился вот сюда.
[16:59.000 --> 17:05.000]  Ну, давайте без особого ограничения общества выяснилось, что он пошел вправо.
[17:05.000 --> 17:11.000]  Ну, в общем-то, если влево, понятно, что рассуждения будут симметричны.
[17:11.000 --> 17:15.000]  Тогда смотрите, что произошло.
[17:15.000 --> 17:21.000]  Мы можем найти LCP не только по скетчам, но и по, так сказать, обычным эксам.
[17:21.000 --> 17:23.000]  Вот.
[17:23.000 --> 17:25.000]  Что-что?
[17:25.000 --> 17:27.000]  В смысле?
[17:27.000 --> 17:29.000]  Нет, LCP саму по себе мы ищем за лот единицы.
[17:29.000 --> 17:31.000]  Если задача...
[17:31.000 --> 17:37.000]  Да, то есть более интересная задача, это как бы если вот у нас тут вот стоят вот эти вот пум-пум-пум-пум-пум.
[17:37.000 --> 17:39.000]  И прочие пум-пум-пум.
[17:39.000 --> 17:41.000]  Да?
[17:41.000 --> 17:43.000]  Вот, пум-пум-пум, да?
[17:43.000 --> 17:45.000]  Что?
[17:45.000 --> 17:49.000]  Да, это уровни вот этих интересных битов.
[17:49.000 --> 17:55.000]  Развилка, да, помните, развилка не обязана быть на интересном бите.
[17:55.000 --> 17:59.000]  Более того, скорее всего, если она выше, то ее там и не будет.
[17:59.000 --> 18:01.000]  Вот.
[18:01.000 --> 18:05.000]  Но тогда к чему это нас приводит?
[18:05.000 --> 18:09.000]  Итак, вот допустим, у нас тут...
[18:09.000 --> 18:11.000]  Ну, где-то вот, допустим, нашелся вот этот вот...
[18:11.000 --> 18:19.000]  То есть более интересно, конечно, может быть, для нас даже найти, а между какими интересными битами эта развилка вообще произошла.
[18:19.000 --> 18:21.000]  Вот.
[18:21.000 --> 18:29.000]  Но, как вы уже догадались, там б-шки сами по себе числа маленькие, поэтому бинпоиск по ним мы за вот единицу уже делать умеем.
[18:29.000 --> 18:31.000]  Что?
[18:31.000 --> 18:35.000]  А, потому что у нас уже есть...
[18:35.000 --> 18:37.000]  Сейчас надо вспомнить, что такое б-шки.
[18:37.000 --> 18:41.000]  Б-шки числа да в.
[18:41.000 --> 18:45.000]  А, хотя нет. Да-да-да, согласен. Не так, что...
[18:45.000 --> 18:47.000]  Не донбух в степени в, да в, это неплохо.
[18:47.000 --> 18:49.000]  Так.
[18:49.000 --> 18:51.000]  Их длина.
[18:51.000 --> 18:54.000]  Ну, да. То есть их да в, да в, это не более чем там...
[18:54.000 --> 18:56.000]  Не, ну, как сказать?
[18:56.000 --> 18:58.000]  Да, длина их, к сожалению, да, не очень велика.
[18:58.000 --> 19:00.000]  Но с другой стороны...
[19:00.000 --> 19:02.000]  Не, хотя...
[19:02.000 --> 19:04.000]  Нет, хотя, погодите, это вообще легко.
[19:04.000 --> 19:05.000]  Потому что...
[19:05.000 --> 19:13.000]  Нет, смотрите, это-то сделать может достаточно легко, потому что вы просто заводите масочку, где единичные биты, они, анолики, все остальные.
[19:13.000 --> 19:15.000]  Вот.
[19:15.000 --> 19:27.000]  И, соответственно, если вы хотите там какое-то число да в, действительно найти, где оно между ними, вы там создаете для этого бита масочку, где, начиная с этого места, стоят все единички, и там делаете энд, все.
[19:30.000 --> 19:32.000]  Ну, просто смотрите, ваша...
[19:32.000 --> 19:34.000]  Вот давайте, задача. Да, но число ц.
[19:34.000 --> 19:39.000]  Вы хотите его вставить вот куда-то в этот ряд, да?
[19:39.000 --> 19:41.000]  Вот, значит, вставили.
[19:41.000 --> 19:43.000]  Бум, бум, бум, бум.
[19:43.000 --> 19:45.000]  И хотите вот найти какой-то ц.
[19:45.000 --> 19:47.000]  Значит, что вы делаете?
[19:47.000 --> 19:49.000]  Значит, вы создаете масочку.
[19:49.000 --> 19:55.000]  0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0.
[19:55.000 --> 19:57.000]  И так далее.
[19:57.000 --> 20:01.000]  Где вот это вот б0 бит, это б1 бит, б2 б3.
[20:01.000 --> 20:03.000]  И так далее.
[20:03.000 --> 20:05.000]  В конце b-1.
[20:05.000 --> 20:07.000]  Вот, понимаете, да?
[20:07.000 --> 20:09.000]  Вот.
[20:09.000 --> 20:11.000]  А с какой-нибудь ц вы теперь делаете все очень просто.
[20:11.000 --> 20:13.000]  То есть, по ц вы делаете так.
[20:13.000 --> 20:17.000]  То есть, по ц вы создаете масочку.
[20:17.000 --> 20:25.000]  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1.
[20:25.000 --> 20:29.000]  Где вот, начиная с этого бита.
[20:35.000 --> 20:39.000]  Ну да, но эту масочку-то вы за 1 как-нибудь выковырите.
[20:39.000 --> 20:41.000]  А там 2 в какой-нибудь степени минус 1.
[20:43.000 --> 20:45.000]  Так что это мне не очень интересно.
[20:45.000 --> 20:47.000]  Вот. Ну а теперь вам остается только по
[20:47.000 --> 20:49.000]  entity эту масочку с этой масочкой.
[20:49.000 --> 20:51.000]  И найти первую единичку.
[20:51.000 --> 20:53.000]  Все.
[20:53.000 --> 20:55.000]  Поздра.
[20:55.000 --> 20:57.000]  Да.
[20:57.000 --> 20:59.000]  Ну вот upper bound будет.
[20:59.000 --> 21:01.000]  Ну вообще lower bound, если быть точнее.
[21:03.000 --> 21:05.000]  Ну там это уже...
[21:05.000 --> 21:07.000]  Нет.
[21:07.000 --> 21:09.000]  Общий префикс тут ни при чем.
[21:11.000 --> 21:13.000]  Ну нам было интересно,
[21:13.000 --> 21:15.000]  дано число c,
[21:15.000 --> 21:17.000]  да w.
[21:17.000 --> 21:19.000]  И нам интересно, где, и нам его интересно
[21:19.000 --> 21:21.000]  найти в вот этих вот битах.
[21:25.000 --> 21:27.000]  Зачем?
[21:27.000 --> 21:29.000]  А это надо было для того, чтобы понять,
[21:29.000 --> 21:31.000]  что вот эта развилка, которая lcp,
[21:31.000 --> 21:33.000]  где она находится. Да вот.
[21:33.000 --> 21:35.000]  Как бы вот это вот lcp.
[21:35.000 --> 21:37.000]  Да.
[21:37.000 --> 21:39.000]  Но это просто не путать.
[21:39.000 --> 21:41.000]  То есть как бы это я говорю,
[21:41.000 --> 21:43.000]  что мы тут применяем черный ящик, а тут я рассказываю,
[21:43.000 --> 21:45.000]  как этот черный ящик работает. Поэтому желательно их не смешивать.
[21:49.000 --> 21:51.000]  Нет.
[21:51.000 --> 21:53.000]  И y сам по себе не до w.
[21:53.000 --> 21:55.000]  Да,
[21:55.000 --> 21:57.000]  в двух степени w.
[21:59.000 --> 22:01.000]  Да.
[22:01.000 --> 22:03.000]  Но как-то вы хотите
[22:03.000 --> 22:05.000]  сделать число с битом
[22:05.000 --> 22:07.000]  на где-то примерно
[22:07.000 --> 22:09.000]  в два степени w.
[22:09.000 --> 22:11.000]  При этом то, что у вас w и b.
[22:11.000 --> 22:13.000]  Нет, в смысле 2.
[22:13.000 --> 22:15.000]  Мы же здесь что говорим, давайте помещем
[22:15.000 --> 22:17.000]  числу c.
[22:17.000 --> 22:19.000]  Да, но c это не y.
[22:19.000 --> 22:21.000]  c это
[22:21.000 --> 22:23.000]  lcp y и
[22:23.000 --> 22:25.000]  x вот этих.
[22:25.000 --> 22:27.000]  Причем lcp как длина,
[22:27.000 --> 22:29.000]  а не как 2 в степени эта длина.
[22:29.000 --> 22:31.000]  То есть условно,
[22:31.000 --> 22:33.000]  если я возьму их к сорс, сколько у меня там в начале
[22:33.000 --> 22:35.000]  будет общих ноликов.
[22:35.000 --> 22:37.000]  Поэтому развилка где-то здесь.
[22:37.000 --> 22:39.000]  Хорошо, нашли.
[22:41.000 --> 22:43.000]  Но теперь
[22:43.000 --> 22:45.000]  что нам надо понять?
[22:45.000 --> 22:47.000]  Теперь надо понять, какие x
[22:47.000 --> 22:49.000]  у нас теперь меньше y,
[22:49.000 --> 22:51.000]  точнее с какими скетчами,
[22:51.000 --> 22:53.000]  а какие больше.
[22:55.000 --> 22:57.000]  Но теперь
[22:57.000 --> 22:59.000]  заметим следующее.
[22:59.000 --> 23:01.000]  Вот давайте я тут еще побольше уровней нарисую.
[23:19.000 --> 23:21.000]  Но теперь заметим следующее.
[23:21.000 --> 23:23.000]  Во-первых,
[23:23.000 --> 23:25.000]  заметим теперь следующее, что
[23:25.000 --> 23:27.000]  все x, у которых lcp
[23:27.000 --> 23:29.000]  с вот этими вот x
[23:29.000 --> 23:31.000]  то есть ответвление идет
[23:31.000 --> 23:33.000]  хотя бы здесь или ниже,
[23:33.000 --> 23:35.000]  они все строго меньше y.
[23:41.000 --> 23:43.000]  Ну конечно, как всегда.
[23:45.000 --> 23:47.000]  Ну конечно, это естественно
[23:47.000 --> 23:49.000]  как-то у нас лево-направо все идет.
[23:51.000 --> 23:53.000]  То есть с одной стороны,
[23:53.000 --> 23:55.000]  да, то есть когда у нас все lcp
[23:55.000 --> 23:57.000]  такие, но с другой стороны, если у нас
[23:57.000 --> 23:59.000]  развилка,
[23:59.000 --> 24:01.000]  ну вот, но с другой стороны, что у нас еще может быть?
[24:23.000 --> 24:25.000]  Ну вот.
[24:25.000 --> 24:27.000]  Так вот, посмотрите.
[24:27.000 --> 24:29.000]  То есть на самом деле у всех товарищей, которые доходят
[24:29.000 --> 24:31.000]  до сюда, ну просто у всех, которые
[24:31.000 --> 24:33.000]  дошли до сюда, они все по-любому меньше игр,
[24:33.000 --> 24:35.000]  правда?
[24:35.000 --> 24:37.000]  Вот.
[24:37.000 --> 24:39.000]  А еще все, кто, ну вот,
[24:39.000 --> 24:41.000]  а дальше все, кто ответвляется выше,
[24:41.000 --> 24:43.000]  чем вот это вот место развилки,
[24:43.000 --> 24:45.000]  все, кто
[24:45.000 --> 24:47.000]  выше, они, ну тут
[24:47.000 --> 24:49.000]  как повезет, тут в зависимости от того, куда
[24:49.000 --> 24:51.000]  они ответвились, либо они ответвились в левые, они
[24:51.000 --> 24:53.000]  меньше, чем x-каты,
[24:53.000 --> 24:55.000]  либо они ответвились
[24:55.000 --> 24:57.000]  вправо, и тогда
[24:57.000 --> 24:59.000]  они оказались больше, чем игр.
[24:59.000 --> 25:01.000]  Вот.
[25:03.000 --> 25:05.000]  Ну вот.
[25:05.000 --> 25:07.000]  Но нас интересует, да,
[25:07.000 --> 25:09.000]  самый правый, кто ответвился.
[25:09.000 --> 25:11.000]  То есть нас интересует, да.
[25:11.000 --> 25:13.000]  То есть фактически, если мы ищем вот ближайший
[25:13.000 --> 25:15.000]  снизу, который там, допустим, меньше
[25:15.000 --> 25:17.000]  нас,
[25:17.000 --> 25:19.000]  или там меньше нас, то
[25:19.000 --> 25:21.000]  мы заметим, что нас интересует,
[25:21.000 --> 25:23.000]  то есть нас интересует в точности
[25:23.000 --> 25:25.000]  тот, кто ответвится
[25:25.000 --> 25:27.000]  вот от x-а, ну хотя бы
[25:27.000 --> 25:29.000]  здесь.
[25:29.000 --> 25:31.000]  А как это сделать?
[25:31.000 --> 25:33.000]  А идея очень проста.
[25:33.000 --> 25:35.000]  Ведь тот, кто ответвится, кто дойдет
[25:35.000 --> 25:37.000]  с x-ом хотя бы до сюда,
[25:39.000 --> 25:41.000]  он имеет скетч, который
[25:41.000 --> 25:43.000]  в точности совпадает с вот
[25:43.000 --> 25:45.000]  этими вот битами, как мы вот сюда шли-шли-шли,
[25:45.000 --> 25:47.000]  и вот с этими битами он совпадает.
[25:47.000 --> 25:49.000]  Да?
[25:49.000 --> 25:51.000]  А дальше, ну дальше все что угодно.
[25:51.000 --> 25:53.000]  То есть заметим,
[25:53.000 --> 25:55.000]  тот, у кого вот этот скетч хотя бы
[25:55.000 --> 25:57.000]  дошел до сюда,
[25:57.000 --> 25:59.000]  то есть тот уже по-любому меньше игр.
[25:59.000 --> 26:01.000]  То есть фактически у нас появилось практически
[26:01.000 --> 26:03.000]  необходимые достаточные условия.
[26:05.000 --> 26:07.000]  Вот, понимаете, да?
[26:09.000 --> 26:11.000]  Ну вот, практически, кто вот
[26:11.000 --> 26:13.000]  кто, соответственно, до сюда дошел?
[26:13.000 --> 26:15.000]  Ну почему?
[26:15.000 --> 26:17.000]  Ну сами по себе хотя бы xk,
[26:17.000 --> 26:19.000]  txk плюс 1.
[26:19.000 --> 26:21.000]  Да, вообще в любом месте.
[26:21.000 --> 26:23.000]  Да, вообще в любом месте, да.
[26:23.000 --> 26:25.000]  То есть главное вот тут ответвились, тут, может быть
[26:25.000 --> 26:27.000]  где-то даже тут, там мало ли.
[26:27.000 --> 26:29.000]  То есть самое
[26:29.000 --> 26:31.000]  самое главное, что вот на месте этой
[26:31.000 --> 26:33.000]  развилки они пошли, ну вот,
[26:33.000 --> 26:35.000]  то есть они как бы пошли не к игроку,
[26:35.000 --> 26:37.000]  но вот они пошли вместе с x-ами.
[26:37.000 --> 26:39.000]  То есть они как бы либо пошли с x-ами, либо когда-то раньше
[26:39.000 --> 26:41.000]  ответвились.
[26:41.000 --> 26:43.000]  Но тогда идея такая,
[26:43.000 --> 26:45.000]  тогда я утверждаю, что все, что нам нужно
[26:45.000 --> 26:47.000]  это, вот смотрите, если вот взять
[26:47.000 --> 26:49.000]  вот эти вот, тогда надо взять
[26:49.000 --> 26:51.000]  вот эти биты.
[26:51.000 --> 26:53.000]  Значит, все остальные биты объявить
[26:53.000 --> 26:55.000]  1, 1, 1, 1 там, ну и так далее,
[26:55.000 --> 26:57.000]  в общем один в скетче, да?
[26:59.000 --> 27:01.000]  И найти максимальный
[27:01.000 --> 27:03.000]  x, у которого скетч
[27:03.000 --> 27:05.000]  не превосходит вот этой штуке.
[27:05.000 --> 27:07.000]  И получится
[27:07.000 --> 27:09.000]  ровно то, что нам нужно.
[27:11.000 --> 27:13.000]  То есть как бы нам второй раз придется
[27:13.000 --> 27:15.000]  запросить там лавербаун и апербаун
[27:15.000 --> 27:17.000]  там по скетчам,
[27:17.000 --> 27:19.000]  но это уже вот единицы.
[27:19.000 --> 27:21.000]  То есть нам потребуется не один запрос, а два.
[27:21.000 --> 27:23.000]  Ну правда да, конечно вы помните,
[27:23.000 --> 27:25.000]  что это мы только один случай рассмотрели.
[27:27.000 --> 27:29.000]  Нет, потому что нет, нет, второй
[27:29.000 --> 27:31.000]  случай, нет, второй случай, дело
[27:31.000 --> 27:33.000]  даже не в том, что там игрок идет вот вправо
[27:33.000 --> 27:35.000]  или влево, ну понятно, что если влево, то да, там
[27:35.000 --> 27:37.000]  симметрично. Просто тут будет не
[27:37.000 --> 27:39.000]  1, 1, 1, 1 допустим, а там будет
[27:39.000 --> 27:41.000]  в какой-то момент 0, 0, 0.
[27:41.000 --> 27:43.000]  Да, это не очень интересно.
[27:43.000 --> 27:45.000]  Просто нет,
[27:45.000 --> 27:47.000]  есть более содержательный случай,
[27:47.000 --> 27:49.000]  это если игрок оказался где-то здесь.
[27:53.000 --> 27:55.000]  Вот.
[27:55.000 --> 27:57.000]  Ну вот, а вот с этим случаем
[27:57.000 --> 27:59.000]  вроде как все достаточно тривиально.
[28:01.000 --> 28:03.000]  Вот, есть ли тут какие-то вопросы?
[28:03.000 --> 28:05.000]  Пока не умеем.
[28:05.000 --> 28:07.000]  Научимся.
[28:07.000 --> 28:09.000]  Нет, научимся чуть позже, да.
[28:09.000 --> 28:11.000]  Вот мы научимся
[28:11.000 --> 28:13.000]  это делать.
[28:13.000 --> 28:15.000]  То есть там отдельный замок
[28:15.000 --> 28:17.000]  будет сразу.
[28:19.000 --> 28:21.000]  То есть вот.
[28:21.000 --> 28:23.000]  Значит теперь, значит теперь
[28:23.000 --> 28:25.000]  второе. Итак,
[28:25.000 --> 28:27.000]  снова, жили-были три брата.
[28:27.000 --> 28:29.000]  Да, двое родных.
[28:29.000 --> 28:31.000]  Три брата.
[28:31.000 --> 28:33.000]  Да, двое родных, третьи
[28:33.000 --> 28:35.000]  затесавшиеся. Вот.
[28:35.000 --> 28:37.000]  Так, вот давайте, значит.
[28:37.000 --> 28:39.000]  Так, давайте заново.
[28:39.000 --> 28:41.000]  Как-то обнулим
[28:41.000 --> 28:43.000]  картинку.
[28:43.000 --> 28:45.000]  Да, как говорят в юмористических кругах.
[28:45.000 --> 28:47.000]  Так.
[28:47.000 --> 28:49.000]  Юмористических.
[28:49.000 --> 28:51.000]  Вот.
[28:51.000 --> 28:53.000]  Так, значит
[28:53.000 --> 28:55.000]  смотрите. Итак, жили-были опять
[28:55.000 --> 28:57.000]  жили-были опять
[28:59.000 --> 29:01.000]  жили-были опять три брата.
[29:01.000 --> 29:03.000]  Значит, xk, yk,
[29:03.000 --> 29:05.000]  xk плюс один.
[29:05.000 --> 29:07.000]  И были у них k и k плюс один сверху,
[29:07.000 --> 29:09.000]  а не снизу.
[29:09.000 --> 29:11.000]  Вот.
[29:11.000 --> 29:13.000]  И обнаружили мы, что
[29:13.000 --> 29:15.000]  до места, где братья xk
[29:15.000 --> 29:17.000]  и k плюс первый расстались,
[29:17.000 --> 29:19.000]  игр шел вместе с ними.
[29:21.000 --> 29:23.000]  И обнаружили, что
[29:23.000 --> 29:25.000]  если один пошел по короткой дороге,
[29:25.000 --> 29:27.000]  другой по длинной, то игр по средней
[29:27.000 --> 29:29.000]  пойти не мог.
[29:29.000 --> 29:31.000]  И вот там была только бинарная развилка.
[29:31.000 --> 29:33.000]  Вот.
[29:33.000 --> 29:35.000]  Поэтому, значит,
[29:35.000 --> 29:37.000]  поэтому игр куда-то с кем-то
[29:37.000 --> 29:39.000]  пошел.
[29:39.000 --> 29:41.000]  А.
[29:41.000 --> 29:43.000]  Если смотреть на sketch
[29:43.000 --> 29:45.000]  xk и xk плюс первое,
[29:45.000 --> 29:47.000]  то у них то это место,
[29:47.000 --> 29:49.000]  sketch совпадает об этом вместе
[29:49.000 --> 29:51.000]  развилки, они означают суть.
[29:51.000 --> 29:53.000]  Ну да.
[29:53.000 --> 29:55.000]  А у y?
[29:55.000 --> 29:57.000]  Часто же совпадает, но
[29:57.000 --> 29:59.000]  не только sketch.
[29:59.000 --> 30:01.000]  Да, мы же
[30:01.000 --> 30:03.000]  с отдельной lcp-шкой выясняем,
[30:03.000 --> 30:05.000]  где тут ответвление.
[30:05.000 --> 30:07.000]  И вот мы выяснили, что оно где-то ниже.
[30:07.000 --> 30:09.000]  Погодите.
[30:09.000 --> 30:11.000]  А, сейчас подумаю.
[30:11.000 --> 30:13.000]  Сейчас подумаем еще.
[30:13.000 --> 30:15.000]  Смотрите.
[30:15.000 --> 30:17.000]  Потому что и пошел у нас x, и пошел у нас,
[30:17.000 --> 30:19.000]  допустим, туда игр.
[30:21.000 --> 30:23.000]  Вот.
[30:23.000 --> 30:25.000]  Вот.
[30:25.000 --> 30:27.000]  Смотрите, что могло бы...
[30:27.000 --> 30:29.000]  Это произошло, напоминаю,
[30:29.000 --> 30:31.000]  на уровне, как вы помните, bl.
[30:37.000 --> 30:39.000]  Ну вот.
[30:39.000 --> 30:41.000]  Тут это и тут
[30:41.000 --> 30:43.000]  xk, допустим, плюс 1.
[30:43.000 --> 30:45.000]  Вот.
[30:47.000 --> 30:49.000]  Ну, в принципе, на самом деле,
[30:49.000 --> 30:51.000]  отсюда можно автоматически выяснить,
[30:51.000 --> 30:53.000]  что на самом деле вот это число
[30:53.000 --> 30:55.000]  и вот это число явно совпадают.
[30:55.000 --> 30:57.000]  А, впрочем, это...
[30:57.000 --> 30:59.000]  Ладно. Вру-вру-вру, это неправда.
[30:59.000 --> 31:01.000]  Вот.
[31:01.000 --> 31:03.000]  Господи, зачем эти числа определили?
[31:03.000 --> 31:05.000]  Они не нужны нам вообще. Вот.
[31:05.000 --> 31:07.000]  Ну, потому что дальше...
[31:07.000 --> 31:09.000]  Теперь смотрите.
[31:09.000 --> 31:11.000]  Ну, сами по себе вот эти l-ки
[31:11.000 --> 31:13.000]  может не обязательно.
[31:13.000 --> 31:15.000]  Видимо, они нужны были только для того,
[31:15.000 --> 31:17.000]  чтобы ввести log с common prefix и убедиться,
[31:17.000 --> 31:19.000]  что мы их умеем считать.
[31:19.000 --> 31:21.000]  Да. А так нужны ли они нам
[31:21.000 --> 31:23.000]  или какие-то другие lc?
[31:23.000 --> 31:25.000]  А это уже другой вопрос.
[31:25.000 --> 31:27.000]  Но, как я уже сказал,
[31:27.000 --> 31:29.000]  мы не срисовываем заклинания,
[31:29.000 --> 31:31.000]  мы работаем мозгом.
[31:31.000 --> 31:33.000]  Вот. Значит, смотрите.
[31:33.000 --> 31:35.000]  Вот.
[31:35.000 --> 31:37.000]  Вот, допустим, пока без ограничений обществе
[31:37.000 --> 31:39.000]  он пошел вместе с xk.
[31:39.000 --> 31:41.000]  Как всегда, если xk плюс 1, значит, симметрично
[31:41.000 --> 31:43.000]  обсуждаем потом.
[31:43.000 --> 31:45.000]  Теперь еще. И пошли мы на
[31:45.000 --> 31:47.000]  xk.
[31:47.000 --> 31:49.000]  И ответвились.
[31:49.000 --> 31:51.000]  Если нам фортануло, и он ответвился
[31:51.000 --> 31:53.000]  в сторону соседа,
[31:53.000 --> 31:55.000]  в сторону xk плюс 1,
[31:59.000 --> 32:01.000]  то что надо в этом случае делать?
[32:01.000 --> 32:03.000]  Играть.
[32:07.000 --> 32:09.000]  Да. И меньше, чем
[32:09.000 --> 32:11.000]  xk плюс 1.
[32:11.000 --> 32:13.000]  То есть на этом все с вами были, подписывайтесь.
[32:13.000 --> 32:15.000]  Соответственно.
[32:15.000 --> 32:17.000]  Да.
[32:17.000 --> 32:19.000]  Да, можно даже заранее
[32:19.000 --> 32:21.000]  проверить, что если мы по скейтчу нашли
[32:21.000 --> 32:23.000]  xk и xk плюс 1, и нам фортануло игр
[32:23.000 --> 32:25.000]  действительно лежать между ними, то, в общем-то,
[32:25.000 --> 32:27.000]  больше можно ничего не делать.
[32:27.000 --> 32:29.000]  Но нам могло не фортануть.
[32:29.000 --> 32:31.000]  Вот.
[32:31.000 --> 32:33.000]  Как это?
[32:33.000 --> 32:35.000]  Как бы это могло произойти?
[32:35.000 --> 32:37.000]  Вот такая ситуация.
[32:37.000 --> 32:39.000]  Вот.
[32:39.000 --> 32:41.000]  Вот.
[32:41.000 --> 32:43.000]  Вот, собственно,
[32:43.000 --> 32:45.000]  где-то оно
[32:45.000 --> 32:47.000]  куда-то
[32:47.000 --> 32:49.000]  не туда пошло.
[32:51.000 --> 32:53.000]  Ну, теперь думаем, да, где
[32:53.000 --> 32:55.000]  это могло произойти?
[32:55.000 --> 32:57.000]  Это опять произошло,
[32:57.000 --> 32:59.000]  как это уже у нас неоднократно
[32:59.000 --> 33:01.000]  бывало, между какими-то
[33:01.000 --> 33:03.000]  двумя битами.
[33:03.000 --> 33:05.000]  А может, даже, кстати...
[33:05.000 --> 33:07.000]  Да, здесь он мог
[33:07.000 --> 33:09.000]  на какой-нибудь уровень напасть, это да.
[33:09.000 --> 33:11.000]  Ну, а мы попробуем
[33:11.000 --> 33:13.000]  как бы
[33:13.000 --> 33:15.000]  сделать рассуждение.
[33:15.000 --> 33:17.000]  Мы попробуем сделать рассуждение, которое
[33:17.000 --> 33:19.000]  нам, в общем-то, с этого
[33:19.000 --> 33:21.000]  сильно не поможет.
[33:23.000 --> 33:25.000]  Вот. Ну, теперь думаем.
[33:25.000 --> 33:27.000]  То есть мы понимаем,
[33:27.000 --> 33:29.000]  что, нет, пока мы идем здесь,
[33:29.000 --> 33:31.000]  вправо никто не ответвился.
[33:33.000 --> 33:35.000]  Ну, пока вы идете здесь.
[33:35.000 --> 33:37.000]  Вот здесь вот ответвление вправо быть не могло.
[33:37.000 --> 33:39.000]  Согласны?
[33:41.000 --> 33:43.000]  Ну, я отвержаю, что пока мы идем здесь,
[33:43.000 --> 33:45.000]  вот по игроку, вот тут вправо
[33:45.000 --> 33:47.000]  ответвиться никто не мог. Кроме вот
[33:47.000 --> 33:49.000]  xk здесь.
[33:49.000 --> 33:51.000]  Да.
[33:51.000 --> 33:53.000]  Да, потому что
[33:53.000 --> 33:55.000]  вообще, на самом деле, от xk тут просто
[33:55.000 --> 33:57.000]  сюда никто не пойдет.
[33:57.000 --> 33:59.000]  То есть, заметим маленькую
[33:59.000 --> 34:01.000]  приятную вещь. Опять.
[34:01.000 --> 34:03.000]  То есть, мы заметим маленькую приятную вещь,
[34:03.000 --> 34:05.000]  что все ответвления, которые
[34:05.000 --> 34:07.000]  попадают вот между y и
[34:07.000 --> 34:09.000]  xk, они находятся
[34:09.000 --> 34:11.000]  вот где-то вот
[34:11.000 --> 34:13.000]  здесь.
[34:13.000 --> 34:15.000]  А, то есть мы сверху даже
[34:15.000 --> 34:17.000]  между xk плюс 1 и xk мы даже не могли
[34:17.000 --> 34:19.000]  влево пойти, ну когда мы отключили?
[34:19.000 --> 34:21.000]  Нет, вправо-то мы могли пойти, но мы уже не случайно
[34:21.000 --> 34:23.000]  быстро выяснили, что если мы пошли вправо,
[34:23.000 --> 34:25.000]  то мы уже победили, значит просто игрок лежит
[34:25.000 --> 34:27.000]  по значению между xk и xk плюс 1.
[34:27.000 --> 34:29.000]  Нет, нет, в этой ситуации у нас нет
[34:29.000 --> 34:31.000]  никаких игроков, которые идут вправо уже, когда мы не
[34:31.000 --> 34:33.000]  ели xk плюс 1. Конечно.
[34:33.000 --> 34:35.000]  Это раз, а во-вторых, могут ли они пойти влево
[34:35.000 --> 34:37.000]  между точкой ответвления y
[34:37.000 --> 34:39.000]  и верхней точкой ответвления
[34:39.000 --> 34:41.000]  xk плюс 1? Вот между этими?
[34:41.000 --> 34:43.000]  Да, да, да. Влево они пойти
[34:43.000 --> 34:45.000]  конечно будут. Да, вот этого
[34:45.000 --> 34:47.000]  добра тут, конечно, навалом.
[34:47.000 --> 34:49.000]  И тут этого добра навалом, и даже вот
[34:49.000 --> 34:51.000]  вот такой, вот так вот.
[34:51.000 --> 34:53.000]  Вот перевернутый
[34:53.000 --> 34:55.000]  елочка.
[34:57.000 --> 34:59.000]  Знаете, самое грустное в этом конспекте
[34:59.000 --> 35:01.000]  заключается в том, что там этих картинок не было.
[35:01.000 --> 35:03.000]  Там
[35:03.000 --> 35:05.000]  написан какой-то абстрактный
[35:05.000 --> 35:07.000]  мутный текст.
[35:07.000 --> 35:09.000]  Поэтому
[35:09.000 --> 35:11.000]  по этим
[35:11.000 --> 35:13.000]  по мотивам каких-то обрывков фраз, которые
[35:13.000 --> 35:15.000]  видел, пришлось что-то подобное придумать.
[35:15.000 --> 35:17.000]  И то у меня в конспекте
[35:17.000 --> 35:19.000]  не это написано.
[35:19.000 --> 35:21.000]  Так что, да.
[35:21.000 --> 35:23.000]  Ну, не важно.
[35:23.000 --> 35:25.000]  Тут, как всегда, сам, как вы помните,
[35:25.000 --> 35:27.000]  самое главное, это все мелочи уметь додумывать.
[35:27.000 --> 35:29.000]  Вот.
[35:29.000 --> 35:31.000]  Так вот. Значит, поехали.
[35:31.000 --> 35:33.000]  Значит, тут всякое могло быть.
[35:33.000 --> 35:35.000]  Ну, значит, теперь давайте думать.
[35:35.000 --> 35:37.000]  Кто такие
[35:37.000 --> 35:39.000]  числа, которые...
[35:39.000 --> 35:41.000]  Кто такие вообще могут быть числа,
[35:41.000 --> 35:43.000]  которые больше
[35:43.000 --> 35:45.000]  y?
[35:45.000 --> 35:47.000]  Ну, во-первых, те x,
[35:47.000 --> 35:49.000]  которые больше y,
[35:49.000 --> 35:51.000]  они явно те, кто должны были
[35:51.000 --> 35:53.000]  отвитвиться.
[35:53.000 --> 35:55.000]  Ну, по крайней мере, вот здесь должны
[35:55.000 --> 35:57.000]  идти либо вместе с y, либо отвитвиться
[35:57.000 --> 35:59.000]  куда-то вправо. Правда?
[35:59.000 --> 36:01.000]  Вот.
[36:01.000 --> 36:03.000]  Нет, когда сверху
[36:03.000 --> 36:05.000]  вот эти числа, они больше, чем...
[36:05.000 --> 36:07.000]  Но если они пойдут влево, они меньше.
[36:07.000 --> 36:09.000]  Вот.
[36:09.000 --> 36:11.000]  Ну, вот.
[36:11.000 --> 36:13.000]  Ну, вот.
[36:13.000 --> 36:15.000]  Вот, либо, значит, если они
[36:15.000 --> 36:17.000]  доходят до сюда, то скетч вот этот вот.
[36:17.000 --> 36:19.000]  То, по крайней мере, вот эта часть скетча,
[36:19.000 --> 36:21.000]  которая на вот этих вот...
[36:21.000 --> 36:23.000]  Вот так вот.
[36:23.000 --> 36:25.000]  На вот этих скетчах.
[36:25.000 --> 36:27.000]  По крайней мере, она должна до сюда
[36:27.000 --> 36:29.000]  либо совпасть либо стать pug localized. Правда?
[36:31.000 --> 36:33.000]  А вот если она уже
[36:33.000 --> 36:35.000]  дошла до сюда, да, то есть понятно,
[36:35.000 --> 36:37.000]  что есть она дошла до сюда и пошла в нужную
[36:37.000 --> 36:39.000]  сторону,
[36:39.000 --> 36:41.000]  то есть вот до сюда, это в смысле первый, кто...
[36:41.000 --> 36:46.640]  никто находится строго до ответвления игрока, а дальше, да, но с другой стороны
[36:46.640 --> 36:49.920]  дальше все просто, то есть те кто дошли, они уже по-любому становятся больше
[36:49.920 --> 36:56.200]  либо равны игрока, и тогда отсюда означает, что нам просто с вами нужно
[36:56.200 --> 37:03.920]  найти lower bound, то есть опять по скетчам у х, то есть взяв вот это вот за префикс,
[37:03.920 --> 37:09.920]  то есть вот это вот то, что было за префикс, а дальше тут все забить нулями.
[37:11.000 --> 37:16.000]  И это получится как раз в точности там минимальный х, который там не меньше игроков.
[37:34.000 --> 37:38.000]  Нет, то есть он как бы, смотрите, просто х, если он как бы...
[37:42.000 --> 37:46.000]  Ну если пошли влево, то меньше, если пошли вправо, то больше.
[37:46.000 --> 37:52.000]  Да, поэтому фактически надо просто, поэтому надо вот этот префикс сохранить,
[37:52.000 --> 37:55.000]  а тут просто забить нулями и найти lower bound.
[37:55.000 --> 37:59.000]  По скетчам, обратите внимание. Вот, собственно, ну вот.
[37:59.000 --> 38:03.000]  То есть вот такая вот технология, то есть не эти LCP надо искать.
[38:04.000 --> 38:11.000]  Да, на самом деле нам потребуется искать LCP у самих х и игроков, а не скетчей.
[38:11.000 --> 38:17.000]  Ну вот, и собственно, ну да, то есть по этим, по ним придется вам понимать,
[38:17.000 --> 38:22.000]  куда вы там между бэшками вставитесь, но как мы уже поняли, это все от единицы
[38:22.000 --> 38:25.000]  тем или иным способом делается.
[38:26.000 --> 38:32.000]  Да, то есть это все вот, да, если у нас есть какой-то более-менее адекватный скетч,
[38:32.000 --> 38:35.000]  то действительно все можно сделать.
[38:40.000 --> 38:47.000]  Вот, хэш тублицо, да, а ну да, хэш тублицо, да.
[38:47.000 --> 38:51.000]  А, ну да, самое подлое, что если скетч от х равен скетч игроку,
[38:51.000 --> 38:54.000]  то тоже нет гарантии, что х равен игроку.
[38:56.000 --> 39:00.000]  Ну ладно, ну ладно.
[39:03.000 --> 39:05.000]  Нет, мы поверили.
[39:08.000 --> 39:14.000]  Да, проделав эту операцию, мы поняли, какой второй вопрос надо сделать в этом,
[39:14.000 --> 39:19.000]  условно, какую-то структуру с лавербаундом и апербаундом для скетчей,
[39:19.000 --> 39:25.000]  чтобы действительно у игрока найти лавербаунд и апербаунд уже среди реальных х.
[39:26.000 --> 39:28.000]  Вот зачем мы все это делали.
[39:50.000 --> 39:54.000]  Что значит подходили?
[40:02.000 --> 40:05.000]  Так, Тихон, потише, пожалуйста, я вопросу.
[40:12.000 --> 40:15.000]  Нет, ну смотрите, ну мы здесь, нет, мы сказали сейчас, я вот не понял вопрос,
[40:15.000 --> 40:17.000]  вопрос, что мы еще раз сделали.
[40:17.000 --> 40:21.000]  Мы, значит, мы попробовали найти лавербаунд чисто по скетчам.
[40:21.000 --> 40:24.000]  Обнаружили, что это не точно.
[40:24.000 --> 40:27.000]  Но мы внимательно посмотрели, как тут все устроено.
[40:27.000 --> 40:31.000]  Вот есть xk, xk++1, ответвляющийся от него, и где-то тут игр отверсяю всяких.
[40:31.000 --> 40:36.000]  Мы можем аккуратно разобрать все случаи, когда там, где игрок ответвляется от кого.
[40:36.000 --> 40:40.000]  И в зависимости от каждого случая, там сделать не более чем один,
[40:40.000 --> 40:44.000]  еще один запрос в лавербаунд по скетчам,
[40:44.000 --> 40:48.000]  который даст нам нот, ответ на который это на самом деле лавербаунд
[40:48.000 --> 40:52.000]  честного игрока по честному иксам.
[41:03.000 --> 41:07.000]  Ну, смотрите, на самом деле, с точки зрения того, что мы сейчас делаем,
[41:07.000 --> 41:09.000]  нам пока не особо принцип нот.
[41:09.000 --> 41:13.000]  То есть нам желательно самое главное одно, чтобы
[41:13.000 --> 41:17.000]  это было наибольшим в f4 гаторе.
[41:17.000 --> 41:21.000]  Ну да, там, ну что такое супер скетч, мы там отдельно поговорим,
[41:21.000 --> 41:25.000]  но пока вот нам действительно не сильно много от этого скетча надо.
[41:25.000 --> 41:29.000]  То есть в общем-то заметим, что если мы номера вот этих бит
[41:29.000 --> 41:32.000]  на самом деле как-то перешаманим так, чтобы у них порядок сохранился,
[41:32.000 --> 41:35.000]  нас это в общем тоже устроит, правда?
[41:35.000 --> 41:39.000]  То есть если я там скажем b0 поставлю на место b0 плюс 1,
[41:39.000 --> 41:43.000]  или b1 на место b1 плюс 2, b2 на место b плюс 3 и так далее,
[41:43.000 --> 41:45.000]  то это нас тоже устроит.
[41:45.000 --> 41:49.000]  Ну главное, чтобы типа порядок тот же, и биты те же.
[41:49.000 --> 41:53.000]  Именно относительный порядок, да, конечно.
[41:53.000 --> 41:57.000]  То есть это нас тоже устроит, главное, чтобы мы потом знали,
[41:57.000 --> 42:01.000]  знали кто там куда перешел.
[42:01.000 --> 42:05.000]  Вот, ну вот.
[42:05.000 --> 42:09.000]  Потому что, то есть мы этим более того сейчас будем пользоваться.
[42:09.000 --> 42:12.000]  Сейчас мы этим будем пользоваться.
[42:12.000 --> 42:15.000]  Сейчас мы, соответственно, да, мы поверили, что видимо по какому-то скетчу
[42:15.000 --> 42:17.000]  мы значит это можем сделать.
[42:17.000 --> 42:20.000]  Или в случае чего можем потом еще вторую итерацию сделать,
[42:20.000 --> 42:24.000]  поняв, что изменилось, но в общем принципиально ничего не поменяется.
[42:24.000 --> 42:28.000]  Потому что да, у нас конечно проблема, то есть наука сильно сомневается,
[42:28.000 --> 42:32.000]  что по заданным рандомным b-шкам действительно эти скетчи можно реально вычислять,
[42:32.000 --> 42:36.000]  как я уже говорил.
[42:36.000 --> 42:40.000]  Вот, поэтому, значит, теперь наша задача
[42:40.000 --> 42:44.000]  вот по этим b-шкам построить вот такую скетч.
[42:44.000 --> 42:48.000]  По b-шкам? Да, по b-шкам.
[42:48.000 --> 42:52.000]  Скетч. Функцию, да.
[42:52.000 --> 42:56.000]  Которая заол от единицы потом этот скетч вычислять будет.
[42:56.000 --> 43:00.000]  Ну нам, значит, в идеале хотелось бы, чтобы этот там...
[43:00.000 --> 43:05.000]  Ну да, то есть смотрите, да, самый тупой скетч, который мог бы быть, да, вообще,
[43:05.000 --> 43:08.000]  если предположить, что вот мы там...
[43:08.000 --> 43:11.000]  То есть если ваша структура хранит скетчи, то она волшебная,
[43:11.000 --> 43:14.000]  то нам в качестве скетча можно было самое тупое, что можно сделать,
[43:14.000 --> 43:18.000]  это x and вот эта вот масочка с b-шками.
[43:18.000 --> 43:22.000]  Заметьте, это бы нам подошло с точки зрения этих целей.
[43:22.000 --> 43:25.000]  Но она нам не подходит с точки зрения этих целей,
[43:25.000 --> 43:28.000]  что сами скетчи тогда остаются масками размера w.
[43:28.000 --> 43:31.000]  Это нас не устраивает.
[43:31.000 --> 43:35.000]  Поэтому, значит, мы сделаем по-другому.
[43:35.000 --> 43:39.000]  Мы эти биты чуть-чуть подвинем.
[43:39.000 --> 43:43.000]  Попихаем.
[43:43.000 --> 43:47.000]  Попихаем, попихаем, да.
[43:48.000 --> 43:52.000]  Ой.
[43:52.000 --> 43:56.000]  Так.
[43:56.000 --> 44:00.000]  Ликвидируем.
[44:00.000 --> 44:03.000]  Что?
[44:03.000 --> 44:06.000]  Ну вот. И, значит, смотрите. Итак, наша задача...
[44:06.000 --> 44:09.000]  Значит, смотрите, как мы будем делать.
[44:09.000 --> 44:14.000]  Значит, идея будет такая. Итак, у нас есть эти наши b0,
[44:14.000 --> 44:18.000]  b1, b2 и так далее.
[44:18.000 --> 44:22.000]  И br-1.
[44:22.000 --> 44:25.000]  Вот такая вот диспозиция.
[44:25.000 --> 44:28.000]  Ну вот. Значит, что мы делаем?
[44:28.000 --> 44:32.000]  Мы по ним сейчас, на ваших глазах,
[44:32.000 --> 44:37.000]  построим мистические числа
[44:37.000 --> 44:43.000]  m0, m1, m2, m.
[44:43.000 --> 44:46.000]  r-1.
[44:46.000 --> 44:49.000]  Вот.
[44:49.000 --> 44:52.000]  Значит, они должны быть, во-первых,
[44:52.000 --> 44:56.000]  от 0 до w.
[44:56.000 --> 44:58.000]  Вот.
[44:58.000 --> 45:01.000]  Это первое.
[45:01.000 --> 45:04.000]  Ну, на самом деле, первое такое.
[45:04.000 --> 45:07.000]  Должно быть 0 меньше либо равно b0 плюс m0.
[45:07.000 --> 45:11.000]  Строго меньше, чем b1 плюс m1.
[45:11.000 --> 45:15.000]  Меньше, чем b2 плюс m2.
[45:15.000 --> 45:19.000]  Меньше, чем...
[45:19.000 --> 45:25.000]  Меньше, чем br-1 плюс mr-1.
[45:25.000 --> 45:30.000]  И, конечно, это должно быть меньше, чем w.
[45:30.000 --> 45:34.000]  Вот. То есть мы такие вот мки хотим.
[45:34.000 --> 45:36.000]  Вот.
[45:36.000 --> 45:40.000]  Зачем? Ну вот.
[45:40.000 --> 45:45.000]  И на будущее еще интересный факт.
[45:45.000 --> 45:49.000]  r-1 плюс mr-1
[45:49.000 --> 45:52.000]  минус b0 минус m0
[45:52.000 --> 45:55.000]  равно...
[45:55.000 --> 45:58.000]  Ну, тут вот так наглую пишут.
[46:02.000 --> 46:05.000]  4 и 5, да.
[46:05.000 --> 46:08.000]  Да, пора. Пришло время.
[46:10.000 --> 46:13.000]  Почему?
[46:13.000 --> 46:16.000]  Ну да.
[46:16.000 --> 46:19.000]  Фу ты. Сейчас.
[46:19.000 --> 46:22.000]  Ну, то есть...
[46:22.000 --> 46:25.000]  Вот так.
[46:25.000 --> 46:28.000]  Вот так.
[46:28.000 --> 46:31.000]  Ладно.
[46:31.000 --> 46:34.000]  Нет, это не блок.
[46:34.000 --> 46:37.000]  Значит, смысл в следующем.
[46:37.000 --> 46:42.000]  Я очень хочу, чтобы у нас появилась функция
[46:42.000 --> 46:45.000]  supersketch.
[46:45.000 --> 46:48.000]  Тоже функция.
[46:48.000 --> 46:52.000]  supersketch от вот этого x.
[46:52.000 --> 46:55.000]  Который вот. То есть от x.
[46:55.000 --> 47:00.000]  Или вот еще мы ее будем обозначать ss.
[47:00.000 --> 47:03.000]  Вот.
[47:03.000 --> 47:06.000]  Такая вот полезная функция,
[47:06.000 --> 47:09.000]  которая делает следующее.
[47:09.000 --> 47:12.000]  Значит supersketch.
[47:12.000 --> 47:15.000]  Значит, смотрите. Делает она так. Жил-был x.
[47:15.000 --> 47:18.000]  И было у него w-bit.
[47:18.000 --> 47:21.000]  И только r-bit
[47:21.000 --> 47:24.000]  были интересными.
[47:24.000 --> 47:27.000]  Вот.
[47:27.000 --> 47:30.000]  Пожалуйста.
[47:37.000 --> 47:40.000]  Так.
[47:40.000 --> 47:43.000]  Да, все можно в этом мире.
[47:43.000 --> 47:46.000]  Так.
[47:46.000 --> 47:49.000]  Сейчас мы вот так вот делаем.
[47:49.000 --> 47:52.000]  Вот.
[47:52.000 --> 47:55.000]  B0, B1, B2, B3.
[47:55.000 --> 47:58.000]  Пожалуйста.
[47:58.000 --> 48:01.000]  Речь, речь, речь.
[48:01.000 --> 48:04.000]  supersketch.
[48:04.000 --> 48:07.000]  Yeah.
[48:07.000 --> 48:10.000]  supersketch.
[48:10.000 --> 48:13.000]  Так вот.
[48:13.000 --> 48:16.000]  Я очень хочу это все.
[48:16.000 --> 48:19.000]  Вот эти вот конкретные биты.
[48:19.000 --> 48:22.000]  Допустим, я их там назову как-нибудь.
[48:22.000 --> 48:25.000]  Давайте я их тут.
[48:25.000 --> 48:28.000]  z0, z1, z2 и так далее. Ну их значения конкретные.
[48:28.000 --> 48:31.000]  3 там, z, r-1.
[48:31.000 --> 48:34.000]  Так вот.
[48:34.000 --> 48:37.000]  Я хочу их перегнать вот в такую масочку.
[48:37.000 --> 48:40.000]  Для начала перегнать в такую же масочку.
[48:40.000 --> 48:43.000]  Только теперь.
[48:43.000 --> 48:46.000]  B0.
[48:46.000 --> 48:49.000]  Это вот B0 плюс M0.
[48:49.000 --> 48:52.000]  Вот на позиции B0 плюс M0 теперь стоит вот этот вот z0.
[48:52.000 --> 48:55.000]  На позиции B1 плюс M1 стоит z1.
[48:55.000 --> 48:58.000]  То есть сильно далеко они на этот раз друг от друга не стоят.
[48:58.000 --> 49:01.000]  То есть они в угодной ряду.
[49:01.000 --> 49:04.000]  Причем рандомно там относительно внутри как-то.
[49:04.000 --> 49:07.000]  Вот и так далее.
[49:07.000 --> 49:10.000]  Вот z, r-1.
[49:10.000 --> 49:13.000]  Вот это вот b, r-1 плюс m, r-1.
[49:13.000 --> 49:16.000]  Так, это двойка, если что.
[49:16.000 --> 49:19.000]  Вот.
[49:19.000 --> 49:22.000]  И нам очень хочется при этом.
[49:22.000 --> 49:25.000]  А тут везде понятно нули.
[49:25.000 --> 49:28.000]  И самое главное для нас.
[49:28.000 --> 49:31.000]  Чтобы вот эта вот диспозиция была.
[49:31.000 --> 49:34.000]  О от w в степени 4d.
[49:40.000 --> 49:43.000]  Да.
[49:43.000 --> 49:46.000]  Ну вот. То есть более того супер скетч потом в конце
[49:46.000 --> 49:49.000]  предложит сделать вот у этого результата.
[49:49.000 --> 49:52.000]  B0 плюс M0.
[49:55.000 --> 49:58.000]  Ну просто сдвинуть это все типа влево.
[49:58.000 --> 50:01.000]  По факту вправо.
[50:01.000 --> 50:04.000]  Вот этот подотрезок он найдет.
[50:04.000 --> 50:07.000]  То есть вот эти биты конкретно из маски он возьмет и перетащит
[50:07.000 --> 50:10.000]  вот на эти позиции. Все остальное занули.
[50:14.000 --> 50:17.000]  Ну типа да.
[50:20.000 --> 50:23.000]  Вот.
[50:23.000 --> 50:26.000]  Ну вот. То есть хочется вот в идеале так.
[50:31.000 --> 50:34.000]  Значит как же мы это построим?
[50:41.000 --> 50:44.000]  Что-что?
[50:53.000 --> 50:56.000]  Ну да.
[50:56.000 --> 50:59.000]  Сейчас кто?
[50:59.000 --> 51:02.000]  Ну вот.
[51:02.000 --> 51:05.000]  Значит смотрите.
[51:05.000 --> 51:08.000]  Но это на самом деле не все, что потребуется от M.
[51:08.000 --> 51:11.000]  Ну потому что действительно как.
[51:11.000 --> 51:14.000]  Действительно вообще можно было бы это вычислить.
[51:14.000 --> 51:17.000]  Давайте подумаем.
[51:17.000 --> 51:20.000]  То есть как вообще вот действительно это можно было бы выковырить?
[51:20.000 --> 51:23.000]  Ну понятно, что вы можете создать вот эту вот великую маску B.
[51:23.000 --> 51:26.000]  Которая равна.
[51:26.000 --> 51:29.000]  Вот я даже напишу 2 в степени.
[51:29.000 --> 51:32.000]  Там какие-нибудь B.
[51:32.000 --> 51:35.000]  И от 0 до r-1.
[51:35.000 --> 51:38.000]  Нет.
[51:38.000 --> 51:41.000]  Ну просто вот эти вот.
[51:41.000 --> 51:44.000]  Ну короче все вот эти биты просто тут единичками.
[51:44.000 --> 51:47.000]  Ну да. Даже вот я давайте на картинке нарисую.
[51:47.000 --> 51:50.000]  Порядкой 2 в степени это немножко раз.
[51:50.000 --> 51:53.000]  2 в степени это как бы вот в эту сторону.
[51:53.000 --> 51:56.000]  А у нас как бы биты вот так номируются.
[51:56.000 --> 51:59.000]  Поэтому чтобы не путаться.
[51:59.000 --> 52:02.000]  Ну да.
[52:02.000 --> 52:05.000]  Это старшие биты, это младшие.
[52:05.000 --> 52:08.000]  Но при этом эти биты у нас с меньшей номерацией.
[52:08.000 --> 52:11.000]  Баналит младший или старший?
[52:11.000 --> 52:14.000]  Старший.
[52:14.000 --> 52:17.000]  Вот туда всегда должен быть внимание.
[52:17.000 --> 52:20.000]  Потому что в другой интерпретации может быть не так.
[52:20.000 --> 52:23.000]  То есть вот такое вот маска B.
[52:23.000 --> 52:26.000]  Теперь у нас мечта.
[52:26.000 --> 52:29.000]  Значит теперь смотрите.
[52:29.000 --> 52:32.000]  По х мы можем получить х-штрих.
[52:32.000 --> 52:35.000]  Который будет равен, понятно, х и маска B.
[52:35.000 --> 52:38.000]  Ну то есть оставили от масочки только интересные биты.
[52:38.000 --> 52:41.000]  Понимаете, да?
[52:42.000 --> 52:45.000]  Теперь их надо перернать вот в эти позиции.
[52:45.000 --> 52:48.000]  Как это сделать?
[52:48.000 --> 52:51.000]  Вот.
[52:51.000 --> 52:54.000]  Но идея такая.
[52:54.000 --> 52:57.000]  Но идея такая.
[52:57.000 --> 53:00.000]  Давайте теперь заведем х2-штриха.
[53:00.000 --> 53:03.000]  Который равен х-штрих умножить умножить.
[53:03.000 --> 53:06.000]  Обратите внимание.
[53:06.000 --> 53:09.000]  На маску M.
[53:09.000 --> 53:12.000]  Ну как вы уже догадываетесь, что такое маска M?
[53:12.000 --> 53:15.000]  Нет, но это то же самое, что маска B.
[53:15.000 --> 53:18.000]  Только не для чисел B, а для чисел M.
[53:18.000 --> 53:21.000]  Ну если нам даны B-шки и даны M-ки,
[53:21.000 --> 53:24.000]  то я могу и по B-шкам и по M-кам такую маску построить.
[53:24.000 --> 53:27.000]  Правда?
[53:30.000 --> 53:33.000]  Ну а мы их уберем.
[53:33.000 --> 53:36.000]  Ну, а мы их уберем.
[53:36.000 --> 53:39.000]  Ну, а мы их уберем.
[53:39.000 --> 53:42.000]  Потому что ретурн.
[53:42.000 --> 53:45.000]  Ну вот, потому что дальше
[53:45.000 --> 53:48.000]  мы создадим маск, так сказать,
[53:48.000 --> 53:51.000]  BN,
[53:51.000 --> 53:54.000]  которая равна, соответственно, в которой хорошими битами
[53:54.000 --> 53:57.000]  будут как раз вот B0 плюс M0 там вот,
[53:57.000 --> 54:00.000]  B1 плюс M1 и так далее.
[54:00.000 --> 54:03.000]  Да, вот тут совсем не точно получается,
[54:03.000 --> 54:06.000]  конечно, немножко.
[54:06.000 --> 54:09.000]  Ну, потому что при вот таком умножении,
[54:09.000 --> 54:12.000]  проблема, что бит B0, умноженный
[54:12.000 --> 54:15.000]  на бит M0, он перешел не в бит B0 плюс M0,
[54:15.000 --> 54:18.000]  а куда-то в другое место.
[54:18.000 --> 54:21.000]  Да, там по-хорошему получится
[54:21.000 --> 54:24.000]  N минус B0, там плюс M, это вот да,
[54:24.000 --> 54:27.000]  поэтому, ай, что ж делать, что ж делать.
[54:28.000 --> 54:31.000]  Вот.
[54:31.000 --> 54:34.000]  Нет, хотя делать-то все очень просто. Давайте, ладно,
[54:34.000 --> 54:37.000]  в данном случае начать, давайте конкретно в этом месте без ограничений
[54:37.000 --> 54:40.000]  общества считать, что это младшие биты.
[54:44.000 --> 54:47.000]  Ну да, то есть типа да.
[54:47.000 --> 54:50.000]  Не, ну почему, конкретно здесь считаем, что это младшие биты.
[54:50.000 --> 54:53.000]  Во всех остальных местах.
[54:53.000 --> 54:56.000]  Вот так.
[54:56.000 --> 54:59.000]  Ну, сейчас буду без башки.
[54:59.000 --> 55:02.000]  Да, нет?
[55:02.000 --> 55:05.000]  А снизу нижний маск.
[55:05.000 --> 55:08.000]  А нет, здесь тогда все нормально,
[55:08.000 --> 55:11.000]  потому что тогда 2 в степени B0, это как раз вот маска,
[55:11.000 --> 55:14.000]  у которой на B0 там месте стоит 1 и все.
[55:17.000 --> 55:20.000]  Поэтому теперь это то, что нам надо.
[55:20.000 --> 55:23.000]  Ну, опять же, а как мы
[55:23.000 --> 55:26.000]  вот так возьмем маску,
[55:26.000 --> 55:29.000]  где B0 плюс M0, B1 плюс M1
[55:29.000 --> 55:32.000]  и скажем, return X2',
[55:32.000 --> 55:35.000]  ну, то есть просто return 2', M, маск,
[55:35.000 --> 55:38.000]  B, все.
[55:38.000 --> 55:41.000]  Ну, потому что в этом произведении есть,
[55:41.000 --> 55:44.000]  вот когда вот B0 на M0, тогда вот
[55:44.000 --> 55:47.000]  отправился в B0 плюс M0, вот B1 на M1,
[55:47.000 --> 55:50.000]  то есть вот это вот отправилось и так далее, и мы все прорезили.
[55:50.000 --> 55:53.000]  То есть в этом смысле да.
[55:56.000 --> 55:59.000]  О, а вот это правильный вопрос.
[55:59.000 --> 56:02.000]  Ну вот, а вот это да,
[56:02.000 --> 56:05.000]  а это вопрос, который нам крюшки подрезает.
[56:05.000 --> 56:08.000]  Да, да, да, да, да.
[56:08.000 --> 56:11.000]  Нет, я сказал мечту, да, но вот правильно, действительно, что у этой мечты есть такая проблема,
[56:11.000 --> 56:14.000]  что, к сожалению, если у нас оказалось,
[56:14.000 --> 56:17.000]  что, скажем, Xit плюс Mjt
[56:17.000 --> 56:20.000]  равно, да, вот так быть,
[56:20.000 --> 56:23.000]  какой-нибудь там Mkt плюс Mlt,
[56:23.000 --> 56:26.000]  вот, то есть там Bkt плюс Mlt,
[56:26.000 --> 56:29.000]  то у нас проблемы.
[56:31.000 --> 56:34.000]  Вот, спокойно.
[56:34.000 --> 56:37.000]  Господи, вот, да.
[56:37.000 --> 56:40.000]  Вот тут, да, тут я удивился даже, что ты,
[56:40.000 --> 56:43.000]  я уж думал, ты это подумал, что, а, я это все знаю давно,
[56:43.000 --> 56:46.000]  это уже я лучше пошел.
[56:46.000 --> 56:49.000]  Поэтому, да, нам с вами
[56:49.000 --> 56:52.000]  кое-что действительно потребуется поправить.
[56:52.000 --> 56:55.000]  То есть, да, эти Bшки должны быть отциктированы.
[56:55.000 --> 56:58.000]  И, соответственно, для любых
[56:58.000 --> 57:01.000]  i, j, kl
[57:01.000 --> 57:04.000]  должно быть, что там Bit
[57:04.000 --> 57:07.000]  плюс Mjt
[57:07.000 --> 57:10.000]  не должно быть равно Bkt плюс Mlt.
[57:10.000 --> 57:13.000]  Вот это уже серьезное условие.
[57:13.000 --> 57:16.000]  Да. Ну, сейчас вот догадываетесь, да,
[57:16.000 --> 57:19.000]  откуда у нас тут сейчас возведение в степень зачем-то пошло.
[57:19.000 --> 57:22.000]  Потому что Bsh кто?
[57:28.000 --> 57:31.000]  А вот ровно для того, чтобы вот это произведение,
[57:31.000 --> 57:34.000]  в этом произведении вот на там никого не наложил.
[57:34.000 --> 57:37.000]  Да.
[57:44.000 --> 57:47.000]  Нет, там проблема, да,
[57:47.000 --> 57:50.000]  что тут будет, да, если они тут сложились, и тут получился
[57:50.000 --> 57:53.000]  1 плюс 1 перенос. Так что давайте перестрахуемся.
[57:53.000 --> 57:56.000]  Да, ну мало ли.
[57:56.000 --> 57:59.000]  Не, ну часто, знаете, когда мы тут это
[57:59.000 --> 58:02.000]  начинаем тут асимптотиками заниматься, часто мы там начинаем перестраховывать,
[58:02.000 --> 58:05.000]  а потом выясняется, что не было необходимости.
[58:05.000 --> 58:08.000]  Ну вот, но как бы тут, как всегда,
[58:08.000 --> 58:11.000]  дайте, тут как всегда есть уровень. Сначала уровень достичь, что это вот,
[58:11.000 --> 58:14.000]  что да, это возможно и возможно за нужную нам асимптотику.
[58:14.000 --> 58:17.000]  Там потом уже дальше включаются кодеры и начинают думать,
[58:17.000 --> 58:20.000]  насколько этот алгоритм актуален для практики.
[58:20.000 --> 58:23.000]  Вот, ну да.
[58:23.000 --> 58:26.000]  То есть мы вот идем в сторону математики.
[58:26.000 --> 58:29.000]  Итак, ну давайте думать.
[58:29.000 --> 58:32.000]  Что же нам тут бедным надо?
[58:32.000 --> 58:35.000]  Хотя почему бедным, да?
[58:35.000 --> 58:38.000]  Что нам тут надо?
[58:38.000 --> 58:41.000]  Ну, давайте так.
[58:41.000 --> 58:44.000]  Для начала давайте построим какие-то ноты.
[58:44.000 --> 58:47.000]  То есть давайте просто подгоним
[58:47.000 --> 58:50.000]  какие-нибудь числа M0 штрих,
[58:50.000 --> 58:53.000]  M1 штрих просто от балды.
[58:53.000 --> 58:56.000]  Про них мы говорим, что они несколько нот.
[58:56.000 --> 58:59.000]  То есть про них мы говорим, что они мелкие,
[58:59.000 --> 59:02.000]  во-первых, так мелкие же, да, я сейчас
[59:02.000 --> 59:05.000]  тут я лучше уточню.
[59:05.000 --> 59:08.000]  А, то есть они очень интересно, они
[59:08.000 --> 59:11.000]  до, внимание, r в кубе,
[59:11.000 --> 59:14.000]  то есть вот w в степени 3 пятых.
[59:14.000 --> 59:17.000]  Вот, то есть видите, пока мелкие, да?
[59:17.000 --> 59:20.000]  Тут меньше либо равно, тут строго меньше.
[59:20.000 --> 59:23.000]  Ну, r это и есть w в степени 1 пятая.
[59:23.000 --> 59:26.000]  А, ну ладно, хорошо.
[59:26.000 --> 59:29.000]  Не глобально.
[59:29.000 --> 59:32.000]  Вот.
[59:32.000 --> 59:35.000]  И мы говорим, значит, хотим, чтобы вот было,
[59:35.000 --> 59:38.000]  во-первых, вот так, а во-вторых,
[59:38.000 --> 59:41.000]  было, мы хотим, чтобы для любых
[59:41.000 --> 59:44.000]  i j k l было верно,
[59:44.000 --> 59:47.000]  m i штрих плюс b j
[59:47.000 --> 59:50.000]  равно m k штрих плюс b l,
[59:50.000 --> 59:53.000]  тогда и только тогда,
[59:53.000 --> 59:56.000]  когда, соответственно,
[59:56.000 --> 59:59.000]  i равно k j равно l.
[59:59.000 --> 01:00:02.000]  i равно k j равно l.
[01:00:06.000 --> 01:00:09.000]  Ну, то есть, в переводе говоря, мы можем
[01:00:09.000 --> 01:00:12.000]  по вот этим r-числам и r-числам составить r-квадрат
[01:00:12.000 --> 01:00:15.000]  чисел, и нам даже уйти хочется, чтобы все эти r-квадрат
[01:00:15.000 --> 01:00:18.000]  чисел были попарно различны.
[01:00:18.000 --> 01:00:21.000]  И лежали вот где-нибудь вот, и были, и при этом
[01:00:21.000 --> 01:00:24.000]  вот эти числа были там не более, чем r куб.
[01:00:24.000 --> 01:00:27.000]  Вот, уважаемые знатоки, внимание, вопрос.
[01:00:28.000 --> 01:00:31.000]  Ну вот, как, откуда, в чем заметьте,
[01:00:31.000 --> 01:00:34.000]  на сортированность вот это все, то есть, никакие, я,
[01:00:34.000 --> 01:00:37.000]  вот на эти m 0 штрих, никакой сортированности,
[01:00:37.000 --> 01:00:40.000]  не их самих, не вот, хотя нет, их самих так сортировать можно,
[01:00:40.000 --> 01:00:43.000]  но сортированности вот этой штуки мы не требуем.
[01:00:43.000 --> 01:00:46.000]  Понимаете, да?
[01:00:46.000 --> 01:00:49.000]  Впрашивается. Ну вот, давайте, угадайте,
[01:00:49.000 --> 01:00:52.000]  откуда мы эти m 0 штрих, эти штрихи
[01:00:52.000 --> 01:00:55.000]  вообще возьмем?
[01:00:56.000 --> 01:00:59.000]  Эстадаранта.
[01:00:59.000 --> 01:01:02.000]  Нет, кстати, эстадаранта, интересный вариант, можно было
[01:01:02.000 --> 01:01:05.000]  бы действительно посчитать, с какой вероятностью нам повезет.
[01:01:05.000 --> 01:01:08.000]  Нет, ну да.
[01:01:08.000 --> 01:01:11.000]  Но на самом деле...
[01:01:18.000 --> 01:01:21.000]  А ты начинаешь постоянно
[01:01:21.000 --> 01:01:24.000]  отвечать на вопросы ко мне вместо меня, на хрена?
[01:01:24.000 --> 01:01:27.000]  Да.
[01:01:32.000 --> 01:01:35.000]  Да, но иногда ты ответил вопрос настолько быстро,
[01:01:35.000 --> 01:01:38.000]  что непонятно вообще, даже непонятно, невозможно в принципе понять,
[01:01:38.000 --> 01:01:41.000]  понял я вопрос или нет.
[01:01:41.000 --> 01:01:44.000]  Так вот, значит, давайте дальше.
[01:01:44.000 --> 01:01:47.000]  Значит, смотри, ну вот,
[01:01:47.000 --> 01:01:50.000]  значит, как эти m ки взять?
[01:01:50.000 --> 01:01:53.000]  Так вот, кодовое слово, на этот раз жадность.
[01:01:54.000 --> 01:01:57.000]  Почему жадность?
[01:01:57.000 --> 01:02:00.000]  А очень просто, смотрите.
[01:02:00.000 --> 01:02:03.000]  Потому что, смотрите.
[01:02:03.000 --> 01:02:06.000]  Чего? Причем тут жадность?
[01:02:06.000 --> 01:02:09.000]  Потому что, смотрите, если я, вот допустим,
[01:02:09.000 --> 01:02:12.000]  я вот выбираю какие-то числа, тогда если я выбрал какое-то
[01:02:12.000 --> 01:02:15.000]  число m и t штрих, да,
[01:02:15.000 --> 01:02:18.000]  то тогда, если я его выбрал,
[01:02:18.000 --> 01:02:21.000]  то я замечаю, что m ка штрих
[01:02:21.000 --> 01:02:24.000]  не может быть равно
[01:02:24.000 --> 01:02:27.000]  m и t штрих плюс
[01:02:27.000 --> 01:02:30.000]  b шите минус b лт.
[01:02:30.000 --> 01:02:33.000]  Понятно? То есть это
[01:02:33.000 --> 01:02:36.000]  необходимые условия для будущего ка.
[01:02:36.000 --> 01:02:39.000]  Ну, в общем-то, и достаточно, кстати, что интересно, правда?
[01:02:42.000 --> 01:02:45.000]  То есть если, когда мы будем выбирать ка-то число,
[01:02:45.000 --> 01:02:48.000]  надо, чтобы ни для какого i, ни для какого j, ни для какого l
[01:02:48.000 --> 01:02:51.000]  не было верно вот это, правда?
[01:02:54.000 --> 01:02:57.000]  Не, ну почему?
[01:02:57.000 --> 01:03:00.000]  Не, ну что, куб подогнали нормально.
[01:03:06.000 --> 01:03:09.000]  Не, ну как сказать?
[01:03:09.000 --> 01:03:12.000]  Смотрите, давайте попробуем.
[01:03:12.000 --> 01:03:15.000]  Вот это вот нам надо. Ну там отдельная письма.
[01:03:15.000 --> 01:03:18.000]  Поэтому, значит, подбирать эти штрихи можно,
[01:03:18.000 --> 01:03:21.000]  но замечаем тогда следующее, что каждая m и t
[01:03:21.000 --> 01:03:24.000]  дает нам, получается, сколько?
[01:03:24.000 --> 01:03:27.000]  от t от r квадрат
[01:03:27.000 --> 01:03:30.000]  заблокированных вариантов
[01:03:30.000 --> 01:03:33.000]  для следующих, правда?
[01:03:33.000 --> 01:03:36.000]  Даже не о, а не более, чем r квадрат,
[01:03:36.000 --> 01:03:39.000]  но были заблокированных, правда?
[01:03:39.000 --> 01:03:42.000]  То есть я просто скажу, что вот
[01:03:42.000 --> 01:03:45.000]  допустим, я вот скажу, что m 0 штрих просто
[01:03:45.000 --> 01:03:48.000]  от балды равно нулю,
[01:03:48.000 --> 01:03:51.000]  и тем самым у меня заблокируется там n квадрат
[01:03:51.000 --> 01:03:54.000]  состояние, ну даже меньше, потому что там...
[01:03:57.000 --> 01:04:00.000]  За какую разность?
[01:04:03.000 --> 01:04:06.000]  А, ну да, но в этот раз нам начать,
[01:04:06.000 --> 01:04:09.000]  потому что главное, что мы блокируем новых блокированных вариантов
[01:04:09.000 --> 01:04:12.000]  чем r квадрат. Может быть, меньше.
[01:04:12.000 --> 01:04:15.000]  За счет того, что там разные варианты дают одинаковое число,
[01:04:15.000 --> 01:04:18.000]  хотя такого не должно быть.
[01:04:18.000 --> 01:04:21.000]  А, ну если так, разные,
[01:04:21.000 --> 01:04:24.000]  если разностью больших совпадают, да, может быть, заблокировано одно число.
[01:04:24.000 --> 01:04:27.000]  А может быть, вообще так, что m 0 штрих плюс b j t
[01:04:27.000 --> 01:04:30.000]  минус b l оказалось меньше нуля, поэтому он вообще ничего не блокирует.
[01:04:30.000 --> 01:04:33.000]  Но это нам не важно. Главное, что вот
[01:04:33.000 --> 01:04:36.000]  не более, чем r квадрат вариантов заблокировали.
[01:04:37.000 --> 01:04:40.000]  Ну тогда смотрите, мы заблокировали вот r вариантов,
[01:04:40.000 --> 01:04:43.000]  вот из этих, да, вот,
[01:04:43.000 --> 01:04:46.000]  а тем более, что ладно, на самом деле
[01:04:46.000 --> 01:04:49.000]  даже мы еще себе точнее скажем,
[01:04:49.000 --> 01:04:52.000]  что они не равны по модулю r в кубе.
[01:04:52.000 --> 01:04:55.000]  Ну-ка давайте на всякий случай.
[01:04:55.000 --> 01:04:58.000]  Еще круче.
[01:04:58.000 --> 01:05:01.000]  Подставите, это еще сильнее.
[01:05:02.000 --> 01:05:05.000]  Вот. То есть тогда мы блокируем реально там,
[01:05:05.000 --> 01:05:08.000]  скорее всего, реально r квадрат,
[01:05:08.000 --> 01:05:11.000]  ну и столько там по модлю этих разностей.
[01:05:11.000 --> 01:05:14.000]  Вот. Но заметим, что если
[01:05:14.000 --> 01:05:17.000]  каждый новый m к блокирует нам r квадрат разностей,
[01:05:17.000 --> 01:05:20.000]  то r раз выбрать m штрих жадно, мы всегда можем.
[01:05:20.000 --> 01:05:23.000]  Потому что у нас всего вариантов сколько?
[01:05:23.000 --> 01:05:26.000]  r куб.
[01:05:26.000 --> 01:05:29.000]  Удобно, правда?
[01:05:31.000 --> 01:05:34.000]  Вот так. Вот такая красота.
[01:05:34.000 --> 01:05:37.000]  Вот.
[01:05:37.000 --> 01:05:40.000]  То есть отдельная песня, правда, действительно,
[01:05:40.000 --> 01:05:43.000]  можно ли это сделать быстрее, чем z r куб?
[01:05:43.000 --> 01:05:46.000]  Вот это большая такая проблема.
[01:05:46.000 --> 01:05:49.000]  Ну вот. Но я, но на самом деле,
[01:05:49.000 --> 01:05:52.000]  но я утверждаю, что это
[01:05:52.000 --> 01:05:55.000]  не сильно большая проблема.
[01:05:55.000 --> 01:05:58.000]  Ну, например.
[01:05:58.000 --> 01:06:01.000]  Хотя, на самом деле, в данном случае,
[01:06:01.000 --> 01:06:04.000]  нет, можно еще проще. У нас этих b-шек сколько?
[01:06:04.000 --> 01:06:07.000]  r штук, да?
[01:06:07.000 --> 01:06:10.000]  Ну вот. То есть, на самом деле,
[01:06:10.000 --> 01:06:13.000]  ну, б-шек у нас ровно r штук.
[01:06:13.000 --> 01:06:16.000]  Ну, там то, что r меньше кого-то там и другого просто.
[01:06:16.000 --> 01:06:19.000]  На самом деле, я утверждаю, что
[01:06:19.000 --> 01:06:22.000]  эти m-ки, на самом деле, m штрихи можно и
[01:06:22.000 --> 01:06:25.000]  water построить.
[01:06:25.000 --> 01:06:28.000]  Причина, ну идея такая,
[01:06:28.000 --> 01:06:31.000]  мы же запрещенные вот эти позиции,
[01:06:31.000 --> 01:06:34.000]  мы можем хранить там в масочке из ноликов и единичек, правда?
[01:06:34.000 --> 01:06:37.000]  Вот. То есть, идея такая,
[01:06:37.000 --> 01:06:40.000]  просто нам нужно, если мы построим масочку,
[01:06:40.000 --> 01:06:43.000]  в которой все биты, которые равны b-ж
[01:06:43.000 --> 01:06:46.000]  по модулю r3 будут помечены единичкой, а все остальные ноликами,
[01:06:46.000 --> 01:06:49.000]  то тогда запретить что-то нам будет
[01:06:49.000 --> 01:06:52.000]  без труда, правда?
[01:06:52.000 --> 01:06:55.000]  Это чей побитовый сдвиг?
[01:06:55.000 --> 01:06:58.000]  Там немножко циклический, правда, сдвиг, потому что модулер 3, да?
[01:06:58.000 --> 01:07:01.000]  Но тем не менее, но все равно как бы это
[01:07:01.000 --> 01:07:04.000]  суть сильно не поменяет.
[01:07:04.000 --> 01:07:07.000]  То есть, все, что вам останется, это, то есть,
[01:07:07.000 --> 01:07:10.000]  единственное, что у вас делается дольше, чем за o от r в таком разе,
[01:07:10.000 --> 01:07:13.000]  это, собственно, построение такой масочки,
[01:07:13.000 --> 01:07:16.000]  то есть, построение всех разностей между b-шками.
[01:07:17.000 --> 01:07:20.000]  Что ж там?
[01:07:29.000 --> 01:07:32.000]  Ну вот, то есть, ну тогда идея здесь такая, что
[01:07:32.000 --> 01:07:35.000]  ну вот, ну чтобы у нас тут
[01:07:35.000 --> 01:07:38.000]  в точности все разности горели, да?
[01:07:38.000 --> 01:07:41.000]  Ну тогда идея такая, вы берете просто масочку, вот ту самую,
[01:07:41.000 --> 01:07:44.000]  маска b, из всех бит, да?
[01:07:44.000 --> 01:07:47.000]  И тогда я утверждаю, что вы из нее
[01:07:47.000 --> 01:07:50.000]  за o от единицы можете создать масочку b0-bl,
[01:07:50.000 --> 01:07:53.000]  b1-bl, b2-bl и так далее.
[01:07:55.000 --> 01:07:58.000]  Да не, не надо ни на какую обратную там нажать.
[01:07:58.000 --> 01:08:01.000]  Ну просто смотрите, я могу сделать масочку,
[01:08:01.000 --> 01:08:04.000]  которой все эти биты по модулеркуп сдвинуты
[01:08:04.000 --> 01:08:07.000]  на там какое-нибудь число, правда?
[01:08:07.000 --> 01:08:10.000]  Вот, ну тогда давайте я создам масочку,
[01:08:10.000 --> 01:08:13.000]  которая это все сдвинет на b0, на b1,
[01:08:13.000 --> 01:08:16.000]  на b2, на b3 и так далее.
[01:08:16.000 --> 01:08:19.000]  Да, а потом там останется все это проводить.
[01:08:19.000 --> 01:08:22.000]  То есть, в общем-то, я понимаю, что тут, конечно,
[01:08:22.000 --> 01:08:25.000]  могла возить в той стадии, что тут какая-то фурятина, но
[01:08:25.000 --> 01:08:28.000]  нет.
[01:08:28.000 --> 01:08:31.000]  Нет, так что нет, фурятины не надо.
[01:08:37.000 --> 01:08:40.000]  Ну вот, ну это уже ладно.
[01:08:40.000 --> 01:08:43.000]  Ну это разные варианты, но это уже техника.
[01:08:43.000 --> 01:08:46.000]  Вот. Так что получается, что да, по факту
[01:08:46.000 --> 01:08:49.000]  мы эту жадность можем за o от единицы бахать
[01:08:49.000 --> 01:08:52.000]  и да пребудет нам счастье. Но вопрос не в этом.
[01:08:52.000 --> 01:08:55.000]  Вопрос, что делать дальше.
[01:08:58.000 --> 01:09:01.000]  А дальше, по этим м-штрихам,
[01:09:01.000 --> 01:09:04.000]  как вы уже дорадуетесь, мы создадим
[01:09:04.000 --> 01:09:07.000]  м-ки.
[01:09:07.000 --> 01:09:10.000]  Значит, как мы их создадим?
[01:09:10.000 --> 01:09:13.000]  Да, очень просто.
[01:09:13.000 --> 01:09:16.000]  Значит, смотрите, ну тут.
[01:09:16.000 --> 01:09:19.000]  Ну да. Ну, на самом деле, просто идея такая.
[01:09:19.000 --> 01:09:22.000]  Я на самом деле m-штрих по модулю r в кубе менять и не буду.
[01:09:22.000 --> 01:09:25.000]  То есть, все, что мне нужно теперь, чтобы они не совпадали,
[01:09:25.000 --> 01:09:28.000]  чтобы они по модулю r в кубе не совпадали,
[01:09:28.000 --> 01:09:31.000]  мне нужно их попребавлять к ним всем
[01:09:31.000 --> 01:09:34.000]  по r в кубе умножену морквит-константу.
[01:09:34.000 --> 01:09:37.000]  Так что м и т, это просто,
[01:09:37.000 --> 01:09:40.000]  вот давайте попробуем,
[01:09:40.000 --> 01:09:43.000]  м и т-штрих плюс и r в кубе.
[01:09:46.000 --> 01:09:49.000]  Кстати, интересно, вот это нам не поможет?
[01:09:49.000 --> 01:09:52.000]  Включаем.
[01:09:52.000 --> 01:09:55.000]  Так.
[01:09:55.000 --> 01:09:58.000]  Чего еще раз?
[01:09:58.000 --> 01:10:01.000]  Так, нет, погодите.
[01:10:01.000 --> 01:10:04.000]  Нет, смотрите, тут погодите.
[01:10:04.000 --> 01:10:07.000]  Во-первых, пока, к сожалению, вот этой штукой
[01:10:07.000 --> 01:10:10.000]  мы гарантируем только одно,
[01:10:10.000 --> 01:10:13.000]  что m-ки отсортированы теперь.
[01:10:13.000 --> 01:10:16.000]  m-ки отсортированы, равенств нет.
[01:10:16.000 --> 01:10:19.000]  Но, к сожалению, нам нужно, чтобы они были
[01:10:19.000 --> 01:10:22.000]  отсортированы.
[01:10:22.000 --> 01:10:25.000]  Нет, b-ки отсортированы.
[01:10:25.000 --> 01:10:28.000]  Да, но b-ки плюс m-ки от этого отсортированы,
[01:10:28.000 --> 01:10:31.000]  по-моему, не становятся, нет?
[01:10:31.000 --> 01:10:34.000]  Сейчас.
[01:10:34.000 --> 01:10:37.000]  Так, слушайте, действительно.
[01:10:37.000 --> 01:10:40.000]  Независимо.
[01:10:40.000 --> 01:10:43.000]  Ну, в общем-то,
[01:10:43.000 --> 01:10:46.000]  я не знаю.
[01:10:46.000 --> 01:10:49.000]  Так, слушайте, действительно.
[01:10:49.000 --> 01:10:52.000]  Так, так, так, так, так. Нет, слушайте,
[01:10:52.000 --> 01:10:55.000]  очень интересно.
[01:10:55.000 --> 01:10:58.000]  Неужели это все, что нам нужно?
[01:11:03.000 --> 01:11:06.000]  Так.
[01:11:06.000 --> 01:11:09.000]  Нет, погодите.
[01:11:09.000 --> 01:11:12.000]  Давайте в этом смотреть.
[01:11:12.000 --> 01:11:15.000]  Нет, ну, давайте.
[01:11:15.000 --> 01:11:18.000]  Проблема, которая у нас тут возникает,
[01:11:18.000 --> 01:11:21.000]  следующая, b r-1 плюс m r-1,
[01:11:21.000 --> 01:11:24.000]  если мы это будем оценивать как-то,
[01:11:24.000 --> 01:11:27.000]  b0-m0, да?
[01:11:27.000 --> 01:11:30.000]  То есть это равно чему?
[01:11:30.000 --> 01:11:33.000]  Ну, пока пишем b r-1-b0, да,
[01:11:33.000 --> 01:11:36.000]  плюс m' r-1-m0,
[01:11:36.000 --> 01:11:39.000]  и там плюс, ну, сколько там,
[01:11:39.000 --> 01:11:42.000]  r-1 на r в кубе.
[01:11:42.000 --> 01:11:45.000]  Ну ладно, это r-4 это нас устраивает.
[01:11:45.000 --> 01:11:48.000]  Это r в кубе это нас устраивает, даже это в сумме
[01:11:48.000 --> 01:11:51.000]  не более, чем r-4.
[01:11:51.000 --> 01:11:54.000]  Но возник один маленький проблема.
[01:11:54.000 --> 01:11:57.000]  Маленький проблема теперь заключается в том,
[01:11:57.000 --> 01:12:00.000]  что в разность bшек у нас изначально так и было,
[01:12:00.000 --> 01:12:03.000]  что разницу между bшками никто не отменял.
[01:12:03.000 --> 01:12:06.000]  Она может быть что угодно.
[01:12:06.000 --> 01:12:09.000]  Нет, она всегда равна o от w.
[01:12:09.000 --> 01:12:12.000]  Но самое страшное, что она может быть омега от w.
[01:12:12.000 --> 01:12:15.000]  Да, это важно.
[01:12:15.000 --> 01:12:18.000]  Поэтому придется добавить кое-какое
[01:12:18.000 --> 01:12:21.000]  нормализующее слагаемое.
[01:12:24.000 --> 01:12:27.000]  Вот. Ну а какое?
[01:12:30.000 --> 01:12:33.000]  Ну вот. Ну а каким образом?
[01:12:33.000 --> 01:12:36.000]  Подожди, так как бы теперь,
[01:12:36.000 --> 01:12:39.000]  чтобы эти числа действительно подогнать так, чтобы действительно
[01:12:39.000 --> 01:12:42.000]  вот тут было максимально хорошо.
[01:12:46.000 --> 01:12:49.000]  Но для того, чтобы b и t плюс m и t
[01:12:49.000 --> 01:12:52.000]  было адекватным, да,
[01:12:52.000 --> 01:12:55.000]  мы сделаем вот так. Мы тут добавим действительно
[01:12:55.000 --> 01:12:58.000]  одно нормализующее слагаемое.
[01:12:58.000 --> 01:13:01.000]  Может быть немножко подгоночное.
[01:13:01.000 --> 01:13:04.000]  Но равно оно следующему. Смотрите, мы очень хотим, чтобы не совпадать.
[01:13:04.000 --> 01:13:07.000]  Ну вот.
[01:13:07.000 --> 01:13:10.000]  Смотрите, как мы сделаем. Плюс. Смотрите, сейчас будет такое.
[01:13:10.000 --> 01:13:13.000]  Внимание.
[01:13:13.000 --> 01:13:16.000]  w-bd
[01:13:16.000 --> 01:13:19.000]  округленное
[01:13:19.000 --> 01:13:22.000]  округленное
[01:13:22.000 --> 01:13:25.000]  вниз
[01:13:25.000 --> 01:13:28.000]  до
[01:13:28.000 --> 01:13:31.000]  ближайшего
[01:13:32.000 --> 01:13:35.000]  делящегося
[01:13:39.000 --> 01:13:42.000]  на
[01:13:42.000 --> 01:13:45.000]  кубе числа.
[01:13:55.000 --> 01:13:58.000]  Зачем нам это надо?
[01:13:58.000 --> 01:14:01.000]  Ну вот. Ну во-первых, заметим. Ну зачем деля...
[01:14:01.000 --> 01:14:04.000]  чтобы оно округлялось до ближайшего r в кубе,
[01:14:04.000 --> 01:14:07.000]  делящегося на r в кубе, это понятно. То есть тогда мы гарантируем,
[01:14:07.000 --> 01:14:10.000]  что второе, там первое условие... Нет, с первым условием мы пока не гарантируем,
[01:14:10.000 --> 01:14:13.000]  но третье условие пока живой процветает. Правда?
[01:14:13.000 --> 01:14:16.000]  Красно?
[01:14:19.000 --> 01:14:22.000]  Вот я утверждаю, что с добавлением этого слагаемого
[01:14:22.000 --> 01:14:25.000]  вот это условие продолжает жить и процветать.
[01:14:25.000 --> 01:14:28.000]  Потому что то, что мы добавляем к штрихам, оно продолжает
[01:14:28.000 --> 01:14:31.000]  делиться на r в кубе.
[01:14:34.000 --> 01:14:37.000]  Вот. Теперь давайте смотреть,
[01:14:37.000 --> 01:14:40.000]  что у нас появилось
[01:14:40.000 --> 01:14:43.000]  по вот этому балансу.
[01:14:47.000 --> 01:14:50.000]  Ну вот, значит, смотрите.
[01:14:50.000 --> 01:14:53.000]  Значит, по вот этому балансу получается
[01:14:53.000 --> 01:14:56.000]  то, что мы добавляем в следующее.
[01:14:56.000 --> 01:14:59.000]  То есть теперь давайте его думать.
[01:14:59.000 --> 01:15:02.000]  Теперь к чему будет нот?
[01:15:02.000 --> 01:15:05.000]  Ну вот. Ну во-первых, давайте думать.
[01:15:05.000 --> 01:15:08.000]  Давайте так.
[01:15:08.000 --> 01:15:11.000]  Значит, давайте посмотрим. Во-первых,
[01:15:11.000 --> 01:15:14.000]  b и плюс 1 плюс r и плюс m
[01:15:14.000 --> 01:15:17.000]  и плюс 1 минус bt минус mt.
[01:15:17.000 --> 01:15:20.000]  Мы хотим убедиться, что эта штука
[01:15:20.000 --> 01:15:23.000]  больше либо равна нуля. Даже больше нуля, правда?
[01:15:23.000 --> 01:15:26.000]  Ну ладно, нулю она не равна, это мы уже выяснили.
[01:15:29.000 --> 01:15:32.000]  Но теперь заметим следующее.
[01:15:32.000 --> 01:15:35.000]  Что такое теперь bt плюс 1?
[01:15:35.000 --> 01:15:38.000]  Что такое теперь вот это вот mt?
[01:15:38.000 --> 01:15:41.000]  Что это такое?
[01:15:44.000 --> 01:15:47.000]  То есть на самом деле это теперь равно.
[01:15:47.000 --> 01:15:50.000]  То есть равно
[01:15:50.000 --> 01:15:53.000]  минус bt плюс
[01:15:53.000 --> 01:15:56.000]  plus mit штрих
[01:15:56.000 --> 01:15:59.000]  плюс ir в кубе
[01:15:59.000 --> 01:16:02.000]  плюс, ну можно так сказать,
[01:16:02.000 --> 01:16:05.000]  плюс w минус
[01:16:05.000 --> 01:16:08.000]  нечто от нуля dr в кубе.
[01:16:08.000 --> 01:16:11.000]  Согласны?
[01:16:11.000 --> 01:16:14.000]  Вот, понятна такая запись?
[01:16:18.000 --> 01:16:21.000]  Есть кто живой?
[01:16:21.000 --> 01:16:24.000]  Вот.
[01:16:24.000 --> 01:16:27.000]  Кто тогда есть?
[01:16:27.000 --> 01:16:30.000]  Вот, значит, давай. Значит, смотрим дальше.
[01:16:30.000 --> 01:16:33.000]  Значит, m. Значит, дальше теперь смотрим.
[01:16:33.000 --> 01:16:36.000]  Тогда вот эта вот штука, она равна.
[01:16:36.000 --> 01:16:39.000]  То есть если вот bt прибавить, то там будет шлёп-шлёп.
[01:16:39.000 --> 01:16:42.000]  И тогда останется.
[01:16:42.000 --> 01:16:45.000]  Значит, m и плюс 1 штрих, да?
[01:16:45.000 --> 01:16:48.000]  Плюс ir в кубе.
[01:16:49.000 --> 01:16:52.000]  То есть и плюс 1
[01:16:52.000 --> 01:16:55.000]  r в кубе.
[01:16:55.000 --> 01:16:58.000]  Вот, значит, минус 0
[01:16:58.000 --> 01:17:01.000]  r в кубе.
[01:17:01.000 --> 01:17:04.000]  Минус, теперь смотрите, минус mit штрих
[01:17:04.000 --> 01:17:07.000]  минус ir в кубе
[01:17:07.000 --> 01:17:10.000]  плюс нечто от нуля dr в кубе.
[01:17:10.000 --> 01:17:13.000]  Видите, да?
[01:17:13.000 --> 01:17:16.000]  То есть это равно
[01:17:16.000 --> 01:17:19.000]  практически, это равно
[01:17:19.000 --> 01:17:22.000]  наш железных r в кубе
[01:17:22.000 --> 01:17:25.000]  плюс m штрих
[01:17:25.000 --> 01:17:28.000]  и плюс 1
[01:17:28.000 --> 01:17:31.000]  минус mit штрих
[01:17:31.000 --> 01:17:34.000]  и дальше плюс, я вот так пишу,
[01:17:34.000 --> 01:17:37.000]  плюс нечто от минус r в кубе
[01:17:37.000 --> 01:17:40.000]  до r в кубе.
[01:17:40.000 --> 01:17:43.000]  Интересные числа.
[01:17:43.000 --> 01:17:46.000]  Правда, единственная проблема.
[01:17:46.000 --> 01:17:49.000]  Ну вот.
[01:17:49.000 --> 01:17:52.000]  У меня что-то упало.
[01:17:52.000 --> 01:17:55.000]  Вот.
[01:17:55.000 --> 01:17:58.000]  Так.
[01:17:58.000 --> 01:18:01.000]  Но теперь заметим следующее. В принципе, если гарантировать,
[01:18:01.000 --> 01:18:04.000]  что m штрих у меня отсортированные,
[01:18:04.000 --> 01:18:07.000]  если гарантировать, что они у меня отсортированные,
[01:18:07.000 --> 01:18:10.000]  а в общем-то, если мы в каждый момент времени будем
[01:18:10.000 --> 01:18:13.000]  брать самые минимальные из доступных, то это можно себе гарантировать.
[01:18:13.000 --> 01:18:16.000]  Правда?
[01:18:16.000 --> 01:18:19.000]  Но тогда мы получаем, что вот эта штука заведомо больше нуля.
[01:18:25.000 --> 01:18:28.000]  То есть получается, что, ну вот,
[01:18:28.000 --> 01:18:31.000]  то есть она, ну вот,
[01:18:31.000 --> 01:18:34.000]  даже я более точно напишу.
[01:18:34.000 --> 01:18:37.000]  Ну да. То есть это, то есть они, значит,
[01:18:37.000 --> 01:18:40.000]  соответственно отсортированы. То есть эта штука лежит у нас от нуля
[01:18:40.000 --> 01:18:43.000]  до r в кубе. То есть, ну, по большому счету, то есть эта сумма
[01:18:43.000 --> 01:18:46.000]  получается где-то от нуля до
[01:18:46.000 --> 01:18:49.000]  3 r в кубе.
[01:18:49.000 --> 01:18:52.000]  Видите, да?
[01:18:55.000 --> 01:18:58.000]  Ну да, помните, мы когда жадно брали,
[01:18:58.000 --> 01:19:01.000]  нам никто не мешал их брать прям честно.
[01:19:01.000 --> 01:19:04.000]  Просто берем самые минимальные из доступных,
[01:19:04.000 --> 01:19:07.000]  то есть берем там, смотрим, кто у нас в масочке не занят,
[01:19:07.000 --> 01:19:10.000]  берем первый нолик, ну, а это мы все умеем.
[01:19:10.000 --> 01:19:13.000]  Вот. Но самое приятное,
[01:19:13.000 --> 01:19:16.000]  почему я здесь еще точнее написал?
[01:19:16.000 --> 01:19:19.000]  Потому что с одной стороны разность положительная, с другой стороны
[01:19:19.000 --> 01:19:22.000]  она небольшая, не более чем 3 r в кубе. Видите?
[01:19:24.000 --> 01:19:27.000]  Но тогда, если все эти разности сложить,
[01:19:27.000 --> 01:19:30.000]  то телескопически получится, что разность вот этих вот,
[01:19:30.000 --> 01:19:33.000]  она не превосходит 3 r в четвертый.
[01:19:36.000 --> 01:19:39.000]  Что у меня?
[01:19:39.000 --> 01:19:42.000]  Нет, это не микрофон, это шапочка от микрофона.
[01:19:47.000 --> 01:19:50.000]  Ну да.
[01:19:50.000 --> 01:19:53.000]  А что, он его кепочка шел?
[01:19:53.000 --> 01:19:56.000]  Ну вот.
[01:19:56.000 --> 01:19:59.000]  То есть, таким образом получается, что если так подогнать,
[01:19:59.000 --> 01:20:02.000]  то микрофон опять падает.
[01:20:02.000 --> 01:20:05.000]  Ну да, что-то микрофон устал, да.
[01:20:05.000 --> 01:20:08.000]  Ну не волнуйся ты, ну скоро будем что-то еще рассказывать.
[01:20:08.000 --> 01:20:11.000]  Не волнуйся, мы уже победили на самом деле,
[01:20:11.000 --> 01:20:14.000]  как наиболее внимательно поняли, что мы уже победили
[01:20:14.000 --> 01:20:17.000]  на самом деле давно.
[01:20:20.000 --> 01:20:23.000]  А это невольно.
[01:20:23.000 --> 01:20:26.000]  Ой, знаете, да.
[01:20:26.000 --> 01:20:29.000]  Это уже было... Нет.
[01:20:34.000 --> 01:20:37.000]  Нет, ну это да. Ну в этом алгоритме точно помогает.
[01:20:37.000 --> 01:20:40.000]  Нет, знаете, бывают более сложные алгоритмы,
[01:20:40.000 --> 01:20:43.000]  когда полезно их несколько раз рассказать.
[01:20:47.000 --> 01:20:50.000]  Сейчас, чего? Где, где, где?
[01:20:50.000 --> 01:20:53.000]  Где меньше, чем w?
[01:20:53.000 --> 01:20:56.000]  Где меньше, чем w?
[01:21:02.000 --> 01:21:05.000]  Да, проблема, проблема.
[01:21:10.000 --> 01:21:13.000]  Ну да.
[01:21:13.000 --> 01:21:16.000]  Ну как сказать, с другой стороны,
[01:21:16.000 --> 01:21:19.000]  ладно, как решить эту проблему?
[01:21:19.000 --> 01:21:22.000]  Ответ. Вот так.
[01:21:22.000 --> 01:21:25.000]  Вот давайте дубаем.
[01:21:25.000 --> 01:21:28.000]  А вот действительно, если...
[01:21:28.000 --> 01:21:31.000]  Вот как вы думаете, если у нас виртуально мы тут говорим,
[01:21:31.000 --> 01:21:34.000]  что все эти масочки были размера w, а стали размеры не w,
[01:21:34.000 --> 01:21:37.000]  а ну скажем 5w.
[01:21:37.000 --> 01:21:40.000]  Это там сильно вообще Колинкор поменяло?
[01:21:40.000 --> 01:21:43.000]  Вот мы, если у нас все числа гарантируются,
[01:21:43.000 --> 01:21:46.000]  свято гарантируются, что все числа у нас
[01:21:46.000 --> 01:21:49.000]  по количеству бит не превосходят 5w.
[01:21:49.000 --> 01:21:52.000]  Ну, по количеству бит, конечно.
[01:21:52.000 --> 01:21:55.000]  Возникает вопрос, а нельзя ли утверждать,
[01:21:55.000 --> 01:21:58.000]  что мы все равно можем делать в ними все операции
[01:21:58.000 --> 01:22:01.000]  за o от единицы?
[01:22:01.000 --> 01:22:04.000]  Да, это будет более жирное, но o от единицы.
[01:22:04.000 --> 01:22:07.000]  Как бы все равно b шкимки, у нас все равно все мелкие
[01:22:07.000 --> 01:22:10.000]  от w, да?
[01:22:10.000 --> 01:22:13.000]  Ну хотя, видите, поэтому на самом деле
[01:22:13.000 --> 01:22:16.000]  это не так и глобально.
[01:22:16.000 --> 01:22:19.000]  Вот, на самом деле эти все мелочи.
[01:22:19.000 --> 01:22:22.000]  Вот.
[01:22:22.000 --> 01:22:25.000]  Ну вот, соответственно, к чему это нас приводит.
[01:22:25.000 --> 01:22:28.000]  А приводит нас...
[01:22:28.000 --> 01:22:31.000]  Вот это к тому, что мы, соответственно, тогда
[01:22:31.000 --> 01:22:34.000]  научились тогда считать этот супер скетч.
[01:22:34.000 --> 01:22:37.000]  Единственное, конечно, что в этом супер скетче
[01:22:37.000 --> 01:22:40.000]  нам, конечно, потребуется и b шки, и m шки хорошо,
[01:22:40.000 --> 01:22:43.000]  что нам, конечно, потребуется и b шки, и m шки хорошо знать.
[01:22:43.000 --> 01:22:46.000]  Да?
[01:22:46.000 --> 01:22:49.000]  Да, ну это да.
[01:22:49.000 --> 01:22:52.000]  Но заранее за o от r мы предпочитали и b шки, и m шки.
[01:22:52.000 --> 01:22:55.000]  Нет, то нам просто потребуется в любом случае, когда мы
[01:22:55.000 --> 01:22:58.000]  эти lcp будем искать, потому что потребуется и стоит,
[01:22:58.000 --> 01:23:01.000]  где там, что закончилось, правда?
[01:23:01.000 --> 01:23:04.000]  Вот.
[01:23:04.000 --> 01:23:07.000]  Разберемся, куда же мы денемся.
[01:23:07.000 --> 01:23:10.000]  Ну нет, понятно, что...
[01:23:10.000 --> 01:23:13.000]  То есть просто как-то часто бывает в программировании,
[01:23:13.000 --> 01:23:16.000]  когда это кодится, значит, придется в этом разобраться.
[01:23:16.000 --> 01:23:19.000]  То есть классическая реклама.
[01:23:19.000 --> 01:23:22.000]  Помните, Gen2Linux это операционная система, в которой вы можете
[01:23:22.000 --> 01:23:25.000]  сделать все, и вы будете делать все.
[01:23:25.000 --> 01:23:28.000]  Вот. Ну я это уже говорил, конечно, но,
[01:23:28.000 --> 01:23:31.000]  как говорится, это как бы просто иногда лейтмотив
[01:23:31.000 --> 01:23:34.000]  просто программирования.
[01:23:34.000 --> 01:23:37.000]  Вот. В некоторых случаях, конечно.
[01:23:37.000 --> 01:23:40.000]  В остальных случаях работают там всякие эти правила
[01:23:40.000 --> 01:23:43.000]  в духе, что там это... Чем хороший программист
[01:23:43.000 --> 01:23:46.000]  отличается от обычного? Хороший программист знает, что
[01:23:46.000 --> 01:23:49.000]  все, что можно было написать, уже давно написали.
[01:23:49.000 --> 01:23:52.000]  Чем отличается отличный программист от хорошего?
[01:23:52.000 --> 01:23:55.000]  Отличный знает, где достать.
[01:24:00.000 --> 01:24:03.000]  Удачи.
[01:24:03.000 --> 01:24:06.000]  Гениальный программист, видимо, знает, где достать бесплатно.
[01:24:06.000 --> 01:24:09.000]  Так что вот.
[01:24:09.000 --> 01:24:12.000]  В результате получается, что...
[01:24:12.000 --> 01:24:15.000]  Ну вот. То есть в результате получается,
[01:24:15.000 --> 01:24:18.000]  что у нас теперь есть вот такая штука.
[01:24:18.000 --> 01:24:21.000]  То есть теперь у нас есть Fusion 3, мы сумели тут
[01:24:21.000 --> 01:24:24.000]  оказывается искать всякие
[01:24:24.000 --> 01:24:27.000]  лавербаунды, там опербаунды, правда,
[01:24:27.000 --> 01:24:30.000]  в статической версии, но вот за от единицы
[01:24:30.000 --> 01:24:33.000]  в предположении, что чисел мало.
[01:24:36.000 --> 01:24:39.000]  Вот.
[01:24:39.000 --> 01:24:42.000]  А теперь, соответственно, у нас...
[01:24:42.000 --> 01:24:45.000]  То есть более того окажется, что есть
[01:24:45.000 --> 01:24:48.000]  на самом деле... То есть иногда у нас будет действительно
[01:24:48.000 --> 01:24:51.000]  красивая мечта. Красивая мечта будет заключаться в том,
[01:24:51.000 --> 01:24:54.000]  что пока действительно чисел мало, все-таки хотелось бы уметь
[01:24:54.000 --> 01:24:57.000]  и добавлять элементы.
[01:24:57.000 --> 01:25:00.000]  Да.
[01:25:00.000 --> 01:25:03.000]  И добавлять, удалять и что самое интересное искать минимум.
[01:25:06.000 --> 01:25:09.000]  Потому что на самом деле...
[01:25:09.000 --> 01:25:12.000]  Ну вот. Ну потому что следующее,
[01:25:12.000 --> 01:25:15.000]  да, видимо, полностью, конечно, не сегодня, тем не менее.
[01:25:15.000 --> 01:25:18.000]  Вот. То есть на самом деле у нас будет
[01:25:18.000 --> 01:25:21.000]  действительно штука, которая действительно что-то подобное потребует.
[01:25:21.000 --> 01:25:24.000]  Но если вы для маленьких научитесь сокращать
[01:25:24.000 --> 01:25:27.000]  за логарифом, то дальше все остальное, как ни странно,
[01:25:27.000 --> 01:25:30.000]  магическим образом делается все за о от единицы
[01:25:30.000 --> 01:25:33.000]  с помощью очень хитрой амортизации.
[01:25:33.000 --> 01:25:36.000]  Ну очень хитрой, которая, правда, была
[01:25:36.000 --> 01:25:39.000]  изобретена еще в куче фибонач.
[01:25:39.000 --> 01:25:42.000]  Если и не раньше.
[01:25:42.000 --> 01:25:45.000]  Так что да. И с этой... Ну вот.
[01:25:45.000 --> 01:25:48.000]  И, соответственно, с этой помощью тогда
[01:25:48.000 --> 01:25:51.000]  мы... Называется сумеем. То есть, ну, собственно, основное первое,
[01:25:51.000 --> 01:25:54.000]  что мы сможем, это искать основные деревья за о от е.
[01:25:54.000 --> 01:25:57.000]  Поэтому, да, пожалуй, уже действительно сегодня тяжеловато.
[01:25:57.000 --> 01:26:00.000]  Поэтому действительно сейчас, наверное, пришло время перерыва.
[01:26:00.000 --> 01:26:03.000]  А после этого мы займемся чем-нибудь простеньким.
[01:26:03.000 --> 01:26:06.000]  Значит, короче, да, связанный граф, но он взвешенный.
[01:26:06.000 --> 01:26:09.000]  Ну, мы можем считать, что веса...
[01:26:09.000 --> 01:26:12.000]  Но для нашей задачи нам, кстати, даже все равно
[01:26:12.000 --> 01:26:15.000]  более-менее веса бывают отрицательными или нет.
[01:26:15.000 --> 01:26:18.000]  Вот.
[01:26:18.000 --> 01:26:21.000]  Нарисую сейчас какие-нибудь.
[01:26:21.000 --> 01:26:24.000]  И цель, значит, оставить у этого граф...
[01:26:24.000 --> 01:26:27.000]  Удалить некоторые ребра, оставить такие...
[01:26:27.000 --> 01:26:30.000]  Такие ребра, чтобы граф остался связанным и при этом был деревом.
[01:26:30.000 --> 01:26:33.000]  Это называется остов.
[01:26:33.000 --> 01:26:36.000]  Ну вот. Ну, астовов может быть много у графа,
[01:26:36.000 --> 01:26:39.000]  но нас интересует минимальный.
[01:26:39.000 --> 01:26:42.000]  Ну, минимальный, то есть чтобы суммарный вес
[01:26:42.000 --> 01:26:45.000]  этих выживших ребер был минимальный.
[01:26:45.000 --> 01:26:48.000]  Ну, сразу оговоримся, почему отрицательные ребра нам не важны.
[01:26:48.000 --> 01:26:51.000]  Ну, потому что заметим, что в этом случае,
[01:26:51.000 --> 01:26:54.000]  в отличие от, кстати, поиска расстояния в графе,
[01:26:54.000 --> 01:26:57.000]  если я ко всем ребрам прибавлю единичку,
[01:26:57.000 --> 01:27:00.000]  то сам по себе минимальный остов не поменяется.
[01:27:00.000 --> 01:27:03.000]  Потому что у всех остовов вес измерится
[01:27:03.000 --> 01:27:06.000]  на одну и ту же константу, поэтому...
[01:27:06.000 --> 01:27:09.000]  То есть кто был минимальный, тот минимальным и остался.
[01:27:09.000 --> 01:27:12.000]  Поэтому, в общем-то, без сильного ограничения
[01:27:12.000 --> 01:27:15.000]  общества можно считать, что ребра не отрицательные.
[01:27:15.000 --> 01:27:18.000]  Впрочем, не то чтобы это нам даже сильно будет помогать.
[01:27:18.000 --> 01:27:21.000]  Вот. Вот в двух китайцах нам это периодически даже поможет.
[01:27:21.000 --> 01:27:24.000]  Вот в двух китайцах нам это может даже помочь.
[01:27:24.000 --> 01:27:27.000]  Но...
[01:27:33.000 --> 01:27:36.000]  Вот.
[01:27:36.000 --> 01:27:39.000]  И так, значит, далее.
[01:27:39.000 --> 01:27:42.000]  Так вот.
[01:27:42.000 --> 01:27:45.000]  Значит, как же его искать?
[01:27:48.000 --> 01:27:51.000]  Вот.
[01:27:51.000 --> 01:27:54.000]  Ну да, мало того, что да.
[01:27:54.000 --> 01:27:57.000]  Ладно, значит, смотрите.
[01:27:57.000 --> 01:28:00.000]  Значит, как же нам искать мин остов?
[01:28:00.000 --> 01:28:03.000]  Ну, сразу скажем, что алгоритмы построения этого мин остова,
[01:28:03.000 --> 01:28:06.000]  конечно, разные, но базируются они все
[01:28:06.000 --> 01:28:09.000]  в основном на одном и том же жадном соображении.
[01:28:09.000 --> 01:28:12.000]  А соображение звучит так.
[01:28:12.000 --> 01:28:15.000]  Значит, во-первых, ведем понятие...
[01:28:15.000 --> 01:28:18.000]  Вот сейчас надо очень аккуратно формулировать.
[01:28:18.000 --> 01:28:21.000]  Значит, смотрите.
[01:28:21.000 --> 01:28:24.000]  Жадное соображение.
[01:28:24.000 --> 01:28:27.000]  Значит, ведем понятие разрез.
[01:28:27.000 --> 01:28:30.000]  Разрез С и Т.
[01:28:30.000 --> 01:28:33.000]  Это когда мы множество вершин разбиваем.
[01:28:33.000 --> 01:28:36.000]  Вот тут стандартное обозначение вот такое на два множества.
[01:28:36.000 --> 01:28:39.000]  Что означает вот этот знак?
[01:28:39.000 --> 01:28:42.000]  Он обычно означает, что С пересеченное с Т равно пустому множеству.
[01:28:42.000 --> 01:28:45.000]  То есть они не пересекаются,
[01:28:45.000 --> 01:28:48.000]  но их объединение дает так.
[01:28:48.000 --> 01:28:51.000]  А еще нам, конечно же,
[01:28:51.000 --> 01:28:54.000]  еще это не входит в это обозначение, но мы себе добавим,
[01:28:54.000 --> 01:28:57.000]  что С и Т, конечно же, не равны пустому множеству.
[01:28:57.000 --> 01:29:00.000]  То есть мы хотим реально разбирения,
[01:29:00.000 --> 01:29:03.000]  а не типа там пустота в одну сторону, а остальные в другую.
[01:29:03.000 --> 01:29:06.000]  Вот.
[01:29:06.000 --> 01:29:09.000]  Ну вот.
[01:29:12.000 --> 01:29:15.000]  Вот, значит, соответственно.
[01:29:15.000 --> 01:29:18.000]  И мы, значит, теперь можем объявить...
[01:29:18.000 --> 01:29:21.000]  Значит, это вот такое понятие разреза.
[01:29:21.000 --> 01:29:24.000]  Можем говорить, что ребро, допустим,
[01:29:24.000 --> 01:29:27.000]  Е равно УВВ, будем говорить,
[01:29:27.000 --> 01:29:30.000]  пересекает разрез.
[01:29:30.000 --> 01:29:33.000]  Будем говорить.
[01:29:33.000 --> 01:29:36.000]  Пересекает разрез.
[01:29:36.000 --> 01:29:39.000]  Если, ну вы догадываетесь.
[01:29:39.000 --> 01:29:42.000]  Да?
[01:29:42.000 --> 01:29:45.000]  Если У лежит в С,
[01:29:45.000 --> 01:29:48.000]  к сор В лежит в С.
[01:29:48.000 --> 01:29:51.000]  Ровно одно и то же.
[01:29:51.000 --> 01:29:54.000]  Или что то же самое,
[01:29:54.000 --> 01:29:57.000]  одна из этих вершин лежит в одной доле разреза,
[01:29:57.000 --> 01:30:00.000]  а другая в другой.
[01:30:00.000 --> 01:30:03.000]  Ну тут сформулировать можно десятью способами.
[01:30:03.000 --> 01:30:06.000]  То есть одна лежит в доле С,
[01:30:06.000 --> 01:30:09.000]  другая в доле Т, нам не принципиально кто где,
[01:30:09.000 --> 01:30:12.000]  потому что неориентированный.
[01:30:12.000 --> 01:30:15.000]  Вот, кстати, обратите внимание, именно этим у нас поиск
[01:30:15.000 --> 01:30:18.000]  минус 100 будет отличаться от потока.
[01:30:18.000 --> 01:30:21.000]  В потоках нам будет принципиально кто лежит в доле С, а кто в доле Т.
[01:30:22.000 --> 01:30:25.000]  Значит, вот такое вот ребро.
[01:30:25.000 --> 01:30:28.000]  Так вот.
[01:30:28.000 --> 01:30:31.000]  Мистическая теорема.
[01:30:31.000 --> 01:30:34.000]  Тут вот опасно,
[01:30:34.000 --> 01:30:37.000]  потому что у меня в билетах она называется теорема
[01:30:37.000 --> 01:30:40.000]  о разрезе.
[01:30:40.000 --> 01:30:43.000]  Да.
[01:30:43.000 --> 01:30:46.000]  Некоторые студенты потом после этого в этом месте начинают рассказывать что-то про потоки.
[01:30:46.000 --> 01:30:49.000]  Правда всегда, когда такое происходит,
[01:30:49.000 --> 01:30:52.000]  это почему-то на переиздаче, но это другой вопрос.
[01:30:52.000 --> 01:30:55.000]  Ну, по случайному совпадению, не знаю почему.
[01:30:55.000 --> 01:30:58.000]  Ну вот, но это теорема о разрезе,
[01:30:58.000 --> 01:31:01.000]  она же лемма о безопасном ребре.
[01:31:01.000 --> 01:31:04.000]  Вот звучит, вот сейчас мы ее максимально аккуратно сформулируем.
[01:31:04.000 --> 01:31:07.000]  Поэтому ладно, я ее сформулирую как утверждение.
[01:31:07.000 --> 01:31:10.000]  Она же лемма о безопасном ребре, она же теорема о разрезе.
[01:31:13.000 --> 01:31:16.000]  Значит, смотрите.
[01:31:16.000 --> 01:31:19.000]  Пусть.
[01:31:19.000 --> 01:31:22.000]  Значит, допустим, у нас есть так,
[01:31:22.000 --> 01:31:25.000]  значит, пусть tau, значит, под множество e,
[01:31:25.000 --> 01:31:28.000]  но это не просто под множество e,
[01:31:28.000 --> 01:31:31.000]  а под множество,
[01:31:31.000 --> 01:31:34.000]  под множество rubik,
[01:31:34.000 --> 01:31:37.000]  внимание,
[01:31:37.000 --> 01:31:40.000]  какого-то, я даже капсууму пишу,
[01:31:40.000 --> 01:31:43.000]  какого-то минимального асто.
[01:31:46.000 --> 01:31:49.000]  Одного и того же,
[01:31:49.000 --> 01:31:52.000]  по сравнению с кем.
[01:31:56.000 --> 01:31:59.000]  Ну, под множество rubik, да.
[01:31:59.000 --> 01:32:02.000]  То есть какого-то минус того.
[01:32:02.000 --> 01:32:05.000]  Ну, там отдельная песня у вас, даже в домашнем задании,
[01:32:05.000 --> 01:32:08.000]  будет доказать, что если ребра все по парноразличие,
[01:32:08.000 --> 01:32:11.000]  то минус то в принципе один.
[01:32:11.000 --> 01:32:14.000]  Да, не очень красивый.
[01:32:14.000 --> 01:32:17.000]  Ой, нет, точно надо домашний.
[01:32:17.000 --> 01:32:20.000]  Такой красивый дзз начинается.
[01:32:20.000 --> 01:32:23.000]  Ой, там это красивое.
[01:32:23.000 --> 01:32:26.000]  Ой, слушайте, а какой там дзз на компоненты вершины
[01:32:26.000 --> 01:32:29.000]  двух связностей?
[01:32:29.000 --> 01:32:32.000]  Чего?
[01:32:33.000 --> 01:32:36.000]  Да.
[01:32:43.000 --> 01:32:46.000]  Значит, смотрите, так вот.
[01:32:46.000 --> 01:32:49.000]  Пусть это tal под множество минус 100.
[01:32:49.000 --> 01:32:52.000]  Пусть s и t,
[01:32:52.000 --> 01:32:55.000]  разрез,
[01:32:55.000 --> 01:32:58.000]  ну вот,
[01:32:58.000 --> 01:33:01.000]  разрез,
[01:33:01.000 --> 01:33:04.000]  причем
[01:33:04.000 --> 01:33:07.000]  ни одно,
[01:33:07.000 --> 01:33:10.000]  давайте очень аккуратно формулируем,
[01:33:10.000 --> 01:33:13.000]  ни одно из rubber
[01:33:13.000 --> 01:33:16.000]  tal
[01:33:16.000 --> 01:33:19.000]  этот разрез
[01:33:19.000 --> 01:33:22.000]  не пересекает.
[01:33:22.000 --> 01:33:25.000]  Не пересекает.
[01:33:25.000 --> 01:33:28.000]  Не пересекает.
[01:33:28.000 --> 01:33:31.000]  Не пересекает.
[01:33:31.000 --> 01:33:34.000]  Пересекает.
[01:33:34.000 --> 01:33:37.000]  Вот.
[01:33:37.000 --> 01:33:40.000]  Далее.
[01:33:40.000 --> 01:33:43.000]  Чего на чем такой нот?
[01:33:43.000 --> 01:33:46.000]  Так вот, пусть,
[01:33:46.000 --> 01:33:49.000]  значит,
[01:33:49.000 --> 01:33:52.000]  пусть E
[01:33:52.000 --> 01:33:55.000]  равно u, v, w.
[01:33:55.000 --> 01:33:58.000]  Это минимальное
[01:33:58.000 --> 01:34:01.000]  по весу, конечно же,
[01:34:01.000 --> 01:34:04.000]  ребро
[01:34:04.000 --> 01:34:07.000]  пересекающее
[01:34:13.000 --> 01:34:16.000]  кого-то.
[01:34:16.000 --> 01:34:19.000]  Пересекающее разрез.
[01:34:19.000 --> 01:34:22.000]  Вот.
[01:34:22.000 --> 01:34:25.000]  Да.
[01:34:25.000 --> 01:34:28.000]  Ну, традиционно, start, finish,
[01:34:28.000 --> 01:34:31.000]  wait.
[01:34:31.000 --> 01:34:34.000]  Ну, структурка. Еще бывает id.
[01:34:34.000 --> 01:34:37.000]  А как вы пишете графы?
[01:34:37.000 --> 01:34:40.000]  Ну, а у нас вот так.
[01:34:40.000 --> 01:34:43.000]  Так вот.
[01:34:43.000 --> 01:34:46.000]  А вот тут вот максимально,
[01:34:46.000 --> 01:34:49.000]  тут опасно.
[01:34:49.000 --> 01:34:52.000]  Потому что, как бы, что такое tal plus, тогда E можно
[01:34:52.000 --> 01:34:55.000]  добавить в tal, это потребует уточнения, что это значит.
[01:34:55.000 --> 01:34:58.000]  Хотя очень хочется так сказать.
[01:34:58.000 --> 01:35:01.000]  Вот. И очень легко, поэтому я тут формулирую аккуратно.
[01:35:01.000 --> 01:35:04.000]  Тогда множество tal объединенное
[01:35:04.000 --> 01:35:07.000]  с ребром E
[01:35:07.000 --> 01:35:10.000]  является
[01:35:10.000 --> 01:35:13.000]  под
[01:35:13.000 --> 01:35:16.000]  множеством ребр,
[01:35:19.000 --> 01:35:22.000]  под множеством ребр
[01:35:22.000 --> 01:35:25.000]  внимание, какого-то
[01:35:25.000 --> 01:35:28.000]  минимального
[01:35:28.000 --> 01:35:31.000]  астола.
[01:35:31.000 --> 01:35:34.000]  Какого-то.
[01:35:34.000 --> 01:35:37.000]  То есть, видите, тут вот куча мест,
[01:35:37.000 --> 01:35:40.000]  можно ошибиться в формулировке и получить формальную чушь.
[01:35:40.000 --> 01:35:43.000]  Потому что, возможно,
[01:35:43.000 --> 01:35:46.000]  вот это ребро E вот к этому какому-то
[01:35:46.000 --> 01:35:49.000]  миностову никакого отношения не имеет.
[01:35:49.000 --> 01:35:52.000]  То есть, возможно, дерево поменяет.
[01:35:52.000 --> 01:35:55.000]  Вот.
[01:35:55.000 --> 01:35:58.000]  Но главное, что
[01:35:58.000 --> 01:36:01.000]  до какого-то минимального астола дополнить можно.
[01:36:01.000 --> 01:36:04.000]  То есть, в чем
[01:36:04.000 --> 01:36:07.000]  глубокий смысл этой леммы?
[01:36:07.000 --> 01:36:10.000]  Глубокий смысл леммы заключается в том, что у нас теперь есть такой
[01:36:10.000 --> 01:36:13.000]  мета-жадник. Такой мета-алгоритм.
[01:36:13.000 --> 01:36:16.000]  У меня есть tal изначально пустое, да?
[01:36:16.000 --> 01:36:19.000]  И я в него добавляю ребра по одному. Каждое ребро я добавляю
[01:36:19.000 --> 01:36:22.000]  простым образом. Я нахожу разрез, который
[01:36:22.000 --> 01:36:25.000]  не пересекает ребра tal,
[01:36:25.000 --> 01:36:28.000]  нахожу в нем минимальное ребро и добавляю его в tal.
[01:36:28.000 --> 01:36:31.000]  Такой мета-алгоритм.
[01:36:31.000 --> 01:36:34.000]  Ну, потому что мы никаким образом не сказали, как мы этот разрез
[01:36:34.000 --> 01:36:37.000]  ищем и как этот минимальное ребро в нем выкапываем.
[01:36:37.000 --> 01:36:40.000]  Вот.
[01:36:40.000 --> 01:36:43.000]  Ну, вот, то есть, такой вот мета-жадник получается.
[01:36:43.000 --> 01:36:46.000]  Но для того, чтобы его использовать, давайте его,
[01:36:46.000 --> 01:36:49.000]  чтобы к этому не возвращаться, быстренько его докажем.
[01:36:49.000 --> 01:36:52.000]  В общем-то, да, ну вот.
[01:36:52.000 --> 01:36:55.000]  То есть, доказательство очень простое.
[01:36:55.000 --> 01:36:58.000]  Правда, это тоже потребует определенной аккуратности.
[01:36:58.000 --> 01:37:01.000]  Я помню там вот задачки на подобное дело, я помню там вот у вас
[01:37:01.000 --> 01:37:04.000]  будет домашний узнание, я их принимал, там столько способов ошибить.
[01:37:04.000 --> 01:37:07.000]  Там допустить неаккуратность. То есть, такое решение,
[01:37:07.000 --> 01:37:10.000]  которое кажется правильным, но, на померку,
[01:37:10.000 --> 01:37:13.000]  окажется легко запутаться.
[01:37:13.000 --> 01:37:16.000]  Но, как говорится, то есть, если тут сразу правильные мысли,
[01:37:16.000 --> 01:37:19.000]  то никаких проблем не будет. Знаете, смотрите.
[01:37:19.000 --> 01:37:22.000]  То есть, доказательство такое.
[01:37:22.000 --> 01:37:25.000]  Берем, значит, разрез.
[01:37:26.000 --> 01:37:29.000]  От этого нашего тал, веселого, да,
[01:37:29.000 --> 01:37:32.000]  у нас тут были какие-то частички вот эти все.
[01:37:32.000 --> 01:37:35.000]  То есть, вот это вот что-то было, там вот какое-то такое безобразие.
[01:37:35.000 --> 01:37:38.000]  Ну, то есть, тал, понятно, это лес какой-то.
[01:37:38.000 --> 01:37:41.000]  Под лес мимо стола, да.
[01:37:41.000 --> 01:37:44.000]  Некоторые его компоненты могут вообще из одной вершины состоять.
[01:37:44.000 --> 01:37:47.000]  Как это, например, в алгоритме прима будет.
[01:37:47.000 --> 01:37:50.000]  Ну и так далее.
[01:37:50.000 --> 01:37:53.000]  Вот. Видите, да?
[01:37:54.000 --> 01:37:57.000]  И вот мы провели разрез, который его не пересекает.
[01:37:59.000 --> 01:38:02.000]  И вот, наконец, мы берем то самое
[01:38:02.000 --> 01:38:05.000]  новое минимальное ребро в этом разрезе.
[01:38:05.000 --> 01:38:08.000]  Видите, да?
[01:38:11.000 --> 01:38:14.000]  Предположим, что нам фантастически повезло.
[01:38:14.000 --> 01:38:17.000]  Ну, то есть, если нам фантастически повезло,
[01:38:17.000 --> 01:38:20.000]  и это ребро действительно в этом миностове,
[01:38:20.000 --> 01:38:23.000]  если это ребро в нём не лежит, то всё, мы победили.
[01:38:23.000 --> 01:38:26.000]  Но если вот это вот какой-то миностов, он какой-то другой,
[01:38:26.000 --> 01:38:29.000]  то есть, в смысле, вот это ребро в нём не лежит,
[01:38:29.000 --> 01:38:32.000]  то придется сделать более хитрое рассуждение.
[01:38:32.000 --> 01:38:35.000]  Значит, что это мог быть за миностов?
[01:38:35.000 --> 01:38:38.000]  Ну, заметим, что бы там ни было, а между этими двумя вершинами
[01:38:38.000 --> 01:38:41.000]  существует путь, правда?
[01:38:41.000 --> 01:38:44.000]  Существует?
[01:38:45.000 --> 01:38:48.000]  Ну вот, путь откровенно существует.
[01:38:49.000 --> 01:38:55.000]  И этот путь, внимание, хотя бы один раз пересекает разрез.
[01:38:58.000 --> 01:39:01.000]  Обратите внимание, именно что хотя бы один раз.
[01:39:01.000 --> 01:39:03.000]  Почему хотя бы один раз?
[01:39:03.000 --> 01:39:06.000]  Потому что в принципе вот какую-нибудь там ситуацию в духе,
[01:39:06.000 --> 01:39:09.000]  там какую-нибудь вот такую вот...
[01:39:10.000 --> 01:39:13.000]  Чего? Похоже, похоже.
[01:39:13.000 --> 01:39:16.000]  Не понял.
[01:39:17.000 --> 01:39:20.000]  Это не ребро.
[01:39:21.000 --> 01:39:24.000]  Нет, это я просто нарисовал путь.
[01:39:24.000 --> 01:39:27.000]  Ладно. То есть, дорисовал.
[01:39:27.000 --> 01:39:30.000]  Вот, он может пересечь этот астопон сколько угодно,
[01:39:30.000 --> 01:39:33.000]  раз там туда-сюда, любой зигзаг.
[01:39:33.000 --> 01:39:36.000]  Вот.
[01:39:36.000 --> 01:39:42.000]  Но самое для нас главное, что хотя бы один раз он разрез пересечет, куда он денется.
[01:39:43.000 --> 01:39:47.000]  И тогда, смотрите, рассмотрим какое-нибудь ребро, находящееся на разрезе.
[01:39:47.000 --> 01:39:51.000]  Тогда вот у этого ребра вес W,
[01:39:51.000 --> 01:39:56.000]  а у этого W', что больше либо равно W.
[01:39:58.000 --> 01:40:01.000]  Тогда у нас, тогда идея такая.
[01:40:01.000 --> 01:40:03.000]  Давайте удалим.
[01:40:03.000 --> 01:40:07.000]  Тогда заметим, что так как это ребро, как бы, при добавлении его стянулся цикл,
[01:40:07.000 --> 01:40:09.000]  то мы можем удалить это ребро.
[01:40:09.000 --> 01:40:11.000]  То есть, удалить это ребро и добавить это.
[01:40:11.000 --> 01:40:13.000]  То есть, если вот, видите, делать это аккуратно,
[01:40:13.000 --> 01:40:19.000]  то тогда у нас мы просто превратили один астоп в другой астоп.
[01:40:21.000 --> 01:40:25.000]  Ну, раз один астоп превратился в другой астоп, то, соответственно...
[01:40:25.000 --> 01:40:30.000]  И более того, заметим, что мы заменили ребро на ребро, которое не больше по весу.
[01:40:31.000 --> 01:40:34.000]  То есть, поэтому дальше там можно десятью способами рассуждать.
[01:40:34.000 --> 01:40:38.000]  То есть, теперь отсюда следует, что W' на самом деле равно W,
[01:40:38.000 --> 01:40:43.000]  потому что в противном случае вот этот вот синий астоп был не минимальным, откровенно.
[01:40:43.000 --> 01:40:46.000]  Ну, просто мы тупо минимальнее нашли, правда?
[01:40:46.000 --> 01:40:47.000]  Вот.
[01:40:47.000 --> 01:40:50.000]  Но если они равны, то тогда я просто вместо...
[01:40:50.000 --> 01:40:53.000]  В одном минимальном астове заменил одно ребро на такое же
[01:40:53.000 --> 01:40:56.000]  и получил другой минимальный астоп.
[01:40:57.000 --> 01:40:59.000]  Вот, собственно, и все.
[01:41:00.000 --> 01:41:03.000]  То есть, таким образом, видите, аккуратно, что вот этот вот,
[01:41:03.000 --> 01:41:07.000]  этот вот, это какой-то миностоп может быть не такой же, как вот этот.
[01:41:07.000 --> 01:41:10.000]  Но, тем не менее, подогнать можно.
[01:41:13.000 --> 01:41:18.000]  То есть, вот такая вот у нас простоя левма получилась.
[01:41:19.000 --> 01:41:21.000]  Вот, понимаете?
[01:41:22.000 --> 01:41:24.000]  Да, нет, наверное.
[01:41:24.000 --> 01:41:26.000]  Отлично.
[01:41:27.000 --> 01:41:29.000]  Вот.
[01:41:29.000 --> 01:41:33.000]  Ну и, соответственно, тогда первое ребро, которое у нас тут возникнет,
[01:41:33.000 --> 01:41:36.000]  но первая штука, которая у нас тут возникнет,
[01:41:36.000 --> 01:41:40.000]  это, конечно, алгоритм Прима.
[01:41:41.000 --> 01:41:44.000]  Да, почему именно он, непонятно на самом деле.
[01:41:44.000 --> 01:41:46.000]  Правильнее было бы, конечно, начать с алгоритма Барувки.
[01:41:46.000 --> 01:41:50.000]  Ну, как-никак он все-таки появился за 30 лет до Прима.
[01:41:50.000 --> 01:41:53.000]  Ой, в общем, отдельная песня.
[01:41:53.000 --> 01:41:57.000]  Как говорится, жил был электрик, и поручили ему соединить все города Чехословакии
[01:41:57.000 --> 01:42:00.000]  электрической сетью за минимальное число проводов.
[01:42:00.000 --> 01:42:02.000]  И началось.
[01:42:02.000 --> 01:42:04.000]  Вот.
[01:42:06.000 --> 01:42:07.000]  Ну, значит, смотрите.
[01:42:07.000 --> 01:42:10.000]  Ну, мы начнем с алгоритма Прима, потому что, то есть, на самом деле,
[01:42:10.000 --> 01:42:13.000]  конечно, и Прима, Краскал, и Барувка, это все, на самом деле, алгоритмы,
[01:42:13.000 --> 01:42:15.000]  они крайне важны для теории.
[01:42:15.000 --> 01:42:18.000]  Может быть, Барувка даже, может быть, даже...
[01:42:18.000 --> 01:42:20.000]  Для практики уже, да.
[01:42:20.000 --> 01:42:22.000]  Ну, для практики вопрос.
[01:42:22.000 --> 01:42:25.000]  Ну, как бы для теории, я имею в виду с точной зрения, что там продвинутые алгоритмы,
[01:42:25.000 --> 01:42:29.000]  по-любому, будет, наверное, что-то из них, наверное, как основу использования.
[01:42:29.000 --> 01:42:32.000]  Пример, я так с летом не помню, есть вообще алгоритмы какие-нибудь,
[01:42:32.000 --> 01:42:35.000]  которые вообще ничего из этого не использовали как идеи.
[01:42:35.000 --> 01:42:39.000]  Там в Барувке вообще будет такая красота, как шаг в Барувке.
[01:42:39.000 --> 01:42:42.000]  Там вот вероятность там вот в этом алгоритме там классно будет, ну и так далее.
[01:42:42.000 --> 01:42:44.000]  Но это мы доживем.
[01:42:44.000 --> 01:42:46.000]  Там.
[01:42:46.000 --> 01:42:48.000]  Да.
[01:42:48.000 --> 01:42:49.000]  Вот.
[01:42:49.000 --> 01:42:51.000]  Значит, смотрите, что дальше.
[01:42:51.000 --> 01:42:54.000]  А дальше, следующее.
[01:42:54.000 --> 01:42:57.000]  Итак, как выглядит вообще алгоритм Прима?
[01:42:58.000 --> 01:43:02.000]  Ну, алгоритм Прима, да, в дефолтной версии говорит так.
[01:43:10.000 --> 01:43:11.000]  Вот.
[01:43:11.000 --> 01:43:13.000]  То есть, ну, тут какие-то тут вот...
[01:43:13.000 --> 01:43:15.000]  Это все есть, вот это есть, есть, есть, есть, есть.
[01:43:15.000 --> 01:43:17.000]  Вот.
[01:43:17.000 --> 01:43:19.000]  Вот.
[01:43:19.000 --> 01:43:23.000]  Ну, какая-то вот такая красота даже там, нет смысла до конца дорисовывать.
[01:43:23.000 --> 01:43:25.000]  И мы говорим так.
[01:43:25.000 --> 01:43:29.000]  Пока у нас ребер нет, изначально, то есть у нас в каждый момент времени будет...
[01:43:29.000 --> 01:43:33.000]  То есть мы начнем с какой-то стартовой вершины с 0, первой попавшейся.
[01:43:35.000 --> 01:43:37.000]  И мы в нее будем...
[01:43:37.000 --> 01:43:39.000]  И мы будем...
[01:43:39.000 --> 01:43:47.000]  У нас в каждый момент времени текущее подмножство стола будет некой связанным множеством подсоединенным к вершине с 0.
[01:43:49.000 --> 01:43:51.000]  То есть работать будет так.
[01:43:51.000 --> 01:43:57.000]  Сначала мы скажем, что разрез это вот с 0 и все остальное, выберем минимальное ребро.
[01:43:58.000 --> 01:44:03.000]  На следующем шаге мы скажем, что у нас разрез это вот эти две вершины и все остальное.
[01:44:03.000 --> 01:44:07.000]  Выберем там, скажем, допустим, вот это ребро.
[01:44:08.000 --> 01:44:10.000]  Потом вот эти три...
[01:44:10.000 --> 01:44:13.000]  Ой, вот эти три ребра, давайте вот это ребро выберем.
[01:44:13.000 --> 01:44:16.000]  Потом четыре, ну и так далее. Принцип понятен, да?
[01:44:16.000 --> 01:44:18.000]  Классический алгоритм Прима.
[01:44:19.000 --> 01:44:22.000]  В некоторых случаях его даже написать оптимально именно его.
[01:44:22.000 --> 01:44:25.000]  То есть, например, скорее всего мы сталкивались с такой задачей.
[01:44:25.000 --> 01:44:30.000]  Значит дан граф, там каждая вершина это точка на плоскости, их всего 5 тысяч,
[01:44:30.000 --> 01:44:35.000]  а вес ребра это расстояние между точками, найдите миностов.
[01:44:35.000 --> 01:44:38.000]  Ну-ка, кто писал такую задачу когда-нибудь?
[01:44:40.000 --> 01:44:42.000]  Даны 5 тысяч точек на плоскости.
[01:44:42.000 --> 01:44:45.000]  Мы хотим составить, поставить, построить миностов.
[01:44:47.000 --> 01:44:51.000]  Да, мы хотим построить миностов, где ребра не даны в явном виде,
[01:44:51.000 --> 01:44:55.000]  но между любыми двумя вершинами можно провести ребро и его вес расстояния между точками.
[01:44:57.000 --> 01:44:59.000]  Ну вот, нет, дело не в этом.
[01:44:59.000 --> 01:45:04.000]  Нет, дело это, это просто как бы типичный пример, когда Прим с кучей хуже, чем Прим без кучи.
[01:45:04.000 --> 01:45:07.000]  Ну, помните, как до экстра с кучей не всегда оптимально.
[01:45:07.000 --> 01:45:12.000]  Да, вот, ну вот, да, давайте, то теперь давайте проговорим, как это можно реализовать.
[01:45:12.000 --> 01:45:16.000]  Но если в тупую, вот как я сказал, то возможно у вас получится даже ОАТВ.
[01:45:19.000 --> 01:45:25.000]  Ну потому что каждый раз вы перебираете все ребра, из них выбираете кто, кто пересекает разрез,
[01:45:25.000 --> 01:45:29.000]  и кто из тех, кто пересекает разрез, выбираете минимум и добавляете, да.
[01:45:29.000 --> 01:45:34.000]  Но понятно, что как-то, наверное, как-то, как-то, как-то, как-то, как-то, как-то,
[01:45:34.000 --> 01:45:40.000]  но понятно, что как-то, наверное, как-то, как-то, возможно, не все думали, что так вообще можно написать.
[01:45:41.000 --> 01:45:47.000]  Вот, на самом деле можно написать, но на самом деле, конечно, алгоритм Прима очень похож на алгоритм Dx.
[01:45:50.000 --> 01:45:54.000]  Потому что в некотором смысле, вот, помните, мы же с вами обсуждали об общении алгоритма Dx, да.
[01:45:56.000 --> 01:45:59.000]  Так вот, на самом деле, в данном случае, простите, когда вы тут пишете алгоритм Dx,
[01:45:59.000 --> 01:46:08.000]  то же самое, что, практически, что, соответственно, вы ищете кратчайшие пути до вершины и нот,
[01:46:08.000 --> 01:46:14.000]  только, там, путь до вершины, это что-то типа, там, минимально возможные ребра до нее.
[01:46:17.000 --> 01:46:19.000]  То есть, на самом деле, по большому счету.
[01:46:19.000 --> 01:46:22.000]  Ну, то есть, на самом деле, то есть, идея такая, что вместо того, чтобы писать ve,
[01:46:22.000 --> 01:46:27.000]  то есть, на самом деле, есть напрашивающаяся реализация за v квадрат плюс e.
[01:46:28.000 --> 01:46:34.000]  Где вы заводите, вы говорите, что d от v это минимальное такое v,
[01:46:36.000 --> 01:46:42.000]  что там u, v, w, значит, лежит на ребре e, и, соответственно, u лежит в доле s.
[01:46:45.000 --> 01:46:50.000]  Ну, мы поддерживаем такое d, и, там, изначально, вот, и каждый раз, когда мы добавляем,
[01:46:50.000 --> 01:46:56.000]  то есть, выбираем на каждом шаге минимальную d, да, то есть, вершину, которая не лежит в s с минимальной d,
[01:46:56.000 --> 01:47:01.000]  то есть, получается, вершину, которую можно подцепить к нашей компоненте за минимальное ребро,
[01:47:01.000 --> 01:47:04.000]  говорим, что там u, z от v равно true, и релаксируем.
[01:47:05.000 --> 01:47:07.000]  Так, надо подробнее рассказывать.
[01:47:09.000 --> 01:47:10.000]  Ну да, думаю, не надо.
[01:47:10.000 --> 01:47:13.000]  Да, вот. То есть, вот это вот классика.
[01:47:16.000 --> 01:47:17.000]  Ну, хорошо.
[01:47:18.000 --> 01:47:24.000]  Но тогда, как мы уже с вами догадываемся, этот v квадрат плюс e, если e не очень большое,
[01:47:24.000 --> 01:47:28.000]  то есть, как всегда, если у вас там классические v сто тысяч, e двести тысяч,
[01:47:28.000 --> 01:47:30.000]  то, наверное, можно это реализовать по оптимальне.
[01:47:32.000 --> 01:47:38.000]  А именно, если d хранить, например, не в массиве, а в каком-то сете.
[01:47:41.000 --> 01:47:45.000]  То есть, как бы, то есть, это вот, ну вот, то есть, если мы там добавим set и какой-нибудь hip,
[01:47:48.000 --> 01:47:51.000]  то тогда у вас получается o от e лог v.
[01:47:51.000 --> 01:47:56.000]  Да, здесь v плюс e на лог v писать не надо, потому что e здесь заведомо не меньше, чем v минус 1, кстати.
[01:47:57.000 --> 01:47:58.000]  Да, приятная наука.
[01:47:59.000 --> 01:48:00.000]  Вот.
[01:48:01.000 --> 01:48:07.000]  Но, как бы, непонятно, ну и как, и видим, что да, бывает, что этот алгоритм лучше, если e порядка v квадрата.
[01:48:07.000 --> 01:48:11.000]  Бывает, что этот алгоритм лучше, если e значительно меньше, чем v квадрат.
[01:48:13.000 --> 01:48:14.000]  Внимание, вопрос.
[01:48:14.000 --> 01:48:18.000]  Какая итальянская фамилия упоминалась в прошлый раз, когда у нас возникали такие,
[01:48:18.000 --> 01:48:20.000]  какие-то подобного рода терки?
[01:48:21.000 --> 01:48:23.000]  Да, фибоначи, совершенно верно.
[01:48:24.000 --> 01:48:28.000]  Потому что, если у нас есть куча фибоначи,
[01:48:35.000 --> 01:48:41.000]  то мы обнаруживаем, что в куче фибоначи мы только удаляем минимум за от логарифа,
[01:48:41.000 --> 01:48:44.000]  а все остальное мы делаем за от единицы, понимаете?
[01:48:45.000 --> 01:48:51.000]  И тогда это получается, что там, то есть как бы все, что мы делаем от единицы, включая уменьшение.
[01:48:51.000 --> 01:48:56.000]  То есть, если мы элементы не хотим удалять, но хотим уменьшить, то это тоже делается за от единицы.
[01:48:56.000 --> 01:48:57.000]  Помните, да?
[01:48:58.000 --> 01:49:01.000]  И за счет этого у нас получалось e плюс v лог ве.
[01:49:01.000 --> 01:49:04.000]  Но, в принципе, технологии абсолютно как в dx повторяться смысла нет.
[01:49:06.000 --> 01:49:07.000]  Вот, тут все просто.
[01:49:08.000 --> 01:49:11.000]  Значит, куча фибоначи, e плюс v лог ве.
[01:49:11.000 --> 01:49:12.000]  E плюс v лог ве.
[01:49:12.000 --> 01:49:14.000]  То есть, вот таким вот образом мы можем написать.
[01:49:16.000 --> 01:49:17.000]  Вот.
[01:49:19.000 --> 01:49:23.000]  Но, соответственно, тем не менее, можно попробовать написать еще круче.
[01:49:31.000 --> 01:49:32.000]  Вот.
[01:49:32.000 --> 01:49:33.000]  Значит, смотрите.
[01:49:34.000 --> 01:49:35.000]  Все еще можно сделать.
[01:49:36.000 --> 01:49:37.000]  Да.
[01:49:37.000 --> 01:49:41.000]  Но это я, конечно, сделал обзор, действительно, какие версии алгоритма Приба у нас есть.
[01:49:43.000 --> 01:49:44.000]  Вот.
[01:49:44.000 --> 01:49:52.000]  А сейчас же я расскажу, как говорится, алгоритм за более веселую асимптуль.
[01:49:52.000 --> 01:49:57.000]  То есть, сейчас то, что я расскажу, это будет называться алгоритм Фредмана Тарьяна.
[01:49:59.000 --> 01:50:04.000]  Да, Фредман это вот один из создателей вот там, там всей той теории, которую мы тут изучаем.
[01:50:06.000 --> 01:50:07.000]  Вот.
[01:50:07.000 --> 01:50:09.000]  И так, Фредман Тарьян.
[01:50:10.000 --> 01:50:12.000]  Или Таржан, я уже даже не знаю.
[01:50:13.000 --> 01:50:14.000]  Ну, вот.
[01:50:15.000 --> 01:50:16.000]  Значит, Фредман Тарьян.
[01:50:18.000 --> 01:50:20.000]  Значит, наша ставка будет следующая.
[01:50:23.000 --> 01:50:32.000]  Он будет работать за о от л от е умножить на, чтобы не путать все это.
[01:50:33.000 --> 01:50:34.000]  Бета.
[01:50:35.000 --> 01:50:48.000]  Бета от м от е и в, где бета от е в будет равно, то есть это будет, ну, это будет,
[01:50:48.000 --> 01:51:11.000]  бета от m от e и v, где бета от e v будет равно, то есть это минимальному такому и, что логарифом, логарифом, логарифом и раз.
[01:51:11.000 --> 01:51:34.000]  Ну, я еще не ввел это обозначение, сейчас введу. А так, да, это она и есть. Ну, хотя это не совсем, тут это, значит, лог, лог, лог. Ну, вот, значит, соответственно, m, там v, очень хочется, чтобы было меньше либо равно, е делить на v, если уж брать совсем формально.
[01:51:34.000 --> 01:51:47.000]  То есть минимальное такое и, что если взять там от v и раз логарифом, то получится что-то меньше либо равно, чем е делить на v.
[01:51:47.000 --> 01:52:07.000]  Да. Я вам даже больше скажу. То есть асимпатические, то есть это на самом деле асимпатические, примерно равно, как на самом деле лог звездочка v минус лог звездочка е поделить на v.
[01:52:07.000 --> 01:52:26.000]  Вот так. Более того, на самом деле смотрите, как тут интересно-то на самом деле получается. На самом деле, сейчас, знаете, вот, возможно, вы слышали, я уже упоминал, я упоминал, наверное, в прошлом семестре это заклинание.
[01:52:26.000 --> 01:52:40.000]  Если е больше, допустим, если е больше, чем v, лог, лог, лог, v, то тогда я утверждаю, что этот алгоритм вообще работает за отъяснение.
[01:52:40.000 --> 01:52:48.000]  Да, ну идея очень простая.
[01:52:48.000 --> 01:52:54.000]  Можете, а если е больше, чем v, лог, лог, лог, лог, в, можно не зато в самом деле?
[01:52:54.000 --> 01:53:02.000]  Можно. Тут вот аккуратно так, да, на самом деле можно, тут очень весело на самом деле, да.
[01:53:02.000 --> 01:53:18.000]  Ну, в общем, главное, понятно, даже вот из этого оно уже понятно откуда берется. Да, потому что если е больше, чем v, лог, лог, v, то это как бы меньше либо равно, чем лог звездочка v минус лог звездочка от лог, лог, лог, v.
[01:53:18.000 --> 01:53:26.000]  А лог звездочка лог, лог, лог, v, это как бы лог звездочка v минус 3, правда? По сути.
[01:53:26.000 --> 01:53:30.000]  А почему у меня три лога ставится? Почему у меня один, два, пять?
[01:53:30.000 --> 01:53:42.000]  Отбалдывает. А чтоб красиво было. То есть такое, чтобы уже достижение. Да, я могу, можно пять логов поставить и сказать то же самое. Любую, наперед, заднюю константу, пожалуйста.
[01:53:42.000 --> 01:53:54.000]  Ну просто константа будет более жирная, она как бы просто общий случай не покрывает. То есть мы уже сталкивались с этим случаем, когда для любого епсилом больше нуля мы получили алгоритм, который там это
[01:53:54.000 --> 01:54:04.000]  перевножает длинные, числа разные длинные n за o от n в степени 1 плюс епсилом. Было. Правда, константа была все более и более жирная, но как бы вот можно сгрузить.
[01:54:04.000 --> 01:54:16.000]  То есть здесь я тоже могу сказать, что для любого числа там z. Существует такой алгоритм, что если е больше чем v, а вот z раз лог, лог, лог, лог, v, то тогда у вас алгоритм работает за o от v.
[01:54:16.000 --> 01:54:26.000]  Правда, константа от z зависит, но это уже другой вопрос. То есть, конечно, нельзя заявлять, что этот алгоритм работает за o от e, это не так.
[01:54:26.000 --> 01:54:44.000]  Ну а соответственно, что делать? Вот спрашивается действительно, а что делать? Делать мы будем вот что.
[01:54:44.000 --> 01:54:54.000]  Давайте, смотрите. Сейчас мы будем, значит, как же этой мистической асимптотики достичь.
[01:54:54.000 --> 01:55:08.000]  Этой мистической асимптотики можно достичь к следующему.
[01:55:08.000 --> 01:55:22.000]  Вот, значит, смотрите. Значит, наша цель будет такой. Ну тут разные технологии могут быть, но цель будет такая.
[01:55:22.000 --> 01:55:37.000]  Значит, смотрите. Я буду делать в этом алгоритме несколько шагов. На каждом шаге я зафиксирую некое число k и буду делать следующее.
[01:55:37.000 --> 01:55:50.000]  Возьму первую попавшуюся вершину s0 и буду с помощью прима и кучи фибоначи строить вот такое дерево. Дерево, дерево, дерево строим.
[01:55:50.000 --> 01:56:07.000]  Ну прям вот как в обычном, да? Как обычно. До тех пор, пока у меня размер этого дерева не станет равным k. Или даже больше либо равным k.
[01:56:07.000 --> 01:56:26.000]  Ну тут така. Потому что тут я в этом месте остановлюсь. Тут я в этом месте остановлюсь. Возьму вершину, которая сюда еще не попала и буду делать абсолютно то же самое.
[01:56:26.000 --> 01:56:44.000]  То же самое. И то же, что пока больше либо равным k. Причем. Да, может так случиться, что в какой-то момент очередное ребро, которое мы захотим добавить, заставит нас присоединиться к чему-то уже ранее вот этому взятому, да?
[01:56:44.000 --> 01:56:52.000]  Ну ничего страшного. Тогда мы в этом месте остановимся и эту компоненту просто объединим. Ничего страшного.
[01:56:52.000 --> 01:57:08.000]  И так сделаем, пока у нас все вершины не кончатся. То есть таким образом мы добились того, чтобы у нас все вершины были, чтобы у нас действительно появились все вершины, попали в какой-то под компонент именно 100.
[01:57:08.000 --> 01:57:15.000]  Причем в каждой компоненте лежит хотя бы ковершина. Почему хотя бы? Потому что возможно вот такое объединение.
[01:57:16.000 --> 01:57:28.000]  Внимание, вопрос. То есть за какую асимптотику я могу это проделать?
[01:57:28.000 --> 01:57:57.000]  Так, мы... Нет, зачем же, зачем, зачем же. Ну фактически мы... Ну скорее на самом деле надо. Нам хватает массива юзет на самом деле. То есть s&m тут не надо.
[01:57:57.000 --> 01:58:06.000]  Да, я специально хотел избегать s&m, потому что, во-первых, он тут не нужен, во-вторых, как бы его надо отдельно анализировать. Но алгоритм вот этот на самом деле никакого отношения к s&m не имеет.
[01:58:06.000 --> 01:58:12.000]  Ну, при желании можете его туда запихнуть, но на самом деле это вы... Нет, даже не нужно, потому что он даст вам какую-то лишнюю обратную функцию.
[01:58:12.000 --> 01:58:22.000]  Альфу какую-то мы не знаем, что это, и она больше единицы. Не надо. Практически да.
[01:58:30.000 --> 01:58:36.000]  Ну вот да, потому что совсем в тупую, если это делать, то это работает за e плюс v, правда?
[01:58:42.000 --> 01:58:47.000]  А что?
[01:58:47.000 --> 01:58:50.000]  Совсем в тупую, но это бесполезно.
[01:58:50.000 --> 01:58:58.000]  Ну вот. Да, действительно, получается такое вот e плюс, действительно, v лог v.
[01:58:58.000 --> 01:59:04.000]  Типа при каровной e или...
[01:59:04.000 --> 01:59:11.000]  Но если в тупую с кучей фибоначи, это все делать. То есть прим с кучей фибоначи, которые мы только что обсуждали.
[01:59:11.000 --> 01:59:13.000]  То есть мы на k забиваем вообще, или что?
[01:59:13.000 --> 01:59:17.000]  Ну, по k забиваем... Нет, не забиваем, это просто сигнал, где нам остановиться.
[01:59:17.000 --> 01:59:19.000]  Просто его нет на симпатике?
[01:59:19.000 --> 01:59:21.000]  Да, но хотелось бы, чтобы был.
[01:59:21.000 --> 01:59:24.000]  То есть ты каждый раз смотришь по всем остальным вершинам, чтобы найти следующее?
[01:59:24.000 --> 01:59:27.000]  Ну, типа. Точнее, лезешь в кучу и смотришь.
[01:59:27.000 --> 01:59:37.000]  Но на самом деле, действительно, идея в том, что на самом деле надо, конечно, сделать, чтобы тут было не v, а чтобы тут было k.
[01:59:37.000 --> 01:59:40.000]  Как это сделать?
[01:59:40.000 --> 01:59:43.000]  А сделать это очень просто.
[01:59:43.000 --> 01:59:49.000]  Ну, основная идея заключается в том, что так как наша цель добавить только k элементов,
[01:59:49.000 --> 01:59:59.000]  то заметим, что нам никогда нет смысла на самом деле хранить в куче больше, чем k элементов. Правда?
[02:00:01.000 --> 02:00:03.000]  Что?
[02:00:06.000 --> 02:00:08.000]  Вот.
[02:00:08.000 --> 02:00:10.000]  Чего?
[02:00:14.000 --> 02:00:18.000]  Ну, потому что мы же v вершин достаем из кучи.
[02:00:21.000 --> 02:00:24.000]  В каждом момент времени не больше, чем k.
[02:00:27.000 --> 02:00:31.000]  А вот очень... Вот есть подозрения, что могли бы этого добиться.
[02:00:31.000 --> 02:00:34.000]  Почему мы... Почему у нас есть...
[02:00:34.000 --> 02:00:40.000]  Нет, потому что добиться этого можно так.
[02:00:40.000 --> 02:00:44.000]  То есть подтверждение следующее, что предположим, что у нас есть там, допустим, куча вариантов.
[02:00:44.000 --> 02:00:46.000]  Тысяча вариантов.
[02:00:46.000 --> 02:00:48.000]  А k равно 28.
[02:00:50.000 --> 02:00:54.000]  Ну, вершины вот с этими ребрами, которые мы прямо сейчас можем прицепить.
[02:00:55.000 --> 02:01:03.000]  Тогда у меня есть такое предложение. Есть у меня такое подозрение, что, наверное,
[02:01:03.000 --> 02:01:09.000]  добавлять... То есть, наверное, если у нас пришел вариант, и он больше, чем любой из наших 28,
[02:01:09.000 --> 02:01:13.000]  то, наверное, добавлять его резона нет. Правда?
[02:01:16.000 --> 02:01:19.000]  Ну, есть такое подозрение. Правда?
[02:01:19.000 --> 02:01:31.000]  Ну, когда мы релаксируем из вершины, да, у нас тут релаксируем риобрада и пытаемся их добавить...
[02:01:31.000 --> 02:01:35.000]  Тут релаксировать ответ для какой-то вершины. Понимаете?
[02:01:35.000 --> 02:01:50.000]  Нет, сливать — это если мы добавили ребро в новую вершину, она, возьми, была раньше, оказывается.
[02:01:50.000 --> 02:01:52.000]  Такое тоже может быть.
[02:01:52.000 --> 02:01:54.000]  Ну вот.
[02:01:54.000 --> 02:01:59.000]  Тогда мы в этом месте останавливаемся, объединяем, что эти две компоненты на самом деле одна компонента.
[02:01:59.000 --> 02:02:01.000]  И все.
[02:02:02.000 --> 02:02:08.000]  Ну почему? Ну юзидами же мы помечаем. То есть мы просто останавливаемся в этом месте, берем следующую пустую вершину
[02:02:08.000 --> 02:02:11.000]  и начинаем работать из нее.
[02:02:11.000 --> 02:02:15.000]  Вот. Ну и теперь возникает вопрос.
[02:02:15.000 --> 02:02:22.000]  То есть, поэтому вот эта идея, что, наверное, хранить достаточно только последние 28 минимум.
[02:02:22.000 --> 02:02:25.000]  Ну, в смысле к, да.
[02:02:25.000 --> 02:02:30.000]  И если пришел новый элемент, а он больше, чем все к, то, собственно, зачем нам его хранить?
[02:02:32.000 --> 02:02:35.000]  Правда есть один маленький момент.
[02:02:35.000 --> 02:02:42.000]  Если мы хорошо допустим, у нас есть ограничение, что нам достаточно хранить не более, чем к, действительно, вершины.
[02:02:42.000 --> 02:02:44.000]  Ну возникает такой вопрос.
[02:02:44.000 --> 02:02:51.000]  Да, то есть, возникает вот, а вот пришло ребро, и оно лучше, чем там все, что было.
[02:02:51.000 --> 02:02:53.000]  Возникает такой вопрос.
[02:02:53.000 --> 02:02:58.000]  А не, ну вот, то есть, нам же его тогда придется удалить.
[02:02:59.000 --> 02:03:02.000]  Ну вот, да, текущая худшая надо удалить.
[02:03:02.000 --> 02:03:04.000]  Ну, просто удалить из кучи.
[02:03:04.000 --> 02:03:07.000]  Это, к сожалению, тоже логариф.
[02:03:10.000 --> 02:03:12.000]  Так, запихнем в сет.
[02:03:12.000 --> 02:03:14.000]  Да, ну можно и в сет, а можно и в самой кучи.
[02:03:14.000 --> 02:03:18.000]  Но из сета вы в сете-то искать и удалять, вы тоже за логарифом будете.
[02:03:23.000 --> 02:03:26.000]  Да, но проблема в том, что один раз, к сожалению, если бы говорили,
[02:03:26.000 --> 02:03:28.000]  если бы для каждой вершины мы это говорили, то да.
[02:03:28.000 --> 02:03:32.000]  Но, к сожалению, мы не для каждой вершины это делаем, а для каждого ребра.
[02:03:33.000 --> 02:03:36.000]  Мы же заранее не знаем, потому что каждая вершина может быть там,
[02:03:36.000 --> 02:03:40.000]  то есть, на самом деле, в каждую вершину торчит куча ребер.
[02:03:40.000 --> 02:03:43.000]  И какие-то из них большие, а какие-то маленькие.
[02:03:43.000 --> 02:03:49.000]  Поэтому, может, мы сейчас вершину из кучи выкинули, а потом она будет обратно добавлена, мало ли.
[02:03:49.000 --> 02:03:51.000]  Всякое же бывает.
[02:03:52.000 --> 02:03:54.000]  Ну-ка, вот возникает вопрос.
[02:03:54.000 --> 02:03:56.000]  Что делать?
[02:03:57.000 --> 02:04:01.000]  Вот можно ли тут как-нибудь все-таки допилить, чтобы действительно тут было плохо?
[02:04:12.000 --> 02:04:14.000]  Вот действительно как-нибудь тут аккуратнее.
[02:04:24.000 --> 02:04:28.000]  Так, вот действительно возникает такая идея, что если у нас есть два, да,
[02:04:28.000 --> 02:04:31.000]  что можно, конечно, говорить, а давайте забьем, но если там размер, скажем, 2k,
[02:04:31.000 --> 02:04:36.000]  то давайте просто как-нибудь за o от k, допустим, отпилим сразу целую половину.
[02:04:42.000 --> 02:04:44.000]  Да, вот возникает только вопрос, действительно.
[02:04:44.000 --> 02:04:46.000]  Как это сделать именно вот?
[02:04:46.000 --> 02:04:48.000]  Ну, с кем просто?
[02:04:48.000 --> 02:04:50.000]  С кем?
[02:04:50.000 --> 02:04:52.000]  С кем?
[02:04:52.000 --> 02:04:54.000]  Как это сделать именно вот?
[02:05:12.000 --> 02:05:14.000]  Ну, задача.
[02:05:14.000 --> 02:05:16.000]  Нет, у тебя да.
[02:05:16.000 --> 02:05:18.000]  То есть у тебя лежит куча фибоначий на 2k элементов.
[02:05:18.000 --> 02:05:21.000]  Тебе нужно максимальное k взять и удалить.
[02:05:21.000 --> 02:05:26.000]  То есть, конечно, на прошлый вариант, а давайте по куче фибоначий выпишем все
[02:05:26.000 --> 02:05:28.000]  элементы, которые там лежат, это делается за o от k.
[02:05:28.000 --> 02:05:32.000]  Там найдем идеану за o от k, удалим.
[02:05:32.000 --> 02:05:34.000]  За o от k.
[02:05:34.000 --> 02:05:38.000]  И все, а за остальных за o от k построим новую кучу фибоначий.
[02:05:40.000 --> 02:05:42.000]  Да, только маленькая проблема.
[02:05:42.000 --> 02:05:44.000]  Что там с потенциалом?
[02:05:48.000 --> 02:05:52.000]  А почему, погодите, а почему у нас там был равен потенциал?
[02:05:58.000 --> 02:06:02.000]  Ну, вопрос мог бы быть в том, что а вдруг там потенциал?
[02:06:02.000 --> 02:06:04.000]  Проблема в том, что там же учетная стоимость.
[02:06:04.000 --> 02:06:10.000]  Поэтому вдруг мы там вот этой операции за o от k испортили потенциал, причем испортили его.
[02:06:10.000 --> 02:06:12.000]  Заново посчитали новую кучу.
[02:06:12.000 --> 02:06:14.000]  Старая куча перестала существовать.
[02:06:14.000 --> 02:06:16.000]  Ее потенциал просто не меньше нуля.
[02:06:16.000 --> 02:06:20.000]  А, ну да, старая куча перестала существовать, а у новой стал потенциал равен k.
[02:06:20.000 --> 02:06:22.000]  Ну, как вы видите.
[02:06:22.000 --> 02:06:24.000]  Да.
[02:06:24.000 --> 02:06:26.000]  А, ну да, мы все равно в нее все добавили за o.
[02:06:26.000 --> 02:06:32.000]  А, ну хорошо, да, от этой самой операции потенциал только уменьшился, поэтому все в порядке.
[02:06:32.000 --> 02:06:34.000]  Что мы тогда делали?
[02:06:34.000 --> 02:06:36.000]  Значит, мы сделали себе лог k так.
[02:06:36.000 --> 02:06:42.000]  Мы говорим, что пока у нас размер кучи меньше, чем 2k, нас все устраивает.
[02:06:42.000 --> 02:06:52.000]  Но как только размер кучи становится 2k, мы, значит, мы берем и за o от k эту кучу перестраиваем.
[02:06:52.000 --> 02:07:00.000]  А именно, за o от k выписываем все элементы, там находим медиану и ликвидируем после там максимальные k.
[02:07:00.000 --> 02:07:02.000]  Это можно за o от k сделать, помните?
[02:07:02.000 --> 02:07:04.000]  Это фибоначивая куча?
[02:07:04.000 --> 02:07:06.000]  Нет, уже нет.
[02:07:06.000 --> 02:07:10.000]  Мы уже из этой кучи просто выписали тупо все 2k элементы, которые там есть.
[02:07:10.000 --> 02:07:12.000]  Какая куча? Фибоначивая?
[02:07:12.000 --> 02:07:16.000]  Была фибоначивая куча в рандомном.
[02:07:16.000 --> 02:07:20.000]  Ну как-нибудь вы можете выписать, да?
[02:07:20.000 --> 02:07:24.000]  Ну так, пробежаться по всем деревьям, выписать там все их.
[02:07:24.000 --> 02:07:26.000]  Начали медиану.
[02:07:26.000 --> 02:07:28.000]  Ну вот, да.
[02:07:28.000 --> 02:07:30.000]  Да, оставили вот минимальную половину.
[02:07:30.000 --> 02:07:34.000]  И из этих k оставшихся элементов...
[02:07:34.000 --> 02:07:38.000]  Ну да, которые по факту там будут двусвязанным списочком с минимумом.
[02:07:38.000 --> 02:07:42.000]  Ну это если вы вспомните, как устроена куча фибоначи.
[02:07:42.000 --> 02:07:44.000]  Но это не важно.
[02:07:44.000 --> 02:07:46.000]  Главное, вы помните, что у вас есть пустая куча.
[02:07:46.000 --> 02:07:48.000]  И вы умеете, соответственно...
[02:07:48.000 --> 02:07:54.000]  И вы умеете за o от единицы амортизированных добавлять туда элементы.
[02:07:54.000 --> 02:07:56.000]  В общем, самое смешное, что за...
[02:07:56.000 --> 02:07:58.000]  То есть работает это...
[02:07:58.000 --> 02:08:00.000]  Ну амортизация тут работает.
[02:08:00.000 --> 02:08:02.000]  Ну куча фибоначи с амортизацией вообще никаких проблем нет.
[02:08:02.000 --> 02:08:06.000]  Потому что от того, что вы удалили кучу, потенциал хуже не стал.
[02:08:06.000 --> 02:08:08.000]  То есть как бы потенциал...
[02:08:08.000 --> 02:08:10.000]  Ну вот o от k на самом деле...
[02:08:10.000 --> 02:08:16.000]  Ну он берется тут даже скорее за счет того, что вы делали...
[02:08:16.000 --> 02:08:18.000]  Что условно, когда вы добавили...
[02:08:18.000 --> 02:08:20.000]  Что...
[02:08:20.000 --> 02:08:22.000]  Айтон, ты крашен.
[02:08:22.000 --> 02:08:24.000]  Ну вот.
[02:08:24.000 --> 02:08:26.000]  Что с того момента, как вы в прошлый раз это делали...
[02:08:26.000 --> 02:08:30.000]  Действительно, вы добавили в эту кучу хотя бы k элементов.
[02:08:30.000 --> 02:08:34.000]  Поэтому с каждым лишним элементом вы добавляете монетку и эти монеты.
[02:08:34.000 --> 02:08:36.000]  Вы тратите на то, чтобы сделать эту перестройку.
[02:08:36.000 --> 02:08:38.000]  А на самом деле...
[02:08:38.000 --> 02:08:40.000]  А на самом деле, если вы вспомните...
[02:08:40.000 --> 02:08:42.000]  Потенциал там устроен, по-моему, как...
[02:08:42.000 --> 02:08:44.000]  Количество вершин в куче плюс 2 умножить на количество помеченных.
[02:08:44.000 --> 02:08:46.000]  На самом деле...
[02:08:46.000 --> 02:08:48.000]  Поэтому на самом деле там даже лишних монеток не надо.
[02:08:48.000 --> 02:08:50.000]  По-моему оно само.
[02:08:50.000 --> 02:08:52.000]  Вот, понимаете, да?
[02:08:52.000 --> 02:08:54.000]  Хотя...
[02:08:54.000 --> 02:08:56.000]  Лучше так не делать.
[02:08:56.000 --> 02:08:58.000]  Ладно, не важно.
[02:08:58.000 --> 02:09:00.000]  Значит, вот у нас k и все хорошо.
[02:09:00.000 --> 02:09:02.000]  Так что таким образом...
[02:09:02.000 --> 02:09:04.000]  Ну тут разные варианты были.
[02:09:04.000 --> 02:09:06.000]  То есть вот у нас с вами такой...
[02:09:06.000 --> 02:09:08.000]  В прошлом году у нас прокатывал вариант...
[02:09:08.000 --> 02:09:10.000]  Ладно, давайте не будем цепляться к вершинам.
[02:09:10.000 --> 02:09:12.000]  Будем просто говорить, что
[02:09:12.000 --> 02:09:14.000]  связанных с этой компонентой ребер
[02:09:14.000 --> 02:09:16.000]  должно быть не меньше, чем m.
[02:09:16.000 --> 02:09:18.000]  То есть не меньше, чем k.
[02:09:20.000 --> 02:09:22.000]  Ну просто если в куче оказался размер k,
[02:09:22.000 --> 02:09:24.000]  значит мы тут и останавливаемся.
[02:09:24.000 --> 02:09:26.000]  Еще вот такой вариант есть.
[02:09:26.000 --> 02:09:28.000]  Но там действительно способ есть.
[02:09:28.000 --> 02:09:30.000]  Так что, да, отдельная песня.
[02:09:30.000 --> 02:09:32.000]  Кто из них алгоритм предвануториана?
[02:09:32.000 --> 02:09:34.000]  Как это?
[02:09:34.000 --> 02:09:36.000]  Что-то из этого алгоритм предвануториана,
[02:09:36.000 --> 02:09:38.000]  а что-то я тут придумал, чтобы выкрутиться, да?
[02:09:38.000 --> 02:09:40.000]  Ну хотя все варианты подойдут.
[02:09:40.000 --> 02:09:42.000]  На самом деле, не важно.
[02:09:42.000 --> 02:09:44.000]  Итак, E плюс V log.
[02:09:44.000 --> 02:09:46.000]  За E плюс V log k
[02:09:46.000 --> 02:09:48.000]  мы с вами научились...
[02:09:48.000 --> 02:09:50.000]  Что мы с вами научились делать?
[02:09:52.000 --> 02:09:54.000]  Ну вот.
[02:09:54.000 --> 02:09:56.000]  Мы с вами, соответственно, научились
[02:09:56.000 --> 02:09:58.000]  добиваться того, чтобы у нас
[02:09:58.000 --> 02:10:00.000]  появились компоненты связанности для
[02:10:00.000 --> 02:10:02.000]  мина 100 и в каждой из них хотя бы k вершин.
[02:10:02.000 --> 02:10:04.000]  Ну вот.
[02:10:04.000 --> 02:10:06.000]  Нет, теперь идея такая.
[02:10:06.000 --> 02:10:08.000]  Нет, идея у нас будет, что эти компоненты мы сжимаем
[02:10:08.000 --> 02:10:10.000]  в метовершину.
[02:10:10.000 --> 02:10:12.000]  У нас теперь граф становится в k раз меньше.
[02:10:12.000 --> 02:10:14.000]  По вершинам, по крайней мере, ребер столько же.
[02:10:14.000 --> 02:10:16.000]  И мы повторяем
[02:10:16.000 --> 02:10:18.000]  операцию.
[02:10:18.000 --> 02:10:20.000]  И так делаем до кем-то.
[02:10:20.000 --> 02:10:22.000]  Ну вот.
[02:10:22.000 --> 02:10:24.000]  И мы повторяем операцию.
[02:10:24.000 --> 02:10:26.000]  И так делаем до тех пор пока.
[02:10:26.000 --> 02:10:28.000]  Пока.
[02:10:28.000 --> 02:10:30.000]  Да.
[02:10:30.000 --> 02:10:32.000]  Делаем именно определенно пока.
[02:10:32.000 --> 02:10:34.000]  Да.
[02:10:34.000 --> 02:10:36.000]  Ну так и говорится, да.
[02:10:36.000 --> 02:10:38.000]  Сколько у нас там времени?
[02:10:38.000 --> 02:10:40.000]  А нет, пока, пока.
[02:10:40.000 --> 02:10:42.000]  Пока еще говорить пока не надо.
[02:10:42.000 --> 02:10:44.000]  Спокойной ночи.
[02:10:44.000 --> 02:10:46.000]  Спокойной ночи, малыши.
[02:10:48.000 --> 02:10:50.000]  Значит, смотрите.
[02:10:50.000 --> 02:10:52.000]  Теперь главное у нас
[02:10:52.000 --> 02:10:54.000]  подобрать последовательность
[02:10:54.000 --> 02:10:56.000]  кашек.
[02:10:56.000 --> 02:10:58.000]  Подобрать последовательность кашек, чтобы
[02:10:58.000 --> 02:11:00.000]  было хорошо.
[02:11:02.000 --> 02:11:04.000]  А как подогнать?
[02:11:04.000 --> 02:11:06.000]  А подгонять желательно так, чтобы фаз было
[02:11:06.000 --> 02:11:08.000]  поменьше. И чтобы каждая фаза
[02:11:08.000 --> 02:11:10.000]  работала за O от E.
[02:11:10.000 --> 02:11:12.000]  Ну и тогда хочется добиться того,
[02:11:12.000 --> 02:11:14.000]  чтобы фаз было вот столько.
[02:11:14.000 --> 02:11:16.000]  Значит, первое
[02:11:16.000 --> 02:11:18.000]  k1 будет равно
[02:11:18.000 --> 02:11:20.000]  ну тут почему-то авторы советуют 2E
[02:11:20.000 --> 02:11:22.000]  поделить на V.
[02:11:22.000 --> 02:11:24.000]  Мистическое соображение.
[02:11:24.000 --> 02:11:26.000]  Ну да. А можно 2 в степени
[02:11:26.000 --> 02:11:28.000]  2E поделить на V, и в принципе
[02:11:28.000 --> 02:11:30.000]  этого хватит.
[02:11:30.000 --> 02:11:32.000]  Чтобы вот первая фаза работала за
[02:11:32.000 --> 02:11:34.000]  быстро.
[02:11:34.000 --> 02:11:36.000]  Да любой, господи.
[02:11:36.000 --> 02:11:38.000]  2E поделить на V или 2 в степени 2E поделить на V?
[02:11:38.000 --> 02:11:40.000]  Жестко.
[02:11:42.000 --> 02:11:44.000]  А по барабану знаете почему?
[02:11:44.000 --> 02:11:46.000]  Потому что каждая следующая
[02:11:46.000 --> 02:11:48.000]  это 2 в степени
[02:11:48.000 --> 02:11:50.000]  предыдущей.
[02:11:58.000 --> 02:12:00.000]  Нет, смотрите.
[02:12:00.000 --> 02:12:02.000]  Ну как бы чему равно k? Так вот, на первой фазе
[02:12:02.000 --> 02:12:04.000]  k будет равно ну например 2E поделить на V.
[02:12:04.000 --> 02:12:06.000]  Ну, например.
[02:12:06.000 --> 02:12:08.000]  А на каждой
[02:12:08.000 --> 02:12:10.000]  следующей k будет
[02:12:10.000 --> 02:12:12.000]  как предыдущая, только 2 в его степени.
[02:12:12.000 --> 02:12:14.000]  Вот такая красивая идея.
[02:12:20.000 --> 02:12:22.000]  Ну вот.
[02:12:22.000 --> 02:12:24.000]  Вот теперь возникает вопрос.
[02:12:24.000 --> 02:12:26.000]  Смотрите.
[02:12:26.000 --> 02:12:28.000]  Теперь я утверждаю, что каждая фаза теперь будет
[02:12:28.000 --> 02:12:30.000]  работать за 2E.
[02:12:32.000 --> 02:12:34.000]  Почему?
[02:12:38.000 --> 02:12:40.000]  Ну да, тут даже база
[02:12:40.000 --> 02:12:42.000]  и переход тут чуть разные.
[02:12:42.000 --> 02:12:44.000]  Ну первое очевидно почему.
[02:12:44.000 --> 02:12:46.000]  Ну потому что логарифом этой штуки
[02:12:46.000 --> 02:12:48.000]  наверное меньше, чем сама эта штука, правда?
[02:12:48.000 --> 02:12:50.000]  Ну вот.
[02:12:50.000 --> 02:12:52.000]  Вот я ей говорю.
[02:12:52.000 --> 02:12:54.000]  А тут это пугается.
[02:12:54.000 --> 02:12:56.000]  Разница какая-то есть.
[02:13:06.000 --> 02:13:08.000]  Знаете, бывают на экземпляре такие вопросы,
[02:13:08.000 --> 02:13:10.000]  что как бы с одной стороны
[02:13:10.000 --> 02:13:12.000]  если когда вы, что вы там
[02:13:12.000 --> 02:13:14.000]  задаете какие-нибудь вот такие формалистические вопросы,
[02:13:14.000 --> 02:13:16.000]  но как бы с одной стороны формально вы правы,
[02:13:16.000 --> 02:13:18.000]  но с другой стороны тогда по вам сразу видно,
[02:13:18.000 --> 02:13:20.000]  что вы не шарите. Потому что шарящие люди
[02:13:20.000 --> 02:13:22.000]  таких вопросов задавать не будут.
[02:13:22.000 --> 02:13:24.000]  Просто вот.
[02:13:24.000 --> 02:13:26.000]  Получается такая
[02:13:26.000 --> 02:13:28.000]  интересная заколыка.
[02:13:28.000 --> 02:13:30.000]  Вот. Так вот.
[02:13:30.000 --> 02:13:32.000]  Ну теперь смотрите. И так представим себе.
[02:13:32.000 --> 02:13:34.000]  Прошло и итерация.
[02:13:38.000 --> 02:13:40.000]  Значит.
[02:13:40.000 --> 02:13:42.000]  Значит. И плюс первое.
[02:13:46.000 --> 02:13:48.000]  Будет?
[02:13:48.000 --> 02:13:50.000]  Ну вот.
[02:13:50.000 --> 02:13:52.000]  Значит. ИТ у нас работал
[02:13:52.000 --> 02:13:54.000]  за E плюс
[02:13:54.000 --> 02:13:56.000]  значит
[02:13:56.000 --> 02:13:58.000]  ВИТ.
[02:13:58.000 --> 02:14:00.000]  Там лог.
[02:14:00.000 --> 02:14:02.000]  Ну лог КИТ.
[02:14:02.000 --> 02:14:04.000]  Вот. Понимаете, да?
[02:14:08.000 --> 02:14:10.000]  И допустим это не превосходило
[02:14:10.000 --> 02:14:12.000]  СЕ.
[02:14:12.000 --> 02:14:14.000]  Ну вот.
[02:14:14.000 --> 02:14:16.000]  Мы подогнали какие-то. Ну ВИТ
[02:14:16.000 --> 02:14:18.000]  и понятно, что там количество вершин-то было
[02:14:18.000 --> 02:14:20.000]  меньше, чем В. Правда?
[02:14:20.000 --> 02:14:22.000]  Разно?
[02:14:24.000 --> 02:14:26.000]  Или нет?
[02:14:28.000 --> 02:14:30.000]  Да. Ну тем более, что в каждом
[02:14:30.000 --> 02:14:32.000]  конкретном случае оно конкретно
[02:14:32.000 --> 02:14:34.000]  непонятно. Ну оно разное
[02:14:34.000 --> 02:14:36.000]  может быть. Но просто интересно
[02:14:36.000 --> 02:14:38.000]  что следующее. Что если это было от
[02:14:38.000 --> 02:14:40.000]  Е, то теперь просто добиваем
[02:14:40.000 --> 02:14:42.000]  все успехом и следующим. На И плюс первой
[02:14:42.000 --> 02:14:44.000]  итерации у нас
[02:14:44.000 --> 02:14:46.000]  ВИ плюс первое
[02:14:46.000 --> 02:14:48.000]  оно меньше либо равно, чем ВИТ
[02:14:48.000 --> 02:14:50.000]  поделить на
[02:14:50.000 --> 02:14:52.000]  соответственно КИТ.
[02:15:00.000 --> 02:15:02.000]  Что нет?
[02:15:02.000 --> 02:15:04.000]  Ну давайте вспомним еще раз.
[02:15:04.000 --> 02:15:06.000]  Мы устраиваем так, что у нас в каждой метовершине
[02:15:06.000 --> 02:15:08.000]  лежит хотя бы К вершин предыдущих.
[02:15:12.000 --> 02:15:14.000]  А стало ВИТ поделить
[02:15:14.000 --> 02:15:16.000]  на КИТ вершин.
[02:15:18.000 --> 02:15:20.000]  Да. И тогда у нас
[02:15:20.000 --> 02:15:22.000]  получается, что это
[02:15:22.000 --> 02:15:24.000]  Е плюс ВИ плюс
[02:15:24.000 --> 02:15:26.000]  первое лог К
[02:15:26.000 --> 02:15:28.000]  и плюс первое. Это че такое?
[02:15:28.000 --> 02:15:30.000]  Это меньше либо равно, чем
[02:15:30.000 --> 02:15:32.000]  Е плюс ВИТ поделить
[02:15:32.000 --> 02:15:34.000]  на КИТ
[02:15:34.000 --> 02:15:36.000]  умножить на логарифом
[02:15:36.000 --> 02:15:38.000]  такой замечательной величины, как 2
[02:15:38.000 --> 02:15:40.000]  в степени КИТ.
[02:15:40.000 --> 02:15:42.000]  Ну и дальше выносится.
[02:15:42.000 --> 02:15:44.000]  Ну вот шлеп-шлеп
[02:15:44.000 --> 02:15:46.000]  шлеп-шлеп
[02:15:48.000 --> 02:15:50.000]  ну и короче Е плюс
[02:15:50.000 --> 02:15:52.000]  ВИТ.
[02:15:52.000 --> 02:15:54.000]  Все. Вот Е.
[02:15:56.000 --> 02:15:58.000]  Вот.
[02:15:58.000 --> 02:16:00.000]  То есть поэтому тут даже плевать, что тут какая
[02:16:00.000 --> 02:16:02.000]  санта Ц, тут просто Е плюсы
[02:16:02.000 --> 02:16:04.000]  это меньше либо равно, там условно
[02:16:04.000 --> 02:16:06.000]  там чему-то там 2Е.
[02:16:10.000 --> 02:16:12.000]  Ну ладно.
[02:16:12.000 --> 02:16:14.000]  2Е плюс
[02:16:14.000 --> 02:16:16.000]  1 хорошо.
[02:16:18.000 --> 02:16:20.000]  Нет, ну
[02:16:20.000 --> 02:16:22.000]  мы живем в предположении, что град связан.
[02:16:22.000 --> 02:16:24.000]  Поэтому гарантировать
[02:16:24.000 --> 02:16:26.000]  можно только, что Е
[02:16:26.000 --> 02:16:28.000]  как минимум В
[02:16:28.000 --> 02:16:30.000]  ну то есть что Е это как минимум В
[02:16:30.000 --> 02:16:32.000]  В минус 1.
[02:16:38.000 --> 02:16:40.000]  Нет, почему? Если он чего?
[02:16:42.000 --> 02:16:44.000]  Может, ну просто гарантируйте, что количество вершин
[02:16:44.000 --> 02:16:46.000]  это не более, чем количество ребер плюс 1.
[02:16:46.000 --> 02:16:48.000]  Ну просто смотрите, если
[02:16:48.000 --> 02:16:50.000]  Е больше либо равно, чем В
[02:16:50.000 --> 02:16:52.000]  минус 1, то это эквивалент
[02:16:52.000 --> 02:16:54.000]  потому, что В меньше либо равно, чем
[02:16:54.000 --> 02:16:56.000]  Е плюс 1.
[02:16:56.000 --> 02:16:58.000]  Так что здесь можно так написать.
[02:17:00.000 --> 02:17:02.000]  А можно даже еще вот эту единицу докрутить?
[02:17:02.000 --> 02:17:04.000]  Ну потому, что во-первых
[02:17:04.000 --> 02:17:06.000]  ну просто есть такое
[02:17:06.000 --> 02:17:08.000]  подозрение, что если у вас в какой-то момент
[02:17:08.000 --> 02:17:10.000]  оказалось, что В
[02:17:10.000 --> 02:17:12.000]  что Е реально меньше, чем В, то это означает
[02:17:12.000 --> 02:17:14.000]  что у вас в раффе в принципе остался
[02:17:14.000 --> 02:17:16.000]  100. Понимаете, да?
[02:17:16.000 --> 02:17:18.000]  И тогда уже никакого
[02:17:18.000 --> 02:17:20.000]  и тогда то, что у вас осталось
[02:17:20.000 --> 02:17:22.000]  минус 100 в общем-то можно тут
[02:17:22.000 --> 02:17:24.000]  добавить, а можно не добавлять.
[02:17:24.000 --> 02:17:26.000]  То есть таким образом
[02:17:26.000 --> 02:17:28.000]  мы работаем за
[02:17:28.000 --> 02:17:30.000]  то есть каждая фаза теперь кроме первой
[02:17:30.000 --> 02:17:32.000]  работает за от Е, обратите внимание.
[02:17:32.000 --> 02:17:34.000]  Понимаете, да?
[02:17:34.000 --> 02:17:36.000]  А сколько этих фаз?
[02:17:40.000 --> 02:17:42.000]  Ну да.
[02:17:42.000 --> 02:17:44.000]  То есть тогда получается, что
[02:17:44.000 --> 02:17:46.000]  То есть это получается, да.
[02:17:46.000 --> 02:17:48.000]  То есть получается это количество фаз
[02:17:48.000 --> 02:17:50.000]  не превосходит минимально вот такого
[02:17:50.000 --> 02:17:52.000]  И, что два в степени, два в степени, два в степени
[02:17:52.000 --> 02:17:54.000]  вот эта вот штука
[02:17:54.000 --> 02:17:56.000]  она оказалась более
[02:17:56.000 --> 02:17:58.000]  там больше либо равна
[02:17:58.000 --> 02:18:00.000]  соответственно В.
[02:18:00.000 --> 02:18:02.000]  А это вот
[02:18:02.000 --> 02:18:04.000]  эквивалент на вот этом.
[02:18:04.000 --> 02:18:06.000]  Да, то есть совсем идеально
[02:18:06.000 --> 02:18:08.000]  наверное вот можно двойку нарисовать, но это
[02:18:08.000 --> 02:18:10.000]  как-то неинтересно.
[02:18:10.000 --> 02:18:12.000]  Что-то такое.
[02:18:12.000 --> 02:18:14.000]  Что-то такое, да.
[02:18:14.000 --> 02:18:16.000]  Это
[02:18:16.000 --> 02:18:18.000]  это не очень интересный
[02:18:18.000 --> 02:18:20.000]  констант, да.
[02:18:20.000 --> 02:18:22.000]  Вот, так что получилась
[02:18:22.000 --> 02:18:24.000]  так что получилась вот такая красота.
[02:18:24.000 --> 02:18:26.000]  Не самый сложный алгоритм,
[02:18:26.000 --> 02:18:28.000]  но эффективный
[02:18:28.000 --> 02:18:30.000]  загадок.
