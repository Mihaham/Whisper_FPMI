[00:00.000 --> 00:13.080]  Всем добрый день еще раз. Сегодня мы все-таки попробуем завершить то, что начали в прошлый раз.
[00:13.080 --> 00:18.960]  Ну вот, а что мы начали в прошлый раз? В прошлый раз мы начали, ну в принципе так и серьезно
[00:18.960 --> 00:23.840]  продвинулись в изучении алгоритма Галилла Сейферса, который занимался тем, что пытался
[00:23.840 --> 00:32.720]  найти под строку в строке, а точнее все вхождения под строки в строку, и при этом использовать
[00:32.720 --> 00:41.080]  единицы дополнительной памяти. Но если быть точнее, мы остановились на том, что мы научились
[00:41.080 --> 00:51.400]  на самом деле даже это делать, но в предположении, что мы там верим в кое-что. Нам требуется взять
[00:51.400 --> 00:56.720]  какую-то строку и как-то ее разбить на какие-то две очень хорошие строки, и там в одной из этих двух
[00:56.720 --> 01:01.640]  строк еще что-то найти. Если мы поверили, что мы это каким-то образом за линию от нее умеем делать,
[01:01.640 --> 01:10.080]  то искать под строки в строке мы тоже научились. Ну а теперь давайте попробуем вспомнить,
[01:10.080 --> 01:15.640]  что у нас было. Я сейчас не буду повторять прям весь алгоритм, но давайте попробуем
[01:15.640 --> 01:20.720]  воспомнить вообще основные определения леммы, которые у нас были, потому что в терминологии
[01:20.720 --> 01:28.200]  нам все равно придется думать. Итак, у нас обязательно было понятие рича, ну и здесь,
[01:28.200 --> 01:37.200]  по сути, можно легко это определить через Z-функцию. То есть рича от P это P плюс Z от P, согласны?
[01:37.200 --> 01:48.880]  А если по, да, плюс один, да, не путайте, у нас один индекс, будьте внимательны,
[01:48.880 --> 01:55.600]  просыпайтесь, просыпайтесь. Очень хочется так думать. Так, ну вот, еще у нас есть определение,
[01:55.600 --> 02:00.280]  действительно, что у нас есть базовая строка, давайте в прошлый раз вот так вот писали,
[02:00.280 --> 02:10.800]  так давайте вот так тоже. Так, что у нас еще есть? Ну вот, ну, просто краеугольным
[02:10.800 --> 02:20.200]  камнем для нас является определение такое, что, допустим, T, рефиксный период, да,
[02:20.200 --> 02:25.160]  это прямо для нас прям супер супер ключевое вообще определение, просто ключевое понятие,
[02:25.160 --> 02:34.400]  период S, хотя определение очень, ну, казалось бы простое, да, то есть что там написано,
[02:34.400 --> 02:44.840]  если у нас должно быть T базовая, как вы помните, и T в степени K, рефикс S.
[02:44.840 --> 03:01.920]  Давайте эту буфу K еще выделять. Ну, напомню, что K это такая введенная зафиксированная константа,
[03:01.920 --> 03:07.440]  то есть мы ее отдельно лучше выносим, хотя вот, то есть обычно авторы все время подчеркивают,
[03:07.440 --> 03:11.600]  что да, мы пишем для удобства K равно 4, но в принципе, если вы возьмете там K равно 5, 6,
[03:11.600 --> 03:16.880]  10, 12, в общем-то тоже работает где-то. Ну вот, ну, как получается. Ну, понятно,
[03:16.880 --> 03:24.400]  что тем меньше K возьмете, тем меньше конкретных предъявлений действий будет где-то. Вот. А что
[03:24.400 --> 03:29.520]  будет называть K равно 3 и почему не будет половаться? Ну, скорее всего, видимо, просто некоторые
[03:29.520 --> 03:34.240]  доказательства могут половаться. Вот, например, сегодня у нас в одной из клеев, которую мы будем
[03:34.240 --> 03:39.640]  доказывать, будет фигурировать степень K минус 2, и там нам, по-видимому, придется пользоваться тем,
[03:39.640 --> 03:46.960]  что K минус 2 больше либо равно 2. Вот. Значит, давайте, но для этого давайте внимательно смотреть,
[03:46.960 --> 03:57.240]  что у нас еще есть. Так, ну, ключевое, у нас, конечно, была лемма периодически. Так, вот давайте
[03:57.240 --> 04:04.640]  что-нибудь красивое, давайте что-нибудь каким-нибудь красивым цветом рисуем. Вот, давайте. Будет у нас такая
[04:04.640 --> 04:13.720]  малиновая лемма. Ее, конечно, можно хоть переломутривой делать. Так, малиновая лемма.
[04:13.720 --> 04:25.920]  Итак, вспомним, лемма о периодичности. Вот, да, здесь я, конечно, может... Да, она не имеет отношения к
[04:25.920 --> 04:49.160]  префиксным периодам, но она говорит, если строка S, P1 периодично и P2 периодично. А длина этой
[04:49.160 --> 05:04.280]  строки больше либо равна, чем P1 плюс P2, напишу так в скобочках, минус нод от P1, P2. То, то что? То что
[05:04.280 --> 05:17.800]  про, можно сказать, при строку S? Да, совершенно верно, то S нод P1, P2 периодично. Так. Ну, это должно
[05:17.800 --> 05:22.320]  быть интуитивно понятно, но я на всякий случай напомню, что строка является там P периодично,
[05:22.320 --> 05:29.680]  если любые два символа в этой строке на расстоянии A и P между собой совпадают. Да, это будет понятно. Вот.
[05:29.680 --> 05:38.600]  Да, просто была такая лемма. То есть, в принципе, на самом деле, она очень просто доказывается для
[05:38.600 --> 05:43.400]  P1 плюс D2, но вот если мы хотим минус нод, то тоже доказывается, но для этого уже придется чуть-чуть
[05:43.400 --> 05:50.800]  пострадать. Вот. Но мы вроде в прошлый раз справились, не будем к этому возвращаться. Но важно нам
[05:50.800 --> 05:56.000]  для нас даже не великая лемма периодичности, которая вот где-то в другом месте обитает,
[05:56.000 --> 06:09.480]  а для нас будет важно следствие. Следствие будет говорить следующее. Следствие, которое вот там
[06:09.480 --> 06:19.000]  пригодится конкретно в нашем алгоритме, оно нам будет говорить. То есть, оно формулируется так.
[06:19.000 --> 06:34.080]  Значит так. То есть, оно нам будет говорить. Пусть у нас ОС есть. Значит, у строки С есть префиксный
[06:34.080 --> 06:54.280]  период. Период. Какой? P1. Вот пусть у нас есть префиксный период P1. И, внимание,
[06:54.280 --> 07:11.800]  базовый префикс даже, обратите внимание, даже базовый префикс P2 больше P1. Причем, ну, базовый
[07:11.800 --> 07:18.280]  префикс, понятно, на этот раз все честно. То есть, префикс, который является базовой строкой. Вот.
[07:18.280 --> 07:23.120]  Ну, надеюсь, никого здесь сейчас исключает. На всякий случай скажу, что мы тут объявили, что префикс,
[07:23.360 --> 07:28.160]  префиксный период или там базовый префикс, там префикс это строка, а мы тут используем чиселки.
[07:28.160 --> 07:38.800]  Понятно. То есть, формально тут надо, давайте, ставить слово длинный. А ну, в прошлый раз даже и делали,
[07:38.800 --> 07:50.720]  но и сейчас. Вот так. Да, причем, что для нас самое важное, reach с индексом С от P2 больше
[07:50.720 --> 07:58.480]  либо равно 2. То есть, здесь даже тогда, как мы уситрились доказать, что мы уситрились доказать,
[07:58.480 --> 08:21.720]  оказалось, что P2 строго больше, чем k-1 на P1. Что ж там? Что 2P2? А, да. Ну, вот была, ну,
[08:21.720 --> 08:26.200]  вот, действительно, была у нас и такая веселая клеммочка. Вот, собственно, в основном и ей. То есть,
[08:26.200 --> 08:33.520]  в принципе, можно, то есть, исходная формулёка могла быть на тему того, что, действительно, если у строки
[08:33.520 --> 08:40.720]  S есть два разных префиксных периода, то они отличаются друг от друга как минимум в k-1 раз. Да,
[08:40.720 --> 08:47.000]  то есть, чтобы это было интересно, желательно, чтобы k было уже как минимум и 3. Да, была у нас,
[08:47.000 --> 08:56.960]  было у нас и такое утверждение. Что у нас ещё было? Что у нас ещё было? Вот, ну, на самом деле,
[08:56.960 --> 09:03.840]  теперь нам, то есть, были ещё у нас пару утверждений. А, ну, конечно же, нет, мы ввели такое красивое
[09:03.840 --> 09:16.360]  понятие, мы просто берём снова чёрную марку, мы ещё вводили понятие shift. Так, что такое shift?
[09:16.360 --> 09:32.200]  То есть, действительно, мы ещё ввели понятие shift с индексом S. Что такое? То есть, это такое
[09:32.200 --> 09:50.120]  минимальное такое, допустим, L больше нуля, такое, что S от L плюс 1 до q равно S от 1 у ку ку минус.
[09:50.120 --> 10:02.920]  То есть, видите, помните такую красивую префикс-функцию наоборот, можно сказать. То есть,
[10:02.920 --> 10:11.480]  по большому счёту, префикс-функция, префикс-функция, то есть, вот это вот, на самом деле,
[10:11.480 --> 10:28.080]  равно с индексом S. Ну, очень удобно мыслить именно в терминус shift. Вот. И у нас есть,
[10:28.080 --> 10:37.800]  и у нас была пара очень красивых лемма, которые нам нужны. Лемма 1 заключалась в том, чтобы, давайте,
[10:37.800 --> 10:46.040]  лемма 1. В чём она заключалась? Она у нас заключалась в том, что shift с индексом S у нас,
[10:46.040 --> 10:57.040]  что, ну ладно, она начиналась со слова если. Значит, если оказывалось, что для некого q, вот
[10:57.040 --> 11:09.240]  это вот, оказывается, что сдвиг q поделить на k, то что будет дальше? Давайте, воспомним. Что?
[11:09.240 --> 11:18.440]  То это префиксный период? Да. То действительно q, так сказать, ну даже не q, а скорее этот префикс
[11:18.440 --> 11:40.360]  именно q, я садил q. А, шрифт. Именно шрифт. Да, это префиксный период строки S. Да, совершенно.
[11:40.360 --> 11:59.440]  Да, очень, да, очень такое интересное, достаточное условие. Ну, была и вторая лемма,
[11:59.440 --> 12:06.600]  даже такая более сложная, более критичная для нас, которая являлась там просто, ну вот. Ну,
[12:06.840 --> 12:16.520]  обе эти леммы были зашиты в алгоритме. Нам говорят так. Пусть у нас есть префиксный период,
[12:16.520 --> 12:34.920]  префиксный период S. Вот. Тогда, оказывалось, верны следующие эквивалентности. То есть,
[12:34.920 --> 12:44.640]  тогда вот, то есть, для любого q от одного до модули S, верно следующее, что оказывается два
[12:44.640 --> 12:54.280]  утверждения, что L равно shift от q, SyntaxMS, конечно, и этот shift еще и при этом меньше
[12:54.280 --> 13:05.040]  либо равен q делить на k. Верен тогда и только тогда, когда k умножить на это вот L, соответственно,
[13:05.040 --> 13:20.120]  у нас меньше либо равно q, меньше либо равно 3q. Вот. Было такое. Вот. Да, в идеале, конечно,
[13:20.120 --> 13:29.680]  бы еще вспомнить, как это доказывать. Возможно, возможно даже вспомнить. Вот. Ну, вот. Ну,
[13:29.680 --> 13:33.560]  собственно говоря, да. То есть, это у нас такая основная техника, действительно, которую мы
[13:33.560 --> 13:39.200]  доказали и с помощью которого действительно активно каким-то образом работали. Но, собственно,
[13:39.200 --> 13:44.360]  самое интересное для нас было... Значит, что для нас самое интересное? Ну, во-первых, для нас самое
[13:44.360 --> 13:50.440]  интересное, это, конечно, теорема о декомпозиции. Это, конечно, самое главное. Каким самым главным
[13:50.440 --> 13:58.400]  артером мы будем писать? Ну, конечно, режим. Мы же любим режимарки, правда? То есть, самое
[13:58.400 --> 14:19.960]  ключевое для нас это теорема о декомпозиции. Что она нам говорит? Она нам говорит, что любую строку S
[14:19.960 --> 14:40.920]  можно разбить. Можно разбить. Значит, в конкатинацию S равно УВ, где, с одной стороны, значит, во-первых,
[14:40.920 --> 14:52.920]  тут я даже отдельно буду писать. УВ не более одного префиксного периода. Не более одного префиксного периода.
[14:52.920 --> 15:13.920]  И длина У абсолютно произвольная, но длина У это О от чего? Очень легко перепутать,
[15:13.920 --> 15:33.680]  но тут именно шеста. То есть, фактически, вот оказывается. Вот. Мы с вами, собственно, в прошлый раз
[15:33.680 --> 15:39.120]  остановились на чем? Мы, конечно, если мы поверили, что в эту теорему, причем в широком смысле поверили,
[15:39.120 --> 15:46.120]  поверили не только в то, что она верна, но и в то, что мы за линейное время для любой строки С эти УВ еще и найдем.
[15:46.120 --> 15:55.120]  И не просто найдем, а у этой В еще и выковырием, что это за префиксный период, если он вообще есть. Если мы в это поверим,
[15:55.120 --> 16:02.120]  то, собственно, после этого по строку в строке мы без труда найдем, помните, да? Вот. Ну и последнее, ну вот.
[16:02.120 --> 16:12.120]  Последнее, что нам осталось только вспомнить, это нашу основную схему. Вот последнее. Вот давайте тоже я такую вот.
[16:12.120 --> 16:20.120]  Вот это вот наша рабочая христианская схема эту нарисую. Ну, фактически, мы будем называть ее, может быть, схемой, но там и соправка.
[16:20.120 --> 16:25.120]  Да? Давайте вот так. Я ее в кавычках назвал схемой КМП.
[16:28.120 --> 16:36.120]  Да. Ну, в этом месте авторы тоже в случае, там отчасти, там, может быть, соправка ссылается, хотя я не знаю, как они эту схему придумали,
[16:36.120 --> 16:43.120]  или там первые применили. Ну, тут, как здесь вопрос, да, со стипа концепция блокирующих потоков точно.
[16:43.120 --> 17:02.120]  Вот. Итак, если мы ищем, соответственно, ну, то есть если мы ищем, допустим, там S, там под строку S в тексте T, то искать мы ее будем так.
[17:02.120 --> 17:23.120]  Вот. Сначала у нас PQ будет равно, допустим, 0,0, а дальше мы скажем, что допустим, ну, вот, скажем там, то есть while там, ну, я не знаю, P меньше либо равно,
[17:23.120 --> 17:43.120]  модуль T. Что мы делаем? Ну, и говорим, соответственно. Ну, то есть суть следующая. То есть PQ мы пытаемся поддерживать таким образом, чтобы под строка от P не включительно до PQ включительно у строки T была равна, соответственно, префиксу 1.
[17:43.120 --> 17:48.120]  Это вот у нас такой инвариант, который мы пытаемся поддерживать.
[17:48.120 --> 18:05.120]  Пока у нас это выполняется, то есть мы говорим, пока, значит, PQQ1 меньше либо равно модуль T и, соответственно, еще и там продлить хорошо.
[18:05.120 --> 18:26.120]  Вот. А также, значит, S от, соответственно, QQ1 равно T, PQQ1, плюс, плюс. Вот. Ну, тут могут быть какие-то комментарии, если там, если Q равно S, то там, бла-бла-бла, какое-нибудь.
[18:26.120 --> 18:38.120]  И ключевая мистическая строка PQ должна быть присвоена теперь P'Q'. Все. Вроде ничего не забыл.
[18:38.120 --> 18:53.120]  Ключевое в этой схеме было, то есть мы хотим... Смотрите, у нас 1 индексация всех строк, но обратите внимание, под строка T, видите, она не включит.
[18:53.120 --> 19:09.120]  Да, я немножко спонтанно ввел такую штуку, но, мне кажется, это удобно. Вот. Да, ну, да, возможно, да. А, мы с вами, видимо, в прошлый раз немножко по-другому, да?
[19:09.120 --> 19:19.120]  Ну, да, мы там, да. Мы такого не привыкли. Но, с другой стороны, вот, мне кажется, тут это будет максимально удобно.
[19:19.120 --> 19:31.120]  То есть, иногда, вот, действительно, тут совпрямилось с классицией, иногда очень удобно мыслить, что, то есть, в качестве там первого индекса задавать позицию, сразу после которого строка начинается.
[19:31.120 --> 19:41.120]  Но, основной местицизм у нас где-то будет заключаться в том, как по P'Q выбрать следующие P'Q'.
[19:41.120 --> 20:01.120]  Ну, так, основные идеи были в том, что в большинстве случаев оказывается, что по P' вместо P'Q' можно дальше писать какой-то P', там какой-то следует, но даже не какой-то P', а P' оказывается там что-то типа P'Q' поделить на K, просто в половине случаев, а Q' равно 0.
[20:01.120 --> 20:07.120]  Так, ну и всё. Воспомнили немножко, что было?
[20:07.120 --> 20:17.120]  Хорошо? Вот, ну да, по вашему скучающему виду действительно так вытекает ощущение, что вы прям это всё хорошо помните и понимаете.
[20:17.120 --> 20:25.120]  Ну, не знаю, я просто, просто я не могу, знаете, похвастаться, если честно, поэтому лучше давайте перепродоговорим.
[20:25.120 --> 20:35.120]  Ну, как вы видите, ладно, ослушайте лекции, там потом при подготовке к экзамену обрадуются, что там первые 15 минут можно перемотать.
[20:35.120 --> 20:49.120]  Вот, значит, соответственно, что же мы теперь хотим? Итак, ну, наша сегодняшняя цель, по большому счёту, решить серию модекомпозиции, то есть фактически вот выполнить вот эту штуку.
[20:49.120 --> 20:59.120]  Значит, ну я здесь уже выяснил, действительно, что нам вообще надо, но для этого, значит, ну давайте вот теперь приступим к делу.
[20:59.120 --> 21:09.120]  В этот момент мы, собственно, пытаемся начать. Значит, смотрите, для этого нам потребуется глемма 3.
[21:09.120 --> 21:21.120]  Вот, смотрите, вот, кстати, возможно, сейчас вот начнётся, мы начнём поднимать, ой, боже мой, ладно, потом сейчас я как-то поменяю на красненький, почему-то кому это надо.
[21:21.120 --> 21:33.120]  Итак, первое, с чего мы начнём доказать свои теоремы, это лемма 3. Внимание, вот, лему 1, лему 2 мы доказали в прошлый раз, теперь начинаем лему 3.
[21:33.120 --> 21:49.120]  Говорится следующее, любую строку S, допустим, можно разбить, значит, S равно S1, S2.
[21:49.120 --> 22:17.120]  Такую что, а вот тут сейчас будет экзотическое условие. Смотрите, внимание, для любой строки S, значит, тут вот так интересно сформулировано, S2, S1 в степени k-1, S', –1, –1.
[22:17.120 --> 22:34.120]  Имеет не более чем одного, а вообще не имеет, ещё получаю, не имеет префиксного периода.
[22:34.120 --> 22:53.120]  Периода меньшего модулизма.
[22:53.120 --> 23:21.120]  Вот такой вот красота.
[23:21.120 --> 23:31.120]  Пока вы пытаетесь понять действительно, о чём лемма. Ну тут действительно, пока на самом деле, пока мы не увидим алгоритм, может сложно понять, зачем эта лемма нужна, но поверьте, надо потрепиться.
[23:31.120 --> 23:39.120]  Давайте попробуем хотя бы в качестве упражнения её подоказать.
[23:39.120 --> 23:49.120]  Вот теперь, как нам сейчас поможет то, что k – это 4, а не, например, 2?
[23:49.120 --> 24:01.120]  А, никак. Ещё очень важно, что строка басовая.
[24:01.120 --> 24:12.120]  Давайте обратим на это внимание. Она басовая.
[24:12.120 --> 24:26.120]  Значит, почему это так важно? Потому что можно заметить, ну начнём с того, что любая такая строка имеет, ну, так, во-первых, начнём с, видимо, очевидного авторутверждения.
[24:26.120 --> 24:39.120]  Заметим, что если строка базовая, то и любой эсаклический сдвиг базовый, согласны? Логично, да? Вот, логично.
[24:39.120 --> 24:56.120]  Вот, а это означает, что любая такая строка, какой бы это шрифт ни приписывали, а у этой строки по-любому есть базовый префикс длины модуль w, правда?
[24:56.120 --> 25:00.120]  Модуль w.
[25:00.120 --> 25:03.120]  Значит, да.
[25:03.120 --> 25:11.120]  То есть, давайте, давайте, вот, можно даже это так и писать.
[25:11.120 --> 25:32.120]  Значит, пункт первый. Для любого s-штрих, вот эта вот мистическая строка, t-1s-штрих, имеет базовый префикс
[25:32.120 --> 25:54.120]  s2s1 длины, длины модуль s, причём, обратите внимание, rich, это из строки, это весёлые строки от модуль s.
[25:54.120 --> 26:08.120]  Что по нему можно сказать?
[26:08.120 --> 26:35.120]  Ну что, как вы думаете? Вот давайте внимательно посмотрите на определение и скажите, чему равен, что можно сказать уже вот из определения строки про rich от модуль s?
[26:35.120 --> 26:39.120]  Сначала бы сказать, что он маленький.
[26:39.120 --> 26:43.120]  Маленький?
[26:43.120 --> 27:03.120]  Мы его не породить, да?
[27:03.120 --> 27:07.120]  Так, нет, ничего умного я не предлагаю.
[27:07.120 --> 27:12.120]  Хочется тут написать пока только то, что прям вот очевидно отсюда, исследует отсюда из определения rich.
[27:12.120 --> 27:16.120]  Нет, если вы пытаетесь сейчас что-то умное вывести, это можно упросить.
[27:16.120 --> 27:20.120]  Просто вообще непонятно, что можно сказать.
[27:20.120 --> 27:24.120]  Да ладно.
[27:24.120 --> 27:28.120]  Так, ну давайте порисуем.
[27:28.120 --> 27:31.120]  Что это вообще такое?
[27:31.120 --> 27:36.120]  Как оно вот?
[27:36.120 --> 27:38.120]  Так, погодите.
[27:38.120 --> 27:43.120]  А, ничего нельзя сказать, потому что я опять запутался.
[27:43.120 --> 27:46.120]  Ой, чёх мне так блючит сегодня?
[27:46.120 --> 27:50.120]  На самом деле вот, а если вот так?
[27:50.120 --> 27:53.120]  Всё поменялось сразу, да?
[27:53.120 --> 28:02.120]  А вот если так?
[28:02.120 --> 28:09.120]  Ну хотя бы, видимо, 3s уж точно будет.
[28:09.120 --> 28:12.120]  Ну даже 3s плюс модуль s2.
[28:12.120 --> 28:19.120]  На самом деле да, на самом деле больше либо равно 3 модуль s.
[28:19.120 --> 28:23.120]  Ну можно точно сказать 3 модуль s плюс модуль s2, но это не интересно.
[28:23.120 --> 28:32.120]  Ну и даже я вот напишу, что модуль, для нас вообще-то достаточно модуль 2s.
[28:32.120 --> 28:39.120]  Ну вот, ну теперь догадываетесь, почему я хочу именно про 2 написать?
[28:39.120 --> 28:41.120]  Чтобы предыдущую лему применять.
[28:41.120 --> 28:51.120]  Ну и предыдущую лему, а следствие из леммы периодически.
[28:51.120 --> 29:09.120]  Следовательно, если есть префиксный период,
[29:09.120 --> 29:27.120]  то то, что мы можем сказать, тогда мы гарантируем, что p тогда вынужден быть меньше, чем s,
[29:27.120 --> 29:33.120]  поделить на k-1.
[29:33.120 --> 29:48.120]  Ну просто почему, по следствию из леммы периодически.
[29:48.120 --> 29:51.120]  Что это само по себе значит?
[29:51.120 --> 29:58.120]  Само по себе это значит только одно, что если у нас есть префиксный период у этой строки,
[29:58.120 --> 30:04.120]  для такого то есть шрифта, то этот префиксный период, то...
[30:04.120 --> 30:11.120]  Так.
[30:11.120 --> 30:12.120]  Вот.
[30:12.120 --> 30:17.120]  А.
[30:17.120 --> 30:21.120]  Вот.
[30:21.120 --> 30:26.120]  А теперь, ну вот, теперь на самом деле вот возникает такое.
[30:26.120 --> 30:33.120]  Ну вот, немножко такое еще интересное.
[30:33.120 --> 30:38.120]  Итак, у нас строка действительно у нас длины, допустим, не более чем.
[30:38.120 --> 30:40.120]  То есть она должна быть...
[30:40.120 --> 30:46.120]  Ну а с другой стороны, еще как бы местицизм еще заключается в том, что
[30:46.120 --> 31:04.120]  модуль s делить на k-1 меньше либо равен, чем k-1 на k модуль s.
[31:04.120 --> 31:11.120]  Интересная следствия.
[31:12.120 --> 31:16.120]  Кстати, интересно, для кара внутри оно верно вообще?
[31:16.120 --> 31:17.120]  А, верно.
[31:17.120 --> 31:18.120]  Вот.
[31:18.120 --> 31:20.120]  Пока еще не важно.
[31:20.120 --> 31:27.120]  А что это вообще значит?
[31:27.120 --> 31:28.120]  Ну вот.
[31:28.120 --> 31:36.120]  Тогда это получается означать, что kp меньше либо равно, просто...
[31:36.120 --> 31:37.120]  Ну вот.
[31:37.120 --> 31:49.120]  То есть kp должно быть меньше либо равно k-1s.
[31:49.120 --> 31:53.120]  Префиксный период.
[31:53.120 --> 31:56.120]  Префиксный период.
[31:56.120 --> 32:01.120]  Префиксный период просто строки s2 и степени k-1.
[32:06.120 --> 32:11.120]  Вот так.
[32:11.120 --> 32:31.120]  Ну, по сути, первая цель этих первых трех пунктов, говоришь такое.
[32:31.120 --> 32:34.120]  Да, мы начинаем доказательства от противника.
[32:35.120 --> 32:42.120]  И говори, пусть у нас там, допустим, этот префиксный период p, допустим, есть.
[32:42.120 --> 32:56.120]  Тогда мы замечаем, что оказывается, что его длина должна быть такой, что на самом деле от s4 ничего не зависит, потому что он со всеми своими k-1 вот этими повторами, он на самом деле сюда прекрасно укладывается.
[32:56.120 --> 32:59.120]  Вот.
[32:59.120 --> 33:03.120]  То есть вне зависимости от того, какая длина s2 и так далее.
[33:03.120 --> 33:12.120]  Поэтому, по большому счету, мы можем доказывать теорему для с любым фиксированным s-штрих.
[33:12.120 --> 33:14.120]  Вот такая идея.
[33:14.120 --> 33:15.120]  И мы это сделаем.
[33:15.120 --> 33:22.120]  Значит, смотрите.
[33:22.120 --> 33:24.120]  И зачем мы говорим так?
[33:24.120 --> 33:33.120]  Пусть s-штрих равно, ну, короче, s в бесконечности.
[33:33.120 --> 33:48.120]  Вот.
[33:48.120 --> 33:50.120]  И так.
[33:50.120 --> 33:51.120]  То есть внимание.
[33:51.120 --> 33:53.120]  То есть по большому счету произошло следующее.
[33:53.120 --> 33:58.120]  Мы зациклили строку s.
[33:58.120 --> 34:05.120]  Прямо до бесконечности зациклили.
[34:05.120 --> 34:08.120]  И будем...
[34:08.120 --> 34:09.120]  Ну вот.
[34:09.120 --> 34:15.120]  Ну и каким-то образом будем пытаться найти у нее какой-нибудь не имеющий...
[34:15.120 --> 34:21.120]  Ну, будем пытаться от нее отгрызать какие-то префиксы, префиксы, префиксы.
[34:21.120 --> 34:26.120]  Так, чтобы в какой-то момент...
[34:26.120 --> 34:34.120]  Чтобы в какой-то момент очередной бесконечный суффикс этой строки не имел префиксного периода,
[34:34.120 --> 34:38.120]  меньше, чем modulus.
[34:38.120 --> 34:41.120]  Вот. Понятно, что мы сейчас хотим сделать?
[34:41.120 --> 34:45.120]  Да нет, наверное.
[34:45.120 --> 34:47.120]  Вот.
[34:47.120 --> 34:50.120]  Чему же нас это приводит?
[34:50.120 --> 34:55.120]  Посмотрите, каким же образом мы это будем делать.
[34:55.120 --> 35:02.120]  Делать мы это будем следующим образом.
[35:02.120 --> 35:06.120]  Вот.
[35:06.120 --> 35:11.120]  Ну, я сейчас давайте приблизительно напишу.
[35:11.120 --> 35:17.120]  Значит, метод будет такой.
[35:17.120 --> 35:20.120]  Скажи так. s, inf.
[35:20.120 --> 35:22.120]  Присвоить s.
[35:22.120 --> 35:25.120]  Ну, короче, s2 и s бесконечность.
[35:25.120 --> 35:27.120]  Ну, по большому счету, вот эта строка.
[35:27.120 --> 35:29.120]  А, ладно. У нас же нет s2.
[35:29.120 --> 35:32.120]  Просто s бесконечность.
[35:32.120 --> 35:34.120]  И дальше будем говорить.
[35:34.120 --> 35:40.120]  То есть, пока каким-то вот мистическим образом мы будем узнавать,
[35:40.120 --> 35:56.120]  У, с, инфа есть даже не префиксный период, а просто префикс.
[35:56.120 --> 36:02.120]  Допустим, t, с modulus t меньше, чем...
[36:02.120 --> 36:09.120]  Ну, префикс t в степени k, с modulus t меньше, чем modulus s.
[36:09.120 --> 36:12.120]  Так, modulus t или...
[36:12.120 --> 36:15.120]  А, тут еще, да.
[36:15.120 --> 36:19.120]  То есть, пока такое изобразие есть,
[36:19.120 --> 36:21.120]  что мы делаем?
[36:21.120 --> 36:26.120]  Мы просто удаляем, ну вот, отпиливаем.
[36:30.120 --> 36:32.120]  Сначала...
[36:32.120 --> 36:34.120]  Зачем я эти слова пишу?
[36:34.120 --> 36:36.120]  Лучше бы формально написал.
[36:36.120 --> 36:42.120]  С пробел начала s2, что мы отпиливаем?
[36:44.120 --> 36:47.120]  Минимальное такое t.
[36:51.120 --> 36:59.120]  Ну, то есть, короче говоря, s, инф становится равным, допустим...
[36:59.120 --> 37:09.120]  То есть, s, инф от вот этого modulus t плюс один, плюс бесконечность.
[37:09.120 --> 37:30.120]  Вот, обратите внимание, видите, то есть, этот как бы метод, то есть, этот как бы метод, он устроен так, что, видите, мы даже не проверяем, является ли строка t базовой.
[37:30.120 --> 37:35.120]  Я вообще изначально хотел сформулировать.
[37:35.120 --> 37:44.120]  Давайте, пока у этой строки есть префиксный период длины меньше, чем modulus, то давайте-ка этот минимальный префиксный период отпиливаем.
[37:44.120 --> 37:47.120]  Вот я хотел так сказать.
[37:47.120 --> 37:51.120]  Но я сказал, почему-то не требую, чтобы это был именно префиксным периодом.
[37:51.120 --> 37:58.120]  То есть, я написал, что не требовать, чтобы это t было базовым.
[37:59.120 --> 38:02.120]  Третий маленький вопрос, а что это меняет?
[38:02.120 --> 38:06.120]  Как вы думаете, отпиливаемое t может быть базовым?
[38:10.120 --> 38:12.120]  То есть, может не быть базовым?
[38:12.120 --> 38:13.120]  Да.
[38:13.120 --> 38:15.120]  Ну, мы же взяли минимальное t.
[38:15.120 --> 38:16.120]  Да, и что?
[38:16.120 --> 38:22.120]  Ну, если оно было не базовым, то у него было бы, может было бы меньше.
[38:22.120 --> 38:33.120]  Да, мы действительно заметим, что если мы взяли t в степени k, допустим, это префикс этой вот бесконечного snfa, и t не базовая,
[38:33.120 --> 38:40.120]  то тогда можно взять его, так сказать, этот период и обнаружить, что он тоже в принципе, этот период в степени k тоже префикс.
[38:40.120 --> 38:41.120]  То есть, он не минимальный.
[38:41.120 --> 38:43.120]  Тут все просто.
[38:43.120 --> 38:47.120]  Вот таким вот методом мы это будем делать.
[38:48.120 --> 38:49.120]  Так вот.
[38:49.120 --> 38:50.120]  Так, ну ладно.
[38:50.120 --> 38:52.120]  Первые четыре пункта, наверное, можно уже убирать.
[38:52.120 --> 38:54.120]  В общем-то, они нам уже больше не нужны.
[38:54.120 --> 38:56.120]  То есть, мы и так уже начнем.
[38:57.120 --> 38:59.120]  Значит, это работаем.
[38:59.120 --> 39:01.120]  Да, мы уже знаем, что тут все.
[39:03.120 --> 39:04.120]  Так.
[39:05.120 --> 39:06.120]  Так.
[39:07.120 --> 39:08.120]  Что дальше?
[39:17.120 --> 39:18.120]  Вот.
[39:18.120 --> 39:25.120]  А вот сейчас мы будем заниматься тем, как минимум, начнем как раз доказательство того, что мы не зациклимся.
[39:28.120 --> 39:31.120]  Ну, во-первых, начнем с того, что...
[39:32.120 --> 39:33.120]  Ну, во-первых, смотрите.
[39:33.120 --> 39:39.120]  Начнем с того, что если мы зациклимся, то это означает, что строка s не базовая.
[39:48.120 --> 39:50.120]  Нет такого ощущения.
[39:59.120 --> 40:01.120]  Ну, давайте так.
[40:02.120 --> 40:03.120]  Во-первых...
[40:04.120 --> 40:07.120]  Ну, давайте я пока для разминок действительно представлю.
[40:07.120 --> 40:10.120]  Пусть мы вообще зациклились, да?
[40:10.120 --> 40:12.120]  Что значит зациклились?
[40:13.120 --> 40:14.120]  Вот.
[40:14.120 --> 40:16.120]  Ну, вот...
[40:16.120 --> 40:17.120]  Ну, во-первых...
[40:17.120 --> 40:23.120]  Ну, во-первых, начнем с того, что никогда строки длины больше, чем s, мы отпиливать не будем.
[40:23.120 --> 40:24.120]  Правда?
[40:25.120 --> 40:28.120]  А, ну, собственно, никогда не будем, потому что...
[40:29.120 --> 40:30.120]  Да.
[40:31.120 --> 40:32.120]  А теперь предположим, что...
[40:33.120 --> 40:34.120]  Значит, утверждение такое.
[40:35.120 --> 40:36.120]  Давайте так.
[40:36.120 --> 40:39.120]  Пусть мы отпиливаем.
[40:39.120 --> 40:43.120]  Ну, давайте воображать себе, что мы отпиливаем.
[40:44.120 --> 40:50.120]  Значит, последовательность t1, t2, t3, t4 и так далее.
[40:51.120 --> 40:52.120]  Пока непонятно.
[40:52.120 --> 40:56.120]  Может быть, последовательность не закончится, хотя мы попытаемся доказать, что она закончится.
[40:59.120 --> 41:00.120]  Тогда...
[41:04.120 --> 41:05.120]  утверждаю я.
[41:05.120 --> 41:14.120]  Тогда утверждаю я, что длины этих строк, которые мы отпиливаем, не уменьшают.
[41:26.120 --> 41:27.120]  Как это будет?
[41:27.120 --> 41:30.120]  Почему я это утверждаю?
[41:35.120 --> 41:36.120]  Ага.
[42:05.120 --> 42:06.120]  Давайте чуть-чуть подумаем.
[42:20.120 --> 42:21.120]  А, ну, вроде понятно.
[42:22.120 --> 42:25.120]  Ну, вот мы отрезали первое t, да?
[42:26.120 --> 42:29.120]  Тогда у нас оставшая строка начинается с t в кубе.
[42:29.120 --> 42:30.120]  Да.
[42:30.120 --> 42:31.120]  Ну, t вk-1.
[42:32.120 --> 42:33.120]  Так, ну давайте начнем.
[42:33.120 --> 42:36.120]  Вот давайте мы отрезали t и t, даже в общем случае, да?
[42:37.120 --> 42:38.120]  Мы отрезали t и t.
[42:39.120 --> 42:40.120]  Вот.
[42:40.120 --> 42:41.120]  И что это означает?
[42:41.120 --> 42:43.120]  Это означает, что у нас дальше идет вот...
[42:44.120 --> 42:48.120]  вот это вот все, t и t, t1 штучные.
[42:48.120 --> 42:49.120]  Что хотя бы t и t в квадрате.
[42:50.120 --> 42:51.120]  Ну, да.
[42:51.120 --> 42:52.120]  Ну, хотя бы два раза.
[42:52.120 --> 42:53.120]  Да.
[42:53.120 --> 42:56.120]  Ну, и дальше в последствии длины тоже самое, кажется, можно говорить.
[42:57.120 --> 42:58.120]  С t и t будет получаться.
[42:58.120 --> 42:59.120]  Что у нас?
[43:00.120 --> 43:01.120]  А, сейчас.
[43:01.120 --> 43:02.120]  Да.
[43:02.120 --> 43:03.120]  Ну, и что дальше?
[43:04.120 --> 43:06.120]  Ну, у нас в последствии длины...
[43:09.120 --> 43:12.120]  В общем, мы можем несложно аналогично получить, что
[43:12.120 --> 43:14.120]  новый привыкстный период, если меньше t и t,
[43:14.120 --> 43:16.120]  он полностью вызывает в t и t вk-1.
[43:16.120 --> 43:18.120]  А тогда он был привыкстным периодом сесть.
[43:18.120 --> 43:19.120]  Ну, до удаления t и t тоже.
[43:20.120 --> 43:21.120]  Так, и...
[43:23.120 --> 43:24.120]  Так, сейчас.
[43:24.120 --> 43:26.120]  То есть, пусть у нас есть период p...
[43:26.120 --> 43:28.120]  Ну, не знаю, там, какую-нибудь новую букву, наверное...
[43:29.120 --> 43:30.120]  А, ладно, можно и p.
[43:31.120 --> 43:32.120]  Меньше, чем t и t, да?
[43:33.120 --> 43:34.120]  Да.
[43:34.120 --> 43:38.120]  То, в последствии t и t не больше, чем k-1 и t,
[43:38.120 --> 43:40.120]  делить не больше, чем...
[43:44.120 --> 43:45.120]  Да, да, да, да.
[43:45.120 --> 43:46.120]  Да, да, да.
[43:47.120 --> 43:49.120]  Ну, давайте попробуем это четко сформулировать.
[43:49.120 --> 43:53.120]  Предположим, что у нас обнаружился какой-нибудь вот этот вот
[43:53.120 --> 43:57.120]  t и плюс первый, который оказался по длине меньше, чем t.
[44:01.120 --> 44:03.120]  Действительно, следствие нам утверждает,
[44:03.120 --> 44:05.120]  говорит так, что если у нас есть базовый префикс,
[44:05.120 --> 44:10.120]  обратите внимание, просто базовый префикс с ричем на две строки,
[44:10.120 --> 44:12.120]  а такие у нас есть, да?
[44:13.120 --> 44:16.120]  И при этом есть у нас еще какой-то даже
[44:16.120 --> 44:17.120]  базовый префикс.
[44:17.120 --> 44:22.120]  Ну, а мы легко видим, да, что у нас не просто базовый префикс,
[44:22.120 --> 44:25.120]  а самый минимальный этот t-шка – это префикс наперед.
[44:27.120 --> 44:32.120]  То тогда отсюда мы делаем вывод, что на самом деле эта строка совсем-совсем маленькая.
[44:33.120 --> 44:36.120]  То есть она должна быть прямо вот в k-1 раз меньше.
[44:36.120 --> 44:39.120]  То есть там в худшем случае все, что у нас будет – это вот там
[44:39.120 --> 44:41.120]  пум-пум-пум и еще вот...
[44:42.120 --> 44:43.120]  Вот.
[44:44.120 --> 44:45.120]  Ну, теперь заметим следующее.
[44:45.120 --> 44:47.120]  То есть получается, она влезает...
[44:47.120 --> 44:50.120]  Ну вот, в две t-ишки она вполне себе влезает, правда?
[44:51.120 --> 44:56.120]  Но тогда получается, что вот эта вот строка из этих 4 t и плюс первых,
[44:56.120 --> 44:59.120]  она и здесь вполне себе была.
[45:01.120 --> 45:05.120]  Спрашивается, а что мы тогда отпиливали t, если у нас был лучший кандидат?
[45:06.120 --> 45:10.120]  Спрашивается, а что мы тогда отпиливали t, если у нас был лучший кандидат?
[45:12.120 --> 45:13.120]  Не понятно.
[45:15.120 --> 45:16.120]  Пока что, пока что.
[45:16.120 --> 45:19.120]  Нам пыталось того, чтобы хотя бы 3 вообще доказательства.
[45:19.120 --> 45:20.120]  Да.
[45:20.120 --> 45:21.120]  Так что, наверное.
[45:21.120 --> 45:22.120]  Так что, наверное.
[45:23.120 --> 45:24.120]  Что-то так.
[45:29.120 --> 45:30.120]  Вот.
[45:30.120 --> 45:34.120]  То есть вот таким образом мы доказали, что действительно у нас имеет место,
[45:34.120 --> 45:37.120]  что они все вот увеличиваются.
[45:40.120 --> 45:42.120]  По камере не уменьшаются.
[45:45.120 --> 45:50.120]  Более того, знаете, я еще даже сюда кое-что допишу.
[45:50.120 --> 46:02.120]  Причем нас, на самом деле, для нас еще, ну вот, то есть нам еще тут может
[46:02.120 --> 46:07.120]  действительно потребоваться еще один интересный факт.
[46:14.120 --> 46:17.120]  Причем можно, можно даже так сказать.
[46:17.120 --> 46:18.120]  Причем.
[46:20.120 --> 46:21.120]  Ну вот.
[46:21.120 --> 46:22.120]  Ну вот.
[46:22.120 --> 46:26.120]  Ну причем более того, естественно, t и t это префикс.
[46:27.120 --> 46:28.120]  Ну давайте так пока напишем.
[46:28.120 --> 46:31.120]  t и плюс первого.
[46:32.120 --> 46:38.120]  А можно еще себе вообразить t и t в степени k минус первое.
[46:38.120 --> 46:39.120]  Это префикс.
[46:43.120 --> 46:44.120]  Остатка.
[46:45.120 --> 46:48.120]  Остатка еще можно написать.
[46:48.120 --> 46:50.120]  Ну еще полезно это понимать, да.
[46:50.120 --> 46:55.120]  Что когда вы отпиливаете строку, помните, то в том, что там будет дальше, то есть
[46:55.120 --> 46:59.120]  то, что будет дальше, начинается с k минус одной копии именно t.
[47:00.120 --> 47:03.120]  Кстати, автоматически отсюда следует, что будет происходить.
[47:03.120 --> 47:10.120]  То есть отсюда автоматически следует, что зациклиться этот процесс не может.
[47:10.120 --> 47:15.120]  Потому что, а предположим, что он зациклился, это означает, что мы начали отпиливать
[47:15.120 --> 47:19.120]  в какого-то момента и навсегда строку одной и той же длины, правда.
[47:21.120 --> 47:27.120]  Но если мы отпиливаем строку одной и той же длины, то тогда получается, что мы у
[47:27.120 --> 47:31.120]  этой бесконечной строки s нашли период меньшей длины.
[47:33.120 --> 47:36.120]  Отсюда автоматически следует, что строка небазовая.
[47:37.120 --> 47:38.120]  Строка s небазовая.
[47:41.120 --> 47:42.120]  Вот это понятно?
[47:43.120 --> 47:44.120]  Пока нет.
[47:44.120 --> 47:45.120]  Да, вроде.
[47:48.120 --> 47:51.120]  Ну, давайте я вот упровенную этот шестой пункт.
[47:55.120 --> 48:03.120]  Процесс, значит подчеркнем, не может зациклиться.
[48:03.120 --> 48:04.120]  Ну, поясним.
[48:04.120 --> 48:05.120]  Почему?
[48:05.120 --> 48:06.120]  Потому что...
[48:06.120 --> 48:08.120]  Ну, на самом деле, просто говорим.
[48:08.120 --> 48:12.120]  Вот я давайте на той же картинке нарисую, да, потому что я ее не стер.
[48:12.120 --> 48:16.120]  То есть, если выяснилось, что мы тут стираем, то отпиливаем одну и той же длину,
[48:16.120 --> 48:17.120]  начиная с треитова.
[48:17.120 --> 48:22.120]  Тогда заметим, что тогда следующая строка точно начинается с треитова.
[48:22.120 --> 48:27.120]  И тогда получается, что все это до бесконечности начинается с треитова, треитова, треитова.
[48:27.120 --> 48:30.120]  А на самом деле напоминают у нас строка, как акоидовая.
[48:31.120 --> 48:34.120]  А на самом деле напоминают у нас строка, как акоидовая.
[48:34.120 --> 48:36.120]  С, С, С и так далее.
[48:36.120 --> 48:38.120]  То есть, получается у нас...
[48:38.120 --> 48:40.120]  Ну, не С, а, конечно, там какой-то.
[48:40.120 --> 48:44.120]  С, там, циклический, циклический сдвинутый.
[48:46.120 --> 48:52.120]  В общем, короче говоря, тогда получается, что эта бесконечная строка с этого момента имеет период ТИТ,
[48:52.120 --> 48:54.120]  длины ТИТ и период С-циклическая.
[48:54.120 --> 48:56.120]  ТИТ, причем, меньше.
[48:56.120 --> 49:01.120]  Следовательно, эта строка имеет период их нода, и он строго меньше, чем циклического.
[49:01.120 --> 49:08.120]  Следовательно, строка С-циклический сдвинутый, С, не является базовым, как и строка С-противоречий.
[49:09.120 --> 49:11.120]  Понятно, да?
[49:13.120 --> 49:16.120]  Так, ну-ка давайте, давайте под ББМ, под ББМ.
[49:26.120 --> 49:28.120]  Эх!
[49:53.120 --> 49:54.120]  С удалось� ли в говоре?
[49:54.120 --> 49:55.120]  Ммм...
[49:55.120 --> 50:05.120]  пока еще нет, нет давайте. Вот он бы хотелось бы понимать.
[50:16.120 --> 50:22.120]  То есть важно, мы отрубаем не только одинаковую длину, но и одну и ту же строчку мы отрубаем.
[50:22.120 --> 50:28.120]  Ну просто потому что, как мы только что поняли, если мы отрубили какую-то строчку,
[50:28.120 --> 50:33.120]  значит как бы оставшаяся строчка начинается с этой же строчки, причем еще и повторена к-1 раз.
[50:33.120 --> 50:42.120]  Но если мы отрубаем одну и ту же строчку, то получается 3 это просто период этой бесконечной строки.
[50:42.120 --> 50:50.120]  То есть получается мы нашли период строго меньше, чем длина S. То есть да, для нас не секрет,
[50:50.120 --> 50:54.120]  что в этой строке есть какой-то глобальный конечный период.
[50:54.120 --> 51:00.120]  Просто обнаружилось, что он равен не длине исходной строки S, а еще чуть меньше мы еще нашли.
[51:00.120 --> 51:08.120]  Это дает, ну как бы отсюда очевидно, что раз строка бесконечная, значит ее длина больше,
[51:08.120 --> 51:12.120]  чем вот эта строка, плюс умножить на 2 даже.
[51:12.120 --> 51:16.120]  И отсюда автоматически означает, что эта строка тогда нод периодично,
[51:16.120 --> 51:20.120]  там нод от длины S и длины T1, ну и все.
[51:20.120 --> 51:39.120]  Смотри, самого начала нет, но каждый раз, когда мы отрубаем, скажем так,
[51:39.120 --> 51:43.120]  это исходная строка была S периодично, ну модуль S периодично.
[51:43.120 --> 51:48.120]  Оттого, что мы отпилим мы от нее какие-то префиксы, она модуль S периодично и быть не пристанет.
[51:48.120 --> 51:53.120]  Так вот, предположим, что начиная с какого-то момента мы начали отпиливать одну и ту же.
[51:53.120 --> 51:59.120]  Значит, с какого-то момента неожиданно выяснилось, что дальше эта строка состоит из просто
[51:59.120 --> 52:03.120]  разложенной до бесконечности копии Тритова.
[52:03.120 --> 52:09.120]  Да, самого начала может она и не была, но в итоге оказалась.
[52:09.120 --> 52:13.120]  То есть получается, мы получили строку, у которой есть 2 периода,
[52:13.120 --> 52:16.120]  с которой меньше модуль S, а другой равен модуль S.
[52:23.120 --> 52:28.120]  Ну что, понятно? Все, понятно?
[52:28.120 --> 52:33.120]  Все, можно двигаться дальше.
[52:34.120 --> 52:39.120]  Вот. Ладно, значит, смотрите.
[52:39.120 --> 52:44.120]  А, ну в общем-то...
[52:44.120 --> 52:49.120]  Ну хорошо, значит, ну вот...
[52:49.120 --> 52:54.120]  Ну, хотя, ну вот, на самом деле да, но вот...
[52:57.120 --> 53:02.120]  Нет, но в общем-то, по большому счету теперь...
[53:02.120 --> 53:06.120]  Но по большому счету, в общем-то, Сиарема на самом деле уже доказана.
[53:06.120 --> 53:10.120]  Так, для этого давайте вспомним, о чем мы вообще доказывали.
[53:10.120 --> 53:14.120]  Да, напоминаю, мы доказываем вот эту леву.
[53:14.120 --> 53:21.120]  Да, мы хотим... Да, к чему мы это все?
[53:21.120 --> 53:26.120]  Как-то любую базовую S, то есть можно разбить, мы пытаемся разбить на две строки,
[53:26.120 --> 53:30.120]  у которой сутик собладает вот таким приятным свойством.
[53:30.120 --> 53:35.120]  Если кс2 приписать там S, скажем, к-1 раз, то как бы никаких
[53:35.120 --> 53:40.120]  префиксных периодов меньшего модуля С мы не найдете.
[53:40.120 --> 53:45.120]  Ну вот. Ну при чем тут это? Так вот.
[53:45.120 --> 53:49.120]  При чем тут это, оказалось бы? А, вот при чем.
[53:49.120 --> 53:54.120]  То есть идея в том, что когда вы вот, значит, от этих вот S, S, S, S, S, S,
[53:54.120 --> 53:59.120]  что-то поотпиливаете, вот вы тут отпиливали, отпиливали, отпиливали.
[53:59.120 --> 54:02.120]  И вот процесс неожиданно закончился.
[54:02.120 --> 54:07.120]  То теперь можно заметить, что вот этот вот разрезок S2 это ровно то, что вам нужно.
[54:10.120 --> 54:14.120]  То есть, потому что оказывается, что теперь вот S2 на S это не имеет
[54:14.120 --> 54:18.120]  префиксного периода ни на меньше чем модул S, а мы, собственно, подводили к тому,
[54:18.120 --> 54:21.120]  что это ровно то, что нам надо.
[54:21.120 --> 54:25.120]  Такой вопрос. Если мы закончили сразу же, как бы, на первом шаге,
[54:25.120 --> 54:28.120]  то у нас S2 будет равно S. Это OK по условию?
[54:28.120 --> 54:30.120]  Вполне.
[54:30.120 --> 54:32.120]  Вполне.
[54:32.120 --> 54:34.120]  Вполне.
[54:38.120 --> 54:40.120]  Вот.
[54:43.120 --> 54:47.120]  Так. А теперь вот. Теперь мы введем...
[54:48.120 --> 54:54.120]  Значит, ну, на самом деле, ну, с технической точки зрения нам еще потребуется
[54:54.120 --> 54:58.120]  еще такое уточнение внутри.
[55:04.120 --> 55:06.120]  Уточнение.
[55:06.120 --> 55:23.120]  Так сказать, процесс 4 доказательств о лембе 3. Ой, начинается.
[55:23.120 --> 55:28.120]  У вас Дифориди Диез впервые ведет?
[55:28.120 --> 55:33.120]  Ну, значит, не Диез. Значит, незнакомая фамилия. Значит, не он.
[55:33.120 --> 55:35.120]  Ну, OK. Ну, не важно.
[55:35.120 --> 55:40.120]  Нет, я просто помню первую лекцию против Урам. Значит, у нас был профессор Диезперов.
[55:40.120 --> 55:45.120]  И там он просто сразу начинал это, вводить утверждение, вводить там цифры,
[55:45.120 --> 55:52.120]  там теорему формулировать что-то там. И что-то там теоремует, что задача 1.3
[55:52.120 --> 55:56.120]  это, собственно, там утверждение 1.1 при условии 1.2.
[55:56.120 --> 56:02.120]  Вот в этом вот стиле. Да, вот тут тоже немножко так звучит, конечно.
[56:02.120 --> 56:04.120]  Значит, так вот, утверждение.
[56:04.120 --> 56:08.120]  Значит, нам этот процесс будет важен. Я его, пожалуй, даже стирать, наверное, не буду.
[56:08.120 --> 56:10.120]  Или там вот сейчас перенесу куда-нибудь правее.
[56:10.120 --> 56:15.120]  Смотрите, фишка. Процесс 4 доказательства о лембе 3 отпилит.
[56:15.120 --> 56:39.120]  Сейчас тут отпилит от S бесконечности строки суммарной длины, вы не поверите, строго меньше, чем модул S.
[56:45.120 --> 56:55.120]  Вот такой вот неожиданный красота.
[56:55.120 --> 56:59.120]  Прошу меня, с чего я это сделал, да?
[56:59.120 --> 57:03.120]  Так, ну давайте, сейчас я все уберу.
[57:03.120 --> 57:08.120]  Так, что нам это надо убрать?
[57:09.120 --> 57:12.120]  Так, ну ладно, это мы поняли.
[57:12.120 --> 57:16.120]  Ладно, давайте так, картинки-то, я думаю, мы подобного рода по-любому нарисуем.
[57:16.120 --> 57:20.120]  Так, давайте это уберем.
[57:20.120 --> 57:24.120]  Вот этот вот процесс 4 пусть у нас поживет.
[57:24.120 --> 57:30.120]  Так, что у нас дальше будет?
[57:30.120 --> 57:34.120]  Ну вот, нет, вон, нет, нет.
[57:34.120 --> 57:35.120]  Вот такой процесс.
[57:35.120 --> 57:43.120]  Вот оказывается, что он, то есть на самом деле, мы тут рисовали, что он может отпилить очень много, на самом деле он там дальше S и не пойдет.
[57:43.120 --> 57:47.120]  Почему? А вот почему. Смотрите.
[57:51.120 --> 57:55.120]  Что мы хотели сказать этим номером?
[57:55.120 --> 57:59.120]  Я спрашиваю, что мы хотели сказать этим номером?
[57:59.120 --> 58:04.120]  Так, смотрите.
[58:04.120 --> 58:10.120]  Давайте себе вообразим, что мы тут пришли и этим четвертым процессом стали отпиливать.
[58:10.120 --> 58:15.120]  Так, какой-то нам контрастный цвет взять, вот, головой возьмем.
[58:15.120 --> 58:18.120]  Отпиливаем.
[58:18.120 --> 58:21.120]  Значит, смотрите, фишка такая.
[58:21.120 --> 58:26.120]  Предположим, мы тут отпиливали, отпиливали, отпиливали.
[58:26.120 --> 58:28.120]  Ну вот.
[58:28.120 --> 58:37.120]  И неожиданно отпилили в позиции вот этой вот X, допустим, больше либо равной модуле S.
[58:37.120 --> 58:45.120]  То есть вот эта вот длина, это называется вот X, и она больше либо равна модуле S. Понятно, да?
[58:45.120 --> 58:51.120]  Отпиливали, отпиливали и отпилили.
[58:51.120 --> 58:58.120]  Давайте теперь рассмотрим позицию условного.
[58:58.120 --> 59:02.120]  X минус модуле S.
[59:02.120 --> 59:06.120]  Значит, утверждение такое.
[59:06.120 --> 59:08.120]  Значит, смотрите.
[59:08.120 --> 59:17.120]  Начнем с того, что вот эта позиция вот с этими границами отпила не совпадает.
[59:17.120 --> 59:18.120]  Давайте так.
[59:18.120 --> 59:22.120]  X минус модуле S не граница отпила.
[59:30.120 --> 59:32.120]  Почему?
[59:32.120 --> 59:34.120]  Как вы думаете?
[59:37.120 --> 59:41.120]  А X это позиция именно какая? Последняя, которая отпилили?
[59:41.120 --> 59:48.120]  Нет, пусть X это первая позиция, первая граница отпила, которая больше либо равна модуле S.
[59:48.120 --> 59:54.120]  А границы мы называем индекс последний удаленный или первый неудаленный?
[59:54.120 --> 59:57.120]  Последний удаленный.
[59:57.120 --> 01:00:03.120]  Ну или что-то то же самое, длину всего отпиленного до этого.
[01:00:03.120 --> 01:00:07.120]  Итак, давайте предположим, что мы тут неожиданно допилились так, что H модуле S достиг.
[01:00:07.120 --> 01:00:12.120]  Да, мы хотим доказать, что мы строго меньше отпилили, поэтому пусть X больше либо равна S.
[01:00:12.120 --> 01:00:20.120]  Тогда пусть у нас X минус модуле S это вот просто такая вот позиция левее, которая была.
[01:00:20.120 --> 01:00:26.120]  Первое, что давайте для разминочки докажем, что это не граница отпила.
[01:00:37.120 --> 01:00:45.120]  Ну смотрите, вот мы тут отпиливали, вот T1, T2, T3 и так далее.
[01:00:45.120 --> 01:00:54.120]  То есть можно себе это вообразить, что мы вот тут отпилили, это будет первая граница, потом отпилили T2, вот вторая граница отпила и так далее.
[01:00:54.120 --> 01:01:02.120]  Так вот, я утверждаю, что X минус позиция, X минус модуле S в эти отпилы не попадает.
[01:01:03.120 --> 01:01:06.120]  Вот я спрашиваю, что.
[01:01:12.120 --> 01:01:16.120]  Даже мы отпилили X больше S.
[01:01:21.120 --> 01:01:24.120]  Чего, чего, чего, чего, чего?
[01:01:25.120 --> 01:01:27.120]  Что такое до S?
[01:01:32.120 --> 01:01:47.120]  Ну вот давайте попробуем. На самом деле факт очень простой, но поэтому хочется, чтобы вы его поняли.
[01:01:51.120 --> 01:01:56.120]  Да, давайте теперь предположим, что это была граница отпила.
[01:01:56.120 --> 01:02:01.120]  Тогда начиная с этого момента мы отпиливали, отпиливали, отпиливали и допилились вот до этой границы.
[01:02:01.120 --> 01:02:06.120]  Но заметим, что начиная с этого момента вот эта вся строка это абсолютно то же самое, что вот эта строка,
[01:02:06.120 --> 01:02:11.120]  поэтому получается, что дальше мы зациклимся, а мы только что доказали, что зациклиться мы не можем.
[01:02:13.120 --> 01:02:19.120]  Поэтому X минус модуль S это не граница отпила.
[01:02:22.120 --> 01:02:25.120]  Ну спрашивается, и что?
[01:02:26.120 --> 01:02:31.120]  Казалось бы и что?
[01:02:32.120 --> 01:02:34.120]  А вот что?
[01:02:39.120 --> 01:02:46.120]  Ну давайте вот что. Раз это так, то давайте я тут вот, ладно тут понятно, что это S, я думаю.
[01:02:46.120 --> 01:02:51.120]  Теперь давайте вот на эти вот две строки внимательно посмотрим.
[01:02:52.120 --> 01:02:58.120]  То есть ну понятно, это у нас, допустим назовем их, я не знаю, Y, Y, Z.
[01:03:04.120 --> 01:03:07.120]  Тогда получается, что мы можем сказать?
[01:03:10.120 --> 01:03:18.120]  Вот. Мы по идее можем сказать, что действительно дальше у нас вот идут, на самом деле, Y, Y, Z.
[01:03:19.120 --> 01:03:22.120]  Где-то Y, Z.
[01:03:24.120 --> 01:03:29.120]  Ну раз мы эту строку Y, Z отпиливали в какой-то момент, значит тут дальше наверное ее там хотя бы три копии идут,
[01:03:29.120 --> 01:03:32.120]  в смысле как минус одна копия.
[01:03:33.120 --> 01:03:35.120]  Понимаете, да?
[01:03:37.120 --> 01:03:39.120]  Ну вот.
[01:03:40.120 --> 01:03:42.120]  Ну вот.
[01:03:43.120 --> 01:03:51.120]  Ну теперь возникает вопрос, момент такой, что, заметим, что начиная с вот этого момента,
[01:03:52.120 --> 01:03:57.120]  заметим, у нас Z точно идет, то есть Y, Y, Z, Y, Z, может он тут поменьше, конечно,
[01:03:57.120 --> 01:03:59.120]  а вот что побольше мы не знаем.
[01:03:59.120 --> 01:04:07.120]  Но что мы точно знаем, так это то, что раз тут же у нас зацикл, значит получается вот тут Z, Y, Z, Y, Z, Y, Z уж точно.
[01:04:10.120 --> 01:04:14.120]  Спрашивается, что мы из этого выводим?
[01:04:18.120 --> 01:04:20.120]  Что мы из этого выводим?
[01:04:36.120 --> 01:04:38.120]  Неужели ничего?
[01:04:39.120 --> 01:04:41.120]  Неужели ничего?
[01:04:47.120 --> 01:04:50.120]  Мы пошли на следующем шаге отпиливать, да?
[01:04:53.120 --> 01:04:55.120]  Ну теперь что?
[01:04:57.120 --> 01:05:00.120]  А почему мы на следующем шаге отпиливаем Z?
[01:05:00.120 --> 01:05:03.120]  На этом шаге мы отпилили Y, Y, Z.
[01:05:04.120 --> 01:05:12.120]  На этом шаге мы, наверное, раз мы не зацикливаем все, то мы отпиливаем, наверное, что-то побольше.
[01:05:13.120 --> 01:05:16.120]  Смотрите, здесь дает такое подозрение.
[01:05:18.120 --> 01:05:20.120]  Ну это называется Y, Y, Z.
[01:05:22.120 --> 01:05:27.120]  Но тут, вот тут, кажется, и начинает действовать то, что K больше либо равно 4 все.
[01:05:29.120 --> 01:05:30.120]  Почему?
[01:05:30.120 --> 01:05:34.120]  Потому что мы знаем, потому что как уже легко отсюда заметь нод.
[01:05:35.120 --> 01:05:38.120]  Ну здесь уже можно действительно сказать что.
[01:05:39.120 --> 01:05:41.120]  То есть как нод?
[01:05:42.120 --> 01:05:47.120]  Ну да, насчет Z, Y, Z, может бы, конечно, и покричились.
[01:05:48.120 --> 01:05:50.120]  Нет, хотя нет, может, пока еще и нет.
[01:05:51.120 --> 01:05:53.120]  Что у нас тогда получается?
[01:05:54.120 --> 01:05:59.120]  То есть смотрите, да, то есть с одной стороны тут у нас действительно такой Z.
[01:06:01.120 --> 01:06:05.120]  Ну вот, сейчас.
[01:06:17.120 --> 01:06:19.120]  А, то есть смотрите, знаете, в чем фишка?
[01:06:20.120 --> 01:06:22.120]  Вот с одной стороны тут Z, Y, Z, Y, Z, Y, Z, да?
[01:06:23.120 --> 01:06:24.120]  Это мужик у меня, да?
[01:06:25.120 --> 01:06:26.120]  Да, после распилы.
[01:06:26.120 --> 01:06:27.120]  Да.
[01:06:28.120 --> 01:06:30.120]  Но с другой стороны, тут еще есть магия.
[01:06:31.120 --> 01:06:36.120]  С другой стороны, я утверждаю, что здесь есть как минимум Y, Z, Y, Z, Y, Z.
[01:06:44.120 --> 01:06:47.120]  Ну точнее так, как минимум Y, Z тут есть.
[01:06:51.120 --> 01:06:52.120]  Почему?
[01:06:53.120 --> 01:07:01.120]  Да просто потому что мы же с вами, помните понаблюдали, что каждая следующая, каждая предыдущая отпиливаемая строка, это префикс следующий.
[01:07:04.120 --> 01:07:05.120]  Помните, да?
[01:07:07.120 --> 01:07:08.120]  Было да.
[01:07:14.120 --> 01:07:15.120]  Сейчас.
[01:07:16.120 --> 01:07:18.120]  У нас же может быть больше, чем один отпил.
[01:07:19.120 --> 01:07:20.120]  И что?
[01:07:20.120 --> 01:07:27.120]  Ну если у тебя последователь T2 префикс T3, T3 префикс T4, T4 префикс T5, то наверно и T2 префикс T5, правильно?
[01:07:29.120 --> 01:07:31.120]  И отсюда следует мистический факт.
[01:07:32.120 --> 01:07:38.120]  Что оказывается, если эти Y, Y, Z поменять местами, то, получается, им еще и поменяется.
[01:07:39.120 --> 01:07:40.120]  А что это означает?
[01:07:44.120 --> 01:07:46.120]  Это означает маленькую приятную вещь.
[01:07:47.120 --> 01:07:56.120]  А теперь нам важно, что тут не просто Y, Y, Z, а тут еще Y, Y, Z, Y, Z.
[01:08:02.120 --> 01:08:13.120]  Означает это маленький приятный факт, что как минимум вот эта вот строка Y, Y, Z, а также Z, Y, Y, Z, эта строка имеет период меньше, чем вот это.
[01:08:14.120 --> 01:08:21.120]  То есть, смотрите, у этой строки есть период строго меньше, чем вот эта длина, правда?
[01:08:27.120 --> 01:08:29.120]  И от того, что мы можем так...
[01:08:30.120 --> 01:08:31.120]  Ну потому что, на самом деле так.
[01:08:32.120 --> 01:08:40.120]  Потому что я утверждаю, что если Y, Y, Z равно Z, Y, это означает, что Y, Y, Z, модуль Z периодично.
[01:08:43.120 --> 01:08:44.120]  Угу.
[01:08:56.120 --> 01:08:57.120]  А не модуль Y?
[01:09:00.120 --> 01:09:01.120]  Ну ладно.
[01:09:02.120 --> 01:09:03.120]  А, пожалуйста, и то, и то.
[01:09:08.120 --> 01:09:11.120]  Можно сказать модуль Y периодично, но это же уже не важно.
[01:09:11.120 --> 01:09:16.120]  Самое главное для нас следующее, что получается строка...
[01:09:17.120 --> 01:09:23.120]  То есть, когда мы тут отпиливали, у нас была... мы отпилили Y, Y, Z, но эта строка имеет меньше период.
[01:09:24.120 --> 01:09:35.120]  А это означает, что Y, Y, Z в катой степени тоже имеет меньше период, и как следствие, если взять этот меньше период, то этот меньше период в катой тоже тут был претиксом.
[01:09:37.120 --> 01:09:39.120]  Следовательно, мы четко и то отпилили.
[01:09:41.120 --> 01:09:43.120]  Как мы-то позволили то, что еще раз как-то по четыре?
[01:09:44.120 --> 01:09:45.120]  Ладно, я тебя пока отвергнусь.
[01:09:46.120 --> 01:09:47.120]  Угу.
[01:09:53.120 --> 01:09:55.120]  Я где-то снимаю что-то дальше.
[01:10:11.120 --> 01:10:12.120]  Ну да.
[01:10:12.120 --> 01:10:13.120]  Использовали мы то, да.
[01:10:13.120 --> 01:10:17.120]  Использовали пока мы только то, что Y, Y, Z как бы префикс каждого следующего.
[01:10:22.120 --> 01:10:23.120]  Да, видимо.
[01:10:28.120 --> 01:10:32.120]  Ну, по сути, да, по большому счету, да, мы здесь использовали только что промышлевый равно трех.
[01:10:32.120 --> 01:10:34.120]  Может, правда как-то внутри хватит.
[01:10:35.120 --> 01:10:37.120]  Так, ну что красота!
[01:10:41.120 --> 01:10:46.120]  Сейчас, а можно еще раз, почему у нас Y, Z, Y, Z, Y, Z тоже будет периодично с периодами?
[01:10:47.120 --> 01:10:49.120]  Смотри, мы заметим следовательно.
[01:10:49.120 --> 01:10:57.120]  Если у нас тут мы пишем Y, Z, мы знаем, что тут Y, Z, и дальше Y, Z, Y, Z, Y, Z, и дальше Y, Z, и дальше Y, Z, и дальше Y, Z, и дальше Y, Z.
[01:10:57.120 --> 01:11:02.120]  Заметим следки. Если у нас мы пишем y, y, z, мы знаем, что тут y, z, и дальше y, z, y, z, y, z.
[01:11:02.120 --> 01:11:04.120]  Да.
[01:11:04.120 --> 01:11:09.120]  Тогда мы можем заметить, что дальше у нас идёт z, y, z, y, z, y, z. Правда?
[01:11:09.120 --> 01:11:11.120]  Но мы знаем, что мы вот с этого...
[01:11:11.120 --> 01:11:22.120]  Это я понял. Почему, если мы знаем, что y, z равно z, y, то y, z в кате имеет период меньше, чем y, z?
[01:11:22.120 --> 01:11:23.120]  А почему вот это верно?
[01:11:23.120 --> 01:11:25.120]  Нет, вот это тоже понятно, почему верно.
[01:11:25.120 --> 01:11:26.120]  А что и понятно?
[01:11:26.120 --> 01:11:31.120]  А почему y, z в кате будет иметь такой же период?
[01:11:32.120 --> 01:11:37.120]  То есть это же период, который как бы не нацело делит вину строки?
[01:11:37.120 --> 01:11:39.120]  Ну, не... сейчас.
[01:11:39.120 --> 01:11:40.120]  Ну, не нацело.
[01:11:40.120 --> 01:11:43.120]  Ну, он не продлевает цитателя, если мы строку ещё раз пишем.
[01:11:46.120 --> 01:11:47.120]  Да.
[01:11:49.120 --> 01:11:53.120]  Наверное, нужно сказать, что раз она z периодично, y периодично, то она... нот z, y и z периодично.
[01:11:53.120 --> 01:11:56.120]  Вот тогда у нас получается, как бы, она не базовая.
[01:11:56.120 --> 01:11:58.120]  Ну, в принципе, да.
[01:12:01.120 --> 01:12:05.120]  Ну, как всегда, да. Видимо, мы подобные вещи просто навсегда проматываем.
[01:12:07.120 --> 01:12:13.120]  Хотя, в принципе, да, формально говоря, она сама по себе куда-нибудь проявляется, но, как всегда, z, c, d выполнить как всегда можно.
[01:12:13.120 --> 01:12:15.120]  Единственное только оговорка, знаете, какой у меня вопрос такой?
[01:12:15.120 --> 01:12:17.120]  Возник этому доказательства.
[01:12:17.120 --> 01:12:27.120]  Мы здесь воспользовались тем, что i, g, z это префикс вот этой строки, потому что мы этим говорили, что у каждой следующей строки все предыдущие префиксы, да?
[01:12:27.120 --> 01:12:34.120]  А теперь у меня этот вопрос, а если это место, это последний отпил, и мы дальше ничего не отпилили?
[01:12:34.120 --> 01:12:40.120]  А какая разница? Это же, в смысле, то, что идет после отпила, это еще одно повторение той строки, которую мы отпилили?
[01:12:40.120 --> 01:12:43.120]  Ну, вообще, да. Да, на самом деле, да.
[01:12:43.120 --> 01:12:50.120]  Такой вопрос, не будет ли проблема, что если x равен x? У нас там, видимо, y, z будет стоять только из z просто, да?
[01:12:50.120 --> 01:12:52.120]  Ну, да.
[01:12:52.120 --> 01:12:54.120]  Нет, смотри, у нас есть такой вопрос.
[01:12:54.120 --> 01:12:56.120]  У нас есть такой вопрос.
[01:12:56.120 --> 01:12:58.120]  У нас есть такой вопрос.
[01:12:58.120 --> 01:13:00.120]  У нас есть такой вопрос.
[01:13:00.120 --> 01:13:02.120]  У нас есть такой вопрос.
[01:13:02.120 --> 01:13:04.120]  У нас есть такой вопрос.
[01:13:04.120 --> 01:13:06.120]  У нас есть такой вопрос.
[01:13:06.120 --> 01:13:08.120]  У нас есть такой вопрос.
[01:13:08.120 --> 01:13:10.120]  У нас есть такой вопрос.
[01:13:10.120 --> 01:13:12.120]  У нас есть такой вопрос.
[01:13:12.120 --> 01:13:14.120]  У нас есть такой вопрос.
[01:13:14.120 --> 01:13:16.120]  У нас есть такой вопрос.
[01:13:16.120 --> 01:13:18.120]  У нас есть такой вопрос.
[01:13:18.120 --> 01:13:20.120]  У нас есть такой вопрос.
[01:13:20.120 --> 01:13:22.120]  У нас есть такой вопрос.
[01:13:22.120 --> 01:13:24.120]  У нас есть такой вопрос.
[01:13:24.120 --> 01:13:26.120]  У нас есть такой вопрос.
[01:13:26.120 --> 01:13:28.120]  Ну, приятное уточнение мы провели.
[01:13:28.120 --> 01:13:31.120]  То есть, получается, что мы действительно отпилили нод.
[01:13:31.120 --> 01:13:34.120]  Получается, отпиливать будем только из стротиез.
[01:13:34.120 --> 01:13:36.120]  И, как всегда, нод.
[01:13:36.120 --> 01:13:39.120]  Да, отпиливать будем только из стротиез.
[01:13:39.120 --> 01:13:45.120]  И, получается, что оставшийся разгрузок, собственно, это нам как раз и устроит.
[01:13:45.120 --> 01:13:47.120]  Ну, еще раз.
[01:13:47.120 --> 01:13:49.120]  В чем конечная категория?
[01:13:49.120 --> 01:13:52.120]  Ну, вот мы сказали, что не конечная.
[01:13:52.120 --> 01:13:54.120]  Нет, конечная такая.
[01:13:54.120 --> 01:13:56.120]  Что у нас обнаружилось.
[01:13:56.120 --> 01:13:58.120]  Вот мы отпилили строку игр Z.
[01:13:58.120 --> 01:14:00.120]  Вот когда-то отпилили, да?
[01:14:00.120 --> 01:14:02.120]  И оказалось, что игр Z равно Z игр.
[01:14:02.120 --> 01:14:05.120]  При этом игр PZ обе не пустые, что важно.
[01:14:05.120 --> 01:14:11.120]  Мы увидели, что от строка модуль Z периодично и модуль игр периодично.
[01:14:11.120 --> 01:14:13.120]  Почему она, например, модуль Z периодично?
[01:14:13.120 --> 01:14:16.120]  Потому что если взять все символы, кроме последних Z,
[01:14:16.120 --> 01:14:20.120]  и сдвинуть их направо на Z, то оказывается, что они совпадают.
[01:14:20.120 --> 01:14:22.120]  Ну, вот.
[01:14:22.120 --> 01:14:25.120]  А на Y периодично, потому что берем все символы, кроме последних игр,
[01:14:25.120 --> 01:14:28.120]  и сдвигаем их на Y влево, они тоже совпадают.
[01:14:28.120 --> 01:14:31.120]  То есть, ну, в принципе, дальше в дописывании звучит так.
[01:14:31.120 --> 01:14:40.120]  То есть это означает, что YZ получается нод от модуль Y, модуль Z периодично.
[01:14:43.120 --> 01:14:45.120]  На это у нас просто была...
[01:14:45.120 --> 01:14:50.120]  Вот знаете, я даже для радости, чтоб не писать по какой еме,
[01:14:50.120 --> 01:14:52.120]  я просто это нарисую правильным марком.
[01:15:00.120 --> 01:15:02.120]  Но тогда из этого следует...
[01:15:02.120 --> 01:15:04.120]  Но тогда по большому счету...
[01:15:07.120 --> 01:15:08.120]  Ну вот.
[01:15:08.120 --> 01:15:13.120]  Но тогда из этого следует, так как стандартное нас рассуждение,
[01:15:13.120 --> 01:15:16.120]  модуль игр Z делится на этот вот нод,
[01:15:16.120 --> 01:15:24.120]  модуль игр, модуль Z и, значит, модуль игр Z строго больше этого нода,
[01:15:27.120 --> 01:15:32.120]  тогда из этого следует, что игр Z не базовая.
[01:15:37.120 --> 01:15:39.120]  А вот это нам дает просто противоречие,
[01:15:39.120 --> 01:15:43.120]  потому что все строки, которые отпиливаем, делятся базовыми.
[01:15:43.120 --> 01:15:48.120]  Это наша была, как говорится, такой коллабор, базовое требование.
[01:15:52.120 --> 01:15:54.120]  Вот такая красота у нас получилась.
[01:15:56.120 --> 01:15:57.120]  Вот.
[01:15:59.120 --> 01:16:04.120]  То есть вот получился вот такой интересный процесс.
[01:16:05.120 --> 01:16:07.120]  Так, сколько там времени?
[01:16:08.120 --> 01:16:10.120]  Так, сколько там времени?
[01:16:13.120 --> 01:16:15.120]  Все? Уже?
[01:16:16.120 --> 01:16:18.120]  Ну, вот.
[01:16:18.120 --> 01:16:20.120]  Нет, ну давайте, ладно, может быть...
[01:16:20.120 --> 01:16:24.120]  Нет, ну не совсем так, потому что начали мы тоже, в общем-то, не в 35 минут, да?
[01:16:25.120 --> 01:16:27.120]  Так что давайте можем попробовать.
[01:16:28.120 --> 01:16:29.120]  Можем риск...
[01:16:29.120 --> 01:16:30.120]  Да вот.
[01:16:30.120 --> 01:16:33.120]  Можно теперь рискнуть попробовать, ну ладно, в конце концов, да.
[01:16:33.120 --> 01:16:36.120]  Ладно, у нас есть такое преимущество, что после нас сюда никто не придет.
[01:16:36.120 --> 01:16:37.120]  Так что если мы...
[01:16:37.120 --> 01:16:40.120]  Мы сейчас можем задержаться чуть подольше, а потом пойти пообедать чуть больше.
[01:16:41.120 --> 01:16:45.120]  Так что поэтому давайте попробуем, исходя из вот этих вот соображений,
[01:16:46.120 --> 01:16:48.120]  теперь довести дело до...
[01:16:48.120 --> 01:16:51.120]  То есть доказать хотя бы теорему о декомпозиции.
[01:16:56.120 --> 01:16:58.120]  Давайте мы ее сейчас красивенько докажем.
[01:16:58.120 --> 01:16:59.120]  Хорошо.
[01:17:05.120 --> 01:17:08.120]  Значит так, процесс есть, он закончился, значит мы знаем, что...
[01:17:09.120 --> 01:17:11.120]  Значит, по крайней мере, такую вот...
[01:17:12.120 --> 01:17:15.120]  Такую вот S2, действительно, найти можно.
[01:17:16.120 --> 01:17:18.120]  Значит, переходим непосредственно к доказательствам.
[01:17:24.120 --> 01:17:27.120]  Значит, дальше я напишу новый, рыжий процесс.
[01:17:28.120 --> 01:17:31.120]  Ну, давайте, я его сформулирую в таком вот виде.
[01:17:32.120 --> 01:17:34.120]  Значит, пост присвоить нулю.
[01:17:35.120 --> 01:17:39.120]  То есть опять же, у меня будет такая строка S, и я буду...
[01:17:40.120 --> 01:17:43.120]  То есть итак, мне дана вот эта вот строка S,
[01:17:44.120 --> 01:17:48.120]  и я буду сейчас от нее отпиливать всякие приффиксы.
[01:17:49.120 --> 01:17:52.120]  Ну, то есть, то, что я буду отпиливать, как я уже скажу,
[01:17:53.120 --> 01:17:55.120]  то, что я буду отпиливать, как я уже скажу,
[01:17:55.120 --> 01:17:57.120]  то, что я буду отпиливать, как я уже скажу,
[01:17:58.120 --> 01:18:01.120]  это будет строка U, а то, что останется, строка B.
[01:18:03.120 --> 01:18:04.120]  Значит, поехали.
[01:18:05.120 --> 01:18:06.120]  Как я это буду делать?
[01:18:07.120 --> 01:18:08.120]  Значит, новый процесс, смотрите.
[01:18:09.120 --> 01:18:10.120]  Дальше я напишу следующее.
[01:18:11.120 --> 01:18:12.120]  While...
[01:18:13.120 --> 01:18:15.120]  Значит, S от пост плюс первое.
[01:18:16.120 --> 01:18:18.120]  Ну, вот для удобства, удобно считать, что пост это сколько я отпилю.
[01:18:19.120 --> 01:18:20.120]  Да?
[01:18:21.120 --> 01:18:25.120]  То есть while S, пост плюс один, пум-пум, модулес.
[01:18:27.120 --> 01:18:29.120]  Значит, пока, значит, вот эта штука,
[01:18:30.120 --> 01:18:37.120]  вообще, у этой штуки есть хотя бы два...
[01:18:42.120 --> 01:18:43.120]  ...приффиксных периода.
[01:18:50.120 --> 01:18:51.120]  Пока они есть.
[01:19:02.120 --> 01:19:03.120]  Вот.
[01:19:04.120 --> 01:19:05.120]  Что мы будем делать?
[01:19:08.120 --> 01:19:10.120]  Значит, делать будем неожиданно следующую вещь.
[01:19:11.120 --> 01:19:14.120]  P2 это второй.
[01:19:15.120 --> 01:19:17.120]  Второй минимальный.
[01:19:21.120 --> 01:19:22.120]  Приффиксный период.
[01:19:23.120 --> 01:19:25.120]  Давно пора уже его ПП писать.
[01:19:32.120 --> 01:19:33.120]  И что-то еще.
[01:19:37.120 --> 01:19:38.120]  А дальше найти...
[01:19:39.120 --> 01:19:41.120]  Ну, дальше, соответственно, найти...
[01:19:46.120 --> 01:19:47.120]  Найти такое...
[01:19:48.120 --> 01:19:49.120]  ...пост-штрих.
[01:19:51.120 --> 01:19:56.120]  Значит, между постом и постом плюс P2.
[01:19:57.120 --> 01:19:58.120]  Такое, что...
[01:20:06.120 --> 01:20:10.120]  Значит, соответственно,
[01:20:11.120 --> 01:20:14.120]  значит, S от пост-штрих плюс один, пум-пум, модулес.
[01:20:14.120 --> 01:20:15.120]  Плюс один, пум-пум, модулес.
[01:20:17.120 --> 01:20:18.120]  Не имеет...
[01:20:22.120 --> 01:20:23.120]  ...приффиксного периода.
[01:20:30.120 --> 01:20:31.120]  Короче.
[01:20:34.120 --> 01:20:35.120]  P2.
[01:20:45.120 --> 01:20:52.120]  Ладно, давайте сначала закончим алгоритм, потом будем думать, почему это вообще хотя бы можно, в принципе, проделывать.
[01:20:53.120 --> 01:20:58.120]  Ну и, конечно, сказать, что пост и свой пост-штрих.
[01:21:14.120 --> 01:21:16.120]  Так, ну, во-первых, давайте...
[01:21:21.120 --> 01:21:22.120]  Во-первых, вот так.
[01:21:25.120 --> 01:21:30.120]  Ну, здесь и ладно. Утащим этот второй минимальный приффиксный период, естественно, вот в этой странице.
[01:21:33.120 --> 01:21:34.120]  Вот такой процесс приходит.
[01:21:35.120 --> 01:21:36.120]  Вот такой процесс приходит.
[01:21:38.120 --> 01:21:41.120]  Первый вопрос. Почему я этот процесс вообще могу проделывать?
[01:21:42.120 --> 01:21:48.120]  Ну, в первую очередь, почему я могу вообще вот такой пост-штрих всегда находить?
[01:22:04.120 --> 01:22:12.120]  Да, как вы догадываетесь, вся информация, так если я, как всегда, тут нигде не очень прятался, сдал стопить, но то что.
[01:22:23.120 --> 01:22:29.120]  Следствие. Какое следствие? Следствие? Во-первых, следствие или уточнение?
[01:22:29.120 --> 01:22:34.120]  Во-первых, следствие или уточнение?
[01:22:34.120 --> 01:22:40.120]  Да, у нас есть следствие, а у нас есть уточнение.
[01:22:40.120 --> 01:22:43.120]  Это вообще разные вещи.
[01:22:54.120 --> 01:22:58.120]  Следствие? И каким же образом мы будем применять это следствие?
[01:22:59.120 --> 01:23:09.120]  Такая, знаете, как всегда, я, конечно, плохо знаю какие-нибудь тренировки по ЧГК, но ощущение такое, что вот у вас возникло вот это словосочетание.
[01:23:09.120 --> 01:23:12.120]  Давайте сразу в ассоциации. Где вы слышали это словосочетание?
[01:23:12.120 --> 01:23:16.120]  Где там на этой доске вот это словосочетание, похоже на F?
[01:23:17.120 --> 01:23:18.120]  Где оно?
[01:23:18.120 --> 01:23:19.120]  О, в леометрии.
[01:23:19.120 --> 01:23:22.120]  Да, даже не в уточнении, а просто в леометрии.
[01:23:22.120 --> 01:23:28.120]  То есть у нас кто-то там не имеет префиксного периода меньше П2, а ведь действительно.
[01:23:28.120 --> 01:23:31.120]  То есть по большому счёту. Что происходит?
[01:23:31.120 --> 01:23:35.120]  В этом месте у нас есть вот этот вот азулюминиевый фрагмент.
[01:23:35.120 --> 01:23:38.120]  В этом месте у нас есть вот этот фрагмент.
[01:23:38.120 --> 01:23:45.680]  меньше f2, а ведь действительно, то есть по большому счёту, что происходит? В этом месте у нас есть вот этот вот
[01:23:45.680 --> 01:23:55.280]  огрызок, вот мы тут пост символов отпилили, да, и мы неожиданно обнаружили, что у нас тут есть, что у нас
[01:23:55.280 --> 01:24:05.600]  есть префиксный период f2, да, это не самый короткий, что приятно, тогда идея такая, оказывается мы тут,
[01:24:05.600 --> 01:24:14.400]  то есть мы можем обнаружить, что вот этот вот префиксный период мы можем распилить на две строки,
[01:24:14.400 --> 01:24:23.240]  так что, вот что нам эта Лемма говорит? Лемма говорит, что вот это вот, оставшийся огрызочек,
[01:24:23.240 --> 01:24:30.240]  плюс вот эти каменусы, один копий значит этой старой строки, плюс абсолютно любая хрень,
[01:24:30.240 --> 01:24:44.880]  имеет префикс, не имеет префиксного периода, короче, чем f2. Он добрый, приятно, очень приятно.
[01:24:44.880 --> 01:24:52.520]  Вот, ну более того, так как этот f2 здесь был не минимальным, то очевидно, что действительно,
[01:24:52.520 --> 01:24:56.600]  пост штриха, кажется, больше, чем пост, то есть теоретически Лемма допускала, что на самом деле этот
[01:24:56.760 --> 01:25:03.240]  префикс здесь и произойдет, но в данном случае это не так, потому что в этой позиции вот эта строка имеет
[01:25:03.240 --> 01:25:09.800]  префиксный период, короче, чем f2, это мы уже знаем, просто это мы знаем вот из этих фильмов, то есть помнишь,
[01:25:09.800 --> 01:25:18.840]  что у нас есть два, хотя бы два префиксных периода, и f2 второй из них. То есть таким образом мы можем
[01:25:18.840 --> 01:25:28.400]  вот эту все проделать. И более того, рано или поздно это даже закончится.
[01:25:28.400 --> 01:25:44.440]  А использовали мы это так, что, смотри, Лемма 3 подразумевала, что может быть этот отпил, он как бы не посередине
[01:25:44.440 --> 01:25:53.240]  этой строки будет, а в самом начале. А в самом начале это быть не может, поэтому получается, что пост будет
[01:25:53.240 --> 01:26:08.280]  строго увеличиваться. Вот, но заметим, что, да, что приятно. Приятность здесь заключается в том, что как бы мы,
[01:26:08.280 --> 01:26:13.200]  у нас строка будет все время, мы двигаемся вправо, но мы никогда до конца s не дойдем, правда?
[01:26:13.200 --> 01:26:22.200]  Но префиксные периоды-то рано или поздно закончатся, правда? То есть таким образом, рано или поздно мы, то есть
[01:26:22.200 --> 01:26:33.200]  действительно, значит этот пост, значит этот цикл закончится. И тогда в итоге я скажу, что у меня присвоить s от 1 к
[01:26:33.200 --> 01:26:47.200]  у пост, естественно, да, а в s от пост плюс 1 до модулес. Отлично. Отлично, как минимум, в том плане, что мы теперь, мы
[01:26:47.200 --> 01:27:01.200]  сумели разбить на строку на две так, что у суффикса не более чем один префиксный период. Да, но я сразу согласен с вашим
[01:27:01.200 --> 01:27:11.200]  исключающим видом достижения неактивных. Вот. Потому что если у нас была просто цель отпилить суффикс, у которого не более
[01:27:11.200 --> 01:27:20.200]  одного префиксного периода, мы могли просто один символ отпилить и возрадоваться. Наша цель была больше. То есть нам,
[01:27:20.200 --> 01:27:27.200]  на самом деле, нам хочется не просто отпилить суффикс, но отпилить суффикс в 100, чтобы у этого суффикса был достаточно
[01:27:27.200 --> 01:27:42.200]  большой шифт такой, что он префикс, оказывается, ок, его длины. Неплохо, да? Хотелось бы так сказать. Значит, как это связано
[01:27:42.200 --> 01:27:54.200]  вообще? Ну, во-первых, давайте внимательно посмотрим. Ну, давайте вот, смотрите, вот что сделаем. Значит, что мы сделаем,
[01:27:54.200 --> 01:28:07.200]  что мы делаем, что мы делаем. Смотрите, давайте себе вот как бы это очень красиво описать. Заметим, что мы от строки S
[01:28:07.200 --> 01:28:16.200]  отпиливали несколько раз какие-то строчки, строчки через строчки. Давайте мы предположим, что мы отпилили, во-первых, мы
[01:28:16.200 --> 01:28:29.200]  отпиливали строки U1, U2, U3. Ну, допустим, вот до сюда дошли UL, вот допустим, L раз мы отпиливали, да? И при этом, когда мы L раз
[01:28:29.200 --> 01:28:47.200]  отпиливали, у нас L раз встречались вот эти вторые префиксные периоды, да? Вот это вот P2,1, P2,2, P2,3 и так далее P2,L, да?
[01:28:47.200 --> 01:28:49.200]  Понимаете, да?
[01:28:54.200 --> 01:29:03.200]  Все мы можем сказать. А, ну это, наверное, можно вылезть, тереть, в общем. Ой, ладно, шалка, что мы этот процесс теряем, конечно.
[01:29:03.200 --> 01:29:13.200]  Там как-то на него отсылка идет, надо было его, видимо, вон туда вниз перерисовать, но ладно. Мы будем уже заморачиваться.
[01:29:14.200 --> 01:29:23.200]  Значит, смотрите, ну ладно, самое дело, его все равно вытесняется вот этим процессом. Вот. Что можно сказать?
[01:29:23.200 --> 01:29:34.200]  Во-первых, заметим, что, ну, можно заметить следующее, что, во-первых, всегда модуль Уитого, во-первых, строго меньше, чем...
[01:29:34.200 --> 01:29:47.200]  Значит, модуль Уитого строго меньше, чем P2 и T, согласны? Видно, да?
[01:29:47.200 --> 01:29:49.200]  Видно, да?
[01:29:53.200 --> 01:29:55.200]  Видно?
[01:29:55.200 --> 01:29:57.200]  Только P и 2, кажется.
[01:29:57.200 --> 01:29:58.200]  Нет.
[01:29:58.200 --> 01:29:59.200]  А, нет, подводи-ка там.
[01:29:59.200 --> 01:30:06.200]  Ну, видите, мы тут P2, поэтому, видите, я тут, поэтому, второй индекс. Ну, давайте, я могу еще запяты присылать, если хотите.
[01:30:07.200 --> 01:30:17.200]  Ой, Господи. Ой, слушайте, а у вас какой-нибудь, это теормег какой-нибудь будет?
[01:30:21.200 --> 01:30:25.200]  Или какой-нибудь там веселый курс будет названием математические методы Михаильки? Нет?
[01:30:25.200 --> 01:30:27.200]  Нет.
[01:30:27.200 --> 01:30:29.200]  Нет? Нет?
[01:30:29.200 --> 01:30:39.200]  Нет, я просто помню, там, собственно, там, не знаю, там начинается какая-то там очень веселая возня с индексами, там, красивая теория.
[01:30:39.200 --> 01:30:40.200]  Ну, ладно, не важно.
[01:30:40.200 --> 01:30:48.200]  Так вот, я, собственно, это к чему? Значит, каждая Уитая меньше, чем P2. С одной стороны, да?
[01:30:48.200 --> 01:30:50.200]  Что я еще могу сказать?
[01:30:51.200 --> 01:31:05.200]  А еще я утверждаю, что каждая P2, оно, я утверждаю, строго меньше, чем P, вот почему-то мне очень хочется утверждать, P2 плюс 1 делить на.
[01:31:08.200 --> 01:31:09.200]  Ха.
[01:31:12.200 --> 01:31:13.200]  Ну, ладно.
[01:31:20.200 --> 01:31:24.200]  Ну-ка, скажите мне, с чего я это взял?
[01:31:40.200 --> 01:31:42.200]  Ну, 100% без следствия.
[01:31:43.200 --> 01:31:46.200]  Ну, практически да, даже усиленной версии, что...
[01:31:46.200 --> 01:31:53.200]  Ну, во-первых, то есть, как бы, вообразив себе, что вот у нас есть P2, то есть вот этот вот P2.
[01:31:53.200 --> 01:31:56.200]  Сейчас это второй префиксный период, да?
[01:31:56.200 --> 01:32:05.200]  Но, как бы, но в следующий раз, на следующей итерации, уже первый префиксный период будет не менее, чем столько, правда?
[01:32:06.200 --> 01:32:17.200]  Ну, тогда получается, ну, мы помним, что второй префиксный период больше первого хотя бы в k-1 раз, даже строго больше, чем в k-1 раз, понимаете, да?
[01:32:17.200 --> 01:32:28.200]  Тогда получается, что если предыдущий второй префиксный период был меньше либо равен следующего первого, то следующий второй будет больше, больше, вон, h в k-1 раз.
[01:32:30.200 --> 01:32:32.200]  Что?
[01:32:35.200 --> 01:32:37.200]  Можно это записать или можно это не писать?
[01:32:38.200 --> 01:32:40.200]  Записывайте, записывайте.
[01:32:42.200 --> 01:32:44.200]  А, в смысле, чтобы я это записал?
[01:32:53.200 --> 01:32:55.200]  Ну, в общем, давайте я так пишу.
[01:32:55.200 --> 01:33:07.200]  Смотрите, второй префиксный период после нитого шага, он, как вы уже выяснили, меньше либо равен первого префиксного периода минимального в i-1.
[01:33:07.200 --> 01:33:16.200]  Почему мы так делаем? Потому что в этом пункте мы прям в явном виде прописали, что у нас нет префиксных периодов на следующем шаге, короче, чем вот этот второй, бывший.
[01:33:17.200 --> 01:33:21.200]  Вот. Это у нас просто.
[01:33:24.200 --> 01:33:38.200]  Но при этом вот эта штука, она строго меньше, чем P2i-1 поделить на k-1.
[01:33:41.200 --> 01:33:44.200]  Это был такой красный мастик, если не так.
[01:33:47.200 --> 01:33:49.200]  Вот красота.
[01:33:50.200 --> 01:33:54.200]  А это нам говорит, даже вот, ой, опять я.
[01:33:55.200 --> 01:33:59.200]  Да, то есть надо здесь, опа.
[01:34:09.200 --> 01:34:11.200]  Вот такое следствие у нас есть.
[01:34:12.200 --> 01:34:15.200]  Ну, отсюда, в общем-то, я вот это и выиграл.
[01:34:18.200 --> 01:34:23.200]  То есть, получается, эти P2i растут как геометрическая пресса.
[01:34:23.200 --> 01:34:25.200]  Тогда получается следующее.
[01:34:28.200 --> 01:34:30.200]  Значит, теперь дальше рассуждение такое.
[01:34:30.200 --> 01:34:33.200]  Вот предположим, что мы тут вот L раз отпиливали.
[01:34:37.200 --> 01:34:40.200]  И у нас вот это вот осталось страхой V.
[01:34:42.200 --> 01:34:44.200]  Понимаете, да?
[01:34:47.200 --> 01:34:52.200]  В общем, на самом деле, из этого всего следует маленькая приятная вещь.
[01:34:56.200 --> 01:35:06.200]  Ну, то есть, в принципе, из этого можно сделать вывод, что, на самом деле, u равно o от P2i.
[01:35:12.200 --> 01:35:14.200]  Ну, я беру свою прогрессию.
[01:35:15.200 --> 01:35:21.200]  Да, потому что, по большому счету, все предыдущие члены оцениваются как геометрическая прогрессия шагом k-1.
[01:35:22.200 --> 01:35:24.200]  И все, что хватает k равно 3.
[01:35:25.200 --> 01:35:28.200]  Ой, я уже интригован.
[01:35:28.200 --> 01:35:31.200]  Может, правда сейчас мы это, лучший алгоритм придумаем, не знаю.
[01:35:32.200 --> 01:35:34.200]  Нет, ну, нет, я...
[01:35:34.200 --> 01:35:35.200]  Вряд ли, конечно.
[01:35:35.200 --> 01:35:36.200]  Ну, вряд ли, да.
[01:35:36.200 --> 01:35:37.200]  Доказались.
[01:35:37.200 --> 01:35:39.200]  Ну, скажем так, ладно, да, вроде как...
[01:35:41.200 --> 01:35:45.200]  Скажем так, есть подозрения, что на самом деле это нам понадобится, знаете, когда?
[01:35:45.200 --> 01:35:46.200]  Когда мы...
[01:35:46.200 --> 01:35:49.200]  Потому что, смотрите, мы, что доказательстве теории, мы сейчас не остановимся, да?
[01:35:50.200 --> 01:35:52.200]  То есть, почему мы сейчас делаем перерыв, потом продолжим?
[01:35:52.200 --> 01:35:53.200]  Почему?
[01:35:53.200 --> 01:35:58.200]  Потому что нам потребуется не просто доказать теорию, а еще придумать, как это все делать эффективно.
[01:36:00.200 --> 01:36:02.200]  То есть, пока мы просто...
[01:36:03.200 --> 01:36:05.200]  Поэтому, да, доказательство теории, может, это и не надо,
[01:36:05.200 --> 01:36:08.200]  а вот для построения алгоритма нам потом бы уже не помешало.
[01:36:10.200 --> 01:36:12.200]  Так вот, поэтому пока ничего страшного.
[01:36:12.200 --> 01:36:13.200]  Так вот.
[01:36:13.200 --> 01:36:16.200]  То есть, действительно, раз у нас идет эта диаметрическая прогрессия,
[01:36:16.200 --> 01:36:18.200]  то там, в общем-то, и константа не сильно большая,
[01:36:18.200 --> 01:36:21.200]  там что-то типа k-1 поделить на k-2.
[01:36:21.200 --> 01:36:22.200]  Так вот.
[01:36:23.200 --> 01:36:25.200]  Ну, теперь давайте посмотрим,
[01:36:25.200 --> 01:36:31.200]  какое отношение это от p2n имеет к v?
[01:36:33.200 --> 01:36:36.200]  У v должно быть...
[01:36:37.200 --> 01:36:38.200]  Ну да.
[01:36:38.200 --> 01:36:41.200]  То есть, точнее, к шифту этому какое отношение?
[01:36:43.200 --> 01:36:46.200]  Ну, если у v есть один фрексный период, да?
[01:36:46.200 --> 01:36:48.200]  Ровно один, два уже не может быть.
[01:36:48.200 --> 01:36:49.200]  Да, два уже не может быть.
[01:36:49.200 --> 01:36:53.200]  То он хотя бы p2n.
[01:36:55.200 --> 01:36:56.200]  Ну да, да.
[01:36:57.200 --> 01:37:00.200]  А шифт не может быть меньше этого фрексного периода.
[01:37:00.200 --> 01:37:01.200]  Да.
[01:37:01.200 --> 01:37:03.200]  То есть, у будет от шифта.
[01:37:04.200 --> 01:37:05.200]  Так.
[01:37:05.200 --> 01:37:07.200]  А если у v нет фрексного периода?
[01:37:07.200 --> 01:37:08.200]  Так, нет, погодите.
[01:37:08.200 --> 01:37:09.200]  Ну, шифтом...
[01:37:09.200 --> 01:37:11.200]  Нет, шифтом давайте вот сейчас аккуратнее.
[01:37:11.200 --> 01:37:12.200]  Значит, рассуждение...
[01:37:12.200 --> 01:37:13.200]  Значит, в случае...
[01:37:13.200 --> 01:37:15.200]  Теперь есть два случая.
[01:37:16.200 --> 01:37:17.200]  Давайте, давайте, в случае.
[01:37:17.200 --> 01:37:19.200]  Там два случая.
[01:37:21.200 --> 01:37:22.200]  Первая.
[01:37:23.200 --> 01:37:29.200]  Значит, v имеет фрексный период.
[01:37:32.200 --> 01:37:36.200]  Ну, крайне логично его назвать p1l+.1.
[01:37:36.200 --> 01:37:37.200]  Правда?
[01:37:45.200 --> 01:37:46.200]  Но тогда...
[01:37:46.200 --> 01:37:48.200]  Значит, тогда и века следующая.
[01:37:48.200 --> 01:37:49.200]  Что?
[01:37:49.200 --> 01:37:54.200]  Ну, во-первых, конечно же, p2a меньше либо равно p1l+.1.
[01:37:55.200 --> 01:38:01.200]  И мы утверждаем, ключевое утверждение, что это меньше либо равно шифт.
[01:38:01.200 --> 01:38:02.200]  Ну, шифт понятно.
[01:38:02.200 --> 01:38:03.200]  Вот v от m2v.
[01:38:10.200 --> 01:38:11.200]  Почему это так?
[01:38:11.200 --> 01:38:13.200]  Ну, иначе у строки...
[01:38:13.200 --> 01:38:14.200]  Да, совершенно верно.
[01:38:14.200 --> 01:38:16.200]  Фрексильный шифт плюс p1l+.1.
[01:38:16.200 --> 01:38:17.200]  Да.
[01:38:17.200 --> 01:38:21.200]  То есть, действительно, заметим, что вот эти вот 4 p1s у нас есть.
[01:38:21.200 --> 01:38:22.200]  Они вот на лицо.
[01:38:22.200 --> 01:38:23.200]  Как?
[01:38:23.200 --> 01:38:24.200]  Ка.
[01:38:24.200 --> 01:38:25.200]  Чего?
[01:38:25.200 --> 01:38:27.200]  Ну, у нас ка.
[01:38:27.200 --> 01:38:29.200]  Ну, да, ка...
[01:38:32.200 --> 01:38:35.200]  Да, говорим формально ка, но рисуем 4, раз уж мы себе 4.
[01:38:35.200 --> 01:38:36.200]  Вот.
[01:38:36.200 --> 01:38:40.200]  И действительно, окажется, что если шифт меньше...
[01:38:40.200 --> 01:38:45.200]  То есть, если вот шифт окажется каким-нибудь там вот, я не знаю, вот таким...
[01:38:47.200 --> 01:38:50.200]  Ну, что значит, что шифт оказывается вот еще меньше?
[01:38:51.200 --> 01:38:54.200]  Что вот это вот равно вот этому, да?
[01:38:54.200 --> 01:39:00.200]  Тогда это означает, что вот эта вот строчка тоже является периодом этой строки.
[01:39:01.200 --> 01:39:02.200]  Вот.
[01:39:03.200 --> 01:39:10.200]  Ну, тогда получится, что вот этот, как минимум, префикс, он является и p1 периодичным, и это вот периодичным.
[01:39:10.200 --> 01:39:11.200]  Значит, он...
[01:39:11.200 --> 01:39:18.200]  Значит, получается, вот эта строка не базовая, как всегда, потому что вот эта строка будет являться gcd от p1 и вот этого периодичным.
[01:39:18.200 --> 01:39:20.200]  В общем, дальше стандартное решение.
[01:39:21.200 --> 01:39:24.200]  Кажется, что мы что-то прям буквально, прям ровно такое же доказывали уже.
[01:39:25.200 --> 01:39:26.200]  Ну, да.
[01:39:26.200 --> 01:39:28.200]  Может быть, тут можно на какую-то верму сласлаться, да.
[01:39:28.200 --> 01:39:31.200]  Но нам уже, по-моему, легче просто этим шамлоном придраться.
[01:39:32.200 --> 01:39:33.200]  Вот.
[01:39:33.200 --> 01:39:35.200]  То есть, противоречие.
[01:39:35.200 --> 01:39:37.200]  Ну, вот тогда, в общем-то, все.
[01:39:37.200 --> 01:39:39.200]  Тогда доказательство на лицо.
[01:39:39.200 --> 01:39:40.200]  В этом случае.
[01:39:40.200 --> 01:39:42.200]  И остается только маленький финальный случай.
[01:39:42.200 --> 01:39:45.200]  А что делать, если префиксного периода нет?
[01:39:46.200 --> 01:39:47.200]  Что делать?
[01:39:49.200 --> 01:39:54.200]  Ну, тогда shift хотя бы длина... больше, чем длина выделить на k.
[01:39:54.200 --> 01:39:55.200]  Вот.
[01:39:56.200 --> 01:39:58.200]  Иначе он повторяет хотя бы k раз.
[01:40:01.200 --> 01:40:02.200]  И он будет...
[01:40:02.200 --> 01:40:03.200]  Так, сейчас-сейчас-сейчас.
[01:40:04.200 --> 01:40:05.200]  Так.
[01:40:07.200 --> 01:40:11.200]  Значит, у v нет префиксного периода.
[01:40:11.200 --> 01:40:12.200]  Так.
[01:40:17.200 --> 01:40:18.200]  Так.
[01:40:18.200 --> 01:40:19.200]  Слушайте.
[01:40:19.200 --> 01:40:21.200]  Может, это тогда надо правильно маркером написать?
[01:40:27.200 --> 01:40:28.200]  А.
[01:40:28.200 --> 01:40:29.200]  Да.
[01:40:29.200 --> 01:40:30.200]  Правильно.
[01:40:30.200 --> 01:40:31.200]  Да.
[01:40:31.200 --> 01:40:32.200]  Мы снова пишем.
[01:40:32.200 --> 01:40:33.200]  Используем.
[01:40:33.200 --> 01:40:34.200]  Ну, вот.
[01:40:34.200 --> 01:40:35.200]  Тогда по лемме 1.
[01:40:36.200 --> 01:40:38.200]  Можно сразу на лему 1 сослаться.
[01:40:38.200 --> 01:40:40.200]  А можно повторить это обсуждение, да.
[01:40:41.200 --> 01:40:44.200]  Ну, лучше сослаться, наверное, то у нас будет много повторений.
[01:40:45.200 --> 01:40:47.200]  Ну, вот тут философский вопрос, смотрите.
[01:40:47.200 --> 01:40:51.200]  С точки зрения, как бы, написания прессивого текста, да.
[01:40:51.200 --> 01:40:54.200]  А как бы, если наша цель, как бы, понять его и научиться воспроизводить,
[01:40:54.200 --> 01:40:57.200]  то может быть лучше, может быть полезнее просто 5 раз применять одну.
[01:40:57.200 --> 01:40:58.200]  Это уже будет.
[01:41:00.200 --> 01:41:01.200]  Вот.
[01:41:03.200 --> 01:41:04.200]  Вот, как бы, знаете.
[01:41:04.200 --> 01:41:07.200]  Хотя тут вот философский вопрос, как писать, знаете, потому что...
[01:41:11.200 --> 01:41:12.200]  Вот, так.
[01:41:16.200 --> 01:41:30.200]  taped, ready to feature.
[01:41:30.200 --> 01:41:58.000]  Ну давайте, у нас вот есть наша подвоя льда, но оно
[01:41:58.000 --> 01:42:00.000]  больше, чем длиновая, кажется.
[01:42:04.000 --> 01:42:06.000]  Да, ну на самом деле, да.
[01:42:08.000 --> 01:42:10.000]  То есть, по большому счёту...
[01:42:11.000 --> 01:42:14.000]  То есть, действительно, заметим, что P2v не превосходит v,
[01:42:14.000 --> 01:42:18.000]  там даже v не происходит, там ещё, по-моему, поделить на k-1, даже, что-то.
[01:42:18.000 --> 01:42:21.000]  Поэтому, по большому счёту, да, тут можно...
[01:42:21.000 --> 01:42:23.000]  Да, давайте, рыженький, значит, раз теперь напишем.
[01:42:24.000 --> 01:42:31.000]  Больше либо равно на P2l делить на k, получается.
[01:42:31.000 --> 01:42:35.000]  Этому ещё не точно оценили, потому что тут, я говорю, на k-1, скорее всего, ещё можно поделить.
[01:42:39.000 --> 01:42:41.000]  Откуда? А вот откуда, смотри.
[01:42:41.000 --> 01:42:46.000]  Значит, когда мы последний раз отпиливали вот этот вот v, да,
[01:42:46.000 --> 01:42:50.000]  у нас был вот этот P2l был вполне себе притиксным периодом.
[01:42:52.000 --> 01:42:54.000]  Мы отпилили чуть меньше,
[01:42:55.000 --> 01:42:59.000]  и получается, что вот 3 копии ещё из хвостов ещё осталось.
[01:42:59.000 --> 01:43:02.000]  Нам должно быть P2l умножить на k-1, не поделить.
[01:43:06.000 --> 01:43:07.000]  Дальше?
[01:43:08.000 --> 01:43:10.000]  Ну ладно, давайте просто.
[01:43:15.000 --> 01:43:16.000]  Всё.
[01:43:17.000 --> 01:43:20.000]  Скажись, на этом ли мы и доказаны?
[01:43:21.000 --> 01:43:24.000]  Вообще даже не Лемма, а H2O и Лемма. Всё.
[01:43:26.000 --> 01:43:28.000]  То есть, неожиданная красота. То есть, видите, мы...
[01:43:28.000 --> 01:43:30.000]  Неожиданная красота с отпиливом теоретической прогрессии.
[01:43:31.000 --> 01:43:32.000]  Вот. Ну вот.
[01:43:32.000 --> 01:43:34.000]  Мне, сначала, нужно доказывать, как здесь диаметрически,
[01:43:34.000 --> 01:43:35.000]  то есть, так, мне кажется, понятнее.
[01:43:35.000 --> 01:43:38.000]  Потому что в реальной статье тут, на самом деле, просто написано
[01:43:38.000 --> 01:43:41.000]  докажем по индукции, что там...
[01:43:42.000 --> 01:43:45.000]  Что-то типа, докажем по индукции, что там...
[01:43:45.000 --> 01:43:48.000]  На каждом шаге суммарно отпиливано не более, чем там
[01:43:48.000 --> 01:43:51.000]  минимум из первого префиксного периода и там,
[01:43:51.000 --> 01:43:54.000]  собственно, какого-то окончательного периода, умноженное
[01:43:54.000 --> 01:43:57.000]  на константу k-1, k-2, прям, честно, по индукции.
[01:43:58.000 --> 01:44:01.000]  Ну вот. Ну, а, честно говоря, мне хотелось этого избежать.
[01:44:01.000 --> 01:44:04.000]  Хотелось просто, чтобы было понятно, как будет берётся.
[01:44:05.000 --> 01:44:07.000]  Так вот, продолжение.
[01:44:07.000 --> 01:44:10.000]  Итак, значит, мы с вами...
[01:44:10.000 --> 01:44:14.000]  Ну вот, итак, ну, фактически, мы уже действительно доказали все необходимые теоремы.
[01:44:14.000 --> 01:44:15.000]  Ну, то есть, да.
[01:44:15.000 --> 01:44:18.000]  То есть, давайте ещё раз, кратко, потому что мы в текущем моменте есть.
[01:44:18.000 --> 01:44:21.000]  В прошлый раз у нас было, как реализовать алгоритм за линию,
[01:44:21.000 --> 01:44:24.000]  если у нас есть вот такое разбиение.
[01:44:25.000 --> 01:44:29.000]  А на прошлой нот, а на прошлой лекции, точнее, на паре,
[01:44:29.000 --> 01:44:32.000]  которая у нас была сегодня, мы с вами убедились.
[01:44:34.000 --> 01:44:37.000]  Мы с вами даже придумали вот некоторый алгоритм,
[01:44:38.000 --> 01:44:42.000]  который позволяет действительно такое разбиение на UEV найти.
[01:44:42.000 --> 01:44:43.000]  Вот он, собственно.
[01:44:44.000 --> 01:44:48.000]  Фактически, всё, что нам осталось, это научиться реализовывать этот алгоритм,
[01:44:48.000 --> 01:44:49.000]  во-первых, за линию,
[01:44:50.000 --> 01:44:56.000]  а, во-вторых, за линию, то самое главное, чтобы использованная память была в лоб единиц.
[01:44:57.000 --> 01:44:59.000]  Ну, можно так, для разминочки сказать, да.
[01:44:59.000 --> 01:45:01.000]  То есть, в чём у нас...
[01:45:01.000 --> 01:45:03.000]  Ну, давайте так, разомнёмся.
[01:45:03.000 --> 01:45:05.000]  Что нам вообще надо в этом алгоритме?
[01:45:07.000 --> 01:45:10.000]  Ну, первое, что нам нужно в идеале,
[01:45:10.000 --> 01:45:17.000]  это научиться понимать, есть ли вообще в текущей строке префиксный период.
[01:45:18.000 --> 01:45:21.000]  А точнее, два префиксных периода.
[01:45:22.000 --> 01:45:23.000]  Понимаете, да?
[01:45:25.000 --> 01:45:28.000]  Ну вот, то есть, есть ли два, и желательно найти второй.
[01:45:29.000 --> 01:45:32.000]  И совсем в идеале, совсем в идеале,
[01:45:32.000 --> 01:45:36.000]  желательно этот второй префиксный период находить за окей его длины.
[01:45:36.000 --> 01:45:38.000]  Вот, давайте подумаем.
[01:45:39.000 --> 01:45:45.000]  Вот, предположим, что нам с небес по факсу присылают, допустим, за от...
[01:45:46.000 --> 01:45:49.000]  за от этого П2, и это самая П2.
[01:45:52.000 --> 01:45:53.000]  Вот, внимание, вопрос.
[01:45:54.000 --> 01:45:58.000]  Хватит ли оно верить, что после этого мы тогда тут автоматически победили?
[01:46:07.000 --> 01:46:11.000]  Вот, что нам нужно, кроме того, чтобы получать вот этот вот
[01:46:11.000 --> 01:46:15.000]  префиксный... этот вот второй префиксный период за окей его длины?
[01:46:15.000 --> 01:46:17.000]  Да, нужно пост-штрих находить.
[01:46:17.000 --> 01:46:18.000]  Да.
[01:46:19.000 --> 01:46:22.000]  Действительно, нам нужно выходить этот пост-штрих еще.
[01:46:23.000 --> 01:46:24.000]  А теперь давайте вспоминать.
[01:46:24.000 --> 01:46:28.000]  А как же мы этот пост-штрих вообще будем искать?
[01:46:28.000 --> 01:46:33.000]  Мы там будем находить на меньший префиксный период С бесконечный?
[01:46:33.000 --> 01:46:36.000]  Да, у нас был тот самый мистический алгоритм.
[01:46:36.000 --> 01:46:37.000]  Да, он тут даже остается.
[01:46:37.000 --> 01:46:38.000]  Я его давайте даже перепишу.
[01:46:41.000 --> 01:46:42.000]  Знаете, как это было?
[01:46:42.000 --> 01:46:43.000]  У меня возникла мусор.
[01:46:43.000 --> 01:46:44.000]  Сейчас, где она?
[01:46:45.000 --> 01:46:46.000]  Так.
[01:46:48.000 --> 01:46:49.000]  Да, сейчас.
[01:46:49.000 --> 01:46:51.000]  А можно попросить в сторону?
[01:46:51.000 --> 01:46:52.000]  Давай.
[01:46:52.000 --> 01:46:53.000]  А как у нас там с контестом?
[01:46:56.000 --> 01:46:57.000]  Ой, пока его нет.
[01:46:58.000 --> 01:46:59.000]  Хотя прям очень хочется.
[01:46:59.000 --> 01:47:01.000]  Ну, просто меня просили спросить.
[01:47:02.000 --> 01:47:03.000]  Ага, понятно.
[01:47:03.000 --> 01:47:04.000]  Вы хотите контест?
[01:47:06.000 --> 01:47:07.000]  Если можно, мы заканчиваем?
[01:47:07.000 --> 01:47:08.000]  Нет.
[01:47:11.000 --> 01:47:12.000]  А тут два момента.
[01:47:12.000 --> 01:47:15.000]  С одной стороны, можно и без контеста, с другой стороны, как бы...
[01:47:15.000 --> 01:47:18.000]  Зройся, на первом курсе еще там, например, кто-то спрашивает, а то как-то страшно.
[01:47:18.000 --> 01:47:23.000]  Вот у нас новых задач как-то нету, а в основном потоке там уже третий контест.
[01:47:23.000 --> 01:47:30.000]  Ну вот, видите, спрашивается, как-то вот страшно.
[01:47:30.000 --> 01:47:31.000]  Разрывается шаблон, почему?
[01:47:32.000 --> 01:47:33.000]  Нет, не волнуйтесь.
[01:47:33.000 --> 01:47:39.000]  Контест будет, потому что на самом деле и по геометрии, в первую очередь, на стручке, на самом деле у меня там какое-то большое домашнее задание есть, так что...
[01:47:39.000 --> 01:47:44.000]  Пожалуй, на самом деле, да, шум не мешает его, в общем-то, для вас выложить.
[01:47:45.000 --> 01:47:47.000]  Как минимум его.
[01:47:48.000 --> 01:47:49.000]  Вот так.
[01:47:50.000 --> 01:47:51.000]  Так что...
[01:47:51.000 --> 01:47:54.000]  Так что спасибо за упоминание.
[01:47:54.000 --> 01:47:59.000]  Этот алгоритм, соответственно, 4 у нас выглядит так.
[01:48:04.000 --> 01:48:11.000]  То есть помните, вот этот четвертый шаг, я его даже как четвертый шаг нарисую, пришло время его перерисовать сюда.
[01:48:11.000 --> 01:48:16.000]  Вот.
[01:48:16.000 --> 01:48:21.000]  И отпиливать вот эту штуку мы будем примерно следующим образом.
[01:48:21.000 --> 01:48:26.000]  То есть мы ее будем отпиливать как, соответственно, что?
[01:48:26.000 --> 01:48:30.000]  То есть здесь предлагает так.
[01:48:30.000 --> 01:48:32.000]  То есть у нас тут механизм нарисуем так.
[01:48:32.000 --> 01:48:38.000]  То есть действительно помните, допустим, равно 0 для какой-то строкии абстрактной.
[01:48:38.000 --> 01:48:53.000]  И был у нас механизм, что, там, пока, соответственно, s от cos плюс 1, пум-пум, модуль s, точнее, у него есть, что у него есть?
[01:48:53.000 --> 01:49:17.000]  Префиксный период, допустим, p1, там, меньше, чем некое мистическое число p2.
[01:49:17.000 --> 01:49:25.000]  Пока у нас это будет, мы будем делать cos плюс равно p1.
[01:49:25.000 --> 01:49:32.000]  Это не совсем тот алгоритм, который был, но трансформируется он следующее.
[01:49:32.000 --> 01:49:40.000]  Значит, у нас есть, представим себе, строка s, и мы еще знаем, что у нее есть мистический префикс p2.
[01:49:40.000 --> 01:49:50.000]  У нее есть мистический префикс p2, который является, чем?
[01:49:50.000 --> 01:50:01.000]  Правильно, тоже, по большому счету, префиксным периодом.
[01:50:01.000 --> 01:50:03.000]  Вот, обратите внимание.
[01:50:03.000 --> 01:50:05.000]  То есть что мы сейчас имеем?
[01:50:05.000 --> 01:50:10.000]  Это действительно какой-то суффикс строки s, у которой есть префиксный период p2.
[01:50:10.000 --> 01:50:15.000]  Исходный алгоритм так и говорил.
[01:50:15.000 --> 01:50:24.000]  Отлично, пока мы будем находить, так сказать, префиксный период меньше, мы этот префиксный период будем открыть.
[01:50:24.000 --> 01:50:40.000]  И мы знаем, что до того даже, обратите внимание, если это рассуждение проводить даже не для строки s, а для первых k копии вот этой длины p2,
[01:50:40.000 --> 01:50:49.000]  то можно вообще убедиться, что это отпиливание закончится раньше, чем мы достигнем p2.
[01:50:49.000 --> 01:50:56.000]  Потому что по большому счету мы этим занимаемся, практически для этого p2 мы и занимаемся.
[01:50:56.000 --> 01:51:00.000]  Потому что строка базовая, мы это знаем, поэтому вот.
[01:51:00.000 --> 01:51:08.000]  То есть вот такая трансформация, можно даже четыре штриха назвать, потому что это не совсем то.
[01:51:08.000 --> 01:51:13.000]  И теперь идея, но этот алгоритм тоже, смотрите какой интерес получается.
[01:51:13.000 --> 01:51:25.000]  Если у нас есть мистический черный ящик, который умеет находить префиксный период и желательно за от его длины,
[01:51:25.000 --> 01:51:34.000]  то тогда вот это вот мероприятие мы легко проведем за от отпиливаемой длины, согласны?
[01:51:34.000 --> 01:51:42.000]  Пока вы это поняли.
[01:51:42.000 --> 01:51:46.000]  То есть таким образом получается, что все, что нам нужно, то есть все передаст просто.
[01:51:46.000 --> 01:51:52.000]  Задача дана строка s, пожалуйста, найдите ее.
[01:51:52.000 --> 01:51:55.000]  Скажите, задача лайна.
[01:51:55.000 --> 01:52:01.000]  Верно ли, что у нее есть хоть один префиксный период? Если да, то найдите минимальный.
[01:52:01.000 --> 01:52:06.000]  И задача, ну даже не хань, хотя скорее медленно будет.
[01:52:06.000 --> 01:52:16.000]  Скажите, пожалуйста, верно ли, что у строки есть хотя бы два префиксных периода? Если да, найдите, пожалуйста, старый.
[01:52:16.000 --> 01:52:26.000]  То есть я упреждаю, что ровно эти черные ящики нам теперь нужны для того, чтобы добить задачу.
[01:52:26.000 --> 01:52:30.000]  Согласны?
[01:52:30.000 --> 01:52:33.000]  Ну да.
[01:52:33.000 --> 01:52:39.000]  Поэтому, ну вот, собственно, предыдущую лекцию я начал с того, что начал все это писать.
[01:52:39.000 --> 01:52:45.000]  Эту лекцию я начну с того, что я это все буду стирать.
[01:52:45.000 --> 01:52:50.000]  Да, правильно, обязательно надо на видео заснять, как я все стираю.
[01:52:50.000 --> 01:52:52.000]  Действительно, да.
[01:52:52.000 --> 01:52:58.000]  Так, значит, все это мы убираем, потому что мы уже поняли, что там где-то победа.
[01:52:58.000 --> 01:53:07.000]  То есть, как всегда, мы все резать, мы свели все к черному ящику, который там по ссылочке получается, там строчку или даже сдвиг ее.
[01:53:07.000 --> 01:53:17.000]  Да, как видите, это алгоритм, видимо, удобно будет резать, вот именно все ставил строчки, чтобы удобно было передавать там указатель какой-нибудь красивый.
[01:53:18.000 --> 01:53:24.000]  И, и, и, и, и, и, и.
[01:53:24.000 --> 01:53:34.000]  И все, что нам теперь нужно сделать, это, то есть, теперь задачка зеленая.
[01:53:34.000 --> 01:53:36.000]  Итак, просто теперь абстралируемся.
[01:53:36.000 --> 01:53:40.000]  Дана строка, говорим мы, s.
[01:53:44.000 --> 01:53:46.000]  Значит, версия easy.
[01:53:48.000 --> 01:54:01.000]  Есть ли у нее префиксный период?
[01:54:04.000 --> 01:54:25.000]  И важно, и если да, то найти минимальный префиксный период прайки.
[01:54:34.000 --> 01:54:56.000]  Причем требуемое время работы, то есть время работы, я так не пишу, o от p1, если p1 есть, и o от модуль s иначе.
[01:54:56.000 --> 01:55:09.000]  Ну, если там, если там проходят такие вообще префиксные периоды нет, то, в общем-то, это нас начинает сразу устраивать, потому что мы там на этом алгоритм заканчиваем.
[01:55:09.000 --> 01:55:11.000]  Это версия easy.
[01:55:13.000 --> 01:55:14.000]  Вот.
[01:55:14.000 --> 01:55:17.000]  И версия, так сказать, видео.
[01:55:18.000 --> 01:55:20.000]  То же самое.
[01:55:20.000 --> 01:55:37.000]  Прям кэппи пастим, кэппи пастим, кэппи пастим, но в конце пишем хотя бы два различных префиксных периода.
[01:55:37.000 --> 01:56:01.000]  Если да, то найти минимальный, найти второй минимальный префиксный период p2.
[01:56:02.000 --> 01:56:24.000]  И то же время, соответственно, работы, o от p2, если p2 есть, и o от p1, о от модуль s, конечно, иначе.
[01:56:28.000 --> 01:56:30.000]  Такова наша финальная цель.
[01:56:31.000 --> 01:56:33.000]  Такова наша финальная цель.
[01:56:40.000 --> 01:56:42.000]  Как же это сделать?
[01:56:45.000 --> 01:56:46.000]  Ну, конечно, да.
[01:56:47.000 --> 01:56:52.000]  Слово первой задачи, в общем-то, навекает, но действительно, сильно сложной сейчас не будет.
[01:56:53.000 --> 01:56:55.000]  Ну, это все и так.
[01:56:55.000 --> 01:57:02.000]  То есть, короче, технологии будут не тривиальные, но, в общем-то, уже, в общем, ничего принципиально нового мы не изобретем.
[01:57:04.000 --> 01:57:05.000]  Смотрите.
[01:57:05.000 --> 01:57:10.000]  Потому что для того, что все это базируется на следующем.
[01:57:10.000 --> 01:57:11.000]  Смотрите.
[01:57:13.000 --> 01:57:20.000]  Вот, допустим, вот я неслучайно не стер вот этот вот механизм, потому что, естественно, мы будем пользоваться им.
[01:57:23.000 --> 01:57:24.000]  Смотрите.
[01:57:24.000 --> 01:57:32.000]  Вот, допустим, что мы этот механизм, допустим, делали бы как-нибудь с нуля, и на каждом шаге переходили бы к rp плюс 1,0.
[01:57:32.000 --> 01:57:36.000]  То есть, переводя говоря, там все кушки честно вычисляли, допустим, да?
[01:57:37.000 --> 01:57:39.000]  Мне жутко интересно вот что.
[01:57:39.000 --> 01:57:46.000]  Я хочу по строке f получить, допустим, вот эти вот шифты.
[01:57:47.000 --> 01:57:53.000]  Шифты с под q, q равно 1, 2, 3 и так далее модулест.
[01:57:55.000 --> 01:57:59.000]  Ну, как минимум, в принципе, я хочу вот получить какие-то шифты.
[01:58:03.000 --> 01:58:06.000]  Как мне эти шифты найти?
[01:58:09.000 --> 01:58:12.000]  Ну, на самом деле, есть мистическое утверждение.
[01:58:17.000 --> 01:58:24.000]  На самом деле, давайте я тут подменю переменную, вместо q я тут не напишу, потому что q у меня будет немножко другой.
[01:58:27.000 --> 01:58:29.000]  Очень просто.
[01:58:30.000 --> 01:58:32.000]  Как это, ну вот.
[01:58:36.000 --> 01:58:38.000]  Ну вот.
[01:58:39.000 --> 01:58:41.000]  Значит, утверждение такое.
[01:58:41.000 --> 01:58:43.000]  Смотрите.
[01:58:46.000 --> 01:58:48.000]  Если в какой-то момент.
[01:58:53.000 --> 01:58:55.000]  В какой-то момент.
[01:58:57.000 --> 01:58:59.000]  Допустим, вот этой схемы.
[01:59:03.000 --> 01:59:05.000]  Схемы kmp.
[01:59:09.000 --> 01:59:14.000]  Возникло p в первые, причем в первые.
[01:59:17.000 --> 01:59:21.000]  P plus q равно i.
[01:59:22.000 --> 01:59:27.000]  То есть у вас P plus q, оно как бы, это понятно, это жраница вот этого совпадения.
[01:59:29.000 --> 01:59:31.000]  А, еще важный момент, смотрите.
[01:59:32.000 --> 01:59:36.000]  Тут, конечно, эта схема применяется, когда мы ищем s в t.
[01:59:37.000 --> 01:59:43.000]  Но тут фишка будет в том, что мы теперь эту s будем искать как бы саму в себе.
[01:59:44.000 --> 01:59:47.000]  Ну, то есть идея будет такая, смотрите.
[01:59:48.000 --> 01:59:51.000]  Вот у нас есть строка s, и мы как бы ее ищем саму в себе.
[01:59:52.000 --> 01:59:56.000]  Только начиная не с первой позиции, а соответственно со второй.
[01:59:57.000 --> 01:59:59.000]  Понятно, да?
[02:00:00.000 --> 02:00:03.000]  Ну, то есть если просто в честную для каждого p с нуля это искать.
[02:00:04.000 --> 02:00:07.000]  Ну, по большому счету мы прям в явном виде z функцию найдем.
[02:00:08.000 --> 02:00:13.000]  Ну, если мы будем прям в тупую это делать, мы прям вот будем от каждой позиции z функцию искать.
[02:00:14.000 --> 02:00:15.000]  Но в чем глупости смысл?
[02:00:16.000 --> 02:00:19.000]  Допустим, мы вот ищем действительно у строки s z функцию.
[02:00:20.000 --> 02:00:21.000]  Можно себе такое представить, да?
[02:00:22.000 --> 02:00:26.000]  Тогда заметим следующее, что когда мы вот, например, в позиции какой-нибудь i,
[02:00:27.000 --> 02:00:30.000]  вот ладно, после позиции i тут мы считали z функцию,
[02:00:31.000 --> 02:00:34.000]  и эта z функция вот этот вот reach reach reach дошел вот аж до сюда, да?
[02:00:35.000 --> 02:00:37.000]  То тогда мы замечаем следующее,
[02:00:38.000 --> 02:00:41.000]  что если этот reach дошел до позиции g,
[02:00:42.000 --> 02:00:46.000]  то мы уже можем сказать, что shift от g будет ну не более чем p, правда?
[02:00:50.000 --> 02:00:52.000]  Ну, если так вот z функция дошла.
[02:00:53.000 --> 02:00:57.000]  И если то же самое, если в какой-то момент оказалось, что p равно i,
[02:00:58.000 --> 02:00:59.000]  и, допустим, q равно g минус i, да?
[02:01:00.000 --> 02:01:01.000]  Это вот в терминах этого алгоритма.
[02:01:01.000 --> 02:01:04.000]  То есть тогда мы гарантируем, что если как бы тут у нас достигла g,
[02:01:05.000 --> 02:01:07.000]  значит shift ну либо i, либо еще меньше.
[02:01:08.000 --> 02:01:09.000]  Но с другой стороны заметим, что, скорее всего,
[02:01:10.000 --> 02:01:12.000]  если бы у нас shift был меньше где-нибудь, вот, из 3,
[02:01:13.000 --> 02:01:14.000]  и там reach тоже бы его достигал,
[02:01:15.000 --> 02:01:18.000]  то тогда мы бы уже до g, до позиции g явно дошли бы и раньше.
[02:01:21.000 --> 02:01:24.000]  То есть поэтому идея будет в том, что если мы тут t подменим на s,
[02:01:25.000 --> 02:01:26.000]  то есть будем искать s само в себе,
[02:01:27.000 --> 02:01:28.000]  то оказывается, когда впервые,
[02:01:28.000 --> 02:01:34.000]  когда для какого-то числа i мы впервые достигли p плюс q равно i,
[02:01:35.000 --> 02:01:39.000]  это означает, что в этот момент мы поняли, чему равно shift от i.
[02:01:46.000 --> 02:01:47.000]  Понятно?
[02:01:48.000 --> 02:01:49.000]  Понятно, о чем я говорю?
[02:01:49.000 --> 02:01:52.000]  Но, разумеется, мы не будем искать, это все честно прям все.
[02:01:53.000 --> 02:01:56.000]  На самом деле, заметим следующее, что, как и в алгоритме z функции,
[02:01:57.000 --> 02:01:59.000]  мы тоже в честную все z функции не ищем, правда?
[02:02:00.000 --> 02:02:01.000]  Ну, что значит в честную?
[02:02:02.000 --> 02:02:04.000]  Это означает, что мы же как бы на каждом шаге q не обнуляем, правда?
[02:02:05.000 --> 02:02:07.000]  То есть на самом деле, по большому счету,
[02:02:08.000 --> 02:02:11.000]  когда мы ищем z функцию, мы там пытаемся, значит,
[02:02:12.000 --> 02:02:13.000]  искать ищем z функцию,
[02:02:13.000 --> 02:02:15.000]  то есть на самом деле, по большому счету,
[02:02:16.000 --> 02:02:18.000]  когда мы ищем z функцию, мы там пытаемся, значит,
[02:02:19.000 --> 02:02:21.000]  то есть когда мы там q какой-то нашли,
[02:02:22.000 --> 02:02:24.000]  мы пытаемся сдвинуть на такой p штрих,
[02:02:25.000 --> 02:02:28.000]  чтобы уже знать, что q точно может быть равно q минус,
[02:02:29.000 --> 02:02:30.000]  вот во сколько вы тут сдвинули,
[02:02:31.000 --> 02:02:32.000]  чтобы потом эту границу двигать дальше, правда?
[02:02:33.000 --> 02:02:35.000]  То есть если с какой-то позиции мы уже точно знаем,
[02:02:36.000 --> 02:02:38.000]  что это не произойдет, то мы там просто за 1 все понимаем и не паримся.
[02:02:40.000 --> 02:02:42.000]  То есть действительно, то есть на самом деле,
[02:02:43.000 --> 02:02:45.000]  на самом деле, если мы хотим найти такие шифты,
[02:02:46.000 --> 02:02:48.000]  то нам все p-шки находить не надо,
[02:02:49.000 --> 02:02:50.000]  а вместо этого нужно следующее.
[02:02:51.000 --> 02:02:53.000]  То есть механизм будет такой.
[02:02:54.000 --> 02:02:56.000]  Давайте вот сейчас затру и вот, значит,
[02:02:57.000 --> 02:03:00.000]  попробую рисовать вот все это воображать себе за 1.
[02:03:01.000 --> 02:03:02.000]  Смотрите.
[02:03:03.000 --> 02:03:04.000]  Значит, мы ищем s саму в себе,
[02:03:05.000 --> 02:03:06.000]  и вот допустим, начиная со второго символа,
[02:03:07.000 --> 02:03:09.000]  то есть начиная со второго символа,
[02:03:10.000 --> 02:03:12.000]  мы тут какой-то обнаружили, что тут какой-то префикс
[02:03:13.000 --> 02:03:14.000]  совпадает.
[02:03:15.000 --> 02:03:16.000]  Видите, да?
[02:03:17.000 --> 02:03:19.000]  Тогда мы для всех вот этих позиций
[02:03:20.000 --> 02:03:23.000]  уже шифты как бы знаем, потому что мы до них дошли.
[02:03:24.000 --> 02:03:25.000]  Что теперь?
[02:03:26.000 --> 02:03:27.000]  А мы хотим какие-то шифты дальше.
[02:03:28.000 --> 02:03:29.000]  Что для этого нужно?
[02:03:30.000 --> 02:03:31.000]  Ну, для этого, как мы говорили,
[02:03:32.000 --> 02:03:33.000]  на языке префикс функций, мы бы сказали,
[02:03:34.000 --> 02:03:37.000]  нам нужно найти максимальный собственный суффикс этого префикса,
[02:03:38.000 --> 02:03:39.000]  который совпадает с префиксом.
[02:03:40.000 --> 02:03:42.000]  И передвинуть вот эту p на него,
[02:03:43.000 --> 02:03:44.000]  то есть p фактически,
[02:03:45.000 --> 02:03:46.000]  ну, в идеале, по крайней мере,
[02:03:47.000 --> 02:03:48.000]  передвигается сюда, q уменьшается,
[02:03:49.000 --> 02:03:51.000]  и мы пытаемся продлевать эти p шприкушки,
[02:03:52.000 --> 02:03:53.000]  вот, начиная с этого лумя.
[02:03:54.000 --> 02:03:56.000]  Как бы, насколько нам удастся продвинуть,
[02:03:57.000 --> 02:03:58.000]  вот мы еще шифты найдем.
[02:04:04.000 --> 02:04:05.000]  Понятно, виртуальная смена?
[02:04:10.000 --> 02:04:11.000]  Скорее всего, не очень.
[02:04:12.000 --> 02:04:13.000]  Ну вот.
[02:04:14.000 --> 02:04:15.000]  А что вас пугает?
[02:04:22.000 --> 02:04:23.000]  Вот, на всякий случай.
[02:04:24.000 --> 02:04:25.000]  Может быть вас пугает то, что непонятно,
[02:04:26.000 --> 02:04:27.000]  как это делают залог единицы памяти?
[02:04:28.000 --> 02:04:29.000]  Ну, в частности.
[02:04:30.000 --> 02:04:32.000]  А вот, давай, я конкретно это и не предлагаю.
[02:04:33.000 --> 02:04:34.000]  Я пока просто описываю,
[02:04:35.000 --> 02:04:36.000]  как, ну, один из вариантов,
[02:04:36.000 --> 02:04:38.000]  как работает алгоритм кнута Мориса Пратта, да?
[02:04:41.000 --> 02:04:42.000]  Ну, вот.
[02:04:43.000 --> 02:04:44.000]  Ну, как теоретически мог работать алгоритм кнута Мориса Пратта?
[02:04:45.000 --> 02:04:47.000]  Мы берем строку s и идем в ней вот по строке t.
[02:04:48.000 --> 02:04:49.000]  То есть, сначала мы там вот,
[02:04:50.000 --> 02:04:51.000]  ну, вот, если бы мы шли по строке t,
[02:04:52.000 --> 02:04:53.000]  мы бы начинали вот с самого начала.
[02:04:54.000 --> 02:04:55.000]  Мы тут вот нашли какой-то префикс строки s,
[02:04:56.000 --> 02:04:57.000]  подающий с префиксом t,
[02:04:58.000 --> 02:04:59.000]  а потом хотим двигаться дальше, да?
[02:05:00.000 --> 02:05:01.000]  Как мы двигаемся дальше?
[02:05:02.000 --> 02:05:03.000]  Мы, собственно, берем максимальный суффикс,
[02:05:04.000 --> 02:05:05.000]  который совпадает с префиксом строки s,
[02:05:06.000 --> 02:05:07.000]  и начинаемся вот насчитывать этот префикс,
[02:05:08.000 --> 02:05:09.000]  префикс, префикс, вот докуда дойдет.
[02:05:10.000 --> 02:05:12.000]  Потом мы тоже скачем по вот этой штуке,
[02:05:13.000 --> 02:05:14.000]  эта штука называется префикс функция,
[02:05:15.000 --> 02:05:16.000]  как вы помните, да?
[02:05:17.000 --> 02:05:18.000]  И двигаемся дальше.
[02:05:19.000 --> 02:05:20.000]  Вот.
[02:05:21.000 --> 02:05:22.000]  Было дело?
[02:05:23.000 --> 02:05:25.000]  Да нет, наверное.
[02:05:26.000 --> 02:05:27.000]  Так вот.
[02:05:28.000 --> 02:05:29.000]  Так мы искали под строки в строке s.
[02:05:30.000 --> 02:05:31.000]  А ведь, по большому счету,
[02:05:32.000 --> 02:05:33.000]  это можно проинтерпретировать следующим образом.
[02:05:33.000 --> 02:05:34.000]  В каждой позиции строки t
[02:05:35.000 --> 02:05:36.000]  мы нашли максимальный суффикс,
[02:05:37.000 --> 02:05:38.000]  то есть максимальную длину
[02:05:39.000 --> 02:05:40.000]  под строки заканчивающейся в этой позиции,
[02:05:41.000 --> 02:05:42.000]  которая совпадает с префиксом строки s.
[02:05:43.000 --> 02:05:44.000]  Согласны?
[02:05:56.000 --> 02:05:57.000]  Что, для вас префикс функция звучит как-то по-другому?
[02:05:58.000 --> 02:05:59.000]  Нет.
[02:06:00.000 --> 02:06:01.000]  Отлично.
[02:06:02.000 --> 02:06:03.000]  Так вот.
[02:06:04.000 --> 02:06:05.000]  А теперь давайте вспомним,
[02:06:06.000 --> 02:06:07.000]  как мы саму префикс функцию искали.
[02:06:08.000 --> 02:06:09.000]  А саму префикс функцию искали
[02:06:10.000 --> 02:06:12.000]  мы абсолютно тем же самым образом.
[02:06:13.000 --> 02:06:14.000]  То есть мы для каждой позиции в строке,
[02:06:15.000 --> 02:06:16.000]  на этот раз уже s,
[02:06:17.000 --> 02:06:20.000]  пытались найти максимальные длины под строку
[02:06:21.000 --> 02:06:22.000]  заканчивающейся в этой позиции,
[02:06:23.000 --> 02:06:24.000]  совпадающие с префиксом.
[02:06:25.000 --> 02:06:26.000]  Только на этот раз мы накладывали на себя ограничение,
[02:06:27.000 --> 02:06:28.000]  что сам вот весь этот префикс мы не рассматриваем.
[02:06:29.000 --> 02:06:30.000]  И как мы это делали?
[02:06:31.000 --> 02:06:32.000]  А можно это делать так?
[02:06:33.000 --> 02:06:35.000]  Допустим, для вот этих всех позиций мы ответ нашли.
[02:06:36.000 --> 02:06:38.000]  Дальше мы говорим так.
[02:06:39.000 --> 02:06:43.000]  Для этого префикса мы берем вот этот вот предыдущий префикс.
[02:06:44.000 --> 02:06:45.000]  То есть максимальный собственный супикс,
[02:06:46.000 --> 02:06:47.000]  совпадающий с префиксом.
[02:06:48.000 --> 02:06:49.000]  И начиная с этой позиции,
[02:06:50.000 --> 02:06:52.000]  то есть начинаем пытаться этот префикс расширять,
[02:06:53.000 --> 02:06:54.000]  расширять, расширять, насколько он совпадается
[02:06:55.000 --> 02:06:58.000]  тоже с префиксом.
[02:06:58.000 --> 02:07:00.000]  И тогда для каждой из этих позиций,
[02:07:01.000 --> 02:07:02.000]  куда мы дойдем, мы ответ уже нашли.
[02:07:03.000 --> 02:07:04.000]  То есть префикс-пункцию прямо можно сказать вычислить,
[02:07:05.000 --> 02:07:06.000]  вычислить, не вычислить.
[02:07:07.000 --> 02:07:08.000]  То есть в классическом алгоритме KMP
[02:07:09.000 --> 02:07:10.000]  это эквивалент от того,
[02:07:11.000 --> 02:07:12.000]  насколько мы будем идти,
[02:07:13.000 --> 02:07:14.000]  так что каждый следующий равен предыдущий плюс один.
[02:07:15.000 --> 02:07:16.000]  В какой-то момент это отрубится,
[02:07:17.000 --> 02:07:18.000]  и тогда что мы сделаем?
[02:07:19.000 --> 02:07:20.000]  Мы опять возьмем этот суффикс,
[02:07:21.000 --> 02:07:22.000]  он же префикс,
[02:07:23.000 --> 02:07:24.000]  и пытаемся продлить его.
[02:07:25.000 --> 02:07:26.000]  Может так случиться, что продлить не удастся,
[02:07:26.000 --> 02:07:27.000]  и мы будем скатать несколько.
[02:07:28.000 --> 02:07:30.000]  Да, то есть еще раз говорю,
[02:07:31.000 --> 02:07:32.000]  не устаю повторять,
[02:07:33.000 --> 02:07:34.000]  все, что я сейчас делаю,
[02:07:35.000 --> 02:07:36.000]  это как бы переформулирую
[02:07:37.000 --> 02:07:39.000]  в более подходящие нам терминологии
[02:07:40.000 --> 02:07:41.000]  алгоритм кто там может собрать.
[02:07:42.000 --> 02:07:43.000]  Ни более того.
[02:07:46.000 --> 02:07:47.000]  Так вот.
[02:07:48.000 --> 02:07:50.000]  Но заметим, что я говорил о том,
[02:07:51.000 --> 02:07:52.000]  что мы так можем префикс-функцию находить,
[02:07:53.000 --> 02:07:54.000]  но заметим, что мы же помним,
[02:07:54.000 --> 02:07:55.000]  что префикс-функция и shift
[02:07:56.000 --> 02:07:57.000]  по большому счету одно и то же.
[02:07:58.000 --> 02:07:59.000]  Что такое shift?
[02:08:00.000 --> 02:08:01.000]  Что такое shift от i?
[02:08:02.000 --> 02:08:03.000]  Это фактически i минус префикс-функция от i.
[02:08:04.000 --> 02:08:07.000]  Поэтому, когда мы вот таким образом находим префикс-функцию,
[02:08:08.000 --> 02:08:09.000]  и вот находим такую префикс-функцию,
[02:08:10.000 --> 02:08:11.000]  то мы и шифты находим.
[02:08:12.000 --> 02:08:13.000]  Так вот.
[02:08:14.000 --> 02:08:15.000]  То есть заметим, что в явном виде
[02:08:16.000 --> 02:08:18.000]  нам эти шифты даже хранить не обязательно.
[02:08:19.000 --> 02:08:20.000]  Обратите внимание.
[02:08:21.000 --> 02:08:22.000]  Нам не нужно хранить эти шифты,
[02:08:22.000 --> 02:08:29.000]  потому что на самом деле наша цель перечислять эти шифты
[02:08:30.000 --> 02:08:32.000]  и по большому счету наша цель,
[02:08:33.000 --> 02:08:34.000]  вот если мы решаем задачу easy,
[02:08:35.000 --> 02:08:37.000]  вообще посмотрите, цель easy.
[02:08:44.000 --> 02:08:49.000]  Найти по большому счету такое минимальное i,
[02:08:49.000 --> 02:09:00.000]  что shift от i равно i поделить на х.
[02:09:05.000 --> 02:09:06.000]  Ну вот, потому что какая наша цель?
[02:09:07.000 --> 02:09:08.000]  Чтобы найти минимальный префиксный период.
[02:09:09.000 --> 02:09:10.000]  Что такое минимальный префиксный период?
[02:09:11.000 --> 02:09:12.000]  Это минимальный период,
[02:09:13.000 --> 02:09:14.000]  то есть минимальный префикс,
[02:09:15.000 --> 02:09:17.000]  у которого после себя еще k минус одно вхождение.
[02:09:17.000 --> 02:09:18.000]  Правда?
[02:09:25.000 --> 02:09:26.000]  Вот.
[02:09:27.000 --> 02:09:28.000]  Поэтому по большому счету наша цель найти,
[02:09:29.000 --> 02:09:30.000]  когда у нас впервые произойдет,
[02:09:31.000 --> 02:09:32.000]  что shift от s, ну ладно, можно сказать,
[02:09:33.000 --> 02:09:34.000]  меньше либо равно и поделить на k,
[02:09:35.000 --> 02:09:36.000]  но на самом деле нас интересует ровно и поделить на k,
[02:09:37.000 --> 02:09:40.000]  потому что если у вас для какого-то i это будет там...
[02:09:40.000 --> 02:09:41.000]  Ну вот.
[02:09:46.000 --> 02:09:47.000]  Ну потому что легко доказать,
[02:09:48.000 --> 02:09:49.000]  что если это будет строго меньше,
[02:09:50.000 --> 02:09:51.000]  то скорее всего это будет означать,
[02:09:52.000 --> 02:09:53.000]  что на предыдущих i это уже было верно.
[02:09:55.000 --> 02:09:58.000]  То есть практически нас интересует первый такой shift.
[02:10:00.000 --> 02:10:02.000]  То есть если мы сейчас научимся аккуратно искать шифты,
[02:10:03.000 --> 02:10:04.000]  прям поочередно,
[02:10:05.000 --> 02:10:06.000]  то мы просто запустим этот процесс
[02:10:07.000 --> 02:10:09.000]  и просто остановимся ровно в тот момент,
[02:10:10.000 --> 02:10:11.000]  когда действительно этот shift,
[02:10:12.000 --> 02:10:14.000]  shift от черного i окажется ровно вк раз меньше.
[02:10:15.000 --> 02:10:17.000]  В чем-то заметим, что если мы это будем делать
[02:10:18.000 --> 02:10:19.000]  за o от количества пройденных позиций,
[02:10:20.000 --> 02:10:21.000]  то в общем-то и получится то, что нам надо,
[02:10:22.000 --> 02:10:24.000]  потому что получается мы тогда найдем этот shift
[02:10:25.000 --> 02:10:26.000]  за o от shift умножить на k.
[02:10:27.000 --> 02:10:28.000]  Согласны?
[02:10:29.000 --> 02:10:30.000]  Да, вспомним k это константа.
[02:10:31.000 --> 02:10:32.000]  Вот.
[02:10:33.000 --> 02:10:34.000]  Ну и теперь возникает вопрос.
[02:10:35.000 --> 02:10:38.000]  Как же нам этот процесс запустить?
[02:10:41.000 --> 02:10:43.000]  Ну, начнем с того, что конечно же,
[02:10:44.000 --> 02:10:45.000]  во-первых,
[02:10:46.000 --> 02:10:50.000]  напоминаю, мы все это делаем для strategy s.
[02:10:51.000 --> 02:10:52.000]  Теперь.
[02:10:53.000 --> 02:10:55.000]  И начинаем мы на этот раз не с нуля,
[02:10:56.000 --> 02:10:57.000]  а с единички, конечно.
[02:10:58.000 --> 02:10:59.000]  Понимаете, да?
[02:11:02.000 --> 02:11:03.000]  Ой, ну и тут, конечно.
[02:11:04.000 --> 02:11:07.000]  Да, тут можно сказать ищем s, тоже в s.
[02:11:10.000 --> 02:11:11.000]  Вот.
[02:11:12.000 --> 02:11:13.000]  Ну и самое интересное,
[02:11:14.000 --> 02:11:15.000]  что же у нас будет для pq?
[02:11:16.000 --> 02:11:17.000]  Вот как вы думаете.
[02:11:18.000 --> 02:11:21.000]  А свой переход мы будем забавать.
[02:11:31.000 --> 02:11:32.000]  Ну да, ну понятно, что мы здесь напишем
[02:11:33.000 --> 02:11:35.000]  что-то в духе if там оказалось
[02:11:35.000 --> 02:11:36.000]  действительно,
[02:11:37.000 --> 02:11:38.000]  p плюс q равно там,
[02:11:39.000 --> 02:11:40.000]  p умножить на k,
[02:11:41.000 --> 02:11:42.000]  да?
[02:11:43.000 --> 02:11:44.000]  Совершенно исключительно.
[02:11:45.000 --> 02:11:46.000]  Да, равно, равно, конечно.
[02:11:50.000 --> 02:11:51.000]  То,
[02:11:52.000 --> 02:11:53.000]  так сказать, понятно.
[02:11:55.000 --> 02:11:56.000]  Понятно, да?
[02:11:58.000 --> 02:11:59.000]  То есть в тот момент, как только мы найдем
[02:12:00.000 --> 02:12:01.000]  действительно какой-то shift, который равен
[02:12:02.000 --> 02:12:03.000]  f умножить на k,
[02:12:03.000 --> 02:12:04.000]  f умножить на k,
[02:12:05.000 --> 02:12:06.000]  то соответственно мы победили.
[02:12:07.000 --> 02:12:08.000]  Можно вот так написать, можно
[02:12:09.000 --> 02:12:10.000]  так и пишем.
[02:12:11.000 --> 02:12:12.000]  Потому что shift от строки p плюс q
[02:12:13.000 --> 02:12:14.000]  равен в точности p, как не знаем.
[02:12:21.000 --> 02:12:22.000]  Так вот.
[02:12:23.000 --> 02:12:24.000]  Итак, а теперь внимание.
[02:12:25.000 --> 02:12:26.000]  На что же нам надо заменить pq?
[02:12:33.000 --> 02:12:34.000]  Вот давайте просто даже
[02:12:35.000 --> 02:12:36.000]  картиночку теперь.
[02:12:39.000 --> 02:12:40.000]  Вот так.
[02:12:41.000 --> 02:12:42.000]  То есть получается жила была
[02:12:43.000 --> 02:12:44.000]  строка s.
[02:12:45.000 --> 02:12:46.000]  Мы тут начали после позиции p
[02:12:47.000 --> 02:12:48.000]  шуровать.
[02:12:49.000 --> 02:12:50.000]  И неожиданно обнаружили, что
[02:12:51.000 --> 02:12:52.000]  q пробежала, но
[02:12:53.000 --> 02:12:54.000]  k копии не произошло.
[02:12:55.000 --> 02:12:56.000]  И мы теперь должны вот
[02:12:57.000 --> 02:12:58.000]  о этой всей штуке,
[02:12:59.000 --> 02:13:00.000]  то есть о этой штуке каким-то образом
[02:13:01.000 --> 02:13:02.000]  взять, так сказать,
[02:13:03.000 --> 02:13:04.000]  вот этого.
[02:13:05.000 --> 02:13:06.000]  То есть перейти к следующему
[02:13:07.000 --> 02:13:08.000]  прештриху.
[02:13:09.000 --> 02:13:10.000]  Ну, совсем идеального вот такого
[02:13:11.000 --> 02:13:12.000]  прештриха мы, конечно, не знаем.
[02:13:13.000 --> 02:13:14.000]  Не можем так, мы откуда мы его знаем.
[02:13:15.000 --> 02:13:16.000]  Мы же претикс функцию не хранили
[02:13:17.000 --> 02:13:18.000]  в явном виде, если бы хранили, то нашли.
[02:13:19.000 --> 02:13:20.000]  Но мы ее не знаем.
[02:13:21.000 --> 02:13:22.000]  Ну, что мы тогда в этом случае знаем?
[02:13:33.000 --> 02:13:34.000]  Я утверждаю, что
[02:13:35.000 --> 02:13:36.000]  можно на доске найти, что мы знаем.
[02:14:03.000 --> 02:14:04.000]  Ну,
[02:14:33.000 --> 02:14:34.000]  давайте так.
[02:14:35.000 --> 02:14:36.000]  Что у уже рассматриванного на
[02:14:37.000 --> 02:14:38.000]  чего у этого рассматриванного
[02:14:39.000 --> 02:14:40.000]  нами префекса строке s точно
[02:14:41.000 --> 02:14:42.000]  нет?
[02:14:45.000 --> 02:14:46.000]  Префекса строке s точно нет.
[02:14:47.000 --> 02:14:48.000]  Совершенно верно.
[02:14:50.000 --> 02:14:51.000]  А что это значит?
[02:14:52.000 --> 02:14:53.000]  Ну,
[02:14:54.000 --> 02:14:55.000]  ну,
[02:14:56.000 --> 02:14:57.000]  ну,
[02:14:58.000 --> 02:14:59.000]  ну,
[02:15:00.000 --> 02:15:01.000]  ну,
[02:15:02.000 --> 02:15:03.000]  а что это значит?
[02:15:04.000 --> 02:15:05.000]  5
[02:15:06.000 --> 02:15:07.000]  6
[02:15:08.000 --> 02:15:09.000]  7
[02:15:10.000 --> 02:15:11.000]  8
[02:15:12.000 --> 02:15:13.000]  Да, совершенно верно.
[02:15:14.000 --> 02:15:15.000]  То есть это означает, что раз у
[02:15:16.000 --> 02:15:17.000]  этой всей строке нет, то вот у
[02:15:18.000 --> 02:15:19.000]  этой строке, которая является префексом
[02:15:20.000 --> 02:15:21.000]  этой строке, да, префексного периода точно
[02:15:22.000 --> 02:15:23.000]  нет.
[02:15:24.000 --> 02:15:25.000]  То есть еще более точно нет.
[02:15:26.000 --> 02:15:27.000]  Ну, раз его нет,
[02:15:28.000 --> 02:15:30.000]  тогда вот LEMO1 нам гарантирует
[02:15:31.000 --> 02:15:33.000]  что шифт от этой строчки,
[02:15:36.000 --> 02:15:37.000]  то есть это называется вот у этого
[02:15:38.000 --> 02:15:39.000]  всего, шифт
[02:15:41.000 --> 02:15:42.000]  больше строго, чем
[02:15:43.000 --> 02:15:44.000]  у поделить на х.
[02:15:55.000 --> 02:15:57.000]  Ну вот, поэтому мы пишем теперь нашу
[02:15:58.000 --> 02:15:59.000]  уже полюбившуюся нам в прошлый раз
[02:15:59.000 --> 02:16:00.000]  строчку
[02:16:01.000 --> 02:16:02.000]  f плюс максимум из
[02:16:03.000 --> 02:16:04.000]  единицы и куба
[02:16:05.000 --> 02:16:06.000]  делить на k
[02:16:07.000 --> 02:16:08.000]  вверх
[02:16:10.000 --> 02:16:11.000]  и ноль.
[02:16:17.000 --> 02:16:18.000]  О!
[02:16:30.000 --> 02:16:32.000]  И в общем-то, как мы уже по прошлому
[02:16:33.000 --> 02:16:34.000]  разу поняли,
[02:16:35.000 --> 02:16:36.000]  мы на самом деле теперь этот
[02:16:37.000 --> 02:16:38.000]  первый префексный период,
[02:16:39.000 --> 02:16:40.000]  то есть это вот,
[02:16:42.000 --> 02:16:43.000]  то есть на самом деле этот минимальный
[02:16:44.000 --> 02:16:45.000]  префексный период найдем с вами
[02:16:46.000 --> 02:16:47.000]  теперь за какое время?
[02:16:50.000 --> 02:16:51.000]  Ну, либо он есть, и мы найдем, либо
[02:16:52.000 --> 02:16:53.000]  он есть, и найдем мы его за время
[02:16:54.000 --> 02:16:55.000]  этого периода умножить на k,
[02:16:56.000 --> 02:16:57.000]  либо
[02:16:58.000 --> 02:16:59.000]  либо
[02:17:00.000 --> 02:17:01.000]  ну либо мы так до конца строки
[02:17:02.000 --> 02:17:03.000]  и дойдем, и его не найдем.
[02:17:04.000 --> 02:17:06.000]  То есть, в общем-то, как заказываем.
[02:17:07.000 --> 02:17:08.000]  Почему это будет работать именно за
[02:17:09.000 --> 02:17:10.000]  то есть это будет
[02:17:11.000 --> 02:17:12.000]  за сколько это будет работать?
[02:17:13.000 --> 02:17:14.000]  Ну, суммально, это будет работать
[02:17:15.000 --> 02:17:16.000]  за от
[02:17:17.000 --> 02:17:18.000]  рассмотренного нами части строки,
[02:17:19.000 --> 02:17:20.000]  ну просто потому, что
[02:17:21.000 --> 02:17:22.000]  каждый раз, когда мы как бы рассмотрели
[02:17:23.000 --> 02:17:24.000]  строку k вот так с нуля,
[02:17:25.000 --> 02:17:26.000]  мы как бы дальше сдвинулись на k
[02:17:27.000 --> 02:17:28.000]  логично, да?
[02:17:33.000 --> 02:17:34.000]  Дальше, действительно, сдвигаемся
[02:17:35.000 --> 02:17:36.000]  на, как бы, k,
[02:17:37.000 --> 02:17:38.000]  k поделить на k.
[02:17:44.000 --> 02:17:45.000]  То есть, ну, мы, кажется, в прошлый раз уже
[02:17:46.000 --> 02:17:47.000]  как минимум в прошлый раз уже обсуждали,
[02:17:48.000 --> 02:17:49.000]  действительно, почему из этого следует,
[02:17:50.000 --> 02:17:51.000]  что это линия, да?
[02:17:54.000 --> 02:17:55.000]  Ну, например, по тому, что, как бы,
[02:17:55.000 --> 02:17:56.000]  вот эта p-шка сколько-то раз
[02:17:57.000 --> 02:17:58.000]  сдвигается на суммарную какую-то длину,
[02:17:59.000 --> 02:18:00.000]  а всех остальных действий не более,
[02:18:01.000 --> 02:18:02.000]  чем суммарную эту длину, умножить так.
[02:18:03.000 --> 02:18:04.000]  Вот.
[02:18:05.000 --> 02:18:06.000]  Ну, таким образом, кажется,
[02:18:07.000 --> 02:18:09.000]  вот задачу изи мы, в общем-то, и решили.
[02:18:10.000 --> 02:18:12.000]  Затребовала нам
[02:18:13.000 --> 02:18:14.000]  асимпотик.
[02:18:15.000 --> 02:18:16.000]  Так, есть ли тут какие-то вопросы?
[02:18:18.000 --> 02:18:19.000]  Да нет, наверно.
[02:18:20.000 --> 02:18:21.000]  Нету?
[02:18:22.000 --> 02:18:23.000]  То есть, мы как будто бы, ну вот, мы
[02:18:23.000 --> 02:18:24.000]  такой же алгоритм применяли,
[02:18:25.000 --> 02:18:26.000]  когда мы искали в строке там t,
[02:18:27.000 --> 02:18:28.000]  строку беспроекционного периода.
[02:18:29.000 --> 02:18:30.000]  А мы сейчас, как бы, в строке s,
[02:18:31.000 --> 02:18:32.000]  ищем строку s, и на данный момент она
[02:18:33.000 --> 02:18:34.000]  беспроекционного периода,
[02:18:35.000 --> 02:18:36.000]  поэтому мы тот же самый.
[02:18:37.000 --> 02:18:38.000]  Ну да, мы идем, пока в ней не нашли
[02:18:39.000 --> 02:18:40.000]  префекционный период, уж как только
[02:18:41.000 --> 02:18:42.000]  нашли, мы остановимся.
[02:18:43.000 --> 02:18:44.000]  Да, абсолютно верно.
[02:18:45.000 --> 02:18:46.000]  Идея абсолютно та же самая.
[02:18:47.000 --> 02:18:48.000]  Ну и, наконец, финал апофеоз.
[02:18:49.000 --> 02:18:50.000]  Хотя, может быть, это уже финал
[02:18:51.000 --> 02:18:52.000]  финала, на самом деле.
[02:18:53.000 --> 02:18:54.000]  Вот я даже предложу подумать.
[02:18:55.000 --> 02:18:56.000]  Как теперь, вот тоже глядя сюда
[02:18:57.000 --> 02:18:58.000]  и глядя туда, как теперь допилить
[02:18:59.000 --> 02:19:00.000]  этот алгоритм так, чтобы найти не
[02:19:01.000 --> 02:19:02.000]  только это, но еще и второй период,
[02:19:03.000 --> 02:19:04.000]  если он есть, конечно.
[02:19:07.000 --> 02:19:09.000]  Ну, судя по всему, момент, когда
[02:19:10.000 --> 02:19:11.000]  мы находим первый период, мы его
[02:19:12.000 --> 02:19:13.000]  сохраняем, и дальше делаем
[02:19:14.000 --> 02:19:15.000]  алгоритм, ну, как во втором случае,
[02:19:16.000 --> 02:19:17.000]  когда у ВВ есть единственный период.
[02:19:18.000 --> 02:19:19.000]  А что значит?
[02:19:20.000 --> 02:19:21.000]  А точнее, есть маленькие детали.
[02:19:21.000 --> 02:19:22.000]  Есть маленькие детали.
[02:19:25.000 --> 02:19:26.000]  Ну да, совершенно верно.
[02:19:27.000 --> 02:19:28.000]  В какой-то момент, вот мы, да,
[02:19:29.000 --> 02:19:30.000]  начинаем мы ровно с этого.
[02:19:31.000 --> 02:19:32.000]  Мы это идем, идем, идем, идем,
[02:19:33.000 --> 02:19:34.000]  и, наконец, натыкаемся на первый
[02:19:35.000 --> 02:19:36.000]  префексный период.
[02:19:37.000 --> 02:19:38.000]  Давайте я их даже нарисую.
[02:19:38.000 --> 02:19:39.000]  Вот, допустим, вот у нас ведь длинная,
[02:19:40.000 --> 02:19:41.000]  длинная, длинная строка С, и вот,
[02:19:42.000 --> 02:19:43.000]  наконец, это произошло, мы этот
[02:19:44.000 --> 02:19:45.000]  первый период нашли.
[02:19:46.000 --> 02:19:47.000]  Поехали?
[02:19:48.000 --> 02:19:49.000]  Ой, даже поменьше, наверное.
[02:19:50.000 --> 02:19:51.000]  Потому что, если мы ищем следующий,
[02:19:52.000 --> 02:19:53.000]  следующий, там, помните, в К1, там,
[02:19:54.000 --> 02:19:55.000]  во сколько там?
[02:19:56.000 --> 02:19:57.000]  В кучу раз больше.
[02:19:58.000 --> 02:19:59.000]  Вот это вот П1.
[02:20:00.000 --> 02:20:01.000]  Вот это вот П2.
[02:20:02.000 --> 02:20:03.000]  Вот это вот П3.
[02:20:04.000 --> 02:20:05.000]  Вот это вот П4.
[02:20:06.000 --> 02:20:07.000]  Вот это вот П5.
[02:20:09.000 --> 02:20:10.000]  Вот, допустим, мы дошли,
[02:20:11.000 --> 02:20:12.000]  и вот прям до этой позиции и дошли.
[02:20:15.000 --> 02:20:16.000]  Спрашивается, что делать дальше?
[02:20:21.000 --> 02:20:22.000]  Дальше, ну, во-первых, дальше мы сделаем вот что.
[02:20:23.000 --> 02:20:24.000]  Этот момент мы закончили,
[02:20:25.000 --> 02:20:26.000]  но Q насчитывать не прекратили,
[02:20:27.000 --> 02:20:28.000]  потому что в этот момент мы вот,
[02:20:29.000 --> 02:20:30.000]  у нас P равно P1, и вот это вот Q.
[02:20:33.000 --> 02:20:34.000]  Да, мы продолжаем это насчитывать,
[02:20:35.000 --> 02:20:36.000]  насчитывать там,
[02:20:36.000 --> 02:20:37.000]  и вот, где-то, наконец, остановились.
[02:20:38.000 --> 02:20:42.000]  Это мы насчитаем bridge от, ну, от P1.
[02:20:43.000 --> 02:20:44.000]  Да, совершенно верно.
[02:20:45.000 --> 02:20:46.000]  Мы насчитали вот это вот,
[02:20:47.000 --> 02:20:48.000]  то есть это вот, да, П плюс Q,
[02:20:49.000 --> 02:20:50.000]  равно, действительно, ridge.
[02:20:51.000 --> 02:20:54.000]  Ridge с индексом модулес от П.
[02:20:55.000 --> 02:20:56.000]  Абсолютно верно.
[02:20:59.000 --> 02:21:00.000]  Так вот.
[02:21:00.000 --> 02:21:01.000]  Ну вот.
[02:21:04.000 --> 02:21:05.000]  Ну вот.
[02:21:06.000 --> 02:21:07.000]  Что хочется теперь делать?
[02:21:10.000 --> 02:21:11.000]  Теперь, как-нибудь, что можно сказать
[02:21:12.000 --> 02:21:13.000]  про второй префиксный период,
[02:21:14.000 --> 02:21:15.000]  если такой существует?
[02:21:27.000 --> 02:21:28.000]  Так, ну, потому что, смотрите,
[02:21:28.000 --> 02:21:29.000]  я вот так скажу.
[02:21:30.000 --> 02:21:31.000]  Идея теперь заключается такая.
[02:21:32.000 --> 02:21:33.000]  А давайте теперь просто продолжим
[02:21:34.000 --> 02:21:35.000]  вот этот алгоритм, условно,
[02:21:36.000 --> 02:21:37.000]  так и будем его читать до тех пор,
[02:21:38.000 --> 02:21:39.000]  пока не наткнемся еще на какую-нибудь E
[02:21:40.000 --> 02:21:41.000]  с чем-нибудь.
[02:21:42.000 --> 02:21:43.000]  Вот, допустим, мы после, после внимания этого,
[02:21:44.000 --> 02:21:45.000]  строго после,
[02:21:46.000 --> 02:21:47.000]  будем идти, идти, идти, идти, идти, идти,
[02:21:48.000 --> 02:21:49.000]  и наткнемся, наконец,
[02:21:50.000 --> 02:21:51.000]  на позицию такую E,
[02:21:52.000 --> 02:21:53.000]  что, как мы неожиданно выясним,
[02:21:54.000 --> 02:21:55.000]  shift с индексом S от этой E
[02:21:55.000 --> 02:21:56.000]  и, допустим, равен
[02:21:57.000 --> 02:21:58.000]  и поделить на K.
[02:22:01.000 --> 02:22:02.000]  Вот я утверждаю, что, как мы бы
[02:22:03.000 --> 02:22:04.000]  во второй раз такое встретим,
[02:22:05.000 --> 02:22:06.000]  в чем строго после иринча,
[02:22:07.000 --> 02:22:09.000]  я утверждаю, что вот этот E
[02:22:10.000 --> 02:22:11.000]  и будет
[02:22:12.000 --> 02:22:13.000]  наша P2.
[02:22:18.000 --> 02:22:20.000]  Я почему-то такое утверждаю.
[02:22:22.000 --> 02:22:23.000]  Да.
[02:22:23.000 --> 02:22:24.000]  Оставим пока, да,
[02:22:25.000 --> 02:22:26.000]  тут возникнет второй вопрос,
[02:22:27.000 --> 02:22:28.000]  а как это делать,
[02:22:29.000 --> 02:22:30.000]  учитывая, что конкретно этот пересвод
[02:22:31.000 --> 02:22:32.000]  уже не будет работать,
[02:22:33.000 --> 02:22:34.000]  потому что в рассмотренном префиксе
[02:22:35.000 --> 02:22:36.000]  уже вполне может быть
[02:22:37.000 --> 02:22:38.000]  и префиксный период P1, да?
[02:22:40.000 --> 02:22:41.000]  Вот, пока давайте просто
[02:22:42.000 --> 02:22:43.000]  предположим, что мы будем
[02:22:44.000 --> 02:22:45.000]  продолжим каким-то мистическим образом
[02:22:46.000 --> 02:22:47.000]  эти шифты насчитывать
[02:22:48.000 --> 02:22:49.000]  и неожиданно выяснится, что
[02:22:50.000 --> 02:22:51.000]  вот в какой-то момент
[02:22:51.000 --> 02:22:52.000]  после иринча что-то нашли.
[02:22:55.000 --> 02:22:56.000]  Ну, может, это что-то не является
[02:22:57.000 --> 02:22:58.000]  префиксным периодом?
[02:22:59.000 --> 02:23:00.000]  Ну, давайте так.
[02:23:01.000 --> 02:23:02.000]  Это кандидат
[02:23:03.000 --> 02:23:04.000]  во второй префиксный период,
[02:23:05.000 --> 02:23:06.000]  правда?
[02:23:07.000 --> 02:23:08.000]  Ну, в том плане, что мы нашли
[02:23:09.000 --> 02:23:10.000]  еще один префикс, который делится
[02:23:11.000 --> 02:23:12.000]  на K одинаковых строчек.
[02:23:13.000 --> 02:23:14.000]  Может так случиться, что это
[02:23:15.000 --> 02:23:16.000]  не префиксный период?
[02:23:17.000 --> 02:23:18.000]  Как такое может случиться?
[02:23:19.000 --> 02:23:20.000]  Ну, например,
[02:23:21.000 --> 02:23:22.000]  строчка не базовая,
[02:23:23.000 --> 02:23:25.000]  или эта строчка не базовая,
[02:23:26.000 --> 02:23:27.000]  вот эта вот, которая длиннее
[02:23:28.000 --> 02:23:29.000]  делить на K, да?
[02:23:30.000 --> 02:23:31.000]  Или на самом деле
[02:23:32.000 --> 02:23:33.000]  она базовая, но просто
[02:23:34.000 --> 02:23:35.000]  второй префиксный период был
[02:23:36.000 --> 02:23:37.000]  где-то раньше.
[02:23:40.000 --> 02:23:41.000]  Ну, начнем вот с чего.
[02:23:42.000 --> 02:23:43.000]  Давайте для начала докажем,
[02:23:44.000 --> 02:23:45.000]  что строчка...
[02:23:46.000 --> 02:23:47.000]  Давайте для начала докажем, что
[02:23:48.000 --> 02:23:49.000]  нигде вот тут раньше мы это
[02:23:49.000 --> 02:23:50.000]  делить на K
[02:23:51.000 --> 02:23:52.000]  встретить не могли.
[02:23:53.000 --> 02:23:54.000]  Ну, точнее так, не может
[02:23:55.000 --> 02:23:56.000]  быть меньше, то есть P2 не может
[02:23:57.000 --> 02:23:58.000]  быть меньше, чем мы поделить
[02:23:59.000 --> 02:24:00.000]  на K.
[02:24:01.000 --> 02:24:02.000]  Еще раз?
[02:24:03.000 --> 02:24:04.000]  В смысле, что...
[02:24:05.000 --> 02:24:06.000]  Ну, мы хотим доказать...
[02:24:07.000 --> 02:24:08.000]  Мы попытаемся доказать,
[02:24:09.000 --> 02:24:10.000]  что это есть второй
[02:24:11.000 --> 02:24:12.000]  префиксный период, да?
[02:24:13.000 --> 02:24:14.000]  Если вот таковое в какой-то
[02:24:15.000 --> 02:24:16.000]  момент произошло,
[02:24:17.000 --> 02:24:18.000]  даже, может быть, даже в
[02:24:19.000 --> 02:24:20.000]  какой-то момент произошло
[02:24:21.000 --> 02:24:22.000]  вот такое.
[02:24:23.000 --> 02:24:24.000]  Ну, да.
[02:24:25.000 --> 02:24:26.000]  Ну, понятно, что для P2
[02:24:27.000 --> 02:24:28.000]  такое произойдет,
[02:24:29.000 --> 02:24:30.000]  потому что...
[02:24:31.000 --> 02:24:32.000]  Ну, потому что, да,
[02:24:33.000 --> 02:24:34.000]  когда мы будем рассматривать P2,
[02:24:35.000 --> 02:24:36.000]  ну, давайте вот попытаемся
[02:24:37.000 --> 02:24:38.000]  рассмотреть P2.
[02:24:39.000 --> 02:24:40.000]  Ну, где оно?
[02:24:41.000 --> 02:24:42.000]  Ну, во-первых, начнем с того,
[02:24:43.000 --> 02:24:44.000]  что P2...
[02:24:45.000 --> 02:24:46.000]  Вот P2, может, тут два способа.
[02:24:47.000 --> 02:24:48.000]  Может быть, это P2,
[02:24:49.000 --> 02:24:50.000]  либо после P2.
[02:24:51.000 --> 02:24:52.000]  Может ли P2
[02:24:53.000 --> 02:24:54.000]  закончится до ричат P1?
[02:24:56.000 --> 02:24:57.000]  Нет.
[02:24:58.000 --> 02:24:59.000]  Почему?
[02:25:03.000 --> 02:25:04.000]  Потому что будет не базово просто.
[02:25:05.000 --> 02:25:06.000]  А сейчас...
[02:25:07.000 --> 02:25:08.000]  Ну, если...
[02:25:09.000 --> 02:25:10.000]  Если там близает в
[02:25:11.000 --> 02:25:12.000]  ричат P1 и P2, то не может
[02:25:13.000 --> 02:25:14.000]  это быть.
[02:25:15.000 --> 02:25:16.000]  Да, а почему не может?
[02:25:17.000 --> 02:25:18.000]  Ну...
[02:25:21.000 --> 02:25:22.000]  Может, P2 просто будет не базово,
[02:25:23.000 --> 02:25:24.000]  но это логично.
[02:25:25.000 --> 02:25:26.000]  Почему?
[02:25:27.000 --> 02:25:28.000]  Ну, рассуждение тогда такое.
[02:25:29.000 --> 02:25:30.000]  Предположим, что P2 вместе с K-периодами
[02:25:31.000 --> 02:25:32.000]  влезла в ричат P1.
[02:25:33.000 --> 02:25:34.000]  Да, случайно.
[02:25:35.000 --> 02:25:36.000]  Ну, по размеру никаких проблем,
[02:25:37.000 --> 02:25:38.000]  потому что ограничений на ричат P1 у нас нет,
[02:25:39.000 --> 02:25:40.000]  он может быть очень большой.
[02:25:41.000 --> 02:25:42.000]  Но тут вот какая проблема.
[02:25:43.000 --> 02:25:44.000]  Дело в том, что если рассмотреть строчку
[02:25:44.000 --> 02:25:45.000]  и получается эта строка
[02:25:46.000 --> 02:25:47.000]  и P1 периодично,
[02:25:48.000 --> 02:25:49.000]  и P2 периодично,
[02:25:50.000 --> 02:25:51.000]  и в нее влезает как
[02:25:52.000 --> 02:25:53.000]  4... ну, в смысле, как копии P2,
[02:25:54.000 --> 02:25:55.000]  так и K, и даже более копии P1.
[02:25:57.000 --> 02:25:58.000]  Отсюда легко вывести
[02:25:59.000 --> 02:26:00.000]  полемия периодичности,
[02:26:01.000 --> 02:26:02.000]  что получается эта строка конкретно,
[02:26:03.000 --> 02:26:04.000]  она еще и GCD от P2
[02:26:05.000 --> 02:26:06.000]  P2 и P1 периодично.
[02:26:07.000 --> 02:26:08.000]  Вот.
[02:26:09.000 --> 02:26:10.000]  И тогда отсюда будет следовать, что
[02:26:11.000 --> 02:26:12.000]  ну, может так оказаться, что этот GCD
[02:26:12.000 --> 02:26:13.000]  равен P1,
[02:26:14.000 --> 02:26:15.000]  поэтому базовость строки P1
[02:26:16.000 --> 02:26:18.000]  пока как бы противоречия не вызывает.
[02:26:19.000 --> 02:26:21.000]  Но базовость P2 нарушается,
[02:26:22.000 --> 02:26:23.000]  потому что у нее оказывается
[02:26:24.000 --> 02:26:25.000]  есть GCD от P2 и P1,
[02:26:26.000 --> 02:26:27.000]  которые меньше, чем P2,
[02:26:28.000 --> 02:26:29.000]  и оказывается, что эта вся строка,
[02:26:30.000 --> 02:26:31.000]  эта GCD периодично, значит P2,
[02:26:32.000 --> 02:26:33.000]  не базовая противоречия.
[02:26:34.000 --> 02:26:35.000]  Понятно?
[02:26:36.000 --> 02:26:37.000]  Понята логика?
[02:26:38.000 --> 02:26:39.000]  Более того, я вам даже сразу скажу,
[02:26:40.000 --> 02:26:41.000]  что по большому счету
[02:26:42.000 --> 02:26:43.000]  я вам сразу себе даже сказать,
[02:26:44.000 --> 02:26:45.000]  то есть из этой логики
[02:26:46.000 --> 02:26:47.000]  автоматически следует, что P2
[02:26:48.000 --> 02:26:49.000]  она отсюда же следует,
[02:26:50.000 --> 02:26:51.000]  что она, что на самом деле
[02:26:52.000 --> 02:26:53.000]  P2 обязана быть
[02:26:54.000 --> 02:26:56.000]  просто даже строго больше,
[02:26:57.000 --> 02:26:58.000]  чем вот этот вот GCD
[02:26:59.000 --> 02:27:00.000]  от P1 пополам.
[02:27:01.000 --> 02:27:02.000]  Потому что если тут умещается
[02:27:03.000 --> 02:27:04.000]  в GCD хотя бы две копии P2,
[02:27:05.000 --> 02:27:06.000]  то применяется абсолютно то же самое
[02:27:07.000 --> 02:27:08.000]  рассуждение.
[02:27:09.000 --> 02:27:10.000]  Или даже GCD от P1
[02:27:10.000 --> 02:27:11.000]  или GCD от P2
[02:27:16.000 --> 02:27:17.000]  Потому что тогда облезает
[02:27:18.000 --> 02:27:19.000]  строка от P1 P2, у которой
[02:27:20.000 --> 02:27:21.000]  два разных периода.
[02:27:28.000 --> 02:27:29.000]  Рич P1 пополам,
[02:27:30.000 --> 02:27:31.000]  ну без пополам просто.
[02:27:32.000 --> 02:27:33.000]  Да, просто Рич от P1
[02:27:34.000 --> 02:27:35.000]  минус P1, да.
[02:27:37.000 --> 02:27:38.000]  Да, совершенно верно.
[02:27:39.000 --> 02:27:40.000]  Тут я думаю, что
[02:27:41.000 --> 02:27:42.000]  какое-то такое словосочетание
[02:27:43.000 --> 02:27:44.000]  тут тоже в статье есть.
[02:27:47.000 --> 02:27:48.000]  Да, на самом деле
[02:27:49.000 --> 02:27:50.000]  можно совсем вот так даже.
[02:27:55.000 --> 02:27:56.000]  Вот.
[02:27:57.000 --> 02:27:58.000]  Ну это что означает?
[02:27:59.000 --> 02:28:00.000]  Это в принципе означает, что
[02:28:01.000 --> 02:28:02.000]  это вот P2, да,
[02:28:03.000 --> 02:28:04.000]  то есть она уже вторая копия
[02:28:05.000 --> 02:28:06.000]  выходит за пределы.
[02:28:06.000 --> 02:28:07.000]  Но если она закончилась
[02:28:08.000 --> 02:28:09.000]  раньше, чем И,
[02:28:13.000 --> 02:28:14.000]  ну если она закончилась тогда
[02:28:15.000 --> 02:28:16.000]  позже, чем вот этот Рич,
[02:28:17.000 --> 02:28:18.000]  но раньше, чем И,
[02:28:19.000 --> 02:28:20.000]  то тогда у нас позже, чем Рич,
[02:28:21.000 --> 02:28:22.000]  но раньше, чем И
[02:28:23.000 --> 02:28:24.000]  возникла бы вот тут ситуация,
[02:28:25.000 --> 02:28:26.000]  когда здесь шифт должен быть
[02:28:27.000 --> 02:28:28.000]  как минимум вот это вот поделить
[02:28:29.000 --> 02:28:30.000]  на K, а то и больше, если что.
[02:28:31.000 --> 02:28:32.000]  Ну мы тут себе
[02:28:33.000 --> 02:28:34.000]  ослабили немножко условия.
[02:28:34.000 --> 02:28:35.000]  Поэтому получается, что
[02:28:36.000 --> 02:28:37.000]  если мы впервые встретили
[02:28:37.000 --> 02:28:38.000]  такой шифт, что шифт
[02:28:38.000 --> 02:28:39.000]  этой больше ли правильной
[02:28:40.000 --> 02:28:41.000]  поделить на K, то раньше
[02:28:42.000 --> 02:28:43.000]  никаких вот этих
[02:28:44.000 --> 02:28:45.000]  вторых префиксных периодов не было.
[02:28:47.000 --> 02:28:48.000]  Вот.
[02:28:49.000 --> 02:28:50.000]  Ну возникает тогда естественный вопрос.
[02:28:51.000 --> 02:28:52.000]  То есть тогда получается, да,
[02:28:53.000 --> 02:28:54.000]  что скажем так, у нас есть
[02:28:55.000 --> 02:28:56.000]  получается вот такое
[02:28:57.000 --> 02:28:58.000]  потенциальное P2,
[02:29:01.000 --> 02:29:02.000]  которое вот почему-то хотим сказать,
[02:29:02.000 --> 02:29:03.000]  что это И поделить на K.
[02:29:04.000 --> 02:29:05.000]  Теперь возникает вопрос.
[02:29:05.000 --> 02:29:06.000]  Хорошо.
[02:29:07.000 --> 02:29:08.000]  То есть P2,
[02:29:08.000 --> 02:29:09.000]  то есть реальный P2
[02:29:09.000 --> 02:29:10.000]  заведомо больше либо равен.
[02:29:10.000 --> 02:29:11.000]  Теперь возникает вопрос.
[02:29:11.000 --> 02:29:12.000]  Да, почему это
[02:29:12.000 --> 02:29:13.000]  не P2 еще может быть?
[02:29:14.000 --> 02:29:15.000]  Может быть не базовый.
[02:29:16.000 --> 02:29:17.000]  Да, действительно.
[02:29:17.000 --> 02:29:18.000]  Но даже шифт меньше.
[02:29:19.000 --> 02:29:20.000]  Ну да.
[02:29:22.000 --> 02:29:23.000]  Ну да.
[02:29:23.000 --> 02:29:24.000]  Действительно.
[02:29:25.000 --> 02:29:26.000]  Ну хорошо, да.
[02:29:26.000 --> 02:29:27.000]  Может ли так случиться,
[02:29:27.000 --> 02:29:28.000]  что эта строка не базовая?
[02:29:28.000 --> 02:29:29.000]  Ну чисто теоретически,
[02:29:29.000 --> 02:29:30.000]  почему бы и нет.
[02:29:32.000 --> 02:29:33.000]  Ну и теперь возникает вопрос.
[02:29:34.000 --> 02:29:35.000]  Почему не может быть так,
[02:29:35.000 --> 02:29:36.000]  что эта строка
[02:29:36.000 --> 02:29:37.000]  не базовая?
[02:29:44.000 --> 02:29:45.000]  Почему не может быть так,
[02:29:45.000 --> 02:29:46.000]  что P2 не базовая?
[02:29:47.000 --> 02:29:48.000]  Потому что тогда этот ее период,
[02:29:49.000 --> 02:29:50.000]  который на которой отделят,
[02:29:50.000 --> 02:29:51.000]  это им есть...
[02:29:51.000 --> 02:29:52.000]  Ну совершенно верно.
[02:29:52.000 --> 02:29:53.000]  Тогда это в принципе означает,
[02:29:53.000 --> 02:29:54.000]  что у нас какая-то строка...
[02:29:56.000 --> 02:29:57.000]  Нет, погодите.
[02:29:57.000 --> 02:29:58.000]  Ну я проявить саму в себе
[02:29:58.000 --> 02:29:59.000]  ничего не...
[02:29:59.000 --> 02:30:00.000]  Да, у нее есть меньшая строка.
[02:30:00.000 --> 02:30:01.000]  И что стало?
[02:30:02.000 --> 02:30:03.000]  Эта меньшая строка
[02:30:03.000 --> 02:30:04.000]  может быть равна,
[02:30:04.000 --> 02:30:05.000]  например, P1.
[02:30:07.000 --> 02:30:08.000]  Тогда у нас P.
[02:30:09.000 --> 02:30:11.000]  Ну P2 – это есть шифт.
[02:30:12.000 --> 02:30:13.000]  Ну P2 – это есть шифт.
[02:30:13.000 --> 02:30:14.000]  А шифт меньше...
[02:30:14.000 --> 02:30:15.000]  Мы пошли, что шифт меньше,
[02:30:15.000 --> 02:30:16.000]  чем P2.
[02:30:16.000 --> 02:30:17.000]  Так.
[02:30:17.000 --> 02:30:18.000]  Ну...
[02:30:18.000 --> 02:30:19.000]  Так.
[02:30:19.000 --> 02:30:20.000]  Ну да.
[02:30:20.000 --> 02:30:21.000]  Так.
[02:30:21.000 --> 02:30:22.000]  Ну сейчас...
[02:30:22.000 --> 02:30:23.000]  Ну вот.
[02:30:23.000 --> 02:30:24.000]  Если P2 – это шифт,
[02:30:24.000 --> 02:30:25.000]  то у строки не может быть
[02:30:25.000 --> 02:30:26.000]  меньшего периода.
[02:30:27.000 --> 02:30:28.000]  А мы получили,
[02:30:28.000 --> 02:30:29.000]  что есть меньше.
[02:30:29.000 --> 02:30:30.000]  Сейчас, а кто сказал,
[02:30:30.000 --> 02:30:31.000]  что P2 – это шифт?
[02:30:31.000 --> 02:30:32.000]  Ну, потому что
[02:30:32.000 --> 02:30:33.000]  у нас так...
[02:30:33.000 --> 02:30:35.000]  Ну, у нас так разговаривают,
[02:30:35.000 --> 02:30:37.000]  что у нас всегда P
[02:30:37.000 --> 02:30:39.000]  будет шифтом по плюску.
[02:30:40.000 --> 02:30:41.000]  А, ну вообще говоря, да.
[02:30:41.000 --> 02:30:42.000]  Да.
[02:30:42.000 --> 02:30:43.000]  Ладно.
[02:30:43.000 --> 02:30:44.000]  Прямо и точно мы знаем,
[02:30:44.000 --> 02:30:45.000]  что это заведомо шифт.
[02:30:50.000 --> 02:30:51.000]  Ну шифт – это что?
[02:30:51.000 --> 02:30:52.000]  А, ну да, действительно.
[02:30:52.000 --> 02:30:53.000]  Если окажется,
[02:30:53.000 --> 02:30:54.000]  что P2 – не базовая,
[02:30:54.000 --> 02:30:55.000]  то есть тут действительно
[02:30:55.000 --> 02:30:56.000]  есть какие-то
[02:30:56.000 --> 02:30:57.000]  мистические подкопии.
[02:30:59.000 --> 02:31:00.000]  Это случайно.
[02:31:00.000 --> 02:31:01.000]  Ну, если если 4,
[02:31:01.000 --> 02:31:02.000]  то это 5,
[02:31:02.000 --> 02:31:03.000]  6.
[02:31:07.000 --> 02:31:08.000]  Да.
[02:31:08.000 --> 02:31:09.000]  То действительно окажется...
[02:31:10.000 --> 02:31:11.000]  Да.
[02:31:11.000 --> 02:31:12.000]  То есть если тут окажется
[02:31:12.000 --> 02:31:13.000]  какая-то подкопия,
[02:31:13.000 --> 02:31:14.000]  то тогда окажется,
[02:31:14.000 --> 02:31:15.000]  что шифт А3 будет не таким,
[02:31:15.000 --> 02:31:16.000]  а это вот не так,
[02:31:16.000 --> 02:31:17.000]  потому что у нас
[02:31:17.000 --> 02:31:18.000]  кое-как есть такой.
[02:31:19.000 --> 02:31:20.000]  Потому что, в общем-то,
[02:31:20.000 --> 02:31:21.000]  заметим, что он тогда
[02:31:21.000 --> 02:31:22.000]  на рассмотрение этого шифта,
[02:31:22.000 --> 02:31:23.000]  уже до этой позиции,
[02:31:23.000 --> 02:31:24.000]  и должен был бы
[02:31:24.000 --> 02:31:25.000]  ранее дотянуться,
[02:31:25.000 --> 02:31:26.000]  а он дотянулся только что.
[02:31:26.000 --> 02:31:27.000]  Да.
[02:31:28.000 --> 02:31:29.000]  Да.
[02:31:29.000 --> 02:31:30.000]  То есть таким образом
[02:31:30.000 --> 02:31:31.000]  получается,
[02:31:31.000 --> 02:31:32.000]  что все, что нам нужно,
[02:31:32.000 --> 02:31:34.000]  это искать те же самые шифты.
[02:31:34.000 --> 02:31:35.000]  Только...
[02:31:35.000 --> 02:31:36.000]  Ну вот.
[02:31:36.000 --> 02:31:37.000]  И найти второй раз,
[02:31:37.000 --> 02:31:38.000]  когда мы второй раз
[02:31:38.000 --> 02:31:39.000]  встретим позицию.
[02:31:39.000 --> 02:31:40.000]  То есть, в общем,
[02:31:40.000 --> 02:31:42.000]  встретим ее после ричи
[02:31:42.000 --> 02:31:44.000]  от P1 строго после ричи.
[02:31:45.000 --> 02:31:46.000]  И когда встретим,
[02:31:46.000 --> 02:31:47.000]  что шифты А3
[02:31:47.000 --> 02:31:48.000]  больше неправильные приискали,
[02:31:48.000 --> 02:31:49.000]  и поделить на K,
[02:31:49.000 --> 02:31:50.000]  тогда это и поделить на K
[02:31:50.000 --> 02:31:51.000]  и будет P2.
[02:31:51.000 --> 02:31:52.000]  И если мы это
[02:31:52.000 --> 02:31:53.000]  успешно сделаем,
[02:31:53.000 --> 02:31:54.000]  то мы, опять же, найдем
[02:31:54.000 --> 02:31:55.000]  эту занужную нам симпточку
[02:31:55.000 --> 02:31:57.000]  от P2 на K.
[02:31:58.000 --> 02:31:59.000]  А точно ли больше
[02:31:59.000 --> 02:32:00.000]  либо равно?
[02:32:01.000 --> 02:32:02.000]  Ну...
[02:32:02.000 --> 02:32:03.000]  Ну...
[02:32:03.000 --> 02:32:04.000]  Если так,
[02:32:04.000 --> 02:32:05.000]  то наверно,
[02:32:05.000 --> 02:32:06.000]  все-таки меньше либо равно.
[02:32:06.000 --> 02:32:07.000]  Не, меньше либо равно
[02:32:07.000 --> 02:32:08.000]  то оно всегда будет.
[02:32:08.000 --> 02:32:09.000]  Хотя...
[02:32:10.000 --> 02:32:11.000]  Нет, как раз
[02:32:11.000 --> 02:32:12.000]  не обязательно.
[02:32:12.000 --> 02:32:13.000]  Оно может быть...
[02:32:13.000 --> 02:32:14.000]  Когда строка
[02:32:14.000 --> 02:32:16.000]  не имеет каких-то циклов,
[02:32:16.000 --> 02:32:17.000]  то шифт будет равен
[02:32:17.000 --> 02:32:19.000]  ну, типа, практически...
[02:32:19.000 --> 02:32:20.000]  Ну, то есть...
[02:32:26.000 --> 02:32:27.000]  А, да.
[02:32:28.000 --> 02:32:29.000]  Пожалуй, да.
[02:32:29.000 --> 02:32:30.000]  Вообще, у нас какая-то
[02:32:30.000 --> 02:32:31.000]  тавтология получилась,
[02:32:31.000 --> 02:32:32.000]  потому что
[02:32:32.000 --> 02:32:33.000]  как бы то, что
[02:32:33.000 --> 02:32:34.000]  при пиксторке S
[02:32:34.000 --> 02:32:35.000]  он вот разбивается
[02:32:35.000 --> 02:32:36.000]  ровно на 4, да?
[02:32:36.000 --> 02:32:37.000]  То есть, что
[02:32:37.000 --> 02:32:38.000]  у него вот...
[02:32:38.000 --> 02:32:39.000]  И вот для делить на 4
[02:32:39.000 --> 02:32:40.000]  это профессиональный период
[02:32:40.000 --> 02:32:41.000]  равносильно тому, что
[02:32:41.000 --> 02:32:42.000]  шифт А3 равно
[02:32:42.000 --> 02:32:43.000]  и делить на K строго.
[02:32:43.000 --> 02:32:44.000]  Ну да.
[02:32:44.000 --> 02:32:45.000]  Ну и мы
[02:32:45.000 --> 02:32:46.000]  какую-то сейчас
[02:32:46.000 --> 02:32:47.000]  тавтологию
[02:32:47.000 --> 02:32:48.000]  два раза доказывали,
[02:32:48.000 --> 02:32:49.000]  как будто.
[02:32:49.000 --> 02:32:50.000]  Не, почему?
[02:32:50.000 --> 02:32:51.000]  Нет, то почему нет?
[02:32:51.000 --> 02:32:52.000]  Нет, ну почему?
[02:32:52.000 --> 02:32:53.000]  Первый раз мы доказывали,
[02:32:53.000 --> 02:32:54.000]  просто когда искали
[02:32:54.000 --> 02:32:55.000]  первый этот период,
[02:32:55.000 --> 02:32:56.000]  просто мы искали,
[02:32:56.000 --> 02:32:57.000]  когда мы
[02:32:57.000 --> 02:32:58.000]  первый раз столкнулись
[02:32:58.000 --> 02:32:59.000]  с тем, что у нас тут
[02:32:59.000 --> 02:33:00.000]  как будто нам
[02:33:00.000 --> 02:33:01.000]  как бы найденный префикс
[02:33:01.000 --> 02:33:02.000]  оказался
[02:33:02.000 --> 02:33:03.000]  четырьмя копиями
[02:33:03.000 --> 02:33:04.000]  чего-то,
[02:33:04.000 --> 02:33:05.000]  это первое что-то.
[02:33:05.000 --> 02:33:06.000]  Мы сейчас как бы
[02:33:06.000 --> 02:33:07.000]  про П2
[02:33:07.000 --> 02:33:08.000]  как-то в две стороны
[02:33:08.000 --> 02:33:09.000]  что-то пытались доказывать,
[02:33:09.000 --> 02:33:10.000]  но мне кажется,
[02:33:10.000 --> 02:33:11.000]  это тавтология все-таки.
[02:33:11.000 --> 02:33:12.000]  Почему тавтология?
[02:33:12.000 --> 02:33:13.000]  Ну, еще раз.
[02:33:13.000 --> 02:33:14.000]  Как бы, просто утверждение,
[02:33:14.000 --> 02:33:15.000]  что то, что
[02:33:17.000 --> 02:33:18.000]  какая-то строка
[02:33:18.000 --> 02:33:19.000]  там, П2
[02:33:19.000 --> 02:33:20.000]  префиксный период
[02:33:20.000 --> 02:33:21.000]  равносильно тому, что
[02:33:21.000 --> 02:33:22.000]  шифт С
[02:33:22.000 --> 02:33:23.000]  там, понятно,
[02:33:23.000 --> 02:33:24.000]  4П2
[02:33:24.000 --> 02:33:25.000]  равно П2
[02:33:25.000 --> 02:33:26.000]  условно.
[02:33:26.000 --> 02:33:27.000]  Ну,
[02:33:27.000 --> 02:33:28.000]  и еще, что этот
[02:33:28.000 --> 02:33:29.000]  префикс не базовый.
[02:33:29.000 --> 02:33:30.000]  Равносильно.
[02:33:30.000 --> 02:33:31.000]  Потому что, если шифт
[02:33:31.000 --> 02:33:32.000]  ровно такой,
[02:33:32.000 --> 02:33:33.000]  значит, префикс не базовый.
[02:33:33.000 --> 02:33:34.000]  Ну, что шифта
[02:33:34.000 --> 02:33:35.000]  меньше.
[02:33:35.000 --> 02:33:36.000]  Ну, вот.
[02:33:36.000 --> 02:33:37.000]  Ну, кажется,
[02:33:37.000 --> 02:33:38.000]  этого достаточно,
[02:33:38.000 --> 02:33:39.000]  чтобы утверждение
[02:33:39.000 --> 02:33:40.000]  не было.
[02:33:40.000 --> 02:33:41.000]  Ну, нет.
[02:33:41.000 --> 02:33:42.000]  Ну, там не равносильно.
[02:33:42.000 --> 02:33:43.000]  Когда второй,
[02:33:43.000 --> 02:33:44.000]  надо было еще упомянуть,
[02:33:44.000 --> 02:33:45.000]  что этот второй
[02:33:45.000 --> 02:33:46.000]  вот этот.
[02:33:46.000 --> 02:33:47.000]  Если вот,
[02:33:47.000 --> 02:33:48.000]  хотя, можно, ладно.
[02:33:48.000 --> 02:33:49.000]  Если насильно,
[02:33:49.000 --> 02:33:50.000]  в этом да и дело.
[02:33:50.000 --> 02:33:51.000]  Да, ладно, если
[02:33:51.000 --> 02:33:52.000]  так,
[02:33:52.000 --> 02:33:53.000]  да, получается равно.
[02:33:53.000 --> 02:33:54.000]  Нет, давайте подумаем.
[02:33:54.000 --> 02:33:55.000]  Тут
[02:33:55.000 --> 02:33:56.000]  как бы...
[02:33:56.000 --> 02:33:57.000]  Так, давайте тут
[02:33:57.000 --> 02:33:58.000]  аккуратно,
[02:33:58.000 --> 02:33:59.000]  в жутчестве живом.
[02:33:59.000 --> 02:34:00.000]  У авторов почему-то
[02:34:00.000 --> 02:34:01.000]  такое утверждение
[02:34:01.000 --> 02:34:02.000]  нет.
[02:34:02.000 --> 02:34:03.000]  Видимо,
[02:34:03.000 --> 02:34:04.000]  потому что он как-то
[02:34:04.000 --> 02:34:05.000]  целился только на первые
[02:34:05.000 --> 02:34:06.000]  два, дальше
[02:34:06.000 --> 02:34:07.000]  плевать.
[02:34:07.000 --> 02:34:08.000]  Но вообще,
[02:34:08.000 --> 02:34:09.000]  действительно,
[02:34:09.000 --> 02:34:10.000]  мистическое утверждение.
[02:34:10.000 --> 02:34:11.000]  Вот, давайте подумаем.
[02:34:11.000 --> 02:34:12.000]  Мистическое
[02:34:12.000 --> 02:34:13.000]  утверждение.
[02:34:13.000 --> 02:34:14.000]  То есть,
[02:34:14.000 --> 02:34:15.000]  то есть,
[02:34:15.000 --> 02:34:16.000]  это
[02:34:16.000 --> 02:34:17.000]  действительно,
[02:34:17.000 --> 02:34:18.000]  то есть,
[02:34:18.000 --> 02:34:19.000]  это называется
[02:34:19.000 --> 02:34:20.000]  И префикс
[02:34:20.000 --> 02:34:21.000]  и
[02:34:21.000 --> 02:34:22.000]  префиксный период.
[02:34:22.000 --> 02:34:23.000]  Давайте подумаем
[02:34:23.000 --> 02:34:24.000]  на эту тему.
[02:34:24.000 --> 02:34:25.000]  Префиксный
[02:34:25.000 --> 02:34:26.000]  период.
[02:34:26.000 --> 02:34:27.000]  Тогда
[02:34:27.000 --> 02:34:28.000]  и только...
[02:34:28.000 --> 02:34:29.000]  Ну вот,
[02:34:29.000 --> 02:34:30.000]  строки С,
[02:34:30.000 --> 02:34:31.000]  тогда и только тогда,
[02:34:31.000 --> 02:34:32.000]  когда
[02:34:32.000 --> 02:34:33.000]  shift от
[02:34:33.000 --> 02:34:34.000]  И
[02:34:34.000 --> 02:34:35.000]  с индексом
[02:34:35.000 --> 02:34:36.000]  С
[02:34:36.000 --> 02:34:37.000]  равен
[02:34:37.000 --> 02:34:38.000]  прямо точности
[02:34:38.000 --> 02:34:39.000]  И
[02:34:39.000 --> 02:34:40.000]  поделить на
[02:34:40.000 --> 02:34:41.000]  Х.
[02:34:41.000 --> 02:34:42.000]  Мы такое
[02:34:42.000 --> 02:34:43.000]  прям
[02:34:43.000 --> 02:34:44.000]  жестко утверждаем.
[02:34:44.000 --> 02:34:45.000]  Причем,
[02:34:46.000 --> 02:34:47.000]  утверждает,
[02:34:47.000 --> 02:34:48.000]  что если мы в это
[02:34:48.000 --> 02:34:49.000]  поверим,
[02:34:49.000 --> 02:34:50.000]  то
[02:34:50.000 --> 02:34:51.000]  псевдо таким
[02:34:51.000 --> 02:34:52.000]  образом...
[02:34:52.000 --> 02:34:53.000]  Только
[02:34:53.000 --> 02:34:54.000]  нет,
[02:34:54.000 --> 02:34:55.000]  shift от
[02:34:55.000 --> 02:34:56.000]  4
[02:34:56.000 --> 02:34:57.000]  shift от
[02:34:57.000 --> 02:34:58.000]  К
[02:34:58.000 --> 02:34:59.000]  И
[02:34:59.000 --> 02:35:00.000]  равно И, кажется.
[02:35:00.000 --> 02:35:01.000]  А.
[02:35:01.000 --> 02:35:02.000]  Ладно.
[02:35:02.000 --> 02:35:03.000]  Или вот тут
[02:35:03.000 --> 02:35:04.000]  и поделить на
[02:35:04.000 --> 02:35:05.000]  К.
[02:35:06.000 --> 02:35:08.000]  Так,
[02:35:08.000 --> 02:35:09.000]  действительно,
[02:35:09.000 --> 02:35:12.000]  почему это так?
[02:35:12.000 --> 02:35:13.000]  Ну.
[02:35:13.000 --> 02:35:14.000]  действительно.
[02:35:14.000 --> 02:35:15.000]  Во-первых,
[02:35:15.000 --> 02:35:16.000]  действительно,
[02:35:16.000 --> 02:35:17.000]  пусть у нас
[02:35:17.000 --> 02:35:18.000]  И делится...
[02:35:18.000 --> 02:35:19.000]  То есть да,
[02:35:19.000 --> 02:35:20.000]  тут надо было написать
[02:35:20.000 --> 02:35:21.000]  пусть
[02:35:21.000 --> 02:35:22.000]  И действительно меньше
[02:35:22.000 --> 02:35:23.000]  либо равно С
[02:35:23.000 --> 02:35:24.000]  и оно делится на К.
[02:35:24.000 --> 02:35:25.000]  Так.
[02:35:25.000 --> 02:35:26.000]  Блаблаблаблаблаблаблабла.
[02:35:26.000 --> 02:35:27.000]  И вот
[02:35:27.000 --> 02:35:28.000]  еще
[02:35:28.000 --> 02:35:29.000] ynamics и
[02:35:29.000 --> 02:35:30.000]  оценverts.
[02:35:30.000 --> 02:35:31.000]  Да,
[02:35:31.000 --> 02:35:32.000]  тогда мы
[02:35:32.000 --> 02:35:33.000]  к parecerº
[02:35:33.000 --> 02:35:34.000]  мы
[02:35:34.000 --> 02:35:48.000]  Не, ну да, если в это поверить, то получается мы таким образом, ну, по модулю того, как конкретно правильно делать перескоки, мы получается можем находить и второй, и третий, и четвертый, и пятый, и десятый, и двадцатый, и вообще все.
[02:35:48.000 --> 02:36:00.000]  Вот, ну давайте разбираться. Как что-то искать префиксные? Ну давайте разбираться. Так, верно ли это утверждение? Ну вот, если и поделить нока в префиксный период.
[02:36:00.000 --> 02:36:16.000]  Что у нас тогда получается? Так, вот у нас строка с. Вот, допустим, позиция и, и выяснилось, что тут четыре копии есть. Ну, потому что shift и разный и поделить нока, это означает, что четыре копии тут есть.
[02:36:16.000 --> 02:36:35.000]  Понимание? Вопрос. Верно ли, что это префиксный период? То есть верно ли, что это и поделить нока базовое? Ответ. Нет, неверно. Почему? Потому что, если оказалось, что эти подстроки можно тут разбить на копии,
[02:36:35.000 --> 02:36:49.000]  то тогда обнаруживается, что shift от и оказывается сильно меньше, чем и поделить нока. То есть и поделить нока, и еще там на что-то поделить на это количество копий. Это как минимум.
[02:36:49.000 --> 02:37:03.000]  Ну вот, следовательно, здесь строка базовая. То есть таким образом в одну сторону доказали. То есть сейчас вот мы как бы, значит, хорошо, давайте в эту сторону доказали.
[02:37:03.000 --> 02:37:23.000]  А нет. Да, в эту сторону доказали. Теперь давайте попробуем доказать наоборот. Жила была позиция и, и совершенно случайно выяснилось, что ее shift равен и поделить нока. То есть опять.
[02:37:23.000 --> 02:37:33.000]  То есть опять что получается, что shift? То есть какая это вопрос?
[02:37:33.000 --> 02:37:37.000]  Мне кажется, то, что вы сейчас говорили, это было доказать это в обратную сторону.
[02:37:37.000 --> 02:37:45.000]  Нет, мы сказали. Нет, первая передача в эту сторону доказать, что было такое. Предположим, что и поделить нока оказался префиксным периодом.
[02:37:45.000 --> 02:37:55.000]  Тогда это означает, что у нас тут есть вот эти вот на лицо k копий и, как следствие, означает, что shift от i, это либо и поделить нока, либо что-то меньшее.
[02:37:55.000 --> 02:38:04.000]  Да. А, откуда? А, ну да. Меньше, не делите. Да, понял, да. Мы как бы доказали в обратную сторону. Да, в обратную. Согласен.
[02:38:04.000 --> 02:38:14.000]  Ладно, давайте еще раз. Да, мы доказали в обратную сторону. Мы, потому что мы привернули такое. Пусть у нас shift от i равен и поделить на k. То есть тут вот обнаружилось таких вот k копий.
[02:38:14.000 --> 02:38:23.000]  Мы вот считаем, что это префиксный период. Для этого нам нужно доказать, что тут есть k копия, это уже есть, и то, что вот эта строка длины и поделить нока базовая.
[02:38:23.000 --> 02:38:29.000]  Как ее доказать, что она базовая? Это очень просто. Пусть она не базовая, тогда тут есть вот такие копии.
[02:38:34.000 --> 02:38:47.000]  Тогда что? Тогда это означает противоречие с тем, что shift равен и поделить на k, потому что если можно эту префикс длины и подразмить не на k копии, а на большее число копий, то тогда и shift будет меньше, чем и поделить на k.
[02:38:47.000 --> 02:38:53.000]  Он будет не поделить на это большее число копий. Так что да, в одну сторону. Так что доказали именно в эту сторону.
[02:38:53.000 --> 02:38:57.000]  Что?
[02:38:57.000 --> 02:39:03.000]  Ну мы...
[02:39:03.000 --> 02:39:07.000]  Ну не совсем там...
[02:39:07.000 --> 02:39:15.000]  Ну не совсем там такое утверждение, да. Да, возможно мы и одни и те же мысли гоняем по кругу, но формулируем их сразу в то время.
[02:39:15.000 --> 02:39:18.000]  Так что ничего страшного.
[02:39:18.000 --> 02:39:20.000]  Теперь далее.
[02:39:20.000 --> 02:39:25.000]  Теперь давайте наоборот. Пусть у нас и поделить на k это префиксный период s.
[02:39:28.000 --> 02:39:34.000]  Ну начало картинки то же самое. Это означает, что тут k копии длины и поделить на k на лицо.
[02:39:34.000 --> 02:39:40.000]  Это означает, что shift на t это не более, чем и поделить на k.
[02:39:40.000 --> 02:39:44.000]  Предположим, что меньше, что здесь shift меньше.
[02:39:44.000 --> 02:39:49.000]  То есть, ну картинка сейчас будет та же самая, разница будет только в том, что тут не такие точные копии.
[02:39:49.000 --> 02:39:56.000]  А скорее всего это будет вот так, вот так, вот так и вот так же.
[02:39:56.000 --> 02:40:04.000]  Но для нас самое главное, что как минимум две копии и этого и этого в этот префикс попадут.
[02:40:04.000 --> 02:40:06.000]  А дальше стандартная схема.
[02:40:06.000 --> 02:40:09.000]  Хцд между вот этим и вот этим.
[02:40:09.000 --> 02:40:14.000]  И доказательство того, что вот эта строка не базовая.
[02:40:14.000 --> 02:40:16.000]  И тогда это не префиксный период.
[02:40:27.000 --> 02:40:31.000]  То есть на самом деле можно просто себе такое извинить.
[02:40:31.000 --> 02:40:37.000]  Что, как только у нас shift, если у нас shift равен ровно, обратите внимание, и поделить на k.
[02:40:37.000 --> 02:40:43.000]  Обратите внимание, кстати, вот эти вот ричи, кстати, не подходят, потому что тут будет shift строго меньше, чем и поделить на k.
[02:40:43.000 --> 02:40:45.000]  Обратите на это внимание.
[02:40:45.000 --> 02:40:47.000]  Видите, да?
[02:40:47.000 --> 02:40:55.000]  Поэтому по большому счету, можно считать, что мы его тоже все насчитываем, насчитываем, насчитываем.
[02:40:56.000 --> 02:41:07.000]  Но по большому счету, если у нас просто из какой-то черной магии мы идем слева направо и каким-то образом за амортизированную линию получаем shift каждой этой позиции,
[02:41:07.000 --> 02:41:13.000]  то как только мы встретим второй раз ровно и поделим на k, в этом месте мы и остановимся.
[02:41:13.000 --> 02:41:16.000]  Остается только финальный вопрос.
[02:41:18.000 --> 02:41:23.000]  А как мы после этого ричи вообще этим механизмом будем двигаться?
[02:41:23.000 --> 02:41:25.000]  Ведь что я имею в виду?
[02:41:25.000 --> 02:41:34.000]  Я имею в виду, что раньше мы двигались, пользовались, раньше мы жестко пользовались тем, что ни одного префиксного периода мы не нашли, правда?
[02:41:35.000 --> 02:41:49.000]  Ну рассуждение у нас было, что если вот где-то, допустим, ричи остановился, а префиксного периода мы еще не нашли, значит p можно двигать на q, поделить на k, потому что в этой части префиксного периода тем более и нет. Согласны?
[02:41:50.000 --> 02:41:53.000]  Понятно, о чем я говорю?
[02:41:55.000 --> 02:41:57.000]  А вот теперь внимание-вопрос.
[02:41:57.000 --> 02:41:59.000]  А как нам...
[02:41:59.000 --> 02:42:05.000]  Ну теперь уже мы не гарантируем, что в найденной строке q нет префиксного периода.
[02:42:08.000 --> 02:42:12.000]  Вот на этот раз что мы не знаем, то мы не знаем. Теперь внимание-вопрос.
[02:42:14.000 --> 02:42:18.000]  Ну вот, теперь возникает такое внимание-вопрос.
[02:42:19.000 --> 02:42:27.000]  А если мы знаем только, что этот префиксный период, видимо, не более чем один?
[02:42:27.000 --> 02:42:31.000]  Видимо, нужно действовать теперь как в пункте b того алгоритма?
[02:42:31.000 --> 02:42:36.000]  Ну да, ну в пункте b, даже не в пункте b, а в лемме 2.
[02:42:36.000 --> 02:42:40.000]  Ну, фактически, да, сначала мы пользовались тупо леммой 1.
[02:42:45.000 --> 02:42:47.000]  А теперь у нас есть лемма 2.
[02:42:48.000 --> 02:42:51.000]  Ну, с помощью леммы 2 теперь мы будем говорить следующее.
[02:42:51.000 --> 02:42:59.000]  То есть, ладно, мы нашли, что у нас есть префиксный период p1, и до этого момента, пока мы на это и не наткнемся, второго префиксного периода у нас нет, правда?
[02:42:59.000 --> 02:43:01.000]  Тогда получается следующее.
[02:43:01.000 --> 02:43:06.000]  Давайте я все это сотру. Красивое утверждение, но мы его все-таки сотрем.
[02:43:08.000 --> 02:43:13.000]  И получается маленькая приятная вещь.
[02:43:13.000 --> 02:43:17.000]  Маленькая приятная, маленькая приятная, вот так.
[02:43:18.000 --> 02:43:20.000]  Что дальше получится?
[02:43:21.000 --> 02:43:23.000]  Получится следующее.
[02:43:23.000 --> 02:43:27.000]  Что теперь на каждом шаге, пока мы ищем этот потенциальный второй период.
[02:43:28.000 --> 02:43:33.000]  То есть, мы тут наткнулись на очередное p, не путать с p1, да?
[02:43:33.000 --> 02:43:36.000]  Ну ладно, как до p1 работает, понятно?
[02:43:36.000 --> 02:43:56.000]  Вот, допустим, если у нас оказалось, что p больше не было равно, чем p1, и вот, допустим, мы тут шли, шли, шли, шли, дошли, и тут погран застава, вот это q, и надо это q как-то уменьшить.
[02:44:01.000 --> 02:44:03.000]  Каким же образом это можно сделать?
[02:44:04.000 --> 02:44:12.000]  Ну теперь мы знаем, что на этом префексе не более чем один префиксный период. Согласны?
[02:44:13.000 --> 02:44:15.000]  Более того, что... Нет?
[02:44:17.000 --> 02:44:18.000]  Нет.
[02:44:20.000 --> 02:44:22.000]  Это так подозрительно, смотрите.
[02:44:24.000 --> 02:44:30.000]  А ведь, мы знаем, что на любом из рассмотренных префиксов строки у нас не более чем один префиксный период.
[02:44:30.000 --> 02:44:35.000]  Причем, более того, если он есть, то он равен в точности p1. Согласны?
[02:44:36.000 --> 02:44:37.000]  Других нет.
[02:44:38.000 --> 02:44:40.000]  Поэтому у нас теперь два варианта.
[02:44:41.000 --> 02:44:44.000]  Да, я даже сейчас без леммы 2, по-моему, это все напишу теперь.
[02:44:44.000 --> 02:44:45.000]  Вариант номер раз.
[02:44:45.000 --> 02:44:46.000]  Вариант номер раз.
[02:44:47.000 --> 02:44:52.000]  Если оказалось, что q меньше, чем k умножить на p1,
[02:44:55.000 --> 02:45:03.000]  ну понятно, что p1 тут как бы начинается, но предположим, что вот тут p1, но предположим, что вот k копии не дошло.
[02:45:04.000 --> 02:45:06.000]  Да, это та самая. Это та самая.
[02:45:06.000 --> 02:45:07.000]  Это та самая.
[02:45:11.000 --> 02:45:17.000]  То тогда получается, что p'q' просто становится по старой стиле.
[02:45:18.000 --> 02:45:23.000]  p плюс максимум, как всегда, 1, и вот это вот q поделить на k,
[02:45:26.000 --> 02:45:27.000]  и 0.
[02:45:29.000 --> 02:45:33.000]  То есть, p можно спокойно на q поделить на k, двигать,
[02:45:33.000 --> 02:45:38.000]  потому что у нас была, ну, например, потому что была уже лемма 1,
[02:45:41.000 --> 02:45:50.000]  которая нам говорила о том, что если бы там нашелся шиф q поделить на k меньше, то, извините, мы бы там и префиксный период меньше нашли, а мы его уже не нашли.
[02:45:52.000 --> 02:45:53.000]  Отлично, да?
[02:45:54.000 --> 02:45:55.000]  Ну вот.
[02:45:56.000 --> 02:46:01.000]  Ну или можно прям вот здесь это посмотреть, что как бы шифта, то есть получается, что...
[02:46:02.000 --> 02:46:08.000]  То есть, получается, шифт, он как минимум, то есть он там не менее чем p1.
[02:46:10.000 --> 02:46:11.000]  Не более.
[02:46:12.000 --> 02:46:13.000]  Не более p1.
[02:46:14.000 --> 02:46:15.000]  Да, если он строго менее.
[02:46:16.000 --> 02:46:20.000]  Скажем так, ну, утверждается, что ладно, в данном случае, на самом деле, шифт просто равен p1.
[02:46:21.000 --> 02:46:28.000]  А, ладно, так, он либо равен p1, либо q оказался вообще меньше p1, такой тоже может быть.
[02:46:29.000 --> 02:46:33.000]  Но если q, правда, оказался меньше, чем p1, значит, мы просто p на единичку увеличиваем и не паримся, да?
[02:46:34.000 --> 02:46:42.000]  А если тут хотя бы p нашлось, то мы знаем, что эта строка p1 периодична, а меньшего периода не будет, потому что тут две копии есть, и гцд, и круче рец.
[02:46:43.000 --> 02:46:44.000]  Вот.
[02:46:45.000 --> 02:46:46.000]  Поэтому здесь не паримся.
[02:46:47.000 --> 02:46:50.000]  Ну, у тебя кофе у нас с ним, кстати, нашлось, почему?
[02:46:51.000 --> 02:46:53.000]  Ууууу...
[02:46:54.000 --> 02:46:55.000]  Да.
[02:46:56.000 --> 02:46:58.000]  Ууууу...
[02:46:59.000 --> 02:47:00.000]  Две копии не нашлось?
[02:47:01.000 --> 02:47:03.000]  Так, ну хорошо, ладно.
[02:47:04.000 --> 02:47:07.000]  А, тем более, что мы тут накатили, а не гжлину парили.
[02:47:12.000 --> 02:47:13.000]  Ну, неважно.
[02:47:17.000 --> 02:47:19.000]  Ууууу...
[02:47:19.000 --> 02:47:21.000]  Уууууу...
[02:47:24.000 --> 02:47:26.000]  Так, ну ладно, лучше нашлёпся на левму 1.
[02:47:27.000 --> 02:47:29.000]  Нет, хотя вот хочется какой-то образ, давайте вспомним.
[02:47:30.000 --> 02:47:36.000]  Нет, просто честно скажу, хочется прикрутить сюда какой-то образ, чтобы не отсылаться просто как на чёрный ящик какой-то левмы.
[02:47:37.000 --> 02:47:40.000]  Вот давайте вспомним, как мы левму 1 доказывали вообще?
[02:47:42.000 --> 02:47:43.000]  Ну, так и доказывали.
[02:47:43.000 --> 02:47:47.000]  А, ну только что так и доказывали, по сути, что если есть такой шифт...
[02:47:49.000 --> 02:47:59.000]  Ну да, если есть шифт, если его куделить на k, то давайте рассмотрим вот этот шифт умножить на k, и действительно в этой позиции окажется вот то доказательство, которое мы только что проверили.
[02:48:00.000 --> 02:48:01.000]  Да.
[02:48:02.000 --> 02:48:05.000]  Противоречие будет заключаться в том, что этот шифт...
[02:48:06.000 --> 02:48:19.000]  Противоречие будет заключаться в том, что этот шифт, если, то есть противоречие будет том, что если у нас действительно шифты окажутся меньше, чем куделить на k, то у нас, собственно, просто и префиксный период, окаж achieving меньше, чем P1 противоречия.
[02:48:20.000 --> 02:48:21.000]  Потому что?
[02:48:22.000 --> 02:48:31.000]  Потому что, мы знаем, что, как минимум, потому что мы знаем, что на этих префиксах есть только один при, не более чем одного префиксного периода, и этот префиксный период, поgyо 1 ничто другое.
[02:48:31.000 --> 02:48:36.480]  ни что другое. То есть, если окажется шифт здесь меньше, то окажется, что мы просто меньше, чем
[02:48:36.480 --> 02:48:42.400]  P1 префиксный период найдем, а такого не бывает. Мы же следим за тем, что, мы же как бы у нас,
[02:48:42.400 --> 02:48:46.440]  помним, да, что мы говорим, что у нас минимальный префиксный период у этих всех префиксов,
[02:48:46.440 --> 02:48:56.840]  это P1, другого нет. Вот такая вот. Но теперь, если говорить о втором случае. Если совершенно
[02:48:56.840 --> 02:49:11.240]  случайно оказалось, что P1 сюда прекрасно уместился. Так и допустим вот так. Что тогда делать?
[02:49:11.240 --> 02:49:35.240]  Если Q больше либо равно K, то из этого следует, что у нас какие-то странные случаи. У нас же
[02:49:35.240 --> 02:49:42.680]  там должно быть один случай, так что K, P1, не больше Q, не больше reach от P1, и второй случай,
[02:49:42.680 --> 02:49:50.840]  все остальное было так. Ну да. Можно пытаться, да. По идее, тут дальше должна быть отсылка на
[02:49:50.840 --> 02:49:59.640]  Lemma2. Ну как бы, ну вот. Ну говорим, вот пусть у нас есть строка, и у нас вот этот префикс у нас
[02:49:59.640 --> 02:50:13.480]  есть, и у него есть префиксный период. Ну вот, тогда префиксный период. Ну вот. Тогда получается,
[02:50:13.480 --> 02:50:21.760]  действительно, ну вот, что мы про него знаем? Мы уже про него знаем, что, действительно, что вот,
[02:50:21.760 --> 02:50:27.280]  мы уже знаем, что K умножить на этот префиксный период меньше либо равно Q, но теперь возникает
[02:50:27.280 --> 02:50:33.240]  вопрос, а не знаем ли мы, случайно, что это Q меньше-либо равно реча?
[02:50:42.280 --> 02:50:46.840]  Или другими словами, да. То есть, на самом деле, идея простая. Хочется сейчас
[02:50:46.840 --> 02:50:51.040]  показать, на самом деле, что вот этих вот P1, они тут
[02:50:51.040 --> 02:50:55.040]  добегают, на самом деле, не только до сюда, но и дальше.
[02:50:55.040 --> 02:50:59.040]  Верим ли мы в такое?
[02:50:59.040 --> 02:51:02.040]  Я не очень про это... С чем навесить? Можно просто проверить, правда ли это, это
[02:51:02.040 --> 02:51:07.040]  мигает стверны или нет. А это кто? А это эквивалент. Сейчас, что мы хотим сделать?
[02:51:07.040 --> 02:51:13.040]  Нет, или нет. А, или наоборот. Нет, ну мы хотим...
[02:51:13.040 --> 02:51:19.040]  Ну, мы хотим следующее. На самом деле, мы хотим... Вот я пока свой прощикам поставлю.
[02:51:19.040 --> 02:51:24.040]  Хотим заявить, что P-Q- равно, на самом деле,
[02:51:24.040 --> 02:51:31.040]  такой интересной вещи, как, значит, P плюс P1 и Q минус P1.
[02:51:31.040 --> 02:51:36.040]  Но это верно только, если Q не больше, чем реча P1.
[02:51:36.040 --> 02:51:38.040]  Да.
[02:51:39.040 --> 02:51:41.040]  Не очень понятно, что мы делаем.
[02:51:41.040 --> 02:51:43.040]  Так.
[02:51:46.040 --> 02:51:51.040]  Ну, скажем так, в идеале... Ну, давайте думать, а что делать?
[02:51:51.040 --> 02:51:55.040]  В идеале мы бы так хотели здесь делать.
[02:51:55.040 --> 02:51:59.040]  Да, в идеале мы бы так хотели. Но это верно не всегда.
[02:51:59.040 --> 02:52:04.040]  Действительно. Потому что, действительно, если тут возникает вопрос, если мы возьмем
[02:52:04.040 --> 02:52:10.040]  P1, верно ли, что он дойдет до конца? Это легко проверить.
[02:52:10.040 --> 02:52:16.040]  Давайте я вот так нарисую. Вот, допустим, оказалось, что вот это вот...
[02:52:16.040 --> 02:52:24.040]  Да, второе. Допустим, оказалось Q, значит, больше либо равно, чем K умножить на P1.
[02:52:24.040 --> 02:52:30.040]  Теперь возникает вопрос. Рич от P1.
[02:52:30.040 --> 02:52:35.040]  Мы знаем этот рич, мы уже его вычисляли, помните, да?
[02:52:35.040 --> 02:52:41.040]  Возникает вопрос, верно ли, что он больше либо равен Q, да, или нет?
[02:52:41.040 --> 02:52:43.040]  Вот.
[02:52:43.040 --> 02:52:46.040]  То есть, что значит, что он больше либо равен?
[02:52:46.040 --> 02:52:49.040]  Это означает, что это вот периодичность, на самом деле, вот...
[02:52:49.040 --> 02:52:52.040]  Ну, так как вот, то есть мы, конечно, ее мерили где-то отсюда, но это же, как бы, префикс.
[02:52:52.040 --> 02:52:59.040]  Получается, если выяснилось, что она до Q дошла, то получается, вся вот эта строка P1 периодична.
[02:52:59.040 --> 02:53:04.040]  И более того, мы знаем, что меньшего периода здесь нет, помните, да?
[02:53:11.040 --> 02:53:14.040]  Да, то есть, ну, от меньшего периода нет.
[02:53:14.040 --> 02:53:18.040]  Ну, просто потому что, видите, тут K-копии вместилось, значит, получается, если тут еще есть меньший какой-то шиб,
[02:53:18.040 --> 02:53:23.040]  значит, тут тоже K-копии вместятся, и получится меньше периода, это не базовая строка, бла-бла-бла, раз.
[02:53:23.040 --> 02:53:25.040]  Вот.
[02:53:25.040 --> 02:53:31.040]  Поэтому в этом случае мы честно переходим на P плюс P1 и Q плюс P1, то есть P сдвигается, а вот эта вот граница Q влево нет,
[02:53:31.040 --> 02:53:34.040]  поэтому там за линию все в порядке.
[02:53:34.040 --> 02:53:37.040]  И второй случай.
[02:53:37.040 --> 02:53:39.040]  То есть, это если да.
[02:53:39.040 --> 02:53:49.040]  А если это не верно, то получается, что эта строка P1 периодичной не является.
[02:53:55.040 --> 02:53:56.040]  Вот.
[02:53:56.040 --> 02:53:59.040]  Ну, что тогда?
[02:53:59.040 --> 02:54:04.040]  Вот что делать, если выяснилось, что вот тут период не доходит?
[02:54:04.040 --> 02:54:08.040]  Ну, то есть, это означает, что строка нет по этим периодичным.
[02:54:08.040 --> 02:54:13.040]  Ну, тогда, это есть, ну, хвост первый случай, и тогда прибавляем максимум с 1 на Q, Q, Q.
[02:54:13.040 --> 02:54:14.040]  А почему это первый случай?
[02:54:14.040 --> 02:54:17.040]  Первый случай, говорили, ну, вот.
[02:54:17.040 --> 02:54:21.040]  Ну, в смысле, потому что это не выполнен в слове леммы тоже.
[02:54:21.040 --> 02:54:24.040]  Так.
[02:54:24.040 --> 02:54:25.040]  Ну, да.
[02:54:25.040 --> 02:54:26.040]  Действительно.
[02:54:26.040 --> 02:54:31.040]  Что, если reach у нас нет, то есть, если reach оказался, Q оказался больше, чем reach,
[02:54:31.040 --> 02:54:33.040]  то вот это не выполняется.
[02:54:33.040 --> 02:54:34.040]  Так.
[02:54:34.040 --> 02:54:39.040]  Ну, а так как, ну, а тогда дальше что не выполняется?
[02:54:39.040 --> 02:54:44.040]  То есть, в претекстный период, то есть, мы точно знаем, что он равен P1,
[02:54:44.040 --> 02:54:49.040]  и мы знаем, что этот P1 получается у нас, если это меньше, либо равен QK,
[02:54:49.040 --> 02:54:51.040]  то получается, что shift ему не равен.
[02:54:51.040 --> 02:54:56.040]  А может, он меньше?
[02:54:56.040 --> 02:54:58.040]  Нет, поглядите, как нам помогает V1, V2?
[02:54:58.040 --> 02:55:03.040]  Ну, давайте вспомним.
[02:55:03.040 --> 02:55:04.040]  Что вы там думаете?
[02:55:04.040 --> 02:55:13.040]  Ну, если shift от Q не больше, чем Q делит на K, то shift будет в претекстном периоде,
[02:55:13.040 --> 02:55:17.040]  значит, он может быть только равен P1, и получается,
[02:55:17.040 --> 02:55:22.040]  что V2 будет как раз верно, ну, в вторую скотчу.
[02:55:22.040 --> 02:55:24.040]  То, что мы уже проделывали как раз.
[02:55:24.040 --> 02:55:25.040]  Ну, да, хорошо.
[02:55:25.040 --> 02:55:27.040]  Доказательство lemma2 мы проделывали.
[02:55:27.040 --> 02:55:32.040]  То, что мы проделывали, когда мы алгоритм строили на почтной паре.
[02:55:32.040 --> 02:55:33.040]  Хорошо.
[02:55:33.040 --> 02:55:34.040]  Нет, а все-таки давайте попробуем.
[02:55:34.040 --> 02:55:37.040]  А вот без lemma2 это сформулировать можно?
[02:55:37.040 --> 02:55:42.040]  Вот что означает, что, допустим, это P1 есть, там, то есть, видим, P1 есть,
[02:55:42.040 --> 02:55:49.040]  то есть, 4 копии P1 у нас на лицах, и дальше они на сколько-то продолжаются, но не до упора.
[02:55:49.040 --> 02:55:56.040]  Что это значит?
[02:55:56.040 --> 02:55:59.040]  Куда это? В финалочке, скажем.
[02:55:59.040 --> 02:56:04.040]  Мы утверждаем, что на самом деле теперь получается...
[02:56:04.040 --> 02:56:09.040]  Ну, действительно, тогда утверждается, ну, утверждается простая вещь, да,
[02:56:09.040 --> 02:56:17.040]  что П штрихку штрих опять равно вот этому П плюс, там, максимум из 1 и Q делик на K,
[02:56:17.040 --> 02:56:20.040]  и, соответственно, ноль.
[02:56:20.040 --> 02:56:23.040]  То есть shift как мне, то есть, больше, чем Q делик на K.
[02:56:23.040 --> 02:56:25.040]  Почему так?
[02:56:25.040 --> 02:56:26.040]  Ну, причина очень проста.
[02:56:26.040 --> 02:56:27.040]  Почему?
[02:56:27.040 --> 02:56:33.040]  Допустим, на этот раз оказалось, что все-таки здесь...
[02:56:33.040 --> 02:56:43.040]  То есть shift устроен так, что, действительно, у нас тут 4 копии, как оказалось.
[02:56:43.040 --> 02:56:45.040]  Вот.
[02:56:45.040 --> 02:56:49.040]  То есть, может быть, даже, ну ладно, меньше, наверное, не может быть, потому что мы уже упоминали,
[02:56:49.040 --> 02:56:52.040]  но может окажется строго больше.
[02:56:52.040 --> 02:56:54.040]  Но это даже неважно.
[02:56:54.040 --> 02:57:00.040]  То есть, может быть, вот так, так, так, так и вот так.
[02:57:00.040 --> 02:57:05.040]  Ну, что это тогда означает?
[02:57:05.040 --> 02:57:06.040]  Ну, вот.
[02:57:06.040 --> 02:57:08.040]  Ну, в принципе, тогда это, ну, вот.
[02:57:08.040 --> 02:57:13.040]  Это означает, то есть, по-видимому, это означает, что вот это вот, то есть, вот этот вот shift
[02:57:13.040 --> 02:57:16.040]  и окажется потенциально в рефиксном периоде.
[02:57:16.040 --> 02:57:19.040]  Или не окажется.
[02:57:19.040 --> 02:57:21.040]  Так, где вы так все пропадаете?
[02:57:21.040 --> 02:57:24.040]  Уже ли самая сложная вещь у вас?
[02:57:24.040 --> 02:57:26.040]  Что-то уже понятно.
[02:57:26.040 --> 02:57:27.040]  Ну, не знаю.
[02:57:27.040 --> 02:57:29.040]  Вот я пока не понял.
[02:57:29.040 --> 02:57:32.040]  Если вы мне поняли, если вы уже поняли, объясните.
[02:57:32.040 --> 02:57:33.040]  Я просто.
[02:57:33.040 --> 02:57:35.040]  Желаю, чтобы без ссылки на левый 2.
[02:57:35.040 --> 02:57:37.040]  Я, собственно, поэтому.
[02:57:37.040 --> 02:57:39.040]  Если хочется вот формальной ссылки на левый 2, да,
[02:57:39.040 --> 02:57:45.040]  но хочется вот без формальной ссылки, хочется это как-то увидеть прямо здесь.
[02:57:45.040 --> 02:57:50.040]  Ну, это вот случай, когда Q больше, чем reach, да,
[02:57:50.040 --> 02:57:55.040]  и пусть shift не больше, чем Q делить на K, так?
[02:57:55.040 --> 02:57:56.040]  Четыре раза влезает.
[02:57:56.040 --> 02:58:00.040]  Ну, тогда этот shift будет рефиксным периодом по лиме 1.
[02:58:00.040 --> 02:58:05.040]  Значит shift будет обязательно ровно по 1.
[02:58:05.040 --> 02:58:08.040]  Ну да, мы заметим, что.
[02:58:08.040 --> 02:58:13.040]  Ну да, то есть действительно мы помним, да, что shift лизает,
[02:58:13.040 --> 02:58:17.040]  но действительно заметим, что это окажется действительно рефиксным периодом,
[02:58:17.040 --> 02:58:23.040]  потому что, да, если это не простая строка, значит, тут и shift будет меньше, да.
[02:58:23.040 --> 02:58:25.040]  Вот.
[02:58:25.040 --> 02:58:27.040]  Ну тогда получается, что он тогда,
[02:58:27.040 --> 02:58:30.040]  ну он тогда должен быть, получается, по 1, потому что других у нас нет.
[02:58:30.040 --> 02:58:33.040]  Ну вот, чем-то и победа. Да, окей.
[02:58:33.040 --> 02:58:36.040]  Все, да, будет счастье.
[02:58:36.040 --> 02:58:40.040]  Да, то есть получается, действительно, тут опять маленький ивчик опять возникает.
[02:58:40.040 --> 02:58:45.040]  Ну вроде на этот раз кажется, что без лимочек уже и обошлись.
[02:58:45.040 --> 02:58:51.040]  Ну что ж, ладно, на этот раз вроде, так, вроде все.
[02:58:52.040 --> 02:58:54.040]  Ну не совсем обошлись.
[02:58:54.040 --> 02:59:00.040]  Вот мы тогда показали, что в таком случае P1 равен shift от Q и не больше Q9 на K.
[02:59:00.040 --> 02:59:04.040]  И тогда мы хотим показать, что на самом деле это вот тогда,
[02:59:04.040 --> 02:59:10.040]  ну типа к P1 не больше Q, не больше reach от P1.
[02:59:10.040 --> 02:59:16.040]  Это как бы, это у женщин по себе, но с другой стороны, это тоже ссылка на лиму все равно.
[02:59:16.040 --> 02:59:19.040]  Ну тут просто, тут как вам удобнее, понимаете?
[02:59:19.040 --> 02:59:24.040]  Как бы, понятно, формальная статья в этом месте аккуратно ссылалась на лиму 2.
[02:59:24.040 --> 02:59:28.040]  Ну просто она там по своим формалистическим причинам это сделала.
[02:59:28.040 --> 02:59:33.040]  Вот была лима 2, то есть вот это, то есть как бы доказательство легко проявить.
[02:59:33.040 --> 02:59:37.040]  А в данном случае нам бы хочется это просто вот именно понять.
[02:59:37.040 --> 02:59:44.040]  То есть поэтому я тут вот, поэтому можно не ссылаться на лиму 2, а просто вот действительно уже мыслить.
[02:59:44.040 --> 02:59:49.040]  То есть мы говорим, что если у строки есть период вот этот вот, период P1,
[02:59:49.040 --> 02:59:53.040]  префиксный период, то есть 4 копии в начале этого базового периода по 1,
[02:59:53.040 --> 02:59:57.040]  и мы знаем, что других таких нет, то тогда мы отсюда же и выводим,
[02:59:57.040 --> 03:00:00.040]  что сдвига, так чтобы этого сдвига было 4 копии тоже нет,
[03:00:00.040 --> 03:00:06.040]  потому что в этом случае это тоже там оказывается просто другой префиксный период.
[03:00:06.040 --> 03:00:10.040]  Ну ладно, так, ладно, поэтому можно не доказывать лиму 2,
[03:00:10.040 --> 03:00:14.040]  можно прямо вот тут сказать, что если тут нашелся шифт больше или меньше,
[03:00:14.040 --> 03:00:19.040]  главное не равен, то как бы будет противоречить тем, что...
[03:00:19.040 --> 03:00:23.040]  Ну все, есть ли еще тут вопросик?
[03:00:23.040 --> 03:00:28.040]  Это когда уже саму строку S там в тексте 3 сказали, да, правильно.
[03:00:28.040 --> 03:00:31.040]  Ну да, технология везде одна и та же.
[03:00:31.040 --> 03:00:35.040]  Но это неудивительно, когда мы префикс пунга, когда мы KMP запускаем,
[03:00:35.040 --> 03:00:39.040]  мы же тоже делаем одну же технологию сначала чистого внутри S,
[03:00:39.040 --> 03:00:42.040]  а потом мы делаем другую технологию.
[03:00:42.040 --> 03:00:47.040]  Ну да, это неудивительно, когда мы префикс пунга, когда мы KMP запускаем,
[03:00:47.040 --> 03:00:50.040]  мы же тоже делаем одну же технологию сначала чистого внутри S,
[03:00:50.040 --> 03:00:53.040]  а потом относить на строке S.
[03:00:53.040 --> 03:00:55.040]  Все более того, в общем-то, и схема.
[03:00:55.040 --> 03:00:58.040]  Так что да, да, то есть в общем-то технология как-то да.
[03:00:58.040 --> 03:01:03.040]  То есть может быть разновидности, вместо мечей берем топоры,
[03:01:03.040 --> 03:01:08.040]  или именно мечи горят, но технология фокуса одна и та же.
[03:01:08.040 --> 03:01:14.040]  Так, ну что ж, так что думаю, кажется, на этом мы успешно победили этот алгоритм.
