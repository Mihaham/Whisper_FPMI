[00:00.000 --> 00:08.120]  Сегодня и, видимо, там пару следующих занятий будем говорить о потоках, потому что говорить там
[00:08.120 --> 00:15.640]  можно много, как говорится, и со вкусом. Значит, поехали. Так, ну, возникает первый, естественный
[00:15.640 --> 00:23.040]  вопрос, а шо это вообще? Да, ну, как уже говорилось, так будьте внимательны, когда обсуждаете с кем-то потоки,
[00:23.040 --> 00:33.200]  потому что на самом деле слово «поток» оно слишком многогранно. Потому что в английском языке там
[00:33.200 --> 00:38.240]  этому слову и только в компьютерсайсе это слово «поток» соответствует три принципиально
[00:38.240 --> 00:46.360]  непрераздах слова. Это «стрим», это «флоу» и это «тред». Ну, со стримами вы уже познакомились активно,
[00:46.360 --> 00:53.960]  я думаю. Ну, тред – это то, что связано с многопоточным программированием. Ну, с этим вы
[00:53.960 --> 01:02.600]  познакомитесь, видимо, семестр в четвертом. Нет, почему? Смотрите, просто продолжение данного
[01:02.600 --> 01:09.160]  курса будет курс параллельной алгоритмы, где вы впервые столкнетесь с той частью C++, которая
[01:09.160 --> 01:16.880]  отвечает за всякие параллельности, треда и так далее. И после него уже в пятом семестре будут
[01:16.880 --> 01:22.840]  распределенные вычисления. Ну, может быть, у меня, конечно, среди не устаревшие, но тем не менее.
[01:22.840 --> 01:34.800]  Но вообще скорее было так. Ну, раньше в этом месте называлось распределенные параллельные вычисления.
[01:34.800 --> 01:52.400]  Суть одна. Это не то, что мы будем изучать сегодня. Сегодня в английском языке то,
[01:52.400 --> 02:00.000]  что мы ищем, называется «флоу». Это может быть максимально похоже на поток, который течет
[02:00.000 --> 02:10.200]  где-то там, куда-то вода. Ну, в некотором смысле да. Потому что, значит, если вводить формальное
[02:10.200 --> 02:25.240]  определение, то это звучит так. Определение. Смотрите, здесь понятие сеть. Вот. Это. Это
[02:25.240 --> 02:39.920]  мистический кортеж. Значит, скажем, V, E, C. Вот тут, кстати, на самом деле два определения есть.
[02:39.920 --> 02:57.240]  Вместо E поставить V на V. Ну, сейчас увидите, что имеется в виду. Да, C, S, T. Значит, что это такое?
[02:57.240 --> 03:20.040]  Значит, V, E. Это, соответственно, ориентированный граф. Ориентированный исключительно. Так, значит,
[03:20.040 --> 03:29.600]  ну, пока ничего не тривиального. А вот дальше начинается интересность. Значит, C. Это так называемая
[03:29.600 --> 03:38.920]  пропускная способность. Формально говоря, это. Так, формально говоря, это функция, которая каждому
[03:38.920 --> 03:50.800]  ребру ставит в соответствии. Не отрицательное число. Да, не обязательно целое, боже упаси. Ну,
[03:50.800 --> 03:58.680]  то есть, 99 процентов случаев у вас, конечно, это будет целые числа, что прихотает, но. Да, но,
[03:59.160 --> 04:09.800]  строго говоря, в общем, целых чисел тут быть не обязано. Так, она называется, внимание, пропускная
[04:09.800 --> 04:38.120]  способность. Вот, копайся. Ну вот, значит, S.
[04:40.000 --> 04:53.040]  Значит, это просто вершина. Это просто вершина. Какая это вершина? Называется она исток. А T. Это
[04:53.040 --> 05:02.760]  вершина, не совпадающая с истоком. Она называется исток. Ну, сразу скажем, да, исток. Но на английском это
[05:02.760 --> 05:14.480]  называется обычно source. Ну вот, ну а здесь обычно употребляется слово sync. Хотя иногда встречалось
[05:14.480 --> 05:28.880]  слово target, откуда, по-видимому, и буква T. Вот. Ну, в принципе, все понятно. Да, как бы просто набор
[05:28.880 --> 05:40.480]  с пяти. Значит, спрашивает, какой глубокий смысл за этим всем хранится. Вот. Ну, давайте попробуем
[05:40.480 --> 05:45.440]  нарисовать. Ну, то есть, нарисовать тут, в общем-то, достаточно тривиально. Значит, обратите внимание,
[05:45.440 --> 05:53.120]  никаких ограничений на структуру самого графа нет. Значит, конкретно в таком виде, в общем-то,
[05:53.120 --> 06:00.800]  можно, то есть, может быть, нарисован абсолютно любой граф с абсолютно какими-то произвольными
[06:00.800 --> 06:10.120]  ребрами, может быть, даже кратными. Пожалуйста. Шесть, четыре, циклы, пожалуйста, там, сколько угодно.
[06:10.120 --> 06:17.880]  То есть, вот как-то вот так, вот там и так далее. Три, два, там пять. Ну, теоретически можно даже
[06:17.880 --> 06:26.480]  ноль. Непонятно зачем, правда, но вот. Да, и конечно же, да, ребра могут вести и в исток, пожалуйста,
[06:26.480 --> 06:35.280]  сколько угодно это. Ну, вот, то есть, вот как-то вот так. Ну, то есть, обычно они, то есть, на практике
[06:35.280 --> 06:42.200]  оказывается, что они чаще всего бесполезны, но тем не менее. Формально ничего этому не противоречит.
[06:42.200 --> 06:48.840]  А, ну, и конечно же, да, ребра могут и вести друг в друга. Такие-то, ну, быть таким вот,
[06:48.840 --> 06:55.560]  взаимообратными тоже, пожалуйста, это сколько угодно. Или вот что-нибудь еще, например, так,
[06:55.560 --> 07:03.360]  вот тут, конечно, тоже. Давайте четыре, тут какой-нибудь, тут какой-нибудь еще, там два,
[07:03.520 --> 07:15.240]  пожалуйста. Вот. Ну, вот так может выглядеть какая-нибудь сеть. Ну, пока, конечно, не очень понятно,
[07:15.240 --> 07:25.200]  о каком, собственно, глубокий смысл этого всего мероприятия. Вот. Ну, давайте смотреть. Ну,
[07:25.200 --> 07:32.600]  для того, чтобы, может быть, нот больше как-то познакомится, да, можно ввести понятие поток.
[07:32.600 --> 07:39.680]  А можно сказать сразу идейно. То есть, что себе можно вообще в этом месте вообразить? То есть,
[07:39.680 --> 07:45.200]  обычно эта карта чего-нибудь, например, ну, чаще всего приводит, чтобы уж было совсем про поток,
[07:45.200 --> 07:53.200]  это поток про, ну, вот это водопровод. То есть, говорится следующее, что у нас вот водопровод
[07:53.200 --> 07:59.960]  состоит из вот нескольких узлов. Каждый узел умеет там принимать воду и ее как-то перенаправлять.
[07:59.960 --> 08:10.360]  Мы хотим наладить какой-то постоянный набор, постоянное притекание воды. При этом мы хотим,
[08:10.360 --> 08:18.760]  чтобы вода втекала в систему в истоке и вытекала из стока. Ну, то есть, перенод,
[08:18.760 --> 08:26.720]  а внутри перемещалась из S в T. И как-то текла. Ну, что значит как-то текла? Тут вот очень аккуратно
[08:26.720 --> 08:34.200]  надо это, собственно, понимать. Значит, смотрите тут как. То есть, это не один раз, что она там
[08:34.200 --> 08:40.200]  притекла и забыли, а постоянно. Потому что теоретически, конечно, можно было бы просто,
[08:40.200 --> 08:44.960]  если мы хотим, чтобы какой-то объем жидкости у нас протек от S в T. Что делать? Ну, берем любой
[08:44.960 --> 08:53.640]  путь и по чуть-чуть, по чуть-чуть, чем за какое-нибудь большое время протекаем. Но не эта наша цель. Наша цель,
[08:53.640 --> 09:05.920]  чтобы поток протекал постоянно. Так, чтобы у нас, по каждой трубе в единицу времени, каждую единицу
[09:05.920 --> 09:12.920]  времени притекало какое-то количество жидкости с тем расчетом, чтобы из S в T в эту же единицу
[09:12.920 --> 09:31.680]  времени притекало как можно больше. Так, ну и все знают, это неинтересно. Хорошо. Ну, тем не менее.
[09:31.680 --> 09:38.960]  Значит, что значит в единицу времени? Ну, то есть, это означает, что сразу себе можно вообразить,
[09:38.960 --> 09:45.320]  что это вы не первый момент времени рассматриваете, а вот, предположим, что уже, допустим, может быть,
[09:45.320 --> 09:53.600]  прошло какое-то большое время, и, так сказать, уже устакарилось, сколько воды будет везде идти. И вот,
[09:53.600 --> 09:58.440]  например, какой-нибудь типичный поток, это вот вы решили. Но при этом зачем же нужны вот эти пропускные
[09:58.440 --> 10:04.640]  способности? Ну, пропускные способности нужны для того, чтобы ограничить количество воды,
[10:04.640 --> 10:08.080]  которая может протекать по трубе. Ну, потому что, понятно, в реальной жизни вряд ли вы будете
[10:08.080 --> 10:15.880]  там бесконечное количество воды вообще за секунду через трубу прогонять. Просто физически не
[10:15.880 --> 10:20.240]  сможете этого сделать. Поэтому вот так говорим, что через эту трубу единицу времени течет,
[10:20.240 --> 10:28.880]  может течь четыре единицы воды. Ну вот, а здесь целых пять, а здесь два, ну и так далее. Вот.
[10:28.880 --> 10:37.240]  Поэтому вот так и будем делать. Вот, например, какой-нибудь поток может выглядеть так. Вот мы
[10:37.240 --> 10:45.440]  решаем, что давайте у нас будет вот по, скажем, вот этим вот трубам течь три единицы жидкости.
[10:45.440 --> 10:59.360]  Например. Ну вот это вот в принципе тоже поток. А можно еще параллельно, то есть объявляю, что вот
[10:59.360 --> 11:03.800]  тут по четыре. То есть смотрите, то есть как бы один раз запустили, и мы обнаружим, что в каждый
[11:03.800 --> 11:08.480]  момент времени у нас, скажем, по каждой из этих труб течет по четыре единицы жидкости.
[11:08.480 --> 11:17.960]  Да. Да, мы сами решаем, но с некоторыми ограничениями. Вот сейчас мы пытаемся,
[11:17.960 --> 11:23.400]  по крайней мере, понять интуицию, с которой мы будем сейчас писать формальное определение. То есть
[11:23.400 --> 11:28.920]  мы его, конечно, напишем. Но интуиция здесь следующая, что как бы каждую единицу времени у нас
[11:28.920 --> 11:35.000]  здесь должно вот течь четыре единицы жидкости. Спрашивается, откуда они берутся? Но заметим,
[11:35.000 --> 11:39.240]  что браться они могут. То есть, конечно, для того, чтобы по этому ребру вот из этой вершины в
[11:39.240 --> 11:44.640]  единицу времени вытекало четыре единицы жидкости, то, наверное, за прошлую единицу времени,
[11:44.640 --> 11:52.880]  наверное, эти четыре единицы должны туда втечь. То есть в принципе можно даже еще усилить,
[11:52.880 --> 11:58.000]  потому что заметим, что мы тут можем еще одну единицу жидкости в пути. Но тогда у нас будут
[11:58.000 --> 12:02.680]  проблемы. Вот нам что в этом смысле не нравится? Тогда получается, что вот в единицу времени вот
[12:02.680 --> 12:09.560]  сюда втекает на одну единицу больше, чем вытекает. Это немножко нас не устраивает,
[12:09.560 --> 12:14.440]  потому что получается, что в этой вершине будет бесконечно много воды собираться. Это черевато
[12:14.440 --> 12:23.240]  бабахом. Вот. Но нас, соответственно, да, это не очень устраивает. Поэтому мы сделаем вот. Но мы
[12:23.240 --> 12:28.440]  можем, смотрите, в каждой вершине мы можем поток распределять так, как мы считаем нужным. То есть
[12:28.440 --> 12:36.600]  мы не обязаны эти пять единиц жидкости потом пускать по одной трубе. Вот. Вообще, ну, в некотором
[12:36.600 --> 12:42.440]  смысле распаралились, конечно, но скорее распределить. Вот, например, в данном случае вот я, например,
[12:42.440 --> 12:53.280]  сейчас вот от балды что-то рисую, можно вот так сделать. Ну да, вот казалось бы. То есть мы просто
[12:53.280 --> 12:57.720]  берем эту единицу потока, отправляем сюда, и здесь вот может течь уже тоже четыре единицы потока,
[12:57.720 --> 13:05.480]  которые притекли три отсюда, одна отсюда. Правда, есть одна маленькая проблема. Да, собственно,
[13:05.480 --> 13:13.880]  не очень понятно, а куда, собственно, девать. Ну, куда можно девать? Так, ну ладно, тут без вариантов,
[13:13.880 --> 13:22.160]  можно тут, конечно, сказать, а давайте вот так вот потекчет одна единица. Нет, это, ну вот. Но
[13:22.160 --> 13:26.480]  тогда получается, что здесь все равно лишний один. Значит, то тогда давайте напишем вот единицы сюда.
[13:26.480 --> 13:39.560]  И, ну, допустим, единицы сюда. Можно было, но мы разбираемся в определениях, а не то,
[13:39.560 --> 13:45.480]  как было проще. То есть я вот просто привожу примеры, как и что мы вообще в принципе можем.
[13:45.480 --> 13:56.160]  Вот. И так, то есть формальное определение действительно звучит, теперь вот может звучать так.
[13:56.160 --> 14:14.080]  То есть вот определение пишем. Значит, поток в сети, там g равно, соответственно, VECST. Значит,
[14:14.080 --> 14:19.840]  но здесь, на самом деле, можно ввести два. Ну, на самом деле, тут можно два определения ввести. Но,
[14:19.840 --> 14:30.240]  значит, вот основное программистское может звучать так. Это функция f, которая каждому ребру ставит в
[14:30.240 --> 14:38.920]  соответствии к какой-то число. Кстати, обратите внимание, на этот раз оно может быть отрицательным,
[14:38.920 --> 14:51.560]  у которого выполняются следующие, как-то ни странно, два условия. Ну, условия номер раз.
[14:51.560 --> 15:07.320]  Что для любого ребра E, конечно же. Так, хотя, кстати, интересно. Хотя нет. Конкретно в этом
[15:07.320 --> 15:14.280]  случае мы все-таки запретим себе все-таки ставить. Давайте так скажем. Значит, у нас будет 0,
[15:14.280 --> 15:20.600]  все-таки меньше либо равно f от E меньше либо равно c от E. Все-таки, говорим, что вода у нас течет
[15:20.600 --> 15:30.400]  все-таки в определенную сторону, поэтому давайте вот без этого. Ну, было оно. И второе. Все-таки
[15:30.400 --> 15:36.680]  напишем себе 0. И второе, как мы уже увиделись, в каждую промежуточную, обратите внимание,
[15:36.680 --> 15:44.720]  промежуточную вершину. Сколько воды втекает, столько идет, чтобы втекать. Что это значит?
[15:44.720 --> 15:55.760]  Это означает, что для любой вершины В, не совпадающей ни с истоком, ни со стоком, верно,
[15:55.760 --> 16:12.560]  что сумма f от E равна сумме f от E. Где здесь E, где здесь вот так я напишу. Значит, да, все E это
[16:12.560 --> 16:22.960]  ребра, но разница в том, что здесь мы рассматриваем входящие вершиновые ребра, а здесь мы рассматриваем
[16:22.960 --> 16:36.560]  исходящие. Обратите внимание, это должно быть верно только для вершин, не совпадающих с
[16:36.560 --> 16:52.600]  истоком. Истоки-истоки, естественно, это все не так. Так что вот такая диспозиция. Вот такое,
[16:52.600 --> 17:10.160]  вот формальное определение такое. Вот формальное определение такое. Ф, да, но поток это f. Где? Тут
[17:10.160 --> 17:20.320]  c из ev. А, ну из evr, но все-таки мы пишем, что f от E больше либо равно 0. Я просто это здесь написал,
[17:20.720 --> 17:34.680]  но на самом деле, да, тут, конечно, по-разному это можно вводить. Сейчас я написал в том виде,
[17:34.680 --> 17:38.360]  в котором, на самом деле, вы в подавляющем большинстве случаев будете это программировать.
[17:38.360 --> 17:45.600]  Ну, на самом деле, не совсем так вы это будете программировать. Значит, чуть позже поймем,
[17:45.600 --> 17:51.240]  почему. Вот, но пока же вот действительно, определение вот просто такое. То есть можно это
[17:51.240 --> 17:56.000]  воспринимать как количество воды, хотя не менее красивое, может быть, даже где-то более жизненный
[17:56.000 --> 18:00.560]  пример, это на самом деле представить, что это транспортная сеть. То есть это означает,
[18:00.560 --> 18:06.440]  что точки – это города, а ребра – это дороги. И по каждой дороге у вас там информация, сколько
[18:06.440 --> 18:12.680]  машин вы можете там в единицу времени по ней пускать. Ну, тупо там, сколько полос условно там
[18:12.680 --> 18:19.920]  на дороге. Ну, конечно, да, мы здесь, конечно, немножко не учитываем, что там у дорог есть
[18:19.920 --> 18:27.240]  какие-то длинные. Впрочем, это не особо и принципиально. Нет, хотя нет. Ну, хотя да, не особо
[18:27.240 --> 18:31.880]  и принципиально, потому что после того, как сеть там некто загрузилась, там все дороги стали в
[18:31.880 --> 18:37.400]  пробках. Ну, не стали в пробках, а едут уже там с постоянной скоростью какой-то, то, действительно,
[18:37.400 --> 18:41.840]  в каждую вершину начинает вот прибывать указанное количество машин, отбывать указанное количество
[18:41.840 --> 18:54.080]  машин, и вы там из истока пускаете какое-то количество машин. Вот. Ну, правда, ну вот. Ну,
[18:54.080 --> 18:59.760]  теперь вы искали вопрос. Какая задача? Как вы, возможно, слышали? У нас есть задача о максимальном
[18:59.760 --> 19:08.800]  потоке. А теперь внимание, вопрос. А что такое максимальный поток? Точнее, что означает, что
[19:08.800 --> 19:26.520]  какой-то поток больше, чем какой-то. Ну, казалось бы, да, логично. Действительно, так и пишем,
[19:26.520 --> 19:36.520]  определение. Ну, да. Так что, модуль f, допустим, я ее напишу так, с индексом s. Сейчас поймете,
[19:36.520 --> 19:51.960]  почему. Индекс s. Просто суммируем все потоки, которые вытекают из вершины s. Ну, то есть,
[19:51.960 --> 19:56.600]  казалось бы, да, все просто. То есть, это мы понимаем, сколько у нас, собственно, машинок вытекает,
[19:56.600 --> 20:06.760]  это выезжает в единицу времени. Но здесь определение запускает одну маленькую подрядку. Вот прямо сейчас
[20:06.760 --> 20:20.880]  вы видите, что у нас из истока выезжает аж на целых восемь машин. Восемь. Эта единица не имеет
[20:20.880 --> 20:35.200]  кресла. Вроде все удобно. Можно сказать, что четыре из этих машин едут по такому пути. Одна из этих
[20:35.200 --> 20:46.960]  машин едет по какому-то экзотическому пути. И еще три по такому. Впрочем, по-разному. Можно
[20:46.960 --> 20:51.520]  говорить по такому пути, а можно сказать, а можно на самом деле еще отметить, что есть такой оригинальный
[20:51.520 --> 21:00.880]  вариант. Одна единица значит четыре. Можно вообще так сказать. Четыре едут вот так. Одна едет вот так.
[21:00.880 --> 21:12.760]  И какая-то одна машинка, вот мы ее загрузили, она тут катается. И еще три вот так. Да. Ну,
[21:12.760 --> 21:19.320]  как бы, формаль-то не противоречит. Все еще круче. Просто на самом деле конкретно даже эта сеть может
[21:19.320 --> 21:29.240]  дать нам следующую подляну. Смотрите, мы выпускаем еще одну машинку. Значит, запускаем ее сюда. Вот едет,
[21:29.240 --> 21:37.800]  она едет. Пропускает ее сюда. Машинка. И тут машина так. Что, куда едет? Ой, пойду домой.
[21:37.800 --> 22:06.280]  Нет, ну оно тут было. Тут еще четверочка стояла. Ну да. Ну, догадывайте, да. Но для начала,
[22:06.760 --> 22:13.000]  отец. Потому что это как бы дает возможность как-то что-то накручивать. Потому что как бы вот
[22:13.000 --> 22:19.680]  получается, что мы теперь можем гордо отчитаться, что у нас теперь мы пускаем в Т-9 машин. Правда,
[22:19.680 --> 22:23.360]  у нас появилось, по-моему, вот как-то слово откат как-то в голове начинает крутиться как-то
[22:23.360 --> 22:28.200]  активно. Потому что одна как-то к нам же и вернулась. То есть покаталась, покаталась,
[22:28.200 --> 22:37.280]  вернулась. Но определению это не противоречит. Но как-то, тем не менее, до Т они все не доезжают.
[22:37.280 --> 22:44.680]  Поэтому, соответственно, мы вынуждены, поэтому мы думаем, что как бы каждая машинка, ну,
[22:44.680 --> 22:50.200]  по крайней мере, идейна. Когда она выезжает из С, она, наверное, должна либо вернуться в С,
[22:50.200 --> 22:59.160]  либо доехать до Т. Поэтому мы вычитаем, поэтому вот в таком определении мы должны
[22:59.160 --> 23:10.400]  вычесть то, что вернется в С. Так что вот такая красота.
[23:20.200 --> 23:39.280]  Ну, как сказать, обычная нота. Обычно так и называют FPS. Ну, вообще, это называется величие. Ну, да.
[23:39.280 --> 23:46.040]  Мощность потока. Или я, почему-то все время скатываюсь в названии величина потока. Ну,
[23:46.040 --> 23:52.280]  такая, может быть, не совсем формально, потому что больше. Вот. Но на самом деле, конечно, теперь можно
[23:52.280 --> 24:01.240]  заметить, что раз есть FPS, то можно мерить потоки по-другому. Сколько втекает в Т. Ну, то есть понятно.
[24:01.240 --> 24:11.920]  Думаю, догадываетесь, что тут должно быть написано. Значит, E лежит в E. E.finish равно S минус.
[24:11.920 --> 24:20.200]  Да, только Т, конечно. То есть сколько минус, соответственно, сколько оттуда вытекает, это мало ли. Тут, конечно,
[24:20.200 --> 24:24.920]  на этой картинке это невозможно, но вообще говоря, тут какой-то цикл можно накрутить и на Т при желании.
[24:24.920 --> 24:38.960]  Вот. E.start. Вот. То есть вот такими двумя способами можно считать, насколько круто у нас работает
[24:38.960 --> 24:44.440]  наша сеть. То есть, как бы, да, сколько товаров выпускает S и сколько доходит до получателя.
[24:44.440 --> 24:52.280]  Ну, вот и какая-то вот вопрос уже в связи вот с этими циклами и прочим. А это одно и то же. Вот,
[24:52.280 --> 24:57.360]  и кажется, интуитивно, да, что вроде как вот у нас машинки, как бы, выезжают из Т, из S и доезжают
[24:57.360 --> 25:04.040]  до Т. Или возвращаются в S, и тогда мы их не учитываем. И тогда мы их тут не учитываем. Вот. Ну,
[25:04.040 --> 25:15.120]  мало ли, может быть, там как-то неудачное определение ввели. Вот. Но выясняется, да, что все-таки,
[25:15.120 --> 25:21.080]  то есть есть такое уже мистическое первое утверждение, такое нетригиальное, что на самом
[25:21.080 --> 25:26.320]  деле, да, вот в таком виде, в котором мы это определили, это одно и то же. То есть, обратите
[25:26.320 --> 25:31.520]  внимание, без вот этого минуса это не было бы одно и то же и примером является просто вот этот
[25:31.520 --> 25:41.760]  поток. Видите, да? Потому что выезжает из нас больше, чем въезжает в Т. Но как же это доказать?
[25:41.760 --> 25:57.680]  Ну да. Ну да, действительно, можно, да. То есть, действительно, доказать, что тут звучит так,
[25:57.680 --> 26:10.720]  что пишем 0 равно сумме всех потоков, точнее так, вот так, сумма по всем вершинам,
[26:10.720 --> 26:22.960]  сумма по всем ребрам, исходящим из вершины V, F от E. Но я тут не буду E принадлежит E писать.
[26:22.960 --> 26:37.040]  Минус сумма по всем V. Значит, суммируем по всем V количество машинок, которые, наоборот, въезжают.
[26:37.040 --> 26:54.640]  Почему это равно нулю? Ну просто потому, что это одно и то же. По факту мы пробежались по всем
[26:54.640 --> 27:00.040]  ребрам и просуммировали F, правда? То есть, просто вопрос лишь только в том, как мы группируем
[27:00.040 --> 27:10.920]  слагаемое, правда? Ну а теперь давайте поиграемся еще кое с чем. То есть, теперь можно это даже более
[27:10.920 --> 27:20.680]  аккуратно написать. Давайте теперь посуммируем по всем V и тут внутри просуммируем все входящие
[27:20.680 --> 27:46.120]  и все исходящие. Вот. Но у нас есть маленькое утверждение, что каждая такая разность равна нулю.
[27:46.120 --> 27:54.960]  Да, маленькая оговорка. Кроме S и T. То есть, вот теперь мы уже действительно начинаем вот этим вторым
[27:54.960 --> 28:01.560]  условием активно пользоваться. То есть, мы начинаем пользоваться и, то есть, так вот пишем прямо по
[28:01.560 --> 28:12.720]  второму условию. Видим, что действительно то же самое мы можем сказать. То есть, на самом деле,
[28:12.720 --> 28:21.200]  мы можем выкинуть все вершины, кроме истока истока. То есть, мы можем сказать, что это равно, значит,
[28:21.200 --> 28:46.760]  E.start равно S. Значит, минус E.finish равно S. F от E. Плюс то же самое по T. E.start равно T. И тут
[28:46.760 --> 29:10.000]  E.finish равно T. Минус. Вот. И это равно чему? Ну вот. Но теперь замечаем, что вот это вот в точности вот
[29:10.000 --> 29:24.120]  Fs. Вот, обратите внимание. Да, обратите внимание, именно минус. Видите, да? Тут finish start. Поэтому
[29:24.120 --> 29:36.800]  минус, да. Вот такое вот на самом деле несложное доказательство. Ну, то есть, которое внутри себя
[29:36.800 --> 29:41.840]  просто вот имеет, да, что. Вот, которое действительно показывает так более формально, да, что, да,
[29:41.840 --> 29:47.840]  если у вас нигде вода не скапливает, ниоткуда, кроме исток, появляется только в истоке и исчезает
[29:47.840 --> 29:55.160]  только в стоке, то все, что появилось в истоке, должно исчезнуть в стоке и наоборот. Ну вот. А все
[29:55.160 --> 30:02.120]  остальное вот, соответственно, взаиму уничтожается. Вот. Поэтому, соответственно, можно ввести
[30:02.120 --> 30:15.240]  определение, по сути, модуль F. Ну, в общем, вот. Выбирайте сами, короче, чему. В общем-то,
[30:15.240 --> 30:21.200]  но чаще всего обычно, ну, конечно, более удобно обычно считать именно в таком виде, но на самом
[30:21.200 --> 30:26.360]  деле на ваше усмотрение там при написании конкретного кода на самом деле можно и так и так, суть одна.
[30:26.360 --> 30:34.160]  Ну, в общем, чаще всего сама величина потока будет еще из немножко других соображений появляться.
[30:34.160 --> 30:43.280]  Вот. Так что вот такая красота есть. Значит, это вот в программистском виде определение вот
[30:43.280 --> 30:50.480]  такие. Вот. Ну и, конечно, теперь остается только сформулировать задачу о максимальном потоке.
[30:50.480 --> 30:56.720]  Ну, как вы думаете, как формулируется задача о максимальном потоке?
[30:56.720 --> 31:10.640]  Ну да. Найти, действительно, задача о максимальном потоке. Найти поток с максимально возможной
[31:10.640 --> 31:22.240]  величиной. Ну, для заданной сети. То есть, да, фиксированный граф, фиксирована пропускная
[31:22.240 --> 31:35.120]  способность и фиксированный исток-исток. И сразу вот такой вопрос на разминку. А существует ли
[31:35.120 --> 31:56.480]  максимальный поток? Хорошо. Начнем с разминки. Существует ли просто поток? Нет. Все гораздо
[31:56.480 --> 32:03.240]  проще. Заметим, что определение не запрещает нам нулевой поток. То есть, просто давайте скажем,
[32:03.360 --> 32:10.760]  что по нашей сети ничего не будет течить. Ну, как в этой задаче. Один водитель автобуса израсходовал
[32:10.760 --> 32:16.360]  за месяц 89 литров бензина, а другой вообще никуда не ездил и никого не возил. И поэтому
[32:16.360 --> 32:27.160]  сэкономил в 30 раз больше. Ну вот, да, задача. Сколько израсходовал за месяц первый водитель,
[32:27.160 --> 32:33.920]  учитывая, что им в начале месяца выдавали одинаковое количество бензина. Вот можно по этому
[32:33.920 --> 32:40.880]  пути пойти. То есть, как минимум нулевой поток работает. Но это, конечно, не самый большой поток,
[32:40.880 --> 32:47.680]  который теоретически мог бы быть. Хорошо, поток в принципе существует. А существует ли
[32:47.680 --> 33:10.480]  максимальный поток? Любые два сравнимы. И самое главное, да, заметим, что величина
[33:10.480 --> 33:14.760]  потока не может происходить действительно в сумме пропускных способностей, исходящих из
[33:14.760 --> 33:27.120]  стока рыбы. Чего конечная? Ну, сэшка конечная. Но само по себе максимальности потока это не
[33:27.120 --> 33:38.840]  гарантирует. Существование максимального потока. Ну вот, смотрите. Интервал от 1 до 3. Полуинтервал
[33:39.720 --> 33:57.200]  это же ограниченное множество. Ну вот теоретически. Ну-ка, давайте, да. Нет, вы, я думаю, там поможет
[33:57.200 --> 34:07.200]  Матальян, если вы уже изучали слова, которыми можно в этом месте ругаться. Ну вот, может быть так,
[34:07.200 --> 34:12.480]  что там существует какой-нибудь супремум, что там потоки бесконечно близко к нему существуют,
[34:12.480 --> 34:23.880]  а вот конкретно стока не существует. Ну-ка, давайте такое упражнение по вотанализу. Что? Граф конечен.
[34:23.880 --> 34:40.320]  Бесконечно графов мы в принципе не рассматриваем. А зачем нам ребро из стока в исток?
[34:40.320 --> 34:58.440]  Особенно если вот напоминаю, что мы тут нарисовали себе целый числ, но потоп не обязан быть целыми
[34:58.440 --> 35:18.280]  числами, я тут могу и там Е-машин пустить. Путей тогда, но у нас может быть бесконечное множество
[35:18.280 --> 35:28.720]  пропусков способностей, которые мы пропускаем. Да-да-да, просто давайте сразу докажем Теремфорда
[35:28.720 --> 35:37.080]  Фолкерсона. Да, прям сразу. Не, а без этого никак сразу. Нет, мы ее, конечно, докажем, куда мы денемся.
[35:37.080 --> 35:46.160]  Ну смотрите, ну потому что я тут просто опускаю целое число машинок, да. Но я ж могу пустить половину
[35:46.160 --> 35:51.440]  машинок, хетер-машинок, корень из двух машинок. Не говоря о том, что пропустые способности тоже могут
[35:51.440 --> 36:04.920]  быть там, я не знаю, пьетом, что-нибудь в степени корень из двух. Да. Кого конечное число? Конечное,
[36:04.920 --> 36:19.640]  и что? И что, а то, чтобы они могут течь, бесконечное число. Бесконечный число вариантов, да, они
[36:19.640 --> 36:30.360]  неограниченные, но бесконечные числа. Можно сказать, что мы рассмотрим множество всех пропускных способностей,
[36:30.360 --> 36:37.640]  и нам нет смысла пускать по какому-то ребру число, которое не лежит в этом множестве.
[36:37.640 --> 36:47.880]  Сейчас чего пускать? Что значит нет смысла? Какой тут смысл, куда кого пускать, это еще вопрос.
[36:47.880 --> 37:02.280]  Мы рассмотрим, то есть я так понимаю, идея в чем. Рассмотрим произвольный путь, если рассмотрим его
[37:02.280 --> 37:12.280]  пропускные способности. И вот для данного f какой-то мы f взяли и смотрим. Если при данном f у нас не достигается
[37:12.280 --> 37:23.320]  ни на одном либре, то что f от e равно c от e, что есть в рамках? Нет, ну есть понятно, нет, если существует путь, на котором f от e всегда меньше,
[37:23.320 --> 37:29.760]  чем c от e, то поток можно увеличить, безусловно. Но как бы, но допустим, как бы у нас произошло-то так,
[37:29.760 --> 37:39.800]  что какой бы мы путь не взяли от s до t, и тогда никакой путь так увеличить не получится. И что,
[37:39.920 --> 37:55.360]  следует ли из этого, что он максимальный? Ну правда, это немножко да, потому что мало ли. Хочется,
[37:55.360 --> 38:07.680]  потому что если рассматривать такие потоки, где достигается на любом пути. Ну вообще минимизировать
[38:07.680 --> 38:12.640]  количество вариантов так может не получиться, как минимум там по всяким причинам в духе. Там,
[38:12.640 --> 38:23.200]  допустим, я не знаю, то есть допустим тут 10, 10, 10 и тут допустим 5 пропускные способности. Тогда
[38:23.200 --> 38:27.640]  тут может быть 5 единиц жидкости, но распределять их здесь я могу просто огромным количеством
[38:27.640 --> 38:35.520]  вариантов. Нет, бесконечно. Ну другой вопрос, что да, конечно, с точки зрения задачи о потоке
[38:35.520 --> 38:41.920]  кратные ребра могу, конечно, сжать в одно, но это просто как пример. Потому что это как бы,
[38:41.920 --> 38:46.720]  если вам не нравится кратные ребра, то как бы еще можно лишние векшины увести.
[38:46.720 --> 39:11.760]  Ну да, пи, там, допустим, я говорю е пополам, вот это вот. Но сумма будет больше пяти. Так
[39:11.760 --> 39:18.720]  что все шо угодно может быть. Так что да, помните, да, у нас вы в действительнице. Вот так все же делать.
[39:18.720 --> 39:38.800]  Да, изучим свойства максимального потока и с ним окажем, что он есть.
[39:38.800 --> 39:46.040]  Чаще, по-моему, делают, изучают свойства максимального потока, находят противоречия
[39:46.040 --> 40:00.240]  и доказывают, что его нет скорее. Вау, я не помню такой схемы.
[40:00.240 --> 40:12.840]  А, ну тогда ее в явном виде надо привести тогда. Ну это приводится, но там прямо в явном виде
[40:12.840 --> 40:22.680]  потом приводится, действительно. Не, ну я тут не случайно, как мотоналис все-таки, а не линал.
[40:22.680 --> 40:36.520]  Ну, а почему?
[40:52.680 --> 41:05.560]  Ну, потому что наш потолк может не смотреть.
[41:05.560 --> 41:06.560]  Чего?
[41:06.560 --> 41:11.560]  Если бы там было не столько строгое, то там уже можно было.
[41:11.560 --> 41:12.560]  Чего, чего, чего?
[41:12.560 --> 41:27.560]  Да, боже мой, погодите вы с этим разрезом. Не, все гораздо проще.
[41:27.560 --> 41:39.800]  Да нет, в данном случае все гораздо проще. Заметим, что поток, помимо всего прочего, это вектор из чисел размера Е, правда?
[41:39.800 --> 41:57.800]  Ну, модуль Е, хорошо. Ну, естественно, Е не то, которое там основание литеральных регулиров, а вот это вот.
[41:57.800 --> 41:58.800]  Я понимаю, какое Е.
[41:58.800 --> 42:04.800]  Ну вот, то есть как бы поток мы можем задать просто как бы списком, вот просто для каждого ребра приведя поток.
[42:04.800 --> 42:20.800]  Ну, под множество. Вот, но самое приятное, что множество, я утверждаю, что самое интересное, что множество потоков оно замкнутое.
[42:20.800 --> 42:23.800]  Есть такое подозрение.
[42:23.800 --> 42:25.800]  Вот.
[42:25.800 --> 42:29.800]  Хотя, чтобы сумма потоков прогнялась к потоку.
[42:29.800 --> 42:44.800]  Ну, действительно, просто уже можно заметить следующее, что, предположим, что у вас есть последовательность потоков, которая сходится как вектор В в степени Е.
[42:44.800 --> 42:46.800]  Сходится.
[42:46.800 --> 42:54.800]  Теперь заметим следующее, что у нас, если, что, заметим, что раз она сходится, то сходится потокично.
[42:54.800 --> 42:56.800]  Есть такое.
[42:56.800 --> 42:58.800]  Вот, потокично.
[42:58.800 --> 43:00.800]  Что значит, что сходится потокично?
[43:00.800 --> 43:08.800]  Ну, это значит, что, если рассмотреть последовательность этих векторов, то как бы по каждой позиции мы получаем сходящуюся последовательность.
[43:08.800 --> 43:12.800]  Придел вектор функции это предел координата.
[43:12.800 --> 43:13.800]  Вот.
[43:13.800 --> 43:15.800]  А значит, мы можем взять эти пределы координатные?
[43:15.800 --> 43:16.800]  Ну, да.
[43:16.800 --> 43:17.800]  То есть, можно рассмотреть.
[43:17.800 --> 43:23.800]  И можно, и я утверждаю, что тогда этот предел, как вектор, он тоже будет представлять из себя поток.
[43:23.800 --> 43:26.800]  Прикол.
[43:26.800 --> 43:28.800]  Причем, более того, потока нот.
[43:28.800 --> 43:29.800]  То есть, почему поток?
[43:29.800 --> 43:39.800]  Ну, потому что, во-первых, ну, как бы, если в каждом из векторов последствия вот это было верно, то и в пределе, наверное, это тоже будет верно, потому что сумма конечная.
[43:39.800 --> 43:40.800]  Вот.
[43:40.800 --> 43:49.800]  А самое главное, что если на каждом ребре там все числа были от 0 до C от E, то и предел будет от 0 до C от E.
[43:49.800 --> 43:50.800]  Вот.
[43:50.800 --> 43:53.800]  То есть, получается, что множество потоков замкнуто.
[43:53.800 --> 43:59.800]  Ну, множество потоков замкнуто, и величина потока предела равна, естественно, пределу величин потока.
[43:59.800 --> 44:02.800]  Ну, тоже очевидно, правда?
[44:02.800 --> 44:03.800]  Ну, не особо, но мы так.
[44:03.800 --> 44:04.800]  Что, не очевидно?
[44:04.800 --> 44:05.800]  Да ладно.
[44:05.800 --> 44:08.800]  Вы мотонали сдавали в первом семестре?
[44:08.800 --> 44:17.800]  По-моему, я, конечно, может, плохо представляю, но у меня ощущение, что, по-моему, если это не просто, то у вас должны были на передачу отправлять.
[44:17.800 --> 44:21.800]  Нет?
[44:21.800 --> 44:23.800]  Там какой-то другой магии сдавалось.
[44:23.800 --> 44:24.800]  Странно.
[44:24.800 --> 44:27.800]  Геометрия и кривую ВРН это...
[44:27.800 --> 44:29.800]  Да какая кривая?
[44:29.800 --> 44:30.800]  Ребят, вы чего?
[44:30.800 --> 44:31.800]  Просто...
[44:31.800 --> 44:37.800]  Ну, конечно, можно просто, даже если так, без высоких материй просто работать крестьянским образом.
[44:37.800 --> 44:43.800]  Посмотрим последовательность потоков, величины которой сходятся к этому супремому.
[44:43.800 --> 44:46.800]  Просто последовательность потоков рассмотрим.
[44:46.800 --> 44:52.800]  Теперь заметим, у каждого из этих потоков по первому ребру что-то течет.
[44:52.800 --> 44:58.800]  Эта последовательность ограничена, поэтому из нее можно выбрать сходящуюся под последовательность.
[44:58.800 --> 45:02.800]  Это утверждение из вашего колоколя в первом семестре, если что.
[45:02.800 --> 45:05.800]  Вы его как-то сдали.
[45:05.800 --> 45:06.800]  Вот.
[45:06.800 --> 45:08.800]  Поэтому давайте выберем сходящуюся под последовательность.
[45:08.800 --> 45:09.800]  Все, выкинули.
[45:09.800 --> 45:12.800]  Теперь рассматриваем по второму ребру.
[45:12.800 --> 45:15.800]  Тоже от нее оставляем сходящуюся под последовательность.
[45:15.800 --> 45:16.800]  И так далее.
[45:16.800 --> 45:19.800]  И повторяем эту операцию Е раз.
[45:19.800 --> 45:21.800]  То есть получаем...
[45:21.800 --> 45:27.800]  Получается последовательность потоков, которые, собственно, сходятся куда надо.
[45:27.800 --> 45:33.800]  То есть сходятся по точечно куда надо, и очевидно уже, что это поток и со всеми суммами.
[45:33.800 --> 45:34.800]  Но.
[45:37.800 --> 45:41.800]  То есть на самом деле никаких термин форда Фолкерсона тут не надо.
[45:41.800 --> 45:43.800]  То есть просто вот...
[45:43.800 --> 45:47.800]  Просто совсем базовые соображения с первым семестром от анализа.
[45:52.800 --> 45:53.800]  Как-то, да.
[45:53.800 --> 45:58.800]  Нет, надо подсунуть, потому что на колоколь мне надо такую задать, как упражнение.
[45:58.800 --> 46:02.800]  На колоколь мне будет сильно проще доказать, видимо.
[46:03.800 --> 46:04.800]  Вот.
[46:04.800 --> 46:05.800]  Так вот.
[46:06.800 --> 46:07.800]  Ну хорошо.
[46:07.800 --> 46:09.800]  И так максимальный поток существует.
[46:10.800 --> 46:12.800]  В чем именно как поток, а не как супремум.
[46:13.800 --> 46:15.800]  Но очень хочется его найти.
[46:17.800 --> 46:18.800]  Вот.
[46:19.800 --> 46:24.800]  Ну, действительно, как же это можно было бы делать?
[46:26.800 --> 46:27.800]  Вот.
[46:28.800 --> 46:30.800]  Но на самом деле, да.
[46:33.800 --> 46:34.800]  Как же его можно было...
[46:34.800 --> 46:35.800]  А как его делать?
[46:36.800 --> 46:37.800]  Ну давайте вообще...
[46:37.800 --> 46:38.800]  Ну, начнем думать.
[46:38.800 --> 46:39.800]  Как вообще можно искать поток?
[46:39.800 --> 46:40.800]  Ну в принципе...
[46:41.800 --> 46:42.800]  Смотрите.
[46:42.800 --> 46:43.800]  Начальная идея.
[46:45.800 --> 46:46.800]  Ну вот, хотя...
[46:47.800 --> 46:48.800]  А, ну да.
[46:49.800 --> 46:50.800]  Ну вот.
[46:50.800 --> 46:53.800]  Ну давайте попробуем выжать максимум, действительно, из такого программического подхода.
[46:57.800 --> 46:58.800]  Вот.
[46:58.800 --> 47:00.800]  Ну на самом деле, конечно, первая идея.
[47:00.800 --> 47:01.800]  Как искать максимальный поток?
[47:01.800 --> 47:02.800]  Вот данная сеть.
[47:03.800 --> 47:10.800]  Ну конечно, первый жадник, который возникает, это давайте искать пути от С до Т, вдоль которых можно увеличить поток.
[47:12.800 --> 47:13.800]  То есть вот так вот просто.
[47:13.800 --> 47:15.800]  Если мы нашли поток, вдоль которого там...
[47:16.800 --> 47:22.800]  Путь от С до Т, вдоль которого ребра загружены не по максимуму, то, наверное, логично, что...
[47:24.800 --> 47:25.800]  Вот, например, вот какой-нибудь...
[47:25.800 --> 47:27.800]  А нет, тут такого пути уже следу нету, да?
[47:28.800 --> 47:33.800]  Ну, то очевидно, что тогда давайте вдоль этого пути, значит, увеличим поток и возрадуемся.
[47:36.800 --> 47:37.800]  Но возникает маленькая проблема.
[47:38.800 --> 47:40.800]  Хорошо, вот мы так сделали, обнаружили, что в пути нет.
[47:40.800 --> 47:43.800]  Просто вот очередной ДФС не привел к успеху.
[47:46.800 --> 47:48.800]  Внимание, вопрос.
[47:50.800 --> 47:53.800]  Так, является ли найденный поток максимальным?
[47:57.800 --> 47:58.800]  Да или нет?
[48:03.800 --> 48:04.800]  Ну, интуитивно кажется, что да.
[48:06.800 --> 48:07.800]  Кажется, нет.
[48:08.800 --> 48:09.800]  Так, ооо...
[48:09.800 --> 48:10.800]  Есть контраблименты.
[48:12.800 --> 48:13.800]  Ну да.
[48:13.800 --> 48:18.800]  Потому что, к сожалению, выясняется, что поток иногда можно пустить не оптимально.
[48:19.800 --> 48:23.800]  Хотя да, иногда хочется где-то там перепустить.
[48:24.800 --> 48:26.800]  Ну вот, то есть тут проблема...
[48:26.800 --> 48:30.800]  Вот, например, один из самых классических примеров, вот такой.
[48:31.800 --> 48:32.800]  Смотрите.
[48:42.800 --> 48:44.800]  Ну вот, как тут можно пустить поток?
[48:44.800 --> 48:46.800]  Тут можно его пустить...
[48:47.800 --> 48:48.800]  Ну да, вот так.
[48:49.800 --> 48:54.800]  Тогда обратите внимание, вы просто взять и увеличить этот поток, вы не сможете.
[48:56.800 --> 48:59.800]  Ну потому что ДФС у вас скажет, что по этому ребру идти нельзя.
[48:59.800 --> 49:02.800]  Вот поэтому можно, поэтому можно отсюда выйти некуда.
[49:04.800 --> 49:08.800]  Но тем не менее, как-то есть подозрение, что это мы просто неудачно пустили поток.
[49:08.800 --> 49:11.800]  Мы же могли пустить вот так, так и получить размер 2.
[49:12.800 --> 49:15.800]  Да, поэтому такой поток максимальным не является.
[49:15.800 --> 49:19.800]  Кстати, такой поток называется, кстати, на будущее блокирующим.
[49:23.800 --> 49:24.800]  Блокирующим.
[49:33.800 --> 49:41.800]  То есть это означает, что поток называется блокирующим, если не существует в исходной сети путь от СДТ.
[49:42.800 --> 49:50.800]  То есть не существует пути от СДТ, на каждом ребре которого F от E строго меньше, чем C от E.
[49:52.800 --> 49:53.800]  Ну то есть улучшить.
[49:53.800 --> 49:57.800]  Да, ну то есть так, ну да, что значит улучшить?
[49:57.800 --> 50:00.800]  Улучшить его можно, там типа все снести и построить заново.
[50:01.800 --> 50:05.800]  А вот прям конкретно найти пути вдоль него, что-то пустить, так нельзя.
[50:06.800 --> 50:08.800]  Но тут, правда, вот аккуратно надо всегда провести.
[50:08.800 --> 50:09.800]  Этот поток называется блокирующим.
[50:09.800 --> 50:13.800]  То есть он в некотором смысле является локальным максимумом.
[50:15.800 --> 50:17.800]  Да, он является локальным максимумом.
[50:19.800 --> 50:32.800]  Но действительно, как мы уже на самом деле начали убеждаться, еще одно важное свойство потока заключается в том, что обычно если у нас есть какой-то поток, то его можно декомпозировать на пути.
[50:33.800 --> 50:44.800]  То есть можно еще раз формально блокирующий поток, такой поток, который нельзя увеличить не по какому пути, да?
[50:45.800 --> 50:46.800]  Да, то есть ну да.
[50:47.800 --> 50:56.800]  Ну формально так, не существует пути от СДТ такого, что на каждом из ребер этого пути F от E строго меньше, чем C от E.
[50:57.800 --> 51:00.800]  Но, конечно, это выглядит, конечно, да.
[51:01.800 --> 51:10.800]  То есть как вы как опытные программисты должны, конечно, понимать, что само по себе это, конечно, не означает, что это оптималь, это означает, что конкретно жадно улучшить не получится.
[51:11.800 --> 51:15.800]  Причем не просто жадно улучшить, а улучшить конкретно таким способом.
[51:17.800 --> 51:20.800]  Ну вот, то есть, собственно, видите пример, что само по себе это еще ничего не значит.
[51:20.800 --> 51:25.800]  Хотя, с другой стороны, эта жадность уже означает, на самом деле, больше, чем кажется.
[51:26.800 --> 51:41.800]  Потому что можно заметить в принципе, что нельзя теперь, то есть фактически можно теперь ввести, кстати, эквивалентное определение, что поток называется блокирующим, если нельзя взять некоторые F-ки и улучшить их так, чтобы поток остался потоком.
[51:41.800 --> 51:43.800]  То есть, альтернативное определение два.
[51:44.800 --> 51:56.800]  Поток называется блокирующим, если не существует, если не существует потока строго большей величины, который мажоригует его по каждому ребру.
[52:01.800 --> 52:04.800]  Да, то есть нельзя строго увеличить.
[52:04.800 --> 52:06.800]  Нет, просто потока не существует.
[52:07.800 --> 52:11.800]  Вот, предположим, мы берем поток, иногда можем взять поток и взять некоторые ребра и их увеличить.
[52:12.800 --> 52:13.800]  И так, чтобы поток остался потоком.
[52:14.800 --> 52:22.800]  Так вот, можно сказать, что поток является, до самом деле, блокирующим, если так увеличить, именно увеличить строго нельзя.
[52:22.800 --> 52:24.800]  В чем некоторые ребра, не обязательно все.
[52:26.800 --> 52:30.800]  То есть, легко заметить, что первому определению это полностью эквивалентно.
[52:31.800 --> 52:40.800]  Ну, потому что, заметим, что если вы посмотрите само увеличение, насколько вы все увеличили, то то, что вы увеличили, оно тоже удовлетворяет свойством потока, правда?
[52:40.800 --> 52:50.800]  Ну, а в каждом потоке, ну, а заметим маленькое приятное утверждение, любой поток величины больше нуля, можно декомпозировать на пути.
[52:56.800 --> 52:57.800]  Вот, кстати, еще одна.
[52:57.800 --> 53:04.800]  Ну, а заметим маленькое приятное утверждение, любой поток величины больше нуля, можно декомпозировать на пути.
[53:09.800 --> 53:14.800]  Вот, кстати, еще одно утверждение, которое вам потребуется уже там в третьей задаче домашнего задания.
[53:15.800 --> 53:18.800]  Декомпозировать на произвольные пути?
[53:19.800 --> 53:20.800]  Ну да, то есть, вот вам...
[53:21.800 --> 53:22.800]  Нет, смотрите, дан поток, да?
[53:22.800 --> 53:27.800]  Вот мы в начале уже этим занимались, да? Вот мы хотим выезжать в восемь машин, там, девять машинок, да?
[53:28.800 --> 53:33.800]  Вот мы очень хотим, собственно, для каждой машинки преследить, по какому маршруту она едет.
[53:34.800 --> 53:44.800]  Вот, например, в нашем случае четыре машинки едут вот так, одна машинка, допустим, едет вот таким вот образом, и три машинки еще вот так едут.
[53:45.800 --> 53:46.800]  Вот.
[53:47.800 --> 53:56.800]  Ну, просто это очень странно, декомпозиция, вот, примерно, приводили, когда, значит, СТ, у нас вот здесь просто разделение происходит, а потом обратно мы сломываемся.
[53:57.800 --> 53:58.800]  Ну да, ну и что?
[53:59.800 --> 54:00.800]  Ну, его какая-то там будет декомпозиция.
[54:01.800 --> 54:02.800]  А в чем проблема?
[54:03.800 --> 54:07.800]  Нет, ну декомпозиция просто в данном случае не подразумевает, что каждое ребро лежит только в одном ребре.
[54:08.800 --> 54:09.800]  В одном ребре.
[54:09.800 --> 54:14.800]  То есть это декомпозиция, ну, в смысле, что каждая ребро только в одном пути лежит.
[54:15.800 --> 54:18.800]  То есть как бы мы декомпозируем не ребра, мы декомпозируем поток.
[54:21.800 --> 54:26.800]  Поэтому несколько единиц потока, несколько путей декомпозиции могут проходить через одни и те же ребра вполне.
[54:27.800 --> 54:31.800]  То есть декомпозиция заключается в том, что каждый единиц потока будет находиться в своем пути?
[54:32.800 --> 54:33.800]  Ну типа того, условно.
[54:33.800 --> 54:39.800]  Когда напоминаем, что пути бывают, что бывают какие-нибудь там иррациональные ребры в потоке.
[54:40.800 --> 54:43.800]  Так что поэтому не совсем корректно говорить именно про единицы.
[54:44.800 --> 54:45.800]  Вот.
[54:46.800 --> 54:51.800]  Но в данном случае эта декомпозиция может выглядеть так, что вот у нас есть, смотрите, четыре единицы потока текут так.
[54:52.800 --> 54:55.800]  Одна единица потока течет вот так.
[54:56.800 --> 54:57.800]  Видите, то есть они пересекаются даже.
[54:58.800 --> 55:00.800]  И, допустим, три единицы потока.
[55:03.800 --> 55:04.800]  Нет, не три.
[55:09.800 --> 55:10.800]  Щас.
[55:16.800 --> 55:17.800]  Чего?
[55:18.800 --> 55:19.800]  Щас, погодите.
[55:20.800 --> 55:21.800]  Давайте так.
[55:22.800 --> 55:23.800]  Так, тут мы вроде все адекватно нашли.
[55:24.800 --> 55:25.800]  Тут везде один, да?
[55:26.800 --> 55:27.800]  Так, сколько тут осталось?
[55:28.800 --> 55:29.800]  А, ну поэтому пока одну.
[55:29.800 --> 55:30.800]  Ну да.
[55:31.800 --> 55:35.800]  Получается интересно, что здесь прошло три единицы потока, здесь должно было пройти.
[55:36.800 --> 55:38.800]  Но, правда, оказалось, что это еще не все.
[55:39.800 --> 55:43.800]  Если внимательно посмотреть, то окажется, что вот поэтому ребро прошло четыре из пяти.
[55:44.800 --> 55:46.800]  Потому что, понимаете, мы еще тут запустили вот такой циклик.
[55:49.800 --> 55:50.800]  Ну вот.
[55:51.800 --> 55:58.800]  То есть заветим, на самом деле, поэтому отсюда уже следует, на самом деле, что декомпозировать только на пути у вас поток скорее всего может не получиться, в принципе.
[56:00.800 --> 56:08.800]  Вот, на самом деле, сразу вы можете обратить, кстати, на себя такое интересное внимание, смотрите, на такой вот интересный факт.
[56:11.800 --> 56:12.800]  Вот.
[56:18.800 --> 56:19.800]  Вот обратите внимание.
[56:20.800 --> 56:21.800]  Это тоже поток.
[56:23.800 --> 56:24.800]  Ну, не запущать ничего.
[56:25.800 --> 56:26.800]  Вот, то есть это важно.
[56:26.800 --> 56:32.800]  То есть если из истока ничего не вытекает, это не значит, что ни по какому ребру ничего не течет.
[56:35.800 --> 56:37.800]  То есть, другого вопроса, что величина этого потока, конечно же, ноль.
[56:39.800 --> 56:40.800]  Но факт остаётся фактом.
[56:41.800 --> 56:44.800]  То есть вода не обязана, прям, обязательно вытекать из истока и втекать в исток.
[56:45.800 --> 56:47.800]  Она может вытеки из истока и втеки в него обратно.
[56:48.800 --> 56:52.800]  Может там, вытеки и из истока и вернуться обратно, может вот просто вот по циклу гонять.
[56:52.800 --> 56:58.800]  Вот здесь вы тоже в декомпозиции могли, что есть путь вот такой, и есть вот там одна машинка, которая тут бегает.
[57:00.800 --> 57:08.800]  Поэтому формально говорят не о декомпозиции на пути, но о декомпозиции на пути и циклы.
[57:11.800 --> 57:12.800]  Прятая?
[57:15.800 --> 57:16.800]  Да, нет, наверное.
[57:17.800 --> 57:18.800]  Почему вы точите циклы?
[57:31.800 --> 57:34.800]  Тогда пути будут только из СФТ, а циклы где угодно.
[57:38.800 --> 57:40.800]  Наверное же, что циклы можно выкинуть и поток не уменьшится.
[57:47.800 --> 57:54.800]  Чаще всего, конечно, если у вас задача найти максимальный поток и декомпозировать уже его, то да, то в принципе циклы вы можете не искать.
[57:58.800 --> 58:06.800]  Но на всякий случай, да, стоит только, может быть, существование этой декомпозиции доказать, заодно выясним, сколько у нас в пути и циклов декомпозиции может быть вообще.
[58:08.800 --> 58:09.800]  Но доказательство на самом деле очень простое.
[58:11.800 --> 58:12.800]  Оно же практически алгоритм.
[58:13.800 --> 58:17.800]  То есть, предположим, что из С, например, что-нибудь вытекает, да?
[58:20.800 --> 58:22.800]  Ну, что поток можно декомпозировать.
[58:23.800 --> 58:25.800]  Ну, идея на самом деле очень простая.
[58:27.800 --> 58:29.800]  Значит, ну как будем декомпозировать?
[58:30.800 --> 58:33.800]  Можно даже там без каких-то там заломных соображений.
[58:34.800 --> 58:37.800]  Просто берем вершину С, извините, что-то вытекает, раз поток не нулевой, да?
[58:38.800 --> 58:44.800]  А давайте пойдем ДФСом по ребрам, по которым течет что-то положительное.
[58:45.800 --> 58:46.800]  Вот пойдем, да?
[58:47.800 --> 58:53.800]  Вот будем просто жадно идти в каждой вершине, говорим, что раз в нее что-то входит, значит в нее что-то выходит, потому что вот, да?
[58:54.800 --> 58:56.800]  Это хорошо может произойти.
[58:57.800 --> 59:00.800]  Тогда у нас может быть два разных окончания.
[59:01.800 --> 59:02.800]  Либо мы в какой-то момент тупо придем в вершину Т.
[59:03.800 --> 59:04.800]  Или вершина С.
[59:05.800 --> 59:06.800]  А каким ребрам еще ждем?
[59:07.800 --> 59:09.800]  Вот тем, по которым течет не нулевой поток.
[59:10.800 --> 59:12.800]  Ну, где вот Ф больше нуля.
[59:13.800 --> 59:16.800]  И вот либо мы найдем, либо мы зациклимся.
[59:17.800 --> 59:18.800]  Может быть в вершине С.
[59:19.800 --> 59:21.800]  А может и нет, даже не важно.
[59:22.800 --> 59:25.800]  То есть мы найдем либо путь от С до Т таким образом, либо цикл.
[59:27.800 --> 59:29.800]  Но тогда что с путем вот этим вот?
[59:30.800 --> 59:36.800]  Что с циклом мы в этой ситуации сделаем одну и ту же, один и тот же финт ушами.
[59:37.800 --> 59:40.800]  Давайте рассмотрим все Ф-ки на этом пути.
[59:41.800 --> 59:42.800]  Выберем из них минимум.
[59:43.800 --> 59:45.800]  И скажем, что там минимум.
[59:46.800 --> 59:47.800]  Он там допустим выяснил, что минимум равен два.
[59:48.800 --> 59:50.800]  И скажем, что здесь течет две единицы потока.
[59:51.800 --> 59:53.800]  И вычтем эту двоечку из всех.
[59:54.800 --> 59:56.800]  Понята логика, да?
[59:57.800 --> 59:59.800]  Вот. Ну и из цикла то же самое.
[01:00:00.800 --> 01:00:06.800]  А потом мы и будем так повторять операцию, пока поток из С не закончится.
[01:00:09.800 --> 01:00:12.800]  Вот спрашивается, сколько раз мы будем делать такую операцию?
[01:00:19.800 --> 01:00:21.800]  Хочется сказать, что количество из С, это неверно.
[01:00:22.800 --> 01:00:23.800]  Неверно.
[01:00:29.800 --> 01:00:37.800]  Дело в том, что можно сделать один путь, а можно сделать путь и цикл.
[01:00:38.800 --> 01:00:40.800]  Нет, путь и цикл мы не можем взять.
[01:00:41.800 --> 01:00:42.800]  Не о самом пересекающейся поверхности, да?
[01:00:43.800 --> 01:00:44.800]  Да.
[01:00:45.800 --> 01:00:47.800]  Можно сказать, что в верхней от центра количество лепель управлять.
[01:00:48.800 --> 01:00:49.800]  Ого.
[01:00:50.800 --> 01:00:51.800]  На самом деле да.
[01:00:52.800 --> 01:00:53.800]  Ну потому что мы же...
[01:00:54.800 --> 01:00:55.800]  Ну вот уже.
[01:00:55.800 --> 01:01:01.800]  Да, то есть заметим, что мы берем каждый раз так, что после каждой такой операции хоть на одном ребре у нас поток исчез.
[01:01:10.800 --> 01:01:12.800]  Да, но мы оцениваем не количеством вершин, а количеством ребер.
[01:01:15.800 --> 01:01:18.800]  Ну да, в данном случае бывает, что это еще и точная оценка.
[01:01:19.800 --> 01:01:20.800]  Совершенно верно.
[01:01:21.800 --> 01:01:22.800]  Правильно.
[01:01:22.800 --> 01:01:27.800]  Правда, единственное оговорка, что только из С запускать не получится.
[01:01:30.800 --> 01:01:32.800]  Ну тут по-разному, тут разные могут быть.
[01:01:33.800 --> 01:01:36.800]  Ну да, потому что могут быть не связанные с С циклы.
[01:01:37.800 --> 01:01:39.800]  То есть если полностью поток декомпозируют, то вам придется еще какие-то...
[01:01:40.800 --> 01:01:41.800]  Хорошо, из С все закончилось.
[01:01:42.800 --> 01:01:43.800]  Так, а где-то еще они тривиальные ребра есть?
[01:01:44.800 --> 01:01:47.800]  Если есть, то собственно находим ребро и повторяем операцию.
[01:01:48.800 --> 01:01:49.800]  Ну тут два варианта.
[01:01:50.800 --> 01:01:54.800]  Можно С, можно все входящее в Т, так же абсолютно развлечься.
[01:01:55.800 --> 01:01:58.800]  Вот там тоже будут либо зациклы, либо...
[01:01:59.800 --> 01:02:04.800]  Ну точнее так, если из С уже ничего не вытекает, а в Т что-то втекает, значит там будут какие-то циклы уже.
[01:02:05.800 --> 01:02:11.800]  Вот. Ну так, в общем короче, просто берем ребро и просто идем-идем-идем-идем до тех пор, пока не зациклимся.
[01:02:12.800 --> 01:02:14.800]  Ну там уже, в общем, это уже локальность.
[01:02:14.800 --> 01:02:19.800]  То есть в принципе даже здесь можно заметить, что если у нас произошел зацикл, мы кстати здесь можем не заморачиваться.
[01:02:20.800 --> 01:02:22.800]  Нет, хотя нет, заморачиваться придется.
[01:02:23.800 --> 01:02:24.800]  Иначе...
[01:02:25.800 --> 01:02:31.800]  Ну как сказать, если бы там, ну в частых случаях можно не заморачиваться, например, если все потоки по каждому ребру величины 1.
[01:02:32.800 --> 01:02:34.800]  Кстати, отдельно такой случай мы будем рассматривать.
[01:02:35.800 --> 01:02:36.800]  А?
[01:02:37.800 --> 01:02:43.800]  А мы доказали, что после проделанных операций у нас останутся только пути и циклы.
[01:02:45.800 --> 01:02:46.800]  Ну...
[01:02:50.800 --> 01:02:54.800]  Ну как сказать, ну скажем, в каждый момент времени то, что у нас остается, это корректный поток.
[01:02:55.800 --> 01:02:56.800]  Ну вот.
[01:02:57.800 --> 01:03:03.800]  И дальше тогда мы, на каждом шаге мы находим, вот просто вот этим же одним алгоритм, либо путь, либо цикл.
[01:03:05.800 --> 01:03:11.800]  Поэтому в конце, ну то есть сначала мы, то что у нас останется, во-первых, это будет поток величины ноль.
[01:03:11.800 --> 01:03:20.800]  Ну вот, а в потоке величины ноль, то есть если там какие-то ребра нетривиальные есть, то есть с не нулевым потоком, то мы берем ребро и просто проделываем тот же самый шагик.
[01:03:21.800 --> 01:03:26.800]  Ну типа по принципу, вот жило было ребро, если по нему что-то текет, значит из этой вершины что-то вытекает.
[01:03:27.800 --> 01:03:30.800]  Ну и там тоже, идем-идем-идем и за цикл произойдет.
[01:03:32.800 --> 01:03:33.800]  Вот, собственно, и все.
[01:03:33.800 --> 01:03:38.800]  Так что поэтому, то есть это и, поэтому и получится в итоге, как бы останутся только пути и цикла.
[01:03:40.800 --> 01:03:41.800]  Вот.
[01:03:42.800 --> 01:03:43.800]  Так что вот такая красота.
[01:03:45.800 --> 01:03:46.800]  Вот такая красота.
[01:03:59.800 --> 01:04:00.800]  Вот.
[01:04:01.800 --> 01:04:02.800]  Вот.
[01:04:03.800 --> 01:04:04.800]  Так.
[01:04:05.800 --> 01:04:09.800]  Так что получается любой поток может декомпозировать на пути и циклы.
[01:04:10.800 --> 01:04:24.800]  Из этого автоматически следует, да, что у нас, да, что действительно блокирующий поток, можно просто сказать, что если нельзя найти путь, по которому поток улучшается, то значит и в принципе, и в принципе для того, чтобы поток улучшить, нам что-то в нем придется уменьшать.
[01:04:24.800 --> 01:04:25.800]  Вот.
[01:04:26.800 --> 01:04:27.800]  Такая вот понятная идея, да?
[01:04:30.800 --> 01:04:31.800]  Или нет?
[01:04:32.800 --> 01:04:33.800]  Нет, ну просто смотри.
[01:04:35.800 --> 01:04:36.800]  А вот как?
[01:04:36.800 --> 01:04:39.800]  Ну потому что, предположим, что вы к этому потоку что-то прибавили, остался поток, да?
[01:04:40.800 --> 01:04:43.800]  То, что вы прибавили, это тоже поток, причем не нулевой величины.
[01:04:44.800 --> 01:04:45.800]  А что я прибавил к нему?
[01:04:46.800 --> 01:04:47.800]  Ну.
[01:04:49.800 --> 01:04:50.800]  Ну.
[01:04:50.800 --> 01:04:51.800]  Ну.
[01:04:54.800 --> 01:04:55.800]  Ну то, что его увеличило.
[01:04:56.800 --> 01:04:58.800]  То есть предположим, что мы его как-то жадно увеличили.
[01:04:59.800 --> 01:05:01.800]  Прибавил, видимо, к каждому ребру, ну что-то.
[01:05:02.800 --> 01:05:03.800]  Что значит прибавил к каждому ребру что-то?
[01:05:04.800 --> 01:05:05.800]  Поток, это помнишь?
[01:05:06.800 --> 01:05:07.800]  Поток это функция?
[01:05:08.800 --> 01:05:09.800]  Ну.
[01:05:10.800 --> 01:05:12.800]  Ну мы говорим, что нет, у меня было, у нас было два определения блокирующего потока.
[01:05:13.800 --> 01:05:14.800]  Да.
[01:05:15.800 --> 01:05:16.800]  Может быть, мы доказываем эквалентность.
[01:05:17.800 --> 01:05:18.800]  Хорошо.
[01:05:18.800 --> 01:05:19.800]  Ну окей.
[01:05:21.800 --> 01:05:22.800]  Вот.
[01:05:23.800 --> 01:05:28.800]  То есть мы говорим, то там первое было слабое, что как бы, поток блокирующийся, нельзя найти пути, по которому поток можно увеличить.
[01:05:29.800 --> 01:05:30.800]  Прям вот именно жадно увеличить.
[01:05:31.800 --> 01:05:32.800]  Ну вот есть второе определение.
[01:05:33.800 --> 01:05:38.800]  Поток блокирующийся, его нельзя просто увеличить, там увеличив, там, возможно, как, там, произвольный набор ребер.
[01:05:40.800 --> 01:05:41.800]  Я вот решаю, что это одно и то же.
[01:05:42.800 --> 01:05:43.800]  Да.
[01:05:43.800 --> 01:05:49.800]  Потому что в том, что вы увеличили, можно, то, что вы увеличили, можно декомпозировать на пути цикла и, собственно, выбрать только один путь.
[01:05:50.800 --> 01:05:51.800]  Вот.
[01:05:52.800 --> 01:05:53.800]  Я, собственно, только это говорю.
[01:05:54.800 --> 01:05:55.800]  Ну а теперь вы искали это просто.
[01:05:56.800 --> 01:05:58.800]  Как же все-таки максимальный поток искали?
[01:05:59.800 --> 01:06:00.800]  Ого-го-го.
[01:06:01.800 --> 01:06:02.800]  Вот.
[01:06:03.800 --> 01:06:10.800]  Ну основная идея потом, да, ну конечно, да, то есть понятно, что, то есть, оказывается, все равно продолжает работать жангер, но просто чуть-чуть более хитрый.
[01:06:11.800 --> 01:06:17.800]  Как бы следующая идея заключает в том, что иногда воду можно отменять.
[01:06:18.800 --> 01:06:22.800]  Вот, допустим, у нас вот, например, вот на таком примере течет одна единица жидкости.
[01:06:24.800 --> 01:06:26.800]  А теперь заметим следующее.
[01:06:27.800 --> 01:06:33.800]  Что мы заметим, что если мы, например, хотим по этому ребру отменить поток, да,
[01:06:33.800 --> 01:06:42.800]  то это примерно то же самое, что вот с точки зрения вот в текущей системе отчета, то это то же самое, как пустить единицу потока по, так сказать, наоборот.
[01:06:45.800 --> 01:06:50.800]  То есть мы можем себе вообразить, что мы по этой трубе можем обратно пустить единицу потока.
[01:06:52.800 --> 01:06:54.800]  То есть по факту получится просто отмена.
[01:06:55.800 --> 01:07:05.800]  Но тогда с этой точки, ну вот, то есть вообразим себе, да, что вот мы можем пускать как бы воду не только в ту сторону, если тут не достаточно, но и обратно с целью отмены.
[01:07:07.800 --> 01:07:15.800]  И тогда получается вот что. То есть получается в данном случае, что, то есть можно вообразить себе примерно следующее.
[01:07:17.800 --> 01:07:21.800]  То есть, то есть, допустим, что можно с этой точки зрения сделать?
[01:07:21.800 --> 01:07:28.800]  Ну, мы замечаем, что теперь мы понимаем, что мы можем вот в эту сторону пустить единицу потока, да?
[01:07:30.800 --> 01:07:40.800]  Вот, в эту все еще пустить единицу потока. В эту единицу, видите? Тут три Criminal Pr haut tight не magnifies, вот здесь очень интересно.
[01:07:41.800 --> 01:07:47.800]  Здесь можно пустить единицу потока, здесь пустить единицу потока, и здесь пустить единицу потока.
[01:07:48.800 --> 01:07:50.800]  И самое интересное, видите, вот пустить единицу потока сюда.
[01:07:51.800 --> 01:07:55.320]  вот такая интересная вещь то есть это вот если мы разрешаем себе так отменить
[01:07:55.320 --> 01:08:01.240]  и мы замечаем что тут уже путь а тест да ты существует
[01:08:04.480 --> 01:08:10.360]  о не удивительно ну потому что на самом деле теория по рассочетания это
[01:08:10.360 --> 01:08:14.800]  прямое следствие вот этой все теории на самом деле такой простой да и
[01:08:14.800 --> 01:08:18.880]  возможно сегодня мы это даже еще и увидим потому что на самом деле да
[01:08:18.880 --> 01:08:25.840]  алгоритм куна это просто упихан умятая обеими ногами собственно на самом деле
[01:08:25.840 --> 01:08:29.800]  просто там метод форда фолкерсона
[01:08:29.800 --> 01:08:52.120]  это скорее унесет конечно это все-таки поток вот и так значит помпом помпом
[01:08:52.120 --> 01:08:58.240]  но вот получается что вот улучшить можно и в данном случае это то есть можно получить так сказать
[01:08:58.240 --> 01:09:03.200]  пустить такой поток по факту получится что мы ну по факту получится что вот видите на
[01:09:03.200 --> 01:09:14.280]  этом ребре у нас получилась отмена но поток и поток улучшился что нет почему эти мы не
[01:09:14.280 --> 01:09:34.080]  отменяем обратите внимание сейчас чего мы сверху нет мы не разворачивали поток на
[01:09:34.080 --> 01:09:40.000]  самом деле тут очень тут смотрите как это мы не разворачивали поток рыжий граф нужен был нам
[01:09:40.000 --> 01:09:44.560]  чтобы просто нарисовать что предположим что мы можем пустить поток как в смысле вот пустить
[01:09:44.560 --> 01:09:51.720]  поток по ребру там типа если у него не даст еще можно что-то пустить так и отменить поток мы
[01:09:51.720 --> 01:10:06.800]  этот рыжий только с этой точки зрения нарисовали обнаружили вот этот путь вот вот поэтому мы по
[01:10:07.520 --> 01:10:15.900]  это пропуск нет это пропускные способности на сколько-то сколько мы можем
[01:10:15.900 --> 01:10:23.320]  пустить то есть понятно что эта штука изменилась теперь после того как мы вот это проделали
[01:10:23.320 --> 01:10:29.120]  теперь вот 4-й теперь давайте вот теперь вот теперь у нас поток вот такой да то есть давайте
[01:10:29.120 --> 01:10:34.960]  вот то есть режим я сейчас показал чем мы изменили да а теперь представим себе вот наоборот что
[01:10:34.960 --> 01:10:37.960]  Давайте теперь представим, что так и произошло.
[01:10:41.960 --> 01:10:43.960]  Вот, смотрите.
[01:10:45.960 --> 01:10:47.960]  Получается примерно следующее.
[01:10:47.960 --> 01:10:50.960]  Получилось, теперь распад меняли.
[01:10:50.960 --> 01:10:55.960]  Получается 0, 1, 1, 1, 1, 1.
[01:10:55.960 --> 01:10:57.960]  Вот такая радость.
[01:10:58.960 --> 01:11:03.960]  То есть мы просто пустили путь, но если мы идем в другом направлении, мы вычитаем 1?
[01:11:03.960 --> 01:11:05.960]  Ну, типа того, да.
[01:11:05.960 --> 01:11:07.960]  То есть вот такой еще дополнительный жадник.
[01:11:09.960 --> 01:11:13.960]  И теперь заметим, что к этой штуке тоже можно применить такой же жадник.
[01:11:13.960 --> 01:11:15.960]  То есть нарисовать вот такую штуку.
[01:11:20.960 --> 01:11:22.960]  Вот такая штука получается.
[01:11:22.960 --> 01:11:23.960]  Вот такая.
[01:11:23.960 --> 01:11:26.960]  То есть это я пишу пропускные способности тут.
[01:11:26.960 --> 01:11:31.960]  И обнаружил, что на этот раз путей из СПТ нет.
[01:11:33.960 --> 01:11:35.960]  Даже в этой штуке.
[01:11:38.960 --> 01:11:39.960]  Направление.
[01:11:39.960 --> 01:11:41.960]  Не, все изменилось.
[01:11:41.960 --> 01:11:44.960]  Все рёбра, они справа налево идут.
[01:11:48.960 --> 01:11:52.960]  Центральная, наоборот, тут оно шло вверх, тут оно вернулось на место.
[01:11:54.960 --> 01:11:56.960]  Ну вот, это в единичной.
[01:11:56.960 --> 01:11:59.960]  Я не понял, как мы вообще все это строим.
[01:11:59.960 --> 01:12:03.960]  То есть оранжевый граф получился из исходного?
[01:12:03.960 --> 01:12:05.960]  Мы просто посмотрели.
[01:12:05.960 --> 01:12:07.960]  Нет, важно, что оранжевый граф получился.
[01:12:07.960 --> 01:12:12.960]  Чтобы получить оранжевый граф, нужно не только сеть, но и какой-то поток в ней.
[01:12:13.960 --> 01:12:15.960]  Ну да, потому что мы видим этот поток.
[01:12:15.960 --> 01:12:17.960]  И его рёбра разворачиваем.
[01:12:18.960 --> 01:12:20.960]  Нет, нет, нет.
[01:12:20.960 --> 01:12:24.960]  Вот тут важно, потому что тут, к сожалению, это не совсем точный пример.
[01:12:25.960 --> 01:12:26.960]  Почему они точили?
[01:12:26.960 --> 01:12:29.960]  Потому что здесь только единичные рёбры.
[01:12:30.960 --> 01:12:33.960]  Потому что если мы возьмём вот эту штуку, давайте вот эту сеть возьмём.
[01:12:35.960 --> 01:12:42.960]  Вот нам, кстати, очень хочется выяснить, вот тот поток, который мы тут сейчас нашли, он максимален или нет?
[01:12:47.960 --> 01:12:48.960]  Да, верхний.
[01:12:48.960 --> 01:12:50.960]  Тут бы ещё сеть видеть, честно говоря.
[01:12:51.960 --> 01:12:53.960]  Там вообще бы что-нибудь видеть.
[01:12:55.960 --> 01:12:57.960]  Я пока не угадаю, как мы это делаем.
[01:12:58.960 --> 01:13:00.960]  Ну, значит, вот смотрите, сейчас вы более точные.
[01:13:01.960 --> 01:13:02.960]  Сейчас ведём обратные рёбры.
[01:13:03.960 --> 01:13:04.960]  Да, погодите.
[01:13:05.960 --> 01:13:09.960]  Кто-то хочет сначала интуитивно понять, что мы хотим, а потом уже там вводить формализм.
[01:13:10.960 --> 01:13:11.960]  Я хочу так.
[01:13:11.960 --> 01:13:17.960]  Я могу, конечно, просто написать определение этого оранжевого графа, сказать два слова, как оно на самом деле называется в науке.
[01:13:21.960 --> 01:13:22.960]  Значит, смотрите.
[01:13:24.960 --> 01:13:25.960]  Так, ну давайте нот.
[01:13:27.960 --> 01:13:28.960]  Так, ну давайте посмотрим.
[01:13:29.960 --> 01:13:31.960]  Сейчас давайте синеньким нарисую то, что было коричневое.
[01:13:35.960 --> 01:13:36.960]  Так.
[01:13:43.960 --> 01:13:44.960]  Ну можно, конечно.
[01:13:48.960 --> 01:13:50.960]  Это новый заляпанный граф.
[01:13:51.960 --> 01:13:52.960]  Ну допустим.
[01:13:53.960 --> 01:13:55.960]  Так, вот тут шесть, тут семь.
[01:13:56.960 --> 01:13:57.960]  Сверху шесть.
[01:13:58.960 --> 01:13:59.960]  А ещё четыре было.
[01:14:01.960 --> 01:14:02.960]  Я граф рисую исходно.
[01:14:03.960 --> 01:14:04.960]  Это другой вопрос.
[01:14:05.960 --> 01:14:06.960]  Нет, пускали мы по вот этому ребру, во-первых.
[01:14:07.960 --> 01:14:08.960]  А в тексте вы просили перерисовать.
[01:14:09.960 --> 01:14:10.960]  Я его сейчас полностью перерисую.
[01:14:11.960 --> 01:14:12.960]  И мы будем идём искать максимальный поток.
[01:14:13.960 --> 01:14:14.960]  Может быть даже заново.
[01:14:15.960 --> 01:14:16.960]  Вот, значит, что тут у нас?
[01:14:17.960 --> 01:14:18.960]  Тут тоже четыре.
[01:14:18.960 --> 01:14:19.960]  Как это да?
[01:14:20.960 --> 01:14:21.960]  Как это?
[01:14:22.960 --> 01:14:23.960]  Сколько колёс у нашего автомобиля?
[01:14:24.960 --> 01:14:25.960]  Четыре?
[01:14:26.960 --> 01:14:27.960]  Почему?
[01:14:28.960 --> 01:14:29.960]  С этой тут четыре написано.
[01:14:30.960 --> 01:14:31.960]  В смысле?
[01:14:32.960 --> 01:14:33.960]  А, в этом плане.
[01:14:34.960 --> 01:14:35.960]  Ну да, ну да.
[01:14:36.960 --> 01:14:37.960]  Так.
[01:14:49.960 --> 01:14:50.960]  Ну ладно, как там да?
[01:14:51.960 --> 01:14:52.960]  Сколько да?
[01:14:53.960 --> 01:14:54.960]  Сколько может быть да?
[01:15:01.960 --> 01:15:02.960]  Так.
[01:15:03.960 --> 01:15:04.960]  Тут два.
[01:15:05.960 --> 01:15:07.960]  Тут что там ещё у нас есть?
[01:15:08.960 --> 01:15:09.960]  Так, что-то пятачок какой-то.
[01:15:11.960 --> 01:15:12.960]  Значит пятачок.
[01:15:13.960 --> 01:15:14.960]  Так.
[01:15:15.960 --> 01:15:16.960]  Ой.
[01:15:17.960 --> 01:15:18.960]  Тут что-то не хватает.
[01:15:19.960 --> 01:15:20.960]  А, тут вот.
[01:15:23.960 --> 01:15:24.960]  Семинары.
[01:15:25.960 --> 01:15:26.960]  О.
[01:15:27.960 --> 01:15:28.960]  О.
[01:15:29.960 --> 01:15:30.960]  Ну вот.
[01:15:31.960 --> 01:15:32.960]  Ну.
[01:15:33.960 --> 01:15:34.960]  Так что давайте будем искать.
[01:15:35.960 --> 01:15:36.960]  А там ещё обратно.
[01:15:37.960 --> 01:15:38.960]  Где?
[01:15:39.960 --> 01:15:40.960]  А, вот.
[01:15:41.960 --> 01:15:42.960]  А, да.
[01:15:43.960 --> 01:15:44.960]  Там ещё.
[01:15:44.960 --> 01:15:45.960]  Там ещё вот.
[01:15:46.960 --> 01:15:47.960]  А.
[01:15:48.960 --> 01:15:49.960]  А, вот это вот.
[01:15:50.960 --> 01:15:52.960]  Было, было, дело было.
[01:15:53.960 --> 01:15:54.960]  Да.
[01:15:55.960 --> 01:15:56.960]  Ну ноль конечно да.
[01:15:57.960 --> 01:15:58.960]  Давайте поменять.
[01:15:59.960 --> 01:16:00.960]  Давайте его выкинем.
[01:16:01.960 --> 01:16:02.960]  Да, давайте его выкинем.
[01:16:03.960 --> 01:16:04.960]  Ой.
[01:16:05.960 --> 01:16:06.960]  Нет, что-то правда.
[01:16:07.960 --> 01:16:08.960]  Да, давайте ещё это ребро выкинем,
[01:16:09.960 --> 01:16:10.960]  потому что оно явно бессмысленное.
[01:16:11.960 --> 01:16:12.960]  Нет, ну это точно бессмысленно.
[01:16:12.960 --> 01:16:13.960]  Ну там-то мы цикл пустим.
[01:16:14.960 --> 01:16:15.960]  А, ну мы не пустим.
[01:16:16.960 --> 01:16:18.960]  Нет, то в жагнике, который мы сейчас хотим запускать,
[01:16:19.960 --> 01:16:20.960]  мы его не пустим, да.
[01:16:21.960 --> 01:16:24.960]  Так что прям эту семёрку тоже можно убирать спокойно,
[01:16:25.960 --> 01:16:26.960]  на самом деле.
[01:16:27.960 --> 01:16:28.960]  Ну, либо...
[01:16:29.960 --> 01:16:30.960]  Нет, ладно, давайте так.
[01:16:31.960 --> 01:16:32.960]  Ну да.
[01:16:33.960 --> 01:16:34.960]  Да, тогда эти ребра можно сократить.
[01:16:36.960 --> 01:16:37.960]  У нас совсем новый жагник.
[01:16:39.960 --> 01:16:40.960]  Нет, ну такие соображения есть,
[01:16:40.960 --> 01:16:41.960]  но они быстро заканчиваются.
[01:16:42.960 --> 01:16:43.960]  Жалко, жалко.
[01:16:44.960 --> 01:16:45.960]  Вот, значит, поехали.
[01:16:46.960 --> 01:16:47.960]  Попробуем.
[01:16:48.960 --> 01:16:50.960]  Ну да, сначала пытаемся пойти каким-нибудь жадным путём,
[01:16:51.960 --> 01:16:52.960]  но жадный путь он, там, ДФС,
[01:16:53.960 --> 01:16:55.960]  как говорится, неисповедимый пути ДФСа,
[01:16:56.960 --> 01:16:57.960]  как говорится.
[01:16:58.960 --> 01:16:59.960]  Так.
[01:17:00.960 --> 01:17:03.960]  И поэтому запускаем ДФС и запускаем две единицы потока
[01:17:04.960 --> 01:17:05.960]  вот по такому пути.
[01:17:06.960 --> 01:17:07.960]  Например.
[01:17:08.960 --> 01:17:09.960]  Так, ну давайте думать.
[01:17:10.960 --> 01:17:13.960]  Что, что ещё из этого можно выжать?
[01:17:14.960 --> 01:17:15.960]  Делаем обычный жадник без обрата.
[01:17:16.960 --> 01:17:18.960]  Ну пока давайте просто для разминочки просто жагник.
[01:17:19.960 --> 01:17:20.960]  Значит, пока просто...
[01:17:21.960 --> 01:17:22.960]  По самому верху пустим.
[01:17:23.960 --> 01:17:24.960]  А, давайте прямо по самому верху, да.
[01:17:25.960 --> 01:17:27.960]  Давайте просто три единицы потока пустим.
[01:17:28.960 --> 01:17:29.960]  Три.
[01:17:30.960 --> 01:17:31.960]  Ну мы и пустим.
[01:17:32.960 --> 01:17:33.960]  Нет, ну там, в смысле, пять будет.
[01:17:34.960 --> 01:17:35.960]  Да, как...
[01:17:36.960 --> 01:17:37.960]  Как говорит водитель, у тебя сколько классов образования?
[01:17:38.960 --> 01:17:39.960]  Пять.
[01:17:40.960 --> 01:17:41.960]  Пять.
[01:17:42.960 --> 01:17:43.960]  Не знаю, что это значит, но вот.
[01:17:44.960 --> 01:17:45.960]  Вот.
[01:17:46.960 --> 01:17:47.960]  Ну да.
[01:17:48.960 --> 01:17:49.960]  Должен.
[01:17:50.960 --> 01:17:51.960]  Раз же целых пять классов должен пустить.
[01:17:52.960 --> 01:17:53.960]  Не, не.
[01:17:54.960 --> 01:17:55.960]  Вот у нас ещё по низу можно пустить.
[01:17:56.960 --> 01:17:57.960]  Вот там ещё один по низу.
[01:17:58.960 --> 01:17:59.960]  Ааа.
[01:18:00.960 --> 01:18:01.960]  Там ещё единичку можно пустить.
[01:18:02.960 --> 01:18:03.960]  Сначала...
[01:18:04.960 --> 01:18:05.960]  Ой, сейчас, погодите.
[01:18:06.960 --> 01:18:07.960]  А, у меня что-то...
[01:18:08.960 --> 01:18:09.960]  А, ну если это ребро сюда идёт, то да.
[01:18:10.960 --> 01:18:11.960]  Так, ладно, давайте вот так пустим.
[01:18:12.960 --> 01:18:13.960]  И давайте что-нибудь ещё тут.
[01:18:14.960 --> 01:18:15.960]  Ну давайте, давай, что-нибудь тупое.
[01:18:16.960 --> 01:18:17.960]  Один.
[01:18:18.960 --> 01:18:19.960]  Один, совсем один.
[01:18:20.960 --> 01:18:21.960]  Так, три, три, один.
[01:18:22.960 --> 01:18:23.960]  Вроде сходится.
[01:18:24.960 --> 01:18:25.960]  Да.
[01:18:26.960 --> 01:18:27.960]  Так, что ещё можно сделать?
[01:18:28.960 --> 01:18:29.960]  Ну давайте, да.
[01:18:30.960 --> 01:18:37.960]  Если запустить ДФС по ребрам, по которым ещё можно что-то пустить, то как бы мы доходим сюда-сюда, ну в смысле сюда, потом доходим сюда и тут.
[01:18:37.960 --> 01:18:39.960]  Так, такой жадник уже перестал работать.
[01:18:40.960 --> 01:18:41.960]  Ну давайте посмотрим.
[01:18:42.960 --> 01:18:43.960]  Цикл мы не пускаем, да.
[01:18:44.960 --> 01:18:45.960]  Цикл, ну, заметим, да, цикл бесполезно.
[01:18:46.960 --> 01:18:51.960]  Заметим, если вы у вас в потоке нашли цикл, вы можете отменить по этому циклу поток, и величина потока от этого не поменяется.
[01:18:52.960 --> 01:18:53.960]  То есть как бы...
[01:18:54.960 --> 01:18:57.960]  Нет, просто у нас есть цикл из С в С, чтобы добавить поток.
[01:18:58.960 --> 01:19:00.960]  Да, но величина от потока от этого не поменяется.
[01:19:01.960 --> 01:19:02.960]  Да, так что как бы...
[01:19:02.960 --> 01:19:04.960]  То есть поэтому давайте эти коррупционные схемы мы оставим.
[01:19:05.960 --> 01:19:06.960]  Вот.
[01:19:07.960 --> 01:19:08.960]  Ну а теперь давайте думать.
[01:19:09.960 --> 01:19:10.960]  Как мы нарисуем?
[01:19:11.960 --> 01:19:12.960]  По каким ребрам что ещё можно пускать?
[01:19:13.960 --> 01:19:15.960]  Ну, значит, смотрите, давайте если я нарисую те же вершины.
[01:19:16.960 --> 01:19:17.960]  Абсолютно те же, обратите внимание.
[01:19:19.960 --> 01:19:20.960]  Вот, совсем те же.
[01:19:21.960 --> 01:19:22.960]  Вот, вот и вот.
[01:19:23.960 --> 01:19:24.960]  А теперь смотрим, смотрите.
[01:19:25.960 --> 01:19:26.960]  По этому ребру.
[01:19:27.960 --> 01:19:29.960]  Сюда мы ничего не пустим, а по этому ребру мы не пустим.
[01:19:29.960 --> 01:19:30.960]  По этому ребру.
[01:19:31.960 --> 01:19:33.960]  Сюда мы ничего не пустим, а по этому ребру пустим пять.
[01:19:34.960 --> 01:19:36.960]  Вот это ребро начинает быть самым интересным.
[01:19:37.960 --> 01:19:39.960]  Мы по нему можем пустить три единицы потока.
[01:19:40.960 --> 01:19:41.960]  Ещё вперёд.
[01:19:42.960 --> 01:19:43.960]  А можем отменить три единицы потока.
[01:19:44.960 --> 01:19:46.960]  Поэтому мы нарисуем и то, и то.
[01:19:49.960 --> 01:19:51.960]  Это мне очень интересно, что там происходит.
[01:19:52.960 --> 01:19:53.960]  Я не знаю.
[01:19:54.960 --> 01:19:56.960]  А нельзя ли это ребро...
[01:19:56.960 --> 01:19:57.960]  Ну...
[01:19:58.960 --> 01:19:59.960]  Сейчас, погодите.
[01:20:00.960 --> 01:20:01.960]  Есть ещё вот это кратное ребро.
[01:20:02.960 --> 01:20:04.960]  У него там просто четыре, а обратно проводить нет резона.
[01:20:05.960 --> 01:20:06.960]  Вот.
[01:20:07.960 --> 01:20:08.960]  Можно хорошие провести.
[01:20:09.960 --> 01:20:11.960]  Но сейчас давайте мы хотя бы нашего жадника посмотрим.
[01:20:12.960 --> 01:20:16.960]  Тут значит у нас сюда четыре и сюда три, потому что можно отменить.
[01:20:17.960 --> 01:20:18.960]  Вот.
[01:20:19.960 --> 01:20:21.960]  Так, значит ещё пара двоек.
[01:20:22.960 --> 01:20:23.960]  Что-то у нас тут всё по половинкам два-два.
[01:20:24.960 --> 01:20:25.960]  Но это совпадение, что числа одинаковые.
[01:20:26.960 --> 01:20:27.960]  Числа разные.
[01:20:28.960 --> 01:20:29.960]  У нас ещё будут...
[01:20:30.960 --> 01:20:31.960]  А, ну вот тут всё вверх.
[01:20:32.960 --> 01:20:33.960]  Тут сколько у нас получается?
[01:20:34.960 --> 01:20:35.960]  Нолик.
[01:20:36.960 --> 01:20:37.960]  Нет, такие наброцкие.
[01:20:38.960 --> 01:20:39.960]  Да, сюда два.
[01:20:40.960 --> 01:20:41.960]  Так, тут у нас что?
[01:20:42.960 --> 01:20:43.960]  Сюда три.
[01:20:44.960 --> 01:20:45.960]  Нет, сюда два.
[01:20:46.960 --> 01:20:47.960]  Пять минус три.
[01:20:48.960 --> 01:20:49.960]  А три как раз наоборот.
[01:20:50.960 --> 01:20:51.960]  Это если очень кто-то хочет что-то поотменить.
[01:20:52.960 --> 01:20:53.960]  Так, тут четыре.
[01:20:54.960 --> 01:20:55.960]  Тут три.
[01:20:56.960 --> 01:20:57.960]  Ну что?
[01:20:58.960 --> 01:20:59.960]  Не обратно.
[01:21:00.960 --> 01:21:01.960]  Так, ещё я тут шестёрочку забыл.
[01:21:02.960 --> 01:21:03.960]  Ещё три и один.
[01:21:04.960 --> 01:21:05.960]  Да, один ещё.
[01:21:06.960 --> 01:21:07.960]  Ну и конечно её величество.
[01:21:08.960 --> 01:21:09.960]  Вот.
[01:21:10.960 --> 01:21:11.960]  Да, и вот то ещё которое.
[01:21:12.960 --> 01:21:13.960]  Третье сверху.
[01:21:14.960 --> 01:21:15.960]  А, там ещё два.
[01:21:16.960 --> 01:21:17.960]  Вот это и вот это забыли.
[01:21:18.960 --> 01:21:19.960]  Три и тут два.
[01:21:20.960 --> 01:21:21.960]  А там ещё четвёрочку написали.
[01:21:22.960 --> 01:21:23.960]  Где?
[01:21:24.960 --> 01:21:25.960]  Третье сверху.
[01:21:26.960 --> 01:21:27.960]  Вот.
[01:21:28.960 --> 01:21:29.960]  Вот.
[01:21:30.960 --> 01:21:32.960]  Вот мы нарисовали граф всех отмен.
[01:21:33.960 --> 01:21:34.960]  Внимание!
[01:21:35.960 --> 01:21:36.960]  Вопрос.
[01:21:37.960 --> 01:21:40.960]  Можем ли мы что-то из этого выжить?
[01:21:43.960 --> 01:21:44.960]  Ну давайте внимательно смотреть.
[01:21:45.960 --> 01:21:49.960]  Как бы есть такая сложная технология 75-го года как DFS?
[01:21:51.960 --> 01:21:54.960]  Ну ладно, на самом деле не уверен, что технология скорее всего...
[01:21:54.960 --> 01:21:56.960]  Нет, технология это видимо известно было сильно раньше.
[01:21:57.960 --> 01:22:00.960]  Там едва ли не в XIX веке упоминания есть, но в каких-то контекстах.
[01:22:01.960 --> 01:22:02.960]  Но есть статья Тарьяна.
[01:22:03.960 --> 01:22:04.960]  Правда в ней сразу есть DFS, а в ней...
[01:22:05.960 --> 01:22:06.960]  Ну давайте что-нибудь простое сделаем.
[01:22:07.960 --> 01:22:08.960]  Например, найдём компоненты вершины двусвязности.
[01:22:09.960 --> 01:22:10.960]  Вот.
[01:22:11.960 --> 01:22:12.960]  А потом...
[01:22:13.960 --> 01:22:14.960]  А давайте ещё компоненты сильной связности найдём.
[01:22:15.960 --> 01:22:16.960]  Вот.
[01:22:17.960 --> 01:22:18.960]  Давайте будет у нас белый, серый, чёрный, фиолетовый.
[01:22:19.960 --> 01:22:20.960]  В общем, статью рекомендую.
[01:22:21.960 --> 01:22:22.960]  Там весело.
[01:22:22.960 --> 01:22:23.960]  Как мы можем пустить потом два?
[01:22:24.960 --> 01:22:25.960]  Ну по веку.
[01:22:26.960 --> 01:22:27.960]  По какому веку?
[01:22:28.960 --> 01:22:29.960]  Из S или B6.
[01:22:30.960 --> 01:22:31.960]  Так, да.
[01:22:32.960 --> 01:22:33.960]  И туда по 4, например.
[01:22:34.960 --> 01:22:35.960]  Ну, например, да.
[01:22:36.960 --> 01:22:37.960]  Обратите внимание на маленькую приятную вещь.
[01:22:38.960 --> 01:22:39.960]  Да, можно так.
[01:22:40.960 --> 01:22:41.960]  Ну, можно так, можно и так, неважно.
[01:22:42.960 --> 01:22:43.960]  Не суть, конечно.
[01:22:44.960 --> 01:22:45.960]  Да, то есть оказывается...
[01:22:46.960 --> 01:22:50.960]  Это наш любимый режиграф показал нам, что есть ещё что выжимать.
[01:22:51.960 --> 01:22:54.960]  То есть по факту, правда, это будет работать по принципу...
[01:22:55.960 --> 01:22:56.960]  Вот действительно, что мы тут...
[01:22:57.960 --> 01:22:58.960]  То есть раз мы нашли вот этот вот путь.
[01:22:59.960 --> 01:23:00.960]  Там условно.
[01:23:01.960 --> 01:23:02.960]  Пум-пум-пум-пум-пум-пум-пум-пум.
[01:23:03.960 --> 01:23:05.960]  То значит, по факту, значит, надо пойти сюда.
[01:23:06.960 --> 01:23:08.960]  Значит, давайте тут я вот реженьким напишу два.
[01:23:10.960 --> 01:23:12.960]  Тут найти и тут четыре.
[01:23:13.960 --> 01:23:14.960]  А наоборот, ноль.
[01:23:15.960 --> 01:23:16.960]  Отменили, потому что.
[01:23:17.960 --> 01:23:18.960]  Тут мы...
[01:23:18.960 --> 01:23:19.960]  Вот тут два и тут пятачок.
[01:23:22.960 --> 01:23:23.960]  Вот, кайф.
[01:23:25.960 --> 01:23:26.960]  Можно ли сделать что-то ещё?
[01:23:27.960 --> 01:23:28.960]  Но для этого нам нужно модифицировать режиграф.
[01:23:29.960 --> 01:23:36.960]  Потому что режиграф, напоминаю, зависит не только от, собственно, самоисходной сети, но и потока, который в ней течёт.
[01:23:37.960 --> 01:23:42.960]  Здесь получается шесть превращается в четыре, и появляется вот такое мистическое ребро.
[01:23:43.960 --> 01:23:44.960]  Такой напарник с двоечкой.
[01:23:44.960 --> 01:23:45.960]  Вот.
[01:23:46.960 --> 01:23:47.960]  Что там у нас ещё?
[01:23:48.960 --> 01:23:51.960]  Вот здесь заметим, что, значит, мы тут что-то отменяли.
[01:23:52.960 --> 01:23:54.960]  То есть, поэтому получается, что вот это ребро исчезает.
[01:23:55.960 --> 01:23:57.960]  А в ответ получается вот такое четыре.
[01:23:58.960 --> 01:23:59.960]  Вот.
[01:24:00.960 --> 01:24:02.960]  Здесь получается два-два.
[01:24:03.960 --> 01:24:05.960]  Вот так и напарник два.
[01:24:06.960 --> 01:24:10.960]  И здесь получается вот было четыре-три, стало два-пять.
[01:24:11.960 --> 01:24:12.960]  Стало два-пять.
[01:24:13.960 --> 01:24:15.960]  Так, ну чё?
[01:24:16.960 --> 01:24:18.960]  Ну что, чё-нибудь выжить можно?
[01:24:36.960 --> 01:24:37.960]  Ну да.
[01:24:37.960 --> 01:24:42.960]  Ну да, потому что да, мы можем дойти сюда, можем дойти отсюда, никуда не выйдешь.
[01:24:43.960 --> 01:24:45.960]  Можно дойти сюда и сюда, отсюда тоже уже.
[01:24:46.960 --> 01:24:47.960]  Кроме этой векшины никуда не выйдешь.
[01:24:48.960 --> 01:24:49.960]  Да.
[01:24:50.960 --> 01:24:51.960]  Что это значит?
[01:24:52.960 --> 01:24:54.960]  Значит ли это, что мы нашли максимальный поток?
[01:25:01.960 --> 01:25:03.960]  Ну да, пока вообще не очевидно.
[01:25:04.960 --> 01:25:05.960]  Ну вот.
[01:25:05.960 --> 01:25:06.960]  Ну вот.
[01:25:07.960 --> 01:25:11.960]  Ну на самом деле да, вообще говоря, вот это, почти вот это вот называется остаточная сеть.
[01:25:12.960 --> 01:25:13.960]  Можно даже её так называть.
[01:25:14.960 --> 01:25:19.960]  Хотя, ну в идеале конечно на реальной практике всё-таки, когда вы будете это реально кодить,
[01:25:20.960 --> 01:25:21.960]  то есть на самом деле у вас все напарники вот тут будут.
[01:25:22.960 --> 01:25:25.960]  На самом деле я буду нарисовать все вот эти ребра и сказать, что тут ноль.
[01:25:29.960 --> 01:25:30.960]  Вот.
[01:25:30.960 --> 01:25:35.960]  То есть это просто, чтобы я сейчас напишу формальное определение, которое будет максимально этой картинке соответствовать.
[01:25:37.960 --> 01:25:39.960]  Так вот, вот так вот, вот это вот всё.
[01:25:41.960 --> 01:25:42.960]  Вот.
[01:26:01.960 --> 01:26:06.960]  Ну если нет, если найдется путь от СДТ, который проходит через это ребро, ну как бы да, придется улучшать.
[01:26:07.960 --> 01:26:08.960]  Улучшать.
[01:26:09.960 --> 01:26:10.960]  Ну тут как повезёт. Дело в том, что максимальных потоков, как бы те, где…
[01:26:11.960 --> 01:26:13.960]  Не, после того, что когда мы почитаем, когда мы улучшаем.
[01:26:14.960 --> 01:26:15.960]  Чего, когда…
[01:26:16.960 --> 01:26:19.960]  Когда мы вычитаем из исходного драка, когда мы к нему добавляем что-то.
[01:26:20.960 --> 01:26:25.960]  То есть когда мы проходим по ребру, по развёрнутой поток…
[01:26:26.960 --> 01:26:29.960]  Да, ну как бы тогда у него поток-то уменьшается.
[01:26:30.960 --> 01:26:32.960]  А когда дальше пускаем, то как бы он увеличивается.
[01:26:33.960 --> 01:26:35.960]  Ну вот. Но определение может звучать так.
[01:26:38.960 --> 01:26:39.960]  Значит, смотрите.
[01:26:45.960 --> 01:26:48.960]  Ну вот, на самом деле звучит это примерно следующим образом.
[01:26:53.960 --> 01:26:56.960]  Значит, определение.
[01:26:57.960 --> 01:27:01.960]  Такое рыженькое у нас будет определение.
[01:27:02.960 --> 01:27:08.960]  Пусть F, пусть G равно вот это вот V, E, C, S, T.
[01:27:09.960 --> 01:27:10.960]  Сеть.
[01:27:11.960 --> 01:27:12.960]  И F.
[01:27:13.960 --> 01:27:15.960]  Поток в ней.
[01:27:22.960 --> 01:27:24.960]  Тогда внимание, смотрите.
[01:27:27.960 --> 01:27:30.960]  Значит, не, тогда определение. Остаточная сеть.
[01:27:31.960 --> 01:27:32.960]  Это называется вот.
[01:27:33.960 --> 01:27:34.960]  Остаточная сеть.
[01:27:36.960 --> 01:27:40.960]  Значит, G… Внимание, G с индексом F. Обратите внимание.
[01:27:41.960 --> 01:27:47.960]  То есть G символизирует, что это мы взяли как бы типа за основу ту же сеть G, но в ней поток F.
[01:27:49.960 --> 01:27:51.960]  Тогда это то же самое, как смотрите.
[01:27:53.960 --> 01:27:55.960]  То есть это вот сеть.
[01:27:56.960 --> 01:27:57.960]  Ну вот.
[01:28:00.960 --> 01:28:07.960]  То есть это фактически сеть тоже, то же самое F, но есть E, F и, соответственно, C, F. И сток, и сток не меняются.
[01:28:11.960 --> 01:28:14.960]  Ну я не буду сейчас совсем формально прям писать, чтобы…
[01:28:15.960 --> 01:28:17.960]  Но прям вот там будет не идеально сейчас формально будет.
[01:28:18.960 --> 01:28:22.960]  Где E, F создаётся так.
[01:28:22.960 --> 01:28:23.960]  Остаётся так.
[01:28:25.960 --> 01:28:26.960]  Что где…
[01:28:29.960 --> 01:28:33.960]  Где для каждого…
[01:28:39.960 --> 01:28:40.960]  …гибра…
[01:28:45.960 --> 01:28:50.960]  Значит, E равно, допустим, у V в исходном графе, да?
[01:28:53.960 --> 01:28:55.960]  Значит, в…
[01:28:57.960 --> 01:29:05.960]  Значит, допустим, G, значит, в E, F добавлены.
[01:29:11.960 --> 01:29:12.960]  Значит, первое.
[01:29:14.960 --> 01:29:15.960]  Значит, ребро.
[01:29:19.960 --> 01:29:20.960]  Ребро U, V.
[01:29:23.960 --> 01:29:26.960]  То есть ребро E1 равно U, V.
[01:29:28.960 --> 01:29:41.960]  Причём, ну вот, с C, F от E1 равной, соответственно, C от E минус F от E.
[01:29:42.960 --> 01:29:44.960]  То есть это символизирует вот это вот ребро.
[01:29:44.960 --> 01:29:52.960]  То есть, видите, в данном случае вот для этого ребра мы добавляем ребро только с той способности 2, потому что только 2 можем сюда пустить.
[01:29:54.960 --> 01:29:55.960]  Вот.
[01:29:56.960 --> 01:29:57.960]  И второе.
[01:29:58.960 --> 01:29:59.960]  И второе.
[01:30:00.960 --> 01:30:03.960]  Ребро E2 равно V.
[01:30:04.960 --> 01:30:10.960]  С C, F от E2 равной, наоборот, F от E.
[01:30:11.960 --> 01:30:16.960]  Вот, кстати, вот нам, кстати, очень удобно, наконец-то, пригодился, что здесь оно не отрицательно.
[01:30:21.960 --> 01:30:22.960]  Вот такая красота.
[01:30:24.960 --> 01:30:26.960]  Вот формальное определение звучит так.
[01:30:26.960 --> 01:30:29.960]  Ну, формально, чтобы совсем идеально формально это было, надо ещё написать.
[01:30:32.960 --> 01:30:36.960]  А других ребер?
[01:30:39.960 --> 01:30:43.960]  В C, в E, F? Нет.
[01:30:44.960 --> 01:30:45.960]  Вот.
[01:30:45.960 --> 01:30:47.960]  Ну, здесь по-разному можно очень по-разному писать.
[01:30:47.960 --> 01:30:57.960]  Кстати, если вы откроете, скажем, Кормана, то там определение будут, по камере внешне может показаться, что ну вообще другие.
[01:31:03.960 --> 01:31:07.960]  А мы это берём, ну, из практики.
[01:31:08.960 --> 01:31:10.960]  Ну, кстати, а может и с них, я не помню.
[01:31:11.960 --> 01:31:12.960]  Нет, то я так более нот.
[01:31:12.960 --> 01:31:13.960]  Нет, то я так более нот.
[01:31:14.960 --> 01:31:16.960]  Ну, с проблемом так, просто есть два определения.
[01:31:17.960 --> 01:31:20.960]  Вот тем Корменовским очень удобно пользоваться для математических доказательств.
[01:31:21.960 --> 01:31:23.960]  Вот мы даже, может быть, чуть позже сегодня увидим.
[01:31:25.960 --> 01:31:26.960]  Вот. То есть мы это приведём.
[01:31:27.960 --> 01:31:32.960]  Но сейчас я пользуюсь тем вот, то есть вот этим вот, этим вот просто удобно вот просто в компьютере вот ровно в этих терминах мыслить.
[01:31:33.960 --> 01:31:39.960]  И тем более, что, ну, просто проблема в том, что ещё у Кормана определение будет основано на матрице смежности.
[01:31:40.960 --> 01:31:45.960]  Вот. Ну, там, красиво будет, а вот будет немножко по-другому.
[01:31:46.960 --> 01:31:52.960]  Ну, вот и оно, и оно, может быть, особенно поначалу будет немножко портить суть, и оно будет работать в некоторых предположениях.
[01:31:53.960 --> 01:31:59.960]  Которые вот, ну, таких технических, конечно, предположения, то есть математически они ни на что не влияют, а технические принципи.
[01:32:00.960 --> 01:32:01.960]  Вот. Вот такая красота.
[01:32:02.960 --> 01:32:03.960]  Сет называется остаточная сеть.
[01:32:04.960 --> 01:32:06.960]  Чем остаточная сеть приятна?
[01:32:06.960 --> 01:32:07.960]  Очень приятно.
[01:32:08.960 --> 01:32:18.960]  Остаточная сеть приятна тем, что если вы нашли, то есть у нас сейчас жадный принцип говорит, что если в остаточной сети есть путь по не нулевым ребрам от СДТ,
[01:32:20.960 --> 01:32:24.960]  то тогда в исходной сети вдоль этого пути поток можно увеличить.
[01:32:27.960 --> 01:32:28.960]  Вот, понимаете, да?
[01:32:28.960 --> 01:32:33.960]  Ну, вот, действительно, наступает ситуация.
[01:32:36.960 --> 01:32:37.960]  Вот, действительно, смотрите.
[01:32:38.960 --> 01:32:43.960]  Вот наступает такая ситуация в какой-то момент, что от СДТ дойти нельзя.
[01:32:46.960 --> 01:32:47.960]  От СДТ дойти нельзя.
[01:32:48.960 --> 01:32:49.960]  Что делать?
[01:32:50.960 --> 01:32:51.960]  Ну, вот.
[01:32:52.960 --> 01:32:53.960]  От СДТ дойти нельзя.
[01:32:54.960 --> 01:32:55.960]  Что делать?
[01:32:56.960 --> 01:32:57.960]  Ну, вот.
[01:32:58.960 --> 01:33:02.960]  Означает ли это, что поток действительно максимальный?
[01:33:03.960 --> 01:33:08.960]  Или, может быть, это означает, что надо просто еще каким-то зубодробительным способом что-то делать?
[01:33:09.960 --> 01:33:12.960]  Я думаю, что это зубодробительная доставка.
[01:33:13.960 --> 01:33:14.960]  Ну, вот.
[01:33:15.960 --> 01:33:16.960]  Ну, на самом деле, да.
[01:33:17.960 --> 01:33:18.960]  В этом месте можно подумать в следующую сторону.
[01:33:19.960 --> 01:33:20.960]  Это, кстати, иногда очень полезная мысль.
[01:33:21.960 --> 01:33:22.960]  Смотрите.
[01:33:23.960 --> 01:33:24.960]  Ну, то есть так просто.
[01:33:25.960 --> 01:33:27.960]  Тут хочется именно как-то подумать, чтобы было естественно.
[01:33:28.960 --> 01:33:29.960]  То есть я могу, конечно, просто написать все там.
[01:33:30.960 --> 01:33:31.960]  Вести все определения.
[01:33:32.960 --> 01:33:36.960]  Потому что, если вы знаете, что такое поток, вы, конечно, понятно догадываетесь, что тут сейчас на счет происходить.
[01:33:38.960 --> 01:33:39.960]  Вот.
[01:33:42.960 --> 01:33:43.960]  Это, конечно, да.
[01:33:44.960 --> 01:33:45.960]  Хотя будет, конечно, и циклы.
[01:33:46.960 --> 01:33:48.960]  Но там кунт такой просты, какие-то длинняющие цепи.
[01:33:48.960 --> 01:33:54.960]  Нет, на самом деле кунт, это мы просто вот сейчас возьмем то, что мы тут сегодня изучаем и просто упихаем реализацию.
[01:33:55.960 --> 01:33:56.960]  На самом деле.
[01:34:00.960 --> 01:34:01.960]  Ой, да, да, да.
[01:34:03.960 --> 01:34:05.960]  Ну, да, это немножко куперфильд.
[01:34:06.960 --> 01:34:08.960]  Это так в каждом шоу там он там показывает какие-нибудь там это про простые фокусы.
[01:34:09.960 --> 01:34:14.960]  Но все время предупреждают, что в конце там это он, там он растворит в воздухе башню, там статуй свободы.
[01:34:15.960 --> 01:34:16.960]  Ну, вот.
[01:34:16.960 --> 01:34:19.960]  А пока он покажет вам милый карточный фокус, который ему научил дедушка.
[01:34:20.960 --> 01:34:21.960]  Вот такой фокус.
[01:34:22.960 --> 01:34:23.960]  Да, очень красивый фокус, аплодисменты.
[01:34:24.960 --> 01:34:27.960]  Да, но он это испепелит башню свободы, а статуй свободы.
[01:34:28.960 --> 01:34:31.960]  Там это, господи, он растворит в воздухе восточный экспресс.
[01:34:32.960 --> 01:34:34.960]  Ну ладно, один вагон мне важен.
[01:34:36.960 --> 01:34:38.960]  Что он там еще делал?
[01:34:39.960 --> 01:34:42.960]  А он пройдет сквозь Великую Китайскую стену.
[01:34:43.960 --> 01:34:44.960]  Вот.
[01:34:45.960 --> 01:34:46.960]  На самом деле, да.
[01:34:47.960 --> 01:34:52.960]  Причем еще прочитает лекцию, как он это примерно датчик, с помощью какой-то там с употреблением слов там типа «дифузия».
[01:34:55.960 --> 01:35:03.960]  Но да, потом придет какой-то, потом придет какая-то вредина в маске и покажет, собственно, примерно каким оптическим обманом этот эффект достигается.
[01:35:04.960 --> 01:35:06.960]  В общем, менее крутым этот фокус не становится.
[01:35:07.960 --> 01:35:08.960]  На самом деле.
[01:35:09.960 --> 01:35:10.960]  Ну да.
[01:35:10.960 --> 01:35:17.960]  Нет, ну как сказать, реально, просто в фокусах иногда, собственно, технология исполнения этого фокуса бывает еще круче самого фокуса.
[01:35:19.960 --> 01:35:20.960]  Так вот.
[01:35:21.960 --> 01:35:22.960]  Ну теперь давайте думать.
[01:35:23.960 --> 01:35:28.960]  Вот предположим, что выяснилось, что у нас в остаточной сети пути от S до T нет.
[01:35:31.960 --> 01:35:32.960]  Тогда давайте вот мыслить так.
[01:35:33.960 --> 01:35:34.960]  Ну хорошо.
[01:35:35.960 --> 01:35:36.960]  А как мы это выясним?
[01:35:37.960 --> 01:35:38.960]  Ну вы это выясним понятно каким образом.
[01:35:39.960 --> 01:35:41.960]  Мы это выясним так, что мы пойдем DFS.
[01:35:42.960 --> 01:35:43.960]  Вот я сейчас буду только не нулевые ребра какие-то рисовать.
[01:35:44.960 --> 01:35:48.960]  Вот, допустим, я от балды чего-то нарисовал, да, тут могут быть какие-то в другую сторону ребра.
[01:35:49.960 --> 01:35:50.960]  Идем, идем, идем.
[01:35:51.960 --> 01:35:56.960]  Но выяснится, что вот как бы, вот существует какая-то граница, через которую мы не перейдем.
[01:35:57.960 --> 01:35:58.960]  Понимаете, да?
[01:36:01.960 --> 01:36:03.960]  То есть выясняется, что дальше не идет.
[01:36:04.960 --> 01:36:05.960]  То есть это не значит, что через нее не приходят ребра.
[01:36:05.960 --> 01:36:09.960]  Не приходят ребра, это значит, что все ребра не нулевые, пока они меряют.
[01:36:10.960 --> 01:36:11.960]  Не нулевые.
[01:36:12.960 --> 01:36:15.960]  Они ведут все в эту сторону.
[01:36:16.960 --> 01:36:17.960]  А в ту сторону только нулевые.
[01:36:18.960 --> 01:36:19.960]  Понимаете, да?
[01:36:21.960 --> 01:36:24.960]  Но тогда, смотрите, мы можем о чем задуматься.
[01:36:25.960 --> 01:36:27.960]  Вот жили были у нас все вот эти вот ребра.
[01:36:28.960 --> 01:36:33.960]  Допустим 5, 4, вот оказалось 6, 2, допустим 7.
[01:36:33.960 --> 01:36:45.960]  То есть смотрите, вот у нас в эту сторону получается течет вот, ну вот, то есть вот такая вот ситуация.
[01:36:46.960 --> 01:36:49.960]  Ну в общем сами по себе эти 5, 4, 6, 2, 7 еще ничего не значат.
[01:36:50.960 --> 01:36:51.960]  Но это естественный вопрос.
[01:36:54.960 --> 01:36:59.960]  Как говорится, а в принципе через эту границу можно что-то пустить?
[01:37:00.960 --> 01:37:02.960]  Ну вот давайте просто задумаемся.
[01:37:03.960 --> 01:37:04.960]  Как так вообще получилось?
[01:37:05.960 --> 01:37:10.960]  Значит там по этому рюкту в ту сторону там чет 5, 4 и так далее.
[01:37:11.960 --> 01:37:12.960]  Ну вот.
[01:37:13.960 --> 01:37:14.960]  Чего?
[01:37:15.960 --> 01:37:16.960]  Ну вот смотрите, давайте посмотрим.
[01:37:17.960 --> 01:37:19.960]  То есть давайте посмотрим, что происходит, так сказать, в реальной жизни в этом месте.
[01:37:22.960 --> 01:37:26.960]  То есть в реальной жизни это означает следствие, что течет какая-то вода.
[01:37:27.960 --> 01:37:33.960]  То есть это означает что здесь есть вот, то есть какие-то ребра, в том числе и те же.
[01:37:34.960 --> 01:37:38.960]  Там вот так вот, как-то да?
[01:37:41.960 --> 01:37:48.960]  А может быть и не только там даже так вот, вот так вот, может быть и вот так.
[01:37:49.960 --> 01:37:52.960]  А еще может быть все что угодно еще вот так, вот так, там все что угодно может быть на самом деле.
[01:37:52.960 --> 01:38:00.640]  Но что мы про все эти ребра можем сказать, в исходной
[01:38:00.640 --> 01:38:05.720]  ТСТ были такие ребра, но мы замечаем, что все эти
[01:38:05.720 --> 01:38:07.960]  ребра нашим потоком сейчас насыщены.
[01:38:07.960 --> 01:38:11.920]  То есть в ту сторону течет 5, то есть получается, что
[01:38:11.920 --> 01:38:16.800]  скорее всего тут на самом деле просто 5 из 5.
[01:38:16.800 --> 01:38:20.960]  И тут какой-нибудь там, допустим, 4 из 4.
[01:38:20.960 --> 01:38:24.560]  Нет, всякое может быть.
[01:38:24.560 --> 01:38:27.280]  На самом деле может еще быть ситуация, что вот здесь
[01:38:27.280 --> 01:38:31.520]  нарисовано 6, но может быть это такое красивое сжатие,
[01:38:31.520 --> 01:38:34.960]  на самом деле тут просто 2 из 2, но просто, а в эту
[01:38:34.960 --> 01:38:41.400]  сторону течет 4, то есть там 4, ну типа 0 из 4, ну что-то
[01:38:41.400 --> 01:38:42.400]  такое.
[01:38:42.400 --> 01:38:44.400]  Ну кто-то жал, ну условно, конечно, в нашем случае
[01:38:44.400 --> 01:38:45.400]  так не бывает.
[01:38:45.400 --> 01:38:50.680]  Так, ну вот, то есть получается следующее, что у нас, мы
[01:38:51.080 --> 01:38:53.640]  рассматриваем разрез и говорим, что, и вы так понимаете,
[01:38:53.640 --> 01:38:57.120]  что ДФС-то у нас сейчас дошел до этих всех вершин,
[01:38:57.120 --> 01:38:58.120]  правда?
[01:38:58.120 --> 01:39:01.520]  Но раз пути нет, значит получается, что все ребра
[01:39:01.520 --> 01:39:03.000]  здесь насыщены.
[01:39:03.000 --> 01:39:06.880]  Да, кстати, вот еще одно определение, которое мы
[01:39:06.880 --> 01:39:07.880]  активно будем пользоваться.
[01:39:07.880 --> 01:39:12.080]  Ребро называется насыщенным, если f от e равно c от e.
[01:39:12.080 --> 01:39:16.640]  Но тогда смотрите, вот возникает вопрос, вот у нас есть ребра,
[01:39:16.640 --> 01:39:21.480]  там 5, 4, там 2, вот это мы не считаем, там какие-нибудь
[01:39:21.480 --> 01:39:26.480]  2, там я не знаю, что-нибудь там, что тут у нас еще, ну
[01:39:26.480 --> 01:39:31.200]  то есть пусть будет тут тоже 2, ну вот, и все они насыщены,
[01:39:31.200 --> 01:39:35.400]  то есть тут какая-нибудь 7 из 7, тут там 8 из 8, тут я
[01:39:35.400 --> 01:39:42.720]  не знаю, ну тут всякая, ну вот, 5, 5, там 2, ну что-то
[01:39:42.720 --> 01:39:43.720]  вот такое.
[01:39:44.400 --> 01:39:47.640]  Ну тогда смотрите, какая ситуация, получается, что
[01:39:47.640 --> 01:39:52.760]  через этот разрез, каким-то, ну вот, хотя там вот всякое
[01:39:52.760 --> 01:39:56.560]  бывает, конечно, то есть формально еще как бы внимательно
[01:39:56.560 --> 01:39:59.920]  придеремся, но получается, что как бы были ребра и
[01:39:59.920 --> 01:40:00.920]  все они насыщены.
[01:40:04.920 --> 01:40:08.880]  Вот возникает вопрос такой, до уровня идеи, а в принципе
[01:40:08.880 --> 01:40:11.360]  через этот разрез вообще может протекать больше?
[01:40:11.360 --> 01:40:13.080]  Видите, тоже интуитивная мысль.
[01:40:14.720 --> 01:40:17.720]  Ну, через эту границу, хорошо.
[01:40:17.720 --> 01:40:18.720]  Пока мысль мистическая.
[01:40:18.720 --> 01:40:19.720]  То есть мистическая.
[01:40:19.720 --> 01:40:24.120]  Каждая вода у нас не просто течет из S в T, значит она
[01:40:24.120 --> 01:40:26.960]  должна, наверное, эту границу пересечь.
[01:40:26.960 --> 01:40:30.720]  Правда, сразу на уровне идеи имеем в виду, что она,
[01:40:30.720 --> 01:40:32.720]  конечно, может ее хотя бы один раз пересечь, но она
[01:40:32.720 --> 01:40:34.720]  может и так и туда-сюда ходить.
[01:40:34.720 --> 01:40:36.720]  Вот.
[01:40:38.720 --> 01:40:42.720]  Но возникает тем не менее, что у нас вот торчат туда
[01:40:42.720 --> 01:40:46.720]  5, 4, вот 2, 2, 8, 7, 5, 2, и все ребра торчащие тут, которые
[01:40:46.720 --> 01:40:48.720]  исходно торчали туда, они все закрыты.
[01:40:49.720 --> 01:40:51.720]  А может ли...
[01:40:51.720 --> 01:40:52.720]  Ну вот.
[01:40:52.720 --> 01:40:55.720]  Но тогда заметим, что как бы есть подозрение, что
[01:40:55.720 --> 01:40:59.720]  ну понятно, что может быть так, что действительно
[01:40:59.720 --> 01:41:02.720]  как бы одна машинка занимает этих пропускных способностей
[01:41:02.720 --> 01:41:03.720]  несколько.
[01:41:04.720 --> 01:41:06.720]  Ну вот, такое может быть.
[01:41:06.720 --> 01:41:10.720]  Но ситуация такая, сразу мы замечаем, что на самом
[01:41:10.720 --> 01:41:13.720]  деле есть подозрение, что больше чем вот 5, плюс 4,
[01:41:13.720 --> 01:41:16.720]  плюс 2, плюс 2, плюс 8, плюс 7, плюс 5, плюс 2, через эту
[01:41:16.720 --> 01:41:18.720]  границу проходить не может, правда?
[01:41:19.720 --> 01:41:22.720]  Но тогда отсюда возникает как-то, наверное, подозрение,
[01:41:22.720 --> 01:41:26.720]  что действительно у нас получается, то есть такое
[01:41:26.720 --> 01:41:28.720]  интересно, но тогда отсюда, тогда должно следовать,
[01:41:28.720 --> 01:41:30.720]  что этот поток максимальный.
[01:41:31.720 --> 01:41:34.720]  Просто потому, что мы нашли границу, через которую вот
[01:41:34.720 --> 01:41:37.720]  следует просто воды, вот просто максимально много.
[01:41:40.720 --> 01:41:42.720]  Не для одного?
[01:41:42.720 --> 01:41:44.720]  Это для одного.
[01:41:44.720 --> 01:41:45.720]  Для одного.
[01:41:45.720 --> 01:41:47.720]  Это оранжевый товарищ, это он сам.
[01:41:47.720 --> 01:41:50.720]  Это сам граф, а это его статочная сеть.
[01:41:52.720 --> 01:41:54.720]  Ну там 8, 8, а там...
[01:41:55.720 --> 01:41:56.720]  Да, потому что это вы...
[01:41:56.720 --> 01:41:57.720]  Ну тут...
[01:41:57.720 --> 01:41:58.720]  А хотя...
[01:41:58.720 --> 01:42:00.720]  Они плотные, соответственно, вы поняли.
[01:42:00.720 --> 01:42:01.720]  Вы поняли.
[01:42:01.720 --> 01:42:03.720]  Нет, ну тут, да, тут...
[01:42:03.720 --> 01:42:04.720]  Давайте лишнюю берем.
[01:42:04.720 --> 01:42:05.720]  Ну давайте, да, что-то.
[01:42:05.720 --> 01:42:07.720]  Нет, просто...
[01:42:08.720 --> 01:42:09.720]  Ну, да.
[01:42:09.720 --> 01:42:11.720]  Нет, на самом деле, да, они вот...
[01:42:11.720 --> 01:42:13.720]  Я просто хотел сказать, что они не совсем вот прям
[01:42:13.720 --> 01:42:14.720]  идеально соответствуют.
[01:42:14.720 --> 01:42:15.720]  Там...
[01:42:15.720 --> 01:42:16.720]  Там дадит...
[01:42:16.720 --> 01:42:17.720]  Идея.
[01:42:17.720 --> 01:42:18.720]  Да, ну хотя бы...
[01:42:18.720 --> 01:42:20.720]  Нет, ну совсем на уровне идеи, конечно, вот можно
[01:42:20.720 --> 01:42:21.720]  сказать так, ну просто вот эти...
[01:42:21.720 --> 01:42:23.720]  Просто идея такая, что если она там...
[01:42:23.720 --> 01:42:26.720]  То есть можно сказать так, что это 6 тут высекает из-за
[01:42:26.720 --> 01:42:28.720]  того, что ну здесь просто есть ребро.
[01:42:28.720 --> 01:42:30.720]  6, 0, вот так.
[01:42:31.720 --> 01:42:33.720]  Вот просто оно есть.
[01:42:33.720 --> 01:42:34.720]  Вот.
[01:42:34.720 --> 01:42:36.720]  А тут, например, вот есть ребро 2 из...
[01:42:36.720 --> 01:42:38.720]  Да, вот такое бывает, да.
[01:42:38.720 --> 01:42:40.720]  И вот тут еще 7 бывает.
[01:42:40.720 --> 01:42:42.720]  7 из 7, вот так.
[01:42:42.720 --> 01:42:43.720]  Вот.
[01:42:44.720 --> 01:42:46.720]  Хорошо, вот так.
[01:42:46.720 --> 01:42:48.720]  Ну и тут всякое тут...
[01:42:48.720 --> 01:42:50.720]  Тут какой-то еще геморрой, но неважно.
[01:42:50.720 --> 01:42:51.720]  Вот.
[01:42:51.720 --> 01:42:53.720]  На самом деле, да, идеально они соответствуют вот так.
[01:42:53.720 --> 01:42:55.720]  Вот.
[01:42:56.720 --> 01:42:59.720]  То есть поэтому возникает, что имеет смысл как бы
[01:42:59.720 --> 01:43:02.720]  рассматривать, когда мы пытаемся понять, какой максимальный
[01:43:02.720 --> 01:43:04.720]  поток мы можем пустить.
[01:43:04.720 --> 01:43:06.720]  То есть и действительно вот имеет смысл рассматривать
[01:43:06.720 --> 01:43:09.720]  не только сколько мы можем выйти из истока,
[01:43:09.720 --> 01:43:11.720]  и сколько может втечь сток,
[01:43:11.720 --> 01:43:13.720]  но и какие-то другие узкие места.
[01:43:13.720 --> 01:43:16.720]  Ну, например, самый тупой пример это мог быть, это какая-нибудь
[01:43:16.720 --> 01:43:18.720]  сеть вот в духе вот тут.
[01:43:18.720 --> 01:43:20.720]  5, 3, допустим, 7.
[01:43:20.720 --> 01:43:21.720]  Да?
[01:43:21.720 --> 01:43:23.720]  Наоборот.
[01:43:23.720 --> 01:43:25.720]  Да, то есть оказывается вот узкое место вот здесь.
[01:43:27.720 --> 01:43:28.720]  Вот.
[01:43:28.720 --> 01:43:30.720]  Вот возникает такая какая-то идея.
[01:43:30.720 --> 01:43:33.720]  И вообще возникает ощущение, что просто если в остаточной сети
[01:43:33.720 --> 01:43:36.720]  нет пути, то просто как будто мы натыкаемся на границу,
[01:43:36.720 --> 01:43:39.720]  через которую мы при всем желании больше не пхнем.
[01:43:40.720 --> 01:43:41.720]  Вот.
[01:43:41.720 --> 01:43:43.720]  Понимаете, да?
[01:43:43.720 --> 01:43:45.720]  Ну да.
[01:43:45.720 --> 01:43:46.720]  Ну вот.
[01:43:46.720 --> 01:43:48.720]  И в результате тогда получается...
[01:43:48.720 --> 01:43:51.720]  Ну давайте остается только, значит, ввести тогда определение
[01:43:51.720 --> 01:43:53.720]  для этих всех границ.
[01:43:54.720 --> 01:43:56.720]  Определение такое.
[01:43:56.720 --> 01:43:58.720]  Так.
[01:44:00.720 --> 01:44:01.720]  Так.
[01:44:01.720 --> 01:44:03.720]  Давайте, да, тут я Т сделаю поближе.
[01:44:05.720 --> 01:44:07.720]  Но на этот раз, значит...
[01:44:08.720 --> 01:44:09.720]  Так.
[01:44:09.720 --> 01:44:11.720]  Ну давайте каким-нибудь еще...
[01:44:12.720 --> 01:44:14.720]  Давайте скажем, что граница зеленая.
[01:44:17.720 --> 01:44:18.720]  Вот.
[01:44:18.720 --> 01:44:20.720]  Чтобы символизировать, что это одно и то же.
[01:44:22.720 --> 01:44:23.720]  Ну вот.
[01:44:23.720 --> 01:44:25.720]  И, значит, ведем понятие.
[01:44:28.720 --> 01:44:29.720]  Пусть.
[01:44:31.720 --> 01:44:33.720]  Ж равно ВСТ.
[01:44:34.720 --> 01:44:36.720]  ССТ.
[01:44:36.720 --> 01:44:38.720]  Тогда, смотрите.
[01:44:39.720 --> 01:44:41.720]  Ну, тогда разрез.
[01:44:46.720 --> 01:44:47.720]  СТ.
[01:44:48.720 --> 01:44:50.720]  С большое и Т большое. Обратите внимание.
[01:44:54.720 --> 01:44:59.720]  Это парамножество.
[01:45:02.720 --> 01:45:06.720]  С и Т.
[01:45:07.720 --> 01:45:09.720]  Таких что?
[01:45:11.720 --> 01:45:13.720]  Ну давайте вот здесь совсем аккуратно писать, что.
[01:45:15.720 --> 01:45:17.720]  Значит, С и Т.
[01:45:18.720 --> 01:45:20.720]  Это подмножество В.
[01:45:25.720 --> 01:45:27.720]  Значит, они не пересекаются.
[01:45:27.720 --> 01:45:28.720]  Вот.
[01:45:30.720 --> 01:45:31.720]  И третье.
[01:45:31.720 --> 01:45:35.720]  И СТ принадлежит множеству С, а Т принадлежит СТ.
[01:45:58.720 --> 01:45:59.720]  Вот.
[01:45:59.720 --> 01:46:02.720]  Это формальное определение этой вот границы.
[01:46:04.720 --> 01:46:08.720]  Ну, то есть, по факту, да, сам по себе этот разрез.
[01:46:08.720 --> 01:46:10.720]  В общем-то... Ой.
[01:46:14.720 --> 01:46:15.720]  В смысле, связан.
[01:46:15.720 --> 01:46:16.720]  А, надо, да.
[01:46:16.720 --> 01:46:18.720]  На самом деле, да, есть еще четвертая.
[01:46:20.720 --> 01:46:21.720]  Да.
[01:46:21.720 --> 01:46:23.720]  С объединенная с Т.
[01:46:23.720 --> 01:46:24.720]  Ладно, равно В.
[01:46:24.720 --> 01:46:25.720]  Да, это важно.
[01:46:27.720 --> 01:46:28.720]  Ну, я сейчас буду покачивать.
[01:46:30.720 --> 01:46:31.720]  Ну, пожалуйста.
[01:46:35.720 --> 01:46:36.720]  Ну да, да, да.
[01:46:36.720 --> 01:46:37.720]  Ну, я...
[01:46:37.720 --> 01:46:38.720]  Давайте так напишем.
[01:46:38.720 --> 01:46:40.720]  Да, понятно, что это называется С.
[01:46:42.720 --> 01:46:43.720]  Ну, пожалуйста.
[01:46:43.720 --> 01:46:44.720]  Да, хорошо, хорошо.
[01:46:44.720 --> 01:46:45.720]  Пожалуйста, пожалуйста.
[01:46:48.720 --> 01:46:49.720]  Ну, суть одна.
[01:46:49.720 --> 01:46:50.720]  Хорошо, можно так.
[01:46:50.720 --> 01:46:51.720]  Пожалуйста.
[01:46:51.720 --> 01:46:52.720]  Можно действительно сказать, что...
[01:46:52.720 --> 01:46:54.720]  А, можно это вообще...
[01:46:55.720 --> 01:46:56.720]  Хорошо.
[01:46:58.720 --> 01:46:59.720]  Что значит...
[01:46:59.720 --> 01:47:01.720]  Что такое между собой связанное множество?
[01:47:11.720 --> 01:47:12.720]  Что значит первое...
[01:47:13.720 --> 01:47:14.720]  Нет.
[01:47:14.720 --> 01:47:15.720]  Вот второе...
[01:47:15.720 --> 01:47:17.720]  На это вот это свойство есть.
[01:47:17.720 --> 01:47:19.720]  Оно вот с этим всем не связано.
[01:47:19.720 --> 01:47:22.720]  То есть, то, что я тут эту кучу всего писал, на самом деле это обозначается вот так.
[01:47:27.720 --> 01:47:33.720]  Да, но важно, что когда мы разбиваем границу, то есть нам важно, что с одной стороны находится...
[01:47:33.720 --> 01:47:36.720]  С первой стороны находится исток, а со второй сток.
[01:47:36.720 --> 01:47:37.720]  Это важно.
[01:47:38.720 --> 01:47:39.720]  Поэтому...
[01:47:39.720 --> 01:47:42.720]  Ну, правда, сами все разрезы, конечно, огромное количество.
[01:47:43.720 --> 01:47:45.720]  Ну, два в степени.
[01:47:45.720 --> 01:47:47.720]  Два в степени какой?
[01:47:48.720 --> 01:47:49.720]  Мимо.
[01:47:58.720 --> 01:48:00.720]  А, в степени модуль В?
[01:48:00.720 --> 01:48:02.720]  Во, минус два, да, конечно.
[01:48:02.720 --> 01:48:04.720]  Да, СТ фиксированы, да.
[01:48:04.720 --> 01:48:06.720]  С точностью, да.
[01:48:06.720 --> 01:48:07.720]  Погрешите, погрешите.
[01:48:07.720 --> 01:48:10.720]  Ой, да-да-да, мультипликативный констант И4, да-да-да.
[01:48:12.720 --> 01:48:13.720]  Так вот.
[01:48:13.720 --> 01:48:16.720]  Значит, смотрите, что теперь мы с этим всем можем делать.
[01:48:17.720 --> 01:48:20.720]  Значит, теперь можно как-то...
[01:48:20.720 --> 01:48:24.720]  Если у нас есть граница, то на ней можно ввести таможню.
[01:48:27.720 --> 01:48:28.720]  Вот.
[01:48:29.720 --> 01:48:30.720]  Ну вот.
[01:48:31.720 --> 01:48:33.720]  Значит, давайте...
[01:48:33.720 --> 01:48:35.720]  Во-первых, давайте задумаемся.
[01:48:35.720 --> 01:48:37.720]  То есть нам хочется, наверное, учитывать.
[01:48:38.720 --> 01:48:43.720]  А сколько у нас воды через эту границу утекает?
[01:48:45.720 --> 01:48:46.720]  Поэтому так и пишем.
[01:48:46.720 --> 01:48:48.720]  Чистый поток...
[01:48:49.720 --> 01:48:53.720]  Чистый, так сказать, даже в кавычках вводится определение, поток.
[01:48:54.720 --> 01:48:57.720]  Ф от СТ.
[01:48:59.720 --> 01:49:03.720]  Через разрез СТ.
[01:49:09.720 --> 01:49:12.720]  Это что такое?
[01:49:16.720 --> 01:49:19.720]  Ну, очень хочется, конечно, так и сказать.
[01:49:20.720 --> 01:49:22.720]  Суммируем по всем ребрам.
[01:49:23.720 --> 01:49:26.720]  Таким, что стартовая вершина...
[01:49:27.720 --> 01:49:30.720]  Лежит с нашей стороны границы.
[01:49:31.720 --> 01:49:34.720]  А финиш уже не с нашей.
[01:49:35.720 --> 01:49:36.720]  Ф от Е.
[01:49:40.720 --> 01:49:45.720]  То есть мы назвали потоком одновременно функцию, одновременно вот эту штуку всунуть?
[01:49:45.720 --> 01:49:49.720]  Ну, мы, ну так, допустили такую вольность, конечно.
[01:49:49.720 --> 01:49:55.720]  Ну, на самом деле, просто эта вольность такая, что мы сейчас быстро выясним, что нам больше не понадобится этим пользоваться.
[01:49:55.720 --> 01:49:57.720]  Сейчас вы увидите, почему.
[01:49:58.720 --> 01:50:00.720]  Так, ну а теперь-то давайте думать.
[01:50:01.720 --> 01:50:04.720]  Какой пример, какой понятный пример подобрать?
[01:50:05.720 --> 01:50:06.720]  Как это?
[01:50:07.720 --> 01:50:08.720]  Спрашивайте, да.
[01:50:08.720 --> 01:50:10.720]  Как говорится, недавняя, да.
[01:50:10.720 --> 01:50:14.720]  Недавно из России, называется, уехала работать в Google в 10 программистов.
[01:50:15.720 --> 01:50:16.720]  Что называется?
[01:50:16.720 --> 01:50:18.720]  Трое из них вернулись.
[01:50:20.720 --> 01:50:21.720]  Погибание вопрос.
[01:50:22.720 --> 01:50:23.720]  Сколько мозгов?
[01:50:23.720 --> 01:50:25.720]  Сколько мозгов утекло за рубеж?
[01:50:29.720 --> 01:50:33.720]  Да, по такому, ну если почти, да, по такому определению 10.
[01:50:34.720 --> 01:50:36.720]  Но что-то не то, правда.
[01:50:39.720 --> 01:50:42.720]  Да, поэтому, как и вот у нас изначально было...
[01:50:44.720 --> 01:50:45.720]  Ну да.
[01:50:46.720 --> 01:50:48.720]  С этой точки зрения, так.
[01:50:49.720 --> 01:50:50.720]  Ну вот.
[01:50:54.720 --> 01:50:57.720]  Поэтому, конечно, мы всех вернувшихся...
[01:51:02.720 --> 01:51:03.720]  Что же считаем?
[01:51:06.720 --> 01:51:09.720]  Нет, ну я не знаю, там мало ли, будет у вас макроэкономика, там может быть сложнее.
[01:51:10.720 --> 01:51:18.720]  Там как-то начинается в экономике, что, предположим, вы это что-то, скажем, я, ну вот скажем, если там Вася одолжил Пети 100 долларов,
[01:51:18.720 --> 01:51:19.720]  то счастливы оба.
[01:51:21.720 --> 01:51:25.720]  Потому что Вася счастлив, что у него есть 100 долларов, а Петя счастлив, что у него в будущем будет 100 долларов.
[01:51:26.720 --> 01:51:27.720]  120.
[01:51:28.720 --> 01:51:29.720]  А может даже и 120.
[01:51:31.720 --> 01:51:33.720]  Нет, там это реально начинается и как бы и...
[01:51:34.720 --> 01:51:35.720]  У нас это будет?
[01:51:35.720 --> 01:51:36.720]  Нет.
[01:51:36.720 --> 01:51:37.720]  Почему макроэкономики у вас не будет?
[01:51:38.720 --> 01:51:39.720]  Это на Ярбе.
[01:51:40.720 --> 01:51:41.720]  Да, ну жалко.
[01:51:41.720 --> 01:51:43.720]  Ну не знаю, у нас просто было, но у нас будет как-то...
[01:51:43.720 --> 01:51:44.720]  Был тот курс какой-то?
[01:51:44.720 --> 01:51:46.720]  Нет, это был обязательный курс.
[01:51:47.720 --> 01:51:49.720]  На третьем курсе такое.
[01:51:50.720 --> 01:51:52.720]  Микросеместер микроэкономики, потом семестер макроэкономики.
[01:51:53.720 --> 01:51:59.720]  Ну там микроэкономики, это вы маленькая компания, в этой, собственно, вы анализируете, что там делать, как вы там выставляете цену на свои товары и так далее.
[01:52:00.720 --> 01:52:02.720]  Ну вот, а макроэкономика все просто.
[01:52:03.720 --> 01:52:06.720]  Представьте, да, у вас на кухне стоит печатная машинка, которая печатает валюту.
[01:52:08.720 --> 01:52:13.720]  Причем она умеет не просто печатать эту валюту, но еще ее засасывать иногда.
[01:52:13.720 --> 01:52:22.720]  Вот вам нужно думать, вот вам нужно учиться ей правильно пользоваться, чтобы там, знаете, когда и каким образом там растет инфляция там и так далее.
[01:52:23.720 --> 01:52:24.720]  Ну вот.
[01:52:25.720 --> 01:52:26.720]  Да, иногда к вам товарищ майор стучится.
[01:52:27.720 --> 01:52:28.720]  Нет, почему?
[01:52:29.720 --> 01:52:30.720]  Нет, просто...
[01:52:31.720 --> 01:52:32.720]  Владение печатной машины?
[01:52:33.720 --> 01:52:35.720]  Нет, почему? Печатная машинка, которая печатает деньги где-то, да?
[01:52:36.720 --> 01:52:38.720]  У каждой валюты есть и называется центробанк вообще-то.
[01:52:39.720 --> 01:52:40.720]  Это-то есть, она как дома у каждого человека стоит.
[01:52:41.720 --> 01:52:43.720]  Ну в офисе какая разница?
[01:52:44.720 --> 01:52:54.720]  Нет, понятно, что по факту как бы там чаще всего это бывает, что там вы хотите там это, берете кредит от центробанка, дайте мне 10 тысяч рублей от центробанка.
[01:52:55.720 --> 01:52:57.720]  Окей, у вас есть 10 тысяч рублей.
[01:52:58.720 --> 01:52:59.720]  Круто, мы записываем.
[01:53:00.720 --> 01:53:01.720]  Да, но вы нам должны.
[01:53:02.720 --> 01:53:03.720]  Круто, да.
[01:53:04.720 --> 01:53:07.720]  То есть как бы да, вам придется их заработать и откуда-то вернуть, ну а мы просто сказали, что...
[01:53:07.720 --> 01:53:11.720]  А мы просто напечатали или сказали, что вот с на развитие технологии, что у вас они есть.
[01:53:12.720 --> 01:53:13.720]  Но мы запомнили.
[01:53:14.720 --> 01:53:16.720]  Нет, ну вообще это как бы так реально работает.
[01:53:17.720 --> 01:53:19.720]  Ну как бы да, на полном счете так реально работает с какого-то момента.
[01:53:23.720 --> 01:53:25.720]  Ну примерно года 71, на самом деле так работает.
[01:53:26.720 --> 01:53:31.720]  До этого момента как-то следили, что за каждой бумажкой стоит там все-таки какой-то золотой слиток достает.
[01:53:32.720 --> 01:53:33.720]  Вот.
[01:53:34.720 --> 01:53:37.720]  Ну это в общем короче вот в курсе макроэкономики, вот собственно вот это все шоу будет.
[01:53:38.720 --> 01:53:39.720]  Вот, значит что у нас?
[01:53:40.720 --> 01:53:41.720]  Хорошо, значит чистый поток через разрез.
[01:53:42.720 --> 01:53:44.720]  Вот сколько, сколько утекло через границу изо стока в сток?
[01:53:47.720 --> 01:53:49.720]  Ну возникает естественное утверждение.
[01:53:50.720 --> 01:53:51.720]  К чему этот чистый поток равен?
[01:53:54.720 --> 01:53:56.720]  На мощности максимального потока.
[01:53:57.720 --> 01:53:59.720]  На самом, не максимального, а просто потока этого.
[01:54:00.720 --> 01:54:05.720]  Да, естественно, что наверное как бы если у нас все программисты бегут изо стока в сток,
[01:54:06.720 --> 01:54:11.720]  то наверное через границу пересловывается ровно столько же, сколько изо стока вышло.
[01:54:12.720 --> 01:54:19.720]  Потому что у нас нигде программисты, у нас нигде в промежутке стока программисты не появляются из неоткуда и не исчезают никуда.
[01:54:20.720 --> 01:54:21.720]  Ну да.
[01:54:22.720 --> 01:54:23.720]  Ну это вроде более-менее соответственно.
[01:54:24.720 --> 01:54:25.720]  Не то чтобы это не соответственно.
[01:54:26.720 --> 01:54:27.720]  Бывает конечно исключение.
[01:54:28.720 --> 01:54:29.720]  Вот. Так вот.
[01:54:32.720 --> 01:54:34.720]  Итак, мистическое утверждение.
[01:54:36.720 --> 01:54:40.720]  F от st равно tu по mod f.
[01:54:51.720 --> 01:54:54.720]  Доказательства, знаете, я даже не буду прописывать доказательства.
[01:54:55.720 --> 01:54:59.720]  Потому что оно абсолютно идентичное доказательство того, что fs равно ft.
[01:55:01.720 --> 01:55:02.720]  Прям абсолютно то же самое.
[01:55:03.720 --> 01:55:05.720]  Только просто суммируете, только вы суммируете.
[01:55:06.720 --> 01:55:07.720]  Да, да.
[01:55:08.720 --> 01:55:09.720]  Нет, да, то есть нет.
[01:55:10.720 --> 01:55:13.720]  То есть ну идея там такая, вы суммируете, то есть пишете, то есть суммируете вы потоки.
[01:55:17.720 --> 01:55:23.720]  Но суммируете только не все ребра, а только ребра, которые связаны как-то с долей s.
[01:55:24.720 --> 01:55:25.720]  Вот.
[01:55:26.720 --> 01:55:27.720]  Там вот такая будет идея.
[01:55:28.720 --> 01:55:34.720]  Причем, ну понятно, что там входящие со знаком плюс, там входящие со знаком минус.
[01:55:35.720 --> 01:55:36.720]  Вот. Ну ладно.
[01:55:37.720 --> 01:55:38.720]  И соответственно там вот.
[01:55:39.720 --> 01:55:40.720]  А кажется, что это одно и то же.
[01:55:41.720 --> 01:55:42.720]  Вот. Понятно, да?
[01:55:43.720 --> 01:55:44.720]  Не.
[01:55:45.720 --> 01:55:46.720]  Не понятно?
[01:55:47.720 --> 01:55:48.720]  Не понятно.
[01:55:49.720 --> 01:55:50.720]  Не понятно.
[01:55:51.720 --> 01:55:57.720]  Ну то есть представим, что все ребра, которые ведут по су сторону, они все ведут в одну вершину.
[01:55:58.720 --> 01:55:59.720]  И тогда это доказательство точно такое же будет.
[01:56:00.720 --> 01:56:01.720]  Угу.
[01:56:02.720 --> 01:56:03.720]  Ну типа того, да.
[01:56:04.720 --> 01:56:05.720]  Вот.
[01:56:06.720 --> 01:56:07.720]  Ну качество EDZ такое состоит.
[01:56:08.720 --> 01:56:09.720]  Ну можно, ну вот.
[01:56:10.720 --> 01:56:13.720]  Нет, ну давайте лучше попробуйте EDZ, можем потом это подоказывать.
[01:56:14.720 --> 01:56:17.720]  Но как бы на самом деле просто просписывать, вот получится то же самое.
[01:56:19.720 --> 01:56:20.720]  Походно в это верю.
[01:56:21.720 --> 01:56:22.720]  Ну вот, а суть одна.
[01:56:23.720 --> 01:56:24.720]  Так.
[01:56:25.720 --> 01:56:26.720]  Сейчас чего-чего.
[01:56:37.720 --> 01:56:38.720]  Угу.
[01:56:39.720 --> 01:56:40.720]  Смотрите.
[01:56:41.720 --> 01:56:42.720]  Какая тут диспозиция?
[01:56:43.720 --> 01:56:44.720]  Вот.
[01:56:45.720 --> 01:56:47.720]  Но если мы в это поверим, но это в общем-то, как я уже сказал, логично.
[01:56:48.720 --> 01:56:49.720]  А, кстати, да.
[01:56:50.720 --> 01:56:51.720]  Знаете, одно из доказательств, знаете какое может быть?
[01:56:52.720 --> 01:56:56.720]  Декомпозируем, значит декомпозируем поток на пути и циклы.
[01:56:59.720 --> 01:57:00.720]  Циклы.
[01:57:01.720 --> 01:57:02.720]  Да, и рассмотрим.
[01:57:03.720 --> 01:57:07.720]  Ну во-первых цикл, во-первых цикл никак не влияет ни на это, ни на это.
[01:57:08.720 --> 01:57:09.720]  Почему?
[01:57:10.720 --> 01:57:11.720]  Потому что как бы сколько раз мы туда прошли, столько и вошли.
[01:57:12.720 --> 01:57:13.720]  Да?
[01:57:14.720 --> 01:57:15.720]  А если мы рассмотрим конкретный путь от S до T, да?
[01:57:15.720 --> 01:57:16.720]  То тогда смотрим.
[01:57:17.720 --> 01:57:19.720]  Тогда этот путь в этой величине использовался один раз.
[01:57:20.720 --> 01:57:23.720]  А вот эта штука использовала, а вот эта штука использовалась,
[01:57:24.720 --> 01:57:27.720]  ну очевидно, что в эту сторону мы пришли на один раз больше, чем в ту сторону.
[01:57:30.720 --> 01:57:31.720]  Поэтому в сумме кайф.
[01:57:32.720 --> 01:57:33.720]  Да, вот еще вот так можно доказывать, да.
[01:57:38.720 --> 01:57:41.720]  А, ну да, кстати, даже доказательство полноценное получилось.
[01:57:42.720 --> 01:57:43.720]  Такое нет.
[01:57:43.720 --> 01:57:46.720]  Ну вот, нет, если кто-то хочет расписывать через суммы, то, пожалуйста, это тоже можно.
[01:57:47.720 --> 01:57:49.720]  Но вот на самом деле лучше там второй вот этот формализм,
[01:57:50.720 --> 01:57:53.720]  лучше это, там вторую парадигму определения лучше вводить.
[01:57:54.720 --> 01:57:57.720]  Там второй тип, и тогда там эти доказательства будут просто на халяву писаться.
[01:57:58.720 --> 01:57:59.720]  Вот, при той же сути.
[01:58:00.720 --> 01:58:01.720]  Так вот, хорошо.
[01:58:02.720 --> 01:58:04.720]  Но это был, значит, чистый поток.
[01:58:06.720 --> 01:58:09.720]  Но теперь можно заметить следующее.
[01:58:14.720 --> 01:58:15.720]  Ой, сколько определений.
[01:58:17.720 --> 01:58:18.720]  Ну ладно, значит, смотрите.
[01:58:23.720 --> 01:58:25.720]  Ну вот, на самом деле, значит, есть еще определения.
[01:58:26.720 --> 01:58:32.720]  Потому что про каждую таможенню, хорошо, мы научились определять, сколько воды утекает через таможенню.
[01:58:34.720 --> 01:58:40.720]  Но возникает вопрос, мы же можем подумать, а какое максимальное количество воды может утекать через таможенню.
[01:58:43.720 --> 01:58:44.720]  Так и пишем.
[01:58:45.720 --> 01:58:46.720]  Смотрите.
[01:58:47.720 --> 01:58:48.720]  Ну вот.
[01:58:49.720 --> 01:58:51.720]  И тогда вот идея.
[01:58:52.720 --> 01:58:54.720]  Ну я вот не буду это прописывать, все это вот то же самое.
[01:58:55.720 --> 01:58:57.720]  Там типа данная сеть, данная разрез, так вот.
[01:58:58.720 --> 01:59:01.720]  Пропускная способность разреза.
[01:59:02.720 --> 01:59:05.720]  Пропускная способность таможенней в переводе говоря.
[01:59:09.720 --> 01:59:10.720]  Вот.
[01:59:11.720 --> 01:59:13.720]  С от СТ.
[01:59:14.720 --> 01:59:18.720]  Вот сколько, честно говоря, теоретически может машин проехать.
[01:59:20.720 --> 01:59:26.720]  Ну на самом деле да, в идеале, наверное, если все-таки каждая машина будет проезжать границу один раз, а не туда-обратно.
[01:59:33.720 --> 01:59:34.720]  Ну вот.
[01:59:37.720 --> 01:59:38.720]  Ну как повезет.
[01:59:38.720 --> 01:59:39.720]  Ну как повезет.
[01:59:39.720 --> 01:59:40.720]  Так, зависит от разреза.
[01:59:45.720 --> 01:59:47.720]  Да, но это зависит от конкретного потока.
[01:59:48.720 --> 01:59:57.720]  Но мы говорим, что, но как бы мы можем все равно, но в идеале все равно, да, вот все равно в идеале, это все-таки чтобы каждая машина проезжала один раз, чтобы их было побольше.
[01:59:58.720 --> 02:00:05.720]  То есть у нас есть, потому что смотрите, определение такое, что вот С от УВ, где мы пишем, что У лежит в С.
[02:00:05.720 --> 02:00:09.720]  Ну ладно, в нашей парадигме это так пишется.
[02:00:11.720 --> 02:00:12.720]  Е.
[02:00:12.720 --> 02:00:13.720]  Е.
[02:00:13.720 --> 02:00:14.720]  Е.
[02:00:14.720 --> 02:00:15.720]  Е.
[02:00:15.720 --> 02:00:16.720]  Старт в С.
[02:00:17.720 --> 02:00:18.720]  Значит, Е.
[02:00:18.720 --> 02:00:19.720]  Финиш.
[02:00:20.720 --> 02:00:21.720]  Лежит вот там.
[02:00:22.720 --> 02:00:24.720]  О, вот такой вот красота.
[02:00:25.720 --> 02:00:26.720]  Видите, да?
[02:00:27.720 --> 02:00:28.720]  Ну да.
[02:00:29.720 --> 02:00:43.720]  То есть в принципе, то есть он считает, что через таможню может притекать столько машин, исходя из расчета, что просто по каждому ребру, значит, там на каждом ребре у нас показывается, сколько в единицу времени может там проезжать по машин.
[02:00:46.720 --> 02:00:51.720]  Да, конечно, в некоторых потоках, конечно, чистый поток через разрез не обязан этому соответствовать.
[02:00:52.720 --> 02:00:54.720]  Но сразу видно мистическое утверждение.
[02:00:57.720 --> 02:01:02.720]  Ф от СТ всегда меньше либо равно С от СТ.
[02:01:04.720 --> 02:01:05.720]  Невероятно.
[02:01:06.720 --> 02:01:08.720]  Ну вот, ну просто по определению понятно.
[02:01:09.720 --> 02:01:14.720]  Потому что от С, потому что вот этой С мажорируется вот эта слагаемая, а вот это можно оценить как ноль.
[02:01:15.720 --> 02:01:16.720]  Невероятно.
[02:01:17.720 --> 02:01:18.720]  Да.
[02:01:18.720 --> 02:01:19.720]  Ну вот.
[02:01:19.720 --> 02:01:20.720]  Нет, ну невероятно, но важно.
[02:01:21.720 --> 02:01:24.720]  То есть то, что мы сказали про пропускную способность, это реально верхняя граница.
[02:01:25.720 --> 02:01:26.720]  Больше не протечет.
[02:01:27.720 --> 02:01:36.720]  То есть в принципе раньше мы оценивали, то есть если мы думаем, как оценить сверху пропускную способность, то есть нашей сети вообще, то есть максимальный поток, то что мы имеем?
[02:01:37.720 --> 02:01:42.720]  То мы имеем, что мы могли оценить там сколько может вытекать, сколько может текать, и теперь мы это обобщили.
[02:01:42.720 --> 02:01:43.720]  Обобщили.
[02:01:43.720 --> 02:01:46.360]  Да, обратите внимание, мы это буквально обобщили,
[02:01:46.360 --> 02:01:49.760]  потому что, кстати, заметим, что вот на самом деле вот
[02:01:49.760 --> 02:01:53.160]  есть такое утверждение, что модуль f, например, вот
[02:01:53.160 --> 02:01:56.840]  модуль f, это на самом деле равно f от вот такого разреза
[02:01:56.840 --> 02:02:11.560]  как s и, собственно, там v без s.
[02:02:11.560 --> 02:02:17.400]  Для этого обратите внимание, это не свойство, это определение.
[02:02:17.400 --> 02:02:18.400]  Обратите внимание.
[02:02:18.400 --> 02:02:24.360]  Да, потому что, да, бывает и такой разрез, разрез из
[02:02:24.360 --> 02:02:27.720]  одной вершины, из всех остальных, но помните, когда мы строили
[02:02:27.720 --> 02:02:30.320]  алгоритм прима, кстати, мы с такими разрезами уже
[02:02:30.320 --> 02:02:31.320]  сталкивались.
[02:02:31.320 --> 02:02:32.320]  Что?
[02:02:32.320 --> 02:02:38.240]  Да, я его даже еще вот так напишу.
[02:02:38.240 --> 02:02:51.000]  Ну, как-то у нас же может быть цикл в себе.
[02:02:51.000 --> 02:02:52.000]  А мы все учли.
[02:02:52.000 --> 02:02:53.000]  Да ну.
[02:02:53.000 --> 02:02:58.800]  Не, а какая разница, смотрите, что такое f, это сколько
[02:02:58.800 --> 02:03:02.200]  потока вытекло из s минус сколько потоков текло,
[02:03:02.200 --> 02:03:06.360]  что такое f от этого разреза, сколько потока протекло
[02:03:06.360 --> 02:03:10.240]  из s куда-то, минус сколько потока текло из куда-то
[02:03:10.240 --> 02:03:11.240]  в s.
[02:03:11.240 --> 02:03:12.240]  Ну вот.
[02:03:12.240 --> 02:03:15.520]  Если написать формальные буковки, то почему-то они
[02:03:15.520 --> 02:03:16.520]  будут совпадать.
[02:03:16.520 --> 02:03:22.840]  Так что на самом деле, то есть эта вот граница это
[02:03:22.840 --> 02:03:28.240]  как бы немножко обобщает, но оказывается эта граница
[02:03:28.240 --> 02:03:29.240]  точна.
[02:03:29.960 --> 02:03:30.960]  Ну в каком плане?
[02:03:30.960 --> 02:03:33.200]  Потому что мы оценить поток можем, переберем все два
[02:03:33.200 --> 02:03:37.320]  в степени вы минус два, значит, разреза, для каждого
[02:03:37.320 --> 02:03:39.560]  из них вычислим вот это и возьмем минимум.
[02:03:39.560 --> 02:03:45.480]  Нет, потому что, да, вот теперь я могу сказать, следствие
[02:03:45.480 --> 02:03:52.440]  для любого разреза st модуль f меньше либо равно c от st.
[02:03:52.440 --> 02:03:53.440]  Вот все, железно.
[02:03:53.440 --> 02:03:58.140]  Важный факт, да, то есть я могу этот поток оценивать
[02:03:58.140 --> 02:03:59.740]  как пропускные способности, могу вот перебрать два
[02:03:59.740 --> 02:04:03.020]  в степени там модуль v минус два чисел и выбрать из них
[02:04:03.020 --> 02:04:04.020]  минимум.
[02:04:04.020 --> 02:04:10.700]  И у нас вот возникло уже подозрение, что эта оценка
[02:04:10.700 --> 02:04:11.700]  должна быть точной.
[02:04:11.700 --> 02:04:17.180]  Ну подозрение вот базировалось на том, что если у нас выяснилось,
[02:04:17.180 --> 02:04:19.020]  причем это как-то связано с остаточной сетью.
[02:04:19.020 --> 02:04:23.580]  Потому что откуда мы вообще, почему мы вообще захотели
[02:04:23.580 --> 02:04:25.420]  эти разрезы вообще рассматривать?
[02:04:25.420 --> 02:04:28.020]  Потому что напоминаю, как у нас произошло.
[02:04:28.020 --> 02:04:31.260]  Мы пытались, условно, пихать поток через остаточную
[02:04:31.260 --> 02:04:33.500]  сеть, выяснилось, что не можем.
[02:04:33.500 --> 02:04:35.900]  Мы рассмотрели, а докуда мы из это сможем дойти и
[02:04:35.900 --> 02:04:38.540]  обнаружили, что там какой-то подозрительно насыщенный
[02:04:38.540 --> 02:04:39.540]  разрез.
[02:04:39.540 --> 02:04:45.100]  Вот полное ощущение, как будто в нем вот едва ли
[02:04:45.100 --> 02:04:46.100]  не равенство достигается.
[02:04:46.100 --> 02:04:49.740]  Потому что по камере все ребра насыщенные, а обратно
[02:04:49.740 --> 02:04:51.380]  вроде как ничего не течет.
[02:04:51.380 --> 02:04:53.780]  Потому что если бы обратно что-то текло, то у нас бы
[02:04:53.780 --> 02:04:56.500]  и в эту сторону было бы ребро, по которому этот поток
[02:04:56.500 --> 02:04:57.500]  можно отменить.
[02:04:57.500 --> 02:05:02.180]  А в остаточной сети такого нет, понимаете, да?
[02:05:02.180 --> 02:05:03.180]  Вот.
[02:05:03.180 --> 02:05:07.500]  И в результате, ну практически мы уже, может быть, где-то
[02:05:07.500 --> 02:05:11.900]  так проговорили то, что можно назвать теорема форда
[02:05:11.900 --> 02:05:12.900]  Фолкерсона.
[02:05:12.900 --> 02:05:17.900]  Фолкерсона.
[02:05:17.900 --> 02:05:24.900]  Мистическая теорема.
[02:05:28.420 --> 02:05:34.860]  Ну, я ее еще не сформулировал.
[02:05:34.860 --> 02:05:41.860]  Пусть g равно, давайте прям коротко, g-e-c-s-t сеть и f поток
[02:05:41.860 --> 02:05:48.860]  в ней.
[02:05:56.100 --> 02:06:03.100]  Тогда соответственно следующие три утверждения эквивалентны.
[02:06:03.100 --> 02:06:10.100]  Значит, утверждение номер раз f максимальный, ну в том
[02:06:25.220 --> 02:06:28.220]  плане, что величина потока максимально возможна.
[02:06:28.220 --> 02:06:35.220]  f максимальный, на хит, нет, ну вот, да, модуль f равно
[02:06:35.220 --> 02:06:42.220]  c от s-t для некоторого разреза, ну вот, да, модуль f равно
[02:06:53.100 --> 02:07:00.100]  c от s-t для некоторого разреза.
[02:07:05.220 --> 02:07:12.220]  И третье, красивое, в остаточной сети g-f нет пути из s, из истоков
[02:07:26.980 --> 02:07:33.980]  в сток, что важно, по не нулевым ребрам.
[02:07:35.220 --> 02:07:42.220]  Вот такая красота. Вот, давайте смотреть. Ну, давайте
[02:07:57.420 --> 02:08:00.420]  смотреть, что такое нот. То есть я сказал, что они не
[02:08:00.420 --> 02:08:02.500]  обязательно все верны, они эквиваленты, то есть либо
[02:08:02.500 --> 02:08:04.980]  одновременно все верны, либо одновременно все
[02:08:04.980 --> 02:08:10.780]  не верны. Ну, давайте думать, как же это нам доказывать.
[02:08:10.780 --> 02:08:17.780]  Ну, давайте что-нибудь очевидное тут есть. Ну, да. Ну, может
[02:08:21.940 --> 02:08:28.940]  дать. Ну, из один сразу тут вообще все очевидно. Ну,
[02:08:29.740 --> 02:08:36.740]  потому что эквивалента нет, конечно. Если поток максимальный,
[02:08:38.460 --> 02:08:41.700]  то пути очевидно нет. Ну, да, иначе если бы он был,
[02:08:41.700 --> 02:08:45.860]  мы бы увеличили поток. Да, я на обратной не претендую,
[02:08:45.860 --> 02:08:51.700]  да это и не оптимально. Вот. Что еще можно сказать.
[02:08:51.700 --> 02:08:57.740]  Но еще из этих всех утверждений мы уже доказали, что из двоечки
[02:08:57.740 --> 02:09:02.340]  на самом деле следует идентичка. Потому что мы вот, ну, просто
[02:09:02.340 --> 02:09:07.660]  вот из этого утверждения. Видите, да? То есть не такое
[02:09:07.660 --> 02:09:11.140]  очевидное утверждение, но вот мы его уже вывели. Видите,
[02:09:11.140 --> 02:09:17.460]  да? Так что остается только одно вывести, что если из
[02:09:17.460 --> 02:09:21.580]  остаточной сети, в остаточности такого пути нет, то найдется
[02:09:21.580 --> 02:09:27.700]  такой разрез. Вот это самое интересное. Но на самом деле
[02:09:27.700 --> 02:09:33.660]  мы это практически уже сделали. Точнее так, мы этот разрез
[02:09:33.660 --> 02:09:36.380]  уже брали из соображений, которые практически дают
[02:09:36.380 --> 02:09:40.020]  нам доказательства. А именно, то есть как построить этот
[02:09:40.020 --> 02:09:43.740]  разрез? Очень просто так. У вас нет пути из СПТ. Так,
[02:09:43.740 --> 02:09:46.940]  давайте построим такой разрез, просто в котором
[02:09:46.940 --> 02:10:00.300]  в С мы поместим то, откуда дойти можно. Ну вот, и утверждается,
[02:10:00.300 --> 02:10:05.260]  что это он и есть. Почему это утверждается? Да просто
[02:10:05.260 --> 02:10:08.260]  потому что, заметьте, в остаточной сети, потому что, смотрите
[02:10:08.260 --> 02:10:12.060]  какая ситуация. Так, вот давайте это мы убираем, это
[02:10:12.060 --> 02:10:15.780]  нам уже неинтересно. Точнее, это мы уже запомнили, это
[02:10:15.940 --> 02:10:19.140]  простое определение. Значит, смотрите. Ну просто вот запустились
[02:10:19.140 --> 02:10:23.180]  мы тут. Шли, шли, шли, шли, шли, шли, шли, шли, шли, шли,
[02:10:23.180 --> 02:10:45.220]  шли, шли, шли, шли, шли, шли, шли, шли, шли, шли, шли, шли,
[02:10:45.220 --> 02:10:49.900]  и уперлись в тупичок. Это означает, что у нас в остаточной
[02:10:49.900 --> 02:10:54.420]  сети, обратите внимание, ребер в эту сторону нет. Вот
[02:10:54.420 --> 02:11:00.460]  так. Да, я бы сказал даже не рыжим крестиком, а зеленым
[02:11:00.460 --> 02:11:06.340]  крестиком. То есть, таможення больше ничего не пустит.
[02:11:06.340 --> 02:11:14.620]  Ну, что это значит? Значит, это следующее. Это означает,
[02:11:14.620 --> 02:11:20.740]  что в реальной жизни, когда у нас пропустная способность,
[02:11:20.740 --> 02:11:29.180]  значит, смотрим. Ну, во-первых, заметим, что если в реальной
[02:11:29.180 --> 02:11:32.940]  жизни рассматривать, то обязательно в обратную
[02:11:32.940 --> 02:11:38.460]  сторону здесь будет ноль из уже неважных чего. Потому
[02:11:38.460 --> 02:11:40.700]  что если бы мы вот тут по обратную сторону что-то
[02:11:40.700 --> 02:11:44.820]  текло, то у нас была бы тут, в эту вершину. То обратите
[02:11:44.820 --> 02:11:47.660]  внимание, тогда и эта вершина в остаточной сети бы оказалась,
[02:11:47.660 --> 02:11:51.660]  потому что этому ребру соответствовало рыжее ребро здесь валимное,
[02:11:51.660 --> 02:11:57.100]  правда? Вот. Ну, тогда просто это было противоречие с
[02:11:57.100 --> 02:12:00.700]  определением этого множества. Помните, да, здесь как бы
[02:12:00.700 --> 02:12:03.460]  находится множество, докуда из С по ненулевым ребрам
[02:12:03.460 --> 02:12:14.860]  дойти можно, поэтому сюда вот. Ну, вот. Ну, в рыжем
[02:12:14.860 --> 02:12:17.980]  графе да. Но теперь рассмотрим просто все синие ребра, проходящие
[02:12:17.980 --> 02:12:21.140]  через этот разрез. Я утверждаю, что если рассмотреть ребры
[02:12:21.140 --> 02:12:26.700]  из ТВС, то там поток понетекущий по нему равен нулю. Вот больше
[02:12:26.700 --> 02:12:29.140]  тупо быть не может, потому что иначе тут рыжее ребро
[02:12:29.140 --> 02:12:34.780]  было. А что касается этих ребр, то тут, допустим, находится
[02:12:34.780 --> 02:12:37.500]  какая-нибудь там 19. Но тогда мы вынуждены усиливать,
[02:12:37.500 --> 02:12:39.620]  что 19 и проходит, потому что в противном случае тоже
[02:12:39.620 --> 02:12:44.820]  могли бы допускать еще чего-нибудь. Но тогда если вы просто
[02:12:44.820 --> 02:12:48.740]  теперь возьмете, то есть F теперь осмотрим как чистый
[02:12:48.740 --> 02:12:51.460]  поток, то есть просто вот сколько течет туда, минус
[02:12:51.460 --> 02:12:55.540]  сколько течет сюда, то обнаружим, что вот эти ребра, идущие
[02:12:55.540 --> 02:13:01.020]  назад, мы берем как нулевые, то есть учитываем как ноль,
[02:13:01.020 --> 02:13:03.940]  а в ту сторону учитываем ровно как пропускная способность.
[02:13:03.940 --> 02:13:06.940]  Получается в точности определение пропускной способности.
[02:13:06.940 --> 02:13:18.340]  Все. Ну и получается, что терема доказана. Вот, собственно,
[02:13:18.340 --> 02:13:19.340]  и все.
[02:13:19.340 --> 02:13:27.580]  Ну мы рассмотрели, пусть у нас есть ребро с пропускной
[02:13:27.580 --> 02:13:31.500]  способностью 19, идущий из доли S в долю T. Утверждение
[02:13:31.500 --> 02:13:35.020]  заключается в том, что, видимо, в этом потоке по этому
[02:13:35.020 --> 02:13:38.660]  ребру течет именно 19. Ну потому что иначе тут было
[02:13:38.660 --> 02:13:44.060]  рыжее ребро. Не нулевое, конечно, рыжее ребро. Вот.
[02:13:44.060 --> 02:13:47.220]  То есть поэтому получается, что когда мы будем суммировать
[02:13:47.300 --> 02:13:51.540]  чистый поток, мы будем по ребрам, идущим назад, суммировать
[02:13:51.540 --> 02:13:54.300]  нули, а по ребрам, идущим вперед, мы будем суммировать
[02:13:54.300 --> 02:13:58.180]  в точности их пропускные способности. Так что следовательно
[02:13:58.180 --> 02:14:03.620]  получилось. То есть на самом деле теперь заметим, что,
[02:14:03.620 --> 02:14:07.860]  ну ладно, не то чтобы мы научились искать максимальный поток,
[02:14:07.860 --> 02:14:11.060]  обратите внимание, мы еще не научились его искать,
[02:14:11.060 --> 02:14:14.740]  но мы обнаружили эквивалентность задач поиска максимального
[02:14:14.740 --> 02:14:17.620]  потока и минимального разреза на самом деле.
[02:14:17.620 --> 02:14:23.060]  Потому что, ну потому что на самом деле поиск минимального
[02:14:23.060 --> 02:14:26.180]  разреза это отдельная математическая задача. По умолчанию она
[02:14:26.180 --> 02:14:28.820]  даже с потоками никак не связана. То есть просто
[02:14:28.820 --> 02:14:31.620]  вобразить задача, потому что можно эту задачу отдельно
[02:14:31.620 --> 02:14:35.060]  формулировать. Дан граф, взвешенный, все веса не отрицательные.
[02:14:35.060 --> 02:14:39.980]  Там, ну правда, допустим, S и T, правда, фиксировано.
[02:14:40.060 --> 02:14:44.860]  Я хочу провести разрез так, чтобы S и T разделились,
[02:14:44.860 --> 02:14:50.300]  и при этом сумма ребер пересекающих разрез была как можно меньше.
[02:14:50.300 --> 02:14:56.860]  Ну на этот раз сумма, понимаете, да? Это тоже отдельная задача.
[02:14:56.860 --> 02:14:59.020]  Ну вот, но на самом деле, вот, оказывается, она решается
[02:14:59.020 --> 02:15:01.380]  с помощью максимального потока. То есть если вы
[02:15:01.380 --> 02:15:05.300]  нашли, вот у вас с небес по факсу прислали максимальный
[02:15:05.300 --> 02:15:09.820]  поток, то минимальный разрез вы тоже найдете без проблем.
[02:15:09.820 --> 02:15:14.220]  Вы просто, за O от E, то есть вы просто запустите DFS из
[02:15:14.220 --> 02:15:19.100]  устока по не нулевым ребрам в остаточной сети.
[02:15:23.100 --> 02:15:25.100]  Сейчас еще раз, если у меня есть ориентированный граф.
[02:15:25.100 --> 02:15:29.100]  Ну, например, ориентированный, а можно и не ориентированный.
[02:15:29.100 --> 02:15:33.100]  Хорошо, и не ориентированный, то... Ну не важно.
[02:15:33.100 --> 02:15:36.100]  Ну ориентированный, то его можно сделать ориентированным.
[02:15:36.100 --> 02:15:38.100]  Ну, например, да.
[02:15:40.100 --> 02:15:43.100]  Ну, здесь есть пара технических моментов, конечно.
[02:15:43.100 --> 02:15:46.100]  Но там важнейший момент, что задачи мы умеем решать
[02:15:46.100 --> 02:15:49.100]  только в предположении, что веса всех ребер не отрицательны.
[02:15:49.100 --> 02:15:53.100]  Это важно. Потому что пропускные способности, да.
[02:15:53.100 --> 02:15:57.100]  Вот с отрицательными что-то наука, по-моему, как-то напряженно работает.
[02:15:57.100 --> 02:15:59.100]  А тут так.
[02:15:59.100 --> 02:16:02.100]  Поэтому, в чем чаще всего, кстати, в реальных задачах
[02:16:02.100 --> 02:16:05.100]  на самом деле, да, то есть там, чаще всего, когда говорят,
[02:16:05.100 --> 02:16:07.100]  задача решается потоком, то есть чаще всего, на самом
[02:16:07.100 --> 02:16:11.100]  деле, говорить, задача решается разрезом, а не потоком.
[02:16:11.100 --> 02:16:14.100]  Ну, то есть, на самом деле, просто поток используется как черный ящик,
[02:16:14.100 --> 02:16:16.100]  который ищет разрез. То есть, если у вас есть какой-то там
[02:16:16.100 --> 02:16:19.100]  принципиально другой метод, который работает на основе
[02:16:19.100 --> 02:16:23.100]  идей, синказии и этапов, то, в общем-то, потока для этого не нужна.
[02:16:27.100 --> 02:16:29.100]  Так что вот.
[02:16:29.100 --> 02:16:32.100]  Ну, вот такая. Так что это вот мы отметили.
[02:16:32.100 --> 02:16:35.100]  Ну, в строем мы еще так, как говорится, в какой-то момент,
[02:16:35.100 --> 02:16:38.100]  в какой-то момент у нас еще будет такой семинар,
[02:16:38.100 --> 02:16:41.100]  такой буквально семинар на этот раз.
[02:16:41.100 --> 02:16:43.100]  Ну, вот.
[02:16:43.100 --> 02:16:45.100]  У нас будут семинары.
[02:16:45.100 --> 02:16:46.100]  Ну, как...
[02:16:46.100 --> 02:16:47.100]  У нас будут семинары?
[02:16:47.100 --> 02:16:49.100]  Ну, в некотором смысле, да.
[02:16:49.100 --> 02:16:50.100]  Вау!
[02:16:50.100 --> 02:16:54.100]  Нет, ну, возможно, даже когда-то сегодня будет, я думаю.
[02:16:54.100 --> 02:16:56.100]  Ну, что, времени еще немного.
[02:16:56.100 --> 02:16:59.100]  Я, собственно, поэтому и решил, на самом деле, пока это лучше.
[02:16:59.100 --> 02:17:04.100]  Раз есть время, давайте кого-нибудь потоки максимально подробно обсудим.
[02:17:04.100 --> 02:17:05.100]  Вот.
[02:17:05.100 --> 02:17:08.100]  Ну, пока же так, значит, до перерыва у нас там осталось сколько там?
[02:17:08.100 --> 02:17:10.100]  Ну, просто...
[02:17:10.100 --> 02:17:11.100]  Ну, нет, я имею.
[02:17:11.100 --> 02:17:12.100]  Нет, до перерыва...
[02:17:12.100 --> 02:17:14.100]  Ну, уже нет смысла, как бы.
[02:17:14.100 --> 02:17:15.100]  Да.
[02:17:15.100 --> 02:17:16.100]  Уже нет смысла.
[02:17:16.100 --> 02:17:18.100]  Ну ладно, где-то полчаса.
[02:17:19.100 --> 02:17:21.100]  Но поговорим мы вот о чем.
[02:17:21.100 --> 02:17:23.100]  Значит, смотрите.
[02:17:24.100 --> 02:17:27.100]  Ну, диспозиция тут такая.
[02:17:27.100 --> 02:17:31.100]  Значит, теперь как же этот максимальный поток искать?
[02:17:31.100 --> 02:17:32.100]  Ну, на самом деле, да.
[02:17:32.100 --> 02:17:35.100]  Мы убедились в том, что у нас жадник через остаточную сеть.
[02:17:37.100 --> 02:17:40.100]  Значит, жадник через остаточную сеть, он работает.
[02:17:42.100 --> 02:17:45.100]  То есть, и в принципе, теперь это можно даже формально...
[02:17:45.100 --> 02:17:51.100]  Теперь уже формально действительно сформулировать.
[02:17:51.100 --> 02:17:54.100]  Нет, формально сформулировать так себе слово сочетание, конечно, но...
[02:17:55.100 --> 02:17:56.100]  Как это?
[02:17:56.100 --> 02:17:57.100]  Фродам.
[02:17:57.100 --> 02:18:02.100]  То есть, формализовать и сказать, что это теперь у нас будет называться метод Форда Фолкерсона.
[02:18:04.100 --> 02:18:05.100]  Метод.
[02:18:08.100 --> 02:18:10.100]  Метод Форда Фолкерсона.
[02:18:10.100 --> 02:18:11.100]  Фолкерсон.
[02:18:24.100 --> 02:18:26.100]  Значит, мистический метод звучит...
[02:18:26.100 --> 02:18:28.100]  Ну, фактически звучит так.
[02:18:28.100 --> 02:18:29.100]  Ваил...
[02:18:29.100 --> 02:18:31.100]  Я прямо даже вот начну так писать.
[02:18:31.100 --> 02:18:39.100]  Ваил в GF есть путь из S в T.
[02:18:44.100 --> 02:18:46.100]  По не нулевым играм.
[02:18:59.100 --> 02:19:16.100]  Ну, короче, пустить по этому пути максимально возможное...
[02:19:16.100 --> 02:19:18.100]  Максимально возможное...
[02:19:25.100 --> 02:19:26.100]  Количество...
[02:19:28.100 --> 02:19:29.100]  Чего?
[02:19:34.100 --> 02:19:35.100]  Воды.
[02:19:37.100 --> 02:19:38.100]  Программистов.
[02:19:41.100 --> 02:19:45.100]  Короче, количество единиц потока.
[02:19:47.100 --> 02:19:48.100]  Условных единиц.
[02:19:48.100 --> 02:19:49.100]  Вот так.
[02:19:49.100 --> 02:19:53.100]  Знаете, там 90-е, как бы почему-то, я не знаю, почему-то...
[02:19:53.100 --> 02:19:54.100]  Называется...
[02:19:54.100 --> 02:19:56.100]  Про доллар был эфемизм условных единиц.
[02:19:56.100 --> 02:19:58.100]  Или сокращенно УЕ.
[02:19:59.100 --> 02:20:03.100]  Да, поэтому все получали зарплату УЕ.
[02:20:04.100 --> 02:20:06.100]  Да, это реально так звучало, да.
[02:20:10.100 --> 02:20:11.100]  Вот.
[02:20:11.100 --> 02:20:12.100]  Вот такая вот диспозиция.
[02:20:14.100 --> 02:20:16.100]  Максимальное возможное количество единиц потока.
[02:20:16.100 --> 02:20:17.100]  Вот такая.
[02:20:18.100 --> 02:20:20.100]  То есть, вот просто метод Форда Фолкерсона такой.
[02:20:20.100 --> 02:20:22.100]  Почему я называю его метод, а не алгоритм?
[02:20:24.100 --> 02:20:26.100]  Ну, потому что я ничего не говорю о том,
[02:20:26.100 --> 02:20:29.100]  а как конкретно мы будем искать пути, правда?
[02:20:31.100 --> 02:20:34.100]  Ну, самый тупой путь, это, конечно, ДФ.
[02:20:34.100 --> 02:20:36.100]  Что можно сделать, это, конечно, ДФС.
[02:20:37.100 --> 02:20:38.100]  Да.
[02:20:39.100 --> 02:20:40.100]  Есть такая красота.
[02:20:41.100 --> 02:20:42.100]  Но есть одна...
[02:20:42.100 --> 02:20:43.100]  Ну, вот.
[02:20:43.100 --> 02:20:45.100]  Ну, а что мы можем тогда сказать?
[02:20:45.100 --> 02:20:49.100]  Ну, мы можем сказать так, что если метод Форда Фолкерсона
[02:20:49.100 --> 02:20:51.100]  закончит свою работу,
[02:20:52.100 --> 02:20:54.100]  то найденный поток реально максимальный.
[02:20:56.100 --> 02:20:57.100]  И это вот, спасибо.
[02:20:57.100 --> 02:20:58.100]  Да.
[02:20:58.100 --> 02:20:59.100]  Но есть одна маленькая проблема.
[02:21:00.100 --> 02:21:01.100]  А он закончит свою работу.
[02:21:02.100 --> 02:21:04.100]  А он же с целыми работает.
[02:21:05.100 --> 02:21:06.100]  Ну, как сказать?
[02:21:06.100 --> 02:21:08.100]  Нет, он, ну, теоретически он может с кем везде работать.
[02:21:10.100 --> 02:21:11.100]  Ну, в смысле, за нормальное время?
[02:21:12.100 --> 02:21:14.100]  Да, ну, смотря, что для вас нормальное время.
[02:21:15.100 --> 02:21:18.100]  На самом деле, я даже в целых числах могу привести пример,
[02:21:18.100 --> 02:21:20.100]  где теоретически может работать очень больно.
[02:21:22.100 --> 02:21:23.100]  Вот есть вот такой...
[02:21:24.100 --> 02:21:26.100]  Вот есть такой классический пример.
[02:21:28.100 --> 02:21:30.100]  Ну, то есть, конечно, классический пример там,
[02:21:30.100 --> 02:21:32.100]  где я вам будет просто фатально не вести.
[02:21:33.100 --> 02:21:35.100]  Он же работает вообще-то за моду Лев.
[02:21:36.100 --> 02:21:39.100]  Ну, в единичном графе, да, за моду Лев на ДФС, да.
[02:21:40.100 --> 02:21:42.100]  Ну, если ДФС нам искать, конечно.
[02:21:43.100 --> 02:21:44.100]  Но это уже другого.
[02:21:44.100 --> 02:21:45.100]  Нет, иногда, кстати, это помогает.
[02:21:45.100 --> 02:21:46.100]  Иногда, кстати, это помогает.
[02:21:47.100 --> 02:21:48.100]  Иногда такой метод помогает.
[02:21:48.100 --> 02:21:52.100]  Если вы знаете, что у вас максимальный размер потока это два,
[02:21:54.100 --> 02:21:56.100]  ну, то как бы тогда, как найти поток?
[02:21:56.100 --> 02:21:58.100]  Ну, просто запустили два ДФС, и в общем-то все.
[02:22:00.100 --> 02:22:02.100]  Нет, кстати, отсюда следует важная вещь.
[02:22:03.100 --> 02:22:06.100]  Кстати, из вот этой теоремы и из этого метода,
[02:22:06.100 --> 02:22:10.100]  что на самом деле, если все пропускные способности целые,
[02:22:10.100 --> 02:22:13.100]  то тогда вы можете найти максимальный поток в целочисленном виде.
[02:22:15.100 --> 02:22:23.100]  Нет, я имею в виду другое.
[02:22:23.100 --> 02:22:25.100]  Из разреза следует только, что максимальная,
[02:22:25.100 --> 02:22:29.100]  что как бы величина максимального потока будет целой.
[02:22:30.100 --> 02:22:34.100]  А я утверждаю следующее, что вы еще и по каждому ребру будете пускать целое число жидкости.
[02:22:34.100 --> 02:22:36.100]  Это более сильное утверждение.
[02:22:37.100 --> 02:22:39.100]  Это уже из метода следует.
[02:22:40.100 --> 02:22:44.100]  Потому что каждый ДФС у вас будет пускать по целому числу жидкости.
[02:22:46.100 --> 02:22:48.100]  Но если вам фатально не везет,
[02:22:48.100 --> 02:22:54.100]  то, например, вот в этом графе вы можете тут просто запускать миллиард ДФС вот таким вот нехитрым способом.
[02:22:56.100 --> 02:22:58.100]  То есть, если вам как-то совсем фатально не везет.
[02:23:03.100 --> 02:23:05.100]  Но, более того, это еще самое худшее.
[02:23:05.100 --> 02:23:07.100]  То есть, на самом деле, если вы посмотрите...
[02:23:07.100 --> 02:23:09.100]  На самом деле, тут я вас отошлю к Википедии.
[02:23:10.100 --> 02:23:12.100]  Но бывает... Но там, оказывается, там еще круче.
[02:23:12.100 --> 02:23:16.100]  В иррациональных числах вообще бывают примеры, когда этот метод не закончится никогда.
[02:23:19.100 --> 02:23:20.100]  Это уже грустная история.
[02:23:20.100 --> 02:23:22.100]  Да, нет. Самая грустная история, что вы скажете,
[02:23:22.100 --> 02:23:24.100]  ну ладно, давайте сколько-то там интераций сделаем,
[02:23:24.100 --> 02:23:26.100]  и это будет близко к максимали.
[02:23:26.100 --> 02:23:27.100]  Нет.
[02:23:29.100 --> 02:23:30.100]  Да, нет.
[02:23:30.100 --> 02:23:33.100]  Ну просто из того, что какой бы тут черный ящик ни был,
[02:23:33.100 --> 02:23:37.100]  даже если у вас тут сходится от СТ, и вы тут что-то ищете,
[02:23:37.100 --> 02:23:40.100]  вы всегда можете добавить какое-нибудь ребро, и пусть ДФС опихаются только здесь.
[02:23:42.100 --> 02:23:44.100]  Поэтому, как бы оказывается, вы можете просто...
[02:23:44.100 --> 02:23:46.100]  Процесс у вас может даже не сойтись.
[02:23:47.100 --> 02:23:48.100]  И это больно.
[02:23:50.100 --> 02:23:52.100]  Поэтому просто так ДФС...
[02:23:52.100 --> 02:23:54.100]  Ну нет, иногда работает.
[02:23:54.100 --> 02:23:56.100]  То есть, иногда работает.
[02:23:56.100 --> 02:23:58.100]  Будет у нас парасочетание, на самом деле,
[02:23:58.100 --> 02:24:00.100]  он будет работать еще как.
[02:24:02.100 --> 02:24:04.100]  Ну да, как вы уже догадываетесь...
[02:24:04.100 --> 02:24:06.100]  Кто-то уже догадывается, на самом деле, алгоритм Куна
[02:24:06.100 --> 02:24:09.100]  это просто там упиханный метод Форда Фолкерсона.
[02:24:12.100 --> 02:24:13.100]  Вот.
[02:24:21.100 --> 02:24:23.100]  Вот для этого у нас будет семи...
[02:24:23.100 --> 02:24:25.100]  Вот для этого у нас будет семинар.
[02:24:26.100 --> 02:24:27.100]  Да, как раз.
[02:24:29.100 --> 02:24:30.100]  Чего?
[02:24:33.100 --> 02:24:34.100]  Ну, погодите.
[02:24:34.100 --> 02:24:36.100]  Ладно, давайте не будем торопиться.
[02:24:36.100 --> 02:24:38.100]  Мы про сочетание еще подробно рассмотрим.
[02:24:39.100 --> 02:24:41.100]  Сегодня же и рассмотрим, в общем-то.
[02:24:41.100 --> 02:24:43.100]  Ну так, в принципе, вот...
[02:24:44.100 --> 02:24:45.100]  До деница.
[02:24:45.100 --> 02:24:47.100]  Так, во-первых, до деница.
[02:24:49.100 --> 02:24:51.100]  Нет, мы сказали до деницу.
[02:24:52.100 --> 02:24:53.100]  Окей, хорошо, хорошо.
[02:24:53.100 --> 02:24:54.100]  Хорошо, хорошо.
[02:24:54.100 --> 02:24:55.100]  До деница.
[02:24:55.100 --> 02:24:56.100]  Не уверен.
[02:24:57.100 --> 02:24:58.100]  Не уверен.
[02:24:58.100 --> 02:24:59.100]  Хотелось бы, но не уверен.
[02:25:00.100 --> 02:25:01.100]  Что все, да.
[02:25:01.100 --> 02:25:03.100]  Что прям все сразу, это вот еще вопрос.
[02:25:05.100 --> 02:25:06.100]  Остановись.
[02:25:09.100 --> 02:25:10.100]  Мясо.
[02:25:11.100 --> 02:25:12.100]  Да, давайте.
[02:25:13.100 --> 02:25:14.100]  Ничего не надо.
[02:25:14.100 --> 02:25:15.100]  Самое сложное мы там уже сделали.
[02:25:16.100 --> 02:25:17.100]  Значит, смотрите.
[02:25:17.100 --> 02:25:21.100]  Но, конечно, первые шаги для деница мы сделаем уже сегодня.
[02:25:23.100 --> 02:25:25.100]  Ну, потому что для этого начнем мы, конечно, с простого.
[02:25:25.100 --> 02:25:26.100]  Потому что тут вытекает...
[02:25:26.100 --> 02:25:29.100]  Потому что вот конкретно вот этот граф наводить сразу будет хорошо.
[02:25:29.100 --> 02:25:30.100]  DFS не получается.
[02:25:31.100 --> 02:25:32.100]  А может BFS?
[02:25:35.100 --> 02:25:36.100]  Вот.
[02:25:37.100 --> 02:25:38.100]  Поэтому получается...
[02:25:39.100 --> 02:25:42.100]  Алгоритм Эдмонса Карпа.
[02:25:43.100 --> 02:25:45.100]  Подождите, тут будут сейчас эти алгоритмы.
[02:25:46.100 --> 02:25:47.100]  Знаете, так пафосно.
[02:25:47.100 --> 02:25:49.100]  Алгоритм Эдмонса Карпа.
[02:25:50.100 --> 02:25:51.100]  Как бы пафосно.
[02:25:51.100 --> 02:25:53.100]  То есть прям целых два автора.
[02:25:58.100 --> 02:26:03.100]  А с точки зрения того, что мы уже сказали, на самом деле описывается одной фразой.
[02:26:05.100 --> 02:26:07.100]  Метод Форда Фолкерсона.
[02:26:08.100 --> 02:26:22.100]  С поиском путей BFS.
[02:26:29.100 --> 02:26:32.100]  Вот такой вот красота.
[02:26:32.100 --> 02:26:41.100]  То есть идея в том, что просто берем тупо метод Форда Фолкерсона, но вот эти вот пути и ищем, и пускаем, это просто BFS.
[02:26:42.100 --> 02:26:48.100]  BFS в смысле, то есть ищем кратчайшее по количеству, внимание, ребер, пути.
[02:26:48.100 --> 02:26:49.100]  Именно ребер.
[02:26:49.100 --> 02:26:52.100]  То есть нам наплевать там, сколько по этим ребрам можно пустить.
[02:26:52.100 --> 02:26:53.100]  Главное, чтобы было поменьше.
[02:26:54.100 --> 02:26:56.100]  И конкретно в данном случае это неплохо работает.
[02:26:56.100 --> 02:27:00.100]  Потому что тогда мы, собственно, за два BFS в общем-то все закончим, правда?
[02:27:01.100 --> 02:27:04.100]  Но, конечно, этот маленький пример, это, конечно, сам по себе не показатель.
[02:27:07.100 --> 02:27:08.100]  Да.
[02:27:08.100 --> 02:27:11.100]  В каждый момент времени мы берем остаточную сеть и ищем кратчайший путь.
[02:27:11.100 --> 02:27:13.100]  Но мы ищем, конечно, по не нулевым ребрамам.
[02:27:16.100 --> 02:27:18.100]  Алгоритм Эдмонса Карпа.
[02:27:20.100 --> 02:27:21.100]  Да.
[02:27:23.100 --> 02:27:24.100]  Да.
[02:27:25.100 --> 02:27:26.100]  Вот.
[02:27:26.100 --> 02:27:28.100]  А, ну да, что-то мы забыли про английский.
[02:27:28.100 --> 02:27:30.100]  Так что, да, вот остаточная сеть, кстати, называется.
[02:27:30.100 --> 02:27:32.100]  Вот это Residual Network.
[02:27:35.100 --> 02:27:36.100]  Вот так вот.
[02:27:37.100 --> 02:27:38.100]  Это остаточная сеть.
[02:27:38.100 --> 02:27:39.100]  А, ну сеть.
[02:27:39.100 --> 02:27:41.100]  Да, вот вы уже догадались, как сеть называется.
[02:27:42.100 --> 02:27:43.100]  Да, Network.
[02:27:44.100 --> 02:27:45.100]  Эти товарищи.
[02:27:45.100 --> 02:27:48.100]  Ну, тут, в общем-то, тут все тривиально.
[02:27:50.100 --> 02:27:52.100]  Редкие случаи, как слышится, так и пишется.
[02:27:55.100 --> 02:27:56.100]  Да, прям.
[02:27:56.100 --> 02:27:57.100]  Через K?
[02:27:58.100 --> 02:27:59.100]  Да.
[02:28:00.100 --> 02:28:01.100]  Да, да, да, да, да.
[02:28:05.100 --> 02:28:08.100]  Ну, надеюсь, там нет подлянки, что там карта через U какой-нибудь.
[02:28:10.100 --> 02:28:11.100]  Или через C.
[02:28:11.100 --> 02:28:15.100]  Нет, C точно нет.
[02:28:17.100 --> 02:28:19.100]  А вот это, ну, в общем, ладно, вы там.
[02:28:20.100 --> 02:28:23.100]  Так что вот, метод Форда Фолкерсона с поиском путей BFS.
[02:28:25.100 --> 02:28:26.100]  Вот.
[02:28:28.100 --> 02:28:33.100]  И вот, оказывается, что этот алгоритм, он работает.
[02:28:34.100 --> 02:28:35.100]  Вау.
[02:28:35.100 --> 02:28:37.100]  В смысле, конечно работает.
[02:28:38.100 --> 02:28:39.100]  Сильно.
[02:28:39.100 --> 02:28:41.100]  Полиномерально конечно работает.
[02:28:41.100 --> 02:28:42.100]  Даже с иррациональным.
[02:28:43.100 --> 02:28:44.100]  Да.
[02:28:44.100 --> 02:28:46.100]  Не, ну, давайте, могли ли все поспеть про два-степеневое это?
[02:28:47.100 --> 02:28:48.100]  Чего?
[02:28:48.100 --> 02:28:49.100]  Какого?
[02:28:49.100 --> 02:28:50.100]  Разрела?
[02:28:51.100 --> 02:28:53.100]  Нет, ну, тут эти тут задачи, надо же поток найти.
[02:28:54.100 --> 02:28:55.100]  Как бы, я хочу, да.
[02:28:56.100 --> 02:28:57.100]  Как это?
[02:28:58.100 --> 02:28:59.100]  Здравствуйте, да.
[02:29:00.100 --> 02:29:01.100]  Как это называется?
[02:29:02.100 --> 02:29:03.100]  Какие когда-нибудь мечты будущего?
[02:29:04.100 --> 02:29:05.100]  Как это?
[02:29:06.100 --> 02:29:08.100]  Жили были Россия, Китай, Индия, Евросоюз.
[02:29:09.100 --> 02:29:12.100]  И хотели они пускать между собой много-много товаров.
[02:29:13.100 --> 02:29:14.100]  Классные идеи.
[02:29:15.100 --> 02:29:18.100]  И сказали они, а сколько товаров мы тут можем пускать?
[02:29:20.100 --> 02:29:21.100]  Вот.
[02:29:22.100 --> 02:29:24.100]  И пришли два американца.
[02:29:25.100 --> 02:29:29.100]  И сказали, да, мы тут перебрали у вас тут два в степени разрезов.
[02:29:30.100 --> 02:29:31.100]  Вот.
[02:29:32.100 --> 02:29:33.100]  И нашли.
[02:29:33.100 --> 02:29:34.100]  Вот минимальный.
[02:29:34.100 --> 02:29:35.100]  Ответ 42.
[02:29:38.100 --> 02:29:39.100]  Ну вот.
[02:29:39.100 --> 02:29:43.100]  Ну правда, нам бы хотелось не только 42, а, собственно,
[02:29:43.100 --> 02:29:44.100]  наладить торговля.
[02:29:44.100 --> 02:29:47.100]  Не сказать, что где-то там в теоретических мечтах
[02:29:47.100 --> 02:29:51.100]  мы тут могли бы торговать друг с другом на уровне 42.
[02:29:53.100 --> 02:29:55.100]  Что бы это ни значило.
[02:29:56.100 --> 02:29:59.100]  Но на самом деле все гораздо проще.
[02:30:00.100 --> 02:30:04.100]  Ну, на самом деле, оказывается, в чем дело?
[02:30:05.100 --> 02:30:09.100]  Но на самом деле базируется все на очень интересном утверждении.
[02:30:13.100 --> 02:30:16.100]  Которое уже может гарантировать в некотором смысле конечности.
[02:30:17.100 --> 02:30:18.100]  То есть утверждение.
[02:30:24.100 --> 02:30:25.100]  Ну вот.
[02:30:28.100 --> 02:30:30.100]  Для любой вершины В.
[02:30:35.100 --> 02:30:37.100]  Дист от С и В.
[02:30:41.100 --> 02:30:43.100]  В процессе.
[02:30:47.100 --> 02:30:48.100]  Эдванса Карпа.
[02:30:49.100 --> 02:30:50.100]  Внимание.
[02:30:50.100 --> 02:30:52.100]  Не уменьшается.
[02:30:55.100 --> 02:30:57.100]  То есть не может быть так, чтобы тут.
[02:30:57.100 --> 02:30:59.100]  Ну то есть понятно, что расстояние меняется.
[02:30:59.100 --> 02:31:01.100]  Потому что какие-то ребра становятся нулевыми.
[02:31:01.100 --> 02:31:03.100]  Какие-то наоборот становятся ненулевыми.
[02:31:04.100 --> 02:31:06.100]  Ну в остаточной сети, да?
[02:31:08.100 --> 02:31:09.100]  Ну вот.
[02:31:09.100 --> 02:31:10.100]  Но факт остается фактом.
[02:31:10.100 --> 02:31:12.100]  Расстояние в процессе Эдванса Карпа не уменьшается.
[02:31:12.100 --> 02:31:15.100]  Ну расстояние я естественно имею в виду в остаточной сети.
[02:31:17.100 --> 02:31:18.100]  Ну вот я вот вижу.
[02:31:18.100 --> 02:31:20.100]  То есть оно может меняться, оно будет увеличиваться конечно.
[02:31:20.100 --> 02:31:22.100]  Но уменьшаться оно не будет.
[02:31:25.100 --> 02:31:26.100]  Почему?
[02:31:28.100 --> 02:31:30.100]  Ну догадаться очень простое.
[02:31:31.100 --> 02:31:35.100]  Рассмотрим какую-то фазу Эдванса Карпа.
[02:31:35.100 --> 02:31:36.100]  Да?
[02:31:40.100 --> 02:31:44.100]  Ну минимальное количество ребер в пути от С до В нулевых.
[02:31:45.100 --> 02:31:47.100]  Да, но именно в остаточной сети, что важно.
[02:31:49.100 --> 02:31:51.100]  Значит я утверждаю, что расстояние не уменьшается.
[02:31:51.100 --> 02:31:53.100]  Потому что как меняется граф?
[02:31:53.100 --> 02:31:55.100]  Смотрите, вот у нас давайте рассмотрим какую-нибудь фазу.
[02:31:55.100 --> 02:31:59.100]  Чтобы найти очередной путь, мы запускаем BFS.
[02:32:01.100 --> 02:32:05.100]  И BFS у нас разбивает граф на вот такие слои.
[02:32:07.100 --> 02:32:09.100]  Видите, да?
[02:32:14.100 --> 02:32:16.100]  Где-то здесь даже T находится.
[02:32:17.100 --> 02:32:19.100]  Но это не обязательно последний слой.
[02:32:20.100 --> 02:32:24.100]  А могут быть еще вообще какие-то еще вершины, до которых мы вообще не дошли.
[02:32:25.100 --> 02:32:30.100]  Ну кстати, но из Форда Фолкерсона, как мы сейчас легко увидим,
[02:32:30.100 --> 02:32:35.100]  что если мы сейчас не можем дойти до S, то в процессе мы уже не сможем доходить до них никогда.
[02:32:38.100 --> 02:32:39.100]  Ну у нас просто так устроено все.
[02:32:39.100 --> 02:32:44.100]  Потому что у нас что-то меняется только для вершин, до которых мы из S дойти могли.
[02:32:48.100 --> 02:32:50.100]  И так, граф у нас устроен так.
[02:32:51.100 --> 02:32:55.100]  То есть граф устроен так, что у нас все ребра идут из слоя в следующий.
[02:32:57.100 --> 02:32:58.100]  Вот как-то вот так.
[02:32:58.100 --> 02:33:00.100]  Ну а также могут идти внутри одного слоя.
[02:33:04.100 --> 02:33:06.100]  Не обязательно, я же говорю, могут быть внутри.
[02:33:07.100 --> 02:33:09.100]  Могут, пожалуйста, это пожалуйста.
[02:33:10.100 --> 02:33:11.100]  Это все пожалуйста.
[02:33:13.100 --> 02:33:15.100]  Вот это все пожалуйста.
[02:33:15.100 --> 02:33:20.100]  Единственное, что запрещено, это скакать из слоя через один, два и так далее.
[02:33:20.100 --> 02:33:21.100]  Такого не бывает.
[02:33:45.100 --> 02:33:46.100]  Все, вот так.
[02:33:47.100 --> 02:33:49.100]  Вот так вот еще бывает.
[02:33:50.100 --> 02:33:51.100]  Но сюда и в другом не бывает.
[02:33:51.100 --> 02:33:52.100]  Ну вот не важно.
[02:33:53.100 --> 02:33:55.100]  Теперь смотрите какая ситуация происходит.
[02:33:55.100 --> 02:33:56.100]  Вот рассмотрим эти слои.
[02:33:56.100 --> 02:33:58.100]  Прямо сейчас расстояние такие.
[02:33:59.100 --> 02:34:00.100]  Это остаточная сеть, да?
[02:34:00.100 --> 02:34:01.100]  Да.
[02:34:01.100 --> 02:34:03.100]  Это остаточная сеть на какой-то фазе.
[02:34:04.100 --> 02:34:10.100]  То есть мы уже там сколько-то потоков пустили, поэтому и остаточная сеть стала вот такой капсом.
[02:34:11.100 --> 02:34:12.100]  Вот такой.
[02:34:13.100 --> 02:34:14.100]  Значит, смотрите.
[02:34:15.100 --> 02:34:18.100]  Тогда мы говорим, что мы нашли кратчайший путь.
[02:34:18.100 --> 02:34:20.100]  Кратчайший путь выглядит вот таким вот образом.
[02:34:31.100 --> 02:34:32.100]  Ну прямо сейчас да.
[02:34:33.100 --> 02:34:35.100]  По определению БФС.
[02:34:36.100 --> 02:34:38.100]  Мы же не просто так эти слои нарисовали.
[02:34:39.100 --> 02:34:44.100]  Это вершины с расстоянием один, это расстояние два, это расстояние три и так далее.
[02:34:51.100 --> 02:34:54.100]  Нет, я здесь нарисовал только не нулевые ребра.
[02:34:56.100 --> 02:34:57.100]  Да, это важно.
[02:34:58.100 --> 02:34:59.100]  Поэтому путь будет выглядеть именно так.
[02:35:00.100 --> 02:35:02.100]  Но прямо сейчас обратите внимание.
[02:35:02.100 --> 02:35:04.100]  Это один из путей, которые мы нашли в БФС.
[02:35:33.100 --> 02:35:37.100]  Появятся обратные ребра.
[02:35:38.100 --> 02:35:39.100]  Так они и называются обратные.
[02:35:43.100 --> 02:35:46.100]  Мы точно можем сказать, что вот эти ребра точно появятся.
[02:35:47.100 --> 02:35:48.100]  Может они даже и были, кстати.
[02:35:50.100 --> 02:35:51.100]  Но теперь они точно есть.
[02:35:56.100 --> 02:35:59.100]  В том плане, что они могли быть нулевыми.
[02:36:03.100 --> 02:36:08.100]  Когда я сейчас говорю, ребра появились, я имею в виду, что они стали не нулевыми.
[02:36:11.100 --> 02:36:13.100]  Потому что мы пропустили по этому пути поток.
[02:36:21.100 --> 02:36:30.100]  Ну пропустить поток означает, что увеличить поток через F у всех этих ребер на максимально возможное число.
[02:36:33.100 --> 02:36:36.100]  Но в этом смысле тогда, с точки зрения остаточной сети, что произойдет?
[02:36:39.100 --> 02:36:44.100]  Тогда пропустая способность в остаточной сети вот этих вот обратных ребер на эту же константу увеличится.
[02:36:53.100 --> 02:36:56.100]  Может она и была не нулевой, но теперь не нулевой точно станет.
[02:36:57.100 --> 02:37:03.100]  А еще мы можем, кстати, сказать, и для нас тоже будет важно сейчас, что хотя бы одно из этих ребер исчезнет.
[02:37:06.100 --> 02:37:10.100]  Ну пока нам сейчас для утверждения не важно, но как бы мы же увеличиваем не просто так,
[02:37:11.100 --> 02:37:14.100]  мы увеличиваем так, чтобы по одному из этих ребер мы перестали мощь пустить, по крайней мере сейчас.
[02:37:17.100 --> 02:37:18.100]  Может быть, кстати, таких ребер будет несколько.
[02:37:19.100 --> 02:37:22.100]  Иногда бывает, что просто там убьются все ребра.
[02:37:23.100 --> 02:37:27.100]  Но как бы пока у нас в общем случае гарантируется, что убьется только хотя бы одно.
[02:37:33.100 --> 02:37:37.100]  Вот такое изменение претерпело это вот остаточная сеть.
[02:37:38.100 --> 02:37:42.100]  А теперь давайте попробуем найти расстояние от СДВ в обновленной сети.
[02:37:43.100 --> 02:37:44.100]  То есть на следующей итерации.
[02:37:46.100 --> 02:37:48.100]  Заметим теперь следующее. Как изменилась сеть?
[02:37:49.100 --> 02:37:53.100]  Вот рассмотрим те же слои. То есть обратите внимание, это слои, оставшиеся с предыдущего BFS.
[02:37:55.100 --> 02:38:02.100]  Но в них было свойство, что у нас нет ребер, которые скачут из слоя через один или через два вперед и так далее.
[02:38:11.100 --> 02:38:13.100]  А теперь вот было расстояние от СДВ в нашем случае 4.
[02:38:14.100 --> 02:38:19.100]  Так вот, я утверждаю теперь следующее, что теперь на следующем шаре меньше 4 не будет.
[02:38:21.100 --> 02:38:30.100]  Почему? Потому что если рассмотреть слои, которые остались с прошлого раза, то проход по каждому ребру увеличивает номер слоя не более чем на один все еще.
[02:38:31.100 --> 02:38:33.100]  Потому что ребер, которые скачут у нас через слой, они так и не появились.
[02:38:36.100 --> 02:38:39.100]  То есть все новые ребра, которые у нас появились, они идут назад.
[02:38:40.100 --> 02:38:44.100]  Поэтому меньше чем 4 точно не будет. Может будет больше.
[02:38:45.100 --> 02:38:48.100]  Потому что может быть вершина В была вот эта и там какой-то вот этот путь убился.
[02:38:49.100 --> 02:38:51.100]  Но меньше уж точно не будет.
[02:38:52.100 --> 02:38:58.100]  То есть таким образом мы показали, что на следующей итерации расстояние будет не меньше, чем до предыдущего твердения доказано.
[02:39:00.100 --> 02:39:05.100]  Ну а за одной из этой же картинки следует, что если до вершины пути не было, то он и не появится.
[02:39:06.100 --> 02:39:07.100]  Вот понимаете, да?
[02:39:10.100 --> 02:39:14.100]  Но если пути не было, как может увеличиться тот, что нет?
[02:39:18.100 --> 02:39:22.100]  Нет, если он есть, то вершины тут есть. Вот я тут нарисовал вершины, которых пути из С вообще нет.
[02:39:27.100 --> 02:39:29.100]  А про красную? Ну да, оно могло увеличиться, да, все нормально.
[02:39:30.100 --> 02:39:33.100]  Да, оно могло увеличиться, и это важно.
[02:39:34.100 --> 02:39:36.100]  Нам главное, что оно не уменьшается.
[02:39:36.100 --> 02:39:39.100]  А увеличиться оно могло, и мы этим будем пользоваться.
[02:39:40.100 --> 02:39:44.100]  Вот. Теперь давайте думать, что происходит.
[02:39:45.100 --> 02:39:47.100]  Теперь смотрите. Давайте теперь рассмотрим каждый.
[02:39:48.100 --> 02:39:51.100]  И теперь заметим следующее, что расстояние только увеличивается.
[02:39:52.100 --> 02:39:53.100]  То есть, ну вот, и остаются теми же.
[02:39:54.100 --> 02:39:57.100]  Но заметим, что каждый BFS убил хотя бы одно ребро.
[02:40:00.100 --> 02:40:01.100]  Теперь мы искали этот вопрос.
[02:40:01.100 --> 02:40:02.100]  Ну правда заметим.
[02:40:03.100 --> 02:40:08.100]  То есть очень хочется сказать, ну тогда из этого следует, что количество BFS будет не более чем E.
[02:40:10.100 --> 02:40:12.100]  Ну потому что у нас всего E ребер.
[02:40:16.100 --> 02:40:18.100]  Да. Ну хорошо, 2E.
[02:40:21.100 --> 02:40:23.100]  Да, эти ребра могут быть и обратными, в общем-то быть.
[02:40:25.100 --> 02:40:26.100]  Но все еще круче.
[02:40:26.100 --> 02:40:31.100]  Потому что дело в том, что ребро, может быть так случится, что ребро придется убить несколько раз.
[02:40:35.100 --> 02:40:36.100]  А элементарно.
[02:40:37.100 --> 02:40:39.100]  Ситуация такая. Вот прямо сейчас мы убили вот это ребро.
[02:40:40.100 --> 02:40:45.100]  Что значит убили? Сделали его, у него нулевая остаточная пропускная способность.
[02:40:47.100 --> 02:40:50.100]  Но на следующих итерациях BFS, это мы тут один раз рисуем.
[02:40:51.100 --> 02:40:54.100]  Но на самом деле там слои будут принципиально другие, пути будут принципиально другие.
[02:40:54.100 --> 02:40:55.100]  И мы можем заходить.
[02:40:56.100 --> 02:40:57.100]  И в какой-то момент может оказаться.
[02:40:58.100 --> 02:40:59.100]  Да, вот это ребро может сыграть обратно.
[02:41:00.100 --> 02:41:05.100]  Но тогда, когда мы по нему пустим поток, тогда это ребро разубилось обратно.
[02:41:06.100 --> 02:41:08.100]  Да вот, наоборот ожило обратно.
[02:41:09.100 --> 02:41:14.100]  Да, а потом в какой-то момент оно опять уже стало чуть дальше, но тоже на пути от SdT.
[02:41:15.100 --> 02:41:17.100]  То есть расстояние от SdT увеличилось, но оно оказалось на пути.
[02:41:18.100 --> 02:41:19.100]  И мы его опять убили.
[02:41:20.100 --> 02:41:21.100]  Потом опять воскресили.
[02:41:22.100 --> 02:41:23.100]  Потом опять убили.
[02:41:24.100 --> 02:41:27.100]  И вопрос, сколько раз мы можем убить ребро?
[02:41:35.100 --> 02:41:36.100]  Но заметим, да.
[02:41:37.100 --> 02:41:38.100]  Даже, я бы сказал, в пополам.
[02:41:39.100 --> 02:41:41.100]  Конкретное ребро можно убить не более, чем в пополам раз.
[02:41:42.100 --> 02:41:43.100]  Причина очень проста.
[02:41:44.100 --> 02:41:49.100]  Дело в том, что когда вы убиваете ребро, значит расстояние до его начала равно D,
[02:41:50.100 --> 02:41:52.100]  а до конца D плюс 1, где D какое-то произвольное число.
[02:41:52.100 --> 02:41:53.100]  Правда?
[02:41:54.100 --> 02:41:55.100]  Ну, произвольное число меньше, чем V.
[02:41:56.100 --> 02:41:57.100]  Даже V минус 1, но это уже мелочь.
[02:41:58.100 --> 02:41:59.100]  Тогда смотрите.
[02:42:00.100 --> 02:42:01.100]  Итак, вы его убили.
[02:42:03.100 --> 02:42:05.100]  Да, как-то вы убили Виктора Ленуара.
[02:42:06.100 --> 02:42:07.100]  Да, вот.
[02:42:08.100 --> 02:42:09.100]  Соответственно.
[02:42:10.100 --> 02:42:11.100]  Но теперь, что дальше?
[02:42:12.100 --> 02:42:18.100]  Но теперь, чтобы оно ожило, нужно, чтобы здесь вот это ребро стало ребром BFS.
[02:42:19.100 --> 02:42:25.100]  Но тогда это означает, когда оно живет, это означает, у этой вершины, раз сейчас D плюс 1,
[02:42:26.100 --> 02:42:28.100]  то потом будет больше либо равно, чем D плюс 1,
[02:42:29.100 --> 02:42:32.100]  а здесь, как следствие, должно быть больше либо равно, чем D плюс 2.
[02:42:33.100 --> 02:42:34.100]  Правда?
[02:42:35.100 --> 02:42:36.100]  Вот.
[02:42:37.100 --> 02:42:39.100]  И тогда мы его убили, а вот это ребро ожило.
[02:42:40.100 --> 02:42:44.100]  И тогда, в следующий раз, когда мы его захотим убить обратно,
[02:42:45.100 --> 02:42:47.100]  тут уже будет больше либо равно, чем D плюс 2,
[02:42:48.100 --> 02:42:50.100]  а тут, как следствие, больше либо равно, чем D плюс 3.
[02:42:53.100 --> 02:42:54.100]  То есть, понятно.
[02:42:55.100 --> 02:42:56.100]  Помните, да?
[02:42:57.100 --> 02:42:59.100]  Ну, ребро ведет себя логично.
[02:43:00.100 --> 02:43:02.100]  Если его один раз убили, то в следующий раз, когда его будут убивать,
[02:43:03.100 --> 02:43:04.100]  оно будет держаться от истока подальше.
[02:43:05.100 --> 02:43:06.100]  В общем-то, логично.
[02:43:06.100 --> 02:43:07.100]  Вот.
[02:43:08.100 --> 02:43:11.100]  Поэтому, как бы, оно себе гарантирует, что его убьют не более, чем V пополам раз.
[02:43:13.100 --> 02:43:14.100]  Почему V пополам?
[02:43:15.100 --> 02:43:17.100]  Потому что, ну, V пополам плюс один, может быть, я не знаю.
[02:43:18.100 --> 02:43:20.100]  Потому что каждый скачок на расстоянии, видите, тут аж два, а не один.
[02:43:21.100 --> 02:43:23.100]  А расстояние больше, чем V быть не может.
[02:43:25.100 --> 02:43:28.100]  Мы сказали, что каждое ребро убьется не больше, чем V пополам раз.
[02:43:29.100 --> 02:43:33.100]  Для каждого ребра мы считаем, что, ну, для ребра больше, чем V пополам раз.
[02:43:33.100 --> 02:43:38.100]  Для каждого ребра мы считаем, что, ну, для ребра в начальном графе у нас есть два ребра в его сети.
[02:43:39.100 --> 02:43:40.100]  Нет, у каждого ребра, да.
[02:43:41.100 --> 02:43:43.100]  Но другое вопрос, что у нас ребер не E, а два E, это да.
[02:43:44.100 --> 02:43:48.100]  То есть мы считаем для каждого ребра в остаточной сети, что он убьется не более V пополам раз.
[02:43:49.100 --> 02:43:50.100]  Да.
[02:43:51.100 --> 02:43:52.100]  Но в остаточной сети у нас два E ребер.
[02:43:53.100 --> 02:43:54.100]  Да.
[02:43:55.100 --> 02:43:56.100]  Два E ребер.
[02:43:57.100 --> 02:44:00.100]  И это означает, ну, в принципе, асимпатически, в общем-то, это не принципиально.
[02:44:00.100 --> 02:44:09.100]  И это означает, что всего у нас убийств будет, то есть не более чем, еще раз, два E умножить на V пополам.
[02:44:10.100 --> 02:44:11.100]  Не V.
[02:44:12.100 --> 02:44:15.100]  Ну, там может быть плюс один еще, но на самом деле там нет плюс один, потому что там V минус один расстояние, на самом деле.
[02:44:16.100 --> 02:44:18.100]  А это на самом деле V минус два, ну, в общем, понятно.
[02:44:19.100 --> 02:44:23.100]  Так что, короче, убийств будет не более, чем VE.
[02:44:24.100 --> 02:44:26.100]  А почему сейчас V пополам можно повторить?
[02:44:26.100 --> 02:44:38.100]  Потому что, смотрите, если вы один раз убили ребро, то в следующий раз, когда вы будете убивать это же ребро, именно вот это же, да, расстояние до вот его начала будет хотя бы на два больше.
[02:44:45.100 --> 02:44:46.100]  Поэтому именно V пополам.
[02:44:49.100 --> 02:44:54.100]  И так, значит, убийств будет не более, чем даже, ну, там можно просто сказать O от VE, но на самом деле просто VE.
[02:44:55.100 --> 02:44:57.100]  Значит, VE убийств.
[02:44:58.100 --> 02:45:04.100]  А это означает, то есть простое следствие, что, то есть простое следствие очень простое.
[02:45:05.100 --> 02:45:09.100]  Что раз у нас VE итераций, ну, плюс одна может быть, чтобы выяснить, что все плохо.
[02:45:10.100 --> 02:45:16.100]  Каждое работает за O от E, ну, может быть V плюс E.
[02:45:17.100 --> 02:45:21.100]  Ну, хорошо, и тогда у нас получается такая симпточь, как VE на V плюс E.
[02:45:21.100 --> 02:45:26.100]  Ну, на самом деле, я бы можно просто сказать VE квадрат.
[02:45:27.100 --> 02:45:32.100]  Ну, я так скажу вам, смотрите, на самом деле...
[02:45:33.100 --> 02:45:42.100]  Ну, я скажу так, запусти, потому что можно вначале запустить BFS, да, и сказать, что до кого я не дошел, до тех, кто все равно не дойду, так что давайте их приигнорим.
[02:45:43.100 --> 02:45:48.100]  И получается, на самом деле, там, то есть на самом деле вот это вот V плюс E значения иметь не будет.
[02:45:48.100 --> 02:45:53.100]  Ну, да, то есть на самом деле это V, тут на самом деле V надо заменить на минимум из VE.
[02:45:54.100 --> 02:46:03.100]  Но чаще всего, ну, обычно об этом не заморачиваются, потому что чаще всего очень редкие случаи, когда V больше, чем E, ну, по понятным причинам.
[02:46:04.100 --> 02:46:05.100]  Вот.
[02:46:06.100 --> 02:46:08.100]  Что такое V плюс E? Почему вы за эту...
[02:46:09.100 --> 02:46:11.100]  Ну, BFS у нас формально за V плюс E работает.
[02:46:11.100 --> 02:46:12.100]  А х, что у нас такое?
[02:46:13.100 --> 02:46:16.100]  Это вот этот х, это количество убийств.
[02:46:17.100 --> 02:46:18.100]  Общее количество убийств?
[02:46:19.100 --> 02:46:20.100]  Да.
[02:46:21.100 --> 02:46:22.100]  Вот так.
[02:46:22.100 --> 02:46:27.100]  Вы В тратите на то, чтобы в БФСе зачистить массив ювизм.
[02:46:27.100 --> 02:46:32.100]  А Х, что у нас такое?
[02:46:32.100 --> 02:46:36.100]  Это вот этот Х, количество убийств.
[02:46:36.100 --> 02:46:37.100]  Общее количество убийств?
[02:46:37.100 --> 02:46:38.100]  Да.
[02:46:38.100 --> 02:46:39.100]  Вот так.
[02:46:39.100 --> 02:46:41.100]  Ну почему меньше либра равно?
[02:46:41.100 --> 02:46:43.100]  Потому что не каждое либро убивается.
[02:46:43.100 --> 02:46:47.100]  Да, во-первых, не каждое либро убивается.
[02:46:47.100 --> 02:46:50.100]  Во-вторых, в некоторых БФС вы убьете сразу несколько
[02:46:51.100 --> 02:46:55.100]  А 2Е из того, что в остаточной сети 2Е ребра.
[02:46:55.100 --> 02:46:59.100]  Помните, по исходному графу с Е-рёбрами мы для каждого
[02:46:59.100 --> 02:47:03.100]  ребра добавили в эту штуку два?
[02:47:03.100 --> 02:47:05.100]  Поэтому да.
[02:47:05.100 --> 02:47:10.100]  У нас есть два ребра, и каждая очень очень хочет
[02:47:10.100 --> 02:47:12.100]  умереть как можно большее число раз.
[02:47:12.100 --> 02:47:14.100]  Что за фатализа?
[02:47:14.100 --> 02:47:17.100]  Ну почему, наоборот, весело.
[02:47:17.100 --> 02:47:21.100]  Нет, фатализа травмастная, это значит мы все умрём.
[02:47:21.100 --> 02:47:23.100]  А тут как вы думаете?
[02:47:23.100 --> 02:47:25.100]  Ну хорошо, можно по-другому.
[02:47:25.100 --> 02:47:27.100]  И каждый хочет ожить.
[02:47:27.100 --> 02:47:28.100]  И ещё раз.
[02:47:28.100 --> 02:47:30.100]  И ещё раз.
[02:47:30.100 --> 02:47:33.100]  О господи.
[02:47:33.100 --> 02:47:36.100]  Жириновский это ребро в графе.
[02:47:36.100 --> 02:47:39.100]  Интересно.
[02:47:39.100 --> 02:47:41.100]  Не, по этой логике да.
[02:47:41.100 --> 02:47:43.100]  Кто тут исток, кто сток.
[02:47:43.100 --> 02:47:46.100]  Кто пропускная способность.
[02:47:46.100 --> 02:47:47.100]  О господи.
[02:47:47.100 --> 02:47:49.100]  Да, на самом деле.
[02:47:49.100 --> 02:47:50.100]  Ну да.
[02:47:50.100 --> 02:47:51.100]  А все да.
[02:47:51.100 --> 02:47:52.100]  И потом грустно.
[02:47:52.100 --> 02:47:54.100]  Да на самом деле все мы один большой водопровод.
[02:47:54.100 --> 02:47:57.100]  И в итоге нас всех сольют.
[02:47:57.100 --> 02:48:00.100]  Да, да, да.
[02:48:00.100 --> 02:48:04.100]  Как не тот фатализм пошёл.
[02:48:04.100 --> 02:48:05.100]  Ну да.
[02:48:05.100 --> 02:48:06.100]  Не, ну там везде можно.
[02:48:06.100 --> 02:48:10.100]  Все сядут на машинку и поедут через границу.
[02:48:10.100 --> 02:48:11.100]  Ну да.
[02:48:11.100 --> 02:48:12.100]  Не, ну как сказать.
[02:48:12.100 --> 02:48:13.100]  Смотрите, на самом деле.
[02:48:13.100 --> 02:48:16.100]  Ну во-первых, да, у нас не было перерыва 15 минут.
[02:48:16.100 --> 02:48:20.100]  Нет, ну отчасти мы его скили из-за того, что я чуть опоздал.
[02:48:20.100 --> 02:48:21.100]  Вот.
[02:48:21.100 --> 02:48:22.100]  Но это неважно.
[02:48:22.100 --> 02:48:24.100]  Впрочем, на самом деле мы здесь дошли, мне кажется,
[02:48:24.100 --> 02:48:26.100]  до определенной такой хорошей точки.
[02:48:26.100 --> 02:48:29.100]  Так что как раз вот здесь остановиться стоит.
[02:48:29.100 --> 02:48:30.100]  Так что что мы и сделаем.
[02:48:30.100 --> 02:48:31.100]  Ну вот.
[02:48:31.100 --> 02:48:33.100]  Ну а соответственно потом продолжим.
[02:48:33.100 --> 02:48:34.100]  И вот я не знаю.
[02:48:34.100 --> 02:48:36.100]  Наверное будет не алгоритм Диница, наверное.
[02:48:36.100 --> 02:48:40.100]  А в первую очередь мы все-таки посмотрим, что с этим можно сделать.
