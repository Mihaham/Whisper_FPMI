[00:00.000 --> 00:09.060]  Добрый вечер, у нас сегодня последний наконец-то дерево
[00:09.060 --> 00:11.060]  поиска.
[00:11.060 --> 00:12.060]  Красно-черное.
[00:12.060 --> 00:24.840]  Я считаю, еще один из подходов к тому, как можно было бы
[00:24.840 --> 00:29.080]  реализовать желаемый функционал, напомню, это основные три
[00:29.080 --> 00:35.720]  операции Find, Insert, Erase, ну и сегодня еще одно, так сказать,
[00:35.720 --> 00:37.560]  ультимативное дерево, которое все это умеет делать.
[00:37.560 --> 00:42.680]  Потому что определение, корневое, бинарное дерево
[00:42.680 --> 00:47.520]  поиска называется красно-черным, пока что все как обычно,
[00:47.520 --> 00:58.880]  корневое, бинарное дерево называется красно-черным.
[00:58.880 --> 01:01.040]  Если выполняются одновременно следующие пять условий.
[01:01.040 --> 01:06.920]  Во-первых, все вершины покрашены в один из двух цветов, либо
[01:06.920 --> 01:12.280]  в красный, либо в черный.
[01:12.280 --> 01:18.080]  Каждая вершина покрашена в один цвет, ну в один из
[01:18.080 --> 01:28.480]  двух цветов, красный или черный.
[01:28.480 --> 01:33.240]  Во-вторых, корень всегда черная вершина.
[01:33.240 --> 01:40.040]  Корень дерева черный.
[01:40.040 --> 01:41.040]  Третье условие.
[01:41.040 --> 01:45.600]  У нас, на самом деле, в этом дереве будут вершины двух
[01:45.600 --> 01:46.600]  типов.
[01:46.600 --> 01:49.520]  Вершины нормальные, в которых хранятся какие-то ключи.
[01:49.520 --> 01:52.040]  Ну вот эта вершинка, и там в нем какой-то х, в ней
[01:52.040 --> 01:55.240]  какой-то х, который является элементом нашего множества.
[01:55.240 --> 01:58.080]  А будут еще фиктивные вершины, просто пустые.
[01:58.080 --> 02:00.080]  Я их буду рисовать прямоугольниками.
[02:00.080 --> 02:02.800]  Вот будут пустые прямоугольники, где ничего не хранится,
[02:02.800 --> 02:05.400]  но чтобы все хорошо работало, вот они будут нужны.
[02:05.400 --> 02:07.720]  То есть, на самом деле, вершины будут двух типов.
[02:07.720 --> 02:11.520]  Нормальные, где хранятся ключи, и пустые фиктивные
[02:11.520 --> 02:12.520]  прямоугольники, которые всегда черные.
[02:12.520 --> 02:17.560]  Итак, вершины бывают двух типов.
[02:17.560 --> 02:26.480]  Ну, обычные и пустые.
[02:26.480 --> 02:30.560]  Обычные и пустые.
[02:30.560 --> 02:36.960]  Так вот, у каждой обычной вершины ровно два сына.
[02:36.960 --> 02:46.080]  У каждой обычной вершины ровно два сына.
[02:46.080 --> 02:53.800]  А все пустые вершины черные и не содержат ключей.
[02:53.800 --> 03:01.600]  Пустые вершины черные и не содержат ключей.
[03:01.600 --> 03:07.960]  Именно что они не несут смысловой нагрузки в плане
[03:07.960 --> 03:10.840]  хранения нашего множества, но это какие-то фиктивные
[03:10.840 --> 03:12.840]  вершины, которые нужны для соблюдения свойств
[03:12.840 --> 03:13.840]  дерева.
[03:13.840 --> 03:17.520]  Например, если бы у меня в обычном дереве была бы
[03:17.520 --> 03:20.560]  какая-то вершина, скажем, с одним сыном, если бы
[03:20.560 --> 03:23.280]  у меня была такая картинка в обычном дереве, то чтобы
[03:23.280 --> 03:25.920]  это было хорошее красно-черное дерево, поскольку мне нужно,
[03:25.920 --> 03:28.520]  чтобы у него было два сына, я буду вот здесь довешивать
[03:28.520 --> 03:30.880]  пустой прямоугольник.
[03:30.880 --> 03:33.200]  То есть насильно буду у каждой вершины заводить
[03:33.200 --> 03:36.000]  сына, если там чего-то не хватает, и у него будет
[03:36.000 --> 03:38.320]  соответственно пустая вершина, которая будет обозначать
[03:38.320 --> 03:41.560]  прямоугольником, и она будет всегда черного цвета.
[03:41.560 --> 03:43.080]  Такая пустая черная вершинка.
[03:43.080 --> 03:47.360]  Так, четвертое условие.
[03:47.360 --> 03:52.720]  Не бывает двух красных вершин подряд, то есть не может
[03:52.720 --> 03:56.680]  быть такое, что родитель и ребенок оба красного
[03:56.680 --> 03:57.680]  цвета.
[03:58.680 --> 04:00.560]  Как бы это коротко написать.
[04:00.560 --> 04:13.560]  В и родитель В не могут быть одновременно красными.
[04:13.560 --> 04:17.560]  Быть одновременно красными.
[04:17.560 --> 04:21.840]  Ну и так для любого В, в смысле, никакая вершина
[04:21.840 --> 04:24.120]  не может быть красной одновременно со своим родителем.
[04:24.560 --> 04:25.560]  Да.
[04:28.560 --> 04:31.720]  Ну, как обычно у нас дерево поиска, что это такое?
[04:31.720 --> 04:34.040]  Это нам нужна структура на множестве элементов.
[04:34.040 --> 04:37.680]  Да, да, вот элементы множества, это ключи у меня, да, я всегда
[04:37.680 --> 04:38.680]  смешиваю эти понятия.
[04:38.680 --> 04:43.360]  Вот, и пятое условие такое, что на любом пути от корня
[04:43.360 --> 04:47.240]  до листа, до любого листа одно и то же количество черных
[04:47.240 --> 04:48.240]  вершин.
[04:48.240 --> 05:01.600]  На любом пути от корня до листа, от корня, ну, достаточно
[05:01.600 --> 05:03.560]  требовать от корня, оттуда будет следовать, что от
[05:03.560 --> 05:06.880]  любой вершины до любого ее потомка листа.
[05:06.880 --> 05:14.880]  Значит, от корня до листа одинаковое количество
[05:14.880 --> 05:15.880]  черных вершин.
[05:18.880 --> 05:26.360]  Значит, ну, как правильно спросили, если это верно
[05:26.360 --> 05:28.960]  для корня, это, на самом деле, верно для любой другой
[05:28.960 --> 05:29.960]  вершины.
[05:29.960 --> 05:31.960]  Вот представьте, у вас есть дерево, у вас есть корень,
[05:31.960 --> 05:34.240]  вы понимаете, что какой бы вы путь ни рассмотрели,
[05:34.240 --> 05:36.560]  количество черных на нем всегда одинаковое.
[05:36.560 --> 05:38.600]  Ну, тогда если я рассмотрю какую-то другую вершинку,
[05:38.600 --> 05:43.120]  скажем, вот на этом пути, v, то как бы я ни рисовал путь
[05:43.120 --> 05:47.360]  в поддереве v, на всех этих путях тоже будет одно
[05:47.480 --> 05:50.640]  и то же количество черных вершин, в смысле, да, потому
[05:50.640 --> 05:52.800]  что если вот здесь, вот есть какие-то два различных
[05:52.800 --> 05:55.380]  пути с различными количествами черных вершин, тогда, если
[05:55.380 --> 05:57.960]  их продлить вот этим вот префиксом, этим началом,
[05:57.960 --> 05:59.560]  то и тогда на этих путях будут разные количества
[05:59.560 --> 06:03.160]  черных вершин, да, поэтому требование про корень оно
[06:03.160 --> 06:05.680]  вылечет требование, что для каждой вершины, вот
[06:05.680 --> 06:07.820]  если вы встали в вершину и как угодно идете до какого-то
[06:07.820 --> 06:10.120]  листа, на любом таком пути одинаковое количество
[06:10.120 --> 06:11.120]  черных вершин.
[06:14.040 --> 06:15.200]  Определение.
[06:15.200 --> 06:16.200]  Хорошее?
[06:16.200 --> 06:17.320]  Мне тоже нравится.
[06:17.320 --> 06:21.640]  Вот, не будем задаваться вопросом, как это можно было
[06:21.640 --> 06:22.640]  придумать.
[06:22.640 --> 06:25.400]  Давайте докажем, что с этим все работает.
[06:25.400 --> 06:27.480]  Значит, простая лемма.
[06:27.480 --> 06:35.120]  Ну, во-первых, давайте я введу определение bh от
[06:35.120 --> 06:36.120]  v.
[06:36.120 --> 06:40.000]  Это черная глубина на black height вершины v.
[06:40.000 --> 06:41.320]  Что это такое?
[06:41.320 --> 06:43.800]  Вот у вас есть вершина v.
[06:43.800 --> 06:47.480]  Мы уже обговорили, что любой путь из v до потомка листа
[06:47.480 --> 06:50.160]  всегда имеет одно и то же количество черных вершин,
[06:50.160 --> 06:53.920]  так вот пусть bh от v это то самое количество.
[06:53.920 --> 06:55.960]  Вот сколько здесь на этом пути черных вершин?
[06:55.960 --> 07:02.720]  Значит, формально bh от v это количество черных вершин
[07:02.720 --> 07:08.800]  на пути, ну, как бы на любом пути, имеется в виду на
[07:08.800 --> 07:15.560]  любом пути от v до листа.
[07:15.560 --> 07:20.120]  Давайте я для удобства скажу, что не считая v, не считая
[07:20.120 --> 07:21.120]  v.
[07:21.120 --> 07:24.440]  То есть, если v черная, то я ее не учитываю в bh.
[07:24.440 --> 07:25.440]  Да.
[07:25.440 --> 07:28.760]  Вот если предстоит такое дерево, что корень, слева
[07:28.760 --> 07:35.720]  лист, справа вершина, а в вершины лист.
[07:35.720 --> 07:36.720]  Вот так?
[07:37.600 --> 07:38.600]  Так.
[07:38.600 --> 07:41.600]  Ну, тогда и здесь тоже должен быть лист, потому что мне
[07:41.600 --> 07:43.920]  нужно, чтобы в вершины было обязательно, если вершина
[07:43.920 --> 07:47.560]  обычная, то есть с ключом, то там у нее два сына обязательно.
[07:47.560 --> 07:48.560]  Это нормальное дерево, да.
[07:48.560 --> 07:55.560]  Листья у вас всегда фиктивные элементы, листья это те,
[07:55.560 --> 07:56.560]  у которых нет детей.
[07:56.560 --> 08:05.680]  Зависит от цветов, потому что bh количество черных
[08:05.680 --> 08:09.040]  вершин, ну в зависимости от раскраски, там bh может
[08:09.040 --> 08:10.040]  быть какой-то.
[08:10.040 --> 08:11.040]  Да, какой вопрос?
[08:11.040 --> 08:18.040]  Здесь для любой могу определить, потому что еще раз, если
[08:18.040 --> 08:21.000]  у меня для корня это верно, то есть если от корня до
[08:21.000 --> 08:24.120]  любого листа, скажем, k черных вершин, на любом пути от
[08:24.120 --> 08:26.720]  корня до любого листа, вот у вас везде k, тогда если
[08:26.720 --> 08:29.640]  я фиксирую любую v другую, скажем, отличную от корня,
[08:29.640 --> 08:31.320]  то в ее по дереве тоже на любом пути должно быть
[08:31.320 --> 08:34.380]  какое-то m одинаковое количество черных вершин, потому что
[08:34.380 --> 08:36.260]  иначе было бы два разных пути, которые можно было
[08:36.260 --> 08:38.660]  продлить до корня, тогда на этих путях было бы разное
[08:38.660 --> 08:39.660]  количество.
[08:39.660 --> 08:46.140]  Так, то есть я просто ввожу вершинку и считаю количество
[08:46.140 --> 08:48.940]  черных на пути, на любом таком пути вниз, оно будет
[08:48.940 --> 08:50.780]  одинаковое по пятому свойству.
[08:50.780 --> 09:01.820]  Значит тогда в под дереве v находится хотя бы 2 в степени
[09:01.820 --> 09:03.980]  bh от v минус 1 вершин.
[09:03.980 --> 09:13.500]  Ну то есть наше любимое соотношение, что размер экспоненциален
[09:13.500 --> 09:16.120]  по глубине, значит наоборот глубина логарифмична по
[09:16.120 --> 09:18.100]  размеру, отсюда и будет следует, что глубина всегда
[09:18.100 --> 09:19.100]  маленькая.
[09:19.100 --> 09:23.020]  Вот, ну доказательства, здесь правда простая индукция,
[09:23.020 --> 09:25.180]  а правда индукция не по черной глубине, а по обычной
[09:25.180 --> 09:26.780]  глубине вершины v.
[09:26.780 --> 09:33.880]  Доказательства, индукция по глубине, давайте даже
[09:33.880 --> 09:37.660]  подчеркну, что не черной, а обычной, не черной, а обычной
[09:37.660 --> 09:40.700]  глубине вершины v.
[09:40.700 --> 09:49.740]  Ну значит база, давайте скажем, глубина h, h от v равно
[09:49.740 --> 09:53.740]  1, да, это когда у меня просто одна вершина, такая, что
[09:53.740 --> 09:55.380]  у нее в под дереве ничего нет.
[09:55.460 --> 09:58.020]  Но если это вершина, и у нее в под дереве ничего
[09:58.020 --> 10:00.660]  нет, значит она сама по себе лист, поэтому она обязательно
[10:00.660 --> 10:05.860]  фиктивный элемент, без ключа, раз у нее нет детей, то это
[10:05.860 --> 10:07.860]  обязательно фиктивная вершина.
[10:07.860 --> 10:10.340]  И вот здесь я обманул на самом деле, мне нужно не
[10:10.340 --> 10:15.700]  вершин, а ключей, ну или тоже самое обычных вершин, потому
[10:15.700 --> 10:17.440]  что у меня вершины есть нормальные, есть вот эти
[10:17.440 --> 10:23.060]  коринжовые, которые пустые, я хочу нормальные, в смысле,
[10:23.060 --> 10:24.060]  которые содержат что-то.
[10:24.380 --> 10:26.020]  Мне нужно оценить количество ключей.
[10:26.020 --> 10:30.180]  Так вот, если у меня вершина находится на глубине 1, ну
[10:30.180 --> 10:33.540]  в смысле глубина ее под дерево 1, тогда значит у нее просто
[10:33.540 --> 10:39.140]  нет детей, значит это фиктивная вершина, пустая, значит она
[10:39.140 --> 10:43.020]  черная, у нее ничего нет, ключей здесь 0.
[10:43.020 --> 10:46.860]  Ну если мы посчитаем 2 в степени 1-1, как раз получится
[10:46.860 --> 10:47.860]  неправильно что-то.
[10:47.860 --> 10:51.500]  А нет, нормально, нормально, нормально, значит bh в этом
[10:51.500 --> 10:54.660]  случае это 0, потому что любой путь от этой штуки
[10:54.660 --> 10:57.900]  до потомка содержит 0 черных вершин, потому что я ее
[10:57.900 --> 11:01.220]  саму не считаю, я в bh саму вершину не учитываю, поэтому
[11:01.220 --> 11:04.380]  черная глубина у меня здесь 0, 2 в степени 0-1 как раз будет
[11:04.380 --> 11:06.460]  0, значит база вроде верна.
[11:06.460 --> 11:15.660]  Нет, по дереву сыней, но поскольку здесь нет ключа,
[11:15.660 --> 11:16.660]  то здесь 0 ключей.
[11:16.660 --> 11:28.660]  Переход от h к h плюс 1, ну пусть есть какая-то вершина,
[11:28.660 --> 11:33.700]  глубина под дерево которой h плюс 1, значит это обязательно
[11:33.700 --> 11:41.380]  обычная вершина, у нее есть два сына, давайте поймем
[11:41.380 --> 11:43.820]  какие у них черные глубины, вот если здесь была черная
[11:43.820 --> 11:48.140]  глубина bh, ну тогда наверное понятно, что в обоих вот
[11:48.140 --> 11:55.660]  этих поддеревях черная глубина хотя бы bh-1, потому что
[11:55.660 --> 11:57.860]  у меня разве что только одна вершина отбрасывается.
[11:57.860 --> 12:02.220]  Ну значит тогда наверное суммарно в этом поддереве
[12:02.220 --> 12:06.860]  ключей будет хотя бы 2 в степени bh-1 плюс 1, это вот
[12:06.860 --> 12:10.700]  здесь вот в левом поддереве плюс то же самое для правого
[12:10.700 --> 12:14.860]  поддерева, вот здесь вот хотя бы столько по предположению
[12:14.860 --> 12:17.700]  индукции ключей, ну еще плюс 1, потому что мы сказали
[12:17.700 --> 12:20.220]  это вершина обязательно является обычной, то есть
[12:20.220 --> 12:23.620]  не эффективной, в ней хранится какой-то ключ, ну вот если
[12:23.620 --> 12:27.900]  все здесь, так, извините, минус 1, а извините, минус
[12:27.900 --> 12:32.300]  вот этот минус, а минус сюда перекочевал, все нормально,
[12:32.300 --> 12:35.380]  вот, ну здесь что-то сокращается, степени двойки превращаются
[12:35.380 --> 12:39.140]  в одну степень, 2 в степени bh и как раз минус 1 осталось,
[12:39.140 --> 12:40.140]  переход сделали.
[12:40.140 --> 12:51.140]  Да, конечно, ну конечно, имеется в виду, что там t красно-черное
[12:51.140 --> 12:52.140]  дерево, бла-бла-бла.
[12:52.140 --> 13:03.220]  Нет, смотри, я имею в виду, что есть какое-то большое
[13:03.220 --> 13:06.020]  красно-черное дерево, я в нем рассматриваю все поддеревья,
[13:06.020 --> 13:09.580]  и дальше я фиксировал какое-то v, рассматриваю поддерево
[13:09.580 --> 13:12.300]  этой вершины, само по себе это правда, но само по себе
[13:12.300 --> 13:15.180]  не обязательно красно-черное, потому что v может быть красным,
[13:15.180 --> 13:17.140]  это, конечно, единственное, что может нарушиться, ну
[13:17.140 --> 13:19.500]  неважно, я говорю, что для поддеревьев красно-черного
[13:19.500 --> 13:22.780]  это верно, ну и здесь я везде работаю в поддеревьях и,
[13:22.780 --> 13:23.780]  соответственно, переход с поддеревьев в поддерево
[13:23.780 --> 13:24.780]  все нормально.
[13:24.780 --> 13:35.620]  А тут я нигде не писал, где глубина, я черную глубину
[13:35.620 --> 13:36.620]  только пишу.
[13:36.620 --> 13:41.460]  Ну там h, h это было вот это, а стало h плюс 1 вот это.
[13:41.460 --> 13:44.660]  У меня глубина и черная глубина это разные сущности,
[13:44.660 --> 13:47.140]  глубина это просто количество вершин на пути, а черная
[13:47.140 --> 13:50.500]  глубина это количество черных вершин на пути, поэтому
[13:50.500 --> 13:56.580]  это разные вещи, и здесь мне не важно параметры h, мне
[13:56.580 --> 13:59.340]  важно только, что он уменьшился, и я могу к обоим поддеревиям
[13:59.340 --> 14:00.340]  принять подражение индукции.
[14:00.340 --> 14:10.860]  Ну вот, значит, и отсюда немедленно получаем такое
[14:10.860 --> 14:26.220]  утверждение, что в красно-черном дереве с n ключами глубина
[14:26.220 --> 14:36.620]  не превосходит удвоенного логарифма вот n плюс 1.
[14:36.620 --> 14:41.580]  Ну доказательства.
[14:41.580 --> 14:44.260]  Нам надо соотнести глубину и черную глубину, поскольку
[14:44.260 --> 14:47.380]  у меня есть лемма для черной глубины, а здесь речь идет
[14:47.380 --> 14:50.340]  про обычную глубину, мне их надо как-то соотнести.
[14:50.340 --> 14:52.820]  Ну вот представьте, было у вас красно-черное дерево,
[14:52.820 --> 14:55.780]  напомню, глубина это просто количество вершин на пути
[14:55.780 --> 14:59.060]  максимальном, а черная глубина это, конечно, черных
[14:59.060 --> 15:00.060]  на таком пути.
[15:00.060 --> 15:02.100]  Вот вопрос, как они соотносятся.
[15:02.100 --> 15:07.140]  Ну, можете ли вы мне сказать какое-то неравенство, как
[15:07.140 --> 15:09.300]  можно h оценить через bh?
[15:09.300 --> 15:12.140]  Меньше 2 bh.
[15:12.140 --> 15:16.740]  Да, давайте я немножко вот так перепишу, я напишу,
[15:16.740 --> 15:17.940]  что bh больше на h пополам.
[15:17.940 --> 15:23.180]  Да, вы правильно сказали все, я вот так просто напишу.
[15:23.180 --> 15:24.180]  Почему?
[15:24.180 --> 15:27.020]  Потому что на любом пути у меня нет двух красных
[15:27.020 --> 15:28.020]  подряд.
[15:28.020 --> 15:30.420]  Одно из свойств, что нет двух красных подряд.
[15:30.420 --> 15:33.460]  Значит у меня минимально возможное количество черных
[15:33.460 --> 15:35.780]  вершин на любом таком пути, оно хотя бы половина от
[15:35.780 --> 15:36.780]  общего количества.
[15:36.780 --> 15:38.740]  Причем, если я знаю, что я еще и начинаю с черной и
[15:38.740 --> 15:42.140]  заканчиваю с черной, они там максимум чередуются,
[15:42.140 --> 15:43.140]  как раз таки черных будет хотя бы половина.
[15:43.140 --> 15:48.220]  Ну и все, дальше утверждение леммы, значит вот это мы
[15:48.220 --> 15:51.940]  показали, что черная глубина хотя бы аж пополам, а дальше
[15:51.940 --> 16:03.940]  по лемме мы понимаем, что количество ключей, которое
[16:03.940 --> 16:06.220]  равно n с одной стороны, с другой стороны больше
[16:06.220 --> 16:10.540]  либо равно 2 в степени h пополам минус 1.
[16:10.540 --> 16:13.940]  Ну и отсюда в точности вот то неравенство получается.
[16:13.940 --> 16:17.180]  Ну а раз n больше, ну чем вот эта штука, значит n плюс
[16:17.180 --> 16:22.580]  1 больше либо равно 2 в степени h пополам, вот логарифмируем
[16:22.580 --> 16:25.540]  по основанию 2, умножаем эту двойку, переносим сюда
[16:25.540 --> 16:27.580]  и как раз получается, что двойный двойческий логариф
[16:27.580 --> 16:41.020]  больше либо равен h, да, ну вот, несложно.
[16:41.020 --> 16:44.460]  Получается, что если мы каким-то образом добьемся соблюдения
[16:44.460 --> 16:47.540]  всех вот этих вот пяти свойств, у нас как обычно автоматически
[16:47.540 --> 16:50.380]  будет неглубокое дерево, да, два логарифма, это вполне
[16:50.380 --> 16:51.380]  себе хорошо.
[16:51.380 --> 16:55.220]  Вот, значит в частности, тогда, например, на find мы
[16:55.220 --> 16:57.020]  автоматически отвечаем за от логарифма, потому
[16:57.020 --> 16:59.620]  что find в дереве поиска всегда работает за глубину дерева,
[16:59.620 --> 17:01.980]  мы просто идем, понимаем, куда надо идти, поэтому
[17:01.980 --> 17:04.540]  у нас find уже автоматически работает за логарифм.
[17:04.540 --> 17:09.220]  Вот, осталось понять, что делает синцерт и мейерейзом.
[17:09.220 --> 17:11.460]  Ну, будем сейчас это делать.
[17:11.460 --> 17:14.940]  Ну, давайте insert x.
[17:14.940 --> 17:27.700]  У нас то же самое, это же дерево поиска, видите, я даже
[17:27.700 --> 17:30.500]  написал, что дерево поиска, поэтому нам надо как обычно,
[17:30.500 --> 17:32.780]  если мне нужно найти x, я сравню x с корнем и иду
[17:32.780 --> 17:35.980]  либо в лево, либо в право, тут все как обычно.
[17:35.980 --> 17:44.700]  Вот, как будем делать insert?
[17:44.700 --> 17:45.700]  Смотрите.
[17:45.700 --> 17:48.500]  Ну, давайте сначала попробуем сделать, как это мы делали
[17:48.500 --> 17:51.660]  в обычном дереве поиска, вот встали в корень, идем,
[17:51.660 --> 17:54.700]  ищем место, куда надо вставить x, вот идем, идем ищем, соответственно,
[17:54.700 --> 17:57.180]  если x меньше, чем текущее значение в данной вершине,
[17:57.180 --> 17:58.500]  идем налево, значит идем направо.
[17:58.500 --> 18:03.380]  Вот, так мы в какой-то момент дойдем до позиции, куда
[18:04.100 --> 18:07.220]  в идеале надо подвесить x, в нашем случае эта позиция
[18:07.220 --> 18:10.260]  обязательно будет фиктивным пустым листом, потому что
[18:10.260 --> 18:15.060]  я когда спускаюсь, я заканчиваю свой спуск, когда в вершине
[18:15.060 --> 18:18.340]  ничего не хранится, то есть когда я иду-иду-иду в какой-то
[18:18.340 --> 18:20.620]  вершине, скажем, пошел налево, а здесь уже все, здесь уже
[18:20.620 --> 18:24.260]  тупик, тут нет элемента, нет ключа, насчет фиктивной
[18:24.260 --> 18:25.260]  вершины.
[18:25.260 --> 18:27.180]  И вот сюда мне в идеале, мне бы в идеале просто сюда
[18:27.180 --> 18:28.540]  x написать, было бы вообще шикарно.
[18:28.540 --> 18:32.540]  Ну, я не могу писать x в пустые вершины, поэтому придется
[18:32.540 --> 18:33.540]  это повозиться.
[18:33.540 --> 18:38.580]  Ну, давайте сделаем так, давайте я, в момент, когда
[18:38.580 --> 18:44.300]  мне нужно такую штуку сделать, давайте я нарисую здесь
[18:44.300 --> 18:50.180]  красную вершину x и подвешу к ней два фиктивных черных
[18:50.180 --> 18:51.180]  сына.
[18:51.180 --> 18:57.380]  Сейчас будем это чинить, да, у меня могли нарушиться
[18:57.380 --> 18:59.780]  какие-то из вот этих свойств, сейчас будем их чинить.
[19:00.020 --> 19:02.300]  Ну, по умолчанию я нахожу место, куда надо поместить
[19:02.300 --> 19:06.460]  x, вставляю его туда, крашу красным и подвешу к нему
[19:06.460 --> 19:08.740]  двух черных сыновей, ну, как и надо, да, потому что
[19:08.740 --> 19:11.220]  если у меня нет детей, то значит мне их нужно подвесить
[19:11.220 --> 19:12.220]  и сделать их черными обоих.
[19:12.220 --> 19:16.740]  А если мы окрасим в черный цвет эту вершину, то ничего
[19:16.740 --> 19:17.740]  же не нарушится?
[19:17.740 --> 19:20.460]  Может нарушится вот эта штука про черную глубину,
[19:20.460 --> 19:22.500]  потому что вы взяли, точнее она точно нарушится, вы
[19:22.500 --> 19:26.020]  взяли и на этом пути, если она будет черная, вы на этом
[19:26.020 --> 19:28.340]  пути увеличили черную глубину, потому что здесь была одна
[19:28.380 --> 19:31.180]  черная вершина, был фиктивный черный лист, а вы взяли
[19:31.180 --> 19:34.140]  и его увеличили, вы взяли, продлили, ну, как бы еще раз
[19:34.140 --> 19:35.540]  двойли и увеличили черную глубину.
[19:35.540 --> 19:39.780]  Я же изменил дерево листов, там.
[19:39.780 --> 19:43.020]  Да, ну, смотрите, вот у вас был корень, у вас была какая-то
[19:43.020 --> 19:44.980]  другая ветка, на которой там черная глубина какая-то
[19:44.980 --> 19:47.900]  BH, и на этой ветке тоже была BH, если вы просто ее сюда
[19:47.900 --> 19:51.900]  подвесили, то вас нарушили с условием про черные глубины.
[19:51.900 --> 19:54.300]  Поэтому, чтобы как раз сохранять черные глубины, мы вставляем
[19:54.300 --> 19:55.300]  красную вершинку.
[19:56.300 --> 19:58.820]  Вот, значит, как правильно заметили, у нас может нарушиться
[19:58.820 --> 20:03.820]  четвертое свойство, то, что не может быть одновременно
[20:03.820 --> 20:06.580]  две красные вершины подряд, то есть может быть такая
[20:06.580 --> 20:08.260]  проблема, что вот этот товарищ тоже был красным.
[20:08.260 --> 20:13.980]  Давайте я его назову Y.
[20:13.980 --> 20:16.100]  Какая еще проблема может возникнуть, скажите, пожалуйста.
[20:16.100 --> 20:21.100]  Еще раз?
[20:21.900 --> 20:26.100]  Нет, вот такого как раз не будет.
[20:26.100 --> 20:30.700]  Да, вот если х-корень может быть проблема, потому что,
[20:30.700 --> 20:32.300]  скажем, если у меня было изначально пустое дерево,
[20:32.300 --> 20:36.380]  да, и я вместо вот этой вершинки подвешу красный х, то у меня
[20:36.380 --> 20:39.300]  может нарушиться условие про то, что корень черный.
[20:39.300 --> 20:41.420]  А с черной глубиной как раз все хорошо, потому что,
[20:41.420 --> 20:44.100]  ну, давайте я еще раз картинку нарисую, что было, что стало.
[20:44.100 --> 20:54.100]  Вот было, вот так вот, стало, вот так вот.
[20:54.100 --> 20:56.900]  Как раз черная глубина здесь сохранилась, потому
[20:56.900 --> 20:59.820]  что вот что у вас вот здесь вот было, сколько черных
[20:59.820 --> 21:02.300]  вершин, то и здесь на всех таких путях осталось то
[21:02.300 --> 21:04.460]  же самое количество черных вершин, потому что вы просто
[21:04.460 --> 21:06.100]  вставили красную, она на черной глубине влияет.
[21:06.100 --> 21:15.100]  Да, да, у нас вот есть требование, что у нормальной вершины,
[21:15.100 --> 21:17.100]  ну, как бы, если нет детей, то надо подвесить.
[21:17.100 --> 21:22.100]  Ну, в смысле, ну тут что-то еще там, я не знаю, что там,
[21:22.100 --> 21:25.100]  я вот ту ветку не смотрю просто.
[21:25.100 --> 21:31.100]  Вот, значит, мы поняли, что… А я не говорил, что она
[21:31.100 --> 21:32.100]  обязательно черная.
[21:32.100 --> 21:35.100]  Сейчас, подождите, еще раз, вот мы поняли, что могут
[21:35.100 --> 21:36.100]  быть две проблемы.
[21:36.100 --> 21:47.100]  Второе и четвертое свойства могли нарушиться.
[21:47.100 --> 21:48.100]  Больше никакие.
[21:48.100 --> 21:52.100]  То есть, либо я взял этот х, он у меня внезапно стал
[21:52.100 --> 21:54.100]  корнем, ну, то есть, если дерево было пустое, я просто
[21:54.100 --> 21:56.100]  вставил число х, покрасилось в красный, тогда у меня
[21:56.100 --> 21:57.100]  красный корень.
[21:57.100 --> 22:00.100]  Либо же у меня родитель, у меня вот эта штука тоже
[22:00.100 --> 22:02.100]  красная, мне надо это чинить срочно.
[22:02.100 --> 22:03.100]  Давайте научимся чинить.
[22:03.100 --> 22:10.100]  Ну, вот, то есть, смотрите, мне нужна, давайте вот сейчас
[22:10.100 --> 22:13.100]  абстрагируемся конкретно вот от этого инсерта, что
[22:13.100 --> 22:14.100]  мы там сделали.
[22:14.100 --> 22:15.100]  Давайте решать такую задачу.
[22:15.100 --> 22:20.100]  То у меня было корректное красно-черное дерево, я
[22:20.100 --> 22:23.100]  что-то в нем поменял, давайте я вот так его нарисую.
[22:23.100 --> 22:32.100]  Да, значит, я что-то в нем поменял, и у меня одно
[22:32.100 --> 22:34.100]  из двух возможных произошло нарушений.
[22:34.100 --> 22:37.100]  Либо это все дерево, у меня красный корень, либо у
[22:37.100 --> 22:40.100]  меня есть родитель, и он тоже красный.
[22:40.100 --> 22:48.100]  Ну, вот, такую проблему будем решать.
[22:48.100 --> 22:57.100]  Ну, сейчас будем решать.
[22:57.100 --> 22:59.100]  Первую проблему решать очень легко.
[22:59.100 --> 23:03.100]  Если наше текущее поддерево это все дерево, то есть,
[23:03.100 --> 23:06.100]  если вот это вот это все, а выше ничего нет, и у
[23:06.100 --> 23:07.920]  меня корень красный, то фик boundary легко, просто
[23:07.920 --> 23:10.100]  надо корень в черный цвет перекрасить.
[23:10.100 --> 23:11.100]  Она cis на Kirby У меня все починится.
[23:11.100 --> 23:15.100]  А у меня ничего не нарушится, корень станет черным.
[23:15.100 --> 23:18.600]  А с черными глубинами ничего не произойдет, потому
[23:18.600 --> 23:23.100]  что на каждом пути лежал корень, поэтому все черные
[23:23.100 --> 23:25.100]  глубины, все черные пути сохранились.
[23:25.100 --> 23:28.100]  Поэтому корень можно всегда бесплатно перекрашивать,
[23:28.100 --> 23:37.500]  Давайте напишем, что если x стал корнем, его можно
[23:37.500 --> 23:38.500]  просто перекрасить в черный.
[23:38.500 --> 23:39.500]  Ещё раз?
[23:39.500 --> 23:40.500]  Ещё раз?
[23:40.500 --> 23:52.780]  Не, ну может, конечно, но как тогда вы будете вставлять
[23:52.780 --> 23:53.780]  x вот сюда?
[23:53.780 --> 24:02.260]  Когда я его сюда вставлю, у нас черная глубина нарушилась.
[24:02.260 --> 24:05.780]  Поэтому тут непонятно, что делать если x черный.
[24:05.780 --> 24:06.780]  Хорошо.
[24:06.780 --> 24:09.820]  Значит, как тогда бороться с нарушением четвертого
[24:09.820 --> 24:11.900]  свойства, что у меня две подряд красные вершины?
[24:11.900 --> 24:16.580]  Ну, смотрите, если у меня и x красный, и его родитель
[24:16.580 --> 24:21.340]  красный, вот x красный, и y красный, тогда у y точно
[24:21.340 --> 24:22.340]  есть родитель.
[24:22.500 --> 24:24.140]  Потому что если у меня раньше было корректное
[24:24.140 --> 24:28.020]  красно-черное дерево, то y не мог быть корнем, а
[24:28.020 --> 24:29.780]  значит, у него обязательно есть родитель, давайте
[24:29.780 --> 24:31.940]  его назову g, дедушка, grandparent.
[24:31.940 --> 24:39.260]  Ну, а раз есть родитель, значит, он обязательно черный,
[24:39.260 --> 24:41.820]  кстати говоря, потому что изначально в дереве не
[24:41.820 --> 24:44.580]  было нарушений одноцветности, не могло бы здесь одновременно
[24:44.580 --> 24:45.580]  две красные.
[24:45.580 --> 24:49.020]  Значит, у него есть какой-то ещё сын, отличный от y, давайте
[24:49.020 --> 24:51.380]  его назову u, ankle.
[24:51.420 --> 24:57.420]  Анкл вершины x, дядя вершины x, вот, вот эту штуку я сейчас
[24:57.420 --> 24:58.420]  буду рассматривать.
[24:58.420 --> 25:02.100]  У меня есть x красный, у меня есть его родитель
[25:02.100 --> 25:08.060]  красный, у меня есть его родитель g, черный, и u, который является
[25:08.060 --> 25:09.060]  дядей вершины x.
[25:09.060 --> 25:14.700]  Дядя, ну, в смысле брат, папа, ну, понятно, что вот такая
[25:14.700 --> 25:15.700]  терминология, да.
[25:15.700 --> 25:18.260]  Дедушка, папа, мы сейчас их ещё будем раскрашивать.
[25:18.260 --> 25:23.540]  А мы пока не знаем, да, вот сейчас надо про это подумать.
[25:23.540 --> 25:26.140]  Ну, давайте случай простой, случай первый.
[25:26.140 --> 25:38.780]  Пусть дядя красный, пусть u красный.
[25:38.780 --> 25:39.900]  Тогда мы сейчас вообще всё починим.
[25:39.900 --> 25:45.780]  Значит, этот красный, там есть ещё какая-то подъём
[25:45.780 --> 25:46.780]  наверх.
[25:46.780 --> 25:50.180]  Давайте я покажу, как мы это всё перекрасим.
[25:50.180 --> 25:58.020]  Давайте мы вершину g перекрасим в красный, его детей покрасим
[25:58.020 --> 26:03.340]  в чёрный, x кажется останется красным.
[26:03.340 --> 26:10.340]  Ну, и все поддеревья, которые здесь были, я их оставляю.
[26:10.340 --> 26:12.820]  То есть я не меняю поддеревья, я только меняю цвета вот
[26:12.820 --> 26:13.820]  этих вот вершин.
[26:13.820 --> 26:18.820]  Я пока просто так делаю.
[26:18.820 --> 26:22.020]  Сейчас поймём, типа, можно так делать или нельзя.
[26:22.020 --> 26:25.180]  Я так сделаю, давайте поймём, что нарушится или там, что
[26:25.180 --> 26:26.180]  починится.
[26:26.180 --> 26:29.780]  Ну, по крайней мере, у меня вот этот конфликт разрешился.
[26:29.780 --> 26:31.340]  Да, у меня теперь x, y разноцветные.
[26:31.340 --> 26:36.660]  Что может теперь нарушиться?
[26:36.660 --> 26:41.380]  Может нарушиться, что у g родитель тоже красный.
[26:41.380 --> 26:44.220]  Либо может нарушиться, что g – это красный корень.
[26:44.220 --> 26:48.420]  То есть опять, либо 2, либо 4-я слоенность нарушилась.
[26:48.420 --> 26:52.380]  Но теперь уже с вершиной g, а больше ничего не нарушается.
[26:52.380 --> 26:56.900]  То есть у меня по-прежнему все вершины покрашены, по-прежнему
[26:56.900 --> 27:00.140]  у меня есть вершины обычные, есть фиктивные.
[27:00.140 --> 27:02.140]  Я тут структуру дерева не менял, поэтому третье
[27:02.140 --> 27:03.660]  свойство автоматически сохраняется.
[27:03.660 --> 27:08.620]  Может нарушиться 4-я, а с 5-м давайте про чёрную глубину
[27:08.620 --> 27:09.620]  подумаем.
[27:09.620 --> 27:12.740]  Почему с чёрной глубиной всё нормально?
[27:12.740 --> 27:15.660]  Потому что, смотрите, какая у меня была чёрная глубина.
[27:15.660 --> 27:19.500]  Я как-то от корня мог идти через, скажем, g, y и x.
[27:19.500 --> 27:22.260]  Здесь было из этих трёх вершин одна чёрная.
[27:22.260 --> 27:26.100]  На этом пути тоже осталась одна чёрная.
[27:26.100 --> 27:28.260]  На этом пути была одна чёрная, на этом пути осталась
[27:28.260 --> 27:29.260]  одна чёрная.
[27:29.260 --> 27:31.660]  Поэтому можно легко понять, что какой бы вы путь не
[27:31.660 --> 27:34.020]  рассматривали в старом дереве и в новом, на нём
[27:34.020 --> 27:36.060]  сохранится количество чёрных вершин.
[27:36.060 --> 27:40.380]  Потому что я вот так их перекрасил, что любой спуск
[27:40.380 --> 27:42.020]  сохраняет количество чёрных.
[27:42.020 --> 27:43.020]  Похоже?
[27:43.020 --> 27:53.500]  Мы поняли, что всё, что может нарушаться, это опять
[27:53.500 --> 27:56.260]  либо второе, либо четвёртое свойство, но уже для вершины
[27:56.260 --> 27:57.260]  g.
[27:57.260 --> 28:00.300]  Ну, давайте тогда мы запустим ту же самую процедуру, которая
[28:00.300 --> 28:01.300]  будет чинить.
[28:01.300 --> 28:03.260]  Вот, смотрите, мы раньше были в x, мы понимали, что
[28:03.260 --> 28:05.380]  у нас вот было какое-то дерево, которое могло конфликтовать
[28:05.380 --> 28:08.940]  либо с родителем, могло быть две красные подряд, либо
[28:08.940 --> 28:11.380]  x был корнем и при этом красным.
[28:11.380 --> 28:12.820]  Мы свели задачу к такой же.
[28:12.820 --> 28:16.300]  Мы находимся в вершине g, конфликт либо то, что уже
[28:16.300 --> 28:18.820]  родитель тоже красный, либо то, что уже корень.
[28:18.820 --> 28:20.900]  Мы свели задачу к аналогичной подъёмам наверх.
[28:20.900 --> 28:23.180]  Давайте запустим рекурсию, она будет нашу проблему
[28:23.180 --> 28:24.180]  решать.
[28:24.180 --> 28:28.220]  То есть, мы стояли в x, что-то починили, перешли в x, починили,
[28:28.220 --> 28:29.460]  поднялись выше, ну и так далее.
[28:29.460 --> 28:31.020]  Просто рекурсивно подниматься, будем всё чинить.
[28:31.020 --> 28:34.980]  Ну, что это в случае разобрали?
[28:34.980 --> 28:38.020]  Ну, точнее, свели к аналогичному на как бы меньшей глубине.
[28:38.020 --> 28:41.580]  Аналогично разбираем рекурсив.
[28:41.580 --> 28:45.460]  Вот, теперь в случае второй.
[28:45.460 --> 28:46.460]  Дядя чёрный.
[28:46.460 --> 28:49.460]  В случае два.
[28:49.460 --> 28:50.460]  У.
[28:51.060 --> 28:58.440]  А же обязательно чёрный, потому что, смотрите, вот
[28:58.440 --> 29:00.260]  у меня, ещё раз смотрите, у меня проблемы могли быть
[29:00.260 --> 29:05.020]  только с тем, что я вот в этом дереве что-то нахулиганил.
[29:05.020 --> 29:06.260]  Это что значит?
[29:06.260 --> 29:10.300]  Значит у меня отец красный, но отец красный обязательно
[29:10.300 --> 29:11.300]  чёрный.
[29:11.300 --> 29:12.640]  Потому что вот это верхнее дерево, я не менял, у меня
[29:12.640 --> 29:15.380]  было корректное красно-чёрное дерево, я похулиганил только
[29:15.380 --> 29:19.700]  здесь, поэтому вот здесь конфликтов быть не могло.
[29:19.700 --> 29:23.700]  Я их могу только здесь генерировать, когда что-то перекрашиваю. Они, соответственно, поднимаются наверх.
[29:23.700 --> 29:27.700]  Поэтому дедушка g точно обязательно черный.
[29:33.700 --> 29:39.700]  Теперь красный, но мы завели задачу аналогично. У меня проблема была вот здесь, а теперь она вот здесь.
[29:39.700 --> 29:43.700]  Между g и родителем. Давайте рекурсивно будем эти конфликты решать.
[29:43.700 --> 29:47.700]  То есть я показал, как решить конфликт для x, подняв его в g.
[29:47.700 --> 29:51.700]  Но потом решу конфликт для g, подняв его в еще дедушку и так далее.
[29:51.700 --> 29:53.700]  А если же корень?
[29:53.700 --> 29:57.700]  Если же корень, это тянется очень просто. Можно просто перекрасить.
[29:57.700 --> 30:03.700]  В любом момент времени, если мы стоим в красном корне, если у нас все нормально, кроме того, что корень красный,
[30:03.700 --> 30:05.700]  ну давайте просто перекрасим. Вот у меня есть изначальная проверка.
[30:05.700 --> 30:09.700]  Если я стою в красном корне, давайте я его просто перекрашу и победю.
[30:09.700 --> 30:17.700]  Подряд может идти черное и красное. Не может быть красное и красное.
[30:17.700 --> 30:19.700]  Черное и красное может быть.
[30:19.700 --> 30:21.700]  Но вот это вполне нормально.
[30:21.700 --> 30:27.700]  Красное и красное. Единственное ограничение, что красное и красное может идти подряд.
[30:27.700 --> 30:31.700]  Ну пока мы все не разобрали, но это будет за логарифом работать.
[30:31.700 --> 30:33.700]  То есть по факту я просто поднимаюсь снизу вверх и чиню все конфликты.
[30:33.700 --> 30:37.700]  Будет за логарифом за время пропорциональной глубине.
[30:37.700 --> 30:43.700]  Итак, это все просто. Мы просто перекрасили цвета и отложили проблему на дедушку.
[30:43.700 --> 30:45.700]  И дальше он ее рекурсивно решает выше.
[30:49.700 --> 30:51.700]  Что значение?
[30:53.700 --> 30:55.700]  Нет, я такого не говорил.
[30:55.700 --> 30:57.700]  Я говорю, что пустые обязательно черные.
[30:57.700 --> 30:59.700]  Но черные не всегда пустые.
[31:03.700 --> 31:05.700]  Этого нет в свойствах.
[31:07.700 --> 31:11.700]  Ну, просто х нельзя черным красить.
[31:11.700 --> 31:13.700]  Потому что черная гуда нарушится.
[31:13.700 --> 31:15.700]  А, ну да, еще и красный.
[31:15.700 --> 31:17.700]  Откуда у нас вообще пустые?
[31:19.700 --> 31:23.700]  Так, хорошо. Давайте пример красно-черного дерева нарисуем.
[31:23.700 --> 31:25.700]  Видимо это должно быть полезно.
[31:27.700 --> 31:29.700]  Просто пример какой-нибудь я нарисую сейчас.
[31:37.700 --> 31:41.700]  Так, два. Нет, здесь вот так вот.
[31:43.700 --> 31:45.700]  Да, продон.
[31:46.700 --> 31:48.700]  Сложно. Четыре, и че надо не путать.
[31:49.700 --> 31:51.700]  Ну, вот, например, черный.
[31:51.700 --> 31:53.700]  Четверть.
[31:53.700 --> 31:55.700]  Четыре.
[31:55.700 --> 31:57.700]  Четверть.
[31:57.700 --> 31:59.700]  Четверть.
[31:59.700 --> 32:01.700]  Четверть.
[32:01.700 --> 32:03.700]  Четверть.
[32:03.700 --> 32:05.700]  Четверть.
[32:05.700 --> 32:07.700]  Четверть.
[32:07.700 --> 32:09.700]  Ну, вот, например, кажется, корректное красно-черное дерево.
[32:09.700 --> 32:11.700]  Смотрите, у меня в корне десять, и он черный.
[32:11.700 --> 32:13.700]  Дальше у него есть справа...
[32:13.700 --> 32:15.700]  Нет, нарушил, извините.
[32:15.700 --> 32:17.700]  Сейчас починю.
[32:17.700 --> 32:19.700]  Вот здесь пусть будет красный, какой-нибудь пятнадцать.
[32:19.700 --> 32:21.700]  И здесь у него два сына вот таких фиктивных.
[32:21.700 --> 32:23.700]  Во, хорошее дерево.
[32:23.700 --> 32:25.700]  Значит, корень черный, в нем десять.
[32:25.700 --> 32:27.700]  У него есть два сына.
[32:27.700 --> 32:29.700]  Один черный, другой красный.
[32:29.700 --> 32:31.700]  У вот этого красного оба сына фиктивные, пустые черные листья.
[32:31.700 --> 32:33.700]  Я прямоугольники всегда рисую черными.
[32:33.700 --> 32:35.700]  Они у меня всегда черные.
[32:35.700 --> 32:37.700]  Тут ничего не хранится.
[32:37.700 --> 32:39.700]  Черная глубина, смотрите, два.
[32:39.700 --> 32:41.700]  То есть у меня есть корень, красная и черная.
[32:41.700 --> 32:43.700]  Суммарно здесь две черные вершины.
[32:43.700 --> 32:45.700]  Что на этой пути, что на этой пути, две черные вершины.
[32:45.700 --> 32:47.700]  Теперь здесь левая ветка.
[32:47.700 --> 32:49.700]  Здесь черный.
[32:49.700 --> 32:51.700]  Да что же я опять все сломал-то?
[32:53.700 --> 32:55.700]  Значит, здесь...
[32:55.700 --> 32:57.700]  Вот давайте сделаем вот здесь Ч, здесь Ч.
[32:57.700 --> 32:59.700]  Какой-нибудь...
[32:59.700 --> 33:01.700]  Тринадцать.
[33:01.700 --> 33:03.700]  Так. И здесь тоже должно быть что-то черное.
[33:07.700 --> 33:09.700]  Вот, виноват.
[33:09.700 --> 33:11.700]  Давайте черную глубину сделаю тройкой.
[33:11.700 --> 33:13.700]  Тогда у меня вот черная, вот черная, вот черная.
[33:13.700 --> 33:15.700]  Глубина три получилась.
[33:15.700 --> 33:17.700]  Здесь тоже вот черная глубина, например, три.
[33:17.700 --> 33:19.700]  Черная, черная, черная.
[33:19.700 --> 33:21.700]  И здесь тоже черная глубина три.
[33:21.700 --> 33:23.700]  Черная, черная и вот эта черная.
[33:25.700 --> 33:27.700]  Пустая вершина это лист всегда, да.
[33:27.700 --> 33:29.700]  Вот.
[33:29.700 --> 33:31.700]  Тут нет двух красных подряд.
[33:31.700 --> 33:33.700]  Тут бывают черные вершины с ключами.
[33:33.700 --> 33:35.700]  А пустые всегда черные.
[33:35.700 --> 33:37.700]  И черные глубины все одинаковые.
[33:37.700 --> 33:39.700]  От корня.
[33:39.700 --> 33:41.700]  Похоже на правду?
[33:43.700 --> 33:45.700]  Ну вот.
[33:45.700 --> 33:47.700]  Все, вернемся сюда.
[33:47.700 --> 33:49.700]  Давайте чинить.
[33:49.700 --> 33:51.700]  Давайте чинить случай, когда у меня, соответственно, дядя черный.
[33:51.700 --> 33:53.700]  Это что значит?
[33:53.700 --> 33:55.700]  Вот у меня какая-то такая картинка.
[33:55.700 --> 33:57.700]  G, Y, X.
[33:57.700 --> 33:59.700]  Проблема в том, что у меня X и Y красные.
[33:59.700 --> 34:01.700]  Дедушка у меня по-прежнему может быть только черным.
[34:01.700 --> 34:03.700]  Потому что
[34:03.700 --> 34:05.700]  родителям красный не может быть красный
[34:05.700 --> 34:07.700]  в раннем более корректном красно-черном дереве.
[34:07.700 --> 34:09.700]  И здесь у меня есть черный дядя.
[34:09.700 --> 34:11.700]  Вот.
[34:11.700 --> 34:13.700]  Тут есть два случая.
[34:15.700 --> 34:17.700]  Так.
[34:17.700 --> 34:19.700]  Это я оставлю.
[34:19.700 --> 34:21.700]  Может когда-нибудь попробую.
[34:21.700 --> 34:23.700]  Вот.
[34:23.700 --> 34:25.700]  Я оставлю.
[34:25.700 --> 34:27.700]  Может когда-нибудь попозже сотрем.
[34:27.700 --> 34:29.700]  Случай.
[34:31.700 --> 34:33.700]  2.1.
[34:35.700 --> 34:37.700]  Случай такой.
[34:37.700 --> 34:39.700]  X лежит по ту же сторону от Y.
[34:47.700 --> 34:49.700]  Что и Y от G.
[34:49.700 --> 34:51.700]  Что и Y от G.
[34:53.700 --> 34:55.700]  То есть вот как на нашей картинке.
[34:55.700 --> 34:57.700]  X это левый сын Y. Y левый сын G.
[34:57.700 --> 34:59.700]  Ну либо наоборот они оба правые сыновья.
[34:59.700 --> 35:01.700]  Картинка будет аналогичная.
[35:03.700 --> 35:05.700]  В этом случае
[35:07.700 --> 35:09.700]  я хочу сделать вот такой вот поворот.
[35:13.700 --> 35:15.700]  Соответственно у меня Y поднимется в корень.
[35:15.700 --> 35:17.700]  Вот этого текущего под дерево.
[35:19.700 --> 35:21.700]  G и U спустятся вот сюда.
[35:21.700 --> 35:23.700]  Делаю стоящую перекраску.
[35:29.700 --> 35:31.700]  Вот.
[35:31.700 --> 35:33.700]  И таким образом раскрашу вот эти наши 4 вершины.
[35:33.700 --> 35:35.700]  Соответственно под деревья которые здесь были
[35:35.700 --> 35:37.700]  они остаются.
[35:37.700 --> 35:39.700]  Вот все что там было подвешено.
[35:39.700 --> 35:41.700]  К XU.
[35:41.700 --> 35:43.700]  К Y. К U.
[35:43.700 --> 35:45.700]  Ну они аналогичным образом как при повороте
[35:45.700 --> 35:47.700]  сохраняются
[35:47.700 --> 35:49.700]  какие-то подвешенности здесь меняются.
[35:49.700 --> 35:51.700]  И какие-то остаются.
[35:51.700 --> 35:53.700]  Вот. Я повернул и немножко перекрасил.
[35:55.700 --> 35:57.700]  Теперь я утверждаю что у меня корректное красно-черное дерево.
[35:59.700 --> 36:01.700]  Ну в общем давайте разбираться.
[36:01.700 --> 36:03.700]  Давайте с черными глубинами сначала.
[36:03.700 --> 36:05.700]  Смотрите у меня
[36:05.700 --> 36:07.700]  на любом пути от G
[36:07.700 --> 36:09.700]  Так что здесь написано?
[36:09.700 --> 36:11.700]  Это че?
[36:11.700 --> 36:13.700]  Черный дядя у меня черный.
[36:13.700 --> 36:15.700]  Извиняюсь.
[36:15.700 --> 36:17.700]  Значит
[36:17.700 --> 36:19.700]  на любом пути от G
[36:19.700 --> 36:21.700]  куда-то вниз я вижу
[36:21.700 --> 36:23.700]  две черные вершины. Вот здесь.
[36:23.700 --> 36:25.700]  Точнее не так.
[36:25.700 --> 36:27.700]  Смотрите у меня здесь.
[36:27.700 --> 36:29.700]  Ага. Тут надо анализировать.
[36:35.700 --> 36:37.700]  Давайте думать.
[36:37.700 --> 36:39.700]  Если у меня раньше не нарушалось свойство про черные глубины
[36:41.700 --> 36:43.700]  Пусть оно скажем вот здесь была какая-то
[36:43.700 --> 36:45.700]  черная глубина B-H.
[36:45.700 --> 36:47.700]  Здесь будет B-H-1
[36:47.700 --> 36:49.700]  потому что одна черная отрезалась.
[36:49.700 --> 36:51.700]  Здесь B-H-2 в этих поддеревях.
[36:51.700 --> 36:53.700]  B-H-2..
[36:53.700 --> 36:55.700]  здесь тоже B-H-1 потому что без одной черной.
[36:57.700 --> 36:59.700]  Здесь snack B-H-1 остается
[36:59.700 --> 37:01.700]  потому что я отрезал красную.
[37:01.700 --> 37:03.700]  Здесь тоже B-H-1 потому что я отрезал красную,
[37:03.700 --> 37:05.700]  и здесь тоже B-H-1.
[37:05.700 --> 37:07.700]  Значит тогда
[37:07.700 --> 37:09.700]  у поддеревев у меня
[37:10.200 --> 37:12.200]  черные глубины остались
[37:12.200 --> 37:17.200]  с такими же, потому что я сами под деревья не поменял.
[37:17.200 --> 37:21.200]  Теперь какие здесь? Тут остается bh-1, потому что я красную добавил.
[37:21.200 --> 37:25.200]  Здесь bh-1, потому что у меня были две одинаковые, я добавил к ним черную,
[37:25.200 --> 37:31.200]  осталось на 1 побольше. Здесь осталось bh-1, потому что я подвесил красную.
[37:31.200 --> 37:35.200]  Ну а здесь теперь bh, потому что у меня здесь черная.
[37:35.200 --> 37:40.200]  1 плюс bh-1. Значит, у меня сохранились черные глубины.
[37:40.200 --> 37:45.200]  У меня раньше на любом пути оттуда до любого листа здесь было bh,
[37:45.200 --> 37:50.200]  вот здесь суммарно было bh черных вершин, и здесь то же самое.
[37:50.200 --> 37:55.200]  То есть теперь все пути сохранили количество черных.
[37:55.200 --> 37:59.200]  Поэтому с пятым свойством все нормально.
[37:59.200 --> 38:02.200]  Дальше со свойством, потому что не может быть двух красных подряд, очевидно.
[38:02.200 --> 38:05.200]  Здесь нет двух красных.
[38:05.200 --> 38:11.200]  Ну да, ну давайте тут я буду считать.
[38:11.200 --> 38:15.200]  Ну типа можно не считать, тогда-то минус один где-то появится.
[38:15.200 --> 38:19.200]  Короче, все нормально.
[38:19.200 --> 38:24.200]  Значит, двух красных подряд здесь нет.
[38:24.200 --> 38:30.200]  Нет проблемы с тем, что y и родитель y, оба красные, потому что этот черный.
[38:30.200 --> 38:34.200]  Ну и мы все обчинили на самом деле. У меня стало корректно красно-черное дерево.
[38:34.200 --> 38:39.200]  На, я все конфликты починил. Все, значит наше дерево стало корректным.
[38:39.200 --> 38:43.200]  Дерево стало корректным.
[38:47.200 --> 38:52.200]  Получается, в момент, когда я дошел до той ситуации, что у меня дядя черный
[38:52.200 --> 38:58.200]  и x по ту же сторону от родителя, что родитель от дедушки,
[38:58.200 --> 39:01.200]  тогда я могу за один поворот и несколько перекрашиваний все починить.
[39:01.200 --> 39:06.200]  У меня больше никаких конфликтов в дереве нет.
[39:06.200 --> 39:11.200]  Вот профит. Причем смотрите, еще раз, папа с том, что мне даже не надо подниматься выше.
[39:11.200 --> 39:15.200]  У меня нет никакого конфликта во всем дереве. Я все починил.
[39:15.200 --> 39:21.200]  У меня y черный, поэтому какой бы ни был здесь родитель выше, у меня здесь нет конфликта.
[39:21.200 --> 39:25.200]  Да, ну и соответственно он черный, поэтому он может быть корнем, если что.
[39:25.200 --> 39:30.200]  Поэтому у меня нет конфликтов, я завершаюсь. У меня нет смысла подниматься выше, я все починил.
[39:30.200 --> 39:38.200]  Кажется, их ровно n, если я правильно все понимаю.
[39:38.200 --> 39:44.200]  Нет, n плюс 1.
[39:44.200 --> 39:49.200]  Ну их порядка n в любом случае.
[39:49.200 --> 39:58.200]  Вот, ну в случае второй, в случае 2-2, это когда, наоборот, x по другую сторону.
[39:58.200 --> 40:03.200]  Не буду писать, что x держит по другую сторону от y, чем y от g.
[40:03.200 --> 40:10.200]  То есть это картинка такого типа. У меня, скажем, y находится слева от родителя, а x справа.
[40:10.200 --> 40:13.200]  Ну а случай то, что у черный.
[40:13.200 --> 40:18.200]  Значит здесь черный, тут красный, тут красный, здесь черный.
[40:18.200 --> 40:38.200]  Вот, тогда я, смотрите, сначала сделаю вот такой поворотик, вот это ребро превращаю.
[40:38.200 --> 40:43.200]  Теперь у меня опять вот эти две вершины красные, а эти черные.
[40:43.200 --> 40:47.200]  И я свел картинку к предыдущей.
[40:47.200 --> 40:54.200]  После того, как я их провращал, у меня теперь уже x, y и g находятся по одну сторону.
[40:54.200 --> 40:59.200]  Ну а такое я умею чинить, мне нужно просто вот здесь повернуть и перекрасить.
[40:59.200 --> 41:07.200]  То есть я вот это вот вращаю, а это могу стереть.
[41:07.200 --> 41:11.200]  То есть по факту вот здесь я применяю случай 2-1.
[41:11.200 --> 41:21.200]  Я делаю поворот, x у меня лезет в корень, y слева.
[41:21.200 --> 41:30.200]  Ну а раскраска такая же, как здесь, коче-коче.
[41:30.200 --> 41:33.200]  Ну и опять можно пронаблюдать, что мы все обчинили.
[41:33.200 --> 41:39.200]  У меня опять все нормально с черными глубинами, у меня нет двух красных подряд.
[41:39.200 --> 41:43.200]  Если x корень, то он черный, все хорошо, короче.
[41:43.200 --> 41:45.200]  Мы опять все обчинили.
[41:45.200 --> 41:49.200]  Ну то есть по факту мы просто одним поворотом свели задачу к предыдущей,
[41:49.200 --> 41:52.200]  а случай 2-1 мы решать уже умеем.
[41:52.200 --> 41:55.200]  По факту просто аналогично к случаю 2-1.
[41:55.200 --> 41:58.200]  То есть в этом случае нам тоже не нужно подниматься наверх.
[41:58.200 --> 42:02.200]  Мы двумя поворотами и перекраской от единицы вершин,
[42:02.200 --> 42:05.200]  то есть не более чем 4 вершины я перекрасил, я решил свою проблему.
[42:05.200 --> 42:09.200]  Я избавился от проблем того, что есть какие-то коллизии со свойством 2 и 4.
[42:09.200 --> 42:13.200]  Мне нет смысла подниматься наверх, я уже все починил.
[42:13.200 --> 42:16.200]  Понятно?
[42:16.200 --> 42:18.200]  Ну вот, мы разобрали инсерт.
[42:18.200 --> 42:20.200]  Еще раз, как работает инсерт.
[42:20.200 --> 42:23.200]  Мы сначала спустились от корня в поисках x.
[42:23.200 --> 42:27.200]  То есть мы спускаемся, ищем место, где должен был бы быть x по-хорошему.
[42:27.200 --> 42:32.200]  Доходим до какого-то фиктивного элемента, до черного прямоугольника, где ничего не лежит.
[42:32.200 --> 42:37.200]  На его место вешаем красный x с двумя черными фиктивными сыновьями.
[42:37.200 --> 42:41.200]  И дальше решаем такую задачу, что вот у меня есть какая-то вершина x.
[42:41.200 --> 42:43.200]  Какая проблема? Она красная.
[42:43.200 --> 42:47.200]  Проблема, что она либо красный корень, либо у него красный родитель.
[42:47.200 --> 42:49.200]  Тогда у меня две красные подряд.
[42:49.200 --> 42:50.200]  Ну и вот так вот решаю.
[42:50.200 --> 42:51.200]  Я рассматриваю два случая.
[42:51.200 --> 42:54.200]  То есть я смотрю на родителя, на дедушку и на дядю.
[42:54.200 --> 42:56.200]  В зависимости от цвета дяди я что-то делаю.
[42:56.200 --> 42:59.200]  Либо перекрашиваю, поднимаюсь наверх, как было в первом случае.
[42:59.200 --> 43:03.200]  Либо за несколько вращений я полностью решаю свою проблему.
[43:03.200 --> 43:05.200]  Я избавляюсь от всех противоречий.
[43:06.200 --> 43:08.200]  Вот такой инсерт.
[43:10.200 --> 43:12.200]  Вопросы, может?
[43:15.200 --> 43:16.200]  Чем удобно?
[43:16.200 --> 43:22.200]  Ну вот в частности, смотрите, вот здесь можно заметить, что у меня после инсерта всегда максимум два поворота.
[43:23.200 --> 43:25.200]  А это более-менее самая тяжелая операция.
[43:25.200 --> 43:28.200]  Потому что перекраска – это просто перестановка одного бита.
[43:28.200 --> 43:32.200]  А поворот, мы помним, что при повороте мне нужно много указателей перенаправить.
[43:32.200 --> 43:36.200]  Что там родители поменялись, дети поменялись и так далее.
[43:36.200 --> 43:38.200]  Но вот здесь у вас всего два поворота.
[43:39.200 --> 43:40.200]  Это неплохо.
[43:40.200 --> 43:45.200]  Я чуть позже, в конце лекции, сравню все деревья, которые мы уже знаем и скажу, чем это лучше.
[43:45.200 --> 43:48.200]  Но пока что видно, что здесь всего два поворота максимум при инсерте.
[43:50.200 --> 43:53.200]  Это средний поворот?
[43:53.200 --> 43:57.200]  Ну нет, за вот эти поворотов как бы.
[43:58.200 --> 44:01.200]  Но здесь уже как раз оптимизация константа, грубо говоря.
[44:01.200 --> 44:03.200]  Потому что мы считаем, что поворот – это дорого.
[44:03.200 --> 44:05.200]  Мы хотим, чтобы поворотов было мало.
[44:10.200 --> 44:13.200]  Ну по сравнению с перекраской это дорого, скажем так.
[44:16.200 --> 44:17.200]  Вот, хорошо.
[44:17.200 --> 44:18.200]  Давайте ехать дальше.
[44:18.200 --> 44:19.200]  И рейс.
[44:19.200 --> 44:23.200]  С рейсом тот же самый будет прикол, что там будет достаточно всегда от единицы поворотов.
[44:23.200 --> 44:27.200]  И этим он выгодно отличается красно-черно от остальных.
[44:27.200 --> 44:31.200]  Что нам достаточно от единицы сделать перебалансировок, чтобы все общинить.
[44:32.200 --> 44:34.200]  Ну вот, что делать с рейсом?
[44:35.200 --> 44:37.200]  Давайте его сначала в дереве найдем.
[44:37.200 --> 44:39.200]  Вот есть х, который мы хотели бы удалить.
[44:42.200 --> 44:44.200]  Давайте сразу скажем следующее.
[44:44.200 --> 44:47.200]  Как мы вообще удаляем из обычного наивного дерева?
[44:47.200 --> 44:52.200]  В случае, если у меня, скажем, один сын или вообще ноль детей,
[44:52.200 --> 44:58.200]  то я могу вот того единственного сына, который есть, просто подвесить на место х, а про х забыть.
[44:59.200 --> 45:02.200]  Ну и как бы раз слева ничего нет, я просто вот это сюда поднимаю.
[45:03.200 --> 45:05.200]  Это в случае, если у меня нет детей или один сын.
[45:05.200 --> 45:10.200]  В случае, если у меня два сына, я, например, нахожу максимум в левом поддереве,
[45:10.200 --> 45:12.200]  поднимаю его сюда и удаляю максимум отсюда.
[45:14.200 --> 45:15.200]  Давайте сделаем то же самое.
[45:15.200 --> 45:16.200]  Давайте найдем х.
[45:16.200 --> 45:23.200]  В случае, если у него два обычных сына, два неэффективных сына,
[45:24.200 --> 45:27.200]  то я найду в левом из них максимальный элемент m,
[45:28.200 --> 45:32.200]  подниму его на место х и удалю его отсюда.
[45:33.200 --> 45:37.200]  И это хорошо тем, что у m уже максимум один нормальный сын.
[45:37.200 --> 45:41.200]  Максимум один обычный сын, потому что правый у него обязательно эффективный.
[45:41.200 --> 45:43.200]  Что такое максимальный элемент в дереве?
[45:43.200 --> 45:47.200]  Это когда мы идем направо-направо-направо, пока мы находимся в нормальных вершинах.
[45:48.200 --> 45:52.200]  Последняя вершина, вот эта максимальная вершина, у нее правый сын обязательно, черный эффективный лист.
[45:53.200 --> 45:57.200]  Значит, у него из детей есть максимум только один левый, ну обычный.
[45:58.200 --> 46:05.200]  А этот пустой, его можно всегда удалить, если нужно, его можно игнорировать, скажем так.
[46:05.200 --> 46:12.200]  Первый шаг такой, что если у х есть два обычных сына,
[46:14.200 --> 46:19.200]  то находим m максимум в левом под дереве,
[46:24.200 --> 46:28.200]  ну или аналогично, можно минимум в правом под дереве, как обычно,
[46:28.200 --> 46:30.200]  тут лево и право под деревом ничем не отличаются,
[46:30.200 --> 46:32.200]  можно искать минимум в правом, если вам удобнее.
[46:32.200 --> 46:34.200]  Ну давайте я найду максимум в левом,
[46:34.200 --> 46:37.200]  поднимаем m на место x,
[46:40.200 --> 46:42.200]  и удаляем m.
[46:44.200 --> 46:48.200]  Теперь, после этого, можно считать, что у удаляемой вершины,
[46:48.200 --> 46:50.200]  у них есть максимальная вершина,
[46:50.200 --> 46:52.200]  у них есть максимальная вершина,
[46:52.200 --> 46:54.200]  у них есть максимальная вершина,
[46:54.200 --> 47:01.200]  теперь, после этого, можно считать, что у удаляемой вершины максимум один обычный сын.
[47:06.200 --> 47:10.200]  У удаляемой вершины не больше одного обычного сына.
[47:24.200 --> 47:29.200]  Так, ну теперь давайте разбираться с тем, какая может быть картинка.
[47:29.200 --> 47:31.200]  Случай первый.
[47:33.200 --> 47:38.200]  У х нет детей, нет обычных детей, есть только фиктивные,
[47:38.200 --> 47:41.200]  ну и он красный, например, пусть будет так.
[47:41.200 --> 47:43.200]  Пусть х, который я хочу удалить, красный,
[47:43.200 --> 47:46.200]  и у него нет обычных детей, то есть оба фиктивные,
[47:46.200 --> 47:48.200]  то есть картинка вот такая.
[47:48.200 --> 47:50.200]  И я хочу х удалить.
[47:50.200 --> 47:54.200]  Скажите, пожалуйста, что можно сделать в таком случае?
[47:58.200 --> 48:03.200]  Да, можно просто вот это все по дереву заменить на один фиктивный черный элемент.
[48:03.200 --> 48:06.200]  Тогда ничего не сломается, гарантированно.
[48:06.200 --> 48:08.200]  У меня точно не возникнет двух красных подряд,
[48:08.200 --> 48:10.200]  потому что я красный, то есть черный элемент,
[48:10.200 --> 48:13.200]  и у него нет обычных детей, то есть оба фиктивные,
[48:13.200 --> 48:15.200]  то есть картинка вот такая.
[48:15.200 --> 48:17.200]  У меня точно не возникнет двух красных подряд,
[48:17.200 --> 48:19.200]  потому что я красный только высек.
[48:19.200 --> 48:21.200]  У меня не нарушилась черная глубина,
[48:21.200 --> 48:23.200]  потому что я убрал красную,
[48:23.200 --> 48:26.200]  если у меня был путь от корня до сюда, например,
[48:26.200 --> 48:28.200]  вот какой-то такой путь,
[48:28.200 --> 48:30.200]  то от того, что я убрал отсюда красную,
[48:30.200 --> 48:32.200]  количество черных не поменялось.
[48:33.200 --> 48:35.200]  Ну и более-менее как бы все.
[48:35.200 --> 48:37.200]  Остальные условия автоматически выполнены.
[48:37.200 --> 48:39.200]  Поэтому в случае, если моя вершина красная
[48:39.200 --> 48:41.200]  и оба сына фиктивные, то я могу просто заменить ее
[48:41.200 --> 48:43.200]  на фиктивную вершину и сразу победить,
[48:43.200 --> 48:45.200]  больше ничего не делать.
[48:45.200 --> 48:47.200]  Значит, в случае второй самый неприятный,
[48:47.200 --> 48:50.200]  это когда в этом же случае
[48:50.200 --> 48:52.200]  х черный,
[48:52.200 --> 48:54.200]  значит у меня есть черная вершина,
[48:54.200 --> 48:56.200]  у нее есть два фиктивных сына.
[48:56.200 --> 48:58.200]  Вот этот случай сложный,
[48:58.200 --> 49:01.200]  мы его будем рассматривать чуть позже,
[49:01.200 --> 49:03.200]  то есть тут как бы более сложно,
[49:03.200 --> 49:05.200]  смотри далее,
[49:05.200 --> 49:07.200]  попозже его разберем,
[49:07.200 --> 49:10.200]  потому что там очень много под случаев.
[49:14.200 --> 49:17.200]  В случае третий более приятный,
[49:19.200 --> 49:21.200]  мы разобрались, смотри, мы разобрались в случае,
[49:21.200 --> 49:23.200]  когда у х нет обычных детей,
[49:23.200 --> 49:25.200]  оба фиктивные,
[49:25.200 --> 49:27.200]  остался случай, когда один обычный,
[49:27.200 --> 49:29.200]  один фиктивный.
[49:29.200 --> 49:31.200]  Вот есть х, есть какой-то обычный,
[49:31.200 --> 49:33.200]  есть фиктивный,
[49:33.200 --> 49:35.200]  потому что я сейчас живу в идее,
[49:35.200 --> 49:37.200]  что у меня максимум один обычный.
[49:38.200 --> 49:40.200]  Значит, картинка такая.
[49:43.200 --> 49:45.200]  Что тут может быть с цветами?
[49:49.200 --> 49:51.200]  Что здесь может быть с цветами?
[49:59.200 --> 50:01.200]  Скажите, пожалуйста, какого цвета эта вершина?
[50:03.200 --> 50:05.200]  Нет, она обязательно красная,
[50:05.200 --> 50:07.200]  эта штука обязательно красная,
[50:07.200 --> 50:09.200]  потому что будь она черной,
[50:09.200 --> 50:11.200]  представьте, вот у вас есть черный обычный сын,
[50:11.200 --> 50:13.200]  и есть черный фиктивный,
[50:13.200 --> 50:15.200]  вот будь эта штука черной,
[50:15.200 --> 50:17.200]  у вас тогда не сошлась бы черная глубина,
[50:17.200 --> 50:19.200]  потому что если у вас есть обычная черная вершина,
[50:19.200 --> 50:21.200]  то как минимум,
[50:21.200 --> 50:23.200]  ну там в ее по дереве есть хотя бы один черный сын,
[50:23.200 --> 50:25.200]  да, ну рано или поздно мы встретим
[50:25.200 --> 50:27.200]  черный лист вот здесь,
[50:27.200 --> 50:29.200]  и значит здесь, по этой цепочке,
[50:29.200 --> 50:31.200]  у меня черного листа хотя бы два,
[50:31.200 --> 50:33.200]  вот черный и вот черный,
[50:33.200 --> 50:35.200]  а тут один, нестыковочка.
[50:35.200 --> 50:37.200]  Значит, эта штука черной быть ни при каких условиях не может,
[50:37.200 --> 50:39.200]  может быть только такое,
[50:39.200 --> 50:41.200]  что эта вершина красная,
[50:41.200 --> 50:43.200]  но если это красная,
[50:43.200 --> 50:45.200]  то это обязательно черная,
[50:45.200 --> 50:47.200]  потому что, то есть я считаю,
[50:47.200 --> 50:49.200]  что я живу в хорошем красно-черном дереве,
[50:49.200 --> 50:51.200]  то есть изначально у меня все верно,
[50:51.200 --> 50:53.200]  я хочу удалить x,
[50:53.200 --> 50:55.200]  тогда у меня, соответственно, если это красная,
[50:55.200 --> 50:57.200]  то это обязательно черная,
[50:57.200 --> 50:59.200]  нет двух красных подряд.
[50:59.200 --> 51:01.200]  Да.
[51:01.200 --> 51:03.200]  Откуда нам знать, что получившееся дерево,
[51:03.200 --> 51:05.200]  как мы поменяли местами m и x,
[51:05.200 --> 51:07.200]  корректно,
[51:07.200 --> 51:09.200]  вы ведь ничего не знаете про цвета и x?
[51:09.200 --> 51:11.200]  А я не сделал с цветами,
[51:11.200 --> 51:13.200]  я просто числа переставил,
[51:13.200 --> 51:15.200]  я вместо x поставил m,
[51:15.200 --> 51:17.200]  а мы в обычном дереве такое делали многократно,
[51:17.200 --> 51:19.200]  то есть я цвета не поменял,
[51:19.200 --> 51:21.200]  я не поменял структуру,
[51:21.200 --> 51:23.200]  я только m поставил вместо x,
[51:23.200 --> 51:25.200]  число, у меня осталось корректное дерево,
[51:25.200 --> 51:27.200]  мне нужно просто m высечь слева.
[51:27.200 --> 51:29.200]  Вот, значит еще раз,
[51:29.200 --> 51:31.200]  с y черным быть не может,
[51:31.200 --> 51:33.200]  поэтому он красный, поэтому эта штука черная,
[51:33.200 --> 51:35.200]  и у этого y тогда обязательно
[51:35.200 --> 51:37.200]  оба сына фиктивные листья,
[51:39.200 --> 51:41.200]  потому что если бы у него была какая-то
[51:41.200 --> 51:43.200]  обычная вершина в качестве детей,
[51:43.200 --> 51:45.200]  то она обязательно черная,
[51:45.200 --> 51:47.200]  и там где-то в подделье есть еще черные листья,
[51:47.200 --> 51:49.200]  тогда бы у меня опять не сошла черная глубина,
[51:49.200 --> 51:51.200]  вот здесь было бы два черных на пути,
[51:51.200 --> 51:53.200]  а здесь один всего.
[51:53.200 --> 51:55.200]  Поэтому у y не может быть черного
[51:55.200 --> 51:57.200]  обычного сына,
[51:57.200 --> 51:59.200]  значит у него оба сына фиктивные,
[51:59.200 --> 52:01.200]  фиктивные листья.
[52:03.200 --> 52:05.200]  Не хранящих ключей.
[52:05.200 --> 52:07.200]  Все, поэтому получается в третьем случае
[52:07.200 --> 52:09.200]  у меня гарантированно удаляемая вершина черная,
[52:09.200 --> 52:11.200]  его сын, который обычный,
[52:11.200 --> 52:13.200]  красный, а вот все остальное черные фиктивные листья,
[52:13.200 --> 52:15.200]  больше ничего нет.
[52:15.200 --> 52:17.200]  То есть в третьем случае,
[52:17.200 --> 52:19.200]  если у x есть один сын,
[52:19.200 --> 52:21.200]  обычный, то корзинка обязательно такая.
[52:21.200 --> 52:23.200]  Ну и здесь тоже очень легко лечится,
[52:23.200 --> 52:25.200]  надо просто y поднять вот сюда
[52:25.200 --> 52:27.200]  и покрасить его в черный.
[52:27.200 --> 52:29.200]  Тогда у меня нет проблем с тем,
[52:29.200 --> 52:31.200]  что есть два красные подряд,
[52:31.200 --> 52:33.200]  потому что я красную только удалил,
[52:33.200 --> 52:35.200]  и все хорошо с черной глубиной,
[52:35.200 --> 52:37.200]  потому что если здесь, скажем,
[52:37.200 --> 52:39.200]  было две черные на любом пути,
[52:39.200 --> 52:41.200]  что здесь, что здесь,
[52:41.200 --> 52:43.200]  то здесь тоже и на этом пути две черные,
[52:43.200 --> 52:45.200]  поэтому с глубиной все хорошо.
[52:47.200 --> 52:49.200]  Похоже?
[52:49.200 --> 52:51.200]  Ну вот, поэтому мне осталось разобрать
[52:51.200 --> 52:53.200]  только второй случай,
[52:53.200 --> 52:55.200]  когда у меня есть черная вершина
[52:55.200 --> 52:57.200]  вот такими вот детьми.
[52:57.200 --> 52:59.200]  Так, это я, наверное, могу стереть.
[53:07.200 --> 53:09.200]  У x?
[53:09.200 --> 53:11.200]  Потому что я свел его
[53:11.200 --> 53:13.200]  к случаю, когда у него максимум один.
[53:13.200 --> 53:15.200]  Если у x два сына, я нахожу максимум
[53:15.200 --> 53:17.200]  и удаляю максимум.
[53:19.200 --> 53:21.200]  Так, ну что?
[53:21.200 --> 53:23.200]  Давайте думать.
[53:25.200 --> 53:27.200]  Вот, давайте я вот
[53:27.200 --> 53:29.200]  такую штуку сделаю.
[53:29.200 --> 53:31.200]  Давайте я в этой картинке
[53:31.200 --> 53:33.200]  сделаю то же самое, что выше,
[53:33.200 --> 53:35.200]  то есть по факту высеку x
[53:35.200 --> 53:37.200]  и подвешу на его место просто черный лист.
[53:37.200 --> 53:39.200]  Тогда что сломалось?
[53:39.200 --> 53:41.200]  Сломалась только черная глубина.
[53:41.200 --> 53:43.200]  Потому что раньше у меня
[53:43.200 --> 53:45.200]  на любом пути от корня в этом поддереве,
[53:45.200 --> 53:47.200]  вот я до сюда ходил, было две черные,
[53:47.200 --> 53:49.200]  а теперь в этом поддереве одна черная.
[53:49.200 --> 53:51.200]  И, соответственно, если там у корня
[53:51.200 --> 53:53.200]  есть какие-то другие ветки,
[53:53.200 --> 53:55.200]  то у меня нарушилось условие про черные глубины.
[53:55.200 --> 53:57.200]  Вот в этом поддереве
[53:57.200 --> 53:59.200]  глубина черная поменялась,
[53:59.200 --> 54:01.200]  если в другом сохранилась,
[54:01.200 --> 54:03.200]  то у меня проблем.
[54:03.200 --> 54:05.200]  Ну, ничего страшного, давайте я вот так вот сделаю
[54:05.200 --> 54:07.200]  и сейчас буду чинить.
[54:07.200 --> 54:09.200]  Что я буду чинить?
[54:09.200 --> 54:11.200]  Давайте эту задачу сформулируем.
[54:11.200 --> 54:13.200]  У меня было корректное
[54:13.200 --> 54:15.200]  поддерево красно-черного дерева,
[54:15.200 --> 54:17.200]  я в нем что-то удалил
[54:17.200 --> 54:19.200]  и уменьшил черную глубину на единицу.
[54:19.200 --> 54:21.200]  Потому что если здесь было h,
[54:21.200 --> 54:23.200]  то я теперь вот этот х высек,
[54:23.200 --> 54:25.200]  у меня осталось бы h-1.
[54:25.200 --> 54:27.200]  Такую задачу будем решать.
[54:29.200 --> 54:31.200]  То есть у меня было корректное поддерево,
[54:35.200 --> 54:37.200]  в нем что-то удалилось,
[54:43.200 --> 54:45.200]  то есть была вот такая картинка,
[54:45.200 --> 54:47.200]  стало вот такая какая-то.
[54:47.200 --> 54:49.200]  И при этом черная глубина уменьшилась
[54:49.200 --> 54:51.200]  на 1,
[54:53.200 --> 54:55.200]  а корень вот здесь,
[54:55.200 --> 54:57.200]  мне сейчас будет важно,
[54:57.200 --> 54:59.200]  что корень вот здесь черный.
[54:59.200 --> 55:01.200]  То есть у меня была здесь bh,
[55:01.200 --> 55:03.200]  то есть отсюда была черная глубина bh,
[55:03.200 --> 55:05.200]  здесь стало bh-1
[55:05.200 --> 55:07.200]  и корень черный,
[55:07.200 --> 55:09.200]  то есть черная глубина уменьшилась на 1,
[55:13.200 --> 55:15.200]  корень черный.
[55:19.200 --> 55:21.200]  Ау?
[55:21.200 --> 55:23.200]  Ну в этом случае же черный.
[55:23.200 --> 55:25.200]  Корень, в смысле корень вот того поддерева,
[55:25.200 --> 55:27.200]  где я произвел удаление.
[55:27.200 --> 55:29.200]  Вот здесь черный,
[55:29.200 --> 55:31.200]  я сейчас буду это сохранять.
[55:31.200 --> 55:33.200]  То есть я обобщил конкретно вот этот частный случай
[55:33.200 --> 55:35.200]  на что-то более общее,
[55:35.200 --> 55:37.200]  и сейчас в этом более общем случае буду решать вот эту постановку
[55:37.200 --> 55:39.200]  поднятия снизу вверх и починки всего,
[55:39.200 --> 55:41.200]  что мы сломали.
[55:41.200 --> 55:43.200]  Вот.
[55:43.200 --> 55:45.200]  Значит тогда, сейчас я буду жить
[55:45.200 --> 55:47.200]  в такой парадигме. Смотрите, у меня вот
[55:47.200 --> 55:49.200]  вот это поддерева,
[55:49.200 --> 55:51.200]  в котором я уменьшил на 1 черную глубину,
[55:51.200 --> 55:53.200]  ну, это плохо.
[55:53.200 --> 55:55.200]  Потому что если у меня есть
[55:55.200 --> 55:57.200]  такой путь и такой путь,
[55:57.200 --> 55:59.200]  то вот здесь должны быть одинаковые черные глубины,
[55:59.200 --> 56:01.200]  а здесь уменьшилось на 1,
[56:01.200 --> 56:03.200]  поэтому у меня проблема, что здесь и здесь разные глубины.
[56:03.200 --> 56:05.200]  Это плохо.
[56:05.200 --> 56:07.200]  Но давайте это будем чинить.
[56:07.200 --> 56:09.200]  Я буду считать, что вот то дерево в котором
[56:09.200 --> 56:11.200]  произошло это изменение,
[56:11.200 --> 56:13.200]  вот произошло в этом поддереве,
[56:13.200 --> 56:15.200]  здесь bh поменялось на bh-1
[56:15.200 --> 56:20.880]  и здесь корень черный. Давайте решать такую проблему, что у меня, ну и для удобства я считаю,
[56:20.880 --> 56:29.920]  что это поддерево правый сын своего отца, если отец есть. Если нет, ну в смысле левый,
[56:29.920 --> 56:43.600]  если эта штука слева разбирается симметрично. Так, хорошо. Ну ладно, вот у меня есть поддерево,
[56:43.600 --> 56:53.800]  где произошло изменение. Давайте посмотрим на родителя А. Давайте разберем два случая,
[56:53.800 --> 57:11.560]  какого цвета А. Случай 2.1. А красный. Если А красный и в одном из его поддеревов уменьшилась
[57:11.560 --> 57:18.280]  черная глубина, то обязательно у А есть еще один левый сын. Такой, что вот здесь вот вершина Б
[57:18.280 --> 57:22.720]  обязательно черная. То есть если это красная, то обязательно черная. Ну потому что у меня вот
[57:22.720 --> 57:28.120]  здесь было какое-то нормальное дерево, глубина которого уменьшилась, значит и здесь было дерево
[57:28.120 --> 57:35.520]  такой же глубины БА, значит здесь обязательно вершинка Б. Черная, в смысле. Вот, и давайте
[57:35.520 --> 57:58.880]  теперь разберем еще два случая. Есть ли красные дети УБ? Случай 2.1. Можно?
[58:05.520 --> 58:18.800]  Ну да. Кого? Вложенных конструкций много. Какой чекер? Чекер на корректность? Кода? Наверное,
[58:18.800 --> 58:31.080]  нет. Понимаю. А так вам очень интересно, да? Ну вот, значит случай 2.1. У Б есть красный сын.
[58:31.080 --> 58:42.680]  У Б есть красный сын. Давайте разберу случай, когда он справа. У меня есть А, у меня есть Б,
[58:42.680 --> 58:48.760]  и вот здесь вот у Б есть красный сын С. Значит здесь К, здесь Ч, здесь К, и вот в этом поддереве
[58:48.760 --> 58:54.240]  произошло уменьшение глубины. Вот здесь вот мы что-то нахулиганили. Тут остались какие-то поддеревья.
[58:54.240 --> 59:03.800]  Тогда что я делаю в этом случае? Я делаю парочку вращений. Сначала вот такое,
[59:03.800 --> 59:10.720]  потом вот такое. Вытаскивая тем самым С в корень. Значит сначала С поднялось сюда,
[59:10.720 --> 59:19.400]  Б осталось слева, и потом А я еще спустил направо. Значит у меня после вращений ситуация будет вот такая.
[59:19.400 --> 59:26.520]  Вот этот треугольник перешел сюда, вот это поддерево стало вот здесь. И раскраска у меня будет,
[59:26.520 --> 59:43.320]  тут красная, тут черная. Вот. Значит уже в этом случае опять все починилось. Ну почему? Давайте
[59:43.320 --> 01:00:03.440]  разберемся с черными глубинами, например. Вот здесь было Бх, стало Бх-1. Ну да, да, да. Ну давайте я все-таки
[01:00:03.440 --> 01:00:09.480]  вот распишусь с числами, мне кажется, так будет формально чуть-чуть. Вот если здесь стало Бх-1,
[01:00:09.480 --> 01:00:15.320]  значит здесь было Бх, потому что раньше было все хорошо, то есть раньше до удаления вот эта черная
[01:00:15.320 --> 01:00:22.600]  глубина согласовывалась вот с этой. Значит здесь было Бх, здесь черная, значит здесь Бх-1. Тут красная,
[01:00:22.600 --> 01:00:27.640]  значит здесь Бх-1 остается. Поэтому все вот эти вот поддеревья имеют у меня сейчас черную глубину
[01:00:27.640 --> 01:00:39.240]  Бх-1. И тогда все хорошо. Здесь Бх, здесь Бх, здесь Бх. Вот. Черные глубины пофиксились,
[01:00:39.240 --> 01:00:44.280]  то есть у меня сохранилась вот черная глубина всего этого поддерева была раньше такая же,
[01:00:44.280 --> 01:00:46.920]  как стала теперь. Поэтому относительно корня у меня все сохранилось.
[01:00:46.920 --> 01:01:03.320]  В начале, да, но я в какой-то момент перейду так же, как у меня было после инсерта, я в какой-то
[01:01:03.320 --> 01:01:08.200]  момент сведу задачу вот из этого треугольника в этот треугольник. И тогда у меня будет вот в
[01:01:08.200 --> 01:01:13.040]  этом дереве что-то удалилось, уменьшилась черная глубина, и там уже есть какие-то дети. То есть,
[01:01:13.040 --> 01:01:18.960]  смотри, мы забыли про вот эту картинку, давайте про нее забудем. Я решаю вот эту задачу, что у меня
[01:01:18.960 --> 01:01:26.920]  было поддерево, я уменьшил Бх на 1, было Бх стал Бх-1, и корень черный. Вот. Какого конкретного типа
[01:01:26.920 --> 01:01:32.000]  это дерево я не говорю, ну какое-то, которое раньше было корректным. Вот и здесь, да, то есть изначально
[01:01:32.000 --> 01:01:36.920]  это просто черный листик, но в какой-то момент я перейду к этой же задаче, вот от дедушки запущусь,
[01:01:36.920 --> 01:01:44.240]  и там уже будет какое-то более сложное дерево, но мне не важно какое. Ну вот, вот я решу, что все
[01:01:44.240 --> 01:01:50.240]  починили. Все починили почему? Ну, например, вот с родителем конфликта не будет, потому что если А
[01:01:50.240 --> 01:01:55.000]  было красное, то обязательно родитель черный. Поэтому от того, что С красное, тут конфликта не
[01:01:55.000 --> 01:02:04.920]  будет. Ну и вроде все свойства тоже сохраняются, точнее восстанавливаться, чиниться. Вот. Ну то же
[01:02:04.920 --> 01:02:11.200]  самое, если С было бы левым сыном Б, там можно было бы аналогично повернуть, чтобы вытащить С в корень,
[01:02:11.200 --> 01:02:21.960]  ну, точнее, неважно. Короче, там будет аналогично. Давайте хоть какие-то детали закроем. Вот. Второй
[01:02:21.960 --> 01:02:29.560]  случай противоположный, когда у меня, значит, случай 2-1-2, когда у Б нет красных детей. У Б нет
[01:02:29.560 --> 01:02:42.680]  красных детей. Тогда меняем Б на красный. И А на черный еще. Ну да. Значит, картинка была вот такая.
[01:02:42.680 --> 01:02:53.240]  Вот здесь оба сына черные, да, а в этом по дереве что-то произошло, в этом по дереве Б аж
[01:02:53.240 --> 01:03:01.080]  уменьшилось. Тогда я просто возьму, перекрашу А в черный, Б в красный, по дереве я оставлю
[01:03:01.080 --> 01:03:09.720]  такими же, какими они были, и утверждаю, что все починилось. И утверждаю, что все починилось.
[01:03:09.720 --> 01:03:22.040]  Логично? Сейчас я вот что-то перестал понимать. Ну да, смотрите, потому что если здесь было,
[01:03:22.040 --> 01:03:27.080]  если здесь стало Б аж минус 1, а раньше было Б аж, значит, вот здесь вот Б аж, потому что раньше
[01:03:27.080 --> 01:03:33.200]  было согласование, а потом пропало. Значит, тут Б аж минус 1, потому что это черное. Опять-таки,
[01:03:33.200 --> 01:03:43.880]  все по дереве у меня черной глубины Б аж минус 1. Здесь Б аж минус 1, потому что это красное. Здесь
[01:03:43.880 --> 01:03:51.760]  Б аж. То есть с черными глубинами все хорошо, и опять у меня здесь была черная глубина Б аж, и она
[01:03:51.760 --> 01:03:57.440]  осталась Б аж. То есть опять от корня ничего не поменялось. На любом пути от корня в этом под дереве,
[01:03:57.440 --> 01:04:02.640]  куда-то вниз, была Б аж черных вершин, и осталась тоже Б аж. Поэтому с черными глубинами все
[01:04:02.640 --> 01:04:10.520]  сохранилось. Двух красных подряд не возникло, потому что перекрасить Б я имею право в красный,
[01:04:10.520 --> 01:04:18.360]  потому что оба сына черные, но и все обчинилось. Опять все обчинилось. А предположение,
[01:04:18.360 --> 01:04:30.320]  убой не от красных детей, поэтому оба сына черные. Смотрите, от того, что перекрашиваю вершину в
[01:04:30.320 --> 01:04:36.720]  черный, проблема может возникнуть только с черной глубиной. Но я вроде пересчитал, проверил,
[01:04:36.720 --> 01:04:39.600]  что с черными глубинами все хорошо. Никаких других свойств вроде не нарушается.
[01:04:39.600 --> 01:04:55.640]  Вот, что-то разобрали. Мы разобрали случай 2.1, когда А красный. Остался случай 2.2, когда А черный.
[01:04:55.640 --> 01:05:09.840]  Случай 2.2, А черный. Вот у меня есть поддерево, в котором произошло уменьшение глубины черной
[01:05:09.840 --> 01:05:19.920]  на единичку. А черный, вот есть Б. Давайте теперь берем цвет Б. Какого цвета Б?
[01:05:19.920 --> 01:05:49.040]  Начнем с красного. Случай 2.2.1, Б красный. Вот. Ну раз она красная, то у нее оба сына черные.
[01:05:49.040 --> 01:06:02.600]  Давайте рассмотрим право из них. Насчет сын черный. И еще под случай, есть ли у С красные дети?
[01:06:02.600 --> 01:06:22.200]  Есть ли у С красные дети? Это самый сложный. После этого будет получше. Не считайте. 2.2.1.1. У С есть
[01:06:22.200 --> 01:06:39.960]  красный сын. Ну пусть он опять будет, например, слева. Вот. Ну и здесь какие-то были поддеревья.
[01:06:39.960 --> 01:06:58.880]  Так, да. Что будем делать? Что-то сейчас опять провращаем и починим. Так, я хочу цепь наверх поднять.
[01:06:58.880 --> 01:07:07.120]  Сейчас сделаю вот такие вот вращения, подняв тем самым цепь в корень. Это сначала вот это,
[01:07:07.120 --> 01:07:22.320]  потом вот это. Что у меня будет сначала С. Так, и D слева, поэтому оно останется слева. Вот. Здесь
[01:07:22.320 --> 01:07:27.200]  наши поддеревья. Здесь вот то самое, в котором треугольник, это всегда то, у которого глубина на
[01:07:27.200 --> 01:07:43.800]  один поменьше стала. Так, ну и с цветами тут B красный, остальные черные. Вот. Так, давайте я перерисую,
[01:07:43.800 --> 01:07:51.280]  что это мне просто не видно с той доски. Значит, это получилось из ситуации, когда у меня был черный,
[01:07:51.280 --> 01:08:05.200]  красный, черный, красный. Значит, тогда, ну смотри, двух красных подряд здесь нет и с родителем,
[01:08:05.200 --> 01:08:10.200]  между С и родителем С тоже проблем нет. Остается только с глубинами разобраться. Значит, здесь
[01:08:10.200 --> 01:08:19.200]  было BH, стало BH минус один. Поэтому здесь было BH, раз они раньше согласовывались. Здесь остается
[01:08:19.200 --> 01:08:30.120]  BH, потому что это красное. Здесь BH по-прежнему. Тут BH минус один, потому что это черное. Тут
[01:08:30.120 --> 01:08:36.120]  BH минус один, потому что это красное. Вот. В поддеревьях у меня глубины не поменялись,
[01:08:36.120 --> 01:08:46.800]  поэтому я их переписываю без изменений. BH. BH минус один. BH минус один. Так. Сейчас, что у меня?
[01:08:46.800 --> 01:09:00.960]  А, вот здесь еще. Продон. Так, и здесь BH минус один. Нет, беда. Чего? Сейчас, сейчас, сейчас, сейчас.
[01:09:00.960 --> 01:09:28.480]  Так. Ну. Так, такого, это что-то не то. Как же? С Д какая-то проблема. Сейчас. А, нет.
[01:09:30.960 --> 01:09:40.960]  Да и не там думать. Сейчас, а где она? А, она справа будет, видимо, да просто. Да,
[01:09:40.960 --> 01:09:46.280]  продон, Д справа. Извините, я вращать разучился. Значит, я сделаю вот так. Да,
[01:09:46.280 --> 01:09:50.880]  у меня Д стало правым сыном Б. Извините, просто картинка, просто поворот неправильно
[01:09:50.880 --> 01:09:57.920]  нарисовал. Вот. Все, все, все, все. Да, так как раз все хорошо будет. BH, BH минус один. BH минус один.
[01:09:58.040 --> 01:10:03.720]  Извиняюсь. То есть, после вот этого поворота Д как раз подвешивается справа к Б, а С поднимается
[01:10:03.720 --> 01:10:09.040]  наверх. Вот. И тут как раз все хорошо. Здесь BH минус один, BH минус один. Здесь BH, потому
[01:10:09.040 --> 01:10:15.100]  что это черная, здесь оба BH. Здесь остается BH, потому что это красная. Здесь оба BH минус один,
[01:10:15.100 --> 01:10:20.560]  здесь BH, потому что она черная. Ну и здесь BH плюс один. Ну и тут выше она тоже была,
[01:10:20.560 --> 01:10:26.560]  было BH плюс один, потому что это черное.
[01:10:26.560 --> 01:10:29.560]  Значит, с черными глубинами опять все хорошо.
[01:10:29.560 --> 01:10:32.560]  В этом поддереве изначально было BH плюс один, осталось BH плюс один,
[01:10:32.560 --> 01:10:38.560]  поэтому с глубинами черными все хорошо.
[01:10:39.560 --> 01:10:42.560]  Еще раз?
[01:10:47.560 --> 01:10:50.560]  Если оба сына УА красные, оба сына УА не могут быть красными,
[01:10:50.560 --> 01:10:54.560]  потому что вот это поддерево имеет своим корнем черную штуку.
[01:10:54.560 --> 01:10:57.560]  У нас такой вариант.
[01:11:01.560 --> 01:11:04.560]  Так, ну случай противоположный.
[01:11:04.560 --> 01:11:13.560]  Случай 2212, УС нет красных детей.
[01:11:13.560 --> 01:11:15.560]  Значит, тут картинка попроще.
[01:11:15.560 --> 01:11:23.560]  Значит, у меня было черный А, красный Б, у него черный сын С,
[01:11:23.560 --> 01:11:26.560]  и здесь оба сына у него тоже черные.
[01:11:26.560 --> 01:11:30.560]  А вот здесь вот поддерево уменьшишься глубины.
[01:11:30.560 --> 01:11:39.560]  Значит, тогда я сделаю, кажется, всего один поворот вот такой вот,
[01:11:43.560 --> 01:11:48.560]  и у меня будет БАС черное.
[01:11:51.560 --> 01:11:54.560]  И вот так вот их перекрашу.
[01:11:55.560 --> 01:11:58.560]  Вот как раз поворот, Б поднимается наверх, А направо,
[01:11:58.560 --> 01:12:02.560]  и те подвешатся слева К, все правильно.
[01:12:06.560 --> 01:12:11.560]  Нет. Смотрите, предыдущий был 2211, когда УС есть красный сын.
[01:12:11.560 --> 01:12:15.560]  Противоположный 2212, УС нет красных детей, все нормально.
[01:12:17.560 --> 01:12:18.560]  Проверяйте.
[01:12:18.560 --> 01:12:21.560]  Значит, ну здесь тоже с черными глубинами все хорошо.
[01:12:21.560 --> 01:12:24.560]  Можно я вот здесь не буду прорисовывать.
[01:12:24.560 --> 01:12:27.560]  Честно-честно. Можете проверить, если не верите.
[01:12:27.560 --> 01:12:30.560]  То есть тут опять, если посчитать черные глубины, то опять все сойдется,
[01:12:30.560 --> 01:12:34.560]  это поддерево станет хорошим, и я все починил сразу.
[01:12:39.560 --> 01:12:42.560]  Так, значит, случай 2211 мы полностью разобрали.
[01:12:42.560 --> 01:12:45.560]  Вот это вот мы полностью разобрали. В случае, что Б красный,
[01:12:45.560 --> 01:12:48.560]  независимо от того, есть УС красные дети или нет, мы оба случай разобрали.
[01:12:48.560 --> 01:12:51.560]  Теперь разошаемся на шаг наверх. Случай 2222.
[01:12:57.560 --> 01:12:58.560]  Еще раз?
[01:13:03.560 --> 01:13:06.560]  Ну иначе, да, иначе с глубиной не получится.
[01:13:06.560 --> 01:13:10.560]  Если бы здесь была черная, тогда здесь глубина черная была слишком большая,
[01:13:10.560 --> 01:13:12.560]  а так как раз сойдется.
[01:13:12.560 --> 01:13:16.560]  Ответ на все вопросы почему, потому что так работает, а по-другому, наверное, не работает.
[01:13:19.560 --> 01:13:22.560]  Итак, 2222, Б черный.
[01:13:25.560 --> 01:13:29.560]  Вот, и последние два подслучая, есть ли у Б черные дети.
[01:13:29.560 --> 01:13:32.560]  Все, все, последние два, обещаю.
[01:13:32.560 --> 01:13:35.560]  Есть ли у Б красные дети?
[01:13:35.560 --> 01:13:37.560]  Красные дети.
[01:13:41.560 --> 01:13:44.560]  Не торопитесь события, давайте здесь разберемся сначала.
[01:13:44.560 --> 01:13:46.560]  2211 есть.
[01:13:49.560 --> 01:13:50.560]  Ну...
[01:13:53.560 --> 01:13:58.560]  Значит так, А у меня черный, Б у меня черный, пусть у меня есть справа красный сын С.
[01:14:02.560 --> 01:14:05.560]  Вот здесь пришло уменьшение, тогда...
[01:14:09.560 --> 01:14:13.560]  Так, я просто... Опять у меня два поворота.
[01:14:13.560 --> 01:14:15.560]  Вот такой.
[01:14:19.560 --> 01:14:23.560]  Нет, 2211, вот он, 2211, это Б красный.
[01:14:25.560 --> 01:14:28.560]  И он разберется на два подслучая.
[01:14:28.560 --> 01:14:30.560]  Это Б черный.
[01:14:30.560 --> 01:14:34.560]  И теперь я в этом случае опять ифаю, есть ли красные дети.
[01:14:34.560 --> 01:14:37.560]  Значит, если есть, то я делаю вот такие два поворота.
[01:14:37.560 --> 01:14:39.560]  С вылезает в корень.
[01:14:39.560 --> 01:14:42.560]  И я все кашу в черный.
[01:14:46.560 --> 01:14:50.560]  Значит, давайте проверим, да? Здесь было Бх, стало Бх-1.
[01:14:50.560 --> 01:14:54.560]  Значит, здесь было Бх, потому что раньше согласовывалось.
[01:14:54.560 --> 01:14:56.560]  Тут Бх-1, Бх-1, потому что это черное.
[01:14:56.560 --> 01:14:59.560]  Тут Бх-1, потому что это красное.
[01:14:59.560 --> 01:15:03.560]  Значит, в поддеревьях у всех осталась черная глубина Бх-1.
[01:15:03.560 --> 01:15:05.560]  Тут Бх, потому что это черное.
[01:15:05.560 --> 01:15:07.560]  Тут Бх, потому что это черное.
[01:15:07.560 --> 01:15:09.560]  Здесь Бх-1, потому что это черное.
[01:15:09.560 --> 01:15:14.560]  И здесь тоже было Бх-1, потому что здесь было Бх, здесь было Бх, это черное.
[01:15:14.560 --> 01:15:18.560]  Значит, опять с черной глубиной все хорошо, все починили, дерево стало корректным.
[01:15:21.560 --> 01:15:23.560]  И последний случай.
[01:15:25.560 --> 01:15:27.560]  Как я сейчас делаю?
[01:15:28.560 --> 01:15:30.560]  И последний случай.
[01:15:32.560 --> 01:15:38.560]  Когда, соответственно, у Б нет красных детей,
[01:15:38.560 --> 01:15:42.560]  в случае 2-2-2-2, у Б нет красных детей.
[01:15:42.560 --> 01:16:01.560]  А у нас нет планы Бх, у нас Бх, у нас Бх, да, потому что раньше было здесь Бх, и раньше было корректное дерево.
[01:16:02.560 --> 01:16:05.560]  Ну все, значит здесь А, здесь B.
[01:16:05.560 --> 01:16:07.560]  Это черное, это черное.
[01:16:08.560 --> 01:16:10.560]  И у Б оба сына черные.
[01:16:10.560 --> 01:16:16.060]  Тогда, делаю великую вещь, вот эту штуку просто перекрашу
[01:16:16.060 --> 01:16:24.260]  в красный, потому что могу, потому что эти оба черные,
[01:16:24.260 --> 01:16:25.560]  значит я могу эту перекрасить в красный.
[01:16:25.560 --> 01:16:35.560]  Значит, здесь bh-1, здесь bh, потому что раньше согласовывались,
[01:16:35.560 --> 01:16:44.560]  здесь bh-1, здесь bh-1, bh-1, bh-1, здесь bh-1, здесь bh.
[01:16:44.560 --> 01:16:49.560]  И здесь тоже было, а здесь было bh-1.
[01:16:49.560 --> 01:16:52.560]  Смотрите, произошла проблема.
[01:16:52.560 --> 01:16:55.560]  В последнем случае у меня внутри этого подерево как
[01:16:55.560 --> 01:16:59.560]  бы все хорошо, но глобально черная глубина уменьшилась
[01:16:59.560 --> 01:17:00.560]  на один.
[01:17:00.560 --> 01:17:03.560]  Тут было bh-1, стало bh.
[01:17:03.560 --> 01:17:06.560]  Но это ровно та задача, которую мы сейчас рекурсивно
[01:17:06.560 --> 01:17:07.560]  решаем.
[01:17:07.560 --> 01:17:10.560]  У меня, смотрите, у меня было вот это поддерево,
[01:17:10.560 --> 01:17:12.560]  где все было хорошо, но черная глубина уменьшилась
[01:17:12.560 --> 01:17:14.560]  на один, а корень черный.
[01:17:14.560 --> 01:17:18.560]  А я взял следующее, я взял родителя, тут что-то перекрасил,
[01:17:18.560 --> 01:17:20.560]  и задача стала ровно такой же.
[01:17:20.560 --> 01:17:23.560]  У меня было корректное красно-черное дерево, я взял корень,
[01:17:23.560 --> 01:17:26.560]  а у меня остался черным, а черная глубина уменьшилась
[01:17:26.560 --> 01:17:27.560]  на один.
[01:17:27.560 --> 01:17:30.560]  Это то, что я решаю, поэтому я просто рекурсивно
[01:17:30.560 --> 01:17:31.560]  поднимаюсь наверх.
[01:17:33.560 --> 01:17:38.560]  Рекурсивный подъем вверх.
[01:17:41.560 --> 01:17:42.560]  Все.
[01:17:42.560 --> 01:17:43.560]  Конец.
[01:17:43.560 --> 01:17:45.560]  Ну, в смысле, случай в конец.
[01:17:48.560 --> 01:17:49.560]  Вот.
[01:17:49.560 --> 01:17:52.560]  Значит, еще раз и рейс.
[01:17:52.560 --> 01:17:55.560]  Первый, ну там мы что-то делаем, первый случай,
[01:17:55.560 --> 01:17:58.560]  третий случай простые, второй случай мы обобщаем его
[01:17:58.560 --> 01:18:02.560]  на вот эту более общую задачу, что мы находимся в поддереве,
[01:18:02.560 --> 01:18:05.560]  где у которого черная глубина уменьшилась на один.
[01:18:05.560 --> 01:18:08.560]  Дальше делаем кучу случаев, большинство из которых просто
[01:18:08.560 --> 01:18:10.560]  за несколько поворотов, там, за два поворота кажется
[01:18:10.560 --> 01:18:13.560]  всегда, и несколько перекрасок, все вообще чинит, чинит
[01:18:13.560 --> 01:18:16.560]  вообще все дерево, и делает вообще все хорошо.
[01:18:16.560 --> 01:18:20.560]  И последний случай сводит нашу задачу к аналогичной
[01:18:20.560 --> 01:18:21.560]  только на уровень больше.
[01:18:21.560 --> 01:18:23.560]  То есть я вот здесь что-то перекрасил и наша задача
[01:18:23.560 --> 01:18:24.560]  стала теперь вот такой.
[01:18:24.560 --> 01:18:27.560]  В этом дереве черная глубина уменьшилась на один.
[01:18:27.560 --> 01:18:30.560]  И я вот теперь для этой вершины решаю ту же самую задачу.
[01:18:30.560 --> 01:18:33.960]  И вот то, что меня спрашивали, да, у меня же это дерево всегда пустой черный лист.
[01:18:33.960 --> 01:18:37.240]  Вот здесь это уже какой-то содержательный побольше дерева.
[01:18:37.240 --> 01:18:42.160]  Ну вот, я, соответственно, поднимаюсь наверх, пока все не починю.
[01:18:42.160 --> 01:18:49.800]  Вопросы, может, по случаем кем-то. Я рад.
[01:18:49.800 --> 01:18:59.560]  Смотрите, логарифм на подъем, да, то есть при подъеме снизу вверх у вас может быть в
[01:18:59.560 --> 01:19:04.760]  худшем случае логарифм, но дорогих действий и поворотов у вас два всего, максимум всегда.
[01:19:04.760 --> 01:19:09.880]  Потому что если вы сделали поворот, то вы все починили сразу. Вот, значит, теперь давайте последние
[01:19:09.880 --> 01:19:15.960]  пять минут быстренько проговорим, что мы получили. Давайте сравним красно-черный и АВЛ.
[01:19:15.960 --> 01:19:21.760]  Смотрите, здесь, про глубину мы знаем, что здесь примерно два логарифма двоичных,
[01:19:21.760 --> 01:19:27.240]  нам и доказывали в начале лекции. Про ВЛ у нас там был логарифм по основанию Фи, по основанию
[01:19:27.240 --> 01:19:33.600]  золотого сечения. Глубина примерно лог Фи, по основанию Фи в смысле. Вот, это примерно полтора логарифма двоичных.
[01:19:33.600 --> 01:19:42.640]  То есть с точки зрения константа глубина вот здесь поменьше. В смысле, с точки зрения мультиплеектива,
[01:19:42.640 --> 01:19:52.920]  но множители глубины. Тут константа поменьше. Погодите. Поэтому здесь, грубо говоря, вот общий
[01:19:52.920 --> 01:19:59.760]  совет такой, что если у вас много файндов и мало инсертов и эрейзов, используйте АВЛ,
[01:19:59.760 --> 01:20:04.320]  потому что у него глубина поменьше, файнды не меняют структуру дерева, они работают за полтора
[01:20:04.320 --> 01:20:12.480]  логарифма. А если у вас много инсертов и эрейзов, то используйте красно-черные, потому что они хоть
[01:20:12.480 --> 01:20:18.360]  вот здесь константы побольше, но они делают меньше тяжелых операций. То есть вот здесь в АВЛе,
[01:20:18.360 --> 01:20:23.560]  ну в эрейзе точно, может быть очень много, когда мы в АВЛе что-то чинили после эрейза, у нас может
[01:20:23.560 --> 01:20:27.240]  быть очень много поворотов. Ну вплоть до логарифма, когда мы вот идем, мы там что-то вращаем,
[01:20:27.240 --> 01:20:32.640]  чиним дельточки. Вот здесь поворотов может быть много, а здесь всегда максимум два. Поэтому здесь
[01:20:32.640 --> 01:20:39.120]  мало тяжеловесных операций и кочепы предпочтительные в случае, когда у вас много вот таких операций. То есть
[01:20:39.120 --> 01:20:44.360]  тут мы уже боремся за константу, грубо говоря, и мораль такая, что при файнде, если у вас много,
[01:20:44.360 --> 01:20:49.240]  если у вас файнды доминируют, если у вас много файндов, используйте АВЛ, если доминируют инсерты эрейз,
[01:20:49.240 --> 01:21:00.920]  используйте красно-черные. Что? Да, сет красно-черный, ну обычно. Насколько я знаю, нет. Вот это сравнение
[01:21:00.920 --> 01:21:05.720]  вот этих двух. Значит они хороши тем, что они всегда, ну они детерминированы, они не используют
[01:21:05.720 --> 01:21:10.600]  рандома, они всегда на каждом запросе отвечают за чистый логарифм. Это за полтора логарифма,
[01:21:10.600 --> 01:21:19.000]  это за два логарифма, в худшем случае. Вот, значит, что мы еще знаем? Мы знаем сплей. Чем он хорош?
[01:21:19.000 --> 01:21:23.240]  Ну он хорош тем, что недавние запросы находятся близко к корню. Мы там специально так делали,
[01:21:23.240 --> 01:21:29.160]  что последний запрос находится прямо в корне, ну соответственно несколько последних находится
[01:21:29.160 --> 01:21:34.480]  около корни. Поэтому у него понятно какой плюс, что недавние запросы отвечаются за быстро. Если
[01:21:34.480 --> 01:21:39.400]  много раз к одним и тем же элементам поступают запросы, мы на них быстро отвечаем. Значит недавние
[01:21:39.400 --> 01:21:50.840]  запросы, запросы близко к корню. Вот, ну а минусы понятно, что там только амортизационная оценка,
[01:21:50.840 --> 01:21:57.760]  и каждый конкретный запрос может работать задолго. В худшем случае за линейное время. То есть каждый
[01:21:57.760 --> 01:22:01.920]  конкретный запрос может быть долго, но суммарно работает быстро. Ну как обычно в амортизационном
[01:22:01.920 --> 01:22:11.280]  анализе. Вот, ну про дикартовое дерево мы тоже знаем, что оно вероятностное, то есть там только
[01:22:11.280 --> 01:22:19.600]  мотожидание логарифмическое на глубину. Вот, ну скажем оно обычно его хватает. То есть оно проще
[01:22:19.600 --> 01:22:27.120]  всего пишется, на мой взгляд, и там умеет спокойно сплититься, мерзиться в отличие от красно-черного
[01:22:27.120 --> 01:22:32.440]  AVL, где эти операции более сложны. Значит плюс, что здесь быстро работает, ну как бы нормально
[01:22:32.440 --> 01:22:40.160]  работает сплит и мерч в отличие вот красно-черного AVL. Минусы то, что оно вероятностное. Вот, ну и
[01:22:40.160 --> 01:22:51.920]  B дерево, оно хорошо на больших объемах данных. Большие объемы данных. Мы говорили, что там как
[01:22:51.920 --> 01:22:56.960]  раз самая сложная операция это вот обращение к диску, подгрузка содержания вершины в оперативку.
[01:22:56.960 --> 01:23:02.480]  Ну а минусы, что на маленьких объемах данных оно не лучше, чем все остальные. То есть оно дает
[01:23:02.480 --> 01:23:07.200]  выигрыш. Если у вас какое-то внешнее хранилище данных, в остальных случаях оно ничем не лучше
[01:23:07.200 --> 01:23:12.920]  красно-черного AVL. Все, деревья поиска, отпускаем. Всем спасибо.
