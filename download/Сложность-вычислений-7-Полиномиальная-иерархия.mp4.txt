[00:00.000 --> 00:08.880]  Значит, мы немножко ушли вперед на лекции по сравнению
[00:08.880 --> 00:09.880]  с семинарами.
[00:09.880 --> 00:13.880]  Мы уже начали полинамеральное иерархию.
[00:13.880 --> 00:17.520]  Насколько я понимаю, ни в одной группе еще задачи
[00:17.520 --> 00:18.760]  при нем не начали разбирать.
[00:18.760 --> 00:22.960]  Ну, ничего страшного.
[00:22.960 --> 00:26.640]  Давайте я вкратце напомню, что мы обсуждали.
[00:26.640 --> 00:30.400]  Значит, мы обсуждали такую структуру.
[00:30.400 --> 00:37.400]  Знаете, что есть класс П, который же считается и
[00:37.400 --> 00:39.760]  фигма 0, и Пи 0 пальномиальным.
[00:39.760 --> 00:44.440]  Значит, дальше он вложен в Np, который есть фигма 1
[00:44.440 --> 00:49.000]  пальномиальная и он же вложен в Коэнпе, который есть
[00:49.000 --> 00:51.020]  Пи 1 пальномиальное.
[00:51.020 --> 00:56.120]  Дальше есть фигма 2 пальномиальная, Пи 2 пальномиальная и они
[00:56.120 --> 00:58.880]  вложено вот так вот крест-накрест
[01:00.080 --> 01:02.280]  дальше сигма-3-пальномиальная и
[01:03.880 --> 01:05.880]  3-пальномиальная
[01:06.960 --> 01:09.280]  дальше тут все вложено крест-накрест и
[01:10.600 --> 01:12.760]  так далее и это все вложено в pH
[01:14.360 --> 01:17.920]  значит pH это слово полиномиолхаэроши, которое объединяет все эти классы
[01:19.720 --> 01:21.480]  вот
[01:21.480 --> 01:23.480]  начну определение такое
[01:24.040 --> 01:27.440]  да обобщает катное определение n-p
[01:29.000 --> 01:31.000]  значит а именно там
[01:31.280 --> 01:33.280]  получалось что язык s
[01:34.280 --> 01:36.280]  лежит в сигма-катом
[01:36.600 --> 01:39.560]  полиномиальном тогда и только тогда когда для
[01:41.520 --> 01:43.520]  некоторого полиномиального учислимого
[01:45.240 --> 01:49.240]  вы верно следующее что x лежит в s
[01:50.360 --> 01:52.360]  тогда и только тогда когда
[01:54.320 --> 01:56.320]  существует
[01:57.320 --> 01:59.320]  y1 для любого y2
[02:00.720 --> 02:05.800]  существует y3 и так далее и здесь для любого или существует
[02:06.640 --> 02:09.040]  существует ли для любого в зависимости от четности
[02:10.080 --> 02:14.400]  числа k соответственно если k нечетные то существует если четные то для любого
[02:15.200 --> 02:19.640]  дальше будет ykt и в конце еще тут будет v от
[02:20.600 --> 02:23.120]  x и y1 и y2 и так далее
[02:25.080 --> 02:27.080]  yt
[02:28.680 --> 02:30.680]  вот
[02:33.360 --> 02:38.840]  пикатма аналогично только первый квантор другой на первый квантор для любого
[02:42.240 --> 02:44.240]  вот ну и мы обсуждали
[02:44.280 --> 02:46.040]  различные условия при которых
[02:46.080 --> 02:47.760]  это вся иерархия
[02:47.760 --> 02:52.040]  коллапсирует да то есть продолжается до какого-то этажа а дальше все получается одинаково
[02:52.560 --> 02:55.680]  но в частности если п равно n-p это вообще все одно и то же
[02:56.400 --> 02:59.680]  значит все все эти классы будут совпадать с п
[03:01.800 --> 03:05.560]  вот но если п не равно n-p но n-p равно q-n-p
[03:06.360 --> 03:08.360]  начинает с первого уровня все одно и то же
[03:09.040 --> 03:11.040]  ну и мы обсуждали что
[03:12.000 --> 03:14.760]  эквивалентно следующие условия да что на каком-то уровне
[03:15.360 --> 03:22.400]  сигма и п совпадает или на том же уровне сигма со следующим совпадает или вся полинарная иерархия совпадает
[03:23.400 --> 03:25.240]  соответствующим
[03:25.240 --> 03:27.240]  уровнем
[03:27.920 --> 03:29.920]  хорошо
[03:30.000 --> 03:37.400]  значит но вот есть стандартный инструмент изучения конкретных задач разных классах это
[03:37.920 --> 03:41.800]  инструмент сводимости до концепции сводимости и полноты
[03:42.440 --> 03:45.760]  да мы уже изучили полимерную сводимость и n-p полноту
[03:46.280 --> 03:48.600]  здесь та же самая полимерная сводимость и
[03:49.280 --> 03:51.600]  соответственно полнота на разных уровнях иерархия
[03:52.640 --> 03:55.040]  да то есть да значит на
[03:57.680 --> 03:59.680]  различных
[04:02.360 --> 04:04.360]  уровнях иерархия
[04:07.400 --> 04:11.560]  значит на различных уровнях иерархия существует
[04:13.240 --> 04:15.240]  полная задача
[04:16.760 --> 04:21.560]  вот ну и определяются они точно так же как и n-p полная задача да то есть например
[04:22.200 --> 04:24.200]  игма
[04:24.200 --> 04:26.200]  катая полинамиальная полная
[04:27.240 --> 04:29.560]  значит это означает что одновременно а
[04:31.840 --> 04:33.320]  там по себе лежит все
[04:33.320 --> 04:35.320]  а
[04:36.160 --> 04:40.920]  там по себе лежит сигмакатом полинамиальном и для любого б
[04:43.200 --> 04:46.840]  из сигмакатого полинамиального верно чтобы
[04:48.400 --> 04:50.400]  полинамиально сводится к
[04:50.400 --> 04:52.560]  вот где сводимость та же самая по карпу
[04:53.080 --> 04:56.920]  да то есть получается что мы по x вычитаем какой-то f от x и
[04:57.200 --> 05:00.120]  x лежит в б тогда только тогда когда f от x лежит в а
[05:03.320 --> 05:05.320]  вот
[05:06.160 --> 05:08.160]  ну и на самом деле тут
[05:10.040 --> 05:12.040]  значит бывают какие-то
[05:13.080 --> 05:16.680]  структурированные задачи но и как на счет как и с n-p
[05:18.240 --> 05:20.240]  есть стандартная задача
[05:20.840 --> 05:22.840]  как бы с
[05:23.040 --> 05:24.800]  связанной с логикой
[05:24.800 --> 05:27.480]  на то есть вот у нас есть задача у выполнимости
[05:29.520 --> 05:31.520]  значит есть стат
[05:32.520 --> 05:35.480]  задача у выполнимости то есть нож таких фи
[05:36.920 --> 05:38.920]  то
[05:39.680 --> 05:42.160]  существует x такой что фи от x равно единице
[05:43.840 --> 05:45.840]  вот это задача n-p полная
[05:49.560 --> 05:51.560]  значит дальше бывает
[05:53.360 --> 05:55.360]  задача о тавтологии
[05:56.720 --> 05:58.720]  значит задача тавтология
[05:59.280 --> 06:02.000]  то есть нож таких фи наброс что для любого x
[06:03.640 --> 06:05.640]  я ты к равно единице
[06:06.240 --> 06:08.400]  вот эта задача коин ф полная
[06:16.880 --> 06:20.360]  ну а здесь будет вот одновременно аналогичная задача
[06:21.760 --> 06:24.320]  значит именно сигма к тсад
[06:25.320 --> 06:29.080]  да значит это означает что тут нож таких фи то
[06:31.800 --> 06:35.600]  существует x 1 для любого x 2 существует x 3 и
[06:36.200 --> 06:37.600]  так далее
[06:37.600 --> 06:41.400]  здесь соответственно зависимости отчетности существует и для любого x ката
[06:42.160 --> 06:44.160]  ну и дальше соответственно фи от
[06:45.160 --> 06:47.160]  x 1 x 2 и так далее x ката
[06:48.680 --> 06:50.680]  равно единице
[06:51.520 --> 06:56.200]  вот ну если соответственно пик ате аналогично
[07:00.840 --> 07:02.840]  пик ате
[07:03.960 --> 07:05.960]  то же самое
[07:08.760 --> 07:11.880]  поэтому тут для любого ли существует пик ате
[07:11.880 --> 07:13.880]  ну значит если тут всего два уровня
[07:14.560 --> 07:16.560]  то можно как-то интерпретировать
[07:17.280 --> 07:19.280]  например существует
[07:20.120 --> 07:24.120]  значит существует x для любого y фи от x y
[07:25.400 --> 07:28.920]  равно единице это как бы задача тавтологии с параметром
[07:32.040 --> 07:34.040]  значит задача о
[07:35.560 --> 07:37.560]  тавтологии с параметром
[07:37.560 --> 07:42.600]  да то есть тут подразумевается что x это параметр y это собственно аргумент и
[07:43.120 --> 07:47.440]  вопрос можно фиксировать параметр так чтобы по аргументу это остался тавтология
[07:48.480 --> 07:50.480]  но вот это из сигма 2
[07:52.560 --> 07:56.600]  вот а если наоборот для любого x существует y
[07:57.480 --> 07:59.480]  то есть у нас есть тавтология
[08:00.480 --> 08:02.400]  и
[08:03.400 --> 08:07.160]  вот а если наоборот для любого x существует y и
[08:08.760 --> 08:14.200]  я тык сыгрок равно единице да то это можно назвать задачей об универсальной выполнимости
[08:17.320 --> 08:19.320]  значит задача об
[08:23.120 --> 08:25.120]  универсальной выполнимости
[08:25.440 --> 08:30.640]  значит ну соответственно здесь получается на наоборот верно ли что как бы мы не фиксировали параметр x
[08:31.400 --> 08:33.400]  останется выполнимая формула
[08:34.240 --> 08:37.000]  но а если больше квантеров то получается
[08:38.940 --> 08:42.540]  намешивать квантерра если если три будет квантера то будет соответственно
[08:43.600 --> 08:45.820]  задача об универсальной выполнимости с параметрам
[08:46.880 --> 08:52.360]  соответственно будет еще кainen hundreds от дай можно ли так фиксировать парамуты чтобы осталось универсiga выполнимость
[08:53.300 --> 08:57.520]  или задача соответственно об универсальной тавтологии с параметром
[08:57.520 --> 09:03.520]  что как бы не фиксировать еще третий параметр, все равно получится
[09:03.520 --> 09:09.520]  тавтология для некоторого параметра. Ну и так далее. И это можно продолжать уже.
[09:09.520 --> 09:13.520]  Ну вот выше третьего уровня уже получается не очень содержательная задача,
[09:13.520 --> 09:17.520]  но хотя иногда можно что-нибудь и найти.
[09:17.520 --> 09:30.520]  Так вот, утверждение такое, что эти задачи полные.
[09:30.520 --> 09:46.520]  Сигма-катая сад – это полная задача в сигмакатом пальномиальном,
[09:46.520 --> 09:56.520]  ну а, соответственно, пикатая сад – это полная задача в пикатом пальномиальном.
[09:56.520 --> 10:08.520]  Вот. Ну, как это доказывается?
[10:08.520 --> 10:15.520]  Ну, более-менее так же, как терминку Кливена, но с некоторой оговоркой.
[10:15.520 --> 10:23.520]  Значит, а именно, на самом деле, для параметров одной чётности лучше доказывать одно,
[10:23.520 --> 10:27.520]  для другой чётности лучше доказывать другое.
[10:27.520 --> 10:35.520]  И поэтому, прежде всего, мы поймем, почему эти два утверждения между собой эквивалентны.
[10:35.520 --> 10:40.520]  Значит, доказательства.
[10:40.520 --> 10:58.520]  Первое. Эти два утверждения эквивалентны друг другу.
[10:58.520 --> 11:02.520]  Так. Почему?
[11:02.520 --> 11:12.520]  Ну, на самом деле, это легко понять.
[11:12.520 --> 11:16.520]  Ну, как связана выполнимость и тавтология?
[11:16.520 --> 11:25.520]  Формула выполнима тогда и только тогда, когда её отрицание не является тавтологией.
[11:25.520 --> 11:31.520]  А тут, соответственно, получается, что фи лежит в sigma k сад.
[11:31.520 --> 11:39.520]  Тогда и только тогда, когда не фи не принадлежит phi k сад.
[11:39.520 --> 11:43.520]  Но такое своеобразное двойное отрицание.
[11:43.520 --> 11:46.520]  Хотя в некотором смысле и тройное.
[11:46.520 --> 11:51.520]  Но не тройное, а два отрицания и одна перемена кванторов.
[11:51.520 --> 11:55.520]  Причем одно отрицание внутри формулы, а другое отрицание к утверждению.
[11:55.520 --> 12:05.520]  И ещё, соответственно, меняются все кванторы.
[12:05.520 --> 12:13.520]  Ну и тогда получается, что получается так.
[12:13.520 --> 12:38.520]  Что х, например, пусть известно, то, скажем, sigma k сад является sigma k поленомиальное полным.
[12:38.520 --> 12:49.520]  Вот тогда рассмотрим какое-нибудь множество.
[12:49.520 --> 12:56.520]  Пусть s из pi капальномиального.
[12:56.520 --> 13:05.520]  Значит, тогда s чертой будет из sigma k полномиального.
[13:05.520 --> 13:11.520]  Ну, потому что это вот сюда нужно посмотреть.
[13:11.520 --> 13:17.520]  Если мы пришли к s чертой, то мы взяли отрицание вот здесь.
[13:17.520 --> 13:20.520]  Значит, у нас все кванторы обратились.
[13:20.520 --> 13:23.520]  И отрицание вот сюда пришло.
[13:23.520 --> 13:26.520]  Но если v поленомиальный вычислимый, то отрицание v тоже поленомиальный вычислимый.
[13:26.520 --> 13:34.520]  Поэтому, соответственно, для другого v получается формула со всеми кванторами наоборот.
[13:34.520 --> 13:40.520]  Вот, тогда с чертой лежит sigma k полномиальное.
[13:40.520 --> 14:09.520]  Значит, и получается, что для вводимости f имеем, что х лежит v с чертой тогда и только тогда, когда f от x лежит sigma k сад.
[14:09.520 --> 14:26.520]  Вот, но дальше получаем, что с одной стороны х лежит v с чертой, это тогда и только тогда, когда x не принадлежит s.
[14:26.520 --> 14:42.520]  Вот, а здесь по вот тому вот имеем, что это тогда и только тогда, когда f от x не принадлежит k сад.
[14:42.520 --> 14:47.520]  Ну и теперь вот эти отрицания принадлежности можно снять.
[14:47.520 --> 15:03.520]  И, соответственно, получаем, что х лежит v с тогда и только тогда, когда не отрицание f от x принадлежит pi k сад.
[15:03.520 --> 15:17.520]  Ну, вот и получили, что если f делала формулу, которая работала для s, для s с чертой, то тогда отрицание этой формулы будет работать для самого s.
[15:17.520 --> 15:27.520]  Вот. Ну чего, понятно? Хорошо.
[15:27.520 --> 15:35.520]  Ну а теперь дальше можно вспомнить, как мы доказываем теперь кукулевина.
[15:35.520 --> 15:42.520]  Да, у нас там была какая-то большая, очень большая таблица протокола работы.
[15:42.520 --> 15:54.520]  И мы говорили, что эту таблицу можно так заполнить, соответственно, так, чтобы его работало.
[15:54.520 --> 15:56.520]  Вот, но там мы пользовались следующим.
[15:56.520 --> 16:08.520]  Там мы пользуемся тем, что у нас по у квантор существования, по сертификату квантор существования и по тому, как заполняется таблица тоже квантор существования.
[16:08.520 --> 16:16.520]  И, соответственно, они должны склеиваться между собой, то есть и там существование, и там существование.
[16:16.520 --> 16:31.520]  Ну, соответственно, чтобы это работало, чтобы это работало в целом, нужно, чтобы последний квантор, ты почки, да, вот здесь вот нужно, чтобы последний квантор был квантором существования.
[16:31.520 --> 16:41.520]  Ну а это будет как раз для нечетных k и sigma, или для четных k и pi.
[16:41.520 --> 17:02.520]  Ну вот, значит, теперь получается, что для нечетных k докажем sigma k в полноту sigma k sad.
[17:02.520 --> 17:18.520]  Вот, а для четных k докажем pi k в полноту pi k sad.
[17:18.520 --> 17:21.520]  Вот такой вот план.
[17:21.520 --> 17:25.520]  Ну а реализуется он очень легко.
[17:25.520 --> 17:38.520]  Ну, очень легко по модулю понимания теоремку Клейвена, да, то есть если мы же забрались вот с этим заполнением протоколов, да, то тут как бы нужно написать так, что вот здесь вот,
[17:38.520 --> 17:52.520]  значит, здесь x, здесь y1, y2 и так далее, там yt, и тут какой-то протокол.
[17:52.520 --> 18:07.520]  Ну и соответственно тогда нужно писать так, что x у нас лежит в s, тогда и только тогда, когда там существует y1, для любого y2 существует y3 и так далее.
[18:07.520 --> 18:13.520]  Существует yk и существует протокол.
[18:13.520 --> 18:26.520]  Ну а дальше, значит, дальше, соответственно, нужно написать формулы.
[18:26.520 --> 18:38.520]  Значит, тут формулы, означающие корректность протокола.
[18:38.520 --> 18:48.520]  Вот, эти формулы пишутся точно так же, как в теоремку Клейвен написались, да, то есть нужно, чтобы верхняя строчка соответствовала тому, что вот здесь вот выбрано.
[18:48.520 --> 18:57.520]  Соответственно, в нижней строчке было бы принимающее состояние, а по дороге все переходы соответствовали командам машины тюринга.
[18:57.520 --> 19:01.520]  Ну да, даже запишем.
[19:01.520 --> 19:15.520]  То есть верхняя строка соответствует, соответственно, набору xy1, y2 и так далее.
[19:15.520 --> 19:34.520]  В нижней строке есть принимающее состояние, ну а в середине все вычисляется по правилам машины тюринга.
[19:34.520 --> 19:51.520]  Да, значит, соответственно, внутри таблица вычисляется по правилам машины тюринга.
[19:51.520 --> 20:04.520]  Ну вот, и за счет того, что здесь последний квантор одноименный, существует пара из y и протокола.
[20:04.520 --> 20:14.520]  Но с пикатом точно так же, только тут первый квантор будет другой, а важно, что последний квантор склеивается с квантором по протоколу.
[20:14.520 --> 20:28.520]  Вот, что такое рассуждение. Есть какие-нибудь вопросы?
[20:28.520 --> 20:37.520]  Ну ладно, дальше я думаю другие примеры все-таки будут на семинарах.
[20:37.520 --> 20:47.520]  Значит, в принципе, ну вообще ученые исследовали не только mp-полноту, но и полноту вот в этих классах.
[20:47.520 --> 20:58.520]  И определенное количество задач полных нашли. В частности, те задачи, которые мы в прошлый раз на лекции изучали, будут полными.
[20:58.520 --> 21:04.520]  Но это обычно не то чтобы прям просто доказывается.
[21:04.520 --> 21:13.520]  И там тоже есть такой компендиум называется, то есть сборник полных задач.
[21:13.520 --> 21:25.520]  И там как раз на втором уровне их довольно много, на третьем совсем немного, а на четвертом там как-то и нет.
[21:25.520 --> 21:35.520]  Да, не возникает естественных задач. Да, то есть вот это получается, я считаю, искусственной задачей.
[21:35.520 --> 21:42.520]  А естественной, которая берется там из комминаторики, из теореграфов и так далее.
[21:42.520 --> 21:44.520]  Вот.
[21:48.520 --> 21:51.520]  Что еще тут можно сказать про полные задача?
[21:51.520 --> 21:57.520]  Но можно задаться вопросом, а бывает ли полные задачи прямо во всем pH?
[22:02.520 --> 22:09.520]  Значит, могут ли быть полные задачи?
[22:13.520 --> 22:18.520]  Во всем pH.
[22:21.520 --> 22:24.520]  Ну, как думаете, могут, не могут?
[22:27.520 --> 22:30.520]  Ну, ответ такой, что никто не знает.
[22:30.520 --> 22:37.520]  Но условное утверждение такое, что если не существует, тогда происходит коллапсирование.
[22:37.520 --> 22:50.520]  Значит, ответ такой, только если происходит коллапс.
[22:55.520 --> 23:00.520]  И на самом деле это довольно легко понять, потому что это что такое вообще pH?
[23:01.520 --> 23:04.520]  Ну, это обвинение всех уровней.
[23:04.520 --> 23:07.520]  Всех уровней там, ну, любого.
[23:07.520 --> 23:09.520]  До бесконечного.
[23:09.520 --> 23:11.520]  Ну, бесконечного нет.
[23:14.520 --> 23:17.520]  Всех, со всеми номерами, сколько годно большими.
[23:20.520 --> 23:23.520]  Ну, а тогда, если у нас есть какой-то элемент,
[23:23.520 --> 23:27.520]  если у нас есть элемент этой самой лестницы,
[23:27.520 --> 23:31.520]  этой самой лестницы, этого объединения, то что это значит?
[23:31.520 --> 23:35.520]  Это означает, что этот элемент лежит на каком-то конкретном уровне.
[23:37.520 --> 23:42.520]  Да, тут как бы нет бесконечного уровня, да, есть только полокупность конечных.
[23:44.520 --> 23:49.520]  Ну, а тогда получается, что раз это полная задача, то к ней все сводятся.
[23:49.520 --> 23:54.520]  В том числе и сводятся есть более высоких уровней.
[23:55.520 --> 23:59.520]  Ну, и дальше, да, тут на самом деле нужно где-то было сказать,
[23:59.520 --> 24:04.520]  что если там какой-то язык примерно сводится к языку из сигмакатова,
[24:04.520 --> 24:06.520]  то он сам лежит сигмакатом.
[24:08.520 --> 24:12.520]  То есть нужно писать, что если такая простая лемма,
[24:14.520 --> 24:19.520]  если а сводится к b, а b лежит сигмакатом,
[24:20.520 --> 24:26.520]  то тогда а лежит сигмакатом.
[24:28.520 --> 24:30.520]  Вот почему это так?
[24:30.520 --> 24:34.520]  Ну, просто происходит то же самое, да, но вместо,
[24:34.520 --> 24:39.520]  вместо x-а подставляется там f от x в определение.
[24:41.520 --> 24:46.520]  И, соответственно, получается такая же цепочка, да,
[24:46.520 --> 24:50.520]  вместо v, вместо верификатора для a получается верификатор для b,
[24:50.520 --> 24:52.520]  а вместо x-а f от x.
[24:53.520 --> 24:56.520]  И получается точно такое же выражение, как и было.
[24:58.520 --> 25:09.520]  Ну, вот, соответственно, если, да, получаем, что если b полон ph,
[25:10.520 --> 25:14.520]  да, всей племянной аерархии, то получаем,
[25:14.520 --> 25:22.520]  что b лежит в сигмакатом для некоторого k.
[25:22.520 --> 25:45.520]  Вот, ну и, соответственно, следовательно, все ph.
[25:45.520 --> 25:58.520]  Да, значит, если a лежит в ph, то a сводится к b,
[25:59.520 --> 26:03.520]  и, следовательно, a лежит в сигмакатом.
[26:03.520 --> 26:15.520]  Ну и, следовательно, получается, что ph будет равно сигмакатому.
[26:16.520 --> 26:19.520]  Ну, потому что отсюда пучился ph вложено и обратно тоже вложено,
[26:19.520 --> 26:21.520]  потому что ph-то объедение всех сигмакатах.
[26:22.520 --> 26:24.520]  То есть получили как раз коллапсирование.
[26:26.520 --> 26:30.520]  Поэтому, если тут в полной языке, никто не знает,
[26:30.520 --> 26:37.520]  но все-таки типичное верование, что все классы, не только панированную NP,
[26:37.520 --> 26:41.520]  не только панированную NP, а все этажи разные.
[26:42.520 --> 26:48.520]  Вот, хотя мы и не знаем приятных нам задач на этажах выше третьего,
[26:48.520 --> 26:54.520]  но предполагается, конечно, можно что-нибудь придумать такое искусственное,
[26:54.520 --> 26:58.520]  но вот как-то не возникает ничего такого,
[26:58.520 --> 27:02.520]  что было бы придумано не для демонстрации того,
[27:02.520 --> 27:04.520]  что может быть задача на 10-м этаже,
[27:07.520 --> 27:12.520]  а такой задачи, которая бы нас еще почему-то бы интересовала
[27:12.520 --> 27:14.520]  и была бы выше третьего этажа.
[27:14.520 --> 27:19.520]  Вот как, ну, бывает пересечение 2-4 уровней для точных задач и оптимизации,
[27:19.520 --> 27:21.520]  как мы это обсуждали на лекции,
[27:22.520 --> 27:24.520]  но выше вот как-то не получается.
[27:27.520 --> 27:33.520]  Вот, хотя вообще, наверное, можно попробовать что-нибудь поискать,
[27:34.520 --> 27:40.520]  потому что вот у такого очередования кванторов есть игровая интерпретация.
[27:42.520 --> 27:44.520]  Да, можно вообще вот этот процесс,
[27:46.520 --> 27:48.520]  ну, например, вот на эту форму посмотрим.
[27:48.520 --> 27:54.520]  Значит, этот процесс можно понимать как игру между двумя игроками, там,
[27:54.520 --> 27:55.520]  четным и нечетным.
[27:58.520 --> 28:02.520]  Вот, и тогда, соответственно, сначала нечетный выбирает X1,
[28:04.520 --> 28:06.520]  потом четный выбирает X2,
[28:06.520 --> 28:08.520]  потом нечетный выбирает X3,
[28:09.520 --> 28:11.520]  и так далее, значит, происходит вот такая вот игра,
[28:12.520 --> 28:14.520]  а в результате ФИ говорит, кто выиграл.
[28:15.520 --> 28:18.520]  Да, ФИ это как правило игры, которые говорят, что если
[28:18.520 --> 28:22.520]  первый ходил X1, потом второй X2, потом первый X3, и так далее,
[28:22.520 --> 28:26.520]  то выиграл, если равно 1, то выиграл нечетный, если 0, то выиграл четный.
[28:28.520 --> 28:31.520]  И тогда вот это вот все выражение с кванторами
[28:32.520 --> 28:35.520]  говорит, что у первого есть выигрышная стратегия, да, у нечетного.
[28:36.520 --> 28:41.520]  Да, то есть нечетный может сделать такой хороший ход в начале,
[28:41.520 --> 28:43.520]  что потом как бы не ответил четный,
[28:44.520 --> 28:45.520]  нечетный все равно сможет ответить,
[28:46.520 --> 28:47.520]  да, и так далее, и так далее,
[28:48.520 --> 28:49.520]  что в итоге нечетный выиграет.
[28:51.520 --> 28:54.520]  Да, это называется выигрышная стратегия, да, что независимо от действий другого,
[28:55.520 --> 28:57.520]  первый может сделать так, что выиграет.
[29:01.520 --> 29:06.520]  Вот, ну а здесь наоборот, да, значит, здесь у второго есть выигрышная стратегия, да,
[29:06.520 --> 29:07.520]  как бы ни сходило первый,
[29:07.520 --> 29:09.520]  второй сможет ответить, что как бы потом
[29:10.520 --> 29:12.520]  снова первый не ходил, и так далее, в итоге выиграет.
[29:13.520 --> 29:14.520]  Ну, первый проиграет, то есть выиграет второй.
[29:17.520 --> 29:19.520]  Вот, и получается, да, что это вот такие игры,
[29:20.520 --> 29:24.520]  которые длятся заранее известное число ходов.
[29:26.520 --> 29:29.520]  Да, вообще можно ставить вопрос о сложности игр,
[29:30.520 --> 29:32.520]  это довольно содержательный вопрос для многих игр.
[29:33.520 --> 29:36.520]  Но, чтобы это был вопрос из теории сложности,
[29:37.520 --> 29:39.520]  особенно нужно, чтобы была не одна игра,
[29:40.520 --> 29:43.520]  а семейство игр, ну, грубо говоря, на сколько год на больших досках.
[29:44.520 --> 29:46.520]  Да, например, шашки очень легко обобщаются,
[29:47.520 --> 29:51.520]  шашки на любой доске, да, четные на четные,
[29:53.520 --> 29:58.520]  да, в общем, легко можно определить правила.
[29:59.520 --> 30:03.520]  Да, или там игра ГО тоже легко определяется на любой доске, нечетные на нечетные.
[30:03.520 --> 30:07.520]  Да, игра там, конечно, есть кинолики, тоже на любой доске легко определяется.
[30:08.520 --> 30:11.520]  Вот, шахмы-то уже не так легко определяются, да, и это можно сделать, конечно,
[30:12.520 --> 30:15.520]  но там нужно аккуратно сказать, сколько будет, каких фигур,
[30:16.520 --> 30:18.520]  какие там, как рокировка происходит, и так далее.
[30:21.520 --> 30:22.520]  Вот.
[30:25.520 --> 30:28.520]  Ну вот, но, соответственно, дальше во всяких таких играх получается,
[30:29.520 --> 30:32.520]  что чем больше доска, тем больше потенциальных ходов может быть.
[30:33.520 --> 30:35.520]  Да, ну, например, там крестики нолики.
[30:36.520 --> 30:39.520]  Да, у нас просто каждый ход на одну клетку меньше становится,
[30:40.520 --> 30:43.520]  поэтому сколько всего клеток, столько и ходов может быть.
[30:44.520 --> 30:45.520]  Чем больше доска, тем больше ходов.
[30:46.520 --> 30:50.520]  Вот, а вот здесь вот такие игры, у которых число ходов заранее фиксировано.
[30:51.520 --> 30:53.520]  Да, то есть известно, что там доска может быть сколько угодно большая,
[30:54.520 --> 30:55.520]  а ходов будет, например, 20.
[30:56.520 --> 30:58.520]  Да, и там и на доске 20 на 20 будет 20 ходов,
[30:59.520 --> 31:00.520]  и на доске 100 на 100 будет 20 ходов,
[31:00.520 --> 31:03.520]  и на доске 1000 на 1000 будет 20 ходов, и так далее.
[31:04.520 --> 31:08.520]  Да, то есть сами ходы могут быть какими-то хитрыми и большими,
[31:09.520 --> 31:10.520]  но их будет всего 20.
[31:11.520 --> 31:12.520]  Вот.
[31:13.520 --> 31:17.520]  Ну, а тут, наверное, можно поискать какие-нибудь хорошие игры,
[31:18.520 --> 31:20.520]  в которых, естественно, образно это ограничение число ходов возникает,
[31:21.520 --> 31:23.520]  и анализировать их в полноту.
[31:24.520 --> 31:25.520]  Но я отчет не встречал таких работ.
[31:26.520 --> 31:28.520]  Так, значит, я хочу еще про две вещи рассказать.
[31:28.520 --> 31:29.520]  Значит, одна...
[31:30.520 --> 31:34.520]  Ну, это обе вещи такие, как бы, с стороны моделей.
[31:38.520 --> 31:40.520]  Значит, одна вещь вот такая.
[31:41.520 --> 31:47.520]  Значит, смотрите, у нас вообще с классом NP было два определения.
[31:48.520 --> 31:50.520]  Одно определение вот примерно такое, через сертификаты,
[31:51.520 --> 31:56.520]  а второе определение через специальный вид машин.
[31:56.520 --> 31:59.520]  Да, значит, именно через недetermинированные машины.
[32:00.520 --> 32:01.520]  Вот.
[32:02.520 --> 32:04.520]  Вот здесь, на самом деле, тоже можно...
[32:05.520 --> 32:07.520]  Ну, и тогда, как бы, для этого специального вида машин
[32:08.520 --> 32:09.520]  определение было очень простое.
[32:10.520 --> 32:14.520]  NP — это класс языков, которые на этих недetermинированных машинах
[32:15.520 --> 32:16.520]  распознаются за полимерное время.
[32:17.520 --> 32:18.520]  Вот.
[32:19.520 --> 32:22.520]  Вот здесь, на самом деле, точно также есть специальный тип машин,
[32:23.520 --> 32:24.520]  которые называются альтернирующие.
[32:24.520 --> 32:25.520]  Альтернирующие машины.
[32:34.520 --> 32:38.520]  Значит, альтернирующие машины — да, это как бы класс...
[32:40.520 --> 32:46.520]  Ну, это некоторая модель, при которой...
[32:46.520 --> 32:50.520]  Пигма КП и пика П, значит, становятся...
[32:55.520 --> 32:56.520]  Значит, становятся...
[32:59.520 --> 33:00.520]  Вот.
[33:01.520 --> 33:02.520]  Вот.
[33:03.520 --> 33:04.520]  Вот.
[33:05.520 --> 33:06.520]  Вот.
[33:07.520 --> 33:08.520]  Вот.
[33:09.520 --> 33:10.520]  Вот.
[33:11.520 --> 33:12.520]  Вот.
[33:13.520 --> 33:14.520]  Вот.
[33:15.520 --> 33:17.520]  Классами языков.
[33:23.520 --> 33:27.520]  Классами языков распознаваемых
[33:32.520 --> 33:34.520]  за полимерное время.
[33:38.520 --> 33:40.520]  Ну, вот, на машинах.
[33:45.520 --> 33:47.520]  Специального вида.
[33:56.520 --> 33:57.520]  Вот.
[33:58.520 --> 34:01.520]  Ну, значит, вот эти вот машины, они выглядят похоже на недetermинированные,
[34:02.520 --> 34:05.520]  но еще дополнительное оснащение тут появляется.
[34:06.520 --> 34:07.520]  Да, то есть тут, во-первых...
[34:08.520 --> 34:10.520]  Значит, во-первых, получается, что функция перехода...
[34:10.520 --> 34:11.520]  Функция перехода...
[34:13.520 --> 34:14.520]  Функция перехода...
[34:15.520 --> 34:16.520]  Многозначно.
[34:18.520 --> 34:21.520]  И этим они похожи на недetermинированные машины.
[34:22.520 --> 34:23.520]  Вот.
[34:24.520 --> 34:25.520]  Но кроме того, у каждого состояния...
[34:26.520 --> 34:29.520]  Значит, состояния делятся на два типа.
[34:30.520 --> 34:31.520]  Значит, состояния...
[34:35.520 --> 34:36.520]  Делятся на...
[34:36.520 --> 34:37.520]  Сигма.
[34:40.520 --> 34:42.520]  Значит, на сигма состояния.
[34:43.520 --> 34:44.520]  И пи состояния.
[34:50.520 --> 34:52.520]  И это прямо изначально зашито.
[34:53.520 --> 34:54.520]  То есть изначально прямо про каждое...
[34:55.520 --> 34:57.520]  Не даже не про конфигурацию даже, а прямо про состояние.
[34:58.520 --> 35:00.520]  Множество q разбито на два класса.
[35:01.520 --> 35:02.520]  Сигма состояние и пи состояние.
[35:02.520 --> 35:03.520]  И дальше ответ...
[35:05.520 --> 35:06.520]  Получается таким.
[35:08.520 --> 35:09.520]  Да, значит, ответ...
[35:16.520 --> 35:17.520]  Подсчитывается...
[35:20.520 --> 35:21.520]  По конфигурации...
[35:25.520 --> 35:26.520]  Следующим образом.
[35:26.520 --> 35:28.520]  Если это конфигурация уже завершающая.
[35:30.520 --> 35:34.520]  Значит, если конфигурация уже дала ответ,
[35:36.520 --> 35:37.520]  значит, конфигурация содержит...
[35:38.520 --> 35:39.520]  Причём положительный ответ.
[35:40.520 --> 35:41.520]  Значит, конфигурация содержит qA.
[35:42.520 --> 35:43.520]  Ну, а то и значит принимающая.
[35:47.520 --> 35:49.520]  Значит, если содержит qR,
[35:50.520 --> 35:51.520]  то linea а lowers...
[35:51.520 --> 36:01.160]  Значит, если содержит QR, то отвергающее.
[36:01.160 --> 36:12.280]  Но дальше, если состояние, если конфигурация содержит,
[36:12.280 --> 36:17.020]  дальше рекурсивно, если конфигурация содержит
[36:17.020 --> 36:24.820]  сигма-состояние, вот, и один из переходов ведет
[36:24.820 --> 36:28.380]  принимающую конфигурацию, то вот это текущее тоже
[36:28.380 --> 36:29.380]  принимающее.
[36:29.380 --> 36:45.380]  Да, значит, один из переходов в принимающее состояние,
[36:45.380 --> 36:47.540]  но тогда текущая тоже будет принимающая.
[36:47.540 --> 36:58.700]  Ну, а если сигма-состояние и все переходы вытвергающие,
[36:58.700 --> 37:07.740]  так только принимающая конфигурация, то есть тут
[37:07.740 --> 37:10.580]  предполагается, предполагается, что у нас нет бесконечных
[37:10.820 --> 37:12.940]  вычислений, соответственно, у нас получает некоторое
[37:12.940 --> 37:35.420]  дерево, да, какое-то вот такое вот, ну и так далее,
[37:35.420 --> 37:36.420]  да.
[37:36.420 --> 37:40.220]  То есть на листах там написано принимающая и отвергающая,
[37:40.300 --> 37:43.260]  и дальше мы поднимаемся сверху вниз, вот, используйте
[37:43.260 --> 37:47.780]  правила, если у нас стоит сигма, стоит сигма и какая-то
[37:47.780 --> 37:51.660]  одна ветка переходит в принимающее, то тогда все это принимающее.
[37:51.660 --> 37:58.500]  Вот, а если P-состояние, если P-состояние и, соответственно,
[37:58.500 --> 38:09.660]  все переходы, все переходы в принимающее, то тогда получается
[38:09.660 --> 38:15.500]  принимающая, принимающая конфигурация.
[38:15.500 --> 38:23.660]  Ну, конечно, да, да, да, иначе отвергающая.
[38:23.660 --> 38:41.780]  Значит, иначе отвергающая, и там, и там, вот, ну и тогда
[38:41.780 --> 38:43.540]  если у нас действительно нет бесконечных ветвей,
[38:43.540 --> 38:47.380]  да, это все ветоучленения заканчиваются за конечное
[38:47.380 --> 38:48.380]  время.
[38:48.380 --> 38:52.940]  Ну, как нас учит Лема Кёнига, да, нужно, чтобы не просто
[38:52.940 --> 38:56.940]  вот каждый заканчивалось, да, была какая-то общая
[38:56.940 --> 39:01.340]  граница по времени, вот, но тогда получается, что
[39:01.340 --> 39:05.500]  мы, начиная с листьев, рекурсивно поймем в каждой конфигурации
[39:05.500 --> 39:08.260]  какой там ответ, а общий ответ, это будет ответ в
[39:08.260 --> 39:09.260]  начальной конфигурации.
[39:09.260 --> 39:26.260]  Общий ответ, это ответ в начальной конфигурации.
[39:26.260 --> 39:45.260]  Да, да, да, да, да, да, да, да, да, да, да, да, да, да, да,
[39:45.260 --> 39:54.260]  да, да, да, да, да, да, да, да, да, да, да, да, да, да, да,
[39:55.260 --> 39:59.380]  да, да, да, да, да, да.
[40:00.380 --> 40:09.380]  В частности, ФТНП получается, и вообще нетätомерные машины
[40:09.380 --> 40:10.380]  получаются.
[40:10.380 --> 40:14.100]  Если все соединения, это с Hani вот, тогда у нас
[40:14.100 --> 40:20.260]  получается только кванторисуществование, да, и любая единица поднимется
[40:20.260 --> 40:36.780]  наверх и в итоге будет единица так ну а дальше соответственно получается что
[40:36.780 --> 40:42.780]  можно определить классы значит тигма когда я тебя вот так не пишу в другом
[40:42.780 --> 40:49.380]  натип как np coin а так сильно капе значит это класс языков
[40:49.380 --> 41:11.380]  класс языков распознаваемых альтернирующими машинами альтернирующими машинами тюринга у которых
[41:11.380 --> 41:21.580]  начальное состояние это сигма состояние да то есть начале мы начинаем фигмы у которых
[41:21.580 --> 41:33.140]  значит начальное состояние это сигма состояние вот ну и кроме того на каждой ветви число
[41:33.140 --> 41:40.420]  смен типов состояния но число смен получается не больше чем к-1 до число блоков одного
[41:40.420 --> 41:53.180]  типа не больше чем к-1 на каждой ветре число смен
[41:53.180 --> 42:10.980]  типов состояния строго меньше чем к у вас соответственно число блоков одинаковых
[42:10.980 --> 42:17.180]  состояний получается не больше чем к но вот здесь вот на этой картинке вот уже как минимум сигма
[42:17.180 --> 42:26.460]  3 потому что сигма потом пи потом сигма на это уже как минимум сигма 3 но соответственно
[42:26.460 --> 42:41.660]  пика тп это аналогично вот но соответственно начальное состояние это пи состояние
[42:41.660 --> 42:50.340]  но и теория такая что это тоже самое что у нас было
[42:50.340 --> 43:01.820]  значит некоторые книги просто считают синонимами но я предпочитаю вот такой взгляд что это не просто
[43:01.820 --> 43:10.460]  синонима это два разных определения одного и того же значит сигма катая пальномиальная тоже
[43:10.460 --> 43:24.020]  что сигма капы а соответственно пи катая пальномиальная это пика по я вот
[43:40.460 --> 43:49.160]  но в самом деле это стихи один который проще понять чем формально доказать вот
[43:49.160 --> 43:54.740]  знаете постараюсь но поверх понятно что это одно и другое совершенно одинаково доказывается
[43:54.740 --> 44:01.300]  так что можно что-нибудь одно доказать данный пример про сигму вот но идея такая что смотрите
[44:01.300 --> 44:08.100]  в одну сторону там право налево да пусть как альтернирующую машину записать через там
[44:08.100 --> 44:14.380]  по линейным предикат в общем в целом это похоже на два два определения нп да идея
[44:14.380 --> 44:20.900]  точно такая же но в одну сторону да пусть у нас так альтернирующая машина тогда мы прямо такую
[44:20.900 --> 44:25.860]  там формулу напишем да что существует ветвь вот здесь вот что для любой ветви вот здесь вот
[44:25.860 --> 44:34.060]  существует ветвь вот здесь вот до 4 и так далее да что
[44:34.060 --> 44:44.700]  но тут на самом деле дай когда тут разные типы то это не совсем так прям как так легко как прям
[44:44.700 --> 44:52.820]  как я сказал на то что тут существует вот такая и существует вот такая что для любой там и там
[44:52.820 --> 44:58.580]  и существует вот такая же любой вот это и вот этой их вообще может быть много но в общем надо
[44:58.580 --> 45:07.980]  сказать так что существует как бы ветвь но вот вы пусть нас наверху наверху сигма состояние тогда
[45:07.980 --> 45:17.580]  говорится так что существует хорошая ветвь ну которая будет идти до первого попавшегося пи
[45:18.220 --> 45:24.100]  да она будет либо вот такая вот ветка длины 1 либо вот такая длинна 2 либо там вот такая
[45:24.100 --> 45:33.420]  Wähtype- Beta и так далее да существует ветка который можем идти пока awaiting состояние так что
[45:33.420 --> 45:40.060]  для любой ветви который дальше usb состояние идет она как раз может быть разными게요 да то есть
[45:40.060 --> 45:45.580]  напрямую идет налево тőтут дальше еще что-то если она идет направо то даже если там что-то есть то
[45:45.580 --> 45:49.580]  то мы это не будем читать, а дальше уже перейдем дальше.
[45:49.580 --> 45:54.580]  То есть существует ветка до P-состояния, так что для любой ветки до Сигма-состояния
[45:54.580 --> 45:58.580]  существует ветка до P-состояния и так далее.
[45:58.580 --> 46:04.580]  Такая, что в итоге это все приходит к принимающему состоянию.
[46:04.580 --> 46:07.580]  То есть опять же можно это воспитать как игру.
[46:07.580 --> 46:12.580]  Есть вот такое дерево, и два игрока двигают фишку.
[46:12.580 --> 46:17.580]  Первый двигает пока может по Сиг м состояниям, но созвестно как хочет.
[46:17.580 --> 46:20.580]  Да, может сразу сюда сдвинуть, может сюда, потом сюда,
[46:20.580 --> 46:24.580]  может сюда, потом сюда, потом там и еще куда нибудь.
[46:26.580 --> 46:30.580]  Оот потом второй как только получил, он тоже может как угодно подвинуть,
[46:30.580 --> 46:34.580]  может подвинуть сразу сюда, может сюда там, потом еще куда-то.
[46:34.580 --> 46:38.580]  Вот так далее, потом снова первый двигает, ну и так далее.
[46:38.580 --> 46:41.580]  Ну и так далее. Соответственно, вот в этой игре должен выиграть первый.
[46:41.580 --> 46:45.580]  Да, он в итоге должен привести к принимающему состоянию.
[46:49.580 --> 46:54.580]  Ну, поэтому получается, что sigma kp вложено в sigma kt пленомиально.
[46:54.580 --> 46:57.580]  Ну, не знаю, как, примерно понятно?
[46:57.580 --> 47:02.580]  Ну, вроде да. Ну, формально там какие-то формы надо писать.
[47:02.580 --> 47:05.580]  Идея именно в таком чередовании.
[47:05.580 --> 47:11.580]  Ну и дальше, поскольку тут на каждой ветве не больше, там меньше, чем k смен,
[47:11.580 --> 47:14.580]  то и кванторов получится не больше, чем k.
[47:14.580 --> 47:19.580]  То есть смен кванторов будет меньше, чем k, а смен кванторов не больше, чем k.
[47:19.580 --> 47:23.580]  И поэтому тут именно то же самое k получится.
[47:23.580 --> 47:26.580]  Ну а в другую сторону еще проще.
[47:26.580 --> 47:32.580]  В другую сторону как раз как бы сначала мы при помощи sigma состояния выберем x1,
[47:32.580 --> 47:35.580]  потом при помощи пис состояния выберем x2,
[47:35.580 --> 47:39.580]  потом при помощи sigma состояния выберем x3 и так далее.
[47:39.580 --> 47:43.580]  Там уже такое равномерное дерево получится.
[47:43.580 --> 47:51.580]  Ну, будет картинка примерно такая же, как была для NP.
[47:51.580 --> 47:54.580]  Значит, например, сначала вот так вот.
[47:54.580 --> 47:57.580]  А потом вот так вот.
[48:00.580 --> 48:03.580]  Вот так вот.
[48:07.580 --> 48:10.580]  А потом уже все просто идет вот так вот.
[48:10.580 --> 48:12.580]  Регулярно.
[48:12.580 --> 48:16.580]  Да, тут уже какие-то ответы получаются.
[48:16.580 --> 48:20.580]  Вот это я для sigma2 нарисовал.
[48:21.580 --> 48:24.580]  Как работает альтернирующая машина.
[48:24.580 --> 48:30.580]  Сначала мы sigma состояние выбираем y1, потом в пис состояние выбираем y2.
[48:30.580 --> 48:37.580]  А потом уже со всем выбранным начинаем производить детерминированные вычисления.
[48:41.580 --> 48:43.580]  Вот.
[48:43.580 --> 48:46.580]  Так, ну ничего, понятно.
[48:46.580 --> 48:48.580]  Так, хорошо.
[48:48.580 --> 48:51.580]  Значит, если это понятно, тогда...
[48:51.580 --> 48:54.580]  Но вот еще я пока подвешу вопрос.
[48:54.580 --> 48:58.580]  Что будет, если мы вообще не будем ограничивать число смен кванторов?
[48:58.580 --> 49:02.580]  Что у нас будет просто дерево полинамеральной глубины,
[49:02.580 --> 49:06.580]  но смен может быть сколько угодно.
[49:06.580 --> 49:10.580]  Вот, там тоже некоторый класс получится, но мы его пока не проходили.
[49:10.580 --> 49:12.580]  Так что этот вопрос я...
[49:12.580 --> 49:18.580]  А пх точно так же просто будет объедением всех вот этих вот...
[49:18.580 --> 49:24.580]  То есть можно сказать, что пх это такая же штука,
[49:24.580 --> 49:28.580]  где число кванторов любое фиксированное,
[49:28.580 --> 49:33.580]  ну, фиксированное, то есть это такое же самое,
[49:33.580 --> 49:37.580]  что и в холмах, в холмах, в холмах.
[49:37.580 --> 49:40.580]  Любое фиксированное,
[49:40.580 --> 49:44.580]  ну, фиксированное, то есть независящие от размера входа,
[49:44.580 --> 49:46.580]  но при этом любое.
[49:46.580 --> 49:48.580]  Вот тогда это пх получится.
[49:48.580 --> 49:51.580]  А если оно еще и с размером входа может увеличиваться,
[49:51.580 --> 49:54.580]  тогда будет другой класс.
[49:54.580 --> 49:58.580]  Ну ладно, я уже анонсирую, это будет класс PSPACE,
[49:58.580 --> 50:02.580]  то есть где полинамеральная память.
[50:02.580 --> 50:04.580]  Вот, но почему именно он?
[50:11.580 --> 50:15.580]  Говорим попозже, когда будем про PSPACE говорить.
[50:17.580 --> 50:21.580]  PSPACE еще больше разных способов взглянуть.
[50:22.580 --> 50:24.580]  Этот класс.
[50:28.580 --> 50:30.580]  Так.
[50:32.580 --> 50:35.580]  Ну, на сегодня последний тему, который я хочу обсудить,
[50:35.580 --> 50:38.580]  и это вычисление с аракулами.
[50:42.580 --> 50:46.580]  Четыре, наверное, мы немножко перекинемся на следующий раз
[50:46.580 --> 50:49.580]  с вычисления с аракулами.
[50:56.580 --> 50:59.580]  Значит, ну а ракулы,
[51:00.580 --> 51:03.580]  ну вообще, что такое аракул?
[51:03.580 --> 51:09.580]  Ну, это такое мысленное устройство подсоединенное к компьютеру,
[51:09.580 --> 51:15.580]  так что на ход этому устройству можно подать любой запрос,
[51:15.580 --> 51:20.580]  и это устройство выдаст какой-то ответ на этот запрос.
[51:22.580 --> 51:28.580]  При этом мы уверены, что ответы в этом самом аракуле
[51:28.580 --> 51:30.580]  записаны заранее.
[51:30.580 --> 51:32.580]  То есть в частности то, что он нам ответит,
[51:32.580 --> 51:35.580]  не зависит от истории общения с ним.
[51:41.580 --> 51:44.580]  В частности, если его спросить еще раз то же самое,
[51:44.580 --> 51:47.580]  то он ответит тоже еще раз то же самое.
[51:47.580 --> 51:49.580]  Вот.
[51:53.580 --> 51:56.580]  Так, ну вот, значит, вычисления с аракулами.
[51:58.580 --> 52:01.580]  Так, ну пусть у нас,
[52:04.580 --> 52:09.580]  пусть у нас, а это просто какое-то множество,
[52:09.580 --> 52:12.580]  просто какое-то множество,
[52:16.580 --> 52:18.580]  просто какое-то множество слов.
[52:19.580 --> 52:21.580]  Вот, тогда П,
[52:22.580 --> 52:24.580]  аракулом А,
[52:25.580 --> 52:28.580]  значит, это класс языков,
[52:30.580 --> 52:32.580]  значит, класс языков,
[52:32.580 --> 52:34.580]  значит, распознаваемых
[52:37.580 --> 52:39.580]  за полимерное время
[52:43.580 --> 52:45.580]  с обращениями,
[52:46.580 --> 52:48.580]  с обращениями
[52:50.580 --> 52:52.580]  к А.
[52:53.580 --> 52:55.580]  Ну а как эти обращения
[52:55.580 --> 52:57.580]  к А устроены?
[52:57.580 --> 52:59.580]  Ну, может быть,
[52:59.580 --> 53:02.580]  можно моделировать через ленту,
[53:03.580 --> 53:06.580]  то есть, например, есть специальная аракульная лента,
[53:06.580 --> 53:09.580]  и машина на ней что-то пишет,
[53:10.580 --> 53:13.580]  потом приходит специальное состояние запроса,
[53:14.580 --> 53:16.580]  и дальше, соответственно,
[53:16.580 --> 53:18.580]  она как бы раздваивается,
[53:18.580 --> 53:21.580]  и аракул как бы ее сам направляет в следующее состояние,
[53:21.580 --> 53:23.580]  и она понимает, какой был ответ,
[53:23.580 --> 53:25.580]  либо да, либо нет.
[53:25.580 --> 53:27.580]  То есть, скажем, машина
[53:31.580 --> 53:33.580]  записывает запрос,
[53:36.580 --> 53:38.580]  значит, машина записывает запрос
[53:39.580 --> 53:41.580]  на специальной ленте
[53:48.580 --> 53:50.580]  и получает
[53:50.580 --> 53:52.580]  ответ
[53:54.580 --> 53:56.580]  о его
[53:56.580 --> 53:58.580]  принадлежности
[53:59.580 --> 54:01.580]  к А
[54:02.580 --> 54:04.580]  за один шаг.
[54:12.580 --> 54:14.580]  Ну, соответственно, можно
[54:16.580 --> 54:18.580]  изменить
[54:18.580 --> 54:20.580]  ну, соответственно, можно
[54:21.580 --> 54:24.580]  точно так же с аракулом любой другой класс рассмотреть.
[54:26.580 --> 54:28.580]  Давай скажем, NP
[54:28.580 --> 54:30.580]  с аракулом А это аналогично.
[54:34.580 --> 54:36.580]  Аналогично, да, значит, только
[54:37.580 --> 54:39.580]  ну, опять, может быть, два определения
[54:39.580 --> 54:41.580]  через генетерминированную машину
[54:41.580 --> 54:43.580]  или через верификатор,
[54:43.580 --> 54:45.580]  ну, например, через верификатор
[54:45.580 --> 54:47.580]  это как-то более понятно,
[54:47.580 --> 54:49.580]  потому что тут верификатор
[54:53.580 --> 54:55.580]  верификатор обращается
[54:55.580 --> 54:57.580]  к А.
[55:01.580 --> 55:03.580]  Так, значит,
[55:03.580 --> 55:05.580]  ну, я напомню, что мы
[55:05.580 --> 55:07.580]  уже встречали теория Мэмбейкера
[55:07.580 --> 55:09.580]  Джила Соловея.
[55:09.580 --> 55:11.580]  Я бы, наверное, даже сейчас доказал
[55:11.580 --> 55:13.580]  просто.
[55:17.580 --> 55:19.580]  Значит, теория Мэмбейкера
[55:21.580 --> 55:23.580]  Джила
[55:25.580 --> 55:27.580]  Соловея
[55:27.580 --> 55:29.580]  заключается в том, что
[55:29.580 --> 55:31.580]  существует один аракул А,
[55:31.580 --> 55:33.580]  при котором P равняется
[55:33.580 --> 55:35.580]  NP,
[55:35.580 --> 55:37.580]  да, существует другой
[55:37.580 --> 55:39.580]  аракул B,
[55:39.580 --> 55:41.580]  значит, при котором
[55:41.580 --> 55:43.580]  P, заведомо, не равняется
[55:43.580 --> 55:45.580]  NP.
[55:45.580 --> 55:47.580]  И вопрос только в том,
[55:47.580 --> 55:49.580]  в каком из этих классов относится пустой аракул,
[55:49.580 --> 55:51.580]  ну, или там,
[55:51.580 --> 55:53.580]  вычислимый за
[55:53.580 --> 55:55.580]  пандемиальное время. Значит, ясно,
[55:55.580 --> 55:57.580]  что аракулы могут быть совершенно разными
[55:57.580 --> 55:59.580]  по своей полезности,
[55:59.580 --> 56:01.580]  но если аракул пустой, да, всё время говорит нет,
[56:01.580 --> 56:03.580]  тогда он вообще не нужен.
[56:03.580 --> 56:05.580]  Но если он вычислимый за пандемиальное время,
[56:05.580 --> 56:07.580]  тогда он тоже не нужен, да,
[56:07.580 --> 56:09.580]  тогда все его ответы можно вычислить
[56:09.580 --> 56:11.580]  вместо запросов.
[56:11.580 --> 56:13.580]  А может быть так, что он вообще
[56:13.580 --> 56:17.580]  Да, тогда он, конечно, очень полезен, он сильно расширяет.
[56:17.580 --> 56:20.580]  Например, есть известный оракул ноль-стрих, который
[56:20.580 --> 56:21.580]  решает проблемы остановки.
[56:21.580 --> 56:26.580]  Да, если вы решаете проблемы остановки, то, соответственно,
[56:26.580 --> 56:30.580]  вы много чего другого сможете решить.
[56:31.580 --> 56:35.580]  Вот.
[56:40.580 --> 56:44.580]  Ну вот, соответственно, вот получается, что
[56:44.580 --> 56:48.580]  есть такие оракулы, которые
[56:48.580 --> 56:52.580]  увеличивают P и NP одинаково, а есть те, которые
[56:52.580 --> 56:56.580]  заведомо NP увеличивают сильнее.
[56:56.580 --> 56:59.580]  Вот. На самом деле, вот этот вот результат, он такой
[56:59.580 --> 57:03.580]  типичный для теории 80-х годов.
[57:03.580 --> 57:06.580]  Да, даже хотя он сам еще в 70-х был получен.
[57:06.580 --> 57:10.580]  Да, ну вот, это вот такая типичная структурная теория
[57:10.580 --> 57:14.580]  сложности, когда мы изучаем какие-то классы
[57:14.580 --> 57:18.580]  и строим оракулы, которые как-то отделяют друг от друга.
[57:26.580 --> 57:30.580]  Вот, а с частности, например, есть более
[57:30.580 --> 57:34.580]  сильный аналог этой теоремы, что, на самом деле, для любого уровня
[57:34.580 --> 57:38.580]  катова есть такой оракул, что полинарные рархи коллапсируют
[57:38.580 --> 57:42.580]  ровно катом уровня. Знаешь, что до катом уровня все классы
[57:42.580 --> 57:46.580]  разные, а начиная с катом, все одинаково, с этим оракулом.
[57:50.580 --> 57:54.580]  Вот. Ну, это, в общем-то, вот, это
[57:54.580 --> 57:58.580]  вот. Ну, и там куча других есть
[57:58.580 --> 58:02.580]  разных результатов. Вот, а еще
[58:02.580 --> 58:06.580]  есть такая
[58:14.580 --> 58:18.580]  значит, еще, может, вот как писать,
[58:18.580 --> 58:22.580]  значит, можно показать или строить не отдельный язык, а
[58:22.580 --> 58:26.580]  раз. То есть, например,
[58:26.580 --> 58:30.580]  может быть, скажем, пэа
[58:30.580 --> 58:34.580]  с оракулом n пэа. Значит,
[58:34.580 --> 58:38.580]  это означает
[58:38.580 --> 58:42.580]  то
[58:42.580 --> 58:46.580]  можно
[58:46.580 --> 58:50.580]  делать запросы
[58:52.580 --> 58:56.580]  к разным
[58:56.580 --> 59:00.580]  n пэа языкам.
[59:04.580 --> 59:08.580]  Ну, например, у нас n пэа язык же определяется
[59:08.580 --> 59:12.580]  там своей программой. Да, может считать, что мы написали программу,
[59:12.580 --> 59:16.580]  написали текст запроса и спрашиваем,
[59:16.580 --> 59:20.580]  лежит ли такой x в языке
[59:20.580 --> 59:24.580]  задан такой программой.
[59:24.580 --> 59:28.580]  Вот. Ну, ясно, что на самом деле вовсе не обязательно так сложно делать, а можно все запросы делать
[59:28.580 --> 59:32.580]  к одному n пэа полному языку.
[59:32.580 --> 59:36.580]  Значит, или к одному
[59:36.580 --> 59:40.580]  значит, к одному n пэа полному.
[59:40.580 --> 59:44.580]  Значит, если мы запрашиваем один n пэа полный язык, то это получается
[59:44.580 --> 59:48.580]  в общем то же самое.
[59:48.580 --> 59:52.580]  Вот. Ну, вот. И есть еще
[59:52.580 --> 59:56.580]  такая вот теорема о структуре ph.
[59:56.580 --> 01:00:00.580]  Теорема о структуре
[01:00:00.580 --> 01:00:04.580]  ph.
[01:00:04.580 --> 01:00:08.580]  Значит, смотрите,
[01:00:08.580 --> 01:00:12.580]  sigma k плюс первая полинамиальная
[01:00:12.580 --> 01:00:16.580]  это будет n пэ
[01:00:16.580 --> 01:00:20.580]  sigma k полинамиальная. Ну, и это самое то же самое, что
[01:00:20.580 --> 01:00:24.580]  n пэ с оракулом pi k полинамиальная, потому что как раз
[01:00:24.580 --> 01:00:28.580]  ответ оракула можно переворачивать.
[01:00:28.580 --> 01:00:32.580]  Да, то есть, если оракул отвечает там про sigma k,
[01:00:32.580 --> 01:00:36.580]  то можно его ответ перевернуть, будет ответ про pi k.
[01:00:36.580 --> 01:00:40.580]  Поэтому тут как раз мне не важно кого запрашивать.
[01:00:40.580 --> 01:00:44.580]  Ну, а соответственно, pi k плюс первая
[01:00:44.580 --> 01:00:48.580]  полинамиальная это будет ko n пэ
[01:00:48.580 --> 01:00:52.580]  с оракулом.
[01:00:52.580 --> 01:00:56.580]  Ну, тут то же самое. Да, можно писать sigma kt.
[01:00:56.580 --> 01:01:00.580]  Можно писать pi kt.
[01:01:04.580 --> 01:01:08.580]  Вот. И на самом деле тут получается, дайте тут есть n p,
[01:01:08.580 --> 01:01:12.580]  есть ko n p. Есть на самом деле еще
[01:01:12.580 --> 01:01:16.580]  одна иерархия, еще одна как бы параллельная иерархия,
[01:01:16.580 --> 01:01:20.580]  которая именно вот здесь вот возникает, ее не так-то просто иначе определить.
[01:01:20.580 --> 01:01:24.580]  Да, они называются дельта. Да, еще бывает
[01:01:24.580 --> 01:01:28.580]  дельта k плюс первая полинамиальная, которая есть
[01:01:28.580 --> 01:01:32.580]  p с оракулом
[01:01:32.580 --> 01:01:36.580]  sigma kt и то же самое, что p с оракулом pi kt. То есть,
[01:01:36.580 --> 01:01:40.580]  вот это вот p с оракулом n p это delta 2.
[01:01:40.580 --> 01:01:44.580]  Вот. Ну, дельты мы почти не будем изучать.
[01:01:44.580 --> 01:01:48.580]  Вот. А вот эти вот теоремки докажем.
[01:01:48.580 --> 01:01:52.580]  Но, правда, видим уже в следующий раз, сейчас я только начну.
[01:01:52.580 --> 01:01:56.580]  Дайте я, наверное, вот это вот самое простое.
[01:01:56.580 --> 01:02:00.580]  Дальше самое простое. Или уж какие-нибудь вопросы есть
[01:02:00.580 --> 01:02:04.580]  по формулировкам.
[01:02:10.580 --> 01:02:14.580]  Ну, на самом деле тут простое. Дальше простое это первое утверждение
[01:02:14.580 --> 01:02:18.580]  из теории Бейкера Джилла-Салавея и одно из направлений
[01:02:18.580 --> 01:02:22.580]  вложений вот этих вот. То есть, на самом деле, здесь
[01:02:22.580 --> 01:02:26.580]  вот то, что левое вложено вправо, это очень легко, потому что у нас такая цепочка
[01:02:26.580 --> 01:02:30.580]  из кванторов. Если мы внешний квантор уберем, то у нас получится цепочка
[01:02:30.580 --> 01:02:34.580]  на единицу меньше. И можно про эту цепочку на единицу меньше спрашивать
[01:02:34.580 --> 01:02:38.580]  у оракула. Вот. А последний квантор, точнее
[01:02:38.580 --> 01:02:42.580]  первый, значит первый квантор, который разводит либо NP, либо CoNP.
[01:02:42.580 --> 01:02:46.580]  Вот. Поэтому левое вправое понятно, почему вложено.
[01:02:46.580 --> 01:02:50.580]  Вот. А правое влевое сложнее, потому что
[01:02:50.580 --> 01:02:54.580]  мы можем про много разных...
[01:02:54.580 --> 01:02:58.580]  Мы можем делать много разных запросов. Там мы как бы один запрос сделали.
[01:02:58.580 --> 01:03:02.580]  Вот. А тут мы много разных запросов сделали. Нужно их как-то объединить, все кванторы,
[01:03:02.580 --> 01:03:06.580]  которые там получаются, в одну вещь. Да. Поэтому в другую сторону нетривиально.
[01:03:06.580 --> 01:03:10.580]  Так. Ну и почему...
[01:03:10.580 --> 01:03:14.580]  Почему есть оракул,
[01:03:14.580 --> 01:03:18.580]  при котором P равно NP?
[01:03:18.580 --> 01:03:22.580]  Ну это будет оракул, значит это будет оракул, при котором
[01:03:22.580 --> 01:03:26.580]  можно делать экспоненциальные вычисления.
[01:03:26.580 --> 01:03:30.580]  Значит, это A
[01:03:30.580 --> 01:03:34.580]  будет называться Exponential Computation.
[01:03:34.580 --> 01:03:38.580]  Так. И это будет следующее.
[01:03:38.580 --> 01:03:42.580]  Значит, тут будет пара из m,
[01:03:42.580 --> 01:03:46.580]  x и какого-то числа
[01:03:46.580 --> 01:03:50.580]  t в унархной записи. Да. Так что
[01:03:50.580 --> 01:03:54.580]  m от x равно единице
[01:03:54.580 --> 01:03:58.580]  за меньше либо ну чем 2 в степени t шагов.
[01:03:58.580 --> 01:04:02.580]  Вот.
[01:04:02.580 --> 01:04:06.580]  Ну или можно даже считать, что здесь просто число шагов
[01:04:06.580 --> 01:04:10.580]  задано в двоичной записи. Да, и вопрос
[01:04:10.580 --> 01:04:14.580]  верный, что m от x вырастает единицу за вот такое число шагов.
[01:04:14.580 --> 01:04:18.580]  Так.
[01:04:18.580 --> 01:04:22.580]  Ну и тогда получается
[01:04:22.580 --> 01:04:26.580]  следующая цепочка.
[01:04:26.580 --> 01:04:30.580]  Значит, смотрите.
[01:04:30.580 --> 01:04:34.580]  Берем класс exp.
[01:04:34.580 --> 01:04:38.580]  Exp, то есть то, что решается за экспоненциальное время.
[01:04:38.580 --> 01:04:42.580]  Ну и очевидно, что он вложен в P вот с этим оракулом.
[01:04:42.580 --> 01:04:46.580]  Да, потому что если нам нужно
[01:04:46.580 --> 01:04:50.580]  вычислить, да, про какой-то x лежит он в языке или нет,
[01:04:50.580 --> 01:04:54.580]  то этот язык расположен на какой-то машине m, и мы ровно про эту машину
[01:04:54.580 --> 01:04:58.580]  на этом xе за такое время, за которое он вычисляется, спрашиваем
[01:04:58.580 --> 01:05:02.580]  будет единица или нет. И это будет ровно то, что нам нужно.
[01:05:02.580 --> 01:05:06.580]  То есть одним запросом правильно построен к оракулу, все решается.
[01:05:06.580 --> 01:05:10.580]  Вот. Значит, дальше P
[01:05:10.580 --> 01:05:14.580]  с этим самым exp.com вложено в n-P
[01:05:14.580 --> 01:05:18.580]  с оракулом exp.com. Это для любого оракула,
[01:05:18.580 --> 01:05:22.580]  так на самом деле, да, потому что всегда детерминированное
[01:05:22.580 --> 01:05:26.580]  это частный случай не терминировано, и с оракулом тоже. Да, это так с любым оракулом
[01:05:26.580 --> 01:05:30.580]  будет. Ну вот, а n-P
[01:05:30.580 --> 01:05:34.580]  с exp.com вложено в exp.
[01:05:34.580 --> 01:05:38.580]  Ну и вот это вот тут единственный нетривиальный переход.
[01:05:38.580 --> 01:05:42.580]  Да, значит, это верно, потому что
[01:05:42.580 --> 01:05:46.580]  экспоненциального времени
[01:05:46.580 --> 01:05:50.580]  экспоненциального времени
[01:05:50.580 --> 01:05:54.580]  хватит.
[01:05:54.580 --> 01:05:58.580]  И для
[01:05:58.580 --> 01:06:02.580]  вычисления ответов
[01:06:02.580 --> 01:06:06.580]  от этого самого exp.com
[01:06:06.580 --> 01:06:10.580]  ну потому что нам достаточно просто запустить
[01:06:10.580 --> 01:06:14.580]  машину на такое экспоненциальное время и посмотреть, будет единица или нет.
[01:06:14.580 --> 01:06:18.580]  Да, поэтому ясно, что оракул, который
[01:06:18.580 --> 01:06:22.580]  делает экспоненциальные вычисления, можно как раз вычислить за экспоненциальное время.
[01:06:22.580 --> 01:06:26.580]  Вот, соответственно, хватит и для вычисления ответов
[01:06:26.580 --> 01:06:30.580]  оракула, и для перебора
[01:06:30.580 --> 01:06:34.580]  и для перебора
[01:06:38.580 --> 01:06:42.580]  сертификатов.
[01:06:48.580 --> 01:06:52.580]  Да, потому что y все тоже будут поленали длины
[01:06:52.580 --> 01:06:56.580]  и можно их все перебрать за экспоненциальное
[01:06:56.580 --> 01:07:00.580]  вариантов. И для каждого конкретного y будет экспоненциальное время
[01:07:00.580 --> 01:07:04.580]  на вычисление ответов, ну а произведение экспонентов
[01:07:04.580 --> 01:07:08.580]  тоже экспонента, поэтому общий время будет экспоненциальным.
[01:07:08.580 --> 01:07:12.580]  Ну вот, а раз тут то, что слева и то, что справа, это одно и то же, значит, здесь все одинаково.
[01:07:12.580 --> 01:07:16.580]  Ну и в том числе средние два тоже.
[01:07:16.580 --> 01:07:20.580]  Что нам и требовалось.
[01:07:20.580 --> 01:07:24.580]  Так, ну ладно, значит, тогда в следующий раз докажем
[01:07:24.580 --> 01:07:28.580]  вторую часть теоремы вот этой, сложное направление вот в этой теореме,
[01:07:28.580 --> 01:07:32.580]  а потом, видимо, будем как раз к PSP сдвигаться.
[01:07:32.580 --> 01:07:36.580]  Поговорим, что будет, если тут число смен кванторов не ограничено.
[01:07:36.580 --> 01:07:40.580]  И вот какие-нибудь вопросы.
[01:07:46.580 --> 01:07:50.580]  Ну ладно, тогда спасибо.
