[00:00.000 --> 00:19.080]  У нас 11 лекция, и в основном мы будем говорить про сумму
[00:19.080 --> 00:23.160]  Минковского, но также про некоторые другие алгоритмы.
[00:23.160 --> 00:29.400]  Начнем в частности с другого алгоритма, но главная тема
[00:29.400 --> 00:37.000]  будет суммой Минковского, значит первый алгоритм
[00:37.000 --> 00:41.640]  будет такой, первый алгоритм позволит нам найти две
[00:41.640 --> 00:44.680]  самоудаленные точки в данном множестве точек, значит
[00:44.680 --> 00:51.960]  есть множество с, есть с множество точек, мы хотим
[00:51.960 --> 00:56.600]  найти максимум расстояния между любыми двумя из них,
[00:56.600 --> 01:02.720]  максимум расстояния между п и q, где п и q это произвольные
[01:02.720 --> 01:03.720]  точки с.
[01:03.720 --> 01:06.720]  То есть две самые далекие точки с данного множества.
[01:06.720 --> 01:11.640]  Вот, ну там, разумеется, можно перебрать все пары
[01:11.640 --> 01:16.360]  за n в квадрате, но это не интересно, мы сделаем алгоритм
[01:16.360 --> 01:17.360]  за n лога.
[01:17.360 --> 01:20.360]  Значит первое замечание, которое можно сделать, чтобы
[01:20.360 --> 01:23.760]  решить эту задачу, это понять, что на самом деле нам достаточно
[01:23.760 --> 01:27.600]  в качестве п и q рассматривать только вершины выпуклополочки,
[01:27.600 --> 01:33.800]  то есть максимум достигается на вершинах выпуклополочки,
[01:33.800 --> 01:39.680]  множество с.
[01:39.680 --> 01:48.240]  То есть это легко понять, если это не так и мы нашли
[01:48.240 --> 01:52.720]  какое-то расстояние между двумя точками по и q, то скажем
[01:52.720 --> 01:55.600]  мы можем просто этот отрезок продлить до тех пор, пока
[01:55.600 --> 01:58.000]  он не пересечется с границы выпуклополочки.
[01:58.000 --> 02:01.280]  Ну вот как-нибудь так, например, вот здесь пересечется.
[02:01.280 --> 02:03.880]  И тогда либо мы уже автоматически попали в вершину и соответственно
[02:03.880 --> 02:08.400]  мы получили какой-то больший отрезок, то есть п мы оставляем,
[02:08.400 --> 02:10.800]  а вторую точку меняем, так что у меня увеличилось
[02:10.800 --> 02:13.920]  расстояние, значит искомый отрезок не максимальный.
[02:13.920 --> 02:16.000]  Значит если мы попали в вершину, все очевидно.
[02:16.000 --> 02:19.680]  Если же мы попали на отрезок, то я утверждаю, что можно
[02:19.680 --> 02:22.000]  обязательно смещаться либо вверх, либо вниз по этому
[02:22.000 --> 02:24.600]  отрезку так, чтобы расстояние обязательно увеличилось,
[02:24.600 --> 02:25.600]  ну или по крайней мере не уменьшалось.
[02:25.600 --> 02:33.600]  Потому что, ну значит, по сути мне интересно изучить
[02:33.600 --> 02:37.480]  функцию расстояния от точки какой-то p до точки вот
[02:37.480 --> 02:40.240]  этого вот отрезка, до точек на стороне.
[02:40.240 --> 02:42.560]  Ну понятное дело, что если мы из p, скажем, опустили
[02:42.560 --> 02:47.640]  бы перпендикулярно эту сторону, то у меня было бы минимально
[02:47.640 --> 02:49.880]  возможно расстояние, а дальше вот в эти две стороны
[02:49.960 --> 02:52.440]  вверх и вниз, расстояние будет только расти, соответственно
[02:52.440 --> 02:55.880]  здесь будет гипотенуза прямоугольного треугольника
[02:55.880 --> 02:59.960]  со все большим вот этим вот углом, поэтому гипотенуза
[02:59.960 --> 03:00.960]  будет расти.
[03:00.960 --> 03:02.680]  Ну и здесь тоже самое, все синетричное, гипотенуза
[03:02.680 --> 03:04.600]  будет тем больше, тем больше угол, то есть чем дальше
[03:04.600 --> 03:07.320]  точка удаляется от основания перпендикуляра.
[03:07.320 --> 03:10.200]  Значит точно так же и здесь, если бы мы опустили
[03:10.200 --> 03:14.160]  p на продолжение стороны, то есть на прямую содержащую
[03:14.160 --> 03:18.360]  нашу сторону, то движение в любую сторону от этой
[03:18.360 --> 03:22.240]  точки мне будет увеличивать расстояние, значит то же
[03:22.240 --> 03:25.720]  самое здесь, если мы продлили отрезок q и пересекли сторону
[03:25.720 --> 03:28.520]  в какой-то точке r, то обязательно движение в одну из сторон
[03:28.520 --> 03:31.880]  нам точно будет увеличивать расстояние, поэтому вместо
[03:31.880 --> 03:34.680]  q можно будет взять вот эту вот вершинку, расстояние
[03:34.680 --> 03:35.680]  только увеличится.
[03:35.680 --> 03:38.760]  Значит то же самое с p, и получается, что в качестве
[03:38.760 --> 03:41.240]  обеих вершин q можно брать только вершиновую коробочку.
[03:42.240 --> 03:48.240]  Давайте что-нибудь напишем, иначе отрезок можно продлить
[03:48.240 --> 04:03.120]  до пересечения со стороной коробочки, ну а дальше как
[04:03.120 --> 04:05.600]  я сказал подвинуть в одну из двух сторон, чтобы увеличить
[04:05.600 --> 04:06.600]  расстояние.
[04:06.600 --> 04:09.720]  Все, понимаем, что нам достаточно рассматривать вершины новой
[04:09.720 --> 04:11.880]  коробочки, все внутренние нас не интересуют.
[04:11.880 --> 04:15.200]  Значит благо у нас уже есть алгоритм построения
[04:15.200 --> 04:20.320]  в коробочке за n log n, мы его делали в прошлый раз несколько
[04:20.320 --> 04:24.320]  всяких, тогда первый наш шаг это за n log n построить
[04:24.320 --> 04:32.960]  в коробочку, встроим, конвекс от s, ну где n это как всегда
[04:32.960 --> 04:39.680]  число точек less, а дальше, ну по сути, что такое максимально
[04:39.680 --> 04:42.680]  расстояние, это не можно говорить диаметр, диаметр
[04:42.680 --> 04:45.240]  просто по определению, диаметр любого множества, это
[04:45.240 --> 04:46.280]  максимальное расстояние между 뭔ими и либо двумя
[04:46.280 --> 04:48.980]  его точками, это по сути мы ищем диаметр нашего
[04:48.980 --> 04:52.900]  множества с, расстояние между двумя самыми далекими
[04:52.900 --> 04:56.240]  точками, тогда есть следующая простая лемма, лемма пусть
[04:56.240 --> 05:05.520]  q это диаметры с, но то есть расстояние q, расцена между
[05:05.520 --> 05:09.020]  q максимально среди всех возможных пар точек s, то
[05:09.020 --> 05:23.020]  то есть dist между p и q равно максимуму по всем p звёздочка q звёздочка из s, dist p звёздочка q звёздочка.
[05:23.020 --> 05:33.020]  Хорошо, вот мы взяли диаметр, тогда давайте мы проведем две прямые перпендикулярные этому диаметру, которые проходят через p и q.
[05:33.020 --> 05:42.020]  Проведем прямые l1 и l2, перпендикулярные q.
[05:48.020 --> 05:54.020]  Ну, соответственно, проходящие через p и q, соответственно, через p и q, соответственно.
[05:55.020 --> 06:11.020]  Тогда, утверждается, s целиком лежит между этими двумя прямыми l1 и l2, s целиком лежит в полосе между l1 и l2.
[06:11.020 --> 06:23.020]  То есть, картинка будет такая, вот есть у вас ваша, ну, выпукла оболочка, да, мы понимаем, что мы можем заменить s на выпукла оболочку, ничего от этого не изменится.
[06:23.020 --> 06:29.020]  И есть у вас какие-нибудь две точки, на которых достигается диаметр, вот по yq.
[06:29.020 --> 06:37.020]  Мы проводим этот отрезок, проводим прямые, ортогональные этому отрезку, проходящие через точки, да, через вершины этого отрезка,
[06:37.020 --> 06:44.020]  будет вот такие две прямые l1 и l2, соответственно, здесь прямой угол, и здесь прямой угол.
[06:44.020 --> 06:57.020]  Ну и тогда Лему утверждает, что как бы левее l1 и правее l2 ничего нет, то есть как раз надугольник, так, сломалась, надугольник s целиком лежит между этими двумя полосками.
[06:57.020 --> 07:10.020]  Ну, это очень простое утверждение, потому что если это не так, и, например, есть какая-нибудь точка за l1, тогда мы можем просто вместо p взять эту точку, и тогда расстояние q до этой точки будет больше, чем расстояние до qp.
[07:10.020 --> 07:22.020]  Потому что от q ближайшее расстояние до l1, то в точности qp, да, ну, потому что это отрезок, вот, ортогональный обеим левым уголом.
[07:22.020 --> 07:27.020]  Ну, конечно, это просто расстояние между прямыми, минимально возможное расстояние.
[07:27.020 --> 07:33.020]  Тогда если есть какая-то точка за вот этой вот l1, где-то левее, тогда расстояние от нее до q будет только больше.
[07:33.020 --> 07:39.020]  Ну, потому что, во-первых, вот здесь какой-то кусочек отрезка, потом еще гипотенуза вот такого вот прямоголемо-триугольника, прямой угол,
[07:39.020 --> 07:44.020]  два катета и гипотенуза, то есть тоже еще больше, чем qp.
[07:44.020 --> 07:52.020]  Поэтому любая точка за пределами вот этих вот двух прямых, за пределами этой полосы нам говорит, что диаметр на самом деле должен быть больше.
[07:52.020 --> 08:01.020]  Ну, значит, тогда противоречие. Доказательства просто опротивлены.
[08:02.020 --> 08:14.020]  Хорошо, значит, мы поняли, что если вот так вот подпереть, провести такие опорные прямые перпендикулярные диаметру в точках диаметра, в концевых точках диаметра,
[08:14.020 --> 08:19.020]  то получится полоса внутри, которая целиком заключила наш нагугольник.
[08:19.020 --> 08:23.020]  Значит, опорные прямые ограничивают полосу, в которой целиком лежит наш нагугольник.
[08:23.020 --> 08:31.020]  А давайте мы вот эти вот две опорные прямые l1 и l2 будем синхронно вращать.
[08:31.020 --> 08:37.020]  Значит, мы понимаем, что l1 и l2 параллельны, раз они не ортогональны одному и тому же отрезку.
[08:37.020 --> 08:40.020]  Тогда давайте их синхронно как-нибудь монотонно вращать.
[08:40.020 --> 08:46.020]  Скажем, ну, вот тут повернул мне какой-то небольшой угол, здесь тоже повернулось, тут продолжаем вращать, тут продолжаем вращать.
[08:47.020 --> 08:53.020]  Ну и в какой-то момент мы дойдем до состояния, когда l2 совпадет, ну, там одна из прямых совпадет с одной из сторон.
[08:53.020 --> 08:58.020]  И когда при дальнейшем вращении, скажем, l1 продолжит вращаться относительно точки P,
[08:58.020 --> 09:01.020]  а l2 начнет вращаться относительно уже другой точки.
[09:01.020 --> 09:09.020]  То есть мы не можем в старое состояние, если мы продолжаем вращать, скажем, по часовой стрелке,
[09:09.020 --> 09:12.020]  тогда у меня меняется как бы опорная точка, вокруг которой происходит вращение.
[09:12.020 --> 09:15.020]  То есть это обязательно становится другой конец стороны.
[09:15.020 --> 09:20.020]  И всегда, когда одна из прямых начинает проходить через сторону, и мы продолжаем поворот,
[09:20.020 --> 09:24.020]  тогда опорная точка, вокруг которой вращается прямая, она меняется.
[09:24.020 --> 09:32.020]  Ну и давайте так просто обе эти наши прямые совместно синхронно вращаем целиком, да, пройден весь круг, весь многогольник.
[09:32.020 --> 09:38.020]  И по сути мы получили все возможные опции для того, как могут выглядеть вот эти две опорные прямые.
[09:38.020 --> 09:44.020]  То есть две прямые, проходящие через вершины диаметра, проходящие через вершины диаметра.
[09:44.020 --> 09:48.020]  Ну и значит мы как бы переберем таким образом все потенциальные пары на диаметр,
[09:48.020 --> 09:52.020]  да, мы берем все пары вершин такие, что вот между ними,
[09:52.020 --> 09:56.020]  что если провести опорные прямые в этих точках, то получится как раз кандидатный диаметр.
[09:56.020 --> 10:01.020]  Ну тогда мы просто все такие перебираем, их будет от n, в этом легко убедиться,
[10:01.020 --> 10:05.020]  потому что, ну в общем, когда у меня вращается одна прямая, она проходит всего от n конфигурации.
[10:05.020 --> 10:10.020]  L1 проходит как бы n возможных, ну там сторон или вершин. L2 точно то же самое.
[10:10.020 --> 10:15.020]  Ну и в каждом момент времени у нас получается там какие-то две точки рассматриваются в качестве кандидатного диаметра.
[10:15.020 --> 10:22.020]  Ну и соответственно мы всех этих кандидатов просто переберем и выведем максимальное расстояние между ними.
[10:22.020 --> 10:25.020]  Вот такой вот наш лейтенант.
[10:25.020 --> 10:28.020]  Вот этот пагаритм.
[10:28.020 --> 10:36.020]  Такой. Ну давайте в самом начале поговорим, что L1, L2 это крайняя левая вертикальная и правая вертикальная прямая.
[10:36.020 --> 10:45.020]  L1 это крайняя левая вертикальная прямая.
[10:45.020 --> 10:50.020]  L2 это крайняя правая.
[10:50.020 --> 10:57.020]  Ну то есть в нашей оболочке мы находим вершину с минимальным x и с максимальным x.
[10:57.020 --> 11:00.020]  Вот так и нарисуем.
[11:00.020 --> 11:06.020]  Вершину с минимальным x проводим здесь L1 и вершину с максимальным x проводим здесь L2.
[11:06.020 --> 11:12.020]  А дальше начинаем эти L1, L2 синхронно вращать.
[11:12.020 --> 11:20.020]  L1 и L2 синхронно, то есть одновременно вращать.
[11:20.020 --> 11:22.020]  Так, я вот тут начал по часовой стрелке делать.
[11:22.020 --> 11:25.020]  А давайте я все-таки переделаю и давайте против часовой.
[11:25.020 --> 11:27.020]  Мне так будет немножко удобнее.
[11:27.020 --> 11:29.020]  Синхронно вращать против часовой стрелки.
[11:29.020 --> 11:35.020]  Против часовой стрелки.
[11:35.020 --> 11:39.020]  Ну большую часть времени у меня это вращение, оно ничего не поменяет.
[11:39.020 --> 11:45.020]  Например, если я ненамножко, на чуть-чуть вращаю обе эти прямые относительно вот этих вот опорных точек,
[11:45.020 --> 11:48.020]  то у меня будет что-то вот такое и вот такое.
[11:48.020 --> 11:50.020]  Они обе останутся опорными.
[11:50.020 --> 11:53.020]  Опять, кандидатный диаметр это все та же пара точек PQ.
[11:53.020 --> 11:58.020]  Самая крайняя левая и крайняя правая, то есть минимальным x и максимальным x.
[11:58.020 --> 12:00.020]  И ничего не поменяется.
[12:00.020 --> 12:03.020]  У меня новой пары кандидатов не появится.
[12:03.020 --> 12:12.020]  Дальше, если буду вращать, продолжать, то что-то начнет меняться только когда одна из прямых совпадет с одной из сторон.
[12:12.020 --> 12:14.020]  То есть будет ей параллельно, будет ее содержать.
[12:14.020 --> 12:21.020]  Ну и тогда в этот момент мне нужно переключиться и сказать, что теперь вращение происходит не относительно вот этой старой точки Q,
[12:21.020 --> 12:26.020]  а относительно вот этой точки следующей точки Q звездочки.
[12:26.020 --> 12:33.020]  И так будем вращать, понимать, когда происходит переключение, то есть когда у меня меняется опорная точка вращения у каждой прямой.
[12:33.020 --> 12:41.020]  И тем самым каждую пару опорных точек мы будем проверять на, ну, мерить между ними расстояние и выбирать максимально.
[12:41.020 --> 13:01.020]  Итак, значит, переключение опорных точек происходит, ну, давайте я пишу O10 раз, O10 раз.
[13:01.020 --> 13:09.020]  Потому что L1 суммарно, значит, когда она вращается, ну представьте, чтобы вот эту исходную вертикальную прямую вращаете вот так вот,
[13:09.020 --> 13:14.020]  целиком прокручиваете весь круг с градусным мером 2p.
[13:14.020 --> 13:18.020]  Тогда у вас, значит, будет такая прямая, потом будет вот такая, она продолжит крутиться, крутиться, крутиться,
[13:18.020 --> 13:23.020]  и в итоге она за весь круг обойдет весь ваш ноглугольник.
[13:23.020 --> 13:28.020]  И таким образом каждая вершина побывает опорной ровно один раз для каждой из двух прямых.
[13:28.020 --> 13:35.020]  И поскольку у меня две прямые, то, соответственно, каждая вершина побывает опорной два раза для L1 или для L2.
[13:35.020 --> 13:39.020]  Ну, соответственно, суммарное переключение будет O10, 2n максимум.
[13:39.020 --> 14:04.020]  Вот, и тогда, значит, в каждый момент, в каждый момент переключения опорной точки, ну одной, одной опорной точки,
[14:04.020 --> 14:12.020]  измеряем расстояние между текущими опорными,
[14:12.020 --> 14:21.020]  между текущими опорными,
[14:21.020 --> 14:28.020]  ну и обновляем ответ, обновляем ответ.
[14:28.020 --> 14:31.020]  Вот, ну такой несложный алгоритм, просто нужно все провращать.
[14:31.020 --> 14:39.020]  Соответственно, каждая пара вершин, в которые мы убираемся, слева и справа, это есть наш кандидатный диаметр.
[14:39.020 --> 14:45.020]  Поняли, да, что если есть диаметр, то обязательно вот эти две прямые будут обязательно будут опорны, и мы их когда-то переберем.
[14:45.020 --> 14:49.020]  Ну, тогда мы как бы перебираем все возможные кандидаты на диаметр, все их измеряем,
[14:49.020 --> 14:54.020]  и соответственно максимальное расстояние между ними будет диаметром нашего множества.
[14:54.020 --> 14:59.020]  Вот, ну давайте немножко технической технических деталей, как делать вот эти вот все повороты.
[14:59.020 --> 15:11.020]  Значит, есть у меня наш многоугольник, вот изначально L1 где-то здесь, L2 здесь.
[15:11.020 --> 15:18.020]  Тогда вопрос, когда впервые у меня при вращении будет изменена опорная точка?
[15:18.020 --> 15:23.020]  То есть я вот как рисовал, если я на небольшой угол поверну, то у меня ничего не поменяется,
[15:23.020 --> 15:30.020]  ничего не поменяется, ну и в итоге что-то изменится, когда у меня одна из прямых начнется держать в сторону.
[15:30.020 --> 15:36.020]  И причем эта сторона должна иметь наименьший вот этот угол, то есть вот здесь мы измерили как бы угол,
[15:36.020 --> 15:40.020]  вот здесь измерили угол, то есть на какой угол надо перевернуться, чтобы начать содержать следующую сторону,
[15:40.020 --> 15:47.020]  и соответственно минимальный из них, и скажет мне где происходят впервые переключения опорной точки.
[15:47.020 --> 15:50.020]  То есть мне по сути надо померить вот эти два угла и сказать какой из них меньше,
[15:50.020 --> 15:53.900]  какой из них меньше, соответственно, там будет переключение первое.
[15:53.900 --> 15:59.380]  Но вместо того, чтобы мерить углы, мы можем просто сравнить векторные произведения.
[15:59.380 --> 16:07.140]  А именно, смотрите, вот есть у меня сейчас такое вертикальная наша прямая, вертикальная прямая.
[16:07.140 --> 16:10.500]  Давайте проведем векторы, соответствующие вот этим вот двум следующим сторонам.
[16:10.500 --> 16:16.020]  Первая сторона, вот эта вторая.
[16:16.020 --> 16:31.620]  Так, значит, тогда я утверждаю, что, если их назвать УВ, тогда переключение L1 произойдет раньше,
[16:31.620 --> 16:40.020]  то есть раньше, раньше, чем на L2, если только, если векторное произведение векторов У и В,
[16:40.020 --> 16:47.860]  сейчас скажу иметь какой знак. В этом нашем случае у меня векторное произведение отрицательно,
[16:47.860 --> 16:55.100]  а здесь было бы положительно, меньше нуля. Ну то есть смотрите, вот я рассматриваю сторону,
[16:55.100 --> 17:01.820]  где будет следующий поворот по L1, вот она У, и сторону, где будет следующий поворот по L2,
[17:01.820 --> 17:07.900]  вот она В. Ну тогда понятно, что если у меня исходная прямая была какая-то вот такая вертикальная,
[17:07.900 --> 17:14.460]  то раньше происходит поворот по У. Ну то есть если я отложу У в эту точку, у меня кратчайший
[17:14.460 --> 17:21.980]  поворот от У до В будет почасовой, то есть отрицательный. Да, ну вот как раз кросс отрицательный,
[17:21.980 --> 17:30.620]  получается, что L1 переключается раньше, чем L2. А если гугл наоборот, смотрите, если бы у меня У был бы
[17:30.620 --> 17:38.780]  какой-нибудь таким, а В был бы каким-нибудь таким, сейчас его еще более крутым нарисуем, вот таким.
[17:38.780 --> 17:48.020]  Ну вот так. В. Тогда понятно, что когда мы вот так вот вращаем относительно вот этих опорных точек,
[17:48.020 --> 17:54.620]  то первое переключение произведет на L2. Первое переключение произведет на L2. Это как раз значит,
[17:54.620 --> 18:04.140]  что если мы отложим У и В от одной точки, то кратчайший поворот от У к В будет против часовой,
[18:04.140 --> 18:08.900]  то есть кросс должен быть положительным. Кросс должен быть больше нуля. Вращение в положительном
[18:08.900 --> 18:15.340]  направлении против часовой стрелки. Вот значит, тогда L2 переключится раньше. Ну и все. Собственно,
[18:15.340 --> 18:20.940]  тогда алгоритм и код будет очень простым. Мы просто значит запоминаем как бы текущий указатель,
[18:20.940 --> 18:26.940]  где мы стоим вот здесь вот, в какой вершинке мы стоим левой прямой и в какой вершинке мы стоим
[18:26.940 --> 18:33.180]  в правой прямой. Точка Ж. Дальше измеряем вот эти два вектора У и В, как там скажем П и плюс первое
[18:33.180 --> 18:41.460]  минус П и Т, вот этот вектор, и П же плюс первое минус П и Т. Дальше смотрим на знак вот этого
[18:41.460 --> 18:48.140]  векторного произведения, и по этому знаку мы понимаем, какая из сторон переключится первой,
[18:48.140 --> 18:52.540]  то есть какая из прямых L1 и L2 переключится первой. Ну тогда если например вот это вот верно,
[18:52.540 --> 18:58.620]  тогда мне нужно сначала сделать И равно И плюс 1, то есть перейти вот по этой этой
[18:58.620 --> 19:05.660]  стороне и увеличить И на единичку. Ну и не забыть обновить ответ расстоянием между ИТ и точкой и Житой,
[19:05.660 --> 19:09.620]  то есть у меня получается новый кандидат на диаметр выдают, вот мне нужно им обновить ответ.
[19:09.620 --> 19:16.500]  Если же наоборот этот кросс был скажем ну больше равен нуля, тогда мне нужно сначала увеличить G,
[19:16.500 --> 19:24.340]  вот здесь вот перейти G равно G плюс 1, и не забыть померить расстояние от G плюс первой точки до Итой,
[19:24.340 --> 19:28.100]  то есть вот этот вот отрезок взять в рассмотрение, и это будет кандидат на диаметре.
[19:28.100 --> 19:35.580]  Ну вот кажется и всё. То есть мы просто так проходим, понимаем какая сторона будет следующей
[19:35.580 --> 19:39.700]  для переключения с помощью векторного произведения, переключаемся и меряем текущий диаметр,
[19:39.700 --> 19:45.300]  как бы текущую вот длину вот этой вот полоски, ширину этой полоски, и соответственно максимальная
[19:45.300 --> 19:50.060]  длина полоски, внутри которой расположен наш многогольник S, это и будет наш диаметр.
[19:50.060 --> 19:56.900]  Вот такой алгоритм, то есть если мы построили выпуклую оболочку, то всё что нам осталось
[19:56.900 --> 20:02.940]  сделать здесь, это занимать линейное время. Все вот эти вот повороты, это на самом деле просто
[20:02.940 --> 20:07.820]  проход L1 целиком по многогольнику, и L2 целиком по многогольнику, ну это линейное время,
[20:07.820 --> 20:13.380]  все эти сравнения, то есть определение того, кто переключается раньше, делается за вот единицы,
[20:13.380 --> 20:19.980]  потому что просто знак векторного произведения, ну и соответственно время работала. Вот если cross
[20:19.980 --> 20:24.940]  равно нулю, давайте что-нибудь порисуем, давайте порисуем, например какой-нибудь вот такой случай,
[20:24.940 --> 20:36.120]  так вот так вот так вот так вот так.
[20:54.940 --> 21:04.940]  Так, значит, мы, видимо, здесь какую-то пару точек не рассмотрим, правильно ли я понимаю, если мы так будем делать, что мы какую-то пару точек не рассмотрим.
[21:04.940 --> 21:15.940]  Мы знаем вот это, потом переключаем, скажем, сначала вот эту, и мы измерим вот это, потом переключаем вот эту, и измерим вот это.
[21:16.940 --> 21:25.940]  Так, сейчас одну секунду, давайте поймем, есть ли здесь какая-то проблема. То есть у меня есть, по сути, что...
[21:25.940 --> 21:35.940]  Нет, просто трапеция какая-то.
[21:35.940 --> 21:46.940]  Вот, ну и по нашему алгоритму, да, вот у меня было здесь исходно и здесь g, потом мы сначала переходим в g плюс 1 и, соответственно, меряем, то есть у нас было вот это расстояние,
[21:46.940 --> 21:55.940]  а затем измеряем вот это расстояние, и потом переходим из i в i плюс 1 и меряем вот это расстояние.
[21:55.940 --> 22:08.940]  Вот, но главное, что мы вроде обе диагональки померили, мы измерили обе диагонали и, в частности, в качестве ответа мы взяли, ну то есть, максимум из двух длиннодиагоналей.
[22:08.940 --> 22:19.940]  Ну и вроде бы верно, что в трапеции максимальная из длиннодиагоналей, она больше равна, чем длина любой стороны, ну длина в смысле вот этой вот наклонной стороны.
[22:19.940 --> 22:29.940]  То есть вот если я так нарисую трапецию какую-нибудь, то что мы поняли, что вот просто наш алгоритм, тот, который был выше, то есть мы не паримся о точном значении,
[22:29.940 --> 22:34.940]  что если cross равно 0, то ну давайте там сначала переключать l2, то есть увеличивать g на единичку.
[22:34.940 --> 22:46.940]  Вот, тогда что? Тогда мы поняли, что мы обязательно рассмотрим обе диагонали, обязательно рассмотрим обе диагонали, да, и, возможно, не рассмотрим какой-то из двух сторон вот этих вот наклонных сторон,
[22:46.940 --> 22:57.940]  какой-то возможно не рассмотрим. Так, почему тогда мы все равно найдем диаметр? Вопрос к вам, можно ли это как-то просто здесь увидеть?
[22:57.940 --> 23:01.940]  То есть почему максимальная из вот этих отрезков это обязательно диагональ?
[23:16.940 --> 23:30.940]  Ну, может быть, что-то есть, что-то есть, что-то есть, что-то есть, что-то есть, что-то есть, что-то есть, что-то есть, что-то есть, что-то есть, что-то есть, что-то есть, что-то есть, что-то есть, что-то есть.
[23:30.940 --> 23:44.940]  Ну, может быть, что-то есть, что-то есть, что-то есть, что-то есть.
[23:44.940 --> 23:53.940]  Ну, может быть, что Hartwell иfree с этим диаметром не//может быть более, чем в диагонали?
[23:53.940 --> 24:03.940]  Сейчас... А еще раз здесь, есть рапет, рапет, который мы д mauvиз во внизу, там вполне может быть нижняя сторона диаметром, ну, если сделать...
[24:03.940 --> 24:09.940]  Дижняя сторона может быть диаметром. Да, но, смотрите, это будет соответствовать другому положению, то есть это мы рассмотрим когда-то позже,
[24:09.940 --> 24:13.460]  это мы рассмотрим когда-то позже, когда у меня, грубо говоря, как-то вот так вот будет
[24:13.460 --> 24:21.940]  наша прямая проходить, то есть вот так вот и вот так. То есть мы тогда даже... Сейчас, секунду, нарисуем на нашем примере.
[24:21.940 --> 24:28.860]  Здесь у меня были вот такие вот две L1 и L2. Ну а чтобы найти вот это, у меня будет... То есть я просто
[24:28.860 --> 24:35.020]  продолжу вращать, и я найду вот эту вот штуку. Вот эти вот там две пары L1 и L2, которые нам это увидят.
[24:35.020 --> 24:43.100]  Сейчас единственная проблема доказать, что хотя бы одна из диагоналей, она больше равна, чем вот
[24:43.100 --> 24:48.380]  эти вот остальные наклонные стороны. Так, рассуждение про выпуклый ногогонник я и не особо понял.
[24:56.380 --> 25:02.820]  Сейчас, только геометрия... Может потеряем костюмусов? Нет, вообще хочется сказать, что если
[25:02.820 --> 25:08.220]  предположим у нас диагональ меньше, чем сторона, если нарисовать такую трапезу, то будет видно, что она не выпуклая.
[25:08.220 --> 25:17.940]  Диагональ меньше, чем сторона, да? Сейчас.
[25:17.940 --> 25:26.900]  Например, вот здесь, если у меня есть... Просто одну из наклонных сторон рисуем больше. Так,
[25:26.900 --> 25:32.420]  вот давайте, на этом рисунке у меня есть вот эта вот красная диагональ, вот эта наклона сторона,
[25:32.420 --> 25:38.540]  которая больше, чем диагональ. И вот есть еще какая-то другая.
[25:38.540 --> 25:43.820]  Тогда обязательно вот эта вот диагональ будет больше, чем та.
[25:43.820 --> 25:58.380]  Ладно, тогда, наверное, те же задания. Хорошо, давайте попробую я тогда нарисовать, что я хочу.
[25:58.380 --> 26:10.940]  Значит, смотрите, утверждение, что пусть ABCD это трапеция, трапеция с основаниями ABCD,
[26:10.940 --> 26:22.980]  тогда... Значит, кто у меня диагональ? Диагональ это AC и BD. Тогда максимум из AC и BD больше
[26:22.980 --> 26:29.220]  либо равен максимума между наклонными сторонами. Так, сейчас мне нужна опять картинка.
[26:29.220 --> 26:39.740]  BCD, наклонная сторона, это будет BC и AD. Вот так. Ну, давайте попробуем так доказать. Пусть не так.
[26:39.740 --> 26:47.420]  Пусть не так. Соответственно, пусть, давайте не умоляемся, что BC это максимально из сторон,
[26:47.420 --> 26:56.940]  максимум из BC и AD. И эта штука строго больше, чем AC и больше, чем BD. Хорошо, ну как это может быть?
[26:56.940 --> 27:01.860]  Вот смотрите, есть две параллельные стороны у меня, параллельные основания, параллельные прямые,
[27:01.860 --> 27:08.540]  на которых лежат основания. И есть какой-то отрезок BC, какой-то отрезок BC, который выступает
[27:08.540 --> 27:19.100]  стороной. Давайте я чуть более наклонно нарисую. То есть мы можем так повернуть нашу трапецию,
[27:19.100 --> 27:24.060]  что ее основания будут параллельные оси OX, то есть горизонтальными, и соответственно лежат
[27:24.060 --> 27:30.500]  на двух таких прямых. Дальше, значит, если я нарисую BC, то получается, что у меня вся трапеция лежит
[27:30.500 --> 27:39.780]  вот здесь слева, лежит левее этого отрезка BC. Теперь, если я опущу здесь перпендикуляр,
[27:39.780 --> 27:50.260]  то что это значит? Это значит, что вот, что значит вот это условие, что BC больше, чем BD? Это значит,
[27:50.260 --> 27:57.580]  что точка D, она лежит ближе к перпендикуляру, чем C. То есть она либо лежит где-то вот здесь вот,
[27:57.580 --> 28:04.900]  либо лежит, вот если я отражу С относительно основания перпендикуляра, С штрих возьму,
[28:04.900 --> 28:09.860]  либо же где-то вот здесь. Так, давайте рассмотрим случай, когда D лежит вот здесь, на этом отрезке,
[28:09.860 --> 28:16.380]  от С до основания перпендикуляра, скажем, H. Что тогда? Тогда мне нужно еще обеспечить,
[28:16.380 --> 28:27.020]  чтобы BC было больше, чем AC. А, сейчас, или даже нам не нужно было насмотреть,
[28:27.020 --> 28:32.820]  сейчас, ну секунду. Да, нам не нужно было смотреть на D. Смотрите, можно про D было забить. Главное,
[28:32.820 --> 28:37.780]  что D лежит где-то вот здесь слева. D лежит где-то слева от С. Ну хорошо, а теперь у меня есть еще
[28:37.780 --> 28:43.340]  неравенство, что BC больше, чем AC. Но когда такое может быть? Опять-таки, вот если я опущу из C
[28:43.340 --> 28:50.420]  перпендикулярно противоположную прямую, то у меня, раз BC больше, чем AC, то у меня точка A должна
[28:50.420 --> 28:55.580]  лежать ближе к вот этому основанию, чем B. То есть A должна лежать, ну там, где-то вот здесь,
[28:55.580 --> 29:00.220]  или где-то вот здесь. Но мы договорились, что правее точки B нет ни одной прямой на этом
[29:00.220 --> 29:07.820]  луче. Поэтому такого быть не может, и обязательно AC, оно обязательно больше, чем BC. Ну вот кажется,
[29:07.820 --> 29:14.820]  все. В итоге мораль такая, что действительно от стропеции нам, то есть стропеция, это вот такой
[29:14.820 --> 29:21.260]  случай, когда у меня L1 и L2 параллельны, вот такие вот они, L1 и L2. И мы как бы, ну с формальной
[29:21.260 --> 29:28.820]  точки зрения должны перебрать все пары. Значит, AC, BC, BD и AD. То есть все вот эти вот четыре пара
[29:28.820 --> 29:33.460]  нужно перебрать. Но на самом деле это делать не обязательно. Мы доказали, что достаточно перебирать
[29:33.460 --> 29:40.060]  только диагонали. Ну а их наш алгоритм найдет. Потому что, значит, если у меня было вот здесь
[29:40.060 --> 29:45.980]  и, вот здесь g, то я там кого-то из них увеличу. Сначала скажем g плюс 1, получу одну диагональ.
[29:45.980 --> 29:59.660]  Потом здесь будет и плюс 1. Сейчас, секунду. Сейчас, сейчас. Давайте я скажу, что вот это L1 и L2.
[29:59.660 --> 30:10.580]  Ну, собственно, я уже рисовал, что я обязательно убедить диагонали. Проверим. И g. Значит, сначала
[30:10.580 --> 30:16.420]  я возьму. То есть у меня уже изначально была вот эта и g диагональка. Потом будет g плюс 1,
[30:16.420 --> 30:21.380]  потом будет и плюс 1. Вот эта вторая диагональка тоже измерится. Ну все, получается обе диагонали
[30:21.380 --> 30:27.220]  у меня обязательно будут учтены. И, собственно, мы сделали все, что хотели. Вот, ура. То есть,
[30:27.220 --> 30:32.180]  на самом деле, можно со случаем cross равно 0 не париться и обрабатывать его точно так же,
[30:32.180 --> 30:36.620]  как мы обрабатываем, скажем, cross больше 0. Просто переключать g или просто переключать i.
[30:36.620 --> 30:45.660]  Так же, как cross меньше 0. Вот, ну все. Это был алгоритм Zeyn-Logan нахождения диаметра множества на
[30:45.660 --> 30:51.140]  двух самых далеких точек множества. Хорошо. Значит, теперь второй алгоритм. Это Сумма Минковского.
[30:51.140 --> 31:06.420]  Сумма Минковского. Сумма Минковского. Значит, пусть m1, m2, какие-то два многогольника,
[31:06.420 --> 31:18.180]  ну, со внутренностями, со внутренностями. То есть, многогольник, это не только его там
[31:18.180 --> 31:22.340]  вершины и стороны, но и все, что лежит внутри. То есть, как на многогольнике с мясом. Тогда
[31:22.340 --> 31:29.660]  определение. Значит, сумма Минковского называется вот такое множество. Это просто сумма попарных
[31:29.660 --> 31:37.140]  точек. Ну, попарная сумма всех возможных точек из m1, m2. То есть, это сумма a плюс b по всем таким
[31:37.140 --> 31:45.500]  a из m1 и b из m2. Вот, что такое сумма Минковского. То есть, вот есть у вас на плоскости два
[31:45.500 --> 31:51.660]  многогольника. Там, не знаю, квадрат и треугольник. Вы хотите их сложить. Да,
[31:51.660 --> 31:56.300]  разумеется, они идут у нас с мясом. То есть, со всем, что внутри. Тогда вы просто перебираете
[31:56.300 --> 32:02.180]  точку a внутри этого квадрата, точку b внутри этого треугольника и их поогернатно складываете. То
[32:02.180 --> 32:10.060]  есть, если это было там, скажем, x1 и y1, x2 и y2, то вы в результате в сумме пишете, что есть точка
[32:10.060 --> 32:17.260]  x1 плюс x2 и x1 плюс x2. Вот, ну и результат там, не знаю, будет какой-то многогольник. Пока давайте
[32:17.260 --> 32:22.060]  не будем задаваться вопросом, как он именно выглядит. Ну, там что-то, что-то вот типа такого,
[32:22.060 --> 32:30.940]  мне кажется, будет. Это будет результат m1 плюс m2. Так, ну вот, определение. Дальше утверждение,
[32:30.940 --> 32:42.540]  что если m1 и m2 это многоугольники, то их сумма это тоже, давайте выпуклые многоугольники считать,
[32:42.540 --> 32:57.180]  выпуклые многоугольники, то их сумма тоже выпуклые многоугольники.
[33:00.940 --> 33:09.220]  Значит, сумма выпуклых многоугольников, во-первых, выпуклая, во-вторых, многоугольник.
[33:09.220 --> 33:19.260]  Показательства. Давайте сначала докажем выпуклость. Чего выпукла здесь довольно
[33:19.260 --> 33:22.700]  простая. Смотрите, вот пусть у меня что-то такое вообще в выпуклости. На всякий случай напомню,
[33:22.700 --> 33:28.540]  что если у нас есть какие-то две точки p и q, лежащие в фигуре, в какой-то m,
[33:28.540 --> 33:34.300]  тогда весь отрезок между ними тоже должен лежать в фигуре m. Вот это выпуклость. Требование выпуклости,
[33:34.300 --> 33:39.340]  что отрезок между любыми двумя точками фигуры целиком лежит внутри этой фигуры. Хорошо,
[33:39.340 --> 33:45.940]  ну вот пусть есть какие-то две точки внутри нашей суммы. То есть есть, скажем, p и q,
[33:45.940 --> 33:54.340]  лежащие в m1 плюс m2, но раз они там лежат, тогда они получаются в виде суммы, скажем,
[33:54.340 --> 34:05.420]  p1 плюс p2 и q1 плюс q2, где p1 лежит в m1, q1 лежит в m1, а p2 лежит в m2. И то же самое с q2.
[34:05.420 --> 34:11.140]  Ну раз каждая точка лежит в сумме, то значит она распадается в сумму каких-то двух точек из
[34:11.140 --> 34:18.860]  m1 и m2. Вот здесь это p1 плюс p2, здесь это q1 плюс q2. Ну тогда смотрите, что мы знаем. Мы знаем,
[34:18.860 --> 34:26.220]  что отрезок p1 q1 целиком лежит в фигуре m1, поскольку по предположению это выпукло на угольник.
[34:26.220 --> 34:32.620]  И то же самое с фигурой с отрезком p2 q2. Этот отрезок целиком лежит в m2, потому что m2
[34:32.620 --> 34:36.780]  это выпукло на угольник. Были две точки, лежащие на угольнике, тогда целиком отрезок между ними
[34:36.780 --> 34:49.260]  тоже там лежит. Картинка. Было p1 q1, отрезок в m1, и было какой-то там p2 q2, отрезок в m2.
[34:49.260 --> 34:59.460]  Что мы хотим? Мы хотим сказать, что отрезок между вот этими вот точками лежит в сумме.
[34:59.460 --> 35:09.220]  Ну интуиция здесь очень простая. Давайте мы просто, значит, ведем, ну нормируем эти отрезки одной
[35:09.220 --> 35:14.620]  и той же длиной. Ладно, плохо сказал. Давайте мы просто эти отрезки будем проходить с одинаковой
[35:14.620 --> 35:21.260]  скоростью. Нет, продам, не с одинаковой скоростью. Будем проходить эти отрезки так, что в момент
[35:21.260 --> 35:28.540]  времени 0 мы стоим в p1 и в p2, а в момент времени 1 мы будем находиться в q1 и q2. То есть проходим
[35:28.540 --> 35:33.620]  их с линейными скоростями, они будут разные у нас на самом, ну в общем случае будут разные, но так,
[35:33.620 --> 35:38.860]  что в общем в нулевом момент времени мы здесь находимся в p1, а здесь в q1 в первом момент времени,
[35:38.860 --> 35:49.540]  здесь в нуле p2, в 1 q2. То есть это что такое? Это просто p1 плюс t умножить на q1 минус p1. То есть
[35:49.540 --> 35:53.820]  мы рассмотрим вот такое движение по этому отрезку, которое в момент времени t имеет вот такую координату.
[35:53.820 --> 36:03.860]  Т от 0 до 1. То же самое здесь. Мы рассмотрим движение p2 плюс t на q2 минус p2. Дальше мы сложим
[36:03.860 --> 36:15.160]  две эти точки и давайте посмотрим, что получится. Получится p1 плюс p2 плюс t на q1 плюс q2 минус p1 плюс
[36:15.160 --> 36:21.740]  p2. Это вот когда мы взяли точку здесь в момент времени t и точку здесь в момент времени t, их
[36:21.740 --> 36:28.140]  сложили, получили вот такой результат. Ну а это в точности какая-то точка на отрезке между p и q.
[36:28.140 --> 36:39.740]  Вот было у меня p и q, лежащие в сумме. Соответственно p это p1 плюс p2. q это q1 плюс q2. Ну и тогда любая
[36:39.740 --> 36:45.340]  точка на этом отрезке тоже задается вот таким вот образом. Это start плюс некая t на разность
[36:45.340 --> 36:51.060]  конец минус начала q минус p. Ну все соответственно любая точка здесь, она получается, то есть если мы
[36:51.060 --> 36:56.460]  на этом отрезке ведем ту же самую скорость прохода, так что здесь в нуле, а здесь в единице мы
[36:56.460 --> 37:01.220]  находимся, то тогда любая точка в момент времени t получается как сумма вот этих двух точек в момент
[37:01.220 --> 37:09.660]  времени t. Поэтому действительно любая точка на отрезке q является суммой некоторых двух точек
[37:09.660 --> 37:14.460]  в первом многугольнике и во втором. Ну вот просто тут какой-то там линейный отрезок как-то прошли
[37:14.460 --> 37:21.380]  с линейной скоростью, с постоянной, так чтобы сумма была вот ровно такая как нужно. Это у нас
[37:21.380 --> 37:31.860]  получилось выпуклость. А теперь второе. Почему это многоугольник? Мы докажем более сильное
[37:32.460 --> 37:48.980]  мы докажем, что m1 плюс m2 равно выпуклой оболочки множество точек p плюс q, где p это вершина
[37:48.980 --> 38:04.300]  m1, а q это вершина m2. То есть чтобы найти сумму нам достаточно попарно сложить все вершины,
[38:04.300 --> 38:09.380]  то есть вот давайте вернемся к примеру с квадратом и треугольником. Нам достаточно сложить
[38:09.380 --> 38:15.380]  каждую вершину квадрата с каждой вершиной треугольника, ну там будет не знаю сколько,
[38:15.380 --> 38:26.140]  12 вершин, и построить на этом выпуклую оболочку. И это и будет наша сумма, вот что я утверждаю.
[38:26.140 --> 38:33.580]  Ну почему это верно? Вложение в аду все равно очевидно. Понятно, что m1 плюс m2 будет целиком
[38:33.580 --> 38:39.660]  содержать вот этот вот конф, потому что любая такая точка p плюс q, она конечно лежит в сумме,
[38:39.660 --> 38:45.100]  потому что это по определению сумма точки из m1 и точки из m2, значит вот эта любая точка лежит
[38:45.100 --> 38:52.380]  в m1 плюс m2, ну а раз у меня несколько точек в m1 плюс m2, то поскольку m1 плюс m2 выпукло,
[38:52.380 --> 39:01.660]  то и выпуклая оболочка тоже их лежит. То есть вот здесь стоят какие-то точки лежащие в сумме в m1
[39:01.660 --> 39:05.660]  плюс m2, а дальше я на них натягиваю выпуклую оболочку. Но раз у меня вот это множество,
[39:05.660 --> 39:11.940]  как можно доказать выпукло, то соответственно и выпуклая оболочка каких-то точек из этого множества
[39:11.940 --> 39:16.340]  там тоже лежит, про само множество выпукл. Поэтому вложение в эту сторону мы по сути уже доказали,
[39:16.340 --> 39:24.700]  когда доказали выпуклость m1 плюс m2. Теперь вложение обратно. Почему m1 плюс m2 вложена
[39:24.700 --> 39:31.140]  в выпуклую оболочку вот этих точек? Ну для этого мы рассмотрим произбольную точку вот отсюда.
[39:31.140 --> 39:43.860]  Рассмотрим точку. Так у меня заканчивается буква. Давайте x плюс y лежащую в m1 плюс m2,
[39:43.860 --> 39:54.940]  то есть x из m1, y из m2. А дальше давайте поступим следующим образом. Давайте мы эти точки x и y
[39:54.940 --> 40:01.780]  найдем в наших многоугольниках m1, m2 и нарисуем какой-нибудь треугольник, в котором в которых они
[40:01.780 --> 40:14.540]  лежат. То есть вот был у меня там какой-то m1, в нем была точка x и был какой-то m2, в котором лежал y.
[40:14.540 --> 40:23.380]  Тогда я утверждаю, что можно обязательно рисовать треугольник с вершинами в вершинах многоугольника,
[40:23.380 --> 40:30.020]  чтобы в нем лежала наша точка x, или вот здесь в этом случае, например, можно рисовать так y.
[40:30.020 --> 40:35.140]  Вот это очевидное утверждение, потому что по сути достаточно просто построить
[40:35.140 --> 40:39.500]  реангуляцию угольных многоугольников. Это в общем-то разбиение всего многоугольника на какие-то
[40:39.500 --> 40:44.340]  треугольники. Ну и тогда любая точка многоугольника хоть в одном треугольнике долежит, возможно,
[40:44.340 --> 40:48.060]  на границе, а главное внутри кого-то треугольника. Это просто немедленно следствие из того,
[40:48.060 --> 40:54.500]  что существует реангуляция, а с треангуляциями мы уже умеем работать. Итак, давайте мы как-то
[40:54.500 --> 40:59.700]  найдем положение x, что он лежит в каком-то треугольнике. Вот здесь давайте красный выделим.
[40:59.700 --> 41:09.660]  И y, он тоже лежит в каком-то треугольнике с вершинами в вершинах m2. Давайте подпишем,
[41:09.660 --> 41:28.500]  что такие треугольники существуют так как существует реангуляция. Вот, ну хорошо, тогда
[41:28.500 --> 41:33.780]  едем дальше. Давайте вот мы сузим наши m1, m2 до вот этих треугольников. То есть есть какой-то
[41:33.780 --> 41:43.300]  треугольник, лежащий в m1, в котором лежит еще x, и есть какой-то треугольник, лежащий в m2, в котором
[41:43.300 --> 41:52.740]  лежит y. Следующий шаг, это давайте мы выразим x и y через вершины этих многоугольников. Вот
[41:52.740 --> 42:01.140]  есть этих треугольников, извините. Значит, если треугольник с вершинами a1, a2, a3, то в общем-то
[42:01.140 --> 42:08.500]  легко понять, что x это какая-то выплыклая комбинация точек a1, a2, a3. Сейчас я напишу и скажу,
[42:08.500 --> 42:15.420]  что это значит. Где лямбда 1, лямбда 2, лямбда 3 больше нуля, и их сумма эта единица.
[42:15.420 --> 42:26.820]  То есть смотрите, есть у вас треугольник a1, a2, a3, есть точка внутри него, ну внутри или на границе.
[42:26.820 --> 42:33.780]  Тогда, ну почти очевидно, что можно x представить в виде вот такой вот линейной комбинации вершин
[42:33.780 --> 42:39.900]  треугольника, где коэффициенты не отрицательные, а их сумма равна единице. Вот, ну мы не будем это
[42:39.900 --> 42:47.660]  доказывать, можно считать это очевидным. Вот, можно сказать, что чтобы доказать, можно, например,
[42:47.660 --> 42:55.220]  сделать так. Давайте проведем отрезок, как это называется, чвяну из a3 и через x, да, то есть она
[42:55.220 --> 43:01.060]  где-то пересчет отрезок, ну, в сторону a1, a2. И поставим сюда такие веса, лямбда 1, лямбда 2, то есть
[43:01.060 --> 43:07.220]  поставим сюда такие гирки, что центр масс a1, a2 будет лежать в этой точке. Центр масс a1 и a2
[43:07.220 --> 43:11.780]  будет лежать в этой точке. Ну и дальше нужно будет сюда поставить какую-то гирку лямбда 3, чтобы x
[43:11.780 --> 43:22.100]  был как раз центром масса вот этих двух точек, a3 и того, что здесь вот лямбда 1, лямбда 2, a2. Вот тогда,
[43:22.100 --> 43:26.300]  если здесь поставить нужный вес, то x будет в этой точке. То есть таким образом можно обязательно
[43:26.300 --> 43:31.100]  всегда подобрать какие-то коэффициенты, чтобы x было вот такой комбинацией, ну, выпухлой комбинацией,
[43:31.100 --> 43:41.940]  точек 1, 2, 3. То же самое с y. y, если это вершины b1, b2, b3, то y это какой-то там, скажем, мю1, b1,
[43:41.940 --> 43:51.140]  плюс мю2, b2, плюс мю3, b3, где все мюшки не отрицательные, а сумма их равна единице.
[43:51.140 --> 44:05.940]  Вот, ну хорошо, хорошо. Так, что я хочу сделать дальше? Что я хочу сделать дальше?
[44:05.940 --> 44:10.020]  Момент.
[44:18.020 --> 44:22.300]  Я хочу сказать, что точка x плюс y, давайте напишем x плюс y,
[44:22.300 --> 44:36.620]  это лямбда 1, a1, то есть лямбда 2, a2, плюс лямбда 3, a3, плюс мю1, b1, плюс мю2, b2, плюс мю3, b3,
[44:36.620 --> 44:46.900]  что она лежит в выпуклой оболочке, она лежит в выпуклой оболочке, множество точек, ну там a1
[44:46.900 --> 44:55.860]  плюс b1, a1 плюс b2, a1 плюс b3 и так далее, в общем, все пары мы перебираем, в итоге будет 9 точек,
[44:55.860 --> 45:05.620]  вот, и в выпуклой оболочке такое множество должна лежать на точке x плюс y. Сейчас скажу почему-то так.
[45:16.900 --> 45:17.240]  Больше конду.
[45:46.900 --> 46:00.820]  да все я понял значит надо просто взять это с коэффициентом лямбда 1 мю 1 лямбда 1 мю 2 лямбда
[46:00.820 --> 46:08.020]  1 мю 3 и так далее и вроде вроде все получится как раз коэффициент при а1 будет лямбда 1 да ну все
[46:08.020 --> 46:12.380]  все получится значит так смотрите мы поняли что цикли выражается такой вот линией комбинации
[46:12.380 --> 46:17.820]  наших точек и чтобы доказать утверждение мне нужно показать что это точка лежит в выпуклой оболочке
[46:17.820 --> 46:24.740]  множество сумм всех пар вершин из из м1 и из м2 для этого достаточно показать что он лежит в
[46:24.740 --> 46:28.580]  выпуклой оболочке вот таких вот девяти точек когда мы складываем только вершины этих двух
[46:28.580 --> 46:35.860]  треугольников вот ну а это уже сделать легко смотрите давайте мы вот каждую такую точку возьмем
[46:35.860 --> 46:42.660]  с коэффициентом ну там лямбда и т б это естественно есть аи плюс бж то давайте возьмем такую точку с
[46:42.660 --> 46:49.660]  коэффициентом лямбда и мюжи и все это просуммируем по всем точкам ижи тогда смотрите что получится у
[46:49.660 --> 46:55.700]  меня если я просуммирую отдельно по аитам какой коэффициент будет при аитам я соответственно
[46:55.700 --> 46:59.940]  могу варьировать g и у меня при аитам будет коэффициент с точностью лямбда это на сумму мюшек
[46:59.940 --> 47:04.660]  а сумма мюшек это единица поэтому у меня вот эта штука будет просто с коэффициентом лямбда и т
[47:04.660 --> 47:10.500]  то же самое у меня будет с бшками у меня будет сумма по ж и бж и вот здесь если я варьирую ишку
[47:10.500 --> 47:16.060]  то у меня будет мюжи и т умножить на сумму лямбда и т их где сумма лямбда и лямбда и т это единица
[47:16.060 --> 47:23.220]  поэтому здесь будет просто бж и т и таким образом мы получили в общем-то выпуклое представление
[47:23.220 --> 47:30.420]  точки x плюс y через вот эти вот 9 точек по которым мы строим выпукло оболочку вот ну и понятно что
[47:30.420 --> 47:36.020]  сумма всех этих коэффициентов то есть вот эти коэффициенты я беру в качестве вот этой вот коэффициент
[47:36.020 --> 47:41.980]  в линиейной комбинации понятно что не все они отрицательны и их сумма равна единице сумма этих
[47:41.980 --> 47:46.940]  коэффициентов единица потому что ну там если вы если у вас есть два набора вот таких вот да сумма
[47:46.940 --> 47:52.380]  единица и вы их попарно по точечно перемножайте попарно перемножайте тогда сумма опять будет
[47:52.380 --> 47:57.060]  единица ровно из этих же соображений которые мы вот здесь а что сумма бюджета единица потом
[47:57.060 --> 48:03.020]  сумма лямбда и т это единица вот ну и все мы получили в общем-то представление x плюс y как
[48:03.020 --> 48:09.180]  выпуклого комбинацию вот этих вот 9 точек ну а значит належит конечно выпукло оболочки то есть
[48:09.180 --> 48:14.220]  если у меня есть несколько точек и вот да то есть вот эти вот суммы вершин а1 плюс б1 и так далее
[48:14.220 --> 48:20.020]  а3 плюс б3 и какая-то точка выражается их выпуклой комбинации то есть суммой с не отрицательными
[48:20.020 --> 48:24.100]  коэффициентами сумма единицы тогда конечно выпукла вот эта точка любит выпукло обложить их
[48:24.100 --> 48:31.740]  точек вот но тоже собственно давайте мы собственно сформулируем утверждение которое нам здесь нужно
[48:31.740 --> 48:44.660]  давайте без доказательства оставим точка x лежит в выпукло оболочки множество п1 п2 и так далее
[48:45.300 --> 48:52.500]  если только если существует не отрицательные лямбды сумма единицы
[48:52.500 --> 49:04.940]  сумма единицы такие что x это вот это вот линейная комбинация наших точек лямбда 1 п1 плюс так далее
[49:04.940 --> 49:12.100]  лямбда и вот это что называется выпукла комбинация комбинации
[49:15.100 --> 49:20.500]  ну и все кажется мы то есть помолли это утверждение мы все доказали то есть мы
[49:20.500 --> 49:26.540]  взяли точку лежащую в м1 и 2 рассмотрели в каких треугольниках лежат ее компоненты
[49:26.540 --> 49:33.140]  вымоги на м2 сложили два треугольника получили какой-то ну там какие-то точки взяли на них
[49:33.140 --> 49:38.420]  в обложке показали что наша точка исходная лежит обязательно в этом сумме этих двух треугольников
[49:38.420 --> 49:43.940]  то есть выпукла оболочки попарных сумм вершин этого этих двух треугольников вот так
[49:43.940 --> 49:50.380]  ну помолли это это утверждение но оно там на самом деле простой может его сами показать
[49:50.380 --> 49:55.900]  мы не будем женатым останавливаться здесь здесь все просто вот если мы показали вложимость в обе
[49:55.900 --> 50:05.620]  стороны показали что сумма м1 и 2 вложена и содержит выпукла оболочку множество там всех
[50:05.620 --> 50:12.260]  по плюску где п и кое-что вершин это вершина м1 кое-что вершина м2 все значит на самом деле просто
[50:12.260 --> 50:21.700]  сумма минковского это выпукла оболочка всех пар сумм сейчас как сказать выпукла оболочка сумм
[50:21.700 --> 50:30.460]  всех пар вершин вот так выпукла оболочка сумм всех пар вершин вот хорошо это мы поняли ну и
[50:30.460 --> 50:33.420]  соответственно отсюда следует что это многоугольник потому что здесь какое-то
[50:33.420 --> 50:38.060]  конечное количество точек и выпукла оболочка конечно множество точек это всегда на гугольник
[50:38.060 --> 50:53.220]  вывод м1 2 это выпукла на гугольник выпуклы на гугольник хорошо тогда давайте построим
[50:53.220 --> 51:05.380]  алгоритм который находит м1 и 2 алгоритм нахождения суммы минковского
[51:14.420 --> 51:15.500]  а так
[51:15.500 --> 51:31.700]  алгоритм такой давайте как мы это любим найдем крайние левые нижние точки обоих наших
[51:31.700 --> 51:41.460]  многугольников м1 м2 значит то есть возьмем самой левой точки если их несколько то есть
[51:41.460 --> 51:45.780]  если скажем вот такая вертикальная сторона самой левой то возьмем среди них самый нижний
[51:45.780 --> 51:53.780]  выберем левой нижней точки то есть сначала самые левые потом самые нижние если таких несколько
[51:53.780 --> 52:07.900]  точки м1 м2 пусть это какие-то точки с1 с2 тогда легко понять что с1 плюс с2 это будет обязательно
[52:07.900 --> 52:16.220]  вершина нашего результата это обязательно вершина м1 плюс м2 вот ну грубо говоря потому
[52:16.220 --> 52:23.660]  что левее этой точки точно быть никого не может да потому что если есть что-то левее то абсциссо
[52:23.660 --> 52:27.700]  одно одного из слагаемых обязательно даже быть меньше чем абсциссо соответствующего там с1 или
[52:27.700 --> 52:32.580]  с2 а такого не бывает нет ни одной точки левее с1 нет ни одной точки левее с2 поэтому когда вы
[52:32.580 --> 52:37.540]  складываете две точки из м1 м2 то сумма их абсцисс будет хотя бы такая же как у с1
[52:37.540 --> 52:44.460]  с2 но и тоже самое нет ни одной точки внизу потому что при фиксированной сумме абсцисс у вас нет ни
[52:44.460 --> 52:48.900]  одной точки здесь и нет ни одной точки здесь потому что мы взяли самый левый самый левый нижний
[52:48.900 --> 52:56.940]  вот получается что что мы получили что относительно с1 плюс с2 нет ни одной точки внизу и нет ни одной
[52:56.940 --> 53:01.980]  точки левее вот тогда понятно что понятно что это вершина оболочки потому что можно
[53:01.980 --> 53:08.140]  просто провести вот такую вот прямую вот вот такую полуплоскость которая отсекает все что
[53:08.140 --> 53:13.620]  находится левее ну соответственно тогда с1 плюс с2 это какая-то точка на полуплоскости которая
[53:13.620 --> 53:20.540]  ограничивает наш многогульник с левой значит ассоединится в этой вершине а дальше будем делать
[53:20.540 --> 53:25.260]  следующее дальше будем делать что-то очень похоже на вот то что мы делали с нахождением диаметра
[53:25.260 --> 53:31.100]  смотрите мы нашли с 1 с 2 дальше утверждается работает следующий алгоритм давайте мы просто
[53:31.100 --> 53:36.860]  рассмотрим векторы соответствующие всем вот этим вот сторонам в порядке против всего стрелки то есть
[53:36.860 --> 53:43.820]  мы нарисуем эти векторы нарисуем эти векторы а дальше будем делать следующее из стартовой точки
[53:43.820 --> 53:50.820]  с1 плюс с2 будем смотреть значит выбираем из этих двух векторов из двух первых векторов самый крутой
[53:50.820 --> 53:56.180]  то есть тот который смотрит на его ли вниз но это понятно будет вот этот данный и тогда рисуем его
[53:56.500 --> 54:01.140]  из стартовой точки все его прошли переключились на следующий теперь опять сравнил вот этих два
[54:01.140 --> 54:06.640]  вектора первый вектор здесь и второй вектор здесь смотрим какой в них более крутой то есть кто из
[54:06.640 --> 54:13.580]  них смотрит больше вниз и конечно merde вот этот его и рисуем вот здесь и переключаем его на следующие
[54:13.580 --> 54:18.640]  теперь опять из 2 вектора мы сравниваем понимаем кто более крутой我们 по beb padding борщев низ
[54:18.640 --> 54:26.320]  вот таким горизонтальным. Переключаем. Затем будет вот этот вектор. Затем будет вот этот вектор.
[54:26.320 --> 54:33.760]  Потом потом вертикальный. Вертикальный отрезок. Ну и здесь там что-то остаётся. Давайте я там
[54:33.760 --> 54:40.800]  дорисую как получится. Вот так, вот так, вот так. То есть я просто иду в порядке, в точно таком же
[54:40.800 --> 54:46.800]  порядке обхода против всего стрелки обольтного угольника и записываю в качестве новой стороны
[54:46.800 --> 54:53.640]  ту из сторон, которая наиболее крутая. То есть то, что векторное произведение от нее до следующей
[54:53.640 --> 54:59.200]  положительно. То есть я взял по сути два вектора. Вот это вот у и в. И что значит, что у на одном
[54:59.200 --> 55:07.200]  сете раньше, чем в? Это значит, что у кросс в положительно. То есть вращение от у к в против
[55:07.200 --> 55:19.640]  всего стрелки. То есть если кросс у в, если кросс двух сторон больше нуля, то у нужно расположить раньше в.
[55:19.640 --> 55:31.720]  Нужно расположить раньше. Вот такое говорим. То есть просто проходим по сути у нас есть два
[55:31.720 --> 55:36.360]  указателя. Указатель на сторону первого ногового угольника, указатель на сторону второго. Смотрим
[55:36.360 --> 55:41.640]  знак векторного произведения между ними. И если он положительный, тогда выписываем в сторону первого
[55:41.640 --> 55:46.360]  ногового угольника. Иначе второго. Ну и сдвигаем указатель в том ногового угольника, который мы
[55:46.360 --> 55:51.760]  прошли в сторону, в котором мы прошли в сторону. Вот легко понять, что мы, конечно же, обязательно
[55:51.760 --> 55:56.640]  замкнемся. То есть обязательно придем в ту же точку, где начали. Ну просто потому что, скажем,
[55:56.640 --> 56:02.440]  сумма вот этих векторов это ноль, потому что мы прошли какой-то круг и вернулись туда не начать.
[56:02.440 --> 56:06.880]  Сумма векторов, сумма сторон первого ногового угольника это ноль. Тоже самое сумма сторон
[56:06.880 --> 56:11.200]  второго ногового угольника это ноль. Ну а здесь мы в каком-то порядке просто прочередовали стороны
[56:11.200 --> 56:15.520]  первого ногового угольника. Понятно, что их сумма от этого не поменялась. Поэтому стартовая точка будет
[56:15.520 --> 56:21.520]  равна конечному. Мы обязательно вернемся в ту же точку, откуда начали, получим какой-то
[56:21.520 --> 56:27.120]  ногового угольника. Ну и понятно, что он выпухлый, потому что у меня как раз стороны будут упорядчены в
[56:27.120 --> 56:33.720]  порядке убывания крутизны. То есть сначала самая крутая больше всего вниз, потом чуть более пологая,
[56:33.720 --> 56:38.800]  чуть более пологая, потом вообще оно выворачивается в ту сторону и так далее и так далее. То есть понятно,
[56:38.800 --> 56:42.840]  что это будет выпухлый ногового угольник. Потому что просто его стороны, как раз мы записываем
[56:42.840 --> 56:47.400]  стороны в таком порядке, чтобы кросс всегда был положительным. То есть между двумя последовательными
[56:47.520 --> 56:52.600]  сторонами вот это вот скажем и вот это. Кросс обязательно будет положительным. Тогда это просто выпухлый
[56:52.600 --> 57:00.360]  ногового угольник. Вот это будет выпухлый ногового угольник. Так, ну и осталось понять, что это действительно
[57:00.360 --> 57:06.800]  будет сумма Минковского. Что это будет действительно сумма Минковского и наш алгоритм не обманывает.
[57:06.800 --> 57:13.440]  Он не строит какую-то фигню, а на самом деле строит настоящую сумму Минковского. Ну здесь можно, например,
[57:13.440 --> 57:19.760]  рассуждать так. Давайте мы построим настоящую сумму Минковского. Давайте ее синий нарисуем. Как она
[57:19.760 --> 57:25.120]  выглядит? Мы уже поняли, что вот эта вот точка с1 плюс с2 это обязательно вершина суммы Минковского.
[57:25.120 --> 57:30.000]  Ну и соответственно нет никого левее, нет никого ниже. Хорошо, давайте начнем строить наш
[57:30.000 --> 57:34.640]  многоугольник. Ну и пусть он скажем, то есть будем рисовать его стороны в порядке против часовой
[57:34.640 --> 57:39.680]  стрелки и пусть несколько, скажем, первых сторон совпадет. То есть скажем вот это вот равно вот
[57:39.680 --> 57:45.880]  этому. Да, то есть у нас начало одинаковое. Начало вот такое одинаковое. А дальше смотри, что может
[57:45.880 --> 57:52.520]  быть? Какая может быть следующая сторона? Понятно, что она не может идти левее, чем вот этот вот красный
[57:52.520 --> 57:57.080]  вектор. Потому что, ну, понятное дело, мы построили какой-то многоугольник, и он, ну, почти очевидно,
[57:57.080 --> 58:04.280]  вложен в М1 плюс М2. Потому что, по сути, значит, что мы делали, когда строили вот этот вот красный
[58:04.280 --> 58:09.640]  многоугольник, когда мы обходили контуры наших многоугольников, мы, по сути, фиксировали какую-то
[58:09.640 --> 58:15.120]  вершину одного многоугольника и прикладывали к ней вектор равной стороне второго многоугольника. То
[58:15.120 --> 58:19.680]  есть мы стоим в какой-то точке, да, и прикладываем, скажем, вот здесь, прикладываем вот этот вектор.
[58:19.680 --> 58:24.840]  Ну вот, собственно, мы его здесь нарисовали. Поэтому то, что мы рисуем красными стрелочками, это точно
[58:24.840 --> 58:28.720]  лежит в сумме Минковского. Да, красный многоугольник, который мы построили, который мы, собственно,
[58:28.720 --> 58:33.840]  проверяем на то, что он является суммой Минковского в точности, он точно в нее вложен. То есть все,
[58:33.840 --> 58:38.520]  что мы нарисовали, это точно какое-то подношение суммы Минковского. Вот. Ну и тогда, соответственно,
[58:38.520 --> 58:43.400]  если у меня есть какое-то расхождение суммы Минковского, то не может быть такого, что, ну,
[58:43.400 --> 58:48.600]  отрезок следующая сторона ведет вот куда-то сюда в обнутренность, ну или там туда. Потому что просто,
[58:48.600 --> 58:53.320]  ну, вот это же лежит в сумме Минковского. Тогда мне нужно эту сторону точно содержать. Ну а если я
[58:53.320 --> 58:58.280]  пойду сюда, то я ее никак не буду содержать. Да, поэтому если отличие есть, то оно обязательно,
[58:58.280 --> 59:08.120]  как бы, ну, правее, что ли, чем, ну, правее в смысле вот этот кросс будет, вот такой угол поворота будет
[59:08.120 --> 59:13.400]  положительный, на кросс будет положительный, правее, чем наша сторона, которую мы построили
[59:13.400 --> 59:21.280]  нашим алгоритмом. Вот давайте поймем, что такого быть не может. А для этого, наверное, мне нужно
[59:21.280 --> 59:28.200]  будет новый слайд, и я немножко перерисую картинку. Значит, что было? Мы как-то там строили
[59:28.200 --> 59:36.120]  куклу суммы Минковского, нарисовали что-то такое, а в решении сумма вот такая. Вот так,
[59:36.120 --> 59:40.360]  а следующая сторона какая-нибудь вот такая, да, то есть более, более крутая, чем наши отрезы,
[59:40.360 --> 59:49.680]  которые мы нашли. Вот, ну хорошо. Как такое может быть? Давайте поймем, вот, давайте посмотрим на эту
[59:49.680 --> 59:55.720]  точку. Мы понимаем, что опять вершина нашего выпуклого многогольника, вершина М1 плюс М2.
[59:55.720 --> 01:00:03.600]  Вершина М1 плюс М2. Ну, раз эта вершина М1 плюс М2, то это какая-то вершина выпуклого
[01:00:03.600 --> 01:00:09.320]  оболочки, да, то есть мы понимаем, что М1 плюс М2 — это выпуклая оболочка множества сумм каких-то
[01:00:09.320 --> 01:00:14.720]  пар, пар вершины наших двух многогольников. Значит, эта вершина просто там какой-то П1, ну,
[01:00:14.720 --> 01:00:27.160]  П плюс Куб, да, где П — это вершина М1, Куб — это вершина М2. Потому что, повторюсь, да, мы стоим в
[01:00:27.160 --> 01:00:32.920]  какой-то вершине суммы Минковского, но мы знаем с вами, что сумма Минковского — это выпуклая оболочка
[01:00:32.920 --> 01:00:39.520]  сумм пар всех вершин М1 и М2. Поэтому раз это вершина, то это обязательно, ну, она в свою очередь
[01:00:39.520 --> 01:00:44.520]  является какой-то суммой. Вершина из первой, вершина из второй. Вот это П плюс Куб. Хорошо, давайте
[01:00:44.520 --> 01:00:49.840]  нарисуем П и Куб в наших двух многогольниках М1 и М2. Так, сейчас немножко перенесу.
[01:00:49.840 --> 01:01:03.960]  Вот сюда куда-нибудь. И нарисую, как выглядит П и Куб. Значит, П где-то здесь, Куб где-то здесь,
[01:01:03.960 --> 01:01:13.800]  и у них там какие-то вот такие стороны есть. Как мы построили вот этот красный вектор? Что это за
[01:01:13.800 --> 01:01:21.880]  красный вектор? Это как бы наиболее крутая сторона из вот этих двух, из вот этой и вот этой. Давайте
[01:01:21.880 --> 01:01:30.240]  я нарисую вот эту вот штучку другому как-нибудь вот так. Ну и тогда понятно, что вот этот просто
[01:01:30.240 --> 01:01:34.840]  отрезок красный взялся вот отсюда. То есть это когда мы стоим в пояку, мы сравним две стороны,
[01:01:34.840 --> 01:01:39.800]  вот эту вот и вот эту. Смотрим какая из них более крутая, то есть от которой до другой кросс
[01:01:39.800 --> 01:01:44.120]  положительный. Ну, соответственно, это оказывается вот этот отрезок. То есть мы его вот сюда и нарисовали.
[01:01:44.120 --> 01:01:49.680]  Тогда вопрос, как мы могли получить вот этот синий отрезок? Откуда он мог взяться? Почему он может
[01:01:49.680 --> 01:01:57.040]  лежать в сумме Минковского? Неформально нам нужно как бы взять еще более крутое что-то, либо вот здесь,
[01:01:57.040 --> 01:02:02.680]  либо вот здесь. Но такого понятно быть не может. То есть мы и так находимся вот в каком-то том углу,
[01:02:02.680 --> 01:02:07.600]  значит мы не можем взять что-то более крутое, чем соответственно наиболее крутая из этих двух сторон.
[01:02:07.600 --> 01:02:14.560]  Значит это неформально. Чуть более формально давайте рассмотрим, как может получаться вот этот
[01:02:14.560 --> 01:02:21.840]  синий вектор. Ну, не знаю, давайте возьмем вот эту вершинку, вот эту вторую вершинку. Это обязательно
[01:02:21.840 --> 01:02:29.760]  какая-то сумма двух точек. Так, можно пить опять буквы. Давайте R1 плюс R2. То есть это какая-то
[01:02:29.760 --> 01:02:34.840]  точка в первом многугольнике, какая-то точка во втором многугольнике. Какая-то сумма, вот этот
[01:02:34.840 --> 01:02:41.920]  конец и него. R1 плюс R2. То есть, смотрите, мы взяли, сложили две вектора, из P в R1 и из Q в R2,
[01:02:41.920 --> 01:02:56.040]  и получили синий вектор из P плюс Q в R1 плюс R2. Значит, сумма векторов P R1 и Q R2. Это вот этот наш
[01:02:56.040 --> 01:03:08.760]  синий вектор с началом в PQ и концом в R1 плюс R2. Вот, ну тогда надо понять, что этот вектор, он не может
[01:03:08.760 --> 01:03:15.440]  быть круче, чем, ну, наиболее крутой из этих двух сторон. Да, то есть, не более крутой, чем вот этот
[01:03:15.440 --> 01:03:24.480]  красный вектор. Чем вот этот красный вектор. Так, ну, для этого давайте мы сделаем следующее. Значит,
[01:03:24.480 --> 01:03:29.920]  давайте введем здесь какие-то, давайте мне нужна какая-то буква здесь еще будет. Давайте, это будет
[01:03:29.920 --> 01:03:40.120]  точка A, это точка B. Тогда это будет точка A плюс Q. Да, потому что мы написали эту сторону, то есть, по
[01:03:40.120 --> 01:03:45.640]  сути, мы взяли вот этот вот конец, конец того ибра, написали здесь A плюс Q. Ну, тогда, смотрите,
[01:03:45.640 --> 01:04:02.400]  векторное произведение от P A до P R1, оно явно больше ибравно нуля. Да, потому что P A1 это какая-то
[01:04:02.400 --> 01:04:07.720]  сторона. Значит, если мы рассмотрим любую другую точку внутри нашего выпукла на гугольника M1,
[01:04:07.720 --> 01:04:13.720]  тогда направление поворота от P A до P R1 будет прочь всего стрелкой, то есть положитель,
[01:04:13.720 --> 01:04:25.800]  но не отрицатель. То же самое здесь. Cross QB и QR2 больше или равно нуля. Ну, или даже можно
[01:04:25.800 --> 01:04:30.160]  рисовать так. Если я вот здесь нарисую вот этот наш вектор, давайте я вот этот вектор обозначу за
[01:04:30.160 --> 01:04:37.800]  какой-нибудь U. Вот это будет вектор U. Тогда, если его здесь нарисую тоже в этой точке, то он будет
[01:04:37.800 --> 01:04:46.320]  как бы еще более крутой, чем B, поэтому вот этот векторное произведение Cross U и QR2 будет подавно
[01:04:46.320 --> 01:04:51.720]  больше нуля. То есть если я заменю вот здесь вот в этом произведении QB на еще более крутой
[01:04:51.720 --> 01:04:57.400]  вектор U, то есть который получается еще поворотом почасовой относительно QB, то тогда я получу
[01:04:57.400 --> 01:05:03.800]  заведомо еще больше ибравное векторное произведение. Так, ну и тогда что у меня получилось? У меня
[01:05:03.800 --> 01:05:22.920]  получилось, что Cross U PR1 больше нуля, Cross U QR2 больше нуля. Так, ну и тогда я хочу как-то доказать,
[01:05:22.920 --> 01:05:34.120]  что Cross, то есть мы по сути что хотим доказать? Мы хотим доказать, что Cross U, да, потому что вот
[01:05:34.120 --> 01:05:45.000]  этот вектор это U, а здесь мне нужен вектор как раз вот это, да, P plus Q, P plus Q PR1 plus PR2. Вот если я
[01:05:45.000 --> 01:05:50.040]  докажу, что такой векторное произведение больше нуля, тогда вот эта картинка не может иметь
[01:05:50.040 --> 01:05:55.480]  места, потому что раз здесь больше нуля, тогда, соответственно, наоборот, синий вектор, он
[01:05:55.480 --> 01:05:59.640]  может быть только левее, чем красный, потому что угол поворота здесь должен быть положительный,
[01:05:59.640 --> 01:06:04.800]  больше нуля, то есть тогда синий вектор должен быть левее. И как раз тогда получится наше
[01:06:04.800 --> 01:06:10.480]  доказательство, что, ну противоречие, у нас этот вектор R1, R2 не может торчать правее, чем вектор U,
[01:06:10.480 --> 01:06:19.120]  а красный, как раз у меня U. Так, ну, чего здесь нужно сделать? Ну, это, видимо, просто линейность
[01:06:19.120 --> 01:06:27.000]  векторного произведения, то есть если я вот эти вот два неравенства сложу, сейчас, одну секунду, да,
[01:06:27.000 --> 01:06:33.120]  значит, когда я складываю вот эти два неравенства, легко понять, что векторное произведение у нас,
[01:06:33.120 --> 01:06:44.600]  эта штука линейная, значит, мы получим кросс U и, скажем, PR1 плюс QR2 больше равно нуля, ну а вот
[01:06:44.600 --> 01:06:49.080]  этот вектор, это как раз представляется в виде суммы PR1 плюс QR2, поэтому, собственно, мы отсюда
[01:06:49.080 --> 01:06:54.720]  сразу немедленно следует, что вот такой кросс больше равен нуля, а значит наш вектор синий,
[01:06:54.720 --> 01:07:02.760]  он не может находиться правее, чем красный вектор U. Вот это формализм. Мораль очень простая.
[01:07:02.760 --> 01:07:08.840]  Построенный нами многоугольник действительно является суммой Минковского R1 плюс R2, потому что,
[01:07:08.840 --> 01:07:12.840]  если не так, мы рассмотрим какое-то первое различие, то есть когда мы нарисовали, когда наш алгоритм
[01:07:12.840 --> 01:07:18.000]  нарисовал вектор U, а правильный вектор какой-то более правый, да, вот такой более крутой R1 плюс R2.
[01:07:18.000 --> 01:07:23.640]  Ну, тогда, значит, если все аккуратно проанализировать, то мы можем понять, что вот этот угол поворота не
[01:07:23.640 --> 01:07:29.760]  может быть в ту сторону, да, не может быть поворот от U к вот этому вектору по часовой
[01:07:29.760 --> 01:07:33.960]  стрелке. Он обязательно может быть только против, ну, потому что U вот такой самый экстремальный,
[01:07:33.960 --> 01:07:40.400]  да, и что R1, что R2 лежат как бы в порядке против часовой стрелки превращения относительно
[01:07:40.400 --> 01:07:45.480]  этого вектора U. Ну, значит их сумма, ввиду там линейности вектора напряжения, тоже должна
[01:07:45.480 --> 01:07:51.160]  жать левее, чем U, ну не строго левее, то есть вообще в оптимальном ответе, конечно, R1 плюс R2
[01:07:51.160 --> 01:07:57.400]  будет вот ровно такой вектор, вот такой вектор, совпадает с U. Вот, ну все, значит, мы доказали,
[01:07:57.400 --> 01:08:02.760]  что M1 плюс M2 это в точности сумма Минковского, и таким образом мы построили алгоритм,
[01:08:02.760 --> 01:08:17.640]  который находит сумму за линейное время. Вывод, предъявленный алгоритм строит сумму Минковского
[01:08:17.640 --> 01:08:28.400]  за, ну, я напишу от N плюс M, где N и M это количество вершин в наших нагугольниках M1 и M2. Ну, потому
[01:08:28.400 --> 01:08:31.960]  что по сути давайте вспомним, что мы сделали. Мы нашли крайние левые нижние точки в обоих
[01:08:32.340 --> 01:08:39.220]  нагугольниках, это просто линейный проход по всем точкам и нахождение вот этих halves. А дальше
[01:08:39.220 --> 01:08:44.660]  мы, значит, смотрим у нас есть два указателя, один указатель на сторону первого маг hash
[01:08:44.660 --> 01:08:49.480]  и второй маг hash. Смотрим, какая из них более крутая, то есть от которой до другой CROSS
[01:08:49.480 --> 01:08:54.300]  положительной и выписываем ее и задвигаем указатель. То есть, по сути, мы просто один раз
[01:08:54.300 --> 01:08:58.360]  прошли первый маг hash, один раз прошли второй маг hash, ну и в каком-то порядке написали их
[01:08:58.360 --> 01:09:05.120]  тогда получается, конечно, что время работы линейно, время работы линейно. Вот такой
[01:09:05.120 --> 01:09:17.560]  прелестный алгоритм получился. Применение. Первое применение такое, проверить,
[01:09:17.560 --> 01:09:26.280]  пересекаются ли два выпуклах многоугольника. Проверить, пересекаются ли два выпуклах многоугольника.
[01:09:26.280 --> 01:09:38.520]  М1, М2. Значит, решение такое, смотрите, что такое пересекаемость. Это значит, что есть точка,
[01:09:38.520 --> 01:09:46.240]  скажем, P, лежащая и там, и там. P, лежащая в М1, и P, лежащая в М2. Но тогда, если я смотрю
[01:09:46.240 --> 01:09:54.640]  разность Минковского М1-М2, то есть множество всех разностей А-Б, где А из М1, Б из М2,
[01:09:54.640 --> 01:10:02.200]  то мне нужно просто проверить, лежит ли в этом многоугольнике точка 0. Потому что как раз P-P будет
[01:10:02.200 --> 01:10:11.760]  равно 0. В итоге, пересекаемость, условия того, что они пересекаются, равносильно тому, что точка
[01:10:11.760 --> 01:10:19.840]  0, 0 лежит в многоугольнике М1-М2. А чтобы посчитать разность Минковского, можно просто посчитать
[01:10:19.840 --> 01:10:26.280]  сумму Минковского с отраженным многоугольником М2. Я просто, ну там, меня все координатно,
[01:10:26.280 --> 01:10:33.640]  домножаю все координаты на минус 1. Получается там, по сути, отраженный относительно 0, 0 многоугольник.
[01:10:33.640 --> 01:10:39.960]  Главное, что он по-прежнему выпуклый, по-прежнему можно его обойти в нужном порядке, ну и сложить
[01:10:39.960 --> 01:10:43.720]  с нашим многоугольником М1 за линейное время. А потом, если у меня есть какой-то выпуклый
[01:10:43.720 --> 01:10:48.160]  многоугольник, вот этот результат. Мне остается проверить, что точка 0, 0 лежит внутри нашего
[01:10:48.160 --> 01:10:54.920]  выпуклого многоугольника. Ну это уже простая задача. В частности, на семинаре вы должны были
[01:10:54.920 --> 01:10:59.080]  обсуждать, как проверить, что точка лежит внутри выпуклого многоугольника. Это можно делать вообще
[01:10:59.080 --> 01:11:05.040]  бинпоиском. Ну короче, мы свели какой-то более простую задачу принадлежности точки к
[01:11:05.040 --> 01:11:12.600]  многоугольнику, и это уже как-то решается более просто. Вот, второе применение это, ну обобщение,
[01:11:12.600 --> 01:11:22.800]  на самом деле предыдущего, это расстояние между двумя, так, а я сказал, что они выпуклые? Да, сказал,
[01:11:22.800 --> 01:11:32.120]  конечно. Расстояние между двумя выпуклыми многоугольниками. Ну здесь идея такая же, что такое расстояние,
[01:11:32.120 --> 01:11:42.840]  это distance, там скажем, где p из m1, q из m2. Ну а distance это, на самом деле, просто модуль разности
[01:11:42.840 --> 01:11:50.640]  p-q, ефидова норма, вектора p-q. Поэтому, если мы вновь построим разность Минковского, то мне
[01:11:50.640 --> 01:11:57.080]  нужно в этом многоугольнике найти точку, ну по сути, с минимальным расстоянием до нуля. Или там
[01:11:57.120 --> 01:12:11.160]  просто с минимальным модулем. В этом многоугольнике нужно найти точку с минимальной, я напишу так,
[01:12:11.160 --> 01:12:25.560]  ефклидовой нормой. То есть, с минимальным расстоянием до нуля. Расстояние до нуля,
[01:12:26.040 --> 01:12:30.580]  это в точности ефклидова норма каждой точки. Вот. Ну, а расстояние от... То есть, по сути,
[01:12:30.580 --> 01:12:35.360]  мне нужно найти кратчайшее расстояние от точки для многоугольника. Есть точка 00, есть вот этот
[01:12:35.360 --> 01:12:40.420]  выпуклый многоугольник, мне нужно найти расстояние между ними. Ну а расстояние между ними можно
[01:12:40.420 --> 01:12:53.200]  искать, как расстояние от 00 до всех сторон многоугольника. Это расстояние равно расстоянию от 00 до
[01:12:53.200 --> 01:13:00.080]  до ближайшей стороны. То есть я могу просто перебрать все стороны нашего многоугольника m1-m2,
[01:13:00.080 --> 01:13:08.240]  перебрать все стороны, найти расстояние от точки 0,0 до каждой стороны, и взять из них минимум.
[01:13:08.240 --> 01:13:12.960]  Ну расстояние от точки до отрезка, потому что по сути каждой страны просто отрезок. Расстояние
[01:13:12.960 --> 01:13:17.440]  от точки до отрезка уже считается тривиальным, нужно опустить перпендикуляр. Если перпендикуляр
[01:13:17.440 --> 01:13:26.760]  попал на отрезок, то это есть расстояние. Если не попал, тогда расстояние равно минимуму из этих
[01:13:26.760 --> 01:13:31.280]  двух отрезков. То есть расстояние обязательно достигается в вершине отрезка, если перпендикуляр
[01:13:31.280 --> 01:13:38.360]  не попал на сторону. То есть мы опять свели задачу к более простой, к задаче поиска расстояния
[01:13:38.360 --> 01:13:45.200]  от 0,0 до всех сторон. Это уже элементарная задача, там просто какие-то уравнения решать
[01:13:45.200 --> 01:13:49.520]  и найти расстояние. Вот такие применения.
[01:13:49.520 --> 01:13:52.520]  Такие применения.
[01:14:00.920 --> 01:14:01.640]  Хорошо.
[01:14:07.640 --> 01:14:13.520]  Ну давайте, я не знаю, давайте я отскрою упражнение такое, что если мы просматриваем задачу
[01:14:13.520 --> 01:14:19.240]  суммы Минковского в двух не выпуклах многоугольниках, М1 и М2 не выпуклые многоугольники,
[01:14:19.240 --> 01:14:30.480]  и нам все равно хочется найти их сумму, а хочется найти М1 и М2. Тогда эту задачу можно решить так.
[01:14:30.480 --> 01:14:36.040]  Можно триангулировать оба наших многоугольника, благо, триангулировать мы уже умеем за
[01:14:36.040 --> 01:14:42.600]  клажитичное время от количества вершин. Ну а дальше, поскольку каждый многоугольник у меня
[01:14:42.760 --> 01:14:48.760]  разбился на трикольнике, дальше могу просто по парам все триугольники сложить и построить в конце выпуклую оболочку.
[01:14:50.160 --> 01:14:56.160]  А благо, триугольники тоже выпуклые фигуры складывать, соответственно, трикольники мы уже умеем.
[01:14:56.160 --> 01:15:00.160]  Поэтому мы все пары трикольников сложим, трикольник из М1, трикольник из М2 сложили
[01:15:00.160 --> 01:15:04.060]  и потом в конце построили выпуклую оболочку... Нет, выпуклую оболочку – это неверное,
[01:15:04.060 --> 01:15:08.560]  мы сложили так все трикольники, про выпуклую извини. Это я глупо сказал, конечно.
[01:15:08.560 --> 01:15:13.160]  Мы так сложились в паре треугольников, получили какие-то куски областей их результата,
[01:15:13.160 --> 01:15:14.960]  но дальше их нужно просто объединить,
[01:15:14.960 --> 01:15:17.960]  то есть там, конечно, могут быть какие-то невыплости,
[01:15:17.960 --> 01:15:21.360]  вот главное, что нужно просто их все объединить в один большинный треугольник.
[01:15:21.360 --> 01:15:25.560]  Тогда решение будет такое, давайте это запишем,
[01:15:25.560 --> 01:15:33.160]  что мы триангулируем м1 и м2,
[01:15:33.160 --> 01:15:38.160]  затем попарно складываем эти треугольники по Минковскому,
[01:15:38.160 --> 01:15:47.160]  складываем по Минковскому эти треугольники,
[01:15:47.160 --> 01:15:51.160]  ну и в конце нужно как-то объединить это все в одну фигуру,
[01:15:51.160 --> 01:15:58.160]  в конце объединить в одну фигуру.
[01:15:58.160 --> 01:16:02.160]  Ну и, собственно, в качестве упражнения можете понять, как их там объединить,
[01:16:02.160 --> 01:16:07.160]  то есть по сути у вас на плоскости нарисовано несколько многоугольников,
[01:16:07.160 --> 01:16:10.160]  каждая из которых это сумма двух треугольников, но это уже неважно,
[01:16:10.160 --> 01:16:14.160]  есть несколько многоугольников, и вам нужно понять, какую область они ограничивают,
[01:16:14.160 --> 01:16:17.160]  если их все объединить, какую область они ограничивают.
[01:16:17.160 --> 01:16:20.160]  Вот это, на самом деле, простая задача, например, на графы,
[01:16:20.160 --> 01:16:24.160]  вы просто в каждой вершине смотрите, какие отрезки из нее выходят,
[01:16:24.160 --> 01:16:26.160]  смотрите там два самых экстремальных,
[01:16:26.160 --> 01:16:31.160]  вот это там будут две стороны вашей границы, вашего многоугольника.
[01:16:31.160 --> 01:16:32.160]  Вот и все.
[01:16:32.160 --> 01:16:35.160]  Надо понять, как это делать, и плюс понять, за сколько это работает,
[01:16:35.160 --> 01:16:38.160]  а симптотика, какая у этого дело,
[01:16:38.160 --> 01:16:43.160]  и как вот это делать объединение в одну фигуру.
[01:16:43.160 --> 01:16:45.160]  Так, хорошо.
[01:16:45.160 --> 01:16:48.160]  То есть, в принципе, сумму можно делать и на невыпуклых,
[01:16:48.160 --> 01:16:54.160]  на невыпуклых с помощью того, что мы уже изучили, с помощью треуголяции.
[01:16:54.160 --> 01:16:56.160]  Так.
[01:17:00.160 --> 01:17:02.160]  Хорошо.
[01:17:02.160 --> 01:17:05.160]  Тогда третий сюжет, мы его уже полностью не успеем,
[01:17:05.160 --> 01:17:07.160]  но сколько успеем, только успеем.
[01:17:07.160 --> 01:17:11.160]  Это проверка принадлежности точки в многоугольнику.
[01:17:11.160 --> 01:17:19.160]  Проверка принадлежности точки в многоугольнику.
[01:17:19.160 --> 01:17:22.160]  Это мы уже видели сегодня, когда нам нужно было понять,
[01:17:22.160 --> 01:17:25.160]  что принадлежит ли точка ноль-ноль в многоугольнике.
[01:17:25.160 --> 01:17:28.160]  Значит, упражнение семинарское,
[01:17:28.160 --> 01:17:32.160]  что если многоугольник выпуклый, то это можно делать за алгорифом.
[01:17:32.160 --> 01:17:39.160]  Если многоугольник выпуклый,
[01:17:39.160 --> 01:17:43.160]  то можно делать за алгорифом.
[01:17:43.160 --> 01:17:45.160]  Значит, идея очень простая.
[01:17:45.160 --> 01:17:48.160]  Давайте мы возьмем там левую нижнюю точку,
[01:17:48.160 --> 01:17:51.160]  посмотрим вот такую триангуляцию нашего многоугольника,
[01:17:51.160 --> 01:17:54.160]  ну и там бинпоиском определим тот,
[01:17:54.160 --> 01:17:59.160]  то есть по сути у меня весь многоугольник разбился на вот такие вот углы.
[01:17:59.160 --> 01:18:03.160]  Вот есть угол, вот этот первый, есть угол второй, есть угол третий.
[01:18:03.160 --> 01:18:05.160]  Давайте мы бинпоиском по этим углам определим,
[01:18:05.160 --> 01:18:10.160]  в каком из них, в каком секторе лежит наша точка,
[01:18:10.160 --> 01:18:12.160]  просто бинпоиск за алгорифом как раз.
[01:18:12.160 --> 01:18:16.160]  Ну и потом внутри, если мы знаем, что точка лежит внутри такого сектора,
[01:18:16.160 --> 01:18:18.160]  то нам нужно понять, лежит ли она внутри треугольника
[01:18:18.160 --> 01:18:21.160]  или она там где-то за пределами этого треугольника.
[01:18:21.160 --> 01:18:24.160]  Соответственно, за алгорифом мы определяем треугольник,
[01:18:24.160 --> 01:18:25.160]  в котором должна лежать наша вершина,
[01:18:25.160 --> 01:18:29.160]  и потом просто за от единицы проверяем, лежит ли точка внутри треугольника.
[01:18:29.160 --> 01:18:32.160]  Это уже совсем простая задача.
[01:18:32.160 --> 01:18:37.160]  Значит, есть решение также и для невыпуклого тоже через триангуляцию.
[01:18:37.160 --> 01:18:42.160]  Даже это не упражняет замечание.
[01:18:42.160 --> 01:18:44.160]  Я и так все сказал.
[01:18:44.160 --> 01:18:46.160]  Замечание.
[01:18:46.160 --> 01:18:50.160]  А если нагугольник не выпуклый,
[01:18:54.160 --> 01:18:57.160]  его можно, как мы любим, триангулировать.
[01:18:57.160 --> 01:19:01.160]  Его можно триангулировать.
[01:19:04.160 --> 01:19:06.160]  Ну, за квадрат.
[01:19:06.160 --> 01:19:09.160]  У нас был критик триангуляции за квадрат.
[01:19:09.160 --> 01:19:11.160]  А дальше давайте просто проверим точку,
[01:19:11.160 --> 01:19:14.160]  которую мы тестируем на принадлежность нагугольнику.
[01:19:14.160 --> 01:19:18.160]  Проверим, не лежит ли эта точка в одном из треугольников.
[01:19:21.160 --> 01:19:25.160]  Проверим точку на принадлежность
[01:19:28.160 --> 01:19:30.160]  всем треугольника.
[01:19:30.160 --> 01:19:33.160]  Ну и понятно, что раз мы исходы наш нагугольник разбили
[01:19:33.160 --> 01:19:35.160]  опять в множество каких-то треугольников,
[01:19:35.160 --> 01:19:37.160]  их, кстати, будет линейное количество,
[01:19:37.160 --> 01:19:39.160]  даже, на самом деле, N-2 всегда будет.
[01:19:39.160 --> 01:19:41.160]  Треугольников в треугольнике всегда линейное количество
[01:19:41.160 --> 01:19:42.160]  числа вершин.
[01:19:42.160 --> 01:19:44.160]  Ну и соответственно, раз мы разбили все на треугольнике,
[01:19:44.160 --> 01:19:46.160]  давайте просто переберем все треугольники,
[01:19:46.160 --> 01:19:48.160]  попытаемся проверить ли есть точка внутри одного из них.
[01:19:48.160 --> 01:19:50.160]  Если лежит, то значит, есть во всем нагугольнике.
[01:19:50.160 --> 01:19:53.160]  Если ни в одном не лежит, значит, она лежит вне нагугольника.
[01:19:53.160 --> 01:19:56.160]  Вот и все. То есть мы за N в квадрате триангулировали,
[01:19:56.160 --> 01:19:58.160]  и потом за линейное время
[01:19:58.160 --> 01:20:00.160]  спросили, лежит ли точка в каждом из треугольников.
[01:20:00.160 --> 01:20:02.160]  Там это определили.
[01:20:07.160 --> 01:20:16.160]  По этому поняли жидкие точки в многогоннике и линии.
[01:20:16.160 --> 01:20:18.160]  Вот, хорошо.
[01:20:18.160 --> 01:20:20.160]  Получилось решение за квадрата.
[01:20:20.160 --> 01:20:22.160]  То есть мне нужна триангуляция,
[01:20:22.160 --> 01:20:25.160]  и потом в каждом треугольнике проверить решительная линия.
[01:20:25.160 --> 01:20:27.160]  Есть другое решение.
[01:20:27.160 --> 01:20:29.160]  Есть решение за линией на время.
[01:20:29.160 --> 01:20:32.160]  Понятно дело, что мы решаем уже в случае не выпуклого многогонника,
[01:20:32.160 --> 01:20:34.160]  или, по крайней мере, не обязательно выпуклого.
[01:20:34.160 --> 01:20:37.160]  Потому что если он выпуклый, то мы можем делать это за алгоритм.
[01:20:37.160 --> 01:20:40.160]  Значит, решение за от.
[01:20:40.160 --> 01:20:42.160]  Решение такое.
[01:20:42.160 --> 01:20:47.160]  Давайте мы пройдемся по всем сторонам многогонника.
[01:20:47.160 --> 01:20:50.160]  Вот есть СКП, который мы тестируем на принадлежность.
[01:20:50.160 --> 01:20:52.160]  Пройдемся по всем сторонам АВ.
[01:20:52.160 --> 01:20:57.160]  И померим ориентированный угол из ПА в ПВ.
[01:20:57.160 --> 01:21:01.160]  То есть, ну, поймем градусную меру вот этого ориентированного угла.
[01:21:01.160 --> 01:21:03.160]  И все их сложим.
[01:21:03.160 --> 01:21:08.160]  То есть мы узнаем, с помощью атан-2, с помощью какой-то эффективной функции,
[01:21:08.160 --> 01:21:11.160]  узнаем значение этого угла и его ориентацию.
[01:21:11.160 --> 01:21:13.160]  То есть положить или отрицать.
[01:21:13.160 --> 01:21:18.160]  Значит, знаем величину угла.
[01:21:18.160 --> 01:21:22.160]  Все такие величины сложим по всем сторонам.
[01:21:22.160 --> 01:21:24.160]  Все их сложим.
[01:21:24.160 --> 01:21:27.160]  Тогда я ожидаю следующее, что если эта сумма равна нулю,
[01:21:27.160 --> 01:21:29.160]  то точка лежит вне многогонника.
[01:21:29.160 --> 01:21:31.160]  Это соответствует вот такому случаю.
[01:21:31.160 --> 01:21:36.160]  Если П вне, то смотрите, что происходит, когда мы проходим...
[01:21:36.160 --> 01:21:40.160]  Давайте я веду ориентацию на многогоннике.
[01:21:40.160 --> 01:21:45.160]  Теперь представьте, что я провожу вот эти вот отрезки в вершины многогонника
[01:21:45.160 --> 01:21:48.160]  и складываю все вот эти вот углы.
[01:21:48.160 --> 01:21:51.160]  Ну, здесь там будет угол, не знаю какой, вот такой.
[01:21:51.160 --> 01:21:53.160]  Потом будет такой угол, он его отчасти отменит.
[01:21:53.160 --> 01:21:55.160]  Потом будет такой угол еще немножко отменит.
[01:21:55.160 --> 01:21:57.160]  Такой угол еще отменит, такой угол еще отменит.
[01:21:57.160 --> 01:21:59.160]  В итоге сумма будет равна нулю.
[01:21:59.160 --> 01:22:02.160]  То есть если он там какой-то не выпуклый, какой-то более сложный,
[01:22:02.160 --> 01:22:04.160]  то, собственно, логика та же самая.
[01:22:04.160 --> 01:22:07.160]  У нас сначала какой-то угол, потом его частично занулили,
[01:22:07.160 --> 01:22:10.160]  потом обратно прибавили, занулили, прибавили, и так далее.
[01:22:10.160 --> 01:22:12.160]  В итоге будет нул.
[01:22:12.160 --> 01:22:15.160]  Ну, а наоборот, если точка лежит внутри многоугольника,
[01:22:15.160 --> 01:22:19.160]  то сумма этих углов обязательно будет кратно 2П.
[01:22:19.160 --> 01:22:22.160]  Видимо, просто равна плюс-минус 2П,
[01:22:22.160 --> 01:22:25.160]  но да, то есть если наугольник простой, то будет просто плюс или минус 2П.
[01:22:25.160 --> 01:22:34.160]  Потому что вот в этом случае у меня что происходит?
[01:22:34.160 --> 01:22:35.160]  Вот есть точка, я провожу вот эти все радиус-векторы во все вершины.
[01:22:35.160 --> 01:22:37.160]  Считаю, этот угол, он будет такой угол.
[01:22:37.160 --> 01:22:39.160]  Такой угол здесь у него немножко отменится.
[01:22:39.160 --> 01:22:40.160]  Здесь он вернется.
[01:22:40.160 --> 01:22:43.160]  Еще добавится такой и такой.
[01:22:43.160 --> 01:22:46.160]  В итоге, когда я вращаю такой вектор, он у меня прокрутится 2П радио.
[01:22:46.160 --> 01:22:55.160]  В итоге, когда я вращаю вот такой вот вектор, он у меня прокрутится 2p радиан, там 2p или минус 2p, в зависимости от направления обхода.
[01:22:55.160 --> 01:23:06.160]  А здесь, если точка была вне многогольника, и я вращал вот этот радиус-вектор по всем вершинам, то он, собственно, нисколько не прокрутился, он как бы где начал, там и закончил, и ни разу точку p не опаясывает.
[01:23:06.160 --> 01:23:10.160]  Ни разу точку p не опаясывает, он просто там где-то болтается и заканчивает там где-то иначе.
[01:23:10.160 --> 01:23:15.160]  В итоге, просто по ударе сумме углов, я могу определить ответ.
[01:23:15.160 --> 01:23:38.160]  Давайте запишем, что если сумма углов равна плюс-минус 2p, то точка внутри, то p внутри, иначе если сумма равна нулю снаружи.
[01:23:40.160 --> 01:23:58.160]  Мы не будем доказывать корректность, потому что здесь нужны какие-то, то есть это более-менее очевидно из таких рукомахательских соображений, что там какой-то вектор плавает, и что если внутри, то он должен целиком пройтись, хотя бы один раз обернуть всю окружность, иначе он ни разу не обернет.
[01:23:58.160 --> 01:24:13.160]  Вот, ну там для формального доказательства нужны какие-то теоремы в стиле там, теорема Жардана про кривую, что есть у вас здесь кривая, то она разделяет плоскость на две части, ну замкнутая кривая, то она простая, то она разбивает плоскость на две части.
[01:24:13.160 --> 01:24:18.160]  Вот, ну короче, мы не будем в это врезать, вроде так на пальцах все равно понятно, что это работает.
[01:24:18.160 --> 01:24:27.160]  В итоге, значит мы просуммировали сумму всех углов, если она ноль, то точка снаружи, если она не ноль, то она внутри.
[01:24:27.160 --> 01:24:41.160]  Значит, проблема две. Первая проблема этого решения в том, что тригонометрия, тригонометрия это, ну это просто, я напишу так, тяжело.
[01:24:41.160 --> 01:24:49.160]  Тяжело в том смысле, что операции вот эти вот все там атан-2 и все вот эти вот операции вычислений углов, они ну в общем работают довольно долго.
[01:24:49.160 --> 01:24:55.160]  То есть если мы хотим намного таких запросов отвечать, то лучше от тригонометрии избавляться.
[01:24:55.160 --> 01:25:04.160]  Ну если в общем сопрешенная проблема, это точность, это точность. То есть если мы сложим и получим там, не знаю, ну сумму явно ноль мы уж не получим, ну почем там ноль-ноль-один примерно.
[01:25:04.160 --> 01:25:08.160]  Ну понятно, что это к нулю конечно, да, и в принципе проблем нет.
[01:25:08.160 --> 01:25:15.160]  Но не знаю, если у вас там очень-очень много сторон, то в принципе можно накопиться такая огромная погрешность, что она ноль вашу превратит в 2П.
[01:25:15.160 --> 01:25:18.160]  Может накопиться такая погрешность, что она вам перевернет ответ.
[01:25:19.160 --> 01:25:21.160]  Этого конечно тоже хотелось бы избежать.
[01:25:22.160 --> 01:25:28.160]  Ну и вот в следующий раз мы решим обе эти проблемы и построим алгоритм, который вообще не переходит к не целым числу.
[01:25:28.160 --> 01:25:31.160]  Значит в следующий раз алгоритм в целых числах.
[01:25:35.160 --> 01:25:38.160]  Ну все тогда спасибо за внимание, извините, что задержал.
[01:25:38.160 --> 01:25:40.160]  И до следующего раза.
