[00:00.000 --> 00:15.000]  Сегодня всерьез поговорим про диаграмму Воронова.
[00:15.000 --> 00:23.000]  Задача называется обычно post-office problem.
[00:23.000 --> 00:28.000]  Представьте, что мы живем на плоскости.
[00:28.000 --> 00:30.000]  Город – это плоскость.
[00:30.000 --> 00:34.000]  В городе есть n почтовых отделений, которые в каких-то точках плоскости расположены.
[00:34.000 --> 00:38.000]  П1, П2, и так далее по n.
[00:38.000 --> 00:46.000]  Да, земля плоская у нас, живем на плоскости, и вот есть всего n почтовых отделений.
[00:46.000 --> 00:53.000]  Ну и нам надо понять, для каждого человека, если он хочет сходить на почту, то какое для него ближайшее почтовое отделение?
[00:53.000 --> 00:57.000]  То есть мы хотим в каком-то смысле разбить всю плоскость на n кусочков,
[00:57.000 --> 01:04.000]  так чтобы каждый кусочек говорил, что здесь ближе всего ходить сюда, на вытое отделение, для каждого i.
[01:04.000 --> 01:06.000]  Люди – это все точки.
[01:06.000 --> 01:10.000]  Люди – это все точки, да, типа мы живем на плоскости, но в какой-то точке человек прикреплен,
[01:10.000 --> 01:13.000]  и надо выбрать ближайшее почтовое отделение из этих n.
[01:13.000 --> 01:16.000]  Давайте картинку какую-нибудь нарисуем конкретную.
[01:24.000 --> 01:29.000]  Такое, если будет, тогда картинка будет какая-то вот такая.
[01:32.000 --> 01:35.000]  Значит, вот 5 почтовых отделений.
[01:36.000 --> 01:43.000]  Ну и соответственно, грани вот этого вот плоского разбиения, плоскости на какие-то куски,
[01:43.000 --> 01:49.000]  вот первая, вторая, третья, четвертая, пятая – это, собственно, те ячейки, которым предписано ходить в такое-то отделение.
[01:49.000 --> 01:53.000]  Здесь всем товарищам выгоднее всего приходить в первое, здесь во второе и так далее.
[01:53.000 --> 01:58.000]  Чувакам на границе одинаково выгодно ходить в те почтовые отделения, на границе которых они лежат.
[01:58.000 --> 02:02.000]  Скажем, вот этим чувакам одинаково близко идут по 1 и по 2,
[02:02.000 --> 02:07.000]  а вот этому чуваку, например, одинаково выгодно и по 2, и по 3, и по 5.
[02:12.000 --> 02:20.000]  Ну, все, соответственно, определение, что пусть у нас P – это набор каких-то точек на плоскости,
[02:20.000 --> 02:27.000]  по 1 и так далее Pn, для каждого I мы определяем ячейку диаграммы Варанова V от Pi,
[02:27.000 --> 02:36.000]  как множество таких точек плоскости, для которых расстояние до этой точки меньше, чем до всех остальных.
[02:36.000 --> 02:45.000]  Дист, купе итое, меньше ли обравно, дист, купе житое, для любого жи.
[02:47.000 --> 02:49.000]  Вот это ячейка диаграммы Варанова.
[02:58.000 --> 03:03.000]  Итое. Ну, соответственно, вся диаграмма Варанова – это набор ячеек просто.
[03:11.000 --> 03:18.000]  Ну, давайте напишу, что это P и набор ячеек V от P1 и так далее V от Pn.
[03:18.000 --> 03:27.000]  Вот, собственно, наша задача по P, по набору почтовых отделений, описать структуру всех ячеек.
[03:30.000 --> 03:35.000]  Вот, значит, для тех, кто только присоединился, я напоминаю задачу, которую мы уже когда-то видели,
[03:35.000 --> 03:39.000]  что у нас есть на плоскости n точек P1, P2 и так далее Pn.
[03:39.000 --> 03:43.000]  Мне нужно для каждого I определить те точки плоскости,
[03:43.000 --> 03:48.000]  которые ближе всего к итое точке, чем ко всем остальным.
[03:48.000 --> 03:51.000]  Что расстояние DUP и меньше ли обравно расстояние DUP и жи.
[03:51.000 --> 03:54.000]  Вот, поскольку здесь я уже много раз сказал слово «точка»,
[03:54.000 --> 03:57.000]  давайте разделим, давайте вот эти вот P-шки будем называть сайтами.
[04:01.000 --> 04:04.000]  Ну, от английского «сайт», просто «место» какое-то.
[04:04.000 --> 04:07.000]  Ну, не обязательно «сайт», который вы на интернете, просто какая-то локация.
[04:07.000 --> 04:08.000]  «Место». Вот.
[04:08.000 --> 04:10.000]  Ну, все остальные точки будем называть точками на плоскости,
[04:10.000 --> 04:13.000]  чтобы вот отличать точки, которые деление, которые P-шки.
[04:13.000 --> 04:14.000]  Вот просто точек.
[04:14.000 --> 04:19.000]  Я веду отдельное слово для точек измножения, на которые мы устроим диаграмму.
[04:20.000 --> 04:21.000]  Ну, вот.
[04:22.000 --> 04:26.000]  Значит, давайте докажем следующее простое утверждение про устройство нашей диаграммы.
[04:27.000 --> 04:29.000]  Кстати, мне нужна лемма.
[04:31.000 --> 04:33.000]  Давайте так попробуем в этот раз.
[04:33.000 --> 04:35.000]  Ну, мы с вами понимаем, что...
[04:36.000 --> 04:38.000]  Мы с вами уже видели, что каждый ящик из диаграмм Вороноу
[04:38.000 --> 04:40.000]  это пересечение на институтной полуплоскости,
[04:40.000 --> 04:42.000]  поэтому там это выпуклые фигуры,
[04:42.000 --> 04:46.000]  каждая из которых либо какой-то многоугольник, либо полоса, в худшем случае.
[04:46.000 --> 04:50.000]  Если две вот такие полуплоскости пересекаем, то полоса получается.
[04:50.000 --> 04:51.000]  Значит, ну вот, лемма.
[04:51.000 --> 04:57.000]  Я утверждаю, что в многоугольных фиграх на институте
[04:57.000 --> 04:59.000]  в ней не есть intensive function.
[04:59.000 --> 05:15.760]  Я утверждаю, что в диаграмме Воронова соседние многоугольники
[05:15.760 --> 05:26.760]  стыкуются ребро в ребро.
[05:26.760 --> 05:30.760]  Это значит, что если два многоугольника пересекаются, то они пересекаются по ребру или по точке.
[05:30.760 --> 05:33.760]  То есть, грубо говоря, не бывает вот таких вот картинок.
[05:33.760 --> 05:35.760]  Давайте что-нибудь вот такое нарисую.
[05:35.760 --> 05:40.760]  Один многоугольник, другой многоугольник.
[05:40.760 --> 05:45.760]  И третий выглядит как-то вот так вот, например.
[05:45.760 --> 05:51.760]  То есть, не может быть такого, что пересекающиеся многоугольники пересекаются по...
[05:51.760 --> 05:52.760]  Ну, не полностью по ребру.
[05:52.760 --> 05:57.760]  То есть, скажем, вот этот и этот пересекаются по части ребра.
[05:57.760 --> 06:00.760]  Вот. Я утверждаю, такого не бывает, что любые многоугольники, если пересекаются,
[06:00.760 --> 06:03.760]  то либо полностью по ребру обоих многоугольников, либо по точке.
[06:03.760 --> 06:10.760]  Значит, давайте это пропишем, что пересечение двух многоугольников
[06:10.760 --> 06:19.760]  это либо ребро обоих, либо вершина обоих. Вот так.
[06:19.760 --> 06:21.760]  Ну, доказательство простое.
[06:21.760 --> 06:27.760]  Давайте посмотрим, что такое пересечение двух ячеек, двух многоугольников.
[06:45.760 --> 06:47.760]  Вот оно пересечение.
[06:50.760 --> 06:54.760]  То есть, я утверждаю, что они пересекаются обязательно по куску серпера между ними.
[06:54.760 --> 06:57.760]  Между сайтами, которые их задают.
[07:00.760 --> 07:03.760]  Кусок серединного перпендикуляра.
[07:05.760 --> 07:07.760]  ПИ и ПЖ.
[07:07.760 --> 07:08.760]  Ну, понятно почему.
[07:08.760 --> 07:11.760]  Потому что точки здесь лежат равноудаленно от ПИ и ПЖ,
[07:11.760 --> 07:14.760]  поскольку они лежат в обоих многоугольниках, значит, они равноудалены,
[07:14.760 --> 07:16.760]  поэтому они не на серпере.
[07:16.760 --> 07:21.760]  Если я нарисую такую прямую, разделяющую ПИ и ПЖ на два равных кусочка,
[07:21.760 --> 07:27.760]  на отрезок, пересекающий пополам, то как раз вот граница разделения как раз на серпере лежит.
[07:27.760 --> 07:30.760]  Ну и все, а дальше давайте скажем следующее.
[07:30.760 --> 07:36.760]  Пусть, например, давайте выделим пересечение, относящееся к ПИ.
[07:36.760 --> 07:38.760]  Давайте рассмотрим любую другую точку.
[07:38.760 --> 07:40.760]  Ну, окей, давайте предположим...
[07:40.760 --> 07:41.760]  Сейчас.
[07:41.760 --> 07:46.760]  Значит, давайте скажем, что пусть АВ – это их пересечение.
[07:46.760 --> 07:51.760]  Давайте рассмотрим какую-то другую точку С вне этого отрезка
[07:51.760 --> 07:57.760]  и докажем, что она должна одновременно принадлежать обоим многоугольникам или не принадлежать.
[07:57.760 --> 08:00.760]  То есть как раз вот такой плохой ситуации не бывает, потому что что здесь плохо?
[08:00.760 --> 08:04.760]  Вот если я эти два пересеку, у меня границы пересечения будут АВ,
[08:04.760 --> 08:08.760]  а есть такая другая точка на этой прямой, лежащая в одном, но не в другом.
[08:08.760 --> 08:09.760]  Вот я уже такого не бывает.
[08:09.760 --> 08:10.760]  Ну а что?
[08:10.760 --> 08:15.760]  Если я возьму точку на этой прямой, то она одновременно либо лежит, либо не лежит в обоих.
[08:15.760 --> 08:17.760]  Вот давайте пойдем от противного.
[08:17.760 --> 08:19.760]  Пусть есть такая точка, ну или не обязательно от противного.
[08:19.760 --> 08:21.760]  Вот возьмем точку вне этого отрезка.
[08:21.760 --> 08:25.760]  Значит, она с одной стороны равна удалена от ПИ и ПЖ.
[08:25.760 --> 08:27.760]  С другой стороны, да, давайте пойдем от противного.
[08:27.760 --> 08:29.760]  Пусть она лежит в одном из них.
[08:29.760 --> 08:39.760]  Значит, пусть С не на отрезке АВ, пусть С, ну скажем, лежит в житой ячейке диаграммы Воронова.
[08:39.760 --> 08:46.760]  Значит, тогда это значит, что расстояние от С до ПЖ меньше всех остальных расстояний.
[08:46.760 --> 08:56.760]  Значит, расстояние от С до ПЖ меньше либо равно расстояние от С до ПК для любого К.
[08:56.760 --> 09:00.760]  Ну раз она лежит в такой-то ячейке, то значит ПЖ-то самое близкое.
[09:00.760 --> 09:05.760]  С одной стороны, с другой стороны, эта штука очевидно равна расстоянию от С до ПИ,
[09:05.760 --> 09:07.760]  потому что С на серпере.
[09:07.760 --> 09:11.760]  Ну раз она на серпере, то равна расстояние одинаковое вот эти вот.
[09:11.760 --> 09:13.760]  Ну значит, для ПИ тоже верно.
[09:13.760 --> 09:16.760]  Значит, для вот этой штуки верно то же самое.
[09:22.760 --> 09:25.760]  Ну раз эти две штуки равны, а эта штука меньше всех остальных расстояний,
[09:25.760 --> 09:27.760]  то эти два минимума, они всех остальных меньше либо равны.
[09:27.760 --> 09:32.760]  Ну значит, С обязана лежать в и-то ячейке тоже,
[09:32.760 --> 09:34.760]  потому что расстояние до нее меньше, чем до всех остальных,
[09:34.760 --> 09:37.760]  поэтому она лежит и там и там одновременно.
[09:37.760 --> 09:41.760]  Вот, значит, если есть какая-то точка, лежащая в одном из них,
[09:41.760 --> 09:43.760]  то она обязательно и в другом.
[09:43.760 --> 09:48.760]  Поэтому пересечение, пересечение на этой прямой может быть только вдоль какого-то отрезка,
[09:48.760 --> 09:51.760]  который и там и там лежит, но это, собственно, ребро.
[09:51.760 --> 09:55.760]  То есть не бывает вот таких вот продолжений в одну из двух сторон, у одного из них.
[10:00.760 --> 10:01.760]  Вот, хорошо.
[10:01.760 --> 10:07.760]  Ну отсюда, собственно, следует, что у нас не бывает вершин на ребрах.
[10:08.760 --> 10:11.760]  То есть, собственно, вот таких картинок не бывает, что вот у меня здесь была вершина,
[10:11.760 --> 10:15.760]  которая одновременно как бы является вершиной двух многоугольников,
[10:15.760 --> 10:16.760]  а вот здесь это не вершина.
[10:16.760 --> 10:18.760]  Такого в нормальном случае не бывает.
[10:19.760 --> 10:22.760]  В нормальном случае картинка какая-то такая,
[10:22.760 --> 10:25.360]  что если какая-то точка является вершиной кого-то,
[10:25.360 --> 10:27.760]  какого тут многоугольника, какой-то ячейки,
[10:27.760 --> 10:31.760]  то она также является вершиной всех остальных смежных с ней многоугольников.
[10:31.760 --> 10:33.760]  То есть картинка какая-то вот такая только, может быть.
[10:36.760 --> 10:38.760]  Вот эта точка, она граничная точка...
[10:38.760 --> 10:41.760]  Ну, граничная вершина всех многоугольников, которые ее содержит.
[10:41.760 --> 10:50.520]  содержит. Вот, ну отсюда можно такое утверждение
[10:50.520 --> 10:57.480]  сформулировать. Во-первых, если все точки P лежат на
[10:57.480 --> 11:11.280]  одной прямой, то, значит, диаграмма Воронова это
[11:11.280 --> 11:26.680]  просто N-1 параллельных прямых. Во-вторых, иначе, ну тут
[11:26.680 --> 11:33.880]  давайте так сформулируем. Во-первых, не бывает, короче,
[11:33.880 --> 11:38.120]  все ребра, они либо отрезки, либо лучи, то есть не бывает
[11:38.120 --> 11:43.880]  полностью бесконечных ребер в виде прямых, все ребра
[11:43.880 --> 11:58.880]  отрезки или лучи. Во-вторых, диаграмма связана. В-третьих,
[11:58.880 --> 12:09.760]  количество вершин в диаграмме не больше, чем 2N-5, а ребер
[12:09.760 --> 12:28.560]  не больше, чем 3N-6. Ну связано, это значит, что, ну как
[12:28.560 --> 12:31.960]  раз, да, типа если мы рассматриваем вот все, все граничные точки
[12:31.960 --> 12:34.840]  всех многоугольников, то можно от любой добраться
[12:34.840 --> 12:37.560]  до другой, вот, двигаясь по точкам, по точкам границ.
[12:37.560 --> 12:44.600]  Ну, первое вроде очевидно, если есть какая-то прямая,
[12:44.600 --> 12:46.560]  давайте ее для удобства нарисуем горизонтальной,
[12:46.560 --> 12:51.480]  на которой лежат все наши точки, то что такое диаграмма?
[12:51.480 --> 12:54.040]  Ну понятно, надо просто между соседями провести серперы.
[12:54.040 --> 13:02.040]  Между соседями проводим серперы, это и будет разбиение
[13:02.040 --> 13:06.480]  на ячейке диаграмма Воронова. Там, потому что не нужно
[13:06.480 --> 13:09.280]  между всеми провести середину критикуляра, чтобы построить
[13:09.280 --> 13:12.600]  ячейки, но понятно, что ближайшие серперы к данной, это вот
[13:12.600 --> 13:15.400]  два соседних. Здесь как раз будет N, у нас одна
[13:15.400 --> 13:17.520]  параллельная прямая, она разделяет плоскость на
[13:17.520 --> 13:22.000]  N кусков, в каждом куске ближайшая, это вот одна из точек,
[13:22.000 --> 13:27.760]  это одна из сайтов. Теперь интересный случай, пусть не
[13:27.760 --> 13:30.560]  так, пусть не все точки на одной прямой, давайте
[13:30.560 --> 13:33.560]  покажем, что у меня не бывает ребер вот в виде таких прямых,
[13:33.560 --> 13:36.240]  то есть здесь проблема, ну не проблема, а выраженный
[13:36.240 --> 13:39.120]  случай скорее, что в качестве ребра выступает прямая
[13:39.120 --> 13:41.400]  полностью, прямая целиком, весь серпер целиком между
[13:41.400 --> 13:46.600]  двумя сайтами. Давайте покажем, что такого не бывает в случае,
[13:46.600 --> 13:50.000]  если не все на одной прямой. Давайте предположим, что
[13:50.800 --> 13:58.200]  есть какие-то P и Pg, что серпер между ними полностью является
[13:58.200 --> 14:01.000]  куском границы вот обеих ячеек, то есть они пересекаются
[14:01.000 --> 14:03.520]  по прямой, не то что там два многоугольника, а вот
[14:03.520 --> 14:08.600]  именно разделяющая их прямая, это граница обоих ячеек,
[14:08.600 --> 14:12.520]  обеих ячеек, и для P и для Pg. То есть вот эта вот вся
[14:12.520 --> 14:15.800]  бесконечная прямая одновременно лежит в ячейке P и в ячейке
[14:15.800 --> 14:19.240]  Pg. Ну тогда давайте возьмем любую другую точку, не лежащую
[14:19.240 --> 14:27.640]  на прямой P и Pg. Вот здесь я нарисую. Пусть Pk не лежит,
[14:27.640 --> 14:32.840]  ну давайте так нарисуем на прямой P и Pg. Вот давайте
[14:32.840 --> 14:36.440]  нарисуем какой-нибудь серпер, ну например между P и Pk.
[14:36.440 --> 14:39.640]  Вот давайте я к этому отрезку нарисую в середине
[14:39.640 --> 14:41.840]  препендикуляра. Вот как-то он так пройдет, наверное.
[14:41.840 --> 14:50.040]  Значит это значит, что у меня вот это вот, ну во-первых
[14:50.040 --> 14:53.040]  у меня точно пересекутся эти два середины препендикуляра,
[14:53.040 --> 14:57.000]  потому что я провожу прямые, перпендикулярные к непараллельным
[14:57.000 --> 15:01.440]  прямым. То есть я взял P и Pg, P и Pk они не параллельны,
[15:01.440 --> 15:04.240]  потому что Pk не на прямой, значит я провел серпер, они
[15:04.240 --> 15:07.640]  точно пересекутся. Ну вот, и тогда понятно, что у
[15:07.640 --> 15:09.760]  меня вот эта вот вертикальная прямая разбилась на два
[15:09.760 --> 15:12.760]  куска сверху снизу, условно говоря. Понятно, что хотя
[15:12.760 --> 15:15.560]  бы один из кусков не может лежать, скажем, в ячейке
[15:15.560 --> 15:19.560]  Pi, потому что все эти точки ближе к Pk, чем к Pi. То есть все
[15:19.560 --> 15:22.460]  вот эти точки, которые по предположению лежат одновременно
[15:22.460 --> 15:24.760]  в обеих этих ячейках, они должны лежать вот здесь вот,
[15:24.760 --> 15:29.760]  ну то есть они должны прихрепляться к ячейке V от Pk. Должны быть
[15:29.760 --> 15:35.660]  V от Pk. Ну противоречие, а мы сказали, что эти штуки
[15:35.660 --> 15:38.560]  лежат на границе между Pi и Pg, значит больше другим
[15:38.560 --> 15:45.960]  ячейкам не принадлежат. Похоже? Хорошо, значит у меня прямых
[15:45.960 --> 15:50.860]  не бывает. Бывает у меня только соответственно отрезки
[15:50.860 --> 15:54.660]  и полубесконечные ребра, ну то есть лучи. Если у меня
[15:54.660 --> 15:57.260]  грубо говоря, если я нарисую какой-нибудь треугольник
[15:57.260 --> 16:02.260]  в качестве сайтов, то у меня как раз диаграмма будет
[16:02.260 --> 16:04.760]  примерно вот такой вот. У меня будет одна вершина,
[16:04.760 --> 16:07.160]  и здесь три полубесконечных луча, разделяющие соседние
[16:07.160 --> 16:17.660]  пары точек, соседние пары сайтов. Так, теперь давайте
[16:17.660 --> 16:26.460]  докажем связность. Значит это был пункт A, пункт B, значит
[16:26.460 --> 16:28.560]  про связность. Давайте сначала докажем связность
[16:28.560 --> 16:39.160]  границы каждой ячейки по отдельности. Связанность
[16:39.160 --> 16:41.760]  границы каждой ячейки по отдельности. Ну вроде тоже
[16:41.760 --> 16:44.260]  понятно, потому что мы знаем, как у нас тогда устроены
[16:44.260 --> 16:47.960]  ячейки. Мы знаем, что в ячейках у нас нет бесконечных
[16:47.960 --> 16:53.160]  ребер, ну бесконечных прямых точнее, значит любая ячейка
[16:54.160 --> 16:57.960]  как раз не полоса. Если бы она была полоса, у нее как
[16:57.960 --> 17:01.460]  раз была несвязанная граница, потому что с одной прямой
[17:01.460 --> 17:04.760]  я на другую перейти не могу. А иначе, значит у меня
[17:04.760 --> 17:10.360]  каждая ячейка, это многоугольник, ну или какой-то там обобщенный
[17:10.360 --> 17:12.860]  многоугольник, да, такой полубесконечный вот куда-то
[17:12.860 --> 17:17.860]  в одну сторону. Ну понятно тогда, что он связан. Любая
[17:17.860 --> 17:29.160]  ячейка это обобщенный многоугольник. Понятно, что его граница
[17:29.160 --> 17:33.760]  связана, можно из любой точки границы многоугольника
[17:33.760 --> 17:43.360]  дойти до любой другой. Нет? Почему связана? Ну смотрите,
[17:43.360 --> 17:45.160]  мы рисовали все возможные ситуации, как может выглядеть
[17:45.160 --> 17:50.860]  пересечение полуплоскостей. Это там либо полуплоскость,
[17:50.860 --> 17:56.360]  либо это полоса, либо многоугольник, либо такой обобщенный многоугольник,
[17:56.360 --> 17:59.660]  как бы задающийся по факту вот этими вот двумя полуплоскостями
[17:59.660 --> 18:03.860]  пересекающимися. Вот. Как-то еще ограниченный вот на
[18:03.860 --> 18:08.860]  какую-то подобность. Почему это связано, вы спрашиваете?
[18:08.860 --> 18:12.660]  Можно мы поверим, пожалуйста, в это? Ну типа, ну надо понять,
[18:12.660 --> 18:14.860]  что такое обобщенный многоугольник. Значит, вот именно, что есть
[18:14.860 --> 18:18.360]  вот эти вот две полубесконечные прямые, которые на самом
[18:18.360 --> 18:22.360]  деле где-то пересекаются, но они еще могут быть параллельны,
[18:22.360 --> 18:33.860]  да. Ну короче, ну блин. Ну по картинке понятно. Вот.
[18:33.860 --> 18:37.360]  Ну и наконец третья. А, пардон, это мы доказали связанность
[18:37.360 --> 18:42.360]  границы, да, только? Ну, показали, окей, показали связанность
[18:42.360 --> 18:45.860]  границы каждой конкретной ячейки. Теперь давайте докажем
[18:45.860 --> 18:52.360]  связанность полностью графа. Вот если у меня есть какой-то,
[18:52.360 --> 18:57.360]  так как это выглядит, ну что-то такое, наверное. То есть у
[18:57.360 --> 19:04.360]  меня есть вот такая диаграмма. Вроде более-менее похоже,
[19:04.360 --> 19:06.360]  что это диаграмма Воронова. Значит, как доказать, что
[19:06.360 --> 19:12.860]  она связана, ну вот как граф, да, то есть что я с точки любого
[19:12.860 --> 19:15.360]  ребра могу добраться до любой другой точки любого
[19:15.360 --> 19:18.360]  другого ребра. Ну давайте просто возьмем две точки,
[19:18.360 --> 19:24.860]  А и Б. Давайте проведем отрезок между ними. Вот. Понятно
[19:24.860 --> 19:29.860]  тогда, что этот отрезок подразбивается на какие-то
[19:29.860 --> 19:34.360]  куски, ну как бы он пересекается с какими-то ячейками. Давайте
[19:34.360 --> 19:37.360]  рассмотрим пересечение этого отрезка с каждой ячейкой.
[19:37.360 --> 19:40.360]  Мы сначала находимся в одной ячейке, потом переходим
[19:40.360 --> 19:44.360]  в другую, потом заканчиваем в третьей. Ну понятно, потому
[19:44.360 --> 19:47.360]  что каждая точка плоскости лежит хотя бы в одной ячейке,
[19:47.360 --> 19:50.360]  значит наш отрезок как раз подразобьется на конечное
[19:50.360 --> 19:53.360]  количество таких кусочков. Ну и дальше внутри каждой
[19:53.360 --> 19:56.360]  ячейки мы знаем, что граница связана. Я могу дойти отсюда
[19:56.360 --> 20:00.360]  до сюда с помощью, скажем, вот такого пути, потом отсюда
[20:00.360 --> 20:02.360]  до сюда по границе вот этой ячейки могу дойти по такому
[20:02.360 --> 20:06.360]  пути, ну и здесь отсюда до сюда могу дойти по границе
[20:06.360 --> 20:13.360]  вот такого вот, по вот этому куску. Что? Доказать. Нет,
[20:13.360 --> 20:16.360]  это легко формализовать при чем, типа ну то есть пусть
[20:16.360 --> 20:18.360]  у меня есть две точки A и B на границе каких-то многоугольников.
[20:18.360 --> 20:22.360]  Пройдем отрезок. Это отрезок конечной длины, пересечем
[20:22.360 --> 20:27.360]  со всеми ячейками. Будет конечное количество отрезков
[20:27.360 --> 20:30.360]  пересечения, потому что мы пересекаем отрезок и многоугольник,
[20:30.360 --> 20:33.360]  это выпуклая фигура, значит мы получим под разбиение
[20:33.360 --> 20:36.360]  отрезка на выпуклая фигура, на отрезке. Каждый отрезок
[20:36.360 --> 20:44.360]  полностью служит в какой-то ячейке. Еще раз? Ну я пересекаю,
[20:44.360 --> 20:48.360]  вот я взял отрезок A-B, давайте его пересечем там вот с этой
[20:48.360 --> 20:53.360]  ячейкой. Получишь или пустой множество, либо отрезок. Да,
[20:53.360 --> 20:56.360]  ну все, и как бы тогда я могу срезать вот этот путь по
[20:56.360 --> 20:59.360]  границе. Ну как бы вот эти две точки связаны, грубо
[20:59.360 --> 21:02.360]  говоря. Потом пересекаю это там вот с этим, вот эти две
[21:02.360 --> 21:07.360]  точки связаны, ну и все. Вот, значит давайте напишем,
[21:07.360 --> 21:15.360]  что если A-B лежат на границе каких-то многоугольников,
[21:15.360 --> 21:28.360]  на границе каких-то ячеек, то отрезок A-B разбивается
[21:28.360 --> 21:52.360]  на отрезке целиком лежащего в одной из ячеек. Ну значит
[21:52.360 --> 22:11.360]  есть путь. Нормально? Вот, значит остался пункт про
[22:11.360 --> 22:15.360]  линейность количества вершин и количества ребер. Вот,
[22:15.360 --> 22:17.360]  но если мы доказали связанность, то мы можем пользоваться
[22:17.360 --> 22:20.360]  формулой Эйлера. А формула Эйлера существенно важна
[22:20.360 --> 22:26.360]  связанность. То есть пункт В, формула Эйлера, значит она
[22:26.360 --> 22:30.360]  говорит нам, давайте словами напишу, что количество вершин
[22:30.360 --> 22:35.360]  плюс, пардон, минус количество ребер плюс количество
[22:35.360 --> 22:45.360]  граний в плоском связанном графе это два. Что вы орете?
[22:45.360 --> 22:54.360]  Ладно, значит вроде правда. Вот, значит с этим надо
[22:54.360 --> 22:57.360]  разобраться, потому что там, ну как бы здесь ребро
[22:57.360 --> 23:01.360]  это что-то полубесконечное не очень хорошо. Да, именно
[23:01.360 --> 23:04.360]  так. Значит давайте мы наш граф просто как-нибудь
[23:04.360 --> 23:07.360]  ограничим. Давайте возьмем достаточно большой квадрат,
[23:07.360 --> 23:11.360]  который содержится внутри себя все вершины и все конечные
[23:11.360 --> 23:14.360]  ребра. Соответственно, который пересекает только полубесконечные
[23:14.360 --> 23:17.360]  ребра, уходящие куда-то в пространство. Возьмем достаточно
[23:17.360 --> 23:21.360]  большую коробочку, поместим нашу диаграмму, которая там
[23:21.360 --> 23:30.360]  бог знает как выглядит, что-то вот такое. Вот. И соответственно
[23:30.360 --> 23:34.360]  сделаем так, что она пересекается только с вот этими лучами,
[23:34.360 --> 23:42.360]  с полубесконечными лучами. Вот. Значит, что тогда? Давайте
[23:42.360 --> 23:44.360]  сделаем следующее. Давайте я, то есть смотрите, я знаю,
[23:44.360 --> 23:47.360]  что у меня вершинами этого графа выступают как раз-таки
[23:47.360 --> 23:50.360]  вершины диаграммы, не сайты, а вот именно вершины
[23:50.360 --> 23:53.360]  многоугольников, которые получаются как ячейки. То есть
[23:53.360 --> 23:56.360]  вот этой вершины, давайте я введу еще одну новую вершину
[23:56.360 --> 24:00.360]  где-нибудь далеко и соединю как бы вот эти вот все
[24:00.360 --> 24:05.360]  полубесконечные ребра, доведу до этой точки. Вот я сделаю
[24:05.360 --> 24:13.360]  вот так. С сохранением планарности графа. Вот я тоже
[24:13.360 --> 24:16.360]  думаю, что это можно сделать, формально не буду расписывать,
[24:16.360 --> 24:19.360]  но идея очень простая. Вот у вас есть квадратик, есть там
[24:19.360 --> 24:22.360]  какая-то точка. Мне хотелось бы, чтобы все вот эти вот
[24:22.360 --> 24:24.360]  лучи, пересекающие границу квадратика, можно было бы
[24:24.360 --> 24:27.360]  замкнуть на вот эту точку. Ну в общем случае это можно
[24:27.360 --> 24:29.360]  сделать как-то так. То есть каждую вот эту точку можно
[24:29.360 --> 24:32.360]  просто отрезком соединить. Здесь явным образом написать
[24:32.360 --> 24:36.360]  какую-нибудь формулу окружности или параболы, которые вот
[24:36.360 --> 24:39.360]  так вот расширяются и друг с другом не пересекаются.
[24:39.360 --> 24:42.360]  При этом как-нибудь ограниченные какой-нибудь вот такой
[24:42.360 --> 24:47.360]  функции. Здесь то же самое. Ну и тут сверху тоже как-нибудь
[24:47.360 --> 24:50.360]  явно очевидно можно прописать вот такие функции, которые
[24:50.360 --> 24:55.360]  расширяются и не пересекаются друг с дружкой. Ну типа если
[24:55.360 --> 24:57.360]  картинка есть, то можно какую-нибудь явную форму
[24:57.360 --> 25:04.360]  нарисовать. Неважно. Вот. Вот, значит это я сотру, чтоб не
[25:04.360 --> 25:12.360]  позориться. Вот. Теперь давайте с этим графом работать.
[25:12.360 --> 25:15.360]  Все, это уже хороший, нормальный конечный граф на плоскости.
[25:15.360 --> 25:19.360]  Для него можно применять формулейдера. Значит сколько
[25:19.360 --> 25:26.360]  здесь вершин? Вершин видимо в плюс одна. То есть если здесь
[25:26.360 --> 25:29.360]  было в вершин, то я добавил еще одну, стало в плюс одна.
[25:29.360 --> 25:34.360]  Значит ребер. Видимо сколько было, столько и осталось,
[25:34.360 --> 25:37.360]  потому что я просто до продолжил безконечные ребра, до
[25:37.360 --> 25:40.360]  вот этой вот внешней вершинки с ребрами все сохранилось.
[25:40.360 --> 25:43.360]  Ну и грани, я утверждаю, осталось столько же, а именно
[25:43.360 --> 25:52.360]  n по количеству сайтов. Вот. Ну вот здесь, например,
[25:52.360 --> 25:55.360]  на картинке у меня конечные грани остались конечными,
[25:55.360 --> 26:01.360]  вот эти вот три. Дальше. Вот у нас были такие бесконечные
[26:01.360 --> 26:04.360]  грани, я между ними еще вот эти разделители довел
[26:04.360 --> 26:07.360]  и замкнул. Соответственно у меня там все грани, кроме
[26:07.360 --> 26:09.360]  одной, стали конечными, осталась одна внешняя
[26:09.360 --> 26:14.360]  грань, которая всю плоскость содержит. Их было изначально
[26:14.360 --> 26:19.360]  n, потому что такое грань. Это ячейка по факту. Нет,
[26:19.360 --> 26:24.360]  ровно. Ну если точки, если сайты все изначально различны,
[26:24.360 --> 26:34.360]  то их ровно n. Ну да. Вот. Поэтому здесь как бы все грани
[26:34.360 --> 26:37.360]  сохранятся, одна останется внешней, ну и хорошо. Вот.
[26:37.360 --> 26:41.360]  Поэтому здесь можно писать формулейжера вот уже к такому
[26:41.360 --> 26:45.360]  графу, ну и написать, что v плюс 1 плюс e, что такое,
[26:45.360 --> 26:54.360]  минус e, плюс n, равно 2. То есть e равно, ой, v плюс n минус
[26:54.360 --> 27:00.360]  1. Проверяйте. Вот нет, ровно n будет. Да, да, да, да,
[27:00.360 --> 27:07.360]  одна из старых ячеек, вот в этом случае, вот эта вот
[27:07.360 --> 27:14.360]  была ячейка, она стала внешней гранью всего графа.
[27:14.360 --> 27:24.360]  Ровно n будет. Да, показали. Вот. Ничего, ничего, нормально.
[27:24.360 --> 27:27.360]  Так, хорошо. Мне нужно еще показать следующий факт.
[27:27.360 --> 27:30.360]  Мне нужно границу какую-то, ну в смысле верхнюю оценку
[27:30.360 --> 27:33.360]  на них предъявить. Давайте я покажу следующее. Давайте
[27:33.360 --> 27:37.360]  я скажу, что в этом графе, в этом графе, степень всех
[27:37.360 --> 27:52.360]  машин хотя бы 3. Степень всех машин хотя бы 3. Вот.
[27:52.360 --> 27:57.360]  Ну типа того, да, для внутренних, то есть для старых
[27:57.360 --> 28:00.360]  вершин это почти тривиально, потому что мы знаем, что
[28:00.360 --> 28:04.360]  вершина является вершиной всех вот стыкующихся в ней
[28:04.360 --> 28:07.360]  многоугольников, да, поэтому если у меня есть какая-то
[28:07.360 --> 28:10.360]  вершина, ну вот одна из этих старых, значит, к ней
[28:10.360 --> 28:14.360]  примыкает несколько многоугольников, все углы этих
[28:14.360 --> 28:17.360]  многоугольников при этой вершине меньше, чем p, ну
[28:17.360 --> 28:20.360]  потому что это выпуклые многоугольники, да, имеющие
[28:20.360 --> 28:23.360]  эту вершинку, поэтому здесь угол меньше, чем p. Ну значит,
[28:23.360 --> 28:26.360]  нужно хотя бы 3 угла, чтобы покрыть все 360 градусов.
[28:26.360 --> 28:29.360]  Вот. Поэтому с внутренними вершинами понятно, что здесь
[28:29.360 --> 28:33.360]  хотя бы 3 должна быть степень. Для внешней вершины, ну
[28:33.360 --> 28:36.360]  тоже мне нужно показать, что здесь есть хотя бы 3 ребра
[28:36.360 --> 28:40.360]  вот в этой вершинке. Вот. Почему? Значит, мне нужно
[28:40.360 --> 28:43.360]  показать, что bounding box пересекает хотя бы 3 вот эти
[28:43.360 --> 28:46.360]  полубесконечных луча, потому что у меня степень этой
[28:46.360 --> 28:49.360]  вершинки ровно такая, сколько было лучей, сколько было
[28:49.360 --> 28:55.360]  ребер лучей. Вот. Почему таких лучей хотя бы 3? Ну давайте
[28:55.360 --> 28:58.360]  скажем, что их пусть 2. Какие-нибудь вот такие вот 2
[28:58.360 --> 29:03.360]  луча были всего лишь у нас в диаграмме. Значит, тогда
[29:03.360 --> 29:10.360]  я утверждаю, что можно нарисовать полуплоскость, лежащую
[29:10.360 --> 29:17.360]  вне bounding box и не пересекающие эти 2 луча. Вот эта вот
[29:17.360 --> 29:20.360]  полуплоскость лежит вне bounding box и не пересекает
[29:20.360 --> 29:25.360]  эти 2 луча. Почему можно? Ну, потому что раз их 2, то
[29:25.360 --> 29:29.360]  между ними угол не больше 180 градусов. Ну, типа того,
[29:29.360 --> 29:33.360]  да. Значит, угол между, то есть там можно их продолжить
[29:33.360 --> 29:36.360]  до пересечения. Где-то здесь пересекутся. Здесь будет
[29:36.360 --> 29:39.360]  какой-то конкретный угол. Значит, это все вложено в
[29:39.360 --> 29:44.360]  какой-то угол. Надо взять, просто надо как бы, понятно,
[29:44.360 --> 29:49.360]  нам надо ступить и взять вот другой кусок. Вот. То
[29:49.360 --> 29:52.360]  есть получается, смотрите, есть какая-то полуплоскость,
[29:52.360 --> 29:55.360]  которая ничего не пересекает, не пересекает никакое ребро
[29:55.360 --> 29:58.360]  нашей исходной, нашей диаграммы. Значит, эта
[29:58.360 --> 30:00.360]  полуплоскость, соответственно, целиком вложена в какую-то
[30:00.360 --> 30:11.360]  ячейку. В какой-то VODPE. Ну, потому что как бы она ничего
[30:11.360 --> 30:14.360]  не пересекает. Все эти точки где-то лежат в какой-то
[30:14.360 --> 30:17.360]  ячейке. И если мы здесь не видим никакой граничной
[30:17.360 --> 30:21.360]  точки ни одного многоугольника, значит, это все элементы
[30:21.360 --> 30:25.360]  одной ячейки. Ну вот, и дальше осталось понять, что такого
[30:25.360 --> 30:28.360]  не бывает. То есть у нас не бывает ячеек, которые содержат
[30:28.360 --> 30:33.360]  целиком полуплоскость. Давайте это запишем, что не
[30:33.360 --> 30:39.360]  бывает ячеек, ячеек, целиком содержащих какую-то
[30:39.360 --> 30:49.360]  полуплоскость. Ну, у меня не все точки на одной прямой.
[31:03.360 --> 31:13.360]  Как же они обсуждали. Почему? Ну опять, потому что у
[31:13.360 --> 31:16.360]  меня каждая ячейка это обобщенный многоугольник.
[31:16.360 --> 31:19.360]  Либо вообще конечный многоугольник. Понятно тогда, что он
[31:19.360 --> 31:22.360]  полуплоскость, конечная, а полуплоскость бесконечная.
[31:22.360 --> 31:29.360]  Конечность в смысле ограничена. Да, извиняюсь. Вот. Ну а
[31:29.360 --> 31:31.360]  если есть какой-то обобщенный многоугольник вот такого
[31:31.360 --> 31:34.360]  типа, то ну опять давайте вот эти вот две граничные его
[31:34.360 --> 31:37.360]  стороны продлим до какой-то точки пересечения. Значит,
[31:37.360 --> 31:40.360]  в частности, все это вложено в такой угол. Понятно, что
[31:40.360 --> 31:45.360]  угол не содержит полуплоскостей. Да, то есть я как бы ну я
[31:45.360 --> 31:48.360]  упростил задачу, говорю, что я рассматриваю немногоугольники,
[31:48.360 --> 31:51.360]  такие углы бесконечные. Понятно, что здесь полуплоскостей
[31:51.360 --> 31:54.360]  нет. Ну потому что чтобы полуплоскость лежала в угле,
[31:54.360 --> 31:57.360]  ее прямая задающая как минимум должна не пересекать
[31:57.360 --> 32:00.360]  обе эти прямые, потому что если пересечение, то есть
[32:00.360 --> 32:03.360]  какая-то внешность угла. Ну а нет прямой, которая была
[32:03.360 --> 32:10.360]  одновременно параллельна этим двум. Вот. Сойдет? Ну
[32:10.360 --> 32:14.360]  типа порисовать на самом деле просто, да. Вот. И наконец
[32:14.360 --> 32:17.360]  отсюда я могу сделать следующий вывод, что 2e больше
[32:17.360 --> 32:25.360]  собрано, чем 3 на v плюс 1. Это я просто написал сумму
[32:25.360 --> 32:29.360]  степеней всех вершин. 2e, потому что каждый ребро будет
[32:29.360 --> 32:33.360]  учтено дважды, но это сумма степеней всех вершин.
[32:33.360 --> 32:39.360]  Сумма степеней всех вершин. Она в точности равна 2e,
[32:39.360 --> 32:42.360]  потому что каждый ребро учтется дважды от обоих своих
[32:42.360 --> 32:45.360]  концов. И с другой стороны, эта сумма степеней хотя
[32:45.360 --> 32:47.360]  бы 3 на v плюс 1, потому что мы показали, что каждый ребро
[32:47.360 --> 32:50.360]  имеет, каждый вершин имеет степень хотя бы 3. Поэтому
[32:50.360 --> 32:53.360]  верно вот это. Ну и все. Дальше мы знаем, что такое e.
[32:53.360 --> 32:58.360]  И можно наконец написать, что 2v плюс n минус 1 больше
[32:58.360 --> 33:03.360]  собрано 3v плюс 1. И отсюда уже получится нужная оценка.
[33:12.360 --> 33:18.360]  Вот. Немедленно получили, что v не больше, чем 2n минус 5.
[33:18.360 --> 33:21.360]  Ну и дальше, поскольку мы знаем, что e это v плюс n
[33:21.360 --> 33:27.360]  минус 1, значит это не больше, чем 3n минус 6. Ура.
[33:42.360 --> 33:45.360]  Так, хорошо. Значит у меня вся диаграмма линейная.
[33:45.360 --> 33:50.360]  Вершин и ребер там максимум o от n. И можно как-то с этим
[33:50.360 --> 33:56.360]  жить. Ну то есть в частности можно ожидать, что поскольку
[33:56.360 --> 33:59.360]  у меня для хранения диаграммы достаточно линейной памяти,
[33:59.360 --> 34:02.360]  потому что у меня линейное количество всего, то значит
[34:02.360 --> 34:04.360]  есть надежда, что алгоритм будет какой-то близкий к
[34:04.360 --> 34:10.360]  линейному. У нас будет n лог n. Да. Значит дальше, чтобы
[34:10.360 --> 34:12.360]  переходить уже непосредственно к алгоритму, надо еще
[34:12.360 --> 34:15.360]  вспомогательную одну штуку доказать. Значит определение.
[34:15.360 --> 34:22.360]  Пусть у меня, как обычно, p это набор сайтов. Пусть q
[34:22.360 --> 34:32.360]  точка плоскости. Тогда c от q, значит это максимальный
[34:32.360 --> 34:40.360]  круг максимального радиуса с центром в q, с центром
[34:40.360 --> 34:48.360]  в q, который внутри себя не содержит сайтов. Внутри
[34:48.360 --> 34:58.360]  которого нет точек p. Вот это также называется пустой
[34:58.360 --> 35:07.360]  круг с центром в q. Здесь какая-то точка плоскости. Мы
[35:07.360 --> 35:12.360]  ставим сюда круг, раздуваем, раздуваем его, дожидаемся
[35:12.360 --> 35:16.360]  момента, когда на границу попадает хотя бы одна точка
[35:16.360 --> 35:20.360]  из p. Вот раздували кружок, дождались момента, когда
[35:20.360 --> 35:23.360]  сюда попала p и вполне возможно одновременно с p и сюда
[35:23.360 --> 35:25.360]  попала какая-то пж. Скажем, если q лежит на серпере
[35:25.360 --> 35:29.360]  между двумя, то одновременно попадают эти две точки.
[35:29.360 --> 35:32.360]  Вот этот круг называется максимальным пустым кругом
[35:32.360 --> 35:46.360]  с центром в q. Вот и дальше в терминах этих пустых
[35:46.360 --> 35:53.360]  кругов можно сформулировать следующий факт. Во-первых,
[35:53.360 --> 36:00.360]  q это вершина диаграммы Воронова, то есть является
[36:00.360 --> 36:05.360]  вершиной одного из многоугольников. Если и только если
[36:05.360 --> 36:13.360]  q содержит на своей границе хотя бы три точки, хотя
[36:13.360 --> 36:18.360]  бы три сайта, я имею в виду, ну понятно, внутри себя
[36:18.360 --> 36:20.360]  он никого не содержит, потому что я беру максимальный,
[36:20.360 --> 36:23.360]  внутри которого никого нет. Значит, если и содержит,
[36:23.360 --> 36:25.360]  то только на границе. Поэтому я не прописываю, что на
[36:25.360 --> 36:28.360]  границе можно только на границе содержать. Вот.
[36:28.360 --> 36:37.360]  И во-вторых, кусок серединного перпендикуляра к P и P g участвует
[36:37.360 --> 36:48.360]  в диаграмме. Ну, то есть хотя бы какой-то его кусок является
[36:48.360 --> 36:52.360]  ребром хоть какого-то многоугольника. Ну да, то есть если это
[36:52.360 --> 36:55.360]  серпер не бесполезен, на нем реально лежит какой-то
[36:55.360 --> 36:58.360]  кусок границы. Вот. Если и только если существует
[36:58.360 --> 37:10.360]  точка q на этом серпере, ну давайте, на этом серпере,
[37:10.360 --> 37:25.360]  такая, что c от q содержит только P i и P g. Больше никого.
[37:25.360 --> 37:45.360]  Да, да. Даже на границе никого больше нет. Да, это жестко.
[37:45.360 --> 37:48.360]  Значит, ну давайте по шагам. Первое, слева направо.
[37:48.360 --> 37:51.360]  Почему, если кувершина, то обязательно ее пустой круг
[37:51.360 --> 37:54.360]  содержит хотя бы три сайта. Вот. Ну мы знаем, что кувершина
[37:54.360 --> 37:59.360]  диаграммы Воронова, это вершина многоугольников.
[37:59.360 --> 38:02.360]  Более того, мы знаем, что если вершина одного многоугольника,
[38:02.360 --> 38:07.360]  то хотя бы трех сразу. То есть если q, это чья-то вершина вот
[38:07.360 --> 38:11.360]  такого многоугольника, то обязательно все остальные
[38:11.360 --> 38:14.360]  многоугольники, которые точку содержат, тоже для них
[38:14.360 --> 38:16.360]  q – это вершина. Это мы доказывали, что у нас тык ребра в ребро,
[38:16.360 --> 38:19.360]  поэтому q – вершина всех остальных, которые здесь есть.
[38:19.360 --> 38:22.360]  Ну, и мы знаем, что их тогда должно быть хотя бы три.
[38:22.360 --> 38:27.600]  тогда должно быть хотя бы 3. Ну а мы доказывали, что, типа, ну сумма этих углов
[38:27.600 --> 38:31.200]  должна быть 360, с другой стороны, каждый из них меньше 180, поэтому здесь должно
[38:31.200 --> 38:33.840]  быть хотя бы три вершины.
[38:34.840 --> 38:38.840]  Три многоугольника.
[38:41.920 --> 38:53.120]  Да, это не... Так лучше? Вот. Ну, значит, хотя бы три, потому что сумма углов
[38:53.120 --> 38:58.280]  должна быть 360. Вот. Поэтому, поскольку Q лежит одновременно и в этом
[38:58.280 --> 39:03.200]  многоугольнике, и в этом, и в этом, то она точно равно удалена от сайтов,
[39:03.200 --> 39:09.200]  задающих эти самые ячейки. То есть Q точно лежит вот, равно удалена вот этих
[39:09.200 --> 39:16.360]  трех, как минимум этих трех сайтов. Возможно, их там 4 и больше, если здесь
[39:16.360 --> 39:19.600]  больше, чем три многоугольника стыкуются в этой точке. Почему не может быть
[39:19.600 --> 39:26.120]  никого внутри? Ну, если бы внутри этого круга кто-то был, значит, Q была бы ближе
[39:26.120 --> 39:30.360]  к этой точке, чем к этим. С другой стороны, Q лежит в этих ячейках, в
[39:30.360 --> 39:34.520]  этих многоугольниках, поэтому она как бы равно удалена от этих, и больше никого
[39:34.520 --> 39:41.120]  ближе быть не может. Поэтому этот круг пустой, и на нем хотя бы три точки. Круг
[39:41.120 --> 39:49.360]  пустой и содержит хотя бы три сайта.
[39:50.120 --> 39:54.880]  Согласны? Если нарисовать с центром в ней пустой круг, то у меня на границе сразу,
[39:54.880 --> 40:02.640]  как минимум, три сайта. p, pg, pk. Вот. Ну, что это значит? Причем внутри никаких
[40:02.640 --> 40:05.560]  других нет. Возможно, еще есть какие-то на границе, но внутри никого больше нет.
[40:05.560 --> 40:11.440]  Значит, это получается, что Q равно удалена от этих трех сайтов, и понятно, что здесь
[40:11.440 --> 40:14.160]  достигается минимально возможное расширение от Q до какого-либо сайта.
[40:14.160 --> 40:19.680]  А раз внутри никого нет, то как бы к Q одновременно все вот эти ближайшие.
[40:19.680 --> 40:24.120]  Значит, она во всех этих трех ячейках лежит.
[40:29.680 --> 40:34.880]  Раз эти три ближе всего, возможно, какая-то четвертая есть, но неважно, эти три
[40:34.880 --> 40:38.560]  ближе всего, а все остальные дальше. Значит, она одновременно в этих трех ячейках точно
[40:38.560 --> 40:43.160]  лежит. Ну и надо понять, что такое пересечение вот трех ячеек в диаграмме, что это может
[40:43.160 --> 40:55.840]  быть только вершина. Может быть только вершина. Ну, мы знаем, что такое пересечение двух ячеек.
[40:55.840 --> 40:59.680]  То есть по факту они почти не пересекаются, они по внутренностям не пересекаются, они пересекаются
[40:59.680 --> 41:04.520]  только по границам. Значит, если я, скажем, пересеку два обобщенных многоугольника, то их
[41:04.520 --> 41:08.840]  пересечение, это может быть только ребро. Давайте я в простом случае нарисую, как они
[41:08.840 --> 41:14.560]  могут пересекаться. Ну, как-то только вот по ребру. Возможно, оно полбесконечное, неважно,
[41:14.560 --> 41:19.680]  ничего не меняется. Значит, вот два пересекаются по ребру. Вот эта ячейка ПИ, это ПЖ,
[41:19.680 --> 41:25.720]  они пересеклись по ребру. Значит, дальше понятно, что все внутренние точки этого отрезка больше
[41:25.720 --> 41:31.200]  ни в какой ячейке другой не лежат, потому что они находятся строго внутри вот этого отрезка.
[41:31.200 --> 41:37.080]  Значит, для них ближе всего ПИ и ПЖ одновременно, то есть это серпир между ними, они ближе всего к
[41:37.080 --> 41:43.560]  этим двум, ну и больше ни в каком другом многоугольнике они лежать не могут, потому что они внутри вот этих
[41:43.560 --> 41:47.720]  вот двух, больше ни в каком другом многоугольнике лежать не могут. Поэтому единственное, что может
[41:47.720 --> 41:53.200]  получиться при пересечении вот этого отрезка с еще кем-то, это одна из граничных точек, то есть одна из
[41:53.200 --> 42:00.000]  вершин. Вот, значит, КУ вершина. Если есть хотя бы три, то обязательно КУ этой пересечения трех ячеек,
[42:00.000 --> 42:13.720]  значит КУ это вершина всех этих трех многоугольников одновременно. Так, два, слева-направо давайте, что если
[42:13.720 --> 42:19.400]  серпир участвует, то на нем можно выбрать какую-то точку. Ну пусть серпир участвует в качестве ребра.
[42:19.400 --> 42:26.480]  Что это значит? Значит, как минимум, какой-то не тривиальный, не нулевой длины его кусок это ребро.
[42:26.480 --> 42:33.640]  ПИПЖ, как минимум, то есть вот на этой прямой, как минимум, какой-то отрезочек не нулевой длины
[42:33.640 --> 42:38.960]  является ребром, ну или там под частью ребра. Какой-то вот, возьмем достаточно маленький отрезок,
[42:38.960 --> 42:43.880]  который вложен в ребро, скажем так. Давайте на нем возьмем какую-нибудь внутреннюю точку, середину,
[42:43.880 --> 42:55.400]  скажем. Вот это КУ. Давайте нарисуем круг с центром в КУ, проходящий через ПИПЖ. Ну почти круг,
[42:55.400 --> 43:03.000]  неважно. Понятно, что он существует, потому что ПИПЖ равно удалены от КУ, потому что КУ на серпире.
[43:03.000 --> 43:09.000]  Я такой круг нарисовать могу. Вот я утверждаю, что внутри этого круга больше никого нет и на границе
[43:09.000 --> 43:17.120]  тоже. Что это вот тот самый пустой круг, который содержит только ПИПЖ на границе. Ну почему? Ну пусть
[43:17.120 --> 43:24.920]  кто-то внутри. Вот тогда КУ не может быть, не может лежать на, ну как бы не может являться куском
[43:24.920 --> 43:29.120]  границы между ПИПЖ, потому что тогда есть какая-то более близкая точка. Значит у меня неправильная
[43:29.120 --> 43:34.720]  диаграмма, потому что если точка, если КУ лежит на границе между ПИПЖ, значит к ней ПИПЖ самые
[43:34.720 --> 43:39.360]  близкие, все остальные дальше. Поэтому внутри быть никого не может. Если есть кто-то еще вот здесь,
[43:39.360 --> 43:47.520]  вот ПК, на границе этого круга, то почему такого не может быть? Ну потому что тогда КУ вершина,
[43:47.520 --> 43:52.960]  например, да. А мы сказали, что это внутренняя точка ребра. Ну все, взять немножко слов напишем,
[43:52.960 --> 44:13.360]  что пусть КУ внутренняя точка ребра, рисуем круг, содержащий ПИПЖ, других точек внутри на границе нет.
[44:23.840 --> 44:26.800]  Значит как раз вот та самая точка КУ, которая существует, вот она.
[44:26.800 --> 44:41.160]  Так, ну и теперь справа налево. Что если такая КУ существует, то это обязательно,
[44:41.160 --> 44:48.680]  что кусок серпера это ребро обязательно. Ну давайте нарисуем какой-нибудь такой пустой круг.
[44:48.680 --> 44:58.680]  Вот это пустой круг, который больше никаких точек ни внутри, ни на границе не содержит.
[44:58.680 --> 45:08.760]  Что это значит? Значит расстояние от КУ до ПИПЖ равны и строго меньше всех остальных.
[45:08.760 --> 45:23.400]  Равны и строго меньше, чем расстояние от КУ до всех остальных ПК, отличных от ИЖ.
[45:23.400 --> 45:28.160]  Поскольку внутри круга и на границе никого нет, все остальные строго дальше.
[45:28.160 --> 45:36.680]  Вот это значит, что, ну поскольку здесь какой-то зазор, здесь конечное количество элементов,
[45:36.760 --> 45:40.760]  то есть вот эти штуки отличаются на какое-нибудь расстояние Эпс選.
[45:40.760 --> 45:46.680]  Тогда если я скажем вот это КУ подвигаю вдоль этого серпера на Эпсилон поделить на сто,
[45:46.680 --> 45:54.400]  скажем тогда для всех точек, вот в Эпсилон делить на 100 около этой точки, тоже это будет верно.
[45:54.400 --> 45:58.900]  То есть я их двигаю вдоль серпера. Для них по-прежнему, для всех вот этих точек в маленькой
[45:58.900 --> 46:04.480]  окрестности КУ, до них по-прежнему расстояние от них расстояниеΠПЖ одинаковое,
[46:04.480 --> 46:08.440]  потому что я двигал вдоль серпира, и строго меньше всех остальных, потому что я
[46:08.440 --> 46:11.880]  сдвигаюсь на эпселом поделить на 100, что, ну, как бы, заведомо этот эпсел не перекроет.
[46:11.880 --> 46:16.360]  То есть это расстояние могло уменьшиться, но не больше, чем на эпсел он делит на 100. Вот.
[46:16.360 --> 46:20.640]  Поэтому не только Q такова, что максимальный пустой круг содержит только
[46:20.640 --> 46:24.680]  P и Pg, но какая-то маленькая окрестность тоже. Не пустая, а маленькая окрестность с обеих
[46:24.680 --> 46:35.400]  стороны. Ну, значит, кусок ребра. Потому что все вот эти вот точки на каком-то нетривиальном,
[46:35.400 --> 46:41.560]  не пустой длины отрезке равно удалены только от P и Pg, больше ни от кого. Значит, как раз,
[46:41.560 --> 46:52.720]  это граница, разделяющая два многоугольника, и только их. Поэтому это как раз ребро. Небольшой
[46:52.720 --> 47:13.480]  отрезок, содержащий Q, лежит только в итой и житой ячейках диаграммы. Ну, а значит, это кусок ребра.
[47:22.720 --> 47:34.240]  Так, ну вроде все. Questions. Хорошо. Вот. Ну и тогда вроде мы готовы переходить к описанию алгоритма
[47:34.240 --> 47:51.080]  построения диаграммы. Давайте алгоритм FORTUNE. Алгоритм такой. Plafactus Conline сверху вниз.
[47:51.080 --> 47:56.960]  Вот давайте у меня есть мои сайты на плоскости. Давайте я буду идти сверху вниз вот таким вот
[47:56.960 --> 48:03.360]  горизонтальным сконлайном. Вот эту вот линию буду сдвигать сверху вниз. И как бы мне бы хотелось
[48:03.360 --> 48:09.720]  поддерживать, что вот все, что выше, здесь уже диаграмма построена. Я хочу знать диаграмму
[48:09.720 --> 48:15.560]  выше этой прямой. И дальше, когда я ее спускаю сверху вниз, я все больше и больше информации
[48:15.560 --> 48:22.360]  про диаграмму узнаю. Я не совсем могу это прям так делать, потому что, понятное дело,
[48:22.360 --> 48:27.640]  что вид диаграммы выше прямой вполне себе может зависеть от точек, лежащих ниже, которые я как бы
[48:27.640 --> 48:32.880]  еще не рассмотрел. Например, если здесь есть какая-нибудь вот точка очень близкая к этой прямой
[48:32.880 --> 48:37.520]  разделяющей, то скажем, у меня будет какой-нибудь вот такой вот серпер. Вот этот серпер будет
[48:37.520 --> 48:41.800]  участвовать в диаграмме между этими двумя точками. А я его еще не вижу, потому что эту точку даже еще
[48:41.800 --> 48:47.680]  не увидел. Поэтому, ну, я не буду говорить, что я всю диаграмму знаю. Давайте я буду хранить ту
[48:47.680 --> 48:54.200]  часть диаграммы, про которую мне уже все заведомо известно. А именно, у меня будет известна диаграмма
[48:54.200 --> 49:03.080]  для тех точек плоскости X, которые хотя бы к одному из рассмотренных сайтов ближе, чем к прямой. То есть
[49:03.080 --> 49:08.840]  мне нужно, чтобы вот это вот расстояние было меньше вот этого. Потому что, если от X ближайшее
[49:08.840 --> 49:14.360]  состояние до одного из сайтов меньше, чем до прямой, то значит X гарантированно не лежит в
[49:14.360 --> 49:20.000]  ячейках соответствующим вот этим вот сайтом, а только в тех ячейках, которые вот уже где-то выше.
[49:20.000 --> 49:26.560]  Вот. Ну и теперь вопрос. Как тогда выглядит граница той области, где я что-то знаю,
[49:26.560 --> 49:32.320]  той области, где я не знаю еще? Скажем, если бы я вот здесь равенство поставил, то что это была бы
[49:32.320 --> 49:40.360]  за фигура, которая равна удаленной от точки и от прямой? Парабола. Да. С фокусом вот здесь вот,
[49:40.360 --> 49:48.640]  и с директрисой вот здесь. То есть, если я нарисую прямую и точку, то я утверждаю, что геометрическое
[49:48.640 --> 49:59.520]  место точек, равно удаленных от, давайте, P и L, где P это прямая, а L это точка, это какая-то вот такая
[49:59.520 --> 50:18.040]  парабола. С фокусом в P, с директрисой в L. Ну это какой-то там геометрия, что-то такое. Вот. Получается,
[50:18.040 --> 50:21.800]  что вот все, что внутри, как бы даже все, что находится, грубо говоря, внутри этой параболы,
[50:21.800 --> 50:27.560]  здесь все точки ближе к P, чем к L, поэтому здесь я точно знаю вид диаграммы Воронова. От того,
[50:27.560 --> 50:32.440]  что у меня внизу какие-то сайты новые появляются, вид диаграммы Воронова внутри этой параболы не
[50:32.440 --> 50:37.760]  поменяется. Ну, значит, давайте я вот здесь буду полностью хранить. И более того, мне нужно,
[50:37.760 --> 50:44.600]  чтобы точка лежала не в какой-то конкретной параболе, не над конкретной параболой, а над одной из тех,
[50:44.600 --> 50:49.680]  которые мы уже рассмотрели. То есть, либо вот над этой параболой, либо вот над этой, либо вот над
[50:49.680 --> 50:55.120]  этой, ну и так далее. То есть, каждый сайт задает параболу, и если я нахожусь, если X находится
[50:55.120 --> 51:04.400]  вот выше вот этой вот линии, где-то там, тогда там мне известна вид диаграммы Воронова. Вот. Ну,
[51:04.400 --> 51:16.040]  собственно, хорошо. Эту штуку называют beach line, потому что она же береговая линия. Ну, потому что,
[51:16.040 --> 51:24.200]  типа, волны такие красивенькие такие. Вот. Значит, мы будем хранить вид этой береговой линии как,
[51:24.200 --> 51:28.520]  собственно, просто последовательность дук-парабол. Ну, то есть, у меня есть вот одна парабола, как бы отсюда
[51:28.520 --> 51:38.600]  до сюда, грубо говоря, потом другая отсюда до сюда, и третья отсюда до сюда. Вряд ли. Нет, нет, нет, нет, нет.
[51:38.600 --> 52:01.240]  Храним как, ну, давайте пишу пока последовательность, последовательность дук-парабол. Вот. Хорошо. Теперь
[52:01.240 --> 52:06.080]  надо понять, как меняется у нас этот профиль, как меняется береговая линия при каких-то событиях.
[52:06.080 --> 52:13.080]  Значит, события на самом деле бывают двух типов. События по изменению береговой линии. Событие первое
[52:13.080 --> 52:22.800]  называется событие точка. Значит, оно же site event. Это когда при движении вот этой вот директрисы,
[52:23.800 --> 52:41.600]  мы натыкаемся на очередной сайт. На очередной сайт. Тогда по факту мне нужно вставить в береговой линии
[52:41.600 --> 52:47.360]  новую параболу, потому что у меня появился новый сайт, а нас дают какую-то новую параболу, как те точки,
[52:47.360 --> 52:53.520]  которые ближе к нему, к этому сайту, чем к директрисе. Вот. Ну, в момент времени, когда у меня
[52:53.520 --> 52:59.680]  директриса прям проходит через эту точку, у меня парабола вырождается вот в такую вот вертикальней,
[52:59.680 --> 53:05.360]  на самом деле, просто лучшую. Давайте вот так вот нарисую, как будто такая узенькая, тоненькая
[53:05.360 --> 53:11.360]  парабола. Но дальше, когда я директрису начну опускать, у меня эта парабола начнет раздуваться и вот так
[53:11.360 --> 53:17.920]  вот разбухать, так вот расцветать по факту. То есть ее вершина будет спускаться все ниже и ниже, и она
[53:17.920 --> 53:23.720]  будет расширяться, раскрываться. Ну, значит, мне нужно ее вставить, потому что, начиная с этого момента,
[53:23.720 --> 53:30.520]  у меня появляется такая парабола в битчлайне, мне нужно ее вставить. По факту просто вставка
[53:30.520 --> 53:55.520]  новой параболы в береговую линию. Вот. Причем, смотрите, давайте вот проследим за точками пересечения,
[53:55.520 --> 54:00.080]  которые были у меня там до этого и которые вот здесь там одна очередная появилась. Когда я вот
[54:00.080 --> 54:05.960]  пересекаю вот такую вот параболу с этой, у меня появляется здесь точка пересечения. Смотрите,
[54:05.960 --> 54:10.760]  точка пересечения двух соседних парабол, это как раз точки, равно удаленные от двух фокусов,
[54:10.760 --> 54:16.440]  потому что вся парабола равно удалена от фокуса и директрисы, две соседние равно удалены, собственно,
[54:16.440 --> 54:24.080]  от двух вот этих соседних фокусов. Вот это равно вот этому скажем. Значит, эта точка, на самом деле,
[54:24.080 --> 54:30.400]  она удаляется вот этому второму свойству. И вот эти точки, являющиеся пересечения
[54:30.400 --> 54:34.920]  ЯМИ соседних парабол, буду как раз нам вычерчивать ребра диаграммы Воронова.
[54:54.080 --> 55:06.720]  Ну, потому что как бы эти точки равно удалены от этих двух, больше никого ближе нет, но это надо
[55:06.720 --> 55:10.840]  строго доказывать. Ну, давайте пропустим. В общем, можно показать, что если у вас такая
[55:10.840 --> 55:19.880]  береговая линия, то ближе никого к этой точке нет. Можно показать, давайте скрипнем. Вот. Ну и все,
[55:19.880 --> 55:23.560]  тогда, соответственно, когда вот представьте, у вас эта береговая линия двигается, у вас пора
[55:23.560 --> 55:28.000]  было чуть-чуть раскрывается, и точка переносится, соответственно, как-то двигается. Причем она двигается
[55:28.000 --> 55:33.100]  вдоль серпера как раз между этими точками. Ну, потому что, как бы, параболы равно удалены от фокусов,
[55:33.100 --> 55:36.980]  поэтому точка переносится вдоль прямой, ну как бы равно удаленной от фокусов, то есть вдоль
[55:36.980 --> 55:43.920]  серпера. Поэтому у вас эта точка переносится. Ну и вот как раз вычерчивать кусочек диаграммы.
[55:43.920 --> 55:59.080]  вот собственно основное содержание алгоритма вот но еще осталось только сказать про про вершины
[55:59.080 --> 56:08.240]  что скажем в момент что такое вершины мы вершины ты когда три сайта как это равно удалены а ну да
[56:08.240 --> 56:12.560]  или более это происходит в момент когда у нас на самом деле какая-то из парабол склеивается
[56:12.560 --> 56:18.320]  какая-то из парабол и станчается и исчезает то есть ну вот представьте у нас были какие-то
[56:18.320 --> 56:25.240]  параболы такая такая толстенькая и вот такая соответственно вот у меня бичлайн был вот такой
[56:25.240 --> 56:32.320]  вот так вот так вот дальше когда я спускаю директрису вниз и вниз у меня но вот они начинают
[56:32.320 --> 56:40.680]  вот так вот разбухать как-то сужаться и рано или поздно вот это вот более более толстая как бы
[56:40.680 --> 56:46.980]  более высокая парабола более раскрывшуюся она затмится вот этими более низкими то есть
[56:46.980 --> 56:51.720]  мне как бы вот одновременно будут вот такие три параболы такие что они будут по факту в одной
[56:51.720 --> 56:57.280]  точке пересекаться то есть ну как бы иногда у меня бывает такое что две вот эти вот не соседние
[56:57.280 --> 57:04.200]  параболы перекрывают какую-то лежащую между ними это как раз вершина диаграммы воронова потому
[57:04.200 --> 57:10.440]  что эта точка равно как бы лежит на трех параболах значит она равно удальна хотя бы от трех прямых
[57:10.440 --> 57:17.720]  от трех сайтов ссори вот от этого этого этого это называется событие окружность событие окружность
[57:17.720 --> 57:33.920]  он же circle event ну да можете подумать я думаю что это не давайте давайте в любом случае бы дай
[57:33.920 --> 57:48.480]  сейчас полминутки подумаю типа насколько очевидно или нет сейчас сейчас момент момент момент сейчас
[57:48.480 --> 57:56.920]  сейчас погодите погодите а ну наверное смотрите типа если если был бы кто-то ближе но давайте
[57:56.920 --> 58:01.280]  про ребра скажем то есть я утверждаю что у меня точка течения с этих парабол обязательно вычерчивает
[58:01.280 --> 58:07.120]  ребро пусть не ну то есть понятно что эти две есть здесь пусть есть кто-то ближе то есть есть
[58:07.120 --> 58:16.200]  какой-то сайт ближе к этой точке чем вот эти два но тогда извините расстояние до сайта меньше чем
[58:16.200 --> 58:23.080]  расстояние от этой точки до прямой поэтому эта точка лежит внутри какой-то другой парабол
[58:23.080 --> 58:33.480]  но это наверное не бывает сейчас
[58:33.480 --> 58:41.480]  ну да типа если она внутри какой-то параболы то у меня вот такой бичлайн должен быть у меня
[58:41.480 --> 58:48.520]  же она должен быть внутренней точка не гранично да то есть еще раз это неважно но меня попросили
[58:48.520 --> 58:53.120]  доказать почему вот эта точка когда и когда я пересекаю два соседних две средние параболы
[58:53.120 --> 58:58.800]  эта точка реально вычерчивает ребро но мне нужно вот этот критерий я понимаю что эта точка равна
[58:58.800 --> 59:04.040]  удалена от двух фокусов это мы и так понимаем почему нет других скажем почему нет точек внутри вот
[59:04.040 --> 59:08.320]  этого вот круга то есть если я нарисую такой круг да то есть с центра в этой точке проходящие
[59:08.320 --> 59:12.680]  за эти два фокуса ну и заодно касающиеся прямой потому что точка равна удалена от этих всех трех
[59:12.680 --> 59:18.280]  фигур почему нет других сайтов внутри но если бы у меня какой-то был сайт внутри вот здесь вот
[59:18.280 --> 59:25.480]  соответственно расстояние до него было бы меньше чем радиус этого круга то тогда расстояние от
[59:25.480 --> 59:33.760]  этой точки до этого сайта еще мимо как бы меньше чем расстояние от точки до прямой ну потому что
[59:33.760 --> 59:39.840]  вот вот эти штуки равны а вот этот пунктирный меньше значит парабол образованная этим фокусом и
[59:39.840 --> 59:46.840]  этой прямой содержит эту точку внутри себя потому что до фокуса меньше чем до прямой значит
[59:46.840 --> 59:51.320]  внутри поэтому есть какая-то вот такая вот еще парабол с держащей точку внутри но тогда это
[59:51.320 --> 59:55.280]  не бичлайн был потому что бичлайн для каждой вот такой вот вертикальной прямой стежу самую
[59:55.280 --> 01:00:06.360]  низкую точку да а если это внутри строго внутри параболы то значит косяк еще раз
[01:00:09.840 --> 01:00:16.440]  нет еще раз смотрите у вас есть точка пересечения двух парабол она равна удалена от двух фокусов и
[01:00:16.440 --> 01:00:25.560]  прямой вот эти три штуки одинаковая если внутри есть другой сайт вот этот вот то до него расстояние
[01:00:25.560 --> 01:00:34.040]  меньше чем до прямой супер ну короче при желании можно доказать причем не сложно так значит сюда
[01:00:34.040 --> 01:00:39.720]  сюда вернемся я утверждаю что вот бывают моменты когда у меня какая-то парабола затмевается
[01:00:39.720 --> 01:00:45.160]  двумя другими это называется события окружность потому что в этот момент точка их пересечения
[01:00:45.160 --> 01:00:55.520]  точка причины трех парабол образует вершину значит точка пересечения трех соседних парабол
[01:00:55.520 --> 01:01:04.240]  задает вершину диаграмма воронова
[01:01:04.240 --> 01:01:14.360]  ну потому что она равна удалена от трех сайтов значит как раз вершина
[01:01:25.520 --> 01:01:40.000]  вот все соответственно смотрите у нас будет две структуры данных в первой у меня будет
[01:01:40.000 --> 01:01:51.120]  содержаться описание bitchline я буду я сделаю это просто с помощью сета значит сет будут меня
[01:01:51.120 --> 01:02:02.400]  хранить bitchline хранить береговую линию значит элементом сета является дуга параболы
[01:02:02.400 --> 01:02:13.840]  как ее можно задать кажется хватает следующий чтобы задать дугу ну во первых у меня есть
[01:02:13.840 --> 01:02:19.000]  какая-то глобальная переменная y который задает текущую координаты директрисы текущую коронату
[01:02:19.960 --> 01:02:27.640]  вот если у меня это фиксировано то любая дуга окружности кажется дуга парабол извините задается
[01:02:27.640 --> 01:02:37.480]  просто двумя соседними фокусами есть пи какой-то пж есть у меня директриса есть одна парабола
[01:02:37.480 --> 01:02:47.760]  есть другая парабола вот значит если я просто храню пи пж в этом порядке то я говорю что дуга
[01:02:47.760 --> 01:02:53.840]  соответствующие этой ну как бы этому элементу это вот этот вот какой-то кусок этой параболы то
[01:02:53.840 --> 01:02:59.520]  есть там я не знаю где он там начинается но какой-то такой конечно его кусок лежит то есть я просто
[01:02:59.520 --> 01:03:09.080]  храню по факту два соседних фокус 2 соседних вот ну если надо я могу хранить еще и предыдущий чтобы
[01:03:09.080 --> 01:03:13.760]  знать где она заканчивается ну то есть точнее где она начинается если я знаю вот здесь вот еще
[01:03:13.760 --> 01:03:18.920]  одну параболу чем она задается то я знаю начальную точку этого фокуса этой дуги но это не
[01:03:18.920 --> 01:03:24.560]  нужно будет не нужно мне достаточно хранить двух как бы зная где она заканчивается потому что если
[01:03:24.560 --> 01:03:28.640]  что я могу взять предыдущий элемент сете и понять собственно вот эту точку печень двух предыдущих
[01:03:28.640 --> 01:03:38.800]  парабол вот кажется не будем да нам надо просто вставлять да да и причем эти элементы именно
[01:03:38.800 --> 01:03:48.560]  отсортированы по вот этой вот правой границе точки пересечения значит дуги в сете отсортированы
[01:03:48.560 --> 01:03:52.480]  по x координате конца дуги
[01:03:52.480 --> 01:04:08.760]  нет вот именно что как бы структурка который он как бы структ нот который вы храните в сете это
[01:04:08.760 --> 01:04:16.080]  именно кажется просто две точки по и пыжи и при необходимости вы можете для данного фиксированного
[01:04:16.080 --> 01:04:20.080]  y вы можете посчитать где эти параболы пересекаются вы можете посетить коронат этой точки и
[01:04:20.080 --> 01:04:26.120]  соответственно когда в каждом момент времени вы знаете порядок дуг ну то есть вы храните что в
[01:04:26.120 --> 01:04:35.120]  сете вот они в этом порядке и лежат у какого компаратора у вас есть одна пара парабол
[01:04:35.120 --> 01:04:40.320]  задающий вот такую дугу другая парабол за такую дугу вы вычисляете точки пересечения то есть вы
[01:04:40.320 --> 01:04:46.800]  взяли вот эту точку там и какой-то вот эту точку то есть вы пересекли параболы и дальше
[01:04:46.800 --> 01:04:57.400]  сорвать их x координат конец вот и причем у меня как бы порядок парабол ну как бы я понимаю что с
[01:04:57.400 --> 01:05:02.760]  ним происходит если на немножко двигаю директрис у меня ничего не меняется единственное что
[01:05:02.760 --> 01:05:07.520]  происходит иногда новые появляются и какие-то исчезают когда у меня вот эти вот вот как я
[01:05:07.520 --> 01:05:11.320]  тут рисовал вот эти две параболы настолько расширились что они затмили какой-то то что
[01:05:11.320 --> 01:05:16.920]  было между ними тогда нужно просто эту эту из этого вы вытащить и удалить все относительно
[01:05:16.920 --> 01:05:26.800]  порядок не меняется у них кроме вот этих вставок и удалений вот насчет первая структура где мы
[01:05:26.800 --> 01:05:34.760]  храним собственно описание бичлайна и нужна вторая это будет просто куча у нас ну там то есть
[01:05:34.760 --> 01:05:45.640]  очередь с приоритетом как угодно приоритетом это просто список событий список событий
[01:05:45.640 --> 01:05:52.760]  список событий откуда мы достаем каждый раз события с максимальным y
[01:05:52.760 --> 01:06:05.240]  достаем события с максимальным y ну потому что иду сверху вниз да и соответственно
[01:06:05.240 --> 01:06:10.480]  порядка убывания y каждое событие не нужно достать максимальный y события напоминает
[01:06:10.480 --> 01:06:17.360]  появление новой новой параболы новой точки site event либо события когда две параболы затмевают
[01:06:18.360 --> 01:06:23.760]  то есть давайте давайте прям как их добавлять ну сайты вон понятно можно в самом начале по
[01:06:23.760 --> 01:06:28.960]  всем точкам пройти искать в таком-то игреке если какая-то точка пи то я знаю что вот в
[01:06:28.960 --> 01:06:35.400]  этот момент времени когда у меня такая-то ордината я знаю что появляется новая парабола вот вот такого
[01:06:35.400 --> 01:06:42.640]  вида соответственно она появляется какие там две соседние ну темп в простом случае одну параболу
[01:06:42.640 --> 01:06:47.320]  пересекает мне нужно вставить ее вот между между как бы то есть у меня вот это дуга теперь то есть
[01:06:47.320 --> 01:06:54.400]  у меня была одна такая большая дуга станет такая потом эта точка потом такая потому что потом
[01:06:54.400 --> 01:07:00.400]  она начнет раскрываться и соответственно вот как-то так вот пересекать мою мою старую параболу вот
[01:07:00.400 --> 01:07:05.960]  это это это просто как обрабатывать события окружность когда оно происходит ну смотрите
[01:07:05.960 --> 01:07:11.800]  давайте в каждый момент времени если у меня какая-то береговая линия то есть есть какие-то
[01:07:11.800 --> 01:07:21.800]  параболы давайте для каждой тройки последовательных парабол вот в порядке сета давайте поймем какая
[01:07:21.800 --> 01:07:27.880]  должна быть y координата чтобы две вот эти вот крайние затмели среднюю как-то сделать ну мы знаем
[01:07:27.880 --> 01:07:34.360]  в какой точке должно произойти значит я знаю скажем давайте я нарисую да что вот есть у меня
[01:07:34.360 --> 01:07:42.280]  одна такая парабола и две соседние вот такие значит когда они затмевают центральную в момент
[01:07:42.280 --> 01:07:50.200]  времени когда их точка пересечения равно удалена от всех фокусов и еще и от директрисы значит мне
[01:07:50.200 --> 01:07:57.120]  нужно понять в какой момент времени что-то у них есть какие-то фокусы что такое точка равна удаленной
[01:07:57.120 --> 01:08:04.000]  от них это от центра описанной окружности для них ну то есть я там стройки серперы и определяю
[01:08:04.000 --> 01:08:09.680]  точку описанной окружности вот этого вот треугольника какая-то окружность вот вам вот
[01:08:09.680 --> 01:08:17.200]  вам почему сёркл и вент какая точка о значит в момент времени когда директрисы проходит вот
[01:08:17.200 --> 01:08:24.200]  так вот касательно к моему кругу как раз это вершины и появляется то есть если у меня давайте так
[01:08:24.200 --> 01:08:44.040]  напишем если пи пж пк 3 последовательных фокуса то описываем окружность вокруг этого треугольника
[01:08:44.040 --> 01:09:01.880]  говорим что пусть о центр описанной окружности этого треугольника ну и дальше значит мы знаем
[01:09:01.880 --> 01:09:08.720]  радиус там мы откладываем еще на r вниз и говорим что вот в этом вот y равная там о точка y минус
[01:09:09.360 --> 01:09:16.320]  вот в этой вот координации вот в этой вот ординации у меня происходит событие точка с событие круг
[01:09:16.320 --> 01:09:22.520]  события окружность когда вот эти вот две соседние не соседние параболы затмевают вот эту вот
[01:09:22.520 --> 01:09:26.740]  центральная то есть картинка в этом оory cinema будет какой-то вот такой что у меня будет одна
[01:09:26.740 --> 01:09:35.360]  парабола вот такая вот это вот будет какая-то вот такая а центральная будет вот так вот
[01:09:35.360 --> 01:09:37.860]  между ними проходить и будет полностью ими затмеваться
[01:09:37.860 --> 01:09:38.860]  с обеих сторон.
[01:09:38.860 --> 01:09:39.860]  Что-то понятно?
[01:09:39.860 --> 01:09:40.860]  Что?
[01:09:40.860 --> 01:09:41.860]  Хайпуйте, кайф.
[01:09:41.860 --> 01:09:46.860]  Не знаю, что это значит, но ладно.
[01:09:46.860 --> 01:09:47.860]  Вот.
[01:09:47.860 --> 01:09:54.860]  Тут надо аккуратно сказать, что происходит, если PIPGPK
[01:09:54.860 --> 01:09:59.260]  на одной прямой, нельзя построить центрописной окружности,
[01:09:59.260 --> 01:10:00.260]  да?
[01:10:00.260 --> 01:10:01.260]  Ну, давайте подумаем чуть-чуть.
[01:10:01.260 --> 01:10:02.260]  Нет?
[01:10:02.260 --> 01:10:03.260]  Вы против?
[01:10:03.260 --> 01:10:04.260]  Нет?
[01:10:04.260 --> 01:10:05.260]  Вы против?
[01:10:05.260 --> 01:10:06.260]  Очень жаль.
[01:10:06.260 --> 01:10:12.480]  Ну, если PIPGPK на одной окружности у вас, на одной прямой,
[01:10:12.480 --> 01:10:17.560]  у вас нет треугольника и нет описной окружности.
[01:10:17.560 --> 01:10:18.560]  Давайте подумаем.
[01:10:18.560 --> 01:10:23.560]  Почему параллельно?
[01:10:23.560 --> 01:10:36.620]  А, типа затмения не будет, типа?
[01:10:36.620 --> 01:10:37.620]  Ага.
[01:10:37.620 --> 01:10:39.620]  Ну да, да, да, да, справедливо.
[01:10:39.620 --> 01:10:40.620]  Значит, нам просто ничего не надо делать.
[01:10:40.620 --> 01:10:43.220]  А то есть, вот если у меня три на одной прямой, то
[01:10:43.220 --> 01:10:46.660]  у меня вот эти параболы, они друг друга никогда
[01:10:46.660 --> 01:10:52.180]  не затмевают, потому что точки пересечения, ну, вычерчивают
[01:10:52.180 --> 01:10:59.080]  серпер, ну, я как мог, вычерчивать серпер между соседними
[01:10:59.080 --> 01:11:00.080]  точками.
[01:11:00.080 --> 01:11:01.080]  Поэтому они не пересекутся и все хорошо.
[01:11:01.080 --> 01:11:02.080]  Понимаю.
[01:11:02.080 --> 01:11:03.080]  Вот.
[01:11:03.080 --> 01:11:04.080]  Ну, чего?
[01:11:04.080 --> 01:11:05.080]  Все.
[01:11:05.080 --> 01:11:13.080]  То есть, мне нужно, смотрите, чтобы вот с этим вот разобраться,
[01:11:13.080 --> 01:11:14.080]  мне нужно делать следующее.
[01:11:14.080 --> 01:11:17.880]  В каждое время, когда перестраивается структура береговой линии,
[01:11:17.880 --> 01:11:20.480]  когда там что-то вставляется или что-то удаляется, мне
[01:11:20.800 --> 01:11:24.260]  нужно для каждой тройки последовательных парабол,
[01:11:24.260 --> 01:11:27.300]  для каждой тройки последовательных парабол двух посчитать
[01:11:27.300 --> 01:11:29.200]  центр описанной окружности и сказать, что в этот момент
[01:11:29.200 --> 01:11:32.860]  времени происходит событие затмения.
[01:11:32.860 --> 01:11:34.320]  Ну, все.
[01:11:34.320 --> 01:11:36.020]  А событий изменений у меня мало.
[01:11:36.020 --> 01:11:38.020]  У меня событий изменений по факту только сайты
[01:11:38.020 --> 01:11:38.360]  в Энте, когда что-то вставляется.
[01:11:38.360 --> 01:11:42.020]  Ну давайте в момент этой вставки, когда у меня вставляется
[01:11:42.020 --> 01:11:45.620]  одна парабола, давайте, я там, вот, то есть, у меня
[01:11:45.620 --> 01:11:46.620]  в нов...
[01:11:46.620 --> 01:11:47.780]  Ну, новые тройки образуются, по факту.
[01:11:47.780 --> 01:11:50.420]  была вот эта-вот эта-вот эта, вот эта-вот эта-вот эта,
[01:11:50.420 --> 01:11:51.680]  вот эта-вот эта-вот эта. Ну, там.
[01:11:51.680 --> 01:11:54.380]  От единиц новых троих, содержащих новую парабол.
[01:11:54.380 --> 01:11:56.020]  Давайте для каждой из них...
[01:11:56.020 --> 01:11:57.620]  Благо, они получаются за алгорифм.
[01:11:57.620 --> 01:11:59.980]  Просто минус-минусом и плюс-плюсом в сете.
[01:11:59.980 --> 01:12:01.700]  Значит, давайте для каждой новой тройке,
[01:12:01.700 --> 01:12:03.320]  которая только что образовалась,
[01:12:03.320 --> 01:12:05.080]  построим circle event и положим его,
[01:12:05.080 --> 01:12:06.540]  что когда директриса будет такой,
[01:12:06.540 --> 01:12:09.220]  тогда будет событий с circle event.
[01:12:09.220 --> 01:12:11.780]  Поэтому запишем следующее.
[01:12:11.780 --> 01:12:14.480]  В любой момент, в каждый момент.
[01:12:17.780 --> 01:12:21.780]  изменения сета,
[01:12:25.780 --> 01:12:31.780]  смотрим на все новые тройки
[01:12:35.780 --> 01:12:39.780]  последовательных парабол
[01:12:39.780 --> 01:12:47.780]  и добавляем в очередь событий новый circle event
[01:12:56.780 --> 01:13:00.780]  новый circle event
[01:13:00.780 --> 01:13:04.780]  в этот раз мы не будем делать
[01:13:08.780 --> 01:13:12.780]  в момент обработки circle event
[01:13:12.780 --> 01:13:16.780]  когда у меня было три парабола, осталось две
[01:13:16.780 --> 01:13:20.780]  когда центральная пропала, у меня тоже появляются новые тройки
[01:13:20.780 --> 01:13:24.780]  потому что теперь вот эти две крайние стали соседними
[01:13:24.780 --> 01:13:28.780]  и мне нужно смотреть новые тройки, которые ими образуются
[01:13:28.780 --> 01:13:32.780]  в то время, когда что-то с бичлайном происходит, мне нужно рассмотреть все новые тройки
[01:13:32.780 --> 01:13:36.780]  благо это просто делается, потому что я знаю, где произошло изменение
[01:13:36.780 --> 01:13:40.780]  локально двигаюсь влево-вправо, на 3 влево, на 3 вправо
[01:13:40.780 --> 01:13:44.780]  рассматриваю все новые тройки, все новые circle events добавляю
[01:13:44.780 --> 01:13:48.780]  ну и последнее, бывает такое, что у меня происходит false alarm
[01:13:48.780 --> 01:13:52.780]  ложная тревога
[01:13:52.780 --> 01:13:56.780]  когда пришел circle event
[01:13:56.780 --> 01:14:00.780]  от каких-то парабол, которые уже раньше были удалены
[01:14:00.780 --> 01:14:04.780]  то есть я когда-то там что-то три соседние парабола пересек
[01:14:04.780 --> 01:14:08.780]  сказал, что вот здесь-то будет circle event, но потом после этого
[01:14:08.780 --> 01:14:12.780]  у меня уже от другого circle event или от какой-то вставки
[01:14:12.780 --> 01:14:16.780]  на этих трех параболах поменялся порядок, и этот circle event пропал
[01:14:16.780 --> 01:14:20.780]  эти три стали непоследовательными, или одна из них удалилась раньше
[01:14:20.780 --> 01:14:24.780]  что-то такое, тогда мне просто приходит событие, говорит, ага, посмотри, пожалуйста,
[01:14:24.780 --> 01:14:28.780]  на эти три параболы, и скажи, что они задают вершины диаграммы Воронова
[01:14:28.780 --> 01:14:32.780]  я такой, ну чувак, они уже удалились, я ничего не могу сделать, это типа старая информация
[01:14:32.780 --> 01:14:36.780]  ты мне говоришь про вершину, которая была бы, если бы я там
[01:14:36.780 --> 01:14:40.780]  ничего не поменял, но я уже поменял, поэтому я ее игнорирую
[01:14:40.780 --> 01:14:44.780]  как это чекнуть? ну видимо нужно
[01:14:44.780 --> 01:14:48.780]  в момент времени создания circle event, вот для этого y
[01:14:48.780 --> 01:14:52.780]  хранить на указательной вершины сета
[01:14:52.780 --> 01:14:56.780]  на элементы сета, что вот эти три последовательные элементы сета
[01:14:56.780 --> 01:15:00.780]  задают circle event, и дальше если какая-то из них не лежит уже в сете, или они
[01:15:00.780 --> 01:15:04.780]  непоследовательные, тогда мы его просто игнорируем
[01:15:04.780 --> 01:15:08.780]  если три параболы
[01:15:08.780 --> 01:15:12.780]  задающие
[01:15:12.780 --> 01:15:16.780]  circle event
[01:15:18.780 --> 01:15:22.780]  уже непоследовательные, или вообще не существуют
[01:15:30.780 --> 01:15:34.780]  то просто continue
[01:15:36.780 --> 01:15:40.780]  я это просто событие не обрабатываю, говорю, что оно
[01:15:40.780 --> 01:15:44.780]  как бы несодержательно
[01:15:48.780 --> 01:15:52.780]  вот
[01:15:52.780 --> 01:15:56.780]  ну кажется, что все
[01:15:56.780 --> 01:16:00.780]  единственное, надо еще сказать, что, давайте на примере
[01:16:00.780 --> 01:16:04.780]  какой-нибудь простой пример, давайте три точки сначала
[01:16:04.780 --> 01:16:08.780]  пусть у меня вот такие три сайта
[01:16:08.780 --> 01:16:12.780]  пример
[01:16:12.780 --> 01:16:16.780]  вот такие три сайта, значит изначально у меня директриса доходит
[01:16:16.780 --> 01:16:20.780]  до сюда, в этот момент времени я добавляю одну вот такую вот параболу
[01:16:22.780 --> 01:16:26.780]  и все, просто добавляю такую параболу
[01:16:26.780 --> 01:16:30.780]  дальше я начинаю ее опускать, директрису опускать, у меня
[01:16:30.780 --> 01:16:34.780]  раскрывается, расширяется моя парабола, вот так вот
[01:16:34.780 --> 01:16:38.780]  в момент времени, когда я дошел директрисой до вот этой вот прямой
[01:16:38.780 --> 01:16:42.780]  давайте для простоты одну только точку пока рассмотрю, другая будет чуть ниже
[01:16:42.780 --> 01:16:46.780]  вот этот сайт P1, скажем, был, это P2, это P3
[01:16:46.780 --> 01:16:50.780]  в этот момент времени у меня парабола вот такая
[01:16:50.780 --> 01:16:54.780]  парабола соответствующая P1 вот такая
[01:16:54.780 --> 01:16:58.780]  теперь пришла новая точка, сайт event, в этот момент времени
[01:16:58.780 --> 01:17:02.780]  появляется новая парабола вот такого вида
[01:17:02.780 --> 01:17:06.780]  вот такая узенькая-узенькая, бесконечно узкая парабола вверх
[01:17:06.780 --> 01:17:10.780]  но она входит в beachline, более того, beachline теперь такой
[01:17:10.780 --> 01:17:14.780]  сначала вот эта вот дуга первой параболы, потом
[01:17:14.780 --> 01:17:18.780]  вот такая вот дуга второй, потом опять первый, то есть у меня в сете
[01:17:18.780 --> 01:17:22.780]  будет следующее, у меня будет, значит, что у меня, у меня сначала есть
[01:17:22.780 --> 01:17:28.780]  у меня есть парабола, задаваемая точками P1, P2
[01:17:32.780 --> 01:17:36.780]  вот этот кусок, потом P2, P1
[01:17:36.780 --> 01:17:40.780]  вот это вот, потому что сначала
[01:17:40.780 --> 01:17:44.780]  ну как бы, у меня есть кусок параболы, задаваемые P2, и ограничено оно P1
[01:17:44.780 --> 01:17:48.780]  потом 5P1P1, нет, сейчас
[01:17:48.780 --> 01:17:52.780]  ой, а это как я храню?
[01:17:58.780 --> 01:18:02.780]  ну вот эта парабола непонятно как хранить, или ее можно вообще не хранить, ну это странно
[01:18:02.780 --> 01:18:06.780]  ну то есть в каком-то смысле, вот это
[01:18:06.780 --> 01:18:10.780]  это типа парабола P1 бесконечность
[01:18:14.780 --> 01:18:18.780]  да, да, да, да, то есть для вот этой дуги у нее как бы нет следующей
[01:18:18.780 --> 01:18:22.780]  она не ограничена справа, поэтому она сдается только этим фокусом
[01:18:28.780 --> 01:18:30.780]  давайте я так напишу пока
[01:18:32.780 --> 01:18:36.780]  ну да, вот, что произошло, у меня поменялся бичлайн
[01:18:36.780 --> 01:18:40.780]  у меня произошли какие-то сёркл-эвенты, у меня появились события
[01:18:40.780 --> 01:18:44.780]  там, чего-то там, давайте посмотрим, что будет, когда я немножко снижу эту директрису
[01:18:44.780 --> 01:18:48.780]  у меня вот эта парабола начнет раскрываться, и будет вот какой-то вот такой вот
[01:18:48.780 --> 01:18:52.780]  и точки пересечения, вот эти вот, которые были изначально здесь
[01:18:52.780 --> 01:18:56.780]  теперь они будут двигаться вот так, вот эти две точки пересечения, одна движется туда
[01:18:56.780 --> 01:19:00.780]  другая движется сюда, буду как раз заметать ребро, причем
[01:19:00.780 --> 01:19:04.780]  и именно, что поскольку у меня вот эта парабола расширяется, и это тоже расширяется
[01:19:04.780 --> 01:19:08.780]  точек пересечения будет две, и они будут вот так вот двигаться, одна туда, другая сюда
[01:19:08.780 --> 01:19:10.780]  и они вместе заметают ребро
[01:19:14.780 --> 01:19:16.780]  чего-чего?
[01:19:18.780 --> 01:19:22.780]  не-не-не, это вот это как раз
[01:19:22.780 --> 01:19:26.780]  да, как раз конец задается пересечением EMP1 и EMP2
[01:19:26.780 --> 01:19:28.780]  она и соответствует вот этому
[01:19:28.780 --> 01:19:30.780]  она начинается в минус бесконечности
[01:19:30.780 --> 01:19:32.780]  она начинается в минус бесконечности, да
[01:19:32.780 --> 01:19:36.780]  но я храню конец, типа у меня, первое это на какой параболы мы лежим
[01:19:36.780 --> 01:19:38.780]  а второе это описание конца
[01:19:38.780 --> 01:19:40.780]  да, то есть это как бесконечный влево как раз
[01:19:40.780 --> 01:19:44.780]  вот, то есть в этот момент времени у меня начинается ребро
[01:19:44.780 --> 01:19:46.780]  и дальше, значит, мне нужно построить круг
[01:19:46.780 --> 01:19:50.780]  с центром, то есть смотри, у меня вот есть три параболы
[01:19:50.780 --> 01:19:54.780]  но тут не получается circle event, потому что у меня
[01:19:54.780 --> 01:19:56.780]  все рассмотренные сайты пока что лежат на одной прямой
[01:19:56.780 --> 01:20:00.780]  значит, пока что этот самый circle не произошел
[01:20:00.780 --> 01:20:02.780]  circle у меня будет в момент времени, когда у меня дойдется до этой точки
[01:20:02.780 --> 01:20:04.780]  добавится новая парабола
[01:20:04.780 --> 01:20:06.780]  и будет три последних параболы
[01:20:06.780 --> 01:20:08.780]  вот эта вот, вот эта вот и вот эта вот
[01:20:08.780 --> 01:20:12.780]  если я их пересеку, то как раз получу центр описанной окружности этих трех сайтов
[01:20:12.780 --> 01:20:16.780]  получше, что вот здесь вот происходит появление вершин диаграммы Воронова
[01:20:16.780 --> 01:20:20.780]  это как раз когда пересечение этих двух парабол дошло вот до сюда
[01:20:20.780 --> 01:20:24.780]  да, то есть у меня вот такой кусок серпера нарисовался
[01:20:24.780 --> 01:20:30.780]  пересечение этих двух дошло, то есть это еще раскрылось, стало вот до сюда
[01:20:30.780 --> 01:20:34.780]  и соответственно кусок, как они пересекаются, они движутся как-то вот так вот
[01:20:34.780 --> 01:20:36.780]  по этому серперу
[01:20:36.780 --> 01:20:38.780]  ну и соответственно вот в момент времени, когда это дошло до сюда, а это до сюда
[01:20:38.780 --> 01:20:40.780]  у меня появилась вершина диаграммы Воронова
[01:20:40.780 --> 01:20:42.780]  ну все, дальше он движется, просто вот эти две
[01:20:42.780 --> 01:20:46.780]  будет какое-то вот такое вот бесконечное ребро вниз
[01:20:48.780 --> 01:20:52.780]  нет, тут нет false alarma здесь, потому что у меня только один раз произошел circle event
[01:20:52.780 --> 01:20:58.780]  когда вот эти вот три последние параболы для P2, P1 и P3 стали последовательными
[01:20:58.780 --> 01:21:02.780]  в этот момент добавляется circle event и это будет реальная точка
[01:21:02.780 --> 01:21:06.780]  но надо более сложный случай какой-то рисовать
[01:21:06.780 --> 01:21:10.780]  когда скажем
[01:21:10.780 --> 01:21:14.780]  когда скажем вот здесь появляется какая-то точка
[01:21:14.780 --> 01:21:16.780]  у меня скажем вот эти три параболы были, да, вот например так
[01:21:16.780 --> 01:21:18.780]  у меня были вот такие три последние параболы
[01:21:18.780 --> 01:21:22.780]  для них circle event был где-то вот там, вот где-то очень далеко
[01:21:22.780 --> 01:21:24.780]  потому что треугольник очень тупоугольный
[01:21:24.780 --> 01:21:28.780]  дальше, когда директорис доходит вот до сюда, у меня появляется вот такая новая парабола
[01:21:28.780 --> 01:21:32.780]  и соответственно тогда эти три перестают быть последовательными
[01:21:32.780 --> 01:21:36.780]  и вот то событие уже не актуально, оно выбрасывается, ну как бы оно игнорируется
[01:21:36.780 --> 01:21:40.780]  у меня вершина будет от перчения этих двух или этих двух
[01:21:48.780 --> 01:21:52.780]  все, спасибо, извините, что задержал
