[00:00.000 --> 00:15.200]  Лекция 14. Надеюсь, что это последняя лекция. У нас сегодня планируются три сюжета из
[00:15.200 --> 00:19.760]  зависимости того, как быстро мы пройдем первые два, будет зависеть строгость третьего, уровень
[00:19.760 --> 00:30.160]  доказательств. Вот. Считаю, идеальная trade-off. Так, первый сюжет. Это пара, ну давайте ближайших
[00:30.160 --> 00:40.800]  точек. То есть, постановка задачи даны n точек. Давайте считать, что они все различные, иначе у
[00:40.800 --> 00:54.440]  вас расстояние между ближайшими нолей, все очень просто. Именно даны p1, tra-ta-ta, pn различные точки
[00:54.440 --> 01:15.040]  на плоскости. Найти и неравные g такие, что расстояние от p и до pg минимально. Ну, то есть,
[01:15.040 --> 01:20.760]  вы перебираете все возможные пары и считаете расстояние и убираете минимум. Ну, наивное решение
[01:20.760 --> 01:27.000]  за квадрат вроде очевидно. Перебрать все пары точек, посчитать расстояние. Давайте все-таки
[01:27.000 --> 01:34.880]  перейдем чуть-чуть быстрее. А именно, у нас есть много способов решения этой задачи, но мы решим
[01:34.880 --> 01:53.080]  всего лишь одним из них. А именно, у нас будет идея разделяй властвой. В суть таких алгоритмов,
[01:53.080 --> 02:00.280]  ну каноничным представителем такой парадигм является маршорт. То есть, вы что-то били пополам,
[02:00.280 --> 02:05.840]  что-то там делали рекурсивно, потом сливали ответы. Здесь мы будем делать абсолютно так же.
[02:05.840 --> 02:20.800]  А именно, давайте нарисуем наше множество точек. Ну и как легко побить плюс-минус пополам? Наверное,
[02:20.800 --> 02:25.280]  как-то взять и провести вертикальную разграничивающую прямую и отнести все,
[02:25.280 --> 02:31.440]  что слева от нее в одном множестве, все, что справит ее в другое множество. Вот, ну тогда понятно,
[02:31.440 --> 02:37.680]  что допустим, вы здесь как-то рекурсивно нашли ответ. И здесь как-то рекурсивно нашли ответ.
[02:37.680 --> 02:43.840]  Единственный вопрос в том, как ответы сливать. Вот об этом останется поговорить нам. Ну давайте подумать,
[02:43.840 --> 02:48.000]  как сливать. Вначале, чтобы бить множество эффективно пополам рекурсивно, нам нужно
[02:48.000 --> 02:55.280]  что-то делать правильно, отсортировать точки. Поэтому шаг первый. Отсортируем точки
[02:55.280 --> 03:07.080]  ОХ. Окей, когда вы отсортируете, теперь вы можете рекурсивно вызываться от подножия.
[03:07.080 --> 03:19.760]  Рекурсивный вызов от левой и правой половины.
[03:29.760 --> 03:36.680]  Ну база здесь индукции вроде плюс-минус понятна. Если у вас остаются две точки или одна точка,
[03:36.680 --> 03:46.640]  значит, что вы должны что сделать. Ну правильно. Давайте даже базы ставим там две-три точки. Если у
[03:46.640 --> 03:52.440]  вас три точки, то просто перебрать там те возможные попары. Если две точки, то просто вывести длину отрезка.
[03:52.440 --> 03:58.200]  Вот окей. Теперь допустим, что мы знаем здесь ответ, знаем здесь ответ. Как их сливать?
[03:58.200 --> 04:02.400]  Шаг 3. Слияние ответов.
[04:02.400 --> 04:17.640]  Так, ну допустим, что отсюда нам вернулся какой-то ans1, минимальное расстояние в левой половине, а здесь ans2.
[04:17.640 --> 04:33.040]  То есть слева ans1 и ans2. Обозначим за D. Это будет минимум из ans1 и ans2. Ну то есть, как бы, по идее,
[04:33.040 --> 04:38.360]  если бы у нас не было бы стадии слияния ответов, то мы бы вернули бы эту штуку. Что значит стадия
[04:38.360 --> 04:43.840]  слияния? Здесь нужно заметить, что у вас существуют все-таки, все-таки у вас могут быть точки,
[04:43.840 --> 04:49.920]  которые лежат по левую, ну по разные стороны, и при этом быть ближайшими друг к другу. Потому что мы
[04:49.920 --> 04:53.840]  рассмотрели все, которые вот здесь вот, и все, которые вот здесь вот. Но то, что между ними,
[04:53.840 --> 05:03.040]  мы связи никак не рассматривали. Давайте это сделаем. Очевидно следующее, что раз расстояние
[05:03.040 --> 05:09.240]  между ними должно быть не превосходить D, значит нам достаточно рассмотреть полосу вертикальная.
[05:09.240 --> 05:20.880]  Здесь D, здесь D. Почему это так? Потому что все точки вне полосы, если вы будете рассматривать
[05:20.880 --> 05:26.200]  пары точек вне этой полосы, у вас расстояние будет между ними больше чем D, даже больше чем 2D.
[05:26.200 --> 05:37.320]  Вот, то есть рассматриваем такую полосу, дальше внутри нее заведем интересную такую штуку.
[05:37.320 --> 05:55.800]  Давайте здесь напишем, что C от PIT это таких множество G, что PGT.Y по модулю минус PIT.Y не превосходит D.
[05:55.800 --> 06:07.120]  Вот, то есть в некотором плане это у нас будет такое, давайте даже не этот, без знака, без модуля.
[06:07.120 --> 06:19.200]  То есть, что это точки, которые лежат, что у нас получается, чтобы это было положительно при этом?
[06:19.200 --> 06:31.120]  Нуля, то есть у нас PIT.Y меньше либо равен, чем PGT.Y, нет, здесь еще поменяем, здесь PIT и здесь PGT будет.
[06:31.120 --> 06:38.520]  Вот, то есть я хочу посмотреть следующее, то есть вот у меня точка PIT какая-то, да? Тогда что такое C от PIT?
[06:39.520 --> 06:47.720]  Я беру вот этот уровень и отступаю от него еще на D по вертикали, причем вниз специально.
[06:47.720 --> 07:00.360]  Вот, тогда я утверждаю, что если я буду для каждой точки PIT из этой полосы рассматривать вот такие вот полосочки высоты D, причем идущие именно вниз,
[07:00.360 --> 07:06.560]  то я обязательно найду, ну если я найду такую пару, то обязательно найду ответ при слиянии.
[07:09.560 --> 07:11.360]  А в текущий момент понятно, что мы очень делаем?
[07:16.360 --> 07:17.360]  Зал, прием.
[07:18.360 --> 07:19.360]  Окей.
[07:20.360 --> 07:28.360]  Хорошо, я утверждаю следующее. У меня будет несколько утверждений. Первое утверждение, что C от PIT это от единицы.
[07:30.360 --> 07:31.360]  Давайте его докажем.
[07:35.360 --> 07:43.360]  C от PIT по модулю от единицы.
[07:45.360 --> 07:56.360]  Ну как это доказывать? То есть что у нас с вами происходит? У нас есть какой-то с вами прямоугольник D на 2D и здесь какая-то точка PIT.
[07:57.360 --> 08:04.360]  Окей. Что тогда можно сказать?
[08:05.360 --> 08:10.360]  Давайте его разделим пополам сначала. То есть здесь D и здесь D.
[08:14.360 --> 08:19.360]  Окей, почему здесь много и не может быть точек в каждом из этих квадратов, как вы думаете?
[08:21.360 --> 08:22.360]  Может ли их быть много?
[08:26.360 --> 08:31.360]  Нет, может ли много точек вообще здесь? Почему?
[08:36.360 --> 08:42.360]  Ну вот именно, да, потому что у вас здесь на самом деле не может быть очень много точек, потому что у вас здесь ответ D.
[08:43.360 --> 08:49.360]  Ну здесь все точки в расстоянии между любой парой точек с левой стороны, оно у вас больше либо равно, чем D.
[08:49.360 --> 08:58.360]  Из этого следует, что у вас, ну давайте еще круче сделаем. Давайте еще поделим каждый из них на четыре штучки.
[08:59.360 --> 09:01.360]  То есть по D пополам.
[09:02.360 --> 09:10.360]  Я получу квадратики D пополам на D пополам. Я утверждаю, что в каждом из них может быть не больше, чем одна точка.
[09:10.360 --> 09:15.360]  Ну допустим, если в одном из них лежит две точки, да?
[09:16.360 --> 09:19.360]  Ну действительно, допустим, нашелся квадратик, в котором две точки. Что тогда?
[09:20.360 --> 09:24.360]  Из этого следует, что он относится к одной из половин, либо к левой, либо к правой целиком.
[09:26.360 --> 09:30.360]  А давайте оценим, какое максимальное расстояние может быть внутри этого квадратика.
[09:32.360 --> 09:34.360]  D пополам на D пополам.
[09:34.360 --> 09:36.360]  Какое максимальное расстояние может быть внутри этого квадратика?
[09:39.360 --> 09:42.360]  D пополам на корень из двух. Это длина диагонали квадрата.
[09:43.360 --> 09:47.360]  То есть, что равно D делить на корень из двух, что строго меньше D.
[09:48.360 --> 09:57.360]  То есть, если у меня нашлись две точки внутри такого квадратика, значит, что у меня нашлась пара точек на расстоянии меньше, чем D, причем в одной из половин.
[09:58.360 --> 10:00.360]  Но такого быть не может. У меня D это по определению минимальное расстояние.
[10:01.360 --> 10:03.360]  Ну все, значит, у меня не может быть двух точек в одном квадратике.
[10:06.360 --> 10:17.360]  То есть, не может быть двух точек в одном квадратике.
[10:17.360 --> 10:31.360]  Из этого следует, что всего ЦПИТа не превосходит в восьми.
[10:32.360 --> 10:34.360]  То есть, вот единица.
[10:35.360 --> 10:37.360]  Отлично. Тогда что можно сказать?
[10:38.360 --> 10:41.360]  Можно сказать следующее, что будто бы я могу для каждой точки...
[10:42.360 --> 10:46.360]  То есть, давайте опишем слияние подробнее.
[10:53.360 --> 11:01.360]  Шаг первый. Найти все такие ПИТа.
[11:02.360 --> 11:09.360]  Ну и давайте обозначим эту разбивающую штучку как ХМ. Ну, Х с серединкой.
[11:09.360 --> 11:19.360]  Найти все такие ПИТа, что модуль ПИТ.Х-ХМТ не превосходит D.
[11:21.360 --> 11:23.360]  Это будет делать за ОТМ.
[11:25.360 --> 11:27.360]  Дальше шаг второй.
[11:27.360 --> 11:29.360]  Шаг второй.
[11:32.360 --> 11:43.360]  Для каждой ПИТы из один построить ЦПИТа.
[11:47.360 --> 11:49.360]  И вот здесь важно понимать, как это делать.
[11:50.360 --> 11:56.360]  Потому что по-хорошему вам нужно просто взять и найти все такие точки из пункта 1,
[11:57.360 --> 12:04.360]  но они лежат не ниже чем на D от Y ПИТы.
[12:05.360 --> 12:10.360]  Ну и, казалось бы, можно для каждой из ПИТых делать это перебором, за линию искать.
[12:11.360 --> 12:13.360]  Но не зря мы изучали с вами структуру данных.
[12:14.360 --> 12:19.360]  Давайте пока что предложим такую структуру, которая позволяет отвечать быстро на запрос, количество чисел в отрезке.
[12:20.360 --> 12:24.360]  То есть у вас есть какое-то множество чисел, вы хотите уметь отвечать на запросы,
[12:25.360 --> 12:28.360]  типа сколько у меня чисел, чье значение лежит от LDR.
[12:31.360 --> 12:33.360]  Чего нет?
[12:34.360 --> 12:40.360]  Какое дерево отрезков? Вам нужно найти число таких Х, что Х лежит в отрезке.
[12:41.360 --> 12:43.360]  Нет.
[12:44.360 --> 12:48.360]  У вас отсортированный массив?
[12:49.360 --> 12:51.360]  Где?
[12:52.360 --> 12:54.360]  Я по Y смотрю.
[12:57.360 --> 12:59.360]  Вот, можно его отсортировать, именно.
[13:00.360 --> 13:03.360]  Но я вообще намекал на дерево поиска, вы просто сложитесь в дерево поиска и спрашивайте про каждое.
[13:04.360 --> 13:06.360]  Но я понял, что вы не сдадите алгоритмы.
[13:08.360 --> 13:10.360]  Ну потому что.
[13:14.360 --> 13:17.360]  У кого как, у кого-то осталось меньше месяца.
[13:20.360 --> 13:22.360]  Мне лень будет принимать перезну.
[13:24.360 --> 13:26.360]  Как можно построить сет пыта?
[13:27.360 --> 13:28.360]  Давайте перечислим варианты.
[13:29.360 --> 13:31.360]  Первый вариант – наивный.
[13:32.360 --> 13:35.360]  Мне его настолько лень оценивать, что я скажу, что это вот N квадрат.
[13:36.360 --> 13:39.360]  То есть вы просто для каждой точки перебираете все возможные точки.
[13:40.360 --> 13:42.360]  Второй вариант – сортировка.
[13:44.360 --> 13:46.360]  Плюс bin поиск.
[13:48.360 --> 13:52.360]  Я буду писать специально время на каждую стадию, потом поймете почему.
[13:56.360 --> 13:59.360]  Ну и следующий шаг – это сортировка плюс два указателя.
[14:00.360 --> 14:02.360]  В каком плане два указателя?
[14:03.360 --> 14:07.360]  Вы заводите указатель на самую верхнюю точку, сдвигаете второй указатель вниз, пока еще можно.
[14:08.360 --> 14:10.360]  То есть пока выполняется вот это вот требование.
[14:11.360 --> 14:13.360]  Окей, зафиксировали, там обработали этот сет пыта.
[14:14.360 --> 14:15.360]  Дальше сдвинули эту на один.
[14:16.360 --> 14:17.360]  Двигайте второй указатель, пока можно.
[14:18.360 --> 14:19.360]  И так далее.
[14:20.360 --> 14:22.360]  Схема понятна или нарисовать подробнее?
[14:25.360 --> 14:26.360]  Нет, зачем?
[14:27.360 --> 14:29.360]  Мы же рассматриваем пыта в отсортированном порядке.
[14:30.360 --> 14:32.360]  То есть вы рассмотрели до каждой точки пыта.
[14:33.360 --> 14:36.360]  То есть у вас вариант такой, что вы для пыта рассмотрели уже все, что сверху.
[14:37.360 --> 14:38.360]  Вот.
[14:39.360 --> 14:45.360]  Третий вариант – это сортировка плюс два указателя.
[14:47.360 --> 14:51.360]  Это от n log n плюс от n.
[14:54.360 --> 14:55.360]  Построили сет пыта.
[14:56.360 --> 15:03.360]  Ну и шаг третий – внутри цейтых поискать ответ.
[15:03.360 --> 15:04.360]  Тет пыта.
[15:07.360 --> 15:12.360]  Из два попытаться обновить ответ.
[15:24.360 --> 15:26.360]  То есть такой алгоритм – итоговое время работы.
[15:27.360 --> 15:28.360]  Давайте выпущем рекурренту.
[15:29.360 --> 15:31.360]  Т от n – это что такое?
[15:32.360 --> 15:33.360]  Мы делим на две части.
[15:34.360 --> 15:36.360]  Каждая из них по n пополам.
[15:37.360 --> 15:40.360]  Плюс время наслияния от n log n.
[15:44.360 --> 15:51.360]  Ну, не думая слишком много, получим вот такую вот штуку.
[15:53.360 --> 15:55.360]  N log квадрат n.
[15:57.360 --> 15:58.360]  Казалось бы классно, да?
[15:59.360 --> 16:00.360]  Ну, гораздо круче, чем n квадрат.
[16:01.360 --> 16:04.360]  Но не достаточно хорошо.
[16:05.360 --> 16:07.360]  Хочется от квадрата алгоритма избавиться.
[16:08.360 --> 16:09.360]  Хочется здесь вместо двойки ничего не писать.
[16:10.360 --> 16:11.360]  Ну, или единицу.
[16:12.360 --> 16:13.360]  Давайте избавляться от лишнего алгоритма.
[16:14.360 --> 16:15.360]  Откуда он берется?
[16:16.360 --> 16:19.360]  Ну, как видим, эту штуку мы менять не можем в нашей парадигме.
[16:20.360 --> 16:21.360]  Можем менять только эту.
[16:22.360 --> 16:23.360]  Окей.
[16:24.360 --> 16:25.360]  Смотрим внимательно.
[16:26.360 --> 16:27.360]  Нас устраивает этот чувак.
[16:28.360 --> 16:29.360]  Но здесь что-то надо много менять.
[16:29.360 --> 16:30.360]  Тем более бинг-пост.
[16:31.360 --> 16:32.360]  Там вообще сложно менять.
[16:33.360 --> 16:35.360]  Сортировка плюсного указателя звучит более приятно.
[16:36.360 --> 16:37.360]  Почему?
[16:38.360 --> 16:39.360]  Потому что здесь уже отn стоит.
[16:40.360 --> 16:42.360]  То есть, если бы могли бы заменить сортировку чем-то,
[16:43.360 --> 16:44.360]  то тогда…
[16:45.360 --> 16:46.360]  Ну, чем-то здесь линейным.
[16:47.360 --> 16:48.360]  Сортировка подсчета не в счет.
[16:49.360 --> 16:50.360]  Сразу скажу.
[16:51.360 --> 16:52.360]  Вот.
[16:53.360 --> 16:54.360]  Если могли бы заменить ее чем-то линейным, то все.
[16:55.360 --> 16:56.360]  Здесь был бы отn.
[16:57.360 --> 16:58.360]  Значит, сумма отn.
[17:00.360 --> 17:02.360]  Ну, давайте что-нибудь сделаем.
[17:07.360 --> 17:08.360]  По Y?
[17:09.360 --> 17:10.360]  Кого?
[17:12.360 --> 17:14.360]  Так нет, вы сначала по X сортировали.
[17:17.360 --> 17:19.360]  А как вы собираетесь контролировать?
[17:20.360 --> 17:24.360]  Вы должны пробросить их, чтобы они вместе одинаково были.
[17:29.360 --> 17:30.360]  Но это не очевидно как это делать.
[17:31.360 --> 17:32.360]  Вам нужно какие-то индексы с собой таскать?
[17:33.360 --> 17:34.360]  Вроде как можно, да.
[17:35.360 --> 17:39.360]  Но давайте предложу вам более изящное решение вместо того, чтобы снять какие-то индексы.
[17:40.360 --> 17:41.360]  Смотрите.
[17:42.360 --> 17:44.360]  У кого такая же рекурrenция, только здесь отn?
[17:48.360 --> 17:49.360]  Да.
[17:50.360 --> 17:52.360]  И мы делаем все абсолютно то же самое.
[17:53.360 --> 17:54.360]  Мы бьем множество на бинг-пост.
[17:55.360 --> 17:56.360]  И мы делаем все абсолютно то же самое.
[17:56.360 --> 17:57.360]  И мы делаем все абсолютно то же самое.
[17:58.360 --> 17:59.360]  Мы бьем множество на две части.
[18:00.360 --> 18:01.360]  Направо, налево.
[18:02.360 --> 18:03.360]  Здесь сортируем, здесь сортируем.
[18:04.360 --> 18:05.360]  Потом делаем мерч за линию.
[18:06.360 --> 18:10.360]  Ну, давайте мы будем еще здесь вставить стадию сортировки по Y.
[18:11.360 --> 18:13.360]  В половинке именно этой штуки.
[18:14.360 --> 18:16.360]  То есть давайте мы будем отсортировать по X.
[18:17.360 --> 18:18.360]  Рекурсивный вызов.
[18:19.360 --> 18:24.360]  И на момент, когда мы сделали мерч, вот этот вот интересный,
[18:24.360 --> 18:27.360]  мы после него будем вызывать сортировку по Y.
[18:29.360 --> 18:31.360]  А что значит сортировку по Y?
[18:32.360 --> 18:35.360]  Если у вас два массива точек отсортированы уже по Y, то что тогда?
[18:37.360 --> 18:39.360]  Можно сделать их просто слияние.
[18:40.360 --> 18:45.360]  И вы вернете, то есть вы можете слить вот эти вот отсортированные по Y, вот эти вот отсортированные по Y.
[18:46.360 --> 18:49.360]  Сделать мерч за линию и вернуть его наверх.
[18:50.360 --> 18:53.360]  И вместо вот этой сортировки у вас здесь будет стоять мерч.
[18:54.360 --> 18:55.360]  На самом деле.
[18:56.360 --> 18:59.360]  Потому что мерч-сорт, как вы можете догадаться, он нигде не сортирует.
[19:00.360 --> 19:03.360]  Он нигде не вызывает какую-то функцию сортировки, кроме там, ну, для двух элементов.
[19:04.360 --> 19:08.360]  Когда там по каждому массиве по одному элементу и то, там можно даже на таком этапе вызвать мерч.
[19:09.360 --> 19:11.360]  И он все равно отработает, просто будет тип как смоп.
[19:13.360 --> 19:15.360]  То есть на самом деле здесь четвертый шаг.
[19:18.360 --> 19:22.360]  Мерч по Y.
[19:25.360 --> 19:26.360]  Половин.
[19:27.360 --> 19:29.360]  Это O от N.
[19:30.360 --> 19:31.360]  Откуда T от N?
[19:32.360 --> 19:36.360]  Это 2 T от N пополам плюс O от N.
[19:39.360 --> 19:40.360]  То есть T от N.
[19:41.360 --> 19:42.360]  O от N.
[19:43.360 --> 19:44.360]  Лог N, конечно же.
[19:48.360 --> 19:50.360]  Вот, так сказать, задача со звездочкой.
[19:51.360 --> 19:53.360]  Я не знаю даже верно это утверждение будет или нет.
[19:54.360 --> 19:55.360]  Так сказать, что лучше нельзя.
[19:58.360 --> 20:00.360]  Ну, в парадигме, что умеете только сравнивать, попытаться как-нибудь.
[20:01.360 --> 20:03.360]  Потому что, возможно, это может привести к задаче сортировки.
[20:12.360 --> 20:13.360]  Так, окей.
[20:15.360 --> 20:16.360]  Это наш первый сюжет.
[20:18.360 --> 20:20.360]  Давайте, наверное, второй сюжет разберем.
[20:21.360 --> 20:22.360]  Какое у нас время?
[20:22.360 --> 20:23.360]  Нормально.
[20:24.360 --> 20:25.360]  Еще успеваем.
[20:29.360 --> 20:31.360]  Собственно, раз была пара ближайших точек,
[20:32.360 --> 20:34.360]  наверное, надо разобрать с пару самых удаленных точек.
[20:34.360 --> 20:40.360]  Но здесь придется пользоваться уже материалом прошлой лекции,
[20:41.360 --> 20:42.360]  а именно выпеклыми оболочками.
[20:45.360 --> 20:48.360]  Вроде как логично, что если вы построите выпеклую оболочку множеству,
[20:49.360 --> 20:50.360]  то че-то красиво выглядит.
[20:53.360 --> 20:54.360]  perfection.
[20:59.360 --> 21:03.360]  НоRAY2 поднимается, потому что мы уже новости не Thomson Dreative�זה,
[21:04.360 --> 21:09.400]  может получиться. В частности, наверное, будто бы хочется утверждать, что если вы переберете все
[21:09.400 --> 21:16.800]  пары точек выпуклой оболочки, то ответ это что-то максимум из этих будет. Но пока что это такие
[21:16.800 --> 21:23.400]  абстрактные рассуждения, давайте будем потихонечку идти и доказывать. Определение.
[21:23.400 --> 21:50.760]  Прямая L опорная для выпуклого многоугольника. Если L содержит хотя бы одну точку,
[21:50.760 --> 22:14.560]  для многоугольника A хотя бы одну точку A и A целиком в одной полуплоскости относительно
[22:14.560 --> 22:21.560]  L. Пример такой. Но здесь может выпуклую фигуру, то есть немногоугольник, это может какой-то
[22:21.560 --> 22:35.280]  эллипс и так далее нас не особо интересует. Вот например, что такое опорная прямая. Это A,
[22:35.280 --> 22:40.880]  это L. Она проходит через одну его точку, ну хотя бы одну, и при этом он есть целиком лежит в одной из
[22:40.880 --> 22:56.600]  полуплоскостей. Ну и будто бы хочется сказать, что диаметр множества, это вот если зажать выпуклую
[22:56.600 --> 23:01.280]  оболочку, каким-то таким вот в тиски ее будто бы засунуть. Размерить все возможные варианты этих
[23:01.280 --> 23:10.720]  тисков, то это будет победой. Ну давайте доказывать это. Что докажем для начала? Наверное для
[23:10.720 --> 23:32.520]  начала докажем, что утверждение. Пусть L1 и L2 пара параллельных опорных прямых
[23:32.520 --> 23:54.760]  для многоугольника M. Многоугольник звучит классно. AIT равно LIT пересечь с M. Давайте AIT,
[23:54.760 --> 24:01.400]  это какой-то элемент, потому что вдруг мы там пересекаем по стороне. То есть вы берете в
[24:01.400 --> 24:12.680]  многоугольник M какой-то, то есть в нашем случае это был бы M, это был бы L1. Ну не параллельно получилось,
[24:12.680 --> 24:22.160]  сейчас попробуем параллельно. Это L2. Это A1, соответственно, это A2. Давайте уберу наружу.
[24:22.160 --> 24:41.880]  Тогда что я утверждаю? Что, как бы так сказать, что A1 и A2 являются самыми удаленными точками
[24:41.880 --> 25:11.720]  друг от друга. Две самые удаленные точки, если A1 и A2 перпендикулярен LIT.
[25:11.880 --> 25:18.760]  Ну, LIT и параллельно, поэтому можно любые из них взять. То есть я утверждаю, что если это две самые удаленные точки,
[25:18.760 --> 25:35.800]  не так, что если... Пойдем в какую сторону будем доказывать. Да-да-да-да-да, не в ту сторону.
[25:35.800 --> 25:47.640]  Что если это, то вот это, вот в эту сторону, это верно. Давайте доказывать. Что если A1 и A2
[25:47.640 --> 25:54.520]  это самые удаленные точки, то A1 и A2 артегональны L1, ну, LIT. Давайте от противного закажем.
[25:54.520 --> 26:00.240]  Что если A1 и A2 не артегональные LIT, значит, это не самые удаленные точки.
[26:00.240 --> 26:27.760]  Противного. Ну, в смысле, ну да, да. Ну, короче говоря, что найдутся такие, можно так сказать.
[26:27.760 --> 26:38.840]  Типа того, да, что найдутся параллельные прямые, такие что... Сейчас давайте я нарисую чуть другой пример.
[26:38.840 --> 26:54.320]  Ну, будто бы да, да, формально так сформулировать можно. Сейчас давайте как-нибудь вот так вот
[26:54.320 --> 27:14.920]  нарисую, наверное. Во! Ужасные маркеры, их невозможно стирать пальцами. Так, здесь еще поострее нарисую угол.
[27:14.920 --> 27:25.520]  Вот такого вот. Нет, мне нужна такая прямая, то есть более пологая будет наоборот.
[27:25.520 --> 27:39.520]  Так вот, L2. Это A1, это A2. Вот, ну окей.
[27:39.520 --> 27:47.920]  Что тогда? Ну, тогда я могу рассмотреть расстояние.
[27:47.920 --> 28:03.600]  Это достаточно перпендикулярно? Так, ну если это перпендикулярно, то что тогда я могу сказать?
[28:03.600 --> 28:21.200]  Давайте так. Давайте доказывать, то существует L1 и L2 такие, что A1 и A2 артагонален L1. Предлагаете такое доказывать?
[28:21.200 --> 28:37.600]  Да, так. Так, давайте построим. Построим L и T. Артагональны A1 и A2.
[28:37.600 --> 28:58.960]  L1 штрих, L2 штрих какие-то. Построили их. Хорошо, если мы их построили, то что из этого? Из этого следует, что вдруг они неопорные.
[28:58.960 --> 29:11.200]  Если они неопорные. А, ну и мы построили элиты, так что какая-то из них неопорная при этом.
[29:11.200 --> 29:25.920]  Неопорные. Что мы делаем тогда? Это наш перпендикуляр A1 и A2. И что мы имеем вообще?
[29:25.920 --> 29:34.720]  Раз она неопорная, то будто бы L1 получилась неопорной. У нее есть точка в другой полуплоскости.
[29:34.720 --> 30:04.640]  Я могу рассмотреть точку пересечения вторую, то L1, без ограничения общности это будет L1, пусть L1 штрих пересечь с M равно какой-то B.
[30:04.640 --> 30:22.720]  То есть это будет точка B. Вот тогда будто бы что я могу сделать. Очевидно, что A2B длиннее, чем A1A2.
[30:22.800 --> 30:28.880]  Ну просто потому, что A2B это гипотенузов в треугольнике, а A1B-A2.
[30:28.880 --> 30:40.640]  Окей, что теперь я хочу сделать. Раз у меня эта штука неопорная, значит у меня есть две точки в разных полуплоскостях.
[30:40.800 --> 30:50.560]  Давайте я рассмотрю точку C в полуплоскости, противоположной A2.
[30:51.440 --> 30:53.440]  Да?
[30:59.440 --> 31:02.400]  C в вершина многоугольника.
[31:02.400 --> 31:22.240]  Противоположной полуплоскости относительно L1 штрих.
[31:22.240 --> 31:28.240]  Все, да, сейчас мы докажем нормально.
[31:33.280 --> 31:56.240]  Так, то есть C это у нас вершина противоположной полуплоскости относительно L1 штрих от A2, а это точка C.
[31:57.120 --> 31:59.120]  Давайте рассмотрим A2C.
[32:02.080 --> 32:04.080]  И что я утверждаю?
[32:04.080 --> 32:23.120]  Что если я проведу прямую через C параллельную L1 штрих, L1-2 штриха, пусть L1-2 штриха параллельно L1 штрих и C принадлежит L1-2 штриха.
[32:27.120 --> 32:45.120]  А 1A2 пересечь с L1-2 штриха, это будет L1-3 штриха, это будет C штриха.
[32:46.000 --> 33:02.000]  Я утверждаю, что A2C штрих будет больше, чем по модулю A2A1, потому что мы просто построили C штрих за нее.
[33:02.880 --> 33:22.880]  Но при этом A2C это гипотенуза в прямоугольном треугольнике A2C штрих C, но A2C больше, чем A2C штрих, потому что это гипотенуза, это катет.
[33:23.760 --> 33:35.760]  Откуда у вас следует, что A2C штрих больше, чем A2A1?
[33:35.760 --> 33:39.760]  Противоречие, то есть B нам не нужна даже.
[33:39.760 --> 33:43.760]  Я почему-то думал, что нам это понадобится, но нет.
[33:44.640 --> 33:48.640]  Здесь даже это не нужно.
[33:48.640 --> 33:52.640]  То есть какой план? Давайте еще раз нарисую картинку.
[34:00.640 --> 34:04.640]  Так, будто бы вот это вот будет две удаленные самые.
[34:14.640 --> 34:20.640]  То есть если 1A2 самые удаленные точки, то они существуют.
[34:20.640 --> 34:22.640]  Как мы это доказывали?
[34:22.640 --> 34:28.640]  Мы доказывали, что предположим, что таких прямых нет, опорных, ортогональных L1 и L2.
[34:33.640 --> 34:37.640]  А, все окей, здесь нужно просто другую пару точек взять, не ближайшую.
[34:37.640 --> 34:39.640]  Не самые удаленные.
[34:40.520 --> 34:46.520]  Кажется, что вот для этой, что вот для этих все будет очень плохо.
[34:48.520 --> 34:52.520]  Давайте еще специально постругу побольше.
[34:52.520 --> 34:54.520]  Во.
[34:54.520 --> 35:00.520]  Тогда если я построю перпендикулярные прямые к ним, то одна из них не будет опорной.
[35:00.520 --> 35:02.520]  И я пытаюсь доказать, что вот эти две не самые удаленные.
[35:02.520 --> 35:04.520]  Как я это делаю?
[35:05.400 --> 35:07.400]  Хорошо.
[35:07.400 --> 35:09.400]  Если это две не самые удаленные, значит существует какая-то точка.
[35:09.400 --> 35:15.400]  Точнее так, если одна из них не опорная, я рассмотрю, которая не опорная.
[35:15.400 --> 35:17.400]  Вот это вот.
[35:17.400 --> 35:21.400]  Это наш L1-штрих по совместительству L1, который мы попытались построить.
[35:21.400 --> 35:23.400]  Дальше что мы делаем?
[35:23.400 --> 35:25.400]  Мы такие, окей, хорошо.
[35:25.400 --> 35:29.400]  Рассматриваем точку C, которая лежит в другой полуплоскости.
[35:31.400 --> 35:33.400]  Относительно A2.
[35:34.280 --> 35:36.280]  Рассматриваем отрезок A2C.
[35:38.280 --> 35:42.280]  И пересекая с этой штукой, с L1, получаем точку C-штрих.
[35:44.280 --> 35:46.280]  Вот.
[35:46.280 --> 35:48.280]  У меня модуль A2C-штрих больше, чем...
[35:48.280 --> 35:50.280]  А, нет.
[35:50.280 --> 35:52.280]  Сорри, не так можно.
[35:52.280 --> 35:54.280]  Не так мы C-штрих получали.
[35:54.280 --> 35:56.280]  Но можно и так было получить.
[36:00.280 --> 36:02.280]  Это не очень очевидно, будем честны.
[36:04.280 --> 36:06.280]  Можно, да.
[36:06.280 --> 36:08.280]  Можно.
[36:08.280 --> 36:10.280]  Ну, ладно, давайте так оставим.
[36:10.280 --> 36:12.280]  Вот.
[36:12.280 --> 36:14.280]  Мы построили C-штрих, как на продолжении.
[36:14.280 --> 36:16.280]  A2A1 за A1.
[36:16.280 --> 36:22.280]  Такое, чтобы она пересекалась с прямой параллельной L1-штрих, проходящейся точку C.
[36:22.280 --> 36:24.280]  L1-2-штриха.
[36:26.280 --> 36:28.280]  Вот.
[36:28.280 --> 36:30.280]  Ну, тогда у нас A2C, очевидно, больше, чем A2C-штрих.
[36:30.280 --> 36:32.280]  A2C-штрих больше, чем A2A1.
[36:33.160 --> 36:35.160]  Значит, A1 и A2 не самые удаленные точки.
[36:37.160 --> 36:39.160]  Окей. Ладно, это мы доказали.
[36:41.160 --> 36:43.160]  Теперь я утверждаю следующее, что...
[36:43.160 --> 36:45.160]  Давайте не так. Сначала определение сделаем.
[36:51.160 --> 36:53.160]  Две точки противоположны.
[36:59.160 --> 37:01.160]  Если
[37:02.040 --> 37:04.040]  Существуют
[37:04.040 --> 37:06.040]  L1 и L2,
[37:08.040 --> 37:10.040]  проходящие через них.
[37:12.040 --> 37:14.040]  Давайте две точки A1A2.
[37:18.040 --> 37:20.040]  Тут L1 и L2, проходящие через них, такие, что
[37:22.040 --> 37:24.040]  L1 параллельно L2
[37:24.040 --> 37:26.040]  и Lit
[37:26.040 --> 37:28.040]  артагонально A1A2.
[37:28.040 --> 37:30.040]  Вот.
[37:30.920 --> 37:32.920]  То есть две точки противоположны,
[37:32.920 --> 37:34.920]  если можно построить такие
[37:34.920 --> 37:36.920]  и L и T
[37:36.920 --> 37:38.920]  опорные.
[37:38.920 --> 37:40.920]  При этом. То есть если я могу построить
[37:40.920 --> 37:42.920]  две опорные,
[37:42.920 --> 37:44.920]  то, в частности, эти две точки не противоположны.
[37:44.920 --> 37:46.920]  Например, вот эти вот будут
[37:46.920 --> 37:48.920]  противоположными. У них найдется такая пара.
[37:50.920 --> 37:52.920]  Ну и вроде как для выпуклого многогольника,
[37:52.920 --> 37:54.920]  верно, что для любой точки есть и противоположная.
[37:54.920 --> 37:56.920]  Ну, собственно, утверждение,
[37:56.920 --> 37:58.920]  которое нам остается доказать,
[37:59.800 --> 38:01.800]  и дело почти в шляпе,
[38:01.800 --> 38:03.800]  это то, что
[38:07.800 --> 38:09.800]  максимальное расстояние
[38:13.800 --> 38:15.800]  достигается
[38:17.800 --> 38:19.800]  как максимум
[38:23.800 --> 38:25.800]  среди
[38:25.800 --> 38:27.800]  удаленных
[38:28.680 --> 38:30.680]  точек.
[38:34.680 --> 38:36.680]  То есть если вы рассмотрите все пары точек
[38:36.680 --> 38:38.680]  и возьмете из них удаленные
[38:38.680 --> 38:40.680]  самые,
[38:40.680 --> 38:42.680]  то ответ будет как максимум достигаться.
[38:44.680 --> 38:46.680]  Но как это доказывать?
[38:48.680 --> 38:50.680]  Ну, рассмотрим просто
[38:50.680 --> 38:52.680]  нашу конструкцию.
[38:54.680 --> 38:56.680]  Наш L1,
[38:57.560 --> 38:59.560]  вот наш L2,
[38:59.560 --> 39:01.560]  вот у нас здесь есть какое-то выпуклое тело.
[39:07.560 --> 39:09.560]  T1 и T2.
[39:19.560 --> 39:21.560]  Ой, среди противоположных,
[39:21.560 --> 39:23.560]  противоположных, конечно же,
[39:24.440 --> 39:26.440]  у ложных точек.
[39:32.440 --> 39:34.440]  Не то чтобы корректно их изобразил,
[39:34.440 --> 39:36.440]  давайте подвинем A1,
[39:38.440 --> 39:40.440]  чтобы они были друг над другом,
[39:40.440 --> 39:42.440]  потому что мне прямая лень перерисовывать совсем.
[39:48.440 --> 39:50.440]  Я утверждаю, что
[39:51.320 --> 39:53.320]  что лучшей варианта нет,
[39:53.320 --> 39:55.320]  если я рассмотрю максимум.
[39:55.320 --> 39:57.320]  Усть
[39:59.320 --> 40:01.320]  A1 и A2
[40:03.320 --> 40:05.320]  противоположные точки
[40:09.320 --> 40:11.320]  такие, что
[40:11.320 --> 40:13.320]  A1 и A2
[40:13.320 --> 40:15.320]  максимален среди всех пар
[40:15.320 --> 40:17.320]  противоположных точек.
[40:18.200 --> 40:20.200]  Давайте возьмем
[40:20.200 --> 40:22.200]  две произвольные точки
[40:22.200 --> 40:24.200]  и докажем, что для них расстояние будет
[40:24.200 --> 40:26.200]  меньше, чем A1 и A2.
[40:26.200 --> 40:28.200]  Скажите честно, из картинки очевидно?
[40:32.200 --> 40:34.200]  Что именно очевидно?
[40:34.200 --> 40:36.200]  Оно не очевидное.
[40:40.200 --> 40:42.200]  Ну, по сути, да, мы доказали.
[40:43.080 --> 40:45.080]  Ну да,
[40:45.080 --> 40:47.080]  это очевиднейшее утверждение на самом деле.
[40:47.080 --> 40:49.080]  Ну, типа,
[40:49.080 --> 40:51.080]  здесь можно доказать,
[40:51.080 --> 40:53.080]  что мы нашли точки, которые более удаленные,
[40:53.080 --> 40:55.080]  МН,
[40:55.080 --> 40:57.080]  не знаю.
[40:57.080 --> 40:59.080]  Окей.
[40:59.080 --> 41:01.080]  Если они более удаленные,
[41:01.080 --> 41:03.080]  значит,
[41:03.080 --> 41:05.080]  рассматриваем между ними расстояние,
[41:05.080 --> 41:07.080]  проведем опорные прямые
[41:07.080 --> 41:09.080]  в их направлении,
[41:09.080 --> 41:11.080]  точнее,
[41:11.080 --> 41:13.080]  прямые перпендикулярные.
[41:13.080 --> 41:15.080]  Вот, они будут,
[41:15.080 --> 41:17.080]  либо они будут не опорными,
[41:17.080 --> 41:19.080]  либо расстояние будет как между опорными
[41:19.080 --> 41:21.080]  меньше, чем из тех максимумов, что мы выбрали.
[41:21.080 --> 41:23.080]  Ну и все.
[41:23.080 --> 41:25.080]  Все, доказательства как бы сходятся.
[41:25.080 --> 41:27.080]  Можете здесь написать конец
[41:27.080 --> 41:29.080]  и типа все.
[41:29.080 --> 41:31.080]  Ну окей, ладно.
[41:31.080 --> 41:33.080]  Рассмотрим
[41:33.080 --> 41:35.080]  произвольный МН.
[41:35.080 --> 41:37.080]  Проведем
[41:37.080 --> 41:39.080]  прямые
[41:39.080 --> 41:41.080]  L1-
[41:41.080 --> 41:43.080]  L2-
[41:43.080 --> 41:45.080]  такие, что
[41:45.080 --> 41:47.080]  L1- параллельно
[41:47.080 --> 41:49.080]  L2-
[41:49.080 --> 41:51.080]  МН
[41:51.080 --> 41:53.080]  протагонален L и T-
[41:53.080 --> 41:55.080]  и что еще мы хотели?
[41:55.080 --> 41:57.080]  А вообще,
[41:57.080 --> 41:59.080]  это все, что мы хотели.
[41:59.080 --> 42:01.080]  Если
[42:01.080 --> 42:03.080]  у нас есть
[42:03.080 --> 42:05.080]  если
[42:07.080 --> 42:09.080]  L и T не опорные,
[42:11.080 --> 42:13.080]  то по утверждению
[42:13.080 --> 42:15.080]  выше
[42:17.080 --> 42:19.080]  МН
[42:19.080 --> 42:21.080]  не самоудаленные.
[42:21.080 --> 42:23.080]  Удаленные.
[42:27.080 --> 42:29.080]  Если же
[42:29.080 --> 42:31.080]  L и T
[42:31.080 --> 42:33.080]  опорные,
[42:35.080 --> 42:37.080]  то
[42:37.080 --> 42:39.080]  МН
[42:39.080 --> 42:41.080]  противоположные,
[42:43.080 --> 42:45.080]  и модуль МН
[42:45.080 --> 42:47.080]  больше, чем
[42:47.080 --> 42:49.080]  A1-A2 по предположению.
[42:49.080 --> 42:51.080]  Но этого быть не может, потому что A1-A2 мы выбирали
[42:51.080 --> 42:53.080]  как самые далекие противоположные точки.
[42:53.080 --> 42:55.080]  Все, доказали.
[42:55.080 --> 42:57.080]  Противоречие.
[42:59.080 --> 43:01.080]  Ну все, остался последний,
[43:01.080 --> 43:03.080]  как
[43:03.080 --> 43:05.080]  алгоритм.
[43:05.080 --> 43:07.080]  Алгоритм
[43:07.080 --> 43:09.080]  будет очень простой.
[43:09.080 --> 43:11.080]  Вы возьмете ваше тело,
[43:11.080 --> 43:13.080]  приведете через
[43:13.080 --> 43:15.080]  крайнюю левую,
[43:15.080 --> 43:17.080]  через крайнюю правую
[43:17.080 --> 43:19.080]  вертикальные прямые.
[43:19.080 --> 43:21.080]  Дальше вы будете их синхронно вращать,
[43:21.080 --> 43:23.080]  а потом
[43:23.080 --> 43:25.080]  вы будете вращать
[43:25.080 --> 43:27.080]  вверх и вверх.
[43:27.080 --> 43:29.080]  Дальше вы будете их синхронно вращать,
[43:29.080 --> 43:31.080]  чтобы они все время оставались
[43:31.080 --> 43:33.080]  параллельными друг к другу.
[43:33.080 --> 43:35.080]  Ну и так
[43:35.080 --> 43:37.080]  мы с вами доказали, что
[43:37.080 --> 43:39.080]  а, ну еще можно доказать, что
[43:39.080 --> 43:41.080]  а, ладно, это неважно.
[43:41.080 --> 43:43.080]  Просто так оставим.
[43:43.080 --> 43:45.080]  Вот вы вращаете, вращаете, вращаете,
[43:45.080 --> 43:47.080]  и просто-напросто
[43:47.080 --> 43:49.080]  вы перебираете все пары
[43:49.080 --> 43:51.080]  противоположных точек путем такого вращения.
[43:51.080 --> 43:53.080]  Потому что если вы здесь повернули на угол phi,
[43:53.080 --> 43:55.080]  здесь вы не сильно больше, чем на угол phi можете повернуть,
[43:55.080 --> 43:57.080]  чтобы у вас была противоположность.
[43:57.080 --> 43:59.080]  Вот.
[43:59.080 --> 44:01.080]  Ну и все, тогда вы можете их все за линию
[44:01.080 --> 44:03.080]  просто перебрать путем таких поворотов.
[44:03.080 --> 44:05.080]  И выбрав максимум, это будет победой.
[44:05.080 --> 44:07.080]  Поэтому алгоритм называется
[44:11.080 --> 44:13.080]  он называется
[44:13.080 --> 44:15.080]  вращающиеся калиперы.
[44:21.080 --> 44:23.080]  По-моему, в английский вот так вот.
[44:23.080 --> 44:27.080]  Ретейтинг калиперы.
[44:27.080 --> 44:29.080]  Может быть там одна L,
[44:29.080 --> 44:31.080]  я не помню точно.
[44:33.080 --> 44:35.080]  В чем суть? Первый шаг это
[44:35.080 --> 44:37.080]  построить
[44:39.080 --> 44:41.080]  выпуклую оболочку.
[44:49.080 --> 44:51.080]  Ну в тиски мы просто зажимаем,
[44:51.080 --> 44:53.080]  в чем тиски?
[44:53.080 --> 44:55.080]  Ну выпуклую оболочку понятно, что
[44:55.080 --> 44:57.080]  если вы утверждаете, что
[44:57.080 --> 44:59.080]  очевидно, что ответ лежит
[44:59.080 --> 45:01.080]  между двумя вершинами выпуклой оболочки.
[45:01.080 --> 45:03.080]  Если это не так, вотяните две произвольные вершины внутри,
[45:03.080 --> 45:05.080]  протяните прямую,
[45:05.080 --> 45:07.080]  посмотрите, что у вас
[45:07.080 --> 45:09.080]  все будет сильно хуже.
[45:09.080 --> 45:11.080]  Вообще не так, что если вы рассматриваете точки перещения прямой
[45:11.080 --> 45:13.080]  через эти две точки
[45:13.080 --> 45:15.080]  с выпуклой оболочкой,
[45:15.080 --> 45:17.080]  то у вас будут точки очевидно дальше друг от друга.
[45:17.080 --> 45:19.080]  Шаг второй.
[45:21.080 --> 45:23.080]  Допустим ПЛ
[45:23.080 --> 45:25.080]  имеет
[45:25.080 --> 45:27.080]  минимальный Х,
[45:27.080 --> 45:29.080]  ПР
[45:29.080 --> 45:31.080]  максимальный Х.
[45:31.080 --> 45:33.080]  То есть вот наш ПЛ-ПР.
[45:35.080 --> 45:37.080]  Вот наши калиперы начинают
[45:37.080 --> 45:39.080]  вращаться.
[45:41.080 --> 45:43.080]  И теперь вы рассматриваете
[45:43.080 --> 45:45.080]  допустим против часовой стрелки.
[45:47.080 --> 45:49.080]  Ну и записали, что расстояние между ПЛ-ПР
[45:49.080 --> 45:51.080]  и АНС в ответ.
[45:51.080 --> 45:53.080]  АНС равно
[45:53.080 --> 45:55.080]  ПЛ-ПР.
[45:57.080 --> 45:59.080]  Теперь вы делаете следующее.
[45:59.080 --> 46:01.080]  Вы рассматриваете угол
[46:01.080 --> 46:03.080]  между ПР
[46:05.080 --> 46:07.080]  а, против числа это в эту сторону,
[46:07.080 --> 46:09.080]  все, сорян.
[46:09.080 --> 46:11.080]  Это у нас будет ПР плюс один,
[46:11.080 --> 46:13.080]  это будет ПЛ плюс один.
[46:13.080 --> 46:15.080]  Ну естественно все по модулю берется,
[46:15.080 --> 46:17.080]  здесь я плюс и минус и так далее.
[46:17.080 --> 46:19.080]  Угол вот такой вот
[46:19.080 --> 46:21.080]  и угол вот такой вот.
[46:21.080 --> 46:23.080]  Давайте обозначим это
[46:23.080 --> 46:25.080]  ФЕЛ, это ФЕР.
[46:29.080 --> 46:31.080]  Пусть
[46:31.080 --> 46:33.080]  ФЕЛ
[46:33.080 --> 46:35.080]  угол между
[46:35.080 --> 46:37.080]  ПЛ минус один ПЛ
[46:37.080 --> 46:39.080]  ПЛ ПЛ плюс один.
[46:41.080 --> 46:43.080]  ФЕР аналогично.
[46:43.080 --> 46:45.080]  Это угол между
[46:45.080 --> 46:47.080]  ПР ПР
[46:47.080 --> 46:49.080]  Р минус один ПР
[46:49.080 --> 46:51.080]  ПР ПР плюс один.
[46:53.080 --> 46:55.080]  Ну пускай ФЕЛ меньше.
[46:55.080 --> 46:57.080]  Вроде на рисунке ФЕЛ меньше.
[46:57.080 --> 46:59.080]  Тогда возьмем и сделаем проворот
[46:59.080 --> 47:01.080]  до нового положения прямых.
[47:03.080 --> 47:05.080]  Обману, ФЕР меньше.
[47:05.080 --> 47:07.080]  Сорян.
[47:07.080 --> 47:09.080]  Вот.
[47:09.080 --> 47:11.080]  То есть я проворачиваю так, что у меня здесь вот
[47:11.080 --> 47:13.080]  ну я почти смог.
[47:15.080 --> 47:17.080]  Это угол
[47:17.080 --> 47:19.080]  между текущим
[47:19.080 --> 47:21.080]  состоянием Элитой.
[47:21.080 --> 47:23.080]  Ну Эль. Это вот Эль
[47:23.080 --> 47:25.080]  один. Это Эль два.
[47:25.080 --> 47:27.080]  Вы сейчас и будете просто синхронно
[47:27.080 --> 47:29.080]  вот так вот вращать.
[47:35.080 --> 47:37.080]  Да, соря.
[47:39.080 --> 47:41.080]  Я позволю себе коллизию индекс
[47:41.080 --> 47:43.080]  Эль-Эль. И здесь Эль-Эль Р.
[47:43.080 --> 47:45.080]  Типа это будет
[47:45.080 --> 47:47.080]  прямая левая, прямая
[47:47.080 --> 47:49.080]  через правую точку подходящая.
[47:49.080 --> 47:51.080]  Вот. Тогда у меня получилось здесь вот
[47:51.080 --> 47:53.080]  что-то вот такое вот.
[47:53.080 --> 47:55.080]  Не получилось параллельными. Это грустно.
[47:55.080 --> 47:57.080]  Надо избавиться
[47:57.080 --> 47:59.080]  от этого прикола.
[47:59.080 --> 48:01.080]  Ща.
[48:01.080 --> 48:03.080]  Все. Этой точки не существует.
[48:03.080 --> 48:05.080]  Вот. Теперь я могу провести новый
[48:05.080 --> 48:07.080]  калипер. Вот так вот.
[48:09.080 --> 48:11.080]  И я такой окей. Хорошо.
[48:11.080 --> 48:13.080]  Здесь вот эта точка и вот эта точка.
[48:13.080 --> 48:15.080]  Здесь Пл. Я перебираю между
[48:15.080 --> 48:17.080]  этой и этой. Ну здесь, понятно, ответ
[48:17.080 --> 48:19.080]  такой будет.
[48:19.080 --> 48:21.080]  Дальше снова проворачиваю. Смотрю
[48:21.080 --> 48:23.080]  только угол этот.
[48:23.080 --> 48:25.080]  И вот такой вот.
[48:25.080 --> 48:27.080]  Новое положение будет вот таким вот.
[48:27.080 --> 48:29.080]  Раз.
[48:29.080 --> 48:31.080]  Два. Смотрю противоположные точки. Это вот эти две.
[48:33.080 --> 48:35.080]  Вот.
[48:35.080 --> 48:37.080]  Ну в общем-то я утверждаю, что так мы переберем все
[48:37.080 --> 48:39.080]  возможные пары противоположных точек.
[48:39.080 --> 48:41.080]  На самом деле.
[48:41.080 --> 48:43.080]  Ну, провернув полностью, сделав
[48:43.080 --> 48:45.080]  поворот на 180 градусов,
[48:45.080 --> 48:47.080]  я посмотрю все пары точек
[48:47.080 --> 48:49.080]  противоположных. Ну почему так?
[48:49.080 --> 48:51.080]  Потому что на самом деле каждый раз я беру
[48:51.080 --> 48:53.080]  и так как я держу прямые параллельными
[48:53.080 --> 48:55.080]  и убираю минимальный угол,
[48:55.080 --> 48:57.080]  я каждый раз беру и смотрю пару
[48:57.080 --> 48:59.080]  противоположных точек. На самом деле.
[49:01.080 --> 49:03.080]  Вот.
[49:03.080 --> 49:05.080]  Тогда
[49:05.080 --> 49:07.080]  повернем
[49:07.080 --> 49:09.080]  лл
[49:11.080 --> 49:13.080]  лр
[49:13.080 --> 49:15.080]  на минимум
[49:15.080 --> 49:17.080]  из фиэльфер.
[49:25.080 --> 49:27.080]  Обновить ответ.
[49:29.080 --> 49:31.080]  Повторить.
[49:33.080 --> 49:35.080]  Как это делать?
[49:35.080 --> 49:37.080]  На самом деле очень удобно это делать просто
[49:37.080 --> 49:39.080]  помощью двух указателей опять же.
[49:39.080 --> 49:41.080]  Вот у вас раз индекс, два индекса.
[49:41.080 --> 49:43.080]  Вы смотрите до кого поворот короче. До этой или до этой?
[49:43.080 --> 49:45.080]  Ну до этой отлично. Сдвигайте этот указатель
[49:45.080 --> 49:47.080]  сюда. И проводите.
[49:47.080 --> 49:49.080]  Не, до этой было полменьше.
[49:49.080 --> 49:51.080]  Да. Сдвигайте этот указатель
[49:51.080 --> 49:53.080]  сюда. Смотрите
[49:53.080 --> 49:55.080]  длину. Окей.
[49:55.080 --> 49:57.080]  Теперь эту надо поворачивать. Вот
[49:57.080 --> 49:59.080]  этот сюда сдвинули.
[49:59.080 --> 50:01.080]  Мы вот так вот постепенно ходя друг по другу,
[50:01.080 --> 50:03.080]  удерживая параллельными при этом.
[50:03.080 --> 50:05.080]  Ну и при этом
[50:05.080 --> 50:07.080]  заметите, что, ну да, все окей.
[50:07.080 --> 50:09.080]  Вот. Они все время будут опорными.
[50:09.080 --> 50:11.080]  Все будет хорошо.
[50:11.080 --> 50:13.080]  Вот.
[50:15.080 --> 50:17.080]  Ну короче, вы двумя указателями просто найдете
[50:17.080 --> 50:19.080]  ответ в конце концов.
[50:21.080 --> 50:23.080]  Ну да, вы сдвигайте один
[50:23.080 --> 50:25.080]  из указателей. Причем сдвигайте
[50:25.080 --> 50:27.080]  л.
[50:27.080 --> 50:29.080]  Если у вас фиэльты это минимум
[50:29.080 --> 50:31.080]  из фиэльфер. И на
[50:31.080 --> 50:33.080]  паттерт вы сдвигаете на единичку.
[50:33.080 --> 50:35.080]  Все.
[50:37.080 --> 50:39.080]  Вы сдвигаете один из указателей.
[50:39.080 --> 50:41.080]  Каждый шаг. Да. Все.
[50:41.080 --> 50:43.080]  Повороты есть. Это три указателя на единицу на самом деле.
[50:43.080 --> 50:45.080]  Визуально это выглядит, как вы вращаете
[50:45.080 --> 50:47.080]  прямые, но по факту вы просто
[50:47.080 --> 50:49.080]  перескакиваете либо одну точку,
[50:49.080 --> 50:51.080]  либо другую точку двигаете на единицу.
[50:51.080 --> 50:53.080]  Тогда таким образом
[50:53.080 --> 50:55.080]  у вас каждую точку постят максимум два раза,
[50:55.080 --> 50:57.080]  каждый указатель по одному разу.
[50:57.080 --> 50:59.080]  Поэтому суммарно этот шаг за линию отработает.
[51:01.080 --> 51:03.080]  Ну или можно сказать от
[51:03.080 --> 51:05.080]  поворотов.
[51:05.080 --> 51:07.080]  Каждый
[51:09.080 --> 51:11.080]  за от единицы.
[51:11.080 --> 51:13.080]  Ну и на этом все.
[51:13.080 --> 51:15.080]  Поэтому этот шаг
[51:15.080 --> 51:17.080]  отn
[51:17.080 --> 51:19.080]  это отn логн.
[51:19.080 --> 51:21.080]  Соответственно.
[51:21.080 --> 51:23.080]  Ну и все. Победа.
[51:23.080 --> 51:25.080]  Последний сюжет
[51:25.080 --> 51:27.080]  это
[51:27.080 --> 51:29.080]  я специально оставил сладкой
[51:29.080 --> 51:31.080]  напоследок.
[51:31.080 --> 51:33.080]  Сумма Минковского.
[51:35.080 --> 51:37.080]  Как раз эти точки вам последней не хватает,
[51:37.080 --> 51:39.080]  что есть в контесте, что есть в теорках.
[51:41.080 --> 51:43.080]  Кстати, в теорках есть на пару самых удаленных
[51:43.080 --> 51:45.080]  точек задач.
[51:45.080 --> 51:47.080]  Если что.
[51:47.080 --> 51:49.080]  По-моему. По-моему я добавил в итоге.
[51:51.080 --> 51:53.080]  Там про то, чтобы построить
[51:53.080 --> 51:55.080]  прямоугольник
[51:55.080 --> 51:57.080]  минимального, минимальной площади
[51:57.080 --> 51:59.080]  содержащей все
[51:59.080 --> 52:01.080]  точки.
[52:01.080 --> 52:03.080]  Сумма Минковского.
[52:03.080 --> 52:05.080]  У нас 25 минут.
[52:17.080 --> 52:19.080]  Сумма Минковского.
[52:21.080 --> 52:23.080]  Я думаю уже благодаря многочисленным сообщениям
[52:23.080 --> 52:25.080]  в чате.
[52:27.080 --> 52:29.080]  Большинство людей уже
[52:29.080 --> 52:31.080]  узнало, что это такое.
[52:31.080 --> 52:33.080]  Но
[52:33.080 --> 52:35.080]  я только что напишу определение.
[52:37.080 --> 52:39.080]  Что?
[52:39.080 --> 52:41.080]  И в эвке.
[52:45.080 --> 52:47.080]  Пусть A, B
[52:47.080 --> 52:49.080]  под множество
[52:49.080 --> 52:51.080]  R2 в нашем случае.
[52:51.080 --> 52:53.080]  В общем случае это
[52:53.080 --> 52:55.080]  определенно для линейных нормированных пространств.
[52:55.080 --> 52:57.080]  Мы будем считать, что мы живем в R2.
[52:57.080 --> 52:59.080]  В силу того, что
[52:59.080 --> 53:01.080]  земля плоская.
[53:03.080 --> 53:05.080]  Будем называть A плюс B.
[53:05.080 --> 53:07.080]  То есть сумма Минковской краски.
[53:07.080 --> 53:09.080]  Сейчас поймете, почему
[53:09.080 --> 53:11.080]  плюсик круглый.
[53:11.080 --> 53:13.080]  Ну, те, кто второй курс, те поймут.
[53:13.080 --> 53:15.080]  Первый еще не поймет.
[53:21.080 --> 53:23.080]  Но это сумма линейных пространств
[53:23.080 --> 53:25.080]  просто-напросто.
[53:25.080 --> 53:27.080]  То есть, по идее, если у вас A и B это
[53:27.080 --> 53:29.080]  конечные штуки, то вы можете
[53:29.080 --> 53:31.080]  просто взять, перебрать все пары
[53:31.080 --> 53:33.080]  и построить.
[53:33.080 --> 53:35.080]  Но в нашем случае A и B это многоугольники.
[53:35.080 --> 53:37.080]  Более того, мы будем рассматривать только
[53:37.080 --> 53:39.080]  для выпуклых многоугольников.
[53:43.080 --> 53:45.080]  Утверждение, пусть
[53:45.080 --> 53:47.080]  A, B
[53:47.080 --> 53:49.080]  это выпуклые многоугольники.
[53:53.080 --> 53:55.080]  Тогда
[53:57.080 --> 53:59.080]  давайте здесь напишем
[53:59.080 --> 54:01.080]  A плюс B
[54:01.080 --> 54:03.080]  это
[54:03.080 --> 54:05.080]  и здесь
[54:05.080 --> 54:07.080]  будет три части утверждения.
[54:07.080 --> 54:09.080]  Первое,
[54:09.080 --> 54:11.080]  это выпуклое множество.
[54:15.080 --> 54:17.080]  Второе,
[54:17.080 --> 54:19.080]  это многоугольник.
[54:23.080 --> 54:25.080]  И третье утверждение,
[54:25.080 --> 54:27.080]  что
[54:27.080 --> 54:29.080]  число сторон
[54:29.080 --> 54:31.080]  в этом многоугольнике
[54:33.080 --> 54:35.080]  не превосходит суммы числа сторон
[54:35.080 --> 54:37.080]  в A и B.
[54:37.080 --> 54:39.080]  Такие вот три части утверждения.
[54:41.080 --> 54:43.080]  Вот я посмотрел, как я в том году доказывал.
[54:43.080 --> 54:45.080]  Мне в целом все понравилось.
[54:45.080 --> 54:47.080]  Вот, но я уверен,
[54:47.080 --> 54:49.080]  что меня забулят.
[54:49.080 --> 54:51.080]  Потому что недостаточно строго.
[54:51.080 --> 54:53.080]  Я бы не сказал, что это радикально,
[54:53.080 --> 54:55.080]  поэтому я позволю себе
[54:55.080 --> 54:57.080]  свое прошлогоднее доказательство,
[54:57.080 --> 54:59.080]  которое совсем такое
[54:59.080 --> 55:01.080]  на уровне
[55:01.080 --> 55:03.080]  красотарук и никакой магии.
[55:03.080 --> 55:05.080]  Но давайте я докажу строго хотя бы
[55:05.080 --> 55:07.080]  первую часть утверждения.
[55:07.080 --> 55:09.080]  Напомню в определении выпуклости,
[55:09.080 --> 55:11.080]  что множество выпукло только тогда,
[55:11.080 --> 55:13.080]  когда для любых двух точек
[55:13.080 --> 55:15.080]  из-за того множества весь отрезок
[55:15.080 --> 55:17.080]  целиком содержится в нем.
[55:17.080 --> 55:19.080]  То есть у нас будет выпукло
[55:19.080 --> 55:21.080]  для произвольных выпуклых ножств,
[55:21.080 --> 55:23.080]  а что их сумма будет выпукла.
[55:23.080 --> 55:25.080]  Ой, так, пусть.
[55:37.080 --> 55:39.080]  P1, P2 принадлежат A.
[55:41.080 --> 55:43.080]  Q1, Q2 принадлежат A.
[55:43.080 --> 55:49.080]  Q1, Q2 это нерациональные числа.
[55:49.080 --> 55:51.080]  Принадлежат B.
[55:53.080 --> 55:55.080]  Тогда я утверждаю, что
[55:57.080 --> 55:59.080]  отрезок полученный,
[55:59.080 --> 56:01.080]  то есть у вас был вот какой-то отрезок.
[56:01.080 --> 56:03.080]  Вот у вас A, P1, P2.
[56:05.080 --> 56:07.080]  Внутри будет какое-то B множество.
[56:07.080 --> 56:09.080]  Q1, Q2.
[56:09.080 --> 56:11.080]  Тогда утверждаю, что если я
[56:11.080 --> 56:13.080]  посмотрю
[56:13.080 --> 56:15.080]  A плюс B,
[56:15.080 --> 56:17.080]  то весь объект
[56:17.080 --> 56:19.080]  вот этот вот целиком,
[56:19.080 --> 56:21.080]  который прямая сумма
[56:21.080 --> 56:23.080]  P1, P2 и Q1 куда,
[56:23.080 --> 56:25.080]  будет лежать целиком внутри.
[56:25.080 --> 56:27.080]  Как это доказывать?
[56:27.080 --> 56:29.080]  Параметризуем отрезки.
[56:33.080 --> 56:35.080]  Как радиус фактора.
[56:41.080 --> 56:43.080]  Вот я параметризовал отрезки произвольным образом.
[56:43.080 --> 56:45.080]  То есть у меня здесь
[56:45.080 --> 56:47.080]  произвольная точка P,
[56:47.080 --> 56:49.080]  произвольная точка Q.
[56:49.080 --> 56:51.080]  Я хочу доказать, что P плюс Q
[56:51.080 --> 56:53.080]  обязательно попадет
[56:53.080 --> 56:55.080]  в сумму A и B.
[56:55.080 --> 56:57.080]  Рассмотрю P плюс Q.
[56:57.080 --> 56:59.080]  Плюс Q,
[56:59.080 --> 57:01.080]  плюс Q,
[57:01.080 --> 57:03.080]  плюс Q,
[57:03.080 --> 57:05.080]  плюс Q,
[57:05.080 --> 57:07.080]  плюс Q,
[57:07.080 --> 57:09.080]  плюс Q,
[57:09.080 --> 57:11.080]  рассмотрю P плюс Q.
[57:11.080 --> 57:13.080]  Но вообще,
[57:13.080 --> 57:15.080]  если надо рассматривать для произвольных
[57:15.080 --> 57:17.080]  T1 и T2 хорошему,
[57:17.080 --> 57:19.080]  я бы сказал,
[57:19.080 --> 57:21.080]  что мне лень, но ладно, я рассмотрю.
[57:21.080 --> 57:23.080]  P1 плюс
[57:23.080 --> 57:25.080]  P2 минус P1
[57:25.080 --> 57:27.080]  на T1
[57:27.080 --> 57:29.080]  плюс Q1 плюс
[57:29.080 --> 57:31.080]  Q2
[57:31.080 --> 57:33.080]  минус Q1
[57:33.080 --> 57:35.080]  на T2.
[57:35.080 --> 57:37.080]  То есть я хочу показать,
[57:37.080 --> 57:39.080]  что вот эта вот штука
[57:39.080 --> 57:41.080]  предстоит как где какие-то точки,
[57:41.080 --> 57:43.080]  что P плюс Q
[57:43.080 --> 57:45.080]  просто-напросто,
[57:45.080 --> 57:47.080]  что она лежит в сумме Минковского.
[57:47.080 --> 57:49.080]  Значит, найдутся какие-то
[57:49.080 --> 57:51.080]  T1 и T2,
[57:51.080 --> 57:53.080]  где T1 из A, T2 из B.
[57:53.080 --> 57:55.080]  Такие, что у нас
[57:55.080 --> 57:57.080]  T1 плюс T2, это вот это P плюс Q.
[57:57.080 --> 57:59.080]  Очевидно, что вместо T1 и T2
[57:59.080 --> 58:01.080]  можно взять по ИКУ просто-напросто.
[58:01.080 --> 58:03.080]  То есть вроде бы просто по определению
[58:03.080 --> 58:05.080]  эта штука лежит в A плюс B.
[58:05.080 --> 58:07.080]  Лежит в A.
[58:07.080 --> 58:09.080]  Вот это вот.
[58:09.080 --> 58:11.080]  Лежит в B.
[58:11.080 --> 58:13.080]  С этого следует, что
[58:13.080 --> 58:15.080]  лежит
[58:15.080 --> 58:17.080]  в A плюс B.
[58:17.080 --> 58:19.080]  Что?
[58:21.080 --> 58:23.080]  Да просто так.
[58:23.080 --> 58:25.080]  Ну чтобы вести действительно произвольные точки.
[58:25.080 --> 58:27.080]  Потому что нам нужно
[58:27.080 --> 58:29.080]  все-таки показать произвольные точки, что это верно.
[58:29.080 --> 58:31.080]  Но я написал
[58:31.080 --> 58:33.080]  достаточно формально.
[58:33.080 --> 58:35.080]  Да, это из B, все.
[58:35.080 --> 58:37.080]  Вот.
[58:37.080 --> 58:39.080]  То есть как бы МГУ рассмотреть одинаковые Т,
[58:39.080 --> 58:41.080]  там совсем все будет очевидно.
[58:41.080 --> 58:43.080]  Но вроде это не нужно нам.
[58:45.080 --> 58:47.080]  То есть я показал, что для произвольного
[58:47.080 --> 58:49.080]  T1 и T2 эта штука лежит в A плюс B.
[58:49.080 --> 58:51.080]  Но раз у меня
[58:51.080 --> 58:53.080]  для любых двух точек.
[58:53.080 --> 58:55.080]  А, сейчас.
[58:55.080 --> 58:57.080]  Сейчас-сейчас-сейчас.
[58:59.080 --> 59:01.080]  Что я доказал-то?
[59:03.080 --> 59:05.080]  Давайте лучше докажу,
[59:05.080 --> 59:07.080]  что
[59:07.080 --> 59:09.080]  для произвольного T и для любой точки
[59:09.080 --> 59:11.080]  с Q1 и Q2 будет лежать целиком.
[59:11.080 --> 59:13.080]  Но это тоже вроде очевидно плюс-минус.
[59:13.080 --> 59:15.080]  Что если я рассмотрю здесь, оставлю P,
[59:15.080 --> 59:17.080]  а здесь зафиксирую Q1 или Q2,
[59:17.080 --> 59:19.080]  то для любой P,
[59:19.080 --> 59:21.080]  P плюс Q1 или P плюс Q2 будет лежать в сумме.
[59:21.080 --> 59:23.080]  То есть короче, это очевидно.
[59:23.080 --> 59:25.080]  Очевидно это же, на самом деле,
[59:25.080 --> 59:27.080]  что если у вас изначальные отрезки лежали,
[59:27.080 --> 59:29.080]  то будет целиком лежать.
[59:29.080 --> 59:31.080]  Вот.
[59:31.080 --> 59:33.080]  Нормально, потому что вы можете...
[59:33.080 --> 59:35.080]  Ну, как доказать, что...
[59:35.080 --> 59:37.080]  Что такое прямая сумма двух отрезков?
[59:37.080 --> 59:39.080]  Это параллелограмм.
[59:39.080 --> 59:41.080]  Вот.
[59:41.080 --> 59:43.080]  Как он устроен?
[59:45.080 --> 59:47.080]  Ну, ты берешь вот так вот.
[59:47.080 --> 59:49.080]  И здесь замыкаешь. Все.
[59:49.080 --> 59:51.080]  И я могу доказать, что любая его внутренность
[59:51.080 --> 59:53.080]  будет тоже лежать.
[59:53.080 --> 59:55.080]  Любая точка внутренности будет лежать.
[59:55.080 --> 59:57.080]  Ну, просто ее как-то разложив
[59:57.080 --> 59:59.080]  через P1 и Q1, P2 и Q2.
[59:59.080 --> 01:00:01.080]  Вот. Поэтому здесь излишний формализм,
[01:00:01.080 --> 01:00:03.080]  наверное.
[01:00:03.080 --> 01:00:05.080]  Ну, посмотрели только работу с
[01:00:05.080 --> 01:00:07.080]  сыпковыми штуками, как отрезки параметризовывать.
[01:00:07.080 --> 01:00:09.080]  Пока не понятно,
[01:00:09.080 --> 01:00:11.080]  что мы делаем.
[01:00:11.080 --> 01:00:13.080]  Пока что мы доказываем
[01:00:13.080 --> 01:00:15.080]  сверхочевидное утверждение.
[01:00:15.080 --> 01:00:17.080]  Ну, а что такое P1, P2, P1, P2?
[01:00:17.080 --> 01:00:19.080]  Ну, смотри. Вот я хочу тогда доказать,
[01:00:19.080 --> 01:00:21.080]  что если это A плюс B,
[01:00:21.080 --> 01:00:23.080]  то будто бы,
[01:00:23.080 --> 01:00:25.080]  если я рассмотрю
[01:00:25.080 --> 01:00:27.080]  вот эта вот штука будет
[01:00:27.080 --> 01:00:29.080]  P1, P2.
[01:00:37.080 --> 01:00:39.080]  Да.
[01:00:41.080 --> 01:00:43.080]  Ну вот. Я хочу будто бы доказать,
[01:00:43.080 --> 01:00:45.080]  что в этом параллелограмме любая точка лежит
[01:00:45.080 --> 01:00:47.080]  внутри A плюс B,
[01:00:47.080 --> 01:00:49.080]  если я его построю.
[01:00:49.080 --> 01:00:51.080]  Как сумма двух отрезков прямая.
[01:00:51.080 --> 01:00:53.080]  Наслужу какую-то точку.
[01:00:53.080 --> 01:00:55.080]  Наслужу какую-то точку.
[01:00:55.080 --> 01:00:57.080]  Окей. Что я с ней могу сделать?
[01:00:59.080 --> 01:01:01.080]  Ну, знаете, что я сделаю? Я просто возьму вот так вот.
[01:01:01.080 --> 01:01:03.080]  И все. Приведу параллельные отрезки
[01:01:03.080 --> 01:01:05.080]  по параллельной сторонам.
[01:01:05.080 --> 01:01:07.080]  И найду
[01:01:07.080 --> 01:01:09.080]  это,
[01:01:09.080 --> 01:01:11.080]  найду из кома P и Q.
[01:01:11.080 --> 01:01:13.080]  Ну, это и наоборот Q у нас, потому что
[01:01:13.080 --> 01:01:15.080]  горизонтальная. Q и P. Проекция.
[01:01:15.080 --> 01:01:17.080]  Ну и все.
[01:01:17.080 --> 01:01:19.080]  Q и P очевидно образованы
[01:01:19.080 --> 01:01:21.080]  как параметризация.
[01:01:21.080 --> 01:01:23.080]  Поэтому я доказал, что любая внутренность параллелограммы лежит внутри.
[01:01:33.080 --> 01:01:35.080]  Мы доказываем, что для произвольных
[01:01:35.080 --> 01:01:37.080]  P1, P2, Q1, Q2
[01:01:37.080 --> 01:01:39.080]  их прямая сумма лежит
[01:01:39.080 --> 01:01:41.080]  целиком в сумме Минковского.
[01:01:47.080 --> 01:01:49.080]  Нет.
[01:01:49.080 --> 01:01:51.080]  У нас A и B выпуклые.
[01:01:51.080 --> 01:01:53.080]  Нам даны отрезки выпуклых в множествах.
[01:01:57.080 --> 01:01:59.080]  Нет. Мы построили прямую сумму A и B.
[01:01:59.080 --> 01:02:01.080]  Это параллелограмм.
[01:02:01.080 --> 01:02:03.080]  В смысле какой-то?
[01:02:03.080 --> 01:02:05.080]  Он достаточно определенный.
[01:02:07.080 --> 01:02:09.080]  В смысле нет. Зачем вы рассматриваете?
[01:02:09.080 --> 01:02:11.080]  Вы берете произвольные P1, P2
[01:02:11.080 --> 01:02:13.080]  из A. Произвольные Q1, Q2
[01:02:13.080 --> 01:02:15.080]  из B.
[01:02:15.080 --> 01:02:17.080]  Складываете их. Получаете параллелограмм.
[01:02:19.080 --> 01:02:21.080]  П1 плюс Q1,
[01:02:21.080 --> 01:02:23.080]  P1 плюс Q2, P2 плюс Q1,
[01:02:23.080 --> 01:02:25.080]  P2 плюс Q2.
[01:02:25.080 --> 01:02:27.080]  Если вы четко рассматриваете их,
[01:02:27.080 --> 01:02:29.080]  это будет параллелограмм.
[01:02:29.080 --> 01:02:31.080]  Я, пожалуй, оставлю без доказательств, что это параллелограмм.
[01:02:31.080 --> 01:02:33.080]  Почему?
[01:02:33.080 --> 01:02:35.080]  Потому что если я к P2 прибавлю отрезок Q1, Q2,
[01:02:35.080 --> 01:02:37.080]  я получу вот эту сторону.
[01:02:37.080 --> 01:02:39.080]  Аналогично, если я к P1 прибавлю отрезок Q1, Q2,
[01:02:39.080 --> 01:02:41.080]  я получу вот эту сторону.
[01:02:41.080 --> 01:02:43.080]  Также строятся эти.
[01:02:43.080 --> 01:02:45.080]  Я доказываю, что любая точка внутри лежит
[01:02:45.080 --> 01:02:47.080]  2 плюс B.
[01:02:47.080 --> 01:02:49.080]  Я беру и строю проекции
[01:02:49.080 --> 01:02:51.080]  на эти стороны.
[01:02:51.080 --> 01:02:53.080]  Это будут вот такие вот штуки.
[01:02:53.080 --> 01:02:55.080]  Одна из A, другая из B.
[01:03:01.080 --> 01:03:03.080]  Вот множество A плюс B
[01:03:03.080 --> 01:03:05.080]  содержит вот такую вот штуку.
[01:03:05.080 --> 01:03:07.080]  И больше ничего.
[01:03:07.080 --> 01:03:09.080]  Не больше и не меньше.
[01:03:11.080 --> 01:03:13.080]  Геометрически оно выглядит
[01:03:13.080 --> 01:03:15.080]  очень странно. Я вам сразу скажу.
[01:03:17.080 --> 01:03:19.080]  Позвольте еще раз, что
[01:03:19.080 --> 01:03:21.080]  вливая внутреннюю сторону параллелограмма лежит от QB?
[01:03:21.080 --> 01:03:23.080]  Ну я взял, построил точки Q
[01:03:23.080 --> 01:03:25.080]  и точки P, просто проецировав параллельно
[01:03:25.080 --> 01:03:27.080]  стороны параллелограмма.
[01:03:27.080 --> 01:03:29.080]  Ну и все.
[01:03:29.080 --> 01:03:31.080]  Я знаю, что этот отрезок
[01:03:31.080 --> 01:03:33.080]  у меня получается как Q1
[01:03:33.080 --> 01:03:35.080]  плюс P1 P2.
[01:03:35.080 --> 01:03:37.080]  Это какая-то точка
[01:03:37.080 --> 01:03:39.080]  на P1 и P2.
[01:03:39.080 --> 01:03:41.080]  Я просто параметризовал.
[01:03:41.080 --> 01:03:43.080]  Я могу просто отношение длин посмотреть.
[01:03:43.080 --> 01:03:45.080]  Я найду T из него.
[01:03:45.080 --> 01:03:47.080]  Ну и все.
[01:03:47.080 --> 01:03:49.080]  Абсолютно так же я могу любую точку.
[01:03:49.080 --> 01:03:51.080]  Координата Q определяется.
[01:03:51.080 --> 01:03:53.080]  И аналогично я могу построить
[01:03:53.080 --> 01:03:55.080]  любую точку из внутренности.
[01:03:59.080 --> 01:04:01.080]  Ну это смерть.
[01:04:01.080 --> 01:04:03.080]  Ладно, давайте доказывать максимально
[01:04:03.080 --> 01:04:05.080]  неформально на пальцах.
[01:04:05.080 --> 01:04:07.080]  И то, что вас никто не примет на экзамене.
[01:04:07.080 --> 01:04:09.080]  Что это многоугольник и что у него
[01:04:09.080 --> 01:04:11.080]  число сторон маленькое.
[01:04:11.080 --> 01:04:13.080]  Так вы не сдаете.
[01:04:13.080 --> 01:04:15.080]  Ну второй курс не сдает.
[01:04:15.080 --> 01:04:17.080]  Второй курс не жалко.
[01:04:17.080 --> 01:04:19.080]  Окей.
[01:04:19.080 --> 01:04:21.080]  Ладно, давайте рассмотрим
[01:04:21.080 --> 01:04:23.080]  рассмотрим
[01:04:23.080 --> 01:04:25.080]  давайте определение.
[01:04:25.080 --> 01:04:27.080]  Точка P
[01:04:27.080 --> 01:04:29.080]  крайняя
[01:04:29.080 --> 01:04:31.080]  в направлении
[01:04:35.080 --> 01:04:37.080]  D если
[01:04:39.080 --> 01:04:41.080]  ориентированная
[01:04:43.080 --> 01:04:45.080]  проекция
[01:04:49.080 --> 01:04:51.080]  P на D
[01:04:51.080 --> 01:04:53.080]  вектор
[01:04:53.080 --> 01:04:55.080]  максимально
[01:04:57.080 --> 01:04:59.080]  перевожу на русский.
[01:04:59.080 --> 01:05:01.080]  Вот у вас есть ваше тело.
[01:05:01.080 --> 01:05:03.080]  Вот есть ваш вектор D.
[01:05:03.080 --> 01:05:05.080]  То вы берете
[01:05:05.080 --> 01:05:07.080]  будто бы рассматриваете
[01:05:07.080 --> 01:05:09.080]  прямые ортогональные D
[01:05:09.080 --> 01:05:11.080]  и выбрать ту, которая наиболее дальняя.
[01:05:13.080 --> 01:05:15.080]  Потому что этой точке радиус вектора
[01:05:15.080 --> 01:05:17.080]  если это сначала координат
[01:05:17.080 --> 01:05:19.080]  то
[01:05:19.080 --> 01:05:21.080]  проекция радиус вектора
[01:05:21.080 --> 01:05:23.080]  получается какая?
[01:05:23.080 --> 01:05:25.080]  А, ну она минимальная.
[01:05:25.080 --> 01:05:27.080]  Не, наоборот
[01:05:27.080 --> 01:05:29.080]  вру. Проекция радиус вектора
[01:05:29.080 --> 01:05:31.080]  на вектор D максимальная.
[01:05:31.080 --> 01:05:33.080]  Потому что она просто с ним совпадает.
[01:05:33.080 --> 01:05:35.080]  Вот, если мы рассматривали
[01:05:35.080 --> 01:05:37.080]  какую-то другую множество
[01:05:37.080 --> 01:05:39.080]  то вот ваша точка
[01:05:39.080 --> 01:05:41.080]  которая крайняя в направлении
[01:05:41.080 --> 01:05:43.080]  вроде бы
[01:05:43.080 --> 01:05:45.080]  нет, вот эта будет крайней в направлении
[01:05:45.080 --> 01:05:47.080]  потому что у нее будет проекция большая
[01:05:47.080 --> 01:05:49.080]  на вектор D.
[01:05:49.080 --> 01:05:51.080]  Вот.
[01:05:53.080 --> 01:05:55.080]  Здесь проекция
[01:05:55.080 --> 01:05:57.080]  здесь важно то, что у вас
[01:05:57.080 --> 01:05:59.080]  ориентированность проекции, то, что сюда
[01:05:59.080 --> 01:06:01.080]  это будет с минусом проекции.
[01:06:01.080 --> 01:06:03.080]  Вот.
[01:06:03.080 --> 01:06:05.080]  Вот, это что-то как крайняя точка.
[01:06:07.080 --> 01:06:09.080]  Можно я скажу, что утверждение о том,
[01:06:09.080 --> 01:06:11.080]  что сумма крайних точек крайняя в сумме Минковского
[01:06:11.080 --> 01:06:13.080]  это очевидно.
[01:06:15.080 --> 01:06:17.080]  В смысле, в программе
[01:06:17.080 --> 01:06:19.080]  прописано, доказатель, доказатель
[01:06:19.080 --> 01:06:21.080]  это утверждение.
[01:06:21.080 --> 01:06:23.080]  Я сочувствую вам.
[01:06:23.080 --> 01:06:25.080]  Упражнение для читателей.
[01:06:27.080 --> 01:06:29.080]  Если точка A крайняя
[01:06:29.080 --> 01:06:31.080]  в одном направлении,
[01:06:31.080 --> 01:06:33.080]  если вы зафиксируете направление
[01:06:33.080 --> 01:06:35.080]  и рассматриваете две крайние точки
[01:06:35.080 --> 01:06:37.080]  в этом направлении, то сложив их
[01:06:37.080 --> 01:06:39.080]  вы получите крайнюю точку в заднем направлении
[01:06:39.080 --> 01:06:41.080]  в сумме Минковского. Почему так?
[01:06:41.080 --> 01:06:43.080]  Допустим, она не крайняя.
[01:06:43.080 --> 01:06:45.080]  Значит, есть точка, куда более далекая в этом направлении.
[01:06:45.080 --> 01:06:47.080]  Окей.
[01:06:47.080 --> 01:06:49.080]  Как мы ее могли получить?
[01:06:49.080 --> 01:06:51.080]  Как сумма каких-то из этих двух.
[01:06:51.080 --> 01:06:53.080]  Но мы здесь уже взяли максимальный.
[01:06:53.080 --> 01:06:55.080]  Значит, больше максимум получить просто нельзя.
[01:06:55.080 --> 01:06:57.080]  Все. Утверждение уровня 8 класса.
[01:07:03.080 --> 01:07:05.080]  Окей.
[01:07:05.080 --> 01:07:07.080]  Давай, серьезно.
[01:07:07.080 --> 01:07:09.080]  Господи. Мы отсюда не уйдем
[01:07:09.080 --> 01:07:11.080]  до начала следующей пары.
[01:07:13.080 --> 01:07:15.080]  Сумма крайних точек крайняя?
[01:07:23.080 --> 01:07:25.080]  Окей.
[01:07:27.080 --> 01:07:29.080]  Хорошо. Как это будем делать?
[01:07:29.080 --> 01:07:31.080]  Пусть
[01:07:33.080 --> 01:07:35.080]  П
[01:07:35.080 --> 01:07:37.080]  это крайняя точка
[01:07:37.080 --> 01:07:39.080]  А
[01:07:39.080 --> 01:07:41.080]  Q
[01:07:41.080 --> 01:07:43.080]  крайняя точка
[01:07:43.080 --> 01:07:45.080]  B
[01:07:45.080 --> 01:07:47.080]  в направлении D.
[01:07:49.080 --> 01:07:51.080]  То есть вот какие-то у вас тут есть
[01:07:53.080 --> 01:07:55.080]  А
[01:07:55.080 --> 01:07:57.080]  B
[01:07:57.080 --> 01:07:59.080]  направление легендарным образом
[01:07:59.080 --> 01:08:01.080]  вот таким вот это будет D.
[01:08:01.080 --> 01:08:03.080]  Тогда я рассматриваю
[01:08:03.080 --> 01:08:05.080]  будто бы все сечения прямыми
[01:08:05.080 --> 01:08:07.080]  артагональными D
[01:08:07.080 --> 01:08:09.080]  и выбираю крайние точки в этом направлении.
[01:08:09.080 --> 01:08:11.080]  Это здесь будет?
[01:08:11.080 --> 01:08:13.080]  Потому что ее радиус вектора
[01:08:13.080 --> 01:08:15.080]  наибольшая проекция на вектор D.
[01:08:15.080 --> 01:08:17.080]  Логично здесь будет. Вот она.
[01:08:17.080 --> 01:08:19.080]  Вот я утверждаю, что
[01:08:19.080 --> 01:08:21.080]  сумма крайних крайняя.
[01:08:21.080 --> 01:08:23.080]  Вау.
[01:08:23.080 --> 01:08:25.080]  Ну то есть потому что
[01:08:25.080 --> 01:08:27.080]  у вас большую проекцию просто
[01:08:27.080 --> 01:08:29.080]  выбрать нельзя.
[01:08:29.080 --> 01:08:31.080]  Можно это сотруть с доски?
[01:08:31.080 --> 01:08:33.080]  Этот позор. Спасибо.
[01:08:35.080 --> 01:08:37.080]  Крайняя в сумме
[01:08:37.080 --> 01:08:39.080]  это крайняя точка в сумме. Именно так.
[01:08:45.080 --> 01:08:47.080]  Сумма крайних точек
[01:08:47.080 --> 01:08:49.080]  является крайней точкой в сумме.
[01:08:49.080 --> 01:08:51.080]  Отлично.
[01:08:55.080 --> 01:08:57.080]  Ну раз мы знаем, что сумма крайних
[01:08:57.080 --> 01:08:59.080]  точек крайняя, а что такое?
[01:08:59.080 --> 01:09:01.080]  Окей.
[01:09:01.080 --> 01:09:03.080]  А теперь если у вас рассмотрим
[01:09:03.080 --> 01:09:05.080]  вектор D, артагональный какой-то
[01:09:05.080 --> 01:09:07.080]  из сторон
[01:09:07.080 --> 01:09:09.080]  ваших ногогольников.
[01:09:19.080 --> 01:09:21.080]  Ну это типа вертикальный.
[01:09:23.080 --> 01:09:25.080]  То у вас на самом деле
[01:09:25.080 --> 01:09:27.080]  что такое сумма точки и отрезка?
[01:09:27.080 --> 01:09:29.080]  Ну что у вас отрезок крайних точек?
[01:09:29.080 --> 01:09:31.080]  Что такое сумма точки и отрезка?
[01:09:31.080 --> 01:09:33.080]  Это отрезок.
[01:09:33.080 --> 01:09:35.080]  Потому что вы берете просто каждые
[01:09:35.080 --> 01:09:37.080]  точки этого, прибавляете эту точку.
[01:09:37.080 --> 01:09:39.080]  Все.
[01:09:39.080 --> 01:09:41.080]  И утверждаюсь, что эта сторона будет крайней
[01:09:41.080 --> 01:09:43.080]  в направлении D на самом деле.
[01:09:43.080 --> 01:09:45.080]  Это вроде очевидно, потому что у вас
[01:09:45.080 --> 01:09:47.080]  отрезок просто построился и все.
[01:09:47.080 --> 01:09:49.080]  Тогда вы можете сказать, что
[01:09:49.080 --> 01:09:51.080]  просто-напросто
[01:09:51.080 --> 01:09:53.080]  если вы переберете все возможные
[01:09:53.080 --> 01:09:55.080]  направления D, у вас будут пары
[01:09:55.080 --> 01:09:57.080]  крайняя точка,
[01:09:57.080 --> 01:09:59.080]  крайняя сторона.
[01:10:01.080 --> 01:10:03.080]  И при этом у вас относительно вот этих
[01:10:03.080 --> 01:10:05.080]  вот крайних сторон будто бы будут все
[01:10:05.080 --> 01:10:07.080]  время лежать в одной полуплоскости.
[01:10:07.080 --> 01:10:09.080]  То есть вы построили пару
[01:10:09.080 --> 01:10:11.080]  для этой и для этой.
[01:10:13.080 --> 01:10:15.080]  Давайте я их обозначу буквами.
[01:10:15.080 --> 01:10:17.080]  То есть вы построили сторону
[01:10:17.080 --> 01:10:19.080]  A2, крайнюю для двойки
[01:10:19.080 --> 01:10:21.080]  и для A.
[01:10:21.080 --> 01:10:23.080]  Так как она крайняя, значит у вас
[01:10:23.080 --> 01:10:25.080]  здесь ничего не может быть.
[01:10:25.080 --> 01:10:27.080]  Аналогично вы строите для A и для
[01:10:27.080 --> 01:10:29.080]  3.
[01:10:29.080 --> 01:10:31.080]  Что-нибудь типа такого будет.
[01:10:31.080 --> 01:10:33.080]  Ну, отрезок только.
[01:10:33.080 --> 01:10:35.080]  Поэтому он здесь будет поменьше.
[01:10:37.080 --> 01:10:39.080]  То есть у вас вот здесь запрещенная область,
[01:10:39.080 --> 01:10:41.080]  так называемая.
[01:10:41.080 --> 01:10:43.080]  Здесь ничего лежать не может.
[01:10:43.080 --> 01:10:45.080]  Да и в целом ничего не может лежать
[01:10:45.080 --> 01:10:47.080]  левее на самом деле в этом направлении.
[01:10:49.080 --> 01:10:51.080]  Ладно, дальше. Строите для всех
[01:10:51.080 --> 01:10:53.080]  вот это A3.
[01:10:53.080 --> 01:10:55.080]  И так далее. Для всех построили такие области.
[01:10:57.080 --> 01:10:59.080]  Но это очень похоже на какие-то
[01:10:59.080 --> 01:11:01.080]  полуплоскости на самом деле.
[01:11:01.080 --> 01:11:03.080]  Потому что у вас вот здесь ничего быть
[01:11:03.080 --> 01:11:05.080]  не может уже.
[01:11:05.080 --> 01:11:07.080]  Вот здесь вот ничего быть не может.
[01:11:07.080 --> 01:11:09.080]  Ну дальше потом построится.
[01:11:09.080 --> 01:11:11.080]  Если вы их все построите вот так, то у вас
[01:11:11.080 --> 01:11:13.080]  есть области.
[01:11:13.080 --> 01:11:15.080]  И вы их отделяете вот такими прямыми
[01:11:15.080 --> 01:11:17.080]  от какой-то коробки
[01:11:17.080 --> 01:11:19.080]  всеобъемлющей.
[01:11:19.080 --> 01:11:21.080]  Всеобъемлющая коробка определяется как крайняя
[01:11:21.080 --> 01:11:23.080]  в вертикальных и в горизонтальных направлениях.
[01:11:23.080 --> 01:11:25.080]  То есть какая-то всеобъемлющая коробка
[01:11:25.080 --> 01:11:27.080]  внутри которой лежат все.
[01:11:27.080 --> 01:11:29.080]  И вы из нее высекаете какие-то вот такие
[01:11:29.080 --> 01:11:31.080]  вот множества прямоугольнички.
[01:11:31.080 --> 01:11:33.080]  Потому что каждая
[01:11:33.080 --> 01:11:35.080]  сумма точки и отрезка высекает
[01:11:35.080 --> 01:11:37.080]  вам прямоугольник вот такой вот.
[01:11:37.080 --> 01:11:39.080]  В каком-то направлении.
[01:11:39.080 --> 01:11:41.080]  И потом вот высекает вам.
[01:11:43.080 --> 01:11:45.080]  А раз вы отсекали от
[01:11:45.080 --> 01:11:47.080]  многоугольника
[01:11:47.080 --> 01:11:49.080]  отрезками, куски, значит у вас в конце
[01:11:49.080 --> 01:11:51.080]  получится снова многоугольник. У вас ничего другого
[01:11:51.080 --> 01:11:53.080]  получить не может.
[01:11:55.080 --> 01:11:57.080]  А мы при этом доказали, что он выпуклый.
[01:11:57.080 --> 01:11:59.080]  Поэтому сумма является выпуклым многоугольником.
[01:12:05.080 --> 01:12:07.080]  Ой, тут много строить, не лень.
[01:12:07.080 --> 01:12:09.080]  Я построю сумму потом,
[01:12:09.080 --> 01:12:11.080]  когда мы придем к алгоритму.
[01:12:17.080 --> 01:12:19.080]  Ну,
[01:12:21.080 --> 01:12:23.080]  от четыре сторон тогда, думаю, понятно как рассуждать.
[01:12:23.080 --> 01:12:25.080]  Абсолютно так же.
[01:12:25.080 --> 01:12:27.080]  Что у вас на самом деле
[01:12:27.080 --> 01:12:29.080]  итоговый вклад внесет
[01:12:29.080 --> 01:12:31.080]  не очень много сторон.
[01:12:31.080 --> 01:12:33.080]  Более того, можно сказать, что для каждой вершины
[01:12:33.080 --> 01:12:35.080]  будут носить вклад только на две стороны.
[01:12:35.080 --> 01:12:37.080]  Ну или три от силы.
[01:12:37.080 --> 01:12:39.080]  Это будет
[01:12:39.080 --> 01:12:41.080]  крайняя сторона, и вот эти вот две.
[01:12:41.080 --> 01:12:43.080]  И все, для этой вершины эти уже вклад
[01:12:43.080 --> 01:12:45.080]  носить не будут, потому что для нее есть более
[01:12:45.080 --> 01:12:47.080]  крайние в том направлении.
[01:12:49.080 --> 01:12:51.080]  Давайте третью часть
[01:12:51.080 --> 01:12:53.080]  сотрем.
[01:12:53.080 --> 01:12:55.080]  Она будет вытекать из алгоритма.
[01:12:55.080 --> 01:12:57.080]  Чего корректности я сейчас буду доказывать.
[01:12:57.080 --> 01:12:59.080]  Вот так.
[01:13:03.080 --> 01:13:05.080]  Давайте здесь напишем что-нибудь на ташке.
[01:13:05.080 --> 01:13:07.080]  Что крайняя.
[01:13:07.080 --> 01:13:09.080]  Сумма крайних крайняя.
[01:13:11.080 --> 01:13:13.080]  Сумма крайних крайняя.
[01:13:19.080 --> 01:13:21.080]  Вот этого следует, что
[01:13:21.080 --> 01:13:23.080]  если рассматривать
[01:13:23.080 --> 01:13:25.080]  все возможные D
[01:13:29.080 --> 01:13:31.080]  получим
[01:13:33.080 --> 01:13:35.080]  что
[01:13:35.080 --> 01:13:37.080]  от многоугольника
[01:13:37.080 --> 01:13:39.080]  даже от
[01:13:39.080 --> 01:13:41.080]  всеобъемлющего
[01:13:47.080 --> 01:13:49.080]  прямоугольника
[01:13:49.080 --> 01:13:51.080]  отсекали
[01:13:53.080 --> 01:13:55.080]  области
[01:13:55.080 --> 01:13:57.080]  отрезками.
[01:14:01.080 --> 01:14:03.080]  За этого следует, что получена фигура многоугольника.
[01:14:11.080 --> 01:14:13.080]  Ну, вам придется потерпеть.
[01:14:13.080 --> 01:14:15.080]  Оставшиеся минут еще 10, наверное, задержимся,
[01:14:15.080 --> 01:14:17.080]  к сожалению.
[01:14:17.080 --> 01:14:19.080]  Окей.
[01:14:19.080 --> 01:14:21.080]  Сам алгоритм.
[01:14:23.080 --> 01:14:25.080]  Из него будет вытекать число сторон
[01:14:25.080 --> 01:14:27.080]  и доказывать корректность алгоритма.
[01:14:27.080 --> 01:14:29.080]  Мы тоже будем.
[01:14:29.080 --> 01:14:31.080]  Но постараемся доказать.
[01:14:31.080 --> 01:14:33.080]  То есть пока что мы доказали,
[01:14:33.080 --> 01:14:35.080]  что это глубокий многоугольник.
[01:14:35.080 --> 01:14:37.080]  Вот. Мы не доказали в нем сколько сторон.
[01:14:37.080 --> 01:14:39.080]  Это будет вытекать из построения.
[01:14:39.080 --> 01:14:41.080]  То есть нам надо написать
[01:14:41.080 --> 01:14:43.080]  построение и доказать корректность.
[01:14:43.080 --> 01:14:45.080]  И курс лекции окончен на этом.
[01:14:45.080 --> 01:14:47.080]  Так, алгоритм. Первый шаг.
[01:14:47.080 --> 01:14:49.080]  P0
[01:14:49.080 --> 01:14:51.080]  P0 это крайняя
[01:14:51.080 --> 01:14:53.080]  P0 это самая нижняя точка.
[01:14:53.080 --> 01:14:55.080]  Из самых нижних точек самая левая точка
[01:14:55.080 --> 01:14:57.080]  в A.
[01:14:59.080 --> 01:15:01.080]  Самая
[01:15:03.080 --> 01:15:05.080]  нижняя
[01:15:05.080 --> 01:15:07.080]  точка A.
[01:15:07.080 --> 01:15:09.080]  Q0,
[01:15:09.080 --> 01:15:11.080]  бла-бла-бла, точка B.
[01:15:11.080 --> 01:15:13.080]  То есть
[01:15:22.080 --> 01:15:24.080]  вот давайте.
[01:15:24.080 --> 01:15:26.080]  Самая левая
[01:15:32.080 --> 01:15:34.080]  Да, вы должны взять одинаковую там и там.
[01:15:36.080 --> 01:15:38.080]  Ну, это любимый прием наш.
[01:15:38.080 --> 01:15:40.080]  Потому что делается за линию.
[01:15:40.080 --> 01:15:42.080]  Все любимые приемы делаются за линию.
[01:15:42.080 --> 01:15:44.080]  Ладно, окей.
[01:15:44.080 --> 01:15:46.080]  Так.
[01:15:49.080 --> 01:15:51.080]  Это Q0.
[01:15:51.080 --> 01:15:53.080]  Это P0.
[01:15:53.080 --> 01:15:55.080]  Ну, следственно, сделаем ротейт
[01:15:55.080 --> 01:15:57.080]  так, чтобы у нас отчет от многогоника начался именно отсюда.
[01:15:57.080 --> 01:15:59.080]  То есть, это было бы P1, P2, P3.
[01:15:59.080 --> 01:16:01.080]  Кодинг кудалку 3.
[01:16:01.080 --> 01:16:03.080]  Мы с вами уже говорили,
[01:16:03.080 --> 01:16:04.080]  что в этом случае
[01:16:04.080 --> 01:16:06.080]  мы будем делать
[01:16:06.080 --> 01:16:08.080]  кодинг кудалку 3.
[01:16:08.080 --> 01:16:10.080]  Кодинг кудалку 3.
[01:16:10.080 --> 01:16:12.080]  Мы с вами уже говорили, что в этом случае
[01:16:12.080 --> 01:16:14.080]  если вы рассмотрите диагонали
[01:16:14.080 --> 01:16:16.080]  и полярные углы
[01:16:16.080 --> 01:16:18.080]  между, ну, от P0
[01:16:18.080 --> 01:16:20.080]  до каждой из сторон, последовательно,
[01:16:20.080 --> 01:16:22.080]  то эти массивы будут сортированы.
[01:16:22.080 --> 01:16:24.080]  Вот.
[01:16:24.080 --> 01:16:26.080]  Ну, короче, алгоритм
[01:16:26.080 --> 01:16:28.080]  будет просто смерживать эти два массива
[01:16:28.080 --> 01:16:30.080]  и дальше откладывать точки последовательно.
[01:16:30.080 --> 01:16:32.080]  Два массива векторов.
[01:16:32.080 --> 01:16:34.080]  Теперь рисую картинку.
[01:16:34.080 --> 01:16:36.080]  Что делать будем?
[01:16:37.080 --> 01:16:39.080]  Если мы выбрали самую нижнюю
[01:16:39.080 --> 01:16:41.080]  из них самую левую точку,
[01:16:41.080 --> 01:16:43.080]  то очевидно, что у нас нет
[01:16:43.080 --> 01:16:45.080]  никого ниже нас.
[01:16:45.080 --> 01:16:47.080]  Поэтому мы выбрали две точки
[01:16:47.080 --> 01:16:49.080]  две крайние точки в вертикальном направлении.
[01:16:54.080 --> 01:16:56.080]  Так, давайте я нарисую картинку
[01:16:56.080 --> 01:16:58.080]  побольше.
[01:16:58.080 --> 01:17:00.080]  Разлину ее.
[01:17:06.080 --> 01:17:08.080]  Так, к сожалению, сумма Минковского
[01:17:08.080 --> 01:17:10.080]  требует больших картинок.
[01:17:18.080 --> 01:17:20.080]  Окей.
[01:17:20.080 --> 01:17:22.080]  Давайте я нарисую две фигурки.
[01:17:22.080 --> 01:17:24.080]  Одна из них будет
[01:17:24.080 --> 01:17:26.080]  лексовый квадратик.
[01:17:28.080 --> 01:17:30.080]  Красивый квадратик.
[01:17:30.080 --> 01:17:32.080]  Другая будет
[01:17:32.080 --> 01:17:34.080]  классный тренировок.
[01:17:34.080 --> 01:17:36.080]  П.
[01:17:36.080 --> 01:17:38.080]  Ку-ноль, П-ноль.
[01:17:38.080 --> 01:17:40.080]  Пускай так будет.
[01:17:40.080 --> 01:17:42.080]  Сначала строим П-ноль плюс Ку-ноль.
[01:17:42.080 --> 01:17:44.080]  Строим ее внезапно по определению.
[01:17:44.080 --> 01:17:46.080]  Это вот здесь.
[01:17:50.080 --> 01:17:52.080]  У вас один-один?
[01:17:52.080 --> 01:17:54.080]  Нет.
[01:17:54.080 --> 01:17:56.080]  Я обманул вас, да.
[01:17:56.080 --> 01:17:58.080]  Вот.
[01:17:58.080 --> 01:18:00.080]  Вот.
[01:18:00.080 --> 01:18:02.080]  Вот.
[01:18:02.080 --> 01:18:04.080]  Я обманул вас, да.
[01:18:04.080 --> 01:18:06.080]  Это здесь.
[01:18:06.080 --> 01:18:08.080]  Да, это ноль плюс Ку-ноль.
[01:18:08.080 --> 01:18:10.080]  Это стартовая точка,
[01:18:10.080 --> 01:18:12.080]  от которой мы будем строить сумму Минковского.
[01:18:12.080 --> 01:18:14.080]  Нижнее ничего нет.
[01:18:14.080 --> 01:18:16.080]  Все, это нижний уровень.
[01:18:16.080 --> 01:18:18.080]  Это ниже некуда просто
[01:18:18.080 --> 01:18:20.080]  опускаться в вашу сумму Минковского.
[01:18:20.080 --> 01:18:22.080]  Что мы дальше делаем?
[01:18:22.080 --> 01:18:24.080]  Мы берем, рассматриваем.
[01:18:24.080 --> 01:18:26.080]  Мы начнем вращать наш вектор
[01:18:26.080 --> 01:18:28.080]  наше направление
[01:18:28.080 --> 01:18:30.080]  против часовой стрелки.
[01:18:30.080 --> 01:18:32.080]  И будем выбирать вектора
[01:18:32.080 --> 01:18:34.080]  в стороны крайние
[01:18:34.080 --> 01:18:36.080]  в соответствующих направлениях.
[01:18:38.080 --> 01:18:40.080]  То есть вот у нас вектора
[01:18:40.080 --> 01:18:42.080]  раз, два, три.
[01:18:42.080 --> 01:18:44.080]  Раз, два, три, четыре.
[01:18:48.080 --> 01:18:50.080]  Сначала будет вот этот вектор
[01:18:50.080 --> 01:18:52.080]  на самом деле отложен.
[01:18:52.080 --> 01:18:54.080]  Вот сюда.
[01:18:54.080 --> 01:18:56.080]  Потому что он горизонтальный.
[01:18:56.080 --> 01:18:58.080]  Дальше у вас будет откладываться
[01:18:58.080 --> 01:19:00.080]  Вот вы чуть-чуть повернули
[01:19:00.080 --> 01:19:02.080]  ваше направление.
[01:19:02.080 --> 01:19:04.080]  И у вас крайней точкой
[01:19:04.080 --> 01:19:06.080]  стало здесь это,
[01:19:06.080 --> 01:19:08.080]  а крайней стороной вот это.
[01:19:08.080 --> 01:19:10.080]  Поэтому откладывайте сумму этой точки
[01:19:10.080 --> 01:19:12.080]  и этой стороны.
[01:19:14.080 --> 01:19:16.080]  Дальше проворачивайте направление.
[01:19:16.080 --> 01:19:18.080]  Оно стало у вас вот таким вот
[01:19:18.080 --> 01:19:20.080]  горизонтальным.
[01:19:20.080 --> 01:19:22.080]  Крайняя точка у вас эта,
[01:19:22.080 --> 01:19:24.080]  крайняя сторона вот эта.
[01:19:24.080 --> 01:19:26.080]  Поэтому откладывайте их в сумму.
[01:19:26.080 --> 01:19:28.080]  Так, это мы уже заняли.
[01:19:28.080 --> 01:19:30.080]  Это и это заняли.
[01:19:30.080 --> 01:19:32.080]  Сейчас, подождите.
[01:19:32.080 --> 01:19:34.080]  Да, я не оттуда.
[01:19:34.080 --> 01:19:36.080]  Отсюда надо откладывать. Вот так вот.
[01:19:36.080 --> 01:19:38.080]  Вот, да.
[01:19:38.080 --> 01:19:40.080]  Так, дальше следующее.
[01:19:40.080 --> 01:19:42.080]  Следующее направление становится
[01:19:42.080 --> 01:19:44.080]  Нет, нет, нет. Почему?
[01:19:44.080 --> 01:19:46.080]  У нас следующая крайняя сторона есть горизонтальная.
[01:19:46.080 --> 01:19:48.080]  Туда и туда.
[01:19:50.080 --> 01:19:52.080]  То есть я откладываю следующее направление.
[01:19:52.080 --> 01:19:54.080]  У меня становится крайними точками.
[01:19:54.080 --> 01:19:56.080]  Откладываю сумму этого и вот этого вот.
[01:20:00.080 --> 01:20:02.080]  Да, если у нас коллинеарные,
[01:20:02.080 --> 01:20:04.080]  то мы вынуждены оба отложить просто коллинеарных.
[01:20:04.080 --> 01:20:06.080]  И все.
[01:20:06.080 --> 01:20:08.080]  Коллинеарные отложили.
[01:20:08.080 --> 01:20:10.080]  Дальше будет следующим.
[01:20:10.080 --> 01:20:12.080]  Это крайняя точка в этом.
[01:20:12.080 --> 01:20:14.080]  Вот в таком направлении будет.
[01:20:16.080 --> 01:20:18.080]  То есть вот раз вектор
[01:20:18.080 --> 01:20:20.080]  и два точки.
[01:20:20.080 --> 01:20:22.080]  Три точки.
[01:20:22.080 --> 01:20:24.080]  И три последние вектора завершающие.
[01:20:24.080 --> 01:20:26.080]  Вот такая вот фигура у вас будет страшная,
[01:20:26.080 --> 01:20:28.080]  на самом деле, с Унинковского.
[01:20:34.080 --> 01:20:36.080]  Интуитивно это так делается.
[01:20:36.080 --> 01:20:38.080]  Алгоритмически это будет по-другому совсем делаться.
[01:20:38.080 --> 01:20:40.080]  Сейчас объясню, как это делается алгоритмически.
[01:20:42.080 --> 01:20:44.080]  Шаг второй.
[01:20:44.080 --> 01:20:46.080]  Назовем вектором поитом.
[01:20:46.080 --> 01:20:48.080]  Куитом это будет вектор
[01:20:48.080 --> 01:20:50.080]  p0 поиты.
[01:20:50.080 --> 01:20:52.080]  Куиты это будет q0
[01:20:52.080 --> 01:20:54.080]  куиты.
[01:20:54.080 --> 01:20:56.080]  По векторам.
[01:20:56.080 --> 01:20:58.080]  Мы с вами говорили, что
[01:20:58.080 --> 01:21:00.080]  поиты и куиты отсортированы по полярному углу тогда.
[01:21:00.080 --> 01:21:02.080]  Если мы выбрали p0 и q0
[01:21:02.080 --> 01:21:04.080]  таким образом.
[01:21:04.080 --> 01:21:06.080]  Давайте сделаем мерж.
[01:21:06.080 --> 01:21:08.080]  Тогда у меня будут вектора
[01:21:08.080 --> 01:21:10.080]  соответствующие этим сторонам.
[01:21:10.080 --> 01:21:12.080]  Так я закручивал их все против часовой.
[01:21:12.080 --> 01:21:14.080]  У меня вектора будут откладываться как последовательные.
[01:21:14.080 --> 01:21:16.080]  Ой, что я несу?
[01:21:16.080 --> 01:21:18.080]  Что за поиты?
[01:21:18.080 --> 01:21:20.080]  Сейчас.
[01:21:20.080 --> 01:21:22.080]  Ой, это будет p и-1
[01:21:22.080 --> 01:21:24.080]  пои.
[01:21:24.080 --> 01:21:26.080]  Ку-1 пои.
[01:21:26.080 --> 01:21:28.080]  Ку-1 пои.
[01:21:28.080 --> 01:21:30.080]  Ку-1 пои.
[01:21:30.080 --> 01:21:32.080]  Ку-1 пои.
[01:21:32.080 --> 01:21:34.080]  Ку-1 пои.
[01:21:34.080 --> 01:21:36.080]  Ку-1 пои.
[01:21:36.080 --> 01:21:38.080]  Вот.
[01:21:38.080 --> 01:21:40.080]  Вот.
[01:21:40.080 --> 01:21:42.080]  Вот такие вектора они будут тоже отсортированы
[01:21:42.080 --> 01:21:44.080]  по полярному углу на самом-то деле.
[01:21:44.080 --> 01:21:46.080]  Это тоже можно показать, что у вас постоянный угол
[01:21:46.080 --> 01:21:48.080]  только будет расти.
[01:21:48.080 --> 01:21:50.080]  Вот.
[01:21:50.080 --> 01:21:52.080]  Вот так.
[01:21:52.080 --> 01:21:54.080]  p, i, t, q, i, t
[01:21:54.080 --> 01:21:56.080]  отсортированы
[01:21:56.080 --> 01:21:58.080]  по полярному углу.
[01:21:58.080 --> 01:22:00.080]  p, i, t, q, i, t
[01:22:00.080 --> 01:22:02.080]  отсортированы по полярному углу. Отлично.
[01:22:02.080 --> 01:22:04.080]  Значит, мы можем сделать их merge.
[01:22:04.080 --> 01:22:06.080]  И мы получим массив
[01:22:06.080 --> 01:22:08.080]  отсортированный векторов.
[01:22:08.080 --> 01:22:10.080]  И шаг третий.
[01:22:12.080 --> 01:22:14.080]  Получим массив r, давайте.
[01:22:16.080 --> 01:22:18.080]  Шаг третий такой, что
[01:22:18.080 --> 01:22:20.080]  a плюс b
[01:22:22.080 --> 01:22:24.080]  нулевое равно p0
[01:22:24.080 --> 01:22:26.080]  плюс q0.
[01:22:26.080 --> 01:22:28.080]  a плюс b
[01:22:28.080 --> 01:22:30.080]  a плюс b
[01:22:30.080 --> 01:22:32.080]  и t
[01:22:32.080 --> 01:22:34.080]  это будет
[01:22:34.080 --> 01:22:36.080]  p0 плюс q0
[01:22:40.080 --> 01:22:42.080]  от g, от единички до
[01:22:42.080 --> 01:22:44.080]  и r житых.
[01:22:46.080 --> 01:22:48.080]  Вот так вот будет.
[01:22:48.080 --> 01:22:50.080]  Так, у нас мы взяли p0
[01:22:50.080 --> 01:22:52.080]  плюс q0, стартовую точку.
[01:22:52.080 --> 01:22:54.080]  Дальше от нее мы начинаем откладывать вектора
[01:22:54.080 --> 01:22:56.080]  последовательно.
[01:22:56.080 --> 01:22:58.080]  Это крайние. Они будут так вот заворачиваться
[01:22:58.080 --> 01:23:00.080]  со временем. Поэтому
[01:23:00.080 --> 01:23:02.080]  формально они будут определяться вот так вот.
[01:23:02.080 --> 01:23:04.080]  Фактически уберите точку, откладывайте
[01:23:04.080 --> 01:23:06.080]  тетню.
[01:23:06.080 --> 01:23:08.080]  Давайте я здесь нарисую.
[01:23:08.080 --> 01:23:10.080]  Ой, так.
[01:23:20.080 --> 01:23:22.080]  По полярному углу и этот отсортированный
[01:23:22.080 --> 01:23:24.080]  в массивках merge будет равно r.
[01:23:24.080 --> 01:23:26.080]  Вот это вот будет переходить в r.
[01:23:26.080 --> 01:23:28.080]  Извините.
[01:23:28.080 --> 01:23:30.080]  Давайте посмотрим
[01:23:30.080 --> 01:23:32.080]  все вектора сторон.
[01:23:32.080 --> 01:23:34.080]  И отложим их
[01:23:34.080 --> 01:23:36.080]  от одной точки. Будто бы такое будет.
[01:23:36.080 --> 01:23:38.080]  Сейчас флекс.
[01:23:40.080 --> 01:23:42.080]  Отложим их отсюда. Раз.
[01:23:42.080 --> 01:23:44.080]  Два. Три.
[01:23:44.080 --> 01:23:46.080]  Четыре.
[01:23:46.080 --> 01:23:48.080]  Это вот вектора вот этих вот сторон.
[01:23:48.080 --> 01:23:50.080]  Если мы взяли их
[01:23:50.080 --> 01:23:52.080]  против числовой стрелки.
[01:23:52.080 --> 01:23:54.080]  Обычно вот здесь вот построим такие вот вектора.
[01:23:56.080 --> 01:23:58.080]  X2.
[01:23:58.080 --> 01:24:00.080]  Один.
[01:24:00.080 --> 01:24:02.080]  Вот.
[01:24:02.080 --> 01:24:04.080]  Теперь если мы будем вращать
[01:24:04.080 --> 01:24:06.080]  крайние направления
[01:24:06.080 --> 01:24:08.080]  вдоль которого мы строим
[01:24:08.080 --> 01:24:10.080]  крайние точки.
[01:24:10.080 --> 01:24:12.080]  Мы со временем пройдем все вот эти вот вектора.
[01:24:12.080 --> 01:24:14.080]  И мы будем
[01:24:14.080 --> 01:24:16.080]  берем стартовую точку и откладываем от нее вот этот вектор.
[01:24:16.080 --> 01:24:18.080]  От нее этот.
[01:24:18.080 --> 01:24:20.080]  X2.
[01:24:20.080 --> 01:24:22.080]  Вот этот.
[01:24:22.080 --> 01:24:24.080]  Алгоритм именно что такой.
[01:24:24.080 --> 01:24:26.080]  Очень простой алгоритм.
[01:24:26.080 --> 01:24:28.080]  Работает за линию.
[01:24:30.080 --> 01:24:32.080]  За сумму длин.
[01:24:34.080 --> 01:24:36.080]  То есть вот смотрите. Я здесь беру P0 плюс Q0.
[01:24:36.080 --> 01:24:38.080]  Дальше смотрю какой у меня вектор
[01:24:38.080 --> 01:24:40.080]  минимальный в массиве r.
[01:24:40.080 --> 01:24:42.080]  Это вот этот вот. Откладываю его.
[01:24:42.080 --> 01:24:44.080]  Иду в этом направлении.
[01:24:44.080 --> 01:24:46.080]  Дальше. Это следующий этот вектор.
[01:24:46.080 --> 01:24:48.080]  Откладываю его.
[01:24:48.080 --> 01:24:50.080]  Этот вектор.
[01:24:50.080 --> 01:24:52.080]  Откладываю его.
[01:24:52.080 --> 01:24:54.080]  Этот вектор. X2.
[01:24:54.080 --> 01:24:56.080]  Откладываю X2.
[01:24:56.080 --> 01:24:58.080]  Кто?
[01:25:00.080 --> 01:25:02.080]  У нас они отсортированы в популярном углу
[01:25:02.080 --> 01:25:04.080]  изначально. Вы сделали мерж.
[01:25:08.080 --> 01:25:10.080]  Но у вас вот эти вот вектора
[01:25:10.080 --> 01:25:12.080]  они отсортированы в популярном углу.
[01:25:12.080 --> 01:25:14.080]  Поэтому вы сделали массив r в виде мержа.
[01:25:14.080 --> 01:25:16.080]  Массива поитых и куитых.
[01:25:18.080 --> 01:25:20.080]  Вроде бы и не нужно.
[01:25:20.080 --> 01:25:22.080]  Вам достаточно сравнивать
[01:25:22.080 --> 01:25:24.080]  синусы двух углов.
[01:25:24.080 --> 01:25:26.080]  Потому что вы выбрали специально
[01:25:26.080 --> 01:25:28.080]  самую нижнюю точку.
[01:25:28.080 --> 01:25:30.080]  Чтобы у вас были только синусы.
[01:25:30.080 --> 01:25:32.080]  Синусы явно не считают.
[01:25:32.080 --> 01:25:34.080]  Но чтобы сравнить что один угол больше
[01:25:34.080 --> 01:25:36.080]  другого, вы можете синусы это явно не считать.
[01:25:38.080 --> 01:25:40.080]  Ой, косинус наоборот.
[01:25:40.080 --> 01:25:42.080]  Косинусы явно вы можете их не считать.
[01:25:42.080 --> 01:25:44.080]  Нет, достаточно.
[01:25:44.080 --> 01:25:46.080]  Вы живете в верхнем полуплоскости.
[01:25:46.080 --> 01:25:48.080]  Потому что вы выбрали самую нижнюю точку.
[01:25:48.080 --> 01:25:50.080]  А, но здесь вектора.
[01:25:50.080 --> 01:25:52.080]  Ну а здесь все вектора.
[01:25:52.080 --> 01:25:54.080]  Ну да, придется косинусы и синусы посчитать.
[01:25:54.080 --> 01:25:56.080]  Как обидно.
[01:25:58.080 --> 01:26:00.080]  Ну естественно, вы можете даблы не сравнивать.
[01:26:00.080 --> 01:26:02.080]  Вы можете сравнивать
[01:26:02.080 --> 01:26:04.080]  на синусах и на косинусах.
[01:26:04.080 --> 01:26:06.080]  Просто не считать их напрямую.
[01:26:06.080 --> 01:26:08.080]  Корректность алгоритма
[01:26:08.080 --> 01:26:10.080]  исходит из следующего утверждения.
[01:26:10.080 --> 01:26:12.080]  Что если у вас была
[01:26:12.080 --> 01:26:14.080]  какая-то такая
[01:26:14.080 --> 01:26:16.080]  ситуация.
[01:26:16.080 --> 01:26:18.080]  Давайте здесь по
[01:26:18.080 --> 01:26:20.080]  положению нарисую.
[01:26:22.080 --> 01:26:24.080]  Это P,
[01:26:24.080 --> 01:26:26.080]  это Q,
[01:26:26.080 --> 01:26:28.080]  это R.
[01:26:28.080 --> 01:26:30.080]  Здесь будет S1 и здесь будет S2.
[01:26:30.080 --> 01:26:32.080]  Вы рассматриваете P плюс Q точку.
[01:26:34.080 --> 01:26:36.080]  И вот будто бы у вас
[01:26:36.080 --> 01:26:38.080]  сумминговская вот так вот идет.
[01:26:38.080 --> 01:26:40.080]  Но вопрос, почему она не может идти сюда
[01:26:40.080 --> 01:26:42.080]  острее заворачивать.
[01:26:42.080 --> 01:26:44.080]  То есть быть более такой пологой.
[01:26:46.080 --> 01:26:48.080]  Ну не важно особо.
[01:26:48.080 --> 01:26:50.080]  Почему она не может быть вот такой вот какой-то.
[01:26:50.080 --> 01:26:52.080]  Доказывается тем,
[01:26:52.080 --> 01:26:54.080]  что вы берете.
[01:26:54.080 --> 01:26:56.080]  То есть предположим, что если это возможно,
[01:26:56.080 --> 01:26:58.080]  то это точка S1 плюс S2.
[01:26:58.080 --> 01:27:00.080]  Дальше вот этот вектор V
[01:27:00.080 --> 01:27:02.080]  это
[01:27:02.080 --> 01:27:04.080]  S1 плюс S2
[01:27:04.080 --> 01:27:06.080]  минус P плюс Q.
[01:27:08.080 --> 01:27:10.080]  Я ставлю только набросы доказательства, к сожалению.
[01:27:10.080 --> 01:27:12.080]  Не могу.
[01:27:12.080 --> 01:27:14.080]  Вот.
[01:27:14.080 --> 01:27:16.080]  Это вот такие вот вектора интересные.
[01:27:16.080 --> 01:27:18.080]  То есть это
[01:27:18.080 --> 01:27:20.080]  вектор PS1 на самом деле
[01:27:20.080 --> 01:27:22.080]  плюс QS2.
[01:27:22.080 --> 01:27:24.080]  Я знаю, что у этого чувака
[01:27:26.080 --> 01:27:28.080]  это я брал
[01:27:28.080 --> 01:27:30.080]  сейчас, это будет P плюс R
[01:27:30.080 --> 01:27:32.080]  вектор.
[01:27:32.080 --> 01:27:34.080]  Я знаю, что у этой точки
[01:27:34.080 --> 01:27:36.080]  это вектор U.
[01:27:36.080 --> 01:27:38.080]  Я знаю, что у этого
[01:27:38.080 --> 01:27:40.080]  что PS1
[01:27:40.080 --> 01:27:42.080]  идет
[01:27:42.080 --> 01:27:44.080]  против часовой
[01:27:44.080 --> 01:27:46.080]  стрелки здесь.
[01:27:46.080 --> 01:27:48.080]  Если я здесь рассмотрю вектор U,
[01:27:48.080 --> 01:27:50.080]  то QS2 тоже будет идти против часовой стрелки.
[01:27:50.080 --> 01:27:52.080]  Тогда как здесь B,
[01:27:52.080 --> 01:27:54.080]  как их сумма
[01:27:54.080 --> 01:27:56.080]  вот этих вот двух чуваков
[01:27:56.080 --> 01:27:58.080]  идет наоборот против.
[01:27:58.080 --> 01:28:00.080]  Ну идет по часовой кратчайший
[01:28:00.080 --> 01:28:02.080]  поворот.
[01:28:02.080 --> 01:28:04.080]  Но вы можете доказать вот такой вот
[01:28:04.080 --> 01:28:06.080]  интересный факт,
[01:28:06.080 --> 01:28:08.080]  A плюс BC
[01:28:08.080 --> 01:28:10.080]  AC плюс
[01:28:10.080 --> 01:28:12.080]  BC.
[01:28:12.080 --> 01:28:14.080]  У вас эта штука больше 0,
[01:28:14.080 --> 01:28:16.080]  эта штука больше 0,
[01:28:16.080 --> 01:28:18.080]  эта штука меньше 0.
[01:28:18.080 --> 01:28:20.080]  Все, невозможно.
[01:28:20.080 --> 01:28:22.080]  Да, поэтому
[01:28:22.080 --> 01:28:24.080]  нельзя построить ничего,
[01:28:24.080 --> 01:28:26.080]  что выходит за такой вот угол.
[01:28:26.080 --> 01:28:28.080]  Все.
[01:28:28.080 --> 01:28:30.080]  Ну схема такая, из этого утекает корректность алгоритма.
