[00:00.000 --> 00:07.000]  Ну, давайте сюда поехали. Да, мы сегодня продолжим.
[00:07.000 --> 00:12.000]  Ну, как говорится, там многое в геометрии, конечно, заветного на выпущенности, куда подождеваться.
[00:12.000 --> 00:14.000]  Мы, кстати, определяли строгую выпущенность?
[00:14.000 --> 00:16.000]  Строгую выпущенность?
[00:16.000 --> 00:20.000]  Ну, мы понятия выпущенности функции у нас не было.
[00:20.000 --> 00:22.000]  Скажем так.
[00:22.000 --> 00:24.000]  Ну, а так шуткость?
[00:24.000 --> 00:26.000]  А так шуткость строгая выпущенность.
[00:26.000 --> 00:28.000]  Ну, а так шуткость строгая выпущенность.
[00:28.000 --> 00:30.000]  Ну, например?
[00:30.000 --> 00:37.000]  Ну, интуитивно кажется, что, типа, граница не должна собирать какие-то непрерывные отрезки континуальные.
[00:37.000 --> 00:40.000]  Такого у нас не было и не ценивается особо.
[00:40.000 --> 00:43.000]  Нет, ну это особо и не с чем.
[00:43.000 --> 00:47.000]  Да, ну в прошлый раз мы уже искали какие-то выпуклые оболочки.
[00:47.000 --> 00:52.000]  Ну, что с ними в принципе можно делать?
[00:52.000 --> 00:54.000]  Что с ними можно делать?
[00:54.000 --> 00:56.000]  Ну, конечно же, решать.
[00:56.000 --> 00:57.000]  Ну ладно, в этом порядке, пойдем.
[00:57.000 --> 01:00.000]  Решать задачи по динамическому программированию, конечно.
[01:00.000 --> 01:03.000]  Так, ну тут будьте внимательны, да.
[01:03.000 --> 01:06.000]  Потому что, да, ConvexL3 вещь известная.
[01:06.000 --> 01:10.000]  Но будьте внимательны, потому что то, что я сейчас расскажу, возможно вызовет у вас некоторый отрыв,
[01:10.000 --> 01:16.000]  потому что привычный вам ConvexL3 какой-то, якобы не имеет никакого отношения.
[01:16.000 --> 01:24.000]  Но тем не менее будьте внимательны, потому что есть шанс, что то, что я скажу, иногда пишется сильно проще, чем к чему привыкли вы.
[01:24.000 --> 01:26.000]  Вот, а иногда нет.
[01:26.000 --> 01:29.000]  Так что смотрите, какую-то задачу мы будем решать.
[01:29.000 --> 01:32.000]  Ну, задачи мы даже письмировать особо не будем.
[01:32.000 --> 01:39.000]  Просто как сейчас на нашем жизни включить, встречаются ситуации, когда задачу можно решить примерно следующим годом.
[01:44.000 --> 01:46.000]  Каждая задача в доначке.
[01:49.000 --> 01:51.000]  Ну, вот что-нибудь типа там.
[01:54.000 --> 01:56.000]  Ну, да.
[02:12.000 --> 02:15.000]  Вот какая-нибудь динамика подобного рода.
[02:15.000 --> 02:17.000]  Ну и приблизительно подобного.
[02:17.000 --> 02:21.000]  На самом деле, конечно, тут не обязательно может быть DP или там CR.
[02:21.000 --> 02:26.000]  То есть это просто что-то зависит от G и в том числе и от DP от G.
[02:26.000 --> 02:31.000]  Ну, в том плане, что там какие-то такие вещи, которые мы заранее не узнаем.
[02:31.000 --> 02:38.000]  То есть может быть DP от G плюс 2, может быть какая-нибудь там DP от G в квадрате или что-нибудь еще в этом.
[02:38.000 --> 02:42.000]  Вот такая вот задача.
[02:42.000 --> 02:45.000]  Ну минимум, естественно, по...
[02:45.000 --> 02:47.000]  Сейчас уточним.
[02:47.000 --> 02:49.000]  Ну, там какой-то ноль меньше, либо равнуже меньше.
[02:49.000 --> 02:51.000]  И ну и чему-нибудь там.
[02:51.000 --> 02:54.000]  DP нулевое, нулевое равно чему-то.
[03:00.000 --> 03:05.000]  Ну да, часто встречаются у задачи, в которых вот такой код бы зашел.
[03:05.000 --> 03:06.000]  Только маленькая проблема.
[03:06.000 --> 03:08.000]  В квадрат все-таки многовато.
[03:08.000 --> 03:10.000]  Хочется пах быстрее.
[03:10.000 --> 03:12.000]  Что же делать?
[03:12.000 --> 03:15.000]  Вот нас выручает код RSTAL 3.
[03:15.000 --> 03:17.000]  Ну, в каком смысле выручает?
[03:17.000 --> 03:19.000]  Ну, на самом деле тут нужно быть внимательными,
[03:19.000 --> 03:24.000]  потому что таким образом у нас выручает есть два принципиально разных смысла.
[03:24.000 --> 03:26.000]  Впрочем, начинаются они одинаково.
[03:26.000 --> 03:29.000]  Начнем, конечно, мы с того, что DIT можно вывести.
[03:29.000 --> 03:32.000]  Это не очень интересно.
[03:32.000 --> 03:39.000]  А вот DPG2, ну, а вот совсем остальным немножко становится немножко интереснее.
[03:39.000 --> 03:41.000]  Да, то есть тут важный момент, конечно.
[03:41.000 --> 03:49.000]  Видите, что AITBIT, то есть они прификсированы и константы, то есть заданы.
[03:49.000 --> 03:53.000]  А вот DPG2 и CG2 мы перебираем.
[03:55.000 --> 03:58.000]  Вот как же сделать эту штуку побыстрее?
[03:59.000 --> 04:04.000]  Ну, надо просто заметить, что то, что находится в скобочках, очень похоже на что?
[04:04.000 --> 04:06.000]  На какое-нибудь произведение?
[04:06.000 --> 04:08.000]  Ну да.
[04:08.000 --> 04:11.000]  В таком виде даже больше на скалярное.
[04:11.000 --> 04:14.000]  Ну, можно, в принципе, вектора вывести, конечно,
[04:14.000 --> 04:18.000]  но на самом деле, конечно, больше похоже на скалярное.
[04:18.000 --> 04:21.000]  То есть это на самом деле скалярное произведение.
[04:21.000 --> 04:23.000]  То есть давайте так напишем.
[04:23.000 --> 04:26.000]  Скалярное произведение вектора.
[04:26.000 --> 04:36.000]  Допустим, AITBIT на соответственно вектор DPG2 и CG2.
[04:42.000 --> 04:44.000]  Вот так давайте будем.
[04:46.000 --> 04:50.000]  На соответственно DPG2 и CG2.
[04:50.000 --> 04:54.000]  Вот такая вот красота.
[04:56.000 --> 04:58.000]  Спрашивается.
[05:01.000 --> 05:03.000]  Вот спрашивается.
[05:03.000 --> 05:08.000]  То есть тогда с точки зрения этой интерпретации нам нужно реализовать следующее.
[05:08.000 --> 05:11.000]  Нам нужно взять черный ящик.
[05:11.000 --> 05:16.000]  То есть какой-то красный черный ящик,
[05:16.000 --> 05:19.000]  красный-красный черный ящик,
[05:19.000 --> 05:22.000]  в котором хранят земли-то вектора.
[05:22.000 --> 05:24.000]  Они же точки.
[05:25.000 --> 05:29.000]  Красно-синее, а во-вторых, соответственно, не то.
[05:29.000 --> 05:34.000]  И у этого черного ящика должны быть две функции.
[05:34.000 --> 05:39.000]  Во-первых, add ADEXIG, то есть добавь новый вектор.
[05:41.000 --> 05:43.000]  Ну, добавь в смысле...
[05:43.000 --> 05:45.000]  Ну ладно, формально надоится, конечно.
[05:52.000 --> 05:54.000]  Есть же классический прикол, как кто-то там...
[05:57.000 --> 05:59.000]  Суп с раками, да?
[06:00.000 --> 06:02.000]  Как перевести на английский?
[06:03.000 --> 06:07.000]  Вот кто-то вот на таком автомате привел soup with cancer.
[06:08.000 --> 06:10.000]  Формально вроде так.
[06:10.000 --> 06:12.000]  Только маленькие проблемы.
[06:12.000 --> 06:16.000]  Суп по-английски это мыло, а cancer это рак, который полезен.
[06:18.000 --> 06:19.000]  Вот.
[06:19.000 --> 06:22.000]  Поэтому тут вот между ADEXIG там все-таки разница есть.
[06:22.000 --> 06:24.000]  Ну, в питоне это верно, да.
[06:24.000 --> 06:25.000]  Ну...
[06:27.000 --> 06:28.000]  Ну, странно.
[06:28.000 --> 06:30.000]  Но тем не менее.
[06:30.000 --> 06:31.000]  Так вот.
[06:31.000 --> 06:32.000]  Ну ладно.
[06:32.000 --> 06:34.000]  Впрочем, могу быть неуправно.
[06:34.000 --> 06:35.000]  А еще insert?
[06:36.000 --> 06:37.000]  Все-таки insert.
[06:38.000 --> 06:39.000]  И...
[06:39.000 --> 06:41.000]  Теперь еще маленькая фишка.
[06:44.000 --> 06:47.000]  И такую операцию, которую мы назовем find me.
[06:50.000 --> 06:52.000]  А вот тут уже гораздо интересней.
[06:52.000 --> 06:53.000]  Давайте я...
[06:53.000 --> 06:55.000]  Для понятности я тут даже напишу ab.
[06:59.000 --> 07:00.000]  То есть это вот...
[07:00.000 --> 07:02.000]  То есть требуется найти...
[07:02.000 --> 07:05.000]  То есть минимум скалянного произведения ab.
[07:06.000 --> 07:09.000]  Соответственно, всеми x-ыгроками.
[07:11.000 --> 07:15.000]  Идеи x-ыгроки лежат в черном ящике.
[07:19.000 --> 07:20.000]  Вот.
[07:24.000 --> 07:25.000]  То есть вот такая.
[07:25.000 --> 07:31.000]  То есть если мы реализуем черный ящик, который умеет это делать в какую-нибудь удобоваемую асинтутику,
[07:31.000 --> 07:35.000]  то, соответственно, вот и эту динамику мы реализуем быстрее.
[07:35.000 --> 07:37.000]  Ну, если бы обе эти операции будут работать...
[07:37.000 --> 07:39.000]  Вот у нас будет мечта сегодня логарифом.
[07:40.000 --> 07:41.000]  Там за логарифом.
[07:41.000 --> 07:45.000]  То и, соответственно, вот эту dp-шку мы спокойно насчитаем за n-лог.
[07:45.000 --> 07:46.000]  Это классно?
[07:47.000 --> 07:48.000]  Тут видно?
[07:50.000 --> 07:51.000]  Хорошо.
[07:51.000 --> 07:52.000]  Вот.
[07:53.000 --> 07:57.000]  Осталось только придумать, как же этот черный ящик реализоваться.
[08:01.000 --> 08:02.000]  Как же его реализовать?
[08:05.000 --> 08:06.000]  Ну, давайте думать.
[08:07.000 --> 08:09.000]  Итак, давайте себе это вообразить.
[08:10.000 --> 08:12.000]  Значит, где-то у нас вот начало координат.
[08:12.000 --> 08:14.000]  Вот это вот 0, 0.
[08:17.000 --> 08:20.000]  Нет, даже не здесь, а где-нибудь, давайте, здесь оно будет.
[08:22.000 --> 08:25.000]  И вот тут мы в черном ящике подобавляем эти точки.
[08:27.000 --> 08:29.000]  Вторая доска будем делать.
[08:31.000 --> 08:32.000]  Как и бедро.
[08:34.000 --> 08:35.000]  Что хочется...
[08:36.000 --> 08:38.000]  Да, ну, точечки можно добавлять.
[08:39.000 --> 08:40.000]  И теперь прозекает вопрос.
[08:40.000 --> 08:41.000]  Пришел нам вектор AB.
[08:42.000 --> 08:45.000]  Ну, допустим, какой-нибудь вот такой.
[08:49.000 --> 08:54.000]  Хочется найти у него минимальное скалярное произведение с каким-то вот таким вектором.
[08:55.000 --> 09:01.000]  Теперь давайте подумаем, а что такое скалярное произведение вот этого синего вектора на вот этот красный вектор?
[09:02.000 --> 09:03.000]  Что это такое?
[09:03.000 --> 09:04.000]  Проекция умножить...
[09:05.000 --> 09:07.000]  Да, совершенно верно, совершенно верно.
[09:10.000 --> 09:16.000]  То есть на самом деле скалярное произведение это длина, собственно, синего вектора AB
[09:17.000 --> 09:24.000]  на внимание ориентированную, на ориентированную длину красной проекции.
[09:25.000 --> 09:26.000]  Почему ориентированную?
[09:26.000 --> 09:30.000]  Ну, потому что, обратите внимание, мы проецируем вот на такую вот прямую.
[09:32.000 --> 09:40.000]  Мы вот так ориентируем, но в этом случае, конечно, длину проекции нужно будет посчитать со знаком.
[09:41.000 --> 09:48.000]  Вот, то заметим, что длина AB у нас положительная константа, поэтому получается, что надо найти какую-то точку,
[09:49.000 --> 09:54.000]  то есть надо найти какую-то точку, у которой проекция вверх и вверх.
[10:02.000 --> 10:05.000]  Ну, на самом деле подсказку нам дает название этой оптимизации.
[10:06.000 --> 10:12.000]  Да, как следует из названия, точка находится на выпукловой оболочке.
[10:14.000 --> 10:15.000]  Казахской, почему?
[10:18.000 --> 10:24.000]  Ну, в данном случае, конечно, в данном случае как-то видно, но с другой стороны, может быть, это картинка.
[10:24.000 --> 10:25.000]  Картинка.
[10:32.000 --> 10:34.000]  Ну, на самом деле доказательство, конечно, очень простое.
[10:39.000 --> 10:43.000]  Давайте рассмотрим какую-нибудь абсолютно произвольную точку.
[10:45.000 --> 10:50.000]  Докажем, что существует какую-то точку и рассмотрим ее проекцию на нашу ориентированную прямую AB.
[10:50.000 --> 10:55.000]  Докажем, что существует точка на выпукловую оболочку, в которой проекция не хуже.
[10:56.000 --> 10:57.000]  Как это надо говорить?
[10:58.000 --> 11:05.000]  Давайте от этой произвольной точки мы просто будем идти вдоль ориентированной прямой, ну, по направлению к уменьшению проекции.
[11:06.000 --> 11:07.000]  Идем, идем, идем, идем.
[11:08.000 --> 11:09.000]  Упираемся в выпукловую оболочку.
[11:10.000 --> 11:11.000]  А теперь мы упирались в какое-то ребро.
[11:12.000 --> 11:15.000]  Теперь давайте идти вдоль этого ребра таким образом, чтобы проекция не уменьшалась.
[11:16.000 --> 11:18.000]  А ведь в одну из сторон так точно можно.
[11:18.000 --> 11:19.000]  Ну да.
[11:20.000 --> 11:23.000]  Идем, идем, идем, доходим до вершины.
[11:24.000 --> 11:25.000]  Поздравляем.
[11:26.000 --> 11:30.000]  Мы все время уменьшали проекцию, но не увеличивали, и попали в вершину выпукловой оболочки.
[11:31.000 --> 11:32.000]  Доказательство ориентированное.
[11:33.000 --> 11:34.000]  Такое абсолютно стандартное соображение.
[11:35.000 --> 11:36.000]  Вот.
[11:37.000 --> 11:45.000]  То есть таким образом нам нужно на самом деле поддерживать, то есть очень хотелось бы поддерживать выпукловую оболочку.
[11:45.000 --> 11:49.000]  То есть на самом деле все точные, которые уже лежат в кругу выпукловой оболочки, они нас уже не интересуют.
[11:50.000 --> 11:52.000]  Этим вниманием мы почти не удаляем.
[11:53.000 --> 11:58.000]  Мы их только добавляем, но ни в коем случае не удаляем.
[12:01.000 --> 12:02.000]  Вот.
[12:03.000 --> 12:04.000]  Значит как же поддерживать выпукловую оболочку?
[12:05.000 --> 12:10.000]  Ну еще когда, видимо нам еще нужно аккуратно рассмотреть крайний случай, когда выпукловая оболочка точкой отрезает.
[12:11.000 --> 12:13.000]  Ну в плане нужно как минимум учитывать.
[12:13.000 --> 12:21.000]  Нет, ну возможно придется, но тут надо всегда очень внимательно посмотреть, что происходит.
[12:22.000 --> 12:23.000]  Вот.
[12:24.000 --> 12:25.000]  Что здесь происходит?
[12:26.000 --> 12:28.000]  Потому что на самом деле тут многое может зависеть.
[12:29.000 --> 12:35.000]  То есть туда нужно всегда смотреть на ограничения и сами эти векторы AB, потому что сами векторы, сами точки.
[12:36.000 --> 12:46.000]  Потому что в зависимости от того, в каком порядке эти точки добавляются, на самом деле сложность реализации может кратно увеличиваться или наоборот уменьшаться.
[12:47.000 --> 12:54.000]  Ну, например, давайте добавим какое-нибудь там предположение.
[12:55.000 --> 12:57.000]  То есть какое-нибудь предположение.
[12:58.000 --> 13:01.000]  Например, вот у нас будет предположение, что у нас B всегда больше 0.
[13:01.000 --> 13:02.000]  Ну, на самом деле.
[13:03.000 --> 13:04.000]  Что это означает?
[13:05.000 --> 13:07.000]  Ну означает это маленькое упрятывание, смотрите.
[13:08.000 --> 13:17.000]  Выплавную уголь, значит смотрите, выплавную уголь, вот эту выплавную оболочку, можно разбить на нижнюю выплавную оболочку и верхнюю выплавную оболочку.
[13:18.000 --> 13:19.000]  Каким образом?
[13:20.000 --> 13:23.000]  Просто приведем две вертикальные касательные.
[13:24.000 --> 13:25.000]  Понятно?
[13:25.000 --> 13:33.000]  Проведем две вертикальные касательные и ванноты, и соответственно то, что снизу это нижняя часть, тут оболочка, то что выше, понимаете, да?
[13:34.000 --> 13:35.000]  Вот.
[13:37.000 --> 13:48.000]  Так вот, зависит от того, что если B больше 0, то есть это вот синий вектор смотрит вверх, то легко видеть, что на самом деле, что на самом деле это не так.
[13:48.000 --> 14:01.000]  Если это вот синий вектор смотрит вверх, то легко видеть, что на самом деле, что на самом деле нас не интересует вся выплавная оболочка, а поддерживать на самом деле нужно только нижнюю выплавную оболочку.
[14:02.000 --> 14:03.000]  Все разны?
[14:06.000 --> 14:08.000]  Если B больше 0.
[14:09.000 --> 14:10.000]  Если B больше 0.
[14:11.000 --> 14:12.000]  Все равно так смотрит.
[14:14.000 --> 14:15.000]  Да.
[14:18.000 --> 14:19.000]  Да, вроде правда.
[14:20.000 --> 14:43.000]  На самом деле предположение не сильно нарушает общность, потому что обычно вот это предположение верно, но если случайно оказалось, что B бывает рандомным, и вы там X с игроками местами поменять не можете, а вы, кстати, видите, такая формула подразумевает, что вы можете X с игроками местами как-то менять.
[14:44.000 --> 14:53.000]  То на самом деле вы просто делаете одно и то же, просто храните в нижней выплавной оболочке, в верхней выплавной оболочке храните одно и то же.
[14:54.000 --> 14:57.000]  Ну там буквально будет один год, только видимо обойдется два черных ящика.
[14:59.000 --> 15:00.000]  Но это как бы не особо нормально.
[15:01.000 --> 15:08.000]  Итак, давайте без ограничения общности особого считаем, что нам нужно хранить только нижнюю выплавную оболочку.
[15:14.000 --> 15:18.000]  Так, ну давайте сначала воврем кое-что в общем.
[15:19.000 --> 15:23.000]  Так, нет, сначала давайте я эту выплавную оболочку чуть-чуть нарисую поподробнее.
[15:37.000 --> 15:38.000]  Вот так вот.
[15:39.000 --> 15:40.000]  Ну допустим так.
[15:43.000 --> 15:45.000]  И теперь давайте немножко разберемся.
[15:46.000 --> 15:48.000]  Вот допустим нам дан вот такой ветер.
[15:49.000 --> 15:50.000]  Какой-нибудь вот такой.
[15:53.000 --> 15:57.000]  Спрашивается, где же у него тут самая левая относительно него проекция?
[16:03.000 --> 16:05.000]  Где у него самая левая проекция?
[16:08.000 --> 16:10.000]  Ну типа вон там внизу.
[16:11.000 --> 16:14.000]  Ну понятно, что где-то там внизу, осталось только выяснить в виде.
[16:21.000 --> 16:22.000]  Что искать?
[16:23.000 --> 16:29.000]  У нас сначала, ну короче, если неформально, то сначала они идут вниз, а потом вверх.
[16:30.000 --> 16:31.000]  И вот слева-справа.
[16:33.000 --> 16:34.000]  Ну не совсем.
[16:35.000 --> 16:37.000]  Ну как бы да, если я тут просто проведу вот этот вот и найду.
[16:37.000 --> 16:41.000]  Ну слева-справа, короче, сверху или снизу?
[16:42.000 --> 16:44.000]  Направляющий вектор выплавной оболочки.
[16:46.000 --> 16:47.000]  Сверху, снизу что?
[16:48.000 --> 16:51.000]  Короче, знак скалярного произведения.
[16:53.000 --> 16:54.000]  Скалярная?
[16:56.000 --> 16:57.000]  Скалярная это такое, Cross или Dot?
[16:58.000 --> 16:59.000]  А, ну в принципе скалярная, да.
[17:00.000 --> 17:01.000]  Ну на самом деле я бы сказал так.
[17:01.000 --> 17:07.000]  Смотрите, повернем этот вектор до 90 градусов и приведем к этой нижней выплавной оболочке вот такую укасательную.
[17:08.000 --> 17:09.000]  Ну вот.
[17:10.000 --> 17:14.000]  То есть на самом деле вот к какой точке приведем эту нижнюю укасательную, там очевидно не отвертится.
[17:15.000 --> 17:16.000]  Логично, да?
[17:17.000 --> 17:19.000]  То есть получается, что вот можно.
[17:20.000 --> 17:24.000]  То есть действительно видим, что если рассмотреть вот эти вот вектора.
[17:25.000 --> 17:26.000]  Так.
[17:31.000 --> 17:32.000]  И вот.
[17:37.000 --> 17:41.000]  То есть оказывается действительно, что пока оно, что..
[17:42.000 --> 17:50.000]  В некоторое время вектор идет в минус по проекции, тут проекция уменьшается, уменьшается, уменьшается, louder..
[17:51.000 --> 17:55.000]  Но в точке касания происходит периодик, теперь проекция увеличивается, увеличивается, увеличивается.
[17:56.000 --> 17:57.000]  Вот.
[17:58.000 --> 18:00.000]  То есть в принципе можно действительно..
[18:01.000 --> 18:08.000]  если бы вот эта вот клубка-оболочка хранилась в векторе, то мы бы действительно вот эту точку касания,
[18:08.000 --> 18:12.000]  если это нашли, мы бы просто банально бинарным поискали.
[18:12.000 --> 18:15.000]  Ну, если бы она в сете хранилась, то тоже.
[18:15.000 --> 18:21.000]  Ну, в сете аккуратнее надо, потому что в сете это называется...
[18:21.000 --> 18:25.000]  Ну, если в сете хранить вот эту последовательность векторов, то да.
[18:25.000 --> 18:28.000]  Ну, надо аккуратно стомпоратором.
[18:28.000 --> 18:36.000]  Ну, тогда в сете придется хранить вот эти векторы и тогда сравнивать их по алекторному предприятию.
[18:36.000 --> 18:39.000]  Чтобы они хранились ровно в этом порядке.
[18:39.000 --> 18:42.000]  Так, понятно, о чем мы сейчас говорим?
[18:42.000 --> 18:45.000]  Да нет, наверное, все хорошо.
[18:45.000 --> 18:47.000]  Ну, правда тут...
[18:47.000 --> 18:51.000]  Ну, тут вообще как-то к векторе сетели что?
[18:51.000 --> 18:58.000]  Если бы хранили в массиве векторе, то, пожалуйста, бин поиск пишет он хранял.
[18:58.000 --> 19:03.000]  Но маленькая проблема, у нас точки еще воболочка добавляются.
[19:03.000 --> 19:08.000]  И вот тут нужно быть внимательнее.
[19:08.000 --> 19:15.000]  Потому что на самом деле тут как бы есть тоже разные уровни предположения, в разных задачах реализуются.
[19:15.000 --> 19:19.000]  То есть может быть такое прекрасное предположение.
[19:19.000 --> 19:26.000]  То есть в инсокте, допустим, х строго возрастает.
[19:26.000 --> 19:31.000]  То есть каждая следующая точка правее передучит.
[19:31.000 --> 19:33.000]  Что тогда?
[19:33.000 --> 19:39.000]  Ну, тогда если у нас там вот воболочка была такая, и мы добавили точку, то, значит, тогда получается надо...
[19:39.000 --> 19:43.000]  Ну, по сути, что я буду повторять, алгоритм, наверное, да?
[19:44.000 --> 19:50.000]  То есть мы пытаемся кушбакить точку, но перед этим удаляем все, что нарушает выпуск в нужную нам сторону.
[19:50.000 --> 19:52.000]  Что это выпускает?
[19:52.000 --> 19:58.000]  Что у нас в точке добавляются черные ящики, что там в порядке только возрастает.
[19:58.000 --> 20:00.000]  Ага, то есть в стандартных конвертах.
[20:00.000 --> 20:06.000]  Да, ну получается, простите, стандартный конверт стал методом Эндрю из любых точек.
[20:06.000 --> 20:10.000]  То есть тогда это вы делаете в том же векторе, в том же векторе делаете бин поиск.
[20:10.000 --> 20:15.000]  Бин поиск, это вот идеальный случай, но в 90% случаев он и реализуется.
[20:15.000 --> 20:18.000]  Вот поэтому, прежде чем...
[20:18.000 --> 20:20.000]  Будьте внимательны.
[20:20.000 --> 20:26.000]  Ну, например, конечно, вот с такой интерпретацией будет происходить, что ДП будет вот строго возрастать.
[20:26.000 --> 20:28.000]  Это, конечно, может быть не так.
[20:28.000 --> 20:30.000]  Ну, это строго, наверное.
[20:30.000 --> 20:32.000]  Да, нет, может быть и не так.
[20:32.000 --> 20:39.000]  Но с другой стороны, там фишка такая, что с другой стороны, вы тут можете координаты поменять местами, потому что, может быть, С возрастает.
[20:39.000 --> 20:41.000]  То есть там по ситуации.
[20:41.000 --> 20:44.000]  По многих задачах, на самом деле, этого хватает.
[20:45.000 --> 20:48.000]  Но вам, конечно, может не повезти.
[20:50.000 --> 20:53.000]  В чем-то наметим, что это...
[20:53.000 --> 20:57.000]  Учитывая, что мы помним, как у нас реализован ДП или ДЭК, то у нас...
[20:57.000 --> 20:59.000]  Ну, или просто...
[20:59.000 --> 21:08.000]  То есть можно реализовывать, например, ДЭК, и можно заметить, что на самом деле нас бы устраивало, чтобы каждая новая точка, она либо правее всех предыдущих,
[21:08.000 --> 21:12.000]  либо левее всех предыдущих, потому что мы по две слева делаем то же самое.
[21:13.000 --> 21:14.000]  Вот.
[21:15.000 --> 21:16.000]  Ну, а теперь давайте подумаем.
[21:16.000 --> 21:19.000]  А что делать, если такого нет?
[21:20.000 --> 21:22.000]  Так, давайте уберу красатель.
[21:22.000 --> 21:23.000]  Сейчас уберу красатель.
[21:23.000 --> 21:25.000]  Вот про красатель, наверное, все поняли.
[21:28.000 --> 21:31.000]  Вот предположим, что этого предположения нет.
[21:32.000 --> 21:35.000]  То есть точка добавляется абсолютно рандомно.
[21:36.000 --> 21:41.000]  Тогда, ну, понятно, если она добавилась справа или слева, то делаем буквально то же самое.
[21:41.000 --> 21:49.000]  Но если она добавилась где-нибудь посередине, то первое, что нужно сделать, это понять, а вообще, имеет ли она отношение к нижней выводовой оболочке.
[21:51.000 --> 21:53.000]  Как это понять?
[21:57.000 --> 21:58.000]  Ну, понять, как очень просто.
[21:58.000 --> 22:05.000]  Надо просто по иксу, например, найти бинпольском, между какими иксами оно попадает, и просто понять, эта точка выше этого отрезка или ниже.
[22:09.000 --> 22:12.000]  Вот. То есть если она оказалась выше, то добавлять оболочку не надо.
[22:13.000 --> 22:18.000]  Но если она случайно оказалась ниже, то тогда у нас проблема.
[22:19.000 --> 22:22.000]  Потому что вам придется эту точку вставить.
[22:23.000 --> 22:24.000]  Ой.
[22:25.000 --> 22:29.000]  Еще и поудалять всякие выводы.
[22:30.000 --> 22:31.000]  Амортизация полностью.
[22:34.000 --> 22:35.000]  Если бы это была главная проблема.
[22:36.000 --> 22:37.000]  Нужно обидать с ними.
[22:38.000 --> 22:43.000]  Вот. То есть придется вот это вот удалять, удалять, удалять, удалять и вот добавлять оболочку.
[22:47.000 --> 22:49.000]  Ну что, возникает теперь естественный вопрос.
[22:51.000 --> 22:53.000]  А где же эти точки вообще хранятся?
[22:54.000 --> 22:55.000]  В списке.
[22:58.000 --> 23:00.000]  Ну, в такой постановке.
[23:01.000 --> 23:03.000]  Да. То есть как-то вектор уже так не похоронишь.
[23:04.000 --> 23:05.000]  В списке тоже.
[23:06.000 --> 23:08.000]  Не, ну в ДД это точно пойдет, а можно и в сети.
[23:09.000 --> 23:11.000]  Так, погодите, погодите, погодите.
[23:12.000 --> 23:13.000]  Потому что в ДД тоже возникнет вопрос.
[23:14.000 --> 23:16.000]  Вы будете ходить в ДД, видимо, в порядке возрастания иксов.
[23:17.000 --> 23:18.000]  Ну нет, не иксов.
[23:19.000 --> 23:20.000]  Сейчас иксов.
[23:21.000 --> 23:22.000]  Да, видимо иксов.
[23:22.000 --> 23:28.000]  Ради того, чтобы точку в правильное место вставлять и искать в соседние, вам придется как-то искать там по иксам.
[23:30.000 --> 23:31.000]  Но теперь возникает естественный вопрос.
[23:32.000 --> 23:33.000]  А если нижнее огибающее?
[23:34.000 --> 23:35.000]  Ну, нижнее огибающее.
[23:36.000 --> 23:38.000]  Ну а в верхней тоже самое, повернуться 80 градусов.
[23:39.000 --> 23:41.000]  Вот. Но тут суть, наверное, другая.
[23:42.000 --> 23:44.000]  Хорошо. То есть как же вставку, конечно, делать легко.
[23:45.000 --> 23:50.000]  До тех пор, пока вас не попросят действительно опять искать эту мистическую касательную.
[23:51.000 --> 24:00.000]  То есть представьте себе, что вот это нижнее огибающее у вас, как бы, хранятся все эти точки просто как последовательно в дикартовом дереве.
[24:01.000 --> 24:05.000]  И вам нужно, там, давно направление какое-то, найдите касательную.
[24:06.000 --> 24:15.000]  Ну еще раз, мы можем сохранять, мы можем хранить не только точку, но еще следующую за ней, поддерживать указатель, чтобы золото дома искать.
[24:16.000 --> 24:17.000]  Ага.
[24:18.000 --> 24:19.000]  И делать тот же самый метод поиска.
[24:20.000 --> 24:22.000]  Ну, и за сколько мы будем работать?
[24:23.000 --> 24:24.000]  Ну, не бедной, а за спуск, окей.
[24:25.000 --> 24:26.000]  Вот. Тут ваша аккуратная момента.
[24:27.000 --> 24:28.000]  Да.
[24:29.000 --> 24:30.000]  Вот, в нашей дикартешке возникает куча открытий.
[24:31.000 --> 24:34.000]  Во-первых, для каждого элемента нужно хранить следующий и, видимо, предыдущий.
[24:35.000 --> 24:37.000]  Вот когда вы там удаляете вот это все.
[24:38.000 --> 24:42.000]  Вот вы там удаляете то, что, наверное, надо предыдущему искать.
[24:43.000 --> 24:46.000]  Так что, увы. Это разно.
[24:47.000 --> 24:48.000]  Ну хорошо.
[24:48.000 --> 24:52.000]  Ну там, нет, можно искать и за линию, но не за линию, на самом деле, а за лоб.
[24:53.000 --> 24:59.000]  Нет. Ну, за лишний лоб, это как бы, если вы берете поиск лоб, и в каждой интервью лоб, это лоб квадрат.
[25:00.000 --> 25:01.000]  Но это не лоб, ну суммарно, это линия вылез.
[25:02.000 --> 25:07.000]  Ну, короче, если, ну это, короче, обратная дефейс будет, если мы обратно войдем.
[25:08.000 --> 25:16.000]  Нет, нет, сами по себе удаление, нет, понятно, что сами по себе удаление, конечно, если как-то, вот, дерево суммарно, по-любому, будет за evil grand,
[25:16.000 --> 25:20.000]  потому что мы добавляем не более чем n точек и удаляем не более чем n точек, понятно.
[25:21.000 --> 25:23.000]  Но вопрос же не в этом, вопрос же как бинпоиск искать.
[25:25.000 --> 25:27.000]  А бинпоиск нам только следующий не будет.
[25:28.000 --> 25:29.000]  Ну хотя хорошо, ладно. А, ну ладно.
[25:30.000 --> 25:34.000]  Ну вот, тем не менее, ну я для задержицы лучше, конечно, давайте храним следующий, храним предыдущий, будет адекватный по всю эту списку.
[25:35.000 --> 25:36.000]  Окей, да.
[25:37.000 --> 25:38.000]  Вот. Но фишка в другом.
[25:39.000 --> 25:42.000]  То есть фишка в том, что теперь где как-то в дереве нужно найти, то есть как-то бинпоиском эту штуку.
[25:42.000 --> 25:54.000]  То есть если искать классическим бинпоиском, то есть там, найди, дайди мне кат и вектор, и там, найди мне в ядном виде кат и вектор, и там мы посчитаем, в принципе, вектор от произведения или скалярная, то что получится?
[25:55.000 --> 25:59.000]  Тогда получится, что как бы придется в дикартовом дереве эту кат и точку найти.
[26:00.000 --> 26:02.000]  А это делается с куском золотогранички.
[26:03.000 --> 26:05.000]  Получается бинпоиск делается по квадратам.
[26:08.000 --> 26:10.000]  Что-то пока не очень хорошо.
[26:13.000 --> 26:14.000]  Понятно проблема, да?
[26:16.000 --> 26:23.000]  Но с другой стороны, так же понятно то, что с другой стороны, как бы в дикартовом дереве делать бинпоиск через кат или вектор, это как-то странно.
[26:24.000 --> 26:27.000]  Потому что дерево поиска создавалось из-за того, что бы не делали этого.
[26:28.000 --> 26:30.000]  А без этого, просто аккуратненько делали по дереву.
[26:31.000 --> 26:32.000]  Понимаете, да?
[26:33.000 --> 26:36.000]  Да. Высота дикартового дерева, конечно, не обязана быть выгорится.
[26:37.000 --> 26:38.000]  На 4 выгорит.
[26:38.000 --> 26:42.000]  Да, ну а первых, да, вероятность этого крайне мала, во-вторых, ну не нравится, ну пишите овэйк.
[26:43.000 --> 26:44.000]  Не ебайтесь.
[26:45.000 --> 26:47.000]  Да, давайте, конверс, алкликс, овэйк, а что, все.
[26:48.000 --> 26:49.000]  Пока не идейно.
[26:50.000 --> 26:52.000]  В реальности, в реальности, конечно, не хочется это писать.
[26:53.000 --> 26:54.000]  На реальной олимпиаде, ну что поделать.
[26:57.000 --> 26:58.000]  Так.
[26:59.000 --> 27:01.000]  Ну а это если писать?
[27:02.000 --> 27:04.000]  Ну это если писать дикарте.
[27:05.000 --> 27:07.000]  У кого-то фазирина просто безлимитная.
[27:08.000 --> 27:11.000]  А вы же, а что, неужели это вот с сетом вообще не пишется?
[27:12.000 --> 27:13.000]  Да, вообще не пишется.
[27:14.000 --> 27:17.000]  Да, хочется написать это с сетом, но возникает маленькая проблема.
[27:18.000 --> 27:21.000]  А какой компаратор вы будете хранить эти точки?
[27:22.000 --> 27:24.000]  И по какому компаратору вы их там будете хранить?
[27:27.000 --> 27:31.000]  Потому что вам же с одной стороны нужно искать по иксу, значит получается точка хранить по иксу.
[27:32.000 --> 27:33.000]  Ну все нормально.
[27:34.000 --> 27:39.000]  Но потом вам надо искать видимо бинпоиском что-то там вот по скаляному произведению.
[27:40.000 --> 27:43.000]  Ну, значит компаратор по иксу вас нам уже не устраивает.
[27:44.000 --> 27:47.000]  Нужно просто передать компаратор свой в бинпоиск.
[27:48.000 --> 27:57.000]  Ну заметим, что у нас, ну как бы они упорядочены и по иксу, и по скаляному произведению.
[27:58.000 --> 27:59.000]  Да, по иксу, да.
[27:59.000 --> 28:07.000]  Поэтому, ну то есть, как бы нам нужно просто в лобербаунд засунуть свой компаратор, чтобы сравнивать не по иксу, а по произведению.
[28:08.000 --> 28:09.000]  В лобербаунд можно запичивать компаратор.
[28:10.000 --> 28:12.000]  Тоже не уверен.
[28:13.000 --> 28:17.000]  Окей, можно не запичивать, но можно сделать свою структуру, у которой я произведен очень.
[28:18.000 --> 28:19.000]  Какой называется декартовый дерево?
[28:19.000 --> 28:23.000]  Нет, нет, структура, короче, компаратор.
[28:24.000 --> 28:29.000]  Написается структура точка и, например, булливый флаг глобальный.
[28:30.000 --> 28:34.000]  И если он стоит на ноль, то сравнивать по иксу, а если стоит на один, то сравнить по электронному произведению.
[28:35.000 --> 28:37.000]  Ой-ой-ой-ой.
[28:38.000 --> 28:39.000]  Вот, и тогда...
[28:40.000 --> 28:42.000]  В конце правда, для второго компаратора все те надо хранить не точки, а собственные векторы.
[28:43.000 --> 28:44.000]  Да.
[28:45.000 --> 28:49.000]  Ну, может и так, но более классический метод просто завести в высота.
[28:50.000 --> 28:52.000]  В одном храним точки, в другом вектора.
[28:53.000 --> 28:54.000]  Ну, это без флага, да.
[28:55.000 --> 28:56.000]  Ну, в суть, в общем, одна.
[28:57.000 --> 28:59.000]  Ну, то есть, гадость, конечно, в любом случае та еще.
[29:00.000 --> 29:05.000]  То есть, есть подозрение, что как раз в этих случаях, на самом деле, этот метод действительно годится не очень, не вышеписать старые, используется второй метод.
[29:06.000 --> 29:08.000]  Вот, впрочем, по ситуации.
[29:09.000 --> 29:10.000]  По ситуации.
[29:11.000 --> 29:13.000]  Но тем не менее, в принципе, вот так на самом деле может быть.
[29:14.000 --> 29:18.000]  Ну, ладно, судя по тому, что не вижу удивления, видимо, этот метод вам все-таки уже знаком.
[29:19.000 --> 29:22.000]  Ну, то, что в сете можно поддерживать, понятно.
[29:23.000 --> 29:27.000]  Ну, потому что обычно, как бы, какой-то халтригом подразумевается что-то принципиально другое.
[29:28.000 --> 29:29.000]  Но обычно они возрастают.
[29:30.000 --> 29:31.000]  Нет.
[29:32.000 --> 29:33.000]  Нет, обычно подразумевается другое.
[29:34.000 --> 29:37.000]  Обычно подразумевается, что в черной ящике прямые.
[29:38.000 --> 29:39.000]  Ну, это же...
[29:40.000 --> 29:41.000]  Ну, тут не прямые, а векторы типа...
[29:42.000 --> 29:43.000]  Тут похоже.
[29:44.000 --> 29:47.000]  Нет, потому что я многое рассказываю, но вы не просто делаете круглые глаза.
[29:48.000 --> 29:52.000]  Если ты понимаешь, что прямая и вектор, это по сути одно и то же?
[29:53.000 --> 29:56.000]  Ну, знаете, прямая и вектор одно и то же.
[29:57.000 --> 29:59.000]  Два это тоже в какой-то степени восемь и так далее.
[30:01.000 --> 30:02.000]  Ну, класс.
[30:03.000 --> 30:06.000]  Стоп, а вот второй сет, как мы там сравним, который не по их самому?
[30:07.000 --> 30:09.000]  Ну, по векторам произведения.
[30:10.000 --> 30:11.000]  То есть, вектор меньше второго вектора.
[30:12.000 --> 30:13.000]  Если вектор произведен первый, то второй больше нуля.
[30:15.000 --> 30:18.000]  Тут тонкая подлянка, что мы обязаны хранить целый вектор,
[30:19.000 --> 30:22.000]  потому что следующую точку мы ищем за логарифм в сете.
[30:23.000 --> 30:24.000]  Либо нам нужно ее как-то поделивать, но...
[30:25.000 --> 30:26.000]  Вообще логарифм там...
[30:27.000 --> 30:28.000]  Итератор плюс-плюс, там есть залог.
[30:29.000 --> 30:30.000]  Не, ну он залог.
[30:31.000 --> 30:32.000]  А в бинпоиске мы логарифм раз его применяем.
[30:33.000 --> 30:36.000]  Поэтому, если не хранить следующую точку в явном виде,
[30:37.000 --> 30:39.000]  то вылезает как раз тот самый лог-код раз.
[30:39.000 --> 30:40.000]  Стоп, я что-то не очень понял.
[30:41.000 --> 30:42.000]  Не смотря в каком бинпоиске, погоди.
[30:43.000 --> 30:44.000]  Откуда он, в каком?
[30:45.000 --> 30:47.000]  Разве мы не хотели просто один раз от сета вызвать лог?
[30:48.000 --> 30:50.000]  Хотели, но проверить, как бы...
[30:51.000 --> 30:54.000]  У тебя проверка, одна бинпоиска, тебе нужно взять точку и следующую точку.
[30:55.000 --> 30:57.000]  А следующую точку, если ты будешь брать плюс-плюс,
[30:58.000 --> 30:59.000]  то это навесывает лог сразу.
[31:00.000 --> 31:01.000]  Миша, какое у тебя решение с сетами?
[31:02.000 --> 31:03.000]  Что-то я уже, может быть...
[31:04.000 --> 31:06.000]  Ну, теоретически можно хранить логарифм,
[31:06.000 --> 31:07.000]  в одном сете,
[31:08.000 --> 31:10.000]  и фазить компаратор этой точки,
[31:11.000 --> 31:13.000]  как, типа, один компаратор на добавление,
[31:14.000 --> 31:15.000]  второй компаратор на поиск.
[31:16.000 --> 31:18.000]  Ну, просто ты пишешь, был оператор меньше,
[31:19.000 --> 31:21.000]  и в нем оставляешь, если флаг, то сравниваю по х,
[31:22.000 --> 31:25.000]  если не флаг, то сравниваю по вот этим вот произведениям.
[31:26.000 --> 31:30.000]  А потом еще, типа, искать следующую точку, чтобы понять сам вектор.
[31:31.000 --> 31:33.000]  Но следующая точка, если флаг, то сравниваю по х,
[31:33.000 --> 31:35.000]  и искать следующую точку, чтобы понять сам вектор.
[31:36.000 --> 31:38.000]  Но следующая точка будет искаться за логарифм в таком случае.
[31:39.000 --> 31:40.000]  Нет, подожди.
[31:41.000 --> 31:42.000]  Вот, когда ты делаешь запрос findbin,
[31:43.000 --> 31:44.000]  ты делаешь в сете lower bound.
[31:45.000 --> 31:46.000]  Тебе что-то выдают.
[31:47.000 --> 31:50.000]  У меня, типа, в lower bound мне выдают точку в сете.
[31:51.000 --> 31:53.000]  И мне нужно понять, идти как бы меньше или больше.
[31:54.000 --> 31:56.000]  Но чтобы это понять, нужно понять следующую точку,
[31:57.000 --> 31:58.000]  потому что нам нужен вектор целый.
[31:59.000 --> 32:00.000]  А следующая точка возьмется за логарифм,
[32:00.000 --> 32:01.000]  если мы сделаем...
[32:03.000 --> 32:06.000]  Нет, нет, в смысле, а где у тебя bin поиск, я не понял.
[32:07.000 --> 32:08.000]  Нет, bin поиска нет.
[32:09.000 --> 32:10.000]  Да, а в чем там проблема?
[32:11.000 --> 32:12.000]  Есть lower bound и поиск следующего элемента.
[32:13.000 --> 32:14.000]  Да, да.
[32:15.000 --> 32:16.000]  А поиск следующего элемента каждый раз будет работать за лог.
[32:17.000 --> 32:19.000]  Ну а каждый раз, так это один раз.
[32:20.000 --> 32:22.000]  А lower bound лог раз вызывает сравнение.
[32:23.000 --> 32:26.000]  У меня каждое сравнение нужно найти в следующей точке в сете еще,
[32:27.000 --> 32:28.000]  чтобы вектор понять какой.
[32:28.000 --> 32:29.000]  Нет, так реализовать нельзя,
[32:30.000 --> 32:32.000]  потому что в сет тогда искусство-то не построится.
[32:33.000 --> 32:34.000]  Ну да, если честно, то что ты говоришь, Мишель?
[32:35.000 --> 32:37.000]  Да, потому что если по тому же компаратору добавляешь точки в сет,
[32:38.000 --> 32:40.000]  то как бы он тогда сравнивает в зависимости от следующей точки
[32:41.000 --> 32:42.000]  от следующей точки в процессе вставки.
[32:43.000 --> 32:44.000]  Так нет, у меня два компаратора.
[32:45.000 --> 32:46.000]  У меня оператор меньше.
[32:47.000 --> 32:48.000]  Если flag, то я сравниваю по x.
[32:49.000 --> 32:53.000]  А если не flag, то я сравниваю по вот этим вот векторам произведения.
[32:54.000 --> 32:55.000]  Глобальный flag.
[32:55.000 --> 32:56.000]  Глобальный flag.
[32:57.000 --> 32:59.000]  И вот этот flag я выставляю перед добавлением в true,
[33:00.000 --> 33:01.000]  а перед lower bound в false.
[33:02.000 --> 33:04.000]  Что-то да, Миша, звучит очень ненадежно.
[33:05.000 --> 33:08.000]  Ну скажем так, если у вас очень мало памяти.
[33:10.000 --> 33:14.000]  Ну короче, я согласен, что это не то, что вам хочется писать,
[33:15.000 --> 33:16.000]  но это можно сделать.
[33:17.000 --> 33:18.000]  Это еще не факт, что корректно вообще.
[33:19.000 --> 33:20.000]  Ну и по стандарту.
[33:21.000 --> 33:22.000]  По стандарту корректно,
[33:22.000 --> 33:25.000]  потому что они отсортированы одновременно и по иксам,
[33:26.000 --> 33:27.000]  и по векторам произведения, и поэтому...
[33:28.000 --> 33:30.000]  Ну да, но просто лучше отдельно хранить точки
[33:31.000 --> 33:33.000]  и отдельно хранить векторы, чтобы вот так вам делать там.
[33:34.000 --> 33:35.000]  Ну в общем...
[33:36.000 --> 33:38.000]  Так, ну, как вы видите, слышите?
[33:39.000 --> 33:40.000]  Ругунь.
[33:43.000 --> 33:45.000]  Я правильно понимаю, что это типа личао только?
[33:46.000 --> 33:47.000]  Это вообще не личао.
[33:48.000 --> 33:49.000]  Это вообще не личао.
[33:50.000 --> 33:51.000]  Это прямо совсем-совсем личао.
[33:53.000 --> 33:59.000]  Потому что личао вызывает, конечно, принципиально другую интерпретацию этой запись.
[34:03.000 --> 34:04.000]  Итак...
[34:05.000 --> 34:07.000]  Значит, интерпретация вторая.
[34:09.000 --> 34:13.000]  Которая мы неожиданно перестаем замечать, что это скалярное произведение.
[34:18.000 --> 34:19.000]  Вот.
[34:20.000 --> 34:24.000]  Ну, на самом деле, тут мы, конечно, начинаем неожиданно надеяться,
[34:25.000 --> 34:26.000]  что на СЖТ можно поделить.
[34:27.000 --> 34:29.000]  Возможно, даже СЖТ больше нуля.
[34:32.000 --> 34:36.000]  Но по-хорошему говоря, вторая интерпретация больше даже подходит, знаете, туда.
[34:37.000 --> 34:38.000]  Она подходит вот туда.
[34:40.000 --> 34:43.000]  То есть, на самом деле, если бы у нас было что-нибудь типа
[34:43.000 --> 34:52.000]  ТП ЖД умножить на АИТ, плюс БЖД.
[34:54.000 --> 34:55.000]  Ну, может быть, плюс СИТ.
[34:57.000 --> 35:00.000]  Вот больше подходит, на самом деле, для чего-то вот такого.
[35:07.000 --> 35:08.000]  Ну, в принципе, скорее всего, вот.
[35:09.000 --> 35:10.000]  То есть, скорее всего, это видео, то есть, сужают.
[35:10.000 --> 35:13.000]  То есть, не совсем, не такой общий случай, как в прошлый раз был.
[35:14.000 --> 35:17.000]  Но, например, если в том случае, скажем, С было больше нуля,
[35:18.000 --> 35:19.000]  то можно было бы на него поделить.
[35:20.000 --> 35:22.000]  Вот, так что оно не особо принципиально.
[35:23.000 --> 35:26.000]  Но, значит, что происходит в этой интерпретации?
[35:27.000 --> 35:28.000]  В этой интерпретации...
[35:33.000 --> 35:38.000]  То есть, в этой интерпретации, в черном ящике, мы храним не точки.
[35:40.000 --> 35:41.000]  Не точки, это два разных слова.
[35:43.000 --> 35:45.000]  Мы храним линейные функции.
[35:48.000 --> 35:51.000]  Вида F от X равно там KX плюс B.
[35:56.000 --> 35:58.000]  K2, X плюс B2, ну и так далее.
[35:59.000 --> 36:00.000]  Храним какие-то прямые.
[36:01.000 --> 36:02.000]  Храним вот такие линейные функции.
[36:03.000 --> 36:04.000]  И у нас есть.
[36:06.000 --> 36:08.000]  И на этот раз у нас тоже есть два запроса.
[36:08.000 --> 36:09.000]  Первый.
[36:10.000 --> 36:11.000]  Добавь новую линейную функцию.
[36:12.000 --> 36:13.000]  K и B.
[36:16.000 --> 36:19.000]  И find min у нас превращается в один тоже принципиально другой.
[36:20.000 --> 36:21.000]  Find min от X.
[36:38.000 --> 36:51.000]  Можно даже сказать, что мы храним find.
[36:52.000 --> 36:53.000]  Чистил и вот таким такое.
[36:54.000 --> 36:55.000]  Ну, по сути, мы храним прямые.
[36:56.000 --> 36:57.000]  Не прямые, а линейные функции.
[37:03.000 --> 37:04.000]  Вот такая идея.
[37:08.000 --> 37:09.000]  Ну, по сути, какая это вопрос?
[37:11.000 --> 37:12.000]  То есть давайте себе воображим.
[37:13.000 --> 37:15.000]  Если мы додобавляли несколько примеров.
[37:16.000 --> 37:19.000]  Как выглядит график вот этого минимума от X?
[37:28.000 --> 37:29.000]  В смысле аргум минимума?
[37:30.000 --> 37:32.000]  Нет, именно сам график минимума.
[37:32.000 --> 37:35.000]  Ну, в каждой моей премии минимум это функция от X.
[37:36.000 --> 37:38.000]  Такая же нижняя лукоположка.
[37:41.000 --> 37:42.000]  Вот, ну, это не совсем.
[37:45.000 --> 37:46.000]  Ну, давайте подумаем.
[37:47.000 --> 37:50.000]  Если у нас в черном ящике одна прямая, то график выглядит вот таким вот.
[37:52.000 --> 37:53.000]  Если две прямые.
[37:54.000 --> 37:58.000]  Ну, если у нас в черном ящике одна прямая, то график выглядит вот таким вот.
[37:59.000 --> 38:00.000]  Если две прямые.
[38:00.000 --> 38:01.000]  Если две прямые.
[38:02.000 --> 38:04.000]  Ну, я сейчас не буду рисовать параллельно.
[38:06.000 --> 38:09.000]  То оказывается такой уголочек.
[38:10.000 --> 38:11.000]  Если добавить что-то третье.
[38:12.000 --> 38:13.000]  Ну, может, ничего не поменялось.
[38:14.000 --> 38:15.000]  Давайте четвертое.
[38:16.000 --> 38:17.000]  Получается вот так.
[38:18.000 --> 38:23.000]  Короче говоря, если так идти до конца, то получается примерно следующее.
[38:25.000 --> 38:26.000]  Получается.
[38:27.000 --> 38:28.000]  Что у нас получается?
[38:28.000 --> 38:29.000]  Получается вот.
[38:30.000 --> 38:34.000]  Получается, на самом деле, что-то типа это обычно называется нижнее одепающее.
[38:35.000 --> 38:36.000]  Пересечение.
[38:37.000 --> 38:38.000]  Что пересечение?
[38:39.000 --> 38:40.000]  Что пересечение?
[38:41.000 --> 38:42.000]  Почему пересечение?
[38:43.000 --> 38:44.000]  Нет, пересечение.
[38:46.000 --> 38:47.000]  Да, пересечение вот тут.
[38:48.000 --> 38:49.000]  Печально.
[38:50.000 --> 38:51.000]  Что такое?
[38:52.000 --> 38:53.000]  Посмотрел, что там ничего не видно.
[38:55.000 --> 38:56.000]  Вот.
[38:57.000 --> 38:58.000]  РСФ.
[38:59.000 --> 39:00.000]  А чего не видно?
[39:01.000 --> 39:02.000]  Ну, видно.
[39:03.000 --> 39:04.000]  Да, видно, видно.
[39:05.000 --> 39:07.000]  Выглядит, правда, черно, но это не проблема.
[39:08.000 --> 39:09.000]  Нет, это вообще не проблема.
[39:10.000 --> 39:14.000]  Значит, на самом деле получается так, что функция выглядит как вот такая кусочная,
[39:15.000 --> 39:21.000]  то есть такая вот кусочная линейная функция, причем функция в объект.
[39:22.000 --> 39:24.000]  Мы еще пока не ввели определение, но было бы понятно.
[39:24.000 --> 39:26.000]  Тем более, что мы над анализией какое-то определение уводили.
[39:27.000 --> 39:28.000]  Можно вопрос?
[39:29.000 --> 39:30.000]  Давай.
[39:31.000 --> 39:32.000]  Вот мы хотели поддерживать два сета.
[39:33.000 --> 39:34.000]  Да.
[39:35.000 --> 39:36.000]  А как мы будем вставить?
[39:37.000 --> 39:38.000]  Вот, например, мы, допустим, хотим вставить точку по лицу.
[39:39.000 --> 39:40.000]  Как мы ее вставим во второй сет?
[39:41.000 --> 39:43.000]  Ну, скажи так, сначала мы разбираемся с первым сетом.
[39:44.000 --> 39:45.000]  Да.
[39:46.000 --> 39:48.000]  И прям честно смотрим, какие точки мы выкинули, а какую ставили.
[39:49.000 --> 39:53.000]  Аккуратно это записав, мы, собственно, понимаем, какие векторы надо из второго сета уголить
[39:54.000 --> 39:55.000]  и какие два вставить.
[40:02.000 --> 40:03.000]  Ага.
[40:04.000 --> 40:05.000]  Да, лучше это не зависит.
[40:06.000 --> 40:07.000]  Но нужно это делать неодновременно.
[40:08.000 --> 40:10.000]  То есть, я помню, мы как-то по приколу пытались написать так, чтобы вся структура,
[40:11.000 --> 40:12.000]  которая это делает одновременно и...
[40:13.000 --> 40:16.000]  Ну, скажем так, слова упоролись очень просто.
[40:16.000 --> 40:17.000]  Вот так вот.
[40:18.000 --> 40:19.000]  Вот так вот.
[40:20.000 --> 40:21.000]  Вот так вот.
[40:22.000 --> 40:23.000]  Вот так вот.
[40:24.000 --> 40:25.000]  Так вот.
[40:26.000 --> 40:27.000]  То есть, что нам тогда...
[40:28.000 --> 40:29.000]  То есть, надо хранить вот такую функцию.
[40:30.000 --> 40:32.000]  И что в ней уметь делать?
[40:33.000 --> 40:36.000]  Во-первых, надо уметь добавлять новую прямую.
[40:37.000 --> 40:39.000]  А во-вторых, искать...
[40:40.000 --> 40:43.000]  Собственно, искать собственное значение в Q4.
[40:44.000 --> 40:45.000]  Ну, как же искать?
[40:46.000 --> 40:47.000]  Здесь, как всегда...
[40:48.000 --> 40:49.000]  То есть, смотрите, то есть...
[40:50.000 --> 40:53.000]  В общем-то, которые мы описали раньше, они никуда не делись,
[40:54.000 --> 40:56.000]  просто они немножко модифицируются.
[40:57.000 --> 40:59.000]  Потому что, смотрите, какая логика.
[41:00.000 --> 41:03.000]  Потому что, предположим, что мы эту логу мы храним, честно, в каком-нибудь векторе.
[41:04.000 --> 41:07.000]  Тогда значение в Q4 мы ищем просто в анальном бюлл-полисе.
[41:08.000 --> 41:09.000]  Правда?
[41:10.000 --> 41:11.000]  Теперь, следующее.
[41:12.000 --> 41:13.000]  Ну, как же нам добавлять прямую?
[41:13.000 --> 41:15.000]  Ну, здесь опять, значит, оказывается, что...
[41:16.000 --> 41:17.000]  Если оказывается, что...
[41:18.000 --> 41:19.000]  То есть, здесь у нас вектор предположения.
[41:20.000 --> 41:23.000]  То есть, допустим, у нас вектор предположения, что K...
[41:24.000 --> 41:26.000]  Вот это все будет неожиданно.
[41:27.000 --> 41:28.000]  Убывает.
[41:29.000 --> 41:30.000]  Меренно.
[41:31.000 --> 41:32.000]  Логично.
[41:33.000 --> 41:38.000]  Тогда это означает, что каждая следующая прямая наклонена куда-то глубже, чем предыдущая.
[41:39.000 --> 41:41.000]  И тогда каждая новая прямая, это вот что-то такое.
[41:41.000 --> 41:45.000]  Такое и добавление тогда и происходит просто аналогично аналогично.
[41:46.000 --> 41:47.000]  Понимаешь, да?
[41:48.000 --> 41:49.000]  Вот.
[41:51.000 --> 41:54.000]  И тогда эти точки реально можно хранить вектор и из них заморачивать.
[41:56.000 --> 41:57.000]  Вот.
[41:58.000 --> 42:02.000]  Ну, что делать, если у нас прямые все-таки добавляют...
[42:03.000 --> 42:06.000]  Если этого предположения нет, то прямые добавляют все равно.
[42:07.000 --> 42:09.000]  То можно в каком случае делать.
[42:12.000 --> 42:13.000]  Ну вот.
[42:14.000 --> 42:15.000]  Но оказывается так.
[42:16.000 --> 42:18.000]  Ну, во-первых, если вам там пришла какая-то новая прямая...
[42:20.000 --> 42:21.000]  Ну, первое вам нужно сделать.
[42:22.000 --> 42:23.000]  Эта прямая имеет отношение к минимуму.
[42:24.000 --> 42:25.000]  Или она оказалась где-то выше.
[42:26.000 --> 42:27.000]  Как это сделать?
[42:28.000 --> 42:29.000]  Как так проверить?
[42:30.000 --> 42:31.000]  Это очень просто.
[42:32.000 --> 42:33.000]  Надо просто найти нашей функции.
[42:34.000 --> 42:35.000]  В этом направлении.
[42:35.000 --> 42:36.000]  Бинбойс по углу отвода.
[42:37.000 --> 42:38.000]  Да.
[42:40.000 --> 42:46.000]  А дальше можно заметить, что если эта точка ниже этой прямой, значит тогда и вся эта функция будет ниже этой прямой,
[42:47.000 --> 42:48.000]  эта прямая на минимум не повлияла снова никак.
[42:50.000 --> 42:53.000]  Ну, потом от этой точки можно сделать на две стороны.
[42:54.000 --> 42:56.000]  Да. А так, в чем даже уже не бинбойс, а просто идем в ступу.
[42:57.000 --> 42:58.000]  Идем по этим точкам и аккуратно удаляем.
[42:59.000 --> 43:00.000]  Так мы так же делали в прошлый раз.
[43:01.000 --> 43:02.000]  Ну да, идейно очень похоже.
[43:02.000 --> 43:04.000]  Ну, в плане в прошлый раз мы тоже просто в ступу ушли и удалили.
[43:05.000 --> 43:06.000]  Ну, по сути да.
[43:08.000 --> 43:13.000]  И тогда оказывается диспекер, что опять к нему приходится хранить два сета.
[43:14.000 --> 43:15.000]  Один сет по иксу.
[43:16.000 --> 43:17.000]  Другой сет по иксу.
[43:18.000 --> 43:20.000]  Вот, собственно, у этих векторов по, скажем, векторному прежнему.
[43:23.000 --> 43:24.000]  Вот.
[43:24.000 --> 43:25.000]  Вот.
[43:26.000 --> 43:28.000]  То есть может оказывается суть принципиально не меняется,
[43:29.000 --> 43:33.000]  но почему-то, скажем, такая-то придастся конкретно, почему-то сильно популярна.
[43:35.000 --> 43:37.000]  Хотя, в общем-то, по поводу идейно откроется.
[43:38.000 --> 43:39.000]  Хотя нет, есть еще одна причина.
[43:40.000 --> 43:45.000]  Потому что на самом деле часто реализуется, даже если прямые добавляются в рандомном порядке,
[43:46.000 --> 43:48.000]  можно реализоваться неожиданное предположение.
[43:49.000 --> 43:55.000]  Предположение будет заключаться в том, что все аиты, то есть все иксы заранее известны.
[43:59.000 --> 44:02.000]  То есть давайте рассмотрим неожиданное предположение.
[44:05.000 --> 44:08.000]  Все иксы заранее известны.
[44:09.000 --> 44:10.000]  Ну, в файле.
[44:12.000 --> 44:15.000]  Ну, вот эта формула, в принципе, намекает, что скорее всего это так.
[44:15.000 --> 44:19.000]  Потому что видите, как тут аиты, почему-то окажется, что аиты там заданы где-нибудь в одно входе.
[44:20.000 --> 44:22.000]  Ну, в общем случае, конечно, не так, потому что...
[44:25.000 --> 44:30.000]  То есть тут, конечно, я написал примерную формулу, но, в принципе, заметим, что конвейсел 3 прекрасно работает,
[44:31.000 --> 44:35.000]  если тут написано не DP житы, а что-то, зависящее, в том числе, от DP житого.
[44:36.000 --> 44:43.000]  То есть там DP житы умножить на какой-нибудь вася кубки над житом, я не знаю, или что-нибудь еще в этом роде.
[44:45.000 --> 44:50.000]  И, на самом деле, ашки и цешки, они тоже, на самом деле, могут вам подаваться в оффлайне.
[44:51.000 --> 44:52.000]  То есть будут в оффлайне, а могут и в онлайне.
[44:53.000 --> 44:54.000]  Что, аиты это?
[44:55.000 --> 44:58.000]  Да, житы умножить на вася кубки над житом, это квадратичная формула, Сань.
[44:59.000 --> 45:00.000]  Чего квадратичная?
[45:01.000 --> 45:02.000]  Чего квадратичная?
[45:03.000 --> 45:05.000]  Ну, в флайне, если мы дожиты еще умножаем на...
[45:06.000 --> 45:09.000]  Нет, потому что главное, чтобы он просто от жит, то зависело только от жит.
[45:10.000 --> 45:13.000]  Потому что если у меня тут скобы, потому что у меня тут вот это скобчики, я могу писать все что угодно.
[45:13.000 --> 45:14.000]  Хоть квадратичная, хоть кубическая.
[45:15.000 --> 45:16.000]  Главное, чтобы оно от жит зависело.
[45:17.000 --> 45:20.000]  То есть как бы плечевое, чтобы тут зависит от жит, тут зависит от аты, тут зависит от жит.
[45:21.000 --> 45:22.000]  Да.
[45:23.000 --> 45:24.000]  Ну и кое-кто питаться там еще надо.
[45:25.000 --> 45:26.000]  Так вот, предположим.
[45:27.000 --> 45:28.000]  Так вот, теперь неожиданная идея.
[45:29.000 --> 45:33.000]  Пусть там все иши заранее известные, и это уже реализуется в 99-е процессы.
[45:36.000 --> 45:41.000]  Тогда, действительно, можно, оказывается, этого всего не писать.
[45:41.000 --> 45:42.000]  Не писать.
[45:46.000 --> 45:47.000]  Вот.
[45:48.000 --> 45:50.000]  Нет, в общем, иногда один поиск по иксу не надо писать.
[45:51.000 --> 45:52.000]  Ладно.
[45:53.000 --> 45:57.000]  То есть, конечно, отмечу то, что мы сегодня с большинством из вас отмечили на кубке инфа-3, на самом деле.
[45:58.000 --> 45:59.000]  Что изделали?
[46:00.000 --> 46:01.000]  Отмечили на кубке инфа-3.
[46:02.000 --> 46:03.000]  Потому что бывает ситуация, когда в кодексалтрике все работает за вот единицы.
[46:04.000 --> 46:09.000]  Потому что бывает такая ситуация, когда у вас не только, скажем, прибыли добавляются в порядке правильного угла, да?
[46:09.000 --> 46:14.000]  Но еще и оказывается, что все иксы отсектированы по возрастанию.
[46:15.000 --> 46:18.000]  Тогда, оказывается, что никакими венпоисками их искать не надо.
[46:19.000 --> 46:22.000]  Вместо этого просто храним, где мы нашли предыдущий икс.
[46:23.000 --> 46:26.000]  И тогда, когда ищем следующий, просто идем от этой точки вправо.
[46:27.000 --> 46:30.000]  У нас просто противополадная задача.
[46:31.000 --> 46:33.000]  Прошу прощения.
[46:39.000 --> 46:40.000]  Вот.
[46:41.000 --> 46:44.000]  То есть, тогда оказывается, что все амортизировано за единицу работает.
[46:45.000 --> 46:47.000]  Ну, мы просто вот на кубке инфа-3 столкнулись с такой задачкой.
[46:48.000 --> 46:49.000]  Собственно, мы очень хорошо ее нашли.
[46:50.000 --> 46:51.000]  Каждый порешает.
[46:52.000 --> 46:53.000]  Вот.
[46:54.000 --> 46:55.000]  Обещанная задача.
[46:56.000 --> 46:57.000]  Там у вас амортизировка.
[46:58.000 --> 46:59.000]  Там были инфа-3.
[47:00.000 --> 47:01.000]  Да, все в одной задаче.
[47:02.000 --> 47:03.000]  Такой кубок это был.
[47:04.000 --> 47:05.000]  В этом семестре было.
[47:06.000 --> 47:07.000]  Ну, в плане какой номер?
[47:07.000 --> 47:08.000]  Я помню, что была задача F, по-моему.
[47:09.000 --> 47:10.000]  В каком-то этапе.
[47:11.000 --> 47:12.000]  В каком-то четвертый-пятый.
[47:13.000 --> 47:14.000]  Хотя...
[47:15.000 --> 47:16.000]  Понятно.
[47:17.000 --> 47:18.000]  Ну, так, и последняя какая-то задача была.
[47:19.000 --> 47:20.000]  Но помню, в какой-то четвертый-пятый этап мы уже выбирали.
[47:21.000 --> 47:22.000]  Этот дирюзак и 20 весов?
[47:23.000 --> 47:25.000]  Там, вроде, просто до того, как вы говорите.
[47:26.000 --> 47:27.000]  Нет.
[47:28.000 --> 47:29.000]  Нет, там что-то другое.
[47:30.000 --> 47:31.000]  Там были...
[47:32.000 --> 47:33.000]  Мы еще не попали в спутнине.
[47:34.000 --> 47:35.000]  Нет.
[47:35.000 --> 47:36.000]  Ну, не важно, ладно.
[47:37.000 --> 47:38.000]  Нет, там было что-то там.
[47:39.000 --> 47:40.000]  Были какие-то музыкальные треки.
[47:41.000 --> 47:43.000]  И там что-то, если поставить в каком-то порядке,
[47:44.000 --> 47:45.000]  то там было что...
[47:46.000 --> 47:47.000]  И там что-то было, что надо было ссуммировать.
[47:48.000 --> 47:49.000]  У них были какие-то F-ки надо было ссуммировать.
[47:50.000 --> 47:51.000]  Разность соседних в квадрате.
[47:52.000 --> 47:54.000]  И плюс еще там что-то за вещи от вот этих слешек.
[47:55.000 --> 47:57.000]  А, то есть, просто разница в квадрате и плюс слешек.
[47:58.000 --> 47:59.000]  И там просто оказывалось, что...
[48:00.000 --> 48:01.000]  Ну, там первая идея решения.
[48:02.000 --> 48:04.000]  Заветим, что надо сначала упорядочить повреждение.
[48:05.000 --> 48:06.000]  А потом, например, последовательность.
[48:07.000 --> 48:08.000]  Ну, дальше.
[48:09.000 --> 48:10.000]  И после этого оказывался какой-то ринзак.
[48:11.000 --> 48:12.000]  Вот.
[48:13.000 --> 48:14.000]  И дальше оказывалось, что...
[48:15.000 --> 48:16.000]  Вот.
[48:17.000 --> 48:18.000]  Ну, не важно.
[48:19.000 --> 48:20.000]  Это...
[48:21.000 --> 48:22.000]  Убираем.
[48:23.000 --> 48:24.000]  То есть, предположим, что их все тоже даются в рандомном порядке,
[48:25.000 --> 48:26.000]  но они заранее известны.
[48:27.000 --> 48:29.000]  Они неожиданно заранее известны.
[48:30.000 --> 48:32.000]  Тогда оказывается, что вот это вот безобразие,
[48:32.000 --> 48:35.000]  что в цитат, что в дикарховых деревьях, они не так.
[48:36.000 --> 48:42.000]  Потому что неожиданно вокруг вступает гениальное изобретение человечества дерево-лечао.
[48:43.000 --> 48:46.000]  Вот теперь, собственно, пришло время узнать, что это такое.
[48:47.000 --> 48:48.000]  А зачем нам заранее известны?
[48:49.000 --> 48:50.000]  Чего?
[48:51.000 --> 48:52.000]  Зачем нам заранее известны?
[48:53.000 --> 48:55.000]  Ну, как видим, что высота была логарифом.
[48:56.000 --> 48:59.000]  Ну, в принципе, да, можно, конечно, пытаться делать не ядрое дерево-лечао,
[49:00.000 --> 49:01.000]  но алгоритм тогда будет не N, а координат.
[49:02.000 --> 49:03.000]  Акция, да.
[49:04.000 --> 49:05.000]  Но не ядрое дерево-лечао.
[49:06.000 --> 49:07.000]  Ну, давайте, ну, давайте.
[49:08.000 --> 49:09.000]  Зачем в том, что иксы заранее известны?
[49:10.000 --> 49:13.000]  Если они заранее известны, я их могу эти иксы просто отсортировать.
[49:14.000 --> 49:20.000]  У меня будет х1, х2, х3, х4, х5, х6, ну и так далее.
[49:23.000 --> 49:24.000]  Ну и так далее.
[49:25.000 --> 49:26.000]  Тогда у меня неожиданная идея.
[49:27.000 --> 49:28.000]  Я построю что-то типа дерево-адрес.
[49:32.000 --> 49:33.000]  Вот такой вот.
[49:34.000 --> 49:41.000]  Ну, это типа дерево-адрес, но правда инвариант тут сформулировать не так тревально.
[49:45.000 --> 49:48.000]  То есть, на самом деле, инвариант, по сути, в нем будет...
[49:49.000 --> 49:55.000]  То есть история такая, что в каждой ячейке хонится премьера.
[49:56.000 --> 50:00.000]  То есть в каждой ячейке хонится премьера, в каждой ячейке хона.
[50:00.000 --> 50:06.000]  что в каждой ячейке хранится прямая, ну не более чем одна прямая.
[50:06.000 --> 50:14.000]  Давайте пометим, что у нас хранятся прямые какие-то.
[50:14.000 --> 50:20.000]  И на самом деле инвариант заключается в том, что все хорошо.
[50:20.000 --> 50:22.000]  Что такое все хорошо?
[50:22.000 --> 50:29.000]  Потому что если вы уже делаете инвариант, мы скажем, как мы будем искать минимум точки х.
[50:29.000 --> 50:36.000]  Очень просто. Мы возьмем эту точку х, прогуляемся от ее соответствующего елиста до корня,
[50:36.000 --> 50:42.000]  переберем вот эти логарифы в прямых и попробуем подставить этот х в логарифы из этих прямых.
[50:42.000 --> 50:46.000]  И выберем из них лучше.
[50:46.000 --> 50:54.000]  Требование инварианта будет заключаться в том, что в каждый момент времени для каждого из этих типсов это правильный ответ.
[50:54.000 --> 51:01.000]  Понятно, да? То есть мы это сейчас не доказывать будем, мы это поддержим.
[51:01.000 --> 51:09.000]  Ну, когда у нас одна прямая, это поддерживать легко. Давайте просто добавим прямую во все ячейки или просто поделим более.
[51:09.000 --> 51:15.000]  Итак, мы теперь предположим, что нам добавилась новая красивая,
[51:15.000 --> 51:21.000]  исследовать начальство, фиолетовая прямая.
[51:21.000 --> 51:28.000]  Давайте добавим фиолетовую прямую. Что такое?
[51:28.000 --> 51:31.000]  Рассмотрим корень.
[51:31.000 --> 51:39.000]  Ну, во-первых, заметим маленькую, да, рассмотрим в случае, когда фиолетовая прямая оказалась параллельно прямой находящейся в корне.
[51:39.000 --> 51:46.000]  Тогда смотрите, если эта прямая оказалась параллельно прямой в корне и выше ей,
[51:46.000 --> 51:51.000]  то в принципе заметим, что эту прямую можно игнорировать, правда?
[51:51.000 --> 51:55.000]  Да. Приятная идея, да?
[51:55.000 --> 51:59.000]  Вот. То есть более того, на самом деле даже вверх более общий случай.
[51:59.000 --> 52:06.000]  Если эта прямая оказалась выше на отрезке x1, xn, то в принципе тоже ее можно игнорировать.
[52:06.000 --> 52:07.000]  X1, xn?
[52:07.000 --> 52:08.000]  X1, xn.
[52:08.000 --> 52:09.000]  Да-да.
[52:09.000 --> 52:14.000]  То есть они даже не пересекают, то есть они пересекают, но где-то за пределами этого отрезка.
[52:14.000 --> 52:20.000]  Вот, да. Но с другой стороны, есть еще второй такой случай близне, приятный.
[52:20.000 --> 52:25.000]  На этом отрезке эта фиолетовая прямая оказалась ниже.
[52:25.000 --> 52:26.000]  Кто тогда заменил?
[52:26.000 --> 52:29.000]  Тогда заменяем, что мы можем просто выкинуть вот эту красную корневую прямую,
[52:29.000 --> 52:33.000]  вместо нее поставить фиолетовую, и будет окей.
[52:33.000 --> 52:40.000]  Почему? Потому что мы знаем, что ответ на задачу теперь либо то, что было раньше, либо вот эта фиолетовая прямая.
[52:40.000 --> 52:46.000]  Но вот так как фиолетовая прямая всегда лучше корня, давайте ее подставим и возразимся.
[52:46.000 --> 52:48.000]  Ну и теперь самый интересный случай.
[52:48.000 --> 52:51.000]  А что делать, если они пересекаются?
[52:54.000 --> 52:57.000]  Ну идея такая.
[52:57.000 --> 53:01.000]  То есть тут вопрос, где они пересекаются?
[53:01.000 --> 53:07.000]  Где-то в диапазоне левой половины х или в диапазоне правой половины х?
[53:07.000 --> 53:10.000]  Вот давайте предположим, что правая.
[53:10.000 --> 53:13.000]  Ну для левых рассуждения будет аналогично.
[53:13.000 --> 53:16.000]  Вот, вот как-то так.
[53:16.000 --> 53:17.000]  Тогда идея такая.
[53:17.000 --> 53:22.000]  Если у нас точка пересечения где-то в диапазоне правых х, где-то вот между ними,
[53:22.000 --> 53:27.000]  то тогда заметьте, что в левой половине одна из этих прямых доминирует в другую.
[53:27.000 --> 53:32.000]  В нашем случае сейчас, как я нарисовал, фиолетовая прямая лучше красной.
[53:32.000 --> 53:38.000]  Тогда если я заменю корня красную на фиолетовую,
[53:38.000 --> 53:43.000]  то тогда для левой половины х ответ будет уже правильный.
[53:45.000 --> 53:47.000]  Логично, да?
[53:50.000 --> 53:54.000]  Но с другой стороны, для правой половины х,
[53:54.000 --> 54:00.000]  тогда эта бывшая прямая корня вполне может оказаться и правильной.
[54:02.000 --> 54:04.000]  Что же делать?
[54:04.000 --> 54:09.000]  А давайте эту прямую добавим рекурсивно в правую половину.
[54:14.000 --> 54:16.000]  То есть мы теперь пойдем вот этого правого ребенка
[54:16.000 --> 54:19.000]  и вот эту прямую пересечем уже вот с этой прямой
[54:19.000 --> 54:21.000]  и будем делать то же самое.
[54:22.000 --> 54:24.000]  Понятно, да?
[54:24.000 --> 54:26.000]  Ну еще там мог быть случаи, когда на этой левой прямой
[54:26.000 --> 54:29.000]  наоборот корневая прямая лучше, чем фиолетовая.
[54:29.000 --> 54:32.000]  Вот тогда в этом случае рекурсивно будем добавлять все левую прямую,
[54:32.000 --> 54:34.000]  а корень красную.
[54:36.000 --> 54:39.000]  То есть вот такое аккуратное решение получается,
[54:39.000 --> 54:42.000]  которое дает нам логарифм n,
[54:42.000 --> 54:44.000]  это если дерево не явное.
[54:44.000 --> 54:47.000]  Вот это если дерево явное, то мы все иксы знаем.
[54:48.000 --> 54:50.000]  В принципе, да.
[54:50.000 --> 54:53.000]  То есть ни в какой зичейке прямые лежать не обязаны.
[54:53.000 --> 54:55.000]  На самом деле...
[54:57.000 --> 54:59.000]  И в принципе можно хранить не явные дерева.
[54:59.000 --> 55:04.000]  Личево пишется вот так.
[55:17.000 --> 55:19.000]  Вот, и тогда...
[55:19.000 --> 55:21.000]  Тогда тут что получается?
[55:21.000 --> 55:24.000]  То есть если вы знаете, что все иксы, например, целые
[55:24.000 --> 55:27.000]  от 1 до 10 в 9, тоже нередко наблюдается,
[55:27.000 --> 55:29.000]  то вы можете построить неявные дерева,
[55:29.000 --> 55:31.000]  личево, на 10 в 9 левше.
[55:31.000 --> 55:34.000]  И тогда у вас логарифм будет не логарифм n,
[55:34.000 --> 55:37.000]  а логарифм по 5 в 10 в 9.
[55:37.000 --> 55:39.000]  Ну там еще нужно декорировать.
[55:39.000 --> 55:43.000]  Если до 10-6, то 10-15 уже.
[55:43.000 --> 55:45.000]  Но если иксы не целые, может быть,
[55:45.000 --> 55:47.000]  то до какой еще точности в них?
[55:47.000 --> 55:49.000]  Ну там уже, да.
[55:49.000 --> 55:51.000]  Это уже такие детали.
[55:53.000 --> 55:55.000]  То есть рогатые губопехлоны могут быть.
[55:55.000 --> 55:57.000]  То есть пропитаны.
[55:57.000 --> 56:01.000]  Может быть еще там запомнить, чтобы с переспроеки.
[56:03.000 --> 56:05.000]  Так что вот такая.
[56:05.000 --> 56:07.000]  Вот про сутан.
[56:07.000 --> 56:09.000]  Что идет дальше?
[56:09.000 --> 56:11.000]  Вот такая. Вот про сутан.
[56:13.000 --> 56:15.000]  Хорошо идет.
[56:15.000 --> 56:18.000]  Так, это вот что такое у нас
[56:18.000 --> 56:20.000]  конверс халд-дрифт.
[56:20.000 --> 56:23.000]  Вот, есть ли тут какие-то вопросы?
[56:29.000 --> 56:32.000]  Так, хорошо, тут никаких вопросов нет.
[56:32.000 --> 56:35.000]  Ладно, значит, тогда это все, что я хотел сказать про конверс халд-дрифт.
[56:35.000 --> 56:38.000]  Так, что же у нас дальше?
[56:39.000 --> 56:42.000]  Так, дальше у нас такие шуты есть.
[56:42.000 --> 56:44.000]  Так.
[56:44.000 --> 56:47.000]  Это плохо, что вы достаёте тетрадь.
[56:47.000 --> 56:49.000]  Да и почему?
[56:49.000 --> 56:51.000]  Ага, да, да, да.
[56:51.000 --> 56:54.000]  Особенно если поверить, что все, что у меня в этой тетради
[56:54.000 --> 56:57.000]  я должен вам рассказать, то да, это еще больше.
[56:57.000 --> 56:58.000]  Да.
[56:58.000 --> 57:01.000]  Ну, во-первых, как бы тут не все имеют отношения к курсу,
[57:01.000 --> 57:04.000]  а в большую часть из этого я вам уже рассказал.
[57:04.000 --> 57:07.000]  Потому что там теория игр тут, например,
[57:07.000 --> 57:09.000]  там дерево гоминаторов и так далее.
[57:09.000 --> 57:12.000]  То есть и прочая радость, которая у нас уже была.
[57:12.000 --> 57:14.000]  Так что не волнуйтесь.
[57:14.000 --> 57:17.000]  Сейчас я ее достаю, чтобы просто посмотреть,
[57:17.000 --> 57:20.000]  какой список на самом деле не очень сложных задач.
[57:20.000 --> 57:23.000]  Я сейчас должен с вами рассмотреть.
[57:25.000 --> 57:27.000]  Вот.
[57:27.000 --> 57:29.000]  Так.
[57:29.000 --> 57:32.000]  Я тут должен рассмотреть.
[57:37.000 --> 57:39.000]  Да?
[57:39.000 --> 57:41.000]  Да и нет.
[57:41.000 --> 57:43.000]  Ой, или нет.
[57:43.000 --> 57:45.000]  Попробую рассмотреть.
[57:53.000 --> 57:55.000]  Ну, хотя ладно.
[57:55.000 --> 57:57.000]  Ладно, не буду показывать, где зависит корреспонд.
[57:57.000 --> 58:00.000]  А лучше просто сохранить себе
[58:00.000 --> 58:03.000]  немного идей выпусти.
[58:03.000 --> 58:06.000]  Потому что, говоря о фрешере,
[58:06.000 --> 58:09.000]  о диаметре нельзя не упомянуть о такой
[58:09.000 --> 58:12.000]  приятной вещи, как тернарный поиск.
[58:16.000 --> 58:18.000]  Ну,
[58:18.000 --> 58:21.000]  ну, и здесь на самом деле тоже.
[58:30.000 --> 58:31.000]  Вот.
[58:31.000 --> 58:32.000]  Значит, что же?
[58:32.000 --> 58:34.000]  Итак, давайте так попробуем.
[58:34.000 --> 58:35.000]  Вот.
[58:35.000 --> 58:37.000]  Тернарный поиск.
[58:42.000 --> 58:43.000]  Так.
[58:43.000 --> 58:45.000]  Ну, о чем речь?
[58:45.000 --> 58:46.000]  Вот.
[58:46.000 --> 58:49.000]  Ну, на самом деле речь о том, что хочется искать минимум
[58:49.000 --> 58:52.000]  на функция специального вида.
[58:52.000 --> 58:55.000]  Что это за специальный вид?
[58:55.000 --> 58:57.000]  Ну, давайте введем так.
[58:57.000 --> 58:59.000]  То есть определение.
[58:59.000 --> 59:02.000]  Мы уже почти дошли до генпоиска.
[59:02.000 --> 59:04.000]  На генпоиск.
[59:04.000 --> 59:05.000]  Мы близки.
[59:05.000 --> 59:06.000]  Так вот.
[59:06.000 --> 59:09.000]  Пусть у нас есть какая-то функция
[59:09.000 --> 59:12.000]  от A до B.
[59:12.000 --> 59:17.000]  И будем называть эту функцию унимодальной.
[59:24.000 --> 59:27.000]  Если
[59:27.000 --> 59:30.000]  существует такой X0
[59:30.000 --> 59:33.000]  на отрезке AB,
[59:33.000 --> 59:36.000]  что F строго убывает
[59:42.000 --> 59:45.000]  на отрезке AX
[59:48.000 --> 59:51.000]  и строго возрастает.
[01:00:01.000 --> 01:00:03.000]  Вот.
[01:00:12.000 --> 01:00:14.000]  Я тоже вот это не понял.
[01:00:14.000 --> 01:00:15.000]  Что?
[01:00:15.000 --> 01:00:17.000]  Я тоже не понял.
[01:00:17.000 --> 01:00:19.000]  Еще там две точки.
[01:00:19.000 --> 01:00:22.000]  Ну, я просто привык это отрезка
[01:00:22.000 --> 01:00:24.000]  как подстройки писать.
[01:00:24.000 --> 01:00:25.000]  Вот.
[01:00:25.000 --> 01:00:26.000]  Ну, давайте так.
[01:00:26.000 --> 01:00:28.000]  Так, пожалуй, адекватнее.
[01:00:28.000 --> 01:00:29.000]  Вот.
[01:00:29.000 --> 01:00:31.000]  То есть смотрите.
[01:00:31.000 --> 01:00:32.000]  Чем приятна эта функция?
[01:00:32.000 --> 01:00:34.000]  Функция приятна тем, что вот этот...
[01:00:34.000 --> 01:00:35.000]  Допустим, если нам известно,
[01:00:35.000 --> 01:00:37.000]  что функция унимодальная,
[01:00:37.000 --> 01:00:41.000]  но минимум нам при этом неизвестен.
[01:00:41.000 --> 01:00:45.000]  Тогда оказывается, что этот минимум можно искать
[01:00:45.000 --> 01:00:48.000]  в генпоиске.
[01:00:48.000 --> 01:00:49.000]  Генпоиск?
[01:00:49.000 --> 01:00:50.000]  Ну, вот.
[01:00:50.000 --> 01:00:53.000]  А именно за, допустим...
[01:00:53.000 --> 01:00:54.000]  То есть, ну вот.
[01:00:54.000 --> 01:00:56.000]  А именно...
[01:00:56.000 --> 01:01:01.000]  Ну, точно мы этот X0 не найдем,
[01:01:01.000 --> 01:01:04.000]  но мы найдем маленький отрезочек,
[01:01:04.000 --> 01:01:06.000]  на котором он находится.
[01:01:06.000 --> 01:01:07.000]  Этот отрезок.
[01:01:07.000 --> 01:01:08.000]  Ну вот.
[01:01:08.000 --> 01:01:10.000]  То есть если мы сделаем там K-итерации,
[01:01:10.000 --> 01:01:14.000]  то длина этого отрезочка будет меньше отрезочка AB
[01:01:14.000 --> 01:01:18.000]  где-то в полтора в степени K раз.
[01:01:18.000 --> 01:01:22.000]  Даже не где-то, а просто ровно.
[01:01:22.000 --> 01:01:24.000]  Да, именно полтора.
[01:01:24.000 --> 01:01:25.000]  Почему?
[01:01:25.000 --> 01:01:28.000]  Ну, потому что как у нас работает тогда-то поиск?
[01:01:28.000 --> 01:01:29.000]  То есть функция...
[01:01:29.000 --> 01:01:30.000]  То есть как выглядит функция?
[01:01:30.000 --> 01:01:32.000]  Функция обычно выглядит вот как-то вот так.
[01:01:32.000 --> 01:01:34.000]  Я ее вот так вот нарисую,
[01:01:34.000 --> 01:01:38.000]  чтобы вы не начали думать, что она будет в этом.
[01:01:38.000 --> 01:01:44.000]  Вот такая типичная унимодальная функция.
[01:01:44.000 --> 01:01:46.000]  Как найти минимум?
[01:01:46.000 --> 01:01:48.000]  А вот как.
[01:01:48.000 --> 01:01:53.000]  Значит, здесь у нас допустим отрезок AB.
[01:01:53.000 --> 01:01:55.000]  А, тут отрезок D.
[01:01:55.000 --> 01:01:59.000]  Давайте разделим этот отрезок на три равные части.
[01:01:59.000 --> 01:02:00.000]  Мой такой.
[01:02:00.000 --> 01:02:02.000]  X0, X1.
[01:02:02.000 --> 01:02:06.000]  Или XL, XL.
[01:02:06.000 --> 01:02:08.000]  И давайте вычтем значение функции f в этой точке.
[01:02:08.000 --> 01:02:12.000]  Я выливаю это способом.
[01:02:12.000 --> 01:02:14.000]  Ну, предположим, что мы здесь предполагаем,
[01:02:14.000 --> 01:02:15.000]  что у нас есть черный ящик,
[01:02:15.000 --> 01:02:20.000]  который умеет по заданному X вычислять f от X за одну конец.
[01:02:20.000 --> 01:02:21.000]  Тогда идея такая.
[01:02:21.000 --> 01:02:26.000]  Предположим, что выяснилось, что f от XL больше.
[01:02:26.000 --> 01:02:31.000]  То есть пусть выяснилось, что f от XL больше, чем f от XL.
[01:02:31.000 --> 01:02:35.000]  Тогда выясняет мистическое утверждение.
[01:02:35.000 --> 01:02:37.000]  Мистическое утверждение заключается в том,
[01:02:37.000 --> 01:02:40.000]  что тогда я утверждаю, что слева от XL
[01:02:40.000 --> 01:02:46.000]  минимум находиться заведомо не может.
[01:02:46.000 --> 01:02:48.000]  Почему так?
[01:02:48.000 --> 01:02:50.000]  Ну, понятно, почему.
[01:02:50.000 --> 01:02:53.000]  Да просто потому, что если минимум окажется именно слева,
[01:02:53.000 --> 01:02:55.000]  то у нас, оказывается, мистическая точка такая,
[01:02:55.000 --> 01:02:58.000]  что у нее слева есть что-то меньше и справа что-то меньше.
[01:02:58.000 --> 01:03:00.000]  А у нас такого не бывает.
[01:03:00.000 --> 01:03:03.000]  У нас у любой точки либо слева все больше,
[01:03:03.000 --> 01:03:06.000]  либо справа все больше.
[01:03:06.000 --> 01:03:07.000]  Почему не так?
[01:03:07.000 --> 01:03:11.000]  Ну, строго говоря, конечно, наказывали, но понятно.
[01:03:11.000 --> 01:03:15.000]  Так, хорошо, утверждение.
[01:03:15.000 --> 01:03:21.000]  Для любой точки X века что-либо слева от X значение функции f все больше,
[01:03:21.000 --> 01:03:25.000]  либо справа все значения больше, в общем, строго больше.
[01:03:25.000 --> 01:03:27.000]  Доказательство очевидно.
[01:03:27.000 --> 01:03:29.000]  Вот, поэтому...
[01:03:30.000 --> 01:03:36.000]  Так что тут, как вы видите, что это...
[01:03:36.000 --> 01:03:38.000]  что-то тут не строго.
[01:03:38.000 --> 01:03:40.000]  Ну, вот.
[01:03:40.000 --> 01:03:44.000]  Так вот, тогда получается, что за два вызова функции мы можем сократить
[01:03:44.000 --> 01:03:47.000]  отрезок поиска минимума в полтора раза.
[01:03:47.000 --> 01:03:51.000]  Ну, понятно, что если наказалось наоборот, то мы кидываем правую.
[01:03:51.000 --> 01:03:53.000]  Вот.
[01:03:53.000 --> 01:03:55.000]  Корень из полтора.
[01:03:55.000 --> 01:03:59.000]  Вот, то есть, по сути, в результате асимптотика на самом деле
[01:03:59.000 --> 01:04:03.000]  от логарифма полтора...
[01:04:03.000 --> 01:04:04.000]  Ну, конечно так.
[01:04:04.000 --> 01:04:05.000]  Ага.
[01:04:05.000 --> 01:04:09.000]  В камнячках пишу, потому что понятно, логарифма...
[01:04:09.000 --> 01:04:14.000]  Значит, тут самое интересное, то есть b-a делить на ε.
[01:04:14.000 --> 01:04:18.000]  Где ε, это с какой точностью вы хотите найти минимум?
[01:04:18.000 --> 01:04:20.000]  Ну, еще на 2, да?
[01:04:20.000 --> 01:04:21.000]  Ну, тогда да.
[01:04:21.000 --> 01:04:24.000]  Раз уж вы логарифм полтора не делали.
[01:04:24.000 --> 01:04:26.000]  Ну, тут вещь такая.
[01:04:26.000 --> 01:04:28.000]  Да, тут конечно.
[01:04:28.000 --> 01:04:30.000]  Можно оценивать количество запусков, когда будет...
[01:04:30.000 --> 01:04:32.000]  Да, короче, 2.
[01:04:32.000 --> 01:04:34.000]  Ну, будем это иметь в виду.
[01:04:34.000 --> 01:04:39.000]  Ну, потому что да, отметим, что эту двойку можно немножко оптимизировать.
[01:04:39.000 --> 01:04:43.000]  Да, кстати, в принципе, очень любят, на самом деле, оптимизировать...
[01:04:43.000 --> 01:04:46.000]  То есть, этот тардардный поиск очень любят оптимизировать
[01:04:46.000 --> 01:04:48.000]  на самом деле следующим образом.
[01:04:48.000 --> 01:04:50.000]  То есть, я видел такой красивый...
[01:04:50.000 --> 01:04:53.000]  То есть, когда кто-то пытался пихать тардардный поиск,
[01:04:53.000 --> 01:04:55.000]  я, по-моему, видел, просто едва ли не...
[01:04:55.000 --> 01:04:59.000]  По-моему, едва ли не въел от палок, кстати, в какой-то момент.
[01:04:59.000 --> 01:05:01.000]  Или у кого-то из них.
[01:05:01.000 --> 01:05:03.000]  Видел вообще эпический вариант.
[01:05:03.000 --> 01:05:05.000]  Иксы, агамло...
[01:05:09.000 --> 01:05:11.000]  В общем, что-то такое.
[01:05:11.000 --> 01:05:13.000]  Ну да.
[01:05:13.000 --> 01:05:19.000]  Ну, если вы откроете задачу про вписанную окружность в домашние,
[01:05:19.000 --> 01:05:23.000]  вы там увидите столько оптимизации тернарного поиска в моем решении,
[01:05:23.000 --> 01:05:25.000]  что вам на всю жизнь хватит.
[01:05:33.000 --> 01:05:37.000]  Ну типа дан выпуклый многугольник, найдите вписанную окружность максимального радиуса.
[01:05:43.000 --> 01:05:48.000]  Ну вот, там заходит вложенный тернарник, но нужно пихать с ноги.
[01:05:49.000 --> 01:05:51.000]  Настолько пихать?
[01:05:51.000 --> 01:05:53.000]  Ну типа там ты пишешь уже необычное,
[01:05:53.000 --> 01:05:55.000]  оно работает десять раз дольше, чем тебе нужно.
[01:05:55.000 --> 01:05:57.000]  Да?
[01:05:57.000 --> 01:05:59.000]  Вот, и ты его прям оптимизируешь, оптимизируешь, оптимизируешь, оптимизируешь.
[01:06:01.000 --> 01:06:03.000]  Вот это, видимо, как писать.
[01:06:03.000 --> 01:06:07.000]  Ну, возможно, я не все окимизации тернарные поменял, но...
[01:06:07.000 --> 01:06:09.000]  У меня вон там, типа, один...
[01:06:09.000 --> 01:06:11.000]  По-моему, одиннадцать...
[01:06:11.000 --> 01:06:13.000]  Нет, сейчас.
[01:06:13.000 --> 01:06:15.000]  Двадцать один А плюс двадцать В девять на сорок один.
[01:06:15.000 --> 01:06:17.000]  Ой, ой, ой, ой.
[01:06:19.000 --> 01:06:21.000]  Ну, в принципе, да.
[01:06:21.000 --> 01:06:23.000]  Но, в принципе, будем иметь в виду,
[01:06:23.000 --> 01:06:25.000]  что такие оптимизации дадут.
[01:06:25.000 --> 01:06:27.000]  Такие оптимизации есть, они приятные.
[01:06:27.000 --> 01:06:29.000]  Но тут, конечно, слишком, конечно,
[01:06:29.000 --> 01:06:31.000]  тут семерок разумеет,
[01:06:31.000 --> 01:06:33.000]  он совсем сто один,
[01:06:33.000 --> 01:06:35.000]  как бы, не всегда в полезном смысле,
[01:06:35.000 --> 01:06:37.000]  иногда уже начинает точно сломаться.
[01:06:37.000 --> 01:06:39.000]  Вот.
[01:06:39.000 --> 01:06:41.000]  Значит, у нас двое.
[01:06:41.000 --> 01:06:43.000]  Да, ну и нельзя не отметить,
[01:06:43.000 --> 01:06:45.000]  что, в принципе, если
[01:06:45.000 --> 01:06:47.000]  специально подгонять тут,
[01:06:47.000 --> 01:06:49.000]  на самом деле, XA или XR,
[01:06:49.000 --> 01:06:51.000]  то можно добиться того,
[01:06:51.000 --> 01:06:53.000]  чтобы вот этой двоечки
[01:06:53.000 --> 01:06:55.000]  тут не было.
[01:06:55.000 --> 01:06:57.000]  Если тут у всех есть знаменитые
[01:06:57.000 --> 01:06:59.000]  числа phi.
[01:07:05.000 --> 01:07:07.000]  Ну, просто идея такая.
[01:07:07.000 --> 01:07:09.000]  Идея заключается в том,
[01:07:09.000 --> 01:07:11.000]  что вот у нас есть отрезок АВ.
[01:07:11.000 --> 01:07:13.000]  Давайте подгоним
[01:07:13.000 --> 01:07:15.000]  XA или XR
[01:07:15.000 --> 01:07:17.000]  таким образом, что
[01:07:17.000 --> 01:07:19.000]  когда мы вот перейдем к отрезку, скажем,
[01:07:19.000 --> 01:07:21.000]  XLB, выяснилось, что одна из этих двух точек
[01:07:21.000 --> 01:07:23.000]  это будет в точности XR.
[01:07:25.000 --> 01:07:27.000]  Вот давайте такое подгоним.
[01:07:29.000 --> 01:07:31.000]  Но как же это сделать?
[01:07:31.000 --> 01:07:33.000]  А вот как.
[01:07:33.000 --> 01:07:35.000]  Ну, потому что для того, чтобы это было,
[01:07:35.000 --> 01:07:37.000]  чтобы это было так, заметим, что
[01:07:37.000 --> 01:07:39.000]  должно произойти следующее. Надо, чтобы
[01:07:39.000 --> 01:07:41.000]  XL-A делить на B-A
[01:07:41.000 --> 01:07:43.000]  был просто равен
[01:07:43.000 --> 01:07:45.000]  XR-XA
[01:07:45.000 --> 01:07:47.000]  делить на
[01:07:47.000 --> 01:07:49.000]  XR-A.
[01:07:59.000 --> 01:08:01.000]  Но при этом еще
[01:08:01.000 --> 01:08:03.000]  оказывается верно,
[01:08:03.000 --> 01:08:05.000]  но при этом мы
[01:08:05.000 --> 01:08:07.000]  напоминаем, что еще верно, что
[01:08:07.000 --> 01:08:09.000]  что у нас верно.
[01:08:09.000 --> 01:08:11.000]  Что
[01:08:11.000 --> 01:08:13.000]  B-XR
[01:08:13.000 --> 01:08:15.000]  равно
[01:08:15.000 --> 01:08:17.000]  XL-A.
[01:08:19.000 --> 01:08:21.000]  Ну, типа у нас симметрия такая.
[01:08:25.000 --> 01:08:27.000]  Так, ну вот теперь
[01:08:27.000 --> 01:08:29.000]  выясняет
[01:08:29.000 --> 01:08:31.000]  естественный вопрос
[01:08:31.000 --> 01:08:33.000]  объясните, к чему должно быть
[01:08:33.000 --> 01:08:35.000]  равно XL и к чему
[01:08:35.000 --> 01:08:37.000]  самое главное должна быть равна вот
[01:08:37.000 --> 01:08:39.000]  этого константа.
[01:08:47.000 --> 01:08:49.000]  Ну, давайте.
[01:08:49.000 --> 01:08:51.000]  То есть, допустим, если эту константу
[01:08:51.000 --> 01:08:53.000]  нарисовать она равна к чему-нибудь,
[01:08:53.000 --> 01:08:55.000]  я не знаю, альфа,
[01:08:55.000 --> 01:08:57.000]  ну, тогда какие условия на альфу
[01:08:57.000 --> 01:08:59.000]  нас должны соблюдать?
[01:09:07.000 --> 01:09:09.000]  То есть, давайте тогда
[01:09:09.000 --> 01:09:11.000]  я предположу.
[01:09:11.000 --> 01:09:13.000]  Ну, то есть, тогда
[01:09:13.000 --> 01:09:15.000]  утверждение такое,
[01:09:15.000 --> 01:09:17.000]  что должно быть так, что длина
[01:09:17.000 --> 01:09:19.000]  если вот эта вот константа
[01:09:19.000 --> 01:09:21.000]  это альфа, то тогда получается следующее,
[01:09:21.000 --> 01:09:23.000]  что тогда если принять
[01:09:23.000 --> 01:09:25.000]  отрезка AB за единицу
[01:09:25.000 --> 01:09:27.000]  его длину, то тогда длина вот
[01:09:27.000 --> 01:09:29.000]  этого отрезка равна альфа,
[01:09:29.000 --> 01:09:31.000]  вот этого альфа,
[01:09:31.000 --> 01:09:33.000]  а вот этого она получается
[01:09:33.000 --> 01:09:35.000]  1-α
[01:09:35.000 --> 01:09:37.000]  тоже умножить на альфу.
[01:09:37.000 --> 01:09:39.000]  И тогда отсюда
[01:09:39.000 --> 01:09:41.000]  мы выводим маленькую
[01:09:41.000 --> 01:09:43.000]  приятную вещь.
[01:09:43.000 --> 01:09:45.000]  То есть, альфа плюс
[01:09:45.000 --> 01:09:47.000]  1-α на альфа плюс
[01:09:47.000 --> 01:09:49.000]  альфа должно быть равно 1.
[01:09:51.000 --> 01:09:53.000]  И тогда получается,
[01:09:53.000 --> 01:09:55.000]  что, да, раскрываем
[01:09:55.000 --> 01:09:57.000]  столбочки, что там у нас
[01:09:57.000 --> 01:09:59.000]  получается? Альфа плюс
[01:09:59.000 --> 01:10:01.000]  альфа минус альфа
[01:10:01.000 --> 01:10:03.000]  квадрат плюс альфа
[01:10:03.000 --> 01:10:05.000]  равно 1.
[01:10:07.000 --> 01:10:09.000]  Или что то же самое,
[01:10:09.000 --> 01:10:11.000]  0 равно альфа квадрат
[01:10:11.000 --> 01:10:13.000]  минус 3 альфа плюс
[01:10:13.000 --> 01:10:15.000]  1.
[01:10:15.000 --> 01:10:17.000]  Понятно, да?
[01:10:19.000 --> 01:10:21.000]  Так, ну понятно,
[01:10:21.000 --> 01:10:23.000]  решаем уравнение, дискриминат
[01:10:23.000 --> 01:10:25.000]  равен 5, альфа
[01:10:25.000 --> 01:10:27.000]  равно получается 3,
[01:10:29.000 --> 01:10:31.000]  соответственно, плюс-минус
[01:10:31.000 --> 01:10:33.000]  корень из 5 пополам.
[01:10:35.000 --> 01:10:37.000]  Ну, очевидно, что должно быть равно
[01:10:37.000 --> 01:10:39.000]  минус корень из 5, потому что альфа должна быть
[01:10:39.000 --> 01:10:41.000]  меньше интересной.
[01:10:41.000 --> 01:10:43.000]  Вот такая константа.
[01:10:47.000 --> 01:10:49.000]  Но приятнее, конечно,
[01:10:49.000 --> 01:10:51.000]  посмотреть даже чему равно 1-α.
[01:10:53.000 --> 01:10:55.000]  Потому что 1-α равно
[01:10:55.000 --> 01:10:57.000]  корень из 5 минус 1
[01:10:57.000 --> 01:10:59.000]  пополам, и это то самое
[01:10:59.000 --> 01:11:01.000]  солотое счение.
[01:11:05.000 --> 01:11:07.000]  Ну ладно, не совсем
[01:11:07.000 --> 01:11:09.000]  то самое, конечно, но
[01:11:11.000 --> 01:11:13.000]  ладно, оно равно, знаете, оно равно не 5,
[01:11:13.000 --> 01:11:15.000]  оно равно 1.
[01:11:17.000 --> 01:11:19.000]  Ну, потому что само корень из 5 плюс
[01:11:19.000 --> 01:11:21.000]  идет пополам.
[01:11:23.000 --> 01:11:25.000]  И поэтому
[01:11:25.000 --> 01:11:27.000]  можно делать
[01:11:27.000 --> 01:11:29.000]  итерации, но тогда,
[01:11:31.000 --> 01:11:33.000]  чем приятное солотое счение,
[01:11:33.000 --> 01:11:35.000]  тем, что лишних итераций делать не надо.
[01:11:35.000 --> 01:11:37.000]  На самом деле нужно сказать, что вот тут,
[01:11:37.000 --> 01:11:39.000]  если мы берем очень близкие
[01:11:39.000 --> 01:11:41.000]  А и В, у нас получается
[01:11:41.000 --> 01:11:43.000]  просто бинплост по знаку производной.
[01:11:45.000 --> 01:11:47.000]  Ну, можно и так сказать, да.
[01:11:47.000 --> 01:11:49.000]  А и В?
[01:11:49.000 --> 01:11:51.000]  Ну, если мы берем очень близкие точки,
[01:11:51.000 --> 01:11:53.000]  то получается как будто производная.
[01:11:53.000 --> 01:11:55.000]  Ну, ведь это так.
[01:11:55.000 --> 01:11:57.000]  И типа у нас слева производная меньше,
[01:11:57.000 --> 01:11:59.000]  а справа больше.
[01:11:59.000 --> 01:12:01.000]  Ну, да, правда,
[01:12:01.000 --> 01:12:03.000]  никто не понимал, что производная существует.
[01:12:03.000 --> 01:12:05.000]  Ну, да, но это
[01:12:05.000 --> 01:12:07.000]  приближение.
[01:12:09.000 --> 01:12:11.000]  Теперь вы сказали, что есть такая
[01:12:11.000 --> 01:12:13.000]  воплисть, как торганальная поиска.
[01:12:13.000 --> 01:12:15.000]  Она работает на университете.
[01:12:15.000 --> 01:12:17.000]  Но университет, но в задачах
[01:12:17.000 --> 01:12:19.000]  обычно, чтобы доказать, что торганальная поиска
[01:12:19.000 --> 01:12:21.000]  работает, надо доказать, что функция университета.
[01:12:21.000 --> 01:12:23.000]  Как же доказать, что функция университета?
[01:12:23.000 --> 01:12:25.000]  Поверьте.
[01:12:25.000 --> 01:12:27.000]  Но при этом не зная в точности
[01:12:27.000 --> 01:12:29.000]  ее мегаполисность.
[01:12:29.000 --> 01:12:31.000]  Ну, ладно.
[01:12:31.000 --> 01:12:33.000]  Но самый популярный способ
[01:12:33.000 --> 01:12:35.000]  доказать, что функция
[01:12:35.000 --> 01:12:37.000]  выпуклась.
[01:12:39.000 --> 01:12:41.000]  А что такое выпуклая функция?
[01:12:41.000 --> 01:12:43.000]  Такой, давайте берем.
[01:12:43.000 --> 01:12:45.000]  Для этого давайте уберем переводича у нас.
[01:12:45.000 --> 01:12:47.000]  Оно мешает.
[01:12:47.000 --> 01:12:49.000]  Ну, не то, что помешает, но...
[01:12:49.000 --> 01:12:51.000]  Заговори мне об этом.
[01:12:51.000 --> 01:12:53.000]  Жалко нас.
[01:12:53.000 --> 01:12:55.000]  Ну, хорошая идея.
[01:12:57.000 --> 01:12:59.000]  И ты иди, Игорь Иванович.
[01:13:11.000 --> 01:13:13.000]  Вот. Итак.
[01:13:13.000 --> 01:13:15.000]  Ну, давайте.
[01:13:15.000 --> 01:13:17.000]  Будем делать как, значит, определение.
[01:13:19.000 --> 01:13:21.000]  Значит, функция f
[01:13:21.000 --> 01:13:23.000]  значит a, b,
[01:13:23.000 --> 01:13:25.000]  v, r
[01:13:25.000 --> 01:13:27.000]  выпукла вниз.
[01:13:31.000 --> 01:13:33.000]  Если
[01:13:35.000 --> 01:13:37.000]  ее
[01:13:37.000 --> 01:13:39.000]  над график
[01:13:45.000 --> 01:13:47.000]  на отрезке a, b
[01:13:49.000 --> 01:13:51.000]  является
[01:13:55.000 --> 01:13:57.000]  выпуклым множеством точек.
[01:14:13.000 --> 01:14:15.000]  Вот, по идее, можно
[01:14:15.000 --> 01:14:17.000]  определить функцию.
[01:14:17.000 --> 01:14:19.000]  Не буду писать, но вы будете радоваться, что
[01:14:19.000 --> 01:14:21.000]  аналогичным образом можно
[01:14:21.000 --> 01:14:23.000]  определить понятие выпуклая
[01:14:23.000 --> 01:14:25.000]  функцию с флотом.
[01:14:27.000 --> 01:14:29.000]  Понятно, да?
[01:14:37.000 --> 01:14:39.000]  Вот.
[01:14:41.000 --> 01:14:43.000]  Теперь мы искали этот вопрос.
[01:14:43.000 --> 01:14:45.000]  Что можно искать
[01:14:45.000 --> 01:14:47.000]  выпуклую вниз функцию?
[01:14:53.000 --> 01:14:55.000]  Есть, кстати, больших соблазнов сказать, что
[01:14:55.000 --> 01:14:57.000]  выпуклая вниз на отрезке функции
[01:14:57.000 --> 01:14:59.000]  неприоритно.
[01:15:09.000 --> 01:15:11.000]  Такая полоса.
[01:15:15.000 --> 01:15:17.000]  Ну,
[01:15:17.000 --> 01:15:19.000]  это, конечно,
[01:15:19.000 --> 01:15:21.000]  неправда.
[01:15:21.000 --> 01:15:23.000]  Потому что мы можем
[01:15:23.000 --> 01:15:25.000]  выколоть, мы можем
[01:15:25.000 --> 01:15:27.000]  в самой левой границе
[01:15:27.000 --> 01:15:29.000]  поставить точку разрыва.
[01:15:29.000 --> 01:15:31.000]  Вот.
[01:15:31.000 --> 01:15:33.000]  Но внутренней
[01:15:33.000 --> 01:15:35.000]  точке разрыва, кажется, не должно быть.
[01:15:35.000 --> 01:15:37.000]  Да.
[01:15:37.000 --> 01:15:39.000]  Да,
[01:15:39.000 --> 01:15:41.000]  мы заметим нашу. Пункция, конечно,
[01:15:41.000 --> 01:15:43.000]  не неприоритна. И даже более
[01:15:43.000 --> 01:15:45.000]  этого минимум не достигается.
[01:15:49.000 --> 01:15:51.000]  В принципе, может
[01:15:51.000 --> 01:15:53.000]  минимум быть выколотен.
[01:15:53.000 --> 01:15:55.000]  Но если в концах непрерывно, то, кажется,
[01:15:55.000 --> 01:15:57.000]  на отрезке тоже должно быть.
[01:15:59.000 --> 01:16:01.000]  Да. Но давайте
[01:16:01.000 --> 01:16:03.000]  смотреть. Потому что, очевидно, у нас
[01:16:03.000 --> 01:16:05.000]  в точке разрыва производная
[01:16:05.000 --> 01:16:07.000]  вертикальная, как будто бы.
[01:16:07.000 --> 01:16:09.000]  Нет, ну,
[01:16:09.000 --> 01:16:11.000]  смотрите,
[01:16:11.000 --> 01:16:13.000]  ну, давайте смотреть.
[01:16:13.000 --> 01:16:15.000]  Утверждается, что действительно
[01:16:15.000 --> 01:16:17.000]  внутренних точек разрыва на самом деле
[01:16:17.000 --> 01:16:19.000]  не бывает.
[01:16:19.000 --> 01:16:21.000]  Почему?
[01:16:21.000 --> 01:16:23.000]  А вот почему. Ну, потому что, допустим,
[01:16:23.000 --> 01:16:25.000]  у нас есть какая-то внутренняя точка разрыва.
[01:16:29.000 --> 01:16:31.000]  Так, ну, давайте посмотрим,
[01:16:31.000 --> 01:16:33.000]  какой у этой точки,
[01:16:33.000 --> 01:16:35.000]  то есть, заметим, что
[01:16:35.000 --> 01:16:37.000]  если рассмотреть,
[01:16:37.000 --> 01:16:39.000]  если х стремится,
[01:16:39.000 --> 01:16:41.000]  допустим, вот этой х0 назовем,
[01:16:41.000 --> 01:16:43.000]  х может стремиться справа,
[01:16:43.000 --> 01:16:45.000]  х может стремиться слева. И в каждом из
[01:16:45.000 --> 01:16:47.000]  изестреблений есть какие-то частичные пределы.
[01:16:49.000 --> 01:16:51.000]  Просто?
[01:16:51.000 --> 01:16:53.000]  То есть нам, по сути, надо доказать, что никаких
[01:16:53.000 --> 01:16:55.000]  частичных пределов, кроме вот этого значения
[01:16:55.000 --> 01:16:57.000]  фунта, кроме f от х0 у нас
[01:16:57.000 --> 01:16:59.000]  нет. Правда?
[01:17:01.000 --> 01:17:03.000]  И действительно. Вот давайте себе представим,
[01:17:03.000 --> 01:17:05.000]  что у нас есть частичный предел,
[01:17:05.000 --> 01:17:07.000]  который находится
[01:17:09.000 --> 01:17:11.000]  выше.
[01:17:11.000 --> 01:17:13.000]  Вот, допустим, у нас есть какой-то частичный предел,
[01:17:13.000 --> 01:17:15.000]  который находится выше, чем f от х0.
[01:17:27.000 --> 01:17:29.000]  Тогда смотрите, как это...
[01:17:29.000 --> 01:17:31.000]  Ну, тогда у нас третья противоречия
[01:17:31.000 --> 01:17:33.000]  в пределе f.
[01:17:35.000 --> 01:17:37.000]  Смотрите, как редко.
[01:17:37.000 --> 01:17:39.000]  Вот.
[01:17:41.000 --> 01:17:43.000]  Потому что давайте
[01:17:43.000 --> 01:17:45.000]  предположим, что у нас тут слева есть вот явно
[01:17:45.000 --> 01:17:47.000]  какая-то точка, где-то очень-очень близко
[01:17:47.000 --> 01:17:49.000]  к прямой, да?
[01:17:49.000 --> 01:17:51.000]  Ну, ладно, не совсем так.
[01:17:51.000 --> 01:17:53.000]  Вот, где-то достаточно...
[01:17:53.000 --> 01:17:55.000]  То есть идея такая, что
[01:17:55.000 --> 01:17:57.000]  пусть у нас, допустим, справа есть частичные
[01:17:57.000 --> 01:17:59.000]  пределы.
[01:17:59.000 --> 01:18:01.000]  Да. Давайте самый... Да.
[01:18:01.000 --> 01:18:03.000]  И давайте самый простой случай рассмотрим.
[01:18:03.000 --> 01:18:05.000]  Если у нас этот частичный предел достигается
[01:18:05.000 --> 01:18:07.000]  и справа, и слева,
[01:18:07.000 --> 01:18:09.000]  что это значит?
[01:18:09.000 --> 01:18:11.000]  Тогда это значит, что у этой точки есть просто какая-то
[01:18:11.000 --> 01:18:13.000]  окрестность, в которую тут попадает
[01:18:13.000 --> 01:18:15.000]  там бесконечно много точек
[01:18:15.000 --> 01:18:17.000]  и здесь видно.
[01:18:17.000 --> 01:18:19.000]  Но если тут две точки в такие попадают,
[01:18:19.000 --> 01:18:21.000]  то мы проводим через них
[01:18:21.000 --> 01:18:23.000]  отрезочек,
[01:18:29.000 --> 01:18:31.000]  а, и, собственно, что?
[01:18:37.000 --> 01:18:39.000]  Ну, и, казалось бы, само по себе ничего.
[01:18:41.000 --> 01:18:43.000]  Ну, надо не из них, а точку разрыва провести.
[01:18:43.000 --> 01:18:45.000]  Да. Ну, хорошо.
[01:18:45.000 --> 01:18:47.000]  В внешнем образом.
[01:18:49.000 --> 01:18:51.000]  Какие у нас что-то про внешнюю?
[01:18:51.000 --> 01:18:53.000]  Ну, в плане
[01:18:53.000 --> 01:18:55.000]  и с правой точки провести
[01:18:55.000 --> 01:18:57.000]  лопат-х.
[01:18:57.000 --> 01:18:59.000]  Так, ну, проверили.
[01:18:59.000 --> 01:19:01.000]  Вот, допустим, и с правой точки проверили.
[01:19:01.000 --> 01:19:03.000]  Все эти точки должны лежать внутри
[01:19:03.000 --> 01:19:05.000]  фигуры.
[01:19:05.000 --> 01:19:07.000]  Так, да.
[01:19:07.000 --> 01:19:09.000]  Ну, в принципе, да, этого уже достаточно.
[01:19:09.000 --> 01:19:11.000]  И из этого уже следует.
[01:19:11.000 --> 01:19:13.000]  Да, потому что, в принципе, да, это уже противогит.
[01:19:13.000 --> 01:19:15.000]  Почему противогит?
[01:19:15.000 --> 01:19:17.000]  Потому что наметим следующее, что вот этот
[01:19:17.000 --> 01:19:19.000]  отрезок должен целиком лежать в надгразе.
[01:19:19.000 --> 01:19:21.000]  Значит, получается, все точки по иксам
[01:19:21.000 --> 01:19:23.000]  между ними должны лежать ниже этого отрезка.
[01:19:23.000 --> 01:19:25.000]  Ну, или не выше.
[01:19:25.000 --> 01:19:27.000]  Да.
[01:19:27.000 --> 01:19:29.000]  Поэтому, если у нас тут предел лежит где-то выше,
[01:19:29.000 --> 01:19:31.000]  то у нас проблемы.
[01:19:31.000 --> 01:19:33.000]  Понятно, да?
[01:19:33.000 --> 01:19:35.000]  То есть, в принципе, да. То есть, это означает, что
[01:19:35.000 --> 01:19:37.000]  у нас не может быть предела справа
[01:19:37.000 --> 01:19:39.000]  оказывается выше, чем мы хотели.
[01:19:41.000 --> 01:19:43.000]  А может ли у нас быть...
[01:19:43.000 --> 01:19:45.000]  Может вообще не быть
[01:19:45.000 --> 01:19:47.000]  предела справа.
[01:19:47.000 --> 01:19:49.000]  А может ли у нас... Нет.
[01:19:49.000 --> 01:19:51.000]  Ну, у нас может быть предел ниже, чем это фатекс 0,
[01:19:51.000 --> 01:19:53.000]  и такого противоречия не будет.
[01:19:53.000 --> 01:19:55.000]  Понимаете, да?
[01:19:57.000 --> 01:19:59.000]  Да, действительно. То есть, допустим, у нас нашлась
[01:19:59.000 --> 01:20:01.000]  этот предел, тогда это
[01:20:01.000 --> 01:20:03.000]  противоречие нам не даст. В принципе,
[01:20:03.000 --> 01:20:05.000]  само по себе это действительно не противоречие,
[01:20:05.000 --> 01:20:07.000]  потому что вот бывает вот такой случай.
[01:20:07.000 --> 01:20:09.000]  Ну, смотрите, какая фишка.
[01:20:09.000 --> 01:20:11.000]  Может же быть так?
[01:20:11.000 --> 01:20:13.000]  Ну, смотрите.
[01:20:13.000 --> 01:20:15.000]  Дело в том, что у вас не бывает частичных
[01:20:15.000 --> 01:20:17.000]  пределов выше фатекс 0 ни справа,
[01:20:17.000 --> 01:20:19.000]  ни слева.
[01:20:19.000 --> 01:20:21.000]  Ну, слева тоже не бывает
[01:20:21.000 --> 01:20:23.000]  частичного предела выше, чем
[01:20:23.000 --> 01:20:25.000]  фатекс 0.
[01:20:25.000 --> 01:20:27.000]  В том числе плюс бесконечность.
[01:20:29.000 --> 01:20:31.000]  Но допустим, что у вас слева
[01:20:31.000 --> 01:20:33.000]  есть частичный...
[01:20:33.000 --> 01:20:35.000]  Слева неожиданно образовался
[01:20:35.000 --> 01:20:37.000]  частичный предел тоже ниже, чем
[01:20:37.000 --> 01:20:39.000]  фатекс 0.
[01:20:39.000 --> 01:20:41.000]  А, частичный предел всегда
[01:20:41.000 --> 01:20:43.000]  выше фатекс 0.
[01:20:43.000 --> 01:20:45.000]  Ну, частичный предел, да.
[01:20:45.000 --> 01:20:47.000]  Возможно, минус бесконечность.
[01:20:47.000 --> 01:20:49.000]  Вот.
[01:20:49.000 --> 01:20:51.000]  Но если оба частичных предела ниже,
[01:20:51.000 --> 01:20:53.000]  тогда смотрите, какая фишка.
[01:20:53.000 --> 01:20:55.000]  Берем тут точку, тут точку, соединяем.
[01:20:55.000 --> 01:20:57.000]  И тогда оказывается, что вот эта
[01:20:57.000 --> 01:20:59.000]  фатекс 0 должна быть ниже, чем
[01:20:59.000 --> 01:21:01.000]  вот этот фатекс. А это не так.
[01:21:03.000 --> 01:21:05.000]  Но, кстати, если этот вот частичный предел
[01:21:05.000 --> 01:21:07.000]  был бы фатекс 0, то там думается,
[01:21:07.000 --> 01:21:09.000]  что точку тоже можно было бы дать нафиг.
[01:21:11.000 --> 01:21:13.000]  Понятна логика, да?
[01:21:15.000 --> 01:21:17.000]  То есть получается, что
[01:21:17.000 --> 01:21:19.000]  действительно внутренних точек
[01:21:19.000 --> 01:21:21.000]  разрывов на интервале
[01:21:21.000 --> 01:21:23.000]  оказывается нет.
[01:21:23.000 --> 01:21:25.000]  Если у нас не существует частичного
[01:21:25.000 --> 01:21:27.000]  предела неравного фатекс 0,
[01:21:27.000 --> 01:21:29.000]  то функция не прерывна в данной точке.
[01:21:31.000 --> 01:21:33.000]  Если у нас не существует частичного
[01:21:33.000 --> 01:21:35.000]  предела отличного, то это происходит.
[01:21:35.000 --> 01:21:37.000]  Точничный предел существует всегда так,
[01:21:37.000 --> 01:21:39.000]  что получается дистый предел фатекс 0,
[01:21:39.000 --> 01:21:41.000]  а это есть определение не прерывного.
[01:21:47.000 --> 01:21:49.000]  Так что вот так.
[01:21:51.000 --> 01:21:53.000]  Но на самом деле для нас...
[01:21:53.000 --> 01:21:55.000]  Ну давайте так.
[01:21:55.000 --> 01:21:57.000]  Мы видим, что если бы я определял эту
[01:21:57.000 --> 01:21:59.000]  штуку на интервале, то я бы, конечно,
[01:21:59.000 --> 01:22:01.000]  обнаружил, что на интервале
[01:22:01.000 --> 01:22:03.000]  функция не прерывна, правда?
[01:22:05.000 --> 01:22:07.000]  Я мог бы ее определить на отрезке за интервала,
[01:22:07.000 --> 01:22:09.000]  то есть мы тут доказали утверждение,
[01:22:09.000 --> 01:22:11.000]  что...
[01:22:11.000 --> 01:22:13.000]  То есть выпуклая
[01:22:15.000 --> 01:22:17.000]  там F,
[01:22:17.000 --> 01:22:19.000]  значит, АВ,
[01:22:19.000 --> 01:22:21.000]  она, соответственно,
[01:22:21.000 --> 01:22:23.000]  не прерывна
[01:22:27.000 --> 01:22:29.000]  на, соответственно,
[01:22:29.000 --> 01:22:31.000]  этом полуинтервале.
[01:22:31.000 --> 01:22:33.000]  Хотя у вас в том вот анализе не возникало
[01:22:33.000 --> 01:22:35.000]  налоговых утверждений.
[01:22:35.000 --> 01:22:37.000]  И...
[01:22:37.000 --> 01:22:39.000]  По-моему, в первом смене мы обсуждали
[01:22:39.000 --> 01:22:41.000]  выпуклость.
[01:22:41.000 --> 01:22:43.000]  Нет, вы должны были обсуждать выпуклость,
[01:22:43.000 --> 01:22:45.000]  потому что вы должны были считать вторую
[01:22:45.000 --> 01:22:47.000]  предусмотренную рисовой реалией.
[01:22:47.000 --> 01:22:49.000]  Мы обсуждали выпуклость, вроде бы мы про это говорили,
[01:22:49.000 --> 01:22:51.000]  но сто раз об этом не сказали.
[01:22:53.000 --> 01:22:55.000]  Так.
[01:22:55.000 --> 01:22:57.000]  Ну, хорошо.
[01:22:57.000 --> 01:22:59.000]  Значит, теперь, оказывается, есть еще.
[01:23:03.000 --> 01:23:05.000]  Ну, теперь, значит,
[01:23:05.000 --> 01:23:07.000]  еще такое мистическое утверждение.
[01:23:09.000 --> 01:23:11.000]  Значит, теперь вот есть
[01:23:11.000 --> 01:23:13.000]  мистическое утверждение.
[01:23:13.000 --> 01:23:15.000]  Если у нас на полуинтервале есть
[01:23:15.000 --> 01:23:17.000]  выпуклая F,
[01:23:17.000 --> 01:23:19.000]  выпуклая...
[01:23:19.000 --> 01:23:21.000]  Внимание!
[01:23:21.000 --> 01:23:23.000]  Внимание!
[01:23:23.000 --> 01:23:25.000]  Выпуклая...
[01:23:25.000 --> 01:23:27.000]  Внимание! Не монотонная!
[01:23:31.000 --> 01:23:33.000]  F от A-V.
[01:23:39.000 --> 01:23:41.000]  Ай...
[01:23:41.000 --> 01:23:43.000]  Хочется решение модально.
[01:23:49.000 --> 01:23:51.000]  Ну, давайте спелки.
[01:23:53.000 --> 01:23:55.000]  В смысле выпуклая
[01:23:55.000 --> 01:23:57.000]  всегда вниманная.
[01:23:57.000 --> 01:23:59.000]  Ну, очень хочется так сказать.
[01:24:05.000 --> 01:24:07.000]  Но даже не вылечена тюркрика,
[01:24:07.000 --> 01:24:09.000]  и тут все упало.
[01:24:09.000 --> 01:24:11.000]  Выпуклая, не монотонная,
[01:24:11.000 --> 01:24:13.000]  вот по этой вот причине.
[01:24:17.000 --> 01:24:19.000]  Ну, вот.
[01:24:19.000 --> 01:24:21.000]  Ну, вот.
[01:24:21.000 --> 01:24:23.000]  У нас строго выпуклась.
[01:24:27.000 --> 01:24:29.000]  Ну, надо либо строго выпуклась,
[01:24:29.000 --> 01:24:31.000]  либо для наших целей
[01:24:31.000 --> 01:24:33.000]  на самом деле подойдет
[01:24:33.000 --> 01:24:35.000]  небольшая модификация
[01:24:35.000 --> 01:24:37.000]  определение унимодальности.
[01:24:39.000 --> 01:24:41.000]  Да, я сейчас немножко в наглую
[01:24:41.000 --> 01:24:43.000]  попьем.
[01:24:51.000 --> 01:25:09.000]  когда у вас минимум находится не в какой-то точке, но в
[01:25:10.000 --> 01:25:13.000]  в ней его должно быть строгое убывание, строгое вырастание.
[01:25:13.000 --> 01:25:15.000]  тогда вот это не...
[01:25:15.000 --> 01:25:17.000]  почему, а работает?
[01:25:17.000 --> 01:25:20.000]  выбрали XL, XR, они попали на 1
[01:25:20.000 --> 01:25:23.000]  если они попали на минимум, то уже не важно, что будет
[01:25:23.000 --> 01:25:25.000]  важный момент такой, если они...
[01:25:25.000 --> 01:25:29.000]  ну, допустим, во-первых, XL больше, чем XR, допустим, да?
[01:25:29.000 --> 01:25:33.000]  тогда я все еще утверждаю, но, во-первых, решение такое
[01:25:33.000 --> 01:25:36.000]  XL заведомо не минимум, правда?
[01:25:36.000 --> 01:25:38.000]  сейчас XL...
[01:25:38.000 --> 01:25:43.000]  нет, а что если мы получили F от XL равно F от XR?
[01:25:43.000 --> 01:25:45.000]  тогда я утверждаю, что у вас два варианта
[01:25:45.000 --> 01:25:49.000]  либо XL и XR оба попали в этот минимальный отрезок
[01:25:49.000 --> 01:25:52.000]  либо они попали по разные стороны от этого отрезка
[01:25:52.000 --> 01:25:55.000]  и тебе по парабану, собственно, толком выкидывать
[01:25:55.000 --> 01:25:57.000]  но если на отрезке, то тоже...
[01:25:57.000 --> 01:26:01.000]  нет, сейчас, у нас же теперь может быть такое, что...
[01:26:01.000 --> 01:26:04.000]  вот там отрезок, который горизонтальный
[01:26:04.000 --> 01:26:07.000]  именно снизу у нас утверждение отрезок снизу
[01:26:07.000 --> 01:26:12.000]  да, то есть важное, строгое убывание, строгое возрастание, кстати, осталось
[01:26:12.000 --> 01:26:15.000]  помечу на всех числах
[01:26:16.000 --> 01:26:19.000]  а, все, помню
[01:26:19.000 --> 01:26:25.000]  то есть это важно, потому что если у нас были функции какие-то вот такие
[01:26:25.000 --> 01:26:29.000]  то да, то есть, на самом деле, если у нас попадутся равные значения
[01:26:29.000 --> 01:26:32.000]  то мы действительно не понимаем, что делать
[01:26:35.000 --> 01:26:37.000]  да
[01:26:40.000 --> 01:26:44.000]  вот просто что делать, кстати, интересно, есть у тебя пашный вопрос
[01:26:44.000 --> 01:26:47.000]  ну, вот сейчас перерыв, поэтому буду на перерыв задать вопрос
[01:26:47.000 --> 01:26:49.000]  давайте
[01:26:49.000 --> 01:26:51.000]  сейчас на такие ответы
[01:26:51.000 --> 01:26:54.000]  нет, просто интересно, где у вас стандарты будут
[01:26:54.000 --> 01:27:01.000]  как говорится, в Санкт-Петербурге недавно закрылась перемота одной станции метро
[01:27:02.000 --> 01:27:05.000]  и там по местным телеканалам
[01:27:05.000 --> 01:27:10.000]  и даже там просто вокруг нее появились плакаты
[01:27:10.000 --> 01:27:13.000]  с описанием того, что делать
[01:27:15.000 --> 01:27:18.000]  а как называется эта станция?
[01:27:18.000 --> 01:27:21.000]  я не помню, станция метро в Санкт-Петербурге, это не обязательно
[01:27:21.000 --> 01:27:23.000]  ну а кто автор?
[01:27:23.000 --> 01:27:27.000]  ну, ну что вам говорить, мне на них не скажут
[01:27:27.000 --> 01:27:31.000]  интересно, для этого...
[01:27:31.000 --> 01:27:35.000]  вряд ли для этого вопроса нужно сказать, станция метро в Санкт-Петербурге
[01:27:35.000 --> 01:27:38.000]  ну вот, кто автор к ним?
[01:27:38.000 --> 01:27:40.000]  ну, в смысле, кто виноват и что делать?
[01:27:40.000 --> 01:27:41.000]  ну да
[01:27:41.000 --> 01:27:43.000]  ну беговая, наверное
[01:27:43.000 --> 01:27:46.000]  автор, да, автор, так это фамилия, беговой, да?
[01:27:46.000 --> 01:27:49.000]  ну в плане что делать, бегать, снимать штаны и бегать
[01:27:49.000 --> 01:27:50.000]  нет, конечно
[01:27:50.000 --> 01:27:52.000]  да, так и рассуждено
[01:27:52.000 --> 01:27:56.000]  у ЧГК-шников что делать, как-то фамилия Чернышевский появляется там
[01:27:56.000 --> 01:27:58.000]  но мы ничего не...
[01:27:58.000 --> 01:28:00.000]  но мы, к сожалению, маленькие руки
[01:28:00.000 --> 01:28:02.000]  но я считаю, что беговая одна
[01:28:02.000 --> 01:28:07.000]  нет, у меня нет, у меня был другой, я просто на автоматичку отбегал, телескай
[01:28:08.000 --> 01:28:09.000]  почему?
[01:28:09.000 --> 01:28:14.000]  а, ну потому что это там, потому что это вот эта вот станция, в которой там этот переход, вот этот вот линии переход
[01:28:14.000 --> 01:28:17.000]  вот сегодня там открыли вот это вот
[01:28:17.000 --> 01:28:18.000]  чего, а что делать?
[01:28:18.000 --> 01:28:19.000]  ну что делать?
[01:28:19.000 --> 01:28:24.000]  ну типа что делать, если там этот переход закрыт, а стой, развиви там, вот это все
[01:28:25.000 --> 01:28:28.000]  я там что-то, а они так очень сильно действуются
[01:28:28.000 --> 01:28:32.000]  не, не, я просто не подозревал такого глупого знания Питерского, там Питерского транспорта
[01:28:33.000 --> 01:28:34.000]  ну вот, ну как бы да
[01:28:35.000 --> 01:28:36.000]  там вторая идея, там вторая
[01:28:36.000 --> 01:28:39.000]  ну просто по слову, что делать, у меня просто такая ситуация сегодня
[01:28:41.000 --> 01:28:42.000]  так что
[01:28:43.000 --> 01:28:45.000]  так что, главное, пришла время переговорила
[01:28:46.000 --> 01:28:47.000]  так
[01:28:49.000 --> 01:28:50.000]  ой
[01:28:54.000 --> 01:28:55.000]  вот
[01:28:55.000 --> 01:28:56.000]  итак
[01:28:58.000 --> 01:29:01.000]  так вот, вот утверждается, что если модифицировать
[01:29:02.000 --> 01:29:08.000]  определение униматальной функции, в том числе таким образом с отрезком, то тогда, на самом деле
[01:29:09.000 --> 01:29:13.000]  хочется сказать, что утверждение, ну такое утверждение уже верно
[01:29:15.000 --> 01:29:16.000]  вот
[01:29:19.000 --> 01:29:21.000]  вот, спрашивайте, почему же оно верно?
[01:29:24.000 --> 01:29:31.000]  ну, во-первых, тогда давайте начнем с того, что минимум где-то на этой функции возникает
[01:29:34.000 --> 01:29:35.000]  да, она не монотонная
[01:29:35.000 --> 01:29:38.000]  да, начнем с того, что она не монотонная, потому что была бы она
[01:29:38.000 --> 01:29:43.000]  ну потому что действительно была бы функция, там выпуклая функция монотонная, это могла быть какая-нибудь параллока
[01:29:43.000 --> 01:29:47.000]  с вполне себе частичным пределом плюс бесконечности
[01:29:47.000 --> 01:29:49.000]  вот вполне себе такое могло быть
[01:29:50.000 --> 01:29:54.000]  ну, то есть там отдельно отметим, что не может быть там как-нибудь
[01:29:54.000 --> 01:30:01.000]  то есть видимо, не может быть параметрия, внутри одного отрезка, чтобы частичный предел и плюс бесконечности и минус бесконечности
[01:30:02.000 --> 01:30:03.000] ba
[01:30:03.000 --> 01:30:06.000]  да, да, да но внутре ограниченной полосы уж точно
[01:30:07.000 --> 01:30:08.000]  вот
[01:30:08.000 --> 01:30:12.000]  Но давайте думаем, что у нас тут.
[01:30:12.000 --> 01:30:14.000]  Вот.
[01:30:14.000 --> 01:30:16.000]  Вот.
[01:30:16.000 --> 01:30:20.000]  Давайте смотреть.
[01:30:20.000 --> 01:30:24.000]  Как доказать, что линия существует так?
[01:30:24.000 --> 01:30:28.000]  Ну, начнем с того, что у нас функция непрерывная.
[01:30:28.000 --> 01:30:30.000]  И сделаем еще вот так.
[01:30:30.000 --> 01:30:32.000]  Так функция не монотонна.
[01:30:32.000 --> 01:30:34.000]  Да?
[01:30:34.000 --> 01:30:38.000]  Ну, когда мы говорим, выпуклое, давайте сейчас мы будем сказать, что оно будет сложнее.
[01:30:38.000 --> 01:30:40.000]  Да?
[01:30:40.000 --> 01:30:42.000]  Во-первых, давайте так.
[01:30:42.000 --> 01:30:46.000]  Что означает, что функция не монотонна?
[01:30:46.000 --> 01:30:48.000]  Ну, есть три точки.
[01:30:48.000 --> 01:30:50.000]  Это означает, что есть три точки, да.
[01:30:50.000 --> 01:30:52.000]  То есть либо вот такого вида, либо вот такого вида.
[01:30:52.000 --> 01:30:56.000]  Но заметим, что у выпуклой вниз функции вот такого вида не бывает.
[01:30:56.000 --> 01:30:58.000]  Не бывает.
[01:30:58.000 --> 01:31:00.000]  Не бывает.
[01:31:00.000 --> 01:31:02.000]  Ну, причина очень проста.
[01:31:02.000 --> 01:31:06.000]  И обнаружим, что вот эта точка отрезка находится под графиком.
[01:31:06.000 --> 01:31:08.000]  Строго.
[01:31:08.000 --> 01:31:10.000]  Да.
[01:31:14.000 --> 01:31:16.000]  Вот.
[01:31:16.000 --> 01:31:20.000]  Поэтому действительно возникает, видимо, какая-то вот такая ситуация.
[01:31:20.000 --> 01:31:24.000]  Возникает какая-то такая ситуация.
[01:31:24.000 --> 01:31:26.000]  Вот.
[01:31:26.000 --> 01:31:30.000]  Чему, соответственно, это нас приводит.
[01:31:32.000 --> 01:31:34.000]  Вот.
[01:31:34.000 --> 01:31:36.000]  Ну, на самом деле...
[01:31:36.000 --> 01:31:40.000]  Ну, можно на самом деле сказать так.
[01:31:40.000 --> 01:31:46.000]  Я упреждаю, что эта функция либо монотонна на этом отрезке, либо монотонна на этом.
[01:31:46.000 --> 01:31:48.000]  Ладно.
[01:31:48.000 --> 01:31:50.000]  Или потому что, в принципе, возможно и то, и то.
[01:31:50.000 --> 01:31:52.000]  Понимаете, да?
[01:31:54.000 --> 01:31:56.000]  Вот.
[01:31:56.000 --> 01:31:58.000]  Ну, впрочем, на самом деле ладно.
[01:31:58.000 --> 01:32:00.000]  Это даже особо неважно.
[01:32:00.000 --> 01:32:10.000]  Не кажется ли вам, что вот, как минимум, вот на этом отрезке h'b' функция f охранечена снизу?
[01:32:12.000 --> 01:32:14.000]  Прямой.
[01:32:14.000 --> 01:32:16.000]  Прямой.
[01:32:16.000 --> 01:32:18.000]  Какой прямой?
[01:32:18.000 --> 01:32:20.000]  Ну, хотя, да, на самом деле...
[01:32:20.000 --> 01:32:22.000]  Ну, хотя на самом деле можно заметить следующее.
[01:32:22.000 --> 01:32:24.000]  Проведем вот такую прямую.
[01:32:26.000 --> 01:32:28.000]  Мистическое утверждение.
[01:32:28.000 --> 01:32:34.000]  Функция левее вот этой точки, назовем ее z'3, она заведомо лежит выше этой привода.
[01:32:36.000 --> 01:32:40.000]  Ну, потому что лежала бы она здесь, был бы вот такой фейер, правда?
[01:32:40.000 --> 01:32:42.000]  Тогда получается, что...
[01:32:42.000 --> 01:32:46.000]  То есть, на самом деле, тут вся функция лежит вот здесь, но и слева тоже.
[01:32:46.000 --> 01:32:48.000]  То есть, значит, это...
[01:32:48.000 --> 01:32:50.000]  То есть, в принципе...
[01:32:52.000 --> 01:32:54.000]  Ну, вот.
[01:32:54.000 --> 01:32:56.000]  То есть, в принципе, это...
[01:32:56.000 --> 01:33:00.000]  Да, может, на самом деле, конечно, очень соблазнительно показаться, что функция,
[01:33:00.000 --> 01:33:04.000]  то есть, минимум, находится четко в этой точке.
[01:33:04.000 --> 01:33:06.000]  Но это, конечно, не так.
[01:33:06.000 --> 01:33:08.000]  Какой-то.
[01:33:08.000 --> 01:33:12.000]  Потому что, на самом деле, вполне себе вероятно, что тут, на самом деле, будет вот...
[01:33:12.000 --> 01:33:14.000]  Вот так.
[01:33:14.000 --> 01:33:16.000]  Вот так.
[01:33:16.000 --> 01:33:18.000]  Вот так.
[01:33:20.000 --> 01:33:22.000]  Ну, как бы, надо просто сделать так, чтобы эта прямая шла вот так.
[01:33:22.000 --> 01:33:24.000]  Понимаете, да?
[01:33:24.000 --> 01:33:26.000]  Вот.
[01:33:26.000 --> 01:33:28.000]  Но факт остается фактом.
[01:33:30.000 --> 01:33:32.000]  Вот.
[01:33:32.000 --> 01:33:34.000]  То есть, факт остается фактом.
[01:33:34.000 --> 01:33:36.000]  То есть, на самом деле, там, можно так сказать,
[01:33:36.000 --> 01:33:40.000]  если мы вот в этой полосе приведем вот такое,
[01:33:40.000 --> 01:33:42.000]  вот такое, вот такое,
[01:33:42.000 --> 01:33:46.000]  то тогда, значит, у нас функция заведомо ограничена снизу, как минимум, в этой точке.
[01:33:46.000 --> 01:33:50.000]  Вообще, тисичный предел немножко бесконечно снимается до чего-то такой вверх.
[01:33:50.000 --> 01:33:52.000]  Или можно, да, ну, просто так доказать проще.
[01:33:52.000 --> 01:33:54.000]  Угу.
[01:33:54.000 --> 01:33:56.000]  Да, я мог бы там начать ругаться вот такими словами,
[01:33:56.000 --> 01:33:58.000]  но как ругаться?
[01:33:58.000 --> 01:34:00.000]  Может даже и хорошие доказательства.
[01:34:00.000 --> 01:34:02.000]  Пока давайте так.
[01:34:02.000 --> 01:34:04.000]  То есть, как минимум, на этом отрезке функция ограничена снизу,
[01:34:04.000 --> 01:34:06.000]  как минимум, на этом отрезке.
[01:34:08.000 --> 01:34:10.000]  Ну, на самом деле, теперь я утверждаю,
[01:34:10.000 --> 01:34:14.000]  что слева от h3 функция обязана быть монотона.
[01:34:14.000 --> 01:34:16.000]  Она может только монотонно убывать.
[01:34:16.000 --> 01:34:18.000]  Ну, для нас, в общем-то, конечно...
[01:34:18.000 --> 01:34:20.000]  Хотя для нас достаточно будет, конечно, только утверждение о том,
[01:34:20.000 --> 01:34:24.000]  что все значения функции слева от h3 будут выше, чем эта точка.
[01:34:24.000 --> 01:34:26.000]  Ну, причина та же.
[01:34:28.000 --> 01:34:30.000]  Вот.
[01:34:30.000 --> 01:34:32.000]  Ну, на самом деле, да, можно...
[01:34:32.000 --> 01:34:34.000]  Ну, на самом деле, теперь еще легко показать,
[01:34:34.000 --> 01:34:36.000]  что там еще и будет монотонность,
[01:34:36.000 --> 01:34:38.000]  потому что если будет не монотонность,
[01:34:38.000 --> 01:34:40.000]  то будет что-то подобного рода,
[01:34:40.000 --> 01:34:42.000]  и опять появился вопрос.
[01:34:42.000 --> 01:34:44.000]  Да?
[01:34:44.000 --> 01:34:46.000]  Понятно, что я говорю?
[01:34:46.000 --> 01:34:48.000]  Вот.
[01:34:48.000 --> 01:34:50.000]  Ну, и справа тоже, кстати,
[01:34:50.000 --> 01:34:52.000]  тут тоже функция будет заветом монотона.
[01:34:52.000 --> 01:34:54.000]  То есть, смотрите, у нас функция,
[01:34:54.000 --> 01:34:56.000]  которая здесь до h3 она убывает,
[01:34:56.000 --> 01:34:58.000]  начинает с h3, возрастает.
[01:34:58.000 --> 01:35:00.000]  И что происходит между h3 и h3?
[01:35:00.000 --> 01:35:02.000]  Наверное, b.
[01:35:02.000 --> 01:35:04.000]  Вот.
[01:35:04.000 --> 01:35:06.000]  Но, смотрите, зачем мы...
[01:35:06.000 --> 01:35:08.000]  Но как вы думаете, зачем мы доказали,
[01:35:08.000 --> 01:35:10.000]  что функция ограничена снизу?
[01:35:10.000 --> 01:35:12.000]  Чтобы sql был не без безгонечности.
[01:35:12.000 --> 01:35:14.000]  Да, именно.
[01:35:14.000 --> 01:35:16.000]  Потому что мы помним, что функция
[01:35:16.000 --> 01:35:18.000]  у непрерывной на отрезке функции
[01:35:18.000 --> 01:35:20.000]  на этом отрезке достигается минимум.
[01:35:20.000 --> 01:35:22.000]  Вот было дело, да?
[01:35:22.000 --> 01:35:24.000]  Так, чего?
[01:35:24.000 --> 01:35:26.000]  Ну, собственно...
[01:35:26.000 --> 01:35:28.000]  Ну, потому что мы доказали,
[01:35:28.000 --> 01:35:30.000]  что функция непрерывна,
[01:35:30.000 --> 01:35:32.000]  а что мы доказали, что она на этом отрезке
[01:35:32.000 --> 01:35:34.000]  непрерывна и ограничена снизу, да?
[01:35:34.000 --> 01:35:36.000]  Значит, минимум...
[01:35:36.000 --> 01:35:38.000]  Ну, нам не надо доказать, что функция
[01:35:38.000 --> 01:35:40.000]  ограничена снизу.
[01:35:40.000 --> 01:35:42.000]  А, ну получается так.
[01:35:42.000 --> 01:35:44.000]  Можно было просто определить в концах
[01:35:44.000 --> 01:35:46.000]  отрезка по непрерывности.
[01:35:46.000 --> 01:35:48.000]  Ага.
[01:35:48.000 --> 01:35:50.000]  А это неважно было.
[01:35:50.000 --> 01:35:52.000]  Не, а что конец отрезка?
[01:35:52.000 --> 01:35:54.000]  А шрифт b шрифт, какие-то функции внутри,
[01:35:54.000 --> 01:35:56.000]  поэтому на этом отрезке она не прерывна.
[01:35:56.000 --> 01:35:58.000]  Я имею в виду, что она непрерывна на отрезке,
[01:35:58.000 --> 01:36:00.000]  значит, достигает инфинума,
[01:36:00.000 --> 01:36:02.000]  причем слижащего в r.
[01:36:02.000 --> 01:36:04.000]  Ну, короче, не безгонечности.
[01:36:04.000 --> 01:36:06.000]  Ну, да.
[01:36:06.000 --> 01:36:08.000]  А шрифт c шрифт b шрифт,
[01:36:08.000 --> 01:36:10.000]  то определим нормально.
[01:36:10.000 --> 01:36:12.000]  Не-не-не.
[01:36:12.000 --> 01:36:14.000]  Это шрифт b шрифт.
[01:36:14.000 --> 01:36:16.000]  Нет, в смысле, вот у нас функция.
[01:36:16.000 --> 01:36:18.000]  Вы сказали, что что-то плохое,
[01:36:18.000 --> 01:36:20.000]  то есть разрыв может быть только в концах
[01:36:20.000 --> 01:36:22.000]  отрезка a или b.
[01:36:22.000 --> 01:36:24.000]  Ага.
[01:36:24.000 --> 01:36:26.000]  Ну, давайте переопределим функцию в концах.
[01:36:26.000 --> 01:36:28.000]  Надо только понять, что частичный предел
[01:36:28.000 --> 01:36:30.000]  не минус бесконечности.
[01:36:30.000 --> 01:36:32.000]  Да, но тогда...
[01:36:32.000 --> 01:36:34.000]  Я сказал, пусть функция не монотонна.
[01:36:34.000 --> 01:36:36.000]  Это вот три точки, благодаря которым
[01:36:36.000 --> 01:36:38.000]  функция не монотонна, да?
[01:36:38.000 --> 01:36:40.000]  Нет, в смысле, ваше доказательство понятно,
[01:36:40.000 --> 01:36:42.000]  говорится, что...
[01:36:42.000 --> 01:36:44.000]  Ну, в смысле, что можно проще доказать.
[01:36:44.000 --> 01:36:46.000]  Ну, понятно, да.
[01:36:46.000 --> 01:36:48.000]  Нет, ну, мое тоже могу сказать так.
[01:36:48.000 --> 01:36:50.000]  А шрифт b шрифт c шрифт.
[01:36:50.000 --> 01:36:52.000]  То есть просто, да, на этом отрезке
[01:36:52.000 --> 01:36:54.000]  а шрифт b шрифт функция непрерывна,
[01:36:54.000 --> 01:36:56.000]  следовательно, минимум не минус бесконечности достигается.
[01:36:56.000 --> 01:36:58.000]  Почему а шрифт b шрифт?
[01:36:58.000 --> 01:37:00.000]  Но а шрифт b шрифт,
[01:37:00.000 --> 01:37:02.000]  это не рандомные точки,
[01:37:02.000 --> 01:37:04.000]  потому что между ними есть точки меньше.
[01:37:04.000 --> 01:37:06.000]  Нет, почему а шрифт b шрифт это не концы?
[01:37:06.000 --> 01:37:08.000]  Это концы отрезка.
[01:37:08.000 --> 01:37:10.000]  Но это не те концы, это не эти концы.
[01:37:14.000 --> 01:37:16.000]  То есть, помните, это три...
[01:37:16.000 --> 01:37:18.000]  а шрифт b шрифт c шрифт – это точки внутри
[01:37:18.000 --> 01:37:20.000]  интервала a, b, которые дают нам
[01:37:20.000 --> 01:37:22.000]  не монотонность функции f.
[01:37:24.000 --> 01:37:26.000]  То есть пусть а шрифт b шрифт c шрифт
[01:37:26.000 --> 01:37:28.000]  такие точки, что
[01:37:28.000 --> 01:37:30.000]  f от c шрифт меньше, чем и f от a шрифт,
[01:37:30.000 --> 01:37:32.000]  а f от a шрифт и f от b шрифт.
[01:37:32.000 --> 01:37:34.000]  То есть зачем нам это надо?
[01:37:34.000 --> 01:37:36.000]  А надо было за тем, чтобы гарантировать,
[01:37:36.000 --> 01:37:38.000]  что минимум на этом отрезке достигается
[01:37:38.000 --> 01:37:40.000]  не в а шрифт или б шрифт,
[01:37:40.000 --> 01:37:42.000]  а достигается где-то между ними.
[01:37:44.000 --> 01:37:46.000]  Итак, ну вот.
[01:37:46.000 --> 01:37:48.000]  Ну и в принципе, да.
[01:37:48.000 --> 01:37:50.000]  То есть тогда получается, что убираем c шрифт,
[01:37:50.000 --> 01:37:52.000]  а вместо этого обнаружим, что где-то
[01:37:52.000 --> 01:37:54.000]  внутри этого отрезка есть прям вот минимум.
[01:37:56.000 --> 01:37:58.000]  Назовем его по традиции x0.
[01:38:00.000 --> 01:38:02.000]  Вот.
[01:38:04.000 --> 01:38:06.000]  Так, ну вот теперь
[01:38:06.000 --> 01:38:08.000]  почему-то жуткое утверждение,
[01:38:08.000 --> 01:38:10.000]  что хочется сказать,
[01:38:10.000 --> 01:38:12.000]  что функция действительно внимательна.
[01:38:12.000 --> 01:38:14.000]  Ну, во-первых, да, заметим, что
[01:38:14.000 --> 01:38:16.000]  этот минимум ристоль может достигаться
[01:38:16.000 --> 01:38:18.000]  не только в точке, а на целом плацдарме.
[01:38:20.000 --> 01:38:22.000]  Но этот плацдарм, очевидно, является отрезком.
[01:38:22.000 --> 01:38:24.000]  У нас функция не пригроза.
[01:38:24.000 --> 01:38:26.000]  Тогда утверждается, что
[01:38:26.000 --> 01:38:28.000]  после этого плацдарма,
[01:38:28.000 --> 01:38:30.000]  то есть слева от этого плацдарма
[01:38:30.000 --> 01:38:32.000]  института функция убывает.
[01:38:34.000 --> 01:38:36.000]  Почему она убывает?
[01:38:36.000 --> 01:38:38.000]  Потому что любые две точки слева
[01:38:38.000 --> 01:38:40.000]  будут как бы больше
[01:38:40.000 --> 01:38:42.000]  по значению, чем этот плацдарм.
[01:38:42.000 --> 01:38:44.000]  И если тут окажется как-то так,
[01:38:44.000 --> 01:38:46.000]  то выпутнустю порядка.
[01:38:48.000 --> 01:38:50.000]  Ну и здесь соответственно тоже.
[01:38:52.000 --> 01:38:54.000]  Вот такие вот утверждения.
[01:38:58.000 --> 01:39:00.000]  Вот такая вот высота у нас получилась.
[01:39:00.000 --> 01:39:02.000]  Сейчас еще раз.
[01:39:02.000 --> 01:39:04.000]  Почему мы не могли сказать?
[01:39:04.000 --> 01:39:06.000]  Просмотрим отрезок h'b'3.
[01:39:08.000 --> 01:39:10.000]  Ну, функция непрерывна
[01:39:10.000 --> 01:39:12.000]  на этом отрезке,
[01:39:12.000 --> 01:39:14.000]  поэтому она достигает минимума максимума.
[01:39:16.000 --> 01:39:18.000]  Так, и дальше.
[01:39:18.000 --> 01:39:20.000]  Только нам здесь очень важно,
[01:39:20.000 --> 01:39:22.000]  что мы здесь воспользовались тем,
[01:39:22.000 --> 01:39:24.000]  кто тут минимум не в h3 и не в h3.
[01:39:24.000 --> 01:39:26.000]  Это, видимо, чтобы сказать, что
[01:39:26.000 --> 01:39:28.000]  слева от h' и справа от b'
[01:39:28.000 --> 01:39:30.000]  не будет точек меньше?
[01:39:30.000 --> 01:39:32.000]  Ну, типа так.
[01:39:34.000 --> 01:39:36.000]  Хотя, конечно, опять видимо подлянка.
[01:39:36.000 --> 01:39:38.000]  Видимо, формальная подлянка
[01:39:38.000 --> 01:39:40.000]  видимо заключается в том, что
[01:39:40.000 --> 01:39:52.000]  чтобы их учитывать
[01:39:52.000 --> 01:39:54.000]  чтобы их учитывать.
[01:39:54.000 --> 01:39:56.000]  Эротические функции никто не мешает быть, например.
[01:39:56.000 --> 01:39:58.000]  Константы
[01:39:58.000 --> 01:40:00.000]  или там быть вот такой глядостью.
[01:40:02.000 --> 01:40:04.000]  И у нас опять проблемы с определением униматальности.
[01:40:06.000 --> 01:40:08.000]  Нормально это.
[01:40:08.000 --> 01:40:10.000]  Я это, конечно, не люблю.
[01:40:10.000 --> 01:40:12.000]  У вас вы же из отрезка взяли x на x?
[01:40:12.000 --> 01:40:14.000]  А, да, да, да, да.
[01:40:14.000 --> 01:40:16.000]  Поэтому нормально.
[01:40:16.000 --> 01:40:18.000]  Ага.
[01:40:18.000 --> 01:40:20.000]  Чтобы у нас тут униматальность имперевали.
[01:40:20.000 --> 01:40:22.000]  Хотя...
[01:40:22.000 --> 01:40:24.000]  Единственное, что, да, в самих точках отрезка
[01:40:24.000 --> 01:40:26.000]  она может быть не непрерывна.
[01:40:26.000 --> 01:40:28.000]  То есть, если она имеет вид
[01:40:28.000 --> 01:40:30.000]  две точки и отрезок
[01:40:30.000 --> 01:40:32.000]  на плане другой...
[01:40:32.000 --> 01:40:34.000]  Я допускаю, что здесь может быть полуинтервал.
[01:40:34.000 --> 01:40:36.000]  В случае полуинтервала здесь тоже отрезка.
[01:40:36.000 --> 01:40:38.000]  Вот так. Сейчас подогнали.
[01:40:38.000 --> 01:40:40.000]  Нет, это еще плохо.
[01:40:40.000 --> 01:40:42.000]  Сейчас.
[01:40:46.000 --> 01:40:48.000]  Ну, короче, она не будет на отрезке x0, x1
[01:40:48.000 --> 01:40:50.000]  константа.
[01:40:50.000 --> 01:40:52.000]  Если мы возьмем функцию,
[01:40:52.000 --> 01:40:54.000]  которая в двух крайних точках
[01:40:54.000 --> 01:40:56.000]  не непрерывна,
[01:40:56.000 --> 01:40:58.000]  а на всем интервале константа.
[01:40:58.000 --> 01:41:00.000]  Уууууууу
[01:41:02.000 --> 01:41:04.000]  Ха-ха-ха
[01:41:04.000 --> 01:41:06.000]  Ууу
[01:41:10.000 --> 01:41:12.000]  Нет, ну еще правильно.
[01:41:12.000 --> 01:41:14.000]  Я хочу, может, в этом случае
[01:41:14.000 --> 01:41:16.000]  на интервале рассмотреть.
[01:41:16.000 --> 01:41:18.000]  А...
[01:41:18.000 --> 01:41:20.000]  Ну, она на всем интервале константа.
[01:41:20.000 --> 01:41:22.000]  Да.
[01:41:22.000 --> 01:41:24.000]  При этом в концах отрезка мы ее
[01:41:24.000 --> 01:41:26.000]  доопределим, чтобы она была не непрерывна
[01:41:26.000 --> 01:41:28.000]  вверху.
[01:41:28.000 --> 01:41:30.000]  Ну, короче,
[01:41:30.000 --> 01:41:32.000]  это, наверное, можно не париться особо.
[01:41:32.000 --> 01:41:34.000]  Нет, ну, идейно так.
[01:41:34.000 --> 01:41:36.000]  Ха-ха-ха
[01:41:36.000 --> 01:41:38.000]  Ну, это, что будет правда на экзамене
[01:41:38.000 --> 01:41:40.000]  Ну, это от вас зависит.
[01:41:40.000 --> 01:41:42.000]  Нет, ну, правильная ответ простой,
[01:41:42.000 --> 01:41:44.000]  как бы, если вы не на экзамене
[01:41:44.000 --> 01:41:46.000]  предемонстрируете, что
[01:41:46.000 --> 01:41:48.000]  скажем так, вы вытепила вся к шагу
[01:41:48.000 --> 01:41:50.000]  то там как бы, тсс, без отрезки не буду.
[01:41:50.000 --> 01:41:52.000]  А если, там, есть обновления,
[01:41:52.000 --> 01:41:54.000]  что вы там будете воспроизведить какой-то там доказательство
[01:41:54.000 --> 01:41:58.000]  что я нашел первую правую расстрелку, тогда будет хорошо.
[01:41:58.000 --> 01:42:00.000]  То есть как всегда.
[01:42:03.000 --> 01:42:06.000]  Ну так всегда и было, в общем-то, на команде.
[01:42:06.000 --> 01:42:08.000]  Вот, ладно.
[01:42:09.000 --> 01:42:11.000]  Дум-дум-дум
[01:42:13.000 --> 01:42:15.000]  Дум-дум-дум
[01:42:15.000 --> 01:42:17.000]  Дум-дум-дум
[01:42:21.000 --> 01:42:23.000]  Да, да, да.
[01:42:23.000 --> 01:42:25.000]  Все, вот с ним.
[01:42:26.000 --> 01:42:27.000]  Кошмар.
[01:42:27.000 --> 01:42:28.000]  Ность.
[01:42:28.000 --> 01:42:31.000]  Оказывается, воскресенье сгорел тот самый отель,
[01:42:31.000 --> 01:42:34.000]  глядя на который было написано песня «Словом зоомор».
[01:42:35.000 --> 01:42:38.000]  Вот, вот я только что просто об этом не знал.
[01:42:38.000 --> 01:42:40.000]  Это вам позвонили?
[01:42:41.000 --> 01:42:42.000]  Владелец отеля?
[01:42:42.000 --> 01:42:43.000]  Не знаю.
[01:42:43.000 --> 01:42:45.000]  Дайте, давайте, давайте.
[01:42:45.000 --> 01:42:48.000]  Каждому человеку может быть дом, который может вам присоединить с космодаром.
[01:42:48.000 --> 01:42:50.000]  У тебя там уже сообщена информация.
[01:42:50.000 --> 01:42:53.000]  Нет, ну мне кажется, что-то в этом есть, короче.
[01:42:54.000 --> 01:42:55.000]  Ну вот.
[01:42:55.000 --> 01:42:57.000]  Пад сложный как бы был.
[01:42:57.000 --> 01:42:58.000]  Так, давай.
[01:42:58.000 --> 01:43:01.000]  А функция не монотонная в каком смысле?
[01:43:01.000 --> 01:43:02.000]  В каком смысле?
[01:43:02.000 --> 01:43:05.000]  Что она не строго, не монотонная?
[01:43:06.000 --> 01:43:12.000]  Ну, может ли такое случиться, что все точки h' b' и вот это c, они типа на одном режиме?
[01:43:13.000 --> 01:43:14.000]  Так.
[01:43:15.000 --> 01:43:16.000]  Так.
[01:43:16.000 --> 01:43:18.000]  Где они могут быть, Влад?
[01:43:18.000 --> 01:43:22.000]  Ну, может ли случиться, что вот f от h'
[01:43:22.000 --> 01:43:26.000]  короче, на отрезке h' b' константа может быть такое?
[01:43:26.000 --> 01:43:28.000]  Так, сейчас.
[01:43:29.000 --> 01:43:32.000]  Сейчас f от h' b'.
[01:43:33.000 --> 01:43:34.000]  Может так?
[01:43:34.000 --> 01:43:36.000]  А, слушайте, мы эту проблему входили.
[01:43:36.000 --> 01:43:41.000]  Все проблемы полно решались здесь тем, что вы в этом утверждении сказали, что функция вот такой не монотонная.
[01:43:41.000 --> 01:43:42.000]  Да.
[01:43:42.000 --> 01:43:47.000]  Да, вот эти вот функции, они все удали, по идее, монотонные, это не строго монотонные.
[01:43:47.000 --> 01:43:49.000]  Ну вот, то есть мы запрещаем даже не строго.
[01:43:49.000 --> 01:43:50.000]  Так что ладно.
[01:43:50.000 --> 01:43:53.000]  Так что на самом деле это не проблема.
[01:43:53.000 --> 01:43:54.000]  Ладно.
[01:43:54.000 --> 01:43:57.000]  Но идея для нас немножко другая.
[01:44:03.000 --> 01:44:04.000]  О, смотри.
[01:44:04.000 --> 01:44:05.000]  Немножко манья.
[01:44:05.000 --> 01:44:06.000]  Немножко манья.
[01:44:08.000 --> 01:44:09.000]  Это да.
[01:44:11.000 --> 01:44:12.000]  Ладно.
[01:44:12.000 --> 01:44:13.000]  Вот, значит, смотрите.
[01:44:14.000 --> 01:44:16.000]  Значит, диспетенция такая.
[01:44:16.000 --> 01:44:23.000]  Ну опять про выпуклый, то есть если функция выпуклая, то она монотонная, минимум в ней, так наверное, поиска пускать можно.
[01:44:24.000 --> 01:44:25.000]  Вот.
[01:44:25.000 --> 01:44:29.000]  Правда теперь стоит, да, теперь что получается, то есть получается следует, чтоб доказать,
[01:44:29.000 --> 01:44:49.000]  что функция не банальная, то нужно доказать, чтоail
[01:44:49.000 --> 01:44:53.000]  Ну нужно что бы, сейчас, мне кажется достаточно, чтобы она сначала возрастала, а потом aprly
[01:44:53.000 --> 01:44:55.000]  Нет, ну это, кстати, это буквы вверх.
[01:44:55.000 --> 01:44:57.000]  Ну, в данном случае, например.
[01:44:57.000 --> 01:44:59.000]  Нет, ну не совсем нет. Почему?
[01:44:59.000 --> 01:45:03.000]  Так-то вот, пожалуйста, вот это сначала убывает, а то вот растает, но выпустостью не пахнет.
[01:45:03.000 --> 01:45:05.000]  Но за того не модально.
[01:45:05.000 --> 01:45:07.000]  Да.
[01:45:07.000 --> 01:45:14.000]  На самом деле, ну, выпуклыми функциями являются, конечно, много приятных базы функций.
[01:45:14.000 --> 01:45:18.000]  Ну, например, функция игрок равно kx плюс b.
[01:45:18.000 --> 01:45:21.000]  Да, вот это понимаешь. Она выпукла, причем как вниз, так и вверх.
[01:45:21.000 --> 01:45:23.000]  Приятно. Единственное в своем роде.
[01:45:23.000 --> 01:45:25.000]  Вот. Ну-ка, отстань ты сюда.
[01:45:25.000 --> 01:45:30.000]  Есть еще, конечно, функция равна какая-то там ax квадрат плюс bx плюс c.
[01:45:30.000 --> 01:45:33.000]  Вот параметр такая.
[01:45:33.000 --> 01:45:35.000]  Эта функция выпукловней.
[01:45:35.000 --> 01:45:37.000]  Ну, там, точнее, если a больше 0, конечно.
[01:45:37.000 --> 01:45:43.000]  Ну, есть, конечно, функция, какая-то, какая-то, которая выпуклывается из x, она выпуклывается вверх.
[01:45:43.000 --> 01:45:49.000]  Есть еще, конечно, всеми любимая функция, модуль x минус a.
[01:45:50.000 --> 01:45:52.000]  Ну, галочка такая, да?
[01:45:52.000 --> 01:45:54.000]  Поняли, да?
[01:45:54.000 --> 01:45:56.000]  Ну, говорите.
[01:46:04.000 --> 01:46:07.000]  Ну, в общем, практически все, да.
[01:46:07.000 --> 01:46:12.000]  На самом деле, для нам сейчас будут интересны два приятных свойства.
[01:46:12.000 --> 01:46:14.000]  Часть синуса.
[01:46:14.000 --> 01:46:16.000]  Да, часть синуса.
[01:46:19.000 --> 01:46:21.000]  Вот.
[01:46:31.000 --> 01:46:33.000]  Вот.
[01:46:38.000 --> 01:46:40.000]  Вот, значит, соответственно.
[01:46:40.000 --> 01:46:44.000]  Потому что на самом деле для нас есть важные приятные свойства.
[01:46:45.000 --> 01:46:51.000]  То есть пусть у нас f и g выпуклые в них.
[01:46:55.000 --> 01:46:58.000]  На, допустим, полуинтервалянды.
[01:46:58.000 --> 01:47:06.000]  Тогда оказывается, верно, два приятных штуки.
[01:47:06.000 --> 01:47:08.000]  Во-первых.
[01:47:08.000 --> 01:47:12.000]  Во-вторых, выпуклым оказывается максимум из этих.
[01:47:12.000 --> 01:47:14.000]  Какая функция f и g?
[01:47:22.000 --> 01:47:24.000]  Ну, это очень просто.
[01:47:24.000 --> 01:47:28.000]  Потому что под график максимума это пересечение под график f и g.
[01:47:28.000 --> 01:47:31.000]  А пересечение выпуклых ложек.
[01:47:31.000 --> 01:47:33.000]  Вот, правда?
[01:47:33.000 --> 01:47:35.000]  Вот, понятно, да?
[01:47:35.000 --> 01:47:36.000]  Да.
[01:47:36.000 --> 01:47:38.000]  Более нетривиально с точки зрения такого определения.
[01:47:38.000 --> 01:47:41.000]  Хотя бы с точки зрения производных было бы совсем халявно заявить,
[01:47:41.000 --> 01:47:43.000]  что f плюс g.
[01:48:03.000 --> 01:48:06.000]  Да, это может показаться, это может быть не так тривиально.
[01:48:06.000 --> 01:48:13.000]  Пока вы не вспомните, что на график этой штуки это что такое.
[01:48:13.000 --> 01:48:17.000]  По сути сумма Минковского над графиком функции f и g,
[01:48:17.000 --> 01:48:19.000]  вы знаете, что это сумма Минковского.
[01:48:19.000 --> 01:48:21.000]  Не очень хорошо.
[01:48:21.000 --> 01:48:23.000]  Это можно смотреть в определении выпуклости,
[01:48:23.000 --> 01:48:28.000]  которая что f там что-то 1, 1 минус t.
[01:48:28.000 --> 01:48:31.000]  Ну, в смысле и тесно.
[01:48:31.000 --> 01:48:33.000]  Давайте введем сумму Минковского,
[01:48:33.000 --> 01:48:37.000]  потому что все равно нам придется ее обсуждать в какой-то момент.
[01:48:37.000 --> 01:48:39.000]  Вот, значит, смотрите.
[01:48:39.000 --> 01:48:47.000]  То есть сумма Минковского двух множеств определяется так.
[01:48:47.000 --> 01:48:53.000]  То есть пусть у меня есть a, b под множество точек на плотности.
[01:48:53.000 --> 01:48:59.000]  Тогда a плюс b это просто множество точек a плюс b таких,
[01:48:59.000 --> 01:49:01.000]  что a лежит в a, b лежит в b.
[01:49:01.000 --> 01:49:05.000]  Но я подозреваю каждую точку как объекта, естественно.
[01:49:11.000 --> 01:49:15.000]  Ладно, на график это, конечно, не сумма Минковского.
[01:49:15.000 --> 01:49:17.000]  На график это, конечно, не сумма Минковского.
[01:49:17.000 --> 01:49:19.000]  Нет, сейчас у нас же есть определение в выпуклости,
[01:49:19.000 --> 01:49:23.000]  что f а плюс b это b там меньше либо равно,
[01:49:23.000 --> 01:49:27.000]  то есть больше либо равно, чем f а плюс a плюс b.
[01:49:27.000 --> 01:49:29.000]  Если а плюс b это равно 1.
[01:49:29.000 --> 01:49:31.000]  Ну не совсем.
[01:49:31.000 --> 01:49:33.000]  После определения в выпуклости.
[01:49:33.000 --> 01:49:37.000]  Ну да, можно на самом деле дать.
[01:49:37.000 --> 01:49:41.000]  То есть f плюс g каждую штуку придется доказывать так,
[01:49:41.000 --> 01:49:45.000]  что действительно рассмотрим какую-нибудь...
[01:49:45.000 --> 01:49:50.000]  То есть пусть у меня есть какие-нибудь точки a, b,
[01:49:50.000 --> 01:49:53.000]  и мы скажем, что есть вот точка...
[01:49:53.000 --> 01:49:55.000]  Ну понятно, есть точка...
[01:49:55.000 --> 01:49:59.000]  Там вот такая a, f от a плюс g от a.
[01:50:01.000 --> 01:50:07.000]  И соответственно b, значит f от b плюс g от b.
[01:50:07.000 --> 01:50:09.000]  Вот, и вот это...
[01:50:09.000 --> 01:50:11.000]  Нам надо доказать, что вот этот вот...
[01:50:11.000 --> 01:50:13.000]  Желательно доказать, что этот отрезок целиком лежит
[01:50:13.000 --> 01:50:17.000]  на графике функции f плюс f плюс g.
[01:50:17.000 --> 01:50:19.000]  Достаточно доказать именно про этот отрезок,
[01:50:19.000 --> 01:50:21.000]  потому что если там брать вместо этих точек
[01:50:21.000 --> 01:50:23.000]  более высокие, тогда отсюда будет следов.
[01:50:23.000 --> 01:50:25.000]  Вот.
[01:50:27.000 --> 01:50:29.000]  Вот, вы заметили на самом деле следующее,
[01:50:29.000 --> 01:50:31.000]  что вот этот отрезок, ну я так скажу,
[01:50:31.000 --> 01:50:37.000]  этот отрезок это часть линейной функции y равно kx плюс b, правда?
[01:50:39.000 --> 01:50:41.000]  Ну какая-то линейная функция, да?
[01:50:41.000 --> 01:50:43.000]  Но это не просто линейная функция,
[01:50:43.000 --> 01:50:45.000]  а на самом деле, смотрите, можно было...
[01:50:45.000 --> 01:50:47.000]  То есть я не буду сейчас полную формулу расписывать,
[01:50:47.000 --> 01:50:49.000]  но суть такая, что...
[01:50:49.000 --> 01:50:52.000]  Например, я мог бы тоже самое расписать для функции f,
[01:50:52.000 --> 01:50:56.000]  там b и f от b, да?
[01:50:56.000 --> 01:50:58.000]  Ой, кx плюс b нехорошо получилось.
[01:50:58.000 --> 01:51:00.000]  Ладно, кx плюс b.
[01:51:00.000 --> 01:51:02.000]  Вот. И тогда вот этот отрезок,
[01:51:02.000 --> 01:51:06.000]  это у нас такой y равно k с индексом f,
[01:51:06.000 --> 01:51:09.000]  значит, x плюс b с индексом f.
[01:51:09.000 --> 01:51:11.000]  То есть вот была такая прямая,
[01:51:11.000 --> 01:51:13.000]  и мы знали, что это прямая...
[01:51:13.000 --> 01:51:15.000]  То есть вот этот отрезок этой прямой целиком лежит
[01:51:15.000 --> 01:51:17.000]  на графике, правильно?
[01:51:17.000 --> 01:51:19.000]  Примаете, да?
[01:51:19.000 --> 01:51:24.000]  Аналогично рисовался отрезок k, g.
[01:51:26.000 --> 01:51:28.000]  То же самое.
[01:51:28.000 --> 01:51:30.000]  b, g от b,
[01:51:30.000 --> 01:51:34.000]  и a, f от...
[01:51:34.000 --> 01:51:36.000]  там a, g от a.
[01:51:36.000 --> 01:51:38.000]  То есть две линейные функции.
[01:51:38.000 --> 01:51:40.000]  Но тогда получается, что вот эта штука
[01:51:40.000 --> 01:51:43.000]  это сумма этих двух линейных функций, правда?
[01:51:44.000 --> 01:51:46.000]  То есть просто вот действительно здесь замечаем,
[01:51:46.000 --> 01:51:48.000]  что k равно просто...
[01:51:48.000 --> 01:51:50.000]  k, f плюс k, g.
[01:51:50.000 --> 01:51:52.000]  И там, соответственно,
[01:51:52.000 --> 01:51:54.000]  там l равно...
[01:51:54.000 --> 01:51:56.000]  но ведь тоже l,
[01:51:56.000 --> 01:51:58.000]  l, f плюс l, g.
[01:51:58.000 --> 01:52:00.000]  Но тогда, если у вас f была,
[01:52:00.000 --> 01:52:02.000]  на этом отметке, больше либо равна этой функции,
[01:52:02.000 --> 01:52:04.000]  а g больше либо равно этой,
[01:52:04.000 --> 01:52:06.000]  то сумма будет больше либо равна сумме.
[01:52:06.000 --> 01:52:08.000]  Здесь мы просто пользуемся тем,
[01:52:08.000 --> 01:52:10.000]  что сумма линейных функций, линейная функция.
[01:52:10.000 --> 01:52:12.000]  Всё.
[01:52:12.000 --> 01:52:14.000]  То есть можно было бы, я мог бы тут
[01:52:14.000 --> 01:52:16.000]  расписать, конечно, точные формулы,
[01:52:16.000 --> 01:52:18.000]  но по такому доказательству
[01:52:18.000 --> 01:52:20.000]  конечно, в этом даже емкость уже нет.
[01:52:20.000 --> 01:52:22.000]  Да, сумма Винковского, конечно, не причём.
[01:52:22.000 --> 01:52:24.000]  Зря мы её помизали.
[01:52:26.000 --> 01:52:28.000]  Нет, ну, то есть, конечно,
[01:52:28.000 --> 01:52:30.000]  чуть позже мы, конечно, её тут ещё
[01:52:30.000 --> 01:52:32.000]  пообсуждаем.
[01:52:32.000 --> 01:52:34.000]  Ну вот. Куда ж? Куда ж делаться?
[01:52:34.000 --> 01:52:36.000]  Я боюсь, что это, возможно,
[01:52:36.000 --> 01:52:38.000]  на ползавета придётся делать.
[01:52:38.000 --> 01:52:40.000]  Впрочем, посмотрим.
[01:52:40.000 --> 01:52:42.000]  Так вот.
[01:52:42.000 --> 01:52:44.000]  Ну, вот так вот.
[01:52:44.000 --> 01:52:46.000]  Вот у нас получается такие два свойства.
[01:52:46.000 --> 01:52:48.000]  Качество управления остаётся доказать,
[01:52:48.000 --> 01:52:50.000]  что какой-нибудь там минимум
[01:52:50.000 --> 01:52:52.000]  из этого же выпукло быть не обязан.
[01:52:54.000 --> 01:52:56.000]  Ну, то есть там какой-нибудь пример имени
[01:52:56.000 --> 01:52:58.000]  из репка, ещё там ножки и шляпки
[01:52:58.000 --> 01:53:00.000]  из репка, я думаю, вы там придумываете
[01:53:00.000 --> 01:53:02.000]  состояние. Зачем? В смысле, просто
[01:53:02.000 --> 01:53:04.000]  две прямые.
[01:53:04.000 --> 01:53:06.000]  Ну или так.
[01:53:06.000 --> 01:53:08.000]  Это уже кому как угодно.
[01:53:08.000 --> 01:53:10.000]  Ну и там вся, конечно,
[01:53:10.000 --> 01:53:12.000]  что разных выпуклёв в функции
[01:53:12.000 --> 01:53:14.000]  тоже ничем быть, естественно, не обязан.
[01:53:14.000 --> 01:53:16.000]  Вот.
[01:53:16.000 --> 01:53:18.000]  Но зато, если
[01:53:18.000 --> 01:53:20.000]  из вот этих свойств часто вот оказывается
[01:53:20.000 --> 01:53:22.000]  достаточно доказать, что
[01:53:22.000 --> 01:53:24.000]  пункт там, допустим, выпуклён.
[01:53:24.000 --> 01:53:26.000]  Ну, потому что, например,
[01:53:26.000 --> 01:53:28.000]  ну, то есть, например,
[01:53:28.000 --> 01:53:30.000]  в трендарном поиске можно искально
[01:53:30.000 --> 01:53:32.000]  решать какую-нибудь весёлую задачу
[01:53:32.000 --> 01:53:34.000]  в духе.
[01:53:34.000 --> 01:53:36.000]  Даны n точек напрямой,
[01:53:36.000 --> 01:53:38.000]  вот, допустим, даны
[01:53:38.000 --> 01:53:40.000]  точек напрямой.
[01:53:44.000 --> 01:53:46.000]  Я хочу найти
[01:53:46.000 --> 01:53:48.000]  какую-нибудь такую точку
[01:53:48.000 --> 01:53:50.000]  точку A,
[01:53:50.000 --> 01:53:52.000]  точку X, что
[01:53:52.000 --> 01:53:54.000]  сумма расстояний до
[01:53:54.000 --> 01:53:56.000]  точек X минимально
[01:53:56.000 --> 01:53:58.000]  воздушна.
[01:54:02.000 --> 01:54:04.000]  Вот, в принципе, уже из вот этих утверждений
[01:54:04.000 --> 01:54:06.000]  можно сказать, что эта задача прекрасно
[01:54:06.000 --> 01:54:08.000]  решается в трендарном поиске.
[01:54:10.000 --> 01:54:12.000]  Понимаете, да?
[01:54:12.000 --> 01:54:14.000]  Вот, понимаете?
[01:54:14.000 --> 01:54:16.000]  Правда, есть оговоры.
[01:54:16.000 --> 01:54:18.000]  Эту задачу решать
[01:54:18.000 --> 01:54:20.000]  в трендарном поиске не надо.
[01:54:20.000 --> 01:54:22.000]  Потому что, на самом деле,
[01:54:22.000 --> 01:54:24.000]  окажется, что
[01:54:24.000 --> 01:54:26.000]  оптимум достигается в точке
[01:54:26.000 --> 01:54:28.000]  X, n пополамка,
[01:54:28.000 --> 01:54:30.000]  как лёдная вверх.
[01:54:30.000 --> 01:54:32.000]  Да.
[01:54:32.000 --> 01:54:34.000]  Вы можете, да,
[01:54:34.000 --> 01:54:36.000]  можете удивиться,
[01:54:36.000 --> 01:54:38.000]  пока не начнёте рисовать
[01:54:38.000 --> 01:54:40.000]  график этой функции.
[01:54:40.000 --> 01:54:42.000]  А как строить график этой функции?
[01:54:42.000 --> 01:54:44.000]  Ну, заметим, что до X, n
[01:54:44.000 --> 01:54:46.000]  у него угол наклона равен
[01:54:46.000 --> 01:54:48.000]  с точностью минус n.
[01:54:48.000 --> 01:54:50.000]  Ну, просто у нас точки делятся на пары
[01:54:50.000 --> 01:54:52.000]  противоположных.
[01:54:52.000 --> 01:54:54.000]  Да, нет.
[01:54:54.000 --> 01:54:56.000]  X1, Xn, X2, Xn, X1.
[01:54:56.000 --> 01:54:58.000]  И если точка внутри отрезка,
[01:54:58.000 --> 01:55:00.000]  то это длина отрезка, что константа.
[01:55:00.000 --> 01:55:02.000]  А если вне отрезка, то это больше, чем длина отрезка.
[01:55:02.000 --> 01:55:04.000]  Ну, можно так сказать.
[01:55:28.000 --> 01:55:30.000]  Минус n плюс 2,
[01:55:30.000 --> 01:55:32.000]  тут минус n плюс 4,
[01:55:32.000 --> 01:55:34.000]  ну и так далее.
[01:55:34.000 --> 01:55:36.000]  То есть, очевидно, что где-то в середине
[01:55:36.000 --> 01:55:38.000]  тут будет переход,
[01:55:38.000 --> 01:55:40.000]  в зависимости от чётности n.
[01:55:40.000 --> 01:55:42.000]  Если n чётно, то там в какой-то момент
[01:55:42.000 --> 01:55:44.000]  угол наклона будет ноль.
[01:55:44.000 --> 01:55:46.000]  Вот.
[01:55:46.000 --> 01:55:48.000]  А если не чётно, то значит,
[01:55:48.000 --> 01:55:50.000]  в середине точки угол сменится
[01:55:50.000 --> 01:55:52.000]  с минус 1 на плюс 1,
[01:55:52.000 --> 01:55:54.000]  и там уже ноль.
[01:55:54.000 --> 01:55:56.000]  Вот.
[01:55:56.000 --> 01:55:58.000]  Понятная идея?
[01:55:58.000 --> 01:56:00.000]  Вот, да, нет, наверное.
[01:56:02.000 --> 01:56:04.000]  Вот.
[01:56:06.000 --> 01:56:08.000]  То есть, можно было решить тернариком, но не надо.
[01:56:08.000 --> 01:56:10.000]  Всё ещё? Зачем ещё нужен тернарик?
[01:56:10.000 --> 01:56:12.000]  Так, ну хорошо.
[01:56:12.000 --> 01:56:14.000]  Можешь решить хорошо.
[01:56:14.000 --> 01:56:16.000]  Давайте ту же самую задачу.
[01:56:20.000 --> 01:56:22.000]  Но,
[01:56:22.000 --> 01:56:24.000]  ну,
[01:56:24.000 --> 01:56:26.000]  но
[01:56:28.000 --> 01:56:30.000]  хорошо.
[01:56:30.000 --> 01:56:32.000]  Бывает, что вот такая.
[01:56:36.000 --> 01:56:38.000]  Так.
[01:56:38.000 --> 01:56:40.000]  Тоже можно решить тернариком.
[01:56:40.000 --> 01:56:42.000]  И тоже не надо.
[01:56:42.000 --> 01:56:44.000]  Почему?
[01:56:44.000 --> 01:56:46.000]  Потому что здесь мы
[01:56:46.000 --> 01:56:48.000]  посмотрим более простым способом,
[01:56:48.000 --> 01:56:50.000]  раскроем скобки.
[01:56:50.000 --> 01:56:52.000]  n х в квадрате
[01:56:52.000 --> 01:56:54.000]  минус 2х сумма эксцитов
[01:56:54.000 --> 01:56:56.000]  плюс
[01:56:56.000 --> 01:56:58.000]  сумма эксцитов в квадрате.
[01:57:00.000 --> 01:57:02.000]  Так.
[01:57:02.000 --> 01:57:04.000]  Чтобы решить эту задачу,
[01:57:04.000 --> 01:57:06.000]  надо просто вспомнить в уроке вашей любимой школе.
[01:57:06.000 --> 01:57:08.000]  Где-нибудь в классе в седьмом.
[01:57:08.000 --> 01:57:10.000]  Или в каком классе?
[01:57:10.000 --> 01:57:12.000]  В третий заклинание.
[01:57:12.000 --> 01:57:14.000]  Кратиком этой партии
[01:57:14.000 --> 01:57:16.000]  является парабола
[01:57:16.000 --> 01:57:18.000]  ветрика только и направо
[01:57:18.000 --> 01:57:20.000]  и вверх.
[01:57:20.000 --> 01:57:22.000]  Было такое заклинание в школе?
[01:57:22.000 --> 01:57:24.000]  Ну да, может и таким идеотическим голосом,
[01:57:24.000 --> 01:57:26.000]  конечно, это говорилось.
[01:57:26.000 --> 01:57:28.000]  Идеоматическим.
[01:57:28.000 --> 01:57:30.000]  Идеоматическим.
[01:57:30.000 --> 01:57:32.000]  Идеоматический голос.
[01:57:32.000 --> 01:57:34.000]  Вот.
[01:57:34.000 --> 01:57:36.000]  То есть кого-то представляет,
[01:57:36.000 --> 01:57:38.000]  это длится включить.
[01:57:38.000 --> 01:57:40.000]  Но главное, что для нас есть,
[01:57:40.000 --> 01:57:42.000]  это то, что у этой параболы мы еще не знаем,
[01:57:42.000 --> 01:57:44.000]  где находится вершина.
[01:57:44.000 --> 01:57:46.000]  То есть х вершины,
[01:57:46.000 --> 01:57:48.000]  ну просто я формулу скажу,
[01:57:48.000 --> 01:57:50.000]  значит минус B делить на 2A.
[01:57:50.000 --> 01:57:52.000]  Поэтому получается просто
[01:57:52.000 --> 01:57:54.000]  сумма эксцитера будет делить на N.
[01:57:54.000 --> 01:57:56.000]  Центр масс.
[01:57:56.000 --> 01:57:58.000]  Да.
[01:57:58.000 --> 01:58:00.000]  Ну сейчас я скажу,
[01:58:00.000 --> 01:58:02.000]  на моей практике оказывается,
[01:58:02.000 --> 01:58:04.000]  если кто-нибудь случайно занимается
[01:58:04.000 --> 01:58:06.000]  липиатры программирования.
[01:58:06.000 --> 01:58:08.000]  Чем?
[01:58:08.000 --> 01:58:10.000]  Слышите когда-нибудь про чемпионаты ICTC?
[01:58:10.000 --> 01:58:12.000]  Нет.
[01:58:12.000 --> 01:58:14.000]  ICTC.
[01:58:18.000 --> 01:58:20.000]  Ну вот.
[01:58:20.000 --> 01:58:22.000]  Ну вот.
[01:58:22.000 --> 01:58:24.000]  Ну вот.
[01:58:24.000 --> 01:58:26.000]  Ну вот.
[01:58:26.000 --> 01:58:28.000]  Ну вот.
[01:58:28.000 --> 01:58:30.000]  Ну вот.
[01:58:30.000 --> 01:58:32.000]  Ну вот.
[01:58:32.000 --> 01:58:34.000]  Ну вот.
[01:58:34.000 --> 01:58:36.000]  Ну вот.
[01:58:36.000 --> 01:58:38.000]  Ну вот.
[01:58:38.000 --> 01:58:40.000]  Ну вот.
[01:58:40.000 --> 01:58:42.000]  Ну вот.
[01:58:42.000 --> 01:58:44.000]  Ну вот.
[01:58:44.000 --> 01:58:46.000]  Ну вот.
[01:58:46.000 --> 01:58:48.000]  Это такой случай,
[01:58:48.000 --> 01:58:50.000]  который выделяет
[01:58:50.000 --> 01:58:52.000]  отдельных...
[01:58:52.000 --> 01:58:54.000]  один полезный знак.
[01:58:54.000 --> 01:58:56.000]  В общем, так не работает
[01:58:56.000 --> 01:58:58.000]  и приходится думать.
[01:58:58.000 --> 01:59:00.000]  Нельзя ли запустить торнак.
[01:59:00.000 --> 01:59:02.000]  Ну какие тут классические задачи есть?
[01:59:02.000 --> 01:59:04.000]  Отдать классических задач
[01:59:04.000 --> 01:59:06.000]  естественно это
[01:59:06.000 --> 01:59:08.000]  какая-нибудь задача прогонки.
[01:59:08.000 --> 01:59:10.000]  Например, прогонки на колесницах.
[01:59:12.000 --> 01:59:14.000]  Не колесницах,
[01:59:14.000 --> 01:59:24.520]  есть один из вариантов гонки, задача про биатлон. Едут у нас биатлонисты. Каждый биатлонист в
[01:59:24.520 --> 01:59:31.160]  момент времени 0 находился в точке x0 и едет со скоростью v0, которая почему-то у него не меняется.
[01:59:31.160 --> 01:59:44.840]  А вы корреспондент, вы хотите это сфоткать. Хочется сфоткать трассу так, чтобы были видны
[01:59:44.840 --> 01:59:54.120]  все товарищи. Хочется сделать так, чтобы они получились получше. Хочется сделать так, чтобы
[01:59:54.120 --> 01:59:58.200]  сфоткать их в такой момент, чтобы отрезок, на котором они находятся, был как можно меньше.
[02:00:01.640 --> 02:00:11.840]  Как же его найти? В гонке у нас участие 100 тысяч человек, как всегда. Типичный год для
[02:00:11.840 --> 02:00:20.360]  спортивного программирования. Вот внимание вопрос. Данно 100 тысяч таких партий.
[02:00:21.240 --> 02:00:31.840]  Найти в момент времени, в который они все находятся на отрезке минимальной длины.
[02:00:31.840 --> 02:00:42.920]  Они начинают в разных позициях. Они не знают, когда они начали. Когда корреспондент пришел в момент времени 0, они уже были в разных позициях.
[02:00:42.920 --> 02:00:52.440]  Но при этом их скорость уже устакается. Погодите, он не хочет, чтобы два человека были в одной точке?
[02:00:52.440 --> 02:00:59.480]  Почему? Нет, это его устраивает. Но ему главное, чтобы он хочет сфоткать всех товарищей.
[02:00:59.480 --> 02:01:06.800]  Если они себя окажут в одной точке, его это супер устраивает. Но она может не провести.
[02:01:12.920 --> 02:01:33.680]  Тема, конечно, занятия вымекает. Но нам же интересно, а почему тордарный поиск работает?
[02:01:33.680 --> 02:01:42.680]  Есть, конечно, стандартный механизм имени у прихода. Давайте запустим тордарики и найдем оптимум.
[02:01:42.920 --> 02:01:47.920]  А, получаем 2. Давайте поделим его на 100 отрезков и на каждую мизницу. Тордарик овощ прокачит.
[02:01:47.920 --> 02:01:54.920]  Да, комитивы удачи авторам сделают тесты, которые это валят. Да, местами это бывает недоревиально.
[02:01:54.920 --> 02:02:07.920]  Поэтому иногда, конечно, прежде чем писать тордарный поиск, иногда имеет смысл убеждаться, а может ли, вообще, имеет ли место, вообще какая-то уния, какая-то унимодальция.
[02:02:07.920 --> 02:02:09.920]  Может, заодно и придумаем нормальную решению.
[02:02:10.160 --> 02:02:12.160]  Ну, кстати, да.
[02:02:22.160 --> 02:02:25.160]  Нет, конечно, сталкивались, но наизусть не помним.
[02:02:25.160 --> 02:02:29.160]  А после порадования писали, так нагребы забыли.
[02:02:29.160 --> 02:02:31.160]  Ну, понятно, что задачу помним.
[02:02:31.160 --> 02:02:33.160]  Да.
[02:02:33.160 --> 02:02:38.160]  Ну, скажу с какого возраста. Почему эти функции русские?
[02:02:40.160 --> 02:02:50.160]  Ну, хотя идея простая. Давайте допишем.
[02:02:50.160 --> 02:02:53.160]  Функция длина отрезка t.
[02:02:53.160 --> 02:02:58.160]  Вот давайте так и напишем. Как это написать? Чему равно длина t?
[02:02:58.160 --> 02:03:00.160]  Ну, это максимум.
[02:03:00.160 --> 02:03:02.160]  И что?
[02:03:02.160 --> 02:03:04.160]  Минус.
[02:03:04.160 --> 02:03:06.160]  Минус что?
[02:03:06.160 --> 02:03:08.160]  Ну, минимум.
[02:03:08.400 --> 02:03:10.400]  Независимо, да?
[02:03:14.400 --> 02:03:16.400]  Так, замечательно.
[02:03:16.400 --> 02:03:18.400]  Так, смотрите.
[02:03:18.400 --> 02:03:20.400]  Эта функция выпукла вверх.
[02:03:22.400 --> 02:03:24.400]  В данном случае выпукла вниз.
[02:03:24.400 --> 02:03:26.400]  Ну, точнее, она и то, и то.
[02:03:26.400 --> 02:03:31.400]  Но раз она выпукла вниз, то максимум выпуклых вниз функций, очевидно, выпуклых вниз.
[02:03:33.400 --> 02:03:35.400]  Теперь заметим, что эти функции выпуклые вверх.
[02:03:35.640 --> 02:03:37.640]  Ну, поняли, да?
[02:03:37.640 --> 02:03:45.640]  Можно минимум внести внутрь и минус внести в скобки и минимум заменить на максимум.
[02:03:45.640 --> 02:03:47.640]  Тогда получится то же самое.
[02:03:49.640 --> 02:03:52.640]  Ну, минус заменить на плюс, в скобках нарисовать минус.
[02:03:52.640 --> 02:03:59.640]  Ну, скажем так, все-таки полезно иногда себе воображать все-таки это, что минимум выпуклых вверх функций выпуклых вверх.
[02:03:59.640 --> 02:04:03.640]  Вот полезно это воображать именно в этом месте.
[02:04:03.880 --> 02:04:07.880]  Одно дело, да, доказать-то понятно, можно, как ты сказал.
[02:04:07.880 --> 02:04:13.880]  Но одно дело доказать, а другое дело, как все-таки воображать, чтобы подобные вещи появились.
[02:04:15.880 --> 02:04:16.880]  Так что, да.
[02:04:16.880 --> 02:04:19.880]  Ну, замечательно, что мы вычитаем из выпуклых вниз функции выпуклые вверх.
[02:04:19.880 --> 02:04:21.880]  Но минус выпуклых вверх функции выпуклых вниз.
[02:04:21.880 --> 02:04:25.880]  Поэтому получается сумма выпуклых вниз, сумма выпуклых вниз.
[02:04:25.880 --> 02:04:27.880]  Ну и, собственно, все.
[02:04:28.120 --> 02:04:35.120]  Так что вот так вот, на самом деле, мнонеподобные задачи, на самом деле, могут решаться.
[02:04:39.120 --> 02:04:40.120]  Вот.
[02:04:41.120 --> 02:04:44.120]  Да, кстати, вот это мощно.
[02:04:46.120 --> 02:04:47.120]  Жестко.
[02:04:48.120 --> 02:04:51.120]  Не, ну просто так на это смотрение очевидно.
[02:04:51.120 --> 02:04:55.120]  Ну, то есть, не очевидно, почему это в целом выпукло, а если вот так по кусочкам.
[02:04:55.360 --> 02:04:56.360]  Ну.
[02:04:56.360 --> 02:04:59.360]  Ну, потому что, по-моему, я, наверное, правильно распишу и буду собираться.
[02:05:01.360 --> 02:05:02.360]  Вот.
[02:05:03.360 --> 02:05:04.360]  Значит, что еще?
[02:05:06.360 --> 02:05:07.360]  А еще, ну вот.
[02:05:07.360 --> 02:05:10.360]  Ну, еще можно заметить, что, так, ну, не для задачи.
[02:05:10.360 --> 02:05:15.360]  Ну, на самом деле, можно еще заметить, что выпуклость иногда имеет место не только
[02:05:15.360 --> 02:05:19.360]  на функциях от одной переменной, но и функциях от логик переменной.
[02:05:19.360 --> 02:05:23.360]  Ну, так бывает задача где вот функция от двух переменных.
[02:05:23.600 --> 02:05:26.600]  Ну, определение, в общем-то, никак не поменится.
[02:05:27.600 --> 02:05:30.600]  Думаю, свойство по инфрериуму есть, более-менее, в общем.
[02:05:32.600 --> 02:05:33.600]  Ну, вытекает вопрос.
[02:05:33.600 --> 02:05:34.600]  То есть, можно оно.
[02:05:34.600 --> 02:05:35.600]  Ну, тогда вытекает вопрос.
[02:05:35.600 --> 02:05:41.600]  То есть, не буду проводить уже прям, там, супер, там, там всех супер определений.
[02:05:43.600 --> 02:05:47.600]  Ну, просто скажем, что, в принципе, от функции нескольких переменных тоже подобные
[02:05:47.600 --> 02:05:48.600]  вещи верны.
[02:05:48.840 --> 02:05:52.840]  И часто функция от двух, выпуклая функция от двух переменных,
[02:05:52.840 --> 02:05:55.840]  можно себе даже как-то вообразить вот таким вот красивым образом.
[02:05:56.840 --> 02:05:59.840]  Потому что функция вот как-то выглядит вот примерно так.
[02:05:59.840 --> 02:06:06.840]  Ну, например, функция, допустим, вот f от x равно расстояние от точки, там, f от p,
[02:06:06.840 --> 02:06:08.840]  от точки p до точки a.
[02:06:10.840 --> 02:06:12.840]  То есть, это как выглядит это расстояние?
[02:06:13.840 --> 02:06:16.840]  Ну, это расстояние выглядит как, смотрите, то есть, такая галочка,
[02:06:17.080 --> 02:06:20.080]  которую насадили на шампур и прокрутили.
[02:06:21.080 --> 02:06:22.080]  Конус?
[02:06:23.080 --> 02:06:24.080]  Да.
[02:06:24.080 --> 02:06:25.080]  Это называется, в категории это называется конус.
[02:06:26.080 --> 02:06:28.080]  Нет, это называется галочка, которую посадили.
[02:06:29.080 --> 02:06:30.080]  Ну, я называю это миксер.
[02:06:30.080 --> 02:06:33.080]  У меня как-то миксер просто в голове автоматически возникает.
[02:06:34.080 --> 02:06:38.080]  То есть, при этом галочку насаживаем на миксер, включаем, получаем конус.
[02:06:40.080 --> 02:06:41.080]  Вот.
[02:06:41.080 --> 02:06:44.080]  Или, например, получится вот такая красивая прокрученная параболка,
[02:06:44.320 --> 02:06:47.320]  то есть, вы скажете, что f от p равно расстоянием квадрата.
[02:06:48.320 --> 02:06:49.320]  Ну, это у нас там не было, это орех.
[02:06:50.320 --> 02:06:51.320]  Орех?
[02:06:52.320 --> 02:06:53.320]  Да.
[02:06:54.320 --> 02:06:55.320]  Какой бесконечный вверх орех.
[02:06:56.320 --> 02:06:57.320]  Не, ну если сверху закрыть.
[02:06:58.320 --> 02:06:59.320]  Шляпочкой.
[02:07:00.320 --> 02:07:01.320]  Ну, такая на пальчике еще появляется.
[02:07:02.320 --> 02:07:03.320]  Ладно, много ассоциаций.
[02:07:04.320 --> 02:07:05.320]  Вот.
[02:07:06.320 --> 02:07:07.320]  Еще 25.
[02:07:08.320 --> 02:07:09.320]  Да, много еще будет есть.
[02:07:10.320 --> 02:07:11.320]  Так, теперь есть какой-то вопрос.
[02:07:12.320 --> 02:07:13.320]  Хорошо, если у нас есть функция выполниться от двух перевилок, как это минимум найти?
[02:07:14.320 --> 02:07:19.320]  Ну, оказывается, что работает метод, который называется вложенная тернария.
[02:07:20.320 --> 02:07:23.320]  Ну, во-первых, заметим, что функция от двух переменных рук вниз, она...
[02:07:24.320 --> 02:07:26.320]  Если запиксируем каждый, какой, например, игр,
[02:07:27.320 --> 02:07:29.320]  тогда у нас получится функция, как функция от одной переменной, от x,
[02:07:30.320 --> 02:07:31.320]  и эта функция тоже будет от рук вниз.
[02:07:32.320 --> 02:07:35.320]  То есть, при каждом фиксированном игре можно минимум найти.
[02:07:36.320 --> 02:07:39.320]  Ну, дальше в качестве упражнения стоит доказать, что это минимум,
[02:07:40.320 --> 02:07:42.320]  то есть у нас функция минимум от игрока,
[02:07:42.560 --> 02:07:43.560]  эта функция тоже...
[02:07:46.560 --> 02:07:47.560]  Ну, суть та же.
[02:07:48.560 --> 02:07:51.560]  То есть, если мы найдем две точки каражи, из которых является минимум при своем игре,
[02:07:52.560 --> 02:07:53.560]  то мы их можем соединить отрезочками и обнаружить,
[02:07:54.560 --> 02:07:57.560]  что минимумы должны быть не выше этого отрезочка.
[02:08:00.560 --> 02:08:03.560]  Ну, потому что там есть хотя бы какие-то точки, при каждом игре, не выше этого отрезка.
[02:08:04.560 --> 02:08:05.560]  Значит, минимум будет не выше этого.
[02:08:07.560 --> 02:08:08.560]  Так, я сейчас не слишком высоко говорю?
[02:08:09.560 --> 02:08:10.560]  Нет?
[02:08:10.800 --> 02:08:11.800]  Нет?
[02:08:12.800 --> 02:08:15.800]  Ну, сейчас вроде все понятно, тут, наверное, не к тебе особо говорить.
[02:08:17.800 --> 02:08:18.800]  Вот.
[02:08:19.800 --> 02:08:22.800]  Ну, какие-то задачи действительно могут решаться.
[02:08:24.800 --> 02:08:26.800]  Ну, на самом деле, есть вот одна неожиданная задача,
[02:08:27.800 --> 02:08:29.800]  которую все время дают как упражнение до пересечения полуплоскостей,
[02:08:30.800 --> 02:08:31.800]  хотя решается она вложена в Тернарик.
[02:08:33.800 --> 02:08:34.800]  Задача такая.
[02:08:35.800 --> 02:08:38.800]  Дан выполнен полуплоскостей.
[02:08:40.800 --> 02:08:42.800]  Дан выполнен в угольнях.
[02:08:43.800 --> 02:08:45.800]  Найдите, пожалуйста, оружие с максимального радиуса,
[02:08:46.800 --> 02:08:48.800]  которое можно поместить внутрь этого уголка.
[02:08:49.800 --> 02:08:52.800]  А, сейчас.
[02:08:53.800 --> 02:08:54.800]  Ну да, очевидно.
[02:08:55.800 --> 02:08:56.800]  Ну, потому что теперь будет парад без выпуска и раз.
[02:08:57.800 --> 02:08:58.800]  Вот.
[02:08:59.800 --> 02:09:00.800]  И проверка на высоту.
[02:09:01.800 --> 02:09:02.800]  Да.
[02:09:04.800 --> 02:09:07.800]  Так, ой, кстати, надо бы нам на перерыв еще пересечения полуплоскости.
[02:09:08.800 --> 02:09:09.800]  Да, усудите.
[02:09:10.800 --> 02:09:11.800]  Ничего.
[02:09:12.800 --> 02:09:13.800]  Нормально.
[02:09:14.800 --> 02:09:15.800]  Итак, вот возникает такой вопрос.
[02:09:16.800 --> 02:09:18.800]  Вот как решать такую задачу.
[02:09:19.800 --> 02:09:20.800]  Ну, все, ладно.
[02:09:21.800 --> 02:09:24.800]  Кто-то уже хуже пихал, что-то оно не пихается.
[02:09:25.800 --> 02:09:26.800]  Да, это реально невозможно.
[02:09:27.800 --> 02:09:28.800]  Да, но это...
[02:09:29.800 --> 02:09:30.800]  Я, правда, я Тернарник не делал с золотым сечением,
[02:09:31.800 --> 02:09:32.800]  но я делал с вот этим вот, который от елок палок.
[02:09:33.800 --> 02:09:34.800]  Ну и да.
[02:09:35.800 --> 02:09:36.800]  Короче, очень-очень жаль.
[02:09:37.800 --> 02:09:38.800]  Да, это странно.
[02:09:39.040 --> 02:09:41.040]  Потому что в том решении, который у меня воображается,
[02:09:42.040 --> 02:09:43.040]  то в том, что там константа вообще не угодит.
[02:09:44.040 --> 02:09:45.040]  Нет, ну понятно, что когда я уже...
[02:09:46.040 --> 02:09:48.040]  Когда моя финальная версия, там уже очевидно,
[02:09:49.040 --> 02:09:50.040]  что просто Convex.Half.Prix делаешь и MLGn вырезает.
[02:09:51.040 --> 02:09:52.040]  Convex.Half.Prix.
[02:09:53.040 --> 02:09:54.040]  Всего?
[02:09:55.040 --> 02:09:56.040]  Да.
[02:09:57.040 --> 02:09:58.040]  Видит Convex.Half.Prix.
[02:09:59.040 --> 02:10:00.040]  Ну там, короче...
[02:10:02.040 --> 02:10:05.040]  Ну там просто у меня в коде ищется максимум по прямым в итоге.
[02:10:06.040 --> 02:10:07.040]  Да.
[02:10:07.280 --> 02:10:08.280]  Максимум по прямым в итоге.
[02:10:09.280 --> 02:10:10.280]  Максимум.
[02:10:11.280 --> 02:10:12.280]  В коде ищется...
[02:10:15.280 --> 02:10:16.280]  Максимум.
[02:10:25.280 --> 02:10:27.280]  Так, ну видим, у нас совсем разные решения.
[02:10:28.280 --> 02:10:29.280]  Ну ладно, давайте ваш послушаем.
[02:10:30.280 --> 02:10:31.280]  Значит, давайте послушаем майор.
[02:10:32.280 --> 02:10:34.280]  Значит, идея, на самом деле, такая.
[02:10:37.280 --> 02:10:39.280]  Переформулируем задачу следующим образом.
[02:10:40.280 --> 02:10:41.280]  Что такое найти максимальный радиус?
[02:10:42.280 --> 02:10:46.280]  Надо найти точку, расстояние от которой до границы многоугольника,
[02:10:47.280 --> 02:10:48.280]  как можно больше.
[02:10:49.280 --> 02:10:50.280]  Логично, да?
[02:10:54.280 --> 02:10:55.280]  Ну то есть надо что делать?
[02:10:56.280 --> 02:10:57.280]  А как найти расстояние до границы многоугольника?
[02:10:58.280 --> 02:10:59.280]  Надо просто перебрать все отрезки,
[02:11:00.280 --> 02:11:03.280]  найти расстояние до этих отрезков и выбрать из них минимальное.
[02:11:04.280 --> 02:11:06.280]  Но на самом деле, можно не до отрезков, это привык.
[02:11:07.280 --> 02:11:08.280]  Вот.
[02:11:09.280 --> 02:11:12.280]  Да, но с другой стороны, заметим, что можно с отрезками не заморачиваться,
[02:11:13.280 --> 02:11:14.280]  а можно найти и расстояние до прямых.
[02:11:15.280 --> 02:11:16.280]  Надо только, чтобы она лежала.
[02:11:17.280 --> 02:11:22.280]  И сильно не переживать насчет того, что у некоторых точек окажется это расстояние пойдет куда-то не туда.
[02:11:23.280 --> 02:11:26.280]  Потому что если это расстояние пойдет вне отрезка,
[02:11:27.280 --> 02:11:31.280]  то это означает, что просто до соседей прямой, видимо, расстояние будет широко ближе.
[02:11:32.280 --> 02:11:33.280]  Единственное, чтобы точка была внутри.
[02:11:34.280 --> 02:11:35.280]  Да.
[02:11:35.520 --> 02:11:36.520]  Ну, конечно.
[02:11:37.520 --> 02:11:40.520]  Просто почему нам это выгодно?
[02:11:41.520 --> 02:11:42.520]  Выгодно нам это вот почему.
[02:11:43.520 --> 02:11:46.520]  Нам это выгодно, потому что расстояние до прямой
[02:11:47.520 --> 02:11:50.520]  внутри многоугольника, это функция, выпуклая куда?
[02:12:00.520 --> 02:12:01.520]  Вот.
[02:12:02.520 --> 02:12:03.520]  И туда, и туда.
[02:12:05.520 --> 02:12:08.520]  Как выглядит график функции расстояния от точки до прямой?
[02:12:09.520 --> 02:12:12.520]  На самом деле, это будет такая книжечка.
[02:12:15.520 --> 02:12:18.520]  Вот прямая и график будет вот так.
[02:12:19.520 --> 02:12:20.520]  Логично, да?
[02:12:21.520 --> 02:12:25.520]  Мы рассматриваем, мы живем только в одной полуплоскости, поэтому функция такая.
[02:12:26.520 --> 02:12:28.520]  Выпукло и вниз, и вверх.
[02:12:28.760 --> 02:12:35.760]  Ну, мы знаем, что раз функция выпуклая вверх, то минимум выпуклой функции тоже выпуклый вверх,
[02:12:36.760 --> 02:12:37.760]  поэтому нас не устраивает.
[02:12:38.760 --> 02:12:39.760]  Понятно, да?
[02:12:40.760 --> 02:12:44.760]  Поэтому получается, тронарный поиск возможен, правда, с мелкой оговоркой.
[02:12:45.760 --> 02:12:50.760]  Этот тронарный поиск ищется, мы должны точно не переворять, строго внутреннего угольника.
[02:12:51.760 --> 02:12:57.760]  Потому что сама по себе эта функция, оказывается, не является выпуклой вверх на всей плоскости.
[02:12:58.760 --> 02:13:00.760]  И вот теперь мы искали вопрос.
[02:13:01.760 --> 02:13:05.760]  А как же нам делать тронарный поиск так, чтобы он делался именно внутреннего угольника?
[02:13:08.760 --> 02:13:09.760]  Пересечение прямой.
[02:13:10.760 --> 02:13:11.760]  Ага, да.
[02:13:12.760 --> 02:13:16.760]  Кто-то предлагает в этом месте предельно честно находить это пересечение и искать минимум только на этом отрезке.
[02:13:17.760 --> 02:13:18.760]  Это и быстрее работает.
[02:13:19.760 --> 02:13:22.760]  Ну, не всегда, если нам дадут какое-то очень замороченное вот такое вот,
[02:13:23.760 --> 02:13:25.760]  то настолько же работает, а глобально быстрее.
[02:13:26.760 --> 02:13:27.760]  Я предупреждал.
[02:13:28.000 --> 02:13:29.000]  Так вот.
[02:13:30.000 --> 02:13:31.000]  Но на самом деле есть более читерский метод.
[02:13:32.000 --> 02:13:33.000]  Есть вот, смотрите, внимание.
[02:13:34.000 --> 02:13:35.000]  Читерский метод, как этого избежать?
[02:13:38.000 --> 02:13:40.000]  А давайте все прямые ориентируем
[02:13:44.000 --> 02:13:47.000]  и будем искать ориентированное расстояние до прямой.
[02:13:50.000 --> 02:13:51.000]  Что такое ориентированное?
[02:13:52.000 --> 02:13:55.000]  Это означает, что если мы ближе в левый полуполос, то расстояние будет со знаком плюс,
[02:13:55.240 --> 02:13:57.240]  а справа от него со знаком плюс.
[02:14:02.240 --> 02:14:07.240]  Тогда расстояние до этой прямой будет просто такая вот наклоненная плоскость, правда?
[02:14:08.240 --> 02:14:09.240]  Ну, это чутко.
[02:14:10.240 --> 02:14:12.240]  Это надо запретить такое.
[02:14:13.240 --> 02:14:14.240]  Почему?
[02:14:15.240 --> 02:14:16.240]  Ну, почему долго?
[02:14:17.240 --> 02:14:18.240]  Ну, что делать?
[02:14:19.240 --> 02:14:22.240]  Это олимпионы побеждают толком, кто придумает самое простое решение.
[02:14:22.480 --> 02:14:25.480]  Ну, собственно, я бы и подставлю, чтобы это было решением образка.
[02:14:28.480 --> 02:14:29.480]  Ну, вот.
[02:14:30.480 --> 02:14:33.480]  То есть такая функциональная плоскость уже на всей плоскости,
[02:14:34.480 --> 02:14:39.480]  а если точка лежит вне многоугольника, то минимум расстояния окажется просто отрицательным.
[02:14:40.480 --> 02:14:44.480]  И тогда это выводит в том, что тренированный поиск вычислить уже не внутри многоугольника,
[02:14:45.480 --> 02:14:47.480]  а на всей плоскости, хотя в баунденбоксе.
[02:14:47.720 --> 02:14:52.720]  Это банально дольше работает, потому что у нас границы бенпоиска уже, когда мы внутри многоугольника лечим.
[02:14:53.720 --> 02:14:54.720]  Ну, мне кажется, по константу.
[02:14:55.720 --> 02:14:58.720]  Границы от баунденбокса облечаться могут не сильно,
[02:14:59.720 --> 02:15:03.720]  но компенсируется тем, что у тебя нет этих безобразных бенпоисков с вычислениями, которые...
[02:15:04.720 --> 02:15:05.720]  Зачем бенпоиск?
[02:15:05.720 --> 02:15:08.720]  Ну, или там за линию проходишь и находишь.
[02:15:09.720 --> 02:15:11.720]  Ну, вот тебе и шесткач Константин.
[02:15:11.960 --> 02:15:14.960]  Так нет, у меня это N log N.
[02:15:15.960 --> 02:15:17.960]  У нас же решение за N log квадрат.
[02:15:18.960 --> 02:15:19.960]  Ну, да.
[02:15:19.960 --> 02:15:21.960]  А найти вот эти границы это N log N.
[02:15:21.960 --> 02:15:23.960]  Потому что я это только во внешнем делаю.
[02:15:24.960 --> 02:15:27.960]  И поэтому он вообще не влияет.
[02:15:33.960 --> 02:15:34.960]  Ну, нет.
[02:15:35.960 --> 02:15:36.960]  Ну, нет.
[02:15:37.960 --> 02:15:38.960]  Ну, нет.
[02:15:39.200 --> 02:15:40.200]  Ну, нет.
[02:15:41.200 --> 02:15:42.200]  Ну, не знаю.
[02:15:42.200 --> 02:15:43.200]  Ну, скажем так.
[02:15:43.200 --> 02:15:44.200]  Ладно, формуаль может и не влияет.
[02:15:45.200 --> 02:15:48.200]  Ну, еще раз, мы просто пробегаемся во внешнем тернарнике.
[02:15:49.200 --> 02:15:52.200]  Мы пробегаемся один раз по границе и смотрим просто их координату пересечения.
[02:15:53.200 --> 02:15:54.200]  Вот.
[02:15:55.200 --> 02:15:58.200]  И так делаем N log N раз, а внутренний у нас N log квадрат.
[02:15:59.200 --> 02:16:00.200]  Ну, вот.
[02:16:01.200 --> 02:16:02.200]  Ну, не знаю.
[02:16:03.200 --> 02:16:04.200]  Ну, сформулируем так.
[02:16:04.440 --> 02:16:07.440]  И в моем решении тебе придется исключительно пробежаться по...
[02:16:08.440 --> 02:16:10.440]  Значит, по другому и найти расстояние.
[02:16:11.440 --> 02:16:12.440]  Да.
[02:16:12.440 --> 02:16:15.440]  Но у тебя еще какие-то лишние N действия тратятся на то, чтобы этот отрезок найти.
[02:16:16.440 --> 02:16:17.440]  У меня они не тратятся.
[02:16:18.440 --> 02:16:23.440]  Ну, в плане это не влияет, потому что у вас N log N есть и найти расстояние внутри одного тернарника.
[02:16:24.440 --> 02:16:26.440]  А пробежаться на те границы просто N.
[02:16:27.440 --> 02:16:28.440]  Ну.
[02:16:28.440 --> 02:16:29.440]  Поэтому это какой-то мидер.
[02:16:29.680 --> 02:16:36.680]  Ну, тратится этот мидер, правда, не N, а N log N или N log N?
[02:16:37.680 --> 02:16:40.680]  Нет, суммарно N log, но все решения суммарно N log квадрат.
[02:16:41.680 --> 02:16:42.680]  Ну, да.
[02:16:43.680 --> 02:16:48.680]  Ну, еще раз, это типа, если TL не подогнан так, чтобы заходить в 0,9, то это не влияет.
[02:16:49.680 --> 02:16:50.680]  А если подогнан, то вопрос их задачи.
[02:16:51.680 --> 02:16:52.680]  Ну, возможно.
[02:16:53.680 --> 02:16:57.680]  Правда, у моего как-то преимущество в том, что мы более скучно пишем, то проще.
[02:16:57.920 --> 02:16:58.920]  Ну, давайте дальше двигаться.
[02:16:59.920 --> 02:17:00.920]  Слово.
[02:17:00.920 --> 02:17:01.920]  Без смысла.
[02:17:01.920 --> 02:17:02.920]  А сколько нам летит?
[02:17:03.920 --> 02:17:04.920]  1,45.
[02:17:05.920 --> 02:17:06.920]  1,45.
[02:17:07.920 --> 02:17:09.920]  Так, ну, окей, значит, тогда, так, ну, отлично.
[02:17:10.920 --> 02:17:12.920]  Значит, еще что-то пообсуждать можно.
[02:17:13.920 --> 02:17:17.920]  Так, ну, говоря, конечно, об этой задачи, можно уже, конечно, плавненько перейти и перейти через полуплоскость.
[02:17:18.920 --> 02:17:19.920]  Ну, правда, это такая подрядочная тема.
[02:17:20.920 --> 02:17:25.920]  Обсуждать теоретически, где можно мало что, а кодик почему-то это не разрешается.
[02:17:27.920 --> 02:17:28.920]  У нас есть такая задача?
[02:17:29.920 --> 02:17:30.920]  Нет.
[02:17:31.920 --> 02:17:32.920]  Ну, можете эту задать.
[02:17:33.920 --> 02:17:36.920]  Нет, возможно, вторая задача, окружность такая.
[02:17:37.920 --> 02:17:42.920]  Нет, потому что, ну, да, смотрите, потому что как бы есть, у этой задачи есть модификация.
[02:17:43.920 --> 02:17:48.920]  Пихните, пожалуйста, в многоугольник две окружности одинакового радиуса, которые еще и не пересекаются.
[02:17:49.920 --> 02:17:50.920]  Да, это тоже и домашний.
[02:17:51.920 --> 02:17:56.920]  И вот тут вы уже, я боюсь, без, там, без пересечения плавненько все уже рискуете не обойтись.
[02:17:57.920 --> 02:18:00.920]  Так, ну, вообще, о чем задача вообще пересечения полуплоскости?
[02:18:01.920 --> 02:18:03.920]  Ну, в принципе, как следует из названия.
[02:18:04.920 --> 02:18:09.920]  То есть как бы данные полуплоскости, полуплоскости мы будем создавать ориентированными прямыми.
[02:18:10.920 --> 02:18:15.920]  То есть дана прямая, у нее есть направление, то, что слева от нее, мы будем считать ее полуплоскостью.
[02:18:18.920 --> 02:18:19.920]  Понятно, да?
[02:18:21.920 --> 02:18:25.920]  Значит, к чему это нас приводит?
[02:18:26.160 --> 02:18:28.160]  К чему это нас приводит?
[02:18:29.160 --> 02:18:34.160]  Приводит нас к этому, к чему это нас приводит.
[02:18:35.160 --> 02:18:37.160]  Ну, задача, на самом деле, такая.
[02:18:38.160 --> 02:18:40.160]  В том или ином виде найти пересечения полуплоскости.
[02:18:41.160 --> 02:18:43.160]  Ну, там разные задачи бывают, бывает просто задача.
[02:18:44.160 --> 02:18:48.160]  Данной полуплоскости, скажите, пожалуйста, не пузырит, пересечения не пустят.
[02:18:49.160 --> 02:18:50.160]  Просто да или нет.
[02:18:51.160 --> 02:18:52.160]  Потому что, на самом деле, если у вас есть...
[02:18:52.400 --> 02:18:53.400]  Давайте вот подумать.
[02:18:54.400 --> 02:18:57.400]  Если у вас давно несколько там полуплоскостей каких-то, то теперь давайте думать.
[02:18:58.400 --> 02:19:01.400]  Чем может быть вообще это пересечение?
[02:19:05.400 --> 02:19:07.400]  Обобщенным магниевым.
[02:19:08.400 --> 02:19:09.400]  Да.
[02:19:10.400 --> 02:19:13.400]  Как-нибудь при НОГЛАЭТ перепишут статья, да.
[02:19:15.400 --> 02:19:17.400]  Нет, реально, от реально к чему это может быть?
[02:19:22.400 --> 02:19:25.400]  Ну, может быть, вот так вот.
[02:19:26.400 --> 02:19:28.400]  А может, не выйдет, да?
[02:19:29.400 --> 02:19:31.400]  Так, ну да, все-таки, ладно, начнем с приятного.
[02:19:32.400 --> 02:19:37.400]  Полуплоскость выкупает нож, значит, пересечение полуплоскостей по-любому выкупает нож.
[02:19:38.400 --> 02:19:39.400]  По-любому.
[02:19:40.400 --> 02:19:41.400]  Так, теперь вопрос, как вы...
[02:19:42.400 --> 02:19:43.400]  Ну, и действительно.
[02:19:44.400 --> 02:19:46.400]  Ну, конечно, напрашивается, конечно, выкупил бы уголь, и тем более, что любой выкупил бы уголь,
[02:19:47.400 --> 02:19:49.400]  то это пересечение, вот, понятно, как задано полуплоскостей.
[02:19:49.640 --> 02:19:50.640]  Да.
[02:19:51.640 --> 02:19:52.640]  Так, а что еще может быть?
[02:19:53.640 --> 02:19:54.640]  Ну, пустое множество.
[02:19:55.640 --> 02:19:56.640]  Да, может быть, пустое множество.
[02:19:57.640 --> 02:19:59.640]  Может быть, большое множество.
[02:20:00.640 --> 02:20:01.640]  Большое, это как может быть?
[02:20:02.640 --> 02:20:03.640]  Ну, что угол, конечно.
[02:20:04.640 --> 02:20:06.640]  Ну, может быть, угол или вот, к.
[02:20:07.640 --> 02:20:11.640]  Ну, если еще мегугольники с границы, там бывают точки и отрезки.
[02:20:12.640 --> 02:20:13.640]  Ну, чего?
[02:20:14.640 --> 02:20:15.640]  Точки и отрезки бывают.
[02:20:16.640 --> 02:20:18.640]  Да, бывает отрезок, ну, такие подлые вещи, да.
[02:20:19.640 --> 02:20:20.640]  Такие вот еще будут.
[02:20:21.640 --> 02:20:22.640]  Нет, там будут разные подрядки.
[02:20:23.640 --> 02:20:26.640]  Просто есть еще очень плотный случай.
[02:20:27.640 --> 02:20:28.640]  Какой?
[02:20:29.640 --> 02:20:30.640]  Какой?
[02:20:49.640 --> 02:20:53.720]  Г워 ци dairy cArgyr Portمكن
[02:21:06.720 --> 02:21:10.720]  И пу...
[02:21:11.720 --> 02:21:12.720]  Ладно, может...
[02:21:13.720 --> 02:21:15.720]  Тамël Maysapeetrokoy ab Wonderful
[02:21:16.720 --> 02:21:17.720]  Наверное, мы еще что-то забыли, но в целом вы Speaker.
[02:21:17.720 --> 02:21:39.720]  да нет, уже ничего не забыли, ну даже если забыли, ну на самом деле, чем это у нас, если совместить, да справиться с этим мне помогает съемка, съемка с рекламой, ой, свечерки мороженые, да, да, да, да, да, да, да, да, да, да.
[02:21:39.720 --> 02:21:41.720]  нет, ваше университет.
[02:21:41.720 --> 02:21:51.720]  да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да.
[02:22:11.720 --> 02:22:23.720]  для того, чтобы описать, по идее, все случаи, которые есть, нам достаточно гарантировать, что, как бы, смотрите, то есть бывают параллельные прямые, а бывают прямые, у которых не параллельно есть источники пересечения, да?
[02:22:23.720 --> 02:22:27.720]  так вот, давайте предположим, что все точки пересечения в этот ваулинг бокс попадают.
[02:22:27.720 --> 02:22:28.720]  проблема.
[02:22:28.720 --> 02:22:29.720]  что?
[02:22:29.720 --> 02:22:30.720]  проблема.
[02:22:30.720 --> 02:22:45.720]  ну, пока давайте для простоты предположим, да, может быть проблема, что эти точки пересечения уходят, потому что мы помним, потому что, как мы уже вычисляли, конечно, с вами, что, как бы, если у вас там, ограничение на координаты прямых, там, допустим, 1c, то ограничение на точку пересечения может быть порядка c в клубе.
[02:22:45.720 --> 02:22:48.720]  ну, обсуждали, почему это может быть.
[02:22:49.720 --> 02:22:50.720]  ну, вот, ну, по крайней мере, так лучше.
[02:22:50.720 --> 02:22:52.720]  вроде бы, так и не выяснили.
[02:22:52.720 --> 02:22:53.720]  да.
[02:22:53.720 --> 02:22:55.720]  ну, оцепьте лучше, чем c в клубе, у нас не получится.
[02:22:55.720 --> 02:22:56.720]  да.
[02:22:56.720 --> 02:23:00.720]  и что-то, почему у меня есть основания верить, что может и не получиться в природе.
[02:23:00.720 --> 02:23:01.720]  вот.
[02:23:01.720 --> 02:23:04.720]  впрочем, конечно, не бывает что-то там.
[02:23:04.720 --> 02:23:05.720]  вот.
[02:23:05.720 --> 02:23:24.720]  но если нам повезло Bounding Box, как бы, задержит все точки пересечения, то, на самом деле, заметим следующее, что, на самом деле, мы можем сказать, что внутри Bounding Box, то есть, скажем, что Bounding Box, это вот такие четыре дополнительные полуплоски.
[02:23:25.720 --> 02:23:38.720]  и тогда заметим, что любое, что теперь у нас любое пересечение, это какое-то просто выкупло многоугольник, или вот какая-то его вырожденная реинкарнация, типа отрезка или точка.
[02:23:38.720 --> 02:23:41.720]  ну, или плыть, если не пусто так, конечно.
[02:23:41.720 --> 02:23:42.720]  вот.
[02:23:42.720 --> 02:23:44.720]  но приятность, смотрите, какая.
[02:23:45.720 --> 02:23:52.720]  так как у нас, очевидно, там вот в этом пересечении все вот эти вершины, это точки пересечения каких-то прямых, то тогда получается что?
[02:23:52.720 --> 02:23:59.720]  тогда получается, что если это многоугольник был честный, то он и тут останется честным, ничего не поменяется, правда?
[02:23:59.720 --> 02:24:14.720]  а если он был там, выводил куда-то вал, то тогда просто оказывается многоугольник, просто некоторыми сторонами которого является часть Bounding Box, и, в принципе, по этим частям можно ориентироваться, ограниченное у вас реальное пересечение или нет.
[02:24:14.720 --> 02:24:17.720]  то есть это может вам технически помочь.
[02:24:17.720 --> 02:24:21.720]  то есть даже вот эта полоса, в принципе, этим прекрасно кушается.
[02:24:22.720 --> 02:24:29.720]  то есть полоса превратится просто вот в подобного рода полилагран, ну, где там, я не знаю, в четырех.
[02:24:32.720 --> 02:24:39.720]  так что в данном случае, оказывается, метод такого Bounding Box на самом деле очень хорошо работает.
[02:24:39.720 --> 02:24:40.720]  вот, понятно, да?
[02:24:40.720 --> 02:24:41.720]  честно мы знаем.
[02:24:41.720 --> 02:24:42.720]  в чем мы знаем?
[02:24:42.720 --> 02:24:44.720]  ну, что он едет.
[02:24:44.720 --> 02:24:46.720]  нет, слышно, Bounding Box есть всегда.
[02:24:46.720 --> 02:24:47.720]  ну да.
[02:24:47.720 --> 02:24:58.720]  потому что у вас всегда есть ограничение на точке пересечения, если вы знаете, у вас N точек, вы можете понять, найти ограничение на 12 точке пересечения, если они есть.
[02:24:58.720 --> 02:25:01.720]  поэтому Bounding Box какой-то есть, то есть да.
[02:25:04.720 --> 02:25:06.720]  но, что же мы будем делать дальше?
[02:25:07.720 --> 02:25:09.720]  но, значит, найти пересечение.
[02:25:09.720 --> 02:25:10.720]  как же его найти?
[02:25:10.720 --> 02:25:20.720]  ну, тут это тоже один из тех случаев, когда желательно, то есть надо внимательно смотреть, а какие у вас есть возможности, какие ограничения.
[02:25:20.720 --> 02:25:26.720]  в зависимости от этого можно написать сильно разные сложности решений.
[02:25:27.720 --> 02:25:29.720]  ну, как уровень Easy.
[02:25:30.720 --> 02:25:32.720]  полуплоскостей 100.
[02:25:32.720 --> 02:25:40.720]  давайте представим себе, что у вас дано 100 полуплоскостей, и вы хотите найти пересечение.
[02:25:42.720 --> 02:25:44.720]  тогда есть неожиданное решение.
[02:25:44.720 --> 02:25:47.720]  давайте тупо найдем все точки пересечения.
[02:25:49.720 --> 02:25:51.720]  все точки пересечения за квадрат.
[02:25:51.720 --> 02:25:55.720]  и для каждой из них за линию проверим, лежит ли она в пересечении.
[02:25:58.720 --> 02:26:00.720]  как проверить, лежит ли точка пересечения полуплоскостей?
[02:26:00.720 --> 02:26:03.720]  надо просто проверить, вернуть, что она лежит во всех полуплоскостях.
[02:26:04.720 --> 02:26:06.720]  ну и как это?
[02:26:07.720 --> 02:26:08.720]  все?
[02:26:08.720 --> 02:26:09.720]  просто какая?
[02:26:09.720 --> 02:26:10.720]  что?
[02:26:10.720 --> 02:26:11.720]  все или нет?
[02:26:12.720 --> 02:26:14.720]  пока я говорю так.
[02:26:14.720 --> 02:26:21.720]  я просто нахожусь, нашел каждый квадрат пересечения, для каждой из них за линию проверил, кто лежит в пересечении полуплоскости, а кто не лежит.
[02:26:22.720 --> 02:26:23.720]  так вот.
[02:26:23.720 --> 02:26:32.720]  движение такое, что если хотя бы несколько точек найдется, то есть подозрение, что они и будут образовывать полуплоскость.
[02:26:33.720 --> 02:26:39.720]  останется только их отсектировать по полярному углу, относить на одну из них, и в общем вот оно пересечение.
[02:26:46.720 --> 02:26:49.720]  ну не будет точек, который не внутри.
[02:26:49.720 --> 02:26:50.720]  два?
[02:26:50.720 --> 02:26:51.720]  почему внутри?
[02:26:51.720 --> 02:26:57.720]  ну давай, возьмем букву оболочки этих точек, докажем, что внутри ни одной точки нет.
[02:26:58.720 --> 02:27:01.720]  потому что действительно, предположим, что случайно нашла.
[02:27:01.720 --> 02:27:04.720]  ей соответствовала какая-то полуплоскость.
[02:27:05.720 --> 02:27:10.720]  но тогда есть подозрение, что какие-то части этих решений просто не попадет в эту полуплоскость.
[02:27:10.720 --> 02:27:17.720]  и тогда непонятно, и тогда противоречиесь тем, что мы знаем, что эти решения в этой полуплоскости лежать обязаны.
[02:27:20.720 --> 02:27:30.720]  получается за 10 фусков.
[02:27:30.720 --> 02:27:34.720]  ну в общем-то, да.
[02:27:35.720 --> 02:27:44.720]  это видимо знаменитый математик Вира по фамилии Кубецкий нам всегда помогает.
[02:27:44.720 --> 02:27:48.720]  то есть он конечно немного тормоз, но иногда он помогает.
[02:27:48.720 --> 02:27:51.720]  он уж тормозно работает, но быстро отбудется.
[02:27:51.720 --> 02:27:54.720]  так что, знаете, иногда как писали, то есть он...
[02:27:54.720 --> 02:27:59.720]  то есть иногда очень хочется там и писать ПРФ, чтобы найти расстояние от першин до всех остальных,
[02:27:59.720 --> 02:28:02.720]  но на самом деле иногда окончание позволяет просто написать флой и прийти париться.
[02:28:02.720 --> 02:28:06.720]  да, это может быть формально хуже по 8.30, но как-то непринципиально.
[02:28:06.720 --> 02:28:08.720]  ну просто плой быстренько.
[02:28:08.720 --> 02:28:11.720]  еще подсловно стабилизируется.
[02:28:11.720 --> 02:28:15.720]  ну кто-то и прикол, что Флойд пишет ПОРКА, ФОРГИ, ФОРЖИ, РАДОСТЬ.
[02:28:17.720 --> 02:28:19.720]  что, нет?
[02:28:19.720 --> 02:28:21.720]  да.
[02:28:21.720 --> 02:28:25.720]  кто-то и прикол, что был у Флойд это сложный алгоритм, он там каким-то типа дерево доминаторов.
[02:28:25.720 --> 02:28:26.720]  ну конечно, да.
[02:28:26.720 --> 02:28:28.720]  я его в жизни писала как-то два, наверное.
[02:28:28.720 --> 02:28:32.720]  ну да, ну как бы, ну в дубляшной, но все равно это пять строк.
[02:28:32.720 --> 02:28:34.720]  дерево доминатор.
[02:28:34.720 --> 02:28:36.720]  а, ладно, плей, да.
[02:28:36.720 --> 02:28:38.720]  пять дерево доминаторов.
[02:28:38.720 --> 02:28:40.720]  ладно.
[02:28:40.720 --> 02:28:42.720]  давайте, уровень повыше.
[02:28:44.720 --> 02:28:46.720]  как решить задачу за квадрат?
[02:28:48.720 --> 02:28:50.720]  ну в принципе, картинку я уже нарисовал.
[02:28:50.720 --> 02:28:54.720]  мы честно храним пересечения и добавляем прямые пазмы.
[02:28:55.720 --> 02:28:56.720]  вот.
[02:28:56.720 --> 02:29:00.720]  ну честно, и честно вытитываем все вершины, которые туда не попали.
[02:29:03.720 --> 02:29:04.720]  прямо предельно.
[02:29:04.720 --> 02:29:07.720]  если у вас можно писать за квадрат, то это пишет прямо предельно.
[02:29:07.720 --> 02:29:10.720]  честно, можно прям пробежаться по другу угольнику.
[02:29:10.720 --> 02:29:13.720]  если точка лежит в полуплоскости, добавляем.
[02:29:13.720 --> 02:29:15.720]  если не лежит, не добавляем.
[02:29:15.720 --> 02:29:18.720]  если одна лежит, другая нет, то добавляем ее в точку пересечения.
[02:29:20.720 --> 02:29:22.720]  что еще раз мы делаем?
[02:29:22.720 --> 02:29:24.720]  ну, мы интеративно делаем.
[02:29:26.720 --> 02:29:31.720]  добавляем полуплоскости по одной и поддерживаем текущие пересечения полуплоскостей.
[02:29:31.720 --> 02:29:33.720]  оно у нас всегда выплопшенное.
[02:29:33.720 --> 02:29:37.720]  если у нас есть bounding box, то как бы у нас изначально есть такой прямоугольник.
[02:29:38.720 --> 02:29:43.720]  а так на каждом шаге надо найти пересечение полуплоскости и выплопку угольника,
[02:29:43.720 --> 02:29:46.720]  в чем разрешается это делать за линию.
[02:29:49.720 --> 02:29:50.720]  понятно, да?
[02:29:51.720 --> 02:29:56.720]  это мы делаем, внимание, это делается здесь предельно чисто.
[02:29:57.720 --> 02:30:00.720]  мы прям идем по многоугольнику и говорим, что, во-первых,
[02:30:00.720 --> 02:30:03.720]  если вершина лежит в полуплоскости, мы ее добавляем в ответ.
[02:30:03.720 --> 02:30:05.720]  если не лежит, то не добавляем.
[02:30:05.720 --> 02:30:08.720]  причем, если при переходе по нему состояние сменилось,
[02:30:09.720 --> 02:30:13.720]  то мы добавляем точку пересечения прямой и отрезка.
[02:30:16.720 --> 02:30:19.720]  ну, придется там решать еще ситуацию, когда вершина попала на саму эту прямую,
[02:30:19.720 --> 02:30:21.720]  но это уже мелочи.
[02:30:22.720 --> 02:30:23.720]  вот, понятно, да?
[02:30:24.720 --> 02:30:27.720]  так, ну теперь я расскажу этот вопрос.
[02:30:28.720 --> 02:30:32.720]  а если m все-таки в 100 тысяч?
[02:30:36.720 --> 02:30:38.720]  ну, решение на качестве само собой.
[02:30:38.720 --> 02:30:40.720]  делаем то же самое, но в текарном деле.
[02:30:42.720 --> 02:30:45.720]  ну, мы сегодня уже подобные технологии обсуждали.
[02:30:49.720 --> 02:30:52.720]  то есть такое динамическое пересечение полуплоскостей.
[02:30:54.720 --> 02:30:56.720]  то есть, на самом деле, храним в текарном деле.
[02:30:57.720 --> 02:31:01.720]  в текарном деле находим, скажем, касательную параллельную этой.
[02:31:03.720 --> 02:31:06.720]  и, если надо, удаляем эту точку несколько соседних.
[02:31:06.720 --> 02:31:08.720]  и добавляем точки пересечения.
[02:31:09.720 --> 02:31:11.720]  понятная идея, да?
[02:31:13.720 --> 02:31:15.720]  это если...
[02:31:16.720 --> 02:31:18.720]  то есть, в принципе, есть вот такая.
[02:31:18.720 --> 02:31:21.720]  то есть, заметим, что аналогичным образом, на самом деле,
[02:31:21.720 --> 02:31:25.720]  можно поддерживать и что-то типа динамической выпуклой оболочки.
[02:31:29.720 --> 02:31:31.720]  ну, знаете, вот теперь есть какая-нибудь такая классическая задача,
[02:31:31.720 --> 02:31:32.720]  которую вы любите отдавать.
[02:31:32.720 --> 02:31:33.720]  такую, типа, вне УФО.
[02:31:34.720 --> 02:31:36.720]  то есть, задача такая.
[02:31:36.720 --> 02:31:37.720]  дамо множество точек.
[02:31:37.720 --> 02:31:40.720]  и надо выполнять два запроса.
[02:31:40.720 --> 02:31:41.720]  запрос первый.
[02:31:41.720 --> 02:31:42.720]  добавь точку.
[02:31:43.720 --> 02:31:44.720]  и второй.
[02:31:44.720 --> 02:31:48.720]  а найди, пожалуйста, длину пересечения выпуклой оболочки этого множества и прямой.
[02:31:52.720 --> 02:31:53.720]  да.
[02:31:54.720 --> 02:31:56.720]  это же классическая такая задача,
[02:31:56.720 --> 02:31:57.720]  которую вы тоже будете сталкиваться.
[02:31:57.720 --> 02:31:58.720]  нет.
[02:31:59.720 --> 02:32:00.720]  что вы делаете?
[02:32:01.720 --> 02:32:03.720]  ну, не писали, скажем так.
[02:32:07.720 --> 02:32:08.720]  всё?
[02:32:09.720 --> 02:32:10.720]  всё?
[02:32:11.720 --> 02:32:12.720]  всё за линию.
[02:32:12.720 --> 02:32:13.720]  всё за линию?
[02:32:13.720 --> 02:32:15.720]  ну, кто-то ещё, но надо было удалять точку.
[02:32:16.720 --> 02:32:18.720]  а, ну да, поэтому там была пернивка.
[02:32:19.720 --> 02:32:20.720]  ладно, у нас задача полегче.
[02:32:21.720 --> 02:32:23.720]  хорошие соревнования круглые.
[02:32:23.720 --> 02:32:24.720]  ты участвуй.
[02:32:24.720 --> 02:32:26.720]  там сущную дачу вы уже были.
[02:32:26.720 --> 02:32:27.720]  всё?
[02:32:27.720 --> 02:32:28.720]  нативная реклама.
[02:32:28.720 --> 02:32:29.720]  ну да.
[02:32:30.720 --> 02:32:31.720]  ну да, вот так.
[02:32:31.720 --> 02:32:32.720]  вот оказывается, да.
[02:32:33.720 --> 02:32:34.720]  пока за ОАТН.
[02:32:34.720 --> 02:32:35.720]  всё?
[02:32:35.720 --> 02:32:36.720]  за ОАТН.
[02:32:36.720 --> 02:32:37.720]  за ОАТН.
[02:32:37.720 --> 02:32:38.720]  нет, там не за ОАТН.
[02:32:38.720 --> 02:32:39.720]  я там бы сказал, не за ОАТН.
[02:32:39.720 --> 02:32:40.720]  там удалять надо.
[02:32:40.720 --> 02:32:41.720]  не, а вот это.
[02:32:41.720 --> 02:32:42.720]  вот это?
[02:32:42.720 --> 02:32:43.720]  нет, ну тут пока честно за ОАТН.
[02:32:43.720 --> 02:32:45.720]  нет, мы стали обсуждать за НЛОГН.
[02:32:45.720 --> 02:32:46.720]  да.
[02:32:46.720 --> 02:32:47.720]  за ОАТН.
[02:32:47.720 --> 02:32:48.720]  ну за ОАТН.
[02:32:48.720 --> 02:32:50.720]  за ОАТН решение не знаю.
[02:32:50.720 --> 02:32:54.720]  то, что я знаю, потребует отсортировать эти приближения к полярному углу.
[02:32:54.720 --> 02:32:56.720]  а потом уже за ОАТН.
[02:32:56.720 --> 02:32:58.720]  а существует НЛОГН.
[02:32:58.720 --> 02:33:00.720]  там можно ли это отсортировать?
[02:33:00.720 --> 02:33:01.720]  да, боюсь.
[02:33:01.720 --> 02:33:03.720]  никто не увидит.
[02:33:03.720 --> 02:33:04.720]  полевероятно, что нет.
[02:33:04.720 --> 02:33:05.720]  в общем, нет.
[02:33:05.720 --> 02:33:07.720]  в общем, не сортировать.
[02:33:08.720 --> 02:33:09.720]  вот.
[02:33:10.720 --> 02:33:12.720]  значит...
[02:33:12.720 --> 02:33:13.720]  ну вот.
[02:33:13.720 --> 02:33:15.720]  давайте еще раз об этом положено речь.
[02:33:15.720 --> 02:33:19.720]  как у нас писать динамическую выводку оболочек такой?
[02:33:20.720 --> 02:33:23.720]  ну на самом деле, просто да, идея будет та же.
[02:33:23.720 --> 02:33:25.720]  то есть храним...
[02:33:25.720 --> 02:33:29.720]  ну можно так сказать, храним нижнюю руку оболочку
[02:33:29.720 --> 02:33:32.720]  и храним верхнюю руку оболочку.
[02:33:32.720 --> 02:33:36.720]  то есть точки добавляем буквально так же, вот как мы и описывали.
[02:33:36.720 --> 02:33:39.720]  то есть храним в сетах, там добавляем буквально так же.
[02:33:39.720 --> 02:33:40.720]  да.
[02:33:40.720 --> 02:33:41.720]  вот.
[02:33:41.720 --> 02:33:44.720]  но когда приходит, например, там надо прямая,
[02:33:44.720 --> 02:33:47.720]  то значит надо у этой прямой найти пересечение с этой штукой,
[02:33:47.720 --> 02:33:51.720]  то есть у этой штукой это тоже делается каким-то бинпоиском.
[02:33:51.720 --> 02:33:53.720]  правда, на этот раз надо не касательно искать,
[02:33:53.720 --> 02:33:57.720]  а именно бинпоиском искать, то есть по пересечению.
[02:33:57.720 --> 02:33:59.720]  то есть, видимо, самое оптимальное, что можно сделать,
[02:33:59.720 --> 02:34:01.720]  это реально написать дикарту во дерево.
[02:34:01.720 --> 02:34:04.720]  чтобы делать аккуратно.
[02:34:05.720 --> 02:34:07.720]  не хочется.
[02:34:07.720 --> 02:34:08.720]  да.
[02:34:08.720 --> 02:34:11.720]  а тем более, что есть одна маленькая подлянка.
[02:34:12.720 --> 02:34:15.720]  подлянка называется в том, что нижняя рука оболочка
[02:34:15.720 --> 02:34:17.720]  может быть пересечена прямой два раза.
[02:34:20.720 --> 02:34:23.720]  верхняя, при этом, не пересечена вообще, но когда-либо.
[02:34:25.720 --> 02:34:26.720]  ну да.
[02:34:26.720 --> 02:34:29.720]  так что придется решать задачу, видимо, методом,
[02:34:29.720 --> 02:34:34.720]  типа примеди касательно, а потом тут бинпоиском находи.
[02:34:34.720 --> 02:34:37.720]  то есть восприеди катячку там в каждом ритме,
[02:34:37.720 --> 02:34:41.720]  сделай спуск, вот это вся реакция.
[02:34:42.720 --> 02:34:43.720]  но за алгоритм.
[02:34:44.720 --> 02:34:45.720]  да.
[02:34:45.720 --> 02:34:47.720]  как говорится, болезненный, но вот так.
[02:34:50.720 --> 02:34:51.720]  вот.
[02:34:51.720 --> 02:34:52.720]  но это, конечно, жестко.
[02:34:52.720 --> 02:34:54.720]  то есть, конечно, если у вас задача просто дамы
[02:34:54.720 --> 02:34:57.720]  n полуплоскостей, и надо найти их пересечение,
[02:34:57.720 --> 02:35:00.720]  и никто от вас не требует, чтобы это все происходило еще,
[02:35:00.720 --> 02:35:04.720]  что прямые появляются у вас там где-то в жестком онлайне,
[02:35:04.720 --> 02:35:07.720]  вы в это время должны там еще на голове стоять и так далее.
[02:35:07.720 --> 02:35:10.720]  то, конечно же, никаких дикартячек для этого не надо.
[02:35:11.720 --> 02:35:13.720]  потому что основная идея, конечно, заключает в том,
[02:35:13.720 --> 02:35:16.720]  что можно полуплоскости отсортировать по полярному углу,
[02:35:16.720 --> 02:35:18.720]  а потом забаваться в что-то типа греза.
[02:35:19.720 --> 02:35:20.720]  да.
[02:35:20.720 --> 02:35:22.720]  ну, на уровне идеи это понятно.
[02:35:22.720 --> 02:35:26.720]  а вот на уровне реализации что-то становится больновато.
[02:35:28.720 --> 02:35:29.720]  вот.
[02:35:29.720 --> 02:35:31.720]  ну, вот, честно скажу, тут я, конечно, немножко не мастер,
[02:35:32.720 --> 02:35:35.720]  но, по крайней мере, поэтому тут я предлагаю решение, которое,
[02:35:35.720 --> 02:35:36.720]  по крайней мере, железобетонное.
[02:35:36.720 --> 02:35:38.720]  потому что там есть какие-то решения, вида.
[02:35:38.720 --> 02:35:41.720]  давайте пройдемся по полуплоскостям, сделаем как этого,
[02:35:41.720 --> 02:35:45.720]  а потом получится у нас какая-то там гадость, там какая-то вот такая петля
[02:35:46.720 --> 02:35:48.720]  или что-то там еще какая-то гадость получится.
[02:35:48.720 --> 02:35:51.720]  но давайте пройдемся второй раз, и тогда там все зацепится.
[02:35:54.720 --> 02:35:55.720]  вот.
[02:35:56.720 --> 02:35:58.720]  но, к сожалению, для меня это действительно...
[02:35:59.720 --> 02:36:01.720]  то есть для меня в этом месте кто-то просто очень, там,
[02:36:01.720 --> 02:36:03.720]  просто пять минут игрока кричит кукурику.
[02:36:05.720 --> 02:36:06.720]  ну, отлично для меня.
[02:36:06.720 --> 02:36:08.720]  но возможно это кукурику просто, на самом деле,
[02:36:11.720 --> 02:36:13.720]  это для меня кукурику, для умного людей, нормальная математика.
[02:36:15.720 --> 02:36:16.720]  поэтому, лично, я в этом месте...
[02:36:17.720 --> 02:36:18.720]  или как с линкатом.
[02:36:18.720 --> 02:36:19.720]  че?
[02:36:19.720 --> 02:36:20.720]  или как с линкатом.
[02:36:20.720 --> 02:36:21.720]  хорошо, с линкатом.
[02:36:21.720 --> 02:36:22.720]  и все доказательства заняты.
[02:36:23.720 --> 02:36:25.720]  ну да, ну, как вы сами убедились, там все нормально.
[02:36:26.720 --> 02:36:27.720]  оно на самом деле...
[02:36:27.720 --> 02:36:30.720]  то есть нормально существует, поэтому факты верные, но все приводящиеся...
[02:36:30.720 --> 02:36:36.720]  Нормально существует, поэтому факт верный, но все приводящиеся и нудожевые.
[02:36:36.720 --> 02:36:39.720]  Нет, ну просто да, и кто-то совсем глубокий дешевол, да.
[02:36:39.720 --> 02:36:41.720]  Вот, но это...
[02:36:46.720 --> 02:36:48.720]  Значит, смотрите.
[02:36:48.720 --> 02:36:50.720]  Ну, на самом деле, я вам предлагаю так.
[02:36:50.720 --> 02:36:53.720]  То есть для того, чтобы вы избежали какие-то проблемы, у меня идея такая.
[02:36:53.720 --> 02:36:59.720]  Я разделю полуплоскости на те, которые смотрят вверх, и на те, кто смотрит вниз.
[02:37:02.720 --> 02:37:06.720]  Ну, потому что полуплоскости неограниченные сверху, поэтому полуплоскости нечистые.
[02:37:06.720 --> 02:37:10.720]  Ну, и есть, конечно, вот эти болдинбоксовые темы, вот эти лепитекальные.
[02:37:11.720 --> 02:37:17.720]  Ну, давайте так, будем считать, что их нет, потому что они нам просто по парку сбинут болдинбокс.
[02:37:18.720 --> 02:37:20.720]  Итак, так вот, идея такая.
[02:37:20.720 --> 02:37:24.720]  Давайте я найду пересечения вот таких отдельно и найду пересечения вот таких.
[02:37:26.720 --> 02:37:28.720]  Как я найду пересечения смотрящих вверх?
[02:37:29.720 --> 02:37:31.720]  Ну, тут пока все просто.
[02:37:31.720 --> 02:37:35.720]  Я ацертирую их по полярному углу, а дальше буду поддерживать пересечения вот в таком виде
[02:37:35.720 --> 02:37:42.720]  и на каждом шане добавлять новую полуплоскость, просто выкидывая, можно сказать, из стека предыдущие вершины.
[02:37:43.720 --> 02:37:46.720]  Ну, тут явно, видно просто, ничего сложного нет.
[02:37:48.720 --> 02:37:55.720]  То есть все, что вам останется, это только сказать, что вот у вас теперь получилась вот такая чашка и вот такая крышка.
[02:37:56.720 --> 02:37:57.720]  Крышка.
[02:37:58.720 --> 02:37:59.720]  Ну да, кафе-кап.
[02:37:59.720 --> 02:38:02.720]  Ну, кстати, в некоторых науках действительно такие вещи так и не бывают.
[02:38:02.720 --> 02:38:07.720]  Остается только приближаться к проспуску онлайном слева-направо и посмотреть, есть ли пересечения.
[02:38:07.720 --> 02:38:09.720]  Ну, там просто, смотрите как.
[02:38:09.720 --> 02:38:17.720]  До некоторого момента, на самом деле, крышка будет ниже чашки, потом они пересекутся, чашка будет выше.
[02:38:19.720 --> 02:38:21.720]  И наоборот, а потом после этого наоборот.
[02:38:22.720 --> 02:38:26.720]  То есть потом они опять пересекутся и чашка пойдет вниз, а крышка вверх.
[02:38:26.720 --> 02:38:27.720]  Получается залили.
[02:38:29.720 --> 02:38:33.720]  То есть констат, конечно, получается в направлении, оказывается, очень жирноватая, конечно.
[02:38:35.720 --> 02:38:39.720]  Но, по крайней мере, такой метод, хотя бы железопитонная.
[02:38:39.720 --> 02:38:40.720]  Не, а тут что-ли?
[02:38:41.720 --> 02:38:42.720]  Это тут планировка.
[02:38:42.720 --> 02:38:43.720]  Чего?
[02:38:43.720 --> 02:38:45.720]  Ну, в смысле, тут сортировка.
[02:38:45.720 --> 02:38:46.720]  Ну, я не знаю.
[02:38:46.720 --> 02:38:47.720]  Сортировка это вроде.
[02:38:47.720 --> 02:38:48.720]  Ну, честно скажу.
[02:38:48.720 --> 02:38:49.720]  Ну, я не знаю.
[02:38:49.720 --> 02:38:50.720]  Ну, я не знаю.
[02:38:50.720 --> 02:38:51.720]  Ну, я не знаю.
[02:38:51.720 --> 02:38:52.720]  Ну, я не знаю.
[02:38:52.720 --> 02:38:53.720]  Ну, я не знаю.
[02:38:53.720 --> 02:38:54.720]  Ну, я не знаю.
[02:38:54.720 --> 02:38:55.720]  Сортировка это вроде.
[02:38:55.720 --> 02:38:56.720]  Ну, честно скажу.
[02:38:56.720 --> 02:39:03.720]  Я не знаю, кто такой напишет, получит эллиптом, выяснится, что кто-то автор умеет писать вещи и будет все 6 градусов быстрее.
[02:39:03.720 --> 02:39:06.720]  Как это может быть дольше, чем декартачка?
[02:39:06.720 --> 02:39:07.720]  Да, вот мне тоже интересно.
[02:39:08.720 --> 02:39:09.720]  Нет, я не...
[02:39:09.720 --> 02:39:11.720]  Вы уж выгодите, нет, конечно.
[02:39:13.720 --> 02:39:22.720]  Я привел, что, например, а, такая идея есть, б, она помогает решать задачи, когда у вас полуплоскости добавляются в онлайне, а не зарядом.
[02:39:22.720 --> 02:39:26.720]  Тут нам для сортировки надо, чтобы нам их просто всех задали.
[02:39:26.720 --> 02:39:28.720]  Если не задали, то можно упасить писать декартачку.
[02:39:28.720 --> 02:39:29.720]  Зачем?
[02:39:29.720 --> 02:39:32.720]  Сортировка в любом виде в вашем случае.
[02:39:32.720 --> 02:39:33.720]  Вот.
[02:39:33.720 --> 02:39:34.720]  Ну, вот.
[02:39:35.720 --> 02:39:44.720]  Ну, правда, тут, конечно, выручает то, что крайне редко, видимо, дают задачи на причине полуплоскостей, потому что крайне редко, видимо, просто автор задачи захочет это писать, в принципе.
[02:39:46.720 --> 02:39:47.720]  Нет, хотя бы просто нет.
[02:39:47.720 --> 02:39:49.720]  Тут есть, правда, есть другой вопрос.
[02:39:49.720 --> 02:39:54.720]  Потому что, на самом деле, иногда у некоторых авторов контестов возникает вопрос.
[02:39:54.720 --> 02:39:55.720]  Так, ко мне придут очень...
[02:39:55.720 --> 02:39:59.720]  То есть, так, я провожу контест, ко мне приедут очень серьезные люди.
[02:39:59.720 --> 02:40:04.720]  Ну, там, знаете, какая-то там была чемпион и вице-чемпион там какого-нибудь там сильного полуфинала, да?
[02:40:04.720 --> 02:40:05.720]  Где она уловить, да.
[02:40:05.720 --> 02:40:06.720]  Ну, вот.
[02:40:06.720 --> 02:40:07.720]  Нет, то есть, уловить она.
[02:40:07.720 --> 02:40:10.720]  И надо, нет, для этого надо для них сделать какую-нибудь сложную задачу.
[02:40:10.720 --> 02:40:11.720]  Как ее сделать?
[02:40:11.720 --> 02:40:14.720]  На самом деле, один из стандартных способов просто написать какой-нибудь иом.
[02:40:14.720 --> 02:40:18.720]  Потому что иома даже не самая сложная идея, она на самом деле часто оказывается прям волк,
[02:40:18.720 --> 02:40:19.720]  просто потому что иома.
[02:40:19.720 --> 02:40:22.720]  Потому что ее надо писать.
[02:40:22.720 --> 02:40:24.720]  То есть, ее надо писать, ее надо нигде не запутаться,
[02:40:24.720 --> 02:40:27.720]  но и где-то ее надо убедить.
[02:40:27.720 --> 02:40:28.720]  Можно сделать так, то есть это вот...
[02:40:28.720 --> 02:40:29.720]  Можно сделать так.
[02:40:29.720 --> 02:40:33.720]  Нет, можно в этом месте дать задачу, давайте там сортировки на подокресне, конечно.
[02:40:34.720 --> 02:40:37.720]  Но, как показывает практика, называется это там...
[02:40:37.720 --> 02:40:40.720]  Там вице-чемпионов полуфинала это не основано, бывает.
[02:40:41.720 --> 02:40:42.720]  Вот, да и чемпионов тоже.
[02:40:42.720 --> 02:40:47.720]  Но чемпионок, правда, задерживается на час больше, но в итоге все равно столтаном закрывается.
[02:40:47.720 --> 02:40:57.720]  Но это уже другая история. Вот, а так, в принципе, так что вещь такая.
[02:40:57.720 --> 02:41:01.720]  Так что это вот, что я хотел сказать о пересечении плодов.
[02:41:01.720 --> 02:41:05.720]  То есть парадоксальная тема, да, идея на, в общем-то, просто, в общем, кажется, вроде ничего сложного,
[02:41:05.720 --> 02:41:10.720]  но почему-то, как дело доходит до кода, почему-то это будет и будет вообще никто и никогда.
[02:41:10.720 --> 02:41:15.720]  Удивительно. Хотя при этом там другие задачи помогают.
[02:41:15.720 --> 02:41:20.720]  Вот, например, ну, какой-то пример можно посмотреть, какие задачи.
[02:41:20.720 --> 02:41:24.720]  Ну, например, вот нашу задачу с одной окружностью, да, как она на самом деле могла решаться.
[02:41:24.720 --> 02:41:30.720]  Она могла решаться следующим образом. То есть решаем бинпоиском по радиусу.
[02:41:30.720 --> 02:41:34.720]  Вот задача. Можем ли впихнуть в ногоугольник окружность радиуса r?
[02:41:34.720 --> 02:41:39.720]  Идея очень проста. Берем вот эти все полуплоскости, сдвигаем их на r.
[02:41:39.720 --> 02:41:42.720]  Вот так. Получается вот такие полуплоскости.
[02:41:42.720 --> 02:41:47.720]  То есть вот такие, такая, такая, такая.
[02:41:47.720 --> 02:41:51.720]  Впрашивается, пусто ли их пересечение, да или нет.
[02:41:51.720 --> 02:41:55.720]  Ну, вот, все. Вдоль столько найти.
[02:41:55.720 --> 02:41:59.720]  В общем, более того, их полуплоскости даже сортировать не надо,
[02:41:59.720 --> 02:42:02.720]  потому что они уже отсортированы просто вот этим обходом.
[02:42:02.720 --> 02:42:06.720]  Получается решение, конечно, явно более быстрее, чем тернария.
[02:42:06.720 --> 02:42:12.720]  Тернария, конечно, это лог квадрат, а тут получается n лог.
[02:42:12.720 --> 02:42:19.720]  Ну, там такой, что-то подобное. Но логоиф у этого безбрось.
[02:42:19.720 --> 02:42:26.720]  Поэтому такое решение тут, конечно, быстрее, но при мелких ограничениях, конечно, лог квадрат неожиданно можно взять.
[02:42:26.720 --> 02:42:31.720]  Правда, правда, страдать, конечно, приходится.
[02:42:31.720 --> 02:42:35.720]  Как мы пересекаем крышку и крылья?
[02:42:35.720 --> 02:42:42.720]  Конлайн? Прямо сейчас слева направо, прямо с конлайнником идем.
[02:42:42.720 --> 02:42:46.720]  Едва ли мне там текущие, для каждого икса текущие игры поддерживают.
[02:42:46.720 --> 02:42:51.720]  Ну, может, не настолько нагло, но вот так.
[02:42:51.720 --> 02:42:58.720]  Вот. То есть, в принципе, какие еще там задачи есть?
[02:42:58.720 --> 02:43:03.720]  А, ну или там какие?
[02:43:03.720 --> 02:43:07.720]  Да, то есть, есть еще там всякие классические задачи.
[02:43:07.720 --> 02:43:13.720]  А, в духе, когда там выпуклый многоугольник, внутри него лежит точка.
[02:43:13.720 --> 02:43:21.720]  Скажите, пожалуйста, мы хотим убить некоторое количество вершин и заменить многоугольник на выпуклую оболочку оставшейся.
[02:43:21.720 --> 02:43:31.720]  Спрашивается, какое минимальное количество вершин надо убить, чтобы заданная точка оказалась, где выпуклая оболочка?
[02:43:31.720 --> 02:43:35.720]  Вот, не сад, конечно, такой же.
[02:43:35.720 --> 02:43:39.720]  А, ну да, то есть, понятно, то есть, ушло.
[02:43:39.720 --> 02:43:42.720]  Кто-то ВЛЦС, кто человек ВЛЦШ рассказывает, а это нет.
[02:43:42.720 --> 02:43:44.720]  Кто-то ВЛЦС тоже не рассказывает.
[02:43:44.720 --> 02:43:45.720]  Да?
[02:43:45.720 --> 02:43:47.720]  Нет, всем, кого рассказывать, могли не прийти просто.
[02:43:47.720 --> 02:43:49.720]  Может, им это тоже расскажешь.
[02:43:49.720 --> 02:43:52.720]  На первом курсе я рассказывал, кто-то ВЛЦС.
[02:43:52.720 --> 02:43:55.720]  Там обнаружил, что там где-то есть человек, который сам рассказывал.
[02:43:55.720 --> 02:43:57.720]  Ну, пришла-то ВЛЦС.
[02:43:57.720 --> 02:44:01.720]  На первом курсе выборка была в экспоненту разбойчивой.
[02:44:01.720 --> 02:44:03.720]  Чего?
[02:44:03.720 --> 02:44:04.720]  А, ну да.
[02:44:04.720 --> 02:44:06.720]  Непрощенность.
[02:44:06.720 --> 02:44:09.720]  Чего лучше по нему?
[02:44:09.720 --> 02:44:11.720]  Непрощенность.
[02:44:11.720 --> 02:44:15.720]  А, типа в плане, потому что они их еще больше пользуются.
[02:44:15.720 --> 02:44:16.720]  Нет, ну это правда.
[02:44:16.720 --> 02:44:18.720]  Хорошо.
[02:44:18.720 --> 02:44:20.720]  Так.
[02:44:20.720 --> 02:44:22.720]  Но, но, хорошо.
[02:44:22.720 --> 02:44:24.720]  Давайте скажу.
[02:44:24.720 --> 02:44:26.720]  Значит, смотрите, какая экспонентция.
[02:44:26.720 --> 02:44:28.720]  Смотрите такая.
[02:44:28.720 --> 02:44:30.720]  То есть, еще раз.
[02:44:30.720 --> 02:44:32.720]  Желт было глупо.
[02:44:32.720 --> 02:44:36.720]  И в нем лежит, у меня не знаю, король.
[02:44:36.720 --> 02:44:38.720]  Король?
[02:44:38.720 --> 02:44:40.720]  Ну, например.
[02:44:40.720 --> 02:44:42.720]  Вот.
[02:44:42.720 --> 02:44:44.720]  Значит, ну, башни гарантируют защиту.
[02:44:44.720 --> 02:44:47.720]  Но если уничтожить башню, вот там пару башен, да?
[02:44:47.720 --> 02:44:51.720]  То тогда площадь защиты уменьшается до вот такой.
[02:44:51.720 --> 02:44:53.720]  Так вот, внимание, вопрос.
[02:44:53.720 --> 02:44:55.720]  Но нас не интересует площадь.
[02:44:55.720 --> 02:45:01.720]  Нас интересует, какое минимальное количество башен надо убить, чтобы вот эта точка ушла в ау.
[02:45:01.720 --> 02:45:05.720]  Ну, кажется.
[02:45:05.720 --> 02:45:07.720]  А, ну это, это, это.
[02:45:07.720 --> 02:45:12.720]  Это уже гораздо более похоже на правда.
[02:45:12.720 --> 02:45:14.720]  Сейчас, а гарантирую.
[02:45:14.720 --> 02:45:15.720]  Вот.
[02:45:15.720 --> 02:45:18.720]  Гарантируется, что все башни только на границе замка.
[02:45:18.720 --> 02:45:19.720]  Ну да, вершины.
[02:45:19.720 --> 02:45:21.720]  То есть, внутри замка башни нет?
[02:45:21.720 --> 02:45:22.720]  Да, да, да.
[02:45:22.720 --> 02:45:23.720]  А, ну тогда гораздо лучше.
[02:45:23.720 --> 02:45:24.720]  Да.
[02:45:24.720 --> 02:45:27.720]  Правда, такую задачу, конечно, не обязательно решать, конечно, перед счетом углублоскости.
[02:45:27.720 --> 02:45:29.720]  Ну, тогда просто два указателя.
[02:45:29.720 --> 02:45:30.720]  Ну да.
[02:45:30.720 --> 02:45:31.720]  Да.
[02:45:31.720 --> 02:45:32.720]  Два указателя.
[02:45:32.720 --> 02:45:33.720]  А, ну в принципе, да.
[02:45:33.720 --> 02:45:34.720]  Да.
[02:45:34.720 --> 02:45:39.720]  Во-первых, заметим, что нам нужно уничтожить несколько предыдущих квадрат, правда?
[02:45:39.720 --> 02:45:41.720]  Я думаю, у нас башни внутри замка тоже есть.
[02:45:41.720 --> 02:45:42.720]  Нет.
[02:45:43.720 --> 02:45:44.720]  Вот.
[02:45:44.720 --> 02:45:46.720]  И тогда действительно два указателя.
[02:45:46.720 --> 02:45:48.720]  Ну, теперь вот фишка такая.
[02:45:48.720 --> 02:45:51.720]  То есть, теперь у нас, то есть, у каждой точки есть такая функция, да?
[02:45:51.720 --> 02:45:53.720]  Сколько башней надо убить, чтобы эта точка не защитилась.
[02:45:53.720 --> 02:45:54.720]  Да.
[02:45:54.720 --> 02:45:55.720]  Так вот, хочешь?
[02:45:55.720 --> 02:45:56.720]  Теперь, теперь задача.
[02:45:56.720 --> 02:45:58.720]  Посадить короля, чтобы они были защищены.
[02:45:58.720 --> 02:45:59.720]  Да.
[02:46:04.720 --> 02:46:06.720]  Кернард не заработает.
[02:46:07.720 --> 02:46:09.720]  Ну вот, функция не прерывная.
[02:46:09.720 --> 02:46:10.720]  Как-то я не понимаю.
[02:46:16.720 --> 02:46:18.720]  Окей, она имеет значение.
[02:46:18.720 --> 02:46:19.720]  Ну, окей, да.
[02:46:19.720 --> 02:46:21.720]  Она константная, я не знаю.
[02:46:36.720 --> 02:46:38.720]  Ну, на самом деле, идея такая.
[02:46:38.720 --> 02:46:40.720]  То есть, будем участвовать в бинпольском.
[02:46:40.720 --> 02:46:41.720]  Бинпольском.
[02:46:41.720 --> 02:46:43.720]  То есть, допустим, мы хотим убить ка-башень.
[02:46:43.720 --> 02:46:45.720]  Существует ли точка, которая от этого защищена.
[02:46:48.720 --> 02:46:50.720]  Но заменим, что убить ка-башень.
[02:46:50.720 --> 02:46:51.720]  Да, окей.
[02:46:51.720 --> 02:46:52.720]  Ка подряд башень.
[02:46:52.720 --> 02:46:55.720]  Это как-то то же самое, чтобы провести вот эту фото, правда?
[02:46:55.720 --> 02:46:56.720]  Угу.
[02:46:56.720 --> 02:46:57.720]  Ну ладно.
[02:46:57.720 --> 02:46:58.720]  То есть, я не знаю.
[02:46:58.720 --> 02:46:59.720]  Ну ладно.
[02:46:59.720 --> 02:47:00.720]  Ну ладно.
[02:47:00.720 --> 02:47:01.720]  Ну ладно.
[02:47:01.720 --> 02:47:02.720]  Ну ладно.
[02:47:02.720 --> 02:47:03.720]  Ну ладно.
[02:47:03.720 --> 02:47:04.720]  Ну ладно.
[02:47:04.720 --> 02:47:05.720]  Ну ладно.
[02:47:05.720 --> 02:47:06.720]  Ну ладно.
[02:47:06.720 --> 02:47:08.720]  То есть, если убить вот эти ка-башень, получится вот эта полукоскость.
[02:47:08.720 --> 02:47:10.720]  Если вот эта, то вот эта.
[02:47:10.720 --> 02:47:11.720]  Если вот эта, то вот эта.
[02:47:11.720 --> 02:47:12.720]  И так далее.
[02:47:12.720 --> 02:47:15.720]  Ну, в результате опять задача следует, сколько еще полукоскостей.
[02:47:18.720 --> 02:47:19.720]  Угу.
[02:47:19.720 --> 02:47:20.720]  Угу.
[02:47:20.720 --> 02:47:21.720]  О, понятно, да?
[02:47:21.720 --> 02:47:22.720]  Это понятно.
[02:47:22.720 --> 02:47:23.720]  Ой.
[02:47:24.720 --> 02:47:25.720]  Куда?
[02:47:25.720 --> 02:47:28.720]  Кажется, что можно как-нибудь сделать.
[02:47:28.720 --> 02:47:30.720]  То есть, по мне, конечно.
[02:47:32.720 --> 02:47:33.720]  Угу.
[02:47:35.720 --> 02:47:36.720]  Не знаю.
[02:47:37.720 --> 02:47:38.720]  Ладно.
[02:47:38.720 --> 02:47:42.720]  Ну тут разные задачи есть, которые тут помогают.
[02:47:42.720 --> 02:47:46.720]  Ну и конечно так, чтобы перебросить мостик, на самом деле, на видим, уже после перерыва,
[02:47:46.720 --> 02:47:49.720]  можно обсудить, значит, про две окружности.
[02:47:49.720 --> 02:47:51.720]  То есть, смотрите, данного угольника, опять же, то же самое,
[02:47:51.720 --> 02:47:56.720]  но надо впихнуть в него две окружности, одинакового радиуса, чтобы они не пересекались.
[02:47:56.720 --> 02:47:58.720]  Ну, по-любому показаться.
[02:47:58.720 --> 02:48:00.720]  Как это сделать?
[02:48:05.720 --> 02:48:07.720]  Ну, сделать это просто.
[02:48:07.720 --> 02:48:11.720]  Давайте, опять же, бинплоиск сдвигаем наверх.
[02:48:11.720 --> 02:48:14.720]  Находим пересечение полукоскостей.
[02:48:14.720 --> 02:48:16.720]  То есть, делаем как в одной окружности,
[02:48:16.720 --> 02:48:19.720]  попроси ращитного вопроса, проверить, что пересечение пусто.
[02:48:19.720 --> 02:48:22.720]  То теперь надо еще проверить следующее.
[02:48:22.720 --> 02:48:26.720]  Существуют ли в полученном пересечении полукоскостей точки
[02:48:26.720 --> 02:48:29.720]  на расстоянии хотя бы 2, как подруга.
[02:48:29.720 --> 02:48:30.720]  Из диамета.
[02:48:30.720 --> 02:48:31.720]  Да.
[02:48:31.720 --> 02:48:35.720]  Ну, это, получается, к заданию найдите диаметр уголок.
[02:48:37.720 --> 02:48:39.720]  Ну, да, мы пока...
[02:48:39.720 --> 02:48:40.720]  Да, поэтому я и говорю на мостик.
[02:48:40.720 --> 02:48:45.720]  То есть, это будет одна из тех задач, которые мы будем, видимо, обсуждать после перерыва.
[02:48:45.720 --> 02:48:48.720]  Как говорится, да, мы совершенно неожиданно сейчас,
[02:48:48.720 --> 02:48:52.720]  как говорится, может быть, на одном из самых интересных мест, в скобках нет,
[02:48:52.720 --> 02:48:54.720]  остановим геометрию.
[02:48:54.720 --> 02:48:57.720]  Хотя, ну, может быть, если повезет, мы сегодня там в конце еще успеем
[02:48:57.720 --> 02:49:00.720]  обсудить такой метод вращающей калиперов.
[02:49:00.720 --> 02:49:04.720]  Но, честно скажу, возможно, я все-таки попрошу его заботить отдельно.
[02:49:04.720 --> 02:49:08.720]  Ну, там есть пара моментов, которые не очень сложные, на самом деле.
[02:49:08.720 --> 02:49:10.720]  Но, тем не менее.
[02:49:10.720 --> 02:49:12.720]  Ну, нет, ну, как-то...
[02:49:12.720 --> 02:49:15.720]  Нет, ну, знаете, как-то это, чтобы это...
[02:49:16.720 --> 02:49:18.720]  Как-то я вам...
[02:49:20.720 --> 02:49:23.720]  Ну, это вот метод, которым ищутся, скажем, там,
[02:49:23.720 --> 02:49:27.720]  самые удаленные точки выпка многоугольника, например.
[02:49:27.720 --> 02:49:33.720]  Или там, например, покрывающий прямоугольник минимальной площади, например.
[02:49:33.720 --> 02:49:37.720]  То есть это все решается методом, который называется метод вращающихся калиперов,
[02:49:37.720 --> 02:49:39.720]  на самом деле.
[02:49:45.720 --> 02:49:48.720]  Так, прямоугольник минимальной площади не умеет?
[02:49:50.720 --> 02:49:51.720]  Так.
[02:49:51.720 --> 02:49:53.720]  Нет, ну, хорошо, ладно, хорошо.
[02:49:54.720 --> 02:49:57.720]  Ну, хорошо, ладно, диаметр можно найти, конечно, и с умами.
[02:50:00.720 --> 02:50:02.720]  Да, с умами. Да, да, да.
[02:50:02.720 --> 02:50:04.720]  Да, диаметр.
[02:50:04.720 --> 02:50:07.720]  Ну, ладно, хорошо, диаметр уговорили, хоть там, конечно, и да.
[02:50:07.720 --> 02:50:11.720]  А вот с минимальной площадью или минимальным периметром...
[02:50:11.720 --> 02:50:14.720]  То есть там уже, я боюсь, калиперы придется поросить.
[02:50:14.720 --> 02:50:16.720]  Нет, ну, там есть еще пара задач, потому что мы еще, к сожалению,
[02:50:16.720 --> 02:50:18.720]  упустили там какой-нибудь алгоритм препарата, например.
[02:50:18.720 --> 02:50:20.720]  Ну, этот поиск.
[02:50:20.720 --> 02:50:22.720]  Ну, поиск двух ближайших точек.
[02:50:22.720 --> 02:50:24.720]  Меньше сортов.
[02:50:24.720 --> 02:50:26.720]  Это вообще алгоритм препарата называется, да.
[02:50:28.720 --> 02:50:30.720]  Не, если бы, если бы он так решался.
[02:50:30.720 --> 02:50:32.720]  Ну, ладно.
[02:50:34.720 --> 02:50:37.720]  Как говорится, да, может, да, может даже повезет, да.
[02:50:38.720 --> 02:50:40.720]  Ну, понятно, да.
[02:50:40.720 --> 02:50:42.720]  Спроецируем на рандомную прямую, да.
[02:50:42.720 --> 02:50:45.720]  Спроецируем точки на рандомную прямую, рассмотрим все соседи на ней.
[02:50:45.720 --> 02:50:47.720]  Повторим, пока в ТЛ влезает.
[02:50:47.720 --> 02:50:48.720]  Выберем лучше.
[02:50:48.720 --> 02:50:50.720]  Проверяется accept.
[02:50:50.720 --> 02:50:53.720]  Или, видимо, каким-то доказательством того, что на самом деле
[02:50:53.720 --> 02:50:55.720]  там вероятность того, что вам не повезет
[02:50:55.720 --> 02:50:57.720]  и между этими двумя точками влезет.
[02:50:57.720 --> 02:50:59.720]  Кто-то крайне мала.
[02:50:59.720 --> 02:51:01.720]  Нет, как раз вероятность того, что кто-то влезет, кажется,
[02:51:01.720 --> 02:51:03.720]  достаточно быть велика.
[02:51:03.720 --> 02:51:05.720]  Ага, ничего.
[02:51:05.720 --> 02:51:07.720]  А вероятность того, что, как бы,
[02:51:07.720 --> 02:51:09.720]  давайте не все влезут, все нормально.
[02:51:09.720 --> 02:51:11.720]  Ну, можно просто лог проверять.
[02:51:11.720 --> 02:51:13.720]  У вас сортировка ZenLog действует, поэтому алгоритм
[02:51:13.720 --> 02:51:15.720]  соседей проверяет бесплатно.
[02:51:15.720 --> 02:51:17.720]  А, ну, понятно.
[02:51:17.720 --> 02:51:19.720]  Ну, тоже.
[02:51:19.720 --> 02:51:20.720]  Ну, окей.
[02:51:20.720 --> 02:51:21.720]  Ладно.
[02:51:21.720 --> 02:51:23.720]  Но вместо этого мы будем, мы окунемся,
[02:51:23.720 --> 02:51:25.720]  попробуем вкрутиться в сладостный чарующий упоительный мир
[02:51:25.720 --> 02:51:27.720]  вероятностных алгоритмов.
[02:51:27.720 --> 02:51:29.720]  Вот он уже и первый.
[02:51:29.720 --> 02:51:31.720]  Но это да. Осталось про правду идти со слету.
[02:51:31.720 --> 02:51:33.720]  Не очень понятно, как это доказывать.
[02:51:33.720 --> 02:51:35.720]  А мы же, как всегда, в свойственной нам манере
[02:51:35.720 --> 02:51:37.720]  будем стараться все или почти все доказывать.
[02:51:37.720 --> 02:51:39.720]  Ну, типа, мы берем у нас...
[02:51:39.720 --> 02:51:41.720]  Нет, это понятно.
[02:51:41.720 --> 02:51:43.720]  Вертикальная прямая, которая через них проходит,
[02:51:43.720 --> 02:51:45.720]  то они соседние будут.
[02:51:45.720 --> 02:51:47.720]  Да-да-да-да-да.
[02:51:47.720 --> 02:51:49.720]  Ну, вот да.
[02:51:53.720 --> 02:51:55.720]  Самые две ближайшие.
[02:51:55.720 --> 02:51:57.720]  Нет, самые далекие по-другому.
[02:51:57.720 --> 02:51:59.720]  Ну, да.
[02:51:59.720 --> 02:52:01.720]  Ну, я...
[02:52:01.720 --> 02:52:03.720]  Ну, сформулируем так.
[02:52:03.720 --> 02:52:05.720]  На самом деле это валится тестом просто,
[02:52:05.720 --> 02:52:07.720]  когда очень-очень-очень близко
[02:52:07.720 --> 02:52:09.720]  к этой прямой находится очень-очень
[02:52:09.720 --> 02:52:11.720]  много точек.
[02:52:11.720 --> 02:52:13.720]  То есть, на самом деле это...
[02:52:13.720 --> 02:52:15.720]  Но тогда у нас, наоборот, вертикальная прямая
[02:52:15.720 --> 02:52:17.720]  не сработает.
[02:52:17.720 --> 02:52:19.720]  Какая вертикальная?
[02:52:19.720 --> 02:52:21.720]  Там получается, что должно быть
[02:52:21.720 --> 02:52:23.720]  всюду плотное распределение в круге, кажется.
[02:52:23.720 --> 02:52:25.720]  Потому что иначе у нас...
[02:52:25.720 --> 02:52:27.720]  Ну, да. А, ну хорошо, ладно, давайте.
[02:52:27.720 --> 02:52:29.720]  Ладно, давайте для развилочки.
[02:52:29.720 --> 02:52:31.720]  Можно для каждой точки определить,
[02:52:31.720 --> 02:52:33.720]  с какой вероятностью эта точка вообще попадет
[02:52:33.720 --> 02:52:35.720]  в полусу этих отрезков?
[02:52:35.720 --> 02:52:37.720]  Ну, да, с какой вероятностью
[02:52:37.720 --> 02:52:39.720]  это произойдет?
[02:52:39.720 --> 02:52:41.720]  Ну, да.
[02:52:41.720 --> 02:52:43.720]  Чем дальше точка от этих,
[02:52:43.720 --> 02:52:45.720]  от этих тем, наверное, дальше.
[02:52:45.720 --> 02:52:47.720]  Я немножко прикидывал, там, кажется,
[02:52:47.720 --> 02:52:49.720]  мы берем круг с радиусом 1,
[02:52:49.720 --> 02:52:51.720]  кидаем в него равномерно точки и ставим
[02:52:51.720 --> 02:52:53.720]  две ближайшие где-то в центре.
[02:52:53.720 --> 02:52:55.720]  Тогда у нас все время будет довольно много
[02:52:55.720 --> 02:52:57.720]  точек. Ну, я не знаю, мне что-то подозревает,
[02:52:57.720 --> 02:52:59.720]  почему-то начинает быть подозревение, что это пропорционально
[02:52:59.720 --> 02:53:01.720]  и два линии вот этому углу.
[02:53:01.720 --> 02:53:03.720]  Вот.
[02:53:03.720 --> 02:53:05.720]  Ну, потому что что-то типа вот этот угол минус
[02:53:05.720 --> 02:53:07.720]  вот этот угол, вот такое направление
[02:53:07.720 --> 02:53:09.720]  должно быть.
[02:53:09.720 --> 02:53:11.720]  Ну, окей.
[02:53:11.720 --> 02:53:13.720]  Поэтому чем меньше этот угол, тем
[02:53:13.720 --> 02:53:15.720]  конее. Ну, вот. Ну, типа того.
[02:53:15.720 --> 02:53:17.720]  Ладно, давайте просто поговорим не про
[02:53:17.720 --> 02:53:19.720]  геометрию, а в общем контексте.
[02:53:19.720 --> 02:53:21.720]  Потому что зачем нам вероятность
[02:53:21.720 --> 02:53:23.720]  вообще нужна?
[02:53:23.720 --> 02:53:25.720]  Да, ну, потому что, конечно, популярные
[02:53:25.720 --> 02:53:27.720]  направления, в общем-то, едва ли сейчас, вообще,
[02:53:27.720 --> 02:53:29.720]  одно из самых ртуальных.
[02:53:29.720 --> 02:53:31.720]  То есть, действительно, заключается в том, что, да, можно
[02:53:31.720 --> 02:53:33.720]  иногда включать случайность, потому что
[02:53:33.720 --> 02:53:35.720]  оказывается, что какие-то объекты детерминированы
[02:53:35.720 --> 02:53:37.720]  найти очень-очень-очень сложно.
[02:53:37.720 --> 02:53:39.720]  Ну, или не очень, но просто сложно.
[02:53:39.720 --> 02:53:41.720]  Но при этом выясняется, что если их искать
[02:53:41.720 --> 02:53:43.720]  быстро,
[02:53:43.720 --> 02:53:45.720]  если кидать какой-то рандом, то выяснится,
[02:53:45.720 --> 02:53:47.720]  что мы попадем на хороший объект
[02:53:47.720 --> 02:53:49.720]  с большой вероятностью или какой-то, или
[02:53:49.720 --> 02:53:51.720]  просто с хорошей вероятностью за что-то
[02:53:51.720 --> 02:53:53.720]  зацепимся.
[02:53:53.720 --> 02:53:55.720]  Вот. Ну,
[02:53:55.720 --> 02:53:57.720]  конечно, там первая, конечно, вероятность.
[02:53:57.720 --> 02:53:59.720]  То есть, мы на самом деле сейчас вот
[02:53:59.720 --> 02:54:01.720]  там почти сразу
[02:54:01.720 --> 02:54:03.720]  на самом деле наткнемся на пример задачи,
[02:54:03.720 --> 02:54:05.720]  которая там детерминированно решается
[02:54:05.720 --> 02:54:07.720]  будет задолго, а вероятность-то за быстро.
[02:54:07.720 --> 02:54:09.720]  Но на чем мы, конечно, не с этого.
[02:54:09.720 --> 02:54:11.720]  На чем мы, конечно, с
[02:54:11.720 --> 02:54:13.720]  уже известных нам алгоритмов.
[02:54:13.720 --> 02:54:15.720]  То есть, потому что первая вероятность алгоритма, который вы встречаете в жизни,
[02:54:15.720 --> 02:54:17.720]  какой?
[02:54:17.720 --> 02:54:19.720]  Правильно, QSort.
[02:54:19.720 --> 02:54:21.720]  Вот.
[02:54:21.720 --> 02:54:23.720]  QSort.
[02:54:23.720 --> 02:54:25.720]  Вот. Ну, как предлагается делать
[02:54:25.720 --> 02:54:27.720]  QSort вероятноста?
[02:54:27.720 --> 02:54:29.720]  Ну, идея очень простая. То есть, просто
[02:54:29.720 --> 02:54:31.720]  каждый раз у нас задача там дан массив,
[02:54:31.720 --> 02:54:33.720]  надо выбрать на нем
[02:54:33.720 --> 02:54:35.720]  какой-то элемент и за линию
[02:54:35.720 --> 02:54:37.720]  разделить его на те, кто это меньше
[02:54:37.720 --> 02:54:39.720]  x, а сам x и больше x, и запуститься
[02:54:39.720 --> 02:54:41.720]  рекурсивно.
[02:54:41.720 --> 02:54:43.720]  Ну, вот идея. А давайте кидать, выбирать
[02:54:43.720 --> 02:54:45.720]  рандомно. А то мы тут какую-то медиану
[02:54:45.720 --> 02:54:47.720]  выбирали. Значит, предлагается
[02:54:47.720 --> 02:54:49.720]  делать это рандомно.
[02:54:49.720 --> 02:54:51.720]  Вот.
[02:54:51.720 --> 02:54:53.720]  Что можно сказать про этот алгоритм?
[02:54:53.720 --> 02:54:55.720]  С какой вероятностью этот алгоритм работает?
[02:54:55.720 --> 02:54:57.720]  Ну, с вероятностью
[02:54:57.720 --> 02:54:59.720]  1,2
[02:54:59.720 --> 02:55:01.720]  он попадает в отрезок
[02:55:01.720 --> 02:55:03.720]  с 1,4 до 3,4.
[02:55:03.720 --> 02:55:05.720]  Так.
[02:55:05.720 --> 02:55:07.720]  Ну, да.
[02:55:07.720 --> 02:55:09.720]  Знаете, типичный диалог.
[02:55:09.720 --> 02:55:11.720]  Когда...
[02:55:11.720 --> 02:55:13.720]  А как пишут слово великодушно?
[02:55:13.720 --> 02:55:15.720]  V достаточно.
[02:55:15.720 --> 02:55:17.720]  Вот примерно так сейчас
[02:55:17.720 --> 02:55:19.720]  на самом деле могло бы быть.
[02:55:19.720 --> 02:55:21.720]  Потому что я не спрашивал, за какое время это работает.
[02:55:21.720 --> 02:55:23.720]  Я спрашивал, с какой вероятностью этот алгоритм работает.
[02:55:23.720 --> 02:55:25.720]  Чувствуете
[02:55:25.720 --> 02:55:27.720]  разницу, да?
[02:55:27.720 --> 02:55:29.720]  То есть, этот алгоритм работает с вероятностью
[02:55:29.720 --> 02:55:31.720]  1.
[02:55:31.720 --> 02:55:33.720]  Вот. Почему я хочу это отметить?
[02:55:33.720 --> 02:55:35.720]  Потому что сразу давайте скажем.
[02:55:35.720 --> 02:55:37.720]  Потому что на самом деле у нас будут два типа алгоритмов.
[02:55:37.720 --> 02:55:39.720]  Давайте сразу терминологию введем.
[02:55:39.720 --> 02:55:41.720]  Есть терминология, то есть, есть алгоритм
[02:55:41.720 --> 02:55:43.720]  типа Лас-Вегас
[02:55:43.720 --> 02:55:45.720]  и есть типа
[02:55:45.720 --> 02:55:47.720]  Монте-Карло.
[02:55:49.720 --> 02:55:51.720]  Так. Давайте подгляжу,
[02:55:51.720 --> 02:55:53.720]  чтобы не перепутать, кто из них кто.
[02:55:53.720 --> 02:55:55.720]  Ну, вот.
[02:55:55.720 --> 02:55:57.720]  Значит, вот.
[02:55:57.720 --> 02:55:59.720]  Подглядю.
[02:55:59.720 --> 02:56:01.720]  Вот. Значит, смотрите.
[02:56:01.720 --> 02:56:03.720]  Что это, какой смысл?
[02:56:03.720 --> 02:56:05.720]  Значит, смысл такой. То есть, в обоих
[02:56:05.720 --> 02:56:07.720]  используется вероятность.
[02:56:07.720 --> 02:56:09.720]  Ну, значит, ситуация такая.
[02:56:09.720 --> 02:56:11.720]  Значит, Лас-Вегас, алгоритм Лас-Вегас
[02:56:11.720 --> 02:56:13.720]  гарантирует, что найти на ответ будет правильным,
[02:56:13.720 --> 02:56:15.720]  но
[02:56:15.720 --> 02:56:17.720]  вероятность
[02:56:17.720 --> 02:56:19.720]  будет заключаться в том,
[02:56:19.720 --> 02:56:21.720]  что
[02:56:21.720 --> 02:56:23.720]  с некоторой вероятностью
[02:56:23.720 --> 02:56:25.720]  алгоритм будет работать долго.
[02:56:25.720 --> 02:56:27.720]  Ну, то есть, понятно, что с средним алгоритмом
[02:56:27.720 --> 02:56:29.720]  будет работать круто, но с некоторой вероятностью
[02:56:29.720 --> 02:56:31.720]  он зависнет.
[02:56:31.720 --> 02:56:33.720]  То есть, нам может очень не повести.
[02:56:33.720 --> 02:56:35.720]  Это называется алгоритм
[02:56:35.720 --> 02:56:37.720]  типа Лас-Вегас.
[02:56:37.720 --> 02:56:39.720]  А есть, наоборот, алгоритм типа
[02:56:39.720 --> 02:56:41.720]  Монте-Карло. Наоборот, гарантируется,
[02:56:41.720 --> 02:56:43.720]  что он быстро работает.
[02:56:43.720 --> 02:56:45.720]  Но при этом есть вероятность, что найденным
[02:56:45.720 --> 02:56:47.720]  ответ будет неправильным.
[02:56:49.720 --> 02:56:51.720]  Ну, честно говоря, я не знаю.
[02:56:51.720 --> 02:56:53.720]  Честно говоря, скажем так, в данном случае,
[02:56:53.720 --> 02:56:55.720]  как и во многих других, я ссылаюсь на
[02:56:55.720 --> 02:56:57.720]  лекции Миши Тихомирова,
[02:56:57.720 --> 02:56:59.720]  на конспекты, о которых я сейчас опираюсь.
[02:56:59.720 --> 02:57:01.720]  Да, замечательные конспекты.
[02:57:01.720 --> 02:57:03.720]  Вам я их тоже пришлю.
[02:57:05.720 --> 02:57:07.720]  Соответственно.
[02:57:07.720 --> 02:57:09.720]  Ну, в принципе,
[02:57:09.720 --> 02:57:11.720]  про Монте-Карло вы что-то слышали,
[02:57:11.720 --> 02:57:13.720]  потому что есть классический метод
[02:57:13.720 --> 02:57:15.720]  нахождения площади
[02:57:15.720 --> 02:57:17.720]  какой-нибудь Мексской фигуры.
[02:57:17.720 --> 02:57:19.720]  Ну, допустим, вам там нужно...
[02:57:19.720 --> 02:57:21.720]  Ну, представьте, вам там нужно пересечь
[02:57:21.720 --> 02:57:23.720]  многоугольник, эллипс
[02:57:23.720 --> 02:57:25.720]  украденную елку,
[02:57:25.720 --> 02:57:27.720]  и найти площадь пересечения.
[02:57:27.720 --> 02:57:29.720]  Можно там действительно
[02:57:29.720 --> 02:57:31.720]  заморачиваться, что-то там искать,
[02:57:31.720 --> 02:57:33.720]  какую-то там гадость, какие-то там параболы,
[02:57:33.720 --> 02:57:35.720]  гиперболы, там уравнения рисовать.
[02:57:35.720 --> 02:57:37.720]  А можно вместо этого решать метод
[02:57:37.720 --> 02:57:39.720]  на Монте-Карло. Что за метод?
[02:57:39.720 --> 02:57:41.720]  Огораживаем это пересечение баундинг-боксом
[02:57:41.720 --> 02:57:43.720]  и кидаем рандомную точку.
[02:57:43.720 --> 02:57:45.720]  То есть много раз кидаем рандомную точку
[02:57:45.720 --> 02:57:47.720]  для каждой точки и считаем,
[02:57:47.720 --> 02:57:49.720]  с какой вероятностью,
[02:57:49.720 --> 02:57:51.720]  какая доля точек попала
[02:57:51.720 --> 02:57:53.720]  в площадь. И оказывается,
[02:57:53.720 --> 02:57:55.720]  что это может быть неплохой
[02:57:55.720 --> 02:57:57.720]  оценкой на площадь.
[02:57:59.720 --> 02:58:01.720]  Вот тут я, к сожалению, не могу сказать
[02:58:01.720 --> 02:58:03.720]  прям точно,
[02:58:03.720 --> 02:58:05.720]  с какой адекватной точностью
[02:58:05.720 --> 02:58:07.720]  это не готов,
[02:58:07.720 --> 02:58:09.720]  но такие методы применяют.
[02:58:09.720 --> 02:58:11.720]  Скажу в общем.
[02:58:11.720 --> 02:58:13.720]  То есть я сильно
[02:58:13.720 --> 02:58:15.720]  с удивлением узнал, что откуда у меня
[02:58:15.720 --> 02:58:17.720]  взялась задача окружить темногоугольник.
[02:58:17.720 --> 02:58:19.720]  То есть дело в том, что когда-то
[02:58:19.720 --> 02:58:21.720]  когда я был на первом курсе,
[02:58:25.720 --> 02:58:27.720]  еще проводилась такая олимпиада,
[02:58:27.720 --> 02:58:29.720]  как просто олимпиада МФ3.
[02:58:29.720 --> 02:58:31.720]  То есть личная олимпиада МФ3.
[02:58:31.720 --> 02:58:33.720]  Открытая. То есть просто
[02:58:33.720 --> 02:58:35.720]  приходим, пишем ICPC-контест,
[02:58:35.720 --> 02:58:37.720]  что-то кто-то победитель.
[02:58:37.720 --> 02:58:39.720]  Личный кубок.
[02:58:39.720 --> 02:58:41.720]  Нет, кубок это немножко не то.
[02:58:41.720 --> 02:58:43.720]  Кубок это серия и на баянах,
[02:58:43.720 --> 02:58:45.720]  а там это реально олимпиада
[02:58:45.720 --> 02:58:47.720]  с реальными призами. Я ноут выиграл.
[02:58:47.720 --> 02:58:49.720]  Ну ладно, нет, будчик такой.
[02:58:49.720 --> 02:58:51.720]  Называется.
[02:58:51.720 --> 02:58:53.720]  Ну да, осталось только
[02:58:53.720 --> 02:58:55.720]  найти спонсоров.
[02:58:55.720 --> 02:58:57.720]  В принципе, когда-нибудь
[02:58:57.720 --> 02:58:59.720]  можно и попробовать.
[02:58:59.720 --> 02:59:01.720]  Впрочем, это были
[02:59:01.720 --> 02:59:03.720]  стародавние времена, тогда еще Фистер даже
[02:59:03.720 --> 02:59:05.720]  сборы не проводил.
[02:59:05.720 --> 02:59:07.720]  Ну как сейчас в принципе, да.
[02:59:07.720 --> 02:59:09.720]  Только сейчас они просто
[02:59:09.720 --> 02:59:11.720]  видимо по каким-то полувременным причинам
[02:59:11.720 --> 02:59:13.720]  не проводятся. Возможно в будущем
[02:59:13.720 --> 02:59:15.720]  эта традиция вернется.
[02:59:15.720 --> 02:59:17.720]  Но фишка в другом.
[02:59:17.720 --> 02:59:19.720]  Так вот, я как с удивлением узнал, там
[02:59:19.720 --> 02:59:21.720]  была задача просто. Дан круг и треугольник,
[02:59:21.720 --> 02:59:23.720]  найдите площадь пересечения.
[02:59:23.720 --> 02:59:25.720]  Так вот, на разборе рассказали неожиданное.
[02:59:25.720 --> 02:59:27.720]  То есть действительно там предлагалось
[02:59:27.720 --> 02:59:29.720]  просто едва ли не Монтекарло
[02:59:29.720 --> 02:59:31.720]  писать.
[02:59:31.720 --> 02:59:33.720]  Ну в общем,
[02:59:33.720 --> 02:59:35.720]  где-то Монтекарло, а где-то сказать,
[02:59:35.720 --> 02:59:37.720]  что окружность это на самом деле такой
[02:59:37.720 --> 02:59:39.720]  сто тысяч угольник.
[02:59:39.720 --> 02:59:41.720]  Внезапно, да, я так сильно удивился.
[02:59:41.720 --> 02:59:43.720]  Причем более того, там точность
[02:59:43.720 --> 02:59:45.720]  должна была быть абсолютно относительно
[02:59:45.720 --> 02:59:47.720]  10 в минус четвертый.
[02:59:47.720 --> 02:59:49.720]  То есть утверждается, что у авторов там
[02:59:49.720 --> 02:59:51.720]  было математическое доказательство того,
[02:59:51.720 --> 02:59:53.720]  что все евристики работают с адекватной точностью.
[02:59:55.720 --> 02:59:57.720]  То есть в результате я сильно
[02:59:57.720 --> 02:59:59.720]  был очень приятно. А потом
[02:59:59.720 --> 03:00:01.720]  команды физтеха поехали в Петрозаводск.
[03:00:01.720 --> 03:00:03.720]  И в принципе половина этих задач
[03:00:03.720 --> 03:00:05.720]  пошла в контест Петрозаводска.
[03:00:05.720 --> 03:00:07.720]  В том числе и это.
[03:00:07.720 --> 03:00:09.720]  Мне приятно, так что вшипнули,
[03:00:09.720 --> 03:00:11.720]  что моё решение взяли
[03:00:11.720 --> 03:00:13.720]  в качестве авторского.
[03:00:13.720 --> 03:00:15.720]  Потому что оно было точное.
[03:00:15.720 --> 03:00:17.720]  Ну, собственно, было оно
[03:00:17.720 --> 03:00:19.720]  буквально вот как я рассказал.
[03:00:19.720 --> 03:00:21.720]  Соответственно.
[03:00:21.720 --> 03:00:23.720]  То есть так забавно было.
[03:00:23.720 --> 03:00:25.720]  Ну вот, в принципе, да, такой метод
[03:00:25.720 --> 03:00:27.720]  на полном серьезе существует.
[03:00:27.720 --> 03:00:29.720]  То есть, конечно, там точность, может, у него там
[03:00:29.720 --> 03:00:31.720]  бывает, может быть, не ого-го,
[03:00:31.720 --> 03:00:33.720]  то есть там надо ещё анализировать.
[03:00:33.720 --> 03:00:35.720]  То есть там уже, знаете, это может быть даже
[03:00:35.720 --> 03:00:37.720]  не здесь надо рассказывать, там какая точность,
[03:00:37.720 --> 03:00:39.720]  а там где-то на матстатах, на самом деле, это можно поанализировать.
[03:00:39.720 --> 03:00:41.720]  Потому что на матстатах это, я думаю,
[03:00:41.720 --> 03:00:43.720]  одна из базовых задач у вас будет там
[03:00:43.720 --> 03:00:45.720]  оценивать,
[03:00:45.720 --> 03:00:47.720]  ну там как-нибудь оценивать
[03:00:47.720 --> 03:00:49.720]  там какую-нибудь там погрешность,
[03:00:49.720 --> 03:00:51.720]  где вот там попадаете вы куда-нибудь в какую-нибудь там.
[03:00:51.720 --> 03:00:53.720]  То есть я уже даже не помню,
[03:00:53.720 --> 03:00:55.720]  куда вы попадаете.
[03:00:55.720 --> 03:00:57.720]  Не буду вас, это да, так что не буду
[03:00:57.720 --> 03:00:59.720]  вас попадать туда. Вот.
[03:00:59.720 --> 03:01:01.720]  Значит так.
[03:01:01.720 --> 03:01:03.720]  И так, значит, поговорим про QSort.
[03:01:03.720 --> 03:01:05.720]  Но QSort у нас это, конечно, алгоритм типа
[03:01:05.720 --> 03:01:07.720]  Las Vegas.
[03:01:07.720 --> 03:01:09.720]  Здесь интересно, за какое
[03:01:09.720 --> 03:01:11.720]  мотожидание мы можем
[03:01:11.720 --> 03:01:13.720]  работать.
[03:01:17.720 --> 03:01:19.720]  Ну, на самом деле, ну, смотрите.
[03:01:19.720 --> 03:01:21.720]  Ну и да.
[03:01:23.720 --> 03:01:25.720]  Ну, теоретически да.
[03:01:25.720 --> 03:01:27.720]  Но давайте хотя бы с мотожиданием.
[03:01:27.720 --> 03:01:29.720]  Давайте. То есть, честно скажу,
[03:01:29.720 --> 03:01:31.720]  мы, конечно, может быть, с этой точки зрения,
[03:01:31.720 --> 03:01:33.720]  видимо, только чуть-чуть копнём, конечно,
[03:01:33.720 --> 03:01:35.720]  только так. Где-то обзорно, где-то
[03:01:35.720 --> 03:01:37.720]  чуть-чуть просто. Да.
[03:01:37.720 --> 03:01:39.720]  Но там много чего можно, потому что
[03:01:39.720 --> 03:01:41.720]  когда приезжает на финал
[03:01:41.720 --> 03:01:43.720]  какой-нибудь там Ричард Пенко рассказывает про
[03:01:43.720 --> 03:01:45.720]  какой-нибудь там поиск потока за
[03:01:45.720 --> 03:01:47.720]  какую-то экспоненту.
[03:01:47.720 --> 03:01:49.720]  Ну, кстати, какую-то экспоненту это типа
[03:01:49.720 --> 03:01:51.720]  лучший алгоритм, но он вероятностный.
[03:01:51.720 --> 03:01:53.720]  То да, понимаешь, это алгоритмы,
[03:01:53.720 --> 03:01:55.720]  которые придумываются буквально прямо сейчас.
[03:01:55.720 --> 03:01:57.720]  Нет, ну,
[03:01:57.720 --> 03:01:59.720]  нет, мы это искали
[03:01:59.720 --> 03:02:01.720]  за VE. Они там
[03:02:01.720 --> 03:02:03.720]  может и...
[03:02:03.720 --> 03:02:05.720]  А может, наука умеет искать их там
[03:02:05.720 --> 03:02:07.720]  за два в степени log-log-V делить
[03:02:07.720 --> 03:02:09.720]  на log-log-log-V. Там это быстрее,
[03:02:09.720 --> 03:02:11.720]  чем за VE.
[03:02:11.720 --> 03:02:13.720]  Ну, что-то в этом роде там, условно.
[03:02:13.720 --> 03:02:15.720]  Ну, там степень какая-то вот такая
[03:02:15.720 --> 03:02:17.720]  была, честно говоря, я не помню.
[03:02:17.720 --> 03:02:19.720]  Вот. То есть, там отдельная
[03:02:19.720 --> 03:02:21.720]  печь, то есть, какие-то вот,
[03:02:21.720 --> 03:02:23.720]  алгоритмы в эту сторону там думают.
[03:02:23.720 --> 03:02:25.720]  Ну, просто вот было интересно, что это прямо сейчас думают.
[03:02:25.720 --> 03:02:27.720]  То есть, как бы, да.
[03:02:27.720 --> 03:02:29.720]  То есть, где в это время,
[03:02:29.720 --> 03:02:31.720]  где-то в университете Ватерло,
[03:02:31.720 --> 03:02:33.720]  чем может заниматься там...
[03:02:33.720 --> 03:02:35.720]  Ну, как минимум, потому что
[03:02:35.720 --> 03:02:37.720]  этот товарищ был из университета Ватерло в Канаде.
[03:02:37.720 --> 03:02:39.720]  Вот. Кстати,
[03:02:39.720 --> 03:02:41.720]  собственно, туда поехал Ильдар Гайнулин.
[03:02:41.720 --> 03:02:43.720]  Вот это, видимо, один из ответов,
[03:02:43.720 --> 03:02:45.720]  почему он поехал именно туда,
[03:02:45.720 --> 03:02:47.720]  а не куда-нибудь еще.
[03:02:49.720 --> 03:02:51.720]  Нет, ну, нет, редкий случай,
[03:02:51.720 --> 03:02:53.720]  но, с другой стороны, вот,
[03:02:53.720 --> 03:02:55.720]  оправданно чем? Потому что, знаете,
[03:02:55.720 --> 03:02:57.720]  он мне периодически, к сожалению,
[03:02:57.720 --> 03:02:59.720]  приходит в редакцию письма, а занимается ли у нас там...
[03:02:59.720 --> 03:03:01.720]  То есть, кто-то вот ищет научного руководителя,
[03:03:01.720 --> 03:03:03.720]  а занимается ли кто-нибудь вот чем-нибудь алгоритмическим?
[03:03:03.720 --> 03:03:05.720]  Так вот, честно, я никого не знаю.
[03:03:07.720 --> 03:03:09.720]  Вот я как всем отвечаю. Я, к сожалению, никого не знаю.
[03:03:09.720 --> 03:03:11.720]  То есть, я не знаю, можно ли найти научника,
[03:03:11.720 --> 03:03:13.720]  который будет заниматься вот чем-то подобным.
[03:03:15.720 --> 03:03:17.720]  Нет, скажи так. Я теоретически...
[03:03:18.720 --> 03:03:20.720]  Нет, смотри, нет, я как бы на эту тему,
[03:03:20.720 --> 03:03:22.720]  там, ну, в Epsilon Crest,
[03:03:22.720 --> 03:03:24.720]  я знаю, что, видимо, какой-нибудь Максим Бобенко
[03:03:24.720 --> 03:03:26.720]  мог бы заниматься чем-то подобным.
[03:03:26.720 --> 03:03:28.720]  Но он, по-моему, сейчас не имеет отношения к вистеху.
[03:03:28.720 --> 03:03:30.720]  Вот, и что еще?
[03:03:30.720 --> 03:03:32.720]  Ну, вот, и...
[03:03:32.720 --> 03:03:34.720]  Вот Ваня Смирнов, ну, собственно,
[03:03:34.720 --> 03:03:36.720]  там, да, тут надо не перепутать, да.
[03:03:36.720 --> 03:03:38.720]  Просто есть какая-то Ваня Смирнов,
[03:03:38.720 --> 03:03:40.720]  который, возможно, там ваш одногруппник, там, плюс-минус один год.
[03:03:40.720 --> 03:03:42.720]  Ваня Смирнов, которому я сдавал
[03:03:42.720 --> 03:03:44.720]  Матлок.
[03:03:45.720 --> 03:03:47.720]  Да, кстати, вот это...
[03:03:47.720 --> 03:03:49.720]  Так, ну, это похоже.
[03:03:49.720 --> 03:03:51.720]  Так, ну, это...
[03:03:51.720 --> 03:03:53.720]  Он такой темненький, с бородой.
[03:03:53.720 --> 03:03:55.720]  Нет, ну, скажем так.
[03:03:55.720 --> 03:03:57.720]  Ну, хотя, не знаю, я бы сказал, что он длинноволосый,
[03:03:57.720 --> 03:03:59.720]  но может, он уже постричься, я не знаю, я его давно не видел.
[03:03:59.720 --> 03:04:01.720]  Нет, я скажу так, что это в какой-то момент тоже...
[03:04:01.720 --> 03:04:03.720]  Скажем так, в какой-то момент
[03:04:03.720 --> 03:04:05.720]  он тоже был моим сакаманником, на самом деле.
[03:04:05.720 --> 03:04:07.720]  Вот, в свое время.
[03:04:07.720 --> 03:04:09.720]  Вот.
[03:04:09.720 --> 03:04:11.720]  Ну, вот он, ну, он рассказывал там, что
[03:04:11.720 --> 03:04:13.720]  просто в Яндексе, по идее, есть там какая-то научная
[03:04:13.720 --> 03:04:15.720]  группа, в которой там действительно занимаются алгоритмами.
[03:04:15.720 --> 03:04:17.720]  Как это ни странно.
[03:04:17.720 --> 03:04:19.720]  Вот, так вот.
[03:04:19.720 --> 03:04:21.720]  То есть можно, по идее, там переспросить у него.
[03:04:21.720 --> 03:04:23.720]  Это все, что я знаю на эту тему, к сожалению.
[03:04:23.720 --> 03:04:25.720]  То есть, конечно, немножко жалко,
[03:04:25.720 --> 03:04:27.720]  потому что, конечно, да.
[03:04:27.720 --> 03:04:29.720]  То есть, если бы кто-то этим занимался, мне, конечно, было бы это
[03:04:29.720 --> 03:04:31.720]  интересно.
[03:04:31.720 --> 03:04:33.720]  Вот, значит, смотрите.
[03:04:33.720 --> 03:04:35.720]  Ну, вернемся к
[03:04:35.720 --> 03:04:37.720]  кусорту. Вот.
[03:04:37.720 --> 03:04:39.720]  Как здесь оценивать время? Ну, давайте начнем хотя бы
[03:04:39.720 --> 03:04:41.720]  с мотор ожидания.
[03:04:41.720 --> 03:04:43.720]  Ну, как оценить мотор ожидания? Ну, давайте будем оценивать
[03:04:43.720 --> 03:04:45.720]  такую вещь, как количество сравнений
[03:04:45.720 --> 03:04:47.720]  элементов.
[03:04:47.720 --> 03:04:49.720]  Ну, потому что заметим, что
[03:04:49.720 --> 03:04:51.720]  время работает от тета от количества
[03:04:51.720 --> 03:04:53.720]  сравнений всегда, правда?
[03:04:53.720 --> 03:04:55.720]  Ну, думаю, это достаточно очевидно.
[03:04:55.720 --> 03:04:57.720]  Вот.
[03:04:57.720 --> 03:04:59.720]  Так давайте оценивать, сколько у нас сравнений.
[03:04:59.720 --> 03:05:01.720]  Ну, а первое, заметим, что каждый раз, когда у нас на отрезке,
[03:05:01.720 --> 03:05:03.720]  мы выбираем вот этот пай, вот этот
[03:05:03.720 --> 03:05:05.720]  х, то все сравнения, по сути, проходят.
[03:05:05.720 --> 03:05:07.720]  То есть, по сути, идут
[03:05:07.720 --> 03:05:09.720]  с ним.
[03:05:09.720 --> 03:05:11.720]  То есть, можно считать, что мы просто тут все элементы
[03:05:11.720 --> 03:05:13.720]  сравнили именно с ним.
[03:05:13.720 --> 03:05:15.720]  А теперь давайте,
[03:05:15.720 --> 03:05:17.720]  тогда, значит, будем анализировать так.
[03:05:17.720 --> 03:05:19.720]  Чтобы проанализировать мотор ожидания
[03:05:19.720 --> 03:05:21.720]  количества сравнений, давайте просто
[03:05:21.720 --> 03:05:23.720]  надо просто посчитать
[03:05:23.720 --> 03:05:25.720]  для каждой пары элементов, с какой
[03:05:25.720 --> 03:05:27.720]  вероятностью они будут сравнены.
[03:05:29.720 --> 03:05:31.720]  То есть, потому что,
[03:05:31.720 --> 03:05:33.720]  ну, давайте так.
[03:05:33.720 --> 03:05:35.720]  Вот, мотор ожидания,
[03:05:35.720 --> 03:05:37.720]  нас интересует мотор ожидания,
[03:05:37.720 --> 03:05:39.720]  то есть, количество таких пар,
[03:05:39.720 --> 03:05:41.720]  значит,
[03:05:41.720 --> 03:05:43.720]  и ижи,
[03:05:43.720 --> 03:05:45.720]  значит, таких,
[03:05:45.720 --> 03:05:47.720]  что и ижи
[03:05:47.720 --> 03:05:49.720]  были сравнены.
[03:05:51.720 --> 03:05:53.720]  Господи, какое-то, почему-то,
[03:05:53.720 --> 03:05:55.720]  слово какое-то, не, как будто, плохое.
[03:05:55.720 --> 03:05:57.720]  То есть, вроде, по русу,
[03:05:57.720 --> 03:05:59.720]  с точки зрения законов русского языка, вроде
[03:05:59.720 --> 03:06:01.720]  адекватное, но что-то не то, да.
[03:06:03.720 --> 03:06:05.720]  Вот, а,
[03:06:05.720 --> 03:06:07.720]  сравнены тогда.
[03:06:07.720 --> 03:06:09.720]  Сравнивались
[03:06:09.720 --> 03:06:11.720]  в процессе, во.
[03:06:15.720 --> 03:06:17.720]  В процессе кусорта.
[03:06:17.720 --> 03:06:19.720]  Ну, давайте так, да, еще,
[03:06:19.720 --> 03:06:21.720]  конечно, давайте в качестве дополнения
[03:06:21.720 --> 03:06:23.720]  быстренько скажем, что мы сортируем перестоловку
[03:06:23.720 --> 03:06:25.720]  от 1 до n.
[03:06:25.720 --> 03:06:27.720]  Вот, ну, понятно, что с точностью
[03:06:27.720 --> 03:06:29.720]  до понятного.
[03:06:29.720 --> 03:06:31.720]  Ну, как бы, одинаковые элементы,
[03:06:31.720 --> 03:06:33.720]  значит, они жизнь только облегчат.
[03:06:35.720 --> 03:06:37.720]  Вот.
[03:06:37.720 --> 03:06:39.720]  Ну, это если модифицировать кусок.
[03:06:39.720 --> 03:06:41.720]  Ну, да.
[03:06:41.720 --> 03:06:43.720]  Давайте для простоты будем, ну, может,
[03:06:43.720 --> 03:06:45.720]  по индексами считать или
[03:06:45.720 --> 03:06:47.720]  соответственно. Так вот.
[03:06:47.720 --> 03:06:49.720]  На самом деле, перезаморачиваться особо
[03:06:49.720 --> 03:06:51.720]  не будем, то есть, понятно, анализ можно чуть усложнить,
[03:06:51.720 --> 03:06:53.720]  но, как бы, не в этом
[03:06:53.720 --> 03:06:55.720]  сейчас суть. Итак,
[03:06:55.720 --> 03:06:57.720]  но заметим, что такое это мотожидание.
[03:06:57.720 --> 03:06:59.720]  На самом деле,
[03:06:59.720 --> 03:07:01.720]  это равно
[03:07:01.720 --> 03:07:03.720]  мотожидание,
[03:07:03.720 --> 03:07:05.720]  ну, что это такое?
[03:07:05.720 --> 03:07:07.720]  Это мотожидание
[03:07:07.720 --> 03:07:09.720]  суммы
[03:07:09.720 --> 03:07:11.720]  по всем ИЖ
[03:07:11.720 --> 03:07:13.720]  индикаторов
[03:07:13.720 --> 03:07:15.720]  того, что
[03:07:15.720 --> 03:07:17.720]  ИЖ
[03:07:17.720 --> 03:07:19.720]  сравнивались.
[03:07:21.720 --> 03:07:23.720]  Да, что такое индикатор?
[03:07:23.720 --> 03:07:25.720]  Ну, в тяже вере это стандартное слово,
[03:07:25.720 --> 03:07:27.720]  это стандартное слово, которое обозначает такую случайную
[03:07:27.720 --> 03:07:29.720]  величину, которая равна 1,
[03:07:29.720 --> 03:07:31.720]  если событие произошло, и ноль иначе.
[03:07:31.720 --> 03:07:33.720]  Правда?
[03:07:33.720 --> 03:07:35.720]  Так, было такое слово на теории меры?
[03:07:35.720 --> 03:07:37.720]  Не было. Хорошо.
[03:07:37.720 --> 03:07:39.720]  Но тогда у вас
[03:07:39.720 --> 03:07:41.720]  на дискрайне, наверное, было
[03:07:41.720 --> 03:07:43.720]  мистическое свойство.
[03:07:43.720 --> 03:07:45.720]  Заключается в том, что сумма
[03:07:45.720 --> 03:07:47.720]  мотожидания суммы равно
[03:07:47.720 --> 03:07:49.720]  сумме мотожиданий.
[03:07:49.720 --> 03:07:51.720]  Так, это было на дискрайне
[03:07:51.720 --> 03:07:53.720]  или на теории меры?
[03:07:53.720 --> 03:07:55.720]  Нет, на теории меры нифига не было.
[03:07:55.720 --> 03:07:57.720]  Мы доказывали
[03:07:57.720 --> 03:07:59.720]  интеграл.
[03:07:59.720 --> 03:08:01.720]  Потому что мотожидание это такой интеграл
[03:08:01.720 --> 03:08:03.720]  Либерра.
[03:08:05.720 --> 03:08:07.720]  Ну, давайте я вам веду.
[03:08:07.720 --> 03:08:09.720]  Мотожидание
[03:08:09.720 --> 03:08:11.720]  любой случайной величины,
[03:08:11.720 --> 03:08:13.720]  это, собственно, интеграл Либерра, по вероятностной
[03:08:13.720 --> 03:08:15.720]  мере.
[03:08:15.720 --> 03:08:17.720]  Ну, вот все.
[03:08:17.720 --> 03:08:19.720]  Вот и все.
[03:08:19.720 --> 03:08:21.720]  Нет.
[03:08:21.720 --> 03:08:23.720]  Я не буду вас
[03:08:23.720 --> 03:08:25.720]  просить доказывать интеграл Либерра.
[03:08:29.720 --> 03:08:31.720]  Это нот.
[03:08:33.720 --> 03:08:35.720]  Итак,
[03:08:35.720 --> 03:08:37.720]  мотожидание И, И, Ж
[03:08:37.720 --> 03:08:39.720]  и буду повторяться.
[03:08:39.720 --> 03:08:41.720]  Но что такое
[03:08:41.720 --> 03:08:43.720]  мотожидание
[03:08:43.720 --> 03:08:45.720]  индикатора?
[03:08:45.720 --> 03:08:47.720]  Как в науке называется
[03:08:47.720 --> 03:08:49.720]  мотожидание индикатора?
[03:08:49.720 --> 03:08:51.720]  Мотожидание индикатора события А.
[03:08:51.720 --> 03:08:53.720]  Да, правильно.
[03:08:53.720 --> 03:08:55.720]  Называется вероятность события А.
[03:08:55.720 --> 03:08:57.720]  Логично, да?
[03:08:57.720 --> 03:08:59.720]  Вот.
[03:09:01.720 --> 03:09:03.720]  Хотя прям звучит как пафосное
[03:09:03.720 --> 03:09:05.720]  словосочетание.
[03:09:05.720 --> 03:09:07.720]  То есть это
[03:09:07.720 --> 03:09:09.720]  вероятность есть мотожидание
[03:09:09.720 --> 03:09:11.720]  индикатора события.
[03:09:13.720 --> 03:09:15.720]  Вот.
[03:09:15.720 --> 03:09:17.720]  И, И, Ж сравнивались.
[03:09:17.720 --> 03:09:19.720]  Вот.
[03:09:19.720 --> 03:09:21.720]  Так что теперь все, что нам нужно,
[03:09:21.720 --> 03:09:23.720]  это посчитать вероятность того,
[03:09:23.720 --> 03:09:25.720]  что элементы И, И, Ж
[03:09:25.720 --> 03:09:27.720]  в перестановке сравнивались
[03:09:27.720 --> 03:09:29.720]  между собой.
[03:09:29.720 --> 03:09:31.720]  А теперь давайте подумаем.
[03:09:31.720 --> 03:09:33.720]  Вот теперь придется подумать.
[03:09:33.720 --> 03:09:35.720]  То есть это я написал какие-то относительно
[03:09:35.720 --> 03:09:37.720]  общие вещи.
[03:09:37.720 --> 03:09:39.720]  Теперь давайте копнем в алгоритм.
[03:09:39.720 --> 03:09:41.720]  С какой вероятностью они сравнивались?
[03:09:41.720 --> 03:09:43.720]  Вот.
[03:09:43.720 --> 03:09:45.720]  Конкретные элементы И, Ж.
[03:09:45.720 --> 03:09:47.720]  То есть 57 и 179.
[03:09:47.720 --> 03:09:49.720]  С какой вероятностью они
[03:09:49.720 --> 03:09:51.720]  сравнивались?
[03:09:51.720 --> 03:09:53.720]  Ну да.
[03:09:53.720 --> 03:09:55.720]  Но как-то
[03:09:55.720 --> 03:09:57.720]  вот.
[03:09:57.720 --> 03:09:59.720]  Но внимательно можно заметить следующее.
[03:09:59.720 --> 03:10:01.720]  Что некоторое время, когда мы запускали
[03:10:01.720 --> 03:10:03.720]  кусорт, И, Ж
[03:10:03.720 --> 03:10:05.720]  отправлялся в одну и ту же половину
[03:10:05.720 --> 03:10:07.720]  относительно своих пайватов.
[03:10:07.720 --> 03:10:09.720]  А потом в какой-то момент
[03:10:09.720 --> 03:10:11.720]  произошло радикальное событие.
[03:10:11.720 --> 03:10:13.720]  Выпал пайват между И, Ж.
[03:10:13.720 --> 03:10:15.720]  И тогда у нас два варианта.
[03:10:15.720 --> 03:10:17.720]  Либо этот пайват совпался
[03:10:17.720 --> 03:10:19.720]  И и Ж, и тогда их сравнивали,
[03:10:19.720 --> 03:10:21.720]  либо этот пайват оказался
[03:10:21.720 --> 03:10:23.720]  строго между ними,
[03:10:23.720 --> 03:10:25.720]  тогда они навсегда разошлись.
[03:10:25.720 --> 03:10:27.720]  Причем более того,
[03:10:27.720 --> 03:10:29.720]  получается это равно
[03:10:29.720 --> 03:10:31.720]  вероятность того, что первый пайват,
[03:10:31.720 --> 03:10:33.720]  который попал на отрезок от И, Ж
[03:10:33.720 --> 03:10:35.720]  оказался в И и Ж.
[03:10:35.720 --> 03:10:37.720]  Ну и вероятность этого.
[03:10:37.720 --> 03:10:39.720]  Так как вероятность выпадения
[03:10:39.720 --> 03:10:41.720]  каждого из них одинакова,
[03:10:41.720 --> 03:10:43.720]  то получается, что надо по всем...
[03:10:43.720 --> 03:10:45.720]  Теперь я уже в явном виде
[03:10:45.720 --> 03:10:47.720]  напишу.
[03:10:47.720 --> 03:10:49.720]  В такой штуке
[03:10:49.720 --> 03:10:51.720]  получается вероятность равна 2
[03:10:51.720 --> 03:10:53.720]  делить на Ж минус И
[03:10:53.720 --> 03:10:55.720]  плюс 1.
[03:10:59.720 --> 03:11:01.720]  Но остается немножко алгебры.
[03:11:03.720 --> 03:11:05.720]  На отрезке между И и Ж
[03:11:05.720 --> 03:11:07.720]  находится Ж минус И плюс один элемент.
[03:11:07.720 --> 03:11:09.720]  Два из них в качестве...
[03:11:11.720 --> 03:11:13.720]  Чтобы проверить вероятность,
[03:11:13.720 --> 03:11:15.720]  мы ждем первого...
[03:11:15.720 --> 03:11:17.720]  Мы ждем первого пайвата,
[03:11:17.720 --> 03:11:19.720]  который попал между И и Ж.
[03:11:19.720 --> 03:11:21.720]  Если он попал в И и Ж,
[03:11:21.720 --> 03:11:23.720]  нас устраивает, если строго между нет.
[03:11:23.720 --> 03:11:25.720]  Получается, нас устраивает два случая из вот этих.
[03:11:37.720 --> 03:11:39.720]  На самом деле,
[03:11:39.720 --> 03:11:41.720]  это уже суммируется очень легко.
[03:11:41.720 --> 03:11:43.720]  Я буду просто по L
[03:11:43.720 --> 03:11:45.720]  от 2 до N.
[03:11:45.720 --> 03:11:47.720]  Два делить на L
[03:11:47.720 --> 03:11:49.720]  умножить на сколько раз
[03:11:49.720 --> 03:11:51.720]  у меня встречается знаменатель L.
[03:11:55.720 --> 03:11:57.720]  А сколько раз у меня встречается знаменатель L?
[03:11:57.720 --> 03:11:59.720]  Номинатель L.
[03:12:11.720 --> 03:12:13.720]  Ну да,
[03:12:13.720 --> 03:12:15.720]  по сути, сколько подотресков длины L
[03:12:15.720 --> 03:12:17.720]  в массиве длины N?
[03:12:17.720 --> 03:12:19.720]  Их N минус L плюс один.
[03:12:21.720 --> 03:12:23.720]  Чего?
[03:12:23.720 --> 03:12:25.720]  Ну,
[03:12:25.720 --> 03:12:27.720]  потому что у нас и и Ж всегда разные.
[03:12:29.720 --> 03:12:31.720]  Вот. Ишить такое.
[03:12:31.720 --> 03:12:33.720]  Давайте так, я сразу
[03:12:33.720 --> 03:12:35.720]  напишу. Это не превосходит
[03:12:35.720 --> 03:12:37.720]  два N.
[03:12:37.720 --> 03:12:39.720]  Сумма по всем от L до 2 до N
[03:12:39.720 --> 03:12:41.720]  один делить на L.
[03:12:41.720 --> 03:12:43.720]  Что равно O от N
[03:12:43.720 --> 03:12:45.720]  лог N.
[03:12:49.720 --> 03:12:51.720]  Ну, я так просто сверху оценю,
[03:12:51.720 --> 03:12:53.720]  хотя более четкий анализ
[03:12:53.720 --> 03:12:55.720]  вам в явном виде покажет,
[03:12:55.720 --> 03:12:57.720]  что это от ожидания θ от N лог N.
[03:13:01.720 --> 03:13:03.720]  То есть к чему это нас привело?
[03:13:03.720 --> 03:13:05.720]  Это нас привело к тому,
[03:13:05.720 --> 03:13:07.720]  что в среднем
[03:13:07.720 --> 03:13:09.720]  это работает за N лог N.
[03:13:13.720 --> 03:13:15.720]  Вот.
[03:13:15.720 --> 03:13:17.720]  Ну, конечно, это не значит, что оно всегда будет
[03:13:17.720 --> 03:13:19.720]  работать за N лог N.
[03:13:19.720 --> 03:13:21.720]  Потому что в принципе есть вероятность,
[03:13:21.720 --> 03:13:23.720]  что оно будет работать
[03:13:23.720 --> 03:13:25.720]  за 10 N лог N,
[03:13:25.720 --> 03:13:27.720]  за 20 N лог N,
[03:13:27.720 --> 03:13:29.720]  за 100 N лог N.
[03:13:29.720 --> 03:13:31.720]  Или просто
[03:13:31.720 --> 03:13:33.720]  за квадрат.
[03:13:35.720 --> 03:13:37.720]  Вот.
[03:13:37.720 --> 03:13:39.720]  Правда, какие-то оценки можем сделать
[03:13:39.720 --> 03:13:41.720]  и сейчас. Смотрите.
[03:13:41.720 --> 03:13:43.720]  Потому что мы тут сказали,
[03:13:43.720 --> 03:13:45.720]  что у нас тут O от N лог N.
[03:13:45.720 --> 03:13:47.720]  Ну, где-то там вот этому от ожидания
[03:13:47.720 --> 03:13:49.720]  Ну, на самом деле,
[03:13:49.720 --> 03:13:51.720]  можно сказать, что этому от ожидания, допустим,
[03:13:51.720 --> 03:13:53.720]  не превосходит 2 N лог N.
[03:13:53.720 --> 03:13:55.720]  Вот, допустим.
[03:13:55.720 --> 03:13:57.720]  Тогда, смотрите,
[03:13:57.720 --> 03:13:59.720]  на самом деле я могу заявить такое,
[03:13:59.720 --> 03:14:01.720]  что
[03:14:01.720 --> 03:14:03.720]  на самом деле 100 N лог N
[03:14:03.720 --> 03:14:05.720]  будет не так часто.
[03:14:05.720 --> 03:14:07.720]  Потому что я утверждаю, что
[03:14:07.720 --> 03:14:09.720]  100 N лог N будет
[03:14:09.720 --> 03:14:11.720]  с вероятностью
[03:14:11.720 --> 03:14:13.720]  не более чем 1,50.
[03:14:13.720 --> 03:14:15.720]  Может быть даже 1,25.
[03:14:15.720 --> 03:14:17.720]  Почему?
[03:14:17.720 --> 03:14:19.720]  Ну, если тут 2 N лог N,
[03:14:19.720 --> 03:14:21.720]  тут 100.
[03:14:21.720 --> 03:14:23.720]  Да, почему я это
[03:14:23.720 --> 03:14:25.720]  утверждаю?
[03:14:25.720 --> 03:14:27.720]  Да.
[03:14:27.720 --> 03:14:29.720]  А,
[03:14:29.720 --> 03:14:31.720]  ты предлагаешь дисперсию считать?
[03:14:31.720 --> 03:14:33.720]  Нет, это про меру.
[03:14:33.720 --> 03:14:35.720]  Что мера и интеграл.
[03:14:35.720 --> 03:14:37.720]  Так, ну погодите. Ладно, давайте.
[03:14:37.720 --> 03:14:39.720]  Да, давайте начнемте с разминочки.
[03:14:39.720 --> 03:14:41.720]  Потому что у нас есть неравенство Маркова.
[03:14:41.720 --> 03:14:43.720]  Я про то, что
[03:14:43.720 --> 03:14:45.720]  мера точек,
[03:14:45.720 --> 03:14:47.720]  в которой вероятность будет шевелена чем a,
[03:14:47.720 --> 03:14:49.720]  она меньше чем интеграл делить на a.
[03:14:49.720 --> 03:14:51.720]  Сейчас, погодите.
[03:14:51.720 --> 03:14:53.720]  Сейчас я сначала одно напишу,
[03:14:53.720 --> 03:14:55.720]  потом выскажете.
[03:14:55.720 --> 03:14:57.720]  То есть самая простая оценка какая-то
[03:14:57.720 --> 03:14:59.720]  на вероятность того, что будет счет слишком много,
[03:14:59.720 --> 03:15:01.720]  это неравенство Маркова.
[03:15:01.720 --> 03:15:03.720]  То есть если у вас какая-то случайная величина больше
[03:15:03.720 --> 03:15:05.720]  либо равна нуля,
[03:15:05.720 --> 03:15:07.720]  то вероятность того, что xi
[03:15:07.720 --> 03:15:09.720]  больше какого-то епсилона,
[03:15:09.720 --> 03:15:11.720]  она на самом деле не превосходит
[03:15:11.720 --> 03:15:13.720]  ну доказывается в общем-то тривиально.
[03:15:13.720 --> 03:15:15.720]  Потому что
[03:15:15.720 --> 03:15:17.720]  как бы домножаем на епсилон
[03:15:17.720 --> 03:15:19.720]  и оцениваем от ожидания
[03:15:19.720 --> 03:15:21.720]  когда xi
[03:15:21.720 --> 03:15:23.720]  заменяем на
[03:15:23.720 --> 03:15:25.720]  если она больше епсилона
[03:15:25.720 --> 03:15:27.720]  заменяем на епсилон, а если меньше епсилона
[03:15:27.720 --> 03:15:29.720]  заменяем на ноль, получаем буквально
[03:15:29.720 --> 03:15:31.720]  епсилон на вероятность. Ну понятно.
[03:15:31.720 --> 03:15:33.720]  То есть в принципе
[03:15:33.720 --> 03:15:35.720]  уже отсюда следует, что вероятность того,
[03:15:35.720 --> 03:15:37.720]  что у нас тут будет стоен луген, невелика.
[03:15:37.720 --> 03:15:39.720]  Вот.
[03:15:39.720 --> 03:15:41.720]  Поэтому если очень страшно, в принципе там есть
[03:15:41.720 --> 03:15:43.720]  всякие читерские методы в духе, что если вы понимаете,
[03:15:43.720 --> 03:15:45.720]  что оно работает стоен луген,
[03:15:45.720 --> 03:15:47.720]  а давайте
[03:15:47.720 --> 03:15:49.720]  отрубим алгоритм и запустим его
[03:15:49.720 --> 03:15:51.720]  заново.
[03:15:55.720 --> 03:15:57.720]  Это изменит то, что вы
[03:15:57.720 --> 03:15:59.720]  видимо дадите себе
[03:15:59.720 --> 03:16:01.720]  большее гарантии, что у вас никогда не будет
[03:16:01.720 --> 03:16:03.720]  работать за квадрат.
[03:16:03.720 --> 03:16:05.720]  Да.
[03:16:05.720 --> 03:16:07.720]  Нет, стоп, это все равно все еще влияет
[03:16:07.720 --> 03:16:09.720]  нам от ожидания. Нет, ну мы один рандом
[03:16:09.720 --> 03:16:11.720]  заменили на другой. Нет, я бы сказал
[03:16:11.720 --> 03:16:13.720]  мы, нет, мы
[03:16:13.720 --> 03:16:15.720]  не заменили, мы один рандом
[03:16:15.720 --> 03:16:17.720]  еще и страхуем другим.
[03:16:19.720 --> 03:16:21.720]  Ну не страхуем, а страхуем
[03:16:21.720 --> 03:16:23.720]  отсечкой. То есть мы говорим
[03:16:23.720 --> 03:16:25.720]  мы говорим так, стоен луген
[03:16:25.720 --> 03:16:27.720]  нас устраивает условно.
[03:16:27.720 --> 03:16:29.720]  Вообще мы сейчас квадрат заменили на бесконечность, если нам все время
[03:16:29.720 --> 03:16:31.720]  не везет. Ну естественно, да.
[03:16:31.720 --> 03:16:33.720]  Ну в худшем случае да.
[03:16:33.720 --> 03:16:35.720]  Ну с одной стороны
[03:16:35.720 --> 03:16:37.720]  да, давайте тогда в худшем случае
[03:16:37.720 --> 03:16:39.720]  да, но с другой стороны в лучшем все-таки
[03:16:39.720 --> 03:16:41.720]  это можно отсекаться.
[03:16:41.720 --> 03:16:43.720]  В другой стране вероятность того, что он работает за х
[03:16:43.720 --> 03:16:45.720]  столько меньше, чем один делитель
[03:16:45.720 --> 03:16:47.720]  50 в степени х, что-то такое.
[03:16:47.720 --> 03:16:49.720]  Это эксперсия.
[03:16:51.720 --> 03:16:53.720]  Так, ну теперь говорите, что вы говорили
[03:16:53.720 --> 03:16:55.720]  про, собственно, примеры.
[03:16:55.720 --> 03:16:57.720]  Если вы в казино там вам не везет,
[03:16:57.720 --> 03:16:59.720]  вы если встанете
[03:16:59.720 --> 03:17:01.720]  в другой стол, вы идете, ну что изменится?
[03:17:05.720 --> 03:17:07.720]  Ну это может иметь смысл, если
[03:17:07.720 --> 03:17:09.720]  например
[03:17:09.720 --> 03:17:11.720]  если у нас, например, с вероятностью 1-2
[03:17:11.720 --> 03:17:13.720]  мы зацикливаемся, а с вероятностью 1-2
[03:17:13.720 --> 03:17:15.720]  вы даем ответ за ОАТ,
[03:17:15.720 --> 03:17:17.720]  тогда нам умеет смысл там ждать
[03:17:17.720 --> 03:17:19.720]  3n операции, потом перезапускаться.
[03:17:19.720 --> 03:17:21.720]  Ну типа того, да.
[03:17:21.720 --> 03:17:23.720]  Мы не знаем, как наш алгоритм конкретно
[03:17:23.720 --> 03:17:25.720]  устроен по структуре.
[03:17:25.720 --> 03:17:27.720]  Вот. Так, а что
[03:17:27.720 --> 03:17:29.720]  вы говорили про меру делить на А?
[03:17:29.720 --> 03:17:31.720]  Да нет, это прикол,
[03:17:31.720 --> 03:17:33.720]  что
[03:17:33.720 --> 03:17:35.720]  в теории меры неравенства
[03:17:35.720 --> 03:17:37.720]  Маркового называется неравенство Чебушова.
[03:17:37.720 --> 03:17:39.720]  А, ну это странно,
[03:17:39.720 --> 03:17:41.720]  потому что в теории меры
[03:17:41.720 --> 03:17:43.720]  неравенство Чебушова называется немножко
[03:17:43.720 --> 03:17:45.720]  по-другому. То есть там неравенство
[03:17:45.720 --> 03:17:47.720]  Чебушова имеет в виду немножко другое.
[03:17:51.720 --> 03:17:53.720]  Там, по-моему, вероятность того,
[03:17:53.720 --> 03:17:55.720]  что разность
[03:17:55.720 --> 03:17:57.720]  между Кси, между под ожиданием
[03:17:57.720 --> 03:17:59.720]  больше Эпсилона,
[03:17:59.720 --> 03:18:01.720]  она меньше либо равна,
[03:18:01.720 --> 03:18:03.720]  чем, по-моему, дисперсия Кси
[03:18:03.720 --> 03:18:05.720]  делить на Эпсилон в квадрате.
[03:18:05.720 --> 03:18:07.720]  Вообще для меня
[03:18:07.720 --> 03:18:09.720]  вот это называется неравенство Чебушова.
[03:18:09.720 --> 03:18:11.720]  Это не важно, это просто прикол.
[03:18:11.720 --> 03:18:13.720]  А, ну прикол, все хорошо.
[03:18:13.720 --> 03:18:15.720]  Нет, просто такое неравенство есть
[03:18:15.720 --> 03:18:17.720]  и оно как бы применимо.
[03:18:17.720 --> 03:18:19.720]  То есть кто-то его считает это просто...
[03:18:19.720 --> 03:18:21.720]  Кто-то его считает вообще
[03:18:21.720 --> 03:18:23.720]  два линии, одним из нулевых версий закона больших
[03:18:23.720 --> 03:18:25.720]  чисел на самом деле.
[03:18:25.720 --> 03:18:27.720]  Вот.
[03:18:27.720 --> 03:18:29.720]  Значит, соответственно.
[03:18:29.720 --> 03:18:31.720]  Нет, ну там просто это
[03:18:31.720 --> 03:18:33.720]  вкупе с линейностью,
[03:18:33.720 --> 03:18:35.720]  аддитивностью дисперсии для независимых случайных величин
[03:18:35.720 --> 03:18:37.720]  там действительно получается хорошо.
[03:18:37.720 --> 03:18:39.720]  Вот.
[03:18:39.720 --> 03:18:41.720]  Значит, хорошо, да.
[03:18:41.720 --> 03:18:43.720]  Значит, это был у нас
[03:18:43.720 --> 03:18:45.720]  Кусорт. Но у Кусорта есть младший брат.
[03:18:45.720 --> 03:18:47.720]  Называется
[03:18:47.720 --> 03:18:49.720]  найдите... Называется
[03:18:49.720 --> 03:18:51.720]  Q Order Statistics.
[03:18:51.720 --> 03:18:53.720]  Ну это найдите Q Order Statistics.
[03:18:55.720 --> 03:18:57.720]  Вот. В чем тоже очень простой алгоритм.
[03:18:57.720 --> 03:18:59.720]  То есть мы делаем абсолютно
[03:18:59.720 --> 03:19:01.720]  то же самое, только рекуссивно, потом
[03:19:01.720 --> 03:19:03.720]  запускаемся не от двух массивов, а от одного,
[03:19:03.720 --> 03:19:05.720]  который нам надо.
[03:19:05.720 --> 03:19:07.720]  Помните, да?
[03:19:07.720 --> 03:19:09.720]  Вот.
[03:19:09.720 --> 03:19:11.720]  Но давайте посчитаем, а какова у него вот ожидание
[03:19:11.720 --> 03:19:13.720]  времени работы.
[03:19:13.720 --> 03:19:15.720]  Ну, в общем
[03:19:15.720 --> 03:19:17.720]  префикс записи в общем-то не меняется.
[03:19:17.720 --> 03:19:19.720]  То есть на самом деле
[03:19:19.720 --> 03:19:21.720]  изменение начинается вот с этого момента.
[03:19:21.720 --> 03:19:23.720]  Да.
[03:19:23.720 --> 03:19:25.720]  То есть до этого момента все совпадало.
[03:19:25.720 --> 03:19:27.720]  А вот дальше придется думать.
[03:19:31.720 --> 03:19:33.720]  Потому что сравнивать ли и ежи
[03:19:33.720 --> 03:19:35.720]  на самом деле очень сильно зависит от того,
[03:19:35.720 --> 03:19:37.720]  где вот это вот ката-элемент находится,
[03:19:37.720 --> 03:19:39.720]  который мы ищем.
[03:19:39.720 --> 03:19:41.720]  Логично, да?
[03:19:43.720 --> 03:19:45.720]  Да нет, наверное.
[03:19:45.720 --> 03:19:47.720]  Что еще у нас?
[03:19:47.720 --> 03:19:49.720]  Ну вот мы ищем
[03:19:49.720 --> 03:19:51.720]  вот эти вероятности.
[03:19:51.720 --> 03:19:53.720]  Но заметим, что вот эта вот вероятность
[03:19:53.720 --> 03:19:55.720]  для ижи она сильно зависит не только
[03:19:55.720 --> 03:19:57.720]  от ижи, но от того, где относительно
[03:19:57.720 --> 03:19:59.720]  их находится ка.
[03:19:59.720 --> 03:20:01.720]  Где ката-элемент это тот, который мы реально
[03:20:01.720 --> 03:20:03.720]  ищем.
[03:20:03.720 --> 03:20:05.720]  Что мы ищем?
[03:20:05.720 --> 03:20:07.720]  Ката и порядка статистиков?
[03:20:07.720 --> 03:20:09.720]  Да.
[03:20:13.720 --> 03:20:15.720]  Вот.
[03:20:15.720 --> 03:20:17.720]  Ищем ее
[03:20:17.720 --> 03:20:19.720]  вероятностным методом.
[03:20:19.720 --> 03:20:21.720]  Тоже выбираем вероятностный
[03:20:21.720 --> 03:20:23.720]  пайвент, пишем
[03:20:23.720 --> 03:20:25.720]  кто меньше, кто больше, и потом отправляемся
[03:20:25.720 --> 03:20:27.720]  только в один подмассив.
[03:20:27.720 --> 03:20:29.720]  Вот мы пытаемся это оценить.
[03:20:29.720 --> 03:20:31.720]  Теперь какая вероятность того, что
[03:20:31.720 --> 03:20:33.720]  и и жи сравнится?
[03:20:33.720 --> 03:20:35.720]  На самом деле все зависит.
[03:20:35.720 --> 03:20:37.720]  Потому что может так случиться, что
[03:20:37.720 --> 03:20:39.720]  и ты и жи ты элемент,
[03:20:39.720 --> 03:20:41.720]  и ката-элемент, то есть ка на самом деле
[03:20:41.720 --> 03:20:43.720]  находится между ними.
[03:20:45.720 --> 03:20:47.720]  Но тогда заметим, что в этом случае
[03:20:47.720 --> 03:20:49.720]  вероятность остается неизменной.
[03:20:49.720 --> 03:20:51.720]  То есть мы все равно все еще ждем
[03:20:51.720 --> 03:20:53.720]  пайвата, который попадет между и и жи.
[03:20:59.720 --> 03:21:01.720]  Да, с какой вероятностью это произойдет?
[03:21:05.720 --> 03:21:07.720]  Да, но заметим, что
[03:21:07.720 --> 03:21:09.720]  как бы рано или поздно этот пайват
[03:21:09.720 --> 03:21:11.720]  действительно найдется.
[03:21:11.720 --> 03:21:13.720]  Потому что, то смотрите, еще просто
[03:21:13.720 --> 03:21:15.720]  чем этот случай отличается от q-сорта?
[03:21:15.720 --> 03:21:17.720]  Потому что, допустим, у меня k окажется меньше,
[03:21:17.720 --> 03:21:19.720]  чем i.
[03:21:19.720 --> 03:21:21.720]  Тогда помимо ситуации, когда у нас
[03:21:21.720 --> 03:21:23.720]  найдется пайват между и и жи, который
[03:21:23.720 --> 03:21:25.720]  разделит и и жи, может еще найти ситуацию,
[03:21:25.720 --> 03:21:27.720]  когда пайват попадет между k и i,
[03:21:27.720 --> 03:21:29.720]  и и и жи не будут срагиваться, потому что они оба
[03:21:29.720 --> 03:21:31.720]  отправятся в аут.
[03:21:33.720 --> 03:21:35.720]  Ну, во-первых, давайте так.
[03:21:35.720 --> 03:21:37.720]  Но если у нас i меньше k,
[03:21:37.720 --> 03:21:39.720]  допустим, меньше либо
[03:21:39.720 --> 03:21:41.720]  равно k, меньше либо равно жи,
[03:21:41.720 --> 03:21:43.720]  скажем, да,
[03:21:45.720 --> 03:21:47.720]  то тогда здесь вероятность та же,
[03:21:47.720 --> 03:21:49.720]  какая была, 2 поделить тожи
[03:21:49.720 --> 03:21:51.720]  минус i плюс 1.
[03:21:51.720 --> 03:21:53.720]  Понятно, да?
[03:21:53.720 --> 03:21:55.720]  Вот.
[03:21:55.720 --> 03:21:57.720]  Но, с другой стороны,
[03:21:57.720 --> 03:21:59.720]  если у меня k, а теперь давайте
[03:21:59.720 --> 03:22:01.720]  думать, если у меня k оказалось
[03:22:01.720 --> 03:22:03.720]  меньше, чем i,
[03:22:05.720 --> 03:22:07.720]  то с какой вероятностью и и жи будут
[03:22:07.720 --> 03:22:09.720]  сравниваться?
[03:22:11.720 --> 03:22:13.720]  Видимо...
[03:22:13.720 --> 03:22:15.720]  Сейчас.
[03:22:27.720 --> 03:22:29.720]  Это, видимо...
[03:22:29.720 --> 03:22:31.720]  Ну, короче, нам нужно, чтобы
[03:22:31.720 --> 03:22:33.720]  пайват попал, чтобы вот первый пайват
[03:22:33.720 --> 03:22:35.720]  на отрезок k и жи попал
[03:22:35.720 --> 03:22:37.720]  в отрезок и жи.
[03:22:37.720 --> 03:22:39.720]  Нет.
[03:22:39.720 --> 03:22:41.720]  Но это необходимо, но недостаточное.
[03:22:41.720 --> 03:22:43.720]  Потому что, если он попадет
[03:22:43.720 --> 03:22:45.720]  строго между и и жи, то они сравниваться
[03:22:45.720 --> 03:22:47.720]  все еще не будут.
[03:22:47.720 --> 03:22:49.720]  А, никогда?
[03:22:49.720 --> 03:22:51.720]  Нет. Если он попадет между и и жи,
[03:22:51.720 --> 03:22:53.720]  то не будет. Если между k и и не будет,
[03:22:53.720 --> 03:22:55.720]  а вот если он попадет в и, то сравниваться будут.
[03:22:55.720 --> 03:22:57.720]  А в и и с вне условий?
[03:22:57.720 --> 03:22:59.720]  Нет, еще он в жи может попасть.
[03:22:59.720 --> 03:23:01.720]  И тоже они сравниваться будут.
[03:23:01.720 --> 03:23:03.720]  Нужно, чтобы
[03:23:03.720 --> 03:23:05.720]  несколько раз у нас либо было
[03:23:05.720 --> 03:23:07.720]  либо левее k, а тогда все нормально.
[03:23:07.720 --> 03:23:09.720]  Но некоторое время так и будет.
[03:23:09.720 --> 03:23:11.720]  Но просто в какой-то момент
[03:23:11.720 --> 03:23:13.720]  пайват попадет между k и жи
[03:23:13.720 --> 03:23:15.720]  включительно.
[03:23:15.720 --> 03:23:17.720]  И тогда либо он попадет в и или жи
[03:23:17.720 --> 03:23:19.720]  и сравниваться будут, либо куда-то еще
[03:23:19.720 --> 03:23:21.720]  и сравниваться не будут.
[03:23:21.720 --> 03:23:23.720]  Поэтому здесь придется... Поэтому пишем... На этот раз
[03:23:23.720 --> 03:23:25.720]  пишем 2 жи минус k
[03:23:25.720 --> 03:23:27.720]  плюс 1.
[03:23:27.720 --> 03:23:29.720]  Чего?
[03:23:29.720 --> 03:23:31.720]  Почему? А что нет?
[03:23:31.720 --> 03:23:33.720]  В смысле нам еще нужно учесть, что
[03:23:33.720 --> 03:23:35.720]  вот это первое время
[03:23:35.720 --> 03:23:37.720]  связывается с левой и с правой.
[03:23:37.720 --> 03:23:39.720]  Ну, смотрите, некоторое время
[03:23:39.720 --> 03:23:41.720]  просто...
[03:23:41.720 --> 03:23:43.720]  И что? Будут с левой и с правой.
[03:23:43.720 --> 03:23:45.720]  То есть были какие-то пайваты. Пока
[03:23:45.720 --> 03:23:47.720]  пайват не попадет на отрезок от k до жи,
[03:23:47.720 --> 03:23:49.720]  все элементы k и жи будут
[03:23:49.720 --> 03:23:51.720]  попадать в одну и ту же часть относительно
[03:23:51.720 --> 03:23:53.720]  пайвата, и от них будет запускаться рекурсия.
[03:23:55.720 --> 03:23:57.720]  Поэтому на то, будет ли сравниваться и жи,
[03:23:57.720 --> 03:23:59.720]  особо не влияет. А потом в какой-то момент
[03:23:59.720 --> 03:24:01.720]  впервые в жизни, рано или поздно,
[03:24:01.720 --> 03:24:03.720]  будет выпадет какой-то пайват на отрезке
[03:24:03.720 --> 03:24:05.720]  жи. Причем этим первым каждый из этих
[03:24:05.720 --> 03:24:07.720]  элементов может быть очевидно равновероятно.
[03:24:09.720 --> 03:24:11.720]  Но только два из них
[03:24:11.720 --> 03:24:13.720]  дают нам
[03:24:13.720 --> 03:24:15.720]  хорошие случаи.
[03:24:15.720 --> 03:24:17.720]  Поэтому 2 жи минус k плюс 1.
[03:24:17.720 --> 03:24:19.720]  Ну и конечно же
[03:24:19.720 --> 03:24:21.720]  остается только написать симметричное
[03:24:21.720 --> 03:24:23.720]  слагаемое.
[03:24:25.720 --> 03:24:27.720]  Получится вот так. 2 делить на k минус
[03:24:27.720 --> 03:24:29.720]  и плюс 1.
[03:24:33.720 --> 03:24:35.720]  Так, а теперь
[03:24:35.720 --> 03:24:37.720]  смотрите.
[03:24:37.720 --> 03:24:39.720]  Начну, давайте пробовать.
[03:24:39.720 --> 03:24:41.720]  Так, ну а первое давайте так.
[03:24:41.720 --> 03:24:43.720]  Первое слагаемое я тупо перепишу.
[03:24:43.720 --> 03:24:45.720]  k меньше либо равно жи
[03:24:45.720 --> 03:24:47.720]  2 делить на жи
[03:24:47.720 --> 03:24:49.720]  минус и плюс 1.
[03:24:49.720 --> 03:24:51.720]  Да, важный момент, что да и меньше жи
[03:24:51.720 --> 03:24:53.720]  при этом все-таки у нас.
[03:24:53.720 --> 03:24:55.720]  Напоминаю. Ну это конечно мы поняли вот.
[03:24:55.720 --> 03:24:57.720]  Вот.
[03:24:57.720 --> 03:24:59.720]  Да, здесь меньше либо равно. А вот здесь я
[03:24:59.720 --> 03:25:01.720]  начну от, ну вот.
[03:25:01.720 --> 03:25:03.720]  А, ну почему, ладно. Здесь
[03:25:05.720 --> 03:25:07.720]  здесь я могу, просто вот здесь я от и
[03:25:07.720 --> 03:25:09.720]  могу избавиться. То есть я просто здесь
[03:25:09.720 --> 03:25:11.720]  напишу k,
[03:25:11.720 --> 03:25:13.720]  для всех k меньше жи. Я здесь
[03:25:13.720 --> 03:25:15.720]  напишу просто
[03:25:15.720 --> 03:25:17.720]  какую-нибудь вероятность в духе
[03:25:17.720 --> 03:25:19.720]  2 делить на жи минус k плюс 1.
[03:25:19.720 --> 03:25:21.720]  Но ее я умножу на сколько и
[03:25:21.720 --> 03:25:23.720]  между жи и к. А сколько их?
[03:25:23.720 --> 03:25:25.720]  Правильно. Жи минус к
[03:25:25.720 --> 03:25:27.720]  минус 1.
[03:25:27.720 --> 03:25:29.720]  Логично, да?
[03:25:29.720 --> 03:25:31.720]  Ну и плюс
[03:25:31.720 --> 03:25:33.720]  сумма по всем и меньше
[03:25:33.720 --> 03:25:35.720]  чем k. Получается 2
[03:25:35.720 --> 03:25:37.720]  на k минус и плюс 1.
[03:25:37.720 --> 03:25:39.720]  На k минус и минус
[03:25:39.720 --> 03:25:41.720]  1.
[03:25:41.720 --> 03:25:43.720]  Ну, заметим, что это что у нас
[03:25:43.720 --> 03:25:45.720]  такое?
[03:25:47.720 --> 03:25:49.720]  То есть на самом деле я утверждаю, что
[03:25:49.720 --> 03:25:51.720]  каждое такое слагаемое можно оценить как
[03:25:51.720 --> 03:25:53.720]  единицу, правда? Ну ладно, как двойку.
[03:25:53.720 --> 03:25:55.720]  Сверху, правда?
[03:25:55.720 --> 03:25:57.720]  Какое? Вот такое.
[03:25:59.720 --> 03:26:01.720]  Вот.
[03:26:01.720 --> 03:26:03.720]  В смысле?
[03:26:03.720 --> 03:26:05.720]  Это делить на это меньше единицы.
[03:26:05.720 --> 03:26:07.720]  Спасибо.
[03:26:07.720 --> 03:26:09.720]  Так.
[03:26:09.720 --> 03:26:11.720]  Это меньше либо равно.
[03:26:11.720 --> 03:26:13.720]  В сумме 2 делить
[03:26:13.720 --> 03:26:15.720]  на жи минус и плюс 1,
[03:26:15.720 --> 03:26:17.720]  где между
[03:26:17.720 --> 03:26:19.720]  и и жи затесалось k.
[03:26:19.720 --> 03:26:21.720]  И плюс
[03:26:21.720 --> 03:26:23.720]  получается, ну суммарно,
[03:26:23.720 --> 03:26:25.720]  получается 2n на самом деле.
[03:26:25.720 --> 03:26:27.720]  Потому что я тут по всем k пробегаюсь,
[03:26:27.720 --> 03:26:29.720]  по сути.
[03:26:29.720 --> 03:26:31.720]  K я фиксирую и прибираюсь по всем элементам
[03:26:31.720 --> 03:26:33.720]  неравным k, и для каждого элемента
[03:26:33.720 --> 03:26:35.720]  получаю 2. Поэтому сумма получается не больше
[03:26:35.720 --> 03:26:37.720]  чем 2n.
[03:26:37.720 --> 03:26:39.720]  Вот.
[03:26:45.720 --> 03:26:47.720]  Вот.
[03:26:47.720 --> 03:26:49.720]  Но теперь заметим вот эту штуку.
[03:26:49.720 --> 03:26:51.720]  А теперь вот.
[03:26:51.720 --> 03:26:53.720]  Теперь значит я пишу.
[03:26:57.720 --> 03:26:59.720]  То есть на самом деле
[03:26:59.720 --> 03:27:01.720]  это равно 2 делить на l умножить
[03:27:01.720 --> 03:27:03.720]  на количество отрезочков
[03:27:03.720 --> 03:27:05.720]  длины l.
[03:27:13.720 --> 03:27:15.720]  А потому что, смотрите, тут мы
[03:27:15.720 --> 03:27:17.720]  приберем элементы, которые меньше, чем k,
[03:27:17.720 --> 03:27:19.720]  а тут которые больше, чем k.
[03:27:19.720 --> 03:27:21.720]  Поэтому не 4.
[03:27:21.720 --> 03:27:23.720]  А теперь, смотрите, получается,
[03:27:23.720 --> 03:27:25.720]  помимо этих 2n надо просуммировать,
[03:27:25.720 --> 03:27:27.720]  то есть надо взять 2 делить на l
[03:27:27.720 --> 03:27:29.720]  и умножить на количество
[03:27:29.720 --> 03:27:31.720]  отрезков длины l,
[03:27:31.720 --> 03:27:33.720]  которые цепляют элемент k.
[03:27:35.720 --> 03:27:37.720]  Спрашивает, сколько таких отрезков?
[03:27:39.720 --> 03:27:41.720]  Ну, оказывается, их не более, чем l.
[03:27:41.720 --> 03:27:43.720]  Как легко убедиться, потому что этот k-то элемент
[03:27:43.720 --> 03:27:45.720]  может в этом отрезке длины l быть 1, 2, 3 и так далее.
[03:27:49.720 --> 03:27:51.720]  Такое красивое замечание.
[03:27:51.720 --> 03:27:53.720]  Вот.
[03:27:55.720 --> 03:27:57.720]  Ну и, короче говоря, очевидно,
[03:27:57.720 --> 03:27:59.720]  что это равно o от m,
[03:27:59.720 --> 03:28:01.720]  потому что это не превосходит 4n.
[03:28:11.720 --> 03:28:13.720]  Это k-то.
[03:28:13.720 --> 03:28:15.720]  Нет, ну это просто мы от ожидания посчитали, да.
[03:28:25.720 --> 03:28:27.720]  Вот.
[03:28:47.720 --> 03:28:49.720]  Все-таки сумма не пока меньше g.
[03:28:51.720 --> 03:28:53.720]  Пока меньше g.
[03:28:53.720 --> 03:28:55.720]  А по i больше k.
[03:28:57.720 --> 03:28:59.720]  Ну, в смысле, наоборот,
[03:28:59.720 --> 03:29:01.720]  не k меньше g,
[03:29:01.720 --> 03:29:03.720]  и меньше k,
[03:29:03.720 --> 03:29:05.720]  а наоборот k меньше i,
[03:29:05.720 --> 03:29:07.720]  и g меньше k.
[03:29:07.720 --> 03:29:09.720]  Груще, и и g поменялись.
[03:29:09.720 --> 03:29:11.720]  А.
[03:29:11.720 --> 03:29:13.720]  В таком смысле, нет.
[03:29:13.720 --> 03:29:15.720]  Нет, и меньше, смотрите,
[03:29:15.720 --> 03:29:17.720]  и меньше k взялось отсюда,
[03:29:17.720 --> 03:29:19.720]  потому что я убил g.
[03:29:19.720 --> 03:29:21.720]  Поэтому здесь я пишу и меньше g и k,
[03:29:21.720 --> 03:29:23.720]  здесь я,
[03:29:23.720 --> 03:29:25.720]  а здесь я, наоборот, убил i.
[03:29:25.720 --> 03:29:27.720]  Потому что у меня вот эта слагаемая
[03:29:27.720 --> 03:29:29.720]  от i не зависит.
[03:29:31.720 --> 03:29:33.720]  Вот и все.
[03:29:33.720 --> 03:29:35.720]  Так что вот такие, то есть,
[03:29:35.720 --> 03:29:37.720]  как минимум, это еще такие базовые вещи.
[03:29:37.720 --> 03:29:39.720]  Но, правда,
[03:29:39.720 --> 03:29:41.720]  заметим, что в этих алгоритмах вероятности
[03:29:41.720 --> 03:29:43.720]  она еще такая,
[03:29:43.720 --> 03:29:45.720]  ну, идеенный смысл она дает скорее в константе,
[03:29:45.720 --> 03:29:47.720]  потому что чем это алгоритмы приятны,
[03:29:47.720 --> 03:29:49.720]  они приятны тем, что они там, может быть,
[03:29:49.720 --> 03:29:51.720]  проще пишутся и быстрее работают
[03:29:51.720 --> 03:29:53.720]  на практике.
[03:29:53.720 --> 03:29:55.720]  Правда, минус, есть вероятность, что они работают
[03:29:55.720 --> 03:29:57.720]  плохо, поэтому там, на практике, конечно,
[03:29:57.720 --> 03:29:59.720]  там, например, вы стояли, с одной стороны,
[03:29:59.720 --> 03:30:01.720]  ставят кусок, но пишут там оговорку,
[03:30:01.720 --> 03:30:03.720]  видя, что если там глубина пошла
[03:30:03.720 --> 03:30:05.720]  на два алгоритма, то там,
[03:30:05.720 --> 03:30:07.720]  дошедший до туда кусочек,
[03:30:07.720 --> 03:30:09.720]  мы досортировываем там хипом.
[03:30:09.720 --> 03:30:11.720]  То есть это сделано для того,
[03:30:11.720 --> 03:30:13.720]  чтобы гарантировать, что алгоритм ZNLogin работает.
[03:30:13.720 --> 03:30:15.720]  Вот.
[03:30:15.720 --> 03:30:17.720]  Но, как бы, идея,
[03:30:17.720 --> 03:30:19.720]  то есть практически это, конечно, важно,
[03:30:19.720 --> 03:30:21.720]  но теоретически не очень,
[03:30:21.720 --> 03:30:23.720]  потому что там оба эти штуки
[03:30:23.720 --> 03:30:25.720]  мы умеем реализовывать за указанные симптотики
[03:30:25.720 --> 03:30:27.720]  и в честную.
[03:30:27.720 --> 03:30:29.720]  Но тут появляется
[03:30:29.720 --> 03:30:31.720]  мистическая задача,
[03:30:31.720 --> 03:30:33.720]  которую мы вероятно с тобой
[03:30:33.720 --> 03:30:35.720]  решать за время,
[03:30:35.720 --> 03:30:37.720]  в смысле выточнение которой в принципиально
[03:30:37.720 --> 03:30:39.720]  недостижимо в честную.
[03:30:39.720 --> 03:30:41.720]  Что доказуемо?
[03:30:45.720 --> 03:30:47.720]  Не знаю.
[03:30:53.720 --> 03:30:55.720]  Осталось только придумать,
[03:30:55.720 --> 03:30:57.720]  а как вероятностно сортировать?
[03:30:57.720 --> 03:30:59.720]  Есть, конечно, BogoSort,
[03:30:59.720 --> 03:31:01.720]  да, random shuffle,
[03:31:01.720 --> 03:31:03.720]  проверка сортирования,
[03:31:03.720 --> 03:31:05.720]  и все остальное.
[03:31:05.720 --> 03:31:07.720]  И все остальное.
[03:31:07.720 --> 03:31:09.720]  Да, random shuffle, проверка сортировалась ли,
[03:31:09.720 --> 03:31:11.720]  если нет, повторяем.
[03:31:15.720 --> 03:31:17.720]  Ну, если повезет, то да.
[03:31:19.720 --> 03:31:21.720]  Да.
[03:31:21.720 --> 03:31:23.720]  Ну, это если очень.
[03:31:27.720 --> 03:31:29.720]  Random shuffle, ну, элементарно,
[03:31:29.720 --> 03:31:31.720]  я бы его делал так,
[03:31:31.720 --> 03:31:33.720]  кидаю рандомное число от 1 до N,
[03:31:33.720 --> 03:31:35.720]  получаю число и свапаю,
[03:31:35.720 --> 03:31:37.720]  и это элемент с первым.
[03:31:37.720 --> 03:31:39.720]  Или свапаю и это элемент с последним.
[03:31:39.720 --> 03:31:41.720]  Повторяю, операция на префиксе
[03:31:41.720 --> 03:31:43.720]  N-1. Остается только сгенерить рандомное число.
[03:31:47.720 --> 03:31:49.720]  Потому что, ну, как сказать,
[03:31:49.720 --> 03:31:51.720]  ну, потому что как мы герим перестановку
[03:31:51.720 --> 03:31:53.720]  на последнем месте у нас
[03:31:53.720 --> 03:31:55.720]  по такому алгоритму,
[03:31:55.720 --> 03:31:57.720]  каждый элемент попадает равновероятно.
[03:31:59.720 --> 03:32:01.720]  При фиксированном,
[03:32:01.720 --> 03:32:03.720]  попавшем туда элементе, все остальные попадают
[03:32:03.720 --> 03:32:05.720]  на предпоследнее место тоже равновероятно,
[03:32:05.720 --> 03:32:07.720]  ну и так далее. В принципе, получается
[03:32:07.720 --> 03:32:09.720]  это, может, хорошо, что
[03:32:09.720 --> 03:32:11.720]  каждая конкретная перестановка попадет,
[03:32:11.720 --> 03:32:13.720]  станет рандомшавлом с вероятностью
[03:32:13.720 --> 03:32:15.720]  1 делить на N-факториал.
[03:32:17.720 --> 03:32:19.720]  Ну, по сути, да.
[03:32:21.720 --> 03:32:23.720]  Поэтому, да, тут как раз все
[03:32:23.720 --> 03:32:25.720]  несложно.
[03:32:25.720 --> 03:32:27.720]  Ну, по модулю, то есть, конечно, начинается
[03:32:27.720 --> 03:32:29.720]  главный анализ, конечно, там начинается это,
[03:32:29.720 --> 03:32:31.720]  а как, собственно, генерить рандомные числа?
[03:32:31.720 --> 03:32:33.720]  Ой.
[03:32:33.720 --> 03:32:35.720]  Господи.
[03:32:35.720 --> 03:32:37.720]  Мыли.
[03:32:45.720 --> 03:32:47.720]  Нет, ну почему не понятно.
[03:32:47.720 --> 03:32:49.720]  Классический метод, который, кстати,
[03:32:49.720 --> 03:32:51.720]  который реализован, кстати, даже в,
[03:32:51.720 --> 03:32:53.720]  как это называется, который работает
[03:32:53.720 --> 03:32:55.720]  в тесли, в теслиби-полигоне,
[03:32:55.720 --> 03:32:57.720]  вот если вы там откроете рандом,
[03:32:57.720 --> 03:32:59.720]  а там, кстати, рандом предельно честно написан,
[03:32:59.720 --> 03:33:01.720]  рандом не ссылается,
[03:33:01.720 --> 03:33:03.720]  там внутренний генератор,
[03:33:03.720 --> 03:33:05.720]  он говорит так, то есть,
[03:33:05.720 --> 03:33:07.720]  я умею генерировать там, допустим,
[03:33:07.720 --> 03:33:09.720]  64-битное число,
[03:33:09.720 --> 03:33:11.720]  вот это я умею.
[03:33:11.720 --> 03:33:13.720]  А дальше он говорит так,
[03:33:13.720 --> 03:33:15.720]  ну вот, нет,
[03:33:15.720 --> 03:33:17.720]  дальше он говорит так, что если я хочу генерировать число,
[03:33:17.720 --> 03:33:19.720]  допустим, от 0 до N-1,
[03:33:19.720 --> 03:33:21.720]  то я генерирую рандомное число на 64-бита
[03:33:21.720 --> 03:33:23.720]  и беру его по модулю N.
[03:33:23.720 --> 03:33:25.720]  Но при этом говорю, да,
[03:33:25.720 --> 03:33:27.720]  это неравно вероятно, почему?
[03:33:27.720 --> 03:33:29.720]  Четвертый, скорее всего, не делится на N.
[03:33:29.720 --> 03:33:31.720]  Но это называется наша фирма,
[03:33:31.720 --> 03:33:33.720]  это учла. Фирма говорит,
[03:33:33.720 --> 03:33:35.720]  если этот рандом попал вот в этот вот хвостик
[03:33:35.720 --> 03:33:37.720]  в остаток, то мы просто генерируем
[03:33:37.720 --> 03:33:39.720]  еще раз. И еще раз, пока не попадем.
[03:33:39.720 --> 03:33:41.720]  Там буквально это написано.
[03:33:51.720 --> 03:33:53.720]  Ну да. Самый тупой вариант такой.
[03:33:53.720 --> 03:33:55.720]  Более продвинутый вариант, конечно,
[03:33:55.720 --> 03:33:57.720]  давайте лучше кинем монетку
[03:33:57.720 --> 03:33:59.720]  сразу 10 раз,
[03:33:59.720 --> 03:34:01.720]  тогда у нас получится 1024
[03:34:01.720 --> 03:34:03.720]  исхода.
[03:34:03.720 --> 03:34:05.720]  Если там, скажем,
[03:34:05.720 --> 03:34:07.720]  монетка выпала, допустим, у нас там 10
[03:34:07.720 --> 03:34:09.720]  решек, то перебрасываем. Остальные
[03:34:09.720 --> 03:34:11.720]  1023 исхода, собственно,
[03:34:11.720 --> 03:34:13.720]  делим на 3.
[03:34:13.720 --> 03:34:15.720]  Вы уверены, что это более продвинутый
[03:34:15.720 --> 03:34:17.720]  вариант? Это более сложный?
[03:34:17.720 --> 03:34:19.720]  Это под множество моего варианта.
[03:34:19.720 --> 03:34:21.720]  В случае, когда нам действительно выпало 10.
[03:34:21.720 --> 03:34:23.720]  Формально, чтобы на это ответить, надо тогда посчитать
[03:34:23.720 --> 03:34:25.720]  просто о каком от ожидания
[03:34:25.720 --> 03:34:27.720]  количества итераций, которые
[03:34:27.720 --> 03:34:29.720]  мы сделаем.
[03:34:29.720 --> 03:34:31.720]  Мой алгоритм
[03:34:31.720 --> 03:34:33.720]  падает, когда мы хотя бы
[03:34:33.720 --> 03:34:35.720]  один раз сгенерировали...
[03:34:35.720 --> 03:34:37.720]  Если мы сгенерировали ноль, то он завершается.
[03:34:37.720 --> 03:34:39.720]  Ваш алгоритм завершается
[03:34:39.720 --> 03:34:41.720]  не когда мы сгенерировали ноль.
[03:34:41.720 --> 03:34:43.720]  Сгенерировали ноль, и еще там поделали до 10.
[03:34:43.720 --> 03:34:45.720]  Не, парадит, мой алгоритм парадит.
[03:34:45.720 --> 03:34:47.720]  Я его понимаю так. Мы кидаем монетку
[03:34:47.720 --> 03:34:49.720]  два раза. Если там 2 единицы,
[03:34:49.720 --> 03:34:51.720]  то перебрасываем,
[03:34:51.720 --> 03:34:53.720]  в любом ином случае выиграли.
[03:34:53.720 --> 03:34:55.720]  Получается, мы перебрасываем
[03:34:55.720 --> 03:34:57.720]  с вероятностью 1 четверть.
[03:34:57.720 --> 03:34:59.720]  Вот.
[03:34:59.720 --> 03:35:01.720]  Тогда получается...
[03:35:01.720 --> 03:35:03.720]  Я бросаю, но в важном
[03:35:03.720 --> 03:35:05.720]  ожидании количества.
[03:35:05.720 --> 03:35:07.720]  У вас гарантировано 10 бросков
[03:35:07.720 --> 03:35:09.720]  будет всегда. У меня
[03:35:09.720 --> 03:35:11.720]  почти никогда не будет 10.
[03:35:11.720 --> 03:35:13.720]  У тебя...
[03:35:13.720 --> 03:35:15.720]  Давайте так.
[03:35:15.720 --> 03:35:17.720]  Во-первых, давайте
[03:35:17.720 --> 03:35:19.720]  сразу это проделаем,
[03:35:19.720 --> 03:35:21.720]  чтобы в будущем нам это пригодится.
[03:35:21.720 --> 03:35:23.720]  У нас есть классическая
[03:35:23.720 --> 03:35:25.720]  ситуация. У нас есть монетка,
[03:35:25.720 --> 03:35:27.720]  которая выпадает с вероятостью P.
[03:35:27.720 --> 03:35:29.720]  И не выпадает с вероятостью
[03:35:29.720 --> 03:35:31.720]  1 минус P. Такая типичная ситуация.
[03:35:31.720 --> 03:35:33.720]  Так вот.
[03:35:33.720 --> 03:35:35.720]  У нас такая идея. У нас будет такая случайная
[03:35:35.720 --> 03:35:37.720]  величина. Я буду китать монетку, пока она
[03:35:37.720 --> 03:35:39.720]  не выпадет. Внимание,
[03:35:39.720 --> 03:35:41.720]  вопрос. Сколько раз?
[03:35:41.720 --> 03:35:43.720]  И будет случайная величина. Сколько раз мне пришлось
[03:35:43.720 --> 03:35:45.720]  кинуть ее, чтобы это произошло?
[03:35:45.720 --> 03:35:47.720]  Е равняется
[03:35:47.720 --> 03:35:49.720]  П. Вот.
[03:35:49.720 --> 03:35:51.720]  Давайте проделаем это.
[03:35:51.720 --> 03:35:53.720]  Распределение даже как-то
[03:35:53.720 --> 03:35:55.720]  называется. Отрицательное биномиальное
[03:35:55.720 --> 03:35:57.720]  или что-то в этом роде.
[03:35:57.720 --> 03:35:59.720]  То, что Ваня говорит, это очень корректно.
[03:35:59.720 --> 03:36:01.720]  То, что E равняется П
[03:36:01.720 --> 03:36:03.720]  на 1 минус. Давайте так. Смотрите.
[03:36:03.720 --> 03:36:05.720]  Мат ожидания этой величины,
[03:36:05.720 --> 03:36:07.720]  по-моему, это
[03:36:07.720 --> 03:36:09.720]  величины,
[03:36:09.720 --> 03:36:11.720]  кси, назовемую
[03:36:11.720 --> 03:36:13.720]  кси от P.
[03:36:13.720 --> 03:36:15.720]  Оно равно
[03:36:15.720 --> 03:36:17.720]  С вероятностью P, оно будет
[03:36:17.720 --> 03:36:19.720]  случайная величина, будет 1.
[03:36:19.720 --> 03:36:21.720]  С вероятностью
[03:36:21.720 --> 03:36:23.720]  1 минус P умножить на P,
[03:36:23.720 --> 03:36:25.720]  оно равно 2.
[03:36:25.720 --> 03:36:27.720]  С вероятностью 1 минус P в квадрате
[03:36:27.720 --> 03:36:29.720]  на P, она
[03:36:29.720 --> 03:36:31.720]  равна 3.
[03:36:31.720 --> 03:36:33.720]  Так, это понятно, откуда я это беру
[03:36:33.720 --> 03:36:35.720]  вообще?
[03:36:35.720 --> 03:36:37.720]  Я просто предельно
[03:36:37.720 --> 03:36:39.720]  в тупую пишу.
[03:36:39.720 --> 03:36:41.720]  Плюс и так далее.
[03:36:41.720 --> 03:36:43.720]  Через что?
[03:36:43.720 --> 03:36:45.720]  П плюс и так далее.
[03:36:45.720 --> 03:36:47.720]  П минус 1.
[03:36:47.720 --> 03:36:49.720]  Зачем это делать?
[03:36:49.720 --> 03:36:51.720]  П на 1 минус П на
[03:36:51.720 --> 03:36:53.720]  И равно от нуля
[03:36:53.720 --> 03:36:55.720]  до бесконечности.
[03:36:55.720 --> 03:36:57.720]  В плане стандарта, чтобы что?
[03:36:57.720 --> 03:36:59.720]  Значит, 1 минус П в степени И.
[03:36:59.720 --> 03:37:01.720]  Откуда 1 минус П?
[03:37:01.720 --> 03:37:03.720]  Хотя ладно, не надо так делать.
[03:37:03.720 --> 03:37:05.720]  Давайте вот так сделаем.
[03:37:05.720 --> 03:37:07.720]  От И минус П? Да.
[03:37:07.720 --> 03:37:09.720]  Вот. То есть вот такую штуку
[03:37:09.720 --> 03:37:11.720]  мы неожиданно суммируем.
[03:37:11.720 --> 03:37:13.720]  Это можно просто
[03:37:13.720 --> 03:37:15.720]  проинтрируем. Какая-то лажа.
[03:37:15.720 --> 03:37:17.720]  Да.
[03:37:17.720 --> 03:37:19.720]  В степени должно быть
[03:37:19.720 --> 03:37:21.720]  и минус 1, кажется.
[03:37:21.720 --> 03:37:23.720]  Да.
[03:37:23.720 --> 03:37:25.720]  Пожалуйста.
[03:37:25.720 --> 03:37:27.720]  Пожалуйста, хорошо.
[03:37:27.720 --> 03:37:29.720]  И заметим, что это просто
[03:37:29.720 --> 03:37:31.720]  производная
[03:37:31.720 --> 03:37:33.720]  формальная. Так, это да.
[03:37:33.720 --> 03:37:35.720]  Ну да, это да.
[03:37:35.720 --> 03:37:37.720]  Ну да, это да.
[03:37:37.720 --> 03:37:39.720]  Это формула для дискретной величины,
[03:37:39.720 --> 03:37:41.720]  которая принимает не отрицательное значение.
[03:37:41.720 --> 03:37:43.720]  Вероятность того, что больше
[03:37:43.720 --> 03:37:45.720]  броно, чем М, вероятность того,
[03:37:45.720 --> 03:37:47.720]  что больше броно, чем М.
[03:37:47.720 --> 03:37:49.720]  И то он нам нужно просто предъявить этой штуке.
[03:37:49.720 --> 03:37:51.720]  Предъявить нот. Нет, нот уже остался только выяснить,
[03:37:51.720 --> 03:37:53.720]  чему он равен.
[03:37:53.720 --> 03:37:55.720]  Ну, ноль.
[03:37:55.720 --> 03:37:57.720]  Минус. Чёрт, какой ноль.
[03:37:57.720 --> 03:37:59.720]  Нет, нет, нет.
[03:37:59.720 --> 03:38:01.720]  Подождите, тут же можно как бы
[03:38:01.720 --> 03:38:03.720]  два раза суммировать.
[03:38:03.720 --> 03:38:05.720]  Давайте вот.
[03:38:05.720 --> 03:38:07.720]  Смотрите, у нас один бросок будет точно.
[03:38:07.720 --> 03:38:09.720]  Два броска будут с вероятностью
[03:38:09.720 --> 03:38:11.720]  1 минус П.
[03:38:11.720 --> 03:38:13.720]  Три броска будут с вероятностью 1 минус П в квадрате.
[03:38:13.720 --> 03:38:15.720]  Ну хотя бы, да. Да, и что?
[03:38:15.720 --> 03:38:17.720]  Ну вот. Слушайте, а почему
[03:38:17.720 --> 03:38:19.720]  я не могу понять, почему нельзя
[03:38:19.720 --> 03:38:21.720]  написать, что E равняется
[03:38:21.720 --> 03:38:23.720]  P плюс 1 минус П
[03:38:23.720 --> 03:38:25.720]  умножить на E плюс 1?
[03:38:25.720 --> 03:38:27.720]  А почему это правильно?
[03:38:29.720 --> 03:38:31.720]  Потому что мы заметим,
[03:38:31.720 --> 03:38:33.720]  что этот ряд точно
[03:38:33.720 --> 03:38:35.720]  сходится. А если он
[03:38:35.720 --> 03:38:37.720]  сходится, то то, что я написал,
[03:38:37.720 --> 03:38:39.720]  это надежда.
[03:38:39.720 --> 03:38:41.720]  Ну скажем так, видел, потому что
[03:38:41.720 --> 03:38:43.720]  это абсолютно сходящийся ряд, и мы
[03:38:43.720 --> 03:38:45.720]  суммируем по всем, всем, всем, всем возможным
[03:38:45.720 --> 03:38:47.720]  исходам.
[03:38:51.720 --> 03:38:53.720]  Ну конечно, да.
[03:38:53.720 --> 03:38:55.720]  Ну вот, да. То есть на самом деле, да, самое
[03:38:55.720 --> 03:38:57.720]  крутое, что тут можно написать, что это по-любому
[03:38:57.720 --> 03:38:59.720]  равно на
[03:38:59.720 --> 03:39:01.720]  то есть это
[03:39:01.720 --> 03:39:03.720]  равно, то есть равно
[03:39:03.720 --> 03:39:05.720]  П умножить на 1 плюс
[03:39:05.720 --> 03:39:07.720]  1 минус П на, соответственно,
[03:39:07.720 --> 03:39:09.720]  1 плюс E.
[03:39:09.720 --> 03:39:11.720]  Да.
[03:39:11.720 --> 03:39:13.720]  Да, это равно
[03:39:13.720 --> 03:39:15.720]  на самом деле 1
[03:39:15.720 --> 03:39:17.720]  плюс 1 минус
[03:39:17.720 --> 03:39:19.720]  П на
[03:39:19.720 --> 03:39:21.720]  Эпсилон Кси. Ну отсюда следует, на самом деле,
[03:39:21.720 --> 03:39:23.720]  приятная вещь, что Эпсилон Кси
[03:39:23.720 --> 03:39:25.720]  равно 1 делить на П.
[03:39:33.720 --> 03:39:35.720]  Вот.
[03:39:35.720 --> 03:39:37.720]  То есть количество
[03:39:37.720 --> 03:39:39.720]  ритораций, которые мы сделаем,
[03:39:39.720 --> 03:39:41.720]  если собирать с того, что нам будет хорошая
[03:39:41.720 --> 03:39:43.720]  она 1 делить на П. То есть получается,
[03:39:43.720 --> 03:39:45.720]  если ты кидаешь вот эти две монетки,
[03:39:45.720 --> 03:39:47.720]  то П у нас равно 3 четверти.
[03:39:47.720 --> 03:39:49.720]  То есть следует,
[03:39:49.720 --> 03:39:51.720]  в твоем случае тогда получается, что
[03:39:51.720 --> 03:39:53.720]  от ожидания, видимо, общего числа бросков
[03:39:53.720 --> 03:39:55.720]  монеток будет 2 умножить на 4 треть.
[03:39:57.720 --> 03:39:59.720]  Так, что будет у меня?
[03:39:59.720 --> 03:40:01.720]  У меня будет 10
[03:40:01.720 --> 03:40:03.720]  Нет.
[03:40:03.720 --> 03:40:05.720]  Если бы.
[03:40:05.720 --> 03:40:07.720]  Нет.
[03:40:07.720 --> 03:40:09.720]  Еще плюс какой-то.
[03:40:09.720 --> 03:40:11.720]  Нет, не совсем. Вероятность того,
[03:40:11.720 --> 03:40:13.720]  что мне повезет,
[03:40:13.720 --> 03:40:15.720]  она у меня 1024
[03:40:15.720 --> 03:40:17.720]  поделить на 1023.
[03:40:19.720 --> 03:40:21.720]  Вот.
[03:40:21.720 --> 03:40:23.720]  Ну да, 8 третьих меньше,
[03:40:23.720 --> 03:40:25.720]  чем 10 умножить на что-то больше единицы,
[03:40:25.720 --> 03:40:27.720]  это правда.
[03:40:27.720 --> 03:40:29.720]  Но на самом деле надо задуматься.
[03:40:29.720 --> 03:40:31.720]  Нет, даже интересно, а если
[03:40:31.720 --> 03:40:33.720]  3 возьму, что будет?
[03:40:33.720 --> 03:40:35.720]  А, не поможет 8 третьих, да.
[03:40:35.720 --> 03:40:37.720]  Ну ладно.
[03:40:37.720 --> 03:40:39.720]  Нет, ну просто мой алгоритм,
[03:40:39.720 --> 03:40:41.720]  это ваш алгоритм, но
[03:40:41.720 --> 03:40:43.720]  я еще, я обрубаюсь раньше,
[03:40:43.720 --> 03:40:45.720]  то есть вы обрубаетесь,
[03:40:45.720 --> 03:40:47.720]  вот у меня выпал 0,
[03:40:47.720 --> 03:40:49.720]  я сразу обрубаюсь, а вы обрубаетесь
[03:40:49.720 --> 03:40:51.720]  еще спустя какой-то количестве шагов,
[03:40:51.720 --> 03:40:53.720]  чтобы дополнить до десятки.
[03:40:55.720 --> 03:40:57.720]  Возможно, да.
[03:40:57.720 --> 03:40:59.720]  Ну окей, ладно.
[03:40:59.720 --> 03:41:01.720]  Ладно, копать не буду.
[03:41:01.720 --> 03:41:03.720]  Хорошо?
[03:41:03.720 --> 03:41:05.720]  В любом случае, ладно, это запомнили,
[03:41:05.720 --> 03:41:07.720]  это нам пригодится. Еще.
[03:41:07.720 --> 03:41:09.720]  Чтобы потом не пересчитывать.
[03:41:09.720 --> 03:41:11.720]  Значит, давайте.
[03:41:11.720 --> 03:41:13.720]  Но,
[03:41:13.720 --> 03:41:15.720]  правда,
[03:41:15.720 --> 03:41:17.720]  в следующие задачи на самом деле
[03:41:17.720 --> 03:41:19.720]  это нам не понадобится,
[03:41:19.720 --> 03:41:21.720]  но задача будет эпическая.
[03:41:21.720 --> 03:41:23.720]  Задача называется
[03:41:23.720 --> 03:41:25.720]  random3gameeval.
[03:41:27.720 --> 03:41:29.720]  Чего?
[03:41:29.720 --> 03:41:32.720]  Random3gameeval.
[03:41:32.720 --> 03:41:34.720]  Evaluation.
[03:41:34.720 --> 03:41:36.720]  Короче, задача такая.
[03:41:36.720 --> 03:41:38.720]  Потому что у вас есть
[03:41:38.720 --> 03:41:40.720]  интеллектуальная игра.
[03:41:40.720 --> 03:41:42.720]  Езино.
[03:41:42.720 --> 03:41:44.720]  Нет, ну может и корено.
[03:41:44.720 --> 03:41:46.720]  Если бы, нет, все гораздо проще.
[03:41:46.720 --> 03:41:48.720]  Грают два игрока.
[03:41:48.720 --> 03:41:50.720]  Если бы.
[03:41:50.720 --> 03:41:52.720]  Семь канат, да.
[03:41:52.720 --> 03:41:54.720]  Где канат девятка, да-да-да.
[03:41:54.720 --> 03:41:56.720]  Хватит фуксловить ворон, где не пойму,
[03:41:56.720 --> 03:41:58.720]  где взятка, да-да-да, мы помним.
[03:41:58.720 --> 03:42:00.720]  Вот.
[03:42:00.720 --> 03:42:02.720]  Подтяните даму пик, короля направо, да.
[03:42:02.720 --> 03:42:04.720]  Ну, а как, надо же как-то матроса
[03:42:04.720 --> 03:42:06.720]  учить это морскому делу, действительно.
[03:42:06.720 --> 03:42:08.720]  Вот.
[03:42:08.720 --> 03:42:10.720]  Так вот, задача такая.
[03:42:10.720 --> 03:42:12.720]  У вас есть интеллектуальное, у вас есть двоичное дерево
[03:42:12.720 --> 03:42:14.720]  высоты 2n.
[03:42:16.720 --> 03:42:18.720]  Изначально фишка находится в корне,
[03:42:18.720 --> 03:42:20.720]  играют два игрока.
[03:42:20.720 --> 03:42:22.720]  На каждом шаге игрок двигает фишку
[03:42:22.720 --> 03:42:24.720]  в левую или вправую ребенка.
[03:42:24.720 --> 03:42:26.720]  После того, как они сделают pn ходов,
[03:42:26.720 --> 03:42:28.720]  они попадут в какой-то
[03:42:28.720 --> 03:42:30.720]  лист.
[03:42:30.720 --> 03:42:32.720]  И в этом листе будет написано,
[03:42:32.720 --> 03:42:34.720]  кто выиграл.
[03:42:34.720 --> 03:42:36.720]  Первый или второй.
[03:42:38.720 --> 03:42:40.720]  Какой-то альфа-бета отсечение.
[03:42:40.720 --> 03:42:42.720]  Скажем так, это...
[03:42:42.720 --> 03:42:44.720]  Скажем так, это...
[03:42:44.720 --> 03:42:46.720]  Это одна из простых версий альфы-бета отсечения.
[03:42:46.720 --> 03:42:48.720]  И сейчас я на этом простом примере
[03:42:48.720 --> 03:42:50.720]  прошу, почему альфа-бета отсечение
[03:42:50.720 --> 03:42:52.720]  это эффективно.
[03:42:52.720 --> 03:42:54.720]  В самом деле.
[03:42:56.720 --> 03:42:58.720]  В чем фишка?
[03:42:58.720 --> 03:43:00.720]  Идеальное решение детерминированное
[03:43:00.720 --> 03:43:02.720]  подозревает, что давайте возьмем
[03:43:02.720 --> 03:43:04.720]  честную динамику на этом дереве,
[03:43:04.720 --> 03:43:06.720]  запишем, и все.
[03:43:06.720 --> 03:43:08.720]  Это будет работать за от 4 степени.
[03:43:10.720 --> 03:43:12.720]  Казалось бы, быстрее нельзя,
[03:43:12.720 --> 03:43:14.720]  потому что надо просто дерево сочетать.
[03:43:16.720 --> 03:43:18.720]  Но теперь попробуем от этого избавиться.
[03:43:18.720 --> 03:43:20.720]  Для этого скажем, что у нас не дано дерево.
[03:43:20.720 --> 03:43:22.720]  Все дерево большое.
[03:43:22.720 --> 03:43:24.720]  Но у нас есть неожиданное
[03:43:24.720 --> 03:43:26.720]  требование.
[03:43:26.720 --> 03:43:28.720]  У нас есть какой-то
[03:43:28.720 --> 03:43:30.720]  неожиданный черный ящик,
[03:43:30.720 --> 03:43:32.720]  более известный как оракул, который, если мы
[03:43:32.720 --> 03:43:34.720]  тыкнем в лист, он нам скажет, кто в нем выиграет.
[03:43:36.720 --> 03:43:38.720]  Да, типа интерактивки.
[03:43:38.720 --> 03:43:40.720]  И при этом, желательно, да, нам
[03:43:40.720 --> 03:43:42.720]  гарантируется, что тесты там статические.
[03:43:42.720 --> 03:43:44.720]  Говоря на языке полигона.
[03:43:44.720 --> 03:43:46.720]  Не адаптивный интеракт.
[03:43:46.720 --> 03:43:48.720]  Да, именно так.
[03:43:48.720 --> 03:43:50.720]  То есть там гарантируется, что сначала
[03:43:50.720 --> 03:43:52.720]  все сгенерено, и поэтому
[03:43:52.720 --> 03:43:54.720]  интерактор никак не подгоняется.
[03:44:04.720 --> 03:44:06.720]  Вот как-то так.
[03:44:10.720 --> 03:44:12.720]  Вот такая вот красота.
[03:44:18.720 --> 03:44:20.720]  Казалось бы, чем нам
[03:44:20.720 --> 03:44:22.720]  может помочь
[03:44:22.720 --> 03:44:24.720]  рандом?
[03:44:24.720 --> 03:44:26.720]  При таком
[03:44:26.720 --> 03:44:28.720]  интеракторе.
[03:44:28.720 --> 03:44:30.720]  Ну, помочь может нам так.
[03:44:30.720 --> 03:44:32.720]  Смотрите, идея такая.
[03:44:32.720 --> 03:44:34.720]  Как мы должны в вершине
[03:44:34.720 --> 03:44:36.720]  понимать, кто в ней выиграет?
[03:44:36.720 --> 03:44:38.720]  Первый игрок или второй?
[03:44:38.720 --> 03:44:40.720]  Ну, предположим, что ходит в ней
[03:44:40.720 --> 03:44:42.720]  первый игрок, да?
[03:44:42.720 --> 03:44:44.720]  Ну, нам нужно,
[03:44:44.720 --> 03:44:46.720]  мы пойдем влево ребенка выясним,
[03:44:46.720 --> 03:44:48.720]  кто там выигрывает, и пойдем в правого ребенка
[03:44:48.720 --> 03:44:50.720]  и выясним, кто там выиграет, правда?
[03:44:50.720 --> 03:44:52.720]  И потом,
[03:44:52.720 --> 03:44:54.720]  если в обоих выигрывает
[03:44:54.720 --> 03:44:56.720]  противник, значит и тут
[03:44:56.720 --> 03:44:58.720]  выиграет противник, а если
[03:44:58.720 --> 03:45:00.720]  хотя бы в одном из этих
[03:45:00.720 --> 03:45:02.720]  вершин выиграет первый игрок, то значит
[03:45:02.720 --> 03:45:04.720]  у нас и вообще победил первый игрок,
[03:45:04.720 --> 03:45:06.720]  правда?
[03:45:08.720 --> 03:45:10.720]  Вот у меня возникает неожиданная идея.
[03:45:10.720 --> 03:45:12.720]  Теперь заметим следующее.
[03:45:12.720 --> 03:45:14.720]  Если мы пойдем в какого-то ребенка и выясним,
[03:45:14.720 --> 03:45:16.720]  что там выигрывает первый игрок, то во второго
[03:45:16.720 --> 03:45:18.720]  мы в принципе уже идти не обязаны.
[03:45:18.720 --> 03:45:20.720]  Потому что результат мы и так
[03:45:20.720 --> 03:45:22.720]  в принципе знаем.
[03:45:22.720 --> 03:45:24.720]  Поэтому возникает идея.
[03:45:24.720 --> 03:45:26.720]  А давайте идти не просто
[03:45:26.720 --> 03:45:28.720]  там сначала влево, потом вправо.
[03:45:28.720 --> 03:45:30.720]  То есть мы пойдем сначала в одного, потом в другого.
[03:45:30.720 --> 03:45:32.720]  Но
[03:45:32.720 --> 03:45:34.720]  в каком мы будем идти? Мы будем
[03:45:34.720 --> 03:45:36.720]  выбирать броском монетки.
[03:45:36.720 --> 03:45:38.720]  То есть вероятно, что одна-вторая мы пойдем
[03:45:38.720 --> 03:45:40.720]  либо влево, либо вправо.
[03:45:44.720 --> 03:45:46.720]  И теперь нам жутко интересно.
[03:45:48.720 --> 03:45:50.720]  То есть жутко
[03:45:50.720 --> 03:45:52.720]  интересно мат ожидания
[03:45:52.720 --> 03:45:54.720]  количества листов, которые
[03:45:54.720 --> 03:45:56.720]  мы запросим.
[03:45:58.720 --> 03:46:00.720]  Понимаете, да?
[03:46:00.720 --> 03:46:02.720]  Или что
[03:46:02.720 --> 03:46:04.720]  то же самое, в общем-то,
[03:46:04.720 --> 03:46:06.720]  более точно может быть, мат ожидания
[03:46:06.720 --> 03:46:08.720]  количества вершин, относительно которых мы
[03:46:08.720 --> 03:46:10.720]  запустимся рекурсивно.
[03:46:10.720 --> 03:46:12.720]  Это какое-то
[03:46:12.720 --> 03:46:14.720]  жутко интересное.
[03:46:14.720 --> 03:46:16.720]  Почему?
[03:46:16.720 --> 03:46:18.720]  Что такое мат ожидания, мат ожидания?
[03:46:18.720 --> 03:46:20.720]  В смысле у нас при
[03:46:20.720 --> 03:46:22.720]  фиксированных листьях?
[03:46:22.720 --> 03:46:24.720]  Ну да.
[03:46:24.720 --> 03:46:26.720]  Смотрите, да, листья
[03:46:26.720 --> 03:46:28.720]  фиксированы.
[03:46:28.720 --> 03:46:30.720]  То есть у нас
[03:46:30.720 --> 03:46:32.720]  не будет такого, что если
[03:46:32.720 --> 03:46:34.720]  перебрать все варианты
[03:46:34.720 --> 03:46:36.720]  листов и посмотреть в среднем,
[03:46:36.720 --> 03:46:38.720]  то получится хорошо. Нет, такого у нас не будет.
[03:46:38.720 --> 03:46:40.720]  У нас будет
[03:46:40.720 --> 03:46:42.720]  смотрите, то есть у нас листья будут фиксированы.
[03:46:42.720 --> 03:46:44.720]  То есть мат ожидания,
[03:46:44.720 --> 03:46:46.720]  то есть это будет случайная величина, которая будет зависеть
[03:46:46.720 --> 03:46:48.720]  только от того рандома,
[03:46:48.720 --> 03:46:50.720]  то есть рандом ей будет только тот, который мы сгенерим.
[03:46:50.720 --> 03:46:52.720]  Это же может быть
[03:46:52.720 --> 03:46:54.720]  сильно разное при разных листьях.
[03:46:54.720 --> 03:46:56.720]  Да, но
[03:46:56.720 --> 03:46:58.720]  может быть разное, но мы хотим показать,
[03:46:58.720 --> 03:47:00.720]  что при любых листьях
[03:47:00.720 --> 03:47:02.720]  мат ожидания не превосходит
[03:47:02.720 --> 03:47:04.720]  чего-то хорошего.
[03:47:06.720 --> 03:47:08.720]  Но давайте подумаем, чего
[03:47:08.720 --> 03:47:10.720]  оно может не превосходить.
[03:47:10.720 --> 03:47:12.720]  То есть давайте посчитаем. Мат ожидания даже не количество листьев,
[03:47:12.720 --> 03:47:14.720]  а количество в целом вершин, с которыми
[03:47:14.720 --> 03:47:16.720]  мы будем работать.
[03:47:16.720 --> 03:47:18.720]  Вот находимся мы в какой-то вершине
[03:47:18.720 --> 03:47:20.720]  на высоте 2n.
[03:47:20.720 --> 03:47:22.720]  Да?
[03:47:22.720 --> 03:47:24.720]  Тогда смотрите.
[03:47:26.720 --> 03:47:28.720]  Скажем вот что.
[03:47:28.720 --> 03:47:30.720]  Если предположим, что она
[03:47:30.720 --> 03:47:32.720]  выигрышная, да?
[03:47:32.720 --> 03:47:34.720]  Тогда заметим,
[03:47:34.720 --> 03:47:36.720]  что с вероятностью 1,2
[03:47:36.720 --> 03:47:38.720]  я из этой вершины сделаю только один
[03:47:38.720 --> 03:47:40.720]  рекурсивный вызов. Правда?
[03:47:40.720 --> 03:47:42.720]  Понимаете, да?
[03:47:42.720 --> 03:47:44.720]  Если она выигрышная,
[03:47:44.720 --> 03:47:46.720]  то у нее есть проигрышный сын.
[03:47:46.720 --> 03:47:48.720]  Да. Если вероятностью 1,2, мы сразу
[03:47:48.720 --> 03:47:50.720]  в него и попадем.
[03:47:50.720 --> 03:47:52.720]  Да.
[03:47:52.720 --> 03:47:54.720]  Ну, в худшем, да. То есть хотя бы с вероятностью 1,2,
[03:47:54.720 --> 03:47:56.720]  мы просто за один рекурсивный вызов это узнаем.
[03:47:56.720 --> 03:47:58.720]  Правда?
[03:47:58.720 --> 03:48:00.720]  Вот. Но я буду...
[03:48:02.720 --> 03:48:04.720]  Так что...
[03:48:04.720 --> 03:48:06.720]  То есть получается, что
[03:48:06.720 --> 03:48:08.720]  так сказать, среднее время
[03:48:08.720 --> 03:48:10.720]  t, ну я буду подозревать, что это среднее,
[03:48:10.720 --> 03:48:12.720]  от 2n, то есть
[03:48:12.720 --> 03:48:14.720]  если она выигрышная, да?
[03:48:14.720 --> 03:48:16.720]  t там
[03:48:16.720 --> 03:48:18.720]  для выигрышной вершины.
[03:48:18.720 --> 03:48:20.720]  Это...
[03:48:20.720 --> 03:48:22.720]  Вот.
[03:48:22.720 --> 03:48:24.720]  Оно не превосходит к чего?
[03:48:24.720 --> 03:48:26.720]  То есть, что
[03:48:26.720 --> 03:48:28.720]  с вероятностью 1,2, это будет
[03:48:28.720 --> 03:48:30.720]  просто t проигрышная от 2n-1
[03:48:30.720 --> 03:48:32.720]  условно.
[03:48:32.720 --> 03:48:34.720]  Плюс. И с вероятностью
[03:48:34.720 --> 03:48:36.720]  1,2 придется с двумя вершинами
[03:48:36.720 --> 03:48:38.720]  поработать.
[03:48:38.720 --> 03:48:40.720]  Вот.
[03:48:40.720 --> 03:48:42.720]  То есть 1,2 умножить
[03:48:42.720 --> 03:48:44.720]  на 2 максимума
[03:48:44.720 --> 03:48:46.720]  из там...
[03:48:46.720 --> 03:48:48.720]  Не максимума. У нас тогда
[03:48:48.720 --> 03:48:50.720]  гарантированно нижняя будет выигрывающая,
[03:48:50.720 --> 03:48:52.720]  а вторая проигрывающая.
[03:48:52.720 --> 03:48:54.720]  Это просто плюс. Ну хорошо.
[03:48:54.720 --> 03:48:56.720]  1,2 тогда будет так, давайте.
[03:48:56.720 --> 03:48:58.720]  tv от 2n-1.
[03:48:58.720 --> 03:49:00.720]  Одна из них будет точно
[03:49:00.720 --> 03:49:02.720]  проигрышная. 2n-1.
[03:49:02.720 --> 03:49:04.720]  Плюс.
[03:49:04.720 --> 03:49:06.720]  А вторая...
[03:49:06.720 --> 03:49:08.720]  Иначе бы мы
[03:49:08.720 --> 03:49:10.720]  не запустили второй раз.
[03:49:10.720 --> 03:49:12.720]  Да, хорошо. Уговорили, уговорили.
[03:49:18.720 --> 03:49:20.720]  Ну, потому что забираю вперед, я захочу
[03:49:20.720 --> 03:49:22.720]  смотреть не на один уровень вперед, а на два.
[03:49:24.720 --> 03:49:26.720]  Вот.
[03:49:26.720 --> 03:49:28.720]  А теперь смотрите.
[03:49:28.720 --> 03:49:30.720]  А теперь что делать, если
[03:49:30.720 --> 03:49:32.720]  это проигрышное?
[03:49:32.720 --> 03:49:34.720]  Это когда дерево немножко напоминается.
[03:49:34.720 --> 03:49:36.720]  Да?
[03:49:36.720 --> 03:49:38.720]  Ну там было жестче, да, у меня тоже флешбейт.
[03:49:38.720 --> 03:49:40.720]  Ну не знаю, странно, у меня
[03:49:40.720 --> 03:49:42.720]  что-то нет в ситуации. Ну ладно.
[03:49:42.720 --> 03:49:44.720]  Значит, tp от 2n. Это что такое?
[03:49:46.720 --> 03:49:48.720]  Ну это конечно
[03:49:48.720 --> 03:49:50.720]  2tv от 2n-1.
[03:49:50.720 --> 03:49:52.720]  Логично, да?
[03:49:52.720 --> 03:49:54.720]  Ну правда, тут надо
[03:49:54.720 --> 03:49:56.720]  формально нагреть, что
[03:49:56.720 --> 03:49:58.720]  tv и tp это какие-то верхние оценки.
[03:49:58.720 --> 03:50:00.720]  Потому что, как вы правильно
[03:50:00.720 --> 03:50:02.720]  заметили, конкретные значения
[03:50:02.720 --> 03:50:04.720]  tv и tp зависят от конкретной
[03:50:04.720 --> 03:50:06.720]  вершины, от конкретных детей, которые у нее там есть.
[03:50:08.720 --> 03:50:10.720]  Поэтому на самом деле,
[03:50:10.720 --> 03:50:12.720]  формально, конечно, это мы такие...
[03:50:12.720 --> 03:50:14.720]  То есть приблизительно пишем,
[03:50:14.720 --> 03:50:16.720]  чтобы довести до формального доказательства,
[03:50:16.720 --> 03:50:18.720]  придется доказывать, что для любой
[03:50:18.720 --> 03:50:20.720]  вершины, ее мотожидание не превосходит
[03:50:20.720 --> 03:50:22.720]  вот этого вот, и там уже прописывать.
[03:50:22.720 --> 03:50:24.720]  Так что вот.
[03:50:24.720 --> 03:50:26.720]  Идея на это понятна, но
[03:50:26.720 --> 03:50:28.720]  формально поговорить стоит.
[03:50:30.720 --> 03:50:32.720]  Так или не понятно, о чем я?
[03:50:34.720 --> 03:50:36.720]  Вот. Так, Миша, а вот ты живой?
[03:50:38.720 --> 03:50:40.720]  Кто здесь?
[03:50:40.720 --> 03:50:42.720]  Ты на лекции.
[03:50:42.720 --> 03:50:44.720]  Ну вот.
[03:50:44.720 --> 03:50:46.720]  Так вот.
[03:50:46.720 --> 03:50:48.720]  А, я еще забыл.
[03:50:48.720 --> 03:50:50.720]  Еще надо плюс один написать.
[03:50:52.720 --> 03:50:54.720]  А то нули получится.
[03:50:56.720 --> 03:50:58.720]  Ну вот.
[03:50:58.720 --> 03:51:00.720]  Так вот.
[03:51:00.720 --> 03:51:02.720]  Но теперь заметим следующее.
[03:51:02.720 --> 03:51:04.720]  Так, внимание, теперь смотрите.
[03:51:04.720 --> 03:51:06.720]  tv от 2n-1.
[03:51:06.720 --> 03:51:08.720]  Вот. Ну ладно, не превосходит.
[03:51:08.720 --> 03:51:10.720]  Потому что имеем в виду, что это верхние
[03:51:10.720 --> 03:51:12.720]  оценки.
[03:51:12.720 --> 03:51:14.720]  Но tv я тоже могу расписать.
[03:51:14.720 --> 03:51:16.720]  Да, вот это...
[03:51:16.720 --> 03:51:18.720]  Ну у нас...
[03:51:18.720 --> 03:51:20.720]  Да, ну типа
[03:51:20.720 --> 03:51:22.720]  мы там оценивали, мы
[03:51:22.720 --> 03:51:24.720]  вводили несколько разных.
[03:51:24.720 --> 03:51:26.720]  Мы сначала отсекали верхний, потом
[03:51:26.720 --> 03:51:28.720]  нижний, потом квадратик.
[03:51:28.720 --> 03:51:30.720]  А потом мы на квадратик уже писали оценку,
[03:51:30.720 --> 03:51:32.720]  что он хороший.
[03:51:32.720 --> 03:51:34.720]  А то это вообще не сравнилось.
[03:51:34.720 --> 03:51:36.720]  А здесь у нас типа на tv
[03:51:36.720 --> 03:51:38.720]  оценка какая-то хорошая,
[03:51:38.720 --> 03:51:40.720]  на tp не очень хорошая, но мы его
[03:51:40.720 --> 03:51:42.720]  раскрываем в tv.
[03:51:42.720 --> 03:51:44.720]  Ну вот, смотрите. Ну теперь 2n-1
[03:51:44.720 --> 03:51:46.720]  можно расписать вот ровно по этой формуле.
[03:51:48.720 --> 03:51:50.720]  Вот.
[03:51:50.720 --> 03:51:52.720]  То есть по этой формуле она расписывается
[03:51:52.720 --> 03:51:54.720]  так. То есть пишем, что тут
[03:51:54.720 --> 03:51:56.720]  получается.
[03:51:56.720 --> 03:51:58.720]  2tp от
[03:51:58.720 --> 03:52:00.720]  2n-2
[03:52:00.720 --> 03:52:02.720]  плюс tv
[03:52:02.720 --> 03:52:04.720]  от 2n-2
[03:52:04.720 --> 03:52:06.720]  плюс
[03:52:06.720 --> 03:52:08.720]  сколько там получается?
[03:52:08.720 --> 03:52:10.720]  Три.
[03:52:14.720 --> 03:52:16.720]  Ну то есть суть
[03:52:16.720 --> 03:52:18.720]  на самом деле такая.
[03:52:18.720 --> 03:52:20.720]  То есть tp
[03:52:20.720 --> 03:52:22.720]  получается у нас...
[03:52:24.720 --> 03:52:26.720]  Нет, почему? То есть если оценивать
[03:52:26.720 --> 03:52:28.720]  среднее количество запусков, то получилось, что
[03:52:30.720 --> 03:52:32.720]  то получилось следующее,
[03:52:32.720 --> 03:52:34.720]  что tp на уровне
[03:52:34.720 --> 03:52:36.720]  на два уровня ниже сделает в среднем
[03:52:36.720 --> 03:52:38.720]  три рекурсивных запуска.
[03:52:38.720 --> 03:52:40.720]  Ну...
[03:52:42.720 --> 03:52:44.720]  А что не так?
[03:52:44.720 --> 03:52:46.720]  Ну мы tv не знаем, а tp не знаем.
[03:52:48.720 --> 03:52:50.720]  Нет, да, ну просто tp
[03:52:50.720 --> 03:52:52.720]  от 2n свелось к tp от
[03:52:52.720 --> 03:52:54.720]  2n-2 и tv от 2n-2.
[03:52:54.720 --> 03:52:56.720]  Ну мы не можем оценить такой tp.
[03:52:56.720 --> 03:52:58.720]  Нет, ну просто у нас
[03:52:58.720 --> 03:53:00.720]  уже tp
[03:53:00.720 --> 03:53:02.720]  уже хотя бы два.
[03:53:02.720 --> 03:53:04.720]  Так.
[03:53:04.720 --> 03:53:06.720]  Ну и что?
[03:53:06.720 --> 03:53:08.720]  А у нас было четыре.
[03:53:10.720 --> 03:53:12.720]  А ты хотел завалить ее, типа?
[03:53:12.720 --> 03:53:14.720]  Ну да.
[03:53:14.720 --> 03:53:16.720]  Вот.
[03:53:16.720 --> 03:53:18.720]  Нет, ну хорошо.
[03:53:18.720 --> 03:53:20.720]  Нет, ну на самом деле смотрите,
[03:53:20.720 --> 03:53:22.720]  просто останется на самом деле следующее. Вот это вот tp
[03:53:22.720 --> 03:53:24.720]  это что? Давайте вот эти tp и tv
[03:53:24.720 --> 03:53:26.720]  распишем еще, да?
[03:53:26.720 --> 03:53:28.720]  Давайте вот в них пойдем.
[03:53:28.720 --> 03:53:30.720]  Что вот это вот tp
[03:53:30.720 --> 03:53:32.720]  оно сведется к двум запускам.
[03:53:32.720 --> 03:53:34.720]  То есть оно не происходит.
[03:53:34.720 --> 03:53:36.720]  Сразу оно не происходит.
[03:53:36.720 --> 03:53:38.720]  2tp от 2n-2.
[03:53:38.720 --> 03:53:40.720]  Тут без вариантов. Еще плюс
[03:53:40.720 --> 03:53:42.720]  1.
[03:53:42.720 --> 03:53:44.720]  Вот это вот tv от 2n-1, да?
[03:53:44.720 --> 03:53:46.720]  А я так не расписывал на самом деле.
[03:53:46.720 --> 03:53:48.720]  А что не так?
[03:53:48.720 --> 03:53:50.720]  А я просто рекурсивно.
[03:53:50.720 --> 03:53:52.720]  У нас tv это tp плюс 1 вторая tv.
[03:53:52.720 --> 03:53:54.720]  Можно расписать то, что осталось
[03:53:54.720 --> 03:53:56.720]  1 вторая tv снова через tv.
[03:53:56.720 --> 03:53:58.720]  И выразить tv чисто через tv
[03:53:58.720 --> 03:54:00.720]  с умой такой герметрической прогрессии.
[03:54:00.720 --> 03:54:02.720]  Ну,
[03:54:02.720 --> 03:54:04.720]  можно так, но не знаю.
[03:54:04.720 --> 03:54:06.720]  Мне так нравится.
[03:54:06.720 --> 03:54:08.720]  Тут кому как.
[03:54:08.720 --> 03:54:10.720]  Потому что это вот tv теперь расписываем.
[03:54:10.720 --> 03:54:12.720]  Ну, то вот tv на один уровень вниз
[03:54:12.720 --> 03:54:14.720]  мы тоже вот так вот можем расписать, да?
[03:54:14.720 --> 03:54:16.720]  То есть давайте прям вот так вот по чесноку.
[03:54:16.720 --> 03:54:18.720]  Так и пишем.
[03:54:18.720 --> 03:54:20.720]  То есть 1 вторая на скобочках.
[03:54:20.720 --> 03:54:22.720]  tp от 2n-2
[03:54:22.720 --> 03:54:24.720]  плюс 1 вторая
[03:54:24.720 --> 03:54:26.720]  tv от
[03:54:26.720 --> 03:54:28.720]  2n-2 и плюс 1.
[03:54:28.720 --> 03:54:30.720]  Еще тут в конце плюс 1.
[03:54:30.720 --> 03:54:32.720]  Что я забыл?
[03:54:32.720 --> 03:54:34.720]  Где?
[03:54:34.720 --> 03:54:36.720]  Где здесь?
[03:54:36.720 --> 03:54:38.720]  А, tv, да, согласен.
[03:54:40.720 --> 03:54:42.720]  Вот.
[03:54:42.720 --> 03:54:44.720]  То есть это равно.
[03:54:44.720 --> 03:54:46.720]  Так, ну, то есть если тут
[03:54:46.720 --> 03:54:48.720]  раскрыть какие-нибудь скобочки,
[03:54:48.720 --> 03:54:50.720]  то тогда что у нас тут получится?
[03:54:52.720 --> 03:54:54.720]  К вот этому.
[03:54:54.720 --> 03:54:56.720]  Нет,
[03:54:56.720 --> 03:54:58.720]  это я просто вот это продолжил.
[03:55:00.720 --> 03:55:02.720]  Да, да, согласен.
[03:55:02.720 --> 03:55:04.720]  Родомный такой порядок, но
[03:55:04.720 --> 03:55:06.720]  что делать. Так, значит у нас тут
[03:55:06.720 --> 03:55:08.720]  2 tv у нас тут вылезло.
[03:55:16.720 --> 03:55:18.720]  Значит, получается tv
[03:55:18.720 --> 03:55:20.720]  у нас получается что-то типа
[03:55:20.720 --> 03:55:22.720]  9 четвертых tv
[03:55:22.720 --> 03:55:24.720]  от 2n-2
[03:55:24.720 --> 03:55:26.720]  плюс 1 вторая
[03:55:26.720 --> 03:55:28.720]  tv от
[03:55:28.720 --> 03:55:30.720]  2n-2
[03:55:30.720 --> 03:55:32.720]  плюс сколько там у нас получается?
[03:55:32.720 --> 03:55:34.720]  5 вторых.
[03:55:38.720 --> 03:55:40.720]  Вот.
[03:55:46.720 --> 03:55:48.720]  То есть смотрите.
[03:55:52.720 --> 03:55:54.720]  То есть я утверждаю
[03:55:54.720 --> 03:55:56.720]  на самом деле, что
[03:55:56.720 --> 03:55:58.720]  если эти брать верхние оценки,
[03:55:58.720 --> 03:56:00.720]  то...
[03:56:10.720 --> 03:56:12.720]  Вот.
[03:56:12.720 --> 03:56:14.720]  Ну, в принципе, да, то есть заметим
[03:56:14.720 --> 03:56:16.720]  на самом деле следующее, что среднее...
[03:56:16.720 --> 03:56:18.720]  То есть у нас тут получилось такое...
[03:56:18.720 --> 03:56:20.720]  Ну, то есть заметим, что среднее количество
[03:56:20.720 --> 03:56:22.720]  рекурсивных запусков на самом деле не
[03:56:22.720 --> 03:56:24.720]  превосходит... То есть на уровне 2 ниже
[03:56:24.720 --> 03:56:26.720]  не превосходит 3.
[03:56:26.720 --> 03:56:28.720]  То есть в проигрышной вершине у нас эти...
[03:56:28.720 --> 03:56:30.720]  То есть получается мы запустимся, в среднем получается
[03:56:30.720 --> 03:56:32.720]  3 раза.
[03:56:32.720 --> 03:56:34.720]  А в случае проигрышной получается
[03:56:34.720 --> 03:56:36.720]  1 даже не 3, а 1 с их четвертых у нас
[03:56:36.720 --> 03:56:38.720]  вылезло.
[03:56:38.720 --> 03:56:40.720]  То есть видимо можно чуть-чуть
[03:56:40.720 --> 03:56:42.720]  точнее оценить.
[03:56:44.720 --> 03:56:46.720]  Нет, ну давайте посмотрим, что из этого можно
[03:56:46.720 --> 03:56:48.720]  выжать.
[03:56:48.720 --> 03:56:50.720]  Ну просто хочется доказать
[03:56:50.720 --> 03:56:52.720]  утверждение.
[03:56:52.720 --> 03:56:54.720]  Давайте так, утверждение.
[03:56:54.720 --> 03:56:56.720]  ТП
[03:56:56.720 --> 03:56:58.720]  от 2Н и ТВ от
[03:56:58.720 --> 03:57:00.720]  2Н не превосходят
[03:57:00.720 --> 03:57:02.720]  там 3 в степени Н
[03:57:02.720 --> 03:57:04.720]  умножено к какой-нибудь веселую константу.
[03:57:04.720 --> 03:57:06.720]  Например, ну давайте
[03:57:06.720 --> 03:57:08.720]  на С.
[03:57:08.720 --> 03:57:10.720]  Ну, в нашем любимом стиле.
[03:57:12.720 --> 03:57:14.720]  Да, хотя
[03:57:14.720 --> 03:57:16.720]  видимо придется...
[03:57:18.720 --> 03:57:20.720]  Ну, наверное
[03:57:20.720 --> 03:57:22.720]  можно еще больше выжить, потому что
[03:57:22.720 --> 03:57:24.720]  у нас чуть-чуть неравномерно.
[03:57:24.720 --> 03:57:26.720]  Не, ну там видимо придется видимо минус Д подгонять
[03:57:26.720 --> 03:57:28.720]  что-то, насколько я прикидываю.
[03:57:30.720 --> 03:57:32.720]  Ну потому что, смотрите, давайте
[03:57:32.720 --> 03:57:34.720]  делаем индукцию по ТВ.
[03:57:34.720 --> 03:57:36.720]  Ну, точнее, по ТП делаем индукцию.
[03:57:36.720 --> 03:57:38.720]  То есть
[03:57:38.720 --> 03:57:40.720]  по ТП у нас получается 3
[03:57:40.720 --> 03:57:42.720]  в степени Н-1 умножить на 3.
[03:57:42.720 --> 03:57:44.720]  Правда?
[03:57:44.720 --> 03:57:46.720]  То есть получится...
[03:57:46.720 --> 03:57:48.720]  При доказании ТП от 2Н получается
[03:57:48.720 --> 03:57:50.720]  будет не превосходить на
[03:57:50.720 --> 03:57:52.720]  там 2 плюс 1
[03:57:52.720 --> 03:57:54.720]  на С на 3 в степени Н-1.
[03:57:54.720 --> 03:57:56.720]  Поэтому если
[03:57:56.720 --> 03:57:58.720]  и плюс 3 доказать, что это меньше
[03:57:58.720 --> 03:58:00.720]  либо равно, чем С на 3 в степени Н
[03:58:00.720 --> 03:58:02.720]  мы просто так не сможем, потому что это и есть
[03:58:02.720 --> 03:58:04.720]  С на 3 в степени Н.
[03:58:04.720 --> 03:58:06.720]  Поэтому Д видимо придется забабахать.
[03:58:06.720 --> 03:58:08.720]  То есть пишем
[03:58:08.720 --> 03:58:10.720]  минус 3Д плюс 3.
[03:58:10.720 --> 03:58:12.720]  Хочется сказать, что это меньше
[03:58:12.720 --> 03:58:14.720]  либо равно, чем там
[03:58:14.720 --> 03:58:16.720]  Д на 3 в степени Н минус
[03:58:16.720 --> 03:58:18.720]  Д.
[03:58:18.720 --> 03:58:20.720]  Но это верно просто при...
[03:58:20.720 --> 03:58:22.720]  Ну, я не знаю. То есть понятно,
[03:58:22.720 --> 03:58:24.720]  пишем, что Д больше либо равно там, я не знаю,
[03:58:24.720 --> 03:58:26.720]  полутора, по-моему, хватит.
[03:58:26.720 --> 03:58:28.720]  Там что-то полтора типа надо, или две трети.
[03:58:28.720 --> 03:58:30.720]  Нет, наоборот,
[03:58:30.720 --> 03:58:32.720]  три вторых, конечно.
[03:58:32.720 --> 03:58:34.720]  Нет, сколько надо-то?
[03:58:34.720 --> 03:58:36.720]  А, ну да, 2Д, да, понятно,
[03:58:36.720 --> 03:58:38.720]  2Д должно убиться
[03:58:38.720 --> 03:58:40.720]  тройкой, поэтому Д должно быть полторашкой.
[03:58:40.720 --> 03:58:42.720]  Вот.
[03:58:42.720 --> 03:58:44.720]  Причем Д больше либо равно
[03:58:44.720 --> 03:58:46.720]  1.5,
[03:58:46.720 --> 03:58:48.720]  а С должно быть равно...
[03:58:48.720 --> 03:58:50.720]  А С может быть равно чему угодно.
[03:58:52.720 --> 03:58:54.720]  Вот.
[03:58:54.720 --> 03:58:56.720]  Так, ну и еще, на самом деле,
[03:58:56.720 --> 03:58:58.720]  но это было в ТП.
[03:58:58.720 --> 03:59:00.720]  А в ТВ, на самом деле, получается,
[03:59:00.720 --> 03:59:02.720]  еще круче получается,
[03:59:02.720 --> 03:59:04.720]  11 четвертых на
[03:59:04.720 --> 03:59:06.720]  С на 3 в степени Н минус 1
[03:59:06.720 --> 03:59:08.720]  минус 11 четвертых
[03:59:08.720 --> 03:59:10.720]  Д плюс 5
[03:59:10.720 --> 03:59:12.720]  но если Д брать полтора,
[03:59:12.720 --> 03:59:14.720]  то, по-моему, у нас это устраивает.
[03:59:18.720 --> 03:59:20.720]  Ну, потому что
[03:59:20.720 --> 03:59:22.720]  9 четвертых умножить на полтора, это сколько?
[03:59:24.720 --> 03:59:26.720]  По-моему, 54.
[03:59:26.720 --> 03:59:28.720]  9 четвертых умножить на полтора?
[03:59:28.720 --> 03:59:30.720]  А, нет.
[03:59:30.720 --> 03:59:32.720]  А, черт, да.
[03:59:32.720 --> 03:59:34.720]  Да-да-да,
[03:59:34.720 --> 03:59:36.720]  все, да, мои голубые меч...
[03:59:36.720 --> 03:59:38.720]  Ладно, получается, сколько там?
[03:59:38.720 --> 03:59:40.720]  1.35
[03:59:40.720 --> 03:59:42.720]  Нет, что за бред?
[03:59:42.720 --> 03:59:44.720]  А, просто при 13.5
[03:59:44.720 --> 03:59:46.720]  поделить на 4.
[03:59:46.720 --> 03:59:48.720]  Но это больше трех.
[03:59:48.720 --> 03:59:50.720]  Поэтому то, что больше трех,
[03:59:50.720 --> 03:59:52.720]  оно, соответственно,
[03:59:52.720 --> 03:59:54.720]  убивает 5 вторых.
[03:59:56.720 --> 03:59:58.720]  Не, ну я полторашку люблю.
[03:59:58.720 --> 04:00:00.720]  Так, ну полторашка, она меньше,
[04:00:00.720 --> 04:00:02.720]  поэтому она...
[04:00:02.720 --> 04:00:04.720]  Нет, потому что чем больше Д, тем...
[04:00:04.720 --> 04:00:06.720]  Смотрите, откуда я возьму С?
[04:00:06.720 --> 04:00:08.720]  Я С возьму из базы индукции,
[04:00:08.720 --> 04:00:10.720]  когда я равно 0, поэтому чем больше я там возьму Д,
[04:00:10.720 --> 04:00:12.720]  тем больше мне в этой базе индукции придется С
[04:00:12.720 --> 04:00:14.720]  брать.
[04:00:14.720 --> 04:00:16.720]  Поэтому, значит, Д полторашка
[04:00:16.720 --> 04:00:18.720]  пойдет.
[04:00:18.720 --> 04:00:20.720]  То есть меньше либо равно,
[04:00:20.720 --> 04:00:22.720]  чем в данном случае
[04:00:22.720 --> 04:00:24.720]  С на 3 степени. Да, и тут, конечно,
[04:00:24.720 --> 04:00:26.720]  мы, конечно, могли понадеяться, что тут вот эти вот...
[04:00:26.720 --> 04:00:28.720]  То есть у меня тут не хватает четвертинки
[04:00:28.720 --> 04:00:30.720]  С на 3 степени или 0.1, может,
[04:00:30.720 --> 04:00:32.720]  это даже победит как-то, но...
[04:00:32.720 --> 04:00:34.720]  Да, ну в данном случае я сказал, что
[04:00:34.720 --> 04:00:36.720]  у меня тут так вылезло полторашка.
[04:00:36.720 --> 04:00:38.720]  А если вы будете оценивать отдельно ТВ, а отдельно ТВ,
[04:00:38.720 --> 04:00:40.720]  то это наверняка должно быть...
[04:00:40.720 --> 04:00:42.720]  Может быть. Но давайте посмотрим,
[04:00:42.720 --> 04:00:44.720]  какую С мы теперь выжмем.
[04:00:46.720 --> 04:00:48.720]  Так, ну давайте так, какая база индукции?
[04:00:48.720 --> 04:00:50.720]  Да, мы знаем, что
[04:00:50.720 --> 04:00:52.720]  ТВ от 0
[04:00:52.720 --> 04:00:54.720]  равно ТП от 1, равно 1,
[04:00:54.720 --> 04:00:56.720]  тупо, да? Потому что там
[04:00:56.720 --> 04:00:58.720]  мы эту вершину вызвать обязаны будем, правда?
[04:00:58.720 --> 04:01:00.720]  Поэтому теперь надо подогнать...
[04:01:00.720 --> 04:01:02.720]  Ну вот.
[04:01:02.720 --> 04:01:04.720]  Но тогда вызов получается,
[04:01:04.720 --> 04:01:06.720]  что С... В общем, если
[04:01:06.720 --> 04:01:08.720]  D это полторашка, то С придется делать
[04:01:08.720 --> 04:01:10.720]  два с половиной.
[04:01:14.720 --> 04:01:16.720]  Вот.
[04:01:16.720 --> 04:01:18.720]  Ну вот.
[04:01:20.720 --> 04:01:22.720]  Вот.
[04:01:22.720 --> 04:01:24.720]  Так что вызов...
[04:01:24.720 --> 04:01:26.720]  Ну, вывод, на самом деле, очень простой.
[04:01:26.720 --> 04:01:28.720]  А симпточка решения, которая у нас получилась
[04:01:28.720 --> 04:01:30.720]  в отожидании, О от 3
[04:01:30.720 --> 04:01:32.720]  в степени N.
[04:01:32.720 --> 04:01:34.720]  А если бы я еще
[04:01:34.720 --> 04:01:36.720]  оценивал, кстати, не писал бы эту единицу,
[04:01:36.720 --> 04:01:38.720]  потому что оценивал бы в явном виде количество
[04:01:38.720 --> 04:01:40.720]  вызовов интерактора,
[04:01:40.720 --> 04:01:42.720]  то был бы просто 3 в степени N.
[04:01:42.720 --> 04:01:44.720]  Но при этом...
[04:01:44.720 --> 04:01:46.720]  Смотрите, легко заметить следующее.
[04:01:46.720 --> 04:01:48.720]  Если бы требовали детерминированного решения,
[04:01:48.720 --> 04:01:50.720]  и интерактор был бы адаптивный,
[04:01:50.720 --> 04:01:52.720]  то я боюсь, он бы мог нам...
[04:01:52.720 --> 04:01:54.720]  То в худшем случае
[04:01:54.720 --> 04:01:56.720]  без перебора всего
[04:01:56.720 --> 04:01:58.720]  мы бы не обошлись.
[04:01:58.720 --> 04:02:00.720]  А как бы он адаптировался?
[04:02:02.720 --> 04:02:04.720]  А, типа он бы специально подсовывал в худшем случае?
[04:02:04.720 --> 04:02:06.720]  Да.
[04:02:06.720 --> 04:02:08.720]  В чем? Жестко подсовывал.
[04:02:08.720 --> 04:02:10.720]  То есть, смотрите.
[04:02:10.720 --> 04:02:12.720]  Если мы хотим 2N,
[04:02:12.720 --> 04:02:14.720]  в чем он бы подсовывал так?
[04:02:14.720 --> 04:02:16.720]  Допустим, я нахожусь на высоте H, и он нам хочет подсовывать
[04:02:16.720 --> 04:02:18.720]  в случае, когда H выигрывает.
[04:02:18.720 --> 04:02:20.720]  Тогда что он сделает?
[04:02:20.720 --> 04:02:22.720]  Тогда, когда я вызовусь от одного ребенка,
[04:02:22.720 --> 04:02:24.720]  куда-нибудь пойду, он будет мне
[04:02:24.720 --> 04:02:26.720]  подсовывать до последнего так, чтобы...
[04:02:26.720 --> 04:02:28.720]  То есть, он будет мне до последнего мурыжить,
[04:02:28.720 --> 04:02:30.720]  а потом в конце мне выдаст, что я выигрышный.
[04:02:32.720 --> 04:02:34.720]  Чтобы я потом пошел в другого ребенка,
[04:02:34.720 --> 04:02:36.720]  где он меня будет мурыжить до последнего.
[04:02:36.720 --> 04:02:38.720]  И он может мурыжить к проигрышному.
[04:02:38.720 --> 04:02:40.720]  А если я проигрышный,
[04:02:40.720 --> 04:02:42.720]  то он в обоих меня будет мурыжить
[04:02:42.720 --> 04:02:44.720]  до последнего, но в итоге осознается, что там оба выигрышные.
[04:02:44.720 --> 04:02:46.720]  В чем?
[04:02:46.720 --> 04:02:48.720]  В общем, оба раза получается рекурсивно.
[04:02:52.720 --> 04:02:54.720]  То есть это, например, на пальцах не совсем
[04:02:54.720 --> 04:02:59.700]  еще строго доказательства получилось да но но тем не менее так сказать что в худшем случае
[04:02:59.700 --> 04:03:04.380]  придется реально за 4 степень а вероятность в статическом интеракте пожалуйста уже 3 степень
[04:03:04.380 --> 04:03:08.940]  то есть это принципиально то есть это это вам не эти ваши четыре русских с вашими поделил налога
[04:03:08.940 --> 04:03:17.220]  но возрадуйся да то есть это он 4 степень заменили на 3 степень вот то есть в общем-то на самом деле
[04:03:17.220 --> 04:03:25.100]  ровно на этом и основанные там всякие альфа-бета отсечения но давайте вкратце расскажу раз об этом
[04:03:25.100 --> 04:03:29.020]  зашла речь что такое вообще альфа-бета отсечения так я сейчас конечно очень сильно на пальцах
[04:03:29.020 --> 04:03:35.100]  расскажу но тем не менее но суть на самом деле такая потому что часто бывают то есть мы конечно
[04:03:35.100 --> 04:03:39.780]  с вами рассматривали игры в которых просто кто-то выигрывает то есть кто-то выигрывает кто-то
[04:03:39.780 --> 04:03:45.500]  проигрывает и все но бывают на самом деле более продвинутые игры то есть бывает ситуация что
[04:03:45.900 --> 04:03:49.880]  первый игрок ходит второй игрок ходит первый Easy, a не как-то ходит, а потом приходит в какое-то
[04:03:49.880 --> 04:03:57.180]  конечное состояние и там написано число ц, который говорит о том что первый игрок получает от
[04:03:57.180 --> 04:04:07.340]  второго ц. там ц денежек. да причем если будет за может быть как положительным так и отрицательным то
[04:04:07.340 --> 04:04:12.820]  есть это то есть положительно означает что первый игрок выиграл там песка выиграл ц
[04:04:12.820 --> 04:04:16.220]  это означает, что, например, второй игрок выиграл минус
[04:04:16.220 --> 04:04:17.220]  С.
[04:04:17.220 --> 04:04:18.220]  Ну, может быть, ноль, значит, типа ничья.
[04:04:18.220 --> 04:04:23.340]  И тогда, конечно, оба игрока хотят максимизировать
[04:04:23.340 --> 04:04:24.340]  свою прибыль.
[04:04:24.340 --> 04:04:28.660]  Но тогда, если у нас есть такое рекурсивное дерево,
[04:04:28.660 --> 04:04:31.300]  ну, тоже такого же рода дерево, то тогда обычно
[04:04:31.300 --> 04:04:34.940]  появляется такое понятие, как цена игры.
[04:04:34.940 --> 04:04:38.420]  То есть, что значит цена игры?
[04:04:38.420 --> 04:04:42.380]  Это означает, что есть какое-то мистическое число А, такое,
[04:04:42.380 --> 04:04:45.660]  что первый игрок, у первого игрока есть стратегия,
[04:04:45.660 --> 04:04:48.140]  которая гарантирует, что он получит не меньше А.
[04:04:48.140 --> 04:04:52.380]  Но, с другой стороны, как бы ни играл второй.
[04:04:52.380 --> 04:04:55.380]  А у второго, независимо от этого, есть своя стратегия,
[04:04:55.380 --> 04:04:57.980]  которая гарантирует, что как бы первый игрок ни играл,
[04:04:57.980 --> 04:04:59.460]  он больше А не получит.
[04:04:59.460 --> 04:05:03.780]  Вот, понимаете, да?
[04:05:03.780 --> 04:05:09.620]  То есть, если у вас есть какая-то ациклическая игра с конечными
[04:05:10.260 --> 04:05:13.260]  состояниями, то, в принципе, такие штуки очень легко
[04:05:13.260 --> 04:05:15.260]  динамичкой насчитать.
[04:05:15.260 --> 04:05:16.260]  Согласны?
[04:05:16.260 --> 04:05:21.260]  Так, догадываетесь, как делать примерно, да?
[04:05:21.260 --> 04:05:24.220]  Ну, просто для каждой вершины это аккуратненько по индукции
[04:05:24.220 --> 04:05:25.740]  можно честно вывести.
[04:05:25.740 --> 04:05:32.740]  Да, нет, все.
[04:05:32.740 --> 04:05:33.740]  Вот.
[04:05:33.740 --> 04:05:34.740]  Вот.
[04:05:34.740 --> 04:05:39.540]  Но иногда возникает ситуация, конечно, когда это
[04:05:39.540 --> 04:05:42.820]  дерево очень большое, то есть мы там можем в конце
[04:05:42.820 --> 04:05:43.820]  оценить сколько будет.
[04:05:43.820 --> 04:05:47.540]  Но, с другой стороны, откуда берется альфа-бета отсечения?
[04:05:47.540 --> 04:05:49.540]  Потому что, допустим, что у вас есть там в каждой вершине
[04:05:49.540 --> 04:05:50.860]  как и ранее два варианта хода.
[04:05:50.860 --> 04:05:54.100]  Ну, допустим такое, да?
[04:05:54.100 --> 04:05:56.460]  То есть, надо пойти влево или вправо.
[04:05:56.460 --> 04:05:57.460]  Тогда идея такая.
[04:05:57.460 --> 04:06:00.540]  Допустим, мы идем в рандомного ребенка и получили, что
[04:06:00.540 --> 04:06:05.300]  там результат игры С.
[04:06:06.300 --> 04:06:12.300]  Тогда мы должны, конечно, можем ли мы получить лучше?
[04:06:12.300 --> 04:06:15.300]  Ну, конечно, можем.
[04:06:15.300 --> 04:06:18.300]  А можем и не получить.
[04:06:18.300 --> 04:06:22.300]  Но у нас появляется вариант отсечения.
[04:06:22.300 --> 04:06:24.300]  Вариант заключается в следующем.
[04:06:24.300 --> 04:06:29.300]  Он нам скажет, что если вы гарантируете, что у вас,
[04:06:29.300 --> 04:06:32.300]  то есть, если существуют какие-то ивристики, которые
[04:06:32.300 --> 04:06:39.300]  гарантируют, что ответ на задачу заведомо не лежит
[04:06:39.300 --> 04:06:42.300]  в полуинтервале от С до плюс бесконечности, то
[04:06:42.300 --> 04:06:47.300]  есть, он заведомо меньше С, то можно туда не лезть.
[04:06:47.300 --> 04:06:48.300]  Логично, да?
[04:06:48.300 --> 04:06:51.300]  То есть, а можно просто сразу сказать, что ответ С
[04:06:51.300 --> 04:06:53.300]  и сказать, что там все плохо.
[04:06:53.300 --> 04:06:59.300]  То есть, более того, как это дальше будет работать?
[04:06:59.300 --> 04:07:01.300]  То есть, вы вот этой вершине передали, что нас интересует
[04:07:01.300 --> 04:07:04.300]  только ответ от С до плюс бесконечности.
[04:07:04.300 --> 04:07:06.300]  То есть, мы просто, то есть, если мы в какой-то вершине,
[04:07:06.300 --> 04:07:09.300]  если мы уже, допустим, если мы откуда-то точно знаем,
[04:07:09.300 --> 04:07:12.300]  что у нас ответ меньше С, то мы будем просто считать,
[04:07:12.300 --> 04:07:14.300]  что ответ С для нас это одно и то же.
[04:07:14.300 --> 04:07:16.300]  Понятно, да?
[04:07:16.300 --> 04:07:19.300]  А как это будет теперь работать?
[04:07:19.300 --> 04:07:20.300]  Ну, тогда смотрите, какая тут идея.
[04:07:20.300 --> 04:07:23.300]  Допустим, мы пойдем в какого-то ребенка, и выяснится,
[04:07:23.300 --> 04:07:27.300]  что у него ответ D.
[04:07:27.300 --> 04:07:31.300]  Что в нем нашелся ответ D, причем D оказалось больше С.
[04:07:31.300 --> 04:07:35.300]  Тогда, когда мы пойдем во второго ребенка,
[04:07:35.300 --> 04:07:39.300]  получается, нас что интересует?
[04:07:39.300 --> 04:07:41.300]  Да, ну вот.
[04:07:41.300 --> 04:07:44.300]  Да, причем здесь я, когда я под результатом,
[04:07:44.300 --> 04:07:47.300]  я подозреваю результат именно для глобального первого игрока.
[04:07:47.300 --> 04:07:49.300]  Понимаете, да?
[04:07:49.300 --> 04:07:51.300]  Ну, знаете, вот на самом деле в теории игр
[04:07:51.300 --> 04:07:53.300]  как бы есть разница, есть первый и второй игрок,
[04:07:53.300 --> 04:07:57.300]  а есть красный и синий.
[04:07:57.300 --> 04:07:59.300]  Да, это могут быть разные вещи,
[04:07:59.300 --> 04:08:01.300]  потому что, понятно, в разных позициях
[04:08:01.300 --> 04:08:03.300]  как бы кто-то первый, кто-то сейчас ходит,
[04:08:03.300 --> 04:08:05.300]  а кто-то не ходит, да?
[04:08:05.300 --> 04:08:07.300]  Ну, чтобы зафиксировать.
[04:08:07.300 --> 04:08:09.300]  Так вот, то есть мы говорим здесь как бы C и D,
[04:08:09.300 --> 04:08:12.300]  это как будто типа выигрыш там,
[04:08:12.300 --> 04:08:17.300]  то есть это условно там выигрыш первого игрока.
[04:08:17.300 --> 04:08:20.300]  Но теперь смотрите, что нам надо?
[04:08:20.300 --> 04:08:24.300]  Так как в этой вершине мы выбирали максимум,
[04:08:24.300 --> 04:08:29.300]  то в этой вершине мы уже будем выбирать минимум, правда?
[04:08:29.300 --> 04:08:31.300]  Вот, то есть получается,
[04:08:31.300 --> 04:08:34.300]  то есть нас на самом деле получается числа больше D
[04:08:34.300 --> 04:08:36.300]  тоже не интересует,
[04:08:36.300 --> 04:08:38.300]  но и меньше C нас не интересует,
[04:08:38.300 --> 04:08:40.300]  то есть поэтому получается,
[04:08:40.300 --> 04:08:42.300]  что здесь мы запускаемся рекурсивно
[04:08:42.300 --> 04:08:44.300]  и говорим, что нас интересует только числа C и D.
[04:08:44.300 --> 04:08:46.300]  Если мы гарантируем, что у нас
[04:08:46.300 --> 04:08:48.300]  результат этой игры не попадает в этот отрезок,
[04:08:48.300 --> 04:08:50.300]  то мы сюда просто не идем,
[04:08:50.300 --> 04:08:52.300]  потому что нам не интересно,
[04:08:52.300 --> 04:08:54.300]  в чем не интересно даже если там
[04:08:54.300 --> 04:08:56.300]  либо как когда надо супер-меньше,
[04:08:56.300 --> 04:08:58.300]  так как когда супер-больше.
[04:08:58.300 --> 04:09:00.300]  То есть оказывается,
[04:09:00.300 --> 04:09:02.300]  что если вот выбирать рандомные шаги,
[04:09:02.300 --> 04:09:04.300]  то тогда это отсечение
[04:09:04.300 --> 04:09:06.300]  может очень неплохо работать.
[04:09:06.300 --> 04:09:08.300]  Это называется альфа-бета отсечение.
[04:09:08.300 --> 04:09:10.300]  Почему он так называется?
[04:09:10.300 --> 04:09:12.300]  Потому что обычно в этом месте используют буквы альфа и бета,
[04:09:12.300 --> 04:09:14.300]  а не C и D, как это сделал я.
[04:09:14.300 --> 04:09:16.300]  Вот.
[04:09:16.300 --> 04:09:18.300]  И в принципе оказывается,
[04:09:18.300 --> 04:09:20.300]  ну в принципе мы уже даже какие-то
[04:09:20.300 --> 04:09:22.300]  основы посчитали, что действительно
[04:09:22.300 --> 04:09:24.300]  это очень хорошо
[04:09:24.300 --> 04:09:26.300]  в среднем отсекает.
[04:09:26.300 --> 04:09:28.300]  Ну то есть конечно все зависит от ваших
[04:09:28.300 --> 04:09:30.300]  конкретных конечно
[04:09:30.300 --> 04:09:32.300]  эвристик
[04:09:32.300 --> 04:09:34.300]  на самом деле.
[04:09:34.300 --> 04:09:36.300]  Вот.
[04:09:36.300 --> 04:09:38.300]  Но более того в принципе
[04:09:38.300 --> 04:09:40.300]  на этом основаны практически
[04:09:40.300 --> 04:09:42.300]  чуть менее чем все на самом деле
[04:09:42.300 --> 04:09:44.300]  какие-то там
[04:09:44.300 --> 04:09:46.300]  компьютерные эмуляторы каких-нибудь
[04:09:46.300 --> 04:09:48.300]  интеллектуальных игр типа шахмата.
[04:09:48.300 --> 04:09:50.300]  Ну практически как устроен?
[04:09:50.300 --> 04:09:52.300]  Практически любой стоквиш.
[04:09:52.300 --> 04:09:54.300]  То есть устроен он так.
[04:09:54.300 --> 04:09:56.300]  В нем есть
[04:09:56.300 --> 04:09:58.300]  шахматная позиция
[04:09:58.300 --> 04:10:00.300]  и у стоквиша есть какая-то оценка
[04:10:00.300 --> 04:10:02.300]  этой позиции.
[04:10:02.300 --> 04:10:04.300]  А как оценить шахматы?
[04:10:04.300 --> 04:10:06.300]  Ну вот как-то
[04:10:06.300 --> 04:10:08.300]  вот здесь это...
[04:10:08.300 --> 04:10:10.300]  Нет-нет-нет, если бы оценивать так.
[04:10:10.300 --> 04:10:12.300]  Но есть просто оценка позиции.
[04:10:12.300 --> 04:10:14.300]  Например, то есть ну так
[04:10:14.300 --> 04:10:16.300]  есть допустим лишь какая-нибудь пешечка
[04:10:16.300 --> 04:10:18.300]  говорим так.
[04:10:18.300 --> 04:10:20.300]  Это хорошо, это типа плюс один.
[04:10:20.300 --> 04:10:22.300]  Есть какой-нибудь слоник, ну окей, пишем там
[04:10:22.300 --> 04:10:24.300]  три или там два и восемь.
[04:10:24.300 --> 04:10:26.300]  Ну там есть какие-то более точные уже оценки,
[04:10:26.300 --> 04:10:28.300]  то есть там слон это может уже весит не три,
[04:10:28.300 --> 04:10:30.300]  а два и восемь, или там три и два, даже я не помню.
[04:10:30.300 --> 04:10:32.300]  Но это я самое
[04:10:32.300 --> 04:10:34.300]  простое пишу. Или там есть
[04:10:34.300 --> 04:10:36.300]  ферзь, отлично пишем, плюс девять.
[04:10:36.300 --> 04:10:38.300]  Ну
[04:10:38.300 --> 04:10:40.300]  нет, смотрите тут по-разному.
[04:10:40.300 --> 04:10:42.300]  Если брать то, что я читал в детских книжках,
[04:10:42.300 --> 04:10:44.300]  то да, ферзь это десять, лодяя это пять,
[04:10:44.300 --> 04:10:46.300]  кони-слон по три, понятно.
[04:10:46.300 --> 04:10:48.300]  Конь четыре.
[04:10:48.300 --> 04:10:50.300]  Ферзь девять. Вот. То есть более
[04:10:50.300 --> 04:10:52.300]  современно все говорят, что ферзь
[04:10:52.300 --> 04:10:54.300]  все-таки девять. Вот.
[04:10:54.300 --> 04:10:56.300]  Но там дальше начинаются детали.
[04:10:56.300 --> 04:10:58.300]  То есть там начинаются там всякие детали,
[04:10:58.300 --> 04:11:00.300]  там вида, что там скажем...
[04:11:00.300 --> 04:11:02.300]  Проходная пешка. Нет.
[04:11:02.300 --> 04:11:04.300]  Например, да, если там проходная пешка,
[04:11:04.300 --> 04:11:06.300]  которая еще очень далеко прошла, то как бы это уже
[04:11:06.300 --> 04:11:08.300]  это тоже классно.
[04:11:08.300 --> 04:11:10.300]  Вот, это почти ферзь, это раз. Во-вторых,
[04:11:10.300 --> 04:11:12.300]  еще в открытой позиции, допустим, есть
[04:11:12.300 --> 04:11:14.300]  преимущество двух слонов, потому что там слон сильнее
[04:11:14.300 --> 04:11:16.300]  коня, например. А в закрытой,
[04:11:16.300 --> 04:11:18.300]  наоборот, конь сильнее слона. Ну и начинаются
[04:11:18.300 --> 04:11:20.300]  всякие такие детали, позиционные факторы и так
[04:11:20.300 --> 04:11:22.300]  далее. То есть тут уже...
[04:11:22.300 --> 04:11:24.300]  То есть тут...
[04:11:26.300 --> 04:11:28.300]  Чего?
[04:11:30.300 --> 04:11:32.300]  Хорошо, да.
[04:11:32.300 --> 04:11:34.300]  Ну девять, хорошо. Ну девять так девять, хорошо.
[04:11:34.300 --> 04:11:36.300]  Ну,
[04:11:36.300 --> 04:11:38.300]  видимо, потенциально...
[04:11:38.300 --> 04:11:40.300]  Ну, видимо, так на одну пешечку.
[04:11:46.300 --> 04:11:48.300]  Нет, ну там надо
[04:11:48.300 --> 04:11:50.300]  считать, потому что как бы в шахматы
[04:11:50.300 --> 04:11:52.300]  известно такое, что преимущество в одну пешку,
[04:11:52.300 --> 04:11:54.300]  это само по себе не преимущество.
[04:11:54.300 --> 04:11:56.300]  То есть нет гарантии, что этого
[04:11:56.300 --> 04:11:58.300]  хватит для победы.
[04:12:00.300 --> 04:12:02.300]  Ну, то есть дальше там надо
[04:12:02.300 --> 04:12:04.300]  действительно читать всякие таблицы
[04:12:04.300 --> 04:12:06.300]  Налимова и так далее, там смотреть, видимо.
[04:12:06.300 --> 04:12:08.300]  Ну, типа в среднем случае
[04:12:08.300 --> 04:12:10.300]  два ладьи, две ладьи ферсия,
[04:12:10.300 --> 04:12:12.300]  это как бы ничья или чья-то победа все-таки.
[04:12:12.300 --> 04:12:14.300]  Можно не запариваться, просто
[04:12:14.300 --> 04:12:16.300]  пустить 100 рандомных игр
[04:12:16.300 --> 04:12:18.300]  с неумными игроками
[04:12:18.300 --> 04:12:20.300]  и посчитать процент победы.
[04:12:20.300 --> 04:12:22.300]  Не-не-не, ну это же тоже не то,
[04:12:22.300 --> 04:12:24.300]  потому что мы же хотим, чтобы игроки играют оптимально.
[04:12:24.300 --> 04:12:26.300]  А мы говорим, что если у нас позиция
[04:12:26.300 --> 04:12:28.300]  хорошая... Ну, в плане, если у нас
[04:12:28.300 --> 04:12:30.300]  позиция чуть лучше,
[04:12:30.300 --> 04:12:32.300]  то два игрок, которые играют
[04:12:32.300 --> 04:12:34.300]  по спинсу рандомных, у тебя время играть.
[04:12:34.300 --> 04:12:36.300]  Не-не-не, это
[04:12:36.300 --> 04:12:38.300]  тоже и факт,
[04:12:38.300 --> 04:12:40.300]  потому что бывает, на самом деле, позиция хорошая,
[04:12:40.300 --> 04:12:42.300]  но для выигрыша в ней нужно делать точные ходы.
[04:12:42.300 --> 04:12:44.300]  Да, понятно.
[04:12:44.300 --> 04:12:46.300]  И правильный ход сделать выигрыш, а любой другой ход
[04:12:46.300 --> 04:12:48.300]  тебя снесут.
[04:12:48.300 --> 04:12:50.300]  А как вы тогда найдете его с помощью своей оценки?
[04:12:50.300 --> 04:12:52.300]  Считайте так. Ну, во-первых, оценки
[04:12:52.300 --> 04:12:54.300]  делаются с привлечением
[04:12:54.300 --> 04:12:56.300]  профессионалов и может быть
[04:12:56.300 --> 04:12:58.300]  может быть где-то машинного
[04:12:58.300 --> 04:13:00.300]  обучения. Вот это раз.
[04:13:00.300 --> 04:13:02.300]  А во-вторых, точная оценка выводится не так.
[04:13:02.300 --> 04:13:04.300]  Это, я сказал, оценка позиций на глубине ноль.
[04:13:04.300 --> 04:13:06.300]  То есть, реально, стопич работает
[04:13:06.300 --> 04:13:08.300]  так. У него есть такая оценка,
[04:13:08.300 --> 04:13:10.300]  она как-то устроена там, как-то, да?
[04:13:10.300 --> 04:13:12.300]  Ну, у всех движков она как-то по-разному
[04:13:12.300 --> 04:13:14.300]  устроена, просто
[04:13:14.300 --> 04:13:16.300]  чем лучше позиция, тем
[04:13:16.300 --> 04:13:18.300]  лучше движок. А также,
[04:13:18.300 --> 04:13:20.300]  а потом на какую-то глубину h,
[04:13:20.300 --> 04:13:22.300]  заданную там, задаются
[04:13:22.300 --> 04:13:24.300]  пользователям, запускается вот
[04:13:24.300 --> 04:13:26.300]  это вот.
[04:13:26.300 --> 04:13:28.300]  Вот просто вот эти вот стандарты на альфа
[04:13:28.300 --> 04:13:30.300]  и переборы с отсечениями.
[04:13:30.300 --> 04:13:32.300]  Вот. То есть, дальше
[04:13:32.300 --> 04:13:34.300]  все зависит, точность
[04:13:34.300 --> 04:13:36.300]  анализа может зависеть, а, от оценки позиции,
[04:13:36.300 --> 04:13:38.300]  б, от производительности вашего компа.
[04:13:38.300 --> 04:13:40.300]  Ну, понятно, что программа
[04:13:40.300 --> 04:13:42.300]  устроена чуть сложнее, потому что она
[04:13:42.300 --> 04:13:44.300]  не просто лучший ход выдаст, она же вам
[04:13:44.300 --> 04:13:46.300]  обычно несколько лучших ходов выведет
[04:13:46.300 --> 04:13:48.300]  и выведет у каждого его оценки там и
[04:13:48.300 --> 04:13:50.300]  еще посчитает, куда там примерно, как надо ходить.
[04:13:50.300 --> 04:13:52.300]  Вот. Но общая суть
[04:13:52.300 --> 04:13:54.300]  там, соответственно, одна и та же.
[04:13:54.300 --> 04:13:56.300]  Ну, про эти рандомные запуски я не просто
[04:13:56.300 --> 04:13:58.300]  вам сказал. Правда, есть команда,
[04:13:58.300 --> 04:14:00.300]  новая программа катагома. И, короче,
[04:14:00.300 --> 04:14:02.300]  вот, она действительно не очень хорошо считает
[04:14:02.300 --> 04:14:04.300]  форсажи. То есть, выигрыши,
[04:14:04.300 --> 04:14:06.300]  которые вот, прям, вот, расставить.
[04:14:06.300 --> 04:14:08.300]  Но позиционно она просто
[04:14:08.300 --> 04:14:10.300]  сметает под ноль. То есть,
[04:14:10.300 --> 04:14:12.300]  она, как бы, позиционно тебя
[04:14:12.300 --> 04:14:14.300]  уделывает вот так вот.
[04:14:14.300 --> 04:14:16.300]  А потом можно сюда прикрутить просто какого-нибудь
[04:14:16.300 --> 04:14:18.300]  солвера, который сам уже
[04:14:18.300 --> 04:14:20.300]  конкретно считает форсажи.
[04:14:20.300 --> 04:14:22.300]  Вот. И тогда
[04:14:22.300 --> 04:14:24.300]  получается, типа, дикая смесь.
[04:14:24.300 --> 04:14:26.300]  Ну, вот. Ну, там по-разному можно.
[04:14:26.300 --> 04:14:28.300]  Потому что дальше все, конечно, кроется
[04:14:28.300 --> 04:14:30.300]  в оценке, но как ее строить, это вот отдельная
[04:14:30.300 --> 04:14:32.300]  песня. То есть, где-то рандомно, где-то
[04:14:32.300 --> 04:14:34.300]  оно, потому что какой-то диандекс в этом месте бы сказал,
[04:14:34.300 --> 04:14:36.300]  что давайте опросим там квалифицированных
[04:14:36.300 --> 04:14:38.300]  шахматистов. Каждый скажет там, типа,
[04:14:38.300 --> 04:14:40.300]  оценит эту позицию там в пользу белых,
[04:14:40.300 --> 04:14:42.300]  в пользу черных.
[04:14:42.300 --> 04:14:44.300]  Нет, это капча. Оцените
[04:14:44.300 --> 04:14:46.300]  шахматную позицию
[04:14:46.300 --> 04:14:48.300]  на шкале от нода 10.
[04:14:48.300 --> 04:14:50.300]  Ну, вот там. Ну, то есть, там
[04:14:50.300 --> 04:14:52.300]  будет что-то такое. То есть, где-то так. Ну, понятно,
[04:14:52.300 --> 04:14:54.300]  нет. Есть, в конце концов, может быть, нет. Есть, конечно,
[04:14:54.300 --> 04:14:56.300]  где-то к нейросетке машинное обучение.
[04:14:56.300 --> 04:14:58.300]  Потому что альфа-го, конечно, пошла дальше.
[04:14:58.300 --> 04:15:00.300]  То есть, мы там, ну, там машинки,
[04:15:00.300 --> 04:15:02.300]  то есть, ей там объяснили правила
[04:15:02.300 --> 04:15:04.300]  шахмат, называется, и там она
[04:15:04.300 --> 04:15:06.300]  четыре минуты там думала, пытаясь играть
[04:15:06.300 --> 04:15:08.300]  сама собой, анализируя.
[04:15:08.300 --> 04:15:10.300]  Четыре минуты? Четыре минуты.
[04:15:12.300 --> 04:15:14.300]  А как она вообще решение
[04:15:14.300 --> 04:15:16.300]  принимает? Ну, там нет.
[04:15:16.300 --> 04:15:18.300]  Ну, скажем так, об этом вы
[04:15:18.300 --> 04:15:20.300]  поговорите на курсе. Подробно там
[04:15:20.300 --> 04:15:22.300]  в альфа-го вы там поговорите на курсе
[04:15:22.300 --> 04:15:24.300]  машинного обучения, конечно.
[04:15:24.300 --> 04:15:26.300]  Загружает библиотека дебютов?
[04:15:26.300 --> 04:15:28.300]  Нет, нет.
[04:15:28.300 --> 04:15:30.300]  Утверждает, что они даже не загружали.
[04:15:30.300 --> 04:15:32.300]  Ну, нет. То есть, работать она будет совсем в тупую.
[04:15:32.300 --> 04:15:34.300]  Она будет анализировать типа так.
[04:15:34.300 --> 04:15:36.300]  Я сделал вот этот ход, и
[04:15:36.300 --> 04:15:38.300]  оказалось, что я поставил противнику мат. Значит,
[04:15:38.300 --> 04:15:40.300]  это крутой ход. Ура! Значит,
[04:15:40.300 --> 04:15:42.300]  наверное, в этой позиции надо всегда так делать.
[04:15:42.300 --> 04:15:44.300]  Потом следующая мысль. Так, если я пойду
[04:15:44.300 --> 04:15:46.300]  туда, то следующим ходом противник мне поставит
[04:15:46.300 --> 04:15:48.300]  плюс бесконечность. Так значит, так ходить
[04:15:48.300 --> 04:15:50.300]  не надо.
[04:15:50.300 --> 04:15:52.300]  Следующий раз, когда я попаду в эту позицию, так ходить
[04:15:52.300 --> 04:15:54.300]  не буду. Ну и так далее.
[04:15:54.300 --> 04:15:56.300]  Ну да, но дебюты в плане там слишком сложно...
[04:15:56.300 --> 04:15:58.300]  Нет, нет, нет. Утверждает,
[04:15:58.300 --> 04:16:00.300]  что альфа-го не загружала никаких дебютов,
[04:16:00.300 --> 04:16:02.300]  а просто ее обучали
[04:16:02.300 --> 04:16:04.300]  четыре минуты, и после этого она
[04:16:04.300 --> 04:16:06.300]  начала стокреж выносить.
[04:16:06.300 --> 04:16:08.300]  Ну, там не то, чтобы совсем под ноль,
[04:16:08.300 --> 04:16:10.300]  то есть, по-моему, стокреж сколько-то там партии из тысячи
[04:16:10.300 --> 04:16:12.300]  все-таки даже выиграл,
[04:16:12.300 --> 04:16:14.300]  но там их, по-моему, было их
[04:16:14.300 --> 04:16:16.300]  особо много. То есть, там все-таки
[04:16:16.300 --> 04:16:18.300]  альфа-го победила с явным преимуществом.
[04:16:18.300 --> 04:16:20.300]  Но, то есть, маленькая оговорка, что
[04:16:20.300 --> 04:16:22.300]  четыре минуты, но при этом
[04:16:22.300 --> 04:16:24.300]  использовались просто огромные мощности,
[04:16:24.300 --> 04:16:26.300]  то есть, условно говоря, там на вашем лаптопе
[04:16:26.300 --> 04:16:28.300]  вы это не сделаете.
[04:16:28.300 --> 04:16:30.300]  То есть, как бы, да.
[04:16:30.300 --> 04:16:32.300]  Ну,
[04:16:32.300 --> 04:16:34.300]  скорее, да,
[04:16:34.300 --> 04:16:36.300]  на очень большом количестве серверов Гугла.
[04:16:36.300 --> 04:16:38.300]  Там параллельно по всему миру
[04:16:38.300 --> 04:16:40.300]  и так далее.
[04:16:40.300 --> 04:16:42.300]  На своем компе вы это не повторите.
[04:16:44.300 --> 04:16:46.300]  Нет.
[04:16:46.300 --> 04:16:48.300]  Вот.
[04:16:48.300 --> 04:16:50.300]  Нет, ну пожалуйста, нет, пожалуйста,
[04:16:50.300 --> 04:16:52.300]  бери свой комп там, запускай, там может быть
[04:16:52.300 --> 04:16:54.300]  даже на трое суток запустить, а потом сравнись с альфа-го.
[04:16:54.300 --> 04:16:56.300]  Нет, в принципе, это на самом деле
[04:16:56.300 --> 04:16:58.300]  в этом есть какая-то магия действительно,
[04:16:58.300 --> 04:17:00.300]  что шахматистов восхищают, что есть
[04:17:00.300 --> 04:17:02.300]  шахматисты. Да, в том числе внутри
[04:17:02.300 --> 04:17:04.300]  шахматистов есть, там, понятно, есть слабые,
[04:17:04.300 --> 04:17:06.300]  есть сильные, есть сильнее, есть там
[04:17:06.300 --> 04:17:08.300]  grassmeister, есть междуродные grassmeister, есть там
[04:17:08.300 --> 04:17:10.300]  Карлсоны, да,
[04:17:10.300 --> 04:17:12.300]  а есть просто Марлос Карлсон, да.
[04:17:12.300 --> 04:17:14.460]  Ну, который, да, несмотря на потерю чемпионского
[04:17:14.460 --> 04:17:16.860]  титула, все равно сейчас считается тем не менее
[04:17:16.860 --> 04:17:17.860]  лучшим.
[04:17:17.860 --> 04:17:19.860]  А он просто отказался?
[04:17:19.860 --> 04:17:20.860]  Да.
[04:17:20.860 --> 04:17:23.340]  Нет, ну скажешь так, формально он не является чемпионом
[04:17:23.340 --> 04:17:24.340]  мира сейчас.
[04:17:24.340 --> 04:17:25.340]  Почему?
[04:17:25.340 --> 04:17:26.340]  Потому что он отказался защищать титул.
[04:17:26.340 --> 04:17:28.900]  Да, действующим чемпионом мира является китайский
[04:17:28.900 --> 04:17:30.060]  гроссмейстер Дин Лежень.
[04:17:30.060 --> 04:17:33.900]  Ну, это там в чемпионском матче сокрушивший там
[04:17:34.900 --> 04:17:37.340]  гроссмейстера Фиды Яны Непомящего.
[04:17:37.340 --> 04:17:38.340]  Садая.
[04:17:38.340 --> 04:17:47.020]  Не, ну я согласен, да, счет 3-2, конечно, это не тот счет,
[04:17:47.020 --> 04:17:50.260]  чтобы сказать, что прям сокрушил или там 3-2, по-моему.
[04:17:50.260 --> 04:17:53.820]  Не, нет, ну хорошо, победил, ладно.
[04:17:53.820 --> 04:17:58.380]  Не, ну я не знаю, но тут осторожно, я иногда начинаю,
[04:17:58.380 --> 04:18:02.260]  ну ты знаешь, иногда я в этом месте вообще начинаю
[04:18:02.260 --> 04:18:03.820]  использовать слово «грохнул».
[04:18:04.820 --> 04:18:08.780]  Ну вот, но там, я говорю, из этих 14 партий в чемпионском
[04:18:08.780 --> 04:18:10.740]  матче, по-моему, там счет был, по выигранным партиям
[04:18:10.740 --> 04:18:12.820]  был, по-моему, реально 3-2 или даже 4-3.
[04:18:12.820 --> 04:18:13.820]  Переяло.
[04:18:13.820 --> 04:18:18.780]  Ну вот, ладно, более корректно, ладно, обузрал, все, да,
[04:18:18.780 --> 04:18:19.780]  так произошло.
[04:18:19.780 --> 04:18:20.780]  Вот.
[04:18:20.780 --> 04:18:21.780]  И так же соответственно.
[04:18:21.780 --> 04:18:26.100]  Ну, просто магия в том, что есть это, а есть соответственно
[04:18:26.100 --> 04:18:27.100]  стоквиши.
[04:18:27.100 --> 04:18:30.260]  Ну там где-то, начиная с конца 90-х годов, действительно
[04:18:30.260 --> 04:18:31.580]  компьютеры стали играть сильнее человек.
[04:18:32.340 --> 04:18:34.700]  Да, это было не тривиально, потому что в середине 90-х
[04:18:34.700 --> 04:18:37.420]  годов на самом деле были даже просто матчи сильнейших
[04:18:37.420 --> 04:18:39.580]  компьютеров с сильнейшим шахматистом, который был
[04:18:39.580 --> 04:18:40.860]  на тот момент Гарри Каспаров.
[04:18:40.860 --> 04:18:45.140]  Более того, первый матч против Айбебовского компьютера
[04:18:45.140 --> 04:18:48.060]  на самом деле Гарри Каспаров даже выиграл.
[04:18:48.060 --> 04:18:49.060]  Вот.
[04:18:49.060 --> 04:18:52.540]  Но потом во втором матче шансов у него уже не было.
[04:18:52.540 --> 04:18:55.580]  Ну ладно, там 6-4 все-таки было.
[04:18:55.580 --> 04:18:59.860]  Не-не-не, нет, нет, все он как бы все адекватно делал,
[04:18:59.940 --> 04:19:03.460]  все-таки там уже было, первый раз, если компьютер там еще
[04:19:03.460 --> 04:19:05.900]  как-то готовился, то есть его там пугали программу,
[04:19:05.900 --> 04:19:08.420]  то есть программу еще относительно скрывали и так далее.
[04:19:08.420 --> 04:19:10.820]  Но он, правда, тоже к этому матчу готовился, то есть
[04:19:10.820 --> 04:19:13.100]  он там знал, что там понятно, в этот компьютер книгу дебютов
[04:19:13.100 --> 04:19:15.700]  точно загрузят и так далее, поэтому, конечно, у него
[04:19:15.700 --> 04:19:18.820]  была задача там наоборот поставить компьютеру позиции,
[04:19:18.820 --> 04:19:20.740]  с которой он там анализировал с меньшей вероятностью
[04:19:20.740 --> 04:19:21.740]  и все такое.
[04:19:21.740 --> 04:19:23.340]  То есть где-то так запутать.
[04:19:23.340 --> 04:19:24.340]  Вот.
[04:19:24.340 --> 04:19:25.740]  Но потом во втором матче он выиграл, даже несмотря
[04:19:25.740 --> 04:19:28.220]  на то, что ему просто торжественно дали дискетус, или что там
[04:19:28.300 --> 04:19:30.140]  у него было с программой, которую он там мог сидеть
[04:19:30.140 --> 04:19:31.740]  гонять дома, не помогло.
[04:19:31.740 --> 04:19:34.580]  То есть начиная, видимо, примерно с этого момента
[04:19:34.580 --> 04:19:37.180]  компьютеры уже стали заведомо сильнее и как бы превратились
[04:19:37.180 --> 04:19:38.380]  уже в инструмент анализа.
[04:19:38.380 --> 04:19:39.380]  Вот.
[04:19:39.380 --> 04:19:41.300]  Но при этом выясняется, что да, у нас есть стокфиши
[04:19:41.300 --> 04:19:43.580]  разных модификаций, то есть они тоже там растут по
[04:19:43.580 --> 04:19:44.580]  уровню.
[04:19:44.580 --> 04:19:49.180]  Да, то есть они заведомо, типа, вот выше всех мелковых
[04:19:49.180 --> 04:19:51.820]  шахматистов, но при этом есть еще альфа-го, который
[04:19:51.820 --> 04:19:52.820]  еще круче играет.
[04:19:52.820 --> 04:19:54.820]  Который сам мелковых шахматистов.
[04:19:54.820 --> 04:19:57.540]  Нет, то есть это, нет, то есть это просто всех уже
[04:19:57.540 --> 04:19:58.540]  восхищает.
[04:19:58.540 --> 04:20:01.340]  Не, если бы он, наоборот, превосходит мелковых шахматистов
[04:20:01.340 --> 04:20:03.340]  прям на, уже там, в инцельголов.
[04:20:03.340 --> 04:20:04.340]  Нет.
[04:20:04.340 --> 04:20:06.540]  То есть парадокс в том, что при этом как бы шахма
[04:20:06.540 --> 04:20:09.100]  это какая-то простая игра, в которой у игроков есть
[04:20:09.100 --> 04:20:11.980]  непроигрышная стратегия, или у какого-то игроков есть
[04:20:11.980 --> 04:20:15.260]  выигрышная стратегия, я не знаю, как мы с вами это
[04:20:15.260 --> 04:20:17.180]  доказали, собственно, простым образом.
[04:20:17.180 --> 04:20:21.980]  Но, то есть как бы по идее у этой науки чисто теоретически
[04:20:21.980 --> 04:20:22.980]  есть конец.
[04:20:22.980 --> 04:20:27.500]  То есть можно о шахматах все понять, но, как говорится,
[04:20:27.500 --> 04:20:31.140]  до этого еще ступеньки, и ступеньки, и ступеньки.
[04:20:31.140 --> 04:20:32.140]  Вот.
[04:20:32.140 --> 04:20:35.500]  Но, тем не менее, соответственно, но, собственно, вот тут мы
[04:20:35.500 --> 04:20:37.700]  немножко поговорили о том, как они устроены.
[04:20:37.700 --> 04:20:46.060]  Ага, да, да, да, так и рассказать, да, да, да, да, учебник Гарри
[04:20:46.060 --> 04:20:48.860]  Каспаров, «Шахматы как модель жизни», да, да, да, или
[04:20:48.860 --> 04:20:52.020]  любая другая еще книжка Каспарова там, да, ладно.
[04:20:52.020 --> 04:20:54.820]  Так, ну, конечно, в этом месте, конечно, нам пришло время
[04:20:54.820 --> 04:20:56.140]  сделать перерыв, судя по времени.
[04:20:56.140 --> 04:21:00.660]  Во-первых, вам нужно было хотя бы там тупую ботовую
[04:21:00.660 --> 04:21:03.500]  стратегию хотя бы победить, ну, она там почти тупая,
[04:21:03.500 --> 04:21:05.780]  ее там побеждает почти все что угодно, то есть это
[04:21:05.780 --> 04:21:06.780]  квалификация.
[04:21:06.780 --> 04:21:08.300]  Чтобы прошел квалификацию, пошел балл.
[04:21:08.300 --> 04:21:09.300]  Вот.
[04:21:09.300 --> 04:21:12.660]  А потом после этого, значит, среди всех прошедших, ну,
[04:21:12.660 --> 04:21:16.820]  последних версий, забабахивается турнир, и, соответственно,
[04:21:16.820 --> 04:21:19.340]  вы получаете за него от нуля до двух зачетных баллов
[04:21:19.340 --> 04:21:21.500]  в зависимости от доли побед, которые вы одержали.
[04:21:21.500 --> 04:21:22.500]  Вот.
[04:21:22.500 --> 04:21:25.900]  У нас такой турнир веселый был.
[04:21:26.580 --> 04:21:27.580]  Вот.
[04:21:27.580 --> 04:21:31.100]  То есть пока, пока, судя по всему, да, там абсолютным
[04:21:31.100 --> 04:21:35.500]  чемпионом является, называется товарищ Павел Храмович,
[04:21:35.500 --> 04:21:36.500]  если вы такого знаете.
[04:21:36.500 --> 04:21:39.980]  Ну, в общем, да, очень маловероятно, потому что, да, Павел Храмович,
[04:21:39.980 --> 04:21:44.260]  ой, это на год старший Илья Степанова, а не, или, ну,
[04:21:44.260 --> 04:21:46.780]  да, да, да, вот это мое первое поколение студентов Дакар
[04:21:46.780 --> 04:21:49.660]  Гальцев, там, Храмович, там и так далее, вот все эти
[04:21:49.660 --> 04:21:50.660]  люди.
[04:21:50.660 --> 04:21:52.940]  А, и Костя Семенов, конечно.
[04:21:52.940 --> 04:21:53.940]  Вот.
[04:21:53.980 --> 04:21:57.140]  Но, но, но, но этих всех, но этих всех людей прошлого
[04:21:57.140 --> 04:21:59.780]  вы, естественно, уже не знаете, да, то есть потом
[04:21:59.780 --> 04:22:01.580]  уже там появились всякие там, то есть на следующем
[04:22:01.580 --> 04:22:03.780]  поколении уже появились там Женя, там Женя Белых,
[04:22:03.780 --> 04:22:06.980]  там Илья Степанов, там Андрей Сергунин, там и так далее.
[04:22:06.980 --> 04:22:07.980]  Вот.
[04:22:07.980 --> 04:22:13.180]  Ну, да, это все, я говорю, это 14-15 год, это все.
[04:22:13.180 --> 04:22:14.180]  Так.
[04:22:14.180 --> 04:22:15.180]  Ладно.
[04:22:15.180 --> 04:22:16.180]  Идем дальше.
[04:22:16.180 --> 04:22:17.180]  Все?
[04:22:17.180 --> 04:22:18.180]  Все.
[04:22:18.180 --> 04:22:19.180]  А.
[04:22:19.180 --> 04:22:20.180]  Ну, тут.
[04:22:20.420 --> 04:22:24.220]  Ну, с розетками тут, да, напряг.
[04:22:24.220 --> 04:22:25.220]  А, ура.
[04:22:25.220 --> 04:22:26.220]  Ну, хорошо.
[04:22:26.220 --> 04:22:28.220]  Значит, смотрите, что будет дальше.
[04:22:28.220 --> 04:22:29.220]  Так.
[04:22:29.220 --> 04:22:32.220]  Ну, теперь мы будем решать задачу, которую когда-то
[04:22:32.220 --> 04:22:33.220]  уже решали.
[04:22:33.220 --> 04:22:36.220]  Ну, хотя ладно, принципиально других задач у нас особо
[04:22:36.220 --> 04:22:37.220]  и нету.
[04:22:37.220 --> 04:22:38.220]  Вот.
[04:22:38.220 --> 04:22:41.220]  То есть сейчас мы будем искать минимальный разрез
[04:22:41.220 --> 04:22:42.220]  в графе.
[04:22:42.220 --> 04:22:47.220]  Ну, и, и, и, и, и, и, и, и, и, и, и, и, и, и, и, и, и, и,
[04:22:47.220 --> 04:22:49.220]  и, и, и, и, и, и, и, и, и, и, и, и, и, и, и, и, и, и, и, и, и,
[04:22:49.260 --> 04:22:50.260]  Вот.
[04:22:50.260 --> 04:22:51.260]  Да.
[04:22:51.260 --> 04:22:54.260]  Но без вот этого бодслеса.
[04:22:54.260 --> 04:22:56.260]  Потому что мы не будем писать потоки.
[04:22:56.260 --> 04:22:59.260]  Да мы и не написали.
[04:22:59.260 --> 04:23:00.260]  Молодцы.
[04:23:00.260 --> 04:23:03.260]  Ну, что я могу сказать.
[04:23:03.260 --> 04:23:04.260]  Молодцы.
[04:23:04.260 --> 04:23:05.260]  Вот.
[04:23:05.260 --> 04:23:08.020]  Но мы рассмотрим задачу даже в более простенькой
[04:23:08.020 --> 04:23:09.020]  редакции.
[04:23:09.020 --> 04:23:13.500]  Мы будем искать минимальный разрез в невзвешенном
[04:23:13.500 --> 04:23:14.500]  графе.
[04:23:14.500 --> 04:23:21.500]  То есть, короче, дан неориентированный, невзвешенный граф.
[04:23:21.500 --> 04:23:25.460]  То есть там, величиной разреза называется просто
[04:23:25.460 --> 04:23:27.460]  сколько ребер его пересекает прям в тупую.
[04:23:27.460 --> 04:23:30.460]  Задача – найдите минимальный разрез.
[04:23:30.460 --> 04:23:33.460]  То есть разделите вершины на два.
[04:23:33.460 --> 04:23:38.460]  Ну, не то чтобы.
[04:23:38.460 --> 04:23:40.460]  Нет, я бы сказал просто там.
[04:23:40.460 --> 04:23:43.460]  То есть найдите минимальный разрез.
[04:23:44.420 --> 04:23:47.420]  Назовем нож рёбер мостом, если при удалении его теряется
[04:23:47.420 --> 04:23:48.420]  связанность.
[04:23:48.420 --> 04:23:49.420]  Ага, найдите мост.
[04:23:49.420 --> 04:23:50.420]  Хорошо, да.
[04:23:50.420 --> 04:23:51.420]  Ну, можно сказать, да.
[04:23:51.420 --> 04:23:52.420]  Найдите мост минимального размера.
[04:23:52.420 --> 04:23:55.420]  Это капа, капа из дисконата.
[04:23:55.420 --> 04:23:56.420]  Ну, да.
[04:23:56.420 --> 04:23:59.420]  Ну, К-мост, да.
[04:23:59.420 --> 04:24:00.420]  Ну, да, да, да.
[04:24:00.420 --> 04:24:02.420]  Нет, но мы про это всё что-то знаем.
[04:24:02.420 --> 04:24:04.420]  Да, мы знаем, что у нас есть даже компоненты рёберных
[04:24:04.420 --> 04:24:06.420]  связанностей на самом деле.
[04:24:06.420 --> 04:24:09.420]  По-моему, мы с него оценивали Альфа-Ж.
[04:24:09.420 --> 04:24:10.420]  Возможно, да.
[04:24:10.420 --> 04:24:11.420]  Ну, может быть.
[04:24:11.420 --> 04:24:12.420]  Может быть.
[04:24:13.380 --> 04:24:16.380]  Ну, кайфец.
[04:24:16.380 --> 04:24:17.380]  Ну, по-разному, да.
[04:24:17.380 --> 04:24:18.380]  Оно везде.
[04:24:18.380 --> 04:24:20.580]  На кубке МФТ мы выясняли, что у нас есть понятие рёберная
[04:24:20.580 --> 04:24:21.580]  связанность.
[04:24:21.580 --> 04:24:25.580]  Вывод мы этот сделали из структуры дерева Гамариху
[04:24:25.580 --> 04:24:26.580]  внезапно.
[04:24:26.580 --> 04:24:27.580]  Соответственно.
[04:24:27.580 --> 04:24:28.580]  Ну, вот.
[04:24:28.580 --> 04:24:31.580]  Значит, как тут искать?
[04:24:31.580 --> 04:24:36.580]  Ну, тут мы ей не предлагаем этими умными словами бросаться,
[04:24:36.580 --> 04:24:40.580]  а предлагаем вместо этого делать очень простую вещь.
[04:24:40.580 --> 04:24:41.580]  Смотрите.
[04:24:41.740 --> 04:24:44.740]  А давайте возьмём рандомное ребро.
[04:24:44.740 --> 04:24:47.740]  Вот возьмём какое-то первое попавшееся рандомное ребро
[04:24:47.740 --> 04:24:53.740]  и скажем, что оно в разрезе точно не лежит.
[04:24:53.740 --> 04:24:56.740]  Потому что я сказал.
[04:24:56.740 --> 04:24:59.140]  Ну, раз оно точно не лежит, так давайте эти две вершины
[04:24:59.140 --> 04:25:00.140]  сожмём в одну.
[04:25:00.140 --> 04:25:03.140]  Ну, это уже напоминает Гамариху.
[04:25:03.140 --> 04:25:06.140]  Не, ну почему Гамариху?
[04:25:06.140 --> 04:25:09.140]  Там убрали тоже ребро и сжимали вершину.
[04:25:09.140 --> 04:25:11.140]  Нет, там Гамариху не совсем так.
[04:25:11.700 --> 04:25:13.700]  Гамариху говорила, давайте найдём разрез между какими-то
[04:25:13.700 --> 04:25:14.700]  двумя вершинами.
[04:25:14.700 --> 04:25:17.700]  Получился такой большой разрез.
[04:25:17.700 --> 04:25:19.700]  И тогда говорила, что если мы ищем теперь разрез между
[04:25:19.700 --> 04:25:22.700]  двумя вершинами с одной стороны, то другую сторону сжимаем
[04:25:22.700 --> 04:25:23.700]  до вершины.
[04:25:23.700 --> 04:25:24.700]  Здесь Гамариху.
[04:25:24.700 --> 04:25:25.700]  Здесь немножко другое.
[04:25:25.700 --> 04:25:29.700]  Здесь мы взяли рандомное ребро и сказали, так оно
[04:25:29.700 --> 04:25:32.700]  в разрезе не лежит, давайте его сжимаем.
[04:25:32.700 --> 04:25:33.700]  А что делаем дальше?
[04:25:33.700 --> 04:25:35.700]  Так, ну что мы легко сделали?
[04:25:35.700 --> 04:25:38.700]  Мы же рандомное ребро за УАПЕ, наверное, находим
[04:25:38.700 --> 04:25:39.700]  и сжимаем, да?
[04:25:40.260 --> 04:25:43.260]  Е, это как минимум В-1, потому что если граф не связанный,
[04:25:43.260 --> 04:25:46.260]  то соответственно ответ сразу ноль.
[04:25:46.260 --> 04:25:50.260]  А если Е равно В-1, то он ещё дерево, и тогда ответ один.
[04:25:54.260 --> 04:25:56.260]  Либо Е больше, либо равно В, и вместо В плюс Е
[04:25:56.260 --> 04:25:57.260]  всегда пишем Е.
[04:25:59.260 --> 04:26:03.260]  Так вот, за УАПЕ мы находим рандомное ребро и сжимаем
[04:26:03.260 --> 04:26:04.260]  его.
[04:26:04.260 --> 04:26:05.260]  Так, что делать дальше?
[04:26:05.260 --> 04:26:06.260]  А что?
[04:26:06.260 --> 04:26:07.260]  Ну очень легко делается.
[04:26:07.340 --> 04:26:10.820]  Давайте ещё раз это сделаем, вот это сожмём.
[04:26:12.260 --> 04:26:15.260]  И вот это сожмём.
[04:26:15.260 --> 04:26:18.260]  Ну вот это сожмём, ну типа и это сажалось.
[04:26:18.960 --> 04:26:19.960]  А потом вот это сожмём.
[04:26:24.680 --> 04:26:27.680]  Вот.
[04:26:27.680 --> 04:26:28.680]  Ну вот.
[04:26:28.680 --> 04:26:33.220]  Ещё сожмём вот это, и вот, ой у нас две вершины
[04:26:33.220 --> 04:26:34.220]  осталось.
[04:26:34.220 --> 04:26:40.220]  Так, утверждение, этот разрез будем считать минимальным.
[04:26:40.220 --> 04:26:42.220]  Чего?
[04:26:42.220 --> 04:26:44.220]  Вот.
[04:26:44.220 --> 04:26:46.220]  Нет, сколько раз запускаться?
[04:26:46.220 --> 04:26:48.220]  В-2.
[04:26:48.220 --> 04:26:52.220]  В-2 сжатия надо запустить, чтобы получилось две метовершины.
[04:26:52.220 --> 04:26:55.220]  Вот и говорим, этот разрез минимальный.
[04:26:55.220 --> 04:27:00.220]  Нет, в плане, сколько раз вот это...
[04:27:00.220 --> 04:27:02.220]  Так, ну вот давайте теперь анализировать.
[04:27:02.220 --> 04:27:03.220]  В чем прикол?
[04:27:03.220 --> 04:27:05.220]  Да, у нас же вероятность алгоритма, поэтому это означает,
[04:27:05.220 --> 04:27:09.220]  что мы верим, что с хорошей вероятностью нам повезет,
[04:27:09.220 --> 04:27:11.220]  и это будет реально минимальный разрез.
[04:27:15.220 --> 04:27:17.220]  Давайте оценим, с какой.
[04:27:19.220 --> 04:27:21.220]  Как нам это оценить?
[04:27:23.220 --> 04:27:25.220]  Давайте подумаем.
[04:27:25.220 --> 04:27:29.220]  Теперь давайте предположим, что у нас V-вершин, E-рёбер,
[04:27:29.220 --> 04:27:31.220]  и есть ответ ans.
[04:27:31.220 --> 04:27:36.220]  Не надо просто оценить мотожидание числа Греберна,
[04:27:36.220 --> 04:27:38.220]  и ты найдешь один?
[04:27:38.220 --> 04:27:41.220]  Нет, мы не будем оценивать мотожидание.
[04:27:41.220 --> 04:27:46.220]  Это у нас будет алгоритм, на самом деле, из Монте-Карла.
[04:27:46.220 --> 04:27:48.220]  То есть он всегда быстро работает.
[04:27:48.220 --> 04:27:50.220]  Видите, тут мотожидания во времени нет.
[04:27:50.220 --> 04:27:54.220]  Но нам будет интересно, с какой вероятностью он ошибется.
[04:27:54.220 --> 04:27:56.220]  Или, наоборот, сработает.
[04:27:56.220 --> 04:27:58.220]  А теперь давайте подумаем.
[04:27:58.220 --> 04:28:02.220]  С какой вероятностью, например, на самом первом шаге
[04:28:02.220 --> 04:28:06.220]  он все-таки тяпнет ребро из разреза?
[04:28:09.220 --> 04:28:11.220]  Да, ans делить на E.
[04:28:13.220 --> 04:28:18.220]  Я утверждаю, что ans поделить на E можно сверху оценить.
[04:28:20.220 --> 04:28:26.220]  Потому что, чтобы ответ был ans, ребер должно быть достаточно много.
[04:28:28.220 --> 04:28:30.220]  Заметьте маленькое приятное свойство.
[04:28:30.220 --> 04:28:33.220]  Я утверждаю, что степень каждой вершины хотя бы ans.
[04:28:39.220 --> 04:28:43.220]  Потому что есть такие разрезы, одна вершина и все остальное.
[04:28:43.220 --> 04:28:47.220]  Величина этого разреза, соответственно, степень вершины.
[04:28:47.220 --> 04:28:50.220]  Следовательно, степень вершин, как минимум ans.
[04:28:53.220 --> 04:28:55.220]  Вывод очень простой.
[04:28:56.220 --> 04:29:01.220]  Тогда получается, что такое сумма степеней всех вершин?
[04:29:01.220 --> 04:29:03.220]  Вот по всем вершинам V.
[04:29:03.220 --> 04:29:05.220]  С одной стороны, она равна 2E.
[04:29:05.220 --> 04:29:08.220]  Потому что каждый ребро мы учили два раза.
[04:29:08.220 --> 04:29:13.220]  С другой стороны, она больше либо равна, чем ans умножить на V.
[04:29:15.220 --> 04:29:17.220]  Вывод очень простой.
[04:29:19.220 --> 04:29:24.220]  ans делить на E меньше либо равен, чем 2 делить на V.
[04:29:25.220 --> 04:29:30.220]  Внезапно.
[04:29:30.220 --> 04:29:33.220]  Не такая большая вероятность, кстати, да?
[04:29:35.220 --> 04:29:36.220]  Получается, да.
[04:29:36.220 --> 04:29:38.220]  У нас там, допустим, тысячи вершин.
[04:29:38.220 --> 04:29:40.220]  Пожалуйста, это все равно 1,5.
[04:29:40.220 --> 04:29:42.220]  Мы на первом шаге ошибемся.
[04:29:44.220 --> 04:29:47.220]  Но мы кроты дотошные.
[04:29:47.220 --> 04:29:51.220]  Мы начинаем считать, а сколько это зерна в год.
[04:29:52.220 --> 04:29:57.220]  Ну, давайте подумаем, с какой вероятностью мы не ошибемся.
[04:30:00.220 --> 04:30:01.220]  Мы не ошибемся.
[04:30:01.220 --> 04:30:06.220]  Нет, мы не ошибемся на первом шаге с вероятностью 1-2 делить на V.
[04:30:08.220 --> 04:30:12.220]  Но проблема в том, что надо бы еще мало не ошибиться на первом шаге.
[04:30:12.220 --> 04:30:14.220]  Надо не ошибиться на остальных шагах.
[04:30:14.220 --> 04:30:19.220]  Ну, и теперь надо оценить, сколько у нас стянулось ребра.
[04:30:20.220 --> 04:30:21.220]  Нет, даже не надо.
[04:30:21.220 --> 04:30:22.220]  Нет, зачем?
[04:30:22.220 --> 04:30:23.220]  Не надо.
[04:30:23.220 --> 04:30:26.220]  У нас сколько-то ребр стянулось, но оценка-то будет та же.
[04:30:28.220 --> 04:30:31.220]  То есть ответ поделить, насколько ребр там останется после первого шага,
[04:30:31.220 --> 04:30:34.220]  будет не превосходить 2 поделить, насколько там вершин.
[04:30:34.220 --> 04:30:35.220]  То есть уже E-1.
[04:30:35.220 --> 04:30:37.220]  Мы все кратные ребра удаляем?
[04:30:38.220 --> 04:30:39.220]  Нет.
[04:30:39.220 --> 04:30:40.220]  Почему нет?
[04:30:40.220 --> 04:30:41.220]  Они важны.
[04:30:41.220 --> 04:30:44.220]  Потому что каждое кратное ребро дает вклад 1 в разрез.
[04:30:44.220 --> 04:30:46.220]  Поэтому кратные ребра мы не удаляем.
[04:30:46.220 --> 04:30:51.220]  Но правда, если у вас появлялась петля, то да, ее мы, конечно, игнорируем.
[04:30:52.220 --> 04:30:53.220]  Но это неважно.
[04:30:53.220 --> 04:30:56.220]  Эта оценка устроена так, что нам абсолютно неважно,
[04:30:56.220 --> 04:30:59.220]  сжались ребра на предыдущих шагах или нет.
[04:31:00.220 --> 04:31:06.220]  В предположении, что мы не задели ответ, ответ не поменялся.
[04:31:07.220 --> 04:31:08.220]  О, и там, типа, шансы E.
[04:31:08.220 --> 04:31:09.220]  Это запрет.
[04:31:10.220 --> 04:31:11.220]  Нет, погодите.
[04:31:11.220 --> 04:31:12.220]  Нет, нет, нет, нет, нет.
[04:31:12.220 --> 04:31:13.220]  Нет, ни в коем случае.
[04:31:14.220 --> 04:31:17.220]  Потому что, смотрите, вероятность того, что на первом шаге,
[04:31:17.220 --> 04:31:19.220]  вероятность того, что мы не ошиблись, вот такая.
[04:31:20.220 --> 04:31:21.220]  Чтобы нет.
[04:31:21.220 --> 04:31:22.220]  А теперь, смотри.
[04:31:22.220 --> 04:31:25.220]  Дело в том, что чтобы мы не ошиблись на втором шаге,
[04:31:25.220 --> 04:31:27.220]  там должно быть 2 на V-1.
[04:31:28.220 --> 04:31:29.220]  А зачем?
[04:31:30.220 --> 04:31:31.220]  Это будет более точная оценка.
[04:31:32.220 --> 04:31:33.220]  Так хватает чего?
[04:31:33.220 --> 04:31:34.220]  Хватает чего?
[04:31:34.220 --> 04:31:37.220]  Просто если в степени в этом возрасте это уже меньше,
[04:31:37.220 --> 04:31:40.220]  чем 1,9E2.
[04:31:41.220 --> 04:31:42.220]  Это уже мало.
[04:31:45.220 --> 04:31:46.220]  Нет, это не 1,9.
[04:31:47.220 --> 04:31:49.220]  Нет, если это оценить как...
[04:31:50.220 --> 04:31:51.220]  Ну, давай так.
[04:31:51.220 --> 04:31:52.220]  Что считать проще, это еще вопрос.
[04:31:53.220 --> 04:31:54.220]  Ну да.
[04:31:58.220 --> 04:31:59.220]  Значит, смотрите.
[04:32:00.220 --> 04:32:01.220]  Фишка такая.
[04:32:01.220 --> 04:32:02.220]  Нет, с форолером так.
[04:32:03.220 --> 04:32:04.220]  Что за бредятина?
[04:32:04.220 --> 04:32:05.220]  Почему бредятина?
[04:32:06.220 --> 04:32:08.220]  Нет, ну опять-таки можно, конечно, сказать,
[04:32:08.220 --> 04:32:09.220]  вот, видимо, Ваня нам предлагает сказать,
[04:32:09.220 --> 04:32:14.220]  что это больше либо равно, чем 1-2 делить на V в степени V-2, да?
[04:32:14.220 --> 04:32:15.220]  Это же абсолютно неправда.
[04:32:17.220 --> 04:32:21.220]  Очевидно, нас одна треть меньше, чем V-2.
[04:32:24.220 --> 04:32:26.220]  Мы не с той стороны оцениваем.
[04:32:26.220 --> 04:32:29.220]  Да, ну зачем нам эту штуку оценивать сверху?
[04:32:29.220 --> 04:32:30.220]  Мы ее должны снизу оценивать.
[04:32:31.220 --> 04:32:32.220]  Потому что это типа вера...
[04:32:33.220 --> 04:32:34.220]  Мы оцениваем это снизу.
[04:32:34.220 --> 04:32:35.220]  То есть мы пытаемся оценить,
[04:32:35.220 --> 04:32:37.220]  что вероятность того, что мы не ошиблись,
[04:32:37.220 --> 04:32:39.220]  не меньше, чем вот столько.
[04:32:40.220 --> 04:32:42.220]  Вот так-то это один вариант.
[04:32:42.220 --> 04:32:43.220]  Вот.
[04:32:45.220 --> 04:32:47.220]  Нет, эти мотивы, вот эти мотивы, конечно,
[04:32:47.220 --> 04:32:49.220]  у нас будут проявляться, но не сейчас.
[04:32:50.220 --> 04:32:54.220]  Мы ошибемся гарантированно с вероятностью хотя бы 1-1 делить на E2.
[04:32:55.220 --> 04:32:57.220]  Ну, погодите, спокойно.
[04:32:57.220 --> 04:33:02.220]  Это вероятность того, что мы не ошибаемся.
[04:33:03.220 --> 04:33:05.220]  Но это равно, на самом деле, к чему.
[04:33:05.220 --> 04:33:08.220]  Если вот тут единичку занести в числитель,
[04:33:08.220 --> 04:33:12.220]  то получится вот такая интеллектуальная штука.
[04:33:16.220 --> 04:33:18.220]  Нет, не пам-пам-пам, а шлеп-шлеп.
[04:33:21.220 --> 04:33:22.220]  Вот.
[04:33:23.220 --> 04:33:25.220]  Шлеп-шлеп, шлеп-шлеп, шлеп-шлеп, шлеп-шлеп.
[04:33:28.220 --> 04:33:29.220]  2 поделим.
[04:33:30.220 --> 04:33:33.220]  А ты хотел бы большую вероятность таким алгоритмом получать?
[04:33:34.220 --> 04:33:35.220]  Это же лажа какая-то.
[04:33:36.220 --> 04:33:37.220]  Но не самая плохая вероятность.
[04:33:38.220 --> 04:33:39.220]  Запускаем заходы от раз.
[04:33:40.220 --> 04:33:41.220]  Вот.
[04:33:42.220 --> 04:33:43.220]  Ну, давайте так.
[04:33:44.220 --> 04:33:45.220]  Ну, тогда смотрите.
[04:33:46.220 --> 04:33:48.220]  Получается следующее, смотрите.
[04:33:49.220 --> 04:33:52.220]  Если мы запустим этот алгоритм с вероятостью не менее,
[04:33:52.220 --> 04:33:56.220]  чем вот столько, этот алгоритм даст правильный ответ.
[04:33:58.220 --> 04:34:01.220]  Но тогда, так как этот алгоритм, типа, найдете минимальный разрез,
[04:34:01.220 --> 04:34:06.220]  то есть такая опция «запустите этот алгоритм с раз».
[04:34:09.220 --> 04:34:12.220]  И тогда вероятность, и просто из всех ответов,
[04:34:12.220 --> 04:34:16.220]  которые эти с раз будут предложены, выберем минимальный.
[04:34:18.220 --> 04:34:21.220]  Тогда заметим, что вероятность ошибки,
[04:34:21.220 --> 04:34:25.220]  то есть даже что после с запусков будет немного запусков,
[04:34:25.220 --> 04:34:31.220]  она не будет превосходить 1-2 делить на v квадрат в степени c.
[04:34:35.220 --> 04:34:36.220]  Но тут какая идея?
[04:34:36.220 --> 04:34:39.220]  Давайте скажем, что c равно v квадрат пополам.
[04:34:42.220 --> 04:34:49.220]  Тогда по ошибке от v квадрат пополам приблизительно равно 1 делить на e.
[04:34:49.220 --> 04:34:57.220]  Почему у нас вероятность по ошибке?
[04:34:59.220 --> 04:35:00.220]  Ну, предположим.
[04:35:04.220 --> 04:35:07.220]  Это вероятность того, что мы не ошибемся с раз,
[04:35:07.220 --> 04:35:09.220]  если не меньше 100.
[04:35:11.220 --> 04:35:13.220]  Да, вот эта штука приблизительно 1 делить на e,
[04:35:13.220 --> 04:35:16.220]  потому что мы знаем, что 1-1 делить на x в степени x
[04:35:16.220 --> 04:35:19.220]  при x, стремящемся к бесконечности,
[04:35:19.220 --> 04:35:21.220]  стремится к 1 делить на e.
[04:35:21.220 --> 04:35:24.220]  Это мы вот откуда-то из вашего мотоанализа знаем.
[04:35:25.220 --> 04:35:27.220]  Кстати, откуда оно стремится отдельной песне,
[04:35:27.220 --> 04:35:30.220]  потому что оно там сверху стремится.
[04:35:32.220 --> 04:35:34.220]  Нет, оно монотонно.
[04:35:36.220 --> 04:35:40.220]  1 плюс 1 в степени n монотонно стремится к e снизу.
[04:35:40.220 --> 04:35:41.220]  Снизу?
[04:35:43.220 --> 04:35:44.220]  Минус?
[04:35:44.220 --> 04:35:46.220]  Нет, вот я точно знаю.
[04:35:46.220 --> 04:35:48.220]  1 плюс 1 делить на n степени n, да,
[04:35:48.220 --> 04:35:50.220]  она стремится к e, причем снизу.
[04:35:50.220 --> 04:35:51.220]  Это я знаю.
[04:35:51.220 --> 04:35:53.220]  Можно оценить, откуда стремится эта штука.
[04:35:53.220 --> 04:35:55.220]  Тоже монотонно, очевидно, или нет, или нет.
[04:35:55.220 --> 04:35:57.220]  Да, но вопрос откуда?
[04:35:57.220 --> 04:35:58.220]  Давайте так.
[04:35:58.220 --> 04:36:00.220]  Производная у нее какая?
[04:36:01.220 --> 04:36:02.220]  x линум.
[04:36:02.220 --> 04:36:04.220]  Охреново знает, какая у нее производная.
[04:36:07.220 --> 04:36:10.220]  Это там как-то глинисто очень доказывалось
[04:36:10.220 --> 04:36:15.220]  до всяких преисходных, до вообще всего.
[04:36:17.220 --> 04:36:19.220]  Какая разница, откуда стремится?
[04:36:20.220 --> 04:36:22.220]  Нет, ну так, но пошел бы оценивать адекватно.
[04:36:22.220 --> 04:36:24.220]  Потому что хочется оценивать, что эта штука
[04:36:24.220 --> 04:36:26.220]  всегда не превосходит 1 делить на e, поэтому кайф.
[04:36:26.220 --> 04:36:29.220]  На самом деле, если мы взойдем в n плюс 1 степень,
[04:36:29.220 --> 04:36:31.220]  то это будет уже стремиться к e сверху.
[04:36:34.220 --> 04:36:35.220]  Да? Точно?
[04:36:35.220 --> 04:36:36.220]  Да.
[04:36:36.220 --> 04:36:37.220]  Ну хорошо.
[04:36:37.220 --> 04:36:39.220]  Поэтому там ошибка типа в n плюс 1 и n то и раз.
[04:36:40.220 --> 04:36:42.220]  А, ну здесь-то да.
[04:36:43.220 --> 04:36:44.220]  Вот, ну хорошо.
[04:36:46.220 --> 04:36:47.220]  Ну вопрос здесь.
[04:36:47.220 --> 04:36:49.220]  Ну здесь хорошо, приблизительно 1 делить на e.
[04:36:49.220 --> 04:36:51.220]  Поэтому идея такая.
[04:36:51.220 --> 04:36:54.220]  То есть приятно, что 1 делить на e это какая-то константа.
[04:36:55.220 --> 04:36:57.220]  Да, там 1 делить на 2, то есть порядка получится
[04:36:57.220 --> 04:37:00.220]  что-то типа между 0,3 и 0,4, но соответственно.
[04:37:00.220 --> 04:37:02.220]  Ну и тогда возникает идея, что давайте запускать
[04:37:02.220 --> 04:37:06.220]  в квадрат пополам на, там, я не знаю, d раз.
[04:37:06.220 --> 04:37:09.220]  И получать вероятность ошибки не более, чем 1 делить на e
[04:37:09.220 --> 04:37:10.220]  в степени d.
[04:37:12.220 --> 04:37:14.220]  То есть получается, да, за константу, ну то есть
[04:37:14.220 --> 04:37:16.220]  за константу d, ну это нот.
[04:37:16.220 --> 04:37:18.220]  То есть получается, если считать d константой,
[04:37:18.220 --> 04:37:20.220]  то как бы получается, вот асимптотика алгоритма
[04:37:20.220 --> 04:37:24.220]  получается v квадрат умножить на, а за сколько мы
[04:37:24.220 --> 04:37:25.220]  1 запуск вообще делаем?
[04:37:25.220 --> 04:37:27.220]  А за сколько мы, кстати, делаем?
[04:37:28.220 --> 04:37:29.220]  Да.
[04:37:31.220 --> 04:37:33.220]  1 запуск мы делаем за многое.
[04:37:34.220 --> 04:37:36.220]  За e на альфа ве.
[04:37:37.220 --> 04:37:38.220]  Ну, ну это не...
[04:37:38.220 --> 04:37:40.220]  Запуск это все сжатие.
[04:37:40.220 --> 04:37:41.220]  Конечно.
[04:37:41.220 --> 04:37:43.220]  Эх, не получил соединиться.
[04:37:45.220 --> 04:37:46.220]  Ну давайте так.
[04:37:47.220 --> 04:37:50.220]  Нет, обычно это оценивают этот запуск за o от v квадрат.
[04:37:53.220 --> 04:37:55.220]  Ну потому что смотрите, рандомное, но дело в том,
[04:37:55.220 --> 04:37:58.220]  что если я знаю степень каждой вершины, то я могу
[04:37:58.220 --> 04:38:00.220]  в принципе рандомски делиться o от v.
[04:38:04.220 --> 04:38:05.220]  Ну логично, да?
[04:38:07.220 --> 04:38:08.220]  Или не логично?
[04:38:08.220 --> 04:38:09.220]  Какой рандом?
[04:38:09.220 --> 04:38:11.220]  Ну, который генерит нам ребро.
[04:38:19.220 --> 04:38:21.220]  Так, ребят, ну так давайте просто просыпаемся,
[04:38:21.220 --> 04:38:22.220]  это слишком простая идея.
[04:38:22.220 --> 04:38:23.220]  Не понимаю, что вы хотите...
[04:38:23.220 --> 04:38:24.220]  В смысле рандомного?
[04:38:24.220 --> 04:38:26.220]  За вот одного почему нельзя?
[04:38:27.220 --> 04:38:29.220]  Ну, точнее, нам нужно найти рандомное ребро,
[04:38:29.220 --> 04:38:31.220]  его реально найти.
[04:38:31.220 --> 04:38:32.220]  Что значит найти?
[04:38:32.220 --> 04:38:34.220]  Прием любое, но рандомное.
[04:38:34.220 --> 04:38:35.220]  Ну как конкретно?
[04:38:37.220 --> 04:38:39.220]  Но нет, фишка в том, что мы не хотим хранить
[04:38:39.220 --> 04:38:43.220]  прям полный список всех ребер, список всех e ребер.
[04:38:45.220 --> 04:38:46.220]  Вот.
[04:38:46.220 --> 04:38:47.220]  То есть хочется это, ну вот.
[04:38:48.220 --> 04:38:50.220]  То есть на самом деле просто, ну идея будет в том,
[04:38:50.220 --> 04:38:52.220]  что, во-первых, давайте кратные ребра сжимать,
[04:38:52.220 --> 04:38:56.220]  ну в том плане, что хранить, да, хранить кратность.
[04:39:04.220 --> 04:39:06.220]  Ну, можно пошафлить все ребра,
[04:39:07.220 --> 04:39:09.220]  потом поплечить с конца,
[04:39:10.220 --> 04:39:13.220]  и, типа, если оно петля, то, ну,
[04:39:13.220 --> 04:39:16.220]  забьем на него, иначе сожмем.
[04:39:17.220 --> 04:39:18.220]  А...
[04:39:21.220 --> 04:39:22.220]  Ну, можно под...
[04:39:22.220 --> 04:39:23.220]  Ну, кстати, нет, ну как сказать,
[04:39:23.220 --> 04:39:25.220]  тупому алгоритмизовому квадрату предлагается
[04:39:25.220 --> 04:39:26.220]  ДСУ даже не поддерживать.
[04:39:26.220 --> 04:39:28.220]  Хотя, хотя, да, ваша интерпретация,
[04:39:28.220 --> 04:39:29.220]  конечно, даже да.
[04:39:29.220 --> 04:39:31.220]  Ну, в принципе, да, хорошая идея, да, давайте просто
[04:39:31.220 --> 04:39:33.220]  пошафлим ей ребра и будем их просто по очереди
[04:39:33.220 --> 04:39:34.220]  забрали, действительно.
[04:39:34.220 --> 04:39:35.220]  Почему бы нет?
[04:39:36.220 --> 04:39:37.220]  Да.
[04:39:38.220 --> 04:39:39.220]  Да, такое можно.
[04:39:40.220 --> 04:39:43.220]  Вот, да, это нам облечит, и тогда это вообще будет работать
[04:39:43.220 --> 04:39:44.220]  едва ли не за...
[04:39:47.220 --> 04:39:48.220]  Прям Е на альфа.
[04:39:50.220 --> 04:39:51.220]  А, ну да.
[04:39:52.220 --> 04:39:53.220]  Ну вот.
[04:39:54.220 --> 04:39:55.220]  Ну да.
[04:39:55.220 --> 04:39:58.220]  Да, но правда тут проблема, что Е это все равно в квадрат
[04:39:58.220 --> 04:40:00.220]  в этом алгоритме считается почему-то.
[04:40:00.220 --> 04:40:01.220]  Ну да.
[04:40:02.220 --> 04:40:03.220]  Ну вот.
[04:40:03.220 --> 04:40:06.220]  А, ну тогда можно избавиться от Алина.
[04:40:06.220 --> 04:40:08.220]  Да, тогда можно избавиться.
[04:40:08.220 --> 04:40:09.220]  Ну да.
[04:40:09.220 --> 04:40:10.220]  И получится, да.
[04:40:10.220 --> 04:40:12.220]  Но в результате получается, да.
[04:40:12.220 --> 04:40:14.220]  Тогда, да, и в результате получается, что все работает
[04:40:14.220 --> 04:40:16.220]  за О от В в четвертый.
[04:40:16.220 --> 04:40:19.220]  То есть у нас есть алгоритм, который будет за О от В в четвертый,
[04:40:19.220 --> 04:40:21.220]  имеет константную вероятность ошибки.
[04:40:22.220 --> 04:40:25.220]  Ну там, увеличением константы можем сделать эту ошибку
[04:40:25.220 --> 04:40:26.220]  сколь угодно малой.
[04:40:28.220 --> 04:40:29.220]  Вот.
[04:40:29.220 --> 04:40:30.220]  Не нравится.
[04:40:30.220 --> 04:40:31.220]  А, чуть-чуть.
[04:40:32.220 --> 04:40:33.220]  Сейчас.
[04:40:34.220 --> 04:40:36.220]  Я тебе больше скажу.
[04:40:36.220 --> 04:40:38.220]  Шторм вагнер за ВКУ поработал.
[04:40:38.220 --> 04:40:40.220]  Ну да, и предпоток тоже.
[04:40:40.220 --> 04:40:41.220]  Да.
[04:40:42.220 --> 04:40:44.220]  Ну, правда, без одной вершины вагнический проще сидеть.
[04:40:45.220 --> 04:40:47.220]  Ну там так, нет, не совсем.
[04:40:47.220 --> 04:40:50.220]  Просто предпоток, он как бы искал бы разрез
[04:40:50.220 --> 04:40:52.220]  между двумя вершинами фиксированными.
[04:40:52.220 --> 04:40:54.220]  Так что там тоже будет читать.
[04:40:54.220 --> 04:40:56.220]  В таком виде могла бы четвертой степень вылезать.
[04:40:56.220 --> 04:40:58.220]  Если бы там начали там какую-нибудь дерево гомориху
[04:40:58.220 --> 04:41:00.220]  строить и так далее.
[04:41:00.220 --> 04:41:01.220]  Вот.
[04:41:01.220 --> 04:41:03.220]  Да, ну согласен, ВФ четвертая многовато.
[04:41:04.220 --> 04:41:07.220]  Хотя, конечно, уже это достаточно простыми методами
[04:41:07.220 --> 04:41:09.220]  получили ВФ четвертые, то есть мы не изобретали
[04:41:09.220 --> 04:41:11.220]  никаких потоков там этих вот,
[04:41:11.220 --> 04:41:13.220]  что называется, какие-нибудь гоморихов,
[04:41:13.220 --> 04:41:15.220]  там тихих и не очень.
[04:41:15.220 --> 04:41:16.220]  Вот.
[04:41:17.220 --> 04:41:19.220]  Но тут возникает вообще не нот.
[04:41:20.220 --> 04:41:21.220]  Но есть про нот.
[04:41:21.220 --> 04:41:23.220]  Значит, это называется алгоритм кархера.
[04:41:26.220 --> 04:41:28.220]  Это был алгоритм кархера.
[04:41:29.220 --> 04:41:30.220]  Каргер.
[04:41:31.220 --> 04:41:33.220]  Нет, не каркер, а...
[04:41:34.220 --> 04:41:35.220]  Да-да-да.
[04:41:35.220 --> 04:41:36.220]  Нет, это понятно.
[04:41:36.220 --> 04:41:38.220]  В книжке магиста рассеянных наук, да.
[04:41:38.220 --> 04:41:40.220]  Оказывается, там дикари принадлежали
[04:41:40.220 --> 04:41:42.220]  до неизвестного мне племени буль-буль.
[04:41:43.220 --> 04:41:45.220]  И они очень любили математику, особенно алгебру.
[04:41:45.220 --> 04:41:48.220]  Но алгебра у них была какая-то дикая абсолютно,
[04:41:48.220 --> 04:41:50.220]  в общем, буль-булевая алгебра.
[04:41:51.220 --> 04:41:52.220]  Нет, там кошмар.
[04:41:52.220 --> 04:41:54.220]  Ну, представьте, вот логично алгебра,
[04:41:54.220 --> 04:41:55.220]  вот А плюс А сколько будет?
[04:41:55.220 --> 04:41:57.220]  Ну, как бы, вижу, понятно, что 2А.
[04:41:57.220 --> 04:42:00.220]  А у этих буль-бульах А плюс А так и остается А.
[04:42:00.220 --> 04:42:01.220]  Ну, что за бред?
[04:42:02.220 --> 04:42:03.220]  Да, я думал, у них ссоры ноль будет.
[04:42:03.220 --> 04:42:04.220]  Не, у них буля ноль.
[04:42:05.220 --> 04:42:06.220]  Не, у них дезюнкция просто была.
[04:42:07.220 --> 04:42:08.220]  То есть, я им вежливо говорю,
[04:42:08.220 --> 04:42:10.220]  что вы решите против обычной логики.
[04:42:10.220 --> 04:42:13.220]  Они говорят, а нам как ослодикой подсказывает,
[04:42:13.220 --> 04:42:14.220]  что А плюс А равно А.
[04:42:14.220 --> 04:42:15.220]  Так, ну ладно.
[04:42:18.220 --> 04:42:19.220]  С какой-то точки зрения нет.
[04:42:20.220 --> 04:42:21.220]  Да.
[04:42:21.220 --> 04:42:22.220]  Нет, просто она буль-булевая.
[04:42:22.220 --> 04:42:24.220]  Да, буль-бульки страшно на меня обидели.
[04:42:25.220 --> 04:42:27.220]  Ладно, если не читали эту книжку, почитайте.
[04:42:27.220 --> 04:42:28.220]  Получите все еще удовольствие.
[04:42:28.220 --> 04:42:30.220]  Хоть она, конечно, и больше там для школьничков,
[04:42:30.220 --> 04:42:32.220]  типа там пятого класса, на самом деле.
[04:42:36.220 --> 04:42:37.220]  Не, ну сейчас вам.
[04:42:37.220 --> 04:42:38.220]  Ну, я говорю, может это...
[04:42:38.220 --> 04:42:39.220]  Ну, я не знаю.
[04:42:39.220 --> 04:42:40.220]  Я просто где-то во втором-третем классе это читал.
[04:42:40.220 --> 04:42:41.220]  Мне очень нравилось.
[04:42:44.220 --> 04:42:45.220]  Ну да, там...
[04:42:45.220 --> 04:42:46.220]  Нет, это очаровать.
[04:42:47.220 --> 04:42:49.220]  Это очаровать на книжке.
[04:42:49.220 --> 04:42:50.220]  Да, ну вашу...
[04:42:51.220 --> 04:42:52.220]  Ну, а что, картинка называется?
[04:42:52.220 --> 04:42:54.220]  А что вы читали во втором классе, да?
[04:42:56.220 --> 04:42:57.220]  Ладно.
[04:42:58.220 --> 04:42:59.220]  Так, смотрите.
[04:42:59.220 --> 04:43:03.220]  А теперь вас приветствует алгоритм Каргерштайна.
[04:43:05.220 --> 04:43:08.220]  Значит, какие тут еще веселые технологии могут быть
[04:43:08.220 --> 04:43:10.220]  неожиданно применены?
[04:43:13.220 --> 04:43:15.220]  А могут применить неожиданные читерские технологии?
[04:43:18.220 --> 04:43:19.220]  Они говорят...
[04:43:20.220 --> 04:43:22.220]  Вот если я буду прям этот алгоритм,
[04:43:22.220 --> 04:43:25.220]  прям вот это вот сжатие делать сначала до конца,
[04:43:25.220 --> 04:43:27.220]  то у меня получится вот такая вероятность.
[04:43:27.220 --> 04:43:28.220]  Два делительного квадрата, да?
[04:43:29.220 --> 04:43:30.220]  Да.
[04:43:32.220 --> 04:43:34.220]  А теперь мне сказать следующий вопрос.
[04:43:34.220 --> 04:43:37.220]  А если я сделаю чуть меньше шагов,
[04:43:37.220 --> 04:43:40.220]  то вероятность ошибки будет меньше, правда?
[04:43:40.220 --> 04:43:41.220]  Сильно меньше.
[04:43:41.220 --> 04:43:42.220]  Да.
[04:43:43.220 --> 04:43:44.220]  А потом что рвать?
[04:43:44.220 --> 04:43:45.220]  Ну вот.
[04:43:46.220 --> 04:43:47.220]  Нет, нет, нет.
[04:43:47.220 --> 04:43:48.220]  Нет, нет, нет.
[04:43:49.220 --> 04:43:50.220]  Все еще круче.
[04:43:50.220 --> 04:43:51.220]  Смотрите.
[04:43:51.220 --> 04:43:52.220]  У меня идея такая.
[04:43:52.220 --> 04:43:55.220]  Давайте я сделаю так, чтобы у меня Т было приблизительно...
[04:43:55.220 --> 04:43:58.220]  Не буду сейчас там прям идеально подгонять.
[04:44:00.220 --> 04:44:01.220]  Корень...
[04:44:10.220 --> 04:44:11.220]  Сколько там надо-то?
[04:44:17.220 --> 04:44:18.220]  Сейчас.
[04:44:21.220 --> 04:44:22.220]  Сейчас.
[04:44:23.220 --> 04:44:24.220]  Сколько там должно быть?
[04:44:33.220 --> 04:44:34.220]  Давайте попробуем.
[04:44:34.220 --> 04:44:35.220]  Ладно.
[04:44:36.220 --> 04:44:38.220]  Вот давайте я попробую вот как сделать.
[04:44:38.220 --> 04:44:40.220]  Давайте у меня Т будет приблизительно корень из двух.
[04:44:43.220 --> 04:44:44.220]  Корень из двух?
[04:44:44.220 --> 04:44:46.220]  Ладно, корень из два, хорошо.
[04:44:48.220 --> 04:44:52.220]  А, нет, наврал, наврал.
[04:44:52.220 --> 04:44:55.220]  Вот, нет, там был корень из двух, просто я не вспомнил, где...
[04:44:55.220 --> 04:44:56.220]  Извините.
[04:44:56.220 --> 04:44:58.220]  В делить до корень из двух.
[04:45:00.220 --> 04:45:02.220]  Вот, другое дело.
[04:45:02.220 --> 04:45:04.220]  Да, просто радикал просто не там.
[04:45:05.220 --> 04:45:06.220]  Так вот, в чем прикол?
[04:45:06.220 --> 04:45:09.220]  Допустим, смотрите, как я буду теперь работать.
[04:45:09.220 --> 04:45:13.220]  Я хочу сделать так, чтобы у меня вместо В-вершин стало Т-вершин.
[04:45:17.220 --> 04:45:21.220]  Вот я буду делать вот эти сжатия до тех пор, пока у меня не останется Т-вершин.
[04:45:23.220 --> 04:45:25.220]  С какой вероятностью я выживу?
[04:45:26.220 --> 04:45:27.220]  Да?
[04:45:28.220 --> 04:45:29.220]  Сколько останется?
[04:45:29.220 --> 04:45:31.220]  Ну ладно, делить на Е.
[04:45:33.220 --> 04:45:36.220]  С какой вероятностью мы все еще не заденем...
[04:45:36.220 --> 04:45:37.220]  Да, миноразрез.
[04:45:37.220 --> 04:45:38.220]  По какой-то степени.
[04:45:38.220 --> 04:45:39.220]  Нет, нет, нет.
[04:45:40.220 --> 04:45:42.220]  Да, Господи, еще у вас все нет.
[04:45:42.220 --> 04:45:43.220]  Нет, ну давайте так.
[04:45:43.220 --> 04:45:46.220]  Тогда это вероятность того, что мы выживем.
[04:45:48.220 --> 04:45:55.220]  Оно не меньше, чем 1-2 делить на В, 1-2 делить на В-1 и так далее.
[04:45:55.220 --> 04:45:58.220]  И дальше будет 1-2 делить на Т-1.
[04:46:00.220 --> 04:46:03.220]  Это равно тем же методам с шлеп-шлепами.
[04:46:03.220 --> 04:46:09.220]  Оно равно Т на Т-1 делить на В на В-1.
[04:46:13.220 --> 04:46:14.220]  Ну вот, не это.
[04:46:15.220 --> 04:46:17.220]  Это приблизительно 1-2.
[04:46:21.220 --> 04:46:24.220]  Я объясняю, зачем я говорил, что это Е.
[04:46:24.220 --> 04:46:29.220]  Я просто заменяю все слагаемые на 1-2 делить на Т-1.
[04:46:29.220 --> 04:46:32.220]  И возвожу в степень Т-1, получаю 1 Е.
[04:46:32.220 --> 04:46:34.220]  Да, но моя оценка точнее.
[04:46:34.220 --> 04:46:35.220]  Да, у вас получше.
[04:46:35.220 --> 04:46:36.220]  Да, у меня, конечно, получше.
[04:46:36.220 --> 04:46:40.220]  Интересно, я могу оценить, что это больше либо ровно, чем 1-2?
[04:46:41.220 --> 04:46:43.220]  Если подогнать, то это может быть.
[04:46:43.220 --> 04:46:46.220]  Ну я могу подогнать, а может так можно.
[04:46:53.220 --> 04:46:54.220]  Сева.
[04:46:55.220 --> 04:46:56.220]  Или не Сева.
[04:47:01.220 --> 04:47:02.220]  Филипп, да.
[04:47:02.220 --> 04:47:04.220]  Да господи, хотя бы Денис.
[04:47:04.220 --> 04:47:05.220]  Кошмар, господи.
[04:47:05.220 --> 04:47:09.220]  Это отдельная песня, когда представители команды «Ёлки-палки» превратились в привидении.
[04:47:12.220 --> 04:47:13.220]  Но не суть.
[04:47:15.220 --> 04:47:16.220]  Ну да.
[04:47:16.220 --> 04:47:17.220]  Ну мало ли.
[04:47:17.220 --> 04:47:18.220]  Когда-то превратились.
[04:47:18.220 --> 04:47:19.220]  Когда-то они тут были.
[04:47:21.220 --> 04:47:23.220]  Они держались вот, собственно.
[04:47:24.220 --> 04:47:26.220]  Они сдались, собственно, когда они сдались.
[04:47:26.220 --> 04:47:28.220]  Вот ровно когда мы это сделали.
[04:47:28.220 --> 04:47:29.220]  Нет.
[04:47:29.220 --> 04:47:31.220]  Не, когда мы голели Сейферса.
[04:47:34.220 --> 04:47:35.220]  Ну ничего.
[04:47:41.220 --> 04:47:42.220]  Не, ну почему.
[04:47:42.220 --> 04:47:43.220]  Не, ну почему.
[04:47:43.220 --> 04:47:44.220]  Ага.
[04:47:44.220 --> 04:47:48.220]  Или как только им сказали, как начисляются бонусы, они поняли, что им лучить точно
[04:47:48.220 --> 04:47:49.220]  и ничего не надо.
[04:47:51.220 --> 04:47:52.220]  Ну да.
[04:47:52.220 --> 04:47:53.220]  Ну да.
[04:47:54.220 --> 04:47:55.220]  Ну да.
[04:47:55.220 --> 04:47:56.220]  Ну да.
[04:47:56.220 --> 04:47:57.220]  Ну ничего не надо.
[04:47:58.220 --> 04:48:00.220]  Остальное они типа и так знают.
[04:48:00.220 --> 04:48:01.220]  Хотя я не знаю.
[04:48:01.220 --> 04:48:04.220]  Денис Пустафин, между прочим, за прошлый семестр Хор 6 имеет, если что.
[04:48:05.220 --> 04:48:06.220]  Бонусы складываются.
[04:48:07.220 --> 04:48:09.220]  Очень-очень просто он поленился учить на ОТО.
[04:48:09.220 --> 04:48:11.220]  Еще три перездачи бонусом.
[04:48:12.220 --> 04:48:14.220]  Хор 6 и три перездачи бонусом.
[04:48:17.220 --> 04:48:18.220]  У Дениса?
[04:48:18.220 --> 04:48:19.220]  Да.
[04:48:19.220 --> 04:48:22.220]  По плюсам технологиям программирования и питона.
[04:48:23.220 --> 04:48:25.220]  Потому что он поленился учить.
[04:48:25.220 --> 04:48:28.220]  Ну нет, вот это ты зря смеешься на самом деле.
[04:48:28.220 --> 04:48:29.220]  Я не смеюсь, это правда.
[04:48:30.220 --> 04:48:33.220]  Да, но смеешься ты над этим зря.
[04:48:33.220 --> 04:48:40.220]  Нет, я не оспариваю правдивость этого утверждения, но скажем так, юмористичность этой реакции кажется мне сомнительной.
[04:48:40.220 --> 04:48:42.220]  Ну просто как минимум потому, что да.
[04:48:42.220 --> 04:48:48.220]  К сожалению, иногда бывает, что математически ты шаришь, а вот выучить именно программические предметы тебе сложно.
[04:48:48.220 --> 04:48:49.220]  Просто сам такой.
[04:48:50.220 --> 04:48:56.220]  А если вернуться на позитивную тему, то бонусы складываются или вычитаются?
[04:48:56.220 --> 04:48:59.220]  Вычитаются, Оля!
[04:48:59.220 --> 04:49:00.220]  Перемножаются.
[04:49:01.220 --> 04:49:04.220]  Нет, из 1,8 до 4 выбирается максимум.
[04:49:04.220 --> 04:49:06.220]  А может, умножается?
[04:49:06.220 --> 04:49:07.220]  Нет.
[04:49:08.220 --> 04:49:09.220]  Нет, размечтались.
[04:49:09.220 --> 04:49:10.220]  1 на 1.
[04:49:10.220 --> 04:49:11.220]  Ладно.
[04:49:11.220 --> 04:49:14.220]  Так что веримся к еще более позитивной теме.
[04:49:14.220 --> 04:49:16.220]  Значит, t-1, а вы минусы?
[04:49:16.220 --> 04:49:17.220]  R. Рыжая.
[04:49:18.220 --> 04:49:19.220]  R. Выжившая.
[04:49:20.220 --> 04:49:21.220]  Это не рыжая.
[04:49:21.220 --> 04:49:24.220]  Пузик не в той стороне, откуда тут R?
[04:49:25.220 --> 04:49:27.220]  Вот это еще может быть R.
[04:49:30.220 --> 04:49:32.220]  Это не рыжая, а коричневый цвет.
[04:49:32.220 --> 04:49:36.220]  Может быть, конечно, какой-нибудь гриб рыжик может быть такого цвета, конечно.
[04:49:37.220 --> 04:49:39.220]  Давайте отучим туда.
[04:49:40.220 --> 04:49:42.220]  Нет, конец семестра.
[04:49:42.220 --> 04:49:43.220]  Ну что делать?
[04:49:44.220 --> 04:49:45.220]  Вот.
[04:49:48.220 --> 04:49:49.220]  Значит, t-1.
[04:49:50.220 --> 04:49:52.220]  Ну ладно, приблизительно t-2.
[04:49:52.220 --> 04:49:55.220]  В случае чего, можно подогнать, выделить на корень из 2 плюс 1,
[04:49:55.220 --> 04:49:58.220]  округленные в правильную сторону, не будем заморачиваться.
[04:49:58.220 --> 04:50:01.220]  В общем, если хотите, в конспекте написано точно.
[04:50:01.220 --> 04:50:03.220]  Но это сейчас не принципиально.
[04:50:03.220 --> 04:50:07.220]  Так вот, оказывается, уменьшив количество вершин в корень из 2 раз,
[04:50:07.220 --> 04:50:11.220]  оказывается, мы с вероятностью 1 и 2 будем еще жить.
[04:50:12.220 --> 04:50:14.220]  Так вот, а дальше у меня неожиданная идея.
[04:50:14.220 --> 04:50:16.220]  Слушайте, я же с большой вероятностью жив?
[04:50:16.220 --> 04:50:20.220]  Подождите, это не вы живы, а одно ребро из ответа живы?
[04:50:20.220 --> 04:50:24.220]  Нет, не одно ребро, а просто мы ни одно ребро из ответа еще не сжали.
[04:50:25.220 --> 04:50:27.220]  Нет, что такое выжить?
[04:50:27.220 --> 04:50:31.220]  В данном случае я говорю, что мы выжили, если мы делали рандомное сжатие,
[04:50:31.220 --> 04:50:33.220]  и ни одно ребро из ответа не сжалось.
[04:50:34.220 --> 04:50:38.220]  Вот, то есть ответ у текущего графа все еще правильный.
[04:50:39.220 --> 04:50:40.220]  А теперь у меня идея.
[04:50:40.220 --> 04:50:43.220]  Так, если я жив с такой хорошей вероятностью,
[04:50:43.220 --> 04:50:45.220]  так знаете что?
[04:50:45.220 --> 04:50:47.220]  А давайте я поверю, что я жив,
[04:50:47.220 --> 04:50:51.220]  и буду делать несколько запусков именно из этой точки.
[04:50:53.220 --> 04:50:55.220]  Несколько это означает два.
[04:50:57.220 --> 04:50:59.220]  То есть, смотрите, я получил вот это,
[04:50:59.220 --> 04:51:02.220]  я сжал граф до выделить на корень из двух вершин,
[04:51:02.220 --> 04:51:04.220]  и у меня получился какой-то граф.
[04:51:06.220 --> 04:51:10.220]  Так вот, я делаю два рандомных запуска от этого графа.
[04:51:11.220 --> 04:51:14.220]  И выберу из этих ответов, естественно, максимальный.
[04:51:15.220 --> 04:51:17.220]  Понятно, да?
[04:51:19.220 --> 04:51:22.220]  То есть, смотрите, раньше у меня рикурсивные зап unreasonable были устроены так.
[04:51:23.220 --> 04:51:25.220]  Вот я иду по цепочке в, в иду тупо,
[04:51:25.220 --> 04:51:28.220]  я тупой, тупой, тупой, иду один,
[04:51:28.220 --> 04:51:33.220]  потом беру еще один запуск и еще цепочка, цепочка, цепочка, цепочка, цепочка...
[04:51:33.220 --> 04:51:40.060]  и тут цепочек цепочек цепочек тут тут к товарищу каргеру приходит товарищ
[04:51:40.060 --> 04:51:47.700]  штайн и говорит а давай делать их усиленные запуски вот так вот выделить
[04:51:47.700 --> 04:51:55.500]  наклоне из двух а теперь вот расходимся тут в этой точке еще расходимся
[04:51:55.500 --> 04:52:16.140]  че че че че че но да но это не заразветление там просто у нас был
[04:52:16.140 --> 04:52:19.940]  алгоритм поиска миностова с атомик хиппом который выяснял что он там за две за две
[04:52:20.940 --> 04:52:29.300]  вам находит миностов да но это не то потому что алгоритм то есть алгоритм поля то есть
[04:52:29.300 --> 04:52:35.900]  рекурсивный запуск то есть сам алгоритм звучит так ну пока мне один запуск то есть я беру граф
[04:52:35.900 --> 04:52:43.780]  там сжимаю его рандомно до размера выделить наклоне не с двух а дальше от этого графа
[04:52:43.780 --> 04:52:49.980]  запускать рекурсивно два раз то есть создают две копии и откуда и каждую копию пытались
[04:52:49.980 --> 04:52:59.460]  сжать рекурсивно там запускать рекурсивно из результата выжим максимальный вот
[04:52:59.460 --> 04:53:14.500]  а теперь давайте посмотрим смотрите давайте кое-что поймем то есть давайте подумаем с
[04:53:14.500 --> 04:53:19.540]  какой вероятностью из вот этой вот рекурсии мы выковырием правильный ответ
[04:53:19.540 --> 04:53:39.340]  ну давайте так ну давайте так вот давайте я назову так то есть это вот вероятность выжить
[04:53:39.340 --> 04:53:48.900]  на переходе от в до в том до т да а теперь вероятность выжить от в что вот этот алгоритм
[04:53:48.900 --> 04:53:58.620]  от в найдет правильный ответ да он какой он больше либо равен чем что чем одна вторая
[04:53:58.620 --> 04:54:05.900]  потому что сначала одна вторая что мы вообще на первом вот этом запуске не выжили наоборот
[04:54:05.900 --> 04:54:12.100]  выжили и надо это еще умножить на то что на один минус вероятность того что мы там дальше не
[04:54:12.100 --> 04:54:19.260]  пофалились а мы дальше не пофалились с вероятностью что-то типа 1 минус п выжившие
[04:54:19.260 --> 04:54:28.260]  от выделить такой не с двух но в квадрате вот
[04:54:35.660 --> 04:54:45.060]  потому что но потому что скажет так вероятность того что мы там дальше выжили это 1 минус вероятность
[04:54:45.220 --> 04:54:50.600]  того что мы там погибли а мы погибли как бы чтоб погибнуть надо погибнуть и в этом
[04:54:50.600 --> 04:54:55.280]  запуске и в этом запуске поэтому мы берем вероятность того что мы там погибли это
[04:54:55.280 --> 04:55:07.340]  один vere тость того что мы там выжили и возводим ее в квадрат вот или но вот ну или знаете например
[04:55:07.340 --> 04:55:18.000]  Если я скажу, что v равно кое-нибудь из двух в степени n, то тогда
[04:55:18.000 --> 04:55:22.040]  можно написать такое, что p от k больше либо равно 1
[04:55:22.040 --> 04:55:28.480]  вторая на 1 минус 1 минус p от k минус 1 в квадрате.
[04:55:28.480 --> 04:55:36.320]  Теперь вот как вы думаете, как оценить p от k, особенно
[04:55:36.320 --> 04:55:40.120]  с учетом того, что, конечно же, p от 0 равно, естественно,
[04:55:40.120 --> 04:55:41.120]  1.
[04:55:41.120 --> 04:55:51.120]  Но, впрочем, на самом деле вероятность выжить, а, хотя
[04:55:51.120 --> 04:55:52.120]  нет, вероятность выжить.
[04:55:52.120 --> 04:55:55.520]  Теперь внимание, вопрос, как оценить p от k.
[04:55:55.520 --> 04:56:03.800]  Давайте сделаем замену p равно 1 минус q, чтобы с этим
[04:56:03.800 --> 04:56:04.800]  было...
[04:56:04.800 --> 04:56:05.800]  Думаешь...
[04:56:05.800 --> 04:56:08.800]  Так, и че, думаешь, помочь?
[04:56:08.800 --> 04:56:09.800]  Чтобы...
[04:56:09.800 --> 04:56:10.800]  Хорошо.
[04:56:10.800 --> 04:56:16.280]  Ладно, q от k, давай q от k присвоить 1 минус p от k, пожалуйста,
[04:56:16.280 --> 04:56:17.280]  и че.
[04:56:17.280 --> 04:56:18.280]  Поехали.
[04:56:19.280 --> 04:56:27.000]  1 вторая на 1 минус q от k минус 1 в квадрате.
[04:56:27.000 --> 04:56:31.400]  И че, и че, помогает?
[04:56:31.400 --> 04:56:33.400]  Так, хорошо.
[04:56:33.400 --> 04:56:37.000]  Тогда получается, что q от k должно быть...
[04:56:37.000 --> 04:56:41.160]  То есть q от k меньше либо равно чего?
[04:56:42.040 --> 04:56:51.960]  Да, что-то типа 1 вторая плюс 1 вторая q от k минус 1 у квадрате.
[04:56:51.960 --> 04:56:52.960]  Так.
[04:56:52.960 --> 04:56:53.960]  Супер.
[04:56:53.960 --> 04:56:54.960]  Квадратное уравнение.
[04:56:54.960 --> 04:56:55.960]  Теперь можно...
[04:56:55.960 --> 04:56:56.960]  Стоп, это разница квадрата вообще.
[04:56:56.960 --> 04:56:57.960]  Где?
[04:56:57.960 --> 04:56:58.960]  Теперь можно избавиться от коэффициента 1 вторая.
[04:56:58.960 --> 04:56:59.960]  Каким образом?
[04:56:59.960 --> 04:57:00.960]  Оно с квадратом.
[04:57:01.760 --> 04:57:02.760]  Что?
[04:57:02.760 --> 04:57:03.760]  А, что?
[04:57:03.760 --> 04:57:04.760]  Что?
[04:57:04.760 --> 04:57:05.760]  А, предлагать теперь...
[04:57:05.760 --> 04:57:06.760]  А, то есть...
[04:57:06.760 --> 04:57:07.760]  В смысле, можно...
[04:57:07.760 --> 04:57:08.760]  Коэффициент...
[04:57:08.760 --> 04:57:09.760]  А тя-а-а...
[04:57:09.760 --> 04:57:11.520]  Этого я и не знаю.
[04:57:11.520 --> 04:57:20.520]  Сказать, что QKT это RKT на один бодилитный корень из двух в степени K.
[04:57:20.520 --> 04:57:22.520]  Чего?
[04:57:30.520 --> 04:57:33.520]  А, типа дальше пораскрывать что ли?
[04:57:42.520 --> 04:57:47.520]  Ну, давайте напишем, что 2 QKT меньше уровня, чем 1, плюс QKT минус 1 в квадрате.
[04:57:47.520 --> 04:57:50.520]  Нет, а там... сейчас чего еще напишем?
[04:57:50.520 --> 04:57:52.520]  Ну, там на 2 все должно быть.
[04:57:52.520 --> 04:57:54.520]  Да, но тут квадрат.
[04:57:54.520 --> 04:57:56.520]  Потому что так как бы...
[04:57:56.520 --> 04:57:59.520]  Нет, не внутри квадрата, там ножа снаружи.
[04:57:59.520 --> 04:58:01.520]  Я просто дроби не хочу.
[04:58:01.520 --> 04:58:09.520]  Можно дальше раскрывать, что это 1 вторая плюс 1 вторая от QKT 2, потом от QKT минус 3.
[04:58:11.520 --> 04:58:13.520]  Да, но там...
[04:58:13.520 --> 04:58:16.520]  Только так как тут квадрат, там в этих скобках такая гадость начнется.
[04:58:16.520 --> 04:58:18.520]  Что, знаете?
[04:58:18.520 --> 04:58:20.520]  Давайте на 2 все домножим.
[04:58:20.520 --> 04:58:22.520]  Можно QKT?
[04:58:22.520 --> 04:58:25.520]  Это просто будет какая-то...
[04:58:25.520 --> 04:58:28.520]  Давайте домножим на 2 и угадаем функцию.
[04:58:31.520 --> 04:58:34.520]  Можно методом неполной индукции.
[04:58:34.520 --> 04:58:37.520]  Да? Это что значит?
[04:58:37.520 --> 04:58:40.520]  Ну, это в начальных значениях посмотреть, а потом...
[04:58:40.520 --> 04:58:42.520]  Чтобы угадать.
[04:58:43.520 --> 04:58:45.520]  Нет, ладно. Найдите.
[04:58:45.520 --> 04:58:50.520]  Можете написать 2Q от K меньше или равно чем 1 плюс Q от K минус 1 в квадрате?
[04:58:50.520 --> 04:58:53.520]  Чего?
[04:58:53.520 --> 04:58:59.520]  2Q от K минус 1 меньше либо равно Q от K минус 1 в квадрате.
[04:58:59.520 --> 04:59:01.520]  Это я могу написать.
[04:59:01.520 --> 04:59:03.520]  Зачем вам еще одни скобочки?
[04:59:03.520 --> 04:59:05.520]  Не знаю.
[04:59:05.520 --> 04:59:07.520]  На это легче смотреть.
[04:59:07.520 --> 04:59:09.520]  Нет.
[04:59:10.520 --> 04:59:12.520]  Нет, это так не поможет.
[04:59:12.520 --> 04:59:15.520]  Понимаете, потому что P все-таки будет относительно маленькой.
[04:59:15.520 --> 04:59:18.520]  Поэтому тут лучше оценивать через P.
[04:59:18.520 --> 04:59:20.520]  Q это одно и то же.
[04:59:20.520 --> 04:59:25.520]  Да, но дело в том, что P будет порядка достаточно мелкого.
[04:59:25.520 --> 04:59:31.520]  То есть Q придется доказывать, что оно меньше либо равно, чем 1 минус что-то мелкое.
[04:59:31.520 --> 04:59:34.520]  Поэтому просто не особо поможет.
[04:59:35.520 --> 04:59:42.520]  То есть вы же понимаете, что вероятность того, что мы выживем, по-любому меньше 1 и 2.
[04:59:46.520 --> 04:59:51.520]  Просто потому что мы, если я сюда вторая, пофейлимся уже тут.
[04:59:51.520 --> 04:59:58.520]  Поэтому на самом деле лучше смотреть куда-то вот сюда.
[04:59:59.520 --> 05:00:06.520]  Утверждение на самом деле будет примерно такое.
[05:00:06.520 --> 05:00:13.520]  P от K больше либо равно должно быть что-то типа 1 делить на лог K.
[05:00:13.520 --> 05:00:17.520]  Не, не на лог.
[05:00:17.520 --> 05:00:19.520]  1 делить на K.
[05:00:19.520 --> 05:00:28.520]  Ну, приблизительно такой ответ должен быть.
[05:00:28.520 --> 05:00:34.520]  Для сокращения времени давайте не будем пытаться это угадывать, а лучше давайте, как я сразу скажу.
[05:00:39.520 --> 05:00:41.520]  Откуда это, правда?
[05:00:41.520 --> 05:00:44.520]  Ты прямо в уме подставил?
[05:00:44.520 --> 05:00:48.520]  Ну ладно, тогда попробуем сделать то, что...
[05:00:50.520 --> 05:00:52.520]  Ну давайте так.
[05:00:54.520 --> 05:00:57.520]  Ну тут на самом деле получается так.
[05:00:59.520 --> 05:01:04.520]  Если аккуратно раскрыть скобки, то что получится?
[05:01:04.520 --> 05:01:10.520]  Получится на самом деле P от K минус 1, минус...
[05:01:10.520 --> 05:01:16.520]  Ну вот, значит одна вторая P от K минус 1 в квадрате.
[05:01:20.520 --> 05:01:23.520]  Я тупо раскрыл вот эти скобки.
[05:01:32.520 --> 05:01:40.520]  Теперь заметим, что, конечно, если у нас есть оценка по индукции, что это больше P от K минус 1, не очень понятно, как оценивать.
[05:01:40.520 --> 05:01:45.520]  Потому что можно это оценить снизу, а это надо как-то сверху оценивать.
[05:01:45.520 --> 05:01:50.520]  Но не беда, как говорится, будешь можем нарисовать график этой функции.
[05:01:50.520 --> 05:01:57.520]  Даже вообразить себе, что графиком этой функции является параболы ветви, которые направлены куда-то вниз.
[05:01:59.520 --> 05:02:01.520]  И более того, мы еще и можем угадать, где вершина.
[05:02:01.520 --> 05:02:03.520]  Где вершина?
[05:02:10.520 --> 05:02:12.520]  Да, вершина просто в...
[05:02:12.520 --> 05:02:14.520]  Ну-ка давайте.
[05:02:16.520 --> 05:02:19.520]  Смотри, минус 1 делить на 2a.
[05:02:19.520 --> 05:02:22.520]  То есть 1 делить на минус 1, то есть 1.
[05:02:22.520 --> 05:02:25.520]  То есть вывод, вершина тут в единицу.
[05:02:25.520 --> 05:02:29.520]  То есть, на отрезке от 0 до 1 эта функция тупо возрастает.
[05:02:30.520 --> 05:02:41.520]  Поэтому, если мы знаем оценку на P от K минус 1, то на этом отрезке это будет больше либо равно, чем если мы вместо P от K минус 1 подставим нижнюю оценку ныне.
[05:02:43.520 --> 05:02:45.520]  То есть так и пишем.
[05:02:45.520 --> 05:02:47.520]  1 делить на K минус 1.
[05:02:47.520 --> 05:02:53.520]  Минус 1 вторая на 1 делить на K минус 1 в квадрате.
[05:02:56.520 --> 05:02:57.520]  А это равно чему?
[05:02:57.520 --> 05:02:59.520]  Ну давайте тут попробуем это привести.
[05:02:59.520 --> 05:03:01.520]  2K минус 1 в квадрате.
[05:03:01.520 --> 05:03:03.520]  Тут получается...
[05:03:08.520 --> 05:03:09.520]  Ну почему?
[05:03:09.520 --> 05:03:13.520]  Ну какой-то 2K минус 3 получится.
[05:03:21.520 --> 05:03:24.520]  Нет, осталось только сравнить это с 1 делить на K.
[05:03:24.520 --> 05:03:39.520]  Но на самом деле сравнить вот это 1 делить на K, это то же самое, что сравнить 1 делить на K минус 1 с 1 делить на 2 на K минус 1 в квадрате.
[05:03:39.520 --> 05:03:44.520]  Вот.
[05:03:44.520 --> 05:03:46.520]  Ну а к чему я?
[05:03:46.520 --> 05:03:48.520]  Ну вот.
[05:03:48.520 --> 05:03:50.520]  К чему?
[05:03:50.520 --> 05:03:52.520]  Ну скажи так.
[05:03:52.520 --> 05:03:57.520]  Я утверждаю, что это вот больше либо равно 1 делить на K.
[05:03:59.520 --> 05:04:01.520]  Это эквивалентно вот этому.
[05:04:01.520 --> 05:04:06.520]  Да, это перенес, это перенес, привел к общему знаменателю.
[05:04:06.520 --> 05:04:10.520]  Это равно 1 делить на K минус 1, минус 1 делить на K.
[05:04:10.520 --> 05:04:12.520]  В явном виде.
[05:04:14.520 --> 05:04:17.520]  Я не понимаю откуда у вас разница в два раза возникла.
[05:04:17.520 --> 05:04:19.520]  В смысле в два раза?
[05:04:19.520 --> 05:04:22.520]  Ну вон справа у вас в два раза меньше, чем слева.
[05:04:22.520 --> 05:04:24.520]  Чего?
[05:04:24.520 --> 05:04:26.520]  Тут квадрат.
[05:04:26.520 --> 05:04:27.520]  Ну да.
[05:04:27.520 --> 05:04:29.520]  А тут?
[05:04:29.520 --> 05:04:31.520]  Еще.
[05:04:33.520 --> 05:04:35.520]  У вас же совсем рядом было.
[05:04:36.520 --> 05:04:42.520]  Ну я знаю, но одна вторая у меня возникла честно отсюда.
[05:04:42.520 --> 05:04:44.520]  Я не знаю.
[05:04:50.520 --> 05:04:52.520]  Ну ладно.
[05:04:52.520 --> 05:04:54.520]  Ну вот.
[05:04:54.520 --> 05:05:02.520]  Здесь заметим, что тут 2 K минус, если на K минус 1 сократить, то тут останется, тут останется K, тут 2 на K минус 1.
[05:05:02.520 --> 05:05:04.520]  Вот.
[05:05:04.520 --> 05:05:09.520]  Но заметим, что при достаточно больших K вот это заведомо больше.
[05:05:09.520 --> 05:05:12.520]  Что такое достаточно большие?
[05:05:12.520 --> 05:05:15.520]  Ну это конечно когда K равно там хотя бы сколько?
[05:05:17.520 --> 05:05:19.520]  Ну хотя бы два.
[05:05:19.520 --> 05:05:21.520]  Вот.
[05:05:21.520 --> 05:05:23.520]  При хотя бы два это уже работает.
[05:05:23.520 --> 05:05:25.520]  Вот.
[05:05:25.520 --> 05:05:30.520]  Ну раз это больше, значит тогда тут с этой стороны больше либо равно и получается доказано.
[05:05:32.520 --> 05:05:34.520]  Вот.
[05:05:41.520 --> 05:05:43.520]  Вот.
[05:05:43.520 --> 05:05:47.520]  Так что вот такая вот красота получается.
[05:05:47.520 --> 05:05:49.520]  То есть какой из этого вывод?
[05:05:49.520 --> 05:05:52.520]  То есть получается, что вероятность...
[05:05:52.520 --> 05:06:00.520]  То есть получается, что если у нас глубина получилась в итоге K, то вероятность того, что мы выжили хотя бы один делить на K.
[05:06:02.520 --> 05:06:06.520]  То есть это от 1 делить на...
[05:06:06.520 --> 05:06:10.520]  Сейчас мы там получили, что это верно при K больше либо равно 2.
[05:06:10.520 --> 05:06:12.520]  Ну да.
[05:06:12.520 --> 05:06:17.520]  Ну можно сказать, что при K равно 1 это константа, и мы там выживаем с вероятностью 1.
[05:06:17.520 --> 05:06:23.520]  Потому что если у нас количество вершин осталось не более чем константа, мы просто уже любым перебором решаем заразаище за константу.
[05:06:25.520 --> 05:06:27.520]  Вот.
[05:06:27.520 --> 05:06:29.520]  Ну там правда для этого...
[05:06:29.520 --> 05:06:31.520]  То есть если K равно 1, значит вершин...
[05:06:31.520 --> 05:06:33.520]  Корень из двух?
[05:06:33.520 --> 05:06:35.520]  Приблизительно. То есть там одна, две вершины остались.
[05:06:35.520 --> 05:06:37.520]  Так что в общем-то не паримся уже.
[05:06:37.520 --> 05:06:39.520]  Там да.
[05:06:39.520 --> 05:06:41.520]  Вот.
[05:06:41.520 --> 05:06:43.520]  Так что здесь все в порядке.
[05:06:43.520 --> 05:06:44.520]  Вот.
[05:06:44.520 --> 05:06:45.520]  Но тогда получается, смотрите.
[05:06:45.520 --> 05:06:49.520]  То есть видите, что мы научились выживать с вероятностью 1 делить на...
[05:06:49.520 --> 05:06:51.520]  Ну такой.
[05:06:51.520 --> 05:06:54.520]  1 делить на два двоичных логарифма ВЕКТИ.
[05:06:54.520 --> 05:06:56.520]  Это получается.
[05:06:56.520 --> 05:06:57.520]  Почему два?
[05:06:57.520 --> 05:07:01.520]  Потому что у нас тут логарифм по основанию корень из двух, а он в два раза больше.
[05:07:01.520 --> 05:07:03.520]  Вот.
[05:07:04.520 --> 05:07:06.520]  Но тогда получается, что...
[05:07:06.520 --> 05:07:07.520]  Вот.
[05:07:07.520 --> 05:07:11.520]  Но тогда получается, что так как мы тут за В квадрат делаем запуск...
[05:07:11.520 --> 05:07:12.520]  Нет, хотя нет.
[05:07:12.520 --> 05:07:15.520]  А за какую этим точку мы делаем один запуск?
[05:07:16.520 --> 05:07:18.520]  Давайте теперь посчитаем.
[05:07:19.520 --> 05:07:23.520]  Ну за Е так же можно делать.
[05:07:23.520 --> 05:07:26.520]  Ну в принципе да.
[05:07:26.520 --> 05:07:28.520]  За В квадрат?
[05:07:28.520 --> 05:07:30.520]  Да. Можно в принципе это...
[05:07:30.520 --> 05:07:32.520]  Ну вот.
[05:07:32.520 --> 05:07:34.520]  Ну не за Е, а даже за В квадрат.
[05:07:34.520 --> 05:07:36.520]  За Я.
[05:07:38.520 --> 05:07:40.520]  Ну как бы вот это...
[05:07:40.520 --> 05:07:42.520]  Последователь сжати мы умеем делать за В квадрат.
[05:07:42.520 --> 05:07:44.520]  Да?
[05:07:44.520 --> 05:07:46.520]  Сейчас у нас же...
[05:07:49.520 --> 05:07:57.520]  То есть нам же нужно просто посчитать, сколько будет ликшин вот в таком вот дереве.
[05:07:57.520 --> 05:07:59.520]  Сколько будет ликшин.
[05:07:59.520 --> 05:08:01.520]  И умножить это все на В квадрат.
[05:08:01.520 --> 05:08:02.520]  Ну не совсем.
[05:08:02.520 --> 05:08:03.520]  Ну там еще надо...
[05:08:03.520 --> 05:08:04.520]  Ну там не совсем.
[05:08:04.520 --> 05:08:06.520]  Там же надо считать, за сколько мы будем вот эти сжатия делать.
[05:08:06.520 --> 05:08:14.520]  В смысле мы же можем сделать сжатия и потом такое делать не с нуля, а откатиться на этом назад.
[05:08:14.520 --> 05:08:16.520]  И потирать.
[05:08:16.520 --> 05:08:22.520]  Поэтому нам нужно посчитать просто размер этого дерева.
[05:08:22.520 --> 05:08:24.520]  Ну там правда...
[05:08:24.520 --> 05:08:27.520]  Ну желательно правда для рекурсивного запуска еще...
[05:08:27.520 --> 05:08:34.520]  Может быть вот перед этими двумя рекурсивными запусками еще пробежаться по ребраму и выкинуть лишние.
[05:08:34.520 --> 05:08:38.520]  Ну просто тут эти лишние прибегания тогда будут учитываться.
[05:08:38.520 --> 05:08:39.520]  Ну что?
[05:08:39.520 --> 05:08:42.520]  В общем, и ТО это кажется в...
[05:08:42.520 --> 05:08:45.520]  Подъедено по минимум двух.
[05:08:45.520 --> 05:08:46.520]  Нет он...
[05:08:46.520 --> 05:08:47.520]  Ну давайте так.
[05:08:47.520 --> 05:08:49.520]  Ну давайте так аккуратненько.
[05:08:49.520 --> 05:08:51.520]  Ну хотя нет тут...
[05:08:51.520 --> 05:08:52.520]  Нет.
[05:08:52.520 --> 05:08:53.520]  Зачем мы это делаем?
[05:08:53.520 --> 05:08:54.520]  Ну просто скажем так.
[05:08:54.520 --> 05:08:55.520]  Честно скажу.
[05:08:55.520 --> 05:09:01.520]  Вот тут в оригинальном алгоритме вот этих вот рентом шаффлов на ей ребер и с амортизацией этого нет.
[05:09:01.520 --> 05:09:05.520]  Там подразумевается, что как бы вы у каждой вершины есть степень.
[05:09:05.520 --> 05:09:10.520]  Зная эти степени вы можете за О от В загенерить рандомное ребро.
[05:09:10.520 --> 05:09:12.520]  Точнее за О от В сгенерите...
[05:09:12.520 --> 05:09:18.520]  То есть должны сгенерить в какой вершине оно будет и какой порядковый номер оно в нем будет.
[05:09:18.520 --> 05:09:20.520]  То есть можете сначала сгенерить в какой вершине оно будет,
[05:09:20.520 --> 05:09:25.520]  а потом перебрать ребра в вершине и выбрать из них рандомное.
[05:09:25.520 --> 05:09:28.520]  Да, с учетом весов соответственно.
[05:09:28.520 --> 05:09:34.520]  То есть это как бы делать для того, чтобы вот этих вот там амортизированных сжатей у вас не было.
[05:09:34.520 --> 05:09:36.520]  Вот понятно, да?
[05:09:36.520 --> 05:09:39.520]  Кажется, что в В куб получается...
[05:09:39.520 --> 05:09:40.520]  Ну почему?
[05:09:40.520 --> 05:09:42.520]  Ну давай так, смотри.
[05:09:42.520 --> 05:09:45.520]  Одна генерация рандома это О от В.
[05:09:45.520 --> 05:09:47.520]  Одно сжатие...
[05:09:47.520 --> 05:09:50.520]  Ну, кстати, тоже О от В.
[05:09:52.520 --> 05:09:58.520]  Потому что мы прям в честную берем две вершины и там перекопируем ребра.
[05:10:00.520 --> 05:10:03.520]  То есть одно сжатие это О от В.
[05:10:04.520 --> 05:10:07.520]  Тогда получается работает это у нас так.
[05:10:07.520 --> 05:10:09.520]  То есть получается асимпточка.
[05:10:09.520 --> 05:10:11.520]  То есть Т от В равно...
[05:10:11.520 --> 05:10:13.520]  Значит В...
[05:10:13.520 --> 05:10:15.520]  Значит минус В делить на корень из двух.
[05:10:17.520 --> 05:10:19.520]  Значит умножить на В.
[05:10:19.520 --> 05:10:21.520]  Это мы делаем вот эти сжатия.
[05:10:21.520 --> 05:10:26.520]  Плюс два Т от В делить на корень из двух.
[05:10:26.520 --> 05:10:28.520]  Так, ну это что такое?
[05:10:28.520 --> 05:10:31.520]  Ну короче говоря, это О от В квадрат.
[05:10:31.520 --> 05:10:33.520]  Плюс два Т от В делить...
[05:10:33.520 --> 05:10:35.520]  Нет, вообще нет.
[05:10:35.520 --> 05:10:36.520]  Хотя...
[05:10:36.520 --> 05:10:37.520]  Нет, смотри.
[05:10:37.520 --> 05:10:39.520]  Давай раскроем это.
[05:10:39.520 --> 05:10:41.520]  Давай так, получается В квадрат.
[05:10:41.520 --> 05:10:43.520]  Плюс два на...
[05:10:44.520 --> 05:10:47.520]  Плюс два, если В квадрат пополам.
[05:10:47.520 --> 05:10:49.520]  Плюс четыре там...
[05:10:49.520 --> 05:10:51.520]  В квадрат на четыре.
[05:10:51.520 --> 05:10:54.520]  Там на четыре плюс и так далее.
[05:10:54.520 --> 05:10:57.520]  Короче говоря, это В квадрат лог В.
[05:10:57.520 --> 05:10:59.520]  Вообще неплохо.
[05:10:59.520 --> 05:11:03.520]  То есть запуск был В квадрат, стал В квадрат лог В.
[05:11:03.520 --> 05:11:06.520]  Но зато он и дает нам правильный ответ.
[05:11:06.520 --> 05:11:08.520]  С вероятностью один делить на лог В.
[05:11:09.520 --> 05:11:12.520]  То есть получается, чтобы достичь константной ошибки,
[05:11:12.520 --> 05:11:14.520]  получается у нас совсем точка.
[05:11:14.520 --> 05:11:17.520]  О от В квадрат лог В квадрат В.
[05:11:21.520 --> 05:11:23.520]  Что не так?
[05:11:26.520 --> 05:11:28.520]  Ну по-моему...
[05:11:30.520 --> 05:11:32.520]  Шторвагер В.
[05:11:32.520 --> 05:11:33.520]  Ну почему?
[05:11:33.520 --> 05:11:35.520]  Не, ну да, не вылетел.
[05:11:35.520 --> 05:11:37.520]  Там было Z плюс V квадрат.
[05:11:37.520 --> 05:11:38.520]  Нет, извиняюсь.
[05:11:38.520 --> 05:11:39.520]  Стоп, стоп, стоп.
[05:11:39.520 --> 05:11:41.520]  Нет, Шторвагер был там сколько?
[05:11:41.520 --> 05:11:43.520]  А, ну да, там V Z плюс...
[05:11:44.520 --> 05:11:45.520]  Ну да.
[05:11:45.520 --> 05:11:46.520]  Ну вот.
[05:11:46.520 --> 05:11:47.520]  Да.
[05:11:47.520 --> 05:11:48.520]  Правда...
[05:11:50.520 --> 05:11:51.520]  Нет, смотрите.
[05:11:51.520 --> 05:11:53.520]  Нет, там правда есть маленькая подлянка, конечно.
[05:11:53.520 --> 05:11:55.520]  Да, Шторвагер работает как бы с произвольными весами.
[05:11:55.520 --> 05:11:57.520]  А у нас тут как бы они не отрицают.
[05:11:58.520 --> 05:12:00.520]  Правда, с другой стороны, заметим, что...
[05:12:00.520 --> 05:12:02.520]  Правда, теперь заметим маленькую прятную весть.
[05:12:02.520 --> 05:12:08.520]  Да, заметим, что Шторвагер точно работает, если веса целые.
[05:12:10.520 --> 05:12:12.520]  Потому что мы же можем делать буквально...
[05:12:12.520 --> 05:12:16.520]  Мы же мысленно можем считать, что у нас нет у ребра веса миллиард,
[05:12:16.520 --> 05:12:19.520]  мы можем считать, что там есть миллиард кратных ребр, правда?
[05:12:20.520 --> 05:12:21.520]  Ну вот.
[05:12:21.520 --> 05:12:24.520]  Ну, явно в виде моих не хорить, а генерить рандом тот же самый за ОАТВ.
[05:12:25.520 --> 05:12:27.520]  И между прочим, это как раз...
[05:12:27.520 --> 05:12:32.520]  И тогда получается, что, по крайней мере, уже, очевидно, для целых мы, оказывается, умеем.
[05:12:33.520 --> 05:12:37.520]  То есть, оказывается, на самом деле, Каргерштайн прекрасно работает для целых произвольных весов.
[05:12:38.520 --> 05:12:39.520]  Ну и для рациональных.
[05:12:39.520 --> 05:12:41.520]  С другой стороны, да, он так работает и для рациональных.
[05:12:42.520 --> 05:12:43.520]  А не рациональных?
[05:12:43.520 --> 05:12:45.520]  Ну да, предельный переход радость.
[05:12:46.520 --> 05:12:47.520]  Да, поздравляю.
[05:12:49.520 --> 05:12:52.520]  То есть, на самом деле, ограничение на то, что у нас только там какие-то ребра,
[05:12:52.520 --> 05:12:54.520]  на самом деле, не такое уж изначительное.
[05:12:54.520 --> 05:12:55.520]  Изначительное.
[05:12:57.520 --> 05:12:58.520]  А что не так?
[05:12:59.520 --> 05:13:01.520]  Почему мы не изучали рандом в 10 секунд?
[05:13:02.520 --> 05:13:03.520]  Ой.
[05:13:03.520 --> 05:13:06.520]  Ну потому, честно, потому, знаете, вот просто у этого рандома такая маленькая проблема.
[05:13:07.520 --> 05:13:09.520]  Потому что, знаете, я его не так много знаю.
[05:13:10.520 --> 05:13:14.520]  То есть, судя по текущему темпу, вот все, что я на тему знаю, вот, видимо, мы сегодня и обсудим.
[05:13:16.520 --> 05:13:21.520]  Потому что, нет, у меня просто осталось, на самом деле, если я так ничего не пропустил, осталось две большие задачи.
[05:13:21.520 --> 05:13:22.520]  Задачи.
[05:13:22.520 --> 05:13:23.520]  Задачи.
[05:13:23.520 --> 05:13:32.520]  Найти миностов за ОАПЕ и задача с гордым названием свидетели булева перемножения матриц.
[05:13:34.520 --> 05:13:35.520]  Нет, это свидетели.
[05:13:36.520 --> 05:13:38.520]  Так это почти запрещенные на территории России.
[05:13:39.520 --> 05:13:40.520]  Да не, господи.
[05:13:41.520 --> 05:13:42.520]  Признанные экстремистами.
[05:13:42.520 --> 05:13:44.520]  Не-не-не, алгоритмы слова еще никто не признавал.
[05:13:45.520 --> 05:13:46.520]  Экстремистами, да.
[05:13:47.520 --> 05:13:48.520]  Свидеть.
[05:13:48.520 --> 05:13:52.520]  Нет, хотя иногда на прошлом свидетели там отдельный юмор, конечно, потому что там...
[05:13:53.520 --> 05:13:54.520]  Ну, мало нет.
[05:13:54.520 --> 05:13:55.520]  Это наоборот.
[05:13:55.520 --> 05:13:56.520]  Этого у нас везде есть, знаете.
[05:13:57.520 --> 05:13:59.520]  Но там просто иногда экзотично звучит.
[05:13:59.520 --> 05:14:03.520]  То есть, на самом деле, это как бы все интересно, когда это начинают рекламировать и вставлять в телевидение.
[05:14:04.520 --> 05:14:07.520]  Вот видели, когда я еду в автобусе, а там на остановке висит огромная реклама.
[05:14:08.520 --> 05:14:10.520]  Значит, там телеканала с пастом, утренние передачи.
[05:14:11.520 --> 05:14:12.520]  И написано просто гениальное.
[05:14:13.520 --> 05:14:16.520]  Там называется «Господь Бог с нами по будням.
[05:14:16.520 --> 05:14:17.520]  Здесь семи до десяти».
[05:14:18.520 --> 05:14:20.520]  Ну вот, что это такое вообще?
[05:14:20.520 --> 05:14:21.520]  Все на полном серьезе.
[05:14:21.520 --> 05:14:22.520]  На остановке так написано.
[05:14:23.520 --> 05:14:25.520]  Но выяснилось, это у нас еще ничего.
[05:14:26.520 --> 05:14:32.520]  Потому что, когда там случайно в Турции, там тоже американский какой-то канал, видимо, тоже каких-то религиозных деятелей.
[05:14:32.520 --> 05:14:34.520]  И там есть просто передачи, которые на полном серьезе.
[05:14:34.520 --> 05:14:35.520]  Так и называется.
[05:14:35.520 --> 05:14:37.520]  «Иисус Христос приходит нам».
[05:14:37.520 --> 05:14:39.520]  Там называется «Сдори, Тительман».
[05:14:40.520 --> 05:14:42.520]  Сдори, Тительман.
[05:14:43.520 --> 05:14:44.520]  Ну, там девушка какая-то там ведет.
[05:14:46.520 --> 05:14:48.520]  Называется, но там...
[05:14:49.520 --> 05:14:53.520]  Ну, знаете, когда звучит, так звучит, «Господь приходит нам».
[05:14:53.520 --> 05:14:55.520]  Там называется Снэнси Ивановой.
[05:14:55.520 --> 05:14:57.520]  Думаю, а почему он именно с ней приходит?
[05:14:57.520 --> 05:14:58.520]  Почему?
[05:14:58.520 --> 05:15:00.520]  То есть как-то звучит, это очень странно.
[05:15:00.520 --> 05:15:03.520]  Но при этом в студии никакого Иисуса, естественно, нету.
[05:15:04.520 --> 05:15:05.520]  Да, а ведущая есть.
[05:15:06.520 --> 05:15:09.520]  Да, ну, то есть просто экзотично звучит.
[05:15:09.520 --> 05:15:13.520]  То есть я как бы ничего не могу плохого сказать про то, что она там конкретно говорит.
[05:15:13.520 --> 05:15:19.520]  Но с другой стороны, да, конечно, когда все эти вещи начинают пихать в современный маркетинг
[05:15:19.520 --> 05:15:21.520]  или в современной телевидении, звучит экзотично.
[05:15:22.520 --> 05:15:23.520]  Так, ладно.
[05:15:23.520 --> 05:15:25.520]  Ну что, будем делать перерыв?
[05:15:25.520 --> 05:15:26.520]  Ой, да.
[05:15:27.520 --> 05:15:33.520]  Сейчас, короче говоря, вообще утверждается, что кратные ребра либо все одновременно лежат,
[05:15:33.520 --> 05:15:35.520]  либо все одновременно не лежат, так?
[05:15:37.520 --> 05:15:38.520]  Да, и что?
[05:15:44.520 --> 05:15:46.520]  Ну, все еще что-то не так.
[05:15:47.520 --> 05:15:48.520]  Вот.
[05:15:56.520 --> 05:15:57.520]  Сейчас.
[05:16:07.520 --> 05:16:08.520]  Сейчас.
[05:16:09.520 --> 05:16:13.520]  Я не понимаю, почему они нас не путают в кратные ребра?
[05:16:14.520 --> 05:16:17.520]  А почему они нас должны путать?
[05:16:17.520 --> 05:16:21.520]  Просто если какое-то ребро жирно-кратное, значит, оно с большой вероятностью А не входит в разрез,
[05:16:21.520 --> 05:16:23.520]  Б будет выбрано и сжато.
[05:16:24.520 --> 05:16:25.520]  В чем проблема?
[05:16:25.520 --> 05:16:27.520]  Почему не входит в разрез?
[05:16:27.520 --> 05:16:29.520]  Ну, потому что мы же минимальный разрез ищем.
[05:16:29.520 --> 05:16:34.520]  Поэтому очень жирно-кратное ребро, на плюс бесконечность, скорее всего, в этот разрез не входит.
[05:16:39.520 --> 05:16:43.520]  Да, кстати, со временем даже вообще возникает интересный факт.
[05:16:43.520 --> 05:16:47.520]  Минимальный разрез в сжатом графе, он даже может быть больше, чем исходный.
[05:16:48.520 --> 05:16:50.520]  Ну, то есть разрезы не уменьшаются.
[05:16:51.520 --> 05:16:57.520]  Такие разрезы остаются теми же, просто мы некоторые из них просто уже теперь игнорируем в силу сжата хорошим.
[05:17:08.520 --> 05:17:22.520]  Ну, короче, меня немножко напрягает ситуация, а я у нас ровно на одной из ребер Рома Ба навешана куча разных ребр.
[05:17:23.520 --> 05:17:24.520]  И что?
[05:17:25.520 --> 05:17:28.520]  Ну, значит, с большой вероятностью просто мы...
[05:17:28.520 --> 05:17:31.520]  Ну, во-первых, разрез равен 2 и через эти...
[05:17:31.520 --> 05:17:36.520]  И он через... И там несколько таких разрезов, но ни один из них через кратные ребра не проходит.
[05:17:39.520 --> 05:17:41.520]  Я умею 3, ну ладно.
[05:17:43.520 --> 05:17:44.520]  А, ну окей, да.
[05:17:44.520 --> 05:17:45.520]  Вот.
[05:17:45.520 --> 05:17:49.520]  Значит, соответственно, но тогда просто большой вероятностью придет следующее.
[05:17:49.520 --> 05:17:57.520]  В качестве выбранного ребра выберется ребро просто одной из этих кратных, и эти две вершины будут торжественно сжаты, и эти ребра ликвидируются.
[05:17:57.520 --> 05:18:03.520]  Останется треугольник, из которого, собственно, у тебя эти три разреза, кстати, выплывут.
[05:18:08.520 --> 05:18:09.520]  Вот.
[05:18:29.520 --> 05:18:31.520]  Сейчас.
[05:18:31.520 --> 05:18:33.520]  Ладно, я вроде...
[05:18:33.520 --> 05:18:44.520]  Ну, короче, у нас не может быть ситуации, что мы пытаемся сжать не ребро ответа, но вместе с ним случайно сжимаем и ребро ответа.
[05:18:44.520 --> 05:18:45.520]  А, нет, конечно.
[05:18:45.520 --> 05:18:50.520]  Вот. Именно из-за того, что все кратные ребра либо одновременно лежат, либо одновременно не лежат.
[05:18:50.520 --> 05:18:51.520]  Ну, типа.
[05:18:52.520 --> 05:18:55.520]  Ну, то есть, короче, если бы такого не было, то мы бы могли условно...
[05:18:58.520 --> 05:19:05.520]  Ну да, понятно. То есть, мы бы могли пытаться сжать не ребро ответа, но вместе с ним случайно сжать и ребро ответа тоже.
[05:19:05.520 --> 05:19:06.520]  Ну да.
[05:19:06.520 --> 05:19:10.520]  Вот. Но это тоже не получится, и поэтому оценка работает.
[05:19:10.520 --> 05:19:15.520]  Не, ну оценка, не в чем. Оценка, ну оценка вообще, она была просто предельно тупая.
[05:19:15.520 --> 05:19:17.520]  Она вообще ни на что на это не смотрела.
[05:19:17.520 --> 05:19:19.520]  Она просто сказала, мы выбираем...
[05:19:23.520 --> 05:19:29.520]  Потому что мы выбираем ребро, которое сжать, но когда мы его сжимаем, мы вместе с ним сжимаем еще какие-то ребра.
[05:19:29.520 --> 05:19:35.520]  И нам важно, что если мы выбрали ребро, которое не лежит, то он без разреза не сожмется.
[05:19:35.520 --> 05:19:37.520]  А, ну в этом смысле, да, да, да.
[05:19:38.520 --> 05:19:39.520]  Ну да.
[05:19:40.520 --> 05:19:41.520]  Хорошо, да.
[05:19:42.520 --> 05:19:43.520]  Да, ладно.
[05:19:43.520 --> 05:19:49.520]  Идем дальше. Сейчас будет просто одна из, просто два линии, просто жемчужины этой коллекции.
[05:19:49.520 --> 05:19:51.520]  Сейчас мы дадим, да.
[05:19:53.520 --> 05:19:55.520]  Какой там? Миностоп за линию.
[05:19:56.520 --> 05:19:57.520]  Мы же мечтали об этом.
[05:19:59.520 --> 05:20:02.520]  Ну там, детерминированная наука, возможно, об этом даже...
[05:20:04.520 --> 05:20:08.520]  То есть, возможно, об этом уже даже не мечтает, потому что есть, потому что там есть...
[05:20:08.520 --> 05:20:12.520]  Потому что возможно выяснито, что оптимальный алгоритм работает все-таки дольше, чем за O от V.
[05:20:12.520 --> 05:20:14.520]  Ну хотя бы даже от V плюс E, конечно.
[05:20:14.520 --> 05:20:16.520]  В смысле O от E, да.
[05:20:16.520 --> 05:20:18.520]  Но это мы обсуждали, не будем сейчас повторяться.
[05:20:19.520 --> 05:20:23.520]  Но если у нас разрешается мотожидание, то, в общем-то, можно и за E.
[05:20:23.520 --> 05:20:27.520]  Хотя, правда, интересно, что алгоритм, который я скажу, датируется 95-м годам.
[05:20:29.520 --> 05:20:32.520]  Как говорится, авторы Каргер Кляйм Тариян.
[05:20:34.520 --> 05:20:36.520]  Знакомо. Две фамилии вы где-то слышали.
[05:20:36.520 --> 05:20:37.520]  Кляйм?
[05:20:39.520 --> 05:20:40.520]  Ну вот.
[05:20:41.520 --> 05:20:42.520]  А может и клей.
[05:20:43.520 --> 05:20:44.520]  Ну да. Может это даже и он.
[05:20:45.520 --> 05:20:46.520]  А может и нет.
[05:20:46.520 --> 05:20:47.520]  Точно.
[05:20:47.520 --> 05:20:51.520]  Нет. Ну как бы сказать, скажи так, у нас есть метод клей, на который вот это типа Минкоста искал.
[05:20:52.520 --> 05:20:55.520]  Да. Возможно, это скорее всего тот клей.
[05:20:55.520 --> 05:20:57.520]  Это тот клей, который...
[05:20:57.520 --> 05:20:59.520]  Бутылка, то ему есть.
[05:21:00.520 --> 05:21:01.520]  Ну да.
[05:21:01.520 --> 05:21:02.520]  Ну.
[05:21:02.520 --> 05:21:04.520]  Ну клейнов. Ой, ну клейнов много.
[05:21:04.520 --> 05:21:06.520]  Как бы фамилия выглядит так.
[05:21:06.520 --> 05:21:08.520]  Не, бутылка, а да.
[05:21:09.520 --> 05:21:10.520]  Ой.
[05:21:11.520 --> 05:21:12.520]  Я помню даже.
[05:21:12.520 --> 05:21:13.520]  Ладно.
[05:21:13.520 --> 05:21:15.520]  Так вот. Итак, ищем минус 100.
[05:21:16.520 --> 05:21:18.520]  Ну, за счет чего мы его ищем.
[05:21:18.520 --> 05:21:20.520]  Давайте немножко воспомним.
[05:21:21.520 --> 05:21:22.520]  Да, ну давайте так.
[05:21:22.520 --> 05:21:25.520]  Можем для простоты считать, что у нас все ребра попарно различны по весам.
[05:21:26.520 --> 05:21:30.520]  Но помните, для того, чтобы у нас, скажем, вес был один.
[05:21:30.520 --> 05:21:32.520]  Ну или просто, чтобы лишний раз не заморачиваться.
[05:21:33.520 --> 05:21:34.520]  Вот.
[05:21:34.520 --> 05:21:36.520]  Просто смотрите.
[05:21:37.520 --> 05:21:41.520]  Ну вот, то есть на самом деле у нас была такая фишка.
[05:21:41.520 --> 05:21:44.520]  То есть у нас был такой критерий минимальности остова.
[05:21:45.520 --> 05:21:50.520]  Критерий заключался в том, что каждое ребро не из остова должно быть максимумом,
[05:21:50.520 --> 05:21:53.520]  настягиваемым им в цикле. Согласны?
[05:21:55.520 --> 05:21:56.520]  Да.
[05:21:56.520 --> 05:21:58.520]  Причем это условие было очевидно необходимо,
[05:21:58.520 --> 05:22:01.520]  и чуть менее очевидно, достаточно.
[05:22:01.520 --> 05:22:03.520]  Стоп, максимальная остова?
[05:22:03.520 --> 05:22:05.520]  Нет, минимальная остова.
[05:22:05.520 --> 05:22:09.520]  То есть ребро должно быть максимум на стягиваемом цикле, если остов минимальный.
[05:22:09.520 --> 05:22:11.520]  Мы ищем минимальный остов.
[05:22:12.520 --> 05:22:13.520]  Вот.
[05:22:14.520 --> 05:22:17.520]  То есть вот такая у нас красота.
[05:22:18.520 --> 05:22:19.520]  Вот.
[05:22:20.520 --> 05:22:22.520]  То есть это у нас такой критерий.
[05:22:23.520 --> 05:22:27.520]  Но более того, на самом деле нам сейчас поможет вообще очень интересный факт.
[05:22:28.520 --> 05:22:31.520]  На самом деле вообще маленькое такое утверждение.
[05:22:33.520 --> 05:22:36.520]  То есть если существует какой-то лес,
[05:22:39.520 --> 05:22:43.520]  допустим у нас в графе существует в принципе какой-то лес,
[05:22:44.520 --> 05:22:46.520]  какой-нибудь,
[05:22:47.520 --> 05:22:50.520]  относительно которого это ребро тяжелое.
[05:22:50.520 --> 05:22:52.520]  Ну давайте так, давайте введем.
[05:22:52.520 --> 05:22:56.520]  Во-первых, да, есть понятие МСТ, это минимум спаннинг 3.
[05:22:57.520 --> 05:23:01.520]  Но у нас будет иметь место понятие МСФ,
[05:23:01.520 --> 05:23:03.520]  Минимум Спаннинг Форест.
[05:23:04.520 --> 05:23:10.520]  То есть типа если граф не связанный, то мы в каждой компоненте ищем по весовой, это будет МСФ.
[05:23:13.520 --> 05:23:20.520]  И теперь, если у нас есть просто, так сказать, вот этот вот стягивающий лес,
[05:23:20.520 --> 05:23:22.520]  то есть этот вот спаннинг форест,
[05:23:22.520 --> 05:23:24.520]  то тогда оказывается, ну вот,
[05:23:24.520 --> 05:23:27.520]  то у нас оказывается критерий, то этот спаннинг форест он минимальный,
[05:23:27.520 --> 05:23:30.520]  тогда и только тогда, когда любое ребро там самое тяжелое.
[05:23:30.520 --> 05:23:33.520]  Давайте вот введем определение, которое тут помогает.
[05:23:33.520 --> 05:23:35.520]  То есть определение.
[05:23:36.520 --> 05:23:47.520]  Там пусть, допустим, F это какой-то остовный лес,
[05:23:48.520 --> 05:23:50.520]  какой-то не обязательно минимальный.
[05:23:54.520 --> 05:23:57.520]  И у нас есть какое-то просто ребро.
[05:23:58.520 --> 05:24:07.520]  Тогда, значит, внимание, тогда это ребро E,
[05:24:08.520 --> 05:24:14.520]  будем его называть F тяжелым,
[05:24:14.520 --> 05:24:28.520]  если, ну давайте так, E не лежит в F,
[05:24:29.520 --> 05:24:37.520]  и E максимально, нет, на цикле,
[05:24:37.520 --> 05:24:40.520]  на стягиваемом.
[05:24:59.520 --> 05:25:02.520]  Ну вот, ну так напишу.
[05:25:02.520 --> 05:25:06.520]  Иначе, ну так, то есть если вот там ребро либо лежит в F,
[05:25:06.520 --> 05:25:08.520]  либо не максимально,
[05:25:08.520 --> 05:25:11.520]  то есть тогда ребро E будет называться,
[05:25:11.520 --> 05:25:15.520]  ну как несложно догадаться, F легким.
[05:25:15.520 --> 05:25:17.520]  Логично, да?
[05:25:28.520 --> 05:25:30.520]  Вот такая красота.
[05:25:32.520 --> 05:25:34.520]  Маленькое легкое ребро.
[05:25:36.520 --> 05:25:56.520]  Вот, ну опять-таки, ну просто там такая терминология пригодится.
[05:25:56.520 --> 05:26:00.520]  Ну опять-таки, ну, чего?
[05:26:00.520 --> 05:26:05.520]  Я просто так написал, чтобы сказать,
[05:26:05.520 --> 05:26:07.520]  что как бы, чтобы ребро,
[05:26:07.520 --> 05:26:13.520]  что как бы ребра самого остова тоже оказываются там, собственно, легкими.
[05:26:14.520 --> 05:26:16.520]  Так вот, просто в чем фишка?
[05:26:16.520 --> 05:26:19.520]  Максимально на каждом стягиваемом в F цикле?
[05:26:19.520 --> 05:26:21.520]  То есть на всех таких циклах?
[05:26:21.520 --> 05:26:22.520]  В смысле?
[05:26:22.520 --> 05:26:25.520]  В остове, если F заданный остовный лес,
[05:26:25.520 --> 05:26:27.520]  то E стягивает ровно один цикл.
[05:26:27.520 --> 05:26:30.520]  Значит, теперь смотрите.
[05:26:30.520 --> 05:26:33.520]  Мистическое красное утверждение.
[05:26:35.520 --> 05:26:37.520]  Утверждение.
[05:26:37.520 --> 05:26:43.520]  Если E, F легкое относительно...
[05:26:43.520 --> 05:26:45.520]  Каким цветом?
[05:26:45.520 --> 05:26:47.520]  Зачем?
[05:26:47.520 --> 05:26:49.520]  Нет, нет, нет, нет.
[05:26:49.520 --> 05:26:51.520]  Цвет правильный, слово неправильное.
[05:26:51.520 --> 05:26:55.520]  F тяжелое относительно,
[05:26:56.520 --> 05:26:58.520]  относительно,
[05:27:01.520 --> 05:27:03.520]  хотя бы какого-то F,
[05:27:04.520 --> 05:27:06.520]  бы какого-то
[05:27:08.520 --> 05:27:10.520]  остовного леса,
[05:27:15.520 --> 05:27:17.520]  то, что?
[05:27:19.520 --> 05:27:20.520]  Да.
[05:27:20.520 --> 05:27:23.520]  То E не принадлежит
[05:27:24.520 --> 05:27:26.520]  минимальному остову.
[05:27:27.520 --> 05:27:30.520]  Минимальному остовному лесу.
[05:27:32.520 --> 05:27:34.520]  То есть вот жестко.
[05:27:34.520 --> 05:27:36.520]  То есть там не...
[05:27:36.520 --> 05:27:38.520]  То есть просто...
[05:27:38.520 --> 05:27:40.520]  То есть если просто найдется хотя бы какой-нибудь лес,
[05:27:40.520 --> 05:27:42.520]  относительно которого E тяжелое,
[05:27:42.520 --> 05:27:43.520]  то все плохо.
[05:27:43.520 --> 05:27:45.520]  Так, а почему это так-то вообще?
[05:27:46.520 --> 05:27:48.520]  Где заметить?
[05:27:48.520 --> 05:27:50.520]  Ну, в F, конечно, можно.
[05:27:50.520 --> 05:27:52.520]  А глобально?
[05:27:59.520 --> 05:28:01.520]  Так, допустим.
[05:28:01.520 --> 05:28:05.520]  И она не минимальная на своем пути.
[05:28:05.520 --> 05:28:09.520]  Ну, тогда можно добавить вот это вот ребро,
[05:28:09.520 --> 05:28:12.520]  которое меньше, и убрать наше.
[05:28:12.520 --> 05:28:14.520]  Мы все еще получим остовный лес,
[05:28:14.520 --> 05:28:16.520]  и вес у него будет меньше.
[05:28:16.520 --> 05:28:18.520]  Нет, давайте, почему?
[05:28:18.520 --> 05:28:20.520]  Там другой, потому что мы без...
[05:28:20.520 --> 05:28:22.520]  И что? Мы, может, выкинули ребро,
[05:28:22.520 --> 05:28:24.520]  потом добавили ребро, и получилось просто
[05:28:24.520 --> 05:28:26.520]  две компоненты за циклом,
[05:28:26.520 --> 05:28:28.520]  а не остов.
[05:28:29.520 --> 05:28:32.520]  Сейчас, но у нас есть лес,
[05:28:32.520 --> 05:28:34.520]  мы удалили одно ребро
[05:28:34.520 --> 05:28:36.520]  и добавили одно ребро.
[05:28:36.520 --> 05:28:38.520]  При том, что мы потеряли связность.
[05:28:38.520 --> 05:28:42.520]  Ну, а почему мы ее не потеряли?
[05:28:42.520 --> 05:28:44.520]  Что?
[05:28:44.520 --> 05:28:46.520]  Тут утверждение не про...
[05:28:46.520 --> 05:28:48.520]  Сейчас я...
[05:28:48.520 --> 05:28:50.520]  Про все леса.
[05:28:50.520 --> 05:28:53.520]  Если оно E тяжелое, относительно хотя бы какого-то,
[05:28:53.520 --> 05:28:55.520]  то не принадлежит никакому.
[05:28:55.520 --> 05:28:57.520]  Нет, нет, сейчас.
[05:28:57.520 --> 05:29:03.520]  Да, тут поаккуратнее надо, да.
[05:29:05.520 --> 05:29:06.520]  Вот.
[05:29:06.520 --> 05:29:08.520]  Но доказательства, конечно, близко к такому.
[05:29:08.520 --> 05:29:10.520]  То есть доказательства такое.
[05:29:10.520 --> 05:29:12.520]  Пусть у нас действительно E
[05:29:12.520 --> 05:29:16.520]  неожиданно в каком-то остове нарисовалось.
[05:29:19.520 --> 05:29:21.520]  Вот какой-то жил был тут,
[05:29:21.520 --> 05:29:23.520]  остов какой-то...
[05:29:24.520 --> 05:29:26.520]  И вот это E.
[05:29:27.520 --> 05:29:29.520]  Тогда смотрите, какая ситуация.
[05:29:29.520 --> 05:29:34.520]  В этом F у нас E самое тяжелое.
[05:29:34.520 --> 05:29:36.520]  То есть существует какой-то путь
[05:29:36.520 --> 05:29:38.520]  от этой вершины до этой,
[05:29:38.520 --> 05:29:40.520]  без вот этого ребра.
[05:29:40.520 --> 05:29:43.520]  Без вот этого ребра существует путь
[05:29:43.520 --> 05:29:45.520]  по каким-то ребрам,
[05:29:45.520 --> 05:29:48.520]  каждый из которых меньше, чем E.
[05:29:48.520 --> 05:29:50.520]  Ну, теперь заметим следующее.
[05:29:50.520 --> 05:29:53.520]  Если я удалю это ребро из вот этого фиолетового основа,
[05:29:53.520 --> 05:29:56.520]  то дерево распадется на две части.
[05:29:58.520 --> 05:30:00.520]  Теперь давайте пойдем по этим ребрамам.
[05:30:00.520 --> 05:30:02.520]  То есть эти ребра могут быть, кстати, в этом остове
[05:30:02.520 --> 05:30:05.520]  вполне себе быть, могут тут как угодно ходить,
[05:30:05.520 --> 05:30:07.520]  ходить, ходить, ходить, ходить.
[05:30:07.520 --> 05:30:09.520]  Но рано или поздно этот разрез,
[05:30:09.520 --> 05:30:12.520]  путь пересекет, потому что мы должны сюда попасть.
[05:30:12.520 --> 05:30:13.520]  Может быть даже не один раз,
[05:30:13.520 --> 05:30:15.520]  может даже три раза пересекет,
[05:30:15.520 --> 05:30:17.520]  пять раз, семь и так далее.
[05:30:17.520 --> 05:30:20.520]  Но вот найдем вот это вот хоть какой-нибудь ребро,
[05:30:20.520 --> 05:30:22.520]  который эти две компоненты пересекает.
[05:30:22.520 --> 05:30:25.520]  Ну, тогда поздравляю, давайте его добавим в остов
[05:30:25.520 --> 05:30:28.520]  вместо ей, и вот теперь получится меньше.
[05:30:36.520 --> 05:30:37.520]  А все равно можно выкинуть,
[05:30:37.520 --> 05:30:39.520]  потому что мы можем без него обойтись.
[05:30:47.520 --> 05:30:49.520]  Смотрите, давайте так.
[05:30:49.520 --> 05:30:51.520]  Это утверждение в таком виде верно, конечно,
[05:30:51.520 --> 05:30:52.520]  именно в жестком предположении,
[05:30:52.520 --> 05:30:54.520]  что все веса попарно различны.
[05:30:55.520 --> 05:30:59.520]  Идеологический алгоритм будет мыслить так.
[05:30:59.520 --> 05:31:04.520]  Мы тем или иным способом прорядим ребра,
[05:31:04.520 --> 05:31:07.520]  то есть возьмем не все ребра,
[05:31:07.520 --> 05:31:10.520]  а просто какое-то там рандомное подношество.
[05:31:10.520 --> 05:31:13.520]  Из этого рандомного подношества выжмем минус 100,
[05:31:13.520 --> 05:31:15.520]  а потом вернем все старые ребра
[05:31:15.520 --> 05:31:18.520]  и удалим все тяжелые относительно него.
[05:31:21.520 --> 05:31:23.520]  То есть с этой точки зрения мы можем сказать,
[05:31:23.520 --> 05:31:28.520]  что как бы без каждого из таких ребр можно просто обойтись.
[05:31:28.520 --> 05:31:30.520]  То есть оно не нужно.
[05:31:32.520 --> 05:31:34.520]  То есть таким образом мы прорядим ребра,
[05:31:34.520 --> 05:31:36.520]  и на оставшемся графе просто найдем,
[05:31:36.520 --> 05:31:39.520]  то есть еще раз запустимся рекурсивно и найдем минус 100.
[05:31:39.520 --> 05:31:41.520]  То есть получится два рекурсивных запуска.
[05:31:43.520 --> 05:31:44.520]  Чего?
[05:31:46.520 --> 05:31:48.520]  Чего? Не понял.
[05:31:53.520 --> 05:31:54.520]  Ну да.
[05:31:54.520 --> 05:31:57.520]  А мы все равно по одному будем выбирать.
[05:31:57.520 --> 05:32:00.520]  Потому что у нас будет один фиксированный лес,
[05:32:00.520 --> 05:32:03.520]  в котором мы по одному будем убивать ребра.
[05:32:03.520 --> 05:32:07.520]  Так что тут технически никаких проблем нет.
[05:32:07.520 --> 05:32:10.520]  То есть это мы будем делать идеологически.
[05:32:10.520 --> 05:32:12.520]  Да, еще у нас будет черный ящик,
[05:32:12.520 --> 05:32:16.520]  который для нас будет действительно мистически черный ящик.
[05:32:16.520 --> 05:32:21.520]  Да, смотрите, мы не умеем с вами за O от E искать минус 100.
[05:32:21.520 --> 05:32:24.520]  Но мы умеем за O от E его проверять.
[05:32:26.520 --> 05:32:28.520]  Значит, мистическое утверждение.
[05:32:28.520 --> 05:32:30.520]  Существует, ну то есть задача,
[05:32:30.520 --> 05:32:33.520]  дан граф и дан остов в нем.
[05:32:33.520 --> 05:32:36.520]  Минималем ли остов?
[05:32:37.520 --> 05:32:39.520]  Да или нет?
[05:32:41.520 --> 05:32:43.520]  А, вот этому критерию?
[05:32:44.520 --> 05:32:47.520]  Да, вот так вот, но отдельно вопрос как?
[05:32:47.520 --> 05:32:50.520]  Потому что честно говоря, я пытался придумать,
[05:32:50.520 --> 05:32:52.520]  можно ли это сделать за O от E?
[05:32:55.520 --> 05:32:57.520]  Да, можно за O от V.
[05:32:57.520 --> 05:33:01.520]  Можно докопаться, видимо, до Кунти Кирмана.
[05:33:01.520 --> 05:33:05.520]  В конце концов, мы все ил-Сашки умеем за O от единицы искать.
[05:33:05.520 --> 05:33:10.520]  Остается только искать, то есть мы живем в офлайне,
[05:33:10.520 --> 05:33:13.520]  поэтому можно там найти минимум на путях в дереве.
[05:33:13.520 --> 05:33:15.520]  Поэтому там можно как-то ужимать.
[05:33:15.520 --> 05:33:21.520]  К сожалению, я на перемене сидел, пытался придумать,
[05:33:21.520 --> 05:33:24.520]  не упитывается тут какой-нибудь метод 4-х русских,
[05:33:24.520 --> 05:33:26.520]  но мне не удалось.
[05:33:31.520 --> 05:33:33.520]  Утверждается, что есть конкретный алгоритм,
[05:33:33.520 --> 05:33:36.520]  в принципе в конспекте приводится даже точная ссылка.
[05:33:36.520 --> 05:33:39.520]  Что там есть такой товарищ Хагеруп,
[05:33:39.520 --> 05:33:42.520]  собственно у которого там от 2010 года такой алгоритм есть.
[05:33:43.520 --> 05:33:45.520]  2010?
[05:33:45.520 --> 05:33:48.520]  Видимо это какой новый, видимо достаточно простой алгоритм.
[05:33:48.520 --> 05:33:54.520]  Возможно, алгоритм 1995 года предлагал это делать более страшными средствами.
[05:33:54.520 --> 05:33:56.520]  Для Тарьяна это не новость, помните же этот прикол,
[05:33:56.520 --> 05:33:59.520]  что линкат появился за два года до сплей дерева.
[05:33:59.520 --> 05:34:02.520]  Но чтобы упихать лог квадрат за лог, они там сказали,
[05:34:02.520 --> 05:34:05.520]  что давайте просто делать это над нашим супер укуренным деревом,
[05:34:05.520 --> 05:34:07.520]  вот с такими свойствами.
[05:34:07.520 --> 05:34:09.520]  А потом через два года появился сплей дерева,
[05:34:09.520 --> 05:34:11.520]  которая это все схомякала.
[05:34:11.520 --> 05:34:16.520]  Поэтому в стиле Тарьяна сделаем пока так,
[05:34:16.520 --> 05:34:19.520]  а потом может придумываться что-то более красивое.
[05:34:19.520 --> 05:34:21.520]  В принципе логично.
[05:34:21.520 --> 05:34:27.520]  Одно дело как бы победить задачу, а другое дело победить задачу более красиво.
[05:34:28.520 --> 05:34:30.520]  Ну вот.
[05:34:30.520 --> 05:34:32.520]  То есть как бы...
[05:34:32.520 --> 05:34:34.520]  Так вот.
[05:34:34.520 --> 05:34:37.520]  В общем, мы будем считать, у нас есть черный ящик,
[05:34:37.520 --> 05:34:39.520]  который на самом деле...
[05:34:39.520 --> 05:34:42.520]  Более того, этот черный ящик будет за О от В плюс Е,
[05:34:42.520 --> 05:34:46.520]  даже не просто проверять, являются ли остов минимальным да или нет,
[05:34:46.520 --> 05:34:49.520]  а еще и на самом деле просто для каждого ребра проверять,
[05:34:49.520 --> 05:34:52.520]  тяжелое оно или легкое.
[05:34:52.520 --> 05:34:55.520]  Да, это более сильное утверждение.
[05:34:56.520 --> 05:35:00.520]  В общем, короче говоря, если у нас в графе дан какой-нибудь лес,
[05:35:00.520 --> 05:35:06.520]  то мы умеем за О от В плюс Е вытянуть тяжелое относительно его ребра.
[05:35:07.520 --> 05:35:09.520]  Вот, понятно?
[05:35:12.520 --> 05:35:14.520]  Вот.
[05:35:16.520 --> 05:35:18.520]  Да, маленький прикол.
[05:35:19.520 --> 05:35:22.520]  Все в этом мире мелкий прикол.
[05:35:23.520 --> 05:35:25.520]  Вот.
[05:35:25.520 --> 05:35:27.520]  Итак.
[05:35:27.520 --> 05:35:32.520]  Ну и теперь исходя из этого, как мы будем работать.
[05:35:33.520 --> 05:35:36.520]  Работать мы будем следующим образом.
[05:35:36.520 --> 05:35:39.520]  Итак, у нас есть граф.
[05:35:40.520 --> 05:35:42.520]  Как всегда.
[05:35:42.520 --> 05:35:45.520]  Выверт шин, еребер, есть веса.
[05:35:46.520 --> 05:35:48.520]  Ищем минус 100.
[05:35:49.520 --> 05:35:51.520]  Так вот.
[05:35:51.520 --> 05:35:54.520]  Теперь такая весьма неожиданная идея.
[05:35:55.520 --> 05:35:57.520]  То есть алгорнод.
[05:35:59.520 --> 05:36:01.520]  Значит, первое, что мы делаем.
[05:36:01.520 --> 05:36:04.520]  Будем говорить, что у меня есть граф.
[05:36:04.520 --> 05:36:06.520]  Ладно, давайте, Ж штрих.
[05:36:08.520 --> 05:36:11.520]  Это будет равен такой граф на тех же вершинах.
[05:36:11.520 --> 05:36:15.520]  Ребра Е штрих, где Е штрих
[05:36:16.520 --> 05:36:18.520]  это под множество В.
[05:36:18.520 --> 05:36:20.520]  И каждая
[05:36:22.520 --> 05:36:24.520]  там Е
[05:36:24.520 --> 05:36:27.520]  из нот лежит в Е штрих
[05:36:30.520 --> 05:36:33.520]  с вероятностью 1,2.
[05:36:35.520 --> 05:36:37.520]  Вот просто в наглую проредим.
[05:36:37.520 --> 05:36:40.520]  В наглую пьем половину ребра.
[05:36:40.520 --> 05:36:42.520]  Кстати, можно и буквально, в принципе.
[05:36:43.520 --> 05:36:46.520]  Заранее скажу, что есть подозрение, что
[05:36:46.520 --> 05:36:48.520]  скорее всего, если вы выберете
[05:36:48.520 --> 05:36:50.520]  рандомное под множество Е пополам ребер,
[05:36:50.520 --> 05:36:52.520]  тоже будет работать.
[05:36:59.520 --> 05:37:00.520]  Нет.
[05:37:00.520 --> 05:37:02.520]  Нет, есть разница, смотрите.
[05:37:02.520 --> 05:37:04.520]  Здесь как бы в среднем ребер будет Е пополам.
[05:37:04.520 --> 05:37:08.520]  Их мог быть как все, так и ничего.
[05:37:12.520 --> 05:37:13.520]  Вот.
[05:37:13.520 --> 05:37:16.520]  А как бы нота можно попробовать
[05:37:16.520 --> 05:37:18.520]  собственную жестко поставить.
[05:37:18.520 --> 05:37:19.520]  Так вот.
[05:37:19.520 --> 05:37:21.520]  Так вот, идея такая.
[05:37:21.520 --> 05:37:23.520]  Значит, далее построим так.
[05:37:23.520 --> 05:37:25.520]  Значит, F штрих
[05:37:25.520 --> 05:37:27.520]  это будет
[05:37:27.520 --> 05:37:29.520]  там.
[05:37:29.520 --> 05:37:31.520]  Ну, короче, да.
[05:37:31.520 --> 05:37:33.520]  Значит, это будет
[05:37:35.520 --> 05:37:37.520]  найдем, короче, в этой штуке
[05:37:37.520 --> 05:37:39.520]  минус 100.
[05:37:40.520 --> 05:37:42.520]  Вот.
[05:37:42.520 --> 05:37:44.520]  Да.
[05:37:44.520 --> 05:37:46.520]  Видно, да?
[05:37:46.520 --> 05:37:48.520]  Рекурсивно.
[05:37:48.520 --> 05:37:49.520]  Да.
[05:37:49.520 --> 05:37:51.520]  Да, алгоритм будем называть
[05:37:51.520 --> 05:37:53.520]  рандомайст.
[05:37:53.520 --> 05:37:55.520]  Там
[05:37:55.520 --> 05:37:57.520]  MSF от
[05:37:57.520 --> 05:37:58.520]  G.
[05:37:58.520 --> 05:38:00.520]  А это алгоритм Лас-Вегас?
[05:38:00.520 --> 05:38:02.520]  Нет, он Монтакарм, наверное.
[05:38:02.520 --> 05:38:04.520]  Не, Лас-Вегасовский он будет.
[05:38:04.520 --> 05:38:06.520]  Нет, пока он, видите, пока он
[05:38:06.520 --> 05:38:08.520]  Лас-Вегасовский.
[05:38:08.520 --> 05:38:10.520]  Нет, он будет в итоге Лас-Вегасовский.
[05:38:10.520 --> 05:38:12.520]  Да, он с Монтажеданием, да.
[05:38:12.520 --> 05:38:14.520]  Нет, потому что, смотрите, что
[05:38:14.520 --> 05:38:16.520]  вот.
[05:38:19.520 --> 05:38:21.520]  То есть
[05:38:21.520 --> 05:38:23.520]  так вот, значит, просто дальше я сделаю так.
[05:38:23.520 --> 05:38:25.520]  Я возьму просто ребра.
[05:38:26.520 --> 05:38:28.520]  Значит, возьму F штрих, да.
[05:38:30.520 --> 05:38:32.520]  Так вот, теперь я заявлю.
[05:38:33.520 --> 05:38:35.520]  Теперь я скажу, что у меня теперь
[05:38:35.520 --> 05:38:37.520]  ребра E
[05:38:37.520 --> 05:38:39.520]  два штриха.
[05:38:40.520 --> 05:38:42.520]  Нет, эту строчку нужно писать, конечно,
[05:38:42.520 --> 05:38:44.520]  красным цветом.
[05:38:49.520 --> 05:38:51.520]  Значит, E два штриха.
[05:38:52.520 --> 05:38:54.520]  Пусть это будет, ну, за O от В
[05:38:54.520 --> 05:38:56.520]  плюс Е мы найдем
[05:38:57.520 --> 05:38:59.520]  F штрих тяжелые
[05:38:59.520 --> 05:39:01.520]  ребра.
[05:39:01.520 --> 05:39:03.520]  В общем,
[05:39:03.520 --> 05:39:05.520]  не в графе
[05:39:05.520 --> 05:39:07.520]  штрих, а в графе
[05:39:07.520 --> 05:39:09.520]  ну, в графе штрих понятно, там все такие
[05:39:09.520 --> 05:39:11.520]  ребра, очевидно, да.
[05:39:11.520 --> 05:39:13.520]  В G.
[05:39:17.520 --> 05:39:19.520]  Вот, так что, да, третий шаг, давайте скажем
[05:39:19.520 --> 05:39:21.520]  такой.
[05:39:23.520 --> 05:39:25.520]  Ф
[05:39:25.520 --> 05:39:27.520]  тяжелые ребра в G.
[05:39:27.520 --> 05:39:29.520]  То есть
[05:39:29.520 --> 05:39:31.520]  в частоте
[05:39:31.520 --> 05:39:33.520]  часто, то есть
[05:39:33.520 --> 05:39:35.520]  это
[05:39:37.520 --> 05:39:39.520]  ну, то есть туда могут входить
[05:39:39.520 --> 05:39:41.520]  ребра и из E штриха, и из дополнения
[05:39:41.520 --> 05:39:43.520]  E штриха.
[05:39:43.520 --> 05:39:45.520]  Так.
[05:39:49.520 --> 05:39:51.520]  Вот.
[05:39:51.520 --> 05:39:53.520]  Ну, и после этого я скажу, что в некотором
[05:39:53.520 --> 05:39:55.520]  смысле
[05:39:55.520 --> 05:39:57.520]  return
[05:39:57.520 --> 05:39:59.520]  то вы уже догадываетесь, что.
[05:40:13.520 --> 05:40:15.520]  А тут, да, E
[05:40:15.520 --> 05:40:17.520]  без E два штриха.
[05:40:17.520 --> 05:40:19.520]  Ну, да, хотелось бы, да,
[05:40:19.520 --> 05:40:21.520]  хотел бы, чтобы граф как-то сжимался.
[05:40:21.520 --> 05:40:23.520]  А теперь фишка такая.
[05:40:23.520 --> 05:40:25.520]  На самом деле я пропустил
[05:40:25.520 --> 05:40:27.520]  один очень важный шаг.
[05:40:27.520 --> 05:40:29.520]  Да, вот этот шаг номер ноль.
[05:40:29.520 --> 05:40:31.520]  Да.
[05:40:31.520 --> 05:40:33.520]  Чего?
[05:40:33.520 --> 05:40:35.520]  Да, так я не знаю, как ты
[05:40:35.520 --> 05:40:37.520]  понял.
[05:40:37.520 --> 05:40:39.520]  Ну,
[05:40:39.520 --> 05:40:41.520]  ну,
[05:40:41.520 --> 05:40:43.520]  ну,
[05:40:43.520 --> 05:40:45.520]  ну,
[05:40:45.520 --> 05:40:47.520]  как ты понял.
[05:40:47.520 --> 05:40:49.520]  Да.
[05:40:49.520 --> 05:40:51.520]  А действительно, что мы делаем, когда надо
[05:40:51.520 --> 05:40:53.520]  граф чуть-чуть сжать?
[05:40:53.520 --> 05:40:55.520]  Надо просто запустить несколько шагов
[05:40:55.520 --> 05:40:57.520]  в барвке.
[05:40:57.520 --> 05:40:59.520]  Да.
[05:40:59.520 --> 05:41:01.520]  И мы это сделаем.
[05:41:01.520 --> 05:41:03.520]  Выполнить.
[05:41:05.520 --> 05:41:07.520]  Точнее так. Нет, наоборот.
[05:41:07.520 --> 05:41:09.520]  Смотрите. Нет, это в самом начале
[05:41:09.520 --> 05:41:11.520]  надо сделать. Это первый шаг.
[05:41:11.520 --> 05:41:13.520]  А нулевой шаг выполнить
[05:41:13.520 --> 05:41:15.520]  три шага
[05:41:15.520 --> 05:41:17.520]  барвки.
[05:41:17.520 --> 05:41:19.520]  Да, именно три.
[05:41:19.520 --> 05:41:21.520]  Можете четыре, пожалуйста.
[05:41:21.520 --> 05:41:23.520]  Ну, давайте
[05:41:23.520 --> 05:41:25.520]  кашегов.
[05:41:25.520 --> 05:41:27.520]  Вот.
[05:41:27.520 --> 05:41:29.520]  А лучше как равно четырём, чтобы не путаться.
[05:41:29.520 --> 05:41:31.520]  Да, да, да.
[05:41:31.520 --> 05:41:33.520]  Ну, так-то у нас
[05:41:33.520 --> 05:41:35.520]  тот алгоритм с как равно четырём тоже работал.
[05:41:35.520 --> 05:41:37.520]  Нет, там, по-моему,
[05:41:37.520 --> 05:41:39.520]  там, по-моему, ка не меньше четырём было.
[05:41:39.520 --> 05:41:41.520]  Где-то пользовались шагами. Минус два больше либо равно двух.
[05:41:41.520 --> 05:41:43.520]  Ну, было.
[05:41:43.520 --> 05:41:45.520]  Ну, ой, давайте.
[05:41:45.520 --> 05:41:47.520]  Не будем сейчас это вспобедать,
[05:41:47.520 --> 05:41:49.520]  а то это...
[05:42:01.520 --> 05:42:03.520]  Выполнить три шага барвки.
[05:42:03.520 --> 05:42:05.520]  Вот такой алгоритм.
[05:42:05.520 --> 05:42:07.520]  Так, опять очевидно, что этот алгоритм работает
[05:42:07.520 --> 05:42:09.520]  правильно, правда?
[05:42:09.520 --> 05:42:11.520]  Ну, пока это
[05:42:11.520 --> 05:42:13.520]  бесконечная рекурсия,
[05:42:13.520 --> 05:42:15.520]  я не знаю.
[05:42:15.520 --> 05:42:17.520]  Нет, она уже не бесконечная.
[05:42:17.520 --> 05:42:19.520]  Потому что
[05:42:19.520 --> 05:42:21.520]  каждый шаг барвки, зачем он нам нужен?
[05:42:21.520 --> 05:42:23.520]  Он очень приятен тем,
[05:42:23.520 --> 05:42:25.520]  что каждый шаг барвки уменьшает
[05:42:25.520 --> 05:42:27.520]  количество вершин как минимум вдвое.
[05:42:27.520 --> 05:42:29.520]  Я к тому, что тут из функции
[05:42:29.520 --> 05:42:31.520]  не отдавал бы.
[05:42:31.520 --> 05:42:33.520]  Чего?
[05:42:33.520 --> 05:42:35.520]  А, ну, да, да, да.
[05:42:35.520 --> 05:42:37.520]  Надо было сказать, что шаг минус один. Если размер Жени
[05:42:37.520 --> 05:42:39.520]  меньше, чем константа, то давайте
[05:42:39.520 --> 05:42:41.520]  внутри барвки, если
[05:42:41.520 --> 05:42:43.520]  размер Ж равен
[05:42:43.520 --> 05:42:45.520]  трём или меньше,
[05:42:45.520 --> 05:42:47.520]  просто делаем один.
[05:42:47.520 --> 05:42:49.520]  Ну, допустим, да.
[05:42:49.520 --> 05:42:51.520]  Ну, не важно, это понятно, что такие вещи обычно
[05:42:51.520 --> 05:42:53.520]  поюзумеваются, поэтому мы ныне не тратим
[05:42:53.520 --> 05:42:55.520]  места на доске.
[05:42:55.520 --> 05:42:57.520]  Ну, давайте думать.
[05:42:57.520 --> 05:42:59.520]  А вообще, за костьем хоть какой-то работает.
[05:42:59.520 --> 05:43:01.520]  Даже
[05:43:01.520 --> 05:43:03.520]  не в роддомном случае, а хотя
[05:43:03.520 --> 05:43:05.520]  в худшем. Давайте подумаем.
[05:43:07.520 --> 05:43:09.520]  Ну,
[05:43:15.520 --> 05:43:17.520]  да, ну, не совсем. У нас
[05:43:17.520 --> 05:43:19.520]  два рекурсивных запуска.
[05:43:25.520 --> 05:43:27.520]  Правда, есть маленькая оговорка.
[05:43:27.520 --> 05:43:29.520]  В этих рекурсивных запусках,
[05:43:29.520 --> 05:43:31.520]  конечно же, у нас суммарное количество
[05:43:31.520 --> 05:43:33.520]  ребер.
[05:43:33.520 --> 05:43:35.520]  Ну, теоретически
[05:43:35.520 --> 05:43:37.520]  может быть больше.
[05:43:37.520 --> 05:43:39.520]  Ну, насколько больше?
[05:43:39.520 --> 05:43:41.520]  Ну, просто давайте так. Вот мы
[05:43:41.520 --> 05:43:43.520]  в F' ссунули
[05:43:43.520 --> 05:43:45.520]  модуль E'
[05:43:45.520 --> 05:43:47.520]  ребер. Правда?
[05:43:49.520 --> 05:43:51.520]  А теперь заведем, сколько у нас?
[05:43:51.520 --> 05:43:53.520]  А теперь, значит,
[05:43:53.520 --> 05:43:55.520]  что у нас превратилось в вот этом
[05:43:55.520 --> 05:43:57.520]  E'е?
[05:43:57.520 --> 05:43:59.520]  Ну, вот,
[05:43:59.520 --> 05:44:01.520]  то есть мы там нашли из этих E'ов
[05:44:01.520 --> 05:44:03.520]  рандомизированный
[05:44:03.520 --> 05:44:05.520]  лес. То есть в принципе это означает,
[05:44:05.520 --> 05:44:07.520]  что
[05:44:07.520 --> 05:44:09.520]  там действительно,
[05:44:09.520 --> 05:44:11.520]  что на самом деле все
[05:44:11.520 --> 05:44:13.520]  ребра, кроме собственно этого
[05:44:13.520 --> 05:44:15.520]  леса оказались тяжелыми, их надо
[05:44:15.520 --> 05:44:17.520]  выкинуть. Правда?
[05:44:17.520 --> 05:44:19.520]  Вот.
[05:44:19.520 --> 05:44:21.520]  Ну, а также
[05:44:21.520 --> 05:44:23.520]  еще могли быть выкинуты какие-то еще
[05:44:23.520 --> 05:44:25.520]  ребра из тех, которые в роддом не попали.
[05:44:25.520 --> 05:44:27.520]  Правда?
[05:44:29.520 --> 05:44:31.520]  Вот.
[05:44:31.520 --> 05:44:33.520]  Теперь вот возникает
[05:44:33.520 --> 05:44:35.520]  вопрос.
[05:44:35.520 --> 05:44:37.520]  Ну, что же это
[05:44:37.520 --> 05:44:39.520]  за оставшиеся ребра такие?
[05:44:41.520 --> 05:44:43.520]  Вот.
[05:44:43.520 --> 05:44:45.520]  То есть E'
[05:44:45.520 --> 05:44:47.520]  у нас
[05:44:47.520 --> 05:44:49.520]  ну,
[05:44:49.520 --> 05:44:51.520]  ну, то есть сформулируем
[05:44:51.520 --> 05:44:53.520]  так.
[05:44:53.520 --> 05:44:55.520]  То есть я утверждаю,
[05:44:55.520 --> 05:44:57.520]  что на самом деле E'
[05:44:57.520 --> 05:44:59.520]  больше либо равно
[05:44:59.520 --> 05:45:01.520]  на модуль E'.
[05:45:01.520 --> 05:45:03.520]  Я утверждаю, что это больше либо равно
[05:45:03.520 --> 05:45:05.520]  модуль E'
[05:45:07.520 --> 05:45:09.520]  минус
[05:45:09.520 --> 05:45:11.520]  количества компонент
[05:45:11.520 --> 05:45:13.520]  связности
[05:45:15.520 --> 05:45:17.520]  в F'.
[05:45:19.520 --> 05:45:21.520]  В G'. Пардон.
[05:45:29.520 --> 05:45:31.520]  Так.
[05:45:53.520 --> 05:45:55.520]  Так, а понятно ли откуда я взял
[05:45:55.520 --> 05:45:57.520]  вот это утверждение?
[05:45:57.520 --> 05:45:59.520]  Сейчас.
[05:46:13.520 --> 05:46:15.520]  Или не логично.
[05:46:15.520 --> 05:46:17.520]  Ну, это все ребра, которые у нас полетели
[05:46:17.520 --> 05:46:19.520]  в G' 3.
[05:46:19.520 --> 05:46:21.520]  Решение.
[05:46:21.520 --> 05:46:23.520]  Ну, да. Ну, потому что заметим следующее,
[05:46:23.520 --> 05:46:25.520]  что давайте так.
[05:46:25.520 --> 05:46:27.520]  Если у нас была
[05:46:27.520 --> 05:46:29.520]  как бы грав G' оказался связан.
[05:46:31.520 --> 05:46:33.520]  Если грав G' оказался связан,
[05:46:33.520 --> 05:46:35.520]  то тогда я утверждаю, что
[05:46:37.520 --> 05:46:39.520]  то тогда вот из
[05:46:39.520 --> 05:46:41.520]  вот этих вот E'
[05:46:41.520 --> 05:46:43.520]  выжило на самом деле
[05:46:43.520 --> 05:46:45.520]  только V-1
[05:46:45.520 --> 05:46:47.520]  ребр, правда? То есть те, которые
[05:46:47.520 --> 05:46:49.520]  собственно этот минус 100 организовывали, правда?
[05:46:55.520 --> 05:46:57.520]  Но утверждение такое.
[05:46:57.520 --> 05:46:59.520]  Пусть E'
[05:46:59.520 --> 05:47:01.520]  этот нод, пусть вот этот
[05:47:01.520 --> 05:47:03.520]  грав, допустим, G'
[05:47:03.520 --> 05:47:05.520]  оказался связан случайно.
[05:47:05.520 --> 05:47:07.520]  Тогда
[05:47:07.520 --> 05:47:09.520]  я утверждаю, что
[05:47:09.520 --> 05:47:11.520]  тяжелыми, тогда
[05:47:11.520 --> 05:47:13.520]  все ребра E' кроме
[05:47:13.520 --> 05:47:15.520]  этого собственно минус 100
[05:47:15.520 --> 05:47:17.520]  окажутся тяжелыми.
[05:47:21.520 --> 05:47:23.520]  Вот.
[05:47:23.520 --> 05:47:25.520]  То есть получается
[05:47:25.520 --> 05:47:27.520]  на самом деле все ребра
[05:47:27.520 --> 05:47:29.520]  без этих, а я еще кое-что забыл.
[05:47:29.520 --> 05:47:31.520]  Да, плюс
[05:47:31.520 --> 05:47:33.520]  модуль V, конечно. Писать тогда.
[05:47:33.520 --> 05:47:35.520]  То есть модуль V-1.
[05:47:35.520 --> 05:47:37.520]  А нет, плюс модуль V.
[05:47:37.520 --> 05:47:39.520]  Да, если компонент связанности 1,
[05:47:39.520 --> 05:47:41.520]  то надо написать там
[05:47:41.520 --> 05:47:43.520]  минус.
[05:47:43.520 --> 05:47:45.520]  Хорошо.
[05:47:47.520 --> 05:47:49.520]  Ну ладно.
[05:47:49.520 --> 05:47:51.520]  Хорошо, тогда минус тут
[05:47:51.520 --> 05:47:53.520]  и плюс вот так.
[05:47:53.520 --> 05:47:55.520]  Вот теперь вроде хорошо.
[05:47:55.520 --> 05:47:57.520]  Значит, еще раз, откуда я это взял?
[05:47:57.520 --> 05:47:59.520]  Предположим, у меня количество компонентов связанности
[05:47:59.520 --> 05:48:01.520]  в G' одна.
[05:48:01.520 --> 05:48:03.520]  Тогда F' это просто
[05:48:03.520 --> 05:48:05.520]  минус 100 в размере V вершины, V-1
[05:48:05.520 --> 05:48:07.520]  ребро, правда?
[05:48:07.520 --> 05:48:09.520]  И все ребра отсюда,
[05:48:11.520 --> 05:48:13.520]  все ребра E' кроме
[05:48:13.520 --> 05:48:15.520]  этих V-1 ребра, они
[05:48:15.520 --> 05:48:17.520]  заведомо тяжелые
[05:48:17.520 --> 05:48:19.520]  и будут удалены.
[05:48:19.520 --> 05:48:21.520]  Поэтому я и заявляю, что E'
[05:48:21.520 --> 05:48:23.520]  это как минимум вот столько.
[05:48:25.520 --> 05:48:27.520]  Но с другой стороны, я еще могу теперь
[05:48:27.520 --> 05:48:29.520]  торжественно...
[05:48:29.520 --> 05:48:31.520]  А, ну да, про остальные
[05:48:31.520 --> 05:48:33.520]  ребра я ничего сказать не
[05:48:33.520 --> 05:48:35.520]  могу.
[05:48:35.520 --> 05:48:37.520]  То есть вывод на самом деле...
[05:48:37.520 --> 05:48:39.520]  Ну понятно, если компонент связанности больше,
[05:48:39.520 --> 05:48:41.520]  чем одна, то там получится вот примерно так.
[05:48:41.520 --> 05:48:43.520]  Потому что если у вас там L компонент связанности,
[05:48:43.520 --> 05:48:45.520]  то размер минус 100
[05:48:45.520 --> 05:48:47.520]  ровно V-L будет.
[05:48:47.520 --> 05:48:49.520]  И тогда получается, что
[05:48:49.520 --> 05:48:51.520]  E-E', это сколько получается?
[05:48:51.520 --> 05:48:53.520]  То есть модуль E
[05:48:53.520 --> 05:48:55.520]  минус модуль E'
[05:48:55.520 --> 05:48:57.520]  это получается не превосходит
[05:48:57.520 --> 05:48:59.520]  чего?
[05:48:59.520 --> 05:49:01.520]  Модуль E минус модуль E'
[05:49:03.520 --> 05:49:05.520]  плюс модуль V
[05:49:05.520 --> 05:49:07.520]  минус количество компонентов связанности
[05:49:09.520 --> 05:49:11.520]  в G'.
[05:49:13.520 --> 05:49:15.520]  Так, это вот сколько ребер туда запустится.
[05:49:17.520 --> 05:49:19.520]  Вот, понятно, да?
[05:49:21.520 --> 05:49:23.520]  Вот, понятно?
[05:49:23.520 --> 05:49:25.520]  Вот.
[05:49:27.520 --> 05:49:29.520]  Но при этом в эту компоненту у нас тут запустилось
[05:49:29.520 --> 05:49:31.520]  целых E' ребер.
[05:49:31.520 --> 05:49:33.520]  Вот.
[05:49:47.520 --> 05:49:49.520]  Вот.
[05:49:59.520 --> 05:50:01.520]  Ну, пытаемся, да.
[05:50:01.520 --> 05:50:03.520]  Но заметим, что
[05:50:03.520 --> 05:50:05.520]  эта сумма получается просто
[05:50:05.520 --> 05:50:07.520]  сколько ребер было изначально
[05:50:07.520 --> 05:50:09.520]  и плюс еще
[05:50:09.520 --> 05:50:11.520]  вот это вот. То есть вот эти вот
[05:50:11.520 --> 05:50:13.520]  там плюс V минус вот это.
[05:50:17.520 --> 05:50:19.520]  Вот.
[05:50:19.520 --> 05:50:21.520]  Ну, да. То есть как бы
[05:50:21.520 --> 05:50:23.520]  если бы у нас сумма получалась ровно E,
[05:50:23.520 --> 05:50:25.520]  то тогда
[05:50:25.520 --> 05:50:27.520]  отсюда бы следовало, что алгоритм
[05:50:27.520 --> 05:50:29.520]  действительно работает за E' веб, потому что на каждом уровне
[05:50:29.520 --> 05:50:31.520]  суммарно E ребер, правда?
[05:50:33.520 --> 05:50:35.520]  Правда, если бы оно вот.
[05:50:35.520 --> 05:50:37.520]  Но у нас сумма не E, а E
[05:50:37.520 --> 05:50:39.520]  плюс V минус количество там каких-то там еще
[05:50:39.520 --> 05:50:41.520]  левых компонентов связанности.
[05:50:43.520 --> 05:50:45.520]  Понимаете, да?
[05:50:45.520 --> 05:50:47.520]  Но заметим на самом деле следующее.
[05:50:47.520 --> 05:50:49.520]  Заметим, что на самом деле
[05:50:49.520 --> 05:50:51.520]  мы же в самом начале еще делали
[05:50:53.520 --> 05:50:55.520]  вот этот вот шаг борувки.
[05:50:55.520 --> 05:50:57.520]  То есть три шага борувки,
[05:50:57.520 --> 05:50:59.520]  правда?
[05:50:59.520 --> 05:51:01.520]  То есть это на самом деле означает,
[05:51:01.520 --> 05:51:03.520]  что у нас
[05:51:03.520 --> 05:51:05.520]  то есть граф, на самом деле
[05:51:05.520 --> 05:51:07.520]  VE на самом деле в этом месте
[05:51:07.520 --> 05:51:09.520]  превратился в граф
[05:51:09.520 --> 05:51:11.520]  там.
[05:51:11.520 --> 05:51:13.520]  Там, так сказать, VB
[05:51:13.520 --> 05:51:15.520]  В3, E3.
[05:51:17.520 --> 05:51:19.520]  Логично, да?
[05:51:19.520 --> 05:51:21.520]  Согласны?
[05:51:21.520 --> 05:51:23.520]  Ну вот.
[05:51:23.520 --> 05:51:25.520]  Мы заведомо можем теперь заявить,
[05:51:25.520 --> 05:51:27.520]  что так как количество вершин у нас уменьшилось,
[05:51:27.520 --> 05:51:29.520]  то есть на самом деле вот это
[05:51:29.520 --> 05:51:31.520]  E' конечно лежит уже в E3.
[05:51:31.520 --> 05:51:33.520]  И тут на самом деле ссылка на E3.
[05:51:35.520 --> 05:51:37.520]  Вот тут E3, и тут E3.
[05:51:39.520 --> 05:51:41.520]  То теперь стоит только заметить следующее,
[05:51:41.520 --> 05:51:43.520]  что сам по себе модуль E3, я утверждаю,
[05:51:43.520 --> 05:51:45.520]  к чему он равен.
[05:51:45.520 --> 05:51:47.520]  То есть заметим, что если V превратится,
[05:51:47.520 --> 05:51:49.520]  то есть если у нас 179 вершин,
[05:51:49.520 --> 05:51:51.520]  превратилось в 57.
[05:51:51.520 --> 05:51:53.520]  Причем остовным путем.
[05:51:53.520 --> 05:51:55.520]  То есть я утверждаю, что это означает,
[05:51:55.520 --> 05:51:57.520]  что у нас из графа исчезло как минимум
[05:51:57.520 --> 05:51:59.520]  122 ребра.
[05:51:59.520 --> 05:52:01.520]  Потому что каждое ребро,
[05:52:01.520 --> 05:52:03.520]  потому что как у нас уменьшается количество
[05:52:03.520 --> 05:52:05.520]  вершин на одну, мы в остов добавляем новое
[05:52:05.520 --> 05:52:07.520]  ребро, правда?
[05:52:07.520 --> 05:52:09.520]  И больше оно у нас не рассматривается.
[05:52:09.520 --> 05:52:11.520]  И получается, что E3,
[05:52:11.520 --> 05:52:13.520]  оно на самом деле меньше
[05:52:13.520 --> 05:52:15.520]  либо равно, чем
[05:52:15.520 --> 05:52:17.520]  модуль E
[05:52:17.520 --> 05:52:19.520]  минус
[05:52:19.520 --> 05:52:21.520]  модуль V плюс модуль V3.
[05:52:25.520 --> 05:52:27.520]  Понятно, да?
[05:52:33.520 --> 05:52:35.520]  И тогда получается, смотрите,
[05:52:35.520 --> 05:52:37.520]  что суммарное количество ребр,
[05:52:37.520 --> 05:52:39.520]  которое рассмотрели в рекурсивных запусках,
[05:52:39.520 --> 05:52:41.520]  оно получается к чему равно?
[05:52:41.520 --> 05:52:43.520]  Оно получается
[05:52:43.520 --> 05:52:45.520]  не превосходит.
[05:52:45.520 --> 05:52:47.520]  Оно значит, что у нас суммарно E3
[05:52:47.520 --> 05:52:49.520]  плюс модуль E3
[05:52:49.520 --> 05:52:51.520]  минус модуль E2.
[05:52:55.520 --> 05:52:57.520]  Какое? Вот это?
[05:52:57.520 --> 05:52:59.520]  Из борувки.
[05:53:01.520 --> 05:53:03.520]  Ну, смотрите, что делает борувка?
[05:53:03.520 --> 05:53:05.520]  Ну, опуская там технические тонкости,
[05:53:05.520 --> 05:53:07.520]  он находит какие-то ребра,
[05:53:07.520 --> 05:53:09.520]  объявляет, что они точно в миностове
[05:53:09.520 --> 05:53:11.520]  и стягивает, объединяет две вершины,
[05:53:11.520 --> 05:53:13.520]  которые она соединяла, правда?
[05:53:13.520 --> 05:53:15.520]  Тем самым количество вершин
[05:53:15.520 --> 05:53:17.520]  уменьшилось на одно и количество ребер уменьшилось
[05:53:17.520 --> 05:53:19.520]  хотя бы на одно.
[05:53:21.520 --> 05:53:23.520]  Стоп, он разве
[05:53:23.520 --> 05:53:25.520]  за один шаг не стягивает?
[05:53:25.520 --> 05:53:27.520]  У нас не итеративная борувка идет?
[05:53:27.520 --> 05:53:29.520]  Нет, итеративная.
[05:53:29.520 --> 05:53:31.520]  Вопрос просто, что делает шаг борувки?
[05:53:31.520 --> 05:53:33.520]  Он на каждом шаге
[05:53:33.520 --> 05:53:35.520]  берет из каждой вершины
[05:53:35.520 --> 05:53:37.520]  минимальное торчащее ребро
[05:53:37.520 --> 05:53:39.520]  и все эти минимальные ребра типа стягивает.
[05:53:41.520 --> 05:53:43.520]  Да, но я мыслю по-другому.
[05:53:45.520 --> 05:53:47.520]  Я мыслю, что он находит какие-то ребра,
[05:53:47.520 --> 05:53:49.520]  что каждый шаг борувки находит какие-то ребра,
[05:53:49.520 --> 05:53:51.520]  которые надо сжать.
[05:53:51.520 --> 05:53:53.520]  И говорю, что если я сжал
[05:53:53.520 --> 05:53:55.520]  там допустим L-ребер,
[05:53:55.520 --> 05:53:57.520]  то у меня...
[05:53:57.520 --> 05:53:59.520]  То есть так, если у меня
[05:53:59.520 --> 05:54:01.520]  количество вершин уменьшилось на L,
[05:54:01.520 --> 05:54:03.520]  то количество ребер уменьшилось хотя бы на L.
[05:54:07.520 --> 05:54:09.520]  Просто я так мыслю.
[05:54:09.520 --> 05:54:11.520]  Поэтому я говорю, что
[05:54:11.520 --> 05:54:13.520]  E3 у меня не более, чем E-,
[05:54:13.520 --> 05:54:15.520]  вот насколько стало меньше вершин.
[05:54:15.520 --> 05:54:17.520]  Поэтому тут теперь аккуратненько
[05:54:17.520 --> 05:54:19.520]  переписываем.
[05:54:19.520 --> 05:54:21.520]  Значит, E'
[05:54:21.520 --> 05:54:23.520]  плюс модуль E
[05:54:23.520 --> 05:54:25.520]  минус модуль V плюс V3.
[05:54:25.520 --> 05:54:27.520]  Вот.
[05:54:27.520 --> 05:54:29.520]  А, нет, я вот это
[05:54:29.520 --> 05:54:31.520]  переписываю уже, конечно.
[05:54:31.520 --> 05:54:33.520]  Вот.
[05:54:33.520 --> 05:54:35.520]  То есть это подставил E'
[05:54:35.520 --> 05:54:37.520]  и дальше тут надо написать E'
[05:54:37.520 --> 05:54:39.520]  плюс модуль V
[05:54:39.520 --> 05:54:41.520]  минус количество компонентов
[05:54:41.520 --> 05:54:43.520]  бла-бла-бла.
[05:54:43.520 --> 05:54:45.520]  А почему это бла-бла-бла?
[05:54:45.520 --> 05:54:47.520]  Ну, по логичной причине.
[05:54:47.520 --> 05:54:49.520]  У нас бла-бла-бла,
[05:54:49.520 --> 05:54:51.520]  потому что
[05:54:51.520 --> 05:54:53.520]  в логичной причине
[05:54:53.520 --> 05:54:55.520]  у нас бла-бла-бла, потому что
[05:54:55.520 --> 05:54:57.520]  шлеп-шлеп.
[05:54:59.520 --> 05:55:01.520]  И, конечно же...
[05:55:01.520 --> 05:55:03.520]  Подождите.
[05:55:03.520 --> 05:55:05.520]  В четвертом шаге
[05:55:05.520 --> 05:55:07.520]  разве надо подставить
[05:55:07.520 --> 05:55:09.520]  вместо V
[05:55:09.520 --> 05:55:11.520]  V3?
[05:55:11.520 --> 05:55:13.520]  Как он в четвертом шаге?
[05:55:13.520 --> 05:55:15.520]  Четыре точки ретермера.
[05:55:15.520 --> 05:55:17.520]  Ну, давайте подставим.
[05:55:19.520 --> 05:55:21.520]  Так.
[05:55:21.520 --> 05:55:23.520]  Давайте подставим.
[05:55:23.520 --> 05:55:25.520]  Хорошо, хорошо.
[05:55:29.520 --> 05:55:31.520]  Так.
[05:55:33.520 --> 05:55:35.520]  Ну, и чем это нам помогает?
[05:55:41.520 --> 05:55:43.520]  Да.
[05:55:43.520 --> 05:55:45.520]  Что?
[05:55:51.520 --> 05:55:53.520]  Чего?
[05:55:59.520 --> 05:56:01.520]  Чего? Где?
[05:56:01.520 --> 05:56:03.520]  Меньше ребра, потому что помимо ребра, которые мы стягнули для остова,
[05:56:03.520 --> 05:56:05.520]  могли стянуться еще ребра.
[05:56:07.520 --> 05:56:09.520]  Вот.
[05:56:13.520 --> 05:56:15.520]  Вот.
[05:56:15.520 --> 05:56:17.520]  То есть вывод получается вот такой.
[05:56:17.520 --> 05:56:19.520]  Так.
[05:56:19.520 --> 05:56:21.520]  Ну, тогда хорошо. Если я тут написал V'
[05:56:21.520 --> 05:56:23.520]  значит, я тут должен написать где-то V'.
[05:56:27.520 --> 05:56:29.520]  И тогда тут
[05:56:29.520 --> 05:56:31.520]  что-то по-моему... И тогда как будто тут
[05:56:31.520 --> 05:56:33.520]  что-то не сократилось.
[05:56:37.520 --> 05:56:39.520]  Ну, вот. А, потому что...
[05:56:39.520 --> 05:56:41.520]  Ну да, E3, не просто V' V3.
[05:56:41.520 --> 05:56:43.520]  Да.
[05:56:43.520 --> 05:56:45.520]  А, смотрите, да, тут минус V' плюс V3.
[05:56:45.520 --> 05:56:47.520]  Так.
[05:56:47.520 --> 05:56:49.520]  Тут у нас что?
[05:56:49.520 --> 05:56:51.520]  Тут у нас получается E3
[05:56:51.520 --> 05:56:53.520]  минус E2'.
[05:56:53.520 --> 05:56:55.520]  Значит, это меньше либо равно, чем...
[05:56:55.520 --> 05:56:57.520]  Значит, мы тут должны написать, что...
[05:57:01.520 --> 05:57:03.520]  Так.
[05:57:03.520 --> 05:57:05.520]  А, где-то я тут еще E' должен написать.
[05:57:05.520 --> 05:57:07.520]  Так, ладно, давайте еще раз напишем.
[05:57:07.520 --> 05:57:09.520]  Да, просто так, надежно быть.
[05:57:11.520 --> 05:57:13.520]  Значит, что у нас получается?
[05:57:17.520 --> 05:57:19.520]  Это количество ребер, которые у нас тут
[05:57:19.520 --> 05:57:21.520]  в рекурсивных запусках пошло.
[05:57:21.520 --> 05:57:23.520]  Значит, то есть...
[05:57:23.520 --> 05:57:25.520]  Да. То есть мы тут сгенерили
[05:57:25.520 --> 05:57:27.520]  какой-то E', да.
[05:57:27.520 --> 05:57:29.520]  Вот. А потом в конце
[05:57:29.520 --> 05:57:31.520]  сгенерили все ребра без вот этих вот
[05:57:31.520 --> 05:57:33.520]  тяжелых.
[05:57:33.520 --> 05:57:35.520]  Да. Но мы обнаружили,
[05:57:35.520 --> 05:57:37.520]  что тяжелых ребер у нас как минимум.
[05:57:37.520 --> 05:57:39.520]  То есть тяжелых ребер у нас оказалось
[05:57:39.520 --> 05:57:41.520]  просто там весь E'.
[05:57:47.520 --> 05:57:49.520]  То есть тяжелыми оказались
[05:57:49.520 --> 05:57:51.520]  просто все.
[05:57:51.520 --> 05:57:53.520]  Там, кроме вот этих
[05:57:53.520 --> 05:57:55.520]  вот V3 минус вот этих.
[05:57:55.520 --> 05:57:57.520]  То есть тогда получается, что
[05:57:57.520 --> 05:57:59.520]  значит разность мы оцениваем наоборот
[05:57:59.520 --> 05:58:01.520]  сверху. То есть там получается,
[05:58:01.520 --> 05:58:03.520]  когда вычитаем, как
[05:58:03.520 --> 05:58:05.520]  у нас получается,
[05:58:05.520 --> 05:58:07.520]  получается, когда вычитаем,
[05:58:07.520 --> 05:58:09.520]  получается, там вычитаем
[05:58:09.520 --> 05:58:11.520]  E', вычитаем компоненты
[05:58:11.520 --> 05:58:13.520]  и прибавляем V3.
[05:58:13.520 --> 05:58:15.520]  Здесь все правильно.
[05:58:15.520 --> 05:58:17.520]  Вроде как.
[05:58:17.520 --> 05:58:19.520]  Вот.
[05:58:19.520 --> 05:58:21.520]  Да, тут тоже 3, кстати.
[05:58:21.520 --> 05:58:23.520]  Вот. Тогда, когда мы это все суммируем,
[05:58:23.520 --> 05:58:25.520]  получается, модуль E',
[05:58:25.520 --> 05:58:27.520]  плюс, значит, вот эту разность
[05:58:27.520 --> 05:58:29.520]  прям честно переписываем.
[05:58:29.520 --> 05:58:31.520]  E3 минус модуль E',
[05:58:31.520 --> 05:58:33.520]  плюс модуль V3
[05:58:33.520 --> 05:58:35.520]  V3 минус
[05:58:35.520 --> 05:58:37.520]  количество
[05:58:37.520 --> 05:58:39.520]  компонент связности
[05:58:39.520 --> 05:58:41.520]  в G'.
[05:58:45.520 --> 05:58:47.520]  Сейчас.
[05:58:47.520 --> 05:58:49.520]  Ну, давайте так.
[05:58:49.520 --> 05:58:51.520]  Подставляем.
[05:58:51.520 --> 05:58:53.520]  Ну, вот.
[05:58:55.520 --> 05:58:57.520]  Сократилось, сократилось.
[05:58:57.520 --> 05:58:59.520]  Смотрите.
[05:58:59.520 --> 05:59:01.520]  Давайте так. Я сейчас аккуратненько.
[05:59:01.520 --> 05:59:03.520]  Давайте я просто тут.
[05:59:03.520 --> 05:59:05.520]  На самом деле сократилось.
[05:59:05.520 --> 05:59:07.520]  Там. Это модуль E3
[05:59:07.520 --> 05:59:09.520]  плюс модуль V3
[05:59:09.520 --> 05:59:11.520]  минус какое-то там количество.
[05:59:17.520 --> 05:59:19.520]  Ну, нет. Я E3 пока не переписывал.
[05:59:21.520 --> 05:59:23.520]  Вот это вот E3 я еще пока оставил.
[05:59:23.520 --> 05:59:25.520]  То есть пока у меня осталось просто E3 плюс V3
[05:59:25.520 --> 05:59:27.520]  минус что-то там количество.
[05:59:27.520 --> 05:59:29.520]  Какое это получили вообще?
[05:59:29.520 --> 05:59:31.520]  Сказали, что эта разность не превосходит вот этого.
[05:59:39.520 --> 05:59:41.520]  Вот.
[05:59:41.520 --> 05:59:43.520]  Теперь подставляем сюда E3.
[05:59:51.520 --> 05:59:53.520]  Ну, пока у нас эта оценка на суммарный запуск
[05:59:53.520 --> 05:59:55.520]  это не более чем E3
[05:59:55.520 --> 05:59:57.520]  плюс V3 минус вот количество компонент
[05:59:57.520 --> 05:59:59.520]  Ну, по факту да.
[05:59:59.520 --> 06:00:01.520]  Теперь давайте E...
[06:00:01.520 --> 06:00:03.520]  Ну, хотя не знаю.
[06:00:03.520 --> 06:00:05.520]  Я только что еще раз написал.
[06:00:05.520 --> 06:00:07.520]  Получилось пока просто.
[06:00:07.520 --> 06:00:09.520]  Теперь мы еще E3 не подставили.
[06:00:09.520 --> 06:00:11.520]  То есть у нас есть оценка.
[06:00:11.520 --> 06:00:13.520]  Это меньше либо равно модуль E
[06:00:13.520 --> 06:00:15.520]  минус, внимание, модуль V
[06:00:15.520 --> 06:00:17.520]  плюс модуль V3
[06:00:17.520 --> 06:00:19.520]  плюс модуль V3
[06:00:19.520 --> 06:00:21.520]  и минус еще что-то там.
[06:00:23.520 --> 06:00:25.520]  А теперь маленькая фишечка.
[06:00:27.520 --> 06:00:29.520]  А теперь заметим, что это
[06:00:29.520 --> 06:00:31.520]  не превосходит, знаете, чего?
[06:00:31.520 --> 06:00:33.520]  модуль E
[06:00:33.520 --> 06:00:35.520]  минус модуль V...
[06:00:39.520 --> 06:00:41.520]  минус даже там
[06:00:41.520 --> 06:00:43.520]  3 четверти V.
[06:00:43.520 --> 06:00:45.520]  Вот так.
[06:00:45.520 --> 06:00:47.520]  Да.
[06:00:47.520 --> 06:00:49.520]  Напоминаем, что уборовки
[06:00:49.520 --> 06:00:51.520]  есть типическое свойство.
[06:00:51.520 --> 06:00:53.520]  Каждый личный векшин сжимается хотя бы вдвое.
[06:00:53.520 --> 06:00:55.520]  Поэтому вот это вот
[06:00:55.520 --> 06:00:57.520]  это не более чем четверть
[06:00:57.520 --> 06:00:59.520]  от былого величия.
[06:00:59.520 --> 06:01:01.520]  То есть в принципе
[06:01:01.520 --> 06:01:03.520]  отсюда следует,
[06:01:03.520 --> 06:01:05.520]  что мы сделали сжатие
[06:01:05.520 --> 06:01:07.520]  что мы суммарно
[06:01:07.520 --> 06:01:09.520]  действительно все делаем за
[06:01:09.520 --> 06:01:11.520]  то есть получается суммарно запуски
[06:01:11.520 --> 06:01:13.520]  делаются за вполне себе
[06:01:13.520 --> 06:01:15.520]  от E.
[06:01:25.520 --> 06:01:27.520]  А суммируем
[06:01:27.520 --> 06:01:29.520]  E3 каждый раз, да?
[06:01:29.520 --> 06:01:31.520]  Нет, там оговорка, конечно.
[06:01:31.520 --> 06:01:33.520]  Чего? Еще раз.
[06:01:37.520 --> 06:01:39.520]  Что-то не то.
[06:01:39.520 --> 06:01:41.520]  От E равняется
[06:01:41.520 --> 06:01:43.520]  E плюс T
[06:01:43.520 --> 06:01:45.520]  от E минус 3 четверти V.
[06:01:45.520 --> 06:01:47.520]  И минус 3 четверти V.
[06:01:47.520 --> 06:01:49.520]  Это как-то что-то встает.
[06:01:57.520 --> 06:01:59.520]  Ну почему-то у нас просто вот
[06:01:59.520 --> 06:02:01.520]  есть очень удачное прореживание.
[06:02:01.520 --> 06:02:03.520]  Потому что
[06:02:03.520 --> 06:02:05.520]  мы как
[06:02:05.520 --> 06:02:07.520]  вот эти три шара борувки
[06:02:07.520 --> 06:02:09.520]  они нам на самом деле какое-то количество
[06:02:09.520 --> 06:02:11.520]  приличное количество ребер просто убили.
[06:02:11.520 --> 06:02:13.520]  Кстати, это количество ребер
[06:02:13.520 --> 06:02:15.520]  равно вполне себе
[06:02:15.520 --> 06:02:17.520]  между прочим 7 восьмых V.
[06:02:17.520 --> 06:02:19.520]  Где-то.
[06:02:19.520 --> 06:02:21.520]  Где мы вообще пользуемся
[06:02:21.520 --> 06:02:23.520]  рандомностью ребер?
[06:02:23.520 --> 06:02:25.520]  Пока нигде.
[06:02:25.520 --> 06:02:27.520]  А я не понимаю, почему у нас суммарно ребер?
[06:02:27.520 --> 06:02:29.520]  Пока нигде. Пока я
[06:02:29.520 --> 06:02:31.520]  оцениваю даже
[06:02:31.520 --> 06:02:33.520]  насколько это в худшем случае работать будет.
[06:02:33.520 --> 06:02:35.520]  Почему у нас суммарно ребер мало? Я не очень понял.
[06:02:37.520 --> 06:02:39.520]  Потому.
[06:02:39.520 --> 06:02:41.520]  Это же один шаг.
[06:02:41.520 --> 06:02:43.520]  Ну да.
[06:02:43.520 --> 06:02:45.520]  Нет, смотрите. Я просто
[06:02:45.520 --> 06:02:47.520]  доказал, что вот в эти два рекурсивных
[06:02:47.520 --> 06:02:49.520]  запуска у меня вписывается не более чем
[06:02:49.520 --> 06:02:51.520]  суммарно ребер.
[06:02:51.520 --> 06:02:53.520]  Да, но при этом есть старое.
[06:02:53.520 --> 06:02:55.520]  Но скажи так. Если мне
[06:02:55.520 --> 06:02:57.520]  но вот. Ну просто смотрите. У меня есть
[06:02:57.520 --> 06:02:59.520]  граф, в котором есть ребер.
[06:02:59.520 --> 06:03:01.520]  Я запустился два раза рекурсивно
[06:03:01.520 --> 06:03:03.520]  на суммарно не более чем ребер.
[06:03:03.520 --> 06:03:05.520]  Они запустились
[06:03:05.520 --> 06:03:07.520]  еще по два раза рекурсивно, но суммарно
[06:03:07.520 --> 06:03:09.520]  тоже не более чем ребер.
[06:03:09.520 --> 06:03:11.520]  Они уже суммарно
[06:03:11.520 --> 06:03:13.520]  вдвоем. Нет.
[06:03:13.520 --> 06:03:15.520]  Нет. Нет.
[06:03:15.520 --> 06:03:17.520]  Каждый на свою сумму.
[06:03:17.520 --> 06:03:19.520]  Вот.
[06:03:19.520 --> 06:03:21.520]  Ну там ладно. Правда оговорочка, что
[06:03:21.520 --> 06:03:23.520]  граф мог быть несвязаный, поэтому
[06:03:23.520 --> 06:03:25.520]  мы там часто запускаемся не
[06:03:25.520 --> 06:03:27.520]  за Е, а за В плюс Е, правда.
[06:03:29.520 --> 06:03:31.520]  Ну есть такая мелкая оговорка, да?
[06:03:33.520 --> 06:03:35.520]  То есть поэтому тут вот эти
[06:03:35.520 --> 06:03:37.520]  3 четверти В конечно нам могут быть
[06:03:37.520 --> 06:03:39.520]  не очень.
[06:03:39.520 --> 06:03:41.520]  Но с другой стороны это ничего страшного,
[06:03:41.520 --> 06:03:43.520]  потому что учитывая, что мы в каждый граф
[06:03:43.520 --> 06:03:45.520]  передаем, простите, не В вершин, а
[06:03:45.520 --> 06:03:47.520]  сколько?
[06:03:47.520 --> 06:03:49.520]  Да, мы их передаем
[06:03:49.520 --> 06:03:51.520]  повыделить на 8, напоминаю.
[06:03:51.520 --> 06:03:53.520]  Поэтому в принципе если к этому прибавить
[06:03:53.520 --> 06:03:55.520]  два раза повыделить на 8, то в общем-то
[06:03:55.520 --> 06:03:57.520]  криминала не произойдет, правда?
[06:03:57.520 --> 06:03:59.520]  То есть поэтому получается,
[06:03:59.520 --> 06:04:01.520]  что на каждом уровне
[06:04:01.520 --> 06:04:03.520]  значит все
[06:04:03.520 --> 06:04:05.520]  рекурсивные запуски действуют суммарно
[06:04:05.520 --> 06:04:07.520]  на,
[06:04:07.520 --> 06:04:09.520]  то есть передается не более чем
[06:04:09.520 --> 06:04:11.520]  Е ребер.
[06:04:11.520 --> 06:04:13.520]  Ну точнее так, не более чем Е ребер
[06:04:13.520 --> 06:04:15.520]  и суммарно все делается за
[06:04:15.520 --> 06:04:17.520]  получается В плюс Е.
[06:04:17.520 --> 06:04:19.520]  Понятно, да?
[06:04:21.520 --> 06:04:23.520]  То есть я утверждаю, что
[06:04:23.520 --> 06:04:25.520]  смотрите, дело в том, что
[06:04:25.520 --> 06:04:27.520]  помимо рекурсии все работает за В плюс Е,
[06:04:27.520 --> 06:04:29.520]  согласны?
[06:04:31.520 --> 06:04:33.520]  Да, ну самое интересное
[06:04:33.520 --> 06:04:35.520]  конечно вот это прореживание,
[06:04:35.520 --> 06:04:37.520]  но мы верим, что за В плюс
[06:04:37.520 --> 06:04:39.520]  Е оно делается.
[06:04:55.520 --> 06:04:57.520]  Вот мы когда вызвали
[06:04:57.520 --> 06:04:59.520]  рандомайс МСФ,
[06:04:59.520 --> 06:05:01.520]  мы его вызвали
[06:05:01.520 --> 06:05:03.520]  второй раз от Е штрих
[06:05:03.520 --> 06:05:05.520]  и
[06:05:09.520 --> 06:05:11.520]  нет, не от Е штрих,
[06:05:11.520 --> 06:05:13.520]  от
[06:05:13.520 --> 06:05:15.520]  всех ребер, которые были раньше,
[06:05:15.520 --> 06:05:17.520]  без тяжелых ребер, которые мы нашли
[06:05:17.520 --> 06:05:19.520]  на предыдущем шаге.
[06:05:21.520 --> 06:05:23.520]  Да, было
[06:05:23.520 --> 06:05:25.520]  ровно вот
[06:05:25.520 --> 06:05:27.520]  могли,
[06:05:27.520 --> 06:05:29.520]  но при этом суммарно их все равно меньше, чем Е.
[06:05:29.520 --> 06:05:31.520]  Именно, да, они могли
[06:05:31.520 --> 06:05:33.520]  повторяться, но нам важно даже
[06:05:33.520 --> 06:05:35.520]  не это. Смотрите, мы
[06:05:35.520 --> 06:05:37.520]  говорим следующее, что на каждом рекурсивном запуске
[06:05:37.520 --> 06:05:39.520]  мы кроме
[06:05:39.520 --> 06:05:41.520]  рекурсии работаем за В плюс Е.
[06:05:41.520 --> 06:05:43.520]  То есть вот эти шаги боролбки
[06:05:43.520 --> 06:05:45.520]  мы делаем за В плюс Е,
[06:05:45.520 --> 06:05:47.520]  соответствующие
[06:05:47.520 --> 06:05:49.520]  сжатия и так далее, это все делается за В плюс Е.
[06:05:53.520 --> 06:05:55.520]  Получается В плюс Е и рекурсия.
[06:05:55.520 --> 06:05:57.520]  Но отсюда следует такое, что если мы
[06:05:57.520 --> 06:05:59.520]  в рекурсию будем передавать такие графы,
[06:05:59.520 --> 06:06:01.520]  что сумма В плюс Е для них окажется
[06:06:01.520 --> 06:06:03.520]  не более, чем
[06:06:03.520 --> 06:06:05.520]  то есть сумма не более, чем именно
[06:06:05.520 --> 06:06:07.520]  В плюс Е для
[06:06:07.520 --> 06:06:09.520]  исходного графа, то тогда отсюда будет следовать,
[06:06:09.520 --> 06:06:11.520]  что все это работает за В плюс Е на
[06:06:11.520 --> 06:06:13.520]  логарифам уровней рекурсии.
[06:06:15.520 --> 06:06:17.520]  То есть таким образом вывод очень простой.
[06:06:17.520 --> 06:06:19.520]  Из этого уже следует,
[06:06:19.520 --> 06:06:21.520]  что этот алгоритм в худшем случае
[06:06:21.520 --> 06:06:23.520]  работает за Е лог В.
[06:06:27.520 --> 06:06:29.520]  Вот, понимаете, да?
[06:06:31.520 --> 06:06:33.520]  Вот, понимаете?
[06:06:45.520 --> 06:06:47.520]  Еще более простым способом
[06:06:47.520 --> 06:06:49.520]  можно доказать, что этот алгоритм работает
[06:06:49.520 --> 06:06:51.520]  за О от Е плюс В квадрат,
[06:06:51.520 --> 06:06:53.520]  особенно если вы сжимаете кратные ребра.
[06:06:57.520 --> 06:06:59.520]  Ну, фишка там заключается...
[06:06:59.520 --> 06:07:01.520]  Ну, понятно, фишка тут заключается в том,
[06:07:01.520 --> 06:07:03.520]  что вы все шаги сделаете
[06:07:03.520 --> 06:07:05.520]  тут за В квадрат,
[06:07:05.520 --> 06:07:07.520]  а в рекурсию
[06:07:07.520 --> 06:07:09.520]  передаете два раза по графу
[06:07:09.520 --> 06:07:11.520]  на В поделить
[06:07:11.520 --> 06:07:13.520]  на 8 ребер.
[06:07:13.520 --> 06:07:15.520]  Понятно, да?
[06:07:17.520 --> 06:07:19.520]  То есть поэтому получается...
[06:07:19.520 --> 06:07:21.520]  Можно сказать, что алгоритм еще и за В квадрат работает.
[06:07:27.520 --> 06:07:29.520]  Вот.
[06:07:33.520 --> 06:07:35.520]  Ну, во-первых, давай так.
[06:07:35.520 --> 06:07:37.520]  Первое, что мы сделаем неявно,
[06:07:37.520 --> 06:07:39.520]  в том числе и в шагах борувки,
[06:07:39.520 --> 06:07:41.520]  убьем кратные ребра.
[06:07:43.520 --> 06:07:45.520]  Идея такая.
[06:07:45.520 --> 06:07:47.520]  Делаем...
[06:07:47.520 --> 06:07:49.520]  Передаем здесь этот граф.
[06:07:49.520 --> 06:07:51.520]  В нем ребер не более чем
[06:07:51.520 --> 06:07:53.520]  В поделить на 8, все это в квадрате.
[06:07:53.520 --> 06:07:55.520]  То есть не более чем В квадрат на 64.
[06:07:55.520 --> 06:07:57.520]  Логично, да?
[06:07:57.520 --> 06:07:59.520]  То есть передали граф
[06:07:59.520 --> 06:08:01.520]  на вот столько ребер.
[06:08:03.520 --> 06:08:05.520]  В поделить на 8 вершин
[06:08:05.520 --> 06:08:07.520]  и без кратных ребер, допустим, да?
[06:08:07.520 --> 06:08:09.520]  Потом, значит, нам вернулся в ростов,
[06:08:09.520 --> 06:08:11.520]  мы тут что-то за опять В квадрат пошаманили
[06:08:11.520 --> 06:08:13.520]  и передали еще один граф,
[06:08:13.520 --> 06:08:15.520]  видим, и без кратных ребер.
[06:08:15.520 --> 06:08:17.520]  Поэтому там по индукции получается,
[06:08:17.520 --> 06:08:19.520]  что так как В поделить на 8 в квадрате
[06:08:19.520 --> 06:08:21.520]  даже умножить на 2
[06:08:21.520 --> 06:08:23.520]  это заведомо меньше, чем В квадрат.
[06:08:23.520 --> 06:08:25.520]  Но там во второй раз...
[06:08:27.520 --> 06:08:29.520]  Поэтому В квадрат
[06:08:29.520 --> 06:08:31.520]  тоже выклеивается вполне.
[06:08:33.520 --> 06:08:35.520]  Но на самом деле нам пока
[06:08:35.520 --> 06:08:37.520]  3 шага в руки не нужно,
[06:08:37.520 --> 06:08:39.520]  а нужно только 2.
[06:08:39.520 --> 06:08:41.520]  Ну, может, наверное.
[06:08:43.520 --> 06:08:45.520]  Нет, ну да, 3 нам понадобится,
[06:08:45.520 --> 06:08:47.520]  когда мы попытаемся
[06:08:47.520 --> 06:08:49.520]  от ожидания уже считать.
[06:08:49.520 --> 06:08:51.520]  Да, вот теперь давайте вспомним,
[06:08:51.520 --> 06:08:53.520]  пока это просто еще и аргументация,
[06:08:53.520 --> 06:08:55.520]  что алгоритм, в принципе, неплох тем,
[06:08:55.520 --> 06:08:57.520]  что он не хуже Барувки или Прима.
[06:08:59.520 --> 06:09:01.520]  Это уже неплохо.
[06:09:05.520 --> 06:09:07.520]  По модулю вот этого черного ящика
[06:09:07.520 --> 06:09:09.520]  алгоритм, кажется, не самый убойный.
[06:09:11.520 --> 06:09:13.520]  Честно? Не знаю.
[06:09:21.520 --> 06:09:23.520]  В фараде Калдон Бендер
[06:09:23.520 --> 06:09:25.520]  умел LCA искать за единицу
[06:09:25.520 --> 06:09:27.520]  при линейном предподсчете.
[06:09:27.520 --> 06:09:29.520]  Это да.
[06:09:29.520 --> 06:09:31.520]  Конкретно LCA.
[06:09:33.520 --> 06:09:35.520]  Кат и предок тоже.
[06:09:35.520 --> 06:09:37.520]  Вот так маленькая проблема.
[06:09:37.520 --> 06:09:39.520]  Одно дело найти катово предка,
[06:09:39.520 --> 06:09:41.520]  другое дело найти минимум
[06:09:41.520 --> 06:09:43.520]  на пути между ними.
[06:09:43.520 --> 06:09:45.520]  И вот это была проблема.
[06:09:45.520 --> 06:09:47.520]  Мы же можем сжать все ребра.
[06:09:47.520 --> 06:09:49.520]  Мы все писаем.
[06:09:49.520 --> 06:09:51.520]  Сейчас общаем проблемы.
[06:09:51.520 --> 06:09:53.520]  Если мы умеем искать катово предка,
[06:09:53.520 --> 06:09:55.520]  то что-нибудь...
[06:09:55.520 --> 06:09:57.520]  Нет, там фишка такая.
[06:09:57.520 --> 06:09:59.520]  Хорошо.
[06:10:01.520 --> 06:10:03.520]  Там просто проблема.
[06:10:03.520 --> 06:10:05.520]  У нас были две составляющие.
[06:10:05.520 --> 06:10:07.520]  Во-первых, мы насчитывали двоичные подъемы
[06:10:07.520 --> 06:10:09.520]  для...
[06:10:09.520 --> 06:10:11.520]  Там три просто подлые части.
[06:10:11.520 --> 06:10:13.520]  Во-первых, мы для каких-то двоичных подъемов
[06:10:13.520 --> 06:10:15.520]  насчитывали минимумы.
[06:10:15.520 --> 06:10:17.520]  Вот.
[06:10:17.520 --> 06:10:19.520]  Но не для всех.
[06:10:19.520 --> 06:10:21.520]  То есть у нас нет такого,
[06:10:21.520 --> 06:10:23.520]  что если я пойду на предка на 8,
[06:10:23.520 --> 06:10:25.520]  то я, оказывается, двоичный подъем
[06:10:25.520 --> 06:10:27.520]  уже насчитал. Нет, у нас такого нет.
[06:10:27.520 --> 06:10:29.520]  Правда, тут не проблема.
[06:10:29.520 --> 06:10:31.520]  Потому что
[06:10:31.520 --> 06:10:33.520]  другая часть говорила,
[06:10:33.520 --> 06:10:35.520]  что у нас же там был
[06:10:35.520 --> 06:10:37.520]  ледер декомпозицион
[06:10:37.520 --> 06:10:39.520]  суммарного размера N.
[06:10:39.520 --> 06:10:41.520]  И на этом ледер декомпозиционе
[06:10:41.520 --> 06:10:43.520]  минимум мы насчитывать можем
[06:10:43.520 --> 06:10:45.520]  за линию. Тем же фарах Колтон Бендеров.
[06:10:45.520 --> 06:10:47.520]  Тем, что мы
[06:10:47.520 --> 06:10:49.520]  идем в листья, мы уже сразу
[06:10:49.520 --> 06:10:51.520]  ломаем минимум. Нет, не ломаем
[06:10:51.520 --> 06:10:53.520]  на самом деле. Нет, знаешь, почему?
[06:10:53.520 --> 06:10:55.520]  Потому что там идея такая. Дело в том,
[06:10:55.520 --> 06:10:57.520]  что там просто фишка такая,
[06:10:57.520 --> 06:10:59.520]  что как мы насчитывали сами двоичные
[06:10:59.520 --> 06:11:01.520]  подъемы? Мы говорили, что мы поднимаемся
[06:11:01.520 --> 06:11:03.520]  на 8, а потом выясняется, что
[06:11:03.520 --> 06:11:05.520]  подняться еще на 8 из этой вершины можно в
[06:11:05.520 --> 06:11:07.520]  ледер декомпозиционе.
[06:11:07.520 --> 06:11:09.520]  Так давай тогда в ледер декомпозиционе
[06:11:09.520 --> 06:11:11.520]  мы еще и минимум выкопаем, потому что на каждом пути
[06:11:11.520 --> 06:11:13.520]  из ледер декомпозициона можно минимум мы насчитать за линию.
[06:11:13.520 --> 06:11:15.520]  А когда мы из листьев
[06:11:15.520 --> 06:11:17.520]  поднимаемся на 2 степени N?
[06:11:17.520 --> 06:11:19.520]  Вот, а так это из листьев и есть. То есть тут берем минимум,
[06:11:19.520 --> 06:11:21.520]  а тут минимум берется из ледер декомпозицион.
[06:11:21.520 --> 06:11:23.520]  Мы сможем сохранить минимум на пути.
[06:11:23.520 --> 06:11:25.520]  А, а вот это уже да.
[06:11:27.520 --> 06:11:29.520]  А вот это уже проблема. С другой
[06:11:29.520 --> 06:11:31.520]  стороны, правда там,
[06:11:31.520 --> 06:11:33.520]  да, но с другой стороны
[06:11:33.520 --> 06:11:35.520]  с другой стороны оговорка такая.
[06:11:35.520 --> 06:11:37.520]  В этом шаге мы сделаем так. Мы спустимся на
[06:11:37.520 --> 06:11:39.520]  допустим 57 вниз.
[06:11:39.520 --> 06:11:41.520]  Для того, чтобы
[06:11:41.520 --> 06:11:43.520]  двоичный подъем нам
[06:11:43.520 --> 06:11:45.520]  едва ли не тут же
[06:11:45.520 --> 06:11:47.520]  отсюда поднялся.
[06:11:47.520 --> 06:11:49.520]  Просто
[06:11:49.520 --> 06:11:51.520]  тут же наверно
[06:11:51.520 --> 06:11:53.520]  поднялся. Но тогда скорее всего
[06:11:53.520 --> 06:11:55.520]  на этом пути мы просто будем брать минимум не на
[06:11:55.520 --> 06:11:57.520]  всем вот этом суффиксе, а только на этом отрезке.
[06:11:59.520 --> 06:12:01.520]  Что?
[06:12:01.520 --> 06:12:03.520]  Нам нужно на всех отрезках насчитать.
[06:12:03.520 --> 06:12:05.520]  Нет,
[06:12:05.520 --> 06:12:07.520]  хотя
[06:12:07.520 --> 06:12:09.520]  да, проблема, проблема, согласен.
[06:12:09.520 --> 06:12:11.520]  Нет, ну там просто фишка такая,
[06:12:11.520 --> 06:12:13.520]  что двоичный подъем у нас скакнет
[06:12:13.520 --> 06:12:15.520]  на сколько-то, да.
[06:12:15.520 --> 06:12:17.520]  Ну, из 57
[06:12:17.520 --> 06:12:19.520]  он должен скакнуть там, да. Если он скакнет на 64
[06:12:19.520 --> 06:12:21.520]  или больше, там на 128,
[06:12:21.520 --> 06:12:23.520]  то тогда утверждается,
[06:12:23.520 --> 06:12:25.520]  что просто там, скажем так,
[06:12:25.520 --> 06:12:27.520]  в ледер декомпозицион есть
[06:12:27.520 --> 06:12:29.520]  путь, проходящий через эту
[06:12:29.520 --> 06:12:31.520]  вершину, из которого вверх, на вот
[06:12:31.520 --> 06:12:33.520]  это вот расстояние, на эти 7, можно и скакнуть.
[06:12:37.520 --> 06:12:39.520]  Так что это выкапывали,
[06:12:39.520 --> 06:12:41.520]  это выкапали, там больше подлянка в том,
[06:12:41.520 --> 06:12:43.520]  что там самая большая подлянка с этими метавершинами
[06:12:43.520 --> 06:12:45.520]  размеры логарифом,
[06:12:45.520 --> 06:12:47.520]  чтобы для них...
[06:12:49.520 --> 06:12:51.520]  Не, если бы там фишка была в том,
[06:12:51.520 --> 06:12:53.520]  что там же у нас деревьев самих,
[06:12:53.520 --> 06:12:55.520]  типов деревьев мало, их можно там всех предподсчитать.
[06:12:55.520 --> 06:12:57.520]  А там сжимать координаты
[06:12:57.520 --> 06:12:59.520]  придется не только по типам деревьев, но и по тем,
[06:12:59.520 --> 06:13:01.520]  по весам, которые там висят.
[06:13:09.520 --> 06:13:11.520]  Нет, это подходит.
[06:13:11.520 --> 06:13:13.520]  Нет, это мы тут просто начали пытаться гадать,
[06:13:13.520 --> 06:13:15.520]  действительно, что там примерно написано
[06:13:15.520 --> 06:13:17.520]  в этом ухаге группе.
[06:13:19.520 --> 06:13:21.520]  Да, если мы верим в это.
[06:13:21.520 --> 06:13:23.520]  А, вот это?
[06:13:23.520 --> 06:13:25.520]  А, тут?
[06:13:25.520 --> 06:13:27.520]  Ну, в принципе, да.
[06:13:27.520 --> 06:13:29.520]  Но если мы поверим,
[06:13:29.520 --> 06:13:31.520]  что это работает за V плюс E,
[06:13:31.520 --> 06:13:33.520]  то, во-первых, получается E лог В,
[06:13:33.520 --> 06:13:35.520]  а во-вторых, сейчас мы попытаемся доказать,
[06:13:35.520 --> 06:13:37.520]  что мат ожидания времени работает
[06:13:37.520 --> 06:13:39.520]  у этого алгоритма, соответственно,
[06:13:39.520 --> 06:13:41.520]  E.
[06:13:41.520 --> 06:13:43.520]  Будем доказывать это, как всегда, по индукции.
[06:13:45.520 --> 06:13:47.520]  Да, ну ладно, не E,
[06:13:47.520 --> 06:13:49.520]  а, ладно, будем честны, V плюс E.
[06:13:51.520 --> 06:13:53.520]  Давайте честно докажем, что
[06:13:53.520 --> 06:13:55.520]  время работы, то есть мат ожидания,
[06:13:55.520 --> 06:13:57.520]  там T,
[06:13:57.520 --> 06:13:59.520]  то есть, так сказать, T от G
[06:13:59.520 --> 06:14:01.520]  не происходит, С на модуль V
[06:14:01.520 --> 06:14:03.520]  плюс модуль E.
[06:14:07.520 --> 06:14:09.520]  Ну, давайте думать, как же мы это будем делать?
[06:14:11.520 --> 06:14:13.520]  Так, в общем, да, я утверждаю,
[06:14:13.520 --> 06:14:15.520]  что нам даже не потребуется вот это
[06:14:15.520 --> 06:14:17.520]  минус D писать.
[06:14:19.520 --> 06:14:21.520]  Значит, ну, поехали.
[06:14:21.520 --> 06:14:23.520]  Начнем с того, что мы забыли там.
[06:14:23.520 --> 06:14:25.520]  Ну, поехали.
[06:14:25.520 --> 06:14:27.520]  Так, давайте, кажется, пришло время
[06:14:27.520 --> 06:14:29.520]  ликвидировать вот это безобразие.
[06:14:31.520 --> 06:14:33.520]  Ликвидируем это безобразие.
[06:14:33.520 --> 06:14:35.520]  Безобразие-безобразие-безобразие.
[06:14:35.520 --> 06:14:37.520]  Безобразие-безобразие, безобразие, безобразие.
[06:14:37.520 --> 06:14:39.520]  Безобразие.
[06:14:39.520 --> 06:14:41.520]  Безобразие, безобразие, безобразие.
[06:14:41.520 --> 06:14:55.680]  вот
[06:14:55.680 --> 06:15:07.480]  получать следующее значит мат ожидания значит поехали это значит t от g значит оно чему оно
[06:15:07.480 --> 06:15:15.440]  равно ну давайте меньше ли розы на первом шаге ну понятно мы делаем а на в плюс е потому что
[06:15:15.440 --> 06:15:24.680]  барубка понятно да ну давайте ладно я все делаю за а от в плюсе кроме рекурсивных запусков так
[06:15:24.680 --> 06:15:35.600]  что давайте все это пишу за а от в плюсе так теперь значит теперь мы делаем рандомный мсф
[06:15:35.600 --> 06:15:45.440]  рандомный мсф у нас работает зам от ожидания значит получается ц на сколько там загенерилась
[06:15:45.440 --> 06:15:56.560]  да значит модуль f штрих да модуле в штрих пока это но формально надо наверное изе написать
[06:15:56.560 --> 06:16:16.080]  потому что f штрих это случайная величина вот то есть разберешь 3 но но вот а что такое какая коллизия
[06:16:16.080 --> 06:16:28.000]  так ну ладно как обозначает амут ожидания в математике правильно буквой м неправильно вот
[06:16:28.000 --> 06:16:46.880]  нет математик но вот но можно и мне вообще написать шопл а да что получается то есть пишем мат
[06:16:46.880 --> 06:16:53.760]  уже то есть ну да давайте так мат ожидания т от же ночь не превосходит а от в плюсе
[06:16:53.760 --> 06:17:22.600]  ну хорошо хорошо да ну давайте но вроде так мат ожидания т от же штрих но мы что-то то здесь
[06:17:22.600 --> 06:17:33.320]  отказались вот давайте мат ожидания плюс мат ажида плюшо там дальше там мат ожидания от значит
[06:17:33.320 --> 06:17:39.680]  от и от вот этого в 3 я его даже специальным графом не обзывал очень короче так вот
[06:17:39.680 --> 06:17:50.120]  так давайте таким утверждением мы согласны или наше чувство или наше чувство прекрасного
[06:17:50.600 --> 06:17:59.920]  здесь начинает вызывать какие-то сомнения но это другой вопрос нет пока вот идейно
[06:17:59.920 --> 06:18:03.600]  вообще это формула правильная да понятно что в ее потом можно применить индукции
[06:18:03.600 --> 06:18:13.720]  такая вообще какой-то идейно вообще имеем право так писать ну да правда тут видите
[06:18:13.720 --> 06:18:18.960]  но да видимо приходится скажем так приходится иметь в виду правда что мат ожиданий здесь
[06:18:18.960 --> 06:18:24.760]  берется ну когда тут вероятностных распределения не только внутри же штриха но и в том рандоме
[06:18:24.760 --> 06:18:38.520]  который этот же штрих сгенерил да нет ну просто нет ну не совсем нет и ни за что не отвечает
[06:18:38.520 --> 06:18:44.040]  просто у нас есть же штрих ты как бы будет запущен и сделается какое-то время работы
[06:18:44.040 --> 06:18:50.240]  но просто как бы просто имеется в виду что там мат ожиданий здесь имеют в виду что вероятность
[06:18:50.240 --> 06:18:58.840]  генерилась как внутри так и снаружи вот так вот и здесь тоже сам то есть это надо иметь в виду
[06:18:58.840 --> 06:19:05.080]  но с другой стороны заметим следующий теперь
[06:19:05.080 --> 06:19:25.640]  ну можно это да давайте ну вот ну да ну да давайте ну давайте чтобы не путаться давайте так
[06:19:25.640 --> 06:19:34.280]  и напишем вершины в 3 ребра есть три да так теперь мы секрет следующее мы знаем что какой бы
[06:19:34.280 --> 06:19:43.560]  я здесь граф не сгенерил по предположению индукции но там будет меньшее количество вершин и там уж
[06:19:43.560 --> 06:19:49.200]  пока и не большее количество ребер да и то меньше следовательно по предположению индукции могу
[06:19:49.200 --> 06:19:54.920]  предположить что у каждого графа который тут может появиться там мат ожидания время работы
[06:19:54.920 --> 06:20:09.280]  будет линейна правда но давайте давайте я вот давайте я вот распишу для примера так мат аж м т
[06:20:09.280 --> 06:20:22.840]  от v 3 е штрих это равно сумма по всем е штрих которые могут появиться вот так которые могут быть могут
[06:20:22.840 --> 06:20:40.720]  появиться значит вероятность того что е штрих появилась умножить на мат ожидания собственно
[06:20:40.720 --> 06:21:00.000]  этого т от как-то по-другому написать то ну вот ладно на самом деле вот эти мки это две разные
[06:21:00.000 --> 06:21:10.720]  то есть тут мат ожидания берется по вот этому то есть тут мат ожидания вот то есть здесь
[06:21:10.720 --> 06:21:17.360]  подразумевается что е штрих случайно а здесь подразумевается что е штрих фиксировано
[06:21:17.360 --> 06:21:35.240]  это у нас как выясняется то есть смотрите это не превосходит сумме опять п от е штрих появилась
[06:21:35.240 --> 06:21:49.200]  умножить на сколько как выясняется сколько у нас там получается цена модуль v 3 плюс модуль
[06:21:49.200 --> 06:22:12.200]  е штрих логично да сразу вот вот такая вот неожиданная идея так ну что по идее из этого
[06:22:12.200 --> 06:22:18.800]  действительно можно вывести но тогда это на самом деле если я это аккуратно сейчас раскрою
[06:22:18.800 --> 06:22:34.320]  скобки то я могу сказать что это равно равно ц модуль v плюс значит плюс ц на сумму значит
[06:22:34.320 --> 06:22:49.080]  п по всем е штрих п е штрих появилась умножить на модуль е штрих согласны да что да в этой да
[06:22:49.080 --> 06:23:02.120]  но заметим что просто по определению это банально то есть вот это вот это просто ц на мат ожидания
[06:23:02.120 --> 06:23:12.240]  количество то есть мат ожидания размера е штрих потому что это это просто определение правда
[06:23:12.240 --> 06:23:22.640]  вот это вот просто определение понятия мот ожидания нет
[06:23:22.640 --> 06:23:33.240]  или кто тесно сейчас будет это викида а я подсчитал википедию там другое определение там
[06:23:33.240 --> 06:23:43.120]  интеграл и бега написал ну мало ли я просто рассказывает прикол даже что как-то рассказал
[06:23:43.120 --> 06:23:48.920]  что такое корневое дерево это просто обычное дерево у которого объявили корень я посмотрю
[06:23:48.920 --> 06:23:56.120]  определение википедии там вообще другое написано но нет там что-то технически жесткое
[06:23:56.120 --> 06:24:03.160]  описание там понятие детей там родителей и так далее вот так вот а теперь давайте подумаем
[06:24:03.160 --> 06:24:14.880]  а чего нас равно кстати мот ожидания количества и я квадрат какой квадрат
[06:24:14.880 --> 06:24:29.560]  ну да совершенно верно просто равенство да потому что помните мы каждый ребро выкидывали
[06:24:29.560 --> 06:24:35.320]  средства я штрих мы каждый выбрали сразу одна вторая вот да действительно можно было прям
[06:24:35.320 --> 06:24:43.440]  жестко под множество взять кстати чтоб тут была ровно половина и это бы сработала так вот но там
[06:24:43.440 --> 06:24:48.440]  не принципиально да потому что чем больше ребер возьмем там тем как бы меньше ребер там будет
[06:24:48.440 --> 06:24:57.000]  передана в рекурсию так вот значит про я штрих поняли но теперь остается только выяснить а
[06:24:57.000 --> 06:25:18.000]  теперь остается выяснить чему нас равно м т от v 3 и е 3 без е 2 штриха ну пока да
[06:25:18.000 --> 06:25:27.040]  а нет смотрите
[06:25:27.040 --> 06:25:38.760]  да с хорошей вероятностью мы там
[06:25:38.760 --> 06:25:49.640]  да мог бы быть фейл то есть если нам будет фантазия фатально не весь алгоритм будет
[06:25:49.640 --> 06:25:55.880]  работать за 4 степени то есть мы доказали что у нас мот ожидания 3 степени но это не как бы но
[06:25:55.880 --> 06:26:02.000]  как бы есть у нас мот ожидания крутое то есть как бы да что да у вас там да если верить мот
[06:26:02.000 --> 06:26:06.200]  ожидания у вас там где-то в среднем за два раза выпадет орел но это не значит что у вас не
[06:26:06.920 --> 06:26:18.360]  выпадет сто пятьсот реже значит дальше что у нас такое мот ожидания тет в этот три там
[06:26:18.360 --> 06:26:25.600]  е 3 слэш е штрих что это значит ну я вот как бы и вот это вот вещи технические то есть я
[06:26:25.600 --> 06:26:34.600]  честно скажу что это не превосходит цена модуль v 3 получается плюс мот ожидания размера е штрих
[06:26:34.600 --> 06:26:46.880]  без е 2 штриха да
[06:26:46.880 --> 06:27:14.560]  нет рандом то нет рандом то как бы не влиять будет но то есть как минимум видимо дальнейшая
[06:27:14.560 --> 06:27:25.040]  часть видимо покажет что рандом может и повлиять ну скажем так с точки зрения
[06:27:25.040 --> 06:27:30.080]  честности проблем не будет потому что если алгоритм реализовывать честную можно не
[06:27:30.080 --> 06:27:35.960]  рандомизировать можно просто брать первое первое пополам да совершенно да но нам нужны но рандом
[06:27:35.960 --> 06:27:41.480]  нам нужен чтобы среднем было хорошо чтобы выкидывали рандомные ребра они они
[06:27:41.480 --> 06:27:55.000]  в смысле я говорю про то что если тесты не подгоняются не погоди но зорися рандом
[06:27:55.000 --> 06:28:15.600]  но можно не шахтить потому что все равно каждый ребро берешь 1 2 так что разницы никакой то есть
[06:28:15.600 --> 06:28:22.040]  как бы вероятность не должна зависеть от теста если тест фиксирован то как бы то есть рандом
[06:28:22.160 --> 06:28:29.360]  для себя внутри кидаешь то есть не должно быть так что как бы бывают тесты которых мой алгоритм
[06:28:29.360 --> 06:28:33.980]  работает жестко плохо но если я просто буду генерировать тест случайно то этот тест не
[06:28:33.980 --> 06:28:38.920]  выпадет вот такого такого нет то есть вот этих разговоров типа у нас жюри таких тестов не было
[06:28:38.920 --> 06:28:47.400]  нет такого не доехал быть то есть должно гарантировать так что как бы до любого вот что как бы какой бы
[06:28:47.400 --> 06:28:50.320]  бы не был тест в жюри, должно быть так, что если ты много-много
[06:28:50.320 --> 06:28:53.080]  раз на этом тесте твой алгоритм запустил, то в среднем работает
[06:28:53.080 --> 06:28:54.080]  классно.
[06:28:54.080 --> 06:28:55.080]  Что такое вероятность?
[06:28:55.080 --> 06:28:56.080]  Ну да, ну просто есть, наверное, еще и, по-моему, есть еще типа
[06:28:56.080 --> 06:28:57.080]  алгоритмов, где типа на случайных тестах работают
[06:28:57.080 --> 06:28:58.080]  хорошо, но не на случайных плохо.
[06:28:58.080 --> 06:28:59.080]  Не, ну типа даже из случайных тестов задачу дают, например.
[06:28:59.080 --> 06:29:00.080]  Где-то у меня был…
[06:29:00.080 --> 06:29:19.440]  Нет, это, вероятно, такие задачи бывают, но тут тогда
[06:29:19.440 --> 06:29:24.240]  вы учитываете, что вероятность резиста крайне мала, поэтому
[06:29:24.240 --> 06:29:25.480]  можно резист не учитывать.
[06:29:26.360 --> 06:29:28.840]  Да, ну и символы это и пруют, конечно.
[06:29:28.840 --> 06:29:34.160]  Вот, это понятно, да, но это как бы другое.
[06:29:34.160 --> 06:29:35.160]  Так вот.
[06:29:35.160 --> 06:29:37.160]  А теперь давайте думать, вот тут на самом деле может
[06:29:37.160 --> 06:29:39.080]  быть просто ядро этого алгоритма.
[06:29:39.080 --> 06:29:44.960]  А сколько у нас ребер, то есть вот что это за мотожидание?
[06:29:44.960 --> 06:29:47.920]  То есть сколько в среднем ребер здесь выживет?
[06:29:47.920 --> 06:29:48.920]  Так же.
[06:29:48.920 --> 06:30:12.720]  Ну в смысле, вот до этого момента, право, расписали
[06:30:12.720 --> 06:30:13.720]  абсолютно так же.
[06:30:13.720 --> 06:30:15.720]  Я просто вместо из штриха подставил вот это, то есть
[06:30:15.720 --> 06:30:17.920]  вот эти вот рассуждения вообще от этого не зависели.
[06:30:17.920 --> 06:30:29.240]  Так, сейчас мы же в е-штрих появились, ну можно сказать,
[06:30:29.240 --> 06:30:30.240]  что это как минимум.
[06:30:30.240 --> 06:30:35.080]  Нет, е-штрих это типа, скажем так, какое множество ребер
[06:30:35.080 --> 06:30:37.120]  тут появится, это тоже случайная величина.
[06:30:37.120 --> 06:30:40.040]  Оно тоже зависит от е-штриха, только.
[06:30:40.040 --> 06:30:42.840]  Нет, оно не зависит, ну как бы, ну типа.
[06:30:42.840 --> 06:30:43.840]  Да, оно зависит только от е-штриха.
[06:30:43.960 --> 06:30:51.360]  Нет, оно там, ну да, зависит от е-штриха, да, но это вообще
[06:30:51.360 --> 06:30:54.240]  не важно на самом деле, откуда, потому что главное,
[06:30:54.240 --> 06:30:55.960]  потому что я тут бы писал вероятность того, что это
[06:30:55.960 --> 06:30:58.920]  множество как-то появилось, да оно там как-то появилось.
[06:30:58.920 --> 06:31:01.560]  Теперь давайте думать, что это за множество и как
[06:31:01.560 --> 06:31:02.560]  оно вообще появляется.
[06:31:02.560 --> 06:31:09.680]  Но давайте вспоминать, как вообще это ребро появилось.
[06:31:10.520 --> 06:31:13.080]  Это ребро появилось так, то есть мы как бы взяли
[06:31:13.080 --> 06:31:18.840]  рандомные ребра из исходного множества, вот е3, в этом
[06:31:18.840 --> 06:31:22.280]  рандомном множестве, и в этом рандомном множестве
[06:31:22.280 --> 06:31:23.720]  взяли минимальный лес.
[06:31:23.720 --> 06:31:28.920]  Потом вернули все ребра и удалили тяжелое относительно
[06:31:28.920 --> 06:31:29.920]  этого леса.
[06:31:29.920 --> 06:31:33.180]  То есть в переводе говоря, от самого е-штриха мы оставили
[06:31:33.180 --> 06:31:36.760]  только лес, а потом мы вернули те ребра, которые выкинули,
[06:31:36.760 --> 06:31:39.120]  а при этом те ребра, которые тяжелые, убрали обратно.
[06:31:39.120 --> 06:31:47.640]  То есть у нас там по сути останутся только лески
[06:31:47.640 --> 06:31:53.840]  относительно этой штуки ребра, по большому счету
[06:31:53.840 --> 06:31:54.840]  так.
[06:31:54.840 --> 06:31:58.660]  Но с другой стороны, давайте вспомним, а как у нас этот
[06:31:58.660 --> 06:32:01.480]  лес вообще генерился.
[06:32:01.480 --> 06:32:09.080]  Ну да, но с другой стороны он минимальный, поэтому
[06:32:09.080 --> 06:32:11.280]  мы можем себе вообразить, что он генериальный, но
[06:32:11.280 --> 06:32:14.520]  как бы так как ответ возвращаемый заведомо правильный, то
[06:32:14.520 --> 06:32:17.480]  вообразить мы себе можем, что он генерился алгоритмом
[06:32:17.480 --> 06:32:18.480]  Краскала.
[06:32:18.480 --> 06:32:24.160]  Да, вот подключайте воображение на максимум, да, тут логика
[06:32:24.160 --> 06:32:29.240]  будет достаточно нетривиальной, но тем не менее.
[06:32:29.240 --> 06:32:32.120]  Потому что в принципе, да, то есть миностов теоретически
[06:32:32.120 --> 06:32:36.720]  мог быть алгоритмом Краскала, да, а что такое алгоритм
[06:32:36.720 --> 06:32:37.720]  Краскала?
[06:32:37.720 --> 06:32:41.520]  Алгоритм Краскала говорит нам, значит, дайте, то есть
[06:32:41.520 --> 06:32:44.680]  отсортируем ребра в порядке возрастания веса, а потом
[06:32:44.680 --> 06:32:48.760]  каждый ребро смотрим, прибираемся по ребрам, смотрим на очередное
[06:32:48.760 --> 06:32:51.680]  и говорим, что если ребро можно добавить восток без
[06:32:51.680 --> 06:32:54.400]  зацикливания, то добавляем, иначе говорим до свидания.
[06:32:54.400 --> 06:32:58.600]  Логично, да?
[06:32:59.400 --> 06:33:03.040]  А теперь идея такая, а давайте мысленно этот процесс совместим
[06:33:03.040 --> 06:33:04.400]  с выбором рандомных ребр.
[06:33:04.400 --> 06:33:11.160]  То есть смотрите, на самом деле абсолютно так же этот
[06:33:11.160 --> 06:33:13.760]  осток можно генерить следующим образом.
[06:33:13.760 --> 06:33:19.480]  Берем ребра, прям исходные, Е3, сортируем их в порядке
[06:33:19.480 --> 06:33:20.480]  возрастания.
[06:33:21.360 --> 06:33:30.080]  И теперь проходим все по ребрам и говорим, если кидаем
[06:33:30.080 --> 06:33:34.320]  монетку с вероятностью 1-2, если нам не выпало, значит
[06:33:34.320 --> 06:33:41.360]  мы это ребро игнорируем, а если выпало 1-2, а если
[06:33:41.360 --> 06:33:44.840]  выпало, а если ребро выпало, то мы его пытаемся добавить
[06:33:44.840 --> 06:33:48.400]  восток, учитывая выше описанное требование.
[06:33:49.320 --> 06:33:51.720]  Так мы строим вот этот вот f-штрих.
[06:33:51.720 --> 06:33:55.720]  Но это мог получиться не наш f-штрих.
[06:33:55.720 --> 06:33:56.720]  Нет, почему?
[06:33:56.720 --> 06:34:03.320]  Как MSF получится ровно он, вот, да, ровно он.
[06:34:03.320 --> 06:34:08.840]  Но с другой стороны, теперь заметим маленькую приятную
[06:34:08.840 --> 06:34:09.840]  вещь.
[06:34:09.840 --> 06:34:16.200]  Какие из этих ребер могут попасть, какие из этих ребер
[06:34:16.200 --> 06:34:17.840]  попадут вот сюда.
[06:34:17.840 --> 06:34:23.880]  Значит, идея такая, мы идем по этим ребрам Е3 и пытаемся
[06:34:23.880 --> 06:34:24.880]  их добавить.
[06:34:24.880 --> 06:34:25.880]  Такое утверждение такое.
[06:34:25.880 --> 06:34:28.300]  А теперь давайте сделаем тот же алгоритм, но сделаем
[06:34:28.300 --> 06:34:29.800]  одну маленькую модификацию.
[06:34:29.800 --> 06:34:35.160]  Если ребро уже является тяжелым относительно набранного
[06:34:35.160 --> 06:34:42.000]  основа f-штрих, то монетку мы для него даже не кидаем,
[06:34:42.000 --> 06:34:46.320]  потому что даже если оно попадет в Е-штрих, то оно
[06:34:46.320 --> 06:34:52.920]  потом вылетит, как тяжелые ребросы, согласны?
[06:34:52.920 --> 06:34:57.000]  Но тогда получается, для таких ребр мы даже монетку
[06:34:57.000 --> 06:34:58.000]  не кидаем.
[06:34:58.000 --> 06:35:02.220]  Но тогда получается, что количество ребер здесь
[06:35:02.220 --> 06:35:08.400]  не превосходит количество раз, которое мы кинули монетку.
[06:35:08.400 --> 06:35:14.200]  Неожиданно, да?
[06:35:14.200 --> 06:35:22.480]  Ну, вопрос был неожиданно, да?
[06:35:22.480 --> 06:35:23.480]  Ага.
[06:35:23.480 --> 06:35:28.640]  Ну да, короче, а правильный ответ – нет, счет становится
[06:35:28.640 --> 06:35:29.640]  5-4.
[06:35:29.640 --> 06:35:53.880]  Ну, потому что те ребра, которые мы кинули монетку,
[06:35:53.880 --> 06:35:59.280]  они не выпали, но вот они как бы теоретически могли
[06:35:59.280 --> 06:36:01.880]  все равно здесь вот как тяжелые ребра выпасть, хотя
[06:36:01.880 --> 06:36:04.960]  ладно, это неправда, хотя до этого не произойдет.
[06:36:04.960 --> 06:36:11.840]  Ну хорошо, да ладно, уговорили, да, по сути, если ребро сейчас
[06:36:11.840 --> 06:36:15.640]  можно добавить, но вы этого не сделали только из-за
[06:36:15.640 --> 06:36:18.080]  монеток, то как бы в будущем остове оно естественно
[06:36:18.080 --> 06:36:21.160]  там максимум на цикле не будет, это правда, то есть
[06:36:21.160 --> 06:36:24.120]  оно будет либо две компоненты стягивать, либо будет стягивать
[06:36:24.120 --> 06:36:25.920]  цикл, но на этом цикле будет кто-то больше.
[06:36:25.920 --> 06:36:32.840]  Да, хорошо, вот, да, важно, хорошо, ну скажи так, непринципиально
[06:36:32.840 --> 06:36:36.240]  на самом деле уточнение, но хорошо, да, то есть у нас
[06:36:36.240 --> 06:36:38.940]  будет вопрос, то есть вот здесь сюда мы передадим
[06:36:38.940 --> 06:36:43.880]  ребер ровно столько, сколько раз у нас мы кинули монетку.
[06:36:44.560 --> 06:36:48.520]  А теперь вопрос, сколько раз мы кинули монетку?
[06:36:48.520 --> 06:36:54.400]  А теперь неожиданная логика, а сколько раз эта монетка
[06:36:54.400 --> 06:36:55.400]  выпала?
[06:36:55.400 --> 06:37:03.040]  В среднем я попала.
[06:37:03.040 --> 06:37:06.720]  Нууу... не точно.
[06:37:06.720 --> 06:37:28.760]  если мы его в теории не можем добавить, иначе мы кидаем, если получаем, то добавляем.
[06:37:28.760 --> 06:37:35.280]  Ну тогда ребро автоматически получается добавляется в остов, если нет, то значит игнорируем,
[06:37:35.280 --> 06:37:41.480]  но тогда, но второй запуск оно по любому попадет. Нет, но тут фишка такая. Тело в том,
[06:37:41.480 --> 06:37:48.320]  что каждый раз когда ребро, когда монетка выпала по такому раскладу, у вас в остов добавляется
[06:37:48.320 --> 06:37:56.320]  новое ребро. Следовательно монетка выпала не более чем в 3 минус 1 раз. То есть как только
[06:37:56.320 --> 06:38:00.920]  монетка выпала в 3 минус 1 раз, в принципе дальше монетка кидаться не будет точно.
[06:38:00.920 --> 06:38:15.040]  Поэтому получается, что получается, можно сделать даже еще, чтобы вот совсем было понятно,
[06:38:15.040 --> 06:38:20.760]  я скажу так, то есть на самом деле эту монетку можно было кидать следующим образом. То есть надо
[06:38:20.760 --> 06:38:26.920]  было не по ребрам ориентироваться, а заранее сгенерить последовательность, в которой вы кидаете
[06:38:26.920 --> 06:38:44.160]  монетку до тех пор, пока она у вас не выпадет в 3 минус 1 раз. А потом, когда вы генерите по ребрам,
[06:38:44.160 --> 06:38:49.480]  то когда вам требуется рандом, вы уже обращаетесь к очередному члену сгенеренной последовательности
[06:38:49.480 --> 06:38:59.480]  и берете запись из него. Понятно, да? В принципе это одно и то же. Ну или по камере так тоже можно,
[06:38:59.480 --> 06:39:03.820]  просто возможно вам не нужно было добиваться того, чтобы она выпала именно в 3 минус 1 раз,
[06:39:03.820 --> 06:39:14.600]  поэтому вы там какую-то работу лишнюю сделали. Да, как бы мы знаем, что как бы этого нам точно
[06:39:14.600 --> 06:39:21.040]  хватит, потому что как только монетка выпадет в 3 минус 1 раз, мы ее больше кидать не будем.
[06:39:21.040 --> 06:39:30.760]  Тогда получается, что вот это количество ребер мы можем оценить сверху как количество раз,
[06:39:30.760 --> 06:39:36.640]  то есть оцениваем сверху как мотожидание, количество раз, то есть мы кидаем монетку
[06:39:36.640 --> 06:39:43.720]  с вероятностью 1-2 и останавливаемся, когда она сгенерилась в 3 минус 1 раз. Спрашивается,
[06:39:43.720 --> 06:39:51.360]  каково мотожидание? Да, вот это распределение называется отрицательным биномеральным,
[06:39:51.360 --> 06:40:13.120]  если не ошибаюсь. Вот, вот теперь смотрите, но на самом деле и так, но на самом деле заметим,
[06:40:13.160 --> 06:40:20.160]  что так как нам нужно, чтобы n-1 раз монетка выпала, то я утверждаю, что это мотожидание равно n-1 умножить
[06:40:20.160 --> 06:40:31.160]  на сколько раз нужно, чтобы она выпала 1 раз, правда? Ну вот, но мы помним, с какого мотожидания,
[06:40:31.160 --> 06:40:35.680]  то есть если мы просто кидаем монетку с вероятностью 1-2, то есть с какого мотожидания количество
[06:40:35.680 --> 06:40:44.480]  образков до ближайшего выпадения монетки? Да, как мы уже вычисляли в начале занятия 2, но там
[06:40:44.480 --> 06:40:51.880]  был 1 делить на p, но в данном случае 2. Значит отсюда, в общем, из этих всех эпических рассуждений
[06:40:51.880 --> 06:41:02.640]  следует, что вот это мотожидание на самом деле не превосходит просто 2 на ve3.
[06:41:02.640 --> 06:41:14.080]  На там модуль ve3 плюс 2 на модуль ve3. Ну я даже эти там минус что-то там даже писать не буду,
[06:41:14.080 --> 06:41:25.400]  неинтересно. Неплохо тогда. А теперь давайте это схлопнем. То есть раз у нас получается вот так,
[06:41:25.400 --> 06:41:33.960]  то есть получается, значит это у нас не превосходит, как мы уже выяснили, а на ve. На, так, отсюда мы
[06:41:33.960 --> 06:41:49.400]  выжили сколько? Вот столько. С на модуль ve3 плюс модуль ve3 пополам. Плюс что-то там еще. А,
[06:41:50.280 --> 06:42:02.920]  это вообще равно давайте тут 3c модуль ve3 плюс 3c модуль ve3. Неплохо тогда.
[06:42:09.640 --> 06:42:14.560]  Так, ну давайте теперь попробуем, а как бы нам оценить?
[06:42:19.400 --> 06:42:30.680]  А, впрочем, на самом деле нам уже и по барабану. Смотрите, на самом деле это равно a на ve плюс e
[06:42:30.680 --> 06:42:47.360]  плюс 4cv3 плюс c на ve3 пополам. Теперь понятно, что ve3 не превосходит просто e, очевидно, да? Там
[06:42:47.360 --> 06:42:52.800]  можно даже еще повычитать, но в этом даже уже нет необходимости. Почему? Потому что, ну или если
[06:42:52.800 --> 06:42:58.880]  будет сейчас попишем, ну значит a от v плюс e плюс, да, v3 у нас это сколько? Это не более,
[06:42:58.880 --> 06:43:13.560]  чем выделить на 8, правда? v3. То есть тут получается cv пополам плюс, ну а что тут уже ce пополам?
[06:43:13.560 --> 06:43:26.320]  Неплохо, правда? И теперь надо доказать, что это меньше либо равно c на v плюс e. Ну очевидно,
[06:43:26.320 --> 06:43:40.520]  верно при c, просто банально. Каком? Больше или там? Ну при каком c это верно? Больше
[06:43:40.520 --> 06:44:03.160]  либо равным 2a, все. Что такое? Ну этот шаг вас уже не должен удивлять. Не, ну да,
[06:44:03.160 --> 06:44:08.080]  основная магия конечно была здесь, да, то есть это прям вот главная магия. Ну что делать?
[06:44:08.080 --> 06:44:15.840]  Вот, ну это, ну вот такая вот красота.
[06:44:21.720 --> 06:44:27.520]  Вот. Так, ну что, есть ли тут какие-то вопросы?
[06:44:38.080 --> 06:44:53.800]  Подумаю. Не, ну не ниже хора точно. Не отрежу, у вас конспект будет, не волнуйтесь. У этой штуки есть
[06:44:53.800 --> 06:44:58.800]  просто такой очень качественный конспект на русском языке, собственно, от качества математика,
[06:44:58.800 --> 06:45:13.800]  так что не волнуйтесь. На экзамене нет, ну просто так, что там. Нет, ну на экзамене не будет. Ну да,
[06:45:13.800 --> 06:45:21.840]  вот я уже начинаю думать. Просто я не знаю, успели рассказать за полчаса, но давайте попробуем.
[06:45:21.840 --> 06:45:28.200]  Хотя, конечно, по-хорошему это называется донам быщуческой, донам быщуческой 3,
[06:45:28.200 --> 06:45:35.880]  конечно, да, потом. Ну чтобы оставшуюся геому добить. Ну уже ладно, что делать, что делать.
[06:45:35.880 --> 06:45:57.160]  Чего? Что у меня? Ну мне надо, да. Вот. Ну давайте сейчас быстренько. Сейчас будет вообще,
[06:45:57.160 --> 06:46:04.400]  значит, веселая тема. Мы сейчас будем перемножать булевый матриц. Давайте сразу скажу,
[06:46:04.400 --> 06:46:08.080]  то есть даны две булевые матрицы, мы их перемножаем. В каком смысле перемножаем? Ну,
[06:46:08.080 --> 06:46:16.520]  как всегда, перемножение это типа конъюнция, сложение типа дезюнкция. То есть определение,
[06:46:16.520 --> 06:46:21.520]  то есть там по определению, когда вы перемножаете там две матрицы N на N, у вас получается что-то
[06:46:21.520 --> 06:46:33.240]  типа, то есть получается C и TGT равно, значит, дезюнкция по всем K от 1 до N, там A и KT,
[06:46:33.240 --> 06:47:02.880]  B, pardon, KTGT. Вот такую штуку я хочу найти, желать как-то быстро. Но как же мне это сделать? Да,
[06:47:02.960 --> 06:47:12.280]  мне придется ввести еще понятие неожиданное M от N. Это время, за которое вы можете детерминированным
[06:47:12.280 --> 06:47:21.080]  образом перемножить две матрицы. На этот раз обычные числовые. Ну, как мы уже обсуждали когда-то,
[06:47:21.080 --> 06:47:28.800]  то есть на текущий момент M, мы знаем, что M не происходит там что-то типа от N в степени 2.23,
[06:47:29.560 --> 06:47:38.280]  какой-то там. Ну или там какие-то такие цифры я не помню. Суть какая-то такая или что-то в этом
[06:47:38.280 --> 06:47:43.080]  роде, может, я наврал. Ну там в Википедии, в Википедии, наверное, можно посмотреть. А 2,
[06:47:43.080 --> 06:48:02.560]  3, 5, 4 или что-то в этом роде. Вот, ну потому что, ну вот, хочется вот действительно как-то теперь
[06:48:02.560 --> 06:48:14.160]  эти булевые матрицы. Ну вот каким-то мистическим образом перемножать. Так,
[06:48:14.160 --> 06:48:41.840]  ну как минимум наврал, тут не 2, 3, тут по версии конспекта, тут все-таки 3, 7.
[06:48:41.840 --> 06:48:50.400]  Нет, ну да, это потому что я вам говорил фиг год назад.
[06:48:50.400 --> 06:49:11.480]  Нет, ну метод штрафсона это 2.8, если что. Ну вот. Да, вот это называется у нас такие
[06:49:11.480 --> 06:49:19.520]  булевые перемножения матриц, оно нам иногда будет, соответственно, пригождаться. Зачем оно нам
[06:49:19.520 --> 06:49:26.760]  будет пригождаться? Потому что решать это мы будем на самом деле более крутую задачу. Мы будем
[06:49:26.760 --> 06:49:37.360]  решать Флойда. Флойда в невзвешенном графе, в незвешенном, неориентированном графе. Итак,
[06:49:37.360 --> 06:49:48.440]  реальная задача такая. Жила была матрица смежности A, N на N. Надо восстановить матрицу D,
[06:49:48.440 --> 06:49:57.760]  N на E, N, где D и G, T это просто расстояние в этом невзвешенном, напоминаю, графе.
[06:49:57.760 --> 06:50:19.440]  Нет. Ну да, просто матрица смежности из 0 и 1. Вот. Ну возникает вот такой естественный нот. Ну а
[06:50:19.440 --> 06:50:26.920]  первых заметим, конечно, маленькое, значит маленькое приятное свойство. Маленькое приятное
[06:50:26.920 --> 06:50:44.080]  свойство на самом деле будет, ну а первая идея, которая тут возникает, значит, идея тут возникает
[06:50:44.080 --> 06:50:52.200]  такая. Ну а первых заметим, что будет, если я возведу эту матрицу в какую степень. Вот по смыслу.
[06:50:52.200 --> 06:51:15.920]  Ну, а точнее. Да, то есть на самом деле так, количество, то есть A в степени K и T житое,
[06:51:15.920 --> 06:51:23.520]  это количество путей не обязательно простых длины ровно K, соединяющих вершины и ежи.
[06:51:23.520 --> 06:51:35.440]  Нет. Ну, если я A восприниму как числовую матрицу, то нет. Вот, то есть нет, свидетель это вот
[06:51:35.440 --> 06:51:39.160]  булевое перемножение, это нам понадобится, то есть будет такой инструмент. Сейчас не заморачиваемся,
[06:51:39.160 --> 06:51:51.280]  пока все в числах. Так вот, у меня идея такая. Заведу-ка я такую матрицу, как A штрих, и она будет
[06:51:51.280 --> 06:52:06.360]  у меня равна, знаете к чему? Она, значит, будет равна A квадрат или A. Ну, короче говоря,
[06:52:06.360 --> 06:52:15.320]  я хочу в А штрихе, то есть я хочу, чтобы, другими словами, А штрих и ж равно 1, если расстояние от
[06:52:15.320 --> 06:52:23.440]  и ж не превосходит 2 и 0 иначе. То есть я могу получить вот этот вот А штрих, получается,
[06:52:23.440 --> 06:52:32.320]  за время М от Н. Ну, за время перемножения матрицы. И по этой матрице можно, по идее,
[06:52:32.320 --> 06:52:40.400]  получить соответственно матрицу D штрих, то есть расстояние в ней. Понимаете, да? Ну, D штрих
[06:52:40.400 --> 06:52:45.000]  это расстояние, потому что вот это тоже матрица смежности, правда? То есть, по сути, мы в графе
[06:52:45.000 --> 06:52:53.680]  соединяем все вершины, у которых есть общий сосед в исходном графе. И в этом новом графе
[06:52:53.680 --> 06:53:06.720]  тоже есть кое-что. И у меня получилось. Ну вот. Так, теперь давайте пару утверждений правят.
[06:53:06.720 --> 06:53:15.520]  Значит, утверждения. Ну, во-первых, начнем с того, что, конечно, D штрих и T ж это тупо D и T ж пополам
[06:53:15.520 --> 06:53:39.240]  округленное куда? Ну, очевидно, вверх. Господи, это магия уже. Это должно быть просто очевидное утверждение.
[06:53:39.240 --> 06:53:59.880]  Ну, просто в D штрих мы делаем один скачок там, где делали два скачка раньше. Вот.
[06:54:09.240 --> 06:54:23.400]  На самом деле, можно написать более продвинутые утверждения. То есть, на самом деле, D штрих и
[06:54:23.400 --> 06:54:38.200]  T ж. Оно, на самом деле, может быть, равно. Ну, на самом деле, тут можно еще аккуратно
[06:54:38.200 --> 06:54:43.000]  попытаться разобрать случаи на тему того, когда надо округлить вверх, когда надо округлить вниз.
[06:54:43.000 --> 06:54:55.560]  Вот. Так. Сейчас как что-то надо-то аккуратно сказать. Так, ладно,
[06:54:55.560 --> 06:55:03.480]  давайте буду подпозглядывать, так быстрее будет. Так. А, ну давайте так. Значит,
[06:55:03.480 --> 06:55:18.440]  смотрите, утверждение такое. Если D и ж четно, то для любого и и штрих, лежащего, так сказать,
[06:55:18.440 --> 06:55:33.880]  в матрице А. Вот я так напишу. Да. Верно, что верно. Что D штрих от и штрих ж равно, там больше
[06:55:33.880 --> 06:55:42.520]  либо равно, точнее, чем D штрих и ж. Нет, ладно, плохо писать и штрих, наверное, придется писать В.
[06:55:48.440 --> 06:55:57.520]  Ну, тогда, смотрите, если вы перейдете из вершины и на одно ребро, то расстояние изменится на один в
[06:55:57.520 --> 06:56:02.280]  ту или иную сторону. Изменится не более чем на один в ту или иную сторону, правда? Да,
[06:56:02.280 --> 06:56:13.480]  напоминаю, у нас граф неориентированный. Ну, давайте так, простое утверждение. Ну,
[06:56:13.480 --> 06:56:25.400]  простое утверждение такое. D в ж лежит на отрезке D и ж минус 1, D и ж плюс 1. Согласны?
[06:56:25.400 --> 06:56:38.280]  Вот. Ну, отсюда автоматически следует, что если D это четно, то как бы пополам округлить вверх,
[06:56:38.280 --> 06:56:43.680]  это как бы будет не меньше, чем то, что было. То есть не меньше, чем просто D и ж пополам,
[06:56:43.680 --> 06:56:57.000]  поэтому мы так пишем. Вот. Для любого соседа это верно. Понимаете, да? Понимаете? Вот. Ну,
[06:56:57.000 --> 06:57:09.200]  это первое. А теперь второе. Как вы уже догадываетесь, если D и ж нечетно, то тогда
[06:57:09.200 --> 06:57:19.480]  существует такое V, такое, что ИВ лежит в матрице А, такое, что окажется, что D'Vj строго меньше,
[06:57:19.480 --> 06:57:28.040]  чем D'j. Ну, то есть можно, ну, то есть просто берем кратчайший путь, значит, на нем смотрим,
[06:57:28.040 --> 06:57:32.560]  куда идет и куда мы идем из И, вот приходим в вершину В, и оказывается, что там путь оказался,
[06:57:32.560 --> 06:57:45.560]  то есть это округление дало на 1 меньше. То есть вот такое неожиданное замечание.
[06:57:45.560 --> 06:58:01.920]  Ну, утверждается, что, ну да, утверждается так, что здесь у нас есть матрица А и матрица D',
[06:58:01.920 --> 06:58:13.600]  то я утверждаю, что по ним можно однозначно восстановить D. Причем каким образом? Вот,
[06:58:13.920 --> 06:58:26.600]  каким образом надо это восстанавливать? Ну, давайте вот аккуратно, внимательно
[06:58:26.600 --> 06:58:38.880]  посмотрим. То есть идея будет такая, то есть как бы вот, ну, то есть вот давайте для каждой
[06:58:38.880 --> 06:58:45.720]  пары Иj мы попытаемся проверить, то есть перебрать все соседи, всех соседей вершины
[06:58:45.720 --> 06:58:52.120]  И и попытаться понять, там найдется ли действительно, то есть такая, то есть можем ли мы найти вот такую
[06:58:52.120 --> 06:59:01.600]  дэшку? Если можем найти, то там будет нечетно, да, но вот то как бы дэшка получается будет нечетно,
[06:59:01.600 --> 06:59:08.560]  ну, то есть мы видим, да, что D'j, то это по-любому, либо 2D'х, либо 2D'х-1. Тогда,
[06:59:08.560 --> 06:59:13.320]  если эта вешка найдется, там надо писать минус 1, а если не найдется, надо писать без минус 1.
[06:59:13.320 --> 06:59:25.760]  Понятно, да? Вот, теперь остается вопрос, а как бы это сделать не за куб? Потому что для каждого
[06:59:25.760 --> 06:59:32.560]  Иj придется это честно перебирать. Логично, да? А можно ли это как-то свести к передвижению матрицы?
[06:59:38.560 --> 06:59:49.080]  А желательно даже к перемножению, может быть, даже булевых матриц.
[07:00:08.560 --> 07:00:34.640]  Нет, все еще круче. Смотрите, то есть, ну, вот. Но на самом деле можно заметить еще более крутую
[07:00:34.640 --> 07:00:41.280]  вещь. Во-первых, смотрите, тут всегда больше либо равно, а тут найдется меньше. Но также еще верно,
[07:00:41.280 --> 07:00:59.440]  что для любого V окажется, что D'vj меньше, чем D'ij меньше либо равно. Ну, там с округлением,
[07:00:59.440 --> 07:01:02.760]  просто как бы нечетное число обладает свойством, что если ему прибавить один,
[07:01:02.840 --> 07:01:10.960]  то по полам округления вверх ничего не изменится. Просто знаете, что из этого следует? Просто из этого
[07:01:10.960 --> 07:01:27.760]  на самом деле следует супер утверждение. D'ij четно тогда и только тогда, когда сумма по всем И,
[07:01:28.360 --> 07:01:53.160]  там V, лежащим в матрице A, значит D'vj больше либо равна, чем D'ij. Ну да. То есть, по сути,
[07:01:53.160 --> 07:01:59.960]  там будет идея, что если вы перемножаете матрицу A на матрицу D', то есть, можно это записать по
[07:01:59.960 --> 07:02:07.200]  другому. То есть, можно еще написать, что пусть у вас какая-нибудь матрица B, это будет равно тупо
[07:02:07.200 --> 07:02:15.800]  матрица A умножить на матрицу D'. Тогда все, что вам потребуется, это после этого, то есть,
[07:02:15.800 --> 07:02:21.760]  для каждого ij просто посмотреть, верно ли, что B'ij больше либо равно, чем D'ij. То есть,
[07:02:21.760 --> 07:02:36.640]  если да, то D'ij четно, если нет, то нет. Здесь у нас пока сумма, но в принципе,
[07:02:36.640 --> 07:02:44.480]  это означает, это дает там, конечно, такой маленький приятный алгоритм. То есть, алгоритм будет
[07:02:44.480 --> 07:02:48.920]  заключать, как соответственно эту D'й найти? То есть, как вообще эту матрицу D'й теперь насчитывать?
[07:02:48.920 --> 07:02:58.720]  Вот, но идея такая. То есть, давайте выполним за МАТН вот это удвоение, найдем рекурсивно D'.
[07:02:58.720 --> 07:03:06.960]  Потом за одно перемножение матрицы мы, получается, восстановим ответ. То есть,
[07:03:06.960 --> 07:03:14.520]  восстановим по матрице D'. То есть, получается, мы передали рекурсию просто тот же граф,
[07:03:14.520 --> 07:03:24.720]  но с в два раза меньшим диаметром. Да, получается, у нас алгоритм от нахождения самих расстояний
[07:03:24.720 --> 07:03:42.360]  получился от МАТН на логен. Понятно, да? Да, причем тут вероятность? Да, ответ. Ответ. Пока
[07:03:42.360 --> 07:03:54.920]  действительно вообще ни при чем. Да, вот такая вот неожиданная нота. Так, ну давайте,
[07:03:54.920 --> 07:04:02.080]  как вы думаете? Да, но картинка называется, да, ваши ставки. А при чем тут вообще может быть на
[07:04:02.080 --> 07:04:16.840]  самом деле эта вероятность? Причем тут могут быть вот эти вот свидетели булева перемодожения матриц.
[07:04:16.840 --> 07:04:24.040]  Вот эти. Потому что свидетельство будет такое. Найти вот эту матрицу, конечно, булевую, это не
[07:04:24.040 --> 07:04:37.040]  проблема. Вот, кто они такие? А теперь смотрите. Нет. Где-то рядом ходит словосочетание свидетели
[07:04:37.040 --> 07:04:48.400]  булева перемножения матриц. Где-то ходят. Вот надо представить. А ходят они вот где. Задача про
[07:04:48.400 --> 07:04:54.480]  булевые матрицы на самом деле звучит так. Само по себе вот это произведение, да, мы его за ОАТМ находим
[07:04:54.480 --> 07:05:05.920]  без всяких вероятностей. Ну вот что. Ну вот это вот. Да, одно. Это легко. За МАТН эту матрицу ценно
[07:05:05.920 --> 07:05:15.200]  считать булевое произведение легко. Нет, за МАТН. Потому что надо просто честно перемножить матрицы А и
[07:05:15.200 --> 07:05:28.560]  Б как числовые, а потом просто каждое ненулевое число заменить на один. Ну в смысле А и Б булевые
[07:05:28.560 --> 07:05:42.880]  матрицы здесь были. Так что нолики единички. Замечательно. Нет, мы не будем делить, мы будем
[07:05:42.880 --> 07:05:50.000]  просто делать это за степень 2.37. Продвинутый метод комплексмита винограда, который работает за
[07:05:50.000 --> 07:06:12.520]  2.3781. Винограда, да. А остальное? Константа. Ну, да. Ну поехали. Зачем? Но нам интересно
[07:06:12.520 --> 07:06:21.440]  просто произведение. Для каждого произведения C и J ведь существует K какое-то, хотя бы благодаря
[07:06:21.440 --> 07:06:30.760]  которому эта дизюнкция вообще единична, правда? Так вот, это K и называется свидетелем. Свидетелем
[07:06:30.760 --> 07:06:39.760]  булево-перемножение матриц. Поняли, да? То есть на самом деле вот именно здесь и возникает эта
[07:06:39.760 --> 07:06:48.120]  задача. Вот. То есть поэтому так. То есть матрицу мы находим за M от N, а вот за какой-то точку можно
[07:06:48.120 --> 07:06:55.000]  для каждого и J, который от C и J равно 1 найти великого свидетеля, вот этот вопрос. А теперь
[07:06:55.960 --> 07:07:05.840]  вот давайте прежде чем сосредоточиться над этой задачей, давайте-ка мы полезем. Зачем нам
[07:07:05.840 --> 07:07:24.720]  действительно это надо? Ну, идея на самом деле такая. Смотрите. Так, сейчас. Ну-ка давайте
[07:07:24.720 --> 07:07:31.120]  сейчас скажем. Зачем нам этот свидетель, Зачем нам этот свидетель мог бы вообще пригодиться?
[07:07:31.120 --> 07:07:38.600]  А прогодиться он мог бы вот зачем? Потому что заметим маленькую приятную вещь. Заметим,
[07:07:38.600 --> 07:07:45.040]  что нам бы очень неплохо было бы вот в этой задаче не только находить расстояние, но и
[07:07:45.040 --> 07:07:52.200]  восстанавливать ответ, правда? Да, собственно, путь. А что значит восстанавливать путь? Ну,
[07:07:52.200 --> 07:07:56.560]  конечно, если между всеми парами решим в явном виде вектор писать, то это может быть ВКУ просто
[07:07:56.560 --> 07:08:02.760]  на уровне ответа. Но на самом деле восстанавливать не надо. Идея про такая, что для каждой пары и J
[07:08:02.760 --> 07:08:15.120]  неплохо бы просто написать вот эту вершину В, первую вершину на пути, правда? Что? Ну, здесь
[07:08:15.120 --> 07:08:22.640]  мы мыслили в терминах В, да? То есть получается надо найти, то есть для каждого и J надо найти
[07:08:22.640 --> 07:08:32.760]  такого V, то есть такого соседа V, что, то есть и V лежит как бы в ребро, и расстояние от там,
[07:08:32.760 --> 07:08:48.360]  то есть D от VJ равно D и J минус 1, понимаете, да? Да, то есть это мы такое, это мы такое хотим найти,
[07:08:48.360 --> 07:08:58.520]  причем знаем, что для любого такого V, напоминаю верно, что D от VJ, оно лежит на отрезке D и J
[07:08:58.520 --> 07:09:14.480]  минус 1, D и J плюс 1, логично, да? Так вот, смотрите, читерство такое. Так вот, значит, предлагается
[07:09:14.480 --> 07:09:21.960]  это сделать так. Ну почему, если мы сдвинулись на одно ребро, как бы, то можем расстояние как
[07:09:21.960 --> 07:09:26.760]  увеличить на 1, так уменьшить на 1 или оставить таким же, но больше-меньше по неравенству трюгольника
[07:09:26.760 --> 07:09:37.000]  не получится. Так вот, теперь у меня идея такая, сейчас будет бомбочка, я сейчас сгенерирую еще
[07:09:37.000 --> 07:09:49.760]  три матрицы. Я скажу, что M нулевое, да ладно, M нулевое и J, нет, вот M плохо,
[07:09:49.760 --> 07:10:00.960]  ладно, дайте, какую букву мы любим? T. На матрице? M, J, H. Ладно, давайте J. Так вот,
[07:10:00.960 --> 07:10:12.080]  супер-J. Значит, J, матрица J нулевое и TJT, знаете к чему равно? Оно равно 1, если D и TJT делится,
[07:10:12.080 --> 07:10:27.840]  там процент 3 равно 0 и 0 иначе. Аналогичным образом я генерирую J1 и J, и J2 и J. Вот такая
[07:10:28.160 --> 07:10:35.640]  три булевые матрицы. Верно ли, что у меня расстояние, если взять расстояние по модулю 3 равно,
[07:10:35.640 --> 07:10:47.080]  чего мне надо? Заява, да? Ладно, сейчас еще веселее будет. Свидетели, заява, чем мы занимаемся,
[07:10:47.080 --> 07:11:00.600]  да? Ну это еще ничего. Значит, G0, G1, G2. Так вот, идея на самом деле такая. Как найти свидетеля
[07:11:00.600 --> 07:11:11.000]  для IJ? Теперь пусть у нас выяснилось, что неожиданно D и TJT, там, пусть D и TJT процент
[07:11:11.000 --> 07:11:22.240]  3 равно, ну, допустим, двоечки. Ну, допустим, да? Тогда я утверждаю, что V подходит,
[07:11:22.240 --> 07:11:45.280]  если и V лежит в матрице A, и на самом деле DVJ процент 3 равно 1. Вот я утверждаю,
[07:11:45.280 --> 07:12:05.760]  это необходимо и достаточно. Вот так я даже напишу. Так что вот такая матрица появилась.
[07:12:05.760 --> 07:12:16.960]  Вот. То есть тогда просто идея такая. То есть на самом деле давайте, ну, по сути это означает,
[07:12:16.960 --> 07:12:26.000]  что если я перемножу матрицу A на вот эту вот матрицу M1, то где-то в этом месте у меня,
[07:12:26.000 --> 07:12:39.440]  то есть перемножу, то благодаря V у меня появится что-то отличное от нуля. То есть как бы вот эту
[07:12:39.440 --> 07:12:49.400]  информацию, если такое V, я выковарю из информации A умножить на G1. То есть просто если я перемножу
[07:12:49.400 --> 07:13:01.200]  эту матрицу и в клетке IJ у меня окажется что-то отличное от нуля, то тогда я сделаю вывод,
[07:13:01.200 --> 07:13:09.560]  что благодаря какому-то V это произошло. А если я умею, но так как это были в матрице,
[07:13:09.560 --> 07:13:14.120]  то если я умею находить свидетеля, то есть благодаря какому V это произошло,
[07:13:14.120 --> 07:13:24.360]  то собственно это оно и будет. Это называется, зачем нужна задача о свидетелях булева
[07:13:24.360 --> 07:13:37.720]  перемножения матриц. Вот такая красота. Понятно? Так, ну вот. То есть теперь на самом деле про вот
[07:13:37.720 --> 07:13:45.840]  эти вот качайшие пути забываем и теперь решаем задачу о свидетелях. Значит, о свидетелях булева
[07:13:45.840 --> 07:14:04.840]  перемножения матриц. Ну да, то есть мы, да. Ну на самом деле алгоритм будет такой. Мы сделаем какие-то
[07:14:04.840 --> 07:14:09.840]  рандомные ивристики, которые позволят нам восстановить, то есть восстановить свидетелей,
[07:14:09.840 --> 07:14:17.080]  ну кроме может быть не сильно большого количества, там их будет у нас не более чем N в среднем. И тогда
[07:14:17.080 --> 07:14:22.080]  этих остальных мы будем восстанавливать прям предельно. Ну во-первых, что можно сделать? В первую
[07:14:22.080 --> 07:14:26.840]  очередь можно перемножить за, ну во-первых, давайте там можно потратить уже МАТН времени на то,
[07:14:26.840 --> 07:14:33.520]  чтобы матрицы честно перемножить, правда? Да, и выяснить, что для каких пар IJ свидетелей вообще
[07:14:33.520 --> 07:14:46.240]  нужны, а для каких нет. Ну вот, а теперь что же будет дальше? А дальше идея такая. Давайте заведем,
[07:14:46.240 --> 07:14:52.120]  да, вот значит забыли, у нас больше А и Б, это не матрица смешности, напоминаю, да. Так вот,
[07:14:52.120 --> 07:15:02.920]  идея такая, теперь я создам матрицу А, допустим, с тильдой, такую, что матрица с тильдой ик,
[07:15:02.920 --> 07:15:15.400]  знаете к чему равна? Просто обычному А ик, но умножить на к. Да, это уже не будем, но просто в
[07:15:15.400 --> 07:15:21.920]  этом перемножении у нас все прикольнее, потому что если нам фантастически повезло и для пары IJ
[07:15:21.920 --> 07:15:31.160]  свидетель ровно один, то тогда вот в произведении А с тильдой на B в этой клепочке ровно этот
[07:15:31.160 --> 07:15:42.640]  свидетель написан и будет, правда? Логично, да? Вот, значит, но, то есть это есть, то есть можем
[07:15:42.640 --> 07:15:47.040]  так M от N проделать и главное по клеточкам пробежаться и проверить, не появился ли у нас
[07:15:47.040 --> 07:15:51.600]  свидетель, да. Потому что если нам подсунули свидетеля, потенциального свидетеля, то мы можем
[07:15:51.600 --> 07:15:58.800]  быстро за единицу проверить, он реально свидетель или так прикалывается. Вот, но, конечно же,
[07:15:58.800 --> 07:16:03.760]  свидетелей чаще всего бывает больше, чем один, а нам бы хотелось бы сделать так,
[07:16:03.760 --> 07:16:08.120]  чтобы свидетелей почаще было поменьше. Как же это сделать?
[07:16:08.120 --> 07:16:23.280]  Чего рандомные клетки? Ну вот, да, но на самом деле да, за нуляем.
[07:16:23.280 --> 07:16:36.920]  Значит, идея такая, на самом деле мы будем пытаться делать следующий чит. Мы сделаем
[07:16:36.920 --> 07:16:43.720]  А, значит, смотрите, мы будем, значит, мы для того, чтобы у нас свидетелей было поменьше,
[07:16:43.720 --> 07:16:49.080]  мы будем говорить, что нас временно будут устраивать только не просто свидетели,
[07:16:49.080 --> 07:16:55.760]  а свидетели из выбранного нами под множество. Ну, например, так, ребят, давайте, у вас слишком
[07:16:55.760 --> 07:17:02.640]  много, поэтому сегодня мы будем считать только тех свидетелей, которые рыжие. Вот. Ну, рыжие,
[07:17:02.640 --> 07:17:08.120]  конечно, рыжие мы будем генирируем рандомом, конечно. Вот, потом завтра у нас будут рыжими,
[07:17:08.120 --> 07:17:16.680]  будут у нас те, у кого там... Не, ну это плохой рандом какой-то. Ну, как бы он будет очень мало,
[07:17:16.680 --> 07:17:23.800]  мало у кого триботинка. Нет, это, конечно, вариант, да, кто-то, конечно, пел, да, знаете,
[07:17:23.800 --> 07:17:30.040]  хотя, да, это, конечно, опровержение, потому что, знаете, как это, 33 кроссовка, 33 кроссовка,
[07:17:30.040 --> 07:17:38.560]  33 кроссовка в прихожих у меня, 33 кроссовка, напряги мозги, на тусовке кто-то без ноги. Ну вот,
[07:17:38.560 --> 07:17:52.360]  вы, видимо, с этим не согласны. Нет, ну, может, действительно, пришел трехногий марсианин какой-нибудь,
[07:17:52.360 --> 07:17:57.520]  хотя нет, на марсиане люди, это известно, вот на планете фикс, вот там трехногие живут, да.
[07:17:57.520 --> 07:18:07.280]  Да, нет, ну, выдохнуть, да, но, знаете, выдохнуть надо было, потому что, да, значит, идея такая,
[07:18:07.960 --> 07:18:14.000]  по факту мы будем некоторым образом генерить случайное подмножество элементов 1, 2 и так далее n
[07:18:14.000 --> 07:18:25.400]  и заявлять, что у нас будет такая матрица A с индексом R, знаете, шип такое, то есть A, R и K будет равно K умножить на A и K,
[07:18:25.600 --> 07:18:38.120]  как и раньше, но на индикатор того, что K в этом множестве лежит. Понятно, да? То есть у нас будет
[07:18:38.120 --> 07:18:43.600]  ивристика, допустим, я R сгенерил как-то рандомно, я пока не буду говорить как конкретно, да, но не
[07:18:43.600 --> 07:18:49.800]  даже не важно, просто как-то я сгенерил R, тогда у меня за m от n есть такая ивристика, я перемножу
[07:18:49.800 --> 07:18:58.120]  вот это, то есть найду вот это произведение A, R на B, и тогда я утверждаю, что в каждой клетке тоже, то есть
[07:18:58.120 --> 07:19:05.880]  я утверждаю, что если среди множества R у ежи найдется ровно один свидетель, то он будет найден, правда?
[07:19:05.880 --> 07:19:12.160]  Честно, ну, в смысле по числовому.
[07:19:12.160 --> 07:19:25.880]  Да, m от n это значительно лучше, чем Q. Помним, да, m от n у нас пока от m в степени 2.37, да,
[07:19:25.880 --> 07:19:36.880]  3.754, бла-бла-бла. Ну, как говорится, человечество будет благодарно, если их завтра выкатят,
[07:19:36.880 --> 07:19:41.880]  и главное, если потом условно после завтра не обнаружатся, что как бы это фуфло.
[07:19:41.880 --> 07:19:50.360]  А зачем?
[07:19:50.360 --> 07:20:05.200]  А это не важно, потому что можем сделать k плюс n, а можем просто проверить, так, вот у меня есть
[07:20:05.200 --> 07:20:16.960]  3 свидетель, ну, потому что k плюс n, ну, в принципе, можно, да, ладно, хорошая идея, ну, можно так, а можно это, тут неважно.
[07:20:16.960 --> 07:20:23.480]  Ладно, можно и так, и так, но главное, что если у вас ровно один, ну, потому что, знаешь, там еще, если так
[07:20:23.480 --> 07:20:30.400]  сделать, то есть шанс, что у тебя сгенировалось 3 свидетеля, ты их сложил, там, допустим, ну, в этом
[07:20:30.400 --> 07:20:35.080]  множестве получился 3 свидетеля, ты их сложил, получил номер, который оказался номером 4
[07:20:35.080 --> 07:20:43.720]  свидетеля, который сюда не попал, но он случайно тоже свидетель, да, то, что там написано, ты проверишь
[07:20:43.720 --> 07:20:50.280]  завод единицы, свидетель это или нет, поэтому, то есть, это в данном случае, это означает, что, то есть,
[07:20:50.280 --> 07:20:54.840]  неожиданным образом тебе могут выложить, да, мы, конечно, это не будем учитывать в вероятностях, но,
[07:20:54.840 --> 07:21:02.680]  но, как бы, такая приятность может и возникнуть, но я не знаю, там, а симптотику вряд ли докрутим
[07:21:02.680 --> 07:21:10.760]  в этом месте, ну, значит, думаем. Так, ну, теперь возникает вопрос, значит, что же, как же мы это R будем генерить?
[07:21:10.760 --> 07:21:18.220]  Так, ну, давайте подумаем, вот, значит, давайте будем генерить,
[07:21:18.220 --> 07:21:27.120]  значит, ну, давайте, ну, вот, значит, ну, идея такая, давайте, значит, сгенерим рандомное
[07:21:27.120 --> 07:21:36.720]  подмножество, но так, чтобы размер этого подмножества был равен ровно r, ровно r, что не так?
[07:21:36.720 --> 07:21:51.360]  Р маленькое, конечно. Тогда давайте так, пусть у меня для каких-то и g есть ровно w свидетелей,
[07:21:51.360 --> 07:21:58.480]  вот, понимаете, да?
[07:21:58.480 --> 07:22:11.680]  Тогда давайте подумаем, какова вероятность того, что из этих свидетелей в мое множество r попадет ровно 1?
[07:22:11.680 --> 07:22:34.480]  Так, да, это все интересно, только я ничего не понял.
[07:22:34.480 --> 07:22:58.920]  Ну, w, это вероятность, да, так, да, но он должен быть ровно 1, то есть остальные должны не попасть.
[07:22:58.920 --> 07:23:14.360]  Так, нет, у нас размер r, у нас вероятность распределения не то, что каждое мы берем с вероятностью r,
[07:23:14.360 --> 07:23:25.880]  да, то придется сэшки писать, то есть получится что-то типа c из n-1 по r-1, ладно, n-w,
[07:23:26.840 --> 07:23:38.040]  поделить на c из n по r, потому что нам нужно выбрать одного свидетеля и r-1 не свидетелей.
[07:23:38.040 --> 07:24:07.400]  33 кроссовка, 33 кроссовка, 33 кроссовка, да.
[07:24:08.040 --> 07:24:16.120]  Так вот, давайте пока просто попишем, значит, смотрите, значит, это равно, давайте честно вспомним,
[07:24:16.760 --> 07:24:26.880]  ц incense по k равно там, бла, бла, бла, бла, бла, бла, бла, бла, бла, бла, бла бла.
[07:24:26.880 --> 07:24:36.840]  Видно, да, это на самом деле равно чему?
[07:24:36.840 --> 07:24:43.080]  Это равно wr, ну, я тут как бы могу сказать что это шлеп, шлепы р,
[07:24:43.080 --> 07:24:58.320]  да и а здесь получается n-w factorial n-r factorial делить на что тут у нас еще значит n factorial
[07:24:58.320 --> 07:25:11.400]  значит n-w-r плюс 1 factorial удобно так ну на самом деле можно даже пошлеп-шлепать чуть-чуть
[07:25:11.400 --> 07:25:19.880]  может сказать что это равно w-r делить на n значит почему я и минус столько взял для того
[07:25:19.880 --> 07:25:27.080]  чтобы у меня тут в числителе и в знаменателе осталось по w-1 множителю здесь это будет n-1
[07:25:27.080 --> 07:25:46.080]  n-2 и так далее n сколько там да минус w-r плюс 2 потому что я сократил вот это на это
[07:25:46.080 --> 07:26:03.960]  а и потому что я нагнал как всегда так ну действительно так так да нет нет надо просто
[07:26:03.960 --> 07:26:09.400]  нет как-то надо совсем вправо значит ухожу в стенку значит описываю как выхожу оттуда да
[07:26:09.400 --> 07:26:17.680]  вот давайте здесь напишем вода да кстати чудо как это называется то преражу еще какие
[07:26:17.680 --> 07:26:26.600]  новости в мире ну какие коза сети чипс опять выиграл коза сети чипс да ну там да махом с
[07:26:26.600 --> 07:26:40.440]  очередной там 3 тач дауна оформил как всегда ну ну ну пс господи пчелы хорошо морти хорошо
[07:26:40.440 --> 07:26:50.360]  играет в американский футбол ну ну как сказать там по торбаках хорошо защищают там я думаю в
[07:26:50.360 --> 07:27:01.440]  конзессе там найдутся интеллект на эту тему так значит поехали тут у нас n-1 n-2 пум пум пум n-w плюс
[07:27:01.560 --> 07:27:19.000]  значит тут у нас получится n-w n-w плюс 1 n-w минус 1 хорошо хорошо не паникуем что не так
[07:27:19.000 --> 07:27:26.960]  n-в чем минус а чем кого сократил
[07:27:27.560 --> 07:27:38.000]  да да еще все придираетесь ко всяким мелочам
[07:27:38.000 --> 07:27:53.440]  ну да действительно так сколько там минус double и плюс два
[07:27:53.440 --> 07:28:11.560]  английский формулы боже боже боже мой формулы более более более более более формула эхо ведь
[07:28:11.560 --> 07:28:21.800]  по идее ладно давайте уж добьем это безобразие значит смотрите на самом деле да может надо было
[07:28:21.800 --> 07:28:28.840]  по-другому сокращать все-таки но полу но получите примерно следующие это равно 1 минус r-1
[07:28:28.840 --> 07:28:37.600]  делить на n-1 но n-r поделить на n-1 это на самом деле вот эту штуку
[07:28:37.600 --> 07:29:07.600]  пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе пеппе п
[07:29:07.600 --> 07:29:17.120]  ну-ка подглядим а ух ты я все правильно делал надо же так теперь заметим следующее что это вероятность можно теперь
[07:29:17.120 --> 07:29:23.800]  оценивать снизу как если бы у меня тут так вот смотрите если тут все знаменательы заменю на n-w
[07:29:23.800 --> 07:29:35.720]  что получится у меня это увеличится или уменьшится да смотрите давайте так дробь увеличится дробь
[07:29:35.720 --> 07:29:42.480]  увеличится значит 24 месяца все уменьшится отлично оцениваем снизу это больше либо равно чем vr
[07:29:42.480 --> 07:29:52.360]  делить на n смотрите на 1-r-1 делить на n-v в степени какой там степени получается
[07:29:52.360 --> 07:30:11.720]  ну время садим вот ну вот так что вот оно вот да прям степени в нет а вы именно не там вы
[07:30:12.720 --> 07:30:21.320]  вот значит а теперь фишка такая сейчас какая там сейчас а впрочем
[07:30:21.320 --> 07:30:35.840]  значит теперь просто смотрите а теперь смотрите как бы нет хорошо это мы просто пока в общем
[07:30:36.480 --> 07:30:45.200]  а теперь смотрите а теперь давайте предположим мы ж заранее вот этого w не знаем смотрите фишка
[07:30:45.200 --> 07:30:53.600]  в чем w мы заранее не знаем более того для каждого для каждой пары ежи w свое поэтому мы сделаем так
[07:30:53.600 --> 07:31:07.760]  мы перебили вот поэтому предположим что w-r делить на n лежит на отрезке от 1-2 до единиц
[07:31:07.760 --> 07:31:19.160]  да как что нет нет это мы будем брать мы просто будем перебирать r-r равно 1 2 4 8 16 короче все
[07:31:19.160 --> 07:31:29.480]  степени двойки до n конечно понятно да и что получится тогда смотрите что получается значит
[07:31:29.480 --> 07:31:36.000]  в этом предположении это значит больше либо равно то есть vr делить на n значит ну опять это
[07:31:36.000 --> 07:31:52.200]  равно 1-vr-w делить на что там получается там wn-w в степени w-1 зачем я это написал а ведь
[07:31:52.200 --> 07:32:00.960]  зачем-то я это написал да заметим что wr я могу это смотрите это больше либо равно чем wr делить
[07:32:00.960 --> 07:32:19.120]  на n значит 1-n делить на w в степени w-1 но потому что я wr оценил сверху как n вот
[07:32:19.120 --> 07:32:27.760]  да ну теперь получается шлёп шлёп это равно то есть получается это более значит вот это вот
[07:32:27.760 --> 07:32:33.840]  сделали это еще сказали что это больше либо равно одной второй поэтому получилось что это
[07:32:33.840 --> 07:32:42.880]  больше либо равно 1 2 на 1-1 делить на w в степени w-1 а вот здесь видимо заявим что это все-таки
[07:32:42.880 --> 07:32:54.960]  больше либо равно 1 делить на 2 и неплохо то есть получается то есть вывод очень простой если я
[07:32:54.960 --> 07:33:07.720]  пробегусь по всем r то есть по r равно значит r равно 1 2 4 там 8 16 и так далее и для каждой
[07:33:07.720 --> 07:33:12.480]  из них попытаюсь найти свидетеля вот таким вот нехитрым сгенерю случайное множество и
[07:33:12.480 --> 07:33:19.280]  попробую найти свидетеля вот таким способом да то я потрачу на это время какое я потрачу на это
[07:33:19.280 --> 07:33:33.840]  время m на n на логарифом n и при этом но вот и но вот и тогда при этом у каждого и ж получается у
[07:33:33.840 --> 07:33:39.320]  каждого и ж будет как минимум вероятность как минимум 1 делить на 2 и что в результате этой
[07:33:39.320 --> 07:33:48.760]  операции у них свидетель будет найден понимаете да а с какой вероятностью но вот теперь давайте
[07:33:48.760 --> 07:33:58.120]  проверим с какой вероятностью свидетель не будет найден но вот с какой вероятностью у нас
[07:33:58.120 --> 07:34:05.080]  свидетель не будет найден но получается 1 делить там 1 делить на 2 и но потому что там идея будет
[07:34:05.080 --> 07:34:24.000]  такая что мы там проделаем вот это вот допустим сколько-то раз но вот понятно да но вот ну вот
[07:34:24.000 --> 07:34:30.280]  но потому что понятно что да то есть мы но то есть у нас тут то есть как бы ошибка у нас будет
[07:34:30.280 --> 07:34:36.520]  заключаться то есть ошибка у нас предусвероятостью не более чем 1 минус 1 делить на 2 и да
[07:34:36.520 --> 07:34:54.680]  да ну по сути да ну типа того да но теперь смотрим за 3 если мы сделаем но если мы
[07:34:54.680 --> 07:35:02.680]  сделаем это не один раз а скажем но вот а теперь но вот нет мы не бесконечно повторяем мы
[07:35:02.680 --> 07:35:10.440]  повторяем но на самом деле это мы не бесконечно повторяем нас идея такая мы это сделаем значит
[07:35:10.440 --> 07:35:19.880]  мы это сделаем карас где к будет равно логарифом по основанию 1 делить на 2 и 1 делить на
[07:35:20.120 --> 07:35:22.400]  округлённый вверх
[07:35:22.400 --> 07:35:32.120]  что не так вот вот столько раз мы повторим этот алгоритм
[07:35:32.120 --> 07:35:43.600]  в смысле как
[07:35:43.600 --> 07:35:54.320]  мы же знаем мы можем эти матрицы в тупую умножить за ну да да да да сведее даже
[07:35:54.320 --> 07:35:58.200]  свидетель нужен напоминаю нам не просто надо матрицы перемножить нам надо свидетеля найти
[07:35:58.200 --> 07:36:18.040]  можно но предлагает предлагает но сколько мы каждый свидетель будет висеть непонятно каждый
[07:36:18.040 --> 07:36:23.680]  конкретный поэтому есть такой чит нам на самом деле можем заметить так что есть у нас этих
[07:36:23.680 --> 07:36:30.280]  свидетелей осталось там скажем мало например n то в принципе n свидетелей можно уже ручками
[07:36:30.280 --> 07:36:36.640]  найти правда потому что это n квадрат займет вот поэтому идея такая давайте сделаем вот столько
[07:36:36.640 --> 07:36:46.240]  ну даже вот к аш-трих ладно ладно вот ладно вот вот столько давайте сделаем тогда смотрите тогда
[07:36:46.240 --> 07:36:55.120]  у нас вероятность того что какой-то свидетель не будет найден она получается будет не более чем то
[07:36:55.120 --> 07:37:01.360]  есть один делит этом 1 2 е в степени к это не превосходит просто один делить на n но тогда
[07:37:01.360 --> 07:37:06.960]  математическое ожидание количества ненайденных свидетелей не превосходит 1 делить на n на n
[07:37:06.960 --> 07:37:13.200]  квадрат то есть n мы все то есть оказывается то есть идея то что давайте вместо этого просто в
[07:37:13.200 --> 07:37:21.920]  этом месте остановите я оставшихся просто добьем ручками то есть получился алгоритм в итоге
[07:37:21.920 --> 07:37:32.560]  кст но такой лас веговский лас веговсовский алгоритм шана может не повести почему
[07:37:32.560 --> 07:37:40.840]  сейчас почему почему почему не понял не понял не понял почему лог в клубе
[07:37:40.840 --> 07:38:00.640]  погоди где-то видел бинарное возведение матрицы степень нет если вы за все фиг той задачи то как
[07:38:00.640 --> 07:38:07.120]  бы извинять мы сначала нашли 3 матрицы каждую мы нашли за м за м от налога и в 3 раза мы
[07:38:07.120 --> 07:38:16.400]  теперь просто ищем свидетелей перемножения были воперемножение вот мы это делаем
[07:38:16.400 --> 07:38:24.680]  но вот эти расстояния мы еще логарифом раз пересчитываем да но я просто логку бы не
[07:38:24.680 --> 07:38:35.960]  вижу лог квадрат вижу но да отдельно нет там на высоте там не нужно искать это не делать это
[07:38:35.960 --> 07:38:43.640]  логарифом там не нужно на каждой глубине рекурсии этих свидетелей находить вот вообще не нужно не
[07:38:43.640 --> 07:38:55.480]  нужно расстояние матрицы д вот по модула по модула по модулям 3 тройки мы это зачем делали для
[07:38:55.480 --> 07:39:00.720]  того чтобы свести эту задачу к трем задачам ровно трем задачам о поиске свидетелей
[07:39:00.720 --> 07:39:17.200]  и что но мы это делаем абсолютно без всяких вероятностных алгоритмов абсолютно без всяких
[07:39:17.200 --> 07:39:22.680]  свидетелей с помощью там одного перемножения если не буду повторять лекцию но там было так
[07:39:22.680 --> 07:39:29.840]  там по матрице а и по матрице д штрих прекрасно восстанавливалась д с помощью одного перемножения
[07:39:29.840 --> 07:39:39.800]  чтобы восстанавливать сам путь сама матрица д просто скажет что там расстояние между
[07:39:40.400 --> 07:39:56.360]  42 а куда идти непонятно то есть если точка получается да то есть об этом налог квадрат
[07:39:56.360 --> 07:40:09.120]  тот да но да поиск свидетелей да
[07:40:09.800 --> 07:40:16.760]  но на самом деле давайте кратенько на самом деле тут есть такая последняя бонусная главка то есть
[07:40:16.760 --> 07:40:21.640]  главка заключается в том что на самом деле как бы алгоритм можно улучшить там перемножать чуть
[07:40:21.640 --> 07:40:25.400]  поменьше значит фишка такая
[07:40:33.520 --> 07:40:34.360]  значит сейчас
[07:40:34.360 --> 07:40:54.680]  вот но на самом деле просто есть сейчас значит
[07:40:54.680 --> 07:41:10.880]  там просто да была была дополнительная фишка но просто теперь мы просто попытаемся воспользоваться
[07:41:10.880 --> 07:41:16.760]  тем что когда мы если мы тут какие-то строчки занулили то в принципе можно на самом деле там
[07:41:16.760 --> 07:41:21.840]  точка где-то вот здесь занулили то можно попытаться оптимизировать само умножение
[07:41:22.320 --> 07:41:30.520]  матрицы потому что в принципе заметим что потому что если вы занулили какие-то строчки то в принципе
[07:41:30.520 --> 07:41:41.680]  ну хотя ладно мы за правду ладно мы здесь вы здесь правда занулили не строчки мы здесь
[07:41:41.680 --> 07:41:49.040]  занулили столбцы в принципе это в принципе если мы столбцы занулили то можно заметить что там
[07:41:49.040 --> 07:41:54.120]  какие-то строчки из тех из той матрицы то есть из второй матрицы который мы домножаем тоже
[07:41:54.120 --> 07:42:03.800]  можно выкинуть нет ну давайте ты ну где-то в каких-то эрках это может и помочь просто по
[07:42:03.800 --> 07:42:16.920]  факту мы переножаем там что-то типа матрицу то есть мы переножаем матрицу там нет почему мы
[07:42:17.680 --> 07:42:31.200]  мы не занулили мы не мы не занулили всего р столбцов да почему не важно ну то есть мы
[07:42:31.200 --> 07:42:37.040]  переножаем матрицу n на р на матрицу р на р р на н по сути если мы выкинем все лишние столбцы и
[07:42:37.040 --> 07:42:55.440]  строки ну по сути да вот ну да ну вот ну давайте подумаем матрицу n там то есть вот так то есть
[07:42:55.440 --> 07:43:05.160]  n на r и r на n теперь возникает вопрос ну во первых но давайте подумаем да за какой симпатикой можно
[07:43:05.160 --> 07:43:14.760]  было бы вообще такие матрицы переножить ну может быть можно и там их распилить то под матрицы как-то
[07:43:14.760 --> 07:43:25.960]  правильно запустить этот черный ящик а потом сложить ну просто они поставил бы смотреть фишка
[07:43:25.960 --> 07:43:32.120]  такая то есть то есть на самом деле вы переножаете матрицу вот такого вида где вот каждая таблетка
[07:43:32.960 --> 07:43:43.480]  на матрицу вот такого вида нет это работает за r квадрат на m от n делить на
[07:43:43.480 --> 07:43:54.640]  р в шах квадрат раз мы просто переножаем матрицу там р на р значит в чем значит чем нам это помогает
[07:43:54.640 --> 07:44:02.760]  а вот такой вопрос а мы можем наоборот у этих матриц сложить одну большую то есть
[07:44:02.760 --> 07:44:12.320]  сложить вместе n на 1 в смысле до n на 1 может может я просто уже бегу поэтому сейчас не успеваю
[07:44:12.320 --> 07:44:19.800]  значит смотрите значит тут проблема такая смотрите нет то смотрите давайте то есть
[07:44:19.800 --> 07:44:24.960]  мы первое заметим что каждую фазу который мы казали то есть каждую фазу то есть когда когда
[07:44:24.960 --> 07:44:32.600]  мы прибираемся по r вот этим вот да то мы теперь каждую фазу делаем на за что то есть сумму получается
[07:44:32.600 --> 07:44:44.280]  значит р равно то есть это получается равно чему там м от н плюс сколько там получается так то есть
[07:44:44.280 --> 07:44:56.560]  там но плюс два в квадрате на м от н пополам но вот плюс что там дальше плюс два в четвертой на
[07:44:56.560 --> 07:45:07.040]  м от н делить на квадрате но вот плюс там f шестой на м на н делить на f кубе плюс и так далее
[07:45:07.040 --> 07:45:21.520]  ну на что-то квадрат поэтому 2 в 2 в 3 но вот да да да да да да да да да хорошо двойка двойка все
[07:45:21.520 --> 07:45:29.840]  все все нет просто тут фишка такая утверждает следующее да тут два тоже два тоже два хорошо
[07:45:29.840 --> 07:45:36.920]  теперь просто фишка такая что если м это она то есть утверждение такое что если м называется
[07:45:37.280 --> 07:45:45.440]  равно допустим тета от n в степени 2 плюс какой-то все-таки эпсилон то тогда я утверждаю следующее то
[07:45:45.440 --> 07:45:50.800]  тогда просто идея будет в том что у нас тут сумма получается такая то есть получается n в степени 2
[07:45:50.800 --> 07:45:59.960]  плюс эпсилон плюс значит 2 там нет не n степени 2 плюс эпсилон сколько там получается а ну да то
[07:45:59.960 --> 07:46:08.280]  есть n в степени 2 плюс эпсилон плюс 2 в квадрате на значит значит на получается сколько там
[07:46:08.280 --> 07:46:18.080]  получается n степени 2 плюс эпсилон делить на 2 в степени 2 плюс эпсилон да вот плюс 2 в четвертой
[07:46:18.080 --> 07:46:29.480]  на n степени 2 плюс эпсилон делить на там 2 в степени 2 на 2 плюс эпсилон вот ну и так далее
[07:46:29.960 --> 07:46:39.720]  ну короче говоря там то есть вот это будет равно то есть n 2 плюсoks重要 1 plus один
[07:46:39.720 --> 07:46:44.920]  делить на два в степени эпсилон плюс один делить на два в степени 2 эпсилон плюс Ruth
[07:46:44.920 --> 07:46:54.120]  на 2 степени 3 эпсилон плюс и так далее это равно получается это от n в степени 2 плюс
[07:46:54.120 --> 07:46:59.120]  то есть получается что если м окажется м все-таки достаточно большое то есть мы
[07:46:59.120 --> 07:47:02.560]  передражаем матрицы за все-таки достаточно много то на самом деле никаких
[07:47:02.560 --> 07:47:06.920]  лог квадратов нет там вполне себе логариф то есть если мы конечно научимся
[07:47:06.920 --> 07:47:10.960]  преодолеть матрицы быстрее чем завод столько там скажем за н квадрат лог
[07:47:10.960 --> 07:47:16.520]  n там например вот это все да то конечно лог квадрат вылезет но до этого момента
[07:47:16.520 --> 07:47:20.920]  а симпатически все нормально
[07:47:20.920 --> 07:47:26.260]  вот да но мужин да мы уже к сожалению до рамки курса не позволяет вам этому
[07:47:26.260 --> 07:47:35.560]  научиться был бы конечно кайф но вы все так все на этом все я бегу
