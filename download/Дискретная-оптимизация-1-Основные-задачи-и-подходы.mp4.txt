[00:00.000 --> 00:06.600]  ...
[00:07.360 --> 00:11.620]  Дальше мы kaikимeso...
[00:18.860 --> 00:24.820]  Самый pain equator чем composting?
[00:24.820 --> 00:30.820]  И для альбертикных вопросов это лучше, чем электронная почта.
[00:30.820 --> 00:36.820]  Ну, все сказал, все организационное основное сказал.
[00:36.820 --> 00:44.820]  Нам нужно будет определиться, наверное, почтное на этот курс
[00:44.820 --> 00:47.820]  проводить мы не онлайн, но пока кажется, что нам этот курс
[00:47.820 --> 00:49.820]  нужно проводить будет очень-очень.
[00:49.820 --> 00:53.820]  Я, конечно, ничего против не имею, потому что все равно
[00:53.820 --> 00:56.820]  на четверг весь день такой очень супер.
[00:56.820 --> 00:57.820]  Мы только же.
[00:57.820 --> 00:58.820]  Почти самая лучшая.
[00:58.820 --> 01:03.820]  Но поскольку курс записывается, то если кто-то из вас,
[01:03.820 --> 01:06.820]  например, посещает какой-то другой эквадративный курс,
[01:06.820 --> 01:10.820]  очень на этом не может присутствовать, то проблем нет.
[01:10.820 --> 01:14.820]  То есть никаких фанбальных требований, что на лекциях
[01:14.820 --> 01:16.820]  может быть контрольный или еще что-то такое.
[01:16.820 --> 01:18.820]  Да, ни в коем случае у нас такого нет.
[01:18.820 --> 01:21.820]  Вы можете смотреть курс записи.
[01:21.820 --> 01:25.820]  Значит, курс засчитывает по заданию.
[01:25.820 --> 01:29.820]  Давайте я теперь расскажу про что курс, да, и тогда будет понятно,
[01:29.820 --> 01:31.820]  про что задание и какого вообще типа.
[01:31.820 --> 01:36.820]  Я думаю, что многие из присутствующих, они выйдут на вечернюю встречу
[01:36.820 --> 01:38.820]  в зоне, которую я проводил.
[01:38.820 --> 01:39.820]  Но не все.
[01:39.820 --> 01:40.820]  Вряд ли все, конечно.
[01:40.820 --> 01:43.820]  Да, и вряд ли те, кто не будет успел посмотреть
[01:43.820 --> 01:45.820]  этот эквадративный запись.
[01:45.820 --> 01:48.820]  Поэтому о чем вообще есть цепление дискретной оптимизации?
[01:48.820 --> 01:51.820]  А, да, давайте я вот здесь еще напишу название курса.
[01:51.820 --> 01:54.820]  Так, потому что важно знать, как зовут ветра,
[01:54.820 --> 01:56.820]  каково цвет лечебника.
[01:56.820 --> 01:59.820]  Ну, лечебника нет, поэтому даже не надо знать, каково цвет лечебника.
[01:59.820 --> 02:01.820]  И важно знать, как называется дискретность.
[02:01.820 --> 02:03.820]  Она называется вот так.
[02:03.820 --> 02:07.820]  Дискретная.
[02:07.820 --> 02:10.820]  Вы можете, значит, пока что еще нечего смеяться.
[02:10.820 --> 02:13.820]  Дискретная оптимизация Я.
[02:17.820 --> 02:19.820]  Я бы сам изменял это с удовольствием,
[02:19.820 --> 02:22.820]  но почему-то столько студентов называют
[02:22.820 --> 02:25.820]  многие дискретные оптимизации И.
[02:25.820 --> 02:28.820]  Я не знаю, что там мы оптимизируем,
[02:28.820 --> 02:32.820]  какие многочисленные оптимизации мы применяем,
[02:32.820 --> 02:35.820]  но вообще математическая дисциплина называется дискретная оптимизация.
[02:35.820 --> 02:39.820]  Точно так же, как и не иная алгебра, не алгебры.
[02:39.820 --> 02:41.820]  Точно так же, в единственном числе.
[02:41.820 --> 02:43.820]  Или теория вероятности.
[02:46.820 --> 02:48.820]  Вот, может быть, методы, да.
[02:51.820 --> 02:53.820]  Это уже другое дело.
[02:53.820 --> 02:55.820]  Это дисциплина, она едина.
[02:55.820 --> 02:57.820]  А я вам, кстати, правильно сейчас хотел сказать.
[02:57.820 --> 02:59.820]  Почему дисциплина едина?
[02:59.820 --> 03:03.820]  Почему я считаю, что это надо подкреплять в единственном числе?
[03:03.820 --> 03:07.820]  Дело в том, что мы с вами на протяжении всего курса
[03:07.820 --> 03:12.820]  рассматриваем разные задачи и разные методы.
[03:12.820 --> 03:14.820]  Да, то есть это действительно на собственном числе.
[03:14.820 --> 03:16.820]  А что же надо делать в дисциплине единой?
[03:16.820 --> 03:18.820]  Откуда вообще все это название иллюмируется,
[03:18.820 --> 03:20.820]  дисциплина и оптимизация?
[03:20.820 --> 03:22.820]  А у вас был курс по обычной оптимизации?
[03:22.820 --> 03:24.820]  Ну, там, типа, был какой-то оптимизации?
[03:24.820 --> 03:25.820]  Нет.
[03:25.820 --> 03:26.820]  Не был?
[03:26.820 --> 03:27.820]  Да.
[03:27.820 --> 03:30.820]  Вот, значит, есть такая классическая дисциплина просто.
[03:30.820 --> 03:32.820]  Оптимизация, да?
[03:32.820 --> 03:34.820]  Ну, вот, классическая оптимизация.
[03:34.820 --> 03:36.820]  Что это такое?
[03:36.820 --> 03:38.820]  У вас какая-нибудь функция f?
[03:38.820 --> 03:39.820]  Упс.
[03:39.820 --> 03:41.820]  Попробуй стесняться.
[03:41.820 --> 03:45.820]  Есть у вас функция f от x и y.
[03:45.820 --> 03:47.820]  Ну, например, какая такая?
[03:47.820 --> 03:53.820]  x и y, плюс или седьмой.
[03:53.820 --> 03:55.820]  Вот это же можно записывать.
[03:55.820 --> 03:57.820]  Значит, нет.
[03:57.820 --> 03:59.820]  А есть такая задача?
[03:59.820 --> 04:02.820]  Найти минимум этой функции.
[04:02.820 --> 04:03.820]  Ну, приходите.
[04:03.820 --> 04:05.820]  Так, как говорили, например,
[04:05.820 --> 04:08.820]  пирик, меняющийся, минус тысяча,
[04:08.820 --> 04:10.820]  футбол тысяча,
[04:10.820 --> 04:12.820]  там, пирик,
[04:12.820 --> 04:14.820]  производник,
[04:14.820 --> 04:16.820]  дисциплина лежит вверх.
[04:16.820 --> 04:18.820]  Вот. Найти минимум этой функции.
[04:18.820 --> 04:20.820]  Вот.
[04:20.820 --> 04:22.820]  Стандартная задача оптимизации вообще,
[04:22.820 --> 04:24.820]  всей математической теории оптимизации.
[04:24.820 --> 04:27.820]  Когда какую-то функцию требуется
[04:27.820 --> 04:29.820]  патриотизировать или патриотизировать
[04:29.820 --> 04:32.820]  при каких-то ограничениях на периметры.
[04:32.820 --> 04:34.820]  Это супер, супер.
[04:34.820 --> 04:36.820]  Это просто нужная дисциплина,
[04:36.820 --> 04:38.820]  потому что все машинное обучение, например,
[04:38.820 --> 04:40.820]  это статистика, плюс оптимизация.
[04:40.820 --> 04:42.820]  То есть мы с вами, например, в машинном обучении,
[04:42.820 --> 04:44.820]  вот есть у нас набор точек,
[04:44.820 --> 04:47.820]  да, на плоскости, x и y.
[04:47.820 --> 04:49.820]  Значит, есть набор точек.
[04:49.820 --> 04:51.820]  И мы видим, что эти точки
[04:51.820 --> 04:53.820]  на самом деле примерно,
[04:53.820 --> 04:55.820]  ну, с учетом какого-то шума,
[04:55.820 --> 04:57.820]  значит, они не просто
[04:57.820 --> 04:59.820]  абсолютно рандомно расположены,
[04:59.820 --> 05:01.820]  а есть какая-то зависимость,
[05:01.820 --> 05:03.820]  ну, приблизительная, например.
[05:03.820 --> 05:05.820]  Примерно равняется
[05:05.820 --> 05:08.820]  а из пустотка, линейная зависимость.
[05:08.820 --> 05:10.820]  И тогда мы пытаемся эти точки
[05:10.820 --> 05:12.820]  выложить на стримную возможность.
[05:12.820 --> 05:14.820]  Это называется линейная рекрессия.
[05:14.820 --> 05:17.820]  Когда мы видим какую-то линейную зависимость
[05:17.820 --> 05:19.820]  между одной характеристикой,
[05:19.820 --> 05:21.820]  ну, например, вероятностью
[05:21.820 --> 05:23.820]  какого-то риска заболевания,
[05:23.820 --> 05:25.820]  человека диабетом, например,
[05:25.820 --> 05:27.820]  от его веса, например.
[05:27.820 --> 05:29.820]  Я верю, что чем выше вес, тем выше
[05:29.820 --> 05:31.820]  риск заболевания диабета.
[05:31.820 --> 05:33.820]  И чем человек больше заболевает,
[05:33.820 --> 05:35.820]  тем больше мы можем дать кредит
[05:35.820 --> 05:37.820]  в банке.
[05:37.820 --> 05:39.820]  Вот есть такая линейная зависимость.
[05:39.820 --> 05:41.820]  И как решается задача машинного обучения,
[05:41.820 --> 05:43.820]  берем какая-то модель,
[05:43.820 --> 05:45.820]  например, такая.
[05:45.820 --> 05:47.820]  И дальше мы смотрим,
[05:47.820 --> 05:49.820]  значит, какие отклонения
[05:49.820 --> 05:51.820]  в реальных значениях
[05:51.820 --> 05:53.820]  вот те, которые предсказала
[05:53.820 --> 05:55.820]  нам эта модель.
[05:55.820 --> 05:57.820]  То есть, ну, фактически расстояние
[05:57.820 --> 05:59.820]  от этих точек в этой прямой.
[05:59.820 --> 06:01.820]  Вот параметры нашей модели так, чтобы
[06:01.820 --> 06:03.820]  она наибольшим образом
[06:03.820 --> 06:05.820]  инвестировала в себя эти даты.
[06:05.820 --> 06:07.820]  А к чему это приводит?
[06:07.820 --> 06:09.820]  Потому что мы
[06:09.820 --> 06:11.820]  в приказных значениях A и B
[06:11.820 --> 06:13.820]  имеем какие-то потери, как говорят,
[06:13.820 --> 06:15.820]  отклонения наших предсказаний
[06:15.820 --> 06:17.820]  от реальности.
[06:17.820 --> 06:19.820]  И можно представить себе такую функцию,
[06:19.820 --> 06:21.820]  которая называется «кустный патерий».
[06:21.820 --> 06:23.820]  В данном случае это параметры модели.
[06:23.820 --> 06:25.820]  Не все машинное обучение,
[06:25.820 --> 06:27.820]  а вообще все машины,
[06:27.820 --> 06:29.820]  включай не ровные сети,
[06:29.820 --> 06:31.820]  глубокое обучение, и Бог знает что.
[06:31.820 --> 06:33.820]  Оно базируется на том, что вам нужно
[06:33.820 --> 06:35.820]  проявленизировать ваши потери.
[06:35.820 --> 06:37.820]  Вам нужно чтобы
[06:37.820 --> 06:39.820]  подобрать такие параметры,
[06:39.820 --> 06:41.820]  чтобы ваше отклонение
[06:41.820 --> 06:43.820]  желаемого, действительно
[06:43.820 --> 06:45.820]  того, что ваша модель предсказывает,
[06:45.820 --> 06:47.820]  было минимальным.
[06:47.820 --> 06:49.820]  Поэтому задача минимизации какой-то функции
[06:49.820 --> 06:51.820]  это то, что еще машинное обучение
[06:51.820 --> 06:53.820]  вообще не должно исправиться.
[06:53.820 --> 06:55.820]  И часто есть
[06:55.820 --> 06:57.820]  пафос в новом алгоритме машинного обучения
[06:57.820 --> 06:59.820]  не только в том, что
[06:59.820 --> 07:01.820]  это круто описано алгоритмом,
[07:01.820 --> 07:03.820]  что он какой-то выглядит
[07:03.820 --> 07:05.820]  очень интуитивно и классно,
[07:05.820 --> 07:07.820]  и мощно, но и в том, что
[07:07.820 --> 07:09.820]  будет плохая функция потери,
[07:09.820 --> 07:11.820]  была легко оптимизирована.
[07:11.820 --> 07:13.820]  И если функция потери какая-то супер кривая
[07:13.820 --> 07:15.820]  и ее супер плохо оптимизировать,
[07:15.820 --> 07:17.820]  то это плохой алгоритм машинного обучения.
[07:26.820 --> 07:29.820]  Формально абсолютно такая же задача.
[07:29.820 --> 07:32.820]  Это минимизация некоторой функции
[07:32.820 --> 07:34.820]  при некоторых привлечениях
[07:34.820 --> 07:36.820]  на того, что мы можем
[07:36.820 --> 07:38.820]  эту функцию подставлять.
[07:42.820 --> 07:44.820]  Ну а в чем же тогда отличие
[07:44.820 --> 07:46.820]  классической оптимизации в диске?
[07:46.820 --> 07:48.820]  Вот классическая оптимизация, она как раз про функции,
[07:48.820 --> 07:50.820]  которые можно вот так вот записать
[07:50.820 --> 07:52.820]  с суммами
[07:52.820 --> 07:54.820]  каких-нибудь элементарных функций,
[07:54.820 --> 07:56.820]  электрических, полиномов, еще чуть-чуть.
[07:56.820 --> 07:58.820]  И самое важное,
[07:58.820 --> 08:00.820]  что в классической оптимизации есть
[08:00.820 --> 08:02.820]  то, что переменная, и как правило,
[08:02.820 --> 08:04.820]  в нашей функции, действительная.
[08:04.820 --> 08:06.820]  А когда переменная объяснительная,
[08:06.820 --> 08:08.820]  это значит, мы можем взять
[08:08.820 --> 08:10.820]  и рассмотреть рядом
[08:10.820 --> 08:12.820]  с нашим значением переменной
[08:12.820 --> 08:14.820]  какое-то плюс-минус-эпсилонное значение,
[08:14.820 --> 08:16.820]  или по-другому говоря,
[08:16.820 --> 08:18.820]  производную функцию посмотреть, как она направлена.
[08:18.820 --> 08:20.820]  И в зависимости от того,
[08:20.820 --> 08:22.820]  как производная у нас ведет себя
[08:22.820 --> 08:24.820]  в точке, мы понимаем, что нам
[08:24.820 --> 08:26.820]  нужно, например, сместиться чуть левее,
[08:26.820 --> 08:28.820]  потому что здесь мы немножко уменьшим
[08:28.820 --> 08:30.820]  значение нашей функции,
[08:30.820 --> 08:32.820]  а потом еще сместиться, а потом еще сместиться,
[08:32.820 --> 08:34.820]  пока мы не попадем в локальный минимум,
[08:34.820 --> 08:36.820]  в котором производная уже равна нулю,
[08:36.820 --> 08:38.820]  и из него никуда не двинешься,
[08:38.820 --> 08:40.820]  так чтобы чуть-чуть сдвинуться,
[08:40.820 --> 08:42.820]  и чуть-чуть улучшить значение функции.
[08:42.820 --> 08:44.820]  Ну и не удивительно вообще,
[08:44.820 --> 08:46.820]  что на вот таких методах градиентного спуска
[08:46.820 --> 08:48.820]  базируется практически вся
[08:48.820 --> 08:50.820]  прикладная оптимизация.
[08:50.820 --> 08:52.820]  Там разница в деталях обычно.
[08:52.820 --> 08:54.820]  В дискретной оптимизации
[08:54.820 --> 08:56.820]  принципиально отсутствует
[08:56.820 --> 08:58.820]  такая возможность.
[08:58.820 --> 09:00.820]  Какие примеры
[09:00.820 --> 09:02.820]  задач дискретной оптимизации я мог бы привести?
[09:02.820 --> 09:04.820]  Ну, любые задачи
[09:04.820 --> 09:06.820]  на графах почти.
[09:06.820 --> 09:08.820]  Задача о кратчайшем пути.
[09:08.820 --> 09:10.820]  А у вас же был курс алгоритмов, да, какой-то?
[09:10.820 --> 09:12.820]  А, ну вот, вы тогда уже кучу задач
[09:12.820 --> 09:14.820]  знаете из дискретной оптимизации.
[09:14.820 --> 09:16.820]  Например, задача о кратчайшем пути.
[09:16.820 --> 09:18.820]  Хорошо.
[09:18.820 --> 09:20.820]  А у вас была там задача
[09:20.820 --> 09:22.820]  о кратчайшем островном дереве?
[09:22.820 --> 09:24.820]  О, супер.
[09:24.820 --> 09:26.820]  Задача...
[09:26.820 --> 09:28.820]  Сейчас напомню все, да.
[09:28.820 --> 09:30.820]  Значит, задача о кратчайшем пути,
[09:30.820 --> 09:32.820]  задача о том, чтобы в заданном графе
[09:32.820 --> 09:34.820]  между двумя вершинами
[09:34.820 --> 09:36.820]  У и В
[09:36.820 --> 09:38.820]  выбрать самый дешевый маршрут,
[09:38.820 --> 09:40.820]  чтобы пройти из УВ.
[09:40.820 --> 09:42.820]  Задача о кратчайшем островном дереве
[09:42.820 --> 09:44.820]  или минимальном островном дереве,
[09:44.820 --> 09:46.820]  minimal spanning tree.
[09:46.820 --> 09:48.820]  Она про то, чтобы соединить вершины графа
[09:48.820 --> 09:50.820]  все
[09:50.820 --> 09:52.820]  под графом.
[09:52.820 --> 09:54.820]  А связанный под графом дерево,
[09:54.820 --> 09:56.820]  наиболее экономный,
[09:56.820 --> 09:58.820]  которое ничего лишнего не содержит.
[09:58.820 --> 10:00.820]  Найти такое островное дерево,
[10:00.820 --> 10:02.820]  которое содержит все вершины графа
[10:02.820 --> 10:04.820]  в себе и при этом тоже самое,
[10:04.820 --> 10:06.820]  имеет минимальный вес.
[10:06.820 --> 10:08.820]  Да, минимальный вес.
[10:08.820 --> 10:10.820]  Посмотрите-ка, тоже ведь
[10:10.820 --> 10:12.820]  можно формально сказать,
[10:12.820 --> 10:14.820]  что мы имеем дело с минимизацией функции.
[10:14.820 --> 10:16.820]  Только вот вопрос, что у этой функции
[10:16.820 --> 10:18.820]  является параметром.
[10:18.820 --> 10:20.820]  Ну, например, задача о кратчайшем пути.
[10:20.820 --> 10:22.820]  Мы могли бы сформулировать так.
[10:22.820 --> 10:24.820]  Минимизировать стоимость.
[10:24.820 --> 10:26.820]  Ну, функция стоимости
[10:26.820 --> 10:28.820]  или верха, она часто очень обозначается вот так.
[10:34.820 --> 10:36.820]  По-английски путь.
[10:36.820 --> 10:38.820]  Где в качестве путей
[10:38.820 --> 10:40.820]  мы рассматриваем только пути, соединяющие
[10:40.820 --> 10:42.820]  две фиксированные вершины.
[10:42.820 --> 10:44.820]  Я не знаю, как очень формально записать.
[10:44.820 --> 10:46.820]  Запишу это вот так.
[10:46.820 --> 10:48.820]  П – это путь между У и В.
[10:50.820 --> 10:52.820]  У нас тоже есть некое множество объектов
[10:52.820 --> 10:54.820]  ограниченное.
[10:54.820 --> 10:56.820]  Вот как-то, чтобы мы рассматриваем
[10:56.820 --> 10:58.820]  только такие объекты, только такие пути.
[10:58.820 --> 11:00.820]  И мы на этом множестве выбираем
[11:00.820 --> 11:02.820]  такой объект, на котором
[11:02.820 --> 11:04.820]  некоторые функции лучше всего.
[11:04.820 --> 11:06.820]  То есть эта функция принимает наименьшее значение.
[11:06.820 --> 11:08.820]  Но как бы понятно,
[11:08.820 --> 11:10.820]  что даже
[11:10.820 --> 11:12.820]  учитывая, что вы курс алгоритмов слушали,
[11:12.820 --> 11:14.820]  там у нас
[11:14.820 --> 11:16.820]  мы не говорим о производных каких-то.
[11:16.820 --> 11:18.820]  Там у нас абсолютно какие-то отхог
[11:18.820 --> 11:20.820]  такие процедуры.
[11:20.820 --> 11:22.820]  Делай так, делай так, делай так.
[11:22.820 --> 11:24.820]  Но мы доказываем их корректность, естественно.
[11:24.820 --> 11:26.820]  Но для каждой задачи придумываем что-то более-менее свое.
[11:26.820 --> 11:28.820]  И находим точное решение этой задачи.
[11:28.820 --> 11:30.820]  У нас там нет никакой возможности
[11:30.820 --> 11:32.820]  взять, например, путь в графе
[11:32.820 --> 11:34.820]  и сказать,
[11:34.820 --> 11:36.820]  а возьму-ка я
[11:36.820 --> 11:38.820]  отклонюсь от этого пути
[11:38.820 --> 11:40.820]  чуть-чуть, немножко отклонюсь.
[11:40.820 --> 11:42.820]  Потому что
[11:42.820 --> 11:44.820]  это нонсенс какой-то. У нас либо есть
[11:44.820 --> 11:46.820]  ребро, либо нет. Что значит плюс-минус?
[11:46.820 --> 11:48.820]  Это ребро плюс-минус что-то.
[11:48.820 --> 11:50.820]  И поэтому
[11:50.820 --> 11:52.820]  методы, основанные на градиенте,
[11:52.820 --> 11:54.820]  на производной, они в дискретной
[11:54.820 --> 11:56.820]  оптимизации в принципе не то,
[11:56.820 --> 11:58.820]  что не работают, они не определены.
[11:58.820 --> 12:00.820]  Не понятно, что такое градиент.
[12:00.820 --> 12:02.820]  И нам
[12:02.820 --> 12:04.820]  приходится придумывать какие-то свои
[12:04.820 --> 12:06.820]  процедуры.
[12:06.820 --> 12:08.820]  Очень часто эти процедуры внешне
[12:08.820 --> 12:10.820]  выглядят как созданные
[12:10.820 --> 12:12.820]  специфично под каждую задачу в отдельности.
[12:12.820 --> 12:14.820]  И вот как дискретная математика,
[12:14.820 --> 12:16.820]  у вас была дискретная математика?
[12:16.820 --> 12:18.820]  Да.
[12:18.820 --> 12:20.820]  Вот она
[12:20.820 --> 12:22.820]  на первый взгляд выглядит как
[12:22.820 --> 12:24.820]  такая неединная
[12:24.820 --> 12:26.820]  какая-то область.
[12:26.820 --> 12:28.820]  На одном семинаре приходим, там
[12:28.820 --> 12:30.820]  мы рассказываем про графы. На другом семинаре,
[12:30.820 --> 12:32.820]  на другой семинар приходим, там у нас комбинаторика.
[12:32.820 --> 12:34.820]  На третий семинар приходим, там у нас кинуть
[12:34.820 --> 12:36.820]  булевские функции.
[12:36.820 --> 12:38.820]  На четвертом семинаре еще что-то.
[12:38.820 --> 12:40.820]  Но в какой-то момент
[12:40.820 --> 12:42.820]  этот багаж начинает
[12:42.820 --> 12:44.820]  как-то взаимно проникать
[12:44.820 --> 12:46.820]  и
[12:46.820 --> 12:48.820]  на самом деле
[12:48.820 --> 12:50.820]  становится единым. И если вы
[12:50.820 --> 12:52.820]  смотрите исследовательские работы уже,
[12:52.820 --> 12:54.820]  то там постоянно
[12:54.820 --> 12:56.820]  исследуем графы, об них возникают булевские функции.
[12:56.820 --> 12:58.820]  Или наоборот.
[12:58.820 --> 13:00.820]  Исследуем булевские функции, а по сути исследуем
[13:00.820 --> 13:02.820]  графы Булева Куба.
[13:02.820 --> 13:04.820]  В общем, короче говоря, там единство у нас
[13:04.820 --> 13:06.820]  возникает. Просто оно очень часто возникает
[13:06.820 --> 13:08.820]  на уровне,
[13:08.820 --> 13:10.820]  который находится чуть-чуть на шаг
[13:10.820 --> 13:12.820]  за обводным курсом
[13:12.820 --> 13:14.820]  по дискретной математике.
[13:14.820 --> 13:16.820]  В дискретной оптимизации, на первый взгляд,
[13:16.820 --> 13:18.820]  тоже может показаться, что мы
[13:18.820 --> 13:20.820]  рассматриваем некоторые не связанные
[13:20.820 --> 13:22.820]  между собой задачи.
[13:22.820 --> 13:24.820]  И рассматриваем какие-то ивристики под каждую из этих
[13:24.820 --> 13:26.820]  задач. Но на самом деле
[13:26.820 --> 13:28.820]  мне кажется, что в дискретной оптимизации
[13:28.820 --> 13:30.820]  как раз я смогу раньше показать,
[13:30.820 --> 13:32.820]  что у этих вещей
[13:32.820 --> 13:34.820]  очень много общего.
[13:34.820 --> 13:36.820]  Значит, мы с вами
[13:36.820 --> 13:38.820]  не будем брать задачу о кратчайшем пути
[13:38.820 --> 13:40.820]  и задачу о минимальном ростовном дереве
[13:40.820 --> 13:42.820]  как пример, на которых мы будем какие-то ивристики
[13:42.820 --> 13:44.820]  рассматривать. Почему?
[13:44.820 --> 13:46.820]  Потому что в этих задачах и так все понятно.
[13:46.820 --> 13:48.820]  У нас есть быстрые алгоритмы для их решения.
[13:48.820 --> 13:50.820]  Для задачи
[13:50.820 --> 13:52.820]  о кратчайшем пути есть
[13:52.820 --> 13:54.820]  Dextre, для задачи о минимальном
[13:54.820 --> 13:56.820]  ростовном дереве есть сразу несколько
[13:56.820 --> 13:58.820]  жадного типа алгоритмов, которые корректно
[13:58.820 --> 14:00.820]  работают.
[14:00.820 --> 14:02.820]  Краскол, есть Барубка,
[14:02.820 --> 14:04.820]  есть Прим, я не знаю,
[14:04.820 --> 14:06.820]  какие из этих алгоритмов рассматривали?
[14:06.820 --> 14:08.820]  Все. Вот нам Прим понадобится
[14:08.820 --> 14:10.820]  особенно. Мы будем
[14:10.820 --> 14:12.820]  с вами рассматривать задачки, которые
[14:12.820 --> 14:14.820]  трудно решить.
[14:14.820 --> 14:16.820]  А у вас было понятие НП-трудных задач?
[14:16.820 --> 14:18.820]  Нет?
[14:18.820 --> 14:20.820]  Да, НП-трудных.
[14:22.820 --> 14:24.820]  А, вы будете?
[14:24.820 --> 14:26.820]  НП-трудные, которые
[14:26.820 --> 14:28.820]  скорее всего не решаются за пыльным.
[14:30.820 --> 14:32.820]  Если П,
[14:32.820 --> 14:34.820]  то решаются за пыльным.
[14:36.820 --> 14:38.820]  Мы с вами скорее
[14:38.820 --> 14:40.820]  будем рассматривать задачки,
[14:40.820 --> 14:42.820]  которые трудно
[14:42.820 --> 14:44.820]  решать.
[14:44.820 --> 14:46.820]  Точный ответ в которых
[14:46.820 --> 14:48.820]  никто не знает, как получать
[14:48.820 --> 14:50.820]  быстро на любых входных данных.
[14:54.820 --> 14:56.820]  Вот.
[15:00.820 --> 15:02.820]  Большая часть задач, которые
[15:02.820 --> 15:04.820]  мы будем с вами рассматривать,
[15:04.820 --> 15:06.820]  они принадлежат классу НП-трудных задач.
[15:06.820 --> 15:08.820]  То есть, если вдруг
[15:08.820 --> 15:10.820]  окажется, что какую-то из этих задач
[15:10.820 --> 15:12.820]  научится решать в общем
[15:12.820 --> 15:14.820]  виде за полемиальное время,
[15:14.820 --> 15:16.820]  даже за Н100
[15:16.820 --> 15:18.820]  какой-нибудь,
[15:18.820 --> 15:20.820]  то тогда, скорее всего,
[15:20.820 --> 15:22.820]  и все остальные задачи
[15:22.820 --> 15:24.820]  тоже будут разрешены
[15:24.820 --> 15:26.820]  за полемиальное время.
[15:26.820 --> 15:28.820]  Но поскольку к текущему моменту
[15:28.820 --> 15:30.820]  ни для одной из НП-трудных задач
[15:30.820 --> 15:32.820]  никто еще не смог придумать
[15:32.820 --> 15:34.820]  полемиальных алгоритмов, то очень многие верят,
[15:34.820 --> 15:36.820]  что их и не существует.
[15:36.820 --> 15:38.820]  Раз столько задач и ни для одной из них
[15:38.820 --> 15:40.820]  в течение нескольких лет никто ничего не может придумать,
[15:40.820 --> 15:42.820]  ну, так, это все-таки не одна
[15:42.820 --> 15:44.820]  гипотеза Риммана, да, изолированная,
[15:44.820 --> 15:46.820]  а это там с тысячу,
[15:46.820 --> 15:48.820]  несколько тысяч уже разных задач
[15:48.820 --> 15:50.820]  и ни в одной нет подвижек.
[15:50.820 --> 15:52.820]  Только большая уже уверенность, да, в том, что там
[15:52.820 --> 15:54.820]  что-то не так.
[15:54.820 --> 15:56.820]  Значит,
[15:56.820 --> 15:58.820]  так вот, НП-трудные задачи,
[15:58.820 --> 16:00.820]  какие мы с вами будем рассказывать?
[16:00.820 --> 16:02.820]  Ну, например, вот задача о рюкзаке.
[16:06.820 --> 16:08.820]  Рюкзак.
[16:08.820 --> 16:10.820]  А вы для рюкзака
[16:10.820 --> 16:12.820]  какие алгоритмы знаете?
[16:12.820 --> 16:14.820]  А знаете вообще какие-нибудь?
[16:16.820 --> 16:18.820]  А, вот, отлично, динамическое программирование.
[16:20.820 --> 16:22.820]  Сейчас, сейчас вспомню.
[16:24.820 --> 16:26.820]  Вот, для рюкзака вы
[16:26.820 --> 16:28.820]  рассматривали, скорее всего, действительно
[16:28.820 --> 16:30.820]  алгоритмы динамического программирования.
[16:30.820 --> 16:32.820]  Рюкзак это просто
[16:32.820 --> 16:34.820]  главная иллюстративная задача.
[16:34.820 --> 16:36.820]  Вот, в обводных курсах
[16:36.820 --> 16:38.820]  рассматривают динамику, да, ее листвуют на
[16:38.820 --> 16:40.820]  рюкзаке. Я напоминаю, о чем
[16:40.820 --> 16:42.820]  задача вообще рюкзака.
[16:42.820 --> 16:44.820]  Значит, эта задачка формулируется
[16:44.820 --> 16:46.820]  так. У нас есть набор предметов,
[16:46.820 --> 16:48.820]  у этих предметов известны стоимости
[16:48.820 --> 16:50.820]  и веса.
[16:50.820 --> 16:52.820]  Ну, стоимости, давайте я буквами
[16:52.820 --> 16:54.820]  П обозначу, prices, да, такие
[16:54.820 --> 16:56.820]  ценные, ценные, P1, Pn.
[16:56.820 --> 16:58.820]  Ну, какие-то
[16:58.820 --> 17:00.820]  положительные и действительные числа.
[17:00.820 --> 17:02.820]  И веса.
[17:02.820 --> 17:04.820]  W1,
[17:04.820 --> 17:06.820]  и так далее Wn. А еще у нас есть
[17:06.820 --> 17:08.820]  рюкзак, у которого предельно
[17:08.820 --> 17:10.820]  допустимая вместимость, некая
[17:10.820 --> 17:12.820]  W большая. И нам
[17:12.820 --> 17:14.820]  нужно выбрать под множество предметов,
[17:14.820 --> 17:16.820]  которые мы положим в рюкзак так, чтобы
[17:16.820 --> 17:18.820]  его не перевесить, чтобы он не
[17:18.820 --> 17:20.820]  разорвался.
[17:20.820 --> 17:22.820]  Но чтобы при этом ценность этого рюкзака
[17:22.820 --> 17:24.820]  была наибольшей возможной.
[17:24.820 --> 17:26.820]  Вот, здесь фактически речь идет
[17:26.820 --> 17:28.820]  о выборе
[17:28.820 --> 17:30.820]  некоторого под множество. Мы
[17:30.820 --> 17:32.820]  выбираем такое под множество предметов,
[17:32.820 --> 17:34.820]  под множество индексов от 1 до n.
[17:34.820 --> 17:36.820]  Такое, что
[17:36.820 --> 17:38.820]  сумма весов
[17:38.820 --> 17:40.820]  предметов, попавших
[17:40.820 --> 17:42.820]  в наш рюкзак, не превосходит
[17:42.820 --> 17:44.820]  максимально допустимого
[17:44.820 --> 17:46.820]  веса. И вот при всем при этом
[17:46.820 --> 17:48.820]  мы минимизируем
[17:48.820 --> 17:50.820]  овиноват, не минимизируем,
[17:50.820 --> 17:52.820]  максимизируем.
[17:52.820 --> 17:54.820]  Чтобы про минимизировать, достаточно ничего в рюкзак
[17:54.820 --> 17:56.820]  не класть, целее будет.
[17:56.820 --> 17:58.820]  А вот мы максимизируем
[17:58.820 --> 18:00.820]  сумму стоимости
[18:00.820 --> 18:02.820]  предметов, попавших в рюкзак.
[18:02.820 --> 18:04.820]  Но тоже видно, что
[18:04.820 --> 18:06.820]  это задача оптимизационная.
[18:06.820 --> 18:08.820]  Мы максимизируем, значит, некоторую
[18:08.820 --> 18:10.820]  функцию, которая
[18:10.820 --> 18:12.820]  предельна на под множество, множество
[18:12.820 --> 18:14.820]  от 1 до n. С некоторыми
[18:14.820 --> 18:16.820]  дополнительными ограничениями
[18:16.820 --> 18:18.820]  под множество берутся.
[18:18.820 --> 18:20.820]  Но вы не переживайте, мы не будем каждый раз
[18:20.820 --> 18:22.820]  формулировать в самом общем
[18:22.820 --> 18:24.820]  виде, какую функцию мы
[18:24.820 --> 18:26.820]  максимизируем, минимизируем
[18:26.820 --> 18:28.820]  и на чем именно.
[18:28.820 --> 18:30.820]  Мы о задачах, как правило, будем говорить
[18:30.820 --> 18:32.820]  все-таки в их содержательной, так сказать,
[18:32.820 --> 18:34.820]  исходной реальности, в которой они
[18:34.820 --> 18:36.820]  поставлены. Вот про предметы будем говорить,
[18:36.820 --> 18:38.820]  про то, что мы кладем в рюкзак
[18:38.820 --> 18:40.820]  или не кладем, и так далее.
[18:40.820 --> 18:42.820]  Для этой задачки
[18:42.820 --> 18:44.820]  алгоритм динамического программирования
[18:44.820 --> 18:46.820]  состоит в том, что мы
[18:46.820 --> 18:48.820]  строим такую таблицу
[18:48.820 --> 18:50.820]  и по одному измерению, вы вот
[18:50.820 --> 18:52.820]  этого можете не записывать. Я вам напомню,
[18:52.820 --> 18:54.820]  мы пишем про 1.
[18:54.820 --> 18:56.820]  Давайте, да.
[18:56.820 --> 18:58.820]  Мне просто так
[18:58.820 --> 19:00.820]  не хотелось раньше времени стирать.
[19:00.820 --> 19:02.820]  Хорошо.
[19:10.820 --> 19:12.820]  Вот.
[19:12.820 --> 19:14.820]  Это главное, я это пока оставлю.
[19:14.820 --> 19:16.820]  Значит,
[19:16.820 --> 19:18.820]  так вот динамическое программирование,
[19:18.820 --> 19:20.820]  для этой задачи,
[19:20.820 --> 19:22.820]  это такая табличка,
[19:22.820 --> 19:24.820]  строится,
[19:24.820 --> 19:26.820]  в которой мы говорим, что
[19:26.820 --> 19:28.820]  вот здесь, вот в этой строке мы рассматриваем
[19:28.820 --> 19:30.820]  только под множество из первого предмета.
[19:30.820 --> 19:32.820]  Во второй строке мы рассматриваем
[19:32.820 --> 19:34.820]  только под множество из первых двух
[19:34.820 --> 19:36.820]  предметов и так далее.
[19:36.820 --> 19:38.820]  Пока дойдем до последней строки, нам уже разрешается
[19:38.820 --> 19:40.820]  рассматривать любые под множество
[19:40.820 --> 19:42.820]  из всех предметов.
[19:42.820 --> 19:44.820]  И дальше мы
[19:44.820 --> 19:46.820]  вот здесь, по этому измерению,
[19:46.820 --> 19:48.820]  мы откладываем максимально
[19:48.820 --> 19:50.820]  допустимый вес рюкзака
[19:50.820 --> 19:52.820]  и в табличке пишем
[19:52.820 --> 19:54.820]  в каждой клетку максимальную
[19:54.820 --> 19:56.820]  стоимость рюкзака,
[19:56.820 --> 19:58.820]  которую можно получить
[19:58.820 --> 20:00.820]  вот с таким ограничением на вес
[20:00.820 --> 20:02.820]  и
[20:02.820 --> 20:04.820]  при условии, что можно использовать
[20:04.820 --> 20:06.820]  эти предметы. Или можно
[20:06.820 --> 20:08.820]  по-другому. Можно вот здесь
[20:08.820 --> 20:10.820]  табличку организовать по стоимости,
[20:10.820 --> 20:12.820]  по максимальной
[20:12.820 --> 20:14.820]  стоимости,
[20:14.820 --> 20:16.820]  даже, наверное, по сумме стоимости,
[20:16.820 --> 20:18.820]  по сумме всех стоимости,
[20:18.820 --> 20:20.820]  и в табличку записывать в клетке
[20:20.820 --> 20:22.820]  минимальный вес,
[20:22.820 --> 20:24.820]  который занимает
[20:24.820 --> 20:26.820]  рюкзак, имеющий не менее
[20:26.820 --> 20:28.820]  чем такую стоимость и использующий
[20:28.820 --> 20:30.820]  предметы из этого под множества.
[20:30.820 --> 20:32.820]  Как бы вы не организовывали вот эту табличку,
[20:32.820 --> 20:34.820]  так или иначе, к сожалению, в этой
[20:34.820 --> 20:36.820]  табличке, ну давайте я вот первый вариант
[20:36.820 --> 20:38.820]  с весом
[20:38.820 --> 20:40.820]  напишу. В этой табличке
[20:40.820 --> 20:42.820]  одно из измерений это
[20:42.820 --> 20:44.820]  вот это вот w большое.
[20:44.820 --> 20:46.820]  А почему такой алгоритм не полиномиальный?
[20:46.820 --> 20:48.820]  Ну, потому что полиномиальный алгоритм
[20:48.820 --> 20:50.820]  я думаю, что если у вас еще
[20:50.820 --> 20:52.820]  эта тема не развита
[20:52.820 --> 20:54.820]  в лекциях
[20:54.820 --> 20:56.820]  по другому курсу, то пока что вот про это
[20:56.820 --> 20:58.820]  надо сказать. Полиномиальный алгоритм
[20:58.820 --> 21:00.820]  он полиномиальный по размеру своего входа.
[21:00.820 --> 21:02.820]  И давайте
[21:02.820 --> 21:04.820]  вспомним, как мы числа записываем. Мы же числа
[21:04.820 --> 21:06.820]  записываем в памяти компьютера в
[21:06.820 --> 21:08.820]  двоичной записи. И число w
[21:08.820 --> 21:10.820]  оно будет записано в сколько битов?
[21:10.820 --> 21:12.820]  В логарифм двоичный от w.
[21:12.820 --> 21:14.820]  Получается, что
[21:14.820 --> 21:16.820]  размер входа задачи о рюкзаке
[21:16.820 --> 21:18.820]  это вовсе не сумма вот этих
[21:18.820 --> 21:20.820]  всех чисел, например, а сумма их
[21:20.820 --> 21:22.820]  логарифмов.
[21:22.820 --> 21:24.820]  Само число w
[21:24.820 --> 21:26.820]  относительно не только своего логарифма,
[21:26.820 --> 21:28.820]  но даже относительно суммы всех вот этих
[21:28.820 --> 21:30.820]  логарифмов запросто может оказаться
[21:30.820 --> 21:32.820]  специальным. Поэтому задачи о
[21:32.820 --> 21:34.820]  рюкзаке говорят, что вот это
[21:34.820 --> 21:36.820]  для нее. Это алгоритм
[21:36.820 --> 21:38.820]  псевдополиномиальный.
[21:38.820 --> 21:40.820]  Псевдополиномиальный алгоритм это такой, который
[21:40.820 --> 21:42.820]  имеет полиномиальную оценку не по
[21:42.820 --> 21:44.820]  размеру входа задачи,
[21:44.820 --> 21:46.820]  а по абсолютному размеру чисел,
[21:46.820 --> 21:48.820]  которые участвуют во входе.
[21:48.820 --> 21:50.820]  Ну или можно сказать, если бы мы числа записывали
[21:50.820 --> 21:52.820]  не в двоичной записи, а
[21:52.820 --> 21:54.820]  в унарной записи, унарная
[21:54.820 --> 21:56.820]  запись числа это очень забавная запись, когда
[21:56.820 --> 21:58.820]  число записывается единичками, и этих единичек
[21:58.820 --> 22:00.820]  мы пишем столько, каково число.
[22:00.820 --> 22:02.820]  Вот если бы все числа на входе записывались унарная,
[22:02.820 --> 22:04.820]  то тогда этот алгоритм был бы
[22:04.820 --> 22:06.820]  полиномиальный относительно такой
[22:06.820 --> 22:08.820]  записи входа. Но это довольно
[22:08.820 --> 22:10.820]  сильное предположение.
[22:10.820 --> 22:12.820]  Оказывается, что вот несмотря на существование
[22:12.820 --> 22:14.820]  такого алгоритма, сама задача о рюкзаке
[22:14.820 --> 22:16.820]  является НП трудной. Если бы
[22:16.820 --> 22:18.820]  кто-то для рюкзака предложил алгоритм
[22:18.820 --> 22:20.820]  полноценно полиномиальный, а не просто
[22:20.820 --> 22:22.820]  псевдополиномиальный, то тогда
[22:22.820 --> 22:24.820]  много чего в жизни бы поменялось.
[22:28.820 --> 22:30.820]  Так вот, задача о рюкзаке,
[22:30.820 --> 22:32.820]  оказывается, для нее никто не
[22:32.820 --> 22:34.820]  знает на текущий момент полиномиальных
[22:34.820 --> 22:36.820]  алгоритмов, которые бы точно решали эту задачу.
[22:36.820 --> 22:38.820]  И мы с вами не узнаем.
[22:38.820 --> 22:40.820]  И мы с вами не узнаем.
[22:40.820 --> 22:42.820]  Но мы будем что с вами делать?
[22:42.820 --> 22:44.820]  Ладно, об этом чуть попозже.
[22:44.820 --> 22:46.820]  Перед тем, как
[22:46.820 --> 22:48.820]  обнадеживает нас,
[22:48.820 --> 22:50.820]  что мы, собственно, будем знать,
[22:50.820 --> 22:52.820]  я давайте еще пару задач сформулирую.
[22:52.820 --> 22:54.820]  Задача о рюкзаке
[22:54.820 --> 22:56.820]  есть.
[22:56.820 --> 22:58.820]  Вторая задача на графах.
[22:58.820 --> 23:00.820]  Задача камевоежора,
[23:00.820 --> 23:02.820]  ТСП.
[23:02.820 --> 23:04.820]  Она
[23:04.820 --> 23:06.820]  расшифровывается как traveling
[23:06.820 --> 23:08.820]  salesperson problem. До определенного момента
[23:08.820 --> 23:10.820]  она расшифровывалась как traveling
[23:10.820 --> 23:12.820]  salesman problem, но потом, как вы понимаете,
[23:12.820 --> 23:14.820]  решили, а женщины не могут быть
[23:14.820 --> 23:16.820]  продавцами,
[23:16.820 --> 23:18.820]  камевоежерами.
[23:18.820 --> 23:20.820]  И она сейчас известна
[23:20.820 --> 23:22.820]  под именем traveling salesperson problem.
[23:22.820 --> 23:24.820]  Но, кстати, ничего плохого в этом нет.
[23:24.820 --> 23:26.820]  Главное, что осталось
[23:26.820 --> 23:28.820]  то же самое сокращение,
[23:28.820 --> 23:30.820]  не пришлось
[23:30.820 --> 23:32.820]  все менять.
[23:32.820 --> 23:34.820]  Я эту задачу и называю обычно,
[23:34.820 --> 23:36.820]  ТСП.
[23:36.820 --> 23:38.820]  Кстати говоря, в советских учебниках эта задача,
[23:38.820 --> 23:40.820]  по крайней мере, в одном, который я читал,
[23:40.820 --> 23:42.820]  она фигурировала под именем задачи
[23:42.820 --> 23:44.820]  о разъездном
[23:44.820 --> 23:46.820]  киномеханике.
[23:46.820 --> 23:48.820]  В советское время
[23:48.820 --> 23:50.820]  в сельских
[23:50.820 --> 23:52.820]  селах были клубы, сельские клубы,
[23:52.820 --> 23:54.820]  куда могли приезжать
[23:54.820 --> 23:56.820]  какие-нибудь электрообщества, знания,
[23:56.820 --> 23:58.820]  могли приезжать фильмы
[23:58.820 --> 24:00.820]  показывать. Там был кинопроектор в клубе,
[24:00.820 --> 24:02.820]  можно было из города, мог приехать
[24:02.820 --> 24:04.820]  киномеханик, соответственно, и показать кино.
[24:04.820 --> 24:06.820]  Значит, широким массам.
[24:06.820 --> 24:08.820]  Так вот, задача
[24:08.820 --> 24:10.820]  такая. У нас имеется
[24:10.820 --> 24:12.820]  некий районный центр,
[24:12.820 --> 24:14.820]  райцентр какой-нибудь,
[24:14.820 --> 24:16.820]  и есть
[24:16.820 --> 24:18.820]  села, расположенные
[24:18.820 --> 24:20.820]  в разных точках
[24:20.820 --> 24:22.820]  на карте.
[24:22.820 --> 24:24.820]  Задача состоит в том, чтобы
[24:24.820 --> 24:26.820]  разъездному киномеханику помочь
[24:26.820 --> 24:28.820]  в каждом селе показать
[24:28.820 --> 24:30.820]  по одному разу кино и вернуться
[24:30.820 --> 24:32.820]  к себе в райцентр.
[24:32.820 --> 24:34.820]  Соответственно, в терминах теории графа
[24:34.820 --> 24:36.820]  задача состоит в том, чтобы
[24:36.820 --> 24:38.820]  пройтись
[24:38.820 --> 24:40.820]  по одному разу
[24:40.820 --> 24:42.820]  через каждую вершину графа
[24:42.820 --> 24:44.820]  и вернуться в исходную точку.
[24:44.820 --> 24:46.820]  В терминах теории графов
[24:46.820 --> 24:48.820]  я думаю, что вы знаете, что это называется
[24:48.820 --> 24:50.820]  гамильтоновым циклом.
[24:50.820 --> 24:52.820]  То есть задача ТСП
[24:52.820 --> 24:54.820]  состоит в выборе самого кратчайшего,
[24:54.820 --> 24:56.820]  оптимального, хорошего, дешевого
[24:56.820 --> 24:58.820]  гамильтонового цикла в заданном графе.
[25:00.820 --> 25:02.820]  Чего у нас еще?
[25:02.820 --> 25:04.820]  Какие задачки на графах?
[25:04.820 --> 25:06.820]  Вот задача дерева Штейнера, например, еще есть такая.
[25:12.820 --> 25:14.820]  Задача о дереве Штейнера.
[25:14.820 --> 25:16.820]  Эта задачка состоит в том,
[25:16.820 --> 25:18.820]  чтобы в заданном графе
[25:18.820 --> 25:20.820]  связать
[25:20.820 --> 25:22.820]  но только не все вершины,
[25:22.820 --> 25:24.820]  как это происходит в минимальном оставном дереве,
[25:24.820 --> 25:26.820]  а связать вершины
[25:26.820 --> 25:28.820]  только выбранного какого-то
[25:28.820 --> 25:30.820]  подможества.
[25:30.820 --> 25:32.820]  То есть в заданном графе
[25:32.820 --> 25:34.820]  мы говорим, что нам нужно
[25:34.820 --> 25:36.820]  связать вот между собой.
[25:36.820 --> 25:38.820]  Ну, например, вот эти вот пять вершин.
[25:38.820 --> 25:40.820]  Они для нас очень важны.
[25:40.820 --> 25:42.820]  Между ними должны быть связи.
[25:42.820 --> 25:44.820]  Через промежуточные вершины, возможно.
[25:44.820 --> 25:46.820]  И задача состоит в том,
[25:46.820 --> 25:48.820]  чтобы выбрать в графе подможество
[25:48.820 --> 25:50.820]  ребер такое, чтобы эти
[25:50.820 --> 25:52.820]  вершины вместе
[25:52.820 --> 25:54.820]  связать.
[25:54.820 --> 25:56.820]  Это множество
[25:56.820 --> 25:58.820]  ребер может сильно-сильно
[25:58.820 --> 26:00.820]  отличаться от минимального
[26:00.820 --> 26:02.820]  дерева. И многие вершины могут
[26:02.820 --> 26:04.820]  быть вообще не
[26:04.820 --> 26:06.820]  попавшими в это дерево Штейнера.
[26:06.820 --> 26:08.820]  То есть дерево Штейнер – это
[26:08.820 --> 26:10.820]  задачка, которая решается для графа
[26:10.820 --> 26:12.820]  и для некоторого подможества вершин в этом графе.
[26:12.820 --> 26:14.820]  Вопрос сразу к вам.
[26:14.820 --> 26:16.820]  Понимаете, что задача о
[26:16.820 --> 26:18.820]  минимальном основном дереве является
[26:18.820 --> 26:20.820]  частным случаем задачи о дереве Штейнера?
[26:20.820 --> 26:22.820]  Почему?
[26:22.820 --> 26:24.820]  Да, когда множество
[26:24.820 --> 26:26.820]  так называемых терминальных вершин
[26:26.820 --> 26:28.820]  совпадает с множеством всех вершин.
[26:30.820 --> 26:32.820]  Ну, взвешенный, да.
[26:32.820 --> 26:34.820]  Понимаете,
[26:34.820 --> 26:36.820]  что задача о
[26:36.820 --> 26:38.820]  кратчайшем пути является частным
[26:38.820 --> 26:40.820]  случаем задачи о дереве Штейнера?
[26:40.820 --> 26:42.820]  Ну да.
[26:42.820 --> 26:44.820]  Значит, берем две вершины,
[26:44.820 --> 26:46.820]  терминальное множество вершин, и все.
[26:46.820 --> 26:48.820]  Естественно, что кратчайший способ их
[26:48.820 --> 26:50.820]  связать, вернее, самый дешевый способ
[26:50.820 --> 26:52.820]  их связать – это взять кратчайший путь между ними.
[26:52.820 --> 26:54.820]  Так что вот есть два
[26:54.820 --> 26:56.820]  крайних случая, которые
[26:56.820 --> 26:58.820]  очевидно полинамиально разрешимы
[26:58.820 --> 27:00.820]  у задачи дерева Штейнера. В промежутке
[27:00.820 --> 27:02.820]  не понятно, как решать.
[27:02.820 --> 27:04.820]  Ну, опять-таки, не понятно, как точно решать
[27:04.820 --> 27:06.820]  за полинамиальное время.
[27:06.820 --> 27:08.820]  Ну, помимо
[27:08.820 --> 27:10.820]  вот задач на графах,
[27:10.820 --> 27:12.820]  не знаю, много ли мы тут еще
[27:12.820 --> 27:14.820]  рассмотрим, но еще вот
[27:14.820 --> 27:16.820]  приведу пример задачки, тоже
[27:16.820 --> 27:18.820]  из другой немножко оперы,
[27:18.820 --> 27:20.820]  которую мы в курсе рассматриваем
[27:22.820 --> 27:24.820]  в силу ее простоты, на такой яркости.
[27:24.820 --> 27:26.820]  Задача упаковки контейнера –
[27:26.820 --> 27:28.820]  бинпекинг.
[27:28.820 --> 27:30.820]  В этой задачке дан набор
[27:30.820 --> 27:32.820]  чисел от нуля до единицы.
[27:32.820 --> 27:34.820]  Все числа от нуля
[27:34.820 --> 27:36.820]  до единицы.
[27:38.820 --> 27:40.820]  Здесь вход еще веселее, чем
[27:40.820 --> 27:42.820]  в задаче о рюкзаке.
[27:42.820 --> 27:44.820]  В задаче о рюкзаке у нас хотя бы
[27:44.820 --> 27:46.820]  W большое какое-то, но у нас для каждого
[27:46.820 --> 27:48.820]  предмета хотя бы два числа заданы.
[27:48.820 --> 27:50.820]  А в задаче бинпекинг у нас просто
[27:50.820 --> 27:52.820]  заданное для каждого предмета одно число.
[27:52.820 --> 27:54.820]  Нам требуется упаковать
[27:54.820 --> 27:56.820]  эти предметы в минимальное число контейнеров.
[27:56.820 --> 27:58.820]  То есть раскидать
[27:58.820 --> 28:00.820]  эти предметы по группам
[28:00.820 --> 28:02.820]  так, чтобы внутри каждой группы
[28:02.820 --> 28:04.820]  сумма всех предметов
[28:04.820 --> 28:06.820]  была не больше единицы.
[28:08.820 --> 28:10.820]  Задача
[28:10.820 --> 28:12.820]  прооптимизировать
[28:12.820 --> 28:14.820]  тоже.
[28:14.820 --> 28:16.820]  Минимизировать число
[28:16.820 --> 28:18.820]  контейнеров, в которые можно
[28:18.820 --> 28:20.820]  уместить все эти грузы, так чтобы ни один
[28:20.820 --> 28:22.820]  контейнер не превышался.
[28:22.820 --> 28:24.820]  Актуальная задача,
[28:24.820 --> 28:26.820]  но безусловно актуальная.
[28:26.820 --> 28:28.820]  В общем, мы с вами
[28:28.820 --> 28:30.820]  упакуем
[28:30.820 --> 28:32.820]  на складе какие-то коробки.
[28:32.820 --> 28:34.820]  И вот как мы
[28:34.820 --> 28:36.820]  можем минимальное число коробок
[28:36.820 --> 28:38.820]  упаковок, чтобы все запаковать,
[28:38.820 --> 28:40.820]  что нужен для отправки в одну и ту же сторону.
[28:40.820 --> 28:42.820]  Ну так вот.
[28:42.820 --> 28:44.820]  Все перечисленные задачи
[28:44.820 --> 28:46.820]  это не те задачи, которые мы в курсе
[28:46.820 --> 28:48.820]  будем решать.
[28:48.820 --> 28:50.820]  По ходу дела возникнут еще
[28:50.820 --> 28:52.820]  дополнительные всякие задачи.
[28:52.820 --> 28:54.820]  Это просто примеры, разношерстные задачи,
[28:54.820 --> 28:56.820]  которые в частности
[28:56.820 --> 28:58.820]  нам встретятся.
[28:58.820 --> 29:00.820]  Одну задачу я еще не упомянул, потом упомяну.
[29:00.820 --> 29:02.820]  Это про
[29:02.820 --> 29:04.820]  покрытие.
[29:04.820 --> 29:06.820]  Последняя задача, которую я здесь
[29:06.820 --> 29:08.820]  упомяну,
[29:08.820 --> 29:10.820]  это задачка, которая называется задача
[29:10.820 --> 29:12.820]  о покрытии.
[29:12.820 --> 29:14.820]  Задача о покрытии.
[29:16.820 --> 29:18.820]  Чтобы мы просто примерно, значит,
[29:18.820 --> 29:20.820]  то есть смотрите, у меня цель на самом деле
[29:20.820 --> 29:22.820]  сегодня какая? Описать какого типа задачи
[29:22.820 --> 29:24.820]  мы будем решать.
[29:24.820 --> 29:26.820]  Что мы про них именно будем говорить, с каких
[29:26.820 --> 29:28.820]  сторон мы будем их вот как-то
[29:28.820 --> 29:30.820]  рассматривать.
[29:30.820 --> 29:32.820]  И тогда я смогу перейти на самом деле
[29:32.820 --> 29:34.820]  к тому, как закрывать этот курс.
[29:34.820 --> 29:36.820]  Как ни странно.
[29:36.820 --> 29:38.820]  Увидите, почему.
[29:38.820 --> 29:40.820]  Значит, последняя задачка,
[29:40.820 --> 29:42.820]  задача о покрытии.
[29:42.820 --> 29:44.820]  Задача о покрытии в общем виде
[29:44.820 --> 29:46.820]  может быть сформулирована так.
[29:46.820 --> 29:48.820]  У нас есть
[29:48.820 --> 29:50.820]  значит,
[29:50.820 --> 29:52.820]  у нас есть
[29:52.820 --> 29:54.820]  матрица, которая
[29:54.820 --> 29:56.820]  задает эту задачу о покрытии.
[29:56.820 --> 29:58.820]  И в этой матрице, это матрица
[29:58.820 --> 30:00.820]  из нулей единиц. Ну и там из плюсов
[30:00.820 --> 30:02.820]  и минусов. И мы говорим,
[30:02.820 --> 30:04.820]  что строка матрицы покрывает столбец,
[30:04.820 --> 30:06.820]  если на их пересечении стоит
[30:06.820 --> 30:08.820]  единичка.
[30:08.820 --> 30:10.820]  Задача стоит в том, чтобы покрыть
[30:10.820 --> 30:12.820]  все столбцы, взяв некоторые строки.
[30:12.820 --> 30:14.820]  Не все, но некоторые. То есть нам нужно взять
[30:14.820 --> 30:16.820]  какое-то подмножество строк,
[30:16.820 --> 30:18.820]  вот сказать, что мы только эти три
[30:18.820 --> 30:20.820]  берем, так чтобы в каждом столбце
[30:20.820 --> 30:22.820]  обязательно нашлась единичка
[30:22.820 --> 30:24.820]  на пересечении с хотя бы одной
[30:24.820 --> 30:26.820]  из строк выбранного множества.
[30:26.820 --> 30:28.820]  Все столбцы нам нужно
[30:28.820 --> 30:30.820]  с вами покрыть.
[30:30.820 --> 30:32.820]  На пересечении столбца
[30:32.820 --> 30:34.820]  и строки стоит единица,
[30:34.820 --> 30:36.820]  тогда и только тогда, когда мы
[30:36.820 --> 30:38.820]  условно говорим, что строка покрывает
[30:38.820 --> 30:40.820]  столбец.
[30:40.820 --> 30:42.820]  Нам нужно выбрать только некоторые строки
[30:42.820 --> 30:44.820]  в матрице, как можно меньше их,
[30:44.820 --> 30:46.820]  чтобы покрыть все столбцы. Пример.
[30:46.820 --> 30:48.820]  Ну, например, мы с вами
[30:48.820 --> 30:50.820]  проводим рекламную компанию.
[30:50.820 --> 30:52.820]  И нам нужно охватить некоторую аудиторию.
[30:52.820 --> 30:54.820]  И вот
[30:54.820 --> 30:56.820]  отдельные личности нашей аудитории
[30:56.820 --> 30:58.820]  это вот эти столбцы матрицы.
[30:58.820 --> 31:00.820]  Вася, Петя, Коля,
[31:00.820 --> 31:02.820]  и так далее.
[31:02.820 --> 31:04.820]  И у нас есть некоторые средства, чтобы им
[31:04.820 --> 31:06.820]  показать рекламу. Ну, например, инфлюенсеры
[31:06.820 --> 31:08.820]  в Инстаграме.
[31:08.820 --> 31:10.820]  И мы понимаем, что у каждого инфлюенсера
[31:10.820 --> 31:12.820]  есть своя аудитория. Например, у вот этого
[31:12.820 --> 31:14.820]  инфлюенсера, не знаю,
[31:14.820 --> 31:16.820]  кто там инфлюенсеры,
[31:16.820 --> 31:18.820]  есть...
[31:18.820 --> 31:20.820]  Миша Литвинов.
[31:20.820 --> 31:22.820]  Не знаю, кто это такой, но вот Миша Литвинов.
[31:22.820 --> 31:24.820]  И
[31:24.820 --> 31:26.820]  у них есть соответствующие
[31:26.820 --> 31:28.820]  подписчики.
[31:28.820 --> 31:30.820]  И мы понимаем, что если мы закажем инфлюенсеру
[31:30.820 --> 31:32.820]  рекламу, там какой-то промоушен,
[31:32.820 --> 31:34.820]  то вот эти подписчики,
[31:34.820 --> 31:36.820]  это под множество подписчиков, узнают
[31:36.820 --> 31:38.820]  об этом продукте. Соответственно,
[31:38.820 --> 31:40.820]  у каждого инфлюенсера есть свои запросы
[31:40.820 --> 31:42.820]  на то, сколько он
[31:42.820 --> 31:44.820]  или она хочет за вот
[31:44.820 --> 31:46.820]  это продвижение.
[31:46.820 --> 31:48.820]  И мы хотим, минимизируя свой рекламный
[31:48.820 --> 31:50.820]  бюджет, сделать так, чтобы
[31:50.820 --> 31:52.820]  покрыть всю аудиторию.
[31:52.820 --> 31:54.820]  Ну, это были, естественно, пример такой,
[31:54.820 --> 31:56.820]  то есть условный, потому что вряд ли нам кто-то
[31:56.820 --> 31:58.820]  даст доступ к полной базе того,
[31:58.820 --> 32:00.820]  кто у кого подписчик в Инстаграме.
[32:00.820 --> 32:02.820]  Но почему нет? То есть я
[32:02.820 --> 32:04.820]  вполне верю, что сама социальная сеть
[32:04.820 --> 32:06.820]  внутри себя для алгоритмов
[32:06.820 --> 32:08.820]  планирования рекламы, она может
[32:08.820 --> 32:10.820]  решать какую-то такую задачу.
[32:10.820 --> 32:12.820]  Ну или более такая
[32:12.820 --> 32:14.820]  задача на
[32:14.820 --> 32:16.820]  меньших масштабах.
[32:16.820 --> 32:18.820]  Например, по столбцам у вас какие-нибудь
[32:18.820 --> 32:20.820]  компетенции, которые требуются для
[32:20.820 --> 32:22.820]  изменения какого-то проекта, а по строчкам
[32:22.820 --> 32:24.820]  у вас люди, которые обладают разными
[32:24.820 --> 32:26.820]  компетенциями, вам нужно набрать команду,
[32:26.820 --> 32:28.820]  которая бы способна была выполнить этот
[32:28.820 --> 32:30.820]  проект. Или по
[32:30.820 --> 32:32.820]  столбцам у вас вычислительные задачи,
[32:32.820 --> 32:34.820]  а по строчкам у вас какие-то
[32:34.820 --> 32:36.820]  возможные ресурсы, которые
[32:36.820 --> 32:38.820]  нам необходимы для решения
[32:38.820 --> 32:40.820]  этих задач, или там процессоры, на которых
[32:40.820 --> 32:42.820]  могут выполняться эти задачи.
[32:42.820 --> 32:44.820]  Вам нужно выбрать минимальное число
[32:44.820 --> 32:46.820]  вычислителей для того, чтобы
[32:46.820 --> 32:48.820]  все эти задачи рано или поздно
[32:48.820 --> 32:50.820]  обсчитать. Да, ну условно,
[32:50.820 --> 32:52.820]  там оборудование и задачи,
[32:52.820 --> 32:54.820]  не обязательно компьютеры.
[32:56.820 --> 32:58.820]  Значит, это задача о покрытии,
[32:58.820 --> 33:00.820]  о том, как покрыть ваши
[33:00.820 --> 33:02.820]  необходимости наименьшим
[33:02.820 --> 33:04.820]  количеством ресурсов,
[33:04.820 --> 33:06.820]  затратив наименьшее количество
[33:06.820 --> 33:08.820]  строчек матрицы.
[33:08.820 --> 33:10.820]  Вот это называется общей такой задачей о покрытии.
[33:10.820 --> 33:12.820]  Вообще, заметьте, что
[33:12.820 --> 33:14.820]  в дискретной активизации
[33:14.820 --> 33:16.820]  мы уже видим два таких
[33:16.820 --> 33:18.820]  важных класса задач. Задача упаковки
[33:18.820 --> 33:20.820]  и задача покрытия.
[33:24.820 --> 33:26.820]  Задача о...
[33:26.820 --> 33:28.820]  Ну, помимо задачи об упаковке в контейнеры,
[33:28.820 --> 33:30.820]  задача об упаковке апельсинов в ящик.
[33:30.820 --> 33:32.820]  Вот как бы напихать побольше
[33:32.820 --> 33:34.820]  в ограниченный объем.
[33:34.820 --> 33:36.820]  Это задача об упаковке.
[33:36.820 --> 33:38.820]  А задача о покрытии, это, например,
[33:38.820 --> 33:40.820]  задача о том, как
[33:40.820 --> 33:42.820]  разогреть комнату круглыми.
[33:42.820 --> 33:44.820]  Вот здесь, значит, нам можно,
[33:44.820 --> 33:46.820]  чтобы ковры перекрывались,
[33:46.820 --> 33:48.820]  то есть нам важно, чтобы просто каждая точка
[33:48.820 --> 33:50.820]  комнаты была у нас покрыта.
[33:52.820 --> 33:54.820]  Вот такая иллюстрация, очень
[33:54.820 --> 33:56.820]  общая интуитивная задача
[33:56.820 --> 33:58.820]  о покрытии, любой.
[33:58.820 --> 34:00.820]  Вот иллюстрация задачи об упаковке.
[34:00.820 --> 34:02.820]  Рюкзак, это что за задача в таких терминах?
[34:02.820 --> 34:04.820]  Об упаковке.
[34:04.820 --> 34:06.820]  Мы напихиваем в рюкзак
[34:06.820 --> 34:08.820]  не превосходя его максимально
[34:08.820 --> 34:10.820]  допустимого веса.
[34:10.820 --> 34:12.820]  Задача о
[34:12.820 --> 34:14.820]  дереве штейнера, в каком-то смысле задача
[34:14.820 --> 34:16.820]  о покрытии, потому что нам надо
[34:16.820 --> 34:18.820]  покрыть деревом
[34:18.820 --> 34:20.820]  некоторые вершины, терминальные.
[34:20.820 --> 34:22.820]  Нам нужно обеспечить эти вершины,
[34:22.820 --> 34:24.820]  а остальные как получится.
[34:24.820 --> 34:26.820]  Задача binpacking, задача об упаковке,
[34:26.820 --> 34:28.820]  очевидно, в контейнеры, так и называется.
[34:28.820 --> 34:30.820]  Да, а это покрытие.
[34:32.820 --> 34:34.820]  ТСП.
[34:34.820 --> 34:36.820]  ТСП, непонятно, очень структурно
[34:36.820 --> 34:38.820]  сильное ограничение, что у нас должен быть
[34:38.820 --> 34:40.820]  именно гамильтонов цикл.
[34:40.820 --> 34:42.820]  С одной стороны, это задача
[34:42.820 --> 34:44.820]  о покрытии, потому что это цикл,
[34:44.820 --> 34:46.820]  покрывающий все вершины графа,
[34:46.820 --> 34:48.820]  а с другой стороны, это задача об упаковке,
[34:48.820 --> 34:50.820]  потому что из каждой вершины в цикле торчит
[34:50.820 --> 34:52.820]  не больше и не меньше двух ребер.
[34:52.820 --> 34:54.820]  Это такая задача
[34:54.820 --> 34:56.820]  на стыке и покрытии и упаковки,
[34:56.820 --> 34:58.820]  очень сильно структурно ограниченная.
[34:58.820 --> 35:00.820]  И, кстати говоря,
[35:00.820 --> 35:02.820]  может быть отчасти поэтому задача ТСП,
[35:02.820 --> 35:04.820]  хотя она такая...
[35:04.820 --> 35:06.820]  Кажется, что у нее непосредственных
[35:06.820 --> 35:08.820]  применений может быть поменьше,
[35:08.820 --> 35:10.820]  то есть общая задача о покрытии какой-нибудь.
[35:10.820 --> 35:12.820]  Но она является самой,
[35:12.820 --> 35:14.820]  пожалуй, популярной
[35:14.820 --> 35:16.820]  иллюстративной задачей
[35:16.820 --> 35:18.820]  для того, чтобы обсуждать ивристики
[35:18.820 --> 35:20.820]  решения общих задач
[35:20.820 --> 35:22.820]  дискретной оптимизации.
[35:22.820 --> 35:24.820]  И она исторически тоже довольно древняя,
[35:24.820 --> 35:26.820]  поэтому она так сложилась, что
[35:26.820 --> 35:28.820]  стоит на перепутье много чего,
[35:28.820 --> 35:30.820]  и мы ее часто будем к ней возвращаться
[35:30.820 --> 35:32.820]  как иллюстративная хорошая задача.
[35:32.820 --> 35:34.820]  Так вот, все перечисленные задачи,
[35:34.820 --> 35:36.820]  даже если они сами
[35:36.820 --> 35:38.820]  по себе, может быть, еще не очевидно,
[35:38.820 --> 35:40.820]  что они прям важные,
[35:40.820 --> 35:42.820]  но я думаю, что без труда вы увидите
[35:42.820 --> 35:44.820]  какие-то элементы этих задач
[35:44.820 --> 35:46.820]  в очень многих жизненных постановках,
[35:46.820 --> 35:48.820]  которые реально кажутся, что надо уметь
[35:48.820 --> 35:50.820]  решать на практике.
[35:50.820 --> 35:52.820]  И так и есть.
[35:52.820 --> 35:54.820]  Никто на практике не сталкивается
[35:54.820 --> 35:56.820]  конкретно с задачей камевые жоры,
[35:56.820 --> 35:58.820]  например, или конкретно с задачей
[35:58.820 --> 36:00.820]  бинпекинг, а вот с сочетанием
[36:00.820 --> 36:02.820]  этих требований,
[36:02.820 --> 36:04.820]  сталкиваются
[36:04.820 --> 36:06.820]  и ивристики при этом нормально комбинируются,
[36:06.820 --> 36:08.820]  которые мы с вами будем рассматривать
[36:08.820 --> 36:10.820]  для этих задач. Так что это абсолютно
[36:10.820 --> 36:12.820]  практическая тема.
[36:12.820 --> 36:14.820]  Значит,
[36:14.820 --> 36:16.820]  мы с вами, поскольку эти задачи
[36:16.820 --> 36:18.820]  НП трудные,
[36:18.820 --> 36:20.820]  не можем рассчитывать на то, что вот мы сейчас с вами
[36:20.820 --> 36:22.820]  разберем на лекциях быстрый алгоритм
[36:22.820 --> 36:24.820]  точного решения
[36:24.820 --> 36:26.820]  каждой из этих задач. Конечно, нет.
[36:26.820 --> 36:28.820]  Мы с вами будем к этим задачам
[36:28.820 --> 36:30.820]  подходить с разных сторон.
[36:30.820 --> 36:32.820]  Чем-то придется жертвовать.
[36:32.820 --> 36:34.820]  Чего у нас там нету?
[36:34.820 --> 36:36.820]  Нету полинемиального,
[36:36.820 --> 36:38.820]  точного алгоритма
[36:38.820 --> 36:40.820]  решения задачи в общем случае.
[36:40.820 --> 36:42.820]  У нас есть требования полинемиальности,
[36:42.820 --> 36:44.820]  точность и способность
[36:44.820 --> 36:46.820]  решать задачи для любых входных данных.
[36:46.820 --> 36:48.820]  Но если одновременно
[36:48.820 --> 36:50.820]  невозможно удовлетворить этим трем
[36:50.820 --> 36:52.820]  требованиям, ну или скорее всего невозможно,
[36:52.820 --> 36:54.820]  то значит, каким-то хотя бы одним из них
[36:54.820 --> 36:56.820]  надо будет пожертвовать. И соответственно,
[36:56.820 --> 36:58.820]  у нас возникает в курсе три таких
[36:58.820 --> 37:00.820]  тематики. Первая тематика
[37:00.820 --> 37:02.820]  это тематика неточного решения задачи.
[37:02.820 --> 37:04.820]  Когда мы говорим, мы с вами
[37:04.820 --> 37:06.820]  эту задачу будем решать на любых
[37:06.820 --> 37:08.820]  входных данных, мы ее будем
[37:08.820 --> 37:10.820]  решать быстро, но
[37:10.820 --> 37:12.820]  точное решение получать. Будем получать
[37:12.820 --> 37:14.820]  решение с какой-то погречностью.
[37:14.820 --> 37:16.820]  И тогда мы сегодня проходим к тематику
[37:16.820 --> 37:18.820]  approximation algorithms.
[37:30.820 --> 37:32.820]  Здесь есть вполне свои теоремы.
[37:32.820 --> 37:34.820]  То есть здесь есть конечно иевристики,
[37:34.820 --> 37:36.820]  есть теоремы, которые
[37:36.820 --> 37:38.820]  доказывают действительно, что
[37:38.820 --> 37:40.820]  вот определенная иевристика позволяет
[37:40.820 --> 37:42.820]  вам решить задачку, ну скажем,
[37:42.820 --> 37:44.820]  упаковать рюкзак.
[37:44.820 --> 37:46.820]  Так, чтобы стоимость этого
[37:46.820 --> 37:48.820]  рюкзака была не меньше половины
[37:48.820 --> 37:50.820]  от самой большой оптимальной стоимости.
[37:50.820 --> 37:52.820]  Ну не бог весть что, так может
[37:52.820 --> 37:54.820]  показаться, да, половина.
[37:54.820 --> 37:56.820]  Но это же не значит, что иевристика
[37:56.820 --> 37:58.820]  всегда равна тематике.
[37:58.820 --> 38:00.820]  Это же не значит, что иевристика всегда работает
[38:00.820 --> 38:02.820]  так же плохо, как худший случай,
[38:02.820 --> 38:04.820]  когда рассматривается в доказательстве.
[38:04.820 --> 38:06.820]  Это знаете, как вот, когда мы
[38:06.820 --> 38:08.820]  доказываем сложность алгоритма
[38:08.820 --> 38:10.820]  в курсе алгоритмов, мы доказываем чаще
[38:10.820 --> 38:12.820]  всего, опираясь на худший случай.
[38:12.820 --> 38:14.820]  Максимальное число операций, которое может
[38:14.820 --> 38:16.820]  там у нас случиться.
[38:16.820 --> 38:18.820]  Но на практике же чаще всего
[38:18.820 --> 38:20.820]  бывает получше.
[38:20.820 --> 38:22.820]  И то же самое
[38:22.820 --> 38:24.820]  надо иметь в виду, когда мы
[38:24.820 --> 38:26.820]  про approximation algorithms говорим.
[38:26.820 --> 38:28.820]  Мы будем получать некие оценки качества
[38:28.820 --> 38:30.820]  гарантированные, но алгоритмы
[38:30.820 --> 38:32.820]  на практике будут работать, как правило,
[38:32.820 --> 38:34.820]  гораздо лучше, чем вот эти
[38:34.820 --> 38:36.820]  вот оценки теоретически.
[38:38.820 --> 38:40.820]  Значит, второй вариант,
[38:40.820 --> 38:42.820]  чем мы можем пожертвовать. Мы можем
[38:44.820 --> 38:46.820]  способности решать задачи в общем случае.
[38:46.820 --> 38:48.820]  То есть мы можем как-то
[38:48.820 --> 38:50.820]  пытаться рассматривать
[38:50.820 --> 38:52.820]  сущности, например,
[38:52.820 --> 38:54.820]  решать задачу, ну скажем,
[38:54.820 --> 38:56.820]  об покрытии не для всех
[38:56.820 --> 38:58.820]  возможных матриц, а для матриц
[38:58.820 --> 39:00.820]  с какими-то дополнительными свойствами.
[39:00.820 --> 39:02.820]  Что-то дополнительно требовать про задачу.
[39:02.820 --> 39:04.820]  Здесь можно сказать,
[39:04.820 --> 39:06.820]  что мы рассматриваем
[39:06.820 --> 39:08.820]  релаксации задачи,
[39:08.820 --> 39:10.820]  хотя это не совсем то, наверное,
[39:10.820 --> 39:12.820]  но в общем изменение задачи.
[39:12.820 --> 39:14.820]  Давайте я так напишу. Изменение задачи.
[39:16.820 --> 39:18.820]  Небольшое изменение задачи.
[39:20.820 --> 39:22.820]  Или сужение задачи, например,
[39:22.820 --> 39:24.820]  только какие-то входные данные
[39:24.820 --> 39:26.820]  со специальными ограничениями.
[39:28.820 --> 39:30.820]  Но на самом деле иногда мы будем делать и то, и то.
[39:30.820 --> 39:32.820]  Например, есть общие задачи
[39:32.820 --> 39:34.820]  камевые жоры. Задачи камевые жоры
[39:34.820 --> 39:36.820]  это задача для
[39:36.820 --> 39:38.820]  произвольного графа.
[39:38.820 --> 39:40.820]  Но есть очень важный
[39:40.820 --> 39:42.820]  частный случай задачи камевые жоры,
[39:42.820 --> 39:44.820]  практически важный,
[39:44.820 --> 39:46.820]  называющий симметрические задачи камевые жоры.
[39:46.820 --> 39:48.820]  Когда граф удовлетворяет неравенству
[39:48.820 --> 39:50.820]  треугольника, веса на ребрах
[39:50.820 --> 39:52.820]  удовлетворяет неравенство треугольника.
[39:52.820 --> 39:54.820]  То есть пройти напрямую
[39:54.820 --> 39:56.820]  из пункта А в пункт С
[39:56.820 --> 39:58.820]  не дороже, чем пройти через любой
[39:58.820 --> 40:00.820]  фиксированный пункт.
[40:00.820 --> 40:02.820]  Это очень часто естественное
[40:02.820 --> 40:04.820]  свойство графа стоимости.
[40:06.820 --> 40:08.820]  И вот для таких графов
[40:08.820 --> 40:10.820]  тоже можно рассматривать
[40:10.820 --> 40:12.820]  аппроксимационные алгоритмы. На самом деле
[40:12.820 --> 40:14.820]  для задачи ТСП
[40:14.820 --> 40:16.820]  аппроксимационные алгоритмы известны только
[40:16.820 --> 40:18.820]  для метрического случая, но можно еще
[40:18.820 --> 40:20.820]  более сократить и рассмотреть, например,
[40:20.820 --> 40:22.820]  Евклидовы графы. Это графы у которых
[40:22.820 --> 40:24.820]  вершины, это точки прямо на плоскости,
[40:24.820 --> 40:26.820]  а ребра это
[40:26.820 --> 40:28.820]  отрезки между точками. Соответственно
[40:28.820 --> 40:30.820]  вес ребра это просто Евклидовы
[40:30.820 --> 40:32.820]  расстояние между двумя точками.
[40:32.820 --> 40:34.820]  Задача тоже в принципе практическая,
[40:34.820 --> 40:36.820]  потому что очень часто можно приблизить
[40:36.820 --> 40:38.820]  реальные какие-то графы
[40:38.820 --> 40:40.820]  Евклидовым случаем.
[40:40.820 --> 40:42.820]  Ну да ладно, не только камевые жоры будем решать.
[40:42.820 --> 40:44.820]  Третий вариант
[40:44.820 --> 40:46.820]  задачи это
[40:46.820 --> 40:48.820]  представить полинамиальностью.
[40:48.820 --> 40:50.820]  То есть рассмотреть алгоритмы, которые
[40:50.820 --> 40:52.820]  вообще не притягивают на то, чтобы в общем
[40:52.820 --> 40:54.820]  случае быть полинамиальными.
[40:54.820 --> 40:56.820]  А с чего бы это? Мы будем скорее
[40:56.820 --> 40:58.820]  говорить о том, что как правило эти алгоритмы
[40:58.820 --> 41:00.820]  будут достаточно быстрыми.
[41:00.820 --> 41:02.820]  То есть ничего не будем говорить про формальную
[41:02.820 --> 41:04.820]  оценку времени работы.
[41:04.820 --> 41:06.820]  Но тем не менее это не значит, что мы не будем
[41:06.820 --> 41:08.820]  пытаться всеми расступными нарфилами
[41:08.820 --> 41:10.820]  сократить время работы алгоритма
[41:10.820 --> 41:12.820]  на практике. Будем, конечно.
[41:12.820 --> 41:14.820]  Но условно можно назвать
[41:14.820 --> 41:16.820]  этот пункт переборными алгоритмами.
[41:16.820 --> 41:18.820]  Такими алгоритмами
[41:18.820 --> 41:20.820]  исчерпывающего поиска.
[41:28.820 --> 41:30.820]  Алгоритмами исчерпывающего поиска.
[41:32.820 --> 41:34.820]  Все по-английски, кроме второго пункта.
[41:34.820 --> 41:36.820]  Не знаю я, как его нормально
[41:36.820 --> 41:38.820]  сейчас пока сформулировать,
[41:38.820 --> 41:40.820]  но можно было бы назвать релаксацией.
[41:40.820 --> 41:42.820]  Мы будем этим заниматься.
[41:42.820 --> 41:44.820]  Значит,
[41:44.820 --> 41:46.820]  мы с вами
[41:46.820 --> 41:48.820]  казалось бы, сейчас пока
[41:48.820 --> 41:50.820]  имеем полную
[41:50.820 --> 41:52.820]  разношерстность. У нас есть
[41:52.820 --> 41:54.820]  несколько разных задач,
[41:54.820 --> 41:56.820]  много задач. У нас есть много разных
[41:56.820 --> 41:58.820]  подходов. А знаете, что
[41:58.820 --> 42:00.820]  забавно, что есть какие-то
[42:00.820 --> 42:02.820]  общие темы, которые объединяют
[42:02.820 --> 42:04.820]  и несколько задач сразу, и несколько
[42:04.820 --> 42:06.820]  подходов. Например,
[42:06.820 --> 42:08.820]  оказывается, не то что оказывается,
[42:08.820 --> 42:10.820]  сейчас давайте
[42:10.820 --> 42:12.820]  представим себе
[42:12.820 --> 42:14.820]  один из возможных подходов
[42:14.820 --> 42:16.820]  к хорошей организации
[42:16.820 --> 42:18.820]  исчерпывающего перебора.
[42:18.820 --> 42:20.820]  Вот есть задача
[42:20.820 --> 42:22.820]  о рюкзаке. Как организовывать
[42:22.820 --> 42:24.820]  в ней полный перебор?
[42:24.820 --> 42:26.820]  Очевидно. Давайте рассмотрим два случая.
[42:26.820 --> 42:28.820]  Класть первый предмет в рюкзак или не класть
[42:28.820 --> 42:30.820]  первый предмет в рюкзак.
[42:34.820 --> 42:36.820]  Самое интересное в переборе
[42:36.820 --> 42:38.820]  это то, как вы организуете так называемое
[42:38.820 --> 42:40.820]  перебор. То есть, как вы
[42:40.820 --> 42:42.820]  прогнозируете, какой именно
[42:42.820 --> 42:44.820]  из двух вариантов выбора,
[42:44.820 --> 42:46.820]  какой окажется более
[42:46.820 --> 42:48.820]  победоносным,
[42:48.820 --> 42:50.820]  более плодотворным.
[42:50.820 --> 42:52.820]  И если вы грамотно
[42:52.820 --> 42:54.820]  организовали оценку
[42:54.820 --> 42:56.820]  качества решения
[42:56.820 --> 42:58.820]  в каждом из этих двух случаев, то ваш
[42:58.820 --> 43:00.820]  исчерпывающий перебор оказывается не таким
[43:00.820 --> 43:02.820]  уж страшным. Но представьте, что у вас
[43:02.820 --> 43:04.820]  есть все множество
[43:04.820 --> 43:06.820]  рюкзаков.
[43:06.820 --> 43:08.820]  Все-все-все, в которых там
[43:08.820 --> 43:10.820]  всевозможные предметы набраны.
[43:10.820 --> 43:12.820]  Главное, чтобы перевеса не было.
[43:12.820 --> 43:14.820]  Вот это все пространство решения.
[43:14.820 --> 43:16.820]  Вы где-то здесь, в этом стоге, пытаетесь
[43:16.820 --> 43:18.820]  попасть в оптимальный рюкзак.
[43:18.820 --> 43:20.820]  Вы говорите, давайте рассмотрим
[43:20.820 --> 43:22.820]  ситуации. Не берем первый предмет,
[43:22.820 --> 43:24.820]  но это соответствует тому,
[43:24.820 --> 43:26.820]  что вы делите эту область
[43:26.820 --> 43:28.820]  виртуально на две части,
[43:28.820 --> 43:30.820]  и говорите, либо идем сюда, либо идем сюда.
[43:30.820 --> 43:32.820]  И представьте, что вы каким-то
[43:32.820 --> 43:34.820]  образом, евристически пускай,
[43:34.820 --> 43:36.820]  научились оценивать
[43:36.820 --> 43:38.820]  стоимость рюкзака
[43:38.820 --> 43:40.820]  при условии, что вы в него положили
[43:40.820 --> 43:42.820]  первый предмет. Например, вы говорите,
[43:42.820 --> 43:44.820]  если первый предмет у меня очень тяжелый,
[43:44.820 --> 43:46.820]  если я положу первый предмет
[43:46.820 --> 43:48.820]  в рюкзак, то там сразу останется всего
[43:48.820 --> 43:50.820]  чуть-чуть веса
[43:50.820 --> 43:52.820]  на остальные предметы, и много я уже
[43:52.820 --> 43:54.820]  не наберу. Вы, может быть,
[43:54.820 --> 43:56.820]  можете получить какую-то верхнюю
[43:56.820 --> 43:58.820]  оценку на стоимость рюкзака, вот в этом
[43:58.820 --> 44:00.820]  случае. А здесь, допустим,
[44:00.820 --> 44:02.820]  вы можете, пока что не тыкаясь в
[44:02.820 --> 44:04.820]  оптимальный какой-то рюкзак,
[44:04.820 --> 44:06.820]  допустим, вы какую-то
[44:06.820 --> 44:08.820]  евристику знаете, как получить
[44:08.820 --> 44:10.820]  не самый плохой рюкзак. Чисто
[44:10.820 --> 44:12.820]  евристическое какое-то решение, знаете, этой
[44:12.820 --> 44:14.820]  задачи. И вы говорите, вот если я
[44:14.820 --> 44:16.820]  возьму вот такой вот рюкзак,
[44:16.820 --> 44:18.820]  например, здесь у нас верхняя оценка,
[44:18.820 --> 44:20.820]  пускай на стоимость рюкзака получилась
[44:20.820 --> 44:22.820]  не больше, чем 100 рублей.
[44:22.820 --> 44:24.820]  А здесь вы говорите, вот у этого
[44:24.820 --> 44:26.820]  рюкзака, у него
[44:28.820 --> 44:30.820]  еще где-то по-настоящему
[44:30.820 --> 44:32.820]  оптимальный рюкзак, у которого стоимость еще
[44:32.820 --> 44:34.820]  выше. Но очевидно, что если вам
[44:34.820 --> 44:36.820]  известна вот такая информация,
[44:36.820 --> 44:38.820]  то вы можете всю вот эту вот половину вашей
[44:38.820 --> 44:40.820]  области поиска, да,
[44:40.820 --> 44:42.820]  пространства решений, как ни назови,
[44:42.820 --> 44:44.820]  отбросить и дальше в нее никогда не заходить.
[44:44.820 --> 44:46.820]  Вот. И
[44:46.820 --> 44:48.820]  в исчерпывающем поиске очень
[44:48.820 --> 44:50.820]  важно уметь качественно
[44:50.820 --> 44:52.820]  оценивать сверху и снизу
[44:52.820 --> 44:54.820]  стоимости ваших
[44:54.820 --> 44:56.820]  оптимальных решений.
[44:56.820 --> 44:58.820]  И знамените, что для того, чтобы снизу
[44:58.820 --> 45:00.820]  оценить, например, стоимость рюкзака
[45:00.820 --> 45:02.820]  оптимального, достаточно
[45:02.820 --> 45:04.820]  иметь просто некоторые хорошие эвристики
[45:04.820 --> 45:06.820]  для того, чтобы набирать рюкзак.
[45:06.820 --> 45:08.820]  То есть нам помогают
[45:08.820 --> 45:10.820]  приближенные алгоритмы,
[45:10.820 --> 45:12.820]  эвристические алгоритмы, не только
[45:12.820 --> 45:14.820]  приблизительно решать задачу,
[45:14.820 --> 45:16.820]  но вот это приблизенное решение задачи
[45:16.820 --> 45:18.820]  мы можем использовать в качестве оценок
[45:18.820 --> 45:20.820]  при организации
[45:20.820 --> 45:22.820]  исчерпывущего поиска.
[45:22.820 --> 45:24.820]  И вот эта штука помогает вот здесь.
[45:24.820 --> 45:26.820]  Ага.
[45:30.820 --> 45:32.820]  Да, эвристика это некий
[45:32.820 --> 45:34.820]  алгоритм, который не претендует
[45:34.820 --> 45:36.820]  на точное
[45:36.820 --> 45:38.820]  и быстрое одновременно решение задачи.
[45:38.820 --> 45:40.820]  То есть мы
[45:40.820 --> 45:42.820]  в общем, про какие-то эвристики мы можем
[45:42.820 --> 45:44.820]  доказывать, что они работают
[45:44.820 --> 45:46.820]  неплохо, про какие-то эвристики мы вообще
[45:46.820 --> 45:48.820]  ничего не доказываем, просто говорим,
[45:48.820 --> 45:50.820]  на практике они работают неплохо.
[45:50.820 --> 45:52.820]  Вот.
[45:52.820 --> 45:54.820]  Ну и эвристики, как правило, они
[45:54.820 --> 45:56.820]  основаны на какой-то, знаете,
[45:56.820 --> 45:58.820]  естественной такой интуитивной идее.
[45:58.820 --> 46:00.820]  Например, жадная эвристика.
[46:00.820 --> 46:02.820]  Вот можно сказать, что алгоритмы
[46:02.820 --> 46:04.820]  Красова, Трима, Боровки, они все
[46:04.820 --> 46:06.820]  основаны на вот жадном подходе.
[46:06.820 --> 46:08.820]  Идея такая в голове.
[46:08.820 --> 46:10.820]  Вот жадно, давайте выбирать дерево.
[46:10.820 --> 46:12.820]  Про эвристика, да,
[46:12.820 --> 46:14.820]  но про нее в конкретном случае
[46:14.820 --> 46:16.820]  минимально формально доказать,
[46:16.820 --> 46:18.820]  что это точно, она приводит
[46:18.820 --> 46:20.820]  к точному решению задачи.
[46:20.820 --> 46:22.820]  А большинство эвристик, которые мы с вами будем
[46:22.820 --> 46:24.820]  рассматривать в нашем курсе,
[46:24.820 --> 46:26.820]  всего трудности задач просто мы не можем
[46:26.820 --> 46:28.820]  доказать, что они всегда
[46:28.820 --> 46:30.820]  быстро и точно работают. Да, ну вот
[46:30.820 --> 46:32.820]  работают с какой-то погрешностью, например,
[46:32.820 --> 46:34.820]  как мы вот в этой теме доказываем.
[46:34.820 --> 46:36.820]  Так вот.
[46:36.820 --> 46:38.820]  Получается, что
[46:38.820 --> 46:40.820]  мне кажется, что идеи
[46:40.820 --> 46:42.820]  из первого пункта помогают нам
[46:42.820 --> 46:44.820]  организовать хорошо третий пункт.
[46:44.820 --> 46:46.820]  С другой стороны, а вот про
[46:46.820 --> 46:48.820]  изменение задачи.
[46:48.820 --> 46:50.820]  Значит, давайте представим, что мы
[46:50.820 --> 46:52.820]  умеем не очень хорошо,
[46:52.820 --> 46:54.820]  например, оценивать
[46:54.820 --> 46:56.820]  по какой-то причине
[46:56.820 --> 46:58.820]  стоимость рюкзака, в котором
[46:58.820 --> 47:00.820]  лежат предметы не больше, чем там
[47:00.820 --> 47:02.820]  суммарно 50 килограмм,
[47:02.820 --> 47:04.820]  но почему-то умеем
[47:04.820 --> 47:06.820]  оценивать стоимость рюкзака, который
[47:06.820 --> 47:08.820]  по весу не больше 60 килограмм.
[47:08.820 --> 47:10.820]  Ну и что? Мы все равно можем
[47:10.820 --> 47:12.820]  использовать одно для оценки
[47:12.820 --> 47:14.820]  другого, вот так или иначе.
[47:14.820 --> 47:16.820]  И изменение задачи, исправление
[47:16.820 --> 47:18.820]  двух условий задачи, может нам
[47:18.820 --> 47:20.820]  помочь получить опять-таки какую-то
[47:20.820 --> 47:22.820]  оценку на максимальную стоимость
[47:22.820 --> 47:24.820]  рюкзака, например.
[47:24.820 --> 47:26.820]  На самом деле, и вот этот вот
[47:26.820 --> 47:28.820]  пункт, он тоже помогает нам в третьем
[47:28.820 --> 47:30.820]  пункте. Не говоря
[47:30.820 --> 47:32.820]  уже о том, что
[47:32.820 --> 47:34.820]  эти два пункта тоже связаны. Мы с вами
[47:34.820 --> 47:36.820]  посмотрим. Мы будем с вами со следующего
[47:36.820 --> 47:38.820]  раза уже рассматривать тему релаксации.
[47:38.820 --> 47:40.820]  Линейная релаксация. И
[47:40.820 --> 47:42.820]  это общий принцип, который
[47:42.820 --> 47:44.820]  позволяет много разных задач
[47:44.820 --> 47:46.820]  и очень неплохо решать какие-то
[47:46.820 --> 47:48.820]  доказуемо хорошо, какие-то
[47:48.820 --> 47:50.820]  правила. И вот
[47:50.820 --> 47:52.820]  увидите уже, что есть
[47:52.820 --> 47:54.820]  на самом деле здесь общие методы.
[47:54.820 --> 47:56.820]  Так что децентральная оптимизация
[47:56.820 --> 47:58.820]  это такая единая все-таки дисциплина.
[47:58.820 --> 48:00.820]  Проходишь чего-то в этой теме,
[48:00.820 --> 48:02.820]  а потом оказывается, что оно где-то
[48:02.820 --> 48:04.820]  пригождается еще, и причем много где.
[48:04.820 --> 48:06.820]  Проходишь какую-то интересную
[48:06.820 --> 48:08.820]  такую особенность
[48:08.820 --> 48:10.820]  задачи ТСП, например, да,
[48:10.820 --> 48:12.820]  что в задачи ТСП помогают минимально
[48:12.820 --> 48:14.820]  деревья. Так они, оказывается, в дереве штейнеры
[48:14.820 --> 48:16.820]  помогают. Оказывается
[48:16.820 --> 48:18.820]  парасочетание, например. А знаете, что такое
[48:18.820 --> 48:20.820]  парасочетание? Отлично.
[48:20.820 --> 48:22.820]  Да, набор реберографа без общих концов.
[48:22.820 --> 48:24.820]  Оказывается, парасочетание встречается
[48:24.820 --> 48:26.820]  в задачах вершина покрытия.
[48:26.820 --> 48:28.820]  Встречается даже вот здесь, казалось бы,
[48:28.820 --> 48:30.820]  бинплэкинг. Это вообще упаковка
[48:30.820 --> 48:32.820]  контента. Причем там парасочетание?
[48:32.820 --> 48:34.820]  Да, и встречается еще и вот здесь.
[48:34.820 --> 48:36.820]  Но только в рюкзаке разве что не
[48:36.820 --> 48:38.820]  встречается парасочетание.
[48:38.820 --> 48:40.820]  Короче говоря, есть вот какие-то
[48:40.820 --> 48:42.820]  неожиданные совершенно
[48:42.820 --> 48:44.820]  и пересечения, и
[48:44.820 --> 48:46.820]  общие, так сказать, корни
[48:46.820 --> 48:48.820]  у перечисленных задач.
[48:48.820 --> 48:50.820]  И действительно, я надеюсь,
[48:50.820 --> 48:52.820]  что это как-то в голове,
[48:52.820 --> 48:54.820]  к концу курса сложится в
[48:54.820 --> 48:56.820]  достаточно интересную такую общую
[48:56.820 --> 48:58.820]  картину, как это все переплетается.
[49:00.820 --> 49:02.820]  Ну и, наверное,
[49:02.820 --> 49:04.820]  можно четвертым пунктом здесь,
[49:04.820 --> 49:06.820]  значит, четвертым пунктом
[49:06.820 --> 49:08.820]  хотелось бы мне
[49:08.820 --> 49:10.820]  показать,
[49:10.820 --> 49:12.820]  и какие-то навыки
[49:12.820 --> 49:14.820]  не было.
[49:18.820 --> 49:20.820]  Это самый хорошо масштабируемый
[49:20.820 --> 49:22.820]  вариант решения
[49:22.820 --> 49:24.820]  сложных задач дискретной
[49:24.820 --> 49:26.820]  оптимизации, про которые
[49:26.820 --> 49:28.820]  мы отдельно поговорим. Я сейчас
[49:28.820 --> 49:30.820]  не буду тратить время на это,
[49:30.820 --> 49:32.820]  но по ходу курса разберемся.
[49:32.820 --> 49:34.820]  Теперь
[49:34.820 --> 49:36.820]  как наш курс можно сдавать?
[49:36.820 --> 49:38.820]  И вот про курсеру
[49:38.820 --> 49:40.820]  я тоже сейчас скажу.
[49:40.820 --> 49:42.820]  Значит,
[49:42.820 --> 49:44.820]  получается, видите,
[49:44.820 --> 49:46.820]  много задач, много подходов. Вот курс
[49:46.820 --> 49:48.820]  на курсе, который построен по такой же
[49:48.820 --> 49:50.820]  абсолютно схеме,
[49:50.820 --> 49:52.820]  в этом курсе рассматривается
[49:52.820 --> 49:54.820]  несколько классических задач,
[49:54.820 --> 49:56.820]  трудных задач дискретных оптимизации,
[49:56.820 --> 49:58.820]  и по ходу курса рассматриваются разные
[49:58.820 --> 50:00.820]  подходы общие.
[50:00.820 --> 50:02.820]  В принципе, каждую из подходов можно применить
[50:02.820 --> 50:04.820]  каждой из задач. Вот такая сетка
[50:04.820 --> 50:06.820]  возникает.
[50:06.820 --> 50:08.820]  По одной,
[50:08.820 --> 50:10.820]  по одному измерению
[50:10.820 --> 50:12.820]  у нас подходы, здесь
[50:12.820 --> 50:14.820]  подходы,
[50:14.820 --> 50:16.820]  какие-то евристики.
[50:16.820 --> 50:18.820]  Привыкаем к слову «евристика»,
[50:18.820 --> 50:20.820]  употребленному через каждые
[50:20.820 --> 50:22.820]  пять слов.
[50:22.820 --> 50:24.820]  А здесь у нас задачи.
[50:24.820 --> 50:26.820]  Вот задачи,
[50:26.820 --> 50:28.820]  разные подходы.
[50:28.820 --> 50:30.820]  И внутри каждой из этих групп
[50:30.820 --> 50:32.820]  свои подходы тоже есть.
[50:32.820 --> 50:34.820]  Вот у нас такая сетка. Вот мы по ходу курса
[50:34.820 --> 50:36.820]  явно разбираем
[50:36.820 --> 50:38.820]  некоторые узлы этой сетки,
[50:38.820 --> 50:40.820]  применение каких-то подходов
[50:40.820 --> 50:42.820]  внутри каких-то задач дискретной оптимизации.
[50:42.820 --> 50:44.820]  Ну и вот хочется надеяться,
[50:44.820 --> 50:46.820]  что в вашей голове эта вот сетка
[50:46.820 --> 50:48.820]  образует
[50:48.820 --> 50:50.820]  такую равномерную неравную сетку
[50:50.820 --> 50:52.820]  в вашей голове, так что вы сможете
[50:52.820 --> 50:54.820]  более-менее взять любую задачу,
[50:54.820 --> 50:56.820]  встретившую вам дискретную оптимизацию,
[50:56.820 --> 50:58.820]  и попытаться понять,
[50:58.820 --> 51:00.820]  как в ней мог бы выглядеть тот или иной
[51:00.820 --> 51:02.820]  подход общий.
[51:02.820 --> 51:04.820]  Та же самая идеология курса, она
[51:04.820 --> 51:06.820]  используется Паскалем
[51:06.820 --> 51:08.820]  Ван Гентликом в курсе
[51:08.820 --> 51:10.820]  на Курсере, который так и называется,
[51:10.820 --> 51:12.820]  «Дискретная оптимизация», «Discrete Optimization».
[51:12.820 --> 51:14.820]  Значит, этот курс
[51:14.820 --> 51:16.820]  такой
[51:16.820 --> 51:18.820]  тяжелый на
[51:18.820 --> 51:20.820]  программирование,
[51:20.820 --> 51:22.820]  там все, что вам нужно будет
[51:22.820 --> 51:24.820]  делать, это реализовывать программы,
[51:24.820 --> 51:26.820]  писать программы,
[51:26.820 --> 51:28.820]  которые решают трудные задачи дискретной
[51:28.820 --> 51:30.820]  оптимизации.
[51:30.820 --> 51:32.820]  То есть наш курс
[51:32.820 --> 51:34.820]  такой же.
[51:34.820 --> 51:36.820]  В нашем курсе для того, чтобы сдать курс,
[51:36.820 --> 51:38.820]  нужно будет писать программы, которые
[51:38.820 --> 51:40.820]  применяют эти регулистики.
[51:40.820 --> 51:42.820]  Дело в том, что
[51:42.820 --> 51:44.820]  с моей точки зрения
[51:44.820 --> 51:46.820]  говорить на том объеме
[51:46.820 --> 51:48.820]  и в той полноте,
[51:48.820 --> 51:50.820]  что мы это делаем,
[51:50.820 --> 51:52.820]  на теоретическом уровне довольно бы скалково,
[51:52.820 --> 51:54.820]  но
[51:54.820 --> 51:56.820]  гораздо приятнее
[51:56.820 --> 51:58.820]  действительно какую-то вещь
[51:58.820 --> 52:00.820]  и увидеть, что классно она работает.
[52:00.820 --> 52:02.820]  До того, как мы это заходили,
[52:02.820 --> 52:04.820]  мы не могли получить
[52:04.820 --> 52:06.820]  решение вот такое классное,
[52:06.820 --> 52:08.820]  а теперь мы получаем в два раза класснее
[52:08.820 --> 52:10.820]  решение, чем было, в два раза более
[52:10.820 --> 52:12.820]  крутой рюкзак, например, или там
[52:12.820 --> 52:14.820]  «путиками выезжора»,
[52:14.820 --> 52:16.820]  в два раза более короткие, чем до этого.
[52:16.820 --> 52:18.820]  И это, ну не знаю, мне кажется,
[52:18.820 --> 52:20.820]  что это довольно прикольное ощущение такое.
[52:20.820 --> 52:22.820]  Вообще в дискретной оптимизации
[52:22.820 --> 52:24.820]  такая идеология,
[52:24.820 --> 52:26.820]  она отличается от заданий
[52:26.820 --> 52:28.820]  курса алгоритмов, вот большинства.
[52:28.820 --> 52:30.820]  Вот в курсе алгоритмов чаще всего
[52:30.820 --> 52:32.820]  задания какие?
[52:32.820 --> 52:34.820]  Закодируйте алгоритм Дэйкстре
[52:34.820 --> 52:36.820]  так, чтобы он прошел все 20 тестов.
[52:36.820 --> 52:38.820]  Вот один тест не проходит,
[52:38.820 --> 52:40.820]  ну, плохо, вот все, значит, он
[52:40.820 --> 52:42.820]  корректно написан.
[52:42.820 --> 52:44.820]  Дискретная оптимизация, она ближе к жизни.
[52:44.820 --> 52:46.820]  В жизни нет, как правило,
[52:46.820 --> 52:48.820]  черного и белого. У нас есть какое-то
[52:48.820 --> 52:50.820]  приближение к идеалу, последовательный
[52:50.820 --> 52:52.820]  прогресс такой поступательный.
[52:52.820 --> 52:54.820]  Вот самое вот Гентенрик реализует
[52:54.820 --> 52:56.820]  в своем курсе. Вы узнаете по ходу
[52:56.820 --> 52:58.820]  курсы разные ивристики и применяете
[52:58.820 --> 53:00.820]  их все к новым, к новым задачам
[53:00.820 --> 53:02.820]  и к старым задачам, к которым вы уже
[53:02.820 --> 53:04.820]  чего-то написали, добавляете
[53:04.820 --> 53:06.820]  вновь узнанные ивристики
[53:06.820 --> 53:08.820]  и улучшаете постепенно
[53:08.820 --> 53:10.820]  свой результат.
[53:10.820 --> 53:12.820]  Кстати говоря, в курсе Гентенрика
[53:12.820 --> 53:14.820]  я, например, сам максимальный балл
[53:14.820 --> 53:16.820]  не набрал. Вот, но я как бы
[53:16.820 --> 53:18.820]  это пытался сделать едино,
[53:18.820 --> 53:20.820]  но вот просто курс не
[53:20.820 --> 53:22.820]  самый простой, который может быть.
[53:22.820 --> 53:24.820]  Это ничего страшного,
[53:24.820 --> 53:26.820]  потому что если я не набрал максимальный
[53:26.820 --> 53:28.820]  балл, я не думаю, что это что-то говорит
[53:28.820 --> 53:30.820]  о фистехах. Вот.
[53:30.820 --> 53:32.820]  Вполне возможно вы можете набрать.
[53:32.820 --> 53:34.820]  И
[53:34.820 --> 53:36.820]  это первый курс.
[53:36.820 --> 53:38.820]  Его, если вы сдаете, то можно
[53:38.820 --> 53:40.820]  получить зачет по нашему курсу
[53:40.820 --> 53:42.820]  без проблем. Просто в конце семестра
[53:42.820 --> 53:44.820]  вы пишите, что я сдал там или сдала курс
[53:44.820 --> 53:46.820]  на курсере, и мы с вами
[53:46.820 --> 53:48.820]  беседуем по результатам
[53:48.820 --> 53:50.820]  отдачи. Оценка, которую вы получили там,
[53:50.820 --> 53:52.820]  она переносится просто в наш курс.
[53:52.820 --> 53:54.820]  В случае, если вы защищаете
[53:54.820 --> 53:56.820]  свой плод. Да?
[53:58.820 --> 54:00.820]  Вот я здесь не могу
[54:00.820 --> 54:02.820]  сказать. Понимаете, я вот не следил
[54:02.820 --> 54:04.820]  давно за коммерческими
[54:04.820 --> 54:06.820]  подвижками курсеры, что они там
[54:06.820 --> 54:08.820]  закрывают, делают там
[54:08.820 --> 54:10.820]  Paywall, что не закрывают.
[54:10.820 --> 54:12.820]  Я так понимаю, что вы
[54:12.820 --> 54:14.820]  можете просмотреть все равно без проблем
[54:14.820 --> 54:16.820]  видеоматериалы и скачать
[54:16.820 --> 54:18.820]  хотя бы датасеты, на которые вам
[54:18.820 --> 54:20.820]  надо решать.
[54:20.820 --> 54:22.820]  Только сертификат.
[54:22.820 --> 54:24.820]  То есть вы можете в принципе отправить
[54:24.820 --> 54:26.820]  на проверку задания в любом случае.
[54:26.820 --> 54:28.820]  Отлично.
[54:28.820 --> 54:30.820]  Значит, проблем нет.
[54:30.820 --> 54:32.820]  Но сертификат не надо мне показывать.
[54:32.820 --> 54:34.820]  Мне надо будет показать просто ваш дашборд.
[54:34.820 --> 54:36.820]  Как у вас выглядит
[54:36.820 --> 54:38.820]  ваш вид курсера
[54:38.820 --> 54:40.820]  по итогам сдачи
[54:40.820 --> 54:42.820]  гента Энрика.
[54:42.820 --> 54:44.820]  Это первое.
[54:44.820 --> 54:46.820]  Один к одному.
[54:46.820 --> 54:48.820]  Там 5 или 6
[54:48.820 --> 54:50.820]  заданий, по-моему, и каждое задание
[54:50.820 --> 54:52.820]  оценивается в пределах 10 баллов.
[54:52.820 --> 54:54.820]  Берем среднее и
[54:54.820 --> 54:56.820]  это оценка за наш курс.
[54:58.820 --> 55:00.820]  Второе. Второй курс на курсе
[55:00.820 --> 55:02.820]  могу рекомендовать.
[55:02.820 --> 55:04.820]  Если вас интересует вот эта
[55:04.820 --> 55:06.820]  тематика, конкретно
[55:06.820 --> 55:08.820]  approximation algorithms,
[55:08.820 --> 55:10.820]  то тогда можно сдавать курс
[55:10.820 --> 55:12.820]  Claire Mathew.
[55:12.820 --> 55:14.820]  Я про него тоже говорю.
[55:14.820 --> 55:16.820]  Телеграм я продублирую.
[55:16.820 --> 55:18.820]  Я поэтому сейчас не пишу на доске
[55:18.820 --> 55:20.820]  название этих курсов, все равно все будет.
[55:20.820 --> 55:22.820]  Курс называется approximation algorithms.
[55:22.820 --> 55:24.820]  Вы можете погуглить
[55:24.820 --> 55:26.820]  на курсере.
[55:26.820 --> 55:28.820]  Вы, кстати, используете
[55:28.820 --> 55:30.820]  внутренний поиск курсера, чтобы искать курсы.
[55:30.820 --> 55:32.820]  Правильно говорить погуглить?
[55:32.820 --> 55:34.820]  Я вот не знаю.
[55:34.820 --> 55:36.820]  Но он там легко найдется.
[55:36.820 --> 55:38.820]  Это курс в двух частях.
[55:38.820 --> 55:40.820]  Чтобы закрыть этим курсом наш курс, надо сдать обе части.
[55:40.820 --> 55:42.820]  И надо будет мне
[55:42.820 --> 55:44.820]  сдать
[55:44.820 --> 55:46.820]  миниусный экзамен, чтобы продемонстрировать,
[55:46.820 --> 55:48.820]  что вы действительно весь материал
[55:48.820 --> 55:50.820]  понимаете. В целом, не только там
[55:50.820 --> 55:52.820]  квизы закрыты друг за другом.
[55:52.820 --> 55:54.820]  Курс
[55:54.820 --> 55:56.820]  не сказать, что сильно простой, но у него есть
[55:56.820 --> 55:58.820]  важный плюс для некоторых
[55:58.820 --> 56:00.820]  из вас. Он чисто теоретический.
[56:00.820 --> 56:02.820]  Там нет ни одного задания на кодирование,
[56:02.820 --> 56:04.820]  насколько мне известно.
[56:04.820 --> 56:06.820]  Поэтому если вы такой
[56:06.820 --> 56:08.820]  теоретический гиг,
[56:08.820 --> 56:10.820]  в хорошем смысле,
[56:10.820 --> 56:12.820]  то я вам очень советую взять курс
[56:12.820 --> 56:14.820]  Делу
[56:14.820 --> 56:16.820]  Клер Матье
[56:16.820 --> 56:18.820]  из двух частей.
[56:26.820 --> 56:28.820]  У кого? У Матье?
[56:28.820 --> 56:30.820]  Можно.
[56:30.820 --> 56:32.820]  У Гента Инрика тоже, в принципе, можно.
[56:32.820 --> 56:34.820]  А?
[56:36.820 --> 56:38.820]  В общий чат курса лучше.
[56:38.820 --> 56:40.820]  Это совершенно непререкаемое
[56:40.820 --> 56:42.820]  правило. Чтобы я реально вам ответил,
[56:42.820 --> 56:44.820]  лучше задавать вопрос в общий чат курса.
[56:44.820 --> 56:46.820]  Если это не что-то
[56:46.820 --> 56:48.820]  супер-супер личное,
[56:48.820 --> 56:50.820]  не дай бог, по семейным
[56:50.820 --> 56:52.820]  принятистям у вас что-то такое происходит,
[56:52.820 --> 56:54.820]  вы не можете что-то вовремя сдать.
[56:54.820 --> 56:56.820]  Это в личку надо писать.
[56:56.820 --> 56:58.820]  Вообще говоря, все остальное мы пишем в общий чат.
[56:58.820 --> 57:00.820]  Так.
[57:00.820 --> 57:02.820]  Вот это для теоретиков.
[57:02.820 --> 57:04.820]  И на курсере есть еще один курс.
[57:04.820 --> 57:06.820]  Точнее, да.
[57:10.820 --> 57:12.820]  Оценка по второму курсу ставится
[57:12.820 --> 57:14.820]  в общем-то точно так же.
[57:14.820 --> 57:16.820]  Вы получаете
[57:16.820 --> 57:18.820]  эту оценку и мы ее
[57:18.820 --> 57:20.820]  перепроставляем.
[57:22.820 --> 57:24.820]  Вы не видели курс,
[57:24.820 --> 57:26.820]  вы не видели этот курс.
[57:26.820 --> 57:28.820]  Вы только поймите
[57:28.820 --> 57:30.820]  всю теорию,
[57:30.820 --> 57:32.820]  тогда мы запоговорим.
[57:32.820 --> 57:34.820]  Только в обеих частях.
[57:34.820 --> 57:36.820]  Первая часть, она такая более-менее
[57:36.820 --> 57:38.820]  еще безобидная, но надо сдать две части.
[57:38.820 --> 57:40.820]  Я обращаю ваше внимание,
[57:40.820 --> 57:42.820]  две части надо сдать.
[57:44.820 --> 57:46.820]  И, наконец,
[57:46.820 --> 57:48.820]  третья вещь,
[57:48.820 --> 57:50.820]  это аккаунты, которые
[57:50.820 --> 57:52.820]  в представлении курсов,
[57:52.820 --> 57:54.820]  мне все равно очень полезны.
[57:54.820 --> 57:56.820]  Это спайки, которые называются
[57:56.820 --> 57:58.820]  Basic Modeling for Discrete Optimization,
[57:58.820 --> 58:00.820]  Advanced Modeling for Discrete Optimization
[58:00.820 --> 58:02.820]  и
[58:02.820 --> 58:04.820]  Scrolling Modeling for Discrete Optimization.
[58:04.820 --> 58:06.820]  То есть,
[58:06.820 --> 58:08.820]  это для тех, кто хочет скорее вот сюда
[58:10.820 --> 58:12.820]  исчерпывать поиск,
[58:12.820 --> 58:14.820]  причем делать это так, чтобы
[58:14.820 --> 58:16.820]  за вас, чуть-чуть потише,
[58:16.820 --> 58:18.820]  чтобы за вас это делали другие программы.
[58:18.820 --> 58:20.820]  На самом деле,
[58:20.820 --> 58:22.820]  забавная вещь, существуют программы,
[58:22.820 --> 58:24.820]  которые называются Slower,
[58:24.820 --> 58:26.820]  которые за вас могут решать задачи.
[58:26.820 --> 58:28.820]  Но для того, чтобы эти задачи
[58:28.820 --> 58:30.820]  программы за вас решили, вы должны
[58:30.820 --> 58:32.820]  эти задачи хорошо описать.
[58:32.820 --> 58:34.820]  В компиляторах, в обычном программировании,
[58:34.820 --> 58:36.820]  у нас есть компиляторы,
[58:36.820 --> 58:38.820]  и мы пишем программу на серв, допустим,
[58:38.820 --> 58:40.820]  даем ее компилятору,
[58:40.820 --> 58:42.820]  и он транслирует ее в компьютер,
[58:42.820 --> 58:44.820]  какие команды выполнять,
[58:44.820 --> 58:46.820]  в какой последовательности, чтобы решить задачу.
[58:46.820 --> 58:48.820]  Нам самим приходится думать,
[58:48.820 --> 58:50.820]  какие команды в какой последовательности делать.
[58:52.820 --> 58:54.820]  Есть программирование,
[58:54.820 --> 58:56.820]  которое называется программирование
[58:56.820 --> 58:58.820]  в ограничениях, Constraint Programming.
[58:58.820 --> 59:00.820]  Там мы описываем не то,
[59:00.820 --> 59:02.820]  что нужно делать, чтобы решать задачу,
[59:02.820 --> 59:04.820]  а то, что мы вообще считаем
[59:04.820 --> 59:06.820]  решением им задачи.
[59:06.820 --> 59:08.820]  И если мы это грамотно, четко
[59:08.820 --> 59:10.820]  и качественно описали, то некая программа,
[59:10.820 --> 59:12.820]  специальная, называемая Solver,
[59:12.820 --> 59:14.820]  может за нас эту задачу довольно неплохо решить.
[59:14.820 --> 59:16.820]  Часто лучше, чем мы смогли бы ее заходить.
[59:16.820 --> 59:18.820]  Для того, чтобы понять,
[59:18.820 --> 59:20.820]  как это делается, я очень советую
[59:20.820 --> 59:22.820]  сегодня Питера Спаке,
[59:22.820 --> 59:24.820]  кого-то еще, какого-то другого профессора,
[59:24.820 --> 59:26.820]  вы не помните, к сожалению,
[59:26.820 --> 59:28.820]  про вот эти, скорее, телеграммы.
[59:28.820 --> 59:30.820]  Я с удовольствием бы прочитал
[59:30.820 --> 59:32.820]  курс, целиком посвященный программированию
[59:32.820 --> 59:34.820]  в ограничениях, потому что оно мне очень нравится.
[59:34.820 --> 59:36.820]  Но я этот курс считаю
[59:36.820 --> 59:38.820]  для англоязычных студентов.
[59:38.820 --> 59:40.820]  Если кому интересно,
[59:40.820 --> 59:42.820]  могу вам добавить чак
[59:42.820 --> 59:44.820]  в телеграмме.
[59:46.820 --> 59:48.820]  Фото, которое вроде про то,
[59:48.820 --> 59:50.820]  как закрывать. Нет, слушайте, еще не сказал.
[59:50.820 --> 59:52.820]  Сказал еще последнее.
[59:52.820 --> 59:54.820]  В нашем курсе
[59:54.820 --> 59:56.820]  оценка целиком определяется
[59:56.820 --> 59:58.820]  шестью или пяти-шестью заданиями,
[59:58.820 --> 01:00:00.820]  которые вы по ходу курса получите.
[01:00:00.820 --> 01:00:02.820]  В некоторых из этих заданий
[01:00:02.820 --> 01:00:04.820]  надо будет применить конкретно ивристику.
[01:00:04.820 --> 01:00:06.820]  Прям будет сказано, там, не знаю,
[01:00:06.820 --> 01:00:08.820]  напишите полный перебор,
[01:00:08.820 --> 01:00:10.820]  best first search какой-нибудь задачи
[01:00:10.820 --> 01:00:12.820]  о рюкзаке или еще
[01:00:12.820 --> 01:00:14.820]  что-нибудь.
[01:00:14.820 --> 01:00:16.820]  В некоторых заданиях будет точно
[01:00:16.820 --> 01:00:18.820]  как в курсе Гентенлика.
[01:00:18.820 --> 01:00:20.820]  То есть будет дана более 500
[01:00:20.820 --> 01:00:22.820]  и не будет ничего больше.
[01:00:22.820 --> 01:00:24.820]  Какие хотите ивристики, такие применять.
[01:00:24.820 --> 01:00:26.820]  Что-то было решение.
[01:00:26.820 --> 01:00:28.820]  Ну, как с золушкой, короче,
[01:00:28.820 --> 01:00:30.820]  можно поступить.
[01:00:30.820 --> 01:00:32.820]  Делай, что хочешь, чтобы было чисто.
[01:00:32.820 --> 01:00:34.820]  Но зато
[01:00:34.820 --> 01:00:36.820]  это позволяет вам
[01:00:36.820 --> 01:00:38.820]  никак себя не ограничивать.
[01:00:38.820 --> 01:00:40.820]  Можете статьи, например, какие-то,
[01:00:40.820 --> 01:00:42.820]  что делают многие студенты на самом деле
[01:00:42.820 --> 01:00:44.820]  интересующиеся, ищут статьи
[01:00:44.820 --> 01:00:46.820]  по лучшим алгоритмам
[01:00:46.820 --> 01:00:48.820]  для решения этих задач.
[01:00:48.820 --> 01:00:50.820]  Как-то кодят, совмещают это все.
[01:00:50.820 --> 01:00:52.820]  Очень крутые вещи делают.
[01:00:52.820 --> 01:00:54.820]  Это есть способ
[01:00:54.820 --> 01:00:56.820]  закрыть наш код.
[01:00:56.820 --> 01:00:58.820]  Похоже на Гентенлику.
[01:00:58.820 --> 01:01:00.820]  У Гентенлика тоже оценка по заданиям.
[01:01:00.820 --> 01:01:02.820]  У нас оценка по заданиям.
[01:01:02.820 --> 01:01:04.820]  Ну, конечно, вы можете сдать
[01:01:04.820 --> 01:01:06.820]  либо Гентенлика и защитить свою оценку.
[01:01:06.820 --> 01:01:08.820]  Либо сдать вот
[01:01:08.820 --> 01:01:10.820]  обычные курсы официальным способом.
[01:01:10.820 --> 01:01:12.820]  Но Гентенлик
[01:01:12.820 --> 01:01:14.820]  тоже официальный способ.
[01:01:14.820 --> 01:01:16.820]  Сейчас, ребята, тише, подождите.
[01:01:16.820 --> 01:01:18.820]  Вопрос иначе не слышно.
[01:01:18.820 --> 01:01:20.820]  Да-да-да, это как домашнее задание.
[01:01:20.820 --> 01:01:22.820]  Ну, помимо того...
[01:01:22.820 --> 01:01:24.820]  Сейчас, секундочку.
[01:01:24.820 --> 01:01:26.820]  Помимо того, что мы сдаем вот эти вот шесть заданий...
[01:01:26.820 --> 01:01:28.820]  Тихо-тихо, товарищи.
[01:01:28.820 --> 01:01:30.820]  Я иначе не слышу.
[01:01:30.820 --> 01:01:32.820]  Значит,
[01:01:32.820 --> 01:01:34.820]  помимо того, что мы сдаем шесть заданий,
[01:01:34.820 --> 01:01:36.820]  в конце курса есть теоретический тест.
[01:01:36.820 --> 01:01:38.820]  Теоретический тест.
[01:01:38.820 --> 01:01:40.820]  Но он максимально
[01:01:40.820 --> 01:01:42.820]  стресс-фри такой.
[01:01:42.820 --> 01:01:44.820]  То есть он проходит там три или четыре попытки.
[01:01:44.820 --> 01:01:46.820]  Он начинается до зачета недели еще.
[01:01:46.820 --> 01:01:48.820]  И этот тест не влияет
[01:01:48.820 --> 01:01:50.820]  на оценку.
[01:01:50.820 --> 01:01:52.820]  Просто чтобы оценку проставить, надо этот тест
[01:01:52.820 --> 01:01:54.820]  сдать. На положительный балл.
[01:01:54.820 --> 01:01:56.820]  Все. То есть единственный смысл этого
[01:01:56.820 --> 01:01:58.820]  теста просто чтобы вы
[01:01:58.820 --> 01:02:00.820]  как-то общую какую-то
[01:02:00.820 --> 01:02:02.820]  конгу понимали. Все-таки тоже теоретический
[01:02:02.820 --> 01:02:04.820]  фреймворк, какую-то основную терминологию
[01:02:04.820 --> 01:02:06.820]  курса понимали.
[01:02:06.820 --> 01:02:08.820]  В какой-то момент,
[01:02:08.820 --> 01:02:10.820]  весьма скоро, может быть,
[01:02:10.820 --> 01:02:12.820]  сегодня в телеграм-группе,
[01:02:12.820 --> 01:02:14.820]  внимание, все, если кто еще
[01:02:14.820 --> 01:02:16.820]  не знает,
[01:02:16.820 --> 01:02:18.820]  обязательно получите доступ к
[01:02:18.820 --> 01:02:20.820]  телеграм-каналу. Это прям жизненно
[01:02:20.820 --> 01:02:22.820]  необходимо. Если есть коллеги ваши, которые
[01:02:22.820 --> 01:02:24.820]  сегодня не пришли сюда, обязательно
[01:02:24.820 --> 01:02:26.820]  перешлите им ссылку, добавьте их сами
[01:02:26.820 --> 01:02:28.820]  в эту группу в телеграм.
[01:02:28.820 --> 01:02:30.820]  Главное, чтобы точно никто
[01:02:30.820 --> 01:02:32.820]  не пролетел.
[01:02:32.820 --> 01:02:34.820]  Вот прям будет полка на форму.
[01:02:34.820 --> 01:02:36.820]  В эту форму вы
[01:02:36.820 --> 01:02:38.820]  забьете свои какие-то
[01:02:38.820 --> 01:02:40.820]  стандартные координаты. А кроме того...
[01:02:42.820 --> 01:02:44.820]  Я сам себя не слышу.
[01:02:46.820 --> 01:02:48.820]  У коллег вам коллеги скинут.
[01:02:48.820 --> 01:02:50.820]  Ребята, вы самоорганизуйтесь
[01:02:50.820 --> 01:02:52.820]  как-нибудь, да, и я думаю, что без проблем.
[01:02:52.820 --> 01:02:54.820]  Так вот, друзья,
[01:02:54.820 --> 01:02:56.820]  там же будет...
[01:02:56.820 --> 01:02:58.820]  ...
[01:02:58.820 --> 01:03:00.820]  ...
[01:03:00.820 --> 01:03:02.820]  ...
[01:03:02.820 --> 01:03:04.820]  ...
[01:03:04.820 --> 01:03:06.820]  ...
[01:03:06.820 --> 01:03:08.820]  ...
[01:03:08.820 --> 01:03:10.820]  ...
[01:03:10.820 --> 01:03:12.820]  ...
[01:03:12.820 --> 01:03:14.820]  ...
[01:03:14.820 --> 01:03:16.820]  ...
[01:03:16.820 --> 01:03:18.820]  ...
[01:03:18.820 --> 01:03:20.820]  ...
[01:03:20.820 --> 01:03:22.820]  ...
[01:03:22.820 --> 01:03:24.820]  ...
[01:03:24.820 --> 01:03:26.820]  ...
[01:03:26.820 --> 01:03:28.820]  ...
[01:03:28.820 --> 01:03:30.820]  ...
[01:03:30.820 --> 01:03:38.820]  Вот, ну в общем, красного какато здания будет очень полезно, чтобы сорганизовать этот курс. Максимально полезно, да.
[01:03:38.820 --> 01:03:49.820]  Ну что-то будет, конечно, общее, но полное, полного соперника. Но многое будет общее, на самом деле.
[01:03:49.820 --> 01:03:55.820]  Все, у нас время подошло, народ, как-то по времени.
