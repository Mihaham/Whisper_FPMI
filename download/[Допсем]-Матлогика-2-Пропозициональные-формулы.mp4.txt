[00:00.000 --> 00:07.600]  сказали про то, что такое языки формальные, рассмотрели формальный язык
[00:07.600 --> 00:13.280]  в правильной скорости по всей видимости. Сегодня мы начинаем рассматривать новый
[00:13.280 --> 00:19.760]  формальный язык, а именно, язык прополициональных форм.
[00:30.000 --> 00:50.000]  Рассматриваем, во-первых, сначала, если язык нам нужен алфавит. Давайте смотреть.
[00:50.000 --> 01:00.600]  Что у нас будет в алфавите по позициональной форме? Есть предложение?
[01:00.600 --> 01:16.320]  0.1? Можете? Нет, к сожалению.
[01:16.320 --> 01:28.440]  Переменные? Ну, вообще, да, давайте, смотрите, как сейчас будет. Мы выведем множество
[01:28.440 --> 01:35.040]  переменных. Да, давайте. Одно обычно называется ВАХ. Сейчас чуть позже отсюда. И дополнительно
[01:35.040 --> 01:40.720]  нам нужны, во-первых, ну, понятно, что нам нужны скобки. Без скобок мы никуда. Дальше,
[01:40.720 --> 01:49.520]  позициональная формула это какие-то записи того, что потом мы говорим более функции. Для того,
[01:49.520 --> 02:08.000]  чтобы записывать более функции нам понадобятся какие-то... Так совсем напишу. И понадобится нам
[02:08.000 --> 02:19.000]  еще какие-то значки операции. Мы выбираем значок конъюнции, дизъюнции, инверсии и импликации.
[02:19.000 --> 02:26.480]  Вот, четыре значка. Дополнительно у нас есть специальное множество ВАХ, о котором мы упомянули.
[02:26.480 --> 02:36.120]  Первый вопрос. Сколько вообще, какая мощность множества ВАХ? Какие есть предложения? Сколько
[02:36.120 --> 02:53.320]  всего переменных? Ну, наверное, сама переменная. Нет, про мощность. Сколько элементов
[02:53.320 --> 03:06.640]  множества? ВАХ это множество переменных. Сколько всего переменных в этом множестве?
[03:06.640 --> 03:18.600]  Один ноль, если мы говорим про более функции. Это уже не переменные, это конкретное значение,
[03:18.600 --> 03:25.960]  это немножко другое. Бесконечное количество можно же как сколько угодно. Вот, смотри, бесконечное,
[03:25.960 --> 03:33.040]  это уже правильно, потому что мы можем составить формулу с произвольным количеством переменных,
[03:33.040 --> 03:41.760]  и любой количества нам будет не хватать. Сколько надо, столько и будет. Не совсем, нельзя так сказать,
[03:41.760 --> 03:47.920]  сколько надо. Это в конкретных формулах, но язык же он состоит из слов, а формула — это какие-то
[03:47.920 --> 03:52.480]  слова. Поэтому нам нужно запастись так, чтобы хватило сразу на все возможные формулы
[03:52.480 --> 03:59.000]  попозициональные. То есть, как минимум, нам нужно какой-то язык, который будет достаточно для любого
[03:59.000 --> 04:06.960]  там А и А и А и А и так далее. Любого конечного числа конъюнции А само собой нам должно хватить,
[04:06.960 --> 04:13.240]  поэтому нам понадобится уже бесконечное. Но ответ бесконечный очень похож. Почему? Потому что
[04:13.320 --> 04:20.600]  заслон бесконечности, скрывается бесконечно много разных бесконечностей. У вас уже было,
[04:20.600 --> 04:29.720]  что тут про счетность, не счетность? Да. VAR-… Мы обычно считаем, что оно счетное.
[04:29.720 --> 04:48.920]  VAR я сразу не стал записывать в язык, в алфавит. Во-первых, ну, алфавит мы, как правило,
[04:48.920 --> 04:54.480]  хотим уж все-таки конечный алфавит, плюс и множество VAR будет некоторая другая роль,
[04:54.480 --> 05:04.280]  нежели чем и просто символ алфавита. Более подробно, почему так, будет понятно уже на втором курсе,
[05:04.280 --> 05:13.200]  когда будут грамматики на формальных языках. Плюс, почему отдельно вынесем множество VAR,
[05:13.200 --> 05:21.360]  мы поймем в курсе моторики, потому что мы постоянно будем ввод дополнять сверх. Оно всегда есть какие-то
[05:21.360 --> 05:30.320]  базовые элементы, откуда мы берем. Дальше мы задали алфавит, нам теперь нужно задать правило,
[05:30.320 --> 05:40.720]  как мы строим сами слова алфавита. Слова языка называются попозициональными формами. Пока мы вообще
[05:40.720 --> 05:48.400]  не подразумеваем никакого смысла по ними. Мы записали значок конъюнс и дизюнс,
[05:48.400 --> 05:56.400]  импликация инверсий, но никакого смысла в том, что это именно то, что предполагалось. Возможно,
[05:56.400 --> 06:08.360]  это просто умножение, сложение, деление, вычитание. Никто не запретит. Поэтому первое правило,
[06:08.360 --> 06:21.680]  что мы говорим, что X принадлежит VAR, это пропозициональная формула. Следовательно,
[06:21.680 --> 06:33.120]  X-пропозициональная формула. Только давайте я буду писать phi, а не X. Дальше phi-пропозициональная
[06:33.120 --> 06:42.560]  формула. Следовательно, отрицание phi-пропозициональная формула. Третье phi-psi-пропозициональная
[06:42.560 --> 07:02.800]  формула. Следовательно, первое это phi-конъюнция psi-пропозициональная формула. Дальше phi-дизюнция
[07:02.800 --> 07:15.160]  psi-пропозициональная формула. И импликация psi-пропозициональная формула. Особое внимание
[07:15.160 --> 07:26.840]  уделяем скобкам. Почему? Давайте посмотрим на следующую формулу. У нас есть A или B или C. С
[07:26.840 --> 07:35.880]  таким вы могли уже столкнуться, но является ли это пропозициональной формулой? С точки зрения
[07:35.880 --> 07:41.920]  формального введения этого множества, конечно же, это вообще не пропозициональная формула. Это не
[07:41.920 --> 07:53.720]  пойми что. Правильно было бы там написать либо A или B или C и при этом не забыть еще верхние,
[07:53.720 --> 08:09.360]  или A или B или C. Причем, вот например, с точки зрения смысла boolev функций, все три выражения,
[08:09.360 --> 08:21.600]  они являются одинаковыми, но с точки зрения синтезиса того, как мы водили, все три выражения это
[08:21.600 --> 08:29.480]  что-то разное. Первая это просто не пропозициональная формула, вторая это одна пропозициональная формула,
[08:29.480 --> 08:43.600]  вторая другая пропозициональная формула. Давайте упомянем следующие три определения. В прошлый раз
[08:43.600 --> 08:59.840]  мы особо с ними не столкнулись. Это суффикс, префикс и подслов. Соответственно, суффикс как
[08:59.840 --> 09:16.400]  обозначается? A является суффиксом B, это по определению обозначает, что существует такое
[09:16.400 --> 09:32.840]  слово C, что A конконтонация C есть B. Префикс A является префиксом B, по определению B. Если
[09:32.840 --> 09:49.960]  существует такое C, что C A равняется B. Наоборот, префикс A. Соответственно, A является подсловом,
[09:49.960 --> 10:03.200]  по определению существует C, существует D такие, что C A D равняется D. Как запомнить обозначение?
[10:03.200 --> 10:12.320]  Очень просто. Рисуем две палки, теперь вспоминаем, префикс это что-то в начале, поэтому палочка в
[10:12.320 --> 10:19.120]  начале. Если есть суффикс, то это что-то в конце, значит ставим палку в конце, под слово что-то внутри
[10:19.120 --> 10:31.600]  слова, палка внутри слова, всё. Смысл этих значков тривиальный. Отметим простое свойство про суффиксов,
[10:31.600 --> 10:43.360]  префиксов под слова, что для любого слова S выполнено в любом алфавите, а выполнено, что
[10:43.360 --> 10:55.640]  слово является собственным суффиксом, собственным префиксом и просто под словом. Смысл, что такое
[10:55.640 --> 11:21.800]  собственный, это нужно отдельно сказать. Давайте скажем, что такое собственное префикс-суффикс под
[11:21.800 --> 11:38.120]  слово. Это префикс-суффикс, давайте префикс-суффикс под слово такое, что не
[11:38.120 --> 12:04.520]  подает совсем слово. То есть, суффикс-префиксы по слова это знак нестрогого порядка, а собственные
[12:04.520 --> 12:10.520]  что-то там это уже строгий порядок, когда мы запретили равенство. Порядки уже были на
[12:10.520 --> 12:22.520]  УКДЧ или ещё нет? На Матане были. На Матане. Ну, хорошо, будем считать, что, конечно, у нас был
[12:22.520 --> 12:42.520]  УКЧ, но вроде бы он, нет, хорошо вроде. Поехали. Теперь дополнительно смотрим, что. Вот у нас были
[12:42.520 --> 12:51.520]  конъюнция, дизъюнция, инпликация, инверсия, сейчас, инверсия, инпликация. Давайте рассмотрим формулку вот
[12:51.520 --> 13:00.040]  такую. Все же мы помним, что у НОГКЧ, мы рассматриваем там что-то типа А к СОРБ. Давайте даже поставлю скобки.
[13:00.040 --> 13:15.040]  Вопрос это пропозициональная формула или нет? Нет. Нет. Но при этом это что-то, что задает синтезическую
[13:15.040 --> 13:32.040]  запись булефункций. Сейчас скажу. То, как мы задали пропозициональные формулы, это способ, который позволит
[13:32.040 --> 13:44.040]  в каждой булефункции спасать какую-то пропозициональную формулу, но не всегда это будет удобно в силу того, что
[13:44.040 --> 13:50.040]  какие-то булевые операции нам придется расписать при помощи конъюнции, дизъюнции и прочих операций.
[13:50.040 --> 13:57.040]  Например, к СОРБ. Мы не сможем просто записать красивым одним значком, нам нужно будет расписать более подробно.
[13:57.040 --> 14:08.040]  Поэтому, например, всякие к СОРЫ, экваленции, там что есть, штрихи шефера, стрелки пирса и прочие операции мы можем
[14:08.040 --> 14:15.040]  посмотреть, как просто некий такой синтезический сахар поверх языка пропозициональной формы.
[14:15.040 --> 14:26.040]  Давайте сразу запишем две теоремы, на которые потом мы будем ссылаться.
[14:26.040 --> 14:36.040]  Сразу предупреждаю. Теоремы я буду брать те, которые скорее всего у вас есть на реакциях.
[14:36.040 --> 14:41.040]  Если нет на реакциях, то они есть в висточках, которые должны выкладываться, видимо они будут чуть позже.
[14:41.040 --> 14:48.040]  Там доказательства есть, поэтому, ну, еще и СОРА сказывается, зачем тратить время на них.
[14:48.040 --> 14:52.040]  Тем, кому интересно, могут там почитать.
[14:52.040 --> 14:55.040]  Давайте.
[14:55.040 --> 15:08.040]  Теорема, да. Звучит так. Не существует, значок существования перечеркнутый, читается, как не существует.
[15:08.040 --> 15:33.040]  Не существует собственного префикса для пропозициональной формулы такого, что он сам является пропозициональной формулой.
[15:34.040 --> 15:48.040]  Да, это теорема о собственном префиксе, пропозициональной формуле. Это раз.
[15:48.040 --> 16:07.040]  Вторая теорема звучит так. Она о скобочном итоге, пропозициональной формуле.
[16:07.040 --> 16:34.040]  Для любой пропозициональной формулы выполняется, что любой ее префикс имеет неотрицательный скобочный итог.
[16:37.040 --> 17:06.040]  Причем, вот это вот нам особенно будет важно. Причем, он равен нулю тогда и только тогда, когда либо он и есть вся формула.
[17:06.040 --> 17:20.040]  Либо он принадлежит следующему языку. Что это за язык? Это язык всех возможных последовательностей из инпликации.
[17:20.040 --> 17:26.040]  То есть, просто на начале там стоит какой-то кусочек из нескольких инпликаций.
[17:26.040 --> 17:44.040]  Импликации? Ой, инверсии немножко. Можно называть это отрицанием, можно называть инверсией. Инверсия более такое.
[17:44.040 --> 18:03.040]  Иностранно-знаменственное слово. Хорошо. В общем, вот две теоремы. Их надо помнить. Они будут важны. Дайте дай название, чтобы как-то так.
[18:03.040 --> 18:13.040]  Теперь, что? Мы говорили про синтоксический. Нам на лекции первой тире очень старую вводили.
[18:13.040 --> 18:28.040]  Ну, в целом... В целом, она так и доказывается.
[18:28.040 --> 18:38.040]  Сначала мы показали, что скобочный ток не отрицательный, а дальше, ну, собственный префикс через это и будет доказан.
[18:38.040 --> 18:46.040]  Но доказательства... Ну, опустим этот, кто любит, тот на лекции походит, почитает, послушает.
[18:46.040 --> 18:58.040]  В общем, на этом мы заканчиваем с синтаксисом. Переходим к семантике. Возможно, слова звучат немножко непонятно.
[18:58.040 --> 19:09.040]  Поэтому давайте их расшифруем, потому что весь сматологический будет построен на том, что мы рассматриваем синтаксис, семантику и сравниваем их.
[19:09.040 --> 19:15.040]  Синтаксис – это то, как мы записываем. Это, по сути, формальные языки, их продолжение.
[19:15.040 --> 19:24.040]  Мы как-то берем, применяем теорию этих формальных языков, приводим новые языки, может быть, что-нибудь более интересное, чем просто языки.
[19:24.040 --> 19:36.040]  Дальше. Семантика – это смысл, то есть то, как мы понимаем то, что записали интересными значками.
[19:36.040 --> 19:46.040]  И, как правило, у нас есть синтаксическая формальная система и соответствующая ей модель того, как мы понимаем эту систему.
[19:46.040 --> 19:55.040]  Например, здесь у нас заданы языки пропозициональной формулы, у нас есть хорошая модель – это Boolean функции.
[19:55.040 --> 20:18.040]  И мы постоянно будем говорить про то, что они должны совпадать в одну сторону. То, что синтаксис задает семантику – это корректность, то есть он не задает ничего того, что мы не хотели бы понимать.
[20:18.040 --> 20:28.040]  А в обратную сторону, что любой элемент из модели мы можем как-то синтаксически записать – это будет полнота.
[20:28.040 --> 20:46.040]  Вот. У вас уже должна быть теорема корректности того, как мы ввели пропозициональные формулы и полноте, по-моему. Это будет точно в конспекте первой части.
[20:46.040 --> 20:51.040]  И это второй. Нет, это будет в конспекте второй части.
[20:57.040 --> 21:01.040]  Поэтому приступаем к семантике.
[21:03.040 --> 21:07.040]  Извините, а вы не могли бы еще раз показать теорему буквально на секундочку?
[21:07.040 --> 21:12.040]  Пожалуйста. Вот, пока теоремы просто так написаны.
[21:13.040 --> 21:19.040]  Извините, я просто отошел на это время. Вы не могли бы буквально на секунду и буквально сказать, в чем их краткий смысл?
[21:19.040 --> 21:21.040]  В чем их краткий смысл?
[21:21.040 --> 21:22.040]  Да.
[21:22.040 --> 21:37.040]  В общем, теорема о собственном префексе, что мы взяли нашу, сейчас скажу, что мы взяли какую-то произвольную пропозициональную формулу, и теперь мы хотим посмотреть на что-то, на какой-то его префикс.
[21:37.040 --> 21:48.040]  И посмотреть, может ли так, что две пропозициональные формулы, начинается одна, начнется с другой, и при этом это будет одно и то же. Так вот, теорема тоже значит, что такого невозможно.
[21:48.040 --> 21:58.040]  Если уже две пропозициональные формулы получились так, что одна является префиксом другой, то значит, какая-то из них не будет пропозициональной формулой.
[21:58.040 --> 22:07.040]  А вторая, это обобщение теоремы о скобочном итоге для правильных скобочных последовательностей.
[22:07.040 --> 22:16.040]  Там было, что любой префикс имеет неотрицательный скобочный итог, теперь мы... что делаем?
[22:16.040 --> 22:24.040]  Мы говорим, что он не просто неотрицательный, а говорим, когда конкретно он может равняться нулю. Немножко уточнили.
[22:24.040 --> 22:32.040]  Нулем он будет либо на всей формы, либо на каком-то префексе из инверсии.
[22:32.040 --> 22:36.040]  Извините, можно уточнить?
[22:36.040 --> 22:42.040]  Я не очень понимаю, почему так выходит. Мы ведь можем задать, типа, формулу...
[22:42.040 --> 22:50.040]  Ну, пропозициональную формулу, типа, так, чтобы другая была ее префиксом. Почему бы нет?
[22:50.040 --> 23:02.040]  Нельзя. Это доказанный факт. Если ты, конечно, сможешь так сделать, это будет интересно. Но есть подозрение, что не сможешь.
[23:02.040 --> 23:11.040]  Сейчас, а в чем там заключается суть того, что, типа, нельзя? Потому что там баланс больше нуля будет, или почему?
[23:11.040 --> 23:13.040]  Или, ну, типа...
[23:13.040 --> 23:27.040]  Сейчас, я сейчас чат мото логики, кину ссылку на файл с прошлого года, где доказаны все теоремы. И почему так, вам будет понятно.
[23:27.040 --> 23:29.040]  Все хорошо, полно спасибо.
[23:29.040 --> 23:31.040]  Да, давайте пока другой вопрос.
[23:31.040 --> 23:43.040]  Когда говорим, что скобочный итог префекса может быть равен нулю, если он принадлежит множеству звездок линии от инверсии,
[23:43.040 --> 23:48.040]  то мы подразумеваем, что в это множество входит вар?
[23:49.040 --> 23:53.040]  Сейчас.
[23:53.040 --> 24:07.040]  Какое множество? Нет. Мы конкретно задали... Смотри, я сразу разделил, что есть вар, а есть вот отдельные символы.
[24:07.040 --> 24:16.040]  Вар мы не включаем язык. Все, вот он живет как-то параллельно. Это просто хороший мешочек, откуда мы можем нацепить переменные.
[24:16.040 --> 24:21.040]  Все, вот просто...
[24:21.040 --> 24:30.040]  Давайте вторую. Все-таки, к сожалению, в прошлом году мне не запретили писать слишком часто.
[24:33.040 --> 24:40.040]  Лекция 2.4, она должна быть вызываться. Вот.
[24:41.040 --> 24:45.040]  Да.
[24:45.040 --> 24:50.040]  Так вот, руку поднял. Просто задавайте вопросы.
[24:53.040 --> 25:01.040]  Все, в чате Матлока я кинул ссылки на те лекции, в которых эти теоремы доказаны.
[25:03.040 --> 25:07.040]  Поэтому возвращаемся к буллинг функции.
[25:10.040 --> 25:17.040]  В общем, что такое буллифунция?
[25:17.040 --> 25:25.040]  Просто сказать, что такое буллифунция не совсем можно, потому что... Как у нас функция характеризуется?
[25:25.040 --> 25:30.040]  Она характеризуется множеством, из которого она действует, множеством, которое действует.
[25:30.040 --> 25:36.040]  А все буллифунции, они делятся на те множества, из которых они действуют.
[25:36.040 --> 25:47.040]  Поэтому нам придется сказать, что не просто буллифунция, а NR-ная буллифунция.
[25:47.040 --> 25:53.040]  Везде и далее я буду писать не буллифунции, а BF.
[25:53.040 --> 25:57.040]  Точно так же только по позициональной формулы я пишу PFO.
[25:58.040 --> 26:06.040]  Такие вот понятные термины я буду сокращать просто до аббреватуры из первых букв.
[26:06.040 --> 26:10.040]  Может кто-нибудь кинул ссылку на чат Матлогики?
[26:12.040 --> 26:19.040]  А это круто. В чате Матлогики будут у вас... Домашки укладываются, все.
[26:19.040 --> 26:23.040]  И пусть будут там есть какие-то вопросы, будут задавать туда, там будут отвечать.
[26:23.040 --> 26:28.040]  Поэтому, если кто еще не в чате Матлогики, обязательно туда присоединитесь.
[26:31.040 --> 26:40.040]  В общем, NR-ная. У нас появилось слово R-ная. Это прилагатель над слово R-ность.
[26:42.040 --> 26:48.040]  На УКТЧ уже должны были сказать, что R-ность это количество аргументов.
[26:48.040 --> 26:53.040]  Функции.
[26:57.040 --> 27:01.040]  Поэтому NR-ная буллифунция это функция от N аргументов.
[27:01.040 --> 27:05.040]  Тогда, что из себя представляет NR-ная буллифунция?
[27:05.040 --> 27:15.040]  Это F из 0,1 в степени N в 0,1.
[27:15.040 --> 27:19.040]  Все. Это определение того, что является NR-ной буллифунцией.
[27:19.040 --> 27:25.040]  Это комитет функций, которая действует из 0,1 степени N в 0,1.
[27:27.040 --> 27:35.040]  Просмотрим сначала две очень хорошие функции, которые могут быть в произвольной аргументации.
[27:36.040 --> 27:38.040]  Первая.
[27:45.040 --> 27:54.040]  Тождественный ноль. Обозначать будем его вот таким значком.
[27:55.040 --> 27:57.040]  Перевернутая буква T.
[28:01.040 --> 28:05.040]  Издается он как? Издается он следующим образом.
[28:05.040 --> 28:09.040]  Для любого x1, ну на самом деле x1.
[28:10.040 --> 28:12.040]  Для любого xn.
[28:12.040 --> 28:20.040]  Выполняется, что f от x1 тогда xn равняется 0.
[28:22.040 --> 28:26.040]  Аналогично с тем, что такое тождественный ноль.
[28:31.040 --> 28:35.040]  Только мы заменим 0 на 1, мы получим тождественную единицу.
[28:40.040 --> 28:42.040]  Единица.
[28:42.040 --> 28:46.040]  Но только теперь мы будем означать не перевернутой буквой T, а просто буквой T.
[28:47.040 --> 28:54.040]  На самом деле это не совсем буква T, но будем называть буквой T перевернутой буквой T.
[28:54.040 --> 28:57.040]  И тогда мы здесь требуем просто не 0, а единицу.
[28:59.040 --> 29:00.040]  Хорошо.
[29:00.040 --> 29:09.040]  Дальше более-менее такой практический смысл будут иметь бинарные функции.
[29:11.040 --> 29:16.040]  Ну и даже же тернарные они особо не нужны.
[29:18.040 --> 29:22.040]  Поэтому просто рассмотрим бинарные функции.
[29:22.040 --> 29:23.040]  Функции.
[29:28.040 --> 29:31.040]  Бинарные буревые функции.
[29:31.040 --> 29:35.040]  И их сколько всего может быть бинарных функций?
[29:35.040 --> 29:36.040]  Как понять?
[29:36.040 --> 29:37.040]  Смотрите.
[29:37.040 --> 29:40.040]  Вот у нас было определение функций.
[29:40.040 --> 29:48.040]  Что такое множество a в степени множества b?
[29:48.040 --> 29:52.040]  Это множество всех возможных функций из множества b множество a.
[29:52.040 --> 29:59.040]  Тогда все энарные буревые функции могут задаваться следующим выражением.
[29:59.040 --> 30:00.040]  Куда они действуют?
[30:00.040 --> 30:02.040]  Они действуют в 0,1.
[30:03.040 --> 30:07.040]  А действуют они из 0,1 в степени n.
[30:09.040 --> 30:15.040]  Соответственно, это следование или выполняется есть свой значок?
[30:15.040 --> 30:17.040]  У выполняется есть свой значок.
[30:19.040 --> 30:20.040]  Вот наш значок.
[30:20.040 --> 30:23.040]  Мы тогда в прошлый раз говорили.
[30:24.040 --> 30:26.040]  Когда у нас...
[30:29.040 --> 30:30.040]  Как он называется?
[30:30.040 --> 30:31.040]  Кручок.
[30:31.040 --> 30:33.040]  Хо крейтеров он называется.
[30:33.040 --> 30:35.040]  В лати их такой символ.
[30:37.040 --> 30:39.040]  Этот значок именно выполняется.
[30:39.040 --> 30:40.040]  Это не следование.
[30:40.040 --> 30:42.040]  Следование у нас...
[30:42.040 --> 30:44.040]  Они не совпадают.
[30:45.040 --> 30:49.040]  Здесь я везде пишу, когда выполняется, именно значок выполняется.
[30:51.040 --> 30:55.040]  У нас это определение того, что такое множество всех функций.
[30:55.040 --> 31:01.040]  А теперь мы хотим понять, сколько в принципе таких функций.
[31:04.040 --> 31:05.040]  Вопрос сколько?
[31:05.040 --> 31:07.040]  Это вопрос о мощности множества.
[31:07.040 --> 31:09.040]  То есть мы хотим узнать.
[31:10.040 --> 31:12.040]  Вот модуль ставим.
[31:14.040 --> 31:15.040]  Так.
[31:19.040 --> 31:20.040]  Дальше.
[31:20.040 --> 31:26.040]  Для конечных множеств есть свойство, что мы модули просто можем навесить и все в порядке.
[31:29.040 --> 31:30.040]  Хоп.
[31:34.040 --> 31:35.040]  Хоп.
[31:39.040 --> 31:40.040]  Хоп.
[31:40.040 --> 31:48.040]  Ну, понятно, что n это просто оно размножит множество само себя в n раз.
[31:49.040 --> 31:50.040]  Нет, в степи нет.
[31:50.040 --> 31:54.040]  Поэтому мы можем еще вот n вынести в верхней степи.
[31:58.040 --> 31:59.040]  Жух.
[32:02.040 --> 32:03.040]  Жух.
[32:04.040 --> 32:05.040]  Пум-пум-пум.
[32:06.040 --> 32:07.040]  Тройка, n.
[32:08.040 --> 32:16.040]  Тогда теперь у нас вся задача вопроса о мощности множества всех инарных функций
[32:16.040 --> 32:19.040]  связана с вопросу мощности множества 0,1.
[32:19.040 --> 32:21.040]  Ну понятно, что там было.
[32:21.040 --> 32:25.040]  Тогда это 2, здесь степень 2, степень n.
[32:26.040 --> 32:27.040]  Все.
[32:27.040 --> 32:33.040]  Вот так вот мы смогли посчитать, сколько всего существует инарных функций.
[32:33.040 --> 32:36.040]  Теперь рассмотрим, что бинарные функции.
[32:36.040 --> 32:38.040]  Сколько всего существует бинарных функций?
[32:38.040 --> 32:41.040]  Ну, подставляем в эту формулу вместо n2.
[32:41.040 --> 32:43.040]  Это равняется 2 в...
[32:43.040 --> 32:44.040]  Какой?
[32:44.040 --> 32:45.040]  2 в 2 это что?
[32:46.040 --> 32:47.040]  4?
[32:48.040 --> 32:50.040]  Равняется 16.
[32:50.040 --> 32:54.040]  Их, конечно, 16, но прям все мы рассматриваем не будем.
[32:57.040 --> 32:59.040]  Давайте пойдем постановим.
[32:59.040 --> 33:02.040]  Первое, ну понятно, что это будет.
[33:02.040 --> 33:04.040]  У нас уже были есть две.
[33:04.040 --> 33:07.040]  Это тождественное 0, тождественная единица.
[33:08.040 --> 33:12.040]  Удобным способом задания функции будет задание функции,
[33:12.040 --> 33:15.040]  когда мы будем рассматривать.
[33:15.040 --> 33:16.040]  Тождественная единица.
[33:18.040 --> 33:22.040]  Удобным способом задания функции будет таблица истинности.
[33:23.040 --> 33:25.040]  Думаю, что это такое объяснять не надо.
[33:26.040 --> 33:28.040]  Давайте начнем с дизюнции.
[33:30.040 --> 33:33.040]  Дизюнция.
[33:36.040 --> 33:37.040]  Поехали.
[33:38.040 --> 33:40.040]  Обозначается так.
[33:42.040 --> 33:44.040]  Дизюнция В.
[33:44.040 --> 33:46.040]  Таблица истинности у нас АВ.
[33:47.040 --> 33:49.040]  Как быстро чертить таблицу истинности?
[33:50.040 --> 33:54.040]  Можно 0, 1, 0, 0, 0, 0, 1, вот так вот,
[33:54.040 --> 33:57.040]  инкриментить единицу, а можно делать следующим образом.
[33:57.040 --> 34:00.040]  Мы начинаем чередовать 0, 1, 0, 1.
[34:01.040 --> 34:04.040]  А дальше мы увеличиваем количество подряд идущих в два раза.
[34:04.040 --> 34:06.040]  То есть здесь 0, 1, 0, 1.
[34:06.040 --> 34:09.040]  Тогда следующий ряд будет 0, 0, 1.
[34:09.040 --> 34:11.040]  Сейчас 0, 0, 1, 1.
[34:11.040 --> 34:12.040]  0, 0, 1, 1.
[34:12.040 --> 34:13.040]  1, 1.
[34:13.040 --> 34:16.040]  Дальше 3 будет 4 раза 0, 4 раза единица.
[34:16.040 --> 34:20.040]  Дальше еще одна впереди 8 раз 0, 8 раз единица и так далее.
[34:21.040 --> 34:23.040]  Это нам понадобится другого номера.
[34:25.040 --> 34:33.040]  И создаем мы нашу функцию на значении такого.
[34:33.040 --> 34:37.040]  На нулях это 0, везде остальных это единица.
[34:38.040 --> 34:40.040]  Хорошо.
[34:40.040 --> 34:42.040]  Давайте скопируем сразу табличку.
[34:44.040 --> 34:48.040]  Теперь у меня появляется функция конъюнция.
[34:53.040 --> 35:03.040]  Обозначается она как A, ну что-то типа большой лямбд b.
[35:04.040 --> 35:06.040]  Так, вжух.
[35:08.040 --> 35:15.040]  Теперь конъюнция работает по аналогии с дезюнцией, но только теперь она равна единице только на наборе с дезюнцией.
[35:15.040 --> 35:17.040]  Все.
[35:19.040 --> 35:21.040]  Дальше.
[35:21.040 --> 35:23.040]  Вот красиво получилось.
[35:25.040 --> 35:27.040]  Все очень хорошо.
[35:29.040 --> 35:31.040]  Конъюнция, дезюнция.
[35:31.040 --> 35:33.040]  Дезюнция, импликация.
[35:48.040 --> 35:54.040]  Импликация всегда равна единице, кроме одного случая, когда первая равняется единице, вторая равняется нулю.
[36:02.040 --> 36:05.040]  Импликация.
[36:05.040 --> 36:07.040]  Теперь мы возьмем что?
[36:07.040 --> 36:09.040]  Возьмем XOR.
[36:12.040 --> 36:15.040]  Ну или называется это по-другому.
[36:15.040 --> 36:21.040]  Исключающее или.
[36:25.040 --> 36:27.040]  Так.
[36:28.040 --> 36:30.040]  Какое там еще?
[36:31.040 --> 36:34.040]  Или еще можно называть его по-другому.
[36:34.040 --> 36:36.040]  Сложение по модулю 2.
[36:39.040 --> 36:41.040]  И все.
[36:47.040 --> 36:49.040]  Возьмем еще.
[36:49.040 --> 36:51.040]  Сложение.
[36:51.040 --> 36:53.040]  Ну.
[36:53.040 --> 36:55.040]  Из третьего названия.
[36:55.040 --> 36:57.040]  Сложение по модулю 2.
[37:01.040 --> 37:06.040]  Понятно, что как просто посчитать значение этой функции.
[37:06.040 --> 37:07.040]  Давайте сложим.
[37:07.040 --> 37:09.040]  Возьмем значение по модулю 2.
[37:09.040 --> 37:11.040]  0 плюс 0 это 0.
[37:11.040 --> 37:13.040]  0 плюс 1 это 1.
[37:13.040 --> 37:15.040]  0 плюс 0 это 1.
[37:15.040 --> 37:17.040]  1 плюс 1 это 2.
[37:17.040 --> 37:19.040]  0 плюс 0 это 0.
[37:19.040 --> 37:21.040]  0 плюс 1 это 1.
[37:21.040 --> 37:23.040]  0 плюс 0 это 1.
[37:23.040 --> 37:25.040]  1 плюс 1 это 2.
[37:25.040 --> 37:27.040]  По модулю 2 это 0.
[37:27.040 --> 37:31.040]  Взять по модулю это, ну, взять остаток отделения.
[37:33.040 --> 37:35.040]  Хорошо.
[37:35.040 --> 37:37.040]  XOR есть.
[37:37.040 --> 37:41.040]  Давайте возьмем отрицание XOR.
[37:41.040 --> 37:49.040]  Тогда получим функцию, которая будет равна 1 тогда и только тогда, когда обе переменные равны.
[37:49.040 --> 37:53.040]  Своего рода равенство.
[37:53.040 --> 37:55.040]  Эта функция называется эквиваленция.
[37:59.040 --> 38:03.040]  Эквиваленция.
[38:03.040 --> 38:09.040]  Обращу внимание, что это эквиваленция, не эквивалентность.
[38:09.040 --> 38:11.040]  Обозначаем мы ее следующим образом.
[38:11.040 --> 38:15.040]  Стрелки вправо-влево.
[38:15.040 --> 38:21.040]  Еще вариант обозначений, когда мы пишем 1, 2, 3.
[38:21.040 --> 38:25.040]  Возможно, в моданализе раз уже где-то писали 3.
[38:25.040 --> 38:31.040]  Обычно, когда хотят, чтобы точно совпадают, пишут 3 тройное равенство.
[38:31.040 --> 38:35.040]  Но мы будем пользоваться стрелочками вправо-вправо.
[38:35.040 --> 38:39.040]  Тогда она задается как?
[38:39.040 --> 38:41.040]  Звук.
[38:41.040 --> 38:45.040]  Ух ты, я тут не исправил значок.
[38:45.040 --> 38:49.040]  Значок как?
[38:49.040 --> 38:55.040]  Функция единиц тогда и только тогда, когда обе переменные принимают одно и то же значение.
[38:55.040 --> 38:57.040]  Жук-жук-жук.
[38:57.040 --> 38:59.040]  Эквиваленция.
[38:59.040 --> 39:03.040]  А теперь внимание две новых функции.
[39:03.040 --> 39:07.040]  Возможно, в школе вы уже с ними сталкивались.
[39:07.040 --> 39:09.040]  Возможно, нет.
[39:09.040 --> 39:13.040]  Это функции штрих-шефера и стрелка пирса.
[39:13.040 --> 39:19.040]  Их нужно запомнить, потому что на контрольной они скорее всего будут у вас использованы.
[39:19.040 --> 39:25.040]  Если вы их не помните, то есть шанс, что вы просто не сможете шикнуть.
[39:25.040 --> 39:31.040]  Штрих-шефера.
[39:31.040 --> 39:35.040]  Обозначается он как штрих.
[39:37.040 --> 39:39.040]  А-палка-б.
[39:39.040 --> 39:43.040]  Другое название, которое помогает его запомнить.
[39:43.040 --> 39:51.040]  Штрих-шефера называется еще как нанд.
[39:51.040 --> 39:57.040]  Нанд это not-end.
[40:01.040 --> 40:09.040]  Соответственно, это отрицание анда, а анд это конъюнция.
[40:09.040 --> 40:15.040]  Давайте уже вот так.
[40:15.040 --> 40:19.040]  Делаем парочку вот такого.
[40:19.040 --> 40:27.040]  Давайте справа запишем на всякий случай, как у нас выглядела конъюнция.
[40:27.040 --> 40:31.040]  Конъюнция это у нас 0,0,0,1.
[40:31.040 --> 40:33.040]  Теперь мы берем и отрицание.
[40:33.040 --> 40:35.040]  Получаем 1,1,1,0.
[40:35.040 --> 40:41.040]  И получаем штрих-шефера.
[40:41.040 --> 40:45.040]  По аналогии со штрихом шефера, здесь мы отрицали анд.
[40:45.040 --> 40:47.040]  Теперь мы можем отрицать ор.
[40:47.040 --> 40:55.040]  Получится функция nor или она называется стрелка пирса.
[40:55.040 --> 40:59.040]  Это очень хорошие функции.
[40:59.040 --> 41:03.040]  Чем из очень хорошей?
[41:03.040 --> 41:07.040]  Это будет вопрос следующей контрольной.
[41:07.040 --> 41:11.040]  Not-or.
[41:11.040 --> 41:15.040]  Обозначается он следующим образом.
[41:15.040 --> 41:23.040]  А, стрелка опущена вниз, B.
[41:23.040 --> 41:27.040]  Извините, а после экваленции какая функция была?
[41:27.040 --> 41:31.040]  После экваленции как раз штрих-шефера.
[41:31.040 --> 41:33.040]  А, штрих-шефера.
[41:33.040 --> 41:37.040]  Что он делает фактически?
[41:37.040 --> 41:39.040]  Ну, смотри, что такое функция.
[41:39.040 --> 41:41.040]  У тебя подается значение, набор значений.
[41:41.040 --> 41:47.040]  И она вот по набору значений возвращает какое-то другое значение.
[41:47.040 --> 41:49.040]  Так это же то же самое, что и.
[41:49.040 --> 41:51.040]  А, нет.
[41:51.040 --> 41:53.040]  Вот, зеленая.
[41:53.040 --> 41:55.040]  Это отрицание.
[41:55.040 --> 41:59.040]  А стрелка пирса это отрицание или.
[41:59.040 --> 42:03.040]  Там будет 1, 0, 0, 0.
[42:03.040 --> 42:09.040]  Тут я по сути рассказал все хорошие штуки.
[42:09.040 --> 42:13.040]  Помимо импликации есть еще такая штука как обратная импликация.
[42:13.040 --> 42:17.040]  То есть по сути как бы мы переставим B и A местами.
[42:17.040 --> 42:21.040]  Но это мы переставили после названия переменных.
[42:21.040 --> 42:23.040]  На самом деле функция осталась одна и та же.
[42:23.040 --> 42:33.040]  А именно чтобы сохранить позиции A и B, то нам нужно будет развернуть значок.
[42:33.040 --> 42:37.040]  Так мы получим то, что называется обратной импликацией.
[42:37.040 --> 42:41.040]  То есть 0 теперь будет здесь.
[42:41.040 --> 42:45.040]  Можно сделать отрицание импликации по аналогии с нандом нором.
[42:45.040 --> 42:51.040]  Тогда функция будет называться отрицание импликации, отрицание обратной импликации.
[42:51.040 --> 42:53.040]  Но это абсолютно не особо нужные функции.
[42:53.040 --> 42:57.040]  Я не уверен, что кому-то не понадобится.
[42:59.040 --> 43:01.040]  Хорошо.
[43:01.040 --> 43:07.040]  И функция, про которую я не упомянул.
[43:07.040 --> 43:11.040]  Вот это бинарные функции.
[43:11.040 --> 43:13.040]  Есть унарная функция.
[43:23.040 --> 43:25.040]  Инверсия.
[43:29.040 --> 43:31.040]  Или отрицание.
[43:35.040 --> 43:39.040]  Обозначаем ее как приставка A.
[43:39.040 --> 43:41.040]  И тогда ее таблица истинности есть.
[43:41.040 --> 43:47.040]  A 0 1 жух.
[43:47.040 --> 43:49.040]  Отрицание это 1 0.
[43:51.040 --> 43:53.040]  Дополнительно.
[43:53.040 --> 44:01.040]  По аналогии с тождественным нором, тождественные нинцы, которые были для всех абсолютно буревых функций.
[44:01.040 --> 44:09.040]  Есть для любой инарной функции.
[44:15.040 --> 44:21.040]  Функции такой, что n больше равняется нинце, мы можем определить функции проекторов.
[44:25.040 --> 44:27.040]  Проектор.
[44:27.040 --> 44:29.040]  Чего-то там.
[44:33.040 --> 44:35.040]  Вот чего-то там.
[44:35.040 --> 44:37.040]  Обозначаем это обычно как.
[44:37.040 --> 44:41.040]  Там можно на русском языке обозначать.
[44:41.040 --> 44:43.040]  Pr.
[44:43.040 --> 44:45.040]  It.
[44:45.040 --> 44:51.040]  Можно обозначать от A, тогда rep.
[44:51.040 --> 44:55.040]  Не так. От X1, тогда rep.
[44:55.040 --> 44:59.040]  Можно проектор через латиницу.
[44:59.040 --> 45:01.040]  Pr.
[45:01.040 --> 45:03.040]  X1, тогда rep.
[45:05.040 --> 45:07.040]  Что делает проектор?
[45:07.040 --> 45:09.040]  Как он определяется?
[45:09.040 --> 45:25.040]  То, что для любых X1, так далее, Xn выполнено, что проектор X it, X1, так далее, Xn равняется X it.
[45:27.040 --> 45:31.040]  Что такое многоточие в своем проекторе?
[45:31.040 --> 45:35.040]  Проектор какой именно координаты он?
[45:35.040 --> 45:39.040]  Например, мы можем взять для унарных функций.
[45:39.040 --> 45:43.040]  Можно взять проекции только одной координатой.
[45:43.040 --> 45:45.040]  Он там один.
[45:45.040 --> 45:47.040]  Для бинарных функций у нас два проектора.
[45:47.040 --> 45:51.040]  Проектор первой компоненты, второй компоненты.
[45:51.040 --> 45:55.040]  Для тернарных функций, то есть трех, это проектор первой
[45:55.040 --> 45:59.040]  компоненты, второй компоненты, третий компонент и так далее.
[45:59.040 --> 46:05.040]  И с инарной функцией все существует n проекторов.
[46:05.040 --> 46:14.480]  даст нулём, потому что для нулярной функции существует ноль проектов.
[46:18.120 --> 46:21.120]  Хорошо.
[46:24.840 --> 46:30.840]  Тогда вот мы задали как-то boolev функции, рассмотрели конкретные случаи.
[46:30.840 --> 46:40.320]  Дальше у нас есть теорема полнота-корректность,
[46:44.640 --> 46:50.480]  которая докажет, что у нас есть boolev, у нас есть пропозициональная формула,
[46:50.480 --> 46:57.440]  у нас есть boolev функции. Соответственно давайте я сделаю так.
[46:57.440 --> 47:05.320]  Корректность, тогда корректность работает как, что все пропозициональные формулы задают только boolev функции,
[47:05.320 --> 47:12.880]  это мы показали вложенность в одну сторону, а полнота покажет, что все boolev функции зададутся как-то
[47:12.880 --> 47:20.520]  пропозициональными формулами. Таким образом у нас есть вложение в одну сторону в другую сторону,
[47:20.520 --> 47:27.000]  поэтому мы имеем множество пропозициональных формул и множество boolev функций.
[47:27.000 --> 47:50.400]  Хорошо, а в чем разница между экваленцией и эквалентностью?
[47:50.400 --> 48:03.640]  Эквалентность это boolev функции, а эквалентность это понятие, которое в различных моментах может
[48:03.640 --> 48:08.200]  обозначать разные вещи. Эквалентность это именно boolev функции. Вот например сейчас мы скажем,
[48:08.200 --> 48:14.960]  что такое эквалентность пропозициональных формул. В таком случае эквалентность,
[48:14.960 --> 48:24.080]  вообще если определять формально, что это такое, это отношение... Это у меня экран погас, да?
[48:24.080 --> 48:35.120]  Извините, можно вопрос? Да. А что значит, что пропозициональные формулы, типа,
[48:35.120 --> 48:40.400]  содержатся в boolev функциях, а boolev функциях содержатся в пропозициональных формулах?
[48:40.400 --> 48:50.720]  Смотри, ну да, я не совсем корректно записываю именно вложение, что пропозициональные формулы,
[48:50.720 --> 48:58.280]  смотри, у нас есть... Даже не так. Вот boolev функции мы можем представлять при помощи этих значеков.
[48:58.280 --> 49:06.920]  Да. Дальше вот эти вот значки, которые более сложные boolev функции, мы можем выразить через
[49:06.920 --> 49:14.800]  более простые. Конюнция, дизюнция, инвекция, инверсия. Тогда boolev функции мы можем как-то
[49:14.800 --> 49:23.040]  задавать синтоксическими формулами. Ну да. Тогда теперь мы говорим, что у нас здесь слева есть
[49:23.040 --> 49:28.040]  какие-то слова на нашем алфавитам и справа есть какие-то слова на нашем алфавитам. И теперь
[49:28.040 --> 49:33.320]  мы говорим, что мы можем множество задаваемых слева совпадать с того, что задаваемых справа и
[49:33.320 --> 49:42.440]  в обратную сторону. Вот что это означает. Да, то есть здесь, да, не прям вложение,
[49:42.440 --> 49:48.840]  которое стандартное. Ну, оно просто будет две разные сущности, если я правильно понимаю.
[49:48.840 --> 50:09.880]  Давайте так скажу. Вот. L над BF это язык, который над boolev функции задали выше.
[50:18.840 --> 50:22.480]  Чисто формально, да. Вот так вот будет более правильно записать. Или там сказать, что по
[50:22.480 --> 50:29.400]  прозициональным форму мы можем посчитать значение, сопоставив boolev функции. Можно так смотреть,
[50:29.400 --> 50:53.480]  да, можно смотреть типа тут. В смысле, посчитали значение по тому, что выше.
[50:59.400 --> 51:05.000]  Можно состоять в таком смысле. Но давайте, да, чисто формально, мы возьмем, сделаем стрелочку,
[51:05.000 --> 51:10.240]  просто возьмем стрелочки. Вот у нас стрелочка туда, что можно по прозициональной формуле,
[51:10.240 --> 51:17.040]  что прозициональная форма задаст какую-то boolev функцию. И в обратную сторону стрелочка,
[51:17.040 --> 51:24.920]  что по любой boolev функции мы можем построить какую-то прозициональную форму. Я беру вот эту.
[51:24.920 --> 51:46.600]  Хорошо, давайте фреу, чтобы было чуть покрасивее.
[51:46.600 --> 51:58.440]  Я, кстати, да, если честно, я тоже сначала не мог понять пропозициональные формулы,
[51:58.440 --> 52:02.760]  они от boolev функции, потому что как бы они отличаются. У нас же там просто буквы,
[52:02.760 --> 52:07.720]  те же операции, что для boolev функции. Ну фактически это и есть boolev функции. То есть разницы никакой
[52:07.720 --> 52:13.880]  нет фактически. Нет, как раз фактически в чем разница, что пропозициональные формулы,
[52:14.440 --> 52:23.640]  почему формально нельзя было ставить знаки вложенности. Пропозициональная формула это синтаксис.
[52:23.640 --> 52:40.160]  Это синтаксис. Соответственно, по синтаксису мы можем только что-то, это какая-то система записи,
[52:40.160 --> 52:47.240]  просто иероглифы, которые мы смотрим как на иероглифы. Но мы можем этим иероглифом сопоставить
[52:47.240 --> 52:53.720]  какой-то смысл. Вот, как раз зеленая стрелочка, это мы посчитали значение по смыслу, который мы
[52:53.720 --> 53:06.400]  вот задали выше. А boolev функции это семантика. Это именно функции в том смысле, что вот какие-то
[53:06.400 --> 53:11.560]  объекты, которые берут... Короче, пропозициональная форма типа это значки, а boolev функции это то,
[53:11.560 --> 53:17.880]  что эти значки обозначают. Да, вот. Эти ориенты полноте корректности говорят о том, что наша
[53:17.880 --> 53:23.760]  система записи и наша система смысла, они друг друга дополняют и не противоречны.
[53:23.760 --> 53:44.440]  Сейчас понятнее? Да. Супер. По аналогии с этим мы еще очень много раз придем куда-то в этой
[53:44.440 --> 53:50.000]  схеме, когда у нас будет слева синтаксис, справа семантика, теория полноте корректности. Поэтому
[53:50.000 --> 53:58.560]  просто готовься морально. В общем, теперь, так как мы знаем, что с пропозициональной формой мы можем
[53:58.560 --> 54:08.000]  сопоставить какую-то boolev функцию наоборот, то мы можем вести отношение на языке пропозициональной
[54:08.000 --> 54:15.520]  формы. Отношение это предикат бинарный, то есть множество всех пар, причем это будет отношение
[54:15.520 --> 54:23.840]  эквивалентности. В прямом смысле, который был один из классов бинарных предикатов, что оно
[54:23.840 --> 54:41.280]  рефлексивно-симметрично-транзитивно. Ох, боги. Эквивалентность пропозициональных форм. Эквивалентность
[54:41.280 --> 54:54.880]  пропозициональной формы мы будем означать следующим образом. Фи-1 значок эквиваленции psi. Так вот,
[54:54.880 --> 55:08.680]  фи эквалентно psi тогда и только тогда, когда, давайте скажу, boolev функция psi,
[55:08.680 --> 55:31.120]  даже действительно совпадает с boolev функцией от psi. Даже не так просто, в основном совпадение функции.
[55:31.120 --> 55:44.680]  Из укатча вспоминаем, что такое функция. Функция это множество пар. Что такое совпадение множества,
[55:44.680 --> 55:50.240]  это вложение одного множества в другое, то есть там пары, которые содержатся слева, и пары,
[55:50.240 --> 55:58.960]  которые содержатся вправо, они все как-то там в обоих. Хорошо, ну понять, что это действительно
[55:58.960 --> 56:05.360]  отношение эквивалентности на языке пропозициональных формул. Не составит трудностей,
[56:05.360 --> 56:12.600]  если кому-то интересно, может. Эквивалентность пропозиционных формул это именно графическое,
[56:12.600 --> 56:23.640]  да? Правильно понимаешь? Где? Эквивалентность пропозиционных формул это именно графическое
[56:23.640 --> 56:38.680]  равенство, да? Нет, смотри. Пример. Давай вот я возьму, например, формулу A и A. Вот они эквивалентны,
[56:38.680 --> 56:47.560]  две формулы. Или я могу, это очень тупой пример, я просто там саму собой формулу сделал,
[56:47.560 --> 57:04.040]  можно сделать чуть более. Вот там их много. Понял, понял. Хорошо, теперь мы можем их как-то
[57:04.040 --> 57:12.840]  проклассифицировать по тому, что задают эти пропозициональные формы, а именно у нас есть четыре
[57:12.840 --> 57:30.720]  таких вот класса. Первая тавтология, то есть буливая функция от phi является единицей. Дальше
[57:30.720 --> 57:52.160]  противоречие. Дальше есть выполнимое. Мы и не, и опровержимые.
[57:52.160 --> 58:09.120]  Противоречие это такие, что буливая функция от phi это тождественная ноль. Выполнимое,
[58:09.120 --> 58:23.200]  что существует x1, и так далее, xn, что буливая функция от phi на наборе значений x1, xn понимает
[58:23.200 --> 58:36.200]  значение единицу. Опровержимое, что существует набор значений такое, что буливая функция на
[58:36.200 --> 58:51.320]  нём будет принимать значение ноль. Всё, четыре таких вот класса. Давайте по... там вопросы пока вот
[58:51.320 --> 58:56.840]  по этому пункту, по позициональной формуле буливой функции x5.
[59:07.200 --> 59:15.640]  Попросов нет? Хорошо, тогда идём дальше. Вот в конспекте по-другому обозначается,
[59:15.640 --> 59:26.520]  phi по позициональной формуле phi обрамляется в квадратной скобке. Ну, если так, то возможно,
[59:26.520 --> 59:35.480]  да, будет сейчас, возможно, лучше писать так, как в лекциях, но сейчас... И так можно,
[59:35.480 --> 59:47.160]  получается, да. Давайте, да, давайте я сделаю так, что вот, давайте я вспомню особое значение, x1, xn.
[59:47.160 --> 01:00:02.120]  Вот, это же так, как в лекции, да? А если правильно помню? Да, да, да, всё так. Супер топ. Да, то есть здесь я буливую
[01:00:02.120 --> 01:00:08.560]  функции, я просто вот особое обозначение, что это буливая функция, задаваемая этой формулой. Я говорю,
[01:00:08.560 --> 01:00:14.240]  что я не хочу конкретные значения функции писать, потому что, наверное, вам нам от анализей должны
[01:00:14.240 --> 01:00:22.640]  бы и рассказывать, что, например, когда мы пишем f от x, это не функция, это значение функции на x,
[01:00:22.640 --> 01:00:28.800]  а это какое-то число. А сама функция правильной записи, это просто f. Это именно функция. То есть,
[01:00:28.800 --> 01:00:36.880]  если мы формально смотрим, то вверху у нас какое-то число, снизу это функция. Поэтому вот, чтобы
[01:00:36.880 --> 01:00:43.440]  именно саму функцию показать, я буду писать как bf от phi. Это именно сама функция. А его значение
[01:00:43.440 --> 01:00:52.120]  будем писать, что значение. Поприсенсиональный формул на наборе таким, на наборе x1, xn это такая
[01:00:52.120 --> 01:01:08.440]  штучка. Хорошо. Спасибо за замечание. Давайте переходить к dnf, knf. И да, это будет последняя
[01:01:08.440 --> 01:01:24.080]  тема, против которую можно подержать. Dnf, knf. Поехали. Начинаем, конечно же, с определений. Первое
[01:01:24.080 --> 01:01:45.920]  определение это литерал. Что литерал? Это переменная или ее отрицание. Хорошо. То есть,
[01:01:45.920 --> 01:01:54.800]  если мы помним, в прошлый раз мы говорили про дерево распора. Сейчас мы определили своего рода листья
[01:01:54.800 --> 01:02:00.920]  нашего дерева. Нам нужно было определить, какие базовые элементы. Базовые элементы это литералы.
[01:02:00.920 --> 01:02:06.880]  Теперь мы можем объединять литералы. Как мы можем объединять? Литералы мы можем объединять дизюнцы
[01:02:06.880 --> 01:02:12.480]  или коньюнцы. Соответственно, когда мы литералы объединяем дизюнцей, мы получаем дизюнт.
[01:02:12.480 --> 01:02:38.760]  Это дизюнция литералов. Коньюнция литералов.
[01:02:42.480 --> 01:02:55.520]  Литералов. Хорошо. Теперь мы можем объединять дизюнты и коньюнты. Дизюнты как мы можем объединить?
[01:02:55.520 --> 01:03:00.800]  Но если мы объединим дизюнцы, то по сути у нас два дизюнта все равно сохранят свойство быть
[01:03:00.800 --> 01:03:09.040]  дизюнтом. Поэтому единственный способ объединять дизюнты это коньюнция. И объединив коньюнцы и
[01:03:09.040 --> 01:03:13.200]  дизюнты мы получим кнр. Коньюнтивно нормальную форму.
[01:03:13.200 --> 01:03:33.920]  Р. Коньюнция дизюнтов. Дальше dnf по аналогии с кнр. Это дизюнцы.
[01:03:33.920 --> 01:03:55.240]  Коньюнтов. Хорошо. Давайте посмотрим, что. Когда, во-первых, кнр и dnf могут совпадать? И могут ли?
[01:03:55.240 --> 01:04:09.280]  Что значит кнр и dnf совпадают? Давайте посмотрим, когда кнр может совпадать с dnf.
[01:04:09.280 --> 01:04:16.280]  Кнр на самом верхнем уровне это коньюнция дизюнтов. То есть выглядит она будет как-то так.
[01:04:16.280 --> 01:04:26.560]  Коньюнция вот здесь, что-то там, дизюнция что-то там, как-то так.
[01:04:26.560 --> 01:04:37.160]  Dnf же в свою очередь выглядит как дизюнция чего-то там, что дальше сконьюнтируется.
[01:04:37.160 --> 01:04:46.120]  Вот как нам сделать? Смотрите, коньюнции нескольких, но коньюнция одна с самым собой.
[01:04:46.120 --> 01:04:52.800]  Одного просто коньюнция. То есть это что-то, к чему мы просто не дописали значок вот этого.
[01:04:52.800 --> 01:05:00.240]  То есть наверху мы сохраним просто значок дизюнца или коньюнца. И этот прием как раз заключается в том,
[01:05:00.240 --> 01:05:08.820]  когда они могут равняться. Если мы возьмем просто один дизюнт, то мы формально удовлетворяем
[01:05:08.820 --> 01:05:18.220]  определение кнр. У нас будет просто дизюнция литералов. Тогда здесь что нам нужно? Нам нужно,
[01:05:18.220 --> 01:05:28.740]  чтобы все коньюнты, они состояли из одной переменной или ее отрицания. То есть здесь у нас l1
[01:05:28.740 --> 01:05:36.980]  или l2 или так далее. Здесь у нас точно также превратится в l1 или l2 или так далее.
[01:05:36.980 --> 01:05:44.500]  Это когда могут равняться первые случаи. Второй случай абсолютно аналогичный тому,
[01:05:44.500 --> 01:05:50.460]  что было. Извините, я не очень понял. Я не очень понял сейчас, когда они равны. У нас же там
[01:05:50.460 --> 01:06:00.580]  коньюнция, там дизюнция. Почему вы записали, что и там дизюнция? И справа тоже. Окей. Смотри,
[01:06:00.580 --> 01:06:10.860]  давай смотреть на первый случай. Вот у нас два случая. l это литерал. Вот что такое здесь?
[01:06:10.860 --> 01:06:34.540]  Вот у меня есть n раз коньюнтились какие-то литералы. Это что по определению? Дизюнт.
[01:06:34.540 --> 01:06:49.580]  Смотри, knf это коньюнция дизюнтов. А что если у меня только один дизюнт? Он же тоже по сути
[01:06:49.580 --> 01:06:58.700]  коньюнция дизюнтов. Только он один. То есть я просто не написал дальше значка вот этого коньюнции.
[01:06:58.700 --> 01:07:12.300]  То есть это только если один дизюнт. Да, это вот все один дизюнт. А что? Тут у меня теперь коньюнты,
[01:07:12.300 --> 01:07:19.420]  которые создаются на перемену. То есть получается, что литерал, если он один,
[01:07:19.420 --> 01:07:27.260]  сам по себе, он является и коньюнтом, и дизюнтом? Да. Ага, понятно. То есть если у нас просто на
[01:07:27.260 --> 01:07:34.740]  перемену, она может быть и knf, и dnf. Ну, это частный случай от того, что мы здесь расписали,
[01:07:34.740 --> 01:07:38.620]  просто когда у нас мы же что-то написали n, n может равняться единице.
[01:07:38.620 --> 01:07:50.700]  Плюс еще есть такая штука как пустые коньюнты и дизюнты. Сни, например, что такое пустой дизюнт?
[01:07:50.700 --> 01:08:00.940]  Пустой коньюнт. Давайте не будем это пока не надо. Я сейчас буду долго думать.
[01:08:00.940 --> 01:08:23.980]  В общем, n может равняться 0, тогда вы удивитесь, но мы придем к тому, что это будет...
[01:08:23.980 --> 01:08:36.020]  Тогда это будет вот такие два значка. Эти два значка, если мы вспомним это,
[01:08:36.020 --> 01:08:41.140]  тождественная истина и тождественная рожь. Что есть что, узнаем позже.
[01:08:41.140 --> 01:08:52.420]  А n – это количество наших дизюнтов и коньюнтов?
[01:08:52.420 --> 01:08:59.860]  n – это просто количество литералов. Оно может быть любым натуральным числом.
[01:08:59.860 --> 01:09:02.820]  Еще раз напоминаю, что натуральное число – 0.
[01:09:02.820 --> 01:09:17.820]  Но это так, рандомный факт, на который пока можно забить.
[01:09:17.820 --> 01:09:39.820]  Вот, например, пустой дизюнт – это тождественная рожь, пустой коньюнт – это тождественная истина.
[01:09:39.820 --> 01:09:53.820]  Давайте я это удалю, потому что еще собьет кого-то, в смысле, кто будет это считать.
[01:09:53.820 --> 01:10:05.660]  Хорошо. Вот. Мы знаем, что такое кнф, днф, как их строить. Все помнят, сколько это человек
[01:10:05.660 --> 01:10:09.660]  может строить алгоритм по строению. Нужно еще раз повторить.
[01:10:09.660 --> 01:10:13.660]  Ну, я помню.
[01:10:13.660 --> 01:10:21.660]  Супер. Тогда опустим алгоритм по строению кнфа, днфа. Прямо на практике там построим, посмотрим, что как.
[01:10:21.660 --> 01:10:34.660]  Теперь мы хотим не просто кнфа, днфа, а хотим скнф сделать… скнф, s, dnf.
[01:10:34.660 --> 01:10:55.660]  Это все те же кнфы, днфы. Вот, s – это совершенная кнф, днф.
[01:10:55.660 --> 01:11:14.660]  Причем, что означает «совершенная»? То есть такая, что… первое. То есть для совершенного кнфа, днфа у нас есть два условия.
[01:11:14.660 --> 01:11:37.660]  Первое условие, что в любом конъюнте или дизъюнте, в зависимости от того, что смотрим,
[01:11:37.660 --> 01:11:55.660]  каждая переменная встречается ровно один раз.
[01:11:55.660 --> 01:12:13.660]  Второе, что нет повторов дизъюнтов, кунюнтов.
[01:12:13.660 --> 01:12:25.660]  Ну, очевидно, что мы можем перемещать. Давайте посмотрим, что. Например, вот здесь. Примером будет.
[01:12:25.660 --> 01:12:44.660]  А или не Б. Это не является совершенной дизъюнтной нормальной формы, потому что у нас повторяются…
[01:12:44.660 --> 01:13:03.660]  Совершенно конъюнтивно нормальная форма, потому что у нас повторяются два дизъюнта.
[01:13:03.660 --> 01:13:10.660]  А что поднимается под повтором? Это не значит, что один и тот же?
[01:13:10.660 --> 01:13:14.660]  Ну вот, у нас один и тот же дизъюнт прошел. Вот в этом примере.
[01:13:14.660 --> 01:13:18.660]  А почему он один и тот же?
[01:13:18.660 --> 01:13:20.660]  Ну, давай переставим Б и А местами.
[01:13:20.660 --> 01:13:27.660]  А, подождите, это двойка? Или это Б в первом случае?
[01:13:27.660 --> 01:13:29.660]  Это отрицание у нас.
[01:13:29.660 --> 01:13:30.660]  А, это отрицание. Все, понял.
[01:13:30.660 --> 01:13:34.660]  В общем, в матологике практически не будет чисел.
[01:13:34.660 --> 01:13:41.660]  А вот можно тебе первое показать еще раз? Первый пункт.
[01:13:41.660 --> 01:13:46.660]  Да, то есть, пусть у нас там было что?
[01:13:46.660 --> 01:13:54.660]  Ну, например, у нас была функция от трех переменных.
[01:13:54.660 --> 01:14:01.660]  Если у нас встретился дизъюнт, в котором две переменные, то понятно, что у нас есть какая-то переменная,
[01:14:01.660 --> 01:14:05.660]  которая не вошла в этот дизъюнт, поэтому это несовершенно.
[01:14:05.660 --> 01:14:12.660]  Совершенно мы прям хотим, чтобы в каждом дизъюнте была каждая переменная.
[01:14:12.660 --> 01:14:19.660]  Вот когда алгоритм построения KNF-DNF, мы на самом деле строим из KNF, из DNF.
[01:14:19.660 --> 01:14:25.660]  То есть мы берем каждую переменную, там с отрицанием и с этим, их там дизъюнтим-конюнтим,
[01:14:25.660 --> 01:14:28.660]  потом все полученные штуки дизъюнтим-конюнтим,
[01:14:28.660 --> 01:14:32.660]  и получаем совершенно конъюнтим нормальную или совершенно дизъюнтим нормальную.
[01:14:32.660 --> 01:14:40.660]  А если я возьму A или не A и B,
[01:14:40.660 --> 01:14:46.660]  ну понятно, что это не является совершенно дизъюнтим нормальной формой,
[01:14:46.660 --> 01:14:50.660]  потому что в первом конюнте у меня нету переменной B.
[01:14:50.660 --> 01:14:55.660]  Или даже если у меня все будут одинаково длинные, но у меня будет на самом деле
[01:14:55.660 --> 01:15:00.660]  пересыпеременных больше, то у меня не подпадает под определение,
[01:15:00.660 --> 01:15:03.660]  что каждая переменная состоится ровно один раз.
[01:15:09.660 --> 01:15:12.660]  Что такое совершенно? Понятно ли еще есть вопросы?
[01:15:12.660 --> 01:15:14.660]  Ну такие, видимо, вопросов нет.
[01:15:14.660 --> 01:15:19.660]  Хорошо. Мы можем теперь делать их совершенными, мы знаем алгоритм,
[01:15:19.660 --> 01:15:25.660]  но проблема с совершенными, что они какие-то уже очень слишком здоровые и не слишком удобные.
[01:15:25.660 --> 01:15:31.660]  На самом деле вот у нас пример, который я привел в случае, когда не каждый пример,
[01:15:31.660 --> 01:15:33.660]  но я не знаю, как это делать.
[01:15:33.660 --> 01:15:35.660]  Я не знаю, как это делать.
[01:15:35.660 --> 01:15:37.660]  И не слишком удобные.
[01:15:37.660 --> 01:15:41.660]  На самом деле вот пример, который я привел в случае,
[01:15:41.660 --> 01:15:43.660]  когда не каждая переменная входит один раз,
[01:15:43.660 --> 01:15:45.660]  мы можем их немножко упрощать.
[01:15:45.660 --> 01:15:48.660]  И как их упрощать?
[01:15:50.660 --> 01:15:56.660]  На этот вопрос дает решение, дает ответ метод карт-карно.
[01:15:56.660 --> 01:16:04.660]  В общем, для этого давайте просто вспомним про то, что есть такой объект, как булиф куб.
[01:16:04.660 --> 01:16:07.660]  Куб в смысле Rn.
[01:16:07.660 --> 01:16:11.660]  У вас уже были бы многомерные пространства на мотонализе?
[01:16:11.660 --> 01:16:13.660]  На мотонализе нет.
[01:16:13.660 --> 01:16:15.660]  Ну, в общем, я не знаю.
[01:16:15.660 --> 01:16:17.660]  Я не знаю.
[01:16:17.660 --> 01:16:19.660]  Я не знаю.
[01:16:19.660 --> 01:16:21.660]  Я не знаю.
[01:16:21.660 --> 01:16:23.660]  Я не знаю.
[01:16:23.660 --> 01:16:25.660]  Я не знаю.
[01:16:25.660 --> 01:16:27.660]  В мотонализе нет.
[01:16:27.660 --> 01:16:29.660]  Нали-нали?
[01:16:29.660 --> 01:16:33.660]  Ну, как сказать, просто вводилось.
[01:16:33.660 --> 01:16:35.660]  Ноги?
[01:16:37.660 --> 01:16:45.660]  Ну, короче, что такое там пространство размерности 2, R2, R3, R4?
[01:16:45.660 --> 01:16:47.660]  Вы пока не знаете, да?
[01:16:47.660 --> 01:16:50.660]  Нет, мы только это знаем.
[01:16:50.660 --> 01:16:56.660]  То, что там базис может больше, чем 3 векторов состоять и все.
[01:16:56.660 --> 01:17:01.660]  Ну, базис, вообще базис инмерного пространства будет состоять ровный из n векторов.
[01:17:01.660 --> 01:17:03.660]  Ну, вот, да, только это знаем.
[01:17:03.660 --> 01:17:04.660]  Окей.
[01:17:04.660 --> 01:17:06.660]  В общем, хорошо.
[01:17:06.660 --> 01:17:09.660]  Тогда работа в пространстве R3.
[01:17:09.660 --> 01:17:12.660]  Это обычное наше трехмерное пространство.
[01:17:12.660 --> 01:17:14.660]  Евпидо-школьное.
[01:17:14.660 --> 01:17:16.660]  Родистериометрия же в школе есть.
[01:17:17.660 --> 01:17:19.660]  В общем.
[01:17:22.660 --> 01:17:28.660]  Мы можем работать с геометрией только до пространства R3.
[01:17:28.660 --> 01:17:37.660]  Чуть дальше у нас уже начнутся беды, потому что, ну, как нам нарисовать чьи трехмерные пространства на листочке бумаги, мы пока это не знаем.
[01:17:40.660 --> 01:17:44.660]  Вон, давайте я куб нарисую этот.
[01:17:44.660 --> 01:17:47.660]  Вот у меня есть були в куб.
[01:17:53.660 --> 01:17:58.660]  Например, что такое куб в пространстве R2, то есть в обычной плоскости это квадрат.
[01:17:58.660 --> 01:18:03.660]  Куб в пространстве R1, то есть прямая плоскость.
[01:18:03.660 --> 01:18:09.660]  Куб в пространстве R2, то есть в обычной плоскости это квадрат.
[01:18:09.660 --> 01:18:14.660]  Куб в пространстве R1, то есть прямая, это точка.
[01:18:14.660 --> 01:18:15.660]  Да.
[01:18:15.660 --> 01:18:20.660]  Внезапно потом у нас появляется в R4 у нас еще есть более крутой куб и так далее и тому подобное.
[01:18:20.660 --> 01:18:22.660]  Вот у нас есть були в куб.
[01:18:22.660 --> 01:18:23.660]  Что на себе представляет?
[01:18:23.660 --> 01:18:25.660]  У нас есть какая-то вершинка.
[01:18:25.660 --> 01:18:28.660]  Мы говорим, что это вершинка 0,0.
[01:18:28.660 --> 01:18:29.660]  3,0.
[01:18:29.660 --> 01:18:31.660]  Ну, 3,0 это...
[01:18:35.660 --> 01:18:37.660]  Давайте я вот так.
[01:18:37.660 --> 01:18:38.660]  Давайте я вот так.
[01:18:42.660 --> 01:18:43.660]  Жух.
[01:18:43.660 --> 01:18:44.660]  Это вот.
[01:18:44.660 --> 01:18:45.660]  Давайте.
[01:18:45.660 --> 01:18:46.660]  X1,
[01:18:48.660 --> 01:18:49.660]  X2,
[01:18:51.660 --> 01:18:52.660]  X3.
[01:18:52.660 --> 01:18:53.660]  Соответственно у нас здесь координаты.
[01:18:53.660 --> 01:18:55.660]  Это 0,0,0.
[01:18:55.660 --> 01:18:59.660]  Значит здесь координата 1,0,0.
[01:18:59.660 --> 01:19:01.660]  Здесь координата 0,1,0.
[01:19:01.660 --> 01:19:03.660]  Здесь координата 0,0,1.
[01:19:04.660 --> 01:19:08.660]  Господи, хотя бы я могу диаметрию 0,0,1.
[01:19:10.660 --> 01:19:11.660]  0,1,
[01:19:12.660 --> 01:19:13.660]  0,
[01:19:13.660 --> 01:19:14.660]  1,1,
[01:19:14.660 --> 01:19:15.660]  1,1,1.
[01:19:15.660 --> 01:19:16.660]  Вот.
[01:19:16.660 --> 01:19:18.660]  У нас 8 вершин.
[01:19:19.660 --> 01:19:22.660]  В ономерном пространстве у нас будет 2 степени вершин.
[01:19:25.660 --> 01:19:29.660]  И вот как-то единичный куб, вершины.
[01:19:29.660 --> 01:19:30.660]  Тогда,
[01:19:30.660 --> 01:19:33.660]  во-первых, у нас свойства всех ребер,
[01:19:33.660 --> 01:19:35.660]  которые мы можем отметить, что
[01:19:37.660 --> 01:19:41.660]  все ребра отличаются ровно по одной координате на единицу.
[01:19:42.660 --> 01:19:44.660]  Отличается только одна координата и на единицу.
[01:19:44.660 --> 01:19:46.660]  Две остальные сохраняются.
[01:19:46.660 --> 01:19:47.660]  Всё.
[01:19:47.660 --> 01:19:48.660]  Это важно помнить.
[01:19:48.660 --> 01:19:49.660]  Дальше.
[01:19:49.660 --> 01:19:55.660]  В этих вершинах мы записываем значение функций на соответствующем наборе.
[01:19:55.660 --> 01:19:57.660]  Здесь у нас набор вот этого.
[01:19:57.660 --> 01:19:58.660]  0,0,0.
[01:19:58.660 --> 01:19:59.660]  Здесь набор 0,1,1.
[01:20:00.660 --> 01:20:01.660]  И так далее.
[01:20:01.660 --> 01:20:02.660]  Вот.
[01:20:02.660 --> 01:20:04.660]  Есть такая штука, как булевку.
[01:20:04.660 --> 01:20:07.660]  Это всё красиво, приятно.
[01:20:07.660 --> 01:20:08.660]  Но.
[01:20:08.660 --> 01:20:09.660]  Есть одно но.
[01:20:09.660 --> 01:20:12.660]  Немножко неудобно каждый раз чертить этот куб.
[01:20:12.660 --> 01:20:13.660]  И так далее.
[01:20:13.660 --> 01:20:17.660]  Поэтому мы можем куб спроекцировать на плоскость.
[01:20:17.660 --> 01:20:19.660]  При помощи карты Карно.
[01:20:19.660 --> 01:20:24.660]  И в принципе все карты Карно это есть своего рода проекция булевого куба.
[01:20:24.660 --> 01:20:26.660]  В ономерном пространстве.
[01:20:29.660 --> 01:20:30.660]  Так.
[01:20:30.660 --> 01:20:32.660]  Поехали рисовать.
[01:20:33.660 --> 01:20:35.660]  Как мы проекцируем его?
[01:20:37.660 --> 01:20:41.660]  Проекцируем мы его следующим образом.
[01:20:58.660 --> 01:21:04.660]  Дальше теперь сделаем какую-нибудь цветную штучку.
[01:21:04.660 --> 01:21:06.660]  Давайте оранжем.
[01:21:15.660 --> 01:21:16.660]  Всё.
[01:21:16.660 --> 01:21:17.660]  Хорошо.
[01:21:17.660 --> 01:21:18.660]  Теперь.
[01:21:18.660 --> 01:21:20.660]  Там где четыре штуки.
[01:21:20.660 --> 01:21:22.660]  Туда мы записываем две переменные.
[01:21:22.660 --> 01:21:24.660]  Давайте я запишу сюда.
[01:21:24.660 --> 01:21:26.660]  Советую один раз делать.
[01:21:26.660 --> 01:21:28.660]  И всегда потом.
[01:21:28.660 --> 01:21:31.660]  Здесь у меня будет переменная.
[01:21:31.660 --> 01:21:32.660]  Х.
[01:21:32.660 --> 01:21:33.660]  П.
[01:21:33.660 --> 01:21:35.660]  Куяру будем сделать.
[01:21:35.660 --> 01:21:37.660]  Поэтому здесь будет переменная ПК.
[01:21:37.660 --> 01:21:39.660]  Здесь же переменная Р.
[01:21:40.660 --> 01:21:41.660]  Тогда.
[01:21:42.660 --> 01:21:43.660]  Я начинаю что делать.
[01:21:43.660 --> 01:21:47.660]  В первой лечебнике ближе я сразу записываю значение.
[01:21:47.660 --> 01:21:49.660]  0, 0.
[01:21:51.660 --> 01:21:52.660]  Что это будет означать?
[01:21:52.660 --> 01:21:55.660]  Что сверху это значение переменной П.
[01:21:56.660 --> 01:21:58.660]  Снизу это значение переменной К.
[01:21:58.660 --> 01:22:00.660]  Здесь просто Р.
[01:22:00.660 --> 01:22:03.660]  Тогда следующую клетку я делаю как?
[01:22:03.660 --> 01:22:07.660]  Я делаю новый набор значения переменных.
[01:22:07.660 --> 01:22:14.660]  Такой что будет отличаться только одна переменная на единицу.
[01:22:15.660 --> 01:22:18.660]  То есть здесь 0, 0 станет 0, 1.
[01:22:18.660 --> 01:22:21.660]  Дальше уже 1, 1 нельзя.
[01:22:22.660 --> 01:22:24.660]  Вот это очень важно.
[01:22:26.660 --> 01:22:35.660]  Если только вы сделаете 1, 1.
[01:22:35.660 --> 01:22:39.660]  Почти наверно у вас сразу неправильный ответ.
[01:22:39.660 --> 01:22:43.660]  Ой, ой, ой, ой, ой.
[01:22:43.660 --> 01:22:46.660]  1, 1 в конце должно быть.
[01:22:46.660 --> 01:22:49.660]  Не может быть в конце.
[01:22:49.660 --> 01:22:51.660]  Да, да, да.
[01:22:51.660 --> 01:22:53.660]  Нам нельзя 1, 0.
[01:22:53.660 --> 01:22:57.660]  Потому что у нас тогда будут отличаться обе переменные.
[01:22:57.660 --> 01:22:59.660]  Нам можно только одну переменную сделать.
[01:23:01.660 --> 01:23:04.660]  Поэтому здесь только 1, 1.
[01:23:04.660 --> 01:23:06.660]  Тогда следующие вытовят 1, 0.
[01:23:08.660 --> 01:23:11.660]  Можно просто запомнить что такая шапка у таблицы.
[01:23:11.660 --> 01:23:17.660]  Можно запомнить правило что мы изменяем только одну переменную и получаем новый набор.
[01:23:17.660 --> 01:23:24.660]  А мы можем начать не с 0, 1, а с 1, 0?
[01:23:24.660 --> 01:23:26.660]  Можем.
[01:23:26.660 --> 01:23:30.660]  То есть правило, то как вы запишете, оно абсолютно без разницы.
[01:23:30.660 --> 01:23:34.660]  Что будет означать что вы напишите не с 0, а с 0, 1?
[01:23:34.660 --> 01:23:39.660]  Это значит что вы просто как-то этот куб повернули у себя в пространство и вот так вот спроецировали.
[01:23:39.660 --> 01:23:45.660]  Тогда вот соответствующая клетка это есть проекция вершины куба 0, 0, 0.
[01:23:45.660 --> 01:23:48.660]  Это будет проекция 0, 1, 1.
[01:23:48.660 --> 01:23:50.660]  Это проекция 1, 0, 0 и так далее.
[01:23:52.660 --> 01:23:53.660]  Это карта корно.
[01:23:55.660 --> 01:24:01.660]  Карту корно в данном случае можно представлять как куб от трех переменных.
[01:24:04.660 --> 01:24:11.660]  Но если у вас внезапно появятся четыре переменные, то куб вы уже этот буллив не построите у себя.
[01:24:11.660 --> 01:24:15.660]  А карту корно вы сможете очень легко построить.
[01:24:15.660 --> 01:24:25.660]  Поэтому особенно на R4, ну не R4, то B4 у вас там будет все прекрасно.
[01:24:25.660 --> 01:24:30.660]  B это будем считать что набор 0, 1. Обычно так делается.
[01:24:35.660 --> 01:24:37.660]  Вот так вот, что мы делаем.
[01:24:37.660 --> 01:24:43.660]  Теперь, когда мы хотим минимизировать какую-то функцию, функция задается ее вектором значений.
[01:24:43.660 --> 01:24:45.660]  Извините, вот на вопрос.
[01:24:45.660 --> 01:24:46.660]  Да.
[01:24:46.660 --> 01:24:50.660]  А в клубе корно сначала идет значение ПК, потом значение R?
[01:24:52.660 --> 01:24:55.660]  Ну, сейчас.
[01:24:55.660 --> 01:25:00.660]  Есть разница, что есть П, что есть П, что есть Q, что есть R?
[01:25:00.660 --> 01:25:08.660]  Смысл карты корно, что вот просто вас должно так что соответствовать, а дальше здесь я могу поменять местами эти переменные.
[01:25:08.660 --> 01:25:11.660]  Я могу здесь записать P, здесь записать R.
[01:25:11.660 --> 01:25:16.660]  Это все просто вращение куба в пространстве при проецировании.
[01:25:16.660 --> 01:25:18.660]  Они не поменяют ничего.
[01:25:18.660 --> 01:25:23.660]  Просто главное помнить, что вот здесь вот это именно переменная P, это переменная Q, это R.
[01:25:23.660 --> 01:25:29.660]  И что мы сохраняем правило, что изменится только один...
[01:25:32.660 --> 01:25:34.660]  Нет, я имею в виду, как это заполняется.
[01:25:34.660 --> 01:25:41.660]  Типа в первой клеточке верхней левой будет 0, 0, 0, типа та, которая ниже 1, 0, 0 или 0, 0, 1?
[01:25:41.660 --> 01:25:43.660]  Ну, сначала R?
[01:25:43.660 --> 01:25:45.660]  Или безгладница?
[01:25:45.660 --> 01:25:50.660]  Ну, вообще у тебя функция, она будет зависеть от переменных PQR.
[01:25:50.660 --> 01:25:52.660]  А, ну значит P сначала, окей.
[01:25:52.660 --> 01:25:54.660]  Да.
[01:25:55.660 --> 01:25:57.660]  Если у тебя функция на самом...
[01:25:57.660 --> 01:26:03.660]  Ну, в общем, функция такова, что от того, что мы запишем перемену в другом порядке,
[01:26:03.660 --> 01:26:06.660]  ну, она сама свое значение не поменяет.
[01:26:08.660 --> 01:26:11.660]  То есть, какая разница?
[01:26:11.660 --> 01:26:15.660]  Вот там у нас была функция P следует Q, конъюнция R.
[01:26:15.660 --> 01:26:18.660]  Какая разница, что я запишу переменные так, что я запишу переменные так?
[01:26:18.660 --> 01:26:19.660]  Наверное так.
[01:26:19.660 --> 01:26:24.660]  Но если я запишу вот так, то у меня просто перестанут переставиться строчки таблицистности.
[01:26:24.660 --> 01:26:26.660]  Вот местами поменяется и все.
[01:26:29.660 --> 01:26:31.660]  Глобально сама функция не изменится.
[01:26:31.660 --> 01:26:38.660]  Поэтому здесь лишь вопрос того, какие значения мы в итоге тогда запишем вот эти кредки.
[01:26:41.660 --> 01:26:44.660]  Вот давайте возьмем какую-то функцию.
[01:26:44.660 --> 01:26:46.660]  Возьмем функцию какую?
[01:26:46.660 --> 01:26:56.660]  Я хочу 0-0-0-0, 4-0-4 единицы, 2-0-2 единицы, 2-0-2 единицы, 0-1-0-1, 0-1-0-1.
[01:26:58.660 --> 01:27:01.660]  Вот давайте Racquet, по тому, что а�фа видно порядок, наша Вселенная.
[01:27:02.660 --> 01:27:04.660]  И значения функция F.
[01:27:11.660 --> 01:27:13.660]  Давайте сделаем как...
[01:27:13.660 --> 01:27:29.020]  Я хочу сделать... Здесь 0 поставлю, здесь 0 поставлю. Дальше я поставлю 0 где? Здесь, здесь, здесь 1, здесь 1, здесь 0.
[01:27:29.020 --> 01:27:40.220]  Давайте, да. Хорошо. Тогда что? Теперь вот эти значения функции я расставляю либо в нашем
[01:27:40.220 --> 01:27:46.020]  муливом кубе, либо в карте картон. Давайте я расставляю там и там, покажу, а дальше вы уберете
[01:27:46.020 --> 01:27:59.420]  для себя более приятный способ. Здесь будет 0, значит 0 0 1 0, 1 0 0, 1 0 1. Дальше...
[01:27:59.420 --> 01:28:22.820]  Это 4, у меня еще его тут. Все остальное 1. Здесь будет 0 0 0 0 0 1 1. Вот, я заполнил карту
[01:28:22.820 --> 01:28:36.380]  карно и буллив куб для нашей функции. Теперь я начинаю решать задачу... О чем? Задачу
[01:28:36.380 --> 01:28:44.100]  минимизации. Как минимизировать? Минимизировать мы делаем следующим образом. Нам нужно, давайте
[01:28:45.100 --> 01:28:57.620]  нам нужно покрывать, я скажу, мы можем покрывать либо одну точку, либо покрывать точки на одной
[01:28:57.620 --> 01:29:08.980]  линии, либо покрывать точки на одной плоскости, либо весь куб сразу. Ну, на самом деле, да,
[01:29:08.980 --> 01:29:17.260]  весь куб сразу, это R3 пространства. Поэтому трудновато вам будет здесь понять. Но, как правило,
[01:29:17.260 --> 01:29:26.540]  весь куб, ну понятно, что там, как вы умеете. В 1 1 1 должен быть 0. Так, в 1 1 1... А, я извиняюсь,
[01:29:26.540 --> 01:29:38.740]  я думаю, мне сверху 1. Спасибо. В общем, теперь я хочу покрыть как можно меньшим количеством
[01:29:38.740 --> 01:29:47.860]  вот этих фигур. Вот давайте покрывать куб. Куб я могу покрыть, во-первых, вот эту всю плоскость из нулей.
[01:29:47.860 --> 01:30:01.820]  И мне осталось покрыть еще один 0. 0 я могу покрыть двумя способами. Я могу покрыть его просто,
[01:30:01.820 --> 01:30:10.180]  а могу покрыть вот так вот. Вместе с этой вершинкой по одному ребру. Правило, что покрытия могут,
[01:30:10.180 --> 01:30:17.900]  сейчас, покрытия могут накладываться. Никто не запрещает это. Вот я люблю покрывать как можно
[01:30:17.900 --> 01:30:27.780]  больше, потому что так сами резюмки уменьшаются. Вот. А что значит это покрытие, в чем его смысл? Ну,
[01:30:27.780 --> 01:30:34.620]  то есть мы должны все нули на более кубе покрыть. Вот видишь, у нас есть вершины помещены нулями.
[01:30:34.620 --> 01:30:49.300]  Моя задача вот взять их как-то покрыть либо... Вот на карте Karnaut это чуть более понятно. Я
[01:30:49.300 --> 01:30:56.180]  могу покрыть либо вот такими фигурками, то есть я могу покрыть просто чисто плоскостью. Все,
[01:30:56.180 --> 01:31:01.140]  которые лежат на одной плоскости, я могу сказать, что вот я покрываю их одной плоскостью. Вот плоскостью
[01:31:01.140 --> 01:31:14.860]  x1, 0, x3. Ну и для функции пропозициональной формулы еще. Ну, смотри, в прошлый раз мы сказали,
[01:31:14.860 --> 01:31:19.860]  что они совпадают, поэтому нам без разницы. Для пропозициональной формулы еще ничего. У нас
[01:31:19.860 --> 01:31:23.980]  есть некоторые более функции. Возможно это более функции, которая задана пропозициональной формулой.
[01:31:23.980 --> 01:31:29.460]  Ну вот именно для нее еще. Пока мы отошли от темы пропозициональной формулы. У нас есть
[01:31:29.460 --> 01:31:38.200]  просто некоторые функции, мы ее хотим кnf, dnf минимизировать. А можете еще раз повторить,
[01:31:38.200 --> 01:31:47.420]  вот нули и единицы на вершинах куба, они откуда взялись? Мы их просто придумали? Нет, это мы
[01:31:47.420 --> 01:31:54.540]  записали соответствующие значения функции. А что это за функция? Она где? Произвольная. А все-таки мы
[01:31:54.540 --> 01:31:59.780]  просто придумали. Да, я вот придумал функцию. Я хочу сказать, что вот я хочу для нее написать
[01:31:59.780 --> 01:32:11.660]  минимальную кnf, dnf. Понятно. Тогда вспомним, что такое кnf. Кnf мы минимизировали. Сейчас. Кnf,
[01:32:11.660 --> 01:32:19.700]  она фиксирует нули. Поэтому для кnf мы выбирали нули, для nf мы выбирали единицы. А вы еще нули
[01:32:19.700 --> 01:32:27.740]  не закрасили? Да, сейчас вот я его скажу. Вот я закрасил плоскостью, я закрасил. Вот у меня есть
[01:32:27.740 --> 01:32:34.580]  плоскость. Плоскостью я закрасил эти четыре нуля, теперь мне нужно закрасить вон то. Я могу закрасить
[01:32:34.580 --> 01:32:42.820]  его как зелье. Я могу закрасить пространством r0, пространством r0 это точка, могу закрасить
[01:32:42.820 --> 01:32:51.840]  пространством r1, это прямая, например, вот так вот. Вот эту плоскость я закрасил пространством r2,
[01:32:51.840 --> 01:32:58.280]  это плоскость. Могу закрасить пространством r3, это закрашу сразу весь куб, но весь куб понятно,
[01:32:58.280 --> 01:33:06.940]  когда можно весь закрасить. Всё. Вот я потратил всего два закраски. А пространство r2?
[01:33:06.940 --> 01:33:15.040]  Пространство r2 это плоскость. А можно закрасить одну вершину пространства r2? Ну вот последнюю.
[01:33:15.040 --> 01:33:22.320]  Нет. Для того чтобы закрасить пространство r2 нам нужно чтобы на всех вершинах вот этим
[01:33:22.320 --> 01:33:30.560]  вот пространством у нас было, везде были нули. Ну так а под углом если поставить это плоскость
[01:33:30.560 --> 01:33:39.360]  под 45 градусов. Вот. Поэтому, ну это я говорю r2, на самом деле мы живем пространстве b2. Ой пространство b.
[01:33:39.360 --> 01:33:50.440]  Пространство b давайте я скажу. Это пространство 01. Соответственно у нас есть b это b1, b2 это вот это вот
[01:33:50.440 --> 01:33:59.240]  01, 2 и так далее. Поэтому углов у нас не существует. То есть здесь я покрасил пространство вот это
[01:33:59.240 --> 01:34:11.040]  вот например у меня. Это пространство b1, это у меня пространство b2. Поэтому никаких углов я
[01:34:11.040 --> 01:34:18.560]  сделать не смогу к сожалению. Там например кто-то подумает что, а вдруг я могу закрасить вот
[01:34:18.560 --> 01:34:35.200]  каким-нибудь таким сечением. Такого сечения нельзя, его нету. Диагональных сечений у нас нет. У нас
[01:34:35.200 --> 01:34:56.000]  вот сечение только это вот ребра. Ой грани. Хорошо, хорошо, хорошо. А можете повторить для чего это вообще
[01:34:56.000 --> 01:35:02.440]  все сделано было? Чего мы добились? Чего всегда надо. Вот. Чего мы добились мы посмотрели как это в
[01:35:02.440 --> 01:35:07.680]  пространстве. В пространстве я так понял что всем плохо, но есть люди которым вот этот способ
[01:35:07.680 --> 01:35:15.080]  удобнее. Ну ладно. А теперь я покажу как это делается на карте корном и после этого я лично буду
[01:35:15.080 --> 01:35:19.800]  пользоваться картами корном и как мы будем с ним когда-нибудь вернуться. А что делается, то что мы делаем?
[01:35:19.800 --> 01:35:26.680]  Дальше мы просто сопоставляем этому соответствующий конъюнт или дизюнт и просто
[01:35:26.680 --> 01:35:33.200]  записываем все. Наша задача просто покрыть, а дальше мы каждому покрытию сопоставляем. А у нас задача
[01:35:33.200 --> 01:35:39.800]  представить функцию в виде tnf или knf? Да, которая будет минимальной. Минимальная это в смысле что она
[01:35:39.800 --> 01:35:46.360]  включит в себя вот минимальное число этих конъюнтных дизюнтов. Ага, понятно. То есть максимально
[01:35:46.360 --> 01:35:52.160]  приблизить к вот этой вот совершенной или какой? Не, как раз совершенная она не является минимальной.
[01:35:52.160 --> 01:35:59.280]  Как правило. Совершенная это обычная, которая вот обычная. Да, совершенно у тебя просто прям вот
[01:35:59.280 --> 01:36:06.200]  сколько можно вот столько мы всунули. Там больше совершенной можно всунуть только если мы начнем
[01:36:06.200 --> 01:36:12.560]  делать какие-то глупости типа там повторы там подобное и мы начнем сам и мы начнем добавлять
[01:36:12.560 --> 01:36:21.440]  какие-то пересекающиеся штуки которые из других состоят. Ну зачем? То есть хуже совершенной
[01:36:21.440 --> 01:36:31.040]  только глупая knf. А мы хотим какую-то очень хорошую минимальную. Аналогичной задачей вот на плоскости
[01:36:31.040 --> 01:36:38.640]  в пространстве у меня есть карта Karnaugh, которая прекрасна. Что мы делаем? Наша задача вот покрывать
[01:36:38.640 --> 01:36:45.640]  нули единицы следующими способами. Мы можем покрыть квадратиком, можем покрыть вот двумя
[01:36:45.640 --> 01:36:53.520]  клеточками. Причем как так, как так. Без разницы. Можем покрыть четырьмя клеточками вот такой
[01:36:53.520 --> 01:37:00.520]  вот квадратик. Еще четыре клеточки можно сделать вот так. Либо если вы начертили карту Karnaugh не
[01:37:00.520 --> 01:37:06.280]  горизонтально вертикально, у вас появится там четыре клеточки вниз. И ну и в самом плохом случае,
[01:37:06.280 --> 01:37:17.320]  который у вас конечно никогда не встретится, это вот так покрыть все. Теперь как это чудо работает?
[01:37:17.320 --> 01:37:25.160]  Вот давайте здесь как покрыть. Особенность карты Karnaugh, что на самом деле вот мы можем выйти за
[01:37:25.160 --> 01:37:34.280]  края. Вот эти вот клеточки, они соединены на самом деле. По-другому еще есть вот это, можно
[01:37:34.280 --> 01:37:38.920]  видеть из куба, а по-другому можно видеть, что карта Karnaugh это развертка Тора.
[01:37:38.920 --> 01:37:51.200]  У нас был где-то там Тор. Я честно не умею собрать Тор. В общем, поняли, что вот эти вот крайние
[01:37:51.200 --> 01:38:00.720]  штучки, они соединены, поэтому я могу сделать вот так. Раз, квадратик из четырех. И дополнительно
[01:38:00.720 --> 01:38:11.320]  мне нужно покрыть еще один ноль. Это я возьму вот здесь прямую конечку. Все. Тогда теперь по карте Karnaugh это
[01:38:11.320 --> 01:38:21.360]  чуть проще понимать. Мы оставляем как? Мы оставляем те перемены, которые не менялись на протяжении этого,
[01:38:21.360 --> 01:38:32.880]  не менялись внутри. Вот это вот, за квадратикой или прямую конечку. Вот, например, в синем. Какая
[01:38:32.880 --> 01:38:39.040]  перемена у нас не изменялась? P у нас изменялась, она здесь соединится, здесь ноль. R тоже изменялась,
[01:38:39.040 --> 01:38:53.960]  а вот Q у нас не изменялась. Поэтому Q мы оставляем. Причем по аналоге как с KNF мы берем что? Мы если
[01:38:53.960 --> 01:38:59.520]  переменная принимала значение ноль, то мы берем ее, а если принимала единицу, то значение отрицания.
[01:38:59.520 --> 01:39:12.840]  Все, Q мы взяли. Что значит, что она изменялась или нет? Тут есть значение, мы говорим, когда
[01:39:12.840 --> 01:39:19.120]  каких Q принимает значение ноль, ну допустим при нуле или при единице. Когда Q равно единицу,
[01:39:19.120 --> 01:39:23.360]  у нас тоже есть значение ноль. Это в желтом прямоугольнике. Смотри, мы рассматриваем сейчас
[01:39:23.360 --> 01:39:33.360]  синей прямоугольник и хотим ему сопоставить какое-то дизью. Смотрим, вот этот треугольник ему
[01:39:33.360 --> 01:39:44.360]  соответствуют соответствующие поля из заголовки таблицы. На этих полях заголовки таблицы переменные
[01:39:44.360 --> 01:39:51.200]  принимают какие-то значения. Вот мы выбираем те переменные, которые в соответствующих полях
[01:39:51.200 --> 01:40:02.120]  заголовка таблицы не меняют свое значение. У нас такая только одна. Все, с этой штукой,
[01:40:02.120 --> 01:40:12.200]  с нулями вторыми, вот у меня есть, им соответствует вот эта штучка, вот это и вот это. Какие переменные
[01:40:12.200 --> 01:40:27.280]  тут не изменяются значения. Это P, это R. Тогда что я делаю? Остальное будет... Q у меня ноль. Нет,
[01:40:27.280 --> 01:40:36.560]  Q у меня единица, поэтому я беру ее с отрицанием. Или что? R и с единицей я беру и тоже с отрицанием.
[01:40:36.560 --> 01:40:48.800]  Мы ведь могли взять просто один квадратик. И тогда бы у нас ничего не менялось. Это бы не
[01:40:48.800 --> 01:40:56.240]  повлияло? Да, вообще не повлияло. Там упрощать придется. Нет, не придется. Можно взять и один
[01:40:56.240 --> 01:41:02.960]  квадратик, ну смотри, у тебя просто будет пыльник. Ну в чем разница? Если их объединить, то скобки
[01:41:02.960 --> 01:41:14.000]  раскрыть придется, но то есть это чуть дольше. Нет, ну в общем да, я советую действительно брать
[01:41:14.000 --> 01:41:18.920]  по максимуму квадратики, но по-моему у вас будет минимизация заключаться просто в том, чтобы у
[01:41:18.920 --> 01:41:24.880]  вас было как можно меньше дизелинтов. Но конечно же да, если мы хотим прям действительно оптимизировать,
[01:41:24.880 --> 01:41:31.200]  то лучше брать вот по максимуму брать покрытие. Здесь у нас есть более хорошее, вот такое,
[01:41:31.200 --> 01:41:48.400]  поэтому я вам советую брать именно его. Давайте я его запишу оранжем. Как быстро понять, если внезапно
[01:41:48.400 --> 01:42:02.800]  вы на контрольной забыли, нам брать отрицание или объединение. Отрицание или само переменную. Делается
[01:42:02.800 --> 01:42:11.800]  следующим образом. Когда мы выбираем нули, мы делаем кнф. Почему мы делаем кнф? Потому что
[01:42:11.800 --> 01:42:17.320]  конъюнция фиксирует ноль. Если хотя бы один из этих ноль, то значит все ноль. Мы хотим так
[01:42:17.320 --> 01:42:23.800]  фиксировать все нули. Хорошо, если мы взяли кнф, то значит элементарно вот эти кусочки, это будут
[01:42:23.800 --> 01:42:32.200]  дизюнты, то есть будет дизюнция. Теперь мы хотим что? Чтобы на выбранных нами значениях данная
[01:42:32.200 --> 01:42:39.360]  функция принимала ноль, и при этом это будет объединение. Но когда она будет равняться нулю при
[01:42:39.360 --> 01:42:51.480]  дизюнции... Извините, можно вопрос? Да. Почему мы решили те два нули покрыть типа желтым
[01:42:51.480 --> 01:42:58.760]  прямоугольником? Ведь у нас получается, что один нули покрыт одновременно и, короче, и синим
[01:42:58.760 --> 01:43:04.080]  квадратом и желтым прямоугольником. Почему мы не могли тот другой нуль просто желтым мелким
[01:43:04.080 --> 01:43:09.200]  квадратиком в одну клетку покрыть? То есть в чем логика? Это у кеш у нас типа один нуль
[01:43:09.200 --> 01:43:15.000]  покрывается одновременно и так и так? Да. Как я говорил, покрытие могут залазить друг на друга.
[01:43:15.000 --> 01:43:23.160]  Это вообще без проблем. Серьезно? Да. Мы можем залазить друг на друга. Нам не надо пытаться делать
[01:43:23.160 --> 01:43:29.480]  так, чтобы не налазить. Наоборот, оно будет налазить. Это вполне себе хорошо. Причем, чем больше мы берем,
[01:43:29.480 --> 01:43:37.600]  тем меньше литералов идет. Потому что, как только ты расширяешь размер своего прямоугольника,
[01:43:37.600 --> 01:43:44.560]  значит выкидываешь какую-то переменную из дизюнта или кондюнта. И это только лучше. А вот то,
[01:43:44.560 --> 01:43:53.480]  что мы сейчас желтым цветом записали, это уже наш результат? Желтым цветом не совсем. Результатом
[01:43:53.480 --> 01:44:03.000]  будет, мы возьмем кондюнцию этого добра и получим Q, кондюнция не P или не R. Все, вот это результат.
[01:44:03.000 --> 01:44:18.120]  Есть возможность, пожалуйста, минутку потратить и еще раз рассказать не P и не R? Вкратце вообще,
[01:44:18.120 --> 01:44:24.400]  вот как это получилось еще раз. Вот, давайте тогда для этого мы сразу попробуем решить номер.
[01:44:24.400 --> 01:44:40.740]  Простите, можно точнее? А если бы мы взяли, сейчас скажу, и тот нулик только одной
[01:44:40.740 --> 01:44:50.300]  клеточкой покрыли бы, то у нас что, получилось бы тоже самое, фактически ведь? Не совсем. Да-да-да,
[01:44:50.300 --> 01:44:54.980]  получилось бы тоже самое, ведь у нас R не меняется и является единичкой, поэтому мы отрицаем P,
[01:44:54.980 --> 01:45:01.260]  не меняется и является единичкой, поэтому тоже самое. А Q тоже не меняется, поэтому мы тоже Q берем.
[01:45:01.260 --> 01:45:11.940]  А, да, и мы бы ее взяли тоже как отрицание единички, но потом бы мы типа убрали ее,
[01:45:11.940 --> 01:45:19.140]  она бы сократилась бы. Ну, идейно, да. Поэтому проще сразу брать просто чуть больше квадратик.
[01:45:19.140 --> 01:45:26.100]  То есть лучше брать квадратики больше, да? Да. Если есть возможность квадратик больше,
[01:45:26.100 --> 01:45:32.940]  берем больше. Там вот, например, когда у нас, если будет с единичками, когда мы будем
[01:45:32.940 --> 01:45:38.660]  минимизировать DNF, с DNF все налогично, только мы делаем с единицами. Можно вот сделать,
[01:45:38.660 --> 01:45:46.780]  вот так вот как-нибудь, а можно просто взять два квадратика, вот так их пересечь, ну а прямоугольник.
[01:45:46.780 --> 01:46:03.780]  Вот, у меня есть такая штука. Вот этот номер из контрольной. Давайте я воспользуюсь сайтом,
[01:46:03.780 --> 01:46:12.700]  который мне построит таблицу с истинностью, потому что вычислить значение этой штуки, ну. А нам
[01:46:12.700 --> 01:46:22.460]  надо будет на контрольной самим строить. Да. Правильно? Лично. Подождите, так это же
[01:46:22.460 --> 01:46:28.700]  получилась несовершенная форма. Да, она, ну, смотри, первая задача совершенная, а потом нас
[01:46:28.700 --> 01:46:34.780]  портит минимизировать. А как я говорил, что совершальная, она, как правило, не минимальная.
[01:46:34.780 --> 01:46:41.340]  То есть строим минимальную просто типа для удобства, да? Да. Вот давайте я сейчас просто
[01:46:41.340 --> 01:46:46.180]  построю таблицу с истинностью. Так, если строить таблицу с истинностью руками, очень
[01:46:46.180 --> 01:46:55.340]  долго возможно есть способ упрощения формулы без таблицы с истинностью. Ну, давайте я расскажу,
[01:46:55.340 --> 01:47:15.060]  как я делаю это на контрольной. Ладно, не дали мне никто делать. Если я внезапно ошибусь,
[01:47:15.060 --> 01:47:23.180]  я не виноват. Тогда мы просто запишем правильную таблицу с истинностью и будем ей пользоваться.
[01:47:23.180 --> 01:47:31.140]  В общем, с этим заданием, короче, внимательно, просто нужно правильно почитать значение. Поехали.
[01:47:31.140 --> 01:47:36.460]  У нас, как я обычно делаю, в общем, у нас, как правило, функции, которые будут использоваться,
[01:47:36.460 --> 01:47:44.500]  ну, это пропозициональные формулы, те функции, у них есть какая-то штука, которую они фиксируют.
[01:47:44.500 --> 01:47:54.340]  Например, конъюнция, она фиксирует ноль, дизюнция фиксирует единицу. Сейчас, не, мне нужно не
[01:47:54.340 --> 01:48:00.380]  фиксировать, как раз скажу. У них есть только один набор значений, на котором они принимают вот,
[01:48:00.380 --> 01:48:05.620]  либо ноль единицы. Вот, например, конъюнция, она верна единице тогда и только тогда, когда вот единица.
[01:48:05.620 --> 01:48:19.620]  Дизюнция, она ноль тогда и только тогда, когда оба нуля. Импликация это 1,0. Все, во всех
[01:48:19.620 --> 01:48:26.340]  самых случаях она то. Поэтому, например, когда мы будем искать значения, вот у меня вверху есть
[01:48:26.340 --> 01:48:48.260]  импликация. Так, у нас последнее действие, здесь это конъюнция. Сейчас, давайте это Дани Пальц делаю.
[01:48:56.340 --> 01:49:08.820]  Вероятно, скоро мы сделаем перерыв, потому что у меня уже все. Надо попить хотя бы чего-то.
[01:49:08.820 --> 01:49:22.540]  Вот, есть штука. Вот, у меня наверху вот эта штука. Соответственно, теперь что мы делаем? Мы
[01:49:22.540 --> 01:49:28.340]  смотрим. Вот, она будет единицей только тогда, когда вот обе штуки единицы. Смотрим, когда это единица.
[01:49:28.340 --> 01:49:39.300]  Вот, она будет единицей только тогда. Соответственно, если хотя бы одна из компонентов ноль, то везде ноль.
[01:49:39.300 --> 01:49:46.500]  Поэтому, давайте посмотрим, когда это ноль. Это ноль тогда и только тогда. Можно просто
[01:49:46.500 --> 01:50:06.460]  надки скобочек. Мне кажется, тут все хорошо. Там лишняя скобка получается. Все, понял.
[01:50:06.460 --> 01:50:14.540]  Скобки покрасили, стало все понятно. В общем, если хотя бы за этих одна штука ноль, то все ноль.
[01:50:14.540 --> 01:50:19.780]  Давайте смотреть, когда вот это за ноль. Это за ноль, когда это единица, это ноль. То есть,
[01:50:19.780 --> 01:50:26.780]  P должно равняться нолью, а R тоже должно равняться нолью. Поехали, смотрим на всех таких наборах,
[01:50:26.780 --> 01:50:33.540]  ставим ноль. Сразу, мы уже сразу можем все эти наборы не рассмотреть. Ноль, ну все.
[01:50:33.540 --> 01:50:41.420]  Во всех остальных случаях правая скобка единицы, и она не влияет вообще никакого смысла. Смотрим,
[01:50:41.420 --> 01:50:48.820]  теперь, когда это ноль. Это ноль, когда вот эта единица, это ноль. Когда права ноль? Если Q 0,
[01:50:48.820 --> 01:50:56.540]  в первый случай, когда Q равняется нулю, если Q равняется нулю, то это единица, то тогда здесь
[01:50:56.540 --> 01:51:05.420]  P и R. То есть, если Q равняется нулю, а P и R равняются единице, то все ноль. Но когда это? Это когда
[01:51:05.420 --> 01:51:12.940]  какая-то из этих штук должна быть единица. Ну давайте, если вот здесь вот единица, это ноль,
[01:51:12.940 --> 01:51:22.740]  Q 0, P единица, это ноль, ноль. Все. Мы говорим то, что у нас должно быть сначала единица,
[01:51:22.740 --> 01:51:28.260]  потом ноль, а потом смотрим куда. Потом смотрим на первую скобку и говорим, что типа здесь должно
[01:51:28.260 --> 01:51:35.780]  быть оба нуля, да? То есть, R 0 и при этом... Я что сделал? Здесь я сказал, что если это ноль,
[01:51:35.780 --> 01:51:41.300]  то значит вот это все ноль и это ноль. Теперь я смотрю направо. Вот это ноль, когда канинца
[01:51:41.300 --> 01:51:50.860]  равняется нулю. Когда хотя бы один из аргументов это ноль. Нет, да, окей. Да, все. Тогда я смотрю,
[01:51:50.860 --> 01:51:57.060]  первый случай у меня Q равняется нулю, тогда здесь по-любому ноль. Здесь что? Q равняется
[01:51:57.060 --> 01:52:03.300]  единице. Эта штука простится в PLR. Тогда, если PLR равняется единице, а Q равняется нулю,
[01:52:03.300 --> 01:52:10.180]  то это вся скобка за единицы. То есть, вся скобка за нулица и будет. То есть, когда все перенули.
[01:52:10.180 --> 01:52:20.220]  Когда Q 0, P 0 и R 0. Только тогда ноль. Нет. Когда PLR... А, да-да-да. То есть, когда Q 0,
[01:52:20.220 --> 01:52:26.900]  а PLR единичка. Да. Все, правильно. Ну, вот я смотрю, у меня таких скобок было... Сейчас здесь скажу. У меня таких
[01:52:26.900 --> 01:52:34.100]  штук было, когда Q равняется нулю, три позиции свободных. Вот я смотрю, первая позиция. У меня PLR
[01:52:34.100 --> 01:52:38.780]  равняется единице, равняется... Вот мне, например, есть Q 0 единицы. Здесь у меня PLR равняется единице,
[01:52:38.780 --> 01:52:51.500]  поэтому здесь просто всё. Ой-ой-ой-ой. Я просто здесь нули, конечно же. Второй случай, что когда у меня R или не
[01:52:51.500 --> 01:53:02.060]  P равняется нулю. Когда это равняется нулю? Когда R единица, а P тоже единица. Если R и P единица,
[01:53:02.060 --> 01:53:12.540]  то здесь R единица P единица. Мне нужно получить в сумме всю этой елки-полки единица. Это всё выражение
[01:53:12.540 --> 01:53:20.500]  упрощается до NICU. NICU должно равняться единице. Значит, Q равняется нулю. Тогда на наборе...
[01:53:20.500 --> 01:53:32.020]  Мы получили, что у нас R единица и P единица, и тогда получается, что у нас, если там впереди,
[01:53:32.020 --> 01:53:39.340]  получается тоже единица. А, да, впереди тоже единица, потому что R единица. Тогда не без разницы,
[01:53:39.340 --> 01:53:48.860]  какой Q. Просто где R и P равняются по единице, я могу проставить нули. Нет, подождите. Где R и P единицы,
[01:53:48.860 --> 01:53:57.460]  то вообще-то будет всё нас окей, потому что у нас справа получится единичка типа из NIR следует
[01:53:57.460 --> 01:54:05.460]  P, то есть из 0 следует 1, это окей. А здесь... Сейчас, ну, здесь, подождите, здесь следа получится 0,
[01:54:05.460 --> 01:54:11.140]  умножить на что-то, то есть 0, но 0 у нас будет следовать, а, из единицы, да, всё прекрасно,
[01:54:11.140 --> 01:54:16.980]  где R и P единицы, получается всё окей. Да. Поэтому всё, мы зафиксировали все наборы, где 0,
[01:54:16.980 --> 01:54:22.020]  значит, у всех остальных единицы. Можно, например, делать так, я обычно так делаю.
[01:54:22.020 --> 01:54:30.220]  Можно прямо в лоб считать каждое выражение, объединять, так вот рисовать таблицу. Второй
[01:54:30.220 --> 01:54:36.460]  способ более надёжный, если есть время, позвольте стим, если времени в обрез. Какой? Ну, то есть
[01:54:36.460 --> 01:54:43.580]  прямо в лоб вычислять каждое выражение, то есть сначала мы там написали Q, посчитали вот здесь
[01:54:43.580 --> 01:54:55.180]  всё, дальше сделали вот это вот, 1 или R, и так далее. Вот с каждой из этих, а потом всё,
[01:54:55.180 --> 01:55:01.220]  ты сидишь, просто объединяешь. Да, у тебя вот такая длиннющая таблица, и в конце вы значение. Это
[01:55:01.220 --> 01:55:10.860]  немножко долго, но зато более надёжно. В общем, как вычислять таблицу естественности? Ну, это уже
[01:55:10.860 --> 01:55:20.660]  ваше дело. Тут чего-то прям такого экстрадинарного я не расскажу. Нас просят что? Нас просят построить
[01:55:20.660 --> 01:55:34.980]  из кнф-сднф? Можно нет? Приведите, о, всё, смотрите, нас просят просто к наиболее коротким конъюнктивным,
[01:55:34.980 --> 01:55:44.060]  дизюктивным, нормальным форматом. Всё, нам даже не нужно из кнф-сднф. Вот у меня есть такая штука.
[01:55:44.060 --> 01:55:53.260]  Теперь у меня есть карта Karnaut. Поехали, рисуем карту Karnaut. Нет, ладно, нафиг тут.
[01:55:53.260 --> 01:56:13.060]  Карту Karnaut для всей этой функции? Ну да, карта Karnaut у нас для функций.
[01:56:13.060 --> 01:56:34.660]  Всё, и теперь поставляю значение. Поехали. Единец у меня только на наборах 0.1.1, 0.1.1 и на наборе
[01:56:34.660 --> 01:56:50.020]  1.1.0. 1.1.0. Вот, везде остальных у нас 0. Теперь мы берём, как мы помним, покрываем как можно
[01:56:50.020 --> 01:56:57.300]  большими квадратиками. Причём помним, что вот эти вот края, они у нас связаны. Чтоб построить минимальную
[01:56:57.300 --> 01:57:06.820]  кнф? Чтоб построить минимальную кнф, да. Мы покрываем 0. Сейчас вы мне показали, как строить
[01:57:06.820 --> 01:57:19.620]  минимальную кнф. Ну сейчас я покажу, аналогично просто мы покрываем 1. Вот, мы покрываем 0. Что я вижу?
[01:57:19.620 --> 01:57:34.780]  Я вижу квадрат, например. У меня что квадрату соответствует? Какой у меня? Квадрату соответствует
[01:57:34.780 --> 01:57:42.820]  дизюнд. У меня R поменяло значение на квадрате, P поменяло значение на квадрате, Q не поменяло,
[01:57:42.820 --> 01:57:48.940]  соответственно здесь у меня будет Q. Теперь у меня ещё два нуля. Как мне их покрыть? Вот,
[01:57:48.940 --> 01:57:58.020]  например, я 0 могу покрыть вот так. Поэтому что соответствует? У меня здесь сохранили значение
[01:57:58.020 --> 01:58:13.820]  только переменной P и R. Они с нулём. Вот у меня теперь есть такая штука. Здесь у меня сохранили
[01:58:13.820 --> 01:58:19.740]  значение тоже P и R, но они обе принимали значение 1, поэтому я беру с отрицанием.
[01:58:19.740 --> 01:58:44.220]  Тогда в ответ я пишу Q и P или R и не P или R. Всё. Вот моя минимальная, кто там, кнф.
[01:58:44.220 --> 01:58:56.300]  Что если я хочу теперь минимизовывать единицы? Я точно так же теперь покрываю единицы. Там,
[01:58:56.300 --> 01:59:04.580]  по-моему, задание ещё нужно было обосновать правильность. Что это значит? Ну там обосновать
[01:59:04.580 --> 01:59:08.100]  правильность. Там, наоборот, написано, что обосновывать правильность не требуется. Да,
[01:59:08.100 --> 01:59:19.260]  потому что, по сути, обоснование правильности, ну, нужно доказать метод Karno. Сейчас. Там написано
[01:59:19.260 --> 01:59:24.660]  вот так, смотрите. Не надо обосновать, что она самая короткая, но нужно обосновать, что она правильная.
[01:59:24.660 --> 01:59:37.460]  Что это значит? Нужно показать, что данная вами формула действительно имеет, она действительно
[01:59:37.460 --> 01:59:42.740]  принимает те значения, которые надо, что на соответствии. Сейчас, у нас было вообще в
[01:59:42.740 --> 02:00:00.220]  прошлых годах такое? Вторую таблицу и сильности построить, что ли? Да, в прошлом году такого не было.
[02:00:00.220 --> 02:00:10.420]  Доказать, что они самые короткие не нужно, но нужно обосновать правильность. Все обе правильные,
[02:00:10.420 --> 02:00:16.260]  хотя бы одна самая короткая. Правильная формула, ну, во-первых, что значит обосновать правильное?
[02:00:16.260 --> 02:00:23.740]  Первое, что у нас, что это КНФ. Ну, понятно, что действительно вот это вот, все это дизюнты,
[02:00:23.740 --> 02:00:34.540]  это все значит КНФ. Первый пункт, что правильно. Все, мы доказали, что это КНФ. Конечно, это длинный
[02:00:34.540 --> 02:00:47.100]  идиотизм звучит, никогда такого не было. Доказываем, что правильно. А что здесь можно еще доказать?
[02:00:47.100 --> 02:00:59.340]  Ну, смотри, первое это, что у нас, это КНФ. Ну, это очевидно. Знаешь, что что-то правильное,
[02:00:59.340 --> 02:01:05.380]  но в целом очевидно. А что значит доказать, что оно правильно? Ну, доказать, что, во-первых,
[02:01:05.380 --> 02:01:09.740]  ты построил действительно КНФ, а второе, что у нас соответствует буллер-функции, то есть построить
[02:01:09.740 --> 02:01:15.180]  таблицу естественности, например. Так мы таблицу естественности фактически уже построили,
[02:01:15.180 --> 02:01:22.460]  но мы уже построили ее, да. Можно же просто перерисовать ее и сказать, что вот, как будто
[02:01:22.460 --> 02:01:27.540]  все совпадает. Вот, это то, что как раз я хотел предложить. Смотри, вот первое дело, что ты пишешь
[02:01:27.540 --> 02:01:47.580]  КНФ. Ну, смотрите, да. Все, подпадает. Подпадает под определение дезюнка. Тогда их конъюнцы-КНФ.
[02:01:47.580 --> 02:02:06.020]  Все, второе. Встроим еще раз. Еще раз таблицу естественности. Ну, то есть, можно же написать,
[02:02:06.020 --> 02:02:14.100]  что построим таблицу истинности для вот этой вот функции. Ну, смотри, для конъюнца тут вообще прям
[02:02:14.100 --> 02:02:20.420]  просто считать вот здесь, что. Когда это занадлежит? Ладно, я понял. Извините, а что мы написали их,
[02:02:20.420 --> 02:02:30.740]  вот эти значок, пара их, или что там написано, слово какое? Это конъюнцы. Первое слово перед их?
[02:02:30.740 --> 02:02:51.580]  Тогда. А, тогда конъюнцы. Сейчас, подпадает под определение дезюнка. Ну, то есть. Ну, понятно,
[02:02:51.580 --> 02:02:58.260]  что, да, окей. Ладно, понятно, хорошо. То есть, встроим еще раз таблицу естественности и говорим,
[02:02:58.260 --> 02:03:11.060]  что она совпадает с изначальной. Да, тогда будет функция равной. Ну, а дальше можно сказать,
[02:03:11.060 --> 02:03:20.780]  что да. А насколько корректно то, что там КНФ попадает под определение дезюнка? Дезюнка,
[02:03:20.780 --> 02:03:27.140]  это же то, из чего состоит КНФ, это же не сама КНФ. Смотри, я, вот стрелочки, это вот эти штучки.
[02:03:27.140 --> 02:03:34.340]  Эти штучки, это вот они по определению дезюнка. Это дезюнкты, да. Да, тогда их конъюнцы это КНФ.
[02:03:34.340 --> 02:03:46.380]  Значит, не КНФ подпадает под определение дезюнка, а вот их и ее составляющие получается. Да,
[02:03:46.380 --> 02:03:51.180]  вот они подпадают под определение дезюнка, тогда их конъюнцы это КНФ. Все, мы построили КНФ.
[02:03:51.180 --> 02:04:03.020]  Дальше строим таблицу естественности и говорим какую-нибудь такую фразу, типа значение буревой
[02:04:03.020 --> 02:04:26.500]  функ, соответствующей полученной КНФ совпадает с значениями буревой функции,
[02:04:26.500 --> 02:04:40.340]  соответствующей исходной пропозициональной формуле, следовательно... Что это мне хотят,
[02:04:40.340 --> 02:04:48.660]  задачи? Как формулироваться задачи? Видите, формулы к наиболее конъюнц... Значит, следовательно,
[02:04:48.660 --> 02:05:03.180]  следовательно, это, это есть ее конъюнктивно нормальная форма.
[02:05:18.660 --> 02:05:27.940]  Там что-нибудь типа такое, ну, я правда не совсем понимаю смысл. Давайте еще в чате спросим про это,
[02:05:27.940 --> 02:05:34.980]  но звучит просто ну как тупая отписка, и второй раз мы построили, мы просто продублируем таблицу
[02:05:34.980 --> 02:05:43.900]  естественности и написали тупую фразу. Смысл этого... Я попытаюсь в чате сказать что-то бред. Возможно,
[02:05:43.900 --> 02:05:55.220]  будет шанс, что это убило. Потому что по-хорошему доказывать правильность, ну, докажите правильность
[02:05:55.220 --> 02:06:05.300]  того, что метод Корно работает. Вот это будет, но это ну вообще не материал-контроль. Да, для ДНФ,
[02:06:05.300 --> 02:06:15.940]  ну в данном случае у нас получилось все грустно, у нас только две единицы, поэтому ну возьмем просто
[02:06:15.940 --> 02:06:24.460]  дизюнкты, что у нас единица, соответственно, мы хотим конъюнцию брать, и нам нужно будет брать
[02:06:24.460 --> 02:06:34.500]  п, конъюнция q. Значит, теперь нам нужно превратить единицу, и тут п надо превратить единицу q и r.
[02:06:34.500 --> 02:06:50.620]  Ну если всегда дизюнкты, это мин ДНФ. И все то же самое, вот эта вот тупая штука с доказательством правильности.
[02:06:50.620 --> 02:07:02.020]  Очень быстро посчитали, я не успел понять, как так быстро. Как посчитать ДНФ? Ну смотри,
[02:07:02.020 --> 02:07:07.420]  у меня два квадратика, я не смогу, ну квадратики это не смогу никак расширить, поэтому понятно,
[02:07:07.420 --> 02:07:12.820]  что будет два квадратика. Соответственно, теперь мне нужно квадратиком сопоставить дизюнкты. Смотри,
[02:07:12.820 --> 02:07:19.460]  я хочу единицу. А они не меняются, мы записываем те, которые не меняются, да? Да, для квадратиков это
[02:07:19.460 --> 02:07:29.300]  всегда все переменные. А, все, понял. Мне нужно будет взять с конъюнцией, поэтому конъюнция единицы,
[02:07:29.300 --> 02:07:33.460]  когда все единицы, соответственно, я хочу превратить значение всех функций в единицы, всех
[02:07:33.460 --> 02:07:40.740]  переменных в единицы. Поэтому, в первом случае, r обратил инверсию, а в втором случае q променял
[02:07:40.740 --> 02:08:02.660]  инверсию. А мы будем проходить доказательства работы карты Karno? Нет. Более того, карты Karno даже
[02:08:02.660 --> 02:08:12.020]  на лекциях рассматриваться не будут, но при этом вы их будете, по сути. А какой метод предлагается
[02:08:12.020 --> 02:08:17.260]  на лекциях? Ну да, довольно интересно просто, если карта Karno... Какой? На лекциях не проходится
[02:08:17.260 --> 02:08:26.060]  минимизация. Просто вот, ну, хотелось бы понимать, на семинарах не дается ничего для минимизации? Ну,
[02:08:26.060 --> 02:08:32.460]  вообще, по идее, на семинарах должно было быть, и на семинарах вроде бы должно было быть,
[02:08:32.460 --> 02:08:39.020]  помнится я, тогда у меня семинары, мы там что-то говорили про карты Karno. Ну вот у нас ведет семинар
[02:08:39.020 --> 02:08:54.660]  мусатов, да? Ничего подобного пока не было. Ну, значит, не повезло. Что тут сказать? Я не могу
[02:08:54.660 --> 02:09:05.420]  отвечать за то, что происходит на семинарах у вас. Вот задача решается, смотрите, либо минимизация
[02:09:05.420 --> 02:09:11.300]  на картами Karno, это такой более приятный способ, либо можно очертить бурю в куб и брать вот,
[02:09:11.300 --> 02:09:16.740]  покрывать его. Кому это нравится, ну, хотите рисуйте куб, дальше идея вся та же, просто мы
[02:09:16.740 --> 02:09:21.540]  нарисовали переменные, которые не меняется, им выписываем. Но на карты Karno чуть более приятно.
[02:09:21.540 --> 02:09:29.500]  Почему это работает? Давайте я поищу доказательства, хотя вы можете сами обыскать, но я поищу,
[02:09:29.500 --> 02:09:34.540]  я его приложу. Ну, мне кажется, кому интересно, тот найдет. Навряд где есть много людей,
[02:09:34.540 --> 02:09:45.060]  которые пойду сейчас гуглить. Все. Так что, ну, то, что не проходился, он так задумано,
[02:09:45.060 --> 02:09:51.580]  это не было и в прошлого году. Ну, то есть, на семинарах вроде бы он рассматривается,
[02:09:51.580 --> 02:10:01.420]  на лекциях нет, конечно же. Ну, спойлер у вас будет еще у КТЧ, но у КТЧ будет вообще,
[02:10:01.420 --> 02:10:05.580]  во втором смеси будут очень много тем, которые на лекциях не проходятся, они должны быть на
[02:10:05.580 --> 02:10:13.020]  семинарах, если на семинарах их не прошли, то будет проблематично. Поэтому вот, там они, по-моему,
[02:10:13.020 --> 02:10:19.500]  помечаются черными кружочками, поэтому, если их случайно на семинаре не проходите, нужно прямо,
[02:10:19.500 --> 02:10:27.500]  семинаристы просить, что давайте остальное отложим, смотрим, а там нет их. С матлогом, ну, я развожу ручки.
[02:10:27.500 --> 02:10:49.020]  Поэтому вот, ну, работаем метод карт Карнова, их используем. Теперь появилось еще,
[02:10:49.020 --> 02:11:02.780]  ну, приписка. Ладно, это я себе отметил, я уточил, это прям надо. Про СКНФ, СДНФ есть важный факт.
[02:11:02.780 --> 02:11:13.220]  А вот, кстати, вы сказали СДНФ, СКНФ, что нас там не просят СДНФ, СКНФ, то есть, может быть,
[02:11:13.220 --> 02:11:25.460]  такое, что попросят СДНФ, СКНФ написать для функции? Да? Ну, нет, смотри, если появился такой
[02:11:25.460 --> 02:11:31.460]  пробный вариант, то вас точно не попросят. Проблема в том, что, почему-то мне помнится,
[02:11:31.460 --> 02:11:44.900]  что была задача, в которой нужно строить СКНФ, СДНФ. Возможно, это будет просто потом в других контролях,
[02:11:44.900 --> 02:11:54.500]  поэтому, ну, пока, видимо, вам вообще это не надо строить. Про СКНФ, СДНФ есть важный факт,
[02:11:54.500 --> 02:12:08.660]  что, например, что такое единица тождественная? Это есть А или А, можно так сказать. Ну, то есть,
[02:12:08.660 --> 02:12:15.100]  она сведется к тому, что там будет дизюнция, отрицание чего-то с самим собой, поэтому для
[02:12:15.100 --> 02:12:33.220]  тождественной штуки не существует СДНФ, для этой не существует СКНФ.
[02:12:33.220 --> 02:13:02.700]  Сейчас скажу, или наоборот, тождественной единицы, сейчас тождественные единицы,
[02:13:02.700 --> 02:13:17.660]  СДНФ. А, нет, как раз, да, наоборот, как раз. Вот, смотрите, здесь в СКНФ, почему не существует
[02:13:17.660 --> 02:13:26.780]  СКНФ, то есть мы придем к дизюнту, в котором будут две переменные, одно и то же. А если мы рассматриваем это
[02:13:26.780 --> 02:13:35.980]  в СДНФ, то, ну, смотрите, в конъюнте там и там, и там у нас используется одна переменная, и она будет, она ровно один раз.
[02:13:35.980 --> 02:13:45.500]  Но, опять же, мы там смотрим, на самом деле нужно количество переменных там, ну, просто размножим их,
[02:13:45.500 --> 02:14:10.380]  продублировав эту штуку, для... Теперь вот наступают номера другие, в общем, они более приятные.
[02:14:10.380 --> 02:14:25.340]  Первый номер, это последний номер про пропозициональный, он будет учиться. Он последний, вот, прям явно связанный
[02:14:25.340 --> 02:14:33.620]  с что-то с формальными языками. После этого мы уже от этого отойдем, мы будем что-то более логическое.
[02:14:33.620 --> 02:14:43.940]  Давайте смотреть. Перефикс формулы phi является формулой, то он совпадает с phi. Ну, мы говорили, да, что собственного префикса.
[02:14:43.940 --> 02:14:57.140]  Да. Поэтому это да. Это просто я я. Если суффикс phi является формулой, то он совпадает с phi. Тоже да. Нет? Нет.
[02:14:57.140 --> 02:15:05.020]  Вот я, например, могу сделать так. У меня есть собственный суффикс, просто вот эта вот штука.
[02:15:05.020 --> 02:15:16.660]  Не собственный, то есть? Да, не собственный, да. Если два различных подслова формулы phi
[02:15:16.660 --> 02:15:27.580]  являются формулой, то они не пересекаются. А можно вопрос? Это вот второй пример, может быть.
[02:15:27.580 --> 02:15:41.860]  Второй. Да, прекрасно. Мне нравится идея. Да, тоже самое получается. Ответ нет. Подождите, про пункт А вопрос.
[02:15:41.860 --> 02:15:58.900]  Я предлагаю такую формулу, допустим, А или Б, и, например, ну, вот в скобках дальше, и там, допустим, С или D, например, тоже в скобках.
[02:15:58.900 --> 02:16:05.460]  Мы берем префикс А или Б, он является формулой и он не совпадает.
[02:16:06.060 --> 02:16:14.580]  Значит, я не понял, что такое пропозициональная формула. В пропозициональной формуле у нас всегда
[02:16:14.580 --> 02:16:24.580]  должны быть навешаны скобки по екоперации. То есть нельзя просто взять и брать скобки. Про это помним.
[02:16:24.580 --> 02:16:32.660]  Вот про пункт Б. Если бы там еще дополнительно было сказано, что нет отрицаний, то есть инверсий,
[02:16:32.660 --> 02:16:47.140]  то тогда это же было бы правдой? Звучит, как что да. Это будет следовать из теории про скобочный ток.
[02:16:47.140 --> 02:16:56.500]  Извините, можно вопрос? Что подразумевается под длиной формулы количества значков? То есть
[02:16:56.500 --> 02:17:04.900]  каждый значок это плюс один? Да. Открывающая скобка это плюс один, да, изыгрывающая тоже.
[02:17:04.900 --> 02:17:19.220]  Ну да, просто каждый символ это 1. Можно пункт В объяснить? Ну, смотри, два различных подслова.
[02:17:19.220 --> 02:17:25.940]  Само слово есть под слово, его суффикс это тоже под слово. Вот посмотрим на предыдущий
[02:17:25.940 --> 02:17:33.140]  пример. У нас есть вот, например, такая штука. Они оба являются формулами и пересекаются.
[02:17:33.140 --> 02:17:45.620]  Это про пункт Г? Это про пункт В. А, я про пункт Г, кажется, придумал пример, когда это может быть.
[02:17:45.620 --> 02:17:55.660]  Ну давай. Типа, ставим два знака отрицания, потом в скобочках А или Б, и потом еще или
[02:17:55.660 --> 02:18:11.100]  С. Смотри. Нет, или С после скобочек. Да, и последнюю скобочку убрать. Какую скобочку? Нет,
[02:18:11.100 --> 02:18:19.260]  убрать вообще последнюю скобочку. Да, ее нельзя. Можно. Брать последнюю скобочку сейчас. Ну да,
[02:18:19.260 --> 02:18:24.620]  вот. Чего говорим тогда? У нас всего сколько? Раз, два, три, четыре, пять. Раз, два, три, четыре,
[02:18:24.620 --> 02:18:29.740]  пять, шесть, семь, восемь, девять этих. Если мы уберем или С, то у нас получится семь
[02:18:29.740 --> 02:18:36.300]  значков и формулы. А если мы уберем сначала два знака отрицания, то получится тоже формула,
[02:18:36.300 --> 02:18:40.500]  в которой семь значков. Вот они пересекаются. Их пересечение это в скобочках А или Б.
[02:18:40.500 --> 02:18:56.020]  Ну, по сути, да. Вот к этому примеру. Но вообще... Сейчас.
[02:18:56.020 --> 02:19:24.260]  Сейчас еще раз. Давай, какие слова ты берешь? Ну, в смысле, я говорю... А второе? А второе
[02:19:24.260 --> 02:19:31.180]  начинают скобочки там, где А в скобочках А и Б или С, да? А теперь внимание, почему твой
[02:19:31.180 --> 02:19:40.900]  пример не является хорошим. У нас последний... У нас здесь должны быть тогда скобки. У нас
[02:19:40.900 --> 02:19:47.660]  нельзя чтобы... У нас, короче, всегда мудрецеоперация требует, чтобы сверху навесили. Поэтому твой
[02:19:47.660 --> 02:19:55.260]  пример не работает. Тогда, наверное, другое должно быть. А вот как раз его и нет, потому что...
[02:19:55.260 --> 02:20:06.900]  Почему? Ну, смотри. У нас есть... У нас есть вообще как слова могут пересекаться. То есть у нас
[02:20:06.900 --> 02:20:15.260]  слово может пересекаться. Как то, что один... Ну, короче, по общему префиксу-суфиксу, либо одно
[02:20:15.260 --> 02:20:24.180]  вложено в другое. Понятно, что вложение быть не может, потому что различные слова и они одинаковые длины.
[02:20:24.180 --> 02:20:33.700]  Тогда они, значит, пересекаются по префиксу-суфиксу. Тогда что получается?
[02:20:33.700 --> 02:21:00.740]  У нас есть... У нас здесь итог какой? Вот мы сделаем слово. У нас здесь вот это всё формула. Соответственно,
[02:21:00.740 --> 02:21:10.980]  давай сделать что? Здесь у нас был какой-то ноль, здесь снова ноль, здесь тоже должно стать относительно
[02:21:10.980 --> 02:21:20.940]  этого ноль. Если вы начали с первого символа, мы пошли сюда, то здесь больше или равно нулём.
[02:21:20.940 --> 02:21:42.100]  Причём может равняться нулю только если это поток каких-то отрицаний. Если здесь скобочный отток,
[02:21:42.100 --> 02:21:52.980]  в первый случай больше нуля. Давай рассмотрим. Больше нуля. Тогда к концу здесь будет что-то,
[02:21:52.980 --> 02:21:59.860]  что должно к нулю понизить. То есть, суммарно, на вот этом вот подслове у нас отрицательный скобочный
[02:21:59.860 --> 02:22:08.820]  итог. А у нас теория про то, что скобочный итог всегда не отрицательный. Значит, не может быть
[02:22:08.820 --> 02:22:19.620]  такого, что на этом моменте у нас больше нуля. Значит, здесь у нас могло идти только отрицание.
[02:22:19.620 --> 02:22:26.780]  Хорошо. Вот у нас будут отрицания, тогда у нас...
[02:22:27.780 --> 02:22:34.940]  Сейчас.
[02:22:48.940 --> 02:22:53.540]  Если просто отрицание даже не является формулой. Ну, само по себе.
[02:22:53.540 --> 02:23:06.020]  Ну, а дальше идёт что-то ещё. Тогда вот, что может произойти. Смотрим. У нас здесь ноль.
[02:23:06.020 --> 02:23:12.260]  Здесь на вот этом вот подслове у нас могло повыситься и дальше обратно ушло в ноль. То есть, у нас появился
[02:23:12.260 --> 02:23:19.620]  префикс во втором слове, на котором равняется нулю. Причём это не самон. Значит, это тоже всё отрицание.
[02:23:19.620 --> 02:23:26.420]  А значит, тогда первая формула, это просто вот, она вся представлена каким-то отрицательным. Но это
[02:23:26.420 --> 02:23:34.140]  же не пропозициональная формула, поэтому такого быть не может. Сейчас вопрос. То есть, как мы
[02:23:34.140 --> 02:23:40.580]  рассуждали, мы сказали, что рассмотрим два таких пересекающихся отрезка. Говорим, что первое символ
[02:23:40.580 --> 02:23:49.260]  первого слова, там должен быть скобочный итог. Почему ноль? Смотри. Чипа перед первым символом.
[02:23:49.260 --> 02:23:54.980]  Там же может открываться скобка быть. Почему вы там ноль записали? Давай ещё раз. Вот у нас есть
[02:23:54.980 --> 02:24:00.420]  какое-то слово. Да. А можете, пожалуйста, по клеточкам нарисовать, чтобы было понятно, в какой
[02:24:00.420 --> 02:24:06.380]  клеточке, какой символ. Просто типа это до или после. Вот если по клеточкам, тогда ясно.
[02:24:06.380 --> 02:24:16.500]  По каждой клеточке это каждый символ. Вот так будет ясно. Да, хорошо. Смотри, вот тут у меня слово
[02:24:16.500 --> 02:24:24.180]  начинается, вот это слово заканчивается. Вот тут я поставлю сколько-то там символов, там промежутки.
[02:24:24.180 --> 02:24:28.340]  Вот у меня первое слово будет как-нибудь идти вот так.
[02:24:28.340 --> 02:24:39.780]  Слово, а второе слово будет идти как-нибудь вот так.
[02:24:39.780 --> 02:24:49.220]  Так, второе слово. Так, давайте. Вот так вот я сделаю, что хоп-хоп. Знаешь, что здесь я снова
[02:24:49.220 --> 02:24:55.780]  поставлю три точки и здесь вот так. Там вот что-то внутри. В общем, начинаем смотреть относительно
[02:24:55.780 --> 02:25:22.260]  первого слова. Давай, молодец. Когда мы пришли сюда? Вот, когда мы пришли вот сюда, на эту
[02:25:22.260 --> 02:25:34.900]  границу к этому слову. Ну, здесь понятно, что больше равно нуля. Вот на этом префикс
[02:25:34.900 --> 02:25:46.140]  у нас больше равно нуля. Тогда что значит? Тогда у меня есть два варианта. Либо к этому моменту у нас
[02:25:46.140 --> 02:25:55.100]  станет ну, либо больше нуля. Давай рассматриваем, если стало на вот этой вот клетке стало больше нуля.
[02:25:55.100 --> 02:26:06.660]  Первый случай. Больше нуля. Тогда вот здесь что-то больше нуля. Хорошо. Значит, за оставшуюся штуку
[02:26:06.660 --> 02:26:12.220]  у нас должно появиться отрицательное количество, чтобы сумме стало нулем.
[02:26:12.220 --> 02:26:20.900]  Значит, здесь распределяется префикс с отрицательным. Да, тогда ясно. Окей, если равно нулю, значит,
[02:26:20.900 --> 02:26:29.860]  что это значит? Если равно нулю, это все были отрицания. Сейчас, а не может быть такого, что это
[02:26:29.860 --> 02:26:37.500]  еще одна формула типа? Нет, у нас же теорема про собственный префикс. У нас собственный префикс,
[02:26:37.500 --> 02:26:45.380]  если ноль, то это только последовательности с инверсией. А можно такой пример, если у нас, допустим,
[02:26:45.380 --> 02:26:59.020]  скобочках а, и, б, а, или, б, а потом еще и, или, б, то типа, и, а, мы должны еще скобочки навесить,
[02:26:59.020 --> 02:27:05.940]  да, и получается, что префикс не может иметь, что префикс не может быть формным, потому что там
[02:27:05.940 --> 02:27:13.100]  баланс будет положительный. Ну, сейчас, ну не совсем, смотри. В общем, здесь у нас
[02:27:13.100 --> 02:27:21.300]  стал ноль, здесь у нас ноль. Здесь получается суммарный префикс на вот, суммарный скобочный
[02:27:21.300 --> 02:27:29.220]  ток на вот этом вот префиксе второго слова, он ноль. А значит, это все последовательность из
[02:27:29.220 --> 02:27:37.300]  отрицаний, потому что собственный префикс второго слова. Ага. А значит, все первое слово
[02:27:37.300 --> 02:27:42.100]  это просто последовательности инверсии, а такого быть не может, потому что это непропозициональный
[02:27:42.100 --> 02:27:51.740]  фондов. Да, понятно. А то есть, если у нас, например, стоит отрицание из скобочка, как у нас в примере
[02:27:51.740 --> 02:28:17.300]  для второго пункта, мы не должны навешивать скобочки? Нет, у нас нет. На отрицание, если бы еще какая-нибудь скобочка была, то тогда пришлось бы. Ну, была бы не одна, а две, например. Нет.
[02:28:17.300 --> 02:28:37.180]  Вот наш вопрос. Окей, спасибо. Поэтому, Г, все. Ну и пункт Д, спойлер, как правило, такие, ну, очень маленькая вероятность,
[02:28:37.180 --> 02:28:47.340]  он будет выполнен. Как правило, Г просто вычекивает. И спойлер, здесь написано, выберите верные утверждения,
[02:28:47.340 --> 02:28:54.500]  но может оказываться так, что нужно будет выбрать одно. Поэтому не пугайтесь, в случае чего. Но такое бывает очень редко.
[02:28:54.500 --> 02:29:02.220]  Так, теперь следующий задание это стремит.
[02:29:24.500 --> 02:29:51.980]  У нас напоминание, что такое sknf и sdnf, и теперь про них свойства. Если число переменных больше 1, то одна и та же формула не может быть
[02:29:51.980 --> 02:30:11.500]  навременно sknf и sdnf. Вспоминаем, когда, может быть, sknf и sdnf, когда knf и dnf могут совпадать,
[02:30:11.500 --> 02:30:23.500]  ну, когда они вот так вот выглядят. Когда просто вот. Дизюнцы, конюнцы, что-то там. Но если у нас больше одних, то у нас по-любому нельзя сделать конюнты и дизюнты,
[02:30:23.500 --> 02:30:34.500]  которые будут содержать только одну переменную. Потому что это совершенное, они, значит, не должны содержать всю. Поэтому совпадение sknf и sdnf в таком случае невозможно.
[02:30:35.500 --> 02:30:47.500]  С пунктом B, ну, с пунктом B, может быть, то есть sknf и sdnf. Извините, можно точнить?
[02:30:47.500 --> 02:31:04.500]  Про случаи, когда они совпадают. Получается, у нас же там получилось, что они совпадают, сейчас скажу куда, что если каждый, ну, конкретно если мы говорим про, сейчас, секундочку.
[02:31:04.500 --> 02:31:08.500]  Короче, когда это либо просто дизюнцы, либо конюнцы.
[02:31:08.500 --> 02:31:10.500]  Ну, да.
[02:31:10.500 --> 02:31:21.500]  Ну, смотри, в любом случае, либо если конюнцы, либо дизюнцы, то у нас будет так, что либо конюнт будет из одной переменной, либо дизюнты из одной переменной.
[02:31:21.500 --> 02:31:30.500]  Но у нас чисто переменных больше одних. А у нас это совершенное. А значит, в каждом конюнте и дизюнте должно быть хотя бы две переменных.
[02:31:30.500 --> 02:31:46.500]  Ну, просто вопрос в том, что если мы говорим, что у нас типа sknf и sdnf совпадают. Вы сказали, что, допустим, если мы смотрим на sknf, то говорим, что у нас sknf и sdnf совпадают.
[02:31:46.500 --> 02:31:57.500]  Вот если вот у нас в sdnf просто получается, каждый конюнкта это одна переменная, но получается тогда на совершенную форму.
[02:31:57.500 --> 02:32:05.500]  Потому что, ну, как такое может быть, что у нас, блин, одна переменная, только которая сколько-то раз повторяется, это бред какой-то.
[02:32:05.500 --> 02:32:11.500]  Ну, да. Именно поэтому это неверно. То есть, совершенность, она нам всё попортила.
[02:32:11.500 --> 02:32:15.500]  То есть, если мы говорим про совершенность, то вообще не может такого быть, что они совпадают когда-либо.
[02:32:15.500 --> 02:32:20.500]  Возможно, когда число переменных равняется одному.
[02:32:20.500 --> 02:32:24.500]  А, ну, окей. Тогда у нас получается просто одна переменная справа и слева.
[02:32:24.500 --> 02:32:27.500]  Да. У нас просто какой-нибудь там проектор.
[02:32:27.500 --> 02:32:31.500]  Блин, понятно.
[02:32:31.500 --> 02:32:36.500]  Вот, sknf и sdnf совпадают. Ну, тут пример давайте просто сделаем.
[02:32:36.500 --> 02:32:47.500]  А или б. У нас функция дизюнкция, это её совершенно конюктивно нормальная форма, при этом это её дизюнктивно нормальная форма.
[02:32:47.500 --> 02:32:50.500]  Сейчас, секундочку. То есть, это одновременно...
[02:32:50.500 --> 02:32:59.500]  А, ну да, получается, если мы рассмотрим это как sknf, то типа у нас...
[02:32:59.500 --> 02:33:09.500]  Понятно, да. Это будет один конюнкт, а если как dnf, то мы увидим, что у нас тут типа один дизюнкт, да?
[02:33:09.500 --> 02:33:15.500]  Два дизюнкта. Ой, два конюнкта. У нас конюнкты.
[02:33:15.500 --> 02:33:19.500]  Да-да-да, но несовершенно.
[02:33:19.500 --> 02:33:35.500]  У любой функции tn переменных есть ровно одна sknf точностью до пристановки порядка дизюнтов и литералов.
[02:33:35.500 --> 02:33:38.500]  Да.
[02:33:38.500 --> 02:33:41.500]  Скнф только одна.
[02:33:41.500 --> 02:33:51.500]  А теперь вспоминаем важное уточнение про sknf и dnf. У нас есть тождественная единица, тождественная ноль.
[02:33:51.500 --> 02:33:59.500]  Вот, например, тождественную единицу для двух переменных у тебя не будет. Совершенно конюктивно нормальная форма.
[02:33:59.500 --> 02:34:11.500]  Сейчас, знаете, можно еще раз, а почему так получается, если у меня тождественная истина для двух переменных, когда такое может быть вообще быть?
[02:34:11.500 --> 02:34:24.500]  Когда легко, смотри.
[02:34:24.500 --> 02:34:26.500]  Что это за функция тогда будет?
[02:34:26.500 --> 02:34:30.500]  Это функция тождественной единицы от двух аргументов.
[02:34:30.500 --> 02:34:43.500]  Сейчас. То есть у нас у нее не может быть sknf, потому что sknf мы там берем везде, где у нас вообще-то единички нет, поэтому...
[02:34:43.500 --> 02:34:45.500]  Ну, грубо говоря.
[02:34:45.500 --> 02:34:51.500]  Сейчас. С sknf мы конъектируем все возможные...
[02:34:51.500 --> 02:34:57.500]  А, нолики. Да-да-да, нолики. А ноликов нет.
[02:34:57.500 --> 02:35:04.500]  А что такое-то у меня? Экран гастит?
[02:35:04.500 --> 02:35:10.500]  А, короче, для тождественной истины нету ноликов, поэтому мы типа не можем строить sknf, а для тождественной лжи нету единичек, поэтому не можем строить н道личку.
[02:35:15.500 --> 02:35:27.500]  Наоборот, для тождественной истины нету ноликов, поэтому не можем строить krun封gre, а для тождественной лжи нету единичек, поэтому не можем строить dnf.
[02:35:27.500 --> 02:35:33.500]  Но только замечания не просто connection krun, а sknf2, sknf2 иwhe.
[02:35:33.500 --> 02:35:36.860]  Так, подождите, knf и dnf просто тоже мы не можем построить.
[02:35:36.860 --> 02:35:39.860]  Можем. Это единственные единицы.
[02:35:39.860 --> 02:35:42.860]  Да, как?
[02:35:42.860 --> 02:35:44.860]  И knf и dnf, вот.
[02:35:44.860 --> 02:35:49.860]  Ааа, блин, ну понятно, да-да-да, всё, совершенно не можем.
[02:35:49.860 --> 02:35:51.860]  Просто мы не сможем сделать всё совершенно.
[02:35:51.860 --> 02:35:55.860]  Хорошо, если функции нет с knf, то у неё есть с dnf.
[02:35:55.860 --> 02:35:59.860]  Но если нет с knf, то скорее всего, когда мы строили таблицитность, у нас нигде не было нулей.
[02:36:00.220 --> 02:36:09.220]  Ну значит у неё где-то будет единица, а значит мы сможем построить из dnf.
[02:36:09.220 --> 02:36:12.220]  Да, конечно.
[02:36:14.220 --> 02:36:17.220]  Ну и это, ну, тупая штучка.
[02:36:17.220 --> 02:36:20.220]  Хорошо.
[02:36:22.220 --> 02:36:25.220]  Номер 8.
[02:36:25.580 --> 02:36:32.580]  А, это кажется корнояр, понял, что мы сегодня так делали.
[02:36:42.580 --> 02:36:48.580]  Вот, нам нужно понять тавтологию выполнимой противоречия.
[02:36:48.580 --> 02:36:53.580]  Здесь, как правило, ну, короче, здесь мы пользуемся тем методом, который я сказал.
[02:36:53.940 --> 02:37:00.940]  То есть у нас есть какая-то, есть у всех этих функций особенность, что есть набор значений,
[02:37:00.940 --> 02:37:04.940]  причём единственный, которым она там принимает тогда и только тогда единицу или ноль.
[02:37:04.940 --> 02:37:09.940]  Вот, например, импликация будет принимать ноль тогда и только тогда,
[02:37:09.940 --> 02:37:12.940]  когда посылка единицы заключение ноль.
[02:37:12.940 --> 02:37:15.940]  То есть это всё единица, это ноль.
[02:37:15.940 --> 02:37:19.940]  Смотрим сюда, здесь импликация снова ноль.
[02:37:19.940 --> 02:37:22.940]  Значит, теперь здесь единица, здесь ноль.
[02:37:23.300 --> 02:37:25.300]  Справа ноль.
[02:37:25.300 --> 02:37:28.300]  Значит, П равняется единице, Р равняется ноль.
[02:37:33.300 --> 02:37:36.300]  Мы хотим...
[02:37:36.300 --> 02:37:41.300]  Скажите, то есть мы рассматриваем просто вариант, когда у нас получается ноль?
[02:37:41.300 --> 02:37:42.300]  Да.
[02:37:42.300 --> 02:37:45.300]  Он сверху, он возможен только в одном случае.
[02:37:45.300 --> 02:37:48.300]  Вот мы его хотим посмотреть, возможен ли он.
[02:37:48.300 --> 02:37:52.300]  Извините, можно точить, а противоречие это значит, когда всегда ноль?
[02:37:53.300 --> 02:37:56.300]  Противоречие, когда всегда ноль, да.
[02:38:02.300 --> 02:38:05.300]  Так, нам теперь мы хотим Q получить...
[02:38:05.300 --> 02:38:07.300]  Мы хотим с левой получить единицу.
[02:38:07.300 --> 02:38:10.300]  Для этого Q нам придётся сделать единицы.
[02:38:10.300 --> 02:38:14.300]  Смотрим, что получилось в А, получилось ли там единица.
[02:38:14.300 --> 02:38:19.300]  Из Q следует R, это ноль, из единицы следует ноль, это ноль.
[02:38:19.300 --> 02:38:25.300]  У нас не получилось единица, соответственно, получить ноль по всей формуле мы не можем.
[02:38:25.300 --> 02:38:28.300]  Значит, у нас всегда будет единица.
[02:38:30.300 --> 02:38:32.300]  Да, это вторая.
[02:38:34.300 --> 02:38:36.300]  Со второй штукой.
[02:38:36.300 --> 02:38:38.300]  Аналогично, это всё должно дать...
[02:38:38.300 --> 02:38:43.300]  Вот это должно выдать единицу, чтобы это стало нулём, это должно стать нулём.
[02:38:43.300 --> 02:38:45.300]  Тогда это нулём, это единица.
[02:38:45.300 --> 02:38:47.300]  Если это ноль, то 1, 0.
[02:38:47.300 --> 02:38:49.300]  Q это 1, 1.
[02:38:51.300 --> 02:38:53.300]  Тогда 1, 1, 0.
[02:38:53.300 --> 02:38:55.300]  Проверяем, что всё хорошо.
[02:38:57.300 --> 02:38:59.300]  У нас единичка изначально не получилась.
[02:38:59.300 --> 02:39:01.300]  Из единицы следует ноль, это ноль.
[02:39:01.300 --> 02:39:03.300]  Да, всё. Это тоже тавтология.
[02:39:05.300 --> 02:39:07.300]  Третий номер.
[02:39:07.300 --> 02:39:09.300]  Поехали.
[02:39:09.300 --> 02:39:10.300]  Конъюнция.
[02:39:10.300 --> 02:39:12.300]  Теперь для неё, когда она равняется нолью?
[02:39:12.300 --> 02:39:15.300]  Когда всё равняется единице?
[02:39:15.300 --> 02:39:17.300]  Когда всё равняется единице?
[02:39:18.300 --> 02:39:22.300]  То есть вот это всё должно обратиться единице, это всё должно обратиться единице.
[02:39:22.300 --> 02:39:25.300]  Ну, очевидно, что такое возможно.
[02:39:29.300 --> 02:39:31.300]  Сейчас скажу.
[02:39:35.300 --> 02:39:37.300]  Вот здесь вот сделаем единицу.
[02:39:37.300 --> 02:39:39.300]  Тогда это всё станет с левой единицы.
[02:39:41.300 --> 02:39:43.300]  Здесь сделаем ну, допустим, q0.
[02:39:43.300 --> 02:39:45.300]  Тогда всё станет единицей, всё даст единицу.
[02:39:45.300 --> 02:39:47.300]  Но в целом надо было понять,
[02:39:47.300 --> 02:39:49.300]  что это типа...
[02:39:49.300 --> 02:39:51.300]  Это sknf.
[02:39:51.300 --> 02:39:53.300]  Причём sknf...
[02:39:53.300 --> 02:39:55.300]  А, сейчас. Если это sknf, то это понятно, что это уже не...
[02:39:57.300 --> 02:39:59.300]  Это sknf.
[02:39:59.300 --> 02:40:01.300]  Здесь только два дизюнта.
[02:40:01.300 --> 02:40:03.300]  Значит, у нас только два набора в таблице есть инстинкционированные.
[02:40:03.300 --> 02:40:05.300]  Все остальные мы можем как-то менять.
[02:40:05.300 --> 02:40:07.300]  А значит, это не ноль, не единица.
[02:40:11.300 --> 02:40:13.300]  Поэтому это вот так.
[02:40:17.300 --> 02:40:19.300]  Вот.
[02:40:19.300 --> 02:40:21.300]  Теперь у нас всё немножко интереснее стало.
[02:40:21.300 --> 02:40:23.300]  У нас теперь что-то похожее на минимальность.
[02:40:25.300 --> 02:40:27.300]  sknf.
[02:40:27.300 --> 02:40:29.300]  Не r.
[02:40:29.300 --> 02:40:31.300]  Когда у нас всё равняется единице.
[02:40:31.300 --> 02:40:33.300]  Но когда r равняется, получается ноль.
[02:40:35.300 --> 02:40:37.300]  Хорошо.
[02:40:37.300 --> 02:40:39.300]  И теперь вот эта скобка должна стать единицей.
[02:40:39.300 --> 02:40:41.300]  Она станет единицей, когда q станет 0.
[02:40:41.300 --> 02:40:43.300]  Это 0.
[02:40:43.300 --> 02:40:45.300]  Тогда p должно стать тоже 0.
[02:40:45.300 --> 02:40:47.300]  Смотрим.
[02:40:47.300 --> 02:40:49.300]  0, 0, 0. Это 0.
[02:40:49.300 --> 02:40:51.300]  Значит, даже если мы бы захотели поставить единицу,
[02:40:51.300 --> 02:40:53.300]  мы всё равно станем 0.
[02:40:53.300 --> 02:40:55.300]  Значит, это всегда противоречие.
[02:40:59.300 --> 02:41:01.300]  Ну и последнее, как было с импликациями.
[02:41:01.300 --> 02:41:03.300]  Это единица, это 0.
[02:41:03.300 --> 02:41:05.300]  Значит, это единица, это 0.
[02:41:11.300 --> 02:41:13.300]  p 0. То есть это простится просто.
[02:41:13.300 --> 02:41:15.300]  Да, q следует r.
[02:41:15.300 --> 02:41:17.300]  Должно равняться единице.
[02:41:17.300 --> 02:41:19.300]  При этом r следует не q.
[02:41:19.300 --> 02:41:21.300]  Тоже должно равняться единице.
[02:41:21.300 --> 02:41:23.300]  Ну давайте посмотрим, что.
[02:41:23.300 --> 02:41:25.300]  Если сначала мы хотим обратить в 0.
[02:41:25.300 --> 02:41:27.300]  Да, вот мы сейчас хотим обратить в 0.
[02:41:27.300 --> 02:41:29.300]  Как мы это можем делать?
[02:41:29.300 --> 02:41:31.300]  Мы единицу давайте r сделаем 0.
[02:41:33.300 --> 02:41:35.300]  Ой, да?
[02:41:35.300 --> 02:41:37.300]  0.
[02:41:37.300 --> 02:41:39.300]  Тогда это 0.
[02:41:39.300 --> 02:41:41.300]  Тогда q нам тоже нужно будет сделать 0.
[02:41:41.300 --> 02:41:43.300]  Всё. Мы обратили в единицу.
[02:41:43.300 --> 02:41:45.300]  Мы нашли, когда у нас
[02:41:49.300 --> 02:41:51.300]  вся функция обратится в 0.
[02:41:51.300 --> 02:41:53.300]  Может она обратится в единицу?
[02:41:55.300 --> 02:41:57.300]  Когда просто левая часть
[02:41:57.300 --> 02:41:59.300]  равняется 0,
[02:41:59.300 --> 02:42:01.300]  для этого p или q
[02:42:03.300 --> 02:42:05.300]  должны
[02:42:05.300 --> 02:42:07.300]  из них должно быть
[02:42:07.300 --> 02:42:09.300]  0 следует r.
[02:42:09.300 --> 02:42:11.300]  Хотим просто сделать это 0.
[02:42:11.300 --> 02:42:13.300]  Когда из 0 следует хоть что-то,
[02:42:13.300 --> 02:42:15.300]  это всегда единица.
[02:42:15.300 --> 02:42:17.300]  Значит, r должно стать 0.
[02:42:17.300 --> 02:42:19.300]  Это единица. Ну давайте я сделаю
[02:42:19.300 --> 02:42:21.300]  p 1 1 2.
[02:42:21.300 --> 02:42:23.300]  Набор не ждет выполняющей.
[02:42:23.300 --> 02:42:25.300]  Всё.
[02:42:27.300 --> 02:42:29.300]  Всё.
[02:42:33.300 --> 02:42:35.300]  Вот.
[02:42:35.300 --> 02:42:37.300]  Номер 9.
[02:42:39.300 --> 02:42:41.300]  Номер 9
[02:42:41.300 --> 02:42:43.300]  чисто на то, чтобы
[02:42:43.300 --> 02:42:45.300]  помнить определение.
[02:42:51.300 --> 02:42:53.300]  Если вы внезапно
[02:42:53.300 --> 02:42:55.300]  забыли там про
[02:42:55.300 --> 02:42:57.300]  штрихшефера стрелку пирса,
[02:42:57.300 --> 02:42:59.300]  ну не судьба.
[02:42:59.300 --> 02:43:01.300]  Берём делаем что?
[02:43:01.300 --> 02:43:03.300]  Просто чертим таблицу истинности.
[02:43:03.300 --> 02:43:05.300]  Давайте конъюнция.
[02:43:05.300 --> 02:43:07.300]  Конъюнция у нас была какая?
[02:43:07.300 --> 02:43:09.300]  0 0 1 1 0 1 0 1
[02:43:09.300 --> 02:43:11.300]  Конъюнция у нас была
[02:43:11.300 --> 02:43:13.300]  0 0 0 1
[02:43:13.300 --> 02:43:15.300]  Дальше.
[02:43:15.300 --> 02:43:17.300]  Дизъюнция.
[02:43:17.300 --> 02:43:19.300]  0 0 0 1 1
[02:43:19.300 --> 02:43:21.300]  1 0 1 0 1
[02:43:21.300 --> 02:43:23.300]  Есть какой-нибудь способ быстрее сделать?
[02:43:23.300 --> 02:43:25.300]  То есть, например, там, если додумать,
[02:43:25.300 --> 02:43:27.300]  что у нас есть
[02:43:27.300 --> 02:43:29.300]  функции 10, мы же не будем их все
[02:43:29.300 --> 02:43:31.300]  делать.
[02:43:31.300 --> 02:43:33.300]  Способ быстрее?
[02:43:33.300 --> 02:43:35.300]  Я не знаю.
[02:43:35.300 --> 02:43:37.300]  Просто чертим таблицу
[02:43:37.300 --> 02:43:39.300]  быстро.
[02:43:39.300 --> 02:43:41.300]  Всё. Отлично. Спасибо.
[02:43:41.300 --> 02:43:43.300]  Способ быстрее вообще есть,
[02:43:43.300 --> 02:43:45.300]  если ты будешь помнить, там, например,
[02:43:45.300 --> 02:43:47.300]  умножение, там, минимум,
[02:43:47.300 --> 02:43:49.300]  это всё. Конъюнция, там.
[02:43:49.300 --> 02:43:51.300]  Это надо помнить.
[02:43:51.300 --> 02:43:53.300]  Это уже сложно.
[02:43:53.300 --> 02:43:55.300]  Да.
[02:43:55.300 --> 02:43:57.300]  Это уже сложно.
[02:43:57.300 --> 02:43:59.300]  Всё.
[02:43:59.300 --> 02:44:01.300]  Только практикой помнись. Здесь как
[02:44:01.300 --> 02:44:03.300]  1 0 1 0. Дальше
[02:44:03.300 --> 02:44:05.300]  минимум.
[02:44:05.300 --> 02:44:07.300]  Ну и плюс, там, могут дать функцию,
[02:44:07.300 --> 02:44:09.300]  там, типа
[02:44:09.300 --> 02:44:11.300]  A плюс B по модулю 5
[02:44:11.300 --> 02:44:13.300]  да умножить на 3, потом взять модуль
[02:44:13.300 --> 02:44:15.300]  по 2. Ну, такую функцию,
[02:44:15.300 --> 02:44:17.300]  естественно, ты не запомнишь, тебе нужно вот просчитать
[02:44:17.300 --> 02:44:19.300]  две такой сутики.
[02:44:19.300 --> 02:44:21.300]  И такое было в прошлом году,
[02:44:21.300 --> 02:44:23.300]  поэтому просто будьте готовы.
[02:44:23.300 --> 02:44:25.300]  Инкликация
[02:44:25.300 --> 02:44:27.300]  P следует Q.
[02:44:27.300 --> 02:44:29.300]  Ой, минимум.
[02:44:29.300 --> 02:44:31.300]  Извините, так что мы просто берём каждую функцию,
[02:44:31.300 --> 02:44:33.300]  встроим для неё таблицу истины, потом смотрим,
[02:44:33.300 --> 02:44:35.300]  есть ли среди них одинаковые таблицы истины.
[02:44:35.300 --> 02:44:37.300]  Да.
[02:44:37.300 --> 02:44:39.300]  В этом всё задача.
[02:44:39.300 --> 02:44:41.300]  Минимум
[02:44:41.300 --> 02:44:43.300]  максимум
[02:44:43.300 --> 02:44:45.300]  умножение.
[02:44:47.300 --> 02:44:49.300]  Задача меры халявная,
[02:44:49.300 --> 02:44:51.300]  это просто балл, который must have.
[02:44:53.300 --> 02:44:55.300]  Здесь единственный способ не получить балл,
[02:44:55.300 --> 02:44:57.300]  как я в своё время это сделал.
[02:44:57.300 --> 02:44:59.300]  Вы просто неправильно
[02:44:59.300 --> 02:45:01.300]  прочитаете условия по невнимательности.
[02:45:03.300 --> 02:45:05.300]  Всё. Других шансов нет.
[02:45:09.300 --> 02:45:11.300]  Меньше равно, но
[02:45:11.300 --> 02:45:13.300]  это верно, верно,
[02:45:13.300 --> 02:45:15.300]  неверно, верно.
[02:45:15.300 --> 02:45:17.300]  Всё, теперь разбиваем по группы.
[02:45:17.300 --> 02:45:19.300]  Поехали.
[02:45:19.300 --> 02:45:21.300]  Конъюнция, минимум,
[02:45:21.300 --> 02:45:23.300]  умножение будут в одной группе,
[02:45:23.300 --> 02:45:25.300]  дизъюнция, максимум в другой группе,
[02:45:25.300 --> 02:45:27.300]  импликация,
[02:45:27.300 --> 02:45:29.300]  всё равно в третью, всё.
[02:45:31.300 --> 02:45:33.300]  Один, два, три.
[02:45:39.300 --> 02:45:41.300]  Всё, а что требует задача?
[02:45:41.300 --> 02:45:43.300]  Покажите разбиение
[02:45:43.300 --> 02:45:45.300]  на группы одинаковых.
[02:45:45.300 --> 02:45:47.300]  А, всё.
[02:45:47.300 --> 02:45:49.300]  Десятая, она уже смысловая.
[02:45:51.300 --> 02:45:53.300]  Могут быть разные варианты,
[02:45:53.300 --> 02:45:55.300]  остальные.
[02:46:03.300 --> 02:46:05.300]  Как решать
[02:46:05.300 --> 02:46:07.300]  эту задачу?
[02:46:07.300 --> 02:46:09.300]  Ну, короче,
[02:46:09.300 --> 02:46:11.300]  как её делать?
[02:46:11.300 --> 02:46:13.300]  Для начала мы чертим
[02:46:13.300 --> 02:46:15.300]  таблицу истинности.
[02:46:15.300 --> 02:46:17.300]  Следующую.
[02:46:17.300 --> 02:46:19.300]  Она должна была быть
[02:46:19.300 --> 02:46:21.300]  типа вниз.
[02:46:21.300 --> 02:46:23.300]  Но
[02:46:23.300 --> 02:46:25.300]  я её транспонирую, чтобы
[02:46:25.300 --> 02:46:27.300]  проще умещать
[02:46:27.300 --> 02:46:29.300]  на странице,
[02:46:29.300 --> 02:46:31.300]  не листать туда-сюда.
[02:46:31.300 --> 02:46:33.300]  Извините, можно точнить?
[02:46:33.300 --> 02:46:35.300]  Можете немножко вверх прокручить,
[02:46:35.300 --> 02:46:37.300]  чтобы условия увидеть?
[02:46:37.300 --> 02:46:39.300]  Сколько существует
[02:46:39.300 --> 02:46:41.300]  негавиолетных формулат?
[02:46:41.300 --> 02:46:43.300]  Таких, что формулы
[02:46:43.300 --> 02:46:45.300]  одновременно
[02:46:45.300 --> 02:46:47.300]  являются тавтологиями.
[02:46:47.300 --> 02:46:49.300]  Нужно, в принципе,
[02:46:49.300 --> 02:46:51.300]  и про себя читать.
[02:46:55.300 --> 02:46:57.300]  В общем, поехали чертим таблицу.
[02:47:15.300 --> 02:47:17.300]  То есть, там, по-моему,
[02:47:17.300 --> 02:47:19.300]  в прошлых годах я делал так,
[02:47:19.300 --> 02:47:21.300]  что сначала таблица там была
[02:47:21.300 --> 02:47:23.300]  А, ПКР,
[02:47:23.300 --> 02:47:25.300]  но сейчас я попробовал таблицу ПКРа
[02:47:25.300 --> 02:47:27.300]  и понял, что она более приятная,
[02:47:27.300 --> 02:47:29.300]  понятная и хорошая.
[02:47:29.300 --> 02:47:31.300]  Вот у нас есть две тавтологии.
[02:47:31.300 --> 02:47:33.300]  Вот есть первая, вот есть вторая.
[02:47:33.300 --> 02:47:35.300]  А в чём вопрос заключается?
[02:47:35.300 --> 02:47:37.300]  Что значит негавиолетная формула А?
[02:47:37.300 --> 02:47:39.300]  Ну,
[02:47:39.300 --> 02:47:41.300]  ну,
[02:47:41.300 --> 02:47:43.300]  ну,
[02:47:43.300 --> 02:47:45.300]  а каковая негавиолетная формула А?
[02:47:45.300 --> 02:47:47.300]  Помнить, мы говорили
[02:47:47.300 --> 02:47:49.300]  квалентные формулы,
[02:47:49.300 --> 02:47:51.300]  которые
[02:47:51.300 --> 02:47:53.300]  задают
[02:47:53.300 --> 02:47:55.300]  одинаковые более функции,
[02:47:55.300 --> 02:47:57.300]  а это некоторые
[02:47:57.300 --> 02:47:59.300]  формулы от переменных ПКР.
[02:48:03.300 --> 02:48:05.300]  У нас
[02:48:05.300 --> 02:48:07.300]  просто сколько таких формул
[02:48:07.300 --> 02:48:09.300]  некавиолетных будет?
[02:48:09.300 --> 02:48:11.300]  Задача чиста на
[02:48:11.300 --> 02:48:17.980]  чтобы заполнить алгоритм ее решений. Извините, можно точнить? Диаформы считаются
[02:48:17.980 --> 02:48:23.820]  эквивалентными, если у них для одного, каждому набору значений
[02:48:23.820 --> 02:48:30.220]  соответствует одно и то же значение, да? Точнее, каждому набору переменных. Да, и значения на всех
[02:48:30.220 --> 02:48:36.260]  наборах переменных совпадают. Короче, таблица истинности одинаковая, понятно? Да. В общем, рисуем
[02:48:36.260 --> 02:48:43.660]  таблице истинности для этого добра. Давайте, чтобы не тратить наше время, я попытаюсь...
[02:49:06.260 --> 02:49:29.700]  Будем надеяться, что... Я вроде проверял по онлайн-калькулятору, но если я не так,
[02:49:29.700 --> 02:49:36.580]  ну, простите, это значит просто поменять условия. Смысл я сейчас расскажу.
[02:49:36.580 --> 02:50:00.580]  Это первая, это вторая. Вот, короче, это вот соответственно первая от автологии, это вторая.
[02:50:00.580 --> 02:50:10.980]  Дальше мы дополнительно можем что сделать? Мы можем нашу табличку разбить на... Вот выделить колонки
[02:50:10.980 --> 02:50:19.580]  вот там. Что произошло, когда я разделил на такие вот колонки? Извините, можно просто... А нам
[02:50:19.580 --> 02:50:26.200]  говорят, нужно, чтобы одновременно f1 и f2 были автологиями, тогда значений на уликах вообще не
[02:50:26.200 --> 02:50:39.920]  должно быть. Вот сейчас мы этим будем заниматься. Короче, вот я разбил на под колонки. В чем смысл этих
[02:50:39.920 --> 02:50:45.480]  под колонок? На этих колонок внутри колонки изменяется только значение переменной a. PQR у них
[02:50:45.480 --> 02:50:57.820]  одинаково. Тогда мне теперь нужно будет вот внизу выбрать то значение a так, чтобы обе формулы
[02:50:57.820 --> 02:51:05.660]  давали единицу. Вот, например, здесь я могу выбрать значение только 0, потому что если я выберу a1,
[02:51:05.660 --> 02:51:12.140]  то у меня одна не обратится в автологию. Соответственно, здесь я выбираю только единицу,
[02:51:12.140 --> 02:51:17.880]  здесь я выбираю только 0, здесь я выбираю только единицу, здесь я только 0, здесь я только единицу,
[02:51:17.880 --> 02:51:31.920]  здесь я только единицу. И у меня осталась одна свободная. Тогда количество вариантов неквариентных
[02:51:31.920 --> 02:51:45.320]  a будет ровно столько, сколько вот позиций я могу выбрать. Я могу что? Я могу выбрать. Даже не так
[02:51:45.320 --> 02:51:52.040]  и скажу. В общем, у меня вот есть большие такие прямокольники. У меня вот есть набор на трех нулях,
[02:51:52.040 --> 02:51:56.840]  и там есть два варианта. Соответственно, я 2 в степени 1 равняется 2. У меня есть два варианта.
[02:51:56.840 --> 02:52:05.000]  Если бы у меня, например, вот здесь был бы один и здесь был бы один. У меня еще на выбор было вот
[02:52:05.000 --> 02:52:12.200]  этот вот прямокольничек, вот этот. Соответственно, всего тогда у меня было вариантов 2 в степени 3 равняется 8.
[02:52:12.200 --> 02:52:28.440]  Дальше же нас, все вернули как есть. Дальше нас просят, если существует, укажите количество,
[02:52:28.440 --> 02:52:34.920]  проведите хотя бы один пример. Как привести пример? Мы берем теперь стом таблицу истинности
[02:52:34.920 --> 02:52:54.240]  PQR, а здесь уже a будет как функция. Здесь a. Смотрите, в каких-то мы уже зафиксировали
[02:52:54.240 --> 02:53:13.040]  переменные. Вот мы берем то, что зафиксировали, то и проставляем. Ну и дальше мне просто нужно
[02:53:13.040 --> 02:53:18.600]  выбрать какое-то значение на пустых. Давайте я выберу 1, чтобы было меньше 0. И теперь я могу построить
[02:53:18.600 --> 02:53:28.040]  формулу A, привести пример. Какой пример приведу? Я построю KNF по этой штуке. Минимизировать там
[02:53:28.040 --> 02:53:36.160]  упрощать мне не надо, мне нужно просто привести пример. Поэтому что я делаю? Я беру P или Q или не R,
[02:53:36.160 --> 02:53:51.720]  конъюнция P или не Q или не R, конъюнция, конъюнция не P или Q или не R. Все, вот пример такой. И ответ 2. Когда
[02:53:51.720 --> 02:54:05.480]  может не быть таких? Когда у меня будет такой набор, что обе штуки примут значение 0.
[02:54:05.480 --> 02:54:15.200]  Вот и как доказать, что не будет? Вот мы говорим, что на наборе переменных PQR, вот видите он здесь
[02:54:15.200 --> 02:54:22.120]  одинаковый. Вот на этом наборе обе функции обнуляются, а значит вне зависимости они обе
[02:54:22.120 --> 02:54:39.680]  обнуляются вне зависимости от значения A, хотя бы одна из этих функций обнулиться на наборе
[02:54:39.680 --> 02:54:46.760]  переменных PQR равном 1.0. И перевели таблету сесленности, показали, что это действительно так,
[02:54:46.760 --> 02:54:56.360]  все. Это доказать того, что такого быть не может. Это в целом очень легко, но и в другом случае,
[02:54:56.360 --> 02:55:06.560]  когда сколько их тоже легко. А упрощать эту функцию надо или нет? Нет, тебе надо просто привести пример.
[02:55:06.560 --> 02:55:18.080]  Кстати, спойлер. Обратите внимание на то, что 2 в степени что-то нужно правильно посчитать,
[02:55:18.080 --> 02:55:27.200]  потому что у меня было 2 в степени 3 равняется 16, у меня не за очки, на задачу. А может объяснить,
[02:55:27.200 --> 02:55:34.360]  какую последнюю функцию построили? Ну смотри, у меня здесь уже на какие-то наборы значения PQR
[02:55:34.360 --> 02:55:45.080]  значение A выбрано. Мы зафиксировали так, чтобы это обратилось все в единицу всегда. Здесь единица будет,
[02:55:45.080 --> 02:55:52.120]  здесь единица, здесь единица, здесь единица, здесь единица, здесь единица, здесь единица. Да вот,
[02:55:52.120 --> 02:56:01.880]  мы запретили принимать нули, по сути. Тогда я беру вот эти все наборы, я их записал. Вот прям так,
[02:56:01.880 --> 02:56:08.080]  я их все записал. У меня остались не заполненные клетки. Эти не заполненные клетки есть варианты того,
[02:56:08.080 --> 02:56:15.920]  какие значения A может принимать. Ну я выбираю произвольное, которое я хочу. Я вот хочу построить
[02:56:15.920 --> 02:56:22.640]  DNF и мне будет проще, если я сделаю, ой, я хочу построить KNF, и мне будет проще, если не будет нули.
[02:56:22.640 --> 02:56:28.360]  Я беру, ставлю сюда единицу. И теперь просто я беру, выписываю KNF.
[02:56:28.360 --> 02:56:38.400]  Спасибо.
[02:56:38.400 --> 02:56:54.160]  11 мы разобрали. Давайте, если есть какие-то вопросы, сейчас их обсудим. В конце остался номер.
[02:56:54.160 --> 02:57:04.200]  Промногочленжи Галкина. Что вы сейчас, напишите многочленжи Галкина, задающий ту же функцию,
[02:57:04.200 --> 02:57:12.640]  что это форум. Как строить многочленжи Галкина? Ну называют, сейчас, спросим. Ответа недостаточно,
[02:57:12.640 --> 02:57:16.520]  нужно объяснить, как он получен. Можно использовать любым известным вам методом, даже если вы не
[02:57:16.520 --> 02:57:21.960]  имеете доказывать его коэксперимент. Как делать? Мы берем пользу всем методом треугольника Паскаля.
[02:57:21.960 --> 02:57:28.800]  Вот, например, для этих форумов. Треугольник Паскаля. Ну что? Берем, выписываем, как наука,
[02:57:28.800 --> 02:57:50.400]  тогда я рассказывал. Берем по модулю два склада соседние. Все. А теперь берем соответствующие
[02:57:50.400 --> 02:58:04.920]  мономы. Берем сначала единичку. Вот эта единичка. Это у нас R, а в конце у нас PQR. Тогда ответ
[02:58:04.920 --> 02:58:27.160]  1 XOR. R XOR PQR. Называется метод треугольника Паскаля. Вы не могли бы объяснить,
[02:58:27.160 --> 02:58:34.960]  как он работает и как отсюда мы получаем этот? Просто у меня не было, с честным прошлым семинарием,
[02:58:34.960 --> 02:58:43.880]  я не знаю. Ну давай еще раз объясню. В общем, у нас есть таблица истинности. Первая строчка мы
[02:58:43.880 --> 02:58:51.040]  всегда сопоставляем моном единицу. Всегда просто, потому что нельзя набрать перемены.
[02:58:51.040 --> 02:59:00.120]  Во всех остальных строчках мы сопоставляем моном, где, моном из переменных, те, моном из тех
[02:59:00.120 --> 02:59:05.560]  переменных, которые принимают значение единицу. То есть, например, здесь R принимает единицу,
[02:59:05.560 --> 02:59:12.280]  поэтому это R, здесь только Q, поэтому Q, здесь единица принимает QR. Здесь только P, здесь PR,
[02:59:12.280 --> 02:59:24.800]  здесь PQ, здесь PQR. Все. Дальше мы берем, транспанируем вектор функции, вектор значений функции,
[02:59:24.800 --> 02:59:35.440]  получаем строку и начинаем с соседней чисто XOR-ить и получать следующую строку длины на один меньше.
[02:59:35.440 --> 02:59:41.720]  И вот так вот мы берем каждый раз XOR-им соседов. На XOR-е... Сейчас, секундочку, сейчас, извините,
[02:59:41.720 --> 02:59:46.520]  можно просто, можете еще раз спробовать вверх, я хочу понять там, где... Почему мы каждой вот этой
[02:59:46.520 --> 02:59:54.960]  строчке, тут типа R, сейчас, секундочку, буквально здесь единичка, а почему единичка? Потому что,
[02:59:54.960 --> 03:00:03.280]  почему это единичка? Потому что так в таблице истинности устроено. Сейчас, а, все, я понял. Да,
[03:00:03.280 --> 03:00:09.280]  просто у нас тут так в таблице истински построено, так она, потому что так она выглядит. Теперь мы
[03:00:09.280 --> 03:00:23.200]  берем, так делаем, все. Тогда что? Мы нахурили, а теперь мы берем, смотрим на самый левый ряд.
[03:00:23.200 --> 03:00:31.760]  Везде, где стоят единицы, мы берем следующие эти маномы, то есть берем первый, второй, последний,
[03:00:31.760 --> 03:00:42.080]  это 1, R, P, Q, R. И все, просто соединяем с значками XOR. Сейчас, секундочку, 1, R, P, Q, R. А, я понял,
[03:00:42.080 --> 03:00:47.000]  сейчас, то есть я понял, что мы каждый этой сопоставляем букву соответствующим тем,
[03:00:47.000 --> 03:00:52.680]  как они идут тут в порядке, да? Окей. И там, где единички, мы умножаем на соответствующие произведения.
[03:00:52.680 --> 03:01:00.960]  Ну, это есть много членов для Галкина, да? Да. А почему это работает? А это домашка. Это кому-то...
[03:01:00.960 --> 03:01:06.720]  Сейчас, это... Это будет... Кому-то попадется домашняя задача, в которой нужно бы доказать то,
[03:01:06.720 --> 03:01:12.960]  что вот это работает, это он работает. А, ну, что мы в итоге получили, это мы для чего делаем?
[03:01:12.960 --> 03:01:22.520]  Это задача последняя. Ну, то есть там, что поплосят, выберите какую-то там из всех формул и постойте
[03:01:22.520 --> 03:01:33.080]  для нее поляном Жигалкина. Не, мы в прошлый раз для чего-то другого же это делали. То есть это не
[03:01:33.080 --> 03:01:39.640]  просто построить поляном Жигалкина, он для чего-то же используется. Ну, в данной задачи мы просто
[03:01:39.640 --> 03:01:45.560]  хотим просто поляном Жигалкина. В прошлый раз мы это использовали для решения задач по теории
[03:01:45.560 --> 03:01:52.840]  множества. Где он используется? Ну, с поляном Жигалкина... Почему он хороший? С ним удобнее
[03:01:52.840 --> 03:02:01.560]  работать, если у вас какие-то учисления были. Плюс им удобно, например, доказывать, ну, опять же,
[03:02:01.560 --> 03:02:07.720]  всякие теоретико-множественные факты, типа вложения. Как его доказывать? Ну, что такое вложение?
[03:02:07.720 --> 03:02:16.120]  Попробуйте посмотреть, какой функции соответствует то, что A вложено в B. Спойлер там будет связан
[03:02:16.120 --> 03:02:30.640]  с импликацией. Тогда просто строим поляном Жигалкина для импликации, вместо переменных
[03:02:30.640 --> 03:02:36.040]  подставляем выражение, которое хотим, и проверяем, когда это равняется единице. Если это действительно
[03:02:36.040 --> 03:02:42.640]  поучиниться, то все доказали. Если нет, то, ну, значит, неверно. Извините. Извините, а еще что-нибудь
[03:02:42.640 --> 03:02:53.840]  будет сейчас? Нет. Извините, можно просто... Насчет разбора контроля на работу, просто он есть или нет?
[03:02:53.840 --> 03:03:02.640]  Я выкладывал. А, да, то есть... А, я имею в виду, был разбор в плане, как сейчас? Ну, то есть,
[03:03:02.640 --> 03:03:08.840]  когда все собирались в этом встречу и разбирали вместе, или не было? Нет, я просто выложил решение.
[03:03:08.840 --> 03:03:20.040]  А можно будет, если что, вам задать вопрос по решению? Пиши прямо в чат, я отвечу. А, чат, хорошо. Там,
[03:03:20.040 --> 03:03:27.000]  я, кстати, посмотрел, там есть очи пятка. Где-то, где-то это будет. А когда оценки будут, не скажете?
[03:03:27.000 --> 03:03:33.560]  У вас же табличка есть, но в табличке... Хотя у меня нет еще оценок. Ну, вы ожидаете. А, как правило,
[03:03:33.560 --> 03:03:41.360]  оценки будут появляться перед контролем. Ну, то есть, это будет в воскресенье. Короче, скорее
[03:03:41.360 --> 03:03:47.720]  всего, с понедельника ожидаете появление контроля. С понедельника, который предшествует контролем на
[03:03:47.720 --> 03:03:53.200]  той же неделе. За пару дней, короче. Возможно, есть семинаристы, которые появляются вообще в тот же
[03:03:53.200 --> 03:03:59.760]  день перед контролем. У вас может быть так, чтобы ваши результаты появятся. У нас появлялись даже за
[03:03:59.760 --> 03:04:12.920]  час до самой контроли. Извините, а метод треугольника Паскаля надо доказывать? Нет. У вас же формулировка
[03:04:12.920 --> 03:04:20.000]  задачка, что просто только ответа не достаточно. Нужно объяснить, как он получен. Получен метод
[03:04:20.000 --> 03:04:27.520]  треугольника Паскаля, его пишете. Доказывать, даже если вы не умеете доказывать поверхность.
[03:04:27.520 --> 03:04:35.360]  Мы говорим, как метод треугольника Паскаля. Пожалуйста, рисуем сам треугольник Паскаля. То есть, вот
[03:04:35.360 --> 03:04:43.040]  прямо его построили, показали, что написали эти мономчики, что этих выбрали. Только и его зачистить.
[03:04:43.040 --> 03:05:00.320]  На сегодня все, да? Да. Если есть вопросы, я отвечу. Спасибо большое. А ссылка на разбор, она в канале есть, да?
[03:05:00.320 --> 03:05:11.040]  Разбор контрольный. Там файл, да, есть, плюс я его приложу туда, где будет решение, потому что это контрольный второй и где будет.
[03:05:11.040 --> 03:05:24.480]  Хорошо, спасибо. Все будет там же, где вот и первое просто. А можете, пожалуйста, еще раз кратко
[03:05:24.480 --> 03:05:34.040]  проговорить, как вот седьмой номер решать, основные идеи? Седьмой. В общем, про седьмой нужно помнить,
[03:05:34.040 --> 03:05:53.960]  что если у нас, что у нас СКНФ, СДНФ не будет для, скажу, СКНФ, СДНФ не, сейчас, я копью. Не существует
[03:05:53.960 --> 03:06:05.440]  СКНФ, СДНФ, если переменных больше единицы, для тождественной единицы, тождественного нуля. Эти мы вот пользовались,
[03:06:05.440 --> 03:06:24.800]  в частности, для использования вот АИД. Здесь вот мы смотрели, что вот, да, нет, вруб, пользовались в пункте В. Дальше, что мы
[03:06:24.800 --> 03:06:31.440]  пользуемся? Мы пользуемся, когда ДНФ и КНФ могут равняться. Могут они равняться тогда и только тогда, когда они, по сути,
[03:06:31.440 --> 03:06:40.400]  присоединяются либо к просто дизюнцию каких-то ветералов, либо конюнцию каких-то ветералов. Но в таком случае, при переменах больше одной, это будет уже несовершенном.
[03:06:40.400 --> 03:06:54.720]  Дальше, мы пользовались тем, что вот метод, который по сравнению по таблице истинности, он строит именно СКНФ, СДНФ. Поэтому, если мы
[03:06:54.720 --> 03:07:08.800]  не используем СКНФ, то, значит, там везде были эти нули, потому что, если хоть где-то был бы ноль, то мы смогли бы поставить, ой, СКНФ, нигде не было нулей, то есть, везде стояли единицы.
[03:07:08.800 --> 03:07:23.040]  Но если бы был где-то ноль, то мы смогли бы построить СКНФ этим методом. Значит, везде стояли единицы. Если везде стояли единицы, то мы можем построить СДНФ
[03:07:23.040 --> 03:07:45.040]  вот этим вот обычным методом. Всё. То есть, надо помнить, факт про единицу, тождественную единицу, тождественную ноль, что у них может не быть СКНФ, СДНФ, по-моему, у них в принципе не будет, да, у них в принципе не будет.
[03:07:45.040 --> 03:07:59.040]  Второй факт, что крылья совпадают с СКНФ, СДНФ. И третий факт про то, как мы строим СКНФ, СДНФ. Под обицеизвестием.
[03:07:59.040 --> 03:08:01.040]  Спасибо.
[03:08:01.040 --> 03:08:03.040]  Не за что.
[03:08:05.040 --> 03:08:17.040]  Варианты прошлых лет там я подправлю под то, что я по-новому прочитал, и я выложу. Будет, вероятно, где-нибудь понятельник мне раньше. То есть, завтра не будет. Пиши.
[03:08:27.040 --> 03:08:29.040]  Видео. Видео как зальют.
[03:08:31.040 --> 03:08:43.040]  Давайте, если есть какие-то вопросы, ещё я готов ответить. Если нет, то нет, всё. Есть, но тех усатого.
[03:08:44.040 --> 03:08:57.040]  Ну, где его найти? Я в чате этого... Телеграма, в чате Матлока, я туда его...
[03:08:57.040 --> 03:09:05.040]  Ребят, спасибо за бокс-семинар.
[03:09:05.040 --> 03:09:07.040]  Не за что.
[03:09:07.040 --> 03:09:09.040]  Всего доброго, до свидания.
[03:09:11.040 --> 03:09:13.040]  Спасибо, до свидания.
[03:09:13.040 --> 03:09:15.040]  Пока-пока.
