[00:00.000 --> 00:18.480]  У нас остаются непростые лекции по геометрии. Сегодня диаграмма Баранова.
[00:18.480 --> 00:36.640]  Сразу насчет имени. У чувака была фамилия Вараной. Родительная поддержка Баранова.
[00:36.640 --> 00:46.120]  И пожалуйста не ставьте удаление по-другому. Задача. Представьте себе, что у вас на плоскости есть
[00:46.120 --> 00:57.520]  вен почтовых отделений. В каких-то конкретных точках. И не знаю, город это вся плоскость. На
[00:57.520 --> 01:02.200]  плоскости живут жители. Вам нужно для каждого жителя, то есть по сути для каждой точки плоскости,
[01:02.200 --> 01:08.680]  найти самое ближайшее почтовое отделение из вот этих вот n уже построенных. То есть n точек
[01:08.680 --> 01:15.760]  у нас уже даны. Нужно разбить по сути всю плоскость по признаку того, какой из почтовых
[01:15.760 --> 01:32.200]  отделений ближайшее. Ну, будет какая-то такая картинка. Не очень аккуратно рисую, но что-то
[01:32.200 --> 01:39.760]  такое будет. Да, вот здесь в этом четырехугольнике ближайшее почтовое отделение вот это, в этом,
[01:39.760 --> 01:46.320]  ну, таком вот бесконечном многугольнике вот это, здесь вот это, здесь вот это, здесь вот это. Вот,
[01:46.320 --> 01:50.240]  ну и такую задачу мы будем сегодня решать. Есть n конкретных фиксированных точек, надо разбить
[01:50.240 --> 01:56.920]  плоскость на, соответственно, n областей по признаку того, какая из исходных точек ближайшая.
[01:56.920 --> 02:07.600]  Значит, вот это называется post office problem. Ну, соответственно, задача про почтовое
[02:07.600 --> 02:18.280]  отделение. Давайте кратенько напишем n почтовых отделений. Значит, я сегодня их буду называть
[02:18.280 --> 02:28.320]  сайтами, n сайтов. Ну, это, собственно, от английского site, которое, ну, вот типа локация какая-то,
[02:28.320 --> 02:34.560]  точка, место. Потому что у нас так вот много всяких точек. Я пока задачу формулировал сам уже
[02:34.560 --> 02:39.360]  десять раз, сказал слово точка. Вот, чтобы отличать обычные точки плоскости от почтовых отделений,
[02:39.360 --> 02:43.640]  я буду почтовое отделение называть сайтами. Вот это вот сайты, а все остальное просто точки плоскости,
[02:43.640 --> 02:52.200]  просто точки. Вот, ну и, соответственно, n почтовых отделений. Давайте сразу определение. Пусть
[02:52.200 --> 03:11.200]  P множество сайтов конечное. Тогда вывод P i t это, собственно, множество точек,
[03:11.200 --> 03:17.360]  которые ближе всего находятся к i t, к этому сайту, чем ко всем остальным. Множество таких x,
[03:17.360 --> 03:36.440]  да, что, ну, напишу dist от x до P i не больше, чем dist от x до всех остальных. Все такие точки,
[03:36.440 --> 03:39.680]  которые к i t, у сайтов ближе, чем ко всем остальным, то есть distance не больше,
[03:39.680 --> 03:43.680]  чем до всех остальных. Вот, эта штука будет называться ящикой диаграммы Воронова.
[03:43.680 --> 04:00.480]  Но, соответственно, сама диаграмма – это просто совокупность всех этих ячеек. То есть диаграмма
[04:00.480 --> 04:16.000]  Воронова – это описание множества сайтов плюс всех ячеек. Буду обозначать вор от P,
[04:16.000 --> 04:36.640]  ну так, напишу, совокупность P всех ячеек. Пока понятно? Хорошо. Ну вот,
[04:36.640 --> 04:44.400]  значит, задача будет их построить. Ну, кто-нибудь может предложить алгоритм какой-нибудь сразу,
[04:44.400 --> 04:51.280]  вроде даже на семинаре было, да. Да-да-да, давайте просто для каждой точки поймем,
[04:51.280 --> 04:56.200]  что вот это множество – это множество пересечений полуплоскостей, да, потому что каждое такое не
[04:56.200 --> 05:01.840]  равнится за эту полуплоскость. Их будет n на нас одна штука в каждой ячейке. Пересекаем их
[05:01.840 --> 05:06.760]  алгоритмом с прошлой лекции за n log n. Получается, что каждая ячейка у нас строится за n log n. Всего
[05:06.760 --> 05:24.520]  ячейка n, поэтому алгоритм за n log n. Значит, каждая ячейка V от P – это пересечение n-1 полуплоскости.
[05:24.520 --> 05:32.640]  Потому что, повторюсь, вот это вот неравенство задает полуплоскость. Если у вас фиксированы
[05:32.640 --> 05:37.280]  два сайта P и Pg, то множество точек плоскости удовлетворяющих от такого неравенства – это,
[05:39.280 --> 05:44.680]  одна из двух полуплоскостей, получается, после проведения середины перпендикуляра к точкам P и Pg.
[05:44.680 --> 05:54.480]  Если я рисую P и Pg, рисую отрезок между ними, рисую к нему середину перпендикуляр, то вот это
[05:54.480 --> 06:00.000]  вот все – это точки ближе к Pg, чем к Pg. Ну и наоборот, это все – точки ближе к Pg, чем Pg.
[06:00.000 --> 06:05.840]  Соответственно, я рисую для конкретного сайта все вот эти вот полуплоскости n-1 штуку,
[06:05.840 --> 06:16.560]  пересекаю за n log n, получаю вот такой алгоритм. Хорошо. Ну какие можно отсюда сделать выводы?
[06:16.560 --> 06:25.760]  Как минимум, что каждая ячейка диаграммы Воронова – это обобщенный выпуклогоугольник.
[06:25.760 --> 06:29.760]  Мы в прошлый раз описывали, как они все могут выглядеть. То есть это либо обычный выпуклогоугольник,
[06:29.760 --> 06:39.280]  либо какая-нибудь вот такая вот бесконечная чашечка, либо там полоса, либо отрезок. Такого
[06:39.280 --> 06:44.800]  уже не будет. Ну короче, в любом случае это всегда какой-то обобщенный выпуклогоугольник.
[06:44.800 --> 06:58.480]  Каждая ячейка – обобщенный выпуклогоугольник.
[07:14.800 --> 07:21.840]  Так, утверждение. Сейчас давайте попытаемся понять, какой у нас будет размер диаграммы.
[07:21.840 --> 07:27.400]  Вот смотрите, диаграмму я тут нарисовал на конкретном примере. Как она устроена? Значит,
[07:27.400 --> 07:31.080]  здесь есть какие-то многоугольники, у них соответственно есть вершины, давайте их выделю
[07:31.080 --> 07:36.520]  тоже точечками. Есть вершины, есть ребра, то есть отрезки между вершинами, есть еще такие
[07:36.520 --> 07:44.200]  бесконечные лучи. Вот я утверждаю, что их будет всегда линейное количество. Утверждение,
[07:44.200 --> 07:55.600]  значит, пусть по этому множество сайтов. Тогда, во-первых, если они все лежат на одной прямой,
[08:07.600 --> 08:13.080]  то диаграмма Воронова состоит из N-1 параллельной прямой и не содержит вершин.
[08:13.080 --> 08:35.800]  Из N-1 параллельной прямой. Ну, не содержит вершин, не буду писать ленин. А во-вторых,
[08:35.800 --> 08:54.920]  иначе, значит, в противном случае число вершин в диаграмме Воронова не больше чем 2N-5,
[08:54.920 --> 09:03.960]  ребер не больше чем 3N-6. Где под ребром, я понимаю, либо, ну, короче, под ребром,
[09:03.960 --> 09:07.400]  я понимаю, в сторону многоугольника. То есть это либо отрезок конечный, либо бесконечный луч.
[09:07.400 --> 09:13.280]  Так, сори, я поторопился, извините. Это пока я не буду готов доказать. Я сначала докажу,
[09:13.280 --> 09:26.920]  что в противном случае все ребра это либо отрезки, либо лучи. Вот так. То есть у меня нет ребер прямых.
[09:26.920 --> 09:38.760]  Вот. И уже отсюда мы докажем вот это вот утверждение про линейность размера. Вот.
[09:38.760 --> 09:53.000]  Причем еще диаграмма связана, нам еще нужно будет. Причем диаграмма связана. Так. Значит,
[09:53.000 --> 09:56.560]  еще раз. Но это выраженный случай. Если все на одной прямой, то понятно. Давайте сразу
[09:56.560 --> 10:01.120]  напишем, как выглядит картиночка и как выглядит диаграмма. Вот они все на одной прямой лежат.
[10:01.120 --> 10:08.960]  Вот. Ну, тогда понятно, что диаграмма состоит просто из вот этих вот середины
[10:08.960 --> 10:16.560]  перпендигуляров между соседями. Вот что-то такое. Соответственно, вот это, это ячейка
[10:16.560 --> 10:21.440]  этого сайта, вот ячейка следующего сайта, вот ячейка следующего сайта, ну и так далее.
[10:21.440 --> 10:28.400]  N-0-1 параллельно прямая, вершин нет. Собственно, это полное описание все диаграммы Воронова.
[10:28.400 --> 10:32.200]  Почему это корректно? Ну, потому что если я для каждого конкретного сайта рассмотрю все
[10:32.200 --> 10:36.360]  полуплоскости, которые я пересекаю, то они все будут параллельны, да, потому что все на одной
[10:36.360 --> 10:41.360]  прямой, значит серпер, ну, в общем, на, на, все серперы будут параллельны. Значит, я пересекаю
[10:41.360 --> 10:46.320]  полуплоскости, которые параллельны, прямые, которых параллельны. Значит, это просто какое-то
[10:46.320 --> 10:50.240]  ограничение слева-справа. Вот это самое точное ограничение слева, это самое точное ограничение
[10:50.480 --> 10:59.240]  справа. Поэтому первый случай стревиален. Вот. А во втором, когда это неверно и, соответственно,
[10:59.240 --> 11:03.840]  есть неколинярные точки, то я утверждаю, что у меня не будет вот таких вот прямых,
[11:03.840 --> 11:07.600]  у меня могут быть максимум лучи в качестве ребер, и она более того будет связана.
[11:07.600 --> 11:24.160]  Ну, можно считать как граф, да, то есть, если я скажу, что у меня есть, что вершины это точки,
[11:24.160 --> 11:33.160]  короче, вершины многоугольников, ребро проводится между вершинами, короче,
[11:33.200 --> 11:37.560]  между соседними вершинами многоугольника, и тогда вот эта картинка, ну, и, соответственно,
[11:37.560 --> 11:40.480]  есть еще вот такие ребра, которые как бы к какой-то вершине подвешены и там, ну,
[11:40.480 --> 11:59.640]  словно на бесконечность уходят. Вот такой граф будет связан, связан. Да. Да, да. Главное,
[11:59.640 --> 12:05.960]  чтобы было хотя бы три, не лежащие на одной. Итак, второй пункт.
[12:05.960 --> 12:18.720]  Надо доказать, что не бывает прямых, которые становятся ребрами. Ну, пусть есть.
[12:18.720 --> 12:33.880]  Пусть какое-то ребро это целое прямое. От противного идем. Мы знаем, откуда у нас берутся
[12:33.880 --> 12:39.120]  ребра от того, что мы пересекаем полуплоскости. То есть, мы взяли какую-то ячейку для Гарма Воронова,
[12:39.120 --> 12:45.120]  рассмотрели одну из полуплоскостей ее задающих, и она целиком вошла в границу ячейки, да, то есть,
[12:45.120 --> 12:52.240]  мы ее как бы ни с кем не пересекли. То есть, вот была какая-то, был какой-то сайт ПИ, был другой
[12:52.240 --> 12:57.720]  сайт ПЖ, мы провели середину, предпределяли к этому отрезку, и вот эта прямая целиком входит в
[12:57.720 --> 13:06.080]  нашу диаграмму, да, то есть, она, скажем, является границей этой ячейки диаграммы. Вот, окей. Ну,
[13:06.080 --> 13:14.960]  раз так, то раз не все сайты на одной прямой, то есть какой-то еще третий сайт, не лежащий
[13:14.960 --> 13:24.880]  на прямой ПИ ПЖ. Вот давайте я его где-нибудь здесь нарисую. Да, раз не все лежат на одной прямой,
[13:24.880 --> 13:51.360]  то пусть ПК не лежит на прямой ПИ ПЖ. Так, ну тогда давайте, например, посмотрим на ячейку
[13:51.360 --> 14:02.320]  диаграммы Воронова, вывод ПЖ, вот на эту ячейку, для этой вершинки. Поскольку здесь есть еще сайт ПК,
[14:02.320 --> 14:09.600]  то значит, в частности, мы должны были пересечь вот такую вот полуплоскость. Но, понятно дело,
[14:09.600 --> 14:15.000]  что этот середина предпределлярка ПЖ ПК и этот середина предпределлярка ПИ ПЖ, они не параллельны,
[14:15.000 --> 14:20.920]  потому что прямые, к которым мы строили серперы, были не параллельны, да, поскольку это не одна
[14:20.920 --> 14:27.400]  прямая. Значит, вот эти две длинные прямые, два середины, где-то пересекутся, где-то пересекутся,
[14:27.400 --> 14:36.560]  вот. Ну, тогда не может быть такого, что вся вот эта прямая целиком входит у нас в, ну, является
[14:36.560 --> 14:42.360]  границей какой-то ячейки диаграммы Воронова, потому что давайте рассмотрим все эти точки на
[14:42.360 --> 14:48.160]  предмет близости к ПК. Понятно, что какая-то часть, то есть, соответственно, после пересечения у меня
[14:48.160 --> 14:53.600]  образовалось два луча вниз и вверх, на одном луче точка ПЖ ближе, чем ПК, на другом луче, наоборот,
[14:53.600 --> 15:01.360]  ПК ближе, чем ПЖ. Поэтому вот эти вот все точки, они точно не могут лежать в житой ячейке диаграммы
[15:01.360 --> 15:14.160]  Воронова, просто потому что для них ПК строго ближе, чем ПЖ. Не могут лежать в житой ячейке
[15:14.160 --> 15:20.880]  диаграмм Воронова. Но мы предположили, что они все, что у нас есть вот такое ребро, но раз оно есть,
[15:20.880 --> 15:25.200]  то есть оно как бы никем другим не пересекается, оно является границей, разделяющей двух ячей
[15:25.200 --> 15:29.880]  диаграмм Воронова, ПИ и ПЖ. То есть мы предположили, что они на границе, но показали, что даже не могут
[15:29.880 --> 15:41.800]  лежать просто в ячейке. Противоречие. Вот как так. То есть все, получается, что прямых не
[15:41.800 --> 15:46.640]  бывает, и ребрами могут наступать только либо конечный отрезок, либо лучи.
[15:56.960 --> 16:09.480]  Значит, ребра, отрезки или лучи. В частности, это означает, что граница любой конкретной ячейки
[16:09.480 --> 16:14.120]  связана. Потому что когда мы пересекаем полуплоскости, единственный случай, когда у нас появляется
[16:14.120 --> 16:19.040]  несвязанная граница, это вот эта полоса. Все остальные случаи, мы рисовали на прошлой лекции,
[16:19.040 --> 16:26.520]  там будет связанная граница. Потому что есть как минимум две прямые, находящиеся по углу меньше 180,
[16:26.520 --> 16:30.920]  значит они точно пересекутся, уже будет некий угол, ну а дальше вы будете просто от него что-то отсекать.
[16:30.920 --> 16:37.600]  Поэтому вот это не недопустимый случай, может быть такое или такое. Значит, граница связана.
[16:37.600 --> 16:49.960]  Тогда граница каждой конкретной ячейки В от ПИ, каждый ячейки В от ПИ связана.
[16:49.960 --> 16:59.000]  А нам надо доказать еще, что вообще весь граф связан. То есть, что не просто граница каждой
[16:59.000 --> 17:03.120]  конкретной ячейки связана, но и между разными ячейками тоже можно пройти каким-то путем.
[17:03.120 --> 17:11.120]  Давайте что-нибудь нарисуем. Так, что-нибудь простое давайте, долго не рисовать.
[17:11.120 --> 17:23.880]  Вот, значит рассмотрим такой пример, вот сайты жирным выделю. Мы знаем, что у каждой конкретной
[17:23.880 --> 17:29.480]  ячейки граница связана. Вот у нас пять ячей, для каждой ячейки граница связана. Теперь я хочу
[17:29.480 --> 17:36.400]  показать, что между точками границ разных ячеек тоже есть некий путь по границам, то есть по вот
[17:36.400 --> 17:46.640]  этим вот ребрам. Ну давайте я где-нибудь начну. Сейчас, не очень интересный пример получился.
[17:46.640 --> 17:54.080]  Ну ладно, бог с ним, где-нибудь закончу. Я хочу показать, что у меня этот граф связан, то есть
[17:54.080 --> 17:59.360]  есть путь по границе, по ребрам между какими-то двумя произвольными точками. Для этого давайте
[17:59.360 --> 18:04.520]  я проведу такой отрезок и посмотрю, что на нем происходит. Значит, на нем мы сначала находимся
[18:04.520 --> 18:09.040]  внутри какой-то одной ячейки, потом переходим в другую, потом переходим в третью и так далее.
[18:09.040 --> 18:16.760]  Ну и, смотрите, поскольку у нас внутри каждой ячейки граница связана, значит путь от первой
[18:16.760 --> 18:22.800]  точки до второй я точно могу совершить путем хождения по границе первой ячейки. Дальше я перемещаюсь
[18:22.800 --> 18:27.360]  во вторую ячейку, но я знаю, что у нее граница тоже связана. При этом мне нужно от одной точки границы
[18:27.360 --> 18:30.960]  следующей вот этой ячейки добраться до другой точки границы. Ну вот есть еще какое-то такое
[18:30.960 --> 18:36.960]  продолжение пути и так далее. То есть на этом отрезке у меня как-то меняются номера ячеек,
[18:36.960 --> 18:42.480]  в каждой ячейке есть путь по границе от первой точки до второй, я могу пройти. Потом во второй
[18:42.480 --> 18:46.480]  также прохожу, в третьей и так далее, пока не веду до конечной точки. Значит, граф связан.
[18:46.480 --> 18:55.920]  Так, что-нибудь надо написать. Проводим отрезок
[18:55.920 --> 19:13.320]  между точками на границах. Он пересекает некоторые ячейки.
[19:13.320 --> 19:32.360]  Внутри каждой из них есть путь. Внутри каждой есть путь, ну значит все эти пути
[19:32.360 --> 19:37.200]  можно склеить в один длинный путь из начала в конец. Все, значит у нас картинка связанная получается.
[19:43.320 --> 20:00.400]  Дальше. Зачем это нам нужно было? Значит, главный результат, что у нас размер линейный,
[20:00.400 --> 20:08.680]  что вершины ребер линейное количество. А знаете ли вы что-нибудь, какой-нибудь результат для
[20:08.680 --> 20:17.880]  графов на плоскости, который требует связанности? Да, формула Эйлера. Значит у нас
[20:17.880 --> 20:29.640]  получается связанный граф, мы для него можем бахнуть формулу Эйлера. Она говорит, что давайте
[20:29.640 --> 20:39.360]  я прям так словами напишу, что число вершин минус число ребер плюс число грани. В планарно связанном
[20:39.360 --> 20:43.680]  графе это двойка. Коль скоро он связан, но мы связанность уже доказали, не буду прописывать.
[20:43.680 --> 20:50.640]  Можно применить, потому что граф связан. Вот, но здесь небольшая загвоздка есть в том, что это как
[20:50.640 --> 20:54.120]  бы не совсем граф, потому что я сказал, здесь есть какие-то вот такие ребра бесконечные, которые
[20:54.120 --> 20:58.600]  как бы к какой-то вершине привязаны и уходят на бесконечность. А давайте сделаем нормальным графом.
[20:58.600 --> 21:04.560]  Следующим образом, значит давайте мы введем какой-нибудь достаточно большой bounding box,
[21:04.560 --> 21:11.000]  такой, что он будет пересекать только вот эти бесконечные лучи. Вот давайте у нас там была какая-то
[21:11.000 --> 21:15.400]  картинка, сейчас совсем от балду что-нибудь нарисуют. Была такая картинка, были конечные
[21:15.400 --> 21:20.920]  нагугольники, были бесконечные лучи, уходящие куда-то там. Вот, давайте нарисуем bounding box,
[21:20.920 --> 21:25.240]  который пересекает, который настолько большой, что пересекает только бесконечные лучи. То есть,
[21:25.280 --> 21:33.920]  что вся вот эта вот ограниченная часть находится внутри. Что-нибудь вот такое я нарисую. Так,
[21:33.920 --> 21:38.920]  значит теперь на этом конечном куске плоскости у нас уже получился нормальный граф. Нормальный
[21:38.920 --> 21:47.440]  конечно связанный граф. Вот, что я сделаю для удобства? Значит давайте я вне этого bounding
[21:47.440 --> 21:53.920]  box введу новую вершинку, назову ее WSNX бесконечность. Давайте WSNX бесконечность.
[21:53.920 --> 22:02.520]  Вот, и понятно, что я могу соединить все вот эти вот точки пересечения лучей с bounding box с
[22:02.520 --> 22:06.520]  точкой P бесконечность без самопересечения, чтобы остался планарный граф. То есть,
[22:06.520 --> 22:16.840]  я могу дорисовать картинку как-то вот так. Значит, я не буду строго доказывать это вершение,
[22:16.840 --> 22:21.980]  но его можно понять следующим образом. То есть, что у вас есть? У вас есть прямоугольник,
[22:21.980 --> 22:29.680]  точка вне него. Я утверждаю, что можно нарисовать вот такие вот кривые, которые будут не
[22:29.680 --> 22:36.320]  пересекаться и вести от любой точки границы прямоугольника к внешней вершине. Ну, вроде
[22:36.320 --> 22:39.840]  понятно. То есть, мы для вот этих точек можем просто проводить вот такие вот отрезки,
[22:39.840 --> 22:43.560]  которые точно не будут ни с кем не пересекаться. Здесь можно задать какой-нибудь конкретный
[22:43.560 --> 22:51.160]  формулам дуги-параболы, и вот эти вот все будут типа концентрические и не пересекаться ни с чем
[22:51.160 --> 22:55.960]  предыдущим. То же самое можно сделать здесь, написать какое-то явное уравнение, такое,
[22:55.960 --> 22:59.920]  что все вот эти вот дуги будут не пересекаться. Ну, и здесь какой-нибудь тоже замкнуть, не знаю,
[22:59.920 --> 23:07.560]  как угодно. Понятно, что такое непрерывное отображение из точки в вот такую кривую,
[23:07.560 --> 23:12.960]  что они все не пересекаются. Понятно, что такое есть. Не буду явно это выписывать. По картинке понятно,
[23:12.960 --> 23:17.200]  что так можно рисовать. Вот. Ну и все. Тогда, значит, давайте анализировать этот граф.
[23:17.200 --> 23:26.840]  Сколько в нем чего? Значит, вершин в нем n плюс 2, вершин в нем, sorry, n плюс 1, глупо сказать,
[23:26.840 --> 23:48.480]  n плюс 1, нет, v плюс 1. Где v это число вершин в исходном графе? То есть v это вот точки
[23:48.480 --> 24:00.120]  пересечения, ну, точки вершины многоугольника. Вот это вот v. Плюс 1, потому что добавляется еще
[24:00.120 --> 24:07.560]  одна вот такая штука внешняя. Значит, дальше ребер. Ну, число ребер вроде бы не поменялось,
[24:07.560 --> 24:12.160]  то есть у вот этого графа с дополнительной вершинкой число ребер не поменялось просто потому,
[24:12.160 --> 24:18.360]  что мы все лучи продлили в какую-то нормальную точку конечную, поэтому число ребер такое же,
[24:18.360 --> 24:24.920]  как было изначально. То есть ребер просто e. Столько же, сколько было. Вот. А грани,
[24:24.920 --> 24:34.040]  я утверждаю, что будет ровно n, ну, потому что каждая грань, по сути, задается каким-то сайтом. То
[24:34.040 --> 24:39.120]  есть у нас сейчас есть разбиение плоскости на какие-то грани. Внутри каждой грани будет ровно
[24:39.120 --> 24:45.440]  один сайт. На, например, вот здесь вот это какой-то сайт. То есть, по сути, если бы я рассматривал вот
[24:45.440 --> 24:51.400]  эту картинку, то у меня здесь было бы в том числе n граней. Вот в этом баундинг-боксе у меня было бы
[24:51.400 --> 24:56.960]  n граней по одной на каждый сайт. Ну, и теперь я просто их там соединяю. Получается еще одна
[24:56.960 --> 25:02.160]  такая бесконечная внешняя для одного из сайтов вот этого. Вот. А все остальные будут ограниченными,
[25:02.160 --> 25:10.680]  ну и бог с ними. Грани все равно n. Вот. Ну все. Значит у нас получается, что v плюс 1 минус e плюс n это
[25:10.680 --> 25:37.200]  двойка. Так, ну еще я утверждаю, видимо, что 2e больше или равно 3 на v плюс 1. То есть в этом графе,
[25:37.200 --> 25:44.200]  который я построил, 2 умножить на e больше или равно чем 3 умножить на число вершин. Почему
[25:44.200 --> 25:52.800]  тоже стандартное утверждение для полноценных графов, что если у вас там все грани хотя бы
[25:52.800 --> 25:59.200]  треугольные, то вот это верно. Да, ну, значит, почему это так? Давайте поймем, что вот это вот
[25:59.200 --> 26:11.400]  с одной стороны сумма степеней всех вершин. Сумма степеней всех вершин. 2e это всегда сумма степеней
[26:11.400 --> 26:16.520]  всех вершин. С другой стороны, я утверждаю, что степень любой вершины это хотя бы тройка вот в
[26:16.520 --> 26:33.640]  этом новом графе. Значит, с другой стороны, степень каждой вершины хотя бы 3. Следовательно,
[26:33.640 --> 26:44.600]  сумма всех степеней это хотя бы 3 на v плюс 1. Сумма степеней хотя бы 3 на v плюс 1. Ну и отсюда
[26:44.600 --> 26:48.880]  получается вот это вот неравенство. Значит, вопрос, почему это верно? Почему степень каждой вершины
[26:48.880 --> 26:55.080]  хотя бы 3? Опять какая-то неприятная геометрия. Давайте посмотрим на вершины многоугольников,
[26:55.080 --> 27:01.200]  на нормальные вершины. Почему из них выходит хотя бы 3 ребра? То есть, смотрите, у нас есть точка,
[27:01.200 --> 27:07.120]  из нее что-то выходит, при этом она является вершиной, значит, она является стыком каких-то
[27:07.120 --> 27:12.240]  вершин, сори, она является стыком нескольких многоугольников. То есть, она является угловой
[27:12.240 --> 27:16.320]  вершиной в нескольких многоугольниках, при этом вот эти вот углы всех этих многоугольников,
[27:16.320 --> 27:22.920]  да, они образуют угол 360 градусов. Но поскольку многоугольники выпуклые, то в них все углы
[27:22.920 --> 27:29.040]  строго меньше, чем 180 градусов, значит, каждый из них меньше, чем 180. Поэтому чтобы набрать 360,
[27:29.040 --> 27:34.600]  их должно быть хотя бы 3. То есть, если вот здесь вот все меньше, чем π из-за выпуклости, значит,
[27:34.600 --> 27:39.600]  тогда суммарно их надо хотя бы 3 штуки, чтобы набрать 2π. Вот, значит, для этих вершин понятно,
[27:39.600 --> 27:42.640]  что степень хотя бы тройка просто потому, что они являются вершинами многоугольников,
[27:42.640 --> 27:56.200]  при которых углы меньше, чем 180. Дальше. Почему вот здесь степень хотя бы 3 так? Почему здесь степень
[27:56.200 --> 28:02.640]  хотя бы 3? Ну пусть не так. Пусть здесь степень меньше, чем 3, то есть там два или меньше. Что
[28:02.640 --> 28:07.120]  вообще, чему равна степень этой штуки? Степень этой вершинки — это просто число вот этих
[28:07.120 --> 28:12.000]  бесконечных лучей, уходящих куда-то там за bounding box в нашем исходном графе. Значит,
[28:12.000 --> 28:16.400]  мне нужно показать, что лучей, уходящих на бесконечность в нашей картинке, всегда хотя бы 3.
[28:16.400 --> 28:23.520]  Почему это так? Ну давайте нарисуем, попробуем понять, может ли быть там их два. Вот был наш
[28:23.520 --> 28:31.000]  bounding box, из него выходило всего два луча. Давайте вот так нарисуем. Из него исходило всего два луча.
[28:31.000 --> 28:38.040]  Тогда смотрите, опять-таки поскольку суммарный угол, заметаемый двумя лучами, не больше, чем 180
[28:38.040 --> 28:46.640]  градусов, я могу смело сказать, например, что вот в этой вот полуплоскости нет ни одной
[28:46.640 --> 28:53.920]  граничной точки, ни одной ячейки. Ну потому что я уже вышел за пределы bounding box, и я эти два луча
[28:53.920 --> 28:58.560]  тоже смог выкинуть из своей полуплоскости, просто потому что они заметали угол не больше,
[28:59.240 --> 29:04.120]  значит, я могу достаточно далеко отодвинуться, чтобы их не содержать. Тоже не очень формально,
[29:04.120 --> 29:10.160]  но тем не менее, можно информализовать, можно найти точку перчения лучей, можно найти, ну как бы,
[29:10.160 --> 29:16.040]  у нас будет что-то такое, можно уйти достаточно далеко, чтобы здесь не было вершин луча и,
[29:16.040 --> 29:21.760]  соответственно, взять одну из двух полуплоскостей. Ну все, у нас получается бесконечная полуплоскость,
[29:21.760 --> 29:35.840]  где нет ни одной граничной точки. Смотрите, самое главное, что у нас, ну мы доказали,
[29:35.840 --> 29:41.120]  что все ячейки это уже выплаканные многоугольники, у которых, следовательно,
[29:41.120 --> 29:47.680]  все вершинные углы меньше 180 градусов. Угол при любой вершине меньше 180. Дальше,
[29:47.760 --> 29:51.680]  что такое вершина? Эта точка, ну по сути, это, на самом деле, точка перчения, как минимум,
[29:51.680 --> 29:57.120]  трех нет, короче, нескольких многоугольников. И при этом эта вершина, то есть, как бы вот из
[29:57.120 --> 30:03.000]  нее выходит несколько таких линий, я знаю, что угол между каждой парой соседей меньше,
[30:03.000 --> 30:09.760]  чем 180 градусов, потому что это все углы многоугольников. Значит, этих углов должно быть хотя бы три,
[30:09.760 --> 30:21.240]  чтобы в сумме они давали два π. Вот, ну значит, степень хотя бы три. Вот, значит, еще раз сюда,
[30:21.240 --> 30:25.000]  это мы для внутренних вершин показали, для вершин многоугольников. Теперь почему-то
[30:25.000 --> 30:30.360]  верно для п бесконечности. Еще раз, если там степень два и меньше, то значит, лучей, пересекающих
[30:30.360 --> 30:34.240]  наш bounding box, максимум два, и можно найти бесконечную полуплоскость, которая не содержит
[30:34.240 --> 30:38.600]  граничных точек нашей диаграммы. Но такого быть не может, мы с вами уже знаем, как выглядят все
[30:38.600 --> 30:44.400]  потенциально возможные наши обобщенные многоугольники. То есть, они либо конечные,
[30:44.400 --> 30:52.400]  либо вот такие вот обобщенные многоугольники. Ну и понятно, что ни один из них не содержит
[30:52.400 --> 30:57.840]  целиком какой-то полуплоскости. Опять, потому что здесь есть какие-то двеграничные, которые при
[30:57.840 --> 31:03.200]  пересечении дали вам какой-то угол. Ну и понятно, что если вы рисуете угол, то он никакую полуплоскость
[31:03.200 --> 31:09.280]  целиком не содержит. Тут тоже надо немножко подумать, представить, почему вот эта вот штука,
[31:09.280 --> 31:15.240]  получаемая в частности как подобность какого-то угла бесконечного, никакой полуплоскости не
[31:15.240 --> 31:22.640]  содержит. Подумали вроде как, осознали, что как бы вы ее не рисовали, то есть она должна либо
[31:22.640 --> 31:28.200]  пересекать границу, либо быть целиком вне, чтобы ее не... Короче, никак такого быть не может. Все,
[31:28.200 --> 31:34.360]  значит двух лучений нам недостаточно, значит степень хотя бы 3. Поэтому у каждой
[31:34.360 --> 31:41.480]  вышины степень хотя бы 3. Окей? Вот, ну все. Значит тогда это верное неравенство, ну а дальше
[31:41.480 --> 31:45.600]  я его просто могу уже вот здесь вот использовать и смело получить то, что нужно. Значит давайте
[31:45.600 --> 32:05.840]  отсюда выручим равно E. В плюс или минус 1. Дальше это подставляю в неравенство. Ну и получаю то,
[32:05.840 --> 32:16.000]  что надо. Ой, зачем-то знак поменял. Вы не больше 2 и минус 5. Возвращаюсь сюда. E тогда не больше
[32:16.000 --> 32:26.040]  чем 3 и минус 6, как и обещал. Все.
[32:47.000 --> 32:54.680]  Итого, мы доказали, что если у нас все точки, все сайты на одной прямой, то мы знаем как выглядят
[32:54.680 --> 32:59.360]  диаграммы просто параллельные прямые, а иначе в них все равно линейный, короче, она линейного
[32:59.360 --> 33:04.040]  размера. Поэтому есть надежда на то, что алгоритм будет, ну там, линейный или примерно линейный. У
[33:04.040 --> 33:10.840]  нас будет N log N алгоритм. Вот. По крайней мере есть надежда на то, что поскольку памяти нам
[33:10.840 --> 33:15.000]  нужно не очень много, для хранения всего этого нам достаточно линейной памяти, значит в принципе
[33:15.000 --> 33:23.680]  есть надежда на какой-то там адекватный алгоритм. Так, окей. Значит дальше, чтобы уже приближаться
[33:23.680 --> 33:28.120]  к алгоритму, мне нужно еще немножко определений и утверждений доказать. Значит первое определение,
[33:28.120 --> 33:44.520]  пусть P набор сайтов, набор сайтов, пусть Q это какая-то точка, произвольная точка плоскости,
[33:44.520 --> 34:03.800]  тогда максимальный пустой круг для Q, я буду обозначать его С от Q, ну иногда можно будет
[34:03.800 --> 34:10.720]  подписывать С на ксампе от Q, если вдруг непонятно какой набор сайтов, не буду этого делать. Значит
[34:10.720 --> 34:17.280]  максимальный пустой круг это круг максимального радиуса с центром в Q, который в своей
[34:17.280 --> 34:27.760]  внутренности не содержит сайтов. Круг максимального радиуса с центром в Q,
[34:27.760 --> 34:45.360]  который в своей внутренности не содержит сайтов вообще, не содержит ни одного сайта,
[34:45.360 --> 35:00.160]  не содержит ни одного сайта. На границе можно, а внутри нельзя.
[35:15.360 --> 35:33.800]  Картинку давайте опять бахнем, значит вот если у меня есть какой-нибудь такой набор сайтов,
[35:33.800 --> 35:39.560]  такой нарисую, например для вот этой вот точки максимальный круг выглядит как-то вот так.
[35:39.560 --> 35:50.880]  Ну что-то такое, да и конечно тут еще художник, но тем не менее. Для вот этой точки Q максимальный
[35:50.880 --> 35:55.040]  круг выглядит ровно вот так, то есть внутри нет сайтов, а на границе вот два аж попало,
[35:55.040 --> 35:59.800]  может быть три, может быть четыре. На границе круга может быть, повторюсь, сколько угодно,
[35:59.800 --> 36:04.560]  но внутри нельзя ни одного, и среди таких кругов выбираем максимальный, то есть по сути просто
[36:04.560 --> 36:09.120]  встали сюда, раздуваем кружок пока можем, пока на его границе кто-то не попадет,
[36:09.120 --> 36:12.160]  пока один из сайтов не пойдет на границу, возможно сразу несколько попадет.
[36:12.160 --> 36:33.840]  Повреждение, во-первых, точка Q является вершиной диаграммы Воронова, ну то есть вершиной одного из
[36:33.840 --> 36:39.800]  многоугольников, который является ячейкой диаграммы Воронова, если и только если,
[36:39.800 --> 36:51.160]  C от Q на своей границе содержит по крайней мере три сайта, содержит, ну я не буду прописывать на
[36:51.160 --> 36:55.160]  границе, потому что понятно, что во внутренности никого нет, единственное где может содержать это
[36:55.160 --> 37:02.760]  на границе, поэтому содержит, ну давайте один раз напишу, на границе хотя бы три сайта,
[37:02.760 --> 37:11.600]  хотя бы три сайта, то есть если внезапно на этот круг на границе попало три сайта,
[37:11.600 --> 37:16.040]  то это обязательно вершина какого-то многоугольника в диаграмме Воронова. Вот,
[37:16.040 --> 37:26.400]  ну и во-вторых, кусок серединного перпендикуляра
[37:26.400 --> 37:41.600]  КПИПЖ является ребром диаграммы Воронова,
[37:41.600 --> 37:59.840]  если и только если на этом середине перпендикуляря есть точка такая, что C от Q, то есть круг с центром
[37:59.840 --> 38:07.920]  в этой точке, содержит на границе только ПИПЖ и больше никого, значит кусок серпера КПИПЖ
[38:07.920 --> 38:20.680]  является ребром, если и только если на нём есть точка Q такая, что C от Q содержит ПИПЖ
[38:20.680 --> 38:32.760]  и больше никого не содержит. ПИПЖ и больше никого не содержит, и больше никого.
[38:40.760 --> 38:49.600]  Формировка понятна? Еще раз, вершины это те точки, что на максимальном круге есть хотя бы три сайта,
[38:49.600 --> 38:57.200]  а ребра характеризуется тем, что можно взять на нём какую-то точку, что максимальный круг
[38:57.200 --> 39:01.200]  содержит вот эти два сайта и больше никого, то есть здесь хотя бы три, а здесь ровно два.
[39:01.200 --> 39:08.200]  Соответственно, у нас есть критерий для вершины и для ребра, что что-то является вершиной, что что-то является ребром.
[39:08.200 --> 39:15.720]  Так, и вроде уже после того, как мы докажем, мы будем готовы пределять алгоритм,
[39:15.840 --> 39:22.800]  поэтому осталось чуть-чуть потерпеть геометрии. Ну давайте первый слева направо,
[39:22.800 --> 39:33.000]  первый слева направо. Значит, я утверждаю, что если Q вершина, то она равна удольна хотя бы от трёх сайтов,
[39:33.000 --> 39:41.000]  по сути, да, что написано вот здесь вот, что она равна удольна хотя бы от трёх сайтов. Ну окей,
[39:41.080 --> 39:45.080]  что значит, что она вершина? Значит, что она является точкой пересечения нескольких
[39:45.080 --> 39:51.600]  многоугольников. Ну что-нибудь такое давайте нарисую. Вот есть несколько многоугольников,
[39:51.600 --> 39:55.880]  являющихся вершинами, являющимися ячееками диаграмма Воронова. Есть какая-то точка Q,
[39:55.880 --> 40:01.360]  которая является вершиной всех этих многоугольников. Мы уже с вами доказывали,
[40:01.360 --> 40:07.280]  что вот эти вот точки, являющиеся вершинами, имеют цепень хотя бы три, поэтому они действительно
[40:07.280 --> 40:13.200]  в ходе хотя бы в 3-многоугольника, значит они равноудалены от сайтов, которые отвечают вот
[40:13.200 --> 40:19.680]  этим вот ячейкам, да, то есть вот здесь есть какой-то site.py, здесь есть site.pg, здесь есть site.pk, здесь есть site.pl,
[40:19.680 --> 40:25.920]  q равно удалена от них от всех, потому что она лежит как бы во всех этих вот ячейках, значит q
[40:25.920 --> 40:38.160]  общая вершина, общая вершина хотя бы трех ячеек, хотя бы трех ячеек, почему хотя бы трех, мы
[40:38.160 --> 40:43.800]  доказывали вот здесь вот, что все углы меньше со 80, а чтобы получить угол 360, значит нам
[40:43.800 --> 40:49.800]  нужно хотя бы 3-многоугольника, значит q равно удалена от хотя бы трех сайтов, ну на этой картинке
[40:49.800 --> 40:55.400]  четырех, значит давайте тогда проведем вот этот вот круг с центром в q и проходящей через все вот эти
[40:55.400 --> 41:02.280]  вот сайты равно удаленные от q, единственное, что мне осталось доказать, что внутри этого круга
[41:02.280 --> 41:07.800]  никого нет, потому что я уже знаю, что на границе есть хотя бы три точки, если я покажу, что внутри
[41:07.800 --> 41:12.080]  никого нету, то значит это тот самый максимальный пустой круг, круг максимального радиуса,
[41:12.080 --> 41:16.080]  внутри никого не содержащий, а на границе он внезапно содержит хотя бы три точки,
[41:16.160 --> 41:20.600]  значит почему внутри никого нет, ну просто если кто-то есть строго внутри этого круга,
[41:20.600 --> 41:28.520]  p,m, то эта точка получается более близкая, чем все вот эти вот другие, значит на самом деле q не
[41:28.520 --> 41:34.440]  могла лежать ни в одной из предыдущих ячеек, потому что p,m строго ближе, противоречие,
[41:34.440 --> 41:51.160]  если p,m внутри круга, то dist от q до p,m строго меньше, чем, скажем, dist от q до p,
[41:51.160 --> 41:59.120]  значит q не могла лежать в ячейке для этой точки, для этого сайта, а мы изначально предположили,
[41:59.120 --> 42:03.160]  что она там лежит, да, то есть вот здесь вот мы предположили, что q это вершина нескольких
[42:03.160 --> 42:08.040]  многоугольников, то есть сейчас она лежит там вот в этих вот ячейках p,i, p,g, p,k, p,l,
[42:08.040 --> 42:12.880]  но если есть какая-то точка внутри, если есть какой-то сайт внутри, то значит этот сайт более
[42:12.880 --> 42:17.520]  близкий, чем все остальные, и q не могла просто по определению лежать ни в одной из этих ячеек,
[42:17.520 --> 42:40.360]  противоречие. Окей? Обратно, я утверждаю, что если dist от q содержит хотя бы три сайта,
[42:40.360 --> 42:49.040]  то это обязательно вершина. Давайте нарисуем dist от q, то есть q есть dist от q. Сюда попали
[42:49.040 --> 42:58.840]  внезапно хотя бы три сайта p,i,p,g,p,k. Почему q это обязательно вершина? Почему q вершина какого-то
[42:58.840 --> 43:09.440]  многоугольника? Ну, смотрите, я утверждаю, что если p,i,p,g,p,k лежат на границе этого круга,
[43:09.520 --> 43:19.520]  то обязательно q лежит в пересечении всех ячеек, соответствующих этим сайтам. Если их там больше,
[43:19.520 --> 43:25.480]  то еще дальше можно продлить пересечение, потому что внутри этого круга никого нет, значит самые
[43:25.480 --> 43:31.160]  близкие точки, самые близкие сайты q, это одновременно и p,g, и p,k, и p,l. Ну, короче,
[43:31.160 --> 43:38.760]  p,i, p,g, p,k. Глупость, еще раз, значит поскольку внутри круга больше сайтов нету, то самые близкие
[43:38.760 --> 43:43.800]  сайты q, это одновременно все сайты на границе этого круга. Внутри никого нет, значит все на
[43:43.800 --> 43:48.600]  этом расстоянии они подходят. Поэтому q является точкой пересечения как минимум трех ячеек,
[43:48.600 --> 43:53.720]  ну а понятно, что ячейки, если мы берем три разные ячейки, то пересекаться они могут только по точке,
[43:53.720 --> 43:58.840]  потому что у вас есть выпуклые многоугольники, вы их пересекаете, понятно, что пересечение может
[43:58.840 --> 44:07.080]  быть только точкой, то есть общей вершиной. Потому что, скажем, когда вы берете два
[44:07.080 --> 44:11.660]  многоугольника, мы знаем с вами, что многоугольники у нас пересекаются, ну по сути они не то чтобы
[44:11.660 --> 44:17.720]  пересекаются, они могут только кол-то общий кусок границы иметь, потому что это по сути у
[44:17.720 --> 44:22.360]  нас есть разбиение плоскости. Вот, когда вы пересекаете два многоугольника, у вас получается
[44:22.360 --> 44:27.120]  максимум какая-то сторона. Когда вы пересекаете еще какой-то третий, но понятно, что получается
[44:27.120 --> 44:31.740]  от этой стороны может быть только какая-то точка крайняя, которая является вершиной всего вот
[44:31.740 --> 44:34.540]  этого, потому что если была сторона, и вы ее пересекли
[44:34.540 --> 44:37.500]  еще с многоугольником, то поскольку вот здесь вот
[44:37.500 --> 44:40.140]  и вот здесь вот эта внутренность других многоугольников,
[44:40.140 --> 44:42.100]  то, соответственно, никакие внутренние точки этого
[44:42.100 --> 44:44.880]  отрезка вы содержать не можете. Значит, пересечение
[44:44.880 --> 44:46.460]  состоит только из одной точки, которая является
[44:46.460 --> 44:48.100]  одновременной вершиной всех этих многоугольников.
[44:48.100 --> 45:03.220]  Вот это вот состоит только из общей вершины. То есть
[45:03.220 --> 45:05.660]  тут нам надо понять, как выглядят вот эти три наши
[45:05.660 --> 45:07.620]  многоугольника. Еще раз, у нас есть три многоугольника
[45:07.620 --> 45:10.180]  на плоскости, которые не пересекаются внутренностями.
[45:10.180 --> 45:15.020]  Значит, тогда пересечение первых двух – это максимум
[45:15.020 --> 45:20.060]  какое-то общее ребро. А если я его пересеку с еще многоугольником,
[45:20.060 --> 45:22.060]  то поскольку все внутренние точки этого ребра лежат
[45:22.060 --> 45:25.580]  только здесь и больше нигде, то лежать в многоугольнике
[45:25.580 --> 45:27.900]  может быть либо только вот эта точка, либо только
[45:27.900 --> 45:29.660]  вот эта точка. Обе одновременно не могут, потому что если
[45:29.660 --> 45:33.980]  обе одновременно, то значит весь отрезок тоже. Ну все.
[45:33.980 --> 45:36.660]  Значит, единственная точка, удовлетворяющая такому
[45:36.660 --> 45:39.740]  условию – это общая вершина всех многоугольников. Значит,
[45:40.460 --> 46:00.460]  это вершина нашей диаграммы. Так, второй пункт. Что там
[46:00.460 --> 46:05.180]  было? Что серпер задает ребро, если на нем есть
[46:05.180 --> 46:09.100]  точка, равную удаленную от ПЕПЖ, больше ни от кого.
[46:09.100 --> 46:14.140]  Давайте нарисуем. То есть ПЕПЖ. И со всего вот этого
[46:14.140 --> 46:17.700]  середины предметикуляра есть хотя бы какой-то кусочек
[46:17.700 --> 46:22.060]  положительной длины, который задает одно из ребер нашей
[46:22.060 --> 46:27.740]  диаграммы. Давайте возьмем какую-нибудь внутреннюю
[46:27.740 --> 46:35.060]  точку этого отрезка. Внутреннюю точку этого отрезка. Я утверждаю
[46:35.060 --> 46:37.460]  тогда, что максимальный круг для нее содержит только
[46:37.540 --> 46:51.540]  ПЕПЖ и больше никого. Сейчас будет непросто. Вот. Значит,
[46:51.540 --> 46:54.860]  еще раз. Пусть какой-то кусок середины предметикуляра
[46:54.860 --> 46:56.940]  между ПЕПЖ участвует в диаграмме. То есть это там
[46:56.940 --> 47:00.100]  сторона или бесконечный луч. Давайте возьмем внутреннюю
[47:00.100 --> 47:03.340]  точку этой стороны. Какую-то точку Q. Отлично, от концов.
[47:03.340 --> 47:09.740]  И проведем круг радиуса так, чтобы на него попали и ПИ и ПЖ. Они обе попадут,
[47:09.740 --> 47:12.700]  потому что раз Q на серпере, то соответственно они обе сразу попадут,
[47:12.700 --> 47:17.820]  если я проведу круг с центром в Q. Надо показать, что внутри
[47:17.820 --> 47:21.260]  никого нет и на границе тоже никого нет. Ну почему внутри
[47:21.260 --> 47:25.180]  никого нет? Понятно. Если кто-то внутри, если какая-то ПМ внутри,
[47:25.180 --> 47:29.780]  то опять ПМ более близко к Q, чем ПИ и ПЖ, а Q это как раз
[47:29.780 --> 47:34.180]  граница разделения между ПИ и ПЖ. В противоречии, точка, лежащая в ПИ,
[47:34.180 --> 47:38.420]  лежит ближе, ну точнее в ячейке ПИ, лежит ближе к ПМ. Такого быть не может.
[47:38.420 --> 47:42.580]  А, поэтому опять внутри круга никого не бывает. Почему не может никого на границе?
[47:42.580 --> 47:48.580]  Вопрос к вам. Почему не может быть такого, что вот этот круг, который я нарисовался,
[47:48.580 --> 47:54.820]  держит одновременно три точки? Ну или можно сказать, что если здесь хотя бы три точки,
[47:54.820 --> 47:58.260]  то по первому пункту это вершина, а это мы знаем, что внутренняя точка,
[47:58.420 --> 48:03.700]  внутренняя точка ребра. Вот. Значит, давайте пропишем опять. Внутри круга
[48:03.700 --> 48:19.580]  не может быть точек, не может быть сайтов, не может быть сайтов. Так как иначе ДИСТ КПМ
[48:19.660 --> 48:33.260]  меньше, чем ДИСТ УПИ, на границе тоже не может быть сайтов, на границе тоже не может быть сайтов
[48:33.260 --> 48:47.860]  отличных от ПИ и ПЖ. Отличных от ПИ и ПЖ, так как иначе по первому пункту кое-то вершина,
[48:47.940 --> 48:53.380]  а мы предположили, что кое-то как раз внутренняя точка ребра, то есть, но не вершина, противоречие.
[48:53.380 --> 49:19.260]  Так. Да, любую внутреннюю точку ребра, на самом деле, действительно.
[49:19.260 --> 49:33.300]  Так, но обратно. Значит, мы знаем, что на серпере есть какая-то точка, содержащая ПИ и ПЖ. В смысле,
[49:33.300 --> 49:41.460]  точка такая, что максимальный круг содержит ПИ и ПЖ и больше никого не содержит. Почему тогда
[49:41.460 --> 49:49.140]  кусок серперы участвует в нашей диаграмме? Ну, смотрите, вот есть некая точка Q, есть максимальный
[49:49.140 --> 49:56.660]  круг с центром в ней, он содержит ПИ и ПЖ. И больше никого не содержит. То есть, это значит,
[49:56.660 --> 50:02.420]  что все остальные сайты имеют расстояние от Q строго больше, чем радиус этого круга. То есть,
[50:02.420 --> 50:08.900]  все остальные сайты где-то снаружи этого круга лежат, строго снаружи. Это значит, что если я,
[50:08.900 --> 50:16.460]  сейчас немножко неформально будет, но это можно легко формализовать. Значит, это значит, что если
[50:16.460 --> 50:23.380]  я немножечко подвигаюсь от Q в обе стороны по середине перпинкуляров и буду рисовать такой же
[50:23.380 --> 50:28.620]  круг, содержащий ПИ и ПЖ, то никаких других сайтов ни внутрь, ни на границе я, короче,
[50:28.620 --> 50:34.700]  не вберу. Да, но потому что все они находятся на расстоянии, там, хотя бы эпсилон от этого круга,
[50:34.700 --> 50:39.940]  значит, можно здесь подобрать такой, там, не знаю, эпсилон 9 на миллиард, что, ну, там, наверное,
[50:39.940 --> 50:44.060]  какая-то другая форма, но тем не менее. Если я немножечко подвигаюсь в обе стороны от этой
[50:44.060 --> 50:48.620]  точки и буду рисовать такой же круг, то в него ни один из сайтов не попадет, потому что если
[50:48.620 --> 50:53.460]  они были вне исходного круга, то можно так немножко пошевелить круг, чтобы они были вне нового круга,
[50:53.460 --> 50:59.740]  ну, из непрерывности просто. Вот. Значит, мы понимаем, что не просто Q обладает таким свойством,
[50:59.740 --> 51:05.020]  что на круге только две точки, но и некий, ну, как бы, некий отрезок на самом деле, или там можно
[51:05.020 --> 51:16.260]  считать, некий интервал. Настер пери. Настер середины перпендикуляции вот такой. Так. Ну и тогда
[51:16.260 --> 51:21.660]  я утверждаю, что это обязательно вот все вот это вот, это внутренние точки, внутренние точки ребер.
[51:21.660 --> 51:32.540]  А, ну, на самом деле можно сказать просто так. Смотрите, вот этот отрезок, все вот эти точки,
[51:32.540 --> 51:40.060]  это общий кусок границы между вот этими двумя ячейками. Между ИТ и житой ячейкой. Ну,
[51:40.060 --> 51:45.180]  потому что это точки, равно удаленные от ПИ и ПЖ и больше ни от кого, все остальные дальше. Поэтому
[51:45.180 --> 51:50.860]  как раз это общий кусок границы между двумя вот этими ячейками. Они лежат только в этих двух
[51:50.860 --> 51:56.620]  ячейках и больше нигде. Ну, все, значит, вот это вот, это как раз некий разделяющий кусок между
[51:56.620 --> 52:19.060]  двумя ячейками. Значит, точки на этом отрезке лежат только в вывод ПИ и ВПЖ. А значит,
[52:19.060 --> 52:23.780]  это как раз общий кусок границы. Потому что пересекаться ячейки могут только по границе,
[52:23.860 --> 52:29.060]  там по отрезку или по лучу, и все вот эти вот точки, это как раз тот самый, ну, как минимум,
[52:29.060 --> 52:35.060]  какое-то подмножство этого куска границы. Значит, точно в общую границу между ними входит
[52:35.060 --> 52:39.980]  какой-то отрезок серпира. Это мы и доказываем. Что какой-то кусок этого середины перпендикуляра
[52:39.980 --> 52:46.980]  является общим куском границы для двух ячеек. Входит в нашу диаграмму. Ну, все.
[52:53.780 --> 53:14.060]  Так. Все, чудесно. Еще раз. Мы с вами показали, что вершины диаграммы Воронова получаются как
[53:14.060 --> 53:20.460]  такие точки, что в их пустом круге есть хотя бы три сайта, а ребра вычерчиваются такими точками,
[53:20.460 --> 53:30.220]  что в их пустом круге ровно два сайта. Вот какая мораль этого утверждения. И теперь с его помощью
[53:30.220 --> 53:35.980]  мы будем строить алгоритм. Значит, алгоритм называется алгоритмом Форчуна по, ну, собственно,
[53:35.980 --> 53:50.900]  фамилия автора. Алгоритм у нас будет, ну, по сути, сканлайном. Значит, мы будем идти, конечно,
[53:50.900 --> 54:02.620]  прямой сверху вниз, обрабатывать сайты один за другим в порядке прохождения их сканлайном,
[54:02.620 --> 54:07.140]  и будем как-то перестраивать нашу текущую диаграмму Воронова. Значит, вот представьте
[54:07.140 --> 54:14.020]  себе, что какие-то точки, какие-то сайты мы уже обработали. Сканирующая прямая где-то вот здесь,
[54:14.020 --> 54:20.940]  движется вниз. Какие-то сайты она еще не обработала. Давайте что-нибудь вот такое нарисую. Мы рассмотрели
[54:20.940 --> 54:27.780]  пока только все, что выше этой прямой, все, что ниже мы не знаем. Значит, есть соблазн сказать,
[54:27.780 --> 54:34.100]  как обычно у нас это в сканлайне работает, сканирующая прямой работает, что мы как бы
[54:34.100 --> 54:38.820]  хотим сказать, что если прямая находится в некотором положении, то все, что выше нее мы уже точно
[54:38.820 --> 54:42.700]  построили. То есть, грубо говоря, что мы построили диаграмму Воронова вот в этой вот верхней
[54:42.700 --> 54:49.700]  полуплоскости. Здесь, однако, такого сказать нельзя, потому что мы еще не все точки рассмотрели,
[54:49.700 --> 54:54.580]  и некоторые точки, которые, например, придут очень скоро, они могут вполне себе повлиять на вид
[54:54.580 --> 54:58.140]  диаграммы Воронова в этой верхней полуплоскости. Потому что, скажем, вот здесь ячейка будет
[54:58.140 --> 55:04.460]  какая-то вот такая, например, а этот луч мы ниоткуда не найдем, пока эту точку не увидим. Поэтому,
[55:04.460 --> 55:08.620]  ну не полностью я могу построить здесь диаграмму, она все-таки как-то зависит от того, что ниже этой
[55:08.620 --> 55:14.980]  прямой находится. Но точно есть какая-то область внутри этой полуплоскости, то есть выше сканирующей
[55:14.980 --> 55:23.820]  прямой, для которой я знаю, как выглядит диаграмма. А именно, это в частности такие точки Q. Давайте
[55:24.460 --> 55:31.020]  X. Это такие точки X, для которых хотя бы одна из точек, уже просмотренных, хотя бы один из
[55:31.020 --> 55:38.700]  рассмотренных сайтов, ближе, чем прямая. Тогда, если, скажем, эта точка ближе, то есть к X-у эта
[55:38.700 --> 55:44.340]  точка ближе, чем прямая, то понятно, что все, что ниже прямой, еще дальше. Поэтому для X-а пофигу,
[55:44.340 --> 55:48.700]  что происходит ниже прямой. Для него есть какая-то достаточно близкая точка, все остальные
[55:48.700 --> 55:54.140]  новопоявляющиеся будут дальше, поэтому они на вид диаграммы в точке X не повлияют.
[55:54.140 --> 56:00.220]  Вот. Ну и соответственно, мне нужно нарисовать такую область в верхней полуплоскости,
[56:00.220 --> 56:06.460]  которая ограникивает все такие точки, для которых хотя бы одна, хотя бы один из сайтов вверху ближе,
[56:06.460 --> 56:13.740]  чем прямая. Что это за область? Что за оно, что точек X, для которых некий сайт ближе, чем прямая.
[56:13.740 --> 56:29.020]  Не, не кругов. Чуть хитрее. Чего? Да, параболы. На самом деле, если мы фиксируем сайт и прямую,
[56:29.020 --> 56:34.220]  и рассматриваем, скажем, множество точек, равноудаленных от сайта и прямой, то это парабола.
[56:34.220 --> 56:41.460]  Вот для этого сайта и прямой будет какая-то такая парабола. Ну, это там одной, так, плохо нарисовал,
[56:41.460 --> 56:50.740]  сейчас перерисую. Одно из там характеристических свойств, что вот есть там фокус, есть директрица
[56:50.740 --> 57:01.980]  у парабол. Ну вот это вот ровно оно. Итого, если я для каждого сайта над сканирующей прямой построю
[57:01.980 --> 57:14.220]  парабол, отделяющую ее от директрицы. Ну, как-нибудь что-нибудь вот такое я нарисую. Да, и рассматриваю
[57:14.220 --> 57:25.820]  нижнюю огибающую всех этих парабол, то я получу множество точек, где я уже заведомо знаю вид
[57:25.820 --> 57:30.780]  диаграммы. Потому что, если она лежит над вот этой вот нижней огибающей, то значит хотя бы один
[57:30.780 --> 57:39.020]  сайт выше вот этой вот прямой, ближе, чем прямая. Значит, все, что ниже, оно еще дальше, и оно точно
[57:39.020 --> 57:45.940]  не влияет на вид диаграммы. Окей? Вот. Ну чудесно. Значит, давайте тогда поддерживать вот такое страшное
[57:45.940 --> 57:52.140]  безобразие, вот этот вот набор, набор дуг-парабол, которые отделяют изученное множество от еще не
[57:52.140 --> 57:56.460]  изученного, и понимать, что с ним происходит. Ну, то есть понятно, что там, что происходит,
[57:56.460 --> 58:03.900]  например. Когда наша директрица спускается чуть-чуть ниже, у меня возникает новая точка, и по сути
[58:03.900 --> 58:07.540]  вот здесь вот рождается новая парабола. Потому что, когда директрица пройдет еще чуть ниже,
[58:07.540 --> 58:11.460]  но она станет уже адекватной параболой. Вот давайте я так нарисую. Чуть ниже спустилась,
[58:11.460 --> 58:17.460]  тут возникла какая-то адекватная вот такая парабола. А в момент, когда она еще только появляется,
[58:17.460 --> 58:21.740]  но она, понятно, выражается вот с такой вот луч, то есть как бы такую не раскрывшуюся параболу,
[58:21.740 --> 58:27.100]  вот такую вот. Потому что множество точек удаленных от этой точки, ну, равно удаленных от точки от прямой,
[58:27.100 --> 58:31.980]  это просто вот такой луч. Ну, значит, на самом деле прямая, но поскольку мы живем в верхней
[58:31.980 --> 58:36.620]  полкоскости, то вот это вот. Соответственно, у нас появляется новая парабола, и мне нужно вклинить,
[58:36.620 --> 58:40.180]  смотрите, вот сюда вот нужно вклинить новую параболу. То есть у меня было вот это, вот это,
[58:40.180 --> 58:46.180]  вот это, потом вот это, и она теперь расщепляется некой новой параболой. То есть вот здесь вот теперь
[58:46.260 --> 58:50.660]  будет, ну там, при движении директрисы вниз, у меня будет вот такая, вот такая и так далее. То есть у меня,
[58:50.660 --> 58:56.500]  по сути, вот эта вот дуга расщепилась на два кусочка слева, потом будет новая парабола, вот это вот,
[58:56.500 --> 59:03.180]  да, и потом, ну, правый, правый, правый кусок той же парабола. Вот, и надо все это поддерживать. И
[59:03.180 --> 59:11.220]  еще понимать, когда появляются вершины, ну, давайте, давайте тоже сейчас про это скажу. Значит, смотрите,
[59:11.540 --> 59:18.980]  точки пересечения соседних парабол – это такие точки, которые равно удалены от двух фокусов,
[59:18.980 --> 59:26.700]  и больше ни от кого. Ну, потому что эта точка процветения – двух парабол. Поэтому вот эти
[59:26.700 --> 59:31.200]  вот точки пересечения соседних двух парабол вычерчиваются нам рёбра. У нас есть критерий,
[59:31.200 --> 59:37.020]  что рёбра как раз вычерчиваются точками, равно удаленными от двух каких-то сайтов, и больше ни
[59:37.020 --> 59:43.580]  от кого. Значит, это как раз ребра. Вот. А вершины появляются, когда у нас три параболы схлопываются
[59:43.580 --> 59:48.380]  в одну. Например, вот здесь вот у меня будет вот эта вот картинка, да? Вот так вот у меня. Ну,
[59:48.380 --> 59:53.020]  в какой-то момент вот так вот было. Если я буду спускаться чуть ниже, у меня эта парабола будет
[59:53.020 --> 59:58.620]  все как бы худеть и худеть, и у меня рано или поздно картинка станет вот такой. Ну как-то вот
[59:58.620 --> 01:00:04.860]  так. То есть у меня вот эта парабола, она схлопнется в точку. То есть она будет пересекаться с предыдущей
[01:00:05.300 --> 01:00:10.460]  по точке просто. И она, соответственно, как бы потом удалится из моей вот этой вот линии. Из
[01:00:10.460 --> 01:00:15.620]  множества двух парабол. Соответственно, вот здесь вот в этой точке происходит такой случай, что у меня
[01:00:15.620 --> 01:00:21.380]  три парабола одновременно пересеклись. А значит, эта точка равна трех фокусов. То есть от трех
[01:00:21.380 --> 01:00:27.220]  сайтов. Поэтому эта вершина. Вот. Ну и все, значит, нам нужно аккуратно просто следить за траекторией
[01:00:27.220 --> 01:00:32.140]  всех вот этих вот пересечений соседних парабол. Понимать, что если три одновременно пересеклись
[01:00:32.140 --> 01:00:36.580]  все эти вершины. Вот. Ну и аккуратненько все вот вычерчивать, пока мы идем вот эта директрица
[01:00:36.580 --> 01:00:47.500]  сверху вниз. Такой алгоритм. С ребрами. Смотрите. Ребра вычерчиваются точками пересечения двух
[01:00:47.500 --> 01:00:53.740]  соседних парабол. То есть у меня все параболы упрямочены слева направо. Я рассматриваю точку
[01:00:53.740 --> 01:00:58.940]  пересечения любых двух соседних парабол. Вот она, например. И я утверждаю, что при движении директрицы
[01:00:58.940 --> 01:01:03.900]  вниз, эта траектория этой точки пересечения двух парабол будет как раз вычерчивать очередное
[01:01:03.900 --> 01:01:08.140]  ребро. Ну потому что просто эта точка раз пересечения двух парабол и больше, ну и ровно двух,
[01:01:08.140 --> 01:01:15.580]  то она равна от двух фокусов. Ну а это вот. А есть точка такая, что пустой круг содержит только эти
[01:01:15.580 --> 01:01:25.020]  веревки и больше никого. Поэтому эта штука вычерчивает нам ребро. Так, ну давайте теперь какие-то детали.
[01:01:25.020 --> 01:01:36.060]  Насколько получится. Значит, во-первых, давайте я скажу, что вот эта вот штука на бурду к парабол
[01:01:36.060 --> 01:01:46.140]  я буду называть береговой линией. Береговая линия. Наверное, береговая, потому что на волны
[01:01:46.140 --> 01:01:51.820]  какие-то похожи. Такой какой-то фронт, волна идет. Вот поэтому береговая линия. Надо понять,
[01:01:51.820 --> 01:01:57.460]  как я это буду хранить. Ну понятно, что поскольку тут возникают запросы добавления парабол и удаления
[01:01:57.460 --> 01:02:02.060]  парабол. Повторюсь, добавление — это когда приходит новый сайт, и он вставляет такой парабол изначально
[01:02:02.060 --> 01:02:07.940]  выраженный, потом раскрывающийся. А это добавление параболы. По крайней мере, там, дуг параболы. А удаление
[01:02:07.940 --> 01:02:12.740]  происходит, когда три соседние параболы схлопываются, пересекаются в одной точке. И, соответственно,
[01:02:12.740 --> 01:02:17.340]  у меня вот центральный из них удаляется из береговой линии. Она порождает вершину и потом удаляется.
[01:02:17.340 --> 01:02:22.820]  Значит, мне нужно код дерева поиска. Раз мне нужна вставка удаления, ну и там, наверное,
[01:02:22.820 --> 01:02:26.980]  как-то нужно по нему быстро итерироваться. Тогда все будет храниться в дереве поиска.
[01:02:26.980 --> 01:02:35.100]  Дерево поиска. Значит, насколько я понимаю, здесь хватит. Я к своему студу ни разу не писал этот
[01:02:35.100 --> 01:02:42.380]  алгоритм. Но, насколько я понимаю, здесь будет достаточно даже обычного сета. То есть, не нужно
[01:02:42.380 --> 01:02:47.820]  писать свое дерево поиска. Достаточно будет обычного сета, ну или мульти-сета, в крайнем случае.
[01:02:47.820 --> 01:02:56.780]  Сета или мульти-сета. Потому что мы сейчас поймем, как это можно все аккуратно хранить,
[01:02:56.780 --> 01:03:05.060]  чтобы не изобретать свой велосипед. Вот. Чем характеризуется каждый конкретный элемент
[01:03:05.060 --> 01:03:10.220]  нашего сета? Давайте я буду говорить сет для простоты. Чем характеризуется элемент нашего
[01:03:10.220 --> 01:03:19.820]  сета? Элемент – это дуга парабола. Вот что-то такое. Значит, чем характеризуется дуга? Видимо,
[01:03:19.820 --> 01:03:26.860]  своим фокусом, очевидно. Потому что, чтобы понимать, что у здоровья не прямой, нам нужно
[01:03:26.860 --> 01:03:37.140]  хранить фокус текущий. Нужно хранить фокус этой параболы. Вот. Так. И, видимо, я буду хранить
[01:03:37.140 --> 01:03:42.140]  еще фокус следующей параболы, чтобы понимать, где заканчиваются текущие и начинается следующее.
[01:03:42.140 --> 01:03:47.940]  Потому что, например, вот здесь, смотрите, вот здесь, когда у меня вот эта дуга перекроет
[01:03:47.940 --> 01:03:52.700]  в следующую, ну мне же нужно как-то понимать, где заканчиваются предыдущие и где начинается
[01:03:52.700 --> 01:03:57.220]  следующее. Для этого давайте я буду просто хранить фокус левой параболы и фокус правой,
[01:03:57.220 --> 01:04:02.700]  два последних фокуса. Ну и, соответственно, из них я уже смогу понять, где находится точка
[01:04:02.700 --> 01:04:08.180]  пресечения. То есть я знаю фокус левой параболы, фокус правой параболы, координату директрисы,
[01:04:08.180 --> 01:04:13.180]  y-координату директрисы. Ну и из них я уже вот эту вот координату в любом момент времени могу
[01:04:13.180 --> 01:04:33.380]  посчитать. Значит, элемент C это дуга параболы, задающаяся фокусами, ну двумя фокусами.
[01:04:33.380 --> 01:04:52.980]  Двумя фокусами. Пи и пыжи. Значит, еще раз, если у меня есть два фокуса пи и пыжи,
[01:04:52.980 --> 01:05:09.820]  то дуга параболы это какой-то такой вот кусок. На самом деле мы еще не знаем,
[01:05:09.820 --> 01:05:16.620]  где он заканчивается слева. Вроде это будет не обязательно, но если нужно,
[01:05:16.620 --> 01:05:22.060]  я могу еще хранить третий фокус. Это вот как бы фокус предыдущей параболы слева. Это будет
[01:05:22.060 --> 01:05:33.460]  не обязательно. Или написать. Нет, давайте так, то есть еще раз, смотрите, дуга параболы задается
[01:05:33.460 --> 01:05:38.960]  как бы своим концом, как точкой причине двух парабол, и вот какой-то кусок слева. Мы не знаем,
[01:05:38.960 --> 01:05:42.380]  какой именно слева, то есть мы не знаем, насколько влево он продлевается, то есть где пересечение
[01:05:42.380 --> 01:05:46.540]  с предыдущей параболой. Но нам это будет на самом деле не нужно. А если нужно, мы всегда можем
[01:05:46.540 --> 01:05:52.340]  вставить в сигнатуру нашего элемента еще фокус предыдущей параболы, чтобы искать вот эту вот
[01:05:52.340 --> 01:05:57.300]  конкретную дугу. Но нам это будет не нужно, будет всегда хватать двух фокусов. Этот и следующий.
[01:05:57.300 --> 01:06:02.900]  Вот, значит, еще тут важен порядок, потому что, например, когда вот в этом случае,
[01:06:02.900 --> 01:06:09.340]  когда я вставлял очередную параболу, она может рассечь одну и ту же параболу на две дуги. То
[01:06:09.340 --> 01:06:15.780]  есть, может быть, вот какая-то такая картинка. Вот так вот нарисую. Бывают вот такие вот картинки,
[01:06:15.780 --> 01:06:27.740]  сейчас. Вот, бывают вот такие картинки. И, соответственно, здесь может быть такое,
[01:06:27.740 --> 01:06:33.100]  что сначала идет дуга одной параболы, потом дуга другой параболы, потом опять дуга той,
[01:06:33.100 --> 01:06:37.500]  с которой мы начали. Ну и здесь тогда просто важен порядок. Если мы знаем, что вот здесь фокус
[01:06:37.500 --> 01:06:41.820]  Pi у большой параболы фокус Pi, а здесь фокус Pj, то у меня, соответственно, будет вот эта вот дуга
[01:06:41.820 --> 01:06:49.260]  характеризуется парой Pi-Pj. Эта дуга характеризуется парой Pj-Pi. Эта пара характеризуется,
[01:06:49.260 --> 01:06:55.180]  sorry, эта дуга характеризуется парой Pi, ну и, соответственно, там Pk-Dk это следующая парабола.
[01:06:55.180 --> 01:07:00.300]  То есть, вот здесь как бы важен порядок, что Pi-Pj я как бы, значит, рассматриваю пересечение,
[01:07:00.300 --> 01:07:06.300]  ну, точнее, дугу до первого пересечения. Pj-Pj, значит, рассматриваю дугу, по сути, до второго
[01:07:06.300 --> 01:07:11.580]  пересечения. Поэтому как бы здесь важен порядок. Тот фокус, который идет первым,
[01:07:11.580 --> 01:07:17.140]  это я рассматриваю дугу этой параболы, а вторая задает ограничение справа. Вот я их пересекаю,
[01:07:17.140 --> 01:07:23.260]  рассматриваю самое левое ограничение этой дуги новой параболой, и оно, собственно, и будет
[01:07:23.260 --> 01:07:38.140]  ограничивать, ограничивать мою дугу справа. Так, ну и, соответственно, упорядоченные эти
[01:07:38.140 --> 01:07:45.820]  элементы будут по x-координате точки пересечения вот этих круг парабола. То есть, у меня каждый
[01:07:45.820 --> 01:07:51.260]  элемент это, по сути, некая вот такая дуга с фиксированным правым концом, и чтобы сравнить,
[01:07:51.260 --> 01:07:57.180]  какой элемент идет раньше другого, я вычисляю x-координаты вот этой точки и сравню их между
[01:07:57.180 --> 01:08:00.860]  двумя элементами. Потому что, если у меня есть вот такая пара парабол и какая-то следующая,
[01:08:00.860 --> 01:08:05.900]  здесь вот, я знаю, соответственно, координаты вот эту, координаты вот эту, раньше идет та дуга,
[01:08:05.900 --> 01:08:11.900]  у которой раньше конец. Поэтому я говорю, что нам не важен левый конец, нам важен только правый
[01:08:11.900 --> 01:08:21.100]  конец. У кого правый конец меньше, тот идет раньше в нашем дереве, в нашем сете. Ну,
[01:08:21.100 --> 01:08:25.940]  мы храним, как бы, по сути, директрисы, что это одна переменная, и равно чему-то, y равно
[01:08:25.940 --> 01:08:31.620]  константе. Вот. Ну, у нас там будет какая-то переменная, означающая, по сути, уровень текущей
[01:08:31.620 --> 01:08:52.700]  директрисы, но как прямую мы ее явно не храним. Вот. Значит, это то, как у нас хранится наш скамлайн,
[01:08:52.700 --> 01:09:00.460]  наша береговая линия. Теперь, смотрите, у нас есть два типа событий. Первое событие — это
[01:09:00.460 --> 01:09:09.100]  так называемое событие точка. По-английски, это событие, когда директриса доходит до очередного
[01:09:09.100 --> 01:09:17.260]  сайта, какой-то там ПКТ. Значит, что здесь происходит? Здесь происходит ставка новой параболы,
[01:09:17.260 --> 01:09:25.620]  пока что выраженной в наш сет, в нашу береговую линию. Значит, как это можно сделать? Ну, смотрите,
[01:09:25.620 --> 01:09:32.100]  у нас есть в сете какие-то там параболы, какие-то дуги-парабол. Мне нужно бинпоискам,
[01:09:32.100 --> 01:09:39.660]  а точнее просто спускам в нашем дереве, понять, где находится та дуга, которая содержит вот эту
[01:09:39.660 --> 01:09:48.100]  вот x-координату. Ну, если я знаю, где заканчиваются все дуги, то есть у меня вот сейчас в моем битчлайне,
[01:09:48.100 --> 01:09:53.620]  в моей береговой линии, по сути, есть вот эти вот x-координаты концов всех дуг. То есть есть
[01:09:53.620 --> 01:09:57.780]  координаты вот этой точки, вот этой и так далее. Мне нужно понять, между какими двумя вставляется
[01:09:57.780 --> 01:10:05.580]  наш новый сайт. Вот где-то здесь. Это, по сути, просто лавербаунд какой-то, лавербаунд по данной
[01:10:05.580 --> 01:10:10.460]  координате x. Значит, я в моей береговой линии нахожу с помощью лавербаунда, с помощью спуска
[01:10:10.460 --> 01:10:16.900]  по дереву ту дугу, которая рассекается этой параболой, и мне нужно вставить теперь эту параболу
[01:10:16.900 --> 01:10:23.300]  внутрь моей береговой линии. Причем, если раньше у меня была вот такая дуга параболы, рассекающаяся
[01:10:23.300 --> 01:10:28.700]  теперь новой параболой, то мне нужно старую дугу удалить, вставить вот такую дугу, потом вот такую,
[01:10:28.700 --> 01:10:39.580]  и потом вот такую. Да, потому что в приятном случае, когда рассечение происходит не по вершине,
[01:10:39.580 --> 01:10:44.060]  не по точке причины двух парабол, а просто по внутренности параболы, у меня сначала будет
[01:10:44.060 --> 01:10:48.700]  начало этой дуги, потом новая парабола, потом завершение этой дуги. То есть, по сути, здесь
[01:10:48.700 --> 01:10:55.540]  вот это вот не надо даже, на самом деле, перевставлять, потому что это, на самом деле,
[01:10:55.540 --> 01:11:00.700]  будет и так. То есть, содержимое этой дуги будет такое же, как раньше. То есть, она задаётся
[01:11:00.700 --> 01:11:05.260]  своим фокусом и фокусом следующей параболы. То есть, на самом деле, эта дуга можно ее сохранить.
[01:11:05.260 --> 01:11:12.820]  По сути, нужно просто вставить две новые дуги. Дуга между вот этой параболой и ПКТ, и между ПКТ
[01:11:12.820 --> 01:11:26.580]  и вот этой параболой. Получается просто два инсерта. Ну, вставили, и что-то там произошло.
[01:11:26.580 --> 01:11:30.460]  Появилась новая парабола, она, соответственно, теперь начала пересекаться с предыдущей,
[01:11:30.460 --> 01:11:37.540]  и вот эти вот вершины начали вычерчивать какие-то ребра наша диаграмма. И второе событие — это
[01:11:37.540 --> 01:11:48.820]  событие окружность, по-английски circle event. Это когда мы понимаем, что три параболы
[01:11:48.820 --> 01:11:59.020]  схлопываются, и центральный из них удаляется. Было вот что-то такое, потом они движутся вниз,
[01:11:59.020 --> 01:12:04.260]  как бы эти становятся все более и более такими острыми, а эта, ну, как бы, она такая тупая
[01:12:04.260 --> 01:12:07.940]  остается, и у них пересечение вырождается в точку. Соответственно, у меня должно произойти
[01:12:07.940 --> 01:12:14.780]  удаление вот этой центральной параболы из береговой линии. Значит, здесь тоже все очень просто.
[01:12:14.780 --> 01:12:21.860]  Мне нужно просто пересечь, ну, точнее, вот у меня есть три соседних дуги параболы. Если их фокусы
[01:12:21.860 --> 01:12:26.500]  попарно различны, то есть, если фокус этих параболов отвечают разным сайтам, вот есть три
[01:12:26.500 --> 01:12:32.260]  соседние дуги параболы, если они отвечают разным фокусам, то можно построить просто описанную
[01:12:32.260 --> 01:12:37.300]  окружность этого треугольника. Ее центр будет как раз той самой точкой, ну, по сути, вершиной
[01:12:37.300 --> 01:12:44.020]  диаграммы Варанова. Вот. И нужно сказать, что в этот момент времени, то есть, когда директриса доходит до
[01:12:44.020 --> 01:12:48.100]  того момента, когда эти параболы пересекаются в одной точке, нужно сказать, что в этот момент времени
[01:12:48.100 --> 01:12:55.540]  нужно центральную параболу удалить и создать члену диаграммы Варанова. Ну, давай чуть подробнее
[01:12:55.780 --> 01:13:06.860]  пропишу. Значит, рассматриваем три последовательные дуги парабол, последовательные дуги парабол.
[01:13:06.860 --> 01:13:17.900]  Пусть они отвечают различным сайтам
[01:13:17.900 --> 01:13:26.340]  ПИ, ПЖ, ПК.
[01:13:37.860 --> 01:13:43.380]  Значит, что происходит в момент времени, когда центральный в них вырождается? То есть, когда
[01:13:43.380 --> 01:13:52.500]  происходит что-то вот такое. Так сейчас. Так. Так. Ну, как-то вот так. Значит, я понимаю, что эта точка,
[01:13:52.500 --> 01:13:59.100]  поскольку параболы, это там, точки равнодаленные от точки и прямой, значит, в этот момент времени
[01:13:59.100 --> 01:14:05.060]  точка пересечения равна удалена от, как минимум, четырех объектов. Во-первых, фокуса ПИ, во-вторых,
[01:14:05.060 --> 01:14:17.940]  фокус ПЖ, в-третьих, фокус ПК, ну и в-четвертых, директрисы. Значит, тогда это событие, получается,
[01:14:17.940 --> 01:14:23.820]  это событие, когда одна из параболов вырождается и удаляется из береговой линии, происходит в
[01:14:23.820 --> 01:14:32.700]  момент времени, когда y равно y координате этой точки плюс радиус окружности. Ну, не буду прописывать,
[01:14:32.700 --> 01:14:38.620]  в общем, мне же что нужно? Мне нужно событие упорядочивать по ординате директрисы. То есть,
[01:14:38.620 --> 01:14:44.180]  я иду сверху вниз, каждый раз достаю максимальную ординату события. А это событие происходит тогда,
[01:14:44.180 --> 01:14:50.860]  когда y вот этой вот директрисы равен y координате вот этой точки пересечения плюс радиус окружности.
[01:14:50.860 --> 01:14:56.940]  Ну, потому что директриса равнодалена от точки пересечения, также как все остальные фокусы,
[01:14:56.940 --> 01:15:01.460]  а фокус находится на расстоянии r. То есть, мне нужно построить описанную окружность этого
[01:15:01.460 --> 01:15:06.620]  треугольника, найти у нее центр и радиус, а дальше вниз от этого центра отступить на радиус и получить
[01:15:06.620 --> 01:15:12.540]  y координату директрисы, в момент времени, в который происходит вот это самое схлопывание одной из
[01:15:12.540 --> 01:15:14.540]  параболов. Вот.
[01:15:14.540 --> 01:15:43.820]  Так. Последнее, что надо сказать. Бывает иногда такое, что... Ну, представьте себе следующую
[01:15:43.820 --> 01:15:49.660]  ситуацию. Вот мы шли-шли-шли, в какой-то момент времени три дуги парабол были последовательными.
[01:15:49.660 --> 01:15:55.740]  Значит, одна задавалась фокусом P и другая Pg, третья Pk. И мы такие сказали, окей, когда-то там в
[01:15:55.740 --> 01:16:01.940]  будущем произойдет событие, когда средний из них выродится, произойдет событие типа circle event,
[01:16:01.940 --> 01:16:07.740]  родится вершина диаграммы Воронова. Вот. Это произойдет в какой-то момент времени. А потом,
[01:16:07.740 --> 01:16:12.420]  до наступления этого момента, происходит неожиданное, и, например, там, не знаю, что-нибудь из
[01:16:12.420 --> 01:16:18.540]  этого, начинает пересекаться какой-то новый парабол. Вот так. То есть, например, происходит
[01:16:18.540 --> 01:16:24.460]  новый site event, и одна из дуг парабол под расщепляется к какой-то другой парабол. Тогда, соответственно,
[01:16:24.460 --> 01:16:31.020]  вот эти вот три дуги парабол уже будут непоследовательными. Они будут еще... Между ними
[01:16:31.020 --> 01:16:36.260]  будет еще кто-то. И, по сути, это означает, что до этого момента времени, до появления этой вершины,
[01:16:36.260 --> 01:16:44.300]  произойдет что-то другое, и одна из парабол умрет еще раньше. Значит, вот это вот событие,
[01:16:44.300 --> 01:16:50.060]  которое я добавил, на самом деле может быть так называемым false alarm, ложной тревогой. Это как бы,
[01:16:50.060 --> 01:16:55.180]  ну, мы сказали себе, что если типа ничего меняться не будет, то здесь будет вершина диаграммы Воронова.
[01:16:55.180 --> 01:16:59.820]  Но что-то до этого поменялось. До того, как мы дошли до этого момента, еще что-то поменялось.
[01:16:59.820 --> 01:17:06.980]  Произошла вставка, скажем, новой дуги в нашу береговую линию, и значит, ну, эта точка, как бы, уже
[01:17:06.980 --> 01:17:10.540]  неверное утверждение о том, что это вершина диаграммы Воронова. Она не является точкой
[01:17:10.540 --> 01:17:14.820]  общения трех парабол. Вот, ее нужно как бы удалить. Значит, если мы это видим, то есть если какие-то
[01:17:14.820 --> 01:17:19.660]  три парабола раньше задавали circle event, а теперь перестали быть последовательными, то можно просто
[01:17:19.660 --> 01:17:45.260]  удалить из очереди событий вот этот circle event. Вот, но на таком высоком уровне вроде бы все.
[01:17:50.260 --> 01:18:02.700]  Так, вопросики есть? Хорошо, давайте чуть-чуть еще детали на кого-нибудь примере нарисуем. Да.
[01:18:02.700 --> 01:18:14.260]  Да, да. Как только у нас происходит изменение береговой линии, вставка или удаление,
[01:18:14.260 --> 01:18:20.140]  мы рассматриваем все тройки подряд идущих, считаем их центр описанной окружности и вставляем новый
[01:18:20.140 --> 01:18:30.620]  circle event. Да, в смысле, вот такой. Тогда не будет, да, мы видим, что три последовательные дуги задают
[01:18:30.620 --> 01:18:35.620]  всего лишь два сайта, значит, они на самом деле не задают. Давайте я сразу нарисую, когда это
[01:18:35.620 --> 01:18:42.460]  происходит. Вот давайте здесь нарисуем, значит, было какой-то p i, приходит здесь какой-то p j.
[01:18:42.460 --> 01:18:47.860]  Значит, вот когда директориса здесь, у меня есть просто всего одна парабола, какая-то вот такая.
[01:18:47.860 --> 01:18:54.580]  Значит, дальше директориса двигается вниз-нис-нис, парабола все расширяется, раскрывается вот так.
[01:18:54.580 --> 01:18:59.300]  Затем пришло p j, в какое-то момент в времени директориса достигает вот этой вот ординаты,
[01:19:00.300 --> 01:19:12.100]  и у меня вот эта парабола рассекается вот такой параболой. Очень кривая, но я пытался. Значит,
[01:19:12.100 --> 01:19:18.020]  что происходит? В этот момент времени у меня эта точка равна удальна от p i и p j. Значит, точка
[01:19:18.020 --> 01:19:23.340]  перчения вот этих двух парабол, одна из которых выражена, равна удальна от p i и p j. Дальше у меня
[01:19:23.340 --> 01:19:27.940]  директориса, когда двигается вниз, эта парабола будет раскрываться, нижняя парабола будет раскрываться,
[01:19:27.940 --> 01:19:34.340]  и, соответственно, эта точка двигается вниз и вверх одновременно. То есть сейчас будет две
[01:19:34.340 --> 01:19:40.460]  точки пересечения, одна двигается вниз, другая как бы вверх. Но при этом это все еще точка,
[01:19:40.460 --> 01:19:45.820]  разделяющая две ячейки диаграмма Воронова, и ту, и житую. И получается, что в момент времени,
[01:19:45.820 --> 01:19:51.220]  когда у меня появилась новая парабола p j, у меня родилась новая точка, давайте сразу две точки
[01:19:51.220 --> 01:20:05.380]  породим. Вот я рождаю одну точку, которая является граничной точкой наших двух ячеек. Дальше,
[01:20:05.380 --> 01:20:11.260]  когда нижняя парабола начинает раскрываться, эта точка с одной стороны как бы будет двигаться вниз,
[01:20:11.260 --> 01:20:16.500]  с другой стороны двигаться вверх, и по сути она будет вычерчивать очередное ребро. Причем она
[01:20:16.500 --> 01:20:24.100]  будет вычерчивать откуда-то из центра, не с вершины, а откуда-то из центра. Раз здесь и вверх и вниз идет
[01:20:24.100 --> 01:20:29.140]  это пересечение двух парабол, то по сути у меня ребро вычерчивается откуда-то из середины. Это
[01:20:29.140 --> 01:20:34.100]  нормально, так и будет. Ну, значит, нам нужно просто хранить, что в момент времени, когда они
[01:20:34.100 --> 01:20:40.020]  пересеклись в первый раз, точка была вот здесь, а дальше, когда приходит еще новая штука и
[01:20:40.020 --> 01:20:45.100]  приходит circle event, мы понимаем, что этот отрезок идет там до какой-то координации. И, соответственно,
[01:20:45.100 --> 01:20:50.460]  вот здесь будет ребро, здесь там будет еще ребро, ну и получается у меня такое, ну не всем диаграмма
[01:20:50.460 --> 01:20:54.620]  Воронова, но диаграмма Воронова с какими-то еще вершинами на сторонах. Потому что я при пересечении
[01:20:54.620 --> 01:21:00.820]  двух парабол завожу вершину, да, окей, она будет на самом деле какой-то внутренней точкой на стороне,
[01:21:00.820 --> 01:21:05.820]  но потом просто ее она будет удалить, потому что все вершины степени 2, которые лежат просто на
[01:21:05.820 --> 01:21:11.140]  какой-то стороне, можно будет подчистить, потому что они выполняют только служебную информацию о том,
[01:21:11.140 --> 01:21:14.500]  что здесь вот начинается пересечение двух ребер. Вот мы его здесь заметили.
[01:21:14.500 --> 01:21:26.740]  Ну, я не знаю, как это сделать без этого, потому что если вы здесь вершину не завели, то как вам
[01:21:26.740 --> 01:21:30.660]  понять, как выглядит эта сторона? То есть вы взяли такие, окей, там три параболы пересеклись,
[01:21:30.660 --> 01:21:37.540]  здесь будет circle event, здесь происходит вершина диаграмма Воронова. А какая сторона вот здесь
[01:21:37.620 --> 01:21:43.020]  идет? Непонятно, куда она идет, какие у нее координаты? Что? Да, да, да, то есть мы знаем вершину,
[01:21:43.020 --> 01:21:48.780]  а ребро непонятно куда идет. Поэтому лучше просто завести здесь вершинку, провести здесь такой
[01:21:48.780 --> 01:21:58.940]  отрезок. Ну и собственно, вот вам, пожалуйста, ребро. Так, значит, четыре минутки. Давайте еще
[01:21:58.940 --> 01:22:14.660]  раз кратко все проговорю. При вставке или удалении дуги параболы рассматриваем
[01:22:14.660 --> 01:22:26.180]  все новые тройки подряд предыдущих парабол, все новые тройки последовательных дуг.
[01:22:26.180 --> 01:22:52.060]  И ими пытаемся продеть circle event. Ну там, скажем, как только одна парабола вставилась,
[01:22:52.060 --> 01:22:57.900]  у меня появились две новые тройки. Скоро будет была какая-то такая картинка. У меня вставляется
[01:22:57.900 --> 01:23:04.420]  здесь парабола. Соответственно, появляется тройка. Давайте я нарисую. Тройка последовательных дуг.
[01:23:04.420 --> 01:23:13.540]  Вот это, вот это и вот это. Ну и соответственно, давайте белым выделю. Вот это, вот это и вот это.
[01:23:13.540 --> 01:23:22.780]  А ну и. Ну вот это как бы можно не считать, потому что она и так будет здесь, здесь будут два
[01:23:22.780 --> 01:23:26.220]  одинаковых фокуса, поэтому это можно игнорить. Ну короче, вот появляется какие-то новые тройки,
[01:23:26.220 --> 01:23:30.740]  их нужно все обработать. Конечно, что каждый из них задает, если тут реально три разных фокуса,
[01:23:30.740 --> 01:23:35.020]  и это не точки на одной прямой, то они сдают какой-то центрописной окружности, а значит,
[01:23:35.980 --> 01:23:49.740]  и вот всех нужно обработать. Удаляем, удаляем, да, удаляем. Значит, события храним, по сути,
[01:23:49.740 --> 01:23:57.500]  просто в куче, ну или там в очереди с приоритетом, давайте напишу в куче. Достаем события с максимальным
[01:23:57.500 --> 01:24:08.900]  y. Достаем события с максимальным значением y. Вот оно и будет как бы самое раннее, то где
[01:24:08.900 --> 01:24:13.660]  что-то происходит. И нам действительно достаточно кучи, потому что здесь нам что нужно? Нам нужно
[01:24:13.660 --> 01:24:20.220]  добавлять элементы в множество событий, извлекать события с максимальным y, ну то есть экстремальное
[01:24:20.220 --> 01:24:25.180]  доставать. Еще иногда надо будет удалять, да, если у нас приходит false alarm, но на самом деле можно
[01:24:25.180 --> 01:24:30.820]  просто для каждой тройки парабол хранить указательный элемент в куче, который надо удалить,
[01:24:30.820 --> 01:24:41.340]  и если что, удаляйте с кучи. Удалять по указателю мы умеем. Так, сейчас, одну секунду. Давайте единственный
[01:24:41.340 --> 01:24:48.340]  момент в конце скажу, что у нас вопрос, как этот сканлайн инициализируется. Значит, в простой
[01:24:48.340 --> 01:24:52.620]  случае, если у нас есть всего одна точка с максимальным y, тогда нужно просто нарисовать
[01:24:52.620 --> 01:24:57.420]  вот такую параболу и больше ничего. Вот, а если у нас есть несколько точек с максимальным y,
[01:24:57.420 --> 01:25:02.340]  то этот случай нужно отдельно заефать и сказать, что у нас в первый момент времени есть вот несколько
[01:25:02.340 --> 01:25:07.500]  таких парабол вырожденных. То есть, я их так рисую, они на самом деле просто будут прямыми,
[01:25:07.500 --> 01:25:13.020]  да, лучами вверх. Они будут на самом деле не пересекаться, то есть никакая пара среди здесь
[01:25:13.020 --> 01:25:18.860]  не пересекается. И это единственный момент времени, когда в нашей диаграмме параболы не пересекаются.
[01:25:18.860 --> 01:25:23.820]  То есть, только если в начале у нас есть несколько прямых на вот этой прямой, несколько сайтов на
[01:25:23.820 --> 01:25:27.660]  директрисе, то у меня все параболы будут вот такими лучами вверх, они будут не пересекаться. А
[01:25:27.660 --> 01:25:33.300]  дальше, как только я пройду на epsilon хотя бы вниз, у меня уже все они раскроются и будут
[01:25:33.300 --> 01:25:38.820]  заметать вообще, ну как бы, на бесконечности будут заметать бесконечно большие координаты. Все
[01:25:38.820 --> 01:25:42.700]  будут попарно пересекаться и так далее. То есть, единственный плохой момент времени — это начало,
[01:25:42.700 --> 01:25:47.220]  если есть несколько точек с одной максимальной ординатой. Тогда вот это нужно отдельно заефать,
[01:25:47.220 --> 01:25:51.620]  что я просто вставляю эти параболы, не пытаюсь их даже пересекать, потому что они не пересекаются,
[01:25:51.620 --> 01:25:55.620]  ну ни одна из них ни с кем не пересекается. Вот и просто иду дальше. А дальше уже вставляются
[01:25:55.620 --> 01:26:01.140]  какие-то, они пересекаются с предыдущими и так далее. Вот, ну на этом все. Спасибо.
