[00:00.000 --> 00:11.800]  Вот. Ладно, поехали. Значит, смотрите. А, ну вот, да. А, ну да, если, да, как называется
[00:11.800 --> 00:21.280]  бгуир, да, он называется вот так вот, понимаете, да. Вот. Вот. Значит, поехали. Значит, что у нас
[00:21.280 --> 00:28.640]  сегодня? Так, флойд. Так, ну здесь достаточно коротенько скажем. Да, флойд. А, ой, у нас не
[00:28.640 --> 00:33.960]  только флойд. Ой, у нас еще Джонсон. Ой, кошмар какой. Ладно, играм придется чуть-чуть подождать.
[00:33.960 --> 00:42.360]  Значит, смотрите. Значит, какую задачу мы сегодня хотим решить? Ну, в прошлый раз мы активно решали
[00:42.360 --> 00:50.800]  задачу найдите кратчайший путь от одной вершины до всех остальных. И много в том преуспели. Вот.
[00:50.800 --> 00:57.440]  Сегодня мы хотим немножко повысить планочку. Сегодня мы хотим найти кратчайшее расстояние
[00:57.440 --> 01:10.640]  между всеми парами вершин. То есть задача называется АПСП. Потому что all pairs. Там all pairs, там shortest path.
[01:10.640 --> 01:33.720]  Вот. Ну, значит, смотрим. Ну, посчитать. Вот сейчас мы, сейчас мы на эту тему будем думать. Вот. Значит,
[01:33.720 --> 01:40.120]  ну раз у нас all pairs и хочется, то есть, ну в первую очередь, хочется найти хотя бы расстояние. Ну,
[01:40.120 --> 01:45.280]  чтобы найти расстояние между всеми парами, это, то есть, по сути, мы хотим посчитать какую-то
[01:45.280 --> 01:53.000]  матрицу. Ну, и здесь, наверное, логично может быть, как минимум, поначалу и сказать, что у нас
[01:53.000 --> 01:59.120]  действительно граф задан в виде матрицы смежности, где там вытяжитое чеки, написан вес, там минимальный
[01:59.120 --> 02:04.400]  вес ребра, соединяющего эти две вершины. Ну, мог быть кратные ребра, но в контексте кратчайших
[02:04.400 --> 02:11.320]  путей, там от кратных ребр можем оставить только ребро с минимальным весом. И вот нам очень хочется
[02:11.320 --> 02:22.120]  найти между любыми двумя вершинами кратчайшие пути. Спрашивается, как же это сделать? Вот. Ну,
[02:22.200 --> 02:29.400]  это оказывается, здесь можно по-разному к этому делу подходить. Ну, во-первых, давайте начнем с
[02:29.400 --> 02:35.960]  простого. Первое, что скажем, давайте пока скажем, что циклов отрицательного веса у нас нет. Это мы
[02:35.960 --> 02:41.720]  говорим, ну, для чего мы это говорим. Да, правильно, мы это говорим для того, чтобы говорить, что кратчайший
[02:41.720 --> 02:49.920]  путь между любыми двумя вершинами существует, если существует путь хотя бы какой-то. Вот. Как вы
[02:49.920 --> 02:57.000]  в прошлый раз убеждались, что у нас кратчайший путь между двумя существует только тогда, когда нет
[02:57.000 --> 03:02.280]  цикла отрицательного веса, через который можно пройти. Вот. Итак, вот у нас есть матрица смешность.
[03:02.280 --> 03:09.680]  Ну, вот, оказывается, если вы хотите превратить ее в матрицу кратчайших путей, точнее кратчайших
[03:09.680 --> 03:21.280]  расстояний, то, оказывается, работает предельно простой код. Вот. Ну, тут по-разному можно рассказывать,
[03:21.280 --> 03:27.120]  но вот, как всегда это называется, да, не помню в свое время, когда-то рассказали так, и это было,
[03:27.120 --> 03:41.200]  выглядело как магия. Да, да, да, да, да, да. Вот. Я запишу это даже еще в более коротком виде.
[03:41.200 --> 03:55.120]  Вот. Все. Вот этот мистический код вам всех кратчайшие расстояния найдут. Так, что, нет?
[03:55.120 --> 04:02.720]  Флойд пишется как-то не так? Мне в свое время это рассказали, как вот здесь перепутаешь циклы местами,
[04:02.720 --> 04:11.920]  получишь VH62 и будешь долго искать. Не, VH62 это неплохо еще, да. Да, да, да, да, да. Но там нет, это уже
[04:11.920 --> 04:17.000]  отдельная песня, там есть классическая задача, видно, что тут вставляется еще цикл 4L и там для
[04:17.000 --> 04:21.560]  каждой перестановки поймите вообще, флойд работает или нет. Там либо приведите контрпример, либо скажите,
[04:21.560 --> 04:27.800]  что да, это работает. Попытаться профануть каждую. Да, да, да, да, да, но это хорошая математическая
[04:27.800 --> 04:34.800]  задача, да. Вот. Так, ну а мы как-то сейчас должны сделать более простую вещь, мы должны доказать,
[04:34.800 --> 04:48.040]  что это работает. Вот спрашивается, как это, как доказать, что это работает? По индукции.
[04:48.040 --> 04:57.320]  По индукции почему и какое утверждение? Видимо хочется доказывать, что мы когда закончим работать с
[04:57.320 --> 05:07.040]  некоторым конкретным K, то у нас уже будет ну как бы оптимальное расстояние, если проходить через
[05:07.040 --> 05:15.040]  вершины K. Да, да, да. Ну давайте так, я вот только аккуратно сформулирую, чтобы было надежно. После K
[05:15.040 --> 05:26.680]  итерации, ну я думаю понятно о чем речь, да, после K итерации, АИТЖТ не превосходит, давайте будем
[05:26.680 --> 05:38.960]  аккуратно говорить, кратчайшего пути, кратчай, вот кратчайшего путинот, точнее так даже,
[05:39.560 --> 05:56.840]  кратчайшего среди всех путей, вот так даже. Сейчас, кратчай среди всех путей, проходящих только
[05:56.840 --> 06:09.040]  через там 1, 2 и так далее K. Вот, ну можно вот, да, не знаю, может быть, можно доказать,
[06:09.040 --> 06:15.560]  что доказать и равенство, хотя я в этом честно говоря не уверен. Ну там можно делать что-то такое,
[06:15.560 --> 06:21.160]  типа давайте между какими-то абстрактными ИИЖ рассмотрим кратчайший путь, рассмотрим через
[06:21.160 --> 06:29.160]  какие вершины он проходит и возьмем там максимальную среди, по номеру, поймем, что когда мы пытаемся
[06:29.160 --> 06:37.920]  релаксировать, ну можно и так, ну да, можно и так, да, можно и так, ну вот там, ну да, по всякому,
[06:37.920 --> 06:45.000]  да, можно и так, можно и так, да, ну тут по всякому в общем пойдет, вот, ну то есть самое простое может
[06:45.000 --> 06:49.080]  быть вот такое, но здесь доказательства достаточно очевидны, там база индукции, понятно, что после
[06:49.080 --> 06:54.680]  нуля итерации там кратчайший, как бы тут АИТ и ЖИТ они происходят кратчайшего пути, который не
[06:54.680 --> 06:59.920]  проходит ни через шо. А шо это за путь, который не проходит ни через шо? Правильно, собственно,
[06:59.920 --> 07:05.680]  прямое ребро. Ну прямое в смысле, реально прямое, а не в смысле ДФС, естественно. Ну мы не знаем,
[07:05.680 --> 07:12.200]  слава богу, что это такое, поэтому не сморачиваемся. Вот, соответственно, ну вот, ну а дальше честно по индукции,
[07:12.200 --> 07:17.560]  да, что если мы хотим кратчайший путь, проходящий через вершины одного ДК, то значит кратчайший путь
[07:17.560 --> 07:24.360]  либо не проходит через вершину К, и тогда он, собственно, уже был найден ранее, да, на предыдущей
[07:24.360 --> 07:30.880]  итерации, либо он проходит через К, и, но тогда это должен быть состоять из кратчайшего пути от ИДК и
[07:30.880 --> 07:37.240]  кратчайшего пути от КДЖ. Вот, меньше либо равно тут стоит, потому что в процессе там КТ итерации
[07:37.240 --> 07:42.680]  может быть АИТ и КТ и поменялось, ну там на самом деле нет, но зачем нам с этим, в общем-то, заморачиваться.
[07:42.680 --> 07:54.960]  Вот. Вот, так что получается кратчайшее расстояние, ну вот, кратчайшее расстояние найдено. Правда,
[07:54.960 --> 08:00.080]  остается такую деталь, которую мы немножко вот, хотя нет, в прошлый раз мы ее как бы не упустили,
[08:00.080 --> 08:04.960]  даже наоборот мы так сильно заморочились. Вот, а как восстанавливать кратчайшие пути?
[08:04.960 --> 08:13.640]  Чего? Чего хрень двумерного порядка?
[08:13.640 --> 08:33.200]  Так, ну правда, как всегда, нам придется при этом тогда доказать, что
[08:33.200 --> 08:39.480]  если вы там, вот, допустим, у вас, да, то есть, допустим, вы действительно будете хранить,
[08:39.480 --> 08:46.440]  так сказать, это, как мы это назовем, то есть, допустим, у нас возникнет там ПР и ТЖТ,
[08:46.440 --> 08:52.200]  которое будет вот там, если тут СМИН равно сработало, будем сюда К записывать, то как
[08:52.200 --> 08:57.920]  вот тут возникнет такой, действительно, вопрос на тему зацикла. Верно ли, что когда вы, действительно,
[08:57.920 --> 09:06.880]  разобьете путь на ИК и КЖ, да, то есть, верно ли, что ПР и ТКТ будет меньше, чем ПР и КТЖТ?
[09:06.880 --> 09:17.320]  Ну, потому что, смотрите, как, если я правильно, значит, понял, восстанавливается ответ. Мы берем
[09:17.320 --> 09:23.480]  вот этот ПР и ТЖТ, говорим К, значит, как бы между ИЖ будет К. Теперь нам, чтобы восстановить путь
[09:23.480 --> 09:29.160]  между ИЖ, надо восстановить путь между ИК и восстановить путь между К и Ж. Как мы его будем
[09:29.160 --> 09:37.400]  восстанавливать? Мы на ИК возьмем ПР от ИК. Ну, там, возьмем и так вот будем восстанавливать.
[09:37.400 --> 09:43.560]  Теперь у нас есть какая-то вопрос. Вот. Ну, как бы, ну, правда, сразу у нас есть какая-то вопрос,
[09:43.560 --> 10:04.200]  почему это вообще не зациклится этот процесс? А если трясательные ребра, то оно вполне себе может зациклиться.
[10:04.200 --> 10:13.440]  Нет, то зациклится по какому параметру? Нет, главное, главное, чтобы у нас уменьшался не А, а ПР,
[10:13.440 --> 10:17.400]  потому что, да, длина вот этого пути может быть больше, чем длина вот этого пути вполне, да,
[10:17.400 --> 10:32.440]  потому что, напоминаю, у нас... Ну, философский вопрос.
[10:34.200 --> 10:45.800]  Ну, смысл, может, нет, ну, может, смысл есть, а смысл его не делать, если там, например, есть цикл длины ноль.
[10:45.800 --> 10:53.960]  Вот бывает такая подлянка. Может, может, там этот путь, как-нибудь вот найденный путь, вот как-нибудь вот так устроен.
[10:53.960 --> 11:07.080]  Давайте приоритетировать, когда мы переписываем. Давайте мы тогда будем приоритетировать приоритетировать путь, в котором меньше ребра.
[11:07.080 --> 11:15.720]  А как вы это будете делать? А мы можем вообще делать так, что мы делаем мин равно, только если штука стала меньше.
[11:15.720 --> 11:24.680]  Да, но это... Ну, так и есть, да. Понятно, что там ПРС будет обновляться, только если тут получилось строгое обновление. Это да.
[11:24.680 --> 11:31.800]  А можно все-таки вот этот вопрос? Почему у нас может быть путь от И до К длиннее, чем от И до Ж?
[11:31.800 --> 11:37.720]  Ну, потому что у нас веса ребер могут быть отрицательными. Может быть, тут 5, 5, 5, и тут минус 3, минус 3, минус 3.
[11:37.720 --> 11:41.720]  Тогда вот эта длина там больше, чем вот эта длина минус 3, минус 3, минус 3.
[11:45.720 --> 11:52.680]  Ну, длина по весу, конечно, имеется в виду, да. Да, длина по весу, конечно, тут имеется в виду, а не по количеству ребер, да.
[11:52.680 --> 11:56.680]  А если вот тут, если по количеству ребер делать индукцию, то у нас не получится?
[11:56.680 --> 12:03.720]  Так, ну по количеству ребер. Тогда надо доказать, что действительно у того, что нам предложат, действительно тут какая-то длина ребер будет действительно такая.
[12:03.720 --> 12:11.720]  Ну, правда, тут как бы вопрос, тут уже, это уже как бы тот, как мы начинаем ли мы тут еще хранить какие-то там количество ребер и пытаться их обновить.
[12:11.720 --> 12:18.720]  Тут как всегда хочется доказать, что вот конкретно эта версия уже будет работать и не выдаст нам никаких проблем.
[12:18.720 --> 12:25.720]  Ну, мы хотим доказать, что у нас падает количество ребер в качащем пути от И до К и от К.
[12:25.720 --> 12:26.720]  Да.
[12:26.720 --> 12:32.720]  Потому что мы качаем все это до К. Ребер меньше, чем в качащем пути от И до Жи.
[12:32.720 --> 12:38.720]  Но мы знаем, что он проходит, но мы знаем, что качащий путь от И до Жи, это сначала от И до И до К, потом от К до И до Жи.
[12:38.720 --> 12:39.720]  Так.
[12:40.720 --> 12:41.720]  Да.
[12:48.720 --> 12:51.720]  Ну, если К не размножит только, а, ну да, и что?
[12:56.720 --> 13:05.720]  Ну, и что так, нет, а что, правда, это тогда, а кто сказал, что там вот, а кто сказал, что там в этом пути будет прям меньше ребер, мы будем именно его там восстанавливать.
[13:05.720 --> 13:07.720]  Пока что не очень понятно.
[13:09.720 --> 13:11.720]  Кому хорошо, пусть есть несколько ребер.
[13:11.720 --> 13:20.720]  Мы хотим доказать, что среди нескольких качащих путей от И до К равной длины у нас будет выбран именно путь, в котором...
[13:20.720 --> 13:28.720]  Нет, ну, что значит выбран? Мы путь... Нет, стоп, давай, тут надо точно формулировать, потому что мы никакой путь вообще не выбираем.
[13:28.720 --> 13:29.720]  Восстановление нас любит.
[13:29.720 --> 13:34.720]  Ну, я... Ну, восстановление ничего не выбирает.
[13:34.720 --> 13:39.720]  То есть, ну, как, что значит восстановление выбирает? Восстановление, как бы, тупой алгоритм, который делает вот то, что тут написано.
[13:39.720 --> 13:42.720]  Как бы, он пользуется только вот Ашками и ПРешками. Все.
[13:42.720 --> 13:43.720]  А с какой стороны он пойдет?
[13:43.720 --> 13:49.720]  Вот. То есть, как бы, он будет, то есть, будет какая-то получаться там вот какая-то последовательность там путей.
[13:49.720 --> 13:55.720]  Где-то там будет веточка обрубаться, потому что выяснится, что качащий путь между двумя вершинами, это тупо ребро между ними.
[13:55.720 --> 13:59.720]  Да, и там он тут обрубится. Но вершины будут появляться, появляться, появляться.
[13:59.720 --> 14:04.720]  Теперь вот возникает вопрос... Ну, то есть, возникает вопрос, а, почему этот процесс закончится?
[14:04.720 --> 14:12.720]  И, б, почему, если он... Почему, когда он закончится, это будет реально качащий путь, а не там какая-нибудь рандомная бяка?
[14:15.720 --> 14:22.720]  Ну, можно, например, сделать вот это вот обновление не строгим, не строгим, рассмотреть максимальный путь.
[14:22.720 --> 14:26.720]  Тогда у нас в последний раз одноидство на самой большой вершине в аппетитах.
[14:26.720 --> 14:30.720]  Нет шансов нет. Но лучше наоборот строгим как раз. Нет?
[14:30.720 --> 14:31.720]  Ну, можно и строгим.
[14:31.720 --> 14:41.720]  Ну, лучше нет. Ну, тут строгим, потому что, да, реально там, потому что если будет не строгая, то тут там как раз эти циклы нулевой длины начнут сильно радовать жизнь.
[14:41.720 --> 14:45.720]  Вот, так что лучше не надо. Вот.
[14:45.720 --> 14:49.720]  Нет, ну тут по-разному можно делать, но тут... Ну, тут как?
[14:49.720 --> 14:55.720]  То есть, вообще, конечно, можно приятную вещь сказать, что, да, у вас в каждый момент времени есть какая-то последовательность вершин, условно, да?
[14:55.720 --> 15:03.720]  И заметим, что получается... Ну, вот. И если между каждыми двумя соседями брать качащие пути, то сумма будет в точности то, что нам надо.
[15:03.720 --> 15:04.720]  Вот.
[15:05.720 --> 15:18.720]  Вот. Но, собственно, останется вопрос, почему это хотя бы не зациклится, не говоря уже о том, что почему не может оказаться так, что там длина этого, там количество вершин на этом пути будет там два в степени чего-нибудь, потому что будет там зацикл нулевой длины какой-нибудь.
[15:28.720 --> 15:31.720]  Ну, а поп... Не увеличивается в каком плане?
[15:34.720 --> 15:40.720]  Пока это вершине, у нас получилось два куска, каждым из которых ребер не больше, чем в исходной части.
[15:40.720 --> 15:43.720]  И как это связано с вот этим вот?
[15:44.720 --> 15:49.720]  Не знаю, не консуль, а ты такая жесткая, жесткая. Мы всегда с тобой какие-то короткие куска.
[15:49.720 --> 15:51.720]  Ну, я...
[15:51.720 --> 15:54.720]  Ну, ты консуль, жесткая. Типа очень длинный такой же.
[15:54.720 --> 15:56.720]  Хорошо.
[15:56.720 --> 15:58.720]  Мога ли?
[16:02.720 --> 16:04.720]  Сейчас, вот.
[16:13.720 --> 16:15.720]  Вот.
[16:15.720 --> 16:42.720]  Да, как всегда не все так просто оказалось.
[16:43.720 --> 16:46.720]  Хотя, на самом деле, не очень понятно, зачем нужна индукция по числу ребер.
[16:46.720 --> 16:52.720]  На самом деле, более проще будет, если индукция будет по ПРС.
[16:52.720 --> 16:54.720]  В каком плане?
[16:54.720 --> 16:56.720]  Потому что я утверждаю следующее.
[16:56.720 --> 17:02.720]  То есть, вот я вот жутко утверждаю, что пусть у меня, допустим, К равно ПРС и ТЖТ.
[17:02.720 --> 17:06.720]  Так вот, мистическое утверждение.
[17:06.720 --> 17:11.720]  Значит, ПРС и ТКТ меньше, чем К.
[17:11.720 --> 17:18.720]  И ПРС и КТ и ЖТ тоже меньше, чем К.
[17:25.720 --> 17:27.720]  Потому что, смотрите.
[17:27.720 --> 17:29.720]  Что означает от ПРС и ТЖТ?
[17:29.720 --> 17:35.720]  Это означает, что именно на КТ и ТРЦ мы нашли кратчайший путь между ИЖ, правда?
[17:35.720 --> 17:37.720]  Вот.
[17:37.720 --> 17:49.720]  То есть, это означает, что, как бы, получается, кратчайший путь может проходить только через вершины от одного до К, но не может проходить только через вершины от одного до К-1, правда?
[17:49.720 --> 17:56.720]  Значит, тогда мы сказали, что мы в этой ЖТ написали АИТКТ и АТКТЖТ.
[17:56.720 --> 18:00.720]  Но теперь, обратите внимание, маленький приятный факт.
[18:00.720 --> 18:07.720]  Тогда я утверждаю, что мы уже на этот момент кратчайшие пути от АИТКТ и АКЖ уже нашли.
[18:07.720 --> 18:09.720]  Логично, да?
[18:09.720 --> 18:17.720]  Причем даже не на КТ и ТРЦ, а перед КТ и ТРЦ, потому что КТ и ТРЦ, в общем-то, вот эти величины особо не меняют.
[18:17.720 --> 18:21.720]  Ну, по крайней мере, пока у нас нет циклов отрицательного веса, конечно.
[18:21.720 --> 18:27.720]  Если бы у нас там АКТ и КТ уже было меньше нуля, там, конечно, весело, но об этом мы чуть позже поговорим.
[18:30.720 --> 18:41.720]  Но тогда отсюда следует, действительно, маленькая приятная вещь, что, действительно, кратчайший путь от АКТ и КТ будет в качестве промежуточных использовать только вершины от одного до К-1.
[18:41.720 --> 18:45.720]  И, следовательно, вот эти поражки получаются такие.
[18:45.720 --> 18:49.720]  Но более того, это рассуждение можно повторить.
[18:49.720 --> 18:59.720]  Потому что мы понимаем, что кратчайший путь был найден до КТ и ТРЦ, то есть тут будет какое-то К' и К'-2, которые строго меньше, чем К.
[18:59.720 --> 19:01.720]  Понимаете, да?
[19:01.720 --> 19:10.720]  И, то есть, тогда получается, что вот этот путь уже был найден на КТ и ТРЦ, и перед КТ и ТРЦ были уже кратчайшие пути от И до К' и от К' до К.
[19:10.720 --> 19:17.720]  Почему мы считаем, что мы можем найти ПРЭД раньше, чем КТ и ТРЦ?
[19:17.720 --> 19:19.720]  Сейчас, чего еще раз?
[19:19.720 --> 19:26.720]  Вот почему у нас ПРЭД и ТРЦ найден на какой-то ранней итерации?
[19:26.720 --> 19:28.720]  Почему?
[19:28.720 --> 19:40.720]  Ну, потому что перед КТ и ТРЦ значение АИТ и КТ уже было равно кратчайшему пути между И и К.
[19:40.720 --> 19:41.720]  Почему?
[19:41.720 --> 19:51.720]  Потому что мы АИТ и ЖИТой сказали, что оно равно АИТ и КТ плюс АК и ЖИТой на тот момент, да?
[19:51.720 --> 19:53.720]  Именно на тот момент.
[19:53.720 --> 19:57.720]  И обнаружилось, что это реально кратчайший путь.
[19:57.720 --> 20:06.720]  Но если бы потом выяснилось, что АИТ и КТ не кратчайшие, то тогда, извините, мы просто из того же пути, что было и вот этой лучшей версии, извините, и АИТ и ЖИТой потом обновили бы.
[20:06.720 --> 20:09.720]  То есть просто нашли бы лучший путь от ИЖИ, а это не так.
[20:13.720 --> 20:21.720]  Ну, потому что что приятно, что если мы рассматриваем кратчайший путь, то любые две вершины нем соединяются тут именно кратчайшим путем.
[20:26.720 --> 20:34.720]  Еще раз, почему мы не могли на КТ и ТРЦ сначала АИТ и КТ, а потом АИТ и ЖИТой?
[20:35.720 --> 20:41.720]  Ну, потому что заметим, что АИТ и КТ на КТ итерации не обновляется.
[20:43.720 --> 20:50.720]  Потому что АИТ и КТ пытается обновиться только через АИТ и КТ и АИТ и КТ плюс АКТ и КТ.
[20:51.720 --> 20:57.720]  А циклов отрицательного веса у нас, напоминаю, нету, чтобы АКТ и КТ стало чем-то кроме нуля.
[20:59.720 --> 21:02.720]  Поэтому вот такая вот маленькая фишечка.
[21:03.720 --> 21:10.720]  Вот, так что получается, ну вот так, что тут вот получается вполне себе, по крайней мере, зацикла нет.
[21:11.720 --> 21:18.720]  Сейчас, а почему не могло быть такое, что мы когда-нибудь в будущем обновили АИТ и КТ через какой-нибудь там ну большой АЖИ,
[21:19.720 --> 21:25.720]  через какой-нибудь большой АК-штрих, и после этого через то же самое АК-штрих обновили АИТ и ЖИТая?
[21:26.720 --> 21:30.720]  Ну, тогда и у АИТ и ЖИТого, тогда это КА не то КА, которое бы мы рассматривали.
[21:31.720 --> 21:38.720]  Потому что КА это как бы что-то, то есть КА это сигнал, когда АИТ и ЖИТа обновлялась в последний раз.
[21:45.720 --> 21:48.720]  Ну типа да, по факту да, то есть КА это не просто рандомное шута.
[21:49.720 --> 21:54.720]  Вот, но правда тут остается только маленький тонкий такой момент уже симпатический.
[21:55.720 --> 21:59.720]  Да, то есть получается, что хорошо путь не зациклется, потому что чем дальше, тем меньше кашки.
[22:00.720 --> 22:03.720]  Но не слишком в том, что они что-то могут между левой и правой половиной повторяться.
[22:04.720 --> 22:08.720]  Ну, само по себе это нас не особо, а вдруг подумаешь там будет цикл длины ноль.
[22:09.720 --> 22:10.720]  Но возникнет маленькая проблема, как вы думаете, да.
[22:11.720 --> 22:14.720]  А не возникнет ли такого, что количество вершин на этом пути будет там два в степени?
[22:15.720 --> 22:17.720]  А то, видите, у нас каждый раз там на две части разделяется.
[22:18.720 --> 22:20.720]  И получается не получится ли там, действительно.
[22:21.720 --> 22:27.720]  Там длина этого пути в ребрах будет там два в степени какой-нибудь неприятный.
[22:30.720 --> 22:35.720]  Вот, как вы думаете, не будет ли такой подленки?
[22:57.720 --> 22:58.720]  В каком случае еще раз?
[22:58.720 --> 23:00.720]  Ну, смотрите, ну, просто теоретически.
[23:01.720 --> 23:06.720]  Ну, в том плане, смотрите, вот у нас мы тут разделяем путь на два, да.
[23:07.720 --> 23:11.720]  И хоть у нас все вершины тут меньше к, и тут все вершины меньше к.
[23:12.720 --> 23:14.720]  Да, но мы разделились там на две рекурсивные ветки.
[23:15.720 --> 23:17.720]  Тут мы тоже разделимся на две ветки, и тут на две ветки.
[23:18.720 --> 23:20.720]  Получается что-то типа два в степени к теоретически.
[23:25.720 --> 23:26.720]  Кто сказал?
[23:29.720 --> 23:32.720]  Нет, стоп.
[23:33.720 --> 23:39.720]  Мы типа представляем путь в виде какого-то дерева, в котором все вершины уникальные.
[23:40.720 --> 23:43.720]  Опа, а кто сказал, что все вершины уникальные?
[23:47.720 --> 23:50.720]  У нас каждый раз слева меньше, справа меньше.
[23:51.720 --> 23:53.720]  Ну и что? Да, тут меньше к, и тут меньше к.
[23:54.720 --> 23:57.720]  Да, они все не равны к, они все меньше к, но вдруг тут кто-то меньше к, и тут кто-то меньше к.
[23:58.720 --> 23:59.720]  И они совпали.
[24:04.720 --> 24:05.720]  Ну теоретически да.
[24:14.720 --> 24:15.720]  Ну да.
[24:18.720 --> 24:20.720]  Да, ну да, да, браво, да.
[24:21.720 --> 24:25.720]  То есть смотрите, утверждение, что повторяющихся вершин в таком восстановлении не будет.
[24:26.720 --> 24:27.720]  Почему?
[24:28.720 --> 24:33.720]  Потому что предположим, что, ну понятно, что к никому не равен, к уникален, да.
[24:34.720 --> 24:38.720]  А предположим, что в процессе рекурсии там получилось, что какой-то повтор возник.
[24:39.720 --> 24:47.720]  Ну тогда получилось следующее, что значит у нас есть и, мы дошли до вершины к, потом, потом, ну вот.
[24:47.720 --> 24:48.720]  Пото, ну вот.
[24:53.720 --> 24:57.720]  Ну точнее так, тут два момента, какие повторы появились.
[24:58.720 --> 25:05.720]  Ну на самом деле да, будем доказывать по индукции, так сказать, по ПРР, что значит там все вершины уникальны, да.
[25:06.720 --> 25:14.720]  Ну база понятна, что если ПРР равна, там ничему она не равна, потому что АИТ и ЖИТ это прямое ребро, то собственно там все понятно.
[25:15.720 --> 25:19.720]  Вот, а теперь предположим, что мы восстановили тут путь без повторов и тут путь без повторов.
[25:20.720 --> 25:22.720]  И предположим, что при этом дубликат возник.
[25:25.720 --> 25:30.720]  Что это значит? Тогда получается, мы шли, шли, шли до к, а потом бабах и зациклились.
[25:32.720 --> 25:33.720]  И потом дошли до ЖИТ как-то.
[25:34.720 --> 25:43.720]  Но тогда заметим, что вот этот цикл можно в принципе выкинуть, потому что он веса не меньше нуля, значит как бы путь от него короче длиннее не станет.
[25:44.720 --> 25:45.720]  От удаления его длиннее не станет.
[25:46.720 --> 25:51.720]  Но тогда получается, что мы нашли кратчайший путь между ИИ и ЖИТ, или по крайней мере путь не хуже кратчайшего.
[25:52.720 --> 26:01.720]  Вот, но который проходит, который не проходит через катую вершину, то есть он проходит только через вершины, которые по номерам строго меньше чем к.
[26:03.720 --> 26:04.720]  А у нас такое невозможно.
[26:06.720 --> 26:12.720]  Потому что мы вот уже говорили, что такое невозможно, да, потому что именно на катаэтерацию он вообще появился, до катаэтерации его не было.
[26:15.720 --> 26:16.720]  Так.
[26:24.720 --> 26:31.720]  Нет, мы доказали, что при восстановлении пути, то есть на восстановленном пути все вершины будут уникальны.
[26:42.720 --> 26:43.720]  Нет, мы доказали, что их просто нет.
[26:44.720 --> 26:55.720]  Да, тут фишка, просто такого не бывает.
[26:58.720 --> 27:09.720]  Да, то есть мы поставили себе более страшную цель, то есть как бы если бы у нас была цель, там скажем, не заморад сказать, ой, тут какое-то мутное доказательство непонятно, давайте сделаем как-то надежно, то можно сделать вообще по-другому.
[27:09.720 --> 27:14.720]  Может быть на отрицательный цикл тоже где-то восстанавливается.
[27:15.720 --> 27:20.720]  Потому что, ну, идея будет такая, будем говорить, вот ищем корчайший путь, а ты дожи.
[27:21.720 --> 27:47.720]  И говорим, назовем ребро какое-нибудь там, значит, ИЛ хорошим, там если, ну скажем, значит там вот это вот ребро, вот вес ребра от ИЛ плюс А от ИЛЖ оказалось там меньше либо равно, ну или просто равно, ну точнее просто вот равно АИТЖ.
[27:47.720 --> 27:55.720]  Вот, то есть как бы вот это условие означает, что корчайший путь от ИДЖ может начинаться с этого ребра.
[27:57.720 --> 28:07.720]  И тогда неправильный алгоритм, давайте найдем такое ребро, оно точно существует и пройдем по нему, потом найдем хорошее ребро из Эля в сторону Жи, тоже по нему пойдем и так далее.
[28:08.720 --> 28:13.720]  Почему этот алгоритм неправильный? Потому что тут-то в общем-то никто нам не мешает пойти по циклу длины 0.
[28:14.720 --> 28:15.720]  Логично, да?
[28:16.720 --> 28:22.720]  То есть вместо того, что вот, то есть может быть такая ситуация, что вот есть корчайший путь от ИДЖ, а есть вот какой-нибудь нулевой цикл.
[28:23.720 --> 28:28.720]  Там не важно, например, совсем тупо нулевой, и тогда никто нам не мешает вот просто радостно по нему бесконечно ходить.
[28:30.720 --> 28:35.720]  Вот. Но правильный алгоритм говорит, давайте запустим ДФС. Ой, извините, БФС.
[28:36.720 --> 28:38.720]  Вот, по хорошим ребрам.
[28:40.720 --> 28:41.720]  Вот, и собственно все.
[28:42.720 --> 28:46.720]  Вот, то есть можно так делать, но это как бы требует дополнительного кода какого-то непонятного.
[28:48.720 --> 28:54.720]  Ну вот, хотя на самом деле он в нем нет необходимости, потому что вот, как вы только что доказали, этот код тоже прекрасно работает.
[28:57.720 --> 28:58.720]  Вот.
[29:00.720 --> 29:08.720]  Так, ну вот, это соответственно алгоритм Флойда, но это такой, или как он известен еще в некоторых кругах, это алгоритм Флойда Кубецкого.
[29:09.720 --> 29:10.720]  Соответственно.
[29:11.720 --> 29:12.720]  Вот, почему Кубецкого?
[29:15.720 --> 29:18.720]  Да, потому что работает за О от В в кубе.
[29:22.720 --> 29:26.720]  Да-да-да, не нужно думать, конечно, что Кубецкий это прям какой-то польский математик.
[29:28.720 --> 29:29.720]  Да-да-да.
[29:34.720 --> 29:40.720]  Ну да. Нет, то есть на самом деле у этого алгоритма официально две фамилии, но вторая фамилия Воршелл.
[29:41.720 --> 29:44.720]  То есть это называется алгоритм Флойда Воршелла на самом деле.
[29:47.720 --> 29:48.720]  Вот.
[29:49.720 --> 29:51.720]  Но как бы более известен как алгоритм Флойда Кубецкого.
[29:52.720 --> 29:53.720]  Да.
[29:55.720 --> 29:56.720]  Вот так.
[29:57.720 --> 29:58.720]  Флойд Воршелл алгоритм.
[29:59.720 --> 30:00.720]  В смысле Кубецкого?
[30:01.720 --> 30:06.720]  Не-не-не, ну хорошо, давайте, да, прямо скажем, да, это такой, да, это такой прикол в олимпиадной среде.
[30:07.720 --> 30:08.720]  Да, все.
[30:08.720 --> 30:10.720]  Кубецкого и Словаку.
[30:11.720 --> 30:12.720]  Да.
[30:14.720 --> 30:16.720]  Сейчас, когда у нас одно ребро, мы говорим, что кто предок.
[30:17.720 --> 30:19.720]  Ну, когда у нас утопус у нас одного ребра стоит.
[30:20.720 --> 30:22.720]  А никто, тогда в проритом житом мы пишем минус один.
[30:23.720 --> 30:25.720]  Ну, изначально в проритом житом пишем минус один.
[30:26.720 --> 30:27.720]  И все.
[30:28.720 --> 30:29.720]  Вот.
[30:30.720 --> 30:32.720]  Так что написано минус один, значит рекурсия обрубается, это прямое ребро.
[30:33.720 --> 30:34.720]  Вот.
[30:35.720 --> 30:36.720]  Вот.
[30:36.720 --> 30:45.720]  Но, конечно, ну, в принципе, если в графе реально В квадрат Ребер, то, в общем-то, да, философский вопрос можно ли придумать что-то прям значительно быстрее.
[30:46.720 --> 30:48.720]  Хотя, теоретически, конечно, за квадрат, наверное, хочется решать задачу.
[30:49.720 --> 30:50.720]  Так.
[30:51.720 --> 30:55.720]  Но лично я не умею и не уверен, что, по-моему, наука тоже не умеет.
[30:56.720 --> 30:59.720]  Так, ну ладно, у нас тут, кстати, две ветки, на самом деле, в этом месте возникают.
[31:00.720 --> 31:02.720]  В данном случае же квадрат это, по сути, линейное время.
[31:03.720 --> 31:04.720]  В смысле?
[31:04.720 --> 31:05.720]  В смысле.
[31:06.720 --> 31:07.720]  Да.
[31:08.720 --> 31:10.720]  Ну это да, это да.
[31:11.720 --> 31:18.720]  Не, ну как сказать, можно сказать, что если вы хотите установить все кратчайшие пути, то по-хорошему там, конечно, ответ у вас может быть до куба.
[31:19.720 --> 31:22.720]  Ну хотя вряд ли, конечно.
[31:23.720 --> 31:27.720]  Хотя по-хорошему нет, ответ у вас, скорее всего, будет все равно размера квадрат, почему?
[31:28.720 --> 31:31.720]  Потому что кратчайшие пути из одной вершины до всех остальных по-любому образуют дерево.
[31:31.720 --> 31:37.720]  И, в принципе, можно их и задать, как дерево, и получается у вас как бы размер ответа все равно будет квадрат.
[31:38.720 --> 31:40.720]  Так что чисто теоретически ускорить это можно.
[31:41.720 --> 31:46.720]  Ну так, по крайней мере, по крайней мере, там фундаментальных проблем этого уровня у нас нету.
[31:47.720 --> 31:48.720]  Вот так аккуратно скажем.
[31:49.720 --> 31:53.720]  Кстати, а для каких-нибудь разреженным графов это, наверное, можно тоже сфотоматизировать?
[31:54.720 --> 31:55.720]  Да.
[31:56.720 --> 31:57.720]  Не.
[31:58.720 --> 31:59.720]  Не, зачем?
[31:59.720 --> 32:08.720]  Потому что, например, смотрите, давайте подумаем.
[32:09.720 --> 32:15.720]  Потому что если бы все веса ребер, если у вас не только нету отрицательных ребер, то есть отрицательных циклов отрицательного веса, но нет отрицательных ребер,
[32:16.720 --> 32:22.720]  тогда вместо этого мы могли бы запустить V раз Dx и получить какую симпатику?
[32:23.720 --> 32:27.720]  Ну, в тупую, если тупого Dx запускать, то V на V квадрат.
[32:27.720 --> 32:28.720]  Это тот же самый V куб.
[32:29.720 --> 32:37.720]  Но если граф разреженный, то можно сделать, чтобы это было VElogV.
[32:52.720 --> 32:53.720]  Ну, давайте.
[32:54.720 --> 32:57.720]  Хотя, конечно, предполагать, что у нас граф не связан.
[32:58.720 --> 33:00.720]  Ну, просто что это за граф, в котором E меньше, чем V?
[33:01.720 --> 33:03.720]  Прям сильно меньше, чем V.
[33:04.720 --> 33:07.720]  Вот. Прямо симпатически меньше, чем V.
[33:08.720 --> 33:11.720]  По-моему, это очень-очень-очень-очень сильно не связан.
[33:14.720 --> 33:17.720]  Не, в бамбуке E как бы это V-1.
[33:18.720 --> 33:19.720]  Вот.
[33:20.720 --> 33:21.720]  Палка гороха.
[33:22.720 --> 33:24.720]  Ну, у нас не связанные, хорошие ноги.
[33:25.720 --> 33:27.720]  Ну, вот. Не, ну, хорошо, V на...
[33:28.720 --> 33:29.720]  Ну, хорошо, V на V плюс ElogV.
[33:30.720 --> 33:32.720]  Ну, правда, да, помним, что этот алгоритм не самый универсальный,
[33:33.720 --> 33:36.720]  потому что если E порядка V квадрат, то он хуже, чем вот этот, да?
[33:37.720 --> 33:39.720]  Мы же всегда думали, что E плюс VlogV на самом деле.
[33:40.720 --> 33:41.720]  Да, на самом деле правильнее.
[33:42.720 --> 33:43.720]  Это на самом деле V...
[33:44.720 --> 33:46.720]  Тут на самом деле правильнее писать V умножить на E плюс VlogV.
[33:47.720 --> 33:50.720]  Потому что мы с вами не олимпиадники, мы с вами знаем, что есть куча фибоначи.
[33:52.720 --> 33:54.720]  Так, все, теперь это уже асинтетически, хотя бы так.
[33:55.720 --> 33:58.720]  Да, ну, если мы, конечно, тут избавились от кратных ребер, конечно.
[33:59.720 --> 34:05.720]  Ну, мы уже говорили об этом, что от кратных ребер мы избавляемся за E плюс V.
[34:06.720 --> 34:07.720]  А можно и за E плюс V квадрат вообще обнаглеть.
[34:08.720 --> 34:10.720]  Если уж E больше, чем V квадрат, то можно и не париться.
[34:11.720 --> 34:12.720]  Вот.
[34:13.720 --> 34:14.720]  А можно за Elog и не париться.
[34:15.720 --> 34:16.720]  Можно, но если...
[34:17.720 --> 34:19.720]  Ну, если E маленькая, опять же говорю.
[34:19.720 --> 34:23.720]  Потому что вам, в общем-то, ИВ придется писать, что там, как-то, если E там порядка V квадрат,
[34:24.720 --> 34:27.720]  или хотя бы там порядка V квадрат поделить на log V, то пишем...
[34:28.720 --> 34:30.720]  И logE мы почти всегда можем себе позволить вот в этой асинтетике еще.
[34:31.720 --> 34:32.720]  Ну, да, да ладно, классическая, да.
[34:33.720 --> 34:34.720]  Там бывает там какой-нибудь классический...
[34:35.720 --> 34:38.720]  Если у нас E, V, чтобы у нас logE был больше, чем V, то нужно постараться.
[34:40.720 --> 34:41.720]  Е, ну, нет смысла.
[34:42.720 --> 34:46.720]  Но обычно у нас, так как мы избавляемся от кратных ребер, то logE это не больше, чем 2logV вообще-то.
[34:46.720 --> 34:47.720]  Так что тут...
[34:48.720 --> 34:49.720]  Так что тут мы вообще не паримся.
[34:50.720 --> 34:51.720]  Вот.
[34:52.720 --> 34:53.720]  Так.
[34:54.720 --> 34:56.720]  Ну вот, но это, как к сожалению, работает только еще с ребрами неотрицательными.
[34:57.720 --> 35:00.720]  Мы в прошлый раз жестко пользовались тем, что у нас веса ребр неотрицательная.
[35:01.720 --> 35:03.720]  А что делать, если не до циклов отрицательного веса?
[35:04.720 --> 35:06.720]  Нет, но ребра отрицательными бывают.
[35:09.720 --> 35:10.720]  Вот.
[35:11.720 --> 35:13.720]  Ну, оказывается, можно скетерить.
[35:13.720 --> 35:14.720]  Да, чит называется потенциалы.
[35:17.720 --> 35:18.720]  Ой, нет.
[35:19.720 --> 35:20.720]  Значит, что такое потенциал?
[35:21.720 --> 35:22.720]  Вот у нас, допустим, у нас есть граф.
[35:23.720 --> 35:24.720]  Да.
[35:31.720 --> 35:32.720]  Значит, да, тут...
[35:35.720 --> 35:36.720]  Так.
[35:38.720 --> 35:41.720]  Сейчас этому все убираем, этому все убираем.
[35:41.720 --> 35:46.720]  Сейчас этому все убираем, этому все убираем, этому все убираем.
[35:56.720 --> 35:57.720]  Вот.
[35:58.720 --> 35:59.720]  Значит, действительно, есть у нас какой-то граф.
[36:00.720 --> 36:02.720]  И там у каждого ребра есть какие-то веса.
[36:03.720 --> 36:05.720]  5, минус 3, минус 2, там 8, там все что угодно.
[36:06.720 --> 36:09.720]  Так главное, чтобы тут цикл отрицательного веса нарисовался.
[36:09.720 --> 36:10.720]  Не нарисовался случайно.
[36:11.720 --> 36:13.720]  Правда, тут цикла нет вообще.
[36:14.720 --> 36:15.720]  Так вот.
[36:16.720 --> 36:18.720]  Значит, что такое потенциал?
[36:24.720 --> 36:25.720]  Это...
[36:26.720 --> 36:27.720]  Ну, вот.
[36:28.720 --> 36:32.720]  Это такая функция, которая каждый в вершине ставит в соответствие
[36:32.720 --> 36:33.720]  какой-то число.
[36:36.720 --> 36:39.720]  И это законченное предложение.
[36:40.720 --> 36:41.720]  Все.
[36:50.720 --> 36:51.720]  Ну, не важно.
[36:52.720 --> 36:53.720]  Я про определение вожу, спокойно.
[36:54.720 --> 36:57.720]  Просто мы на каждой вершине рисуем какое-то мистическое число.
[36:58.720 --> 37:03.720]  Там 3, 8, 6, там 5, 2, 7.
[37:04.720 --> 37:06.720]  Минус 7.
[37:07.720 --> 37:08.720]  Минус 2.
[37:09.720 --> 37:10.720]  Ноль.
[37:13.720 --> 37:15.720]  То есть мы просто нарисовали какое-то число.
[37:16.720 --> 37:17.720]  Пока непонятно зачем.
[37:18.720 --> 37:20.720]  Ну, теперь у нас вес ребра.
[37:21.720 --> 37:22.720]  Вот давайте я его буду...
[37:23.720 --> 37:24.720]  Вес, допустим, W от УВ.
[37:25.720 --> 37:26.720]  Ну, мы же говорили, что у нас в кратах ребра нету,
[37:27.720 --> 37:28.720]  но все, добрый день.
[37:29.720 --> 37:30.720]  Вот.
[37:31.720 --> 37:34.720]  Значит, вес обычного веса.
[37:35.720 --> 37:39.720]  Давайте попробуем рассмотреть такую штуку как приведенный вес.
[37:40.720 --> 37:45.720]  То есть это будет называть приведенный вес относительно потенциала П.
[37:48.720 --> 37:51.720]  Вес относительно П.
[37:51.720 --> 37:52.720]  Это равно...
[37:53.720 --> 38:01.720]  Значит, старый вес плюс потенциал в начале, минус потенциал в конце.
[38:08.720 --> 38:16.720]  Спрашивается, может ли приведенный вес ребра отличаться от обычного веса?
[38:16.720 --> 38:20.720]  Приведенный вес ребра отличаться от обычного веса.
[38:23.720 --> 38:24.720]  Ну, естественно.
[38:25.720 --> 38:28.720]  Ну, если только потенциалы не все равны.
[38:29.720 --> 38:32.720]  Обратите внимание, потенциал как в физике.
[38:33.720 --> 38:35.720]  То есть нам абсолютное значение потенциала не нужно.
[38:36.720 --> 38:38.720]  Нам интересует на самом деле разность потенциалов.
[38:39.720 --> 38:44.720]  То есть, видите, вес устроен таким образом, что если мы ко всем потенциалам прибавим 57, то ничего не поменяется.
[38:46.720 --> 38:47.720]  Ну вот.
[38:47.720 --> 38:49.720]  Ну, впрочем, если 179, то тоже.
[38:53.720 --> 38:54.720]  Ну вот.
[38:55.720 --> 38:57.720]  Действительно, веса, казалось бы, сильно меняются.
[38:59.720 --> 39:02.720]  Но как меняются пути?
[39:05.720 --> 39:08.720]  Вот давайте рассмотрим какой-нибудь путь.
[39:10.720 --> 39:11.720]  Из УВ.
[39:12.720 --> 39:18.720]  Ну и в процессе тут будет У1, У2, У3, там бла-бла-бла, бла-бла-бла, бла-бла-бла, бла-бла-бла.
[39:19.720 --> 39:23.720]  И тут УКТ, которым будет равно В, а у нас будет равно У0В.
[39:26.720 --> 39:27.720]  Теперь давайте посмотрим.
[39:28.720 --> 39:29.720]  То есть этот путь мы назовем РО.
[39:31.720 --> 39:32.720]  Да?
[39:32.720 --> 39:36.720]  И тогда у этого пути РО есть вес, который равен
[39:36.720 --> 39:52.720]  W от У0, У1, плюс W от У1, У2, плюс W от У2, У3, плюс и так далее, плюс W от УК-1 до УК.
[39:55.720 --> 39:56.720]  Вот.
[39:59.720 --> 40:03.720]  А еще у этого W есть приведенный вес.
[40:07.720 --> 40:08.720]  Который равен.
[40:09.720 --> 40:10.720]  Вот теперь поехали.
[40:10.720 --> 40:11.720]  Чему он равен?
[40:12.720 --> 40:14.720]  То есть то же самое, так еще плюс разность потенциалов.
[40:15.720 --> 40:16.720]  Да.
[40:16.720 --> 40:19.720]  Ну пока, ну давайте, если писать формально, плюс куча разностей потенциалов.
[40:20.720 --> 40:25.720]  Сейчас будет P от У0, плюс W от У0, У1, минус P1.
[40:26.720 --> 40:27.720]  P от У1.
[40:28.720 --> 40:30.720]  Это я первое ребро переписал.
[40:31.720 --> 40:32.720]  Переписываю второе ребро.
[40:33.720 --> 40:49.720]  P от У1, плюс W от У1, У2, минус P от У2, плюс P от У2, плюс W от У2, У3, минус P от У3.
[40:50.720 --> 40:52.720]  Значит плюс и так далее.
[40:53.720 --> 41:03.720]  Плюс П от УК-1, плюс W от УК-1, УК, минус П от УК.
[41:04.720 --> 41:05.720]  Так.
[41:06.720 --> 41:07.720]  Ну чего это равно?
[41:08.720 --> 41:12.720]  Так, ну тут замечаем, конечно у нас в каждой примчутина вершине происходит шлеп-шлеп.
[41:15.720 --> 41:16.720]  Шлеп-шлеп.
[41:17.720 --> 41:18.720]  Шлеп.
[41:19.720 --> 41:20.720]  Шлеп.
[41:20.720 --> 41:21.720]  Вот.
[41:22.720 --> 41:24.720]  И в результате что остается?
[41:25.720 --> 41:31.720]  Остается, ну только вот потенциал в начале, минус потенциал в конце, и все что было в W от П.
[41:32.720 --> 41:42.720]  То есть я могу написать, что это равно W от РО, плюс П от У0, минус П от УК.
[41:43.720 --> 41:44.720]  Во.
[41:45.720 --> 41:46.720]  Вот такая красота.
[41:46.720 --> 41:53.720]  То есть обратите внимание, то есть получается от того, что мы ввели потенциалы, то есть
[41:54.720 --> 41:57.720]  вес пути изменился только на разность потенциалов в начале и конце.
[41:58.720 --> 42:04.720]  То есть обратите внимание, то есть это изменение никак не зависит от того, что это был за путь.
[42:05.720 --> 42:07.720]  То есть изменение вообще не зависит от промежуточной вершины.
[42:08.720 --> 42:10.720]  Но что из этого следует?
[42:10.720 --> 42:11.720]  Что из этого следует?
[42:12.720 --> 42:17.720]  Следует из этого маленькая приятная вещь, что структура кратчайших путей в графе сохранилась.
[42:18.720 --> 42:20.720]  То есть относительно этих новых весов она та же самая.
[42:23.720 --> 42:24.720]  Вот.
[42:25.720 --> 42:28.720]  То есть они там изменятся только на какую-то разность потенциалов.
[42:29.720 --> 42:32.720]  И естественно возникает такой чит.
[42:33.720 --> 42:36.720]  Ой, а может быть надо ввести просто какие-то потенциалы,
[42:37.720 --> 42:44.720]  которые сделают веса более хорошими относительно их, можно будет кратчайшие пути искать быстрее.
[42:53.720 --> 42:56.720]  Ну вот именно сам путь как последует с вершин остается тем же.
[42:57.720 --> 42:59.720]  Просто веса чуть-чуть поменялись.
[43:00.720 --> 43:01.720]  Давай.
[43:02.720 --> 43:04.720]  Проблема была с официальной фреброй.
[43:05.720 --> 43:06.720]  Чего была?
[43:07.720 --> 43:08.720]  Проблема с официальной фреброй.
[43:09.720 --> 43:13.720]  Проблема в том, что DXtra с отрезательными ребрами не работает.
[43:16.720 --> 43:17.720]  Вообще.
[43:18.720 --> 43:20.720]  Мы доказывали только в предположении, что таких игр нет.
[43:21.720 --> 43:25.720]  Ну да, а на самом деле очень просто привести куда-то пример, когда алгоритм DXtra просто завалится.
[43:25.720 --> 43:26.720]  Вот.
[43:30.720 --> 43:32.720]  Там достаточно просто.
[43:33.720 --> 43:34.720]  Вот.
[43:35.720 --> 43:37.720]  Поэтому не случайно мы там фольдом Бэллом какие-то там заморачивались.
[43:38.720 --> 43:39.720]  Вот.
[43:40.720 --> 43:41.720]  Так вот.
[43:42.720 --> 43:44.720]  Но если нам везет и нет циклов отрезательного веса.
[43:46.720 --> 43:47.720]  Вот.
[43:48.720 --> 43:49.720]  Ну на самом деле, что нам хочется сделать?
[43:50.720 --> 43:53.720]  Ну естественно у нас идея в том, что надо подогнать какой-нибудь такой потенциал,
[43:53.720 --> 43:55.720]  чтобы приведенные веса были не отрицательные.
[43:56.720 --> 43:58.720]  Потому что если у нас так получится, мы спокойно запускаем WDXtra.
[43:59.720 --> 44:00.720]  Правда?
[44:01.720 --> 44:02.720]  Ну там вот.
[44:03.720 --> 44:04.720]  С нами там со всеми любимой кучей фибоначи.
[44:05.720 --> 44:06.720]  Вот.
[44:07.720 --> 44:12.720]  Но как же нот, как бы можно ли такое сделать?
[44:13.720 --> 44:20.720]  Ну здесь знаете, я так сформулирую еще такое определение и такое утверждение.
[44:20.720 --> 44:21.720]  Значит, определение.
[44:22.720 --> 44:34.720]  Значит, потенциал P, значит W, R не отрицательный, будем его называть так.
[44:34.720 --> 44:54.720]  Если для любых там УВ верно, что приведенный вес ребра, соответственно, между УВ больше либо равен нуля.
[44:55.720 --> 45:00.720]  Это я просто написал определение.
[45:01.720 --> 45:02.720]  Вправивается.
[45:03.720 --> 45:06.720]  А существует ли такой потенциал?
[45:11.720 --> 45:12.720]  Да.
[45:13.720 --> 45:14.720]  Ну вот.
[45:15.720 --> 45:16.720]  Утверждение, просто графовое утверждение такое.
[45:17.720 --> 45:30.720]  Значит, не отрицательный потенциал существует тогда и только тогда,
[45:30.720 --> 45:40.720]  когда в графе нет циклов отрицательного веса.
[45:49.720 --> 45:51.720]  Вот такое мистическое утверждение мы сейчас докажем.
[45:52.720 --> 45:54.720]  А УВР либо это прочайший путь, да?
[45:55.720 --> 46:00.720]  Нет, W от РО это просто длина, РО это просто путь.
[46:01.720 --> 46:02.720]  W от РО это вес этого пути.
[46:03.720 --> 46:04.720]  Этого не обязательно, это кратчайшее не обязательно.
[46:05.720 --> 46:08.720]  А так W от УВ это длина ребра между УВ.
[46:09.720 --> 46:13.720]  Ну либо там, я не знаю, плюс бесконечности, если этого ребра нет.
[46:14.720 --> 46:21.720]  Вот я утверждаю, что, оказывается, если в графе нет циклов отрицательного веса, то потенциал подогнать можно.
[46:21.720 --> 46:27.720]  А если цикл отрицательного веса есть, то подогнать нельзя.
[46:28.720 --> 46:31.720]  Ну действительно, вот в эту сторону, ну тут достаточно легко.
[46:32.720 --> 46:34.720]  Если потенциал есть, то в графе нет циклов отрицательного веса, почему?
[46:35.720 --> 46:39.720]  Ну потому что легко заметить, что все пути изменились на одну и ту же константу.
[46:40.720 --> 46:44.720]  Но заметим, что если бы указ совпадало с 0, то этот путь был бы циклом,
[46:45.720 --> 46:48.720]  то заметим, что вес цикла не поменяется вообще никак.
[46:48.720 --> 46:57.720]  То есть веса циклов не меняются никак, поэтому никакой потенциал, то есть никакой потенциал не может сделать отрицательный цикл не отрицательным.
[46:58.720 --> 46:59.720]  Ну и наоборот.
[47:00.720 --> 47:01.720]  Не очень-то и хотелось.
[47:02.720 --> 47:03.720]  Ну да.
[47:04.720 --> 47:05.720]  Не, ну мало.
[47:06.720 --> 47:07.720]  В обратную сторону только не трудно.
[47:08.720 --> 47:11.720]  Вот, ну в обратную сторону да, не столько не трудно, но и конструктивно, что приятно.
[47:12.720 --> 47:16.720]  Да, просто сказать, что вот он, типа возьмем кратчайшее расстояние.
[47:16.720 --> 47:17.720]  Ой, к чему?
[47:18.720 --> 47:20.720]  Если форда Белману не получится.
[47:21.720 --> 47:22.720]  Ну да.
[47:23.720 --> 47:24.720]  Подляночка, да.
[47:25.720 --> 47:26.720]  Ну тут сразу оговоримся, да.
[47:27.720 --> 47:30.720]  Ну да, хочется конечно так и сказать, что действительно, как найти не отрицательный потенциал.
[47:31.720 --> 47:38.720]  То есть давайте один раз запустим форда Белмана и скажем действительно, что у нас наш потенциал, который мы хотим рассмотреть.
[47:39.720 --> 47:40.720]  Так давайте вот эту вот уберу.
[47:41.720 --> 47:42.720]  К чему он равен?
[47:43.720 --> 47:44.720]  Расстояние.
[47:45.720 --> 47:46.720]  Да, так и сказать.
[47:47.720 --> 47:49.720]  Что давайте возьмем там какую-то стартовую вершину.
[47:50.720 --> 47:51.720]  Пусть это вот какая-то стартовая вершина.
[47:52.720 --> 47:58.720]  И сказать, что П от В присвоить расстоянию между от стартовой вершины до В.
[47:59.720 --> 48:01.720]  Эти расстояния мы прям честным фордом Белману найдем.
[48:03.720 --> 48:08.720]  Ну потому что асимптотика, на которую мы прицеляемся, позволяет запустить один раз форда Белмана.
[48:09.720 --> 48:10.720]  Видите, да?
[48:10.720 --> 48:11.720]  Вот.
[48:12.720 --> 48:20.720]  То есть если мы докажем, что этот потенциал не отрицательный, то значит тогда мы просто алгоритм простой.
[48:21.720 --> 48:26.720]  Запускаем один раз форда Белмана, устанавливаем потенциалы и после этого запускаем В дэкстра.
[48:27.720 --> 48:30.720]  Или даже В-1 дэкстра, потому что искать кратчайшие пути от С до всех остальных уже не надо.
[48:31.720 --> 48:35.720]  Вот, ну это конечно мелкая оптимизация, конечно, но...
[48:36.720 --> 48:37.720]  Все еще оптимизация.
[48:38.720 --> 48:39.720]  Ну так-то да.
[48:41.720 --> 48:42.720]  Так вот.
[48:43.720 --> 48:45.720]  Можно один раз запустить потенциал?
[48:46.720 --> 48:47.720]  Так, да, конечно один.
[48:48.720 --> 48:52.720]  Но если бы вы запустили В раз, то нам можно было не заворачиваться с потенциалами.
[48:53.720 --> 48:54.720]  А потом вы...
[48:55.720 --> 48:57.720]  Нет, потом мы, как бы, да, потенциал нашли, все, да, один вот.
[48:58.720 --> 48:59.720]  Значит как же мы это делаем?
[49:00.720 --> 49:02.720]  Таки как же нам доказать, что этот потенциал не отрицательный?
[49:03.720 --> 49:06.720]  Ну казалось бы все достаточно просто.
[49:07.720 --> 49:08.720]  Да?
[49:08.720 --> 49:11.720]  Потому что, смотрите, вот мы пытаемся рассмотреть.
[49:12.720 --> 49:14.720]  Вот у нас есть какое-то ребро УВ с весом В.
[49:15.720 --> 49:19.720]  Да, мы хотим доказать, что П от У плюс В минус П от В.
[49:20.720 --> 49:21.720]  Да?
[49:22.720 --> 49:24.720]  Мы хотим доказать, что это больше либо равно нуля.
[49:25.720 --> 49:30.720]  Или что то же самое, что П от У плюс В больше либо равно П от В.
[49:31.720 --> 49:41.720]  Или что то же самое, расстояние от С до У плюс В больше либо равно, чем расстояние от С до В.
[49:43.720 --> 49:45.720]  Ну казалось бы это верно.
[49:46.720 --> 49:49.720]  Потому что Дист от СВ это длина кратчайшего пути между СВ.
[49:50.720 --> 49:54.720]  А Дист от СУ плюс В это длина какого-то пути от СДВ.
[49:55.720 --> 49:58.720]  Ну длина какого-то пути больше либо равно длины кратчайшего пути,
[49:58.720 --> 50:00.720]  по определению слова кратчайший.
[50:01.720 --> 50:02.720]  Вот.
[50:03.720 --> 50:04.720]  Вот.
[50:05.720 --> 50:08.720]  Но, к сожалению, такое доказательство не работает.
[50:11.720 --> 50:12.720]  А что не так?
[50:13.720 --> 50:14.720]  Вот к вам вопрос, что не так.
[50:22.720 --> 50:25.720]  Да, есть одна маленькая подлянка.
[50:26.720 --> 50:36.720]  Мы глядим, чтобы у нас потенциалы были в хорошем состоянии, что они не делали офицеривные отрицательные.
[50:37.720 --> 50:40.720]  Не, ну мы казалось бы доказали, что вроде тут все в порядке.
[50:41.720 --> 50:45.720]  То есть такие потенциалы как раз делают робро не отрицательными.
[50:48.720 --> 50:49.720]  Ну вот, казалось бы.
[50:49.720 --> 50:50.720]  Ну вот, есть одна подлянка.
[50:58.720 --> 50:59.720]  Ну да, как-то странно, да.
[51:02.720 --> 51:06.720]  Просто, да, практически сразу, но как-то вот это подлянку все проспали.
[51:11.720 --> 51:13.720]  Ну что, может, посыпнули оба вязи?
[51:13.720 --> 51:15.720]  Не, не, не, при чем тут?
[51:16.720 --> 51:17.720]  Какая нам разница?
[51:18.720 --> 51:20.720]  Мы же не пути сейчас рассматриваем.
[51:23.720 --> 51:24.720]  Вот, да.
[51:25.720 --> 51:28.720]  А что делать, если от вершины S до вершины V нет пути?
[51:28.720 --> 51:30.720]  Тут плюс бесконечность написано.
[51:32.720 --> 51:36.720]  Ну в ориентированном графе бывает такое, что между двумя вершинами нет пути?
[51:37.720 --> 51:38.720]  А с помощью этого нет пути?
[51:39.720 --> 51:40.720]  Нет пути.
[51:40.720 --> 51:42.720]  Ну бывает такое, что между двумя вершинами нет пути?
[51:43.720 --> 51:46.720]  Особенно. Да и внеориентированном тоже бывает, но там это как бы решается.
[51:46.720 --> 51:48.720]  Вот, легко. А тут бывает.
[51:49.720 --> 51:52.720]  Взять вершину, провести во всех ребра.
[51:53.720 --> 51:55.720]  Вот, да, поэтому тут, поэтому нужна оговорочка, да.
[51:56.720 --> 52:01.720]  То есть если вы просто находите, то есть, конечно, это мечта, если у вас есть такая стартовая вершина, из которой все доступно.
[52:02.720 --> 52:05.720]  Но тогда для таких графов есть специальное название, граф потока управления.
[52:06.720 --> 52:09.720]  Ну вот, так что мы на таком графе еще дерево доминаторов строить будем.
[52:10.720 --> 52:11.720]  Вот, соответственно.
[52:12.720 --> 52:13.720]  Чего?
[52:14.720 --> 52:15.720]  Да нет, там халявно, господи.
[52:16.720 --> 52:17.720]  Вот.
[52:17.720 --> 52:22.720]  Ну вот, но конкретно сейчас мы заметим, что такой стартовый, то есть такой стартовый вершина еще надо поискать.
[52:23.720 --> 52:26.720]  Я помню, как десятая параллельная куша плевалась от дерева доминаторов.
[52:27.720 --> 52:28.720]  Что-то не хочется после этого.
[52:29.720 --> 52:30.720]  Ну я не знаю, к чему она плевалась.
[52:31.720 --> 52:32.720]  Что?
[52:32.720 --> 52:33.720]  Кто плевался?
[52:33.720 --> 52:34.720]  Кто плевался?
[52:34.720 --> 52:35.720]  Когда плевался?
[52:36.720 --> 52:37.720]  По-моему, я не плевался.
[52:38.720 --> 52:40.720]  Я был в этой десятке, никто не плевался.
[52:41.720 --> 52:42.720]  Все понравилось.
[52:43.720 --> 52:44.720]  Ну как бы да.
[52:45.720 --> 52:47.720]  Мне Женя по холмам рассказывал, как он приятный.
[52:48.720 --> 52:49.720]  Да он от всего плевался.
[52:50.720 --> 52:51.720]  Ай, господи.
[52:52.720 --> 52:53.720]  Господи.
[52:54.720 --> 52:55.720]  Как можно плеваться от дерева доминаторов вообще?
[52:56.720 --> 52:57.720]  Замечательная вещь.
[52:58.720 --> 53:02.720]  Как говорится, вон там от софт хипа еще куда не шло, а тут дерево доминаторов, господи.
[53:03.720 --> 53:04.720]  Ладно.
[53:04.720 --> 53:05.720]  Нет, ну на самом деле да.
[53:06.720 --> 53:09.720]  Но, кстати, будет интеллектуальная задача, еще такая упражнение на троечку на экзамене.
[53:10.720 --> 53:13.720]  Дан граф, существует ли в нем вершина, из которой доступны все?
[53:17.720 --> 53:18.720]  Да.
[53:18.720 --> 53:19.720]  Время работы алгоритма, вот В плюс Е.
[53:20.720 --> 53:21.720]  Вот В плюс Е.
[53:22.720 --> 53:23.720]  Ага.
[53:23.720 --> 53:26.720]  Вот как за В плюс Е понять, существует ли вершина, из которой доступны все остальные?
[53:27.720 --> 53:29.720]  Доступны напрямую или в параллельную?
[53:29.720 --> 53:34.720]  Ну, в смысле, существует, то есть из этой вершины существуют пути во все остальные.
[53:35.720 --> 53:36.720]  Можно компоненты пожать.
[53:37.720 --> 53:38.720]  Ну да, да, да, да.
[53:39.720 --> 53:41.720]  Но, да, формально говоря, мы не знаем, что это такое, мы же не знаем, что такое ДФС.
[53:42.720 --> 53:48.720]  Ну да, то есть если, да, если применить компоненты сильной связности, то решение становится халявным, конечно, да.
[53:49.720 --> 53:55.720]  Потому что в вердали существует только одна компонента сильной связности, в которую не входят ребра, да, по большому счету.
[53:55.720 --> 54:02.720]  Хотя, как бы, хотя в качестве эксперимента лучше это давать задаче тем, кто не знает, что это такое, потому что, конечно, можно придумать и без этого.
[54:03.720 --> 54:04.720]  А как без этого?
[54:06.720 --> 54:17.720]  Ну, смотри, берем первую попавшуюся вершину, там, ну, по-моему, там будет работать, что типа берем первую попавшуюся вершину, запускаем ДФС из нее, помечаем все вершины, да.
[54:17.720 --> 54:24.720]  И при этом помечаем условный там какой-то источник, а эту исходную вершину помечаем как исток.
[54:25.720 --> 54:31.720]  Вот, теперь когда берем другую, берем какую-нибудь другую вершину, мы тоже запускаем из нее ДФС, но в то, что раньше не ходим.
[54:32.720 --> 54:36.720]  Но при этом если попадаем в там вот эту стартовую вершину, то мы снимаем с нее статус истока.
[54:37.720 --> 54:44.720]  Вот, ну а нашу, ну, эту вершину тоже помечаем. То есть в каждый момент времени у нас есть какие-то истоки, и мы там, если у нас есть новая вершина, мы запускаем ДФС.
[54:44.720 --> 54:50.080]  мы запускаем DFS. Получается в каждый момент времени мы храним, получается добавляем вершины и храним
[54:50.080 --> 54:53.520]  истоки или какие-то вершины мы уже объявили, что они не истоки. Ну вот, ну и все.
[54:53.520 --> 55:02.240]  Чего? Ну то есть, если в конце оказалось, что у нас есть два истока, то мы вынуждены
[55:02.240 --> 55:14.400]  заключить, что они друг из друга недоступны и до свидания. Вот, ну и хотя, ну хотя, ну да.
[55:14.400 --> 55:21.880]  Нет, ну да, там легко показать, что такой алгоритм говорит так, что просто мы в какой-то
[55:21.880 --> 55:27.880]  момент обязательно, если исток есть, то он как бы заведомо существует и тогда, собственно,
[55:27.880 --> 55:32.480]  мы на этом все закончим. Ладно, не будем заморачиваться, в принципе, выкрутиться
[55:32.480 --> 55:37.240]  можно. А в нашем случае, но в графе такое может быть, а может и не быть, потому что, мало ли,
[55:37.240 --> 55:47.440]  там может граф устроен как-нибудь вот с каким-то вот, с таким вот мерзким образом. Вот. Ну как-то
[55:47.440 --> 55:54.680]  так вот. Но что тогда делать? Как говорится, у нас нет, это, так сказать, общего истока графа,
[55:54.680 --> 56:01.840]  а мы его заведем. То есть алгоритм предполагает очень простой лайфхак. Так, вот у нас тут был
[56:01.840 --> 56:08.800]  какой-то там граф, какой-то там, что-то там у него, там ребра какие-то непонятные, там что-то бегают,
[56:08.800 --> 56:17.600]  кто-то. Вот. А мы просто берем и все. Вот. А мы берем, значит, новую вершину S, то есть она теперь
[56:17.600 --> 56:25.680]  больше не лежит в вершине V, то есть это новая вершина, из которой мы тупо проводим ребра во все
[56:25.680 --> 56:33.040]  остальные. Вот. Просто вот это вот самый такой тупой хак. Вес, вес, ну давайте по умолчанию 0,
[56:33.040 --> 56:40.200]  хотя по факту какие вы там числа нарисуете значения иметь не будет. Ну просто потенциалы
[56:40.200 --> 56:51.240]  будут немножко другие, но суть от этого не поменяется. Все. Ну и получается, да. Нет,
[56:51.240 --> 56:57.240]  не больше нуля. Ну если, потому что если тут есть отрицательные ребра, то как бы какие-то
[56:57.240 --> 57:01.880]  расстояния станут отрицательными. Ну а если нет отрицательных ребр, то могли и не заморачиваться.
[57:01.880 --> 57:09.640]  Ну тогда в принципе потенциал 0 нас вполне устроит. Вот. То есть это вот классический алгоритм
[57:09.640 --> 57:14.800]  Джонсона. Ну будем называть это классическим алгоритмом Джонсона. То есть я не могу
[57:14.800 --> 57:19.600]  гарантировать, там применял ли Джонсон именно этот хак, но что-то мне подсказывает, что там
[57:19.600 --> 57:32.080]  вряд ли у него там написано что-то более сложное. Вот. Так что вот это вот классический метод потенциалов
[57:32.080 --> 57:36.320]  Джонсона. То есть мы вот, то есть заметьте, что совсем от Форда Белмана мы не избавились,
[57:36.320 --> 57:42.480]  но мы его запустили только один раз из вот этой вершины. То есть мы как бы нашли кратчайшее
[57:42.480 --> 57:47.240]  расстояние. То есть парадокс такой, чтобы найти кратчайшее расстояние, нужно найти кратчайшее
[57:47.240 --> 57:54.120]  расстояние. Вот. Ну просто их надо один раз найти, записать их как потенциал и после этого остальные
[57:54.120 --> 58:02.000]  кратчайшие расстояния искать быстро и хорошо. Вот. Так что получается это вот такая у нас классика.
[58:02.000 --> 58:24.000]  Дальше из каждой вершины мы запускаем DXTRA на вот приведенных весах. Ну в смысле, потому что мы
[58:24.000 --> 58:27.680]  убедились, что кратчайший путь по приведенным весам это то же самое, что кратчайший путь по
[58:27.680 --> 58:37.040]  обычным. Почему? Потому что еще раз вот как бы основной утверждение говорит так, что заметим,
[58:37.040 --> 58:44.440]  что вес любого пути, прям пути изменится, но изменение этого пути зависит только от начальной
[58:44.440 --> 58:50.680]  вершины и конечной вершины. То есть вывод, если я рассмотрю два пути и первый был длиннее второго,
[58:50.680 --> 58:59.800]  то и по приведенным весам будет так же. Вот и все. Вот. И таким образом получается, что если в графе
[58:59.800 --> 59:04.440]  нам повезло нет циклов отрицательного веса, то кратчайшие пути можно найти вот за такую
[59:04.440 --> 59:13.360]  симпточку, потому что там будет VE плюс VDXTRA. DXTRA мы пишем за E плюс V log V. Ну там всякая мечта
[59:13.360 --> 59:27.200]  бывает, потому что если окажется, что веса еще и целые, то на самом деле E плюс V log V можно
[59:27.200 --> 59:36.400]  заменить на E плюс V. Вот. Ну и в принципе такой интересный факт, что если веса ребер целые не
[59:36.400 --> 59:43.880]  отрицательная и вылезает в вашу разрядность как-то адекватно, то можно найти кратчайший путь от
[59:43.880 --> 59:52.280]  вершины до всех остальных за E плюс V. Да, это называется алгоритм Торопа. Не знаю, доживем ли мы
[59:52.280 --> 59:58.000]  до этого расстрела. Я полностью не помню, там просто целый курс можно читать по этому алгоритму.
[59:58.000 --> 01:00:07.040]  Ну можно живем, я не знаю. Не, хотя вот в прошлом году в попытке дожить там просто, по-моему,
[01:00:07.040 --> 01:00:12.480]  называется ушло, по-моему, где-то полусеместра, потому что надо с нуля нам начать хотя бы с
[01:00:12.480 --> 01:00:19.000]  разминочки для дерева, с дерева вон Эмдебоса хотя бы. Там потом эти всякие Fusion 3 там начинаются,
[01:00:19.000 --> 01:00:27.720]  ну и так далее. Ну и конечно хит сезона Атомик Хип. Да, Атомик Хип. Да, знаете третий.
[01:00:27.720 --> 01:00:44.320]  В четвертом семестре, как говорится, у вас уже нет алгоритмов. Обвести. Главное, тут, правда,
[01:00:44.320 --> 01:00:50.600]  исторически сложилось, что когда-то в четвертом семестре алгоритмы даже были, но как-то называется
[01:00:50.600 --> 01:00:58.040]  так же исторически сложилось, что они были удалены, потому что, ну там, нет, там была просто идея,
[01:00:58.040 --> 01:01:01.760]  что там начиналась такая тема как параллельный алгоритм. Ну просто там, прости, исторически было,
[01:01:01.760 --> 01:01:05.520]  что когда алгоритм ИСИ, это был один такой взаимосвязанный предмет, то есть когда,
[01:01:05.520 --> 01:01:10.000]  если бы представьте, чтобы сейчас вот на лекциях рассматривали не только алгоритмы, но и С++ еще
[01:01:10.000 --> 01:01:14.480]  изучали. То есть никак вот сейчас вот вы там это на отдельных парах, там с отдельным преподавателем
[01:01:14.480 --> 01:01:18.920]  занимаетесь этим вопросом, да, вот совместно. Ну вот и как бы логично, что как бы в четвертом
[01:01:18.920 --> 01:01:23.120]  семестре висели параллельные алгоритмы. То есть вы там изучали, что там С++ и там, как устроили там
[01:01:23.120 --> 01:01:28.720]  С++ и там ко всяким мьюдексы, там треды и прочее вот обсяраться. И может там покодили что-то на эту
[01:01:28.720 --> 01:01:33.120]  тему. Вот и было тогда в четвертом семестре. В чем это параллельно вот с обычными алгоритмами.
[01:01:33.120 --> 01:01:37.760]  Но было принято, в чем тогда это тогда, тогда там была эта геометрия. Ну вот, но потом что-то
[01:01:37.760 --> 01:01:41.080]  подумали, а может лучше логично, когда в третьем семестре сделать просто плотненько алгоритм,
[01:01:41.080 --> 01:01:44.320]  а потом в четвертом семестре плотненько параллельно, чтобы как бы не переключаться.
[01:01:44.320 --> 01:01:50.080]  Вот, ну то есть, поэтому в районе где-то там 15-16 года это вот примерно так произошло.
[01:01:50.080 --> 01:01:59.240]  Вот. В каком этом году было? Ну да. Вот. Так что соответственно. Поэтому с тех пор у нас там алгоритм
[01:01:59.240 --> 01:02:05.440]  в три семестра. Вот. Так что все, да, все остальное. Ну и тем более, что там изучение этого алгоритма,
[01:02:06.120 --> 01:02:11.760]  логично скорее на какую-нибудь там это техкурс на самом деле поставить. А у вас есть еще техкурсы
[01:02:11.760 --> 01:02:23.200]  вообще? Вот это называется уходит эпоха нам. Просто в наши времена как бы мы должны были еще проходить
[01:02:23.200 --> 01:02:29.040]  там что-то в течение 4 года, мы должны были пройти еще там какие-то два семестровых или один годовой
[01:02:29.040 --> 01:02:36.640]  техкурс и два семестровых и один годовой гумкурс. Ну там типа там историю кино какую-нибудь там,
[01:02:36.640 --> 01:02:43.280]  или там еще что-нибудь в этом роде. Вот это. То есть это все по выбору. Может у вас такого,
[01:02:43.280 --> 01:02:52.960]  что у вас там все? А в чем польза проходить курс по истории кино? Не, ну тут логика исцикла,
[01:02:52.960 --> 01:02:57.600]  что как бы чтобы вы не зациклились только на вот технических вот таких предметах,
[01:02:57.600 --> 01:03:02.880]  чтобы было вот еще хоть что-то. Вот, поэтому у нас такое было. Ну прежде всего история кино
[01:03:02.880 --> 01:03:08.720]  в самом обществе была интересна на самом деле. То есть там интересный достаточно курс такой.
[01:03:14.720 --> 01:03:20.400]  Вот. Так вот, ладно, значит. Так, ну теперь финалочка по Флойду. Если вернуться к Флойду,
[01:03:21.760 --> 01:03:27.040]  то это мы все говорили о том, что делать, если циклов отрицательного веса нет. А что делать,
[01:03:27.040 --> 01:03:34.840]  если они сволочи такие есть? И вот это, и вся вот эта вот технология там Джонсона вылетает с трубу.
[01:03:34.840 --> 01:03:52.880]  Вот. Ну, тут вот остается только выяснить, а они есть или их нет? Как это сделать? Ну,
[01:03:52.960 --> 01:03:57.440]  на самом деле нет. Идея-то в общем-то простая. Тут я даже не буду предлагать там что-то. Ну,
[01:03:57.440 --> 01:04:02.000]  можем пытаться доказывать, что делать простыми средствами, но тут я уже просто скажу надежное.
[01:04:02.000 --> 01:04:08.160]  Ну, во-первых, начнем с того, что? То есть допустим цикл отрицательного веса есть,
[01:04:08.160 --> 01:04:18.080]  и мы запустили Флойда. Вот, возвращаемся к Флойду. Тогда мы можем заметить, что мы можем заметить?
[01:04:18.080 --> 01:04:24.000]  Тогда мы можем заметить, что на самом деле, если у нас есть цикл отрицательного веса,
[01:04:24.000 --> 01:04:33.320]  то скорее всего на диагонали у нас появилось что-то отличное от нулей, правда? Логично, да? Ну,
[01:04:33.320 --> 01:04:41.400]  то есть в принципе утверждение такое. Ну, я тут два скажу такое. Если после Флойда,
[01:04:41.480 --> 01:04:56.440]  значит у нас А от ВВ оказалось меньше нуля, то очевидно через вершину В проходит цикл отрицательного
[01:04:56.440 --> 01:05:08.320]  веса. Ну, доказательство очень простое. Базируется на том, что в каждый момент времени любое АИТЖТ это
[01:05:08.320 --> 01:05:15.200]  длина какого-то пути от ИДЖ, абсолютно какого-то реального. Логично, да? Ну,
[01:05:15.200 --> 01:05:20.560]  просто по индукции убеждаемся, в каждом момент времени это так. Вот. Ну, исходно АИТ, ну,
[01:05:20.560 --> 01:05:28.440]  либо плюс бесконечности из такого пути пока не нашли. Вот. Если А от ВВ меньше нуля, значит через
[01:05:28.440 --> 01:05:35.320]  В проходит цикл отрицательного веса. Но само по себе это, конечно, но с другой стороны, а если А от ВВ
[01:05:35.320 --> 01:05:42.080]  равно нулю? Верно ли, что через В не проходит цикл отрицательного веса?
[01:05:42.080 --> 01:06:02.680]  Ну, не совсем. То есть тут на самом деле что-то из цикла и да и нет.
[01:06:02.680 --> 01:06:10.440]  Ну, типа В. Потому что, если у нас ни в одной вершине нет отрицательного, то цикла отрицательного
[01:06:10.440 --> 01:06:16.560]  веса нет. А если хоть где-то есть, то там надо эту технику с проверкой достижимых видимо.
[01:06:16.560 --> 01:06:20.960]  Ну, типа того. Да, потому что практически, ну, вот. Короче, если у нас есть цикл отрицательного веса,
[01:06:20.960 --> 01:06:25.600]  хотя бы на одной его вершинке мы сделаем отрицательное. Ну, вот тут, а вот тут надо,
[01:06:25.600 --> 01:06:29.520]  тут нужна аккуратность. Потому что вот, на самом деле, вот типичная ситуация, когда через
[01:06:29.520 --> 01:06:53.000]  вершину В проходит цикл отрицательного веса. Ну, хорошо, давайте ставим. Ну, где-то да. То есть,
[01:06:53.480 --> 01:07:04.920]  скажем, утверждение, да, утверждение два. Если В лежит, значит, если через В, давайте уж в этой
[01:07:04.920 --> 01:07:12.840]  терминологии, через В, давайте я так скажу, проходит простой цикл отрицательного веса. То есть,
[01:07:12.960 --> 01:07:26.000]  разница, да, между циклом и простым циклом, да, то после Флойда тогда уже без вариантов. Значит,
[01:07:26.000 --> 01:07:54.960]  от В в меньше нуля. Вот. Ну, догадайтесь, что будет очень простой. Вот как мы будем
[01:07:55.040 --> 01:08:01.360]  пользоваться именно простотой. Ну, потому что вот рассмотрим этот цикл, вот он, и возьмем на
[01:08:01.360 --> 01:08:11.800]  его вершину с максимальным номером. Вот то самое К, да. Это вот К, это вершина с самым большим
[01:08:11.800 --> 01:08:20.240]  номером, а К' это второе повелечение вершины. Тогда я утверждаю следующее, что там, допустим,
[01:08:20.240 --> 01:08:29.560]  перед К' итерации Флойда вот А от К' будет меньше либо равно длине вот этого пути. Согласны? Ну,
[01:08:29.560 --> 01:08:36.480]  это какой-то простой путь, где промежуточные вершины все там меньше К'. Вот. Ну, тогда,
[01:08:36.480 --> 01:08:41.080]  смотрите, то есть тут А будет вот меньше либо равно вот этого, и тут А будет меньше либо равна
[01:08:41.080 --> 01:08:48.600]  этого, да. Тогда получается, на К' итерации мы попытаемся обновить АКТК через вот это плюс
[01:08:48.920 --> 01:08:58.040]  и получится меньше нуля. Понимаете, да? То есть получается, что либо на К' итерации АКТК станет
[01:08:58.040 --> 01:09:04.320]  меньше нуля, либо оно уже было раньше. Ну, короче говоря, не позже, чем на К' итерации будет
[01:09:04.320 --> 01:09:22.800]  идентифицирован. Вот. Вот таким образом мы доказали утверждение. Так. Так. Опять я вас где-то обманул, да?
[01:09:34.320 --> 01:09:43.360]  Ну, в таком виде, да, я вас, конечно, обманул. А то что-то вы спите, что-то вас слишком легко
[01:09:43.360 --> 01:09:53.600]  стало обмануть. Нет, потому что в таком виде я доказал не то, что через любую вершину будет
[01:09:53.600 --> 01:09:59.600]  АВВ больше нуля, а что найдется вершина вот этой максимальной точно будет АКК будет меньше нуля.
[01:09:59.600 --> 01:10:04.240]  Нет, это пока тоже не понятно.
[01:10:04.240 --> 01:10:22.320]  Да. И показали, что на К' итерации АКТК точно станет меньше нуля, если она еще не было раньше.
[01:10:22.320 --> 01:10:37.680]  Перед К' итерации АКК меньше либо равно вот этого пути точно.
[01:10:37.680 --> 01:10:51.520]  Ну, да. Ну, правильно. Нет, ну на самом деле да. Правда, это доказательство придет для всех вершин,
[01:10:51.520 --> 01:10:55.520]  кроме самой К, а вот для самой К мы сейчас рассмотрели. Да. Ну, по большому счету да.
[01:10:55.520 --> 01:11:02.480]  Да. Общая суть такая, ну вот давайте значит еще раз. Значит да. Ну, давайте так. Пусть у нас К
[01:11:02.480 --> 01:11:07.600]  это самая большая вершина, сейчас докажем для нее. Чуть позже докажем для всех остальных. Так. Ну,
[01:11:07.600 --> 01:11:13.560]  опять ладно. Все базируется на таком важном утверждении, да? Смотрите, то есть да, у нас
[01:11:13.560 --> 01:11:18.200]  было утверждение, когда мы искали качественные пути просто в графе без циклов отрицательного веса,
[01:11:18.200 --> 01:11:25.880]  да? Его можно формулировать так. Значит утверждение. Там после какой-то там К' итерации,
[01:11:25.880 --> 01:11:44.280]  К' итерации значит АИТ, меньше либо равно длины, там вес, веса лучше говорить, да, веса любого
[01:11:44.280 --> 01:12:06.360]  простого пути, давайте простого пути, пути между ИЖи, проходящего, проходящего через,
[01:12:06.360 --> 01:12:25.800]  там, точнее не через, а только через. Значит, что там? Тьфу, бро, ой, все, меня уже глючит. Один,
[01:12:25.800 --> 01:12:36.840]  два и так далее. Ну, доказательства тоже, ну, доказательства тоже по индукции там тоже самое.
[01:12:36.840 --> 01:12:40.920]  На этот раз, да, пища точно не превосходит в том, что циклы отрицательного веса могут
[01:12:40.920 --> 01:12:56.960]  свою там, хрен там всегда вставить. Вот, такое вот утверждение. Вот, то есть тогда получается
[01:12:56.960 --> 01:13:03.040]  следующее. Вот рассмотрим наш цикл отрицательного веса, простой, и рассмотрим на нем самую большую
[01:13:03.040 --> 01:13:12.720]  вершину К. А теперь рассмотрим вторую по величине вершину на нем, пусть это К штрих. Тогда заметим,
[01:13:12.720 --> 01:13:22.080]  что перед К штрихтой итерацией, перед К штрихтой итерацией А от К К штрихтой будет, не будет
[01:13:22.080 --> 01:13:31.880]  превосходить длины вот этого пути. Ну, потому что тут все вершины меньше, чем К штрих.
[01:13:31.880 --> 01:13:50.680]  Ну, поэтому утверждение. Вот. Ну и А от К штрихка не будет превосходить длины вот этого пути. Вот.
[01:13:50.680 --> 01:13:59.080]  Тогда это означает, что на К штрихтой операции мы попытаемся обновить А КТ КТ через А от К К
[01:13:59.480 --> 01:14:07.200]  плюс А К штрихка, то есть вот что не происходит, вот это плюс вот это, что меньше нуля. Все. Значит,
[01:14:07.200 --> 01:14:13.280]  получается на К штрихтой итерации это будет, то есть на К штрихтой итерации А от К К уже точно
[01:14:13.280 --> 01:14:26.440]  станет меньше нуля. Вот. Вот это на К штрихтой итерации. Вот. А если мы рассмотрим любую другую
[01:14:26.440 --> 01:14:30.280]  вершину В на этом цикле, то заметим, что аналогичным образом мы можем показать,
[01:14:30.280 --> 01:14:35.960]  что не позже, чем на К штрихтой итерации, то есть не позже, чем уже на К штрихтой итерации,
[01:14:35.960 --> 01:14:42.440]  тоже у нас АВВТ станет меньше нуля. Потому что на А от К К мы точно попытаемся обновиться чем-то
[01:14:42.440 --> 01:15:02.120]  не превосходящим вот это плюс вот это. Да, они точно, они точно, у них это точно сработает. Да,
[01:15:02.120 --> 01:15:05.880]  вот этот пример показывает, что если оно лежит просто на каком-то цикле отрицательном, то есть оно
[01:15:05.880 --> 01:15:11.320]  там, так сказать, лежит в одной компоненте сильной связности с циклом отрицательного веса,
[01:15:11.320 --> 01:15:15.880]  простым, но тем, что мы интуитивно произвиваем под циклом отрицательного веса, то, конечно,
[01:15:15.880 --> 01:15:22.200]  не факт. Потому что здесь вот это вот, то есть, ну как бы, то есть сильно вряд ли тут АВВ будет
[01:15:22.200 --> 01:15:28.560]  что-то отличное от нуля. Хотя на самом деле накрутить тут, накручивается это быстро, чем кажется.
[01:15:28.560 --> 01:15:34.880]  Ну хотя ладно, давайте добьем. То есть хорошо. Вот. То есть как теперь найти миную нодку? Как
[01:15:34.880 --> 01:15:39.800] -то теперь идентифицировать минус бесконечности. Ну то есть логично, что после того, как мы запустим
[01:15:39.800 --> 01:15:46.400]  Флойда, то есть у движения такое, что если между вершинами есть кратчайший путь, то он будет
[01:15:46.400 --> 01:15:53.400]  найден. Понимаете, да? Но как теперь понять, кратчайший путь существует или может быть там минус бесконечность?
[01:15:53.400 --> 01:16:05.960]  Ну да. Потому что мы же помним, мы в прошлый раз доказывали, что между двумя вершинами путь
[01:16:05.960 --> 01:16:13.720]  минус бесконечность. То есть можно накрутить сколь угодно отрицательный путь тогда и только тогда,
[01:16:13.720 --> 01:16:21.800]  когда существует цикл отрицательного веса, через который можно из ИВЖи пройти. Понимаете, да? Но
[01:16:21.800 --> 01:16:30.000]  как теперь понять, можно ли так сделать? Да очень просто. Надо просто перебрать. Берем ИЖи, у нас же
[01:16:30.000 --> 01:16:37.080]  есть, у АТВ куб у нас есть, раз мы только что Флойд запустили, да? Так давайте для ИЖи переберем все
[01:16:37.080 --> 01:16:45.280]  вершины В, посмотрим все вершины В, у которых АТВ меньше нуля и посмотрим, можно ли пройти от ИДЖи
[01:16:45.280 --> 01:16:52.320]  через вершину В. Вот как заметим, что Флойд нам уже дает возможность хотя бы понять, можно ли пройти
[01:16:52.320 --> 01:16:57.440]  из вершины И в вершину В, правда? Ну просто там написано плюс бесконечности или что-то все-таки мы
[01:16:57.440 --> 01:17:04.240]  нашли. То есть даже ДФС-ов лишь их запускать не надо, тем более, что мы не знаем, что это такое, да? Вот.
[01:17:04.240 --> 01:17:10.240]  Вот, значит просто, значит, перебрали. Если нашлась такая вершина, значит автоматически
[01:17:10.240 --> 01:17:20.720]  минус бесконечность. А если не нашлась, то, ну значит, корчайший путь найден. Вот, понятно?
[01:17:20.720 --> 01:17:31.200]  Вот. Ну и останется только отдельная песенка, конечно, что если корчайший путь есть, то давайте
[01:17:31.200 --> 01:17:36.480]  его восстановим. Но здесь остается в качестве упражнения доказать, что там ничего вроде как
[01:17:36.480 --> 01:17:45.080]  с предыдущего доказательства особо не поменялось. Вот, логично, да? Правда останется, знаете какая,
[01:17:45.080 --> 01:17:51.240]  останется еще, конечно, вот эта веселая задачка. А как бы нам восстановить цикл отрицательного веса?
[01:17:51.240 --> 01:18:02.640]  Ну какой, ну да, ну хотя бы какой-нибудь цикл отрицательного веса, там, допустим,
[01:18:02.640 --> 01:18:09.760]  ну простой не факт, что существует через любую вершину, да? Хотя, да, задача там восстановить.
[01:18:09.760 --> 01:18:14.160]  Ну, если мы восстановим какой-нибудь цикл отрицательного веса, то, наверное, цикл простой мы
[01:18:14.160 --> 01:18:19.240]  тоже восстановим, просто удаляя дубликаты. Ну, то есть, помните, да, у нас уже было...
[01:18:19.240 --> 01:18:24.720]  Просто простой легче восстановить. Да, ой ли.
[01:18:24.720 --> 01:18:30.640]  Парень, ну, чтобы найти просто цикл отрицательного веса, давайте запустим ДФС из произвольной вершины.
[01:18:30.640 --> 01:18:37.360]  Вот, теперь мы идем-идем, если в какой-то момент, и помним текущий вес пути, если мы в какой-то
[01:18:37.360 --> 01:18:44.240]  момент нашли, как бы, обратный ребро кладет вершинку, до которой вес куча пути.
[01:18:44.240 --> 01:18:49.480]  Ну, это супер, только почему найдем?
[01:18:49.480 --> 01:18:59.320]  Парень, подверждается, что раз, если у нас есть простой цикл отрицательного веса, то мы его найдем.
[01:18:59.320 --> 01:19:03.520]  Да, это вот почему?
[01:19:03.520 --> 01:19:17.160]  Ну, хорошо, если у нас есть простой цикл отрицательного веса, значит, то существует обратный ребро из последней вершины первую.
[01:19:17.160 --> 01:19:23.440]  Ну и что? А может, мы до этой вершины ДФС дошел за какой-то более нетривиальный путь, какой-то более положительный?
[01:19:33.520 --> 01:20:00.280]  Ну, я боюсь, так придется как бы ДФС запускать такой, без юзидов, а это будет так себе удовольствие.
[01:20:00.280 --> 01:20:22.880]  Вот, ну, на самом деле, так, ладно. Так, сколько там сейчас времени? Ой-ой-ой, ой-ой-ой.
[01:20:22.880 --> 01:20:35.920]  Нет, ну, на самом деле можно делать так. Лучше тогда, то есть, на самом деле, да, один из красивых методов восстановления такого цикла, это на самом деле такой.
[01:20:35.920 --> 01:20:42.480]  А давайте просто найдем первое К, после которого, на самом деле, вот там всякие вот эти меньше нуля появились.
[01:20:42.480 --> 01:20:51.560]  То есть, на какой-то катаитерации впервые появились какие-то АВВ, которые меньше нуля.
[01:20:51.560 --> 01:21:01.520]  Тогда я утверждаю следующее, что если оставить только первое К минус одну вершину, то там циклов отрицательного веса не было, правда?
[01:21:02.480 --> 01:21:04.040]  Ну, тогда я утверждаю следующее.
[01:21:05.360 --> 01:21:18.800]  Так, ну, тогда я утверждаю следующее, что те пути, которые мы там нашли, то есть, например, за первое К минус одну итерацию мы восстановили какие-то корректные пути, проходящие только через там вершины 1, 2 и так далее, К минус 1.
[01:21:18.800 --> 01:21:22.560]  Их можно даже восстановить там тем механизмом, который у нас был.
[01:21:25.640 --> 01:21:26.520]  Вот, понятно, да?
[01:21:27.520 --> 01:21:30.520]  Вот, и тогда катаитерацию можно делать аккуратно.
[01:21:30.520 --> 01:21:41.520]  То есть, говорить, что если сначала пробежаться и убедиться, что если появляются всякие меньше нуля на какой-то вершине В, значит, тогда у нас А от ВКТ плюс А от КВТ стало меньше нуля.
[01:21:41.520 --> 01:21:45.520]  Ну, так давайте восстановим путь от ВК и восстановим путь от КВ, и вот вам цикл отрицательного веса.
[01:21:45.520 --> 01:22:09.520]  Ну, потому что утверждение такое, перед катаитерацией у нас там написаны корректные кратчайшие пути, которые в качестве промежуточных используют только там первое К минус одну вершины.
[01:22:09.520 --> 01:22:21.520]  Вот, можно попробовать даже прям это усилить, прям так утверждать, что там будет написан кратчайший путь среди тех, которые проходят в качестве промежуточных через вот эту вот.
[01:22:21.520 --> 01:22:23.520]  Понимаете, да?
[01:22:23.520 --> 01:22:37.520]  Вот, да, причем утверждается, что действительно, причем действительно несложно показать, что, да, действительно там кратчайшие пути все реально существуют.
[01:22:37.520 --> 01:22:50.520]  Ну, потому что если существует кратчайший путь, на котором все вершины меньше К, кроме может быть одной, то тогда у этой одной точно, значит, после К минус одной итерации будет АВВ меньше нуля.
[01:22:50.520 --> 01:22:53.520]  Ну, собственно, вот тем же методом доказываем.
[01:22:53.520 --> 01:22:55.520]  Понятно, да?
[01:22:55.520 --> 01:22:57.520]  Вот.
[01:22:57.520 --> 01:22:59.520]  К чему это нас приводит?
[01:22:59.520 --> 01:23:01.520]  Вот.
[01:23:01.520 --> 01:23:16.520]  Ну, тогда это означает, что, ну, вот, ну, а если там пути существуют, найденные прям там, найденные в точности они, то с помощью порешек можно эти пути еще и восстанавливать.
[01:23:16.520 --> 01:23:20.520]  Ну, естественно, порешки на тот момент перед Катой итерации.
[01:23:20.520 --> 01:23:32.520]  То есть фишка будет в том, что просто надо, если вы хотите выстоять цикл отрицательного веса, то надо перед тем, перед тем, как запускать Катую итерацию, надо просто проверить, а появятся ли вот такие спецэффекты.
[01:23:32.520 --> 01:23:35.520]  Это мы таким образом ищем какой-то цикл?
[01:23:35.520 --> 01:23:36.520]  Да.
[01:23:36.520 --> 01:23:40.520]  То есть цикл через заданную вершину мы не можем найти?
[01:23:40.520 --> 01:23:46.520]  Ну, цикл через заданную вершину таким образом, конечно, не найдем, но просто не факт, что он существует.
[01:23:46.520 --> 01:23:52.520]  Я имею в виду, что если мы в конце выяснили, что через эту вершину проходит цикл отрицательного веса, можно ли будет его найти?
[01:23:52.520 --> 01:24:15.520]  Так, ну я бы так сказал, слет у меня, конечно, алгоритм только с компонентами сильной связности.
[01:24:15.520 --> 01:24:25.520]  Ну там идея такая, давайте найдем компоненты сильной связности и выкинем, оставим только их, то есть выкинем все ребра, которые соединяют компоненты сильной связности.
[01:24:25.520 --> 01:24:39.520]  Вот, запустим Флойда, тогда заметим, что по сути в каждой компоненте сильной связности у нас Флойд работает независимо, и в каждой из них мы можем независимо вот указанным ранее образом найти цикл отрицательного веса какой-нибудь, если он есть.
[01:24:40.520 --> 01:24:58.520]  Тогда, если у вас две вершины лежат в одной компоненте сильной связности с таким циклом отрицательного веса, ну если вершина лежит в одной компоненте сильной связности с циклом отрицательного веса, то тогда цикл отрицательного веса, проходящим через нее, будет работать по принципу идем до этого цикла, проходимся по нему, выходим из этого цикла.
[01:24:58.520 --> 01:25:05.520]  То есть вот пообщий алгоритм можно такой придумать, но для этого нужно найти компоненты сильной связности.
[01:25:06.520 --> 01:25:10.520]  Так, хотя ладно, в всякий случай, кто знает, что такое сильная связность?
[01:25:11.520 --> 01:25:14.520]  Ну да, сложно было предполагать что-то иное, да, конечно.
[01:25:15.520 --> 01:25:18.520]  Так, ладно, кто знает алгоритм Косараю?
[01:25:22.520 --> 01:25:26.520]  Ну, кто знает, как искать компоненты сильной связности с помощью двух ДФСов?
[01:25:27.520 --> 01:25:29.520]  Никто не знает, как это называется.
[01:25:29.520 --> 01:25:31.520]  Нет, это алгоритм Косараю называется, хорошо.
[01:25:32.520 --> 01:25:35.520]  А кто знает, как искать компоненты сильной связности одним ДФСом?
[01:25:36.520 --> 01:25:37.520]  Зачем?
[01:25:37.520 --> 01:25:38.520]  Надо.
[01:25:40.520 --> 01:25:42.520]  Ну алгоритм Тарьяна, да.
[01:25:43.520 --> 01:25:47.520]  Нет, там просто фишка заключается в том, что у Тарьяна есть общая технология,
[01:25:47.520 --> 01:25:51.520]  которая просто единым ДФСом ищет и компоненты вершины двух связностей,
[01:25:51.520 --> 01:25:54.520]  и компоненты реберных двух связностей, и компоненты сильной связностей.
[01:25:54.520 --> 01:25:58.520]  Вот, правда там, но мы это все скоро обязательно увидим.
[01:26:02.520 --> 01:26:04.520]  Так что да, это нас еще ждет.
[01:26:04.520 --> 01:26:06.520]  Но там красивый алгоритм, конечно.
[01:26:08.520 --> 01:26:10.520]  Ну, возможно, возможно.
[01:26:14.520 --> 01:26:16.520]  Ну ладно, в любом случае о Флойде я вроде сказал все,
[01:26:16.520 --> 01:26:19.520]  что мы вроде обсудили все, что хотелось обсудить о Флойде.
[01:26:20.520 --> 01:26:23.520]  Вот, ладно, поэтому думаю пришло время устроить перерыв.
[01:26:24.520 --> 01:26:26.520]  Вот, после которого можно будет переходить к перерывам.
[01:26:48.520 --> 01:26:50.520]  Да вот, ладно, итак.
[01:26:51.520 --> 01:26:56.520]  Да, едва ли не четыре дня, и все еще меньше осталось от эпохального события.
[01:26:57.520 --> 01:27:00.520]  Называется начало матча, в результате которого Макнус Карлсон
[01:27:00.520 --> 01:27:03.520]  окончательно перестанет быть чемпионом мира по шахматам.
[01:27:05.520 --> 01:27:06.520]  Вот.
[01:27:08.520 --> 01:27:10.520]  Он отказался в нем участвовать.
[01:27:11.520 --> 01:27:13.520]  Да, он отказался защищать.
[01:27:13.520 --> 01:27:16.520]  Поэтому в этом матче сыграют госмейстер из России Ян Непомнищий
[01:27:16.520 --> 01:27:18.520]  и госмейстер из Китая Дин Лежень.
[01:27:20.520 --> 01:27:21.520]  Вот.
[01:27:21.520 --> 01:27:22.520]  Так что это называется...
[01:27:25.520 --> 01:27:26.520]  Потому что скучно.
[01:27:43.520 --> 01:27:44.520]  Почему еще надо?
[01:27:44.520 --> 01:27:45.520]  Нет, это хуже.
[01:27:45.520 --> 01:27:46.520]  Во-первых, несколько месяцев.
[01:27:47.520 --> 01:27:49.520]  Подготовка к конкретному сопернику, там куча.
[01:27:57.520 --> 01:27:59.520]  Это очень ответственность к этому всему еще.
[01:28:16.520 --> 01:28:19.520]  Играть с тобой в итальянку, ну и ты сидишь и грустишь.
[01:28:19.520 --> 01:28:20.520]  Да.
[01:28:20.520 --> 01:28:21.520]  Вот, ну там условно.
[01:28:22.520 --> 01:28:24.520]  Поэтому, ну нет, там больше была проблема, что да,
[01:28:24.520 --> 01:28:27.520]  это будет с одним и тем же противником, причем самое,
[01:28:27.520 --> 01:28:30.520]  причем если там в остальных партиях можно там пытаться играть на помидоре,
[01:28:30.520 --> 01:28:34.520]  то тут главное не проиграть, вот не проиграть.
[01:28:34.520 --> 01:28:37.520]  Итак, двенадцать раз.
[01:28:38.520 --> 01:28:39.520]  Ну, примерно такие.
[01:28:39.520 --> 01:28:41.520]  Ну, скорее всего, и «Break it», «Mashot».
[01:28:46.520 --> 01:28:48.520]  Ну, как сказать, по-разному.
[01:28:48.520 --> 01:28:49.520]  Ну, почему?
[01:28:49.520 --> 01:28:51.520]  В зависимости от вас в каком матче было.
[01:28:51.520 --> 01:28:54.520]  Потому что в матче с Каруаной вообще закончился с счетом 0-0.
[01:28:55.520 --> 01:28:58.520]  Вот знаете, я не люблю этот шахматный счет, как говорят, что там, типа,
[01:28:58.520 --> 01:29:01.520]  ничья это пол очка, я люблю вот, честно, по победам.
[01:29:01.520 --> 01:29:05.520]  То есть как-то любой ничейный двенадцатий матч в поединках
[01:29:05.520 --> 01:29:06.520]  закончится с счетом 6-6.
[01:29:06.520 --> 01:29:09.520]  Честно говоря, вот матч с Каруаной закончился с 0-0.
[01:29:09.520 --> 01:29:13.520]  А там, матч там, скажем, между Александром Горячиком и Дзюем Вензюем
[01:29:13.520 --> 01:29:15.520]  закончился с счетом 3-3.
[01:29:16.520 --> 01:29:17.520]  Двенадцать?
[01:29:17.520 --> 01:29:19.520]  А, ну сейчас может уже четырнадцать.
[01:29:19.520 --> 01:29:23.520]  Не помню, чем было двенадцать, потому что последние два можно было уже не играть.
[01:29:23.520 --> 01:29:26.520]  Ну да, потому что не помню, проиграл один раз, а потом слился.
[01:29:26.520 --> 01:29:28.520]  Да, это мы помним.
[01:29:28.520 --> 01:29:30.520]  Он чуть не выиграл три раза, по-моему.
[01:29:30.520 --> 01:29:31.520]  Было-было.
[01:29:31.520 --> 01:29:34.520]  Но ладно, сегодня мы убедимся, что на самом деле это все происходит
[01:29:34.520 --> 01:29:36.520]  из-за того, что люди просто очень тупые,
[01:29:37.520 --> 01:29:40.520]  потому что на самом деле в шахматах есть выигрышная стратегия.
[01:29:40.520 --> 01:29:42.520]  И с айDieКОм?
[01:29:42.520 --> 01:29:44.520]  Нет, или ничейная стратегия.
[01:29:44.520 --> 01:29:46.520]  Ну в плане, что шахматы можно свести к игры и посчитать?
[01:29:46.520 --> 01:30:03.520]  Ну потому-что да, потому что на самом деле, да, утверждение такое,
[01:30:03.520 --> 01:30:07.360]  Либо это ничейная игра, что это означает?
[01:30:07.360 --> 01:30:10.920]  Это означает, что каждый из игроков, что белый, что
[01:30:10.920 --> 01:30:14.400]  черный, может играть так, что гарантирует себе не
[01:30:14.400 --> 01:30:16.400]  проигрыш при любой игре противника.
[01:30:16.400 --> 01:30:20.720]  Может выигрыш, может ничья, но уж гарантирует, что
[01:30:20.720 --> 01:30:21.720]  он не проиграет.
[01:30:21.720 --> 01:30:22.720]  Но каждый независим.
[01:30:22.720 --> 01:30:26.520]  То есть верна какая-то из этих трех опций.
[01:30:26.520 --> 01:30:32.560]  Человек, кто проводит турниры по шахматам, потому что
[01:30:32.560 --> 01:30:34.840]  пока она не знает, какая из этих опций верна.
[01:30:34.840 --> 01:30:38.240]  То есть человечество, конечно, сильно подозревает, что
[01:30:38.240 --> 01:30:39.240]  шахма-то игра ничейная.
[01:30:39.240 --> 01:30:40.240]  Наверное.
[01:30:40.240 --> 01:30:41.240]  Все-таки.
[01:30:41.240 --> 01:30:42.240]  Есть такое.
[01:30:42.240 --> 01:30:45.240]  Если бы поняли, то все равно выиграли.
[01:30:45.240 --> 01:30:46.240]  Нет.
[01:30:46.240 --> 01:30:47.240]  Почему нет?
[01:30:47.240 --> 01:30:48.240]  Как сказать?
[01:30:48.240 --> 01:30:50.920]  Если бы была понята выигрышная стратегия, то как бы все.
[01:30:50.920 --> 01:30:52.680]  Каспаров это называют судный день шахмат.
[01:30:52.680 --> 01:30:58.680]  Если шахматы будут решены как математическая задача,
[01:30:58.680 --> 01:31:00.360]  то, естественно, турниры прекратятся.
[01:31:01.160 --> 01:31:02.160]  Шашки же разрешены.
[01:31:02.160 --> 01:31:05.160]  Они не перестанут играть.
[01:31:05.160 --> 01:31:06.160]  Чтобы залучить.
[01:31:06.160 --> 01:31:07.160]  Нет.
[01:31:07.160 --> 01:31:08.160]  А что в шахматах?
[01:31:08.160 --> 01:31:09.160]  Нет.
[01:31:09.160 --> 01:31:10.160]  Вопрос, какие еще шашки?
[01:31:10.160 --> 01:31:11.160]  Шашки решили.
[01:31:11.160 --> 01:31:12.160]  Нет.
[01:31:12.160 --> 01:31:13.160]  Если...
[01:31:13.160 --> 01:31:14.160]  Ну, во-первых, какие шашки?
[01:31:14.160 --> 01:31:15.160]  Шашек много.
[01:31:15.160 --> 01:31:17.360]  Потому что есть русские шашки, в которых дамка ходит
[01:31:17.360 --> 01:31:20.400]  какое-то там произвольное количество полей.
[01:31:20.400 --> 01:31:23.160]  Есть американские шашки, где дамка ходит тоже на
[01:31:23.160 --> 01:31:24.160]  одну клеточку.
[01:31:24.160 --> 01:31:26.360]  Только единственное, что она может ходить назад.
[01:31:26.360 --> 01:31:27.720]  И кушать там назад нельзя.
[01:31:27.720 --> 01:31:29.360]  По-моему, не эти шашки были решены.
[01:31:30.360 --> 01:31:31.360]  Это два.
[01:31:31.360 --> 01:31:34.360]  Не говоря уже о том, что классическими сейчас являются шашками на доске
[01:31:34.360 --> 01:31:36.360]  10 на 10, а не 8 на 8.
[01:31:36.360 --> 01:31:38.360]  Так что тут еще такие оговорчики есть.
[01:31:39.360 --> 01:31:40.360]  Вот.
[01:31:41.360 --> 01:31:43.360]  Так что в этом плане, конечно, вопрос.
[01:31:44.360 --> 01:31:45.360]  Вот.
[01:31:45.360 --> 01:31:48.360]  Ну, собственно, давайте вот сегодня и в следующий
[01:31:48.360 --> 01:31:51.360]  раз будем изучать сейчас основы всего этого.
[01:31:52.360 --> 01:31:53.360]  Вот возникает вопрос.
[01:31:53.360 --> 01:31:56.360]  А что для нас, собственно, игра?
[01:31:59.360 --> 01:32:00.360]  Так, что там за обсуждение?
[01:32:00.360 --> 01:32:01.360]  Вот давайте сразу.
[01:32:01.360 --> 01:32:03.360]  Спросите, что такое игра?
[01:32:08.360 --> 01:32:11.360]  Ну, скорее всего, это какая-нибудь игра в состоянии.
[01:32:11.360 --> 01:32:12.360]  Ну, да.
[01:32:12.360 --> 01:32:13.360]  Ну, по большому счету, да.
[01:32:13.360 --> 01:32:16.360]  Мы будем рассматривать такой предельно простой случай.
[01:32:16.360 --> 01:32:18.360]  Значит, какой?
[01:32:19.360 --> 01:32:22.360]  Что у нас, значит, просто рассматривает просто предельно
[01:32:22.360 --> 01:32:23.360]  такую тупую игру.
[01:32:23.360 --> 01:32:24.360]  Есть граф?
[01:32:24.360 --> 01:32:26.360]  Ориентированный?
[01:32:26.360 --> 01:32:28.360]  Возможно, циклический.
[01:32:28.360 --> 01:32:29.360]  Возможно, нет.
[01:32:29.360 --> 01:32:30.360]  Как повезет.
[01:32:33.360 --> 01:32:34.360]  Вот.
[01:32:34.360 --> 01:32:36.360]  И есть фишка.
[01:32:36.360 --> 01:32:38.360]  Вот фишка стоит в какой-то вершине.
[01:32:39.360 --> 01:32:40.360]  Играют два игрока.
[01:32:41.360 --> 01:32:45.360]  Ход каждого игрока заключается в том, чтобы выбрать ребро.
[01:32:45.360 --> 01:32:46.360]  Ну, ладно, давайте так.
[01:32:46.360 --> 01:32:49.360]  Выбрать, то есть сдвинуть фишку из этой вершины по
[01:32:49.360 --> 01:32:51.360]  какому-то торчащему из этой вершины ребро.
[01:32:51.360 --> 01:32:53.360]  Какому выбирает сам игрок?
[01:32:53.360 --> 01:32:56.360]  Проигрывает тот, кто не может сделать ход.
[01:32:56.360 --> 01:32:59.360]  То есть если вот никакому надо сделать ход, а он находится
[01:32:59.360 --> 01:33:02.360]  в вершине, из которой ребро не торчит, значит он проиграл,
[01:33:02.360 --> 01:33:03.360]  а противник выиграл.
[01:33:04.360 --> 01:33:07.360]  Если противники, но если игроки ходят до бесконечности,
[01:33:07.360 --> 01:33:08.360]  то объявляется ничья.
[01:33:09.360 --> 01:33:13.360]  То есть вот такую базовую игру мы будем рассматривать.
[01:33:15.360 --> 01:33:16.360]  Спокойно.
[01:33:16.360 --> 01:33:17.360]  Вот.
[01:33:17.360 --> 01:33:19.360]  Ну, здесь надо, конечно, оговориться.
[01:33:19.360 --> 01:33:22.360]  То есть насколько всеобъемлющее такое определение?
[01:33:24.360 --> 01:33:25.360]  Нет, то я...
[01:33:25.360 --> 01:33:26.360]  Нет, вопрос не в этом.
[01:33:26.360 --> 01:33:28.360]  Просто тут как бы хочется оговорить.
[01:33:28.360 --> 01:33:31.360]  Да, то есть какие игры мы тем самым покрываем?
[01:33:31.360 --> 01:33:32.360]  Какие нет?
[01:33:32.360 --> 01:33:33.360]  Потому что такая игра называется...
[01:33:34.360 --> 01:33:37.360]  Ну вот, то есть такие игры, кстати, еще называются равноправными.
[01:33:40.360 --> 01:33:43.360]  Ну, в том плане, что какие ходы вы можете сделать,
[01:33:43.360 --> 01:33:47.360]  зависит только от того, в какой вершине вы находитесь,
[01:33:47.360 --> 01:33:48.360]  но не от того...
[01:33:49.360 --> 01:33:51.360]  Но не от того, собственно, какой выиграл.
[01:33:52.360 --> 01:33:54.360]  Честно, ведь если у нас граф удольный, то...
[01:33:57.360 --> 01:33:59.360]  Если у нас игра зависит от того, какой мы игрок,
[01:33:59.360 --> 01:34:02.360]  то это просто можно изобретать такой же игрой.
[01:34:03.360 --> 01:34:04.360]  Ну да.
[01:34:04.360 --> 01:34:06.360]  Заметим, что да, если у нас в каждой вершине сказано,
[01:34:06.360 --> 01:34:09.360]  допустим, еще что, если вы белый, то вы ходите так,
[01:34:09.360 --> 01:34:11.360]  а если к черной, то вы ходите иначе,
[01:34:11.360 --> 01:34:13.360]  то, конечно, это тоже равноправно и легко сводится
[01:34:13.360 --> 01:34:15.360]  просто за удвоение графа.
[01:34:15.360 --> 01:34:16.360]  Так, тут надо подробнее говорить.
[01:34:17.360 --> 01:34:20.360]  Если у нас будет сумма нескольких игр, то это уже...
[01:34:20.360 --> 01:34:23.360]  Нет, ну да, живем, спокойно.
[01:34:24.360 --> 01:34:26.360]  Тут скорее проблема, что полная информация в игре должна быть.
[01:34:26.360 --> 01:34:27.360]  Ну да.
[01:34:27.360 --> 01:34:30.360]  То есть, конечно, тут это еще игра, конечно, еще с полной информацией.
[01:34:31.360 --> 01:34:32.360]  Вот.
[01:34:33.360 --> 01:34:34.360]  Не, почему?
[01:34:34.360 --> 01:34:36.360]  Нет, шахматы вполне себе вписываются.
[01:34:36.360 --> 01:34:40.360]  Просто потому, что в шахматах конечное число позиций.
[01:34:41.360 --> 01:34:43.360]  Да, но есть нюанс.
[01:34:43.360 --> 01:34:44.360]  Какой?
[01:34:45.360 --> 01:34:47.360]  Что это конечное число,
[01:34:47.360 --> 01:34:52.360]  мы не сможем, скорее всего, еще очень-очень долго в компьютере представлять.
[01:34:53.360 --> 01:34:54.360]  Ну да.
[01:34:55.360 --> 01:34:56.360]  Нет, это да.
[01:34:57.360 --> 01:34:59.360]  Но с другой стороны, да, заметьте, что шахматы просто да.
[01:34:59.360 --> 01:35:03.360]  Ну правда, конечно, надо договориться, что тут придется еще в понятие позиций
[01:35:03.360 --> 01:35:05.360]  еще говорить не только позиции фигур на доске,
[01:35:05.360 --> 01:35:09.360]  но это позиция, когда последний раз ходила не пешка там или там,
[01:35:09.360 --> 01:35:12.360]  или сколько раз уже эта позиция встречалась ранее, да?
[01:35:12.360 --> 01:35:17.360]  Ну это уже по сравнению с предыдущим мелочи, но тоже надо, да-да-да.
[01:35:18.360 --> 01:35:19.360]  Чего?
[01:35:20.360 --> 01:35:21.360]  Ну да.
[01:35:21.360 --> 01:35:22.360]  А, ну да, еще правильно.
[01:35:23.360 --> 01:35:25.360]  Еще правильно написать, что такое рокировка.
[01:35:25.360 --> 01:35:27.360]  Потому что, да, рокировка это, как говорят,
[01:35:27.360 --> 01:35:30.360]  когда ладья, когда ни король, ни ладья не сделали еще ни одного хода
[01:35:30.360 --> 01:35:33.360]  и как бы находит там, и когда там король делает…
[01:35:33.360 --> 01:35:38.360]  Не на отрезке между королем и ладьей, нет там ни одного хода.
[01:35:38.360 --> 01:35:41.360]  Ну да, нет, там просто был какой-то итюд, когда-то, по-моему,
[01:35:41.360 --> 01:35:45.360]  когда король не сдвинулся, пешка над королем, значит, дошла,
[01:35:45.360 --> 01:35:48.360]  значит, дошла до восьмой горизонтали и превратилась в ладью,
[01:35:48.360 --> 01:35:50.360]  и после этого сделали рокировку.
[01:35:52.360 --> 01:35:54.360]  Этот ход до недавнего времени был легален.
[01:35:54.360 --> 01:35:56.360]  Да, во-во-во, да.
[01:35:56.360 --> 01:35:59.360]  То есть сейчас в явном виде это запретили, но вообще формально,
[01:35:59.360 --> 01:36:01.360]  так можно, оказывается, было.
[01:36:02.360 --> 01:36:03.360]  Да-да-да.
[01:36:03.360 --> 01:36:04.360]  Ну я не знаю.
[01:36:04.360 --> 01:36:06.360]  Так можно, оказывается, было.
[01:36:06.360 --> 01:36:07.360]  Да-да-да.
[01:36:07.360 --> 01:36:09.360]  Ну я не помню точно.
[01:36:09.360 --> 01:36:10.360]  Так, ладно.
[01:36:10.360 --> 01:36:12.360]  Все, сейчас мы, конечно, сейчас мы о шахматах сейчас заболтаемся.
[01:36:12.360 --> 01:36:13.360]  Как что тут болтать?
[01:36:13.360 --> 01:36:16.360]  И так лучше, как говорится, через три дня лучше включать там любой крест-бук
[01:36:16.360 --> 01:36:20.360]  или там любой фиде-чест и там уже, как бы, смотреть эпическое шоу, да.
[01:36:20.360 --> 01:36:22.360]  Можете повторить какой ход?
[01:36:22.360 --> 01:36:23.360]  Как это сделать?
[01:36:23.360 --> 01:36:24.360]  Ой.
[01:36:26.360 --> 01:36:29.360]  Е-пешка просто проходит до конца.
[01:36:29.360 --> 01:36:31.360]  Ну, смотрите, вот доска.
[01:36:31.360 --> 01:36:33.360]  Е-пешка проходит до ладьи.
[01:36:33.360 --> 01:36:34.360]  Так, где там?
[01:36:34.360 --> 01:36:36.360]  Вот этот король, вот пешка.
[01:36:36.360 --> 01:36:38.360]  Пешка, пешка, пешка пришла, превратилась в ладью.
[01:36:38.360 --> 01:36:41.360]  И, как бы, ладья вроде не сделала хода, король, допустим, тоже не сделал.
[01:36:41.360 --> 01:36:43.360]  Ну и, как бы, все, делай вратировку.
[01:36:43.360 --> 01:36:45.360]  Что там на турнире произошло?
[01:36:45.360 --> 01:36:46.360]  Король двигался.
[01:36:46.360 --> 01:36:47.360]  Нет, там...
[01:36:47.360 --> 01:36:50.360]  Ну я не знаю, проходило, по-моему, не на турнире.
[01:36:50.360 --> 01:36:52.360]  Может, там кто-то в Итюде, по-моему, использовал такой.
[01:36:52.360 --> 01:36:55.360]  Да, вот был какой-то Итюд там с таким приколом, да.
[01:36:55.360 --> 01:36:57.360]  Я решала себе за этого этот Итюд, кстати.
[01:36:57.360 --> 01:36:58.360]  А, да?
[01:36:58.360 --> 01:36:59.360]  Да.
[01:36:59.360 --> 01:37:00.360]  Ну ладно.
[01:37:00.360 --> 01:37:01.360]  Более того.
[01:37:01.360 --> 01:37:02.360]  Окей.
[01:37:02.360 --> 01:37:04.360]  Ну, в любом случае, это было гораздо более красивое решение, чем запланировано.
[01:37:04.360 --> 01:37:05.360]  Да, да.
[01:37:05.360 --> 01:37:09.360]  Да, ну это, конечно, да.
[01:37:09.360 --> 01:37:11.360]  Издевательство, конечно.
[01:37:11.360 --> 01:37:12.360]  Да, ну вот, ладно.
[01:37:12.360 --> 01:37:13.360]  Ой.
[01:37:13.360 --> 01:37:17.360]  Ну ладно, все, в любом случае, да, этот ход зачем-то запретили, хотя...
[01:37:17.360 --> 01:37:19.360]  Хотя зачем?
[01:37:19.360 --> 01:37:20.360]  Такая красота была.
[01:37:20.360 --> 01:37:21.360]  Угу.
[01:37:21.360 --> 01:37:22.360]  Или прям этот...
[01:37:22.360 --> 01:37:24.360]  Или этот ход резко делает игру.
[01:37:24.360 --> 01:37:26.360]  Там, тупо, нечейный, что ли.
[01:37:26.360 --> 01:37:27.360]  Или...
[01:37:27.360 --> 01:37:31.360]  Нет, ну просто правила рокировки нельзя переделать, потому что есть фишеровские шахматы, как минимум.
[01:37:32.360 --> 01:37:33.360]  Ну да.
[01:37:33.360 --> 01:37:35.360]  Ой, ой, так, стоп.
[01:37:35.360 --> 01:37:36.360]  960.
[01:37:36.360 --> 01:37:38.360]  Так, стоп, да, я не знаю, следующая, да.
[01:37:38.360 --> 01:37:39.360]  Это...
[01:37:39.360 --> 01:37:43.360]  Нет, просто нет, если мы сейчас начнем это обсуждать, мы так никогда не закончим.
[01:37:43.360 --> 01:37:44.360]  Вот.
[01:37:44.360 --> 01:37:45.360]  Так что нет.
[01:37:45.360 --> 01:37:47.360]  Шахма, шахма, шахма ты вещь...
[01:37:47.360 --> 01:37:50.360]  Да, мы, конечно, сейчас докажем, что шахма-то игра как бы...
[01:37:50.360 --> 01:37:53.360]  Там, называется, там существующими стратегиями, но...
[01:37:53.360 --> 01:37:57.360]  С известным результатом, но непонятно кому, да.
[01:37:57.360 --> 01:37:59.360]  Ну, как сказать, нет.
[01:38:00.360 --> 01:38:03.360]  Результат существует, но какое непонятно.
[01:38:03.360 --> 01:38:06.360]  Значит, как же мы это будем делать?
[01:38:06.360 --> 01:38:10.360]  Ну, ответим, да, что многие игры там, шахматы, шашки, го, там тоже самое, на самом деле.
[01:38:10.360 --> 01:38:13.360]  То есть, прекрасно вписываются в эту схему.
[01:38:17.360 --> 01:38:18.360]  Ну да.
[01:38:18.360 --> 01:38:20.360]  Нет, это называется игра с полной информацией.
[01:38:20.360 --> 01:38:24.360]  То есть, когда оба игрока полностью весь этот граф знают.
[01:38:24.360 --> 01:38:25.360]  Вот.
[01:38:25.360 --> 01:38:27.360]  Ну потому что бывает, какие игры не подходят, да.
[01:38:27.360 --> 01:38:28.360]  Бывает, когда...
[01:38:28.360 --> 01:38:33.360]  Ну то есть любые карточные игры скорее всего не подходят, если это, конечно, не по сеансного типу игра.
[01:38:33.360 --> 01:38:34.360]  Ну потому что...
[01:38:34.360 --> 01:38:39.360]  Потому что чаще всего, если вы играете в условного дурачка, то вы не знаете, какие карты у противника.
[01:38:39.360 --> 01:38:40.360]  Вот.
[01:38:40.360 --> 01:38:41.360]  То есть поэтому...
[01:38:41.360 --> 01:38:42.360]  То есть там такое...
[01:38:43.360 --> 01:38:56.360]  Если вы играете в дурака, ну даже если вы играете в дурака в открытую, то вам еще желательно надо знать, собственно, какой порядок карты у оставшейся колодья находятся.
[01:38:56.360 --> 01:39:04.680]  Да, но дело в том, что в данном случае мы знаем весь граф
[01:39:04.680 --> 01:39:08.400]  в точности, и противник знает, и более того, как вы убедитесь
[01:39:08.400 --> 01:39:11.680]  в теории информации, важно, что мы знаем, что противник
[01:39:11.680 --> 01:39:15.000]  знает, и более того, мы знаем, что противник знает, что
[01:39:15.000 --> 01:39:17.280]  мы знаем, что он знает, и так далее до бесконечности.
[01:39:17.280 --> 01:39:22.440]  Да, это принципиально оказывается, потому что в теории информации
[01:39:22.440 --> 01:39:25.680]  приводится этот классический пример, знаете, вот такой
[01:39:25.680 --> 01:39:27.520]  просто интеллектуальный, там, я думаю, многие слышали
[01:39:27.520 --> 01:39:33.200]  этот пример, ситуация, двум, гениально, двум интеллектам,
[01:39:33.200 --> 01:39:36.240]  значит их посадили рядом, в чем очень умные люди,
[01:39:36.240 --> 01:39:42.040]  и значит сообщили, им шипнули на ухо два натуральных числа,
[01:39:42.040 --> 01:39:45.360]  и сообщили, что эти натуральные числа отличаются на единицу.
[01:39:45.360 --> 01:39:51.600]  Вот, и дальше между ними стал происходить такой
[01:39:51.600 --> 01:39:52.600]  интеллектуальный диалог.
[01:39:53.600 --> 01:39:56.600]  Слушай, Васян, а ты знаешь, какое у меня число?
[01:40:00.600 --> 01:40:03.600]  Не, слушай, а ты не знаешь, какое у меня число?
[01:40:07.600 --> 01:40:08.600]  Слушай, я тоже не знаю.
[01:40:10.600 --> 01:40:11.600]  А ты точно не знаешь?
[01:40:11.600 --> 01:40:17.600]  Как-то вот нет.
[01:40:17.600 --> 01:40:18.600]  Ну, может, ты знаешь.
[01:40:21.600 --> 01:40:23.600]  Да нет, я как-то все еще не знаю.
[01:40:27.600 --> 01:40:29.600]  Слушай, а я тогда знаю, какое у тебя число.
[01:40:32.600 --> 01:40:34.600]  А, ну тогда я тоже знаю, какое у тебя число.
[01:40:35.600 --> 01:40:40.600]  Вот, ну, длина этого диалога может варьироваться в зависимости от чисел, но вот примерно такая.
[01:40:42.600 --> 01:40:44.600]  Ну, типа да.
[01:40:46.600 --> 01:40:51.600]  Если бы число было порядка миллиарда, то они бы так порядка миллиарда раз спрашивали, но в какой-то момент догадались бы.
[01:40:52.600 --> 01:40:58.600]  Да, то есть это какой-то эпический парадокс абсолютно, я не знаю, я не могу сказать, что я его до конца понимаю.
[01:41:03.600 --> 01:41:04.600]  Ну да, да, да.
[01:41:04.600 --> 01:41:10.600]  Да, то есть, это очень интеллектуально выглядит, я не знаю, и я не знаю, и я не знаю, и я не знаю, и я я не знаю, и ой, а я знаю.
[01:41:10.600 --> 01:41:21.600]  Вот, то есть ну вот оказывается, они к другу сообщают водка, как раз на уровне что да, я точно знаю, что ты знаешь, там длинные цепочки, что ты не знаешь.
[01:41:21.600 --> 01:41:29.600]  Но я не знаю, знаю ты, что я знаю, чьё и цепочка длинная, такое взрыв мозга, так что.
[01:41:29.600 --> 01:41:30.600]  что все знают.
[01:41:30.600 --> 01:41:33.480]  Но в данном случае все знают все, без заморочек.
[01:41:33.480 --> 01:41:37.840]  Мы еще говорим, что мы не говорим о всяких рандомных
[01:41:37.840 --> 01:41:39.360]  играх типа покера, например.
[01:41:39.360 --> 01:41:43.560]  Ну да, ну и дурак, собственно, это, ну дурак тоже можно
[01:41:43.560 --> 01:41:45.840]  считать вероятностной игрой, если вы каждую карту
[01:41:45.840 --> 01:41:47.400]  рандомно достаете, например.
[01:41:47.400 --> 01:41:51.560]  Ну, по сути, да, если вы ее не знаете, то да, по сути
[01:41:51.560 --> 01:41:53.440]  для вас то же самое, что рандом.
[01:41:53.440 --> 01:41:56.400]  Вот, ну тут вот, да, вещь такая, есть в конце концов вообще
[01:41:56.400 --> 01:41:57.400]  рулетка.
[01:41:58.280 --> 01:42:01.280]  То есть, ну это такая просто, то есть это где вообще-то,
[01:42:01.280 --> 01:42:04.040]  то есть это такая предельная точка, типа ноль интеллекта
[01:42:04.040 --> 01:42:05.040]  абсолютный рандом.
[01:42:05.040 --> 01:42:08.000]  То есть, как бы никакой интеллект вам в эту игру, собственно,
[01:42:08.000 --> 01:42:10.320]  играть там более оптимально, чем просто кидать там куда-нибудь
[01:42:10.320 --> 01:42:12.480]  и надеяться, что повезет, не поможет.
[01:42:12.480 --> 01:42:13.760]  Ну просто так устроена рулетка.
[01:42:13.760 --> 01:42:23.960]  Вот, ну то есть, ну естественно, в математической модели
[01:42:23.960 --> 01:42:25.160]  мы подобное не рассматриваем.
[01:42:25.160 --> 01:42:28.640]  Или рассматриваем, ну или тогда рассматриваем конкретный
[01:42:28.640 --> 01:42:30.640]  профит, который нам может этот чит привести.
[01:42:30.640 --> 01:42:33.960]  Нет, дальше там начинается всякие интеллектуальные
[01:42:33.960 --> 01:42:35.760]  игры там на тему того, что на самом деле из рулетки
[01:42:35.760 --> 01:42:38.040]  там есть у вас бесконечное число денег, то вы себе можете
[01:42:38.040 --> 01:42:40.640]  обеспечить стабильный доход, конечно, с нее, ну там удваивая
[01:42:40.640 --> 01:42:41.640]  ставки.
[01:42:41.640 --> 01:42:42.640]  Вот.
[01:42:42.640 --> 01:42:47.200]  Ну да, ну там просто да, если вы в долгу играете,
[01:42:47.200 --> 01:42:49.920]  то рано или поздно, конечно, то есть после любой рецепткотегии,
[01:42:49.920 --> 01:42:51.800]  если у вас конечное количество денег, то рано или поздно
[01:42:51.800 --> 01:42:52.800]  вы, конечно, обвалитесь.
[01:42:53.440 --> 01:42:56.760]  То есть после очень да, будет у него там как бы понятно,
[01:42:56.760 --> 01:42:58.200]  что, например, если у вас там ставка, вы ставите
[01:42:58.200 --> 01:43:00.560]  один при проигрыше, два, потом четыре и так далее.
[01:43:00.560 --> 01:43:03.800]  То есть если у вас там изначально тысяча, то вы там имеете право,
[01:43:03.800 --> 01:43:05.040]  можете поставить так десять раз.
[01:43:05.040 --> 01:43:08.800]  Ну то есть понятно, что вероятность того, что там за десять раз
[01:43:08.800 --> 01:43:10.760]  там, допустим, не выпадет красная, то конечно крайне
[01:43:10.760 --> 01:43:14.000]  мала, но если вы играете долго, то за тысячу раз, то есть
[01:43:14.000 --> 01:43:16.840]  за тысячу итераций один раз такое произойдет.
[01:43:16.840 --> 01:43:17.840]  Скорее всего.
[01:43:17.840 --> 01:43:18.840]  Поэтому и вы обвалитесь.
[01:43:18.840 --> 01:43:19.840]  Ну вот.
[01:43:19.880 --> 01:43:23.040]  Но теорию у вас в следующем семестре, это вы все там будете
[01:43:23.040 --> 01:43:25.840]  подробно обсуждать, все подобного рода вопросы.
[01:43:25.840 --> 01:43:26.840]  Вот.
[01:43:26.840 --> 01:43:28.480]  А у нас вероятностей нет.
[01:43:28.480 --> 01:43:29.480]  У нас все жестко.
[01:43:29.480 --> 01:43:30.480]  Давай.
[01:43:30.480 --> 01:43:33.480]  Что такое равноправность?
[01:43:33.480 --> 01:43:37.200]  Нет, вот равноправность, это когда, как бы, какие
[01:43:37.200 --> 01:43:40.360]  ходы можно, куда можно сдвинуть фишку, зависит только от
[01:43:40.360 --> 01:43:41.360]  вершины.
[01:43:41.360 --> 01:43:42.360]  Вот.
[01:43:42.360 --> 01:43:44.640]  Но как бы мы увидели в этом смысле, равноправность
[01:43:44.640 --> 01:43:46.160]  и неравноправность не сильно принципиальны.
[01:43:46.160 --> 01:43:47.160]  Вот.
[01:43:47.160 --> 01:43:49.400]  Ну разные терминологи там может быть, но мы сейчас
[01:43:49.400 --> 01:43:50.400]  не будем в нее копать.
[01:43:50.400 --> 01:43:51.400]  Вот.
[01:43:51.400 --> 01:43:53.880]  Ну и соответственно, мы попытаемся вот немножко
[01:43:53.880 --> 01:43:56.360]  приблизиться к тому, действительно, какие у нас игры вообще
[01:43:56.360 --> 01:43:58.320]  бывают, а как их можно анализировать.
[01:43:58.320 --> 01:44:03.000]  Ну начнем с самого, ну вот.
[01:44:03.000 --> 01:44:06.640]  Ну с другой стороны, давайте подумаем, да, какие вообще
[01:44:06.640 --> 01:44:07.640]  игры могут быть.
[01:44:07.640 --> 01:44:10.360]  Ну там самая простая игра, ну можно посмотреть в какой-нибудь
[01:44:10.360 --> 01:44:11.360]  веселой телепередаче.
[01:44:11.360 --> 01:44:12.360]  Вот.
[01:44:12.360 --> 01:44:15.000]  Ну в какой телепередаче у нас есть веселые игры.
[01:44:15.000 --> 01:44:16.000]  Ну, Форд Боярк, например.
[01:44:16.000 --> 01:44:22.080]  Ну, как сказать, ну есть там во Франции там Форд,
[01:44:22.080 --> 01:44:24.000]  который построили, он не пригодился, его там переделали
[01:44:24.000 --> 01:44:25.000]  под телепередачу.
[01:44:25.000 --> 01:44:29.000]  Поэтому там прибирают какие-то команды, то есть, знаете, там,
[01:44:29.000 --> 01:44:32.080]  то есть условно потом человека там запускают в комнату там,
[01:44:32.080 --> 01:44:34.120]  а все остальные там смотрят по телевизору, что делает
[01:44:34.120 --> 01:44:35.120]  и получается диалог.
[01:44:35.120 --> 01:44:36.120]  Там что ты там видишь?
[01:44:36.120 --> 01:44:37.120]  Там львы!
[01:44:37.120 --> 01:44:38.120]  Там убей их!
[01:44:38.120 --> 01:44:39.120]  Что дальше?
[01:44:39.120 --> 01:44:40.120]  Ну вот.
[01:44:40.120 --> 01:44:41.120]  Там что такое?
[01:44:41.120 --> 01:44:44.120]  Там какой-то злой охранник.
[01:44:44.240 --> 01:44:46.240]  Там убей его!
[01:44:46.240 --> 01:44:47.240]  Убил!
[01:44:47.240 --> 01:44:48.240]  Что дальше?
[01:44:48.240 --> 01:44:49.240]  Что с твоим голосом?
[01:44:49.240 --> 01:44:50.240]  Дай сюда симпла немного!
[01:44:50.240 --> 01:44:51.240]  Так, что дальше?
[01:44:51.240 --> 01:44:52.240]  Там слон!
[01:44:52.240 --> 01:44:53.240]  Так, ключ под слоном!
[01:44:53.240 --> 01:44:54.240]  Что делать?
[01:44:54.240 --> 01:44:55.240]  Там сдвинь слона!
[01:44:55.240 --> 01:44:56.240]  Сдвинула!
[01:44:56.240 --> 01:44:57.240]  Там бери ключ!
[01:44:57.240 --> 01:44:58.240]  Ну и так далее.
[01:44:58.240 --> 01:44:59.240]  В общем, неважно.
[01:44:59.240 --> 01:45:00.240]  Такая примерная игра.
[01:45:00.240 --> 01:45:04.240]  Ну это пародия, конечно, но суть, может быть, могла
[01:45:04.240 --> 01:45:05.240]  быть примерно такой, да.
[01:45:05.240 --> 01:45:06.240]  Вот.
[01:45:06.240 --> 01:45:08.760]  Но в какой-то момент приходит такое.
[01:45:08.760 --> 01:45:11.000]  Некоторые игроки иногда проигрывают в состязаниях
[01:45:11.000 --> 01:45:12.000]  и создают в тюрьму.
[01:45:12.000 --> 01:45:13.000]  Вот.
[01:45:13.000 --> 01:45:14.000]  Вот.
[01:45:14.000 --> 01:45:15.000]  Вот.
[01:45:15.000 --> 01:45:17.880]  И Александру Домогарову нужно спасти человека.
[01:45:17.880 --> 01:45:22.120]  И ему нужно выиграть в интеллектуальную игру.
[01:45:22.120 --> 01:45:25.600]  Значит, у какого-то мистического метро теней.
[01:45:25.600 --> 01:45:26.600]  А игра такая.
[01:45:26.600 --> 01:45:29.120]  Значит, есть 20 палочек.
[01:45:29.120 --> 01:45:32.120]  Вот.
[01:45:32.120 --> 01:45:38.120]  Ну, версия такая, да.
[01:45:38.120 --> 01:45:40.120]  Ну, значит, описываю версию, да.
[01:45:40.120 --> 01:45:41.120]  Вот.
[01:45:41.120 --> 01:45:42.600]  В первом ходит Александр Домогаров.
[01:45:42.600 --> 01:45:44.920]  Ну, значит, они, игроки ходят по очереди.
[01:45:44.920 --> 01:45:48.320]  Они могут по очереди забрать от одной до трех палочек.
[01:45:48.320 --> 01:45:51.320]  Вот.
[01:45:51.320 --> 01:45:52.800]  Проигрывает тот, кто возьмет последнюю.
[01:45:52.800 --> 01:45:55.720]  Ну, у нас будет такая игра.
[01:45:55.720 --> 01:45:58.960]  Ну да, это не совсем вот эта игра, но вот там была
[01:45:58.960 --> 01:46:01.120]  версия проигрывает тот, кто возьмет последнюю.
[01:46:01.120 --> 01:46:02.120]  Вот.
[01:46:02.120 --> 01:46:06.560]  Ну, там многим это давали, но, кажется, только Александр
[01:46:06.560 --> 01:46:08.920]  Домогаров продемонстрировал, что он умеет в это играть.
[01:46:09.920 --> 01:46:12.920]  Все остальные как-то проиграли.
[01:46:12.920 --> 01:46:13.920]  20.
[01:46:13.920 --> 01:46:18.920]  Ну, начинает Александр Домогаров.
[01:46:18.920 --> 01:46:21.920]  Ну да.
[01:46:21.920 --> 01:46:22.920]  Вот.
[01:46:22.920 --> 01:46:25.920]  Ну, давайте кратенько вспомним технологию.
[01:46:25.920 --> 01:46:26.920]  Ну, ладно.
[01:46:26.920 --> 01:46:28.920]  То есть для нас, на самом деле, лучше сказать, что
[01:46:28.920 --> 01:46:31.920]  палочек не 20 и 19 и лучше сказать, что проигрывает тот,
[01:46:31.920 --> 01:46:32.920]  кому палочек не осталось.
[01:46:32.920 --> 01:46:34.920]  Ну, эквивалентно, по сути.
[01:46:34.920 --> 01:46:35.920]  Вот.
[01:46:35.920 --> 01:46:36.920]  Вот.
[01:46:37.920 --> 01:46:38.920]  Вот.
[01:46:38.920 --> 01:46:41.920]  В чем главное, это были хорошие времена с Ермольником,
[01:46:41.920 --> 01:46:43.920]  когда, по-моему, Метри, там Метри Теней в эту игру
[01:46:43.920 --> 01:46:44.920]  играли честно.
[01:46:44.920 --> 01:46:47.920]  Потому что в недавней версии я видел, что там, по-моему,
[01:46:47.920 --> 01:46:50.920]  Метр очень прям старался, изворачивался, чтобы игрок
[01:46:50.920 --> 01:46:51.920]  победил.
[01:46:51.920 --> 01:46:52.920]  Вот.
[01:46:52.920 --> 01:46:54.920]  Просто он очень старался, явно, прям вот.
[01:46:54.920 --> 01:46:55.920]  Да.
[01:46:55.920 --> 01:46:58.920]  То есть там он оставил просто 7 палочек, чтобы она,
[01:46:58.920 --> 01:47:00.920]  собственно, догадалась, что можно там все-таки взять
[01:47:00.920 --> 01:47:02.920]  две палочки, и тогда он ничего сделать не сможет.
[01:47:02.920 --> 01:47:05.920]  А так сложная игра, видимо, была там с большими перипетиями.
[01:47:05.920 --> 01:47:06.920]  Казалось бы.
[01:47:06.920 --> 01:47:10.920]  А с точки зрения математики, что мы видим?
[01:47:10.920 --> 01:47:13.920]  Давайте, ну, как всегда, зачем нам решать задачу
[01:47:13.920 --> 01:47:16.920]  для 19 палочек, когда у нас есть N палочек?
[01:47:16.920 --> 01:47:23.920]  И давайте честно, значит, будем все честно, значит,
[01:47:23.920 --> 01:47:24.920]  соответственно, решать.
[01:47:24.920 --> 01:47:27.920]  Вот, предположим, есть у нас в игре 0 палочек.
[01:47:27.920 --> 01:47:29.920]  Кто у нас выигрывает?
[01:47:31.920 --> 01:47:32.920]  Второй.
[01:47:32.920 --> 01:47:33.920]  Да.
[01:47:33.920 --> 01:47:34.920]  Второй игрок.
[01:47:34.920 --> 01:47:35.920]  А первый проигрывает.
[01:47:35.920 --> 01:47:38.920]  Значит, мы для удобства будем называть такие игры
[01:47:38.920 --> 01:47:39.920]  проигрышными.
[01:47:39.920 --> 01:47:43.920]  То есть у нас будет такое определение.
[01:47:43.920 --> 01:47:46.920]  Значит, будем писать.
[01:47:46.920 --> 01:47:53.920]  Игра… Нет, неправильно мы написали.
[01:47:53.920 --> 01:47:55.920]  Игра выигрышная.
[01:47:55.920 --> 01:47:58.920]  Да, будем, ну, будем уж цвета вводить.
[01:47:58.920 --> 01:48:01.920]  Тут вот сейчас вот надо аккуратно просто проводить,
[01:48:01.920 --> 01:48:02.920]  тут вот прорвать.
[01:48:02.920 --> 01:48:16.920]  Игра выигрышная, если у первого игрока есть выигрышная
[01:48:16.920 --> 01:48:18.920]  стратегия.
[01:48:18.920 --> 01:48:19.920]  Ну, понятно, что такое выигрышная стратегия, да?
[01:48:19.920 --> 01:48:20.920]  То есть выигрышная стратегия, то есть у нее стратегия,
[01:48:20.920 --> 01:48:21.920]  то есть стратегия, ну, стратегия…
[01:48:21.920 --> 01:48:23.920]  Можно это формально описать, как что в каждой позиции
[01:48:23.920 --> 01:48:26.920]  у него там фиксирована, как он будет ходить.
[01:48:26.920 --> 01:48:27.920]  Это называется стратегия.
[01:48:27.920 --> 01:48:29.920]  Стратегия называется выигрышная, если она позволяет
[01:48:29.920 --> 01:48:32.320]  она позволяет ему выиграть, независимо от того, как
[01:48:32.320 --> 01:48:41.320]  ходит второй игрок.
[01:48:41.320 --> 01:48:42.960]  Выигрышная стратегия.
[01:48:42.960 --> 01:48:50.160]  И, соответственно, сразу определение напарника.
[01:48:51.000 --> 01:48:58.640]  Игра проигрышная.
[01:48:58.640 --> 01:49:02.480]  Вот, будем красненьким писать.
[01:49:02.480 --> 01:49:09.040]  Если что.
[01:49:09.040 --> 01:49:12.720]  Да, если у Витя дайсил второго игрока из выигрышной стратегии.
[01:49:12.720 --> 01:49:16.440]  То есть, видите, у нас как бы определение направлено на такой, на
[01:49:16.520 --> 01:49:21.520]  конструктив.
[01:49:21.520 --> 01:49:24.480]  Ну, тот, кто ходит в игре, он как бы кто-то первый
[01:49:24.480 --> 01:49:26.640]  ходит, а кто-то второй.
[01:49:26.640 --> 01:49:29.320]  Поэтому проигрышность и выигрышность.
[01:49:29.320 --> 01:49:30.920]  Но правда парадокс в том, что после того, как вы
[01:49:30.920 --> 01:49:34.960]  походили, да, вы попадаете в позицию, в которую вы
[01:49:34.960 --> 01:49:35.960]  теперь второй игрок.
[01:49:36.640 --> 01:49:42.040]  То есть, выигрышность этого我們的.
[01:49:42.040 --> 01:49:49.560]  Да, когда мы говорим о выигрышности или проигрышности,
[01:49:49.560 --> 01:49:51.960]  мы говорим, что она выигрыш Mcさ для того, кто
[01:49:51.960 --> 01:49:52.960]  ходит.
[01:49:52.960 --> 01:49:54.560]  То есть, когда мы сейчас говорим первый и второй,
[01:49:54.560 --> 01:49:57.040]  то мы говорим, да, что первый тот, кто сейчас ходит,
[01:49:57.040 --> 01:49:59.560]  второй кто сейчас не ходит.
[01:49:59.560 --> 01:50:01.280]  Игра может быть выигрышная как для одного, так и для
[01:50:01.280 --> 01:50:02.280]  второго.
[01:50:02.280 --> 01:50:04.920]  Но мы ее называем выигрышной Moscow.
[01:50:04.920 --> 01:50:10.640]  но мы ее называем выигрышной и проигрышной
[01:50:10.640 --> 01:50:12.280]  ну вот заметим что
[01:50:12.280 --> 01:50:14.720]  игра из нуля палочек откровенно
[01:50:14.720 --> 01:50:16.880]  проигрышная, потому что первый игрок подает в позицию
[01:50:16.880 --> 01:50:19.720]  где он не может сделать ход и проигрывает
[01:50:19.720 --> 01:50:22.520]  понимаете да?
[01:50:22.520 --> 01:50:23.560]  так
[01:50:23.560 --> 01:50:26.720]  а если у нас одна палочка
[01:50:26.720 --> 01:50:29.720]  тогда первый игрок может выиграть
[01:50:29.720 --> 01:50:32.680]  ну у него ладно, у него вариантов нету в общем то ходов
[01:50:32.680 --> 01:50:35.860]  а вот здесь он может и проиграть
[01:50:37.640 --> 01:50:41.280]  но мы подразумеваем что оба игрока играют
[01:50:41.280 --> 01:50:42.720]  оптимально
[01:50:42.720 --> 01:50:45.900]  вот эта магическая фраза играют 100 00,000
[01:50:45.900 --> 01:50:47.880]  то есть это означает что если есть выигрышная
[01:50:47.880 --> 01:50:50.040]  стратегия у первого игрока то есть, если у первого игрока
[01:50:50.040 --> 01:50:52.180]  есть какая то тактика то он будет ей
[01:50:52.180 --> 01:50:53.680]  придерживаться
[01:50:53.680 --> 01:50:55.800]  и если у второго игрока есть какая то тактика
[01:50:55.800 --> 01:50:58.180]  он тоже будет ей придерживаться
[01:50:58.180 --> 01:51:00.360]  вот тут все просто
[01:51:00.360 --> 01:51:05.360]  Это называется «играют оптимально».
[01:51:05.360 --> 01:51:10.360]  Ну и соответственно, если у нас 1, 2, 3 палочки, то у первого игрока есть выигрышная стратегия.
[01:51:10.360 --> 01:51:13.360]  Просто забрать все палочки.
[01:51:13.360 --> 01:51:18.360]  А вот если у нас 4 палочки, то тут подлянка.
[01:51:18.360 --> 01:51:23.360]  Как бы первый игрок не походил, то есть он бы оставил второму 3, 2 или 1 палочку,
[01:51:23.360 --> 01:51:28.360]  у второго игрока, который становится в этих позициях первым, всегда есть выигрышная стратегия.
[01:51:28.360 --> 01:51:33.360]  Ну по сути это означает, что у второго игрока в принципе есть выигрышная стратегия,
[01:51:33.360 --> 01:51:37.360]  значит, это позиция проигрышная.
[01:51:37.360 --> 01:51:39.360]  Понимаете, да?
[01:51:39.360 --> 01:51:41.360]  Вот.
[01:51:41.360 --> 01:51:47.360]  Но дальше теперь заметим, что 5, 6, 7 превращаются в выигрышные игры, потому что есть выигрышный ход.
[01:51:47.360 --> 01:51:50.360]  Надо просто оставить противнику 4 палочки.
[01:51:51.360 --> 01:51:54.360]  И он проигрывает, а мы выигрываем.
[01:51:54.360 --> 01:51:57.360]  Ну и так далее.
[01:51:57.360 --> 01:52:01.360]  Тут получается P, дальше V, V, V, ну в общем и так далее.
[01:52:01.360 --> 01:52:04.360]  Ну в этом смысле, да, вот эта игра оказывается достаточно простой.
[01:52:04.360 --> 01:52:07.360]  То есть если количество палочек делится на 4, то выигрывает второй игрок,
[01:52:07.360 --> 01:52:09.360]  если не делится, то выигрывает первый.
[01:52:09.360 --> 01:52:11.360]  И стратегия очень простая.
[01:52:11.360 --> 01:52:16.360]  На каждом шаге оставлять противнику количество палочек, делящихся на 4.
[01:52:16.360 --> 01:52:20.360]  Да, причем обратите внимание, в шахматах есть понятие «точный ход».
[01:52:20.360 --> 01:52:25.360]  Ну вот здесь тоже заметим, что выигрывающий игрок должен играть абсолютно точно,
[01:52:25.360 --> 01:52:29.360]  потому что малейшая ошибка, и тогда противник перехватывает инициативу и выигрывает.
[01:52:29.360 --> 01:52:32.360]  Вот, в шахматах тоже есть понятие «точный ход».
[01:52:32.360 --> 01:52:34.360]  То есть вы выигрываете, если делаете точный ход.
[01:52:34.360 --> 01:52:39.360]  То есть вот если вы этот ход делаете, то вы выигрываете, если нет, то вас облапошивают.
[01:52:39.360 --> 01:52:41.360]  Вот.
[01:52:41.360 --> 01:52:46.360]  Да, ну здесь правда, ну вот.
[01:52:46.360 --> 01:52:51.360]  Ну правда, здесь вот заметим, что, конечно, интересно, что любая игра с палочками,
[01:52:51.360 --> 01:52:54.360]  она либо выигрышная, либо проигрышная.
[01:52:54.360 --> 01:52:56.360]  Ну здесь, конечно, стоит обсудить еще.
[01:52:56.360 --> 01:53:01.360]  А если бы можно было забирать не одну, две, три палочки, а что-нибудь другое.
[01:53:01.360 --> 01:53:06.360]  Например, две палочки, три палочки или семь палочек.
[01:53:06.360 --> 01:53:11.360]  Спрашивается.
[01:53:11.360 --> 01:53:13.360]  А что в этом случае?
[01:53:13.360 --> 01:53:16.360]  Как бы в этом случае понимать, кто выиграет на N палочках?
[01:53:26.360 --> 01:53:28.360]  Ну надо либо два, либо три, либо семь.
[01:53:28.360 --> 01:53:31.360]  То есть в данном случае, да, давайте это мы...
[01:53:31.360 --> 01:53:33.360]  Ну вот.
[01:53:33.360 --> 01:53:35.360]  Да, ну как ретро?
[01:53:35.360 --> 01:53:39.360]  Ну пока палочки даже не надо ретро, а просто действительно есть та же самая динамика.
[01:53:39.360 --> 01:53:44.360]  То есть если нам позволяется решать задачу за OATN, то в общем-то мы можем просто написать динамику.
[01:53:44.360 --> 01:53:46.360]  Ну кажется это OATN-K динамику.
[01:53:46.360 --> 01:53:47.360]  Ну по факту, да.
[01:53:47.360 --> 01:53:50.360]  Если у вас K ходово, давайте, да, можно сразу обобщить.
[01:53:50.360 --> 01:53:52.360]  Вот OATN значит решается за вот единицу.
[01:53:52.360 --> 01:53:53.360]  Да.
[01:53:53.360 --> 01:53:54.360]  Да.
[01:53:54.360 --> 01:53:56.360]  Уверен.
[01:53:56.360 --> 01:53:57.360]  А, 237?
[01:53:57.360 --> 01:53:58.360]  Да.
[01:53:58.360 --> 01:53:59.360]  237, наверное, нет.
[01:53:59.360 --> 01:54:01.360]  Ну там...
[01:54:03.360 --> 01:54:05.360]  Нет, ну может...
[01:54:05.360 --> 01:54:10.360]  Ну как сказать, там по-разному, что вот 1A2, A3 и так далее, AK.
[01:54:10.360 --> 01:54:16.360]  То есть, допустим, если у вас есть то, можно решать задачу за OATN-K, просто вот написав тупую динамику.
[01:54:16.360 --> 01:54:18.360]  То есть, ну, заметьте, это просто динамика.
[01:54:18.360 --> 01:54:21.360]  Да слава богу, мы с вами знаем, что такое динамика.
[01:54:21.360 --> 01:54:22.360]  Вот.
[01:54:22.360 --> 01:54:24.360]  Но не знаем, что такое DFS.
[01:54:24.360 --> 01:54:25.360]  К сожалению.
[01:54:25.360 --> 01:54:27.360]  Вот.
[01:54:27.360 --> 01:54:30.360]  Ну а вы скажете вопрос, а можно ли это как-то ускорить?
[01:54:33.360 --> 01:54:35.360]  Ну в каком плане ускорить?
[01:54:35.360 --> 01:54:36.360]  Ну вот.
[01:54:36.360 --> 01:54:43.360]  Ну на самом деле вот бывают случаи, когда K достаточно мало, и самое главное, все эти K, они там не сильно большие, они, например, 10.
[01:54:47.360 --> 01:54:51.360]  Но при этом у вас N, допустим, до 10 в 18.
[01:54:54.360 --> 01:54:56.360]  Вот такая типичная ситуация.
[01:54:57.360 --> 01:55:07.360]  Ну, это, фактически нас интересует только последние там 10.
[01:55:07.360 --> 01:55:09.360]  Короче, вот 10.
[01:55:09.360 --> 01:55:11.360]  Да, хули.
[01:55:11.360 --> 01:55:15.360]  Ну, нас интересует только последние 10.
[01:55:15.360 --> 01:55:19.360]  А вы не можете сказать, что у нас период не больше, чем произведение всех Аши?
[01:55:19.360 --> 01:55:21.360]  Нет, это не произведение.
[01:55:21.360 --> 01:55:22.360]  Почему?
[01:55:23.360 --> 01:55:28.360]  Нет, мы же, нас же интересует только результаты типа последних 10.
[01:55:28.360 --> 01:55:30.360]  Ну, аккуратно скажем, да.
[01:55:30.360 --> 01:55:34.360]  Заметим, что каждую следующую букву мы можем восстановить только по 10 предыдущим, правда?
[01:55:35.360 --> 01:55:36.360]  То есть.
[01:55:36.360 --> 01:55:37.360]  Вот.
[01:55:37.360 --> 01:55:41.360]  То есть как бы каждые 10 идущих подряд буквок однозначно определяют следующую.
[01:55:42.360 --> 01:55:49.360]  Ну теперь заметим, что количество буквонаборов из 10 букв P и V у нас вообще конечное количество.
[01:55:49.360 --> 01:55:50.360]  А, вот так?
[01:55:50.360 --> 01:55:51.360]  Да, 2 в 10.
[01:55:51.360 --> 01:55:52.360]  Да, мы так мыслим.
[01:55:52.360 --> 01:55:54.360]  Да, получается 2 в 10.
[01:55:54.360 --> 01:55:55.360]  Понимаете, да?
[01:55:55.360 --> 01:55:57.360]  Ну, что это значит?
[01:55:57.360 --> 01:56:04.360]  Ну, тогда это означает, что если вы будете честно динамикой это вычислять, то рано в какой-то момент вы обнаружите зацикл.
[01:56:05.360 --> 01:56:08.360]  Да, правда, не факт, что именно с нулем, правда, да?
[01:56:08.360 --> 01:56:14.360]  То есть может быть, что у вас там типа вы считали, считали, считали, и у вас вот эта строчка, вот эта строчка совпала с вот этой, но не с нулем.
[01:56:14.360 --> 01:56:16.360]  То есть предпериод возможен.
[01:56:17.360 --> 01:56:18.360]  Ну, окей.
[01:56:18.360 --> 01:56:26.360]  Ну, вы гарантируете, что это произойдет не более чем через там, то есть на, то есть вот эта штука не более чем там 2 в степени K плюс K.
[01:56:28.360 --> 01:56:29.360]  Понимаете, да?
[01:56:29.360 --> 01:56:30.360]  Да.
[01:56:30.360 --> 01:56:40.360]  Ну, тогда после этого зацикла, тогда вы получается, что вы тогда уже в принципе тут все поняли и можете получается для любого N, после этого все вычисляется у от единицы.
[01:56:41.360 --> 01:56:42.360]  Вот.
[01:56:42.360 --> 01:56:45.360]  Ну, как говорится, технические детали мы опустим вот для краткости.
[01:56:46.360 --> 01:56:47.360]  Вот.
[01:56:47.360 --> 01:56:54.360]  И только скажем, что асимптотика такого решения получается там 2 в степени K на K плюс 1.
[01:56:58.360 --> 01:57:00.360]  То есть можно вот это вот так вот сделать.
[01:57:00.360 --> 01:57:04.360]  Ну, где только не K, правда, а вот это вот.
[01:57:05.360 --> 01:57:07.360]  Макс, так сказать, Макс А.
[01:57:11.360 --> 01:57:12.360]  Вот.
[01:57:12.360 --> 01:57:15.360]  То есть вот такие игры можно еще вот так еще более интеллектуально решать.
[01:57:15.360 --> 01:57:18.360]  Наверное, можно еще матрицу в степени.
[01:57:24.360 --> 01:57:26.360]  А при чем тут вообще?
[01:57:26.360 --> 01:57:28.360]  Ну, как бы там переходы живут.
[01:57:28.360 --> 01:57:30.360]  Ну, в конечное число.
[01:57:30.360 --> 01:57:35.360]  Ну, там, да, но они там как бы не над полем получаются, просто над чем-то булливым, поэтому не факт.
[01:57:35.360 --> 01:57:41.360]  Ну, это же кажется какие-то логические...
[01:57:45.360 --> 01:57:47.360]  Ну, да, это же какие-то булливые операции.
[01:57:47.360 --> 01:57:52.360]  Ну, да, но по-моему не такие, над которыми можно матрицу забахнуть, потому что с отрицаниями там же будет.
[01:57:52.360 --> 01:57:58.360]  Потому что по сути вам для каждой позиции нужно понять, нужно перебрать несколько позиций, понять, есть ли среди них проигрышное.
[01:57:58.360 --> 01:57:59.360]  Если да, то вы выигрышное.
[01:57:59.360 --> 01:58:02.360]  Если нет, если все выигрышные, то это проигрышное.
[01:58:02.360 --> 01:58:06.980]  если все выигрышные, то это проигрышное. То есть, по сути, это что там получается?
[01:58:06.980 --> 01:58:14.120]  Ну, то есть дизюнкция отрицаний. Ну вот, как бы, по-моему, в матрицу это, по-моему,
[01:58:14.120 --> 01:58:20.360]  писывается не очень. То есть, если были ксорчики, тогда, конечно, там святое дело. Вот так.
[01:58:20.360 --> 01:58:26.640]  Вот. Но нам это не очень принципиально. Это мы так немножко разомнулись, в общем-то. Потому что,
[01:58:26.640 --> 01:58:31.160]  то есть, по сути, заметим, что если бы попытались эту игру представить как игру на графе,
[01:58:31.160 --> 01:58:36.520]  у нас бы получился просто ациклический граф, правда? Чем не просто ациклический,
[01:58:36.520 --> 01:58:43.440]  а еще какой-то просто устроенный. Но, с другой стороны, заметим, что у ациклического графа,
[01:58:43.440 --> 01:58:54.960]  на самом деле, все может быть в этом смысле еще проще. Ну, потому что ладно. Так. Потому что,
[01:58:54.960 --> 01:58:59.520]  ну, во-первых, потому что у ациклического графа есть такое понятие, которое почему-то,
[01:58:59.520 --> 01:59:11.760]  как выясняется, не все знают. Как топологическая сортировка? Найдите топологическую сортировку
[01:59:11.760 --> 01:59:38.080]  граф. Ну да. Ну да. Хе-хе-хе-хе-хе.
[01:59:38.080 --> 01:59:53.720]  Ну вот. Заметим, что да, топологическая сортировка у нас существует. Более того,
[01:59:53.720 --> 02:00:01.920]  да, мы не знаем, что такое ДФС. Но, на самом деле, знаем, что такое БФС. Ну, потому что самое
[02:00:01.920 --> 02:00:05.680]  приятное в топологической сортировке это то, что мы знаем, что если игра ациклический и
[02:00:05.680 --> 02:00:11.160]  конечная, мы рассматриваем конечную игру, то мы точно знаем, что существует вершина,
[02:00:11.160 --> 02:00:19.960]  из которой ребра не торчат. Логично, да? Вот. И тогда, получается, идея могла быть, то есть,
[02:00:19.960 --> 02:00:29.800]  можно делать такой, что-то типа обратного БФСа. То есть, запихнем в очередь все стоки. Ну, то есть,
[02:00:29.800 --> 02:00:34.480]  вот, вершины, из которых ничего не торчит. А дальше будем говорить, что достаем вершину из
[02:00:34.480 --> 02:00:41.360]  очереди, перебираем все ребра, которые ведут в нее, и как бы их выкидываем. Если после выкидывания
[02:00:41.360 --> 02:00:45.640]  проверяем, что если из какой-то вершины оказалось, что ребра уже больше не торчит, значит мы ее добавляем
[02:00:45.640 --> 02:00:52.880]  в очередь. Понимаете, да? И таким образом, ну вот, добавляем в очередь. И таким образом заметим,
[02:00:52.880 --> 02:00:57.000]  что если выписать вершины, в каком порядке мы их достали из очереди, то это и есть топ-сорт. Ну,
[02:00:57.000 --> 02:01:06.840]  правда, в котором ребра идут справа налево. Вот. Понятен механизм, да? Ну, в общем-то. Вот. Значит,
[02:01:06.840 --> 02:01:13.000]  вот тут надо аккуратно. Итак, предположим, что у нас топ-сорт есть. Там все ребра идут справа налево.
[02:01:13.000 --> 02:01:24.440]  Допустим. Вот. Ну, как-то вот так я тут от балды нарисую. И тогда оказывается,
[02:01:24.440 --> 02:01:29.520]  фирмистическое утверждение, что любая ациклическая игра заведомо либо выигрышная,
[02:01:29.520 --> 02:01:36.320]  либо проигрышная. Как это доказать? Ну, в общем-то, примерно тем же способом. То есть идем по топ-сорту
[02:01:36.320 --> 02:01:40.560]  и для каждой вершины определяем выигрышная или проигрышная. Как мы определяем? Да очень просто.
[02:01:40.560 --> 02:01:48.440]  Потому что у нас есть два принципа. Первый. Принцип выигрышности. Значит, принцип выигрышности.
[02:01:48.440 --> 02:01:58.840]  Если у нас есть вершина, из которой есть ходы непонятно куда, но существует ход, хотя бы один
[02:01:58.840 --> 02:02:05.240]  ход, в проигрышную вершину. То есть вершина, по которой мы точно знаем, что она проигрышная. То
[02:02:05.240 --> 02:02:14.360]  из этого следует, что наша вершина выигрышная. Логично, да? И у нас есть выигрышная стратегия,
[02:02:14.360 --> 02:02:20.200]  вида пойти в эту вершину, а дальше воспользоваться проигрышной стратегией. То есть это выигрышная
[02:02:20.200 --> 02:02:26.840]  стратегия из-за второго игрока здесь. Понимаете, да? То есть есть вот такой принцип. И принцип
[02:02:26.840 --> 02:02:43.560]  напарник. Принцип проигрышности. Если выяснилось, что все ходы ведут нас в заведомо выигрышные
[02:02:43.560 --> 02:02:53.960]  вершины, то тогда из этого следует, что наша игра проигрышная. Заметим, что в этот принцип
[02:02:53.960 --> 02:02:59.720]  входит и ситуация, когда ходов нет вообще. Если у нас ноль ходов, то значит все ходы ведут в
[02:02:59.720 --> 02:03:04.440]  выигрышные вершины. А также можно сказать, что все ходы ведут в проигрышные вершины,
[02:03:04.440 --> 02:03:13.320]  нечейные вершины и в 57 школу. Соответственно. Вот. Конечно. Да, это правда, что интересно. Да.
[02:03:13.320 --> 02:03:22.080]  Вот. Соответственно. Вот. То есть это вот такие два принципа. Причем заметим, что я их, то есть я
[02:03:22.080 --> 02:03:27.520]  их написал в принципе для произвольного графа. То есть даже если граф циклический, то в нем тоже
[02:03:27.520 --> 02:03:35.920]  могут быть выигрышные и проигрышные игры, и эти принципы вполне применимы. Понимаете, да? Ну,
[02:03:35.920 --> 02:03:40.120]  заметим, что в циклическом графе, если мы будем применять эти принципы к вершинам вот так по
[02:03:40.120 --> 02:03:47.520]  очереди, то тогда у каждой вершины вопросиков не будет. Но тогда у нас два варианта. Либо все вершины
[02:03:47.520 --> 02:03:51.760]  выигрышные, и тогда она проигрышная, либо тут хоть кто-то проигрышный, и тогда она выигрышная.
[02:03:51.760 --> 02:03:58.760]  Понимаете, да? То есть оба принципа вполне себе применимы. И тогда получается, что просто за
[02:03:58.760 --> 02:04:06.200]  простую динамику там на топ-сорте, за O от V плюс E, вы для каждой вершины можете легко понять
[02:04:06.200 --> 02:04:15.760]  выигрышная она или проигрышная. Вот. Понятно? Вот. Это такой самый-самый-самый простой,
[02:04:15.760 --> 02:04:26.040]  вот это сам простой вариант, ациклическая игра. Вот. Значит, ну что, ну вот. Ну да, тут дальше,
[02:04:26.040 --> 02:04:33.840]  дальше дайте тут у нас как бы беседа на самом деле по теории, у нас будет иметь такую ромбовидную
[02:04:33.840 --> 02:04:43.800]  структуру. Потому что когда мы говорим, потому что начинаем мы с ациклических игр, да? Теперь
[02:04:43.800 --> 02:04:53.560]  дальше у нас есть развилка. Мы можем говорить об анализе циклической игра. Вот. А можем пойти
[02:04:53.560 --> 02:05:07.640]  говорить о сумме ациклических игр. Это такие достаточно независимые темы. Вот. Ну, я думаю,
[02:05:07.640 --> 02:05:11.600]  эти возможно вам там, скорее всего, многим из вас более-менее известны. Ну, там по модулю
[02:05:11.600 --> 02:05:25.920]  доказательства. Вот. Ну вот. Да, это анализ неизвестен с доказательством. Ну, мы его сейчас
[02:05:25.920 --> 02:05:32.440]  аккуратно проведем. Да. Но они у нас обе сойдутся. Потому что в итоге это приводит нас к теории Смита,
[02:05:32.440 --> 02:05:43.440]  которая позволит искать сумму циклических игр. То есть максимум, что мы научимся, это такое. То есть
[02:05:43.440 --> 02:05:52.040]  у нас дано несколько графов. То есть это типа как сумма игр. То есть у нас будет несколько графов,
[02:05:52.040 --> 02:05:58.880]  суммарное количество ребер в них будет там где-то порядка 200 тысяч. Там вершины игр. Ну и нам дают
[02:05:58.880 --> 02:06:05.480]  запросы вида. Допустим, мы там стартуем там вот в каждом графе сказано где. Скажите, пожалуйста,
[02:06:05.480 --> 02:06:13.240]  это игра выигрышная, прогрешная или что или как. Вот. Это вот самые вот интересные задачи,
[02:06:13.240 --> 02:06:22.120]  которые мы научимся. Нормально.
[02:06:28.880 --> 02:06:50.040]  Да. Так вот. Эквиваленты. Где написано эквиваленты? Нет, в данном случае под словом экваленты я
[02:06:50.040 --> 02:06:55.680]  подразумевал, что, ну, смотрите, то есть вот игру с палочками я могу проинтерпретировать так.
[02:06:55.680 --> 02:07:02.520]  Вот у меня, допустим, есть вершина от нуля до девятнадцати и я из каждой из каждой вершины
[02:07:02.520 --> 02:07:09.960]  могу пойти сюда, сюда и сюда. И здесь могу пойти сюда, сюда и сюда. Вот в данном случае
[02:07:09.960 --> 02:07:13.480]  под эквалентность я подразумевал ровно это. То есть я могу просто легко представить граф,
[02:07:13.480 --> 02:07:23.480]  в котором будет происходить вот по сути то же самое. Ну вот. То есть просто без изменения
[02:07:23.480 --> 02:07:26.800]  математической сути. Хотя, как бы, важный вопрос, потому что на самом деле понятие
[02:07:26.800 --> 02:07:35.760]  эквивалентной игры у нас будет, значит, оно будет принципиально другое. Вот. Значит, смотрите.
[02:07:35.760 --> 02:07:40.680]  Итак. Значит, вот у нас такой ромбик. То есть у нас такие две линии сойдутся. Ну, начнем мы с,
[02:07:40.680 --> 02:07:46.440]  может быть, более простой. Хотя кто тут простой? Не понятно. Ну, начнем, ладно. Допустим,
[02:07:46.440 --> 02:07:52.160]  значит, сейчас мы перейдем к понятию циклической игра. То есть, предположим, что нам дан граф,
[02:07:52.160 --> 02:07:59.120]  ну, допустим, там миллион вершин, два миллиона ребер. Но циклы в нем есть. Если бы в нем не было
[02:07:59.120 --> 02:08:05.360]  циклов, мы бы, конечно, этот граф решили вот за втока. А что делать, если циклы есть?
[02:08:05.360 --> 02:08:12.720]  Ну, начнем с того, что можно ли, тем не менее, найти, это, разделить вершины на выигрышные или
[02:08:12.720 --> 02:08:21.320]  проигрышные? Ответ. Не факт. Потому что есть всякие интеллектуальные игры вот такого формата.
[02:08:21.320 --> 02:08:35.960]  Вот. Интеллектуальная игра. Да. Как говорится, игра называется прогулка в тюрьме. Да. Вот.
[02:08:35.960 --> 02:08:45.280]  Не, у меня первая мысль была вообще карусель, карусель. Ну, вот это уже. Вот. Нет, если говорить о
[02:08:45.280 --> 02:08:50.440]  более официальных названиях. Нет, есть вообще интеллектуальная игра. Вот. Вот есть вообще такая
[02:08:50.440 --> 02:09:02.400]  интеллектуальная игра из одной вершины. Да. Да. Эта игра называется луп. Да. Вот. Да, это вот одна из самых,
[02:09:02.880 --> 02:09:07.960]  самая такая, самая, одна из самых интеллектуальных игр. Да, интеллектуальнее только вот то же самое,
[02:09:07.960 --> 02:09:14.880]  но без ребра. Но это, ну ладно, там интеллектуальность уже там к толстому восходит,
[02:09:14.880 --> 02:09:23.720]  но это уже другой вопрос. Да. Вот. Ну или есть там у ее напарник еще есть такой вот. Это игра сейв.
[02:09:23.720 --> 02:09:34.040]  Вот такая игра. Заметим, что несмотря на наличие цикла, оказывается, что эта игра выигрышная.
[02:09:34.040 --> 02:09:45.240]  Удивительно. Да, потому что, оказывается, есть выигрышная стратегия не бегай по петле. Вот. Ну,
[02:09:45.240 --> 02:09:50.480]  в текущем пока у нас цикл только один, на самом деле эти игры, в общем, не особо
[02:09:50.480 --> 02:09:58.800]  интересны для анализа. Вот. Но тем не менее вот луп, очевидно, выигрышный и прогрешный не является.
[02:09:58.800 --> 02:10:07.040]  Это типичный пример, ну такой, может не самый типичный, но такой пример ничейной игры. Ну,
[02:10:07.040 --> 02:10:12.200]  бывают, впрочем, разные ситуации. Можно построить пример, когда у нас два варианта ходить по петле или
[02:10:12.200 --> 02:10:21.160]  проиграть. Ну, ну да. А, ну да. Да, да, да. Потому что есть вообще вот неожиданная версия. Вот такая,
[02:10:21.160 --> 02:10:28.640]  допустим. Вот. Вот есть такая вот. Тогда можно принципы прям применять. Говорить, что вот эта
[02:10:28.640 --> 02:10:34.760]  игра проигрышная. Да. Эта игра выигрышная. То есть мы просто поменяем принципы выигрышной. А эта игра
[02:10:34.760 --> 02:10:41.920]  нечейная. Непонятно какая. Но по факту получается нечейная. Потому что, да, каждый игрок знает,
[02:10:41.920 --> 02:10:47.000]  что, так, либо я пойду по петле, либо проиграю. Так, ну ладно, я пойду по петле. И оба будут ходить
[02:10:47.000 --> 02:10:51.920]  по петле, и как бы, то есть дальше игра будет уже не интеллектуально-математическая, у кого нервы
[02:10:51.920 --> 02:10:58.920]  сдадут. Ну, для этого в шахматах придумали правила с треекратным повторением. Но тогда это усложняет
[02:10:58.920 --> 02:11:03.800]  нам граф, поэтому мы такое рассматривать не будем. Вот. Вместо этого мы скажем, а что такое вообще
[02:11:03.800 --> 02:11:10.520]  нечейная игра. Кстати, а как мы делаем ретроанализ условно-шахмат, если там есть вот такие вещи?
[02:11:10.520 --> 02:11:18.680]  В смысле? Раздуваем граф? Ну да. Ну то есть в позиции написано, где находятся белые, где находится
[02:11:18.680 --> 02:11:26.000]  черные, кто ходит, когда последний раз ходила пешка и хит сезона, а какие позиции уже были,
[02:11:26.000 --> 02:11:35.120]  чтобы не было трёхкратного повторения. Да, нет, это называется совсем тупой способ привести
[02:11:35.120 --> 02:11:44.640]  задачу к конечному графу. То есть да, когда компьютеры станут достаточно быстрыми, как бы да, то есть
[02:11:44.640 --> 02:11:53.400]  компьютер просто это будет такой... Ну почему? Нет, на самом деле особой жести нет, потому что
[02:11:53.400 --> 02:12:00.880]  одно дело компьютер решил игру, а другое дело как бы человек это понял, то есть это немножко разные
[02:12:00.880 --> 02:12:07.400]  вещи всё-таки. Нет, пока конечно нет, пока выясняется, что как бы на любой стоквиш найдётся альфа-зера,
[02:12:07.400 --> 02:12:20.120]  но вот поэтому ещё вопрос. Ну вообще да. Кстати, да, вот они ж не проводили тренировку, что давайте
[02:12:20.120 --> 02:12:24.880]  есть альфа-зера, тренированная четыре минуты, а есть альфа-зера, тренированная полчаса. Спрашивайте,
[02:12:24.880 --> 02:12:31.800]  с каким счётом полчаса вынесут четыре минуты? Вот, к сожалению, да, Google... Ну, хотя нет,
[02:12:31.800 --> 02:12:39.720]  нет, скорее всего они, скорее всего они, конечно, проводили такие эксперименты, это да. Ну да,
[02:12:39.720 --> 02:12:43.480]  но правда нет, вот тут в этом смысле аккуратно, потому что заметим, что тут принципиально разные
[02:12:43.480 --> 02:12:48.400]  технологии компьютерные, потому что допустим там все под стоквиши и прочие, там эти все пицунды,
[02:12:48.400 --> 02:12:55.160]  там с этими, там прочими, они там основаны на всяких там альфа-бета отсечениях и отличаются
[02:12:55.160 --> 02:13:03.520]  только оценкой какой-то конечной позиции в общем-то. Не совсем правда. Почему? Тоже есть. А, всё-таки
[02:13:03.520 --> 02:13:31.600]  стали запихивать туда, но окей. Ну да, ну ладно, но давайте попробуем к этому приблизиться,
[02:13:31.880 --> 02:13:41.040]  о чём мы вообще говорили. Так вот, а то мало ли. Ну вот, значит теперь вопрос, что такое игра
[02:13:41.040 --> 02:13:46.480]  нечейная? Ну как вы уже говорили, мы будем говорить, что игра нечейная, если у нас сейчас будет
[02:13:46.480 --> 02:13:51.680]  именно в очень позитивном смысле. То есть часто говорят, что такое игра нечейная, когда ни у кого
[02:13:51.680 --> 02:13:59.520]  из игроков нет выигрышной стратегии. Ну вот, но это не... Что такое нет стратегии? Вот как доказать,
[02:13:59.520 --> 02:14:06.120]  что у игрока нет стратегии? Вот как доказать, что у него нет в принципе стратегии, а не просто
[02:14:06.120 --> 02:14:12.640]  потому что он тупой? Вот. Ну на самом деле я знаю только один надёжный способ, как доказать,
[02:14:12.640 --> 02:14:16.120]  что у первого игрока нет стратегии. Очень просто. Надо доказать, что у второго игрока есть
[02:14:16.120 --> 02:14:24.720]  стратегия, которая не позволит ему выиграть. Поэтому мы будем говорить, игра нечейная, если у каждого
[02:14:24.720 --> 02:14:41.040]  из игроков, у обоих игроков, так я так напишу, у каждого из игроков есть своя непроигрышная
[02:14:41.040 --> 02:14:46.680]  стратегия. То есть отличие, да? То есть выигрышная стратегия, которая позволяет жёстко выиграть,
[02:14:46.680 --> 02:15:03.440]  а непроигрышная, которая позволяет не проиграть. Вот. Но у такого позитивизма есть, собственно,
[02:15:03.440 --> 02:15:12.640]  одна маленькая проблема. А бывают ли игры кроме выигрышных, проигрышных или нечейных? Вот заметим,
[02:15:12.640 --> 02:15:19.240]  на уровне таких определений это вообще говоря не очевидно. Ну это нужно доказать. Да. То есть если
[02:15:19.240 --> 02:15:23.080]  вы написали просто игра нечейная, если она не выигрышная и не проигрышная, тогда да, без вопросов.
[02:15:23.080 --> 02:15:31.520]  Но на таком позитивном уровне всё-таки, знаете, надо доказывать. Но давайте думать, значит.
[02:15:31.520 --> 02:15:42.160]  Значит, попытаемся, ну, значит, попытаемся, значит, решать. Итак, что же у нас будет? Значит, что же тут у нас будет?
[02:15:42.160 --> 02:16:03.840]  Ну вот. Как там? Ой, вонючка. Так. Так, значит, это мы убираем. Нет, мы убираем. Хочется доказать,
[02:16:03.840 --> 02:16:09.680]  что в духе, что если у какого-то из игроков нет выигрышной стратегии, поэтому нет непроигрышной,
[02:16:09.680 --> 02:16:20.480]  то он должен проиграть. Ну. Не кажется, это должно быть достаточно, чтобы говорить ничего? Да. Но мы пойдем другим путем.
[02:16:20.480 --> 02:16:26.880]  Значит, мы скажем так. А какие у нас способы вообще сейчас есть доказать, что игра выигрышная или
[02:16:26.880 --> 02:16:37.520]  проигрышная? У нас по сути пока есть только вот эти принципы. Правда? Так вот, идея такая. Давайте
[02:16:37.600 --> 02:16:49.120]  применять эти принципы пока можем. Более того, мы их еще и будем применять красиво. А именно. Но очевидно,
[02:16:49.120 --> 02:16:52.880]  что первая вершина, которую мы можем в графе применить какой-нибудь принцип, это очевидно
[02:16:52.880 --> 02:17:00.080]  принцип проигрышности к тем вершинам, из которых ребер не торчит. Правда? Так вот, мы сделаем даже
[02:17:00.160 --> 02:17:19.200]  более аккуратную вещь. Мы выпишем сразу себе все такие вершины и объявим их. Нет, неправильно. Вот. Мы
[02:17:19.200 --> 02:17:28.800]  объявим их проигрышными и назовем их слоем номер ноль. Почему мы их назовем слоем номер ноль? Потому что
[02:17:28.800 --> 02:17:43.360]  заметим, что из этих вершин игра будет длиться ноль ходов. Но тут без вариантов. Хорошо. Применяем
[02:17:43.360 --> 02:17:47.760]  принцип проигрышности пока можем. Вот все эти вершины оказались таким. Принцип проигрышности
[02:17:47.760 --> 02:17:56.720]  закончился. Теперь к некоторым вершинам, наверное, можно применить принцип выигрышности. Вот давайте
[02:17:56.720 --> 02:18:06.000]  тоже его применять как можем. Ну что это за вершины? Очевидно, это вершины, из которых есть ход куда-то
[02:18:06.000 --> 02:18:16.480]  вот в этот слой. Может даже не один, но хотя бы один точно есть. Вот. При этом заметим, что эти вершины
[02:18:16.480 --> 02:18:26.560]  мы назовем выигрышными из слоя номер один. Почему? Потому что из этих игр, то есть из этих вершин игра
[02:18:26.560 --> 02:18:33.000]  может длиться один ход. Ну что значит длиться? Ну тут по-разному. Потому что заметим, что если вот здесь из
[02:18:33.000 --> 02:18:38.560]  этих вершин ребер нет, то из этих вершин помимо вот этих ребер может быть что угодно. Может быть ребра
[02:18:38.560 --> 02:18:45.640]  из, просто в другую вершину такую же, может быть даже в себя тут какие-то вот такие ребра, а может
[02:18:45.640 --> 02:18:53.640]  быть вообще ребра в какие-нибудь вершины там еще, которые в эти слои не попали. Понимаете, да? Но
[02:18:53.640 --> 02:19:00.000]  тем не менее, если мы будем говорить о том, что мы даже себе поставим такую цель, что если выигрывающий
[02:19:00.000 --> 02:19:04.640]  игрок хочет выиграть как можно быстрее, а проигрывающий хочет наоборот тянуть время как может,
[02:19:04.640 --> 02:19:12.960]  то тогда при идеальной игре, значит игра будет длиться из этих вершин один ход. Ну выигрышный игрок
[02:19:12.960 --> 02:19:21.240]  просто сразу расставит все точки над ею, соответственно. Вот, значит хорошо, принцип выигрышности
[02:19:21.240 --> 02:19:27.720]  наприменяли, прям наприменяли, наприменяли, наприменяли, но теперь значит и выигрышные вершины
[02:19:27.720 --> 02:19:36.440]  закончились временно, но зато появились новые проигрышные вершины. Что это за вершины? Ну это
[02:19:36.440 --> 02:19:43.240]  очевидно вершины, у которых все ребра, хотя бы одно ребро есть, ну чтобы они сюда не попали, да, но
[02:19:43.240 --> 02:19:52.360]  тем не менее все эти ребра ведут куда-то в слой В1. Вот как-то вот так, вот может вот так, вот так. Вот
[02:19:52.360 --> 02:20:05.560]  вот. Эти вершины мы будем называть P2, потому что из них оптимальная игра будет длиться два хода. Ну вот
[02:20:05.560 --> 02:20:12.760]  применяем, применяем, применяем, применяем, применяем, применяем. Ну хорошо, больше проигрышных вершин
[02:20:12.760 --> 02:20:18.520]  пока нет, начинаем применять принцип выигрышности. И появляются вершины, про которых мы знаем только
[02:20:18.520 --> 02:20:25.240]  одно, что из них нет ребер в P0, но есть ребра в P2, хотя бы одно. То есть все, что мы можем знать,
[02:20:25.240 --> 02:20:29.680]  то что вот такого вот таких ребер нет. А могут быть вполне себе ребра вот сюда, могут, кстати,
[02:20:29.680 --> 02:20:36.120]  обратно ребра вполне себе идти. Вот. Но хотя бы одно вот какое-то ребро из каждой вершины обязательно
[02:20:36.120 --> 02:20:47.360]  будет иметь место. Вот так вот. Это мы называем очевидно в V3. Вот. Вот обратите внимание, да,
[02:20:47.400 --> 02:20:52.360]  вот из какой-то вот этой вот вершины, да. Да, кстати, обратите внимание, вот из этих вершин вполне себе,
[02:20:52.360 --> 02:20:59.200]  ну вот из этих вершин, ну вполне себе куда-нибудь вот сюда на самом деле вполне себе ребро быть могло.
[02:20:59.200 --> 02:21:07.280]  Но из этой вершины так ходить невыгодно. Вот. А могли быть сюда, но это вообще невыгодно, потому что
[02:21:07.280 --> 02:21:14.200]  тупо проигрываем. Вот. Но это соответственно V3. То есть если делать оптимальный ход, то как
[02:21:14.200 --> 02:21:22.000]  оптимальные ходы, то как бы игра будет длиться три хода. Вот. Ну и так можно повторять. Потому что
[02:21:22.000 --> 02:21:35.080]  дальше будет идти слой, соответственно, P4. Что можно сказать про слой P4? Что все ребра ведут либо
[02:21:35.080 --> 02:21:40.920]  в V3, либо в V1. Причем из каждой вершины хотя бы одно ребро в V3 идет. Ну потому что если все
[02:21:40.920 --> 02:21:58.680]  ребра придут в V1, то очевидно мы бы его просто в P2 бы уже записали. Правда? Вот. Да. То есть вот как-то так, вот так, вот так, вот так, вот так, вот так, вот так, вот так. Ну и там всякая вот. Такая вот, вот так.
[02:21:58.680 --> 02:22:08.280]  Мы же не можем вершину сразу записать в V2, если у него все ребра в V1? Нет. Если у него одно ребро в V1, мы не можем написать.
[02:22:08.280 --> 02:22:22.360]  А, да, потому что надо все. Потому что надо все. То есть знаете как-то, как-то в старой книжке говорили. То есть допустим на вас упали папины штаны. Что это значит? Ну все что угодно. Но если на вас дружно
[02:22:22.360 --> 02:22:26.760]  посыпались папины рубашки и мамины платья, то можете успокоиться. Вы забрались в плотяной шкаф,
[02:22:27.000 --> 02:22:36.120]  и сейчас вас оттуда за шкирку будут вынимать. Вот. Вот здесь примерно такая же ситуация. То есть допустим там у вас есть ребро в V1. Что это может
[02:22:36.120 --> 02:22:52.600]  значить? Ну все что угодно. Но если на вас дружно посыпались ребра, все из которых торчат в V1, можете успокоиться. Вы в P2. Вот. А если там есть все V3, V1 и есть тройбан, то значит вы в P4.
[02:22:52.600 --> 02:23:03.480]  А вот с выигрышностью наоборот. Если у вас есть ребро, значит соответственно в P, там какой-то вот скажем вот теперь у вас появились, там в следующем слое будут
[02:23:03.480 --> 02:23:14.360]  вершины у которых нет ребер в P2 и P0, но есть в P5. То есть в P4. Значит это V5. Тут V5. Ну и так. Ну еще короче и так далее.
[02:23:14.600 --> 02:23:25.080]  Сейчас мы утверждаем, что их статус, эти ВП, они всегда зафиксируются. Да. И то, что ты на максимальной игре, то есть если я пытаюсь укоротить, они соберут.
[02:23:25.080 --> 02:23:34.440]  Да, если выигрывший укорачивает, а проигрывающий и затягивает, то длина игры будет ровно такая. И вы просто прям аккуратно по индукции, то есть на самом деле то, что мы сейчас
[02:23:34.440 --> 02:23:38.520]  доказываем, мы прям по индукции доказываем, что прям конструктивно, что в каждом слое происходит именно так.
[02:23:43.160 --> 02:23:55.640]  Ну вот. Ну вот V5 почему это так, например? Потому что кто такие V5? Это те, у кого после окончания работы с четвертым слоем неожиданно оказались выигрышными, а раньше они выигрышными еще не являлись.
[02:23:55.640 --> 02:24:04.200]  В смысле мы об этом не узнали. Как это могло произойти? Это могло произойти по одной простой причине. У них нет ребер в P2 и P0, но есть ребер в P4.
[02:24:04.440 --> 02:24:23.000]  Логично, да? Вот. Значит, вот эти ребры есть. Ну там какие еще там ребры есть? В3 у них могут быть ребра, V1, пожалуйста, и наоборот, пожалуйста, все что угодно.
[02:24:23.960 --> 02:24:32.440]  Вот. Ну и так далее. После того, как мы обработали V5, у нас могли появиться новые проигрышные вершины. Что это за проигрышные вершины?
[02:24:32.440 --> 02:24:41.240]  Ну это очевидно. Во-первых, это вершины, у которых все ребра ведут выигрышные, а во-вторых, хотя бы одно ребро ведет сюда, потому что иначе она попала либо сюда, а то и раньше.
[02:24:41.240 --> 02:25:02.760]  Ну потому что нам сейчас принципиально, когда вершина и была идентифицирована нами как проигрышная. То есть как бы у нее, видимо, были уже какие-то ходы в выигрышные вершины, но как бы именно с появлением этого слоя появилась последний гвоздь в крышке гроба.
[02:25:02.760 --> 02:25:07.640]  Понятно, вроде, да?
[02:25:07.640 --> 02:25:13.000]  Сейчас я не понимаю, почему у нас длина будет, ну почему меньше?
[02:25:13.000 --> 02:25:26.920]  Ну потому что, смотри, ну потому что идея такая, то есть ну как бы если игрок в проигрыши вот думает, куда ему пойти, если он пойдет сюда, то значит игра будет длиться четыре хода, да?
[02:25:26.920 --> 02:25:31.320]  А если пойдет сюда, то будет длиться шесть ходов.
[02:25:32.280 --> 02:25:37.160]  Утверждение. Может ли он куда-то пойти сюда, ответ? Может. Почему?
[02:25:37.160 --> 02:25:44.440]  Ну просто потому что, если бы из этой вершины можно было пойти только в v3 v1, то эта вершина попала бы уже в этот слой.
[02:25:44.440 --> 02:25:45.400]  Так, хорошо. А почему мы не могли, почему не могло бы быть какого-то другого пути, который привел бы, ну какой-то другой выигрышный вершин, который не лишит v3 v1 v5, и при этом привело бы нас к проигрышу, потому что, ну понятно, давайте чего-нибудь
[02:26:15.400 --> 02:26:20.040]  А потом, нет, пока нет, у нас просто нет, просто мы про эти вершины как бы у нас все доказательно.
[02:26:29.800 --> 02:26:43.320]  Ну, значит там, так, ну как сказать, да, по-разному можно проводить аккуратное доказательство, можно просто рассмотреть этот, так сказать, какой-нибудь оптимальный путь, наверное, и доказать, что там,
[02:26:43.640 --> 02:26:47.000]  то есть все его вершины на самом деле были, уже попадали в эти слои.
[02:26:48.120 --> 02:26:56.840]  Ну, то есть мы просто на каждом шаге доказываем, что у нас, то есть здесь мы берем все вершины, из которых, вот, проигрышные игры, у которых длина будет 0, игры, да?
[02:26:57.720 --> 02:27:07.080]  То дальше мы берем все вершины, у которых, потому что что такое выигрышные вершины с длиной игры 1? Это игры, из которых существует ход в проигрыш с ходом 0, да?
[02:27:08.040 --> 02:27:10.040]  Ровно все такие вершины мы выписали.
[02:27:11.000 --> 02:27:23.320]  Сейчас, Филипп Дмитриевич, почему из наших определений не очевидно, что все являются на три типа? У нас же определение ничейной игры, это просто отрицание первого и отрицание второго.
[02:27:23.320 --> 02:27:37.560]  Нет, ну, я не знаю, лично для меня, как бы, утверждение, что, как бы, нет выигрышной стратегии, у первого нет выигрышной у второго, и утверждение о том, что у каждого из них есть не проигрышная стратегия, это не одно и то же.
[02:27:40.040 --> 02:27:43.960]  Ну, просто нет выигрышной может означать, что ты вообще проигрываешь всегда.
[02:27:43.960 --> 02:27:50.600]  То есть, может быть, как-то можно очень жестче сформулировать, но как-то для меня на уровне, просто на уровне русского языка это разные вещи.
[02:27:57.160 --> 02:28:05.960]  То есть, может быть, теоретически на уровне языка можно как-то аккуратно действительно это вывести, но лучше сделаем по-другому.
[02:28:06.600 --> 02:28:18.360]  Так, вот, возвращаясь к этому, ну, на самом деле так, можно построить в явном виде эти слои, запомнив свойства, но, по крайней мере, что не вызывает сомнений, так это то, что эти вершины реально проигрышные или выигрышные, пока плевать на какое количество ходов.
[02:28:19.880 --> 02:28:26.600]  Ну да, мы вот буквально это и делаем, потому что мы применяем честные проигрышность и выигрышность, вопрос, в какой слой она попала, и свойства мы знаем.
[02:28:26.600 --> 02:28:32.920]  Если вершина попала в слой V5, значит у нее есть ребров P4, но нету слой ребров P2 и P0.
[02:28:32.920 --> 02:28:38.440]  Пока это не значит, что игра будет длиться ровно столько, это значит пока это.
[02:28:38.440 --> 02:28:41.000]  Пока еще совершенно не понятно, что делать с остальными.
[02:28:41.000 --> 02:28:46.920]  Вот, а что значит с остальными? Ну, рано или поздно принцип закончится, то есть следующий слой обрубится, да?
[02:28:46.920 --> 02:28:47.480]  Да.
[02:28:47.480 --> 02:28:48.040]  Да.
[02:28:48.040 --> 02:28:49.080]  Ну, сейчас.
[02:28:49.080 --> 02:28:49.720]  Итак.
[02:28:49.720 --> 02:28:51.480]  У нас конечный граф.
[02:28:51.560 --> 02:28:59.080]  Да, у нас конечный граф, но у нас, но проблема в другом, то есть да, то есть сколько-то у нас слоев еще будет, да, то есть сколько-то слоев будет-будет,
[02:28:59.080 --> 02:29:06.840]  если повезет, ну может нам повезет, и на самом деле слои, то есть просто вершины закончатся, и тогда получается все вершины у нас выигрышные и проигрышные.
[02:29:08.280 --> 02:29:09.160]  Вот, кайфец.
[02:29:10.360 --> 02:29:15.560]  Но может так случиться, что вершины не закончились, а слои закончились.
[02:29:16.360 --> 02:29:22.280]  Ну, просто оказалось, что тут и принцип выигрышности уже вот нельзя применять, но и принцип проигрышности применять тупо некому.
[02:29:24.840 --> 02:29:38.120]  Тогда остались вершины, которые мы обзовем X, такой слой X, так сказать, то есть вершины, которые в эти исходные слои не попали.
[02:29:38.120 --> 02:29:50.040]  Ну вот, так вот, сейчас мы просто докажем, что все эти вершины являются нечейными вот прям вот в этом жестком определении.
[02:29:54.040 --> 02:29:54.840]  Как мы это сделаем?
[02:29:55.640 --> 02:29:56.440]  Да очень просто.
[02:29:57.960 --> 02:30:05.000]  Потому что утверждение такое, давайте подумаем, куда из, ну, во-первых, заметим, что из каждой из этих вершин ребра в принципе есть, правда?
[02:30:05.640 --> 02:30:06.920]  Иначе они не будут впадать.
[02:30:06.920 --> 02:30:07.400]  Да.
[02:30:08.040 --> 02:30:09.240]  Ну, куда эти ребра есть?
[02:30:10.200 --> 02:30:14.600]  Заметим, что ребер в проигрышные вершины здесь из X быть не может.
[02:30:16.280 --> 02:30:17.160]  А куда могут быть?
[02:30:18.200 --> 02:30:20.760]  Ну, выигрышные могут быть вполне.
[02:30:21.240 --> 02:30:22.600]  Ну, еще обязательно куда-то.
[02:30:22.600 --> 02:30:34.680]  А могут быть и внутри X, но заметим, что из каждой вершины обязательно есть хотя бы одно ребро в другую вершину слоя X, ну или в себя любимую.
[02:30:35.880 --> 02:30:37.880]  Иначе их уже можно выписать в проигрышные.
[02:30:38.520 --> 02:30:46.600]  Да, потому что совершенно верно, да, потому что если все ребра ведут в выигрышные, значит мы бы их записали в проигрышные на какую-то там, а мы говорим, что принцип нельзя.
[02:30:46.600 --> 02:30:54.200]  То есть получается вот такая интересная штука, да, что могут, то есть из каждой вершины есть хотя бы одно ребро в X и может быть есть ребра в V.
[02:30:57.640 --> 02:30:58.760]  Но теперь утверждение.
[02:30:59.720 --> 02:31:00.920]  Все эти ограниченные.
[02:31:01.800 --> 02:31:07.480]  Ну, тут доказательства, может, самое короткое доказательство, по-моему, вот, проводится так.
[02:31:07.480 --> 02:31:14.520]  Первое утверждение, докажем, что у второго игрока есть в любой вершине X непроигрышная стратегия, у второго.
[02:31:16.520 --> 02:31:17.720]  Ну, как мы это докажем?
[02:31:17.720 --> 02:31:19.880]  Вот мы это будем делать всегда по одному принципу.
[02:31:19.880 --> 02:31:21.560]  Рассмотрим ход первого игрока, да?
[02:31:23.080 --> 02:31:24.440]  Куда он нас может привести?
[02:31:24.440 --> 02:31:27.560]  Он нас может привести либо в X, либо в V.
[02:31:28.120 --> 02:31:33.400]  Ну, если он нас приведет в V, то у нас есть, как бы, мы можем не проиграть, просто путем выигрыша.
[02:31:35.640 --> 02:31:37.400]  То есть типа лучшая защита это нападение.
[02:31:38.760 --> 02:31:39.240]  Вот.
[02:31:40.120 --> 02:31:41.960]  Но первый игрок может...
[02:31:41.960 --> 02:31:45.800]  Сейчас, подождите, если у нас ход идет в V, то мы...
[02:31:45.800 --> 02:31:47.560]  Да, но мы второй игрок, напоминаю.
[02:31:48.280 --> 02:31:50.920]  То есть если первый игрок пойдет сюда, значит мы выиграли, да?
[02:31:52.280 --> 02:31:54.520]  Но если первый игрок пойдет в X,
[02:31:55.480 --> 02:31:59.960]  то у нас тогда получается, что у нас заведомо будет ход.
[02:31:59.960 --> 02:32:03.800]  Ну, у нас будет ход в X, и мы по нему пойдем.
[02:32:03.800 --> 02:32:05.160]  По-любому.
[02:32:05.160 --> 02:32:07.400]  Ну, если их несколько, выберем любой.
[02:32:07.400 --> 02:32:11.080]  И заметьте, что эта стратегия гарантирует нам непроигрыш.
[02:32:11.080 --> 02:32:15.160]  Потому что после каждого хода первого игрока гарантируется, что у нас ход...
[02:32:15.160 --> 02:32:22.120]  Ну, то есть гарантируется, что у нас ход будет.
[02:32:22.120 --> 02:32:27.240]  То есть либо первый игрок будет вечно нас гонять по X,
[02:32:27.240 --> 02:32:30.040]  и мы будем с ним вечно ходить по X, и не проиграем.
[02:32:30.040 --> 02:32:33.560]  Либо в какой-то момент у него сдадут нервы, и он все-таки пойдет в V.
[02:32:33.560 --> 02:32:34.760]  И тогда мы тупо выиграем.
[02:32:36.920 --> 02:32:37.720]  То есть вывод.
[02:32:37.720 --> 02:32:42.840]  У второго игрока в любой вершине X есть непроигрышная стратегия.
[02:32:45.080 --> 02:32:48.760]  Остается только доказать, что у первого игрока тоже есть и проигрышная стратегия.
[02:32:48.760 --> 02:32:51.000]  Ну, все очень...
[02:32:51.000 --> 02:32:52.440]  Да, но у него стратегия очень простая.
[02:32:52.440 --> 02:32:56.280]  Так, у меня есть ход в X, я иду в X и теперь не проигрываю, как второй игрок.
[02:32:56.280 --> 02:32:56.680]  Все.
[02:32:56.680 --> 02:33:02.920]  Вот оптимальнее вот так просто начать со второго, а потом первый просто очень быстро к нему сводится.
[02:33:02.920 --> 02:33:05.240]  Вот, понятно?
[02:33:05.240 --> 02:33:07.000]  Вот.
[02:33:07.000 --> 02:33:15.400]  То есть таким образом получается, что все, что не попало в эти вершины, то есть в эти слои,
[02:33:15.400 --> 02:33:16.760]  это не чейные вершины.
[02:33:16.920 --> 02:33:20.760]  То есть таким образом мы доказываем, что, по крайней мере, в таких играх на графах
[02:33:20.760 --> 02:33:24.120]  действительно все игры выигрышные, проигрышные или не чейные.
[02:33:25.960 --> 02:33:27.160]  Вот в конструктивном смысле.
[02:33:29.080 --> 02:33:29.640]  Остается...
[02:33:29.640 --> 02:33:30.120]  Ну вот.
[02:33:30.120 --> 02:33:31.480]  Правда, теперь вот остается только...
[02:33:31.480 --> 02:33:35.160]  Вот был вопрос действительно, что теперь, пользуясь тем, что это все боевая ничья,
[02:33:35.160 --> 02:33:42.360]  да, то мы теперь можем, теперь можно уже аккуратно доказать, что, как бы, если у нас тут выигрыш и проигрыш,
[02:33:42.360 --> 02:33:46.680]  то длина игры, если выигрывающий будет стараться выиграть побыстрее, а проигрывающий
[02:33:46.680 --> 02:33:50.200]  попытается проигрывать как можно медленнее, то длина игры будет ровно такая.
[02:33:50.200 --> 02:33:52.440]  Почему?
[02:33:52.440 --> 02:33:59.080]  Ну просто заметим, что согласно выигрышной стратегии, ну заметим, что проигрывающий игрок,
[02:33:59.080 --> 02:34:05.320]  да, он может, то есть он может сделать ход в следующий слой всегда.
[02:34:05.320 --> 02:34:10.520]  Ну может, иногда может перескочить, но ему это просто невыгодно, да.
[02:34:11.480 --> 02:34:15.480]  А выигрывающий, наоборот, он может сделать ход в следующий слой, но перескочить,
[02:34:15.480 --> 02:34:19.800]  там, перескочить он может только, если пойдет в другую выигрышную вершину, а он этого делать не будет,
[02:34:19.800 --> 02:34:22.360]  потому что он тогда проиграет.
[02:34:22.360 --> 02:34:27.320]  Поэтому тогда отсюда аккуратненько по индукции получается, что длина игры будет ровно такая.
[02:34:27.320 --> 02:34:32.360]  Да, уже после того, как бы показали, что, то есть там могут быть, то есть там индукция изначально не работала,
[02:34:32.360 --> 02:34:39.640]  потому что, как бы, из вешного слоя есть ходы даже и в эти иксики, вот.
[02:34:39.720 --> 02:34:43.240]  Но в этих иксиках мы уже сказали, что там, как бы, он туда ходить не будет,
[02:34:43.240 --> 02:34:47.240]  потому что там противник, собственно, гарантирует себе не проигрыш.
[02:34:47.240 --> 02:34:49.240]  Это ему тоже не надо.
[02:34:49.240 --> 02:34:53.240]  Потому что основной принцип все-таки, да, что если мы можем выиграть, то мы выигрываем.
[02:34:53.240 --> 02:34:58.040]  Вот, там разные подлянки, потому что там, скажем, как бы, если уж говорить о задачах из лоши,
[02:34:58.040 --> 02:35:03.080]  то у кого-то из поколений была вообще эпическая задача, там, что два котенка там тоже играют
[02:35:03.080 --> 02:35:05.720]  с подобного рода игру, но у них теперь, наоборот, фишка.
[02:35:05.800 --> 02:35:09.800]  Выигрывающий хочет растянуть удовольствие, выигрывать как можно дольше,
[02:35:09.800 --> 02:35:13.800]  а проигрывающий, наоборот, хочет закончить игру как можно быстрее.
[02:35:13.800 --> 02:35:19.800]  Вот, но там, да, но там, заметим, выясняется, но там может выясниться интересная подробность,
[02:35:19.800 --> 02:35:25.800]  что там, вот, при наличии вот подобного рода ребер, оказывается, что игра может длиться вечно.
[02:35:25.880 --> 02:35:27.880]  Ой.
[02:35:29.880 --> 02:35:35.880]  Да, такое бывает, там вот интересные эти случаи, там интересные эти случаи рассмотреть, да.
[02:35:35.880 --> 02:35:37.880]  Вот.
[02:35:37.880 --> 02:35:39.880]  Он в любой момент может закончить.
[02:35:39.880 --> 02:35:41.880]  Да.
[02:35:41.880 --> 02:35:43.880]  Но он не хочет, да.
[02:35:43.880 --> 02:35:45.880]  Но он не хочет.
[02:35:47.880 --> 02:35:49.880]  Ну, садизм.
[02:35:49.880 --> 02:35:51.880]  Вот.
[02:35:51.960 --> 02:35:53.960]  О, да, добрый.
[02:35:53.960 --> 02:35:55.960]  Кстати, а кто, а кто встречался с задачей?
[02:35:55.960 --> 02:35:57.960]  Только подивите, кто встречался с задачей?
[02:35:57.960 --> 02:35:59.960]  Вариации задачи прокатят.
[02:36:01.960 --> 02:36:03.960]  Да ладно.
[02:36:03.960 --> 02:36:05.960]  Так бывает.
[02:36:05.960 --> 02:36:07.960]  Ну ладно, придется, да ладно, придется дадизм вам понравится, да.
[02:36:07.960 --> 02:36:13.960]  Нет, ну это проще, чем там это, писать красночерное дерево со сплетом и ржом, да.
[02:36:17.960 --> 02:36:19.960]  Ну почти все что угодно проще.
[02:36:20.040 --> 02:36:22.040]  Да.
[02:36:22.040 --> 02:36:24.040]  Ага, а если я тебя попрошу софт хип написать?
[02:36:24.040 --> 02:36:26.040]  Ну ты почти.
[02:36:26.040 --> 02:36:28.040]  Вот граната Чизеля просто открою.
[02:36:30.040 --> 02:36:32.040]  Черт.
[02:36:32.040 --> 02:36:34.040]  Как бы элементарно.
[02:36:34.040 --> 02:36:36.040]  Ну да, а потом выяснится, что он не работает.
[02:36:38.040 --> 02:36:40.040]  Нет, ну я не знаю, я не проверял.
[02:36:40.040 --> 02:36:42.040]  Ну, кажется, кое-что публикованное в статье должен бы работать.
[02:36:42.040 --> 02:36:44.040]  Ну.
[02:36:44.040 --> 02:36:46.040]  Он об этом не знает.
[02:36:46.040 --> 02:36:48.040]  Ну, валя, а что думаете, кто-то его проиграл?
[02:36:48.120 --> 02:36:50.120]  Ну валя, а что думаете, кто-то его переписывал, запускал?
[02:36:54.120 --> 02:36:56.120]  Думаю, за столько лет, да.
[02:36:56.120 --> 02:36:58.120]  Ну да, ну там, ну да.
[02:36:58.120 --> 02:37:00.120]  Ну окей.
[02:37:06.120 --> 02:37:08.120]  Вот.
[02:37:08.120 --> 02:37:10.120]  Так.
[02:37:10.120 --> 02:37:12.120]  Ладно, значит, смотрите.
[02:37:12.120 --> 02:37:14.120]  Так, ладно, нам еще кое-что тут надо добить, на самом деле.
[02:37:14.120 --> 02:37:16.120]  Так, что, вопросы еще какие-то возникли?
[02:37:16.200 --> 02:37:18.200]  Вообще але сейчас pressing on is open.
[02:37:18.200 --> 02:37:20.200]  Что, вопросы еще какие-то возникли?
[02:37:20.200 --> 02:37:22.200]  Да?
[02:37:22.200 --> 02:37:26.200]  Ну и если взять просто отрицание третьего определения,
[02:37:26.200 --> 02:37:28.200]  то мы получим одно, и я про это говорю.
[02:37:28.200 --> 02:37:30.200]  У каждого есть непроигрышное.
[02:37:30.200 --> 02:37:32.200]  Отрицания у одного нет.
[02:37:32.200 --> 02:37:34.200]  Ну как-то я не понимаю.
[02:37:34.200 --> 02:37:36.200]  Вот как так на уровне с vorher.
[02:37:36.200 --> 02:37:39.240]  То есть, допустим, пусть у второго и chyba нет непроигрышной
[02:37:39.240 --> 02:37:41.240]  стратегии, а как следует из этого, что первая есть выигрышная?
[02:37:41.240 --> 02:37:43.240]  Нет, если у него нет непроигрышной, вообще все.
[02:37:43.240 --> 02:37:52.240]  А если у кого-то все проигрышные, то тогда полно?
[02:37:52.240 --> 02:37:59.240]  Ну вот не знаю. Лично у меня тут какие-то сомнения еще вызывают. Возможно, если прописать формальное определение стратегии, конечно.
[02:37:59.240 --> 02:38:04.240]  Но стратегия как набор ходов, то может быть что-то подобное доказать и можно.
[02:38:04.240 --> 02:38:11.240]  Просто как будто если у человека все стратегии проигрышные, это достаточно понятная ситуация.
[02:38:11.240 --> 02:38:17.240]  Но все равно возникает интуиция. Все равно может там конкретные стратегии проигрышные.
[02:38:17.240 --> 02:38:25.240]  Но если там призвать на помощь за эту самую молитву, которую мы уже упоминали, то может и сработает.
[02:38:25.240 --> 02:38:30.240]  То есть мало ли. Потому что стратегия как бы это все-таки что-то ограничивающее.
[02:38:30.240 --> 02:38:34.240]  Что мы жестко делаем вот так. А может быть там еще что-то привлечь может.
[02:38:34.240 --> 02:38:39.240]  Но вот подобным методом доказали, что на самом деле нет. Тут все достаточно четко.
[02:38:39.240 --> 02:38:44.240]  Четко, конструктивно, позитивно. В каждой вершине четко прописано, что кому надо делать.
[02:38:44.240 --> 02:38:47.240]  Остается только маленький вопрос, прежде чем мы пойдем на перерыв.
[02:38:47.240 --> 02:38:50.240]  А за какое всем точку мы вообще вот это можем все проделать?
[02:38:50.240 --> 02:39:00.240]  Вот как.
[02:39:00.240 --> 02:39:04.240]  Ну да.
[02:39:04.240 --> 02:39:11.240]  Ну на самом деле по большому счету да.
[02:39:11.240 --> 02:39:15.240]  То есть давайте запустим БФС по обратным ребрам. Но БФС хитрый такой.
[02:39:15.240 --> 02:39:23.240]  То есть мы будем говорить, что сначала мы будем добавлять в очередь все вершины, у которых нет ребер.
[02:39:23.240 --> 02:39:27.240]  Нет, ладно, вру, не так. Сначала мы добавим все вот эти вершины в очередь.
[02:39:27.240 --> 02:39:32.240]  И объявим их проигрышными с нулем и добавим в очередь.
[02:39:32.240 --> 02:39:39.240]  И дальше, когда у нас в очереди, мы говорим вот мы достаем вершину и допустим это вершина из П, там что-нибудь там 4.
[02:39:40.240 --> 02:39:43.240]  Тогда перебираем все ребра ведущие в нее.
[02:39:43.240 --> 02:39:50.240]  И если эти ребра еще не в очереди, да, то есть кто-то уже там давно в очереди, или там уже побывал давно, это не интересно.
[02:39:50.240 --> 02:39:58.240]  Но если вот эта вершина еще у нас не была, то мы ее добавляем в очередь, обозначая как В5.
[02:39:58.240 --> 02:39:59.240]  Вот.
[02:39:59.240 --> 02:40:02.240]  Это если она проигрышная. В чем там плевать, есть еще ребра нет.
[02:40:02.240 --> 02:40:11.240]  А если выигрышная, то когда мы ее достаем из очереди, тогда мы прибираемся по всем ребрам ведущим в нее и как бы удаляем их.
[02:40:11.240 --> 02:40:19.240]  Но самый простой способ удалить их, это просто в каждой вершине хранить, а сколько ребер у нее торчащих еще живы.
[02:40:19.240 --> 02:40:22.240]  То есть надо просто счетчик в каждой вершине уменьшить на 1.
[02:40:22.240 --> 02:40:31.240]  И сказать при этом, что если оказалось, что счетчик достиг нуля, вот тут допустим счетчик 2, тут счетчик 3, а тут счетчик стал 0.
[02:40:31.240 --> 02:40:37.240]  То значит торжественно объявляем, что эта вершина П6, и мы ее торжественно добавляем в очередь.
[02:40:37.240 --> 02:40:43.240]  То есть заметим, что этот BFS пробежится ровно по слоям.
[02:40:43.240 --> 02:40:49.240]  То есть сначала у него будут П0, когда он достанет все эти вершины из очереди, у него в слоях будут в точности В1.
[02:40:49.240 --> 02:40:54.240]  Когда он обработает все В1, там будет в очереди находиться в точности П2, ну и так далее.
[02:40:54.240 --> 02:40:56.240]  Понятно, да?
[02:40:56.240 --> 02:40:59.240]  То есть таким образом получается О от В плюс Е.
[02:41:00.240 --> 02:41:04.240]  Вот, ну обычно вот этот алгоритм обычно и называется ретроанализ.
[02:41:05.240 --> 02:41:12.240]  То есть это еще сокращение, потому что это обычно называется что-то типа retrograde analysis, там что-то в этом роде.
[02:41:18.240 --> 02:41:21.240]  Так что вот такая вот веселья.
[02:41:21.240 --> 02:41:35.240]  Так что вот таким образом получается, что если у нас любой граф, который мы хотя бы можем адекватно считать и похоронить, мы можем легко решить.
[02:41:35.240 --> 02:41:40.240]  Но игры бывают и более сложные.
[02:41:44.240 --> 02:41:48.240]  То есть на самом деле один из способов это действительно сделать сумму игр.
[02:41:49.240 --> 02:41:51.240]  А что такое сумма игр?
[02:41:51.240 --> 02:41:58.240]  А сумма игр, ну давайте сразу скажу на пальцах, что представьте себе, что у нас такая игра, у нас есть два графа и две фишки.
[02:41:59.240 --> 02:42:05.240]  И каждый раз игрок выбирает какую фишку двигать и двигает ее.
[02:42:05.240 --> 02:42:09.240]  Проигрывает тот, кто не может сделать ход прям не там, не там.
[02:42:10.240 --> 02:42:18.240]  То есть тогда оказывается, что эту игру достаточно легко свести к игру на одном графе, только количество вершин там будет типа произведения.
[02:42:19.240 --> 02:42:22.240]  То есть там есть эти карты произведения, прям честно забывать.
[02:42:22.240 --> 02:42:24.240]  А хочется быстрее, да.
[02:42:26.240 --> 02:42:30.240]  Но оказывается на циклических рафах это делается совсем легко.
[02:42:31.240 --> 02:42:35.240]  Ну а на циклических, ну там за более сложную симпатику тоже делается.
[02:42:36.240 --> 02:42:41.240]  Ну первую часть мы обсудим сегодня, а следующую обсудим в следующий раз.
[02:42:41.240 --> 02:42:43.240]  А пока перерыв.
[02:42:44.240 --> 02:42:46.240]  Нет, это еще не конец, сейчас еще только 12.10.
[02:42:47.240 --> 02:42:48.240]  Вот.
[02:43:04.240 --> 02:43:06.240]  Итак, следующий номер нашей программы.
[02:43:07.240 --> 02:43:12.240]  Значит мы попытаемся просуммировать пока, пока не менее ациклический игр.
[02:43:13.240 --> 02:43:15.240]  Но я уже кратенько сказал, что это такое.
[02:43:15.240 --> 02:43:18.240]  Так, ну ладно, про выигрышность, проигрышность, нечейность мы все поняли.
[02:43:25.240 --> 02:43:26.240]  Вот, значит и так.
[02:43:26.240 --> 02:43:27.240]  Значит давайте еще раз.
[02:43:28.240 --> 02:43:31.240]  Что же такое у нас сумма игр?
[02:43:31.240 --> 02:43:35.240]  Да, сумма игр это у нас обычно, то есть это обычно такая игра.
[02:43:35.240 --> 02:43:37.240]  То есть здесь у нас две, допустим две игры.
[02:43:39.240 --> 02:43:41.240]  Вот допустим, может быть вот такая.
[02:43:43.240 --> 02:43:50.240]  Вот и ну скажем, вот такая.
[02:43:51.240 --> 02:43:53.240]  И допустим в каждой игре есть фишка.
[02:43:54.240 --> 02:43:59.240]  И тоже играют два игрока, но на этот раз игрок может выбирать какую фишку двигать.
[02:43:59.240 --> 02:44:02.240]  То есть он двигает только одну фишку, но он выбирает какую.
[02:44:03.240 --> 02:44:07.240]  Проигрывает соответственно тот, кто не может сделать ход ни в одной игре.
[02:44:07.240 --> 02:44:10.240]  Вот, ну и нам тоже жутко интересно, кто выиграет при правильной игре.
[02:44:13.240 --> 02:44:19.240]  Самый простой способ, конечно, то есть понятно, что такая игра тоже может быть сведена к игре на одном графе, правда?
[02:44:21.240 --> 02:44:22.240]  Да нет, наверное.
[02:44:23.240 --> 02:44:29.240]  Ну естественно, потому что можно, например, там сделать граф просто на там, просто декартовых произведениях верши.
[02:44:29.240 --> 02:44:30.240]  Логично, да?
[02:44:30.240 --> 02:44:32.240]  Ну тут я даже особо рисовать не буду.
[02:44:32.240 --> 02:44:38.240]  Но это много, потому что если каждый граф по 100 000 вершин, 200 000 серебр, то декартового произведения вы естественно не построите.
[02:44:41.240 --> 02:44:42.240]  Вот.
[02:44:43.240 --> 02:44:44.240]  Значит, что же делать?
[02:44:44.240 --> 02:44:45.240]  Ну, значит, как в шахматах.
[02:44:45.240 --> 02:44:49.240]  Надо, значит, находить какие-то более глубокие стратегии.
[02:44:50.240 --> 02:44:53.240]  То есть это более глубокие стратегии, более глубокие свойства.
[02:44:53.240 --> 02:44:54.240]  Вот.
[02:44:56.240 --> 02:44:57.240]  Ну, во-первых, да.
[02:44:58.240 --> 02:44:59.240]  Ну вот.
[02:45:00.240 --> 02:45:01.240]  Ну, во-первых, да.
[02:45:01.240 --> 02:45:03.240]  Обозначать сумму игр мы так и будем.
[02:45:03.240 --> 02:45:07.240]  Если это игра A, это игра B, то сумму будем означать, естественно, A плюс B.
[02:45:10.240 --> 02:45:12.240]  То есть игра плюс игра равно игра.
[02:45:13.240 --> 02:45:14.240]  Возможно, другая.
[02:45:15.240 --> 02:45:16.240]  Ну, вот.
[02:45:16.240 --> 02:45:21.240]  Ну, заметим, что складывать, естественно, мы можем, в принципе, и три игры, и четыре, и пять, и шесть.
[02:45:21.240 --> 02:45:25.240]  Причем сумма будет, как говорится, кому-то активна, ассоциативна.
[02:45:26.240 --> 02:45:27.240]  Логично, да?
[02:45:28.240 --> 02:45:29.240]  Вот.
[02:45:30.240 --> 02:45:32.240]  Так что не будем тут особо заморачиваться.
[02:45:33.240 --> 02:45:34.240]  Вот.
[02:45:34.240 --> 02:45:37.240]  Но мы попытаемся все эти игры, как говорится, кормить.
[02:45:38.240 --> 02:45:39.240]  Вот.
[02:45:40.240 --> 02:45:41.240]  Ну, вот.
[02:45:41.240 --> 02:45:42.240]  Не будем тут особо заморачиваться.
[02:45:43.240 --> 02:45:44.240]  Вот.
[02:45:44.240 --> 02:45:48.240]  Но мы попытаемся эти игры как-то классифицировать.
[02:45:49.240 --> 02:45:52.240]  Что имеется в виду?
[02:45:53.240 --> 02:46:00.240]  Значит, мы скажем, вот мы уже упоминали это слово, но сейчас мы дадим ему принципиально другое вместе с тем формально определение.
[02:46:00.240 --> 02:46:01.240]  Так, да.
[02:46:01.240 --> 02:46:02.240]  Во-первых, начнем с другого.
[02:46:03.240 --> 02:46:12.240]  То есть пусть A это произвольная игра на графе.
[02:46:17.240 --> 02:46:19.240]  Тогда ведем такое понятие.
[02:46:20.240 --> 02:46:23.240]  Я его люблю называть view от A.
[02:46:24.240 --> 02:46:25.240]  Вот.
[02:46:25.240 --> 02:46:28.240]  Ну, нет такой, конечно, буквы view, конечно, в греческом алфавите.
[02:46:28.240 --> 02:46:29.240]  Нету, естественно.
[02:46:29.240 --> 02:46:30.240]  Есть new.
[02:46:31.240 --> 02:46:32.240]  Ну, вот.
[02:46:32.240 --> 02:46:34.240]  Но я ее люблю называть view от A.
[02:46:35.240 --> 02:46:36.240]  Вот.
[02:46:36.240 --> 02:46:42.240]  Так вот view от A это будет буковка типа выигрыш vnp.
[02:46:43.240 --> 02:46:46.240]  Это типа результат игры.
[02:46:51.240 --> 02:46:55.240]  Если оба игрока играют оптимально.
[02:46:55.240 --> 02:47:00.240]  Ну, я тут немножко оптимально.
[02:47:01.240 --> 02:47:03.240]  Оп-ти-маль.
[02:47:06.240 --> 02:47:07.240]  Вот.
[02:47:07.240 --> 02:47:08.240]  Тут все.
[02:47:08.240 --> 02:47:09.240]  Ну, вот.
[02:47:09.240 --> 02:47:13.240]  Ну, то есть просто мне для игры вот хочется понимать она там.
[02:47:13.240 --> 02:47:17.240]  То есть понятно, мы уже доказали, что любая игра играется выигрышной, ничейной или проигрышной.
[02:47:17.240 --> 02:47:20.240]  И вот пусть view от A это вот, собственно, чем она является.
[02:47:21.240 --> 02:47:22.240]  Понятно, да?
[02:47:22.240 --> 02:47:23.240]  Понятно, да.
[02:47:25.240 --> 02:47:29.240]  Так вот теперь вот интересное определение.
[02:47:32.240 --> 02:47:35.240]  Значит, интересное определение.
[02:47:36.240 --> 02:47:39.240]  Значит, будем говорить, что...
[02:47:39.240 --> 02:47:41.240]  Значит, пусть A и B играют.
[02:47:45.240 --> 02:47:50.240]  Тогда будем говорить, что A эквивалентно B.
[02:47:50.240 --> 02:48:04.240]  Если для любой игры C верно, что view от A плюс C равно view от B плюс C.
[02:48:06.240 --> 02:48:08.240]  Вот такая неожиданность.
[02:48:11.240 --> 02:48:14.240]  Вот такие игры мы будем считать эквивалентными.
[02:48:14.240 --> 02:48:19.240]  Вот наша задача будет изучить, а какие игры вообще с точностью до эквивалентности бывают.
[02:48:23.240 --> 02:48:24.240]  Вот.
[02:48:24.240 --> 02:48:25.240]  Понятно?
[02:48:25.240 --> 02:48:26.240]  Оптимально это еще раз.
[02:48:26.240 --> 02:48:31.240]  Если у них есть выигрышная, то они играют по выигрышной, если есть непроигрышная, то по непроигрышной.
[02:48:31.240 --> 02:48:34.240]  Ну, типа да.
[02:48:34.240 --> 02:48:39.240]  Ну, типа если у одного игрока есть выигрышная стратегия, он как бы играет по ней и выигрывает.
[02:48:39.240 --> 02:48:44.240]  Если у обоих есть непроигрышная стратегия, значит они обыграют по непроигрышной стратегии и объявляется ничья.
[02:48:46.240 --> 02:48:50.240]  Результат имеется в виду, конечно же, вот в этой ситуации.
[02:48:51.240 --> 02:48:52.240]  Так вот.
[02:48:53.240 --> 02:48:55.240]  Смотрим дальше.
[02:48:57.240 --> 02:48:58.240]  Значит, смотрите.
[02:48:58.240 --> 02:49:06.240]  Ну, во-первых, мистическое свойство, которое мы будем почему-то называть тиремой 1.
[02:49:06.240 --> 02:49:09.240]  Ну, почему-то ладно.
[02:49:09.240 --> 02:49:10.240]  Причина простая.
[02:49:10.240 --> 02:49:11.240]  Потому что я рассказываю.
[02:49:11.240 --> 02:49:12.240]  Редкий случай.
[02:49:12.240 --> 02:49:15.240]  Есть красивая русскоязычная литература.
[02:49:16.240 --> 02:49:19.240]  Называется Эндрюс Танкевич и гранографа.
[02:49:22.240 --> 02:49:24.240]  А, ну я на автомате, да, извините.
[02:49:24.240 --> 02:49:25.240]  Да, там Андрей Танкевич.
[02:49:25.240 --> 02:49:26.240]  Там А.С. Танкевич будет.
[02:49:26.240 --> 02:49:30.240]  И просто нагуглить можете на самом деле и прям следить.
[02:49:32.240 --> 02:49:33.240]  Вот.
[02:49:34.240 --> 02:49:36.240]  Такая замечательная штука, конечно.
[02:49:37.240 --> 02:49:38.240]  Так вот.
[02:49:38.240 --> 02:49:39.240]  И там тирема 1 говорит.
[02:49:39.240 --> 02:49:41.240]  Значит, говорит, что пусть.
[02:49:43.240 --> 02:49:44.240]  Ну, он говорит так.
[02:49:44.240 --> 02:49:48.240]  Пусть А1 эквивалентно А2 и Б1 эквивалентно Б2.
[02:49:48.240 --> 02:49:56.240]  Тогда, естественно, А1 плюс Б1 эквивалентно А2 плюс Б2.
[02:50:00.240 --> 02:50:01.240]  Вот.
[02:50:01.240 --> 02:50:02.240]  Понятно, да?
[02:50:03.240 --> 02:50:05.240]  Ну, давайте проведем формальное доказательство.
[02:50:05.240 --> 02:50:07.240]  Формальное доказательство звучит так.
[02:50:07.240 --> 02:50:14.240]  Что для любой С В от А1 плюс Б1 плюс С, да.
[02:50:15.240 --> 02:50:18.240]  Это вот если воспринять это как произвольную игру, да.
[02:50:18.240 --> 02:50:23.240]  То получается, что это равно В от А2 плюс Б1 плюс С.
[02:50:24.240 --> 02:50:25.240]  Логично, да?
[02:50:26.240 --> 02:50:33.240]  Но с другой стороны, это равно В от Б1 плюс, и тут в скобочках, А2 плюс С.
[02:50:35.240 --> 02:50:36.240]  Так вот.
[02:50:37.240 --> 02:50:38.240]  Ну, вот.
[02:50:38.240 --> 02:50:39.240]  То есть, получается, Б2 тоже подменяем.
[02:50:39.240 --> 02:50:43.240]  Это равно В от Б1 плюс Б2 плюс С.
[02:50:43.240 --> 02:50:45.240]  Доказательство окончено.
[02:50:47.240 --> 02:50:48.240]  Вот.
[02:50:48.240 --> 02:50:50.240]  Ну, это я тут немножко раслегся формализмом.
[02:50:50.240 --> 02:50:51.240]  То есть, что приятно, да.
[02:50:51.240 --> 02:50:55.240]  Эквивалентные игры можно складывать, и тоже получится что-то эквивалентное.
[02:50:57.240 --> 02:50:58.240]  Вот.
[02:50:58.240 --> 02:50:59.240]  Понимаете?
[02:51:02.240 --> 02:51:03.240]  Так.
[02:51:03.240 --> 02:51:04.240]  Так.
[02:51:05.240 --> 02:51:06.240]  Так.
[02:51:07.240 --> 02:51:12.240]  Ну, в смысле, у нас получилось А1 плюс Б1 эквивалент на А1 плюс Б2.
[02:51:13.240 --> 02:51:14.240]  В смысле, почему?
[02:51:14.240 --> 02:51:16.240]  Нет, ну, А1 плюс Б1 эквивалент на А2 плюс...
[02:51:16.240 --> 02:51:17.240]  Ой.
[02:51:18.240 --> 02:51:19.240]  А.
[02:51:19.240 --> 02:51:20.240]  А, я описался.
[02:51:20.240 --> 02:51:21.240]  Да.
[02:51:21.240 --> 02:51:22.240]  Ну, бывает.
[02:51:22.240 --> 02:51:23.240]  Значит, да-да-да-да-да.
[02:51:23.240 --> 02:51:24.240]  Правильно.
[02:51:24.240 --> 02:51:25.240]  Б2 плюс А2.
[02:51:25.240 --> 02:51:26.240]  Да.
[02:51:26.240 --> 02:51:27.240]  Да, вот так.
[02:51:28.240 --> 02:51:31.240]  Влад, я ж не буду дописывать, что это равно В от А2.
[02:51:31.240 --> 02:51:34.240]  Влад, я ж не буду дописывать, что это равно В от А2 плюс Б2 плюс С.
[02:51:35.240 --> 02:51:36.240]  Вот.
[02:51:37.240 --> 02:51:38.240]  Ну, и так.
[02:51:38.240 --> 02:51:40.240]  Это пока просто прикольное свойство.
[02:51:41.240 --> 02:51:42.240]  А теперь вообще заметим.
[02:51:42.240 --> 02:51:44.240]  Вот мы хотим складывать игры, да.
[02:51:44.240 --> 02:51:46.240]  Потому что ВАЗК это вообще идея такая.
[02:51:47.240 --> 02:51:48.240]  Вот.
[02:51:48.240 --> 02:51:51.240]  И если мы сложим две игры, то есть, вместо того, чтобы анализировать дикартовые произведения игр,
[02:51:51.240 --> 02:51:55.240]  хочется вообще сказать, а давайте просто проанализируем одну игру и проанализируем другую.
[02:51:56.240 --> 02:52:00.240]  Может, мы на самом деле по результатам анализа уже можем сказать, каков результат суммы.
[02:52:01.240 --> 02:52:09.240]  Ну, вот давайте теперь в это поиграемся.
[02:52:10.240 --> 02:52:16.240]  Вот, например, если нам предложили сложить две проигрышные игры.
[02:52:16.240 --> 02:52:18.240]  Вот нам дали две проигрышные игры.
[02:52:21.240 --> 02:52:25.240]  Как вы думаете, каков будет результат?
[02:52:31.240 --> 02:52:32.240]  Проигрышных, да?
[02:52:33.240 --> 02:52:34.240]  Так.
[02:52:34.240 --> 02:52:35.240]  Не факт.
[02:52:37.240 --> 02:52:39.240]  Может быть две тупиковых.
[02:52:40.240 --> 02:52:41.240]  Так.
[02:52:41.240 --> 02:52:43.240]  Ну, если две тупиковых, то это проигрышные игры.
[02:52:44.240 --> 02:52:45.240]  А, стоп.
[02:52:45.240 --> 02:52:46.240]  Наверное, проигрышные.
[02:52:46.240 --> 02:52:47.240]  Так.
[02:52:48.240 --> 02:52:50.240]  Потому что соперник может отвечать в той игре, в которой мы сходили.
[02:52:51.240 --> 02:52:52.240]  Да-да.
[02:52:52.240 --> 02:52:53.240]  То есть, в данном случае, да.
[02:52:54.240 --> 02:52:58.240]  Ну, в общем, заметим, что по-хорошему, да, П плюс П может быть проигрышным, потому что есть два тупика.
[02:52:59.240 --> 02:53:02.240]  Но в данном случае заметим, что других вариантов не бывает.
[02:53:02.240 --> 02:53:04.240]  То есть, П плюс П тут заведомо П.
[02:53:05.240 --> 02:53:08.240]  Да, потому что у второго игрока есть явная стратегия победы.
[02:53:09.240 --> 02:53:15.240]  А именно, какой бы ход ни сделал первый игрок, второй игрок идет в ту же игру и делает ход в соответствии с выигрышной стратегией в этой игре.
[02:53:16.240 --> 02:53:17.240]  Все.
[02:53:19.240 --> 02:53:20.240]  Вот.
[02:53:21.240 --> 02:53:24.240]  Ну, отсюда следует еще маленькая приятная вещь.
[02:53:25.240 --> 02:53:27.240]  А если я вас попрошу сказать П плюс В?
[02:53:29.240 --> 02:53:32.240]  Ну, мы делаем ход в выигрышной у соперника.
[02:53:32.240 --> 02:53:33.240]  Да, совершенно верно.
[02:53:33.240 --> 02:53:40.240]  То есть, первый игрок выигрывает, потому что он просто идет в выигрышной игре в выигрышный ход и подсовывает противнику П плюс П.
[02:53:41.240 --> 02:53:42.240]  Логично, да?
[02:53:45.240 --> 02:53:46.240]  Так.
[02:53:47.240 --> 02:53:48.240]  А вот теперь более сложный вопрос.
[02:53:49.240 --> 02:53:50.240]  П плюс Н.
[02:53:50.240 --> 02:53:51.240]  П плюс Н.
[02:53:57.240 --> 02:53:58.240]  Сейчас.
[02:53:58.240 --> 02:53:59.240]  Ну, казалось бы, нечейно.
[02:54:00.240 --> 02:54:01.240]  Почему?
[02:54:02.240 --> 02:54:05.240]  Ну, пока что мы в общем случае рассматриваем сумму игр.
[02:54:06.240 --> 02:54:07.240]  Конечно.
[02:54:07.240 --> 02:54:12.240]  Да, но мы прям жестко знаем, что какие бы вы две проигрышные игры не сложили, получится проигрышные.
[02:54:12.240 --> 02:54:21.240]  Если мы выходим в проигрышной, то если первый выходит в выигрышной, а второй просто обидит именно в той же, то мы снова получим П плюс В.
[02:54:22.240 --> 02:54:30.240]  А если первый выходил в нечейной, то, соответственно, второй будет играть по своей нечейной тактике.
[02:54:31.240 --> 02:54:32.240]  Ну, да.
[02:54:33.240 --> 02:54:34.240]  То есть, давайте посмотрим.
[02:54:35.240 --> 02:54:36.240]  Ну, да, хорошо.
[02:54:37.240 --> 02:54:38.240]  Да, здесь заметим следующее.
[02:54:39.240 --> 02:54:40.240]  Что, значит, просто опишем.
[02:54:41.240 --> 02:54:42.240]  Ну, давайте так.
[02:54:43.240 --> 02:54:44.240]  Опишем непроигрышную стратегию второго игрока.
[02:54:45.240 --> 02:54:48.240]  Да, то есть докажем, что да, тут П плюс Н, железо, бетонно, Н.
[02:54:49.240 --> 02:54:57.240]  Ну, заметим, очевидно, что когда вы складываете что-то с ничей, то всегда может получиться ничья, потому что есть такая типичная ничейная игра, как луп.
[02:54:59.240 --> 02:55:00.240]  Вот, помните, да?
[02:55:01.240 --> 02:55:02.240]  Вот эту интеллектуальную игру.
[02:55:02.240 --> 02:55:05.240]  То есть, это вообще, это прям супер нечейная игра.
[02:55:06.240 --> 02:55:09.240]  То есть, вы ее с чем угодно сложите, получится ничья.
[02:55:10.240 --> 02:55:12.240]  То есть, она просто обнулит все.
[02:55:13.240 --> 02:55:14.240]  Вот.
[02:55:15.240 --> 02:55:20.240]  Но, возможно, но нечейные игры бывают и другие, поэтому надо доказывать, что ничего кроме ничьи не бывает.
[02:55:21.240 --> 02:55:24.240]  Или, наоборот, находить, что, может, там найдется какая-нибудь там П плюс Н, какая-нибудь выигрышная.
[02:55:25.240 --> 02:55:26.240]  Но не в данном случае.
[02:55:27.240 --> 02:55:31.240]  То, что докажем, что в игре П плюс Н у второго игрока всегда есть непроигрышная стратегия.
[02:55:32.240 --> 02:55:34.240]  Потому что, ну, идея будет такая.
[02:55:35.240 --> 02:55:36.240]  Что может сделать первый игрок?
[02:55:37.240 --> 02:55:42.240]  Ну, у первого игрока есть, может быть, ход в игру В плюс Н.
[02:55:43.240 --> 02:55:45.240]  Да? То есть, какие вообще ходы он может сделать?
[02:55:46.240 --> 02:55:47.240]  Он может сделать ход в игру В плюс Н.
[02:55:48.240 --> 02:55:52.240]  Он может сделать ход в игру П плюс В.
[02:55:53.240 --> 02:55:55.240]  Ну, в смысле, в ничейной игре.
[02:55:56.240 --> 02:55:57.240]  Да, ну, есть проигрышная игра.
[02:55:58.240 --> 02:55:59.240]  Он, если может сделать ход, то только выигрыш, правда?
[02:55:59.240 --> 02:56:01.240]  Значит, тут получается П плюс В.
[02:56:02.240 --> 02:56:03.240]  То есть, такой классический для нас будет анализ.
[02:56:04.240 --> 02:56:09.240]  И еще будет вариант сохранить статус ЧО и, собственно, пойти в П плюс Н.
[02:56:11.240 --> 02:56:13.240]  Статус ЧО это, конечно, хорошо.
[02:56:14.240 --> 02:56:15.240]  А что? Вот.
[02:56:16.240 --> 02:56:17.240]  Вот.
[02:56:18.240 --> 02:56:19.240]  Значит, давайте думать.
[02:56:20.240 --> 02:56:23.240]  Но заметим, что если первый игрок пойдет сюда, ну, мы уж точно не проиграем.
[02:56:24.240 --> 02:56:25.240]  Потому что, как мы уже доказали, мы тупо выиграем.
[02:56:26.240 --> 02:56:27.240]  Вот.
[02:56:29.240 --> 02:56:30.240]  Ну, теперь идея такая.
[02:56:31.240 --> 02:56:35.240]  Если он пошел в В плюс Н, то у нас есть, как минимум, замечательный ход.
[02:56:36.240 --> 02:56:37.240]  В плюс Н.
[02:56:38.240 --> 02:56:39.240]  Да. В плюс Н.
[02:56:43.240 --> 02:56:45.240]  То есть, получается, сохранить опять же статус ЧО.
[02:56:46.240 --> 02:56:47.240]  То есть, опять первому игроку подсунуть позицию В плюс Н.
[02:56:48.240 --> 02:56:50.240]  Из В плюс В мы переходим в В плюс В вообще?
[02:56:51.240 --> 02:56:53.240]  Ну, нет. А мы уже никуда не переходим.
[02:56:54.240 --> 02:56:55.240]  Мы уже пишем, что мы выиграли.
[02:56:55.240 --> 02:56:56.240]  Да, так что можно даже...
[02:56:57.240 --> 02:56:59.240]  Так что, как это называется, да, можно не...
[02:57:00.240 --> 02:57:01.240]  Выводим задачу предыдущей.
[02:57:02.240 --> 02:57:03.240]  Да. То есть, да, даже более...
[02:57:04.240 --> 02:57:05.240]  Ну, да.
[02:57:06.240 --> 02:57:07.240]  Да, выливаем воду из чайника и говорим, что...
[02:57:08.240 --> 02:57:09.240]  И даже не вспоминаем о том, что надо ее налить заново.
[02:57:10.240 --> 02:57:11.240]  Да.
[02:57:12.240 --> 02:57:16.240]  Так. Значит, а тут теперь заметим, что из П плюс Н мы тоже всегда можем пойти в П плюс Н.
[02:57:17.240 --> 02:57:23.240]  То есть, получается, что мы, как второй игрок, всегда можем первому игроку либо подсунуть В плюс Н,
[02:57:23.240 --> 02:57:24.240]  либо...
[02:57:25.240 --> 02:57:26.240]  Ну, вот.
[02:57:27.240 --> 02:57:30.240]  То есть, либо пойти в П плюс Н, либо гарантировать себе выигрыш с помощью П плюс В.
[02:57:31.240 --> 02:57:32.240]  Что?
[02:57:33.240 --> 02:57:35.240]  То есть, получается, что второй игрок не проигрывает.
[02:57:36.240 --> 02:57:40.240]  Но, правда, теперь осталось только доказать, что первый игрок не проигрывает.
[02:57:41.240 --> 02:57:43.240]  А как доказать, что первый игрок не проигрывает?
[02:57:44.240 --> 02:57:46.240]  Он может просто в ничей не передать ход.
[02:57:47.240 --> 02:57:48.240]  Ну, не передать ход, конечно.
[02:57:49.240 --> 02:57:51.240]  Это не тот же П плюс Н, который вот здесь.
[02:57:51.240 --> 02:57:53.240]  Но с нашей точки зрения, без разницы.
[02:57:54.240 --> 02:57:55.240]  Но по смыслу, да.
[02:57:56.240 --> 02:57:59.240]  Первый игрок просто говорит, я сделаю ход в позицию П плюс Н, и все.
[02:58:00.240 --> 02:58:02.240]  И теперь он будет гарантировать себе не проигрыш, как второй игрок.
[02:58:03.240 --> 02:58:07.240]  Так что, видимо, типичная ничейная игра, скорее всего, будет вот болтаться где-то здесь.
[02:58:08.240 --> 02:58:10.240]  Сейчас. То есть, проигрыш на игра нам ничего не меняем.
[02:58:11.240 --> 02:58:12.240]  Получается так.
[02:58:12.240 --> 02:58:16.240]  И, в принципе, отсюда на самом деле возникает мистическая теорема.
[02:58:17.240 --> 02:58:21.240]  Просто можно назвать ее теорема имени Льва Толстого.
[02:58:23.240 --> 02:58:27.240]  Теорема называется все проигрышные игры эквивалентны.
[02:58:42.240 --> 02:58:44.240]  Ну, потому что мы, по сути, вот что тут доказали.
[02:58:45.240 --> 02:58:49.240]  Мы доказали, что, допустим, если, допустим, А1 и А2 проигрышные,
[02:58:50.240 --> 02:58:55.240]  то оказывается, что дело в том, что АВИО от А1 плюс С равно тупо ВИО от С.
[02:58:56.240 --> 02:58:58.240]  И это равно ВИО от А2 плюс С.
[02:59:01.240 --> 02:59:02.240]  Вот.
[02:59:02.240 --> 02:59:03.240]  Так что получается, да.
[02:59:06.240 --> 02:59:07.240]  Так что вот такая мистическая теорема.
[02:59:13.240 --> 02:59:17.240]  Ну а теперь попробуем все-таки этот анализ подобивать.
[02:59:18.240 --> 02:59:19.240]  Вот, например.
[02:59:20.240 --> 02:59:27.240]  А если я вам предложу, например, А1 и А2 проигрышные игры эквивалентны,
[02:59:27.240 --> 02:59:28.240]  подобивать.
[02:59:29.240 --> 02:59:30.240]  Вот, например.
[02:59:31.240 --> 02:59:35.240]  А если я вам предложу поиграть в выигрыш плюс выигрыш.
[02:59:40.240 --> 02:59:41.240]  Что получится?
[02:59:47.240 --> 02:59:48.240]  Так вот. Ну давайте.
[02:59:49.240 --> 02:59:50.240]  Но это тоже надо доказать.
[02:59:51.240 --> 02:59:52.240]  Это возможный ответ, но это надо доказать.
[02:59:54.240 --> 02:59:55.240]  Привести примеры на что угодно.
[02:59:55.240 --> 02:59:56.240]  Так.
[02:59:57.240 --> 02:59:58.240]  Ну давайте попробуем привести пример на что угодно.
[02:59:59.240 --> 03:00:05.240]  Ну вот, например, можно ли из суммы двух выигрышных игр получить проигрышную игру?
[03:00:06.240 --> 03:00:07.240]  Ну да.
[03:00:08.240 --> 03:00:09.240]  Ну просто две спички.
[03:00:10.240 --> 03:00:14.240]  Ну да. Самое тупое, что можно сделать, это, конечно, две вот такие игры.
[03:00:15.240 --> 03:00:17.240]  Хотя, на самом деле, любые, если вы сложите...
[03:00:18.240 --> 03:00:22.240]  Ну, в принципе, вообще можно заметить, что А плюс А, если игра А циклическая,
[03:00:23.240 --> 03:00:24.240]  то эта игра заведомо проигрышная.
[03:00:25.240 --> 03:00:29.240]  Потому что у второго игрока есть так называемая симметричная стратегия.
[03:00:30.240 --> 03:00:33.240]  То есть, просто тупо дублируем в другой игре ход первого игрока.
[03:00:34.240 --> 03:00:35.240]  Так как игра...
[03:00:36.240 --> 03:00:37.240]  То есть, заметим, правда, тут вот важный момент.
[03:00:38.240 --> 03:00:39.240]  Видите, что это работает именно потому, что игра ациклическая.
[03:00:40.240 --> 03:00:42.240]  То есть, ход. То есть, игра рано или поздно закончится независимо.
[03:00:43.240 --> 03:00:44.240]  Вот.
[03:00:45.240 --> 03:00:48.240]  То есть, в принципе, в общем случае можно пока гарантировать только что...
[03:00:49.240 --> 03:00:50.240]  Что эта игра не выигрышная.
[03:00:51.240 --> 03:00:52.240]  Что игра с собой точно не выигрышная.
[03:00:52.240 --> 03:00:53.240]  Да, точно не выигрышная, да.
[03:00:54.240 --> 03:00:55.240]  Но, как бы это, то есть, как бы да.
[03:00:56.240 --> 03:00:57.240]  То есть, потому что у второго играя есть непроигрышная стратегия.
[03:00:58.240 --> 03:00:59.240]  Может, у него есть выигрышная стратегия.
[03:01:00.240 --> 03:01:01.240]  Может и нет, я не знаю.
[03:01:02.240 --> 03:01:03.240]  Вот.
[03:01:04.240 --> 03:01:05.240]  Хотя, может, мы с вами сейчас это узнаем.
[03:01:06.240 --> 03:01:07.240]  Всякое может быть.
[03:01:08.240 --> 03:01:09.240]  Хотя...
[03:01:10.240 --> 03:01:11.240]  Так, ну хорошо.
[03:01:12.240 --> 03:01:13.240]  Выигрыш плюс выигрыш.
[03:01:14.240 --> 03:01:15.240]  Хорошо.
[03:01:16.240 --> 03:01:17.240]  Значит, бывает проигрышем.
[03:01:18.240 --> 03:01:20.240]  А бывает ли выигрыш плюс выигрыш выигрышем?
[03:01:20.240 --> 03:01:21.240]  Да.
[03:01:22.240 --> 03:01:23.240]  Каким образом?
[03:01:24.240 --> 03:01:27.240]  Ну давайте вот к этой штуке прорисуем еще...
[03:01:28.240 --> 03:01:34.240]  Вот, к одной из этих спичек прорисуем еще такую цепочку из двух.
[03:01:35.240 --> 03:01:36.240]  Вот.
[03:01:37.240 --> 03:01:38.240]  От нее ответ будет.
[03:01:39.240 --> 03:01:40.240]  Вот.
[03:01:41.240 --> 03:01:42.240]  А, вот такой.
[03:01:43.240 --> 03:01:44.240]  Ну или так, да.
[03:01:45.240 --> 03:01:46.240]  Ну так проще, пожалуй, будет.
[03:01:47.240 --> 03:01:48.240]  Да.
[03:01:48.240 --> 03:01:49.240]  Ну это тоже две выигрышные игры.
[03:01:50.240 --> 03:01:51.240]  Но их сумма тоже выигрышная.
[03:01:52.240 --> 03:01:55.240]  Потому что первый игрок может вместо того, чтобы пойти сюда, аккуратненько пойти сюда и получить предыдущую.
[03:01:57.240 --> 03:01:58.240]  А бывает ли ничья?
[03:01:59.240 --> 03:02:00.240]  Save plus...
[03:02:05.240 --> 03:02:07.240]  Save plus игра, где палочки?
[03:02:11.240 --> 03:02:12.240]  Так.
[03:02:13.240 --> 03:02:14.240]  Ну в принципе, да.
[03:02:15.240 --> 03:02:16.240]  А можно просто вот так две палочки.
[03:02:16.240 --> 03:02:17.240]  А можно, кстати, save plus save.
[03:02:20.240 --> 03:02:22.240]  Кстати, к вопросу о двух...
[03:02:23.240 --> 03:02:24.240]  Хотя нет, это две выигрышные игры.
[03:02:25.240 --> 03:02:26.240]  Ну ладно.
[03:02:27.240 --> 03:02:32.240]  Но тут заметим следующее, что каждый игрок знает, что если я закончу одну игру, второй игрок тут же закончит вторую игру и выиграет.
[03:02:35.240 --> 03:02:36.240]  Поэтому все, что вам остается, это сейвится.
[03:02:37.240 --> 03:02:39.240]  Но здесь, да, заметим, достаточно одного сейва.
[03:02:40.240 --> 03:02:41.240]  То есть в принципе вот...
[03:02:42.240 --> 03:02:43.240]  Это две игры.
[03:02:44.240 --> 03:02:45.240]  Сейв у нас может быть еще что?
[03:02:46.240 --> 03:02:48.240]  Когда вот эта вершина, из которой есть ход в себя.
[03:02:49.240 --> 03:02:52.240]  Там становится красиво, что три сейва, это уже кажется...
[03:02:53.240 --> 03:02:54.240]  А нет, это все еще ничья.
[03:02:55.240 --> 03:02:56.240]  Да.
[03:02:57.240 --> 03:02:58.240]  Нет, в чем проблема?
[03:02:59.240 --> 03:03:00.240]  Вы хотите запрятать последнего.
[03:03:01.240 --> 03:03:02.240]  Ну да.
[03:03:03.240 --> 03:03:04.240]  Они будут уменьшать сейв, а потом придут в состояние два сейва.
[03:03:05.240 --> 03:03:06.240]  Ну да.
[03:03:07.240 --> 03:03:08.240]  И там будет ничья.
[03:03:09.240 --> 03:03:10.240]  Почему сейв выигрыш?
[03:03:11.240 --> 03:03:19.240]  Нет, потому что если вы рассматриваете сейв без суммы из чего-то, просто саму по себе игру сейв, то как бы первый игрок просто ходит сюда и выигрывает.
[03:03:20.240 --> 03:03:21.240]  Да, это да.
[03:03:22.240 --> 03:03:23.240]  И ретроанализ это неожиданно найдет.
[03:03:24.240 --> 03:03:25.240]  Ну потому что...
[03:03:26.240 --> 03:03:27.240]  То есть такую вершину он конечно...
[03:03:28.240 --> 03:03:32.240]  Да, вообще приятно, что если из вершины есть ход в себя, то тогда эта вершина заведомо не является...
[03:03:33.240 --> 03:03:34.240]  Чем она не является?
[03:03:35.240 --> 03:03:36.240]  Она не является проигрышной.
[03:03:37.240 --> 03:03:38.240]  Почему?
[03:03:38.240 --> 03:03:41.240]  Ну потому что предположим, что у второго игрока в этой игре есть выигрышная стратегия.
[03:03:42.240 --> 03:03:45.240]  Тогда у первого игрока есть выигрышная стратегия, вида пойди в себя и выиграй.
[03:03:46.240 --> 03:03:47.240]  Противоречие.
[03:03:48.240 --> 03:03:49.240]  Вот, да.
[03:03:50.240 --> 03:03:51.240]  То есть получается, да, вот такого...
[03:03:52.240 --> 03:03:56.240]  То есть если из игры есть ход в себя, то значит вы заведомо не проиграли.
[03:03:57.240 --> 03:03:59.240]  Но вы вот в такой ситуации теперь могли выиграть.
[03:04:00.240 --> 03:04:01.240]  Так, ну вывод очень простой.
[03:04:02.240 --> 03:04:07.240]  Значит В плюс В оказывается может быть чем угодно.
[03:04:08.240 --> 03:04:14.240]  То есть потому что В плюс В бывает нечейной, В плюс В бывает проигрышной и В плюс Э бывает выигрышной.
[03:04:15.240 --> 03:04:18.240]  То есть оказывается, если вы складываете две выигрышные игры, может быть все что угодно.
[03:04:21.240 --> 03:04:22.240]  Так, что еще надо?
[03:04:24.240 --> 03:04:25.240]  Так, а теперь давайте подумаем.
[03:04:26.240 --> 03:04:31.240]  А если я вас попрошу сложить выигрышную игру и нечейную игру, что получится?
[03:04:31.240 --> 03:04:32.240]  Похоже, что нечейная.
[03:04:34.240 --> 03:04:35.240]  Так, ну она не может...
[03:04:37.240 --> 03:04:45.240]  В плане давайте второй игрок вообще забьет на первую игру, которая выигрышная, и будет просто ходить в нечейную.
[03:04:46.240 --> 03:04:47.240]  Так.
[03:04:48.240 --> 03:04:52.240]  Ну противник ему в какой-то момент подсунет проигрышное В плюс В, например.
[03:04:53.240 --> 03:04:54.240]  А, и вас проигрывает.
[03:04:55.240 --> 03:04:56.240]  Ну, да.
[03:04:57.240 --> 03:05:00.240]  Давайте отвечать в той же игре, в которой и походил первый игрок.
[03:05:01.240 --> 03:05:02.240]  А, мы сюда можем�изить.
[03:05:03.240 --> 03:05:10.240]  Ну смотрите, есть подозрение, что выигрышная эта игра точно может быть, потому что наверное там...
[03:05:14.240 --> 03:05:16.240]  Ну что это может быть, действительно?
[03:05:17.240 --> 03:05:20.240]  Ну то есть выигрышная эта игра может быть.
[03:05:20.240 --> 03:05:26.240]  Ну что это может быть действительно?
[03:05:26.240 --> 03:05:30.240]  Смотрите, у нас есть состояние V плюс N.
[03:05:30.240 --> 03:05:34.240]  Давайте сделаем перейдем из него в состояние P плюс N.
[03:05:34.240 --> 03:05:39.240]  Второе либо у нас переводит P плюс V.
[03:05:39.240 --> 03:05:41.240]  Нет, то смотрите.
[03:05:41.240 --> 03:05:43.240]  А, сейчас, ну, погодите.
[03:05:43.240 --> 03:05:44.240]  Начнем с первого.
[03:05:44.240 --> 03:05:46.240]  Заметим, что первый игрок может пойти в P плюс N
[03:05:46.240 --> 03:05:50.240]  В плюс N и гарантировать себе тем самым не проигрыш.
[03:05:50.240 --> 03:05:51.240]  Да?
[03:05:51.240 --> 03:05:53.240]  То есть, проигрышная эта игра точно не является.
[03:05:53.240 --> 03:05:56.240]  Теперь она может являться ничейной и выигрышной.
[03:05:56.240 --> 03:06:00.240]  Так, ну, опять так, ничейная она может являться?
[03:06:00.240 --> 03:06:03.240]  Ну, конечно, да, потому что есть луп.
[03:06:03.240 --> 03:06:06.240]  Сложи что угодно с лупом и получи бесконечную ничью.
[03:06:06.240 --> 03:06:11.240]  Остается только выяснить, может ли V плюс N быть выигрышной игрой?
[03:06:16.240 --> 03:06:23.240]  Ну, сейчас кажется, что если мы из V плюс N входим в P плюс N.
[03:06:23.240 --> 03:06:25.240]  Да, но это нет.
[03:06:25.240 --> 03:06:30.240]  Тем самым мы только гарантируем, что игра для первого игрока непроигрышная.
[03:06:30.240 --> 03:06:35.240]  А какие вообще возможны ходы первого игрока из V плюс N?
[03:06:35.240 --> 03:06:37.240]  Он может проходить в P плюс N?
[03:06:37.240 --> 03:06:40.240]  Ну, во-первых, он может проходить и в V плюс N.
[03:06:40.240 --> 03:06:43.240]  Ну, там, как повезет, он куда угодно может пойти.
[03:06:43.240 --> 03:06:47.240]  Потому что из V можно пойти теоретически вообще куда угодно.
[03:06:47.240 --> 03:06:53.240]  Давайте рассмотрим проигрышный сейв, то есть когда у нас две...
[03:06:53.240 --> 03:06:56.240]  Так, вот, давайте посмотрим.
[03:06:56.240 --> 03:06:57.240]  К нему прибавим...
[03:06:57.240 --> 03:07:02.240]  Да, смотрите, вот такая, давайте вот такой сейв сделаем.
[03:07:02.240 --> 03:07:04.240]  И вот такую выигрышную игру.
[03:07:04.240 --> 03:07:11.240]  Да, и первый игрок первым ходом сходит вниз и сделает...
[03:07:11.240 --> 03:07:15.240]  Да, то есть, видите, заметим, что эта игра откровенно ничейная.
[03:07:15.240 --> 03:07:20.240]  Да, сама по себе, потому что никакому игроку не выгодно ходить сюда и проигрывать.
[03:07:20.240 --> 03:07:27.240]  Но если вы складываете вот тут, то тогда первый игрок может просто выйти отсюда
[03:07:27.240 --> 03:07:29.240]  и пойти также в игру V плюс V.
[03:07:29.240 --> 03:07:31.240]  Видите, да?
[03:07:31.240 --> 03:07:34.240]  В чем V плюс V ациклическую и симметрично выиграем.
[03:07:34.240 --> 03:07:36.240]  То есть две спички, как мы еще называли.
[03:07:36.240 --> 03:07:40.240]  Поэтому получается, что выигрышность тут бывает.
[03:07:41.240 --> 03:07:46.240]  Вот, выигрышность бывает, ничейность бывает, проигрышности не бывает.
[03:07:46.240 --> 03:07:50.240]  Так, ну и немножко эпичности.
[03:07:53.240 --> 03:07:55.240]  А ничья плюс ничья это что?
[03:07:57.240 --> 03:07:59.240]  Это мясо.
[03:07:59.240 --> 03:08:01.240]  Да, это точно может быть ничья.
[03:08:01.240 --> 03:08:03.240]  Потому что есть лупки.
[03:08:03.240 --> 03:08:05.240]  Да, просто два лупа.
[03:08:05.240 --> 03:08:09.240]  Да, два лупа хлопающих глазами, да.
[03:08:09.240 --> 03:08:12.240]  Так, хорошо. А что-нибудь еще это может быть?
[03:08:26.240 --> 03:08:29.240]  Да, может ли быть это что, кроме ничьи?
[03:08:29.240 --> 03:08:30.240]  Наверное, нет.
[03:08:30.240 --> 03:08:31.240]  Почему?
[03:08:31.240 --> 03:08:34.240]  Ну, какие у нас возможные ходы?
[03:08:34.240 --> 03:08:38.240]  Если мы сходим в П, то в П мы не можем сходить.
[03:08:38.240 --> 03:08:40.240]  Нет, из ничьи можем, да.
[03:08:40.240 --> 03:08:43.240]  Из каждой ничьи можем ходить только либо в ничью, либо если повезет в В.
[03:08:43.240 --> 03:08:47.240]  Если мы сходим в ничью, то мы как бы прижили то же самое.
[03:08:47.240 --> 03:08:52.240]  Если мы из Н сходили в В, то там может быть либо В или ВН.
[03:08:52.240 --> 03:08:55.240]  Короче говоря, проигрышной игрой для противника это не стало.
[03:08:55.240 --> 03:08:56.240]  Да.
[03:08:56.240 --> 03:09:01.240]  То есть заметим, что мы можем пойти либо в Н плюс Н, либо в заведомо непроигрышную игру.
[03:09:02.240 --> 03:09:03.240]  Вот.
[03:09:03.240 --> 03:09:08.240]  Тогда у второго игрока есть, получается, непроигрышная стратегия вида,
[03:09:08.240 --> 03:09:10.240]  если первый игрок пошел в В плюс Н
[03:09:10.240 --> 03:09:12.240]  то второй игрок точно не проиграл, мы это уже доказали.
[03:09:12.240 --> 03:09:15.240]  А если первый игрок пошел в Н плюс Н,
[03:09:15.240 --> 03:09:17.240]  то мы тоже оставили ему Н плюс Н.
[03:09:17.240 --> 03:09:20.240]  То есть таким образом второй игрок не проиграл.
[03:09:20.240 --> 03:09:25.240]  Ну, а первый не проиграл потому, что он тоже может оставить Н плюс Н.
[03:09:25.240 --> 03:09:29.240]  То есть вывод — сумма двух ничейных игр — это ничья.
[03:09:29.240 --> 03:09:31.240]  Это ничья.
[03:09:31.240 --> 03:09:35.240]  А мы сейчас рассматриваем игры, только такие, у которых поражение равно нельзя расходить, да?
[03:09:35.240 --> 03:09:37.240]  Да, конечно.
[03:09:37.240 --> 03:09:39.240]  Да.
[03:09:45.240 --> 03:09:51.240]  Вот из V плюс N мы можем перейти в P плюс N, в V плюс V и V плюс N, да?
[03:09:53.240 --> 03:09:55.240]  Откуда? Из N плюс N?
[03:09:55.240 --> 03:09:57.240]  Из V плюс N.
[03:09:57.240 --> 03:10:01.240]  Потому что если мы перейдем в P плюс N, то у второго игрока будут непроигрышные стратегии.
[03:10:17.240 --> 03:10:21.240]  Если мы перейдем в V плюс V, то у второго игрока тоже не будет непроигрышной стратегии.
[03:10:27.240 --> 03:10:33.240]  так и проигрышной игрой. И мы даже примеры привели, так что тут такое. Вот, так что мы
[03:10:33.240 --> 03:10:37.680]  тут немножко поигрались, тут видим, что, к сожалению, да, если одна игра проигрышная, то нам повезло ее
[03:10:37.680 --> 03:10:46.320]  можно вытянуть из анализа. Причем везде, скорее всего, но там, да, конечно, надо будет аккуратно
[03:10:46.320 --> 03:10:52.480]  думать, но факт остается фактом, да, проигрышность плюс, да, то есть там с проигрышной игрой надо
[03:10:52.480 --> 03:10:56.280]  как-то аккуратно думать, но правда, как складывать три игры, это нам все еще пока не сообщает.
[03:10:56.280 --> 03:11:03.880]  Потому что, видите, если у нас действительно есть хотя бы там, то есть если там какие-нибудь две,
[03:11:03.880 --> 03:11:08.040]  то есть, да, если там есть проигрышная игра, то ее из анализа можно выкинуть, но если есть там две
[03:11:08.040 --> 03:11:16.000]  выигрышные или там выигрышная плюс ничейная, то у нас просто так, конечно, все плохо. Так что,
[03:11:16.000 --> 03:11:21.280]  знаете, то есть получается так, то есть как бы Толстой был, наверное, сказал так, все, да,
[03:11:21.280 --> 03:11:26.960]  все проигрышные игры, проигрышная одинаково, но каждая выигрышная игра выигрышна по-своему.
[03:11:26.960 --> 03:11:36.040]  Вот, как говорится, да, где-то через два тома одна накоренина бросилась под поезд.
[03:11:36.040 --> 03:11:48.160]  Да, соответственно, вот. Ну вот, соответственно, значит, что у нас получается? Ну, здесь вот дальше
[03:11:48.160 --> 03:11:56.360]  будем рассматривать сначала ациклические игры. Так, вот дальше я перестаю помнить номерацию
[03:11:56.360 --> 03:12:01.240]  теориям, но неважно. Ну, теперь давайте себе вообразим, что мы рассматриваем только ациклические
[03:12:01.240 --> 03:12:08.520]  игры. Тогда, конечно, вот эти все ничейности мы сразу выкидываем. Понимаете, да? Вот, то есть
[03:12:08.520 --> 03:12:15.720]  остается только вот P плюс P, P плюс V и V плюс V, но V плюс V может быть даже на уровне ациклических
[03:12:15.720 --> 03:12:28.840]  игр, как мы уже убедились, чем угодно, правда? Вот. Ну, правда, да, есть бывает ациклические
[03:12:28.840 --> 03:12:34.480]  игры. Ну вот, но на самом деле есть такая, сейчас вот я расскажу, просто пришло время еще одной
[03:12:34.480 --> 03:12:53.160]  интеллектуальной игры. Вот. Значит, интеллектуальная игра NIM. Значит, игра такая. Жила-была N, значит,
[03:12:53.160 --> 03:13:09.120]  кучка, а в кучке N камешков. Внезапно. Играют два игрока. На каждом ходу игрок может из этой кучки
[03:13:09.120 --> 03:13:20.280]  взять произвольное ненулевое количество камней. Все. Ну, проигрывает тот, кто не может сделать ход.
[03:13:20.280 --> 03:13:32.200]  Вот такая интеллектуальная игра. Да, вы услышали то, что вы услышали. Да, верно. Вряд ли по ней будут
[03:13:32.200 --> 03:13:44.800]  проводить чемпионаты мира. Ну, кстати, NIM с несколькими кучками давали на межнаре по математике
[03:13:44.800 --> 03:14:00.800]  90-го года. Кстати, никто не решил. Хотя теория, которую сейчас рассказываю, была известна еще в 30-е. Ну,
[03:14:00.800 --> 03:14:05.280]  вот это, ну, возможно. Не, ну, как сказать вообще, теория подобных игр, как бы это, мы почти сейчас
[03:14:05.280 --> 03:14:10.120]  математикой загибаемся, в общем-то. Выигрышное, проигрышное, вот это все. Так что это, конечно,
[03:14:10.120 --> 03:14:13.880]  немножко. Хотя там всякое бывает. Может, там в 90-е годы не было распространено спортивное
[03:14:13.880 --> 03:14:24.480]  программирование. Там когда-то в 2007. Ну, по-разному. Не, ну, в 90-е, хотя нет, в 90-е, в общем-то,
[03:14:24.480 --> 03:14:32.000]  чемпионаты ACPC, как бы ACPC, вообще-то, империоз свое начало с 1977 года. Да, и в то время там участвуют
[03:14:32.000 --> 03:14:39.200]  что-то типа три американских ВУЗа. Ну да. Ну, не три, там больше. Там уже, по-моему, начали выигрывать,
[03:14:39.200 --> 03:14:44.920]  по-моему, ВУЗы из Европы вообще-то к тому моменту. Можете гуглануть, проверить. Там более,
[03:14:44.920 --> 03:14:49.280]  там уже достаточно быстро потом где-то там начали проявляться, там, собственно, наши. Там,
[03:14:49.280 --> 03:14:56.000]  в первую очередь, это там ИТМО, там МГУшники, там и так далее. Так что там, так что дело старше,
[03:14:56.000 --> 03:15:04.560]  чем вы думаете, да. На самом деле, даже сейчас ретроанализ, это прям такой почмочный чит на
[03:15:04.560 --> 03:15:09.560]  каком-нибудь геоне по математике или даже на все России. Потому что иногда там просто появляются
[03:15:09.560 --> 03:15:16.960]  задачи, которые задумываются гробом, а при этом пробиваются вот так лапками. Да, но не только. Я
[03:15:16.960 --> 03:15:21.480]  вам даже больше скажу. Я видел видео, когда рассказывают, что там на Межнаре дали крутить
[03:15:21.480 --> 03:15:26.880]  задачи по геометрии. Не-не-не, там 90-е годы, это был первый год, когда американцев победили в Австралии.
[03:15:26.880 --> 03:15:44.600]  Понятно. Ладно, все окей, хорошо. Ну да-да-да, а потом фриками появились мы, да. Да,
[03:15:44.600 --> 03:15:51.240]  по-моему, там в 2000 году фриком оказались, там был Дуров и Лопатин, да-да-да. Ну и так далее.
[03:15:51.240 --> 03:15:55.440]  Ну, в общем, ладно, там, конечно, мода была такая, что там на тех фотографиях как-то,
[03:15:55.440 --> 03:16:03.040]  во-первых, все выглядят фриками, честно говоря. Вот. Ну ладно. Ну вот, нет, а на самом деле,
[03:16:03.040 --> 03:16:06.240]  если говорить про задачи, то да, это, конечно, там, я помню, там было какое-то видео где-то,
[03:16:06.240 --> 03:16:11.480]  вот там какая-то задача по математике. Я, к сожалению, все время запамятую, что это за задача. Там
[03:16:11.480 --> 03:16:15.520]  что-то была, то есть была какая-то задача, что там есть какая-то точка, то есть там N точек,
[03:16:15.520 --> 03:16:21.640]  там никакие, там три не лежат на одной прямой. Вокруг одной вершинки, по-моему, там вращается
[03:16:21.640 --> 03:16:28.560]  какая-то прямая, в какой-то момент она перекидывается. Взятка проводится прямая, и типа она вращается,
[03:16:28.560 --> 03:16:33.560]  как только она касается новой вершин и новые точки, она начинает уже относительно ее вращаться.
[03:16:33.560 --> 03:16:40.120]  А, и что там надо было доказать? Доказать, что она вернется в исходное положение. А, ну да.
[03:16:40.120 --> 03:16:49.480]  Ну, значит, нет-нет-нет, смотрите еще раз. Ладно, раз об этом зашло есть. Представьте,
[03:16:49.480 --> 03:16:55.640]  на плоскости доноем точек. Две, значит, никакие три не лежат на одной прямой. Значит, вокруг одной
[03:16:55.640 --> 03:16:59.480]  точкой вращается прямая, но там дается какая-то точка, дается какая-то прямая. Она вращается там,
[03:16:59.480 --> 03:17:03.400]  скажем, против часовой стрелки. Если она натыкается на другую прямую с этой или с этой стороны,
[03:17:03.400 --> 03:17:09.200]  то дальше она вращается уже вокруг нее. Докажите, что прямая вернется в исходное положение.
[03:17:09.200 --> 03:17:22.080]  Нет, вокруг выпукла оболочка, если бы у тебя исходная прямая была бы вокруг выпукла оболочка,
[03:17:22.080 --> 03:17:25.480]  а так, в принципе, если у тебя там... Видимо, там все-таки более интересные условия,
[03:17:25.480 --> 03:17:33.360]  что там может быть... Короче, что изначально прямая и не бывая. Да, любая, любая. Нет,
[03:17:33.360 --> 03:17:38.720]  там просто да. Нет, я помню, меня позабавил, что задача подавалась как, что эту задачу на полный
[03:17:38.720 --> 03:17:43.120]  балл решил только один человек, и тот абсолютный чемпион этого междара, который решил вообще все на
[03:17:43.120 --> 03:17:48.600]  полный балл. Просто единственный тотал. И при этом, конечно, задача простая, но, не знаю, окажется,
[03:17:48.600 --> 03:17:56.560]  любой спортивный программист в адекватном уровне решит ее минут за 15. Ну, можете попробовать,
[03:17:56.560 --> 03:18:00.160]  я не знаю, потом мы можем там обсудить, но, на самом деле, полностью, просто вот, просто задать,
[03:18:00.160 --> 03:18:05.120]  просто знакомый с концепцией, вращающейся с конлайн, там, скажем, там, который просто имеет
[03:18:05.120 --> 03:18:10.040]  опыт решения задач на вращающейся с конлайн, скорее всего, решит ее быстро. Да, вот тоже,
[03:18:10.040 --> 03:18:14.400]  вот преимущество, когда программисты неожиданно начинают диктовать математикам свои условия, да.
[03:18:14.400 --> 03:18:27.720]  Вот. Ладно. Во-во-во. Именно. Так. Именно. И заметим, что, и заметим, что эти количества
[03:18:27.720 --> 03:18:40.280]  постоянно сохраняются, да. Вот. Вот. Так вот. Ладно. Вернемся к интеллектуальной игре ним. Так, раз
[03:18:40.280 --> 03:18:44.080]  она интеллектуальная, расскажите мне, пожалуйста, а кто в ней выигрывает вообще или проигрывает?
[03:18:44.080 --> 03:18:52.600]  Да, вот это важно, кто-то все говорят, да, конечно, эта игра выигрышная, но это неправда. Она выигрышная,
[03:18:52.600 --> 03:19:01.000]  только СН больше нуля. А если Н равно нулю, то это игра проигрышная, и это важно. То есть,
[03:19:01.000 --> 03:19:06.040]  тут игра проигрышная, это выигрышная. То есть, видите, уже на этом уровне есть принципиальная
[03:19:06.040 --> 03:19:13.320]  разница. Да, такая игра называется звездочка Н. И, в принципе, теорему два, на самом деле,
[03:19:13.320 --> 03:19:21.440]  можно переформулировать как все проигрышные игры эквивалентные звездочка ноль. То есть,
[03:19:21.600 --> 03:19:25.320]  звездочка ноль это такая абсолютно проигрышная игра. То есть, она это просто такая игра,
[03:19:25.320 --> 03:19:36.240]  в которой нельзя сделать ход. Вот. Мы могли просто нарисовать игру на вершины и нуля играть? Ну,
[03:19:36.240 --> 03:19:43.160]  могли, да. Но мы ее будем просто называть звездочка ноль, потому что по факту это она есть. Так вот. Идем
[03:19:43.160 --> 03:19:50.720]  дальше. Ну, вот. Так вот. Ну, теперь вот возникает следующий уровень. Да, мы научились понимать про
[03:19:50.720 --> 03:19:55.520]  игры там, что они там выигрышные и проигрышные, если не суммировать. Но теперь хочется подумать.
[03:19:55.520 --> 03:20:06.200]  Ну, это бывают же, наверное, игры эквивалентные нимом, правда? Наверное, бывают. Но нет,
[03:20:06.560 --> 03:20:15.480]  но начнем вот с чего. Так. Ну, начнем с маленькой технической теоремы, которая нам поможет. Теорема
[03:20:15.480 --> 03:20:28.640]  три. Значит, игра A эквивалентна нему языка мне. Тогда и только тогда, когда игра A плюс звездочка
[03:20:28.640 --> 03:20:38.480]  и проигрышная. То есть вот такой неожиданный критерий, что игра эквивалентна нему какому-то
[03:20:38.480 --> 03:20:52.400]  тогда и только тогда, когда в сумме с ним она проигрышная. Вот. Понятно, да? Вот. Значит,
[03:20:52.400 --> 03:20:58.960]  соответственно. Как же это нам доказать? Ну, на самом деле, как ни странно, сейчас,
[03:20:58.960 --> 03:21:03.240]  по-моему, впервые в жизни мы не будем пользоваться каким-то там, типа найдем какие-нибудь стратегии.
[03:21:03.240 --> 03:21:10.760]  Потому что, смотрите, доказательство в эту сторону будет звучать так. A эквивалентна звездочка
[03:21:10.960 --> 03:21:20.280]  и, то есть, из этого следует, что A плюс звездочка i эквивалентна звездочка i плюс звездочка i. Логично,
[03:21:20.280 --> 03:21:27.840]  да? Ну, потому, что A эквивалентна звездочка i, а звездочка i эквивалентна звездочка i. По
[03:21:27.840 --> 03:21:35.360]  теориям и один, это эквивалентна этому. Но эта игра проигрышная, потому что она ациклическая
[03:21:35.360 --> 03:21:45.200]  симметрично логично да все значит в эту сторону доказали теперь докажем в
[03:21:45.200 --> 03:21:52.480]  обратную сторону то есть если у нас а плюс звездочка и проигрышная то есть
[03:21:52.480 --> 03:22:00.760]  эквивалентно нулю да потерями 2 это одно это уже да то из этого следует что
[03:22:01.440 --> 03:22:07.160]  даже не так я сделаю смотрите по-другому звездочка 0 эквивалентно а плюс звездочка и
[03:22:07.160 --> 03:22:13.120]  значит из этого следует что звездочка и эквивалентно такой игре как а плюс
[03:22:13.120 --> 03:22:26.040]  звездочка и плюс звездочка и логично да а это но заметим что это эквивалентно ну
[03:22:26.040 --> 03:22:31.080]  так как звездочка и плюс звездочка и эквивалентно нулю да то это эквивалент на
[03:22:31.080 --> 03:22:41.320]  игре а плюс звездочка 0 вот равно а все
[03:22:41.720 --> 03:22:45.520]  взять вот да немножко вот меня вот всегда радует это доказательство потому
[03:22:45.520 --> 03:22:49.400]  что оно выглядит как вот просто мы тут что-то то есть как не такая некоторая
[03:22:49.400 --> 03:23:08.320]  магия просто а где мы во первых где мы этим пользовались нет я написал что
[03:23:08.320 --> 03:23:11.520]  звездочка 0 эквалентна плюс звездочки то есть мы предполагаем что плюс звездочка и
[03:23:11.520 --> 03:23:22.200]  проигрышное да но это по теореме 2 все проигрышные игры эквивалентную нулю вот а понял да тут
[03:23:22.200 --> 03:23:27.520]  конечно по-хорошему написать что 0 плюс звездочка и но заметим что звездочка и
[03:23:27.520 --> 03:23:32.280]  эквивалентно звездочка 0 плюс звездочки и ну потому что очевидно от того что вы
[03:23:32.840 --> 03:23:42.960]  уберете суммы игру в которой нет ходов ничего не поменяется вот так что вот немножко так что
[03:23:42.960 --> 03:23:52.160]  получилось вот такая вот немножко магии вот ну кстати приятно да что у нас кстати в играх
[03:23:52.160 --> 03:23:58.960]  появился 0 то есть получается там так по-моему чем чем можно называть получается множество
[03:23:59.840 --> 03:24:13.360]  чем там обелевым кольцам обеля а обелевым маной нам да чего поэтому маной это не группа
[03:24:13.360 --> 03:24:19.240]  нет ну я вот как раз вот запамятовал что там что там маной что там группа там вот это
[03:24:19.240 --> 03:24:30.640]  не важно вот этот ну смотрите звездочка 0 эквалентно плюс звездочка и по теореме 2
[03:24:30.640 --> 03:24:36.160]  да следовательно давайте к обеим частям этого что прибавим по эквивалентной игре то есть
[03:24:36.160 --> 03:24:42.520]  просто по звездочке и получилось вот это да но это эквивалентно и просто по сути
[03:24:42.520 --> 03:24:52.680]  вот а эта штука заметим что в ней вот игра звездочка и плюс звездочка и вот это вот
[03:24:52.680 --> 03:24:54.920]  может быть заменена на звездочка 0 как эквивалентно
[03:24:54.920 --> 03:25:20.240]  да так но ну почему потому что звездочка и плюс звездочка и это симметричная циклическая
[03:25:20.240 --> 03:25:29.480]  но пойти у нас была первая теория ма да о том что если а 1 эквивалентно б1 а 2 эквалентно
[03:25:29.480 --> 03:25:37.240]  б2 то один плюс а 2 эквалентно б1 плюс б2 вот мы ровно этим здесь и занимаемся то есть просто
[03:25:37.240 --> 03:25:41.160]  когда мы прибавляем и при этом еще и одинаковые игры вообще который уж точно то есть каждый
[03:25:41.160 --> 03:25:47.640]  град друг другу эквивалентно да на всякий случай дает эквивалентность это реально отношение
[03:25:47.640 --> 03:25:53.160]  эквивалентности да потому что там да рефлексивность симметричность транзитивность
[03:25:53.160 --> 03:26:00.840]  ну тут думаю очевидно вот так вот значит у нас появился вот такой приятный критерий и мы им
[03:26:00.840 --> 03:26:12.840]  будем пользоваться пользоваться будем следующим образом совершенно мистическим да если вы
[03:26:12.840 --> 03:26:18.480]  случайно ну если вы конечно не знаете теорию который я сейчас рассказываю ну на уровне
[03:26:18.480 --> 03:26:23.800]  результатов конечно это результаты конечно общие известные могут быть ну-ка так ну-ка давайте
[03:26:23.800 --> 03:26:29.520]  рассказ так а ну-ка расскажите кстати кто вообще знает о чем вы тут вообще говорим и каким
[03:26:29.520 --> 03:26:38.680]  результатом мы придем ну типа того ну и вопрос как вы вычислять еще кто знает словосочетание
[03:26:38.680 --> 03:26:46.360]  функция шпрага гранди давайте так так ну вот но сейчас мы ее а кто умеет ее доказывать
[03:26:46.360 --> 03:27:00.080]  ну ладно не будем тогда палить интригу но значит мы потому что это все равно это все
[03:27:00.080 --> 03:27:10.760]  аккуратненько с нуля выводим так что все нормально и так тирема 4 говорим мы вот значит говорим
[03:27:10.760 --> 03:27:19.120]  предположим что у нас есть интеллектуальная игра а и из нее и нам известны все ходы эти
[03:27:19.120 --> 03:27:28.080]  ходы ведут в игры а 1 а 2 там а 3 и так далее а к ну понятно что ну я думаю понять понятие
[03:27:28.080 --> 03:27:36.000]  игра идет в игру понятно да теперь вот а 1 а 2 и так далее а к и нам известно что а 1 эквивалентно
[03:27:36.000 --> 03:27:44.520]  не муис и 1 камней а 2 эквивалентно не муис 2 к из двух камней тут и 3 и так далее тут эквивалентно
[03:27:44.520 --> 03:27:57.160]  не муис и как вот эти ишки нам известны вот понятно да тогда я утверждаю что из этого следует
[03:27:57.160 --> 03:28:07.640]  что а тоже эквивалентно не му из и камней где и равно чему
[03:28:07.640 --> 03:28:17.880]  ну да ну ладно вот да вот за да вот особенно весело да пытаться угадать конечно в аудитории
[03:28:17.880 --> 03:28:24.440]  которые не знают заранее ответа да причем знаете даже правда даже интересно попытаться вообще
[03:28:24.600 --> 03:28:28.640]  вывести но вот то есть а действительно что это за и вообще давайте думать что это за
[03:28:28.640 --> 03:28:33.880]  и должно быть то есть это должна то есть как мы будем доказывать те рему вне зависимости от
[03:28:33.880 --> 03:28:39.280]  того что тут написано да то есть мы будем доказывать мы попытаемся доказать что
[03:28:39.280 --> 03:28:47.520]  а плюс и звездочка и проигрышная игра правда но тогда значит тогда мы перебираем ходы какие
[03:28:47.520 --> 03:28:54.960]  ходы есть есть ходы либо в звездочка и житое какой-нибудь плюс звездочка и и
[03:28:54.960 --> 03:28:59.880]  эта игра должна быть выигрышная да а теперь давайте себе представим вот
[03:28:59.880 --> 03:29:07.480]  кстати простой вопрос вот это игра когда это игра выигрышная когда проигрышная
[03:29:08.000 --> 03:29:15.360]  вот кстати вот сумма двух нимов она когда выигрышная когда проигрышно но да
[03:29:15.360 --> 03:29:18.840]  но если они равны то проигрышная мы уже выяснили по симметричной стратегии а
[03:29:18.840 --> 03:29:22.960]  если не равны то как бы она выигрышная потому что первый игрок быстро сводит
[03:29:22.960 --> 03:29:28.360]  ее к симметричной игре то есть поэтому если мы хотим чтобы это было в то
[03:29:28.360 --> 03:29:36.920]  значит нужно чтобы и жи не было равно и понятно да то есть для любого жи верно
[03:29:36.920 --> 03:29:44.480]  что и житое не равно но первый игрок может пойти в игру а плюс звездочка и
[03:29:44.480 --> 03:29:54.480]  штрих и штрих меньше чем и причем любое да но тогда но вот и тогда наверное у
[03:29:54.480 --> 03:30:01.400]  второго игрок второго игрока должен быть выигрышный ход правда но чтобы чтобы
[03:30:01.400 --> 03:30:04.760]  он железно был наверное желательно чтобы он был в апп потому что а плюс
[03:30:04.760 --> 03:30:10.880]  что-то там не понятно пока что да но вот поэтому желательно чтобы то есть
[03:30:10.880 --> 03:30:16.920]  наверное желательно чтобы для любого из штрих меньше и было что там звездочка что там
[03:30:16.920 --> 03:30:24.720]  звездочка и штрих лежит вот в этом множестве там и 1 там и 2 и так далее то есть тогда
[03:30:24.720 --> 03:30:29.440]  получается что как бы мы докажем теоремы если окажется что и в этом множестве не
[03:30:29.440 --> 03:30:38.120]  лежит а все меньшие числа в этом множестве есть логично да то есть просто вот у нас
[03:30:38.120 --> 03:30:43.280]  доказательства и нарисовалось само и мы автоматически вводим что и равно действительно
[03:30:43.280 --> 03:30:52.360]  мекс от вот этого и 1 и 2 и так далее и к это называется минимума почему мекс потому что
[03:30:52.360 --> 03:31:08.440]  минимум исключить то есть то есть это как бы то есть и то есть нам дается множество
[03:31:08.440 --> 03:31:14.680]  из целых не отрицательных чисел мекс таких это минимальное целое не отрицательное число
[03:31:14.680 --> 03:31:33.560]  которого нет в этом множестве ну кстати это может быть и мульти множество не сломается
[03:31:33.560 --> 03:31:41.520]  рассуждение о том что произвольная игра плюс произвольная игра проигрышная это верно только
[03:31:41.520 --> 03:31:46.080]  то есть это сработает то вот вот это рассуждение сработает ток вот на халяву только если игра
[03:31:46.080 --> 03:31:54.640]  циклическая но если ациклические но я вам даже больше скажу если мы сейчас докажем эту теорию
[03:31:54.640 --> 03:32:03.200]  мы просто убедимся что любая ациклическая игра эквивалентной не мы можем сказать просто
[03:32:03.200 --> 03:32:16.640]  ну для ну ну хорошо а для удобства видимо для удобства записи нет хорошо можно сказать что
[03:32:16.640 --> 03:32:21.960]  если бы ациклическая то да пусть бы ациклическая тогда эквалентно б это дает то есть тогда
[03:32:21.960 --> 03:32:30.440]  эквалентно б тогда и только тогда когда плюс б эквалентно там проигрышная абсолютно нет
[03:32:30.440 --> 03:32:34.640]  а вообще произвольная хоть циклическая хоть чего но циклическая игра иногда тоже бывает
[03:32:34.640 --> 03:32:45.840]  эквалентной нет хотя нет не факт да то есть там мы просто применили теорию внутри доказали
[03:32:45.840 --> 03:32:52.080]  что если и взять вот таким то у второго игрока реальность выигрышная стратегия ну потому что
[03:32:52.080 --> 03:32:57.520]  либо первый игрок пойдет в какой-то ним вот из этих и тогда это два неравных ним игра выигрышная
[03:32:57.520 --> 03:33:03.880]  либо он уменьшит и но следующим ходом мы просто из а пойдем соответствующий ним потому что все
[03:33:03.880 --> 03:33:09.600]  меньшие у нас представлены и перенот и первый игрок получается попал в проигрышное положение все
[03:33:09.600 --> 03:33:21.560]  так что вот такой вот неожиданный мерз то есть обратите внимание да то есть в принципе то есть
[03:33:21.560 --> 03:33:29.800]  отсюда на самом деле прямое следствие то есть любая то есть любая а циклическая игра
[03:33:29.800 --> 03:33:39.320]  эквивалентно какому-то нему из каких-то н камней
[03:33:39.320 --> 03:33:56.080]  вот почему ну просто мы берем просто то есть как-то доказать мы берем просто этот ациклический
[03:33:56.080 --> 03:34:04.280]  граф и в порядке то но ты в порядке топологической сортировки для каждой вершины тупо вычисляем
[03:34:04.280 --> 03:34:12.680]  мекс из всех гимберов которые мы уже нашли в чем заметим что самое приятное мы это можем сделать
[03:34:12.680 --> 03:34:19.880]  конструктивно за суммарное время от в плюсе но маленький приятный факт если вам данный к чисел
[03:34:19.880 --> 03:34:32.320]  то вы мекс таких можете легко найти за отка плюс один вот догадываетесь каким образом каким
[03:34:32.320 --> 03:34:40.480]  ну да то есть заметим просто сдадим массивчик от нуля до к и будем помечать какие числа есть
[03:34:40.480 --> 03:34:45.400]  если какое число больше ка значит игнорируем тогда после этого прибегаемся от нуля до ка и
[03:34:45.400 --> 03:34:49.280]  находим первое не помеченное а такое найдется потому что от нуля до ка у нас ка плюс одно
[03:34:49.280 --> 03:34:56.440]  число все тогда получается что каждое следующее число кажется но вот мы найдем через предыдущих
[03:34:56.440 --> 03:35:03.160]  за от количества ребер из него плюс один получается в плюсе да это число называется
[03:35:03.160 --> 03:35:11.400]  нимбер но точнее так то есть для вот ациклической игры а тот по-разному в математике это называется
[03:35:11.400 --> 03:35:22.760]  либо сг от а почему сг потому что функция шпара гранди или шпара грюнди там я не знаю вот вот так
[03:35:22.760 --> 03:35:29.240]  но в каком-то разборе какой-то задачи на самом деле я вот это число на самом деле видел что не
[03:35:29.240 --> 03:35:50.440]  сг я видел что оно называется нимбер ну да да на самом деле да поэтому дайте поэтому я
[03:35:50.440 --> 03:35:56.160]  тоже меня видимо постоянно будет проскальзывать слово нимбер вот то есть заметим теперь что если
[03:35:56.160 --> 03:36:01.520]  у нас есть ациклическая игра то для каждой ее вершины я могу легко найти нимбер причем за
[03:36:01.520 --> 03:36:12.960]  7 точку в плюсе но вот более того теперь сложить две игры для меня теперь расплюнуть потому что
[03:36:12.960 --> 03:36:17.800]  я просто вычитаю нимбер одной нимбер второй если они равны то игра проигрышная если они
[03:36:17.800 --> 03:36:28.760]  не равны то игра выигрышная логично да но на межнаре 90 года подсунули конечно более сложную игру
[03:36:28.760 --> 03:36:42.520]  а если вам складывают три или четыре или да причем там на самом деле даже не ну там не было
[03:36:43.120 --> 03:36:48.080]  там просто сказали что вас нимбер на к камнях ну короче ним на к камешках то есть как бы просто
[03:36:48.080 --> 03:36:54.280]  данный к камешках в них какие-то количества там в них количество кучка количество камней равно а1
[03:36:54.280 --> 03:37:00.400]  а2 и тарталия а к вот за один ход вы имеете право брать произвольное не нулевое количество камней
[03:37:00.400 --> 03:37:06.240]  но только из одной кучки на ваш выбор какой проигрывает тот кто не сможет взять ничего кто
[03:37:06.240 --> 03:37:12.880]  выиграет при правильной игре да вот такую задачу там походу никто не решил я не знаю там
[03:37:12.880 --> 03:37:19.120]  насколько математики насколько математик и старт кредит сейчас понятием к сор ой спали
[03:37:19.120 --> 03:37:25.920]  ой спалил ответ да но в причем да тут ну хотя ладно тут это в этой теме понятно что про мексик
[03:37:25.920 --> 03:37:34.080]  сор знают все вот как он доказывается не факт но да а ну по сути но давайте это уже тогда добьем
[03:37:34.080 --> 03:37:39.480]  потому что по сути чтоб складывать произвольное количество циклических игр на самом деле нам
[03:37:39.480 --> 03:37:46.440]  осталось только одно доказать то есть нам по сути теперь надо то есть мы теперь то есть там по
[03:37:46.440 --> 03:37:56.920]  сути теперь надо доказать то есть сериям опять да что звездочка и плюс звездочка g эквивалентно
[03:37:56.920 --> 03:38:07.120]  звездочка от и к сор же просто тот самый наш любимый побитый двоичный к сор все то есть в общем-то
[03:38:07.120 --> 03:38:19.280]  на этом теория о циклических суммы о циклических игры заканчивается но как же доказать ну доказать
[03:38:19.280 --> 03:38:25.000]  но я бы даже так я бы избавился от этого сора я бы доказал так ну то есть на самом деле надо
[03:38:25.000 --> 03:38:30.160]  доказать следующее но стой ну с точки зрения теории мы да то есть надо доказать что эквивалентно того
[03:38:30.160 --> 03:38:37.320]  что звездочки но вот то есть вот это утверждение теория оно эквивалентно тому что звездочка и
[03:38:37.320 --> 03:38:51.240]  плюс звездочка g плюс звездочка и к соржи это проигрышная игра понятно да значит ну значит ну
[03:38:51.240 --> 03:38:58.640]  аккуратную схему доказательства я предложу такое я скажу так мы докажем так значит утверждение
[03:38:58.640 --> 03:39:12.840]  звездочка и плюс звездочка и g плюс звездочка к значит выигрышно если и к соржи к сорка не
[03:39:12.840 --> 03:39:23.880]  равно нулю и проигрышна иначе вот по сути по какой схеме это можно доказывать доказывать будем
[03:39:23.880 --> 03:39:34.800]  по индукции доказательства по индукции по и плюс g плюс к на этот раз прям реально сумма целых
[03:39:34.800 --> 03:39:44.240]  не отрицательных чисел но вот ну база понятно да и равно g равно к нулю сумма трех нулей по любому
[03:39:44.240 --> 03:39:53.880]  0 понятно да но теперь дальше заметим что ну там переход говорит так вот у нас и жк и ход есть но
[03:39:53.880 --> 03:39:59.680]  тогда если и к соржи к сорка равно нулю то заметим что как бы мы не походили то к сор перестанет
[03:39:59.680 --> 03:40:05.520]  быть равно нулю и мы тем самым сводимся уже к дако дако по предположению индукции выигрышной
[03:40:05.520 --> 03:40:15.720]  игре правда остается доказать только одно по сути что если и к соржи к сорка не равно нулю то
[03:40:15.720 --> 03:40:23.680]  существует ход по которому и к соржи к сорка будет станет равен нулю то есть вот все что осталось
[03:40:23.680 --> 03:40:30.280]  доказать то есть такой математический факт если и к соржи к сорка не равно нулю то одной из этих
[03:40:30.280 --> 03:40:41.640]  чисел можно уменьшить так чтоб к сор стал равен нулю вот понятной идеи ну как оказывается ну как
[03:40:41.640 --> 03:40:49.160]  говорится вспомним фенвичка ну вот и сделаем примерно тоже самое а именно ну то есть вспомним
[03:40:49.160 --> 03:40:56.120]  так как мы рисовали а мы рисуем это примерно это же рисуем и жк да идем слева направо из
[03:40:56.120 --> 03:41:00.440]  бесконечности видим нули нули нули нули нули нули нули нули нули нули нули в какой-то момент
[03:41:00.440 --> 03:41:11.000]  стали появляться единицы но сначала эти единицы ходят парами вот а иногда там 0 0 там вот что-то
[03:41:11.000 --> 03:41:19.640]  такое но мы знаем что но вот но мы знаем что к сор он нулю не равен да вот эти все штуки
[03:41:19.640 --> 03:41:31.320]  делают его 0 0 0 0 0 0 0 и тут опа в какой-то момент неожиданно оказалось один что это значит это
[03:41:31.320 --> 03:41:40.040]  значит что хотя бы одной из этих чисел неожиданно стало то есть стало единицей и более того тут как бы
[03:41:40.040 --> 03:41:49.080]  либо три кола либо ровно один кол мы их нечетное количество понимаете да ну пусть без ограничения
[03:41:49.080 --> 03:41:59.920]  общности это оказалось числе к единицы оказалось значит тогда идея такая но тогда что-то у нас
[03:41:59.920 --> 03:42:11.840]  происходит тут какие-то рандомы расположены 0 0 там 0 там 1 0 0 там 1 1 0 или там 0 1 0 0 1 1 да тут
[03:42:11.840 --> 03:42:18.600]  можно было видимо все ой они все ли этот способ выписал так что я там еще не выписал а 0 0 1 я не
[03:42:18.600 --> 03:42:27.960]  выписал но дальше подгон делаем такой то есть смотрим где тут то есть смотрим так во-первых
[03:42:27.960 --> 03:42:34.920]  говорим что в этом месте у ка будет не единица а 0 и тогда тут вместо единиц к сор будет 0 а дальше
[03:42:34.920 --> 03:42:40.000]  заметим что так как мы уменьшили этот бит то мы им право с имеем право с остальными битами это
[03:42:40.000 --> 03:42:45.320]  числа к делать абсолютно что угодно правда и число ка все равно станет останется меньше чем
[03:42:45.320 --> 03:42:51.720]  было изначально так давайте теперь биты просто подгонять так чтобы получался 0 то есть вот
[03:42:51.720 --> 03:42:59.720]  смотрите тут вот к сора получается вот такие вот как-то так да ну и тогда идея такая где я к сор
[03:42:59.720 --> 03:43:07.480]  0 не трогаем а где к сор 1 значит меняем бит да иногда приходится это делать заменяя не
[03:43:07.480 --> 03:43:19.680]  только единичку на 0 но и 0 на единичку вот то есть вот так и вот только 0 тут 0 вот собственно и
[03:43:19.680 --> 03:43:23.880]  все то есть реально в реальном коде конечно это делать не надо потому что в реальном коде вы
[03:43:23.880 --> 03:43:29.240]  просто переберете что давайте попробуем заменить ка на х соржи если х соржи меньше ка значит у нас
[03:43:29.240 --> 03:43:35.480]  получилось если нет перебираем другие варианты но вот но вот такого математическое заказательство
[03:43:35.480 --> 03:43:42.640]  того что один из вариантов точно сработает вот видите в общем-то оказалось даже не сильно
[03:43:42.640 --> 03:43:54.840]  сложно нет это это доказательство того что вы его найдете то есть вы можете так это и в коде
[03:43:54.840 --> 03:44:04.960]  написать конечно не зачем вот тот я говорю не зачем потому что реально вы просто как бы просто
[03:44:04.960 --> 03:44:09.640]  перебираете что вас вам надо либо ка сделать х соржи либо джи сделать х сорка либо и сделать
[03:44:09.640 --> 03:44:17.120]  джи сорка сорка поэтому тупо перебираете все варианты как бы утверждение если они к сор не равен
[03:44:17.120 --> 03:44:25.320]  нулю то один из этих вариантов вас устроит хотя бы один вот то есть в принципе ну заметим так
[03:44:25.320 --> 03:44:31.600]  ну заметим что если в этом вот максимальном столбце одна единичка то вас устроит только один
[03:44:31.600 --> 03:44:40.360]  вариант если тут было три единички то вас устроил походу устроили бы все варианты вот понятно вот
[03:44:40.360 --> 03:44:49.440]  на эту тему тут конечно очень интересно вот ну и тогда получается что значит сумма и плюс ж
[03:44:49.440 --> 03:44:55.920]  эквивалентно к сору но и получается что если вы складываете даже не две игры а 3 4 5 6 то получается
[03:44:55.920 --> 03:45:03.440]  вам просто нужно найти нимберы и их просурить да то есть не знаю там сложно было наверное да вот
[03:45:03.440 --> 03:45:08.440]  намежная видимо никто не смог додуматься что ответ на задачу если побитого и двоичное какое-то
[03:45:08.440 --> 03:45:14.520]  там или там один плюс о два чего да это был мечтар по математике реально
[03:45:14.520 --> 03:45:30.680]  ну а нет а кто сказал что она не оно намежная я не ну не знаю ну опять там вот но да
[03:45:30.680 --> 03:45:41.600]  но я я не знаю либо я что-то перепутал в байке либо скажет что скорее всего это
[03:45:41.600 --> 03:45:47.120]  просто была видимо не самое видимо была не сильно из не не сильно известная теория в
[03:45:47.120 --> 03:45:54.640]  математической среде вот ну мало ли там всякая программирование тоже не все знают как там
[03:45:54.640 --> 03:46:01.200]  за линейное время у строки найти меня там минимальный этик графический суффикс да такой
[03:46:01.200 --> 03:46:08.000]  алгоритм есть и без хэшей вот вот только вот но вот то есть ну просто на практике он может
[03:46:08.000 --> 03:46:12.400]  просто не особо пока нужен на самом деле потому что но вот вот подвеска просто вот не знали а
[03:46:12.400 --> 03:46:17.840]  тут вот с этой точки зрения классно потому что дали новую задачу то есть задачу на вот
[03:46:17.840 --> 03:46:22.720]  принципиально там то есть другое место то есть эти эти там ваши там какие-то глобальные понятия
[03:46:22.720 --> 03:46:28.160]  какой-то непрерывности там по производной там и прочим там чем-то там черти чем еще я там ну я
[03:46:28.160 --> 03:46:35.280]  мало занимался на математике не знаю вот то есть и вот звать это вылезал в трубу что дали что-то
[03:46:35.280 --> 03:46:41.040]  принципиально новое вот но вот почему-то никто не решил хотя конечно действительно странно
[03:46:41.040 --> 03:46:44.760]  потому что теория вроде как тридцатого то есть там шпрагранде вроде это все в тридцатых годах
[03:46:44.760 --> 03:46:50.240]  писали ну или в другом виде это писали но возможно это как была какая-то относительно
[03:46:50.240 --> 03:46:55.160]  ой ну хотя философский опрос потому что тут как бы надо говорить еще
[03:46:55.160 --> 03:47:01.680]  потому что как бы есть на самом деле по теории есть такая классическая книга такого автора как
[03:47:01.680 --> 03:47:19.600]  конвей там так и называется combinatorial game theory про что но не помню да как
[03:47:19.600 --> 03:47:26.560]  честно честно скажу я ее так это подробно не читал ну не ну я ну сакша могли рассказывать
[03:47:26.560 --> 03:47:42.880]  конечно да пошеда так а да чего доказать то киур мы хотели доказать что а при зелочке
[03:47:42.880 --> 03:47:50.680]  ну точнее нет мы должны найти такой и что да но мы это но но но левого слова я понял там
[03:47:50.680 --> 03:47:57.960]  а правая не но мы не вывели но мы сказали что то есть ну наша задача не вывести наша
[03:47:57.960 --> 03:48:02.560]  задача как бы замкнуть доказательства то есть мы замкнем доказательства если для любого
[03:48:02.560 --> 03:48:11.000]  и штрих меньше и выяснито что плюс звездочка и это выигрышная игра вот как нам это вывести так
[03:48:11.000 --> 03:48:16.120]  ну наверное если все и штрихи меньше и будут присутствовать вот в этом списке а куда мы
[03:48:16.120 --> 03:48:24.720]  можем пойти то тогда мы победили и получается что доказательства зайдет если и само в этом
[03:48:24.720 --> 03:48:29.720]  списке не будет но все меньшие числа в этом списке будут но вот так появился мекс то есть
[03:48:29.720 --> 03:48:34.080]  получается мы просто берем минимальное число число которое в этом списке не представлено все
[03:48:34.080 --> 03:48:45.760]  так что такая вот не как это не не сильно сложная логика
[03:48:45.760 --> 03:48:53.680]  вот так что да но там конечно разная подлянка знаете последнее наверное что мы сегодня
[03:48:53.680 --> 03:49:00.320]  расскажем если нас еще не выгоняют это называется но там есть еще пара смешных
[03:49:00.480 --> 03:49:06.960]  такая смешная га называется ним поддавки вот представьте себе вы играете в ним на
[03:49:06.960 --> 03:49:14.640]  большом количестве кучек но при этом если вы делаете если вы не можете сделать ход вы выигрываете
[03:49:14.640 --> 03:49:26.040]  почему нет на самом деле не мерзость хотя нет нет на самом деле не мерзость и знаете то есть
[03:49:26.040 --> 03:49:29.520]  на самом деле думаю в следующий раз мы начали давайте нет все таки мы сейчас остановимся но я
[03:49:29.520 --> 03:49:33.800]  сейчас сформулирую две задачи с разбора которых мы начнем следующую лекцию можете ради интереса
[03:49:33.800 --> 03:49:39.720]  попробовать их решить но если вы не знаете их конечно то есть первая задача ним поддавки да то
[03:49:39.720 --> 03:49:44.920]  есть допустим у вас есть n кучек в которой есть там а в первой кучке один камней во второе 2 в 3
[03:49:44.920 --> 03:49:50.720]  а 3 и так далее там да там да и вот вы имеете право на каждом ходу делать брать произвольное
[03:49:50.720 --> 03:49:56.640]  количество камешков но только из одной кучки произвольное не нулевое но если как бы камешка
[03:49:56.640 --> 03:50:02.400]  в кучках вообще нигде не осталось то вы победили то есть наоборот то есть у нас как бы наоборот
[03:50:02.400 --> 03:50:06.040]  получается да то есть раньше бы сказали что если во всех камешках 0 том и проиграли теперь бы
[03:50:06.040 --> 03:50:11.320]  победили то есть условно тот самый забравший последний камешек про наоборот проигрывает
[03:50:11.320 --> 03:50:16.200]  спрашивается вот тоже надо определить математически кто выиграет при правильной
[03:50:16.200 --> 03:50:27.800]  игре вот и вторая ика тоже такая очень смешная игра но в ней как бы помимо теории придется
[03:50:27.800 --> 03:50:34.960]  что-то думать называется знаменитый хакен буш да я честно говоря много лет думал что хакен буш
[03:50:34.960 --> 03:50:48.280]  это фамилия нет а пока обычный ну да честно скажу я пока даже не пытался это рассказывать
[03:50:48.280 --> 03:50:57.120]  вот хотя наверно когда-нибудь надо вот ну по чем посмотрим может так вот доходу от я думал
[03:50:57.120 --> 03:51:02.760]  что хакен буш это фамилия но на самом деле хакен буш это просто такие английские слова
[03:51:02.760 --> 03:51:11.760]  hacking bushes подрезание кус да но задача действительно такая у вас есть подвешенное
[03:51:11.760 --> 03:51:20.080]  дерево вот жестко подвешенное за корень но это мы конечно но это мы себе воображаем что у нас
[03:51:20.080 --> 03:51:26.240]  дерево такое сверху вниз растет так вот на каждом шаге вы имеете право удалить
[03:51:26.240 --> 03:51:33.400]  ребро и все висящие на нем под дерево просто вот обрезать проигрывает тот кто не может
[03:51:33.400 --> 03:51:50.120]  сделать ход время пошло что-что нет ну вот очевидно циклическая да очень хоть да естественно
[03:51:50.120 --> 03:51:55.240]  хочется да явно хочется находить видимо ее нимбер потому что очевидно что да между вот разными
[03:51:55.240 --> 03:51:59.440]  веточками игры игра игры конечно независимая хочется найти нимбер каждой этой веточки и
[03:51:59.440 --> 03:52:10.200]  собственно их проксорить естественно ну понятно да дфсом нет он по сути да то есть надо дфсом
[03:52:10.200 --> 03:52:16.080]  найти какой-то нимбер но в итоге у вас задача жила было дерево т и у него есть какой-то и
[03:52:16.080 --> 03:52:22.400]  допустим это игра эквивалентно звездочка икс а теперь представим что у нас это дерево
[03:52:22.400 --> 03:52:32.040]  т подвесилось за одно ребро спрашивается да это эквивалентно какому-то нимберу но какому
[03:52:32.040 --> 03:52:46.400]  когда-то эту задачу дали в алкаша в параллельце да а предлагалось типа это придумать предлагалось
[03:52:46.400 --> 03:53:07.360]  это придумать ну в принципе я как бы рассказал видимо ну да ну нормально господи хотя страшно
[03:53:07.360 --> 03:53:19.600]  в школе в целом не ну бывает ну что делать вы знаете мне геомы толком не было по школе когда
[03:53:19.600 --> 03:53:24.160]  мне я первый раз читали геометрию потом выяснилось что да у меня были проблемы что толком не
[03:53:24.160 --> 03:53:35.440]  понимала что такое аксимус вообще вот а надо было там так я ну если шестикласс в пятую группу
[03:53:35.440 --> 03:53:49.000]  алкаша ну знаете так ну ладно ребят давайте сейчас нас погонять начнут так что вот в принципе
[03:53:49.000 --> 03:53:55.320]  я тут промотал по идее все что тут все что есть вот до этого момента теперь вот заратим можно
[03:53:55.320 --> 03:54:07.680]  ли теперь однозначно определить нимбер или может быть там есть варианты сейчас ну не быть однозначно
[03:54:07.680 --> 03:54:13.040]  можно определить потому что мы тоже какая-то понятная игра почему ну не факт может разная
[03:54:13.040 --> 03:54:17.560]  может в зависимости от того какое дерево с нимбером x вы повесите тут будет разные нимберы мало
[03:54:17.640 --> 03:54:26.040]  нет если как бы хочется предположить что ответ уникальный то угадать его не сложно ну потому
[03:54:26.040 --> 03:54:35.280]  что как вы думаете как придумать вот как придумать хоть какое-нибудь дерево с нимбером x да то есть
[03:54:35.280 --> 03:54:40.240]  на самом деле бамбук из x-ребер все это дерево очевидно с нимбером x потому что это просто
[03:54:40.240 --> 03:54:47.280]  очевидно эквивалентный нимбер просто логично да но тогда отсюда следует что если эту бамбуку
[03:54:47.280 --> 03:54:57.840]  увеличить на одно ребро то наверное тут должно получиться x плюс 1 логично да а теперь дальше
[03:54:57.840 --> 03:55:02.480]  говорю так а не получится ли у вас теперь доказать по индукции какой-нибудь что действительно при
[03:55:02.480 --> 03:55:09.640]  таком подвешивании нимбер просто увеличится на 1 и оказывается получается почему ну давайте
[03:55:09.640 --> 03:55:15.200]  доказывать по индукции по числу ребер в дереве ну потому что заметим следующее что вы можете
[03:55:15.200 --> 03:55:21.440]  сделать но если тут x то значит вы можете сделать какой-то ход внутри дерева t и получить любое
[03:55:21.440 --> 03:55:30.280]  число меньше x ну не можете получить само x правда понимаете да значит получается вы здесь обрезая
[03:55:30.280 --> 03:55:36.720]  дерево внутри то есть что-то внутри t вы можете получить ну по индукции по числу ребер что там
[03:55:36.720 --> 03:55:42.800]  получается здесь можете получить что угодно меньше x но не x значит сумма вы отсюда получите
[03:55:42.800 --> 03:55:50.840]  что угодно от 1 до x но не x плюс 1 правда то есть x плюс 1 мы получить не можете но вы можете
[03:55:50.840 --> 03:55:56.720]  получить 0 потому что можете зарезать вот это просто образы деревок чертям следовательно
[03:55:56.720 --> 03:56:03.680]  действительно не берг здесь x плюс 1 все вот видимо примерно что подразумевалось видимо
[03:56:03.680 --> 03:56:10.120]  чтобы должны придумать ну или там я не знаю за гуя или загуглить статью
[03:56:10.120 --> 03:56:16.800]  стантевича в которой это все расписано но я понимаю что там был кеша будет
[03:56:16.800 --> 03:56:25.040]  скорейчить конечно пытаться загуглить такие там такие вещи все тогда работал
[03:56:25.040 --> 03:56:32.960]  но почему не но интернет более менее в каком-то виде работает да да ладно
[03:56:33.440 --> 03:56:37.580]  но не знаю нет почему ли почему легенда не почему легенда об основании лкша
[03:56:37.580 --> 03:56:44.240]  знаете гласит гласит пример следующие идет матюхин так знаете матюхина а не
[03:56:44.240 --> 03:56:48.520]  знаете вот мои времена он был заучил кеша если что сейчас вы уже сейчас вы
[03:56:48.520 --> 03:56:54.520]  даже не знаете кто это да вот ну ладно так вот идет матюхин по лесу но просто
[03:56:54.520 --> 03:56:58.960]  по лесу идет обстрелит смотрят там звенит телефон говорит о здесь ловится
[03:56:58.960 --> 03:57:05.640]  белая л кеша будет здесь вот как видите на момент 2006 годов вот такая
[03:57:05.640 --> 03:57:11.400]  легенда была да ну по чем там много чего было там это знаете это тогда же
[03:57:11.400 --> 03:57:15.320]  появлялись какие-то песни там кольд икс тру писать без кучи то тайм лимит ты
[03:57:15.320 --> 03:57:19.120]  получишь об совсем крутой задачи
[03:57:22.080 --> 03:57:34.160]  юзик у чьих ибоначе могли догадаться ну что не оно чего безобразие не знаю ну я
[03:57:34.160 --> 03:57:39.760]  не знаю может автор пробовал я не знаю ну правда да автор вы тоже скорее всего
[03:57:39.760 --> 03:57:43.080]  не знаете но да пошел я то нет у меня друг это допилил вообще он говорит коле
[03:57:43.080 --> 03:57:51.880]  хип писать без кучи то диагноз ты получишь да коле хип писать без кучи
[03:57:51.880 --> 03:58:06.080]  диагноз ты получишь ну ну как тут немножко в другом проблема да тут как бы да то
[03:58:06.080 --> 03:58:15.080]  знаете ну это такая шутка как-то как-то сейчас как где сейчас как там тиги гидроксид
[03:58:15.080 --> 03:58:22.640]  что-то там а ну да то есть это опасное вещество до гидроксид водорода до гидроксид водорода
[03:58:22.640 --> 03:58:27.440]  страшное вещество никто еще в полной мире не смог избавить воду от этого элемента там например
[03:58:27.440 --> 03:58:34.560]  то есть страшный я да люди там на больше чем на 50 процентов состоят из гитам из гидроксидов
[03:58:34.560 --> 03:58:45.880]  водорода там и так далее там еще более умная правда словосочетание подогнали ну да ну да
[03:58:45.880 --> 03:58:52.440]  да не до балали не но там это уже логика дашу огурцы убивают потому что мы тестировали людей
[03:58:52.440 --> 03:59:00.240]  от родившихся в период с 1859 по 1876 год и как бы 100 процентов и тех из них которые приедли огурцы
[03:59:00.240 --> 03:59:05.320]  умерли вот так что в общем в общем короче не есть
