[00:00.000 --> 00:11.560]  ну собственно да нет ну конечно до принцип телегии там телегена не телегена я вам сегодня
[00:11.560 --> 00:18.120]  не обещаю конечно да сегодня будет попроще в том числе и фамилии дата флойд там форбелван
[00:18.120 --> 00:28.080]  возьму если повезет то как занов и голдер но я думаю нам не повезет максимум клей вот по
[00:28.080 --> 00:33.520]  анонсировали так но прежде как но как некоторые из вас уже заметили называется у нас тут
[00:33.520 --> 00:43.160]  появилось новое домашнее задание да ну да ну как второе у нас единая дз на самом деле да
[00:43.160 --> 00:52.360]  которая на фф там уже много знать более там будет еще больше вот потому что вот пока пока что что
[00:52.360 --> 00:58.240]  вот осталось только сделать техническое действие это залить еще три задачи первая задача сделать
[00:58.240 --> 01:07.200]  длинное деление вторая задачи сделай длинный корень к этой степени кадр 9 и вот так кстати
[01:07.200 --> 01:15.960]  никто случайно там каких-нибудь инков эту задачу не встречал а да там была вот нет я вам даже даже
[01:15.960 --> 01:20.760]  открою страшную тайну есть конспект от филиппа грибова как и искать правда честно скажу когда
[01:20.760 --> 01:30.440]  вы прочитаете вы сильно удивитесь вот соответственно вот потому что потому что там потому что то что там
[01:30.440 --> 01:35.680]  написано к тому что мы обсуждать никого отношения имеет даже в том числе по асимптутике почти почему
[01:35.680 --> 01:41.720]  не знаю но впрочем впрочем по каким-то причинам с 21 года это никто не почему-то эти задачи не
[01:41.720 --> 01:49.400]  даются вот но впрочем и не но от впрочем да как и такому статистическом программировании нужно
[01:49.400 --> 01:56.920]  делить длинные числа вот значит соответственно что далее вообще по-хорошему говоря это должно
[01:56.920 --> 02:03.280]  быть еще не все почему потому что вот сегодня сегодня мы скажем будем обсуждать потоки допустим
[02:03.280 --> 02:10.160]  но вот то и пути но ты по идее нужно дать чудеса на потоке но мне почему-то возникает жуткое
[02:10.160 --> 02:24.920]  ощущение что это многовато да редкий случай да но 3 нет он нет если бы у меня у меня там на
[02:24.920 --> 02:35.680]  потоке больше задать чисто по потоке да и да там но там их там где-то там у них приличное
[02:35.680 --> 02:42.240]  количество да поэтому поэтому будьте готовы к тому что соответственно они появятся до следующего
[02:42.240 --> 02:54.400]  севестра нет у длин фурье чтобы контеста есть как всегда за счетной неделей ну там те там
[02:54.400 --> 03:01.360]  только практически задачи потому что так что никаких проблем вот поэтому да то есть конечно
[03:02.360 --> 03:06.720]  поэтому вы разделите на тех кто как бы и смог написать fft и тех кто зачет не
[03:06.720 --> 03:14.480]  получит да вот но собственно дайфов то это не очень сложный алгоритм да но сложных алгоритмов
[03:14.480 --> 03:20.520]  как вы помните у нас нету нет ладно денис может вам рассказывал неделю назад я не ставил да но
[03:20.520 --> 03:38.240]  судя по вашей реакции сложного не рассказывал да ну или нет ну и понятно как бы сколько народу
[03:38.240 --> 03:45.720]  вообще придет послушать принцип телегена а кто придет послушать флойда ну логично да ладно не
[03:45.720 --> 03:52.160]  знали ну например если вспомнить чем мы закончили в прошлый раз то как бы флойд фортбелман
[03:52.160 --> 03:56.520]  напрашивался мы даже обсуждали прошлый раз мы закончили на чем правильно на алгоритме до экстры
[03:56.520 --> 04:01.920]  то есть мы с вами практически мы с вами полностью ладно есть уже переходить непосредственно к
[04:01.920 --> 04:09.280]  занятию то что у нас в прошлый раз было мы в прошлый раз с вами в прошлый раз обсуждали что мы
[04:09.280 --> 04:15.960]  как я ищу расстояние в графе от стартовой вершины до всех остальных предположений что все рёбра имеют
[04:15.960 --> 04:22.360]  не отрицательный вес вот ну и прошли там этот собственно путь суровый путь от бфс одно там
[04:22.360 --> 04:29.720]  алгоритма д экстры во всех его вариациях вот но вот но сегодня нужно тогда поговорить о том а что
[04:29.720 --> 04:38.760]  делать если ребра бывают отрицательные вот казалось бы что это меняет отменяет прям все потому
[04:38.760 --> 04:43.320]  что возникает такой интеллектуальный объект который он от которого при не отрицательных
[04:43.320 --> 04:48.480]  выборах вообразить себе нельзя объект называется циклы отрицательного веса
[04:48.480 --> 04:55.320]  чем он собственно так портит жизнь
[04:55.320 --> 04:59.080]  вот
[04:59.080 --> 05:03.680]  ну ладно не вот вот так
[05:03.680 --> 05:15.120]  ну или вот так вот еще
[05:15.120 --> 05:27.680]  да не помогло да ну хорошо хорошо вот вот теперь хорошо вот чем такой цикл портит жизнь
[05:27.680 --> 05:37.480]  портит жизнь тем что у нас это иногда как-то начинает претепевать изменение понятие кратчайший
[05:37.480 --> 05:42.280]  путь ну так нет формально это тоже самое что кратчайший путь это путь наименьшей
[05:42.280 --> 05:49.920]  возможности стоимости и возникает ситуация когда его не существует ну у нас в принципе раньше
[05:49.920 --> 05:55.400]  была такая ситуация ну потому что могла быть ситуация когда пути от с доте нет вообще допустим
[05:55.400 --> 06:02.640]  но теперь у нас возникает другая ситуация бывает ситуация когда путь вообще в принципе есть
[06:02.640 --> 06:13.480]  а кратчайшего пути нет чем даже это может быть не так вот даже можно вот так дает это такой
[06:13.480 --> 06:21.520]  самый достаточно подлый случай как говорится ну да многие горели нова 30 на подобных случаях
[06:21.520 --> 06:28.640]  потому что в чем прикол то есть прикол в том что оказывается но вместо того чтобы идти каким-то
[06:28.640 --> 06:32.600]  вот путем по одному ребру или там каком-то количестве можете дойти до цикла отрицательной
[06:32.600 --> 06:40.240]  стоимости накрутить себе сколь угодно мало и потом собственно дойти дота то есть поэтому получается
[06:40.240 --> 06:45.280]  такие два два два два два случая то есть бывают случаи когда пути нет вообще бывают случаи когда
[06:45.280 --> 06:54.200]  кратчайший путь наоборот есть вот мы эти случаи будем помечать как вот как длина пути равна плюс
[06:54.200 --> 06:59.880]  бесконечность и минус бесконечность соответственно ну понадобится бесконечность пути нет минус
[06:59.880 --> 07:06.160]  бесконечность скукуну ну то есть по сути рассмотрим все пути и рассмотрим точную ну чтоб совсем
[07:06.160 --> 07:12.200]  формально было точную нижнююolicsих их длин и соответственно автоматически она бывает помимо
[07:12.200 --> 07:15.000]  мимо вот всего прочего она бывает плюс бесконечности,
[07:15.000 --> 07:16.000]  минус бесконечность.
[07:16.000 --> 07:19.280]  Вот такая вот красота.
[07:19.280 --> 07:25.160]  Ну вот и теперь возникает задача, а как быть в пути
[07:25.160 --> 07:26.160]  найти?
[07:26.160 --> 07:28.160]  Вот как идентифицировать эти случаи, а если кратчайший
[07:28.160 --> 07:29.560]  путь существует, то его найти.
[07:29.560 --> 07:34.040]  Ну вот тут возникает вот идея, действительно, вот
[07:34.040 --> 07:36.560]  что делать, если мы не знаем там никаких умных фамилий.
[07:36.560 --> 07:41.600]  Ну вот ничего страшного, просто кому-то на самом деле
[07:41.600 --> 07:44.720]  может сразу придет в голову, ну мы же знаем динамическое
[07:44.720 --> 07:45.720]  программирование.
[07:45.720 --> 07:49.480]  Вот казалось бы, если вспомнить такие слова сочетания,
[07:49.480 --> 07:52.520]  то практически сразу приходит в голову вообще какая-нибудь
[07:52.520 --> 07:53.680]  такая динамика.
[07:53.680 --> 08:10.680]  Например, там dp vt lt это длина кратчайшего пути, кратчайшего
[08:11.480 --> 08:30.160]  пути, допустим, от v от s до v, состоящего из l-ребер.
[08:30.160 --> 08:37.160]  Вот такая вот, например, красота.
[08:37.160 --> 08:43.360]  И действительно, что-то в этом удобное есть, вот,
[08:43.360 --> 08:45.520]  ну удобное, как минимум, то, что пересчитывать эту
[08:45.520 --> 08:47.040]  динамику достаточно легко, правда.
[08:47.040 --> 08:50.480]  Ну, например, там, потому что так можно и сказать,
[08:50.480 --> 09:01.000]  что там dp от vl это будет равно там минимум по каким-нибудь
[09:01.000 --> 09:02.720]  там, как будет написать.
[09:02.720 --> 09:08.760]  Ну, давайте так напишем, там, минимум по всем ребрам,
[09:08.760 --> 09:16.240]  у которых, которые заканчиваются в вершине v, там пишем, что
[09:16.240 --> 09:19.920]  значит до этого, до начала этого ребра мы доходим
[09:19.920 --> 09:27.040]  до, так, dp от e.start, да, это вот так, да, и плюс еще,
[09:27.040 --> 09:34.440]  конечно, e.weight, то есть весы ребра, вот, то есть,
[09:34.440 --> 09:35.440]  чего?
[09:35.440 --> 09:43.080]  А, это да, это да, да, l-1, конечно, конечно, вот, так
[09:43.080 --> 09:46.400]  что такая вот начинается красота и мы радуемся жизни,
[09:46.400 --> 09:47.400]  да вот.
[09:47.400 --> 09:49.800]  Ну, радуемся жизни, за какой симпатиком мы радуемся
[09:49.800 --> 09:50.800]  жизни.
[09:50.800 --> 10:00.600]  Ну, вообще, за, ну, давай, да, чтобы как не путаться
[10:00.600 --> 10:05.960]  n или m, говорите в это, да, говорим v, e, ну, потому что
[10:05.960 --> 10:09.520]  на каждом слое мы перебираем в точности все ребра, ну,
[10:09.520 --> 10:11.520]  тут, конечно, надо перебирать именно входящие ребра,
[10:11.520 --> 10:14.160]  но в принципе, если пересчитывать через динамику вперед,
[10:14.160 --> 10:18.320]  собственно, можно ничего не разворачивать, вот,
[10:18.320 --> 10:20.440]  то есть вот получается такая красота, остается только
[10:20.440 --> 10:24.600]  естественный вопрос, а как нам, а как нам, собственно,
[10:24.600 --> 10:27.080]  идентифицировать плюс бесконечности и минус бесконечности?
[10:27.080 --> 10:33.320]  И еще вопрос, а до какого момента мне вот это l насчитывать?
[10:33.320 --> 10:37.280]  Ну, только это еще доказывать надо.
[10:37.280 --> 10:49.000]  Так, ну, нет, это осторожно, это неправда.
[10:49.000 --> 11:07.920]  Да, так осторожно, да, подлости, да, так, ну, как, а, да, вот
[11:07.920 --> 11:11.440]  было утверждение, да, что качали, да, что действительно
[11:11.440 --> 11:14.440]  качали, да, что качайший путь у нас обязательно состоит
[11:14.680 --> 11:20.880]  из меньше, чем Энн и Греберт, да, ну, даже если он существует.
[11:20.880 --> 11:25.120]  Вот, да, верное утверждение говорит о том, что если существует
[11:25.120 --> 11:27.680]  качайший путь, то существует качайший путь из меньше,
[11:27.680 --> 11:28.680]  чем Энн и Греберт.
[11:28.680 --> 11:31.840]  Да, потому что есть такая подлость, как циклы нулевого
[11:31.840 --> 11:32.840]  веса.
[11:32.840 --> 11:35.880]  И это, ну, и более того, кстати, там потом восстановление
[11:35.880 --> 11:38.440]  ответа, они нам потом могут очень сильно портить жизнь
[11:38.440 --> 11:44.120]  на самом деле, вот, но так-то, да, утверждение, но так действительно
[11:44.120 --> 11:46.840]  утверждение, что если качайший путь существует, то существует
[11:46.840 --> 11:49.840]  качайший путь в состоянии менее, чем Энн и Греберт.
[11:49.840 --> 11:50.840]  Почему?
[11:50.840 --> 11:53.880]  Ну, собственно, доказательство очень простое, давайте рассмотрим
[11:53.880 --> 11:58.840]  какой-нибудь качайший путь, ну, вот, и заметим, что если
[11:58.840 --> 12:03.080]  он случайно зациклился, то давайте из этого пути
[12:03.080 --> 12:04.080]  цикл удалим.
[12:04.080 --> 12:07.640]  Ну, отрицательного веса он быть не может, потому
[12:07.640 --> 12:10.280]  что в противном случае тогда очевидно тут будет минус
[12:10.280 --> 12:11.280]  бесконечность.
[12:12.280 --> 12:15.560]  Вот, но мы можем удалить один цикл, если все еще
[12:15.560 --> 12:18.600]  зацикливается, то другой, так как у нас с каждым удалением
[12:18.600 --> 12:21.680]  цикла количество ребер на пути уменьшается строго,
[12:21.680 --> 12:23.760]  то в бесконечном этот процесс не будет.
[12:23.760 --> 12:26.040]  В какой-то момент мы удалим, в какой-то момент зациклы
[12:26.040 --> 12:28.960]  исчезнут, и мы получим простой путь, а простой путь у нас
[12:28.960 --> 12:32.040]  содержит не более чем Энн, не более чем Энн, минус
[12:32.040 --> 12:37.080]  одно ребро, что очень приятно, да, то есть теперь мы можем
[12:37.080 --> 12:39.760]  тогда написать такую динамику, то есть если даже значит
[12:39.760 --> 12:42.280]  просто найти кратчайший путь и мы поверим, что
[12:42.280 --> 12:44.840]  циклов отрицательного веса нету, ну или скажем,
[12:44.840 --> 12:47.880]  что пока не думаем об этом, то в общем-то нам вполне
[12:47.880 --> 12:51.800]  себе скажет, вполне себе хватит перебирать L до
[12:51.800 --> 12:59.720]  модуль V минус ID, вот, так, да, и ответ на задачу еще
[12:59.720 --> 13:04.800]  найти, конечно, да, то есть вот в конкретно такой
[13:04.800 --> 13:06.920]  интерпретации, да, обратите, то есть она конечно жрет
[13:06.920 --> 13:11.680]  квадрат памяти и все такое, вот, но значит там ans от
[13:11.680 --> 13:21.600]  V будет просто минимум dp от V и L, где L прибегает от
[13:21.600 --> 13:28.640]  нуля до модуль V минус 1, вот, то есть, то есть заметим,
[13:28.640 --> 13:31.920]  что вот такой простой алгоритм действительно найдет длину
[13:31.920 --> 13:35.840]  кратчайшего пути, если она конечно существует.
[13:35.840 --> 13:38.240]  Понимаете, да?
[13:38.240 --> 13:39.240]  Вот.
[13:39.240 --> 13:42.840]  Более того, в принципе, если я тут напишу еще какой-нибудь
[13:42.840 --> 13:50.120]  массив pR, где вот будет написано, откуда мы такую dp выкопали
[13:50.120 --> 13:52.800]  с какого предыдущего шага, то в общем-то и восстановить
[13:52.800 --> 14:00.840]  ответ никаких проблем не будет, понимаете, да?
[14:00.840 --> 14:06.600]  Ну, пока скажите, при таком способе восстановления
[14:06.600 --> 14:12.880]  ответа, да, у нас проблемы, вот, да, то есть, да, у нас
[14:12.880 --> 14:13.880]  проблемы.
[14:13.880 --> 14:24.680]  Ну да, нет, ну, смотрите, нет, если у вас задача найти
[14:24.680 --> 14:28.360]  кратчайший путь именно от sdT, то в принципе, да, аналог
[14:28.600 --> 14:32.560]  Хиршберга какой-нибудь может тут и сработать, в принципе,
[14:32.560 --> 14:39.600]  хотя не факт, ну, как сказать, просто давайте вспомним,
[14:39.600 --> 14:43.120]  потому что Хиршберг базировался на том, что мы как бы там
[14:43.120 --> 14:47.360]  обе строки делим на две части, то есть, да, очень хочется
[14:47.360 --> 14:50.440]  найти как бы, то есть, давайте найдем кратчайшие пути,
[14:50.440 --> 14:55.040]  допустим, dL пополам и dL пополам, да, пожалуйста, вот, и как-то
[14:55.040 --> 14:56.040]  разделим.
[14:56.040 --> 14:59.920]  Но фишка будет в том, что мы и векшины на два множества
[14:59.920 --> 15:04.960]  не поделим, поэтому это как бы и там, то есть, поэтому
[15:04.960 --> 15:10.440]  получится там не совсем то, вот, то есть, ну, точнее
[15:10.440 --> 15:15.440]  так, нет, хотя, ну, давайте так, а симптотику какую-нибудь
[15:15.440 --> 15:22.840]  типа ve log v вы получите, вот, но я боюсь там, если хотите
[15:22.840 --> 15:25.800]  там, чтобы это было именно ve, то как минимум придется
[15:25.800 --> 15:35.560]  как-то еще что-то думать, вот, хотя, но вот, хотя возможно
[15:35.560 --> 15:39.000]  необходимости в этом нет, потому что в принципе
[15:39.000 --> 15:41.600]  некоторая часть олимпиадников вообще может не понять,
[15:41.600 --> 15:45.840]  а в чем тут вообще проблема, потому что классический
[15:45.840 --> 15:49.720]  алгоритм Форд Бодда Белмана выглядит вообще не так,
[15:49.720 --> 15:52.000]  классический алгоритм Форд Бодда Белмана выглядит
[15:52.000 --> 16:04.880]  вот так, ну, допустим, у меня вот это s, да, а да, так,
[16:04.880 --> 16:08.680]  ну ладно, не так, и дальше начинается какой-нибудь
[16:08.680 --> 16:10.520]  в духе.
[16:39.560 --> 16:40.560]  Все.
[16:40.560 --> 16:41.560]  Остановление.
[16:41.560 --> 16:49.360]  Ну, восстановление, ну, давайте вот здесь еще, собственно,
[16:49.360 --> 16:52.360]  еще порежки переприсваивайтесь, если что, и все, а потом стандартным
[16:52.360 --> 16:53.360]  вайликом.
[16:53.360 --> 16:54.360]  Чего?
[16:54.360 --> 17:02.360]  Ну, ну, как сказать, и дальше, ну, вот, ну, вот, ну, и дальше
[17:02.360 --> 17:04.280]  начинаем, ну, вот, ну, и дальше начинаются двухчасовые
[17:04.280 --> 17:07.280]  припирания на экзамене, да, ну, вот, ну, вот, ну, вот, ну,
[17:07.280 --> 17:11.280]  припирания на экзамене, да, в половине случаев
[17:11.280 --> 17:14.960]  высекают, зачем это вообще надо, просто это работает
[17:14.960 --> 17:22.080]  и все, ну, вот, ай-яй-яй-яй-яй-яй, ну, да, как вы уже дорадуете
[17:22.080 --> 17:24.480]  студенты с таким подходом на физтехе уже не учатся,
[17:24.480 --> 17:35.040]  вот, нет, ну, да, вот, но это уже правда, правда, не
[17:35.040 --> 17:40.040]  совсем поэтому, но вот, и так, ну, то есть, действительно,
[17:40.040 --> 17:42.160]  казалось бы, по умолчанию действительно не очевидно,
[17:42.160 --> 17:45.880]  что в принципе с такой порежкой, но с такой порежкой
[17:45.880 --> 17:51.200]  восстановление ответа вообще работает, хотя, хотя казалось
[17:51.200 --> 17:55.120]  бы, хотя казалось бы, почему не очевидно, в каждой
[17:55.120 --> 17:58.000]  вершине находится предыдущая, там предыдущая, в чем проблема.
[17:58.000 --> 18:08.800]  Так, у вершины может быть несколько предыдущих,
[18:08.800 --> 18:12.720]  и что, ну, сохраним какую-то из них, и что, потом дойдем
[18:12.720 --> 18:23.000]  до С, в чем, да, как это, нет, ну, да, то есть, конечно,
[18:23.000 --> 18:25.560]  если, то есть, да, то есть, к сожалению, про, там, чтоб
[18:25.600 --> 18:28.800]  совсем просто, если думать об этом совсем просто, то,
[18:28.800 --> 18:32.040]  да, есть действительно такая проблема, что, то есть,
[18:32.040 --> 18:35.160]  мы знаем пока только одно, что, пока, в мире, ну, допустим,
[18:35.160 --> 18:37.160]  пока для простоты, что нет циклов отрицательного
[18:37.160 --> 18:41.880]  веса, допустим, не, если цикл отрицательного веса
[18:41.880 --> 18:49.880]  есть, то как бы вы и путь не восстановите, ну, нет,
[18:49.880 --> 18:52.800]  но тут как бы, да, просто, на самом деле, можно сказать
[18:52.800 --> 18:57.400]  так, что для, там, действительно, ну, вот, что, то есть, просто
[18:57.400 --> 19:00.360]  пока можно заметить, что, если кочайшие пути есть,
[19:00.360 --> 19:03.600]  да, то, ну, во-первых, очевидно, что до любой вершины, которой
[19:03.600 --> 19:06.440]  пути есть, он найден будет, это мы по индукции доказываем,
[19:06.440 --> 19:09.120]  это мы просто доказываем по индукции, видо, рассмотрим
[19:09.120 --> 19:12.800]  вот этот путь, и, там, допустим, длины шеи, там, из шестеребер,
[19:12.800 --> 19:15.800]  и замечаем, что они по, там, за шесть итераций, а то
[19:15.800 --> 19:18.960]  и за меньше, мы тут, на всех этих вершинах, действительно,
[19:18.960 --> 19:28.240]  это, это найдем, логично, да, вот, но, но, но, но останется
[19:28.240 --> 19:30.720]  только, вот, действительно, доказывать, как, там, то
[19:30.720 --> 19:35.240]  есть, что будет с восстановлением ответа, потому что с восстановлением
[19:35.240 --> 19:38.040]  это просто так, то есть, пока мы только можем гарантировать
[19:38.040 --> 19:42.960]  лишь, что, там, что, что у каждой вершины есть пыры,
[19:42.960 --> 19:45.960]  которые удовлетворяют свойству, что D здесь, D здесь,
[19:46.200 --> 19:50.760]  плюс какой-то ребро, да, только, правда, D не здесь, а, там,
[19:50.760 --> 19:53.560]  просто существует какая-то вершина, что вот тут какой-то
[19:53.560 --> 19:58.080]  ребро, но тогда возникает закономерный вопрос, а почему
[19:58.080 --> 20:00.240]  тут, собственно, если мы начнем таки по этим ребрам
[20:00.240 --> 20:03.600]  ходить, у нас, там, не окажется какой-нибудь цикл нулевого
[20:03.600 --> 20:12.320]  веса, по которому мы будем берить, но возникает такой,
[20:12.320 --> 20:21.000]  вот, закономерный вопрос, но, на самом деле, как и странно,
[20:21.000 --> 20:26.240]  вопрос решается проще, чем кажется, просто надо, там,
[20:26.240 --> 20:29.960]  это более аккуратно делать, а делать надо следовательно,
[20:29.960 --> 20:32.080]  надо просто по индукции доказывать, что в каждый
[20:32.080 --> 20:35.960]  момент времени, на самом деле, D, то есть, вот эти порыжки
[20:35.960 --> 20:40.160]  образуют дерево, имеющееся на текущий момент путей,
[20:40.160 --> 20:52.720]  ну, типа, вот, нет, ну, вот, да, ну, да, ну, вот, но, правда,
[20:52.720 --> 20:55.080]  надо аккуратно, потому что заметим, что порыжки за
[20:55.080 --> 20:59.760]  цикл образовывать не могут, почему, пока, по крайней
[20:59.760 --> 21:02.800]  мере, кажется так, действительно, давайте думать, вот, жило
[21:02.880 --> 21:05.680]  было дерево, да, вот, то есть, в каждый момент времени,
[21:05.680 --> 21:08.200]  ну, изначально у нас дерево порыжек вообще состоит из
[21:08.200 --> 21:12.760]  одной вершины S, правда, если мы делаем релаксацию
[21:12.760 --> 21:15.720]  у вершины с плюс-бесконечностью, то мы просто подключаем
[21:15.720 --> 21:20.760]  вершину к дереву, правда, а теперь, ну, вот, ну, а теперь,
[21:20.760 --> 21:23.480]  что тут в процессе может с этим деревом происходить,
[21:23.480 --> 21:27.240]  в процессе мы могли взять какую-то вершину и пойти,
[21:27.240 --> 21:30.040]  допустим, в какую-то другую вершину.
[21:30.040 --> 21:36.400]  Вот, и неожиданно узнать, что, оказывается, из этой
[21:36.400 --> 21:44.040]  вершины у нас нашелся более короткий путь, вот, но возникает
[21:44.040 --> 21:51.280]  вопрос, может ли так случиться, что у нас, что у нас дерево
[21:51.280 --> 21:56.320]  перестанет, что у нас возникнут какие-то проблемы?
[22:00.040 --> 22:12.400]  Ну, во-первых, оно должно идти в предка, да, но на
[22:12.400 --> 22:14.440]  самом деле тут, но на самом деле проблемы возникают
[22:14.440 --> 22:17.920]  уже на тему того, а какие варианты мы хотим, вот,
[22:17.920 --> 22:21.280]  мы просто хотим вариант, чтобы у нас порыжки образовывали
[22:21.280 --> 22:23.720]  дерево или все-таки, чтобы они образовали дерево
[22:23.720 --> 22:30.560]  у нас чем-то умным, потому что, в принципе, заметим,
[22:30.560 --> 22:35.520]  что если у нас вариант такой, что у нас дешки дают какие-то
[22:35.520 --> 22:41.000]  текущие пути, и по порыжкам мы эти текущие пути восстанавливаем,
[22:41.000 --> 22:44.760]  то уже вот этот случай торжественно фейлит этот вариант, ну,
[22:44.760 --> 22:47.760]  точнее так, для этой вершины может это и правда, а вот
[22:47.760 --> 22:50.320]  для этих уже нет, по крайней мере, до ближайшей релакса,
[22:50.560 --> 22:52.040]  до каких-то следующих релаксаций.
[22:52.040 --> 23:00.120]  Вот, то есть, на самом деле, проблема начинается уже на этом этапе.
[23:00.120 --> 23:05.400]  Спрашивается, что делать?
[23:05.400 --> 23:28.120]  Ну, вот проблема, когда-то, да, вот почему-то, да, но вот почему-то,
[23:28.120 --> 23:30.760]  только вы взять, чтобы пока вы не начнете это доказывать,
[23:30.760 --> 23:33.680]  собственно, да, это будет очевидно, пока вы не попытаетесь это доказать.
[23:33.680 --> 23:40.040]  А давайте мы будем считать, что у нас порыжки будут корректные в пути,
[23:40.040 --> 23:44.160]  но мы не будем ничего говорить про дешки, то есть, мы не будем считать,
[23:44.160 --> 23:46.600]  что дешки корректно делаются вующих путей.
[23:46.600 --> 23:48.800]  Так, а что мы будем говорить?
[23:48.800 --> 23:51.920]  Мы будем просто говорить, что по порыжкам можно найти оптимальные пути.
[23:51.920 --> 24:00.400]  Так, именно оптимальные или вообще, или что такое оптимальные?
[24:00.400 --> 24:02.880]  В каждый момент?
[24:02.880 --> 24:07.440]  Сейчас, погоди, что такое в каждый момент?
[24:07.440 --> 24:13.880]  После очередной релаксации мы, для каждой машины,
[24:13.880 --> 24:16.720]  идя по порыжкам назад, устанавливаем прощайший путь.
[24:16.720 --> 24:19.000]  Корректный путь, который сейчас дешка?
[24:19.000 --> 24:21.600]  Да, который сейчас дешка, дешка может быть другой.
[24:21.600 --> 24:24.240]  Дешка может быть больше, чем оптимальный.
[24:24.240 --> 24:27.200]  Нет, ну, проверь, откуда мы, в самый начальный момент времени,
[24:27.200 --> 24:29.760]  мы по порыжкам не установим вообще ничего, потому что ничего нет.
[24:30.720 --> 24:33.200]  Ну, а есть вариант тогда в чем?
[24:33.200 --> 24:42.200]  Ну, в том, что все пути, которые мы нашли, мы можем установить по порыжкам.
[24:42.200 --> 24:44.200]  А про длину что мы установим?
[24:44.200 --> 24:51.200]  Ну, по барабану, это айта, ну, возможно длина по барабану, главное, что мы можем установить.
[24:51.200 --> 24:55.200]  А что про дешную длину?
[24:55.200 --> 24:58.200]  А дешную длину, в смысле, она не больше, чем д?
[24:58.360 --> 25:03.240]  Ну, почему не больше, чем d, то есть в конце у нас получится д rejection,
[25:04.360 --> 25:08.520]  и в конце, если у нас в каждом момент в порыжках Elsa die越,
[25:08.520 --> 25:12.520]  пути которые мы наusions по порыжкам не больше, чем текущая дешка,
[25:12.520 --> 25:15.640]  в конце у нас дешка корректная, по порыжкам дерево, значит мы по порыжкам.
[25:15.640 --> 25:17.400]  Это если порыжки дерево,
[25:18.200 --> 25:24.320] ��고 что но мало wrists а может на порыжке построиться так что пыль будет�� togg
[25:24.320 --> 25:25.060]  чтоocrы
[25:25.060 --> 25:33.060]  Если мы идем в предко, то это означает, что у нас нашелся ситуация, а если мы идем в другой вершине, то это означает, что мы ее перепадаем.
[25:33.060 --> 25:35.060]  Так, ладно.
[25:35.060 --> 25:43.060]  Мы знаем, что за N шагов мы посчитаем корректные пути реверверной дины меньше или равно N.
[25:43.060 --> 25:52.060]  Давайте скажем, что наша дерево порежет корректно в N окрестности вершины S.
[25:52.060 --> 25:59.060]  Для всех вершин, для которых минимальный путь стоит изменен, чем N.
[25:59.060 --> 26:05.060]  Когда дерево порежет будет для них корректно, она все остальные назовет.
[26:05.060 --> 26:10.060]  На каждый раз мы будем просто управлять новые вершины.
[26:10.060 --> 26:14.060]  Мы с N переходим на N плюс один.
[26:14.060 --> 26:22.060]  Мы говорим, что это корректное дерево, но только для тех, которые находятся на расстоянии не больше N.
[26:22.060 --> 26:30.060]  Но тут продолжает быть небольшая путаница, что конкретно такая реализация подразумевает, что путь может появиться и раньше.
[26:30.060 --> 26:44.060]  Если он появился на L-то итерации, то это не означает, что он состоит не из L-ревервера,
[26:44.060 --> 26:47.060]  он может и из большего числа ревервера вполне себе состоять, поэтому тут надо...
[26:47.060 --> 26:55.060]  Как по мне, нет лишних изоциклов и не начало возникать.
[26:55.060 --> 26:59.060]  Будет длинный путь.
[26:59.060 --> 27:04.060]  Главное, чтобы зацикла не возникла.
[27:04.060 --> 27:06.060]  Что?
[27:06.060 --> 27:08.060]  Зацикла не возникла по окрестности.
[27:08.060 --> 27:09.060]  Что такое окрестность?
[27:09.060 --> 27:13.060]  Окрестность – это все вершины, которые не более чем по ангробрам достижены из S.
[27:13.060 --> 27:17.060]  Почему это не возникло?
[27:17.060 --> 27:23.060]  Может какая-то очень неудачная перешка.
[27:23.060 --> 27:25.060]  Это действительно неприятно.
[27:25.060 --> 27:30.060]  Если у нас сейчас перешки не соответствуют дешкам,
[27:30.060 --> 27:36.060]  почему то, что мы пересчитываем из потомков деревья перешек предка,
[27:36.060 --> 27:42.060]  то не означает, что мы сейчас зациклимся, если у нас дешки подойдут директные.
[27:42.060 --> 27:46.060]  Почему это означает, что у нас сейчас появится цикл обязательно веса?
[27:46.060 --> 27:48.060]  Это абсолютно нормально.
[27:48.060 --> 27:50.060]  Ну, в поединке два.
[27:50.060 --> 27:51.060]  Особенно если циклы.
[27:51.060 --> 27:53.060]  Ну, да.
[27:53.060 --> 27:57.060]  Ну, тут по-разному.
[27:57.060 --> 28:00.060]  Нет, рассуждать с рассуждениями проблема.
[28:00.060 --> 28:03.060]  Хотя в итоге на самом деле рассуждение в итоге придумывается.
[28:03.060 --> 28:05.060]  Потому что можно сказать так.
[28:05.060 --> 28:09.060]  Заметим, что у каждой вершины, у которой, по крайней мере, есть качайший путь,
[28:09.060 --> 28:14.060]  наступит такой момент времени, в который дешка станет равна зиму.
[28:14.060 --> 28:16.060]  Правда?
[28:16.060 --> 28:18.060]  Вот.
[28:18.060 --> 28:20.060]  И теперь тогда у меня утверждение такое.
[28:20.060 --> 28:25.060]  Давайте для каждой вершины введем такое понятие ТВ.
[28:25.060 --> 28:31.060]  То есть в какой момент времени в D от В появилось качайшее расстояние до В.
[28:31.060 --> 28:35.060]  Так вот, мне почему-то хочется заявить мистическое утверждение.
[28:35.060 --> 28:43.060]  Мистическое утверждение заключается в том, что когда вы в момент ТВ релаксируете D от В,
[28:43.060 --> 28:47.060]  вы релаксируете ее какой-то вершиной ПР.
[28:47.060 --> 28:54.060]  Которую мы запишем в ПР от В, в которой качайший путь уже нашелся ранее.
[28:54.060 --> 28:58.060]  То есть у этой вершины Т была меньше.
[28:58.060 --> 29:02.060]  Поэтому зациклов нет.
[29:02.060 --> 29:06.060]  Вот мне почему-то хочется так сказать.
[29:06.060 --> 29:11.060]  Зациклов, по крайней мере, нет.
[29:11.060 --> 29:17.060]  Ну и пути в общем-то восстанавливаются, потому что вот это вот верно.
[29:17.060 --> 29:22.060]  Не та-не та вершина, видимо, больше релаксироваться не будут, очевидно.
[29:22.060 --> 29:24.060]  Так что мораль очень простая.
[29:24.060 --> 29:29.060]  Если качайший путь существует, то более того, заметим, что это рассуждение никак не завязано
[29:29.060 --> 29:33.060]  на том, что где-то там есть цикл отрицательного веса.
[29:33.060 --> 29:39.060]  То есть утверждение такое, если до вершины качайший путь есть, то вот на самом деле вот этот код его восстановит.
[29:43.060 --> 29:45.060]  Итак, давай.
[29:45.060 --> 29:47.060]  Значит рассуждение такое.
[29:47.060 --> 29:50.060]  Введем понятие ТВТ.
[29:50.060 --> 30:00.060]  Это время, то есть момент времени, в который в D от В было записано реальное качайшее расстояние.
[30:01.060 --> 30:11.060]  Утверждение P от V будет вести в вершину с меньшим ТВТ, с меньшей Т.
[30:11.060 --> 30:13.060]  Логично, да?
[30:13.060 --> 30:21.060]  Но тогда это означает, что если я пойду из вершины В теперь за ЧПР, то до С я дойду.
[30:21.060 --> 30:23.060]  Зациклов не будет.
[30:23.060 --> 30:27.060]  И более того, я утверждаю, что это и есть качайший путь.
[30:27.060 --> 30:29.060]  Почему это качайший путь?
[30:29.060 --> 30:34.060]  Потому что я нашел какой-то путь.
[30:34.060 --> 30:44.060]  То есть я утверждаю следующее, что на каждом ребре будет выполнено то, что вот это равно вот этому.
[30:44.060 --> 30:46.060]  Логично, да?
[30:46.060 --> 30:52.060]  На последнем ребре это верно, потому что у нас сейчас релаксация ровно так происходит.
[30:52.060 --> 30:56.060]  И более того, в стартовой вершине там написано уже, видимо, качайшее расстояние,
[30:56.060 --> 31:01.060]  потому что было бы оно не качайшим, значит и вот это вот это не качайшее.
[31:01.060 --> 31:03.060]  Соответственно, вот.
[31:03.060 --> 31:09.060]  Ну а то, что там на предыдущих ребрах это происходит, это уже мы доказываем по индукции по времени.
[31:09.060 --> 31:18.060]  Мы хотим сказать, что вот этот путь, который мы получим, в нем наибольшее ТВ это наша последняя вершина.
[31:18.060 --> 31:20.060]  Наибольшее по Т.
[31:20.060 --> 31:22.060]  Да, конечно же не по D.
[31:22.060 --> 31:24.060]  Но по Т, да.
[31:24.060 --> 31:29.060]  То есть это же не просто наибольшее, а просто вдоль этого пути Т строго возрастают.
[31:29.060 --> 31:33.060]  Да, вот в этом идее.
[31:33.060 --> 31:37.060]  То есть чтобы был зацикл, они как-то должны совсем одновременно появиться.
[31:37.060 --> 31:40.060]  Да, то есть вот оказывается, что в общем-то...
[31:40.060 --> 31:45.060]  Господи, слушайте, когда-то это был вопрос на лоту вообще.
[31:45.060 --> 31:49.060]  Но это было лет восемь назад, поэтому да.
[31:52.060 --> 31:54.060]  Ну, я вам так скажу.
[31:54.060 --> 32:02.060]  Скажете, кто-то сидя прямо два-три часа на экзаменах, а да, такое было, на самом деле это придумывали.
[32:02.060 --> 32:04.060]  Ну вот.
[32:04.060 --> 32:06.060]  Я помню это вообще.
[32:06.060 --> 32:08.060]  Я помню, даже до срока, кстати, кто-то сдавал.
[32:08.060 --> 32:10.060]  Вот, кстати, ныне забытая опция.
[32:10.060 --> 32:13.060]  Вообще есть такая опция до срока называется.
[32:13.060 --> 32:21.060]  Но обычно, правда, до срока это типа лучшим студентам заслуги перед отечеством предлагаем опцию сдать экзамен заранее.
[32:21.060 --> 32:28.060]  Но у меня обычно опция это называется, если вы хотите сдать экзамен когда-нибудь раньше, я могу это организовать.
[32:28.060 --> 32:33.060]  Потому что если вы хотите, то, собственно, в общем-то мне тоже, на самом деле, вы же себя облегчите, на самом деле.
[32:33.060 --> 32:35.060]  Поэтому я не против.
[32:35.060 --> 32:37.060]  Но тем более, что, знаете, эта опция может быть актуальна.
[32:37.060 --> 32:38.060]  Ещё почему?
[32:38.060 --> 32:44.060]  Потому что традиционно экзамен по алгоритмам, он в расписании экзаменов последний.
[32:44.060 --> 32:45.060]  То есть, какой он там?
[32:45.060 --> 32:47.060]  Ну, будет он там традиционно?
[32:47.060 --> 32:50.060]  Какой-нибудь там 24 июня плюс-минус эпсилон.
[32:50.060 --> 32:52.060]  Чего?
[32:52.060 --> 32:54.060]  Ну, нет.
[32:54.060 --> 32:55.060]  Ну, как вам сказать?
[32:55.060 --> 32:56.060]  Да.
[32:56.060 --> 32:57.060]  В принципе, да.
[32:57.060 --> 33:03.060]  С одной стороны, если вы там поймёте, что вы хотите сдать его, скажем, где-нибудь, там есть возможность сдать его в конце мая.
[33:03.060 --> 33:09.060]  И тем самым приехать там на несколько дней раньше домой, то в принципе это вариант.
[33:09.060 --> 33:11.060]  Нет, кто-то этим пользовался.
[33:11.060 --> 33:14.060]  Да, не скажу, что это массово, но как бы.
[33:14.060 --> 33:15.060]  Что?
[33:15.060 --> 33:16.060]  Да.
[33:16.060 --> 33:19.060]  То есть, как бы, если есть такое желание, то пожалуйста.
[33:19.060 --> 33:21.060]  Вот.
[33:21.060 --> 33:22.060]  Ну да.
[33:22.060 --> 33:24.060]  Нет, я помню.
[33:24.060 --> 33:25.060]  Нет, я помню.
[33:25.060 --> 33:26.060]  Кто-то вот.
[33:26.060 --> 33:28.060]  Нет, я помню, что я какой-то до срока, то ли что.
[33:28.060 --> 33:30.060]  Потому что я помню, два человека сдавали.
[33:30.060 --> 33:31.060]  Да.
[33:31.060 --> 33:37.060]  Не причём это точно не перезнача, потому что людей звали Илья Степанов и Андрей Сергунин, если вам эти фамилии что-то говорят.
[33:37.060 --> 33:41.060]  А так, если не говорят, бронзовые призёры 2019 года, если что.
[33:41.060 --> 33:42.060]  Вот.
[33:42.060 --> 33:43.060]  Так что дело было.
[33:43.060 --> 33:44.060]  Ну вот.
[33:44.060 --> 33:51.060]  И вот я помню, по-моему, как минимум кто-то из них точно сидел это придумывал и там что-то подобное придумал в итоге.
[33:51.060 --> 33:52.060]  Да.
[33:53.060 --> 33:54.060]  Такое.
[33:54.060 --> 33:55.060]  Вот.
[33:55.060 --> 33:57.060]  Но теперь вернёмся, собственно, к следующему.
[33:57.060 --> 33:58.060]  Так.
[33:58.060 --> 34:00.060]  А что же делать, если цикл отрицательной стоимости есть?
[34:03.060 --> 34:04.060]  Вот.
[34:04.060 --> 34:05.060]  Потому что, да.
[34:05.060 --> 34:06.060]  Распространённая ошибка.
[34:07.060 --> 34:08.060]  Ну вот.
[34:08.060 --> 34:12.060]  То есть, ну, в принципе, нот распространённая ошибка может быть такая, например.
[34:12.060 --> 34:13.060]  Давайте, хорошо.
[34:13.060 --> 34:19.060]  Давайте L считать до, там, допустим, 2y-1.
[34:19.060 --> 34:20.060]  Да.
[34:20.060 --> 34:21.060]  И очень хочется.
[34:23.060 --> 34:24.060]  Ну вот.
[34:27.060 --> 34:28.060]  Хотя надо подумать.
[34:28.060 --> 34:30.060]  Хотя это называется ошибка ли это?
[34:31.060 --> 34:32.060]  А нет.
[34:32.060 --> 34:33.060]  Нет.
[34:33.060 --> 34:34.060]  Казалось бы, алгоритм такой.
[34:34.060 --> 34:35.060]  Вот есть ans.
[34:35.060 --> 34:37.060]  Вот давайте назовём его ans1.
[34:39.060 --> 34:40.060]  А есть вариант ans2.
[34:41.060 --> 34:43.060]  Давайте напишем то же самое.
[34:44.060 --> 34:47.060]  Только L теперь бежит до 2y-1.
[34:51.060 --> 34:53.060]  И напрашивается прям наглый вариант.
[34:54.060 --> 35:00.060]  А давайте просто скажем, что если V, если вот здесь ans2 оказался меньше, чем ans1,
[35:00.060 --> 35:02.060]  значит пишем минус бесконечности радость.
[35:06.060 --> 35:07.060]  Нет.
[35:07.060 --> 35:11.060]  Причём самое страшное, кажется, действительно верное утверждение, что если у нас,
[35:11.060 --> 35:18.060]  потому что оказывается, что если мы нашли путь, состоящий из, там, n или более, там,
[35:18.060 --> 35:22.060]  n или более ребер, который оказался короче, чем все простые пути,
[35:23.060 --> 35:26.060]  как бы, значит, на этом пути явно цикл отрицательного веса находится.
[35:26.060 --> 35:28.060]  Значит, казалось бы, всё хорошо.
[35:31.060 --> 35:32.060]  Вот.
[35:35.060 --> 35:37.060]  Ну вот да, этот тест я нарисовал не случайно.
[35:38.060 --> 35:41.060]  Да, потому что то, что я перед этим сказал, это абсолютно правильно.
[35:42.060 --> 35:45.060]  Неправильно, если вы на радостях скажете, что если этого не произошло,
[35:45.060 --> 35:47.060]  то там минус бесконечности нету.
[35:49.060 --> 35:50.060]  Собственно, да.
[35:50.060 --> 35:52.060]  Собственно, тест я нарисовал не случайно.
[35:52.060 --> 35:56.060]  Да, то есть там вот, собственно, V30 там на подобной задаче возникает вот ровно,
[35:56.060 --> 35:57.060]  вот примерно из-за этого.
[35:58.060 --> 36:03.060]  Потому что оказывается, что, то есть, может быть, сразу какой-нибудь пусть на минус много,
[36:03.060 --> 36:08.060]  но вот и так, и как бы через цикл отрицательной стоимости вам очень много итераций придётся накрутить,
[36:08.060 --> 36:11.060]  чтобы действительно его обыграть.
[36:11.060 --> 36:15.060]  То есть, по крайней мере, за 2V вы не прибежали, там это не успеете сделать.
[36:15.060 --> 36:19.060]  И за 3V, и за 4V, и вообще за сколько угодно, там за много, сколько V.
[36:19.060 --> 36:20.060]  Проблема.
[36:22.060 --> 36:26.060]  То есть, картинка называется не всё так просто.
[36:27.060 --> 36:35.060]  Можно сказать, что если у нас где-то ответы изменились, то у нас есть цикл отрицательной длины.
[36:35.060 --> 36:37.060]  А если ответы нигде не изменились?
[36:38.060 --> 36:42.060]  Да, но это даст нам только маленькую задачу вида.
[36:42.060 --> 36:45.060]  А есть ли у нас цикл отрицательной стоимости?
[36:45.060 --> 36:48.060]  И если есть, то мы даже знаем, где.
[36:49.060 --> 36:55.060]  А это может помочь для накажения, что может этот цикл из пола?
[36:55.060 --> 36:57.060]  Ну, в принципе, да.
[36:57.060 --> 36:59.060]  То есть, в принципе, да.
[36:59.060 --> 37:01.060]  То есть, лайфхак высекает действительно такой.
[37:01.060 --> 37:04.060]  Правда, ладно, давайте оговорим всё только сразу.
[37:04.060 --> 37:09.060]  К сожалению, мы не умеем пока решать задачу, если цикл отрицательной стоимости.
[37:10.060 --> 37:12.060]  Пока вот эта штука нам скажет только одно.
[37:12.060 --> 37:17.060]  Есть ли цикл отрицательной стоимости достижимый из стартовой вершины?
[37:17.060 --> 37:22.060]  Потому что заметим, что если из стартовой вершины что-то недостижимо, то мы по неё не знаем ничего от слова в ноль.
[37:25.060 --> 37:27.060]  Но действительно.
[37:27.060 --> 37:29.060]  То есть возникает, конечно, следующее.
[37:29.060 --> 37:31.060]  Следующая подхачка.
[37:31.060 --> 37:33.060]  Естественно, олипиадная подхачка.
[37:33.060 --> 37:35.060]  А, так, ну хорошо.
[37:35.060 --> 37:36.060]  Давайте скажем так.
[37:36.060 --> 37:40.060]  На этих-то вершинах, наверное, минус бесконечность будет идентифицирована.
[37:40.060 --> 37:42.060]  И ведь, действительно, смотрите.
[37:42.060 --> 37:49.060]  Предположим, что у нас есть какой-то цикл отрицательной стоимости,
[37:49.060 --> 37:52.060]  допустим, который достижим из вершины С.
[37:53.060 --> 37:57.060]  Тогда у меня возникает мистическое утверждение.
[37:59.060 --> 38:06.060]  Значит, утверждение заключается в том, что на каждой итерации,
[38:07.060 --> 38:12.060]  то есть я утверждаю, что на каждой, то есть, ну, начиная с какого-то момента, да,
[38:13.060 --> 38:20.060]  ну, скажем так, ну, в какой-то момент выяснится, что мы до каждой из этих вершин уже найдем расстояние меньше, чем плюс бесконечность.
[38:21.060 --> 38:22.060]  Так вот я отпечатляю.
[38:22.060 --> 38:31.060]  Начиная с этого момента у нас на каждой итерации будет там релаксация хотя бы по одному из этих вершин.
[38:33.060 --> 38:35.060]  Вот такое у меня неожиданное утверждение.
[38:39.060 --> 38:45.060]  А более того, начнется релаксация даже начиная с того момента, когда хоть на одной вершине появится что-то отличное плюс бесконечность.
[38:47.060 --> 38:48.060]  Почему это так?
[38:48.060 --> 38:49.060]  Ну, причина проста.
[38:50.060 --> 38:53.060]  Значит, жило было v1, v2, v3 и, допустим, vk.
[38:56.060 --> 39:02.060]  И тут, допустим, у меня веса w1, w2, w3 и так далее.
[39:03.060 --> 39:04.060]  И тут, допустим, wk.
[39:05.060 --> 39:11.060]  Для того, чтобы накануть очередной итерации, у вас релаксации не произошло, что должно произойти?
[39:12.060 --> 39:16.060]  Ну, должно быть, что dp от v1, l.
[39:23.060 --> 39:26.060]  Хотя в данном случае что такое релаксация?
[39:27.060 --> 39:28.060]  Да, dp-шки обновятся.
[39:31.060 --> 39:32.060]  Вот так.
[39:33.060 --> 39:35.060]  Просто надо правильно сформулировать.
[39:36.060 --> 39:38.060]  То есть, ладно, давайте...
[39:40.060 --> 39:41.060]  Так.
[39:42.060 --> 39:44.060]  Так-так-так-так.
[39:53.060 --> 39:55.060]  Нет, меньше либо равно, тогда, но...
[39:58.060 --> 40:02.060]  Нет, ну скажи так, ладно, это утверждение легче просто сформулировать в тех терминах на самом деле сразу.
[40:05.060 --> 40:10.060]  Ну, от s2 следующий цикл ребер, но у нас есть путь, который прошел по этому циклу.
[40:11.060 --> 40:14.060]  Ну, длина от s2 можно v1 плюс k ребер.
[40:15.060 --> 40:17.060]  Ну, нет, причем тут путь-то вообще?
[40:18.060 --> 40:21.060]  Нет, ну как вы знаете, что само все ничего не значит, может там...
[40:22.060 --> 40:24.060]  Ну, хочется сказать, что если мы сделаем...
[40:25.060 --> 40:31.060]  Хотя, если мы сделаем уже следующую итерацию, то есть модуль v, то есть количество v,
[40:31.060 --> 40:37.060]  там какая-то dp-шка изменится, соответственно изменится p-r-шка,
[40:38.060 --> 40:42.060]  и хочется сказать, что если мы пройдем от вот этой изменившейся вершины по этим p-r-шкам,
[40:43.060 --> 40:45.060]  то мы найдем как раз этот цикл.
[40:46.060 --> 40:48.060]  Нет, ну так-то да, так-то да.
[40:49.060 --> 40:53.060]  Там вот эта модуляция, она передвинет нужное ребро,
[40:54.060 --> 40:56.060]  но замкнется в этот цикл.
[40:57.060 --> 40:58.060]  Нет, в принципе да.
[40:58.060 --> 40:59.060]  Да, действительно, что...
[41:00.060 --> 41:02.060]  Ладно, если мыслить в терминах этой dp-шки, то да.
[41:03.060 --> 41:07.060]  Действительно, становится очевидно, что если до вершины,
[41:08.060 --> 41:10.060]  вершина доступная, через нее проходит цикл отрицательной стоимости,
[41:11.060 --> 41:14.060]  то заведомо ans2 для нее окажется меньше, чем ans1,
[41:15.060 --> 41:18.060]  вот ровно потому, что если мы здесь в ans1 нашли какой-то путь до нее,
[41:19.060 --> 41:22.060]  то длины не более, чем v-1,
[41:23.060 --> 41:26.060]  то тогда мы можем найти путь не более, чем 2v-1, который будет меньше.
[41:26.060 --> 41:27.060]  Почему?
[41:28.060 --> 41:31.060]  Ну просто потому, что прибавим к этому пути цикл отрицательной стоимости.
[41:32.060 --> 41:35.060]  Правда, для этого придется доказать еще маленькое утверждение.
[41:36.060 --> 41:37.060]  Такое техническое.
[41:38.060 --> 41:40.060]  Если существует цикл отрицательной стоимости,
[41:41.060 --> 41:43.060]  то существует простой цикл отрицательной стоимости.
[41:45.060 --> 41:48.060]  Ну а то вдруг длина этого цикла окажется больше, чем n.
[41:50.060 --> 41:52.060]  Вот, ну это такое техническое утверждение,
[41:53.060 --> 41:54.060]  я его даже в качестве упражнения оставлю,
[41:54.060 --> 41:57.060]  то есть оно там тоже ничего страшного в нем нет.
[41:58.060 --> 41:59.060]  Вот.
[42:00.060 --> 42:01.060]  Но, соответственно, да.
[42:02.060 --> 42:07.060]  Но тогда действительно окажется, что если эта вершина лежит на цикле отрицательной стоимости,
[42:08.060 --> 42:12.060]  он доступен из S, то тогда эти вершины будут идентифицированы как минус бесконечности.
[42:13.060 --> 42:16.060]  И тогда алгоритм, то есть более точный алгоритм, окажется таким.
[42:17.060 --> 42:20.060]  Возьмем все вершины, у которых ans2 меньше, чем ans1,
[42:21.060 --> 42:23.060]  и запустим из них, например, DFS.
[42:25.060 --> 42:27.060]  Очевидно, до всего, до чего мы дойдем,
[42:28.060 --> 42:30.060]  очевидно, это будет минус бесконечность.
[42:31.060 --> 42:34.060]  Почему все остальное не будет минус бесконечность?
[42:35.060 --> 42:39.060]  Ну, как минимум потому, что если до вершины расстояние минус бесконечность,
[42:40.060 --> 42:43.060]  то тогда, просто я мог бы прям теория ему написать, да,
[42:44.060 --> 42:47.060]  то есть расстояние до вершины v равно минус бесконечность тогда,
[42:48.060 --> 42:50.060]  и только тогда, когда существует цикл отрицательной стоимости,
[42:50.060 --> 42:55.060]  Какой цикл отрицательной стоимости доступный из С, из которого доступно В?
[42:55.060 --> 43:04.060]  Ну, доказательства просто заметим, что будем рассматривать сколь угодно маленький путь,
[43:04.060 --> 43:08.060]  рассмотрим какой-нибудь путь меньше, чем все простые.
[43:08.060 --> 43:12.060]  Ну, раз у нас безконечность, а простых путей у нас конечное число, что приятно.
[43:12.060 --> 43:16.060]  Рассмотрим этот путь, зациклы на нем есть.
[43:16.060 --> 43:18.060]  Рассмотрим какой-нибудь первый зацикл.
[43:18.060 --> 43:24.060]  Если цикл больше либо равен нуля, то вытянем его, повторим операцию.
[43:24.060 --> 43:27.060]  То есть заметим, длина пути от этого стало только меньше.
[43:27.060 --> 43:29.060]  И простым путь от этого не стал.
[43:29.060 --> 43:34.060]  Тогда, получается, рано или поздно мы найдем просто цикл, на котором стоимость отрицателя.
[43:34.060 --> 43:36.060]  Ну, доказательство окончено.
[43:36.060 --> 43:38.060]  Так это понятно?
[43:38.060 --> 43:41.060]  Пока вроде тут ничего сложного нет.
[43:41.060 --> 43:45.060]  Ничего сложного нет, просто надо точечно разбираться.
[43:46.060 --> 43:55.060]  Я понял, раз у нас минус бесконечность, то найдется сколь угодно маленький по весу путь.
[43:55.060 --> 43:59.060]  Тогда, среди всех простых путей, а их конечное количество, можно выбрать минимум.
[43:59.060 --> 44:02.060]  Мы берем вот это значение меньше, чем минимум.
[44:02.060 --> 44:07.060]  Если у нас получится не простой путь, значит, на нем будет цикл, и он должен быть отрицательным.
[44:07.060 --> 44:10.060]  Да, только если путь взял строго меньше, чем этот минимум.
[44:11.060 --> 44:14.060]  То есть тогда на нем обязательно будут за циклы.
[44:14.060 --> 44:21.060]  И просто подтверждается, что найдем отрицательный, потому что давайте если найдем не отрицательный, то будем его выкидывать.
[44:21.060 --> 44:23.060]  И все.
[44:23.060 --> 44:25.060]  Да, совершенно верно.
[44:25.060 --> 44:28.060]  То есть надежное доказательство вот такое.
[44:28.060 --> 44:32.060]  И алгоритм такой, в принципе, надежный, действительно приятный.
[44:32.060 --> 44:40.060]  То есть более того, в качестве приятного бонуса именно такого алгоритма,
[44:40.060 --> 44:45.060]  то есть какая-то ощущение, что на самом деле какой-нибудь цикл отрицательной стоимости где-то можно и восстановить.
[44:53.060 --> 44:55.060]  Ну, например.
[44:55.060 --> 45:02.060]  Ну, потому что есть подозрение такое, что допустим у нас до вершины v, у вершины v ans 2 оказался меньше, чем ans 1.
[45:02.060 --> 45:05.060]  А давайте просто этот ans 2 реально восстановим.
[45:05.060 --> 45:09.060]  Что-то мне подсказывает, что цикл отрицательного веса там найдется.
[45:09.060 --> 45:11.060]  Правда?
[45:11.060 --> 45:13.060]  Нет?
[45:14.060 --> 45:18.060]  Что еще там?
[45:18.060 --> 45:21.060]  Нет, ну там как всегда.
[45:21.060 --> 45:27.060]  То есть найдется какие-то циклы, может быть циклы перед циклами, вот это все.
[45:27.060 --> 45:34.060]  Но с другой стороны заметим, что вот этот алгоритм выкидывания лишних циклов на самом деле можно реализовать за линию.
[45:34.060 --> 45:36.060]  Ну, там идея будет такая.
[45:36.060 --> 45:39.060]  Идем по пути и помечаем вершины, которые были.
[45:39.060 --> 45:41.060]  Идем, идем, идем, идем, идем, идем.
[45:41.060 --> 45:44.060]  А вот это неожиданно произошел за цикл.
[45:44.060 --> 45:51.060]  Теперь мы можем пробежаться по этому циклу и проверить, если у него стоимость больше либо равна нуля, а давайте его из пути выкинем.
[45:51.060 --> 45:53.060]  Выкинем и пойдем дальше.
[45:53.060 --> 45:55.060]  Ну, из стека, например, выкинем.
[45:55.060 --> 45:58.060]  А если цикл оказался отрицательным, ну все, ура.
[45:58.060 --> 46:05.060]  Значит, вот мы цикл нашли, и после этого давайте как-нибудь дойдем.
[46:05.060 --> 46:10.060]  Ну, минус, конечно, такого алгоритма, что придется вам жрать квадратичную память.
[46:10.060 --> 46:13.060]  Почему нет?
[46:13.060 --> 46:16.060]  Почему?
[46:16.060 --> 46:19.060]  При таком восстановлении как бы да, придется, да.
[46:19.060 --> 46:29.060]  То есть нет, если ваша задача просто определить минус бесконечность плюс бесконечность или расстояние, то, конечно же, там каждый слой пересчитывается только через предыдущий, поэтому храним только два слоя, радуемся жизни.
[46:29.060 --> 46:31.060]  Да, безусловно, безусловно, безусловно.
[46:31.060 --> 46:33.060]  Вот это да.
[46:33.060 --> 46:38.060]  Вот.
[46:38.060 --> 46:43.060]  Так.
[46:43.060 --> 46:45.060]  Сейчас, Кива.
[46:45.060 --> 46:50.060]  Ну, так или иначе, как античная память, если у нас на синтоте B на E.
[46:50.060 --> 46:56.060]  Я на B на E на 10 восьмой, то в памяти у тебя будет вызывать RG, а по времени будет B.
[46:56.060 --> 47:02.060]  Если граф словно почти линейный, то у тебя примерно равно E.
[47:02.060 --> 47:05.060]  То B на E равно, типа, 10 восьмой.
[47:05.060 --> 47:07.060]  Ну.
[47:07.060 --> 47:10.060]  Нет, ну как-то да.
[47:10.060 --> 47:11.060]  Да, но по-разному нет.
[47:11.060 --> 47:16.060]  Ну, как сказать, memory limit просто иногда и просто чистые заиздевательства могут и ужать.
[47:16.060 --> 47:21.060]  То есть так-то этот вопрос можно было и при Хишбеке задать.
[47:21.060 --> 47:22.060]  То есть как бы, спасибо.
[47:22.060 --> 47:25.060]  То есть у нас там, ой, ау.
[47:25.060 --> 47:34.060]  Нет, то есть как бы в Хишбеке это тоже вообще-то проблема, да, что, казалось бы, у нас там алгоритм СН квадрат быстрее, невозможно в принципе, как выяснилось.
[47:34.060 --> 47:39.060]  Ну, если там только мы что-то новое не знаем про строки, да, тогда высекает вопрос, да.
[47:39.060 --> 47:44.060]  А если длинный строк, то максимум 5000 спрашивается, как там может быть memory limit.
[47:44.060 --> 47:50.060]  Ну, то выясняется, что если вам memory limit потом повесят 8 мегабайт, то как бы.
[47:50.060 --> 47:52.060]  Не, будьте внимательны, кстати.
[47:52.060 --> 48:03.060]  Да, я надеюсь, я не сильно большой спойлер открою, если скажу, что там вообще-то 2 года назад задачу с подобным эффектом даже на четверть финала подсунули московские.
[48:03.060 --> 48:08.060]  Ну, вот, то есть что-то народ, то есть какая-то часть участников почему-то осталось сильно недовольна.
[48:08.060 --> 48:15.060]  Ну, вот, но с другой стороны, ну, что подумать, это тоже алгоритм, его тоже надо знать, что вы хотите.
[48:15.060 --> 48:23.060]  Вот, в общем-то там, ну, там, конечно, не это надо было там, что-то там с рюкзаком надо было что-то делать, но суть была та же.
[48:23.060 --> 48:32.060]  Так, но правда, остается вот действительно вопроса, а действительно, а если мы вот в такой интерпретации это делаем, что можно сказать здесь?
[48:32.060 --> 48:46.060]  Ну, да, да, то есть в принципе, да, то есть какой-нибудь какой-нибудь такой классик программирования, как Максим Иванов.
[48:46.060 --> 48:50.060]  Емакс, вот, познакомьтесь.
[48:50.060 --> 48:56.060]  Вот, да, Максим Иванов, собственно, там Олимпиадник из Саратов, там, по-моему, Дукрат, Дукрат и Серебряный Придер и CPC, по-моему.
[48:57.060 --> 49:04.060]  Вот, значит, так вот, значит, Емакс предлагает следующее.
[49:04.060 --> 49:13.060]  Вот, соответственно, он говорит так, а давайте-ка в этом месте сделаем еще одну итерацию, то есть не до n-1, а до n.
[49:13.060 --> 49:20.060]  Ну, то есть все качайшие пути до n-1, первые итерации, в общем-то, уже будут найдены, мы это знаем, но давайте сделаем еще.
[49:20.060 --> 49:28.060]  Утверждение, если у какой-то вершины произошла релаксация на n-1 итерации, значит, наверное, у нее минус бесконечности.
[49:28.060 --> 49:37.060]  Вот, ну, неудивительно, да, но как мы уже и сказали, потому что если бы у него был качайший путь, то он за n-1 итерацию был бы уже найден.
[49:37.060 --> 49:51.060]  Вот, но, а если релаксация не произошло, как бы, для вершины v на n-1 итерации, значит ли это, что у нее расстояние действительно качайшее, а не минус бесконечности?
[49:51.060 --> 49:54.060]  Конечно нет, с тем же тестом, да.
[49:54.060 --> 50:04.060]  Да, все не будут, но я утверждаю, что хотя бы одна будет.
[50:04.060 --> 50:09.060]  Почему так? Давайте вот это неравенство мы запишем, оно нам сегодня будет помогать.
[50:09.060 --> 50:15.060]  Так, вот давайте v-1, v-2, вот здесь уже это работает, v-1, v-2 и так далее.
[50:15.060 --> 50:18.060]  W-1, W-2, W-3, бла-бла-бла, W-k.
[50:18.060 --> 50:26.060]  Тогда смотрите, для того, чтобы на n-1 итерации не произошло релаксации, должно быть выполнено следующее.
[50:26.060 --> 50:35.060]  Должно быть выполнено, что d от v-1 плюс wv-1 должно быть больше либо равно d от v-2.
[50:35.060 --> 50:41.060]  d от v-2 должно быть плюс w-2 больше либо равно, чем d от v-3.
[50:41.060 --> 50:50.060]  Значит d от v-3 плюс v-3 больше либо равно, чем d от v-4 и так далее.
[50:50.060 --> 50:58.060]  И в конце d от v-k плюс w-k оказывается больше либо равно d от v-1.
[50:58.060 --> 51:00.060]  Казалось бы, радость.
[51:00.060 --> 51:08.060]  Вот. Заметим, что все неравенства, если мы говорим о цикле, доступном из S,
[51:09.060 --> 51:17.060]  то очевидно, что к n-1 итерации все эти, то есть ни одной плюс бесконечности здесь не будет.
[51:17.060 --> 51:19.060]  Понятно, да?
[51:19.060 --> 51:26.060]  То есть поэтому, казалось бы, кайф, пока мы не начинаем эти неравенства складывать.
[51:26.060 --> 51:30.060]  Потому что если мы их сложим, то получится
[51:30.060 --> 51:40.060]  Сумма d от v-1 плюс сумма w-1 должна быть больше либо равно, чем сумма d от v-1.
[51:40.060 --> 51:44.060]  Да, и везде прибегает от одного дока.
[51:47.060 --> 51:49.060]  Вот.
[51:49.060 --> 51:54.060]  Ну вот. Ну, собственно, так как у нас за цикл, то получается шлеп-шлеп.
[51:54.060 --> 51:59.060]  И в результате окажется, что длина этого цикла оказывается больше либо равно нуля.
[51:59.060 --> 52:01.060]  Упс, противоречие.
[52:03.060 --> 52:05.060]  То есть вывод.
[52:05.060 --> 52:11.060]  Пока, как только хоть кто-то из этих вершин перестанет быть плюс бесконечностью,
[52:11.060 --> 52:18.060]  на самом деле, то релаксация на этом цикле будет происходить постоянно и всегда.
[52:18.060 --> 52:24.060]  Поэтому получается, что мы не все вершины цикла отрицательного веса идентифицируем,
[52:24.060 --> 52:26.060]  но хотя бы одну найдем.
[52:26.060 --> 52:31.060]  Поэтому старый алгоритм вида возьмем все эти вершины, запустим из них DFS, продолжает работать.
[52:32.060 --> 52:36.060]  Восстановление, конечно, цикла отрицательного веса я вам не обещаю.
[52:37.060 --> 52:39.060]  Хотя...
[52:48.060 --> 52:56.060]  Но да.
[52:56.060 --> 52:58.060]  Но да.
[52:58.060 --> 53:02.060]  Да, особенно если обойти прямо сейчас.
[53:02.060 --> 53:04.060]  Хотя...
[53:04.060 --> 53:06.060]  Ну, в принципе, оно похоже на правду, да.
[53:06.060 --> 53:10.060]  Хотя, хотя, хотя, погодите.
[53:10.060 --> 53:14.060]  Угу, угу, угу, угу.
[53:15.060 --> 53:17.060]  Нет, вот, вот и да.
[53:17.060 --> 53:23.060]  То, что опять же из цикла вроде так должно быть, но вот с конкретным доказательством могут быть проблемы опять.
[53:31.060 --> 53:33.060]  Ну, как...
[53:33.060 --> 53:37.060]  Ну, что-нибудь такое, да.
[53:40.060 --> 53:47.060]  Пройдя от всех обновленных вершин назад до цикла и вот взять циклическую часть, мы найдем все циклы отрицательного веса.
[53:47.060 --> 53:53.060]  Но, во-первых, нужно взять циклическую часть, а во-вторых, мы считаем циклы несколько раз.
[53:53.060 --> 53:55.060]  Угу, возможно.
[53:55.060 --> 53:57.060]  Нет, вот сейчас.
[53:57.060 --> 53:58.060]  Нет, вот как...
[53:58.060 --> 54:02.060]  Ну, мы до S-а можем не дойти, допустим.
[54:02.060 --> 54:04.060]  Ну, если что, мы вот там скажем...
[54:04.060 --> 54:09.060]  Если мы будем скакать от вершины VK до S по порежкам, то мы можем до S-а не дойти, потому что мы...
[54:09.060 --> 54:15.060]  Да, я имею в виду, что, можно сказать, от вершин, которые дальше, чем этот цикл, пойти назад, но зациклиться...
[54:15.060 --> 54:17.060]  Да, да, да, да.
[54:17.060 --> 54:18.060]  Будет нет на нее сам.
[54:18.060 --> 54:19.060]  Нет, ну, да, да.
[54:19.060 --> 54:20.060]  Ну, вроде да.
[54:20.060 --> 54:23.060]  Нет, останется такой вопрос, а почему мы действительно такое обязательно найдем?
[54:23.060 --> 54:26.060]  Ну, опять же, циклы отрицательного веса.
[54:26.060 --> 54:28.060]  Мы хотим все циклы отрицательного веса найти.
[54:28.060 --> 54:29.060]  Да, да.
[54:29.060 --> 54:30.060]  Хотя это вопрос, да.
[54:30.060 --> 54:32.060]  Нет, все, нет, все мы не...
[54:32.060 --> 54:33.060]  Нет, ну, как всегда, нет.
[54:33.060 --> 54:36.060]  Нет, все там мы, может, и не найдем.
[54:36.060 --> 54:38.060]  Нет, ну, все мы не найдем их.
[54:38.060 --> 54:40.060]  Естественно, там бесчисленное множество.
[54:40.060 --> 54:44.060]  Ну, ладно, численное, но если мы о простых циклах говорим.
[54:44.060 --> 54:47.060]  А, ну да, не простых циклов, бесчисленные, конечно.
[54:47.060 --> 54:50.060]  Но, но, но, но.
[54:50.060 --> 54:51.060]  Ну, вот.
[54:51.060 --> 54:54.060]  Но, как бы обычно у нас задача только, если...
[54:54.060 --> 54:58.060]  Вот желательно, что если через вершину, то есть если там какая-нибудь минус бесконечности,
[54:58.060 --> 55:03.060]  то покажите мне, пожалуйста, цикл отрицательного веса, который это идентифицирует.
[55:03.060 --> 55:04.060]  Так.
[55:04.420 --> 55:07.420]  Но, не знаю, можно жить по принципу, что
[55:07.420 --> 55:10.420]  вот почему-то ощущение такое, что если какая-то вершина,
[55:10.420 --> 55:13.420]  то есть как бы мы можем даже n-ую итерацию делать без релаксации.
[55:13.420 --> 55:16.420]  А просто проверим, какие бы вершины могли бы проек apprenticeslerваться,
[55:16.420 --> 55:19.220]  если бы мы n-ую итерацию запустили?
[55:19.220 --> 55:23.220]  И тогда почему-то вот есть жуткое ощущение, что...
[55:24.640 --> 55:27.620]  Есть жуткое ощущение, что все такие вершины,
[55:27.620 --> 55:29.120]  которые могли бы проек рассироваться, то
[55:29.120 --> 55:32.120]  как бы там по UErezhki дадут вам цикл отрицательного веса.
[55:34.060 --> 55:39.060]  По крайней мере, слету не видно причин, почему это не так, да, типичная олимпиадная логика, да.
[55:39.060 --> 55:43.060]  Ну да, это я придумал решение, я не понимаю, почему оно может быть неверно, значит надо писать.
[55:43.060 --> 55:46.060]  Да, ой, что? Ва 38.
[55:46.060 --> 55:48.060]  Чего?
[55:48.060 --> 55:52.060]  Да.
[55:52.060 --> 55:55.060]  Ну нет, у кого картично?
[55:55.060 --> 55:59.060]  У меня поэтому, я говорю, у меня поэтому и с задачами нажать некие проблемы,
[55:59.060 --> 56:03.060]  потому что я как бы не рискую писать решение, пока его не докажу.
[56:03.060 --> 56:08.060]  А там некоторые жадники бывают из цикла, что пока ты доказываешь, тысяча человек его уже сдала.
[56:08.060 --> 56:10.060]  Да, это буквально.
[56:10.060 --> 56:16.060]  Да, я как-то на одном из последних раундов своей жизни, который я писал, я так погорел.
[56:16.060 --> 56:36.060]  Найдем.
[56:36.060 --> 56:43.060]  Сейчас, ну, корректно найдем минус бесконечности, это безусловно, да.
[56:43.060 --> 57:02.060]  Так.
[57:02.060 --> 57:11.060]  Нет, это тогда. Нет, у меня вопрос именно в другом, почему мы, собственно, вот это при таких скачках действительно там какой-то цикл отрицательного веса найдем.
[57:11.060 --> 57:18.060]  Ну, хотя бы просто, допустим, я сейчас в хиленную итерацию нашел первую вершину V1, которая неожиданно могла бы прелоксироваться.
[57:18.060 --> 57:25.060]  Почему скача по порешкам из нее или там хотя бы вот из VK мы действительно цикл отрицательного веса найдем?
[57:25.060 --> 57:34.060]  Нет, DFS-то да, это понятно, да.
[57:34.060 --> 57:46.060]  Каким образом?
[57:46.060 --> 57:53.060]  Ой, ну, по-моему, там, ну, я не знаю, чем нам это поможет.
[57:53.060 --> 57:59.060]  Нет, ну, очень хочется сказать, что да, мы пробежимся еще и порешки будут это, но с другой стороны, там в графе еще что-то есть.
[57:59.060 --> 58:04.060]  Поэтому, как будет работать, это что-то непонятное.
[58:04.060 --> 58:11.060]  Как всегда, нет, DFS, да. Нет, DFS мог бы там нам помочь, потому что, да, в DFS мы могли прописывать, из каких вершин мы куда пришли, это да.
[58:11.060 --> 58:23.060]  Но как бы хотелось бы восстановить сам цикл.
[58:23.060 --> 58:33.060]  А мне тоже хочется сказать, что это просто неправда, что мы, наверное, что мы можем там сделать одно или два, или, я не знаю, N, до конца этой трассы и пропишемся по порешкам.
[58:33.060 --> 58:42.060]  То есть, если у нас в какой-то вершин цикл ведет в ребро, то есть, конечно, минус там 10, 9, то у нас никогда не замкнет.
[58:42.060 --> 58:47.060]  Ну, за нормальную трассу не замкнет цикл порешек.
[58:47.060 --> 58:57.060]  Нет, почему, может и, ну, смотря как делают порешки. Нет, вот почему, прямо сейчас, наверное, интерация, если он берет по этому ребру, то он как бы дает за цикл как раз.
[58:57.060 --> 59:03.060]  Если до этого порешки, конечно, были именно вот такие. То есть, это как бы вроде нормально.
[59:03.060 --> 59:11.060]  Если, например, вершина в БКАТ ведет в ребро, минус 9, мы не преодолевсируем.
[59:11.060 --> 59:14.060]  Да, но мы, скажем так, мы...
[59:14.060 --> 59:18.060]  А потом за следующий модуль Каэтерации обновим...
[59:18.060 --> 59:25.060]  Нет, то есть мы же не обновим все порешки, мы не обновим порешку для БКАТ еще долго, потому что еще Каэтерация.
[59:25.060 --> 59:27.060]  Нет, почему не обновим?
[59:27.060 --> 59:31.060]  Не, тут, не, ну, да, хотя да, кстати, боль-то вот там...
[59:31.060 --> 59:34.060]  Сейчас, тут как бы...
[59:34.060 --> 59:39.060]  То, что мы доказали про Форт Бернер, до этого это некременимо.
[59:39.060 --> 59:44.060]  Там одной личной трассы не хватит, а N дополнительной трассы не хватит.
[59:44.060 --> 59:47.060]  А если есть путь в какую-то извершину цикла, который...
[59:47.060 --> 59:51.060]  Дальше у тебя есть еще цикл.
[59:51.060 --> 59:55.060]  Давай ты задлину цикл, и по этому циклу обновишь снова в тебе ответ.
[59:55.060 --> 59:59.060]  Когда я тут знаю, что звена по циклу изнацикла не больше, чем N.
[01:00:03.060 --> 01:00:06.060]  Ну, я тут вот не понял, что в принципе да.
[01:00:06.060 --> 01:00:14.060]  Нет, есть, конечно, соблазн такое сказать, что в каждый момент времени ПРНшки у вас извершины перейдут либо в вершину S,
[01:00:14.060 --> 01:00:19.060]  либо в цикл, причем почему-то хочется сказать, что отрицательные стоимости.
[01:00:19.060 --> 01:00:24.060]  Потому что, в принципе, вообще, простое отвержение звучит так.
[01:00:24.060 --> 01:00:34.060]  Если по ПРНшкам можно дойти до S, то эти ПРНшки задают путь, длина которого не больше, чем то, что сейчас в дэшке написано.
[01:00:34.060 --> 01:00:42.060]  Так, давайте, так, утверждение такое.
[01:00:42.060 --> 01:00:46.060]  В всех вершинах цикла будут написаны ПРНшки, которые зацикливаются.
[01:00:46.060 --> 01:00:48.060]  Так.
[01:00:48.060 --> 01:00:53.060]  В всех остальных вершинах не обязательно написаны корректные ПРНшки.
[01:00:53.060 --> 01:00:56.060]  Опять же, вот этот пример.
[01:00:56.060 --> 01:01:00.060]  Сейчас. Сейчас в каких вершинах еще раз написаны ПРНшки корректные?
[01:01:00.060 --> 01:01:04.060]  Которые на цикле отрицательного веса, или для которых нет ни минуты конечности?
[01:01:04.060 --> 01:01:07.060]  Так, цикл, ну вот.
[01:01:07.060 --> 01:01:13.060]  Сейчас, которые не находятся на цикле, у которых не минус бесконечность, или у которых, которые на цикле отрицательного веса, я не понял.
[01:01:13.060 --> 01:01:15.060]  Что значит корректное?
[01:01:15.060 --> 01:01:21.060]  Ну, корректное так, что утверждение такое, что если до вершины есть корречайший путь, то по ПРНшкам он восстанавливается.
[01:01:21.060 --> 01:01:25.060]  В этом мы вроде даже убедились.
[01:01:25.060 --> 01:01:28.060]  Да, через вот, через технологию ТВ, да.
[01:01:29.060 --> 01:01:38.060]  Так, через технологию ТВ мы убедились в том, что корректайшие пути ПРНшки действительно идентифицируют четко.
[01:01:38.060 --> 01:01:43.060]  Получается, что для всех вершин на отрицательном цикле ПРНшки должны зацепиться.
[01:01:43.060 --> 01:01:48.060]  Ну, вот, да. Они обязательно должны зацепиться, да, может быть, предперируют.
[01:01:48.060 --> 01:01:50.060]  Нет, ну понятно, да.
[01:01:50.060 --> 01:01:53.060]  Нету должны, но теперь...
[01:01:53.060 --> 01:01:54.060]  Нет, ну как?
[01:01:54.060 --> 01:01:56.060]  Нет, ну как должны?
[01:01:56.060 --> 01:02:00.060]  А почему они должны зациклиться? Кто сказал, что они зациклиться?
[01:02:00.060 --> 01:02:04.060]  Потому что они, так скажем, в ВЭС прийти не могут.
[01:02:04.060 --> 01:02:08.060]  Почему в ВЭС прийти не могут? Они вам выдадут какой-то путь.
[01:02:08.060 --> 01:02:14.060]  Давайте докажем, что для всех вершин на отрицательном цикле у нас ПРНшки не оказывают какой-нибудь цикл.
[01:02:20.060 --> 01:02:23.060]  Так, сейчас еще раз. Чего ПРНшки?
[01:02:23.060 --> 01:02:30.060]  Если вершина лежит на отрицательном цикле, то, идя по ее ПРНшкам после интерации, мы получим этот цикл.
[01:02:30.060 --> 01:02:37.060]  Так, идя по ПРНшкам, мы получим какой-то цикл.
[01:02:37.060 --> 01:02:39.060]  Почему?
[01:02:39.060 --> 01:02:43.060]  А, слушайте, Оль, нет, есть более простое доказательство. Знаете какое?
[01:02:43.060 --> 01:02:50.060]  Смотрите, что означает, что на Н-ной интерации вершина обновилась?
[01:02:50.060 --> 01:02:58.060]  Это значит, что мы нашли путь длины не меньше, чем Н, который короче, чем все, что было раньше.
[01:02:58.060 --> 01:03:02.060]  То есть, короче, чем все простые пути.
[01:03:02.060 --> 01:03:04.060]  Вот.
[01:03:04.060 --> 01:03:08.060]  То есть, это оно. То есть, это...
[01:03:08.060 --> 01:03:12.060]  Сейчас. И чего?
[01:03:12.060 --> 01:03:16.060]  Нет. Ну, скажем так, это...
[01:03:16.060 --> 01:03:18.060]  Нет.
[01:03:18.060 --> 01:03:22.060]  Нет, ну нет, просто это как бы, ну вот.
[01:03:22.060 --> 01:03:24.060]  Нет, ну просто...
[01:03:24.060 --> 01:03:26.060]  Так, сейчас.
[01:03:26.060 --> 01:03:30.060]  Сперва восстанавливаем ПРНшку путь длины не больше, чем написано в ДД.
[01:03:30.060 --> 01:03:32.060]  Только в ДД у нас уже записано более коротко, чуть простой.
[01:03:32.060 --> 01:03:34.060]  Значит, даже цикл по циклу овеси.
[01:03:34.060 --> 01:03:36.060]  Значит, ПРНшки мы узнаем, какой цикл по циклу овеси.
[01:03:36.060 --> 01:03:38.060]  Ну, логика это вопросал. А кто сказал?
[01:03:38.060 --> 01:03:40.060]  Тут логика это вопросал. А как...
[01:03:40.060 --> 01:03:45.060]  Тут надо понять тогда. А как то, что написано в ПРНшках, связано с этими Д-шками, которые мы тут находим?
[01:03:45.060 --> 01:03:47.060]  То есть, вот как-то связано.
[01:03:47.060 --> 01:03:51.060]  Может, там в ПРНшках Q какая-нибудь написано, которая даст вам какой-нибудь простой путь.
[01:03:51.060 --> 01:03:53.060]  То есть, пока нот.
[01:03:53.060 --> 01:03:55.060]  То есть, как бы...
[01:03:55.060 --> 01:03:57.060]  Ну вот.
[01:04:01.060 --> 01:04:03.060]  Ну вот сюда. Было бы неплохо.
[01:04:03.060 --> 01:04:05.060]  Нет, было бы неплохо.
[01:04:05.060 --> 01:04:10.060]  Хотя, нет, была мысль такая, что, допустим, ПРНшки в какой-то момент времени дают...
[01:04:10.060 --> 01:04:15.060]  То есть, ПРНшки из вершины В, допустим, вам в какой-то момент времени дают какой-то путь.
[01:04:15.060 --> 01:04:18.060]  Вот дают, дают, дают, дают.
[01:04:18.060 --> 01:04:27.060]  Вот мне теоретически очень хотелось бы заявить, что этот путь по длине не превосходит того ДРВ, который там сейчас написано.
[01:04:32.060 --> 01:04:35.060]  Да, вот хочется мне почему-то такое заявить.
[01:04:36.060 --> 01:04:38.060]  Может, такой вопрос.
[01:04:38.060 --> 01:04:42.060]  Правда ли, что эти ПРНшки в любой момент времени расцикливаются?
[01:04:42.060 --> 01:04:44.060]  Нет, но осторожно.
[01:04:44.060 --> 01:04:46.060]  Кстати, да, интересный факт.
[01:04:46.060 --> 01:04:49.060]  ПРНшки могут сейчас зацикливаться, а потом перестать зацикливаться, если что.
[01:04:49.060 --> 01:04:53.060]  Ну, по крайней мере, слетают непонятно, как опровергают.
[01:04:53.060 --> 01:04:55.060]  Вот.
[01:04:55.060 --> 01:04:57.060]  Нет, ну ладно, но утверждение такое, действительно.
[01:04:57.060 --> 01:05:04.060]  Жили были, что если по ПРНшкам можно дойти из С, то эти ПРНшки задают путь, длина которого не превосходит ДРВ.
[01:05:04.060 --> 01:05:11.060]  Верно по индукции по времени.
[01:05:11.060 --> 01:05:15.060]  То есть рассмотрим обдавление вот по этому ребру.
[01:05:15.060 --> 01:05:21.060]  Тогда по этому ребру то, что написано, то есть D отсюда плюс вес равно D от В.
[01:05:21.060 --> 01:05:30.060]  А вот длина вот этого пути, она у нас не превосходит, то есть при положении индукции не превосходит D от этой вершины.
[01:05:31.060 --> 01:05:35.060]  Вот.
[01:05:35.060 --> 01:05:39.060]  Да, то есть, ну вот.
[01:05:39.060 --> 01:05:42.060]  То есть, нет, хотя не совсем так.
[01:05:42.060 --> 01:05:45.060]  Конкретно в момент релаксации это так.
[01:05:45.060 --> 01:05:55.060]  Но заметим, что в процессе вот эти ПРНшки, то есть в процессе, на самом деле, даже пока эта ПРНшка не меняется, вот эти ПРНшки могут меняться.
[01:05:55.060 --> 01:06:00.060]  Ну, с другой стороны, заметим, что...
[01:06:00.060 --> 01:06:02.060]  Нет, а вот непонятно.
[01:06:02.060 --> 01:06:04.060]  Вот тут опять подлянка.
[01:06:04.060 --> 01:06:12.060]  Смотрите, то есть как бы если у нас просто, допустим, у одной вершины там путь поменялся на другой, то как бы да, нам хуже не стало.
[01:06:12.060 --> 01:06:18.060]  Вот именно для того, чтобы нам тут хуже не стало, мы и говорим, что тут меньше либо равно, пути они просто равен.
[01:06:18.060 --> 01:06:23.060]  Но вот это вопрос, а что делать, если тут неожиданно произошел зацикл?
[01:06:23.060 --> 01:06:28.060]  Мы побегали, побегали, побегали, а потом зацикл быть перестал.
[01:06:28.060 --> 01:06:32.060]  Вот.
[01:06:32.060 --> 01:06:37.060]  Да, в общем, повесились, да.
[01:06:37.060 --> 01:06:41.060]  Зациклились, повесились, в общем, да.
[01:06:41.060 --> 01:06:49.060]  Пишите за квадрат памяти, не ошибетесь.
[01:06:49.060 --> 01:06:52.060]  А черт его знает, я не знаю.
[01:07:02.060 --> 01:07:09.060]  Хотелось бы, хотя честно скажу, я не знаю, правда это или нет, может это и неправда.
[01:07:11.060 --> 01:07:27.060]  Ну может, но нам не важно, если мы установим хоть что-нибудь, даже если мы будем просто идти по этому, удалять неотрицательные зациклы, в итоге найдем зацикл отрицательный, да, зато тоже устроит.
[01:07:37.060 --> 01:07:40.060]  Ну может она раньше испортилась.
[01:07:42.060 --> 01:07:45.060]  Да, которая так.
[01:07:57.060 --> 01:08:02.060]  Да, да, да, только одна маленькая проблема, мы не доказали это утверждение.
[01:08:02.060 --> 01:08:07.060]  Вот, вот что проблема, так-то да, план был именно такой.
[01:08:07.060 --> 01:08:17.060]  Так-то да, вот как-то так, как-то.
[01:08:38.060 --> 01:08:46.060]  Да, да, да, да, хотя, ой, слушайте, хотя, нет, все еще тупее вообще, хотя на самом деле тут, кажется, думать особо не надо.
[01:08:46.060 --> 01:08:50.060]  Вообще, как бы, есть базовое свойство любой такой Д.
[01:08:50.060 --> 01:08:57.060]  В каждый момент времени D от V это длина какого-то пути от S до V.
[01:08:57.060 --> 01:09:03.060]  То есть существует такой путь, там простой, не простой, не знаю, но точно такой путь есть, да.
[01:09:03.060 --> 01:09:13.060]  И более того, и более того, ПРЭшка корректно говорит, через какую предыдущую вершину такой путь мог бы проходить.
[01:09:13.060 --> 01:09:16.060]  Логично, да.
[01:09:16.060 --> 01:09:19.060]  То есть, вот.
[01:09:19.060 --> 01:09:25.060]  Так, то есть, вот такое, теперь мы начинаем думать.
[01:09:25.060 --> 01:09:34.060]  Давайте, допустим, мы, ну вот, то есть там, допустим, мы начинаем восстанавливать ответ.
[01:09:34.060 --> 01:09:38.060]  То есть, допустим, мы начинаем восстанавливать ответ.
[01:09:38.060 --> 01:09:44.060]  Ну вот, допустим, идем от вершины V, тут написано какая-то D от V.
[01:09:44.060 --> 01:09:48.060]  В ней записано, что как бы последним ребром этого пути
[01:09:48.060 --> 01:09:53.060]  могло быть вот это и это у нас предыдущее, допустим, в V1.
[01:09:53.060 --> 01:09:59.060]  Так, говорим мы теперь, что у нас происходит в ПРе от V1.
[01:09:59.060 --> 01:10:04.060]  Ну, заметим, там сейчас в Де от V1 находится, может быть, не тот путь,
[01:10:04.060 --> 01:10:07.060]  через который мы релаксировали, собственно, В, конечно.
[01:10:07.060 --> 01:10:11.060]  То есть там может, но он не больше, может он там меньше.
[01:10:11.060 --> 01:10:16.060]  Вот. Поэтому, значит, мы рисуем, получается, V2.
[01:10:18.060 --> 01:10:22.060]  Так. Нет, хотя, блин, опять все плохо.
[01:10:24.060 --> 01:10:28.060]  Потому что действительно доказательства сейчас у нас,
[01:10:28.060 --> 01:10:31.060]  то есть мы, конечно, сейчас докажем, что мы действительно зациклимся.
[01:10:31.060 --> 01:10:35.060]  Потому что выясняется, что там действительно будет V3 и так далее.
[01:10:35.060 --> 01:10:39.060]  То есть если мы случайно так дойдем до S, то получится путь не более,
[01:10:39.060 --> 01:10:45.060]  чем D от V, но D от V меньше, чем все, что можно получить на простых путях.
[01:10:45.060 --> 01:10:47.060]  Вывод из этого только один.
[01:10:47.060 --> 01:10:52.060]  Вывод из этого только тот, что нас ждет зацикл.
[01:10:52.060 --> 01:10:56.060]  Теперь выясняется вопрос, а верно ли, что на этом зацикле можно,
[01:10:56.060 --> 01:11:01.060]  верно ли, что этот цикл простой, там что это цикл отрицательной стоимости?
[01:11:01.060 --> 01:11:04.060]  Непонятно.
[01:11:10.060 --> 01:11:13.060]  Так. Нет, ну наличие цикла да.
[01:11:13.060 --> 01:11:16.060]  Но знаете, сокращение жизни хорошо.
[01:11:16.060 --> 01:11:18.060]  Наличие цикла да.
[01:11:18.060 --> 01:11:22.060]  Нет, если он в этом месте является циклом отрицательного веса,
[01:11:22.060 --> 01:11:25.060]  то как бы да, мы уже можем возрадоваться в этом месте.
[01:11:33.060 --> 01:11:35.060]  Вау.
[01:11:35.060 --> 01:11:37.060]  Так.
[01:11:37.060 --> 01:11:43.060]  По порешкам никогда не бывает цикла отрицательной.
[01:11:43.060 --> 01:11:46.060]  Вот так.
[01:11:46.060 --> 01:11:50.060]  Так, ну да, потому что когда впервые...
[01:11:50.060 --> 01:11:52.060]  Ну это да.
[01:11:52.060 --> 01:11:54.060]  А если так?
[01:11:58.060 --> 01:11:59.060]  Да.
[01:11:59.060 --> 01:12:01.060]  Хотим верить в это.
[01:12:01.060 --> 01:12:04.060]  А можем ли мы в это верить?
[01:12:06.060 --> 01:12:08.060]  Давай.
[01:12:18.060 --> 01:12:22.060]  Нет, то как можем там, когда цикл только возникает неожиданно,
[01:12:22.060 --> 01:12:26.060]  то конечно да, это мы легко можем в это поверить, это правда.
[01:12:26.060 --> 01:12:31.060]  Но когда там в процессе возникает, когда там цикл...
[01:12:31.060 --> 01:12:35.060]  Да, ну просто нет, там может быть какая-нибудь, ну вот...
[01:12:43.060 --> 01:12:45.060]  А, ну хотя да.
[01:12:45.060 --> 01:12:46.060]  Хорошо, да.
[01:12:46.060 --> 01:12:49.060]  Рассмотрим держа ребро УВ, по которому сейчас произошла
[01:12:49.060 --> 01:12:51.060]  релаксация в результате которой произошел...
[01:12:51.060 --> 01:12:54.060]  В результате которой у нас тут есть цикл.
[01:12:54.060 --> 01:12:56.060]  Да, вот так.
[01:12:56.060 --> 01:13:00.060]  Так, что это означает?
[01:13:00.060 --> 01:13:02.060]  То есть в принципе да.
[01:13:02.060 --> 01:13:06.060]  Если рассмотреть вот этот вот путь, то мы заметим, что...
[01:13:08.060 --> 01:13:12.060]  То тогда заметим, что D от V, которое было раньше,
[01:13:12.060 --> 01:13:16.060]  то есть до этого момента был найден какой-то путь по вершине V.
[01:13:16.060 --> 01:13:20.060]  То есть это было раньше,
[01:13:20.060 --> 01:13:24.060]  то есть до этого момента был найден какой-то путь по вершине V.
[01:13:24.060 --> 01:13:27.060]  То есть какой-то D от V.
[01:13:27.060 --> 01:13:30.060]  Ну вот и мы знаем, что тут путь, который был найден раньше,
[01:13:30.060 --> 01:13:35.060]  плюс вот этот путь, плюс вот это ребро оказался меньше, чем D от V.
[01:13:35.060 --> 01:13:38.060]  Значит, цикл отрицательный.
[01:13:38.060 --> 01:13:42.060]  Пока мы никак не трогаем ни одно из ребер этого цикла...
[01:13:42.060 --> 01:13:44.060]  Нет, почему?
[01:13:44.060 --> 01:13:47.060]  А мое решение никак не завялось на тему того,
[01:13:47.060 --> 01:13:51.060]  образовывали ли эти ребра еще какой-то цикл или что-то еще?
[01:13:51.060 --> 01:13:53.060]  Нет?
[01:13:53.060 --> 01:13:55.060]  Нет, мы говорили следующее.
[01:13:55.060 --> 01:13:59.060]  Потому что из-за чего мог вот это ребро образовывал цикл?
[01:13:59.060 --> 01:14:01.060]  Из-за того, что по ПРЭшкам,
[01:14:01.060 --> 01:14:05.060]  у нас на самом деле, когда прыгая из U по ПРЭшкам, мы прыгали до V.
[01:14:05.060 --> 01:14:10.060]  Заметьте, я даже не знаю, можно ли из этой V допрыгать до S было.
[01:14:10.060 --> 01:14:12.060]  Мне это сейчас вообще по барабану.
[01:14:12.060 --> 01:14:15.060]  Я знаю только одно, что раз я могу дойти до ПРЭшек,
[01:14:15.060 --> 01:14:18.060]  то я знаю следующее, что...
[01:14:19.060 --> 01:14:21.060]  Ну вот то, что я знаю.
[01:14:21.060 --> 01:14:23.060]  Да, почему-то мне кажется следующее,
[01:14:23.060 --> 01:14:26.060]  что тут можно проапгрейдить вот это вот утверждение.
[01:14:26.060 --> 01:14:29.060]  Прогрейдить в том плане, что на самом деле,
[01:14:29.060 --> 01:14:32.060]  если у вас есть просто путь от какой-нибудь вершины V
[01:14:32.060 --> 01:14:35.060]  до какой-нибудь вершины U, допустим,
[01:14:35.060 --> 01:14:38.060]  и это путь по ПРЭшкам,
[01:14:38.060 --> 01:14:41.060]  то я утверждаю, что для каждой вершины,
[01:14:41.060 --> 01:14:43.060]  вот промежуточной вершины, допустим, X,
[01:14:43.060 --> 01:14:46.060]  можно сказать, что D от X...
[01:14:47.060 --> 01:14:52.060]  То есть, то, что там написано,
[01:14:52.060 --> 01:14:54.060]  на самом деле...
[01:14:54.060 --> 01:14:56.060]  Нет, вот хочется сказать...
[01:14:56.060 --> 01:14:58.060]  Сейчас, что хочется сказать?
[01:14:58.060 --> 01:15:01.060]  Хочется сказать, что D от X больше либо равно,
[01:15:01.060 --> 01:15:06.060]  чем, соответственно, D от V плюс вот это вот.
[01:15:06.060 --> 01:15:08.060]  Вот.
[01:15:14.060 --> 01:15:17.060]  Ну да, вроде похоже...
[01:15:17.060 --> 01:15:19.060]  Похоже?
[01:15:19.060 --> 01:15:21.060]  Нет, опять не похоже.
[01:15:21.060 --> 01:15:25.060]  Не хотел бы на экзамене выяснить, что не похоже.
[01:15:25.060 --> 01:15:28.060]  Я тоже расстроюсь.
[01:15:28.060 --> 01:15:30.060]  Ну вот.
[01:15:30.060 --> 01:15:32.060]  Нет.
[01:15:32.060 --> 01:15:34.060]  Хотя...
[01:15:34.060 --> 01:15:37.060]  Не, ну на U тут перебор, конечно.
[01:15:37.060 --> 01:15:39.060]  Не такое уж это и U, но вот.
[01:15:39.060 --> 01:15:40.060]  Так.
[01:15:40.060 --> 01:15:44.060]  Нет, ну хочется действительно такое сказать.
[01:15:44.060 --> 01:15:46.060]  Нет, вообще доказательства,
[01:15:46.060 --> 01:15:48.060]  но доказательства, помните,
[01:15:48.060 --> 01:15:50.060]  тут доказательства даже без индукции особо было.
[01:15:50.060 --> 01:15:52.060]  То есть, там жила была...
[01:15:52.060 --> 01:15:54.060]  То есть, допустим, что у нас есть путь от U до V.
[01:15:54.060 --> 01:15:57.060]  Или, допустим, у нас есть путь от X до V по ПРЭшкам.
[01:15:57.060 --> 01:16:00.060]  Тогда мы замечаем, что в тот момент,
[01:16:00.060 --> 01:16:03.060]  когда мы релаксировались по этому ребру,
[01:16:03.060 --> 01:16:06.060]  то есть, в тот момент, когда мы релаксировались по этому ребру,
[01:16:06.060 --> 01:16:11.060]  оказывалось, что D от этой вершины плюс этот вес оказался равен D от X.
[01:16:11.060 --> 01:16:16.060]  С тех пор D как бы больше не стало.
[01:16:16.060 --> 01:16:18.060]  Вот.
[01:16:18.060 --> 01:16:21.060]  Ну вот, потому что, да, берем дальше, записываем эту цепочку,
[01:16:21.060 --> 01:16:24.060]  там записываем цепочку, и получается кайф.
[01:16:24.060 --> 01:16:27.060]  Главное, что, просто приятно, что это утверждение можно обрубать,
[01:16:27.060 --> 01:16:29.060]  как бы не на вершине S, а на вершине V.
[01:16:29.060 --> 01:16:30.060]  Вот.
[01:16:30.060 --> 01:16:33.060]  Ну и тогда получается, что если...
[01:16:33.060 --> 01:16:35.060]  То есть, тут, казалось бы, да.
[01:16:35.060 --> 01:16:37.060]  То есть, получается, да.
[01:16:37.060 --> 01:16:40.060]  Если взять это записать для D, в том числе и D от U,
[01:16:40.060 --> 01:16:43.060]  там плюс, то есть, D от U, соответственно,
[01:16:43.060 --> 01:16:46.060]  больше либо равно, чем этот путь.
[01:16:46.060 --> 01:16:49.060]  И у нас ПРЭшка образовала за цикл,
[01:16:49.060 --> 01:16:52.060]  то мы вынуждены заключить, что...
[01:16:52.060 --> 01:16:53.060]  Упс.
[01:16:53.060 --> 01:16:57.060]  Значит, цикл отрицательного веса мы его нашли.
[01:16:57.060 --> 01:16:58.060]  Так.
[01:16:58.060 --> 01:16:59.060]  Так.
[01:16:59.060 --> 01:17:00.060]  Ну что, вроде выковырили.
[01:17:00.060 --> 01:17:02.060]  Репку вроде выковырили.
[01:17:05.060 --> 01:17:06.060]  Да, в чем...
[01:17:06.060 --> 01:17:07.060]  В чем, да.
[01:17:07.060 --> 01:17:09.060]  То есть, получился, да, штурм получился сложный,
[01:17:09.060 --> 01:17:12.060]  но, как бы, если вроде там разобраться,
[01:17:12.060 --> 01:17:15.060]  доказательство оказывается простое достаточно.
[01:17:15.060 --> 01:17:16.060]  Так.
[01:17:16.060 --> 01:17:21.060]  Так что, да, слава богу, можно писать из-за линейного количества памяти.
[01:17:21.060 --> 01:17:24.060]  Правда, возможно, какая-то аккуратность нужна, конечно,
[01:17:24.060 --> 01:17:25.060]  хотя...
[01:17:25.060 --> 01:17:26.060]  А нет, аккуратность не нужна.
[01:17:26.060 --> 01:17:28.060]  Нет, аккуратность вроде не нужна, да.
[01:17:28.060 --> 01:17:30.060]  Просто на n-й, да, там...
[01:17:30.060 --> 01:17:31.060]  Просто повез...
[01:17:31.060 --> 01:17:33.060]  На n-й интерации просто автоматически.
[01:17:38.060 --> 01:17:43.060]  Скажем так, для каждой вершины мы сможем найти тот отрицательный цикл,
[01:17:43.060 --> 01:17:47.060]  который делает эту вершину в минуты бесконечности.
[01:17:47.060 --> 01:17:49.060]  Ну да, да, получается так.
[01:17:51.060 --> 01:17:52.060]  Так.
[01:17:52.060 --> 01:17:53.060]  Что?
[01:17:53.060 --> 01:17:56.060]  А можно найти цикл отрицательной длины,
[01:17:56.060 --> 01:18:01.060]  через который можно крутить минуты бесконечности именно для тэр,
[01:18:01.060 --> 01:18:03.060]  для фиксированной тэшки?
[01:18:03.060 --> 01:18:04.060]  Да, можно.
[01:18:04.060 --> 01:18:07.060]  Нет, ну, может, из всех циклов можно DFS запустить, как минимум.
[01:18:07.060 --> 01:18:09.060]  Мы запускаем DFS...
[01:18:09.060 --> 01:18:10.060]  А, мы знаем, что...
[01:18:10.060 --> 01:18:11.060]  Да.
[01:18:11.060 --> 01:18:12.060]  Да, то есть, это такая надежность.
[01:18:12.060 --> 01:18:14.060]  То есть...
[01:18:14.060 --> 01:18:16.060]  Да.
[01:18:16.060 --> 01:18:17.060]  Ну да.
[01:18:17.060 --> 01:18:19.060]  То есть, циклы нашли, там, ну...
[01:18:19.060 --> 01:18:22.060]  Или другие порешки насчитать уже тогда.
[01:18:22.060 --> 01:18:23.060]  Вот.
[01:18:23.060 --> 01:18:24.060]  Ладно.
[01:18:24.060 --> 01:18:27.060]  Значит, это был алгоритм Форда Белмана.
[01:18:27.060 --> 01:18:29.060]  Он у нас работает за WE.
[01:18:30.060 --> 01:18:32.060]  Да, но это как бы нот...
[01:18:34.060 --> 01:18:36.060]  Да, казалось бы, что тут еще можно сделать?
[01:18:37.060 --> 01:18:39.060]  Правда, честно говоря, мне неизвестно,
[01:18:39.060 --> 01:18:42.060]  можно ли сделать что-то лучше, чем WE.
[01:18:43.060 --> 01:18:45.060]  Может, и можно, я не знаю.
[01:18:45.060 --> 01:18:46.060]  Вот.
[01:18:46.060 --> 01:18:51.060]  Но остается только отметить, что здесь, конечно, еще
[01:18:51.060 --> 01:18:53.060]  одна постановка задачи.
[01:18:54.060 --> 01:18:56.060]  Постановка задачи называется, а давайте найдем кратчайшие
[01:18:56.060 --> 01:18:58.060]  пути не от одной вершины до всех остальных,
[01:18:58.060 --> 01:19:00.060]  а между всеми парами вершин.
[01:19:01.060 --> 01:19:03.060]  Вот, хочется.
[01:19:04.060 --> 01:19:06.060]  Ну, напрашивший вариант, мы, конечно, можем запустить
[01:19:06.060 --> 01:19:09.060]  в ЭРА с Форда Белмана,
[01:19:10.060 --> 01:19:12.060]  но этого бы не хотелось.
[01:19:15.060 --> 01:19:16.060]  Вот.
[01:19:16.060 --> 01:19:18.060]  Ну и, действительно, оказывается, что есть алгоритм,
[01:19:18.060 --> 01:19:20.060]  который нам в этом сильно помогает.
[01:19:21.060 --> 01:19:23.060]  В чем пишется, едва ли не проще.
[01:19:26.060 --> 01:19:29.060]  Ну, пишется, оказывается, он неожиданным образом.
[01:19:29.060 --> 01:19:31.060]  Ну, пока если вы это первый раз видите.
[01:19:48.060 --> 01:19:49.060]  Вот.
[01:20:01.060 --> 01:20:03.060]  Это его величество, Флойд.
[01:20:08.060 --> 01:20:11.060]  То есть вот предлагается каким-то вот таким мистическим
[01:20:11.060 --> 01:20:13.060]  образом искать кратчайшие пути.
[01:20:19.060 --> 01:20:21.060]  Ну вот, вот, возникает вопрос.
[01:20:21.060 --> 01:20:23.060]  Как же это делать?
[01:20:23.060 --> 01:20:25.060]  Ну, для начала.
[01:20:25.060 --> 01:20:27.060]  Ну, да, как делать, понятно.
[01:20:27.060 --> 01:20:29.060]  А почему это работает?
[01:20:34.060 --> 01:20:36.060]  Ну, да, ну, возникает вопрос, а что такое?
[01:20:36.060 --> 01:20:38.060]  Ну, давайте так.
[01:20:38.060 --> 01:20:40.060]  Возникает вопрос, а что такое работает?
[01:20:44.060 --> 01:20:45.060]  Ну, корректно, да.
[01:20:45.060 --> 01:20:47.060]  Ну, по камере хочется сказать, что в итоге этой динамики
[01:20:47.060 --> 01:20:49.060]  АИТ и ЖИТ реально равно кратчайшему пути.
[01:20:51.060 --> 01:20:53.060]  Если он есть хотя бы.
[01:20:53.060 --> 01:20:55.060]  Ну, давайте разбираться.
[01:20:55.060 --> 01:20:57.060]  Ну, по одному.
[01:20:57.060 --> 01:20:59.060]  Теперь главное только сформулируйте, что мы доказываем
[01:20:59.060 --> 01:21:01.060]  по индукции.
[01:21:03.060 --> 01:21:05.060]  То есть какое конкретное утверждение?
[01:21:17.060 --> 01:21:19.060]  Ну, по количеству, да.
[01:21:29.060 --> 01:21:31.060]  Ну, да, вот так.
[01:21:31.060 --> 01:21:33.060]  Сейчас.
[01:21:33.060 --> 01:21:35.060]  Ну, непонятно.
[01:21:35.060 --> 01:21:37.060]  Как бы неверно, что на первой итерации
[01:21:37.060 --> 01:21:39.060]  обязательно найдутся все кратчайшие пути длины.
[01:21:39.060 --> 01:21:41.060]  Там 2, например.
[01:21:47.060 --> 01:21:49.060]  То есть если на л-те итерация
[01:21:49.060 --> 01:21:51.060]  мы найдем минимальные из путей,
[01:21:51.060 --> 01:21:53.060]  проходящие через вершины
[01:21:53.060 --> 01:21:55.060]  только от 1 до l.
[01:21:55.060 --> 01:21:57.060]  Да.
[01:21:57.060 --> 01:21:59.060]  Да, вот обойти внимание.
[01:21:59.060 --> 01:22:01.060]  Индукция здесь другая.
[01:22:01.060 --> 01:22:03.060]  То есть утверждение такое, что после ката итерации
[01:22:03.060 --> 01:22:05.060]  мы найдем все кратчайшие пути
[01:22:05.060 --> 01:22:07.060]  среди всех путей, которые в качестве
[01:22:07.060 --> 01:22:09.060]  промежуточных используют только вершины
[01:22:09.060 --> 01:22:11.060]  от одного дока.
[01:22:13.060 --> 01:22:15.060]  То есть изначально у нас просто матрица смежности,
[01:22:15.060 --> 01:22:17.060]  то есть не ходим вообще ни через какие вершины.
[01:22:17.060 --> 01:22:19.060]  После первой итерации
[01:22:19.060 --> 01:22:21.060]  ходим через вершину 1,
[01:22:21.060 --> 01:22:23.060]  после второй через вершину 1 и 2 и так далее.
[01:22:23.060 --> 01:22:25.060]  Понимаете, да?
[01:22:25.060 --> 01:22:27.060]  Так что вот такой вот тоже кайфец
[01:22:27.060 --> 01:22:29.060]  происходит.
[01:22:29.060 --> 01:22:31.060]  Вот.
[01:22:31.060 --> 01:22:33.060]  Ну, вот так.
[01:22:33.060 --> 01:22:35.060]  Что же нам теперь делать дальше?
[01:22:39.060 --> 01:22:41.060]  Ну, да.
[01:22:41.060 --> 01:22:43.060]  Более того, заметим, что в принципе
[01:22:43.060 --> 01:22:45.060]  и ответ достаточно легко восстанавливается.
[01:22:47.060 --> 01:22:49.060]  Да, ну, казалось бы, тоже там
[01:22:49.060 --> 01:22:51.060]  могли быть какие-нибудь зациклы.
[01:22:51.060 --> 01:22:53.060]  В данном случае такой
[01:22:53.060 --> 01:22:55.060]  надежный
[01:22:55.060 --> 01:22:57.060]  вариант
[01:22:57.060 --> 01:22:59.060]  восстановления ответа.
[01:22:59.060 --> 01:23:01.060]  Какой может быть?
[01:23:01.060 --> 01:23:03.060]  Ну, можно ввести,
[01:23:03.060 --> 01:23:05.060]  то есть можно при вот этом вот восстановлении
[01:23:05.060 --> 01:23:07.060]  написать, что при этом от
[01:23:07.060 --> 01:23:09.060]  ИЖ в случае чего равно
[01:23:09.060 --> 01:23:11.060]  вот тому самому К.
[01:23:11.060 --> 01:23:13.060]  Ну, например, да?
[01:23:13.060 --> 01:23:15.060]  Тогда оказывается, что
[01:23:15.060 --> 01:23:17.060]  ну тогда придется вам просто рекурсивно восстанавливать
[01:23:17.060 --> 01:23:19.060]  ответ для отрезка от И до К
[01:23:19.060 --> 01:23:21.060]  и ответа от К до Ж.
[01:23:21.060 --> 01:23:23.060]  Ну, получится рекурсия, но она
[01:23:23.060 --> 01:23:25.060]  не зациклется, потому что опять же
[01:23:25.060 --> 01:23:27.060]  логика та же, что и в ТВ.
[01:23:29.060 --> 01:23:31.060]  То есть как бы это означает, что
[01:23:31.060 --> 01:23:33.060]  раз через вершину К это максимальная
[01:23:33.060 --> 01:23:35.060]  вершина, значит А от ИК и от К Ж
[01:23:35.060 --> 01:23:37.060]  значит там на самом деле уже
[01:23:37.060 --> 01:23:39.060]  как бы все восстановлено с меньшими вершинами
[01:23:39.060 --> 01:23:41.060]  в промежуточке.
[01:23:41.060 --> 01:23:43.060]  Потому что к этому моменту мы уже все
[01:23:43.060 --> 01:23:45.060]  посчитали. Да.
[01:23:45.060 --> 01:23:47.060]  Пока здесь действительно ничего сложного.
[01:23:47.060 --> 01:23:49.060]  Но это пока нет циклов отрицательного веса.
[01:23:53.060 --> 01:23:55.060]  Ну как восстанавливать цикл отрицательного веса?
[01:23:57.060 --> 01:23:59.060]  Как говорится, я не знаю.
[01:23:59.060 --> 01:24:01.060]  Потому что
[01:24:01.060 --> 01:24:03.060]  заметил, здесь, конечно, очень
[01:24:03.060 --> 01:24:05.060]  приятно восстанавливаются вершины,
[01:24:05.060 --> 01:24:07.060]  из которых, по крайней мере,
[01:24:07.060 --> 01:24:09.060]  то есть какие-то вершины, через которые
[01:24:09.060 --> 01:24:11.060]  проходит какой-то цикл
[01:24:11.060 --> 01:24:13.060]  отрицательного веса не сильно большой
[01:24:13.060 --> 01:24:15.060]  длины.
[01:24:17.060 --> 01:24:19.060]  В частности, например, тут очень приятно,
[01:24:19.060 --> 01:24:21.060]  что иногда возникает такая ситуация,
[01:24:21.060 --> 01:24:23.060]  что А от ВВ
[01:24:23.060 --> 01:24:25.060]  неожиданно становится меньше нуля.
[01:24:25.060 --> 01:24:27.060]  Казалось бы, на изначальном отрице смежности
[01:24:27.060 --> 01:24:29.060]  нули, а вот падишь.
[01:24:29.060 --> 01:24:31.060]  Но я утверждаю, что
[01:24:31.060 --> 01:24:33.060]  если это произошло, то цикл
[01:24:33.060 --> 01:24:35.060]  отрицательного веса через вершину В точно
[01:24:35.060 --> 01:24:37.060]  проходит какой-нибудь.
[01:24:37.060 --> 01:24:39.060]  Ну как всегда, тут уже
[01:24:39.060 --> 01:24:41.060]  очевидно, потому что всегда
[01:24:41.060 --> 01:24:43.060]  А от ИЖ это длина какого-то пути
[01:24:43.060 --> 01:24:45.060]  реально существующего.
[01:24:45.060 --> 01:24:47.060]  Так что, раз такое есть, значит
[01:24:47.060 --> 01:24:49.060]  отрицательный путь из вершины В, вершины В
[01:24:49.060 --> 01:24:51.060]  нашелся.
[01:24:57.060 --> 01:24:59.060]  Нет, такого не может быть.
[01:24:59.060 --> 01:25:01.060]  Я утверждаю следующее,
[01:25:01.060 --> 01:25:03.060]  что если
[01:25:03.060 --> 01:25:05.060]  если есть простой цикл
[01:25:05.060 --> 01:25:07.060]  отрицательного веса,
[01:25:07.060 --> 01:25:09.060]  то тогда в результате
[01:25:09.060 --> 01:25:11.060]  у каждой из этих вершин в конце
[01:25:11.060 --> 01:25:13.060]  будет вот это.
[01:25:15.060 --> 01:25:17.060]  Нет, то там просто, ну да.
[01:25:19.060 --> 01:25:21.060]  Потому что жила была вершина В,
[01:25:21.060 --> 01:25:23.060]  и вот рассмотрим,
[01:25:23.060 --> 01:25:25.060]  пусть она лежит на цикле отрицательного веса.
[01:25:27.060 --> 01:25:29.060]  Рассмотрим вот эту вершину К,
[01:25:29.060 --> 01:25:31.060]  самую большую вершину, помимо В
[01:25:31.060 --> 01:25:33.060]  на этом цикле.
[01:25:33.060 --> 01:25:35.060]  Тогда я утверждаю, что к катаитерации
[01:25:35.060 --> 01:25:37.060]  А от ВК
[01:25:37.060 --> 01:25:39.060]  будет не более, чем вот это,
[01:25:39.060 --> 01:25:41.060]  а от КВ будет не более, чем вот это.
[01:25:41.060 --> 01:25:43.060]  Логично, да?
[01:25:43.060 --> 01:25:45.060]  Ну там просто, честно, по индукции
[01:25:45.060 --> 01:25:47.060]  можно легко доказать.
[01:25:47.060 --> 01:25:49.060]  То есть просто, ну вот.
[01:25:49.060 --> 01:25:51.060]  Но тогда в итоге
[01:25:51.060 --> 01:25:53.060]  просто на катаитерации этот цикл
[01:25:53.060 --> 01:25:55.060]  включается и получится меньше нуля.
[01:25:55.060 --> 01:25:57.060]  Все.
[01:25:57.060 --> 01:25:59.060]  То есть, ну вот.
[01:25:59.060 --> 01:26:01.060]  То есть, конечно, вот.
[01:26:01.060 --> 01:26:03.060]  То есть, опять же, я не могу
[01:26:03.060 --> 01:26:05.060]  гарантировать, видимо, что
[01:26:05.060 --> 01:26:07.060]  если вершина лежит на каком-то цикле отрицательного
[01:26:07.060 --> 01:26:09.060]  веса, то обязательно
[01:26:09.060 --> 01:26:11.060]  она таким образом
[01:26:11.060 --> 01:26:13.060]  спалится.
[01:26:13.060 --> 01:26:15.060]  Ну там, как всегда, стандартные тесты в духе
[01:26:15.060 --> 01:26:17.060]  там, я не знаю, там 10-18.
[01:26:19.060 --> 01:26:21.060]  10-18.
[01:26:21.060 --> 01:26:23.060]  Ну вот, как так всегда, 1-1-3
[01:26:23.060 --> 01:26:25.060]  какой-нибудь, да?
[01:26:25.060 --> 01:26:27.060]  То есть, как бы да.
[01:26:27.060 --> 01:26:29.060]  То есть, есть подозрение, что
[01:26:29.060 --> 01:26:31.060]  А от ВВ в этом тесте ничего не грозит.
[01:26:33.060 --> 01:26:35.060]  То есть, конечно,
[01:26:35.060 --> 01:26:37.060]  набирать, то есть
[01:26:37.060 --> 01:26:39.060]  если есть цикл отрицательного веса, то конечно
[01:26:39.060 --> 01:26:41.060]  иногда бывает риск, что набирать обороты
[01:26:41.060 --> 01:26:43.060]  это будет быстро. Потому что у этого алгоритма
[01:26:43.060 --> 01:26:45.060]  есть подлость. Представьте себе, как
[01:26:45.060 --> 01:26:47.060]  он будет работать, если
[01:26:47.060 --> 01:26:49.060]  у вас изначально все ребра равны
[01:26:49.060 --> 01:26:51.060]  минус 1.
[01:26:53.060 --> 01:26:55.060]  Тогда заметим, что этот алгоритм вам
[01:26:55.060 --> 01:26:57.060]  обеспечит веселую жизнь а-ля
[01:26:57.060 --> 01:26:59.060]  переполнения.
[01:27:01.060 --> 01:27:03.060]  То есть, там на каждой итерации, там просто как минимум
[01:27:03.060 --> 01:27:05.060]  в два раза, на самом деле, пути будут залетать,
[01:27:05.060 --> 01:27:07.060]  а то и быстрее.
[01:27:09.060 --> 01:27:11.060]  Так что да.
[01:27:11.060 --> 01:27:13.060]  Так что придется делать что-то аккуратное там в духе.
[01:27:13.060 --> 01:27:15.060]  То есть, там придется добавлять какой-нибудь
[01:27:15.060 --> 01:27:17.060]  ипчик, что если тут оказалось меньше
[01:27:17.060 --> 01:27:19.060]  чему-нибудь приемлемого, значит
[01:27:19.060 --> 01:27:21.060]  пишем минус бесконечность.
[01:27:21.060 --> 01:27:23.060]  Ну и в релаксации тоже.
[01:27:23.060 --> 01:27:25.060]  Минус бесконечность плюс что-нибудь, значит равно
[01:27:25.060 --> 01:27:27.060]  минус бесконечность.
[01:27:27.060 --> 01:27:29.060]  Ну ладно, если что-нибудь не равно
[01:27:29.060 --> 01:27:31.060]  плюс бесконечности, конечно, да.
[01:27:31.060 --> 01:27:33.060]  Да, потому что
[01:27:33.060 --> 01:27:35.060]  плюс бесконечность равно
[01:27:37.060 --> 01:27:39.060]  да, ну
[01:27:39.060 --> 01:27:41.060]  в нашем случае, видимо, да.
[01:27:41.060 --> 01:27:43.060]  Хорошо.
[01:27:43.060 --> 01:27:45.060]  В нашем случае
[01:27:45.060 --> 01:27:47.060]  глобально, конечно,
[01:27:47.060 --> 01:27:49.060]  вопрос. Но, с другой стороны,
[01:27:49.060 --> 01:27:51.060]  тем не менее, если у нас вершина есть, то
[01:27:51.060 --> 01:27:53.060]  на самом деле
[01:27:53.060 --> 01:27:55.060]  идентифицировать минус бесконечность
[01:27:55.060 --> 01:27:57.060]  для любой пары вершин теперь достаточно просто.
[01:27:57.060 --> 01:27:59.060]  Потому что надо просто
[01:27:59.060 --> 01:28:01.060]  выяснить, можно ли дойти до вершины
[01:28:01.060 --> 01:28:03.060]  вот с таким свойством.
[01:28:03.060 --> 01:28:05.060]  А потом из этой вершины выйти еще и
[01:28:05.060 --> 01:28:07.060]  в другую вершину. Это можно прям
[01:28:07.060 --> 01:28:09.060]  ну просто едва ли не за
[01:28:09.060 --> 01:28:11.060]  линию для каждой пары вершин и делать,
[01:28:11.060 --> 01:28:13.060]  просто прибегаясь по этой диагонали.
[01:28:13.060 --> 01:28:15.060]  Тем более, есть ли вообще путь или нет,
[01:28:15.060 --> 01:28:17.060]  вам та же самая матрица
[01:28:17.060 --> 01:28:19.060]  А, в общем-то, уже и скажет, потому что там
[01:28:19.060 --> 01:28:21.060]  написано плюс бесконечность, значит пути нет.
[01:28:21.060 --> 01:28:23.060]  Если меньше плюс бесконечность, значит пути есть.
[01:28:23.060 --> 01:28:25.060]  Очень удобно.
[01:28:25.060 --> 01:28:27.060]  Так, ну вот.
[01:28:27.060 --> 01:28:29.060]  Отдельная, конечно, песня
[01:28:29.060 --> 01:28:31.060]  Отдельная, конечно,
[01:28:31.060 --> 01:28:33.060]  будет песня, называется
[01:28:33.060 --> 01:28:35.060]  «А восстановить, пожалуйста, собственно, сам путь».
[01:28:39.060 --> 01:28:41.060]  Ну, я не знаю там.
[01:28:41.060 --> 01:28:43.060]  Как всегда, можно опять, видимо,
[01:28:43.060 --> 01:28:45.060]  придумать простые решения, потом бесконечно
[01:28:45.060 --> 01:28:47.060]  долго доказывать, видимо, что они работают.
[01:28:47.060 --> 01:28:49.060]  Или, наоборот, неожиданно
[01:28:49.060 --> 01:28:51.060]  там добавить задачу 128-й тест,
[01:28:51.060 --> 01:28:53.060]  который это обвалит,
[01:28:53.060 --> 01:28:55.060]  потому что как бы жюри не пришло,
[01:28:55.060 --> 01:28:57.060]  не приходило в голову валить это решение, например.
[01:28:59.060 --> 01:29:01.060]  Но, с другой стороны,
[01:29:01.060 --> 01:29:03.060]  что тут еще
[01:29:03.060 --> 01:29:05.060]  можно делать?
[01:29:05.060 --> 01:29:07.060]  Ну, в принципе, заметим,
[01:29:07.060 --> 01:29:09.060]  что пути-то теоретически можно и DFS
[01:29:09.060 --> 01:29:11.060]  вот там, хотя вот
[01:29:11.060 --> 01:29:13.060]  интересно, можно восстановить цикл
[01:29:13.060 --> 01:29:15.060]  отрицательной стоимости DFS.
[01:29:17.060 --> 01:29:19.060]  Ну, допустим, задачу мы неожиданно выяснили,
[01:29:19.060 --> 01:29:21.060]  что А от ВВ оказалось меньше нуля.
[01:29:23.060 --> 01:29:25.060]  Спрашивается, а как бы этот цикл отрицательной
[01:29:25.060 --> 01:29:27.060]  стоимости восстановить?
[01:29:29.060 --> 01:29:31.060]  Ну,
[01:29:31.060 --> 01:29:33.060]  какое текущее расстояние?
[01:29:43.060 --> 01:29:45.060]  На каких?
[01:29:47.060 --> 01:29:49.060]  Ну, я боюсь, что даже
[01:29:49.060 --> 01:29:51.060]  если мы найдем цикл
[01:29:51.060 --> 01:29:53.060]  среди вот всех таких
[01:29:53.060 --> 01:29:55.060]  вершин,
[01:29:55.060 --> 01:29:57.060]  нет гарантии, что именно этот цикл
[01:29:57.060 --> 01:29:59.060]  будет отрицательного веса.
[01:30:03.060 --> 01:30:05.060]  Не все так просто в датском королевстве,
[01:30:05.060 --> 01:30:07.060]  к сожалению.
[01:30:17.060 --> 01:30:19.060]  Мы поддерживаем текущее расстояние до вершинки.
[01:30:31.060 --> 01:30:33.060]  И что? А как нам восстановить цикл
[01:30:33.060 --> 01:30:35.060]  хоть как-нибудь даже за куб?
[01:30:37.060 --> 01:30:39.060]  Вот как компьютер
[01:30:39.060 --> 01:30:41.060]  не понимает команды, сделай как-нибудь.
[01:30:41.060 --> 01:30:43.060]  Ну, или, по крайней мере,
[01:30:43.060 --> 01:30:45.060]  очень хорошо надо нейросетку обсуждать,
[01:30:45.060 --> 01:30:47.060]  как бы наверное обучать,
[01:30:47.060 --> 01:30:49.060]  чтобы она сделала как-нибудь
[01:30:49.060 --> 01:30:51.060]  что-то адекватное.
[01:31:05.060 --> 01:31:07.060]  Ну, тут проблема будет в том,
[01:31:07.060 --> 01:31:09.060]  что после того, как мы идентифицировали
[01:31:09.060 --> 01:31:11.060]  этот цикл, на самом деле вот этот путь мог
[01:31:11.060 --> 01:31:13.060]  обновиться еще на большую вершину.
[01:31:15.060 --> 01:31:17.060]  Поэтому как бы рекурсия пойдет
[01:31:17.060 --> 01:31:19.060]  в бесконечность, и причем
[01:31:19.060 --> 01:31:21.060]  тут, к сожалению, не та структура,
[01:31:21.060 --> 01:31:23.060]  чтобы у нас там находился какой-то путь и находился
[01:31:23.060 --> 01:31:25.060]  какой-то зацикл. То есть у нас в каждый момент
[01:31:25.060 --> 01:31:27.060]  времени будет находиться подпоследовательность
[01:31:27.060 --> 01:31:29.060]  вершин на этом пути, но как бы
[01:31:29.060 --> 01:31:31.060]  где там зацикл, непонятно.
[01:31:35.060 --> 01:31:37.060]  Так что такая она вот.
[01:31:37.060 --> 01:31:39.060]  Так что тут, конечно,
[01:31:39.060 --> 01:31:41.060]  самый надежный способ
[01:31:41.060 --> 01:31:43.060]  это, конечно, там
[01:31:43.060 --> 01:31:45.060]  какой способ
[01:31:45.060 --> 01:31:47.060]  вообще есть.
[01:31:47.060 --> 01:31:49.060]  Ну, как бы чисто теоретически
[01:31:49.060 --> 01:31:51.060]  можно было бы там, я не знаю, попытаться найти
[01:31:51.060 --> 01:31:53.060]  наверное, конечно, поймать вот этот
[01:31:53.060 --> 01:31:55.060]  момент, когда от ВВ меньше 0,
[01:31:55.060 --> 01:31:57.060]  и ровно в этот момент восстанавливать цикл.
[01:32:09.060 --> 01:32:11.060]  Да, ну минус бесконечность,
[01:32:11.060 --> 01:32:13.060]  что такое минус бесконечность? Нет, все пары
[01:32:13.060 --> 01:32:15.060]  вершины минус бесконечность
[01:32:15.060 --> 01:32:17.060]  мы поняли, это да.
[01:32:19.060 --> 01:32:21.060]  Но как бы если мы будем просто по ним
[01:32:21.060 --> 01:32:23.060]  ходить и находить циклы, это не означает, что эти циклы
[01:32:23.060 --> 01:32:25.060]  будут там
[01:32:25.060 --> 01:32:27.060]  отрицаем. Так что
[01:32:27.060 --> 01:32:29.060]  тут, конечно, подляночка.
[01:32:41.060 --> 01:32:43.060]  Но тогда,
[01:32:43.060 --> 01:32:45.060]  если мы первый момент времени
[01:32:45.060 --> 01:32:47.060]  такой найдем, то мы, конечно, мы найдем
[01:32:47.060 --> 01:32:49.060]  саму вершину, там цикл
[01:32:49.060 --> 01:32:51.060]  через саму вершину ВВ.
[01:32:51.060 --> 01:32:53.060]  Просто восстанавливая, аккуратно
[01:32:53.060 --> 01:32:55.060]  восстанавливая, там
[01:32:55.060 --> 01:32:57.060]  аккуратно допустим
[01:32:57.060 --> 01:32:59.060]  восстанавливая этот путь, хотя отдельная
[01:32:59.060 --> 01:33:01.060]  песня в этом случае не очень понятна,
[01:33:01.060 --> 01:33:03.060]  как бы, а как мы его восстановим.
[01:33:03.060 --> 01:33:05.060]  Хотя, да, до этого
[01:33:05.060 --> 01:33:07.060]  и то там надо сказать, давайте
[01:33:07.060 --> 01:33:09.060]  сохраним матрицу на момент К-1,
[01:33:09.060 --> 01:33:11.060]  там циклов отрицательного веса
[01:33:11.060 --> 01:33:13.060]  видимо без вершины К не было
[01:33:13.060 --> 01:33:15.060]  в принципе, наверное.
[01:33:15.060 --> 01:33:17.060]  Но вот поэтому
[01:33:17.060 --> 01:33:19.060]  типа там
[01:33:19.060 --> 01:33:21.060]  все пути восстанавливаются адекватно,
[01:33:21.060 --> 01:33:23.060]  поэтому тут мы это нашли.
[01:33:23.060 --> 01:33:25.060]  Но это мы найдем, только вот жила была вершина В,
[01:33:25.060 --> 01:33:27.060]  в чем не просто вершина В,
[01:33:27.060 --> 01:33:29.060]  а вершина В такая, что цикл отрицательного
[01:33:29.060 --> 01:33:31.060]  веса из вершины В проходит через
[01:33:31.060 --> 01:33:33.060]  вершины с минимальными номерами.
[01:33:33.060 --> 01:33:35.060]  Не всеми номерами,
[01:33:35.060 --> 01:33:37.060]  только это. Хорошо, да, это мы восстановили.
[01:33:37.060 --> 01:33:39.060]  Один цикл такой случайно.
[01:33:43.060 --> 01:33:45.060]  Но желательно все, да, хотя
[01:33:49.060 --> 01:33:51.060]  Нет, не все, но как всегда
[01:33:51.060 --> 01:33:53.060]  хочется, наверное, для каждой вершины
[01:33:53.060 --> 01:33:55.060]  ИЖ хочется восстановить цикл
[01:33:55.060 --> 01:33:57.060]  отрицательного веса, наверное, через который
[01:33:57.060 --> 01:33:59.060]  мог бы идти путь, а ты даже есть
[01:33:59.060 --> 01:34:01.060]  крештам минус бесконечно. Ну как всегда,
[01:34:01.060 --> 01:34:03.060]  в общем, там мы тоже это хотели. Нет, есть, конечно,
[01:34:03.060 --> 01:34:05.060]  наглый вариант. Найдем компоненты
[01:34:05.060 --> 01:34:07.060]  сильной связности.
[01:34:07.060 --> 01:34:09.060]  И в каждой компоненте сильной связности
[01:34:09.060 --> 01:34:11.060]  найдем хоть один цикл.
[01:34:13.060 --> 01:34:15.060]  После этого на самом деле для каждой вершины
[01:34:15.060 --> 01:34:17.060]  ИЖ можно просто находить компонент
[01:34:17.060 --> 01:34:19.060]  у связности, через которую
[01:34:19.060 --> 01:34:21.060]  плохую компоненту сильной связности
[01:34:21.060 --> 01:34:23.060]  через которую можно пройти.
[01:34:23.060 --> 01:34:25.060]  Это, я думаю, за какой-нибудь
[01:34:25.060 --> 01:34:27.060]  куб это точно делается.
[01:34:27.060 --> 01:34:29.060]  Логично, да?
[01:34:29.060 --> 01:34:31.060]  Хотя нам уже не важно,
[01:34:31.060 --> 01:34:33.060]  дело не в компоненте сильной связности,
[01:34:33.060 --> 01:34:35.060]  но в компоненте сильной связности находим цикл,
[01:34:35.060 --> 01:34:37.060]  там находим вершину,
[01:34:37.060 --> 01:34:39.060]  лежащую на нем, и в результате теперь
[01:34:39.060 --> 01:34:41.060]  для каждой пары ИЖ надо просто пробежаться
[01:34:41.060 --> 01:34:43.060]  по таким выделенным вершинам и сказать,
[01:34:43.060 --> 01:34:45.060]  а можем ли мы пройти через эту выделенную вершину?
[01:34:45.060 --> 01:34:47.060]  Да, да, нет, нет.
[01:34:51.060 --> 01:34:53.060]  Да, но если мы,
[01:34:53.060 --> 01:34:55.060]  внутри каждой из них мы можем запустить независимого
[01:34:55.060 --> 01:34:57.060]  флойда и найти хотя бы один цикл.
[01:34:59.060 --> 01:35:01.060]  В этом смысл. Но если мы там найдем,
[01:35:01.060 --> 01:35:03.060]  то как бы там внутри себя мы уж как-нибудь дойдем
[01:35:03.060 --> 01:35:05.060]  везде до чего угодно.
[01:35:05.060 --> 01:35:07.060]  Так что, в принципе, вот обнаглеть
[01:35:07.060 --> 01:35:09.060]  можно таким образом.
[01:35:09.060 --> 01:35:11.060]  Вот, да, это конечно
[01:35:11.060 --> 01:35:13.060]  реально обнаглеть, но чтобы, хотя,
[01:35:13.060 --> 01:35:15.060]  хотя тут можно вообще подумать,
[01:35:15.060 --> 01:35:17.060]  а исходный флойд, собственно,
[01:35:17.060 --> 01:35:19.060]  ровно это не сделает случайно.
[01:35:23.060 --> 01:35:25.060]  Но, кстати, сделает,
[01:35:25.060 --> 01:35:27.060]  потому что компоненты сильной связности обладают
[01:35:27.060 --> 01:35:29.060]  приятным свойством. Если вы из нее вышли,
[01:35:29.060 --> 01:35:31.060]  то вы в нее уже не войдете.
[01:35:31.060 --> 01:35:33.060]  Логично, да?
[01:35:33.060 --> 01:35:35.060]  Поэтому, на самом деле, да,
[01:35:35.060 --> 01:35:37.060]  нот.
[01:35:37.060 --> 01:35:39.060]  Поэтому, да, нот.
[01:35:39.060 --> 01:35:41.060]  Нет, поэтому, поэтому что?
[01:35:41.060 --> 01:35:43.060]  То есть, конечно, все равно там могут быть проблемные
[01:35:43.060 --> 01:35:45.060]  вершины, так что лучше для надежности там.
[01:35:49.060 --> 01:35:51.060]  Сильный.
[01:35:51.060 --> 01:35:53.060]  Ну, да, да, да,
[01:35:53.060 --> 01:35:55.060]  что-нибудь такое.
[01:35:55.060 --> 01:35:57.060]  Да, при чем-то прида, приятное, да,
[01:35:57.060 --> 01:35:59.060]  в чем действительно, заметьте, приятная добивка
[01:35:59.060 --> 01:36:01.060]  заключается в том, что
[01:36:03.060 --> 01:36:05.060]  сейчас в чем это заключается?
[01:36:07.060 --> 01:36:09.060]  Нет, ладно, насколько нам да, приятная добивка
[01:36:09.060 --> 01:36:11.060]  заключается в том, что компоненты сильной связности
[01:36:11.060 --> 01:36:13.060]  можно умными алгоритмами не искать, кстати.
[01:36:15.060 --> 01:36:17.060]  Ну, вообще, да.
[01:36:17.060 --> 01:36:19.060]  В общем, можно того же Флойда написать.
[01:36:19.060 --> 01:36:21.060]  Ну или там, да.
[01:36:21.060 --> 01:36:23.060]  Так, ну окей, ладно.
[01:36:27.060 --> 01:36:29.060]  Нашли уже пути,
[01:36:29.060 --> 01:36:31.060]  циклы,
[01:36:31.060 --> 01:36:33.060]  нашли существование
[01:36:33.060 --> 01:36:35.060]  цельных циклов через машины
[01:36:35.060 --> 01:36:37.060]  В и У, в том смысле, что
[01:36:37.060 --> 01:36:39.060]  А, ВВ меньше ныря, А, У меньше ныря,
[01:36:39.060 --> 01:36:41.060]  то они лежат в одной коэффициенте,
[01:36:41.060 --> 01:36:43.060]  то они лежат в одной коэффициенте,
[01:36:43.060 --> 01:36:45.060]  то они лежат в одной коэффициенте,
[01:36:45.060 --> 01:36:47.060]  то они лежат в одной коэффициенте,
[01:36:47.060 --> 01:36:49.060]  то они лежат в одной коэффициенте,
[01:36:49.060 --> 01:36:51.060]  А, ВУ и А, УВ оба уже меньше ныря.
[01:36:51.060 --> 01:36:53.060]  То есть в какой-то момент мы уже начитали
[01:36:53.060 --> 01:36:55.060]  Нет, в смысле.
[01:36:55.060 --> 01:36:57.060]  Мы уже знаем, что есть пути.
[01:36:57.060 --> 01:36:59.060]  Сейчас не понял.
[01:37:01.060 --> 01:37:03.060]  Просто если...
[01:37:03.060 --> 01:37:05.060]  Нет, ну верно, просто утверждение.
[01:37:05.060 --> 01:37:07.060]  В момент, когда найдем оба всем по одному циклу
[01:37:09.060 --> 01:37:11.060]  в соответствующей длине, правда, что мы уже...
[01:37:11.060 --> 01:37:13.060]  Не факт,
[01:37:13.060 --> 01:37:15.060]  что может быть конкретно эти пути
[01:37:15.060 --> 01:37:17.060]  проходят через там большие вершины,
[01:37:17.060 --> 01:37:19.060]  чем те, чем те, которые лежат
[01:37:19.060 --> 01:37:21.060]  в этой цикле.
[01:37:21.060 --> 01:37:23.060]  А, ну это да.
[01:37:25.060 --> 01:37:27.060]  Можно чуть-чуть назад и начаться
[01:37:27.060 --> 01:37:29.060]  в восстановлении поговорить.
[01:37:29.060 --> 01:37:31.060]  Если мы хотим найти путь,
[01:37:33.060 --> 01:37:35.060]  в котором содержит цикл отрицательной диней,
[01:37:35.060 --> 01:37:37.060]  да,
[01:37:37.060 --> 01:37:39.060]  то мы смотрим на компоненты,
[01:37:39.060 --> 01:37:41.060]  через которые этот путь должен проходить.
[01:37:41.060 --> 01:37:43.060]  Да.
[01:37:43.060 --> 01:37:45.060]  Но мы же можем сконденсировать их
[01:37:45.060 --> 01:37:47.060]  в одной вершины,
[01:37:47.060 --> 01:37:49.060]  посмотреть на индуцированном крапе этот путь.
[01:37:49.060 --> 01:37:51.060]  А потом в каждой компоненте
[01:37:51.060 --> 01:37:53.060]  смотрим, есть ли внутри нее
[01:37:53.060 --> 01:37:55.060]  цикл отрицательного веса.
[01:37:55.060 --> 01:37:57.060]  И если мы говорим,
[01:37:57.060 --> 01:37:59.060]  что вот на этом пути найдем какую-нибудь компонент,
[01:37:59.060 --> 01:38:01.060]  у нее есть цикл отрицательной дины,
[01:38:01.060 --> 01:38:03.060]  значит потом куда идет?
[01:38:03.060 --> 01:38:05.060]  Нет, у нас вопрос был только в том,
[01:38:05.060 --> 01:38:07.060]  как технически проще эти циклы потом восстановить,
[01:38:07.060 --> 01:38:09.060]  если что, в каждой компоненте.
[01:38:09.060 --> 01:38:11.060]  Поэтому я считаю, хочется не запускать флойды
[01:38:11.060 --> 01:38:13.060]  для отдельной каждой компоненты.
[01:38:13.060 --> 01:38:15.060]  Ну, типа да.
[01:38:15.060 --> 01:38:17.060]  Да, то есть самый тупой, да,
[01:38:17.060 --> 01:38:19.060]  хотя у нас получился самый тупой способ восстановления,
[01:38:19.060 --> 01:38:21.060]  это типа, если нашлась вершина А
[01:38:21.060 --> 01:38:23.060]  от ВВМХ0, давайте приближимся
[01:38:23.060 --> 01:38:25.060]  по ее компоненте сильной связности и запомним,
[01:38:25.060 --> 01:38:27.060]  что вот для этих вершин цикл восстанавливать не надо.
[01:38:27.060 --> 01:38:29.060]  Ну, например.
[01:38:31.060 --> 01:38:33.060]  А дальше потом все пути от любой вершины
[01:38:33.060 --> 01:38:35.060]  до любой вершины в этом,
[01:38:35.060 --> 01:38:37.060]  если нам задача найти хоть какой-нибудь путь,
[01:38:37.060 --> 01:38:39.060]  то запускаем ДФС.
[01:38:39.060 --> 01:38:41.060]  Хотя самое смешное, кстати,
[01:38:41.060 --> 01:38:43.060]  что вообще, если вы запустите,
[01:38:43.060 --> 01:38:45.060]  что, кстати, если у вас задача найти кратчайший путь,
[01:38:45.060 --> 01:38:47.060]  а ты даже и вы знаете, что он существует,
[01:38:47.060 --> 01:38:49.060]  то самое смешное, что вы ДФСом
[01:38:49.060 --> 01:38:51.060]  можете этот путь найти.
[01:38:51.060 --> 01:38:53.060]  Просто ДФС надо запускать
[01:38:53.060 --> 01:38:55.060]  не по всем вершинам,
[01:38:55.060 --> 01:38:57.060]  берет не по всем ребрам,
[01:38:57.060 --> 01:38:59.060]  а только по тем ребрам, чтобы там,
[01:38:59.060 --> 01:39:01.060]  то есть по каким-то таким ребрам УВ,
[01:39:01.060 --> 01:39:03.060]  что там А
[01:39:03.060 --> 01:39:05.060]  от ИУ,
[01:39:05.060 --> 01:39:07.060]  там плюс вес ребра
[01:39:07.060 --> 01:39:09.060]  от УВ
[01:39:09.060 --> 01:39:11.060]  было равно А
[01:39:11.060 --> 01:39:13.060]  от ИВ.
[01:39:15.060 --> 01:39:17.060]  Поэтому я говорю ДФС.
[01:39:19.060 --> 01:39:21.060]  То есть расстояние найденной кроки,
[01:39:21.060 --> 01:39:23.060]  поэтому какой-то путь вы находите.
[01:39:23.060 --> 01:39:25.060]  Поэтому мы буквально ДФС запускаем.
[01:39:25.060 --> 01:39:27.060]  Так-то да, по нулевым ребрам мы, конечно,
[01:39:27.060 --> 01:39:29.060]  можем бегать, поэтому мы делаем это
[01:39:29.060 --> 01:39:31.060]  не жадно, а именно ДФСом.
[01:39:31.060 --> 01:39:33.060]  Это да.
[01:39:33.060 --> 01:39:35.060]  Можно сделать так,
[01:39:35.060 --> 01:39:37.060]  если вам не нравится вот эта
[01:39:37.060 --> 01:39:39.060]  мерзкая рекурсия какая-то,
[01:39:39.060 --> 01:39:41.060]  если она для вас мерзкая,
[01:39:41.060 --> 01:39:43.060]  по какой-то причине, я не знаю.
[01:39:45.060 --> 01:39:47.060]  Получается такой красивый флойд,
[01:39:47.060 --> 01:39:49.060]  который вот так
[01:39:49.060 --> 01:39:51.060]  работает за куб.
[01:39:53.060 --> 01:39:55.060]  Но как-то не странно,
[01:39:55.060 --> 01:39:57.060]  это еще не все.
[01:39:57.060 --> 01:39:59.060]  Так, но однако
[01:39:59.060 --> 01:40:01.060]  ой-ой-ой-ой.
[01:40:01.060 --> 01:40:03.060]  Да, однако,
[01:40:03.060 --> 01:40:05.060]  что уже давно пришло время перерыва.
[01:40:05.060 --> 01:40:07.060]  Вот.
[01:40:07.060 --> 01:40:09.060]  Но на самом деле попробуем сейчас решить еще одну
[01:40:09.060 --> 01:40:11.060]  веселую задачу.
[01:40:11.060 --> 01:40:13.060]  Значит, нам все еще хочется найти
[01:40:13.060 --> 01:40:15.060]  кратчайший путь от УВ
[01:40:15.060 --> 01:40:17.060]  между всеми парами вершин.
[01:40:17.060 --> 01:40:19.060]  Но мы попробуем с вами
[01:40:19.060 --> 01:40:21.060]  это сделать все-таки в предположении, когда циклов
[01:40:21.060 --> 01:40:23.060]  отрицательного веса нет.
[01:40:23.060 --> 01:40:25.060]  Вот.
[01:40:25.060 --> 01:40:27.060]  Казалось бы, чем это будет отличаться
[01:40:27.060 --> 01:40:29.060]  от обычного флойда?
[01:40:29.060 --> 01:40:31.060]  Чем мы его можем перекупить?
[01:40:31.060 --> 01:40:33.060]  Ну кое-чем можем.
[01:40:33.060 --> 01:40:35.060]  Дело в том,
[01:40:35.060 --> 01:40:37.060]  что у нас есть голубая мечта.
[01:40:37.060 --> 01:40:39.060]  Нет,
[01:40:39.060 --> 01:40:41.060]  голубой мечты у нас нет.
[01:40:41.060 --> 01:40:43.060]  У нас есть немножко другое.
[01:40:43.060 --> 01:40:45.060]  То есть мы помним, что если мы хотим искать кратчайшие пути,
[01:40:45.060 --> 01:40:47.060]  то у нас есть алгоритм D extra.
[01:40:47.060 --> 01:40:49.060]  Ну как за какое время у нас работает?
[01:40:49.060 --> 01:40:51.060]  D extra.
[01:40:51.060 --> 01:40:53.060]  Какая у нас лучшая асимптотика D extra?
[01:41:05.060 --> 01:41:07.060]  У нас была E plus V log V,
[01:41:07.060 --> 01:41:09.060]  потому что у нас есть наша любимая куча фибоначи.
[01:41:11.060 --> 01:41:13.060]  Вот.
[01:41:13.060 --> 01:41:15.060]  Поэтому есть такая D extra.
[01:41:15.060 --> 01:41:17.060]  И в принципе, если это
[01:41:17.060 --> 01:41:19.060]  замножить на V,
[01:41:19.060 --> 01:41:21.060]  то у нас уже есть асимптотика круче куба.
[01:41:21.060 --> 01:41:23.060]  Особенно с учетом того,
[01:41:23.060 --> 01:41:25.060]  что у нас особо нет кратных ребер.
[01:41:25.060 --> 01:41:27.060]  Ну а маленькая проблема.
[01:41:27.060 --> 01:41:29.060]  Работает, к сожалению, алгоритм D extra.
[01:41:29.060 --> 01:41:31.060]  Когда?
[01:41:31.060 --> 01:41:33.060]  Но только для не отрицательных ребер.
[01:41:35.060 --> 01:41:37.060]  А у нас отрицательные ребра есть.
[01:41:37.060 --> 01:41:39.060]  Ну вот.
[01:41:39.060 --> 01:41:41.060]  Но есть неожиданный лайфхак.
[01:41:41.060 --> 01:41:43.060]  Называется потанцеваль.
[01:41:45.060 --> 01:41:47.060]  Вот.
[01:41:47.060 --> 01:41:49.060]  Возможно, имел бы смысл назвать его
[01:41:49.060 --> 01:41:51.060]  именно потанцеваль,
[01:41:51.060 --> 01:41:53.060]  потому что официальное название, конечно,
[01:41:53.060 --> 01:41:55.060]  потенциал, но у нас под словом потенциал
[01:41:55.060 --> 01:41:57.060]  подразумевается немножко другое.
[01:41:57.060 --> 01:41:59.060]  Но, пожалуй,
[01:41:59.060 --> 01:42:01.060]  не будем мы все-таки этого делать.
[01:42:01.060 --> 01:42:03.060]  И так.
[01:42:03.060 --> 01:42:05.060]  Идея неожиданно такая.
[01:42:05.060 --> 01:42:07.060]  Введем потанцеваль.
[01:42:07.060 --> 01:42:09.060]  Что такое потанцеваль?
[01:42:09.060 --> 01:42:11.060]  Вот.
[01:42:11.060 --> 01:42:13.060]  Ну никогда там, в смысле, вы там сходили на дискотеку, естественно.
[01:42:13.060 --> 01:42:15.060]  Вот.
[01:42:15.060 --> 01:42:17.060]  А потанцеваль
[01:42:17.060 --> 01:42:19.060]  это просто какая-то
[01:42:19.060 --> 01:42:21.060]  функция,
[01:42:23.060 --> 01:42:25.060]  которая просто...
[01:42:25.060 --> 01:42:27.060]  Короче, на каждой вершине нарисовали какое-то рыжее число.
[01:42:29.060 --> 01:42:31.060]  Да, просто на этот раз
[01:42:31.060 --> 01:42:33.060]  никаких ограничений нет.
[01:42:33.060 --> 01:42:35.060]  То есть потанцеваль может быть любым.
[01:42:35.060 --> 01:42:37.060]  Вот.
[01:42:37.060 --> 01:42:39.060]  И мы неожиданно
[01:42:39.060 --> 01:42:41.060]  заявляем, что
[01:42:41.060 --> 01:42:43.060]  вес ребра... Вот, допустим, у нас есть ребро
[01:42:43.060 --> 01:42:45.060]  УВ
[01:42:45.060 --> 01:42:47.060]  и его вес.
[01:42:47.060 --> 01:42:49.060]  ВУВ.
[01:42:49.060 --> 01:42:51.060]  Вес В.
[01:42:51.060 --> 01:42:53.060]  Вот.
[01:42:53.060 --> 01:42:55.060]  То есть такой ВУВ.
[01:42:55.060 --> 01:42:57.060]  Так вот.
[01:42:57.060 --> 01:42:59.060]  По нему
[01:42:59.060 --> 01:43:01.060]  мы вводим такое понятие,
[01:43:01.060 --> 01:43:03.060]  как приведенная
[01:43:03.060 --> 01:43:05.060]  стоимость.
[01:43:07.060 --> 01:43:09.060]  Приведенная
[01:43:09.060 --> 01:43:11.060]  стоимость.
[01:43:13.060 --> 01:43:15.060]  Значит
[01:43:15.060 --> 01:43:17.060]  W
[01:43:17.060 --> 01:43:19.060]  с индексом P
[01:43:19.060 --> 01:43:21.060]  от УВ.
[01:43:21.060 --> 01:43:23.060]  Пусть будет равно
[01:43:23.060 --> 01:43:25.060]  W от УВ.
[01:43:25.060 --> 01:43:27.060]  Только плюс P
[01:43:27.060 --> 01:43:29.060]  от У и минус
[01:43:29.060 --> 01:43:31.060]  P от В.
[01:43:31.060 --> 01:43:33.060]  Вот такое определение.
[01:43:33.060 --> 01:43:35.060]  Я ввожу... Это называется
[01:43:35.060 --> 01:43:37.060]  приведенная стоимость ребра относительно
[01:43:37.060 --> 01:43:39.060]  потанцевали.
[01:43:39.060 --> 01:43:41.060]  Зачем
[01:43:41.060 --> 01:43:43.060]  оно надо?
[01:43:45.060 --> 01:43:47.060]  Но штука оказывается
[01:43:47.060 --> 01:43:49.060]  очень приятной.
[01:43:49.060 --> 01:43:51.060]  Смотрите.
[01:43:51.060 --> 01:43:53.060]  Основное свойство такое,
[01:43:53.060 --> 01:43:55.060]  что если мы рассматриваем какой-нибудь путь
[01:43:55.060 --> 01:43:57.060]  от какой-нибудь там вершины С
[01:43:57.060 --> 01:43:59.060]  до какой-нибудь вершины Т,
[01:43:59.060 --> 01:44:01.060]  и там
[01:44:01.060 --> 01:44:03.060]  в процессе это типа там В0,
[01:44:03.060 --> 01:44:05.060]  В1, В2, там
[01:44:05.060 --> 01:44:07.060]  и так далее, ВК
[01:44:07.060 --> 01:44:09.060]  равно Т, допустим.
[01:44:09.060 --> 01:44:11.060]  И тут у нас веса какие-нибудь В0,
[01:44:11.060 --> 01:44:13.060]  В1, там
[01:44:13.060 --> 01:44:15.060]  В2 и так далее, ВК-1.
[01:44:15.060 --> 01:44:17.060]  То какова
[01:44:17.060 --> 01:44:19.060]  длина этого пути?
[01:44:19.060 --> 01:44:21.060]  Длина в смысле веса, она
[01:44:21.060 --> 01:44:23.060]  сумма weight.
[01:44:23.060 --> 01:44:25.060]  Но если мы хотим
[01:44:25.060 --> 01:44:27.060]  рассмотреть приведенные
[01:44:27.060 --> 01:44:29.060]  стоимости,
[01:44:29.060 --> 01:44:31.060]  то что получается?
[01:44:31.060 --> 01:44:33.060]  То получается, давайте честно
[01:44:33.060 --> 01:44:35.060]  распишем, В0
[01:44:35.060 --> 01:44:37.060]  плюс П от В0
[01:44:37.060 --> 01:44:39.060]  минус П от В1.
[01:44:39.060 --> 01:44:41.060]  Плюс
[01:44:41.060 --> 01:44:43.060]  В1 плюс
[01:44:43.060 --> 01:44:45.060]  П от В2
[01:44:45.060 --> 01:44:47.060]  минус П от В1.
[01:44:47.060 --> 01:44:49.060]  Плюс
[01:44:49.060 --> 01:44:51.060]  W2
[01:44:51.060 --> 01:44:53.060]  плюс там
[01:44:53.060 --> 01:44:55.060]  П от В3 минус П от В2.
[01:44:55.060 --> 01:44:57.060]  Плюс
[01:44:57.060 --> 01:44:59.060]  и так далее.
[01:45:01.060 --> 01:45:03.060]  Ну и плюс там
[01:45:03.060 --> 01:45:05.060]  WK-1
[01:45:05.060 --> 01:45:07.060]  плюс П от
[01:45:07.060 --> 01:45:09.060]  ВК
[01:45:09.060 --> 01:45:11.060]  минус П от ВК-1.
[01:45:15.060 --> 01:45:17.060]  Ну, как вы можете заметить,
[01:45:17.060 --> 01:45:19.060]  у нас здесь начинается массовый
[01:45:19.060 --> 01:45:21.060]  шлёп-шлёп.
[01:45:27.060 --> 01:45:29.060]  Что я написал-то вообще?
[01:45:29.060 --> 01:45:31.060]  Во-первых, это тройбан, во-вторых, тут
[01:45:31.060 --> 01:45:33.060]  В1 минус
[01:45:33.060 --> 01:45:35.060]  В2, а тут
[01:45:35.060 --> 01:45:37.060]  В2 минус В3.
[01:45:37.060 --> 01:45:39.060]  А тут К-1
[01:45:39.060 --> 01:45:41.060]  и ВК.
[01:45:41.060 --> 01:45:43.060]  Ну, согласно этому определению
[01:45:43.060 --> 01:45:45.060]  логично. То есть плюс в начале,
[01:45:45.060 --> 01:45:47.060]  минус в конце. Это важно.
[01:45:47.060 --> 01:45:49.060]  Запомните очень легко, чуть позже увидите,
[01:45:49.060 --> 01:45:51.060]  почему.
[01:45:51.060 --> 01:45:53.060]  Ну да, тут начинается массовый
[01:45:53.060 --> 01:45:55.060]  шлёп-шлёп.
[01:45:55.060 --> 01:45:57.060]  Потому что вот тут шлёп-шлёп,
[01:45:57.060 --> 01:45:59.060]  вот тут там шлёп-шлёп.
[01:45:59.060 --> 01:46:01.060]  И
[01:46:01.060 --> 01:46:03.060]  какой-то вот, что-то ещё.
[01:46:03.060 --> 01:46:05.060]  И вот тут.
[01:46:05.060 --> 01:46:07.060]  Получится, что получится?
[01:46:11.060 --> 01:46:13.060]  Получится маленькая приятная вещь.
[01:46:15.060 --> 01:46:17.060]  То есть получится просто та же самая сумма.
[01:46:21.060 --> 01:46:23.060]  Только
[01:46:23.060 --> 01:46:25.060]  плюс
[01:46:25.060 --> 01:46:27.060]  чего?
[01:46:27.060 --> 01:46:29.060]  Плюс начало, минус конец.
[01:46:29.060 --> 01:46:31.060]  То есть идея заключается
[01:46:31.060 --> 01:46:33.060]  в чём?
[01:46:33.060 --> 01:46:35.060]  Получается следующее, что
[01:46:35.060 --> 01:46:37.060]  от того, что мы ввели приведённые стоимости,
[01:46:37.060 --> 01:46:39.060]  просто все пути между
[01:46:39.060 --> 01:46:41.060]  одной и той же парой вершин
[01:46:41.060 --> 01:46:43.060]  изменились
[01:46:43.060 --> 01:46:45.060]  на одну и ту же константу.
[01:46:45.060 --> 01:46:47.060]  В чём константа зависит только
[01:46:47.060 --> 01:46:49.060]  от начала и конца пути.
[01:46:49.060 --> 01:46:51.060]  То есть это означает, что кратчайшие
[01:46:51.060 --> 01:46:53.060]  пути, структура самих кратчайших
[01:46:53.060 --> 01:46:55.060]  путей не поменялась.
[01:46:55.060 --> 01:46:57.060]  То есть получается, если я введу потенцивал
[01:46:57.060 --> 01:46:59.060]  и найду относительно него кратчайшие
[01:46:59.060 --> 01:47:01.060]  пути, то у меня
[01:47:01.060 --> 01:47:03.060]  ничего не поменяется.
[01:47:05.060 --> 01:47:07.060]  Да, кстати, да. Ещё
[01:47:07.060 --> 01:47:09.060]  спасибо. В качестве дополнительного
[01:47:09.060 --> 01:47:11.060]  свойства ещё то, что веса циклов не
[01:47:11.060 --> 01:47:13.060]  поменялись от слова никак.
[01:47:15.060 --> 01:47:17.060]  То есть, к сожалению,
[01:47:17.060 --> 01:47:19.060]  введение потенциала
[01:47:19.060 --> 01:47:21.060]  не спасёт нас от циклов
[01:47:21.060 --> 01:47:23.060]  отрицательной стоимости, если они есть.
[01:47:25.060 --> 01:47:27.060]  Если их нет у циклов отрицательного веса,
[01:47:27.060 --> 01:47:29.060]  то потенциалы нам могут
[01:47:29.060 --> 01:47:31.060]  ой, как сильно помочь.
[01:47:31.060 --> 01:47:33.060]  Помогут нам они
[01:47:33.060 --> 01:47:35.060]  следующим образом.
[01:47:37.060 --> 01:47:39.060]  Ну вот, так. Ну, во-первых, определение.
[01:47:41.060 --> 01:47:43.060]  Значит, определение.
[01:47:43.060 --> 01:47:45.060]  Потенциал P
[01:47:47.060 --> 01:47:49.060]  не отрицателен
[01:47:55.060 --> 01:47:57.060]  если
[01:47:59.060 --> 01:48:01.060]  для любых
[01:48:01.060 --> 01:48:03.060]  УВ окажется
[01:48:03.060 --> 01:48:05.060]  В с индексом P от УВ
[01:48:07.060 --> 01:48:09.060]  больше либо равно 0.
[01:48:11.060 --> 01:48:13.060]  Да ладно, я тут, конечно, написал, как будто
[01:48:13.060 --> 01:48:15.060]  все гобры существуют.
[01:48:17.060 --> 01:48:19.060]  Ну вот. Ладно.
[01:48:19.060 --> 01:48:21.060]  Вот так правильно
[01:48:21.060 --> 01:48:23.060]  тогда написали.
[01:48:25.060 --> 01:48:27.060]  Вот. И получается кайф.
[01:48:29.060 --> 01:48:31.060]  Ну, по крайней мере, точнее кайф, который бы нам хотелось.
[01:48:31.060 --> 01:48:33.060]  Потому что заметим, что
[01:48:33.060 --> 01:48:35.060]  если мы случайно каким-то
[01:48:35.060 --> 01:48:37.060]  мистическим образом найдём
[01:48:37.060 --> 01:48:39.060]  неотрицательный потенциал,
[01:48:39.060 --> 01:48:41.060]  то тогда VDX
[01:48:41.060 --> 01:48:43.060]  нас приветствует.
[01:48:45.060 --> 01:48:47.060]  Вот.
[01:48:47.060 --> 01:48:49.060]  Вот.
[01:48:49.060 --> 01:48:51.060]  Вот.
[01:48:51.060 --> 01:48:53.060]  Но как же его найти?
[01:48:53.060 --> 01:48:55.060]  Хотя математически возникает вопрос,
[01:48:55.060 --> 01:48:57.060]  а существует ли он?
[01:49:01.060 --> 01:49:03.060]  Но как?
[01:49:05.060 --> 01:49:07.060]  Решим систему уравнений?
[01:49:07.060 --> 01:49:09.060]  Не равен? Симплярс метод запустим?
[01:49:11.060 --> 01:49:13.060]  Да.
[01:49:13.060 --> 01:49:15.060]  Ну,
[01:49:15.060 --> 01:49:17.060]  когда-то бывает неплохая.
[01:49:17.060 --> 01:49:19.060]  Есть мистическая теория, хотя бы математически
[01:49:19.060 --> 01:49:21.060]  существует ли он. Но теория
[01:49:21.060 --> 01:49:23.060]  говорит о том, что
[01:49:23.060 --> 01:49:25.060]  в графе нет циклов отрицательного веса,
[01:49:25.060 --> 01:49:27.060]  тогда и только тогда, когда этот потенциал
[01:49:27.060 --> 01:49:29.060]  существует.
[01:49:39.060 --> 01:49:41.060]  Вот.
[01:49:41.060 --> 01:49:43.060]  Ну да.
[01:49:45.060 --> 01:49:47.060]  Вот.
[01:49:53.060 --> 01:49:55.060]  Значит, и более
[01:49:55.060 --> 01:49:57.060]  того,
[01:49:57.060 --> 01:49:59.060]  оказывается, что
[01:49:59.060 --> 01:50:01.060]  действительно этот потенциал достаточно несложно найти.
[01:50:03.060 --> 01:50:05.060]  Как же его
[01:50:05.060 --> 01:50:07.060]  найти? То есть идея
[01:50:07.060 --> 01:50:09.060]  очень простая.
[01:50:09.060 --> 01:50:11.060]  Надо сказать, что у вас
[01:50:11.060 --> 01:50:13.060]  P от V
[01:50:13.060 --> 01:50:15.060]  будет просто расстояние
[01:50:15.060 --> 01:50:17.060]  от вершины S
[01:50:17.060 --> 01:50:19.060]  до вершины V.
[01:50:21.060 --> 01:50:23.060]  Где вершина S фиксирована.
[01:50:23.060 --> 01:50:25.060]  То есть алгоритм
[01:50:25.060 --> 01:50:27.060]  получается простой. Один раз
[01:50:27.060 --> 01:50:29.060]  запустим Форда Белмана,
[01:50:31.060 --> 01:50:33.060]  а после этого из всех вершин начинаем
[01:50:33.060 --> 01:50:35.060]  запускать DX.
[01:50:35.060 --> 01:50:37.060]  А симпатически мы ничего не потеряли.
[01:50:39.060 --> 01:50:41.060]  Первая попавшаяся
[01:50:41.060 --> 01:50:43.060]  вершина.
[01:50:45.060 --> 01:50:47.060]  Вот. Причем действительно
[01:50:47.060 --> 01:50:49.060]  я утверждаю, что относительно этого
[01:50:49.060 --> 01:50:51.060]  действительно оказывается, что
[01:50:51.060 --> 01:50:53.060]  действительно потенциал не отрицательный.
[01:50:53.060 --> 01:50:55.060]  Вот сейчас проявится, почему мы
[01:50:55.060 --> 01:50:57.060]  прибавляли начало, вы читали конец.
[01:50:57.060 --> 01:50:59.060]  Потому что рассмотрим какой-нибудь ребро
[01:50:59.060 --> 01:51:01.060]  у V с весом W.
[01:51:03.060 --> 01:51:05.060]  И так, то есть приведенная
[01:51:05.060 --> 01:51:07.060]  стоимость этого ребра получается должна быть
[01:51:07.060 --> 01:51:09.060]  равна P
[01:51:09.060 --> 01:51:11.060]  Q плюс V минус P от V.
[01:51:13.060 --> 01:51:15.060]  Спрашивается, почему это больше
[01:51:15.060 --> 01:51:17.060]  либо равно 0?
[01:51:17.060 --> 01:51:19.060]  При вот таком потенциале.
[01:51:21.060 --> 01:51:23.060]  Ну то есть или что то же самое.
[01:51:23.060 --> 01:51:25.060]  Почему DIST от
[01:51:25.060 --> 01:51:27.060]  SU
[01:51:27.060 --> 01:51:29.060]  плюс W оказывается больше
[01:51:29.060 --> 01:51:31.060]  либо равен, чем DIST от
[01:51:31.060 --> 01:51:33.060]  SW?
[01:51:33.060 --> 01:51:35.060]  Но не совсем.
[01:51:35.060 --> 01:51:37.060]  Еще какие-то
[01:51:37.060 --> 01:51:39.060]  пару слов бы добавить.
[01:51:45.060 --> 01:51:47.060]  Ну какая монотонность у нас отрицательная ребро есть?
[01:51:47.060 --> 01:51:49.060]  Ну да.
[01:51:59.060 --> 01:52:01.060]  Ну по сути да,
[01:52:01.060 --> 01:52:03.060]  по определению,
[01:52:03.060 --> 01:52:05.060]  только по определению даже не столько DIST,
[01:52:05.060 --> 01:52:07.060]  сколько слова кратчайший.
[01:52:07.060 --> 01:52:09.060]  Что значит кратчайший
[01:52:09.060 --> 01:52:11.060]  или минимальный?
[01:52:11.060 --> 01:52:13.060]  То есть DIST от SW это длина кратчайшего
[01:52:13.060 --> 01:52:15.060]  пути от SW.
[01:52:15.060 --> 01:52:17.060]  Стоит только добавить, что
[01:52:17.060 --> 01:52:19.060]  DIST от SU плюс W это длина
[01:52:19.060 --> 01:52:21.060]  какого-то пути
[01:52:21.060 --> 01:52:23.060]  W.
[01:52:23.060 --> 01:52:25.060]  Но длина какого-то пути W больше
[01:52:25.060 --> 01:52:27.060]  либо равна, чем длина кратчайшего пути W
[01:52:27.060 --> 01:52:29.060]  по определению слова кратчайший.
[01:52:29.060 --> 01:52:31.060]  Кратчайший.
[01:52:43.060 --> 01:52:45.060]  Ошибку конечно в нем придется найти.
[01:52:49.060 --> 01:52:51.060]  Но в принципе казалось бы да,
[01:52:51.060 --> 01:52:53.060]  берем вершину S, находим вот эти расстояния
[01:52:53.060 --> 01:52:55.060]  и говорим, что вот все потенциал найден.
[01:52:55.060 --> 01:52:57.060]  Где мы воспользовались тем, что
[01:52:57.060 --> 01:52:59.060]  этоpling.
[01:52:59.060 --> 01:53:01.060]  Обратно доказывается легко.
[01:53:01.060 --> 01:53:03.060]  Если есть потенциал,
[01:53:03.060 --> 01:53:05.060]  то как бы
[01:53:05.060 --> 01:53:07.060]  приведенный вес любого цикла
[01:53:07.060 --> 01:53:09.060]  оказывается не отрицательным.
[01:53:09.060 --> 01:53:11.060]  Но так как приведенный вес любого цикла
[01:53:11.060 --> 01:53:13.060]  равен исходному весу, то получается вообще
[01:53:13.060 --> 01:53:15.060]  и циклов отрицательного веса нет.
[01:53:15.060 --> 01:53:17.060]  В эту сторону очевидно, а в эту сторону
[01:53:17.060 --> 01:53:19.060]  нет циклов отрицательного веса,
[01:53:19.060 --> 01:53:21.060]  значит есть DIST.
[01:53:21.060 --> 01:53:23.060]  А раз есть DIST, значит есть
[01:53:23.060 --> 01:53:25.060]  потенциал.
[01:53:25.060 --> 01:53:31.620]  Вот, а в этом и ошибка, да. Подлянка заключается в том, что, к сожалению, нет гарантии вообще,
[01:53:31.620 --> 01:53:37.900]  что существует вершина S, из которой вы дойдете до всех вершин. То есть даже не в том смысле,
[01:53:37.900 --> 01:53:45.780]  что вы там их сложно искать, а фишка в том, что ее может вообще не быть. Поэтому в данном
[01:53:45.780 --> 01:53:50.980]  случае предлагается сказать, что вершина S это не одна из вершин В, а предлагается так. Вот у
[01:53:50.980 --> 01:53:59.580]  вас есть RAF. Значит, мы просто вводим фиктивную вершину S и проводим из нее ребра во все вершины.
[01:53:59.580 --> 01:54:04.740]  Ну, по умолчанию, с весом 0, но на самом деле даже не сильно принципиально,
[01:54:04.740 --> 01:54:11.860]  с какой вес вы тут напишете. И забабахиваете потенциал. То есть расстояние от нее забабахиваете
[01:54:11.860 --> 01:54:19.700]  потенциал. То есть это вот называется классический алгоритм Джонсона. Ну, и потенциалы называются
[01:54:19.700 --> 01:54:27.460]  потенциалы Джонсона, кстати. Вот. Да, то есть кто-то начинает, почему-то у многих иногда это
[01:54:27.460 --> 01:54:32.300]  ассоциируется чисто с потоками, но на самом деле оберутся они здесь. То есть пока еще никакого
[01:54:32.300 --> 01:54:40.020]  отношения к потокам это не имеет. Так что вот таким образом получается, что за вот уже
[01:54:40.020 --> 01:54:57.620]  аж такое симптотики достичь в принципе можно. Вот. Ну, потенциалы. Да, потенциалы мы ищем
[01:54:57.620 --> 01:55:04.860]  Фордом Белманом из S, но один раз. Вот. После этого мы с помощью потенциала из каждой вершины запускаем
[01:55:05.340 --> 01:55:22.580]  здесь использование потенциалов простое. Ну, как ты и сказал, циклы, приведенный вес цикла равен исходному весу цикла.
[01:55:22.580 --> 01:55:37.580]  Нет, это прямую сторону. Если нет циклов отрицательного веса, значит есть потенциал. Мы это доказали тем,
[01:55:37.580 --> 01:55:45.780]  что просто предъявили этот потенциал как расстояние от этой вершины до всех остальных. Вот. А в обратную
[01:55:45.780 --> 01:55:49.900]  сторону доказательства, что пусть существует не отрицательный вес, значит все приведенные веса относительно
[01:55:49.900 --> 01:55:56.580]  него циклов больше либо равна нуля, значит и веса в принципе всех циклов больше либо равна нуля, циклов
[01:55:56.580 --> 01:56:03.540]  с этой веса нет. Ура. Вот. Да, тут все, тут как бы тут все просто, да и кодится в общем-то со сложностью
[01:56:03.540 --> 01:56:13.340]  дэ экстры. Вот. Вот. Итак. Так. Ну, кажется, если тут вопросов нету, то на этом мы заканчиваем говорить
[01:56:13.340 --> 01:56:20.380]  о поиске кратчайших путей и наконец переходим в сладостный, чарующий и упалительный мир потоков.
[01:56:20.380 --> 01:56:36.300]  Вот. Ура. Наконец-то мы до этого дошли. Алгоритм Джонсона или потенциалы Джонсона. Ну, вот такое.
[01:56:36.300 --> 01:56:58.540]  Фамилия здесь Джонсона. Вот. Так. Ой, так вот тут бы уже нормальные маркеры, конечно, нужны. Так.
[01:56:58.540 --> 01:57:23.660]  Так. Так. Главное не перепутать какие мои, а какие не мои. Да. Ну, как всегда. Да. Ну, тут
[01:57:23.660 --> 01:57:30.260]  спросим логично. Вот, допустим, у вас есть предмет теории жруб. Какой самый первый вопрос возникнет на
[01:57:30.260 --> 01:57:48.300]  самом первом занятии? Разумеется. Но у нас это будет немножко не так. Скажем, но не сразу. Не-не-не-не-не-не-не.
[01:57:49.300 --> 01:58:04.980]  Первое, что мы скажем, это что такое сеть. Нет, рыболовная. Да-да-да, интернет. А интернет, ну это вот
[01:58:04.980 --> 01:58:10.140]  это с проводами, вот эта вот штука. Знаете, да, приходите на экзамен, потом мне достается куриный
[01:58:10.140 --> 01:58:15.060]  бог. Ой, я стал куриным богом. Очень классно. Такой с перьями такой красивый. Там вот это, а в том
[01:58:15.060 --> 01:58:24.540]  там, а куриный бог. Господи. Да, ну, отдельная песня. На каком экзамене-то вам такое могло возникнуть?
[01:58:24.540 --> 01:58:37.900]  Ну, да. Вот. Ну, мы с вами, слава богу, не в магической школе. Хотя магию мы с вами тоже делаем, надо
[01:58:37.900 --> 01:58:45.980]  признать. Да, вот, в некотором смысле. Так вот, что такое сеть? Так вот, вообще говоря, сеть это такой вот
[01:58:45.980 --> 01:58:56.460]  пятерка. Ну, точнее так, знаете, тут два определения есть на самом деле. Значит, что такое сеть? Значит,
[01:58:56.460 --> 01:59:07.860]  это значит, где значит у нас VE, это просто ориентированный граф. Значит, С это просто такая
[01:59:07.860 --> 01:59:26.900]  функция, которая называется пропускные способности. Так, там S это вершина, которую мы будем называть
[01:59:26.900 --> 01:59:41.140]  и stock, T это вершина, которую мы будем называть stock. Вот. Ну, то есть, по сути, в общем-то,
[01:59:41.140 --> 01:59:48.380]  такой взвешенный граф, только с неотрицательными весами. Формально, в котором выделили две вершины.
[01:59:48.380 --> 01:59:58.380]  Вот. Ну, что это такое по смыслу? Так, хотя, насколько надо подробно об этом говорить,
[01:59:58.380 --> 02:00:07.220]  интересно. А кто знает, что такое поток вообще? Ага, надо говорить. Хорошо. Или кому-то лейб-руку
[02:00:07.220 --> 02:00:16.460]  подымать. Да, хотя да, юмор заключается в том, что это как бы самая математическая часть вообще
[02:00:16.460 --> 02:00:22.540]  всей программистской теории. Но да. Нет, у нас вообще была ирония, когда нам вообще на дискретке,
[02:00:22.540 --> 02:00:30.420]  на семинаре стали что-то предлагать задачи, которые решаются через теорию Муфорда Флкерсона. Да,
[02:00:30.420 --> 02:00:34.340]  причем да, ирония, что кому-то пришлось подробно рассказывать, а у нас семинар закончился за
[02:00:34.340 --> 02:00:40.100]  половину времени, потому что мы знали, что это такое. Но ничего, сейчас все расскажу. Значит,
[02:00:40.660 --> 02:00:48.580]  идея такая. То есть, на самом деле, виртуально у нас такая идея. Ну, классическая интерпретация такая,
[02:00:48.580 --> 02:00:56.500]  что вот этот вот граф, это не просто граф, это водопровод. И мы хотим, чтобы этот водопровод
[02:00:56.500 --> 02:01:07.100]  бесперебойно доставлял нам воду из вершины С в вершину Т. Ну, что значит бесперебойно? Да,
[02:01:07.620 --> 02:01:12.300]  обратите внимание, то есть мы тут сейчас не кратчайшие пути какие-то ищем, а хотим,
[02:01:12.300 --> 02:01:18.260]  чтобы был процесс бесперебойно. Это означает, что мы хотим, чтобы по каждой трубе каждую единицу
[02:01:18.260 --> 02:01:28.740]  времени текло какое-то фиксированное количество жидкости. Вот такая у нас идея. Зря я это стал
[02:01:28.740 --> 02:01:40.380]  здесь рисовать. Лучше тут. Какая-нибудь вот эта вот. Ну, а теперь в чем фишка? Да, граф вполне
[02:01:40.380 --> 02:01:47.580]  может быть сколь угодно зацикленный. Но маленькая, какие у нас проблемы есть? Проблема в том,
[02:01:47.580 --> 02:01:54.060]  что в водопроводе, наверное, по каждой трубе бесконечное число воды течь не может. Там где-то
[02:01:54.060 --> 02:02:05.980]  их 5, где-то 3, где-то 8, где-то 1, где-то 2, где-то 7, 6, там 5, 4, 3, 6, ну и так далее. Ну, что угодно
[02:02:05.980 --> 02:02:13.780]  может быть. Бывает ноль. Но ноль, конечно, это будет означать, что примерно одинаковая ситуация,
[02:02:13.780 --> 02:02:19.900]  когда типа трубы нет и труба имеет вес, там профессиональная способность ноль. В зависимости
[02:02:19.900 --> 02:02:28.460]  от ситуации мы будем считать и так, и так. Вот. То есть вот такой смысл. Но как же мы можем запустить
[02:02:28.460 --> 02:02:36.540]  воду? Что значит запустить воду? Ну, запустить воду надо, конечно, так, то есть надо каждой трубе
[02:02:36.540 --> 02:02:40.980]  сказать, сколько воды должно течь. То есть мы как бы не в самом начале процесса. Мы должны
[02:02:40.980 --> 02:02:51.380]  растворить в конечную фазу, когда мы уже наладили процесс. Чего? Да. Да, это буквально,
[02:02:51.380 --> 02:02:57.140]  да. На самом деле, да, это буквально они. Да, только течет у нас не только вода. Или, знаете,
[02:02:57.140 --> 02:03:01.420]  вот еще на самом деле красивая интерпретация, на самом деле, это транспортная сеть, когда на самом
[02:03:01.420 --> 02:03:07.220]  деле это города, и по городам едут, и тут едут машины. То есть мы там запускаем какие-нибудь там
[02:03:07.220 --> 02:03:14.500]  грузовички с грузами, а это просто количество полос, допустим. Вот. Но, действительно, есть какие-то,
[02:03:14.500 --> 02:03:19.140]  ну, во-первых, есть, конечно, ограничения, что по каждой дороге едет не более чем задное число
[02:03:19.140 --> 02:03:25.020]  машинок. Ну, лучше, конечно, воды. Почему? Потому что числа могут быть и какими-нибудь там не целыми.
[02:03:25.020 --> 02:03:33.460]  Да, 99% случаев, конечно, у нас все для целочисленных сетей будет, но тем не менее, да. Вот там корень,
[02:03:33.740 --> 02:03:37.740]  там корень, ограничение, там корень из двух машин, там машин в единицу времени, это тоже,
[02:03:37.740 --> 02:03:55.100]  в принципе, бывает. Да? Интересно. Нет, если поскорее, поскорее, то, пожалуйста, а так это ограничение
[02:03:55.100 --> 02:04:00.580]  не более, да, то есть, знаете, ограничение не более, чем корень из двух машин, называется в минуту, там
[02:04:00.580 --> 02:04:16.660]  въезд не более, чем корень из двух машин в минуту. А теперь высказывается вопрос, а что такое корень из машины? Да,
[02:04:16.660 --> 02:04:21.660]  то есть, да, нет, это что-то новенькое, мало нам нема единицы, это только, только что избавились,
[02:04:21.660 --> 02:04:27.620]  так еще и, ну, как избавились? Не избавились, ладно, у вас там целая ДЗ на нее, да. Нет, ладно, не целая,
[02:04:27.620 --> 02:04:37.100]  там есть умножение на простому модулю. Да, да, да, да, да, это правда, окей, да, но это правда,
[02:04:37.100 --> 02:04:44.540]  да. Ну, да, да, да, а потом выяснить, да, все задачи там коротцумно издаются, да, вот, ну, попробуй,
[02:04:44.540 --> 02:04:49.860]  попробуй, может, и заходит, я не знаю, ладно, ладно, не будем извлекать корень из машины, да,
[02:04:49.860 --> 02:04:54.540]  будем, значит, есть ограничение, что по каждой трубе течет, но есть, как правильно заметили,
[02:04:54.540 --> 02:05:01.620]  это правила Киргофа, то есть, хочется, чтобы вода нигде не скапливалась и нигде ниоткуда не бралась,
[02:05:01.620 --> 02:05:07.260]  кроме истока, ну и машинки, то есть, машинки, то есть, не должно быть у нас там бесконечное,
[02:05:07.260 --> 02:05:12.300]  то есть, куда там, не должно быть у нас бесконечное накапливание, нет, у программистов, конечно,
[02:05:12.300 --> 02:05:19.020]  бывает всякое, да, как это было там, 10 ноября, куда-то исчезают малярии штукатуры, там думаем,
[02:05:19.020 --> 02:05:23.580]  а потом, 12 ноября, выяснилось, что из-за ошибки Сидорова двери в некоторые квартиры открываются
[02:05:23.580 --> 02:05:32.980]  только на вход, думаем, что делать, пока кормим через форточку, да, это дело было, да, но вот,
[02:05:32.980 --> 02:05:41.420]  да, здесь мы хотим этого избежать, приводит нас к этому программическому определению понятия поток,
[02:05:41.420 --> 02:05:51.380]  вот это прикол, а не нормально, вот, вот, надо просто поднажать, так,
[02:05:51.380 --> 02:06:03.140]  упшик ифа поможет, а ну-ка, а если я вот эту возьму, да и нет, она вот, нет, так-то работает,
[02:06:03.140 --> 02:06:10.820]  но, как это Петрович говорит, что будет работать, если снег не пойдет, 25 ноября снег пошел,
[02:06:10.820 --> 02:06:21.100]  так, так, ладно, все убрали, так, это мы убрали, это мы убрали, так, вон пусть тут лежит,
[02:06:21.100 --> 02:06:27.940]  а, господи, это ж маркер отсюда, небось, да, ладно, так вот, определение,
[02:06:27.940 --> 02:06:43.260]  определение, так, господи, нормальные макеры есть, ну, что такое,
[02:06:43.260 --> 02:06:58.580]  о, маркер для флипчертов, да, печалька,
[02:06:58.580 --> 02:07:11.020]  чего, конечно, да, нет, как-то я не знаю, мне страшно бояться за каждую букву, потому что,
[02:07:11.020 --> 02:07:19.020]  как бы, придется все это открыть, потому что, видимо, полностью знал, что тут будет написано,
[02:07:19.020 --> 02:07:23.220]  поэтому, да, и то, пожалуйста, в предпоследней строчке слова отсутствия неправильно написано,
[02:07:23.220 --> 02:07:34.060]  да, вот, да, нет, понятно, да, это называется, нашел, потому что искал и все такое, да, ну, вот,
[02:07:34.060 --> 02:07:41.660]  ну, как бы, нет, дайте это так, ну, я лучше, я лучше это буду писать на доске с обратимой
[02:07:41.660 --> 02:07:48.580]  операции записи, вот, значит, это определение, пусть, значит, вот у нас есть сеть,
[02:07:48.580 --> 02:08:06.380]  тогда, значит, поток f, что такое поток, это функция,
[02:08:06.380 --> 02:08:18.460]  значит, функция такая f из e в r, на этот здесь больше либо равно нуля, у нас односторонние дороги,
[02:08:18.460 --> 02:08:26.620]  если что, удовлетворяющее, вот, следующим условиям, или как-то пишется, короче, такая шо,
[02:08:26.620 --> 02:08:40.180]  такая шо, значит, во-первых, для любого ребра e верно, что f от e меньше либо равно c от e,
[02:08:40.180 --> 02:08:53.300]  и второе утверждение, что для любой вершины v, которая не из сток и сток, оказывается,
[02:08:53.300 --> 02:09:06.980]  что сумма f от e равна сумме f от e, да, только с мелкой оговоркой, первой сумме мы перебираем
[02:09:06.980 --> 02:09:24.140]  ребра входящие в вершину v, а здесь исходящие, вот, то есть, типа, прям в явном виде, сколько втекает,
[02:09:24.140 --> 02:09:51.900]  стока вытекает, да, собственно, что-то, что, вот, нет, у нас, к сожалению, у нас такого счастья не будет,
[02:09:51.900 --> 02:10:01.620]  да, да, да, вот, смотрите, да, да, действительно, у нас такая подлость, да, что у нас может никто не ехать из st,
[02:10:01.620 --> 02:10:10.060]  а просто вместо этого вот это одинокая машина вот так вот гоняет по гоночному кругу, это тоже поток,
[02:10:10.060 --> 02:10:22.660]  да, какие дрифтеры, господи, это еще просто, нет, просто вот ездит машина, да, причем этот поток
[02:10:22.660 --> 02:10:29.460]  будет величины ноль, сбегая вперед, сразу скажу, ну, потому что из st никто не ездит, но, помните, да,
[02:10:29.460 --> 02:10:38.020]  то есть, как бы, если поток ноль, это не значит, что никто нигде не едет, но это как с конденсатором,
[02:10:38.020 --> 02:10:44.940]  казалось бы, что такое конденсатор, просто вот такие две доски вот так поставлены, очевидно,
[02:10:44.940 --> 02:10:53.500]  очевидно, между ними ток течь не может, а он течет, вот, ну, вот, если переменные, то оказывается,
[02:10:53.500 --> 02:11:03.220]  течет по каким-то мистическим причинам, то есть там, да, вот, ну, вот, да, но, как бы, ладно, да,
[02:11:03.220 --> 02:11:07.140]  возможно, именно по этим, да, по причине этого вы, собственно, поступили на вкульте, где физику не
[02:11:07.140 --> 02:11:18.620]  изучают, да, а то тут, как бы, нет, почему нет, формально там течет, там даже это объясняется тем,
[02:11:18.620 --> 02:11:27.900]  что, ну, да, нет, ну, там как-то, да, воображайте себе, что это не так вот плюсик течет, а минусик вот так
[02:11:27.900 --> 02:11:34.700]  вот в обход течет, это нормально, да, нет, у меня учитель физики так объяснял, вот, так что можно
[02:11:34.700 --> 02:11:40.900]  себе это так воображать, да, в общем, да, в общем, это отдельная песня, но, как говорится, да, вот,
[02:11:40.900 --> 02:11:46.940]  значит, смотрите, но, значит, но, погодите, пока развлекаться, значит, смотрите, потому что пока
[02:11:46.940 --> 02:11:52.140]  надо ввести, на самом деле, может быть, еще одно определение, ой, это стереть-то можно вообще,
[02:11:52.140 --> 02:12:01.860]  кстати, аптечек, так, ой, интересно, этот маркер пишет нормально, потому что на самом деле мы с
[02:12:01.860 --> 02:12:08.900]  вами будем пользоваться двумя определениями, это определение программистское, то есть оно максимально,
[02:12:08.900 --> 02:12:16.420]  оно ближе к тому, что обычно реально кодит, но математически поток оказывается удобно
[02:12:16.420 --> 02:12:34.420]  рассматривать немножко по-другому, так, ой, ладно, пойду свистну маркер, так,
[02:12:34.420 --> 02:12:43.140]  вот, ну, и смотрите, более математически иногда оказывается удобнее считать,
[02:12:43.140 --> 02:12:49.020]  что между любыми двумя вершинами есть такова, просто между некоторыми просто способность 0,
[02:12:49.020 --> 02:12:57.100]  вот, ну, в общем, ладно, это как бы тут еще такой балансный момент, то есть круче, на самом деле,
[02:12:57.100 --> 02:13:05.740]  оказывается, когда мы начинаем вводить поток, значит, так, давайте тут тоже, так, да, давайте
[02:13:05.740 --> 02:13:17.660]  еще немножко порезем, так, так, порезем маркер, да, да, прям это таймкод, да,
[02:13:17.660 --> 02:13:29.020]  лектор грызет маркер, так, да, да, да, ну, типа, если вам не интересно, проматывайте,
[02:13:29.020 --> 02:13:35.420]  а если интересно, нет, ну, мало ли, знаете, у каждого человека там иногда в фильмах есть там
[02:13:35.420 --> 02:13:40.060]  какие-нибудь там это любимые моменты, да, то есть, например, кто-то любит, например, когда там
[02:13:40.060 --> 02:13:46.780]  самолет взрывается, да, ну, например, там, я не знаю, или кто-то там любит момент, когда там он
[02:13:46.780 --> 02:13:56.260]  там забил там решающий гол, например, или там что-то вроде, ну, вот, ну, вот, вот,
[02:13:56.860 --> 02:14:10.260]  вот, значит, смотрите, определение, так вот, поток, поток в сети, нет, не аминус ажи,
[02:14:10.260 --> 02:14:33.620]  значит, это опять функция f, такая шо, шо, так, ну, во-первых, для любых двух вершин,
[02:14:33.780 --> 02:14:43.980]  конечно, для любых двух вершин, оказывается, верно, что f от uv меньше либо равно, чем c от uv,
[02:14:43.980 --> 02:14:58.260]  но возникает весьма нетривиальное свойство, да, для любых двух вершин верно, что f от uv равно
[02:14:58.260 --> 02:15:07.100]  минус f от vl, внимание, обратите внимание, не отрицательность на этот раз не требуется,
[02:15:07.100 --> 02:15:16.180]  здесь такое удобство такой матрицы смежности, что там, если там это из Москвы в Питер едет
[02:15:16.180 --> 02:15:24.460]  пять машин, это то же самое, что из Питера в Москву едет минус пять машин, да, ну, вот,
[02:15:25.060 --> 02:15:31.980]  вот, и в результате уже третье свойство можно записать, между прочим, сильно проще, чем вот
[02:15:31.980 --> 02:15:47.100]  эту гадость, потому что оказывается, что для любой, для любой вершины v, которая не исток и не
[02:15:47.100 --> 02:15:57.500]  сток, оказывается, верна маленькая приятная вещь, сумма f от, допустим, uv, ну, или можно было f от
[02:15:57.500 --> 02:16:07.380]  vu написать, равно нулю, вот, то есть, видите, так стало чуть-чуть удобнее писать очень сильно,
[02:16:07.380 --> 02:16:13.900]  потому что оказывается, что, как бы, потому что в этой сумме, как бы, все входящие учитываются
[02:16:13.900 --> 02:16:20.100]  со знаком плюсов, все исходящие со знаком минус, поэтому вот запись уже оказывается короче,
[02:16:20.100 --> 02:16:28.700]  ну, например, да, ну, вот возникает первая теря, хорошо, понятно, что на самом деле это всего лишь
[02:16:28.700 --> 02:16:35.860]  интерпретации одного и того же, правда, то есть, суть одна, более того, в принципе, то есть,
[02:16:35.860 --> 02:16:40.100]  их можно даже примерить, что там программисты скажут, ну, то есть, это типа тут всегда матрица
[02:16:40.100 --> 02:16:45.660]  смежности в квадрат ребер, но на самом деле необходимости в этом нет, то есть, на самом деле
[02:16:45.660 --> 02:16:51.700]  примерить эти определения можно было бы, например, если для каждого ребра ввести обратное ребро и
[02:16:51.700 --> 02:16:58.740]  договориться о вот таком свойстве, понимаете, да, вот, то есть, в принципе, так тоже можно и
[02:16:58.740 --> 02:17:03.340]  программисты, собственно, это постоянно делают, как мы с вами убедились, но вот что нас сейчас
[02:17:03.340 --> 02:17:09.060]  интересует, а что такое величина, ведь задача у нас об поиске какого-то там максимального потока,
[02:17:09.060 --> 02:17:19.340]  а что такое максимальный поток, вот, да, надо ввести, а вообще, да, что такое вообще какую-нибудь
[02:17:19.340 --> 02:17:28.180]  величину потока, ну, казалось бы, что такое величина потока, ну, наверное, в идеале нам бы хотелось,
[02:17:28.180 --> 02:17:39.460]  сколько товарищей едет из СВТ каждую единицу времени, да, вот, а сколько их едет, ну, казалось бы,
[02:17:39.460 --> 02:17:45.980]  вот так определение вводим, да, ну, можно определить так, ну, что, ну, ну, наверное, да, давайте просто
[02:17:45.980 --> 02:17:50.500]  посмотрим, зафиксируем, сколько выезжает у нас каждый день из гаража, из истока, и все.
[02:17:50.500 --> 02:18:04.820]  Да, ну, опять-таки, да, тут вот, хочется здесь сказать, что модуль fs, это сумма f от e по e точка
[02:18:04.820 --> 02:18:10.220]  старт равно просто сколько выезжает, просто так и фиксируем, то есть выехал из гаража там 10
[02:18:10.220 --> 02:18:18.340]  трамвай, там, 10 трамвай, значит, 10 трамвай на маршруте ездят, да, есть одна маленькая подляночка,
[02:18:18.340 --> 02:18:24.540]  да, подляночка называется в том, что этим трамваем никто не запрещал возвращаться в
[02:18:24.540 --> 02:18:34.460]  исток, то есть может быть вот, например, вот такая ситуация, вот, ну, тут что-нибудь, неважно,
[02:18:34.460 --> 02:18:52.380]  ой, да, а ой, да, значит, тут надо тогда, так, тут мы пишем один, так, давайте, тут мы пишем два,
[02:18:52.500 --> 02:18:59.980]  тут мы пишем два, тут мы пишем два, тут мы пишем два, да, и тут пишем два.
[02:19:05.780 --> 02:19:19.940]  Куда? Серьезно? Меньше восемь, так, ну хорошо, три втекает, но нет, почему нет, одно втекает,
[02:19:19.940 --> 02:19:33.040]  нет почему смотрите 1 вытекает 1 вытекает 2 втикают кайф а 3 втикает а во да ну хорошо
[02:19:33.040 --> 02:19:36.480]  давайте наконец рассмотрим поток в котором датте все-таки что-то да езжай
[02:19:36.480 --> 02:19:53.080]  3 из 5 конечно да это это тройбан такой да так давайте ладно давайте толстенький такой
[02:19:53.520 --> 02:20:03.920]  с пузиком такой тройбан да вот это пропускаю способность вот уже ничего
[02:20:03.920 --> 02:20:12.960]  так вот такая красота но правда тут действительно если считать что просто кто вы кто выезжает из
[02:20:12.960 --> 02:20:20.920]  ангара то как бы замечаем что да то есть просто напрашивается какая-то коррупция потому что
[02:20:20.920 --> 02:20:35.320]  выезжает по 3 но один тут еще коротким путем возвращается а еще один так стоп нет выезжает
[02:20:35.320 --> 02:20:44.000]  3 вот этот тоже выехал а это не вы а два выезжает дай один быстренько возвращается и еще тут трава
[02:20:44.000 --> 02:20:51.320]  это просто ездит без отдыха до такой да но вот то есть такая но то есть какая-то подозрительная
[02:20:51.320 --> 02:20:57.640]  да то есть это как ну да это называется да то есть чиновник демонстративно сел на велосипед
[02:20:57.640 --> 02:21:04.080]  значит проехал полметра значит заехал за угол сел в машину ехал дальше то есть это как бы вещь
[02:21:04.080 --> 02:21:13.080]  такая вот но поэтому чтобы избавиться от этого мы все-таки себе скажем что у нас все-таки мы
[02:21:13.080 --> 02:21:26.280]  вычитаем тех кто нам еще и к нам вернулся но заметим что справиться с этим нам помогает
[02:21:26.280 --> 02:21:32.720]  конечно вот второе определение потому что второе во втором понятийном аппарате на самом деле мы
[02:21:32.720 --> 02:21:44.240]  понимаем что здесь модуль fs можно просто написать сумма f от св и сказать и заметим что она учила
[02:21:44.240 --> 02:21:53.560]  все но вот чем фишка вот опять же как бы как тут сразу взять почему я эту штуку пишу с индексом
[02:21:53.560 --> 02:21:59.440]  s потому что может возникать наоборот как бы логично на самом деле чтобы как бы нам там если
[02:21:59.440 --> 02:22:05.920]  мы перегоняем товары с ft то наверно пользует там наверно в городе t там нам будут платить
[02:22:05.920 --> 02:22:20.360]  наверно за то что доехала не то что выехала правда кто сказал так сейчас доживем но вот ну скажи так
[02:22:20.360 --> 02:22:26.040]  это надо сделать но давайте делать вот есть как бы что можно ввести абсолютно то же самое да
[02:22:26.040 --> 02:22:41.600]  нет да пока у нас все дороги бесплатные как бы и более того мы им полностью владеем и перейдем
[02:22:41.600 --> 02:22:51.560]  ой да кофе но вот то есть можно то есть на самом деле заметим что можно величину потока мерить и
[02:22:51.560 --> 02:23:05.680]  таким вот образом модуль ft которая равен сумма в f это в это да можно так вот но возникает вопрос
[02:23:06.000 --> 02:23:13.760]  как бы это да то есть это вообще совпадающий ли это вещь байдей на казалось буду сколько выехала
[02:23:13.760 --> 02:23:21.240]  наверно столько и приехала а куда они могли деться ну вот ну как это сделать
[02:23:21.240 --> 02:23:31.920]  ну да да да классика нам так классика нам говорить что
[02:23:31.920 --> 02:24:00.960]  ну потому что но скажем так потому что вот в этом понятийном аппарате удобнее
[02:24:00.960 --> 02:24:07.720]  доказывать утверждение а в этом понятийном аппарате удобно кодить вот так потому что нет
[02:24:07.720 --> 02:24:12.160]  в принципе я мог бы на самом деле вот это не вводить и абсолютно те же утверждения которые
[02:24:12.160 --> 02:24:23.920]  сейчас будем доказывать доказывать вот в этом аппарате но я потрачу просто но нет а это
[02:24:23.920 --> 02:24:28.200]  программика шако да ну поша кодить будем именно так даже не столько удобно дело даже будет не
[02:24:28.200 --> 02:24:33.480]  столько в удобстве сколько в том что как бы обычно у нас все-таки граф будет по ограничениям больше
[02:24:33.480 --> 02:24:37.960]  чем матрица смежности но теперь там ситуация 100 тысяч вершин 200 тысяч ребрик для нас тоже на
[02:24:37.960 --> 02:24:44.640]  самом деле шоком не будет вот но там про сочетание искать какие-нибудь вот соответственно поэтому
[02:24:44.640 --> 02:24:50.720]  вот поэтому то есть это вот для программирования для математики конечно да и так значит мистическое
[02:24:50.720 --> 02:24:57.680]  утверждение утверждение о том что модуль f с индексом s равно модуль f с индексом t
[02:24:57.680 --> 02:25:15.640]  какое у нас доказательство да да потому что рассмотрим сумму чего рассмотрим сумму по всем
[02:25:15.640 --> 02:25:26.400]  парам вершин значит ув значит f от ув с одной стороны это равно нулю просто по определению по
[02:25:26.400 --> 02:25:35.000]  свойству номер два да мы сейчас второй прийти на парад берем да ну потому что каждый ребро мы
[02:25:35.000 --> 02:25:42.560]  взяли и в ту и другую сторону они ангелировались с другой стороны теперь заметим что я вот так
[02:25:42.560 --> 02:26:01.560]  напишу вот дай просто поставил скобочки да теперь заметим что по определению номер 3 на самом
[02:26:01.560 --> 02:26:08.320]  деле я здесь беру просто то есть в качестве у меня имеет смысл рассматривать только с это
[02:26:17.440 --> 02:26:28.560]  а это ну просто по определению и второму свойству это модуль f с минус модуль f
[02:26:28.880 --> 02:26:36.720]  доказательство кончено да то есть я мог бы то же самое написать в первом там в первой
[02:26:36.720 --> 02:26:42.960]  терминологии но это был бы расстрел ну то есть так просто было бы две строчки две более
[02:26:42.960 --> 02:26:48.640]  гадостные точки которые в общем-то дополнительного смысла не дают то есть вывод очень простой то
[02:26:48.640 --> 02:26:56.080]  есть оказывается это оба определения нормальные то есть оба это одинаковые и соответственно
[02:26:56.240 --> 02:27:07.320]  вот это вот определение это мы будем называть величина потока
[02:27:13.320 --> 02:27:13.820]  вот
[02:27:18.920 --> 02:27:26.000]  соответственно то есть вот такая вот величина то есть фактически можно сказать сколько вытекает
[02:27:26.000 --> 02:27:30.920]  то есть сколько можно сказать сколько вытекает и заско можно сказать что сколько втекает в т
[02:27:30.920 --> 02:27:44.520]  можно на самом деле ввести еще два степени н-2 экзотических определений да вот что-то да у меня
[02:27:44.520 --> 02:27:48.520]  сидит творческое настроение поэтому я это место обычно конечно говорю немножко там где-нибудь
[02:27:48.520 --> 02:27:56.240]  через полчасика но вот но давайте сразу введем еще понятие можно ввести вообще понятие просто
[02:27:56.240 --> 02:28:02.560]  какой-нибудь храницы и то есть ну можно так допустим вы ну я не знаю гоняете вы допустим
[02:28:02.560 --> 02:28:14.600]  автомобили там я не знаю там я не знаю там изет там из дитройта в не давайте поближе сейчас
[02:28:14.600 --> 02:28:28.720]  нет ладно там больше стран нет там стран слишком много там можно нет давайте нет более показать
[02:28:28.720 --> 02:28:34.320]  добудемся все-таки в канаду будем гонять до вот точно реаль а то мне хотел сказать конь горы
[02:28:34.320 --> 02:28:41.800]  кроме от того да вот давайте вон реаль нет из дитройта но давайте вспомним его это уважаемое
[02:28:41.960 --> 02:28:47.560]  это прошлое когда там 4 это было автомобильной столице мира и все такое но вот то сейчас это
[02:28:47.560 --> 02:28:51.840]  что-то грустное но вот например если почитать там скажем там книжки актера хейли то в какой-то
[02:28:51.840 --> 02:28:58.000]  момент дитройта это был очень мощным городом с вообще с там классными фордовскими заводами вот
[02:28:58.000 --> 02:29:04.960]  соответственно да но так вот представьте гоняете вы значит из дитройта в монреаль ну в принципе
[02:29:04.960 --> 02:29:09.960]  как можно считать сколько машин пересечь сколько машин будет доезжать может сколько выезжает из
[02:29:09.960 --> 02:29:15.760]  дитройта может считать сколько это приезжает монреаль а можно посчитать сколько приезжает
[02:29:15.760 --> 02:29:27.360]  через границу да то есть можно про просто считать да хотя да то есть априон от формально
[02:29:27.360 --> 02:29:41.720]  определение этой границы звучит так то есть определение то есть пусть у меня допустим пусть
[02:29:41.720 --> 02:30:00.920]  значит g равно вот это вот vst это сеть это сеть тогда значит пары множество st это разрез если
[02:30:00.920 --> 02:30:17.720]  во-первых значит s и t это под множество v и нет не будем путать и это не случайно так
[02:30:17.720 --> 02:30:23.920]  во-первых так ладно правильно даже короче будет писать не просто ст потому что а с объединенное
[02:30:23.920 --> 02:30:31.440]  ст это прямо есть множество v второе важное свойство что с пересеченное стоит пустое множество то
[02:30:31.440 --> 02:30:38.400]  есть это разбиение да вообще вот эти два объединения говорят пишут что v равно s вот
[02:30:38.400 --> 02:30:46.200]  эту вот t вообще ну такое еще обозначение есть так но нам еще потребуется третье важное
[02:30:46.200 --> 02:30:51.720]  свойство что и сток должен лежать доли s а сток должен лежать в доле t да поэтому
[02:30:51.720 --> 02:31:07.520]  буковки тут соответствующие вот так вот вот введем такой разрез в этом месте а теперь давайте
[02:31:07.520 --> 02:31:26.760]  введем определение два определения пусть там опять там копипастим вот это g равно там сеть f поток
[02:31:26.760 --> 02:31:45.160]  в ней а ст разрез тогда чистый поток через разрез
[02:31:45.160 --> 02:32:05.680]  разрез который мы будем который мы будем означать f от st он будет равен просто сумме f от uv где
[02:32:05.680 --> 02:32:13.400]  у лежит в доле s вылежит доля t то есть просто насколько машин пересекает границу все 1
[02:32:13.720 --> 02:32:24.440]  но правда в первом понятийном аппарате мне конечно придется пошаманить ну то есть до какого-то
[02:32:24.440 --> 02:32:31.160]  момента тут прям честная копипаста копипаста копипаста копипаста копипаста копипаста копипаста
[02:32:31.160 --> 02:32:40.720]  но здесь придется подписать f от ст планировки паста g равно v c st вот так вот и тут вот уже
[02:32:41.360 --> 02:32:51.400]  а что такое f от ст здесь здесь придется конечно считать сумма f от е минус сумма f от е потому
[02:32:51.400 --> 02:32:59.280]  что тут надо посчитать чтобы значит сколько у нас машинок значит едут из сша в канадо
[02:32:59.280 --> 02:33:09.320]  и вычесть машинки которые возвращаются обратно чем главное но обратно конечно тут понятие
[02:33:09.320 --> 02:33:14.920]  относительное почему ну потому что в принципе может там какая-нибудь там особая горная
[02:33:14.920 --> 02:33:21.720]  дорога есть которая формально говоря пересекает границу вообще много раз то есть может какая
[02:33:21.720 --> 02:33:25.480]  может вот есть вот какая-нибудь граница а вот какая-нибудь машина едет вот так там вот
[02:33:25.480 --> 02:33:33.840]  по такой экзотической трассе вот тогда надо чтобы машина учитывалась все-таки один условно
[02:33:33.840 --> 02:34:02.680]  один раз они блога вот вот понятно да давай так да тут да тут да да спасибо да да да да
[02:34:02.680 --> 02:34:19.080]  вот а вы говорите он на флифчактов писать а так вот так вот так вот на самом деле
[02:34:19.080 --> 02:34:31.320]  мистическое утверждение ой что-то я даже мне что-то в лом стирать и писать нет
[02:34:39.320 --> 02:34:45.240]  вот то есть на самом деле я утверждаю что чистый поток через развес тоже просто равен величине
[02:34:45.240 --> 02:35:00.480]  потока вот понятно да вот
[02:35:00.480 --> 02:35:12.880]  вот значит что смотреть как-то доказывать
[02:35:12.880 --> 02:35:41.320]  да нету никакой да нету да нет ну как бы да вот нет ну на самом деле надо почти то же самое
[02:35:41.600 --> 02:35:53.520]  нет совсем вот такое же не получится но в одну строчку мы уложимся то есть на самом деле имеет
[02:35:53.520 --> 02:36:03.400]  смысл стартовать от следующей приятной штуки что такое машины выезжающие из городов доли с
[02:36:11.560 --> 02:36:29.440]  шить такое вот вот такую вещь я хочу рассмотреть с одной стороны это ну с одной стороны можно
[02:36:29.440 --> 02:36:35.520]  заметить что ну по свойству давайте вот опять же по свойству какому там два у нас заметим что
[02:36:35.520 --> 02:36:43.960]  все рёбра которые ведут из доли с долю с пошлеп шлепаются правда поэтому получается f от
[02:36:43.960 --> 02:36:58.080]  у с и вот в это f от ув а это прям по определению f от ст с другой стороны если я тут мысленно
[02:36:58.080 --> 02:37:07.760]  поставлю скобочки то по свойству 3 я получу что что на самом деле в качестве вершины у я
[02:37:07.760 --> 02:37:14.720]  могу рассказывать только вершину с ну ну на самом деле это но ты у меня здесь нет то есть получается
[02:37:14.720 --> 02:37:28.640]  сумма от f в и в f от sv что равно модуль f с индексом с ура то есть в принципе да то есть с интуицией по
[02:37:28.640 --> 02:37:33.800]  идее бьется да потому что логично да что если мы воду откуда-то куда-то перегоняем то как бы как
[02:37:33.800 --> 02:37:38.000]  бы мы границу не ставили наверное через эту границу должна протекать ровно столько воды
[02:37:38.000 --> 02:37:45.080]  вот но вот это вот оказывается очень удобно да то есть видим что а как кстати заметим что вот
[02:37:45.080 --> 02:37:50.480]  это вот это f от ст то есть мы брали просто частные случаи разрезов ну просто есть разрез когда есть
[02:37:50.480 --> 02:37:58.640]  исток и все остальные а есть разрез когда есть монреале все остальные вот соответственно а есть
[02:37:58.640 --> 02:38:08.400]  просто вот сша канада есть такой разрез вот так же так как такая он сплотч да
[02:38:08.400 --> 02:38:14.240]  не но мы дали ну если мы ну может там реаль конечная точка нет конечно если
[02:38:14.240 --> 02:38:25.280]  монреаль находится монреаль вроде как не на границе сша но это уже дает но знаете это
[02:38:25.280 --> 02:38:32.240]  уже напоминает что-то растил германии какой-то нет ну просто да типа шо такое фрг это такая
[02:38:32.240 --> 02:38:39.520]  левая половина германии и полберлина вот вот да все вокруг остальной социалистическая часть там
[02:38:39.520 --> 02:38:57.920]  это да да какая есть бы фрактальная не но это да но тут цена тут все относительно да так как бы
[02:38:57.920 --> 02:39:02.560]  мы зала как нет понятно что есть теоретически они там могут и через мексику ездить принципе да
[02:39:02.560 --> 02:39:09.960]  в чем некоторые так экзотически ездят до как это она кто-то поедет да как-то знаете эти вода ой
[02:39:09.960 --> 02:39:15.520]  пойдем к отдохнем за границу приезжает и потом расскажет ой да ну и да преледу вот это называется
[02:39:15.520 --> 02:39:20.440]  да преледа там привет амориген там пусти двух ринга которые хотят оставить много пес о твоей
[02:39:20.440 --> 02:39:30.400]  стране а по границах спокойно окей добро пожаловать в канаду спрашивается когда какой звук издает водитель
[02:39:30.400 --> 02:39:36.080]  все по характеру не не догадываетесь
[02:39:36.080 --> 02:39:49.640]  то есть simpson восток уже не популярным ультик дам
[02:39:49.640 --> 02:40:05.400]  а что-то есть вот ванда двое симптом что ли а у кошмар нет и да разрыв по колени конечно
[02:40:05.400 --> 02:40:35.400]  на лицо да да да ой ой ой понятно да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да
[02:40:35.400 --> 02:40:50.680]  кроется да ладно и так хорошо на чистый поток у нас вот такой нет это нас в общем-то даже кое к чему подводить да у нас значит цель найти максимальный поток
[02:40:50.680 --> 02:40:58.080]  правда отсюда возникает вопрос вот особенно в преддверии там прошлых минус бесконечностей
[02:40:58.080 --> 02:40:58.640]  а максимальный поток вообще существует нет да величина потока вещь ограничена там просто суммой простой способностей но из этого ничего не следует да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да
[02:41:28.080 --> 02:41:30.080]  почему
[02:41:43.360 --> 02:41:57.380]  но поток это такой емерный вектор да ну да да заметим что множество векторов образующих корректный поток или там являются
[02:41:58.080 --> 02:42:09.400]  каким-то замка да являются компактным но что короче но потому что до замка ограниченное вот это все да ну да а у него да как известно достигается супремум ура
[02:42:09.400 --> 02:42:22.840]  да да да да на уровне функона можно сказать прям так но потому что если вот ну как сказать если у вас есть предел здесь у вас есть последовательность потоков
[02:42:22.840 --> 02:42:33.920]  которые стремятся к чему-то то легко показать что это что-то тоже поток ну потому что потому что все суммы будут правильно стремиться например и
[02:42:33.920 --> 02:42:42.320]  но ты и вот это вот но ты вот это вот неравенство тоже сохранится но если последствия не превосходит 5 то предел не происходит 5 вот
[02:42:42.320 --> 02:42:53.720]  нет нет неприятного в емерном пространстве
[02:42:53.720 --> 02:43:07.760]  да до этого мы ничего не доказали мы доказали что нет
[02:43:07.760 --> 02:43:16.880]  замкнутая ограниченная до ограниченной доказали замкнутая трезвая значит это компакт значит радость
[02:43:16.880 --> 02:43:29.520]  но очевидно это функция непрерывно да да все хорошо хорошо все ладно хорошо да это замкнутая это
[02:43:29.520 --> 02:43:34.920]  ограниченный функция не при этом и функция непрерывно да хорошо все отлично все мы сказали все умные слова
[02:43:34.920 --> 02:43:40.560]  которые надо было сказать да вот могли бы конечно их и не говорить потому что все равно мы доказывать это
[02:43:40.560 --> 02:43:51.480]  конструктивным способом практически если мы рассмотрим функцию f то есть вот есть есть f это
[02:43:51.480 --> 02:43:58.920]  доплыто это вот какая-нибудь функция от ребер да за но вот рассмотрим функцию модуль f которая равна
[02:43:58.920 --> 02:44:10.400]  вот этой вот сумме вот я утверждаю что но вот но вот это я так чаю утверждаю я но вот я утверждаю
[02:44:10.400 --> 02:44:19.920]  что фунта но то что функция модуль f непрерывно но то есть но f это как бы не функция но как бы
[02:44:19.920 --> 02:44:26.920]  каждую каждую каждую разную функцию f можно задать как просто емерный вектор да утверждение но
[02:44:26.920 --> 02:44:32.640]  вот я вот все могу все даже приватом отрицательные слишком большие там все что угодно да но я могу
[02:44:32.640 --> 02:44:41.120]  для любого вектора ввести функцию аналогичную модуль f ну типа сумма нужных ребер но все да все
[02:44:41.120 --> 02:44:49.280]  да отлично как приятно разговаривать на высоком уровне да вот шалк они всегда высокие означает
[02:44:49.280 --> 02:44:58.720]  крутой но как бы да вот значит смотреть так значит что у нас тут получается значит жил было
[02:44:58.720 --> 02:45:02.320]  значит модуль f такой но теперь выскакать вопрос как этот поток вообще искать
[02:45:02.320 --> 02:45:13.280]  ну иногда крышка и текает ощущение чего-то жадного ну давайте вот какой-нибудь красивый
[02:45:13.280 --> 02:45:21.760]  примерчик рассмотрен с пропускными способностями какими-нибудь
[02:45:21.760 --> 02:45:43.160]  какими-нибудь там 1 2 1 там допустим там какой-нибудь тоже 1 1 2 там какой-нибудь 1 вот так выскакать
[02:45:43.160 --> 02:45:50.520]  вопрос так вот сейчас у нас изначально поесть поток величины 0 можно ли сделать больше но есть
[02:45:50.520 --> 02:45:55.560]  естественно жадный способ а давайте попробуем найти пути zft вдоль которого можно пустить
[02:45:55.560 --> 02:46:07.640]  лишнюю машинку вот ну давайте какой-нибудь путь найдем ну например вот такой ну запустили
[02:46:07.640 --> 02:46:13.680]  дфс он нам почему-то выдал вот это да так ну отлично так давайте продолжать давайте еще
[02:46:13.680 --> 02:46:18.120]  найдем какой-нибудь жадного жадного пути еще увеличил правда проблема не находится скотина
[02:46:18.120 --> 02:46:29.280]  чего погодите нет погодите значит смотрите вот если мысли так нет смотрите вот тут
[02:46:29.280 --> 02:46:32.760]  чего тут надо аккуратно все вообще формально говоря если я просто рассмотрю вот это на
[02:46:32.760 --> 02:46:39.600]  уровне сколько вешать в граммах то как бы самого по себе пути нету то есть так мы не
[02:46:39.920 --> 02:46:43.640]  но заметим что поток очевидно максимальным не является потому что если бы пустили путь вот
[02:46:43.640 --> 02:46:54.320]  так так было бы хорошо но у нас есть вариант модифицировать жадник как-то модифицировать
[02:46:54.320 --> 02:47:01.080]  жаги модифицировать жаги можно так заметим что мы можем не только вводить новые машины но и
[02:47:01.080 --> 02:47:08.960]  отменять их то есть смотрите вот мы же например вот можем захотеть отменить машину по этому
[02:47:08.960 --> 02:47:17.680]  ребро а это ведь практически то же самое что пустить машинку обратно ну вот то есть такая
[02:47:17.680 --> 02:47:24.120]  вот возникает идея но если мы себе разрешаем пускать машину обратно то тогда мы значит
[02:47:24.120 --> 02:47:29.160]  вот то есть дфс опускается модифицированно он запускается не только по ребрам по которой
[02:47:29.320 --> 02:47:35.000]  еще не насыщенные ну и по ребрам обратным к имеющимся дорогам по которым приедет хоть кто-то
[02:47:35.000 --> 02:47:44.680]  если путь найдется то тогда появляется вот так как и такой путь в данном случае находится
[02:47:44.680 --> 02:47:50.600]  обрати внимание вот пум пум пум пум и мы также что по нему проходимся и вот получается 11 тут
[02:47:50.600 --> 02:47:58.440]  получается 0 потому что мы отменили тут получается один тут получается 1 так круто
[02:47:58.440 --> 02:48:04.520]  Теперь считали пятные ситуации. Мы придумали жадник, он легко обвалился, мы додумали жадник так,
[02:48:04.520 --> 02:48:11.920]  чтобы на этом тесте он работал. Значит ли это, что жадник работает всегда? Возможно,
[02:48:11.920 --> 02:48:24.540]  за 30 секунд не удается найти какой-то пример. Нет, ну вот непонятно. Здесь как бы ничего не
[02:48:24.540 --> 02:48:27.820]  сделать, потому что здесь понятно, что больше чем две машины в ТТ не въедут.
[02:48:27.820 --> 02:48:47.220]  Вот, ну на самом деле, забегая вперед, конечно скажем, что это работает. И более
[02:48:47.220 --> 02:48:53.660]  того, настолько хорошо работает, что индуцирует нам замечательное понятие «остаточная сеть».
[02:48:53.660 --> 02:49:02.700]  Итак, новое определение. Ну, в смысле два. Как всегда, давайте будем вводить по-разному.
[02:49:02.700 --> 02:49:11.540]  Значит, определение. Давайте начнем с простого. Определение. Пусть, как всегда, g это сеть,
[02:49:11.540 --> 02:49:37.340]  g равно vcst. Это сеть, а f – поток в ней. Тогда у нас остаточная сеть. Остаточная сеть.
[02:49:37.340 --> 02:49:51.860]  Это такая сеть gf, которая то же самое, только у меня c с индексом f. То есть относительно
[02:49:51.860 --> 02:50:05.060]  исходной сети поменялся ток пропускной способности. Где cf от uv просто тупо равно
[02:50:05.060 --> 02:50:25.420]  c от uv минус f от uv. Вот. То есть, видите, очень удобно. То есть, в этой интерпретации видим,
[02:50:25.420 --> 02:50:33.020]  что когда у вас тут течет одна единица, то остаточная пропускная способность у этого
[02:50:33.020 --> 02:50:42.220]  ребра 0, но зато у вас появляется обратный ребропуск на способности 1. То есть, для такой сетки,
[02:50:42.220 --> 02:50:52.220]  давайте я нарисую нормально. Тогда оказывается, что остаточная пропускная способность на самом
[02:50:52.220 --> 02:51:01.500]  деле выглядит вот так. Тут получается 1, тут получается 2, тут получается 1, тут получается 1.
[02:51:01.500 --> 02:51:08.940]  И тут получается, ну вот, что еще получается? Тут получается 1, тут получается 1. А еще давайте
[02:51:08.940 --> 02:51:15.020]  уже нарисуем, что получается 0, и тут получается 0, и тут получается 1. То есть, вот такая.
[02:51:15.020 --> 02:51:23.300]  Чего? А, да, 2. Да, и тут, ну и тут на самом деле 0. Ну я везде тут нули должен рисовать, конечно,
[02:51:23.300 --> 02:51:30.820]  потому что по-хорошему, в такой интерпретации между всеми парой вершины и стребра. Вот здесь
[02:51:30.820 --> 02:51:39.580]  это определение писать сложнее. Потому что здесь мне, вот смотрите, вот тут вот мелкая техника
[02:51:39.580 --> 02:51:46.580]  звучит так, то есть определение. Значит, здесь придется это звучит, значит, говорить так. То есть,
[02:51:46.580 --> 02:52:10.340]  пусть значит g равно vz cst, cst сеть, а f поток в ней. Тогда, значит, остаточная сеть, вот в такой
[02:52:10.340 --> 02:52:28.460]  интерпретации придется писать так. Остаточная сеть это g с индексом f равное там v, ef, cf, st. Где?
[02:52:28.460 --> 02:52:56.980]  Значит, ef, e с индексом f это просто объединение таких ребер, значит, uv и vu. Там таких,
[02:52:56.980 --> 02:53:15.220]  что, значит, uv это ребро. То есть, я для каждого ребра ввожу обратное. Ну вот, причем? Ну я так
[02:53:15.220 --> 02:53:36.900]  вот напишу, c от uv равно, то есть c с индексом f равно c от uv минус f от uv, а cf от vu равно f от uv. Вот.
[02:53:36.900 --> 02:53:44.300]  И то я немножко, и то я как-то не кузяло написал, конечно. То есть, не самая формальная идеаль. То есть,
[02:53:44.300 --> 02:53:52.140]  я должен был прописать алгоритм, что переберем все ребра, и для каждого ребра из e добавим вот
[02:53:52.140 --> 02:53:59.500]  такие ребра с вот такими пропускными способностями. Должно было я написать. Ну я не буду сейчас этого
[02:53:59.500 --> 02:54:07.140]  делать, не будем заниматься совсем уже излишним буквоедством. Вот. А будет, ну вот, то есть как-то
[02:54:07.140 --> 02:54:12.220]  вот здесь вот проще. Ну суть, в общем-то, остается. То есть, смотрите, остаток, то есть у нас есть
[02:54:13.140 --> 02:54:17.820]  если мы запустили поток, то есть остаточная сеть, которая сигнализирует по каким ребрам,
[02:54:17.820 --> 02:54:26.420]  в каких направлениях мы еще что-то можем пустить. Видно, да? Вот. И в принципе, становится достаточно
[02:54:26.420 --> 02:54:32.260]  очевидно, что если в остаточной сети по ненасыщенным ребрам, точнее по ненулевым ребрам нашелся
[02:54:32.260 --> 02:54:37.980]  путь от st, вот именно по ненулевым на этот раз, то поток можно увеличить. Видно, да?
[02:54:37.980 --> 02:54:48.700]  Если у нас есть поток в остаточной сети, ну, мы взяли какой-то поток f,
[02:54:48.700 --> 02:54:58.700]  для него взяли остаточную сеть gf, и есть какой-то поток f'. Тогда в начальной сети есть поток,
[02:54:58.700 --> 02:55:07.260]  который будет равен условно f' потоку, и их величина тоже так же суммируется. Так,
[02:55:07.260 --> 02:55:16.980]  ты точно, ты точно в потоке не знаешь, что такое? Логично, а, ну окей. Не, ну классно, просто должен
[02:55:16.980 --> 02:55:22.540]  сказать, что, кстати, да, твоя логика полностью тогда совпадает с логикой Кормана, кстати. Да,
[02:55:22.540 --> 02:55:25.660]  потому что вот если открыть Кормана, там вот начинает написано вот примерно, вот практически
[02:55:25.660 --> 02:55:35.020]  то же самое в такой же терминологии. Да, окей. Не, хорошо, хорошо, ну вот значит, как всегда умные
[02:55:35.020 --> 02:55:42.820]  люди мыслят одинаково. Да, отлично. Вот, соответственно, хорошо. Да, ну пользуясь случаем, да, напоминаю,
[02:55:42.820 --> 02:55:46.940]  да, в Кормане, если что, по крайней мере, база вся есть. То есть нет, алгоритма Диница вы там,
[02:55:46.940 --> 02:55:54.260]  к сожалению, не встретите, но там технология там push relabel, там до какого-то уровня описана. Вот,
[02:55:54.260 --> 02:55:57.940]  так в чем замечательно описано, потому что вот, ну как я уже говорил, там Корман, это вообще там,
[02:55:57.940 --> 02:56:03.580]  то есть это прям, то есть с точки зрения математической составляющей, просто один из лучших учебников по
[02:56:03.580 --> 02:56:08.540]  алгоритмам, просто если не лучший. Ну, хотя нет, ну то есть так, с ним, конечно, там Бобенко-Левин,
[02:56:08.540 --> 02:56:12.980]  конечно, с ним поконкурирует, потому что там, с точки зрения математики, там тоже все классно,
[02:56:12.980 --> 02:56:23.780]  но Корман он, конечно, но Корман он фундаментальнее, что ли. Вот. Итак, далее, значит, что тогда это
[02:56:23.780 --> 02:56:30.700]  был, значит, это f. Вот. И действительно у нас, как правильно было сказано. Более того,
[02:56:30.700 --> 02:56:34.700]  кстати, эта логика у нас еще будет работать, потому что вообще говоря, вот это вот бывает
[02:56:34.700 --> 02:56:41.300]  иногда нетривиально, что если вы вычтите максимальный поток и нашли какой-то поток f,
[02:56:41.300 --> 02:56:46.420]  то у вас задача сводится к тому, чтобы рассмотреть остаточную сеть и найти в ней максимальный поток.
[02:56:46.420 --> 02:56:53.860]  Иногда это будет называться оставшийся поток. Да, ну просто вот, ну ладно, это будет, конечно,
[02:56:53.860 --> 02:56:58.940]  пригодится, видимо, на следующем занятии нам, да, у нас будет такое полномасштабное трехвекционное
[02:56:58.940 --> 02:57:05.220]  занятие. Я прям большой соблазн сказать, а у нас нет возможности провести лишние три пары до
[02:57:05.220 --> 02:57:22.620]  пятницы включитель, да. Полномасштаб. У вас сегодня C++, здрасте. Ну да. Ну, как сказать. Нет,
[02:57:22.620 --> 02:57:26.940]  ну это нагло, как бы, да. Не, ну как сказать, тогда формально у кого-то на экзамене будет
[02:57:26.940 --> 02:57:31.140]  сказаться, да, я понимаю, что я не пришел, но как бы на каких-то, но получил, что на эти занятия
[02:57:31.140 --> 02:57:36.900]  у меня не было возможности прийти, поэтому я требую выкинуть их из экзамена, но там, то есть
[02:57:36.900 --> 02:57:45.140]  формально это к сожалению может оказаться правдой, так что нет, то есть как бы по понятиям,
[02:57:45.140 --> 02:57:53.460]  как бы все понятно, как бы хорошо, но формально придраться можно. Нет, ну ладно, на самом деле,
[02:57:53.460 --> 02:57:58.420]  да. Нет, то есть если серьезно, то на самом деле я сильно не уверен, что нам как бы лишние занятия
[02:57:58.420 --> 02:58:03.180]  реально потребуются, то есть просто отсутствие этих занятий приведет к тому, что ну значит,
[02:58:03.180 --> 02:58:08.140]  ну ладно, если совсем честно говорить, то как бы это значит пройдем на пару укуренных структур
[02:58:08.140 --> 02:58:15.460]  данных меньше. Вот. Ну так я так, ну укуренных, ну во-первых, укуренных, конечно, да, во-вторых,
[02:58:15.460 --> 02:58:20.020]  в данном случае укуренных в том плане, что да, они как бы может быть сами по себе интересны,
[02:58:20.020 --> 02:58:28.220]  но в общем-то не такие магистральные. Вот так скажем. Вот. Так что ничего страшного. Вот. Ну то есть
[02:58:28.220 --> 02:58:31.980]  нет, может быть, конечно, ориентирован md-boss, а неплохо было бы изучить или там какие-нибудь это
[02:58:31.980 --> 02:58:40.740]  xx-fast и xx-fast и так далее. Ну ладно, там специально ради этого забабахивать нет смысла. Так вот,
[02:58:40.740 --> 02:58:47.580]  значит, остаточную сеть сказали. Так, ну ладно, нам на самом деле еще надо кое-что ввести. Потому
[02:58:47.580 --> 02:58:52.380]  что, как мы уже сказали, то есть кто-то, конечно, скажет, что теорема Форда Фулкерсона как раз и
[02:58:52.380 --> 02:58:56.140]  заключается в том, что фоток является максимальным тогда и только тогда, когда в остаточной сети
[02:58:56.140 --> 02:59:03.300]  его нельзя улучшить. Ну вот. Но, как говорится, более продвинутые люди знают, что это не полная
[02:59:03.300 --> 02:59:09.460]  теорема Форда Фулкерсона. И это важно, потому что если вы считаете, что теорема Форда Фулкерсона
[02:59:09.460 --> 02:59:14.500]  заканчивается на том, что я сказал, то половину задач на потоке вы решать не умеете. К сожалению.
[02:59:14.500 --> 02:59:24.580]  Да. Нет, вы это умеете. Я видел. Да. Вы-то да. Нет, вы там да. Вам там на одном контесте подсунули
[02:59:25.180 --> 02:59:33.500]  знание одной стандартной задачи. Правда, вы там придумали походу что-то еще. Вот. Значит,
[02:59:33.500 --> 02:59:41.140]  еще я кое-что должен. Раз уж мы тут про FOTST сказали, на самом деле нужно ввести еще одно понятие.
[02:59:41.140 --> 02:59:49.780]  Понятие называется пропускная способность разреза. Ну и здесь я просто скажу. Это
[02:59:49.780 --> 03:00:00.940]  общее определение. Пусть там G это сеть, там F поток в ней, ну в обеих интерпретациях неважно,
[03:00:00.940 --> 03:00:17.700]  а ST разрез. Тогда, значит, пропускная способность разреза,
[03:00:17.700 --> 03:00:38.100]  скная способность разреза, значит C от ST, это просто сумма C от UV. Вот, кстати, обратите
[03:00:38.100 --> 03:00:43.140]  внимание. В отличие от чистого потока, мы здесь не вычитаем какие-то там пропускные способности
[03:00:43.140 --> 03:00:50.340]  ребер, едущих почему-то обратно. Ой, ой, ой, так, что я сделал? Да, ой, ой, ой, да, вот так, конечно.
[03:00:50.340 --> 03:00:59.060]  То есть обратно я ничего не учитываю. И возникает мелкое утверждение.
[03:01:13.140 --> 03:01:23.820]  Я мог бы сказать, просто модулеф не превосходится от ST, но я написал просто вот этот промежуточный
[03:01:23.820 --> 03:01:30.020]  шаг, который, по сути, делает доказательство. Ну, логично, да? Ну, потому что все это выполняется
[03:01:30.020 --> 03:01:36.580]  просто вот по, ну, в этом понятии, во втором способе определения, вот просто по вот этому
[03:01:36.580 --> 03:01:48.060]  свойству, а в этом, ну, по сути, тоже по нему и еще вот по этому требованию. Понимаете, да? Ну, то есть
[03:01:48.060 --> 03:01:52.340]  как бы отрицательные ребра учитываются, но как бы пропускные способности мы не вычитаем. Нет,
[03:01:52.340 --> 03:01:58.660]  это на самом деле очень важно, потому что, то есть это на самом деле дает нам какую-то связь между
[03:01:58.660 --> 03:02:03.860]  еще одной задачей, уже чисто математической, казалось бы, задачей о поиске минимального разреза.
[03:02:03.860 --> 03:02:11.340]  Вот представьте себе, такая есть абсолютно естественная задача. Жил-был граф, просто вот
[03:02:11.340 --> 03:02:18.340]  неориентированный граф, может быть, или даже ориентированный, неважно, и у него в серебро
[03:02:18.340 --> 03:02:25.980]  взвешены веса неотрицательные. Найдите, пожалуйста, минимальный разрез между ST. То есть разделите
[03:02:25.980 --> 03:02:30.780]  на два множества так, чтобы вершина S была в одном множестве, вершина T в другом, а пропускная
[03:02:30.780 --> 03:02:35.020]  способность была минимальна. То есть чисто математическая задача, вообще говоря,
[03:02:35.020 --> 03:02:40.260]  ни с какой водой не связанная. Так, может быть, вы вот с такой задачей не сталкивались?
[03:02:40.260 --> 03:03:02.380]  Ну вот, да. Ну вот. Ну, в принципе, да. Ну, в принципе, да. То есть, правда, это не я,
[03:03:02.380 --> 03:03:13.780]  это теорема Форда Фолкерсона говорит нам вообще следующее. Вот теорема Форт Фолкерсон. Вот. То
[03:03:13.780 --> 03:03:22.380]  есть в полном виде эта теорема формулируется так. То есть пусть, опять же, там G это сеть,
[03:03:22.380 --> 03:03:45.780]  и F поток в ней. Тогда. Тогда следующие три утверждения эквивалентны. Эквивалентны.
[03:03:53.380 --> 03:04:01.980]  Как они эквивалентны? Значит, ну как? Ну, вопрос какие? Во-первых, первое утверждение F максимальный
[03:04:01.980 --> 03:04:16.340]  поток. То есть он обладает такой величиной, что не существует потока больше величины. Второе
[03:04:16.340 --> 03:04:44.780]  утверждение. В остаточной сети вот GF нет пути из S в T по не нулевым ребрам. И третье утверждение,
[03:04:44.780 --> 03:05:07.900]  оказывается, что модуль F равно пропускной способности какого-то разреза. Вот полная
[03:05:07.900 --> 03:05:14.740]  теорема Форда Фолкерсона звучит вот так. Вот. Может быть вам ее доказывали, конечно,
[03:05:14.740 --> 03:05:23.420]  без третьего пункта, хотя неявно вам пришлось бы его выковырить. Ну-ка, а так погибите вы,
[03:05:23.420 --> 03:05:34.460]  кому теорему доказывали без третьего пункта? Так. А кому с третьим? Ух ты. Сначала 0, потом 4, да.
[03:05:34.460 --> 03:05:42.540]  Так. А кому доказывали сразу с третьим пунктом? Нет, доказывали не у меня в смысле, а вообще
[03:05:42.540 --> 03:05:50.340]  когда-нибудь. Вы же говорили, что вы же изучали потоки когда-то. Сразу с третьим пунктом. А ну
[03:05:50.340 --> 03:05:56.780]  хорошо, это все правильно. О господи. Не забавно, да, когда вы там два взаимосключающих варианта,
[03:05:56.780 --> 03:06:06.420]  вы все руки подымаете. Нет. Ну, когда доказывали без третьего пункта, а когда говорили сразу с
[03:06:06.420 --> 03:06:11.780]  третьим пунктом. А то знаете, как-то классика бывает. Какой грех вы легче его прощаете?
[03:06:11.780 --> 03:06:17.540]  Предательство, безответственность. Какой грех вы никогда не прощаете? Предательство, безответственность.
[03:06:17.540 --> 03:06:35.460]  Интеллектуальные разговоры. Ну, если я не прощаю про вообще ничего никогда, то, конечно, да.
[03:06:35.460 --> 03:06:44.260]  Ой, какой страшный человек Дворкович, оказывается. Так.
[03:06:44.260 --> 03:07:13.580]  Нет, ну, но тогда да. Ух ты. Да, господин. Не знаю, как-то слишком,
[03:07:13.580 --> 03:07:17.900]  слишком наивно для человека, который на момент задавания вопроса был заместителем
[03:07:17.900 --> 03:07:24.260]  председателя правительства Российской Федерации. Ну, вот. Ну, то есть я не знаю, по каким-то причинам
[03:07:24.260 --> 03:07:30.860]  он, правда, сейчас им не является. И по-моему, по-моему, кем он сейчас является? А, главой
[03:07:30.860 --> 03:07:40.060]  международной шахматы Федерации, между прочим. Нет, ну вот. Ну ладно, впрочем. Впрочем, с другой
[03:07:40.060 --> 03:07:45.980]  стороны вопрос. Вот. Впрочем, с другой стороны, так он отвечал только в нарезке, поэтому, да. Ладно.
[03:07:45.980 --> 03:07:54.620]  Так вот. Ладно, давайте докажем теорию. Так. Ну, впрочем, если вам ее доказывали, вы так уже
[03:07:54.620 --> 03:07:57.580]  догадываетесь. Ну, впрочем, на самом деле, в общем-то, из того, что сказано, в общем-то,
[03:07:57.580 --> 03:08:03.900]  доказательства вывести почти все легко. Ну, я думаю, какие-то пункты уже просто очевидно следуют
[03:08:03.900 --> 03:08:13.120]  друг из друга, правда? Ну, например, из первого-второго все следует очевидно. Да, в общем-то, из третьего-
[03:08:13.120 --> 03:08:19.740]  первого тоже, потому что вот просто из того утверждения. То есть, в общем-то, самое интересное в этом
[03:08:19.740 --> 03:08:26.380]  доказательстве оказывается, как из второго следует третье. А следует предельно. То есть, в общем, более
[03:08:26.380 --> 03:08:31.380]  того, сейчас это будет конструктивный алгоритм. То есть, просто действительно алгоритм. То есть, как бы,
[03:08:31.380 --> 03:08:37.560]  если вы нашли каким-то образом в сети максимальный поток, то вы за бесплатно находите еще и минимальный
[03:08:37.560 --> 03:08:49.380]  разрез. Ну ладно, цена бесплатна. О от Е. Почему О от Е? Нет, ну это практически бесплатно, потому что
[03:08:49.380 --> 03:08:55.460]  есть подозрение, что быстрее, чем за В плюс Е вы, там вы, наверное, поток не найдете. Причем, от слова
[03:08:55.460 --> 03:09:01.620]  в принципе. Нет, собирая вперед, значит, говорю ставку. Значит, на текущий момент, в общем случае,
[03:09:01.620 --> 03:09:08.940]  в самом общем случае, поток, по-моему, быстрее, чем за В и Е не находится. Ну или Википедия об этом
[03:09:08.940 --> 03:09:17.620]  не знает. Так, вы уже настолько устали, что уже на автомате сейчас не идете это перепроверять.
[03:09:17.620 --> 03:09:30.060]  Нет, 1 в квадрат Е. Нет, 1 в квадрат Е, значит, там всякие префлоу-пуши и прочие три индусы,
[03:09:30.060 --> 03:09:38.820]  значит, это АВ куб. Значит, есть алгоритм ВЕ. Мы еще с вами увидим алгоритмы за ВЕ лог С и ВЕ лог В.
[03:09:38.820 --> 03:09:45.700]  Ну либо Денис по штабируем, либо Денис с линкатом. Да, ну у нас есть линкат, в чем не воспользоваться.
[03:09:45.700 --> 03:09:51.060]  Вот, но там сам по себе алгоритм ВЕ, это сильно более мощный алгоритм, может останется время,
[03:09:51.060 --> 03:09:57.100]  даже его заботаем. Но для этого нам еще придется с вами пожить и поработать еще, потому что там,
[03:09:57.100 --> 03:10:03.620]  да, но это очень красивая теория, тут она стоит того, чтобы ее хорошо изучать. А, нам еще надо
[03:10:03.620 --> 03:10:11.060]  про сочетание изучить, кстати, да. Да, ну вот, но это отдельно смешно, да. Вот, значит, 3, 1, 2,
[03:10:11.060 --> 03:10:20.580]  ну не совсем. Значит, смотрите, итак, 2, 3. Значит, доказательство звучит так. Значит, идея такая,
[03:10:20.580 --> 03:10:28.780]  запустим ДФС, допустим, мы нашли максимальный поток, запустим ДФС, просто вот конструктивный
[03:10:28.780 --> 03:10:37.620]  алгоритм из истока по не нулевым ребрам в остаточной сети. Ну, как мы уже предположили,
[03:10:37.620 --> 03:10:45.660]  как мы уже предположили, до Т мы не дойдем, поэтому валидно определить разрез, то есть,
[03:10:45.660 --> 03:10:55.260]  типа доля С это до чего дошли, доля Т до чего не дошли. Утверждение, все, это он. Доказательство. Ну,
[03:10:55.260 --> 03:11:00.500]  раз тут ни по какими ребрам нельзя пройти, значит, наверное, там F равно С у них везде, значит,
[03:11:00.500 --> 03:11:05.860]  получается, ну вот, по второму определению, да, вот можно так писать, да. То есть, во всех ребрах
[03:11:05.860 --> 03:11:11.540]  получается, то есть, во всех вот этих идущихся ребрах получается F равно С, значит, F от СТ равно
[03:11:11.540 --> 03:11:18.180]  С от СТ. Доказательство окончено. То есть, это реально конструктивный алгоритм поиска
[03:11:18.180 --> 03:11:28.020]  минимального разреза. Понимаете, да? Вот, то есть, вот такая красота, которая позволяет нам решать
[03:11:28.020 --> 03:11:37.060]  разные задачи, потому что задачи на самом деле, ну вот, задачи на самом деле, то есть, задачи на
[03:11:37.060 --> 03:11:45.060]  поток на самом деле бывают разные. Но сводятся они обычно к двум задачам. Либо к задачам вида
[03:11:45.060 --> 03:11:50.700]  построй сети, найди именно максимальный поток, и он тебе что-то даст. Классическим примером такой
[03:11:50.700 --> 03:11:57.460]  задачи является задача сочетания в двудольном графе. Ну, вы уже догадываетесь, да? Вот, ну,
[03:11:57.460 --> 03:12:06.860]  понятно, в чем задача? Что такое двудольный граф? Ну, что такое двудольный граф? Понятно, что такое
[03:12:06.860 --> 03:12:13.940]  просочетание? Просочетание просто набор ребер, у которых нет общих вершин попарно. И задача дан
[03:12:13.940 --> 03:12:18.780]  двудольный граф – найти максимальное просочетание, то есть, просочетание максимального размера. Как
[03:12:18.780 --> 03:12:41.100]  такую задачу решать? Элементарно. Значит, грызем еще два маркера. Тут все продумано, как эффективно
[03:12:41.100 --> 03:13:04.300]  грызть. О, точно. Чего? Господи, там грызут маркеры или что? О, господи, а почему именно в французской
[03:13:04.300 --> 03:13:15.100]  школе, что в других школах этого не делают или что? Да, господи, и что, узнали, что у некоторых
[03:13:15.100 --> 03:13:29.580]  людей нет косметики или что? Или, наоборот, у некоторых она есть. Я-то думал, это Босхо сделал там,
[03:13:29.580 --> 03:13:50.060]  там вот в этой издевательской картине. Ну, значит, идея такая. Как сказать про
[03:13:50.060 --> 03:13:55.780]  сочетание? Очень просто. Давайте построим вот такую сеть, то есть просто добавим исток, исток,
[03:13:55.780 --> 03:14:00.660]  везде пропускная способность один. У этих всех ребер тоже будет пропускная способность один,
[03:14:00.660 --> 03:14:06.500]  но строго направо. Вот так вот, вот так вот, вот так вот. Тоже один, один, один, один. Там один, один,
[03:14:06.500 --> 03:14:16.180]  один, один, один. Чего? Вот. И запустим поток. Ну, очевидно, что любой поток здесь задает про
[03:14:16.180 --> 03:14:19.860]  сочетание, любой про сочетание задает поток, поэтому максимальный поток, максимальное про
[03:14:19.860 --> 03:14:24.020]  сочетание радость. Мы об этом поговорим чуть позже, сейчас мы не будем в это отвлекаться,
[03:14:24.020 --> 03:14:29.300]  но, в принципе, алгоритм Куна, на самом деле, это просто вот этот алгоритм, просто более
[03:14:29.300 --> 03:14:35.060]  оптимально по Константе написанный. То есть можно алгоритм Куна там, конечно, выводить это,
[03:14:35.060 --> 03:14:40.180]  как там вас, то есть понятно, что обычно, скорее всего, когда вы изучали алгоритм Куна, то есть
[03:14:40.180 --> 03:14:45.660]  просто говорили терриба про сочетание максимально тогда и только тогда, когда нет удлиняющей цепи.
[03:14:45.660 --> 03:14:53.060]  Доказательства. Рассмотрим наше про сочетание, рассмотрим максимальное, там бла-бла-бла,
[03:14:53.060 --> 03:14:58.820]  вот удлиняющая цепь, но на самом деле, если вы знаете вот эту теорию, то это ее простое следствие,
[03:14:58.820 --> 03:15:05.020]  потому что любая удлиняющая цепь, как бы, любая удлиняющая цепь, это фактически вот такой путь
[03:15:05.020 --> 03:15:10.980]  от S до T в остаточной сети здесь. Но остается только это правильно написать, там еще какие-нибудь
[03:15:10.980 --> 03:15:16.380]  свойства, чуть позже, в какой-то момент мы этим займемся. Хотя, может, и сегодня займемся,
[03:15:16.380 --> 03:15:20.180]  что-то у меня идеи, может, я сегодня даже вас, пожалуй, и позадерживаю, пользуясь тем, что в
[03:15:20.180 --> 03:15:25.860]  следующий раз все равно ничего не будет. Не, не волнуйтесь, ничего мега сложного сегодня уже не
[03:15:25.860 --> 03:15:34.940]  будет, но просто по объему какие-то вещи рассказать придется. Это вот пример такой задачи, когда поток
[03:15:34.940 --> 03:15:41.660]  сам по себе что-то значит. Бывает задача, когда поток, когда, можно сказать, почти что-то такое,
[03:15:41.660 --> 03:15:45.900]  бывает задача, когда, скажем, каждой вершине может соответствовать не одно ребро в про сочетании,
[03:15:45.900 --> 03:15:53.100]  несколько. Ну, типичные задачи, знаменитые кубики. Ну, есть задача кубики. Значит, вам дано
[03:15:53.100 --> 03:15:58.300]  N кубиков. На каждом кубике, понятно, у вас там на шестиграньях написаны какие-то буквы, записаны
[03:15:58.300 --> 03:16:05.660]  какие, вправывается. Можно ли из этих кубиков сложить там какое-нибудь заданное слово? Ну,
[03:16:05.660 --> 03:16:14.020]  задачу можно свести прям по сочетанию, да, то есть там, допустим, там как можно свести, то есть из
[03:16:14.020 --> 03:16:20.460]  каждого кубика проводим ребра во все позиции слова, на которых можно поставить эту букву, да. Но
[03:16:20.460 --> 03:16:27.900]  приятность в том, что в этой доле можно оставить всего 26 вершин, потому что здесь можно ставить
[03:16:27.900 --> 03:16:34.300]  прописную способность не один, а сколько раз эта буква встречается в слове. Понимаете, да? То есть,
[03:16:34.300 --> 03:16:38.820]  в общем-то, есть вариант карточки, когда у вас не кубики, а карточки там двухсторонние, и тогда
[03:16:38.820 --> 03:16:43.940]  вообще там, оказывается, там, может быть, там любая длина слова, любое количество карточек,
[03:16:43.940 --> 03:16:54.820]  а там сеть в итоге все равно, тут размер получается там 676 пополам, а тут 26. Вот, понимаете, да? Вот,
[03:16:54.820 --> 03:17:00.900]  вот есть такой пример. То есть, ну, самый издевательский пример задачи на эту тему,
[03:17:01.140 --> 03:17:10.100]  вот мне помнится такой, значит, там Петя Нумизмат. Так, ну, на всякий случай,
[03:17:10.100 --> 03:17:17.060]  знаете, такой Нумизмат, да? А то мало ли, да. Вот, то есть, он действительно коллекционирует монетки,
[03:17:17.060 --> 03:17:25.060]  значит, он хочет собрать, значит, всего есть там n монета, n типов монеток, ну вот, и, значит,
[03:17:25.060 --> 03:17:30.260]  он хочет собрать как можно больше различных типов монет. Значит, как это происходит? Присходит
[03:17:30.260 --> 03:17:34.740]  очень просто. Помимо Пети есть еще коллекционеры, и про каждого коллекционера, включая Петю,
[03:17:34.740 --> 03:17:41.420]  известно, сколько монет, какого типа у него есть. Значит, Петя, значит, понял, что он может
[03:17:41.420 --> 03:17:47.060]  часто ходить под коллекционером и меняться с ними монетку на монетку. Но при этом, оказывается,
[03:17:47.060 --> 03:17:53.140]  что коллекционеры люди ушлые и меняются только, когда им выгодно. Что такое выгодно? Выгодно это,
[03:17:53.140 --> 03:17:58.020]  когда они отдают монетку, которая у них еще есть, и взамен они получают монетку, которую у них
[03:17:58.020 --> 03:18:10.500]  еще нет. Да, именно так. Вот. Но, соответственно, если у них пять таких монеток, то они, значит,
[03:18:10.500 --> 03:18:16.700]  четыре из них могут выменить, но последние уже не отдадут. Вот. И у вас возникает такая задача.
[03:18:16.700 --> 03:18:22.980]  Ну, ограничение там, как всегда, по соточке. Спрашивается, как, значит, как Пети действовать,
[03:18:23.860 --> 03:18:31.900]  как Петя организовать обмены так, чтобы в итоге получить как можно большее число монеток,
[03:18:31.900 --> 03:18:42.700]  различных монеток, различных типов. Вот. Спрашивается.
[03:18:52.980 --> 03:19:00.380]  Нет. Нет. Ну, скажем так, теоретически мы можем это сделать, то практически непонятно зачем.
[03:19:00.380 --> 03:19:07.740]  Если моя нота. Да. Ну, вот. Нет, на самом деле, да, есть подозрение, что просто в этом нет
[03:19:07.740 --> 03:19:12.420]  необходимости, потому что легче. Но тут возникает вопрос, как построить адекватную сеть, чтобы она
[03:19:12.420 --> 03:19:37.700]  что-то это притировала. Да, вот тут. Прямо до ли так? А влево еще?
[03:19:42.420 --> 03:20:04.140]  Так, хорошо, давайте типы. Так, это типы монеток. Так, а тут коллекционеры. Так. Ну, проводим, да.
[03:20:04.140 --> 03:20:19.860]  Так. Ну, проводим действительно. Сколько таких монеток? Так, то есть проводим один, если такой
[03:20:19.860 --> 03:20:36.180]  монетки у коллекционера нет. Ну, сейчас, ну, смотрите, мысль правильная. Если монетки у коллекционера нет.
[03:20:36.180 --> 03:20:50.980]  Вот. Хорошо. Обратно. Ну, да. То есть, потому что смысл будет в том, что прохождение по этому
[03:20:50.980 --> 03:20:56.500]  и обозначает, что мы решили отдать этому коллекционеру вот такую монетку. А взамен мы
[03:20:56.500 --> 03:21:05.900]  получаем какую-то другую монетку размера там СК-1. Ну, КЛ там точнее. Ну, типа какая монетка,
[03:21:05.900 --> 03:21:13.420]  какой коллекционер, да? Это типа сколько у этого коллекционера таких лишних монеток? Нет,
[03:21:13.420 --> 03:21:19.180]  правильно. Остается только, смотрите, добавить и сток, в котором мы в каждую монетку рисуем,
[03:21:19.860 --> 03:21:29.380]  то есть, допустим, сколько у нас таких монеток есть? Нет, на этот раз стока, да. То есть АКТ,
[03:21:29.380 --> 03:21:37.780]  да? Именно стока. Нет, потому что делаться это будет так. Вводим еще сток и ребра теперь вводим так.
[03:21:37.780 --> 03:21:44.180]  И с каждой монетки отправляем, значит, в сток пропускную способность 1. То есть, это означает,
[03:21:44.180 --> 03:21:48.300]  что мы решили, что это то, что мы отправили в Т, это означает, что такую монетку мы себе
[03:21:48.300 --> 03:21:53.060]  сохранили. То есть, это будет означать, что если какая-то монетка у нас уже есть, то одну монетку
[03:21:53.060 --> 03:21:59.140]  можно прямо через это ребро сразу в Т отправить. А можно не отправить. Но здесь заметим следующее,
[03:21:59.140 --> 03:22:05.580]  да, что тогда оказывается, что если поток как бы разбит на пути, то каждый путь отполучает цепочку
[03:22:05.580 --> 03:22:10.900]  обменов. Да, здесь, конечно, нужно отметить, да, что вообще, ну, во-первых, да, здесь, конечно,
[03:22:10.900 --> 03:22:17.860]  интуитивно должно быть очевидно, что, действительно, что у потока есть такая вещь, как декомпозиция. То
[03:22:17.860 --> 03:22:24.740]  есть, любой поток можно представить в виде набора путей, сумма которых представляет этот поток.
[03:22:24.740 --> 03:22:31.860]  Да, но, да, утверждение, действительно, так особо не верно. То есть, на самом деле,
[03:22:31.860 --> 03:22:38.540]  теория моей декомпозиции звучит так, что любой поток можно разбить на не более, чем модуль Е,
[03:22:38.540 --> 03:22:53.780]  путей и циклов. Понятно, да? Да, только надо это аккуратно доказывать. Аккуратное доказательство
[03:22:53.780 --> 03:23:02.180]  звучит так. Ну, допустим, у нас сейчас поток величины больше нуля. Тогда мы возьмем,
[03:23:02.180 --> 03:23:07.660]  ну, это, кстати, реальный алгоритм, в принципе, так можно писать. Значит, берем S и просто говорим так,
[03:23:07.660 --> 03:23:13.300]  раз поток величины больше нуля, значит, наверное, существует ребро, где тут течет что-то нетривиальное,
[03:23:13.300 --> 03:23:19.660]  правда? Так, теперь берем вот эту вершину. Так, раз в нее что-то втекло, значит, из нее что-то вытекло.
[03:23:19.660 --> 03:23:30.380]  Так, значит, из нее найдется ребро с больше нуля. Вот. И так далее. Просто жадно берем, берем,
[03:23:30.660 --> 03:23:36.060]  и тогда у нас два варианта, чем может все закончиться. Либо мы придем в вершину T,
[03:23:36.060 --> 03:23:41.660]  это значит, мы нашли путь. Давайте вычтем из этого пути поток так, чтобы какой-то из этих ребер
[03:23:41.660 --> 03:23:51.700]  обнулилось. И будем повторять операцию. Или второй вариант. Мы неожиданно зациклились. Но если мы
[03:23:51.700 --> 03:23:55.540]  зациклились, то значит, берем этот цикл и тоже вычитаем поток так, чтобы одно из этих ребер
[03:23:55.540 --> 03:24:01.140]  обнулилось. То есть получается один путь или цикл. Получается, мы нашли за там сколько. Вот В плюс Е.
[03:24:01.140 --> 03:24:11.420]  Повторяя операцию так Е раз, можно декомпозировать поток. Ну ладно, по модуле технического момента. На
[03:24:11.420 --> 03:24:18.180]  самом деле это мы дойдем до ситуации, когда у нас величина потока, скажем так, меньше либо равна нуля,
[03:24:18.180 --> 03:24:28.900]  а поток бывает отрицательный, кстати. Ну а что, собственно, что вам мешает сделать вот такой поток
[03:24:28.900 --> 03:24:44.780]  интеллектуальный? Да, это поток величины минус один, поздравляю. Формально, да, это нормально. То есть,
[03:24:45.140 --> 03:24:49.860]  если вычитать максимальный поток, то выгоднее было бы просто, чтобы у нас из Канады в США никто не
[03:24:49.860 --> 03:24:59.540]  ездил. Вот, если мы из США в Канаду хотим побольше потока сделать, да. Вот, поэтому так. Ну вот,
[03:24:59.540 --> 03:25:06.300]  но если у нас есть поток отрицательной стоимости, то мы можем декомпозицию запихнуть и пути от ТВС
[03:25:06.300 --> 03:25:12.260]  логичным образом. Это приведет нас к тому, что у нас наконец в какой-то момент наступит поток
[03:25:12.260 --> 03:25:20.180]  величины ноль. Но, к сожалению, это не значит, что никто никуда не ездит. К сожалению, да,
[03:25:20.180 --> 03:25:24.620]  формально говоря, да, как мы уже поняли, у нас тут кто-то по кругу ездит. Да, кстати,
[03:25:24.620 --> 03:25:31.500]  поток величины, кстати, определение. Слово такое умное, циркуляция. Что такое циркуляция? Нет,
[03:25:31.500 --> 03:25:38.900]  циркуляция это поток величины ноль. Все, это прямо определение. Вот, то есть, да, то есть,
[03:25:38.980 --> 03:25:48.340]  этот поток, да, теорема звучит там, что циркуляцию можно разбить на Е, не более чем Е циклов. Доказательство
[03:25:48.340 --> 03:25:55.060]  абсолютно тоже. Рассмотрим ребро какое-нибудь, по которому течет что-то больше нуля, да. Заметим,
[03:25:55.060 --> 03:25:58.740]  что раз у нас тут втекает больше нуля, значит, вытекает больше нуля. Заметьте, так как поток
[03:25:58.740 --> 03:26:03.740]  величины ноль, то эта вершина может быть даже С или Т, это все равно работает. Тут больше нуля,
[03:26:03.740 --> 03:26:07.820]  тут больше нуля, но идем-идем-идем, рано или поздно зацикливаемся. Не обязательно в этой
[03:26:07.820 --> 03:26:15.420]  точке, но все, цикл нашли, вычли, повторили операцию. В принципе, да, то есть, там классическая задача
[03:26:15.420 --> 03:26:21.060]  есть, найдите максимальный поток и декомпозируйте его, и там вот эта последняя фаза не обязательно,
[03:26:21.060 --> 03:26:28.380]  потому что на величину потока циклы не оказывают влияния. Но в общем случае иметь
[03:26:28.380 --> 03:26:35.660]  в виду надо, что циклы есть. Вот, начнете декомпозиция, то есть вот, то есть эта декомпозиция,
[03:26:35.660 --> 03:26:40.220]  теперь если декомпозировать вот такой поток, то можно заметить, что каждой единицы потока
[03:26:40.220 --> 03:26:45.420]  будет соответствовать просто путь обмена, то есть путь будет звучать так, мы взяли эту монетку,
[03:26:45.420 --> 03:26:50.540]  обменяли ее у этого коллекционера на эту монетку, эту монетку мы в свою очередь понесли сюда,
[03:26:50.540 --> 03:26:57.860]  ну и потом в конце дошли. То есть вот такая красота. То есть это вот такие классические задачи,
[03:26:57.860 --> 03:27:09.700]  в которых поток нам нужен именно поток. Есть, конечно, классические задачи, в которых нужен
[03:27:09.700 --> 03:27:22.540]  именно разрез. Так, внимание, вопрос, надо делать перерыв. Нет, нет, нет, мы же уже сказали,
[03:27:22.540 --> 03:27:29.380]  что нет, если думать, что я сейчас отпущу на 10 там в 13.30, то нет. Значит, смотрите, план у меня такой,
[03:27:29.380 --> 03:27:35.260]  по модуле того, что я хочу рассмотреть еще парочку задач, я сегодня хочу рассмотреть внезапно
[03:27:35.260 --> 03:27:40.940]  минкост. Да, редкий случай, конечно, да, минкост обычно, конечно, рассказывается в самом, там,
[03:27:40.940 --> 03:27:45.420]  после всех остальных потоков, но все-таки мне пришло в голову, что минкост можно рассказать
[03:27:45.420 --> 03:27:49.820]  и сегодня, и он будет сегодня в тему. Потому что мы и Джонсона рассмотрели, собственно, технологию
[03:27:49.820 --> 03:27:56.900]  форта Фулкерсона, а там мы, собственно, сильно далеко-то, в общем-то, и не уйдем. Вот, так же,
[03:27:56.900 --> 03:28:05.060]  соответственно, но это будет означать, что там, насколько-то я вас задержу. Да, вот мне тоже так
[03:28:05.060 --> 03:28:11.580]  кажется, поэтому давайте перерывчик. Значит, смотрите, итак, давайте, значит, еще одна задачка.
[03:28:11.580 --> 03:28:18.780]  Теперь задачи на разрез. Ну, на самом деле, разные задачи на разрез есть, но, значит, я рассмотрю
[03:28:18.780 --> 03:28:25.100]  такую. Она, может быть, немножко теоретическая, но, значит, такая веселая. Называться она у нас
[03:28:25.100 --> 03:28:36.380]  будет яростью команды. Да, извините, кто слушал лекцию, да, ничего нового не будет. Ну, что поделать.
[03:28:36.380 --> 03:28:45.180]  Значит, смотрите. Да, ладно. Значит, смотрите. Значит, задача такая. Значит, смотрите внимательно.
[03:28:45.180 --> 03:28:56.140]  Представьте себе, что у вас есть стартап. Ну, для многих, на самом деле, это не такое уж умозрительное
[03:28:56.140 --> 03:29:02.020]  заключение. Вот кто-то захочется бабахать в свою компанию. Вот. Ну, что такое стартап? Ну,
[03:29:02.020 --> 03:29:08.180]  обычно поначалу это означает, что нас тут там три человека. Ну, вот, то есть, допустим, там,
[03:29:09.140 --> 03:29:15.860]  то есть нас три человека, и мы все вместе все делаем. То есть, причем все делают фактически все. То есть,
[03:29:15.860 --> 03:29:20.340]  типа, там все все знают. Фактически, мы там, наш офис представляет собой маленькую комнатку,
[03:29:20.340 --> 03:29:29.700]  там, с одним столом вокруг которого мы сидим, и, собственно, работаем. Все. Ну, скажем так, более
[03:29:29.700 --> 03:29:35.780]  точная отсылка будет на Сирал Жуки, на самом деле. Нет, там в команде есть такой главный, который там
[03:29:35.780 --> 03:29:40.780]  просто командует. Есть дизайнер, который все дизайнирует. Есть программист, который все кодит.
[03:29:40.780 --> 03:29:47.860]  Вот. Ну, там больше похоже на правду, хотя только у нас все все кодят, все работают. Ну, короче,
[03:29:47.860 --> 03:29:56.380]  делаем продукт. Вот. Как это иногда случается, стартап оказался успешным. Да, такое тоже бывает.
[03:29:56.380 --> 03:30:05.300]  Вот. А что происходит с компанией, когда она становится успешной? Да, логично она расширяется.
[03:30:05.300 --> 03:30:11.660]  И вот у вас уже четыре человека, пять человек, шесть человек, десять человек, двадцать человек.
[03:30:11.660 --> 03:30:18.780]  Не-не, ну, это не совсем. Нет, тут уже аналогия совсем неуместна, потому что, очевидно,
[03:30:18.780 --> 03:30:27.700]  они не за одним компом работают. Да, это важно. Вот. Тем более, что, да, тем более, что, как бы,
[03:30:27.700 --> 03:30:32.740]  еще одна разница, если серьезно, между, как бы, ICPC и, собственно, такими стартапом, тем,
[03:30:32.740 --> 03:30:37.740]  что задачи, как бы, ставите вы себе сами и тестируете, кстати, тоже, а не вот ICPC.
[03:30:37.740 --> 03:30:44.620]  Если вам дали ICPC, значит, как бы, жюри ее решили и хотят, чтобы вы ее решили не хуже. Ну, вот.
[03:30:44.620 --> 03:30:50.940]  Соответственно. Вот. А тут немножко другое. Вот. Но тут не важно. Двадцать человек, ну, пока еще,
[03:30:50.940 --> 03:30:56.260]  до какого-то момента, в принципе, все вместе, всей толпой работаем, все хорошо. Но когда уже человек
[03:30:56.260 --> 03:31:01.700]  стало уже пятьдесят сто, вы уже понимаете, что, да, вы достигли такого уровня, когда надо что-то
[03:31:01.700 --> 03:31:06.500]  с этим делать. То есть все-таки, когда совсем уже все все знают и все в одной толкучке, это уже
[03:31:06.500 --> 03:31:13.020]  печально. Ну, поэтому решили. Давайте все пока постепенно. Давайте начнем. Решили вы начать
[03:31:13.020 --> 03:31:22.220]  с малого. Решили вы разбить ваш отдел на два отдела. В одном у нас будут пражаромисты,
[03:31:22.220 --> 03:31:37.660]  а в другом тестировщики. Вот. Так. Ну и вы стали думать. Интересно, как же разбить людей на
[03:31:37.660 --> 03:31:45.220]  программистов и тестировщиков? А у вас же, как это часто бывает, у вас все люди хорошие, все могут
[03:31:45.220 --> 03:31:51.060]  программировать, все могут тестировать. Вот. Поэтому, но с другой стороны, как бы понятно, что в такой
[03:31:51.060 --> 03:31:58.460]  компажке обычно все всех любят и так далее. Но вы, по крайней мере, всех любите. И вот, все с вами
[03:31:58.460 --> 03:32:07.020]  давать. Поэтому вы решили их спросить. И, значит, вы решили вопрос и привели следующее. Оказалось,
[03:32:07.020 --> 03:32:15.500]  что некоторые люди хотят стать программистами. Что такое хотят? Это означает, вот какой-нибудь
[03:32:15.500 --> 03:32:20.420]  человек говорит, я хочу быть программистом. А если ты будешь тестировщиком? Ну я могу стать
[03:32:20.420 --> 03:32:33.860]  тестировщиком, но я буду плакать. Я буду плакать, и мой уровень плача, а В больше 0. Вот. Но там есть
[03:32:33.860 --> 03:32:41.540]  слез в единицу времени. Но выяснилось, что некоторые люди, оказывается, хотят быть тестировщиками.
[03:32:41.540 --> 03:32:50.380]  И оказывается, но вот. И они тоже будут плакать, если сделают программистами. Да некоторые будут
[03:32:50.380 --> 03:32:56.700]  плакать и так, и так. Но это уже ладно. Не, казалось бы, да. Все просто. Давайте, кто хочет стать
[03:32:56.700 --> 03:32:59.820]  программистом, будет программистом. Кто хочет стать тестировщиком, будет тестировщиком. Плакать
[03:32:59.820 --> 03:33:13.740]  никто не будет. Да, все положительно. Нет, наоборот. Этот будет плакать, только если он станет
[03:33:13.740 --> 03:33:21.140]  тестировщиком. Теоретически, да. Может быть и то, и то. Тогда он будет плакать всегда, потому что он
[03:33:21.140 --> 03:33:32.100]  не любит, когда ему ограничивают его поле деятельности. Чего? На ваше усмотрение. Я узнал,
[03:33:32.100 --> 03:33:38.780]  что кто-то будет плакать. В общем, я узнал, что кто-то не будет плакать. Пожалуйста, как нужно
[03:33:38.780 --> 03:33:46.580]  компании, так я готов делать. Я нормальный футболист. Правильно. Если я нужен на правом
[03:33:46.660 --> 03:33:52.900]  фланге полузащиты, значит я буду бегать на правом фланге полузащиты, не вопрос. Но выяснилось,
[03:33:52.900 --> 03:34:02.780]  но если бы это было все, оказались еще маленькие спецэффекты. Оказывается, некоторые люди дружат
[03:34:02.780 --> 03:34:11.060]  между собой, что нередко наблюдается в компаниях, да и некоторых ECPC-командах тоже. Да, случается
[03:34:11.060 --> 03:34:20.540]  такое. Выясняется, что есть некоторые такие пары товарищей C и D, которые говорят,
[03:34:20.540 --> 03:34:32.060]  мы хотим работать вместе. Если нас разнесут по разным отделам, мы будем плакать. С с индексом
[03:34:32.060 --> 03:34:44.700]  CD. Нет, ладно, не так. Давайте это x, y. Мы будем вот так плакать. Вот так вот. Но и на этом мы
[03:34:44.700 --> 03:34:54.220]  не остановились. Оказывается, вот совсем печально. Есть такие вот странные отношения. Я могу быть
[03:34:54.220 --> 03:35:01.140]  программистом, я могу быть тестировщиком. В принципе, это нормально. Но если вот эта скотина меня
[03:35:01.180 --> 03:35:11.900]  будет тестировать, я взвою. То есть вот какой-нибудь человек z заявляет, что я не хочу, чтобы меня
[03:35:11.900 --> 03:35:20.460]  тестировал w. Вот если я окажусь программистом, а он будет тестировщиком, я взвою на уровне dzv.
[03:35:20.460 --> 03:35:29.460]  Да, сами цифры разные. То есть у кого-то это будет Дениска типа, ну ладно. А кто-то будет
[03:35:29.860 --> 03:35:38.060]  на 10, кто-то на 100, а кто-то прямо на плюс бесконечность. Я тут все разнесу вообще отсюда.
[03:35:38.060 --> 03:35:44.460]  Просто я возьму это пулемет и разнесу весь ваш офис. Начиная с серваков,
[03:35:44.460 --> 03:35:56.500]  на котором хранится весь код. Ну 10, 9. Хотя, кстати, нет. Лайфхак на самом деле такой,
[03:35:57.060 --> 03:36:01.420]  действительно лайфхак, который помогает в задачах на потоке. Если вам иногда запрещается делить
[03:36:01.420 --> 03:36:09.740]  вершины каким-то образом, то что такое запретить? Это объявить за это бесконечный штраф,
[03:36:09.740 --> 03:36:17.020]  стандартный метод. Можно не только в потоках использовать, но вот так. Но как это использовать,
[03:36:17.020 --> 03:36:21.620]  давайте сейчас смотреть. Вот такие запросы он собрал. Есть там сколько-то таких пар,
[03:36:21.620 --> 03:36:26.460]  столько таких запросов. Ну и теперь задача. Как теперь разбить на два отдела так,
[03:36:26.460 --> 03:36:42.660]  чтобы суммарный плач был как можно меньше. Да, могут быть люди, которым абсолютно все равно,
[03:36:42.660 --> 03:36:56.700]  которые вообще ничего не касается, они готовы на все. Ну допустим. Хотя,
[03:36:56.700 --> 03:37:01.980]  честно скажу, для нашего решения того, которого я предлагаю рассказать, это в общем-то не принципиально.
[03:37:01.980 --> 03:37:21.300]  Ну на ваше усмотрение, пожалуйста. Да какая разница, господи.
[03:37:21.300 --> 03:37:29.460]  Не, ну суть одна, хотя в данном случае может быть лучше каждый запрос отдельно
[03:37:29.460 --> 03:37:33.260]  рассматривать. Просто меньше запросов, в итоге будет там меньше объема решения.
[03:37:33.260 --> 03:37:41.540]  Потому что тут возникает вопрос, а с какой точки зрения вообще думать? Ну,
[03:37:41.540 --> 03:38:00.660]  соточка, ну там 50-100, запросов, ну тоже какие-то мелкие. Ну ладно, в общем-то это неважно,
[03:38:00.660 --> 03:38:05.900]  потому что мы пока вообще не знаем ни одного алгоритма поиска потока. И сегодня в общем-то
[03:38:05.900 --> 03:38:13.580]  не узнаем. Нет, ну ладно, у нас есть один алгоритм. Нет, смотрите, алгоритм, а вот я забыл сказать,
[03:38:13.580 --> 03:38:19.820]  алгоритм Форда, нет, вот теорема Форда Фалкерсона не дала нам еще ни одного алгоритма. Она нам дала
[03:38:19.820 --> 03:38:25.180]  то, что мы будем называть метод Форда Фалкерсона. Значит, внимание, это вот важная терминология,
[03:38:25.180 --> 03:38:34.900]  метод Форда Фалкерсона, то есть вот так, метод FF. То есть он будет заключаться как while в
[03:38:34.900 --> 03:38:57.900]  остаточной сети есть путь по ненулевым ребрам, по ненулевым ребрам, там найти путь, пустить по нему
[03:38:57.900 --> 03:39:14.940]  поток. Это почему я называю метод Форда Фалкерсона, а не алгоритм, потому что он вообще не говорит о том,
[03:39:14.940 --> 03:39:22.060]  а как мы этот путь идем, то есть какие небеса и какой факт нам будут это обеспечивать. Потому что
[03:39:22.060 --> 03:39:30.780]  если искать этот путь тупо ДФСом, то может так случиться, что этот while будет работать бесконечно
[03:39:30.780 --> 03:39:38.620]  долго. Нет, если, конечно, для этого нужно, чтобы профессиональные способности были иррациональны.
[03:39:38.620 --> 03:39:43.780]  Да, там просто я не буду сейчас на это представлять, там в Википедии есть короткий пример, который
[03:39:43.780 --> 03:39:50.340]  действительно зацикливает алгоритм. Более того, сразу скажу, что добавив пару ребер, и оказывается,
[03:39:50.340 --> 03:39:56.540]  что этот алгоритм не просто не будет находить, никогда не закончится, он еще и сходится к правильному
[03:39:56.540 --> 03:40:02.380]  ответу не будет. То есть, конечно, была бы мечта, что давайте в какой-то момент остановимся и скажем,
[03:40:02.380 --> 03:40:09.180]  что это почти правильный ответ. Нет, не работает. Нет, ну смотрите, просто допустим, у вас есть сеть,
[03:40:09.180 --> 03:40:14.220]  на которой ответ сходится, а давайте в эту сеть еще рядышком там ребро найдем, и пусть этот ДФС
[03:40:14.220 --> 03:40:20.900]  от ребра никогда не видит. Да, поэтому вот получается, что сходимости никогда не будет.
[03:40:20.900 --> 03:40:29.700]  Это уже другой вопрос. Ну, в принципе, да, то есть, первый алгоритм, обычно который вас
[03:40:29.700 --> 03:40:42.700]  вызывает реально алгоритм, это алгоритм Эдмонса Карпа, допустим, Эдмонса Карпа. Этот алгоритм у нас
[03:40:42.700 --> 03:40:54.340]  работает, то есть, в этой терминологии это метод ФФ, СБФ, совершенно верно. То есть, мистическая
[03:40:54.340 --> 03:41:01.180]  терминология заключается в том, что этот алгоритм работает за ВЕ квадрат. Сегодня мы не будем доказывать
[03:41:01.180 --> 03:41:06.220]  эту теорему, мы ее докажем в следующий раз. Я думаю, когда мы будем обсуждать это вкупе
[03:41:06.220 --> 03:41:14.740]  с алгоритмом Диница, это будет более к месту. То есть, пока просто можете считать, что вот работает
[03:41:14.740 --> 03:41:28.900]  вот так. В этом смысле у Диница тоже самое. Формально он работает за В квадрат Е, но в
[03:41:28.900 --> 03:41:32.260]  подавляющем большинстве случаев на самом деле он работает быстрее, причем на этот раз у нас
[03:41:32.260 --> 03:41:40.820]  будет уже доказательство, потому что там две теории в виде просто двух теорий Корзанова,
[03:41:40.820 --> 03:41:46.500]  на самом деле, которые будут говорить про целочисленные сети и так далее. Но я просто, скажем так,
[03:41:46.500 --> 03:41:51.540]  почему Минкост хочу сегодня обсуждать? Потому что логика Минкоста, она близка к логике Хордафу
[03:41:51.540 --> 03:42:00.860]  Фликсона, а логика Диница и Эдмонса Карпа, она тоже общая, но другая. То есть, там уже какие-то
[03:42:00.860 --> 03:42:06.100]  слоистые сети надо выводить и так далее. Поэтому я хочу это вынести в следующий раз, чтобы тоже
[03:42:06.100 --> 03:42:17.060]  объединить скоп. Но вернемся вот к этому. Допустим, у нас размер графа такой, что там, допустим,
[03:42:17.060 --> 03:42:27.940]  поток зайдет. Спрашивается, как же нам теперь это сделать? Не линкат, а минкат. То есть, на самом
[03:42:27.940 --> 03:42:31.460]  деле, это задача на поиск минимального разреза. Надо построить такую сеть, чтобы минимальный
[03:42:31.460 --> 03:42:36.060]  разрез в ней был ответом. В данном случае это делается наиболее простым образом. Давайте построим
[03:42:36.060 --> 03:42:41.140]  такую сеть, что пропускная способность любого разреза будет соответствовать разбиению на
[03:42:41.140 --> 03:42:48.580]  программистов и тестировщиков. Вот пусть программисты у меня будут доля S, а тестировщики доля T. Вот я
[03:42:48.580 --> 03:42:55.340]  специально заблагодарил их зелененьким, красненьким нарисовал. И вот теперь давайте думать, как бы
[03:42:55.340 --> 03:43:01.300]  нам сделать так, что если вот эта вершина окажется в доле T, то в разрезе оказывались лишние АВ единиц
[03:43:01.300 --> 03:43:10.060]  пропускной способности. А если нет, то нет. Да, абсолютно верно. Давайте из вершины S,
[03:43:10.060 --> 03:43:15.540]  фиктивной вершины, ну не фиктивной, а отдельной вершины S, добавим ребро в эту вершину пропускной
[03:43:15.540 --> 03:43:29.140]  способности АВ. А есть вот. А есть вот это. БУ. То есть это вот для стока, наоборот. То есть,
[03:43:29.140 --> 03:43:40.700]  если она окажется в доле P, то как раз ребро пересчет разрез. Чего? Да. Что делать с друзьями?
[03:43:40.700 --> 03:43:49.420]  Вот смотри, тут тонкая разница. Так, да, здесь нам придется пустить оба ребра пропускной способности
[03:43:49.420 --> 03:43:58.340]  C и X. Тогда, смотрите, тогда если они окажутся в разных долях, то в разрезе окажется ровно одно
[03:43:58.340 --> 03:44:02.980]  из этих ребр. Обратите внимание, ровно одно, потому что ребро из доли T в долю S в пропускной способности
[03:44:02.980 --> 03:44:11.700]  не учитывается. И это вот тонкая разница. Потому что что мы делаем для вот ZV? Да, мы проводим ровно
[03:44:11.700 --> 03:44:20.180]  одно ребро. Вот такое. Вот пропускной способности DZV. То есть видите, оно получается включается именно,
[03:44:20.180 --> 03:44:26.580]  когда Z программиста W тестировщик. Если наоборот, Z тестировщик W программиста в разрез не
[03:44:26.580 --> 03:44:34.900]  включается. Понимаете, да? Ну, если они в одной доле, то тем более. Вот такая получается,
[03:44:34.900 --> 03:44:40.260]  получается вот таким простым образом вы построили сеть. В этой сети любой пропускной способность
[03:44:40.260 --> 03:44:44.540]  любого разреза, это просто плач, который получится здесь разбить именно так, остается только найти
[03:44:44.540 --> 03:44:50.700]  минимальный разрез. То есть задача, формально говоря, не совсем корректно даже говорить,
[03:44:50.700 --> 03:44:56.180]  что это задача на поток. Это задача на разрез. Потому что поток, это задача на поток только лишь в том
[03:44:56.180 --> 03:45:01.820]  плане, что вы ищете минимальный разрез через, там с помощью поиска максимального потока. То есть
[03:45:01.820 --> 03:45:05.900]  если вы найдете, научитесь искать минимальный разрез каким-то другим способом, то в общем-то и
[03:45:05.900 --> 03:45:11.980]  поток вам не понадобится. Вот. То есть таких вот задач на самом деле много. То есть есть там разные
[03:45:11.980 --> 03:45:17.540]  технические задачи. Вот. Ну одна из таких задач, классическая задача, это знаменитая задача
[03:45:17.540 --> 03:45:25.100]  про мотан, раз уж об этом зашла речь. А вот давайте, кстати, да. А ну-ка, кто сталкивался с задачей про мотан?
[03:45:25.100 --> 03:45:39.780]  Да ладно. А как вы потоки изучали без задачи про мотан? Нет, задача мотан. По-моему,
[03:45:39.780 --> 03:45:45.060]  задачу не переформулируют. Нет, она там во всех там, во всех Тинькоффах, там она тоже так-так
[03:45:45.060 --> 03:45:51.700]  идет по длине. Там нет смысла переформулировать. Ну да, про профессора, который, собственно, у которого
[03:45:51.700 --> 03:45:57.500]  там есть какие-то темы, которые зависят друг от друга, который хочет тоже какие-то включить. Да,
[03:45:57.500 --> 03:46:01.260]  вот давайте вспоминать. Вот знаменитая задача про мотан. Ну она просто везде называется мотан.
[03:46:01.260 --> 03:46:08.620]  Значит, задача звучит так. Жил-был профессор, который составляет курс по, ну допустим, мотану.
[03:46:08.620 --> 03:46:16.540]  Значит, составляет курс по мотану. И он думает, значит, какие-то темы он, значит, думает, что есть у
[03:46:16.540 --> 03:46:23.540]  него теоретически n тем, которые мог бы он рассказать. Вот. Но он не хочет рассказывать прям все. Почему?
[03:46:23.540 --> 03:46:30.820]  Потому что у тем есть полезность. Полезность бывает как положительная, как так и отрицательная, а
[03:46:30.940 --> 03:46:45.460]  бывает и нулевая. Он, конечно, хочет сделать так, чтобы курс был максимально полезен. Вот. Но маленькая
[03:46:45.460 --> 03:46:52.380]  проблемка. Хотя, да, если бы я в терминах КВН и шутер, конечно, это было бы точнее. Да, ну ладно. Вот.
[03:46:52.380 --> 03:46:57.740]  Ну ладно, пока в терминах мотанализа звучит так. Но выясняется, что иногда одно без другого не
[03:46:57.740 --> 03:47:04.100]  работает. То есть выясняется, что для некоторых пар тем там z и w выясняется, что если ты хочешь
[03:47:04.100 --> 03:47:13.700]  рассказать тему w, будь добр и рассказать тему z. То есть иначе просто нельзя. Но там нельзя
[03:47:13.700 --> 03:47:18.620]  рассказать, действительно, что такое производная, не объяснившую, что такое функция, например. Да,
[03:47:18.620 --> 03:47:25.540]  так себе пример, но соответственно. Вот. То есть вот что-то вот такое должно быть. То есть может
[03:47:25.540 --> 03:47:31.020]  быть, конечно, эта тема прям будет тупая, но вот ее надо проговорить, потому что потом вот. Вот. И
[03:47:31.020 --> 03:47:35.900]  вот. И у него есть таких несколько зависимостей. Ну там ограничения, там были что-то типа, по-моему,
[03:47:35.900 --> 03:47:42.060]  200 вершин и тысяча зависимостей. Вот. И у каждой темы, например, есть полезность. Теперь задача,
[03:47:42.060 --> 03:48:00.700]  как выбрать подмножество так, чтобы было хорошо. Нет, время вообще не причем. Просто, да, просто
[03:48:00.700 --> 03:48:04.420]  набор тем. Он может рассказать, причем интересно, что он в курсе, может рассказать вообще про хоть
[03:48:04.420 --> 03:48:10.460]  все темы, может рассказать ноль. То есть ограничения на количество тем у него нет. Ну потому что в
[03:48:10.460 --> 03:48:14.100]  зависимости от этого от этого он там, видимо, пойдет в учебную часть и будет говорить, сколько там мне
[03:48:14.100 --> 03:48:29.300]  парк неделю надо. Допустим, хотим максимизируем полезность. Такая техническая задача такая. Так,
[03:48:29.300 --> 03:48:49.540]  а именно где то же самое. Так. Так, ну хорошо. Сейчас тут надо оговориться о том,
[03:48:49.540 --> 03:48:59.620]  что мы считаем штрафом тогда. Мы же минимальный разрез еще максимальный. Да, то есть давайте сразу
[03:48:59.620 --> 03:49:03.860]  это поговорим, потому что кажется, что задача простая, но как показывает практика предыдущих
[03:49:03.860 --> 03:49:08.100]  поколений, то есть если вы не особо опытные в решении этих задач, то как бы эти технические
[03:49:08.100 --> 03:49:16.260]  тонкости могут оказаться для вас страшным. Начнем со следующего. Давайте предположим,
[03:49:16.260 --> 03:49:30.260]  что мы изначально взяли все полезные темы и не взяли все бесполезные. Ну вот, и начиная с
[03:49:30.260 --> 03:49:36.340]  этого момента, теперь мы имеем право отказаться от уже взятой темы и заплатить за это штраф в виде
[03:49:36.340 --> 03:49:41.900]  истории, либо наоборот взять бесполезную тему и наоборот получить и получить штраф уже за это.
[03:49:41.900 --> 03:49:47.860]  Понимаете, да? То есть теперь наша задача найти под множество тем,
[03:49:47.860 --> 03:49:56.460]  так чтобы суммарный штраф был как можно меньше. Понятно, да? Но как же нам этот штраф обеспечит
[03:49:56.460 --> 03:50:04.540]  теперь? То есть вот смотрите, ну давайте думать, какие-то темы мы вот теперь взяли, да, а какие-то
[03:50:04.540 --> 03:50:09.900]  темы не взяли. Вот да, у нас теперь будет значит откуда здесь берется разрез, то есть две доли это
[03:50:09.900 --> 03:50:20.260]  типа взяли, не взяли. Ну и теперь, если я решил ее не взять, как и ранее, я просто вот провожу
[03:50:20.260 --> 03:50:27.460]  ребро пропускной способности АВ. Это означает, что если я ее не возьму, я заплачу штраф АВ. Понятно,
[03:50:27.460 --> 03:50:35.340]  да? А если я решил вот это, а не взять вот так вот в Т, ой, что-то цвета перепутал, да? Ну что
[03:50:35.340 --> 03:50:39.860]  поделать? Ладно, ничего страшного. То здесь, наоборот, я получу БУ, так как у меня тут было
[03:50:39.860 --> 03:50:45.300]  отрицательное, то как бы этот штраф тоже больше нуля и меня устраивает. А теперь есть какая-то
[03:50:45.300 --> 03:50:51.860]  вопрос, как же мне запретить ситуацию для какого-нибудь ЗВ? То есть как мне запретить ситуацию,
[03:50:51.860 --> 03:51:04.860]  когда W взята, а Z нет? Ну идея такая, да, что берем вот, если W взята, Z нет, мне такое надо
[03:51:04.860 --> 03:51:09.620]  запретить. Я просто провожу между ними ребро в эту сторону пропускной способности плюс
[03:51:09.620 --> 03:51:18.100]  бесконечность. То есть, ну понятно, как всегда, достаточно большое число. Достаточно большое,
[03:51:18.100 --> 03:51:24.140]  чтобы как бы минимальный разрез заведомо обходился без этого. Да, напоминаю, конечно,
[03:51:24.140 --> 03:51:28.980]  всегда можно обойтись без этого как минимум, потому что можно всегда все темы взять или все
[03:51:28.980 --> 03:51:43.940]  темы не взять. Что? Мы взяли все. Ну как тебе сказать? А, ну это кому как. Нет, ну как сказать,
[03:51:43.940 --> 03:51:49.980]  нет, мы помним, конечно, это да, ситуация, да, с конец второго курса, значит, ученые выбирают
[03:51:49.980 --> 03:51:54.980]  курсы по выбору на следующий раз. Там кто-то сидит, это там Дин Томас, там вообще просто там,
[03:51:55.540 --> 03:51:59.820]  брал палочку и просто тыкал рандом на список. Гермиона заморачиваться не
[03:51:59.820 --> 03:52:05.660]  стала, просто записалась на все. Да, в следующей серии это привел к появлению муховика времени.
[03:52:05.660 --> 03:52:24.100]  Чего? Некоторые буты были не нулевые. Некоторые что? Что такое буты? Ну да, нет, но там страда не
[03:52:24.100 --> 03:52:28.340]  да. Во-первых, выяснилось, что да, как-то, скажем так, там как-то пыталось пока меня относительно
[03:52:28.340 --> 03:52:35.740]  ее курс проялицания был скорее в минус, ну как минимум, чисто лишний отрата времени, но там такой
[03:52:35.740 --> 03:52:40.460]  странный курс, конечно. В книжке это интересно подается, то есть там не отрицается сам факт
[03:52:40.460 --> 03:52:46.540]  возможности вообще проялицания как такового, да, но при этом как бы, но при этом, называется,
[03:52:46.540 --> 03:52:50.780]  обучение этому проялицанию было как-то сомнительно. То есть, скажем, там сама Гермиона,
[03:52:50.780 --> 03:52:55.340]  как там называется человек, действительно просто, ну там просто плотный как человек,
[03:52:55.340 --> 03:53:02.260]  просто с идеальным, абсолютно точным мышлением. То есть, называйте просто мышлением, в этом смысле,
[03:53:02.260 --> 03:53:07.660]  два линии просто мужским. То есть, конечно, Гермионе не зашло, а какой-нибудь там ее одногруппница
[03:53:07.660 --> 03:53:14.020]  из Индии, ну по имени Парвати Пател, ну можно предположить, наверное, Дашаной. Ну, по крайней
[03:53:14.020 --> 03:53:19.260]  мере, по фильмам предполагается, что да, она, видимо, из Индии какие-нибудь. Там, наоборот,
[03:53:19.260 --> 03:53:23.980]  там Парвати экзамены сдавал, наоборот, слушайте, я столько всего увидел, у меня вообще там профессор
[03:53:24.220 --> 03:53:29.380]  все задатки ясновидящие вполне себе. Но какая-нибудь профессор МакГонагл, конечно,
[03:53:29.380 --> 03:53:33.540]  с этому тоже относится, конечно, не очень, но профессор МакГонагл тоже, в общем,
[03:53:33.540 --> 03:53:46.940]  называется человек, тоже известный именно, тоже своим умом. Нет, нет. Нет, тут нет, отдельно
[03:53:46.940 --> 03:53:51.180]  мотан, это немножко не совсем то. То есть, конечно, тут более точно было бы это, потому что у вас,
[03:53:51.520 --> 03:53:55.960]  вам было быть ближе шок, что есть математические предметы, есть программические. И возможно, вы
[03:53:55.960 --> 03:53:59.500]  там, допустим, тащите математические предметы, а программические застреваешь, потому что там
[03:53:59.500 --> 03:54:04.640]  не помогает именно мышление, что давайте, давайте все выведем, потому что там работает мышление,
[03:54:04.640 --> 03:54:10.260]  типа вы должны выучить, как работает инструмент. Все. То есть, а кому-то, наоборот, вот это именно
[03:54:10.260 --> 03:54:14.740]  вот, ручками пошупать, понять, как устроено этим пользоваться. Вот гораздо удобнее, чем выводить
[03:54:14.740 --> 03:54:24.740]  все производные с интералами ну да вот то есть ближе так вот то есть конечно там всякие спецэффекты
[03:54:24.740 --> 03:54:30.260]  ну окей вот значит поэтому там от полезность но там дробь еще гермен и там практически не там
[03:54:30.260 --> 03:54:37.340]  просто до нервного срыва в итоге дошла чем-то хотя хит и до хит сезона до изучения моглов да это
[03:54:37.340 --> 03:54:42.180]  да для нее это был шедевр нет то есть классно конечно наверно изучать именно как это выглядит
[03:54:42.180 --> 03:54:50.500]  видят волшебники до этой тоже полезно наверное но вот слава богу обошлись хотя ладно нет
[03:54:50.500 --> 03:54:57.780]  иронично что она при этом изучала такой курс как номерология нет то есть типа пролица не фуфло
[03:54:57.780 --> 03:55:02.820]  номерология классно не притя да проблем то что номерология это не мотиватика как бы тоже то
[03:55:02.820 --> 03:55:07.340]  есть номерология это практически как бы наука о том что как бы там про какие-то цифры и связанные
[03:55:07.340 --> 03:55:14.180]  приметы вообще то есть как бы вещь такая вот поэтому то есть это не совсем то есть если там
[03:55:14.180 --> 03:55:19.540]  на математике конечно реально изучали кинь производные интегралы прочую радость ладно ладно
[03:55:19.540 --> 03:55:31.660]  но да да тригонометрия синус кассимус да нет ну теоретически нет иногда вообще можно
[03:55:31.660 --> 03:55:35.140]  предположить что может быть на самом деле после прослушав курс или варенье вы что-нибудь о
[03:55:35.140 --> 03:55:41.220]  химию узнаете в принципе то есть как бы да боже вот смотрите магия если поместить это то
[03:55:41.220 --> 03:55:47.500]  начинается магический процесс ой они не тролли с летом а то есть приехали до дани какой магии просто
[03:55:47.500 --> 03:55:59.660]  реакция да нет нет нет нет нет на эту тему на эту тему ладно заканчивай эту тему мы хотим
[03:56:00.260 --> 03:56:06.980]  пообедать еще да ну как мы вот вот то и на самом деле на эту тему как раз можно снова
[03:56:06.980 --> 03:56:13.780]  порекомендовать книжку по оригаторе каменный философ так что соответственно вот там его да
[03:56:13.780 --> 03:56:18.620]  потому что там они собственно тоже к концу первого курса там пришли к тому что вообще неплохо было
[03:56:18.620 --> 03:56:23.580]  в хорус вести вот такие там предметы как физика химия с новой компьютерной грамотности да цель
[03:56:23.580 --> 03:56:28.700]  когда как там была цель курса цель курса каждый ученик должен владеть компьютером или хотя бы
[03:56:28.700 --> 03:56:35.420]  клавиатурой да так что вот так что я рекомендую там там еще нет там прийти дальше еще еще две
[03:56:35.420 --> 03:56:40.260]  книжки есть третья аж в двух частях так что рекомендую да там так и называть личное дело
[03:56:40.260 --> 03:56:45.620]  маркион и 9 подвигов сцена если если что так вот и рекомендую там заменить кто-то там не менее
[03:56:45.620 --> 03:56:54.100]  замечательно становится вот ладно значит идем дальше значит хорошо ладно тут мы значит с
[03:56:54.100 --> 03:56:59.660]  полезностью определились но ладно господи вот должен был вот хоть хочется минкост но нет
[03:56:59.660 --> 03:57:07.980]  потому что дело теперь вступает просто может быть уровень хард задача ха знаменитая задача
[03:57:07.980 --> 03:57:18.500]  хак лайф да знаменитая задача задача знаменитая тем что 2008 там что на полуфинале cpc 2008 года
[03:57:18.500 --> 03:57:25.740]  эту задачу никто не решил вот хотя казалось бы ее решение было за много несколько лет до этого
[03:57:25.740 --> 03:57:40.180]  даже за приличное количество лет до этого описано статья хотя да сейчас как-то ну да ладно так что
[03:57:40.180 --> 03:57:48.380]  готова но хотя это хотя на самом деле перед задачей хард лайф я пришла до еще одну мини-задачу
[03:57:48.380 --> 03:57:53.940]  хоть хочется встать рационально хочется вставить задачу она не связана прям непосредственно с
[03:57:53.940 --> 03:58:02.860]  темой но как бы знать ее тоже надо это знаменитая задача тоже называется циркуляция значит задача
[03:58:02.860 --> 03:58:12.940]  такая дан граф то есть дана сеть найдите хоть какой-нибудь поток но есть нюанс не он заключается
[03:58:12.940 --> 03:58:17.740]  в том что на каждом ребре есть не только ограничение сверху сколько воды может течь но и ограничение
[03:58:17.740 --> 03:58:25.060]  снизу то есть вот бывает такая ситуация что у вас то есть на каждом ребре у вас написано что
[03:58:25.060 --> 03:58:31.060]  поток должен быть не менее чем l и это и не более чем ци это скажите пожалуйста существует ли
[03:58:31.060 --> 03:58:43.900]  такой поток если да желательно предъявите вот то есть вот такая какая-то сеть допустим там 2 5
[03:58:43.900 --> 03:58:52.140]  там допустим 3 7 там я не знаю что-нибудь еще там да с и т на самом деле нету ладно то есть может
[03:58:52.140 --> 03:58:57.820]  ну можете считать что можете считать что это ты нету мы ищем циркуляцию но циркуляцию вот с
[03:58:57.820 --> 03:59:07.500]  такими вредными ограничениями но любую нас стоит любая циркуляцию вот этим ограничения нет если
[03:59:07.500 --> 03:59:16.380]  тут везде 0 то как бы пустой поток нас устроит вот 5 какая-то такая вот гадость вот
[03:59:16.380 --> 03:59:26.360]  да согласен предъявить там пози вот давайте
[03:59:46.380 --> 03:59:57.340]  нафтов ты будешь чего чего хорошо давайте еще накидаем да везде проблему
[03:59:57.340 --> 04:00:08.220]  но хочется привести пример когда существует или пока имели не очевидно
[04:00:08.220 --> 04:00:20.820]  не настолько иногда но существует да например до только проблема в том да что иногда бывают
[04:00:20.820 --> 04:00:27.620]  и более нет реальный случай так то вот задача да вот кстати надо надо и да ну вы знаете да недавно
[04:00:27.620 --> 04:00:32.380]  тренировки была задача такая что если вы это знаете то решение становится очевидно ну как
[04:00:32.380 --> 04:00:37.140]  недавно месяц назад вот но там это пойти у вас там был контест этот когда там 9 тупых задач
[04:00:38.100 --> 04:00:45.060]  нет ну да вы да ну ну там задача такая если вы если вы вот это знаете то как бы там решение
[04:00:45.060 --> 04:00:50.340]  возможно сильно проще придумывалось но я не помню сейчас задача на помешу вот решение был
[04:00:50.340 --> 04:01:00.020]  такой там типа типа знаете вот этот баян вам было бы сильно проще без знания баян тоже
[04:01:00.020 --> 04:01:14.980]  можно выкрутиться до ну шоу и сделали но ну может вы без поток в каши сдали хотя странно
[04:01:14.980 --> 04:01:20.900]  нет а потоки откровенные были ну ладно ну теперь вот возникает вопрос как решать такую задачу
[04:01:20.900 --> 04:01:23.860]  но вот
[04:01:23.860 --> 04:01:29.900]  хороший начал
[04:01:29.900 --> 04:01:38.900]  так ведем вели
[04:01:38.900 --> 04:01:48.940]  так но для начала мы хотим к обычному потоку свести до
[04:01:48.940 --> 04:01:52.900]  так вот неожиданно вот
[04:01:52.900 --> 04:02:03.180]  ну то есть идея такая
[04:02:03.180 --> 04:02:11.980]  да именно в этом порядке
[04:02:11.980 --> 04:02:24.420]  вот такую махинацию предлагается сделать с каждым ребром а потом тупо проверить в полученной
[04:02:24.420 --> 04:02:31.620]  сети существует ли максимальный то есть поток который насыщает прям все торчащий из вас то есть
[04:02:31.620 --> 04:02:37.100]  да да нет нет потому что очевидно что потоки в этой сети циркуляции между собой связаны
[04:02:37.100 --> 04:02:45.220]  то есть вот такой стандартный чего
[04:02:45.220 --> 04:02:52.180]  ну да но по сути да
[04:02:52.180 --> 04:02:59.020]  ну может так да
[04:02:59.020 --> 04:03:10.700]  так что это вот задача это вот тоже задача про циркуляцию такая задача да классическая
[04:03:10.700 --> 04:03:16.580]  а ну да вы еще сюда как-то да ну ладно вам-то тоже надо дать какой-нибудь контест потому что
[04:03:17.580 --> 04:03:24.300]  потому что появилась она в культовом контесте называется эндрюс танкевич
[04:03:24.300 --> 04:03:31.860]  contest one да который дан был зимой там зимой 2002 года в петрозаводстве
[04:03:31.860 --> 04:03:41.020]  ну тем что он первый нет это это прям первый контест и там на самом деле уже многие задачи
[04:03:41.260 --> 04:03:47.900]  там стали классикой именно там скажем впервые появилась знаменитая задача а значит симпатичных
[04:03:47.900 --> 04:03:58.900]  узорах 6 на 10 сотый да да нет нет а тогда это была относительно новинка вы знаете потому что
[04:03:58.900 --> 04:04:03.980]  там смотрите там где потому что задача просто симпатичных узорах появилась по моему но в кашпе
[04:04:03.980 --> 04:04:10.380]  2000 года да тогда еще дпп профиль не являлась стандартной лекцией называется абсолютно там
[04:04:10.380 --> 04:04:15.820]  всех курсов поэтому поэтому соответственно решила там ту задачу только одна команда там по моему
[04:04:15.820 --> 04:04:21.860]  команда 57 школы в голове с петром митричевым вот соответственно вот причем более того эта
[04:04:21.860 --> 04:04:25.780]  команда выиграла в космос отрывом там решився им задачи пристали ближайшие пристельцы решил
[04:04:25.780 --> 04:04:32.740]  5 тогда тогда хорошее время на были на контест 8 задачи давали нет под
[04:04:32.740 --> 04:04:52.500]  прекрасно заходит не не все заходит
[04:04:52.500 --> 04:05:08.700]  нет какие какие это который n на м 400 а это сейчас на камеру сказал секретную разработку да
[04:05:08.700 --> 04:05:23.500]  а ну да все равно даты без микрофона типа да ну хорошо хорошо ну вот ну да ой не ну
[04:05:23.500 --> 04:05:27.700]  левосухи ладно это интересная задача которая да будет будет интересно посмотреть по решать
[04:05:27.700 --> 04:05:34.940]  да пишите да пишите почитапу решаем собственно да это я видимо от лица от лица всего перка
[04:05:35.940 --> 04:05:43.100]  вот так вот ладно с этим разобрались да это вот то есть такое маленькое ответвление но вот как бы
[04:05:43.100 --> 04:05:47.300]  оно есть как бы тоже тоже лайфхак чек которого знает который знать надо сейчас я расскажу еще
[04:05:47.300 --> 04:05:51.580]  один лайфхак чек которого знать на который знать надо потому что как бы задача тоже боянистая
[04:05:51.580 --> 04:05:58.980]  в принципе вы cpс и уже встречались задачи которые на ней базируется это знаменитая задача а под
[04:05:59.580 --> 04:06:11.740]  наибольшей плотности постановка задачи казалось бы вообще не предвещает никаких потоков ну как-то
[04:06:11.740 --> 04:06:20.020]  часто бывает задачах на разрез то есть дан граф 100 тысяч вершин там пещеры какой-нибудь
[04:06:20.020 --> 04:06:30.380]  ну да например ну кстати граф может быть забирать вперед и взвешенный в общем-то но
[04:06:30.380 --> 04:06:38.420]  допустим в оригинальной постановке он был не взвешенный нет это я рисую планарность планарность
[04:06:38.420 --> 04:06:43.780]  никто не требует так что нет мечтать о том что там ребер будет не более чем там 350 не получится
[04:06:43.780 --> 04:06:53.180]  нет я сказал 100 вершин я сто тысяч сказал не не боже упаси нет 100 вершин тысячи ребер вот
[04:06:53.180 --> 04:06:58.620]  что я сказал да вот так вот задача я хочу выбрать под граф
[04:06:58.620 --> 04:07:15.060]  вот где модуль е штрих делить на модуль в штрих максимально возможно это вот допустим я выбрал
[04:07:15.060 --> 04:07:23.580]  под граф в штрих е штрих вот ну да как я сказал ребра могут быть так вроде да максимальный не
[04:07:23.580 --> 04:07:35.180]  минимальный да максимальный нет просто какой-то подножство связанности никто не требует
[04:07:35.180 --> 04:07:45.460]  ну в принципе да ну да если вы взяли две компоненты связанности то выгодно взять
[04:07:45.460 --> 04:07:50.660]  одну более плотную из них и тем самым не уменьшить плотность это конечно да это верное утверждение
[04:07:51.020 --> 04:07:56.460]  но оно но как как всегда как-то часто бывает правильному решению это знание не поможет
[04:07:56.460 --> 04:08:03.180]  но тут действительно такое решение конечно такое накрученное потому что начнем из того что мы
[04:08:03.180 --> 04:08:11.060]  будем решать задачу бинарным поиском по ответу и мы будем решать такую задачу дано число
[04:08:11.060 --> 04:08:20.780]  существует ли под граф у которого е штрих делить на в штрих строго больше чем ц вот не больше
[04:08:20.780 --> 04:08:30.860]  либо равно именно больше ну значит смотрите и так вот значит делаем бин поиск в будущем
[04:08:30.860 --> 04:08:35.820]  домножим и симпатику на логарифом ну кстати не так страшно потому что заметим что в общем-то
[04:08:35.820 --> 04:08:41.620]  количество чисел которые у вас тут могут быть оно ограничено да то есть сколько там ну по суку
[04:08:41.620 --> 04:08:50.780]  по сути там в квадрат чисел там у вас получается ладно нет ладно модуль е умножить на модуль
[04:08:50.780 --> 04:08:56.780]  в знаменателе но самое главное что еще и знаменатели приятные поэтому в принципе вы можете найти
[04:08:56.780 --> 04:09:05.260]  ответ абсолютно точно бинар по умолчанию да но в принципе вы могли бы сказать что
[04:09:05.260 --> 04:09:17.380]  разных знаменателей бывает от одного до модуль в не такая уж и произвольность не скажи ты знаешь
[04:09:17.380 --> 04:09:22.980]  если вы у тебя до сотки то у тебя различные два соседних числа это из такого что различаются ну
[04:09:22.980 --> 04:09:28.300]  там на сколько там хотя бы на одну десяти тысячную так что нормально ну тем более что
[04:09:28.300 --> 04:09:33.900]  существуют варианты как делать бин поиск чисто в рациональных числах давайте там дерево
[04:09:33.900 --> 04:09:39.660]  штерна брока там кэша логарифом такой там будет лог квадрат конечно превращаться но но жить
[04:09:39.660 --> 04:09:46.100]  можно вот ну ладно не будем сейчас в это копать хотя в какой-то момент может покопать интересно
[04:09:46.460 --> 04:09:55.220]  действительно класс так сейчас не надо это обсуждать это замечательная вещь я вам просто
[04:09:55.220 --> 04:10:01.140]  я вам скажу вот просто нагугление вот есть такая вещь дерево штерна брока просто отпаднейшая
[04:10:01.140 --> 04:10:09.580]  штука там вы получите удовольствие на самом деле но вот вот но соответственно ось и тут как бы
[04:10:09.580 --> 04:10:15.020]  нас сейчас не начали выгонять так это правда последние времена обычно не выгоняют поэтому
[04:10:15.020 --> 04:10:35.380]  да ну можно но просто вот сегодня так у лады нет ну ладно его можно сказать конечно и в другой
[04:10:35.380 --> 04:10:40.940]  раз но просто просто жалко он сегодня ложится потому что логика у него там очень простая она
[04:10:41.420 --> 04:10:46.820]  так что не не знаю даже по возможности даже перенесся в другую аудиторию потому что вот как
[04:10:46.820 --> 04:10:50.620]  бы потому что дело в том что мы сегодня обсудили и ее и потенциала джонсона поэтому минкос сейчас
[04:10:50.620 --> 04:10:59.860]  вот алисиоги обсуждать прямо так что ладно так вот но пока хорлайф значит как вот это делать
[04:10:59.860 --> 04:11:07.420]  но во первых начнем с того что это эквалентно тому что e штрих больше чем c модуль в штрих
[04:11:10.940 --> 04:11:21.580]  нет или еще или еще круче нет но на самом деле у нас работает вот такое представление
[04:11:21.580 --> 04:11:29.300]  потому что сейчас мы сделаем неожиданный лайфхак мы сейчас нарисуем сеть с отрицательными
[04:11:29.300 --> 04:11:38.620]  ребрами будем не искать отрицательный разрез да давайте сразу себе представим вам может
[04:11:38.620 --> 04:11:44.740]  показаться что отрицательные ребра это для потока фуфуфу и на первый взгляд это действительно так
[04:11:44.740 --> 04:11:48.220]  потому что вот мы сейчас доказательств и форда фоллскер сона явно пользовались тем что у нас
[04:11:48.580 --> 04:12:09.820]  способности не отрицательные да что значит ну то и значит то есть это означает что когда мы
[04:12:09.820 --> 04:12:22.980]  делаем какой-нибудь разрез не но там навод это во первых это вводит какое-то требование что типа
[04:12:22.980 --> 04:12:30.460]  поток в эту сторону обязан течь но вот но но вот но это общество но это как бы странно мы сейчас как
[04:12:30.460 --> 04:12:37.820]  бы на эту странность будем смотреть по-другому мы считать что да это запрещено но но но фишка
[04:12:38.300 --> 04:12:44.700]  так и такая предположим что у нас отрицательные ребра вот все отрицательные
[04:12:44.700 --> 04:12:49.780]  ребра они связаны с истоком и cm ну то есть допустим у нас отрицательные все отрицательные
[04:12:49.780 --> 04:12:55.780]  ребра ибо идут из истока в вершину либо из вершины в стол确 какие-то вот такие то есть либо вот так
[04:12:55.780 --> 04:13:05.660]  либо вот так тогда у меня есть неожиданный н-д допустим тут минус 5
[04:13:05.660 --> 04:13:11.320]  тогда у меня возникает неожиданный лайфхак вот перья вот в этой ситуации я скажу
[04:13:11.320 --> 04:13:16.440]  следующее давайте-ка я убью это ребро вместо этого проведу из у ребро
[04:13:16.440 --> 04:13:19.480]  пропускной способности 5
[04:13:20.480 --> 04:13:23.480]  100
[04:13:24.160 --> 04:13:29.180]  заметим что пропускные способности всех разрезов увеличились ровно на 5 от
[04:13:29.180 --> 04:13:37.800]  этого правда логично да ну если у было слева то есть в эсе то было 0 стало 5
[04:13:37.800 --> 04:13:43.900]  если у было здесь то было минус 5 стало 0 то есть просто плюс 5 ну понятно здесь
[04:13:43.900 --> 04:13:49.060]  то же самое если тут было 7 то значит убиваем и получается и тут от сдв рисуем
[04:13:49.060 --> 04:13:56.740]  7 ну тут минус 7 смысл да а тут ничего не рисуем то есть и получает витя то есть
[04:13:56.740 --> 04:14:01.460]  если у нас ребра ведут из вершин сток отрицательные или из стока в отрицательные
[04:14:01.460 --> 04:14:08.580]  то это не проблема для нас то есть такое мы себе разрешаем как же как же мы это
[04:14:08.580 --> 04:14:16.140]  будем разрешать вот вот кстати вот действительно в эту сторону будем
[04:14:16.140 --> 04:14:22.020]  разрешать или в другую но точно смотрите о чем вообще речь вот нам хочется чтобы
[04:14:22.020 --> 04:14:26.900]  пропускать то есть допустим мы опять хотим чтобы у нас был разрез и у нас как
[04:14:26.900 --> 04:14:40.380]  всегда в доле с было то что мы взяли множество а в доле тут не взяли и тут как
[04:14:40.380 --> 04:14:50.340]  бы как всегда тут доля t там доля с к чему же тогда это нас приводит вот
[04:14:50.380 --> 04:14:54.460]  нам очень хочется изобрести такую сеть что пропустая способность была вот такая
[04:14:54.460 --> 04:15:09.220]  да ну во первых до логично конечно что из каждой вершины нам конечно из каждой взятой вершины
[04:15:09.220 --> 04:15:21.500]  мы конечно проводим ребро пропускной способности какой да ровно ц вот а теперь нам надо научиться
[04:15:21.500 --> 04:15:29.140]  конечно сделать так чтобы какой-нибудь ребро чтобы каждый ребро есть трех которая оказалась
[04:15:29.140 --> 04:15:40.140]  вот в этой доле неожиданно вычитал идейку но на самом деле это я здесь возьму по-другому
[04:15:40.140 --> 04:16:02.420]  что такое ребра но вот вот чего еще раз чем она поможет сделать то можно хоть 3 хоть 5 хоть 10
[04:16:02.420 --> 04:16:12.300]  как бы ну то есть нет ну просто можно что да е штрих это все ребра которые оказались с
[04:16:12.300 --> 04:16:17.420]  этой стороны мы конечно могли бы сказать что это просто написать минус е плюс все
[04:16:17.420 --> 04:16:21.020]  ребра которые здесь не оказались но тогда у нас вот эти ребра придется как-то учитывать
[04:16:21.020 --> 04:16:34.980]  поэтому логика на самом деле такая вот да да да то есть на самом деле для да вот то есть
[04:16:34.980 --> 04:16:43.100]  хочется сделать так чтобы если мы хотим как бы учесть все ребра ну сделаем так во первых конечно
[04:16:43.100 --> 04:16:48.740]  же если у нас вот тут тут надо аккуратнее правда то есть если мы видим что есть какое-то ребро то
[04:16:48.740 --> 04:16:56.060]  мы как бы его добавим в обе стороны пропустой способности один чтобы он учитывал и да пока
[04:16:56.060 --> 04:17:13.180]  но но на самом деле смотрите мысли будем так с от ве штрих вот минот но вот минус значит количество
[04:17:13.180 --> 04:17:27.860]  связанных вот давайте так вот тут тут будет не вален вот связанных с ве штрих ребер вот в
[04:17:27.860 --> 04:17:40.220]  идеале хотелось бы да плюс но вот но вот плюс количество ребер вот из этого разреза то есть
[04:17:40.220 --> 04:17:46.500]  типа ст вот эти это должно быть меньше нуля да то есть вот это вот тогда получается в точности вот
[04:17:46.500 --> 04:17:56.900]  это вот все эти ребра так учтены ну да вот именно сда но тут действительно да именно именно получается
[04:17:56.900 --> 04:18:08.340]  степень пополам то есть это получается с модуль ве штрих ну хотя вот но количество связанных то
[04:18:08.340 --> 04:18:15.140]  смотрите тут но тут потому что заметим что если просто суммировать степени да то есть как-то
[04:18:15.140 --> 04:18:21.940]  нет можно в принципе и так да но это если бы на и мы адекватно учитывали связаны но заметим
[04:18:21.940 --> 04:18:26.420]  что если суммировать там степени всех этих решим то каждый ребро внутри мы учтем по два
[04:18:26.420 --> 04:18:37.900]  раза а каждый вот это ребро по одному вот поэтому на самом деле оказывается удобно написать так то
[04:18:37.940 --> 04:18:43.980]  есть на самом деле прежде чем вот учитывать вот эту вот штуку оказывается может быть удобно это все
[04:18:43.980 --> 04:18:51.420]  ну то есть можно было бы действительно сказать что там то есть давайте все распополамим
[04:18:51.420 --> 04:19:01.780]  нет раз пополамим нет ну сейчас нет надо просто аккуратно понять потому что тут действительно
[04:19:01.780 --> 04:19:15.140]  ну вот нет как учить но нет но как учесть вот это количество связанных в штрих ребер то
[04:19:15.140 --> 04:19:22.300]  всех надо учитывать так чтобы они учились по одному разу но правда если все поделим пополам то
[04:19:22.300 --> 04:19:29.660]  как бы вот эти будут учитываться как бы эти тоже поделить пополам а в чем тогда разница нет
[04:19:29.660 --> 04:19:48.700]  просто нет они учат не но там просто все это вот надо аккуратно надо делать так чтобы
[04:19:48.700 --> 04:19:56.140]  было общим случаем но при этом чтобы как бы там мы там как бы в сумме как бы да в сумме степеней
[04:19:56.140 --> 04:20:00.140]  все учитывается два раза так то есть как бы и получается так что если мы если я бы тут
[04:20:00.140 --> 04:20:08.780]  написал просто какую-нибудь там сумму действительно в лежит в штрих и дегат в штрих то как бы но вот
[04:20:08.780 --> 04:20:13.100]  то тогда получил что каждый ребро из разреза училась один раз а каждый ребро здесь не из
[04:20:13.100 --> 04:20:24.380]  разреза училась два раза вот спрашивается как это как этого избежать но вот но то есть опять
[04:20:24.380 --> 04:20:30.460]  это вот это вот и это должно быть меньше нуля но это вот вот да но это не но я утверждаю что это
[04:20:30.460 --> 04:20:35.020]  не но это не эквивалентно все вот это все вот это
[04:20:41.020 --> 04:20:50.460]  то есть мы вот вот эта сумма мы это мы каждое ребро из е штрих они не есть но вот последние
[04:20:50.460 --> 04:21:10.780]  просто два можно греть на ребер его левой части давайте поделим ну да то есть нет наоборот вот
[04:21:10.780 --> 04:21:17.900]  это надо пополам поделить то есть взяли сумму выкинули эти то есть вот так вот так вот взяли
[04:21:17.900 --> 04:21:25.420]  тоже это в скобку еще пополам поделим во вот так да но это эквивалентно тому что
[04:21:25.420 --> 04:21:35.820]  действительно получалось 20 модуль в штрих минус значит сумма дегат в штрих там где готовы где
[04:21:35.820 --> 04:21:45.460]  вы лежит в штрих плюс количество ребер пересекающих разрез оказалось меньше нуля но тогда
[04:21:45.460 --> 04:21:50.420]  действительно оказывается ну вот то есть вот такой кайфец то есть на самом деле оказывается что
[04:21:50.420 --> 04:21:56.140]  у каждой вершины взятой пропускная способность должна быть получается не ц а какой получается на
[04:21:56.140 --> 04:22:05.060]  самом деле не ц а 20 минус дег от в да какие-то ребра получится отрицательными какие-то положительными
[04:22:05.060 --> 04:22:16.660]  да парадокс парадокс том что из эса ребер не проводим вообще а вот так но а это компенсируется
[04:22:16.660 --> 04:22:22.540]  тем что у тебя тут некоторые будут отрицательные и это означает что в итоге они пойдут и потом
[04:22:22.540 --> 04:22:29.140]  будет нормально и потом мы ищем то есть да и потом фишка то ведь и в чем из этого следует что в этой
[04:22:29.140 --> 04:22:38.340]  сети всегда есть поток величины 0 то есть его разрез величины 0 вот такой потому что из эса ребер нет
[04:22:38.340 --> 04:22:48.500]  напоминаю да но нас же интересует а если меньше а потому что потому что меньше либо равно существует
[04:22:48.500 --> 04:22:58.900]  всегда потому что есть ну а потому что дело в том что это разбиение соответствует тому что мы в
[04:22:58.900 --> 04:23:08.940]  нашем множестве не взяли ничего да то есть в бенпольске как бы это утверждение будет верно
[04:23:08.940 --> 04:23:14.660]  всегда при там допустим если тут 0 0 но теперь что но нам хочется взять чтобы было что-то не
[04:23:14.660 --> 04:23:20.660]  тривиальное поэтому мы собственно и строгость тут и берем то есть вот такая красота то есть
[04:23:20.660 --> 04:23:26.260]  принципе в оригинале рекомендуется на самом деле просто там проводит на самом деле тут проводить
[04:23:26.260 --> 04:23:37.540]  что-нибудь типа там плюс двое допустим и тут провести сразу двое вот такая вот красота но
[04:23:37.540 --> 04:23:45.020]  всем точка получается логарифом на за сколько вы там этот поток ищите ну вот то есть вот оказывается
[04:23:45.020 --> 04:23:50.020]  да при тех на то есть вот то есть третий то есть техника крещет это мелкая техника тут конечно
[04:23:50.020 --> 04:24:02.900]  такая не самое тривиальное но работает также потому что потому что оно заведомо делает ну
[04:24:02.900 --> 04:24:07.340]  потому что если каждым если вы каждой вершине тут нарисовали двое и тут рисовали двое у вас
[04:24:07.340 --> 04:24:14.900]  просто любую все разрезы увеличились на двое поэтому опять поэтому что чего где
[04:24:14.900 --> 04:24:23.840]  разрез да да да да да да ну вот поэтому то есть там получится просто существует ли разрез у
[04:24:23.840 --> 04:24:32.260]  которой пропсуальная способность меньше чем 2 е там 22 е в вот то есть там но получится такой
[04:24:32.260 --> 04:24:36.760]  вот поток то есть там конечно в зависимости от того какой конкретно более того если вы там не
[04:24:36.920 --> 04:24:40.720]  если вы используете какие-нибудь правильные алгоритмы потока и правильную технологию то можно
[04:24:40.720 --> 04:24:47.120]  даже там от логарифма избавиться но конечно это это мы сейчас обсуждать конечно не готовы
[04:24:47.120 --> 04:24:53.000]  для этого нужно изучить сами алгоритмы но вот но тем не но то пока вот на текущий момент вот
[04:24:53.000 --> 04:24:58.120]  еще одна задача которая легко сводится к мин разрезу но она уже становится такой вот не тривиальный
[04:24:58.120 --> 04:25:12.560]  да так сдвинулась куда-то так что вот так ну чего так есть ли тут какие-то вопросы так
[04:25:12.560 --> 04:25:17.000]  ну ладно очень надел ну ладно если минкост убрать тогда очень пока прибрать учета очень
[04:25:17.000 --> 04:25:21.040]  надеюсь что нам там каких-нибудь лишних лекций нет просто действительно подсчет такой что
[04:25:21.040 --> 04:25:26.560]  допустим 15 числа у нас лекции не будет тогда допустим 22 но то 20 тогда у нас значит остаются
[04:25:26.560 --> 04:25:40.800]  какие занятия 22 29 6 нет стоп ну да правильно 6 ну дай бог чтобы шестого были не выходные
[04:25:40.800 --> 04:25:55.600]  шестого тринадцатого а 13 уже зачетная неделя а ну так так слушайте ну за 4 занятия мы потоки
[04:25:55.600 --> 04:26:01.600]  покрыть должны но учитывая что каждый день по три пары ну как бы да у меня там не такое
[04:26:01.600 --> 04:26:07.000]  количество теории нету то есть нет оно там приличное количество нету обычно это где-то месяц и
[04:26:07.000 --> 04:26:18.160]  занимает так что нормально но а у нас сейчас что он а в смысле ну это да да да ну хорошо
[04:26:18.160 --> 04:26:23.200]  ладно значит минкост значит минкост когда-нибудь следующие разы да ну хорошо
