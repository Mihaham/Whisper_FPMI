[00:00.000 --> 00:08.720]  Значит, что же такое МинКост, значит, о чём у нас разговор.
[00:08.720 --> 00:14.600]  Ну, разговор у нас, как всегда, о том, ну, то есть мы снова
[00:14.600 --> 00:18.120]  будем, у нас снова будет сеть, у нас снова будет поток,
[00:18.120 --> 00:22.560]  но теперь маленькая фишечка, то есть теперь у нас поток
[00:22.560 --> 00:24.160]  будет чего-то стоить.
[00:24.160 --> 00:26.960]  То есть раньше мы как жили, раньше у нас есть какая-то
[00:26.960 --> 00:32.400]  сеть, то есть у нас есть какие-то трубы, по которым
[00:32.400 --> 00:34.940]  мы каким-то образом пускаем воду, то есть про каждую
[00:34.940 --> 00:38.840]  трубу просто известно, сколько воды в единицу времени мы
[00:38.840 --> 00:39.840]  можем пускать.
[00:39.840 --> 00:42.880]  Вот так у нас всегда было.
[00:42.880 --> 00:52.480]  Надо пустить из острока в сток, ну, там вот что-нибудь
[00:52.480 --> 00:53.480]  такое.
[00:53.480 --> 00:56.760]  Ну а теперь у нас есть маленькие, маленькие новости.
[00:56.760 --> 01:03.360]  Теперь, ну вот, у нас оказывается, что мы должны не просто
[01:03.360 --> 01:08.280]  пускать, а ещё и за каждую единицу потока, текущего
[01:08.280 --> 01:10.920]  по трубе единицу времени, мы будем платить.
[01:10.920 --> 01:20.760]  Причём плата зависит от трубы, то есть скажем так,
[01:20.760 --> 01:23.920]  вот эта труба, например, дорогая, то есть здесь будет
[01:24.920 --> 01:30.560]  единиц, здесь стоимость подешевшая, здесь 5, здесь
[01:30.560 --> 01:34.440]  допустим ещё дешевле 3, а здесь прям супердорогая,
[01:34.440 --> 01:46.160]  вот сюда 57, вот, а в этой трубе минус 57, да, стоимость
[01:46.160 --> 01:49.040]  бывает отрицательная, то есть по принципу я труба,
[01:49.040 --> 01:51.440]  я хочу, чтобы по мне текла вода, я готов за это доплачивать.
[01:51.440 --> 01:57.200]  Вот это называется, вот, вполне, ну, вот это, собственно,
[01:57.200 --> 02:01.280]  тоже вполне нормально, а эта труба ноль, вот, то
[02:01.280 --> 02:03.720]  есть это такая вот нормальная такая дифферентная труба,
[02:03.720 --> 02:06.720]  вот, вот.
[02:06.720 --> 02:12.320]  Теперь у нас возникает такая естественная задача,
[02:12.320 --> 02:16.360]  ну, вот, то есть надо найти всё ещё максимальный поток,
[02:16.360 --> 02:20.280]  ну, вот, от СДТ, то есть пускать столько воды, сколько
[02:20.280 --> 02:24.440]  возможно, но из всех потоков надо выбрать поток минимальной
[02:24.440 --> 02:27.640]  стоимости, поэтому задача так называется, максимальный
[02:27.640 --> 02:34.560]  поток минимальной стоимости, вот, но, на самом деле, как
[02:34.560 --> 02:37.440]  это ни странно, решать мы будем немножко другую задачу.
[02:37.440 --> 02:41.080]  Никогда такого не было.
[02:41.080 --> 02:45.280]  Ну да, и вот опять, истинно так, вот, задача, ну, вот,
[02:45.280 --> 02:49.080]  но на самом деле очень на неё похожа, задача будет
[02:49.080 --> 02:53.400]  называться, поиск циркуляции минимальной стоимости.
[02:53.400 --> 02:59.800]  Ну, здесь, видимо, стоит вести официальное определение,
[02:59.800 --> 03:15.040]  то есть циркуляция там в сети, это поток величины
[03:15.040 --> 03:27.840]  0, ну, у нас скорее нет, хоть, конечно, ну, да, можно там
[03:27.840 --> 03:30.680]  ещё, там можно там ещё всякие это что-то требовать, чтобы
[03:30.680 --> 03:35.120]  там по каждой трубе сколько-то текло, но вообще официально
[03:35.120 --> 03:38.040]  определение, но это уже такие модификации.
[03:38.040 --> 03:41.560]  Основное определение такое, значит, циркуляция, значит,
[03:42.560 --> 03:49.560]  Заметьте, что если есть циркуляция с отрицательной ценой, то это очень хорошо.
[03:49.560 --> 03:55.560]  Ну да, да, у нас, да, более того, на самом деле, только если есть отрицательные ребра
[03:55.560 --> 03:58.560]  и вообще отрицательные циклы отрицательной стоимости,
[03:58.560 --> 04:01.560]  то у нас вообще имеет смысл такой рассматривать, потому
[04:01.560 --> 04:06.560]  что задача, да, на сеть найти циркуляцию хоть какую-нибудь,
[04:06.560 --> 04:10.560]  она тривиальна, да, потому что есть такая циркуляция,
[04:10.560 --> 04:13.560]  когда не по какой трубе ничего не течёт.
[04:13.560 --> 04:15.560]  Это ценой.
[04:15.560 --> 04:18.560]  Но оказывается, то есть как бы ничего ниоткуда не вытекает
[04:18.560 --> 04:20.560]  и ничего никуда не втекает.
[04:20.560 --> 04:24.560]  Но бывает, существуют более нетривиальные циркуляции.
[04:24.560 --> 04:27.560]  Вот, то есть мы уже с вами изучали, то есть, например,
[04:27.560 --> 04:30.560]  там вода может течь, вот просто мы тут можем запустить
[04:30.560 --> 04:33.560]  единицу потока по какому-нибудь циклу, вот, например, вот
[04:33.560 --> 04:34.560]  такого.
[04:34.560 --> 04:41.560]  И более того, мы за это получим стоимость минус 54.
[04:41.560 --> 04:43.560]  Обратите внимание, да?
[04:43.560 --> 04:46.560]  То есть это, оказывается, выгодно.
[04:46.560 --> 04:48.560]  То есть, да.
[04:48.560 --> 04:51.560]  Более чем выгодно и даже похоже на 4.
[04:51.560 --> 04:52.560]  Ну вот.
[04:52.560 --> 04:55.560]  Нет, потому что у нас минус бесконечность цена.
[04:55.560 --> 04:57.560]  Нет, у нас проблема в том, что...
[04:57.560 --> 04:58.560]  А, да, да.
[04:58.560 --> 05:00.560]  Нет, у нас способность бесконечна.
[05:00.560 --> 05:01.560]  Всё.
[05:01.560 --> 05:02.560]  Нет.
[05:02.560 --> 05:03.560]  То есть, как бы, да.
[05:03.560 --> 05:05.560]  То есть у нас, конечно, не выполняется основная функция,
[05:05.560 --> 05:08.560]  то есть мы не перегоняем воду из точки С в точку Т,
[05:08.560 --> 05:12.560]  но какую-то работу из сотрудников труб мы обеспечиваем.
[05:12.560 --> 05:15.560]  И более того, оказывается, это даже выгодно.
[05:15.560 --> 05:16.560]  Вот.
[05:16.560 --> 05:17.560]  Нет, ну а что?
[05:17.560 --> 05:19.560]  Ну, в принципе, нормально, потому что вообще сколько
[05:19.560 --> 05:21.560]  существует работ вообще из-за того, чтобы что там
[05:21.560 --> 05:24.560]  какие-то спонсоры готовы за неё платить.
[05:24.560 --> 05:26.560]  Вот какой работе, как ни странно, даже участие в чемпионате
[05:26.560 --> 05:29.560]  России по мини-футболу относится даже.
[05:29.560 --> 05:30.560]  Ну, я не знаю, может...
[05:30.560 --> 05:32.560]  Ну, то есть, может, у них там как-то построено, что
[05:32.560 --> 05:34.560]  они там как-то зарабатывают на этих трансляциях, но
[05:34.560 --> 05:35.560]  как-то...
[05:35.560 --> 05:38.560]  Что-то у меня есть подозрение, что там этот чемпионат
[05:38.560 --> 05:40.560]  существует только за счёт того, что есть конкретные
[05:40.560 --> 05:42.560]  компании, которые как бы...
[05:42.560 --> 05:44.560]  Ну, от которых просто нравится этот вид спорта.
[05:44.560 --> 05:45.560]  Вот.
[05:45.560 --> 05:47.560]  Хотя, хотя, впрочем, я здесь не копал.
[05:47.560 --> 05:49.560]  Мне кажется, трансляция.
[05:49.560 --> 05:51.560]  Ну, да, только внимание...
[05:51.560 --> 05:54.560]  Ну, да, только, знаешь, это отдельная песня потом,
[05:54.560 --> 05:57.560]  сколько зрителей на это ходят и где, простите, трансляции.
[05:57.560 --> 06:01.560]  На каких очень-очень-очень глубоко кабельных каналах.
[06:01.560 --> 06:03.560]  Ну, вот они проходят ещё.
[06:03.560 --> 06:06.560]  Так что тут ещё такой момент.
[06:06.560 --> 06:08.560]  Ну, хотя, не знаю, то есть, наверное, как-то это явно
[06:08.560 --> 06:10.560]  поддерживается, учитывая, что как бы уровень мини-футбола
[06:10.560 --> 06:14.560]  в России там вполне себе соответствует мировому
[06:14.560 --> 06:15.560]  на самом деле.
[06:15.560 --> 06:17.560]  У нас всё кроме футбола в мире.
[06:17.560 --> 06:18.560]  Да?
[06:18.560 --> 06:19.560]  Ну, нет, нет, биатлон у нас ещё есть.
[06:19.560 --> 06:20.560]  Так, неважно.
[06:20.560 --> 06:21.560]  Вот.
[06:21.560 --> 06:22.560]  Ну, да, да, да.
[06:22.560 --> 06:24.560]  Ну, пляжный, ну, пляжный футбол вообще, да.
[06:24.560 --> 06:27.560]  Да, сборная России – действующий чемпион мира по пляжному футболу.
[06:27.560 --> 06:29.560]  Хотя в России нет ни пляжей, ни футбола.
[06:29.560 --> 06:31.560]  Да, мы помним это, да.
[06:31.560 --> 06:32.560]  Вот.
[06:34.560 --> 06:37.560]  В общем, самое страшное, что это шутка из КВН 2005,
[06:37.560 --> 06:39.560]  там, какого-то лохматого года.
[06:39.560 --> 06:40.560]  И эктуально до сих пор.
[06:40.560 --> 06:41.560]  Ну, вот да.
[06:41.560 --> 06:43.560]  Но единственная разница, что с тех пор сборная Россия
[06:43.560 --> 06:45.560]  ещё раз стала чемпионом мира.
[06:45.560 --> 06:46.560]  Ну, вот.
[06:46.560 --> 06:49.560]  Но, видимо, принципиально ничего не поменялось, да.
[06:49.560 --> 06:50.560]  Вот.
[06:50.560 --> 06:51.560]  Ладно.
[06:51.560 --> 06:52.560]  И так вот.
[06:52.560 --> 06:53.560]  И так циркуляция.
[06:53.560 --> 06:54.560]  Итак, у нас есть циркуляция.
[06:54.560 --> 06:56.560]  Значит, циркуляция, поток величины 0.
[06:56.560 --> 06:57.560]  Хорошо.
[06:57.560 --> 06:58.560]  Значит, ещё такое.
[06:58.560 --> 07:01.560]  Ну, во-первых, конечно, сразу нам поможет мистическое утверждение,
[07:01.560 --> 07:04.560]  которое мы не явно пользовались всегда.
[07:04.560 --> 07:06.560]  Но здесь я его даже запишу.
[07:06.560 --> 07:08.560]  То есть, любая нот.
[07:08.560 --> 07:10.560]  То есть, любую циркуляцию.
[07:12.560 --> 07:14.560]  Там циркуляцию.
[07:18.560 --> 07:22.560]  Можно декомпозировать.
[07:23.560 --> 07:35.560]  На не более чем модуль E циклов.
[07:41.560 --> 07:44.560]  Ну, в принципе, я думаю, если вы понимаете утверждение
[07:44.560 --> 07:46.560]  о циркуляции просто в обычном графе, то, в общем-то,
[07:46.560 --> 07:49.560]  я думаю, сомнений это утверждение у вас вызывать не должно.
[07:49.560 --> 07:52.560]  То есть, фактически тоже та же самая теория
[07:52.560 --> 07:56.560]  декомпозиции просто с учётом того, что пути от S до T у вас нет.
[07:56.560 --> 07:59.560]  Ну, или если есть путь от S до T, то найдётся, наверное,
[07:59.560 --> 08:01.560]  путь от T до S вот вам цикл.
[08:01.560 --> 08:02.560]  Да, обратите внимание.
[08:02.560 --> 08:05.560]  То есть, эти циклы могут проходить и через вершину S,
[08:05.560 --> 08:08.560]  и через вершину T, и даже через обе.
[08:08.560 --> 08:11.560]  Хотя заметим, что при понятии циркуляции, в общем-то,
[08:11.560 --> 08:15.560]  понятия даже и stock, и stock, в общем-то, теряют смысл.
[08:15.560 --> 08:18.560]  То есть, S и T, в общем-то, становятся обычными вершинами.
[08:19.560 --> 08:20.560]  Вот.
[08:20.560 --> 08:23.560]  То есть, тут, в общем-то, всё просто.
[08:23.560 --> 08:26.560]  Ну, казалось бы, давайте подумаем.
[08:26.560 --> 08:29.560]  Если ищем циркуляцию минимальной стоимости,
[08:29.560 --> 08:33.560]  а какое отношение эта задача имеет к задаче о поиске
[08:33.560 --> 08:37.560]  максимального потока минимальной стоимости?
[08:43.560 --> 08:47.560]  Ну, если поток увеличены 0 максимальный, то ладно.
[08:47.560 --> 08:48.560]  Вот.
[08:50.560 --> 08:52.560]  Ну, так-то, конечно, да.
[08:52.560 --> 08:56.560]  Можно заблочить, например, вершину R и найти максимальную циркуляцию,
[08:56.560 --> 08:58.560]  а потом как-то добавить R.
[08:58.560 --> 09:00.560]  А R это что?
[09:00.560 --> 09:02.560]  Ой, не R, а T.
[09:02.560 --> 09:05.560]  Нет, это T заблочить.
[09:05.560 --> 09:06.560]  И что?
[09:06.560 --> 09:09.560]  Но проблема в том, что через T тоже могут проходить хорошие циклы.
[09:09.560 --> 09:11.560]  Да, их надо как-то добавить потом.
[09:11.560 --> 09:13.560]  Вот, ага.
[09:13.560 --> 09:14.560]  Осталось только придумать, как.
[09:14.560 --> 09:15.560]  Хорошо.
[09:15.560 --> 09:18.560]  Можно сделать другую вершину стоковую.
[09:18.560 --> 09:25.560]  Ну, короче, из T провести в неребро, и по нему поток...
[09:25.560 --> 09:28.560]  Куда? Откуда провести?
[09:28.560 --> 09:33.560]  Из T в какую-то фейковую стоковую вершину.
[09:33.560 --> 09:34.560]  Можно.
[09:34.560 --> 09:37.560]  Но, на самом деле, для иллюстрации, да, я, возможно, не точно сформулировал вопрос,
[09:37.560 --> 09:39.560]  не это имел в виду.
[09:39.560 --> 09:42.560]  Но, на самом деле, да, я имел в виду, почему мы хотим рассматривать задачу о поиске
[09:42.560 --> 09:43.560]  минимальной циркуляции.
[09:43.560 --> 09:46.560]  Потому что, на самом деле, если мы умеем искать минимальную циркуляцию,
[09:46.560 --> 09:49.560]  то мы максимальный поток минимальной стоимости тоже умеем искать.
[09:53.560 --> 09:56.560]  Делаем мы это весьма элементарным способом.
[09:56.560 --> 09:58.560]  Способ называется...
[09:58.560 --> 10:03.560]  А давайте-ка добавим ребро из стока в исток
[10:03.560 --> 10:09.560]  с, внимание, пропускной способностью плюс бесконечность
[10:09.560 --> 10:13.560]  и стоимостью минус бесконечность.
[10:19.560 --> 10:20.560]  Да.
[10:20.560 --> 10:21.560]  Ну, понятно, что...
[10:21.560 --> 10:23.560]  Ну, естественно, имеется в виду, что плюс бесконечность
[10:23.560 --> 10:27.560]  это там какое-то число, которое там заведомо превзойдет все,
[10:27.560 --> 10:30.560]  что вы там можете получить здесь.
[10:30.560 --> 10:33.560]  То есть там можно там сказать, что это просто там едва ли не сумма
[10:33.560 --> 10:38.560]  пропускных способностей, там называется, умножить на 100500.
[10:38.560 --> 10:40.560]  Ну, какое-то там конечное число.
[10:40.560 --> 10:43.560]  То есть настолько большое число, что действительно выгодно
[10:43.560 --> 10:46.560]  просто всеми правдами и неправдами пускать по этому ребру
[10:46.560 --> 10:48.560]  как можно больше потока.
[10:48.560 --> 10:49.560]  Вот.
[10:49.560 --> 10:50.560]  Ну, в общем, думаю, понятно.
[10:50.560 --> 10:55.560]  То есть, в принципе, после этого у нас задача к циркуляции минимальной...
[10:55.560 --> 10:59.560]  Вот так мы свели задачу о поиске максимального потока минимальной стоимости
[10:59.560 --> 11:02.560]  к задаче о поиске циркуляции минимальной циркуляции.
[11:02.560 --> 11:05.560]  К циркуляции минимальной стоимости.
[11:05.560 --> 11:09.560]  Кстати, давайте, а ну-ка, еще такое упражнение для разминки.
[11:09.560 --> 11:16.560]  А если я хочу найти поток величины k минимальной стоимости?
[11:16.560 --> 11:19.560]  Ну, совершенно верно, да.
[11:19.560 --> 11:22.560]  То есть, в принципе, если я тут напишу k, будет у меня поток
[11:22.560 --> 11:24.560]  величины k минимальной стоимости.
[11:24.560 --> 11:26.560]  То есть, в общем-то, то есть, не обязательно, то есть, не то чтобы
[11:26.560 --> 11:30.560]  я буду сильно пользоваться тем, что этот поток обязательно максимальный.
[11:30.560 --> 11:33.560]  Ну, впрочем, можно было и раньше это сказать, потому что,
[11:33.560 --> 11:37.560]  как бы, думаю, тоже есть там стандартная олимпиадная логика,
[11:37.560 --> 11:39.560]  что если вы хотите, чтобы у вас максимальный поток был не
[11:39.560 --> 11:41.560]  тот, который реально максимальный, а только величины k,
[11:41.560 --> 11:45.560]  то, в принципе, сделать какой-нибудь безобразие в духе вот этого вот
[11:45.560 --> 11:47.560]  вам никто не мешает.
[11:47.560 --> 11:52.560]  Ну, в принципе, я думаю, там кто-то такую логику себе применял.
[11:52.560 --> 11:56.560]  Ну, тут хотя по-разному, потому что давайте тут оговоримся.
[11:56.560 --> 11:59.560]  А кто вообще знает алгоритм поиска максимального потока
[11:59.560 --> 12:01.560]  минимальной стоимости?
[12:01.560 --> 12:03.560]  Знает.
[12:03.560 --> 12:05.560]  Я его писал, но я его не помню очень хорошо.
[12:05.560 --> 12:07.560]  Я помню примерно.
[12:07.560 --> 12:09.560]  Я тоже, например, сейчас.
[12:09.560 --> 12:11.560]  Ну, хорошо, давайте, кто его хотя бы когда-нибудь писал?
[12:11.560 --> 12:13.560]  Ага.
[12:13.560 --> 12:15.560]  Так, хорошо.
[12:15.560 --> 12:17.560]  Ну, окей.
[12:17.560 --> 12:19.560]  А кто-нибудь вообще знает, как его доказывать?
[12:19.560 --> 12:22.560]  Что этот эпический жадник работает?
[12:22.560 --> 12:24.560]  Матроиды какие-то.
[12:24.560 --> 12:26.560]  Да?
[12:26.560 --> 12:28.560]  Ну, скажем так, может и матроиды.
[12:28.560 --> 12:29.560]  Я не знаю.
[12:29.560 --> 12:30.560]  Вот.
[12:30.560 --> 12:33.560]  То есть, на самом деле, может на языке матроидов это тоже расписывается.
[12:33.560 --> 12:34.560]  Вот.
[12:34.560 --> 12:35.560]  Ну, понятно.
[12:35.560 --> 12:36.560]  Значит, смотрите.
[12:36.560 --> 12:37.560]  Ну, то есть, да.
[12:37.560 --> 12:38.560]  Ну, на самом деле, огласим, что алгоритм тут имеется в виду
[12:38.560 --> 12:40.560]  такой известный там, видимо, в олимпиадной среде такой.
[12:40.560 --> 12:43.560]  Как найти максимальный поток минимальной стоимости?
[12:43.560 --> 12:46.560]  Делаем абсолютно первого попавшегося тупого форда
[12:46.560 --> 12:48.560]  Фолкерсона.
[12:48.560 --> 12:53.560]  Но при этом путь от СТ в остаточной сети мы выбираем таким
[12:53.560 --> 12:56.560]  образом, чтобы его стоимость была минимальна.
[12:59.560 --> 13:00.560]  Именно вот.
[13:00.560 --> 13:01.560]  Да.
[13:01.560 --> 13:04.560]  Но говоря об остаточной сети, конечно же, нужно сделать
[13:04.560 --> 13:07.560]  еще оговорочку, что у каждого ребра есть там действительно
[13:07.560 --> 13:08.560]  обратное ребро.
[13:08.560 --> 13:10.560]  Изначально там пропускной способности ноль.
[13:10.560 --> 13:12.560]  Но и, конечно, да.
[13:12.560 --> 13:15.560]  Но цена, естественно, с минусом.
[13:15.560 --> 13:18.560]  Но в том плане, что если выпустили поток по цене минус 57,
[13:18.560 --> 13:22.560]  то, наверное, чтобы его отменить, надо заплатить 57.
[13:22.560 --> 13:24.560]  Вот.
[13:24.560 --> 13:26.560]  То есть, типа, возвращай деньги.
[13:26.560 --> 13:29.560]  Ну или, наоборот, если вы заплатили три, то как бы
[13:29.560 --> 13:31.560]  отменили поток, получили три обратно.
[13:31.560 --> 13:33.560]  Да, алгоритм, по-моему, очень интересный.
[13:33.560 --> 13:34.560]  Вот.
[13:34.560 --> 13:35.560]  То есть, алгоритм, да.
[13:35.560 --> 13:37.560]  То есть, такой дальше там начинается вопрос, как
[13:37.560 --> 13:38.560]  его там писать с помощью каких-то dexter.
[13:38.560 --> 13:40.560]  Ну, мы от этого тоже доберемся.
[13:40.560 --> 13:41.560]  Правда, есть маленькая оговорка.
[13:41.560 --> 13:43.560]  Такой алгоритм работает...
[13:43.560 --> 13:44.560]  Такое, что потенциалы просто...
[13:44.560 --> 13:48.560]  Ну вот, нам потребуется с этим разобраться.
[13:48.560 --> 13:49.560]  Вот.
[13:49.560 --> 13:51.560]  Правда, есть маленькая оговорка.
[13:51.560 --> 13:54.560]  Этот алгоритм работает, конечно, только в предположении,
[13:54.560 --> 13:58.560]  что изначально у вас в сети нет циклов отрицательной
[13:58.560 --> 13:59.560]  стоимости.
[13:59.560 --> 14:02.560]  Ну потому что, если бы они были, то вам приходилось
[14:02.560 --> 14:05.560]  бы их как-нибудь находить и тоже по ним что-то пускать.
[14:05.560 --> 14:08.560]  То есть, ну чаще всего, понятно, в каких-нибудь олимпиадных
[14:08.560 --> 14:11.560]  задачах, в общем-то, стоимости изначально отрицательных
[14:11.560 --> 14:13.560]  у вас там часто не бывает.
[14:13.560 --> 14:14.560]  Ну вот.
[14:14.560 --> 14:15.560]  Поэтому...
[14:15.560 --> 14:18.560]  Ну вот, поэтому тут оговорка непринципиальна.
[14:18.560 --> 14:19.560]  Ну, чем...
[14:19.560 --> 14:21.560]  Алгоритм мы будем строже доказывать.
[14:21.560 --> 14:22.560]  Конечно.
[14:22.560 --> 14:25.560]  Ну более того, сейчас мы к этому приступим.
[14:25.560 --> 14:27.560]  Потому что, ну вот, первый шаг, который мы сделаем,
[14:27.560 --> 14:29.560]  это сведем задачу к поиске минимальной циркуляции.
[14:29.560 --> 14:31.560]  Как ни странно.
[14:31.560 --> 14:35.560]  Потому что поговорим о том, как устроена вообще минимальная
[14:35.560 --> 14:40.560]  циркуляция.
[14:40.560 --> 14:45.560]  Потому что есть маленькое, простое утверждение.
[14:45.560 --> 14:47.560]  Да, ну во-первых, да.
[14:47.560 --> 14:49.560]  Ну вот.
[14:49.560 --> 14:50.560]  Так.
[14:50.560 --> 14:52.560]  Ну давайте, да, договоримся сейчас.
[14:52.560 --> 14:57.560]  То есть, договоримся тут еще о какой-то терминологии.
[14:57.560 --> 14:59.560]  Значит, терминология такая.
[14:59.560 --> 15:00.560]  Назовем циркуля...
[15:00.560 --> 15:02.560]  Ну вот.
[15:02.560 --> 15:06.560]  Циркуляция...
[15:06.560 --> 15:09.560]  Ну давайте, ладно, введем уже тогда два термина.
[15:09.560 --> 15:10.560]  Ничего страшного.
[15:10.560 --> 15:20.560]  Циркуляция минимальна.
[15:20.560 --> 15:27.560]  Если ее стоимость минимально возможна.
[15:27.560 --> 15:29.560]  Да, я понимаю, что звучит казуистически, но тут имеет
[15:29.560 --> 15:30.560]  смысл точно договариваться.
[15:40.560 --> 16:05.560]  Максимально.
[16:05.560 --> 16:09.560]  Вот употребляются действительно и такие.
[16:09.560 --> 16:12.560]  Значит, термина.
[16:12.560 --> 16:15.560]  Если...
[16:15.560 --> 16:18.560]  Или можно было даже это назвать локально оптимально.
[16:18.560 --> 16:24.560]  Если в остаточной сети...
[16:24.560 --> 16:26.560]  Нет, ладно, не буду писать G, давайте честно напишем
[16:26.560 --> 16:28.560]  уже тогда буковками.
[16:28.560 --> 16:37.560]  Остаточной сети...
[16:37.560 --> 16:39.560]  Нет.
[16:39.560 --> 17:02.560]  Циклов отрицательной стоимости.
[17:02.560 --> 17:07.560]  Да, эти маркеры будут долго выметриваться.
[17:07.560 --> 17:09.560]  Видимо, надо просто отсюда вынести эти перманентные
[17:09.560 --> 17:11.560]  маркеры, чтобы его ни у кого не было соблазнами
[17:11.560 --> 17:15.560]  писать.
[17:15.560 --> 17:17.560]  Ну вот.
[17:17.560 --> 17:18.560]  Вот.
[17:18.560 --> 17:19.560]  Поэтому я вот это и ввел.
[17:19.560 --> 17:21.560]  То есть вот есть понятие минимально, есть понятие
[17:21.560 --> 17:24.560]  оптимально, потому что по умолчанию, конечно, есть
[17:24.560 --> 17:26.560]  желание просто эти слова взаимозаменять и не понимать
[17:26.560 --> 17:27.560]  в чем разница.
[17:27.560 --> 17:28.560]  Поэтому...
[17:28.560 --> 17:30.560]  А на самом деле тут все-таки точно договариваются
[17:30.560 --> 17:31.560]  обычно, что...
[17:31.560 --> 17:34.560]  А это не кавален?
[17:34.560 --> 17:36.560]  Ну, сфорулируем так.
[17:36.560 --> 17:44.560]  Это теорема, которую надо доказывать.
[17:44.560 --> 17:45.560]  То есть да.
[17:45.560 --> 17:46.560]  То есть так и есть, да.
[17:46.560 --> 17:48.560]  Вот теорема.
[17:48.560 --> 17:51.560]  То есть циркуляция минимальна тогда и только тогда, когда
[17:51.560 --> 17:54.560]  она оптимальна.
[17:54.560 --> 17:57.560]  Ну думаю, это звучало бы менее парадоксально, если
[17:57.560 --> 17:59.560]  бы я тут ввел термин локально оптимально.
[17:59.560 --> 18:02.560]  Ну потому что тоже, я думаю, в Олимпиадах вы с таким
[18:02.560 --> 18:05.560]  сталкивались, что если вы напрямую не можете улучшить
[18:05.560 --> 18:07.560]  результат, значит вы считаете, что он лучший.
[18:07.560 --> 18:10.560]  Но как бы это типичный подход какой-нибудь жадности.
[18:10.560 --> 18:13.560]  Но далеко не всегда это работает.
[18:13.560 --> 18:18.560]  То есть может быть вы упёрлись в локальный максимум, но
[18:18.560 --> 18:20.560]  оказывается, если бы вы пошли куда-то в другую сторону,
[18:20.560 --> 18:23.560]  вы бы нашли там максимум чуть побольше.
[18:23.560 --> 18:28.560]  Тогда и только тогда, когда циркуляция оптимальна.
[18:36.560 --> 18:37.560]  Вот.
[18:41.560 --> 18:42.560]  Так.
[18:45.560 --> 18:48.560]  Ну заметим на самом деле, ну как-то в одну сторону
[18:48.560 --> 18:50.560]  конечно очевидно, так и скажем даже.
[18:50.560 --> 18:53.560]  Там в эту сторону очевидно.
[18:53.560 --> 18:54.560]  Почему?
[18:54.560 --> 18:56.560]  Ну потому что понятно, что уж есть.
[18:56.560 --> 18:59.560]  Ну потому что логика, как в Форде Фолкерсоне,
[18:59.560 --> 19:02.560]  что если вы найдете в остаточной сети цикл отрицательной
[19:02.560 --> 19:05.560]  стоимости, то давайте пропустим по нему там сколько-то
[19:05.560 --> 19:08.560]  единиц потока, сколько можем, и получим циркуляцию
[19:08.560 --> 19:10.560]  там меньшей стоимости.
[19:10.560 --> 19:12.560]  Ну тут все очевидно, да?
[19:12.560 --> 19:13.560]  Ну вот.
[19:13.560 --> 19:16.560]  Ну и как в Форде Фолкерсоне возникает вопрос.
[19:16.560 --> 19:18.560]  Хорошо, а допустим мы это делали, делали, делали,
[19:18.560 --> 19:20.560]  вот уперлись, обнаружили, что больше нельзя.
[19:20.560 --> 19:23.560]  Уважаемые знатоки спрашивают, а значит ли это, что это
[19:23.560 --> 19:26.560]  минимум, или мы, или это, или нам не повезло.
[19:31.560 --> 19:32.560]  Вот.
[19:32.560 --> 19:33.560]  Значит, смотрите.
[19:36.560 --> 19:38.560]  Значит, идея будет такая.
[19:39.560 --> 19:40.560]  Вот.
[19:40.560 --> 19:42.560]  Редкий случай, но здесь я видимо доказательства
[19:42.560 --> 19:43.560]  даже напишу почти целиком.
[19:45.560 --> 19:46.560]  Вот.
[19:46.560 --> 19:48.560]  Ну я, да, я понимаю, да, за мной это обычно не водится,
[19:48.560 --> 19:49.560]  но тем не менее.
[19:50.560 --> 19:51.560]  Значит, смотрите.
[19:51.560 --> 19:52.560]  Пусть.
[19:54.560 --> 19:56.560]  Значит, пусть у нас есть циркуляция.
[19:56.560 --> 19:59.560]  Значит, F это оптимальная циркуляция.
[19:59.560 --> 20:02.560]  Значит, A, F штрих, минимальная.
[20:11.560 --> 20:12.560]  Причем.
[20:18.560 --> 20:19.560]  Ну вот.
[20:19.560 --> 20:20.560]  Ну вот.
[20:20.560 --> 20:21.560]  Ну вот.
[20:21.560 --> 20:22.560]  Ну вот.
[20:22.560 --> 20:23.560]  Ну вот.
[20:23.560 --> 20:24.560]  Ну вот.
[20:24.560 --> 20:25.560]  Ну вот.
[20:25.560 --> 20:26.560]  Ну вот.
[20:26.560 --> 20:27.560]  Ну вот.
[20:32.560 --> 20:33.560]  Какие классные сюди-маркеры.
[20:35.560 --> 20:36.560]  Вот.
[20:36.560 --> 20:40.560]  Причем совершенно неожиданно выяснилось, что кост от F штрих
[20:40.560 --> 20:42.560]  строго меньше, чем кост от F.
[20:56.560 --> 20:57.560]  Тогда.
[20:57.560 --> 21:00.560]  Тогда я могу сказать так.
[21:00.560 --> 21:07.560]  В остаточной сети G с индексом F, обратите внимание, с индексом
[21:07.560 --> 21:23.560]  F, существует циркуляция под кодовым названием F штрих
[21:23.560 --> 21:24.560]  минус F.
[21:24.560 --> 21:29.560]  Ну, догадывайтесь, что это значит, да?
[21:29.560 --> 21:30.560]  Ну вот.
[21:30.560 --> 21:33.560]  Ну то есть по каждому ребру мы пускаем там вот столько
[21:33.560 --> 21:35.560]  сколько надо по нему пустить в F штрих, минус сколько
[21:35.560 --> 21:36.560]  надо пустить в F.
[21:36.560 --> 21:39.560]  То есть в остаточной сети очевидно такое существует.
[21:39.560 --> 21:40.560]  Не очевидно.
[21:40.560 --> 21:41.560]  Ну что ж.
[21:41.560 --> 21:46.560]  Ну в плане не очевидно, почему по каждому ребру будет
[21:46.560 --> 21:48.560]  нормальное значение.
[21:48.560 --> 21:49.560]  В смысле нормальное?
[21:49.560 --> 21:51.560]  Во-первых, у нас может быть отрицательное значение.
[21:51.560 --> 21:52.560]  Может.
[21:52.560 --> 21:54.560]  Во-вторых, оно может превысить.
[21:54.560 --> 21:57.560]  Но с другой стороны мы заметим, что если мы пустим отрицательное
[21:57.560 --> 22:00.560]  значение, значит мы по обратному ребру и ребру пустим положительное.
[22:00.560 --> 22:09.560]  Нужно еще понять, почему он не превысит максимальное
[22:09.560 --> 22:11.560]  значение и обратное, потому что у нас могло, например,
[22:11.560 --> 22:16.560]  в нашем идти по ребру вперед в K, а в минимальном идти
[22:16.560 --> 22:18.560]  по ребру назад в K.
[22:18.560 --> 22:21.560]  И когда мы вычтем, получим 2K, что переполнит.
[22:21.560 --> 22:23.560]  Но понимаете, какая проблема?
[22:23.560 --> 22:25.560]  Если ты по обратному ребру пускал K, значит ты по моему
[22:25.560 --> 22:27.560]  ребру пускал минус K.
[22:27.560 --> 22:33.560]  И тем самым у тебя получается 2K запасы есть в остатке.
[22:33.560 --> 22:52.560]  Ну можно просто сказать, что можно местами переставить.
[22:52.560 --> 22:55.560]  То есть у нас G мы к нему применили, а потом мы применили.
[22:55.560 --> 22:57.560]  Ну можно, да.
[22:57.560 --> 23:02.560]  А в G изначальном существует F3?
[23:02.560 --> 23:04.560]  Ну в принципе, да.
[23:04.560 --> 23:06.560]  Ну тот вопрос, кому это...
[23:06.560 --> 23:09.560]  Ну да, выкинули F3, потом прибавили F3.
[23:09.560 --> 23:11.560]  Ну да.
[23:11.560 --> 23:12.560]  То есть фактически это да.
[23:12.560 --> 23:14.560]  Ну да, потому что F shape F это изменение.
[23:14.560 --> 23:16.560]  Насколько надо изменить поток F, чтобы он превратился
[23:16.560 --> 23:18.560]  в F3.
[23:18.560 --> 23:20.560]  Ну окей, ладно, значение F3.
[23:20.560 --> 23:21.560]  Вот.
[23:21.560 --> 23:23.560]  Ну вот там, скажем так, могу просто оставить в качестве
[23:24.560 --> 23:27.560]  посмотреть там, как это бьется формальными,
[23:27.560 --> 23:30.560]  собственно, там, формальными определениями.
[23:30.560 --> 23:31.560]  Вот.
[23:31.560 --> 23:33.560]  Ну то есть идея, да, действительно, оказалось бы,
[23:33.560 --> 23:35.560]  никаких проблем быть не должно, действительно,
[23:35.560 --> 23:37.560]  просто потому что мы можем пустить в сети G и F
[23:37.560 --> 23:39.560]  и можем пустить в F'.
[23:39.560 --> 23:41.560]  То есть, значит, мы можем вести какие-то изменения
[23:41.560 --> 23:43.560]  так, чтобы F превратился в F', и это будет, очевидно,
[23:43.560 --> 23:45.560]  там, циркуляция в остаточной сети.
[23:45.560 --> 23:47.560]  Так, формально, конечно, еще надо формально проверить,
[23:47.560 --> 23:51.560]  что то, что мы тут сказали, это вообще циркуляция.
[23:51.560 --> 23:52.560]  Да.
[23:52.560 --> 23:55.560]  Но этот факт, видимо, вызывает сильно меньше сомнений.
[23:55.560 --> 23:56.560]  Конечно.
[23:56.560 --> 23:59.560]  Но это, давай, не будем тут часто копать формализм.
[23:59.560 --> 24:03.560]  Тогда, ну вот, но еще фишка в том, что тогда существует
[24:03.560 --> 24:14.560]  циркуляция F'-F, причем там ее стоимость,
[24:14.560 --> 24:21.560]  ну, она, очевидно, равна там Kostotov'-Kostotov
[24:21.560 --> 24:26.560]  и, соответственно, меньше нуля.
[24:26.560 --> 24:49.560]  Тогда в декомпозиции F'-F
[24:49.560 --> 25:14.560]  на циклы найдется хотя бы один цикл
[25:14.560 --> 25:34.560]  отрицательной стоимости.
[25:34.560 --> 25:59.560]  Да, противоречие.
[25:59.560 --> 26:02.560]  Вот.
[26:02.560 --> 26:07.560]  Ну, в принципе, вот, то есть, да, то есть, формально
[26:07.560 --> 26:10.560]  может кто-то потребует, что-то еще какие-то две фразы надо
[26:10.560 --> 26:11.560]  дописать.
[26:11.560 --> 26:13.560]  Так, знаете, я там домашнее задание иногда с доказательством
[26:13.560 --> 26:15.560]  писал в школе, и мне там его не зачли, потому что все
[26:15.560 --> 26:17.560]  правильно написано, но не хватает последней фразы
[26:17.560 --> 26:18.560]  с выводом.
[26:18.560 --> 26:19.560]  Вот.
[26:19.560 --> 26:24.560]  Чего-то мне сейчас вспомнилось.
[26:25.560 --> 26:26.560]  Вот.
[26:26.560 --> 26:29.560]  То есть, может быть, тут надо писать, следовательный
[26:29.560 --> 26:30.560]  цикл найдется.
[26:30.560 --> 26:31.560]  Там, ну, что-нибудь вот это.
[26:31.560 --> 26:32.560]  Ну, как бы, да.
[26:32.560 --> 26:37.560]  То есть, не знаю, там бывает, то есть, там бывает всякое,
[26:37.560 --> 26:39.560]  но с другой стороны, там разговоры, там, там, какие
[26:39.560 --> 26:41.560]  формалистические требования, там, у разных преподавателей
[26:41.560 --> 26:43.560]  появляются, это уже другая песня.
[26:43.560 --> 26:44.560]  Вот.
[26:44.560 --> 26:46.560]  Ну, а суть, действительно, такая такая.
[26:46.560 --> 26:48.560]  Ну, то есть, самое нетривиальное здесь может быть, а почему
[26:48.560 --> 26:51.560]  в этой декомпозиции найдется цикл отрицательной стоимости?
[26:51.560 --> 26:55.560]  Ну, думаю, достаточно очевидно, что стоимость циркуляции
[26:55.560 --> 26:58.560]  это сумма вот этих вот циклов, на которые мы декомпозировали,
[26:58.560 --> 26:59.560]  правда.
[26:59.560 --> 27:02.560]  И если все они будут неотрицательны, то и сумма будет неотрицательной.
[27:03.560 --> 27:04.560]  Вот.
[27:05.560 --> 27:08.560]  То есть, таким образом получается, что действительно,
[27:08.560 --> 27:10.560]  то есть, противоречия обнаружили.
[27:10.560 --> 27:14.560]  Значит, получается, значит, если циркуляция оптимальная,
[27:14.560 --> 27:18.560]  то, то есть, там, циркуляция не минимальная, то реально
[27:18.560 --> 27:20.560]  оптимизировать ее можно.
[27:21.560 --> 27:22.560]  Вот.
[27:22.560 --> 27:24.560]  То есть, видите, пока, в общем-то, ничего сложного нет.
[27:25.560 --> 27:27.560]  Ну, в общем, как-то не парадоксально, но, на самом деле,
[27:27.560 --> 27:29.560]  и не будет особо.
[27:29.560 --> 27:31.560]  То есть, тут больше реализационных проблем будет.
[27:32.560 --> 27:34.560]  Реализационных?
[27:34.560 --> 27:37.560]  Ну, потому что вам придется там вводить какую-то там адскую
[27:37.560 --> 27:39.560]  дэкстру с потенциалами, чтобы это адекватно писать.
[27:40.560 --> 27:42.560]  Не такую же адскую.
[27:42.560 --> 27:46.560]  Ну да, и в 95 процентах случаев, на самом деле, там это
[27:46.560 --> 27:48.560]  Форд Белман сам сработает.
[27:48.560 --> 27:51.560]  Быстрее, чем дэкстра с потенциалами?
[27:51.560 --> 27:52.560]  Ну, по разному, наверное.
[27:52.560 --> 27:55.560]  Нет, кто-то, наверное, может ввести там, сделать задачу,
[27:55.560 --> 28:00.560]  в которой, там, что дэкстра зайдет, а Форд Белман нет.
[28:00.560 --> 28:02.560]  Нет, в контексте циркула была одна задача, в которой
[28:02.560 --> 28:06.560]  заходил дэкстра и не заходил Форд Белман, но остальные...
[28:06.560 --> 28:08.560]  Ну, понятно, понятно.
[28:08.560 --> 28:09.560]  Окей.
[28:09.560 --> 28:12.560]  Да, ну, в целом, конечно, да.
[28:12.560 --> 28:15.560]  В целом, обычно, там, задачи все-таки там будут, там,
[28:15.560 --> 28:17.560]  где-то просто не заморачиваются, потому что там,
[28:17.560 --> 28:20.560]  потому что оставляются ими задачи все-таки, там,
[28:20.560 --> 28:22.560]  собственно, придумай, а при чем тут поток минимальной
[28:22.560 --> 28:23.560]  стоимости вообще.
[28:23.560 --> 28:25.560]  Форд Белман за линию, я помню.
[28:25.560 --> 28:26.560]  Вот.
[28:26.560 --> 28:27.560]  Ой, да, да, да, да, да.
[28:27.560 --> 28:30.560]  А, ну да, а, за линию, точно, да.
[28:30.560 --> 28:34.560]  Да, как поезд Гамильтонова цикла, да, мы помним, да.
[28:34.560 --> 28:35.560]  Вот.
[28:35.560 --> 28:36.560]  Да.
[28:36.560 --> 28:37.560]  Так вот.
[28:37.560 --> 28:41.560]  Итак, значит, действительно, циркуляция такая, но теперь
[28:41.560 --> 28:44.560]  остается только вопрос, а каким же образом вообще
[28:44.560 --> 28:47.560]  можно эту минимальную циркуляцию искать, даже исходя
[28:47.560 --> 28:48.560]  из этой теории?
[28:48.560 --> 28:51.560]  Ну, можно, по идее, найти любой цикл отрицательного
[28:51.560 --> 28:52.560]  веса и его уничтожить.
[28:52.560 --> 28:55.560]  Ну, можно, ну, скажем так, да, но задача, да, только
[28:55.560 --> 28:58.560]  с другой стороны, так, как мы умеем искать цикл отрицательного
[28:58.560 --> 28:59.560]  веса?
[28:59.560 --> 29:01.560]  Ой, какими-то там Флойдами закуп.
[29:01.560 --> 29:04.560]  Или там, дай бог, чтобы этими, что там, каким-то
[29:04.560 --> 29:05.560]  Фордом Белманом ЗВЕ.
[29:05.560 --> 29:06.560]  Да.
[29:06.560 --> 29:07.560]  Вот.
[29:07.560 --> 29:11.560]  Ну, в общем, давайте, ну да, причем, более того,
[29:12.560 --> 29:15.560]  это один цикл, а сколько вы их будете искать, значит,
[29:15.560 --> 29:17.560]  получается одному богу ведомо.
[29:17.560 --> 29:18.560]  Вот.
[29:18.560 --> 29:23.560]  Не больше, чем я раз.
[29:23.560 --> 29:26.560]  Кто сказал?
[29:26.560 --> 29:29.560]  Ну, у нас цикл отменяет одно
[29:29.560 --> 29:30.560]  Ну и что?
[29:30.560 --> 29:31.560]  А следующий цикл его возвращает обратно.
[29:31.560 --> 29:34.560]  Так что увы.
[29:34.560 --> 29:37.560]  То есть тут...
[29:37.560 --> 29:39.560]  Мы решаем задачу минимальной циркуляции.
[29:39.560 --> 29:42.560]  Да, мы решаем задачу минимальной циркуляции.
[29:42.560 --> 29:45.560]  Правда, предварительно убедившись, что максимальный
[29:45.560 --> 29:49.560]  поток минимальной стоимости с ней очень тупо сводится.
[29:49.560 --> 29:52.560]  Ну, тут, на самом деле, тут примерно, на самом деле,
[29:52.560 --> 29:53.560]  как алгоритм Куна.
[29:53.560 --> 29:55.560]  То есть потом мы посмотрим, как этот алгоритм будет
[29:55.560 --> 29:58.560]  работать с этой задачей и там напишем более оптимальную
[29:58.560 --> 29:59.560]  версию.
[29:59.560 --> 30:00.560]  Вот.
[30:00.560 --> 30:02.560]  Итак, ищем циркуляцию.
[30:02.560 --> 30:05.560]  Так, давайте это я тоже уберу.
[30:05.560 --> 30:06.560]  Вот.
[30:06.560 --> 30:07.560]  Вот.
[30:07.560 --> 30:10.560]  И приводит нас это к следующему.
[30:10.560 --> 30:14.560]  Значит, как нам это сделать?
[30:14.560 --> 30:15.560]  Как нам это сделать?
[30:15.560 --> 30:16.560]  Как нам это сделать?
[30:16.560 --> 30:17.560]  Вот.
[30:17.560 --> 30:20.560]  Но на самом деле идея у нас будет такая.
[30:23.560 --> 30:26.560]  Значит, мы...
[30:26.560 --> 30:29.560]  То есть на самом деле мы будем
[30:29.560 --> 30:31.560]  на самом деле делать так.
[30:31.560 --> 30:33.560]  Мы будем добавлять рёбра по очереди в граф.
[30:34.560 --> 30:36.560]  То есть изначально граф у нас будет вообще пуст.
[30:36.560 --> 30:39.200]  будет вообще пуст, мы будем добавлять ребра условно
[30:39.200 --> 30:46.200]  по одному и добиваться того, чтобы в каждый момент
[30:46.200 --> 30:49.280]  времени в остаточной сети циклов отрицательной стоимости
[30:49.280 --> 30:50.280]  не было.
[30:50.280 --> 30:57.280]  Вот, понятно?
[30:57.280 --> 31:02.280]  Что мы делаем?
[31:02.280 --> 31:09.280]  Вот, ну хорошо, да, давайте сейчас пока, ну правда,
[31:11.040 --> 31:13.240]  в этот алгоритм, чтобы жестко его как-то оценивать,
[31:13.240 --> 31:16.320]  нам придется предположить, что стоимость у него, пропсные
[31:16.320 --> 31:17.640]  способности у него целочисленные.
[31:17.640 --> 31:24.360]  Вот, более того, мы даже в принципе без особого
[31:24.360 --> 31:27.160]  в этом месте ограничения общности можем даже предположить,
[31:27.160 --> 31:30.200]  что все ребра имеют пропускную способность 1.
[31:30.200 --> 31:35.680]  Ну да, если пропускная способность больше, значит вообще примерно
[31:35.680 --> 31:36.680]  единичные ребра.
[31:36.680 --> 31:44.680]  Да, ну вот у нас такой алгоритм, как минимум, для первого
[31:44.680 --> 31:45.680]  алгоритма сойдет.
[31:45.680 --> 31:50.960]  Правда, у нас будет практически и последний, но что делать,
[31:50.960 --> 31:55.440]  там как бы есть более продвинутые алгоритмы, но они за рамки
[31:55.480 --> 31:58.120]  нашего курса все-таки выходят, увы.
[31:58.120 --> 32:05.120]  Вот, все такие алгоритмы изучать, то как бы да, возникли
[32:05.120 --> 32:06.520]  ощущения, что трех семестров мало.
[32:06.520 --> 32:11.520]  Да, есть такой риск.
[32:11.520 --> 32:16.520]  Нет, а что потоки, ребята, знаете, что далеко ходить,
[32:16.520 --> 32:19.880]  разве не интересно, как искать кратчайшие пути в неориентированном
[32:19.880 --> 32:24.560]  графе ЗВ плюс Е, с целыми не отрицательными, но произвольными
[32:24.560 --> 32:26.440]  по величине весами.
[32:26.440 --> 32:31.440]  Интересно было бы ЗВ плюс Е искать с отрицательными
[32:31.440 --> 32:32.440]  весами.
[32:32.440 --> 32:38.200]  Ну, это пока наука не в курсе дела, это как минимум.
[32:38.200 --> 32:40.360]  Или там можно было, или тогда еще нужно было далеко
[32:40.360 --> 32:42.880]  ходить, или вот, собственно, искать, как софтхип помогает
[32:42.880 --> 32:46.480]  искать миностоп за адекватное время, или вот этот лучший
[32:46.480 --> 32:49.640]  алгоритм еще можно изучить, то есть что там еще можно
[32:49.640 --> 32:50.640]  сделать.
[32:50.640 --> 32:51.640]  Миностоп онлайн.
[32:51.640 --> 32:53.120]  Ну, вот что-нибудь такое.
[32:53.120 --> 32:57.800]  Так что, уконин онлайн, добавление буковки за loglogn.
[32:57.800 --> 33:00.320]  Что там еще бывает вообще?
[33:00.320 --> 33:02.320]  То есть там...
[33:02.320 --> 33:05.800]  Ну, нет, там ситуация просто проблема, алгоритм уконина
[33:05.800 --> 33:08.240]  он работает за линию, но он амортизированный, да?
[33:08.240 --> 33:09.240]  Ну вот.
[33:09.240 --> 33:10.240]  А теперь задача.
[33:10.240 --> 33:12.600]  Хочется добавлять буковку и модифицировать дерево
[33:12.600 --> 33:15.200]  так, чтобы стоимость была железобетонная.
[33:15.200 --> 33:18.040]  По-моему, лучший алгоритм на текущий момент имеет
[33:18.040 --> 33:20.240]  в этом месте этим точку что-то типа loglogn.
[33:20.240 --> 33:26.200]  Нет, именно loglogn не путать.
[33:26.200 --> 33:28.240]  Но это другой вопрос, да.
[33:28.240 --> 33:31.640]  Ну вот, не говоря уже о том, что можно там еще разные
[33:31.640 --> 33:34.360]  алгоритмы построения, или там кольцо фаз за линию
[33:34.360 --> 33:35.360]  еще можно сделать.
[33:35.360 --> 33:37.760]  Ну, не в смысле, которые там уконины ДФС, а в смысле
[33:37.760 --> 33:38.760]  нормальные алгоритмы.
[33:38.760 --> 33:42.840]  Ну, loglogn, как керман, это, конечно, хорошо, но...
[33:42.840 --> 33:43.840]  Ну, да.
[33:43.840 --> 33:45.880]  Нет, это правильно говорить loglogn, которого часто путают
[33:45.880 --> 33:46.880]  с керманом.
[33:46.880 --> 33:47.880]  Да.
[33:47.880 --> 33:48.880]  Вот так скажем.
[33:48.880 --> 33:49.880]  Ну ладно.
[33:50.320 --> 33:54.160]  Это просто на скидку, чем можно было бы заниматься,
[33:54.160 --> 33:56.160]  если бы у нас было не три семестра А4.
[33:56.160 --> 33:58.600]  А, все, я понял, что надо заниматься этим точку.
[33:58.600 --> 34:01.520]  А керман константо, log звездочек константо, loglog
[34:01.520 --> 34:02.520]  это а керман.
[34:02.520 --> 34:03.520]  Ну, понятно, да.
[34:03.520 --> 34:04.520]  Хотя, да.
[34:04.520 --> 34:06.280]  Там дальше люди предлагают еще сказать, что хориен
[34:06.280 --> 34:07.280]  логорифм.
[34:07.280 --> 34:08.280]  Ну, понятно, да.
[34:08.280 --> 34:09.280]  Хорошие.
[34:09.280 --> 34:12.280]  Кому это в жизни приближается?
[34:12.280 --> 34:15.760]  Ну, скажем так, разве что ученым, которые там будут
[34:16.520 --> 34:18.520]  работать в области теоретической информатики.
[34:18.520 --> 34:24.600]  Хотя, в каждой статье вам подробно статьи подробно
[34:24.600 --> 34:26.680]  напишут, а, собственно, откуда эта задача взялась
[34:26.680 --> 34:28.440]  и вообще зачем она нужна на практике.
[34:28.440 --> 34:30.200]  Так что, знаете, то есть дерево доминаторов, то
[34:30.200 --> 34:32.600]  что ж не с потолка взялось, допустим, да, что просто
[34:32.600 --> 34:35.200]  вот тут прикольная задача такая, я тут придумал.
[34:35.200 --> 34:37.920]  Вот, то есть, и так далее.
[34:37.920 --> 34:39.760]  То есть, ну и там всякие вон алгоритмы, там мина
[34:39.760 --> 34:42.040]  сто тоже, там практически, какая-то практическая задача
[34:42.040 --> 34:44.560]  была, то есть там электро, там про электросеть, да,
[34:44.640 --> 34:46.640]  или там, ну, про качайшие пути, я вообще молчу.
[34:46.640 --> 34:49.760]  То есть, тут, я думаю, там сама формулировка уже
[34:49.760 --> 34:51.320]  говорит, зачем задача нужна.
[34:51.320 --> 34:52.320]  Нет.
[34:52.320 --> 34:55.800]  Ну, ой, там, слушайте, в этих статьях там вам подробно
[34:55.800 --> 34:59.280]  там покидают про всякие там анализы биопоследовательностей.
[34:59.280 --> 35:00.280]  Там что?
[35:00.280 --> 35:01.880]  Потому что там поиски подстроки в строке там при анализе
[35:01.880 --> 35:03.800]  ДНК, это прям святое там везде.
[35:03.800 --> 35:07.120]  Так что как бы нет, мы как бы не просто так это все
[35:07.120 --> 35:08.120]  придумывается.
[35:08.120 --> 35:10.120]  Это придумывали не для того, чтобы нам тут на Олимпиадах
[35:10.120 --> 35:11.120]  не было скучно.
[35:11.120 --> 35:13.720]  То есть, нет, конечно, да, то есть в какой-то степени
[35:13.720 --> 35:16.080]  нет, конечно, но в этом смысле это в любой математике
[35:16.080 --> 35:18.480]  так, то есть там можно там углубиться в какие-то
[35:18.480 --> 35:20.880]  вещи, которые вообще непонятно зачем нужны на практике,
[35:20.880 --> 35:22.720]  но тем не менее математики ими занимаются.
[35:22.720 --> 35:24.400]  Через 300 лет их применится.
[35:24.400 --> 35:25.400]  Ну, может быть.
[35:25.400 --> 35:28.600]  Их или разработанные идеи, да, совершенно верно, совершенно
[35:28.600 --> 35:29.600]  верно.
[35:29.600 --> 35:30.600]  Ну, да.
[35:30.600 --> 35:32.600]  То есть, ну, как вы знаете, когда, причем, более того,
[35:32.600 --> 35:35.160]  в математике как-то, то есть, как бы за занятия казалось
[35:35.160 --> 35:37.480]  бы такой математикой еще гранты какие-то выделяют
[35:37.480 --> 35:38.480]  даже представить.
[35:38.480 --> 35:43.280]  Ну, вот, причем даже у нас в стране, что интересно.
[35:43.480 --> 35:47.960]  Так что, соответственно, вот так вот идем.
[35:47.960 --> 35:52.200]  Значит, теперь как будем искать?
[35:52.200 --> 35:56.560]  Идея будет такая, как я уже сказал, изначально граф
[35:56.560 --> 36:01.080]  пустой-пустой-пустой-пустой-пустой-пустой-пустой-пустой-пустой-пустой-пустой-пустой-пустой-пустой,
[36:01.080 --> 36:05.080]  ну короче, поняли, да, вот и будем добавлять по
[36:05.080 --> 36:06.080]  одному ребру.
[36:06.080 --> 36:10.800]  В каждый момент времени у нас есть остаточная сеть
[36:10.800 --> 36:23.800]  И мы, там, какая-то остаточная сеть, и мы будем гарантировать, что в это, ну, я рисую единичные ребра, да, и я гарантирую, что на текущий момент в этой остаточной сети нет никаких циклов отрицательной стоимости.
[36:29.300 --> 36:32.300]  И пришло к нам новое ребро.
[36:35.800 --> 36:36.800]  Ну, допустим, вот оно.
[36:37.800 --> 36:45.800]  Но, внимание, вопрос. Мог ли появиться новый цикл отрицательной стоимости?
[36:46.800 --> 36:47.800]  Очевидно, мог.
[36:47.800 --> 36:49.800]  Как говорится, ответ вполне.
[36:52.800 --> 36:59.800]  Но теперь давайте думать, а как выяснить, появился ли цикл отрицательной стоимости или не появился?
[37:00.800 --> 37:05.800]  Ну, нам нужен кратчайший путь между грошинами в старом графе.
[37:06.800 --> 37:10.800]  Да. Ну, логично, да. Если он появился, значит, он, очевидно, проходит через это ребро.
[37:11.800 --> 37:18.800]  Значит, у нас есть какой-то путь от этой вершины до этой, такой, что его стоимость этого пути плюс стоимость этого ребра меньше нуля.
[37:19.800 --> 37:29.800]  То есть, остается только проверить. Давайте найдем, там, любыми средствами кратчайший путь отсюда-сюда, и поймем, есть ли цикл отрицательной...
[37:29.800 --> 37:37.800]  И поймем, получился цикл отрицательной стоимости. Если не получился, значит, новый цикл отрицательной стоимости не произошло.
[37:38.800 --> 37:40.800]  Идем дальше. Понимаете, да?
[37:42.800 --> 37:47.800]  А что делать, если все-таки цикл оказался отрицательной стоимостью?
[37:50.800 --> 37:55.800]  Ну, наша жадность, конечно, говорит, ну так давайте пустим единицу потока по этому циклу, чего бы нет.
[37:56.800 --> 37:59.800]  У нас все ребра единичные, поэтому все ребра сразу пропадут?
[38:00.800 --> 38:03.800]  Да, все ребра пропадут. Но появится обратное.
[38:04.800 --> 38:06.800]  Почему все ребра единичные?
[38:07.800 --> 38:09.800]  Потому что мы так договорились, на самом деле.
[38:10.800 --> 38:14.800]  Ай-яй-яй, конечно, поэтому цикл отрицательной стоимости положительный, но есть иван.
[38:15.800 --> 38:18.800]  Да, что ж, цикл отрицательной стоимости могли появиться в другом месте.
[38:19.800 --> 38:20.800]  В другом месте, да.
[38:21.800 --> 38:22.800]  Почему они...
[38:22.800 --> 38:28.560]  самом деле. Граф из единичных, имею в виду, что граф целочисленный на самом деле,
[38:28.560 --> 38:33.360]  то есть целочисленными пропускными способностями. Да, на стоимости такого ограничения нет.
[38:33.360 --> 38:42.040]  И заметим, что у нас... Нет, ну сейчас мы просто пользуемся тем, что у нас все по единичке.
[38:42.040 --> 38:52.400]  Хотя в общем-то это неважно на самом деле. Важно на самом деле,
[38:52.960 --> 38:58.800]  давайте сейчас для простоты предположим, что у нас единичка, и чуть позже тогда поймем,
[38:58.800 --> 39:04.760]  что делать, если там больше единички или даже случайно что-то не целочисленное.
[39:04.760 --> 39:12.280]  Ну почему нет, профессиональные способности не целочисленные бывают.
[39:12.280 --> 39:16.040]  Да, мы даже в hard life даже с этим столкнулись.
[39:16.040 --> 39:24.800]  Бывает, да. Более того, здесь это тоже, забегая вперед, так может произойти.
[39:24.800 --> 39:34.600]  Да, но ничего страшного. Спокойно, спокойно. Сейчас все будет.
[39:34.600 --> 39:41.520]  Так, во-первых, нам сейчас интересно такое, что делать, если мы тут как проверить,
[39:41.520 --> 39:45.120]  что после того, как мы пустили поток по этому циклу, по этому свежеобразованному
[39:45.120 --> 39:51.320]  циклу отрицательной стоимости, как убедиться, что отрицательного цикла нет или наоборот убедиться,
[39:51.320 --> 40:01.280]  что есть? Нет, ну есть тупой вариант взять все вот вновь добавившиеся рёбра и просто их тоже по одному добавлять, как и все остальные циклы.
[40:01.280 --> 40:31.280]  Ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой, ой,
[40:31.280 --> 40:36.920]  но сейчас мы это докажем, а заодно введем еще одно приятное понятие.
[40:36.920 --> 40:38.520]  Короче, это будет по цене, да?
[40:38.520 --> 40:41.520]  Да. Да, именно по цене.
[40:41.520 --> 40:50.520]  Да, для этого мы введем, то есть оказывается полезным ввести понятие потенциал.
[40:50.520 --> 40:54.520]  Что такое в данном случае потенциал?
[40:54.760 --> 41:00.760]  То есть будем говорить, что потенциал – это просто такая функция P,
[41:00.760 --> 41:06.760]  которая ставит в соответствии каждой вершине какое-то мистическое будь здоров число.
[41:06.760 --> 41:09.760]  Ну, это просто какое-то число.
[41:09.760 --> 41:12.760]  Может положительное, может отрицательное.
[41:12.760 --> 41:16.760]  То есть в общем-то в определении потенциала больше ничего нет.
[41:16.760 --> 41:18.760]  Этого потенциала, конечно.
[41:18.760 --> 41:23.760]  То есть не путать, конечно, со всякими потенциалами из амортизационного анализа.
[41:24.000 --> 41:29.000]  Вот. Ну, а с этим, ну вот.
[41:29.000 --> 41:32.000]  Ну, во-первых, относительно каждого потенциала
[41:32.000 --> 41:38.000]  можно ввести понятие приведенная стоимость.
[41:38.000 --> 41:40.000]  Ребра.
[41:40.000 --> 41:44.000]  То есть приведенная стоимость.
[41:47.000 --> 41:53.000]  То есть кост с индексом P от конкретного ребра E
[41:53.240 --> 41:56.240]  она будет равна чему?
[41:56.240 --> 41:59.240]  Она будет как всегда равна
[41:59.240 --> 42:01.240]  обычной стоимости E
[42:01.240 --> 42:05.240]  плюс потенциал от начала
[42:07.240 --> 42:12.240]  минус потенциал финиша.
[42:18.240 --> 42:21.240]  Вот. Ну, кстати, мы вот когда изучали алгоритм Джонсона
[42:21.480 --> 42:23.480]  мы уже сталкивались с этой штукой, правда?
[42:23.480 --> 42:25.480]  Помните было дело, да?
[42:25.480 --> 42:29.480]  Поэтому я думаю вас не сильно удивит там утверждение
[42:30.480 --> 42:36.480]  о том, что пусть РО это путь от У до В.
[42:40.480 --> 42:44.480]  Тогда оказывается, что приведенная стоимость этого пути
[42:46.480 --> 42:48.480]  она равна просто кост.
[42:48.480 --> 42:50.480]  То есть она просто равна обычной стоимости
[42:50.720 --> 42:53.720]  плюс потенциал в начале, минус потенциал в конце.
[42:57.720 --> 42:59.720]  Ну, думаю, это...
[42:59.720 --> 43:01.720]  Так, надо расписывать почему это так?
[43:01.720 --> 43:03.720]  Нет.
[43:05.720 --> 43:09.720]  Думаю, также очевиден и еще какой-нибудь веселый факт.
[43:14.720 --> 43:18.720]  Сейчас только не кост У, кост В, а ПУПВ.
[43:18.960 --> 43:20.960]  Чего?
[43:20.960 --> 43:22.960]  А, ой, да, спасибо.
[43:29.960 --> 43:33.960]  Ну вот, ну еще заметим, что если РО это цикл
[43:35.960 --> 43:38.960]  то просто вот, отметим важный момент, что
[43:38.960 --> 43:42.960]  тогда приведенная стоимость цикла равна
[43:42.960 --> 43:44.960]  обычной стоимости цикла.
[43:44.960 --> 43:47.960]  То есть потенциал на них никак не влияет.
[43:48.960 --> 43:50.960]  Вот.
[43:51.960 --> 43:54.960]  То есть вот, введем такую вот полезную штуку.
[43:56.960 --> 43:58.960]  Ну, сильно полезная она становится, на самом деле,
[43:58.960 --> 44:01.960]  когда мы вводим еще такое мистическое определение.
[44:01.960 --> 44:03.960]  Потенциал П
[44:07.960 --> 44:10.960]  не отрицательный
[44:11.200 --> 44:14.200]  не отрицательный
[44:22.200 --> 44:24.200]  если
[44:25.200 --> 44:27.200]  для любого ребра
[44:32.200 --> 44:34.200]  то есть для любого ребра
[44:34.200 --> 44:38.200]  ну, давайте, можем оговориться еще сказать, что у которого
[44:38.200 --> 44:40.200]  пропускная способность
[44:40.440 --> 44:42.440]  больше нуля
[44:43.440 --> 44:45.440]  имеется в виду.
[44:45.440 --> 44:47.440]  Вот, соответственно,
[44:47.440 --> 44:49.440]  его приведенная стоимость
[44:49.440 --> 44:52.440]  не отрицательна.
[44:55.440 --> 44:57.440]  То есть вот так.
[44:59.440 --> 45:01.440]  Ну, была отрицательна, а приведенная
[45:01.440 --> 45:03.440]  стоимость относить к такой потенциалу
[45:03.440 --> 45:05.440]  стала положительной.
[45:05.440 --> 45:07.440]  Ну, в смысле,
[45:07.440 --> 45:09.440]  мы просто не закладываем на так
[45:09.440 --> 45:11.440]  не отрицательный потенциал.
[45:11.440 --> 45:13.440]  Ну, типа того, да.
[45:13.440 --> 45:15.440]  Нет, ну а в чем проблема?
[45:15.440 --> 45:17.440]  Нет, ну давайте вспоминать.
[45:17.440 --> 45:19.440]  То есть, на самом деле, если вы сейчас
[45:19.440 --> 45:21.440]  вспомните алгоритм Джонса,
[45:21.440 --> 45:23.440]  то вы практически без труда пробьете
[45:23.440 --> 45:25.440]  то, что будет происходить дальше.
[45:29.440 --> 45:31.440]  Просто
[45:31.440 --> 45:33.440]  то есть, на самом деле,
[45:33.440 --> 45:35.440]  просто мы даже
[45:35.440 --> 45:37.440]  даже в этой теории доказывали
[45:37.440 --> 45:39.440]  мистическую теорему.
[45:41.440 --> 45:43.440]  Существует не отрицательный потенциал
[45:49.440 --> 45:51.440]  тогда и только тогда,
[45:51.440 --> 45:53.440]  когда нет
[45:53.440 --> 45:55.440]  циклов отрицательного веса.
[45:55.440 --> 45:57.440]  Да, да.
[46:04.800 --> 46:05.800]  Так compañей, что мы
[46:05.800 --> 46:07.800]  в не отрицательном потенциале
[46:07.800 --> 46:09.800]  для ребер отрицательного веса
[46:09.800 --> 46:11.800]  ничего не гарантируем.
[46:11.800 --> 46:12.800]  Чего?
[46:12.800 --> 46:14.800]  Чего не гарантируем?
[46:14.800 --> 46:16.800]  Ничего не гарантируем.
[46:16.800 --> 46:18.800]  А, для кого не гарантируем?
[46:18.800 --> 46:20.800]  Для ребер отрицательного веса.
[46:20.800 --> 46:22.800]  А что мы должны для них гарантировать?
[46:25.440 --> 46:35.920]  Давайте вспомним, заодно вспомним откуда это доказательство
[46:35.920 --> 46:36.920]  берется.
[46:36.920 --> 46:39.040]  В одну сторону очевидно, потому что неотрицательный
[46:39.040 --> 46:42.160]  потенциал гарантирует отсутствие циклов отрицательной
[46:42.160 --> 46:43.160]  стоимости.
[46:43.160 --> 46:55.280]  Вес циклов не меняется от неотрицательного потенциала
[46:55.280 --> 46:56.280]  циклов.
[46:56.280 --> 46:58.120]  Все приведенные стоимости очевидно тоже неотрицательные
[46:58.120 --> 46:59.120]  циклы.
[46:59.120 --> 47:08.040]  Ну и наоборот, запускаем пылфрейт с любой вершины.
[47:08.040 --> 47:10.240]  Ой, не пылфрейт, ну короче находим расстояние от любой
[47:10.240 --> 47:14.560]  вершины и кладем потенциал от расстояния.
[47:14.560 --> 47:15.560]  Ну вот.
[47:15.560 --> 47:16.560]  Ну да, вот в обрат.
[47:16.560 --> 47:18.680]  Не очевидно, если в цикле все отрицательные ребра,
[47:18.680 --> 47:21.560]  мы для них ничего не гарантируем про приведенные стоимости
[47:21.560 --> 47:22.560]  и все.
[47:22.960 --> 47:27.040]  Нет, ну то есть, предположим, что у тебя нашелся случайный
[47:27.040 --> 47:31.080]  неотрицательный потенциал, тогда очевидно рассмотрим
[47:31.080 --> 47:35.120]  любой цикл, утверждение, его стоимость неотрицательна,
[47:35.120 --> 47:37.960]  потому что его приведенная стоимость железобетонно
[47:37.960 --> 47:41.520]  неотрицательна, потому что у каждого ребра этого цикла
[47:41.520 --> 47:42.520]  стоимость...
[47:43.280 --> 47:46.280]  Вы за С обозначили пропускную способность и не стоимость.
[47:46.280 --> 47:47.280]  Я так понимаю?
[47:47.280 --> 47:49.880]  То есть, там все ребра были отрицательные стоимости.
[47:49.880 --> 47:52.640]  Да, за С я, естественно, обозначил пропускную способность
[47:52.640 --> 47:53.640]  и не стоимость.
[47:53.640 --> 47:54.640]  А, все.
[47:54.640 --> 47:56.640]  Да, давайте не путать С и КОСТ.
[47:56.640 --> 47:58.640]  Все, окей.
[47:58.640 --> 47:59.640]  Вот.
[47:59.640 --> 48:01.640]  А, если в этом проблема была, то окей.
[48:01.640 --> 48:02.640]  В этом проблема была, да.
[48:02.640 --> 48:03.640]  Все, все, все.
[48:03.640 --> 48:06.640]  Да, С это пропускная способность, КОСТ это стоимость, да.
[48:06.640 --> 48:08.640]  Теперь вопросов много.
[48:08.640 --> 48:09.640]  Вот, хорошо.
[48:09.640 --> 48:11.960]  Теперь тогда, значит, в одну сторону очевидно, в другую
[48:11.960 --> 48:12.960]  сторону.
[48:12.960 --> 48:16.200]  И как найти, что делать, если нет циклов отрицательной
[48:16.200 --> 48:17.200]  стоимости?
[48:17.200 --> 48:20.840]  Тогда, оказывается, потенциал можно ввести неожиданно
[48:20.840 --> 48:21.840]  тупым образом.
[48:21.840 --> 48:26.880]  Берем какую-нибудь дополнительную вершину О и проводим из
[48:26.880 --> 48:30.440]  нее ребра, ну, на самом деле, достаточно произвольной
[48:30.440 --> 48:31.440]  стоимости.
[48:31.440 --> 48:33.160]  И тупо находим кратчайший путь.
[48:33.160 --> 48:37.840]  И тогда в качестве потенциала объявляем кратчайшее расстояние
[48:37.840 --> 48:39.680]  от О до каждой из вершин.
[48:39.680 --> 48:44.000]  Утверждение, этот потенциал не отрицательный.
[48:44.000 --> 48:49.960]  Все, воспоминается, да?
[48:49.960 --> 48:54.200]  Ну, доказательство очень простое, да, что как доказать,
[48:54.200 --> 48:56.360]  что вот эта величина больше либо равна нуля, если по
[48:56.360 --> 48:58.360]  АТУ это расстояние, да?
[48:58.360 --> 49:01.280]  Если ребро лежит в дереве кратчайших расстояний,
[49:01.280 --> 49:06.120]  то у него приведенная стоимость ноль, а если не лежит, то
[49:06.120 --> 49:08.800]  она там не может быть меньше нуля, потому что иначе у
[49:08.880 --> 49:10.680]  нас новое кратчайшее расстояние.
[49:10.680 --> 49:13.080]  Ну, сказать, наверное, можно и так.
[49:13.080 --> 49:17.280]  Ну, это прям супер тупое рассуждение просто по построению.
[49:17.280 --> 49:20.560]  Ну, не совсем так, знаешь, оно, по-моему, немножко попахивает
[49:20.560 --> 49:24.640]  чем-то в духе, то есть чем-то в духе оно понятно, потому
[49:24.640 --> 49:25.640]  что оно понятно.
[49:25.640 --> 49:27.480]  Не, ну, в смысле, если у нас вот в этих зеленых ребрах
[49:27.480 --> 49:29.480]  лежит наше ребро, то все очевидно?
[49:29.480 --> 49:32.520]  Нужно очевидно, что у нас приведенная стоимость
[49:32.520 --> 49:33.520]  ребра ноль.
[49:33.520 --> 49:38.000]  Ну, если ребро лежит на кратчайшем пути, то, конечно,
[49:38.080 --> 49:41.040]  а если не лежит, ну, предположим, у него приведенная стоимость
[49:41.040 --> 49:44.680]  отрицательная, тогда там, кажется, получится просто,
[49:44.680 --> 49:49.000]  что расстояние до там конечной вершины у нас будет меньше,
[49:49.000 --> 49:50.000]  чем кратчайше.
[49:50.000 --> 49:52.320]  Да, и будет вопрос, а почему получится?
[49:53.520 --> 49:54.520]  В смысле?
[49:54.520 --> 49:55.520]  Ну, почему получится?
[49:55.520 --> 49:57.400]  Что там что-то там меньше, какое-то расстояние правильно
[49:57.400 --> 49:58.400]  посчитано.
[49:58.840 --> 49:59.840]  Почему получится?
[49:59.840 --> 50:02.760]  Мы хотим сказать, что у нас все кратчайшие пути сохраняются
[50:02.760 --> 50:04.760]  за счет свойств.
[50:04.760 --> 50:06.280]  Ну, скажем так.
[50:06.360 --> 50:07.360]  Нет, сказать-то да.
[50:07.360 --> 50:11.720]  Стоимость пути от начальной до там конечной, от начальной
[50:11.720 --> 50:14.120]  вершины, вот в целом в графе до конечной вершины этого
[50:14.120 --> 50:19.640]  ребра у нас там какой-то х, если мы сейчас добавляем,
[50:19.640 --> 50:23.400]  если у нас сейчас отрицательная стоимость, то мы переходя
[50:23.400 --> 50:26.600]  в то, что мы получаем, расстояние меньше.
[50:26.600 --> 50:29.080]  Ну да, осталось только выяснить, сколько минут вы это будете
[50:29.080 --> 50:30.560]  мне потом на экзамене расписывать.
[50:30.560 --> 50:33.560]  Не, если там, в смысле, поводить переменный расписатель,
[50:33.560 --> 50:34.560]  то страшно.
[50:34.560 --> 50:35.560]  Да.
[50:35.560 --> 50:38.320]  Я вам сейчас, по-моему, просто назову это в две строчки,
[50:38.320 --> 50:40.200]  на самом деле скажу то же самое.
[50:40.200 --> 50:41.480]  То есть идея очень простая.
[50:41.480 --> 50:43.280]  Рассмотрим вот эту стоимость.
[50:43.280 --> 50:44.800]  Для любого ребра дистов.
[50:44.800 --> 50:45.800]  Смотрите.
[50:45.800 --> 50:46.800]  Тогда смотрите.
[50:46.800 --> 50:52.800]  П от В это кратчайшее расстояние от О до В, а КОСТОТРО от пути
[50:52.800 --> 50:59.560]  до У, то есть там, ну вот, а сейчас, нет, не то, вот это.
[50:59.560 --> 51:01.880]  Да, то есть расстояние, то есть это расстояние, это
[51:01.880 --> 51:05.480]  длина кратчайшего пути до финиша, да?
[51:05.480 --> 51:07.320]  А вот что это такое?
[51:07.320 --> 51:10.280]  Расстояние до стартовой вершины плюс стоимость
[51:10.280 --> 51:12.520]  ребра от стартовой до финишной.
[51:12.520 --> 51:16.520]  Это длина какого-то пути до той же самой финишной
[51:16.520 --> 51:17.520]  вершины.
[51:17.520 --> 51:21.280]  Но как бы, если вы вычтите длину какого-то пути, из
[51:21.280 --> 51:25.200]  длины какого-то пути вычтите длину минимального пути,
[51:25.200 --> 51:27.160]  то, очевидно, вы получите отрицательное число.
[51:27.160 --> 51:30.400]  Просто по определению слова минимальный путь.
[51:30.400 --> 51:31.400]  Вот.
[51:31.400 --> 51:34.520]  То есть, в общем-то, и всё.
[51:35.520 --> 51:38.720]  То есть, я думаю, вот это, пока, как мне кажется, от
[51:38.720 --> 51:41.120]  этих двух предложений уже точно вопросов не возникнет.
[51:41.120 --> 51:43.120]  Уже не будет там, скорее всего, неукрованно.
[51:43.120 --> 51:46.120]  Не, там можно поиздеваться над экзаменуем и попросить
[51:46.120 --> 51:49.120]  расписание определения минимального пути и там
[51:49.120 --> 51:52.120]  вообще пути и просто поприкалываться.
[51:52.120 --> 51:54.320]  Ну, если, ну, мы уже можем предположить, что мы, наверное,
[51:54.320 --> 51:56.720]  в третьем семестре, как бы, да, понятие «путь» у нас
[51:56.720 --> 51:58.320]  вводилось в прошлом, в прошлые разы.
[51:58.320 --> 52:01.120]  Это я должен был над вами издеваться во втором семестре,
[52:01.120 --> 52:03.120]  если не в первом.
[52:03.120 --> 52:04.120]  Вот.
[52:04.720 --> 52:05.720]  Так что это уже, да.
[52:05.720 --> 52:09.720]  Но, с другой стороны, я думаю, там, вот этим децентром
[52:09.720 --> 52:12.720]  мы всё-таки заниматься не будем.
[52:12.720 --> 52:14.720]  Потому что, ну, это как-то совсем уже на оценку, там,
[52:14.720 --> 52:18.120]  это шо вам ставить, ноль или один.
[52:18.120 --> 52:20.120]  А преподаватели обычно в этом месте не заморачиваются,
[52:20.120 --> 52:23.120]  вот просто ставят неут и идёт спать, как бы.
[52:23.120 --> 52:26.120]  Соответственно, да.
[52:26.120 --> 52:27.120]  Вот.
[52:27.120 --> 52:30.120]  Значит, да, то есть, теория, мы действительно тут достаточно
[52:30.120 --> 52:31.120]  простая.
[52:31.120 --> 52:33.120]  Более того, мы сейчас, на самом деле, её начнём
[52:33.120 --> 52:34.120]  пользовать.
[52:34.120 --> 52:36.120]  Потому что это-то утверждение достаточно простое.
[52:36.120 --> 52:38.120]  Более того, оно в Джонсоне было.
[52:38.120 --> 52:41.120]  Мы им в явном виде пользовались.
[52:41.120 --> 52:42.120]  Помните, да?
[52:42.120 --> 52:45.120]  То есть, мы им пользовались, потому что мы даже просто
[52:45.120 --> 52:48.120]  в алгоритме поиска качайших путей между всеми парами
[52:48.120 --> 52:51.120]  вершин в явном виде это делали.
[52:51.120 --> 52:53.120]  И это помогало нам теперь от каждой вершины найти
[52:53.120 --> 52:58.120]  расстояние до остальных с помощью дэекстра с потенциалами.
[52:58.120 --> 53:00.120]  Помните, да?
[53:00.120 --> 53:02.120]  То есть, более того, я вам даже сейчас скажу, что мы сейчас
[53:02.120 --> 53:06.120]  эту дэекстру с потенциалами будем использовать.
[53:06.120 --> 53:09.120]  Потому что идея следующая.
[53:09.120 --> 53:11.120]  Значит, ну, значит, мы будем поддерживать.
[53:11.120 --> 53:13.120]  Значит, теперь смотрите, внимание.
[53:13.120 --> 53:15.120]  Значит, может сказать, мы начинаем приближаться
[53:15.120 --> 53:16.120]  к алгоритму.
[53:16.120 --> 53:19.120]  То есть, нет, на этот раз, конечно же, мы не будем вводить
[53:19.120 --> 53:23.120]  вот эту мистическую вершину и что-то рисовать.
[53:23.120 --> 53:24.120]  Вот.
[53:24.120 --> 53:26.120]  Мы будем пока просто поддерживать инвариант, что у нас
[53:26.120 --> 53:29.120]  в каждый момент времени есть неотрицательный потенциал
[53:29.120 --> 53:31.120]  в остаточной сети.
[53:31.120 --> 53:33.120]  Ну, и сначально это поддержать очень легко.
[53:33.120 --> 53:35.120]  Когда у вас нет ребер, в принципе, подойдет вам
[53:35.120 --> 53:37.120]  какой потенциал?
[53:39.120 --> 53:41.120]  Ноль.
[53:41.120 --> 53:44.120]  Ну, может сказать нулевой.
[53:44.120 --> 53:47.120]  А можно сказать любой.
[53:47.120 --> 53:50.120]  Да, пока нет ребер, в общем-то, подойдет что угодно.
[53:50.120 --> 53:51.120]  Вот.
[53:51.120 --> 53:53.120]  Ну, лучше, конечно, нулевой, просто чтобы у вас там
[53:53.120 --> 53:57.120]  какие-то там неожиданные переполнения не возникали.
[53:57.120 --> 53:58.120]  Вот.
[53:58.120 --> 54:00.120]  Топереча.
[54:00.120 --> 54:02.120]  Ну, тогда идея такая.
[54:02.120 --> 54:05.120]  Если у вас перед вот добавлением новым ребра был неотрицательный
[54:05.120 --> 54:09.120]  потенциал, то вы можете, наверное, без труда найти
[54:09.120 --> 54:13.120]  кратчайшее расстояние от вот этой вершины до всех
[54:13.120 --> 54:15.120]  остальных.
[54:15.120 --> 54:17.120]  За Dx, правда?
[54:19.120 --> 54:21.120]  Ну да, все ребра неотрицательные, да.
[54:21.120 --> 54:25.120]  Ну, приведенное неотрицательное, поэтому, вот.
[54:25.120 --> 54:27.120]  Поэтому там расстояние ищут.
[54:27.120 --> 54:28.120]  Но важный момент.
[54:28.120 --> 54:29.120]  Вот.
[54:29.120 --> 54:33.120]  Более того, в этом месте, что нам очень важно, мы
[54:33.120 --> 54:34.120]  перепишем потенциал.
[54:34.120 --> 54:43.120]  То есть у нас вот был потенциал P до, в смысле начала шара,
[54:43.120 --> 54:44.120]  да.
[54:44.120 --> 54:48.120]  То есть когда мы вот, если мы вот тут, вот давайте
[54:48.120 --> 54:51.120]  предположим, что мы добавляем ребро из вершины U в вершины
[54:51.120 --> 54:52.120]  V.
[54:52.120 --> 54:53.120]  Там стоимость какой-нибудь там кост, да.
[54:53.120 --> 55:03.120]  И мы сразу себе СК пропишем, что расстояние P после, это
[55:03.120 --> 55:07.120]  будет просто расстояние, то есть от какой-нибудь
[55:07.120 --> 55:10.120]  вершины W, до какой-нибудь, потенциал какой-нибудь
[55:10.120 --> 55:13.120]  вершины W, это расстояние от вершины Dv до вершины
[55:13.120 --> 55:16.120]  W.
[55:16.120 --> 55:20.120]  Но обратите внимание, расстояние, видите, я здесь не
[55:20.120 --> 55:22.120]  пишу индекс потенциала, и это не случайно.
[55:22.120 --> 55:27.120]  Потому что я имею в виду не приведенное расстояние,
[55:27.120 --> 55:28.120]  а реальное.
[55:28.120 --> 55:34.120]  Ну да, ну то есть мы считаем приведенное, потом мы,
[55:34.120 --> 55:37.120]  зная потенциал, вычисляем реальное, а потом мы его
[55:37.120 --> 55:38.120]  перезаписываем.
[55:38.120 --> 55:39.120]  Ну вот.
[55:39.120 --> 55:40.120]  Ну на самом деле, да.
[55:40.120 --> 55:42.120]  То есть тут легко видеть, да, что, наверное, если вы
[55:42.120 --> 55:45.120]  нашли приведенное расстояние, да, то, очевидно, получить
[55:45.120 --> 55:48.120]  из него реальное расстояние без проблем.
[55:48.120 --> 55:50.120]  С помощью вот этого вот вершины, правда?
[55:50.120 --> 55:53.120]  Ну там, прибавляем потенциал в конце, вычитаем потенциал
[55:53.120 --> 55:56.120]  в начале, все.
[55:56.120 --> 55:59.120]  Но тем не менее, печальная оговорка здесь есть.
[55:59.120 --> 56:02.120]  А расстояние в каком графе до того, как мы упустили
[56:02.120 --> 56:03.120]  или после того?
[56:03.120 --> 56:04.120]  До.
[56:04.120 --> 56:08.120]  Ну как бы, да, то есть без учета этого ребра.
[56:08.120 --> 56:09.120]  Ну там, правда, два варианта.
[56:09.120 --> 56:11.120]  Либо отрицательный цикл есть, и тогда все расстояния
[56:11.120 --> 56:13.120]  – это минус бесконечность.
[56:13.120 --> 56:16.120]  Либо цикла отрицательного веса нет, и тогда это ребро
[56:16.120 --> 56:19.120]  не на что не влияет.
[56:19.120 --> 56:22.120]  Нет, нет, нет, в смысле, вот у нас был граф, мы добавили
[56:22.120 --> 56:25.120]  ребро и пустили единичку.
[56:25.120 --> 56:27.120]  Куда пустили?
[56:27.120 --> 56:29.120]  Нет, мы могли пустить, могли не пустить.
[56:29.120 --> 56:31.120]  Мы пока еще ничего не пускали.
[56:31.120 --> 56:33.120]  Ну вот, главное, что мы пустили единичку.
[56:33.120 --> 56:34.120]  У нас поменялся вера.
[56:34.120 --> 56:37.120]  И там расстояние реальное тоже поменялось.
[56:37.120 --> 56:38.120]  Поменялись.
[56:38.120 --> 56:39.120]  Но нас они пока не интересуют.
[56:39.120 --> 56:42.120]  Да, мы на каждом шаге будем искать новые расстояния,
[56:42.120 --> 56:45.120]  если что.
[56:45.120 --> 56:50.120]  Что такое ПДО и ППОС?
[56:50.120 --> 56:54.120]  Значит, мы говорим, пусть у нас был какой-то граф,
[56:54.120 --> 56:58.120]  то есть была какая-то остаточная сеть, и в ней был неотрицательный
[56:58.120 --> 57:01.120]  потенциал, говорим мы.
[57:01.120 --> 57:04.120]  И вот рассмотрим, и вот на очередном шаге мы добавляем
[57:04.120 --> 57:06.120]  ребро от УВ.
[57:06.120 --> 57:07.120]  И вот я расписываю.
[57:07.120 --> 57:10.120]  Так вот, я утверждаю, что в процессе этого шага
[57:10.120 --> 57:13.120]  мы потенциал поменяем.
[57:13.120 --> 57:17.120]  И этот потенциал, поэтому я говорю, появились потенциал
[57:17.120 --> 57:21.120]  то, что было раньше, а это потенциал то, который будет
[57:21.120 --> 57:22.120]  в результате.
[57:22.120 --> 57:23.120]  Вот.
[57:23.120 --> 57:27.120]  Потому что в процессе этого шага я дону новый потенциал,
[57:27.120 --> 57:30.120]  потому что я найду кратчайшее расстояние от этой вершины
[57:30.120 --> 57:31.120]  до всех остальных.
[57:31.120 --> 57:32.120]  Ну без учета этого ребра.
[57:32.120 --> 57:38.120]  Ну расстояние, естественно, я ищу по ненасыщенным ребрам,
[57:38.120 --> 57:39.120]  но думаю, это понятно.
[57:39.120 --> 57:50.120]  Ну, к сожалению, вредная оговорка, которую придется
[57:50.120 --> 57:52.120]  сделать, тут все-таки есть.
[57:52.120 --> 57:57.120]  Как вы думаете, какая?
[58:09.120 --> 58:16.120]  У нас нет понятия связанной не связанности в ориентированном
[58:16.120 --> 58:17.120]  графе.
[58:17.120 --> 58:19.120]  Да, но идея правильная, действительно.
[58:19.120 --> 58:22.120]  Особенно поначалу никто не сказал, что мы от вершины
[58:22.120 --> 58:25.120]  V до всех вершин можем дойти.
[58:25.120 --> 58:27.120]  Проблема, да?
[58:27.120 --> 58:29.120]  Но идейно все остается.
[58:29.120 --> 58:32.120]  То есть до кого дотянемся, потенциал пишем такой.
[58:32.120 --> 58:33.120]  Нет.
[58:33.120 --> 58:36.120]  Нет, конечно, не нолики.
[58:37.120 --> 58:40.120]  Нет, ну оставлять прежний тоже не получится.
[58:40.120 --> 58:43.120]  Ну то есть там могут быть какие-то остальные какие-то
[58:43.120 --> 58:46.120]  ребра, да, для них хотелось бы оставить потенциал прежний.
[58:46.120 --> 58:49.120]  Но есть проблема, потому что есть вот то, до чего мы
[58:49.120 --> 58:53.120]  дотянулись, есть остальной мир.
[58:53.120 --> 58:58.120]  И из этого остального мира в нас ребра вполне себе
[58:58.120 --> 58:59.120]  существуют.
[58:59.120 --> 59:03.120]  Да, в эту сторону нет, но в нашу сторону да.
[59:03.120 --> 59:07.120]  Поэтому если мы тут потенциал не поменяем, а тут поменяем,
[59:07.120 --> 59:09.120]  то с этими ребрами могут быть проблемы.
[59:09.120 --> 59:11.120]  О чем мы тогда хотим делать?
[59:11.120 --> 59:15.120]  Просто берем старый, в остальном мире берем старый
[59:15.120 --> 59:20.120]  потенциал и прибавляем ко всем, ко всем потенциалам
[59:20.120 --> 59:22.120]  одну и ту же константу.
[59:22.120 --> 59:26.120]  Так, чтобы все эти ребра стали не отрицательными.
[59:26.120 --> 59:33.120]  Вот, ну там просто условно говоря там найдем какую-нибудь
[59:33.120 --> 59:36.120]  там минимальную приведенную стоимость как бы такого
[59:36.120 --> 59:38.120]  ребра, да, то есть допустим она оказалась там минус
[59:38.120 --> 59:42.120]  179, ну значит ко всем потенциалам этих вершин прибавляем 179
[59:42.120 --> 59:43.120]  и все.
[59:43.120 --> 59:46.120]  Вот такая нехитрая идея.
[59:46.120 --> 59:48.120]  Еще раз, какая константа?
[59:48.120 --> 59:49.120]  Инф?
[59:49.120 --> 59:52.120]  Нет, инф не надо у вас при полнении будет.
[59:52.120 --> 59:55.120]  Просто пробежимся по всем таким ребрам, найдем ее
[59:55.120 --> 59:58.120]  минимальную, найдем минимальную приведенную стоимость таких
[59:58.120 --> 59:59.120]  ребр.
[59:59.120 --> 01:00:03.120]  И ко всем потенциалам вершин просто прибавим значит
[01:00:03.120 --> 01:00:06.120]  там минус эту стоимость, ну то есть вычтем эту стоимость
[01:00:06.120 --> 01:00:07.120]  короче.
[01:00:07.120 --> 01:00:12.120]  Ну то есть типа если она там минус 179, значит вычтем
[01:00:12.120 --> 01:00:15.120]  минус 179, то есть прибавим 179.
[01:00:15.120 --> 01:00:27.120]  А для, берем потенциал, который был раньше, но ко
[01:00:27.120 --> 01:00:31.120]  всем вершинам вне этой вот достижения, зоны достигаемости
[01:00:31.120 --> 01:00:35.120]  прибавляем одну и ту же константу с тем расчетом,
[01:00:35.120 --> 01:00:39.120]  чтобы вот у всех ребер, которые ведут из вне зоны достигаемости
[01:00:39.120 --> 01:00:43.120]  в зону достигаемости, учетная там приведенная стоимость
[01:00:43.120 --> 01:00:48.120]  стала не отрицательной.
[01:00:48.120 --> 01:00:51.120]  Вот собственно и все.
[01:00:51.120 --> 01:00:56.120]  Дист мы считаем, ну дист мы считаем, да, дист естественно
[01:00:56.120 --> 01:00:59.120]  имеется в виду в остаточной CD, да.
[01:00:59.120 --> 01:01:02.120]  То есть тут, то есть индекс мы тут пожалуй и напишем.
[01:01:02.120 --> 01:01:06.120]  G с индексом F конечно.
[01:01:06.120 --> 01:01:11.120]  По не насыщенным ребрам, естественно.
[01:01:11.120 --> 01:01:14.120]  Но теперь смотрите какая фишка.
[01:01:14.120 --> 01:01:20.120]  Зачем мы собственно еще и потенциал себе подменили.
[01:01:20.120 --> 01:01:23.120]  Ну тут фишка такая, предположим неожиданно выяснилось,
[01:01:23.120 --> 01:01:26.120]  что цикл отрицательный, ну тогда заметим, что относительно
[01:01:26.120 --> 01:01:29.120]  этого потенциала у нас все ребра не отрицательные,
[01:01:29.120 --> 01:01:36.120]  да, кроме возможно вот этого вот.
[01:01:36.120 --> 01:01:39.120]  Потому что мы же расстояние-то без учета этого ребра искали,
[01:01:39.120 --> 01:01:42.120]  как было правильно замечено.
[01:01:42.120 --> 01:01:45.120]  Ну вот, ну в принципе, если это ребро оказалось не
[01:01:45.120 --> 01:01:47.120]  отрицательным относительно нового потенциала, значит
[01:01:47.120 --> 01:01:50.120]  ура, нам повезло.
[01:01:50.120 --> 01:01:52.120]  То есть просто никаких циклов, но правда это означает,
[01:01:52.120 --> 01:01:57.120]  что циклов отрицательной стоимости нет.
[01:01:57.120 --> 01:01:59.120]  Вот, ну что делать, если цикл отрицательной стоимости
[01:01:59.120 --> 01:02:03.120]  вот по такому расстоянию нашелся?
[01:02:03.120 --> 01:02:05.120]  Ну тогда идея очень простая.
[01:02:05.120 --> 01:02:11.120]  Давайте пустим, то есть давайте тут запустим циркуляцию
[01:02:11.120 --> 01:02:15.120]  величины 1, тогда это ребро получается убилось, но
[01:02:15.120 --> 01:02:20.120]  появились, и эти все ребра убились, ну мы ж типо в единичные
[01:02:20.120 --> 01:02:24.120]  ребра верим, но появились обратные ребра.
[01:02:24.120 --> 01:02:27.120]  Понимаете, да?
[01:02:27.120 --> 01:02:30.120]  Ну заметим, что приведенная стоимость вот этого ребра
[01:02:30.120 --> 01:02:32.120]  теперь точно положительная, правда?
[01:02:32.120 --> 01:02:35.120]  Сейчас, если приведенная стоимость этого ребра отрицательная
[01:02:35.120 --> 01:02:37.120]  декваленда тому, что у нас есть циклы отрицательного
[01:02:37.120 --> 01:02:38.120]  веса?
[01:02:38.120 --> 01:02:43.120]  Ну вообще да.
[01:02:43.120 --> 01:02:47.120]  Ну потому что давайте подумаем, потенциал это, вершина
[01:02:47.120 --> 01:02:50.120]  В сейчас ноль, да?
[01:02:50.120 --> 01:02:54.120]  Потенциал вершины У, это как раз и есть расстояние.
[01:02:54.120 --> 01:02:58.120]  То есть получается расстояние от В до У плюс кост минус
[01:02:58.120 --> 01:03:05.120]  ноль, это в точности получается стоимость этого цикла.
[01:03:05.120 --> 01:03:07.120]  То есть приведенная стоимость этого ребра в точности длины
[01:03:07.120 --> 01:03:08.120]  этого цикла.
[01:03:08.120 --> 01:03:10.240]  Вот, ну а значит если мы и провели это все, значит
[01:03:10.240 --> 01:03:14.240]  тогда приведенная стоимость ребра ВУ теперь положительная.
[01:03:14.240 --> 01:03:16.040]  Понимаете, да?
[01:03:16.040 --> 01:03:18.040]  Но с другой стороны заметим, что если вот у этого ребра
[01:03:18.040 --> 01:03:21.040]  была приведенная стоимость, скажем, 5, то тогда у этого
[01:03:21.040 --> 01:03:24.040]  ребра приведенная стоимость должна быть равна очевидно
[01:03:24.040 --> 01:03:26.040]  минус 5,правда?
[01:03:26.040 --> 01:03:29.160]  И получается, что убили одно отрицательное ребро,
[01:03:29.160 --> 01:03:32.760]  появились другие.
[01:03:32.760 --> 01:03:33.760]  Так может показаться.
[01:03:33.760 --> 01:03:37.760]  Но теперь мистическая магия.
[01:03:37.760 --> 01:03:41.080]  Хотя не мистическая, потому что кто-то уже упомянул,
[01:03:41.080 --> 01:03:44.600]  что если ребро лежит на корчайшем пути, то его
[01:03:44.600 --> 01:03:46.280]  приведенная стоимость ноль.
[01:03:46.280 --> 01:03:50.680]  То есть, ну как повезло?
[01:03:50.680 --> 01:03:54.560]  Мы подогнали потенциал вообще, да, мы специально
[01:03:54.560 --> 01:03:55.840]  подогнали потенциал.
[01:03:55.840 --> 01:04:00.920]  Теперь заметили, что относительно этого нового потенциала
[01:04:00.920 --> 01:04:04.800]  вот у этих ребер приведенная стоимость ноль.
[01:04:04.800 --> 01:04:06.760]  Следовательно, если вы замените на обратное, то
[01:04:06.760 --> 01:04:12.880]  у этих обратных ребер приведенная стоимость тоже ноль.
[01:04:12.880 --> 01:04:17.480]  Следовательно, этот потенциал не отрицательный.
[01:04:17.480 --> 01:04:22.480]  То есть для всех стальных ребер он остался неотрицательным, а для этих нормальным?
[01:04:40.480 --> 01:04:45.480]  Приведенная стоимость это стоимость плюс ПА, минус ПБ?
[01:04:48.480 --> 01:04:54.480]  Если мы пройдем в другую сторону, у нас получится...
[01:04:58.480 --> 01:05:02.480]  Минус от потенциалов пойдет и минус от ребра от стоимости.
[01:05:17.480 --> 01:05:21.480]  Почему они остаются неотрицательными?
[01:05:47.480 --> 01:05:50.480]  Так, что не так?
[01:05:50.480 --> 01:05:53.480]  Так, что не так?
[01:05:54.480 --> 01:05:57.480]  Так, что не так?
[01:06:07.480 --> 01:06:11.480]  Чувствуется, что тогда будет кричайший путь, который по новому появится.
[01:06:12.480 --> 01:06:13.480]  Да.
[01:06:14.480 --> 01:06:19.480]  Нет, ну не утверждается, а просто возьмем кричайший путь.
[01:06:19.480 --> 01:06:25.480]  Это называется возьмем кричайший путь от ВДУ, который мы нашли при поиске, при подсчете этого потенциала.
[01:06:28.480 --> 01:06:34.480]  Да, то есть мы пропустили по циклу с этим кричайшим путем и этим ребром, значит, единицу потока.
[01:06:35.480 --> 01:06:43.480]  Так как у нас все ребра единичные, напоминаю для простоты, то мы как бы эти ребра убили, а вместо них поставили обратные.
[01:06:43.480 --> 01:06:47.480]  То мы как бы эти ребра убили, а вместо них поставили обратные.
[01:06:48.480 --> 01:06:51.480]  И это ребро мы, красное, убили и поставили обратные.
[01:06:52.480 --> 01:06:58.480]  Теперь, значит, утверждение, что вот этих ребр кричайшего пути приведенная стоимость относительно нового потенциала была ноль.
[01:06:58.480 --> 01:07:16.480]  Ну, раз она была ноль, значит и у обратных она ноль.
[01:07:17.480 --> 01:07:23.480]  Вот, а у этого ребра она была отрицательна, значит у обратного она положительна.
[01:07:24.480 --> 01:07:26.480]  Все, ура, победа.
[01:07:29.480 --> 01:07:38.480]  В общем-то, да. Тут, конечно, надо очень четко понимать, что алгоритм, конечно, немножко взрывает мозг, потому что тут надо понимать, что расстояние реальное.
[01:07:39.480 --> 01:07:54.480]  То есть у вас есть потенциал, с помощью которого вы находите расстояние, сначала в чем находите приведенное расстояние, потом под ним вы восстанавливаете реальное расстояние и из этих реальных расстояний вы делаете новый потенциал.
[01:07:55.480 --> 01:07:57.480]  Поняли логику, да?
[01:07:58.480 --> 01:08:00.480]  Вот.
[01:08:01.480 --> 01:08:04.480]  Вот, то есть тут просто главное, надо не запутаться.
[01:08:05.480 --> 01:08:12.480]  То есть, если вы, да, один раз это поняли, то как бы ничего сложного в этом нет, но как бы часто алгоритм вызывает небольшой, некоторый взрыв мозга в этом месте.
[01:08:13.480 --> 01:08:15.480]  Вот. Ну, впрочем.
[01:08:16.480 --> 01:08:18.480]  И вы получили что-то типа e²q.
[01:08:18.480 --> 01:08:20.480]  Так. Ну, как сказать.
[01:08:21.480 --> 01:08:30.480]  Ну, получается, да. То есть, на самом деле, вы, получается, протал, то есть, ищете такой путь e раз, каждый делаете за e логовое.
[01:08:31.480 --> 01:08:37.480]  Ну, формально говоря, вы можете, конечно, написать этот алгоритм за e квадрат плюс e на v логовое.
[01:08:38.480 --> 01:08:40.480]  Еще можно.
[01:08:41.480 --> 01:08:42.480]  Это формально.
[01:08:43.480 --> 01:08:46.480]  Ну, да, понятно. В реалисте, видимо, dx с кучей шубаначи никто писать не будет, да?
[01:08:47.480 --> 01:08:51.480]  Вот. Но, тем не менее, формально мы должны сказать, что такое возможно.
[01:08:52.480 --> 01:08:58.480]  Да. Ну, теперь давайте думать, что поменяется, если у нас пропускные способности целые, но бывают больше единицы?
[01:09:03.480 --> 01:09:04.480]  Боль.
[01:09:05.480 --> 01:09:06.480]  Да нет.
[01:09:07.480 --> 01:09:11.480]  Ну, на самом деле, никакой боли нет, потому что, на самом деле, просто надо это все домножить на c.
[01:09:12.480 --> 01:09:13.480]  Большого бы счет.
[01:09:13.480 --> 01:09:17.480]  Нет. Сейчас, кажется, хочется сразу добавлять ребра нормальные.
[01:09:18.480 --> 01:09:19.480]  Хочется, сейчас, нет.
[01:09:20.480 --> 01:09:23.480]  Ну, вот, нет. В реальности, как бы, это скорее может сделаться так.
[01:09:24.480 --> 01:09:27.480]  То есть, как-то оптимизировать. Оптимизировать можно так.
[01:09:28.480 --> 01:09:31.480]  То есть, возьмем ребро, найдем цикл, да?
[01:09:32.480 --> 01:09:41.480]  По этому циклу мы, по этому циклу мы, значит, пропустим столько, сколько сможем по этому кратчайшему пути, да?
[01:09:42.480 --> 01:09:44.480]  Вот. Ну, или по самому этому ребру.
[01:09:45.480 --> 01:09:50.480]  Вот. Но если оказалось, что мы тут, по этому циклу, пропустили меньше, чем пропускная способность этого ребра, то мы сказали так.
[01:09:51.480 --> 01:09:57.480]  Давайте мысленно расщепим это ребро на пропускную способность, вот, соответствующей этому кратчайшему пути и все остальное.
[01:09:58.480 --> 01:10:00.480]  И добавим сначала первое, потом второе.
[01:10:01.480 --> 01:10:03.480]  После добавления первого, получается, у нас циркуляция исчезла.
[01:10:04.480 --> 01:10:06.480]  Значит, дальше теперь начинаем добавлять параллельные ребры.
[01:10:06.480 --> 01:10:07.480]  Понятно.
[01:10:08.480 --> 01:10:15.480]  То есть, в коде действительно это, то есть, в коде это выразится, что пока у вас, значит, это ребро не стало, там, сотрясает там,
[01:10:16.480 --> 01:10:22.480]  пока из этого ребра еще есть что пихать, значит, вы там начинаете что-то, там, ищете кратчайшие пути.
[01:10:23.480 --> 01:10:25.480]  Один путь, второй путь, третий путь и так далее.
[01:10:28.480 --> 01:10:34.480]  Ну да. Хотя это уже напоминает, знаете, да, это как это, как сделать шикарный рейтинг ночной передачи.
[01:10:36.480 --> 01:10:39.480]  Ну вот, то есть, идея очень простая, да. То есть, идея очень простая.
[01:10:40.480 --> 01:10:41.480]  Представьте, такая темная студия.
[01:10:42.480 --> 01:10:47.480]  Значит, там сидят там несколько человек, и там ведущий говорит, здравствуйте, дорогие друзья.
[01:10:48.480 --> 01:10:54.480]  Сегодня мы обсудим такую важную, актуальную тему, как референдум в Шотландии.
[01:10:55.480 --> 01:10:56.480]  Слово эксперт.
[01:10:57.480 --> 01:11:01.480]  Значит, эксперт. Абсолютно никуда не спешащий эксперт.
[01:11:02.480 --> 01:11:05.480]  Значит, так спокойно садится, так, может быть, даже затягивается сигарой.
[01:11:06.480 --> 01:11:11.480]  Ну, может, не затягивается и говорит, ой, Шотландия, вы знаете, замечательная страна.
[01:11:12.480 --> 01:11:16.480]  Вы знаете, я много раз был в Шотландии, и в Шотландии замечательная природа.
[01:11:17.480 --> 01:11:19.480]  Знаете, вот представьте себе, действительно горы.
[01:11:20.480 --> 01:11:25.480]  Действительно вот, ну вот, и на горе, вы знаете, вот на зеленой травке пасутся овцы.
[01:11:26.480 --> 01:11:32.480]  Одна овца, две овцы, три овцы.
[01:11:32.480 --> 01:11:37.480]  Все, до утра в радость все, потому что фантастические рейтинги, всю ночь все смотрели.
[01:11:41.480 --> 01:11:42.480]  Вот.
[01:11:44.480 --> 01:11:45.480]  Так что вот.
[01:11:46.480 --> 01:11:47.480]  Хорошие новости, чтобы поспать.
[01:11:48.480 --> 01:11:51.480]  Нет, это даже не новости, это уже аналитическая передача какая-то.
[01:11:52.480 --> 01:11:53.480]  Ну, такая ток-шоу.
[01:11:54.480 --> 01:11:55.480]  Ну, как бы, вот.
[01:11:56.480 --> 01:11:57.480]  Анализируют сом, да.
[01:11:58.480 --> 01:12:00.480]  Так что когда, тогда красивый вариант, на самом деле, такой очень милый.
[01:12:00.480 --> 01:12:03.480]  Хотя шутки шутками, но, между прочим, на первом канале что-то подобное сейчас выпускается, да.
[01:12:04.480 --> 01:12:06.480]  Правда, есть подозрение, ну, подкаст ЛАП называется.
[01:12:07.480 --> 01:12:11.480]  Правда, там, видимо, обсуждения бывают гораздо более интересными, на самом деле.
[01:12:12.480 --> 01:12:13.480]  Там никто никому не хочет усыпить.
[01:12:14.480 --> 01:12:15.480]  И вместо овц козлы.
[01:12:16.480 --> 01:12:17.480]  Нет, почему козлы?
[01:12:18.480 --> 01:12:26.480]  Нет, там, наоборот, когда я первый раз увидел там что-то такое передача, там вообще было на самом деле очень, там, собственно, какое-то было очень интересное обсуждение.
[01:12:26.480 --> 01:12:29.480]  Называется, там, о темах религии, там, литературе, в том числе современной.
[01:12:30.480 --> 01:12:34.480]  Вот, то есть это, причем, с участием там действующих писателей, там, и называется, там, и очень.
[01:12:35.480 --> 01:12:39.480]  Ну, вот, и также священника, причем, тоже очень образованных, на самом деле было очень интересно, на самом деле.
[01:12:40.480 --> 01:12:44.480]  Правда, потом, когда я второй раз увидел, там была уже, там, третья или четвертая лекция какой-то женщины-астролога.
[01:12:45.480 --> 01:12:51.480]  Ну, вот, там такое, там, уже, что, да, несколько, как бы, да, понизило уровень культуальность лично в моих глазах.
[01:12:51.480 --> 01:12:53.480]  Ну, вот, такое было.
[01:12:54.480 --> 01:12:56.480]  Но, в принципе, то есть, почему бы и нет.
[01:12:57.480 --> 01:13:02.480]  Собственно, даже приятно было, что вот, вот, наконец, он по телевизору что-то адекватное показывает, а не это.
[01:13:03.480 --> 01:13:07.480]  Ну, 8.8 алгоритма, это, конечно, не улучшило, да.
[01:13:08.480 --> 01:13:10.480]  Безусловно, так.
[01:13:11.480 --> 01:13:15.480]  Мы как бы можем добавлять, ну, нас могут ребра добавляться обратно, и нас никак не оценивают.
[01:13:16.480 --> 01:13:17.480]  Да.
[01:13:17.480 --> 01:13:19.480]  Но более того, в дробных ребрах еще и мы не знаем, сколько мы будем пихать, поэтому, может, вообще не сойдется.
[01:13:20.480 --> 01:13:21.480]  Да.
[01:13:22.480 --> 01:13:23.480]  А, нет, не ладно.
[01:13:24.480 --> 01:13:25.480]  Вот.
[01:13:26.480 --> 01:13:30.480]  То есть, в принципе, ладно, вот это вот, то есть, такой вот пихалочный, на самом деле, мы будем называть, там, видимо, метод клейна, мы его будем называть.
[01:13:31.480 --> 01:13:32.480]  Клейна?
[01:13:33.480 --> 01:13:34.480]  Клейна.
[01:13:35.480 --> 01:13:37.480]  Я не знаю, да, тот ли этот товарищ с бутылкой, но...
[01:13:38.480 --> 01:13:39.480]  Четверная группа Света.
[01:13:40.480 --> 01:13:41.480]  Товарищ с бутылкой, скорее всего.
[01:13:42.480 --> 01:13:43.480]  Чтобы в формулировке, да.
[01:13:43.480 --> 01:13:44.480]  Товарищ с бутылкой, скорее всего.
[01:13:45.480 --> 01:13:47.480]  Чтобы в формулировке, это именно он, да.
[01:13:48.480 --> 01:13:49.480]  Тот товарищ, который с 4 по V4.
[01:13:50.480 --> 01:13:51.480]  Ну да, да, да, да, да, да, да, да.
[01:13:52.480 --> 01:13:53.480]  Вот.
[01:13:54.480 --> 01:13:55.480]  Есть такое, да.
[01:13:56.480 --> 01:13:57.480]  Вот.
[01:13:58.480 --> 01:13:59.480]  А теперь, значит, вот такой вот алгоритм работает, да.
[01:14:00.480 --> 01:14:12.480]  То есть, здесь я могу только отметить, что, да, существует по идее алгоритм, конечно, который ищет, там, ну, то ли мент-кос, то ли циркуляцию, на самом деле, за какую-то полиномиальную, то есть, стоимость, которая полинома ТВ, то есть, не зависит от никаких пропускных специалов.
[01:14:13.480 --> 01:14:16.480]  Да, но мы с вами это так и оставим.
[01:14:17.480 --> 01:14:26.480]  Нет, я просто пока как бы рассказал, что да, есть, но как бы, да, мы, к сожалению, у нас нет гарантии, что мы рассматриваем там только чемпионские алгоритмы, да.
[01:14:27.480 --> 01:14:34.480]  Потому что, к сожалению, там я боюсь, что, как бы, для того, чтобы рассматривать чемпионские алгоритмы, нам очень хорошо нужно понимать даже вот то, что у нас в курсе вообще есть.
[01:14:35.480 --> 01:14:37.480]  И еще там примерно.
[01:14:38.480 --> 01:14:39.480]  Не показалось, там C.
[01:14:40.480 --> 01:14:43.480]  Нет, C умножить на вот это все.
[01:14:44.480 --> 01:14:46.480]  C на E логовое?
[01:14:47.480 --> 01:14:54.480]  Ну, потому что, да, мы, как бы, добавляем, добавляли мы типа E ребер, и для каждого ребра запускали отдельную DX труда.
[01:14:55.480 --> 01:14:59.480]  После этой симпатики в окно летит стул, след за стулом в окно люди туда и сидят.
[01:15:00.480 --> 01:15:02.480]  Чего? О, Господи.
[01:15:03.480 --> 01:15:04.480]  Это полная жесть, в смысле.
[01:15:05.480 --> 01:15:07.480]  О, Господи. Кошмар какой. Да, главное не наоборот, да.
[01:15:07.480 --> 01:15:09.480]  Так. Вот. Ну.
[01:15:10.480 --> 01:15:11.480]  Да, на самом деле, это сумма.
[01:15:12.480 --> 01:15:22.480]  Да, ну не, да. Нет, понятно, я согласен, что это не лучшая симпатика, конечно, в жизни, хотя там, если у вас там, хотя у вас там 50, хотя на какие-нибудь там, я не знаю, 50 вершины 200 ребер, в принципе, нормально.
[01:15:23.480 --> 01:15:24.480]  Это сумма ребер на E логовое?
[01:15:25.480 --> 01:15:30.480]  Ну, по большому счету, да. То есть, сумма пропускной способности на E логовое, если вы там в целом виде, да.
[01:15:31.480 --> 01:15:33.480]  Вы знаете, у нас не часто 50 вершин в графах.
[01:15:34.480 --> 01:15:35.480]  На потоке всегда.
[01:15:35.480 --> 01:15:39.480]  Ну, почему? Вот в воскресенье, ну, в воскресенье, а, в воскресенье 200 было, да, нормально.
[01:15:40.480 --> 01:15:41.480]  Я надеюсь, там не будет потом.
[01:15:42.480 --> 01:15:44.480]  Нет, я имею в виду прошедшее воскресенье.
[01:15:45.480 --> 01:15:47.480]  Я возьму распечатки с потоками, блин, на воскресенье.
[01:15:48.480 --> 01:15:49.480]  Правильно. Ну, возьми. Правда.
[01:15:50.480 --> 01:15:52.480]  Правда, нет смысла их распечатывать, потому что все равно из дома писать будете.
[01:15:53.480 --> 01:15:54.480]  Да. Да, кстати.
[01:15:55.480 --> 01:15:56.480]  У меня есть распечатки.
[01:15:57.480 --> 01:15:58.480]  Пожалуйста.
[01:15:59.480 --> 01:16:00.480]  Ну.
[01:16:01.480 --> 01:16:02.480]  У меня распечатки?
[01:16:02.480 --> 01:16:04.480]  Я не могу у тебя уточнить, как они к этому относятся.
[01:16:05.480 --> 01:16:06.480]  Ну, они написали, типа, что...
[01:16:07.480 --> 01:16:08.480]  И потоки, и каяль.
[01:16:09.480 --> 01:16:10.480]  Я такого не писал.
[01:16:11.480 --> 01:16:14.480]  Там можно использовать материалы слинования, обликованные до начала.
[01:16:15.480 --> 01:16:19.480]  Ну, я не знаю. Одно дело, нет, материал это одна, но другое просто, сколько вы имеете право их копипастить.
[01:16:20.480 --> 01:16:22.480]  Или подразумевается, что вы это делаете в режиме перепечатки Steam ноутбука.
[01:16:23.480 --> 01:16:26.480]  Типа, очевидно, они никак не проверят перепечаток я об материалах.
[01:16:27.480 --> 01:16:28.480]  Не совсем. Если...
[01:16:29.480 --> 01:16:30.480]  Или, типа...
[01:16:31.480 --> 01:16:39.480]  Они имеют право, если заподозрят неладное, потребовать от вас, ну, скажем, там, я не знаю, запись, там, скринкаста происходящего на всех ваших компах.
[01:16:40.480 --> 01:16:41.480]  Кстати.
[01:16:42.480 --> 01:16:45.480]  То есть, даже они там ругаются, даже в этом месте ругаются даже словами типа OBS Studio.
[01:16:46.480 --> 01:16:47.480]  О, ужас.
[01:16:48.480 --> 01:16:49.480]  Ну, вот.
[01:16:50.480 --> 01:16:55.480]  Ну, сформулируем так. Если к вам не будет никаких вопросов, то, как бы, можете не... то, как бы, все нормально.
[01:16:55.480 --> 01:17:03.480]  Но, просто, если вас заподозрят в читерство, у вас подобного не будет, то, то, как бы, подобного рода запись может пойти вам в плюс. Вот так.
[01:17:04.480 --> 01:17:05.480]  Как могут вообще заподозриться?
[01:17:06.480 --> 01:17:10.480]  Ну, если неожиданно выяснится, что на 37-й минуте вы неожиданно знали 5 задач.
[01:17:11.480 --> 01:17:12.480]  Или там хотя бы 3.
[01:17:13.480 --> 01:17:15.480]  Причем, по убыванию сложностей.
[01:17:16.480 --> 01:17:22.480]  Или там, или какой-нибудь еще там тупняк в духе, что что-то у вас там это саббиты в одно и то же время с трех айпишников.
[01:17:22.480 --> 01:17:28.480]  Там каких-нибудь. Ну, вот, что-нибудь подобное. Это я так на вскидку говорю. Да, это самое халявное, что они могут сделать.
[01:17:29.480 --> 01:17:30.480]  Это у одного компа, да?
[01:17:31.480 --> 01:17:33.480]  Да, мы об этом и говорим. Да, если было бы с трех компов, то, пожалуйста.
[01:17:34.480 --> 01:17:36.480]  Да, не, читинг все равно возможно разное.
[01:17:37.480 --> 01:17:39.480]  Нет, ну, читинг. Да, но другой вопрос.
[01:17:40.480 --> 01:17:41.480]  Чтобы не затролить.
[01:17:42.480 --> 01:17:43.480]  Нет, ну, это из цикла, зачем это вам надо, да. Ну, вот.
[01:17:44.480 --> 01:17:45.480]  Как это?
[01:17:46.480 --> 01:17:47.480]  Ну, то есть, чтобы тебя потом не затролили, да?
[01:17:47.480 --> 01:17:53.480]  Да, потому что нет, читинг тут два момента есть. Во-первых, как бы, найдут, сделайте читинг, тебя забанят.
[01:17:54.480 --> 01:17:57.480]  Вполне вероятно, что пожизненно. Ну, вот, и зачем тебе это надо?
[01:17:58.480 --> 01:18:04.480]  Вот. А то тебе, не, просто тебе еще в следующем семестре зачет по ACPC курсу получать.
[01:18:05.480 --> 01:18:06.480]  В следующем.
[01:18:07.480 --> 01:18:08.480]  В следующем. Ну, как всегда, тут просто фишка, да.
[01:18:09.480 --> 01:18:13.480]  Особенность программы заключается в том, что, видимо, в весеннем семестре как бы есть возможность запускать вот этот вот курс.
[01:18:13.480 --> 01:18:19.480]  Да, еще особенность программы в том, что ACPC курс примерно никак не связан с возможностью участвовать в ACPC.
[01:18:20.480 --> 01:18:22.480]  Ну, да, нет, не связан.
[01:18:23.480 --> 01:18:31.480]  Но другой вопрос, что, как ты думаешь, захотим ли мы, чтобы этот курс проходил человек, который заведомо в ACPC участвовать не будет?
[01:18:32.480 --> 01:18:35.480]  Я думаю, что таких людей процентов 50.
[01:18:36.480 --> 01:18:37.480]  Нет, нет, почему нет.
[01:18:37.480 --> 01:18:38.480]  Просто все участвуют.
[01:18:38.480 --> 01:18:43.480]  Нет, это неправда, нет. Участвуют в ACPC все, другой вопрос, как бы, какие цели они ставят, до какого уровня дойдут.
[01:18:44.480 --> 01:18:45.480]  Потому что я же думаю, надеюсь, что у тебя…
[01:18:46.480 --> 01:18:48.480]  Какие цели? Получить бонусы к экзамену?
[01:18:49.480 --> 01:18:52.480]  Ну, не знаю, ну, я думаю, ну, мне кажется, у тебя цель все-таки чуть повыше, наверное.
[01:18:53.480 --> 01:18:57.480]  Все-таки есть подозрение, что, наверное, тебе хотелось там съездить на полуфинал, например, да?
[01:18:58.480 --> 01:18:59.480]  Хотелось бы.
[01:18:59.480 --> 01:19:00.480]  Ну, вот.
[01:19:00.480 --> 01:19:01.480]  Пить или пить?
[01:19:02.480 --> 01:19:03.480]  А, вот.
[01:19:04.480 --> 01:19:05.480]  Зачем вы здесь?
[01:19:06.480 --> 01:19:07.480]  Да, что-то…
[01:19:08.480 --> 01:19:09.480]  Пить или пить?
[01:19:10.480 --> 01:19:11.480]  Вот так.
[01:19:12.480 --> 01:19:14.480]  Я пытаюсь, но у меня не получается.
[01:19:15.480 --> 01:19:16.480]  Я пытаюсь, но у меня не получается.
[01:19:17.480 --> 01:19:18.480]  Так, ладно.
[01:19:19.480 --> 01:19:20.480]  Так, ребят, все.
[01:19:22.480 --> 01:19:25.480]  Так, тишина, давайте, видимо, возникает вопрос по алгоритму, а мы так забалтуемся.
[01:19:26.480 --> 01:19:28.480]  Перерыв, в принципе, действительно, время приходит, это да.
[01:19:29.480 --> 01:19:30.480]  Нет, ну, а что тут?
[01:19:31.480 --> 01:19:32.480]  Ну, давайте, собственно, тогда уж минкосты добьем уже.
[01:19:33.480 --> 01:19:34.480]  Потому что, в общем-то, близко.
[01:19:36.480 --> 01:19:37.480]  Значит, смотрите.
[01:19:39.480 --> 01:19:40.480]  Фишка тут, на самом деле, следующая.
[01:19:41.480 --> 01:19:45.480]  Да, то есть, на самом деле, как теперь искать максимальный поток минимальной стоимости?
[01:19:46.480 --> 01:19:52.480]  Подожди, я правильно понял, что у нас, если не целочисленные ребра, не гарантировано даже, что алгоритмы становятся.
[01:19:53.480 --> 01:19:55.480]  Так, если не целочисленные ребра, то что?
[01:19:56.480 --> 01:19:57.480]  То не гарантировано даже, что алгоритмы становятся.
[01:19:58.480 --> 01:19:59.480]  Да, именно так.
[01:20:00.480 --> 01:20:01.480]  Вот.
[01:20:02.480 --> 01:20:03.480]  Как и везде.
[01:20:03.480 --> 01:20:05.480]  Ну, вот, ну, не везде, а просто, да, вот.
[01:20:06.480 --> 01:20:07.480]  Как во всех потоках, кажется.
[01:20:08.480 --> 01:20:09.480]  Да, но не во всех, это называется просто.
[01:20:10.480 --> 01:20:11.480]  У нас один поток.
[01:20:16.480 --> 01:20:17.480]  Денис.
[01:20:18.480 --> 01:20:19.480]  Денис, кажется, тоже ломается на...
[01:20:20.480 --> 01:20:21.480]  Нет, нет, нет.
[01:20:22.480 --> 01:20:27.480]  Нет, в квадрате, нет, у Дениса четкая симпатика в квадрате, мы это доказывали.
[01:20:28.480 --> 01:20:31.480]  А, он просто не найдет, видимо, оптимальный на нецелочисленных.
[01:20:31.480 --> 01:20:33.480]  Там просто точно была же проблема.
[01:20:34.480 --> 01:20:36.480]  Нет, там с точностью никакой проблемы нет.
[01:20:37.480 --> 01:20:42.480]  С точностью у меня могли быть проблемы, что мы там, что в целочисленных сетях мы могли бы там оценивать как-то по-другому.
[01:20:43.480 --> 01:20:44.480]  То есть там более круто.
[01:20:45.480 --> 01:20:48.480]  Нет, в смысле, с дробными ребрами разве Денис нормально работает?
[01:20:49.480 --> 01:20:50.480]  Абсолютно, абсолютно, абсолютно.
[01:20:51.480 --> 01:20:55.480]  То есть просто стандартный Денис за В квадрат Е обрабатывает сколь угодно дробные ребра.
[01:20:56.480 --> 01:20:57.480]  Ладно.
[01:20:58.480 --> 01:20:59.480]  Так что вот, так что можно пересмотреть запись.
[01:20:59.480 --> 01:21:00.480]  Да.
[01:21:01.480 --> 01:21:06.480]  То есть равна, как Эдманскарпы кушает и там все вот эти проталкивания предпотока там и так далее.
[01:21:07.480 --> 01:21:08.480]  То есть никаких проблем.
[01:21:09.480 --> 01:21:10.480]  Вот.
[01:21:11.480 --> 01:21:16.480]  Все эти алкоголики, никто из них нигде не подразумевал, что пропускные способности ребр бывают нецелыми.
[01:21:17.480 --> 01:21:18.480]  То есть, наоборот, обязаны быть целыми.
[01:21:20.480 --> 01:21:22.480]  То есть все они, то есть там никаких проблем нет.
[01:21:22.480 --> 01:21:28.480]  Ну как бы, по яте там блокирующего потока, там блокированного ребра и так далее, они от этого не зависели.
[01:21:29.480 --> 01:21:30.480]  Вот.
[01:21:31.480 --> 01:21:32.480]  Так вот.
[01:21:33.480 --> 01:21:34.480]  Итак, пришло время.
[01:21:35.480 --> 01:21:36.480]  О, а где Сева, кстати?
[01:21:37.480 --> 01:21:38.480]  Не будет Сева.
[01:21:39.480 --> 01:21:40.480]  Не будет Сева, а что случилось?
[01:21:41.480 --> 01:21:42.480]  Он формалки делает.
[01:21:43.480 --> 01:21:44.480]  А, а ты сделал?
[01:21:45.480 --> 01:21:46.480]  А я не делаю.
[01:21:47.480 --> 01:21:49.480]  Ну хорошо, ладно.
[01:21:50.480 --> 01:21:51.480]  Ну формалки, так формалки.
[01:21:52.480 --> 01:21:54.480]  Ладно, субавтомата не будет, так что формалки сделаем.
[01:21:55.480 --> 01:21:58.480]  Пока что по формалкам мы написали сильно больше кода, чем по алкоголам.
[01:21:59.480 --> 01:22:00.480]  Ну, да.
[01:22:01.480 --> 01:22:03.480]  Так, ну ладно, давайте уже добьем.
[01:22:04.480 --> 01:22:05.480]  Так, ребят, все.
[01:22:06.480 --> 01:22:09.480]  Так, ребят, я тоже люблю поболтать, но как бы давайте все-таки время не тратить.
[01:22:10.480 --> 01:22:11.480]  А то действительно, что-то уже многовато сидим.
[01:22:12.480 --> 01:22:13.480]  Вот.
[01:22:14.480 --> 01:22:15.480]  В пустую смысле, многовато сидим.
[01:22:16.480 --> 01:22:17.480]  Вот.
[01:22:18.480 --> 01:22:19.480]  Значит, теперь давайте думать.
[01:22:19.480 --> 01:22:21.480]  Например, максимальный поток минимальной стоимости на СТ.
[01:22:22.480 --> 01:22:24.480]  Ну вот тогда как мы это можем делать?
[01:22:25.480 --> 01:22:28.480]  Ну, оптимально, ну, во-первых, да, здесь придется, к сожалению, оговориться.
[01:22:29.480 --> 01:22:34.480]  И сказать, что, конечно, это мы будем делать только в сети, в которой изначально циклов отрицательной стоимости нет.
[01:22:37.480 --> 01:22:38.480]  Вот.
[01:22:40.480 --> 01:22:42.480]  Ну вот, то есть, предположим, что у нас такая задача.
[01:22:43.480 --> 01:22:46.480]  Найди максимальный поток минимальной стоимости в ситуации, когда циклов отрицательной стоимости нет.
[01:22:47.480 --> 01:22:48.480]  Как тогда это сделать?
[01:22:49.480 --> 01:22:50.480]  А очень просто.
[01:22:51.480 --> 01:22:53.480]  Потому что, ну, то есть, будем делать абсолютно тот же.
[01:22:54.480 --> 01:22:55.480]  Ну, то есть, помним, как свести задачу к циркуляции, да?
[01:22:56.480 --> 01:23:02.480]  То есть, напомним, мы забабахивали тут вот это ребро с пропускной способностью плюс бесконечности и стоимостью минус бесконечность, да?
[01:23:04.480 --> 01:23:05.480]  Тогда что мы делаем?
[01:23:06.480 --> 01:23:07.480]  Ну, тогда идея такая.
[01:23:08.480 --> 01:23:09.480]  Ищем циркуляцию.
[01:23:10.480 --> 01:23:11.480]  Ну, как мы будем искать циркуляцию?
[01:23:12.480 --> 01:23:13.480]  Идея такая.
[01:23:14.480 --> 01:23:15.480]  Давайте сначала добавим в граф, то есть, возьмем нулевой потенциал.
[01:23:16.480 --> 01:23:17.480]  Нулевой.
[01:23:17.480 --> 01:23:19.480]  И добавим туда все вот эти ребра.
[01:23:20.480 --> 01:23:23.480]  То есть, заметим, что ничего пускать не надо, потому что ничего не найдем.
[01:23:24.480 --> 01:23:26.480]  То есть, можем даже просто добавить эти ребра в граф, и все.
[01:23:27.480 --> 01:23:29.480]  Потому что мы точно знаем, что циркуляции циклов их будут сказать на стоимости нет, да?
[01:23:30.480 --> 01:23:35.480]  А дальше мы начнем добавлять вот это ребро, ну, типа, по одной единичке, ну, или по сколько там надо, да?
[01:23:37.480 --> 01:23:38.480]  Понимаете, да?
[01:23:39.480 --> 01:23:41.480]  Но тогда по факту, то есть, что вам нужно будет?
[01:23:42.480 --> 01:23:43.480]  Получается, на каждом шаге вы будете делать следующее.
[01:23:43.480 --> 01:23:48.480]  Вы будете искать кратчайший путь от СТ, и по нему проталкивать поток, правда?
[01:23:49.480 --> 01:23:50.480]  Ну, и запускать его сюда.
[01:23:51.480 --> 01:23:53.480]  И будете это делать так, до тех пор, пока поток не сойдется.
[01:23:56.480 --> 01:23:57.480]  Понимаете, да?
[01:23:59.480 --> 01:24:01.480]  И к чему нас это приводит?
[01:24:02.480 --> 01:24:03.480]  Ну, вот.
[01:24:04.480 --> 01:24:06.480]  Ну, то есть, это приводит к тому, что к нашему официальному шагу.
[01:24:07.480 --> 01:24:11.480]  То есть, как ищется максимальный поток минимальной стоимости в графе, в котором изначально,
[01:24:11.480 --> 01:24:13.480]  по крайней мере, нет цикла в отрицательной стоимости.
[01:24:14.480 --> 01:24:15.480]  Все.
[01:24:16.480 --> 01:24:21.480]  Значит, мы просто тупо ищем поток методом Форда Фолкерсона, но просто на каждом шаге находим путь кратчайшей по стоимости.
[01:24:22.480 --> 01:24:26.480]  Да, нам плевать, сколько мы по нему протолкнем, главное, чтоб больше нуля.
[01:24:27.480 --> 01:24:33.480]  Там один, там, одна десятая, там, я не знаю, один делить на корень из двух степени сто пятьсот, там, не принципиально.
[01:24:34.480 --> 01:24:35.480]  Главное, чтобы больше нуля.
[01:24:35.480 --> 01:24:37.480]  То есть, мы еще раз сказали, что любой путь,
[01:24:38.480 --> 01:24:42.480]  между ширами проходит по ребру ТС?
[01:24:43.480 --> 01:24:44.480]  Нет.
[01:24:45.480 --> 01:24:47.480]  Нет, по ТС, кратчайший путь от ЭСТНВ.
[01:24:48.480 --> 01:24:53.480]  Ну, нет, мы сказали так, что в каждый момент времени все циклы отрицательной стоимости будут проходить по ребру ТС.
[01:24:55.480 --> 01:24:56.480]  А для того, чтобы найти...
[01:24:57.480 --> 01:24:58.480]  Ну, потому что...
[01:24:59.480 --> 01:25:04.480]  Изначально тут циклов нету, но дальше структура алгоритма говорит, что дальше их тоже не появится.
[01:25:05.480 --> 01:25:07.480]  А вот ребро оно перманентно добавленное.
[01:25:08.480 --> 01:25:12.480]  Оно? Ну, реально, ну, как сказать, что такое перманентно добавленное?
[01:25:13.480 --> 01:25:15.480]  Ну, в плане, мы его добавили, до начала работал алгоритм, условно, да?
[01:25:16.480 --> 01:25:19.480]  Ну, и то мысленно, потому что реальности мы этого ребра, естественно, строить не будем.
[01:25:20.480 --> 01:25:21.480]  Ну, реальности, мы же они хотим обосновать, да?
[01:25:22.480 --> 01:25:25.480]  Да, ну, а видите, что мы его вставили и ищем минимальную циркуляцию.
[01:25:26.480 --> 01:25:27.480]  Ну, у нас...
[01:25:28.480 --> 01:25:34.480]  А так как у него стоимость минус бесконечность, то минимальная циркуляция подразумевает, что мы по этому ребру пустим столько потока, сколько вообще возможно.
[01:25:35.480 --> 01:25:42.480]  Ну, у нас же может быть, например, в какой-то момент мы добавляем очередное ребро, и вот это конвалент связанности не связанности с СТ.
[01:25:43.480 --> 01:25:50.480]  Нет, тут фишка такая, мы это ребро добавляем в конце, то есть сначала мы эти все добавим, потом вот это.
[01:25:51.480 --> 01:26:00.480]  Ну, тогда, то есть сначала, ну, вот мы хотим найти циркуляцию, да, максимальную?
[01:26:01.480 --> 01:26:03.480]  Нет, ну, в таком графе да.
[01:26:03.480 --> 01:26:04.480]  В таком графе да.
[01:26:14.480 --> 01:26:17.480]  Мы говорим, что...
[01:26:18.480 --> 01:26:19.480]  Ну...
[01:26:25.480 --> 01:26:29.480]  Я не понимаю, почему обоснованно говоришь, что мы каждый раз очень кратчайший в пути засыпая.
[01:26:29.480 --> 01:26:31.480]  Потому что, смотри, ну, давай так, еще раз.
[01:26:32.480 --> 01:26:34.480]  Как у нас устроен вообще алгоритм поиска минимальной циркуляции?
[01:26:35.480 --> 01:26:43.480]  Он говорит нам так, изначально у нас ребра вообще нет, мы добавляем ребра про одному, и при добавлении, что мы делаем?
[01:26:44.480 --> 01:26:45.480]  Проверяем.
[01:26:45.480 --> 01:26:46.480]  Но как проверяем?
[01:26:46.480 --> 01:26:50.480]  Не просто так, мы добавляем ребро, и из конца в начало ищем кратчайший путь.
[01:26:51.480 --> 01:26:52.480]  Проверяем.
[01:26:53.480 --> 01:27:00.480]  То есть, если с этим кратчайшим путем, если это кратчайший путь плюс ребро не образует циклу отрицательного веса, то мы ничего не делаем.
[01:27:01.480 --> 01:27:06.480]  А если образует, то мы именно по этому пути и ребру, значит, проталкиваем поток.
[01:27:07.480 --> 01:27:11.480]  И вот, и наука у нас сумела показать, что после этого все в порядке.
[01:27:12.480 --> 01:27:14.480]  Итак, теперь еще раз, а теперь задача.
[01:27:15.480 --> 01:27:22.480]  Наша задача – найти максимальный поток минимальной стоимости в сети, в которой циклов отрицательной стоимости нет.
[01:27:24.480 --> 01:27:30.480]  Если цикл отрицательной стоимости мог быть, то у нас вот та синтетика, которая…
[01:27:31.480 --> 01:27:32.480]  Ну да, то придется вот так делать.
[01:27:33.480 --> 01:27:34.480]  Тут уже ничего не поделаешь.
[01:27:35.480 --> 01:27:39.480]  Но если только там структура задачи не подразумевает, что вы эти циклы отрицательной стоимости как-то быстрее найдете.
[01:27:39.480 --> 01:27:41.480]  А, мы предположили, что в сети нет циклов.
[01:27:42.480 --> 01:27:43.480]  Да, мы предположили, да.
[01:27:44.480 --> 01:27:45.480]  И тогда получается…
[01:27:46.480 --> 01:27:47.480]  Нам вообще не выгодно брать.
[01:27:50.480 --> 01:27:51.480]  Сейчас, что из этого следует?
[01:27:52.480 --> 01:27:54.480]  А следует из этого… Я сразу сформулирую, что.
[01:27:55.480 --> 01:27:59.480]  Потому что дело в том, что алгоритм – это алгоритм абсолютно все равно, в каком порядке мы ребра добавляем.
[01:28:01.480 --> 01:28:06.480]  Поэтому почему бы там сначала не добавить все вот эти ребра, а потом в конце добавить это?
[01:28:07.480 --> 01:28:10.480]  А, то есть когда мы добавляем эти ребра, у нас каждый раз циркуляция ноль.
[01:28:11.480 --> 01:28:15.480]  Да, то есть минимальная циркуляция ноль, потому что там никаких циклов там нету, которые бы нам…
[01:28:16.480 --> 01:28:17.480]  А после этого мы просто вот так тупо делали.
[01:28:18.480 --> 01:28:25.480]  Да, а после этого мы пропускаем поток циклы только через это ребро и проталкиваем их через кратчайшие пути от S до T.
[01:28:26.480 --> 01:28:27.480]  И получается у нас какой-то…
[01:28:27.480 --> 01:28:29.480]  То есть работает это, получается, за…
[01:28:30.480 --> 01:28:35.480]  Ну, часто это пишут что-то типа модуль этого F на либо VE, либо E лог V.
[01:28:36.480 --> 01:28:38.480]  В зависимости от того, потому что кратчайший путь можно в ту…
[01:28:39.480 --> 01:28:41.480]  В общем, там без потенциалов просто пихать форда Белмана.
[01:28:42.480 --> 01:28:43.480]  И часто это заходит.
[01:28:44.480 --> 01:28:49.480]  А можно на самом деле забабахать потенциалы, если хотите ускорить.
[01:28:50.480 --> 01:29:00.480]  Ну, правда, чтобы забабахать потенциалы, видимо, там хотя бы одного форда Белмана в начале вам пустить, конечно, придется.
[01:29:03.480 --> 01:29:06.480]  Но, правда, есть еще приятная мелкая оговорка.
[01:29:07.480 --> 01:29:08.480]  Дайте еще какая.
[01:29:09.480 --> 01:29:15.480]  Помните, мы говорили о том, чтобы построить новый потенциал, вам нужно найти расстояние и с остальными вершинами пошаманить.
[01:29:16.480 --> 01:29:19.480]  Так вот, заметьте маленькую приятную вещь.
[01:29:20.480 --> 01:29:26.480]  Если вы от Элс в какой-то момент не дотянулись до какой-то вершины, то вы до нее не дотянетесь никогда больше.
[01:29:31.480 --> 01:29:35.480]  Да, у нас в одном из первых занятий по потокам было там…
[01:29:36.480 --> 01:29:46.480]  Мы доказывали, что если вы забабахиваете форда Фолкерсона в любом виде и в какой-то момент выяснилось, что вы, например, от вершины не можете дойти до Т,
[01:29:47.480 --> 01:29:53.480]  то у вас сейчас нет пути от вершины до Т, то вы от этой вершины до Т, этот путь больше и не появится никогда.
[01:29:54.480 --> 01:29:57.480]  Ну и от этой вершины на самом деле тоже доказывается аналогично.
[01:29:58.480 --> 01:30:05.480]  То есть это просто к чему я? Это я к тому, что, в общем-то, когда вы тут забабахиваете новый потенциал, вы там об те вершины, то есть можете вообще не заморачиваться.
[01:30:06.480 --> 01:30:14.480]  Просто есть там потенциал плюс бесконечность, ну и начхать. То есть все равно вам это не понадобится. То есть вам этот потенциал нужен только, чтобы качайшие пути найти.
[01:30:15.480 --> 01:30:18.480]  И делаете вы это до тех пор, пока от С до Т качайший путь есть.
[01:30:19.480 --> 01:30:25.480]  Да, то есть там надо очень, конечно, еще раз подчеркну, аккуратно, конечно, рассчитывать, в какой момент вы ищете расстояние,
[01:30:26.480 --> 01:30:33.480]  отличать приведенное расстояние от реального, потому что новый потенциал – это реальное расстояние, а не приведенное относительно чего угодно.
[01:30:34.480 --> 01:30:42.480]  То есть такой вот маленький технический момент, но если вы прям это четко понимаете, то написать вам это труда составит ровно столько же, сколько написать вам труда,
[01:30:42.480 --> 01:30:47.480]  сколько составит вам написать труда, написать адекватную дэйкстру.
[01:30:48.480 --> 01:30:52.480]  То есть у нас итоговая симпатика – это ВЕ плюс модуль Ф на дэйкстру.
[01:30:53.480 --> 01:30:57.480]  Да, ВЕ плюс модуль Ф на дэйкстру, если вы пишете это с дэйкстрой.
[01:30:58.480 --> 01:31:07.480]  Нет, понятно, с точки зрения нашего курса официальная симпатика ВЕ плюс модуль Ф на Е плюс В лог В.
[01:31:08.480 --> 01:31:12.480]  Естественно, да, потому что в нашем курсе куча фибоначей есть.
[01:31:13.480 --> 01:31:20.480]  Да, в реальной жизни не особо, но тем не менее, вот такая асимптотика.
[01:31:24.480 --> 01:31:31.480]  Причем разные случаи бывают, причем, видимо, следующую ситуацию мы после перерыва рассмотрим,
[01:31:31.480 --> 01:31:36.480]  потому что, да, асимптотика выглядит страшно, но, например, есть ситуация, в которой она может выглядеть не страшно.
[01:31:37.480 --> 01:31:41.480]  Это если мы ищем максимальное просочетание минимальной стоимости.
[01:31:42.480 --> 01:31:45.480]  Или если быть точнее, совершенное просочетание минимальной стоимости.
[01:31:47.480 --> 01:31:49.480]  Ну, представьте себе, у нас есть полный двудольный граф,
[01:31:50.480 --> 01:31:52.480]  и у каждого ребра есть стоимость.
[01:31:53.480 --> 01:31:55.480]  Надо найти совершенное просочетание минимальной стоимости.
[01:31:55.480 --> 01:32:02.560]  Внимание, вопрос. Если вы стандартным образом сведете задачу к потоку,
[01:32:02.560 --> 01:32:16.160]  какую асимптотику вы получите? Венгерский алгоритм тоже решает эту задачу.
[01:32:16.160 --> 01:32:25.480]  Вот чуть позже скажу. Сначала скажите, в эту задачу асимптотику умеете решать.
[01:32:25.480 --> 01:32:32.680]  Венгерский поднимается в куб. А этот? Нам, наверное, не нужно делать ВНМ.
[01:32:32.680 --> 01:32:47.680]  Так, а если в модуле ФТВ? Так, а здесь чему равно? ЕТВ квадрат, но ВВ у нас нет, кажется. Ну да.
[01:32:48.280 --> 01:32:56.320]  А, стоп, ЕВ квадрат. У нас тут можно не бабахать. Ну, там можно, на самом деле, забабахать тупую до
[01:32:56.320 --> 01:33:04.120]  экструза Е плюс В квадрат. Да, такая асимптотика тоже есть. В результате на самом деле парадокс.
[01:33:04.120 --> 01:33:08.440]  То есть с этой точки зрения, видимо, теоретического смысла на самом деле
[01:33:08.440 --> 01:33:12.360]  венгерский алгоритм не имеет, потому что он будет решать ту же самую задачу за ВВ куб.
[01:33:12.360 --> 01:33:21.680]  Отлично, я как раз его не знаю. Да, может в том числе и поэтому. Но, скажем так, алгоритм красивый.
[01:33:21.680 --> 01:33:27.440]  Думаю, изобретался, видимо, ранее. И константу имеет, конечно, получше, чем, если вы будете там
[01:33:27.440 --> 01:33:33.600]  Минкоста с Дэйкстрами с сетями писать. Поэтому, все-таки, считаю, что изучить этот алгоритм
[01:33:33.600 --> 01:33:40.480]  смысл стоит. И мы этим займемся после перерыва. Значит, какую задачу мы сейчас будем решать?
[01:33:40.480 --> 01:33:48.880]  Сейчас мы будем искать, ну давайте для простоты скажем, совершенное парасочетание в полном двудольном графе.
[01:33:48.880 --> 01:33:59.880]  Ну то есть мы будем считать, что у нас с вами есть по N вершин в каждой из двух долей двудольного графа.
[01:33:59.880 --> 01:34:08.640]  Тут N вершин, тут N вершин. Ну понятно, это доля L, это доля R. И граф полный. И у каждой вершины, у каждого ребра стоимость.
[01:34:08.800 --> 01:34:14.360]  Ну, сразу оговоримся, что если граф не полный, то, в общем-то, не сильно принципиально, потому что мы можем считать, что
[01:34:14.360 --> 01:34:18.040]  стоимости всех несуществующих ребер равны просто бесконечности.
[01:34:20.040 --> 01:34:24.880]  Ну и наша задача найти совершенное парасочетание минимального веса.
[01:34:26.320 --> 01:34:31.160]  Ну понятно, что найти просто парасочетание тривиально, но... ой, куда это я поверил.
[01:34:32.520 --> 01:34:35.320]  Ладно, значит, смотрите. Идем дальше.
[01:34:36.000 --> 01:34:44.000]  Значит, идем, соответственно, дальше. Ну вот, спрашивается, как же мы это будем делать?
[01:34:46.000 --> 01:34:54.000]  Ну вот, на самом деле, да, хейтлайнером сегодняшнего занятия является понятие потенциал в разных его интерпретациях.
[01:34:56.000 --> 01:35:01.000]  Вот и сейчас мы тоже введем даже целых два потенциала.
[01:35:01.680 --> 01:35:10.680]  Смотрите внимательно. У нас будет потенциал U и потенциал V.
[01:35:12.680 --> 01:35:15.680]  Вот, ну не перепутайте, вот эту R и вот эту R, да?
[01:35:16.680 --> 01:35:17.680]  Вот.
[01:35:19.680 --> 01:35:23.680]  То есть это мы будем называть потенциал.
[01:35:26.680 --> 01:35:28.680]  О, понятно?
[01:35:31.680 --> 01:35:33.680]  Вот.
[01:35:34.680 --> 01:35:35.680]  U-потенциал и V-потенциал.
[01:35:36.680 --> 01:35:40.680]  Да, просто U-потенциал для левой доли, а V-потенциал для правой доли.
[01:35:41.680 --> 01:35:44.680]  Да, а еще у нас будет понятие A.
[01:35:45.680 --> 01:35:46.680]  То есть...
[01:35:47.680 --> 01:35:51.680]  Да, мы сейчас обсуждаем венгерский алгоритм.
[01:35:52.360 --> 01:35:53.360]  Да.
[01:35:54.360 --> 01:36:03.360]  Да, если что, мы будем считать, что вес ребра, соединяющего и-тую вершину левой доли и житую вершину правой доли, это A, и T, G, D.
[01:36:05.360 --> 01:36:06.360]  Вот, понятно, да?
[01:36:08.360 --> 01:36:09.360]  Вот.
[01:36:12.360 --> 01:36:15.360]  И у нас будет invariant.
[01:36:22.360 --> 01:36:39.360]  Значит, для любых I, G верно, что A, I, T, G, T минус U, I, T минус V, G, T больше либо равно 0.
[01:36:40.360 --> 01:36:42.360]  А нам нужен минимальный вес или максимальный?
[01:36:43.360 --> 01:36:44.360]  Минимальный.
[01:36:45.040 --> 01:36:46.040]  Вот.
[01:36:47.040 --> 01:36:49.040]  Это мы уже начали решать.
[01:36:50.040 --> 01:36:53.040]  Нет условия задачи, найдите просочетание минимального веса.
[01:36:54.040 --> 01:36:56.040]  Ну, максимальное просочетание минимального веса.
[01:36:57.040 --> 01:36:58.040]  Вот.
[01:36:59.040 --> 01:37:04.040]  Но для решения этой задачи мы будем использовать вот такие какие-то потенциалы у V,
[01:37:05.040 --> 01:37:08.040]  которые изначально чему-то равны, а постепенно будут модифицированы.
[01:37:08.720 --> 01:37:15.720]  Ну, например, самое простое, кстати, сказать, что мы без особого ограничения обществе можем считать, что все ребра не отрицательные.
[01:37:18.720 --> 01:37:19.720]  Можем такое сказать?
[01:37:20.720 --> 01:37:25.720]  Ну, конечно, можем, потому что мы, если они отрицательные, давайте ко всем ребрам прибавим одну и ту же константу.
[01:37:25.720 --> 01:37:27.720]  Потому что величина просочетания все равно...
[01:37:28.720 --> 01:37:33.720]  Да, потому что у всех совершенных просочетаний тогда все равно будет один и тот же.
[01:37:34.400 --> 01:37:42.400]  Да, потому что у всех совершенных просочетаний тогда от этого величина увеличится только на вот эту константу умножить на n.
[01:37:42.400 --> 01:37:43.400]  Все.
[01:37:45.400 --> 01:37:52.400]  Итак, значит у нас будет какой-то потенциал, но не просто, мы у него будем, то есть мы будем как-то этот потенциал модифицировать,
[01:37:53.400 --> 01:37:57.400]  но поддерживая, вот мы расписываемся в этом, будем поддерживать вот такой вариант.
[01:38:00.400 --> 01:38:02.400]  A i t j это стоимость ребра.
[01:38:03.080 --> 01:38:05.080]  А у нас ребры есть между любыми для вершинами?
[01:38:06.080 --> 01:38:08.080]  Да, у нас полный граф.
[01:38:09.080 --> 01:38:12.080]  Ну, если и не полный, то значит для остальных ребр считаем, что плюс бесконечности.
[01:38:14.080 --> 01:38:15.080]  Стоимость.
[01:38:16.080 --> 01:38:19.080]  Да, то есть у нас цель именно совершенное просочетание найти,
[01:38:20.080 --> 01:38:24.080]  хотя, в общем-то, если у вас есть задача найти максимальное просочетание минимальной стоимости,
[01:38:24.080 --> 01:38:29.080]  то как бы это тоже к совершенному так сводится, потому что понятно, что плюс бесконечности и захочется взять как можно меньше.
[01:38:29.760 --> 01:38:33.760]  Вот, любыми средствами, поэтому это все одно и то же.
[01:38:35.760 --> 01:38:38.760]  Итак, ну как же нам это поможет?
[01:38:39.760 --> 01:38:43.760]  Ну, вариант, конечно, вот такой, и теперь у нас тогда мистическая цель.
[01:38:44.760 --> 01:38:46.760]  Да, во-первых, еще одно важное определение.
[01:38:48.760 --> 01:38:49.760]  Ребро.
[01:38:51.760 --> 01:38:52.760]  Значит, какой-нибудь i j.
[01:38:53.760 --> 01:38:54.760]  Жесткое.
[01:38:54.760 --> 01:39:14.440]  Вот тут сразу вводится понятие, что ребро жесткое, если, если вот это вот a j minus u j minus v j равно 0.
[01:39:25.440 --> 01:39:41.440]  Значит, на самом деле, в терминах такого варианта и такого определения на самом деле нашу цель можно смодифицировать так.
[01:39:42.440 --> 01:39:49.440]  Нам нужно подшаманить потенциал и найти совершенное просочетание на жестких ребрах.
[01:39:50.120 --> 01:39:52.120]  Вот такая неожиданная идея.
[01:39:55.120 --> 01:39:58.120]  То есть я вот просто давайте сразу сформулирую утверждение.
[01:39:59.120 --> 01:40:02.120]  Совершенное просочетание на жестких ребрах.
[01:40:02.800 --> 01:40:05.800]  Совершенное просочетание на жестких ребрах.
[01:40:23.800 --> 01:40:24.800]  И скромное.
[01:40:32.800 --> 01:40:39.800]  Непонятно, почему можно подбрать потенциал на любое, непонятно, почему.
[01:40:40.800 --> 01:40:41.800]  Да, безусловно.
[01:40:42.800 --> 01:40:43.800]  Но я в этом утверждении этого не утверждаю.
[01:40:44.800 --> 01:40:45.800]  Да.
[01:40:46.800 --> 01:40:47.800]  Я утверждаю только одно.
[01:40:48.800 --> 01:40:54.800]  Предположим, что у нас наш потенциал как-то подшаманился так, что на жестких ребрах нашлось совершенное просочетание.
[01:40:55.800 --> 01:40:58.800]  Но еще непонятно, почему существует LV-штен вариант?
[01:40:59.480 --> 01:41:04.480]  Нет, он всегда существует, потому что если мы сказали, например, что все веса не отрицательные, существует потенциал волевой.
[01:41:05.480 --> 01:41:06.480]  Да, это как минимум.
[01:41:09.480 --> 01:41:17.480]  Но если предположим, что как-то потенциал подшаманился как-то, и на жестких, относительно его ребрах нашлось совершенное просочетание.
[01:41:18.480 --> 01:41:24.480]  Тогда я утверждаю, что это просочетание и скромное, то есть оно реально минимальная стоимость.
[01:41:27.480 --> 01:41:28.480]  Почему?
[01:41:29.480 --> 01:41:38.480]  Да просто потому, что если вы просуммируете, вот просуммируем вот эти нули по всем ребрам этого совершенного просочетания.
[01:41:39.480 --> 01:41:40.480]  Что получится?
[01:41:41.480 --> 01:41:42.480]  Ноль.
[01:41:43.480 --> 01:41:45.480]  Ну, с одной стороны, получится ноль.
[01:41:59.480 --> 01:42:01.280]  Просто потому, что на ideological
[01:42:02.280 --> 01:42:13.240]  и
[01:42:14.240 --> 01:42:15.240] ront
[01:42:19.240 --> 01:42:20.240]  więks السурд Mm
[01:42:23.240 --> 01:42:26.240]  Вот мышцы были эффективнее в сумме А, но получается это всегда так.
[01:42:28.240 --> 01:42:28.740]  Но если вы нашли на жестких ребрах, то получается это будет выполнено.
[01:42:28.800 --> 01:42:37.800]  то есть конечно да это может быть непроизвольный потенциал то есть как вы отсюда следует что
[01:42:37.800 --> 01:42:42.840]  получается что мы должны подогнать как-то потенциал так чтобы сумма всех потенциалов была вот этим
[01:42:43.000 --> 01:42:52.720]  вот такая вот красота вот
[01:42:52.720 --> 01:43:07.680]  вот поэтому значит наша цель искать просочетание на жестких ребрах ну на самом деле мы будем
[01:43:07.680 --> 01:43:16.160]  пытаться логика будет что-то типа алгоритма куна но тем более в общем-то не далеко уходим
[01:43:16.160 --> 01:43:20.480]  потому что кун мало того что венгар так еще и насколько помню причастен к этому алгоритму
[01:43:20.480 --> 01:43:31.560]  вот кстати вот значит идея будет такая мы будем идти по вершинам левой доли и в каждый момент
[01:43:31.560 --> 01:43:38.680]  времени считать что у нас и в каждый момент времени у нас будет какое-то просочетание на
[01:43:38.680 --> 01:43:45.960]  жестких ребрах которые покрывает в точности пройденные вершины левой доли и какие-то непонятно
[01:43:45.960 --> 01:43:59.760]  какие но вершины правой доли вот понятно и так как же мы будем обновляться вот пришла у нас
[01:43:59.760 --> 01:44:11.920]  новая вершина назовем ее спрашивается как мы попытаемся добавить ее в просочетание конечно
[01:44:11.920 --> 01:44:18.280]  запускаем dfs ищем из нее удлиняющую цепь ну как всегда ребра просочетаний смотрят справа налево
[01:44:18.280 --> 01:44:24.880]  все остальные слева направо но единственное что мы делаем это ищем эту удлиняющую цепь
[01:44:24.880 --> 01:44:34.800]  исключительно по жестким естественно ребра вот это просочетание оно на жестких
[01:44:34.800 --> 01:44:44.640]  ребрах мы поддерживаем и все да просто оно покрыло вот эти первые векшины вот вот такая
[01:44:44.640 --> 01:44:53.680]  идея вот понятно вот то есть просто запускаем dfs ищем удлиняющую цепь вдоль этой удлиняющей
[01:44:53.680 --> 01:45:11.080]  цепи значит улучшаем просочетания и все хочется нам сказать почему нет почему может работать
[01:45:11.080 --> 01:45:20.800]  потому повезет кстати и сработает а почему это может нет а что тут а что тут выполнять ну как бы
[01:45:20.800 --> 01:45:25.280]  если у тебя он перед началом изначально он тебя выполнен что у тебя все ребра не отрицательная
[01:45:25.280 --> 01:45:37.920]  потенциалы все равны нулю например вот а вот это уже вопрос и более того даже более глобальный
[01:45:37.920 --> 01:45:43.840]  вопрос даже если оно так счит а почему длиняющая цепь вообще найдется более глобальный вопрос ну я
[01:45:43.840 --> 01:45:52.400]  сейчас на это вопрос и просто скопом и отвеки ответа это конечно может и не произойти но тогда
[01:45:52.400 --> 01:46:01.680]  идея очень простая смотрите тогда мы мы запускаем вот мы запускаем dfs и что-то обошли помните мы
[01:46:01.680 --> 01:46:08.240]  уже недавно чем-то подобным кстати занимались то есть вот dfs у нас тут взял что-то там обошел там
[01:46:08.240 --> 01:46:16.400]  какие-то вершины вот и так и будем называть ну давайте для просто там назовем l плюс r плюс
[01:46:16.400 --> 01:46:25.120]  да а также у нас еще есть понятия там какие-то l минус и r минус то есть то что dfs не обошел да
[01:46:25.120 --> 01:46:34.240]  как мы знаем ну то есть в r плюс у нас не допустим в r плюс не попало ни одного ни одной вершины
[01:46:34.240 --> 01:46:46.040]  не из просочетания но это да из вот из вот этой вершины да только из нее и вот предполонит но
[01:46:46.040 --> 01:46:58.560]  теперь выскакивает вопрос по нот почему dfs не пошел дальше да потому что гребра то есть но
[01:46:58.560 --> 01:47:06.000]  просто видимо как бы ниоткуда из l плюс а видимо не ведут куда-то в новые вершины жесткие рёбра
[01:47:06.000 --> 01:47:20.880]  правда понимаете вот да да важный момент dfs ходит исключительно по жестким рёбрам да ну
[01:47:20.880 --> 01:47:25.480]  справа налево он ходит естественно вообще только по рёбрам просочетания да находим только по
[01:47:26.120 --> 01:47:31.920]  может возникнуть проблема что мы там просто вот упираемся через этих вершин вот в эти все ну
[01:47:31.920 --> 01:47:41.920]  то есть рёбра крыши ведут у нас полный граф но они все к сожалению куда он не ходит снизу
[01:47:41.920 --> 01:47:53.160]  то есть те которые мы еще не добавили ну вот да так ну вот внимание вопрос что же делать
[01:47:53.160 --> 01:48:00.440]  но на самом деле идея очень простая значит надо как-то пошаманить потенциалы так чтобы и старые
[01:48:00.440 --> 01:48:10.240]  рёбра не убить и новые рёбра там собственно приведенные стоимости 0 появились но для этого
[01:48:10.240 --> 01:48:16.240]  мы поступим следующим образом мы рассмотрим все вот эти рёбра которые соединяют допустим
[01:48:16.240 --> 01:48:32.720]  l плюс с r минус да и найдем минимум и объявим его дельта вот давайте введем понятие дельта это
[01:48:32.720 --> 01:48:49.840]  минимум стоимости так сказать рябра который ведет из из вершины из вершины и в вершину g но
[01:48:49.840 --> 01:48:56.000]  при этом да вот я специально цветами выделил но и напишу прямо что и лежит в левой доле
[01:48:56.000 --> 01:49:08.560]  тоже в l плюсе то есть вот и g лежит в минус понимаете логику да вот
[01:49:08.560 --> 01:49:21.000]  значит теперь значит это такой вот дельта вот выяснилось ну выяснилось что это дельта больше
[01:49:21.000 --> 01:49:33.120]  нуля ой за кост я обозначил что я обозначил да да да да да значит я имею ввиду шокер ну
[01:49:33.120 --> 01:49:38.240]  куда кост это на самом деле что такое давайте я тут сразу напишу в качестве коста я имею
[01:49:38.240 --> 01:49:48.560]  ввиду естественно а и т житая минус соответственно у от и минус в от же
[01:49:48.560 --> 01:50:04.760]  тут у тут в вот ну ашки мы не трогаем а вот ушки и вешки наверное надо бы
[01:50:04.760 --> 01:50:12.200]  ну так теперь давайте подумаем как бы пошаманить потенциалы так чтобы вот это
[01:50:12.200 --> 01:50:24.560]  ребро нот чтобы вот это ребро оказалось ну левым все потенциалы за и плюс прибавить
[01:50:24.560 --> 01:50:34.320]  ну давайте думать потому что в принципе да возникает идея да что можно например чтобы вот
[01:50:34.320 --> 01:50:39.080]  это ребро превратилось в 0 все такие ребра там которые ну то есть все такие ребра у нас весом
[01:50:39.080 --> 01:50:44.560]  дельта и больше да ну перд давайте их приблизим к нулю то есть давайте скажем то есть давайте
[01:50:44.560 --> 01:50:57.160]  скажем что фор и лежащим в l плюс что мы сделаем значит уит а плюс равно дельта так ну что ж
[01:50:57.160 --> 01:51:01.440]  уже неплохо замену вот новый хикает вопрос давайте подумаем что же произойдет теперь с
[01:51:01.440 --> 01:51:12.120]  ребрами вы сейчас давайте смотреть значит l плюс r минус ну давайте вот просто все просто все
[01:51:12.120 --> 01:51:20.360]  варианты выпишут спокойно дойдем не торопитесь пока давайте проверяем давайте чтобы просто
[01:51:20.360 --> 01:51:24.000]  лучше понимать происходящее давайте поймем что у нас происходит если вот выполнили вот эту
[01:51:24.000 --> 01:51:32.000]  операцию то есть заметим что здесь у нас получился не просто ока еще и нашлось хотя бы одно нулевое
[01:51:32.000 --> 01:51:48.160]  ребро теперь да вот значит l минус r плюс вот ну что произошло с этими ребрами а тоже ок потому
[01:51:48.160 --> 01:51:54.640]  что с ними не произошло вообще ничего равно как и с ребрами l минус и r минус да потому что мы
[01:51:54.640 --> 01:52:04.120]  их просто эти доли не трогали то есть тут ок но вот остается только рассмотреть l плюс
[01:52:04.120 --> 01:52:16.520]  r плюс то есть те ребра по которым у нас dfs ходил но тут возникают проблемы какие проблемы очень
[01:52:16.520 --> 01:52:24.040]  простые что дело в том что у всех вот этих ребер получается приведенная стоимость тоже уменьшилась
[01:52:24.040 --> 01:52:29.080]  на дельту но только если вот для этих ребер мы гарантировали что она была не меньше дельты
[01:52:29.080 --> 01:52:34.120]  то для этих ребер такой гарантии нет более того как было правильно замечено ранее у нас есть
[01:52:34.120 --> 01:52:43.640]  жесткие ребра которые вообще могли теперь поломаться что же делать как же исправить эту
[01:52:43.640 --> 01:53:02.920]  поломку да совершенно верно 4g но это всегда придется такое делать да то есть vg минус равна
[01:53:02.920 --> 01:53:09.640]  нет теперь давайте смотреть еще не погодить но давайте смотреть ну давайте так вот эти два
[01:53:09.640 --> 01:53:15.360]  случая ну давайте смотреть но так и так перепроверять придется потому что да там что-то не сломалось но
[01:53:15.360 --> 01:53:23.560]  по другим причинам значит по еще раз l плюс r минус так да все рассуждение абсолютно то же
[01:53:23.560 --> 01:53:35.000]  самое l минус r плюс но здесь вес этих ребер только увеличился обратите внимание видите да нет мы
[01:53:35.000 --> 01:53:42.400]  уменьшили потенциал следовательно приведенная стоимость увеличилась нет это я про l минус
[01:53:42.400 --> 01:53:47.400]  r плюс ну да могли потеряться жесткие ребра соединяющие л минус ср плюс еще не испоросочетание
[01:53:47.400 --> 01:54:00.360]  да такое могло быть потому что l минус да и да л минус ср минус ну как бы из l минус
[01:54:00.360 --> 01:54:05.320]  ср минус как всегда как ничего не касается так ничего не касается и наконец l плюс r плюс
[01:54:05.320 --> 01:54:14.160]  но здесь да веса этих ребер не поменялись причем это очень важно что не поменялись то есть это
[01:54:14.160 --> 01:54:21.000]  означает маленькую приятную вещь что у вас во первых при таком изменении потенциала жесткие
[01:54:21.000 --> 01:54:29.560]  ребра по которым прошел dfs остались таковыми понимаете да то есть они остались таковыми но
[01:54:29.560 --> 01:54:34.920]  при этом у вас теперь из этого l плюс а есть еще появилось хотя бы одно ребро который ведет
[01:54:34.920 --> 01:54:48.600]  вас во что-то новое это вот вот это вот ребро вот это вот такое дельта вот понятно но тогда
[01:54:48.760 --> 01:54:53.840]  теперь идея отличная давайте запустим теперь с отрывом отметки и запустим у еще раз попробуем
[01:54:53.840 --> 01:55:08.360]  найти удлиняющие цепи но это нас приведет к тому что все постепенно так бы осторожно да ты так
[01:55:08.360 --> 01:55:14.240]  задаешь вопрос а на самом деле как бы от того что я рассказал до этого вопроса два года прошло
[01:55:14.240 --> 01:55:28.000]  в реальности за интриговал но вот ну вот нет я расскажу про что произошло но пока вот давайте
[01:55:28.000 --> 01:55:34.040]  добьем значит просто предлагать давайте еще раз запустим dfs и r плюс а как ель плюс расширится да
[01:55:34.040 --> 01:55:39.880]  ну либо нашлась удлиняющая цепь может нам повезло либо расширился или плюс и мы повторяем эту
[01:55:39.880 --> 01:55:45.400]  операцию но рано или поздно так как у нас расширится постоянно происходит расширение мы вынуждены
[01:55:45.400 --> 01:55:49.160]  будем наткнуться на вершину не покрытую просочетанием удлиняющая цепь найдется
[01:55:49.160 --> 01:56:06.160]  принятие аналоги там так вот давайте подумать какая симптомик у нас фактически до в вершин
[01:56:06.160 --> 01:56:13.640]  в каждой мы запускаем куна за в квадрат но этого куна мы узнали в квадрат раз а сколько а
[01:56:13.640 --> 01:56:25.440]  в нот а в раз получается и того получается в 4 но тем не менее это первая исторически версия по
[01:56:25.440 --> 01:56:33.000]  медведи не 54 кого-то хотя ладно тут я тут я про год могу это могу обмануть собственно первая
[01:56:33.000 --> 01:56:43.840]  версия придуманная какими-то двумя венгами вот но максимум через два года пришли два других
[01:56:43.840 --> 01:56:51.080]  венгра возможно кстати среди них где-то притаился кум я не помню кстати среди кого он притаился но
[01:56:51.080 --> 01:57:02.520]  по-моему ну где-то он там был рядом ходил нет мы запускаем нет кун просто в квадрат работает
[01:57:02.520 --> 01:57:12.680]  ну да это же у нас в квадрат работает да вот но собственно пришли но пришли следующие два венгра
[01:57:12.680 --> 01:57:18.720]  посмотрели это который сказали слушайте вы тут посмотрели на алгоритм и подумали слушайте а нельзя
[01:57:18.720 --> 01:57:23.760]  как-то раз уж у вас тут старые вершины обошли вот по ним еще раз не бегать действительно
[01:57:23.760 --> 01:57:37.040]  то есть нельзя как-то побыстрее но давайте думать как можно этот век четвертый оптимизировать
[01:57:37.040 --> 01:57:42.360]  до хотя бы куба ну потому что у нас же есть с вами но вот у нас же есть куб на минкости
[01:57:42.360 --> 01:57:55.920]  ну так к сожалению не сделаем забирай вперед но у меня почему-то мне ощущения которые тоже
[01:57:55.920 --> 01:58:00.600]  лучше вот как бы лучше загуглить проверить что по-моему это все делось до того как вообще там
[01:58:00.600 --> 01:58:08.440]  изобрели эти минкост и прочую радость если что вот значит смотрите давайте думать как этот
[01:58:08.440 --> 01:58:15.520]  алгоритм превратить в куб но давайте посмотрим а что мы тут так долго делаем ну да мы запускаем
[01:58:16.120 --> 01:58:21.760]  квадрат но давайте начнем с простого а что мы помимо дфс и делаем зава квадрат
[01:58:33.880 --> 01:58:40.440]  вот как что мы делаем вот есть вот одна важная вообще принципиальная вещь
[01:58:40.440 --> 01:58:44.880]  который был алгоритм и делаем зава квадрата нам от этого не очень
[01:58:44.880 --> 01:58:55.880]  не почему потенциал мы пересчитываем за линию пересчитывать но если вы как бы в
[01:58:55.880 --> 01:58:59.520]  явном виде не переписываете все приведенные стоимости то как бы вы это за лигию делать
[01:58:59.520 --> 01:59:07.880]  вот да то есть обратите внимание как мы ищем дельт в топовом виде нам эту дельту
[01:59:07.880 --> 01:59:15.480]  приходится реально за квадрат искать вот возникает вопрос а можно ли эту дельту
[01:59:15.480 --> 01:59:30.360]  все-таки каким-то мистическим образом искать побыстрее вот какие варианты
[01:59:31.360 --> 01:59:50.040]  сейчас нам хочется ее просто заново не искать ну да ну не совсем понимаете там набрал множество
[01:59:50.040 --> 01:59:56.560]  ребер которые вы рассматриваете оно на самом деле как бы ужимается потому что поэтому как бы то есть
[01:59:56.560 --> 02:00:07.680]  пришел пришел пришел пришел предлагаешь фибоначи это все запихать ой да ну просто если на каждом
[02:00:07.680 --> 02:00:15.280]  шаге это делать то там это будет там что но отсортить тогда но как-то
[02:00:15.280 --> 02:00:25.040]  но нет понимаешь тут проблема просто не очень понятно как ты их брать
[02:00:25.400 --> 02:00:29.600]  просто ты по списку бежишь то у тебя вот какой есть минимальный ребро она находится где-то вот
[02:00:29.600 --> 02:00:37.080]  здесь вы минус и минус внимание вопрос но ты что с ним делать ну то есть ладно допустим конкретно
[02:00:37.080 --> 02:00:41.960]  на этой террации его надо пропустить но в будущем допустим у тебя обнаружилось ребро которое как-то
[02:00:41.960 --> 02:00:54.680]  не проходит которое там вот тебе там не имеет отношения да ну да но просто тебе ну правда у
[02:00:54.680 --> 02:01:04.960]  тебя эти ребра из этого списка придется как добавлять туда так и удалять ну вот какие-то
[02:01:04.960 --> 02:01:10.640]  какие проблемы есть да но как-то ощущения шепал вот это как-то придется то есть это то ли хипами
[02:01:10.640 --> 02:01:19.160]  как-то делать то ли еще потому что звать ребра как бы не подряд идущие вот нет тут идея как
[02:01:19.160 --> 02:01:26.120]  бы сократить на самом деле себе в данном случае работу в раз можно попробовать гораздо более
[02:01:26.120 --> 02:01:40.240]  простым образом вот каким образом да я в общем-то дот да в общем-то очень простым введем просто мы
[02:01:40.240 --> 02:01:54.960]  будем поддерживать такую функцию как такой массив как так как она называется вот официально
[02:01:54.960 --> 02:02:07.920]  называется мин же от же на самом деле я бы ее назвал конечно ну так ага нет ну не минует что по
[02:02:07.920 --> 02:02:19.080]  сути да ладно давайте называть мин дельта а дж ну что это такое это минимум вот этого а и того
[02:02:19.080 --> 02:02:37.120]  житого минус уитого минус в житого по всем и лежащим в l плюсе вот такая идея давайте на
[02:02:37.120 --> 02:02:45.120]  каждой террации будем такую штуку штуку поддерживать да именно для второй доли
[02:02:45.120 --> 02:02:53.960]  ну и здесь можно сказать что мы по факту мы ее будем поддерживать конечно только для
[02:02:53.960 --> 02:03:00.960]  эрбинуса поэтому поэтому я это синий ким и пришел
[02:03:00.960 --> 02:03:28.200]  вот ну во первых да заметить теперь приятную вещь что если у нас такая мин дельта поддержа
[02:03:28.200 --> 02:03:32.320]  ну то есть давайте подумаем какие у нас так ладные расходы на то чтобы эту мин дельту поддерживать
[02:03:32.320 --> 02:03:39.680]  да ну потому что во первых да хотя до первого про зачем нам такая мин дельта но очевидно
[02:03:39.680 --> 02:03:45.920]  что на каждом шаге дельту такая штука позволит искать теперь за линию согласны остался только
[02:03:45.920 --> 02:03:50.440]  вопрос как ее поддерживать но поддерживать ее тоже да но давайте посмотрим как ее поддерживать
[02:03:50.440 --> 02:03:56.840]  очень просто если у нас появилась новая вершина в l плюсе да то в тот момент когда она появилась
[02:03:56.840 --> 02:04:02.960]  в дф если мы можем пробежаться по всем ребрам из нее и попытаться это эту штуку обновить а еще она
[02:04:02.960 --> 02:04:14.640]  меняется когда вот ну да но то да действительно там и то есть иногда еще меняется потенциал но
[02:04:14.640 --> 02:04:18.520]  с другой стороны заметим маленькую приятную вещь что меняется он только когда мы кль плюсу и
[02:04:18.520 --> 02:04:24.920]  плюсу примере там прибавляем что-то да то есть пода по сути это означает что вот этот минимум
[02:04:24.920 --> 02:04:29.600]  просто изменится на одну и ту же константу а именно уменьшится на то что вы там прибавили
[02:04:29.600 --> 02:04:39.200]  к потенциалу видите да вот то есть получается что да то есть у вас то есть получается у вас
[02:04:39.200 --> 02:04:43.880]  теперь единственное что работает завет четвертый это дфс потому что все остальное вы делаете
[02:04:43.880 --> 02:04:52.880]  завеку согласны вот но теперь вы чекайте просто чем же мы все это делали неужели мы можем сократить
[02:04:52.880 --> 02:04:57.440]  сделать так чтобы у нас в дфсов каждый из которых работает завэ квадрат работали
[02:04:57.440 --> 02:05:05.480]  суммарно не закуп но в плане мы очевидно те вершины которые посетили ну вот он да ну на
[02:05:05.480 --> 02:05:12.360]  самом деле да действительно идея такая что давайте просто старые юзиды никуда не девать а вместо
[02:05:12.360 --> 02:05:17.720]  этого если мы нашли что после применения потенциала у нас оказалось что мин дельта там равно нулю на
[02:05:18.320 --> 02:05:24.080]  вершины так давайте во первых мы просто скажем так а какой у нее жесткое ребро а вот вот это вот
[02:05:24.080 --> 02:05:28.800]  так то давайте предположим что дфс в этом месте пошел по этому ребру и прозапускаем дфс из этой
[02:05:28.800 --> 02:05:37.200]  вершины вот то есть просто запускаем запускаем и все то есть запускаем тот же самый обход тогда
[02:05:37.200 --> 02:05:44.760]  получится что сумма то есть дфсов все еще в но при этом оказывается что вы по каждой вершине эти
[02:05:44.760 --> 02:05:52.040]  дфс и суммарно проходит не более чем по одному разу и получается что сумма получается в четвертой
[02:05:52.040 --> 02:06:03.120]  сократилась до в куба нет но что потому что что мы делали то есть мы нашли просто мы сделали
[02:06:03.120 --> 02:06:08.800]  абсолютно то же самое просто с двумя оговорками во первых мы дельту нашли зали просто из вот этой
[02:06:08.800 --> 02:06:14.560]  штуки да а теперь заметили следующее что если мы теперь заново запустим дфс из у он по любому
[02:06:14.560 --> 02:06:22.880]  обойдет все тоже самое да плюс еще как минимум вот эту вершину да тогда эта идея такая хорошо
[02:06:22.880 --> 02:06:30.200]  эти вершины он обойдет причем напрямую да по тем же ребрам плюс он еще обойдет то что он обойдет
[02:06:30.200 --> 02:06:36.480]  из этой вершины так давайте из этой вершины дфс и запустим не стирая старых пометок
[02:06:36.480 --> 02:06:48.840]  а почему у нас не появится ребер и спами из уже посещенных а почему у нас в смысле не появится
[02:06:48.840 --> 02:07:00.120]  ну в смысле почему ну почему когда мы поищаем вершину мы рассмотрим все ребра и больше никаких
[02:07:00.240 --> 02:07:09.200]  от нее нет пародии нет стоп стоп стоп нет что еще имеется в виду нет мы просто говорим что вот
[02:07:09.200 --> 02:07:14.680]  это раз мы эту вершину взяли значит вот то есть тут у нее какой-то реброс вот жесткое ребро здесь
[02:07:14.760 --> 02:07:20.920]  значит дфс может дфс может по нему и пройти в принципе
[02:07:20.920 --> 02:07:33.280]  да
[02:07:33.280 --> 02:07:45.080]  почему не работаем нет ну не работаем но нет ну да в будущем но так это итерация
[02:07:45.080 --> 02:07:49.360]  не один раз делается то есть мы как бы за все ли дфс из этой вершины и делаем то же самое
[02:07:49.360 --> 02:07:55.520]  ну если конечно там мы не дошли до вершины без про сочетания в правой доле
[02:07:55.520 --> 02:08:10.480]  ну вот обошли вот это вот все да так вот это левая вершина мы ее помечаем да мы все это
[02:08:10.480 --> 02:08:17.040]  помечаем юзер да вдруг у нас после манипуляции из вот этой вершины добавится еще одно жесткое
[02:08:17.480 --> 02:08:25.800]  но так так мы его и нашли вот вот это вот жесткое ребро добавилось и мы из нее дфс запустили то есть
[02:08:25.800 --> 02:08:31.480]  мы запускаем дфс каждый раз когда у нас находится ну да так более того мы эту манипуляцию делаем для
[02:08:31.480 --> 02:08:50.720]  того чтобы оно нашлось ну вот то есть мы смотрим какие жесткие ребра у нас появились ну типа того
[02:08:50.720 --> 02:08:56.840]  да у нас могло появиться не вполне но просто тогда это означает что на следующей итерации вот
[02:08:56.840 --> 02:09:04.720]  этой дельта будет равно нулю на самом деле то есть ты там просто сделал дельта умеешь
[02:09:04.720 --> 02:09:09.720]  и нашел вот это жесткое ребро запустил дфс потом по остальным вершинам пробежался дельта все еще
[02:09:09.720 --> 02:09:20.520]  но значит тут еще где-то жесткое ребро есть вот и так далее вот такая вот такая вот не очень
[02:09:21.160 --> 02:09:27.560]  не очень хитрая идея то есть в общем-то кодится приятно и как бы практика показывает что по
[02:09:27.560 --> 02:09:34.000]  сравнению с минкостом естественно она имеет то есть имеет преимущество в константе
[02:09:34.000 --> 02:09:48.400]  ну да ну потому что в рамках того что дфс уже ранее обошел жесткие ребра остались жесткими
[02:09:48.800 --> 02:09:55.240]  вот просто мы нашли вершину что дфс новый он бы прошел эти вершины плюс еще как минимум вот
[02:09:55.240 --> 02:10:00.160]  это поэтому мы запускаем дф эти вершины не проходим а вместо этого запускаем не стирая
[02:10:00.160 --> 02:10:08.320]  старых пометок запускаем дфс сразу отсюда вот ну там запоминает что мы в нее пришли по жесткому
[02:10:09.320 --> 02:10:20.000]  нам еще важно что из-за плюсов и минус и из-за ну потому что ну потому что мы могли тогда сходить
[02:10:20.000 --> 02:10:26.400]  не не не мы же не из-за справа налево мы ходим только по ребрам про сочетание и нам наплевать
[02:10:26.400 --> 02:10:29.760]  на самом деле то есть может быть вот это жесткое ребро просто мы до него еще не добрались
[02:10:29.760 --> 02:10:46.760]  не факт потому что может это но это может ребро вело в новую вершину относительно дфс а да
[02:10:46.760 --> 02:10:51.920]  но из этой версии эта вершина в про сочетании которая ведет вот сюда то есть тогда по факту
[02:10:51.920 --> 02:10:57.440]  то есть мы идем сюда и дф и пытаемся это тоже вершина для нас новая но вот и мы из нее там
[02:10:57.440 --> 02:11:07.720]  дфс какие-то запускаем вот так что вот такая вот нехитрая ладно хитрая конечно немножко но
[02:11:07.720 --> 02:11:26.280]  такая достаточно прикольная технология так есть ли тут какие-то вопросы нету хорошо
[02:11:26.400 --> 02:11:34.840]  вот но на самом деле да в этом месте мы заканчиваем исследовать говорить о каких-то там потоках со
[02:11:34.840 --> 02:11:44.960]  стоимости ами похожих задачах вот и возвращено и возвращаемся к задаче о поиске минимального
[02:11:44.960 --> 02:11:57.560]  разреза внезапно да да да несколько но нам эти технологии устроена так что можно дойти хоть
[02:11:57.560 --> 02:12:03.680]  какую-нибудь одно фишка просто будет в том что если у тех появилось одновременно несколько ты
[02:12:03.680 --> 02:12:08.960]  нашел одно запустил из этой вершины дфс и просто будет факт что следующая дельта будет равна нулю
[02:12:08.960 --> 02:12:15.280]  то есть просто потенциал не меньше просто из этой вершины спускаешься вот ну то есть
[02:12:15.280 --> 02:12:19.000]  ты там конечно можешь пробежаться по всем вершинам и записать себе в очередь откуда
[02:12:19.000 --> 02:12:30.360]  дфс надо запускать но это как бы не поможет вот то есть это такая локальность вот но да
[02:12:30.360 --> 02:12:38.120]  разумеется вы можете его опять изгнать но это будет шлит но это будет лишь рецидив
[02:12:38.120 --> 02:12:47.760]  прецедента дача сказал нам ну как быть ну читай да об этом подробно читайте в серии книг
[02:12:47.760 --> 02:12:54.920]  полигатор и каменный философ как ведь да я ничего не перепутал такая книжка реально есть ну там
[02:12:54.920 --> 02:13:00.280]  это там но там ладно трилогия там но я пока стираю да полигатор и каменный философ там
[02:13:00.280 --> 02:13:06.400]  полигатор личные деревья мардионы и там 9 подвигов сена если вот очень рекомендую на
[02:13:06.400 --> 02:13:13.200]  самом деле на эти просто такой очень просто добрая книжка с хорошим юмором
[02:13:13.200 --> 02:13:39.200]  итак теперь еще ищем минимальный разрез то есть прям задачу мы сейчас можем сформулировать даже
[02:13:39.200 --> 02:13:48.880]  без потока и в общем-то кстати решать мы ее тоже будем практически без потока задача такая дан
[02:13:48.880 --> 02:14:10.800]  взвешенный не ориентированный граф но все веса не отрицательные да ну формально я должен
[02:14:11.160 --> 02:14:28.800]  граф не обязан быть планарным конечно но ну что-нибудь такое задача найти минимальный разрез
[02:14:28.800 --> 02:14:42.720]  спрашивается что как может показаться не хватает формулировки задач да казалось бы да
[02:14:42.720 --> 02:14:47.840]  потому что действительно у нас понятие разрез обычно требовало и столько и столько а мы хотим
[02:14:47.840 --> 02:14:56.040]  глобальные да но совершенно верно значит мы ищем глобально то есть это задача о глобальном разрезе
[02:14:56.040 --> 02:15:02.480]  чем она отличается отличается вот чем то есть у нас графе нет никакого и столько и столько мы
[02:15:02.480 --> 02:15:11.120]  просто хотим разделить вершины на две доли так чтобы вес суммарный вес ребер пересекающих этот
[02:15:11.120 --> 02:15:23.760]  разрез был минимальным правда едино просто на абсолютно произвольные доли с и т вот то есть
[02:15:23.760 --> 02:15:31.840]  они не пересекаются их объединение равно в но единственное что нам нужно ограничение на
[02:15:31.840 --> 02:15:42.240]  это разрез это то что с и т оба не пусты но в противном случае понятно тогда минимальный разрез это
[02:15:42.240 --> 02:15:51.560]  типа одна доля пустая в другой все да но мы только что сказали давайте еще раз подчеркнем что все
[02:15:51.560 --> 02:16:04.760]  веса ребер не отрицательно это нам будет дожить и принципиально вот бабах ну или так вот
[02:16:04.760 --> 02:16:15.320]  так что вот такая вот неожиданная ситуация вот ну здесь к сожалению сейчас будет немножко грустно
[02:16:15.320 --> 02:16:21.240]  почему грустно потому что сейчас я выдаю просто сейчас я сделаю то что как бы не дай
[02:16:21.240 --> 02:16:25.880]  как бы не в стиле в которой я не очень люблю я просто расскажу алгоритм просто докажу что он
[02:16:25.880 --> 02:16:34.280]  работает а че так можно было но вот я не люблю потому что я люблю как бы рассказывать в том стиле
[02:16:34.280 --> 02:16:38.600]  что как бы мы поняли какие идеи за ним стоят и как это можно вообще как это и смешные вещи
[02:16:38.600 --> 02:16:48.600]  можно придумывать вот но это к сожалению не тот случай нет нет смотрите как-то один раз можно
[02:16:48.600 --> 02:16:55.680]  нет смотрите как-то это придумать можно потому что авторы вот предлагаем вам но алгоритма алгоритм
[02:16:55.680 --> 02:17:01.800]  значит алгоритм называется алгоритм штор вагна я сразу скажу да как по моему уже упоминали да
[02:17:01.800 --> 02:17:20.840]  значит штор это мотильда штор это мотильда вот мотильда штор там и ну а да кто-то скажет
[02:17:20.840 --> 02:17:27.080]  до композитор кто-то скажет голуля и тогда да да да и тогда нету надо нет а суть в том что думаю
[02:17:27.080 --> 02:17:33.520]  вагнер это достаточно распространение германии фамилия поэтому тут называется шутить позже там
[02:17:33.520 --> 02:17:40.200]  бесконечно долго вот поэтому это я просто упомяну для того что говорит что как бы алгоритм штор
[02:17:40.200 --> 02:17:50.560]  вагнера то есть как бы правильно говорить алгоритм штор вагнера не штора вагнера а что вот так значит
[02:17:50.560 --> 02:18:00.240]  этот значит он попробует нам найти этот глобальный разрез за а какой симптутику мы
[02:18:00.240 --> 02:18:17.200]  вообще посчитаем крутой да так мы умеем в четвертой ноге каким образом так вот да самая
[02:18:17.200 --> 02:18:23.120]  тупая идея давайте переберем пары вершин которые типа точно должны пойти по разным долям и
[02:18:23.120 --> 02:18:32.080]  между ними найдем мин разрез максимально потом да то есть принципе это задача решается за я так
[02:18:32.080 --> 02:18:42.120]  в общем случае напишу в на там max flow max flow search вот то есть принципе да потому что может
[02:18:42.120 --> 02:18:47.880]  сказать что давайте вот эта вершина будет всегда в доле с ну а теперь переберем кто точно будет в
[02:18:47.880 --> 02:18:54.760]  доле t и и вперед можно даже там не асимпатически оптимизировать это что давайте предположим
[02:18:54.760 --> 02:19:00.720]  сначала что вот эта вершина будет в другой доле запустим поток потом мы типа сожмем в одну там
[02:19:00.720 --> 02:19:10.640]  на меньшем графе запустим еще и так далее да но да но это не оскорение симпатическое так но
[02:19:10.640 --> 02:19:15.720]  максимальный поток мы с вами умеем искать за какой симптотику за веку у нас чемпионская
[02:19:15.720 --> 02:19:21.960]  симптотика с вами да да кстати да ограничение на целочисленность этих ребер нету если что
[02:19:21.960 --> 02:19:31.800]  точнее нет сла численность вот поэтому мы умеем в куб там лада наука я надеюсь умеет ве ну потому
[02:19:31.800 --> 02:19:36.520]  что может выяснить что наука тоже умеет только там сводчист только там целыми не отрицательными
[02:19:36.520 --> 02:19:42.240]  там пропустыми способностями которые влезают в битность вашего компилятора так как всегда вот
[02:19:42.240 --> 02:19:48.400]  то есть может быть просто честно я не проверял может там такая подлянка а может и нет ну вот но
[02:19:48.400 --> 02:19:59.600]  неважно потому что даже если и так то это получится в купе а наша ставка веку да причем сейчас
[02:20:00.400 --> 02:20:17.480]  будет очень простой по реализации алгоритм который вообще не требует ничего нет нет вот это алгоритм
[02:20:17.480 --> 02:20:22.320]  такой просто берем первый вот говорим что это эту вершину мы называем с и она будет всегда в одной
[02:20:22.320 --> 02:20:28.680]  доле в левой доле допустим теперь мы перебираем а кто будет в правой доле то есть тупо перебираем
[02:20:28.680 --> 02:20:33.520]  и для каждой из них вот пусть она например она будет вершины т давайте найдем минимальный разрез
[02:20:33.520 --> 02:20:43.640]  между вершинами с и т уже в старой терминологии да ребра не ориентированная да но это нам малину
[02:20:43.640 --> 02:20:55.640]  не портила ну вот ну вот поэтому я говорю малину не портила ну да нет ну мы уже это ладно мы это
[02:20:55.640 --> 02:21:01.320]  уже обсуждали давайте там как бы так ребят раз мы сегодня раз мы сегодня как бы хотим не
[02:21:01.320 --> 02:21:08.000]  засиживаться до семи и вот что давайте не будем этого делать вот собственно ну в принципе вообще
[02:21:08.000 --> 02:21:15.720]  говоря да все я тоже по идее заинтересован том чтобы не до семи сидеть вот так вот значит как
[02:21:15.720 --> 02:21:26.880]  значит предлагается это делать значит предлагается сделать следующий берем первую попавшуюся вершину
[02:21:26.880 --> 02:21:42.600]  назовем ее в ноль таки так но вот мы создадим из нее целое множество а
[02:21:42.720 --> 02:21:57.120]  потом значит в ноль это произвольная вершина потом добавим в это множество вершину в 1
[02:21:57.120 --> 02:22:10.560]  потом вершину в 2 потом вершину в 3 и так далее в общем в каком-то порядке эти вершины все
[02:22:10.560 --> 02:22:25.760]  добавим и у нас появится мистическое утверждение вот мистическое утверждение о том что на самом
[02:22:25.760 --> 02:22:31.800]  деле когда у нас было вот было множество какой-то момент было множество а единственное что в нем
[02:22:31.800 --> 02:22:48.000]  не лежит это вершина в n-1 понимаете да так вот будет мистическое утверждение мин разрез между
[02:22:48.000 --> 02:23:16.680]  vn-2 и vn-1 это вот это вот такая ставка между двумя последними вершинами которые мы добавили
[02:23:17.160 --> 02:23:31.640]  нет это я просто сказал что нас ждет мы будем добавлять вершины в каком-то порядке но в каком-то
[02:23:31.640 --> 02:23:38.160]  порядке но мы будем давлять таким хитрым способом что окажется что вот если что минимальный разрез
[02:23:38.160 --> 02:23:44.640]  между двумя последними вершинами который последний добавили это разрез в котором в одну долю мы
[02:23:44.640 --> 02:23:55.120]  отправляем последнюю вершину а в остальную а в остальное все нет я утверждается только вот это
[02:23:55.120 --> 02:24:00.960]  что минимальный разрез между конкретными двумя вершинами это вот это поэтому дальше алгоритм
[02:24:00.960 --> 02:24:08.040]  чего нет все что я утверждаю буду утверждать это то что вот у меня есть две вершины и
[02:24:08.040 --> 02:24:17.400]  минимальный разрез между ними это вот это что конкретно но вот этот разрез в котором в одной
[02:24:17.400 --> 02:24:23.600]  доле vn-1 то есть последние добавленные вершина а в остальном все остальное а в другой доле
[02:24:23.600 --> 02:24:35.840]  все остальное последними двумя добавленными в n-2 и vn-1 вот ровно такой мы это будем точно знать
[02:24:35.840 --> 02:24:41.400]  потому что если мы это точно знаем ну потому что смотрите абстрактно так потому что вот
[02:24:41.400 --> 02:24:47.680]  предположим что у нас есть черный ящик какой-то да который говорит который каким-то нам образом
[02:24:47.680 --> 02:24:54.400]  сообщает так смотрите ребят вот есть вот эти две вершины вот эти вот разные дам так вот
[02:24:54.400 --> 02:25:00.040]  минимальный разрез между конкретно между ними это вот это то есть на самом деле мы утверждаем
[02:25:00.040 --> 02:25:10.000]  что всегда существует такая вершина которая минимальный разрез между ней между ней и и нет
[02:25:10.000 --> 02:25:18.120]  это ну нет мы утверждаю что существуют всегда две вершины такие что минимальный разрез между
[02:25:18.120 --> 02:25:25.880]  ними это разрез который отделяет одну из этих вершин от всех остальных да и то не правда да
[02:25:26.640 --> 02:25:34.760]  да да нет правда нет точно утверждение существуют две такие вершины минимальный разрез между
[02:25:34.760 --> 02:25:41.760]  которыми это разрез отделяющий одну из этих вершин от всего остального графа более того наш
[02:25:41.760 --> 02:25:48.320]  вот этот алгоритм то есть мы будем выбирать вершины таким образом чтобы их в явном виде найдем как это
[02:25:48.320 --> 02:25:53.440]  нам помогает ну давайте сразу глобально посмотрим то есть как я уже сказал то есть у нас есть какой-то
[02:25:53.440 --> 02:25:58.320]  черный ящик который мог говорить так вот вася вот петя вот миноразрез между ними
[02:25:58.320 --> 02:26:05.680]  какой вывод мы можем из этого сделать тогда у нас два варианта минимальный разрез тогда либо
[02:26:05.680 --> 02:26:12.200]  вот этот разрез либо какой-то из разрезов у кого в котором вася и петя железобетонно с одной
[02:26:12.200 --> 02:26:20.040]  стороны находится правда но тогда идея такая мы запомнили этот ответ сжали вася и петю в единое
[02:26:20.040 --> 02:26:28.680]  целое и повторили алгоритм еще раз грешки сказал нет это не во четвертый потому что мы этот
[02:26:28.680 --> 02:26:36.480]  черный ящик забегай вперед сделаем завод квадрат вот такова моя ставка не гадость
[02:26:36.480 --> 02:26:49.520]  алгоритм шторм вагдера не путать и никакой гадости нет то есть классный алгоритм да но это не будет
[02:26:49.520 --> 02:27:02.400]  кукарек ну ты знаешь ну да да да ну не знаю доказательный кукарек это как живой труп если
[02:27:02.400 --> 02:27:12.680]  честно а тут пока не понятно но с другой стороны я алгоритм не доказал то есть я еще не рассказал
[02:27:12.680 --> 02:27:19.640]  какие эти вешки беру так давайте так если у нас вот этот черный ящик внутри которого я эти вешки
[02:27:19.640 --> 02:27:30.240]  беру сработает понятно что мы делаем в остальном вот так вот и так переходим в черный ящик на черном
[02:27:30.240 --> 02:27:39.240]  ящике мы делаем следующее то есть смотрите так мы значит добавляем вершины в какой-то порядке но
[02:27:39.400 --> 02:27:47.280]  как я уже сказал вершина в 0 фокусник говорит нам что вершина в 0 абсолютно произвольная и это
[02:27:47.280 --> 02:27:59.040]  действительно так а вот остальные вершины выбираются по следующему принципу в и это это
[02:27:59.040 --> 02:28:17.000]  аргмакс значит от у и а этого мы еще и можем проверить является разрез минимальным за получается
[02:28:17.000 --> 02:28:25.920]  от но мы найдем по факту да мы найдем в разрезов и выберем с них минимальный так чтобы проверять ну
[02:28:25.920 --> 02:28:30.160]  каждый вычисляем его величину заве хотя на самом деле мы там по-другому ее вычислять
[02:28:30.160 --> 02:28:37.120]  будет но там ну плюс жатино оно же тоже за за от там сколько там в но как и будешь за от
[02:28:37.120 --> 02:28:46.840]  в плюс всем я кажется вы его сделаете вот так вот значит упире у должно лежать в без аи того где
[02:28:46.840 --> 02:28:55.440]  внимание аи-то это вот это вот объединение в 0 в 1 и так далее в и минус 1
[02:29:04.840 --> 02:29:14.080]  что-то подозрительно как я выбираю максимум пар спросите вы да ну дело в том что я забыл
[02:29:14.080 --> 02:29:33.040]  написать буковку да эта строчка тоже вызывает компилэшен эррор потому что что такое потому
[02:29:33.040 --> 02:29:39.720]  что да да мы можем поверить что в это вес но у нас в это вес ребра а ребро соединение не
[02:29:39.720 --> 02:29:50.040]  может соединять вершину и множество да но мы должны просто это сказать в явном виде то есть
[02:29:50.040 --> 02:29:55.360]  есть у меня есть какие-то то есть как бы если у меня есть вес и какое-то под множество б там
[02:29:55.360 --> 02:30:03.320]  б это вот под множество да то конечно же мы просто скажем что это сумма w от v и б там так сказать для
[02:30:03.320 --> 02:30:12.360]  всех б лежащих в б все более того аналогичным образом я могу и там w между б там множеством
[02:30:12.360 --> 02:30:21.240]  б и множеством ц объявить ровно тем же способом то есть просто сумма w от б ц где там б лежит в
[02:30:21.240 --> 02:30:29.640]  б ц лежит но это мне кажется просто это у нас будет достаточно удобно почему ракмакс по всем
[02:30:29.640 --> 02:30:39.320]  ю а ю не используется форма лиформы используется потому что я очепятался вот и на самом деле здесь
[02:30:39.320 --> 02:30:47.200]  надо писать у спасибо за вопрос вот это называет компилэшен и все остальное я бы сказал так и
[02:30:47.200 --> 02:30:57.240]  это тоже да вот отлично вот то есть вот такая штука то есть получается следующее нас каждом
[02:30:57.240 --> 02:31:02.960]  момент будет будет товаре то есть такое множество а мы будем смотреть на остальные вершины и
[02:31:02.960 --> 02:31:08.880]  смотреть и смотреть и находить вершину которая связана с множеством а точнее с тем что чем
[02:31:08.880 --> 02:31:18.520]  оно сейчас равно максимально сильно по именно сумме весов да но что максимально сильно можно
[02:31:18.520 --> 02:31:24.840]  но дабл я двух вершин это с это вес ребра между ними ну или 0 если такого ребра нет
[02:31:24.840 --> 02:31:36.400]  да можно считать что без особого не серьезности что граф полный чего да мы теперь то есть теперь
[02:31:36.400 --> 02:31:45.800]  это мы уже полностью описали алгоритм так не давайте сейчас ответим на более простой вопрос
[02:31:45.800 --> 02:31:57.280]  за костюм точку можем это реализовать тут как бы не наврать сейчас ну как и всегда
[02:31:57.280 --> 02:32:21.000]  один так кажется все можно кажется все за квадрат каким образом ну просто
[02:32:21.000 --> 02:32:34.760]  ну практически да можно делать отсылку просто на алгоритм дейкстр на самом деле
[02:32:34.760 --> 02:32:42.600]  да ну или так да ну как угодно всем сюда суть одна для каждой вершины мы эту сумму в явном
[02:32:42.600 --> 02:32:47.840]  виде поддерживаем когда но вершина добавляется множество а мы пробегаемся по всем ребрам из
[02:32:47.840 --> 02:32:56.960]  нее и обновляем даблы то есть принципе суммарно это работает за в квадрат плюс е вот когда при
[02:32:56.960 --> 02:33:01.360]  большом желании пожалуйста может то есть в принципе дай этот в куб можно реализовать в итоге за
[02:33:01.360 --> 02:33:12.240]  ве плюс в квадрат лог в если очень хочется ну на самом деле зачастую это лучше ну да причем
[02:33:12.840 --> 02:33:19.840]  да настолько сильно что конечно мы идем и пишем кучу фиба начи да ну тут уже зависит от того
[02:33:19.840 --> 02:33:26.680]  насколько нам это надо да и насколько константа куча фиба начи перевесит все плюсы да вот но
[02:33:26.680 --> 02:33:34.440]  суть одна но потому что суть в том что вы но суть то что вы все эти все все все вершины
[02:33:34.440 --> 02:33:39.480]  недобавленной ва будете хранить в куче на максимум по вот этому параметру и каждое
[02:33:39.480 --> 02:33:44.960]  прибавление тогда будет приводить вас к так сказать инкриски но инкриски на максимум то
[02:33:44.960 --> 02:33:49.440]  же самое как диприски на минимум то есть это это для того чтобы у вас это делалось за от единицы
[02:33:49.440 --> 02:33:58.960]  вот так что такая красота но теперь остается только действительно самое сладенькое самый ну то
[02:33:58.960 --> 02:34:06.360]  есть как алгоритм понятия на реализация понятно да то есть остается только вопрос почему заявленное
[02:34:06.360 --> 02:34:13.520]  мной утверждение вообще верно вот вообще имеет хоть какое-то отношение к этому происходящим
[02:34:13.520 --> 02:34:23.800]  вот честно говоря да в этом смысле очень было бы очень интересная конечно песня как это придумали
[02:34:23.800 --> 02:34:31.360]  но доказательства звучит так смотрите давайте я так скажу давайте для удобства скажу что с
[02:34:31.360 --> 02:34:41.840]  это у меня в н-2 и т у меня в н-1 вот мы хотим доказать что минимальный разрез между то есть
[02:34:41.840 --> 02:34:49.300]  хотим доказать что минимальный разрез между с и т это вот собственно т это так сказать в без
[02:34:49.300 --> 02:35:04.900]  ст и т вот это мы хотим показать да так вот пусть с это какой-то разрез
[02:35:04.900 --> 02:35:30.860]  между с и т вот вот такая вот радость а теперь смотрите значит делать так
[02:35:30.860 --> 02:35:37.700]  значит давайте я сейчас сделаю так сейчас я вот это я так мысленно провел черту между разрезом
[02:35:37.700 --> 02:35:54.700]  ц и пусть а вершины я буду записывать вот так сверху вниз в 0 в 1 в 2 в 3 упс в 4 и там вот
[02:35:54.700 --> 02:36:00.820]  пум пум и только вот в конце еще мы знаем с и в конце т сторона не принципиально там может
[02:36:00.820 --> 02:36:11.180]  быть с было здесь это было здесь но я вам просто заранее скажу это не сильно принципиально так
[02:36:11.180 --> 02:36:27.580]  вот теперь внимание неожиданное определение значит вершина вы критическая если v и минус
[02:36:27.580 --> 02:36:46.860]  1 и v и в разных долях c ну то есть переводи говоря мне интересует вершина вот это вот это вот это
[02:36:46.860 --> 02:36:52.620]  и вот это и сама вершина т кстати критическая ну даже не кстати а просто это нам очень важно
[02:36:52.620 --> 02:37:05.300]  нет мы не хотим мы не будем его лечить мы просто докажем что он не меньше чем то что нам надо
[02:37:05.300 --> 02:37:20.260]  но то что нам надо то что нам надо представляется как ты здесь все остальное здесь это нам в идеале
[02:37:20.260 --> 02:37:30.460]  так вот а теперь внимание ключевое утверждение ключевое утверждение мистическая совсем мистическая
[02:37:30.460 --> 02:37:43.180]  нет рано чтобы его ввести придется ввести еще одно определение пусть у меня c в это множество
[02:37:43.180 --> 02:38:06.860]  гребер нот гребер там каких-то там x игрок таких что x и игрок оба лежат в множестве давайте так
[02:38:06.860 --> 02:38:25.500]  с и т назовем его значит а и т объединенное свои там ну и все в принципе понятно нам
[02:38:25.500 --> 02:38:35.260]  вот ну то есть просто вот мы тут добавили дошли до этой вершины давайте посмотрим на вот разрез
[02:38:35.260 --> 02:38:44.220]  так вот по большому счету так вот мы сейчас будем доказывать мистическое утверждение если
[02:38:44.220 --> 02:38:59.460]  вершина в это критическая то я утверждаю что я утверждаю что вес этого разреза
[02:38:59.460 --> 02:39:10.620]  то есть вес этого цейтова то есть очевидно сумма этих ребер больше либо равно чем чем если бы
[02:39:10.620 --> 02:39:17.060]  я тупо среди нот посчитал сумму всех ребер из выитого ваи ты
[02:39:17.060 --> 02:39:31.780]  в ноль не критическая а ты критическая
[02:39:31.780 --> 02:39:46.180]  ну то есть так вот смотрите если вот это выитая то как бы но тот сейта это все ребра которые вот
[02:39:46.180 --> 02:39:55.980]  где-то здесь вот так теперь хочется сказать следующее что если мы докажем тут что по большому
[02:39:55.980 --> 02:40:04.540]  счету нам осталось доказать только это утверждение если мы поверим в него то мы победили почему потому
[02:40:04.540 --> 02:40:10.500]  что вершина т критическая а для вершины т как вот для вершины вн минус 1 на самом деле это
[02:40:10.500 --> 02:40:15.060]  утверждение ровно это и значит что вес этого разреза больше либо равен чем разреза между
[02:40:15.060 --> 02:40:31.820]  т и всем остальным да просто тут имейте ввиду что мы добавляли как бы вершины вершины вершины
[02:40:31.820 --> 02:40:37.900]  и вот тут смотрели ребра которые тут появляются среди этих вершин но когда мы дойдем до т равная
[02:40:37.900 --> 02:40:44.900]  вн минус 1 да то есть напомню что т у нас это вн минус 1 то тогда получается что вот это множество
[02:40:44.900 --> 02:41:00.380]  это тупо множество всех вершин вот а ой я наврал все-таки вот знал же я тут что-то должен забыть конечно
[02:41:00.380 --> 02:41:08.380]  что имеется ввиду не просто все ребра имеется ввиду все ребра разреза вот теперь логично да
[02:41:08.380 --> 02:41:23.700]  да но да да верно но бессмысленно для первого такого и что она перепрыгнула нет ну для первого
[02:41:23.700 --> 02:41:29.340]  неинтересно не для самого первого вот этого 4 доказать неинтересно потому что вот в таком
[02:41:29.340 --> 02:41:41.580]  виде на самом деле вот эти две величины тупо совпадают обратите внимание у нас вот вершины
[02:41:41.580 --> 02:41:52.060]  мы вот как-то упорядочили в том порядке в котором мы это когда мы а нет но сам ну нет это не вы это
[02:41:52.060 --> 02:41:58.300]  это вот надо вот самый первый раз когда мы нашли критическую вершину да то есть первый раз когда
[02:41:58.300 --> 02:42:04.340]  смена пошла то есть заметим что как бы ребра пересекающий разрез до этого момента и ребра
[02:42:04.340 --> 02:42:12.660]  соединяющие в 4 со всем остальным это ровно одни и те же ребра с одними и теми же весами поэтому как
[02:42:12.660 --> 02:42:17.780]  бы хуже но поэтому утверждение советов как вы уже догадались мы будем доказывать это утверждение
[02:42:17.780 --> 02:42:25.660]  по индукции для всех критических вершин в порядке их появления понятно да вот
[02:42:25.660 --> 02:42:33.420]  значит теперь делаем переход так ну ладно понятно лишь то как бы если мы доказали это
[02:42:33.420 --> 02:42:41.260]  утверждение то мы победили да ну потому что да мы берем просто все разрезы да не понятно почему
[02:42:41.260 --> 02:42:54.900]  по определению потому что мы говорим раз мы она потому что она не произвольна
[02:42:54.900 --> 02:43:03.540]  эсперит последняя эсперит последняя да вот да важный момент поэтому как бы да и более того
[02:43:03.540 --> 02:43:08.540]  то есть окажется что для этого разреза будет верно что сумма что вес этого разреза это больше
[02:43:09.500 --> 02:43:15.420]  если бы ты просто там посоединяли со всеми остальными но если мы поверим в это утверждение
[02:43:15.420 --> 02:43:20.340]  того будет критическое поэтому это будет так то есть поэтому все что нам остается
[02:43:20.340 --> 02:43:25.660]  это поверить в это утверждение но чтобы доказательно поверить в это утверждение
[02:43:25.660 --> 02:43:39.420]  чтобы доказательно поверить в это утверждение, оказываем
[02:43:39.420 --> 02:43:43.060]  по индукции, по появлению этих эти 4 крышек, база,
[02:43:43.060 --> 02:43:46.020]  как мы уже сказали, очевидна, теперь переход, жел был
[02:43:46.020 --> 02:43:51.620]  разрез, мы тут шли-шли-шли-шли, шли-шли-шли-шли, и вот мы
[02:43:51.620 --> 02:43:57.540]  наконец пришли в какую-то предыдущую вершину, в,
[02:43:57.540 --> 02:44:06.740]  там допустим, пт, да, и вот после этого шли-шли-шли
[02:44:06.740 --> 02:44:16.660]  по этой, нет, неправильно, тут у нас было впт, критическая
[02:44:16.660 --> 02:44:19.260]  вершина, потом шли-шли-шли, и мы тут неожиданно пришли
[02:44:19.260 --> 02:44:23.220]  в вq, и вп и вq это две последовательные вершины, предполагаем, что
[02:44:23.220 --> 02:44:39.380]  для вп, то есть как бы предположение индукции, что w от вп и ap оказалось
[02:44:39.380 --> 02:44:50.700]  меньше либо равно, чем w от чего, от c петтова, понимаете,
[02:44:50.700 --> 02:45:00.700]  да? Вот, понимаете? Вот. Нет, у нас индукция по этому
[02:45:00.700 --> 02:45:07.220]  индексу, да? Нет, не по количеству, то есть индукция такая,
[02:45:07.220 --> 02:45:09.140]  мы это утверждение хотим доказать для всех критических
[02:45:09.140 --> 02:45:12.180]  вершин, но мы это доказываем так, сначала для первой
[02:45:12.180 --> 02:45:15.180]  критической вершины, которая вообще появилась, потом
[02:45:15.180 --> 02:45:20.540]  для второй, потом для третьей и так далее. То есть, по сути,
[02:45:20.540 --> 02:45:23.780]  индукция по порядковому номеру критической вершины.
[02:45:23.780 --> 02:45:32.420]  А, у нас они идут сверху вниз как бы? Ну, это нет,
[02:45:32.420 --> 02:45:34.740]  я, нет, потому что я их так нарисовал, я их нарисовал
[02:45:34.740 --> 02:45:36.940]  сверху вниз в том порядке, в котором они появляются
[02:45:37.020 --> 02:45:40.420]  в множестве a. То есть, напоминаю, это не рандомный порядок
[02:45:40.420 --> 02:45:43.620]  вершин, это рандомная только v0, а все остальное, каждое
[02:45:43.620 --> 02:45:46.940]  следующее, определяется жестко. Ну, единственное
[02:45:46.940 --> 02:45:49.180]  только не жесткое, что если максимумов несколько,
[02:45:49.180 --> 02:45:54.660]  выбираете любой. Естественно. Вот. Так вот, поехали. Предположение
[02:45:54.660 --> 02:45:57.140]  индукции, что вот мы дошли до вершины p критической,
[02:45:57.140 --> 02:46:00.060]  все хорошо, после нее мы шли, шли, шли, шли и бах, нашлась
[02:46:00.060 --> 02:46:05.900]  следующая критическая вершина vq. Хотим? То есть, давайте
[02:46:05.900 --> 02:46:17.820]  так и напишем. Хотим wq и aq меньше либо равно wcq. Тогда что?
[02:46:17.820 --> 02:46:24.740]  Значит, давайте это доказывать. Тогда смотрите, а что такое
[02:46:24.740 --> 02:46:32.220]  wcq? Это вообще, заметим, что, то есть, какие ребра вот
[02:46:32.460 --> 02:46:42.460]  выше этих лежат? Ну, во-первых, это все ребра в cp, согласны?
[02:46:42.460 --> 02:46:55.460]  Во-вторых, это ребра, соединяющие wq и все остальные, да? И aq. Ну,
[02:46:55.700 --> 02:47:02.700]  все вот эти вот. Так, так, так, так, так, так, так, так,
[02:47:02.700 --> 02:47:09.700]  так, так, так, так. Там пересеченная, так сказать, с другой долей.
[02:47:09.700 --> 02:47:11.420]  Ну, давайте, ладно, давайте без ограничений общности
[02:47:11.420 --> 02:47:17.660]  будем считать, что эта доля левая, а эта правая. Ну,
[02:47:17.660 --> 02:47:19.500]  без ограничений общности, да. То есть, левая которая
[02:47:19.500 --> 02:47:28.980]  свеку, а правая свп, да? Ну, вот. Ну, то есть, это у нас
[02:47:28.980 --> 02:47:35.740]  действительно будет aq с, там, пересеченная с, действительно,
[02:47:35.740 --> 02:47:44.980]  райтом, да? Плюс что? Плюс, ну, вот эти вот новые вершины
[02:47:44.980 --> 02:47:49.860]  с райта и пересеченные. Ну, то есть, w из фактически
[02:47:49.860 --> 02:47:58.100]  a, вот я так скажу, ap. Ой, не ap. Почему ap? Ap. И с множеством
[02:47:59.100 --> 02:48:05.100]  в п, в п плюс один. Нет, опять не в п, а левт от ap. Хорошо,
[02:48:05.100 --> 02:48:12.100]  да. Так. Или это не влияет? Сейчас. Если я нигде не набажил.
[02:48:12.100 --> 02:48:17.100]  Хотя, ну, вот. Нет, ну, почему? Это должно влиять, по идее.
[02:48:17.100 --> 02:48:27.100]  Так, левт, да? Так ap пересеченная с левтом. И, значит, множество
[02:48:27.100 --> 02:48:42.100]  вот это вот, в п, в п плюс один, в у минус один. Вот. Кого учли?
[02:48:42.100 --> 02:48:52.100]  Да, хорошо. Да, правильно. Совершенно верно. Так, отлично.
[02:48:52.100 --> 02:49:02.100]  Так, ну, давайте теперь пытаться это как-то оценивать. Вот.
[02:49:02.100 --> 02:49:12.100]  Вот. Ну, заметим на самом деле следующее. На самом деле, так, начнем
[02:49:12.100 --> 02:49:19.100]  с простого. Начнем с того, что сократим вот это. И да, я не ошибся в интонационном
[02:49:19.100 --> 02:49:28.100]  ударении. Или, ну, да. Ну, вот эти вот ребра я просто проигнорирую.
[02:49:28.100 --> 02:49:34.100]  То есть я просто напишу, что это больше либо равно v от cp, плюс w от vq.
[02:49:34.100 --> 02:49:41.100]  Нет, я еще пока ее не бахаю. Я просто говорю, что я просто убрал личное,
[02:49:41.100 --> 02:49:46.100]  потому что оно не отрицательное. Здесь важный момент. Здесь мы пользуемся тем,
[02:49:46.100 --> 02:49:53.100]  что у нас веса ребер не отрицательные. Далее. Это, ну вот, это больше либо равно.
[02:49:53.100 --> 02:49:59.100]  А вот теперь мы бахаем предположение индукции и говорим, что это v от ap,
[02:49:59.100 --> 02:50:13.100]  plus, значит, v от vq, значит, aq, и right.
[02:50:13.100 --> 02:50:22.100]  Где? Нет, w просто функция w, это вес просто ребер между двумя множествами.
[02:50:22.100 --> 02:50:26.100]  Другой вопрос, что, да, конкретно здесь мы следим, что эти все ребра пересекают
[02:50:26.100 --> 02:50:32.100]  разрезы, естественно. Ну, у нас просто так получается. То есть, как видите,
[02:50:32.100 --> 02:50:37.100]  я здесь соединяю vq с ребрами и вершинами какими-то предыдущими, но при этом лежащими в правой доле.
[02:50:37.100 --> 02:50:43.100]  Просто я сейчас задумался, наверное, насчет того, не можем ли мы сказать, что w от…
[02:50:43.100 --> 02:50:49.100]  Ну, если уж такое обозначение w, то, вероятно, не можем, но можно было бы, наверное,
[02:50:49.100 --> 02:50:56.100]  сказать, что w от vq и aq пересечь с right – это то же самое, что w от vq aq, если бы это были ребры…
[02:50:56.100 --> 02:51:01.100]  Нет, это не то, да. Но это не ребры. Ну, не-не-не, лучше не надо так определять,
[02:51:01.100 --> 02:51:05.100]  потому что дело в том, что мы же ввели вот эту штуку, еще когда алгоритм определяли,
[02:51:05.100 --> 02:51:10.100]  никакого разреза c какого-то произвольного у нас еще не было. Поэтому лучше не надо так делать.
[02:51:10.100 --> 02:51:16.100]  Вот. А теперь смотрите. Здесь мы воспользуемся предположением индукции.
[02:51:16.100 --> 02:51:25.100]  Предположением. Тут не отрицательность. Трицательность.
[02:51:25.100 --> 02:51:38.100]  Вот. Тот предположение индукции. А теперь мы, наконец, воспользуемся структурой по построениям алгоритма.
[02:51:38.100 --> 02:51:50.100]  Мы им воспользуемся, чтобы сказать, что w от vq и aq больше либо равно, чем w от vq и aq.
[02:51:51.100 --> 02:52:01.100]  Плюс vq и, соответственно, aq, пересеченное с right.
[02:52:09.100 --> 02:52:15.100]  Я утверждаю, что это теперь просто больше либо равно, чем w от vq и aq.
[02:52:21.100 --> 02:52:28.100]  Давайте подумаем. А что это за вершины, которые находятся здесь и здесь?
[02:52:28.100 --> 02:52:35.100]  Я утверждаю, что это в точности все вершины выше wq.
[02:52:37.100 --> 02:52:41.100]  На самом деле да, потому что... Давайте внимательно посмотрим.
[02:52:41.100 --> 02:52:51.100]  Ну да, по модулю того, что некоторые из этих вершин будут учтены по два раза.
[02:52:51.100 --> 02:52:59.100]  В силу неотрицательности ребер мы пишем тут больше либо равно.
[02:52:59.100 --> 02:53:09.100]  Смотрите. Что это за вес? Мы соединяем wq с вершинами ap, а также с вершинами aq, но которые справа.
[02:53:13.100 --> 02:53:17.100]  Я просто не вижу, что изменилось между последней строкой и той, которая выше.
[02:53:17.100 --> 02:53:21.100]  Вот тут p, а тут q. Давайте пожирнее.
[02:53:23.100 --> 02:53:26.100]  Тут p, тут q. Вот что поменялось.
[02:53:27.100 --> 02:53:34.100]  Итак, получается мы эту wq пытаемся соединить с ap и пытаемся соединить с вот этим вот.
[02:53:42.100 --> 02:53:44.100]  А там в конце неравенство?
[02:53:44.100 --> 02:53:52.100]  Нет, это неравенство почему? Потому что в ap есть также и вершины правой доли.
[02:53:52.100 --> 02:53:58.100]  То есть все вершины выше wq из правой доли, они повторяются.
[02:53:58.100 --> 02:54:03.100]  Но самое для нас главное, что все эти вершины покрыты, а других нет.
[02:54:03.100 --> 02:54:06.100]  Поэтому мы с чистой совестью пишем больше либо равно.
[02:54:09.100 --> 02:54:15.100]  Очень просто. Давайте вспомним, как wq оказалось на этом месте?
[02:54:16.100 --> 02:54:19.100]  У нас здесь по предположению…
[02:54:19.100 --> 02:54:23.100]  Нет, у нас алгоритм был устроен так. В какой-то момент множество a было в этом состоянии.
[02:54:23.100 --> 02:54:25.100]  Первый ap и вершины добавили.
[02:54:25.100 --> 02:54:31.100]  Мы искали такую вершину, чтобы вот это w было максимальным.
[02:54:33.100 --> 02:54:36.100]  Это оказалось ap, видимо.
[02:54:36.100 --> 02:54:42.100]  Следовательно, это… Но так как q было добавлено позже, то она тоже участвовала в этом.
[02:54:42.100 --> 02:54:44.100]  Следовательно.
[02:54:46.100 --> 02:54:48.100]  Так что вот такая красота.
[02:54:48.100 --> 02:54:51.100]  То есть такая вот вредная, жадная красота.
[02:54:52.100 --> 02:54:55.100]  К сожалению, не очень понятно, как это придумали.
[02:54:57.100 --> 02:54:59.100]  Нет, ну догадки есть.
[02:55:09.100 --> 02:55:13.100]  Нет, не любой, потому что бывают неверные кукарики.
[02:55:13.100 --> 02:55:17.100]  Да, бывают, конечно, недоказуемые кукарики.
[02:55:22.100 --> 02:55:25.100]  Ну да, хорошо мы поняли, что у нас вот этот разрез-то минимальный.
[02:55:25.100 --> 02:55:27.100]  А дальше можно еще раз…
[02:55:32.100 --> 02:55:33.100]  Да, отлично.
[02:55:33.100 --> 02:55:34.100]  Теперь тогда у вас…
[02:55:34.100 --> 02:55:37.100]  Тогда если возвращаться к глобальной задаче, то у вас два варианта.
[02:55:37.100 --> 02:55:39.100]  Тогда ответ.
[02:55:39.100 --> 02:55:41.100]  Либо который разделяет s и t.
[02:55:41.100 --> 02:55:43.100]  И это вот он.
[02:55:43.100 --> 02:55:49.100]  Либо разрез, в котором s и t железно лежат в одной доле.
[02:55:49.100 --> 02:55:52.100]  Тогда как такие… Первый разрез мы научились находить.
[02:55:52.100 --> 02:55:54.100]  А второй делаем очень просто.
[02:55:54.100 --> 02:55:57.100]  Мы объединяем, сжимаем s и t в одну вершину.
[02:55:58.100 --> 02:56:00.100]  Просто там объединяем ребра.
[02:56:00.100 --> 02:56:03.100]  Если образовались какие-нибудь кратные, может быть, мы их даже там тоже объединяем.
[02:56:03.100 --> 02:56:05.100]  А можно не объедеть, неважно.
[02:56:05.100 --> 02:56:10.100]  И на оставшем графе из n-1 вершины и сколько там ребр повторяем этот алгоритм.
[02:56:11.100 --> 02:56:15.100]  И так делаем до тех пор, пока у нас там не останется вообще одна вершина.
[02:56:17.100 --> 02:56:19.100]  То есть теперь интерация одного этого же…
[02:56:19.100 --> 02:56:20.100]  Да.
[02:56:20.100 --> 02:56:21.100]  Ну n-1 даже.
[02:56:21.100 --> 02:56:23.100]  Интерация вот этого вот.
[02:56:25.100 --> 02:56:28.100]  Но это кохивая декстра работает за квадрат.
[02:56:28.100 --> 02:56:29.100]  Поэтому суммарная кубка.
[02:56:29.100 --> 02:56:30.100]  Да.
[02:56:31.100 --> 02:56:33.100]  Так что вот такая красота.
[02:56:33.100 --> 02:56:37.100]  Мы там говорили, что на самом деле w e плюс w квадрат 2 w e.
[02:56:37.100 --> 02:56:40.100]  А просто как вы этот максимум будете находить?
[02:56:40.100 --> 02:56:41.100]  То есть по факту идея такая.
[02:56:41.100 --> 02:56:46.100]  Давайте для каждой вершинки вы будете вот эту текущую сумму хранить.
[02:56:46.100 --> 02:56:50.100]  И когда у вас новая вершинка будет добавляться в множество a, вы будете релаксировать как бы.
[02:56:52.100 --> 02:56:53.100]  Придется…
[02:56:53.100 --> 02:56:54.100]  Да.
[02:56:55.100 --> 02:56:56.100]  Ну это неважно.
[02:56:56.100 --> 02:56:57.100]  Релаксация…
[02:56:57.100 --> 02:56:59.100]  Ну суммарно мы будем релаксировать по е-ребрам.
[02:57:01.100 --> 02:57:05.100]  Остается только сделать так, чтобы вы в раз доставали…
[02:57:05.100 --> 02:57:07.100]  Надо в раз доставать максимум.
[02:57:08.100 --> 02:57:09.100]  И чтобы он доставал…
[02:57:09.100 --> 02:57:10.100]  И тогда идея такая.
[02:57:10.100 --> 02:57:14.100]  Давайте все это хранить в куче фибоначчи на максимум.
[02:57:14.100 --> 02:57:15.100]  Окей.
[02:57:15.100 --> 02:57:16.100]  Ну вот.
[02:57:16.100 --> 02:57:19.100]  Так как веса ребер не отрицательная, еще раз этим пользуемся.
[02:57:20.100 --> 02:57:25.100]  То как бы в данном случае тогда эта релаксация будет за 1.
[02:57:26.100 --> 02:57:27.100]  Вот.
[02:57:28.100 --> 02:57:29.100]  Вот.
[02:57:31.100 --> 02:57:33.100]  Но у нас остался неожиданный финал.
[02:57:34.100 --> 02:57:35.100]  Вот.
[02:57:35.100 --> 02:57:36.100]  Значит смотрите.
[02:57:36.100 --> 02:57:39.100]  Какую последнюю тему хочется теперь рассмотреть?
[02:57:40.100 --> 02:57:41.100]  Нет.
[02:57:41.100 --> 02:57:42.100]  Все.
[02:57:42.100 --> 02:57:43.100]  Последнюю тему на потоках.
[02:57:43.100 --> 02:57:44.100]  Ужин.
[02:57:45.100 --> 02:57:46.100]  Ужин.
[02:57:46.100 --> 02:57:47.100]  Ужин нам не нужен.
[02:57:48.100 --> 02:57:49.100]  Вот.
[02:57:49.100 --> 02:57:50.100]  Нет.
[02:57:50.100 --> 02:57:51.100]  Какая геометрия?
[02:57:51.100 --> 02:57:52.100]  Нет.
[02:57:52.100 --> 02:57:53.100]  Потому что мы теперь копнем дальше.
[02:57:53.100 --> 02:57:54.100]  Это…
[02:57:55.100 --> 02:57:56.100]  Нет.
[02:57:56.100 --> 02:57:57.100]  Фишка так…
[02:57:59.100 --> 02:58:02.100]  Это тот самый алгоритм, который ищет крочейшее расстояние
[02:58:02.100 --> 02:58:03.100]  СВ плюс Е.
[02:58:03.100 --> 02:58:04.100]  Ой.
[02:58:04.100 --> 02:58:05.100]  Там расстрел тут еще.
[02:58:05.100 --> 02:58:06.100]  Да.
[02:58:06.100 --> 02:58:07.100]  Но.
[02:58:07.100 --> 02:58:08.100]  Вот.
[02:58:08.100 --> 02:58:09.100]  Не надо.
[02:58:09.100 --> 02:58:10.100]  Это как бы…
[02:58:10.100 --> 02:58:13.100]  Осталось куча времени до 18.30.
[02:58:13.100 --> 02:58:14.100]  Ну вот.
[02:58:14.100 --> 02:58:15.100]  Следующего дня.
[02:58:15.100 --> 02:58:16.100]  О кучаса.
[02:58:16.100 --> 02:58:17.100]  Да.
[02:58:17.100 --> 02:58:18.100]  Не-не-не-не.
[02:58:18.100 --> 02:58:19.100]  Там…
[02:58:19.100 --> 02:58:20.100]  Ну давайте так.
[02:58:20.100 --> 02:58:22.100]  Я сейчас начну, о чем мы будем говорить.
[02:58:22.100 --> 02:58:24.100]  Потом, видимо, выдохнуть там все-таки придется перед
[02:58:24.100 --> 02:58:25.100]  таким финальным запуском.
[02:58:25.100 --> 02:58:26.100]  И после этого мы…
[02:58:26.100 --> 02:58:27.100]  Два.
[02:58:27.100 --> 02:58:28.100]  Да.
[02:58:28.100 --> 02:58:29.100]  Я знаю.
[02:58:29.100 --> 02:58:30.100]  Но смотрите.
[02:58:30.100 --> 02:58:31.100]  Но сейчас…
[02:58:31.100 --> 02:58:33.100]  Но я думаю, мне хватит максимум 10 минут для того, чтобы
[02:58:33.100 --> 02:58:36.100]  описать, о чем мы ищем сейчас будет.
[02:58:36.100 --> 02:58:38.100]  Потому что, смотрите, фишка будет…
[02:58:38.100 --> 02:58:40.100]  Фишка будет сейчас достаточно эпическая.
[02:58:40.100 --> 02:58:42.100]  Значит, фишка будет такая.
[02:58:42.100 --> 02:58:44.100]  Потому что нас сейчас будет интересовать…
[02:58:44.100 --> 02:58:45.100]  Вот хорошо.
[02:58:45.100 --> 02:58:48.100]  Мы научились находить хоть какой-нибудь минимальный
[02:58:48.100 --> 02:58:49.100]  разрез.
[02:58:49.100 --> 02:58:50.100]  Так вот.
[02:58:50.100 --> 02:58:51.100]  Теперь у нас будет такая задача.
[02:58:51.100 --> 02:58:56.100]  А теперь я хочу отвечать на запросы.
[02:58:56.100 --> 02:58:57.100]  В духе.
[02:58:57.100 --> 02:58:59.100]  Данные две вершины.
[02:58:59.100 --> 02:59:05.100]  Дайте мне, пожалуйста, минимальный разрез между ними.
[02:59:05.100 --> 02:59:06.100]  Вот прям настолько хочу.
[02:59:06.100 --> 02:59:09.100]  Там дерево какое-то.
[02:59:09.100 --> 02:59:10.100]  Да.
[02:59:10.100 --> 02:59:11.100]  Так вот.
[02:59:11.100 --> 02:59:14.100]  И сейчас будет мистическая теория, мы сразу.
[02:59:14.100 --> 02:59:16.100]  Мистическая, но простая, как выясняется.
[02:59:16.100 --> 02:59:20.100]  То есть понятно, что в квадрат разрезов, понятно, что их
[02:59:20.100 --> 02:59:23.100]  можно описать за у от в, суммарно в куб.
[02:59:23.100 --> 02:59:26.100]  Но оказывается, я эти разрезы могу описать гораздо короче.
[02:59:26.100 --> 02:59:30.100]  Вот у меня есть тут какой-то мерзкий граф, который там
[02:59:30.100 --> 02:59:31.100]  как-то устроен.
[02:59:31.100 --> 02:59:32.100]  Бла-бла-бла-бла.
[02:59:32.100 --> 02:59:33.100]  Так вот.
[02:59:33.100 --> 02:59:36.100]  Как устроены разрезы.
[02:59:36.100 --> 02:59:37.100]  Так вот.
[02:59:37.100 --> 02:59:38.100]  Идея такая.
[02:59:38.100 --> 02:59:42.100]  Оказывается, существует дерево на тех же самых вершинах
[02:59:42.100 --> 02:59:43.100]  с какими-то весами.
[02:59:43.100 --> 02:59:51.100]  Надо просто взять какое-то дерево и заявить, что минимальный
[02:59:51.100 --> 02:59:54.100]  разрез между, скажем, вот этой вершиной и вот этой
[02:59:54.100 --> 02:59:55.100]  вершиной.
[02:59:55.100 --> 03:00:00.420]  Это просто вот давайте прогуляемся, просто по сути минимальный разрез вот в этом дереве.
[03:00:01.220 --> 03:00:03.220]  А что такое минимальный разрез в этом дереве?
[03:00:03.860 --> 03:00:06.660]  Просто прогуляемся по пути и найдем минимум.
[03:00:07.700 --> 03:00:09.220]  Тут начинается...
[03:00:10.220 --> 03:00:13.460]  Начинается вопрос, а сфигали, простите?
[03:00:14.540 --> 03:00:16.340]  Абсолютно правомерно сфигали.
[03:00:17.660 --> 03:00:18.160]  Вот.
[03:00:18.580 --> 03:00:19.340]  Но тем, значит...
[03:00:19.940 --> 03:00:20.440]  Ну вот.
[03:00:20.440 --> 03:00:23.100]  Какая-то вопрос больше насчет того, как мы на это дерево строим.
[03:00:23.700 --> 03:00:24.900]  Так, нет, погодите.
[03:00:24.940 --> 03:00:27.420]  Для начала, почему оно существует, почему это дерево?
[03:00:27.420 --> 03:00:34.140]  И мы с этого и начнем, потому что, как это ни странно, очень просто ответить на вопрос, почему оно существует.
[03:00:35.900 --> 03:00:37.420]  Смотрите, просто сейчас фантастика будет.
[03:00:38.220 --> 03:00:39.300]  Потому что идея такая...
[03:00:39.300 --> 03:00:41.300]  Да, ну просто в случае чего делаем ежати...
[03:00:41.300 --> 03:00:42.140]  Тихо-тихо-тихо-тихо-тихо.
[03:00:42.140 --> 03:00:42.900]  Кого?
[03:00:44.460 --> 03:00:46.780]  Господи, еж это да, шедевр.
[03:00:47.780 --> 03:00:50.340]  Сейчас еж, это в какой-то игре, это как вот это...
[03:00:50.620 --> 03:00:53.940]  А, это в шахматах вот это вот, построение пешками, да, вот это, да.
[03:00:55.300 --> 03:00:55.800]  Вот.
[03:00:56.860 --> 03:00:57.660]  Да, наверно.
[03:00:58.660 --> 03:01:00.260]  Соник играет в шахматы, ух-та.
[03:01:00.620 --> 03:01:01.120]  Вот.
[03:01:01.420 --> 03:01:01.920]  Так вот.
[03:01:02.220 --> 03:01:02.900]  Значит, внимание.
[03:01:02.900 --> 03:01:04.020]  Значит, идея очень простая.
[03:01:04.620 --> 03:01:07.180]  Во-первых, давайте введем понятие F, от...
[03:01:07.180 --> 03:01:11.940]  ФУВ, это, понятно, что стоимость...
[03:01:13.900 --> 03:01:14.780]  Мин разреза.
[03:01:16.340 --> 03:01:17.580]  Мин разреза...
[03:01:19.460 --> 03:01:20.860]  Между У и В.
[03:01:23.580 --> 03:01:24.860]  У и В.
[03:01:24.900 --> 03:01:25.900]  У и В.
[03:01:31.300 --> 03:01:32.220]  Начнем с мист...
[03:01:32.220 --> 03:01:34.220]  Значит, мистическое утверждение.
[03:01:37.580 --> 03:01:45.660]  F, от УВ больше либо равно минимума, чем из F, от УВ и F, ВВ.
[03:01:45.660 --> 03:01:47.660]  Для абсолютно любого В.
[03:01:54.900 --> 03:01:56.900]  Либо в одно идут то, или в другое.
[03:01:56.900 --> 03:01:57.900]  Ну, логично, да?
[03:01:58.300 --> 03:02:02.220]  То есть, как бы, логично, рассмотрим разрезы У и В, и они делятся на два типа.
[03:02:02.220 --> 03:02:06.700]  Где W окажется в доле В, и где W окажется в доле У, правда?
[03:02:07.700 --> 03:02:12.900]  И каждый из этих разрезов участвует в чемпионате на разрез там либо вот этой, либо вот этой.
[03:02:13.700 --> 03:02:15.700]  Ну, отсюда, в общем-то, утверждение следует.
[03:02:15.700 --> 03:02:16.200]  Сейчас.
[03:02:18.300 --> 03:02:18.800]  Чего?
[03:02:19.700 --> 03:02:20.700]  Ну, я не знаю.
[03:02:20.700 --> 03:02:21.700]  Ну, я не знаю.
[03:02:21.700 --> 03:02:22.700]  Ну, я не знаю.
[03:02:22.700 --> 03:02:24.700]  Ну, я не знаю.
[03:02:25.500 --> 03:02:26.500]  Да, минимум.
[03:02:26.500 --> 03:02:27.500]  Именно минимум.
[03:02:27.500 --> 03:02:28.500]  Это важно.
[03:02:28.500 --> 03:02:29.500]  Так, стоп.
[03:02:30.500 --> 03:02:31.500]  Как скажешь?
[03:02:35.500 --> 03:02:36.500]  А, нет, стоп.
[03:02:36.500 --> 03:02:37.500]  Что есть?
[03:02:37.500 --> 03:02:38.500]  Сейчас.
[03:02:39.500 --> 03:02:42.500]  То есть, мы говорили, что либо У отделено от W?
[03:02:43.500 --> 03:02:48.980]  Либо этот разрез отделяет У от W, и тогда получается, что этот разрез, он значит
[03:02:48.980 --> 03:02:51.500]  больше либо равен, чем минимальный разрез между У и В.
[03:02:51.500 --> 03:02:52.500]  Да.
[03:02:52.500 --> 03:02:55.380]  Либо этот разрез разделяет W и В, и тогда этот разрез
[03:02:55.380 --> 03:02:58.500]  больше либо равен, чем минимальный разрез между W и В.
[03:02:58.500 --> 03:03:00.500]  А у нас тоже, кстати, будут ребра?
[03:03:00.500 --> 03:03:01.500]  Нет.
[03:03:01.500 --> 03:03:02.500]  У нас тоже ребра.
[03:03:02.500 --> 03:03:04.500]  Да, у нас везде ребра не отрицательные.
[03:03:04.500 --> 03:03:05.500]  Да.
[03:03:05.500 --> 03:03:06.500]  Ника, и все.
[03:03:06.500 --> 03:03:07.500]  Вот, да, это важно.
[03:03:07.500 --> 03:03:10.900]  Почему-то в этой науке как-то с отрицательными ребрами
[03:03:10.900 --> 03:03:11.900]  работа почему-то…
[03:03:11.900 --> 03:03:12.900]  Не задавалась.
[03:03:12.900 --> 03:03:13.900]  Да.
[03:03:13.900 --> 03:03:14.900]  Да, так лучше.
[03:03:16.900 --> 03:03:19.900]  То есть, вот такое утверждение мистическое.
[03:03:20.300 --> 03:03:24.540]  В принципе, отсюда можно вывести на самом деле более
[03:03:24.540 --> 03:03:25.540]  крутую обстановку.
[03:03:29.540 --> 03:03:38.540]  W1, W1, W2, W2, W3, и так далее, Wk-1, V.
[03:03:44.540 --> 03:03:45.540]  В F собираем?
[03:03:45.540 --> 03:03:46.540]  Да.
[03:03:48.540 --> 03:03:49.540]  Да.
[03:03:50.540 --> 03:03:55.540]  Ну, прямое следствие, да?
[03:03:55.540 --> 03:04:01.040]  Ну, я тут, ну, подставлять просто могу.
[03:04:01.040 --> 03:04:03.840]  То есть, каждую F, каждую следующую я заменяю на как-бы
[03:04:03.840 --> 03:04:06.540]  минимум из вот этой F и как-бы следующей.
[03:04:20.540 --> 03:04:25.540]  Ну, вроде похоже.
[03:04:25.540 --> 03:04:28.540]  Вроде похоже, да?
[03:04:28.540 --> 03:04:29.540]  Отлично.
[03:04:29.540 --> 03:04:33.540]  Ну, тогда смотрите, какая же турна.
[03:04:33.540 --> 03:04:35.540]  Значит, как вы этим воспользуетесь?
[03:04:35.540 --> 03:04:37.540]  Весьма неожиданно.
[03:04:37.540 --> 03:04:42.540]  Давайте мысленно создадим матрицу вот этих вот минразрезов.
[03:04:42.540 --> 03:04:45.540]  Ну, формально это у вас там записывается, когда
[03:04:46.180 --> 03:04:49.180]  вот так вот.
[03:04:49.180 --> 03:04:52.180]  Ну, понятно, что, естественно, там на диагонали стоят,
[03:04:52.180 --> 03:04:53.180]  что там стоит.
[03:04:53.180 --> 03:04:58.180]  Ну, видимо, нули или плюс бесконечности.
[03:04:58.180 --> 03:04:59.180]  Вот.
[03:04:59.180 --> 03:05:02.180]  Так вот.
[03:05:02.180 --> 03:05:07.180]  Сейчас будет такая неожиданная идея.
[03:05:07.180 --> 03:05:11.180]  А давайте найдем в этом, то есть F можно воспринимать
[03:05:11.180 --> 03:05:15.180]  как матрицу смежности какого-то графа, да?
[03:05:15.820 --> 03:05:17.820]  Можно.
[03:05:17.820 --> 03:05:19.820]  То есть давайте так теперь введем.
[03:05:19.820 --> 03:05:26.820]  ГР это граф с матрицей смежности.
[03:05:32.820 --> 03:05:35.820]  А теперь возьмем минус 100 этого графа.
[03:05:35.820 --> 03:05:37.820]  Или там что-нибудь.
[03:05:37.820 --> 03:05:39.820]  Почему минус 100?
[03:05:39.820 --> 03:05:41.820]  Ну, захотелось.
[03:05:41.820 --> 03:05:44.820]  А почему именно мин?
[03:05:45.460 --> 03:05:46.460]  А что?
[03:05:46.460 --> 03:05:47.460]  Макс.
[03:05:47.460 --> 03:05:48.460]  На самом деле, да.
[03:05:48.460 --> 03:05:55.460]  Так вот, пусть T это Макс Астов ГР.
[03:06:02.460 --> 03:06:06.460]  Не, я, честно, это первый раз слушаю, но там Астов просился.
[03:06:06.460 --> 03:06:09.460]  Ну, хотим же дерево получить, типа.
[03:06:09.460 --> 03:06:10.460]  Логично.
[03:06:10.460 --> 03:06:14.460]  Так вот, это, так вот, утверждение, внимание, утверждение.
[03:06:15.100 --> 03:06:16.100]  Это оно.
[03:06:16.100 --> 03:06:19.100]  Ну, вот остается понять почему.
[03:06:19.100 --> 03:06:20.100]  Смотрите.
[03:06:20.100 --> 03:06:25.100]  Вот, допустим, T это вот это вот дерево, да?
[03:06:25.100 --> 03:06:28.400]  Вот, я тут рассматриваю вершины УВ, и тут у меня
[03:06:28.400 --> 03:06:31.400]  еще какие-то вершины АВС, да?
[03:06:31.400 --> 03:06:34.400]  Ну, там неважно, сколько вершин на пути, да?
[03:06:34.400 --> 03:06:37.400]  И понятно, вес этих ребер, какой тут?
[03:06:37.400 --> 03:06:42.400]  F от УА, F от АВ, F от ВС, F от ЦВ, да?
[03:06:43.340 --> 03:06:45.340]  Ну, что нам, по сути, надо показать?
[03:06:45.340 --> 03:06:49.340]  То есть, хотим, по большому счету, показать, что Минразрез
[03:06:49.340 --> 03:06:53.340]  между УВ это в точности минимум между вот этими штуками,
[03:06:53.340 --> 03:06:54.340]  да?
[03:06:54.340 --> 03:06:59.840]  То есть, F от УВ больше, то есть, он в точности равен
[03:06:59.840 --> 03:07:01.840]  минимума из чего?
[03:07:01.840 --> 03:07:10.840]  F от, значит, УА, F от АВ, F от ВС, F от ЦВ.
[03:07:11.280 --> 03:07:14.280]  Ну, а теперь заметим следующее.
[03:07:14.280 --> 03:07:17.280]  Ну, чтобы доказать равенство, надо доказать, что оно больше
[03:07:17.280 --> 03:07:20.280]  либо равно и что оно меньше либо равно.
[03:07:20.280 --> 03:07:25.280]  Больше либо равно, ну, видно, да?
[03:07:25.280 --> 03:07:30.280]  То есть, просто я вот отсылаю вот сюда.
[03:07:30.280 --> 03:07:37.280]  А как доказать, что меньше либо равно?
[03:07:37.720 --> 03:07:40.720]  Ну, оно меньше либо равно каждому должно быть.
[03:07:40.720 --> 03:07:42.720]  Ну, оно меньше либо равно каждому.
[03:07:42.720 --> 03:07:43.720]  Почему?
[03:07:43.720 --> 03:07:47.020]  А потому что отсылка к данному заданию в прошлом
[03:07:47.020 --> 03:07:48.020]  семестре.
[03:07:48.020 --> 03:07:50.020]  Вспомнить бы формулировку еще.
[03:07:50.020 --> 03:07:52.020]  А формулировка там была такая.
[03:07:52.020 --> 03:07:55.020]  В миностове, вот, допустим, это миностов, да?
[03:07:55.020 --> 03:07:58.020]  Тогда оказывалось, что если вы добавите сюда ребро,
[03:07:58.020 --> 03:08:00.020]  вот возьмете какое-нибудь ребро, не изостово, то оно
[03:08:00.020 --> 03:08:03.020]  должно быть больше либо равно, чем все, что здесь.
[03:08:03.020 --> 03:08:06.020]  Потому что иначе это просто не миностов, да?
[03:08:06.020 --> 03:08:09.020]  То есть, здесь для maxostova то же самое, только с другой
[03:08:09.020 --> 03:08:10.020]  стороной.
[03:08:10.020 --> 03:08:11.020]  Понятно.
[03:08:11.020 --> 03:08:17.020]  То есть, как бы здесь отсылка к утверждению, здесь структура
[03:08:17.020 --> 03:08:18.020]  maxostova.
[03:08:18.020 --> 03:08:21.020]  Честно, оно меньше либо равно, чем любой разрез?
[03:08:21.020 --> 03:08:23.020]  Честно, любой из этих товарищей.
[03:08:23.020 --> 03:08:27.020]  Ну, потому что вот, да.
[03:08:27.020 --> 03:08:30.020]  Ну, то есть, как бы f от uv, это как бы вот в том графе
[03:08:30.020 --> 03:08:33.020]  gr, это как бы вот еще одно ребро, вот f от uv.
[03:08:33.020 --> 03:08:36.020]  Но так как у нас максимальный остов, то получается, что
[03:08:36.020 --> 03:08:37.020]  это ребро меньше либо равно.
[03:08:37.020 --> 03:08:40.020]  Если бы оно было больше хоть кого-нибудь из них,
[03:08:40.020 --> 03:08:43.020]  то, значит, мы бы вытянули то, что меньше, добавили
[03:08:43.020 --> 03:08:45.020]  бы это, и получили бы больше остов.
[03:08:49.020 --> 03:08:51.020]  Миша сломался, не стянул.
[03:08:51.020 --> 03:08:52.020]  Похоже.
[03:08:54.020 --> 03:08:55.020]  Да?
[03:08:55.020 --> 03:08:57.020]  Так, это ты про что похоже?
[03:08:57.020 --> 03:08:59.020]  Кому ответил, да?
[03:08:59.020 --> 03:09:00.020]  Про себе.
[03:09:00.020 --> 03:09:04.020]  Тихо, тихо, тихо, тихо.
[03:09:04.020 --> 03:09:06.020]  Ладно, спокойно сейчас.
[03:09:06.020 --> 03:09:08.020]  Потому что граф.
[03:09:08.020 --> 03:09:11.020]  Ну, я назвал граф gr от слова graph.
[03:09:11.020 --> 03:09:15.020]  Я не хотел его назвать g, потому что у меня f это матрица,
[03:09:15.020 --> 03:09:16.020]  а g как бы граф.
[03:09:16.020 --> 03:09:19.020]  Я, наверное, должен был назвать это g с индексом f.
[03:09:19.020 --> 03:09:22.020]  Ну вот, но тут, да.
[03:09:22.020 --> 03:09:23.020]  Вот.
[03:09:23.020 --> 03:09:26.020]  То есть, таким образом, то есть, видите, вообще не сложным
[03:09:26.020 --> 03:09:29.020]  образом оказывается, что такое дерево вообще существует.
[03:09:30.020 --> 03:09:34.020]  И называется это дерево гомориху.
[03:09:36.020 --> 03:09:37.020]  Это оно и есть.
[03:09:38.020 --> 03:09:39.020]  О, познакомьтесь.
[03:09:42.020 --> 03:09:44.020]  Это дерево гомориху.
[03:09:44.020 --> 03:09:45.020]  Как его построить?
[03:09:46.020 --> 03:09:48.020]  Ну, самый тупой способ его построить просто вот как
[03:09:48.020 --> 03:09:49.020]  и сказали.
[03:09:50.020 --> 03:09:51.020]  Давайте построим все.
[03:09:52.020 --> 03:09:53.020]  Ну, это чекнуться можно.
[03:09:53.020 --> 03:09:56.020]  То есть, в явном виде найдем все разрезы, и после этого
[03:09:56.020 --> 03:10:00.020]  в этом графе за каким-нибудь честным примом найдем
[03:10:00.020 --> 03:10:01.020]  max разрез.
[03:10:03.020 --> 03:10:06.020]  Это будет работать за, тупой алгоритм будет работать
[03:10:06.020 --> 03:10:09.020]  за v квадрат на max поток.
[03:10:10.020 --> 03:10:11.020]  Ну, это чекнуться.
[03:10:12.020 --> 03:10:13.020]  Ну, вот.
[03:10:13.020 --> 03:10:14.020]  Ну, это да, многовато.
[03:10:14.020 --> 03:10:17.020]  Так вот, последнее, что мы видим в этом, там,
[03:10:17.020 --> 03:10:22.020]  последняя тема по потокам, это как это превратить в
[03:10:22.020 --> 03:10:23.020]  вот.
[03:10:30.020 --> 03:10:31.020]  Так что вот такая идея.
[03:10:32.020 --> 03:10:33.020]  Ну, это вот то, что у нас.
[03:10:34.020 --> 03:10:38.020]  Это видимо то, что нам хочется сделать еще сегодня.
[03:10:39.020 --> 03:10:41.020]  Скажем так, сильно много не будет, поэтому, я думаю,
[03:10:42.020 --> 03:10:44.020]  финальный перерывчик сделать надо.
[03:10:45.020 --> 03:10:46.020]  Финальный марш-бросок.
[03:10:47.020 --> 03:10:50.020]  Попробуем построить дерево гомориху за n поток.
[03:10:52.020 --> 03:10:54.020]  Но для того, чтобы построить, нам, конечно, потребуется
[03:10:55.020 --> 03:10:56.020]  кое-что подоказывать.
[03:10:57.020 --> 03:10:58.020]  Каким образом?
[03:10:59.020 --> 03:11:00.020]  Ну, ну вот.
[03:11:01.020 --> 03:11:03.020]  Ну, идея будет весьма неожиданная.
[03:11:04.020 --> 03:11:06.020]  Смотрите, ну, значит, делать мы будем так.
[03:11:08.020 --> 03:11:10.020]  Значит, вот у нас есть целый жрав.
[03:11:16.020 --> 03:11:18.020]  Да, в нем еще какие-то ребра.
[03:11:19.020 --> 03:11:22.020]  Я возьму в нем первые две, там, две абсолютно первые
[03:11:23.020 --> 03:11:26.020]  попавшиеся вершины и найду между ними минразрез.
[03:11:28.020 --> 03:11:29.020]  Вот он.
[03:11:31.020 --> 03:11:33.020]  После этого я буду это изображать вот так.
[03:11:34.020 --> 03:11:37.020]  Вот у меня вершина U, вот у меня вершина V.
[03:11:39.020 --> 03:11:41.020]  Вот, то есть у меня есть такие две метовершины,
[03:11:42.020 --> 03:11:44.020]  которые я соединяю ребром, вот этим вот F от UV,
[03:11:45.020 --> 03:11:46.020]  который я только что нашел.
[03:11:48.020 --> 03:11:50.020]  Не знаю, как вы, а тут вижу две печеньки.
[03:11:52.020 --> 03:11:55.020]  Ну, не волнуйтесь, ужин приближается, спокойно.
[03:11:56.020 --> 03:11:57.020]  Тем более, что, видите, я благодаря этому тоже,
[03:11:58.020 --> 03:11:59.020]  вот как вы можете заметить, что мы тут чуть-чуть
[03:12:00.020 --> 03:12:01.020]  поперекусываем, да, не совсем хорошо, но я как бы
[03:12:02.020 --> 03:12:03.020]  тоже этим щитом пользуюсь, так что.
[03:12:04.020 --> 03:12:05.020]  Ну, сейчас уже нет, но вы увидели.
[03:12:06.020 --> 03:12:07.020]  Так что, поэтому осторожно.
[03:12:09.020 --> 03:12:11.020]  Значит, смотрите, значит, F от UV.
[03:12:12.020 --> 03:12:14.020]  Значит, теперь дальше, что мы теперь сделаем?
[03:12:15.020 --> 03:12:17.020]  Дальше мы возьмем, ну, в какой-то из этих долей,
[03:12:18.020 --> 03:12:20.020]  чтобы хотя бы две вершины найдется, правда?
[03:12:21.020 --> 03:12:22.020]  Идется?
[03:12:23.020 --> 03:12:24.020]  Ну, вот.
[03:12:25.020 --> 03:12:27.020]  Ну, если в графе было две вершины того дерева,
[03:12:28.020 --> 03:12:29.020]  можно было и не строить, да.
[03:12:30.020 --> 03:12:32.020]  Так вот, берем тоже две первые попавшиеся вершины.
[03:12:34.020 --> 03:12:36.020]  Какие-нибудь вот X игр.
[03:12:40.020 --> 03:12:42.020]  И находим между ними разрез.
[03:12:43.020 --> 03:12:45.020]  Но находим не просто так.
[03:12:45.020 --> 03:12:47.020]  Мне кажется, мы выигрываем с реальностью.
[03:12:48.020 --> 03:12:49.020]  Нет, то есть, да.
[03:12:50.020 --> 03:12:52.020]  Значит, смотрите, фишка будет следующая.
[03:12:53.020 --> 03:12:55.020]  Сейчас будет сразу мистическое утверждение.
[03:12:56.020 --> 03:12:58.020]  Вот пусть у меня X игр оказались в одной доле разреза.
[03:12:59.020 --> 03:13:02.020]  Так вот, я утверждаю, значит, утверждение такое.
[03:13:04.020 --> 03:13:08.020]  То есть, если вот эта доля A, а вот эта, допустим, A с тильдой, да,
[03:13:09.020 --> 03:13:10.020]  то я утверждаю следующее.
[03:13:12.020 --> 03:13:13.020]  Ну, вот.
[03:13:13.020 --> 03:13:17.020]  Выгодно, ну, скажем так, если по-лимпиадному формулировать,
[03:13:18.020 --> 03:13:19.020]  можно так.
[03:13:20.020 --> 03:13:30.020]  Значит, выгодно брать такой разрез, такой X игр разрез,
[03:13:35.020 --> 03:13:40.020]  что A с тильдой целиком лежит в одной из долей.
[03:13:43.020 --> 03:13:51.020]  То есть, минимально это значит, что в любом минимальном разрезе между X и Y?
[03:13:52.020 --> 03:13:53.020]  Нет, не в любом.
[03:13:54.020 --> 03:13:57.020]  Более слабо, существует, да, существует минимальный разрез,
[03:13:58.020 --> 03:14:00.020]  в котором вот эта A с тильдой целиком лежит в одной из долей.
[03:14:01.020 --> 03:14:02.020]  Что-то бред.
[03:14:03.020 --> 03:14:04.020]  Нет, не бред, а...
[03:14:05.020 --> 03:14:06.020]  Нет, это не бред.
[03:14:07.020 --> 03:14:08.020]  Бредом это не надо.
[03:14:09.020 --> 03:14:10.020]  Понятно, почему.
[03:14:10.020 --> 03:14:11.020]  Да, и почему, и почему.
[03:14:12.020 --> 03:14:14.020]  А почему, понятно, там не самое тривиальное доказательство сейчас будет.
[03:14:21.020 --> 03:14:22.020]  Почувствуй.
[03:14:23.020 --> 03:14:25.020]  Почувствуй нашу любовь, да, так.
[03:14:26.020 --> 03:14:27.020]  Хочется сказать что-то.
[03:14:28.020 --> 03:14:29.020]  Почувствуй наш мир на разрезе.
[03:14:30.020 --> 03:14:31.020]  Ну, типа я говорю.
[03:14:32.020 --> 03:14:33.020]  Так, тихо, тихо, тихо.
[03:14:33.020 --> 03:14:35.020]  Если мы возьмем путь в гомориху от X до Y,
[03:14:36.020 --> 03:14:40.020]  и у нас F от УВ где-то скриво от него подвешено,
[03:14:41.020 --> 03:14:43.020]  то у нас одно из по деревьев будет целиком сбоку от этого пути.
[03:14:44.020 --> 03:14:46.020]  А если F от УВ между ними...
[03:14:47.020 --> 03:14:48.020]  У нас же нет еще гомориху.
[03:14:49.020 --> 03:14:50.020]  Так, спокойно.
[03:14:51.020 --> 03:14:52.020]  Так, тихо, деревьев еще нет.
[03:14:53.020 --> 03:14:54.020]  Так, нет, сейчас.
[03:14:55.020 --> 03:14:56.020]  Мы знаем, что есть к дереву гомориху, но мы не знаем как его построить.
[03:14:57.020 --> 03:15:00.020]  Да, ну вообще никто не сказал, что вот это ребро имеет отношение к дереву гомориху.
[03:15:01.020 --> 03:15:02.020]  Да, это обидно.
[03:15:03.020 --> 03:15:04.020]  Проблема.
[03:15:05.020 --> 03:15:06.020]  Ну вот, какое-то.
[03:15:07.020 --> 03:15:09.020]  Ну значит, смотрите, поэтому доказывать будем так.
[03:15:10.020 --> 03:15:14.020]  Итак, жил-был разрез когда-то.
[03:15:15.020 --> 03:15:16.020]  Вот.
[03:15:17.020 --> 03:15:18.020]  Допустим, был.
[03:15:19.020 --> 03:15:20.020]  Да, при нем.
[03:15:21.020 --> 03:15:22.020]  Вот.
[03:15:23.020 --> 03:15:26.020]  Вот жил один разрез, и вот есть минразрез между X и Y.
[03:15:28.020 --> 03:15:29.020]  Вот.
[03:15:30.020 --> 03:15:35.020]  Значит, и X и Y оказались в разных долях разреза, ну по определению разреза между X и Y.
[03:15:36.020 --> 03:15:37.020]  Вот они.
[03:15:38.020 --> 03:15:42.020]  И, допустим, без ограничений общности У оказалась в одной доле с X.
[03:15:45.020 --> 03:15:46.020]  Вот.
[03:15:47.020 --> 03:15:48.020]  Так.
[03:15:49.020 --> 03:15:50.020]  Ну теперь я утверждаю.
[03:15:51.020 --> 03:15:52.020]  Ну вот.
[03:15:53.020 --> 03:15:54.020]  Ну вот.
[03:15:55.020 --> 03:15:56.020]  А где же оказалась В?
[03:15:57.020 --> 03:15:58.020]  Ну давайте предположим.
[03:15:59.020 --> 03:16:00.020]  Теперь у нас есть два случая.
[03:16:01.020 --> 03:16:03.020]  Тут пока случаев не было без ограничений общности, да?
[03:16:04.020 --> 03:16:05.020]  А теперь случаи есть.
[03:16:06.020 --> 03:16:09.020]  Давайте рассмотрим случаи, когда у меня В оказалась вот в этой доле.
[03:16:10.020 --> 03:16:12.020]  И тут еще какие-то точечки.
[03:16:15.020 --> 03:16:16.020]  Вот.
[03:16:17.020 --> 03:16:21.020]  Значит, да, давайте в каждой из этих четвертей какие-то вершины есть.
[03:16:22.020 --> 03:16:28.020]  На самом деле я хочу сейчас показать, что если я вот это вот перенесу вот сюда,
[03:16:29.020 --> 03:16:30.020]  то хуже не станет.
[03:16:34.020 --> 03:16:35.020]  Понятно, да?
[03:16:36.020 --> 03:16:37.020]  В смысле?
[03:16:38.020 --> 03:16:43.020]  Если я вот эти вершины перенесу сюда, то это тоже будет разрез между X и Y,
[03:16:44.020 --> 03:16:46.020]  но его величина будет от этого не увеличиться.
[03:16:47.020 --> 03:16:49.020]  Может, нам повезет и она уменьшится.
[03:16:51.020 --> 03:16:53.020]  Сейчас мы встроим разрез всего грамма, да?
[03:16:54.020 --> 03:16:55.020]  Да.
[03:16:55.020 --> 03:16:56.020]  Да.
[03:16:57.020 --> 03:16:59.020]  Значит, смотрите, вот у меня В оказалось здесь.
[03:17:00.020 --> 03:17:01.020]  Значит, давайте думать.
[03:17:02.020 --> 03:17:04.020]  Так, ну, во-первых, давайте эти четыре четверти как-нибудь назовем.
[03:17:05.020 --> 03:17:06.020]  Ну, их назовем.
[03:17:07.020 --> 03:17:08.020]  X большое.
[03:17:10.020 --> 03:17:11.020]  Или как-нибудь еще их назовем.
[03:17:12.020 --> 03:17:14.020]  Давайте X у.
[03:17:15.020 --> 03:17:16.020]  Нет, ну, раз...
[03:17:17.020 --> 03:17:19.020]  Ладно, давайте, чтобы буквы не путать, давайте так.
[03:17:20.020 --> 03:17:23.020]  Нет, ну, с волной это нормально будет.
[03:17:23.020 --> 03:17:24.020]  Знаете, как мы сделаем?
[03:17:25.020 --> 03:17:28.020]  Это будет B, это будет C, это будет C с волной, это будет B с волной.
[03:17:33.020 --> 03:17:37.020]  Теперь, смотрите, переносим, теперь мы можем сказать,
[03:17:38.020 --> 03:17:47.020]  переносим вершины из C стильдой в B стильдой.
[03:17:47.020 --> 03:17:48.020]  B стильдой.
[03:17:52.020 --> 03:17:56.020]  Значит, тогда величина разреза, тогда стоимость...
[03:17:58.020 --> 03:18:00.020]  Значит, стоимость разреза.
[03:18:05.020 --> 03:18:06.020]  Ну, вот между X и Y.
[03:18:12.020 --> 03:18:14.020]  Значит, она, во-первых, она была.
[03:18:17.020 --> 03:18:19.020]  И была она равна тому, что я буду называть
[03:18:20.020 --> 03:18:28.020]  WB C плюс WB, там, соответственно, C с тильдой, плюс W...
[03:18:29.020 --> 03:18:30.020]  Что там еще?
[03:18:31.020 --> 03:18:35.020]  B с тильдой C плюс WB с тильдой C с тильдой.
[03:18:36.020 --> 03:18:37.020]  Понятно? Была она ровно такая, правда?
[03:18:41.020 --> 03:18:42.020]  А стала она...
[03:18:42.020 --> 03:18:47.020]  Ну, соответственно, тогда C против всех.
[03:18:50.020 --> 03:18:51.020]  То есть, поехали.
[03:18:52.020 --> 03:19:02.020]  Значит, BC плюс B с тильдой C плюс W...
[03:19:03.020 --> 03:19:05.020]  Чего? C с тильдой.
[03:19:08.020 --> 03:19:09.020]  Заметим, что у нас...
[03:19:10.020 --> 03:19:11.020]  Да.
[03:19:12.020 --> 03:19:14.020]  Ну да. То есть, хотим.
[03:19:19.020 --> 03:19:21.020]  Значит, теперь смотрите. Хотим. Что мы хотим?
[03:19:22.020 --> 03:19:26.020]  Мы перенесли C с тильдой внутри B с тильдой?
[03:19:27.020 --> 03:19:28.020]  Да.
[03:19:29.020 --> 03:19:31.020]  Поэтому как бы стоимость была такая.
[03:19:32.020 --> 03:19:36.020]  То есть, хотим, чтобы то, что было, было больше либо равно того, что стало.
[03:19:39.020 --> 03:19:45.020]  То есть, хотим BC плюс BC с тильдой плюс B...
[03:19:47.020 --> 03:19:49.020]  Вот это мы хотим.
[03:19:50.020 --> 03:20:01.020]  Хотим, чтобы это было больше либо равно, чем WB C плюс WB с тильдой C плюс WC с тильдой C.
[03:20:02.020 --> 03:20:04.020]  Значит, шлёп-шлёп.
[03:20:05.020 --> 03:20:08.020]  Как говорит уже известный вам классик? Уже же известный?
[03:20:09.020 --> 03:20:10.020]  С первого семеста.
[03:20:15.020 --> 03:20:16.020]  Да ладно.
[03:20:17.020 --> 03:20:18.020]  В девятом ты точно.
[03:20:19.020 --> 03:20:20.020]  Ну ты понятно.
[03:20:21.020 --> 03:20:23.020]  Ну не знаю. Мне казалось, твой папа приедет с ним до знакомчатера.
[03:20:24.020 --> 03:20:25.020]  Чуть дольше, наверное.
[03:20:26.020 --> 03:20:27.020]  Я не мой папа.
[03:20:28.020 --> 03:20:29.020]  Ну ладно.
[03:20:30.020 --> 03:20:31.020]  Хорошо.
[03:20:32.020 --> 03:20:33.020]  Ну ладно, я всё понял.
[03:20:34.020 --> 03:20:38.020]  Так, ладно, всё-всё-всё. Ладно, не будем это обсуждать. Хорошо.
[03:20:39.020 --> 03:20:40.020]  Вот.
[03:20:41.020 --> 03:20:42.020]  Пойду с его девятым классом.
[03:20:45.020 --> 03:20:46.020]  Чего?
[03:20:47.020 --> 03:20:51.020]  Погоди, по-моему, когда он уехал, учился в девятом классе, тебя, скорее всего, на свете не было.
[03:20:52.020 --> 03:20:53.020]  Он уже был знаком.
[03:20:54.020 --> 03:20:55.020]  По транзитивности.
[03:20:56.020 --> 03:20:57.020]  А это да.
[03:20:58.020 --> 03:21:00.020]  Так, ну в общем такая вот радость.
[03:21:01.020 --> 03:21:02.020]  Ну давайте так.
[03:21:03.020 --> 03:21:07.020]  Мы хотим, чтобы у нас, в общем, это эквалентно тому, что ноль больше либо равно.
[03:21:08.020 --> 03:21:10.020]  Минус b с тильдой.
[03:21:11.020 --> 03:21:12.020]  Минус.
[03:21:13.020 --> 03:21:14.020]  Вот так.
[03:21:15.020 --> 03:21:17.020]  И плюс c с тильдой.
[03:21:18.020 --> 03:21:19.020]  Да.
[03:21:20.020 --> 03:21:21.020]  С.
[03:21:22.020 --> 03:21:23.020]  С с тильдой, да.
[03:21:24.020 --> 03:21:25.020]  Ну там порядок не будет.
[03:21:26.020 --> 03:21:27.020]  Вот. Ну теперь у нас есть какая-то вопрос.
[03:21:28.020 --> 03:21:29.020]  Действительно.
[03:21:30.020 --> 03:21:32.020]  Откуда мы это можем действительно вывести?
[03:21:34.020 --> 03:21:36.020]  Да, может я даже зря это написал на самом деле.
[03:21:37.020 --> 03:21:39.020]  Знаете, давайте я все-таки по-другому напишу.
[03:21:42.020 --> 03:21:43.020]  Все-таки давайте так.
[03:21:48.020 --> 03:21:52.020]  А ведущий плюс какую-то особую нагрузку несет?
[03:21:53.020 --> 03:21:56.020]  Ну просто, ну не хотелось стирать.
[03:21:57.020 --> 03:21:59.020]  Ну как же мы это докажем?
[03:22:00.020 --> 03:22:01.020]  Вообще, а чем мы можем вообще пользоваться?
[03:22:01.020 --> 03:22:08.020]  Ну где-то же мы, наверное, должны воспользоваться тем, что вот этот вот разрез между u и v уже железно-минимальный, правда?
[03:22:10.020 --> 03:22:12.020]  Ну где-то должны, да?
[03:22:14.020 --> 03:22:15.020]  Ну вот.
[03:22:16.020 --> 03:22:17.020]  А теперь возникает вопрос.
[03:22:18.020 --> 03:22:23.020]  Чего не хватает для того, чтобы какое-то из этих слагаемых превратилось в разрез uv?
[03:22:28.020 --> 03:22:29.020]  Ну слева нельзя.
[03:22:30.020 --> 03:22:31.020]  Ну слева нельзя их соблюдить.
[03:22:34.020 --> 03:22:35.020]  Ничего.
[03:22:36.020 --> 03:22:37.020]  Слева нельзя их по-другому соблюдить.
[03:22:38.020 --> 03:22:39.020]  А вот, ну давайте смотреть.
[03:22:40.020 --> 03:22:41.020]  Вот этот вот разрез он что обедает?
[03:22:42.020 --> 03:22:43.020]  bc против b с тильдой и c с тильдой, да?
[03:22:44.020 --> 03:22:46.020]  Слева против b с тильдой.
[03:22:47.020 --> 03:22:49.020]  Мы можем взять, сделать...
[03:22:52.020 --> 03:22:53.020]  А, нет, можем.
[03:22:54.020 --> 03:22:55.020]  Не можем.
[03:22:56.020 --> 03:22:57.020]  Чего? Чего можем?
[03:22:57.020 --> 03:22:59.020]  Что можем? Кого можем? Где можем?
[03:23:00.020 --> 03:23:01.020]  Мы все можем.
[03:23:02.020 --> 03:23:03.020]  Ну да.
[03:23:04.020 --> 03:23:06.020]  Попрос, получится ли у нас?
[03:23:07.020 --> 03:23:08.020]  У нас все получится.
[03:23:09.020 --> 03:23:14.020]  Ну можно залезть на один квадратик храу, то есть взять b, c, c с тильдой.
[03:23:15.020 --> 03:23:16.020]  Так.
[03:23:17.020 --> 03:23:18.020]  И написать, что такой разрез меньше либо равен чем.
[03:23:19.020 --> 03:23:20.020]  Больше либо равен.
[03:23:21.020 --> 03:23:22.020]  Больше либо равен чем.
[03:23:23.020 --> 03:23:24.020]  Так.
[03:23:25.020 --> 03:23:26.020]  Давайте.
[03:23:27.020 --> 03:23:28.020]  Знаем.
[03:23:29.020 --> 03:23:30.020]  Говорим мы.
[03:23:31.020 --> 03:23:32.020]  Знаем.
[03:23:33.020 --> 03:23:40.020]  Что w b с тильдой c с тильдой.
[03:23:41.020 --> 03:23:45.020]  Плюс w значит вот этого b с тильдой c.
[03:23:46.020 --> 03:23:47.020]  Плюс w...
[03:23:48.020 --> 03:23:49.020]  Чего там еще?
[03:23:50.020 --> 03:23:51.020]  b с тильдой b.
[03:23:51.020 --> 03:24:10.020]  Оно больше либо равно, чем w b с тильдой, плюс w b с c с тильдой, плюс w c b с тильдой, плюс w c c с тильдой.
[03:24:12.020 --> 03:24:18.020]  Ну потому что эта величина какого-то разрезу между u и v, а эта величина минимального разрезу между u и v, правда?
[03:24:19.020 --> 03:24:20.020]  Понимаете, да?
[03:24:21.020 --> 03:24:22.020]  Вот.
[03:24:23.020 --> 03:24:24.020]  Вот.
[03:24:25.020 --> 03:24:26.020]  Ну так.
[03:24:27.020 --> 03:24:28.020]  Ну что мы тут видим?
[03:24:29.020 --> 03:24:30.020]  Шлеп, шлеп видим.
[03:24:31.020 --> 03:24:32.020]  Еще шлеп, шлеп есть?
[03:24:33.020 --> 03:24:34.020]  Ну разумеется есть.
[03:24:35.020 --> 03:24:36.020]  Вот он.
[03:24:37.020 --> 03:24:38.020]  Шлеп, шлеп.
[03:24:39.020 --> 03:24:40.020]  Ну что как вам?
[03:24:45.020 --> 03:24:46.020]  Еще раз что произошло?
[03:24:47.020 --> 03:24:51.020]  Ну я написал вот это утверждение, которое мы точно знаем.
[03:24:52.020 --> 03:24:53.020]  А откуда?
[03:24:54.020 --> 03:24:56.020]  Потому что мы рассмотрели разрез между u и v вот этот вот.
[03:24:57.020 --> 03:24:58.020]  Мы знаем, что он минимальный между u и v.
[03:24:59.020 --> 03:25:00.020]  Но его величина равна вот этому.
[03:25:01.020 --> 03:25:02.020]  Сейчас.
[03:25:03.020 --> 03:25:06.020]  Вы четверное слагаемое уменьшили одно, чем...
[03:25:07.020 --> 03:25:14.020]  Чем тройное слагаемое, в которое разрез проводит так в одной доле вот это вот, а в другой доле все остальное.
[03:25:14.020 --> 03:25:15.020]  Окей.
[03:25:16.020 --> 03:25:17.020]  Вот.
[03:25:18.020 --> 03:25:19.020]  И смотрите, какое...
[03:25:20.020 --> 03:25:21.020]  Чего?
[03:25:22.020 --> 03:25:23.020]  Эта...
[03:25:24.020 --> 03:25:27.020]  Эта величина разреза вот такого.
[03:25:28.020 --> 03:25:29.020]  Ага.
[03:25:30.020 --> 03:25:31.020]  Вот.
[03:25:32.020 --> 03:25:33.020]  Вот.
[03:25:34.020 --> 03:25:35.020]  Так что такое не нравится, мы точно знаем.
[03:25:37.020 --> 03:25:38.020]  Но смотрите, что...
[03:25:39.020 --> 03:25:40.020]  То есть мы это пошлеп-шлепали.
[03:25:40.020 --> 03:25:51.020]  То есть из этого вывели, что wb с тильдой c с тильдой больше либо равно w c c с тильдой плюс даже еще что-то.
[03:25:53.020 --> 03:25:59.020]  А доказать мы должны, что уже не равенство, только мы одно слагаемое из меньшей части перетащили больше.
[03:26:03.020 --> 03:26:04.020]  Так это нам повезло, да?
[03:26:05.020 --> 03:26:06.020]  Ага.
[03:26:07.020 --> 03:26:09.020]  А если у нас v будет сверху, то такого, наверное, не будет.
[03:26:10.020 --> 03:26:12.020]  Ну, такое не будет, будет другая.
[03:26:13.020 --> 03:26:14.020]  Ну, просто другую там...
[03:26:15.020 --> 03:26:16.020]  Не важно, что такое большой запас.
[03:26:17.020 --> 03:26:18.020]  Нет.
[03:26:19.020 --> 03:26:20.020]  На 2 vpc.
[03:26:21.020 --> 03:26:22.020]  Ну, вот.
[03:26:23.020 --> 03:26:24.020]  Ну, такая вот интересная листик.
[03:26:27.020 --> 03:26:28.020]  Вот.
[03:26:30.020 --> 03:26:31.020]  Так что...
[03:26:32.020 --> 03:26:35.020]  Ну, в итоге получается такая вот действительно логичная мысль, что...
[03:26:36.020 --> 03:26:37.020]  Нет, ну, какой запас?
[03:26:38.020 --> 03:26:39.020]  Wb c тильдой, то есть...
[03:26:40.020 --> 03:26:41.020]  Ну да.
[03:26:42.020 --> 03:26:43.020]  Ну да.
[03:26:44.020 --> 03:26:45.020]  Разница, то есть разница, это вот это вот.
[03:26:46.020 --> 03:26:49.020]  То есть, видимо, теорема как раз о том, что либо вот этого, либо вот этого быть не должно в природе.
[03:26:50.020 --> 03:26:52.020]  Но теорема, собственно, об этом вообще-то и говорит.
[03:26:54.020 --> 03:26:55.020]  Вот.
[03:26:56.020 --> 03:26:59.020]  Так что остается доказательство завершить, просто сделав вывод вот такой.
[03:27:01.020 --> 03:27:02.020]  Сейчас еще раз к вам.
[03:27:02.020 --> 03:27:03.020]  Мы...
[03:27:04.020 --> 03:27:06.020]  Почему мы решили, что W находится там?
[03:27:07.020 --> 03:27:08.020]  Почему на него?
[03:27:09.020 --> 03:27:10.020]  Ну, потому что на самом деле мы рассмотрели один из двух случаев.
[03:27:11.020 --> 03:27:14.020]  Второй случай остается в качестве упражнения.
[03:27:15.020 --> 03:27:16.020]  Ну, идентичного.
[03:27:17.020 --> 03:27:18.020]  Вот.
[03:27:19.020 --> 03:27:20.020]  То есть да, это не совсем тот же случай, но...
[03:27:21.020 --> 03:27:22.020]  Вот.
[03:27:23.020 --> 03:27:24.020]  Так что вот ура.
[03:27:25.020 --> 03:27:26.020]  То есть оказывается первая идея.
[03:27:27.020 --> 03:27:30.020]  То есть на самом первом шаге оказывается, вот когда вы берете тут две вершины,
[03:27:30.020 --> 03:27:36.020]  то выгодно на самом деле, то есть оказывается все вот это вот сжать.
[03:27:37.020 --> 03:27:39.020]  Ну, просто сжать в одну вершину.
[03:27:40.020 --> 03:27:42.020]  И после этого искать минразрез.
[03:27:43.020 --> 03:27:47.020]  А мы же на самом деле доказали не то, что есть такой минразрез,
[03:27:48.020 --> 03:27:50.020]  а то, что в любом минразрезе гарантировано так.
[03:27:51.020 --> 03:27:52.020]  Ну, не совсем, не совсем.
[03:27:53.020 --> 03:27:54.020]  Дело в том, что...
[03:27:55.020 --> 03:27:59.020]  Нет, дело в том, что на самом деле тут какие-то важные слагаемые могут разацануть.
[03:28:00.020 --> 03:28:01.020]  Ну, как это слагаемые?
[03:28:02.020 --> 03:28:03.020]  Поэтому это означает, что может...
[03:28:04.020 --> 03:28:09.020]  То есть среди оптимальных разрезов точно найдется тот, что нам нужен, вот хорошего вида.
[03:28:10.020 --> 03:28:12.020]  Но могут быть именно разрезы плохого вида.
[03:28:13.020 --> 03:28:16.020]  Если там перекинешь куда-то какую-то вершину, и вес не поменяется.
[03:28:17.020 --> 03:28:20.020]  Вы сами сказали, что они ноль в точности, когда у нас пустое множество.
[03:28:21.020 --> 03:28:25.020]  Если множество пустое, это как раз значит, что все вершины с одной стороны.
[03:28:26.020 --> 03:28:27.020]  Нет, ну не совсем.
[03:28:27.020 --> 03:28:28.020]  Нет, ну там да.
[03:28:29.020 --> 03:28:30.020]  Ну с формулированным так.
[03:28:31.020 --> 03:28:32.020]  Ну там понятно.
[03:28:33.020 --> 03:28:35.020]  Основной случай, конечно, нам будет говорить, например, найдется какая-нибудь вершина,
[03:28:36.020 --> 03:28:37.020]  которая никак не связана вот с этими.
[03:28:38.020 --> 03:28:39.020]  Тогда куда ее кидать, в общем-то, неважно.
[03:28:40.020 --> 03:28:41.020]  И тут как бы на равенство не повлияет.
[03:28:42.020 --> 03:28:43.020]  Вот.
[03:28:44.020 --> 03:28:45.020]  Но просто нам говорят, что можно...
[03:28:46.020 --> 03:28:48.020]  То есть давайте просто все, что связано надо, видимо, придется пихать в одну сторону,
[03:28:49.020 --> 03:28:51.020]  а там все остальные вершины, ну и не принципиально.
[03:28:52.020 --> 03:28:53.020]  Вот.
[03:28:54.020 --> 03:28:55.020]  Так что такая вот несильная штука.
[03:28:55.020 --> 03:28:59.020]  Ну проблема, конечно, этой штуки в том, что надо точно знать, что куда переносить.
[03:29:00.020 --> 03:29:02.020]  То есть, честно говоря, тут вот как бы нет такого,
[03:29:03.020 --> 03:29:04.020]  что вот есть какое-то общее представление, из которого это следует.
[03:29:05.020 --> 03:29:06.020]  Да, вот.
[03:29:07.020 --> 03:29:09.020]  Ну типа не напишется с нуля, потому что нужно принести вот это слева направо вообще.
[03:29:10.020 --> 03:29:11.020]  Нет, ну на самом деле просто нет.
[03:29:12.020 --> 03:29:13.020]  Нет, идея простая.
[03:29:14.020 --> 03:29:17.020]  Надо знать, что вот просто вот эту долю надо перетащить сюда, и типа будет не хуже.
[03:29:18.020 --> 03:29:19.020]  Ну вот.
[03:29:20.020 --> 03:29:22.020]  А дальше все вводится, потому что, во-первых, мы дальше честно записали,
[03:29:23.020 --> 03:29:24.020]  что мы хотим доказать, то есть вот в терминах w.
[03:29:25.020 --> 03:29:29.020]  А потом мы просто, а потом мы попытались просто воспользоваться единственным,
[03:29:30.020 --> 03:29:31.020]  чем мы знаем про эти разрезы.
[03:29:32.020 --> 03:29:33.020]  И у чуда оно заработало.
[03:29:34.020 --> 03:29:35.020]  Да, и у чуда сошлось, да.
[03:29:36.020 --> 03:29:37.020]  Вот.
[03:29:38.020 --> 03:29:40.020]  То есть, если этого не помнишь, то есть можно как бы на ощупь там пытаться вообще разобраться,
[03:29:41.020 --> 03:29:43.020]  что тут можно сделать, да, и там какие-то исследования вести,
[03:29:44.020 --> 03:29:45.020]  но вот можно точно знать.
[03:29:46.020 --> 03:29:49.020]  Ну как всегда, в статье как бы просто, да, утверждение, вот такое доказательство.
[03:29:50.020 --> 03:29:51.020]  Вот оно.
[03:29:52.020 --> 03:29:53.020]  Ну, как видим, доказательства на лицо.
[03:29:53.020 --> 03:29:55.020]  Тут это спорить не с чем.
[03:29:56.020 --> 03:29:57.020]  Вот.
[03:29:58.020 --> 03:29:59.020]  Так вот.
[03:30:01.020 --> 03:30:03.020]  Значит, давайте пойдем дальше.
[03:30:04.020 --> 03:30:05.020]  Нет, тут как бы и да.
[03:30:06.020 --> 03:30:07.020]  То есть, фактически тут два таких нетривиальных факта,
[03:30:08.020 --> 03:30:11.020]  из которых после этого, собственно, следует победа автоматически.
[03:30:12.020 --> 03:30:13.020]  Вот.
[03:30:20.020 --> 03:30:21.020]  Ну вот.
[03:30:21.020 --> 03:30:23.020]  Так что, смотрите, теперь идея на самом деле будет такая.
[03:30:24.020 --> 03:30:27.020]  То есть, пришло время на самом деле сказать сам алгоритм, как он будет работать.
[03:30:28.020 --> 03:30:29.020]  Так что, впрочем, я сейчас скажу,
[03:30:30.020 --> 03:30:33.020]  поэтому если там где-нибудь на КлубФорсе случайно появится задача на это,
[03:30:34.020 --> 03:30:35.020]  а такое бывает,
[03:30:36.020 --> 03:30:38.020]  там как минимум одна задача на это есть.
[03:30:39.020 --> 03:30:41.020]  Которая была где-нибудь F1.
[03:30:42.020 --> 03:30:43.020]  Ну, естественно.
[03:30:44.020 --> 03:30:45.020]  Ну, блин.
[03:30:46.020 --> 03:30:49.020]  Чтобы до туда дойти, понимаете, нужно по-хорошему предыдущий порешать.
[03:30:49.020 --> 03:30:52.020]  Ну, или быстренько эту написать и всех обогнать.
[03:30:53.020 --> 03:30:57.020]  Вдруг вы там, ты там чемпион потоков.
[03:30:58.020 --> 03:30:59.020]  Чемпион потока по потокам.
[03:31:00.020 --> 03:31:01.020]  Колобур.
[03:31:02.020 --> 03:31:03.020]  Вот.
[03:31:04.020 --> 03:31:05.020]  Так.
[03:31:06.020 --> 03:31:07.020]  Вот.
[03:31:08.020 --> 03:31:09.020]  Значит, смотрите, идея теперь такая.
[03:31:10.020 --> 03:31:11.020]  Второй шаг.
[03:31:12.020 --> 03:31:13.020]  То есть, первый шаг алгоритма у нас вот две такие метавершины.
[03:31:14.020 --> 03:31:17.020]  Теперь я сейчас сделаю из этих двух метавершин три метавершины.
[03:31:18.020 --> 03:31:19.020]  Как я это сделаю?
[03:31:20.020 --> 03:31:21.020]  Очень просто.
[03:31:22.020 --> 03:31:25.020]  Я возьму две вершины из вот отсюда.
[03:31:28.020 --> 03:31:30.020]  И распилю метавершины на две.
[03:31:31.020 --> 03:31:35.020]  То есть, ну, просто найду, но при этом я сожму вот это остильное и прям башото единое.
[03:31:37.020 --> 03:31:38.020]  Вот.
[03:31:39.020 --> 03:31:40.020]  Да, прям вот возьму и сожму.
[03:31:41.020 --> 03:31:42.020]  После этого найду минразрез между х.
[03:31:44.020 --> 03:31:45.020]  Тогда у меня получится.
[03:31:45.020 --> 03:31:46.020]  То есть, вот этот вот разрез.
[03:31:47.020 --> 03:31:48.020]  Фх игрок.
[03:31:49.020 --> 03:31:50.020]  То есть, у меня тут будет игрок.
[03:31:51.020 --> 03:31:52.020]  Тут у меня будет х.
[03:31:53.020 --> 03:31:54.020]  Тут какая-то бла-бла-блашка.
[03:31:55.020 --> 03:31:56.020]  Тут у меня бла-бла-блашка.
[03:31:57.020 --> 03:31:58.020]  Вот.
[03:31:59.020 --> 03:32:00.020]  Ну, теперь спрашивайте.
[03:32:01.020 --> 03:32:02.020]  Теперь у меня идея.
[03:32:03.020 --> 03:32:04.020]  Я хочу вот эту метавершину остильной куда-то подвесить.
[03:32:05.020 --> 03:32:06.020]  Куда я ее подвешу?
[03:32:07.020 --> 03:32:11.020]  Ну, очевидно, туда, где у меня окажется вершина у.
[03:32:12.020 --> 03:32:14.020]  Ну, без ограничения общности с х.
[03:32:16.020 --> 03:32:17.020]  Вот.
[03:32:18.020 --> 03:32:19.020]  Что?
[03:32:21.020 --> 03:32:22.020]  Вот.
[03:32:23.020 --> 03:32:27.020]  И вот у меня теперь текущая версия дерева выглядит вот так.
[03:32:29.020 --> 03:32:35.020]  Ну, и как вы уже догадываетесь, я сейчас буду повторять эту операцию до тех пор, пока в каждой из метавершин мне останется по одной вершине.
[03:32:36.020 --> 03:32:37.020]  Это очень странно.
[03:32:38.020 --> 03:32:39.020]  Можете повторить, почему?
[03:32:42.020 --> 03:32:43.020]  Ну, идея очень простая.
[03:32:43.020 --> 03:32:44.020]  У меня была метавершина.
[03:32:45.020 --> 03:32:51.020]  Так вот, смотрите, когда я ищу разрез между х и игрок, у меня с какой-то из этих сторон окажется у, правда?
[03:32:52.020 --> 03:32:53.020]  Да.
[03:32:54.020 --> 03:33:04.020]  Тогда я утверждаюсь, тогда эту вот метавершину остильной я подцеплю за тоже ребро f от uv к той из вот этих вот половинок метавершин, в которой оказалось у.
[03:33:05.020 --> 03:33:07.020]  А, это то, что мы делаем, мы пока ничего не утверждаем.
[03:33:08.020 --> 03:33:09.020]  Пока ничего не утверждаем.
[03:33:09.020 --> 03:33:10.020]  Я ничего не утверждаю.
[03:33:11.020 --> 03:33:15.020]  Все, что у нас до этого было, мы это вот все делаем неразъединенным кусочком.
[03:33:16.020 --> 03:33:17.020]  Чего-чего-чего-чего?
[03:33:18.020 --> 03:33:19.020]  То есть, если вот сейчас...
[03:33:20.020 --> 03:33:24.020]  Да, при этом, когда мы это делали, остильной сжималась до единой вершины.
[03:33:25.020 --> 03:33:27.020]  Я имею в виду, если мы сейчас будем пилить, мы опять просто одну из этих...
[03:33:28.020 --> 03:33:31.020]  Да. Более того, сейчас я даже скажу, как это будет в общем виде выглядеть.
[03:33:32.020 --> 03:33:35.020]  В общем виде это будет выглядеть вот так.
[03:33:36.020 --> 03:33:41.020]  То есть, у меня в каждый момент времени у меня будет какое-то мистическое дерево.
[03:33:43.020 --> 03:33:45.020]  Такое веселое, такое веселое дерево.
[03:33:46.020 --> 03:33:47.020]  Я буду говорить так.
[03:33:48.020 --> 03:33:50.020]  У меня в какой-то из этих метавершин, наверное, есть две вершины.
[03:33:51.020 --> 03:33:52.020]  Вот допустим, вот здесь.
[03:33:53.020 --> 03:33:54.020]  Так вот, у меня идея такая.
[03:33:55.020 --> 03:33:58.020]  Я рассмотрю все поддеревья, которые получатся по удалению ее.
[03:33:59.020 --> 03:34:01.020]  Значит, сожму их в единую метавершину.
[03:34:06.020 --> 03:34:08.020]  Вот так это произойдет.
[03:34:09.020 --> 03:34:11.020]  И найду минразрез между ними.
[03:34:13.020 --> 03:34:15.020]  Получится вот что-то такое.
[03:34:16.020 --> 03:34:20.020]  Но при этом идея будет такая, что каждая ребро существует не просто так.
[03:34:22.020 --> 03:34:24.020]  То есть, я буду соблюдать важный инвариант.
[03:34:25.020 --> 03:34:26.020]  Внимание, инвариант.
[03:34:29.020 --> 03:34:33.020]  Для любого, если у меня тут есть какой-то реброс f, который равно f от uv,
[03:34:33.020 --> 03:34:36.020]  то есть, это означает, что у меня в этой доле есть вершина u,
[03:34:37.020 --> 03:34:39.020]  а именно в метавершине есть, а тут есть v.
[03:34:40.020 --> 03:34:44.020]  И они обладают таким свойством, что минразрез между u и v равен именно вот этому весу.
[03:34:47.020 --> 03:34:49.020]  То есть, я буду поддерживать такой инвариант.
[03:34:50.020 --> 03:34:52.020]  Я не понимаю, вот вы тыкаете в две рандомных вершины.
[03:34:53.020 --> 03:34:54.020]  Нет, это не рандомные вершины.
[03:34:55.020 --> 03:35:00.020]  Я поддерживаю инвариант, что изначально у меня вообще одна метавершина, в принципе.
[03:35:01.020 --> 03:35:02.020]  Нет, ну простые вершины.
[03:35:04.020 --> 03:35:06.020]  Хотя нет, все тут гораздо проще.
[03:35:07.020 --> 03:35:10.020]  Для того, чтобы понять, как алгоритм устроен, все еще проще.
[03:35:11.020 --> 03:35:17.020]  Мы все это сжали до единой вершины, поэтому когда мы найдем минразрез,
[03:35:18.020 --> 03:35:23.020]  мы посмотрим, в чью долю разреза попала вот эта штука, и это ребро подцепим именно к этой доле.
[03:35:24.020 --> 03:35:25.020]  Это да, нет, я имею в виду...
[03:35:28.020 --> 03:35:31.020]  Вот вы взяли две вершины в начале.
[03:35:31.020 --> 03:35:32.020]  Да, первая попавшаяся.
[03:35:33.020 --> 03:35:35.020]  Взяли ребро f в от u в.
[03:35:36.020 --> 03:35:37.020]  Нет, не просто, я разделил граф...
[03:35:38.020 --> 03:35:39.020]  Взяли минразрез f от u в.
[03:35:40.020 --> 03:35:41.020]  Да, то есть, а стиль-то это не просто так.
[03:35:42.020 --> 03:35:46.020]  В какой стати он вообще должен лежать в дереве гамарюху, как ребро?
[03:35:47.020 --> 03:35:50.020]  Вы утверждаете, что оно будет в итоге лежать в дереве гамарюху, как ребро?
[03:35:51.020 --> 03:35:55.020]  Будет, но я не сказал, что оно будет соединять именно в вершины u и v.
[03:35:58.020 --> 03:35:59.020]  Чего?
[03:35:59.020 --> 03:36:01.020]  Нет, вы же поддерживаете такой вариант.
[03:36:02.020 --> 03:36:03.020]  Нет.
[03:36:04.020 --> 03:36:05.020]  Не совсем так.
[03:36:06.020 --> 03:36:12.020]  Я поддерживаю вариант, что в мета-вершинах, которые соединяет это ребро,
[03:36:13.020 --> 03:36:17.020]  значит, найдутся две вершины, у которых минразрез вот такой.
[03:36:21.020 --> 03:36:24.020]  Сейчас, вон там подвесили, поэтому как раз в вершине, где была u.
[03:36:29.020 --> 03:36:32.020]  Нет, это я описывал вариант.
[03:36:33.020 --> 03:36:34.020]  Просто совпадение буквок.
[03:36:35.020 --> 03:36:36.020]  Давай напишу a и b, если это...
[03:36:37.020 --> 03:36:39.020]  Вы же изначально выбираете две вообще рандомные.
[03:36:40.020 --> 03:36:41.020]  Нет, я говорю именно про вершины u и v.
[03:36:42.020 --> 03:36:43.020]  И утверждаете потом...
[03:36:44.020 --> 03:36:45.020]  Ну, а для вершин...
[03:36:46.020 --> 03:36:49.020]  Так на ребро u и v в конце будет соединять вершины f от f.
[03:36:50.020 --> 03:36:51.020]  Хорошо.
[03:36:52.020 --> 03:36:53.020]  Будем считать, что я наврал.
[03:36:54.020 --> 03:36:56.020]  Потому что делать будем по-другому.
[03:36:56.020 --> 03:36:58.020]  Мы не будем заморачиваться от вершины u и v.
[03:36:59.020 --> 03:37:01.020]  Мы вместо этого скажем, что куда эта вершина...
[03:37:02.020 --> 03:37:05.020]  То есть, когда мы тут искали минразрез здесь, то куда эта как бы сжатая вершина попала,
[03:37:06.020 --> 03:37:07.020]  туда мы ее и подсыпем.
[03:37:08.020 --> 03:37:10.020]  Но это не обязательно будет рядом с вершиной u?
[03:37:11.020 --> 03:37:12.020]  Не обязательно.
[03:37:13.020 --> 03:37:14.020]  Стоп.
[03:37:15.020 --> 03:37:21.020]  А как она была вообще соединена с вот компонентом, который y и x?
[03:37:22.020 --> 03:37:23.020]  Чего?
[03:37:24.020 --> 03:37:25.020]  Вместе с u.
[03:37:26.020 --> 03:37:27.020]  Она была...
[03:37:28.020 --> 03:37:29.020]  В смысле?
[03:37:30.020 --> 03:37:31.020]  Она же вообще присутствует.
[03:37:32.020 --> 03:37:33.020]  Нет, она присутствует.
[03:37:34.020 --> 03:37:36.020]  Просто перед тем, как искать минразрез между их сыгрок, мы ее сжали в одну вершину.
[03:37:37.020 --> 03:37:38.020]  И к чему подсоединили?
[03:37:39.020 --> 03:37:40.020]  Да, к чему она вот так и подсоединили?
[03:37:41.020 --> 03:37:42.020]  Ну, просто...
[03:37:43.020 --> 03:37:46.020]  Вот она подсоединится к той...
[03:37:47.020 --> 03:37:49.020]  Ну, как бы мета-вершина распалась на две вот этим разрезом.
[03:37:50.020 --> 03:37:51.020]  Так вот.
[03:37:52.020 --> 03:37:54.020]  Вот эта вот сама она как вершина, она тоже в какую-то долю разреза попала тогда.
[03:37:54.020 --> 03:37:55.020]  Ну, вот так вот.
[03:37:56.020 --> 03:37:58.020]  В какую долю она попала, кто и подсоединяет.
[03:37:59.020 --> 03:38:03.020]  Видимо, мы вообще забиваем на это ребро, на котором написано fullway,
[03:38:04.020 --> 03:38:06.020]  и просто рассматриваем все ребра в начальном графе.
[03:38:07.020 --> 03:38:08.020]  Ну да.
[03:38:09.020 --> 03:38:10.020]  Сто лишь разницы, что мы...
[03:38:11.020 --> 03:38:12.020]  На это ребро мы забиваем.
[03:38:13.020 --> 03:38:15.020]  Мы рассматриваем, что вот эти вершины, они сжаты...
[03:38:16.020 --> 03:38:18.020]  То есть они соединены со всеми этими, но только это мы сжали в одно.
[03:38:19.020 --> 03:38:22.020]  А все ребра, которые ведут из этой правой штуки влево,
[03:38:22.020 --> 03:38:25.020]  все будут лежать по одну сторону разреза.
[03:38:26.020 --> 03:38:27.020]  Все вот эти вершины, да.
[03:38:28.020 --> 03:38:30.020]  Вершины понятно, а ребра-то?
[03:38:31.020 --> 03:38:33.020]  Ну, какие-то будут пересекать разрез, какие-то нет.
[03:38:34.020 --> 03:38:37.020]  В минимальности разреза они, естественно, тоже будут принимать участие.
[03:38:39.020 --> 03:38:42.020]  Ну, просто мы только что доказали их, как минимум, на первом шаге,
[03:38:43.020 --> 03:38:45.020]  что действительно оказывается, когда мы ищем разрез между игроками,
[03:38:46.020 --> 03:38:47.020]  выгодно эту вершину сжать в одну.
[03:38:48.020 --> 03:38:51.020]  Сейчас я все равно не понял, почему мы, дорогие правые вершины,
[03:38:52.020 --> 03:38:54.020]  должны быть именно в той части, где лежит У.
[03:38:55.020 --> 03:38:57.020]  Почему не в верхней?
[03:38:58.020 --> 03:39:00.020]  Ну, кажется, мы выяснили, что это неправда.
[03:39:01.020 --> 03:39:03.020]  Почему это мы выяснили, что это неправда?
[03:39:04.020 --> 03:39:05.020]  Что мы ее подсоединяем не в той части, где лежит У.
[03:39:06.020 --> 03:39:08.020]  Да, мы подсоединили не там, где, возможно, лежит У, а...
[03:39:09.020 --> 03:39:10.020]  Там, где она оказалась, возможно, в верхней.
[03:39:11.020 --> 03:39:12.020]  Возможно, хотя...
[03:39:13.020 --> 03:39:14.020]  Ну, просто ладно, видимо.
[03:39:15.020 --> 03:39:16.020]  Еще раз можно?
[03:39:17.020 --> 03:39:18.020]  Куда мы подрешим эту вершину?
[03:39:19.020 --> 03:39:20.020]  Я думал, в У.
[03:39:20.020 --> 03:39:21.020]  Не там, где У.
[03:39:22.020 --> 03:39:23.020]  Хотя ладно, может, есть два варианта.
[03:39:24.020 --> 03:39:26.020]  Либо к вершине У, либо туда, где разрез.
[03:39:27.020 --> 03:39:30.020]  Значит, пришло время, видимо, еще какой-то мистической теории.
[03:39:31.020 --> 03:39:32.020]  Туда, где разрез, это куда?
[03:39:33.020 --> 03:39:36.020]  Ну, куда она попала, туда и подвешивать.
[03:39:37.020 --> 03:39:38.020]  Что она?
[03:39:39.020 --> 03:39:40.020]  Мета-вершина.
[03:39:41.020 --> 03:39:42.020]  У меня все еще кокает вот такой момент.
[03:39:43.020 --> 03:39:47.020]  Почему изначально, в самом начале алгоритма, мы просто берем две рандомные вершины,
[03:39:47.020 --> 03:39:53.020]  берем миноразрез между ними и утверждаем, что у нас точно будет ребро с таким миноразрезом.
[03:39:54.020 --> 03:39:57.020]  Потому что ребро у нас, в итоге, там N-1, а КСУ...
[03:39:58.020 --> 03:40:03.020]  И мы, видимо, утверждаем, что таким образом, что и миноразрезов у нас N-1, максимум.
[03:40:04.020 --> 03:40:08.020]  Просто странно, потому что если и миноразрезов различных больше, то у нас все сломалось уже.
[03:40:09.020 --> 03:40:11.020]  Ребро поменюем на пути.
[03:40:12.020 --> 03:40:13.020]  У нас дерево того же, да?
[03:40:14.020 --> 03:40:15.020]  Чего?
[03:40:15.020 --> 03:40:19.020]  Вот это ребро, оно равно миниуму на пути к дереве, на молитву.
[03:40:21.020 --> 03:40:23.020]  Можно говорить, его, выбрать, сколько будет.
[03:40:24.020 --> 03:40:25.020]  Получится уже не на слове.
[03:40:26.020 --> 03:40:27.020]  Ну, максимум, нет.
[03:40:28.020 --> 03:40:29.020]  На мычу.
[03:40:30.020 --> 03:40:32.020]  Ребро и ребро можно вставать в дерево.
[03:40:33.020 --> 03:40:37.020]  Ну, то есть, мы таким образом просто утверждаем, что у нас различных...
[03:40:38.020 --> 03:40:39.020]  Сейчас он будет.
[03:40:40.020 --> 03:40:41.020]  Да, в том числе.
[03:40:42.020 --> 03:40:44.020]  Что у нас различных разрезов не больше, чем N-1.
[03:40:45.020 --> 03:40:46.020]  Вот это уже интересный факт.
[03:40:53.020 --> 03:40:55.020]  Что значит различные разрезы?
[03:40:56.020 --> 03:40:57.020]  По значению.
[03:40:58.020 --> 03:41:03.020]  По размеру потока у нас различных разрезов всего в графе может быть максимум.
[03:41:08.020 --> 03:41:09.020]  Ну, потому что предположим, что больше.
[03:41:10.020 --> 03:41:11.020]  Ну, подходящий.
[03:41:11.020 --> 03:41:16.020]  Тогда как бы у нас не любой разрез может попасть в дерево.
[03:41:17.020 --> 03:41:18.020]  Ладно, отбой тревоги.
[03:41:19.020 --> 03:41:20.020]  Забиваем на U.
[03:41:21.020 --> 03:41:24.020]  Верным все-таки решим и все-таки по разрезу судим, а не по этому.
[03:41:27.020 --> 03:41:28.020]  Вот.
[03:41:29.020 --> 03:41:30.020]  Нет.
[03:41:31.020 --> 03:41:33.020]  А инвариант остается, что существует две вершины.
[03:41:34.020 --> 03:41:35.020]  Просто тут вместо V придется...
[03:41:36.020 --> 03:41:39.020]  Если вершина U оказалась здесь, то значит вместо U какая-то найдется еще вершина.
[03:41:39.020 --> 03:41:40.020]  Скорее всего та же X.
[03:41:41.020 --> 03:41:42.020]  А это второй нетривиальный факт.
[03:41:43.020 --> 03:41:45.020]  Который мы сейчас будем садиться и доказывать.
[03:41:46.020 --> 03:41:47.020]  Значит, факт такой.
[03:41:50.020 --> 03:41:51.020]  Ну, факт на самом деле...
[03:41:52.020 --> 03:41:53.020]  Хочется доказать следующее.
[03:41:54.020 --> 03:41:55.020]  Внимание.
[03:41:56.020 --> 03:41:57.020]  Вот, допустим, мы тут попилили.
[03:41:58.020 --> 03:41:59.020]  У нас произошел вот такой...
[03:42:00.020 --> 03:42:01.020]  И разрез, например, лег вот так.
[03:42:02.020 --> 03:42:03.020]  И оказалось, что вершина U находится здесь.
[03:42:04.020 --> 03:42:08.020]  Тогда я утверждаю, что в этой вершине найдется вершина.
[03:42:09.020 --> 03:42:10.020]  Ну, на самом деле...
[03:42:11.020 --> 03:42:12.020]  Просто это будет вершина X.
[03:42:13.020 --> 03:42:15.020]  Такая, что на самом деле F от V тупо равно...
[03:42:16.020 --> 03:42:17.020]  Там, видимо, будет F от X, V.
[03:42:26.020 --> 03:42:27.020]  Вот, понятно?
[03:42:28.020 --> 03:42:30.020]  Ну, не X, наверное, какая-то вершина X.
[03:42:31.020 --> 03:42:33.020]  В смысле, какая-то вершина X это нет вершины.
[03:42:34.020 --> 03:42:36.020]  Ну, скажем так.
[03:42:36.020 --> 03:42:41.020]  Ну, на самом деле это будет X, потому что вполне вероятно, что в этой вершине, кроме X больше ничего нет.
[03:42:42.020 --> 03:42:43.020]  Нет, а может быть и есть, почему-то.
[03:42:44.020 --> 03:42:47.020]  Ну, у нас доказательства на это обращать внимание не будет.
[03:42:49.020 --> 03:42:50.020]  Вот, значит, действительно.
[03:42:51.020 --> 03:42:53.020]  Как мы это попытаемся доказать?
[03:42:55.020 --> 03:43:00.020]  Мы говорим, что мы вершину V засовываем в противоположную к вершине.
[03:43:01.020 --> 03:43:02.020]  Ну, вот.
[03:43:03.020 --> 03:43:04.020]  Нет, предположим, что так получилось.
[03:43:04.020 --> 03:43:05.020]  Просто рассмотрим Минразрез.
[03:43:06.020 --> 03:43:10.020]  У вполне могло оказаться и с той же стороны, что и остильной.
[03:43:11.020 --> 03:43:12.020]  Но если это так произошло, значит, мы победили.
[03:43:13.020 --> 03:43:14.020]  Значит, само всё образовалось.
[03:43:16.020 --> 03:43:19.020]  А теперь предположим, что нам не повезло.
[03:43:21.020 --> 03:43:22.020]  Ну, могло быть такое.
[03:43:25.020 --> 03:43:28.020]  Но тогда оказывается маленькая приятная теперь вещь.
[03:43:28.020 --> 03:43:39.020]  Заметим, что мы попытаемся просто показать, что нам действительно хочется показать, что F от XV на самом деле это F от UV.
[03:43:40.020 --> 03:43:41.020]  По большому счёту.
[03:43:42.020 --> 03:43:44.020]  Так, но как же нам это показать?
[03:43:45.020 --> 03:43:46.020]  Ну, начнём с простого.
[03:43:47.020 --> 03:43:49.020]  Начнём с того, что простое утверждение.
[03:43:50.020 --> 03:43:53.020]  F от XV меньше либо равно, чем F от UV.
[03:43:53.020 --> 03:43:57.020]  F от XV меньше либо равно, чем F от UV.
[03:44:02.020 --> 03:44:03.020]  Это простое утверждение.
[03:44:04.020 --> 03:44:05.020]  Почему оно простое?
[03:44:06.020 --> 03:44:13.020]  Да потому что дело в том, что вот у нас есть F от UV, это величина какого-то разреза между XV, правда?
[03:44:15.020 --> 03:44:17.020]  Ну да, такое-то не может быть меньше.
[03:44:18.020 --> 03:44:19.020]  То есть вот.
[03:44:23.020 --> 03:44:24.020]  Это простое утверждение.
[03:44:25.020 --> 03:44:26.020]  Это простое утверждение.
[03:44:27.020 --> 03:44:28.020]  Это простое утверждение.
[03:44:29.020 --> 03:44:30.020]  Это простое утверждение.
[03:44:31.020 --> 03:44:32.020]  Это простое утверждение.
[03:44:33.020 --> 03:44:34.020]  Это простое утверждение.
[03:44:35.020 --> 03:44:36.020]  Это простое утверждение.
[03:44:37.020 --> 03:44:38.020]  Это простое утверждение.
[03:44:39.020 --> 03:44:40.020]  Это простое утверждение.
[03:44:41.020 --> 03:44:42.020]  Это простое утверждение.
[03:44:43.020 --> 03:44:44.020]  Это простое утверждение.
[03:44:45.020 --> 03:44:46.020]  Это простое утверждение.
[03:44:47.020 --> 03:44:48.020]  Это простое утверждение.
[03:44:49.020 --> 03:44:50.020]  Это простое утверждение.
[03:44:50.020 --> 03:44:51.020]  Это простое утверждление.
[03:44:52.020 --> 03:44:53.020]  Это простое утверждение.
[03:44:54.020 --> 03:44:55.020]  И это простое утверждение.
[03:44:56.020 --> 03:44:57.020]  Это простое утверждение.
[03:44:58.020 --> 03:44:59.020]  Это простое утверждение над Q1.
[03:45:00.020 --> 03:45:01.020]  Это простое утверждение.
[03:45:02.020 --> 03:45:03.020]  Ну и Q2.
[03:45:04.020 --> 03:45:05.020]  Это простое утверждение над Q1.
[03:45:06.020 --> 03:45:07.020]  Это простое утверждение.
[03:45:08.020 --> 03:45:09.020]  Ну joke the mitzvah.
[03:45:10.020 --> 03:45:11.020]  Это простое утверждение.
[03:45:12.020 --> 03:45:13.020]  Ну это простое утверждение.
[03:45:14.020 --> 03:45:15.020]  Это простое утверждение над Q2.
[03:45:16.020 --> 03:45:17.020]  Ну Q2.
[03:45:17.020 --> 03:45:24.480]  Но, с другой стороны, утверждать, что что-то, видимо, где-то
[03:45:24.480 --> 03:45:25.480]  убить можно.
[03:45:25.480 --> 03:45:30.240]  Вот действительно, как вы думаете, да, что, ну вот,
[03:45:30.240 --> 03:45:32.840]  то есть можно ли теперь вот из этих троих кого-нибудь
[03:45:32.840 --> 03:45:34.000]  взять и убить.
[03:45:34.000 --> 03:45:48.980]  Давайте внимательно посмотрите, я утверждаю, что, как бы,
[03:45:49.860 --> 03:45:50.860]  можно уверенно убить.
[03:45:50.860 --> 03:45:51.860]  Почему?
[03:45:51.860 --> 03:45:52.860]  Ну, почему?
[03:45:52.860 --> 03:45:53.860]  Что-то понятное.
[03:45:53.860 --> 03:46:20.940]  Ведь игрок же это не просто так.
[03:46:20.940 --> 03:46:31.900]  Нет, наоборот, меньше либравным доказали, теперь доказываем
[03:46:31.900 --> 03:46:32.900]  больше либравным.
[03:46:32.900 --> 03:46:33.900]  Чего?
[03:46:33.900 --> 03:46:34.900]  УВ?
[03:46:34.900 --> 03:46:35.900]  Да, совершенно верно.
[03:46:35.900 --> 03:46:36.900]  Значит...
[03:46:37.460 --> 03:46:50.460]  Нет, сейчас, погодите, почему?
[03:46:50.460 --> 03:47:03.460]  Нет, погодите, вот сейчас, погодите, почему?
[03:47:04.020 --> 03:47:09.020]  Нет, погодите, вот сейчас, погодите, сейчас про это...
[03:47:09.020 --> 03:47:12.020]  УВ минимальный разрез ХВ какой-нибудь?
[03:47:12.020 --> 03:47:13.020]  Нет?
[03:47:13.020 --> 03:47:14.020]  Нет.
[03:47:14.020 --> 03:47:18.020]  Нет, ну, смотрите, нет, вот это вот, нет, погодите,
[03:47:18.020 --> 03:47:21.020]  у нас было вот это простое утверждение, которое смотрело
[03:47:21.020 --> 03:47:24.660]  здесь, что F от УВ это в том числе и разрез между ХВ,
[03:47:24.660 --> 03:47:26.020]  поэтому F от ХВ еще меньше.
[03:47:26.020 --> 03:47:32.020]  Так, что мы теперь хотим?
[03:47:32.580 --> 03:47:38.580]  А, то есть теперь мы каким-то образом на халяву хотим,
[03:47:38.580 --> 03:47:42.260]  что F от ХВ, к сожалению, да, у нас больше никаких
[03:47:42.260 --> 03:47:43.260]  разрезов нет.
[03:47:43.260 --> 03:47:46.540]  Но пока можно заметить следующее, я утверждаю, что тем же простым
[03:47:46.540 --> 03:47:49.580]  образом, заметив, что вот это вот, это минимальный
[03:47:49.580 --> 03:47:55.580]  разрез между ХВ, но также это и какой-то разрез между
[03:47:55.580 --> 03:47:57.580]  УВ, правда?
[03:47:58.140 --> 03:48:02.140]  Следовательно, F от ХВ больше либо равно, чем F от УВ.
[03:48:06.140 --> 03:48:10.140]  То есть это позволяет нам сказать, просто убить вот
[03:48:10.140 --> 03:48:17.140]  эту штуку, потому что это равно минимуму из F у и F от УВ.
[03:48:19.140 --> 03:48:21.140]  Вот, понятно, да?
[03:48:25.140 --> 03:48:27.140]  Мы так предположили.
[03:48:28.140 --> 03:48:32.140]  Еще раз, мы пытаемся доказать, что после того, как мы вот
[03:48:32.140 --> 03:48:35.140]  так вот проведем разрез между ХВ и АСТ, и вот это
[03:48:35.140 --> 03:48:37.140]  отправим в нужную долю, то там найдется хорошая
[03:48:37.140 --> 03:48:38.140]  вершина.
[03:48:38.140 --> 03:48:41.140]  Но там оказалось, что если У нашлась тут, то мы победили,
[03:48:41.140 --> 03:48:45.140]  а если У нашлась тут, значит докажем, что Х нам тоже,
[03:48:45.140 --> 03:48:47.140]  в принципе, подойдет.
[03:48:47.700 --> 03:48:50.700]  F от ХВ больше, чем F от УВ?
[03:48:50.700 --> 03:48:51.700]  Да.
[03:48:51.700 --> 03:48:53.700]  Потому что УВ – это разрез между ХВ?
[03:48:53.700 --> 03:48:57.700]  Нет, потому что вот этот F от ХВ – это какой-то
[03:48:57.700 --> 03:48:59.700]  разрез между УВ.
[03:49:03.700 --> 03:49:04.700]  Ну да.
[03:49:04.700 --> 03:49:05.700]  Вот.
[03:49:05.700 --> 03:49:08.700]  Поэтому внутри вот этого минимума, значит, одно
[03:49:08.700 --> 03:49:12.700]  из чисел заведомо не меньше другого, и вот это больше
[03:49:12.700 --> 03:49:13.700]  просто убираем.
[03:49:14.260 --> 03:49:15.260]  Вот.
[03:49:15.260 --> 03:49:17.260]  Теперь, если бы мы еще и доказали, что F от ИГКУ
[03:49:17.260 --> 03:49:22.260]  больше либо равен F от УВ, то, конечно, мы бы победили,
[03:49:22.260 --> 03:49:23.260]  правда?
[03:49:23.260 --> 03:49:24.260]  Но маленькая проблема.
[03:49:24.260 --> 03:49:28.260]  Как вы абсолютно правильно сказали, как бы разрез от
[03:49:28.260 --> 03:49:31.260]  F от ИГКУ мы не знаем вообще ничего.
[03:49:33.260 --> 03:49:35.260]  То есть вообще ничего, потому что в плане, что, заметим,
[03:49:35.260 --> 03:49:39.260]  что все наши разрезы, которые мы тут рассматривали, они
[03:49:39.260 --> 03:49:46.260]  обладают таким свойством, что ИГКУ все время в одной
[03:49:46.260 --> 03:49:47.260]  доле, оказывается.
[03:49:47.260 --> 03:49:52.260]  Тогда, смотрите, сейчас будет вообще просто супер,
[03:49:52.260 --> 03:49:53.260]  прям читерская идея.
[03:49:53.260 --> 03:49:56.260]  Давайте этим воспользуемся.
[03:49:56.260 --> 03:50:03.260]  А давайте просто возьмем, соединим ИГКУ ребром какого-нибудь
[03:50:03.260 --> 03:50:06.260]  веса, например, 5.
[03:50:09.260 --> 03:50:11.260]  Что поменяется?
[03:50:14.260 --> 03:50:18.260]  Заметим, что минимальный разрез между У и В от этого
[03:50:18.260 --> 03:50:19.260]  не поменялся.
[03:50:19.260 --> 03:50:20.260]  Осторожно?
[03:50:21.260 --> 03:50:24.260]  И минимальный разрез, видимо, вот этот вот тоже никак
[03:50:24.260 --> 03:50:26.260]  не поменялся, правда?
[03:50:27.260 --> 03:50:30.260]  То есть поменялось единственное только то, что я здесь могу
[03:50:30.260 --> 03:50:34.260]  написать не F и ГКУ, а F и ГКУ плюс 5.
[03:50:39.260 --> 03:50:49.260]  Ну, точнее так.
[03:50:51.260 --> 03:50:56.260]  Почему FXV от этого не поменяется?
[03:50:59.260 --> 03:51:02.260]  А какие страны по той же причине?
[03:51:03.260 --> 03:51:07.260]  Потому что, смотрите, мы нашли минразрез между X и Y.
[03:51:09.260 --> 03:51:11.260]  А теперь заметим, что если мы теперь хотим искать
[03:51:11.260 --> 03:51:15.260]  минразрез между X и Y, то вот это вот мы можем...
[03:51:15.260 --> 03:51:17.260]  А, блин, рекурсия, да?
[03:51:18.260 --> 03:51:20.260]  А, нет, все правильно.
[03:51:20.260 --> 03:51:23.260]  Мы можем вот это вот ужать в одну вершину.
[03:51:23.260 --> 03:51:25.260]  Просто по ранее доказанной лемме, правда?
[03:51:26.260 --> 03:51:28.260]  И тогда получается, что вот это ребро на что не влияет,
[03:51:28.260 --> 03:51:30.260]  потому что оно все равно окажется сжато.
[03:51:33.260 --> 03:51:36.260]  То есть вот такой неожиданный финт ушами.
[03:51:37.260 --> 03:51:38.260]  Ну и заметим, что туда записано.
[03:51:38.260 --> 03:51:40.260]  Да, но заметим, что 5 это Дед Мороз.
[03:51:40.260 --> 03:51:42.260]  То есть записать можно все что угодно.
[03:51:42.260 --> 03:51:45.260]  Там 5, 5, там в степени 55.
[03:51:45.260 --> 03:51:49.260]  В общем, короче, я тут сколько угодно большое число могу написать.
[03:51:49.260 --> 03:51:52.260]  57 в степени 179, как же ваши любимые числа.
[03:51:52.260 --> 03:51:54.260]  Ой, Господи.
[03:51:58.260 --> 03:52:00.260]  Ну вот, вот такая магия, да.
[03:52:00.260 --> 03:52:01.260]  Да, магия, но тем не менее.
[03:52:01.260 --> 03:52:03.260]  Вот такой парадокс, да.
[03:52:03.260 --> 03:52:05.260]  То есть может быть контринтуитивно, но...
[03:52:06.260 --> 03:52:08.260]  Что за дичь? У нас же могла быть...
[03:52:09.260 --> 03:52:11.260]  То есть это мы умозрительно сделали?
[03:52:11.260 --> 03:52:13.260]  Или это мы буквально умозрительно сделали?
[03:52:13.260 --> 03:52:15.260]  Чего?
[03:52:15.260 --> 03:52:17.260]  Ну, в алгоритме мы, естественно, этого не делаем.
[03:52:17.260 --> 03:52:19.260]  Но мы сделали умозрительно и заметили,
[03:52:19.260 --> 03:52:21.260]  что мин разреза от этого не поменяется.
[03:52:23.260 --> 03:52:25.260]  Потому что у EV это не просто вершина,
[03:52:25.260 --> 03:52:29.260]  а вершины, которые в обоих этих разрезах почему-то попадают в одну долю.
[03:52:29.260 --> 03:52:31.260]  То есть следовательно, если мы между ними добавим ребро,
[03:52:31.260 --> 03:52:33.260]  то ничего не поменяется.
[03:52:34.260 --> 03:52:36.260]  Ну, другие разрезы не поменяются.
[03:52:37.260 --> 03:52:40.260]  Ну, вот рассматриваемые нами разрезы не поменяются,
[03:52:40.260 --> 03:52:42.260]  а разрез между UV увеличится на это ребро.
[03:52:44.260 --> 03:52:49.260]  Мы просто в рамках доказательств конкретного факта это используем.
[03:52:50.260 --> 03:52:52.260]  Да, то есть это мы используем для того,
[03:52:52.260 --> 03:52:54.260]  что мы, получается, можем показать,
[03:52:54.260 --> 03:52:57.260]  что fxy больше либо равно минимуму из f от UV,
[03:52:57.260 --> 03:52:59.260]  f и gq плюс абсолютно любая константа.
[03:53:04.260 --> 03:53:06.260]  Ну, доказательств такое.
[03:53:06.260 --> 03:53:08.260]  Ну, вот, Даня, вот, да, вот.
[03:53:08.260 --> 03:53:10.260]  Ну, что делать, да?
[03:53:10.260 --> 03:53:12.260]  Да.
[03:53:12.260 --> 03:53:14.260]  Может быть так же, если это константа 0,
[03:53:14.260 --> 03:53:16.260]  тогда это...
[03:53:16.260 --> 03:53:18.260]  Нет, это будет верно.
[03:53:18.260 --> 03:53:20.260]  Нет, скажи так.
[03:53:20.260 --> 03:53:22.260]  При 0 это будет просто fxv больше,
[03:53:22.260 --> 03:53:24.260]  либо равно вот этого.
[03:53:24.260 --> 03:53:26.260]  Это верное утверждение.
[03:53:26.260 --> 03:53:28.260]  Да, и вполне вероятно,
[03:53:28.260 --> 03:53:30.260]  что f и gq на самом деле меньше,
[03:53:30.260 --> 03:53:32.260]  чем f от UV.
[03:53:32.260 --> 03:53:34.260]  Это вполне вероятно.
[03:53:34.260 --> 03:53:36.260]  Но...
[03:53:36.260 --> 03:53:38.260]  Но так же верно и то,
[03:53:38.260 --> 03:53:40.260]  что если взять минимум из f от gq плюс
[03:53:40.260 --> 03:53:42.260]  f от UV,
[03:53:42.260 --> 03:53:44.260]  то тоже, оказывается, это верно.
[03:53:44.260 --> 03:53:46.260]  Вот, с любой константой.
[03:53:46.260 --> 03:53:48.260]  Но так как мы, наконец, когда-то,
[03:53:48.260 --> 03:53:50.260]  возьмем любую константу так,
[03:53:50.260 --> 03:53:52.260]  чтобы f от UV стало меньше,
[03:53:52.260 --> 03:53:54.260]  и отсюда выводим,
[03:53:54.260 --> 03:53:56.260]  что f от xv больше либо равно,
[03:53:56.260 --> 03:53:58.260]  чем f от UV.
[03:54:06.260 --> 03:54:08.260]  Да, да.
[03:54:08.260 --> 03:54:10.260]  Я чувствую его мысль.
[03:54:10.260 --> 03:54:12.260]  Да, feel my energy.
[03:54:12.260 --> 03:54:14.260]  Да, и вот.
[03:54:14.260 --> 03:54:16.260]  Сейчас, как мы еще раз согласуем
[03:54:16.260 --> 03:54:18.260]  это с f от xv?
[03:54:18.260 --> 03:54:20.260]  Очень просто.
[03:54:20.260 --> 03:54:22.260]  На f от xv добавление этого ребра
[03:54:22.260 --> 03:54:24.260]  не влияет никак, как мы выяснили.
[03:54:24.260 --> 03:54:26.260]  Потому что в старом графе
[03:54:26.260 --> 03:54:28.260]  без добавления этого ребра
[03:54:28.260 --> 03:54:30.260]  разрез между...
[03:54:30.260 --> 03:54:32.260]  разрез между x и v
[03:54:32.260 --> 03:54:34.260]  минимально отправлял y и u
[03:54:34.260 --> 03:54:36.260]  в одну долю.
[03:54:36.260 --> 03:54:38.260]  Это теорема, которую мы доказали
[03:54:38.260 --> 03:54:40.260]  перед этим.
[03:54:42.260 --> 03:54:44.260]  Вот, поэтому как бы от добавления этого
[03:54:44.260 --> 03:54:46.260]  ребра f от xv не поменялся.
[03:54:46.260 --> 03:54:48.260]  f от UV
[03:54:48.260 --> 03:54:50.260]  тоже очевидно
[03:54:50.260 --> 03:54:52.260]  не поменялся.
[03:54:52.260 --> 03:54:54.260]  Потому что был вот такой
[03:54:54.260 --> 03:54:56.260]  минразрез, но от того,
[03:54:56.260 --> 03:54:58.260]  что вы тут добавили ребро,
[03:54:58.260 --> 03:55:00.260]  менять этот разрез смысла нет.
[03:55:00.260 --> 03:55:02.260]  Ну и все.
[03:55:02.260 --> 03:55:04.260]  То есть f от xv
[03:55:04.260 --> 03:55:06.260]  все еще остался больше либо равно,
[03:55:06.260 --> 03:55:08.260]  чем f от UV под тем же причинам.
[03:55:08.260 --> 03:55:10.260]  Но единственное, что поменялось
[03:55:10.260 --> 03:55:12.260]  в этих утверждениях, это f от y,
[03:55:12.260 --> 03:55:14.260]  который увеличился на это ребро.
[03:55:14.260 --> 03:55:16.260]  Тут просто
[03:55:16.260 --> 03:55:18.260]  без комментариев.
[03:55:18.260 --> 03:55:20.260]  Но это уже другой вопрос.
[03:55:20.260 --> 03:55:22.260]  И
[03:55:22.260 --> 03:55:24.260]  что нужно употреблять, чтобы
[03:55:24.260 --> 03:55:26.260]  это придумать?
[03:55:26.260 --> 03:55:28.260]  Вопросы к авторам я не знаю.
[03:55:30.260 --> 03:55:32.260]  Есть контакты?
[03:55:32.260 --> 03:55:34.260]  Скажем так.
[03:55:34.260 --> 03:55:36.260]  Мы еще не построили.
[03:55:36.260 --> 03:55:38.260]  Мы рассмотрели, что мы как-то второй шаг
[03:55:38.260 --> 03:55:40.260]  адекватно сделали.
[03:55:40.260 --> 03:55:42.260]  Но на самом деле
[03:55:42.260 --> 03:55:44.260]  основное интеллектуальное ядро
[03:55:44.260 --> 03:55:46.260]  мы в общем-то сделали.
[03:55:46.260 --> 03:55:48.260]  Мне пока не приятно, почему то,
[03:55:48.260 --> 03:55:50.260]  что можно было построить.
[03:55:50.260 --> 03:55:52.260]  Ничего.
[03:55:52.260 --> 03:55:54.260]  Нет, дальше мы
[03:55:54.260 --> 03:55:56.260]  еще раз теперь.
[03:55:56.260 --> 03:55:58.260]  В утверждение поверили?
[03:55:58.260 --> 03:56:00.260]  Хорошо.
[03:56:00.260 --> 03:56:02.260]  Тогда смотрите.
[03:56:02.260 --> 03:56:04.260]  Как у нас будет устроен алгоритм?
[03:56:04.260 --> 03:56:06.260]  Алгоритм будет устроен так.
[03:56:12.260 --> 03:56:14.260]  Вот он у меня.
[03:56:32.260 --> 03:56:34.260]  Знаете, это отбивка.
[03:56:34.260 --> 03:56:36.260]  Знаете, у одного лектора
[03:56:36.260 --> 03:56:38.260]  когда он что-то стирает или быстро делает
[03:56:38.260 --> 03:56:40.260]  на балалайчике,
[03:56:40.260 --> 03:56:42.260]  там у Маврина что-то такое
[03:56:42.260 --> 03:56:44.260]  или там у Трушины еще такой прикол есть,
[03:56:44.260 --> 03:56:46.260]  когда он там выписывает какое-то вот это.
[03:56:46.260 --> 03:56:48.260]  Вот.
[03:56:48.260 --> 03:56:50.260]  Значит, делаем так.
[03:56:50.260 --> 03:56:52.260]  В каждый момент времени у нас есть
[03:56:52.260 --> 03:56:54.260]  мистический граф из метавершин.
[03:56:58.260 --> 03:57:00.260]  Метавершины. Вот они.
[03:57:02.260 --> 03:57:04.260]  На этих метавершинах образуется дерево.
[03:57:06.260 --> 03:57:08.260]  Вот.
[03:57:08.260 --> 03:57:10.260]  Вот так нарисуем.
[03:57:16.260 --> 03:57:18.260]  Вот.
[03:57:20.260 --> 03:57:22.260]  И про это дерево у нас будет
[03:57:22.260 --> 03:57:24.260]  такой инвариант.
[03:57:24.260 --> 03:57:26.260]  Значит, на каждом дереве нарисовано какое-то
[03:57:26.260 --> 03:57:28.260]  мистическое число f.
[03:57:28.260 --> 03:57:30.260]  И гарантируется следующее, внимание.
[03:57:30.260 --> 03:57:32.260]  Гарантируется, что
[03:57:32.260 --> 03:57:34.260]  можно в соединяемых метавершинах
[03:57:34.260 --> 03:57:36.260]  выбрать по одной вершине
[03:57:36.260 --> 03:57:38.260]  a и b.
[03:57:40.260 --> 03:57:42.260]  Такой что, внимание,
[03:57:42.260 --> 03:57:44.260]  минимальный разрез между a и b
[03:57:44.260 --> 03:57:46.260]  равен, во-первых, именно этому числу.
[03:57:46.260 --> 03:57:48.260]  А во-вторых,
[03:57:48.260 --> 03:57:50.260]  если рассмотреть, что он представляет себя по вершинам,
[03:57:50.260 --> 03:57:52.260]  то он представляет из себя ровно вот это.
[03:57:52.260 --> 03:57:54.260]  Вот это.
[03:58:04.260 --> 03:58:06.260]  Вот. Понятно, да?
[03:58:10.260 --> 03:58:12.260]  Опять печеньки.
[03:58:12.260 --> 03:58:14.260]  Нет, ну инвариант-то понятен.
[03:58:14.260 --> 03:58:16.260]  То есть у нас ставка на инвариант.
[03:58:16.260 --> 03:58:18.260]  Тогда, если мы верим в этот инвариант,
[03:58:18.260 --> 03:58:20.260]  то алгоритм заканчивается, когда в каждой мета
[03:58:20.260 --> 03:58:22.260]  в вершине останется по одной вершине.
[03:58:24.260 --> 03:58:26.260]  Логично, да?
[03:58:28.260 --> 03:58:30.260]  Ну и в принципе
[03:58:30.260 --> 03:58:32.260]  тогда из этого будет
[03:58:32.260 --> 03:58:34.260]  автоматически следовать,
[03:58:34.260 --> 03:58:36.260]  что это
[03:58:36.260 --> 03:58:38.260]  мистическое...
[03:58:40.260 --> 03:58:42.260]  То есть получится, что у нас есть какое-то
[03:58:42.260 --> 03:58:44.260]  мистическое дерево.
[03:58:44.260 --> 03:58:46.260]  Такое, что
[03:58:46.260 --> 03:58:48.260]  про каждую пару вершин
[03:58:48.260 --> 03:58:50.260]  мы знаем, что минразрез между ними
[03:58:50.260 --> 03:58:52.260]  это ровно вот это, правда?
[03:58:52.260 --> 03:58:54.260]  Понимаете, да?
[03:58:54.260 --> 03:58:56.260]  А которые не соседние?
[03:58:56.260 --> 03:58:58.260]  Что-что?
[03:58:58.260 --> 03:59:00.260]  Вот. А теперь давайте разбираться.
[03:59:00.260 --> 03:59:02.260]  Теперь я утверждаю,
[03:59:02.260 --> 03:59:04.260]  ну теперь очень хочется утверждать,
[03:59:04.260 --> 03:59:06.260]  что минимальный разрез
[03:59:06.260 --> 03:59:08.260]  между этими двумя вершинами
[03:59:08.260 --> 03:59:10.260]  это минимум
[03:59:10.260 --> 03:59:12.260]  на этом пути, правда?
[03:59:12.260 --> 03:59:14.260]  Ну вот, давайте посмотрим.
[03:59:14.260 --> 03:59:16.260]  Доказательство будет очень простое.
[03:59:16.260 --> 03:59:18.260]  Ну, во-первых, заметим, что
[03:59:18.260 --> 03:59:20.260]  минразрез между этими штуками
[03:59:20.260 --> 03:59:22.260]  он больше либо равен
[03:59:22.260 --> 03:59:24.260]  минимуму на этом пути.
[03:59:24.260 --> 03:59:26.260]  Это мы уже точно знаем, правда?
[03:59:28.260 --> 03:59:30.260]  Ну почему?
[03:59:30.260 --> 03:59:32.260]  Потому что если это, допустим,
[03:59:32.260 --> 03:59:34.260]  x и y это v1, v2, v3,
[03:59:34.260 --> 03:59:36.260]  то мы вот это знаем, да?
[03:59:36.260 --> 03:59:38.260]  Вот это знаем, да?
[03:59:38.260 --> 03:59:40.260]  То есть,
[03:59:40.260 --> 03:59:42.260]  f от x и y больше либо равен
[03:59:42.260 --> 03:59:44.260]  минимуму из этих разрезов.
[03:59:44.260 --> 03:59:46.260]  Но!
[03:59:46.260 --> 03:59:48.260]  Рассмотрим вот этот минимум.
[03:59:48.260 --> 03:59:50.260]  Вот он, дельта, да?
[03:59:50.260 --> 03:59:52.260]  Заметим, что
[03:59:52.260 --> 03:59:54.260]  разрез между x и y,
[03:59:54.260 --> 03:59:56.260]  x и y, которые равен
[03:59:56.260 --> 03:59:58.260]  дельта, существует.
[03:59:58.260 --> 04:00:00.260]  Вот он.
[04:00:00.260 --> 04:00:02.260]  Ну, в смысле, вот он.
[04:00:04.260 --> 04:00:06.260]  Просто в явном виде, да?
[04:00:06.260 --> 04:00:08.260]  То есть, он, значит, получается
[04:00:08.260 --> 04:00:10.260]  и больше либо равен, и меньше либо равен.
[04:00:10.260 --> 04:00:12.260]  Значит, получается, это и есть
[04:00:12.260 --> 04:00:14.260]  минимальный разрез еще и между x и y,
[04:00:14.260 --> 04:00:16.260]  а также между любыми двумя вершинами, которые
[04:00:16.260 --> 04:00:18.260]  тут имеют место быть.
[04:00:18.260 --> 04:00:20.260]  Не, между любыми
[04:00:20.260 --> 04:00:22.260]  другими вам не обязан быть минимальным.
[04:00:22.260 --> 04:00:24.260]  А, ну согласен, хорошо, да.
[04:00:24.260 --> 04:00:26.260]  Это критически важно.
[04:00:26.260 --> 04:00:28.260]  Да-да-да, извините, ошибся.
[04:00:28.260 --> 04:00:30.260]  А он больше либо равен, потому что есть пути
[04:00:30.260 --> 04:00:32.260]  за разрезом? Ну, потому что да.
[04:00:32.260 --> 04:00:34.260]  Это же не просто пути, это конкретные разрезы
[04:00:34.260 --> 04:00:36.260]  между, да.
[04:00:36.260 --> 04:00:38.260]  Ну, если мы докажем,
[04:00:38.260 --> 04:00:40.260]  что этот вариант соблюдается, то да.
[04:00:40.260 --> 04:00:42.260]  А зачем мы делали тогда
[04:00:42.260 --> 04:00:44.260]  все это?
[04:00:44.260 --> 04:00:46.260]  Что?
[04:00:46.260 --> 04:00:48.260]  Нет, это мы пока делали для разминки, чтобы просто
[04:00:48.260 --> 04:00:50.260]  войти в эту штуку и показать, что
[04:00:50.260 --> 04:00:52.260]  дерево вообще есть.
[04:00:52.260 --> 04:00:54.260]  То есть, в дальнейшее это мы как бы углубляем эти знания.
[04:00:54.260 --> 04:00:56.260]  Но, как бы, если
[04:00:56.260 --> 04:00:58.260]  вас задача просто показать, что дерево существует,
[04:00:58.260 --> 04:01:00.260]  то вот, пожалуйста.
[04:01:00.260 --> 04:01:02.260]  Вот.
[04:01:02.260 --> 04:01:04.260]  А тут оказывается, что просто его можно строить
[04:01:04.260 --> 04:01:06.260]  за В квадрат потоков, а за В потоков.
[04:01:08.260 --> 04:01:10.260]  Ну и теперь пришло время, наверное, финалочки.
[04:01:10.260 --> 04:01:12.260]  Пришло время понять, почему,
[04:01:12.260 --> 04:01:14.260]  когда мы... Потому что на каждом шаре алгоритмы
[04:01:14.260 --> 04:01:16.260]  что мы теперь делаем? Выбираем две первые попавшиеся
[04:01:16.260 --> 04:01:18.260]  вершины, да.
[04:01:18.260 --> 04:01:20.260]  Ну, во-первых, сжимаем
[04:01:22.260 --> 04:01:24.260]  каждую из этих вершин
[04:01:24.260 --> 04:01:26.260]  во что-то единое, да.
[04:01:28.260 --> 04:01:30.260]  Сжимаем, сжимаем и сжимаем.
[04:01:34.260 --> 04:01:36.260]  Нет.
[04:01:36.260 --> 04:01:38.260]  А, потому что, да, в какой
[04:01:38.260 --> 04:01:40.260]  вершине выделял? А, ну давайте я вот в этой
[04:01:40.260 --> 04:01:42.260]  вершине, допустим, выделял вот эти новые
[04:01:42.260 --> 04:01:44.260]  вершины, мы их назовем, давайте, по IQ.
[04:01:44.260 --> 04:01:46.260]  Да, тогда тут вот так вот
[04:01:46.260 --> 04:01:48.260]  вот такое объединение, на самом деле.
[04:01:48.260 --> 04:01:50.260]  Вот, вот.
[04:01:50.260 --> 04:01:52.260]  Нет, почему?
[04:01:52.260 --> 04:01:54.260]  Нет, слева.
[04:01:54.260 --> 04:01:56.260]  Ой-ой-ой, ух ты.
[04:01:56.260 --> 04:01:58.260]  Вот, вот, теперь так.
[04:01:58.260 --> 04:02:00.260]  То есть, ну да, три вершинки, теперь да.
[04:02:00.260 --> 04:02:02.260]  И теперь я утверждаю, что теперь каждую из них
[04:02:02.260 --> 04:02:04.260]  нужно сжать,
[04:02:04.260 --> 04:02:06.260]  каждую из них нужно сжать,
[04:02:06.260 --> 04:02:08.260]  найти имен разрез
[04:02:08.260 --> 04:02:10.260]  и в этом разрезе
[04:02:10.260 --> 04:02:12.260]  посмотреть, куда эти вершинки попали и туда
[04:02:12.260 --> 04:02:14.260]  их и подвести.
[04:02:22.260 --> 04:02:24.260]  Вот.
[04:02:24.260 --> 04:02:26.260]  Спрашиваю, да, вы, наверное, спросите,
[04:02:26.260 --> 04:02:28.260]  а почему, собственно, так, да?
[04:02:28.260 --> 04:02:30.260]  Скажите, вопрос, как
[04:02:30.260 --> 04:02:32.260]  найти такой разрез,
[04:02:32.260 --> 04:02:34.260]  чтобы целиком влезли
[04:02:34.260 --> 04:02:36.260]  сердце?
[04:02:36.260 --> 04:02:38.260]  Так, сжать каждую из этих нот.
[04:02:38.260 --> 04:02:40.260]  Нет, просто я не сказал, что каждый из этих
[04:02:40.260 --> 04:02:42.260]  сжатых вершин подвесится к одной доле.
[04:02:44.260 --> 04:02:46.260]  Кто-то из них подвесится к одной, а кто-то
[04:02:46.260 --> 04:02:48.260]  к другой. И это нормально для нас.
[04:02:52.260 --> 04:02:54.260]  И мы подвесим их. Да, мы только что доказывали, что
[04:02:54.260 --> 04:02:56.260]  к другой доле подвешивать можно, там найдется.
[04:02:56.260 --> 04:02:58.260]  Ну да.
[04:02:58.260 --> 04:03:00.260]  Главное, что
[04:03:00.260 --> 04:03:02.260]  нужно подвесить к той доле, которая оказалась
[04:03:02.260 --> 04:03:04.260]  в миноразрезе.
[04:03:04.260 --> 04:03:06.260]  Понятно. Мы доказали, что, в смысле,
[04:03:06.260 --> 04:03:08.260]  нам не важно, к какой доле,
[04:03:08.260 --> 04:03:10.260]  в другой доле тоже найдется нужная вершина.
[04:03:10.260 --> 04:03:12.260]  Ну, по сути, да.
[04:03:12.260 --> 04:03:14.260]  Единственная проблема, что в данном случае надо доказать,
[04:03:14.260 --> 04:03:16.260]  что это можно делать одновременно
[04:03:16.260 --> 04:03:18.260]  для разных вершин,
[04:03:18.260 --> 04:03:20.260]  потому что мы это доказывали все-таки для одной.
[04:03:20.260 --> 04:03:22.260]  Мерзость.
[04:03:22.260 --> 04:03:24.260]  Да, мерзость.
[04:03:24.260 --> 04:03:26.260]  Скорее это...
[04:03:26.260 --> 04:03:28.260]  Но это чего?
[04:03:30.260 --> 04:03:32.260]  Чего-чего?
[04:03:32.260 --> 04:03:34.260]  Я тебя не слышу.
[04:03:36.260 --> 04:03:38.260]  Единственная психологическая проблема
[04:03:38.260 --> 04:03:40.260]  может быть, что мы доказали, что
[04:03:40.260 --> 04:03:42.260]  для каждой отдельной вершины это
[04:03:42.260 --> 04:03:44.260]  верно, но как бы еще не совсем
[04:03:44.260 --> 04:03:46.260]  доказали, что это одновременно для них
[04:03:46.260 --> 04:03:48.260]  можно делать.
[04:03:48.260 --> 04:03:50.260]  Понятно, что это делается там, видимо,
[04:03:50.260 --> 04:03:52.260]  тремя-пятью правильно сформулированными предложениями
[04:03:52.260 --> 04:03:54.260]  на самом деле.
[04:03:54.260 --> 04:03:56.260]  Да, потому что сначала мы начинаем с того,
[04:03:56.260 --> 04:03:58.260]  что замечаем, что когда ищем минразрез между
[04:03:58.260 --> 04:04:00.260]  А и Б, мы можем сжать сначала
[04:04:00.260 --> 04:04:02.260]  вот эту вершину.
[04:04:02.260 --> 04:04:04.260]  Потом вон ту вершину.
[04:04:04.260 --> 04:04:06.260]  Потом вон ту вершину.
[04:04:06.260 --> 04:04:08.260]  Для каждой из них там просто аккуратненько
[04:04:08.260 --> 04:04:10.260]  утверждение верно.
[04:04:10.260 --> 04:04:12.260]  Ну, и когда разжимаем, типа тоже по очереди
[04:04:12.260 --> 04:04:14.260]  аккуратненько верно.
[04:04:14.260 --> 04:04:16.260]  Ну, видимо, да. На самом деле, да. Получается так.
[04:04:18.260 --> 04:04:20.260]  По большому счету, да.
[04:04:20.260 --> 04:04:22.260]  Еще раз по комплексу
[04:04:22.260 --> 04:04:24.260]  мы понимаем
[04:04:24.260 --> 04:04:26.260]  в какой доле прицепить вершину.
[04:04:26.260 --> 04:04:28.260]  Мы же вот эти вершины
[04:04:28.260 --> 04:04:30.260]  сжали в
[04:04:30.260 --> 04:04:32.260]  исходном графе. То есть в исходном графе
[04:04:32.260 --> 04:04:34.260]  у нас эта вершина не одним ребром
[04:04:34.260 --> 04:04:36.260]  с этим всем соединена, а вот кучей ребр.
[04:04:36.260 --> 04:04:38.260]  Она даже со всеми этими
[04:04:38.260 --> 04:04:40.260]  вершинами тоже они связаны.
[04:04:40.260 --> 04:04:42.260]  Но это множество вершин мы сжали.
[04:04:42.260 --> 04:04:44.260]  Это множество вершин сжали.
[04:04:44.260 --> 04:04:46.260]  И вот это вот все. И вот это множество вершин сжали.
[04:04:46.260 --> 04:04:48.260]  Теперь берем вершина А и Б,
[04:04:48.260 --> 04:04:50.260]  ищем между ними в сжатом графе
[04:04:50.260 --> 04:04:52.260]  минразрез.
[04:04:52.260 --> 04:04:54.260]  А в сжатом графе мы добавляем
[04:04:54.260 --> 04:04:56.260]  ребро
[04:04:56.260 --> 04:04:58.260]  из сжатой вершины
[04:04:58.260 --> 04:05:00.260]  куда?
[04:05:00.260 --> 04:05:02.260]  Ну, как бы, скажем так,
[04:05:02.260 --> 04:05:04.260]  если она оказалась в одной доле с А
[04:05:04.260 --> 04:05:06.260]  в разрезе минимальном, да,
[04:05:06.260 --> 04:05:08.260]  то мы ее соединяем этим ребром с...
[04:05:08.260 --> 04:05:10.260]  Если мы сначала ищем разрез.
[04:05:10.260 --> 04:05:12.260]  Да.
[04:05:12.260 --> 04:05:14.260]  Нет, сначала сжимаем,
[04:05:14.260 --> 04:05:16.260]  потом ищем разрез.
[04:05:16.260 --> 04:05:18.260]  Сжимаем, потом ищем разрез.
[04:05:18.260 --> 04:05:20.260]  Когда мы сжимаем, как мы добавляем ребры.
[04:05:20.260 --> 04:05:22.260]  Какие? Вот эти?
[04:05:22.260 --> 04:05:24.260]  Ну очень просто. Смотрим на эту вершину.
[04:05:24.260 --> 04:05:26.260]  Она оказалась либо в одной доле с А,
[04:05:26.260 --> 04:05:28.260]  либо в одной доле с Б.
[04:05:28.260 --> 04:05:30.260]  У нас же разреза еще нет.
[04:05:30.260 --> 04:05:32.260]  Нет, мы же его только что нашли.
[04:05:36.260 --> 04:05:38.260]  Так, если что, вот это ребро графу
[04:05:38.260 --> 04:05:40.260]  никакого отношения не имеет.
[04:05:40.260 --> 04:05:42.260]  Ну да.
[04:05:42.260 --> 04:05:44.260]  То есть как бы это ребро мы никуда не добавляем.
[04:05:44.260 --> 04:05:46.260]  Мы добавляем там в дерево,
[04:05:46.260 --> 04:05:48.260]  но разрез, конечно, с его помощью не ищется.
[04:05:50.260 --> 04:05:52.260]  То есть смотрите,
[04:05:52.260 --> 04:05:54.260]  граф живет в другом мире.
[04:05:54.260 --> 04:05:56.260]  В мире, где приходит информация.
[04:05:56.260 --> 04:05:58.260]  Так, берем граф,
[04:05:58.260 --> 04:06:00.260]  возьми вот это множество вершин
[04:06:00.260 --> 04:06:02.260]  и сожми их в одну.
[04:06:02.260 --> 04:06:04.260]  Ну понятно, что если тут торчали
[04:06:04.260 --> 04:06:06.260]  ребра там в какие-то вершины,
[04:06:06.260 --> 04:06:08.260]  то они теперь будут торчать из одной этой вершины.
[04:06:08.260 --> 04:06:10.260]  А если там были внутри ребра,
[04:06:10.260 --> 04:06:12.260]  значит мы их уничтожаем.
[04:06:12.260 --> 04:06:14.260]  Если пришла информация,
[04:06:14.260 --> 04:06:16.260]  сожми вот эти вершины в одну.
[04:06:16.260 --> 04:06:18.260]  То есть мы те ребра, которые торчали из вершин
[04:06:18.260 --> 04:06:20.260]  в нежатом графе,
[04:06:20.260 --> 04:06:22.260]  мы их проводим просто из одной вершины?
[04:06:22.260 --> 04:06:24.260]  Да.
[04:06:24.260 --> 04:06:26.260]  Ну просто я думал, что там одно ребро будет.
[04:06:26.260 --> 04:06:28.260]  Не-не, боже упаси.
[04:06:28.260 --> 04:06:30.260]  Да просто это в другом мире.
[04:06:30.260 --> 04:06:32.260]  То есть не путать вот эту нашу диаграмму
[04:06:32.260 --> 04:06:34.260]  с метавершинами и деревом
[04:06:34.260 --> 04:06:36.260]  и реальный граф.
[04:06:36.260 --> 04:06:38.260]  То есть сжали,
[04:06:38.260 --> 04:06:40.260]  построили разрез
[04:06:40.260 --> 04:06:42.260]  и соответственно в реальном...
[04:06:42.260 --> 04:06:44.260]  Вот эта вершина
[04:06:44.260 --> 04:06:46.260]  распалась
[04:06:46.260 --> 04:06:48.260]  на две соединенные ребром F и B.
[04:06:48.260 --> 04:06:50.260]  А вот эти ребра
[04:06:50.260 --> 04:06:52.260]  мы подсоединяем.
[04:06:52.260 --> 04:06:54.260]  Если вот эта сжатая вершина в разрезе
[04:06:54.260 --> 04:06:56.260]  оказалась с вот этой долей,
[04:06:56.260 --> 04:06:58.260]  значит подсоединяем к A, иначе к B.
[04:06:58.260 --> 04:07:00.260]  И аккуратненько
[04:07:00.260 --> 04:07:02.260]  проверяем все указанные леммы.
[04:07:02.260 --> 04:07:04.260]  Вот.
[04:07:06.260 --> 04:07:08.260]  Не куча фибоначи, да?
[04:07:08.260 --> 04:07:10.260]  Да.
[04:07:10.260 --> 04:07:12.260]  Что-то вот позавчера у нас была куча фибоначи,
[04:07:12.260 --> 04:07:14.260]  выяснилось, что это халявный алгоритм.
[04:07:14.260 --> 04:07:16.260]  Ну как-то да,
[04:07:16.260 --> 04:07:18.260]  ну просто как-то реально
[04:07:18.260 --> 04:07:20.260]  она как-то очень просто пошла.
[04:07:20.260 --> 04:07:22.260]  Что-то у нас она не простошная.
[04:07:22.260 --> 04:07:24.260]  Ну, не знаю.
[04:07:26.260 --> 04:07:28.260]  Нет, есть вероятность,
[04:07:28.260 --> 04:07:30.260]  что возможно до меня неожиданно.
[04:07:30.260 --> 04:07:32.260]  Нет, есть вероятность, что возможно до меня
[04:07:32.260 --> 04:07:34.260]  неожиданно дошло, как это еще проще рассказывать.
[04:07:36.260 --> 04:07:38.260]  Да?
[04:07:40.260 --> 04:07:42.260]  Нет, да, в принципе нет.
[04:07:42.260 --> 04:07:44.260]  То есть это означает да.
[04:07:44.260 --> 04:07:46.260]  К сожалению, мы не успели говорить про любовь.
[04:07:46.260 --> 04:07:48.260]  Про любовь.
[04:07:50.260 --> 04:07:52.260]  Вот.
[04:07:52.260 --> 04:07:54.260]  Да-да-да.
[04:07:54.260 --> 04:07:56.260]  Но зачем да?
[04:07:56.260 --> 04:07:58.260]  Но это называется да. Зачем любовь, когда есть гомориху?
[04:07:58.260 --> 04:08:00.260]  Да.
[04:08:00.260 --> 04:08:02.260]  Ладно. Ну в принципе это означает, что да.
[04:08:02.260 --> 04:08:04.260]  Ну да. Но это в плане, что на сегодня все.
[04:08:04.260 --> 04:08:06.260]  Так что на сегодня все.
[04:08:06.260 --> 04:08:08.260]  С потоками тоже все.
[04:08:10.260 --> 04:08:12.260]  Значит, будем говорить о геометрии.
[04:08:12.260 --> 04:08:14.260]  Или о строчках, я подумаю.
[04:08:14.260 --> 04:08:16.260]  Геометрия тоже была любовь. Есть?
[04:08:16.260 --> 04:08:18.260]  Есть.
[04:08:18.260 --> 04:08:20.260]  Значит 16 в конце.
