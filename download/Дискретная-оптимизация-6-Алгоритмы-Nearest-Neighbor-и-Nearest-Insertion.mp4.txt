[00:00.000 --> 00:09.480]  Прошлый раз мы только-только, по-моему, определили задачиками Вежора, что это такое, но мы уже
[00:09.480 --> 00:16.040]  определили ее в трех вариантах. Первый вариант – это самый общий для произвольного графа,
[00:16.040 --> 00:21.440]  второй вариант – для аметрического графа. И, кстати говоря, аметрический граф, он какой?
[00:21.440 --> 00:34.080]  Аметрический, да? Какой? Полный, да? Значит, полный, потому что, если между двумя вершинами есть
[00:34.080 --> 00:40.880]  путь через третью, то и ребро напрямую должно быть, и вес этого ребра должен не превосходить
[00:40.880 --> 00:46.800]  суммы весов двух ребер через промежуточную вершину. Из этого следует, что наш граф вообще
[00:46.800 --> 00:52.520]  полный, и у нас не возникает вопрос, существует в нем гамильтонов цикл, например, или нет,
[00:52.520 --> 00:58.760]  поэтому на аметрическом графе как раз осмысленно решать задачиками Вежора приближенно. Вот в
[00:58.760 --> 01:03.760]  отличие от совсем произвольного случая, где, ну вообще говоря, гамильтонов цикл даже может
[01:03.760 --> 01:10.640]  не быть, и тогда не очень понятно, что значит, что мы приближаем решение задачи, да? Значит,
[01:10.640 --> 01:17.560]  так вот, мы с вами будем во всех дальнейших рассуждениях, когда мы будем какие-то показатели
[01:17.560 --> 01:24.520]  аппроксимации получать для алгоритмов, мы будем предполагать, что граф у нас полный и метрический,
[01:24.520 --> 01:31.760]  функция весов метрическая. Вот, но еще мы рассмотрели один специальный случай, когда граф евклидов,
[01:31.760 --> 01:36.960]  то есть вершины графа это просто точки на плоскости, а ребра графа это отрезки между
[01:36.960 --> 01:42.920]  точками и длины отрезков, это соответствующие веса ребер. Те примеры, которые мы будем рисовать,
[01:42.920 --> 01:49.240]  естественно, мы будем понимать, как бы эти примеры, как метрические графы, что это удобно,
[01:49.240 --> 01:54.280]  потому что сразу на доске не надо подписывать веса ребер, мы сразу видим вот отрезок,
[01:54.280 --> 01:59.280]  этот длиннее, чем вот этот вот, да, и мы понимаем, как алгоритм должен действовать. И вот мы с вами
[01:59.280 --> 02:05.320]  в прошлый раз рассмотрели два алгоритма, два приближенных алгоритма для метрической задачикам
[02:05.320 --> 02:28.360]  его ежора. Один алгоритм назывался ближайший сосед, а другой алгоритм назывался кратчайшие
[02:28.360 --> 02:46.240]  вставки. Наоборот, да, ближайший сосед это NN, а другой назывался кратчайшие вставки. Вот,
[02:46.240 --> 02:54.960]  и оба алгоритма они такие жадные, очевидно, жадные, один из них каждый раз идет в ближайшую
[02:54.960 --> 03:02.080]  точку из еще непосещенных, а другой алгоритм вставляет вершину на такой маленький цикл,
[03:02.080 --> 03:07.280]  но ближайшую из всех вершин к этому циклу, поочередно там вставляет по вершинке,
[03:07.280 --> 03:13.040]  пока у нас не получается цикл, охватывающий все вершины графа. Вот, начнем мы, пожалуй,
[03:13.040 --> 03:19.760]  с анализа более простого алгоритма, и хотя вот какой из этих алгоритмов кажется более простым,
[03:19.760 --> 03:24.720]  наверное, ближайший сосед. Ну, у него какое-то правило более простое, не надо ничего никуда
[03:24.720 --> 03:30.600]  вставлять, просто бабах, ребро провел, потом бабах, следующее ребро провел, да, а вот здесь вот все
[03:30.600 --> 03:35.760]  время что-то надо удалять одно ребро и вставлять два других ребра. Процедура чуть посложнее,
[03:35.760 --> 03:41.680]  но оказывается, что анализ этого алгоритма, он в итоге проще, и коэффициент опроксимации,
[03:41.680 --> 03:48.000]  который мы сегодня получим, он тоже поприятнее. Значит, вот у этого алгоритма ближайшего соседа
[03:48.000 --> 03:54.160]  оказывается, что коэффициент опроксимации порядка в худшем случае, порядка логарифма от числа
[03:54.160 --> 04:01.760]  вершин графа, а вот у этого алгоритма коэффициент опроксимации не порядка, а просто двойка. Вот,
[04:01.760 --> 04:08.200]  здесь как в рюкзаке получается, а здесь получается как в покрытии, да, в покрытии у нас тоже там
[04:08.200 --> 04:15.480]  логарифмичный был по размеру матрицы коэффициент. Ну вот, поехали. Значит, мне нужно будет в анализе,
[04:15.560 --> 04:21.400]  чтобы вы вспомнили, чтобы мы с вами вместе вспомнили, как работает алгоритм Прима.
[04:21.400 --> 04:37.080]  Алгоритм Прима решает задачу о минимальном основном дереве, minimal spanning tree, МСТ. Вот,
[04:37.120 --> 04:48.440]  можете напомнить, как работает этот алгоритм? Ну, у нас там все алгоритмы жадные, Примы,
[04:48.440 --> 04:59.160]  Барувки и Краскала, вот как именно он жадно действует. Да, мы в этом смысле жадничаем,
[04:59.160 --> 05:05.400]  мы выбираем каждый раз ребро самое легкое. А среди каких ребер? Вот Краскал, он выбирает
[05:05.400 --> 05:11.960]  просто среди всех ребер минимальная по весу, лишь бы только циклы не создать. А Прим, да,
[05:11.960 --> 05:18.760]  Прим стремится к тому, чтобы каждый раз множество вершин, охваченных нашими ребрами, образовывало
[05:18.760 --> 05:23.760]  связанный кусочек графа. То есть, грубо говоря, алгоритм Прима, он наращивает вот это вот остальное
[05:23.760 --> 05:30.800]  дерево. Значит, оно просто сначала не покрывает все вершины графа. У нас есть много-много в графе
[05:30.800 --> 05:39.720]  вершин, но он поочередно растит это дерево, добавляя каждый раз к текущему дереву вершинку,
[05:39.720 --> 05:46.160]  которая, ну, фактически ближайшая к уже покрытым вершинам. То есть, мы рассматриваем множество
[05:46.160 --> 05:54.240]  всех не покрытых, не охваченных вершин и множество всех охваченных вершин. И вот где здесь
[05:54.240 --> 06:00.080]  кратчайшее ребро, вот алгоритм ищет, и вот именно это ребро и вставляет, добавляя тем самым
[06:00.080 --> 06:10.120]  еще одну вершину ко множеству охваченных вершин. Такая, не знаю, какие приводить примеры линия
[06:10.120 --> 06:17.120]  Пронта. Да, что-то в голову лезут какие-то кривые примеры вот в последнее время. Ну вот,
[06:17.120 --> 06:25.440]  на ощупь, охваченные вершины, неохваченные вершины в алгоритме Прима. И, значит, в итоге он
[06:25.440 --> 06:35.760]  всей вершины покрывает. То есть, как раз достигает островного дерева. И алгоритм кратчайших вставок,
[06:35.760 --> 06:40.960]  если мы с вами вспомним, как он действует, он действует следующим образом. Я этот алгоритм
[06:40.960 --> 06:52.080]  прям вот здесь справа попробую нарисовать. НН. Миростный. Да, что этот алгоритм делает? Он
[06:52.080 --> 06:58.160]  начинает, помните, с кратчайшего ребра вообще в графе. Потом он добавляет вершину ближайшую
[06:58.160 --> 07:03.520]  к этому кратчайшему ребру, строит такой треугольничек. А потом ведь у него правила ровно такое же. То есть,
[07:03.520 --> 07:09.000]  он берет какие-то охваченные вершины. Ну вот, я здесь уже нарисую какую-то общую картину. И эти
[07:09.000 --> 07:16.240]  вершины охвачены циклом. И он берет к этим охваченным вершинам, добавляет еще неохваченную,
[07:16.240 --> 07:22.720]  одну из неохваченных вершин, неохваченных процессом. И добавляет из всех вершин самую
[07:22.720 --> 07:28.080]  ближайшую. А потом он уже, когда выбрал вершину, которую добавляет в этот цикл,
[07:28.080 --> 07:36.440]  что он делает? Он убирает ребро из цикла одно и добавляет два других ребра так, чтобы эта вершина
[07:36.440 --> 07:43.200]  встала на цикл. Ну, делает он это оптимальным образом. То есть, здесь дальше происходит, как бы
[07:43.200 --> 07:48.720]  здесь происходят два шага. Первый шаг — это выбор добавляемой вершины. И вершина — это та же
[07:48.720 --> 07:54.520]  самая, что и в алгоритме Прима, по сути дела. И второй шаг — это выбор оптимального способа добавить
[07:54.520 --> 08:02.080]  уже зафиксированную вершину на цикл. Тут тоже происходит минимизация, еще одна. Вот. Но что
[08:02.080 --> 08:11.120]  можно сказать? Вот из того, что правила выбора добавляемой вершины и в nearest insertion и в Приме
[08:11.160 --> 08:18.040]  одинаковое, что на каждом шаге множество вершин, охваченных процессом, охваченных вот под графом
[08:18.040 --> 08:23.360]  специального вида, только здесь это дерево, а здесь это цикл, оно будет одно и то же. Правильно?
[08:23.360 --> 08:29.720]  Вот. Если на каждом шаге выбирается одна и та же вершина и с левой и справа, значит,
[08:29.720 --> 08:36.720]  и на каждом шаге множество охваченных вершин одно и то же. И это очень полезно. Это очень
[08:36.720 --> 08:44.120]  полезно нам будет заметить. Вот. Но давайте теперь, я не знаю, вот где-то это можете записать,
[08:44.120 --> 08:50.880]  да, но давайте я справа вот здесь запишу, что множество вершин, покрытых на каждом шаге,
[08:50.880 --> 08:57.000]  соответственно, деревом и циклом в алгоритме Прима и в алгоритме nearest insertion одинаково.
[08:57.000 --> 09:09.600]  Множество охваченных вершин на каждом шаге
[09:09.600 --> 09:22.640]  в алгоритме Прима, ну я вот так и буду писать, Прим, и в алгоритме Ni одно и то же.
[09:27.400 --> 09:38.320]  Так, это первый факт. Давайте теперь посмотрим на самое-самое начало алгоритма Прима и nearest
[09:38.320 --> 09:44.080]  insertion. Вот в самом начале алгоритма Прима выбирается кратчайшее ребро и в алгоритме
[09:44.080 --> 09:49.640]  nearest insertion выбирается кратчайшее ребро. То есть, вот самый первый шаг, здесь вообще еще цикла
[09:49.640 --> 09:56.960]  даже нету и вот эти два подграфа выглядят абсолютно одинаково. А потом мы добавляем вершину ближе
[09:57.320 --> 10:02.920]  к этому ребру, ну и в Приме мы тоже добавляем вершину ближайшую к этому ребру. Просто здесь мы
[10:02.920 --> 10:08.480]  проводим одно только ребро, чтобы получилось маленькое дерево на трех вершинах, а здесь мы берем
[10:08.480 --> 10:14.320]  тоже самую вершину, но мы вынуждены добавить два ребра, потому что нам цикл нужен. И вот с этих
[10:14.320 --> 10:22.640]  пор уже графы вот здесь, вот здесь будут все-таки они будут разные. Но что мы можем сказать относительно
[10:22.640 --> 10:29.440]  суммарного веса ребер, которые здесь нарисованы и тех ребер, которые здесь нарисованы? У нас же
[10:29.440 --> 10:34.440]  есть неравенство треугольника, мы с вами будем анализировать все только в предположении аметричности
[10:34.440 --> 10:42.360]  графа. И исходя из неравенства треугольника, если мы посмотрим на вот это вот ребро, у него же все
[10:42.360 --> 10:47.800]  равно вес не больше, чем сумма весов вот этих вот двух ребер. Что мы можем сказать про вот этот
[10:47.800 --> 10:54.520]  вот под граф целиком и вот этот вот под граф целиком? Если это ребра, значит, давайте я вершину
[10:54.520 --> 11:07.520]  назову A, B и C. Соответственно здесь у нас вес под графа, это вес AB плюс вес BC, а здесь у нас вес
[11:07.520 --> 11:17.600]  AB плюс вес BC, ну и плюс, конечно, вес AC, но по неравенству треугольника вот эта штука не превосходит
[11:17.600 --> 11:33.200]  веса AB плюс веса BC. По тому же ровну принципу, что и в приме, то есть это вершина, ближайшая к
[11:33.200 --> 11:41.480]  охваченным процессам вершин. Нет, то есть просто вот представьте, что у вас есть множество вершин,
[11:41.480 --> 11:47.920]  входящих в цикл, и вот вы выбираете вершину, ближайшую к этому циклу, то есть вы рассматриваете
[11:47.920 --> 11:56.600]  всевозможное расстояние от каждой вершины графа, изолированной пока что, к каждой вершине цикла,
[11:56.600 --> 12:05.760]  и берете минимум фактически вот такой штуки W от XY, где вершина X принадлежит циклу,
[12:05.760 --> 12:11.520]  которую у вас на данный момент есть, а Y не принадлежит циклу, а в приме у вас происходит
[12:11.520 --> 12:19.000]  ровно то же самое, вы ищете вершину, которая минимизирует вес XY, где X принадлежит вершинам
[12:19.000 --> 12:25.120]  охваченным деревом, а Y не принадлежит вершинам охваченным деревом, это абсолютно одинаковые на
[12:25.120 --> 12:32.200]  самом деле правила, просто тут дерево, тут цикл, а множество вершин, на которых существует это
[12:32.200 --> 12:41.040]  дерево, этот цикл совершенно одинаково. Так, ну вот, это мы потрем, ну и что получается,
[12:41.040 --> 12:46.480]  да, что раз вот эта вот штука по неравенству треугольника не превосходит на самом деле вот
[12:46.480 --> 12:53.280]  этого, то суммарный вес вот этих вот трехрёбер, он не превосходит удвоенной суммы W от AB плюс W
[12:53.280 --> 13:01.840]  от BC, правда, вот, и значит, вот можно сказать, что вес текущего цикла, который у нас с вами тут,
[13:01.840 --> 13:13.000]  он не превосходит удвоенного веса текущего дерева, который у нас с вами здесь, это T маленькое
[13:13.000 --> 13:19.080]  такое пока очень, а вот это вот C тоже маленький пока очень, а в конце, после всех всех шагов,
[13:19.480 --> 13:25.040]  вот этот вот цикл C, это гамильтонов цикл уже будет во всем графе, а это дерево T, это будет
[13:25.040 --> 13:33.560]  остывное дерево во всем графе, да, но давайте мы сейчас докажем с вами, что на каждом шаге та
[13:33.560 --> 13:40.040]  прибавка, которая у нас получается к циклу, когда он растет немножко, да, разрастается,
[13:40.040 --> 13:48.840]  она не превосходит удвоенной добавки, которая вот к этому дереву у нас прирастает. Сейчас мы
[13:48.840 --> 13:57.160]  это в общем случае с вами проверим, значит, ну, давайте я пока напишу то, что мы здесь, то,
[13:57.160 --> 14:02.880]  что мы здесь с вами имеем, а здесь мы имеем вот что, что после первых двух шагов,
[14:02.880 --> 14:13.560]  после первых двух шагов, когда мы имеем дерево на трех вершинах в приме и цикл на трех вершинах
[14:13.560 --> 14:29.480]  в nearest insertion, вес цикла в алгоритме nearest insertion не превосходит не больше удвоенного
[14:29.480 --> 14:47.680]  удвоенного веса дерева в алгоритме prima. Вот пока нам нужно только вот это, в это поверить,
[14:47.680 --> 14:56.720]  ну и дальше давайте вот проанализируем в общем виде, что будет происходить при
[14:56.720 --> 15:07.680]  добавлении, что будет происходить при добавлении. И представьте себе общую картину, вот здесь
[15:07.680 --> 15:24.680]  какой-то опять prim и ni, вправо, вот, и вот есть какое-то множество вершин, совершенно одно и
[15:24.680 --> 15:31.600]  то же, просто оно, на нем разные графы у нас сидят, да, вот здесь вот у нас в приме сидит какое-то
[15:31.600 --> 15:39.360]  дерево на этом множестве растет, а здесь у нас, значит, некий цикл по этому множеству проходит,
[15:39.360 --> 15:48.040]  но в общем-то множество вершин одно и то же, и вершина, которая добавляется к этому, вот это
[15:48.040 --> 15:56.160]  вот новая вершина, ну давайте я ее обозначу v, пусть она будет v, она абсолютно одна и та же вершина,
[15:56.160 --> 16:09.280]  которая добавляется. Так, как эта вершина добавляется на цикл? Как она добавляется на цикл?
[16:09.280 --> 16:20.920]  Мы минимизируем при добавлении ее на цикл, что мы выбираем две какие-то вершины, соседние по циклу,
[16:20.920 --> 16:35.480]  да, минимум, и мы минимизируем, что добавку, которая получается, если убрать ребро между
[16:35.480 --> 16:42.800]  этими вершинами и вставить вот эти вот два ребра, то есть какая получается у нас добавка здесь,
[16:42.800 --> 16:49.320]  вот давайте посмотрим, что именно мы минимизируем при добавлении вершины, но если эту вершину назвать
[16:49.320 --> 17:06.720]  a, а эту вершину назвать b, то тогда мы минимизируем сумму весов va плюс vb и минус вес ab, правда?
[17:06.720 --> 17:16.760]  Вот мы берем минимум вот такой вот величины по всем возможным соседним по циклу вершинам ab,
[17:16.760 --> 17:24.760]  таким-таким-таким-таким вот перебираем, да, все такие пары, по вершинам a и b,
[17:24.760 --> 17:43.680]  соседним по циклу, значит, по всем a и b, соседним на цикле. Так, окей, окей, а что у нас прим делает?
[17:43.680 --> 17:52.280]  А прим он в этом смысле он немножко посвободнее, потому что здесь мы выбираем все-таки, мы не можем
[17:52.280 --> 17:57.400]  взять просто две произвольные вершины вот на всем этом множестве, да, мы берем именно пару вершин
[17:57.400 --> 18:04.040]  соседних на цикле, которые у нас уже здесь есть, а прим более свободный в этом смысле, он может
[18:04.040 --> 18:10.120]  выбрать вообще любую вершину вот здесь вот, да, среди охваченных деревом и просто провести в нее
[18:10.120 --> 18:19.400]  ребро, то есть то, что делает прим, он добавляет, вот здесь у нас добавляется к весу, да, вот такая
[18:19.400 --> 18:32.640]  вот величина, а прим добавляет нам к весу минимум wx по всем вершинам x охваченным, да, вот здесь вот,
[18:32.640 --> 18:46.200]  по всем возможным вершинам x, согласны, но этот минимум же достигается на каком-то x все-таки,
[18:46.200 --> 18:54.800]  да, вот пусть вот этот вот минимум достигается на каком-то конкретном x, давайте рассмотрим
[18:54.800 --> 19:04.880]  этот самый x со звездочкой, на каком-то же x он достигается, x со звездочкой или x с волной, да,
[19:04.880 --> 19:13.960]  то есть реальная добавка получается это все-таки w какого-то конкретного там vx с волной, бамс,
[19:13.960 --> 19:22.080]  если бы мы взяли и посмотрели на этот самый x с волной, ну, допустим, это вот этот вот x с волной,
[19:22.080 --> 19:29.440]  допустим, это вот этот x с волной, давайте я a и b уберу здесь, мы же не знаем какие конкретные
[19:29.440 --> 19:34.880]  это a и b там будут выбраться, но вот где-то здесь все равно живет вершина x с волной,
[19:34.880 --> 19:47.640]  и у этой вершины x с волной есть сосед по циклу, ну, какой-нибудь там y с волной, вот мы можем
[19:47.640 --> 19:53.640]  здесь рассмотреть на этом цикле ту самую вершину x с волной, которую выбрал прим, вот здесь,
[19:53.640 --> 20:05.880]  и ее соседа y с волной, согласитесь, что вот эта вот добавка, где берется минимум по всем возможным
[20:05.880 --> 20:17.160]  выборам пар соседей на цикле, эта добавка не превосходит добавки, при которой мы конкретно взяли
[20:17.160 --> 20:23.600]  x с волной и y с волной его соседа, удалили ребро между ними и вставили вот такие два ребра, правда?
[20:23.600 --> 20:40.160]  Значит, добавка у нас здесь получается не больше, чем wvx с волной плюс wvy с волной минус wx с волной
[20:40.160 --> 20:52.080]  y с волной, добавка получается не больше, чем такая, давайте просто проверим, что вот эта вот величина,
[20:52.080 --> 20:59.400]  которая добавлена у нас к весу цикла вот этим алгоритмом, не превосходит удвоенной вот этой вот
[20:59.400 --> 21:19.600]  величины, проверяем, проверяем, ну давайте я это вот здесь вот попроверяю, значит верно ли, что wx
[21:19.600 --> 21:39.840]  с волной v плюс y с волной v минус x с волной y с волной не больше, пока под вопросом, чем два веса ребра x с волной v.
[21:39.840 --> 21:53.960]  Ну давайте как-то это преобразуем, да, значит во-первых мы можем убрать вот эту штуку, а вот этот вот
[21:53.960 --> 22:01.480]  коэффициент двойку заменить на единичку, а дальше мы можем перенести вот эту штуку вправо, да, то есть
[22:01.480 --> 22:13.600]  вот это вот неравенство, оно эквивалентно неравенство такому, w y с волной v не превосходит,
[22:13.600 --> 22:30.520]  эту штуку вправо перенесли, получается такая штука, x с волной y с волной плюс x с волной v. Как же это
[22:30.520 --> 22:43.280]  неравенство доказать? Я в замешательстве. И откуда оно следует? Откуда следует такое неравенство?
[22:43.280 --> 22:56.000]  Да, это же неравенство треугольника, да, вот у нас треугольник на точках y с волной v x с волной,
[22:56.000 --> 23:04.400]  и мы говорим, что напрямую пройти между этими двумя точками не дольше ходить, чем ходить через
[23:04.400 --> 23:13.560]  какую-то точку, сначала пойти из y с волной в x, а потом из x пойти в v, и это ребро не больше,
[23:13.560 --> 23:19.440]  чем вес этого ребра, не больше, чем сумма весов вот этих вот двух ребер, это просто неравенство
[23:19.440 --> 23:25.400]  треугольника, а мы предполагаем, что у нас задача решается на метрическом графе, это важно,
[23:25.400 --> 23:31.400]  без метричности ничего не работает, но метричность это в точности вот это вот неравенство,
[23:31.400 --> 23:38.320]  и следовательно у нас вот это вот неравенство выполнено, и следовательно добавка к алгоритму
[23:38.320 --> 23:44.240]  nearest insertion на этом шаге не превосходит удвоенной добавке алгоритму прима на этом шаге, а мы
[23:44.240 --> 23:48.480]  рассмотрели с вами общий случай, какой это произвольный шаг, то есть мы с вами получаем
[23:48.480 --> 24:06.640]  сейчас третий пункт, что на каждом из следующих шагов, на каждом из остальных шагов добавка
[24:06.640 --> 24:21.200]  к весу цикла в алгоритме nearest insertion не превосходит удвоенной добавке
[24:21.200 --> 24:45.520]  к весу дерева в алгоритме прима, чудесно, и какой же вывод можно сделать из этого,
[24:45.520 --> 24:54.320]  если после первых двух шагов вес цикла не больше удвоенного веса дерева, маленького-маленького,
[24:54.320 --> 24:59.920]  а потом на каждом следующем шаге добавка к весу цикла не больше удвоенной добавки к весу дерева,
[24:59.920 --> 25:10.160]  какой из этого вывод можно сделать? Да, точно, что вес цикла итогового не превосходит удвоенного
[25:10.160 --> 25:15.840]  веса дерева, итогового, а алгоритм прима, теперь мы уже вспоминаем, что алгоритм прима
[25:15.840 --> 25:21.760]  это шняба, что алгоритм прима строит минимальное основное дерево графа, следовательно, мы можем
[25:21.760 --> 25:39.920]  из вот этих вот пунктов сделать такой вывод, что вес алгоритма, вес цикла, который построен
[25:39.920 --> 25:49.200]  алгоритмом nearest insertion не превосходит удвоенного веса дерева, который строит алгоритм прима,
[25:49.200 --> 25:59.360]  но алгоритм прима строит минимальное основное дерево. Вот пока мы с вами вывели такое неравенство.
[25:59.360 --> 26:06.800]  Ну и осталось нам заметить, что вообще в любом метрическом графе вес минимального
[26:06.800 --> 26:14.800]  основного дерева не превосходит веса гамильтонного цикла, любого. Давайте посмотрим, почему.
[26:14.800 --> 26:27.040]  Конечно. А просто по определению, вот мы сказали, что алгоритм nearest insertion, он так работает,
[26:27.040 --> 26:32.360]  мы выбираем сначала, какую вершину будем добавлять, и только когда мы уже зафиксировали,
[26:32.360 --> 26:37.360]  какую вершину добавляем, тогда мы только выбираем оптимальный способ вставить ее на циклу.
[26:37.360 --> 26:43.960]  Сперва ближайшую. Но понятно, народ, смотрите, да, это вопрос хороший, потому что он нас
[26:43.960 --> 26:49.040]  определяет. Вот это алгоритм, который специально сформулирован так, чтобы его было удобно
[26:49.040 --> 26:54.920]  проанализировать, потому что он работает очень похоже на алгоритм прима, потому что мы контролируем
[26:54.920 --> 27:01.720]  как бы то множество вершин, с которым имеем дело на каждом шаге. Но в реальности, естественно,
[27:01.720 --> 27:07.600]  вы можете немножко здесь смухлевать, и не то что сначала выбирать добавляемую вершину,
[27:07.600 --> 27:13.360]  а потом уже выбирать, как ее добавить, а сразу минимизировать по всем возможным вершинам и по
[27:13.360 --> 27:18.280]  всем возможным способам их добавить. То есть вроде каждый шаг по-прежнему получается такой
[27:18.280 --> 27:24.440]  локальной вставкой, но эта вставка может быть уже более оптимальна на практике, чем вот такая
[27:24.440 --> 27:30.600]  теоретическая вставка из двух шагов. То есть практическая реализация алгоритма, она может
[27:30.600 --> 27:36.680]  быть немножко другой. Получится такой алгоритм nearest-insertion-штрих, или nearest-insertion с крышкой,
[27:36.680 --> 27:42.800]  который на практике будет невозможно также проанализировать четко, но он может быть
[27:42.800 --> 27:52.200]  практически лучше. Так, ну вот нам остался последний шаг здесь. Вот доказать, что осталось
[27:52.200 --> 28:09.920]  доказать. Осталось заметить, что вес МСТ не превосходит вес любого гамильтонного цикла на самом
[28:09.920 --> 28:17.920]  деле, но в частности оптимального гамильтонного цикла, естественно, раз любого.
[28:22.200 --> 28:33.360]  Почему? А давайте мы в графе возьмем, вот у нас граф G, на котором мы решаем задачу. Давайте возьмем
[28:33.360 --> 28:39.960]  там самый-самый оптимальный гамильтонов цикл. Да, любой гамильтонов цикл возьмем. Что будет,
[28:39.960 --> 28:47.760]  если у гамильтонного цикла одно ребро удалить? Получится остовное дерево, да, ну или остовное
[28:47.760 --> 28:53.960]  дерево, я не знаю, как там лучше ставить ударение. Получится, значит, остовное дерево. Оно, конечно,
[28:53.960 --> 28:58.720]  очень специфическое, оно называется гамильтоновой цепью. Вот есть гамильтонов цикл, а есть гамильтоновая
[28:58.720 --> 29:03.600]  цепь. Тоже цепь, проходящая через все вершины по одному разу. Но кто поспорит с тем, что это
[29:03.600 --> 29:09.440]  дерево? Конечно, дерево, а циклический связанный граф. Остовное, конечно, остовное. То есть это
[29:09.440 --> 29:15.400]  какое-то остовное дерево, которое, очевидно, имеет вес не больше, чем вес этого гамильтонного
[29:15.400 --> 29:22.040]  цикла. Потому что мы удалили из него одно ребро, а веса всех ребер не отрицательная. По предположению,
[29:22.040 --> 29:29.200]  я уже забыл, мы предполагали, я думаю, сначала. В метрическом графе у нас по определению веса
[29:29.200 --> 29:36.240]  всех ребер не отрицательные. И минимальное остовное дерево, очевидно, имеет вес не больше,
[29:36.240 --> 29:43.160]  чем какое-то остовное дерево. А это остовное дерево имеет вес не больше, чем гамильтонов цикл,
[29:43.160 --> 29:47.760]  из которого оно получено. Вот и все. Отсюда следует это неравенство. То есть вот это
[29:47.760 --> 29:53.560]  неравенство, оно вообще выполняется для произвольного графа абсолютно. Оно просто следует из вот этих
[29:53.560 --> 29:57.720]  соображений, что из цикла гамильтонного элементарно получить гамильтонову цепь,
[29:57.720 --> 30:04.480]  которая является частным случаем остовного дерева. И это неравенство не опирается на... ну,
[30:04.480 --> 30:10.240]  оно опирается единственное на что, что веса всех ребер не отрицательная. Но сложно себе представить,
[30:10.240 --> 30:16.440]  чтобы вы задачу решали на отрицательных весах. Ну, можно, но сложно. Вот. Но во всяком случае это
[30:16.440 --> 30:21.520]  неравенство не требует метричности. А вот весь предыдущий анализ алгоритма у нас требует
[30:21.520 --> 30:30.920]  метричности. У нас вот это неравенство, оно не прошло бы без метричности графа. Ну и все. Вот мы
[30:30.920 --> 30:39.560]  это с вами заметили, вот этот факт. И теперь мы получаем, да, что... такой вывод.
[30:39.560 --> 30:51.120]  Алгоритм кратчайших вставок, это алгоритм, имеющий показатель аппроксимации два. Да, то есть это
[30:51.120 --> 31:13.280]  два аппроксимация для алгоритма... для аппроксимации, значит, для задачи ТСП. Ну вот. Мы с вами
[31:13.280 --> 31:18.740]  разобрались с более простым из алгоритмов, с кратчайшими вставками, и на это у нас ушло пол
[31:18.780 --> 31:27.100]  лекция. Так что, может быть, мы не успеем целиком сегодня разобраться с ближайшим соседом. Но мы с ним
[31:27.100 --> 31:37.820]  начнем разбираться, во всяком случае. Так. Давайте сохраним это как замечание, кстати говоря,
[31:37.820 --> 31:54.860]  то на практике... на практике вставку не обязательно выполнять в два этапа. Не обязательно выполнять
[31:54.860 --> 32:09.100]  в два этапа. Ну, то есть выбор вершины, а потом только вставка, да. Выбор вершины, выбор вершины,
[32:09.100 --> 32:19.340]  выбор вставки, способов вставки на цикл, да. Значит, может... может получиться лучше, если вы
[32:19.340 --> 32:30.780]  сразу выбираете оптимально и вершину, и способ вставить. Значит, может на практике получиться лучше, да.
[32:41.940 --> 32:48.380]  Лучше, но без теор-анализа. То есть, для теоретического анализа нам это было важно,
[32:48.380 --> 32:54.060]  что два алгоритма можно параллельно запустить, и у них будет много общего, но без теоретической
[32:54.060 --> 33:09.340]  гарантии. Так, ну, давайте мы пойдем теперь анализировать ближайшего соседа. Если, да,
[33:09.340 --> 33:14.420]  если здесь могу что-то прокомментировать, то, пожалуйста, сейчас еще, пока не стер, все могу.
[33:14.420 --> 33:29.540]  Так, поехали к ближайшему соседу.
[33:44.420 --> 34:00.780]  Значит, мы с вами докажем, что вес ближайшего соседа не превосходит... ну, я не помню уже,
[34:00.780 --> 34:11.900]  какой там коэффициент у меня, по-моему, 4 алгоритма количества вершин в графе помножить на вес
[34:11.900 --> 34:22.940]  оптимального галитонного цикла. Вот, причем по порядку вот эта штука достижима. Значит,
[34:22.940 --> 34:37.340]  достижима по порядку. То есть, не то что я вам там поленился предлагать какой-то хороший анализ
[34:37.340 --> 34:41.180]  этого алгоритма, просто действительно этот алгоритм можно опять-таки заставить ошибаться
[34:41.180 --> 34:46.500]  во столько раз. Мы не будем здесь приводить пример аналогичный вот тому, что у нас был с матрицы,
[34:46.500 --> 34:53.700]  потому что пример чуток посложнее, время жалко на него, но вот верхнюю оценку мы здесь получим. Мы
[34:53.700 --> 35:03.460]  с вами будем доказывать вот это утверждение. Тихо. Мы с вами будем доказывать это утверждение
[35:03.460 --> 35:10.780]  следующим образом, просто чтобы мы сразу с вами представляли план доказательства. Значит, вот у нас
[35:10.780 --> 35:24.700]  есть граф. У ближайшего соседа есть такая особенность, что вот из каждой вершины графа
[35:24.700 --> 35:31.700]  торчит ровно одно ребро, которое было добавлено ближайшим соседам ровно в тот момент, когда мы как
[35:31.700 --> 35:37.540]  бы в этой вершине сидели. Мы на каждом шаге вот из какой-то вершины проводим очередное ребро.
[35:37.540 --> 35:45.900]  И мы с вами можем просуммировать по всем вершинам графа веса вот этих вот ребер.
[35:45.900 --> 35:51.620]  У каждой вершины такое волшебное ребро есть, добавлено ближайшим соседам. Но это, если вы
[35:51.620 --> 35:59.180]  помните, мы уже чем-то таким занимались. Мы при анализе жадного алгоритма в покрытии тоже там
[35:59.180 --> 36:05.340]  что-то такое связывали. С каждым шагом, правда, несколько каких-то пометок, которые мы на столбцах
[36:05.340 --> 36:10.020]  матрицы расставляли. А здесь вот у нас с каждой вершиной графа связана вот эта вот величина,
[36:10.020 --> 36:18.260]  длина торчащего из нее ребра, которая выбрана ближайшим соседам. Мы с вами проделаем следующее.
[36:18.260 --> 36:28.060]  Мы с вами выберем в графе некоторое подмножество вершин, и нам удастся доказать, что в этом
[36:28.060 --> 36:34.540]  подмножестве достаточно много вершин, и при этом сумма весов-ребер, которые из них торчат,
[36:34.540 --> 36:43.780]  выбранных ближайшим соседам, общая сумма весов не превосходит веса оптимального гамильтонного цикла
[36:43.780 --> 36:55.300]  в графе. Вот каким-то таким чудом нам это удастся сделать. Не превосходит WO. Дальше, я думаю,
[36:55.300 --> 37:01.340]  что можно догадаться, что будет. Вот дальше мы возьмем вот эту часть графа, и здесь снова
[37:01.340 --> 37:08.300]  попытаемся откусить какой-то кусочек, так чтобы сумма весов-ребер, торчащих из этих вершин,
[37:08.300 --> 37:17.540]  тоже была не больше, чем WO. И так дальше. Вот так вот мы из графа пооткусываем кусочки до тех пор,
[37:17.540 --> 37:22.660]  пока весь граф не закончится. Как вы думаете, сколько примерно будет вот таких вот кусочков?
[37:22.660 --> 37:29.460]  Ну так, судя по оценке, вы же физики, вы от ответа как бы можете танцевать, да?
[37:29.460 --> 37:40.900]  Значит, если у нас в итоге должна получиться какая-то такая оценка, то это означает, что если у
[37:40.900 --> 37:46.340]  нас много-много кусочков, и в каждом сумме не больше WO, значит кусочков, скорее всего,
[37:46.340 --> 37:53.140]  будет как раз логарифмичное число относительно размера вершин графа. То есть мы проделаем
[37:53.140 --> 37:59.220]  логарифмическое по размеру графа число шагов вот в этом процессе. Выбираем множество вершин,
[37:59.540 --> 38:05.820]  оцениваем сумму весов и ребер, которые торчат из этих вершин в ближайшем соседе. Из оставшегося
[38:05.820 --> 38:10.980]  графа тоже выбираем множество вершин, оцениваем и так дальше и так дальше. Вот давайте мы попытаемся
[38:10.980 --> 38:22.620]  этот план теперь воплотить в жизнь. Давайте обозначим для каждой вершины графа такую величину,
[38:22.620 --> 38:32.540]  возьмем, назовем ее, ну, например, L от V. Вот пусть это L от V, это и есть длина
[38:32.540 --> 38:47.780]  ребра, вес ребра, вес, вес ребра, добавленного, добавленного в тыкву алгоритмом nearest neighbor,
[38:47.780 --> 39:01.340]  момент, момент, когда вершина V была активной такой, когда мы как раз в ней сидели и думали,
[39:01.340 --> 39:11.420]  куда дальше пойти. Вершина V была активной. В фокусе была эта вершина, вот в этот момент.
[39:11.420 --> 39:22.940]  Ну и сразу заметим то, что мы уже здесь заметили, что сумма вот этих вот L от V по всем вершинам
[39:22.940 --> 39:35.460]  графа, это и есть вес цикла, построенного алгоритмом ближайшего соседа. Так что нам с вами надо
[39:35.460 --> 39:42.500]  оценить вот эту сумму, и мы ее оценим, разбив ее на много-много мелких сумм. Внутри каждой мелкой
[39:42.500 --> 39:51.700]  суммы у нас получится нечто непревосходящее Wopt, а всего таких сумм у нас получится логарифмичное
[39:51.700 --> 40:07.740]  число по размеру вот этого множества, по числу вершин графа. Давайте докажем пару лемм, но они не
[40:07.740 --> 40:14.380]  сложные, то есть то, что они называются леммами, это нас не должно пугать, вот, но все-таки я их
[40:14.380 --> 40:26.500]  сформулирую отдельно. Значит, во-первых, для каждого ребра графа, для каждого ребра, вам вот эти
[40:26.500 --> 40:33.620]  обозначения не сбивают вас в толку, там E от G, V от G, ребра графа, вершины графа, для каждого ребра
[40:33.620 --> 40:54.620]  графа выполнено одно из двух неравенств, а может быть оба. L от A не больше W от AB, или L от B не
[40:54.620 --> 41:03.460]  больше, чем W от AB. Вот, а можете как-то это обосновать, причем эта совокупность, да, это не
[41:03.460 --> 41:10.540]  система, вот нам гарантируется, что хотя бы одно из этих неравенств имеет место, может быть оба, вот,
[41:10.540 --> 41:35.700]  но хотя бы одно. Точно, да, точно, то есть какое бы ребро, действительно, мы не рассмотрели, AB,
[41:35.700 --> 41:43.140]  но я вот так пунктиром возьму. Вот, ближайший сосед, он путешествовал по графу, он либо сначала
[41:43.140 --> 41:48.500]  посещал вершину A, либо сначала B, но допустим, что он сначала посещал вершину A, стартовал
[41:48.500 --> 41:56.100]  откуда-то и шел-шел-шел-шел, но находясь в вершине A, алгоритм мог потенциально выбрать вот это вот
[41:56.100 --> 42:02.900]  ребро AB, да, но в любом случае он выбирал самое оптимальное ребро, и он мог выбрать вот это ребро,
[42:02.900 --> 42:07.860]  в числе прочих, потому что вершина B еще не была посещена, можно было бы выбрать ребро AB,
[42:07.860 --> 42:15.500]  но поскольку жадный алгоритм, у нас жадный по сути алгоритм, да, он выбирал ребро непревосходящее,
[42:15.500 --> 42:22.740]  значит, по весу AB, здесь же минимум берется фактически, да, вот в этот момент, минимум по всем
[42:22.740 --> 42:28.980]  возможным ребрам, которые можно из вершины A взять, вот, а это просто одно из ребер, которое торчало
[42:28.980 --> 42:34.580]  из вершины A и которое потенциально можно было взять, то есть, если вершина A посещалась раньше,
[42:34.580 --> 42:39.860]  то у нас гарантированно выполняется это неравенство, может быть, это тоже выполняется, мы не знаем,
[42:39.860 --> 42:44.060]  если вершина B посещалась раньше, то гарантированно выполняется второе неравенство, может быть,
[42:44.060 --> 42:52.380]  даже и первое, не знаем, но хотя бы одно из них точно выполняется, вот, это на самом деле как раз
[42:52.380 --> 42:59.820]  важный момент, который следует из, ну, определения того, что наш алгоритм, это жадный, по сути, алгоритм,
[42:59.820 --> 43:08.340]  не знаю, доказать, что писать какое-то или нет, или так, в общем, оставить,
[43:08.340 --> 43:17.980]  давайте так оставим, да, так, сейчас я и это потру, все равно я не помню точно,
[43:17.980 --> 43:22.740]  но константа там 4 или не 4, удастся она получить четверку здесь или что-то большее,
[43:22.740 --> 43:39.420]  но важен здесь порядок. Давайте мы рассмотрим с вами теперь, рассмотрим с вами легкие ребра графа,
[43:41.420 --> 43:42.700]  назовем ребро легким,
[43:48.860 --> 43:59.660]  если его вес не превосходит удвоенного, например, среднего веса ребер в оптимальном
[43:59.660 --> 44:06.060]  гамильтоновом цикле. Давайте мы ребро E обозначим, легкое, да, если вес этого ребра
[44:06.060 --> 44:15.460]  не превосходит удвоенного среднего веса ребер в гамильтоновом цикле. А какой средний вес
[44:15.460 --> 44:22.160]  ребер в гамильтоновом цикле? Ну, число ребер в гамильтоновом цикле в оптимальном
[44:22.160 --> 44:26.280]  равняется количеству вершин в графе. Количество вершин в графе
[44:26.280 --> 44:36.520]  обзовем n. Пусть будет n. Это средняя, это удвоенная средняя. Давайте заметим, что
[44:36.520 --> 44:46.360]  легких ребер у нас в гамильтоновом цикле не слишком мало. В оптимальном гамильтоновом
[44:46.360 --> 44:58.560]  цикле, в оптимальном гамильтоновом цикле, легких ребер не меньше половины,
[44:58.560 --> 45:13.600]  не меньше n пополам. Почему? Ну, потому что иначе очень легко получить противоречие. Иначе было бы
[45:13.600 --> 45:27.680]  такое неравенство. Если бы легких ребер было меньше, чем n пополам, значит тяжелых ребер было бы
[45:27.680 --> 45:33.880]  больше, чем n пополам, правда? И вес гамильтонового цикла, это же сумма всех входящих в него ребер. И
[45:33.880 --> 45:40.640]  получается, что он было бы больше, чем количество тяжелых ребер, помножить на вес тяжелого ребра.
[45:40.640 --> 45:49.000]  А вес тяжелого ребра, ну, не легкого ребра, это что-то большее, чем вот эта вот величина. 2 делить
[45:49.000 --> 46:04.440]  на n на w опт. Значит, это вот вес тяжелого ребра, вес нелегкого ребра, нелегких ребер. Ну,
[46:04.440 --> 46:20.040]  нижняя оценка этого веса, а это количество нелегких ребер. Противоречие. Не знаю,
[46:20.040 --> 46:33.120]  как это противоречие, вот так обозначим. Так, это, кстати говоря, такой дискретный аналог
[46:33.120 --> 46:39.280]  неравенства Маркова. А у вас уже было неравенство Маркова? А у вас тервера еще не было, да?
[47:03.120 --> 47:33.120]  А у вас уже было неравенство Маркова? А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да
[47:33.120 --> 48:03.120]  А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова
[48:03.120 --> 48:33.120]  Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да.
[48:33.120 --> 48:35.120]  А у вас уже было неравенство Маркова? Да. А у вас уже было неравенство Маркова? Да.
[49:03.120 --> 49:05.120]  Продолжение следует...
[49:33.120 --> 49:35.120]  Продолжение следует...
[50:03.120 --> 50:05.120]  Продолжение следует...
[50:33.120 --> 50:35.120]  Продолжение следует...
[51:03.120 --> 51:05.120]  Продолжение следует...
[51:33.120 --> 51:35.120]  Продолжение следует...
[52:03.120 --> 52:05.120]  Продолжение следует...
[52:33.120 --> 52:35.120]  Продолжение следует...
[53:03.120 --> 53:05.120]  Продолжение следует...
[53:33.120 --> 53:35.120]  Продолжение следует...
[54:03.120 --> 54:05.120]  Продолжение следует...
[54:33.120 --> 54:35.120]  Продолжение следует...
[55:03.120 --> 55:05.120]  Продолжение следует...
[55:33.120 --> 55:35.120]  Продолжение следует...
[56:03.120 --> 56:05.120]  Продолжение следует...
[56:33.120 --> 56:35.120]  Продолжение следует...
[57:03.120 --> 57:05.120]  Продолжение следует...
[57:33.120 --> 57:35.120]  Продолжение следует...
[58:03.120 --> 58:05.120]  Продолжение следует...
[58:33.120 --> 58:35.120]  Продолжение следует...
[59:03.120 --> 59:05.120]  Продолжение следует...
[59:34.120 --> 59:36.120]  Продолжение следует...
[59:37.120 --> 59:39.120]  Продолжение следует...
[59:40.120 --> 59:42.120]  Продолжение следует...
[59:43.120 --> 59:45.120]  Продолжение следует...
[59:46.120 --> 59:48.120]  Продолжение следует...
[59:49.120 --> 59:51.120]  Продолжение следует...
[59:52.120 --> 59:54.120]  Продолжение следует...
[59:55.120 --> 59:57.120]  Продолжение следует...
[59:58.120 --> 01:00:00.120]  Продолжение следует...
[01:00:00.120 --> 01:00:02.120]  Продолжение следует...
[01:00:03.120 --> 01:00:05.120]  Продолжение следует...
[01:00:06.120 --> 01:00:08.120]  Продолжение следует...
[01:00:09.120 --> 01:00:11.120]  Продолжение следует...
[01:00:12.120 --> 01:00:14.120]  Продолжение следует...
[01:00:15.120 --> 01:00:17.120]  Продолжение следует...
[01:00:18.120 --> 01:00:20.120]  Продолжение следует...
[01:00:21.120 --> 01:00:23.120]  Продолжение следует...
[01:00:24.120 --> 01:00:26.120]  Продолжение следует...
[01:00:27.120 --> 01:00:29.120]  Продолжение следует...
[01:00:31.120 --> 01:00:33.120]  Продолжение следует...
[01:00:34.120 --> 01:00:36.120]  Продолжение следует...
[01:00:37.120 --> 01:00:39.120]  Продолжение следует...
[01:00:40.120 --> 01:00:42.120]  Продолжение следует...
[01:00:43.120 --> 01:00:45.120]  Продолжение следует...
[01:00:46.120 --> 01:00:48.120]  Продолжение следует...
[01:00:49.120 --> 01:00:51.120]  Продолжение следует...
[01:00:52.120 --> 01:00:54.120]  Продолжение следует...
[01:00:55.120 --> 01:00:57.120]  Продолжение следует...
[01:00:58.120 --> 01:01:00.120]  Продолжение следует...
[01:01:01.120 --> 01:01:03.120]  Продолжение следует...
[01:01:04.120 --> 01:01:06.120]  Продолжение следует...
[01:01:07.120 --> 01:01:09.120]  Продолжение следует...
[01:01:10.120 --> 01:01:12.120]  Продолжение следует...
[01:01:13.120 --> 01:01:15.120]  Продолжение следует...
[01:01:16.120 --> 01:01:18.120]  Продолжение следует...
[01:01:19.120 --> 01:01:21.120]  Продолжение следует...
[01:01:22.120 --> 01:01:24.120]  Продолжение следует...
[01:01:25.120 --> 01:01:27.120]  Продолжение следует...
[01:01:28.120 --> 01:01:30.120]  Продолжение следует...
[01:01:31.120 --> 01:01:33.120]  Продолжение следует...
[01:01:34.120 --> 01:01:36.120]  Продолжение следует...
[01:01:37.120 --> 01:01:39.120]  Продолжение следует...
[01:01:40.120 --> 01:01:42.120]  Продолжение следует...
[01:01:43.120 --> 01:01:45.120]  Продолжение следует...
[01:01:46.120 --> 01:01:48.120]  Продолжение следует...
[01:01:49.120 --> 01:01:51.120]  Продолжение следует...
[01:01:52.120 --> 01:01:54.120]  Продолжение следует...
[01:01:55.120 --> 01:01:57.120]  Продолжение следует...
[01:01:58.120 --> 01:02:00.120]  Продолжение следует...
[01:02:01.120 --> 01:02:03.120]  Продолжение следует...
[01:02:04.120 --> 01:02:06.120]  Продолжение следует...
[01:02:07.120 --> 01:02:09.120]  Продолжение следует...
[01:02:10.120 --> 01:02:12.120]  Продолжение следует...
[01:02:13.120 --> 01:02:15.120]  Продолжение следует...
[01:02:16.120 --> 01:02:18.120]  Продолжение следует...
[01:02:19.120 --> 01:02:21.120]  Продолжение следует...
[01:02:22.120 --> 01:02:24.120]  Продолжение следует...
[01:02:25.120 --> 01:02:27.120]  Продолжение следует...
[01:02:28.120 --> 01:02:30.120]  Продолжение следует...
[01:02:31.120 --> 01:02:33.120]  Продолжение следует...
[01:02:34.120 --> 01:02:36.120]  Продолжение следует...
[01:02:37.120 --> 01:02:39.120]  Продолжение следует...
[01:02:40.120 --> 01:02:42.120]  Продолжение следует...
[01:02:43.120 --> 01:02:45.120]  Продолжение следует...
[01:02:46.120 --> 01:02:48.120]  Продолжение следует...
[01:02:49.120 --> 01:02:51.120]  Продолжение следует...
[01:02:52.120 --> 01:02:54.120]  Продолжение следует...
[01:02:55.120 --> 01:02:57.120]  Продолжение следует...
[01:02:58.120 --> 01:03:00.120]  Продолжение следует...
[01:03:01.120 --> 01:03:03.120]  Продолжение следует...
[01:03:04.120 --> 01:03:06.120]  Продолжение следует...
[01:03:07.120 --> 01:03:09.120]  Продолжение следует...
[01:03:10.120 --> 01:03:12.120]  Продолжение следует...
[01:03:13.120 --> 01:03:15.120]  Продолжение следует...
[01:03:16.120 --> 01:03:18.120]  Продолжение следует...
[01:03:19.120 --> 01:03:21.120]  Продолжение следует...
[01:03:22.120 --> 01:03:24.120]  Продолжение следует...
[01:03:25.120 --> 01:03:27.120]  Продолжение следует...
[01:03:28.120 --> 01:03:30.120]  Продолжение следует...
[01:03:31.120 --> 01:03:33.120]  Продолжение следует...
[01:03:34.120 --> 01:03:36.120]  Продолжение следует...
[01:03:37.120 --> 01:03:39.120]  Продолжение следует...
[01:03:40.120 --> 01:03:42.120]  Продолжение следует...
[01:03:43.120 --> 01:03:45.120]  Продолжение следует...
[01:03:46.120 --> 01:03:48.120]  Продолжение следует...
[01:03:49.120 --> 01:03:51.120]  Продолжение следует...
[01:03:52.120 --> 01:03:54.120]  Продолжение следует...
[01:03:55.120 --> 01:03:57.120]  Продолжение следует...
[01:03:58.120 --> 01:04:00.120]  Продолжение следует...
[01:04:01.120 --> 01:04:03.120]  Продолжение следует...
[01:04:04.120 --> 01:04:06.120]  Продолжение следует...
[01:04:07.120 --> 01:04:09.120]  Продолжение следует...
[01:04:10.120 --> 01:04:12.120]  Продолжение следует...
[01:04:13.120 --> 01:04:15.120]  Продолжение следует...
[01:04:16.120 --> 01:04:18.120]  Продолжение следует...
[01:04:19.120 --> 01:04:21.120]  Продолжение следует...
[01:04:22.120 --> 01:04:24.120]  Продолжение следует...
[01:04:25.120 --> 01:04:27.120]  Продолжение следует...
[01:04:28.120 --> 01:04:30.120]  Продолжение следует...
[01:04:31.120 --> 01:04:33.120]  Продолжение следует...
[01:04:34.120 --> 01:04:36.120]  Продолжение следует...
[01:04:37.120 --> 01:04:39.120]  Продолжение следует...
[01:04:40.120 --> 01:04:42.120]  Продолжение следует...
[01:04:43.120 --> 01:04:45.120]  Продолжение следует...
[01:04:46.120 --> 01:04:48.120]  Продолжение следует...
[01:04:49.120 --> 01:04:51.120]  Продолжение следует...
[01:04:52.120 --> 01:04:54.120]  Продолжение следует...
[01:04:55.120 --> 01:04:57.120]  Продолжение следует...
[01:04:58.120 --> 01:05:00.120]  Продолжение следует...
[01:05:00.120 --> 01:05:02.120]  Продолжение следует...
[01:05:03.120 --> 01:05:05.120]  Продолжение следует...
[01:05:06.120 --> 01:05:08.120]  Продолжение следует...
[01:05:09.120 --> 01:05:11.120]  Продолжение следует...
[01:05:12.120 --> 01:05:14.120]  Продолжение следует...
[01:05:15.120 --> 01:05:17.120]  Продолжение следует...
[01:05:18.120 --> 01:05:20.120]  Продолжение следует...
[01:05:21.120 --> 01:05:23.120]  Продолжение следует...
[01:05:31.120 --> 01:05:33.120]  Продолжение следует...
[01:05:34.120 --> 01:05:36.120]  Продолжение следует...
[01:05:37.120 --> 01:05:39.120]  Продолжение следует...
[01:05:40.120 --> 01:05:42.120]  Продолжение следует...
[01:05:43.120 --> 01:05:45.120]  Продолжение следует...
[01:05:46.120 --> 01:05:48.120]  Продолжение следует...
[01:05:49.120 --> 01:05:51.120]  Продолжение следует...
[01:05:52.120 --> 01:05:54.120]  Продолжение следует...
[01:05:55.120 --> 01:05:57.120]  Продолжение следует...
[01:05:58.120 --> 01:06:00.120]  Продолжение следует...
[01:06:01.120 --> 01:06:03.120]  Продолжение следует...
[01:06:04.120 --> 01:06:06.120]  Продолжение следует...
[01:06:07.120 --> 01:06:09.120]  Продолжение следует...
[01:06:10.120 --> 01:06:12.120]  Продолжение следует...
[01:06:13.120 --> 01:06:15.120]  Продолжение следует...
[01:06:16.120 --> 01:06:18.120]  Продолжение следует...
[01:06:19.120 --> 01:06:21.120]  Продолжение следует...
[01:06:22.120 --> 01:06:24.120]  Продолжение следует...
[01:06:25.120 --> 01:06:27.120]  Продолжение следует...
[01:06:28.120 --> 01:06:30.120]  Продолжение следует...
[01:06:31.120 --> 01:06:33.120]  Продолжение следует...
[01:06:34.120 --> 01:06:36.120]  Продолжение следует...
[01:06:37.120 --> 01:06:39.120]  Продолжение следует...
[01:06:40.120 --> 01:06:42.120]  Продолжение следует...
[01:06:43.120 --> 01:06:45.120]  Продолжение следует...
[01:06:46.120 --> 01:06:48.120]  Продолжение следует...
[01:06:49.120 --> 01:06:51.120]  Продолжение следует...
[01:06:52.120 --> 01:06:54.120]  Продолжение следует...
[01:06:55.120 --> 01:06:57.120]  Продолжение следует...
[01:06:58.120 --> 01:07:00.120]  Продолжение следует...
[01:07:01.120 --> 01:07:03.120]  Продолжение следует...
[01:07:04.120 --> 01:07:06.120]  Продолжение следует...
[01:07:07.120 --> 01:07:09.120]  Продолжение следует...
[01:07:10.120 --> 01:07:12.120]  Продолжение следует...
[01:07:13.120 --> 01:07:15.120]  Продолжение следует...
[01:07:16.120 --> 01:07:18.120]  Продолжение следует...
[01:07:19.120 --> 01:07:21.120]  Продолжение следует...
[01:07:22.120 --> 01:07:24.120]  Продолжение следует...
[01:07:25.120 --> 01:07:27.120]  Продолжение следует...
[01:07:28.120 --> 01:07:30.120]  Продолжение следует...
[01:07:31.120 --> 01:07:33.120]  Продолжение следует...
[01:07:34.120 --> 01:07:36.120]  Продолжение следует...
[01:07:37.120 --> 01:07:39.120]  Продолжение следует...
[01:07:40.120 --> 01:07:42.120]  Продолжение следует...
[01:07:43.120 --> 01:07:45.120]  Продолжение следует...
[01:07:46.120 --> 01:07:48.120]  Продолжение следует...
[01:07:49.120 --> 01:07:51.120]  Продолжение следует...
[01:07:52.120 --> 01:07:54.120]  Продолжение следует...
[01:07:55.120 --> 01:07:57.120]  Продолжение следует...
[01:07:58.120 --> 01:08:00.120]  Продолжение следует...
[01:08:01.120 --> 01:08:03.120]  Продолжение следует...
[01:08:04.120 --> 01:08:06.120]  Продолжение следует...
[01:08:07.120 --> 01:08:09.120]  Продолжение следует...
[01:08:10.120 --> 01:08:12.120]  Продолжение следует...
[01:08:13.120 --> 01:08:15.120]  Продолжение следует...
[01:08:16.120 --> 01:08:18.120]  Продолжение следует...
[01:08:19.120 --> 01:08:21.120]  Продолжение следует...
[01:08:22.120 --> 01:08:24.120]  Продолжение следует...
[01:08:25.120 --> 01:08:27.120]  Продолжение следует...
[01:08:28.120 --> 01:08:30.120]  Продолжение следует...
[01:08:31.120 --> 01:08:33.120]  Продолжение следует...
[01:08:34.120 --> 01:08:36.120]  Продолжение следует...
[01:08:37.120 --> 01:08:39.120]  Продолжение следует...
[01:08:40.120 --> 01:08:42.120]  Продолжение следует...
[01:08:43.120 --> 01:08:45.120]  Продолжение следует...
[01:08:46.120 --> 01:08:48.120]  Продолжение следует...
[01:08:49.120 --> 01:08:51.120]  Продолжение следует...
[01:08:52.120 --> 01:08:54.120]  Продолжение следует...
[01:08:55.120 --> 01:08:57.120]  Продолжение следует...
[01:08:58.120 --> 01:09:00.120]  Продолжение следует...
[01:09:01.120 --> 01:09:03.120]  Продолжение следует...
[01:09:04.120 --> 01:09:06.120]  Продолжение следует...
[01:09:07.120 --> 01:09:09.120]  Продолжение следует...
[01:09:10.120 --> 01:09:12.120]  Продолжение следует...
[01:09:13.120 --> 01:09:15.120]  Продолжение следует...
[01:09:16.120 --> 01:09:18.120]  Продолжение следует...
[01:09:19.120 --> 01:09:21.120]  Продолжение следует...
[01:09:22.120 --> 01:09:24.120]  Продолжение следует...
[01:09:25.120 --> 01:09:27.120]  Продолжение следует...
[01:09:28.120 --> 01:09:30.120]  Продолжение следует...
[01:09:31.120 --> 01:09:33.120]  Продолжение следует...
[01:09:34.120 --> 01:09:36.120]  Продолжение следует...
[01:09:37.120 --> 01:09:39.120]  Продолжение следует...
[01:09:40.120 --> 01:09:42.120]  Продолжение следует...
[01:09:43.120 --> 01:09:45.120]  Продолжение следует...
[01:09:46.120 --> 01:09:48.120]  Продолжение следует...
[01:09:49.120 --> 01:09:51.120]  Продолжение следует...
[01:09:52.120 --> 01:09:54.120]  Продолжение следует...
[01:09:55.120 --> 01:09:57.120]  Продолжение следует...
[01:09:58.120 --> 01:10:00.120]  Продолжение следует...
[01:10:01.120 --> 01:10:03.120]  Продолжение следует...
[01:10:04.120 --> 01:10:06.120]  Продолжение следует...
[01:10:07.120 --> 01:10:09.120]  Продолжение следует...
[01:10:10.120 --> 01:10:12.120]  Продолжение следует...
[01:10:13.120 --> 01:10:15.120]  Продолжение следует...
[01:10:16.120 --> 01:10:18.120]  Продолжение следует...
[01:10:19.120 --> 01:10:21.120]  Продолжение следует...
[01:10:22.120 --> 01:10:24.120]  Продолжение следует...
[01:10:25.120 --> 01:10:27.120]  Продолжение следует...
[01:10:28.120 --> 01:10:30.120]  Продолжение следует...
[01:10:31.120 --> 01:10:33.120]  Продолжение следует...
[01:10:34.120 --> 01:10:36.120]  Продолжение следует...
[01:10:37.120 --> 01:10:39.120]  Продолжение следует...
[01:10:40.120 --> 01:10:42.120]  Продолжение следует...
[01:10:43.120 --> 01:10:45.120]  Продолжение следует...
[01:10:46.120 --> 01:10:48.120]  Продолжение следует...
[01:10:49.120 --> 01:10:51.120]  Продолжение следует...
[01:10:52.120 --> 01:10:54.120]  Продолжение следует...
[01:10:55.120 --> 01:10:57.120]  Продолжение следует...
[01:10:58.120 --> 01:11:00.120]  Продолжение следует...
[01:11:01.120 --> 01:11:03.120]  Продолжение следует...
[01:11:04.120 --> 01:11:06.120]  Продолжение следует...
[01:11:07.120 --> 01:11:09.120]  Продолжение следует...
[01:11:10.120 --> 01:11:12.120]  Продолжение следует...
[01:11:13.120 --> 01:11:15.120]  Продолжение следует...
[01:11:16.120 --> 01:11:18.120]  Продолжение следует...
[01:11:19.120 --> 01:11:21.120]  Продолжение следует...
[01:11:22.120 --> 01:11:24.120]  Продолжение следует...
[01:11:25.120 --> 01:11:27.120]  Продолжение следует...
[01:11:28.120 --> 01:11:30.120]  Продолжение следует...
[01:11:31.120 --> 01:11:33.120]  Продолжение следует...
[01:11:34.120 --> 01:11:36.120]  Продолжение следует...
[01:11:37.120 --> 01:11:39.120]  Продолжение следует...
[01:11:40.120 --> 01:11:42.120]  Продолжение следует...
[01:11:43.120 --> 01:11:45.120]  Продолжение следует...
[01:11:46.120 --> 01:11:48.120]  Продолжение следует...
[01:11:49.120 --> 01:11:51.120]  Продолжение следует...
[01:11:52.120 --> 01:11:54.120]  Продолжение следует...
[01:11:55.120 --> 01:11:57.120]  Продолжение следует...
[01:11:58.120 --> 01:12:00.120]  Продолжение следует...
[01:12:01.120 --> 01:12:03.120]  Продолжение следует...
[01:12:04.120 --> 01:12:06.120]  Продолжение следует...
[01:12:07.120 --> 01:12:09.120]  Продолжение следует...
[01:12:10.120 --> 01:12:12.120]  Продолжение следует...
[01:12:13.120 --> 01:12:15.120]  Продолжение следует...
[01:12:16.120 --> 01:12:18.120]  Продолжение следует...
[01:12:19.120 --> 01:12:21.120]  Продолжение следует...
[01:12:22.120 --> 01:12:24.120]  Продолжение следует...
[01:12:25.120 --> 01:12:27.120]  Продолжение следует...
[01:12:28.120 --> 01:12:30.120]  Продолжение следует...
[01:12:31.120 --> 01:12:33.120]  Продолжение следует...
[01:12:34.120 --> 01:12:36.120]  Продолжение следует...
[01:12:37.120 --> 01:12:39.120]  Продолжение следует...
[01:12:40.120 --> 01:12:42.120]  Продолжение следует...
[01:12:43.120 --> 01:12:45.120]  Продолжение следует...
[01:12:46.120 --> 01:12:48.120]  Продолжение следует...
[01:12:49.120 --> 01:12:51.120]  Продолжение следует...
[01:12:52.120 --> 01:12:54.120]  Продолжение следует...
[01:12:55.120 --> 01:12:57.120]  Продолжение следует...
[01:12:58.120 --> 01:13:00.120]  Продолжение следует...
[01:13:01.120 --> 01:13:03.120]  Продолжение следует...
[01:13:04.120 --> 01:13:06.120]  Продолжение следует...
[01:13:07.120 --> 01:13:09.120]  Продолжение следует...
[01:13:10.120 --> 01:13:12.120]  Продолжение следует...
[01:13:13.120 --> 01:13:15.120]  Продолжение следует...
[01:13:16.120 --> 01:13:18.120]  Продолжение следует...
[01:13:19.120 --> 01:13:21.120]  Продолжение следует...
[01:13:22.120 --> 01:13:24.120]  Продолжение следует...
[01:13:25.120 --> 01:13:27.120]  Продолжение следует...
[01:13:28.120 --> 01:13:30.120]  Продолжение следует...
[01:13:31.120 --> 01:13:33.120]  Продолжение следует...
[01:13:34.120 --> 01:13:36.120]  Продолжение следует...
[01:13:37.120 --> 01:13:39.120]  Продолжение следует...
[01:13:40.120 --> 01:13:42.120]  Продолжение следует...
[01:13:43.120 --> 01:13:45.120]  Продолжение следует...
[01:13:46.120 --> 01:13:48.120]  Продолжение следует...
[01:13:49.120 --> 01:13:51.120]  Продолжение следует...
[01:13:52.120 --> 01:13:54.120]  Продолжение следует...
[01:13:55.120 --> 01:13:57.120]  Продолжение следует...
[01:13:58.120 --> 01:14:00.120]  Продолжение следует...
[01:14:01.120 --> 01:14:03.120]  Продолжение следует...
[01:14:04.120 --> 01:14:06.120]  Продолжение следует...
[01:14:07.120 --> 01:14:09.120]  Продолжение следует...
[01:14:10.120 --> 01:14:12.120]  Продолжение следует...
[01:14:13.120 --> 01:14:15.120]  Продолжение следует...
[01:14:16.120 --> 01:14:18.120]  Продолжение следует...
[01:14:19.120 --> 01:14:21.120]  Продолжение следует...
[01:14:22.120 --> 01:14:24.120]  Продолжение следует...
[01:14:25.120 --> 01:14:27.120]  Продолжение следует...
[01:14:28.120 --> 01:14:30.120]  Продолжение следует...
[01:14:31.120 --> 01:14:33.120]  Продолжение следует...
[01:14:34.120 --> 01:14:36.120]  Продолжение следует...
[01:14:37.120 --> 01:14:39.120]  Продолжение следует...
[01:14:40.120 --> 01:14:42.120]  Продолжение следует...
[01:14:43.120 --> 01:14:45.120]  Продолжение следует...
[01:14:46.120 --> 01:14:48.120]  Продолжение следует...
[01:14:49.120 --> 01:14:51.120]  Продолжение следует...
[01:14:52.120 --> 01:14:54.120]  Продолжение следует...
[01:14:55.120 --> 01:14:57.120]  Продолжение следует...
[01:14:58.120 --> 01:15:00.120]  Продолжение следует...
[01:15:01.120 --> 01:15:03.120]  Продолжение следует...
[01:15:04.120 --> 01:15:06.120]  Продолжение следует...
[01:15:07.120 --> 01:15:09.120]  Продолжение следует...
[01:15:10.120 --> 01:15:12.120]  Продолжение следует...
[01:15:13.120 --> 01:15:15.120]  Продолжение следует...
[01:15:16.120 --> 01:15:18.120]  Продолжение следует...
[01:15:19.120 --> 01:15:21.120]  Продолжение следует...
[01:15:22.120 --> 01:15:24.120]  Продолжение следует...
[01:15:25.120 --> 01:15:27.120]  Продолжение следует...
[01:15:28.120 --> 01:15:30.120]  Продолжение следует...
[01:15:31.120 --> 01:15:33.120]  Продолжение следует...
[01:15:34.120 --> 01:15:36.120]  Продолжение следует...
[01:15:37.120 --> 01:15:39.120]  Продолжение следует...
[01:15:40.120 --> 01:15:42.120]  Продолжение следует...
[01:15:43.120 --> 01:15:45.120]  Продолжение следует...
[01:15:46.120 --> 01:15:48.120]  Продолжение следует...
[01:15:49.120 --> 01:15:51.120]  Продолжение следует...
[01:15:52.120 --> 01:15:54.120]  Продолжение следует...
[01:15:55.120 --> 01:15:57.120]  Продолжение следует...
[01:15:58.120 --> 01:16:00.120]  Продолжение следует...
[01:16:01.120 --> 01:16:03.120]  Продолжение следует...
[01:16:04.120 --> 01:16:06.120]  Продолжение следует...
[01:16:07.120 --> 01:16:09.120]  Продолжение следует...
[01:16:10.120 --> 01:16:12.120]  Продолжение следует...
[01:16:13.120 --> 01:16:15.120]  Продолжение следует...
[01:16:16.120 --> 01:16:18.120]  Продолжение следует...
[01:16:19.120 --> 01:16:21.120]  Продолжение следует...
[01:16:22.120 --> 01:16:24.120]  Продолжение следует...
[01:16:25.120 --> 01:16:27.120]  Продолжение следует...
[01:16:28.120 --> 01:16:30.120]  Продолжение следует...
[01:16:31.120 --> 01:16:33.120]  Продолжение следует...
[01:16:34.120 --> 01:16:36.120]  Продолжение следует...
[01:16:37.120 --> 01:16:39.120]  Продолжение следует...
[01:16:40.120 --> 01:16:42.120]  Продолжение следует...
[01:16:43.120 --> 01:16:45.120]  Продолжение следует...
[01:16:46.120 --> 01:16:48.120]  Продолжение следует...
[01:16:49.120 --> 01:16:51.120]  Продолжение следует...
[01:16:52.120 --> 01:16:54.120]  Продолжение следует...
[01:16:55.120 --> 01:16:57.120]  Продолжение следует...
[01:16:58.120 --> 01:17:00.120]  Продолжение следует...
[01:17:01.120 --> 01:17:03.120]  Продолжение следует...
[01:17:04.120 --> 01:17:06.120]  Продолжение следует...
[01:17:07.120 --> 01:17:09.120]  Продолжение следует...
[01:17:10.120 --> 01:17:12.120]  Продолжение следует...
