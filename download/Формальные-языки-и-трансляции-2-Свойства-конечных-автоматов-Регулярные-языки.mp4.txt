[00:00.000 --> 00:10.000]  Всем доброго дня, мы с вами продолжаем сегодня проходить наш курс.
[00:10.000 --> 00:17.000]  Некоторые объявления, возможно, кого-то оно порадует, кого-то оно не порадует.
[00:17.000 --> 00:21.000]  Следующая лекция будет в записи.
[00:21.000 --> 00:27.000]  Мне придется уехать, поэтому я заранее сделаю запись и ее выложу.
[00:27.000 --> 00:29.000]  Поэтому мы сможем пообедать.
[00:29.000 --> 00:31.000]  В том числе, да.
[00:31.000 --> 00:37.000]  У всех режим питания свой.
[00:37.000 --> 00:45.000]  Я даже считаю, что это хорошо, что эта лекция будет в записи.
[00:45.000 --> 00:50.000]  Потому что это, на самом деле, одна из самых сложных лекций, которые есть в первой части курса.
[00:50.000 --> 00:55.000]  Чтобы лучше разобрались.
[00:55.000 --> 01:04.000]  Есть же это замечательное выражение, когда красная шапочка к волку к бабушке приходит.
[01:04.000 --> 01:07.000]  Она спрашивает, а зачем тебе большие уши?
[01:07.000 --> 01:10.000]  Для того, чтобы я тебя хорошо слышал.
[01:10.000 --> 01:12.000]  Вот точно так же и здесь будет.
[01:12.000 --> 01:17.000]  Сегодня мы с вами говорим про свойства конечных автоматов.
[01:17.000 --> 01:21.000]  И разберем кое-что, что было уже на семинарах.
[01:21.000 --> 01:25.000]  Я надеюсь, вы все уже разобрались с регулярными языками.
[01:25.000 --> 01:27.000]  С регулярными выражениями было.
[01:27.000 --> 01:29.000]  Мы тем продолжим.
[01:29.000 --> 01:35.000]  Результатным вопросом, который у нас был, я его сейчас открою.
[01:35.000 --> 01:40.000]  У вас есть последний момент переголосовать на него.
[01:40.000 --> 01:45.000]  Скорость лекции оставляем такой же темп.
[01:45.000 --> 01:48.000]  Проголосала 27%.
[01:48.000 --> 01:51.000]  Немного медленнее проголосовала 30%.
[01:51.000 --> 01:56.000]  Поэтому мы замедлим, но на эпсилу.
[01:56.000 --> 02:01.000]  Но эпсил может быть очень большой.
[02:01.000 --> 02:03.000]  Эпсилу можно срезать?
[02:03.000 --> 02:06.000]  Скорее, нет чем, да.
[02:06.000 --> 02:10.000]  А если вычитаете, что на экзамен тоже поменьше будет?
[02:10.000 --> 02:13.000]  То, что мы прочитаем, то будет на экзамен.
[02:13.000 --> 02:16.000]  То есть доп-материалов не будет.
[02:16.000 --> 02:19.000]  Мы все голосуем зачитать в 100 раз в месяц.
[02:19.000 --> 02:21.000]  А, конечно, разбежались.
[02:21.000 --> 02:24.000]  Мы носим на экзамен одну теорию.
[02:24.000 --> 02:28.000]  Так, давайте вспомним, что было в предыдущих сериях.
[02:31.000 --> 02:33.000]  Еще что?
[02:34.000 --> 02:38.000] arden не 32?
[02:43.000 --> 02:44.000]  Как этоורически diferூ?
[02:44.000 --> 02:46.000]  Ну да.
[02:46.000 --> 02:49.000]  Вообще, определили, что такое недetermинированный конечный автомат.
[02:49.000 --> 02:55.000]  Далее, мы поняли, что можно сделать недetermинированный конечный автомат с одним завершающим состоянием.
[02:55.000 --> 03:01.000]  И отдельно мы поняли, что можно построить недetermинированный конечный автомат с однобуквенными переходами.
[03:03.000 --> 03:11.000]  В домашнем задании, которое будет сейчас, вам нужно будет разобраться, можно ли эти два требования совместить.
[03:11.000 --> 03:18.000]  Собственно, мы с вами определили недetermинированный конечный автомат с однобуквенными переходами и одним завершающим состоянием.
[03:18.000 --> 03:23.000]  А сегодня мы с вами будем говорить про то, можно ли этот автомат детерминировать.
[03:23.000 --> 03:31.000]  То есть сделать так, чтобы из каждого состояния по каждой буквы было не более чем один переход.
[03:31.000 --> 03:34.000]  Вот это наша цель сегодняшняя.
[03:34.000 --> 03:39.000]  Но прежде чем мы с вами начнем, у нас все-таки курс немного алгоритмический.
[03:39.000 --> 03:42.000]  Поэтому мы с вами сейчас берем алгоритм.
[03:44.000 --> 03:46.000]  Значит, в чем будет состоять алгоритм?
[03:46.000 --> 03:49.000]  У нас с вами есть автомат с однобуквенными переходами.
[03:50.000 --> 03:55.000]  И наша цель – научиться по нему определять, лежит ли слово в языке или нет.
[03:58.000 --> 04:00.000]  Это план наших занятий, да?
[04:00.000 --> 04:02.000]  Он такой сегодня достаточно большой.
[04:03.000 --> 04:10.000]  То есть смотрите, у нас с вами есть автомат с однобуквенными переходами.
[04:10.000 --> 04:13.000]  И у нас есть слово W в онлайке.
[04:13.000 --> 04:18.000]  Нам надо определить, лежит ли слово в языке, занимаем этим автоматом.
[04:25.000 --> 04:29.000]  Автомат, значит слово W какое-то.
[04:32.000 --> 04:36.000]  Да, это однобуквенный по-моему обозначает так.
[04:36.000 --> 04:39.000]  Значит, и нам надо ответить на вопрос.
[04:39.000 --> 04:42.000]  Лежит ли слово в языке, задаваем автоматом.
[04:48.000 --> 04:50.000]  Давайте придумаем алгоритм.
[04:50.000 --> 04:52.000]  За кой сегодня?
[04:52.000 --> 04:54.000]  Пока затупую.
[04:54.000 --> 04:59.000]  Но храним множество всех состояний, которые мы смогли дойти и делаем из всех переходов.
[04:59.000 --> 05:01.000]  Да, именно так.
[05:01.000 --> 05:03.000]  То есть смотрите, идея такая.
[05:03.000 --> 05:06.000]  Сустроим изначально НК с однобуквенными переходами.
[05:06.000 --> 05:18.000]  А дальше для слова WН храним следующее множество.
[05:18.000 --> 05:28.000]  Дельта КТ равно дельта от Q0 в КТ.
[05:28.000 --> 05:32.000]  Помните, что это за дельта?
[05:32.000 --> 05:46.000]  Это множество состояний, из которых, из Q0, по слову,
[05:46.000 --> 05:55.000]  в КТ мы можем дойти до состояния Q, прочитав слово целиком.
[05:55.000 --> 06:00.000]  Вот такой переход.
[06:00.000 --> 06:07.000]  Значит, как строится переход для Q из Q КТ, Q К плюс первое?
[06:07.000 --> 06:32.000]  Собственно, нам нужно взять переход Q, Q КТ, взять все переходы вида Q в К плюс один, Q штрих.
[06:32.000 --> 06:36.000]  И тогда у нас Q К Т плюс один.
[06:36.000 --> 06:47.000]  По факту это будет все такие Q штрих, что...
[06:47.000 --> 06:56.000]  Дельта Q прям Q К Т.
[06:56.000 --> 07:06.000]  Нет, дельта это множество переходов по самому автоматику.
[07:06.000 --> 07:18.000]  Да, на проекте Риверда.
[07:18.000 --> 07:26.000]  Так, смотрите, здесь нужно доказать один факт, чисто строго математически.
[07:26.000 --> 07:28.000]  Смотрите какой.
[07:28.000 --> 07:42.000]  Нам нужно доказать, что на самом деле Q К Т плюс один при этом будет равняться дельта Q0 В1 и так далее ВК плюс первое.
[07:42.000 --> 07:45.000]  То есть нам нужно будет доказать вот этот факт.
[07:45.000 --> 07:51.000]  Что вот такое множество, которое мы с вами построили, оно будет таким.
[07:51.000 --> 07:57.000]  Это если мы говорим формальным.
[07:57.000 --> 08:00.000]  Как это сделать?
[08:00.000 --> 08:11.000]  Давайте просто распишем это все дело.
[08:11.000 --> 08:16.000]  Дельта Q0 ВК Т.
[08:16.000 --> 08:25.000]  Да, я сейчас... Зачем это делаю? Этот факт просто нам еще раз понадобится в одном месте в доказательстве.
[08:25.000 --> 08:36.000]  Какое что? Q.
[08:36.000 --> 08:38.000]  Q штрих.
[08:38.000 --> 08:41.000]  То есть у нас появляется вот такой переход.
[08:41.000 --> 08:48.000]  Мы просто написали, что у нас с вами такое дельта К Т.
[08:48.000 --> 08:57.000]  А что такое дельта К Т?
[08:57.000 --> 09:00.000]  Вот смотрите, важный трюк.
[09:00.000 --> 09:07.000]  Мы говорим, что существование мы можем расписать вот таким образом.
[09:07.000 --> 09:11.000]  ВК Т Q Эпсилон.
[09:11.000 --> 09:18.000]  А вот это можно расписать как переход.
[09:18.000 --> 09:23.000]  Q штрих Эпсилон.
[09:23.000 --> 09:44.000]  А из этого, смотрите, из свойства определения будет следовать, что Q0 ВК Т ВК плюс один будет следовать Q ВК плюс первое.
[09:44.000 --> 09:47.000]  А из этого будет следовать Q штрих Эпсилон.
[09:47.000 --> 10:01.000]  То есть это как раз то самое дельта от Q0 ВК плюс один.
[10:01.000 --> 10:08.000]  Только, наверное, в предпоследнем множестве надо еще квантор по Q поставить.
[10:08.000 --> 10:10.000]  Существует Q, да?
[10:10.000 --> 10:12.000]  Да, оттуда Q берется.
[10:12.000 --> 10:19.000]  Да, согласен.
[10:19.000 --> 10:20.000]  Вот такой переход.
[10:20.000 --> 10:23.000]  На самом деле, зачем я его расписал?
[10:23.000 --> 10:27.000]  Мы просто такой же переход будем писать уже несколько минут позже.
[10:27.000 --> 10:34.000]  Поэтому можно считать, что это такая небольшая лемма, которая нам понадобится для доказательств дальнейших фактов.
[10:34.000 --> 10:51.000]  Собственно, а дальше нам необходимо третий шаг, нам необходимо проверить, является ли QН в пересечении может он в завершающем состоянии не пустой.
[10:51.000 --> 10:53.000]  То есть, что это означает?
[10:53.000 --> 11:07.000]  Это означает на самом деле следующее, что дельта от Q0 не пустая.
[11:07.000 --> 11:08.000]  Это равносильно.
[11:08.000 --> 11:11.000]  А это что значит?
[11:11.000 --> 11:13.000]  Это означает что?
[11:13.000 --> 11:14.000]  Что это означает?
[11:14.000 --> 11:17.000]  Сейчас, секунду.
[11:17.000 --> 11:35.000]  Ну да, что существует Qрезf такое, что вот так.
[11:35.000 --> 11:44.000]  А это относительно тому, что наше слово принадлежит языку A.
[11:44.000 --> 11:47.000]  Так, понятно, да?
[11:47.000 --> 11:48.000]  Вопрос.
[11:48.000 --> 12:02.000]  За сколько обновляется у нас Qкт?
[12:02.000 --> 12:12.000]  Утверждение, что это происходит за мощность Q плюс мощность дельта.
[12:12.000 --> 12:13.000]  Почему?
[12:13.000 --> 12:20.000]  Потому что нам нужно пройти по всем вершинам и собрать это множество Qкт.
[12:20.000 --> 12:25.000]  Сохраним Qкт в виде анордера сета или чего-нибудь там.
[12:25.000 --> 12:27.000]  Давайте считать, что симпотика в среднем.
[12:27.000 --> 12:30.000]  А это что?
[12:30.000 --> 12:37.000]  Qкт это множество в состоянии в нашем автомате изначально.
[12:37.000 --> 12:40.000]  Да, дельта это множество переходов.
[12:40.000 --> 12:49.000]  И мы будем хранить вот эти переходы по слоям.
[12:49.000 --> 12:53.000]  Ну все наверное писали BFS.
[12:53.000 --> 12:56.000]  Или алгоритм на нахождение кратчащих расстояний на граф.
[12:56.000 --> 12:58.000]  В принципе алгоритм будет ровно такой же.
[12:58.000 --> 13:01.000]  Так, в итоге, а симпотика какая у нас будет?
[13:01.000 --> 13:04.000]  Всего алгоритма целиком.
[13:04.000 --> 13:07.000]  Для нахождения слова.
[13:07.000 --> 13:12.000]  Qв плюс е умножить на l.
[13:12.000 --> 13:19.000]  Так, длина слова и каждый переход у нас с вами.
[13:19.000 --> 13:22.000]  На самом деле кажется просто е умножить на l.
[13:22.000 --> 13:26.000]  Потому что мы больше чем q различных мы не попадем.
[13:26.000 --> 13:30.000]  Ну, все-таки в автомате может быть один переход.
[13:30.000 --> 13:34.000]  Ну, а если у нас е перехода, то мы изначально вершины не пойдем больше, чем q вершины.
[13:34.000 --> 13:38.000]  Ну, да, скорее всего это можно каким-то образом упростить.
[13:38.000 --> 13:42.000]  Но в целом можем считать, что симпотика такая.
[13:42.000 --> 13:45.000]  То есть у нас получается симпотика квадратичная.
[13:45.000 --> 13:48.000]  Ну, плюс-минус квадратичная.
[13:48.000 --> 13:51.000]  А сколько допамяти нам требуется?
[13:57.000 --> 14:00.000]  Q. Нам нужно qкт хранить.
[14:04.000 --> 14:07.000]  О, большое, а вот длины словаку.
[14:07.000 --> 14:10.000]  Вот такой алгоритм.
[14:10.000 --> 14:13.000]  Понятна суть?
[14:13.000 --> 14:16.000]  Да?
[14:16.000 --> 14:19.000]  В презентации, вы только говорите, что у нас уже однобухленные презентации.
[14:19.000 --> 14:22.000]  Написано, что мы строим его.
[14:22.000 --> 14:25.000]  Да, ну вот.
[14:25.000 --> 14:28.000]  Мы не обсуждали с точки зрения алгоритма.
[14:28.000 --> 14:31.000]  А, ну давайте обсудим.
[14:31.000 --> 14:34.000]  Собственно, хорошая идея.
[14:34.000 --> 14:37.000]  Обсудим, как строится автомат с однобухленными переходами.
[14:37.000 --> 14:41.000]  Значит, давайте считать, что пока что мы строим уже автомат
[14:41.000 --> 14:44.000]  с не более, чем однобухленными переходами.
[14:44.000 --> 14:47.000]  На самом деле, из следующего будет понятно, как это сделать.
[14:52.000 --> 14:55.000]  Что нам необходимо уметь, чтобы мы строили автомат
[14:55.000 --> 14:58.000]  с однобухленными переходами?
[14:58.000 --> 15:01.000]  Что нам необходимо уметь встроить в автомате
[15:01.000 --> 15:04.000]  с однобухленными переходами?
[15:04.000 --> 15:07.000]  Так, смотрите.
[15:07.000 --> 15:10.000]  Это...
[15:10.000 --> 15:13.000]  Смотрите, а у нас точно не должно быть нигде суммарной длины
[15:13.000 --> 15:16.000]  строк на ребра?
[15:16.000 --> 15:19.000]  Где? Вот там?
[15:19.000 --> 15:22.000]  У нас там на ребре всегда одна буква.
[15:22.000 --> 15:25.000]  У нас там на каждом ребре одна буква написана.
[15:25.000 --> 15:28.000]  Так, теперь обсудим это.
[15:28.000 --> 15:31.000]  Значит, что нам необходимо построить?
[15:31.000 --> 15:34.000]  Нам необходимо построить следующую вещь.
[15:34.000 --> 15:37.000]  Учиться быстро отвечать на вот такой вопрос.
[15:37.000 --> 15:40.000]  Находить множество дельта куэрсов.
[15:43.000 --> 15:46.000]  То есть все состояния, из которых мы можем перейти
[15:46.000 --> 15:49.000]  по пустому слову.
[15:49.000 --> 15:52.000]  Логично?
[15:52.000 --> 15:55.000]  Потому что, напоминая, в чем заключается алгоритм.
[15:59.000 --> 16:02.000]  Мы берем все переходы
[16:02.000 --> 16:05.000]  и добавляем дополнительный переход по букве.
[16:05.000 --> 16:08.000]  Для каждого состояния нам нужно уметь
[16:08.000 --> 16:11.000]  эффективно находить дельт куэрсов.
[16:11.000 --> 16:14.000]  А по факту что мы можем сказать?
[16:14.000 --> 16:17.000]  Что это у нас некоторый граф.
[16:22.000 --> 16:25.000]  Ве, где В равняется наше множество состояний.
[16:25.000 --> 16:28.000]  А Е
[16:28.000 --> 16:31.000]  состоит из пар
[16:31.000 --> 16:34.000]  В1, В2.
[16:34.000 --> 16:37.000]  Таких.
[16:40.000 --> 16:43.000]  Давайте все-таки это состояние у нас.
[16:43.000 --> 16:46.000]  Ку1, Ку2.
[16:47.000 --> 16:50.000]  Что у нас есть эффективные переходы.
[16:53.000 --> 16:56.000]  Ну и тогда нам нужно на самом деле уметь считать
[16:56.000 --> 16:59.000]  следующую величину.
[17:11.000 --> 17:14.000]  Ну да, да, да. То есть нам нужно научиться
[17:14.000 --> 17:17.000]  на вопрос, умеем ли из определенной вершины
[17:17.000 --> 17:20.000]  дойти до другой вершины по общему переходу.
[17:20.000 --> 17:23.000]  Все.
[17:26.000 --> 17:29.000]  Дельта от чего?
[17:35.000 --> 17:38.000]  Ну а здесь можно уже использовать любой алгоритм,
[17:38.000 --> 17:41.000]  который вам нравится.
[17:41.000 --> 17:44.000]  Хоть Флойда, хоть Форд Малмана.
[17:47.000 --> 17:50.000]  Ну любой, в общем.
[17:50.000 --> 17:53.000]  В общем, любой алгоритм, который за Ве отработает.
[17:53.000 --> 17:56.000]  Ну а здесь будет количество
[17:56.000 --> 17:59.000]  вершин, количество ребер.
[17:59.000 --> 18:02.000]  В этом всем процессе.
[18:02.000 --> 18:05.000]  Для каждой пары нужно найти ответ.
[18:06.000 --> 18:09.000]  Вот. Обсудили алгоритм.
[18:09.000 --> 18:12.000]  Понятно суть?
[18:12.000 --> 18:15.000]  Хорошо. Ладно.
[18:15.000 --> 18:18.000]  Значит, не поверите.
[18:18.000 --> 18:21.000]  Наша сегодняшняя цель
[18:21.000 --> 18:24.000]  будет избавиться от вот этого страшного кракера.
[18:24.000 --> 18:27.000]  Восьмой точке.
[18:27.000 --> 18:30.000]  У нас тогда и дельта переприсвоилась, получается, в Ве.
[18:30.000 --> 18:33.000]  Где? Там?
[18:33.000 --> 18:36.000]  Да.
[18:36.000 --> 18:39.000]  Есть такое.
[18:39.000 --> 18:42.000]  Только смотрите, давайте еще один важный тезис,
[18:42.000 --> 18:45.000]  который я подчеркну. Не поверите,
[18:45.000 --> 18:48.000]  нам здесь вообще, если честно,
[18:48.000 --> 18:51.000]  на асимптотику построения вот этих вот алгоритмов с переходами
[18:51.000 --> 18:54.000]  будет ей, честно, плевать.
[18:54.000 --> 18:57.000]  Знаете почему?
[18:57.000 --> 19:00.000]  Потому что такие алгоритмы зачастую строятся один раз.
[19:00.000 --> 19:03.000]  И тут мы касаемся темы компиляторов.
[19:03.000 --> 19:06.000]  Что такое компилятор?
[19:06.000 --> 19:09.000]  Это программа, которая берет что-то из языка А,
[19:09.000 --> 19:12.000]  переводит это в язык Б.
[19:12.000 --> 19:15.000]  И наша цель как раз, когда мы пишем компилятор,
[19:15.000 --> 19:18.000]  собственно, научиться строить вот какой-то автомат,
[19:18.000 --> 19:21.000]  образно говоря. Этот автомат строится один раз.
[19:21.000 --> 19:24.000]  На сборку этого компилятора.
[19:24.000 --> 19:27.000]  Все эти алгоритмы будут происходить
[19:27.000 --> 19:30.000]  на стадии сборки проекта.
[19:30.000 --> 19:33.000]  На стадии сборки нашего компилятора.
[19:33.000 --> 19:36.000]  Поэтому на самом деле здесь асимптотика нагнаться не надо,
[19:36.000 --> 19:39.000]  потому что следующий алгоритм, который будет убирать
[19:39.000 --> 19:42.000]  вот там вот и дничку, он, собственно,
[19:42.000 --> 19:45.000]  будет нам сильно вредить.
[19:45.000 --> 19:48.000]  То есть, точнее, не то, что сильно вредит,
[19:48.000 --> 19:51.000]  вообще, будет важно именно на обработку определенного слова.
[19:51.000 --> 19:54.000]  Итак, смотрите.
[19:54.000 --> 19:57.000]  Значит, где медленным? Здесь, в данном моменте,
[19:57.000 --> 20:00.000]  нам необходимо хранить неоднозначность пояса перехода по буквам.
[20:00.000 --> 20:03.000]  Для этого у нас множество куката есть.
[20:03.000 --> 20:06.000]  А далее нам нужно хранить неоднозначность
[20:06.000 --> 20:09.000]  нашего разбора слова.
[20:09.000 --> 20:12.000]  Поэтому давайте введем следующее определение,
[20:12.000 --> 20:15.000]  которое заключается в том, что мы введем в такое понятие
[20:15.000 --> 20:18.000]  конечный и конечный автомат.
[20:38.000 --> 20:41.000]  ДК!
[20:46.000 --> 20:49.000]  Это такое НК,
[20:49.000 --> 20:52.000]  что для любого,
[20:55.000 --> 20:58.000]  во-первых, он с однобуквенными переходами.
[21:04.000 --> 21:07.000]  Так, мощность
[21:08.000 --> 21:11.000]  так,
[21:11.000 --> 21:14.000]  длина нашего слова
[21:14.000 --> 21:17.000]  равняется единице.
[21:17.000 --> 21:20.000]  Я хотел объединить два определения.
[21:20.000 --> 21:23.000]  И дальше
[21:26.000 --> 21:29.000]  сигма
[21:33.000 --> 21:36.000]  не больше единиц.
[21:36.000 --> 21:39.000]  То есть получается,
[21:39.000 --> 21:42.000]  если мы говорим на картинках,
[21:42.000 --> 21:45.000]  то мы запрещаем себе вот такую картинку.
[21:51.000 --> 21:54.000]  Вот такую мы запрещаем.
[21:54.000 --> 21:57.000]  Хорошо?
[21:57.000 --> 22:00.000]  Эпсилоны разрешаем?
[22:00.000 --> 22:03.000]  Эпсилоны мы запретили здесь.
[22:06.000 --> 22:09.000]  Хорошо.
[22:09.000 --> 22:12.000]  Давайте подумаем, что у нас станет
[22:12.000 --> 22:15.000]  со симптотикой алгоритма.
[22:15.000 --> 22:18.000]  Ой, это я уже пропалил.
[22:18.000 --> 22:21.000]  Вот у нас есть ДК,
[22:21.000 --> 22:24.000]  вот такой автомат.
[22:24.000 --> 22:27.000]  Чему у нас будет равняться мощность Кукатова?
[22:27.000 --> 22:30.000]  Давайте предпочитаем для всех слов не больше, чем N,
[22:30.000 --> 22:33.000]  куда они приходят и будем отвечать за вот это вот.
[22:33.000 --> 22:36.000]  Только слов два в степени N.
[22:42.000 --> 22:45.000]  Ну да.
[22:45.000 --> 22:48.000]  Смотрите, мощность Кукатова у нас равняется единице.
[22:53.000 --> 22:56.000]  Соответственно,
[22:56.000 --> 22:59.000]  у нас по каждому состоянию
[22:59.000 --> 23:02.000]  будет ровно один переход.
[23:02.000 --> 23:05.000]  То есть у нас здесь мощность дельта,
[23:05.000 --> 23:08.000]  мощность вот этого штука превратится
[23:08.000 --> 23:11.000]  по факту в единицу.
[23:14.000 --> 23:17.000]  То есть у нас со симптотикой будет
[23:17.000 --> 23:20.000]  длина слова.
[23:26.000 --> 23:29.000]  Ну на самом деле, если честно говорить,
[23:29.000 --> 23:32.000]  причем может быть количество состояния в автомате,
[23:32.000 --> 23:35.000]  если мы ее не считаем за константу.
[23:42.000 --> 23:45.000]  Из алгоритма будет понятно,
[23:45.000 --> 23:48.000]  когда мы построим этот автомат.
[23:48.000 --> 23:51.000]  Значит, доп. память.
[23:54.000 --> 23:57.000]  Не поверите, доп. память будет ровно такая же.
[24:00.000 --> 24:03.000]  Количество состояния в автомате.
[24:06.000 --> 24:09.000]  А это будет следовать из того автомата,
[24:09.000 --> 24:12.000]  который мы построим.
[24:15.000 --> 24:18.000]  Смотрите, для хранения,
[24:18.000 --> 24:21.000]  давайте скажем так.
[24:21.000 --> 24:24.000]  Относительно НКА с однобукленным переходом.
[24:24.000 --> 24:27.000]  Для самого ДКА это будет от единицы.
[24:30.000 --> 24:33.000]  Это предпочитанная доп. память.
[24:42.000 --> 24:45.000]  А теперь самое прикольное.
[24:45.000 --> 24:48.000]  Время построения этого автомата.
[24:48.000 --> 24:51.000]  Здесь я вас обрадую.
[24:58.000 --> 25:01.000]  Ну это еще не страшно.
[25:01.000 --> 25:04.000]  Ну да, мы его строим в один раз, как говорится.
[25:04.000 --> 25:07.000]  Нет, просто будет жить страшнее симптотики.
[25:07.000 --> 25:10.000]  Ну да, но все равно.
[25:10.000 --> 25:13.000]  Два в степени надо закладывать.
[25:13.000 --> 25:16.000]  На самом деле, вот эта два в степени
[25:16.000 --> 25:19.000]  количество состояния в автомате намекает
[25:19.000 --> 25:22.000]  на то, как будет работать наш алгоритм.
[25:25.000 --> 25:28.000]  То есть у нас в состоянии будет что-то интересное.
[25:31.000 --> 25:34.000]  Здесь говорится вот такие термины,
[25:34.000 --> 25:37.000]  что за ерунда.
[25:37.000 --> 25:40.000]  Будем строить автомат наш.
[25:40.000 --> 25:43.000]  В общем, теория, которую мы сегодня будем доказывать,
[25:43.000 --> 25:46.000]  она заключается в следующем.
[25:46.000 --> 25:49.000]  Что для любого НКА существует ДКА,
[26:01.000 --> 26:04.000]  а m' такой, что l от m равняется l от m'.
[26:04.000 --> 26:07.000]  Давайте на словах расскажу идею.
[26:07.000 --> 26:10.000]  Идея как раз выходит из этого алгоритма.
[26:10.000 --> 26:13.000]  Мы хранили множество кукаты,
[26:13.000 --> 26:16.000]  когда обрабатывали в онлайне.
[26:16.000 --> 26:19.000]  А можем ли мы заранее это множество кукаты
[26:19.000 --> 26:22.000]  предпочитать?
[26:22.000 --> 26:25.000]  То есть какие гипотетические кукаты
[26:25.000 --> 26:28.000]  у нас есть?
[26:28.000 --> 26:31.000]  Какие кукаты у нас есть?
[26:32.000 --> 26:35.000]  Какие гипотетические кукаты у нас могут появиться?
[26:44.000 --> 26:47.000]  Понятна идея?
[26:47.000 --> 26:50.000]  Давайте я начну рассказывать доказательства.
[26:53.000 --> 26:56.000]  m' будет начинаться из такого.
[26:56.000 --> 26:59.000]  То есть множество состояний в новом автомате
[26:59.000 --> 27:02.000]  будет два в степени количества состояний no.
[27:02.000 --> 27:05.000]  Это множество из-под множества всех состояний.
[27:08.000 --> 27:11.000]  То есть мы будем по факту,
[27:11.000 --> 27:14.000]  если мы будем реализовывать этот алгоритм,
[27:14.000 --> 27:17.000]  он будет реализовываться как раз из того,
[27:17.000 --> 27:20.000]  что мы будем собирать наше множество.
[27:20.000 --> 27:23.000]  То есть у нас есть переход по букве a,
[27:23.000 --> 27:26.000]  он перешел в два состояния,
[27:26.000 --> 27:29.000]  то есть будет тоже новое состояние.
[27:29.000 --> 27:32.000]  Вот это множество из этих двух вершин
[27:32.000 --> 27:35.000]  будет в новом автомате.
[27:35.000 --> 27:38.000]  То есть у нас новая память,
[27:38.000 --> 27:41.000]  это алгоритм отчисла состояние?
[27:41.000 --> 27:44.000]  Алгоритм отчисла состояние в новом автомате,
[27:44.000 --> 27:47.000]  то есть количество состояний относительно старого автомата.
[27:50.000 --> 27:53.000]  Переходы сейчас определим.
[27:56.000 --> 27:59.000]  Нужно будет картинку посмотреть.
[27:59.000 --> 28:02.000]  Старт будет вот такой.
[28:02.000 --> 28:05.000]  То есть стартовать будем из нашего набора вершин.
[28:07.000 --> 28:10.000]  Так, сейчас вы ничего не поняли.
[28:10.000 --> 28:13.000]  Я же правильно понимаю?
[28:13.000 --> 28:16.000]  Такой-то непонятный набор букв.
[28:16.000 --> 28:19.000]  Давайте посмотрим на картинку.
[28:19.000 --> 28:22.000]  Собственно пример, который поясняет, что происходит.
[28:22.000 --> 28:25.000]  Вот у нас есть такой автомат.
[28:25.000 --> 28:28.000]  Давайте мы сделаем следующее.
[28:28.000 --> 28:31.000]  Сделаем дополнительный переход
[28:31.000 --> 28:34.000]  из состояния q0 по букве a
[28:34.000 --> 28:37.000]  в множество q1, q2.
[28:37.000 --> 28:40.000]  То есть вот у нас был такой автомат.
[28:56.000 --> 28:59.000]  Мы что делаем?
[28:59.000 --> 29:02.000]  Мы с вами говорим,
[29:02.000 --> 29:05.000]  что давайте мы будем строить множество состояний.
[29:05.000 --> 29:08.000]  То есть мы начали из q0,
[29:08.000 --> 29:11.000]  по букве a могли перейти гипотетически
[29:11.000 --> 29:14.000]  либо в q1, либо в q2.
[29:14.000 --> 29:17.000]  Храним всевозможное множество переходов
[29:17.000 --> 29:20.000]  по этой букве a.
[29:20.000 --> 29:23.000]  А дальше из этого гипотетического перехода по букве b
[29:23.000 --> 29:26.000]  куда мы переходим здесь?
[29:26.000 --> 29:29.000]  В q3, а из q2 мы переходим в q4.
[29:35.000 --> 29:38.000]  То есть берем множество вершин,
[29:38.000 --> 29:41.000]  в которые мы гипотетически могли попасть.
[29:41.000 --> 29:44.000]  Смотрим переход по букве
[29:44.000 --> 29:47.000]  и смотрим множество вершин,
[29:47.000 --> 29:50.000]  в которые мы могли попасть из нее.
[29:50.000 --> 29:53.000]  Смотрите, какое состояние будет здесь в завершающем?
[29:53.000 --> 29:56.000]  Есть мысли?
[29:56.000 --> 29:59.000]  q3, q4.
[29:59.000 --> 30:02.000]  Потому что на самом деле,
[30:02.000 --> 30:05.000]  по слову a, b
[30:05.000 --> 30:08.000]  мы могли перейти из стартового состояния
[30:08.000 --> 30:11.000]  в какое-то из завершающих.
[30:11.000 --> 30:14.000]  Вот мы делаем переход из стартового состояния
[30:14.000 --> 30:17.000]  в какое-то из завершающих.
[30:17.000 --> 30:20.000]  Пока что это рукомахание
[30:20.000 --> 30:23.000]  на уровне того, как работает эта конструкция.
[30:23.000 --> 30:26.000]  Сейчас мы просто будем ее определять
[30:26.000 --> 30:29.000]  строго математически.
[30:29.000 --> 30:32.000]  Чтобы вы не захлебнулись,
[30:32.000 --> 30:35.000]  давайте мы это и сделаем.
[30:35.000 --> 30:38.000]  Изначально
[30:38.000 --> 30:41.000]  что нам необходимо понять,
[30:41.000 --> 30:44.000]  это нам необходимо определить
[30:44.000 --> 30:47.000]  дельта штрих.
[30:47.000 --> 30:50.000]  Но при этом,
[30:50.000 --> 30:53.000]  до этого давайте возьмем еще одно обозначение,
[31:03.000 --> 31:06.000]  где s некоторое подносит
[31:06.000 --> 31:09.000]  в q.
[31:09.000 --> 31:12.000]  Это объединение
[31:12.000 --> 31:15.000]  по q из s
[31:19.000 --> 31:22.000]  дельта qv.
[31:25.000 --> 31:28.000]  То есть мы дельту теперь определяем
[31:28.000 --> 31:31.000]  не только для состояния в автомате,
[31:31.000 --> 31:34.000]  но и для некоторого множества состояния в автомате.
[31:34.000 --> 31:37.000]  Ага, как нам переписать терминах кванторов?
[31:40.000 --> 31:43.000]  Это множество тех q штрих,
[31:43.000 --> 31:46.000]  что существует q2 штриха
[31:46.000 --> 31:49.000]  из s,
[31:49.000 --> 31:52.000]  такое, что дельта q2 штриха
[31:52.000 --> 31:55.000]  v, ой,
[31:55.000 --> 31:58.000]  терминоконфигурация
[31:58.000 --> 32:01.000]  выводит
[32:02.000 --> 32:05.000]  q.
[32:11.000 --> 32:14.000]  Теперь следствие, которое мы с вами сделали
[32:14.000 --> 32:17.000]  на самом деле на текущий момент,
[32:17.000 --> 32:20.000]  из этого всего выходит интересный факт.
[32:20.000 --> 32:23.000]  Если вы вспомните переход,
[32:23.000 --> 32:26.000]  то оказывается, смотрите,
[32:26.000 --> 32:29.000]  дельта q0
[32:29.000 --> 32:32.000]  по слову va,
[32:32.000 --> 32:35.000]  это замечание у нас.
[32:35.000 --> 32:38.000]  Смотрите, чему равняется.
[32:50.000 --> 32:53.000]  Кто понимает, что мы это уже показали?
[33:00.000 --> 33:03.000]  Где мы это показали уже?
[33:08.000 --> 33:11.000]  Да, когда мы это доказали,
[33:11.000 --> 33:14.000]  вот смотрите, вот тут даже остался мелом на доске,
[33:14.000 --> 33:17.000]  когда мы делали переход в qk в плюс первое
[33:17.000 --> 33:20.000]  из кукатого,
[33:20.000 --> 33:23.000]  построение алгоритма,
[33:23.000 --> 33:26.000]  мы ровно то же самое написали и здесь.
[33:26.000 --> 33:29.000]  Здесь был переход по букве a.
[33:29.000 --> 33:32.000]  Просто я это подчеркиваю, чтобы вот оно осталось,
[33:32.000 --> 33:35.000]  просто в предыдущие годы я не объяснял,
[33:35.000 --> 33:38.000]  почему это вот так работает.
[33:38.000 --> 33:41.000]  Сейчас мы это пояснили.
[33:41.000 --> 33:44.000]  Итак, теперь смотрите, мы можем наконец-таки
[33:44.000 --> 33:47.000]  после всего этого определить дельта штрих.
[33:47.000 --> 33:50.000]  Не поверите, это следующее,
[33:50.000 --> 33:53.000]  s, a,
[33:54.000 --> 33:57.000]  дельта s, a.
[34:02.000 --> 34:05.000]  То есть мы берем множество,
[34:05.000 --> 34:08.000]  берем букву и переходим
[34:08.000 --> 34:11.000]  кипотетически туда, куда мы можем перейти.
[34:14.000 --> 34:17.000]  Из этого множества по определенной букве.
[34:17.000 --> 34:20.000]  Зачем это нам нужно сделать?
[34:20.000 --> 34:23.000]  Может быть, мы зафиксировали,
[34:23.000 --> 34:26.000]  что у нас количество переходов является конечным.
[34:40.000 --> 34:43.000]  Переход по букву,
[34:43.000 --> 34:46.000]  где забыли?
[34:46.000 --> 34:49.000]  Ну, окей.
[35:12.000 --> 35:15.000]  Смотрите, пример дельты св.
[35:15.000 --> 35:18.000]  Дельты из q1, q2 по b, это q3, q4.
[35:18.000 --> 35:21.000]  Дельты из q0 по ab,
[35:21.000 --> 35:24.000]  будет q3, q4.
[35:24.000 --> 35:27.000]  Вот такой у нас автомат получается.
[35:27.000 --> 35:30.000]  То есть в нашем случае,
[35:30.000 --> 35:33.000]  если мы s берем, равное множеству q1, q2,
[35:33.000 --> 35:36.000]  то дельта от q1, q2 по b
[35:36.000 --> 35:39.000]  будет равняться q3, q4.
[35:39.000 --> 35:42.000]  Осталось определить множество
[35:43.000 --> 35:46.000]  но на самом деле это все состояния,
[35:46.000 --> 35:49.000]  в которые пересекаются
[35:49.000 --> 35:52.000]  с им может завершать состояние.
[35:59.000 --> 36:02.000]  То есть мы могли дойти до нашего состояния
[36:02.000 --> 36:05.000]  каким-то образом завершающим.
[36:06.000 --> 36:09.000]  Так.
[36:12.000 --> 36:15.000]  Давайте осознаем.
[36:15.000 --> 36:18.000]  Работает ли вот это...
[36:18.000 --> 36:21.000]  Понятно ли, что здесь произошло?
[36:21.000 --> 36:24.000]  Давайте вопросы задавать,
[36:24.000 --> 36:27.000]  потому что это такой фазовый переход
[36:27.000 --> 36:30.000]  обычно от множества ко множеству всех под множество
[36:30.000 --> 36:33.000]  он дается с трудом.
[36:35.000 --> 36:38.000]  Это множество переходов
[36:38.000 --> 36:41.000]  в новом автомате.
[36:44.000 --> 36:47.000]  Ну, из состояния в новом автомате
[36:47.000 --> 36:50.000]  по букфре в новом автомате
[36:50.000 --> 36:53.000]  идет переход в некоторое тоже
[36:53.000 --> 36:56.000]  вот это множество состояния и в старом автомате.
[37:05.000 --> 37:08.000]  S это вершина в автомате,
[37:08.000 --> 37:11.000]  по которой мы позволили подносить.
[37:11.000 --> 37:14.000]  Если у нас это поднос, то в старом автомате.
[37:14.000 --> 37:17.000]  Нет, S это поднос, что в старом автомате.
[37:17.000 --> 37:20.000]  Тут ничего нет.
[37:20.000 --> 37:23.000]  Конечно.
[37:23.000 --> 37:26.000]  Вот.
[37:26.000 --> 37:29.000]  Так, осознали?
[37:29.000 --> 37:32.000]  Так, хорошо.
[37:32.000 --> 37:35.000]  Теперь будет некоторый взрыв мозга,
[37:35.000 --> 37:38.000]  потому что вот сейчас, не поверите,
[37:38.000 --> 37:41.000]  будет ровно почти то же самое доказательство,
[37:41.000 --> 37:44.000]  которое было у нас уже до этого.
[37:44.000 --> 37:47.000]  Но мы его пропишем для множества всех состояний в автомате.
[37:47.000 --> 37:50.000]  Давайте мы поймем следующее.
[37:50.000 --> 37:53.000]  Во-первых, надо понять,
[37:53.000 --> 37:56.000]  почему у нас с вами
[37:56.000 --> 37:59.000]  наш автомат M4
[37:59.000 --> 38:02.000]  с детерминированной.
[38:16.000 --> 38:19.000]  Во-первых, потому что у нас явно
[38:19.000 --> 38:22.000]  задана функция перехода.
[38:22.000 --> 38:25.000]  То есть, видите, у нас
[38:25.000 --> 38:28.000]  это прямо можно работать как функция.
[38:28.000 --> 38:31.000]  По всем под множеством.
[38:39.000 --> 38:42.000]  В смысле?
[38:42.000 --> 38:45.000]  Это переход из состояния в другое состояние.
[38:45.000 --> 38:48.000]  Да.
[38:48.000 --> 38:51.000]  В смысле перехода?
[38:51.000 --> 38:54.000]  В смысле перехода?
[38:54.000 --> 38:57.000]  Еще раз.
[38:57.000 --> 39:00.000]  Это множество переходов в новом автомате.
[39:00.000 --> 39:03.000]  Вот оно, здесь мы его определяем.
[39:03.000 --> 39:06.000]  Как оно определяется?
[39:06.000 --> 39:09.000]  Мы берем состояние в новом автомате,
[39:09.000 --> 39:12.000]  которое является под множеством в состоянии в старом автомате.
[39:12.000 --> 39:15.000]  Берем букву и делаем переходы
[39:15.000 --> 39:18.000]  во все возможное множество.
[39:18.000 --> 39:21.000]  Вот это тоже множество будет.
[39:21.000 --> 39:24.000]  Оно будет лежать в под множестве КО.
[39:24.000 --> 39:27.000]  Мы берем все возможные вершины,
[39:27.000 --> 39:30.000]  которые у нас были в С.
[39:30.000 --> 39:33.000]  Смотрим, куда по ним можно перейти
[39:33.000 --> 39:36.000]  по букве А.
[39:36.000 --> 39:39.000]  Фиксируем их.
[39:39.000 --> 39:42.000]  И записываем, что это новое наше состояние.
[39:42.000 --> 39:45.000]  Давайте еще один пример.
[39:45.000 --> 39:48.000]  Вот смотрите.
[39:48.000 --> 39:51.000]  Допустим, у нас есть С.
[39:51.000 --> 39:54.000]  Здесь есть переход по букве А сюда,
[39:54.000 --> 39:57.000]  по букве А сюда,
[39:57.000 --> 40:00.000]  и по букве Б сюда.
[40:00.000 --> 40:03.000]  Тогда вот это будет у нас дельта СА.
[40:08.000 --> 40:11.000]  Вот такая картинка у нас получается.
[40:16.000 --> 40:19.000]  Здесь будет один тонкий момент,
[40:19.000 --> 40:22.000]  который мы будем доказывать.
[40:22.000 --> 40:25.000]  Он заключается в том, что мы будем доказывать
[40:25.000 --> 40:28.000]  определенную лему.
[40:28.000 --> 40:31.000]  Вот такую вот.
[40:31.000 --> 40:34.000]  Значит, лему заключается в том,
[40:34.000 --> 40:37.000]  что дельта штрих...
[40:37.000 --> 40:40.000]  Смотрите, дельту штрих мы тоже можем определить
[40:40.000 --> 40:43.000]  для нового автомата.
[40:43.000 --> 40:46.000]  Ровно так же.
[40:46.000 --> 40:49.000]  У0 по В
[40:49.000 --> 40:52.000]  равняется.
[40:52.000 --> 40:55.000]  И вот здесь, смотрите,
[40:55.000 --> 40:58.000]  будет некоторый взрыв мозга,
[40:58.000 --> 41:01.000]  потому что на презентации тут лажа.
[41:01.000 --> 41:04.000]  Точнее, лажа на уровне единственного
[41:04.000 --> 41:07.000]  отождествления.
[41:07.000 --> 41:10.000]  Кто видит здесь лажу?
[41:10.000 --> 41:13.000]  Здесь математически, так сказать, есть баг.
[41:14.000 --> 41:17.000]  Да, смотрите, здесь не хватает фикурных
[41:17.000 --> 41:20.000]  столбочек.
[41:20.000 --> 41:23.000]  Потому что, смотрите,
[41:23.000 --> 41:26.000]  этот элемент
[41:26.000 --> 41:29.000]  под множество два в степеню ко
[41:29.000 --> 41:32.000]  степеню ко.
[41:32.000 --> 41:35.000]  Смотрите...
[41:35.000 --> 41:38.000]  Так, сейчас, секунду.
[41:38.000 --> 41:41.000]  Рубрика математика.
[41:41.000 --> 41:44.000]  Вот эта штука из ко.
[41:44.000 --> 41:47.000]  Под множество ко.
[41:47.000 --> 41:50.000]  Значит, мы берем, делаем
[41:50.000 --> 41:53.000]  переходы по набору букв.
[41:53.000 --> 41:56.000]  То есть, это будет под множество всех
[41:56.000 --> 41:59.000]  под множество всех
[41:59.000 --> 42:02.000]  состояний в дельта штрих.
[42:02.000 --> 42:05.000]  То есть, вот эта штука,
[42:05.000 --> 42:08.000]  это будет некоторое под множество два
[42:09.000 --> 42:12.000]  А вот это у нас под множество ко.
[42:15.000 --> 42:18.000]  То есть, поэтому здесь фигурные столбки должны быть.
[42:18.000 --> 42:21.000]  Но здесь можно сказать,
[42:21.000 --> 42:24.000]  давайте это,
[42:24.000 --> 42:27.000]  некоторые замечания.
[42:29.000 --> 42:32.000]  Мы понимаем, что в ДК
[42:39.000 --> 42:42.000]  мощность дельта штрих, вот.
[42:44.000 --> 42:47.000]  Сейчас, секунду.
[42:54.000 --> 42:57.000]  Мощность дельта штрих из ко ноль,
[42:57.000 --> 43:00.000]  по любому слову W, не больше, чем 1.
[43:00.000 --> 43:03.000]  Понятно, под каким причином?
[43:03.000 --> 43:06.000]  Потому что каждый раз мы переходим ровно по одной букве.
[43:06.000 --> 43:09.000]  Чем по одной букве?
[43:09.000 --> 43:12.000]  Не более или ровно?
[43:12.000 --> 43:15.000]  На самом деле, не более.
[43:15.000 --> 43:18.000]  Ну, хотя, на самом деле,
[43:18.000 --> 43:21.000]  если так подумать, вот, и мысль доказать,
[43:21.000 --> 43:24.000]  на самом деле, будет ровно единичка.
[43:24.000 --> 43:27.000]  А что такое?
[43:27.000 --> 43:30.000]  Как у нас вот эта вот дельта штрих
[43:30.000 --> 43:33.000]  для множества определяется?
[43:33.000 --> 43:36.000]  Состояние, множество всех
[43:36.000 --> 43:39.000]  состояний в автомате.
[43:39.000 --> 43:42.000]  Состояние в автомате,
[43:42.000 --> 43:45.000]  это под множество, множество состояний.
[43:48.000 --> 43:51.000]  То есть, вот эти вот ребята, они ИСКУ?
[43:51.000 --> 43:54.000]  А вот это под множество КУШТРИХА.
[43:54.000 --> 43:57.000]  А КУШТРИХА, это у нас два все пенико.
[43:58.000 --> 44:01.000]  Что, давайте докажем этот факт?
[44:01.000 --> 44:04.000]  А почему всегда единица,
[44:04.000 --> 44:07.000]  если у нас кукол, который вообще не встречается в автомате?
[44:07.000 --> 44:10.000]  На самом деле, не поверите,
[44:10.000 --> 44:13.000]  мы такой переход построим тоже.
[44:13.000 --> 44:16.000]  Тут будет просто пустое множество.
[44:16.000 --> 44:19.000]  Ага.
[44:21.000 --> 44:24.000]  Вы не поверите,
[44:24.000 --> 44:27.000]  я вот сейчас это впервые за третий год
[44:27.000 --> 44:30.000]  в чтении лекции осознал, что мы сейчас можем
[44:30.000 --> 44:33.000]  пропустить одну теорему, по ходу дела.
[44:33.000 --> 44:36.000]  Да.
[44:36.000 --> 44:39.000]  То есть, просто рассказать, как это работает алгоритмически,
[44:39.000 --> 44:42.000]  но в целом мы с вами
[44:42.000 --> 44:45.000]  можем так обсуждать доказательства.
[44:48.000 --> 44:51.000]  Индукция по длине слова.
[44:51.000 --> 44:54.000]  Вот мы и познакомились с этим фактом
[44:54.000 --> 44:57.000]  уже в доказательствах.
[44:57.000 --> 45:00.000]  Так, база.
[45:01.000 --> 45:04.000]  Слово пустое.
[45:04.000 --> 45:07.000]  Давайте размышлять.
[45:07.000 --> 45:10.000]  Что такое дельта штрих
[45:10.000 --> 45:13.000]  от Q0 по пустому слову?
[45:13.000 --> 45:16.000]  Мы доказываем вот это вот равенство слева.
[45:16.000 --> 45:19.000]  Да, да, да. Вот это вот мы лему доказываем.
[45:20.000 --> 45:23.000]  Что это такое?
[45:25.000 --> 45:28.000]  Это множество всех
[45:28.000 --> 45:31.000]  таких S,
[45:31.000 --> 45:34.000]  что из Q0,
[45:34.000 --> 45:37.000]  ε
[45:37.000 --> 45:40.000]  мы можем перейти S
[45:40.000 --> 45:43.000]  по пустому слову.
[45:43.000 --> 45:46.000]  Подождите, а нам точно...
[45:46.000 --> 45:49.000]  А, ну ладно.
[45:49.000 --> 45:52.000]  Ну короче говоря, вот в
[45:52.000 --> 45:55.000]  дельта справа мы на самом деле можем убрать
[45:55.000 --> 45:58.000]  вот эти фигурные словочки.
[45:58.000 --> 46:01.000]  Честно мы их можем убрать.
[46:01.000 --> 46:04.000]  Да, они мешают на самом деле.
[46:04.000 --> 46:07.000]  То есть, мы можем сказать, что дельта штрих и дельта мы можем отрадистрить.
[46:07.000 --> 46:10.000]  Да, да, да.
[46:10.000 --> 46:13.000]  Вот, смотрите.
[46:13.000 --> 46:16.000]  У нас что получается?
[46:16.000 --> 46:19.000]  У нас, поскольку автомат
[46:19.000 --> 46:22.000]  детерминированный,
[46:22.000 --> 46:25.000]  что это означает?
[46:25.000 --> 46:28.000]  То у него вся переход однобуквенная.
[46:28.000 --> 46:31.000]  Получается, что S это у нас что?
[46:34.000 --> 46:37.000]  Это у нас с вами просто множество из Q0.
[46:43.000 --> 46:46.000]  А что такое дельта
[46:46.000 --> 46:49.000]  из множества Q0, ε?
[46:49.000 --> 46:52.000]  Это множество всех
[46:52.000 --> 46:55.000]  состояний
[46:55.000 --> 46:58.000]  таких, что
[47:01.000 --> 47:04.000]  ε мы можем дойти
[47:04.000 --> 47:07.000]  в Q, ε.
[47:07.000 --> 47:10.000]  Да, кстати, я забыл сказать, что
[47:10.000 --> 47:13.000]  у нас с вами
[47:13.000 --> 47:16.000]  M
[47:16.000 --> 47:19.000]  с однобуквенными переходами.
[47:19.000 --> 47:22.000]  Да, давайте зафиксируем, что здесь
[47:22.000 --> 47:25.000]  однобуквенные переходы, иначе у нас будет лажа.
[47:25.000 --> 47:28.000]  Потому что здесь у нас получается как раз
[47:28.000 --> 47:31.000]  множество из Q0.
[47:31.000 --> 47:34.000]  Собственно, если мы допишем фигурные скобки,
[47:34.000 --> 47:37.000]  то получим требуемое.
[47:37.000 --> 47:40.000]  Хорошо.
[47:40.000 --> 47:43.000]  База понятна?
[47:43.000 --> 47:46.000]  Тут обычно любят шутить,
[47:46.000 --> 47:49.000]  база понятна, переход очевиден, но
[47:49.000 --> 47:52.000]  переход не очевиден.
[47:52.000 --> 47:55.000]  Как мы строго сделали
[47:55.000 --> 47:58.000]  второе?
[47:58.000 --> 48:01.000]  Какое? Вот это?
[48:01.000 --> 48:04.000]  Вот это?
[48:04.000 --> 48:07.000]  Вот это?
[48:07.000 --> 48:10.000]  Вот это отсюда вниз. Ну, смотрите.
[48:10.000 --> 48:13.000]  У нас в автомате M' все переходы однобуквенные.
[48:13.000 --> 48:16.000]  Вопрос. За какое количество переходов мы можем считать
[48:16.000 --> 48:19.000]  пустое слово и на выходе получить пустое слово?
[48:19.000 --> 48:22.000]  За сколько переходов?
[48:22.000 --> 48:25.000]  За ноль.
[48:25.000 --> 48:28.000]  За ноль можем.
[48:28.000 --> 48:31.000]  То есть мы неформально
[48:31.000 --> 48:34.000]  делим? Да, да.
[48:34.000 --> 48:37.000]  Вот так, что это однобуквенный переход.
[48:37.000 --> 48:40.000]  Переход.
[48:43.000 --> 48:46.000]  Итак.
[48:46.000 --> 48:49.000]  Давайте рассмотрим следующее множество.
[48:49.000 --> 48:52.000]  Дельта штрих
[48:55.000 --> 48:58.000]  ВА.
[48:58.000 --> 49:01.000]  По словам ВА.
[49:01.000 --> 49:04.000]  Смотрите, что я сделаю.
[49:04.000 --> 49:07.000]  Воспользуемся вот этим замечанием.
[49:07.000 --> 49:10.000]  Оно верно для любого автомата.
[49:21.000 --> 49:24.000]  Что у нас получается?
[49:29.000 --> 49:32.000]  Получаем вот такое вот анимативное свойство.
[49:34.000 --> 49:37.000]  Теперь
[49:37.000 --> 49:40.000]  давайте подумаем, что у нас здесь находится.
[49:40.000 --> 49:43.000]  Тонкий момент.
[49:43.000 --> 49:46.000]  Тут главное не проморгать, где мы сейчас
[49:46.000 --> 49:49.000]  дельту пробавлим.
[49:49.000 --> 49:52.000]  Ой, точнее, штрих.
[49:52.000 --> 49:55.000]  То есть наша цель сейчас убрать отсюда все штрихи.
[49:58.000 --> 50:01.000]  Давайте думать.
[50:01.000 --> 50:04.000]  Что у нас получается?
[50:04.000 --> 50:07.000]  У нас идут переходы по штриху.
[50:07.000 --> 50:10.000]  И здесь нам надо их убрать.
[50:10.000 --> 50:13.000]  Давайте подумаем, что же это такое?
[50:13.000 --> 50:16.000]  Внутренние будут убираться из предположения индукции.
[50:21.000 --> 50:24.000]  Что это такое?
[50:24.000 --> 50:27.000]  Это у нас с вами получается фигурные скобки
[50:27.000 --> 50:30.000]  из дельта.
[50:30.000 --> 50:33.000]  Вот чего?
[50:33.000 --> 50:36.000]  У ноль В.
[50:39.000 --> 50:42.000]  Переход по букве А.
[50:45.000 --> 50:48.000]  Вот это у нас множество.
[50:48.000 --> 50:51.000]  А что такое дельта?
[50:51.000 --> 50:54.000]  Это объединение по Т
[50:54.000 --> 50:57.000]  у следующих В.
[50:57.000 --> 51:00.000]  Дельта
[51:05.000 --> 51:08.000]  у ноль В.
[51:08.000 --> 51:11.000]  Так.
[51:14.000 --> 51:17.000]  Дельта ТА.
[51:17.000 --> 51:20.000]  Я же правильно написал определение?
[51:20.000 --> 51:23.000]  Вы имеете в виду, что можно просто
[51:23.000 --> 51:26.000]  внешние скобки убрать?
[51:26.000 --> 51:29.000]  Да, да, да.
[51:29.000 --> 51:32.000]  Смотрите, сейчас секунду.
[51:32.000 --> 51:35.000]  Да, я согласен.
[51:35.000 --> 51:38.000]  Их нельзя убирать.
[51:38.000 --> 51:41.000]  Так получается.
[51:41.000 --> 51:44.000]  А что такое дельта?
[51:44.000 --> 51:47.000]  А что такое объединение?
[51:47.000 --> 51:50.000]  Вот этого множества,
[51:50.000 --> 51:53.000]  состоящего из одного элемента.
[52:09.000 --> 52:12.000]  Так, сейчас, секунду.
[52:12.000 --> 52:15.000]  У вас просто убрались вот эти фигурные скобки
[52:15.000 --> 52:18.000]  самые внешние.
[52:22.000 --> 52:25.000]  Вот так.
[52:29.000 --> 52:32.000]  Что? Давайте пояснять.
[52:32.000 --> 52:35.000]  Давайте разбираться.
[52:35.000 --> 52:38.000]  Смотрите, вот это что?
[52:38.000 --> 52:41.000]  Это объединение по множеству, которое
[52:41.000 --> 52:44.000]  из одного элемента.
[52:44.000 --> 52:47.000]  Собственно, это значение этого элемента есть.
[53:04.000 --> 53:07.000]  Нет, здесь скобки не нужны.
[53:07.000 --> 53:10.000]  Дальше они раскроются.
[53:10.000 --> 53:13.000]  А теперь, теперь.
[53:13.000 --> 53:16.000]  Смотрите, вот теперь важный момент.
[53:16.000 --> 53:19.000]  Воспользуемся определением того,
[53:19.000 --> 53:22.000]  когда дельта штриха у нас определяется в множестве автоматов.
[53:22.000 --> 53:25.000]  То есть у нас вот это вот элемент,
[53:25.000 --> 53:28.000]  это элемент множества...
[53:28.000 --> 53:31.000]  Это элемент множества ку штрих.
[53:31.000 --> 53:34.000]  Согласны?
[53:34.000 --> 53:37.000]  А что значит, что это элемент множества ку штрих?
[53:37.000 --> 53:40.000]  Это означает,
[53:40.000 --> 53:43.000]  что это объединение...
[53:43.000 --> 53:46.000]  Сейчас, секунду.
[53:46.000 --> 53:49.000]  Аккуратненько сделаю.
[53:54.000 --> 53:57.000]  Значит, это объединение.
[53:57.000 --> 54:00.000]  Аккуратненько сделаю.
[54:01.000 --> 54:04.000]  Ммм...
[54:12.000 --> 54:15.000]  Сейчас.
[54:15.000 --> 54:18.000]  Тут главное сомножить вымени на косячи где-то с фигурными скобками.
[54:21.000 --> 54:24.000]  Просто у меня есть желание написать сразу вот так.
[54:30.000 --> 54:33.000]  Ну а давайте разбираться,
[54:33.000 --> 54:36.000]  почему это так.
[54:39.000 --> 54:42.000]  Тут надо написать, смотрите, что.
[54:42.000 --> 54:45.000]  Что дельта штрих вот из-за вот этого.
[54:45.000 --> 54:48.000]  Сейчас мы в рубрике черновик.
[54:54.000 --> 54:57.000]  Стоп, мы где-то фигурные скобки фрукты.
[54:58.000 --> 55:01.000]  Стоп, мы где-то фигурные скобки продолбали.
[55:04.000 --> 55:07.000]  Вокруг Т.
[55:14.000 --> 55:17.000]  Сейчас, секунду.
[55:17.000 --> 55:20.000]  Ну где-то да.
[55:21.000 --> 55:24.000]  Ммм...
[55:24.000 --> 55:27.000]  Сейчас, давайте проверять.
[55:33.000 --> 55:36.000]  Ну да, не, просто не хочется их снимать,
[55:36.000 --> 55:39.000]  потому что иначе это будет лажа полная.
[55:45.000 --> 55:48.000]  Да, да, да.
[55:50.000 --> 55:53.000]  Дельта.
[55:53.000 --> 55:56.000]  Мы только что сделали то же самое снятое место.
[55:56.000 --> 55:59.000]  Сейчас.
[55:59.000 --> 56:02.000]  Секунду, нам нужно просто понять,
[56:02.000 --> 56:05.000]  почему здесь выявляются фигурные скобки вот тут вот.
[56:05.000 --> 56:08.000]  Потому что в конце, в итоге получится,
[56:08.000 --> 56:11.000]  что это просто дельта от х0,
[56:11.000 --> 56:14.000]  по слову W A.
[56:14.000 --> 56:17.000]  И на этом доказательства закончатся.
[56:17.000 --> 56:20.000]  Теперь нам нужно разобраться, почему мы сделаем такой переход.
[56:20.000 --> 56:23.000]  Так, давайте размышлять.
[56:23.000 --> 56:26.000]  Что это за элемент?
[56:26.000 --> 56:29.000]  Значит, это у нас множество,
[56:29.000 --> 56:32.000]  под множество вот два в степеньку.
[56:32.000 --> 56:35.000]  Два в степеньку, два в степеньку.
[56:35.000 --> 56:38.000]  Здесь у нас тоже вроде так.
[56:38.000 --> 56:41.000]  Здесь переход по...
[56:41.000 --> 56:44.000]  Здесь вроде все так.
[56:47.000 --> 56:50.000]  Так.
[56:50.000 --> 56:53.000]  Здесь что у нас получается?
[57:03.000 --> 57:06.000]  Из этого множества каждый раз
[57:06.000 --> 57:09.000]  у нас есть один переход по определению.
[57:09.000 --> 57:12.000]  Да, да.
[57:12.000 --> 57:15.000]  Я говорю, что это да, что из под множества есть переход
[57:15.000 --> 57:18.000]  по одному определению.
[57:18.000 --> 57:21.000]  Это штука,
[57:21.000 --> 57:24.000]  почему мы просто убрали знак множества
[57:24.000 --> 57:27.000]  от того, что было два перехода.
[57:27.000 --> 57:30.000]  Вот это? Где?
[57:30.000 --> 57:33.000]  Вот у нас было обедение, вот у нас было написано...
[57:33.000 --> 57:36.000]  Это определение дельта.
[57:36.000 --> 57:39.000]  То есть это определение дельта штрих.
[57:39.000 --> 57:42.000]  То есть что такое дельта от множества?
[57:42.000 --> 57:45.000]  Это объединение
[57:45.000 --> 57:48.000]  всех дельты
[57:48.000 --> 57:51.000]  по элементам вот этого множества.
[57:51.000 --> 57:54.000]  Вот этого множества.
[57:55.000 --> 57:58.000]  Просто я не очень понимаю,
[57:58.000 --> 58:01.000]  в чем разница между этой штукой.
[58:01.000 --> 58:04.000]  Короче, я понял.
[58:04.000 --> 58:07.000]  Там хватает индукции по словам длины один,
[58:07.000 --> 58:10.000]  и тогда это будет просто шаг, вот этот шаг будет...
[58:10.000 --> 58:13.000]  Не-не-не, но это из определения должно уже следовать.
[58:13.000 --> 58:16.000]  Сейчас, у вас это в большинстве лемма
[58:16.000 --> 58:19.000]  для слова а.
[58:19.000 --> 58:22.000]  Да, но хочется лемму для слова а применить все-таки вот этим фактом.
[58:22.000 --> 58:25.000]  Нет, сейчас, у вас вот этот переход
[58:25.000 --> 58:28.000]  справа, сверху, до низ, лево,
[58:28.000 --> 58:31.000]  это в точности лемма для в равного а.
[58:31.000 --> 58:34.000]  Вот да, но хочется...
[58:34.000 --> 58:37.000]  А уже однобукленное, поэтому если у нас будет база для однобукленных слов,
[58:37.000 --> 58:40.000]  то мы сможем это применить.
[58:40.000 --> 58:43.000]  У нас есть информация, потому что у нас
[58:43.000 --> 58:46.000]  переходного приоритета один.
[58:46.000 --> 58:49.000]  Так, давайте рубрика проверка размерностей.
[58:49.000 --> 58:52.000]  Вот этот элемент из 2 в степени...
[58:56.000 --> 58:59.000]  Так, 2 в степени 2 в степени Ко.
[58:59.000 --> 59:02.000]  Вот этот элемент
[59:02.000 --> 59:05.000]  тоже 2 в степени 2 в степени Ко.
[59:05.000 --> 59:08.000]  Значит, здесь мы вроде ничего
[59:08.000 --> 59:11.000]  такого криминального не делали,
[59:11.000 --> 59:14.000]  то есть, что такое вот этот вот элемент?
[59:14.000 --> 59:17.000]  Это элемент из 2 в степени
[59:17.000 --> 59:27.000]  2 в степенику, значит, вот это все из 2 в степени, 2 в степенику.
[59:27.000 --> 59:29.000]  Значит...
[59:33.000 --> 59:35.000]  Блин.
[59:39.000 --> 59:41.000]  Секунду. Так, давайте это...
[59:48.000 --> 59:50.000]  Ммм...
[01:00:04.000 --> 01:00:06.000]  Че, правда, что ли?
[01:00:06.000 --> 01:00:10.000]  Ну да. Не, мне просто не нравится вот этот вот переход.
[01:00:10.000 --> 01:00:19.000]  Ну вот, он должен следовать, следовать из этого. Сейчас.
[01:00:19.000 --> 01:00:21.000]  Значит...
[01:00:22.000 --> 01:00:28.000]  Ну давайте, пожалуйста, покажем, что значит, что значит, что это штрих от вот этой штрихи.
[01:00:28.000 --> 01:00:31.000]  Давайте переобозначим то, что у вас там стоит за s.
[01:00:31.000 --> 01:00:36.000]  То есть вот эту тетту внутреннюю давайте за s переобозначим, чтобы было удобнее.
[01:00:36.000 --> 01:00:38.000]  Да, давайте.
[01:00:41.000 --> 01:00:45.000]  Это s.
[01:00:52.000 --> 01:01:06.000]  То есть дельта штрих от из s и a равняется множеству из дельта са.
[01:01:07.000 --> 01:01:09.000]  А это переходка.
[01:01:09.000 --> 01:01:13.000]  Да, спасибо большое. То есть нам нужно... Смотрите.
[01:01:13.000 --> 01:01:17.000]  Все. Тупняк, тупняк. Бывает.
[01:01:17.000 --> 01:01:19.000]  Смотрите. Михаил Дила говорит.
[01:01:19.000 --> 01:01:24.000]  Давайте обозначим за s множество дельта от дельта ку 0 в.
[01:01:24.000 --> 01:01:32.000]  Тогда давайте... Тогда вот эта штука, это у нас дельта штрих от са.
[01:01:32.000 --> 01:01:38.000]  А вот это, это множество от са.
[01:01:40.000 --> 01:01:42.000]  Множество от са.
[01:01:42.000 --> 01:01:48.000]  Теперь смотрите, что такое дельта штрих по определению.
[01:01:49.000 --> 01:02:05.000]  Собственно, это множество состояний, в которые мы можем попасть из состояния s по букве a.
[01:02:08.000 --> 01:02:14.000]  А в какое множество состояний из множества s мы можем попасть по букве a из состояния?
[01:02:14.000 --> 01:02:20.000]  Сейчас, извините, а вот у нас сейчас написано не просто определение дельта штриха.
[01:02:20.000 --> 01:02:26.000]  Да, да, да. Вот это ровно определение дельта штриха, просто записанное другими терминами.
[01:02:29.000 --> 01:02:31.000]  Тонкий момент.
[01:02:34.000 --> 01:02:39.000]  В общем, если что, давайте я это оставлю на доске, чтобы вот оно у нас было.
[01:02:39.000 --> 01:02:44.000]  Если, допустим, кто-то захочет подойти в конце, разобраться с этим, без проблем.
[01:02:45.000 --> 01:02:51.000]  То есть здесь вот тонкий момент, что мы говорим, что вот это множество и это множество s в нашем старом автомате.
[01:02:51.000 --> 01:02:54.000]  И дальше по определению мы можем написать вот этот переход.
[01:02:54.000 --> 01:02:59.000]  Честно просто расскажу, что в предыдущих доказательствах просто везде фигурные скобки опускались,
[01:02:59.000 --> 01:03:03.000]  и давайте мы просто будем работать без фигурных скобок. Это нечестно.
[01:03:03.000 --> 01:03:06.000]  Все-таки математическое свойство есть.
[01:03:06.000 --> 01:03:12.000]  Да, видите, тут в презентации, если посмотреть, тут везде просто скобки будут пропущены, а это некрасиво.
[01:03:15.000 --> 01:03:17.000]  Поэтому надо презентацию поправить.
[01:03:19.000 --> 01:03:21.000]  Здесь вот этот фазовый переход делается.
[01:03:21.000 --> 01:03:24.000]  Так, теперь давайте докажем следующую вещь.
[01:03:25.000 --> 01:03:27.000]  Довершим наше доказательство.
[01:03:27.000 --> 01:03:29.000]  Смотрите.
[01:03:36.000 --> 01:03:40.000]  В m принадлежит языку задаваемого автомата m.
[01:03:40.000 --> 01:03:42.000]  Когда?
[01:03:45.000 --> 01:03:47.000]  Старым автоматом.
[01:03:47.000 --> 01:03:49.000]  Когда это работает?
[01:03:50.000 --> 01:03:52.000]  Смотрите.
[01:03:52.000 --> 01:04:07.000]  Это эквалетно тому, что у нас дельта q0 по слову w не равно пустому множеству.
[01:04:09.000 --> 01:04:11.000]  Логично?
[01:04:13.000 --> 01:04:15.000]  Вот, хорошо.
[01:04:16.000 --> 01:04:18.000]  Вот оно написано.
[01:04:19.000 --> 01:04:21.000]  Теперь смотрите.
[01:04:21.000 --> 01:04:24.000]  А теперь давайте поймем, почему это так.
[01:04:25.000 --> 01:04:27.000]  Что такое дельта q0v?
[01:04:29.000 --> 01:04:43.000]  Это на самом деле, что такое дельта штрих от множества q0v в новом автомате.
[01:04:45.000 --> 01:04:51.000]  То есть вот этим мы пользуемся.
[01:04:51.000 --> 01:04:55.000]  Сейчас мы будем пользоваться тут определенной леммой, которая у нас была.
[01:04:55.000 --> 01:04:59.000]  Все еще понимают, наверное, следующий факт.
[01:04:59.000 --> 01:05:01.000]  Давайте пропустим.
[01:05:01.000 --> 01:05:07.000]  Вот это эквалетно тому, что мы можем здесь скобки взять.
[01:05:07.000 --> 01:05:17.000]  Почему здесь мы можем фигурные скобки добавить?
[01:05:17.000 --> 01:05:21.000]  Думаю, это в принципе уже много раз вот там делали.
[01:05:21.000 --> 01:05:23.000]  Ну, там мы ни разу не делали.
[01:05:23.000 --> 01:05:25.000]  Просто множество из одного элемента состоящее.
[01:05:25.000 --> 01:05:29.000]  Теперь мы пользуемся нашей леммой.
[01:05:29.000 --> 01:05:33.000]  И получаем следующую вещь.
[01:05:33.000 --> 01:05:39.000]  Это дельта штрих от q0v.
[01:05:49.000 --> 01:05:51.000]  Давайте напишем это все.
[01:05:51.000 --> 01:05:53.000]  Это что у нас такое?
[01:06:03.000 --> 01:06:07.000]  Дельта q0v вот так.
[01:06:07.000 --> 01:06:11.000]  Это же вот такая штука, да?
[01:06:15.000 --> 01:06:23.000]  И вот эта вот штука, если мы обозначим ее t, то у нас t пересечь с f не пустое.
[01:06:23.000 --> 01:06:43.000]  Вот, собственно, здесь хочется сказать, что мы обозначили за t.
[01:06:43.000 --> 01:06:47.000]  За t мы обозначаем вот эту вот величину.
[01:06:47.000 --> 01:06:49.000]  То есть элемент.
[01:06:49.000 --> 01:06:51.000]  Вот.
[01:06:51.000 --> 01:06:53.000]  Давайте теперь размышлять.
[01:06:53.000 --> 01:07:09.000]  Почему из этого дальше можем написать, что дельта штрих от q0v пересечь с f штрих не пустое?
[01:07:09.000 --> 01:07:13.000]  Что такое у нас f штрих?
[01:07:13.000 --> 01:07:17.000]  Напомню.
[01:07:17.000 --> 01:07:21.000]  У нас сейчас, кстати, есть презентация.
[01:07:21.000 --> 01:07:31.000]  f под множество q не равно пустому.
[01:07:31.000 --> 01:07:35.000]  Это у нас определение.
[01:07:35.000 --> 01:07:43.000]  В частности, там лежит вот этот элемент t, который в пересечении с f дает не пустое.
[01:07:43.000 --> 01:07:53.000]  Вот этот элемент t, который в пересечении с f дает не пустое слово.
[01:07:53.000 --> 01:08:01.000]  Да, то есть вот этот элемент t как раз нам говорит, что у нас есть пересечение по не пустому слову.
[01:08:01.000 --> 01:08:09.000]  А это эквалентно тому, что слово w лежит в языке сдаваемого штриха.
[01:08:09.000 --> 01:08:11.000]  Все, доказали теорему.
[01:08:11.000 --> 01:08:15.000]  Еще раз, тонкий момент, который здесь есть.
[01:08:15.000 --> 01:08:17.000]  Есть переход по слову.
[01:08:17.000 --> 01:08:25.000]  Соответственно, переход по слову, который возникает здесь, у нас множество из определенного элемента.
[01:08:25.000 --> 01:08:29.000]  И этот элемент как раз у нас лежит по множеству f.
[01:08:29.000 --> 01:08:37.000]  Соответственно, t лежит в f штрих.
[01:08:37.000 --> 01:08:41.000]  То есть у нас в нашем множестве есть элемент из f штрих.
[01:08:41.000 --> 01:08:45.000]  Пересекая с ним, мы получаем не пустое множество.
[01:08:45.000 --> 01:08:53.000]  И в итоге получаем принадлежно слово языка.
[01:08:53.000 --> 01:08:55.000]  Кажется, я вас довел.
[01:08:55.000 --> 01:08:59.000]  Нет, вроде все нормально.
[01:08:59.000 --> 01:09:05.000]  То есть тут такая муторня с множествами, но в целом главный факт это вот это.
[01:09:05.000 --> 01:09:11.000]  Так, давайте следствие некоторое выведем.
[01:09:21.000 --> 01:09:23.000]  Тут это прям следствие.
[01:09:23.000 --> 01:09:31.000]  Из этого факта оно заключается в следующем.
[01:09:31.000 --> 01:09:53.000]  Потому что для любого НК с одновуховными переходами можно построить эквивалентный ПДК.
[01:09:53.000 --> 01:09:57.000]  Полный ДК.
[01:10:01.000 --> 01:10:09.000]  То есть для него можно построить полный детерминированный конечный автомат.
[01:10:09.000 --> 01:10:11.000]  Что это означает?
[01:10:11.000 --> 01:10:25.000]  Это означает, что для любого Q из Q, а из Сигма равняется единица.
[01:10:25.000 --> 01:10:31.000]  Ровная единица.
[01:10:31.000 --> 01:10:35.000]  Мы его как раз построили.
[01:10:35.000 --> 01:10:43.000]  Потому что мы для каждого под множество, для каждого перехода сделали переход ровно по одной букве.
[01:10:43.000 --> 01:10:45.000]  Ну, по одной и то же множеству.
[01:10:45.000 --> 01:10:53.000]  Теперь практическая вещь, которая важна следующим вещам.
[01:10:53.000 --> 01:10:57.000]  Теория Маштрих, назовем ее.
[01:10:57.000 --> 01:11:11.000]  Для любого ДК можно построить эквивалентный ПДК.
[01:11:11.000 --> 01:11:21.000]  Как это сделать?
[01:11:21.000 --> 01:11:25.000]  Да, на самом деле можно запустить алгоритм детерминирования, но есть более практический алгоритм.
[01:11:25.000 --> 01:11:29.000]  Давайте поймем, каких переходов не хватает в ДК.
[01:11:29.000 --> 01:11:35.000]  Переходы в пустое множество.
[01:11:35.000 --> 01:11:39.000]  Поэтому давайте просто добавим это пустое множество.
[01:11:39.000 --> 01:11:43.000]  Ну, неважно.
[01:11:43.000 --> 01:11:49.000]  Просто повторим ту же самую идею для тех переходов, которых у нас не было.
[01:11:49.000 --> 01:11:55.000]  Так, сложности мы уже вернулись, когда мы говорили про это.
[01:11:55.000 --> 01:12:05.000]  Из-за того, что у нас количество состояния увеличилось двое в степень двойки, то мы понимаем с вами, что 8 точки у нас вот такие.
[01:12:05.000 --> 01:12:07.000]  Почему количество состояния в втором переходе?
[01:12:07.000 --> 01:12:13.000]  Потому что нужно хранить ID-шник вершины.
[01:12:13.000 --> 01:12:17.000]  Собственно, идея алгоритма такая.
[01:12:17.000 --> 01:12:23.000]  Добавляем стоковую вершину, и из всех вершин перехода по недостающим буквам мы добавляем сток.
[01:12:23.000 --> 01:12:25.000]  Картинка вот такая.
[01:12:25.000 --> 01:12:35.000]  То есть, если бы мы запустили алгоритм детерминирования для этого автомата, то у нас бы как раз не хватило бы из Q0 перехода по букве А,
[01:12:35.000 --> 01:12:39.000]  из Q2 не хватило бы перехода по букве А.
[01:12:39.000 --> 01:12:49.000]  Мы добавляем эту стоковую вершину, которая в доказательстве теоремы о детерминизации соответствовала пустому множеству.
[01:12:49.000 --> 01:12:57.000]  На семинарах вы еще это будете все строить. Мы будем строить это все дело.
[01:12:57.000 --> 01:13:03.000]  Зафиксировали картинку. Понятно картинка?
[01:13:03.000 --> 01:13:11.000]  Теперь докажем некоторые свойства автоматных языков.
[01:13:11.000 --> 01:13:15.000]  Будем уберить, как строить вот это вот ПДК.
[01:13:15.000 --> 01:13:17.000]  В смысле, как строить ПДК?
[01:13:17.000 --> 01:13:19.000]  Картинка.
[01:13:19.000 --> 01:13:25.000]  Я не уверен, что там получится за два в степени.
[01:13:25.000 --> 01:13:29.000]  Там даже быстрее получится.
[01:13:29.000 --> 01:13:33.000]  А, два в степени Q.
[01:13:33.000 --> 01:13:39.000]  Скорее всего два в степени Q на мощность еще чего-нибудь.
[01:13:39.000 --> 01:13:41.000]  Смотрите, суть в чем.
[01:13:41.000 --> 01:13:45.000]  Этот алгоритм расскажут на семинарах.
[01:13:45.000 --> 01:13:47.000]  Он называется алгоритм Томпсона.
[01:13:47.000 --> 01:13:53.000]  Он заключается в том, что нужно запустить BFS от вершины из состояния Q0.
[01:13:53.000 --> 01:13:57.000]  Алгоритм детерминизации.
[01:13:57.000 --> 01:14:01.000]  Давайте расскажем, в чем заключается алгоритм детерминизации.
[01:14:17.000 --> 01:14:19.000]  Запускаем BFS
[01:14:19.000 --> 01:14:29.000]  от Q0
[01:14:29.000 --> 01:14:31.000]  встроим
[01:14:41.000 --> 01:14:45.000]  по X, принадлежащим сигмалу.
[01:14:45.000 --> 01:14:47.000]  Дальше смотрим.
[01:14:47.000 --> 01:14:51.000]  Если у нас множество, было ли у нас это множество уже,
[01:14:51.000 --> 01:14:55.000]  если множество не было, то добавляем его в очередь.
[01:14:55.000 --> 01:14:57.000]  Если множество было, ну все, забиваем его.
[01:14:57.000 --> 01:15:01.000]  И в итоге вот как раз у нас вот эти вот дельты,
[01:15:01.000 --> 01:15:03.000]  все вот такого вида перехода.
[01:15:03.000 --> 01:15:13.000]  Давайте я так напушу.
[01:15:23.000 --> 01:15:25.000]  То есть достаем из очереди элемент,
[01:15:25.000 --> 01:15:27.000]  смотрим все его переходы,
[01:15:27.000 --> 01:15:29.000]  устроим дельта штрих.
[01:15:29.000 --> 01:15:31.000]  Если у нас элемент был, закладем его в очередь.
[01:15:31.000 --> 01:15:33.000]  Если элемент был, мы его в очередь не кладем,
[01:15:33.000 --> 01:15:35.000]  иначе мы его в очередь не кладем.
[01:15:35.000 --> 01:15:54.000]  Если мы не встретили элемент, то мы кладем его в очередь в множество, если мы множество встретили, то в очередь мы его не кладем.
[01:15:54.000 --> 01:16:04.000]  Еще раз, нам нужно построить множество дельта штрихов, множество переходов к новому автоматику.
[01:16:05.000 --> 01:16:12.000]  Мы начнем строить его рекурсивно. Начнем строить все из кумоль.
[01:16:13.000 --> 01:16:22.000]  Настроим множество кумоль. Дальше смотрим переходы по букве А, которые куда-то ведут.
[01:16:23.000 --> 01:16:40.000]  Соответственно, у нас появляется множество вот такое. При этом храним очередь, по которой мы будем отслеживать все такие элементы, все вот такие накапливающиеся множества.
[01:16:41.000 --> 01:17:01.000]  Если у нас есть это множество, уже мы его обрабатывали, не с ним ничего не делаем, если у нас этого множества нет, то мы берем достаем его из очереди и продолжаем делать следующие переходы.
[01:17:02.000 --> 01:17:04.000]  Повторяем до победного.
[01:17:05.000 --> 01:17:16.000]  А почему нельзя пробежаться по всем подмножествам? Для каждого подмножества можно просто поставить переходы в QA и сказать, что это есть сиквер.
[01:17:17.000 --> 01:17:28.000]  Можно, просто на практике эта штука будет работать намного быстрее, в среднем, потому что она будет проходить не все подмножества вашего множества.
[01:17:28.000 --> 01:17:38.000]  Тут, скорее всего, два цепеньку умножить на Q получается будет.
[01:17:39.000 --> 01:17:43.000]  Ну да, на множество дельта. Согласен.
[01:17:44.000 --> 01:17:49.000]  Так, давайте тогда сейчас еще посмотрим вот этот факт, сделаем некоторую затравку.
[01:17:49.000 --> 01:17:53.000]  Кто-нибудь знаком вот с этими товарищами?
[01:17:54.000 --> 01:17:55.000]  С Клини?
[01:17:56.000 --> 01:17:59.000]  Да, со всеми этими. Кто был на первом семинаре?
[01:18:00.000 --> 01:18:01.000]  С Клини лично не знаком.
[01:18:02.000 --> 01:18:04.000]  Отлично, ничего это вам не напоминает?
[01:18:05.000 --> 01:18:06.000]  Все напоминает.
[01:18:07.000 --> 01:18:08.000]  Операции над чем это напоминает?
[01:18:09.000 --> 01:18:10.000]  Регулярными выражениями.
[01:18:11.000 --> 01:18:12.000]  Только дополнения и пересечения.
[01:18:13.000 --> 01:18:15.000]  Ну дополнения и пересечения, да, не было.
[01:18:15.000 --> 01:18:17.000]  Значит, смотрите.
[01:18:18.000 --> 01:18:21.000]  Конкатинация. Давайте посмотрим на картинке.
[01:18:22.000 --> 01:18:23.000]  Их еще на раз в семинаре рассмотрят.
[01:18:24.000 --> 01:18:26.000]  Как построить конкатинацию двух автоматов?
[01:18:28.000 --> 01:18:31.000]  Да, то есть мы строим два автомата.
[01:18:32.000 --> 01:18:34.000]  У нас завершающее одно, это начальное второе.
[01:18:36.000 --> 01:18:38.000]  Объединение как построить?
[01:18:39.000 --> 01:18:40.000]  Просто.
[01:18:41.000 --> 01:18:43.000]  Из одной вершинки пустить туда?
[01:18:43.000 --> 01:18:46.000]  Да, вспоминаем физику, параллельное соединение.
[01:18:49.000 --> 01:18:51.000]  Делаем переход в завершающее состояние другое.
[01:18:52.000 --> 01:18:53.000]  Итерация к линии.
[01:18:54.000 --> 01:18:55.000]  Цикл.
[01:18:56.000 --> 01:18:58.000]  Цикл, причем хитрый цикл.
[01:18:59.000 --> 01:19:04.000]  То есть мы отделяем отдельный автомат и делаем переход по эпсилону туда.
[01:19:05.000 --> 01:19:08.000]  И из завершающего состояния второго автомата переводим в новый.
[01:19:08.000 --> 01:19:09.000]  Вот.
[01:19:14.000 --> 01:19:15.000]  Пересечение.
[01:19:16.000 --> 01:19:17.000]  Господи.
[01:19:18.000 --> 01:19:21.000]  Берем два автомата с однобуквенными переходами.
[01:19:22.000 --> 01:19:25.000]  И строим их декартовое произведение.
[01:19:27.000 --> 01:19:31.000]  Собственно, считайте, что у вас один автомат по горизонтали, другой автомат по вертикали.
[01:19:32.000 --> 01:19:39.000]  Собственно, переход делается тогда, когда у вас в автомате есть переход и по одной букве, и по второй букве.
[01:19:40.000 --> 01:19:41.000]  Вот смотрите, пример.
[01:19:42.000 --> 01:19:45.000]  Видите, переход вот красненький из Q01 в Q101.
[01:19:46.000 --> 01:19:49.000]  То есть в первом автомате мы переходим из Q0 в Q1.
[01:19:50.000 --> 01:19:54.000]  А в втором автомате по букве А мы переходим из Q0 в Q0.
[01:19:54.000 --> 01:20:01.000]  То есть получается, мы меняем номер столбца, но номер строки не меняем.
[01:20:02.000 --> 01:20:03.000]  Какая?
[01:20:04.000 --> 01:20:06.000]  В первом автомате петелька по букве B.
[01:20:07.000 --> 01:20:10.000]  Смотрите, в первом автомате петелька по букве B. Давайте обсудим, куда она делась.
[01:20:11.000 --> 01:20:14.000]  Вот здесь у нас переход остается в пределах одной строки.
[01:20:15.000 --> 01:20:23.000]  А здесь мы меняем номер, точнее, переход по B не меняет столбец, но вот отсюда переход по B меняет строку.
[01:20:24.000 --> 01:20:27.000]  То есть у нас получается переход отсюда, вот сюда.
[01:20:30.000 --> 01:20:36.000]  Да, то есть получается, в одном автомате мы не поменяли состояние, в другом автомате мы поменяли состояние.
[01:20:39.000 --> 01:20:43.000]  Вот, опять же, индукция по длине слова может доказать, что эта конструкция работает.
[01:20:44.000 --> 01:20:45.000]  Или индукция по длине вывода.
[01:20:46.000 --> 01:20:47.000]  Дополнение как строить?
[01:20:48.000 --> 01:20:52.000]  Можно поменять семантик, допустим, сказать, когда она выпускает, значит не выпускает.
[01:20:53.000 --> 01:20:58.000]  Да, для дополнения важно полный, детерминированный конечный автомат.
[01:20:59.000 --> 01:21:02.000]  Полный, детерминированный, для того, чтобы у нас не было тупиков.
[01:21:03.000 --> 01:21:06.000]  Меняем завершающее и незавершающее состояние между собой.
[01:21:08.000 --> 01:21:10.000]  Вот для этого нам нужен был полный автомат.
[01:21:12.000 --> 01:21:15.000]  Вопрос, почему нельзя делать это в обычном ДК?
[01:21:18.000 --> 01:21:20.000]  Он может сломаться.
[01:21:23.000 --> 01:21:24.000]  Пример.
[01:21:28.000 --> 01:21:29.000]  ДК?
[01:21:33.000 --> 01:21:34.000]  Какое слово он принимает?
[01:21:36.000 --> 01:21:37.000]  А.
[01:21:39.000 --> 01:21:41.000]  Меняем завершающее стартовые места.
[01:21:42.000 --> 01:21:44.000]  Какое теперь слово он принимает?
[01:21:47.000 --> 01:21:49.000]  Для сравнения с ДК.
[01:21:50.000 --> 01:21:52.000]  Для сравнения П ДК.
[01:21:57.000 --> 01:21:58.000]  Так, как он устроится там?
[01:22:03.000 --> 01:22:04.000]  Вот так.
[01:22:06.000 --> 01:22:07.000]  Это полный ДК.
[01:22:14.000 --> 01:22:15.000]  Вот так.
[01:22:16.000 --> 01:22:17.000]  Вот полный ДК.
[01:22:18.000 --> 01:22:19.000]  Дополнение его какое?
[01:22:22.000 --> 01:22:24.000]  Из трэш в трэш в А, ну вот оно.
[01:22:39.000 --> 01:22:40.000]  Красота же, да?
[01:22:41.000 --> 01:22:44.000]  И вот здесь уже не принимается слово А, но принимаются все остальные.
[01:22:47.000 --> 01:22:48.000]  Картинку зафиксировали.
[01:22:49.000 --> 01:22:50.000]  Как построить разность?
[01:22:55.000 --> 01:22:57.000]  Ну да, пересечение вместо дополнения.
[01:22:58.000 --> 01:23:00.000]  И давайте вот такая затравка будет у нас.
[01:23:01.000 --> 01:23:02.000]  В чем проблема автомата?
[01:23:03.000 --> 01:23:04.000]  О, нифига себе она звучит.
[01:23:07.000 --> 01:23:08.000]  Ну это раз.
[01:23:08.000 --> 01:23:12.000]  Человек вот может понять, что он нарисован на детерминированном, конечно, автомате?
[01:23:13.000 --> 01:23:14.000]  Да.
[01:23:15.000 --> 01:23:16.000]  Так, ладно.
[01:23:17.000 --> 01:23:19.000]  Так, вы, видимо, компилятор не писали.
[01:23:20.000 --> 01:23:23.000]  Если у вас размер, ну как выигрышин до десяти, еще нормально.
[01:23:24.000 --> 01:23:25.000]  Да.
[01:23:28.000 --> 01:23:29.000]  Да.
[01:23:30.000 --> 01:23:32.000]  Есть проблема в том, что автоматы – это язык понимания компуктеров.
[01:23:32.000 --> 01:23:33.000]  Иногда, да.
[01:23:34.000 --> 01:23:36.000]  Людям, какой механизм люди придумали?
[01:23:37.000 --> 01:23:38.000]  Регулярное выражение.
[01:23:39.000 --> 01:23:40.000]  Регулярное выражение.
[01:23:41.000 --> 01:23:43.000]  То есть, когда мы обычно пишем компилятор, мы пишем какое-то регулярное выражение на входе.
[01:23:46.000 --> 01:23:47.000]  Вот.
[01:23:48.000 --> 01:23:50.000]  И мы пишем это регулярное выражение, и получаем в итоге результат.
[01:23:51.000 --> 01:23:52.000]  А, да.
[01:23:53.000 --> 01:23:54.000]  Ну, да.
[01:23:55.000 --> 01:23:56.000]  Ну, да.
[01:23:57.000 --> 01:23:58.000]  Ну, да.
[01:23:59.000 --> 01:24:00.000]  Ну, да.
[01:24:00.000 --> 01:24:02.000]  И мы пишем это регулярное выражение, и получаем в итоге результат.
[01:24:03.000 --> 01:24:05.000]  Регулярное выражение же вообще непонятно пошло.
[01:24:06.000 --> 01:24:07.000]  Да.
[01:24:08.000 --> 01:24:11.000]  Но поэтому при регулярном выражении их можно в строчку записать.
[01:24:12.000 --> 01:24:13.000]  Вот в чем их польза.
[01:24:14.000 --> 01:24:15.000]  Соответственно, в чем суть?
[01:24:16.000 --> 01:24:18.000]  Мы можем с вами по регулярному выражению написать автомат.
[01:24:19.000 --> 01:24:20.000]  Построить автомат.
[01:24:21.000 --> 01:24:25.000]  Собственно, по-моему, на семинарах, вам рассказывали уже, у тех, у кого были семинары?
[01:24:26.000 --> 01:24:27.000]  Да.
[01:24:27.000 --> 01:24:29.000]  Не, а у кого был второй семинар уже?
[01:24:30.000 --> 01:24:31.000]  Рассказали.
[01:24:32.000 --> 01:24:33.000]  Да, рассказали, да, как по регулярному выражению строится автомат.
[01:24:34.000 --> 01:24:38.000]  Собственно, давайте я как раз это сделаю еще на дополнительной записи, да,
[01:24:39.000 --> 01:24:40.000]  которую я потом выложу.
[01:24:41.000 --> 01:24:44.000]  Ну, вот, напоминание некоторое здесь есть.
[01:24:45.000 --> 01:24:46.000]  Как это строится все?
[01:24:47.000 --> 01:24:49.000]  Вам должны табличку такую были на первом семинаре строить.
[01:24:49.000 --> 01:24:50.000]  Вот.
[01:24:52.000 --> 01:24:53.000]  Вот.
[01:24:54.000 --> 01:24:56.000]  И как раз из регулярного выражения мы можем построить автоматное,
[01:24:57.000 --> 01:24:59.000]  а из автоматного мы можем построить обратное.
[01:25:00.000 --> 01:25:03.000]  Собственно, это делается, давайте это мы сделаем уже не сегодня,
[01:25:04.000 --> 01:25:05.000]  потому что сегодня у нас конец.
[01:25:06.000 --> 01:25:08.000]  Да, значит, что мы сегодня с вами осознали?
[01:25:09.000 --> 01:25:12.000]  Мы с вами поняли, что у нас любой автомат может задаваться некоторым
[01:25:13.000 --> 01:25:16.000]  детерминированным конечным автоматом, более того, полным детерминированным конечным автоматом.
[01:25:16.000 --> 01:25:25.000]  После этого мы с вами поняли, что эти автоматы запутаны относительно теоретика множественных операций и итераций к линии.
[01:25:25.000 --> 01:25:30.000]  То есть они поддерживаются полным механизмом как и у регулярных выражений.
[01:25:30.000 --> 01:25:44.000]  Следующий раз, напоминая, будет запись. Я ее постараюсь выложить где-то в воскресенье и в ней мы как раз уже будем разбирать разные регулярные выражения.
[01:25:45.000 --> 01:25:49.000]  И закажем, что они эквалютны.
[01:25:49.000 --> 01:25:56.000]  Все, приношу извинения за затуп в середине лекции. Если есть вопросы, по этому затупу можно обращаться.
