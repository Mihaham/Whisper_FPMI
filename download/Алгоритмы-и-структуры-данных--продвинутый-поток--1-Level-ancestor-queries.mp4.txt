[00:00.000 --> 00:10.320]  Вот, нет, практически буквально, да, я могу, да, но целочку пришлю, там можно даже прям сразу следить,
[00:10.320 --> 00:21.840]  но начнем мы с такой разминочки. Значит, смотрите, как-то, ну вот, в прошлом году у нас была такая
[00:21.840 --> 00:30.960]  штука, была такая штука, как метод четырех русских, помните? Вот, как бы главная задача,
[00:30.960 --> 00:37.960]  которую мы решали, это у нас была задача ЛЦА. Была задача ЛЦА? Ну, естественно, так вот. Ну вот,
[00:37.960 --> 00:46.560]  значит, мы это попытаемся прообретить, потому что, значит, как это у нас было? Ну, как вы помните,
[00:46.560 --> 00:52.760]  задача ЛЦА у нас, по идее, там, на практические олимпиадные практики, значит, у нас как решается?
[00:52.760 --> 00:59.280]  Она решается либо там предподсчет за N log N двоичных подъемов, и после этого вы за логарифом
[00:59.280 --> 01:06.400]  там, собственно, двоичные подъемы ищете, помните, да? Ну, вы помните, конечно. Вот, либо там за N log N
[01:06.400 --> 01:11.480]  насчитываете, там, что-то запускайте ДФС, там насчитываете на нем спортстейбл за N log N,
[01:11.480 --> 01:16.640]  и, соответственно, там после этого за OAT единицы на все запросы отвечаете. Вот. Ну, выяснилось,
[01:16.640 --> 01:21.080]  что понятно, есть более чемпионский алгоритм, который там за OAT N предподсчет, за OAT единицы,
[01:21.080 --> 01:27.320]  там Far-Colton-Berger, там и так далее. Вот. Но, значит, к чему у нас N? Вот. Но вот теперь тут возникает
[01:27.320 --> 01:33.480]  такой вопрос. К сожалению, этот алгоритм двоичные подъема искать не научился. Ну, двоичные подъемы
[01:33.480 --> 01:38.720]  все-таки не для научиться искать быстрее, потому что их по определению N log N. Ну, вот возникает такая
[01:38.720 --> 01:46.880]  интересная задачка, которую у нас вот, с которой мы начнем, такая полуразминочная, называется level
[01:46.880 --> 02:04.080]  ancestor quiz. Вот. Ну, вот, значит, задачка, соответственно, такая. Значит, дано, как всегда,
[02:04.080 --> 02:15.840]  подвешенное дерево. Будьте здоровы. Абсолютно несбалансированные, если сбалансировать. Да.
[02:15.840 --> 02:23.800]  Произвольное подвешенное дерево, как всегда, N вершин. Эбребер. Эбр равно N минус один. Вот. И
[02:23.800 --> 02:33.440]  теперь у вас будет задачка. Значит, в запросе вам дают Q, там, ладно, не Q, вам дают вершину V и
[02:33.440 --> 02:47.120]  число L. Натурально. Значит, задача будет очень проста. Возьмите вершину V и пойдите на L шагов вверх.
[02:47.120 --> 02:58.600]  Вот. Вот там жутко интересно, куда мы попадем. Вот вершина. Да. То есть мы хотим, короче говоря,
[02:58.600 --> 03:06.480]  найти предка вершины V, находящимся от вершины V, на расстоянии ровно L. Ну, или корень, там,
[03:06.480 --> 03:12.840]  если такой вершины. Ну, или там, минус один, в общем, все что угодно. Это уже деталь. Ну, вот,
[03:12.840 --> 03:28.640]  давайте смотреть, как мы умеем решать эту задачу. Да. Ну, тут, ну, вот. Ну, да, нам хочется онлайн.
[03:28.640 --> 03:33.200]  Да, есть, конечно, там, хотя мы дай, что-то мы вот, да. Да, есть, конечно, теоретически там,
[03:33.200 --> 03:37.360]  вот, алгоритм Торьяна, который использует SNM. Ну, вот, ближе к SNM, я думаю, может быть,
[03:37.360 --> 03:43.720]  его даже имеет смысл вспомнить. Вот. Но, как бы, если мы хотим это все в онлайне, то у нас есть
[03:43.720 --> 03:47.720]  алгоритм, который работает, ну, да, то есть использование двоичных подъемов. Вот как бы вы,
[03:47.720 --> 03:54.560]  кстати, сказали, за какую асимптотику он работает. Ну, вот, ну, можно так сказать. Ну, вот, можно
[03:54.560 --> 04:04.360]  сказать, что он работает за N log N предподсчета. И после этого на каждый запрос на log N. Ну, в принципе,
[04:04.360 --> 04:10.680]  да. Ну, имеем в виду, что N log N плюс Q log N по факту, да, потому что амортизация сегодня нам
[04:10.680 --> 04:19.800]  понадобится. Вот, поэтому, да. Значит, смотрите. Но, естественно, очень хотелось бы это каким-то
[04:19.800 --> 04:30.360]  образом ускорить. Вот. Как же это сделать? Ну, собственно, непосредственно двоичные подъемы
[04:30.360 --> 04:39.080]  нам так просто не помогут. То есть нам потребуется делать немножко, ну, вот такую альтернативную,
[04:39.080 --> 04:45.480]  то есть пару альтернативных концепций. Вот. Да, вот сегодня мы будем говорить про всякие
[04:45.480 --> 04:52.680]  древесные декомпозиции. Да. Как говорится, да. Если бы я спрашивал, да, какая будет первая выбор,
[04:52.680 --> 04:58.840]  скорее всего, не угадали. Выбирали бы из двух вариантов. Да. А правильная, а правильная,
[04:58.840 --> 05:04.840]  бывают третий и четвертый. Так вот, третий. И так. Нет, очень просто сейчас будет. Значит,
[05:04.840 --> 05:22.440]  смотрите. Longest path decomposition. Лестничная это четвертая. Ну, на самом деле, по-хорошему лестничная
[05:22.440 --> 05:30.200]  это, конечно, не совсем декомпозиция, но сейчас мы это увидим. Значит, что? Значит, что это такое?
[05:30.200 --> 05:44.280]  Значит, смотрите. И система очень простая. Мы берем вершину, корень, и находим. Вот. И находим
[05:44.280 --> 05:49.560]  самый длинный путь в этом дереве. От корня куда-нибудь. Ну, или что-то уже самый-самый
[05:49.560 --> 06:11.560]  глубокий лист. Ну, на самом деле, да. На самом деле, да. Вот, смотрите. Нет, смотрите. То-то и оно,
[06:11.560 --> 06:16.520]  что строится-то она будет быстро. Ну, потому что дальше это будет так. Ну, то есть, чтобы завершить
[06:16.520 --> 06:20.760]  определение декомпозиции, достаточно сказать просто пару слов в духе. Выкинем вот эти вершины,
[06:20.760 --> 06:25.800]  у нас осталось какие-то вот эти вот подвешенные деревья, в каждом из них запускаемся рекурсивно.
[06:25.800 --> 06:41.240]  Ну, разбить дерево. Разбить множество вершин на пути. Каким-то способом. Нет,
[06:41.240 --> 06:49.640]  пока не предъявлено. Нет, смотри. Да, хотелось бы. Заметим следующее. Заметим, что, ну, смотри. На
[06:49.640 --> 06:55.480]  самом деле, я утверждаю, что это делается очень просто следующим образом. Запустим ДФС и за ОАТ
[06:55.480 --> 07:03.880]  насчитаем такую, боже, космическую штуку, как размер под дерево каждой вершины. А да, она же
[07:03.880 --> 07:08.920]  глубина. А, ну и размер посчитаем, глубину посчитаем. Да, оговорился, прошу прощения. Да, значит,
[07:08.920 --> 07:12.920]  посчитаем, соответственно, глубину. То есть нас интересует. Ну, во-первых, конечно, нам
[07:12.920 --> 07:18.320]  поможет на самом деле насчитать и глубину самой вершины, просто расстояние до корня. Но нам
[07:18.320 --> 07:25.000]  действительно не помешало бы найти, на какой глубине, например, находится самый глубокий лист,
[07:25.000 --> 07:38.000]  а самое главное, откуда он взялся. Вот. Ну, потому что у каждой вершины есть под деревья. Ну,
[07:38.080 --> 07:50.360]  в каком под деревья находится самый глубокий лист. Нет, вообще нет. Давайте я сейчас. Ну,
[07:50.360 --> 08:03.920]  давайте так, смотрите. Вот смотрите, если насчитать. Давайте так. Не, а как это тебе поможет? Не,
[08:04.160 --> 08:10.040]  тебе надо, тут другая задача. Да, во-первых, хотим сразу втырить для всех вершин. Да, то есть,
[08:10.040 --> 08:16.000]  во-первых, если мы глубины насчитаем, это будет вот так, 4, 5, 6, 7, 8, 9, 10. А вот то, что нам нужно,
[08:16.000 --> 08:27.360]  это вот в этой вершине будет равно 10. И в этой 10, и в этой 10, а в этой 1, и в этой 1, а в этой 2. Нет,
[08:27.360 --> 08:36.320]  это глубина ее. То есть, по дереве этой вершины самый глубокий лист имеет глубину 10. Ну, можно и
[08:36.320 --> 08:52.280]  так, по-моему, суть одна. Вот, 2, 3, 4, 5, 6, 7, тут вот, тут 8. А это абсолютная глубина. Нет,
[08:52.280 --> 09:01.400]  это абсолютная. Можно относительную, как сказать, это уже все. Вы уже во втором
[09:01.400 --> 09:13.480]  семестре замена базиса для вас должна быть беспроблемной операцией. Ну вот, значит,
[09:13.480 --> 09:22.120]  смотрите. Хорошо, если вы такое насчитали, то теперь декомпозиция делается очень просто. То
[09:23.080 --> 09:27.160]  есть, на самом деле, вы для каждого под дерево делаете такую декомпозицию, то есть, храните
[09:27.160 --> 09:34.600]  соответствующие пути. А потом, если вы в вершине знаете, что вы тут насчитали, что тут декомпозиция
[09:34.600 --> 09:39.920]  в этом под дереве, допустим, вот такая. Тут она вот такая, а тут она вот, ну, тут без вариантов,
[09:39.920 --> 10:06.600]  в общем-то. Нет, ну, это глубина. Ну, это не важно, просто смотрите. Просто это означает
[10:06.600 --> 10:16.640]  следующее. Вот, допустим. А нам быстро, нам суммарно ж за ОАТ надо, потому что все, что я сейчас
[10:16.640 --> 10:24.160]  говорю, мы делаем в предподсчете. Можно, ну, там все можно насчитать, это да, безусловно. Смотри,
[10:24.160 --> 10:29.280]  тут все просто. Значит, когда, когда вот теперь мы видим вершину, у нее в под деревьях, под деревья
[10:29.280 --> 10:35.320]  уже разбиты на пути. Вот, то есть, я утверждаю, что теперь все, что нам нужно, это опять можно
[10:35.800 --> 10:40.200]  даже в тупую еще раз перебрать всех детей, выяснить, где у нас эта самая глубокая вершина
[10:40.200 --> 10:47.400]  находится. И тогда я утверждаю, что вот если она находится вот в этом под деревью, то тогда от этой
[10:47.400 --> 10:52.560]  вершины до этой самой глубокой вершины, ну или до одной из них, обязательно идет вот этот вот путь
[10:52.560 --> 11:05.320]  из декомпозиции обязательно. Ну, я вот, смотри, вот, предположим, что вот у нас есть. Жило было под
[11:05.320 --> 11:10.960]  деревом. То есть, жил будут несколько под деревьях. И мы думаем, где тут самое, в каком из них находится
[11:10.960 --> 11:17.600]  самая глубокая вершина. Допустим, да, честно пройдемся выясним. Вот, допустим, в этом. Вот
[11:17.600 --> 11:23.040]  самое глубокое. Тогда я утверждаю, так как мы этот вот под дерево, равно как все остальные, уже декомпозировали
[11:23.040 --> 11:33.360]  на пути, вот, но не то чтобы мы их возвращаем, но сейчас вы увидите, в каком смысле, то я утверждаю,
[11:33.360 --> 11:37.640]  что от этой вершины до этой там обязательно есть путь. Ну или до какой-то другой вершины той же
[11:37.640 --> 11:45.280]  глубины. Ну вот, от корня этого под дерево до вот этой самой глубокой вершины. Ну, самая глубокая
[11:45.280 --> 11:51.080]  вершина для этого под дерева, она и самая глубокая для этого тоже автоматически. Но тогда идея такая,
[11:51.080 --> 12:00.560]  тогда я утверждаю, чтобы завершить декомпозицию, вам просто к этому пути нужно по push front вот эту
[12:00.560 --> 12:12.080]  вершину. Все. Ну да, пусть путь, вот нам, для вас, что будет очень важно, это что путь, это вот должен быть в
[12:12.080 --> 12:21.200]  явном виде список вершин. Это важно, это вот очень. Вот это очень важно, но соответственно, да,
[12:21.200 --> 12:28.440]  когда, как делать push front? Ну, вектор мы push front делать за вот единицы не умеем, но у нас есть дек,
[12:28.440 --> 12:37.640]  да, с оператором квадратной скобки. Ну да, можно reverse, да, да, да, а можно сразу дек,
[12:37.640 --> 12:43.640]  и не заморачиваться. Но, впрочем, не суть важна. Вот это уже простые детали, то есть это не суть.
[12:43.640 --> 12:52.680]  То есть чем такая longest pass decomposition при-я-на? Она приятна тем, что вы все это построили за,
[12:52.680 --> 13:02.520]  вот, что вот этот предпочет он действительно делается за n. Ну, по крайней мере, сама эта
[13:02.520 --> 13:04.520]  декомпозиция легко строится за n, не правда ли?
[13:04.520 --> 13:20.520]  А вот у нас в каждой вершине, то есть когда мы хотим перейти в предко, мы уже добавляем путь, когда мы прошли через всех предков.
[13:20.520 --> 13:27.520]  Через всех потомков. Ну да. Ну да, да, ну естественно, самое главное, понятно, что мы, конечно, не...
[13:27.520 --> 13:43.520]  Ну, зачем? Нет, зачем? Просто у нас, ну там звучит будет так, у вас есть глобально какой-то вектор векторов,
[13:43.520 --> 13:49.520]  в который вы будете записывать пути. Вот, ну там, и вы будете там, и для каждой вершины вы пройдены,
[13:49.520 --> 13:54.520]  вы будете хранить информацию, в каком пути он, в каком из этих векторов он находится и на какой позиции.
[13:54.520 --> 14:00.520]  Прямо туда. Вот, с одной стороны, ну а ты и в самом векторе, векторе храним эти пути.
[14:00.520 --> 14:03.520]  Ну, желательно снизу вверх, наверное, максимально удобно будет.
[14:03.520 --> 14:08.520]  Тогда, значит, смотрите, что вы делаете, значит, что вы теперь делаете.
[14:08.520 --> 14:15.520]  Значит, rdfs будет устроен очень просто. Если у вас какая-то вершина в подделье одна, то все, что вы делаете,
[14:15.520 --> 14:23.520]  это тупо создаете новый путь. Ну, в этом векторе векторов вы создаете новый путь из себя любимый.
[14:23.520 --> 14:30.520]  Да, напоминаю, это декомпозиция, то есть как бы каждая вершина принадлежит какому-то пути, возможно длины 1.
[14:30.520 --> 14:35.520]  В смысле длины 0. В смысле...
[14:35.520 --> 14:38.520]  Получается так, что у нас вершина может следовать нескольких путях.
[14:38.520 --> 14:44.520]  Нет, это декомпозиция. Как бы, да, может быть так, что из вершины тут вот самых глубоких несколько,
[14:44.520 --> 14:52.520]  но мы выбираем... Да, но ведь в декомпозиции мы же это декомпозировали тут у этого корня один путь.
[14:52.520 --> 14:59.520]  Поэтому в этот путь просто прибавили вершина, а все остальные пути вот тут уже есть.
[14:59.520 --> 15:05.520]  Да нет. Нет, почему жонглировать?
[15:05.520 --> 15:22.520]  Нет, смотрите, нет, у вас был вектор, вы запустились рекурсивно, у вас есть вектор векторов со всеми путями, которые тут нашли.
[15:22.520 --> 15:27.520]  Да, и вершины все поддерживают. Мы все поддерживаем, мы все...
[15:27.520 --> 15:33.520]  Вот, поэтому вам как бы остается просто найти теперь куда пушфронтать, в смысле пушбекать.
[15:33.520 --> 15:39.520]  Вот, собственно, по пушбекали записали, ну и на этом все с вами были.
[15:39.520 --> 15:44.520]  По крайней мере, на уровне предподсчета.
[15:44.520 --> 15:49.520]  Вот, значит, чем теперь... Ну вот, ну и заодно, конечно, глубины тоже предподсчитали.
[15:49.520 --> 15:53.520]  Все это сделали за вот это. Это приятно.
[15:53.520 --> 16:02.520]  Это все весело и красиво, пока мы не задумались на тему того, а как же искать?
[16:03.520 --> 16:13.520]  Ответ на интересующий нас запрос, ради чего мы все это вообще делаем.
[16:13.520 --> 16:20.520]  Ну, во-первых, мегаумную мы уже ввели на самом деле. Мы же для каждой вершины храним, где они находятся.
[16:20.520 --> 16:29.520]  Ну, скажем так, если очень хочется, можно перенумеровать, конечно, вершины так, чтобы там, скажем, на корневом пути лежали вершины 0, 1, 2, 3 и так далее.
[16:29.520 --> 16:33.520]  И на каждом пути подотряки.
[16:40.520 --> 16:45.520]  Нет, а ну это уже у вас сейчас есть, потому что у вас есть тот самый вектор векторов.
[16:45.520 --> 16:49.520]  То есть вектор векторов, где вот для каждой вершины сказано, где она лежит.
[16:49.520 --> 16:51.520]  Вот.
[16:51.520 --> 16:56.520]  Да, у вершины сказано, в каком пути и в каком месте она лежит.
[16:56.520 --> 17:05.520]  Я бы сказал, что у нас типа вектор векторов, где по первому индексу, ну, где мы по номеру пути, условно, получим, собственно, массив с путем.
[17:05.520 --> 17:07.520]  Совершенно верно.
[17:07.520 --> 17:16.520]  А еще у нас для каждой вершины, то есть еще есть два массива, где для каждой вершины сказано, в каком из этих векторов она лежит и на какой позиции.
[17:16.520 --> 17:20.520]  Поэтому как бы это не проблема.
[17:20.520 --> 17:25.520]  Поэтому к чему это нас, значит, к чему это нас приводит?
[17:25.520 --> 17:30.520]  Приводит нас к это следующее. Вот нам пришел запрос ВЛ.
[17:30.520 --> 17:32.520]  Тогда крайне логично мыслить так.
[17:32.520 --> 17:40.520]  Так, вот у нас есть вершина В, и она живет на каком-то там пути.
[17:40.520 --> 17:46.520]  Мы можем даже найти на каком и какая у него длина, и где вершина В на этом пути находится.
[17:46.520 --> 17:48.520]  Пока вроде логично, да?
[17:48.520 --> 17:50.520]  Что же мы делаем?
[17:50.520 --> 17:52.520]  Что же мы делаем?
[17:52.520 --> 17:54.520]  Ну, тогда проверяем.
[17:54.520 --> 17:56.520]  Возможно, нам повезет.
[17:56.520 --> 18:02.520]  И если мы поднимемся на высоту Л, то мы за пределы этого пути не выйдем.
[18:02.520 --> 18:10.520]  Мы это можем выяснить, так ли это за О от единицы, и если нам повезло, то просто за ту же самую О от единицы и выдать ответ.
[18:10.520 --> 18:11.520]  Вот.
[18:11.520 --> 18:13.520]  Но это если нам повезло.
[18:13.520 --> 18:16.520]  А могло не повезти, как всегда, да?
[18:16.520 --> 18:19.520]  То есть поймал, что у нас не очень много переходов между путями?
[18:19.520 --> 18:21.520]  Ну, вот, да.
[18:21.520 --> 18:24.520]  Опишем технологию, но, в принципе, она уже интуитивна.
[18:24.520 --> 18:34.520]  То есть мы поднимаемся до корня, там вычитаем из Л то, что надо, проходим все, так сказать, по, как говорится, непутевому ребру.
[18:34.520 --> 18:36.520]  Нет, ну как его называть?
[18:36.520 --> 18:38.520]  Такое связующее между путями.
[18:38.520 --> 18:40.520]  Ну да, хорошо, связующее.
[18:40.520 --> 18:42.520]  Да, связующее лучше, конечно, да.
[18:42.520 --> 18:44.520]  Да, это как-то непутевый чую.
[18:44.520 --> 18:45.520]  Еще она обыдна.
[18:45.520 --> 18:48.520]  Как бы в Хавилайте, может, оно тяжелым бы было.
[18:48.520 --> 18:50.520]  А что такое Хавилай?
[18:50.520 --> 18:51.520]  Ну ладно.
[18:51.520 --> 18:53.520]  Я так понимаю, сколько мы уже здесь сидели.
[18:53.520 --> 18:54.520]  Да.
[18:54.520 --> 18:55.520]  Обсудим.
[18:55.520 --> 18:56.520]  Обсудим.
[18:56.520 --> 18:57.520]  Ой, обсудим.
[18:57.520 --> 18:58.520]  Значит, смотрите.
[18:58.520 --> 18:59.520]  Теперь, что интересно.
[18:59.520 --> 19:01.520]  Значит, хорошо, мы дошли до сюда, перешли.
[19:01.520 --> 19:03.520]  Значит, тут тоже какой-то путь есть.
[19:05.520 --> 19:10.520]  Но про этот путь можно сказать маленькую приятную вещь.
[19:10.520 --> 19:12.520]  А хотя бы такой же длинный?
[19:12.520 --> 19:13.520]  Нет.
[19:13.520 --> 19:16.520]  Короче, он хотя бы, он больше.
[19:16.520 --> 19:18.520]  Он строго больше, чем вот этот.
[19:18.520 --> 19:19.520]  Аж на один.
[19:19.520 --> 19:21.520]  Да, он строго больше.
[19:21.520 --> 19:22.520]  Почему?
[19:22.520 --> 19:27.520]  Потому что, ну, заметим, что у этой вершины действительно есть вершина.
[19:27.520 --> 19:30.520]  То есть, как минимум, вот на глубине вот этой вот...
[19:30.520 --> 19:34.520]  То есть, есть вот потомок на расстоянии от нее.
[19:34.520 --> 19:38.520]  Вот этот вот лист или шоу, это плюс один, правда?
[19:38.520 --> 19:39.520]  Ну вот он, на лицо.
[19:39.520 --> 19:46.520]  А это означает, что тогда вот этот путь тоже должен идти куда-то вот на хотя бы такую же или большую глубину.
[19:48.520 --> 19:49.520]  Вот.
[19:49.520 --> 19:53.520]  То есть, это означает, что вот длина вот этого пути, каждого следующего пути, строго больше.
[19:53.520 --> 19:55.520]  Хотя бы на один больше, чем длина предыдущего.
[19:57.520 --> 19:59.520]  Но тогда, значит, оно вот...
[19:59.520 --> 20:07.520]  Но тогда отсюда, в принципе, уже, возможно, даже где-то встречавшимся нам образом, я заявляю, что тогда вот ровно...
[20:07.520 --> 20:14.520]  Если мы в таком виде будем искать ответ на запрос, мы получим корень ассептотику.
[20:14.520 --> 20:16.520]  Корень из Н.
[20:16.520 --> 20:19.520]  Ну, это технологии конкретно пошли в ХЛД.
[20:19.520 --> 20:21.520]  Нет.
[20:21.520 --> 20:24.520]  Ну, во-первых, ХЛД будет логарифом путей.
[20:24.520 --> 20:25.520]  Ну, вот такая уже.
[20:25.520 --> 20:27.520]  А во-вторых, значит, от корень здесь берется...
[20:27.520 --> 20:30.520]  Ну, давайте кратенько напомним, из какой? Из откуда?
[20:30.520 --> 20:35.520]  Ну, потому что предположим, что мы тут прогулялись по К путям.
[20:35.520 --> 20:37.520]  Это К пути не пересекаются.
[20:37.520 --> 20:39.520]  А сколько в них вершин?
[20:39.520 --> 20:41.520]  В первом пути хотя бы одна вершина.
[20:41.520 --> 20:43.520]  Во втором хотя бы две.
[20:43.520 --> 20:44.520]  В третьем хотя бы три.
[20:44.520 --> 20:45.520]  И так далее.
[20:45.520 --> 20:47.520]  Значит, в Ка там хотя бы К.
[20:47.520 --> 20:51.520]  В совокупности получается тета от К квадрат.
[20:52.520 --> 20:54.520]  Причем это тета, то есть нечто там...
[20:54.520 --> 20:56.520]  Ну, К на К плюс один поделить...
[20:56.520 --> 20:58.520]  В общем, не интересно.
[20:58.520 --> 21:01.520]  И это не должно превосходить N.
[21:02.520 --> 21:04.520]  Так что все.
[21:04.520 --> 21:06.520]  То есть, как всегда.
[21:06.520 --> 21:07.520]  Да.
[21:07.520 --> 21:09.520]  Как говорится, корнячка многолика.
[21:09.520 --> 21:12.520]  Вот она тут, собственно, тоже так это подмигнула.
[21:18.520 --> 21:21.520]  Так что вот такая вот получилась красота.
[21:21.520 --> 21:25.520]  То есть, как всегда, чем этот алгоритм лучше?
[21:25.520 --> 21:27.520]  Тем, что у него припочет.
[21:27.520 --> 21:29.520]  А ответ за корень.
[21:29.520 --> 21:31.520]  Ну, корень все-таки...
[21:31.520 --> 21:33.520]  Корень больше, чем алгоритм.
[21:33.520 --> 21:35.520]  Ну, конечно.
[21:35.520 --> 21:37.520]  Ну, просто так не превратится.
[21:39.520 --> 21:41.520]  Просто так не превратится.
[21:41.520 --> 21:43.520]  Ладно, есть ли тут какие-то вопросы?
[21:43.520 --> 21:45.520]  Ну да, пока вроде все просто.
[21:47.520 --> 21:49.520]  Вот.
[21:49.520 --> 21:51.520]  И так.
[21:51.520 --> 21:53.520]  Ладно, декомпозиция номер четыре.
[21:55.520 --> 21:57.520]  Нет, ну в суд.
[21:57.520 --> 21:59.520]  Ну хорошо, да.
[21:59.520 --> 22:01.520]  Вообще, все-таки мы будем торопиться.
[22:01.520 --> 22:03.520]  Потому что, как я уже сказал, это все в конспекции.
[22:03.520 --> 22:05.520]  И мои тишники уже законспектировали это.
[22:05.520 --> 22:07.520]  Понятно, но я решил, что надо это.
[22:07.520 --> 22:09.520]  Ну да.
[22:09.520 --> 22:11.520]  Я либо осознаю, либо сижу и умираю.
[22:11.520 --> 22:13.520]  Так.
[22:13.520 --> 22:15.520]  Так, ну окей.
[22:15.520 --> 22:17.520]  Значит, раунд следующий.
[22:17.520 --> 22:19.520]  Ледер декомпозиции.
[22:19.520 --> 22:23.520]  Ну потому что просто так, вот действительно, как-то этот корень так не оптимизируешь.
[22:23.520 --> 22:25.520]  Вот.
[22:25.520 --> 22:27.520]  Значит, идея
[22:27.520 --> 22:29.520]  заключается в следующем.
[22:31.520 --> 22:33.520]  Ну, на самом деле, ледер декомпозицион
[22:33.520 --> 22:35.520]  ну не очень понятно, оказывается, почему она называется
[22:35.520 --> 22:37.520]  именно декомпозицион.
[22:37.520 --> 22:39.520]  Потому что, по-хорошему говоря, это не декомпозицион.
[22:39.520 --> 22:41.520]  Потому что теперь каждый путь,
[22:41.520 --> 22:43.520]  каждая вершина может содержаться
[22:43.520 --> 22:45.520]  в нескольких путях.
[22:45.520 --> 22:47.520]  Ну мы, конечно, выберем самый главный,
[22:47.520 --> 22:49.520]  но там, ну вот, условно.
[22:49.520 --> 22:51.520]  Но она может попадать в разные.
[22:51.520 --> 22:53.520]  Идея, на самом деле, в следующем.
[22:55.520 --> 22:57.520]  Значит, идея
[22:57.520 --> 22:59.520]  в следующем.
[22:59.520 --> 23:01.520]  Значит, смотрите.
[23:01.520 --> 23:03.520]  Значит, у нас, допустим, вот у нас есть путь
[23:03.520 --> 23:05.520]  для мы пять.
[23:05.520 --> 23:07.520]  Да?
[23:09.520 --> 23:11.520]  Как это вот хочется назвать даже не ледер декомпозицион,
[23:11.520 --> 23:13.520]  а дабл декомпозицион.
[23:13.520 --> 23:15.520]  Дабл декомпозицион.
[23:15.520 --> 23:17.520]  Не.
[23:17.520 --> 23:19.520]  Дабл, потому что
[23:19.520 --> 23:21.520]  мы этот путь удвоим.
[23:21.520 --> 23:23.520]  Хранить мы будем сейчас.
[23:23.520 --> 23:25.520]  То есть делаем абсолютно то же самое.
[23:25.520 --> 23:27.520]  Находим тот же самый, вот это вот самые длинные пути.
[23:27.520 --> 23:29.520]  Вот все хорошо.
[23:29.520 --> 23:31.520]  Но каждый путь,
[23:31.520 --> 23:33.520]  для каждого пути
[23:33.520 --> 23:35.520]  мы храним не только сам этот путь,
[23:35.520 --> 23:37.520]  но и идем,
[23:37.520 --> 23:39.520]  но и его предков
[23:39.520 --> 23:41.520]  на ту же длину.
[23:41.520 --> 23:43.520]  О, прикольно.
[23:43.520 --> 23:45.520]  Такая зеркалочка.
[23:45.520 --> 23:47.520]  Нет, но это не зеркалочка, это вот подъем.
[23:47.520 --> 23:49.520]  То есть, типа, у меня есть путь длины L.
[23:49.520 --> 23:51.520]  Ну ладно, тогда, наверное...
[23:51.520 --> 23:53.520]  Чего?
[23:53.520 --> 23:55.520]  Вершина.
[23:55.520 --> 23:57.520]  Да, тоже на L предков.
[23:57.520 --> 23:59.520]  На L предков.
[23:59.520 --> 24:01.520]  На L родителей.
[24:01.520 --> 24:03.520]  Прямо в тупую ходим и поднимаемся.
[24:03.520 --> 24:05.520]  L это если на пути L.
[24:05.520 --> 24:07.520]  Да, вот в лонгеспесе L.
[24:07.520 --> 24:09.520]  Основная часть, есть вот эти вот пути.
[24:09.520 --> 24:11.520]  Прямо вот храним.
[24:11.520 --> 24:13.520]  Ну, заметим, что
[24:13.520 --> 24:15.520]  к нашему предподсчету, в общем-то,
[24:15.520 --> 24:17.520]  не сильно много от этого добавится, правда?
[24:17.520 --> 24:19.520]  И он все еще будет
[24:19.520 --> 24:21.520]  за O от N.
[24:23.520 --> 24:25.520]  А как мы будем добавлять
[24:25.520 --> 24:27.520]  все эти зелененькие?
[24:27.520 --> 24:29.520]  А в тупую?
[24:29.520 --> 24:31.520]  Построили вот этот лонгеспас.
[24:31.520 --> 24:33.520]  Ну, тихо.
[24:33.520 --> 24:35.520]  Как всегда.
[24:35.520 --> 24:37.520]  Только почему-то с задней парты.
[24:39.520 --> 24:41.520]  А, ну вот, да.
[24:41.520 --> 24:43.520]  Вот.
[24:43.520 --> 24:45.520]  Ну, просто
[24:45.520 --> 24:47.520]  логика такая. Вот мы построили
[24:47.520 --> 24:49.520]  лонгеспес декомпозицион. Вот он, да?
[24:49.520 --> 24:51.520]  Ну, тогда идея такая.
[24:51.520 --> 24:53.520]  Давайте теперь прогуляемся по этим путям.
[24:53.520 --> 24:55.520]  Да, вот эти, да, вот эти
[24:55.520 --> 24:57.520]  путь мы храним, так как вы тут
[24:57.520 --> 24:59.520]  пушбекаете, скорее всего вы их еще и так справа
[24:59.520 --> 25:01.520]  налево храните, да?
[25:01.520 --> 25:03.520]  Так вот. И тогда теперь просто
[25:03.520 --> 25:05.520]  для каждого из этих путей вы тут просто
[25:05.520 --> 25:07.520]  приписываете нужное количество
[25:07.520 --> 25:09.520]  родителей.
[25:09.520 --> 25:11.520]  Которые взяли из тупого
[25:11.520 --> 25:13.520]  ну, нет. Зачем?
[25:13.520 --> 25:15.520]  В том же самом предподсчете,
[25:15.520 --> 25:17.520]  скорее всего, вы будете знать
[25:17.520 --> 25:19.520]  то есть у каждой вершины вы можете
[25:19.520 --> 25:21.520]  получить ее предка. В смысле, родители
[25:21.520 --> 25:23.520]  одного.
[25:23.520 --> 25:25.520]  Но это да, но заранее можно это
[25:25.520 --> 25:27.520]  предпочитать, особенно потому что
[25:27.520 --> 25:29.520]  тут еще вопрос, а как вам, собственно, это дерево
[25:29.520 --> 25:31.520]  задано?
[25:31.520 --> 25:33.520]  Помните, одно из классических
[25:33.520 --> 25:35.520]  вариантов задания дерева, это для каждой вершины
[25:35.520 --> 25:37.520]  пишем родителя. То есть это потом вы уже
[25:37.520 --> 25:39.520]  отдельно пишете там для вершины там
[25:39.520 --> 25:41.520]  типа вектор-вектор, который список смежности
[25:41.520 --> 25:43.520]  там, в смысле список детей, это все уже.
[25:43.520 --> 25:45.520]  Но это уже все там мелочи.
[25:47.520 --> 25:49.520]  Это уже такие очевидные ноты.
[25:49.520 --> 25:51.520]  Это, как говорится, очевидные мелочи
[25:51.520 --> 25:53.520]  жизни.
[25:53.520 --> 25:55.520]  Вот так вот.
[25:55.520 --> 25:57.520]  Ну, вот примерно вот так вот.
[25:59.520 --> 26:01.520]  Но заметим, что если мы хранили
[26:01.520 --> 26:03.520]  ОАТН информации,
[26:03.520 --> 26:05.520]  а стали хранить в два раза больше,
[26:05.520 --> 26:07.520]  то информацией стала
[26:07.520 --> 26:09.520]  ОАТН.
[26:09.520 --> 26:11.520]  То есть, смотрите, я так
[26:11.520 --> 26:13.520]  напишу.
[26:13.520 --> 26:15.520]  Я вот тут напишу, тут
[26:15.520 --> 26:17.520]  будет вот такой более
[26:17.520 --> 26:19.520]  жирный ОАТН.
[26:19.520 --> 26:21.520]  Можно еще
[26:21.520 --> 26:23.520]  даже без ОАТН, а после 2Н.
[26:23.520 --> 26:25.520]  Не, ну 2Н это не асимптотика.
[26:27.520 --> 26:29.520]  Асимптотика это Н.
[26:29.520 --> 26:31.520]  Но он будет более жирный, мы его нарисуем более жирным,
[26:31.520 --> 26:33.520]  в знак того, что там стала более жирная
[26:33.520 --> 26:35.520]  константа.
[26:35.520 --> 26:37.520]  Вот, в два раза более жирная.
[26:37.520 --> 26:39.520]  Да, я, по-моему, тут даже маханул немножко.
[26:39.520 --> 26:41.520]  Тут не в два, но ладно.
[26:41.520 --> 26:43.520]  Вот.
[26:43.520 --> 26:45.520]  Значит, смотрите, что теперь будет.
[26:45.520 --> 26:47.520]  Сейчас будет
[26:47.520 --> 26:49.520]  весело.
[26:49.520 --> 26:51.520]  Так что теперь давайте
[26:51.520 --> 26:53.520]  попробуем по
[26:53.520 --> 26:55.520]  ледер декомпозицион
[26:55.520 --> 26:57.520]  восстановить путь.
[26:57.520 --> 26:59.520]  Восстановить ответ.
[26:59.520 --> 27:01.520]  То есть, теперь логика простая.
[27:01.520 --> 27:03.520]  Теперь, конечно, подыматься имеет смысл не только по
[27:03.520 --> 27:05.520]  ледеру, но и, конечно, по ледеру.
[27:05.520 --> 27:07.520]  Видите, да?
[27:07.520 --> 27:09.520]  Но
[27:09.520 --> 27:11.520]  возникает такая интересная
[27:11.520 --> 27:13.520]  мысль.
[27:13.520 --> 27:15.520]  Вот.
[27:15.520 --> 27:17.520]  Значит, теперь тогда возникает такая.
[27:17.520 --> 27:19.520]  Вот хорошо. Допустим, если повезло,
[27:19.520 --> 27:21.520]  то есть там теперь уже с большей вероятностью повезет
[27:21.520 --> 27:23.520]  за ОАТ единицы.
[27:23.520 --> 27:25.520]  Вот.
[27:25.520 --> 27:27.520]  Но все еще может
[27:27.520 --> 27:29.520]  не повезти.
[27:29.520 --> 27:31.520]  Мы у нас пока все-таки держимся чуть-чуть подальше
[27:31.520 --> 27:33.520]  вероятностах алгоритмов, как вы помните.
[27:37.520 --> 27:39.520]  Ну да.
[27:39.520 --> 27:41.520]  У нас на самом деле был такой
[27:41.520 --> 27:43.520]  методический спорт, потому что
[27:43.520 --> 27:45.520]  собственно, называется я и
[27:45.520 --> 27:47.520]  собственно, Илья Степанов как-то действительно хотят
[27:47.520 --> 27:49.520]  отнести вероятность алгоритма, в том числе
[27:49.520 --> 27:51.520]  их иши на третий семестр.
[27:51.520 --> 27:53.520]  Потому что
[27:53.520 --> 27:55.520]  чтобы нормально их анализировать, все-таки имеет
[27:55.520 --> 27:57.520]  смысл, чтобы вы все-таки познакомились с тервером.
[27:57.520 --> 27:59.520]  Ну вот.
[27:59.520 --> 28:01.520]  Нет.
[28:01.520 --> 28:03.520]  Альтернативный вариант это был
[28:03.520 --> 28:05.520]  помучить вас прямо сейчас,
[28:05.520 --> 28:07.520]  только при этом тогда пришлось бы этот сервер вводить.
[28:07.520 --> 28:09.520]  Ну, может быть, в меньшей степени,
[28:09.520 --> 28:11.520]  но и так далее. Но зачем на это тратить время,
[28:11.520 --> 28:13.520]  если, собственно, вам это потом все равно
[28:13.520 --> 28:15.520]  сделают, причем
[28:15.520 --> 28:17.520]  качественно и фундаментально.
[28:17.520 --> 28:19.520]  Вот. И поэтому...
[28:19.520 --> 28:21.520]  Да?
[28:21.520 --> 28:23.520]  А куда делся Эрлих?
[28:23.520 --> 28:25.520]  Ну, да.
[28:25.520 --> 28:27.520]  Ну, да.
[28:27.520 --> 28:29.520]  Ну, да.
[28:29.520 --> 28:31.520]  Не, ну да, Эрлих,
[28:31.520 --> 28:33.520]  это хорошо, да.
[28:33.520 --> 28:35.520]  Ну, да.
[28:35.520 --> 28:37.520]  Не, ну как сказать, парень?
[28:37.520 --> 28:39.520]  Ну, окей, ну ладно, не будем сейчас на это.
[28:39.520 --> 28:41.520]  Ну, в конце концов, не будет. Ну, значит, в конце концов,
[28:41.520 --> 28:43.520]  может быть, может быть, тогда вернется Шабанов.
[28:43.520 --> 28:45.520]  Вот у нас Шабанов читал, вот это, это круто было.
[28:47.520 --> 28:49.520]  А, новый? Ну, окей.
[28:49.520 --> 28:51.520]  Ну ладно, это уже детали, все.
[28:51.520 --> 28:53.520]  Не важно. Так вот. А теперь мы перейдем к следующему.
[28:53.520 --> 28:55.520]  Значит, смотрите, хорошо, вот мы перешли.
[28:55.520 --> 28:57.520]  Итак, вот мы...
[28:57.520 --> 28:59.520]  Хорошо, вот на этом пути
[28:59.520 --> 29:01.520]  этот путь прошли, Элли еще
[29:01.520 --> 29:03.520]  не покрылся, и мы переходим
[29:03.520 --> 29:05.520]  как сказать, к родителю. Да, ну это ребро
[29:05.520 --> 29:07.520]  не обязательно черное, может оно и синее, кстати.
[29:07.520 --> 29:09.520]  Тут как повезет.
[29:09.520 --> 29:11.520]  Эти ребра тоже могут быть синими, например.
[29:13.520 --> 29:15.520]  Да, теперь я утверждаю, да, что
[29:15.520 --> 29:17.520]  если теперь вы перешли... В общем, короче, если вы
[29:17.520 --> 29:19.520]  взяли вот этот путь из ледерди композицион и пошли
[29:19.520 --> 29:21.520]  к родителю его начало,
[29:21.520 --> 29:23.520]  то у этого родителя,
[29:23.520 --> 29:25.520]  пусть, внимание, синий путь,
[29:25.520 --> 29:27.520]  вот в лонгесте, хотя бы
[29:27.520 --> 29:29.520]  в два раза больше, чем вот этот.
[29:31.520 --> 29:33.520]  Да, именно синий.
[29:33.520 --> 29:35.520]  Именно синий у него, хотя бы
[29:35.520 --> 29:37.520]  ну, у него, он тут спускается.
[29:37.520 --> 29:39.520]  Смотрите, почему.
[29:39.520 --> 29:41.520]  Ну, хотя, ладно, тут проблема,
[29:41.520 --> 29:43.520]  что он может быть синим, он может пускаться вот так.
[29:43.520 --> 29:45.520]  На самом деле очевидно.
[29:45.520 --> 29:47.520]  Вот просто из этой картинки.
[29:47.520 --> 29:49.520]  Смотрите, какая идея.
[29:49.520 --> 29:51.520]  Вот здесь было, и было здесь
[29:51.520 --> 29:53.520]  L-вершин.
[29:53.520 --> 29:55.520]  А, подождите.
[29:55.520 --> 29:57.520]  Получается, этот большой путь получили уже
[29:57.520 --> 29:59.520]  после того, как посчитали все мелкие.
[29:59.520 --> 30:01.520]  И при этом, то есть этот путь,
[30:01.520 --> 30:03.520]  он уже содержал тут зеленую часть.
[30:03.520 --> 30:05.520]  Ну, вот, нет, не совсем.
[30:05.520 --> 30:07.520]  Нет, вот этот путь L, потом мы поднялись еще
[30:07.520 --> 30:09.520]  вот тут на L.
[30:09.520 --> 30:11.520]  Когда мы зеленый добавляли?
[30:11.520 --> 30:13.520]  Это случилось уже...
[30:13.520 --> 30:15.520]  Мы же сказали, что начальство писали
[30:15.520 --> 30:17.520]  L.
[30:17.520 --> 30:19.520]  Да, мы посчитали L.
[30:19.520 --> 30:21.520]  Нет, мы посчитали L.
[30:21.520 --> 30:23.520]  А потом
[30:23.520 --> 30:25.520]  допихали в конец,
[30:25.520 --> 30:27.520]  превратив его в ледер, вот эти вот еще
[30:27.520 --> 30:29.520]  его родителей.
[30:29.520 --> 30:31.520]  Но это не декомпозиция.
[30:31.520 --> 30:33.520]  Нет, этот путь не вы...
[30:35.520 --> 30:37.520]  Нет, нет, нет.
[30:37.520 --> 30:39.520]  Это синяя часть пока L, все нормально.
[30:39.520 --> 30:41.520]  Я утверждаю, что через вот
[30:41.520 --> 30:43.520]  эту уже вершину
[30:43.520 --> 30:45.520]  может быть синий путь длины хотя бы 2L.
[30:45.520 --> 30:47.520]  А элементарно?
[30:47.520 --> 30:49.520]  Потому что глубина его под дерево
[30:49.520 --> 30:51.520]  в относительных величинах
[30:51.520 --> 30:53.520]  хотя бы 2L. Почему 2L?
[30:53.520 --> 30:55.520]  Потому что вот из него можно пойти
[30:55.520 --> 30:57.520]  в потомка на длину 2L.
[31:07.520 --> 31:09.520]  Нет, какая коллизия? Да, согласен.
[31:09.520 --> 31:11.520]  Да, правильно.
[31:11.520 --> 31:13.520]  Нет, совершенно верно.
[31:13.520 --> 31:15.520]  Да, вполне может быть так, что
[31:15.520 --> 31:17.520]  на самом деле вот этот вот мы тут
[31:17.520 --> 31:19.520]  по зеленому...
[31:19.520 --> 31:21.520]  Нет, нет, смотри, нет. Почему?
[31:21.520 --> 31:23.520]  Смотри, у каждой вершины
[31:23.520 --> 31:25.520]  путь это как минимум
[31:25.520 --> 31:27.520]  глубина его под дерево, правда?
[31:29.520 --> 31:31.520]  Ну, глубина, да. Даже плюс один
[31:31.520 --> 31:33.520]  считая самую вершину. Ну, понятно.
[31:33.520 --> 31:35.520]  Но утверждение
[31:35.520 --> 31:37.520]  у этой вершины
[31:37.520 --> 31:39.520]  есть потомок на глубине
[31:39.520 --> 31:41.520]  2L. Вот конкретно этой.
[31:43.520 --> 31:45.520]  Ну, смотри.
[31:45.520 --> 31:47.520]  Жил был путь длины L.
[31:47.520 --> 31:49.520]  Жила была вот эта вершина.
[31:49.520 --> 31:51.520]  Из нее мы тут поднялись
[31:51.520 --> 31:53.520]  на длину L, плюс-минус 1
[31:53.520 --> 31:55.520]  по ее
[31:55.520 --> 31:57.520]  синему пути.
[31:57.520 --> 31:59.520]  Вот я вот эту беру самую глубокую.
[31:59.520 --> 32:01.520]  Потом поднялись еще
[32:01.520 --> 32:03.520]  на L. И пришли вот
[32:03.520 --> 32:05.520]  в эту вершину. То есть из этой
[32:05.520 --> 32:07.520]  вершины мы поднялись аж на 2L.
[32:09.520 --> 32:11.520]  Ну, получается, переходим
[32:11.520 --> 32:13.520]  в ту, которая у нас уже
[32:13.520 --> 32:15.520]  зеленый.
[32:15.520 --> 32:17.520]  В вершину предок крайне
[32:17.520 --> 32:19.520]  зеленый. Ну, да.
[32:21.520 --> 32:23.520]  Вот. Ну, нет, у этой...
[32:23.520 --> 32:25.520]  А, ну, да.
[32:25.520 --> 32:27.520]  Ну, да.
[32:27.520 --> 32:29.520]  В начале
[32:29.520 --> 32:31.520]  у кота синий, то ничего бы не изменилось.
[32:31.520 --> 32:33.520]  Не, не, не. Но было бы
[32:33.520 --> 32:35.520]  2L минус 1, как раньше, чтобы в нее тоже
[32:35.520 --> 32:37.520]  поднимались.
[32:37.520 --> 32:39.520]  В общем, я понял.
[32:39.520 --> 32:41.520]  Я понял. Я лучше потом это объясню.
[32:41.520 --> 32:43.520]  Ну, ладно. Там уже видимо
[32:43.520 --> 32:45.520]  какой-то локальный формализм.
[32:45.520 --> 32:47.520]  Это до уточнения слов будет.
[32:47.520 --> 32:49.520]  Ну, вот. Ну, ладно.
[32:49.520 --> 32:51.520]  Хорошо. Нет, просто...
[32:51.520 --> 32:53.520]  Хорошо. У этой вершины
[32:53.520 --> 32:55.520]  есть глубина 2L.
[32:55.520 --> 32:57.520]  Через нее будет проходить путь, может
[32:57.520 --> 32:59.520]  через эту же вершину и через вот эту
[32:59.520 --> 33:01.520]  часть бывшего зеленого пути.
[33:01.520 --> 33:03.520]  Но у нее будет синий путь длины хотя бы
[33:03.520 --> 33:05.520]  2L. То есть при
[33:05.520 --> 33:07.520]  переходе от синего пути к следующему
[33:07.520 --> 33:09.520]  синему пути у нас эта длина возрастает
[33:09.520 --> 33:11.520]  хотя бы в два раза.
[33:11.520 --> 33:13.520]  И тогда мистическим образом
[33:13.520 --> 33:15.520]  корень и зен
[33:15.520 --> 33:17.520]  превращается
[33:17.520 --> 33:19.520]  превращается
[33:19.520 --> 33:21.520]  в элегантный
[33:21.520 --> 33:23.520]  логарифум.
[33:23.520 --> 33:25.520]  Ну, как элегантный?
[33:25.520 --> 33:27.520]  Хотя нет. Красивая идея, конечно.
[33:27.520 --> 33:29.520]  Вот.
[33:29.520 --> 33:31.520]  Ну, вот. Вот уже красиво.
[33:31.520 --> 33:33.520]  То есть мы уже...
[33:33.520 --> 33:35.520]  двоичные подъемы
[33:35.520 --> 33:37.520]  смажировали.
[33:37.520 --> 33:39.520]  Вот. То есть мы уже теперь
[33:39.520 --> 33:41.520]  предпочет за ОАТН, память ОАТН
[33:41.520 --> 33:43.520]  работает с залога.
[33:43.520 --> 33:45.520]  Но я их не случайно вспоминаю.
[33:47.520 --> 33:49.520]  Значит, потому что...
[33:49.520 --> 33:51.520]  Вот. Потому что...
[33:55.520 --> 33:57.520]  Вот.
[33:57.520 --> 33:59.520]  Потому что они нам
[33:59.520 --> 34:01.520]  все-таки пригодятся.
[34:03.520 --> 34:05.520]  Значит, смотрите.
[34:05.520 --> 34:07.520]  А теперь возникает вопрос.
[34:07.520 --> 34:09.520]  Значит, сейчас мы... сейчас мы
[34:09.520 --> 34:11.520]  найдем еще... сейчас у нас будет еще один.
[34:11.520 --> 34:13.520]  Сейчас уже без лишних декомпозиций.
[34:13.520 --> 34:15.520]  Но сейчас у нас будет
[34:15.520 --> 34:17.520]  снова появится вариант за N лог N
[34:17.520 --> 34:19.520]  и от единиц.
[34:19.520 --> 34:21.520]  Так, вот это вот стирать можно?
[34:21.520 --> 34:23.520]  Это мы себе уже
[34:23.520 --> 34:25.520]  вообразили.
[34:25.520 --> 34:27.520]  Вот.
[34:27.520 --> 34:29.520]  Вообразили. Да.
[34:29.520 --> 34:31.520]  Сейчас будет тут...
[34:33.520 --> 34:35.520]  Но это тоже будет.
[34:35.520 --> 34:37.520]  Так.
[34:37.520 --> 34:39.520]  Так.
[34:39.520 --> 34:41.520]  Эх, сервис. Как это называется?
[34:41.520 --> 34:43.520]  Вот. Да. Как-то...
[34:43.520 --> 34:45.520]  Вообще, конечно, вообще радостно, что на самом деле
[34:45.520 --> 34:47.520]  наконец-то мы на самом деле учимся в том формате,
[34:47.520 --> 34:49.520]  в котором учились все ваши великие
[34:49.520 --> 34:51.520]  предшественники до 2019
[34:51.520 --> 34:53.520]  включительно.
[34:55.520 --> 34:57.520]  Ну, я вам больше скажу даже
[34:57.520 --> 34:59.520]  вот алгоритмические предметы и так далее
[34:59.520 --> 35:01.520]  вообще и на первом, и на втором курсе,
[35:01.520 --> 35:03.520]  и вообще на многих курсах
[35:03.520 --> 35:05.520]  преподаются именно здесь.
[35:05.520 --> 35:07.520]  Нет.
[35:07.520 --> 35:09.520]  Разница очень простая.
[35:09.520 --> 35:11.520]  Подавляющее большинство преподавателей являются
[35:11.520 --> 35:13.520]  действующими разработчиками компании Яндекс,
[35:13.520 --> 35:15.520]  например, Тамаби и прочих компаний,
[35:15.520 --> 35:17.520]  из этих мест работы
[35:17.520 --> 35:19.520]  сюда ездить гораздо ближе,
[35:19.520 --> 35:21.520]  чем в Долгопробной.
[35:23.520 --> 35:25.520]  А школьник тут...
[35:31.520 --> 35:33.520]  У меня все проблемы.
[35:33.520 --> 35:35.520]  Почему я не понял?
[35:35.520 --> 35:37.520]  Понятно, что когда я говорю конец синего пяти,
[35:37.520 --> 35:39.520]  вот этот.
[35:39.520 --> 35:41.520]  Я думаю, что мы, когда доходим до конца зеленого,
[35:41.520 --> 35:43.520]  что мы бегаем в тот путь,
[35:43.520 --> 35:45.520]  который как бы связан
[35:45.520 --> 35:47.520]  с концом синего.
[35:47.520 --> 35:49.520]  А, нет, нет, нет. Этот путь синей здесь
[35:49.520 --> 35:51.520]  закончился.
[35:51.520 --> 35:53.520]  Ладно.
[35:53.520 --> 35:55.520]  Ну вот, нет.
[35:55.520 --> 35:57.520]  Ну вот.
[35:57.520 --> 35:59.520]  Нет, вот, да, просто преподаватель, да, обычно
[35:59.520 --> 36:01.520]  он обещает, поэтому как-то на Тиберяйскую ехать
[36:01.520 --> 36:03.520]  и проще. Ну там, в Сатратно
[36:03.520 --> 36:05.520]  вообще ехать вообще там, в Сабе вообще
[36:05.520 --> 36:07.520]  идеально. Ну вот. Ну там Яндекс
[36:07.520 --> 36:09.520]  чуть дальше, но тоже близко, но, соответственно.
[36:09.520 --> 36:11.520]  Вот.
[36:11.520 --> 36:13.520]  Что такое?
[36:13.520 --> 36:15.520]  Что значит тут работает кто-то из прибытий?
[36:15.520 --> 36:17.520]  Тут везде
[36:17.520 --> 36:19.520]  1С висит.
[36:19.520 --> 36:21.520]  Нет.
[36:21.520 --> 36:23.520]  Нет. Ну сформулируем так.
[36:23.520 --> 36:25.520]  Да, в принципе, это, как бы, помимо
[36:25.520 --> 36:27.520]  вот этого закуточка, где мы тут
[36:27.520 --> 36:29.520]  находимся, да, это по идее офис компании 1С, да.
[36:29.520 --> 36:31.520]  Вот.
[36:31.520 --> 36:33.520]  Ну а как-то это здесь находится учебная зона,
[36:33.520 --> 36:35.520]  ну здесь, в частности, вот, физтех
[36:35.520 --> 36:37.520]  собственно проводит свои пары.
[36:37.520 --> 36:39.520]  Ну и, ну там еще какие-то
[36:39.520 --> 36:41.520]  дополнительные образования тут проводятся, там, по-моему,
[36:41.520 --> 36:43.520]  какие-то крышки.
[36:43.520 --> 36:45.520]  Я вам даже больше скажу, в 2020
[36:45.520 --> 36:47.520]  вообще конкретно тут был
[36:47.520 --> 36:49.520]  СЕРС. Прям вот буквально
[36:49.520 --> 36:51.520]  просто вот в этих местах. То есть, возможно,
[36:51.520 --> 36:53.520]  на ваших, вот
[36:53.520 --> 36:55.520]  на этих парках стояли компьютеры и, собственно,
[36:55.520 --> 36:57.520]  как видите, там активно боролись за право поступить сюда
[36:57.520 --> 36:59.520]  без экзаменов.
[36:59.520 --> 37:01.520]  И приезжать сюда уже раз в неделю, да.
[37:01.520 --> 37:03.520]  Вот.
[37:03.520 --> 37:05.520]  Так что,
[37:05.520 --> 37:07.520]  ну вот. Так что, да, вот.
[37:07.520 --> 37:09.520]  Так что такое многофункционально. Да и вообще у нас периодически
[37:09.520 --> 37:11.520]  бывает, что у нас еще занятия отменяют, потому что
[37:11.520 --> 37:13.520]  как-то здесь еще любят проводить финал
[37:13.520 --> 37:15.520]  открытой Олимпиады, на самом деле.
[37:15.520 --> 37:17.520]  Ну это одна, это раз одна из площадок, но тем не менее.
[37:17.520 --> 37:19.520]  Вот. Ну просто обычно
[37:19.520 --> 37:21.520]  к этой Олимпиаде, там, по крайней мере, организационных
[37:21.520 --> 37:23.520]  из тех тоже имеет отношение, поэтому.
[37:23.520 --> 37:25.520]  Вот.
[37:25.520 --> 37:27.520]  Так вот.
[37:27.520 --> 37:29.520]  И так, значит, что мы сейчас хотим?
[37:29.520 --> 37:31.520]  Давайте вернемся к делу.
[37:31.520 --> 37:33.520]  Нет, пока
[37:33.520 --> 37:35.520]  никаких новых декомпозиций не будет.
[37:37.520 --> 37:39.520]  Но мы, ну вот, мы попробуем
[37:39.520 --> 37:41.520]  насчитать вот такие вот декомпозиции.
[37:43.520 --> 37:45.520]  И двоичные подъемы.
[37:47.520 --> 37:49.520]  Да. Тогда это, конечно,
[37:49.520 --> 37:51.520]  то есть давайте так
[37:51.520 --> 37:53.520]  напишу. То есть допустим так
[37:53.520 --> 37:55.520]  LD, вот, не
[37:55.520 --> 37:57.520]  путать HLD. Вот.
[37:57.520 --> 37:59.520]  Плюс. Так.
[37:59.520 --> 38:01.520]  Как у нас двоичные подъемы?
[38:01.520 --> 38:03.520]  LD это ледер. BL.
[38:03.520 --> 38:05.520]  А где, где здесь? Да, LD это ледер, да.
[38:05.520 --> 38:07.520]  Где нам ледер, если...
[38:07.520 --> 38:09.520]  А, потому что ледер включает в себя логист пас так удобно.
[38:09.520 --> 38:11.520]  А где авторы
[38:11.520 --> 38:13.520]  здесь увидели лестники?
[38:13.520 --> 38:15.520]  Типа, поднялся еще вверх.
[38:15.520 --> 38:17.520]  Круто. Ну где-то
[38:17.520 --> 38:19.520]  увидели, я не знаю.
[38:19.520 --> 38:21.520]  Вот, вот дерево.
[38:25.520 --> 38:27.520]  Ну я не знаю.
[38:27.520 --> 38:29.520]  Они думали, думали,
[38:29.520 --> 38:31.520]  как назвать, то уже назвали
[38:31.520 --> 38:33.520]  логиспас. Ну у них
[38:33.520 --> 38:35.520]  вазик такая ассоциация. Потому что, знаете, тогда
[38:35.520 --> 38:37.520]  это вообще есть глобальный вопрос первого семестра.
[38:37.520 --> 38:39.520]  Почему красно-черное дерево не, там, я не знаю,
[38:39.520 --> 38:41.520]  не жовто-блокритное, например, я не знаю.
[38:43.520 --> 38:45.520]  Ну, ладно.
[38:45.520 --> 38:47.520]  Когда его придумали,
[38:47.520 --> 38:49.520]  да, ладно.
[38:49.520 --> 38:51.520]  Да, ладно.
[38:51.520 --> 38:53.520]  Да, у них, да, у них
[38:53.520 --> 38:55.520]  под рукой были только красные-черные.
[38:55.520 --> 38:57.520]  Эх.
[38:57.520 --> 38:59.520]  Так вот.
[38:59.520 --> 39:01.520]  Ну да, мало ли.
[39:01.520 --> 39:03.520]  Как там, да, мои, да, мои родители,
[39:03.520 --> 39:05.520]  да, мои родители химики, грустно рассказывает
[39:05.520 --> 39:07.520]  Торин Иванович Корочев.
[39:09.520 --> 39:11.520]  Ну, нет, ну. Нет, ну просто
[39:11.520 --> 39:13.520]  больше не понял.
[39:13.520 --> 39:15.520]  Нет, ну там, чьи-то чеки, это Торин Иванович
[39:15.520 --> 39:17.520]  Корочев. А почему вы Торин? Ну, у меня родители химики
[39:17.520 --> 39:19.520]  по таблице Менделеева выбирали.
[39:19.520 --> 39:21.520]  А, то есть вы могли стать азотом или алюминием, да?
[39:21.520 --> 39:23.520]  Ну вот, мужик грустно вздохнул.
[39:25.520 --> 39:27.520]  Вот. Ну, не важно.
[39:27.520 --> 39:29.520]  Так, так вот.
[39:29.520 --> 39:31.520]  Значит, что, если мы насчитаем
[39:31.520 --> 39:33.520]  и ледер декомпозицион, вот.
[39:33.520 --> 39:35.520]  А, даже для понятности, я ее даже
[39:35.520 --> 39:37.520]  ледер декомпозицион.
[39:37.520 --> 39:39.520]  Байнери лифтс.
[39:39.520 --> 39:41.520]  Байнери лифтс.
[39:41.520 --> 39:43.520]  Байнери лифтс.
[39:43.520 --> 39:45.520]  Да.
[39:47.520 --> 39:49.520]  Ты уверен, что ты готов?
[39:49.520 --> 39:51.520]  Ты хоть на русском поедешь?
[39:51.520 --> 39:53.520]  Да, да.
[39:53.520 --> 39:55.520]  Have you prepared for my English?
[39:57.520 --> 39:59.520]  My perfect Russian English.
[39:59.520 --> 40:01.520]  English.
[40:01.520 --> 40:03.520]  Да. Ой.
[40:03.520 --> 40:05.520]  Так вот.
[40:05.520 --> 40:07.520]  Значит,
[40:07.520 --> 40:09.520]  ну вот. Ну, тут предпочет пока будет
[40:09.520 --> 40:11.520]  за НЛОГН, да?
[40:11.520 --> 40:13.520]  Ну,
[40:13.520 --> 40:15.520]  ну, значит, зато
[40:15.520 --> 40:17.520]  я утверждаю, что прямо сейчас
[40:17.520 --> 40:19.520]  на ваших глазах,
[40:19.520 --> 40:21.520]  значит,
[40:21.520 --> 40:23.520]  прямо сейчас на ваших глазах
[40:23.520 --> 40:25.520]  я научусь искать, значит,
[40:25.520 --> 40:27.520]  подыматься за от единиц.
[40:29.520 --> 40:31.520]  Пока вы на земле стоите,
[40:31.520 --> 40:33.520]  а не взлетели.
[40:33.520 --> 40:35.520]  Ну, я взлетать не собирался.
[40:35.520 --> 40:37.520]  Значит, смотрите.
[40:37.520 --> 40:39.520]  Значит, смотрите.
[40:39.520 --> 40:41.520]  Значит, смотрите.
[40:41.520 --> 40:43.520]  Значит, смотрите.
[40:43.520 --> 40:45.520]  Ну, идея очень простая.
[40:45.520 --> 40:47.520]  Оно у нас даже где-то
[40:47.520 --> 40:49.520]  фигурировало.
[40:49.520 --> 40:51.520]  Мало кто знает,
[40:51.520 --> 40:53.520]  вот, что если у нас есть
[40:53.520 --> 40:55.520]  мистическое число L,
[40:55.520 --> 40:57.520]  то существует
[40:57.520 --> 40:59.520]  такая степень двойки,
[40:59.520 --> 41:01.520]  которая не
[41:01.520 --> 41:03.520]  превосходит L.
[41:03.520 --> 41:05.520]  И при этом она такая
[41:05.520 --> 41:07.520]  последняя.
[41:07.520 --> 41:09.520]  А еще
[41:09.520 --> 41:11.520]  ее можно для каждого L
[41:11.520 --> 41:13.520]  от одного Dn предподсчитать.
[41:13.520 --> 41:15.520]  Ладно, еще более интересный факт, который
[41:15.520 --> 41:17.520]  скорее всего мы тоже столкнемся на будущих занятиях.
[41:17.520 --> 41:19.520]  На самом деле
[41:19.520 --> 41:21.520]  подобную штуку можно насчитывать за от единицы
[41:21.520 --> 41:23.520]  собственно не только от одного Dn,
[41:23.520 --> 41:25.520]  а для всех бинарных чисел, которые
[41:25.520 --> 41:27.520]  у нас вообще влезают в нашу память.
[41:29.520 --> 41:31.520]  Вот.
[41:31.520 --> 41:33.520]  Ну, логариф
[41:33.520 --> 41:35.520]  вот там
[41:35.520 --> 41:37.520]  это не совсем, но это логариф
[41:37.520 --> 41:39.520]  укругленный вниз, но...
[41:41.520 --> 41:43.520]  Чего?
[41:45.520 --> 41:47.520]  Каким образом?
[41:49.520 --> 41:51.520]  Да.
[41:51.520 --> 41:53.520]  А нужно насчитать самый старший
[41:53.520 --> 41:55.520]  единичный бит числа.
[41:55.520 --> 41:57.520]  Но там
[41:57.520 --> 41:59.520]  просто проблема будет в том, что
[41:59.520 --> 42:01.520]  быстро его насчитывать хорошо, но просто
[42:01.520 --> 42:03.520]  только помните, от 32 в данном случае
[42:03.520 --> 42:05.520]  это не от единицы.
[42:05.520 --> 42:07.520]  То есть это будет
[42:07.520 --> 42:09.520]  насчитываться там за O от W, где W
[42:09.520 --> 42:11.520]  это вот с
[42:11.520 --> 42:13.520]  какими битными числами мы работаем.
[42:13.520 --> 42:15.520]  Но вот утверждается, что можно сделать это
[42:15.520 --> 42:17.520]  за O от единицы, не завися от W.
[42:21.520 --> 42:23.520]  Вот
[42:23.520 --> 42:25.520]  утверждается, что
[42:25.520 --> 42:27.520]  некоторые современные процессы делают, кстати.
[42:27.520 --> 42:29.520]  Вот, интересно.
[42:29.520 --> 42:31.520]  Да, то про это умеют.
[42:31.520 --> 42:33.520]  Ну, потому что, да, там есть просто статья
[42:33.520 --> 42:35.520]  на тему того, как построить, там,
[42:35.520 --> 42:37.520]  произвали не на уровне, там, каких-то этих, там,
[42:37.520 --> 42:39.520]  каких-то схем просто построить, это тот самый
[42:39.520 --> 42:41.520]  старший бит, да.
[42:41.520 --> 42:43.520]  Значит, смотрите.
[42:43.520 --> 42:45.520]  Ну, короче говоря, в общем, так или иначе,
[42:45.520 --> 42:47.520]  в нашем случае это вообще не проблема.
[42:47.520 --> 42:49.520]  Вот мы, соответственно, максимальную степень,
[42:49.520 --> 42:51.520]  такой два степеника можем дойти. Так вот.
[42:51.520 --> 42:53.520]  Идея такая.
[42:53.520 --> 42:55.520]  И так вот нам из вершины
[42:55.520 --> 42:57.520]  нужно подняться,
[42:57.520 --> 42:59.520]  из вершины W нужно подняться на высоту L.
[42:59.520 --> 43:01.520]  Так вот, предлагается сделать
[43:01.520 --> 43:03.520]  следующий. Давайте вот на эту степень двойки
[43:03.520 --> 43:05.520]  поднимемся. Мы это можем сделать
[43:05.520 --> 43:07.520]  за один двоичный подъем.
[43:09.520 --> 43:11.520]  Логично, да?
[43:11.520 --> 43:13.520]  А второй подъем мы сделаем
[43:13.520 --> 43:15.520]  из ледер декомпозициона.
[43:15.520 --> 43:17.520]  А можно даже и логи
[43:17.520 --> 43:19.520]  с паса, в общем-то.
[43:19.520 --> 43:21.520]  Хотя нет, именно из ледера, конечно.
[43:21.520 --> 43:23.520]  Потому что идея такая.
[43:23.520 --> 43:25.520]  Зачем нам это вообще делать?
[43:25.520 --> 43:27.520]  Чтобы за вот единицы было.
[43:27.520 --> 43:29.520]  Я утверждаю, что у нас тут, если мы пойдем
[43:29.520 --> 43:31.520]  из этой вершины по ледер декомпозициону,
[43:31.520 --> 43:33.520]  мы сделаем один шаг.
[43:33.520 --> 43:35.520]  А, мы же можем, нам же не нужно
[43:35.520 --> 43:37.520]  бегать по путям, когда мы
[43:37.520 --> 43:39.520]  делаем вот этот подъемчик, да?
[43:39.520 --> 43:41.520]  То есть теперь из этой вершины надо подняться
[43:41.520 --> 43:43.520]  на вот нечто меньшее, чем
[43:43.520 --> 43:45.520]  два степеника.
[43:45.520 --> 43:47.520]  Меньше. Да, строго меньше.
[43:47.520 --> 43:49.520]  Окей, запрос есть.
[43:49.520 --> 43:51.520]  Согласен. Строго меньше.
[43:51.520 --> 43:53.520]  Но заметим, что у этой вершины
[43:53.520 --> 43:55.520]  глубина под дерево хотя бы два степеника.
[43:57.520 --> 43:59.520]  Вот. Так что получается,
[43:59.520 --> 44:01.520]  то есть вывод, то есть в соответствующем
[44:01.520 --> 44:03.520]  пути, значит, подняться
[44:03.520 --> 44:05.520]  по самому пути хотя бы на
[44:05.520 --> 44:07.520]  два степеника вы сможете. А значит
[44:07.520 --> 44:09.520]  вы просто за вот единицы поднимаетесь не на два
[44:09.520 --> 44:11.520]  степеника, а на столько вам надо.
[44:15.520 --> 44:17.520]  Ну, смотрите.
[44:17.520 --> 44:19.520]  В логе спест декомпозицион
[44:19.520 --> 44:21.520]  у этой вершины
[44:21.520 --> 44:23.520]  путь идет вниз хотя бы на два
[44:23.520 --> 44:25.520]  степеника.
[44:25.520 --> 44:27.520]  Да.
[44:27.520 --> 44:29.520]  Да, но тогда, если мы рассмотрим
[44:29.520 --> 44:31.520]  в ледер декомпозицион этот путь,
[44:31.520 --> 44:33.520]  тогда у нас есть путь длины хотя бы два
[44:33.520 --> 44:35.520]  степеника, и там у него сверху
[44:35.520 --> 44:37.520]  приписано тоже хотя бы два степеника, правда?
[44:37.520 --> 44:39.520]  То есть это значит, что на ледер декомпозиционе
[44:39.520 --> 44:41.520]  по ее пути в ледере
[44:41.520 --> 44:43.520]  можно подняться аж на два степеника.
[44:45.520 --> 44:47.520]  А то и будет. Все достаточно. Да, а нам надо
[44:47.520 --> 44:49.520]  на меньше.
[44:49.520 --> 44:51.520]  Так что вот таким вот не очень
[44:51.520 --> 44:53.520]  хитрым образом.
[44:53.520 --> 44:55.520]  Вот.
[44:55.520 --> 44:57.520]  Ну, точнее так, немножко накрученым образом.
[44:57.520 --> 44:59.520]  Да, но мы научились подниматься
[44:59.520 --> 45:01.520]  наконец впервые в истории за вот единицы.
[45:01.520 --> 45:03.520]  Да. Нет, реально.
[45:03.520 --> 45:05.520]  Вот именно подниматься вот мы за вот единицы.
[45:05.520 --> 45:07.520]  Да, научились. Ура.
[45:07.520 --> 45:09.520]  Но вот теперь
[45:09.520 --> 45:11.520]  давайте думать. Остается теперь вот
[45:11.520 --> 45:13.520]  маленький нот. Остается теперь
[45:13.520 --> 45:15.520]  вопрос. Как n лог n теперь
[45:15.520 --> 45:17.520]  превратить в от.
[45:23.520 --> 45:25.520]  Значит, что можно
[45:25.520 --> 45:27.520]  тут делать?
[45:29.520 --> 45:31.520]  Да, это вот первая
[45:31.520 --> 45:33.520]  идея. Во-первых, я
[45:33.520 --> 45:35.520]  утверждаю, что можно
[45:35.520 --> 45:37.520]  искать бинподъемы
[45:37.520 --> 45:39.520]  не для
[45:39.520 --> 45:41.520]  всех вершин.
[45:41.520 --> 45:43.520]  Значит,
[45:45.520 --> 45:47.520]  я утверждаю,
[45:47.520 --> 45:49.520]  что нам...
[45:49.520 --> 45:51.520]  В онлайн?
[45:51.520 --> 45:53.520]  В онлайн.
[45:53.520 --> 45:55.520]  В онлайн, да.
[45:55.520 --> 45:57.520]  Что такое онлайн решение?
[45:57.520 --> 45:59.520]  Значит, на запросы мы должны отмечать онлайн.
[45:59.520 --> 46:01.520]  Все построить мы можем сразу.
[46:01.520 --> 46:03.520]  Я понимаю.
[46:03.520 --> 46:05.520]  Ну да, в оффлай да, в оффлай да.
[46:05.520 --> 46:07.520]  В всякий случай ответим, что в оффлайне мы могли бы запустить
[46:07.520 --> 46:09.520]  DFS, хранить вот путь до каждой вершины
[46:09.520 --> 46:11.520]  просто в стеке, и когда мы приходим в вершину,
[46:11.520 --> 46:13.520]  тогда просто на все ее запросы успешно
[46:13.520 --> 46:15.520]  отвечать.
[46:15.520 --> 46:17.520]  То есть там...
[46:17.520 --> 46:19.520]  Чтобы получить новый запрос, тебе надо
[46:19.520 --> 46:21.520]  отбить на старый, нет?
[46:21.520 --> 46:23.520]  Нет, это называется онлайн.
[46:23.520 --> 46:25.520]  То есть это онлайн? Да. То есть как бы вам дали
[46:25.520 --> 46:27.520]  запрос, вы должны на него прямо сейчас ответить,
[46:27.520 --> 46:29.520]  следующий не дам. То есть как бы
[46:29.520 --> 46:31.520]  ждать, пока полная маршрутка не наберется,
[46:31.520 --> 46:33.520]  значит, мы не можем.
[46:33.520 --> 46:35.520]  Мы можем читать бинподъемы длиной больше, чем
[46:35.520 --> 46:37.520]  на наибольший путь вниз?
[46:39.520 --> 46:41.520]  Нет, ну нет.
[46:45.520 --> 46:47.520]  Да, нет.
[46:47.520 --> 46:49.520]  Мы сделаем...
[46:49.520 --> 46:51.520]  Смотрите, нет, ребят,
[46:51.520 --> 46:53.520]  тут еще круче.
[46:53.520 --> 46:55.520]  Мы сделаем такую неожиданную оптимизацию.
[46:55.520 --> 46:57.520]  Мы будем считать
[46:57.520 --> 46:59.520]  бинподъемы только
[46:59.520 --> 47:01.520]  для листов.
[47:05.520 --> 47:07.520]  Да, вот тут мощность начинается.
[47:07.520 --> 47:09.520]  Да.
[47:13.520 --> 47:15.520]  Ну что ты, господи, я уже...
[47:15.520 --> 47:17.520]  Уверен?
[47:17.520 --> 47:19.520]  По первым комментариям выскакал
[47:19.520 --> 47:21.520]  в тень кофе, не рассказывай.
[47:23.520 --> 47:25.520]  А, какая-то девочка
[47:25.520 --> 47:27.520]  на всеросе?
[47:27.520 --> 47:29.520]  Какая-то длинная цепочка, да.
[47:29.520 --> 47:31.520]  Ну окей, ну смотри, да.
[47:31.520 --> 47:33.520]  А тогда... Нет, просто да, это
[47:33.520 --> 47:35.520]  вроде в программу... Ну хотя нет,
[47:35.520 --> 47:37.520]  на самом деле, не совсем.
[47:37.520 --> 47:39.520]  На самом деле, насколько я понял,
[47:39.520 --> 47:41.520]  я тут как раз пообщался с преподавателем,
[47:41.520 --> 47:43.520]  который там подобные вещи рассказывает,
[47:43.520 --> 47:45.520]  ну просто приятно с теской пообщаться, правда.
[47:49.520 --> 47:51.520]  Ну вот, насколько я понял, там у него,
[47:51.520 --> 47:53.520]  по-моему, алгоритм в этом месте
[47:53.520 --> 47:55.520]  и заканчивается.
[47:55.520 --> 47:57.520]  В принципе, для олимпиадных
[47:57.520 --> 47:59.520]  целей дальнейший упихон уже не нужен.
[47:59.520 --> 48:01.520]  Ну вот.
[48:01.520 --> 48:03.520]  Ну я не знаю там...
[48:03.520 --> 48:05.520]  Ну я не знаю, просто там, по-моему,
[48:05.520 --> 48:07.520]  можно ли действительно там создать задачу, в которой
[48:07.520 --> 48:09.520]  вот действительно N log N заходить не будет,
[48:09.520 --> 48:11.520]  а O от N будет.
[48:11.520 --> 48:13.520]  Сейчас вы увидите,
[48:13.520 --> 48:15.520]  почему. Ну вот, действительно.
[48:15.520 --> 48:17.520]  Но на самом деле, ладно, Тихон, в принципе, правильно
[48:17.520 --> 48:19.520]  сказал, что на самом деле, заметим, что
[48:19.520 --> 48:21.520]  для каждой...
[48:21.520 --> 48:23.520]  Ну, во-первых, что для каждой вершины
[48:23.520 --> 48:25.520]  можно сохранить какой-нибудь
[48:25.520 --> 48:27.520]  лист из ее поддерева.
[48:27.520 --> 48:29.520]  Вот просто первой попавшейся какой-нибудь.
[48:29.520 --> 48:31.520]  Тупо рандомный.
[48:31.520 --> 48:33.520]  Ну, можно даже не рандомный,
[48:33.520 --> 48:35.520]  мы и так в принципе там
[48:35.520 --> 48:37.520]  самый глубокий лист уже даже находили,
[48:37.520 --> 48:39.520]  поэтому там даже это не сильно страшно.
[48:39.520 --> 48:41.520]  Мы все еще насчитываем LD.
[48:41.520 --> 48:43.520]  LD мы не трогаем, но LD у нас
[48:43.520 --> 48:45.520]  из олинию насчитывается.
[48:45.520 --> 48:47.520]  А бинподъемы мы будем насчитывать
[48:47.520 --> 48:49.520]  только... То есть, например, для каждой вершины
[48:49.520 --> 48:51.520]  мы храним лист
[48:51.520 --> 48:53.520]  из ее поддерева, да?
[48:53.520 --> 48:55.520]  Да, какой-то. И храним
[48:55.520 --> 48:57.520]  и бинподъемы храним только из него.
[48:57.520 --> 48:59.520]  Из него храним все бинподъемы.
[48:59.520 --> 49:01.520]  Из него это из кого? Из этого листа.
[49:01.520 --> 49:03.520]  Из листа, хорошо. То есть, это
[49:03.520 --> 49:05.520]  нам даст... То есть, это
[49:05.520 --> 49:07.520]  все еще сохранит нам
[49:07.520 --> 49:09.520]  от единицы.
[49:09.520 --> 49:11.520]  Стоп, секунду, почему...
[49:11.520 --> 49:13.520]  Мы же для всех листов насчитываем
[49:13.520 --> 49:15.520]  бинподъемы или нет? Для всех.
[49:15.520 --> 49:17.520]  А почему тогда это будет лошадь?
[49:17.520 --> 49:19.520]  Ответ. А не почему.
[49:19.520 --> 49:21.520]  Все в порядке.
[49:21.520 --> 49:23.520]  Не пугайтесь, пожалуйста.
[49:23.520 --> 49:25.520]  Значит, все... Нет, просто это
[49:25.520 --> 49:27.520]  чуть-чуть оптимизирует константу.
[49:27.520 --> 49:29.520]  Потому что вы бинподъемы теперь
[49:29.520 --> 49:31.520]  и для всех вершин будете искать, а только для листов.
[49:31.520 --> 49:33.520]  Правда, скорее всего, листов
[49:33.520 --> 49:35.520]  может быть тоже ОАТН.
[49:35.520 --> 49:37.520]  Я вам... А, ну я...
[49:37.520 --> 49:39.520]  Ну вот, может быть, ОАТН.
[49:39.520 --> 49:41.520]  Более того, там чаще всего
[49:41.520 --> 49:43.520]  их хотя бы Н пополам-то, наверное, добует.
[49:43.520 --> 49:45.520]  Ну, например, если у вас
[49:45.520 --> 49:47.520]  в каждой вершине обязательно либо лист,
[49:47.520 --> 49:49.520]  либо развилка, то тогда листов хотя бы
[49:49.520 --> 49:51.520]  Н пополам. Ну и там вот
[49:51.520 --> 49:53.520]  вот, ладно, всякие эти уже мелочи.
[49:53.520 --> 49:55.520]  Ну да, если бинарные,
[49:55.520 --> 49:57.520]  ну не важно.
[49:57.520 --> 49:59.520]  Пока Н лог Н. Хотя, но пока
[49:59.520 --> 50:01.520]  интерес в следующем.
[50:01.520 --> 50:03.520]  Потому что на самом деле
[50:03.520 --> 50:05.520]  возникает еще вопрос,
[50:05.520 --> 50:07.520]  а как мы насчитаем двоичные подъемы?
[50:07.520 --> 50:09.520]  Нет. Нет, отвечать...
[50:09.520 --> 50:11.520]  Нет, отвечать... Смотрите,
[50:11.520 --> 50:13.520]  эта идея очень простая.
[50:13.520 --> 50:15.520]  Вы хотим подняться из вершины В
[50:15.520 --> 50:17.520]  на высоту L.
[50:17.520 --> 50:19.520]  Я знаю, мы знаем,
[50:19.520 --> 50:21.520]  что у вершины В
[50:21.520 --> 50:23.520]  есть лист В штрих.
[50:23.520 --> 50:25.520]  Лист, да, который
[50:25.520 --> 50:27.520]  находящийся... Ну вот.
[50:27.520 --> 50:29.520]  Тогда идея такая... Да, любой.
[50:29.520 --> 50:31.520]  Первый попал. Но мы его сохранили уже, да?
[50:31.520 --> 50:33.520]  Поэтому мы на него...
[50:33.520 --> 50:35.520]  Поэтому идея такая, вместо того, чтобы подниматься на высоту L
[50:35.520 --> 50:37.520]  из вершины В, мы должны подняться
[50:37.520 --> 50:39.520]  из этого листа на высоту
[50:39.520 --> 50:41.520]  L плюс, ну там, какое расстояние
[50:41.520 --> 50:43.520]  между ними.
[50:43.520 --> 50:45.520]  То есть, по сути, это называется,
[50:45.520 --> 50:47.520]  мы немножко тут это, вылили воду из чайника
[50:47.520 --> 50:49.520]  и свели задачу к подъему из листов.
[50:53.520 --> 50:55.520]  Ну да, мы буквально, буквально, да.
[51:01.520 --> 51:03.520]  Так оригинальный анекдот же
[51:03.520 --> 51:05.520]  о том же самом, разве нет?
[51:05.520 --> 51:07.520]  Ну вот.
[51:07.520 --> 51:09.520]  Ну, то есть, как бы, да, Федя, да,
[51:09.520 --> 51:11.520]  типа зада... Ну, там же оригинальный анекдот,
[51:11.520 --> 51:13.520]  как бы звучал. То есть,
[51:13.520 --> 51:15.520]  задача. У вас есть в кухне
[51:15.520 --> 51:17.520]  вода, газ и чайник. Задача
[51:17.520 --> 51:19.520]  вскипятить чайник. Значит, решение
[51:19.520 --> 51:21.520]  и задача у физика и математика одинаковые.
[51:21.520 --> 51:23.520]  Берем чайник, ну вот,
[51:23.520 --> 51:25.520]  собственно, наливаем воду, включаем газ,
[51:25.520 --> 51:27.520]  ставим. Ну вот, все нормально.
[51:27.520 --> 51:29.520]  Теперь, задача номер два.
[51:29.520 --> 51:31.520]  Значит, чайник наполнен, газ
[51:31.520 --> 51:33.520]  зажжен, вскипятить воду.
[51:33.520 --> 51:35.520]  Да? Решение физика.
[51:35.520 --> 51:37.520]  Ставим чайник на газ и, в общем-то, все.
[51:37.520 --> 51:39.520]  Решение математикам.
[51:39.520 --> 51:41.520]  Гасим газ, выливаем воду из чайника,
[51:41.520 --> 51:43.520]  задача свидетакт предыдущий.
[51:43.520 --> 51:45.520]  Ну вот.
[51:45.520 --> 51:47.520]  Да, то есть, вот классический
[51:47.520 --> 51:49.520]  анекдот так звучит.
[51:49.520 --> 51:51.520]  Вот. Соответственно.
[51:51.520 --> 51:53.520]  Ну, то есть, да, видимо,
[51:53.520 --> 51:55.520]  это, возможно, тот самый математик,
[51:55.520 --> 51:57.520]  который, если у вас в коридоре
[51:57.520 --> 51:59.520]  пожар, вы выскакиваете, видите огнетушитель,
[51:59.520 --> 52:01.520]  понимаете, что решение существует и идете спать дальше.
[52:03.520 --> 52:05.520]  Да, те
[52:05.520 --> 52:07.520]  же самые математики.
[52:09.520 --> 52:11.520]  Ну, нет, не путайте
[52:11.520 --> 52:13.520]  в пожарную сигнализацию. Там ситуация, когда вы реально
[52:13.520 --> 52:15.520]  понимаете, что пожар.
[52:15.520 --> 52:17.520]  Ну, там каре воняет, там огонь в окне.
[52:17.520 --> 52:19.520]  Да, вы видите.
[52:19.520 --> 52:21.520]  Нет, ну да.
[52:21.520 --> 52:23.520]  Главное, там огнетушитель висит.
[52:23.520 --> 52:25.520]  Хотя нет, хотя нет.
[52:25.520 --> 52:27.520]  Если там до него пути нет, тогда вы начинаете думать
[52:27.520 --> 52:29.520]  и, возможно, спасетесь.
[52:29.520 --> 52:31.520]  Ну да, хорошо.
[52:31.520 --> 52:33.520]  Так вот.
[52:33.520 --> 52:35.520]  Ладно, идем дальше.
[52:35.520 --> 52:37.520]  Так что подымаемся только из листа.
[52:37.520 --> 52:39.520]  Все хорошо.
[52:39.520 --> 52:41.520]  Подымаемся только из листов.
[52:41.520 --> 52:43.520]  Правда, возникает маленький вопрос.
[52:43.520 --> 52:45.520]  Как насчитать двоичные подъемы из листов?
[52:45.520 --> 52:47.520]  Ну да,
[52:47.520 --> 52:49.520]  то есть на самом деле,
[52:49.520 --> 52:51.520]  то есть,
[52:51.520 --> 52:53.520]  да, то есть заметим, что раньше мы двоичные подъемы
[52:53.520 --> 52:55.520]  насчитывали,
[52:55.520 --> 52:57.520]  используя двоичные подъемы для предков.
[52:57.520 --> 52:59.520]  Но сейчас в этом нет необходимости.
[52:59.520 --> 53:01.520]  Потому что мы сначала мы поднимаемся
[53:01.520 --> 53:03.520]  и берем лист, поднимаемся на высоту 1.
[53:03.520 --> 53:05.520]  Это мы за вот единицы сделали.
[53:05.520 --> 53:07.520]  Теперь, как подняться
[53:07.520 --> 53:09.520]  на высоту 2?
[53:09.520 --> 53:11.520]  Ну ладно, то есть еще на 1.
[53:11.520 --> 53:13.520]  Теперь, как отсюда подняться, еще вот скатнуть на 2 вперед?
[53:13.520 --> 53:15.520]  По ледер декомпозициону.
[53:15.520 --> 53:17.520]  Потому что в ледер декомпозиционе мы можем подняться на 2,
[53:17.520 --> 53:19.520]  потому что глубина его под дерево хотя бы 2.
[53:19.520 --> 53:21.520]  Ну вот.
[53:21.520 --> 53:23.520]  То есть тот же самый ледер декомпозицион.
[53:23.520 --> 53:25.520]  Очень удобно.
[53:25.520 --> 53:27.520]  Вот.
[53:27.520 --> 53:29.520]  То есть поэтому вот ледер декомпозицион дает такую возможность.
[53:31.520 --> 53:33.520]  Вот.
[53:33.520 --> 53:35.520]  Но теперь возникает вопрос. К сожалению,
[53:35.520 --> 53:37.520]  листов у нас...
[53:47.520 --> 53:49.520]  Ну с одной стороны да, но с другой стороны тут проблема в том,
[53:49.520 --> 53:51.520]  что скорее всего нам понадобится каждый лист.
[53:51.520 --> 53:53.520]  Ну там достаточно
[53:53.520 --> 53:55.520]  легко придумать.
[53:55.520 --> 53:57.520]  Потому что, смотрите, если у вас там дерево будет
[53:57.520 --> 53:59.520]  выглядеть как-то вот так,
[54:01.520 --> 54:03.520]  то как бы это все равно не поможет.
[54:03.520 --> 54:05.520]  Вот.
[54:05.520 --> 54:07.520]  Но теперь возникает такая идея.
[54:07.520 --> 54:09.520]  Значит...
[54:09.520 --> 54:11.520]  В таком дереве листов мало.
[54:11.520 --> 54:13.520]  Но это пополам.
[54:13.520 --> 54:15.520]  Вот в таком.
[54:15.520 --> 54:17.520]  Ну это если оно тут двоичное,
[54:17.520 --> 54:19.520]  потому что если оно там будет...
[54:19.520 --> 54:21.520]  Потому что понятно, что есть какой-нибудь классический пример в духе там...
[54:23.520 --> 54:25.520]  А тогда там не нужен каждый лист.
[54:25.520 --> 54:27.520]  Не совсем.
[54:27.520 --> 54:29.520]  Не нужен. То-то оно что нужно.
[54:29.520 --> 54:31.520]  Смотрите. Для каждой вершины
[54:31.520 --> 54:33.520]  вот этой.
[54:33.520 --> 54:35.520]  Да. То есть там понятно дальше.
[54:35.520 --> 54:37.520]  То есть конкретные случаи
[54:37.520 --> 54:39.520]  там могут как-то подгоняться.
[54:39.520 --> 54:41.520]  Как это?
[54:41.520 --> 54:43.520]  Свидетели, да.
[54:43.520 --> 54:45.520]  Свидетели секты фингер 3 даже этим
[54:45.520 --> 54:47.520]  начинают там это изобретать свои деревья.
[54:47.520 --> 54:49.520]  Ну да.
[54:49.520 --> 54:51.520]  Ну и помните, я вам зачитывал тогда, когда вы сплей дерева
[54:51.520 --> 54:53.520]  обсуждали. То есть зачем оно было надо.
[54:53.520 --> 54:55.520]  То есть там просто что было куча деревьев
[54:55.520 --> 54:57.520]  под конкретные случаи. И вот тут
[54:57.520 --> 54:59.520]  сплей дерево на самом деле одним махом покрыло всех.
[54:59.520 --> 55:01.520]  То есть главное только это
[55:01.520 --> 55:03.520]  стать свидетелем это...
[55:03.520 --> 55:05.520]  Да.
[55:05.520 --> 55:07.520]  Свидетелем амультизации.
[55:07.520 --> 55:09.520]  Вот. И главное стать
[55:09.520 --> 55:11.520]  и в общем-то нас устроить. Так вот.
[55:11.520 --> 55:13.520]  Любой запрос за сплей.
[55:13.520 --> 55:15.520]  Ну да.
[55:15.520 --> 55:17.520]  Ну а что? Удобно.
[55:17.520 --> 55:19.520]  Так. Нет. Ну душу не надо.
[55:19.520 --> 55:21.520]  Зачем?
[55:21.520 --> 55:23.520]  Как это называется? Зачем душа, когда
[55:23.520 --> 55:25.520]  и спл...
[55:25.520 --> 55:27.520]  Так вот.
[55:27.520 --> 55:29.520]  Так вот.
[55:29.520 --> 55:31.520]  Значит как делать n log n?
[55:31.520 --> 55:33.520]  Очень просто. В чем
[55:33.520 --> 55:35.520]  заключается метод четырех русских?
[55:35.520 --> 55:37.520]  Нет.
[55:37.520 --> 55:39.520]  Сейчас мы не будем...
[55:39.520 --> 55:41.520]  Да, раньше мы отвечали на этот запрос в духе
[55:41.520 --> 55:43.520]  зафиксируем k, который выберем
[55:43.520 --> 55:45.520]  позже.
[55:45.520 --> 55:47.520]  Сейчас мы пойдем с другой стороны.
[55:47.520 --> 55:49.520]  Мы думаем, так вот
[55:49.520 --> 55:51.520]  нам надо n log n сократить
[55:51.520 --> 55:53.520]  за уатн. Как это сделать?
[55:53.520 --> 55:55.520]  Очень просто. Откуда у нас n
[55:55.520 --> 55:57.520]  сократится?
[55:57.520 --> 55:59.520]  Количество листов.
[55:59.520 --> 56:01.520]  А давайте сделаем так,
[56:01.520 --> 56:03.520]  чтобы количество листов было
[56:03.520 --> 56:05.520]  n поделить на log n.
[56:05.520 --> 56:07.520]  Вот все очень просто.
[56:07.520 --> 56:09.520]  Вот заметим, что если в дереве у вас
[56:09.520 --> 56:11.520]  уже там количество листов не происходит
[56:11.520 --> 56:13.520]  n поделить на log n, вот вам повезло
[56:13.520 --> 56:15.520]  как-то, да, то в принципе вы уже
[56:15.520 --> 56:17.520]  победили.
[56:17.520 --> 56:19.520]  То есть на самом деле, вот да, тут на самом деле
[56:19.520 --> 56:21.520]  правильно написать не n log n,
[56:21.520 --> 56:23.520]  а
[56:23.520 --> 56:25.520]  l sts.
[56:25.520 --> 56:27.520]  Чего?
[56:27.520 --> 56:29.520]  Что за...
[56:29.520 --> 56:31.520]  Ладно, да, это неправильно. Это не тот лист, да.
[56:31.520 --> 56:33.520]  У меня вообще более выдуманная идея,
[56:33.520 --> 56:35.520]  потому что давайте листы какие-нибудь
[56:35.520 --> 56:37.520]  превратим в 1,
[56:37.520 --> 56:39.520]  слиним, на комтеромик, посмотри.
[56:39.520 --> 56:41.520]  Нет, все еще круче.
[56:43.520 --> 56:45.520]  Нет, значится... Смотрите,
[56:45.520 --> 56:47.520]  что будет.
[56:47.520 --> 56:49.520]  Значит, я...
[56:49.520 --> 56:51.520]  Давайте я вот для понятности...
[56:51.520 --> 56:53.520]  Значит, веду такое. Значит, пусть у меня
[56:53.520 --> 56:55.520]  будет констант c,
[56:55.520 --> 56:57.520]  которая будет
[56:57.520 --> 56:59.520]  log 2 n.
[56:59.520 --> 57:01.520]  Ну, допустим, да.
[57:05.520 --> 57:07.520]  Ну, да, она же...
[57:07.520 --> 57:09.520]  А, boobin, точно вспомнил.
[57:09.520 --> 57:11.520]  Давайте boobin.
[57:11.520 --> 57:13.520]  Выгните boobin.
[57:13.520 --> 57:15.520]  Вот он.
[57:17.520 --> 57:19.520]  Значит,
[57:19.520 --> 57:21.520]  значит, смотрите тут,
[57:21.520 --> 57:23.520]  какая ситуация будет.
[57:23.520 --> 57:25.520]  Ну, тут мы сразу
[57:25.520 --> 57:27.520]  спалили, к чему нам нужен boobin.
[57:27.520 --> 57:29.520]  Ну, в случае чего, как бы там...
[57:29.520 --> 57:31.520]  Если бы тем же методом искали, делали это rmq,
[57:31.520 --> 57:33.520]  то у нас кончилось бы тем, что в конце у нас boobin,
[57:33.520 --> 57:35.520]  мы бы этот boobin пополам поделили.
[57:37.520 --> 57:39.520]  Ну, скажем так,
[57:39.520 --> 57:41.520]  а давайте это...
[57:41.520 --> 57:43.520]  Не будем угадывать концовку, а просто посмотрим
[57:43.520 --> 57:45.520]  спокойный фильм.
[57:45.520 --> 57:47.520]  Потому что
[57:47.520 --> 57:49.520]  да, мы имеем в виду, что мы можем его умножить
[57:49.520 --> 57:51.520]  на два, поделить на два, там поделить
[57:51.520 --> 57:53.520]  на 57, пожалуйста.
[57:53.520 --> 57:55.520]  Но, значит, смотрите,
[57:55.520 --> 57:57.520]  boobin. Значит, что
[57:57.520 --> 57:59.520]  мы с этим boobin будем делать?
[58:01.520 --> 58:03.520]  Вот, значит, смотрите,
[58:03.520 --> 58:05.520]  идея будет следующая.
[58:07.520 --> 58:09.520]  Идея будет такая.
[58:09.520 --> 58:11.520]  А давайте попробуем.
[58:11.520 --> 58:13.520]  Ну, основная идея будет такая.
[58:13.520 --> 58:15.520]  Давайте возьмем наше дерево.
[58:17.520 --> 58:19.520]  Вот.
[58:19.520 --> 58:21.520]  Значит, у нас есть
[58:21.520 --> 58:23.520]  вот какое-то дерево.
[58:23.520 --> 58:25.520]  Значит, сейчас я скажу вот такую приблизительную
[58:25.520 --> 58:27.520]  идею. Это как бы не формальная идея,
[58:27.520 --> 58:29.520]  а в какую сторону думать.
[58:29.520 --> 58:31.520]  А думать в следующую. Мы
[58:31.520 --> 58:33.520]  понаходим тут всякие вершины,
[58:33.520 --> 58:35.520]  у которых
[58:35.520 --> 58:37.520]  размер под дерево
[58:37.520 --> 58:39.520]  будет приблизительно c.
[58:41.520 --> 58:43.520]  Размер?
[58:43.520 --> 58:45.520]  Да, размер под дерево. Вот, смотрите, вот допустим,
[58:45.520 --> 58:47.520]  мы тут...
[58:47.520 --> 58:49.520]  Ну да, вот будем...
[58:49.520 --> 58:51.520]  Ну, пример, да.
[58:51.520 --> 58:53.520]  Ну, там что-то типа там
[58:53.520 --> 58:55.520]  более формально от boobin поделить
[58:55.520 --> 58:57.520]  на два, да, там, скажем,
[58:57.520 --> 58:59.520]  двух booblof, например.
[59:01.520 --> 59:03.520]  Но тем не менее,
[59:03.520 --> 59:05.520]  я сейчас говорю идею, а потом мы сейчас будем думать,
[59:05.520 --> 59:07.520]  как ее допиливать.
[59:07.520 --> 59:09.520]  Сейчас будем придумывать, смотрите.
[59:11.520 --> 59:13.520]  Вот допустим, мы нашли
[59:15.520 --> 59:17.520]  то есть, нашли вот действительно
[59:17.520 --> 59:19.520]  такие деревья.
[59:19.520 --> 59:21.520]  Вот. То есть,
[59:21.520 --> 59:23.520]  вот по, допустим, находили
[59:23.520 --> 59:25.520]  такие вот деревья.
[59:25.520 --> 59:27.520]  Вот. То есть, допустим,
[59:27.520 --> 59:29.520]  вот примерно boobin. Вот.
[59:29.520 --> 59:31.520]  Ну да, вот здесь нам не очень повезло,
[59:31.520 --> 59:33.520]  но если мы вот... То есть, если нам
[59:33.520 --> 59:35.520]  удастся сделать так,
[59:35.520 --> 59:37.520]  что у нас как бы получается
[59:37.520 --> 59:39.520]  любой путь из корня
[59:39.520 --> 59:41.520]  будет упираться в какой-то вот такой,
[59:41.520 --> 59:43.520]  так сказать, металлист размера boobin,
[59:45.520 --> 59:47.520]  вот.
[59:47.520 --> 59:49.520]  Металлист,
[59:49.520 --> 59:51.520]  металлист размера boobin.
[59:51.520 --> 59:53.520]  Можно
[59:53.520 --> 59:55.520]  под деревья собираем? То есть,
[59:55.520 --> 59:57.520]  просто откуда-то от листов собираемся? Да.
[59:57.520 --> 59:59.520]  Но пока не понятно, но смотрите.
[59:59.520 --> 01:00:01.520]  Я хочу понять, пока что
[01:00:01.520 --> 01:00:03.520]  не сказали. Значит, пока я не сказал,
[01:00:03.520 --> 01:00:05.520]  мечта, значит, еще раз.
[01:00:05.520 --> 01:00:07.520]  Мечта, значит, я хочу,
[01:00:07.520 --> 01:00:09.520]  чтобы у меня
[01:00:09.520 --> 01:00:11.520]  модифицировать немножко дерева,
[01:00:11.520 --> 01:00:13.520]  так, чтобы у меня
[01:00:13.520 --> 01:00:15.520]  дерева, то есть, как бы просто
[01:00:15.520 --> 01:00:17.520]  вот,
[01:00:17.520 --> 01:00:19.520]  то есть, на дереве появились вот такие метавершины,
[01:00:19.520 --> 01:00:21.520]  то есть, как бы,
[01:00:21.520 --> 01:00:23.520]  но да, то есть, на самом деле, то есть, я хочу, чтобы у меня
[01:00:23.520 --> 01:00:25.520]  вот было дерево, а я бы хотел, чтобы оно вот было
[01:00:25.520 --> 01:00:27.520]  как бы дерево, дерево, дерево, все хорошо, хорошо,
[01:00:27.520 --> 01:00:29.520]  только везде теперь
[01:00:29.520 --> 01:00:31.520]  только все
[01:00:31.520 --> 01:00:33.520]  листы это вот такие типа жирные,
[01:00:33.520 --> 01:00:35.520]  типа жирные
[01:00:35.520 --> 01:00:37.520]  и мы имеем ввиду что на самом деле
[01:00:37.520 --> 01:00:39.520]  в них есть поддерево, причем не просто
[01:00:39.520 --> 01:00:41.520]  поддерево, а
[01:00:41.520 --> 01:00:52.960]  высотой не будет нет хуже размера да размера не более бубен ну да да но да нет нам нет нам
[01:00:52.960 --> 01:00:59.040]  важен сейчас размер вот вот сейчас вот размер это принципиально
[01:00:59.040 --> 01:01:12.320]  да примерно будем ну в идеале это вот допустим в идеале допустим вот там скажем от бубен
[01:01:12.320 --> 01:01:25.840]  пополам до там допустим два бубен вот вот от бубен пополам до двух бубнов тогда смотрите
[01:01:25.840 --> 01:01:33.000]  какая какая у нас идея тогда возникает тогда у нас все но вот тогда у нас как как и часто
[01:01:33.000 --> 01:01:41.440]  бывает методик четырех русских запроса разделятся на две нот на два типа на собственно на большие
[01:01:41.440 --> 01:01:46.360]  запросы и маленькие в нашем случае это будет что вот у нас есть вот тут в какой-нибудь вершине вот
[01:01:46.360 --> 01:01:52.040]  допустим тут есть какое-то под дерево да и мы можем сказать ведь смотрите ведь для каждой из
[01:01:52.040 --> 01:02:01.160]  этих вершин мы можем предпочитать кто корень ее мета вершины правда с одной стороны но тогда
[01:02:01.160 --> 01:02:08.480]  получается если мы точно будем знать что наш этот значит наш этот предок он будет точно он или
[01:02:08.480 --> 01:02:14.040]  выше то тогда понятно что мы просто там вычитаем соответствующую там расстояние и тогда сводим
[01:02:14.040 --> 01:02:19.600]  задачу к тому чтобы вот просто из мета вершины подняться вот в этом дереве зачем мы это сделали
[01:02:19.600 --> 01:02:25.400]  а сделали мы это затем что заметим что количество листов таком дереве стало менее но стало меньше
[01:02:25.400 --> 01:02:30.960]  в бубен раз правда но потому что каждому мета вершине соответствует хотя бы бубен листов значит
[01:02:30.960 --> 01:02:36.160]  листов не более чем это бубен то есть он поделить налога поэтому на конкретно этом дереве вот
[01:02:36.160 --> 01:02:43.560]  сажатыми вот этими вершинами все работает за отто то есть помните идея была та же то есть
[01:02:43.560 --> 01:02:50.160]  фар холтон бендере мы делали то же самое да то есть помните мы там разделили разделили массив
[01:02:50.160 --> 01:02:55.800]  на отрезки длины по логарифму ну ладно логарифму пополам хорошо вот значит на каждом из них
[01:02:55.800 --> 01:03:02.600]  посчитали минимум и на этих минимумах посчитали спар стейбл за н логен вот только там логен
[01:03:02.600 --> 01:03:09.240]  превратился в n поделить налоген умножить налоген поэтому собственно получилось вот маленькая
[01:03:09.240 --> 01:03:15.160]  закавыка которая у нас тогда оставалось это то что запрос может оказаться внутри вот этой вот
[01:03:15.160 --> 01:03:24.080]  сжатой мелочи да маленькая но не вот единица то есть мы конечно то есть нет принципе смотрите
[01:03:24.080 --> 01:03:30.400]  мы можем уже прямо сейчас спрогрессировать мы можем как бы сказать что давайте внутри этого
[01:03:30.400 --> 01:03:38.920]  дерева будем решать задачу с уже имеющий имевшийся ранее у нас технологии нет почему нет но такие
[01:03:38.920 --> 01:03:45.400]  будет но у нас два варианта вот если мы выберем да вот эту технологию там предподсчет за n и
[01:03:45.400 --> 01:03:51.240]  подсчет за логен вот это ледер декомпозицион туда у нас конечно тогда получится предподсчет за
[01:03:51.240 --> 01:04:02.400]  n и значит на запрос мы будем отвечать да за лог лог а элементарь элементарно смотри каждый
[01:04:02.400 --> 01:04:27.320]  каждый лист но у нас у нас любой лист лежит в металлисте но сначала да да нет вопрос как бы
[01:04:28.320 --> 01:04:36.240]  первое что можем сделать это понять что как бы вот если мы поднимемся до корня мета вершины это
[01:04:36.240 --> 01:04:41.280]  больше чем нам надо или меньше чем нам надо это мы можем заранее предпочитать у каждой вершины
[01:04:41.280 --> 01:04:51.480]  корень ее мета вершины и после за вот единицы понять нет в чем вот но если у нас уж если у нас
[01:04:51.480 --> 01:05:00.040]  корни мета вершины зафиксированы дамы еще пока вообще не сказали как это делать ну где-то да так
[01:05:00.040 --> 01:05:10.480]  что где-то да то есть если у нас это уже есть это ближний дфс сработает хотя скорее всего ну мы
[01:05:10.480 --> 01:05:15.440]  пока не знаем как там вот надо думать так что аккуратненько аккуратненько значит поехали
[01:05:15.440 --> 01:05:25.040]  ну вот значит думаем соответственно дальше смотрите какая теперь ситуация возникает хорошо
[01:05:25.040 --> 01:05:29.680]  но теперь вот это вопрос хорошо предположим что мы выяснили что у нас нам надо подниматься из
[01:05:29.680 --> 01:05:36.480]  листа и мы знаем что надо подниматься не до этого корня куда-то ниже ступой вариант это там я не
[01:05:36.480 --> 01:05:41.880]  знаю но то есть тупой вариант это вот воспользоваться ледер декомпозицион и так как у нас
[01:05:41.880 --> 01:05:46.840]  размер тут по дерево видите он не только он в районе бубна то есть на это не превосходит
[01:05:46.840 --> 01:05:56.240]  бубна до на константу то тогда там получится но то получается лог лога вот уже неплохо но
[01:05:56.240 --> 01:06:03.120]  да теперь вспоминаем что у нас говорил в этом месте метод четырех русских да то есть он говорил
[01:06:03.120 --> 01:06:08.680]  так смотрите раз у нас тут есть они деревья настолько маленькие что их в принципе мало то
[01:06:08.760 --> 01:06:13.360]  скорее всего на самом деле среди этих деревьев будут будет встречаться куча одинаковых
[01:06:13.360 --> 01:06:23.200]  поэтому идея такая а давайте переберем все деревья вот вообще все деревья высоты не более
[01:06:23.200 --> 01:06:35.400]  чем логарифа чего колея все вершины количество да размера да переберем все деревья размера не
[01:06:35.400 --> 01:06:49.880]  более чем логарифом и ура а вот давайте посчитать вот давай вот для этого нет смотрите нет не
[01:06:49.880 --> 01:06:57.640]  совсем тут какая ситуация произвольная значит да есть формула к или там n в степени минус 2 но
[01:06:57.640 --> 01:07:03.160]  это но это типа данные н вершин построить и на них различные деревья чем деревья будем считать
[01:07:03.160 --> 01:07:20.400]  различными если там тупо разные наборы и нам плевать на изоморфизм но вот мы пока этого не
[01:07:20.400 --> 01:07:26.360]  знаем да пока да то есть на самом деле да действительно по моему чем насколько чем меня
[01:07:26.920 --> 01:07:38.240]  в конспекте этот момент как-то немножко до права лучше но на солнышке ну так если вам сейчас
[01:07:38.240 --> 01:07:43.200]  интересно подумать на эту тему на солнышке будет так то есть у нас будет так что там то есть вот
[01:07:43.200 --> 01:07:48.440]  это то есть нас будет интересовать что листы могут быть маленькие но самое главное о чем нам
[01:07:48.440 --> 01:07:53.720]  надо думать это то чтобы их родитель чтобы у родителя у каждого у каждого родителя вот подобные
[01:07:53.720 --> 01:08:03.960]  вершины было там достаточно большое число векшин в подделье вот что нас будет интересовать вот так
[01:08:03.960 --> 01:08:17.920]  что такая идея вот значит значится значится значится нет вот именно сейчас мы переходим
[01:08:17.920 --> 01:08:22.720]  к этому для этого нам надо было посчитать а сколько у нас деревьев ну и хотя бы как-то
[01:08:22.720 --> 01:08:28.040]  адекватно оценить сколько у нас деревьев если нам в некотором смысле там если на изоморфные
[01:08:28.040 --> 01:08:34.800]  деревья мы хотим считать одинаковыми значит смотрите значит я предлагаю начать предлагайте
[01:08:34.800 --> 01:08:40.600]  сделать следующее и вот опять мы воспользуемся идеи которые мы уже использовали собственно когда
[01:08:40.600 --> 01:08:47.760]  сводили л цакоромку то есть помните как мы то есть замену помните что мы там делали мы запускаем
[01:08:48.360 --> 01:08:53.120]  и запи и каждую вершину каждый раз когда мы видим вершину мы записываем ее глубину в чем видим
[01:08:53.120 --> 01:08:57.800]  в чем когда просто как видим так и записываем неважно мы пришли в нее сверху или снизу помните
[01:08:57.800 --> 01:09:06.880]  да а вот а нет у нас был такой вот давайте я напомню вот смотрите вот я вот в данном случае он
[01:09:06.880 --> 01:09:14.040]  будет такой значит вот мы идем до фесом и пишем глубины которые мы видим и получается 0 идем
[01:09:14.040 --> 01:09:30.120]  сюда 1 идем сюда 2 возвращаемся сюда 1 идем сюда 2 возвращаемся до 1 возвращаемся сюда 2 3 2 3 2 1 0 1 2 3 2 1 0 вот
[01:09:30.120 --> 01:09:36.920]  но в данном случае его просто привести вот ну и можно там и для каждой вершины в принципе и
[01:09:36.920 --> 01:09:44.600]  можно даже еще и для каждой вершины сохранить а где мы в ней были вообще ну можно можно одно
[01:09:44.600 --> 01:09:53.000]  вхождение даже сделать неважно важно другое значит размер этого веселого массива 2 и минус 1
[01:09:53.000 --> 01:10:01.400]  если точнее но вот но судя симпатически суть 1 да потому что 1 1 вот это в том дальше каждый
[01:10:01.400 --> 01:10:14.600]  раз проходимся по ребру записываем вершину реберен минус 1 да но это мелочь значит понятно
[01:10:14.600 --> 01:10:24.760]  что до размера размер отн значит там тетатен даже и что теперь давайте смотреть что нам это дает дает
[01:10:24.760 --> 01:10:31.000]  нам это следующее ну а первых заметим что этот конкретно то есть помните то есть на самом деле
[01:10:31.000 --> 01:10:35.760]  помним мы сильно пользовались тем что каждое следующее число отличается от предыдущего на
[01:10:35.760 --> 01:10:46.560]  1 или минус 1 то есть его можно так и написать то есть 1 1 минус 1 там 1 минус 1 1 1 минус 1 1
[01:10:46.560 --> 01:11:01.920]  минус 1 минус 1 минус 1 1 1 1 1 минус 1 минус 1 минус 1 но я боюсь это не цшка а зачем нам
[01:11:01.920 --> 01:11:12.800]  глубина нам нам так вот в этом месте выясняется что мы можем даже так не заморачиваться потому
[01:11:12.800 --> 01:11:18.880]  что нас уже устроит то что если нас интересует сколько у нас существует деревьев деревьев размера
[01:11:18.880 --> 01:11:28.200]  сз то я отражаю что если у нас размер сз то количество деревьев внимание не превосходит
[01:11:28.200 --> 01:11:33.400]  ну получается 2 в степени 2 сз
[01:11:33.400 --> 01:11:53.640]  но вот да именно да да нет так-то такой я такую фигу в кармане я естественно в виду имел вот
[01:11:53.640 --> 01:12:09.760]  я нет это бубнение не от слова будем вот значит то есть получить вот это вот
[01:12:09.760 --> 01:12:24.880]  ну как он сказать нет если каждый ребро заменить на вот такие вот ребра да вот вот такие вот да
[01:12:24.880 --> 01:12:32.040]  то это получится в этом графе элеров обход в принципе но по большому еще так весьма да это
[01:12:32.040 --> 01:12:41.840]  весьма забавно и так даже элеров цикл ну так вот получается деревьев не сильно много но
[01:12:41.840 --> 01:12:48.640]  правда желательно чтобы размер был видимо не логариф но у нас тут всегда это не проблема то
[01:12:48.640 --> 01:12:55.880]  есть как бы то есть бубен всегда можно поделить там я не знаю на 4 но мы уже помнили о том что
[01:12:56.760 --> 01:13:10.800]  на 4 поделить да вот да но просто идея будет такая но если привод таком бубне да даже я бы сказал
[01:13:10.800 --> 01:13:17.880]  и а вот при таком бубне их даже корень из они обсказал их корень из он что позволяет нам для
[01:13:17.880 --> 01:13:24.520]  как просто значит мы перебираем все возможные коды и для каждого из них ну во-первых проверяем
[01:13:24.520 --> 01:13:31.960]  валидный валидный леон а для валидного ну мы там аккуратненько как-нибудь предпред подсчитываем
[01:13:31.960 --> 01:13:43.440]  ответы для всех вершин прям вот да и их мало поэтому давайте для каждого из них ну просто
[01:13:43.440 --> 01:13:49.200]  как мы это будем делать значит получается значит это не более значит мы это будем
[01:13:49.200 --> 01:13:57.640]  делать 2 в степени 2 на сз и умножить это на ну скажем так смотрите да но дерево размера
[01:13:57.640 --> 01:14:04.560]  сз мы хотим для каждого из них и каждого для каждой вершины в нем и каждого л ну там
[01:14:04.560 --> 01:14:10.920]  неповысходящего естественно сз пред подсчитать соответствующий подъем как это можно сделать ну
[01:14:10.920 --> 01:14:30.800]  да например за квадрат получается там сз в квадрате но симпатически ничего не поменяет да да вот это
[01:14:30.800 --> 01:14:36.960]  вот но это уже такие мелкие детали значит основная суть какая то есть как это всегда если у нас там
[01:14:36.960 --> 01:14:44.840]  2 на сз будет не превосходить там логен пополам то вот эта штука это вот мы уже с этим сталкивались и
[01:14:44.840 --> 01:14:52.320]  мы радуемся вот но тогда получается как-то будет работать то есть все что нам останется это значит
[01:14:52.320 --> 01:14:58.440]  пред подсчитать во первых для каждого кода пред подсчитать ответы а во вторых для каждой мета
[01:14:58.440 --> 01:15:05.120]  вершины заранее пред подсчитать ее код ну и как-то сопоставить вершины в этом под деревья там
[01:15:05.120 --> 01:15:11.120]  соответственно тому чему они там соответствует в коду вот то есть ну то есть после этого тогда
[01:15:11.120 --> 01:15:18.160]  останется собственно за от единицы то есть за от единицы внутри каждого поддерева ответ хранить
[01:15:18.160 --> 01:15:31.520]  значит первое при еще при пред подсчете мы в каждом из этих под деревьев запускаем
[01:15:31.960 --> 01:15:43.000]  вычисляем его код вот этот вот ну в общем-то это практически все что мы делаем ну вот этот
[01:15:43.000 --> 01:15:50.280]  код вычисляем не под код а код код его вот этого dfs обхода поэтому потому что в будущем это
[01:15:50.280 --> 01:15:54.440]  позволит нам если нам выяснить что в этом под деревья надо из этой вершины подняться там на
[01:15:54.440 --> 01:16:01.680]  высоту вот в общем не досюда то вы от поговорите так это вершина имеет вот такой код и мы ну вот
[01:16:01.680 --> 01:16:06.080]  поэтому мы отправимся в дерево с таким кодом для которым у нас уже все пред подсчитано но все
[01:16:06.080 --> 01:16:10.440]  что вам останется это только для каждой вершины конкретно этого поддерева посчитать что вот там
[01:16:10.440 --> 01:16:18.320]  скажем там какой-то общей нумерации какая-то какой оно там номер имеет вот то есть это такая то
[01:16:18.480 --> 01:16:28.480]  да то есть это будет почему за где за логарифом в боре
[01:16:28.480 --> 01:16:40.560]  нет тут ну да нет тут еще будет подозреваться да что как бы какая это как бы вот это эту штуку
[01:16:40.560 --> 01:16:44.800]  мы храним как маску поэтому храним за вот где поэтому мы обращаемся в таблицу за вот единиц
[01:16:44.800 --> 01:16:55.600]  но на самом деле нет тоже как всегда до размер маски у нас логан поделить так четыре поэтому
[01:16:55.600 --> 01:17:01.720]  все нормально но мы как всегда живем в классической модели в которой скорее всего логан то есть скорее
[01:17:01.720 --> 01:17:07.880]  всего там n все-таки меньше либо равно два в степени w то есть да был и все-таки хотя бы логан
[01:17:07.880 --> 01:17:15.080]  поэтому я имею в виду другой я имею в виду что у нас n достаточно маленькая для того чтобы
[01:17:15.080 --> 01:17:21.760]  само число n могло храниться как и битвы и число да напоминаю помните в каком мире мы вообще живем
[01:17:21.760 --> 01:17:32.320]  да то есть нет это как бы это да это не ответ математик вот это успел это ответ там
[01:17:32.320 --> 01:17:42.480]  есть за уставшего от жизни человек вот ой о господи тихон работает пятеречке господи это
[01:17:42.480 --> 01:18:12.480]  совмещается с фистехом как это ну да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да
[01:18:12.480 --> 01:18:21.220]  ну да есть что да и да по trashless такое мы скорее скорее скорее всего это называется тоже
[01:18:21.220 --> 01:18:28.500]  алгоритм и дальше какие-то фамилии 8 люди сейчас не скажу какие вот нет ну понятно есть авторы там
[01:18:28.500 --> 01:18:33.860]  понятно что там какой-то какой-нибудь там вредный френдан тут где-то явно spring хотя а может и не
[01:18:33.860 --> 01:18:41.800]  не знаю кто как чего начитать значит но вот и так значит получается если мы
[01:18:41.800 --> 01:18:47.060]  поверили что мы нашли вот эти как вот правильно сказали микро деревья вот
[01:18:47.060 --> 01:18:49.940]  откуда-то вот поверили
[01:18:50.460 --> 01:18:58.500]  да но при чем-то вообще всех вообще всех
[01:19:04.500 --> 01:19:14.620]  нет сэзэ это не логарифа квадрат сэзэ это логариф даже так ну сайз
[01:19:14.620 --> 01:19:26.140]  а ну хорошо хорошо ну хорошо давайте на 8 поделим если уж так хочется нет
[01:19:26.140 --> 01:19:30.540]  то смотрите ладно сэзэ значит давайте так сэзэ это в худшем случае два бубна то
[01:19:30.540 --> 01:19:35.340]  есть логан на 4 здесь надо вызвать еще на два то есть получается логан пополам
[01:19:35.340 --> 01:19:38.020]  корень добили
[01:19:38.540 --> 01:19:54.060]  да да но корень и зен умножить на чего ну там примерно там два
[01:19:54.060 --> 01:20:00.660]  да нет утверждения да мистическое утверждение корень из-за на логарифом
[01:20:00.660 --> 01:20:12.940]  там в абсолютно любой там степени это вот ну вот так что соответственно но это
[01:20:12.940 --> 01:20:16.420]  вот мистический факт который вы можете доказать там с позициону например правила
[01:20:16.500 --> 01:20:29.540]  вот фамилия такая ну вот нет ну смысле отчего нет вот так нет вам нужно
[01:20:29.540 --> 01:20:38.380]  конечно там будет это бесконечность бесконечность производные вот это вот да
[01:20:38.380 --> 01:20:51.140]  вот давай на маленькие запросы ну смотрите в предподсчете мы для каждого для каждого
[01:20:51.140 --> 01:20:56.060]  для всех возможных микро диреми в котором мы перебираем кодами предпочитали все возможные
[01:20:56.060 --> 01:21:03.380]  ответ под чип предпочитали и сохранили мы даже добились того что это сделано за вот
[01:21:03.500 --> 01:21:12.580]  вот та переча что мы еще сделали за вот для каждого микро
[01:21:12.580 --> 01:21:15.980]  дерево которое тут у нас реально в дереве встретилась вот есть вот микро деревья
[01:21:15.980 --> 01:21:21.380]  вот этого типа да когда просто все возможные да но каждый из этих микро деревьев оно имеет
[01:21:21.380 --> 01:21:27.980]  какой-то конкретный тип и тогда и диетара для каждого из них мы тоже запускаем dfs сохраняем
[01:21:27.980 --> 01:21:37.060]  во первых его код ну и но и но и там сохраняем еще но вот но и сохраняем что там скажем допустим
[01:21:37.060 --> 01:21:41.220]  если мы вот конкретно по коду мы можем восстановить как бы просто как общую
[01:21:41.220 --> 01:21:45.340]  структуру дерева да но как бы какие номера эти вершины имели в каких-то там других деревьях
[01:21:45.340 --> 01:21:49.460]  мы не можем но это не важно потому что мы как бы понятно по каждому коду мы можем вести
[01:21:49.460 --> 01:21:53.860]  какой-то каноническую нумерацию вершин типа вот идем в процессе dfs и при а что это вершина
[01:21:53.860 --> 01:22:06.860]  а это вершина, b это вершина, c это вершина, d это вершина, e там в общем вот в таком фаре, в порядке входа, да, вот, и поэтому тогда вы можете заранее за отn для каждого дерева, то есть предпочитать,
[01:22:06.860 --> 01:22:14.860]  во-первых, найти его код, а во-вторых, установить соответствие между конкретными этими вершинами и собственно вот этими вершинами.
[01:22:15.860 --> 01:22:28.860]  Что это вам позволит сделать? Тогда, когда вы, если выяснится, что у вас есть запрос, который не выходит за пределы какого-то вот этого микро дерева, то тогда получается вы просто, у вас уже есть его код,
[01:22:28.860 --> 01:22:38.860]  вы его за вот единицу просто достаете, для соответствующей вершины вы уже, вы тоже из таблички достаете кто она собственно в канонической номерации,
[01:22:38.860 --> 01:22:43.860]  и потом уже из третьей таблички, собственно из этой вершины заданного вам l, достаете ответ.
[01:22:43.860 --> 01:23:00.860]  Ну то есть по сути вот обращение к трем табличкам, да за подробительным, но трем, за вот единицу, вот и вся технология, вот такой вот, вот такой вот маленький красивый технология.
[01:23:00.860 --> 01:23:28.860]  Нет, мы разбираемся со всем остальным, да, ну да, ну значит вот так, ну вот, так, а вот теперь, на самом деле, да, я тут даже, даже, потому что на самом деле, да, не так, да, не так, на самом деле, это просто уже очень хочется сказать,
[01:23:28.860 --> 01:23:38.860]  что основная еще проблема заключается в том, что на самом деле такие вот прямо в таком виде, как я нарисовал, на самом деле эти штуки не всегда и существуют.
[01:23:38.860 --> 01:23:58.860]  Ну вот, потому что утверждает, что нельзя выделить вот такие вот метавершины так, чтобы вот все там действительно какие-то вот листовые поддеревья действительно сжимались вот именно так.
[01:23:58.860 --> 01:24:05.860]  Потому что есть действительно такой классический пример, именуемый среди мирного населения ежик.
[01:24:05.860 --> 01:24:10.860]  Вот он, он же солнышко там, он же звездочка там.
[01:24:15.860 --> 01:24:16.860]  Что?
[01:24:22.860 --> 01:24:24.860]  Нет, кактус это вообще не дерево.
[01:24:25.860 --> 01:24:26.860]  Да, как это?
[01:24:27.860 --> 01:24:29.860]  Нет, это хорошо, кактус это не дерево.
[01:24:29.860 --> 01:24:40.860]  Точнее так, дерево это кактус, любое дерево это кактус, ну и любой кактус это дерево.
[01:24:43.860 --> 01:24:44.860]  Да, поразительно.
[01:24:45.860 --> 01:24:49.860]  Как это называется, да, если вам человек что-то сказал, либо он сошел с ума, либо он програнист.
[01:24:50.860 --> 01:24:53.860]  Да, эти множества иногда пересекаются, конечно.
[01:24:54.860 --> 01:24:56.860]  Так вот, в чем тут проблема?
[01:24:56.860 --> 01:25:09.860]  Проблема тут в том, что мы можем, к сожалению, если мы, то есть у нас заметим, что мы выделяем, мы пытаемся здесь выделить вот эти микродеревья следующего, то есть как мы их пытаемся?
[01:25:09.860 --> 01:25:16.860]  Ну, в общем случае, вот у нас есть дерево, там какое-то вот это, да, и мы говорим, что вот это корень микродерева, там вот это корень микродерева,
[01:25:16.860 --> 01:25:27.860]  мы выделяем несколько корней так, чтобы каждый лист был потомком какого-то вот, какой-то выделенной вершины, и при этом эти выделенные вершины желательно никто из них ничьим там предком потомком не являлся.
[01:25:28.860 --> 01:25:29.860]  Хотелось бы, да?
[01:25:32.860 --> 01:25:33.860]  Что-что?
[01:25:35.860 --> 01:25:36.860]  Ну сейчас подумаем, что с этим делать.
[01:25:37.860 --> 01:25:42.860]  Ну просто нет, если мы разрешим пересекаться, то тогда мы не сможем доказать, что их Н поделить налогом.
[01:25:42.860 --> 01:25:48.860]  Помните, как мы доказывали, что, то есть у нас цель была, чтобы этих мета-вершин было не более чем Н поделить налогом.
[01:25:52.860 --> 01:25:56.860]  Ну пересекаться, в смысле, одна вложена в другую, да.
[01:25:58.860 --> 01:26:02.860]  Ну, можно и так, но сейчас увидим просто проблемы.
[01:26:02.860 --> 01:26:16.860]  Вот, помещенные и так далее, но это вот выделяем, но это не всегда может быть, потому что конкретно вот в дереве типа ежик мы можем выделить помещенные вершины будет либо под дерево размера 1, что слишком мало, либо под дерево размера N, что слишком много.
[01:26:17.860 --> 01:26:19.860]  То есть, к сожалению, у нас тут нету неприрывности.
[01:26:21.860 --> 01:26:22.860]  Вот.
[01:26:23.860 --> 01:26:24.860]  Что делать?
[01:26:25.860 --> 01:26:26.860]  Вот.
[01:26:26.860 --> 01:26:28.860]  Ну нет, нет, на самом деле идея такая.
[01:26:29.860 --> 01:26:30.860]  Значит, смотрите.
[01:26:31.860 --> 01:26:32.860]  Так, давайте-ка.
[01:26:33.860 --> 01:26:35.860]  Так, ну ладно, с этими кодами разобрались.
[01:26:36.860 --> 01:26:38.860]  Ну сейчас мы как раз об этих кодах думать уже не должны.
[01:26:39.860 --> 01:26:44.860]  Да, то есть мы уже поняли, что если в некотором смысле все хорошо, то мы в некотором смысле все умеем.
[01:26:44.860 --> 01:26:45.860]  Да.
[01:26:46.860 --> 01:26:48.860]  Звучит, конечно, так.
[01:26:49.860 --> 01:26:50.860]  Ладно.
[01:26:51.860 --> 01:26:52.860]  Ну, конечно, да.
[01:26:53.860 --> 01:26:55.860]  Так, значит, это все.
[01:26:56.860 --> 01:26:57.860]  Значит, смотрите.
[01:26:58.860 --> 01:27:01.860]  Значит, идея у меня будет примерно так.
[01:27:02.860 --> 01:27:03.860]  Так.
[01:27:04.860 --> 01:27:05.860]  Вот.
[01:27:06.860 --> 01:27:07.860]  Вот.
[01:27:07.860 --> 01:27:08.860]  Значит, это все.
[01:27:09.860 --> 01:27:10.860]  Значит, смотрите.
[01:27:11.860 --> 01:27:14.860]  Значит, идея у меня будет примерно такая.
[01:27:15.860 --> 01:27:16.860]  Я не знаю сейчас, к чему у меня будет.
[01:27:17.860 --> 01:27:19.860]  Ну то есть, Бубен у меня явно будет равен к шелагарифам, деленной какую-то константу.
[01:27:20.860 --> 01:27:21.860]  Вопрос, конечно, сейчас будем подгонять на какую.
[01:27:22.860 --> 01:27:24.860]  Вроде больше 8 там получиться не должно было.
[01:27:25.860 --> 01:27:26.860]  Вот.
[01:27:27.860 --> 01:27:28.860]  Ну вот нам уже не хватило 4.
[01:27:29.860 --> 01:27:30.860]  Что?
[01:27:31.860 --> 01:27:32.860]  Что-то неточное сделали?
[01:27:32.860 --> 01:27:36.860]  Ну, потому что мы решили, что у нас будут деревья от Бубен в полам до 2 Бубен.
[01:27:37.860 --> 01:27:39.860]  А это, на самом деле, была же прикидка наша старая.
[01:27:40.860 --> 01:27:41.860]  Ну, может.
[01:27:42.860 --> 01:27:43.860]  Да.
[01:27:44.860 --> 01:27:45.860]  Ну, хорошо.
[01:27:46.860 --> 01:27:47.860]  Значит, смотрите.
[01:27:48.860 --> 01:27:49.860]  Как вы на самом деле будем делать?
[01:27:50.860 --> 01:27:53.860]  Значит, давайте попробую ввести жирное определение такое.
[01:27:55.860 --> 01:28:00.860]  Значит, вершина, допустим, В интересная.
[01:28:03.860 --> 01:28:04.860]  Просто надо было называть Бубновая.
[01:28:05.860 --> 01:28:06.860]  Ну ладно.
[01:28:07.860 --> 01:28:08.860]  Так.
[01:28:09.860 --> 01:28:10.860]  Не.
[01:28:11.860 --> 01:28:12.860]  Значит, интересная.
[01:28:13.860 --> 01:28:22.860]  Если СЗ от В, значит, меньше, ну, допустим, там меньше Бубна.
[01:28:23.860 --> 01:28:31.860]  А Бубен, в свою очередь, меньше либо равно СЗ от родителя В.
[01:28:39.860 --> 01:28:40.860]  Вот такая идея.
[01:28:41.860 --> 01:28:48.860]  То есть, идея в том, что у нас сейчас будет прикидка, что у нас будет с Бубновой металлистия размера 1.
[01:28:49.860 --> 01:28:50.860]  Ну, типа того, да.
[01:28:50.860 --> 01:28:52.860]  Ну, тут сейчас будут проблемы просто небольшие.
[01:28:55.860 --> 01:28:56.860]  Значит, смотрите.
[01:28:57.860 --> 01:29:04.860]  То есть, действительно, просто нет, идея просто тут заключается в том, что мы хотим пометить, объявить корнями метавершин именно интересные вершины.
[01:29:07.860 --> 01:29:09.860]  Ну, во-первых, чем приятно такая технология?
[01:29:10.860 --> 01:29:15.860]  Она приятна тем, что понятно, что из помещенных вершин ни одна вершина не будет являться предком другой.
[01:29:18.860 --> 01:29:19.860]  Да, удобно.
[01:29:20.860 --> 01:29:25.860]  Но, но есть одна маленькая проблема.
[01:29:26.860 --> 01:29:34.860]  Нам требуется, чтобы в микровершине было не только, чтобы там было не очень много вершин, но и не очень мало вершин.
[01:29:37.860 --> 01:29:41.860]  А интересными, вот, например, в нашем ежике, например, интересными являются все листы.
[01:29:44.860 --> 01:29:45.860]  Вот все листы.
[01:29:46.860 --> 01:29:48.860]  Это многовато.
[01:29:50.860 --> 01:29:51.860]  Но у меня будет идея такая.
[01:29:53.860 --> 01:29:55.860]  Ну, заметим, значит, идея будет примерно следующая.
[01:29:57.860 --> 01:29:59.860]  Значит, я сделаю так.
[01:30:00.860 --> 01:30:01.860]  Значит, у меня тут будет дерево.
[01:30:08.860 --> 01:30:14.860]  Значит, смотрите, я буду, значит, эти вершинки, значит, некоторые вершинки, значит, у меня тут будут вот эти вот интересные вершины.
[01:30:16.860 --> 01:30:17.860]  Это вот они интересные.
[01:30:18.860 --> 01:30:19.860]  Вот я ее даже обведу.
[01:30:21.860 --> 01:30:24.860]  Вот у меня тут есть какие-нибудь интересные вершины.
[01:30:25.860 --> 01:30:26.860]  Вот.
[01:30:28.860 --> 01:30:33.860]  Ну, и можно заметить, что каждый лист будет лежать, ну, давайте вот так сделаем.
[01:30:34.860 --> 01:30:38.860]  Каждый лист будет лежать, будет являться потомком какой-то интересной вершины.
[01:30:40.860 --> 01:30:41.860]  Да.
[01:30:42.860 --> 01:30:48.860]  Вот. Ну, кстати, да, заметим, что сам потом, сам, конечно, лист тоже может оказаться вполне вот, например, интересной вершиной.
[01:30:48.860 --> 01:30:49.860]  Собственно, почему бы и нет.
[01:30:50.860 --> 01:30:51.860]  Тут вот, кстати, вот.
[01:30:52.860 --> 01:30:55.860]  Да, вот тут может быть такая интересная, действительно, ситуация.
[01:30:56.860 --> 01:30:57.860]  Часто вот.
[01:30:58.860 --> 01:30:59.860]  Это вот, смотрите.
[01:31:00.860 --> 01:31:02.860]  Для длинный путь какой-то, к нему было сверху, рядом сделать один.
[01:31:03.860 --> 01:31:05.860]  Ну, да, по барабану, может быть, прям вот так.
[01:31:06.860 --> 01:31:07.860]  Вот.
[01:31:08.860 --> 01:31:13.860]  Ну, а теперь, значит, да, но приятно, что, конечно, в под деревьях у них не более чем Бубен.
[01:31:14.860 --> 01:31:16.860]  Ну, даже меньше, чем Бубен вершин.
[01:31:17.860 --> 01:31:18.860]  Значит, смотрите.
[01:31:19.860 --> 01:31:20.860]  Ну, теперь у меня идея такая.
[01:31:21.860 --> 01:31:28.860]  Значит, теперь у меня сейчас между микро-вершинами и большим миром будет промежуточное звено.
[01:31:29.860 --> 01:31:33.860]  Промежуточное звено будут родители мета-вершин.
[01:31:37.860 --> 01:31:38.860]  Вот.
[01:31:39.860 --> 01:31:41.860]  Вот рассмотрим родители мета-вершин.
[01:31:47.860 --> 01:31:48.860]  Вот.
[01:31:49.860 --> 01:31:50.860]  Понимаете, да?
[01:31:51.860 --> 01:31:53.860]  Значит, идея будет такая.
[01:31:54.860 --> 01:31:56.860]  Значит, идея будет следующим.
[01:31:57.860 --> 01:31:58.860]  То есть, смотрите.
[01:31:59.860 --> 01:32:00.860]  Ну, вот.
[01:32:01.860 --> 01:32:06.860]  Значит, у меня будет практически где-то три варианта, на самом деле, промежуточное звено.
[01:32:07.860 --> 01:32:13.860]  Либо, когда мы поднимаемся из вот этого микродерева, а микродерево у нас будет висеть на интересных вершинах,
[01:32:13.860 --> 01:32:20.860]  то, значит, либо этот подъем у нас происходит не выше корня, и тогда мы там все из табличек достаем, да?
[01:32:21.860 --> 01:32:27.860]  Значит, а если надо подниматься выше, то мы, значит, поднимаемся до родителя.
[01:32:28.860 --> 01:32:29.860]  То есть, ну, еще один шаг делаем, да?
[01:32:30.860 --> 01:32:38.860]  А потом после этого у нас остаются только вот деревья, вот это вот дерево, в котором все, что ниже родителей, отсечено.
[01:32:38.860 --> 01:32:47.860]  Ну, когда у нас запрос выше, то нам просто теперь от родителя, то есть, от родителей интересной вершины нужно куда-то подняться.
[01:32:48.860 --> 01:32:49.860]  Куда-то.
[01:32:50.860 --> 01:32:51.860]  Да, куда-то.
[01:32:52.860 --> 01:32:54.860]  Значит, вот теперь, значит, как нам это делать?
[01:32:55.860 --> 01:32:56.860]  Теперь идея такая.
[01:32:57.860 --> 01:32:58.860]  Значит, как работать?
[01:32:59.860 --> 01:33:02.860]  То есть, итак, то есть, мы свели задачу, когда у нас, то есть, свели задачу к следующей.
[01:33:03.860 --> 01:33:04.860]  То есть, у нас есть дерево.
[01:33:04.860 --> 01:33:07.860]  В котором мы, по сути, отпилили все поддеревья интересных вершин.
[01:33:08.860 --> 01:33:09.860]  Вот видите, да?
[01:33:10.860 --> 01:33:11.860]  Взяли и отпилили.
[01:33:13.860 --> 01:33:14.860]  Понимаете, да?
[01:33:16.860 --> 01:33:18.860]  Ну, теперь, что это нам дает?
[01:33:20.860 --> 01:33:21.860]  Теперь утверждение.
[01:33:22.860 --> 01:33:29.860]  Я утверждаю, что в оставшемся дереве каждый лист, который мы отпилили, мы отпилили.
[01:33:29.860 --> 01:33:39.860]  Я утверждаю, что в оставшемся дереве каждый лист является, то есть, каждый лист.
[01:33:40.860 --> 01:33:52.860]  Нет, он не интересная вершина, но в его бывшем поддеревья обязательно, обязательно было хотя бы, хотя бы бубен вершин.
[01:33:53.860 --> 01:33:54.860]  Логично, да?
[01:33:55.860 --> 01:33:56.860]  Да.
[01:33:56.860 --> 01:33:58.860]  То есть, теперь, ну вот, то есть, точнее так.
[01:33:59.860 --> 01:34:00.860]  Ну, точнее так.
[01:34:01.860 --> 01:34:03.860]  Каждый лист, утверждение такое, важное утверждение.
[01:34:04.860 --> 01:34:08.860]  В оставшемся дереве каждый лист – это бывший родитель интересной вершины.
[01:34:09.860 --> 01:34:10.860]  Еще раз.
[01:34:11.860 --> 01:34:12.860]  Отверждение.
[01:34:13.860 --> 01:34:14.860]  Каждый лист.
[01:34:15.860 --> 01:34:19.860]  Вот мы отпилили, вот мы пометили все интересные вершины и отпилили.
[01:34:20.860 --> 01:34:21.860]  Каждый лист – это родитель…
[01:34:21.860 --> 01:34:28.860]  Вот в оставшемся дереве каждый лист – это родитель какого-то бывшего депутата Государственной Думы.
[01:34:29.860 --> 01:34:30.860]  Вот.
[01:34:31.860 --> 01:34:32.860]  Бывшего поддерева.
[01:34:35.860 --> 01:34:36.860]  При чем тут?
[01:34:37.860 --> 01:34:38.860]  Нет, интересно, кишка 12 стульев.
[01:34:39.860 --> 01:34:40.860]  Да.
[01:34:41.860 --> 01:34:42.860]  Вот.
[01:34:43.860 --> 01:34:48.860]  А также, соответственно, то есть, получается, в оставшемся поддеревья, то есть, на каждом листе что-то висело.
[01:34:48.860 --> 01:34:51.860]  И не просто что-то, а бубен вершин висело.
[01:34:52.860 --> 01:34:53.860]  Ну ладно, считай, может быть, ее саму.
[01:34:54.860 --> 01:34:55.860]  Помните?
[01:34:56.860 --> 01:34:57.860]  Ну вот.
[01:34:58.860 --> 01:35:01.860]  Нет, просто не может быть так, что у нас остался лист и на нем висело что-то мало.
[01:35:02.860 --> 01:35:06.860]  Потому что если бы на нем было мало, то либо его, либо его в составе чего-то мы бы его отпилили, правда?
[01:35:07.860 --> 01:35:11.860]  То есть, поэтому на каждом этом родителе, то есть, каждый лист в оставшемся дереве – это родитель.
[01:35:12.860 --> 01:35:14.860]  То есть, заметим, неверно обратное.
[01:35:14.860 --> 01:35:26.860]  То есть, из картинки следует, что не любой бывший родитель мета-вершины, то есть, интересные вершины, является в оставшемся дереве листом.
[01:35:27.860 --> 01:35:29.860]  То есть, видите, всякое может быть.
[01:35:30.860 --> 01:35:34.860]  Но самое главное, что каждый лист, он им являлся.
[01:35:35.860 --> 01:35:37.860]  И что самое главное, зачем мы все это делаем?
[01:35:37.860 --> 01:35:58.860]  Так как на каждом листе раньше независимо, значит, соответственно, независимо висело хотя бы логарифом вершин, то есть, хотя бы бубен, то тогда получается в новом дереве количество детей – это не более, чем n поделить на бубен.
[01:35:59.860 --> 01:36:00.860]  Вот.
[01:36:01.860 --> 01:36:04.860]  Так что на этом дереве теперь запускаем n лога n от единицы.
[01:36:05.860 --> 01:36:07.860]  И, в общем-то, вот на этом все с вами были.
[01:36:08.860 --> 01:36:09.860]  Вот.
[01:36:12.860 --> 01:36:13.860]  Так вот.
[01:36:15.860 --> 01:36:16.860]  Так что вот такая нот.
[01:36:17.860 --> 01:36:18.860]  Так что вот, в общем-то, и все.
[01:36:19.860 --> 01:36:20.860]  То есть, вот еще и нот.
[01:36:21.860 --> 01:36:23.860]  Еще одно применение метода четырехрусских.
[01:36:24.860 --> 01:36:25.860]  То есть, как всегда, что-то нот.
[01:36:26.860 --> 01:36:31.860]  То есть, как всегда, то есть, какие-нибудь, если деревья очень маленького, там малого размера, можно обязательно предподсчитать.
[01:36:32.860 --> 01:36:33.860]  Вот.
[01:36:34.860 --> 01:36:35.860]  И, собственно, мы это успешно делаем.
[01:36:36.860 --> 01:36:37.860]  То есть, вот, собственно, та же технология.
[01:36:38.860 --> 01:36:39.860]  Переподсчитаем.
[01:36:40.860 --> 01:36:41.860]  Так. Ну, давайте. Вопросы какие-нибудь есть тут?
[01:36:42.860 --> 01:36:43.860]  Да, вы меня позаписали.
[01:36:44.860 --> 01:36:45.860]  Ну, вот.
[01:36:46.860 --> 01:36:47.860]  Так. Вопрос есть. Давай.
[01:36:48.860 --> 01:36:54.860]  Значит, когда мы делаем предподсчет всех этих маленьких деревьев, мы жестко кладем то, что они будут размером бубен.
[01:36:55.860 --> 01:36:57.860]  Нет. Они будут размером меньше, чем бубен.
[01:36:58.860 --> 01:36:59.860]  То есть, теперь обратите внимание.
[01:36:59.860 --> 01:37:00.860]  Технология изменилась.
[01:37:01.860 --> 01:37:04.860]  То есть, потом как теперь нам, как мы поднимемся поставлять, как получать ответ?
[01:37:05.860 --> 01:37:06.860]  Идея очень простая.
[01:37:07.860 --> 01:37:12.860]  Значит, вы просто будете считать деревья размера не только бубен, но всех размеров от одного до бубна.
[01:37:13.860 --> 01:37:14.860]  А нам теперь подгонять не надо, да?
[01:37:15.860 --> 01:37:18.860]  Ну, давайте подумаем.
[01:37:19.860 --> 01:37:23.860]  Есть вариант тупо забить, короче, и просто в поди дописать там PSP ровненькое.
[01:37:24.860 --> 01:37:25.860]  Нам все равно не придется в той части обращаться.
[01:37:26.860 --> 01:37:27.860]  Ну, чисто теоретически, кстати, да.
[01:37:27.860 --> 01:37:36.860]  То есть, вы можете посчитать все размера бубен и просто каждому коду, если он маленького размера, там приписать там 10101010.
[01:37:37.860 --> 01:37:38.860]  Оно же нам вот не влияет.
[01:37:39.860 --> 01:37:44.860]  Ну, если вы все посчитаете, то у вас ассептатически будет то же самое, просто там в константу раз возрастет.
[01:37:45.860 --> 01:37:51.860]  Ну, вот. А можно, да, действительно посчитать только конкретного размера бубен, а если код там слишком маленький, то припишем 10110.
[01:37:52.860 --> 01:37:53.860]  Ну, это типа вот.
[01:37:54.860 --> 01:37:55.860]  Почему такого дерева не может быть?
[01:37:55.860 --> 01:37:56.860]  Почему такого дерева не может быть?
[01:37:57.860 --> 01:37:58.860]  Какого дерева не может быть?
[01:37:59.860 --> 01:38:00.860]  Такого, который мы лишним сделали.
[01:38:01.860 --> 01:38:02.860]  Нет, это приписывание лишнего.
[01:38:03.860 --> 01:38:04.860]  Приписывание.
[01:38:05.860 --> 01:38:06.860]  Но ты попадешь в валидное дерево.
[01:38:07.860 --> 01:38:08.860]  Да, меня это устраивает, и что?
[01:38:09.860 --> 01:38:10.860]  Ты перепишешь ему.
[01:38:11.860 --> 01:38:12.860]  Почему он неразрывный?
[01:38:13.860 --> 01:38:14.860]  Нормально.
[01:38:15.860 --> 01:38:16.860]  То есть, это часть, которую мы хотим.
[01:38:17.860 --> 01:38:18.860]  Там не будет бумки.
[01:38:19.860 --> 01:38:21.860]  Можно, на самом деле, написать ему лишних леденец, потому что тогда...
[01:38:22.860 --> 01:38:23.860]  А нельзя лишних леденец?
[01:38:23.860 --> 01:38:24.860]  Да, лишних леденец.
[01:38:25.860 --> 01:38:27.860]  Короче, если читать что-то на сольдеревых цешках...
[01:38:28.860 --> 01:38:29.860]  То есть, плюс один.
[01:38:30.860 --> 01:38:35.860]  Нет, погоди. Я, честно говоря, не понимаю, почему вы не хотите, почему коду такая проблема лишний 10110 приписать?
[01:38:36.860 --> 01:38:41.860]  Сейчас. У нас есть маленькое дерево, и у него есть код, который мы получили приписав 10110.
[01:38:42.860 --> 01:38:45.860]  А есть другое дерево, у которого реально такой код, который мы написали.
[01:38:46.860 --> 01:38:47.860]  Еще.
[01:38:48.860 --> 01:38:49.860]  А дальше код нашего маленького дерева.
[01:38:50.860 --> 01:38:51.860]  И у них ответы будут лежать в одной ячейке.
[01:38:51.860 --> 01:38:52.860]  У них ответы лежат в одной ячейке?
[01:38:53.860 --> 01:38:54.860]  Да.
[01:38:55.860 --> 01:38:56.860]  А там же все забьется?
[01:38:57.860 --> 01:38:58.860]  Нет.
[01:38:59.860 --> 01:39:02.860]  В смысле, еще раз, у нас у двух разных деревьев должны поместить ответы в одну ячейку.
[01:39:03.860 --> 01:39:04.860]  Да.
[01:39:05.860 --> 01:39:06.860]  Нет, у каких двух?
[01:39:07.860 --> 01:39:08.860]  Вот у этих двух бетовершин, да.
[01:39:09.860 --> 01:39:10.860]  Может быть, ответ у них лежит в одной ячейке?
[01:39:11.860 --> 01:39:12.860]  Да.
[01:39:13.860 --> 01:39:14.860]  Нет, у двух разных по форме деревьев.
[01:39:15.860 --> 01:39:16.860]  Нет.
[01:39:16.860 --> 01:39:17.860]  Нет.
[01:39:18.860 --> 01:39:21.860]  Подумай над тем, как выглядит ваша кодочка с рельевым путем.
[01:39:22.860 --> 01:39:24.860]  Для общей трассы, как выглядит вот эта маленькая дерева?
[01:39:25.860 --> 01:39:26.860]  Она заканчивается на ноль и начинается на ноль.
[01:39:27.860 --> 01:39:28.860]  Стой.
[01:39:29.860 --> 01:39:30.860]  У нас куча ежек.
[01:39:31.860 --> 01:39:32.860]  У нас интересные вершины маленькие.
[01:39:33.860 --> 01:39:34.860]  А мы залоги дописываем.
[01:39:35.860 --> 01:39:36.860]  Не, какая разница?
[01:39:37.860 --> 01:39:39.860]  Ну во-первых, ну приписали, что...
[01:39:40.860 --> 01:39:41.860]  Эн-лог.
[01:39:42.860 --> 01:39:43.860]  Нет, при чем тут эн-лог?
[01:39:43.860 --> 01:39:46.860]  Нет, во-первых, мы Бубен подогнали так, что перебор всех деревьев...
[01:39:47.860 --> 01:39:48.860]  Нет, слушай, а что мы приписывали?
[01:39:49.860 --> 01:39:50.860]  Мы для каждой из этих припис...
[01:39:51.860 --> 01:39:54.860]  Нет, ну я надеюсь, ты код не залогарифумен приписываешь.
[01:39:55.860 --> 01:39:56.860]  ОК.
[01:39:57.860 --> 01:39:58.860]  А за сколько?
[01:39:59.860 --> 01:40:00.860]  Я тебе считаю длину, обрезаю массу, приписываю...
[01:40:01.860 --> 01:40:02.860]  Да.
[01:40:03.860 --> 01:40:04.860]  Ну как бы, да, естественно.
[01:40:05.860 --> 01:40:06.860]  Как бы, да.
[01:40:07.860 --> 01:40:08.860]  То есть это все за...
[01:40:09.860 --> 01:40:10.860]  То есть понятно, что, знаете, масса...
[01:40:10.860 --> 01:40:15.860]  То есть как бы такое битвое число в духе 1,0,1,0,1,0, вот само битвое число,
[01:40:16.860 --> 01:40:18.860]  оно там заранее либо предподсчитывается, либо вычисляется за 1,1.
[01:40:19.860 --> 01:40:21.860]  Потому что это геометрическая прогрессия степени 2.
[01:40:22.860 --> 01:40:24.860]  Возможно, у нее даже какая-то красивая формула есть.
[01:40:25.860 --> 01:40:26.860]  Вот.
[01:40:27.860 --> 01:40:28.860]  Шоу про...
[01:40:29.860 --> 01:40:30.860]  Можно оставить на 0.
[01:40:31.860 --> 01:40:35.860]  Нет, ну можно ничего не приписывать и предпочитать просто все мелкие размеры вообще все.
[01:40:35.860 --> 01:40:36.860]  Тоже вариант.
[01:40:38.860 --> 01:40:41.860]  Я утверждаю, что если оставить там нули, то не будет никаких количеств.
[01:40:42.860 --> 01:40:44.860]  То есть не какие-то два дерева разные по форме, они будут в одну ячейку.
[01:40:45.860 --> 01:40:46.860]  Ааа.
[01:40:47.860 --> 01:40:49.860]  Это очень простое, потому что на самом деле количество нулей должно быть равно количеству единиц.
[01:40:50.860 --> 01:40:51.860]  Вот, если у нас, по-моему, развернули...
[01:40:52.860 --> 01:40:53.860]  Ну количество нулей, оно...
[01:40:54.860 --> 01:41:01.860]  То есть потом, когда предпочитывать будешь, ты эти нули должен будешь, как это, предпочитай, как-то тоже предобработать.
[01:41:02.860 --> 01:41:04.860]  У тебя же каждая ноль соответствует либо единицы, либо минусы единицы, да?
[01:41:05.860 --> 01:41:06.860]  Нет.
[01:41:07.860 --> 01:41:08.860]  Ну вот, поэтому как бы...
[01:41:09.860 --> 01:41:10.860]  Поэтому получится, возможно, даже не валидное дерево где-то.
[01:41:11.860 --> 01:41:16.860]  Поэтому вот приписывать к масочке, чтобы было валидное дерево, я бы рекомендовал именно 1.0.1.0.1.0, типа чтобы вот туда...
[01:41:17.860 --> 01:41:23.860]  Ну потому что, то есть это будет символизировать, что если дерево оказалось мелкое, то я тут просто вот нарисовал тут лишних.
[01:41:24.860 --> 01:41:25.860]  Вот таких вот этих.
[01:41:26.860 --> 01:41:27.860]  Вот я-то откуда это 1.0.1.0.1.
[01:41:28.860 --> 01:41:29.860]  Но для них ты ничего не будешь предпочитывать.
[01:41:30.860 --> 01:41:31.860]  Для этих лишних.
[01:41:32.860 --> 01:41:33.860]  Да почему можно и предпочитать?
[01:41:33.860 --> 01:41:34.860]  Потому что...
[01:41:35.860 --> 01:41:36.860]  Стой, ты для них будешь предпочитывать перки, я правильно тебя понял?
[01:41:37.860 --> 01:41:38.860]  Да.
[01:41:39.860 --> 01:41:42.860]  Тогда у тебя есть ежик, у которого N интересных вершин.
[01:41:43.860 --> 01:41:44.860]  Ну.
[01:41:45.860 --> 01:41:46.860]  К каждой интересной вершине ты взял это микродерево.
[01:41:47.860 --> 01:41:48.860]  Да.
[01:41:49.860 --> 01:41:51.860]  Например, 1 и дописал еще до Бубна, то есть до логарифма.
[01:41:52.860 --> 01:41:53.860]  Да.
[01:41:54.860 --> 01:41:55.860]  И для каждого предпочитал перки.
[01:41:56.860 --> 01:41:57.860]  Это конечно все одинаково.
[01:41:58.860 --> 01:41:59.860]  Ну во-первых, да, ну и что?
[01:42:00.860 --> 01:42:02.860]  Ну во-первых, ведь дерево-то у меня все равно осталось размера Бубен.
[01:42:03.860 --> 01:42:04.860]  Да, деревья всего 20.
[01:42:05.860 --> 01:42:07.860]  А это просто будешь считать тип дерева, ты будешь дописывать по маску, окей?
[01:42:08.860 --> 01:42:09.860]  Да, конечно.
[01:42:10.860 --> 01:42:11.860]  Нет, так-то понятно, что мы уменьшаем.
[01:42:12.860 --> 01:42:18.860]  А вот мы предпочитываем еще дополнительные таблицы перевода относительных вершин в абсолютные, да?
[01:42:19.860 --> 01:42:20.860]  Ну тип того.
[01:42:21.860 --> 01:42:22.860]  Ну или наоборот.
[01:42:23.860 --> 01:42:24.860]  Ну да, обязательно.
[01:42:25.860 --> 01:42:26.860]  Ну конечно.
[01:42:27.860 --> 01:42:28.860]  Так что вот такая вот красота.
[01:42:29.860 --> 01:42:30.860]  Получилось?
[01:42:30.860 --> 01:42:31.860]  Ну как?
[01:42:37.860 --> 01:42:38.860]  Ну как сказать, по-моему, да.
[01:42:39.860 --> 01:42:42.860]  Кто-то пытался, как говорится, энлогендные варианты не оборвал.
[01:42:43.860 --> 01:42:44.860]  Ну логично.
[01:42:45.860 --> 01:42:47.860]  Так что да, честно, не пробовал.
[01:42:48.860 --> 01:42:49.860]  То есть я не знаю.
[01:42:50.860 --> 01:42:56.860]  То есть может быть есть мечта, когда-нибудь, когда компьютер будет обрабатывать деревья размера 10-18, может быть этот алгоритм начнет обгонять энлогендный.
[01:42:56.860 --> 01:42:59.860]  Но это уже совсем другая история.
[01:43:00.860 --> 01:43:01.860]  Да, совершенно верно.
[01:43:02.860 --> 01:43:03.860]  Ну собственно это как и всегда.
[01:43:04.860 --> 01:43:05.860]  Так, ну ладно, пока, я думаю, пришло время перерыва.
[01:43:06.860 --> 01:43:07.860]  Сейчас 15.45.
[01:43:08.860 --> 01:43:09.860]  Значит через 10 минут продолжим.
