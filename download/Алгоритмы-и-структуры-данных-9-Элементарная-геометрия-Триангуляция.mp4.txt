[00:00.000 --> 00:20.040]  у нас сегодня будет весьма такая разгрузочная лекция потому что мы сегодня переходим к блоку
[00:20.040 --> 00:26.240]  по геометрии вот ну и сегодня сначала будут совсем простые вещи совсем элементарная геометрия
[00:26.240 --> 00:37.200]  и в конце мы еще посмотрим на переангуляции
[00:37.200 --> 00:48.440]  я надеюсь что первую половину вы откуда-нибудь уже знаете из каких-нибудь курсов линала или
[00:48.440 --> 00:54.880]  алдема смотря что у вас там было в на первом курсе ну и вот всякие там скалярные векторные
[00:54.880 --> 01:00.040]  произведения расстояние точки до прямой все вот эти формы мы сегодня выпишем чтобы освежить
[01:00.040 --> 01:06.640]  в памяти потому что это нам будет нужно до конца ну в общем во всем этом блоке про геометрию это
[01:06.640 --> 01:12.880]  нужно будет помнить как примитивы соответственно мы должны помнить как с этим работать давайте это
[01:12.880 --> 01:20.800]  себе освежим в памяти чтобы потом могли использовать начну первым что нам нужно это примитив точки или
[01:20.800 --> 01:31.720]  вектора да значит я не сказал но мы пока что живем в р2 на плоскости только в р3 мы может
[01:31.720 --> 01:36.240]  когда-нибудь и выйдем но это не точно пока давайте считай что мы живем в р2 все на плоскости у нас
[01:36.240 --> 01:46.840]  тогда соответственно что точка что вектор за 2 координатами x и y вот ну и поскольку на
[01:46.840 --> 01:51.480]  самом деле любой вектор мы можем воспринимать как точку и наоборот да потому что такой вектор
[01:51.480 --> 02:01.240]  направленный какой-то отрезочек тогда если его приложу к точке 0 0 то его конечный координат
[02:01.240 --> 02:06.760]  как раз x и y поэтому у нас есть как бы взаимно однозначное соответствие между точками и
[02:06.760 --> 02:12.480]  векторами да между радиус векторами ведущими в эту точку поэтому чтобы сильно не думать у меня
[02:12.480 --> 02:16.800]  будет одна структура которая может хранить себе и точки вектор потому что все равно это как
[02:16.800 --> 02:22.080]  бы сущность оставившись двух координат давайте их вместе хранить в одной структуре и интерпретировать
[02:22.080 --> 02:26.840]  как хотим либо это точка на плоскости либо это радиус вектор как бы из 0 0 в эту точку ну то есть
[02:26.840 --> 02:32.760]  по сути направленный отрезок в эту точку поэтому здесь нужно будет что-то типа структ поинт и
[02:32.760 --> 02:37.960]  внутри там два поля интык с интык
[02:37.960 --> 02:52.320]  в этой структуре давайте напишем всякие удобные операторы плюс минус умножить чтобы можно было в
[02:52.320 --> 02:56.840]  коде оперировать с этими точками и векторами также как мы с ними оперировали бы на бумаге во всяких
[02:56.840 --> 03:02.560]  формуках ну значит нужен оператор минус да давайте не буду полностью сигнатуру писать
[03:02.560 --> 03:14.760]  понт оператор минус ну и там еще перейдем к какой-нибудь другую точку азр вот боюсь что
[03:14.760 --> 03:19.080]  нам надо передавать по ссылке по константной все такое но я не буду полностью это прописывать вы
[03:19.080 --> 03:24.920]  лучше меня знаете как писать все это из курса плюсов вот значит ну что такая разность точек
[03:24.920 --> 03:29.080]  есть какая-то точка xy и какая-то другая точка которая хочу вычислить из исходной то нужно
[03:29.080 --> 03:46.520]  просто сделать по по компонентное вычитание тикс минус азр x и y минус азр y разность двух точек
[03:46.520 --> 03:53.120]  да которая в частности позволит нам получать вектор из точки а в точку b потому что если есть
[03:53.200 --> 03:59.560]  две точки а и б я хочу получить вектор ведущий отсюда сюда собственно правильный отрезок то
[03:59.560 --> 04:04.520]  нужно просто будет из конца вычислить начало ровно в соответствии с этим оператором минус да
[04:04.520 --> 04:08.680]  у меня есть точка b точка направленный отрезок ведущий из начала в конец это конец минус
[04:08.680 --> 04:13.600]  начала всегда b минус а вот ну и поскольку а и б это точки то разница между ними это тоже
[04:13.600 --> 04:21.400]  точка которую можно в частности воспринимать как вектор начну оператор плюс аналогично здесь
[04:21.400 --> 04:26.680]  минусы меняются на плюсике ну еще можно скажем оператору умножения какую-нибудь константу написать
[04:26.680 --> 04:40.040]  пусть будет на целую пока что опять размножение на целую константу это нужно как бы вектор
[04:40.040 --> 04:45.400]  умножить в карас карас его приложить соответственно его координат тогда просто множество на к
[04:45.400 --> 05:05.840]  x на к y на к вот это соответствует тому что вектор x y мы откладываем карас в одном том же направлении
[05:05.840 --> 05:30.840]  так дальше примите прямой расскажите пожалуйста как мы будем хранить прямую еще раз да с
[05:30.840 --> 05:36.720]  тремя параметрами а б ценность мы все прямые будем хранить виде а икс плюс б игрек плюс с
[05:36.720 --> 05:41.640]  равно нулю да конечно какой-нибудь там более школьное классическое представление так как
[05:41.640 --> 05:47.080]  игрок равно к икс плюс б но оно не задает не все прямые да в частности оно не задает видимо
[05:47.080 --> 05:54.200]  вертикальные прямые где x где x равен константе поэтому такой вид мы использовать не будем да
[05:54.200 --> 06:00.880]  потому что значит давайте напишем не позволяет хранить вертикальные прямые позволяет хранить
[06:00.880 --> 06:14.120]  вертикальные прямые ну поэтому мы так делать не будем а вот такой вид обобщенный да с тремя
[06:14.120 --> 06:18.720]  коэффициентами он позволяет хранить любые прямые вертикальные горизонтальные любые другие наклоны
[06:18.720 --> 06:25.000]  значит в принципе вот этот метод хранения прямых мог бы быть валидным такое явное выражение
[06:25.000 --> 06:33.520]  y через x если например мы нашу изначальную картинку как-нибудь подвинем на случайный угол ну скажем
[06:33.520 --> 06:39.600]  относительно начала координат подвинем всю картинку на некий случайный угол тогда понятно
[06:39.600 --> 06:44.720]  дело что никакая прямая не может стать вертикальной потому что из-за того что мы подвинем все на
[06:44.800 --> 06:49.240]  случайные угол то с вероятностью один ну еще только вертикальная прямая это значит что там настоящ ruled
[06:49.240 --> 06:58.280]  от коке к cs2 в двух точек одинаковые abscis и да кардиналы по x и вот прямая ими ими задаваемая
[06:58.280 --> 07:02.480]  будет тогда вертикально потому что при вып − случай lasted так так же того что на двух точек
[07:02.480 --> 07:07.540]  останутся одинаковыми view abcism и если это были из ход на разные точки она должна 0 если
[07:07.540 --> 07:14.320]  угол выбирается случай金襡 как зарегинометрический преобразование на на какой-то угол
[07:14.320 --> 07:20.280]  умножается все. Вот. Понятно, что тогда никакая прямая вертикальна стать не может. Ну как бы
[07:20.280 --> 07:27.280]  это все хорошо в теории, да, но тогда это все как минимум добавляет нам какие-то проблемы с
[07:27.280 --> 07:31.280]  точностью. Потому что когда мы вводим какое-то региономическое преобразование, умножаем нам
[07:31.280 --> 07:37.480]  от этого поворота все наши координаты точек, то мы как минимум переходим от исходных координат
[07:37.480 --> 07:42.600]  к каким-то более неточным что ли. Мы там умножаем на косинусы-синусы. Косинусы-синусы как
[07:42.600 --> 07:46.160]  бы не очень простые функции считаются какой-то погрешностью, тогда нас соответственно вся
[07:46.160 --> 07:50.960]  картинка уже будет не очень точна. И как бы даже если у нас изначально все точки были целочистыми,
[07:50.960 --> 07:59.160]  вот я пока что пишу, что у меня x и y всегда целые, вот здесь у меня ниты, то после поворота на
[07:59.160 --> 08:03.880]  случайный угол, конечно, все сразу ну как минимум в дабл перекоит или в лонг дабл, если мы хотим гнаться
[08:03.880 --> 08:09.760]  за точностью. Поэтому это как бы такой, ну не очень понятно зачем нужный компромисс. Давайте пока
[08:09.760 --> 08:15.880]  стараться, если исходные координаты были целые, давайте пока стараться как можно дольше поддерживать
[08:15.880 --> 08:19.600]  все остальные координаты тоже целыми. То есть все что пока делаем, давайте стараться чтобы оно было
[08:19.600 --> 08:26.760]  целочисленное, чтобы не было никаких погрешностей. Потому что когда мы скажем, ну если мы будем
[08:26.760 --> 08:32.680]  решать какую-то задачу проверить пересекаются ли какие-то два отрезка заданные своими концами,
[08:32.680 --> 08:39.560]  вот если мы, скажем, запишем уравнение этих прямых в каком-нибудь виде, где a, b, c,
[08:39.560 --> 08:46.440]  дабловские числа вещественные, да, ну с плавающей точкой, попробуем как-нибудь пересечь, то проверка
[08:46.440 --> 08:51.080]  того, что эта точка лежит на отрезках, она, ну как бы может быть не очень точно, потому что в
[08:51.080 --> 08:54.840]  зависимости от того, какая у нас там погрешность накопилась, вот если эта c была вот здесь,
[08:54.840 --> 08:59.800]  вот или вот здесь, вот где-нибудь рядышком, у нас может ответ меняться, потому что точка пересечения,
[08:59.800 --> 09:04.920]  если она не представляется точно вдовечной системе счисления с каким-то маленьким числом
[09:04.920 --> 09:09.720]  знаков, то она может быть не в точности в точке пересечения, а где-то вот там рядышком из-за
[09:09.720 --> 09:16.440]  ошибок округления, из-за погрешностей всяких. Вот, поэтому, случай, когда, скажем, c совпадает с
[09:16.440 --> 09:22.120]  точкой пересечения, а точка пересечения при округлении куда-нибудь вот сюда попала, рядышком,
[09:22.120 --> 09:26.560]  или там вылезла, вылезла за отрезок cd, мы тогда скажем, что они не пересекаются, хотя пересекались.
[09:26.560 --> 09:32.680]  Поэтому, как бы, лучше всегда стараться, если у нас исходные координаты целые, как можно дольше
[09:32.680 --> 09:39.160]  хранить все в целых и не переходить к доблам, если это только критически вам, ну, не нужно.
[09:39.160 --> 09:47.400]  Вот, либо вот в таком случае можно было бы, например, все хранить в дробных числах, написать
[09:47.400 --> 09:53.440]  как-нибудь свой класс rational, вы его наверняка тоже предотписали, то есть хранить все числа в
[09:53.440 --> 09:58.160]  виде дробей, поделить на q, а если p и q там достаточно большие, если еще написать свою длину
[09:58.160 --> 10:04.600]  арифметику, например, тогда можно хранить вот эти координаты пересечения прямых в виде дробей,
[10:04.600 --> 10:11.520]  да, и с дробями уже точно работать. Ну, давайте с rational мы не будем работать, мы будем считать,
[10:11.520 --> 10:18.760]  что мы работаем в интах пока что. Ну вот, значит, прямые будем хранить таким образом, и нам нужно
[10:18.760 --> 10:37.840]  научиться строить, значит, задавать прямую как минимум по двум точкам. Есть две точки p и q различные,
[10:37.840 --> 10:44.720]  надо написать такие a, b, c, что они задают прямую, проходящую через эти самые точки по и q. Вот,
[10:44.720 --> 10:48.880]  ну поскольку здесь на самом деле есть некоторая неоднозначность, из-за того, что это уравнение
[10:48.880 --> 10:52.760]  остается как бы уравнением тоже прямой при домножении на любую, не на любую константу лямбада,
[10:52.760 --> 10:57.520]  если все коэффициенты домножу на лямбда, у меня уравнение не изменится, то на самом деле и здесь у
[10:57.520 --> 11:02.920]  меня этих прямых может быть бесконечно много, проходящих через данные две точки, и мне подойдет
[11:02.920 --> 11:07.480]  любое из них, мне подойдет любое описание прямой из всех возможных. Ну, давайте напишу вот такое.
[11:07.480 --> 11:35.160]  Значит, a это разность y, b это разность x в противоположном порядке, а c это px-qx.
[11:35.160 --> 11:43.000]  Я задаю координацию следующим образом. Я ожидаю, что они подойдут и будут задавать ровно ту самую
[11:43.000 --> 11:48.440]  прямую, как нам нужно. Ну, даже если это взялось с головы, чтобы проверить, что это подходит,
[11:48.440 --> 11:54.920]  нужно просто подставить в это уравнение обе точки по и q, проверить, что с данными коэффициентами там
[11:54.920 --> 12:05.280]  будет нолик. Ну, давайте скажем, для точки p это сделаем. Значит, a это вот это, умножить на p.x это
[12:05.280 --> 12:24.880]  нужно. Дальше, плюс b это вот это, умножить на p.y, и плюс c, px на qy, минус py на qx. Вот.
[12:24.920 --> 12:33.680]  Если аккуратно здесь посмотреть, то вроде все должно сократиться. Вот здесь вот py на px сократится
[12:33.680 --> 12:46.920]  вот с этим минус px на py. Дальше qx на py. Вот оно с плюсом и с минусом. Ну, и наконец qy на px вот оно
[12:46.920 --> 12:52.880]  с плюсом и с минусом. Значит, это все равно нулю. Поэтому напрямой, в которой я явным образом вот так
[12:52.880 --> 12:58.400]  вот задал координаты, у меня лежит точка p. Ну, и аналогично я поставлю в уравнение прямой точку q,
[12:58.400 --> 13:02.720]  и получится, конечно, что она тоже на ней лежит. Поэтому можно просто как-нибудь выучить вот эти вот,
[13:02.720 --> 13:09.120]  выучить эти формулы, и тогда по строению точки по двум прямым нужно просто, можно просто писать вот
[13:09.120 --> 13:20.200]  так. Просто в биле координатки они задают вам a, b, c. Вот. Начну и здесь тоже заметим, что если
[13:20.200 --> 13:24.760]  исходные координаты были целые, то здесь пока что все тоже целочисленные. А, b, c пока что целые.
[13:24.760 --> 13:31.000]  Можно, конечно, было бы поделить все координаты a, b, c на некую общую константу. Скажем, чтобы
[13:31.000 --> 13:36.040]  сделать направляющий вектор этой прямой единичным, чтобы у него была одничная длина. Но тогда здесь бы
[13:36.040 --> 13:41.240]  пришлось делить это все там на что-то. На корень, за квадрат, за квадрат. И у меня бы сразу a и b перестали
[13:41.240 --> 14:04.520]  быть целые. Вы давайте пока не делайте этого. Так. Что еще можно про прямую сказать? Если у нас
[14:04.520 --> 14:13.120]  есть прямая, заданная вот таким уравнением, у нее есть два основных вектора. Это вектор направляющий,
[14:13.120 --> 14:20.160]  то есть коллинеарный с прямой, и вектор нормальный перпендикулярный с прямой. Пусть нормальный будет
[14:20.160 --> 14:29.960]  n, направляющий будет l. То есть тогда у нормальной координаты это a, b, а у направляющего координат это b-a.
[14:29.960 --> 14:44.440]  Вектор нормальный, то есть тут прямой угол. Это направляющий вектор.
[14:53.040 --> 14:56.840]  Ну почему это верно? Давайте сначала с направляющего начнем. Почему этот вектор
[14:56.840 --> 15:03.000]  коллинеарен прямой? Давайте возьмем произвольную точку на этой прямой. Пусть у нее будет координат на x,
[15:03.000 --> 15:10.840]  y. Давайте прибавим к ней вектор l. Соответственно у нас получится x плюс b, y минуса. И заметим,
[15:10.840 --> 15:14.760]  что если исходная точка лежала на прямой, то есть удовлетворяет уравнению, то эта точка тоже
[15:14.760 --> 15:18.360]  будет лежать на прямой, то есть удовлетворяет уравнению. Потому что что у нас было? У нас
[15:18.360 --> 15:25.400]  было ax плюс by плюс c равно нулю. Теперь я к этой точке добавил какие-то там поправочки,
[15:25.400 --> 15:30.680]  да, плюс b, минуса. И хочу проверить, что эта точка тоже лежит на прямой, потому что прямая
[15:30.680 --> 15:34.800]  это в точности множество точек, удовлетворяющих такому уравнению. Давайте вот сюда поставим
[15:34.800 --> 15:46.640]  обновленные координаты. То есть a на x плюс b, плюс b на y минуса, плюс c. Это в точности вот
[15:46.640 --> 16:03.200]  эта штука плюс ab минуса b, да, то есть она тоже равна нулю. Поэтому мы получили две точки,
[16:03.200 --> 16:07.240]  лежащие на прямой. Соответственно, направляющий вектор это вектор разности между любыми двумя
[16:07.240 --> 16:11.800]  различными точками на прямой. В частности подойдет b минуса. Ну еще в частности подойдет, скажем,
[16:11.800 --> 16:22.080]  наоборот, минус b запятая a. Он будет просто смотреть в противоположную сторону. Ну и значит,
[16:22.080 --> 16:26.840]  если это направляющий, то перпендикулярный к нему это будет нормальный вектор. Можно легко
[16:26.840 --> 16:31.360]  убедиться, что n действительно перпендикулярен к l просто потому, что у них нулевое скалярное
[16:31.360 --> 16:47.440]  произведение. Значит, итак, l это направляющий вектор, а скалярное произведение n на l это что
[16:47.440 --> 16:58.680]  такое? Это опять ab минус ba, то есть ноль. Значит, n это нормаль. Просто потому, что это
[16:58.680 --> 17:01.760]  вектор перпендикулярный прямой, значит, это просто нормальный вектор по определению.
[17:01.760 --> 17:15.080]  Так, ну и вот здесь, да, если я говорю про нормаль, то очень часто нам нужно будет именно, скажем,
[17:15.080 --> 17:19.880]  единичный вектор нормали или единичный вектор направляющий. Тогда нам нужно будет его
[17:19.880 --> 17:26.840]  нормировать. В этом случае можно будет поделить обе координации нашего вектора на корень за
[17:26.840 --> 17:38.000]  квадрат плюс b квадрат. То есть просто я поделил координаты вектора на длину вектора. Длина
[17:38.000 --> 17:42.800]  вектора будет как раз корень из суммы квадратов в координат. Значит, это будет единичный вектор
[17:42.800 --> 17:55.080]  нормали. Единичный вектор нормали. Ну и здесь уж, извините, да, если мне нужен единичный вектор,
[17:55.080 --> 17:59.240]  то у него очень вряд ли будут целочисленные координаты, потому что целочисленных единичных
[17:59.240 --> 18:04.080]  векторов всего 4, а нормальных бесконечно много. Вот, поэтому здесь мне уже придется
[18:04.080 --> 18:09.280]  переходить к каким-то не целым доблам или лонг доблам. Ну и, соответственно, извлекать корни. Это вот
[18:09.280 --> 18:17.280]  первое место, где уже точно нужно переходить к не целым числам. И, соответственно, если я хочу
[18:17.280 --> 18:22.600]  заводить прямые, у которых единичные векторы, ссори, у которых векторы нормали единичные,
[18:22.600 --> 18:27.640]  то мне нужно будет поддерживать, что у них все координаты, ну точнее сумма квадратов,
[18:27.640 --> 18:40.320]  первый-второй координат единица. Я могу изначально в уравнении такой прямой поделить
[18:40.320 --> 18:44.600]  все коэффициенты на вот этот самый корень, и тогда у меня сумма квадратов a и b станет равна единице.
[18:44.600 --> 18:53.160]  Давайте напишу, что k это корень из a квадрат плюс b квадрат. Тогда, соответственно, нормировка
[18:53.160 --> 19:03.920]  это деление, давайте напишу a слешавну k, b слешавну k, t слешавну k. После этого у меня сумма
[19:03.920 --> 19:08.880]  квадратов первых двух коэффициентов, то есть вот этих двух, центр равна единице, потому что я их
[19:08.880 --> 19:15.120]  поделил на k оба. Ну и, соответственно, вектор нормали будет просто совпадать с вектором a, b. Вот
[19:15.120 --> 19:19.160]  какие здесь написаны числа, такие и будут координат у вектора нормали. Мне, соответственно,
[19:19.160 --> 19:23.440]  ничего потом нормировать не придется. Но это мы сделаем только в случае, если нам реально
[19:23.440 --> 19:36.520]  нужны векторы нормали, потому что здесь мы переходим к не целым числам. Попросы может быть.
[19:36.520 --> 19:46.640]  Да, ну пока, пока как бы тут ничего сложного не будет. Значит дальше расстояние точки до прямой.
[19:53.440 --> 20:07.920]  Есть прямая, есть точка. Давай что-нибудь координат x0, y0. Мне нужно, ну скажем, давайте сразу
[20:07.920 --> 20:13.120]  найдем и расстояние, и проекцию точкой прямую. То есть вот есть такая точка, мне нужно опустить
[20:13.120 --> 20:18.320]  перпендикуляр и, во-первых, найти основание перпендикуляра, во-вторых, найти длину, собственно,
[20:18.320 --> 20:29.120]  того, что мы опускали. Для этого давайте сделаем следующее. Пусть я точка P, пусть n это вектор
[20:29.120 --> 20:45.680]  нормали, единичный вектор нормали. Тогда, чтобы опустить перпендикуляр напрямую, мне нужно к
[20:45.680 --> 20:51.200]  точке P несколько раз добавить вектор n, то есть n умножен на какую-то лямду, допустим. Так,
[20:51.200 --> 20:58.840]  чтобы результирующая точка лежала бы напрямой, а x плюс b y равно 0. То есть это некая точка P плюс
[20:58.840 --> 21:08.600]  лямда n. Да, мне нужно, чтобы эта точка лежала напрямой. Ну давайте напишем, что значит, что вот
[21:08.600 --> 21:14.960]  эта точка с такими координатами, что вообще за точка с координатами P плюс лямда n. Эта точка
[21:14.960 --> 21:23.400]  с координатами x0 плюс лямда a, y0 плюс лямда b. Потому что сложения у нас по координатные. Ну и все,
[21:23.400 --> 21:27.160]  нужно поставить это в это уравнение, понять тогда, чему равно лямда. Давайте подставим.
[21:27.160 --> 21:37.200]  A на x0 плюс лямда a, плюс b на y0 плюс лямда b, плюс c равно 0.
[21:37.200 --> 21:56.680]  Лямду вынесу.
[22:07.200 --> 22:23.480]  Вроде так. Лямда на a квадрат b квадрат равно минус, да, c, a x0 либо y0. Ну вот мы знаем лямду. И если
[22:23.480 --> 22:29.760]  вот это изначально была нормированная прямая, то это будет просто единица. Потому что после
[22:29.760 --> 22:34.360]  нормировки у меня сумма квадратов первых коэффициентов это единица. Значит, это ешная
[22:34.360 --> 22:46.320]  единица. И лямда равно просто минус a x0 плюс b y0 плюс c. Ну нет, ладно, давайте не буду так
[22:46.320 --> 23:04.840]  считать. Давайте здесь будет просто a квадрат b квадрат. Пока рано. Вот так оставим. Ну и теперь
[23:04.840 --> 23:11.520]  значит, что такое тогда расстояние? Расстояние это длина этой проекции, то есть длина вектора ln.
[23:11.520 --> 23:20.760]  Расстояние от точки p до прямой l, если это была прямая l, это просто длина вектора лямда n.
[23:20.760 --> 23:30.320]  Значит, ну длина вектора лямда n это модуль лямда умноженный на длину n. Модуль лямда мы знаем,
[23:30.320 --> 23:36.120]  здесь нужно просто убрать минус и на скобке повесить модуль. А длина n это корень из a квадрат
[23:36.120 --> 23:42.280]  плюс b квадрат, потому что n это как раз таки вектор с координатами ab. Значит, корень из
[23:42.280 --> 23:45.400]  a квадрат плюс b квадрат здесь сократится. Останется такое выражение.
[23:56.720 --> 24:06.360]  Окей? Вот, настояние от точки до прямой. А теперь проекция. Проекция. Ну я не помню,
[24:06.360 --> 24:12.200]  как это обозначается. У меня пусть будет проекция на l от точки p. Это мы знаем, что это p плюс лямда
[24:12.200 --> 24:26.360]  n. p плюс лямда n. Давайте забудем, что он единичный. Давайте скажем, что он произвольный.
[24:28.360 --> 24:35.200]  Если он был произвольный, тогда все по-прежнему верно, и это результирует формулу. А если он
[24:35.200 --> 24:44.040]  был единичный длины, то у меня вот здесь единица, ну и здесь тоже единица. То есть это верно и в общем
[24:44.040 --> 24:47.600]  случае, но если изначально все было единичной длины, то я могу забить на знаменатель, потому
[24:47.600 --> 24:51.640]  что он единичный. Ну и на это я мог тоже забить, потому что он единичный. Формула останется та же,
[24:51.640 --> 24:59.080]  просто без деления на корень, который будет единицой равен. Так, ну и проекции. Давайте,
[24:59.080 --> 25:02.120]  наверное, я не буду дописывать эту формулу, потому что понятно, собственно, вот он ответ.
[25:02.120 --> 25:07.300]  Начальная точка плюс лямда умножить на n, лямда я знаю, n я знаю, ну и все нужно просто как бы
[25:07.300 --> 25:12.800]  умножить там векторное число, прибавить, и это будет ответ. А поскольку мы знаем здесь все
[25:12.800 --> 25:15.680]  составляющие этого ответа, то проекцию мы тоже умеем находить.
[25:32.120 --> 25:44.560]  Так, значит, с точкой прямой мы вроде все сделали. Ну, в частности, позволю себе заметить, что условия
[25:44.560 --> 25:48.880]  того, что p лежит на прямой равносильны тому, что расстояние равно нулю, равносильны тому,
[25:48.880 --> 25:57.120]  что вот здесь стоит ноль, то есть числитель ноль, то есть точка удовлетворяет поравнению прямой.
[25:57.120 --> 26:01.720]  То есть случай, экстремальный случай, когда точка лежит на прямой, здесь все сходится,
[26:01.720 --> 26:11.120]  это в точности, когда числитель равен нулю. Дальше давайте научимся пересекать две прямые.
[26:11.120 --> 26:31.960]  Пересечение двух прямых. Соответственно, a1x плюс b1y плюс c1 равно нулю и a2x плюс b2y плюс c2 равно нулю.
[26:31.960 --> 26:45.440]  Так, как мы будем решать такую систему? То есть, по сути, мне нужно решить такую систему
[26:45.440 --> 26:50.080]  линейных уравнений, ну и, скажем, сказать, сколько у нее есть решений. Как мы решаем
[26:50.080 --> 26:59.240]  такую систему, кто-нибудь помнит? Ну, если у нас есть конкретные числа a, b, c, то да, но в компьютере
[26:59.240 --> 27:02.800]  лучше немножко по-другому. То есть в гауссе может быть такая проблема, что если у вас там кто-нибудь
[27:02.800 --> 27:07.480]  из этих равен нулю, тогда нужно отдельный ифать. То есть, грубо говоря, какую перемену вы считаете
[27:07.480 --> 27:14.640]  главной, а какую через нее выражаете. И поэтому, короче, писать это не очень приятно. То есть,
[27:14.640 --> 27:21.160]  на бумажке, наверное, это проще, но в коде лучше немножко по-другому. Как мы еще решаем систему?
[27:21.160 --> 27:29.480]  Краймером, да. Для этого мы вводим определитель. Значит, давайте переформулируем все на языке матриц.
[27:39.480 --> 27:46.280]  Надо решить такую систему уравнений. Значит, она решается в частности методом краймера. Мы, во-первых,
[27:46.280 --> 27:55.000]  считаем определитель исходной матрицы 2 на 2. То есть это просто a1, b2, минус a2, b1. Дальше мы пытаемся
[27:55.000 --> 28:00.840]  столбец вот этих свободных членов подставить вместо каждого столбца исходной матрицы и считаем
[28:00.840 --> 28:06.840]  все такие определители. То есть delta1 это определитель матрицы, где я вместо первого столбца
[28:06.840 --> 28:14.280]  ставлю столбец свободных членов. То есть это минус c1, минус c2, b1, b2. Ну что это такое? Это там
[28:14.280 --> 28:24.840]  что-то. b1, c2, минус c1, минус b2, c1. То же самое delta2. Это когда я второй столбец заменяю на столбец
[28:24.840 --> 28:37.080]  свободных коэффициентов. То есть это определитель матрицы a1, a2, минус c1, минус c2, равно a2, c1, минус a1, c2.
[28:37.080 --> 28:45.680]  Значит, посчитали определитель. В общем случае, когда здесь матрица еще большего порядка, можно
[28:45.680 --> 28:50.080]  соответственно столбец свободных членов подставлять вместо каждого столбца, считать все такие
[28:50.080 --> 28:54.120]  определители. Ну и дальше утверждается тогда, что ответ
[28:59.680 --> 29:08.080]  x,y это точка delta1 делить на delta, delta2 делить на delta. В случае, конечно, если delta не 0.
[29:08.080 --> 29:24.040]  Значит, если delta не нулевая, то у нас точка перещения прямых однозначно задана. Вот она
[29:24.040 --> 29:33.320]  считается по таким вот формулам. Вот что тут написано. Значит, что такое случай delta не равно
[29:33.320 --> 29:43.920]  нулю. Значит, delta вот оно. Это 1b2 минус a2b1. И это в каком-то смысле, как это называется, мы чуть
[29:43.920 --> 29:51.080]  позже это подъем. В общем, псевдовекторное произведение нормальных направляющих векторов.
[29:51.080 --> 29:56.760]  То есть если я напишу здесь направляющий вектор, здесь направляющий вектор и напишу их, ну то есть
[29:56.760 --> 30:05.400]  это как бы а-ля векторное произведение. Давайте напишу формулу. Если есть два вектора, x1 и y1.
[30:05.400 --> 30:14.040]  Так, давайте я напишу квадратные скупки, бог с ним.
[30:14.040 --> 30:26.600]  То вот такое их псевдовекторное произведение это по сути ориентированная площадь прелограмма
[30:26.600 --> 30:35.960]  натянутого на эти два вектора. Вот есть вектор x1 y1, вектор x2 y2. Я натягиваю на них параллелограмм и
[30:35.960 --> 30:41.080]  считаю его ориентированную площадь. Она идет со знаком плюсом, если этот поворот положительно, то есть
[30:41.080 --> 30:46.520]  против всего стрелки с знаком минус, если он будет отрицательный. Вот это дает такой формулой. Ну и
[30:46.520 --> 30:52.360]  соответственно, да, то есть это как бы объем двумерной фигуры с базисом из этих двух векторов.
[30:52.360 --> 31:02.760]  И соответственно, равенство нулю вот этого вот определителя, это как раз таки означает, что два
[31:02.760 --> 31:07.960]  вектора, два направляющих вектора наших прямых, скажем два нормальных вектора, неважно, два
[31:07.960 --> 31:14.120]  направляющих вектора наших прямых задают параллелограмм нулевой площади. То есть они как бы
[31:14.120 --> 31:19.760]  ну либо коллинеарны, либо противонаправлены. То есть когда такой параллелограмм имеет нулевую
[31:20.580 --> 31:24.940]  только если у нас векторы с�想 направлены, либо они противонаправлены, то есть в любом случае
[31:24.940 --> 31:29.840]  они коллинеарны. А если векторы направляющие коллинеарны то и прямые параллельные, значит у
[31:29.840 --> 31:35.140]  них ну явно ни одна точка и slack OR 0 либо бесконечно много. То есть либо они параллельны,
[31:35.140 --> 31:41.940]  либо они просто совпадают. В противном же случае если у нас вектор не параллельный, если у нас
[31:41.940 --> 31:47.500]  направляющие векторы не параллельны, тогда определитель не 0 и у нас точка, trivial temple
[31:47.500 --> 31:52.780]  задается вот по такой формы. А если вы не верите или если вы не знаете метод Крамера,
[31:52.780 --> 31:58.460]  то можно просто явно подставить эти координаты в это матричное уравнение, проверяю, что здесь
[31:58.460 --> 32:18.420]  все сойдется. Вот, ну и здесь что мы, значит, что мы добились, у нас сейчас координаты могут
[32:18.420 --> 32:23.100]  быть рациональными. Если у нас исходные все координаты были целые, соответственно, координаты
[32:23.100 --> 32:28.340]  прямых были тоже целыми, дельточки у нас целые, а здесь возникает отношение дельт. А если мы хотим
[32:28.340 --> 32:34.780]  считать все точно и без погрешностей, то, ну, можно завести класс rational, который как раз хранит
[32:34.780 --> 32:40.420]  числитель-заминатель, там, делепехтный наибольший общеделитель, чтобы не плодить лишние, ну как бы
[32:40.420 --> 32:48.020]  лишние разряды в запястье, вот, и хранить это как дробь. Ну, либо хранить как не целое число, да,
[32:48.020 --> 32:53.260]  число с плавающей точкой, но тогда могут возникать проблемы какие-то округления, погрешности,
[32:53.260 --> 32:57.860]  всякие проблемы с точностью, и тогда, в частности, все сравнения нужно произвести с некоторой
[32:57.860 --> 33:03.860]  опять-таки погрешностью epsilon. А если мы знаем вот эту точку, если мы знаем, скажем, вот эту точку,
[33:03.860 --> 33:09.620]  и нам еще, нас еще про нее что-то спрашивают, скажем, лежит ли она на какой-то третей прямой.
[33:09.620 --> 33:15.740]  Мы посчитали эту точку, ну, приблизительно, да, с какой-то погрешностью, и нас спрашивают,
[33:15.740 --> 33:21.100]  лежит ли она вот на такой прямой. Ну, подставляем ее в уравнение третей прямой, и уже проверяем,
[33:21.100 --> 33:28.340]  что это не ноль, а, скажем, число, ну, не очень большое, что-то в, там, в интервале минус epsilon
[33:28.340 --> 33:33.100]  до epsilon, где epsilon что-нибудь, какая-нибудь маленькая погрешность, да, потому что если у нас вот здесь
[33:33.100 --> 33:38.540]  в определении появляется некая неточность, то есть, соответственно, потом при подстановке этих
[33:38.540 --> 33:43.300]  неточностей в уравнении прямой, у нас ответ может быть не ноль, а, ну, примерно ноль. Соответственно,
[33:43.300 --> 33:46.980]  если он попадает в некий маленький интервал, содержащий ноль, то мы говорим, что все хорошо,
[33:47.100 --> 33:52.100]  и, соответственно, все вот эти проверки надо делать с точностью до epsilon, потому что все равно вот
[33:52.100 --> 33:56.100]  это вот в ноль очень вряд ли обратится, но где-нибудь рядышком с нулем будет лежать.
[33:56.100 --> 34:02.340]  Так, окей, прямые пересекли.
[34:02.340 --> 34:09.300]  Дальше пересечение прямой окружности.
[34:17.820 --> 34:20.180]  Пересечение прямой окружности.
[34:20.180 --> 34:31.300]  Ну, тут есть куча способов как это делать.
[34:31.300 --> 34:41.780]  Значит, самые плохие – это те, которые используют какие-то тригонометрические функции. Скажем,
[34:41.780 --> 34:46.060]  как можно было бы решать, ну, то есть, по сути, мы должны решить некую систему уравнений,
[34:46.060 --> 34:51.740]  что ax плюс by плюс c равно 0 – это уравнение прямой, и уравнение окружности – это что x
[34:51.740 --> 34:57.980]  минус x0 в квадрате плюс y минус y0 в квадрате – это некая r в квадрате, да? Ну, что точек,
[34:57.980 --> 35:05.220]  удаленных на расстояние r от точки x0 и y0. Вот. Значит, ну, можно действовать по-разному.
[35:05.220 --> 35:11.540]  Самый плохой способ, я не буду его даже прописывать, это что-нибудь в стиле взять вот
[35:11.540 --> 35:16.500]  этот вот, ну, опустить проекцию, посчитать, соответственно, этот вектор проекции,
[35:16.500 --> 35:24.700]  да, вектора, который надо опустить. И потом можно посчитать углы от этой точки, от центра до
[35:24.700 --> 35:28.460]  точек пересечения, потому что мы знаем этот прямоугольный треугольник. Ну, скажем, что-нибудь
[35:28.460 --> 35:33.980]  в стиле, давайте повернем этот вектор на некие углы, влево-вправо, против часовой и почасовой,
[35:33.980 --> 35:38.620]  и получим какие-то вот эти точки, если мы еще правильно умножим этот вектор на нужные длины.
[35:38.620 --> 35:43.980]  Вот. Это очень плохо, потому что мы переходим к тригонометрии, хотя этого можно, на самом деле,
[35:43.980 --> 35:50.340]  избежать. Ну и вообще, соответственно, у нас во всем этом, во всей этой планеметрии, у нас есть,
[35:50.340 --> 35:56.500]  как бы, функции, я бы сказал, трех родов, да, операции математической. Первый — это всякие
[35:56.500 --> 36:03.260]  умножения, сложения, вычитания, деления. Это, ну, максимальная точность. Если мы живем в доблах,
[36:03.260 --> 36:09.860]  то это ассоциируется с минимальной погрешностью. Дальше идут всякие извлечения корня. Ну да,
[36:09.860 --> 36:17.020]  просто извлечение корня. Оно бывает. Вот оно было, когда считали проекцию, нам здесь надо было
[36:17.020 --> 36:20.940]  извлекать длину корня. Ну, понятно, что это более сложная операция, чем деление, значит, точность
[36:20.940 --> 36:25.220]  там тоже больше плывет. Ну и самое плохое — это всякие косинусы-синусы, потому что они еще более
[36:25.220 --> 36:30.020]  неточные. Как они там считаются, вообще Бог его знает. Может там какой-нибудь ряд Тейлора раскладывается,
[36:30.020 --> 36:34.860]  косинус по ряду Тейлора раскладывается и там где-нибудь обрубается. Ну в общем там с погрешностью
[36:34.860 --> 36:41.340]  все максимально нехорошо, поэтому тригонометрии лучше тоже избегать, пока это возможно. Вот,
[36:41.340 --> 36:49.340]  ну здесь это возможно. Итак, опять, как это решать? Можно, скажем, выразить из первого
[36:49.340 --> 36:55.300]  уравнения х и поставить его сюда, решить квадратный уравнение относительно у, но это работает только
[36:55.300 --> 37:01.260]  если а не ноль. Если а ноль, тогда нужно разрешать относительно у и подставлять у сюда, но это работает
[37:01.260 --> 37:07.140]  только если b не ноль. Поэтому, как бы в таком случае, в случае выражения, как бы, ну, наиболее
[37:07.140 --> 37:11.220]  естественного хода решения надо ифать два случая, соответственно, каждый из них программировать
[37:11.220 --> 37:17.420]  это не очень хочется. Поэтому мы поступим немножко по-другому. А именно мы посчитаем проекцию центра
[37:17.420 --> 37:24.100]  на нашу прямую. Это мы уже умеем делать. Давайте это была там точка с, это будет точка п, проекция.
[37:24.100 --> 37:33.540]  Проекцию мы уже опускали. Дальше. Ну что, надо сказать, что если расстояние от точки от центра до прямой
[37:33.540 --> 37:44.700]  больше, чем радиус, то решений нет. Если расстояние от центра до прямой l больше, чем радиус, то решений
[37:44.700 --> 37:55.500]  нет. Значит, это вот такой вот случай, да. Просто прямая лежит дальше, чем окружность. Во-вторых,
[37:55.500 --> 38:07.580]  если дистанс с точности равен r, то решение ровно одно, у нас происходит касание. Что решение это
[38:07.580 --> 38:19.420]  проекция. Ну просто п. Такой вот случай. Касание происходит. Ну и третье, если дистанс меньше,
[38:19.420 --> 38:37.380]  чем r, то у нас будет два решения. Их можно уйти, например, так. Мы знаем точку п, мы знаем направляющий
[38:37.380 --> 38:43.740]  вектор прямой l. Мы на самом деле знаем вот это вот расстояние. Потому что это катет в
[38:43.740 --> 38:49.180]  прямоугольном треугольнике. Один из катетов, в котором это расстояние от с до прямой. А гипотенуза
[38:49.180 --> 38:53.460]  это просто радиус. То есть мы знаем гипотенузу, мы знаем один катет, значит мы знаем второй катет.
[38:53.460 --> 39:00.060]  Отсюда мы можем просто сказать, что точки пересечения это п, плюс-минус направляющий
[39:00.060 --> 39:06.580]  прямой умножить на длину этого катета. Значит, мы знаем, собственно, те самые две точки. Давайте
[39:06.580 --> 39:28.100]  это напишем. Пусть x это корень квадратный из r в квадрате минус дист от c до l в квадрате.
[39:28.100 --> 39:35.780]  Это как раз длина вот этого катета, длина вот этого отрезка. Вот это x и вот это x. Значит,
[39:35.780 --> 39:41.260]  в качестве ответа нам нужно отступить от p в обе стороны, x умножить на единичный вектор,
[39:41.260 --> 39:49.540]  на единичный вектор нашей, ну направляющий вектор нашей прямой. Если, так, кончились у меня буквы,
[39:49.540 --> 39:59.540]  допустим, будет m маленькая, направляющий единичный, единичный направляющий вектор
[39:59.540 --> 40:17.900]  для l, то ответ это две точки, соответственно, p плюс xm и p минус xm. Потому что нам нужно отступить
[40:18.060 --> 40:23.700]  от p в любую из двух сторон на расстояние x вдоль вектора m. Ну, если он единичный
[40:23.700 --> 40:31.820]  длинный, то это просто вот такая вот добавочка к точке p, плюс xm или минус xm. Вот, ну и все,
[40:31.820 --> 40:40.500]  мы знаем все точки пересечения. Окей? Кайф.
[40:40.500 --> 41:00.620]  Так, последняя пересечения – это пересечения двухогружностей.
[41:00.620 --> 41:20.340]  Пересечения двухогружностей. Первая задается вот таким вот уравнением,
[41:20.340 --> 41:44.740]  вторая вот таким. Надо найти все их точки пересечения. Так, опять жду ваших предложений.
[41:50.340 --> 42:09.860]  Наверное, выражать, скажем, x из одного уравнения поставить в другое совсем
[42:09.860 --> 42:13.820]  убесно, потому что тогда это будет квадратное уравнение, там будут страточные штуки,
[42:13.820 --> 42:34.540]  мы корни этого уравнения еще в другое подставляем. Найдем уравнение как? Отношение чего?
[42:44.420 --> 42:49.860]  Сейчас, одну секунду, пытаюсь понять. А, да, я понял, типа вы строите линию центров,
[42:49.860 --> 42:56.460]  понимаете в каком отношении делит радикальная ось этот самый отрезочек и строите перпендикулярную
[42:56.460 --> 43:03.260]  к ней. Да, окей, валидная идея, но получить уравнение можно сильно проще. Можно на самом
[43:03.260 --> 43:12.700]  деле просто вычесть из одного уравнения другое и получить ровно то, о чем вы говорите. Это будет
[43:12.700 --> 43:23.020]  вот эта прямая, потому что она, ну, как бы множество решений вот этой системы и этой системы,
[43:23.020 --> 43:27.180]  сдобавленным этим, это одно и то же, потому что при вычитании уравнений у вас решения не
[43:27.180 --> 43:32.420]  меняются, значит эти две точки также будут лежать на этой прямой. Поэтому, значит, ну,
[43:32.520 --> 43:39.160]  формально можно сказать следующее, что система вот такая, равносильный системе вот такой.
[43:39.160 --> 43:47.260]  Ну, потому что, если какая точка x y удовлетворяет этой системе, то она удовлетворяет 1,
[43:47.260 --> 43:51.300]  потому что вот и она удовлетворяет этому, потому что удовлетворяет этому, и этому,
[43:51.300 --> 43:56.780]  значит их разности тоже. И наоборот, если какая-то точка удовлетворяла этой системе, то она удовлетворяет
[43:56.780 --> 44:00.940]  это единицы, и двойки, потому что раз этим, то их разности
[44:00.940 --> 44:01.940]  это минус это.
[44:01.940 --> 44:04.100]  Значит, двойки тоже удовлетворяют.
[44:04.100 --> 44:06.380]  Поэтому множество решений у обеих систем одинаковое.
[44:06.380 --> 44:09.980]  Значит, вместо того, чтобы решать вот это, мы можем
[44:09.980 --> 44:10.980]  решать вот это.
[44:10.980 --> 44:11.980]  От этого множество решений не изменится.
[44:11.980 --> 44:15.400]  Ну, а если я вычту одно из другого, то у меня как
[44:15.400 --> 44:18.460]  минимум сократятся здесь x квадрат, y квадрат, и на
[44:18.460 --> 44:20.780]  самом деле здесь получится просто уравнение прямой,
[44:20.780 --> 44:23.700]  которое и будет на самом деле вот этой радикальной
[44:23.700 --> 44:24.700]  осью.
[44:24.700 --> 44:28.660]  То есть, в случае, если у них есть две точки пересечения,
[44:28.660 --> 44:30.980]  как раз проходить через эти две точки, потому что множество
[44:30.980 --> 44:31.980]  решений не изменилось.
[44:31.980 --> 44:45.940]  Так, ну давайте напишем, что такое 1 минус 2, значит,
[44:45.940 --> 44:49.460]  x квадрата сократились, здесь будет, не знаю, зачем
[44:50.460 --> 44:59.300]  2x x1 плюс 2x x2, дальше, плюс x1 квадрат минус x2 квадрат,
[44:59.300 --> 45:11.660]  плюс минус 2y y1 плюс 2y y2, плюс y1 квадрат минус y2 квадрат
[45:11.660 --> 45:15.060]  равно r1 квадрат минус r2 квадрат.
[45:15.060 --> 45:16.660]  Вот такое уравнение.
[45:16.660 --> 45:17.940]  Это уже уравнение прямое.
[45:18.940 --> 45:23.500]  Потому что вот x на константу, вот y на константу, ну а это
[45:23.500 --> 45:25.340]  все одна большая константа.
[45:25.340 --> 45:27.300]  Если перенести в левую часть, то будет плюс c.
[45:27.300 --> 45:34.220]  Вот, ну и соответственно все, нужно просто будет пересечь
[45:34.220 --> 45:38.340]  окружность с вот такой прямой, а это мы уже умеем делать.
[45:38.340 --> 45:40.260]  То есть, на самом деле, просто одно вычитание и сведение
[45:40.260 --> 45:41.260]  задач к предыдущей.
[45:41.260 --> 45:47.340]  Ну и поскольку мы доказали, что множество решений не
[45:47.340 --> 45:51.260]  меняется, то эта задача ровно такая же, как исходная.
[45:51.260 --> 45:53.580]  Значит, никаких там дополнительных ифов делать не нужно, никаких
[45:53.580 --> 45:55.420]  условий больше не надо перебирать.
[45:55.420 --> 45:58.500]  Единственное, надо понять, когда это, ну настоящая прямая,
[45:58.500 --> 46:01.380]  когда это не прямая вообще, то есть, когда у нее а равно
[46:01.380 --> 46:02.380]  b равно нулю.
[46:02.380 --> 46:11.660]  Это не прямая, если у нее, ну, коэффициенты при a и b это
[46:11.660 --> 46:15.500]  нули, тогда либо это там, скажем, вообще 5 равно нулю,
[46:15.540 --> 46:18.340]  то есть, это система без решений, либо это нуль равно нулю
[46:18.340 --> 46:20.220]  и соответственно любая точка подойдет.
[46:20.220 --> 46:22.420]  Это будет соответственно в случае, когда окружности
[46:22.420 --> 46:24.500]  либо концентрические, либо они вообще совпадают.
[46:24.500 --> 46:28.140]  Вот, ну давайте, давайте, давайте поймем, когда вот
[46:28.140 --> 46:30.180]  это происходит, когда a равно b равно нулю.
[46:30.180 --> 46:35.260]  То есть, у меня что, у меня x1 равно x2, а y1 равно y2.
[46:35.260 --> 46:38.140]  Это в точности, вот эта вот система, равносильна
[46:38.140 --> 46:40.940]  тому, что мы получили какую-то кривую прямую, ну неправильную
[46:40.940 --> 46:41.940]  прямую.
[46:41.940 --> 46:44.700]  Да, потому что раньше мы считали, что прямая нормальная,
[46:44.700 --> 46:47.900]  ну, какая-то реально задающая некую прямую на плоскости.
[46:47.900 --> 46:51.020]  И это происходит, если только если хотя бы одна из a и b не
[46:51.020 --> 46:52.020]  нуль.
[46:52.020 --> 46:54.700]  Значит, соответственно, плохо, когда у них нулевые
[46:54.700 --> 46:57.300]  и a и b, а это в точности, да, то есть мы просто смотрим
[46:57.300 --> 47:01.180]  сюда, а это что такое, это 2x2-2x1 равно нулю только если
[47:01.180 --> 47:06.420]  у них равны x, b равно нулю, b это что такое, 2y2-2y1 равно
[47:06.420 --> 47:09.260]  нулю, если только если y1 равно y2.
[47:09.260 --> 47:11.580]  Поэтому проблемы могут возникать только если у них
[47:11.580 --> 47:12.580]  совпадают центры.
[47:12.580 --> 47:19.780]  Ну, давайте тогда, окей, то есть все-таки, наверное,
[47:19.780 --> 47:22.900]  одна проверка нам будет нужна, в самом начале давайте
[47:22.900 --> 47:25.900]  сравним, если у них одинаковые центры, то мы понимаем, как
[47:25.900 --> 47:26.900]  ведет себя ответ.
[47:26.900 --> 47:29.220]  Если у них одинаковые центры, то это либо концентрические
[47:29.220 --> 47:32.900]  окружности с разными радиусами, тогда нет решений, либо
[47:32.900 --> 47:36.420]  это просто одна и та же окружность, тогда решение
[47:36.420 --> 47:49.860]  это все точки лежащие на этой окружности, так, вопросики,
[47:49.860 --> 47:56.300]  хорошо, а у нас получится ну просто какая-то прямая,
[47:56.300 --> 47:58.580]  ну то есть если окружности вот так вот как-то расположены,
[47:58.580 --> 48:01.580]  то какая-то прямая просто, тоже на самом деле радикальная
[48:01.580 --> 48:16.980]  окружность, но не пересекаешься ни с одной из них, так, хорошо,
[48:16.980 --> 48:22.140]  ну и последнее из элементарного, это скалярное и векторное
[48:22.140 --> 48:26.860]  произведение, давайте я буду писать все-таки векторное
[48:26.860 --> 48:35.340]  произведение, потому что мне лень говорить много
[48:35.340 --> 48:39.980]  букв, значит скалярное что такое, есть два вектора,
[48:39.980 --> 48:51.580]  x1 и y1, x2 и y2, соответственно a и b, скалярное их произведение
[48:51.580 --> 48:58.980]  две формулы, первая через координаты, вторая через
[48:58.980 --> 49:02.060]  длины и угол между векторами, длина вектора a на длину
[49:02.060 --> 49:09.540]  вектора b на костюм с угла между ними, длина на длину
[49:09.540 --> 49:16.580]  b на костюм с фи, вот, начну это давайте без доказательств,
[49:16.580 --> 49:21.420]  это когда-то наверняка было, даже в школе наверно,
[49:21.420 --> 49:26.980]  вот скалярное произведение, значит, что это такое, точнее
[49:26.980 --> 49:29.280]  зачем это может быть нужно, например, за тем чтобы
[49:29.280 --> 49:32.300]  понимать какой угол между двумя векторами, вот есть
[49:32.300 --> 49:34.700]  два вектора и мы понимаем, что скалярное произведение
[49:34.700 --> 49:38.340]  между ними, мы можем его вот так вот считать, то
[49:38.340 --> 49:40.780]  есть вот эта формула, грубо говоря, для подсчета, а эта
[49:40.780 --> 49:45.460]  формула для качества анализа, и поэтому в частности
[49:45.600 --> 49:50.180]  мы видим, что знак вот этого проведения всего дает
[49:50.180 --> 49:52.420]  нам как бы понимание о том, какой угол между векторами,
[49:52.420 --> 49:54.780]  если знак положительный, то значит угол острый,
[49:54.780 --> 49:59.280]  костюм положительный, если угол острый, если равенство
[49:59.280 --> 50:03.340]  нулю, значит, вектор ортогональным, угол прямой и соответственно,
[50:03.340 --> 50:06.040]  если знак скалярный произведения отрицательный, то угол тупой,
[50:06.040 --> 50:11.780]  костюм отрицательный, давайте°' нарисуем, Buddha
[50:11.780 --> 50:20.960]  больше 0, угол прямой осенус равен 0, угол тупой осенус
[50:20.960 --> 50:27.000]  меньше 0. Соответственно, посчитав скалярные произведения
[50:27.000 --> 50:30.480]  по формуле через координаты, мы можем заключить о том,
[50:30.480 --> 50:35.240]  каково типа угол между векторами? Острый, тупой или прямой?
[50:45.480 --> 50:55.000]  Это скалярные произведения. Давайте еще векторные нарисуем.
[50:55.000 --> 51:04.600]  Опять два вектора A, B с координатами x1, y1, x2, y2. И их векторным произведением
[51:04.600 --> 51:15.040]  я буду называть вот такую штуку x1, y2, x2, y1. Это как раз та самая ориентированная площадь
[51:15.040 --> 51:21.640]  параллограмма. Пожалуйста, будьте внимательны. В нормальной математике A, B в квадратных скобках
[51:21.640 --> 51:26.360]  это нормальное векторное произведение, то есть это вектор, лежащий в перпендикулярной
[51:26.360 --> 51:31.640]  плоскости, длина которого ровно вот такая. Но мы пока живем в плоскости, то есть вот как бы,
[51:31.640 --> 51:38.640]  я не знаю, как это лучше обозначить, поэтому буду обозначать смешивая квадратные скобки
[51:38.640 --> 51:43.440]  наши с обычным пониманием. То есть это вот по сути длина вот того вектора, длина вот нормального
[51:43.440 --> 51:49.720]  вектора. Давайте нарисую. У меня здесь есть два какие-то вектора на парте. Их векторное
[51:49.720 --> 51:55.120]  нормальное произведение, оно нормальное в смысле, как бы, в определении обычном,
[51:55.120 --> 51:59.720]  это вектор в перпендикулярной плоскости, длина которого равна площади параллограмма,
[51:59.720 --> 52:09.280]  натянутого на вот те два вектора. А нам не нужен будет выход в третье измерение, потому что мы
[52:09.280 --> 52:15.120]  живем в плоскости, нам как бы не зачем это третье измерение. У нас будет просто написано площадь
[52:15.120 --> 52:22.080]  параллограмма или длина вот того вектора. Достраиваем параллограмм, считаем площадь.
[52:22.080 --> 52:28.480]  И более того, этот параллограмм у нас будет как бы ориентированный, и площадь будет ориентированная,
[52:28.480 --> 52:35.720]  что мы вот этот угол меряем при переходе от A к B. И соответственно, если он по часовой стрелке,
[52:35.720 --> 52:40.560]  то это отрицательное направление, площадь отрицательна. Если он против часовой стрелки,
[52:40.560 --> 52:47.280]  то есть в положительном направлении, то у нас соответственно площадь положительна. Ну а площадь
[52:47.280 --> 52:55.040]  параллограммы это что такое? Это A на B на синус phi, произвление длины на синус угла между ними.
[52:55.040 --> 53:09.560]  Где phi, вот здесь важно, phi это ориентированный угол. И это угол поворота от A к B. Если он против
[53:09.560 --> 53:13.560]  часовой стрелки, то все хорошо, угол положительный. Если он по часовой стрелке,
[53:13.560 --> 53:20.400]  как здесь, то угол отрицательный, соответственно, площадь отрицательная. И поэтому исходя из вот
[53:20.400 --> 53:25.880]  этой вот записи, исходя из этой формулы, по векторному произведению мы можем понять,
[53:25.880 --> 53:33.320]  в какую сторону находится направление кратчайшего поворота от A к B. Либо по часовой,
[53:33.320 --> 53:36.840]  если отрицательный векторный произведение, либо против часовой, если оно положительно.
[53:36.840 --> 53:47.560]  Опять давайте я это нарисую. Значит против часовой у нас вращение, против часовой,
[53:47.560 --> 53:58.760]  если синус phi положительен. Значит, если синус phi это 0, то тогда они либо сонаправлены,
[53:58.760 --> 54:08.040]  либо противонаправлены. Так нарисую. То есть они коллинеарны. Если только если синус phi равен 0,
[54:08.040 --> 54:15.840]  потому что синус phi равен 0, то в 0 и в π. То есть это как раз 0, это π. Ну и соответственно по часовой
[54:15.840 --> 54:22.600]  это когда у меня что-то, например, вот такое. Когда кратчайший направление поворота по часовой
[54:22.600 --> 54:34.600]  стрелке. Вот часовой. Это соответственно синус phi меньше 0. Значит знак вот этого выражения позволяет
[54:34.600 --> 54:39.400]  мне понять, в какую сторону находится направление кратчайшего поворота. А также мы в частности
[54:39.400 --> 54:43.240]  умеем проверить сонаправленность двух векторов. Это вот там, когда мы определитель считали в
[54:43.240 --> 54:48.640]  методе Краймера. У нас определитель был нулевой, если только если векторы сонаправлены. Вот как раз
[54:48.640 --> 55:00.680]  это случается. Ну вроде с этим все.
[55:00.680 --> 55:19.640]  Вот, окей. Значит вроде с элементарными всякими штуками разобрались. Теперь давайте
[55:19.640 --> 55:43.880]  к треангуляциям перейдем. Многоугольников. Ну, пример. Есть какой-то многоугольник странный.
[55:43.880 --> 55:50.600]  Мы хотим разбить его диагоналями на треугольнике. Диагональ это такой отрезок между вершинами,
[55:50.600 --> 55:56.480]  не соседними, который целиком лежит внутри многоугольника. Я могу нарисовать, например,
[55:56.480 --> 56:09.520]  что-нибудь вот такое. Нет, это не интересно. Вот, например, треангуляция. Был исходный нормальный
[56:09.520 --> 56:16.280]  многоугольник. Я провел в нем какие-то диагонали, не пересекающиеся. Так что теперь все разбилось
[56:16.280 --> 56:20.800]  на треугольники. Все треугольники в объединении дают исходный многоугольник. Вот, и мне нужно
[56:20.800 --> 56:25.360]  найти, ну, например, задача такая. По данному многоугольнику найти какую-нибудь его треангуляцию.
[56:25.360 --> 56:36.600]  Значит, зачем это может быть нужно? Ну, например, последующей причине. Вот представьте, что у вас
[56:36.600 --> 56:41.880]  есть некое помещение, видим многоугольника, ваша комната это многоугольник, огорожена стенами.
[56:41.880 --> 56:47.920]  Вы хотите все ваше помещение подсветить лампочками. При этом, когда вы ставите лампочку в какую-то точку,
[56:47.920 --> 56:54.520]  считая, что у вас все плоское, не объемное плоское. Значит, когда вы ставите лампочку в некоторую точку,
[56:54.520 --> 57:00.280]  она защищает все, что достижимо, как бы не заходя за стены. То есть вот это вот все она достигнет.
[57:00.280 --> 57:06.120]  Но как бы вот сюда она уже не зайдет, потому что здесь есть ограничение в виде стены,
[57:06.120 --> 57:12.160]  и она за угол не заворачивает. И вам нужно, ну, например, поставить как можно меньше лампочек так,
[57:12.160 --> 57:16.240]  чтобы весь многоугольник осветить. У вас есть, например, какая-то картинная галерея, вы хотите
[57:16.240 --> 57:21.240]  поставить там лампочки, чтобы все было видно, или каких-нибудь бабушек-охранец, которые будут
[57:21.240 --> 57:26.440]  стоять и смотреть, чтобы никто на картинах ничего не рисовал. И, соответственно, у каждой бабушки есть
[57:26.440 --> 57:30.160]  некое поле обзора, соответственно, за углы она ходить не может, потому что она сидит на стульчике.
[57:30.160 --> 57:37.200]  Вот. Ну и, соответственно, задача, да, нужно как-то, нужно как-то все покрыть. Один из возможных
[57:37.200 --> 57:41.880]  способов – это отреангулировать наш многоугольник, представить его как объединение
[57:41.880 --> 57:45.680]  треугольников, но дальше в каждом треугольнике понятно, что можно поставить по бабушке в любой
[57:45.680 --> 57:50.480]  точке, потому что если у нас есть треугольник, какой бы он ни был, мы одной бабушкой можем
[57:50.480 --> 57:55.360]  его полностью обслужить. Она все видит внутри этого треугольника, куда ее не поставь. Вот.
[57:55.360 --> 58:01.280]  Не минимальная, конечно, да. Ну, одно из доступных. Минимальная – это не простая задача,
[58:01.280 --> 58:10.840]  я даже не уверен, что вообще за пленум решаемая. Вот. Ну, как какое-то. Вот. И поэтому, в частности,
[58:10.840 --> 58:24.720]  может быть интересна треангуляция. Определение в итоге. Диагональ многоугольника – это
[58:24.720 --> 58:49.200]  отрезок, соединяющий две несоседние вершины. Две несоседние вершины. Такой, что, ну давайте
[58:49.200 --> 58:53.040]  формально полностью напишу, все его внутренние точки лежат во внутренности многугольника.
[58:53.040 --> 59:22.920]  То есть, на самой диагонали, кроме концов, все точки лежат строго внутри многоугольника.
[59:22.920 --> 59:30.800]  Значит, плохие примеры, чтобы все все поняли, значит, о чем речь. Ну, понятно дело, что если
[59:30.800 --> 59:35.160]  есть вот такой вот многоугольник, то, конечно, вот это не диагональ, потому что она лежит вообще
[59:35.160 --> 59:45.720]  целиком вне многоугольника. Что еще может быть? Может быть, что-нибудь вот такое. Так. Сейчас,
[59:45.720 --> 59:55.320]  одну секунду. Ну да, нет, все нормально нарисовал. Что-нибудь вот такое. И тогда вот это не диагональ,
[59:55.320 --> 01:00:07.400]  потому что она частично то там, то тут лежит. И наконец, последний плохой пример. Вот такая
[01:00:07.400 --> 01:00:13.400]  картинка. Когда вы соединили две точки, у вас на этом отрезке лежит другая вершина многоугольника.
[01:00:13.400 --> 01:00:17.560]  Это тоже плохая диагональ, потому что тогда, на самом деле, надо разбить вот на такую и на такую
[01:00:17.560 --> 01:00:22.200]  отдельно. Вот эта большая не считается диагональю, а эта считается диагональю. Отдельные маленькие
[01:00:22.200 --> 01:00:22.920]  кусочки считаются.
[01:00:43.400 --> 01:00:53.520]  Ну и, соответственно, определение на триангуляция многоугольника.
[01:00:53.520 --> 01:01:10.240]  Это, давайте я напишу, покрытие многоугольника не пересекающимися по внутренностям треугольником,
[01:01:10.240 --> 01:01:31.040]  стороны которых это стороны и диагонали. Это ощущение многоугольника не пересекающимися
[01:01:31.040 --> 01:01:45.800]  у внутренности треугольником, стороны которых это либо стороны исхода многоугольника, либо его
[01:01:45.800 --> 01:01:59.240]  диагонали. Стороны которых, стороны или диагонали исхода многоугольника.
[01:02:11.240 --> 01:02:15.720]  Определение более сложное, чем интуитивное понимание. Ну, конечно, надо покрыть его
[01:02:15.720 --> 01:02:19.400]  не пересекающимися треугольниками, где можно проводить как бы в качестве сторон, можно
[01:02:19.400 --> 01:02:23.960]  брать только стороны или диагонали исхода многоугольника. Если формально все проговорить,
[01:02:23.960 --> 01:02:47.000]  то вот оно такое. Определение, значит, если многоугольник задан перечислением своих
[01:02:47.000 --> 01:03:12.080]  вершин в каком-то порядке, если многоугольник задан перечислением своих вершин v1, v2, vn в порядке
[01:03:12.080 --> 01:03:40.960]  обхода, то треугольник v и минус один v и v и плюс один называется ухом. Интуитивно,
[01:03:40.960 --> 01:03:51.480]  если его можно безопасно отрезать. Иначе говоря, если внутри и на границе этого треугольника нет
[01:03:51.480 --> 01:04:03.600]  других вершин. Ухом это не я придумал слово, это более-менее общепризнанная терминология. Уши
[01:04:04.600 --> 01:04:27.360]  если внутри и на границе этого треугольника нет других вершин многоугольника. Ну а смысл ровно
[01:04:27.360 --> 01:04:32.240]  такой, что его можно безопасно отрезать и решать задачу на меньшем многоугольнике. Ну пример
[01:04:32.240 --> 01:04:41.840]  какой-нибудь. Если что-нибудь такое нарисую, например, вот это это ухо. Потому что я взял три
[01:04:41.840 --> 01:04:48.720]  подряд идущие последовательные вершины в нашем многоугольнике. В этом треугольнике, построенном
[01:04:48.720 --> 01:04:54.480]  по этим трём вершинам, ничего больше нет. Никакая другая вершина не лежит ни внутри, ни на границе.
[01:04:54.480 --> 01:04:59.600]  И это как бы и значит, что как раз можно спокойно это ухо отрезать, потому что в нём ничего больше
[01:04:59.600 --> 01:05:04.920]  не лежит. Этот треугольник целиком лежит внутри нашего многоугольника и больше ничему не мешает.
[01:05:04.920 --> 01:05:11.680]  Я могу его спокойно отрезать, это ухо отрезать и дальше треангулировать оставшуюся часть. То есть
[01:05:11.680 --> 01:05:17.840]  я по сути одну вершинку просто исключил из нашего многоугольника. Ну и тем самым как бы у меня
[01:05:17.840 --> 01:05:22.160]  ну задача свалилась, задача попроще на многоугольнике без одной вершины.
[01:05:36.160 --> 01:05:41.880]  Утверждение в любом многоугольнике есть хотя бы одно ухо.
[01:05:47.840 --> 01:06:07.160]  Есть хотя бы одно ухо. И соответственно, если мы докажем, если мы придаём какой-то алгоритм поиска
[01:06:07.160 --> 01:06:14.560]  какого-нибудь уха, то у нас тогда алгоритм триангуляции может быть такой. Давайте найдём
[01:06:14.560 --> 01:06:19.160]  в исходном многоугольнике ухо, отрежем его, получится многоугольник поменьше. Дальше отрежем
[01:06:19.160 --> 01:06:23.080]  от него ухо, получится ещё многоугольник поменьше и так далее и так далее, пока не останемся в конце
[01:06:23.080 --> 01:06:29.360]  треугольник, который сам по себе является своей треангуляцией. Ну доказательства, почему у уха всегда есть.
[01:06:29.360 --> 01:06:44.160]  Индукция по n по числу вершин в многоугольнике, индукция по n. База n равно 3 тривиальная,
[01:06:44.160 --> 01:06:51.960]  это случай, когда многоугольник это треугольник, и он и является и своей треангуляцией, и своим
[01:06:51.960 --> 01:06:57.200]  же ухом единственным. Здесь в частности есть ухо, можем вот это отрезать, это как бы внутри нет
[01:06:57.200 --> 01:07:09.840]  никаких других вершин. Переход. В переходе давайте мы скажем, что обязательно есть хотя бы одна
[01:07:09.840 --> 01:07:25.040]  выпуклая вершина. Есть вершина, угол при которой меньше 180 градусов. Угол при которой меньше p,
[01:07:25.040 --> 01:07:31.280]  потому что если все углы хотя бы p, то там не сойдется необходимая сумма углов. Сумма углов
[01:07:31.280 --> 01:07:36.040]  многоугольника это p на n-2, если все хотя бы p, то значит сумма углов будет хотя бы pn,
[01:07:36.040 --> 01:07:42.040]  противоречие. Что такое угол при вершине? Ну понятно, вот у нас есть некий многоугольник,
[01:07:42.040 --> 01:07:54.840]  что такое угол при вершине? Это вот как бы угол между двумя сторонами, соседними, направлены
[01:07:54.840 --> 01:07:58.520]  во внутренность нашего многоугольника, то есть вот здесь вот угол меньше p, а вот здесь вот угол,
[01:07:58.520 --> 01:08:03.120]  когда мы рисуем при этой вершинке, он больше p, он вот такой, он как бы развернутый, потому что
[01:08:03.120 --> 01:08:08.200]  здесь некая не выпуклость наблюдается, то есть у меня вот внутренняя часть этого угла, вот она,
[01:08:08.200 --> 01:08:13.800]  точнее наружная, она меньше p, она как раз лежит вне многоугольника, а та, которая внутри
[01:08:13.800 --> 01:08:19.320]  многоугольника, она больше, чем p, то есть я как бы пытаюсь перейти от одного вектора к другому за
[01:08:19.320 --> 01:08:25.560]  счет вращения только внутри многоугольника, и вот этот угол я измеряю, какие-то больше p,
[01:08:25.560 --> 01:08:34.240]  какие-то меньше, вот хотя бы один меньше p есть, а иначе, иначе не сойдется сумма углов,
[01:08:34.240 --> 01:08:43.320]  не сойдется сумма углов, которая, как мы наверное помним из какой-нибудь школьной программы,
[01:08:43.320 --> 01:08:49.880]  это всегда p на минус 2, сумма углов на многоугольник всегда ровно такая, вот, значит такая вершина есть,
[01:08:49.880 --> 01:08:51.000]  давайте ее поизучаем.
[01:09:11.680 --> 01:09:17.240]  У сейчас какая-то вершина v и, соответственно, у нее есть две соседние, v и минус 1, v и плюс 1,
[01:09:17.240 --> 01:09:28.080]  предыдущая и следующая. Идеальный случай, если это ухо, если треугольник образует ухо, то все
[01:09:28.080 --> 01:09:31.920]  замечательно, мы его можем просто отрезать, мы его нашли и, собственно, переход доказан.
[01:09:31.920 --> 01:09:40.160]  Значит, что плохого может быть, если это не ухо? Плохо может быть, если где-то здесь лежат другие
[01:09:40.160 --> 01:09:46.160]  какие-то точки, если где-то внутри этого треугольника или одного границы есть некие другие вершины или
[01:09:46.600 --> 01:09:52.720]  какие-то другие точки нашего многоугольника. Ну, смотрите, точек, которые пересекали бы вот эти две
[01:09:52.720 --> 01:09:57.240]  стороны, точнее, сторон, которые пересекали бы вот эти две стороны, у нас нет, по предположению,
[01:09:57.240 --> 01:10:02.400]  которые я не сформулировал. Мы считаем, что многоугольник простой. В любом простом многоугольнике.
[01:10:02.400 --> 01:10:11.080]  Значит, простой — это тот, у которого вот эта вот ломаная, проходящая по всем сторонам,
[01:10:11.080 --> 01:10:24.760]  она не самопересекается. То есть, ломаная, давайте я нашу ломаная периметра, периметра не самопересекается.
[01:10:24.760 --> 01:10:34.680]  То есть, чего-нибудь вот такого у нас нет. Вот это считается, что это неадекватный многоугольник,
[01:10:34.680 --> 01:10:40.440]  мы так и не рассматриваем. У нас многоугольники всегда простые. Соответственно, тогда у нас,
[01:10:40.440 --> 01:10:45.440]  ну, как ломаная устроена, где-то начинается, вот так вот проходит, вот так идет и дальше
[01:10:45.440 --> 01:10:49.560]  где-то заканчивается. Понятно, что она не может пересечь, как бы она не может зайти здесь, не
[01:10:49.560 --> 01:10:54.520]  может зайти здесь, потому что это стороны. У нас тогда было бы самопересечение. Значит, такого не
[01:10:54.520 --> 01:10:58.680]  бывает. Проблема могут быть только вот с этой вот диагональю, потому что это не сторона,
[01:10:58.680 --> 01:11:02.040]  и сюда может кто-то заходить. То есть, например, может быть что-нибудь вот такое. Вполне себе
[01:11:02.040 --> 01:11:05.720]  такой многоугольник может быть. И у нас тогда во внутренности нашего треугольника кто-то есть.
[01:11:05.720 --> 01:11:11.280]  Это плохо. Вот. Ну, соответственно, давайте пропишем два случая. Первый, что если это действительно
[01:11:11.280 --> 01:11:22.080]  ухо, если v и минус 1 v и v и плюс 1 это ухо, то победа. Мы уже все доказали, потому что надо было
[01:11:22.080 --> 01:11:29.200]  доказать существование хотя бы одного уха. Значит, иначе внутри этого треугольника кто-то есть.
[01:11:29.340 --> 01:11:36.840]  Внутри этого треугольника кто-то есть. Может быть несколько точек. Давайте нарисуем что-нибудь
[01:11:36.840 --> 01:11:43.120]  совсем плохое. Вот такие точки, вот такие. Короче, что-нибудь очень плохое может быть
[01:11:43.120 --> 01:11:49.840]  внутри этого треугольника, может быть много точек. Так вот, давайте тогда среди всех плохих точек,
[01:11:49.840 --> 01:11:57.920]  среди всех вершин, находящихся внутри нашего треугольника или на его границе, выберем самую
[01:11:57.920 --> 01:12:19.080]  далеку от прямой v-1 v-1. Среди всех вершин многоугольника,
[01:12:19.080 --> 01:12:35.960]  попадающих в треугольник вот этот самый. Выберем самую далекую от прямой нашей севдодиагонали.
[01:12:49.080 --> 01:13:02.800]  Ну вот здесь это, видимо, будет вот эта точка. Пусть такая некая вершина q, ну или давайте
[01:13:02.800 --> 01:13:18.400]  лучше vg. Тогда утверждаю, что v и vg это диагональ. Пусть выбранная точка это vg, тогда v и vg это
[01:13:18.400 --> 01:13:29.200]  диагональ. Выберите диагональ. Еще раз, среди всех потенциально плохих точек я выбрал самую
[01:13:29.200 --> 01:13:34.320]  далекую от прямой, вот она vg, и тогда утверждаю, что отрезок, соединяющий v и с этой самой точкой,
[01:13:34.320 --> 01:13:39.520]  это обязательно диагональ. То есть, что такое диагональ? Это отрезок между вершинами, такой,
[01:13:39.520 --> 01:13:46.160]  что вся его внутренняя часть не пересекается со стороны многогольника, то есть она целиком
[01:13:46.160 --> 01:13:51.840]  внутри многогольника. Значит, если бы это было внезапно не так, и если бы на этом отрезке v и vg...
[01:13:51.840 --> 01:14:04.160]  Так, еще раз, какое у нас определение, что внутренние точки лежат во внутренности
[01:14:04.160 --> 01:14:28.680]  многоугольника. Ну да, смотрите, если предположить, что не все точки этого отрезка лежат в многоугольнике,
[01:14:28.680 --> 01:14:32.520]  то, грубо говоря, у нас должна была быть какая-нибудь вот такая картинка, что где-то
[01:14:32.520 --> 01:14:37.320]  вот здесь вот этот отрезок пересекает либо сторона, либо на нем лежит вообще какая-нибудь
[01:14:37.320 --> 01:14:45.640]  вершина другая. Да, ну потому что у меня понятно, что эти точки лежат внутри многоугольника, а дальше
[01:14:45.640 --> 01:14:49.840]  не все лежат во внутренности, то есть как бы кто-то лежит либо на границе, либо вовне, значит,
[01:14:49.840 --> 01:14:55.160]  ну какая-то страна точно его пересекает. Ну извините, если вообще здесь лежит какая-то другая вершина vk,
[01:14:55.160 --> 01:15:01.680]  то мы неправильно выбрали vg, потому что vk это другая вершина, лежащая внутри треугольника v-1,
[01:15:02.640 --> 01:15:08.440]  просто потому что она лежит на этом отрезке, и она более далекая от этой стороны. Значит,
[01:15:08.440 --> 01:15:22.120]  почему vk более далекая от прямой v-1 v и плюс один? То есть на самом деле нам достаточно показать,
[01:15:22.120 --> 01:15:27.280]  что вот по эту сторону от прямой, точнее мы знаем, что по эту сторону от прямой нет других точек,
[01:15:27.280 --> 01:15:34.160]  нет других вершин нашего многоугольника, просто потому что vg самая далекая от той прямой,
[01:15:34.160 --> 01:15:38.400]  значит, нет никаких других вершин по эту сторону от прямой внутри этого треугольника. Ну собственно,
[01:15:38.400 --> 01:15:44.400]  значит, как раз что в частности на этом отрезке других точек нет, поэтому здесь не может быть
[01:15:44.400 --> 01:15:48.800]  никаких других точек. Вот, а если бы здесь было какое-нибудь пересечение со стороной,
[01:15:48.800 --> 01:15:55.080]  что-нибудь вот такое было бы, например, ну тогда понятно, что хотя бы один из концов этой стороны
[01:15:55.120 --> 01:16:02.380]  лежит обязательно вот в этой полуплоскости, потому что если оба конца лежат вне полуплоскости,
[01:16:02.380 --> 01:16:06.920]  то этот отрезок не может пересекать этот отрезок, потому что вот этот целиком в нашей
[01:16:06.920 --> 01:16:11.720]  полуплоскости лежит, ну и значит тогда один из концов должен опять-таки лежать в этой
[01:16:11.720 --> 01:16:16.980]  полуплоскости, ну иборле того он должен лежать в этом треугольнике, потому что
[01:16:16.980 --> 01:16:25.980]  Короче говоря, никаким образом этот отрезок не может лежать вне нашего многугольника,
[01:16:25.980 --> 01:16:30.060]  на нем нет других вершин, и он не может пересекаться никакой другой стороной,
[01:16:30.060 --> 01:16:34.180]  потому что если пересекался, то, скажем, вот этот его конец должен был бы быть той самой вершины,
[01:16:34.180 --> 01:16:37.300]  куда мы провели вот это ребро, потому что это более далекое от этого.
[01:16:37.300 --> 01:16:41.340]  Давайте что-нибудь из этого напишем.
[01:16:41.340 --> 01:17:06.900]  На 3 ВИ, ВЖ не может быть других вершин.
[01:17:07.060 --> 01:17:17.820]  Так как иначе ВЖ была бы не самой далекой прямой.
[01:17:29.460 --> 01:17:33.900]  И более того, этот отрезок не может никим пересекаться никакой стороной.
[01:17:33.900 --> 01:17:45.180]  Отрезок ВИ, ВЖ не может пересекаться никакой другой стороной,
[01:17:45.180 --> 01:17:55.500]  не может пересекаться другой стороной многугольника.
[01:18:04.900 --> 01:18:11.740]  Ну как раз вот по этим причинам, что раз точка пересечения лежит дальше от этой прямой,
[01:18:11.740 --> 01:18:17.060]  значит хотя бы один из концов этой стороны лежит дальше от этой прямой, чем ВЖ,
[01:18:17.060 --> 01:18:20.620]  и внутри нашего треугольника, потому что иначе было бы сам пересечение.
[01:18:20.620 --> 01:18:49.100]  Так как в противном случае, один из ее концов точно лежит внутри треугольника,
[01:18:49.100 --> 01:18:57.180]  и дальше от прямой выемнуться не выплески, ничем в ВЖ.
[01:18:57.180 --> 01:19:11.060]  Вот, противоречие, потому что ВЖ самая далекая. Ну все, значит диагональ.
[01:19:11.060 --> 01:19:23.740]  А раз мы нашли диагональ, то можем на самом деле нашу задачу разбить на две. Мы можем наш
[01:19:23.740 --> 01:19:29.300]  многугольник представить в виде двух. На то, что там, грубо говоря, выше диагональ и то, что ниже.
[01:19:29.300 --> 01:19:39.140]  Мы нашли некую диагональ, вот она, и соответственно здесь там что-то было еще вот такое.
[01:19:39.140 --> 01:19:48.580]  Бог пойми что. Давайте эту диагональ проведем. Когда мы разбили наш исходный многугольник на
[01:19:48.580 --> 01:19:53.300]  два куска, верхний и нижний, оба эти куска это какие-то корректные многугольники,
[01:19:53.300 --> 01:20:00.780]  значит по предложению индукции, ну в них меньшее число вершин, в каждом из них меньшее число
[01:20:00.780 --> 01:20:11.340]  вершин, значит по предложению индукции и здесь есть ухо, и здесь есть ухо. Так, сейчас, одну секунду.
[01:20:11.340 --> 01:20:23.780]  Кто-нибудь видит проблему? Вот я сказал, что да, они могут проходить вот здесь верно. Может быть
[01:20:23.780 --> 01:20:29.060]  такое, что уши, которые мы нашли, они вот такие, и в обеих частях они как бы корректные,
[01:20:29.060 --> 01:20:32.660]  но во всем многугольнике это не уши, это вообще какие-то отдельные куски.
[01:20:32.660 --> 01:20:43.900]  Верно, ровно так мы и сделаем, да. Значит давайте тогда переформируем утверждение,
[01:20:43.900 --> 01:20:55.100]  что всегда есть хотя бы одно, а если n хотя бы 4, то есть хотя бы два, вот так. Есть хотя бы два уха.
[01:20:55.100 --> 01:21:15.580]  Не пересекающиеся по внутренностям, не пересекающиеся по внутренностям, да, отлично.
[01:21:15.580 --> 01:21:23.220]  Так, все, подправили утверждение, база остается такой же, все стригуем, ну понятно, там одно ухо,
[01:21:23.220 --> 01:21:28.580]  значит что здесь? Тут пока что все, мы не, мы не, мы не, мы не, мы не, мы не, мы не пользовались
[01:21:28.580 --> 01:21:33.220]  существованием ушей, мы доказали, что есть диагонали, вот мы ее нашли. Дальше, мы знаем,
[01:21:33.220 --> 01:21:38.300]  что каждый из двух половинок, это либо треугольник, либо там внутри есть хотя бы два уха,
[01:21:38.300 --> 01:21:48.180]  не пересекающиеся по внутренностям. Если хотя бы одна из них треугольник, то есть вот такая
[01:21:48.180 --> 01:21:57.300]  картинка, а другая не треугольник, то можем просто взять из этого не треугольника два не
[01:21:57.300 --> 01:22:06.060]  пересекающихся уха. Опять плохо, сейчас, на секунду. Да, одно из тех, которые не содержат этой стороны,
[01:22:06.060 --> 01:22:10.460]  да, да, да, действительно. Окей, давайте тогда все случаи аккуратно нарисую, чтобы ничего не
[01:22:10.460 --> 01:22:29.500]  потерять. Самый простой случай, когда у нас обе, обе штуки треугольники. Ну тут понятно, да,
[01:22:29.500 --> 01:22:35.100]  просто у нас как бы два треугольника, они лежат по разные, по разные стороны от нашей стороны В
[01:22:35.100 --> 01:22:42.620]  и ВЖ, понятно, что они как раз все самые два уха. Значит, если один треугольник, а другой какой-то
[01:22:42.620 --> 01:22:47.220]  большой наугольник, в котором хотя бы два уха по предположению индукции, хотя бы два, и причем
[01:22:47.220 --> 01:22:53.220]  эти два уха не пересекаются. Значит, тогда, поскольку они не пересекаются, то максимум один, одно из этих
[01:22:53.220 --> 01:22:57.100]  ушей содержит эту сторону, да, то есть вот этот наугольник и максимум одно из ушей содержит эту
[01:22:57.100 --> 01:23:01.700]  сторону, потому что если хотя бы два, то значит, ну там какая-нибудь точка бесконечно близкая к этой
[01:23:01.700 --> 01:23:06.580]  стороне лежит в обоих треугольниках. Значит, ну в худшем случае у меня есть что-нибудь вот такое,
[01:23:06.580 --> 01:23:14.540]  ухо, и еще вот здесь вот ухо. Тогда я могу взять треугольник, вот этот вот, и одно из тех двух ушей,
[01:23:14.540 --> 01:23:25.740]  которое не содержит этой стороны В и ВЖ. Значит, треугольник, треугольник плюс одно из ушей,
[01:23:25.740 --> 01:23:37.660]  не содержащие стороны В и ВЖ. Вот, ну и в последнем случае, когда у меня оба наугольника какие-то
[01:23:37.660 --> 01:23:43.340]  длинные, вот такие вот, каждым из них есть хотя бы два уха, то выполняется опять то же самое,
[01:23:43.340 --> 01:23:50.060]  в обоих наугольниках есть хотя бы по одному уху, не содержащему вот этой вот стороны. Значит,
[01:23:50.060 --> 01:24:03.740]  они будут корректными ушами в большом наугольнике. Берем по одному уху из обоих частей, из обеих
[01:24:03.740 --> 01:24:17.380]  частей, опять-таки не содержащим стороны В и ВЖ. Поскольку они по предпочтению индукции
[01:24:17.380 --> 01:24:21.700]  внутри не пересекались, значит, хотя бы одно не содержит этой стороны. А значит,
[01:24:21.700 --> 01:24:27.500]  они являются корректными ушами во всем большом наугольнике. Вот, ну все, вроде доказали,
[01:24:27.500 --> 01:24:33.220]  да, значит, всегда есть два уха хороших, не пересекающихся по внутренности. Вот, значит,
[01:24:33.220 --> 01:24:38.140]  на самом деле то, что нам вот про два уха, нам нужно было только, чтобы индукция корректно у нас
[01:24:38.140 --> 01:24:42.460]  прошла, на самом деле содержательная часть вот она, что всегда есть хотя бы одно ухо. И мы более
[01:24:42.460 --> 01:24:46.540]  или менее предъявили алгоритму, как его искать. Так, извините, что задержал? Сейчас, две минуты.
[01:24:46.540 --> 01:24:55.140]  Значит, алгоритм FindEar. Значит, как он работает? Он работает за линейное время. Он берет
[01:24:55.140 --> 01:25:03.300]  наугольник, находит в нем выпуклую вершину вот этой самой ВИ, проверяет этот треугольник на то,
[01:25:03.300 --> 01:25:07.780]  является он ухом или нет. Если не является, то берет эту самую ВЖ. То есть, пока что просто нашел
[01:25:07.780 --> 01:25:13.660]  такой диагональ. А дальше он запускается рекурсивно либо здесь, либо здесь, ищет одно ухо.
[01:25:13.660 --> 01:25:20.900]  За время, так, может быть, плохо, да?
[01:25:23.900 --> 01:25:27.380]  Ладно, давайте, давайте, не буду задерживать. Давайте в следующий раз вот здесь добьем,
[01:25:27.380 --> 01:25:30.380]  как довести это до конца. Спасибо.
