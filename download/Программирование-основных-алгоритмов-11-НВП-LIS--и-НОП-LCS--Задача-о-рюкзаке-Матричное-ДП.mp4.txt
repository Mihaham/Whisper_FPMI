[00:00.000 --> 00:18.000]  В динамике их обычно есть и их много.
[00:18.000 --> 00:25.000]  То есть, если много раз подникает одна из вас удача, то перейдет к нам еще динамика.
[00:25.000 --> 00:32.000]  Жарная амбаритма. Здесь сложнее сказать, потому что обычно их там просто нет.
[00:32.000 --> 00:41.000]  И набер не возникает, поэтому давайте надеемся, что их крайне мало.
[00:41.000 --> 00:53.000]  В полном переборе их может быть что много, что мало, их все равно заново все время считают.
[00:53.000 --> 00:58.000]  Раз, решаем.
[00:58.000 --> 01:03.000]  Ну, например, вспомним задачу кузнечки.
[01:03.000 --> 01:06.000]  Там кузнечки, которые имеют прибыль на один вперед и на два вперед.
[01:06.000 --> 01:11.000]  Там надо собрать либо максимум, максимально возможную сумму, либо еще что-нибудь.
[01:11.000 --> 01:15.000]  И у нас там много раз возникало то, что мы вынудили были смотреть назад.
[01:15.000 --> 01:20.000]  То есть, при подсчете DP этого, мы смотрели на DP и минус два и минус один.
[01:20.000 --> 01:24.000]  То есть, никак, у вас каждую задачу, каждую подачу числялось бы по два раза.
[01:24.000 --> 01:27.000]  Если бы вы явно не погнали объекта.
[01:27.000 --> 01:32.000]  Здесь. Ну, жарная амбаритма, мы выяснили, что во-первых, она не работает.
[01:32.000 --> 01:37.000]  Во-вторых, там перескальчивая подача вообще не будет, если вы жарным амбаритмом действуете.
[01:37.000 --> 01:40.000]  Ну, и полный перебор, ну...
[01:40.000 --> 01:41.000]  Очень долго.
[01:41.000 --> 01:44.000]  Ну, там, наверное, экспоненциально было бы даже быть.
[01:44.000 --> 01:49.000]  Потому что с каждой позиции из два варианта выбора, например, на один вперед или на два вперед,
[01:49.000 --> 01:52.000]  что-то порядка 20 мин.
[01:52.000 --> 01:55.000]  Ну, около того. По большой 20 мин вариант же.
[01:55.000 --> 01:58.000]  Нет. По-моему, там в точности числа Фибоначчи.
[01:58.000 --> 02:02.000]  Да? Ну, ничего. А, ну, окей, просто правда.
[02:02.000 --> 02:03.000]  Ну, это не особо важно.
[02:03.000 --> 02:06.000]  Короче, вариант один важный, что это экспоненциальный рост.
[02:06.000 --> 02:09.000]  Экспоненциальный рост нам вообще никак не требует.
[02:09.000 --> 02:13.000]  И мы будем там скорее верить, что вот эта вот штука мы будем пользоваться примерно никогда.
[02:13.000 --> 02:17.000]  Вот. Второй критерий.
[02:17.000 --> 02:24.000]  Это, так сказать, на чем мы рассматриваем оптимальность под задачу.
[02:24.000 --> 02:27.000]  Оптимальность решения.
[02:27.000 --> 02:29.000]  Формулируем это так.
[02:29.000 --> 02:33.000]  Сейчас я напишу это для дофей и для жаренька.
[02:33.000 --> 02:35.000]  Ну, по этому счету я не веду.
[02:35.000 --> 02:43.000]  В одиночном программировании мы подозреваем, что у нас есть оптимальное решение под задачу просто меньшего размера.
[02:43.000 --> 02:48.000]  В плане того, что у нас есть какое-то состояние, мы уберем оптимальный вариант.
[02:48.000 --> 02:54.000]  Нет. А мы рассматриваем, что у нас есть под задачей меньшего размера оптимальное решение.
[02:54.000 --> 03:04.000]  То есть, у нас для задачи меньшего размера.
[03:04.000 --> 03:11.000]  В очередь, тогда, как жадники, рассматриваем, что вы находитесь в том состоянии, и вы выбираете локально лучшего варианта.
[03:11.000 --> 03:20.000]  То есть, пузнечики встали в какой-то клетке и верили, что если вы проигрываете либо на 1, либо на 2 вперед и выберете лучшего варианта, то это даст вам глобальный оптим.
[03:20.000 --> 03:23.000]  То есть, каждый локальный шажок приводит вас...
[03:23.000 --> 03:29.000]  То есть, если вы каждый раз действуете оптимально, локально именно, то вы придете к оптиму в итоге.
[03:29.000 --> 03:34.000]  Вот. Ну, мы выяснили, что это в общем случае неправда.
[03:34.000 --> 03:41.000]  То есть, здесь подозревается, что у вас оптимальность локальная.
[03:41.000 --> 03:48.000]  На каждом шаге.
[03:48.000 --> 03:53.000]  Ну, и в полном переборе, каждое решение активально построено.
[03:53.000 --> 03:58.000]  Которое вы рассмотрели, но вообще здесь просто прочее.
[03:58.000 --> 04:07.000]  То есть, основное отличие DPA жадника в том, что у нас DPA много пересекающихся поддодач, и у нас есть оптимальность именно для задачи меньшего размера.
[04:07.000 --> 04:13.000]  Так как в жаднике у нас обычно мало пересекающихся поддодач, и при этом у нас оптимальность локальная.
[04:13.000 --> 04:20.000]  То есть, мы в текущем состоянии идем в лучший вариант, веря, что в итоге это нам даст победу.
[04:20.000 --> 04:24.000]  Окей? Отлично.
[04:24.000 --> 04:30.000]  Ну, и приобрести инью разрешения.
[04:30.000 --> 04:35.000]  Окей. Ну, теперь поедем дальше ознакомиться с разной задачей на DPA.
[04:35.000 --> 04:42.000]  И первая задача, как будет наибольшего, заставить что-то подследовать.
[04:54.000 --> 05:00.000]  Или сокращенный MVP.
[05:00.000 --> 05:06.000]  Или the longest increasing subsequence.
[05:06.000 --> 05:11.000]  Ну, значит, формулироваться очень просто.
[05:11.000 --> 05:18.000]  Данку этой масси, ну, и последовательности, а1 на n,
[05:18.000 --> 05:23.000]  надо выбрать, ну, и найти.
[05:23.000 --> 05:41.000]  И каты от одного до n такие, что p1 и каты.
[05:41.000 --> 05:50.000]  А это каты, при этом k максимально.
[05:50.000 --> 05:52.000]  Вот.
[05:52.000 --> 06:02.000]  То есть, в нашем случае, давайте пример проведем.
[06:02.000 --> 06:10.000]  Начнем такого.
[06:10.000 --> 06:14.000]  Ну, что-то вроде бы вот такое вот.
[06:14.000 --> 06:18.000]  Длина 0, 1, 3, 4.
[06:18.000 --> 06:25.000]  Вроде бы длины 6 здесь нигде нет.
[06:25.000 --> 06:27.000]  Ну, давайте подумаем, как что-то.
[06:27.000 --> 06:29.000]  Ну, полным перебором понятно, как.
[06:29.000 --> 06:33.000]  Вы перебираете все возможные подпоследовательности и проверяете их на обрастание.
[06:33.000 --> 06:35.000]  Окей.
[06:35.000 --> 06:40.000]  Давайте прийдем в какой-нибудь жадный алгоритм.
[06:40.000 --> 06:42.000]  Выбирать самое маленькое число?
[06:42.000 --> 06:46.000]  Ну да, давайте возьмем, наверное, вот мы стоим.
[06:46.000 --> 06:48.000]  И если мы верим, что это элемент включает,
[06:48.000 --> 06:51.000]  тогда мы берем просто самый меньший элемент длины него.
[06:51.000 --> 06:53.000]  Постоянно.
[06:53.000 --> 06:55.000]  Например, в том, что мы верим, что он включается.
[06:55.000 --> 06:57.000]  Если нет, то не понятно, что делать.
[06:57.000 --> 06:58.000]  Окей, хорошо.
[06:58.000 --> 07:01.000]  Тогда допустим, что мы перейдем здесь.
[07:01.000 --> 07:06.000]  И мы искренне верим, что нам нужно брать самый меньший элемент.
[07:06.000 --> 07:08.000]  Слева, ну, справа от нас.
[07:08.000 --> 07:12.000]  Берем минус один, там 0, 1, 3, 4.
[07:12.000 --> 07:15.000]  Ну, здесь это сработает.
[07:15.000 --> 07:18.000]  Ну, может здесь работать, почему?
[07:21.000 --> 07:24.000]  Может перейдем, например, когда это не работает?
[07:27.000 --> 07:30.000]  Ну, вот пример, когда это сработает.
[07:30.000 --> 07:34.000]  Вы возьмете сразу минус один, и закончится ваше путешествие.
[07:38.000 --> 07:40.000]  Ну, давайте попробуем решить это динамикой.
[07:40.000 --> 07:42.000]  Как мы с вами уже выяснили,
[07:42.000 --> 07:46.000]  нам нужно свести так задачу меньшего размера.
[07:48.000 --> 07:50.000]  Давай действовать как в кузнечке.
[07:50.000 --> 07:54.000]  Будем учиться искать решения для префикса подпоследовать.
[07:54.000 --> 07:56.000]  Для префикса нашего массива.
[07:56.000 --> 07:59.000]  То есть для каких-то первых, какая элемента.
[07:59.000 --> 08:01.000]  Вот, да.
[08:01.000 --> 08:04.000]  Давайте, в общем, решим задачу для код префикса.
[08:04.000 --> 08:08.000]  То есть если мы знаем ответ, вот здесь вот какой-то,
[08:10.000 --> 08:14.000]  то, по идее, если мы знаем саму подпоследовательность,
[08:14.000 --> 08:17.000]  то как ее можно продолжить справа?
[08:17.000 --> 08:19.000]  Ну, будто бы найти наименьшее число,
[08:19.000 --> 08:21.000]  то мы можем найти, например,
[08:21.000 --> 08:23.000]  вот здесь вот, вот здесь вот.
[08:23.000 --> 08:25.000]  Вот здесь вот.
[08:25.000 --> 08:27.000]  Вот здесь вот.
[08:27.000 --> 08:29.000]  Вот здесь вот.
[08:29.000 --> 08:31.000]  Ну, чтобы найти наименьшее число,
[08:31.000 --> 08:35.000]  большее, чем конец подпоследовательности найденной.
[08:37.000 --> 08:39.000]  Ну, тогда как бы мы сможем ее продлить,
[08:39.000 --> 08:43.000]  причем как можно менее увеличивая последний элемент.
[08:43.000 --> 08:45.000]  И, видите, у нас здесь в предусуждении очень много раз
[08:45.000 --> 08:48.000]  возникает слово «последний элемент».
[08:48.000 --> 08:50.000]  Ну, давайте объединим эти два подхода.
[08:50.000 --> 08:53.000]  И, в общем, следующее, что пусть dpi,
[08:56.000 --> 08:58.000]  эта длина mvp
[09:00.000 --> 09:02.000]  на массиве
[09:05.000 --> 09:07.000]  ai,
[09:07.000 --> 09:09.000]  и при этом
[09:13.000 --> 09:15.000]  ait
[09:15.000 --> 09:17.000]  ходит на mvp.
[09:21.000 --> 09:24.000]  Немножко не так выразится, не по-русски, да?
[09:24.000 --> 09:25.000]  Что я хочу?
[09:25.000 --> 09:27.000]  Я хочу, чтобы найти такую возрастающую подпоследовательность
[09:27.000 --> 09:29.000]  на префиксе,
[09:29.000 --> 09:31.000]  чтобы она заканчивалась на ait и обязательной,
[09:31.000 --> 09:33.000]  при этом было максимальное впадление
[09:33.000 --> 09:35.000]  среди всех таких.
[09:35.000 --> 09:37.000]  Вот что я хочу.
[09:37.000 --> 09:39.000]  То есть, например, для
[09:39.000 --> 09:41.000]  вот такого ситуации
[09:41.000 --> 09:45.000]  у меня бы значения wdp были бы 1,2.
[09:45.000 --> 09:47.000]  Потому что здесь у меня длина 1, понятное дело,
[09:47.000 --> 09:51.000]  а здесь у меня я могу продолжить 1 и 2.
[09:51.000 --> 09:53.000]  Для вот такого варианта,
[09:53.000 --> 09:57.000]  чтобы у меня обязательно был при этом этот элемент последний,
[09:57.000 --> 09:59.000]  у меня будет ответ 1 длина mvp.
[09:59.000 --> 10:01.000]  Почему?
[10:01.000 --> 10:03.000]  Потому что я не могу никакой из этих продолжить.
[10:03.000 --> 10:05.000]  Минус 1, чтобы осталось возрастание.
[10:09.000 --> 10:11.000]  Окей.
[10:11.000 --> 10:13.000]  Ну и как это считать?
[10:19.000 --> 10:21.000]  Ладно.
[10:21.000 --> 10:23.000]  Давайте потом как-то пересчитывать.
[10:23.000 --> 10:25.000]  Что такое DPI на самом деле?
[10:31.000 --> 10:34.000]  Ну будто бы в лучшем случае, если мы не можем продолжить
[10:34.000 --> 10:36.000]  никакой из подпоследовательностей ранее найденной,
[10:36.000 --> 10:38.000]  ну как вот эта вот ситуация,
[10:38.000 --> 10:40.000]  то у нас ответ 1.
[10:40.000 --> 10:43.000]  Поэтому у нас считано это будет что-то типа максимума
[10:43.000 --> 10:45.000]  из единички
[10:45.000 --> 10:47.000]  и чего-то еще.
[10:47.000 --> 10:49.000]  Вот.
[10:49.000 --> 10:51.000]  Чего еще вопрос?
[10:53.000 --> 10:55.000]  Предшествующих элементов,
[10:55.000 --> 10:57.000]  которых можно продлить.
[10:57.000 --> 10:59.000]  То есть 1 плюс
[10:59.000 --> 11:01.000]  максимум по i меньше,
[11:01.000 --> 11:03.000]  по g меньше.
[11:03.000 --> 11:05.000]  Таких, что a gt
[11:05.000 --> 11:07.000]  меньше a it,
[11:09.000 --> 11:11.000]  dp gt.
[11:13.000 --> 11:15.000]  Да.
[11:15.000 --> 11:17.000]  То есть тогда действительно мы
[11:17.000 --> 11:19.000]  берем лучшую подпоследовательность
[11:19.000 --> 11:21.000]  строго левее i-того элемента,
[11:21.000 --> 11:23.000]  которую можно продлить
[11:23.000 --> 11:25.000]  и закончить этим элементом.
[11:25.000 --> 11:27.000]  Ну, это тратит наш смысл.
[11:29.000 --> 11:31.000]  Хуже.
[11:31.000 --> 11:33.000]  Тебе еще нужно a gt меньше a it смотреть.
[11:33.000 --> 11:35.000]  Тебе за линию придется бегать.
[11:37.000 --> 11:39.000]  Ну и как это считать?
[11:39.000 --> 11:41.000]  Ну как это считать?
[11:41.000 --> 11:43.000]  Ну как это считать?
[11:43.000 --> 11:45.000]  Не, ну потом не придется.
[11:45.000 --> 11:47.000]  Потом мы выясним как это лучше делать.
[11:47.000 --> 11:49.000]  Пока что да.
[11:49.000 --> 11:51.000]  То есть вот такая вот формула интересная.
[11:51.000 --> 11:53.000]  Ну или это можно переписать по-другому.
[11:55.000 --> 11:57.000]  1 плюс
[11:57.000 --> 11:59.000]  максимум из нуля
[12:01.000 --> 12:03.000]  по g меньше i,
[12:03.000 --> 12:05.000]  а gt меньше a it,
[12:05.000 --> 12:07.000]  dp gt.
[12:09.000 --> 12:11.000]  Вот.
[12:11.000 --> 12:13.000]  Окей.
[12:13.000 --> 12:15.000]  Ну сразу видно тогда, что пересчет
[12:15.000 --> 12:17.000]  для каждого i можно делать
[12:17.000 --> 12:19.000]  просто пробегаясь по всем g меньше i.
[12:19.000 --> 12:21.000]  Итоговеримо квадрат.
[12:33.000 --> 12:35.000]  Окей. Какая база у динамики будет?
[12:41.000 --> 12:43.000]  Ну, у нас
[12:43.000 --> 12:45.000]  все равно везде в пересчете здесь будет
[12:45.000 --> 12:47.000]  фигурировать 1 плюс максимум.
[12:47.000 --> 12:49.000]  Поэтому там не особо важно.
[12:49.000 --> 12:51.000]  Можно их в 0 поставить все элементы,
[12:51.000 --> 12:53.000]  можно в единицы поставить все элементы.
[12:55.000 --> 12:57.000]  Я обычно делаю так, что dp
[12:57.000 --> 12:59.000]  нулевое равно 1
[13:03.000 --> 13:05.000]  равно нулю.
[13:05.000 --> 13:07.000]  Ну или там минут бесконечности, как вам угодно.
[13:07.000 --> 13:09.000]  Вообще не предстоит.
[13:09.000 --> 13:11.000]  Так, это база.
[13:15.000 --> 13:17.000]  Так, ну с формулой пересчеты,
[13:17.000 --> 13:19.000]  с порядком пересчеты мы определились.
[13:19.000 --> 13:21.000]  Что нам осталось?
[13:21.000 --> 13:23.000]  Остался, но я не держу этот ответ.
[13:25.000 --> 13:27.000]  Давайте сначала найдем просто длину.
[13:27.000 --> 13:29.000]  Идем выбежать длина.
[13:31.000 --> 13:33.000]  Ну да.
[13:39.000 --> 13:41.000]  Потому что там нужно проверить.
[13:41.000 --> 13:43.000]  Для каждого элемента
[13:45.000 --> 13:47.000]  найти максимальную длину
[13:47.000 --> 13:49.000]  dp и заканчивайся к нему.
[13:49.000 --> 13:51.000]  Потому что ответ очевидно в каком-то элементе это закончится.
[13:53.000 --> 13:55.000]  Вот.
[13:55.000 --> 13:57.000]  Окей.
[13:59.000 --> 14:01.000]  Ну прикольно, да?
[14:01.000 --> 14:03.000]  Казалось бы, что-то некруто.
[14:03.000 --> 14:05.000]  Квадратичное время на одну последовательность.
[14:05.000 --> 14:07.000]  Давайте улучшать.
[14:09.000 --> 14:11.000]  А решение за ngm.
[14:19.000 --> 14:21.000]  Ну смотрите.
[14:23.000 --> 14:25.000]  Видите, что у вас здесь
[14:25.000 --> 14:27.000]  вот есть максимум на префиксе.
[14:27.000 --> 14:29.000]  Узнаете, кто считать умеет
[14:29.000 --> 14:31.000]  такую штуку?
[14:33.000 --> 14:35.000]  Дерево отрезков нам помощь.
[14:35.000 --> 14:37.000]  То есть мы будем хотеть обновлять
[14:37.000 --> 14:39.000]  5 элементов в точке.
[14:39.000 --> 14:41.000]  Вот это вот делать присвоение.
[14:41.000 --> 14:43.000]  И запрашивать максимум на префиксе.
[14:43.000 --> 14:45.000]  Единственная проблема
[14:45.000 --> 14:47.000]  это вот это вот ожитое меньше аито.
[14:47.000 --> 14:49.000]  Это очень грустная история.
[14:49.000 --> 14:51.000]  Поэтому давайте
[14:51.000 --> 14:53.000]  так сказать шаг 0
[14:55.000 --> 14:57.000]  отсортируем
[14:59.000 --> 15:01.000]  пары
[15:03.000 --> 15:05.000]  аито и.
[15:07.000 --> 15:09.000]  По неубыванию
[15:11.000 --> 15:13.000]  первой компоненты
[15:15.000 --> 15:17.000]  и в случае равенства
[15:23.000 --> 15:25.000]  по убыванию
[15:27.000 --> 15:29.000]  второй компонента.
[15:37.000 --> 15:39.000]  Отлично.
[15:39.000 --> 15:41.000]  Теперь мы получили какой-то порядок
[15:41.000 --> 15:43.000]  на этих парах.
[15:43.000 --> 15:45.000]  Ну давайте будем идти теперь вдоль этого порядка.
[15:57.000 --> 15:59.000]  По массиву
[16:01.000 --> 16:03.000]  из пункта 0
[16:07.000 --> 16:09.000]  пойдем в форум
[16:11.000 --> 16:13.000]  и что будем делать?
[16:13.000 --> 16:15.000]  Вот нам приходит очередной элемент.
[16:17.000 --> 16:19.000]  Какой-то там аито и.
[16:19.000 --> 16:21.000]  Как посчитать dpi?
[16:23.000 --> 16:25.000]  По определению там уже, будто бы.
[16:29.000 --> 16:31.000]  1 плюс максимум
[16:31.000 --> 16:33.000]  из 0
[16:33.000 --> 16:35.000]  максимум
[16:35.000 --> 16:37.000]  и
[16:37.000 --> 16:39.000]  ожитых меньше аито
[16:39.000 --> 16:41.000]  dpi
[16:41.000 --> 16:43.000]  ожитых
[16:43.000 --> 16:45.000]  Ну зачем
[16:45.000 --> 16:47.000]  их сортировали?
[16:47.000 --> 16:49.000]  Для того чтобы на момент
[16:49.000 --> 16:51.000]  рассмотрения аитова
[16:51.000 --> 16:53.000]  все элементы
[16:53.000 --> 16:55.000]  которые мы рассмотрели были строго меньше
[16:55.000 --> 16:57.000]  аитова.
[16:59.000 --> 17:01.000]  А если были какие-то равные ему
[17:01.000 --> 17:03.000]  то все элементы которые пожи меньше и
[17:03.000 --> 17:05.000]  все элементы которые слева еще
[17:05.000 --> 17:07.000]  не были рассмотрены.
[17:07.000 --> 17:09.000]  Поэтому в их местных точках
[17:09.000 --> 17:11.000]  динамика будет равна нулю все еще
[17:11.000 --> 17:13.000]  и никак не будет влиять на наши
[17:13.000 --> 17:15.000]  рассуждения.
[17:15.000 --> 17:17.000]  Поэтому на самом деле мы имеем право
[17:17.000 --> 17:19.000]  переписать это вот так.
[17:31.000 --> 17:33.000]  То есть убрать просто условия на ожитые меньше
[17:33.000 --> 17:35.000]  аито.
[17:35.000 --> 17:37.000]  Потому что оно естественно
[17:37.000 --> 17:39.000]  выполнится если вы идете по этому порядку
[17:39.000 --> 17:41.000]  из массива 0.
[17:45.000 --> 17:47.000]  Да, потому что вы равные не хотите
[17:47.000 --> 17:49.000]  рассматривать.
[17:49.000 --> 17:51.000]  Если было по расстанию
[17:51.000 --> 17:53.000]  значит у вас бы сначала заполнился этот элемент
[17:53.000 --> 17:55.000]  а потом вот этот вот.
[17:55.000 --> 17:57.000]  И у вас бы учелся этот элемент в рассмотрении
[17:57.000 --> 17:59.000]  вы бы рассматривали наибольшую не убывающую
[17:59.000 --> 18:01.000]  распространительность.
[18:01.000 --> 18:03.000]  То есть вы разрешили бы себе равенство
[18:03.000 --> 18:05.000]  а так вы себе этого
[18:05.000 --> 18:07.000]  запрещаете когда вы это делаете.
[18:07.000 --> 18:09.000]  Потому что вы берете сначала этот элемент
[18:09.000 --> 18:11.000]  а потом только этот
[18:11.000 --> 18:13.000]  вы будете спрашивать на префикс
[18:13.000 --> 18:15.000]  и у вас этот элемент не даст эффекта
[18:15.000 --> 18:17.000]  на этот.
[18:17.000 --> 18:19.000]  Но это глубокая мысль.
[18:23.000 --> 18:25.000]  Вот.
[18:25.000 --> 18:27.000]  Но это максимум на префиксе.
[18:29.000 --> 18:31.000]  Максимум на префиксе.
[18:33.000 --> 18:35.000]  А это
[18:37.000 --> 18:39.000]  изменение в точке.
[18:39.000 --> 18:41.000]  Ну или по индексу.
[18:41.000 --> 18:43.000]  То есть у вас первый шаг
[18:43.000 --> 18:45.000]  это O от N log N.
[18:45.000 --> 18:47.000]  Второй шаг это M на
[18:47.000 --> 18:49.000]  O от N log N.
[18:49.000 --> 18:51.000]  То есть O от N log N.
[18:51.000 --> 18:53.000]  Итоговое решение O от N log N.
[18:53.000 --> 18:55.000]  При этом сама идейность не поменялась.
[18:55.000 --> 18:57.000]  Мы лишь поменяли порядок пересчета.
[18:57.000 --> 18:59.000]  За счет того, что мы сделали
[18:59.000 --> 19:01.000]  хитрый порядок себя
[19:01.000 --> 19:03.000]  мы можем использовать нашу структуру данных
[19:03.000 --> 19:05.000]  которую мы проходили с вами ранее.
[19:05.000 --> 19:07.000]  Окей?
[19:07.000 --> 19:09.000]  Тогда второй сюжет
[19:11.000 --> 19:13.000]  это наибольшая
[19:13.000 --> 19:15.000]  общая подпоследовательность.
[19:15.000 --> 19:17.000]  Или N2P
[19:19.000 --> 19:21.000]  или
[19:21.000 --> 19:23.000]  Longest Common Subsequence
[19:23.000 --> 19:25.000]  RCS.
[19:27.000 --> 19:29.000]  Собственно в чем суть?
[19:29.000 --> 19:31.000]  Есть две последовательности
[19:31.000 --> 19:33.000]  надо выбрать наибольшую
[19:33.000 --> 19:35.000]  общую подпоследовательность.
[19:35.000 --> 19:37.000]  Так что
[19:37.000 --> 19:39.000]  в этом сюжете
[19:39.000 --> 19:41.000]  есть две последовательности
[19:41.000 --> 19:43.000]  надо выбрать наибольшую
[19:43.000 --> 19:45.000]  общую подпоследовательность.
[19:47.000 --> 19:49.000]  Пример.
[20:03.000 --> 20:05.000]  Длины 4 я уже вижу.
[20:05.000 --> 20:07.000]  Это вот она.
[20:13.000 --> 20:15.000]  Что я так строил.
[20:15.000 --> 20:17.000]  И будто бы длины 5 нет.
[20:19.000 --> 20:21.000]  Если начнутся минус 1, то у меня
[20:21.000 --> 20:23.000]  0 единиц дальше нет.
[20:23.000 --> 20:25.000]  Поэтому не получится.
[20:25.000 --> 20:27.000]  Если начнутся единицы, то
[20:27.000 --> 20:29.000]  1, 2, 3 единицы.
[20:29.000 --> 20:31.000]  Ну да, это ответ.
[20:37.000 --> 20:39.000]  Пока что продолжим проект
[20:39.000 --> 20:41.000]  потом вернемся к счетному сюжету
[20:41.000 --> 20:43.000]  связанному общему для всех задач.
[20:47.000 --> 20:49.000]  Что здесь можно делать?
[20:51.000 --> 20:53.000]  Давайте придумаем жадник.
[20:53.000 --> 20:55.000]  Давайте сначала полный перебор.
[20:57.000 --> 20:59.000]  Вам нужно перебрать ее подпоследовательность
[20:59.000 --> 21:01.000]  отсюда.
[21:01.000 --> 21:03.000]  Посмотрите, что она общая.
[21:03.000 --> 21:05.000]  Долго.
[21:05.000 --> 21:07.000]  2 степени N, 2 степени M.
[21:07.000 --> 21:09.000]  То есть 2 степени N
[21:09.000 --> 21:11.000]  и 2 степени M
[21:11.000 --> 21:13.000]  еще на равенство.
[21:17.000 --> 21:19.000]  Это плохо.
[21:19.000 --> 21:21.000]  Жадная алгоритма.
[21:23.000 --> 21:25.000]  Будто бы давайте
[21:25.000 --> 21:27.000]  не знаю, что тут жадного можно выбрать.
[21:29.000 --> 21:31.000]  Давайте фиксируем одну
[21:31.000 --> 21:33.000]  подпоследовательность.
[21:33.000 --> 21:35.000]  И будем искать первый элемент, равный 0.
[21:35.000 --> 21:37.000]  Нашли.
[21:37.000 --> 21:39.000]  Вот наш текущий ответ.
[21:39.000 --> 21:41.000]  Перепрыгиваем сюда и ищем следующий
[21:41.000 --> 21:43.000]  элемент равной единицы.
[21:43.000 --> 21:45.000]  Здесь сработал. Это победа.
[21:45.000 --> 21:47.000]  В общем, случай, конечно, не сработает.
[21:47.000 --> 21:49.000]  Потому что у вас банальный ответ может
[21:49.000 --> 21:51.000]  начинаться не с первого ремонта.
[21:51.000 --> 21:53.000]  То есть можно специально построить такой пример,
[21:53.000 --> 21:55.000]  что у вас, если будете идти таким жадником,
[21:55.000 --> 21:57.000]  то у вас цвет накопится здесь
[21:57.000 --> 21:59.000]  и где-то здесь, а на самом деле надо брать кусок отсюда.
[21:59.000 --> 22:01.000]  То есть на каждый жадник
[22:01.000 --> 22:03.000]  найдется свой контент-пример.
[22:03.000 --> 22:05.000]  Просто над ним можно думать,
[22:05.000 --> 22:07.000]  может быть, долго.
[22:07.000 --> 22:09.000]  Поэтому не беспокойтесь,
[22:09.000 --> 22:11.000]  если у вас контести на динамике, там
[22:11.000 --> 22:13.000]  будут все тесты.
[22:13.000 --> 22:15.000]  Задача будет.
[22:15.000 --> 22:17.000]  Вот.
[22:17.000 --> 22:19.000]  Окей, ну, давайте попробуем
[22:19.000 --> 22:21.000]  придумать динамику.
[22:23.000 --> 22:25.000]  Какие-нибудь будут идеи из зала?
[22:25.000 --> 22:27.000]  Ну, типа квадратик,
[22:27.000 --> 22:29.000]  и там что-то вроде редакторского расстояния.
[22:29.000 --> 22:31.000]  Редакторское расстояние
[22:31.000 --> 22:33.000]  очень сложнее, чем мы нам поняли.
[22:33.000 --> 22:35.000]  Ну, верно.
[22:35.000 --> 22:37.000]  Это вы как бы решили, не знаю,
[22:37.000 --> 22:39.000]  квадратное уравнение через формулы Кардана.
[22:39.000 --> 22:41.000]  Примерно такой
[22:41.000 --> 22:43.000]  сложности задачи у вас
[22:43.000 --> 22:45.000]  возникла.
[22:45.000 --> 22:47.000]  Я имею в виду, вот у нас квадрат, да.
[22:47.000 --> 22:49.000]  Мы можем либо смачить последний символ,
[22:49.000 --> 22:51.000]  либо попытаться смачить
[22:51.000 --> 22:53.000]  последний символ и вот этот вот префикс.
[22:53.000 --> 22:55.000]  Ну, понятно, да. Вот так или просто
[22:55.000 --> 22:57.000]  перейти к последнему самому.
[22:57.000 --> 22:59.000]  Так, теперь перевожу на формальный язык.
[22:59.000 --> 23:01.000]  Предлагается рассмотреть два префикса
[23:01.000 --> 23:03.000]  длины И и длины Ж.
[23:03.000 --> 23:05.000]  Здесь длины И, а здесь длины Ж.
[23:05.000 --> 23:07.000]  И пытаться их как-то жадно попродолжать.
[23:07.000 --> 23:09.000]  Ну, не жадно,
[23:09.000 --> 23:11.000]  но как-то их попродолжать.
[23:11.000 --> 23:13.000]  Давайте
[23:15.000 --> 23:17.000]  ДПИТОЕ ЖИТОЕ
[23:17.000 --> 23:19.000]  ЭТО НОП
[23:19.000 --> 23:21.000]  Ну, длина НОП.
[23:21.000 --> 23:23.000]  Вот.
[23:25.000 --> 23:27.000]  АИ
[23:33.000 --> 23:35.000]  БЖ
[23:37.000 --> 23:39.000]  Тогда какие у нас есть варианты?
[23:41.000 --> 23:43.000]  Это как устроено ДПИТОЕ ЖИТОЕ?
[23:43.000 --> 23:45.000]  Перещал.
[23:49.000 --> 23:51.000]  Ну, первый вариант может быть таким, что
[23:51.000 --> 23:53.000]  вот нам приходит новый элемент
[23:53.000 --> 23:55.000]  БЖИТОЙ плюс 1
[23:55.000 --> 23:57.000]  и он оказывается равный АИТОМУ.
[23:59.000 --> 24:01.000]  Тогда будто бы мы можем взять
[24:01.000 --> 24:03.000]  в течение так вот. У нас был БЖИТОЙ, да?
[24:03.000 --> 24:05.000]  Вот такой вот ответ.
[24:05.000 --> 24:07.000]  А теперь если мы знаем ответ для вот такой вот задачи
[24:07.000 --> 24:09.000]  и нам приходит БЖИТОЙ
[24:11.000 --> 24:13.000]  То что тогда?
[24:13.000 --> 24:15.000]  Ну, будто бы если БЖИТОЙ равен АИТОМУ,
[24:15.000 --> 24:17.000]  то все классно.
[24:17.000 --> 24:19.000]  Вообще не так. Вот для такой подзадачи.
[24:23.000 --> 24:25.000]  Да, вот так, все.
[24:25.000 --> 24:27.000]  Вот АИТОЙ и БЖИТОЙ.
[24:27.000 --> 24:29.000]  Первый вариант там нужно рассмотреть такую подзадачу, да?
[24:29.000 --> 24:31.000]  Почему?
[24:31.000 --> 24:33.000]  Ну, потому что вдруг ответ
[24:33.000 --> 24:35.000]  для вот этой вот этой
[24:35.000 --> 24:37.000]  совпадает с ответом на вот эту и вот эту.
[24:37.000 --> 24:39.000]  То есть на расширенную, на один символ.
[24:39.000 --> 24:41.000]  На одно число.
[24:41.000 --> 24:43.000]  То есть на один символ.
[24:43.000 --> 24:45.000]  То есть на расширенную, на один символ.
[24:45.000 --> 24:47.000]  На одно число.
[24:55.000 --> 24:57.000]  Давайте так.
[24:57.000 --> 24:59.000]  Если они у вас не совпадают,
[24:59.000 --> 25:01.000]  АИТОЙ и БЖИТОЙ.
[25:05.000 --> 25:07.000]  Вот если у вас АИТОЙ и БЖИТОЙ
[25:07.000 --> 25:09.000]  не совпадают,
[25:09.000 --> 25:11.000]  в которые вот новый символ приходит,
[25:11.000 --> 25:13.000]  есть ли вариант,
[25:13.000 --> 25:15.000]  что это будто бы ответ
[25:15.000 --> 25:17.000]  на такую подзадачу?
[25:17.000 --> 25:19.000]  С БЖИТОЙ минус 1, да?
[25:19.000 --> 25:21.000]  Будто бы.
[25:27.000 --> 25:29.000]  Потому что у вас БЖИТОЙ не совпадает с АИТОЙ.
[25:29.000 --> 25:31.000]  Значит вы не можете противить наибольшую
[25:31.000 --> 25:33.000]  общую подпасительность АИТОЙ.
[25:33.000 --> 25:35.000]  Так мы бы его раньше встретили уже.
[25:35.000 --> 25:37.000]  Нет, у нас будет пересчет
[25:37.000 --> 25:39.000]  ФОРИ и ФОРЖИ. Мы бы его встретили все равно
[25:39.000 --> 25:41.000]  в той ситуации.
[25:43.000 --> 25:45.000]  Пересчета
[25:45.000 --> 25:47.000]  ФОРИ внутренний,
[25:47.000 --> 25:49.000]  ФОРЖИ будет.
[25:51.000 --> 25:53.000]  То есть ответ для этой задачи, как выражается
[25:53.000 --> 25:55.000]  для А1АИ
[25:55.000 --> 25:57.000]  Б1БЖИМинус1?
[25:57.000 --> 25:59.000]  Для А1АИ
[25:59.000 --> 26:01.000]  Б1БЖИМинус1?
[26:09.000 --> 26:11.000]  Для АИБЖИМинус1?
[26:11.000 --> 26:13.000]  Бинго!
[26:13.000 --> 26:15.000]  В ДПИ
[26:17.000 --> 26:19.000]  Для Минус 1.
[26:19.000 --> 26:21.000]  Второй вариант.
[26:21.000 --> 26:23.000]  Наоборот, вам взяли все то же самое
[26:23.000 --> 26:25.000]  и написали только АИТОЙ в конец.
[26:25.000 --> 26:27.000]  Первая последовательность.
[26:27.000 --> 26:29.000]  И они снова там не совпались.
[26:29.000 --> 26:31.000]  Дописные АИТЫ не совпадают с БЖИТОМ.
[26:31.000 --> 26:33.000]  Рассуждение абсолютно аналогичное.
[26:37.000 --> 26:39.000]  И это мы с вами говорили в случае
[26:39.000 --> 26:41.000]  если они не совпадают.
[26:47.000 --> 26:49.000]  А если они совпали?
[26:51.000 --> 26:53.000]  Тогда мы можем сразу же сказать, что
[26:53.000 --> 26:55.000]  ДПИТЖИТОРАВНО
[26:55.000 --> 26:57.000]  ДПИТОМУ
[26:57.000 --> 26:59.000]  Минус 1.
[26:59.000 --> 27:01.000]  Ну да.
[27:01.000 --> 27:03.000]  Если у вас АИТОСАНПАЛСБЖИТОМ
[27:03.000 --> 27:05.000]  то вы можете взять под задачу меньше здесь
[27:05.000 --> 27:07.000]  и на один меньше здесь
[27:07.000 --> 27:09.000]  и будто бы продлить для нее ответ.
[27:13.000 --> 27:15.000]  В этом случае нам еще не нужно
[27:15.000 --> 27:17.000]  считать следующего.
[27:17.000 --> 27:19.000]  Почему?
[27:19.000 --> 27:21.000]  Нет, их надо считать.
[27:21.000 --> 27:23.000]  Иначе у вас просто динамика
[27:23.000 --> 27:25.000]  не будет корректно поддерживаться.
[27:37.000 --> 27:39.000]  А может ли быть такая ситуация, что у нас
[27:39.000 --> 27:41.000]  АИТЫ
[27:41.000 --> 27:43.000]  не равен БЖИТОМУ
[27:43.000 --> 27:45.000]  но ДПИТЖИТОЙ все равно лучше
[27:45.000 --> 27:47.000]  чем эти оба?
[27:47.000 --> 27:49.000]  Уже на текущем подсчитываю.
[27:49.000 --> 27:51.000]  Это вас вечно и не вечно.
[27:51.000 --> 27:53.000]  Ой, ой-ой-ой!
[27:53.000 --> 27:55.000]  Да-да-да!
[27:55.000 --> 27:57.000]  Опечатка, извините.
[27:59.000 --> 28:01.000]  Все, вопрос отпал.
[28:01.000 --> 28:03.000]  Извините, да.
[28:03.000 --> 28:05.000]  Я сейчас смотрю и думаю, не понимаю.
[28:05.000 --> 28:07.000]  Сам все пытаюсь вести заблуждение.
[28:07.000 --> 28:09.000]  Ну все, тогда это работает.
[28:09.000 --> 28:11.000]  То есть такая вот формула.
[28:13.000 --> 28:15.000]  То есть каждое ДПИТЖИТОР
[28:15.000 --> 28:17.000]  вычисляете просто по максимуму из трех.
[28:17.000 --> 28:19.000]  И вам нужно гарантировать, чтобы для каждого ИЖИ
[28:19.000 --> 28:21.000]  все вот эти элементы
[28:21.000 --> 28:23.000]  уже были вычислены.
[28:23.000 --> 28:25.000]  То есть если мы заполним, так сказать, матричку
[28:27.000 --> 28:29.000]  то для подсчета вот этого вот элемента
[28:29.000 --> 28:31.000]  вам нужно знать этот, этот
[28:31.000 --> 28:33.000]  и этот.
[28:33.000 --> 28:35.000]  Для подсчета этого
[28:35.000 --> 28:37.000]  вы уже знаете этот, но еще надо знать этот.
[28:37.000 --> 28:39.000]  То есть и того у вас
[28:39.000 --> 28:41.000]  какая база должна быть.
[28:41.000 --> 28:43.000]  База должна занимать вот эту вот область еще.
[28:43.000 --> 28:45.000]  Все, что вот тут.
[28:47.000 --> 28:49.000]  То есть у вас база должна быть
[28:49.000 --> 28:51.000]  первый столбец и первая строка.
[28:51.000 --> 28:53.000]  Тогда вы знаете ответ.
[28:53.000 --> 28:55.000]  То есть тогда вы можете пользоваться
[28:55.000 --> 28:57.000]  здесь переходом.
[28:57.000 --> 28:59.000]  Да, иногда, если вы
[28:59.000 --> 29:01.000]  уже написали плюс-минус переходы,
[29:01.000 --> 29:03.000]  вы можете понять, какая вам база нужна,
[29:03.000 --> 29:05.000]  чтобы у вас просто все эти формулы были определены корректно.
[29:07.000 --> 29:09.000]  То есть база тогда здесь какая.
[29:11.000 --> 29:13.000]  Ну если мы считаем прям
[29:13.000 --> 29:15.000]  реально две параметры,
[29:15.000 --> 29:17.000]  но если мы считаем прям реально
[29:17.000 --> 29:19.000]  для длины и и для длины ж,
[29:19.000 --> 29:21.000]  то есть будто у нас реально а1 и тра-та-та,
[29:21.000 --> 29:23.000]  аи-то индексация,
[29:23.000 --> 29:25.000]  тогда здесь совсем все просто.
[29:27.000 --> 29:29.000]  Равно нулю.
[29:31.000 --> 29:33.000]  Равно нулю.
[29:33.000 --> 29:35.000]  И думать не надо больше особо.
[29:37.000 --> 29:39.000]  А, кстати, вопрос, потому что понимаете,
[29:39.000 --> 29:41.000]  когда я пишу тут двоеточие всякие
[29:41.000 --> 29:43.000]  и так далее.
[29:43.000 --> 29:45.000]  Это к питанистам референс.
[29:47.000 --> 29:49.000]  Если я здесь пишу двоеточие, то я беру просто
[29:49.000 --> 29:51.000]  все вот это вот измерение.
[29:51.000 --> 29:53.000]  То есть dp это нулевое, это вот
[29:53.000 --> 29:55.000]  все нулевые элементы.
[29:55.000 --> 29:57.000]  А здесь наоборот я беру по-другому измерение.
[29:57.000 --> 29:59.000]  Сберу ноль и все элементы.
[30:03.000 --> 30:05.000]  Вот.
[30:05.000 --> 30:07.000]  Это база.
[30:07.000 --> 30:09.000]  Но ответ понятно где лежит.
[30:09.000 --> 30:11.000]  Где?
[30:11.000 --> 30:13.000]  Ну не говорите, что максимум по и ж,
[30:13.000 --> 30:15.000]  дп и ж.
[30:15.000 --> 30:17.000]  Дп и нм, да.
[30:17.000 --> 30:19.000]  Ответ лежит в дп и нм.
[30:23.000 --> 30:25.000]  Ну если возьмете максимум по дп и ж,
[30:25.000 --> 30:27.000]  по всем и ж,
[30:27.000 --> 30:29.000]  вы конечно получите ответ тот же самый.
[30:29.000 --> 30:31.000]  Но вопрос зачем?
[30:31.000 --> 30:33.000]  Консистентность.
[30:33.000 --> 30:35.000]  Надо чтобы каждое решение тогда кончилось.
[30:35.000 --> 30:37.000]  А, то есть когда у вас в ответе будет
[30:37.000 --> 30:39.000]  сумма динамика, это будет совсем все уже
[30:39.000 --> 30:41.000]  друбственно, да?
[30:41.000 --> 30:43.000]  Да.
[30:43.000 --> 30:45.000]  Окей.
[30:45.000 --> 30:47.000]  Теперь общий момент, который я
[30:47.000 --> 30:49.000]  забыл сказать первой задачей.
[30:49.000 --> 30:51.000]  Ну давайте их разберем в общем случае.
[30:51.000 --> 30:53.000]  Это как восстанавливать ответ.
[30:53.000 --> 30:55.000]  То есть мы с вами
[30:55.000 --> 30:57.000]  говорили все время про длину.
[30:57.000 --> 30:59.000]  Но при этом промулировка, что надо
[30:59.000 --> 31:01.000]  найти в общем-то эти индексы.
[31:01.000 --> 31:03.000]  Ну или хотя бы с вами элементы вывести.
[31:03.000 --> 31:05.000]  Но если вы увидите все элементы, то понятно,
[31:05.000 --> 31:07.000]  индексы легко уже восстановить.
[31:07.000 --> 31:09.000]  Что предлагается делать?
[31:09.000 --> 31:11.000]  Предлагается делать максимально все просто.
[31:11.000 --> 31:13.000]  Вы заводите массив поид,
[31:13.000 --> 31:15.000]  массив предков.
[31:15.000 --> 31:17.000]  Ну там, Ancestors.
[31:17.000 --> 31:19.000]  Как хотите, Reparent, Ancestors,
[31:19.000 --> 31:21.000]  как угодно называйте его.
[31:21.000 --> 31:23.000]  В котором будет лежать
[31:23.000 --> 31:25.000]  для итова чувака
[31:25.000 --> 31:27.000]  оптимальное ж.
[31:29.000 --> 31:31.000]  То есть если вы
[31:31.000 --> 31:33.000]  для итова возьмете оптимальное ж,
[31:33.000 --> 31:35.000]  а дальше потом возьмете вот этот вот
[31:35.000 --> 31:37.000]  максимум поид и поид
[31:37.000 --> 31:39.000]  и вы будете прыгать назад,
[31:39.000 --> 31:41.000]  пока вы там не придете
[31:41.000 --> 31:43.000]  в никуда,
[31:43.000 --> 31:45.000]  то вы восстановите ответ.
[31:45.000 --> 31:47.000]  Аналогично в этом решении,
[31:47.000 --> 31:49.000]  только здесь вам надо спрашивать не просто максимум
[31:49.000 --> 31:51.000]  на префиксе, а еще позицию максимуму
[31:51.000 --> 31:53.000]  уметь возвращать.
[31:53.000 --> 31:55.000]  Но дерево отрезков с этим тоже справляется.
[31:55.000 --> 31:57.000]  Поэтому здесь тоже можно
[31:57.000 --> 31:59.000]  оставить такой так ответ.
[31:59.000 --> 32:01.000]  Ну, здесь
[32:01.000 --> 32:03.000]  я думаю тоже понятно.
[32:03.000 --> 32:05.000]  Если вы для каждой пары и ж
[32:05.000 --> 32:07.000]  храните, откуда у вас был оптимальный
[32:07.000 --> 32:09.000]  переход.
[32:09.000 --> 32:11.000]  То есть у вас память увеличивается лишь
[32:11.000 --> 32:13.000]  в константное количество раз.
[32:13.000 --> 32:15.000]  То есть в классическом ничего не меняется.
[32:15.000 --> 32:17.000]  И это прекрасно
[32:17.000 --> 32:19.000]  на этом подходе, потому что
[32:19.000 --> 32:21.000]  есть варианты, где можно не восстанавливать,
[32:21.000 --> 32:23.000]  точнее восстанавливать не имея
[32:23.000 --> 32:25.000]  массив предков, просто по ходу
[32:25.000 --> 32:27.000]  динамики с конца идти обратно.
[32:27.000 --> 32:29.000]  Но это что-то
[32:29.000 --> 32:31.000]  совсем больно.
[32:31.000 --> 32:33.000]  Почему больно?
[32:33.000 --> 32:35.000]  Ну, не знаю, я не очень люблю такие алгоритмы.
[32:35.000 --> 32:37.000]  Они неконсистентны.
[32:37.000 --> 32:39.000]  Назовем это так.
[32:39.000 --> 32:41.000]  Да надо какие-то эбристики придумывать, а тут
[32:41.000 --> 32:43.000]  мы идем по общей схеме.
[32:45.000 --> 32:47.000]  Ну, если попросить, на семинар вам, брат, как
[32:47.000 --> 32:49.000]  представлю, например, в этой задачи без
[32:49.000 --> 32:51.000]  массива предков?
[32:51.000 --> 32:53.000]  Ну, тогда третья уже.
[32:55.000 --> 32:57.000]  Это рюкзак.
[32:57.000 --> 32:59.000]  Есть такая задача
[32:59.000 --> 33:01.000]  комменатурной оптимизации.
[33:01.000 --> 33:03.000]  У меня есть две постановки, есть такая
[33:03.000 --> 33:05.000]  житейско-обывательская, есть
[33:05.000 --> 33:07.000]  линейно-агибраическая.
[33:07.000 --> 33:09.000]  Линейно-агибраическая,
[33:09.000 --> 33:11.000]  боюсь, я вас запугаю.
[33:11.000 --> 33:13.000]  Поэтому пока что будем жить на житейско-обывательской.
[33:13.000 --> 33:15.000]  При этом есть две постановки
[33:15.000 --> 33:17.000]  издачи в рюкзаке.
[33:17.000 --> 33:19.000]  Обе начинаются одинаково.
[33:19.000 --> 33:21.000]  Что у нас есть
[33:21.000 --> 33:23.000]  10 предметов.
[33:23.000 --> 33:25.000]  И там у каждого
[33:25.000 --> 33:27.000]  есть своя цена.
[33:27.000 --> 33:29.000]  Мы хотим собрать максимальную.
[33:29.000 --> 33:31.000]  Мы хотим собрать...
[33:31.000 --> 33:33.000]  А, и у каждого есть свой вес при этом еще.
[33:33.000 --> 33:35.000]  То есть там, не знаю, бутылка воды
[33:35.000 --> 33:37.000]  весит 0,5 и ценится
[33:37.000 --> 33:39.000]  в автомате 65 рублей.
[33:39.000 --> 33:41.000]  Вот, а
[33:41.000 --> 33:43.000]  не знаю, 0,5 нефти наверно дороже
[33:43.000 --> 33:45.000]  стоит.
[33:45.000 --> 33:47.000]  Хотя вес тот же самый.
[33:47.000 --> 33:49.000]  Нет, там плотность разная, ладно.
[33:49.000 --> 33:51.000]  Не получилось.
[33:51.000 --> 33:53.000]  Ну, не суть.
[33:53.000 --> 33:55.000]  Попытка была неудачна.
[33:55.000 --> 33:57.000]  Вот.
[33:57.000 --> 33:59.000]  Ну, окей, не знаю.
[33:59.000 --> 34:01.000]  Слиток серебра той же массы и золота той же массы
[34:01.000 --> 34:03.000]  явно по-разному стоят.
[34:03.000 --> 34:05.000]  И типа вам золото вроде выгоднее
[34:05.000 --> 34:07.000]  брать.
[34:07.000 --> 34:09.000]  Вот, и у вас есть предметы, есть каждого вес
[34:09.000 --> 34:11.000]  и у каждого цена.
[34:11.000 --> 34:13.000]  Вот.
[34:13.000 --> 34:15.000]  И задача первая.
[34:15.000 --> 34:17.000]  И обе задачи звучат так. Вам нужно брать
[34:17.000 --> 34:19.000]  максимальное количество
[34:19.000 --> 34:21.000]  максимальную по стоимости коллекцию предметов
[34:21.000 --> 34:23.000]  в свой рюкзак так, чтобы она суммарно по весу
[34:23.000 --> 34:25.000]  не превосходила какой-то W
[34:25.000 --> 34:27.000]  ограничения.
[34:27.000 --> 34:29.000]  И первая задача.
[34:29.000 --> 34:31.000]  Первая постановка задачи.
[34:31.000 --> 34:33.000]  Это непрерывный рюкзак. Вы можете
[34:33.000 --> 34:35.000]  делить предмет как хотите.
[34:35.000 --> 34:37.000]  Ну, там, не знаю, взять и откусить
[34:37.000 --> 34:39.000]  там одну питую золота.
[34:39.000 --> 34:41.000]  Слитка золота.
[34:41.000 --> 34:43.000]  Если вы считаете, что это оптимальный коэффициент.
[34:43.000 --> 34:45.000]  Вот.
[34:45.000 --> 34:47.000]  А другой задачей так нельзя делать.
[34:47.000 --> 34:49.000]  Это так называемый дискретный рюкзак.
[34:49.000 --> 34:51.000]  Вы либо все берете, либо ничего.
[34:51.000 --> 34:53.000]  Ну, пример, не знаю, вы
[34:53.000 --> 34:55.000]  пришли грабить магазин бытовой техники.
[34:55.000 --> 34:57.000]  Там явно вам пол стиральной машины не пригодится.
[34:59.000 --> 35:01.000]  Вот.
[35:05.000 --> 35:07.000]  Ну, давайте запишем постановку.
[35:07.000 --> 35:09.000]  Мы же здесь коэффициентскую объяснил.
[35:09.000 --> 35:11.000]  Теперь давайте страшную постановку
[35:11.000 --> 35:13.000]  напишем.
[35:13.000 --> 35:15.000]  Или алгебраическую.
[35:15.000 --> 35:17.000]  Даны
[35:17.000 --> 35:19.000]  два вектора
[35:19.000 --> 35:21.000]  С
[35:21.000 --> 35:23.000]  В
[35:23.000 --> 35:25.000]  В
[35:25.000 --> 35:27.000]  В
[35:27.000 --> 35:29.000]  В
[35:31.000 --> 35:33.000]  Страшно, да?
[35:33.000 --> 35:35.000]  Скажите, когда остановиться
[35:35.000 --> 35:37.000]  я перейду на житейскую платочку.
[35:39.000 --> 35:41.000]  Найти
[35:43.000 --> 35:45.000]  Вектор В
[35:45.000 --> 35:47.000]  Из-за 2M
[35:49.000 --> 35:51.000]  Такое, что
[35:51.000 --> 35:53.000]  скалярное произведение W
[35:53.000 --> 35:55.000]  на B
[35:55.000 --> 35:57.000]  не превходит W большого
[35:57.000 --> 35:59.000]  и скалярное произведение C на B
[35:59.000 --> 36:01.000]  максимально.
[36:07.000 --> 36:09.000]  Это из условия задачи,
[36:09.000 --> 36:11.000]  чувак.
[36:11.000 --> 36:13.000]  Это сколько у вас рюкзак может вместить.
[36:15.000 --> 36:17.000]  А алгебрическая постановка такая
[36:17.000 --> 36:19.000]  переводим на русский.
[36:19.000 --> 36:21.000]  Есть два вектора
[36:21.000 --> 36:23.000]  стоимости и ценности каждого предмета.
[36:23.000 --> 36:25.000]  Вектор стоимости и предмета.
[36:25.000 --> 36:27.000]  Да, да, мы будем считать, что не натуральный.
[36:27.000 --> 36:29.000]  Что, ноль?
[36:29.000 --> 36:31.000]  Ну, скажем так,
[36:31.000 --> 36:33.000]  если у вас вес нольевой, то
[36:33.000 --> 36:35.000]  это круто.
[36:35.000 --> 36:37.000]  Если стоимость нольевая,
[36:37.000 --> 36:39.000]  то это не круто.
[36:39.000 --> 36:41.000]  Поэтому давайте считать, что эти тривиальные случаи
[36:41.000 --> 36:43.000]  мы отбросим все-таки.
[36:43.000 --> 36:45.000]  Хотя, конечно, понятно, что ноль это натуральное число,
[36:45.000 --> 36:47.000]  и все в это верить надо.
[36:49.000 --> 36:51.000]  Кто не верит, тот, не знаю,
[36:51.000 --> 36:53.000]  плохой человек.
[36:53.000 --> 36:55.000]  То есть у вас есть вектор стоимости
[36:55.000 --> 36:57.000]  и вектор весов.
[36:57.000 --> 36:59.000]  Вам нужно найти вектор из 0 единиц,
[36:59.000 --> 37:01.000]  то есть ноль не берем предмет,
[37:01.000 --> 37:03.000]  один берем предмет.
[37:03.000 --> 37:05.000]  Такое, что у вас скалярное произведение,
[37:05.000 --> 37:07.000]  то есть суммарный вес этих предметов будет не превосходить.
[37:07.000 --> 37:09.000]  W стоимость
[37:09.000 --> 37:11.000]  к максимуму стремится.
[37:11.000 --> 37:13.000]  Полный перебор.
[37:15.000 --> 37:17.000]  N на 2 в степень.
[37:17.000 --> 37:19.000]  Хорошо.
[37:19.000 --> 37:21.000]  Вам же, когда вы посмотрели вектор,
[37:21.000 --> 37:23.000]  вам нужно еще посчитать все-таки.
[37:23.000 --> 37:25.000]  Это важно.
[37:25.000 --> 37:27.000]  Если было бы или просто 2 в степень,
[37:27.000 --> 37:29.000]  то уже было бы классное решение.
[37:31.000 --> 37:33.000]  Потому что вы от целой N-ки избавились.
[37:33.000 --> 37:35.000]  Ну, вы знаете,
[37:35.000 --> 37:37.000]  это как методы борьбы.
[37:37.000 --> 37:39.000]  Если у вас решение за O,
[37:39.000 --> 37:41.000]  2 в степень N на N в пятый,
[37:41.000 --> 37:43.000]  то вы будете очень радоваться,
[37:43.000 --> 37:45.000]  если вы 2 в степень N на N-кубе сможете прийти.
[37:45.000 --> 37:47.000]  Неважно, что это не даст
[37:47.000 --> 37:49.000]  колоссального прироста,
[37:49.000 --> 37:51.000]  но вы будете радоваться.
[37:51.000 --> 37:53.000]  Вот.
[37:53.000 --> 37:55.000]  Примерно как радоваться тому,
[37:55.000 --> 37:57.000]  что вы смогли сделать...
[37:57.000 --> 37:59.000]  Выкинули из печечной коробок,
[37:59.000 --> 38:01.000]  когда падает шарма обычно.
[38:01.000 --> 38:03.000]  Ладно.
[38:03.000 --> 38:05.000]  Вот.
[38:05.000 --> 38:07.000]  Не, ну да, действительно.
[38:07.000 --> 38:09.000]  Ну, относительно, конечно.
[38:09.000 --> 38:11.000]  Но этому печечному коробку вы были бы рады потом.
[38:11.000 --> 38:13.000]  Вот, окей.
[38:13.000 --> 38:15.000]  То есть, здесь можно решить
[38:15.000 --> 38:17.000]  экспоненциально долго.
[38:17.000 --> 38:19.000]  Есть разные там оптимизации
[38:19.000 --> 38:21.000]  определенные.
[38:21.000 --> 38:23.000]  Короче, об эту задачу
[38:23.000 --> 38:25.000]  уже столько сломано,
[38:25.000 --> 38:27.000]  не знаю чего.
[38:27.000 --> 38:29.000]  Там уже просто куча по ней статей,
[38:29.000 --> 38:31.000]  куча всяких дискретных метод оптимизации там применяются.
[38:31.000 --> 38:33.000]  Но никто не может найти
[38:33.000 --> 38:35.000]  в любом случае решение быстрее,
[38:35.000 --> 38:37.000]  экспонентом.
[38:37.000 --> 38:39.000]  То есть, так сказать, это задача
[38:39.000 --> 38:41.000]  из-за полных задач, так называемых,
[38:41.000 --> 38:43.000]  что на данный момент человечество не умеет решать о запаленном.
[38:45.000 --> 38:47.000]  Ну, не умеет.
[38:47.000 --> 38:49.000]  Если научится, то...
[38:49.000 --> 38:51.000]  То, кто научится, то получит миллион долларов, так сказать.
[38:51.000 --> 38:53.000]  И...
[38:53.000 --> 38:55.000]  Делать много чего странного.
[38:55.000 --> 38:57.000]  Вот.
[38:57.000 --> 38:59.000]  Окей. Ну, это неважно.
[38:59.000 --> 39:01.000]  Там все расскажешь потом.
[39:01.000 --> 39:03.000]  Кому-то на треть, кто-то на втором курсе.
[39:03.000 --> 39:05.000]  Ну, как решать?
[39:05.000 --> 39:07.000]  Решение за...
[39:11.000 --> 39:13.000]  N на W.
[39:13.000 --> 39:15.000]  Ну, вы скажете, как так?
[39:15.000 --> 39:17.000]  Ну, вот.
[39:17.000 --> 39:19.000]  N, W по лином.
[39:19.000 --> 39:21.000]  На что я отвечу, что
[39:21.000 --> 39:23.000]  круто W у вас записывается в битах.
[39:23.000 --> 39:25.000]  То есть, это экспоненциальное число по числу бит,
[39:25.000 --> 39:27.000]  на самом деле.
[39:27.000 --> 39:29.000]  Поэтому подходит под отклинии NPR.
[39:29.000 --> 39:31.000]  И не задумывайтесь об этом.
[39:31.000 --> 39:33.000]  Для формулистов было сказано.
[39:33.000 --> 39:35.000]  Для тех, кто на третьем курсе сейчас сложности изучает.
[39:37.000 --> 39:39.000]  Окей.
[39:39.000 --> 39:41.000]  Как решать?
[39:43.000 --> 39:45.000]  Здесь не очевидно вообще, как решать.
[39:45.000 --> 39:47.000]  Поэтому это такая самая экзотическая издача,
[39:47.000 --> 39:49.000]  которую мы рассматривали.
[39:51.000 --> 39:53.000]  Здесь человек, что придумал вот следующее.
[39:53.000 --> 39:55.000]  Что пусть DPI, TDP
[39:55.000 --> 39:57.000]  это ответ.
[39:57.000 --> 39:59.000]  Ну, лучшая стоимость
[39:59.000 --> 40:01.000]  в качестве этого здесь рассматривается.
[40:05.000 --> 40:07.000]  Макс стоимость, если
[40:07.000 --> 40:09.000]  рассматриваем
[40:13.000 --> 40:15.000]  первые им предметов
[40:23.000 --> 40:25.000]  и
[40:25.000 --> 40:27.000]  ограничение веса
[40:33.000 --> 40:35.000]  не веса
[40:37.000 --> 40:39.000]  W обножим.
[40:39.000 --> 40:41.000]  Вот.
[40:41.000 --> 40:43.000]  То есть, мы взяли такой подзач,
[40:43.000 --> 40:45.000]  что у вас три узачок легкие
[40:45.000 --> 40:47.000]  и предметов мало.
[40:47.000 --> 40:49.000]  Давайте подумаем над базой.
[40:49.000 --> 40:51.000]  Круто.
[40:51.000 --> 40:53.000]  Вот сто рюкзак.
[40:53.000 --> 40:55.000]  Нельзя ничего положить. Хорошо.
[40:55.000 --> 40:57.000]  А если 0 предметов
[40:57.000 --> 40:59.000]  вес, вместимость любого рюкзака,
[40:59.000 --> 41:01.000]  то тоже ответ 0,
[41:01.000 --> 41:03.000]  потому что ничего не можете положить.
[41:03.000 --> 41:05.000]  Нет предметов.
[41:19.000 --> 41:21.000]  Окей, это база.
[41:23.000 --> 41:25.000]  Как пересчитывать?
[41:43.000 --> 41:45.000]  Ну да, все очень концептуально
[41:45.000 --> 41:47.000]  пришло, на самом деле.
[41:49.000 --> 41:51.000]  ДПИ даже
[41:51.000 --> 41:53.000]  у нас будет равно максимуму С.
[41:53.000 --> 41:55.000]  Первый вариант,
[41:55.000 --> 41:57.000]  мы не кладем этот предмет,
[41:57.000 --> 41:59.000]  но считаем, что его невыгодно положить.
[41:59.000 --> 42:01.000]  Тогда что это такое?
[42:03.000 --> 42:05.000]  ДПИ не сводится.
[42:07.000 --> 42:09.000]  Именно так.
[42:09.000 --> 42:11.000]  Ну,
[42:11.000 --> 42:13.000]  то есть,
[42:13.000 --> 42:15.000]  если у нас есть
[42:15.000 --> 42:17.000]  один предмет,
[42:17.000 --> 42:19.000]  и минус один,
[42:19.000 --> 42:21.000]  ну, ограничение С у вас то же самое.
[42:21.000 --> 42:23.000]  То есть, вы не кладете этот предмет.
[42:25.000 --> 42:27.000]  Не кладем.
[42:29.000 --> 42:31.000]  И ты предмет.
[42:33.000 --> 42:35.000]  А теперь, если мы его кладем?
[42:41.000 --> 42:43.000]  Жиминус что?
[42:43.000 --> 42:45.000]  Какой вес?
[42:45.000 --> 42:47.000]  Вес.
[43:05.000 --> 43:07.000]  Победа.
[43:07.000 --> 43:09.000]  Я вас поздравляю, мы смогли.
[43:09.000 --> 43:11.000]  Активно.
[43:15.000 --> 43:17.000]  Зачем собирать ответ?
[43:17.000 --> 43:19.000]  Если можно, ответ не собирается.
[43:19.000 --> 43:21.000]  Если можно,
[43:21.000 --> 43:23.000]  все в нули засунуть.
[43:23.000 --> 43:25.000]  Да.
[43:25.000 --> 43:27.000]  Плюс сейты, конечно.
[43:27.000 --> 43:29.000]  То есть, чтобы уберете от сейты.
[43:29.000 --> 43:31.000]  Правильно.
[43:31.000 --> 43:33.000]  Окей.
[43:35.000 --> 43:37.000]  Порядок тоже будет в два вложенных пора.
[43:39.000 --> 43:41.000]  Сначала у вас будет
[43:41.000 --> 43:43.000]  пор по предметам.
[43:43.000 --> 43:45.000]  Пор по И.
[43:45.000 --> 43:47.000]  Внутри будет пор по W.
[43:49.000 --> 43:51.000]  Но восстановить ответ
[43:51.000 --> 43:53.000]  здесь два варианта.
[43:53.000 --> 43:55.000]  Первый вариант это
[43:55.000 --> 43:57.000]  хранить предков абсолютно так же.
[43:57.000 --> 43:59.000]  То есть, вы понимаете, как хранить предков.
[43:59.000 --> 44:01.000]  Если вы пользуете этой формулой,
[44:01.000 --> 44:03.000]  чтобы вы этот предмет положили в ответ.
[44:03.000 --> 44:05.000]  Дальше здесь с конца.
[44:05.000 --> 44:07.000]  И смотрите, какие состояния
[44:07.000 --> 44:09.000]  вы использовали.
[44:09.000 --> 44:11.000]  И с этим берете и
[44:11.000 --> 44:13.000]  этот.
[44:13.000 --> 44:15.000]  И выписываете
[44:15.000 --> 44:17.000]  предметы.
[44:17.000 --> 44:19.000]  Окей.
[44:19.000 --> 44:21.000]  Тут возник прикол
[44:21.000 --> 44:23.000]  от коллег, что они ничего не поняли.
[44:23.000 --> 44:25.000]  Давайте возьмем
[44:25.000 --> 44:27.000]  и эту задачу еще раз разберем.
[44:27.000 --> 44:29.000]  Только на примере.
[44:29.000 --> 44:31.000]  Нужен какой-нибудь массив.
[44:37.000 --> 44:39.000]  Похоже на правду.
[44:39.000 --> 44:41.000]  Давайте теперь
[44:41.000 --> 44:43.000]  рассмотрим.
[44:43.000 --> 44:45.000]  Ну, это наша АИТ.
[44:45.000 --> 44:47.000]  Это И.
[44:47.000 --> 44:49.000]  Давайте по 1, 2, 3,
[44:49.000 --> 44:51.000]  4, 5, 6.
[44:51.000 --> 44:53.000]  Теперь нам надо их отсортировать.
[44:53.000 --> 44:55.000]  Как мы говорили, отсортируем
[44:55.000 --> 44:57.000]  сначала по неубыванию
[44:57.000 --> 44:59.000]  первой координаты.
[44:59.000 --> 45:01.000]  В случае равенства, по убыванию
[45:01.000 --> 45:03.000]  второй.
[45:03.000 --> 45:05.000]  В случае равенства, по убыванию
[45:05.000 --> 45:07.000]  0, 2,
[45:07.000 --> 45:09.000]  ой, минус 1 есть еще.
[45:09.000 --> 45:11.000]  Минус 1, 3.
[45:11.000 --> 45:13.000]  Записали
[45:13.000 --> 45:15.000]  0, 2.
[45:15.000 --> 45:17.000]  Записали
[45:17.000 --> 45:19.000]  1, 6, 1, 1.
[45:23.000 --> 45:25.000]  2, 4, 3, 5.
[45:29.000 --> 45:31.000]  Окей.
[45:31.000 --> 45:33.000]  Теперь выпишем наш массив ДП.
[45:33.000 --> 45:35.000]  Мы идем в форум.
[45:35.000 --> 45:37.000]  Изначально все нули.
[45:41.000 --> 45:43.000]  Вот нам говорят, минус 1, 3.
[45:43.000 --> 45:45.000]  Мы берем
[45:45.000 --> 45:47.000]  третий индекс.
[45:47.000 --> 45:49.000]  Вот эту вот штуку берем
[45:49.000 --> 45:51.000]  и пишем
[45:51.000 --> 45:53.000]  ДП третья
[45:53.000 --> 45:55.000]  равно 1
[45:55.000 --> 45:57.000]  плюс максимум
[45:57.000 --> 45:59.000]  из
[45:59.000 --> 46:01.000]  ДП
[46:01.000 --> 46:03.000]  житых по
[46:03.000 --> 46:05.000]  ж меньше
[46:05.000 --> 46:07.000]  и.
[46:09.000 --> 46:11.000]  Здесь максимум из нуля.
[46:11.000 --> 46:13.000]  У нас здесь все нули, поэтому можно без этого.
[46:13.000 --> 46:15.000]  Хорошо.
[46:15.000 --> 46:17.000]  То есть по ж меньше
[46:17.000 --> 46:19.000]  трех.
[46:19.000 --> 46:21.000]  Это
[46:21.000 --> 46:23.000]  вот это 1, 2.
[46:23.000 --> 46:25.000]  Берем здесь максимум 0, 0.
[46:25.000 --> 46:27.000]  0.
[46:27.000 --> 46:29.000]  Плюс 1, 1.
[46:31.000 --> 46:33.000]  Следующая ДП, вот эта штука.
[46:33.000 --> 46:35.000]  0, 2.
[46:37.000 --> 46:39.000]  Какой 0?
[46:41.000 --> 46:43.000]  Получилось 1.
[46:45.000 --> 46:47.000]  Да, мы считаем ДП третьей
[46:47.000 --> 46:49.000]  и хотим положить
[46:49.000 --> 46:51.000]  изменения в точке.
[46:51.000 --> 46:53.000]  Че?
[46:53.000 --> 46:55.000]  Пожи меньшим тройки.
[46:55.000 --> 46:57.000]  То есть всех кто левее.
[46:57.000 --> 46:59.000]  Максимум 0.
[46:59.000 --> 47:01.000]  Да это мы только что написали.
[47:01.000 --> 47:03.000]  У нас было значение.
[47:09.000 --> 47:11.000]  Дальше.
[47:11.000 --> 47:13.000]  0, 2.
[47:13.000 --> 47:15.000]  ДП второй. Снова берете максимум
[47:15.000 --> 47:17.000]  на префиксе.
[47:17.000 --> 47:19.000]  0, поэтому здесь 1 снова будет.
[47:21.000 --> 47:23.000]  Второй чувак.
[47:23.000 --> 47:25.000]  1, 6.
[47:25.000 --> 47:27.000]  Пишем ДП 6.
[47:29.000 --> 47:31.000]  1 плюс максимум.
[47:31.000 --> 47:33.000]  Пожи меньшим 6.
[47:33.000 --> 47:35.000]  ДП житых.
[47:37.000 --> 47:39.000]  Берем максимум.
[47:39.000 --> 47:41.000]  Вот он.
[47:41.000 --> 47:43.000]  Победа.
[47:43.000 --> 47:45.000]  1 плюс 1 это 2.
[47:47.000 --> 47:49.000]  То есть у вас здесь
[47:49.000 --> 47:51.000]  лучшая подпоследовательность, которая заканчивается в этом элементе
[47:51.000 --> 47:53.000]  в шестом, это 0, 1.
[47:53.000 --> 47:55.000]  Или минус 1, 1.
[47:55.000 --> 47:57.000]  Причем здесь,
[47:57.000 --> 47:59.000]  как вы спрашивали, вы можете с помощью ДО
[47:59.000 --> 48:01.000]  спросить не только максимум, но и позицию максимума.
[48:01.000 --> 48:03.000]  Поэтому вы знаете сразу
[48:03.000 --> 48:05.000]  либо этот, либо этот ответ.
[48:05.000 --> 48:07.000]  Но там не важно, какая у вас политика именно.
[48:07.000 --> 48:09.000]  Выбор в случае равных.
[48:09.000 --> 48:11.000]  Дальше. У вас подают сюда.
[48:11.000 --> 48:13.000]  ДП 1, 1.
[48:13.000 --> 48:15.000]  ДП 1 считается как?
[48:15.000 --> 48:17.000]  ДП 1 снова берем. Вторую компоненту
[48:17.000 --> 48:19.000]  все время рассматриваем.
[48:19.000 --> 48:21.000]  Это будет максимум на префиксе, но левее у нас ничего нет,
[48:21.000 --> 48:23.000]  поэтому 0.
[48:23.000 --> 48:25.000]  Плюс 1, поэтому здесь 1 ответ.
[48:25.000 --> 48:27.000]  А вот если бы мы их рассмотрели в обратном порядке,
[48:27.000 --> 48:29.000]  сразу вам скажу,
[48:29.000 --> 48:31.000]  то у нас сначала бы здесь бы появился 1
[48:33.000 --> 48:35.000]  и он мог бы заафектить
[48:35.000 --> 48:37.000]  эту штуку просто-напросто.
[48:37.000 --> 48:39.000]  У нас 1 бы стоял где-нибудь здесь,
[48:39.000 --> 48:41.000]  то у нас было бы минус 1, 1,
[48:41.000 --> 48:43.000]  а потом еще 1 вот эта вот была бы.
[48:43.000 --> 48:45.000]  А теперь такой ситуации быть не может.
[48:45.000 --> 48:47.000]  Потому что сначала рассмотрели
[48:47.000 --> 48:49.000]  саму правую и так далее.
[48:49.000 --> 48:51.000]  Дальше 2, 4.
[48:51.000 --> 48:53.000]  Когда ДП 4
[48:53.000 --> 48:55.000]  это максимум
[48:55.000 --> 48:57.000]  на префиксе плюс 1, то есть 2.
[48:59.000 --> 49:01.000]  И ДП 5
[49:01.000 --> 49:03.000]  это максимум
[49:03.000 --> 49:05.000]  на префиксе плюс 1,
[49:05.000 --> 49:07.000]  то есть 3.
[49:07.000 --> 49:09.000]  Поэтому ответ вот он.
[49:09.000 --> 49:11.000]  По массиву переходов
[49:11.000 --> 49:13.000]  можно понять, что этот отсюда.
[49:13.000 --> 49:15.000]  Это там не знаю, откуда-нибудь отсюда,
[49:15.000 --> 49:17.000]  например.
[49:17.000 --> 49:19.000]  Когда мы двойку считали, мы либо отсюда, либо отсюда брали.
[49:19.000 --> 49:21.000]  Ну все.
[49:21.000 --> 49:23.000]  То есть ответ
[49:23.000 --> 49:25.000]  минус 1, 2, 3.
[49:33.000 --> 49:35.000]  Я так понял, что была проблема
[49:35.000 --> 49:37.000]  с тем, что было не очевидно, что надо брать именно вторую компоненту пары
[49:37.000 --> 49:39.000]  в качестве индекса.
[49:39.000 --> 49:41.000]  Так, ладно.
[49:41.000 --> 49:43.000]  С этим разобрались и
[49:43.000 --> 49:45.000]  а, ну рюкзак мы закончили.
[49:45.000 --> 49:47.000]  Ну тогда поехали
[49:51.000 --> 49:53.000]  вторая, так сказать, часть лекции.
[49:53.000 --> 49:55.000]  Она у нас будет посвящена матричному ДП.
[49:55.000 --> 49:57.000]  Надеюсь, вы научились
[49:57.000 --> 49:59.000]  перемножать матрицы за
[49:59.000 --> 50:01.000]  2, 4.
[50:01.000 --> 50:03.000]  А теперь
[50:03.000 --> 50:05.000]  у нас будет
[50:05.000 --> 50:07.000]  матрица.
[50:07.000 --> 50:09.000]  Мы научились перемножать матрицы за
[50:09.000 --> 50:11.000]  кто-то за 2, кто-то за 1,
[50:11.000 --> 50:13.000]  кто-то за 3 года обучения.
[50:21.000 --> 50:23.000]  Матричная ДП.
[50:23.000 --> 50:25.000]  В чем его суть?
[50:25.000 --> 50:27.000]  Его суть в том, что если у нас есть
[50:27.000 --> 50:29.000]  какой-то...
[50:29.000 --> 50:31.000]  Вот здесь, видите, мы рассматриваем
[50:31.000 --> 50:33.000]  например, вот здесь вот,
[50:33.000 --> 50:35.000]  мы рассматриваем переход точечно.
[50:35.000 --> 50:37.000]  Но вдруг мы умеем переходить в
[50:37.000 --> 50:39.000]  двумерной динамике, пересчитывать
[50:39.000 --> 50:41.000]  ДП и ты весь массив
[50:41.000 --> 50:43.000]  через ДП и минус 1 весь массив.
[50:43.000 --> 50:45.000]  Просто он будет умножаться
[50:45.000 --> 50:47.000]  на какую-то матрицу.
[50:47.000 --> 50:49.000]  Ну тогда нам можно будет как-то
[50:49.000 --> 50:51.000]  это оптимизировать, это дело.
[50:51.000 --> 50:53.000]  Ну сейчас будут появты примеры.
[50:53.000 --> 50:55.000]  Ну самый простой
[50:55.000 --> 50:57.000]  пример, нулевой, так сказать, это числа
[50:57.000 --> 50:59.000]  Фибоначчо. Помните, как мы их считали?
[51:01.000 --> 51:03.000]  Мы их считали за линию.
[51:03.000 --> 51:05.000]  Второй вариант, мы
[51:05.000 --> 51:07.000]  можем воспользоваться формулой
[51:07.000 --> 51:09.000]  Бене через золотое сечение и
[51:09.000 --> 51:11.000]  победить.
[51:13.000 --> 51:15.000]  А теперь будем рассматривать следующий вариант.
[51:17.000 --> 51:19.000]  Вспомним же, что у нас есть просто рекуррента
[51:19.000 --> 51:21.000]  на самом деле.
[51:23.000 --> 51:25.000]  Давайте запишем
[51:25.000 --> 51:27.000]  вектор
[51:27.000 --> 51:29.000]  fn, fn-1.
[51:29.000 --> 51:31.000]  И пересчитаем
[51:31.000 --> 51:33.000]  его
[51:33.000 --> 51:35.000]  через вектор
[51:35.000 --> 51:37.000]  fn-2.
[51:37.000 --> 51:39.000]  Какую матрицу надо написать здесь?
[51:41.000 --> 51:43.000]  Давайте первую строку.
[51:43.000 --> 51:45.000]  fn через fn-1, fn-2
[51:45.000 --> 51:47.000]  как выражается?
[51:47.000 --> 51:49.000]  1 плюс 1.
[51:49.000 --> 51:51.000]  fn-1 выражается 1, 0.
[51:51.000 --> 51:53.000]  Просто-напросто.
[51:53.000 --> 51:55.000]  У вас fn-1, fn-2
[51:55.000 --> 51:57.000]  не участвуют, у вас есть fn-1, есть.
[51:57.000 --> 51:59.000]  То есть так называемая матрица
[51:59.000 --> 52:01.000]  A. Матрица перехода.
[52:05.000 --> 52:07.000]  Вы можете сделать это
[52:07.000 --> 52:09.000]  кучу раз
[52:09.000 --> 52:11.000]  и показать, что здесь у вас будет просто-напросто
[52:11.000 --> 52:13.000]  что-то типа такого.
[52:15.000 --> 52:17.000]  f1, f0.
[52:23.000 --> 52:25.000]  Это A в степени n-1,
[52:25.000 --> 52:27.000]  это f1, это f0.
[52:27.000 --> 52:29.000]  Вы просто взяли
[52:29.000 --> 52:31.000]  и применили вот эту же форму еще раз.
[52:31.000 --> 52:33.000]  И просто так много раз
[52:33.000 --> 52:35.000]  ее поприменяли.
[52:35.000 --> 52:37.000]  Чтобы посчитать эту штуку,
[52:37.000 --> 52:39.000]  вы можете посчитать через fn-2, fn-3.
[52:39.000 --> 52:41.000]  И у вас снова
[52:41.000 --> 52:43.000]  матрица A выделится.
[52:43.000 --> 52:45.000]  В силу ассоциативности
[52:45.000 --> 52:47.000]  умножений вы можете
[52:47.000 --> 52:49.000]  сначала ашки все поперемножать.
[52:49.000 --> 52:51.000]  Так как у него
[52:51.000 --> 52:53.000]  с квадратами, вы их просто пишете,
[52:53.000 --> 52:55.000]  что это в степень.
[52:55.000 --> 52:57.000]  Окей.
[52:57.000 --> 52:59.000]  У вас должно быть на первом семинаре
[52:59.000 --> 53:01.000]  алгоритм бинарного возведения в степень.
[53:01.000 --> 53:03.000]  Как число
[53:03.000 --> 53:05.000]  возвести в степень n за алгоритм n?
[53:05.000 --> 53:07.000]  Было такое дело?
[53:07.000 --> 53:09.000]  Что если число четное,
[53:09.000 --> 53:11.000]  вы считаете его
[53:11.000 --> 53:13.000]  корень и просто умножаете.
[53:13.000 --> 53:15.000]  То есть степень пополам берете.
[53:15.000 --> 53:17.000]  А если степень нечетный,
[53:17.000 --> 53:19.000]  то делаете минус 1 и он остается четный.
[53:19.000 --> 53:21.000]  Но это же все работает
[53:21.000 --> 53:23.000]  с производственными объектами на самом деле.
[53:23.000 --> 53:25.000]  То есть мы можем здесь
[53:25.000 --> 53:27.000]  возвести...
[53:27.000 --> 53:29.000]  В самом деле у нас решение работает
[53:29.000 --> 53:31.000]  за 2 в кубе.
[53:31.000 --> 53:33.000]  Это время возведения матрицы.
[53:33.000 --> 53:35.000]  Время перемножения двух матриц.
[53:35.000 --> 53:37.000]  На от
[53:37.000 --> 53:39.000]  на логе
[53:39.000 --> 53:41.000]  это бинарное возведение в степень.
[53:41.000 --> 53:43.000]  Это бинарное возведение в степень.
[53:47.000 --> 53:49.000]  В степень.
[53:49.000 --> 53:51.000]  То есть что равно от логен.
[53:53.000 --> 53:55.000]  Окей?
[53:57.000 --> 53:59.000]  Хорошо.
[53:59.000 --> 54:01.000]  Давайте теперь попытаемся это обобщить как-то.
[54:01.000 --> 54:03.000]  Дело
[54:03.000 --> 54:05.000]  а именно
[54:05.000 --> 54:07.000]  рассмотрим
[54:07.000 --> 54:09.000]  произвольные рекуррентные соотношения
[54:09.000 --> 54:11.000]  соотношения
[54:11.000 --> 54:13.000]  не совсем произвольные.
[54:13.000 --> 54:15.000]  Сейчас напишу как они будут у нас называться.
[54:21.000 --> 54:23.000]  То есть раздел первый пример
[54:23.000 --> 54:25.000]  на самом деле здесь.
[54:25.000 --> 54:27.000]  Это линейные
[54:27.000 --> 54:29.000]  рекуррентные
[54:33.000 --> 54:35.000]  соотношения
[54:35.000 --> 54:41.000]  в постоянными коэффициентами
[54:47.000 --> 54:49.000]  так называемые LRSPK
[54:53.000 --> 54:55.000]  произвольного порядка.
[54:57.000 --> 54:59.000]  Ну как решать?
[54:59.000 --> 55:01.000]  То есть
[55:01.000 --> 55:03.000]  что мы имеем?
[55:03.000 --> 55:05.000]  Ровно
[55:05.000 --> 55:07.000]  лямбда первой
[55:07.000 --> 55:09.000]  а н-1
[55:13.000 --> 55:15.000]  лямбда катой, а н-катой.
[55:17.000 --> 55:19.000]  То есть вот порядка k рекуррента вам.
[55:19.000 --> 55:21.000]  Либо начать от второго порядка.
[55:21.000 --> 55:23.000]  Здесь порядок k.
[55:23.000 --> 55:25.000]  Лямбда это просто какие-то числа.
[55:25.000 --> 55:27.000]  Давайте выпишем как считать.
[55:29.000 --> 55:31.000]  Выписывает следующее соотношение.
[55:33.000 --> 55:35.000]  Н-к
[55:35.000 --> 55:37.000]  плюс два
[55:37.000 --> 55:39.000]  плюс один.
[55:41.000 --> 55:43.000]  Вроде бы.
[55:47.000 --> 55:49.000]  Здесь будет что-то страшное.
[55:49.000 --> 55:51.000]  Мы не знаем что это такое пока что.
[56:03.000 --> 56:05.000]  Давайте выпишем первую сроку матрицы.
[56:07.000 --> 56:09.000]  Просто лямбда, вектор, лямбда.
[56:13.000 --> 56:15.000]  Дальше какая матрица будет?
[56:17.000 --> 56:19.000]  Ну да.
[56:19.000 --> 56:21.000]  Дать ноль.
[56:23.000 --> 56:25.000]  Короче я утверждаю, что он будет иметь вот такой вот вид на самом деле.
[56:29.000 --> 56:31.000]  Такой вот блочный вид матрица будет иметь.
[56:33.000 --> 56:35.000]  Это нули, это единичная.
[56:35.000 --> 56:37.000]  Ну почему это так? Вроде понятно.
[56:37.000 --> 56:39.000]  Потому что у вас n-1
[56:39.000 --> 56:41.000]  вот, n-1 выражается здесь.
[56:43.000 --> 56:45.000]  Или нет, или нет? Не туда сместим.
[56:45.000 --> 56:47.000]  В другую сторону.
[56:49.000 --> 56:51.000]  Наоборот здесь будет вектор нули, здесь e.
[56:53.000 --> 56:55.000]  Здесь будет n-1, братцы, первая компонента.
[56:55.000 --> 56:57.000]  Получайте n-1.
[56:57.000 --> 56:59.000]  Все, потому что все остальные должны быть
[56:59.000 --> 57:01.000]  нулями в этой строке.
[57:01.000 --> 57:03.000]  Здесь ноль, единичка,
[57:03.000 --> 57:05.000]  потому что с n-1-2 берется.
[57:05.000 --> 57:07.000]  Все нули. Ну и так далее.
[57:11.000 --> 57:13.000]  То есть итоговое время решения
[57:13.000 --> 57:15.000]  от кавкуба log n
[57:15.000 --> 57:17.000]  для поиска n-го члена рекурриента.
[57:19.000 --> 57:21.000]  Что?
[57:23.000 --> 57:25.000]  Ну я не очень хочу к этому стремиться.
[57:25.000 --> 57:27.000]  Скажем так.
[57:27.000 --> 57:29.000]  Нет, ну есть алгоритм штраса,
[57:29.000 --> 57:31.000]  но я понимаю.
[57:31.000 --> 57:33.000]  Честно, я не очень знаю, можно их быстро перемножать.
[57:33.000 --> 57:35.000]  Здесь я не эксперт
[57:35.000 --> 57:37.000]  во всяких матричных умножениях.
[57:37.000 --> 57:39.000]  Возможно и можно,
[57:39.000 --> 57:41.000]  но я не уверен, честно говоря.
[57:41.000 --> 57:43.000]  Это надо быть
[57:43.000 --> 57:45.000]  гуру бычматов
[57:45.000 --> 57:47.000]  с матричными размножениями.
[57:49.000 --> 57:51.000]  Окей.
[57:51.000 --> 57:53.000]  Казалось бы, круто, да?
[57:55.000 --> 57:57.000]  Так, первый курс. У вас же были
[57:57.000 --> 57:59.000]  три системы уравнений или нет еще?
[58:01.000 --> 58:03.000]  Ну, которые в матричном виде записывать.
[58:03.000 --> 58:05.000]  Некоторые там три переменных, три уравнения.
[58:07.000 --> 58:09.000]  Там теория Макронекера Капелли вам что-нибудь говорит?
[58:09.000 --> 58:11.000]  Грустная история.
[58:11.000 --> 58:13.000]  Ну ладно.
[58:13.000 --> 58:15.000]  Не, ну я
[58:15.000 --> 58:17.000]  уйду в эту сторону, немножко с другой стороны зайду.
[58:21.000 --> 58:23.000]  Ладно.
[58:23.000 --> 58:25.000]  Здесь уже будет
[58:25.000 --> 58:27.000]  просто такой фан-фэкт,
[58:27.000 --> 58:29.000]  фан-прикол, так сказать.
[58:31.000 --> 58:33.000]  Второй сюжет.
[58:33.000 --> 58:35.000]  Пусть у нас есть
[58:35.000 --> 58:37.000]  рекуррента следующего вида.
[58:39.000 --> 58:41.000]  Пам-пам-пам.
[58:41.000 --> 58:43.000]  Ну давайте
[58:43.000 --> 58:45.000]  лямбда 0
[58:45.000 --> 58:47.000]  прям в степени K.
[58:49.000 --> 58:51.000]  Лямбда KT.
[58:53.000 --> 58:55.000]  Просто лямбда KT.
[58:55.000 --> 58:57.000]  Лямбда KT.
[58:57.000 --> 58:59.000]  То есть у нас
[58:59.000 --> 59:01.000]  будет с вами
[59:01.000 --> 59:03.000]  то есть смотрите, у нас здесь было
[59:03.000 --> 59:05.000]  однородное линейное-рекуррентное
[59:05.000 --> 59:07.000]  соотношение.
[59:07.000 --> 59:09.000]  Линейное, потому что у вас здесь все в первых степенях
[59:09.000 --> 59:11.000]  и нет произведений никаких.
[59:11.000 --> 59:13.000]  То есть у вас все линейная комбинация.
[59:13.000 --> 59:15.000]  У рекуррента понятная постоянная коэффициента,
[59:15.000 --> 59:17.000]  потому что лямбда 0 это константа.
[59:17.000 --> 59:19.000]  Еще она однородная,
[59:19.000 --> 59:21.000]  потому что у вас здесь нет
[59:21.000 --> 59:23.000]  неоднородности.
[59:23.000 --> 59:25.000]  А здесь у вас есть
[59:25.000 --> 59:27.000]  неоднородность.
[59:27.000 --> 59:29.000]  Это у вас
[59:29.000 --> 59:31.000]  какая-то непонятная штука
[59:31.000 --> 59:33.000]  близко от пункции от N.
[59:33.000 --> 59:35.000]  В нашем случае много членов.
[59:35.000 --> 59:37.000]  Как мы будем с этим
[59:37.000 --> 59:39.000]  справляться?
[59:39.000 --> 59:41.000]  Незапно выясняется, что
[59:43.000 --> 59:45.000]  давайте напишем
[59:45.000 --> 59:47.000]  утверждение,
[59:47.000 --> 59:49.000]  что
[59:51.000 --> 59:53.000]  C из нуля...
[59:55.000 --> 59:57.000]  Ой, как сложно.
[59:57.000 --> 59:59.000]  Очень сложно сейчас.
[59:59.000 --> 01:00:01.000]  Типа такого.
[01:00:03.000 --> 01:00:05.000]  N-1 только.
[01:00:11.000 --> 01:00:13.000]  N-1 квадрат
[01:00:13.000 --> 01:00:15.000]  и так далее.
[01:00:15.000 --> 01:00:17.000]  И так далее.
[01:00:17.000 --> 01:00:19.000]  Вроде бы это похоже на правду.
[01:00:19.000 --> 01:00:21.000]  Ну, бином не тонн расписали.
[01:00:23.000 --> 01:00:25.000]  То есть смотрите, что
[01:00:25.000 --> 01:00:27.000]  можно, грубо говоря, заявить, что
[01:00:27.000 --> 01:00:29.000]  у вас здесь есть
[01:00:29.000 --> 01:00:31.000]  так называемый...
[01:00:31.000 --> 01:00:33.000]  что вы N вкаты можете разложить просто
[01:00:33.000 --> 01:00:35.000]  коэффициентом через N-1 по степеням.
[01:00:35.000 --> 01:00:37.000]  Еще более такое
[01:00:37.000 --> 01:00:39.000]  просто утверждение, что если вы рассмотрите набор
[01:00:39.000 --> 01:00:41.000]  единица
[01:00:41.000 --> 01:00:43.000]  N, N квадрат, N куб
[01:00:43.000 --> 01:00:45.000]  и так далее степени N, то это базис
[01:00:45.000 --> 01:00:47.000]  пространства многочленов.
[01:00:47.000 --> 01:00:49.000]  Но это вроде бы очевидно, потому что многочлен
[01:00:49.000 --> 01:00:51.000]  это линейная комбинация МНОМА.
[01:00:57.000 --> 01:00:59.000]  Не, базис это первый семинар
[01:00:59.000 --> 01:01:01.000]  по аналиту.
[01:01:03.000 --> 01:01:05.000]  Ну, базис это вы умеете...
[01:01:05.000 --> 01:01:07.000]  у вас есть базисные вектора, вы умеете выражать любой другой вектор
[01:01:07.000 --> 01:01:09.000]  через них, просто их линейной комбинацией.
[01:01:09.000 --> 01:01:11.000]  Все.
[01:01:11.000 --> 01:01:13.000]  То есть вы умеете любой многочлен выражать
[01:01:13.000 --> 01:01:15.000]  через N, через 1,
[01:01:15.000 --> 01:01:17.000]  N, N квадрат и так далее.
[01:01:17.000 --> 01:01:19.000]  Это вроде бы очевидный факт.
[01:01:19.000 --> 01:01:21.000]  Но при этом вы умеете тогда
[01:01:21.000 --> 01:01:23.000]  по этому утверждению
[01:01:23.000 --> 01:01:25.000]  выражать N вкатой.
[01:01:25.000 --> 01:01:27.000]  Просто через N-1 вкатой.
[01:01:27.000 --> 01:01:29.000]  То есть тогда у вас и N-1
[01:01:29.000 --> 01:01:31.000]  во всех степенях тоже является базисом многочлена.
[01:01:31.000 --> 01:01:33.000]  Ну окей.
[01:01:33.000 --> 01:01:35.000]  Знаете что, мы можем написать просто формулу
[01:01:35.000 --> 01:01:37.000]  перехода в следующую.
[01:01:37.000 --> 01:01:39.000]  А N
[01:01:39.000 --> 01:01:41.000]  сейчас
[01:01:41.000 --> 01:01:43.000]  N-1
[01:01:43.000 --> 01:01:45.000]  N вкатой
[01:01:45.000 --> 01:01:47.000]  N-1
[01:01:47.000 --> 01:01:49.000]  N-1
[01:01:49.000 --> 01:01:51.000]  N-0
[01:01:55.000 --> 01:01:57.000]  Здесь A
[01:01:57.000 --> 01:01:59.000]  N-1
[01:01:59.000 --> 01:02:01.000]  N-2
[01:02:01.000 --> 01:02:03.000]  Дальше
[01:02:03.000 --> 01:02:05.000]  А, ну
[01:02:05.000 --> 01:02:07.000]  здесь можно даже проще, здесь можно без
[01:02:07.000 --> 01:02:09.000]  N-1
[01:02:11.000 --> 01:02:13.000]  Дальше здесь будет N-1
[01:02:13.000 --> 01:02:15.000]  вкатой
[01:02:15.000 --> 01:02:17.000]  N-2 вкатой
[01:02:17.000 --> 01:02:19.000]  N-1
[01:02:19.000 --> 01:02:21.000]  и 1
[01:02:27.000 --> 01:02:29.000]  Вы спрашиваете, причем здесь динамика?
[01:02:29.000 --> 01:02:31.000]  Я...
[01:02:31.000 --> 01:02:33.000]  Если мы успеем, мы разберем еще сюжет сегодня.
[01:02:33.000 --> 01:02:35.000]  Похожий на матричное применение.
[01:02:35.000 --> 01:02:37.000]  Я просто рассказываю математические приколы.
[01:02:37.000 --> 01:02:39.000]  Всякие разные связанные с этим.
[01:02:39.000 --> 01:02:41.000]  Ну,
[01:02:41.000 --> 01:02:43.000]  первый вектор это 1.
[01:02:45.000 --> 01:02:47.000]  Здесь вроде понятно почему.
[01:02:47.000 --> 01:02:49.000]  Дальше
[01:02:49.000 --> 01:02:51.000]  N вкатой
[01:02:51.000 --> 01:02:53.000]  здесь 0.
[01:02:53.000 --> 01:02:55.000]  А N вкатой мы сами выяснили, как выражается.
[01:02:57.000 --> 01:02:59.000]  C из K пока
[01:02:59.000 --> 01:03:01.000]  C из K пока минус 1
[01:03:01.000 --> 01:03:03.000]  C из
[01:03:05.000 --> 01:03:07.000]  0 пока
[01:03:07.000 --> 01:03:09.000]  Здесь будет везде 0
[01:03:15.000 --> 01:03:17.000]  Ой-ой-ой-ой-ой-ой-ой-ой
[01:03:17.000 --> 01:03:19.000]  Здесь N в степени K минус 1
[01:03:19.000 --> 01:03:21.000]  Дальше N в степени K минус 1
[01:03:21.000 --> 01:03:23.000]  Дальше N в степени K минус 1
[01:03:23.000 --> 01:03:25.000]  Здесь 0
[01:03:25.000 --> 01:03:27.000]  Здесь C из K минус 1
[01:03:27.000 --> 01:03:29.000]  пока минус 1
[01:03:29.000 --> 01:03:31.000]  Здесь 2 0
[01:03:33.000 --> 01:03:35.000]  Здесь37
[01:03:35.000 --> 01:03:37.000] ͬͮͩ́͡͡͞� world
[01:03:37.000 --> 01:03:41.000]  lying
[01:03:45.000 --> 01:03:47.000]  Да, спасибо!
[01:03:49.000 --> 01:03:51.000]  Сейчас. Подожди, нет, не лямбы.
[01:03:51.000 --> 01:03:53.000]  Здесь будут гаммы.
[01:03:55.000 --> 01:03:57.000]  Сейчас я скажу, что такое гамма.
[01:03:57.000 --> 01:04:05.280]  гамма каты где гамма 0 это что такое это вам нужно выразить так сказать вот этот
[01:04:05.280 --> 01:04:23.720]  вот ваш прекрасный то есть гамма 0 это вот такие вот коэффициенты что вас ну да можно вам не
[01:04:23.720 --> 01:04:29.600]  советую это можно один раз ручками посчитать гамма это такая штука чтобы это было равно
[01:04:29.600 --> 01:04:37.520]  лямбда нулевой кат и плюс ну или же опять дай здесь говорят что можно просто у вас есть
[01:04:37.520 --> 01:04:42.680]  матрица перехода от базиса к базису то есть вы можете взять вектор гамма катах получить как
[01:04:42.680 --> 01:04:50.080]  вектор лямбда кат как этот вектор лямбда кат х умножить на матрицу перехода из цшек ну матрицу
[01:04:50.080 --> 01:05:08.000]  перехода мы сейчас допишем как классная матрица балдеж да то есть смотрите знаете кто это такой
[01:05:08.000 --> 01:05:16.760]  треугольник паскаля то есть вы эту матрицу легко заполнить на самом деле это не надо цшки считать
[01:05:16.760 --> 01:05:21.880]  заново с нуля это просто треугольник паскаля матрица перехода между гаммами лямбдами тоже
[01:05:21.880 --> 01:05:29.160]  треугольник паскаля то есть все прекрасно здесь нули чтобы получить гамму вам нужно лямбды
[01:05:29.160 --> 01:05:35.680]  перемножить на матрицу треугольника паскаля вы получаете гаммы и дальше считаете всю рекурренту
[01:05:35.680 --> 01:05:43.800]  вот конспекте у меня есть страшное место где у меня соединены эти два подхода и там прям такая
[01:05:43.800 --> 01:05:59.000]  огромная матрица но я думаю здесь понятно что это тоже будет от k в кубе на log n для тех кто знает
[01:05:59.000 --> 01:06:05.240]  что такое дифуры помните у вас там есть неоднородные решения дифуров с постоянными
[01:06:05.240 --> 01:06:10.320]  коэффициентами вы там тоже решаете сначала однородную часть потом неоднородная познакомьтесь
[01:06:10.320 --> 01:06:14.720]  если вы разложите неоднородную часть по базису вы получите решение то по такому же методу на
[01:06:14.720 --> 01:06:22.400]  самом деле то есть теория дифуров в этом плане очень похож на теорию рекуррента
[01:06:22.400 --> 01:06:32.800]  окей теперь собственно сюжет какой-нибудь да надо привести хороший чтобы не все время
[01:06:32.800 --> 01:06:40.080]  матрицы писать очень прикольная дать что-нибудь прикольное напишем рассмотрим такую задачу
[01:06:40.080 --> 01:06:45.800]  что у нас какого-то региона все-таки
[01:06:45.800 --> 01:06:47.800]  а
[01:06:51.600 --> 01:07:03.760]  т-сюжет число гладкое а n если для любого и
[01:07:03.760 --> 01:07:19.120]  1n-1 а и ты минус а и минус 1 по модулю не превосходит единицу то есть у вас все
[01:07:19.120 --> 01:07:26.960]  соседние цифры отличается не больше на единицу посчитать количество гладких чисел длины n
[01:07:26.960 --> 01:07:34.080]  да полный перебор
[01:07:34.080 --> 01:07:47.800]  полный перебор самый примитивный полный перебор это за 10 в степени n перебрать но еще на n надо
[01:07:47.800 --> 01:07:59.760]  умножить не забыть конечно же как делать будем ведем дпн катая ответ
[01:07:59.760 --> 01:08:23.440]  давайте число гладкий количество гладких чисел если длина n и число и заканчивается на к
[01:08:23.440 --> 01:08:32.960]  ну понятно как делать на самом деле плюс-минус что у вас какой здесь переход
[01:08:32.960 --> 01:08:47.800]  равно здесь будет три случая что если вы заканчиваетесь на к то вы можете взять
[01:08:47.800 --> 01:08:56.760]  дп то есть вы берете число на длину на 1 меньше и просто-напросто приписывайте к нему число
[01:08:56.760 --> 01:09:03.880]  равное к тогда вас устроит все эти числа которые длины n-1 заканчивались на к-1 как
[01:09:03.880 --> 01:09:27.520]  плюс-1 момента почему дп н-1 ката плюс-дп к-1 к-1 плюс-дп n-1 к-1 это если к
[01:09:27.520 --> 01:09:45.040]  1 8 если у вас 9 то вы не могли 10 заканчивается хорошо если к равно 0 наверное дп n-1
[01:09:45.040 --> 01:10:11.520]  каты плюс-дп n-1 к-1 к равно 0 третий случай это дп n-1 к плюс-дп n-1 к-1 к равно 9
[01:10:11.520 --> 01:10:22.840]  ну за от 10 н 10 н короче да вас действие здесь будет состояние разных пересчет за вот единицы
[01:10:22.840 --> 01:10:34.800]  4n внутри 4k база понятна какая дп длины 1 рассматривайте на все числа просто что такое число есть одно
[01:11:04.800 --> 01:11:23.000]  теперь давайте возьмем и но это за линию до решения потом круто да теперь давайте
[01:11:23.000 --> 01:11:32.480]  предположим что н ну не 10 5 а 10 сотый ну не знаю зачем-то вам понадобилось считать числа
[01:11:32.560 --> 01:11:40.360]  10 сотый но это такой иллюстрирующий пример есть пример круче он рассмотрим в следующий раз
[01:11:40.360 --> 01:11:45.320]  как-то как-то сделать быстрее
[01:11:45.320 --> 01:12:02.600]  пусть а n-ый это вот такой вот вектор дп н-ый 0 дп н-ый 9
[01:12:02.600 --> 01:12:16.840]  тогда смотри что мы умеем делать по сути мы везде используем n-1 везде а это значит что то есть
[01:12:16.840 --> 01:12:21.440]  мы умеем текущий слой выражать через предыдущий ну давайте обозначим что это просто вектор с текущим
[01:12:21.440 --> 01:12:30.000]  слоем тогда как можно выяснить что а n можно написать что это а умножить на а n-1 осталось
[01:12:30.000 --> 01:12:43.760]  выяснить чему равна матрица а ну смотрим так если к равно нулю то я учитываю только нулевой и
[01:12:43.760 --> 01:13:10.160]  первой с коэффициентами один вот такая матрица
[01:13:10.160 --> 01:13:18.720]  3 цикличная у вас везде по три единицы и только здесь на краях по двоечке есть
[01:13:18.720 --> 01:13:29.440]  есть классная теория про то что такие матрицу можно за квадратом нажать друг на друга вот
[01:13:29.440 --> 01:13:33.280]  здесь есть специальный вид которые что можно их как перемножать быстро
[01:13:33.280 --> 01:13:47.880]  я не помню точный ход как это сделать да да того вот на это даже нас не очень интересует на
[01:13:47.880 --> 01:13:55.160]  самом деле что их можно быстро перемножать нас интересует то что тогда это равно а в степени n-1 на
[01:13:55.160 --> 01:14:02.600]  а 1 а 1 нам известен это вон база это просто единица
[01:14:02.600 --> 01:14:27.800]  казалось бы 10 в кубе да потому что у вас матрица размера 10 на 10 то есть как бы тысяча но вы с
[01:14:27.800 --> 01:14:34.800]  н перешли долог м становишь всего лишь умножение на тысячу 2 это несерьезно наоборот более чем
[01:14:34.800 --> 01:14:43.320]  серьезно то есть как бы получили экспоненциальную выгоду умножив на константу то есть там у вас
[01:14:43.320 --> 01:14:47.880]  было 10 она здесь вот здесь кубе ну в 100 раз увеличили константу зато у вас экспоненциальный
[01:14:47.880 --> 01:14:54.680]  спад пошел и то есть если уметь пересчитывать какой-то слой динамики какой-то измерения когда
[01:14:54.680 --> 01:15:00.920]  она у вас многомерная только через предыдущие ну все просто до списывайте через матрицу и
[01:15:00.920 --> 01:15:10.720]  линию превращайте в логариф и вот ну еще круче пример мы рассмотрим с вами на следующей лекции
[01:15:10.720 --> 01:15:21.080]  там будет размер матрицы расти экспоненциально вот и дальше нас будет под отрезком на в следующий
[01:15:21.080 --> 01:15:27.840]  раз и совсем немножко мы коснемся под мостом так чисто посмотреть что-то такое и мы закончим
[01:15:27.840 --> 01:15:34.640]  с динамикой в следующий раз это будет лекция 12 у нас останется три лекции они будут посвящены
[01:15:34.640 --> 01:15:42.680]  геометрии ну если что там останется счет очень еще сделаем вот а так все на сегодня я вас план до конца
