[00:00.000 --> 00:20.000]  Вот. Значит, что мы будем делать? Сейчас мы уже откажемся от полиндромов. То есть теперь мы уже действительно будем решать задачу поиска подстрок в строке уже в сардовой версии.
[00:20.000 --> 00:38.000]  То есть на этот раз у нас есть текст. Значит, у нас есть текст. И нам очень-очень-очень хочется отвечать на запросы. Ну, самые простые запросы могут быть.
[00:38.000 --> 01:07.000]  Дается строка П. Пожалуйста, за О от П. Ответьте, пожалуйста, входит ли она в текст Т, как подстрока? Да или нет? Ну, совсем в идеале, конечно, там... Ну, тогда, в самом деле, там можно будет потом докрутить и бегать вперед, что можно и получше, аж, скажем, найдите самые первые увлажнения, найдите самые последние, найдите сколько их там, ну и так далее и тому подобное. Вот. Ну, это уже такие мелочи-детали.
[01:07.000 --> 01:23.000]  Вот. Пока давайте вот просто. Теперь вот давайте думать. Как же нам искать подстроки в строке? Да, на этот раз все. Мы забыли слово полиндромов. То есть полиндромы сейчас уже теперь становятся не причем. Что же... Ну, вот как же нам это можно было бы сделать?
[01:23.000 --> 01:50.000]  Ну, первая идея, которая тут возникает, это... Вот, в общем, здесь у нас текст Т. Допустим, какая-нибудь классическая наша Аббатсабба. Аббату какая-нибудь вот. Аббаба, что ли? Ну, вот, в общем, так вот.
[01:50.000 --> 02:05.000]  Вот. И тогда вот возникает такой вопрос. Как же, вообще, можно ли вообще завести структуру данных, в которой можно действительно такие запросы отвечать за ОАДП?
[02:05.000 --> 02:18.000]  Ну, первая идея, которая возникает. Ну, давайте из всех подстрок... Вот, возьмем все-все-все квадрат подстрок и каждую за линию добавим в вор. Вот. Получается запкну.
[02:18.000 --> 02:32.000]  Ну, на самом деле не совсем так. А почему? Потому что можно добавлять каждый суффикс. Да, совершенно верно. На самом деле, да, можно все подстроки не добавлять, а можно добавить только все суффиксы.
[02:32.000 --> 02:45.000]  Потому что добавив суффиксы, вы добавите еще и все подстроки, потому что каждая подстрока это рефикс какого-то суффикса. Да. Соответственно, поэтому можно прямо этот ботчик и создать. А давайте его даже и создать.
[02:46.000 --> 02:48.000]  Итак, что же у нас тут будет?
[02:48.000 --> 03:16.000]  Вот, давайте так и добавляем. Вот я сейчас буду прямо все суффиксы добавлять. Так, а вот что у нас там? А вот савва.
[03:16.000 --> 03:24.000]  Так, абаба. Да, сейчас нам будет очень тяжело, да.
[03:25.000 --> 03:29.000]  Можно крестик там поставить. Что там еще?
[03:30.000 --> 03:45.000]  Значит, Б, там А, что там дальше? Будешь так не делать, да. БА, СА, БА, АБАБА.
[03:45.000 --> 03:59.000]  Так, что там еще? А, СА, АБА. Пока тяжело, но сейчас чуть полегче будет.
[03:59.000 --> 04:17.000]  Так, что там еще? С, А, СА, АБА. А, тут все просто. АБА, АБА, АБА. Все нормально, да.
[04:17.000 --> 04:32.000]  Так, что дальше? А, А, вот собственно АБА, АБА, АБА. Так, кум-кум-кум, развилка. АБА, АБА, АБА.
[04:32.000 --> 04:55.000]  Так, что дальше? БА, АБА, АБА, АБА. Так, что дальше? Так, ААБАБА. Ой, так, погоди, что-то не то.
[04:56.000 --> 05:09.000]  А, АБАБА. Так. Не все, это бага началась только с какого-то момента.
[05:09.000 --> 05:32.000]  А, вот этот, да. Вот так вот. Так, что там дальше? ААБАБА, ААБАБА. Уже полегче стало.
[05:32.000 --> 05:51.000]  Так, АБАБА. Так, АБАБА. АБАБА. Что там? ББАБА, ББАБА. Ну вот. Так, теперь просто.
[05:52.000 --> 06:07.000]  Куда-нибудь вот сюда БАБА. БАБА вот сюда. АБА. Ой, вообще ничего не надо делать. БАБА. Ой, ничего не надо делать. А, ничего не надо делать. Ура. Ура, мы это сделали.
[06:07.000 --> 06:12.000]  Как можно было ощутить в процессе, это работает за квадрат.
[06:19.000 --> 06:23.000]  Как говорится, места много и времени много, например.
[06:26.000 --> 06:31.000]  Теперь и нервы жалко. Ой, а мы взяли не ту же строшку, которая у нас была в прошлый раз, да?
[06:31.000 --> 06:35.000]  Может, не ту же. А я взял ту же самую.
[06:38.000 --> 06:47.000]  Теперь, значит, начинаем думать, где же можно процесс вообще оптимизировать. Если внимательно на это посмотреть, то мы замечаем следующее.
[06:49.000 --> 06:58.000]  Что-то развилок мало. То есть, видите, на самом деле, видите, тут огромные длины вот этих вот цепочки.
[06:59.000 --> 07:12.000]  А теперь заметим следующее, что у нас же это не просто цепочки, а ведь каждая такая цепочка, вот если мы откуда-то сверху идем куда-то вниз, то то, как мы идем, это под строка, правда?
[07:12.000 --> 07:27.000]  И вы задаете естественный вопрос. А нельзя ли на самом деле построить вот то же самое, но давайте попробуем так. Попробуем построить вот абсолютно то же самое, но вот эти цепочки сжать.
[07:27.000 --> 07:43.000]  Значит, как это будет вообще... Смотрите, сейчас мы берем... Синий у нас хорошо пишет, мы его не использовали. Вот сейчас давайте как бы так. Делаем то же самое, но хитрее, смотрите.
[07:43.000 --> 07:57.000]  Ну, а первым давайте так. Строка у нас будет нумероваться с нуля, поэтому давайте я сейчас тут попишу 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12. Вот.
[07:57.000 --> 08:16.000]  Значит, давайте попробуем. Делаем абсолютно то же самое. Значит, делаем так, смотрите. Первое, что мы делаем, это создаем кой и добавляем в суффикс 0, 13. На нем мы пишем, так и пишем.
[08:16.000 --> 08:30.000]  Значит, первым пишем, что это буква А. Ну, переходим к букве А. И что это соответствует под строке 0, 13. Да, нам будет очень удобно мерить под строку в виде полуинтервала.
[08:30.000 --> 08:51.000]  Вот. Значит, я буду рыженьким все-таки подписывать буковки. Так, рыженьким или... Нет, давайте черненьким. Почему черненьким? Вот здесь я черненьким писал. То есть это я имею в виду, что на самом деле это ребро длинное.
[08:51.000 --> 09:03.000]  То есть на самом деле я имею в виду, что оно очень длинное. Но реально я эти буковок не храню, а я их храню вот в виде вот этой подстроки и говорю, что это ребро имеет переход по букве А.
[09:03.000 --> 09:23.000]  Вот. Теперь добавляем следующий суффикс. Ну, здесь все просто. Как его добавлять? Ну, по букве В искорбии перехода нет, поэтому получается так. Тут переход по букве В, тут мы пишем, что мы пишем?
[09:24.000 --> 09:31.000]  Совершенно верно. 1, 13. Ну и тут вот это заклинание пишем.
[09:38.000 --> 09:49.000]  Так. Дальше становится интереснее. Потому что дальше от саба, а баба. Так. То есть как бы в старом боли мы должны были пройти по букве А, убедиться, что перехода по букве С нет и ответвиться.
[09:49.000 --> 09:57.000]  В нашем случае это нас приводит к нод, к тому, что придется в этом месте создать новую вершину.
[09:58.000 --> 10:01.000]  Так. Ну придется подвинуть чуть-чуть.
[10:02.000 --> 10:27.000]  Значит, получается, видите, переход по букве А и мы его распиливаем на два ребра. То есть первое ребро тут будет, ну получается, 0, 1, а тут будет получается, давайте поближе нарисую, 1, 13.
[10:27.000 --> 10:40.000]  Вот. То есть тут имеется в виду буквы, я тут даже на будущее побольше нарисую, Б, А, С, А, Б, А, а-ба-ба.
[10:40.000 --> 10:58.000]  Вот. И, значит, здесь произошло ответвление. То есть, видите, тут идет переход по букве В, а вот тут будет идти переход по букве С. И получается, что получается?
[10:58.000 --> 11:13.000]  А, С, А, Б, А, а-ба-ба, а-ба-ба. И получается приятная вещь.
[11:16.000 --> 11:20.000]  Ну и здесь мы, соответственно, по ребру пишем, что это переход 3, 13.
[11:20.000 --> 11:27.000]  Вот. Все будет дальше.
[11:28.000 --> 11:38.000]  Так. Ну ладно, следующее ребро будет очень просто. Это будет ребро по букве С, тоже 3, 13. И тут, соответственно, вот это вся цена.
[11:43.000 --> 11:44.000]  А-ба-ба.
[11:45.000 --> 11:49.000]  Ну, тут развилок, очевидно, не будет, поэтому можно как угодно писать.
[11:51.000 --> 11:53.000]  Давайте еще следующий, давайте суффикс добавим.
[11:54.000 --> 11:56.000]  Теперь дальше, а-ба-а-ба-ба.
[11:57.000 --> 12:00.000]  Так. Ну и здесь идем А, Б, А, ой, надо ответвляться.
[12:01.000 --> 12:03.000]  Значит, создаем новую вершину.
[12:04.000 --> 12:07.000]  И получается здесь теперь ребрышка 1, 3.
[12:07.000 --> 12:08.000]  1, 3.
[12:10.000 --> 12:14.000]  Да. Видите, ну как бы, чтобы глубина была 3, поэтому тут вот 2 отсекаем.
[12:15.000 --> 12:17.000]  А здесь уже решаем, что мы рисуем.
[12:19.000 --> 12:24.000]  Раз у нас тут А, Б, А, то получается придется рисовать ребро на С, 13.
[12:28.000 --> 12:32.000]  И переход этот будет, конечно же, по букве А, а этот переход по букве С.
[12:33.000 --> 12:36.000]  И вот это ребро, кстати, автоматически становится ребром 3, 13.
[12:38.000 --> 12:39.000]  Вот.
[12:43.000 --> 12:46.000]  Значит, соответственно, А, Б, А.
[12:50.000 --> 12:52.000]  Да, вроде как сюда мы ходить не будем, поэтому по барабану.
[12:53.000 --> 12:54.000]  Так.
[12:55.000 --> 12:56.000]  Что у нас дальше?
[13:00.000 --> 13:01.000]  Где?
[13:01.000 --> 13:02.000]  Вот.
[13:05.000 --> 13:06.000]  Сейчас какое? Вот это?
[13:07.000 --> 13:11.000]  Не-не-не, смотрите, не надо, на нем как раз С, А, Б, А, вот все правильно написано.
[13:12.000 --> 13:14.000]  Видите, я не случайно точку именно здесь поставил.
[13:15.000 --> 13:17.000]  То есть мысленно я как бы ее так же и поставил.
[13:18.000 --> 13:20.000]  Вот. Ну давайте, ладно, еще раз эту операцию проделаем.
[13:21.000 --> 13:24.000]  А, ну хотя ладно, тут уже чем дальше, тем легче, можно уже и до конца делать.
[13:25.000 --> 13:30.000]  Вот, например, когда у нас тут Б, А, А, то как бы вот развилочка будет здесь.
[13:31.000 --> 13:38.000]  А вот это ребро, значит, то есть это 1, 3, теперь 3, 13, и тоже 1, 3, обратите внимание.
[13:39.000 --> 13:46.000]  Вот. А вот это ребро будет у нас, соответственно, тоже А, Б, А, получается тоже 7, 13.
[13:48.000 --> 13:51.000]  В этом получается А, Б, А.
[13:56.000 --> 13:59.000]  Значит, это буква А, это буква С.
[13:59.000 --> 14:01.000]  А, ну и все, в принципе.
[14:02.000 --> 14:06.000]  Вот. Ну и соответственно, что там дальше?
[14:07.000 --> 14:09.000]  А, дальше вообще приятно. Теперь А, А, Б, А.
[14:10.000 --> 14:13.000]  Теперь А, и тут ответвляться, а вершинка уже есть, это очень приятно.
[14:14.000 --> 14:20.000]  То есть поэтому давайте просто берем букву А, пишем, что тут под строка тоже от 7 до 13.
[14:21.000 --> 14:23.000]  Но придется ее тут, правда, писать немножко в другом порядке.
[14:24.000 --> 14:25.000]  А, Б, А.
[14:26.000 --> 14:28.000]  Ну ничего страшного.
[14:30.000 --> 14:31.000]  Что не так?
[14:32.000 --> 14:38.000]  Да, господи, тут, знаешь, я каждый раз думаю, что там может дальше не надо рисовать, но тут уже просто мало осталось.
[14:39.000 --> 14:41.000]  Нет, ну реально, сколько там осталось? Что там дальше?
[14:42.000 --> 14:46.000]  А, Б, А. Ну значит, вот это мелкое ребро придется попилить. Ну давайте покилим.
[14:47.000 --> 14:51.000]  Видите, внутренние ребра, нет, в принципе, хороший пример, то есть показывает, что тут может происходить.
[14:52.000 --> 14:55.000]  Так, тут будет 1, 2, тут будет 2, 3.
[14:56.000 --> 14:57.000]  Переход по букве А.
[14:57.000 --> 14:59.000]  А будет еще переход по букве В.
[15:01.000 --> 15:03.000]  И этот переход будет такой.
[15:04.000 --> 15:06.000]  На нем будет написано БАБА.
[15:11.000 --> 15:15.000]  То есть что такое БАБА, БАБА, это под строка с 9 до 13.
[15:18.000 --> 15:19.000]  Так, что там еще?
[15:20.000 --> 15:22.000]  Так, это А, БАБА, теперь...
[15:27.000 --> 15:28.000]  Ну ладно, придется.
[15:29.000 --> 15:32.000]  Так, ладно, эту бабу придется куда-то сюда впихивать.
[15:33.000 --> 15:35.000]  Так, давайте впихнем бабу вот сюда.
[15:36.000 --> 15:40.000]  Так, это буква Б, это буква А, тут переход.
[15:41.000 --> 15:44.000]  Под строка, соответственно, тоже 9, 13.
[15:45.000 --> 15:48.000]  Переход по букве В, тут придется написать.
[15:49.000 --> 15:56.000]  Так, значит, эту букву, значит, да, тут буква А, тут буква В, тут баба, тут баба, да.
[15:57.000 --> 15:58.000]  Вот.
[15:59.000 --> 16:04.000]  А, и эти под строки еще тоже придется там вписывать, что это 1, 2, а это 2, 3.
[16:05.000 --> 16:06.000]  Вот так.
[16:07.000 --> 16:08.000]  Ну что делать?
[16:09.000 --> 16:15.000]  Так, теперь у нас, теперь надо просто добавить эту под строку.
[16:17.000 --> 16:22.000]  Так, значит, пишем ответвление буква Б, тут получается 11, 13.
[16:23.000 --> 16:26.000]  И тут пишем БА.
[16:27.000 --> 16:29.000]  Не-не-не, все нормально, потому что на этом все.
[16:30.000 --> 16:35.000]  Почему на этом все? Потому что А, БА есть, БА есть, А есть, все.
[16:36.000 --> 16:37.000]  Да.
[16:40.000 --> 16:42.000]  Нет, получилось чуть быстрее.
[16:44.000 --> 16:45.000]  Нет, почему?
[16:46.000 --> 16:50.000]  Ну, вот эти стрелочки не надо было в таком количестве рисовать, так что получилось быстрее.
[16:50.000 --> 16:54.000]  Да, ну а синтетически, конечно, все равно есть ощущение, что это квадрат.
[16:55.000 --> 16:57.000]  Прям ощущение.
[16:58.000 --> 17:02.000]  Но с другой стороны, конкретно ребер есть подозрение, что я нарисовал значительно меньше.
[17:04.000 --> 17:07.000]  Вот как вы думаете, вот давайте, сколько я ребер нарисовал?
[17:08.000 --> 17:11.000]  Желательно синтетически ответить, сколько я нарисовал.
[17:20.000 --> 17:21.000]  Почему?
[17:21.000 --> 17:50.000]  Вот действительно, сколько ребер, или что, практически то же самое, сколько вершин вообще может быть в таком, такой сжатой версии?
[17:51.000 --> 18:12.000]  Ну, не совсем.
[18:13.000 --> 18:16.000]  Ну, скажем так, да, еще такое бывало.
[18:16.000 --> 18:26.000]  Но в целом, если говорить, да, лучше правильно сказать так, что добавили еще, когда мы делили ребро, мы как бы удаляли одно ребро и добавляли два, вот такие еще вопросы.
[18:27.000 --> 18:32.000]  Поэтому корректнее скажем так, на каждом шаге мы добавляли не более чем две новые вершины.
[18:33.000 --> 18:34.000]  Почему?
[18:35.000 --> 18:40.000]  Да просто потому что, ну, глобальный синтет, предположим, что еще тут надо было бы какой-нибудь суффикс добавить, мы тут что-нибудь припишем.
[18:41.000 --> 18:49.000]  То есть мы до какого-то момента там будем идти, идти, идти, идти, и в какой-то момент, ну, может быть, мы так и дойдем, тогда вообще ничего добавлять не надо.
[18:50.000 --> 18:52.000]  А может быть, нам придется все-таки ответвиться.
[18:53.000 --> 18:59.000]  Тогда, если нам не повезет, и тут будет не вершина, мы значит ее тут создадим, а то одну вершину, и после этого создадим новое ребро в новый лист.
[19:01.000 --> 19:06.000]  То есть это худший случай, потому что, может быть, нам ответвиться придется, как мы уже сказали, еще и в самой вершине.
[19:07.000 --> 19:08.000]  Как мы убедились, такое может быть.
[19:09.000 --> 19:10.000]  Ну, вот.
[19:11.000 --> 19:22.000]  Это означает, что, действительно, количество вершин не более чем два модуль Т, ну, на самом деле, там, скажи так, если Т больше либо равно двух, то там не более чем два модуль Т минус один, на самом деле.
[19:23.000 --> 19:32.000]  Ну, потому что ладно, то есть для длины, если строка длины один, у нее будет две вершины, но там, если у строки длины два, там будет максимум три.
[19:33.000 --> 19:34.000]  Понятно, да?
[19:34.000 --> 19:41.000]  Ну, потому что она будет, условно, либо АА, и тогда там будет две вершины, либо она будет АБ, и тогда у нее будет три вершины.
[19:42.000 --> 19:45.000]  Вот. Ну, а дальше там поеду все там плюс две, плюс две, плюс две, ну и так далее.
[19:47.000 --> 19:57.000]  То есть, таким образом, размер, то есть количество вершин, то есть не более чем два модуль Т минус один, при модуль Т, больше либо равно два, можно прямо вершины.
[20:00.000 --> 20:03.000]  То есть приятная структура. То есть, по крайней мере, хоть памяти она требует линей.
[20:05.000 --> 20:10.000]  Эта структура называется сжатый суффиксный бор.
[20:16.000 --> 20:29.000]  Ну, название предельно логично, потому что, во-первых, это бор, во-вторых, суффиксный бор, потому что это бор построенный на суффиксах строки, и, в-третьих, соответственно, сжатый.
[20:29.000 --> 20:36.000]  Потому что, да, мы его сжали, то есть все вот эти цепочки мы сжали. Да, вот это бы называлось просто суффиксный бор.
[20:45.000 --> 20:49.000]  А вот теперь у нас тут сжатый суффиксный бор.
[20:50.000 --> 21:01.000]  Вот. Заметим, что, да, это еще не совсем тот бор, но заметим, что он бы нам позволил искать любые подстроки в тексте Т, правда?
[21:03.000 --> 21:10.000]  Ну, например, вот, предположим, чтобы с небес по факсу нам прислали подобное безобразие. Естественно, без вот этих черных символов.
[21:11.000 --> 21:31.000]  Тогда вот мы бы искали, например, существует ли подстрока, ну, допустим, бацап. Как бы мы это делали? Делали бы это, вот в боре бы делали бы честно, шли бы B, A, C, A, B, ура, дошли до конца, нити не обвалились, значит подстрока есть.
[21:32.000 --> 21:42.000]  Здесь будет то же самое, разница только будет в том, что мы можем теперь находиться не только в вершине, но и где-то посередине ребра. То есть сначала это будет то же самое B, A, теперь проходим по символу C.
[21:43.000 --> 21:54.000]  И находимся в некоторой позиции. Вот в этом месте мы будем отобрять слово позиция. То есть потому что у нас каждое ребро теперь не длины, а теперь вот это ребро длины 10.
[21:54.000 --> 22:07.000]  И мы будем говорить, что мы находимся, например, в 9 символах от финиша. Ну, нам будет удобно мыслить именно в символах до финиша, а не в символах от начала, хотя понятно, что суть одна.
[22:08.000 --> 22:18.000]  То есть дальше теперь, когда мы думаем, можно ли пройти по символу A, теперь мы говорим, так, у нас есть подстрока, наше ребро это подстрока с третьего по 13, мы в 9 символах от конца.
[22:18.000 --> 22:33.000]  Значит, какой там у него следующий символ? Так, 13-9, 4. Думаем, какой у нас четвертый символ в строке T? Ой, буква A. Все, значит, по ней можно пройти и мы по ней проходим.
[22:34.000 --> 22:45.000]  Теперь мы находимся в восьми шагах до конца этого ребра. И перед нами пятый символ. Так, это буква B. Так, он совпадает со следующей буквой, поэтому мы ней проходим.
[22:45.000 --> 23:06.000]  Таким образом, строка подсапки для этих подстроков. Если тут будет символ C, то мы говорим, так, следующий символ у нас шестой. Ну, там осталось расстояние 7, 13-7, 6, шестой символ A. Не совпадает с C, ой, значит, нет здесь прохода по символу C и, значит, такой подстроки у нас в тексте T нет.
[23:06.000 --> 23:16.000]  То есть, видим, да, небольшой такой технический накрут, но, в общем-то, жизнь нам он сильно не портит, правда?
[23:16.000 --> 23:29.000]  Более того, если бы еще и, вот, когда тут A, B, B и A, мы тут еще и помечали бы, что это там конец строчек каких-нибудь, мы бы там могли еще на этом дереве еще какую-нибудь динамику потом DFS насчитать и насчитывать там.
[23:30.000 --> 23:36.000]  И уметь там поддерживать, что если это подстрока, то скажите мне, пожалуйста, где у нее самое левое обхождение, самое правое. Ну, понятно, да?
[23:36.000 --> 23:46.000]  Ну, самое левое, потому что, типа, найдите, там, типа, самый глубокий лист у меня в пантере или, наоборот, самый не глубокий лист. Ну, не помеченный в вершинах.
[23:47.000 --> 24:02.000]  Ну, тут, конечно, вот, да, есть маленькая техническая тонкость иногда, что, допустим, там некоторые суффиксы заканчиваются не в листе, но более того, мы сейчас на этом будем очень серьезно в алгоритме обращать внимание и этим пользоваться, кстати.
[24:02.000 --> 24:11.000]  Вот. Но теоретически вам может там для своей задачи захотеться, чтобы все суффиксы заканчивались в местах.
[24:12.000 --> 24:22.000]  Ну, делается это простым, естественным образом. Вы добавляете в конец диэзик. Ну, или доллар, или что вам там больше нравится.
[24:23.000 --> 24:31.000]  Вот, как всегда. Тогда вы можете гарантировать, что действительно все, тогда действительно, что все суффиксы будут заканчиваться в листе.
[24:33.000 --> 24:35.000]  Понятно, да?
[24:36.000 --> 24:43.000]  Тут вот полукно, поэтому получается, что жатый суффиксный борт это такая красивая структура данных, которая могла бы нам очень так помогать.
[24:45.000 --> 24:46.000]  Какие планы?
[24:51.000 --> 24:53.000]  Вот. Она могла бы нам действительно очень сильно помогать.
[24:53.000 --> 25:07.000]  Ну вот. Ну и сейчас самое интересное для нас будет это, конечно, как ее построить. Да. А ведь ее сложно строить. Мы же даже не знаем, что такое суффиксный массив.
[25:10.000 --> 25:19.000]  Вот. Ну ладно, сегодня и не узнаем, в общем. Ну и тем более, что ладно, узнаем это суффиксное массив, по этой штуке вообще для нас так не строится.
[25:19.000 --> 25:21.000]  Еще и за линию, а не за эти ваши инлогены.
[25:25.000 --> 25:33.000]  Потому что, да, наша сегодняшняя ставка – построить это за линию. Вот. Вот, собственно, наша цель – это сделать.
[25:33.000 --> 25:39.000]  Значит, каким же образом мы будем это делать? Делать мы будем это в следующем образе.
[25:39.000 --> 25:53.000]  Значит, на самом деле строить дерево мы будем по-другому. То есть, именно вот мы не скучали сегодня, вот утром обсуждали, что мы будем строить дерево.
[25:53.000 --> 26:13.000]  Значит, на самом деле строить дерево мы будем по-другому. То есть, именно вот мы не скучали сегодня, вот утром обсуждали, собственно, дерево полиэнтронов, потому что технология будет похожая.
[26:13.000 --> 26:28.000]  А именно, мы будем настолько себе уверены, что скажем, что изначально строка Т – пустая, и будем к ней приписывать по одному символу и пытаться подмодифицировать наше дерево.
[26:31.000 --> 26:35.000]  Давайте посмотрим, как это будет выглядеть.
[26:35.000 --> 26:51.000]  Ну, в самом начале, значит, сейчас я еще раз попробую это построить. Получится квадрат, если не куб. Но, тем не менее, подход будет выглядеть следующим образом.
[26:51.000 --> 27:06.000]  Смотрите, а давайте-ка, то есть, изначально у нас строка пустая, поэтому я заведу корень, и для удобства скажу, что суффикс номер ноль, ну, то есть, что такое суффикс номер ноль?
[27:06.000 --> 27:17.000]  То есть, я буду говорить, что суффикс номер ноль – это суффикс, который начинается от голевого символа. Понятно, да?
[27:17.000 --> 27:28.000]  Вот. И так. То есть, ну, изначально дерево будет выглядеть так.
[27:28.000 --> 27:48.000]  Теперь начинаем добавлять буквы. Первый к нам приходит буква А. Вот. Что же происходит? По большому счету, значит, это означает, что к суффиксу суффикс номер ноль удлинился на букву А. Правда?
[27:48.000 --> 27:59.000]  Так. Ну, мы находимся в вершине. Это означает, что из этой вершины, то есть, мы должны этот нулевой указатель сдвинуть по букве А. Нам нету воздвига.
[27:59.000 --> 28:18.000]  Что мы тогда сделаем? Ну, тогда мы создадим новое ребро. Да, на всякий случай длинное. И скажем, что у нас тут будет такое ребро от нуля до единицы.
[28:18.000 --> 28:34.000]  Переход по букве А. И оно будет соответствовать букве А. И этот нулевой суффикс теперь заканчивается где? Правильно, вот в этой вершине.
[28:34.000 --> 28:44.000]  Но еще кое-что поменялось. А еще раз появился первый суффикс. И он будет здесь. Ну, пустой.
[28:44.000 --> 28:49.000]  Дальше к нам приходит буква Б.
[29:02.000 --> 29:08.000]  Ну, тут сложнее. Придется побольше нарисовать, потому что, видите, в перспективе эта строчка длинная будет.
[29:09.000 --> 29:20.000]  Так, значит, буква Б. Ну, так что надо сделать? Ну, во-первых, у нас вот этот суффикс удлиняется, но на этот раз она находится в листе, и в него ходит ребро.
[29:20.000 --> 29:29.000]  Поэтому все, что тут надо сделать, это мысленно добавить букву Б. Это мысленно делается. А немысленно вот эту единичку изменить на другой.
[29:29.000 --> 29:36.000]  Обратите внимание, вот этот рыжий нолик, он тут так и остается. Как уже легко догадаться, этот рыжий нолик здесь навсегда.
[29:36.000 --> 29:42.000]  Что приятно, если лист заканчивается в листе, то он навеки, он всегда будет заканчиваться в этом листе, где околя.
[29:42.000 --> 29:47.000]  Ну, там, конечно, вот это ребро может подпиливаться, но сам лист от этого никуда не перейдется.
[29:47.000 --> 29:56.000]  Так, теперь единичка. Так, надо теперь этой единичкой, она заканчивается не в листе, поэтому нужно из нее сделать переход по букве Б.
[29:57.000 --> 30:01.000]  У нас нет перехода по букве Б, но придется завести.
[30:06.000 --> 30:10.000]  И эта единичка теперь торжественно отправляется вот туда, причем навсегда.
[30:13.000 --> 30:16.000]  И у нас получается буква Б.
[30:17.000 --> 30:19.000]  Буква Б.
[30:20.000 --> 30:26.000]  Так, и тут пишем, соответственно, тут мы пишем букву Б, тут пишем 1-2.
[30:28.000 --> 30:33.000]  Когда вот и все, не в коем случае у нас еще булочка.
[30:36.000 --> 30:41.000]  Что же нас ждет дальше? Дальше нас ждет буква А.
[30:42.000 --> 30:46.000]  Так, ну поехали. Удлияем суффиксы.
[30:47.000 --> 30:49.000]  Значит, что нам для этого нужно?
[30:51.000 --> 30:59.000]  Так, буква А мысленно добавляем, и здесь уже немысленно приходится двоечку менять на троечку.
[31:01.000 --> 31:06.000]  Так, добавляем букву А и тоже троечку.
[31:07.000 --> 31:12.000]  А вот здесь, это заканчивается не в листе, следовательно, надо ее сдвинуть по букве А.
[31:13.000 --> 31:15.000]  Но на этот раз мы ее сдвинуть можем.
[31:16.000 --> 31:18.000]  И мы будем это делать.
[31:24.000 --> 31:27.000]  Вот, вот примерно здесь. Да, она находится где-то на левре.
[31:28.000 --> 31:30.000]  И троечка.
[31:36.000 --> 31:38.000]  Что же дальше?
[31:39.000 --> 31:41.000]  Так, ой, все весело будет.
[31:42.000 --> 31:44.000]  Дальше будет буква С.
[31:47.000 --> 31:51.000]  Так, ну значит, будем писать тут букву С.
[31:52.000 --> 31:54.000]  И тут, соответственно, четверочку.
[31:55.000 --> 31:56.000]  И тут четверочку.
[31:57.000 --> 32:00.000]  Ну, соответственно, с буквой С. Но 0 и 1, они тут навсегда.
[32:02.000 --> 32:03.000]  С этим мы ничего не делаем.
[32:04.000 --> 32:07.000]  А вот с двоечкой начинается интересность.
[32:08.000 --> 32:09.000]  Почему?
[32:10.000 --> 32:13.000]  Да потому что мы хотим из этой позиции теперь перейти по символу С.
[32:14.000 --> 32:16.000]  И у нас не получается.
[32:17.000 --> 32:19.000]  Потому что тут нет перехода по символу С, как можно.
[32:20.000 --> 32:21.000]  Что же делать?
[32:22.000 --> 32:24.000]  Придется создавать новую вершину.
[32:25.000 --> 32:27.000]  То есть распиливаем это ребро.
[32:28.000 --> 32:30.000]  Вот, то есть А и, соответственно, БАС.
[32:30.000 --> 32:32.000]  То есть тут пишем, что это 0 и 1.
[32:33.000 --> 32:35.000]  А тут пишем, что это 1.
[32:36.000 --> 32:40.000]  И создаем новое ребро.
[32:41.000 --> 32:44.000]  Куда эту двоечку, собственно, и отправляем.
[32:47.000 --> 32:48.000]  Отправлю.
[32:49.000 --> 32:50.000]  Хоп, я ее больше тут не видел.
[32:51.000 --> 32:57.000]  То есть когда у нас делается новый суффикс, и он заканчивается в середине ребра,
[32:58.000 --> 32:59.000]  ну, в этот момент его еще неделя.
[33:00.000 --> 33:04.760]  Потому что если бы следующая пришла бы буква АВ, мы бы его просто сдвинули сюда и всё.
[33:04.760 --> 33:06.760]  То есть что мы делаем?
[33:06.760 --> 33:13.160]  Вариант такой, мы храним текущие суффиксные дерева и для всех суффиксов храним, где они заканчиваются.
[33:13.160 --> 33:16.760]  Но если они заканчиваются в листе, то, как оказывается, никуда из этого листа уходить не надо,
[33:16.760 --> 33:19.760]  надо просто это финальное ребро удлинить на символ.
[33:19.760 --> 33:21.760]  А остальные придётся вот двигать.
[33:21.760 --> 33:25.760]  Мы их двигаем, обратите внимание, в порядке уменьшения длинных суффиксов.
[33:25.760 --> 33:28.760]  Вот, значит, буква А, тут у нас буква...
[33:28.760 --> 33:31.760]  Да, тут переход по букве Б, соответственно.
[33:31.760 --> 33:34.760]  И тут переход по букве С.
[33:34.760 --> 33:39.760]  Ну да, от трёх до четырёх получается.
[33:39.760 --> 33:42.760]  И тут, соответственно, буква С.
[33:45.760 --> 33:47.760]  Так, это ещё не всё.
[33:47.760 --> 33:49.760]  Суффикс номер три.
[33:49.760 --> 33:51.760]  Вот он.
[33:52.760 --> 33:54.760]  Суффикс номер три.
[33:54.760 --> 33:56.760]  Теперь сбегается буква С.
[33:56.760 --> 33:59.760]  Ой, а буква С нету, что делать?
[33:59.760 --> 34:03.760]  Но придётся на этом козе.
[34:03.760 --> 34:06.760]  Помню я этот зелёный маркер, где был пункт.
[34:06.760 --> 34:10.760]  Так, буква С.
[34:10.760 --> 34:14.760]  И тут тоже получается от трёх до четырёх.
[34:14.760 --> 34:16.760]  По букве С.
[34:16.760 --> 34:20.760]  И тройба мы отправляем вот туда.
[34:21.760 --> 34:23.760]  Опа.
[34:23.760 --> 34:27.760]  А сюда... а здесь появляется четвёрточка у нас.
[34:31.760 --> 34:33.760]  Так, ну поехали.
[34:33.760 --> 34:35.760]  Буква А.
[34:42.760 --> 34:44.760]  Так, ну поехали.
[34:44.760 --> 34:50.760]  Так, ну придётся тут везде дописывать вот эту букву А.
[34:50.760 --> 34:54.760]  И, что самое неприятное, потому что букву А мы дописываем мысленно,
[34:54.760 --> 34:59.760]  и вот эти вот пятачки придётся везде нарисовать вместо четвёрочек.
[35:03.760 --> 35:09.760]  Но при этом, а вот эту четвёрочку мы наконец сдвигаем вот сюда.
[35:09.760 --> 35:12.760]  И тут получается пятачок.
[35:14.760 --> 35:16.760]  Что происходит дальше?
[35:17.760 --> 35:19.760]  Буква В.
[35:21.760 --> 35:23.760]  Так.
[35:23.760 --> 35:26.760]  И опять то же самое.
[35:26.760 --> 35:29.760]  Опять надо мысленно нарисовать букву В,
[35:29.760 --> 35:34.760]  и немысленно поправить эти пятёрочки на шестёрочку.
[35:34.760 --> 35:38.760]  Но при этом, смотрите, эти указатели никуда не деваются, да?
[35:39.760 --> 35:41.760]  Ну вот.
[35:41.760 --> 35:43.760]  И тут возникает первая такая оптимизация,
[35:43.760 --> 35:46.760]  в которой явно тут уже руки начинают чесаться девушек.
[35:46.760 --> 35:52.760]  Вот в этих вот полуинтервалов всегда будет стоять цифра равная текущей длине строительства, правда?
[35:54.760 --> 35:57.760]  То есть, поэтому первая оптимизация такая,
[35:57.760 --> 36:00.760]  давайте раз мы навсегда тут напишем плюс бесконечность.
[36:00.760 --> 36:02.760]  Это первая оптимизация.
[36:02.760 --> 36:04.760]  Ну понятно, что плюс бесконечность, понятно.
[36:04.760 --> 36:06.760]  В реальности вы пишете миллиард,
[36:06.760 --> 36:08.760]  и когда вы тут пишете миллиард, вы рассчитываете,
[36:08.760 --> 36:14.760]  что этот процесс запускается до строки длины не более чем миллиард.
[36:14.760 --> 36:16.760]  Понимаете, да?
[36:16.760 --> 36:18.760]  Вот.
[36:18.760 --> 36:21.760]  Ну вот там, потому что вам придётся всё-таки мыслить,
[36:21.760 --> 36:24.760]  потому что если вы находитесь вот где-нибудь вот здесь,
[36:24.760 --> 36:26.760]  на этом блоке,
[36:26.760 --> 36:31.760]  то вам придётся там говорить, что мы находимся на вот этом вот подстроте от 1 до миллиарда
[36:31.760 --> 36:37.760]  и дофинишем где расстояние там миллиард минус там, я не знаю, миллиард минус 3.
[36:37.760 --> 36:42.760]  И миллиард минус 3, это будет означать, что вы находитесь где-то в этой позиции.
[36:42.760 --> 36:44.760]  Понятно, да?
[36:46.760 --> 36:51.760]  Ну или там, миллиард минус 4, это будет где-то вот в этой позиции.
[36:51.760 --> 36:56.760]  Ну или там миллиард минус четыре, это будет где-то вот в этой позиции.
[36:56.760 --> 37:02.760]  Пока вы будете тут подходить, так как у нас тут вы... эти позиции никогда не доклонят к концу строки,
[37:02.760 --> 37:09.760]  потому что конец строки будут от них убегать, поэтому как бы конкретные символы найдутся.
[37:09.760 --> 37:14.760]  Так вот, вот идея будет помещать плюс бесконечно. Понятно, да?
[37:14.760 --> 37:19.760]  Ну там по-разному. Можно так мыслить, можете мыслить темно, что в каждый момент времени это число равно длине,
[37:19.760 --> 37:23.760]  длине строки, поэтому там, собственно, вы это в каждое время выясняете.
[37:23.760 --> 37:30.760]  Но короче говоря, что приятно, теперь заметим, что вот эти 0, 1, 2, 3 вам теперь вообще брать не надо.
[37:30.760 --> 37:38.760]  То есть вам теперь имеет смысл брать только суффиксы, которые заканчиваются не в месте.
[37:38.760 --> 37:44.760]  Понимаете, да? А для этих символы приписываются, приписываются, но мысленно.
[37:45.760 --> 37:50.760]  То есть поэтому я вам даже пометил, что мы будем перебирать суффиксы, начиная со четвертого.
[37:50.760 --> 37:55.760]  Вот по случайному совпадению, видите, пятый суффикс тоже заканчивается не в месте.
[37:58.760 --> 38:04.760]  Хотя насколько это случайно? Ну ладно, давайте еще порисуем, а потом посмотрим еще на тему случайных совпадений.
[38:04.760 --> 38:08.760]  Давайте попробуем. Буква А.
[38:08.760 --> 38:16.760]  Так, нет, погодите, я торопился.
[38:16.760 --> 38:22.760]  Потому что четвертый суффикс и пятый мы еще не сдвинули его, обрадовались.
[38:22.760 --> 38:27.760]  Значит, его надо сдвинуть по букве В, но сдвинуть мы его можем.
[38:27.760 --> 38:34.760]  Ведь он находится на репре от одного до плюс бесконечности, с расстоянием на бесконечности плюс бесконечность минус два.
[38:35.760 --> 38:40.760]  Так, ну и пятачок тоже можно сдвинуть. Куда его можно сдвинуть? Да вот сюда его можно сдвинуть.
[38:40.760 --> 38:44.760]  Вот не сюда, а вот сюда. Ну и четвертый суффикс.
[38:49.760 --> 38:51.760]  Дайте мне яича.
[38:55.760 --> 38:57.760]  Буква А.
[38:57.760 --> 39:02.760]  Так, ну как мы уже сказали, тут мы нарисовали ААА.
[39:02.760 --> 39:09.760]  Но видите, кроме черного мы ничего не имеем. Синее рыжие остается на месте, поэтому все в порядке.
[39:09.760 --> 39:12.760]  То есть по факту начинаем работать с четверочкой.
[39:12.760 --> 39:17.760]  Так, надо сдвинуть ее по букве А. Можем ее сдвинуть? Можем.
[39:17.760 --> 39:19.760]  Значит сдвинуть, ну и сдвигаем.
[39:19.760 --> 39:23.760]  Так, можем ли мы пятачок сдвинуть по букве А? Можем.
[39:24.760 --> 39:27.760]  Можем ли мы шестерочку сдвинуть по букве А?
[39:27.760 --> 39:29.760]  Да тоже можем.
[39:29.760 --> 39:32.760]  Ну и семерочка появляется.
[39:34.760 --> 39:36.760]  Что дальше?
[39:37.760 --> 39:40.760]  Так, дальше у нас будет буква А.
[39:42.760 --> 39:46.760]  Так, тут начинает быть интересно. Начинаем перебор с четверочки.
[39:46.760 --> 39:49.760]  Ну ладно, я тебе букву А докидываю.
[39:49.760 --> 39:54.760]  Так, есть ли тут переход по букве А?
[39:54.760 --> 39:58.760]  Ой, нету. Придется делать.
[39:58.760 --> 40:03.760]  Придется, значит, распиливать, соответственно, это ребро на одно.
[40:03.760 --> 40:10.760]  То есть получится у нас тут, как уже говорили, один-три, и тут от трех, да, той самой, плюс бесконечности.
[40:10.760 --> 40:13.760]  Вот так.
[40:13.760 --> 40:17.760]  Тут переход по букве С, тут переход по букве А.
[40:17.760 --> 40:21.760]  Значит, мы тут пока рисуем только одну букву А.
[40:21.760 --> 40:26.760]  И она будет у нас соответствовать, это какой у нас символ или седьмой, да?
[40:26.760 --> 40:29.760]  Седьмой, плюс бесконечности.
[40:29.760 --> 40:33.760]  И четверочка навсегда отправляется сюда.
[40:36.760 --> 40:43.760]  Я тут буду даже помечать, что как бы мы теперь перебор будем в будущем начинать с пятерочки.
[40:44.760 --> 40:46.760]  Понятно, да?
[40:46.760 --> 40:47.760]  Вот.
[40:47.760 --> 40:50.760]  Теперь пятачок.
[40:51.760 --> 40:54.760]  Пятачок. Так, есть ли тут переход по букве А?
[40:54.760 --> 40:57.760]  Опять нету, да? Что ж ты будешь делать?
[41:00.760 --> 41:02.760]  Так.
[41:03.760 --> 41:06.760]  И получается примерно следующее.
[41:06.760 --> 41:08.760]  Значит, ну вот.
[41:08.760 --> 41:12.760]  Ну здесь понятно, опять симпус бесконечности.
[41:12.760 --> 41:14.760]  Буква А.
[41:15.760 --> 41:17.760]  Тут у нас тоже буква А.
[41:17.760 --> 41:19.760]  Ну здесь соответственно тоже.
[41:19.760 --> 41:21.760]  Понятно, тут тройбан.
[41:21.760 --> 41:23.760]  Тут один, три.
[41:23.760 --> 41:27.760]  И пятачок отправляется в свой лист.
[41:27.760 --> 41:29.760]  А мы его как бы отправили?
[41:29.760 --> 41:32.760]  Так, шестерочка.
[41:32.760 --> 41:36.760]  Вот куда угодно из нее есть переход, а буква А нет.
[41:36.760 --> 41:38.760]  Что делать?
[41:38.760 --> 41:41.760]  Ну, придется его рисовать.
[41:41.760 --> 41:44.760]  Тут еще нам повезло, тут лекшина.
[41:44.760 --> 41:46.760]  Это будет буква А.
[41:46.760 --> 41:50.760]  Это будет тоже симпус бесконечности.
[41:50.760 --> 41:54.760]  И что тут получается?
[41:54.760 --> 41:56.760]  А, В.
[41:56.760 --> 41:58.760]  И что-то еще получается, да?
[41:58.760 --> 42:02.760]  Ну и тут соответственно буква А имеется в виду.
[42:02.760 --> 42:06.760]  И рыженькая шестерочка отправляется.
[42:07.760 --> 42:11.760]  Но, видите, это не значит, что нам сейчас тоже придется создавать новое ребро.
[42:11.760 --> 42:14.760]  Потому что здесь по букве А у семерочки переход поднимется.
[42:14.760 --> 42:16.760]  Шестерочку сдвинули.
[42:16.760 --> 42:18.760]  Теперь семерочку.
[42:18.760 --> 42:20.760]  Семерочку говорить надо.
[42:20.760 --> 42:22.760]  Вот так.
[42:24.760 --> 42:26.760]  Она идет сюда, шестерочка идет сюда.
[42:30.760 --> 42:32.760]  Вообще как-то очень интересно пока получается.
[42:32.760 --> 42:36.760]  Может быть это еще пока не так бросается в глаза.
[42:36.760 --> 42:40.760]  Но давайте я еще букву Б добавлю.
[42:40.760 --> 42:42.760]  Там же буква Б идет дальше.
[42:42.760 --> 42:44.760]  Да.
[42:44.760 --> 42:46.760]  Да, дальше идет буква Б.
[42:46.760 --> 42:48.760]  Все переходы есть.
[42:48.760 --> 42:50.760]  Но вообще получается очень интересно.
[42:50.760 --> 42:52.760]  Обратите внимание.
[42:52.760 --> 42:56.760]  Вот там, восьмерочка идет вот сюда.
[42:56.760 --> 42:58.760]  Вот.
[42:58.760 --> 43:00.760]  И девяточку сюда.
[43:00.760 --> 43:02.760]  Обратите внимание.
[43:02.760 --> 43:04.760]  Вообще как-то очень странно получается,
[43:04.760 --> 43:08.760]  что если рассматривать, какие суффиксы заканчиваются в листах, а какие-то не в листах.
[43:08.760 --> 43:14.760]  Но почему-то получается, что они первые несколько суффиксов заканчиваются в листах.
[43:14.760 --> 43:18.760]  А потом находится какой-то первый, который заканчивается не в листе.
[43:18.760 --> 43:22.760]  И все за ним тоже почему-то заканчиваются не в листе.
[43:24.760 --> 43:26.760]  Вот возникает вопрос.
[43:26.760 --> 43:28.760]  Это у нас тест такой удачный подобрали?
[43:28.760 --> 43:33.760]  Ну, ты знаешь, что всегда будет? Почему?
[43:33.760 --> 43:36.760]  Ну, что если у нас есть наибольший суффикс, который не в листе,
[43:36.760 --> 43:39.760]  значит, что суффикс больше, у козыров это префикс.
[43:39.760 --> 43:40.760]  Так, да.
[43:40.760 --> 43:43.760]  Тогда если взять этот большой суффикс без первого символа,
[43:43.760 --> 43:48.760]  это будет суффикс, у которого префикс это следующий суффикс нашего.
[43:48.760 --> 43:49.760]  Ну, на самом деле, да.
[43:49.760 --> 43:52.760]  И тот тоже не в листе, получается.
[43:52.760 --> 43:57.760]  Ну да, ведь по большему счету заметим, что под строка, даже любая под строка, да?
[43:57.760 --> 43:59.760]  Ну, можно так сказать.
[43:59.760 --> 44:02.760]  Суффикс заканчивается не в листе тогда и только тогда,
[44:02.760 --> 44:05.760]  когда есть больший суффикс, с которого он начинает, правда.
[44:06.760 --> 44:08.780]  Или что, тоже самое.
[44:08.780 --> 44:11.780]  Вот строка заканчивается не в листе тогда и только тогда,
[44:11.780 --> 44:13.780]  когда у неё есть вхождение в тексте,
[44:13.780 --> 44:16.760]  которое заканчивается не в конце строки Т. Правда?
[44:16.760 --> 44:19.780]  Ну ведь, если у какого-то суффикса есть такое свойство,
[44:19.780 --> 44:23.780]  у него есть вхождение не в конце строки Т,
[44:23.780 --> 44:28.380]  то очевидно у всех его меньших суффиксов тоже такое свойство есть, правда?
[44:28.380 --> 44:32.780]  Поэтому получается, что действительно, начиная с какого-то момента,
[44:32.780 --> 44:38.580]  то есть здесь вот этот момент, мы будем этот момент так и называть, кстати,
[44:38.580 --> 44:44.380]  max not suf, вообще not live.
[44:44.380 --> 44:48.580]  Я прям в коде так и пишу. Ладно, в коде я пишу last not live, но last не правильно писать,
[44:48.580 --> 44:54.180]  потому что он не последний. Он наоборот первый получается.
[44:54.180 --> 44:58.980]  А, ну можно его first not live называть. Ну, выбирайте, как вам удобно.
[44:58.980 --> 45:02.380]  Max not live, first not live.
[45:02.380 --> 45:10.780]  Ну да, это называется да.
[45:10.780 --> 45:16.180]  Да, генерал Реми, у вас есть претензии? Да. Какие? Тогда нет.
[45:16.180 --> 45:28.980]  А зачем вы сказали да? Ну да, меньше букв.
[45:28.980 --> 45:35.180]  Так, значит, что у нас? Ну вот, но тогда вытекает следующая идея.
[45:35.180 --> 45:42.780]  Так, вот мы уже построили это дерево в тремя способами, два из которых строили шаты.
[45:42.780 --> 45:50.580]  Значит, сейчас я все это собру и построю дерево еще раз.
[45:50.580 --> 45:56.780]  Да, знаете, вот мы такие, это, конечно, немножко однообразно, но зато мы это делаем упорно.
[45:56.780 --> 46:01.780]  То есть, знаете, это вообще хороший метод. Сделали что-то там, заметили, где тут можно пооптимизировать,
[46:01.780 --> 46:06.980]  делаем так чуть-чуть оптимизировать, потом еще что-то заметили. И вот так сейчас постепенно мы это все и перейдем.
[46:06.980 --> 46:12.980]  Так, смотрите. Сейчас я все это собру. Так, значит, что из этого стереть?
[46:12.980 --> 46:16.980]  А, ну ладно, это корректное дерево, лучше его не стереть. Значит так, убираем.
[46:17.980 --> 46:21.980]  Не, не, не.
[46:21.980 --> 46:44.980]  И так. И так, давайте заново. И так те читаем. Добавим первую букву А сразу.
[46:44.980 --> 47:02.980]  И сразу говорим. Так, вот у нас. Вот так. Переход по букве А, как всегда, ноль, сразу на этой срисуем эту бесконечность.
[47:02.980 --> 47:13.980]  И получается букву А. И мы теперь говорим. Значит, теперь отличие у нас такое.
[47:13.980 --> 47:19.980]  Я буду хранить только первый суффикс, только вот этот вот max.not.suff.
[47:19.980 --> 47:32.980]  То есть этот max.not.suff равен единице. Вот этот он будет единственной у нас режим max.not.suff.
[47:32.980 --> 47:35.980]  И куда он сейчас будет нас указывать?
[47:35.980 --> 47:46.980]  Ну, это не риблекс. Нас интересует до первой списки суффикс, который заканчивается не в листе.
[47:46.980 --> 47:58.980]  И нас будет интересовать, по сути, а где он находится. То есть если пройтись по суффиксному борту, по этому суффиксу, куда мы придем?
[47:58.980 --> 48:07.980]  Ну, потому что он... Ну, max, потому что он максимально подлиннее. А так я предлагал first написать.
[48:07.980 --> 48:12.980]  Давайте fst.
[48:12.980 --> 48:18.980]  Так, ладно. Хотите, пишите fst. Я буду first писать.
[48:18.980 --> 48:21.980]  Не такие длинные слова, чтобы тут экономить.
[48:21.980 --> 48:26.980]  Так вот. Итак, первый суффикс заканчивается не в листе, потому что в корне.
[48:26.980 --> 48:29.980]  Сразу видим, да? Ну, такое тоже бывает.
[48:29.980 --> 48:38.980]  В принципе, кстати, заметим, что это так всегда будет, если строка заканчивается на символ, который больше нигде в этой строке не смещается.
[48:38.980 --> 48:43.980]  Итак, дальше. Буква B.
[48:43.980 --> 48:51.980]  Так. Есть ли переход из этого первого суффиса по букве B? Нету перехода. Придется рисовать.
[48:51.980 --> 48:56.980]  Ну, мы рисуем, как всегда.
[48:56.980 --> 49:03.980]  Вот видите, я этих рыжих указателей не рисую, поэтому дело идет быстрее.
[49:03.980 --> 49:08.980]  Ведь я не пишу, если бы я черный не рисовал, было бы линейно, может быть, даже линейно быстрее.
[49:08.980 --> 49:13.980]  Ну, первое отправляется к черту куда? А теперь мы говорим, так, второй суффикс.
[49:13.980 --> 49:17.980]  Так, ну, второй суффикс, он уже неинтересный, он уже пустой.
[49:17.980 --> 49:25.980]  Поэтому он тут не очень интересно. Он отправляется в корень, и на этом все.
[49:25.980 --> 49:29.980]  Итак. Вот сейчас будет такой интересный случай.
[49:29.980 --> 49:37.980]  Буква A. Есть ли переход из вот этого второго суффиса по букве A? Отчуда здесь.
[49:37.980 --> 49:48.980]  Значит, этот второй суффикс... Так, вот, да, внимание, мы перешли по букве A, но перед этим, да, мы не забываем дописать тут еще буквы A, чтобы не догнать.
[49:48.980 --> 49:55.980]  Понятно, да? Ну, легко заметить, что он тут может, они тут могут гнаться сколько угодно, но он до сюда никогда не дойдет.
[49:55.980 --> 50:00.980]  Вот, потому что это ребро на каждом шаге будет удлияться на единичку.
[50:00.980 --> 50:10.980]  Ну, а так как двойка заканчивается не в листе, то получается, и все остальные, как бы, дальнейшие суффиксы тоже будут заканчиваться не в листах, следовательно, ничего нового не появится, можно больше ничего не делать.
[50:10.980 --> 50:14.980]  Удобно, правда?
[50:15.980 --> 50:17.980]  Угу.
[50:21.980 --> 50:23.980]  Все, пока. Все, неудобно?
[50:26.980 --> 50:29.980]  Вот, что, когда ничего делать не надо, разве неудобно?
[50:29.980 --> 50:33.980]  Ну вот, значит, дальше. Дальше будет интереснее.
[50:33.980 --> 50:37.980]  Буква C.
[50:37.980 --> 50:39.980]  Так, ну, придется тут пилить.
[50:39.980 --> 50:40.980]  Потому что...
[50:40.980 --> 50:43.980]  Нет, у нас переходы из двойки по буквы C.
[50:43.980 --> 50:45.980]  Значит, так и пишем.
[50:45.980 --> 50:49.980]  Три плюс бесконечность, тут приход C, тут приход B, кстати.
[50:49.980 --> 50:54.980]  А, да, я забыл, что тут надо C нарисовать, тут C нарисовать и вот тут C нарисовать.
[50:54.980 --> 50:56.980]  Так, двойки больше нет.
[50:56.980 --> 51:00.980]  Сдвигаем first not lift на троечку.
[51:02.980 --> 51:04.980]  А я тут C нарисую, да?
[51:04.980 --> 51:07.980]  Так, теперь думаем, а можно ли его продлить на символ C?
[51:07.980 --> 51:09.980]  Так, троечка где была?
[51:09.980 --> 51:12.980]  Так, это была пустая строка, она была в корке, да?
[51:12.980 --> 51:16.980]  Так, есть ли из этого корги переход по символу C?
[51:16.980 --> 51:18.980]  Ой, нету.
[51:18.980 --> 51:22.980]  Пусть придется брать из этого корги, рисовать переход по символу C.
[51:22.980 --> 51:25.980]  Со спонтанкной комбинацией.
[51:27.980 --> 51:29.980]  И получается...
[51:29.980 --> 51:33.980]  И троечку получается first not lift сбегаю,
[51:33.980 --> 51:37.980]  но на этот раз, видите, этот first not lift обогнал уже даже символ C,
[51:37.980 --> 51:40.980]  поэтому он отправляется в корень.
[51:43.980 --> 51:46.980]  Вот видите, каждое нетривиальное действие,
[51:46.980 --> 51:49.980]  то есть там типа распиливание вершины и создание нового ребра,
[51:49.980 --> 51:52.980]  там распиливание ребра и создание там вот этого,
[51:52.980 --> 51:57.980]  получается, мы оплачиваем, по сути, с двигом вот этого ребра, правда?
[51:57.980 --> 52:00.980]  Вот давайте поэмулируем этот процесс еще.
[52:02.980 --> 52:04.980]  Буква A.
[52:04.980 --> 52:07.980]  Так, четверочка сдвигается сюда.
[52:08.980 --> 52:09.980]  Вот.
[52:09.980 --> 52:11.980]  Четверочка сдвигается сюда,
[52:11.980 --> 52:13.980]  а тут везде приписывается буква A,
[52:13.980 --> 52:15.980]  но они приписываются, напоминаю, мысленно.
[52:16.980 --> 52:18.980]  Так, дальше буква B.
[52:18.980 --> 52:21.980]  Так, тут приписывается буква B.
[52:22.980 --> 52:25.980]  И... переход идет.
[52:27.980 --> 52:30.980]  Вот этот четверок я теперь вот сюда оплазываю.
[52:30.980 --> 52:33.980]  Дальше приписывается буква A, повторяется то же самое.
[52:33.980 --> 52:36.980]  Видите, прям буквально вот прям, милые вот единицы.
[52:36.980 --> 52:40.980]  Ну, конечно, да, такие быстрые вот единицы, это, конечно, предвестник какой-то амортизации, да?
[52:41.980 --> 52:43.980]  Вот.
[52:50.980 --> 52:53.980]  И теперь снова буква A.
[52:56.980 --> 52:58.980]  Так, ну, поехали.
[52:58.980 --> 53:00.980]  Коррихона по букве A нет.
[53:01.980 --> 53:03.980]  Значит, распиливаем ребро.
[53:04.980 --> 53:06.980]  Так, что тут у нас?
[53:06.980 --> 53:08.980]  А, во-первых, я забыл тут единицу нарисовать.
[53:08.980 --> 53:10.980]  А тут 0,1.
[53:10.980 --> 53:12.980]  Тут, соответственно, теперь будет 1,3.
[53:12.980 --> 53:14.980]  А тут край-бан.
[53:14.980 --> 53:20.980]  Значит, да, из этого места мы теперь пилим переход по букве C.
[53:20.980 --> 53:24.980]  Тут переход получается 7 плюс бесконечность.
[53:24.980 --> 53:26.980]  Вот.
[53:26.980 --> 53:28.980]  И, соответственно, тут буква A.
[53:29.980 --> 53:31.980]  Четверок прищезает.
[53:32.980 --> 53:34.980]  А вот теперь немножко магии, да?
[53:34.980 --> 53:36.980]  Так, теперь пятачок.
[53:36.980 --> 53:38.980]  Так, то есть у нас был суффикс BA.
[53:38.980 --> 53:40.980]  Где заканчивается суффикс BA?
[53:42.980 --> 53:44.980]  Где-то вот здесь.
[53:44.980 --> 53:46.980]  Есть ли из этого места переход по букве A?
[53:47.980 --> 53:49.980]  Нет.
[53:49.980 --> 53:55.980]  Значит, придется в явном виде опять пилить ребро.
[53:57.980 --> 53:59.980]  И рисовать переход по букве B.
[54:00.980 --> 54:02.980]  По букве A.
[54:18.980 --> 54:20.980]  Так.
[54:20.980 --> 54:22.980]  Значит, пятачок сдвигаем.
[54:22.980 --> 54:24.980]  Теперь у нас шестерочка.
[54:25.980 --> 54:27.980]  Так, шестой суффикс.
[54:27.980 --> 54:29.980]  Раньше был буквой A и заканчивался здесь.
[54:29.980 --> 54:31.980]  Есть здесь переход по букве A?
[54:35.980 --> 54:37.980]  Опять.
[54:37.980 --> 54:39.980]  Слава богу, хоть вершины и на то совсем.
[54:43.980 --> 54:45.980]  Ну, в общем, поэмулировали, поэмулировали.
[54:45.980 --> 54:47.980]  Тут получается буква A.
[54:50.980 --> 54:52.980]  Так.
[54:52.980 --> 54:54.980]  Теперь следующий суффикс.
[54:54.980 --> 54:56.980]  Следующий суффикс без этого символа.
[54:56.980 --> 54:58.980]  Он был пустым.
[55:01.980 --> 55:03.980]  И он смотрел вот сюда.
[55:03.980 --> 55:05.980]  Есть ли отсюда переход по букве A?
[55:05.980 --> 55:07.980]  У чуда есть.
[55:07.980 --> 55:10.980]  Следует нас, значит, мы вот сюда его и проведем.
[55:10.980 --> 55:12.980]  И на этом мы остановимся.
[55:14.980 --> 55:16.980]  Вот, понятно, да?
[55:17.980 --> 55:19.980]  Вот.
[55:20.980 --> 55:22.980]  Ну, соответственно, можно это эмулировать дальше.
[55:22.980 --> 55:24.980]  Но, я думаю, суть уже видна, правда?
[55:26.980 --> 55:28.980]  То есть, заметим, что в принципе-то...
[55:28.980 --> 55:30.980]  То есть, получается, алгоритм устроен так.
[55:30.980 --> 55:32.980]  У нас есть first not leave.
[55:32.980 --> 55:34.980]  Причем в лице позиции в этом суффиксном боле.
[55:34.980 --> 55:36.980]  Правда?
[55:36.980 --> 55:38.980]  Понимаете, да?
[55:38.980 --> 55:40.980]  Угу.
[55:40.980 --> 55:42.980]  То есть, прям вот в этом виде позиции.
[55:42.980 --> 55:44.980]  Прям в этом суффиксном боле.
[55:44.980 --> 55:46.980]  И тогда, получается, когда приходит новая буква,
[55:46.980 --> 55:48.980]  мы говорим так.
[55:48.980 --> 55:50.980]  В этой позиции можно пройти по этой букве.
[55:50.980 --> 55:52.980]  Если можно, то проходим и не заморачиваемся.
[55:52.980 --> 55:54.980]  Если нельзя,
[55:54.980 --> 55:56.980]  то создаем, если надо, новую вершину
[55:56.980 --> 55:58.980]  и новое ребро.
[55:58.980 --> 56:00.980]  Понятно, да?
[56:00.980 --> 56:02.980]  И берем этот суффикс,
[56:02.980 --> 56:04.980]  отпиливаем у него единичку,
[56:04.980 --> 56:06.980]  ищем, где он у нас в боле,
[56:06.980 --> 56:08.980]  и повторяем операцию. Правда?
[56:08.980 --> 56:10.980]  Понимаете, да?
[56:10.980 --> 56:12.980]  В чём, казалось бы, заметим,
[56:12.980 --> 56:14.980]  что каждый такой шаг
[56:14.980 --> 56:16.980]  увеличивает нам указатель на единичку.
[56:16.980 --> 56:18.980]  И из шагов, получается, мы будем делать ОАТН.
[56:20.980 --> 56:22.980]  Следовательно,
[56:22.980 --> 56:24.980]  наш алгоритм работает
[56:24.980 --> 56:26.980]  за ОАТН.
[56:28.980 --> 56:30.980]  Ну,
[56:30.980 --> 56:32.980]  только если мы, на общем, находимся,
[56:32.980 --> 56:34.980]  где же заканчивается суффикс.
[56:34.980 --> 56:36.980]  Да. У нас есть только одна маленькая проблема,
[56:36.980 --> 56:38.980]  которая не даёт нам возможности сказать,
[56:38.980 --> 56:40.980]  что у Чудо мы победили.
[56:40.980 --> 56:42.980]  А момент такой.
[56:42.980 --> 56:44.980]  Вот, допустим, вы там нашли
[56:44.980 --> 56:46.980]  вот этот длинный суффикс, он мог быть и длинный,
[56:46.980 --> 56:48.980]  выяснили, что там пришлось тут лист
[56:48.980 --> 56:50.980]  под него делать. Тогда надо от этого суффикса
[56:50.980 --> 56:52.980]  отпилить единицу и найти,
[56:52.980 --> 56:54.980]  где он в боле
[56:54.980 --> 56:56.980]  находится.
[56:56.980 --> 56:58.980]  Мы точно знаем, что
[56:58.980 --> 57:00.980]  в боле есть, но вопрос где?
[57:02.980 --> 57:04.980]  Вот, если предполагать, что нам
[57:04.980 --> 57:06.980]  там говорят с небес
[57:06.980 --> 57:08.980]  по факсу, где он находится,
[57:08.980 --> 57:10.980]  то мы получили
[57:10.980 --> 57:12.980]  корректный линейный алгоритм. Согласны?
[57:12.980 --> 57:14.980]  Вот, если нам, вот.
[57:14.980 --> 57:16.980]  Так что нам, как всегда,
[57:16.980 --> 57:18.980]  остается просто извести небеса и факс.
[57:22.980 --> 57:24.980]  Вы так себе смеётесь,
[57:24.980 --> 57:26.980]  как будто я, я на предыдущих лекциях
[57:26.980 --> 57:28.980]  эти слова сочетания никогда не употреблял.
[57:30.980 --> 57:32.980]  В общем, я вас
[57:32.980 --> 57:34.980]  помню, вы были, бывали у меня на лекциях вроде.
[57:38.980 --> 57:40.980]  Ну ладно.
[57:40.980 --> 57:42.980]  Это просто особый талант застрелять людей
[57:42.980 --> 57:44.980]  каждый раз.
[57:44.980 --> 57:46.980]  Соги хотели шутить.
[57:46.980 --> 57:48.980]  Ну, правильно, правда.
[57:48.980 --> 57:50.980]  Ну, так и надо.
[57:50.980 --> 57:52.980]  Ладно. Так вот.
[57:52.980 --> 57:54.980]  Ладно.
[57:54.980 --> 57:56.980]  Вы сказали, что мы поддерживаем First New Peer.
[57:56.980 --> 57:58.980]  Первую планицию,
[57:58.980 --> 58:00.980]  от которой суффикс
[58:00.980 --> 58:02.980]  не заканчивается в листе.
[58:02.980 --> 58:04.980]  Да.
[58:04.980 --> 58:06.980]  И мы, кто-то прикроет новый символ,
[58:06.980 --> 58:08.980]  мы пытаемся сразу же
[58:08.980 --> 58:10.980]  его продлить.
[58:10.980 --> 58:12.980]  Ну, пытаемся
[58:12.980 --> 58:14.980]  пройти по нему, по этому новому символу.
[58:14.980 --> 58:16.980]  Если не получается,
[58:16.980 --> 58:18.980]  то соответственно, правильно.
[58:18.980 --> 58:20.980]  Во-первых, если это не вершина,
[58:20.980 --> 58:22.980]  то создаём в этом месте вершину.
[58:22.980 --> 58:24.980]  Во-вторых, от вершины создаём новое ребро
[58:24.980 --> 58:26.980]  по этому символу.
[58:26.980 --> 58:28.980]  Вот там с бесконечностью.
[58:28.980 --> 58:30.980]  После этого берём вот эту строку,
[58:30.980 --> 58:32.980]  в которую мы в эту вершину приходим,
[58:32.980 --> 58:34.980]  отпиливаем от неё первый символ
[58:34.980 --> 58:36.980]  и перемещаемся
[58:36.980 --> 58:38.980]  в позицию соответствующую этой строке.
[58:40.980 --> 58:42.980]  Вот видите, тут было вот A-B-A,
[58:42.980 --> 58:44.980]  поэтому теперь мы перемещаемся в позицию B.
[58:44.980 --> 58:46.980]  Вот у A-B-A
[58:46.980 --> 58:48.980]  мы суффикс уменьшаем на единичку.
[58:48.980 --> 58:50.980]  То есть, по сути,
[58:50.980 --> 58:52.980]  первый символ отпиливаем.
[58:52.980 --> 58:54.980]  И теперь надо найти,
[58:54.980 --> 58:56.980]  где это B находится.
[58:56.980 --> 58:58.980]  Мы могли бы это делать в тупую, конечно.
[58:58.980 --> 59:00.980]  Да?
[59:00.980 --> 59:02.980]  Да, прям рекурсивно, да.
[59:02.980 --> 59:04.980]  Ну, не рекурсивно, а скорее
[59:04.980 --> 59:06.980]  это вайли как-то.
[59:06.980 --> 59:08.980]  Да, да, да, да.
[59:08.980 --> 59:10.980]  И утверждают,
[59:10.980 --> 59:12.980]  что с ума, но тогда у нас
[59:12.980 --> 59:14.980]  трёсток некуда.
[59:14.980 --> 59:16.980]  Указатель будет двигаться.
[59:16.980 --> 59:18.980]  Не просто от N не более,
[59:18.980 --> 59:20.980]  чем N раз.
[59:20.980 --> 59:22.980]  Ничего удивительного.
[59:22.980 --> 59:24.980]  Ничего страшного, что внутренних вершин
[59:24.980 --> 59:26.980]  у нас действительно не более, чем N-1.
[59:26.980 --> 59:28.980]  Считаю вот эту, правда.
[59:28.980 --> 59:30.980]  Потому что у нас листов не более,
[59:30.980 --> 59:32.980]  чем N.
[59:32.980 --> 59:34.980]  То есть, сжатие привело к тому,
[59:34.980 --> 59:36.980]  что каждая внутренняя вершина
[59:36.980 --> 59:40.980]  хотя бы два ребёнка да имеет.
[59:40.980 --> 59:42.980]  Ну, может и больше.
[59:42.980 --> 59:44.980]  Вот у нас уже есть.
[59:44.980 --> 59:46.980]  Поэтому получается, что да.
[59:46.980 --> 59:48.980]  По сути, получается два указателя.
[59:48.980 --> 59:50.980]  Это правого указателя добавляемый символ,
[59:50.980 --> 59:52.980]  а левого указатель просто не двигается.
[59:52.980 --> 59:54.980]  Да, по сути, да.
[59:54.980 --> 59:56.980]  Левый указатель не двигается.
[59:56.980 --> 59:58.980]  Ну да, то есть, видите,
[59:58.980 --> 01:00:00.980]  всё-то в этих строчках, видимо, они одна и та же.
[01:00:00.980 --> 01:00:02.980]  Что мы скажем?
[01:00:02.980 --> 01:00:04.980]  Ну, когда мы распроизведем эту посетку?
[01:00:06.980 --> 01:00:08.980]  Позицию.
[01:00:08.980 --> 01:00:10.980]  Да.
[01:00:10.980 --> 01:00:12.980]  Знаете...
[01:00:12.980 --> 01:00:14.980]  Нет, можем даже,
[01:00:14.980 --> 01:00:16.980]  чтобы, может быть, это...
[01:00:16.980 --> 01:00:18.980]  Если честно, можем на самом деле даже
[01:00:18.980 --> 01:00:20.980]  начать в этом месте код писать.
[01:00:20.980 --> 01:00:22.980]  Да, ещё не всё понятно,
[01:00:22.980 --> 01:00:24.980]  но, на самом деле,
[01:00:24.980 --> 01:00:26.980]  основную магию.
[01:00:26.980 --> 01:00:28.980]  Значит, смотрите.
[01:00:28.980 --> 01:00:30.980]  Давайте-ка.
[01:00:32.980 --> 01:00:34.980]  То есть, выглядит это будет,
[01:00:34.980 --> 01:00:36.980]  примерно, следующим образом.
[01:00:36.980 --> 01:00:38.980]  Давайте это я всё убираю.
[01:00:38.980 --> 01:00:40.980]  Вот это я, наверное, даже не убираю,
[01:00:40.980 --> 01:00:42.980]  потому что эти функции нам могут приведиться вообще.
[01:00:48.980 --> 01:00:50.980]  Так, смотрите.
[01:00:50.980 --> 01:00:52.980]  Страт 0.2.
[01:00:54.980 --> 01:00:56.980]  Что мы будем хранить в вершине?
[01:00:58.980 --> 01:01:00.980]  Ну, в вершине мы хранить немножко не то.
[01:01:02.980 --> 01:01:04.980]  Ну, во-первых, да.
[01:01:06.980 --> 01:01:08.980]  Так, ну ладно.
[01:01:08.980 --> 01:01:10.980]  Давайте лучше это стру.
[01:01:10.980 --> 01:01:12.980]  Поехали.
[01:01:12.980 --> 01:01:14.980]  Что мы будем делать?
[01:01:14.980 --> 01:01:16.980]  Во-первых, мы заведём,
[01:01:16.980 --> 01:01:18.980]  ну, раз уж у нас таким режиме
[01:01:18.980 --> 01:01:20.980]  это пошло,
[01:01:20.980 --> 01:01:22.980]  страт позицию.
[01:01:28.980 --> 01:01:30.980]  В этом позиционе
[01:01:30.980 --> 01:01:32.980]  мы будем хранить всего два инта.
[01:01:32.980 --> 01:01:34.980]  int
[01:01:34.980 --> 01:01:36.980]  v
[01:01:36.980 --> 01:01:38.980]  tu
[01:01:40.980 --> 01:01:42.980]  Типа, в какую вершину мы идём?
[01:01:42.980 --> 01:01:44.980]  Ну, в каждую вершину входит ровно одно ребро, правда?
[01:01:48.980 --> 01:01:50.980]  Да.
[01:01:50.980 --> 01:01:52.980]  И, соответственно,
[01:01:52.980 --> 01:01:54.980]  dist2.
[01:01:54.980 --> 01:01:56.980]  Ну, я, конечно, ту и ту.
[01:01:56.980 --> 01:01:58.980]  Ну, я, конечно, ту и те лишние
[01:01:58.980 --> 01:02:00.980]  не пишу обычно, но
[01:02:00.980 --> 01:02:02.980]  я понимаю, нести пойдёт.
[01:02:02.980 --> 01:02:04.980]  Страт позиции.
[01:02:08.980 --> 01:02:10.980]  А что
[01:02:10.980 --> 01:02:12.980]  мы будем хранить
[01:02:12.980 --> 01:02:14.980]  в ноде?
[01:02:16.980 --> 01:02:18.980]  В ноде мы будем
[01:02:18.980 --> 01:02:20.980]  что нам понадобится хранить в ноде?
[01:02:26.980 --> 01:02:28.980]  Так.
[01:02:28.980 --> 01:02:30.980]  Ну, во-первых, конечно,
[01:02:30.980 --> 01:02:32.980]  будет у нас такая
[01:02:32.980 --> 01:02:34.980]  деревесная составляющая,
[01:02:34.980 --> 01:02:36.980]  как переходы.
[01:02:38.980 --> 01:02:40.980]  map
[01:02:40.980 --> 01:02:42.980]  из char, как вы думаете,
[01:02:42.980 --> 01:02:44.980]  куда?
[01:02:50.980 --> 01:02:52.980]  Ну, тут уже сразу договориться.
[01:02:52.980 --> 01:02:54.980]  Тут варианты могут быть разные.
[01:02:54.980 --> 01:02:56.980]  Ну,
[01:02:56.980 --> 01:02:58.980]  смотрите,
[01:02:58.980 --> 01:03:00.980]  можно, конечно, сказать, что давайте выйти.
[01:03:00.980 --> 01:03:02.980]  Да.
[01:03:12.980 --> 01:03:14.980]  Но возникает такой ещё момент.
[01:03:14.980 --> 01:03:16.980]  Нам же
[01:03:16.980 --> 01:03:18.980]  в перспективе потребуется по позиции
[01:03:18.980 --> 01:03:20.980]  восстанавливать символ, правда?
[01:03:24.980 --> 01:03:26.980]  Поэтому, наверное,
[01:03:26.980 --> 01:03:28.980]  для каждого ребра
[01:03:28.980 --> 01:03:30.980]  где-то должны
[01:03:30.980 --> 01:03:32.980]  вот эту вот подстроку хранить,
[01:03:32.980 --> 01:03:34.980]  правда?
[01:03:38.980 --> 01:03:40.980]  Поэтому давайте
[01:03:40.980 --> 01:03:42.980]  в каждом ребре такое хранить.
[01:03:42.980 --> 01:03:44.980]  int edge
[01:03:46.980 --> 01:03:48.980]  edge l и edge
[01:03:48.980 --> 01:03:50.980]  от замечательного названия вообще.
[01:03:50.980 --> 01:03:52.980]  Это мы храним вершинкой.
[01:03:52.980 --> 01:03:54.980]  Да.
[01:03:54.980 --> 01:03:56.980]  То есть мы храним в ребро входящие.
[01:03:56.980 --> 01:03:58.980]  Да.
[01:03:58.980 --> 01:04:00.980]  Ну, можно так.
[01:04:00.980 --> 01:04:02.980]  edge l и edge
[01:04:02.980 --> 01:04:04.980]  edge
[01:04:04.980 --> 01:04:06.980]  я пишу, что это имеет отношение к ребру.
[01:04:06.980 --> 01:04:08.980]  Да,
[01:04:08.980 --> 01:04:10.980]  можно, конечно, сказать, edge begin
[01:04:10.980 --> 01:04:12.980]  edge end, конечно,
[01:04:12.980 --> 01:04:14.980]  но edge l и edge
[01:04:14.980 --> 01:04:16.980]  r, мне кажется, интуитивно понятно
[01:04:16.980 --> 01:04:18.980]  должно быть.
[01:04:18.980 --> 01:04:20.980]  Да.
[01:04:20.980 --> 01:04:22.980]  То есть это полуинтервал l и edge.
[01:04:28.980 --> 01:04:30.980]  Вот.
[01:04:30.980 --> 01:04:32.980]  Ну, вот.
[01:04:32.980 --> 01:04:34.980]  Ну, так.
[01:04:34.980 --> 01:04:36.980]  Надо ли нам что-то ещё?
[01:04:40.980 --> 01:04:42.980]  Ну, на самом деле ладно, кое-что
[01:04:42.980 --> 01:04:44.980]  нам ещё не хватает.
[01:04:44.980 --> 01:04:46.980]  На самом деле мы уже замечаем,
[01:04:46.980 --> 01:04:48.980]  что нам же придётся ребро распиливать
[01:04:48.980 --> 01:04:50.980]  как-то, да?
[01:04:50.980 --> 01:04:52.980]  То есть у нас должна быть функция
[01:04:52.980 --> 01:04:54.980]  типа возьми позицию
[01:04:54.980 --> 01:04:56.980]  и создай в ней вершину, ну, если можно.
[01:04:56.980 --> 01:04:58.980]  Ну, если это не вершина, конечно.
[01:04:58.980 --> 01:05:00.980]  Но тогда по ребру
[01:05:00.980 --> 01:05:02.980]  неплохо было бы на самом деле и родителя
[01:05:02.980 --> 01:05:04.980]  звать, поэтому давайте так и напишем.
[01:05:04.980 --> 01:05:06.980]  int
[01:05:06.980 --> 01:05:08.980]  edge
[01:05:08.980 --> 01:05:10.980]  Ну, типа полная информация уже
[01:05:10.980 --> 01:05:12.980]  как до конца.
[01:05:12.980 --> 01:05:14.980]  Вот.
[01:05:18.980 --> 01:05:20.980]  Ну, вот.
[01:05:22.980 --> 01:05:24.980]  Ну, и в общем-то всё.
[01:05:26.980 --> 01:05:28.980]  Пока.
[01:05:28.980 --> 01:05:30.980]  Вот.
[01:05:46.980 --> 01:05:48.980]  Значит, далее теперь будем сделать.
[01:05:48.980 --> 01:05:50.980]  Вот. Значит, такие доды создали.
[01:05:50.980 --> 01:05:52.980]  Ну, в будущем я скажу, то для того,
[01:05:52.980 --> 01:05:54.980]  чтобы вот делать эту чёрную манью с перескакиванием,
[01:05:54.980 --> 01:05:56.980]  нам придётся ещё кое-что добавить.
[01:05:56.980 --> 01:05:58.980]  Ну, пока же давайте разбираться.
[01:06:00.980 --> 01:06:02.980]  Так. Ну, на этот раз давайте
[01:06:02.980 --> 01:06:04.980]  может быть для ускорения процесса.
[01:06:04.980 --> 01:06:06.980]  Да, вот мы быстро новообразились.
[01:06:06.980 --> 01:06:08.980]  А, ну да, вот смотрите.
[01:06:08.980 --> 01:06:10.980]  Эту пару процедур мы можем
[01:06:10.980 --> 01:06:12.980]  даже особо не менять.
[01:06:12.980 --> 01:06:14.980]  Хотя на самом деле
[01:06:14.980 --> 01:06:16.980]  правильнее, хотя не совсем.
[01:06:16.980 --> 01:06:18.980]  На самом деле они у нас
[01:06:18.980 --> 01:06:20.980]  конечно немножко модифицируются.
[01:06:22.980 --> 01:06:24.980]  Потому что, во-первых, они станут
[01:06:24.980 --> 01:06:26.980]  ближенькими.
[01:06:28.980 --> 01:06:30.980]  Так.
[01:06:32.980 --> 01:06:34.980]  Хотя, знаете,
[01:06:34.980 --> 01:06:36.980]  так.
[01:06:36.980 --> 01:06:38.980]  А нет, ну парни, давайте сначала
[01:06:38.980 --> 01:06:40.980]  поймём, что мы вообще храним.
[01:06:40.980 --> 01:06:42.980]  Для начала мы замечаем,
[01:06:42.980 --> 01:06:44.980]  что мы храним стрим С, конечно.
[01:06:46.980 --> 01:06:48.980]  Дерево у нас
[01:06:48.980 --> 01:06:50.980]  это, естественно,
[01:06:50.980 --> 01:06:52.980]  вектор нодов.
[01:06:54.980 --> 01:06:56.980]  Так.
[01:07:00.980 --> 01:07:02.980]  И, как вы уже убедились,
[01:07:02.980 --> 01:07:04.980]  ещё нам потребуется для хранения,
[01:07:04.980 --> 01:07:06.980]  то есть ещё хранить
[01:07:06.980 --> 01:07:08.980]  вот эту вот позицию.
[01:07:08.980 --> 01:07:10.980]  Это важно.
[01:07:10.980 --> 01:07:12.980]  Позицию
[01:07:12.980 --> 01:07:14.980]  first not leave.
[01:07:18.980 --> 01:07:20.980]  Вот я утверждаю, что больше ничего
[01:07:20.980 --> 01:07:22.980]  хранить вообще не потребуется.
[01:07:22.980 --> 01:07:24.980]  Понятно, да?
[01:07:24.980 --> 01:07:26.980]  Так, в результате
[01:07:26.980 --> 01:07:28.980]  получится лучше.
[01:07:28.980 --> 01:07:30.980]  Сейчас будет немножко магии.
[01:07:34.980 --> 01:07:36.980]  Так, далее.
[01:07:36.980 --> 01:07:38.980]  Ну, во-первых, да, и нет, давайте
[01:07:38.980 --> 01:07:40.980]  напишем сразу, чтоб не париться.
[01:07:48.980 --> 01:07:50.980]  Ну, во-первых, да, void
[01:07:50.980 --> 01:07:52.980]  finite.
[01:07:52.980 --> 01:07:54.980]  Ну, ладно,
[01:07:54.980 --> 01:07:56.980]  с венитом тут не очень, конечно, получится.
[01:07:56.980 --> 01:07:58.980]  Ну, во-первых, понятно,
[01:07:58.980 --> 01:08:00.980]  S равно
[01:08:00.980 --> 01:08:02.980]  быть-пыть.
[01:08:08.980 --> 01:08:10.980]  Nodes равно
[01:08:10.980 --> 01:08:12.980]  там пока
[01:08:12.980 --> 01:08:14.980]  единственные вершины, которые будут
[01:08:14.980 --> 01:08:16.980]  состоять из чего?
[01:08:16.980 --> 01:08:18.980]  Из пустого мата.
[01:08:18.980 --> 01:08:20.980]  Угу,
[01:08:20.980 --> 01:08:22.980]  пустого мата, совершенно верно.
[01:08:22.980 --> 01:08:24.980]  Ну, вот так.
[01:08:24.980 --> 01:08:26.980]  Или ноль пись бесконечности.
[01:08:28.980 --> 01:08:30.980]  Минус один, минус один
[01:08:30.980 --> 01:08:32.980]  напишем.
[01:08:32.980 --> 01:08:34.980]  Знак того, что ну, не ведёт у нас в корень
[01:08:34.980 --> 01:08:36.980]  вибра.
[01:08:38.980 --> 01:08:40.980]  И ещё
[01:08:40.980 --> 01:08:42.980]  минус один, знак того, что родителя тоже
[01:08:42.980 --> 01:08:44.980]  нет.
[01:08:46.980 --> 01:08:48.980]  Так, что там ещё?
[01:08:48.980 --> 01:08:50.980]  Ну, и, наконец,
[01:08:50.980 --> 01:08:52.980]  first not leave.
[01:08:56.980 --> 01:08:58.980]  First not leave.
[01:09:02.980 --> 01:09:04.980]  Значит, first not leave.
[01:09:04.980 --> 01:09:06.980]  Так, ладно, давайте я тут
[01:09:06.980 --> 01:09:08.980]  чуть подлиннее нарисую,
[01:09:08.980 --> 01:09:10.980]  потому что
[01:09:12.980 --> 01:09:14.980]  ну, а в first not leave понятно, что
[01:09:14.980 --> 01:09:16.980]  мы идём в вершину ноль и находимся
[01:09:16.980 --> 01:09:18.980]  от неё на расстоянии ноль.
[01:09:22.980 --> 01:09:24.980]  Ну, потому что мы будем считать,
[01:09:24.980 --> 01:09:26.980]  что корень никогда не является листом,
[01:09:28.980 --> 01:09:30.980]  даже если у него нет детей.
[01:09:30.980 --> 01:09:32.980]  Ну, понятно, что как только мы тут
[01:09:32.980 --> 01:09:34.980]  первый символ добавим,
[01:09:34.980 --> 01:09:36.980]  это у нас исходит. Понятно, да?
[01:09:38.980 --> 01:09:40.980]  Ну, теперь давайте попробуем
[01:09:40.980 --> 01:09:42.980]  подписать.
[01:09:42.980 --> 01:09:44.980]  Сейчас, наверное, там всякие, не буду
[01:09:44.980 --> 01:09:46.980]  писать мелкие инфраструктурные функции,
[01:09:46.980 --> 01:09:48.980]  по дереву, по ледробу вы уже и так
[01:09:48.980 --> 01:09:50.980]  поняли, как мы в принципе хотим писать.
[01:09:50.980 --> 01:09:52.980]  Значит, поехали!
[01:09:54.980 --> 01:09:56.980]  Теперь пришло время, значит, давайте
[01:09:56.980 --> 01:09:58.980]  представим себе, что мы
[01:09:58.980 --> 01:10:00.980]  добавляем новый символ.
[01:10:02.980 --> 01:10:04.980]  Новый символ у нас будет
[01:10:06.980 --> 01:10:08.980]  естественно, в чёртеньком.
[01:10:12.980 --> 01:10:14.980]  Значит, смотрите.
[01:10:18.980 --> 01:10:20.980]  Значит, дальше будет работа так.
[01:10:20.980 --> 01:10:22.980]  Ну, во-первых,
[01:10:22.980 --> 01:10:24.980]  давайте попушбэркаем, конечно,
[01:10:24.980 --> 01:10:26.980]  этот символ у нас.
[01:10:30.980 --> 01:10:32.980]  Вот так.
[01:10:32.980 --> 01:10:34.980]  Вот так.
[01:10:34.980 --> 01:10:36.980]  Вот так.
[01:10:36.980 --> 01:10:38.980]  Вот так.
[01:10:38.980 --> 01:10:40.980]  Вот так.
[01:10:40.980 --> 01:10:42.980]  Вот так.
[01:10:48.980 --> 01:10:50.980]  А дальше алгоритм устроим.
[01:10:56.980 --> 01:10:58.980]  А теперь говорим.
[01:10:58.980 --> 01:11:00.980]  Я так напишу, смотрите.
[01:11:04.980 --> 01:11:06.980]  Значит, while что, соответственно.
[01:11:06.980 --> 01:11:08.980]  Так сказать.
[01:11:10.980 --> 01:11:12.980]  Я так напишу.
[01:11:12.980 --> 01:11:14.980]  Ну, потом чуть-чуть под шаманем
[01:11:14.980 --> 01:11:16.980]  будете готовы. Пока эта штука
[01:11:16.980 --> 01:11:18.980]  валидна,
[01:11:18.980 --> 01:11:20.980]  эта штука, в смысле,
[01:11:20.980 --> 01:11:22.980]  краснотливка,
[01:11:22.980 --> 01:11:24.980]  краснотливка, конечно.
[01:11:30.980 --> 01:11:32.980]  And then
[01:11:32.980 --> 01:11:34.980]  не
[01:11:34.980 --> 01:11:36.980]  can grow
[01:11:40.980 --> 01:11:42.980]  пока
[01:11:42.980 --> 01:11:44.980]  мы, значит, не можем
[01:11:44.980 --> 01:11:46.980]  из этой позиции пройти.
[01:11:52.980 --> 01:11:54.980]  Партизим лучше.
[01:12:04.980 --> 01:12:06.980]  Что мы делаем?
[01:12:06.980 --> 01:12:08.980]  Ну, тут непонятно.
[01:12:08.980 --> 01:12:10.980]  Эта позиция может быть вершиной,
[01:12:10.980 --> 01:12:12.980]  может не быть, правда?
[01:12:14.980 --> 01:12:16.980]  Ну да, поэтому, смотрите,
[01:12:16.980 --> 01:12:18.980]  я в этом месте пишу так.
[01:12:18.980 --> 01:12:20.980]  int
[01:12:20.980 --> 01:12:22.980]  допустим,
[01:12:22.980 --> 01:12:24.980]  new v,
[01:12:24.980 --> 01:12:26.980]  новая вершина,
[01:12:26.980 --> 01:12:28.980]  равно
[01:12:28.980 --> 01:12:30.980]  build
[01:12:30.980 --> 01:12:32.980]  new
[01:12:32.980 --> 01:12:34.980]  v
[01:12:34.980 --> 01:12:36.980]  build
[01:12:38.980 --> 01:12:40.980]  node
[01:12:40.980 --> 01:12:42.980]  if need.
[01:12:44.980 --> 01:12:46.980]  Вот на месте этой позиции.
[01:12:50.980 --> 01:12:52.980]  Ну, то есть в том плане, что
[01:12:52.980 --> 01:12:54.980]  если мы находимся в вершине,
[01:12:54.980 --> 01:12:56.980]  то эта функция ее тупо
[01:12:56.980 --> 01:12:58.980]  в ее номере вернет. Если
[01:13:00.980 --> 01:13:02.980]  что?
[01:13:02.980 --> 01:13:04.980]  Из Формана?
[01:13:04.980 --> 01:13:06.980]  Форман есть у Конин? Не знал.
[01:13:06.980 --> 01:13:08.980]  В таком стиле.
[01:13:08.980 --> 01:13:10.980]  Да?
[01:13:10.980 --> 01:13:12.980]  Не знаю.
[01:13:14.980 --> 01:13:16.980]  Не, ну, как сказать?
[01:13:16.980 --> 01:13:18.980]  Ну, нет, ну, на самом деле, видимо,
[01:13:18.980 --> 01:13:20.980]  это просто хорошая практика кода, когда вы,
[01:13:20.980 --> 01:13:22.980]  в принципе, когда какой-нибудь сложный код пишете,
[01:13:22.980 --> 01:13:24.980]  лучше на высоком уровне, так и там
[01:13:24.980 --> 01:13:26.980]  какие-нибудь штуки, просто говоришь, я сделаю
[01:13:26.980 --> 01:13:28.980]  функцию, которую потом буду думать позже.
[01:13:28.980 --> 01:13:30.980]  То есть, прям, я здесь же
[01:13:30.980 --> 01:13:32.980]  возможно пропишу, что я от этой функции хочу,
[01:13:32.980 --> 01:13:34.980]  потом, когда я буду писать функцию, у нее
[01:13:34.980 --> 01:13:36.980]  как бы есть интерфейс, я не буду думать о том,
[01:13:36.980 --> 01:13:38.980]  что было это. То есть, ну, полностандартный метод
[01:13:38.980 --> 01:13:40.980]  декомпозиции кодов, с которым мы уже встречались.
[01:13:40.980 --> 01:13:42.980]  Ну, да и насяг, я думаю,
[01:13:42.980 --> 01:13:44.980]  вы тоже с этим сталкиваетесь.
[01:13:44.980 --> 01:13:46.980]  Так вот, значит, создаем эту вершину, просто
[01:13:46.980 --> 01:13:48.980]  распиливаем ребро, никаких вот, ничего
[01:13:48.980 --> 01:13:50.980]  дополнительного пока не делаем. Понятно, да?
[01:13:52.980 --> 01:13:54.980]  Значит, что теперь надо?
[01:13:56.980 --> 01:13:58.980]  Теперь нужно создать
[01:13:58.980 --> 01:14:00.980]  новое ребро из этой вершины, правда?
[01:14:06.980 --> 01:14:08.980]  Еще обратите внимание,
[01:14:08.980 --> 01:14:10.980]  можно здесь это прям так и сделать,
[01:14:10.980 --> 01:14:12.980]  ну, давайте я тут уже две строчки так и потрачу.
[01:14:12.980 --> 01:14:14.980]  Ну, во-первых,
[01:14:14.980 --> 01:14:16.980]  значит, я так и напишу,
[01:14:16.980 --> 01:14:18.980]  смотрите, nodis
[01:14:18.980 --> 01:14:20.980]  от newwe
[01:14:22.980 --> 01:14:24.980]  .children
[01:14:24.980 --> 01:14:26.980]  от
[01:14:26.980 --> 01:14:28.980]  соответственно ch
[01:14:28.980 --> 01:14:30.980]  Чего у меня будет равно?
[01:14:38.980 --> 01:14:40.980]  Да!
[01:14:46.980 --> 01:14:48.980]  Вот.
[01:14:48.980 --> 01:14:50.980]  Ну, остается нам теперь только добавить
[01:14:50.980 --> 01:14:52.980]  новую вершину!
[01:14:52.980 --> 01:14:57.980]  Вот это вот. Nodes.
[01:14:57.980 --> 01:15:01.980]  Как там говорили? Mplaceback, да?
[01:15:01.980 --> 01:15:03.980]  Давайте.
[01:15:03.980 --> 01:15:06.980]  Сейчас же опять улез вот тут.
[01:15:06.980 --> 01:15:09.980]  Давайте pushback сделаем.
[01:15:09.980 --> 01:15:12.980]  Мы же на русский пишем.
[01:15:12.980 --> 01:15:18.980]  Нет, давайте скажем так.
[01:15:18.980 --> 01:15:26.980]  Для сохранения отсылки того, что мы делаем, то же самое, что делали в дереве калибровых, лучше сделаем так же, как там.
[01:15:26.980 --> 01:15:29.980]  Ну и не прикольно.
[01:15:29.980 --> 01:15:34.980]  Давайте map, chartings.
[01:15:34.980 --> 01:15:38.980]  Значит, push, push.
[01:15:38.980 --> 01:15:44.980]  Так, edgeA у меня будет равно чему?
[01:15:44.980 --> 01:15:49.980]  Подающие параметры, что я тут должен написать?
[01:15:49.980 --> 01:15:52.980]  Ну, это мы с последнего символа начинаем.
[01:15:52.980 --> 01:15:55.980]  Где n предыдущие для нас строки.
[01:15:55.980 --> 01:15:58.980]  А сейчас?
[01:15:58.980 --> 01:16:06.980]  Так, ну я тут опять потрачу лишние символы, потому что ретраж рад.
[01:16:07.980 --> 01:16:12.980]  У меня привычка, у меня у строки длина, ничего не надо с собой проделать.
[01:16:12.980 --> 01:16:16.980]  Да, можете написать size, если хотите.
[01:16:16.980 --> 01:16:27.980]  Хотя ладно, иногда моя ретро радость была, что сложные задачи на строке, там, я и представители моего поколения решают с уфиксным деревом, а новое поколение приходит и говорит, сука, автомат наш и все.
[01:16:27.980 --> 01:16:30.980]  Нет, у нас будет возможность их сравнить на самом деле.
[01:16:30.980 --> 01:16:34.980]  Есть задачи, которые вот это решает автомат, нет?
[01:16:34.980 --> 01:16:36.980]  Возможно, есть и наоборот.
[01:16:36.980 --> 01:16:40.980]  А тут можно искать за корень?
[01:16:40.980 --> 01:16:43.980]  Делать динамический слой?
[01:16:43.980 --> 01:16:45.980]  Нет.
[01:16:45.980 --> 01:16:47.980]  Что-то придинамическое?
[01:16:47.980 --> 01:16:49.980]  Dynamic Diction Matching.
[01:16:49.980 --> 01:16:51.980]  Пасем нас.
[01:16:51.980 --> 01:16:59.980]  Ну это, короче, когда там добавляются строки, и приходят запросы, проверить, есть ли в этой строке все эти подстроки?
[01:16:59.980 --> 01:17:05.980]  В текущей строке нет, ну слушайте, если у тебя запросы по pushback строку символы проверить, если такая подстрока...
[01:17:05.980 --> 01:17:15.980]  Нет, если новые слова в словарь, нужно проверить, и приходится запрос какой-то текст, нужно проверить вхождение строк из словаря в...
[01:17:15.980 --> 01:17:18.980]  Ну каждая, сейчас.
[01:17:18.980 --> 01:17:20.980]  Каждый раз так?
[01:17:20.980 --> 01:17:27.980]  Да, вот есть вопрос новый текст, и добавляю, и он еще может удаляться.
[01:17:27.980 --> 01:17:29.980]  А, интересно.
[01:17:29.980 --> 01:17:32.980]  И что, ты думаешь, что этот суп автоматом прям легко делается?
[01:17:32.980 --> 01:17:41.980]  Ну вот, там есть такой человек, его зовут Филипп Грибов, который придумал, как это делать суп автоматом.
[01:17:41.980 --> 01:17:46.980]  Надо подумать так, автоматом и за кой.
[01:17:46.980 --> 01:17:57.980]  Там, типа, каждый раз добавлять новое слово в словарь сразу из корня, и потом сделать обход под автоматом.
[01:17:57.980 --> 01:18:00.980]  Обход под автоматом.
[01:18:00.980 --> 01:18:04.980]  Сейчас и все.
[01:18:04.980 --> 01:18:08.980]  Ну, я не знаю, нет, просто, извините, за корень это делается, извините, хэшами и мапом.
[01:18:08.980 --> 01:18:15.980]  Давайте для каждой длины слов из словаря сгонить мап хэшей, мап хэшей, все.
[01:18:15.980 --> 01:18:25.980]  И когда приходит новый символ, переверяете корень различных длин, берете хэши и влезете в мап, проверяете, есть ли они, все.
[01:18:25.980 --> 01:18:27.980]  Ну, наверное, да.
[01:18:27.980 --> 01:18:32.980]  Особенно если у него в решении есть хэши, то как бы все.
[01:18:32.980 --> 01:18:38.980]  Нет, если без хэшей, то ну окей, окей.
[01:18:38.980 --> 01:18:40.980]  Ладно, будет интеграция.
[01:18:40.980 --> 01:18:43.980]  Но для этого нам придется дожить до автомата.
[01:18:43.980 --> 01:18:46.980]  Зачем нам еще в аэро?
[01:18:46.980 --> 01:18:50.980]  Потому что у нас ферст нот лифт наш несколько раз может меняться.
[01:18:50.980 --> 01:18:54.980]  Потому что когда мы вот это сделали, ферст нот лифт перешел как бы в следующий суффикс.
[01:18:54.980 --> 01:19:00.980]  Оттуда переход здесь, и тут выясняется, что может тоже не быть, поэтому в аэро.
[01:19:00.980 --> 01:19:11.980]  И еще эта валидность, потому что он может пройти по всем, дойти до корня, понять, что из корня тоже надо сделать ребро, сделать это ребро и перейти еще куда-то и стать всем самым невалидным.
[01:19:11.980 --> 01:19:12.980]  Вот.
[01:19:12.980 --> 01:19:15.980]  Поэтому я тут себе эту валидность и пишу.
[01:19:15.980 --> 01:19:16.980]  Так вот.
[01:19:16.980 --> 01:19:17.980]  Надо.
[01:19:17.980 --> 01:19:18.980]  S.lens-1.
[01:19:18.980 --> 01:19:20.980]  Ну, здесь мы пишем.
[01:19:20.980 --> 01:19:22.980]  Inf.
[01:19:26.980 --> 01:19:28.980]  И кто у нас parent?
[01:19:31.980 --> 01:19:33.980]  Да?
[01:19:33.980 --> 01:19:35.980]  А, ну да.
[01:19:35.980 --> 01:19:38.980]  Ой, ой-ой-ой.
[01:19:38.980 --> 01:19:41.980]  А ведь, смотрите, мы же еще кое-что забыли.
[01:19:41.980 --> 01:19:44.980]  Мы же...
[01:19:44.980 --> 01:19:46.980]  Так.
[01:19:46.980 --> 01:19:48.980]  Так, погодите.
[01:19:48.980 --> 01:19:50.980]  Сейчас.
[01:19:50.980 --> 01:19:53.980]  Нет, ноль, погодите, что-то не то.
[01:19:53.980 --> 01:19:55.980]  А, хотя нет, да.
[01:19:55.980 --> 01:19:57.980]  А, ну да.
[01:19:57.980 --> 01:20:00.980]  А ведь, на самом деле, теперь заметим, что еще кое-что повернуло.
[01:20:00.980 --> 01:20:03.980]  А, ну ладно, будем считать, что у Нювы...
[01:20:03.980 --> 01:20:05.980]  Да.
[01:20:06.980 --> 01:20:09.980]  А, ну да, нет, мы будем считать, что у Нювы все корректно.
[01:20:09.980 --> 01:20:13.980]  Поэтому, то есть, когда мы тут распиливали, мы тут эти все, там, вот эти LR parent переписали, естественно.
[01:20:13.980 --> 01:20:14.980]  Угу.
[01:20:14.980 --> 01:20:16.980]  Вот.
[01:20:16.980 --> 01:20:17.980]  Так.
[01:20:17.980 --> 01:20:19.980]  Ну и что теперь?
[01:20:22.980 --> 01:20:27.980]  Ну, и нужно все остальное сливу на следующем суке поменять.
[01:20:27.980 --> 01:20:29.980]  Ну да.
[01:20:29.980 --> 01:20:32.980]  Ну, теперь, значит, будем говорить.
[01:20:33.980 --> 01:20:35.980]  Ну вот.
[01:20:35.980 --> 01:20:37.980]  А теперь, в общем, становится очень интересно.
[01:20:37.980 --> 01:20:40.980]  Потому что дальше начинается магия.
[01:20:40.980 --> 01:20:43.980]  То есть, только не фигуничай головой сколько-нибудь.
[01:20:43.980 --> 01:20:45.980]  Где...
[01:20:45.980 --> 01:20:46.980]  Да?
[01:20:46.980 --> 01:20:47.980]  Ну, даже помочь сейчас.
[01:20:47.980 --> 01:20:49.980]  Безобразие.
[01:20:53.980 --> 01:20:54.980]  Хорошо.
[01:20:54.980 --> 01:20:59.980]  И тогда, значит, теперь эта позиция...
[01:20:59.980 --> 01:21:00.980]  Ну ладно.
[01:21:00.980 --> 01:21:05.980]  Она, на самом деле, ссылаться на нее бесполезно, потому что эта позиция потеряла свой актуальный смысл, на самом деле.
[01:21:05.980 --> 01:21:06.980]  Да?
[01:21:06.980 --> 01:21:09.980]  Потому что в этом месте мы создали знание.
[01:21:09.980 --> 01:21:13.980]  Поэтому, получается, оно равно...
[01:21:13.980 --> 01:21:18.980]  Я такую магическую функцию напишу немножко.
[01:21:18.980 --> 01:21:20.980]  И она может быть тоже...
[01:21:20.980 --> 01:21:22.980]  Значит...
[01:21:22.980 --> 01:21:25.980]  Erase.
[01:21:25.980 --> 01:21:28.980]  First Symbol.
[01:21:30.980 --> 01:21:35.980]  А в сколько я внезапно напишу new V?
[01:21:38.980 --> 01:21:40.980]  Ну понятно, что имеется в виду.
[01:21:40.980 --> 01:21:43.980]  Потому что, да, я, типа, беру путевую метку new V.
[01:21:43.980 --> 01:21:46.980]  Ну понятие путевая метка сохраняется, да?
[01:21:46.980 --> 01:21:47.980]  И хочу взять...
[01:21:47.980 --> 01:21:54.980]  Так, если у меня есть строчка, я хочу взять строчку, отпилить первый символ и сказать так, а какова позиция этой строчки у нас в более.
[01:21:54.980 --> 01:21:56.980]  И я знаю, что она есть.
[01:21:59.980 --> 01:22:04.980]  Так.
[01:22:04.980 --> 01:22:07.980]  Ну и в конце.
[01:22:07.980 --> 01:22:13.980]  Если после этого, значит, эта позиция еще-еще валидна.
[01:22:13.980 --> 01:22:18.980]  Если этот фест внутри валиден.
[01:22:18.980 --> 01:22:24.980]  Так, что мы делаем?
[01:22:30.980 --> 01:22:36.980]  First Not Leave равно...
[01:22:36.980 --> 01:22:38.980]  Ну, здесь привязано.
[01:22:38.980 --> 01:22:41.980]  Go.
[01:22:59.980 --> 01:23:27.980]  Там еще, возможно, добавить новый ребро просто из корни не нужно?
[01:23:27.980 --> 01:23:31.980]  Нет.
[01:23:31.980 --> 01:23:32.980]  Нет, зачем?
[01:23:32.980 --> 01:23:33.980]  Добавлять не надо?
[01:23:33.980 --> 01:23:34.980]  А, я что-то забыл.
[01:23:34.980 --> 01:23:35.980]  Нет, это еще не все.
[01:23:35.980 --> 01:23:36.980]  L, Z.
[01:23:36.980 --> 01:23:37.980]  Потому что, может быть, так, что вот...
[01:23:37.980 --> 01:23:38.980]  Нет, почему?
[01:23:38.980 --> 01:23:42.980]  Может, могло так случиться, что new V оказалась прям корень.
[01:23:42.980 --> 01:23:46.980]  Из него мы добавили новое ребро и из него тоже перескочили.
[01:23:46.980 --> 01:23:47.980]  Удалили первый символ.
[01:23:47.980 --> 01:23:53.980]  Но ровно в этом месте как раз First Not Leave перестал быть валидным.
[01:23:53.980 --> 01:23:54.980]  Поэтому я должен...
[01:23:54.980 --> 01:23:57.980]  Если он перестал быть валидным, то есть мы даже из корня, то получается, что...
[01:23:57.980 --> 01:23:59.980]  Ну, скорее всего, это произошло...
[01:23:59.980 --> 01:24:00.980]  Ну, я утверждаю так.
[01:24:00.980 --> 01:24:09.980]  Невалидным First Not Leave станет тогда и только тогда, когда добавленный символ раньше в строте не встречался.
[01:24:09.980 --> 01:24:15.980]  В этом случае мы просто напишем, что First Not Leave будет тупо смотреть в корень.
[01:24:15.980 --> 01:24:18.980]  Ну, давайте так и напишем.
[01:24:18.980 --> 01:24:20.980]  First Not Leave.
[01:24:21.980 --> 01:24:23.980]  Ну да, ровно.
[01:24:23.980 --> 01:24:25.980]  Соответственно, напишем 0.
[01:24:25.980 --> 01:24:27.980]  0-0.
[01:24:27.980 --> 01:24:28.980]  У нас же эта парочка.
[01:24:28.980 --> 01:24:30.980]  Ах, да.
[01:24:34.980 --> 01:24:37.980]  Значит, тут напишем 0.
[01:24:37.980 --> 01:24:41.980]  И расстояние до него тоже, естественно.
[01:24:41.980 --> 01:24:45.980]  А, по-хорошему, и V тут тогда надо написать.
[01:24:46.980 --> 01:24:48.980]  О!
[01:24:55.980 --> 01:24:57.980]  Красота!
[01:24:57.980 --> 01:25:03.980]  Ну, в общем, по модулю магии, зашитой в ArraySpecSymbol...
[01:25:03.980 --> 01:25:09.980]  На самом деле, полгарита мукамина на этом заканчивается.
[01:25:09.980 --> 01:25:17.980]  В чем-то достаточно легко убедиться, что, да, если магия работает от единицы хотя бы учетно, то, в принципе...
[01:25:17.980 --> 01:25:24.980]  В общем, по алгоритму работает за линию, и что-то пишется даже не так страшно, как вообще могу показать.
[01:25:24.980 --> 01:25:29.980]  Ну, нам еще надо реализовать isValid, canGo, buildNode, init и так далее.
[01:25:29.980 --> 01:25:31.980]  Да, да.
[01:25:31.980 --> 01:25:32.980]  Да, надо написать.
[01:25:32.980 --> 01:25:35.980]  Ну, isValid, наверное, реализовать просто.
[01:25:35.980 --> 01:25:42.980]  Ну, что по большому счету, ArraySpecSymbol, там будет написано следующее, что если эта позиция корень, значит, возвращаем минус один, минус один.
[01:25:42.980 --> 01:25:48.980]  А в противном случае начинаем делать шамань, шамань, черный магию.
[01:25:48.980 --> 01:25:51.980]  Понятно, да?
[01:25:51.980 --> 01:25:55.980]  А что же это за черная магия?
[01:25:55.980 --> 01:25:58.980]  Ну, кажется, нам пришло время...
[01:25:58.980 --> 01:26:00.980]  Так, вот.
[01:26:00.980 --> 01:26:02.980]  Чего нам пришло время?
[01:26:02.980 --> 01:26:05.980]  Так, переливом нам пришло время?
[01:26:05.980 --> 01:26:08.980]  Ну, полтора часа прошло.
[01:26:08.980 --> 01:26:11.980]  Ну, давайте не выступим.
[01:26:11.980 --> 01:26:14.980]  Итак, финалочка.
[01:26:14.980 --> 01:26:18.980]  Что будет заключаться в нашей финалочке?
[01:26:18.980 --> 01:26:22.980]  Вот, финалочка будет заключаться в том...
[01:26:22.980 --> 01:26:27.980]  Вот, финалочка будет заключаться в том...
[01:26:27.980 --> 01:26:33.980]  Финалочка будет заключаться в том, что нам нужно научиться уметь телепортироваться.
[01:26:33.980 --> 01:26:34.980]  В чем?
[01:26:34.980 --> 01:26:42.980]  Обратите внимание, значит, обратите внимание, что телепортироваться нужно только из вершины.
[01:26:42.980 --> 01:26:48.980]  Нам нужно говорить, жила-была вершина, у нее есть какая-то путевая метка.
[01:26:48.980 --> 01:26:54.980]  Ну, запятим, что приятно, кстати, что если мы создали вершину, то путевая метка ее уже не изменится никогда.
[01:26:54.980 --> 01:26:58.980]  То есть конкретный путь до нее в лице последовательности вершин может поменяться.
[01:26:58.980 --> 01:27:02.980]  Потому что там любое ребро может быть распилино, но путевая метка не поменяется никак.
[01:27:02.980 --> 01:27:04.980]  Сросты?
[01:27:04.980 --> 01:27:06.980]  Вот.
[01:27:06.980 --> 01:27:08.980]  Внимание, вопрос.
[01:27:08.980 --> 01:27:11.980]  Я так долго думал.
[01:27:11.980 --> 01:27:12.980]  Вот.
[01:27:12.980 --> 01:27:13.980]  Теперь внимание, вопрос.
[01:27:13.980 --> 01:27:18.980]  Теперь надо вот взять, научиться у этой путевой метки отпиливать первый символ и понимать, куда ходить.
[01:27:22.980 --> 01:27:26.980]  Для этого, так, какой мы еще контрастный маркер не использовали.
[01:27:30.980 --> 01:27:34.980]  Так, ну ладно, пришло время, видимо, зеленого маркера.
[01:27:34.980 --> 01:27:39.980]  Там придется ввести понятие суффиксная ссылка.
[01:27:43.980 --> 01:27:48.980]  Суффиксная ссылка.
[01:27:48.980 --> 01:27:51.980]  Суффиксная ссылка.
[01:27:51.980 --> 01:27:53.980]  Вот.
[01:27:53.980 --> 01:27:57.980]  Ну, хорошему надо было ее «суфф» называть, но ладно же.
[01:27:57.980 --> 01:28:01.980]  Пишем полностью, так пишем полностью.
[01:28:01.980 --> 01:28:04.980]  То есть действительно.
[01:28:04.980 --> 01:28:06.980]  Значит, определение.
[01:28:06.980 --> 01:28:07.980]  Давайте оправим, оправим, оправим.
[01:28:07.980 --> 01:28:11.980]  Формальное определение.
[01:28:11.980 --> 01:28:15.980]  Значит, суффикс линк от V.
[01:28:15.980 --> 01:28:17.980]  От вершины V.
[01:28:17.980 --> 01:28:19.980]  Где V.
[01:28:19.980 --> 01:28:22.980]  Значит, V неравно к ворту.
[01:28:22.980 --> 01:28:26.980]  Это.
[01:28:26.980 --> 01:28:30.980]  Значит, такое вершине U.
[01:28:30.980 --> 01:28:32.980]  Давайте вот в синеньком.
[01:28:32.980 --> 01:28:33.980]  Давайте, да, будем рисовать.
[01:28:33.980 --> 01:28:39.980]  То есть V и U это вершины, да?
[01:28:39.980 --> 01:28:43.980]  В неравно к ворту.
[01:28:43.980 --> 01:28:46.980]  Что?
[01:28:46.980 --> 01:28:52.980]  Путевая метка U в суффикс.
[01:28:52.980 --> 01:28:56.980]  Путевой метки от V.
[01:28:56.980 --> 01:29:00.980]  Причем.
[01:29:00.980 --> 01:29:09.980]  Длина U равно длина V.
[01:29:09.980 --> 01:29:15.980]  Понятен принцип, да?
[01:29:15.980 --> 01:29:18.980]  Понятен принцип, да, понятен принцип, да.
[01:29:18.980 --> 01:29:30.980]  Такая радость получается.
[01:29:30.980 --> 01:29:33.980]  И сразу возникает вопрос.
[01:29:33.980 --> 01:29:42.980]  А всегда ли такая суффиксная ссылка существует?
[01:29:42.980 --> 01:29:47.980]  Возможно, я немножко поторопился.
[01:29:47.980 --> 01:29:49.980]  Поторопился вот в каком-то моменте.
[01:29:49.980 --> 01:29:53.980]  По-хорошему, это определение, наверное, не вызывало бы проблем.
[01:29:53.980 --> 01:29:56.980]  Если бы я сказал, что это не вершина, а...
[01:29:56.980 --> 01:29:59.980]  Вот нет, не торопитесь переписывать определение, зачеркиваю.
[01:29:59.980 --> 01:30:03.980]  Вот если бы я сказал, что это позиция.
[01:30:03.980 --> 01:30:11.980]  Да, мы точно знаем, что если такая строка есть, то строка без первого символа тоже у нас более явной есть где-то, правда?
[01:30:11.980 --> 01:30:16.980]  Но кто сказал, что это именно вершина, а не позиция?
[01:30:16.980 --> 01:30:18.980]  Ну, вроде понятно.
[01:30:18.980 --> 01:30:24.980]  Ну, она в какой-то момент была последней добавленной, значит, был такой суффикс.
[01:30:24.980 --> 01:30:25.980]  Нет.
[01:30:25.980 --> 01:30:30.980]  Ну, просто если у нас учекущая в этой вершине, значит, она либо... ну, понятно.
[01:30:30.980 --> 01:30:35.980]  Либо в ней происходит развилка.
[01:30:35.980 --> 01:30:41.980]  Но тогда, если там развилка, то без первого символа тоже развилка обязательно будет в этом месте.
[01:30:41.980 --> 01:30:45.980]  А вдруг, если вы говорите о листах, а ведь может так...
[01:30:45.980 --> 01:30:53.980]  Ведь на самом деле может так получиться, что на самом деле, во-первых, у листа это не лист, то есть просто у листа это не лист, но развилки, допустим, нет.
[01:30:53.980 --> 01:30:56.980]  Не может так получиться. Вот, например, у строки ААА.
[01:30:56.980 --> 01:30:59.980]  В смысле, что В это лист, а у... как бы...
[01:30:59.980 --> 01:31:01.980]  А его суффиксная ссылка это не лист.
[01:31:01.980 --> 01:31:02.980]  Нет.
[01:31:02.980 --> 01:31:03.980]  Такое может быть.
[01:31:03.980 --> 01:31:04.980]  А такое может быть, да.
[01:31:04.980 --> 01:31:07.980]  Вот, смотрите, рассмотрим строку АААА.
[01:31:07.980 --> 01:31:12.980]  Тогда заметим, у него единственный лист, и суффиксная ссылка у него ведет куда-то там все в это ребро.
[01:31:15.980 --> 01:31:18.980]  Ну, тут в чем идея тогда?
[01:31:18.980 --> 01:31:24.980]  Так В это суффикс, ну, то есть у это тоже суффикс всей строки.
[01:31:24.980 --> 01:31:25.980]  Да.
[01:31:25.980 --> 01:31:28.980]  Вот, и если мы суффиксный дерево достроили до конца, то это будет вершина.
[01:31:28.980 --> 01:31:30.980]  Нет, ну, я кто сказал, что В суффикс?
[01:31:30.980 --> 01:31:33.980]  В это вершина.
[01:31:34.980 --> 01:31:36.980]  Никто не знал, что она прямо сейчас.
[01:31:36.980 --> 01:31:39.980]  Когда-то она, конечно, с суффиксом может...
[01:31:39.980 --> 01:31:41.980]  Кстати, может, она и не обязана.
[01:31:49.980 --> 01:31:50.980]  Есть проблема.
[01:31:50.980 --> 01:31:54.980]  Ну, если как раз В лист, то В суффикс.
[01:31:54.980 --> 01:31:56.980]  Да.
[01:31:56.980 --> 01:32:00.980]  Но самое прикольное... да.
[01:32:00.980 --> 01:32:04.980]  То есть главное, когда мы его создаем...
[01:32:04.980 --> 01:32:06.980]  То есть надо... то есть тут очень интересно.
[01:32:06.980 --> 01:32:12.980]  Ведь когда мы создаем вот этот последний созданный лист, то суффиксная ссылка у него ведет фактически в ферстноутлиф.
[01:32:12.980 --> 01:32:13.980]  Правда?
[01:32:13.980 --> 01:32:17.980]  И получается, что эта суффиксная ссылка у этого листа будет постоянно меняться.
[01:32:17.980 --> 01:32:19.980]  Потому что этот ферстноутлиф будет сдвигаться, сдвигаться, сдвигаться.
[01:32:19.980 --> 01:32:27.980]  Меняться до тех пор, пока этот ферстноутлиф наконец не упадет, соответственно, в следующий лист.
[01:32:28.980 --> 01:32:32.980]  То есть придется, получается, еще как-то под шаманью.
[01:32:32.980 --> 01:32:36.980]  Поэтому мы поступим следующим образом.
[01:32:36.980 --> 01:32:42.980]  Мы будем говорить, что В не только не корень, но и не лист.
[01:32:42.980 --> 01:32:48.980]  Ведь действительно заметим, что нам по большому счету эта черная магия для листов не нужна.
[01:32:48.980 --> 01:32:51.980]  Потому что наши ферстноутлифы по листам не скачут.
[01:32:51.980 --> 01:32:53.980]  Понимаете, да?
[01:32:54.980 --> 01:32:59.980]  В не лист.
[01:32:59.980 --> 01:33:07.980]  А теперь представим себе, что вершина В, то есть итак, вершина В это вершина, но не лист.
[01:33:07.980 --> 01:33:11.980]  Видно ли, что ее суффиксная ссылка это обязательно вершина.
[01:33:11.980 --> 01:33:25.980]  Ну, если это не лист, то да.
[01:33:25.980 --> 01:33:27.980]  Почему?
[01:33:27.980 --> 01:33:30.980]  Ну, потому что раз в этой вершине, значит, на ней происходит развилка.
[01:33:30.980 --> 01:33:31.980]  Да.
[01:33:31.980 --> 01:33:38.980]  А тогда такая же развилка будет происходить и у вершины без первого символа.
[01:33:38.980 --> 01:33:39.980]  Ну да, тоже да.
[01:33:39.980 --> 01:33:40.980]  Что значит развилка?
[01:33:40.980 --> 01:33:44.980]  Это означает, что мало того, что у этой строки как минимум два обсуждения,
[01:33:44.980 --> 01:33:51.980]  значит, у нее два обсуждения, справа от которых находятся два разных символа, правда?
[01:33:51.980 --> 01:33:57.980]  Кстати, если развилка тройная, это значит, что таких символов три.
[01:33:57.980 --> 01:34:00.980]  Это понятно, о чем я говорю?
[01:34:00.980 --> 01:34:02.980]  Так сказал бы Мартира Сяна, это называется.
[01:34:02.980 --> 01:34:06.980]  Замечаете, о чем я пою, да?
[01:34:06.980 --> 01:34:08.980]  Так вот.
[01:34:08.980 --> 01:34:13.980]  А тогда если у этой строки ее можно как под строку продолжить хотя бы двумя способами разными,
[01:34:13.980 --> 01:34:18.980]  то тогда если от нее отпилить один символ, то как минимум этими же двумя способами ее тоже можно продлить,
[01:34:18.980 --> 01:34:19.980]  а то и больше способов, правда?
[01:34:19.980 --> 01:34:24.980]  Может так случиться, что там еще дополнительные способы появятся.
[01:34:24.980 --> 01:34:27.980]  Поэтому да.
[01:34:27.980 --> 01:34:31.980]  Поэтому получается мистическая синяя теорема.
[01:34:31.980 --> 01:34:34.980]  Вот вершивение.
[01:34:34.980 --> 01:34:42.980]  Да, суффикс линк от V всегда вершина.
[01:34:48.980 --> 01:34:54.980]  По крайней мере, в полностью составленном дереве это точно вершина.
[01:34:54.980 --> 01:35:04.980]  Это даже при не полностью составленном это тоже вершина.
[01:35:04.980 --> 01:35:08.980]  Поэтому это у нас именно Инт.
[01:35:08.980 --> 01:35:14.980]  Я более того этот Инт даже вот теперь синеньким помечу в знак того, что это вершина.
[01:35:14.980 --> 01:35:19.980]  На самом деле, да, тут надо.
[01:35:25.980 --> 01:35:30.980]  Мистическая теорема.
[01:35:30.980 --> 01:35:33.980]  Правда, есть одна.
[01:35:33.980 --> 01:35:40.980]  То есть в идеале, по идее, так сказать.
[01:35:40.980 --> 01:35:49.980]  То есть по идее можно на самом деле, вместо этой функции eraseFirstSymbol,
[01:35:49.980 --> 01:35:53.980]  на самом деле можно теперь написать функцию.
[01:35:56.980 --> 01:35:58.980]  Какую?
[01:36:00.980 --> 01:36:03.980]  Ну, ту самую.
[01:36:05.980 --> 01:36:09.980]  Суффикс линк от new.
[01:36:09.980 --> 01:36:13.980]  Но у этой штуки есть одна маленькая подземь.
[01:36:15.980 --> 01:36:22.980]  Дело в том, что этой суффиксной ссылки может в некотором плане не существовать еще.
[01:36:25.980 --> 01:36:29.980]  Пример вот такой, вот, например, из последнего.
[01:36:29.980 --> 01:36:33.980]  Вот, например, когда мы, вот, помните, мы здесь строили вершину, да?
[01:36:33.980 --> 01:36:37.980]  Вот мы построили здесь вершину и скакнули из нее по суффиксной ссылке, да?
[01:36:39.980 --> 01:36:41.980]  Мы скакнули вот сюда.
[01:36:41.980 --> 01:36:45.980]  Да, суффиксная ссылка ведет, должна вести очевидно в эту вершину.
[01:36:45.980 --> 01:36:47.980]  Но маленькая проблема.
[01:36:47.980 --> 01:36:49.980]  В тот момент, когда мы ее строили, ее еще не существовало.
[01:36:49.980 --> 01:36:51.980]  Помните, тут чистое ребро было.
[01:36:51.980 --> 01:36:53.980]  Помните?
[01:36:55.980 --> 01:36:57.980]  Или я не знаю.
[01:36:58.980 --> 01:37:01.980]  Или я могу другой пример нарисовать.
[01:37:01.980 --> 01:37:07.980]  Давайте представим себе, что у нас есть какая-нибудь строка там...
[01:37:11.980 --> 01:37:15.980]  Ну, какая-нибудь вот A-A-A-A-A-A-A-B.
[01:37:15.980 --> 01:37:17.980]  Смотрите.
[01:37:17.980 --> 01:37:21.980]  Вот давайте где-нибудь, вот тут я ее порисую отдельно.
[01:37:21.980 --> 01:37:25.980]  Вот как у нас будет все это выглядеть для A-A-A-A-A-B?
[01:37:25.980 --> 01:37:31.980]  Вот как у нас будет все это выглядеть для A-A-A-A-A-A-A-A-A-A-A-A-A-A-A-A-A-A-A-A-A-A-A-A-A-A-A-A?
[01:37:33.980 --> 01:37:35.980]  Ну что у нас будет происходить?
[01:37:35.980 --> 01:37:38.980]  У нас тут будет вот это вот мысль о A-A-A-A-A-A-A-A.
[01:37:38.980 --> 01:37:41.980]  В реальности будет только одно ребро вот это вот, да?
[01:37:41.980 --> 01:37:48.980]  На там 0 плюс бесконечность по букле A из корня.
[01:37:49.980 --> 01:37:51.980]  И, в общем-то, все.
[01:37:51.980 --> 01:37:54.980]  Да, это бесконечность, это не 8.
[01:37:54.980 --> 01:38:03.980]  Вот. И тот неожиданно выясняет, ну вот. И наш этот рыженький указатель, он указывает куда? Правильно, вот сюда.
[01:38:03.980 --> 01:38:08.980]  То есть это первый суффикс, который заканчивается не в листе, он заканчивается где-то здесь, правда?
[01:38:08.980 --> 01:38:13.980]  Кстати, это тот самый случай, когда он отчаянно пытается догнать лист, но никогда его не догоняет.
[01:38:13.980 --> 01:38:19.980]  Ведь обратите внимание, если я добавлю сюда букву А, то это рыженький соответственный листочек.
[01:38:19.980 --> 01:38:23.980]  То есть он как бы вроде переместится сюда, и казалось бы он пришел в лист, но нет, это не лист.
[01:38:23.980 --> 01:38:29.980]  Потому что за секунду до этого тут добавилась еще вот эта буква А, без бесконечности. Удобно, правильно?
[01:38:29.980 --> 01:38:38.980]  Вот. А теперь неожиданно пришла буква Б. Что делать?
[01:38:42.980 --> 01:38:49.980]  Тогда получается следующее. Да, ну как-то ж алгоритм говорит, так, ну поехали, можно отсюда пройти по букве Б? Нельзя.
[01:38:49.980 --> 01:38:58.980]  Так, хорошо, говорим мы. Значит так, это у нас буква Б, это у нас 0, 1, 2, 3, 4, 5, 6, 7, 8, да?
[01:38:58.980 --> 01:39:05.980]  Да, 8. То есть получается пишем тут переход по букве А, то есть создаем новую вершину, переход по букве А от...
[01:39:05.980 --> 01:39:15.980]  А, теперь интересно. 8 плюс бесконечность. Вот. Это 8, это плюс бесконечность.
[01:39:15.980 --> 01:39:19.980]  Не перепутайте. Вот.
[01:39:23.980 --> 01:39:31.980]  И что-то еще. И переход по букве Б, а ну здесь тоже. Нет, так не 8 плюс бесконечность.
[01:39:31.980 --> 01:39:43.980]  8 плюс бесконечность это буква Б у нас. А, тут слишком много, да.
[01:39:43.980 --> 01:39:50.980]  Да, тут 8 плюс бесконечность. А, а тут надо 9 плюс бесконечность. Вот, правильно.
[01:39:50.980 --> 01:39:55.980]  Тут переход по букве Б, 9 плюс бесконечность.
[01:39:55.980 --> 01:40:00.980]  Ну, а теперь высказать вопрос. Теперь надо скакнуть по суффиксной ссылке, да?
[01:40:00.980 --> 01:40:05.980]  Только суффиксная ссылка должна нас отправить вот в эту позицию.
[01:40:05.980 --> 01:40:14.980]  А вершины тут нет. То есть мы это какие-то... То есть мы не должны не просто каким-то образом вычислить,
[01:40:14.980 --> 01:40:23.980]  но еще и сказать, что как бы это может быть позиция, хотя казалось бы, это должна быть вершина.
[01:40:23.980 --> 01:40:27.980]  Конечно, нам разрешить это казалось по противоречию.
[01:40:31.980 --> 01:40:37.980]  Ну, это значит, что текущая наша вершина до добавления этого символа тоже была не вершиной?
[01:40:37.980 --> 01:40:41.980]  Ну, на самом деле, ну вот. Нет, ну да.
[01:40:41.980 --> 01:40:45.980]  Но на самом деле просто идея такая. Если вы попытаетесь скакнуть по суффиксной ссылке,
[01:40:45.980 --> 01:40:50.980]  ну, вы в момент поставления этой вершины, возможно, ее даже вычисляете, правда?
[01:40:50.980 --> 01:40:55.980]  Возможно. Может и нет. То есть, возможно, вы ее вычисляете.
[01:40:55.980 --> 01:41:03.980]  Выясняете, что... И тогда как следующее. Если тут вершины нет, то вы вынуждены видеть, что прямо сейчас она тут появится.
[01:41:03.980 --> 01:41:09.980]  Ну, потому что, во-первых, когда вы закончите построение, там эта вершина должна тут быть,
[01:41:09.980 --> 01:41:14.980]  потому что суффиксная ссылка в идеальном дереве все-таки только из вершины в вершину идет, правда?
[01:41:14.980 --> 01:41:21.980]  Значит, по-видимому, получается, вы при поиске прямо сейчас можете эту вершину хоть там построить.
[01:41:21.980 --> 01:41:24.980]  Да, пока у нее будет только один ребенок, но ничего страшного.
[01:41:24.980 --> 01:41:28.980]  Семь, восемь. Тут будет семь.
[01:41:32.980 --> 01:41:36.980]  Соответственно. Вот. И тогда после этого сюда и перескакивать.
[01:41:36.980 --> 01:41:40.980]  Ну, а потом перескакивает отсюда, когда понадобится, ну и так далее.
[01:41:40.980 --> 01:41:42.980]  Вот. А я тебе принц.
[01:41:42.980 --> 01:41:51.980]  Вообще, у нас стало, что дерево для этой ссылки, когда еще В не было, должно было быть дольше.
[01:41:51.980 --> 01:41:55.980]  Должно было быть, но дело в том, что отсюда-то вы тоже потом, когда построитесь, как йотип,
[01:41:55.980 --> 01:42:00.980]  попытаетесь по суффиксной ссылке, вам придется еще вершину создать потом, еще здесь, потом здесь.
[01:42:00.980 --> 01:42:02.980]  А здесь вершины не были?
[01:42:02.980 --> 01:42:08.980]  Пока еще нет. До буквы В их не было. Тут было одно либро вообще.
[01:42:08.980 --> 01:42:10.980]  Нет, ну реально. Как выглядит суффиксная ссылка?
[01:42:10.980 --> 01:42:14.980]  То есть как выглядит вообще дерево на строку а-а-а-а?
[01:42:16.980 --> 01:42:18.980]  Вот магия. Обратите внимание.
[01:42:18.980 --> 01:42:22.980]  Оно выглядит как вообще один несчастный либро.
[01:42:22.980 --> 01:42:24.980]  А-а-а-а.
[01:42:32.980 --> 01:42:34.980]  А, что там?
[01:42:36.980 --> 01:42:38.980]  Магия.
[01:42:38.980 --> 01:42:43.980]  Вот, а когда появится буква В, тут все эти вершины, как на лифте начнут подыматься.
[01:42:43.980 --> 01:42:48.980]  Да, да, да, да, да, именно. Ура, ура, ура.
[01:42:48.980 --> 01:42:50.980]  Вот, в чем рад.
[01:42:51.980 --> 01:42:53.980]  Так, что у нас в чем?
[01:42:55.980 --> 01:42:58.980]  То есть поэтому тут и начнется вот это, потом вот это, потом вот это, потом вот это.
[01:42:58.980 --> 01:43:00.980]  Еще там суффиксные ссылки придется дощить.
[01:43:02.980 --> 01:43:05.980]  Это мы будем учитывать, когда вот у меня функция суффикс-лиг.
[01:43:05.980 --> 01:43:12.980]  Поэтому я буду для удобства делать так, чтоб тут в излишнюю рекурсию не вдаваться, я буду делать так.
[01:43:12.980 --> 01:43:14.980]  Посмотрите, я тут создаю новые вершины.
[01:43:15.980 --> 01:43:19.980]  Везде, где я их буду создавать, я буду писать минус один.
[01:43:19.980 --> 01:43:23.980]  Знак того, что я эту суффиксную ссылку пока не знаю.
[01:43:23.980 --> 01:43:27.980]  И здесь соответственно еще минус один напишу.
[01:43:27.980 --> 01:43:31.980]  То есть, ну то есть, смотрите, ну здесь ладно.
[01:43:31.980 --> 01:43:36.980]  Причем это лист, поэтому для нее суффиксная ссылка в общем-то никогда существовать и не будет.
[01:43:36.980 --> 01:43:37.980]  Понятно?
[01:43:39.980 --> 01:43:40.980]  Вот.
[01:43:43.980 --> 01:43:46.980]  Поэтому, а теперь остается только написать магию.
[01:43:46.980 --> 01:43:51.980]  Как же этот суффиксный, как бы этот суффиксный ссылк мы тут будем делать?
[01:43:52.980 --> 01:43:54.980]  Так, давайте-ка я сделаю вот так.
[01:43:54.980 --> 01:43:56.980]  Сейчас я вот это вот сотру.
[01:43:56.980 --> 01:43:58.980]  Не пугайтесь.
[01:43:58.980 --> 01:44:00.980]  И напишу суффиксный линк.
[01:44:02.980 --> 01:44:03.980]  Вот здесь.
[01:44:06.980 --> 01:44:08.980]  Я просто это сдвинул.
[01:44:08.980 --> 01:44:12.980]  Потому что мне все-таки очень хочется все еще ход уместить на этой доске.
[01:44:12.980 --> 01:44:15.980]  И мне кажется, мне это сейчас может удастся.
[01:44:19.980 --> 01:44:20.980]  Сейчас вот это я уберу.
[01:44:20.980 --> 01:44:21.980]  Что ж там?
[01:44:21.980 --> 01:44:22.980]  Ссылка поясни.
[01:44:25.980 --> 01:44:26.980]  Ой, а я говорили, да?
[01:44:26.980 --> 01:44:27.980]  От нее.
[01:44:27.980 --> 01:44:29.980]  Да-да-да, мы что-то ее выписали, да-да-да.
[01:44:29.980 --> 01:44:32.980]  То-то я думал, что-то слишком нелинно было, короче, да.
[01:44:33.980 --> 01:44:34.980]  Конечно.
[01:44:38.980 --> 01:44:40.980]  Значит, смотрите, как мы это будем делать.
[01:44:42.980 --> 01:44:43.980]  Вот.
[01:44:44.980 --> 01:44:45.980]  Вот.
[01:44:46.980 --> 01:44:48.980]  Значит, смотрите, как мы это будем делать.
[01:44:50.980 --> 01:44:54.980]  Ну, функцию buildNodeEvNit мы, значит, чуть позже здесь делаем.
[01:44:55.980 --> 01:44:57.980]  А пока суффиксную ссылку я...
[01:44:57.980 --> 01:45:01.980]  То есть они тут будут немножко взаимозависимые.
[01:45:01.980 --> 01:45:02.980]  Значит, поехали.
[01:45:04.980 --> 01:45:05.980]  Итак, поехали.
[01:45:05.980 --> 01:45:08.980]  Int, суффикс, линк.
[01:45:12.980 --> 01:45:13.980]  Вот.
[01:45:14.980 --> 01:45:15.980]  Вершина.
[01:45:16.980 --> 01:45:18.980]  Вот я в какой-то вершине хочу найти суффиксную ссылку.
[01:45:19.980 --> 01:45:23.980]  Ну, и здесь я буду делать немножко в стиле ленивой динамики.
[01:45:24.980 --> 01:45:27.980]  То есть if там, допустим...
[01:45:31.980 --> 01:45:33.980]  Айей, не тем цветом пришел.
[01:45:33.980 --> 01:45:34.980]  Айей, не тем цветом пришел.
[01:45:36.980 --> 01:45:40.980]  Nodes от v.
[01:45:43.980 --> 01:45:45.980]  Суффикс, линк.
[01:45:48.980 --> 01:45:50.980]  Не равно.
[01:45:52.980 --> 01:45:54.980]  Минус один.
[01:45:55.980 --> 01:45:57.980]  То ее же и веркут.
[01:45:57.980 --> 01:45:58.980]  Return.
[01:45:58.980 --> 01:46:04.980]  Nodes от v.
[01:46:08.980 --> 01:46:10.980]  Значит, суффикс, линк.
[01:46:17.980 --> 01:46:18.980]  Вот.
[01:46:20.980 --> 01:46:22.980]  Что мы будем делать дальше?
[01:46:29.980 --> 01:46:31.980]  Ну, дальше теперь тоже давайте простые вещи.
[01:46:37.980 --> 01:46:39.980]  О, кстати, интересный факт.
[01:46:39.980 --> 01:46:42.980]  Когда мы тут делаем суффикс, линк, обратите внимание.
[01:46:42.980 --> 01:46:45.980]  Мы позиции пытаемся присвоить вершину, да?
[01:46:48.980 --> 01:46:52.980]  Значит, до этого раз придется нам сделать следующее.
[01:46:52.980 --> 01:46:55.980]  То есть вершины суффикс, линк, и тут будет ноль.
[01:46:59.980 --> 01:47:00.980]  Ну, потому что...
[01:47:00.980 --> 01:47:02.980]  Ну, теперь, смотрите, как делаем так.
[01:47:02.980 --> 01:47:05.980]  Мы только на первом шаге фестнут-криф реально можем быть не вершиной.
[01:47:05.980 --> 01:47:08.980]  Потому что теперь, когда мы скачем по суффиксной ссылке,
[01:47:08.980 --> 01:47:11.980]  то есть уже процесс суффиксной ссылки будет говорить, что там должна...
[01:47:11.980 --> 01:47:15.980]  То есть если там не вершина, значит мы ее прямо сейчас там заведем.
[01:47:18.980 --> 01:47:21.980]  Это вот у нас где-то в конце будет. Понятно, да?
[01:47:22.980 --> 01:47:23.980]  Угу.
[01:47:25.980 --> 01:47:27.980]  Расстояние до этой вершины.
[01:47:28.980 --> 01:47:29.980]  Более.
[01:47:29.980 --> 01:47:31.980]  Ну, в нежатом, да.
[01:47:35.980 --> 01:47:36.980]  Ага, так вот.
[01:47:36.980 --> 01:47:38.980]  В чем этот момент?
[01:47:38.980 --> 01:47:40.980]  У нас получается build note of need.
[01:47:40.980 --> 01:47:43.980]  Вообще применится не более чем один раз заварик.
[01:47:43.980 --> 01:47:46.980]  Потому что все остальные мы уже в них попадем по суффиксным ссылкам,
[01:47:46.980 --> 01:47:48.980]  и значит они уже будут существовать.
[01:47:49.980 --> 01:47:51.980]  Ну, сейчас.
[01:47:51.980 --> 01:47:54.980]  В смысле, то, что мы будем вызывать, это build note of need и суффиксы?
[01:47:54.980 --> 01:47:56.980]  Да, у нас на самом деле, да.
[01:47:56.980 --> 01:47:58.980]  Ну, можно сказать так.
[01:47:58.980 --> 01:48:01.980]  Во-первых, мы сейчас будем в стиле линейной динамики вызывать.
[01:48:01.980 --> 01:48:04.980]  Но в реальности мы будем говорить так, что...
[01:48:04.980 --> 01:48:08.980]  Ну, по факту, да, в каждый момент времени у нас только в текущей вершине
[01:48:08.980 --> 01:48:11.980]  может быть еще не насчитана суффиксная ссылка,
[01:48:11.980 --> 01:48:14.980]  а у всех остальных она уже посчитана на самом деле.
[01:48:14.980 --> 01:48:16.980]  Ну, у нас будет так получаться.
[01:48:16.980 --> 01:48:18.980]  Как только вы создали новую вершину,
[01:48:18.980 --> 01:48:22.980]  значит из нее по суффиксной ссылке все равно придется скатнуть обязательно.
[01:48:22.980 --> 01:48:24.980]  Потому что вы только что ее создали,
[01:48:24.980 --> 01:48:27.980]  создали из нее ребро, значит придется из нее скатнуть.
[01:48:27.980 --> 01:48:29.980]  Так алгоритм.
[01:48:29.980 --> 01:48:31.980]  Да, здесь нам придется еще кое-что.
[01:48:31.980 --> 01:48:34.980]  Да, мы знаем, что суффикс линк в листы у нас не ходит.
[01:48:34.980 --> 01:48:36.980]  Поэтому мы говорим.
[01:48:36.980 --> 01:48:38.980]  Значит, если выясняется, что это корень...
[01:48:38.980 --> 01:48:40.980]  Давайте оговоримся сразу.
[01:48:40.980 --> 01:48:43.980]  Ну, видите, у нас же бывает chauffeur note of need корень.
[01:48:43.980 --> 01:48:45.980]  Поэтому мы напишем так.
[01:48:45.980 --> 01:48:48.980]  Если v равно равно нулю,
[01:48:50.980 --> 01:48:52.980]  то, соответственно,
[01:48:52.980 --> 01:48:54.980]  притурн...
[01:48:54.980 --> 01:48:56.980]  Ну, тут минус один и выращаем.
[01:48:56.980 --> 01:48:58.980]  Кстати, ровно в этом месте,
[01:48:58.980 --> 01:49:00.980]  кстати, позиция становится неважной.
[01:49:01.980 --> 01:49:03.980]  Вот, понятно, да?
[01:49:05.980 --> 01:49:08.980]  Да теперь, смотрите, какая интересная технология.
[01:49:08.980 --> 01:49:10.980]  Как нам вообще хоть как-нибудь
[01:49:10.980 --> 01:49:12.980]  найти
[01:49:12.980 --> 01:49:15.980]  действительно эту суффиксную ссылку?
[01:49:15.980 --> 01:49:17.980]  Ну, идея здесь оказывается такой.
[01:49:17.980 --> 01:49:19.980]  Вот здесь я сейчас картинку нарисую.
[01:49:19.980 --> 01:49:22.980]  Вот жил-был путь вот там до этой вершины, да?
[01:49:22.980 --> 01:49:24.980]  С какими-то ответвлениями,
[01:49:24.980 --> 01:49:27.980]  ответвлениями, ответвлениями, ответвлениями, ответвлениями.
[01:49:27.980 --> 01:49:29.980]  Вот, и мы хотим вот...
[01:49:29.980 --> 01:49:31.980]  Мы эту вершину только что создали,
[01:49:31.980 --> 01:49:33.980]  и теперь хотим из нее суффиксную ссылку найти.
[01:49:33.980 --> 01:49:35.980]  Как это сделать?
[01:49:36.980 --> 01:49:39.980]  Ну, можно, конечно, в тупую пройти по этому пути, да?
[01:49:40.980 --> 01:49:42.980]  Ну, с другой стороны, заметим...
[01:49:42.980 --> 01:49:44.980]  Ну, первое замечание.
[01:49:44.980 --> 01:49:46.980]  Во-первых, начнем с того, что
[01:49:46.980 --> 01:49:48.980]  по этому пути
[01:49:48.980 --> 01:49:50.980]  можно пытаться идти чуть быстрее.
[01:49:50.980 --> 01:49:52.980]  Ну, во-первых, ладно, допустим,
[01:49:52.980 --> 01:49:54.980]  эту строчку мы знаем, да?
[01:49:54.980 --> 01:49:56.980]  Ну, откуда-нибудь уж, я не знаю, откуда, да?
[01:49:58.980 --> 01:50:00.980]  Вот. Ну, там...
[01:50:00.980 --> 01:50:02.980]  Можете дополнительную информацию тут хранить,
[01:50:02.980 --> 01:50:04.980]  типа, что если взять целую строчку,
[01:50:04.980 --> 01:50:06.980]  откуда она взялась.
[01:50:07.980 --> 01:50:09.980]  Или нет?
[01:50:09.980 --> 01:50:11.980]  Хотя...
[01:50:11.980 --> 01:50:13.980]  Хотя, на самом деле, это даже не обязательно,
[01:50:13.980 --> 01:50:15.980]  потому что, по большому счету, если вы там будете хранить,
[01:50:15.980 --> 01:50:17.980]  скажем, каждую вершину ее глубину,
[01:50:17.980 --> 01:50:19.980]  то конец этой подстроки, в общем-то, он в этой эре будет.
[01:50:19.980 --> 01:50:22.980]  Можно прям по индукции увидеть, что это так.
[01:50:24.980 --> 01:50:26.980]  Ну, потому что в самом начале, допустим,
[01:50:26.980 --> 01:50:28.980]  если вершина так,
[01:50:28.980 --> 01:50:30.980]  то когда вы тут распиливаете ребро,
[01:50:30.980 --> 01:50:32.980]  то вы как бы копируете информацию,
[01:50:32.980 --> 01:50:34.980]  вы копируете информацию из нее, по сути.
[01:50:34.980 --> 01:50:36.980]  Вот. Там так будет получаться.
[01:50:36.980 --> 01:50:38.980]  Ну, в общем-то, детали.
[01:50:38.980 --> 01:50:40.980]  Так вот. Но можно же заметить,
[01:50:40.980 --> 01:50:42.980]  что когда вы проходите по этой строке минус один символ,
[01:50:42.980 --> 01:50:44.980]  то можно заметить, что проходить можно
[01:50:44.980 --> 01:50:46.980]  не за от длины строки, а за от количества вершин,
[01:50:46.980 --> 01:50:48.980]  которые вам на этом пути встретятся.
[01:50:48.980 --> 01:50:50.980]  Правда?
[01:50:50.980 --> 01:50:52.980]  Ну, чисто за счет того,
[01:50:52.980 --> 01:50:54.980]  что вы точно знаете, что пройти 8.
[01:50:54.980 --> 01:50:56.980]  Вам на каждом шаге не надо проверять, можно ли пройти или нет.
[01:50:58.980 --> 01:51:00.980]  Поэтому вы говорите, что так,
[01:51:00.980 --> 01:51:02.980]  если я нахожусь на ребре, мне до финиша осталось
[01:51:02.980 --> 01:51:04.980]  5 символов, а мне надо пройти 11,
[01:51:04.980 --> 01:51:06.980]  то я говорю, так, ладно, давайте я съем эти сразу 5 символов,
[01:51:06.980 --> 01:51:08.980]  там проверять точно не надо.
[01:51:08.980 --> 01:51:10.980]  Я лучше пойду в вершину и пытаюсь из нее пройти
[01:51:10.980 --> 01:51:12.980]  оставшиеся 6. Правда?
[01:51:12.980 --> 01:51:14.980]  Сейчас. Секунду. Мы пытаемся пройти путь
[01:51:14.980 --> 01:51:16.980]  без первого символа, чтобы донести свою ссылку.
[01:51:16.980 --> 01:51:18.980]  Да.
[01:51:18.980 --> 01:51:20.980]  А почему там будут такое же деление?
[01:51:20.980 --> 01:51:22.980]  Я не очень понял.
[01:51:22.980 --> 01:51:24.980]  Нет, а я не говорю, что там будет такое же деление.
[01:51:24.980 --> 01:51:26.980]  А что, что мы пытаемся пройти сразу за 5 символов, если там как-то в вершине...
[01:51:26.980 --> 01:51:28.980]  Нет, смотрите, я имею в виду следующее.
[01:51:28.980 --> 01:51:30.980]  Вот там надо попасть вот в эту какую-то позицию.
[01:51:30.980 --> 01:51:32.980]  Но я утверждаю,
[01:51:32.980 --> 01:51:34.980]  я знаю, что эта позиция существует,
[01:51:34.980 --> 01:51:36.980]  поэтому я предлагаю идти по вот этой стротине
[01:51:36.980 --> 01:51:38.980]  не за от ее длины, а за от
[01:51:38.980 --> 01:51:40.980]  сколько тут развилок реально встретится.
[01:51:42.980 --> 01:51:44.980]  А в плане, что типа...
[01:51:44.980 --> 01:51:46.980]  Ну, окей, да, понял.
[01:51:46.980 --> 01:51:48.980]  Да, между двумя развилками я уже можно пройти
[01:51:48.980 --> 01:51:50.980]  за от единицы. Потому что мы знаем,
[01:51:50.980 --> 01:51:52.980]  по кому именно сильно надо идти каждый раз,
[01:51:52.980 --> 01:51:54.980]  и знаем, что мы дойдем. Да.
[01:51:54.980 --> 01:51:56.980]  Ну да, то есть только идти в Сашамрадо,
[01:51:56.980 --> 01:51:58.980]  это на развилках решать, в какую сторону мы пойдем.
[01:51:58.980 --> 01:52:00.980]  Потому что нам ничего не надо.
[01:52:00.980 --> 01:52:02.980]  Понятие принято, да?
[01:52:02.980 --> 01:52:04.980]  Это оптимизация номер 1.
[01:52:06.980 --> 01:52:08.980]  Оптимизация номер 2 решающая.
[01:52:10.980 --> 01:52:12.980]  Если тут вот... Сатычка какая идет?
[01:52:12.980 --> 01:52:14.980]  А давайте не по всей стротине идти.
[01:52:14.980 --> 01:52:16.980]  А вот допустим, у нас тут был
[01:52:16.980 --> 01:52:18.980]  родитель, да?
[01:52:18.980 --> 01:52:20.980]  А может быть, давайте просто
[01:52:20.980 --> 01:52:22.980]  пойдем по сути,
[01:52:22.980 --> 01:52:24.980]  к ссылке родителя, а?
[01:52:24.980 --> 01:52:26.980]  И будем идти не по всей этой
[01:52:26.980 --> 01:52:28.980]  стротине, а только вот по этому вот
[01:52:28.980 --> 01:52:30.980]  несчастному кусочку.
[01:52:32.980 --> 01:52:34.980]  Ну понятно, если это
[01:52:34.980 --> 01:52:36.980]  родитель-корень, то уже
[01:52:36.980 --> 01:52:38.980]  придется идти из корня только на один с его меньше.
[01:52:40.980 --> 01:52:42.980]  Вот.
[01:52:42.980 --> 01:52:44.980]  И будем спускаться только по вот этой
[01:52:44.980 --> 01:52:46.980]  подстроке.
[01:52:46.980 --> 01:52:48.980]  Понятно, да?
[01:52:48.980 --> 01:52:50.980]  То есть выглядеть это будет примерно следующим образом.
[01:52:50.980 --> 01:52:52.980]  Я напишу
[01:52:52.980 --> 01:52:54.980]  int
[01:52:54.980 --> 01:52:56.980]  cur
[01:52:56.980 --> 01:52:58.980]  равно
[01:52:58.980 --> 01:53:00.980]  nodis от v
[01:53:00.980 --> 01:53:02.980]  точка parent.
[01:53:08.980 --> 01:53:10.980]  Значит, и еще теперь int
[01:53:10.980 --> 01:53:12.980]  l
[01:53:12.980 --> 01:53:14.980]  равно nodis от v
[01:53:16.980 --> 01:53:18.980]  точка edge
[01:53:18.980 --> 01:53:20.980]  l
[01:53:20.980 --> 01:53:22.980]  и там r.
[01:53:24.980 --> 01:53:26.980]  Вот.
[01:53:26.980 --> 01:53:28.980]  То есть я должен прийти
[01:53:28.980 --> 01:53:30.980]  по подстроке l.
[01:53:30.980 --> 01:53:32.980]  Но как бы и теперь я пишу следующее,
[01:53:32.980 --> 01:53:34.980]  что если оказалось, что
[01:53:34.980 --> 01:53:36.980]  cur не равно
[01:53:36.980 --> 01:53:38.980]  root,
[01:53:38.980 --> 01:53:40.980]  то я говорю, что cur
[01:53:40.980 --> 01:53:42.980]  равно, вот если уж совсем
[01:53:42.980 --> 01:53:44.980]  писать ленивую динамику так до конца,
[01:53:44.980 --> 01:53:46.980]  то
[01:53:46.980 --> 01:53:48.980]  пишем, что это
[01:53:48.980 --> 01:53:50.980]  c,
[01:53:50.980 --> 01:53:52.980]  c,
[01:53:52.980 --> 01:53:54.980]  то пишем, что это
[01:53:54.980 --> 01:53:56.980]  suffix link.
[01:53:56.980 --> 01:53:58.980]  То есть просто
[01:53:58.980 --> 01:54:00.980]  стактовать не отсюда, а отсутствует.
[01:54:04.980 --> 01:54:06.980]  В противном случае
[01:54:08.980 --> 01:54:10.980]  мы просто увеличиваем
[01:54:10.980 --> 01:54:12.980]  5.
[01:54:12.980 --> 01:54:14.980]  Да.
[01:54:14.980 --> 01:54:16.980]  Ну root в смысле бы.
[01:54:16.980 --> 01:54:18.980]  Нет.
[01:54:18.980 --> 01:54:20.980]  В общем, теперь
[01:54:20.980 --> 01:54:22.980]  задача
[01:54:22.980 --> 01:54:24.980]  взять вершину cur
[01:54:24.980 --> 01:54:26.980]  и спуститься из нее по подстроке l.
[01:54:26.980 --> 01:54:28.980]  Понятно, да?
[01:54:32.980 --> 01:54:34.980]  Вот.
[01:54:34.980 --> 01:54:36.980]  Значит, сделаем мы это
[01:54:36.980 --> 01:54:38.980]  следующим образом.
[01:54:38.980 --> 01:54:40.980]  Спускаться мы будем, конечно,
[01:54:40.980 --> 01:54:42.980]  по позиции. Значит, position
[01:54:44.980 --> 01:54:46.980]  pos
[01:54:46.980 --> 01:54:48.980]  от этой вершины, которая cur.
[01:54:50.980 --> 01:54:52.980]  И, соответственно,
[01:54:52.980 --> 01:54:54.980]  расстояние до нее
[01:54:54.980 --> 01:54:56.980]  ноль.
[01:54:58.980 --> 01:55:00.980]  Значит, теперь
[01:55:00.980 --> 01:55:02.980]  говорим.
[01:55:02.980 --> 01:55:04.980]  Значит, теперь делаем этот спуск.
[01:55:04.980 --> 01:55:06.980]  Значит, вот мы находимся вот в позиции.
[01:55:06.980 --> 01:55:08.980]  Позиция говорит.
[01:55:08.980 --> 01:55:10.980]  Теперь смотрите.
[01:55:10.980 --> 01:55:12.980]  While
[01:55:12.980 --> 01:55:14.980]  l меньшее.
[01:55:14.980 --> 01:55:16.980]  Дальше
[01:55:16.980 --> 01:55:18.980]  говорим следующее.
[01:55:18.980 --> 01:55:20.980]  Значит, ну тут два варианта.
[01:55:20.980 --> 01:55:22.980]  Если у нас, например, pos
[01:55:22.980 --> 01:55:24.980]  если мы находимся
[01:55:24.980 --> 01:55:26.980]  на время, то есть pos.dist
[01:55:26.980 --> 01:55:28.980]  не равен
[01:55:28.980 --> 01:55:30.980]  нулю
[01:55:30.980 --> 01:55:32.980]  dist2
[01:55:32.980 --> 01:55:34.980]  dist2
[01:55:34.980 --> 01:55:36.980]  dist2
[01:55:36.980 --> 01:55:38.980]  dis2
[01:55:38.980 --> 01:55:40.980]  dis2
[01:55:40.980 --> 01:55:42.980]  dis2
[01:55:42.980 --> 01:55:44.980]  dis2
[01:55:44.980 --> 01:55:46.980]  то мы, значит, думаем
[01:55:46.980 --> 01:55:48.980]  насколько нам идти.
[01:55:48.980 --> 01:55:50.980]  Пишем int
[01:55:50.980 --> 01:55:52.980]  len равно, соответственно
[01:55:52.980 --> 01:55:54.980]  ну тут два варианта у нас.
[01:55:54.980 --> 01:55:56.980]  То есть минимум сколько там в этом дисте осталось
[01:55:56.980 --> 01:55:58.980]  pos, dist
[01:55:58.980 --> 01:56:00.980]  e, соответственно,
[01:56:00.980 --> 01:56:02.980]  tu
[01:56:02.980 --> 01:56:04.980]  и, соответственно, r-l.
[01:56:04.980 --> 01:56:06.980]  Ну и как теперь нам пройти?
[01:56:06.980 --> 01:56:08.980]  Да очень просто.
[01:56:08.980 --> 01:56:10.980]  Ну, очевидно, просто пишем
[01:56:10.980 --> 01:56:12.980]  l
[01:56:12.980 --> 01:56:14.980]  plus равно
[01:56:14.980 --> 01:56:16.980]  len
[01:56:16.980 --> 01:56:18.980]  и, соответственно,
[01:56:18.980 --> 01:56:20.980]  pos.dist
[01:56:20.980 --> 01:56:22.980]  minus
[01:56:22.980 --> 01:56:24.980]  равно
[01:56:24.980 --> 01:56:26.980]  len.
[01:56:26.980 --> 01:56:28.980]  А что делать,
[01:56:28.980 --> 01:56:30.980]  если мы находимся
[01:56:30.980 --> 01:56:32.980]  на время,
[01:56:32.980 --> 01:56:34.980]  а что делать, если мы находимся
[01:56:34.980 --> 01:56:36.980]  в вершине?
[01:56:38.980 --> 01:56:40.980]  Ну да, можно.
[01:56:40.980 --> 01:56:42.980]  Нет. Мы точно
[01:56:42.980 --> 01:56:44.980]  чем преимущество? То есть заметим, что мы
[01:56:44.980 --> 01:56:46.980]  следующий символ, по которому мы должны пройти
[01:56:46.980 --> 01:56:48.980]  он имеет строки s, номер l,
[01:56:48.980 --> 01:56:50.980]  правда? Жестко.
[01:56:50.980 --> 01:56:52.980]  Поэтому
[01:56:52.980 --> 01:56:54.980]  на самом деле просто надо сказать, что pos
[01:56:54.980 --> 01:56:56.980]  равно просто position.
[01:56:58.980 --> 01:57:00.980]  Position от какой вершины?
[01:57:00.980 --> 01:57:02.980]  Notes.
[01:57:02.980 --> 01:57:04.980]  Notes от
[01:57:04.980 --> 01:57:06.980]  pos.v2
[01:57:06.980 --> 01:57:08.980]  s, y, d.
[01:57:08.980 --> 01:57:10.980]  Да, точка children, да.
[01:57:10.980 --> 01:57:12.980]  То есть идем в эту бывшую
[01:57:12.980 --> 01:57:14.980]  нодис
[01:57:14.980 --> 01:57:16.980]  от pos.v2
[01:57:24.980 --> 01:57:26.980]  И говорю, что идти надо в вершину
[01:57:26.980 --> 01:57:28.980]  точка children
[01:57:28.980 --> 01:57:30.980]  Здесь мы
[01:57:30.980 --> 01:57:32.980]  отправляемся в строчку s
[01:57:36.980 --> 01:57:38.980]  и берем ее
[01:57:40.980 --> 01:57:42.980]  И вот
[01:57:46.980 --> 01:57:48.980]  А вот с расстоянием?
[01:57:48.980 --> 01:57:50.980]  А как расстояние выяснить?
[01:57:58.980 --> 01:58:00.980]  Ну тут
[01:58:00.980 --> 01:58:02.980]  опять формулка получается
[01:58:02.980 --> 01:58:04.980]  Да, то есть опять этим
[01:58:04.980 --> 01:58:06.980]  придется пользоваться.
[01:58:06.980 --> 01:58:08.980]  Что же делать?
[01:58:08.980 --> 01:58:10.980]  Ну ничего страшного.
[01:58:10.980 --> 01:58:12.980]  Поэтому придется
[01:58:12.980 --> 01:58:14.980]  чуть-чуть более аккуратно
[01:58:14.980 --> 01:58:16.980]  Значит, напишем
[01:58:16.980 --> 01:58:18.980]  так
[01:58:18.980 --> 01:58:20.980]  аккуратненько
[01:58:20.980 --> 01:58:22.980]  node
[01:58:22.980 --> 01:58:24.980]  ampersand
[01:58:24.980 --> 01:58:26.980]  nd
[01:58:28.980 --> 01:58:30.980]  равно
[01:58:30.980 --> 01:58:32.980]  нодис
[01:58:34.980 --> 01:58:36.980]  от pos.v2
[01:58:42.980 --> 01:58:44.980]  Вот я просто возьму ссылку
[01:58:44.980 --> 01:58:46.980]  Внутри этого nd я все равно
[01:58:46.980 --> 01:58:48.980]  вектор менять не буду, правда?
[01:58:48.980 --> 01:58:50.980]  Поэтому что я сделаю?
[01:58:50.980 --> 01:58:52.980]  Сейчас nd
[01:58:52.980 --> 01:58:54.980]  node
[01:58:54.980 --> 01:58:56.980]  от pos.v2
[01:58:56.980 --> 01:58:58.980]  равно
[01:58:58.980 --> 01:59:00.980]  Можно взять позицию, можно просто
[01:59:00.980 --> 01:59:02.980]  инициалайзеристами присвоить
[01:59:02.980 --> 01:59:04.980]  быть такой конструктор копирования
[01:59:04.980 --> 01:59:06.980]  Значит, пишем
[01:59:06.980 --> 01:59:08.980]  первое мы пишем
[01:59:08.980 --> 01:59:10.980]  nd.childrum
[01:59:14.980 --> 01:59:16.980]  А, нет
[01:59:16.980 --> 01:59:18.980]  Дальше
[01:59:18.980 --> 01:59:20.980]  А может просто
[01:59:20.980 --> 01:59:22.980]  номер вершинки, которая
[01:59:22.980 --> 01:59:24.980]  почил
[01:59:24.980 --> 01:59:26.980]  Ну может, ну короче ладно, давайте так
[01:59:26.980 --> 01:59:28.980]  node
[01:59:28.980 --> 01:59:30.980]  ampersand
[01:59:30.980 --> 01:59:32.980]  новая вершина
[01:59:32.980 --> 01:59:34.980]  nd
[01:59:34.980 --> 01:59:36.980]  нодис
[01:59:36.980 --> 01:59:38.980]  от
[01:59:38.980 --> 01:59:40.980]  nd.childrum
[01:59:48.980 --> 01:59:50.980]  Вот
[01:59:54.980 --> 01:59:56.980]  Это типа куда я иду
[01:59:56.980 --> 01:59:58.980]  Понимаете, да?
[01:59:58.980 --> 02:00:00.980]  Ну и давай теперь
[02:00:00.980 --> 02:00:02.980]  пишем pos
[02:00:02.980 --> 02:00:04.980]  pos теперь
[02:00:04.980 --> 02:00:06.980]  вот теперь все по nd
[02:00:06.980 --> 02:00:08.980]  Значит, пишем
[02:00:10.980 --> 02:00:12.980]  номер
[02:00:12.980 --> 02:00:14.980]  номер надо
[02:00:14.980 --> 02:00:16.980]  да екак не бабай
[02:00:18.980 --> 02:00:20.980]  А что ж ты будешь делать?
[02:00:20.980 --> 02:00:22.980]  Ладно
[02:00:22.980 --> 02:00:24.980]  А nd вообще не очень нужно
[02:00:24.980 --> 02:00:26.980]  потому что мы пользоваться не будем
[02:00:26.980 --> 02:00:28.980]  Не, ну будем, ну ладно
[02:00:28.980 --> 02:00:30.980]  Что ж так
[02:00:30.980 --> 02:00:32.980]  Ну ладно
[02:00:32.980 --> 02:00:34.980]  Ладно, давайте так
[02:00:34.980 --> 02:00:36.980]  nd.nv
[02:00:36.980 --> 02:00:38.980]  вот что это за вершина
[02:00:38.980 --> 02:00:40.980]  nd.sim
[02:00:42.980 --> 02:00:44.980]  ldm
[02:00:44.980 --> 02:00:46.980]  от
[02:00:48.980 --> 02:00:50.980]  и
[02:00:50.980 --> 02:00:52.980]  вот так
[02:00:52.980 --> 02:00:54.980]  Да нам нужна эта вершина
[02:00:54.980 --> 02:00:56.980]  Ну да, здесь уже легче написать
[02:00:56.980 --> 02:00:58.980]  nnv
[02:00:58.980 --> 02:01:00.980]  nnv
[02:01:00.980 --> 02:01:02.980]  и здесь
[02:01:02.980 --> 02:01:04.980]  nd.nv
[02:01:04.980 --> 02:01:06.980]  .
[02:01:06.980 --> 02:01:08.980]  edge
[02:01:08.980 --> 02:01:10.980]  minus
[02:01:10.980 --> 02:01:12.980]  nd.nv
[02:01:12.980 --> 02:01:14.980]  .edge
[02:01:14.980 --> 02:01:16.980]  да
[02:01:16.980 --> 02:01:18.980]  Че, прям все уже?
[02:01:18.980 --> 02:01:20.980]  Могу я начать?
[02:01:28.980 --> 02:01:30.980]  Так
[02:01:30.980 --> 02:01:32.980]  Да, заметим, что
[02:01:32.980 --> 02:01:34.980]  в этой части nd.nv не меняются никак
[02:01:36.980 --> 02:01:38.980]  Так, ой
[02:01:38.980 --> 02:01:40.980]  И у нас доска закончилась
[02:01:46.980 --> 02:01:48.980]  А, хотя
[02:01:48.980 --> 02:01:50.980]  нам в общем-то одна строчка-то и осталась
[02:01:50.980 --> 02:01:52.980]  после этого
[02:01:52.980 --> 02:01:54.980]  Ну да, ну теперь мы нашли как бы место
[02:01:54.980 --> 02:01:56.980]  где мы
[02:01:56.980 --> 02:01:58.980]  Да, нужно закончить и написать
[02:01:58.980 --> 02:02:00.980]  nodis, прям на этот раз аккуратно
[02:02:00.980 --> 02:02:02.980]  nodis от вот этой вот вершины v
[02:02:02.980 --> 02:02:04.980]  .suffix
[02:02:04.980 --> 02:02:06.980]  А, нет, даже не так
[02:02:06.980 --> 02:02:08.980]  Return
[02:02:08.980 --> 02:02:10.980]  Да, правильно
[02:02:10.980 --> 02:02:12.980]  Сейчас давайте вот эти скобки поменьше нарисую
[02:02:12.980 --> 02:02:14.980]  Теперь пишем
[02:02:14.980 --> 02:02:16.980]  return
[02:02:16.980 --> 02:02:18.980]  ну
[02:02:18.980 --> 02:02:20.980]  в полном соответствии с линейной динамикой
[02:02:20.980 --> 02:02:22.980]  nodis от
[02:02:22.980 --> 02:02:24.980]  от чего?
[02:02:24.980 --> 02:02:26.980]  от v
[02:02:26.980 --> 02:02:28.980]  .suffix
[02:02:28.980 --> 02:02:30.980]  link
[02:02:30.980 --> 02:02:32.980]  равно
[02:02:32.980 --> 02:02:34.980]  один раз равно, обратите внимание
[02:02:34.980 --> 02:02:36.980]  Да, не два
[02:02:38.980 --> 02:02:40.980]  И равно это будет
[02:02:40.980 --> 02:02:42.980]  Ну, видимо, было одно удовольствие
[02:02:42.980 --> 02:02:44.980]  Да, совершенно верно
[02:02:44.980 --> 02:02:46.980]  build
[02:02:46.980 --> 02:02:48.980]  node
[02:02:48.980 --> 02:02:50.980]  if
[02:02:50.980 --> 02:02:52.980]  .suffix
[02:02:54.980 --> 02:02:56.980]  Да
[02:03:00.980 --> 02:03:02.980]  Это так
[02:03:04.980 --> 02:03:06.980]  Ну вот
[02:03:06.980 --> 02:03:08.980]  То есть, типа, нет вершины
[02:03:08.980 --> 02:03:10.980]  значит заведем, потому что все равно придется
[02:03:12.980 --> 02:03:14.980]  Вот
[02:03:14.980 --> 02:03:16.980]  Вот, можем потом там
[02:03:16.980 --> 02:03:18.980]  где-нибудь тут найти место и написать
[02:03:18.980 --> 02:03:20.980]  build node if need, если надо
[02:03:20.980 --> 02:03:22.980]  Да
[02:03:22.980 --> 02:03:24.980]  То есть нам осталось
[02:03:24.980 --> 02:03:26.980]  дописать, ну там
[02:03:26.980 --> 02:03:28.980]  build node if need, go и can go
[02:03:28.980 --> 02:03:30.980]  но это мелочи, и доказать, что это все с линей
[02:03:30.980 --> 02:03:32.980]  работает. На самом деле, да
[02:03:36.980 --> 02:03:38.980]  Ну вот, то есть дальше
[02:03:38.980 --> 02:03:40.980]  вот я говорю, можно делать, в принципе
[02:03:40.980 --> 02:03:42.980]  то есть
[02:03:42.980 --> 02:03:44.980]  У нас, в принципе, isVaid
[02:03:44.980 --> 02:03:46.980]  это просто проверка на то, что там вершинка
[02:03:46.980 --> 02:03:48.980]  не минус 1 и все, в принципе
[02:03:48.980 --> 02:03:50.980]  Где?
[02:03:50.980 --> 02:03:52.980]  isVaid функция
[02:03:52.980 --> 02:03:54.980]  Да
[02:03:54.980 --> 02:03:56.980]  Может, когда мы это писали, мы этого еще не понимали
[02:03:56.980 --> 02:03:58.980]  Так, теперь
[02:03:58.980 --> 02:04:00.980]  понимаем
[02:04:00.980 --> 02:04:02.980]  Вот, ну все
[02:04:02.980 --> 02:04:04.980]  build node if need надо писать
[02:04:06.980 --> 02:04:08.980]  Ну, заранее дела, тогда напишем
[02:04:08.980 --> 02:04:10.980]  Значит, смотрите
[02:04:10.980 --> 02:04:12.980]  Теперь давайте int
[02:04:12.980 --> 02:04:14.980]  тянок
[02:04:14.980 --> 02:04:16.980]  где же нам писать
[02:04:16.980 --> 02:04:18.980]  Ну ладно, давайте
[02:04:18.980 --> 02:04:20.980]  поплотнимся немножко
[02:04:20.980 --> 02:04:22.980]  Так, все, давайте
[02:04:32.980 --> 02:04:34.980]  И поехали, значит
[02:04:34.980 --> 02:04:36.980]  s
[02:04:36.980 --> 02:04:38.980]  равно быть
[02:04:40.980 --> 02:04:42.980]  Да, да, просто сдвигаем, мы еще не делали
[02:04:44.980 --> 02:04:46.980]  Вот я говорю, да
[02:04:46.980 --> 02:04:48.980]  Дайте вот, проблема, недостаток доски, потому что
[02:04:48.980 --> 02:04:50.980]  приходится сдвигать, вот так
[02:04:50.980 --> 02:04:52.980]  Преимущество доски, что можно красиво и разными цветами
[02:04:52.980 --> 02:04:54.980]  писать, и там стрелочки куда-то
[02:04:54.980 --> 02:04:56.980]  вставлять
[02:05:00.980 --> 02:05:02.980]  Дайте, при таком раскладе уже жалко
[02:05:02.980 --> 02:05:04.980]  Принцип
[02:05:04.980 --> 02:05:06.980]  это да
[02:05:12.980 --> 02:05:14.980]  А, ну
[02:05:14.980 --> 02:05:16.980]  его тоже жалко, потому что им хотел воспользоваться
[02:05:22.980 --> 02:05:24.980]  Нет, нам на самом деле
[02:05:24.980 --> 02:05:26.980]  не потребуется
[02:05:28.980 --> 02:05:30.980]  И доску вот так
[02:05:30.980 --> 02:05:32.980]  и доску вот так переворачивать
[02:05:32.980 --> 02:05:34.980]  в левую
[02:05:34.980 --> 02:05:36.980]  Да нет
[02:05:36.980 --> 02:05:38.980]  Да нет смысла нас
[02:05:38.980 --> 02:05:40.980]  Нет, на самом деле нет смысла
[02:05:40.980 --> 02:05:42.980]  Это если мне хорошо дается, когда мы на одной доске пишем только кота
[02:05:42.980 --> 02:05:44.980]  на втором карте
[02:05:44.980 --> 02:05:46.980]  Вот
[02:05:46.980 --> 02:05:48.980]  Так, ну и давайте вот
[02:05:48.980 --> 02:05:50.980]  Post
[02:05:50.980 --> 02:05:52.980]  Post и
[02:05:52.980 --> 02:05:54.980]  not me
[02:05:54.980 --> 02:05:56.980]  Это просто не if
[02:05:56.980 --> 02:05:58.980]  Нет, not me
[02:05:58.980 --> 02:06:00.980]  Not me
[02:06:04.980 --> 02:06:06.980]  Вот такая красота
[02:06:08.980 --> 02:06:10.980]  И наконец
[02:06:14.980 --> 02:06:16.980]  И вот где-то здесь нам остается
[02:06:16.980 --> 02:06:18.980]  только
[02:06:18.980 --> 02:06:20.980]  написать
[02:06:20.980 --> 02:06:22.980]  build not if
[02:06:22.980 --> 02:06:24.980]  Ну, поехали
[02:06:28.980 --> 02:06:30.980]  Not if
[02:06:30.980 --> 02:06:32.980]  if
[02:06:34.980 --> 02:06:36.980]  Excellent
[02:06:42.980 --> 02:06:44.980]  Что же у нас получается
[02:06:44.980 --> 02:06:46.980]  Ну, начнем
[02:06:46.980 --> 02:06:48.980]  с простого if
[02:06:48.980 --> 02:06:50.980]  Если оказалось, что
[02:06:50.980 --> 02:06:52.980]  post.v2
[02:06:52.980 --> 02:06:54.980]  post.dist2
[02:06:54.980 --> 02:06:56.980]  равно
[02:06:56.980 --> 02:06:58.980]  нулю, то что мы делаем
[02:07:00.980 --> 02:07:02.980]  Мы тупо возвращаем
[02:07:02.980 --> 02:07:04.980]  post.v2
[02:07:10.980 --> 02:07:12.980]  То есть если мы уже в вершине
[02:07:12.980 --> 02:07:14.980]  ничего делать не надо
[02:07:18.980 --> 02:07:20.980]  В противном случае
[02:07:20.980 --> 02:07:22.980]  да, какую-то картинку придется нарисовать
[02:07:26.980 --> 02:07:28.980]  Значит, теперь
[02:07:28.980 --> 02:07:30.980]  Ну, сделаем так
[02:07:30.980 --> 02:07:32.980]  Итак, мы живем на контр-ребре
[02:07:32.980 --> 02:07:34.980]  Вот наша позиция находится
[02:07:34.980 --> 02:07:36.980]  где-то
[02:07:36.980 --> 02:07:38.980]  здесь
[02:07:38.980 --> 02:07:40.980]  Вот это вот post
[02:07:40.980 --> 02:07:42.980]  И мы что знаем
[02:07:42.980 --> 02:07:44.980]  Это у нас будет вершина
[02:07:44.980 --> 02:07:46.980]  v2
[02:07:46.980 --> 02:07:48.980]  Ну, давайте так, это будет вершина v
[02:07:48.980 --> 02:07:50.980]  Это будет вершина
[02:07:50.980 --> 02:07:52.980]  допустим, p
[02:07:52.980 --> 02:07:54.980]  от слова pairing
[02:07:54.980 --> 02:07:56.980]  Ладно, давайте так
[02:07:56.980 --> 02:07:58.980]  Это будет вершина lv
[02:08:00.980 --> 02:08:02.980]  Ну, мы будем так называть, понятно, да?
[02:08:02.980 --> 02:08:04.980]  А еще нам надо, что
[02:08:04.980 --> 02:08:06.980]  вот эта подстрока соответствовалась
[02:08:06.980 --> 02:08:08.980]  от l
[02:08:08.980 --> 02:08:10.980]  до r
[02:08:12.980 --> 02:08:14.980]  И вот на вот этой позиции
[02:08:14.980 --> 02:08:16.980]  должен появиться
[02:08:18.980 --> 02:08:20.980]  Логично, да?
[02:08:20.980 --> 02:08:22.980]  Логично, да?
[02:08:30.980 --> 02:08:32.980]  Понятно, да?
[02:08:32.980 --> 02:08:34.980]  Ну, то есть самое надежное
[02:08:34.980 --> 02:08:36.980]  Давайте честно эти переменные все пропишем
[02:08:36.980 --> 02:08:38.980]  И после этого будет все красоте
[02:08:38.980 --> 02:08:40.980]  И тогда после этого будет все красоте
[02:08:42.980 --> 02:08:44.980]  Да, то есть давайте вот с этого и начнем
[02:08:44.980 --> 02:08:46.980]  int
[02:08:46.980 --> 02:08:48.980]  v
[02:08:48.980 --> 02:08:50.980]  Вно, короче, v2
[02:08:50.980 --> 02:08:52.980]  Ну, который post
[02:08:56.980 --> 02:08:58.980]  int
[02:08:58.980 --> 02:09:00.980]  p равно чему?
[02:09:02.980 --> 02:09:04.980]  Ну, да, но
[02:09:04.980 --> 02:09:06.980]  без вот v.pairing, конечно
[02:09:08.980 --> 02:09:10.980]  Так
[02:09:10.980 --> 02:09:12.980]  И делим
[02:09:16.980 --> 02:09:18.980]  Значит int nv равно чему?
[02:09:18.980 --> 02:09:20.980]  Ну, я могу то же самое здесь
[02:09:20.980 --> 02:09:22.980]  нарисовать, да?
[02:09:22.980 --> 02:09:24.980]  Уже не надо? Хорошо
[02:09:24.980 --> 02:09:26.980]  Значит int nv равно
[02:09:26.980 --> 02:09:28.980]  ну, нотис.size
[02:09:34.980 --> 02:09:36.980]  Ну, и давайте теперь a вернуть
[02:09:36.980 --> 02:09:38.980]  Успелы
[02:09:38.980 --> 02:09:40.980]  int n
[02:09:40.980 --> 02:09:42.980]  Догадаетесь чему равно?
[02:09:44.980 --> 02:09:46.980]  нотис.size
[02:09:48.980 --> 02:09:50.980]  Ну, да, имеется в виду
[02:09:50.980 --> 02:09:52.980]  что нотис.size
[02:09:54.980 --> 02:09:56.980]  Такого поля
[02:09:56.980 --> 02:09:58.980]  у нотис v действительно нет
[02:10:00.980 --> 02:10:02.980]  нотис от v.
[02:10:02.980 --> 02:10:04.980]  n
[02:10:04.980 --> 02:10:06.980]  да, совершенно верно
[02:10:06.980 --> 02:10:08.980]  int x
[02:10:08.980 --> 02:10:10.980]  равно
[02:10:10.980 --> 02:10:12.980]  нотис.doe.sg
[02:10:16.980 --> 02:10:18.980]  А v как вы думаете чему равно?
[02:10:36.980 --> 02:10:38.980]  Нет
[02:10:38.980 --> 02:10:40.980]  Нет, просто
[02:10:40.980 --> 02:10:42.980]  нам нужен именно mid
[02:10:42.980 --> 02:10:44.980]  знак того, что
[02:10:44.980 --> 02:10:46.980]  вот это ребро
[02:10:46.980 --> 02:10:48.980]  это именно от mid до r
[02:10:48.980 --> 02:10:50.980]  а вот это ребро
[02:10:50.980 --> 02:10:52.980]  от l до mid
[02:10:52.980 --> 02:10:54.980]  Вот теперь мы все переменные
[02:10:54.980 --> 02:10:56.980]  приписали
[02:10:56.980 --> 02:10:58.980]  а теперь давайте
[02:10:58.980 --> 02:11:00.980]  теперь нам нужно создать эту вершину
[02:11:00.980 --> 02:11:02.980]  и поменять что-то в этих двух вершинах
[02:11:02.980 --> 02:11:04.980]  Ну, начнем с того, что
[02:11:04.980 --> 02:11:06.980]  создадим новую вершину
[02:11:06.980 --> 02:11:08.980]  Значит, поехали
[02:11:08.980 --> 02:11:10.980]  Ну, начнем с того, что
[02:11:10.980 --> 02:11:12.980]  создадим новую вершину
[02:11:12.980 --> 02:11:14.980]  Значит, поехали
[02:11:14.980 --> 02:11:16.980]  Ну, начнем с того, что
[02:11:16.980 --> 02:11:18.980]  создадим новую вершину
[02:11:18.980 --> 02:11:20.980]  Ну, начнем с того, что
[02:11:20.980 --> 02:11:22.980]  Значит, внимание
[02:11:22.980 --> 02:11:24.980]  нотис.push.b
[02:11:24.980 --> 02:11:26.980]  нотис.push.b
[02:11:26.980 --> 02:11:28.980]  нотис.push.b
[02:11:28.980 --> 02:11:30.980]  нотис.push.b
[02:11:30.980 --> 02:11:32.980]  нотис.push.b
[02:11:32.980 --> 02:11:34.980]  нотис.push.b
[02:11:34.980 --> 02:11:36.980]  нотис.push.b
[02:11:36.980 --> 02:11:38.980]  а, ну не важно, тем более что
[02:11:38.980 --> 02:11:40.980]  впервые в истории
[02:11:40.980 --> 02:11:42.980]  мапчик нам придется делать
[02:11:42.980 --> 02:11:44.980]  не пустым
[02:11:44.980 --> 02:11:46.980]  ведь обратите внимание
[02:11:46.980 --> 02:11:48.980]  да?
[02:11:48.980 --> 02:11:50.980]  чак
[02:11:50.980 --> 02:11:52.980]  чак
[02:11:52.980 --> 02:11:54.980]  чак
[02:11:54.980 --> 02:11:56.980]  потому что у этой вершины есть единственное
[02:11:56.980 --> 02:11:58.980]  ребро
[02:11:58.980 --> 02:12:00.980]  у него есть
[02:12:00.980 --> 02:12:02.980]  ребро ведет по символу С
[02:12:02.980 --> 02:12:04.980]  мидовому
[02:12:04.980 --> 02:12:06.980]  да? Видите? Первый символ мидовому
[02:12:08.980 --> 02:12:10.980]  И
[02:12:10.980 --> 02:12:12.980]  ведет это ребро куда?
[02:12:12.980 --> 02:12:14.980]  вершину номер В
[02:12:14.980 --> 02:12:16.980]  поэтому ведется его тут
[02:12:16.980 --> 02:12:31.980]  Я надеюсь, что в конструкторе МАПа не надо там прописывать эти все?
[02:12:31.980 --> 02:12:33.980]  Не-не-не, нужно работать.
[02:12:33.980 --> 02:12:35.980]  Пэтчеринг, вот это все, очень надеюсь.
[02:12:35.980 --> 02:12:38.980]  Ну ладно, если нет, дофидать это не проблема.
[02:12:38.980 --> 02:12:42.980]  Вот, что дальше?
[02:12:42.980 --> 02:12:45.980]  Так, ну давайте так, идем по списочкам.
[02:12:45.980 --> 02:12:48.980]  Эдж, Эль...
[02:12:48.980 --> 02:12:50.980]  Не-не-не, это фигурные скобки здесь...
[02:12:50.980 --> 02:12:54.980]  Нет, это фигурные скобки от самой пары, а это фигурные скобки от МАПа.
[02:12:54.980 --> 02:12:58.980]  Так что вот эта фигурная скобка еще не закрыта, мы живем.
[02:12:58.980 --> 02:13:01.980]  Ок, ок, ок, ок.
[02:13:01.980 --> 02:13:04.980]  А, ой, ой.
[02:13:04.980 --> 02:13:06.980]  А, он плейсблэк это с круглой скобкой?
[02:13:06.980 --> 02:13:10.980]  Хорошо, тогда это с круглой скобкой, она открыта, мы живем.
[02:13:10.980 --> 02:13:14.980]  Ну вот, дальше, что дальше?
[02:13:14.980 --> 02:13:17.980]  Дальше, Эджелер, это Эллимит.
[02:13:17.980 --> 02:13:19.980]  Да, но, нет, не угадали.
[02:13:19.980 --> 02:13:22.980]  Мы вот это ребро добавляем.
[02:13:22.980 --> 02:13:23.980]  Поэтому...
[02:13:23.980 --> 02:13:26.980]  Зачем? Что?
[02:13:26.980 --> 02:13:29.980]  Ну, мы создаем вот эту вершину.
[02:13:29.980 --> 02:13:30.980]  Да.
[02:13:30.980 --> 02:13:32.980]  Это вообще единственное ребро.
[02:13:32.980 --> 02:13:35.980]  Так мы вершинку добавляем в ребро в нее.
[02:13:35.980 --> 02:13:37.980]  Да.
[02:13:37.980 --> 02:13:40.980]  А, да, вы правы, вы правы.
[02:13:40.980 --> 02:13:42.980]  Давайте добавим его.
[02:13:42.980 --> 02:13:44.980]  Это будет Эллимит.
[02:13:44.980 --> 02:13:46.980]  Значит так и пишем.
[02:13:46.980 --> 02:13:48.980]  Элли, запятая.
[02:13:48.980 --> 02:13:50.980]  Ой, Эллимит.
[02:13:50.980 --> 02:13:53.980]  Так, поехали, Эллимит.
[02:13:53.980 --> 02:13:56.980]  Что дальше?
[02:13:56.980 --> 02:13:59.980]  Есть что-нибудь дальше?
[02:13:59.980 --> 02:14:03.980]  Дальше, П.
[02:14:03.980 --> 02:14:06.980]  Так, кто у этой вершины родитель?
[02:14:06.980 --> 02:14:09.980]  А, ну, соответственно, П, конечно.
[02:14:09.980 --> 02:14:11.980]  Так, и...
[02:14:11.980 --> 02:14:14.980]  А суффиксной ссылкой мы не заморачиваемся.
[02:14:14.980 --> 02:14:17.980]  То есть, типа, надо будет создать.
[02:14:17.980 --> 02:14:22.980]  То есть, действительно, тут будет очень небезопасно, если вы здесь еще будете суффиксы.
[02:14:22.980 --> 02:14:25.980]  А, ну, здесь вы его не вызовете, потому что вершины еще нет.
[02:14:25.980 --> 02:14:27.980]  Вот.
[02:14:27.980 --> 02:14:29.980]  Тем более, что дерево еще не полностью корректно.
[02:14:29.980 --> 02:14:32.980]  Оно должно быть полностью корректным, чтобы суффиксную ссылку вызывать.
[02:14:32.980 --> 02:14:33.980]  Поэтому.
[02:14:33.980 --> 02:14:34.980]  Так, отлично.
[02:14:34.980 --> 02:14:35.980]  С этой вершины справились.
[02:14:35.980 --> 02:14:36.980]  Теперь в ней все корректно.
[02:14:36.980 --> 02:14:38.980]  Теперь давайте поменяем вершину В.
[02:14:38.980 --> 02:14:40.980]  Что мне надо поменять?
[02:14:40.980 --> 02:14:45.980]  Переход по символу С, Л.
[02:14:45.980 --> 02:14:47.980]  Где здесь...
[02:14:47.980 --> 02:14:49.980]  Где здесь переход по символу?
[02:14:49.980 --> 02:14:50.980]  Ничего не видно.
[02:14:50.980 --> 02:14:51.980]  Нет.
[02:14:51.980 --> 02:14:52.980]  В вершине В...
[02:14:52.980 --> 02:14:53.980]  Нет, так как мы попали...
[02:14:53.980 --> 02:14:54.980]  Так, надо поменять parent.
[02:14:54.980 --> 02:14:55.980]  И edge.
[02:14:55.980 --> 02:14:56.980]  Да.
[02:14:56.980 --> 02:14:57.980]  Давайте поменяем.
[02:14:57.980 --> 02:14:58.980]  Node.js от V.
[02:14:58.980 --> 02:14:59.980]  А у parent r, что это значит?
[02:14:59.980 --> 02:15:00.980]  То есть, parent равно, получается, nv.
[02:15:00.980 --> 02:15:01.980]  И node.js от...
[02:15:01.980 --> 02:15:02.980]  Nj.
[02:15:02.980 --> 02:15:03.980]  ....nj.
[02:15:03.980 --> 02:15:04.980]  Равно, соответственно, теперь mi.
[02:15:04.980 --> 02:15:05.980]  Да.
[02:15:06.980 --> 02:15:08.640]  Отлично.
[02:15:08.640 --> 02:15:11.820]  Вроде так.
[02:15:11.820 --> 02:15:18.840]  Ну а что, дети в ней не поменялись.
[02:15:18.840 --> 02:15:21.780]  Nj в ней не поменялся.
[02:15:21.780 --> 02:15:23.000]  Нужно еще...
[02:15:23.000 --> 02:15:27.480]  Суффикс лимб в ней поменялся.
[02:15:27.480 --> 02:15:29.480]  Еще нужно...
[02:15:29.480 --> 02:15:33.980]  Суффикс лимб не поменялся.
[02:15:33.980 --> 02:15:41.980]  И еще нужно у PL, т.е. у джентльмена Чилл путь PSL, он был в V, теперь Nv, Nv
[02:15:41.980 --> 02:15:43.980]  Да, совершенно верно, ну поехали
[02:15:43.980 --> 02:15:51.980]  nodis.pl.children от S-Evital
[02:15:51.980 --> 02:15:53.980]  равно чему
[02:15:55.980 --> 02:15:57.980]  что это будет в сеть
[02:15:59.980 --> 02:16:01.980]  одно Nv
[02:16:01.980 --> 02:16:03.980]  ну
[02:16:03.980 --> 02:16:05.980]  я над говорю тоже желтенький
[02:16:09.980 --> 02:16:11.980]  и конечно же return
[02:16:13.980 --> 02:16:15.980]  оп, упустились
[02:16:19.980 --> 02:16:21.980]  да, почерк конечно пришлось сильно уменьшить
[02:16:21.980 --> 02:16:23.980]  но уже не упустились
[02:16:23.980 --> 02:16:25.980]  опустились
[02:16:31.980 --> 02:16:33.980]  ну а че, походу вот весь код и написали
[02:16:39.980 --> 02:16:41.980]  да, по хренометражу прямо
[02:16:43.980 --> 02:16:45.980]  ну как почти
[02:16:45.980 --> 02:16:47.980]  знаете как говорят
[02:16:47.980 --> 02:16:49.980]  оставшиеся в крайне незначительные слова
[02:16:49.980 --> 02:16:51.980]  служили элочки
[02:16:51.980 --> 02:16:53.980]  помогали элочке контактировать
[02:16:53.980 --> 02:16:55.980]  с ее там предавцами
[02:16:57.980 --> 02:16:59.980]  у меня сейчас только один вопрос
[02:16:59.980 --> 02:17:01.980]  наверное
[02:17:01.980 --> 02:17:03.980]  вот в Go
[02:17:03.980 --> 02:17:05.980]  короче, ну я сейчас понял что я все написал
[02:17:05.980 --> 02:17:07.980]  он не работает, проблема в том что
[02:17:07.980 --> 02:17:09.980]  нужно как-то аккуратно переходить вершину
[02:17:09.980 --> 02:17:11.980]  если она
[02:17:11.980 --> 02:17:13.980]  если у нас там
[02:17:13.980 --> 02:17:15.980]  из ней
[02:17:15.980 --> 02:17:17.980]  сейчас
[02:17:17.980 --> 02:17:19.980]  в общем прибру длины
[02:17:19.980 --> 02:17:21.980]  бесконечности
[02:17:21.980 --> 02:17:23.980]  нужно правильно сразу
[02:17:23.980 --> 02:17:25.980]  проставлять disk2
[02:17:25.980 --> 02:17:27.980]  нельзя его проставлять
[02:17:27.980 --> 02:17:29.980]  edger-edgel в таком случае
[02:17:29.980 --> 02:17:31.980]  сейчас
[02:17:31.980 --> 02:17:33.980]  какое место
[02:17:33.980 --> 02:17:35.980]  изначально мы пишем бесконечности
[02:17:35.980 --> 02:17:37.980]  все диски пишем с бесконечности
[02:17:39.980 --> 02:17:41.980]  то есть начало не будет меняться
[02:17:41.980 --> 02:17:43.980]  ну вот так устроен Go
[02:17:43.980 --> 02:17:45.980]  если сейчас
[02:17:45.980 --> 02:17:47.980]  disk2 не ноль, то мы его уменьшаем на 1
[02:17:47.980 --> 02:17:49.980]  если disk2 ноль
[02:17:49.980 --> 02:17:51.980]  то мы проходимся по children
[02:17:51.980 --> 02:17:53.980]  от нашего символа
[02:17:53.980 --> 02:17:55.980]  находим новую вершинку
[02:17:55.980 --> 02:17:57.980]  а что мы должны написать disk2
[02:17:57.980 --> 02:17:59.980]  нам нужно пройти
[02:17:59.980 --> 02:18:01.980]  всю подстроку на этом ребре
[02:18:01.980 --> 02:18:03.980]  кроме одного символа
[02:18:03.980 --> 02:18:05.980]  по которому мы уже прошли
[02:18:05.980 --> 02:18:07.980]  этот символ будет иметь номер
[02:18:07.980 --> 02:18:09.980]  edger-dis2 в чем проблема
[02:18:09.980 --> 02:18:11.980]  это будет edger-edgel
[02:18:11.980 --> 02:18:13.980]  edger-dis2
[02:18:17.980 --> 02:18:19.980]  в disk2 храним что?
[02:18:19.980 --> 02:18:21.980]  расстояние до ниша
[02:18:21.980 --> 02:18:23.980]  ну вот мы
[02:18:23.980 --> 02:18:25.980]  находимся в вершинке
[02:18:25.980 --> 02:18:27.980]  и мы хотим
[02:18:27.980 --> 02:18:29.980]  пройтись по одному символу из нее
[02:18:29.980 --> 02:18:31.980]  если ты говоришь
[02:18:31.980 --> 02:18:33.980]  про вот этот вот else
[02:18:33.980 --> 02:18:35.980]  нет, я про функцию Go
[02:18:35.980 --> 02:18:37.980]  а, ну про функцию Go
[02:18:37.980 --> 02:18:39.980]  но ты говоришь, что
[02:18:39.980 --> 02:18:41.980]  нет, тут вопрос Go
[02:18:41.980 --> 02:18:43.980]  или canGo
[02:18:43.980 --> 02:18:45.980]  если говоришь Go, то все
[02:18:45.980 --> 02:18:47.980]  а если здесь 0?
[02:18:47.980 --> 02:18:49.980]  тогда ты смотришь
[02:18:49.980 --> 02:18:51.980]  тогда ты просто берешь ребро
[02:18:51.980 --> 02:18:53.980]  и вот просто как здесь
[02:18:53.980 --> 02:18:55.980]  выходишь на новое ребро
[02:18:55.980 --> 02:18:57.980]  и вот пишешь буквально вот эту же строчку
[02:18:59.980 --> 02:19:01.980]  там вроде, кстати
[02:19:01.980 --> 02:19:03.980]  edger-edgel-1
[02:19:03.980 --> 02:19:05.980]  полуинтервал
[02:19:05.980 --> 02:19:07.980]  не случайно
[02:19:07.980 --> 02:19:09.980]  полуинтервалы пишем
[02:19:09.980 --> 02:19:11.980]  edger-edgel
[02:19:11.980 --> 02:19:13.980]  это сколько символов вообще в этой строке?
[02:19:13.980 --> 02:19:15.980]  правильно
[02:19:15.980 --> 02:19:17.980]  а вы по одному символу уже обошли
[02:19:17.980 --> 02:19:19.980]  а, в этом плане
[02:19:19.980 --> 02:19:21.980]  ну, господи
[02:19:21.980 --> 02:19:23.980]  ну в этом плане
[02:19:23.980 --> 02:19:25.980]  это еще ужать
[02:19:25.980 --> 02:19:27.980]  ну просто в этом плане
[02:19:27.980 --> 02:19:29.980]  вообще нормально же
[02:19:29.980 --> 02:19:31.980]  нет, ну смотри
[02:19:31.980 --> 02:19:33.980]  нет, все нормально
[02:19:33.980 --> 02:19:35.980]  нет, ну просто не знаю
[02:19:35.980 --> 02:19:37.980]  ну давайте вот на всякий случай
[02:19:37.980 --> 02:19:39.980]  нет, просто позицион Go
[02:19:39.980 --> 02:19:41.980]  теперь будет выглядеть так
[02:19:41.980 --> 02:19:43.980]  нет, я думаю, что все должно работать
[02:19:43.980 --> 02:19:45.980]  правильно
[02:19:45.980 --> 02:19:47.980]  ну раз возьмите вопрос
[02:19:47.980 --> 02:19:49.980]  давайте пример приведу
[02:19:49.980 --> 02:19:51.980]  обычно просто пишут
[02:19:51.980 --> 02:19:53.980]  я просто писал так
[02:19:53.980 --> 02:19:55.980]  значит пишем
[02:19:55.980 --> 02:19:57.980]  что если оказалось
[02:19:57.980 --> 02:19:59.980]  что pos.dist
[02:19:59.980 --> 02:20:01.980]  tu равно 0
[02:20:05.980 --> 02:20:07.980]  пройти надо еще по символу q
[02:20:11.980 --> 02:20:13.980]  вот
[02:20:13.980 --> 02:20:15.980]  что мы тогда делаем?
[02:20:19.980 --> 02:20:21.980]  вот делаем тогда так
[02:20:21.980 --> 02:20:23.980]  значит если pos.dist
[02:20:23.980 --> 02:20:25.980]  tu равно 0
[02:20:25.980 --> 02:20:27.980]  то мы говорим
[02:20:29.980 --> 02:20:31.980]  то прям
[02:20:33.980 --> 02:20:35.980]  ну да, прям так и прописываем
[02:20:35.980 --> 02:20:37.980]  буквально копипастим
[02:20:41.980 --> 02:20:43.980]  ну вот
[02:20:43.980 --> 02:20:45.980]  ну и в конце пишем
[02:20:45.980 --> 02:20:47.980]  pos.dist
[02:20:47.980 --> 02:20:49.980]  tu минус мимус
[02:20:49.980 --> 02:20:51.980]  return pos
[02:20:51.980 --> 02:20:53.980]  можно даже это
[02:20:53.980 --> 02:20:55.980]  в отдельную функцию хорошую вынести
[02:20:55.980 --> 02:20:57.980]  какую-нибудь
[02:21:01.980 --> 02:21:03.980]  вот
[02:21:03.980 --> 02:21:05.980]  прям вот копипастом
[02:21:05.980 --> 02:21:07.980]  то есть тут на самом деле
[02:21:07.980 --> 02:21:09.980]  можно это вынести в строительную функцию
[02:21:09.980 --> 02:21:11.980]  давайте ее там скажем
[02:21:11.980 --> 02:21:13.980]  start engine
[02:21:19.980 --> 02:21:21.980]  вот и все
[02:21:21.980 --> 02:21:23.980]  да-да-да
[02:21:29.980 --> 02:21:31.980]  ну и тем более надо аккуратно проверять
[02:21:31.980 --> 02:21:33.980]  вот
[02:21:33.980 --> 02:21:35.980]  и по большому счету нам
[02:21:35.980 --> 02:21:37.980]  ну ладно, проверяем
[02:21:37.980 --> 02:21:39.980]  это ли почему этот алгоритм
[02:21:39.980 --> 02:21:41.980]  работает
[02:21:41.980 --> 02:21:43.980]  в смысле
[02:21:43.980 --> 02:21:45.980]  что он действительно на каждом шаге поддерживает
[02:21:45.980 --> 02:21:47.980]  корректную суффиксную идею
[02:21:47.980 --> 02:21:49.980]  остается только маленький финальный вопрос
[02:21:49.980 --> 02:21:51.980]  почему вот это вот допиливание
[02:21:51.980 --> 02:21:53.980]  суффиксных ссылок
[02:21:55.980 --> 02:21:57.980]  оставляет симпатику видео
[02:22:01.980 --> 02:22:03.980]  ну ответ на самом деле кроется в этой картинке
[02:22:03.980 --> 02:22:05.980]  смотрите
[02:22:05.980 --> 02:22:07.980]  давайте я представим
[02:22:07.980 --> 02:22:09.980]  вот мы с вами ходим
[02:22:09.980 --> 02:22:11.980]  вот когда мы ходили только вот этим
[02:22:11.980 --> 02:22:13.980]  рыжим указателем
[02:22:13.980 --> 02:22:15.980]  то как бы да
[02:22:15.980 --> 02:22:17.980]  его скачков было легейное время
[02:22:17.980 --> 02:22:19.980]  но мы можем вообразить
[02:22:19.980 --> 02:22:21.980]  себе более продвинутую вещь
[02:22:21.980 --> 02:22:23.980]  если я представим, что мы еще ходим
[02:22:23.980 --> 02:22:25.980]  вот этим вот типа зеленым указателем
[02:22:25.980 --> 02:22:27.980]  когда он
[02:22:27.980 --> 02:22:29.980]  из каждой вершины не просто
[02:22:29.980 --> 02:22:31.980]  по суффиксной ссылке скачет
[02:22:31.980 --> 02:22:33.980]  подымается
[02:22:33.980 --> 02:22:35.980]  проходит и вот так вот спускается
[02:22:35.980 --> 02:22:37.980]  по большому счету
[02:22:37.980 --> 02:22:39.980]  можем считать, что
[02:22:39.980 --> 02:22:41.980]  зеленый указатель делает тоже шоу рыжий
[02:22:41.980 --> 02:22:43.980]  только еще больше
[02:22:45.980 --> 02:22:47.980]  ключевое наблюдение
[02:22:47.980 --> 02:22:49.980]  здесь заключается в следующем
[02:22:49.980 --> 02:22:51.980]  вот я не случайно говорил
[02:22:51.980 --> 02:22:53.980]  про количество вершин
[02:22:53.980 --> 02:22:55.980]  на вот этом вот пути от корки
[02:22:55.980 --> 02:22:57.980]  ведь если я из них
[02:22:57.980 --> 02:22:59.980]  проведу суффиксные ссылки
[02:22:59.980 --> 02:23:01.980]  то ведь мы же можем заметить, что
[02:23:01.980 --> 02:23:03.980]  они практически все, кроме может быть одной
[02:23:03.980 --> 02:23:05.980]  будут на этот условно
[02:23:05.980 --> 02:23:07.980]  путь и вести
[02:23:07.980 --> 02:23:09.980]  правда?
[02:23:09.980 --> 02:23:11.980]  кроме может быть одной, которая поведет в коинь
[02:23:13.980 --> 02:23:15.980]  вот, понимаете, да?
[02:23:15.980 --> 02:23:17.980]  поэтому идея такая
[02:23:17.980 --> 02:23:19.980]  давайте рассматривать такой, так сказать, потенциал
[02:23:19.980 --> 02:23:21.980]  если хотите
[02:23:21.980 --> 02:23:23.980]  по этому зеленому указателю
[02:23:23.980 --> 02:23:25.980]  он указывает на вершину, мне интересно
[02:23:25.980 --> 02:23:27.980]  глубина вершин
[02:23:27.980 --> 02:23:29.980]  и количество именно вершин на пути
[02:23:31.980 --> 02:23:33.980]  то есть когда мы идем в родители
[02:23:33.980 --> 02:23:35.980]  мы уменьшаем эту глубину на один
[02:23:37.980 --> 02:23:39.980]  когда скачем по суффиксной ссылке
[02:23:39.980 --> 02:23:41.980]  эта глубина
[02:23:41.980 --> 02:23:43.980]  уменьшается не более чем на один
[02:23:43.980 --> 02:23:45.980]  а может остается прежняя
[02:23:45.980 --> 02:23:47.980]  или даже увеличивается
[02:23:47.980 --> 02:23:49.980]  потому что эти вершины точно есть
[02:23:49.980 --> 02:23:51.980]  но может быть тут посредине где-нибудь еще возникли
[02:23:51.980 --> 02:23:53.980]  вполне вероятно
[02:23:53.980 --> 02:23:55.980]  понятно, да?
[02:23:55.980 --> 02:23:57.980]  ну, короче, прибавили
[02:23:57.980 --> 02:23:59.980]  не менее чем минус один
[02:23:59.980 --> 02:24:01.980]  понимаете, да?
[02:24:01.980 --> 02:24:03.980]  а когда мы теперь вот этим вот
[02:24:03.980 --> 02:24:05.980]  сжатым образом спускаемся
[02:24:05.980 --> 02:24:07.980]  и дальше получается, что мы скачем
[02:24:07.980 --> 02:24:09.980]  скачиваем на каждом шаге
[02:24:09.980 --> 02:24:11.980]  глубину увеличиваем
[02:24:11.980 --> 02:24:13.980]  ну, там, доходим докуда и создаем
[02:24:13.980 --> 02:24:15.980]  вершину, да?
[02:24:15.980 --> 02:24:17.980]  тогда получается рассмотрим
[02:24:17.980 --> 02:24:19.980]  зеленый указатель
[02:24:19.980 --> 02:24:21.980]  он изначально вместе с рыжим указателем находится
[02:24:21.980 --> 02:24:23.980]  в коине, то есть глубина 0
[02:24:23.980 --> 02:24:25.980]  он
[02:24:25.980 --> 02:24:27.980]  никогда не может стать глубина
[02:24:27.980 --> 02:24:29.980]  больше чем n, правда?
[02:24:31.980 --> 02:24:33.980]  и при этом оказывается, что
[02:24:33.980 --> 02:24:35.980]  он уменьшается
[02:24:35.980 --> 02:24:37.980]  на каждом шаге
[02:24:37.980 --> 02:24:39.980]  ну, ладно
[02:24:39.980 --> 02:24:41.980]  ну, нельзя сказать, что
[02:24:41.980 --> 02:24:43.980]  на каждом шаге уменьшается не более чем
[02:24:43.980 --> 02:24:45.980]  два раза, но интересно, при каждом
[02:24:45.980 --> 02:24:47.980]  скачке рыжего указателя
[02:24:47.980 --> 02:24:49.980]  по суффиксной ссылке
[02:24:49.980 --> 02:24:51.980]  кое-что всего n, помните, да?
[02:24:51.980 --> 02:24:53.980]  зеленый указатель уменьшается
[02:24:53.980 --> 02:24:55.980]  не более чем
[02:24:55.980 --> 02:24:57.980]  на два
[02:24:57.980 --> 02:24:59.980]  вывод
[02:24:59.980 --> 02:25:01.980]  суммарно спусков
[02:25:01.980 --> 02:25:03.980]  тоже не больше чем 2n
[02:25:03.980 --> 02:25:05.980]  3n, да
[02:25:05.980 --> 02:25:07.980]  ну, от 0 до n и еще там
[02:25:07.980 --> 02:25:09.980]  2n подъема, значит, спусков тоже
[02:25:09.980 --> 02:25:11.980]  не более чем 3n, короче, линии
[02:25:15.980 --> 02:25:17.980]  все
[02:25:17.980 --> 02:25:19.980]  все, это опять же
[02:25:19.980 --> 02:25:21.980]  как в случае
[02:25:21.980 --> 02:25:23.980]  дерева полиэндромов
[02:25:23.980 --> 02:25:25.980]  это будет работать, даже если вы эту суффиксную ссылку
[02:25:25.980 --> 02:25:27.980]  будете каждый раз пересчитывать в тупую
[02:25:27.980 --> 02:25:29.980]  ну, не эту пересчитывать в тупую
[02:25:29.980 --> 02:25:31.980]  а вот эту пересчитывать в тупую
[02:25:31.980 --> 02:25:33.980]  это все равно будет работать за лигию
[02:25:33.980 --> 02:25:35.980]  ну, естественно, вы этим заниматься не будете
[02:25:35.980 --> 02:25:37.980]  но тем не менее
[02:25:37.980 --> 02:25:39.980]  вот и все
[02:25:39.980 --> 02:25:41.980]  вот и весь
[02:25:41.980 --> 02:25:43.980]  в общем-то
[02:25:43.980 --> 02:25:45.980]  алгоритм
[02:25:45.980 --> 02:25:47.980]  даже в общем
[02:25:47.980 --> 02:25:49.980]  не сильно сложно
[02:25:49.980 --> 02:25:51.980]  ну, то есть, нет
[02:25:51.980 --> 02:25:53.980]  вот, конечно, достаточно сложно
[02:25:53.980 --> 02:25:55.980]  это да, но
[02:25:55.980 --> 02:25:57.980]  ну, как бы да
[02:25:57.980 --> 02:25:59.980]  softheap был сложнее, конечно
[02:25:59.980 --> 02:26:01.980]  да
[02:26:01.980 --> 02:26:03.980]  зеленый указатель
[02:26:05.980 --> 02:26:07.980]  да
[02:26:07.980 --> 02:26:09.980]  нет, не только
[02:26:09.980 --> 02:26:11.980]  еще мы есть суффиксная ссылка
[02:26:11.980 --> 02:26:13.980]  зеленый указатель
[02:26:13.980 --> 02:26:15.980]  резкий указатель
[02:26:17.980 --> 02:26:19.980]  и вот эти новые ребра
[02:26:20.380 --> 02:26:22.380]  и зеленый указатель
[02:26:22.380 --> 02:26:24.380]  это, который делает черновую работу
[02:26:24.380 --> 02:26:26.380]  то есть, он скачет вместе с рыжим указателем
[02:26:26.380 --> 02:26:28.380]  когда рыжий указатель хочет скатнуть по суффиксной ссылке
[02:26:28.380 --> 02:26:30.380]  то зеленый указатель murdered
[02:26:30.380 --> 02:26:32.380]  вотiding Yemenique
[02:26:32.380 --> 02:26:34.380]  вот then
[02:26:35.820 --> 02:26:37.820]  то есть, по факту
[02:26:37.820 --> 02:26:39.820]  кому зеленый указатель
[02:26:39.820 --> 02:26:41.820]  не меньше рыжего
[02:26:41.820 --> 02:26:45.820]  Но при этом он ходит за код.
[02:26:53.820 --> 02:26:56.820]  Так что вот такая красота.
[02:26:58.820 --> 02:27:02.820]  В целом у меня, например, получилась...
[02:27:02.820 --> 02:27:04.820]  Весь этот код занял 108 строчек.
[02:27:04.820 --> 02:27:06.820]  Это там включая Include.
[02:27:06.820 --> 02:27:08.820]  А ты еще CanGo нарисовал?
[02:27:08.820 --> 02:27:10.820]  Я все дописал, да. У меня вроде же работает.
[02:27:11.820 --> 02:27:13.820]  Ну, скажем так, да.
[02:27:13.820 --> 02:27:15.820]  Такая проблема есть.
[02:27:15.820 --> 02:27:17.820]  Что алгоритм немножко ровно.
[02:27:17.820 --> 02:27:19.820]  Но для интересующихся...
[02:27:19.820 --> 02:27:22.820]  Тут я уже не расскажу, наверное, дополнительно.
[02:27:22.820 --> 02:27:23.820]  Но скажу так.
[02:27:23.820 --> 02:27:26.820]  В принципе, на Emax есть версия в 30 строчек.
[02:27:29.820 --> 02:27:30.820]  Ну, можно...
[02:27:30.820 --> 02:27:33.820]  Смотрите, тут можно аккуратно думать за счет чего.
[02:27:33.820 --> 02:27:34.820]  Потому что можно там...
[02:27:34.820 --> 02:27:36.820]  Потому что мы тут как бы вот это...
[02:27:36.820 --> 02:27:39.820]  Сранение ребер, вот этот вот Bices, мы вот прописали вот так.
[02:27:40.820 --> 02:27:42.820]  Могли бы писать по-другому.
[02:27:42.820 --> 02:27:44.820]  Получились бы, может быть, другие строчки.
[02:27:44.820 --> 02:27:45.820]  Но тут еще...
[02:27:45.820 --> 02:27:48.820]  Ну, как бы у нас не было цели оптимизировать количество строчек,
[02:27:48.820 --> 02:27:51.820]  у нас была цель, собственно, написать максимально понятный код.
[02:27:52.820 --> 02:27:54.820]  Вот. То есть...
[02:27:54.820 --> 02:27:55.820]  Поэтому...
[02:27:55.820 --> 02:27:57.820]  То есть можете посмотреть там, как написать там...
[02:27:57.820 --> 02:28:00.820]  Действительно, в 30 строчек это вот, может быть, там.
[02:28:00.820 --> 02:28:03.820]  То есть, ну, правда, где-то там просто какие-то две строчки будут там...
[02:28:03.820 --> 02:28:04.820]  Ужиматься, кто-то там...
[02:28:04.820 --> 02:28:06.820]  Еще что-то будет в общем там такое.
[02:28:06.820 --> 02:28:09.820]  Но это больше уже будет походить на черную магию.
[02:28:10.820 --> 02:28:12.820]  Ну да, алгоритм немножко хромост.
[02:28:12.820 --> 02:28:13.820]  И это да.
[02:28:13.820 --> 02:28:15.820]  Суффиксный автомат, конечно, в этом смысле любит больше,
[02:28:15.820 --> 02:28:18.820]  потому что количество строчек у него, конечно, там в два-три раза меньше.
[02:28:22.820 --> 02:28:23.820]  Но тем не менее.
[02:28:24.820 --> 02:28:27.820]  Но тем не менее вот алгоритм, собственно, красивый.
[02:28:27.820 --> 02:28:30.820]  Ну а часто суффиксное дерево это, на самом деле, такое приятное,
[02:28:30.820 --> 02:28:32.820]  приятная, интуитивно-понятная структура.
[02:28:34.820 --> 02:28:37.820]  То есть вот она сама по себе, может быть, интуитивно-понятна,
[02:28:37.820 --> 02:28:39.820]  а суффиксный автомат, на самом деле...
[02:28:39.820 --> 02:28:44.820]  Скажем так, чтобы с ним хорошо работать, нужно стать чуть больше человеком.
[02:28:46.820 --> 02:28:47.820]  Впрочем.
[02:28:47.820 --> 02:28:50.820]  А, ну впрочем, видимо, в следующий раз мы этим, в общем-то, и доедемся.
[02:28:51.820 --> 02:28:53.820]  Ну то есть и так, что у нас будет?
[02:28:53.820 --> 02:28:55.820]  На самом деле, как бы это...
[02:28:55.820 --> 02:28:58.820]  Впервые в истории получилось, что первая суффиксная структура,
[02:28:58.820 --> 02:29:00.820]  которую мы изучили, это суффиксное дерево.
[02:29:01.820 --> 02:29:04.820]  Нет, обычно просто начиналось как-то с суффиксного массива.
[02:29:05.820 --> 02:29:06.820]  Ну вот.
[02:29:07.820 --> 02:29:09.820]  Но как-то вот мы в этот раз пошли так.
[02:29:11.820 --> 02:29:12.820]  Так что вот.
[02:29:13.820 --> 02:29:15.820]  Так, ну на сегодня по-любому все.
