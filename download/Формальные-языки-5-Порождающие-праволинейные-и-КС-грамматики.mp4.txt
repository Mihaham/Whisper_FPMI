[00:00.000 --> 00:13.000]  Сегодня мы начнем говорить вообще про новую тему, которая у нас не было.
[00:13.000 --> 00:17.000]  Давайте, прежде чем мы начнем, вспомним, на чем мы закончили в прошлый раз,
[00:17.000 --> 00:23.000]  потому что это нам будет достаточно важно в контексте сегодняшнего занятия.
[00:23.000 --> 00:37.000]  У нас была лемма о разрастании, мы с вами сказали, что один язык не является автоматом.
[00:37.000 --> 00:56.000]  И нам нужно попытаться сделать такую конструкцию, которая сможет расширить этот пример.
[00:56.000 --> 01:05.000]  Так, товарищи братья и товарищ сосед, вы забыли, где мы находимся, да?
[01:05.000 --> 01:16.000]  Спасибо. В прошлый раз мы с вами построили минимальный PDKI и поняли, что класса языков распознаваемых автоматами достаточно мало.
[01:16.000 --> 01:19.000]  Поэтому нам нужно расширять некоторую концепцию.
[01:19.000 --> 01:26.000]  Сегодня мы с ним будем расширять. Мы ведем понятие порождающих грамматик.
[01:26.000 --> 01:29.000]  То есть мы переходим от более высокого синтеза от регуляра к грамматикам.
[01:29.000 --> 01:33.000]  И наша цель сегодня построить иерархию порождающего грамматику.
[01:33.000 --> 01:39.000]  С кем-то на семинарах мы уже начинали, но те, кто еще контрольную не писал,
[01:39.000 --> 01:44.000]  с теми, кто контрольную писал, вы начнете это делать на следующих семинарах.
[01:44.000 --> 01:47.000]  Вот. Давайте введем в определение.
[01:47.000 --> 01:53.000]  Значит, сразу я параллельно буду тублировать на доске.
[01:53.000 --> 01:59.000]  Значит, порождающая грамматика это у нас четверка, не пятенка.
[02:01.000 --> 02:08.000]  N sigma PS, где N называется множество вспомогательных и нетерминальных символов.
[02:08.000 --> 02:16.000]  Sigma это алфавит, S это стартовый не терминал. То есть то, с чего мы всегда будем начинать.
[02:16.000 --> 02:20.000]  И P это под множество правил.
[02:26.000 --> 02:32.000]  Значит, N умножить на N и объединить sigma.
[02:32.000 --> 02:37.000]  Звездочка. Только там не звездочка, а плюсик.
[02:37.000 --> 02:43.000]  Видите, заметьте, что в определении P тут не звездочка, а плюсик.
[02:47.000 --> 02:52.000]  И вот эти все дичайшие вещи мы будем обозначать греческими буквами.
[02:52.000 --> 02:57.000]  Вот. То есть все правила будут иметь вид у нас.
[02:57.000 --> 03:10.000]  Из альфа будет выходить β, где альфа это вот такая вот штучка, а β предложить вот.
[03:10.000 --> 03:13.000]  Правила буду писать так.
[03:13.000 --> 03:15.000]  Сложный пример.
[03:15.000 --> 03:20.000]  Это вот концепция, именно ворождающая грамматик.
[03:20.000 --> 03:26.000]  Замечу, что здесь может быть какая-то последний звук, и здесь может быть какая-то последний звук.
[03:26.000 --> 03:29.000]  Только я почему-то люди не слышал.
[03:29.000 --> 03:30.000]  Вот.
[03:30.000 --> 03:31.000]  Вот.
[03:31.000 --> 03:32.000]  Вот.
[03:32.000 --> 03:33.000]  Вот.
[03:33.000 --> 03:34.000]  Вот.
[03:34.000 --> 03:35.000]  Вот.
[03:35.000 --> 03:36.000]  Вот.
[03:36.000 --> 03:40.000]  Ну давайте пример какой-нибудь грамматики приведем.
[03:40.000 --> 03:45.000]  Пример контакт ворождающей грамматики.
[03:51.000 --> 03:54.000]  Лизы P.
[03:54.000 --> 03:57.000]  Да хоть что угодно, на самом деле.
[03:57.000 --> 04:00.000]  Все что угодно, что угодно.
[04:01.000 --> 04:04.000]  Да хоть что угодно, на самом деле.
[04:04.000 --> 04:08.000]  Все что угодно, что вычислимо, будет порождающая грамматика.
[04:08.000 --> 04:10.000]  Вот это стукно.
[04:10.000 --> 04:12.000]  С кубочными последствиями.
[04:12.000 --> 04:17.000]  С кубочными последствиями мы разберем позже, это более узкий класс.
[04:17.000 --> 04:19.000]  Чем это?
[04:19.000 --> 04:22.000]  Давайте пример.
[04:24.000 --> 04:27.000]  Там не знаю, А, В, А.
[04:28.000 --> 04:33.000]  Тут пусть будет, А, В у нас будет запрещаться в какой-то ц.
[04:33.000 --> 04:38.000]  А будет с переводителем в какой-то глагах.
[04:38.000 --> 04:40.000]  Я не знаю.
[04:43.000 --> 04:46.000]  Да, будет переводитель в какой-то ц.
[04:46.000 --> 04:47.000]  Да.
[04:47.000 --> 04:50.000]  Что у нас тут N?
[04:54.000 --> 04:55.000]  Значит смотрите.
[04:55.000 --> 04:59.000]  Маленькие группы, это символ алпанито будут.
[05:05.000 --> 05:07.000]  Большие.
[05:10.000 --> 05:13.000]  Будут состоять из-за терминала.
[05:15.000 --> 05:18.000]  Ну, то есть это такая гатаса у нас с вами будет.
[05:21.000 --> 05:23.000]  Так, хорошо.
[05:24.000 --> 05:26.000]  Тогда у нас получается сигма.
[05:26.000 --> 05:28.000]  В нашем случае, чему равняется?
[05:30.000 --> 05:32.000]  Вот, например, это.
[05:35.000 --> 05:36.000]  А?
[05:37.000 --> 05:40.000]  Ну, А маленькая, ц маленькая, D маленькая.
[05:42.000 --> 05:44.000]  А мы маленькая, что нележно.
[05:47.000 --> 05:49.000]  А N большой, что у нас такое?
[05:49.000 --> 05:51.000]  А,
[05:53.000 --> 05:54.000]  А,
[05:56.000 --> 05:57.000]  и?
[05:57.000 --> 05:58.000]  И С.
[05:58.000 --> 05:59.000]  И С.
[05:59.000 --> 06:01.000]  С принадлежит к нам всем.
[06:03.000 --> 06:05.000]  Тут можно поговорить, какие слова тут выводятся.
[06:05.000 --> 06:09.000]  На самом деле, я тут подмашнил, и выводится здесь только одно слово.
[06:10.000 --> 06:11.000]  А,
[06:12.000 --> 06:13.000]  нет, сейчас.
[06:13.000 --> 06:15.000]  С, D, C.
[06:16.000 --> 06:18.000]  И только оно.
[06:24.000 --> 06:26.000]  Давайте подумаем, чем не удобен этот пример?
[06:32.000 --> 06:34.000]  А?
[06:36.000 --> 06:38.000]  А как D, C бывают?
[06:38.000 --> 06:39.000]  А, D, C.
[06:39.000 --> 06:41.000]  А, да, а D, C тоже бывают.
[06:46.000 --> 06:48.000]  Чем не удобен этот пример?
[06:49.000 --> 06:51.000]  Это класс.
[06:54.000 --> 06:56.000]  Да, тут сильно большая неоднозначность,
[06:57.000 --> 07:03.000]  и то, что мы пытаемся раскрыть в левой части, оно состоит из чего-то непонятного перемешки.
[07:05.000 --> 07:09.000]  Да, то есть тут может быть последствия с нитерминалов,
[07:09.000 --> 07:12.000]  может быть последствия с терминалов, нитерминалов и так далее.
[07:12.000 --> 07:15.000]  То есть это максимально недетерминированная фигня.
[07:18.000 --> 07:21.000]  Давайте поймем, как мы эту штуку можем привести в порядок.
[07:28.000 --> 07:30.000]  Не, ну понятно, что мы можем граф построить.
[07:31.000 --> 07:36.000]  Но это вообще нет, чтобы это хоть как-то можно было использовать на практике.
[07:37.000 --> 07:38.000]  А?
[07:40.000 --> 07:44.000]  Можно ввести новые терминалы, но давайте немножко пойдем в другую сторону.
[07:44.000 --> 07:46.000]  Пойдем в сторону ограничения.
[07:50.000 --> 07:52.000]  Ну да, ограничение типа направо пойдем.
[07:56.000 --> 07:57.000]  А?
[08:00.000 --> 08:01.000]  Длину вывода можно ограничить.
[08:01.000 --> 08:03.000]  Да, давайте сделаем позже.
[08:06.000 --> 08:08.000]  Смотрите, к чему проблема.
[08:08.000 --> 08:13.000]  Здесь вот надо, чтобы заменить одну часть на вторую, нам нужно собрать вот такой вот паттерн.
[08:14.000 --> 08:19.000]  А этот паттерн может находиться, ну это здесь в простом примере, паттерн находится несложно.
[08:19.000 --> 08:22.000]  А если мы захотим какой-то более продвинутый пример,
[08:23.000 --> 08:26.000]  то у нас может быть, что нам эту часть надо как-то раскрыть,
[08:26.000 --> 08:29.000]  и после этого только воспользоваться таким примером.
[08:31.000 --> 08:33.000]  Первое ограничение, которое делается,
[08:34.000 --> 08:36.000]  первое ограничение, которое делается,
[08:37.000 --> 08:39.000]  давайте я в слайдах посмотрю, чтобы не путаться.
[08:42.000 --> 08:44.000]  Да, в общем, да.
[08:44.000 --> 08:49.000]  Давайте я немножечко про ограничение сразу поговорю, потом про выводим.
[08:49.000 --> 08:57.000]  Значит первое упрощение, это контекстно-борождающая грамматика.
[09:00.000 --> 09:02.000]  Не, контекстно-зависимая.
[09:03.000 --> 09:10.000]  У них правила будут такие.
[09:14.000 --> 09:16.000]  А фин, а.
[09:24.000 --> 09:26.000]  Вот такого вида все правила будут иметь.
[09:29.000 --> 09:31.000]  Где фин?
[09:33.000 --> 09:35.000]  Дедочкой.
[09:35.000 --> 09:37.000]  А, это не терминал.
[09:39.000 --> 09:41.000]  А си, это тоже вот это вот фигня.
[09:42.000 --> 09:44.000]  Альфа принадлежит.
[09:51.000 --> 09:53.000]  В чем понт?
[09:57.000 --> 10:00.000]  Почему та грамматика не является контекстно-зависимой?
[10:04.000 --> 10:09.000]  Ну да, смотрите, вот это вот пример для того, чтобы вот пофиксить его.
[10:09.000 --> 10:14.000]  То есть вот это вот правило, чтобы оно вошло в контекстно-зависимое,
[10:14.000 --> 10:19.000]  нам нужно написать вот такую вот вещь, чтобы из АВ выводилось АС.
[10:19.000 --> 10:26.000]  То есть у нас было АВС, нам нужно превратить в правило из АВ выводит АС.
[10:26.000 --> 10:29.000]  Да, потому что вы должны сохранять контекст слева.
[10:30.000 --> 10:33.000]  Вот он, контекст слева, мы его должны сохранить.
[10:34.000 --> 10:40.000]  Давайте поймем тогда, как нам надо будет переделать правило из БА переходит в ДЦ.
[10:42.000 --> 10:45.000]  Тут его можно несколькими способами пофиксить.
[10:50.000 --> 10:54.000]  Как это правило можно преобразовать, чтобы эта история стала контекстно-зависимой?
[10:55.000 --> 11:00.000]  Ну мы хотим понять, почему вот эта грамматика не является контекстно-зависимой
[11:00.000 --> 11:03.000]  и построить какой-нибудь пример контекстно-зависимой грамматики.
[11:07.000 --> 11:09.000]  Вот определение.
[11:09.000 --> 11:11.000]  У него все правила имеют вид.
[11:11.000 --> 11:15.000]  ФИАС выводится ФИАС.
[11:15.000 --> 11:18.000]  То есть здесь фишки одинаковые, здесь фишки одинаковые.
[11:18.000 --> 11:21.000]  То есть контекст относительно которого у нас раскрывается на терминал,
[11:21.000 --> 11:23.000]  с левой и с правой он одинаковый.
[11:24.000 --> 11:28.000]  Может быть теперь никакое заменение ФИАС в ДЦ не будет?
[11:30.000 --> 11:33.000]  Мы его заменили вот таким вот Маккадом.
[11:33.000 --> 11:38.000]  Это не точная замена правил грамматики, сразу скажу.
[11:38.000 --> 11:42.000]  А мы здесь говорим следующую фигню.
[11:42.000 --> 11:45.000]  Вот у нас нет терминала Б есть, да?
[11:45.000 --> 11:47.000]  Это значит по определению.
[11:47.000 --> 11:49.000]  У нас вот в правиле только один.
[11:49.000 --> 11:51.000]  Это значит, что нам надо сделать?
[11:51.000 --> 11:54.000]  Мы будем взять слева контекст.
[11:54.000 --> 11:57.000]  Вот ФИАС в нашем случае это А будет.
[11:57.000 --> 12:02.000]  И мы получаем с вами, что относительно того, что мы вводили,
[12:02.000 --> 12:05.000]  должны добавить слева контекст ФИАС.
[12:05.000 --> 12:08.000]  Получается, что здесь у нас должен быть А.
[12:08.000 --> 12:11.000]  Чтобы этот правил был контекст-зависим.
[12:13.000 --> 12:17.000]  Нет, мы не делаем эту штуку эквивалентной, конечно же.
[12:17.000 --> 12:21.000]  Чтобы сделать эквивалентную, это надо постараться.
[12:25.000 --> 12:28.000]  Здесь что мы с вами можем сделать?
[12:33.000 --> 12:35.000]  Ну чтобы контекст сохранился.
[12:35.000 --> 12:39.000]  Смотрите, здесь у нас в качестве А будет либо вот это Б.
[12:39.000 --> 12:43.000]  И тогда у нас это правило можно переписать вот так.
[12:43.000 --> 12:44.000]  Вот так.
[12:44.000 --> 12:47.000]  То есть БА будет выводиться БДЦ.
[12:47.000 --> 12:49.000]  Потому что А контекст.
[12:49.000 --> 12:52.000]  Либо здесь мы можем сказать, что наш терминал это Б.
[12:52.000 --> 12:55.000]  А А это контекст справа.
[12:55.000 --> 12:58.000]  Тогда у нас появляется правило ДЦА.
[13:00.000 --> 13:02.000]  То есть вот он.
[13:02.000 --> 13:04.000]  Тут все это у нас.
[13:04.000 --> 13:06.000]  Вот эта штука.
[13:06.000 --> 13:09.000]  А ФИАС у нас это вот эта штука.
[13:13.000 --> 13:16.000]  Что, разобрались в итоге с охраной, да?
[13:16.000 --> 13:18.000]  Насколько я понял.
[13:23.000 --> 13:24.000]  Так.
[13:24.000 --> 13:26.000]  YouTube, здрасте.
[13:26.000 --> 13:28.000]  Вот это.
[13:28.000 --> 13:30.000]  Примеры строим.
[13:30.000 --> 13:32.000]  Интересные.
[13:32.000 --> 13:33.000]  Так.
[13:33.000 --> 13:36.000]  Понятно, что такое контекстно-зависимая грамматика.
[13:36.000 --> 13:39.000]  И как ее правило выглядит на примере.
[13:40.000 --> 13:41.000]  Угу.
[13:44.000 --> 13:48.000]  Ну, давайте теперь полный пример этой грамматики запишем.
[13:48.000 --> 13:50.000]  Вообще вот тот пример.
[13:51.000 --> 13:53.000]  Который у нас получается.
[13:53.000 --> 13:56.000]  Из С выводится АБА.
[13:58.000 --> 14:00.000]  Дальше.
[14:00.000 --> 14:02.000]  Из АБ.
[14:02.000 --> 14:04.000]  Выводится АС.
[14:04.000 --> 14:06.000]  Ой, АС маленькая.
[14:09.000 --> 14:12.000]  Третье правило нам не нужно переделывать.
[14:17.000 --> 14:20.000]  А вот это давайте переделываем вот так.
[14:24.000 --> 14:27.000]  Вот это пример контекстно-зависимой грамматики.
[14:31.000 --> 14:32.000]  Угу.
[14:32.000 --> 14:36.000]  То есть всегда у вас для терминала есть какой-то контекст.
[14:40.000 --> 14:41.000]  А?
[14:46.000 --> 14:49.000]  А, ну потому что слева пустой, вправо пустой.
[14:51.000 --> 14:52.000]  Вот.
[14:52.000 --> 14:53.000]  Тут АЛЬФ стоит.
[14:53.000 --> 14:55.000]  Тут АЛЬФ в нашем случае это АБА.
[14:56.000 --> 14:57.000]  Нет, нет.
[14:59.000 --> 15:01.000]  Не, мы не делаем проект на грамматику.
[15:01.000 --> 15:03.000]  Так, хорошо.
[15:04.000 --> 15:07.000]  Давайте проверим тогда рубрику интуи...
[15:07.000 --> 15:08.000]  А?
[15:09.000 --> 15:10.000]  Почему?
[15:13.000 --> 15:16.000]  Не, ну последнее правило у нас АЛЬФ это ТС.
[15:16.000 --> 15:17.000]  А?
[15:17.000 --> 15:18.000]  А почему?
[15:18.000 --> 15:20.000]  Слева и справа пустой контекст.
[15:24.000 --> 15:25.000]  Все.
[15:25.000 --> 15:27.000]  То есть здесь все что угодно может быть написано.
[15:27.000 --> 15:29.000]  Главное чтобы если у вас какие-то терминалы
[15:29.000 --> 15:31.000]  что-то написано слева и что-то написано справа,
[15:31.000 --> 15:34.000]  то здесь правая часть справа, оно тоже должно продублироваться.
[15:37.000 --> 15:38.000]  А?
[15:42.000 --> 15:45.000]  Да, пустой контекст слева, а справа контекст А.
[15:50.000 --> 15:52.000]  Ну все равно сложно парсить, да?
[15:53.000 --> 15:54.000]  Согласны?
[15:55.000 --> 15:56.000]  Для человека сложно воспринять.
[15:56.000 --> 15:58.000]  Так, переходим к следующему классу.
[16:03.000 --> 16:05.000]  Класс номер получается.
[16:05.000 --> 16:06.000]  Тут у нас...
[16:06.000 --> 16:09.000]  Давайте вот этот класс нулевой будет у нас.
[16:10.000 --> 16:12.000]  Контексты порождающие.
[16:12.000 --> 16:14.000]  Контексты зависимы первый класс.
[16:14.000 --> 16:17.000]  А второй класс будет контекст свободный.
[16:23.000 --> 16:28.000]  И мы как раз с этим классом будем разбираться очень-очень долго.
[16:28.000 --> 16:32.000]  Что вам не нравится в определенном контексте независимой грамматики?
[16:35.000 --> 16:36.000]  Зависимость от контекста.
[16:36.000 --> 16:37.000]  Зависимость от контекста.
[16:37.000 --> 16:38.000]  Ну давайте его уберем.
[16:40.000 --> 16:42.000]  Значит все файлы будут иметь вид.
[16:48.000 --> 16:49.000]  А альфа?
[16:53.000 --> 16:54.000]  Ведучка.
[16:55.000 --> 16:56.000]  Ведучка.
[16:59.000 --> 17:00.000]  Что, закрытие?
[17:01.000 --> 17:02.000]  Ну давайте подвесим.
[17:03.000 --> 17:04.000]  Так.
[17:05.000 --> 17:11.000]  Пока, скажите какой пример контекста свободной карачки вы знаете, наверное.
[17:13.000 --> 17:15.000]  Вы спустите по поводу этого.
[17:17.000 --> 17:18.000]  А?
[17:19.000 --> 17:20.000]  Да.
[17:20.000 --> 17:21.000]  А?
[17:23.000 --> 17:25.000]  Да, PSP находится здесь.
[17:26.000 --> 17:27.000]  А?
[17:31.000 --> 17:32.000]  Пример.
[17:32.000 --> 17:33.000]  Да?
[17:33.000 --> 17:34.000]  Какой еще пример был?
[17:35.000 --> 17:36.000]  Ардиналы?
[17:36.000 --> 17:37.000]  Нет.
[17:43.000 --> 17:44.000]  PSP.
[17:44.000 --> 17:45.000]  Как строится PSP?
[17:51.000 --> 17:52.000]  Да, смотрите.
[17:52.000 --> 17:53.000]  Первое правило.
[17:53.000 --> 17:54.000]  Засвобуется S он?
[17:56.000 --> 17:57.000]  То есть он пустой вот.
[18:10.000 --> 18:11.000]  Так.
[18:12.000 --> 18:13.000]  Так?
[18:13.000 --> 18:14.000]  S?
[18:15.000 --> 18:18.000]  Тут обозначают либо символ, давайте я скажу вот так.
[18:21.000 --> 18:25.000]  Так алфавит, какой у нас тут?
[18:28.000 --> 18:29.000]  В этом примере.
[18:29.000 --> 18:31.000]  Из каких символов состоит?
[18:33.000 --> 18:35.000]  Левая столбка и правая столбка.
[18:37.000 --> 18:39.000]  А N это S.
[18:41.000 --> 18:42.000]  Вот так.
[18:43.000 --> 18:44.000]  Наоборот.
[18:45.000 --> 18:46.000]  Вот такой пример.
[18:47.000 --> 18:49.000]  И давайте второй пример разберем сразу.
[18:50.000 --> 18:51.000]  А?
[18:51.000 --> 18:52.000]  Epsilon.
[18:52.000 --> 18:54.000]  Epsilon пустой слова.
[18:55.000 --> 18:58.000]  А оно как было пустым словом, так и у нас остается.
[18:59.000 --> 19:00.000]  И пример второй.
[19:01.000 --> 19:02.000]  Давайте придумаем.
[19:04.000 --> 19:08.000]  Давайте подумаем, как N и B в N построить.
[19:20.000 --> 19:21.000]  Давайте начнем со старта.
[19:26.000 --> 19:27.000]  Epsilon.
[19:27.000 --> 19:28.000]  Ага.
[19:29.000 --> 19:31.000]  А если можно поделить его A6?
[19:32.000 --> 19:33.000]  Да.
[19:33.000 --> 19:34.000]  Именно так.
[19:37.000 --> 19:40.000]  Ну на семинарах более формально, покажем как это доказывается.
[19:42.000 --> 19:44.000]  То есть смотрите, что у нас получается.
[19:44.000 --> 19:46.000]  То есть смотрите, что у нас получается.
[19:47.000 --> 19:51.000]  Класс контекстно-свободного грамматика уже шире, чем класс автоматных языков.
[19:54.000 --> 19:56.000]  Ну больше выключение.
[19:58.000 --> 20:00.000]  Ну это мы еще покажем сегодня.
[20:01.000 --> 20:02.000]  Ну такая загвоздь.
[20:03.000 --> 20:12.000]  Давайте так точнее, что у нас есть пример контекстно-свободного языка, который не является автоматным.
[20:15.000 --> 20:17.000]  Да, и вообще он будет шире.
[20:20.000 --> 20:21.000]  Так.
[20:21.000 --> 20:22.000]  Это второй класс.
[20:26.000 --> 20:27.000]  Чем эта штука неудобна?
[20:31.000 --> 20:35.000]  Ну мы сейчас предоставляем, вы в предыдущих рассказали, чем эта штука неудобна.
[20:36.000 --> 20:39.000]  Давайте подумаем здесь, чем эта штука может быть неудобна.
[20:39.000 --> 20:42.000]  Да, вот этот ССС непонятно как ветвится.
[20:45.000 --> 20:49.000]  Да, типа где у нас первая эска заканчивается, где вторая эска заканчивается.
[20:50.000 --> 20:52.000]  Это вопрос однозначности разбора.
[20:53.000 --> 20:54.000]  Мы тоже его поднимать будем.
[20:55.000 --> 20:57.000]  Поэтому будем третий, более простой класс.
[20:57.000 --> 21:00.000]  Поэтому будем третий, более простой класс.
[21:01.000 --> 21:13.000]  Давайте скажем сразу, что у нас сначала будет проводиться какой-то набор не терминалов, а потом будет проводиться какой-то набор терминалов.
[21:14.000 --> 21:23.000]  Ой, точнее, какой-то набор не терминалов, а потом какой-то набор терминалов, символов всего будет, потом не терминалов.
[21:24.000 --> 21:26.000]  И это называется праволинейная грамматика.
[21:26.000 --> 21:50.000]  Правила все имеют такой вид, либо из A в В, либо из A в W.
[21:50.000 --> 21:55.000]  Где AB не терминал В, а В это ВО.
[22:01.000 --> 22:07.000]  Ну то есть мы сразу понимаем, сначала у нас будет набор не терминалов, а потом мы раскрываем это все в В.
[22:08.000 --> 22:09.000]  Что это терминал?
[22:10.000 --> 22:11.000]  Не терминал.
[22:12.000 --> 22:13.000]  Я что-то меняю.
[22:14.000 --> 22:15.000]  Путаю терминал и не терминал.
[22:18.000 --> 22:19.000]  Давайте пример.
[22:20.000 --> 22:25.000]  Можно практично.
[22:34.000 --> 22:35.000]  Есть идея?
[22:38.000 --> 22:39.000]  А?
[22:40.000 --> 22:44.000]  Ну хорошо, давайте просто берем вот такой вот.
[22:45.000 --> 22:50.000]  Да, а сэмплера задается праволинейной грамматикой.
[22:51.000 --> 22:52.000]  Почему?
[22:53.000 --> 22:57.000]  Потому что у вас программа, что у вас может идти?
[22:58.000 --> 22:59.000]  У вас может быть какая-то метка?
[23:00.000 --> 23:06.000]  Ой, точнее, вот это слово у нас свое будет.
[23:07.000 --> 23:11.000]  После этого у нас может быть какое-то правило драматичное.
[23:13.000 --> 23:17.000]  Ну и это там, что-то в конце.
[23:18.000 --> 23:20.000]  Что в конце сэмплера, программа?
[23:21.000 --> 23:22.000]  Находится.
[23:25.000 --> 23:26.000]  А?
[23:27.000 --> 23:30.000]  Ну можно редко, потому что правила.
[23:31.000 --> 23:35.000]  Ну можно сказать, что у нас программа пустым словом заканчивается, и все.
[23:36.000 --> 23:39.000]  Вот эти правила, это как раз все манипуляции с регистрами.
[23:40.000 --> 23:43.000]  Перекините из одного регистр в другой, делайте какую-то операцию.
[23:44.000 --> 23:45.000]  Эти наборы конечные.
[23:46.000 --> 23:52.000]  Плюс количество меток, которые у нас есть в ассендеровской программе, оно тоже ограничено.
[23:53.000 --> 23:56.000]  Потому что размер метки ограничен 30 луней сегодня.
[23:57.000 --> 24:02.000]  Вот эти конечные, эти конечные, по этому количеству правила у нас тут конечные.
[24:06.000 --> 24:07.000]  Вот такой пример.
[24:08.000 --> 24:23.000]  На самом деле мы сейчас построим намного больше препера, потому что мы с вами будем строить эквивалентность этого класса драматики какому-то другому классу языков, которые мы с вами уже знаем.
[24:26.000 --> 24:27.000]  Ага.
[24:28.000 --> 24:30.000]  Понятно? Вот это 4 класса драматики.
[24:31.000 --> 24:32.000]  Повторяю. Контекстно-порождающая.
[24:33.000 --> 24:34.000]  Ой.
[24:35.000 --> 24:39.000]  Просто порождающая, контекстно-зависимая, контекстно-свободная и правая линия.
[24:40.000 --> 24:42.000]  А у порождающих какое особенное свойство?
[24:43.000 --> 24:44.000]  А?
[24:45.000 --> 24:46.000]  А вот какое у порождающих было особенное свойство?
[24:47.000 --> 24:48.000]  Да никакое, там бардак полный.
[24:49.000 --> 24:50.000]  Нет.
[24:51.000 --> 25:00.000]  Вот. Теперь давайте определим термин выводимости слов, опять же, для того, чтобы мы могли с вами все это формально задавать именно штопор.
[25:01.000 --> 25:02.000]  Смотрите.
[25:03.000 --> 25:08.000]  Значит, выводим определение штопора, это опять же, наименьшее рефлексивное отношение.
[25:09.000 --> 25:19.000]  Такое, что для любого правила, которое лежит в нашей громой спе, все, что вы напишите слева и напишите справа, у вас будет выводимость.
[25:20.000 --> 25:22.000]  На что это похоже сильно?
[25:23.000 --> 25:24.000]  Не знаю.
[25:25.000 --> 25:26.000]  Не-не-не.
[25:27.000 --> 25:29.000]  Вот с учетом определений, которые мы давали.
[25:30.000 --> 25:36.000]  На какое похоже? На зависимость на свободность или на этот?
[25:37.000 --> 25:38.000]  На этот зависимость.
[25:39.000 --> 25:40.000]  Так, на этот зависимость.
[25:40.000 --> 25:41.000]  Так, на этот зависимость.
[25:42.000 --> 25:52.000]  Смотрите, штопор мы делаем такое соотношение, что слева и справа мы можем дописывать какое-то контекст, и у нас все с вами будет получаться.
[25:53.000 --> 25:54.000]  Ну давайте пример.
[25:55.000 --> 25:57.000]  Пример штопора напишем с вами.
[26:03.000 --> 26:05.000]  Давайте выведем PSP-шку вот такую.
[26:10.000 --> 26:12.000]  Как мы ее можем вывести?
[26:16.000 --> 26:19.000]  Ну давайте мы начинаем со стартового состояния.
[26:24.000 --> 26:26.000]  Мы можем вывести вот так.
[26:28.000 --> 26:34.000]  Значит у нас есть правило вот такое вот.
[26:36.000 --> 26:38.000]  Дальше что мы можем сделать?
[26:41.000 --> 26:43.000]  Какую-то скобок раскрыть?
[26:44.000 --> 26:46.000]  Да, давайте чуть погромче где-нибудь напишу.
[26:55.000 --> 26:56.000]  Смотрите.
[26:58.000 --> 27:00.000]  Дальше у нас есть такое правило.
[27:00.000 --> 27:01.000]  Такое правило.
[27:05.000 --> 27:10.000]  Поэтому мы можем написать, что контекст SS выводится.
[27:15.000 --> 27:19.000]  То есть вот это у нас с вами PSI, вот этого штучка.
[27:20.000 --> 27:21.000]  И вот это PSI.
[27:22.000 --> 27:23.000]  ФИ пустое.
[27:23.000 --> 27:25.000]  Дальше что мы с вами можем сделать?
[27:28.000 --> 27:30.000]  Да, можем раскрыть второе S.
[27:46.000 --> 27:49.000]  То есть взяли вот эту штучку и подменили вот этой штучкой.
[27:49.000 --> 27:50.000]  Дальше что?
[27:53.000 --> 27:55.000]  Ну теперь нам нужно заменить.
[27:56.000 --> 28:02.000]  У нас есть правило пустое, поэтому я тут уже буду писать по транзитивности.
[28:02.000 --> 28:05.000]  У нас эту штуку выводят вот такую штуку.
[28:05.000 --> 28:10.000]  И дальше мы еще раз заменяем этот контекст.
[28:12.000 --> 28:13.000]  То есть получается...
[28:13.000 --> 28:14.000]  Этот контекст.
[28:16.000 --> 28:22.000]  То есть получается под этой заменой левый контекст это вот эта последовательность,
[28:22.000 --> 28:25.000]  правый контекст это вот эта последовательность.
[28:30.000 --> 28:32.000]  То есть смотрите, что у нас получилось.
[28:33.000 --> 28:36.000]  У нас получилось, что из стартования терминала мы вывели какое-то слово.
[28:36.000 --> 28:37.000]  Вопрос тогда.
[28:37.000 --> 28:40.000]  Как мы можем определить язык, задаваемый грамматикой?
[28:45.000 --> 28:49.000]  Да, все слова, которые выводим из стартового терминала.
[28:51.000 --> 28:53.000]  Ну вот в принципе определение.
[28:54.000 --> 28:59.000]  Слово выводится грамматикой, если из S можно достичь слова W,
[28:59.000 --> 29:02.000]  а из S можно достичь слова D.
[29:02.000 --> 29:05.000]  Если из S можно достичь слова W,
[29:05.000 --> 29:09.000]  а язык распознается по рождаемой грамматикой,
[29:09.000 --> 29:16.000]  если это множество всех слов, которые мы с вами выводим в грамматике.
[29:19.000 --> 29:21.000]  Понятное определение?
[29:23.000 --> 29:27.000]  Так, теперь смотрите, поскольку я немножечко поменял порядок слайдов
[29:27.000 --> 29:31.000]  с методолога видения, давайте вспомним.
[29:34.000 --> 29:38.000]  Эта штука, которую мы с вами задали, это иерархия Охомского.
[29:38.000 --> 29:41.000]  Только она тут, видите, немножко в обратном порядке.
[29:41.000 --> 29:44.000]  То есть сначала идут праволинейные грамматики,
[29:44.000 --> 29:46.000]  контексты свободные, конъективы и порождающие.
[29:46.000 --> 29:50.000]  Мы их с вами разобрали, но здесь по уровню вложенности языков
[29:50.000 --> 29:53.000]  они находятся в обратном порядке.
[29:54.000 --> 29:59.000]  Я думаю, этот слайд мы с вами уже подробно разобрали, со всеми примерами.
[29:59.000 --> 30:04.000]  А теперь, бинго, как это соотносится с историями с автоматами
[30:04.000 --> 30:07.000]  и всякими конструкциями?
[30:07.000 --> 30:10.000]  А вот так это соотносится.
[30:13.000 --> 30:17.000]  Значит, смотрите, праволинейная грамматика это, на самом деле,
[30:17.000 --> 30:20.000]  ничто иное, как автоматы.
[30:20.000 --> 30:26.000]  То есть любой язык, который распознается праволинейной грамматикой,
[30:26.000 --> 30:29.000]  можно распознать недетерминированным конечным автоматом.
[30:29.000 --> 30:31.000]  И обратно.
[30:31.000 --> 30:37.000]  А любой контекстно свободный язык распознается автоматами с магазинной памятью.
[30:38.000 --> 30:40.000]  Что такое магазин?
[30:43.000 --> 30:45.000]  Не, не, не.
[30:46.000 --> 30:48.000]  Да, да, да.
[30:51.000 --> 30:54.000]  Да, да, да. Ну, там получается это.
[30:54.000 --> 30:56.000]  Как вы можете себе представить?
[30:56.000 --> 30:59.000]  Пока что мы не воем поделения, будем поделить это позже.
[30:59.000 --> 31:03.000]  Представьте себе у вас автомат, которому сбоку стэк пределом.
[31:03.000 --> 31:07.000]  Вот, и вы туда что-то можете пихать и выпихивать.
[31:12.000 --> 31:14.000]  Дальше сложнее.
[31:14.000 --> 31:19.000]  Контекст зависимой грамматики задают линейно-ограниченные,
[31:19.000 --> 31:21.000]  недетерминированные машины тюринга.
[31:21.000 --> 31:26.000]  То есть это машины тюринга, у которых вы в каждый момент времени
[31:26.000 --> 31:31.000]  можете располагать только каким-то количеством символов
[31:31.000 --> 31:34.000]  слева от ленты и справа от ленты.
[31:37.000 --> 31:41.000]  То есть обычная лента тюринга, она бесконечна в обе стороны.
[31:42.000 --> 31:50.000]  А здесь такая лента тюринга недоделанная, в которой слева и справа есть ограничения.
[31:50.000 --> 31:52.000]  И вы не можете за них уходить.
[31:57.000 --> 32:00.000]  Ну да, тут практически конечная.
[32:00.000 --> 32:03.000]  То есть это абстракция, которая может есть.
[32:03.000 --> 32:06.000]  То есть вы живете в каких-то рамках.
[32:06.000 --> 32:08.000]  А?
[32:10.000 --> 32:16.000]  А недетерминированная это история про то, что в каждый момент времени
[32:16.000 --> 32:19.000]  вы по сути можете делать разный набор операций.
[32:19.000 --> 32:24.000]  И потом, если у вас будет приходить какой-то ответ в результате,
[32:24.000 --> 32:26.000]  то вы выбираете один из них.
[32:26.000 --> 32:34.000]  Это также, я не знаю, рассказывал ли вам Тенил Владимирович, по-моему,
[32:34.000 --> 32:36.000]  про класс NP.
[32:39.000 --> 32:41.000]  Да, два.
[32:41.000 --> 32:45.000]  Это в общем история N, это не нот-полиномиал,
[32:45.000 --> 32:48.000]  а недетерминированно-полиномиальный алгоритм.
[32:48.000 --> 32:51.000]  То есть это алгоритм, который можно распознать
[32:51.000 --> 32:55.000]  на недетерминированной машине тюринга за полиномиальное время.
[32:55.000 --> 32:58.000]  Недетерминированную машину тюринга вы там по сути можете
[32:58.000 --> 33:00.000]  такое дерево ветвящееся сделать.
[33:00.000 --> 33:03.000]  А что сделать, если я буду двигать либо коретку влево,
[33:03.000 --> 33:06.000]  либо коретка вправо, либо еще что-то?
[33:07.000 --> 33:11.000]  То есть такое поведение, недетерминированное.
[33:11.000 --> 33:14.000]  Потому что вообще, по идее, если вы работаете с машиной тюринга,
[33:14.000 --> 33:16.000]  она является детерминированной.
[33:16.000 --> 33:19.000]  То есть у вас вы приходите в какое-то состояние,
[33:19.000 --> 33:22.000]  вы сразу понимаете, что надо с ним делать.
[33:22.000 --> 33:24.000]  Оттуда вы мешаете.
[33:24.000 --> 33:27.000]  Ну и порождающая грамматики это сыр в барах лам,
[33:27.000 --> 33:31.000]  поэтому он задается классической машиной тюринга.
[33:36.000 --> 33:39.000]  То есть все, что вы можете задать машин тюринга,
[33:39.000 --> 33:42.000]  что может задать порождающая грамматика.
[33:42.000 --> 33:46.000]  Как вы думаете, какие из этих фактов эквивалентности
[33:46.000 --> 33:49.000]  мы с вами будем показывать в ходе курса?
[33:49.000 --> 33:52.000]  Ну первые две мы с вами будем показывать,
[33:52.000 --> 33:55.000]  остальные две это вообще дичь сложная.
[33:55.000 --> 33:57.000]  Поэтому их за троих не будем.
[33:57.000 --> 34:00.000]  Вот. И сегодня как раз давайте сейчас сделаем небольшой перерыв.
[34:00.000 --> 34:03.000]  И как раз после перерыва мы покажем,
[34:03.000 --> 34:06.000]  почему класс правлений на грамматике эквивалентен
[34:06.000 --> 34:08.000]  классу недетерминированных автоматов.
[34:08.000 --> 34:11.000]  Давайте потихоньку продолжать.
[34:11.000 --> 34:14.000]  Сегодня мы зададим вопрос,
[34:14.000 --> 34:17.000]  как вы думаете, как вы думаете,
[34:17.000 --> 34:20.000]  а сегодня наша конечная цель
[34:20.000 --> 34:23.000]  доказать следующую теорию.
[34:23.000 --> 34:26.000]  Что множество автоматик языков
[34:26.000 --> 34:29.000]  совпадает с множеством языков,
[34:29.000 --> 34:32.000]  задаваемых праволинейной грамматикой.
[34:32.000 --> 34:35.000]  То есть для любого НКА
[34:35.000 --> 34:38.000]  N
[34:40.000 --> 34:43.000]  Сейчас.
[34:47.000 --> 34:50.000]  Давайте вот так.
[34:57.000 --> 35:00.000]  Значит, для любого языка L
[35:05.000 --> 35:08.000]  существует НКА N
[35:08.000 --> 35:11.000]  такой, что L равно L от M,
[35:11.000 --> 35:14.000]  тогда и только тогда,
[35:14.000 --> 35:17.000]  когда существует праволинейная грамматика G,
[35:25.000 --> 35:28.000]  такая, что L равно L от G.
[35:28.000 --> 35:31.000]  Вот такой факт мы сегодня с вами доказывать будем.
[35:31.000 --> 35:34.000]  Итак, идея,
[35:34.000 --> 35:37.000]  давайте сначала расскажу идею доказательства.
[35:37.000 --> 35:40.000]  Мы будем доказать две стороны.
[35:40.000 --> 35:43.000]  Первая, из грамматики будем показывать,
[35:43.000 --> 35:46.000]  вот, для любой грамматики существует автомат.
[35:46.000 --> 35:49.000]  А потом, для любого автомата существует грамматика.
[35:49.000 --> 35:52.000]  Вот смотрите, грамматика, у нее интересные правила.
[35:52.000 --> 35:55.000]  Вы можете заметить,
[35:55.000 --> 35:58.000]  что у нас правила всегда
[35:58.000 --> 36:01.000]  стоят таким образом,
[36:01.000 --> 36:04.000]  что у нас сначала идет не терминал,
[36:04.000 --> 36:07.000]  а потом идет только правила слова
[36:07.000 --> 36:10.000]  и потом правила грамматики.
[36:10.000 --> 36:13.900]  для всех таких правил
[36:13.900 --> 36:18.000]  давайте я напишу идея сначала
[36:18.000 --> 36:23.000]  что для всех правил из A следует WB
[36:23.000 --> 36:25.000]  мы будем делать преобразование
[36:25.000 --> 36:29.000]  автомат, который будет из A
[36:29.000 --> 36:34.000]  по W переход в B
[36:34.000 --> 36:39.000]  а для такого правила
[36:39.000 --> 36:43.000]  у нас будет переход такой
[36:43.000 --> 36:46.000]  из A по слову WB
[36:46.000 --> 36:49.000]  мы перейдем в какую-нибудь вершину
[36:49.000 --> 36:54.000]  которую мы назовем стоковой вершиной
[36:54.000 --> 37:01.000]  потому что там на нем слово не заканчивается
[37:01.000 --> 37:04.000]  ну немножко небольшая магия
[37:04.000 --> 37:08.000]  с тем как эту всю конструкцию переставить
[37:08.000 --> 37:10.000]  теперь давайте наверное формально начнем
[37:10.000 --> 37:14.000]  записываю доказательства
[37:14.000 --> 37:19.000]  давайте я тут на 3 части доску поделу
[37:19.000 --> 37:21.000]  у нас ватерлиния
[37:21.000 --> 37:26.000]  итак, доказательства
[37:26.000 --> 37:28.000]  сначала хочу спросить, идея эта понятна?
[37:28.000 --> 37:30.000]  в чем мы делали?
[37:30.000 --> 37:32.000]  человек формально доказательств
[37:32.000 --> 37:35.000]  из грамматики мусульмана
[37:35.000 --> 37:40.000]  пусть у нас l равно lg
[37:40.000 --> 37:44.000]  где этот набор n сильно появится
[37:44.000 --> 37:57.000]  тогда построим граммат автомат m
[37:57.000 --> 37:59.000]  в котором состояние будут?
[37:59.000 --> 38:00.000]  какие?
[38:00.000 --> 38:09.000]  какое множество?
[38:09.000 --> 38:14.000]  не терминальные и объединить в ту вершину стоковую
[38:14.000 --> 38:21.000]  которую мы с вами заводим
[38:21.000 --> 38:26.000]  гаварит тут такой же
[38:26.000 --> 38:29.000]  дельта штрих определим
[38:29.000 --> 38:33.000]  стартовое состояние какое будет?
[38:33.000 --> 38:35.000]  s
[38:35.000 --> 38:37.000]  завершающее
[38:37.000 --> 38:40.000]  может завершать состояние
[38:40.000 --> 38:41.000]  сток
[38:41.000 --> 38:47.000]  может и сток
[38:47.000 --> 38:52.000]  где дельта штрих
[38:52.000 --> 38:59.000]  равняется множеству тех правил
[38:59.000 --> 39:02.000]  a, b
[39:02.000 --> 39:05.000]  идет переход по b
[39:05.000 --> 39:09.000]  при условии того, что у нас
[39:09.000 --> 39:13.000]  с a, b ближе к грамматике
[39:13.000 --> 39:16.000]  и объединить
[39:16.000 --> 39:19.000]  с множеством
[39:19.000 --> 39:22.000]  a, b
[39:22.000 --> 39:26.000]  переходящих в сток
[39:26.000 --> 39:34.000]  если у нас было правило без a, b
[39:34.000 --> 39:39.000]  это формальное построение
[39:39.000 --> 39:50.000]  что нам надо показать?
[39:50.000 --> 39:59.000]  да, нам нужно показать, что
[39:59.000 --> 40:02.000]  как мы это делаем?
[40:02.000 --> 40:13.000]  давайте сначала из l от g
[40:13.000 --> 40:16.000]  каким образом?
[40:16.000 --> 40:19.000]  вспоминаем наши любимые слова
[40:19.000 --> 40:23.000]  индукция, по какому параметру?
[40:23.000 --> 40:26.000]  да, и нечего
[40:26.000 --> 40:29.000]  нет
[40:30.000 --> 40:35.000]  по количеству замен штопора
[40:35.000 --> 40:38.000]  помните, мы опять штопор определили
[40:38.000 --> 40:50.000]  по тлене вывода грамматики
[40:50.000 --> 40:54.000]  я напишу количество штопора
[40:54.000 --> 40:57.000]  и пусть будущее поколение разгадывает
[40:58.000 --> 41:03.000]  смотрите, идея сразу
[41:03.000 --> 41:06.000]  вот такие нам надо вещи показать
[41:06.000 --> 41:09.000]  формально
[41:09.000 --> 41:13.000]  если у нас есть вывод грамматики
[41:13.000 --> 41:21.000]  вот такие два факта
[41:21.000 --> 41:41.000]  скажите, почему l от g совпадающие с l от m обозначают эти два утверждения?
[41:41.000 --> 41:44.000]  по факту нам нужно показать
[41:44.000 --> 41:49.000]  язык задаваемый грамматикой лежит в языке задаваемым автоматом
[41:49.000 --> 41:57.000]  и это то же самое, что будет
[41:57.000 --> 42:04.000]  если у нас l от v принадлежит l от g
[42:04.000 --> 42:06.000]  тогда из этого что следует?
[42:06.000 --> 42:16.000]  что у нас с вами из s существует вывод слова дубль v в грамматике g
[42:16.000 --> 42:22.000]  и тогда нам нужно с вами некоторые выводы пропустить
[42:22.000 --> 42:40.000]  и получить из этого, что s, ε выводят в автомате m конфигурацию столка ε
[42:40.000 --> 42:50.000]  и из этого будет следовать, что слово лежит в языке задаваемой грамматикой
[42:50.000 --> 43:08.000]  понимаете откуда это будет следовать?
[43:08.000 --> 43:12.000]  то есть нам нужно вот эту цепочку рассуждения установить
[43:12.000 --> 43:16.000]  и нас требует показать факт
[43:16.000 --> 43:21.000]  можно сказать вот тот факт, который есть
[43:21.000 --> 43:25.000]  но дополнительно нам надо будет с вами показать верхний факт
[43:25.000 --> 43:29.000]  давайте его покажем
[43:29.000 --> 43:46.000]  покажем, что если из c у нас идет вывод какой-то дубль v
[43:46.000 --> 43:51.000]  то это в грамматике g
[43:51.000 --> 43:56.000]  то из конфигурации c
[43:56.000 --> 44:00.000]  что у нас получается?
[44:00.000 --> 44:07.000]  c w будет выходить в грамматике m d ε
[44:07.000 --> 44:12.000]  и вот это мы тоже можем показывать индукции по длине вывода
[44:12.000 --> 44:15.000]  согласны?
[44:15.000 --> 44:20.000]  давайте вот тут я поставлю заказ шагов
[44:20.000 --> 44:25.000]  и тогда у нас индукция покажется
[44:25.000 --> 44:32.000]  база к чему равняется?
[44:45.000 --> 44:49.000]  а?
[44:49.000 --> 44:53.000]  нет, за 0 сложно
[44:53.000 --> 44:55.000]  не, не, не
[44:55.000 --> 44:57.000]  а, да, слушайте, да, реально
[44:57.000 --> 45:02.000]  давайте k равно 0 и k равно 1 тогда
[45:02.000 --> 45:06.000]  значит k равно 0, тогда что у нас получается?
[45:06.000 --> 45:14.000]  из c за 0 шагов мы можем вывести c
[45:14.000 --> 45:16.000]  только
[45:16.000 --> 45:21.000]  а из этого что следует?
[45:21.000 --> 45:24.000]  из этого следует, что чему наше слово w равняется
[45:24.000 --> 45:26.000]  в данном контексте?
[45:26.000 --> 45:30.000]  то что ему слово
[45:30.000 --> 45:33.000]  и из этого получается как раз по определению
[45:33.000 --> 45:40.000]  что мы из состояния c никуда с вами не переходим
[45:40.000 --> 45:44.000]  ничего не считываем
[45:44.000 --> 45:47.000]  так, наверное, тут даже переход нам
[45:47.000 --> 45:50.000]  даже базы для карамонной единицы проверять не надо будет
[45:50.000 --> 46:01.000]  давайте сразу тогда перейдем к переходу
[46:01.000 --> 46:08.000]  итак, переход
[46:08.000 --> 46:10.000]  у нас с вами из c
[46:10.000 --> 46:14.000]  выводится слово w в д
[46:14.000 --> 46:20.000]  заказ шагов
[46:20.000 --> 46:24.000]  тут мы иногда пишем символ кар
[46:24.000 --> 46:30.000]  это вопрос, как мы это могли получить?
[46:30.000 --> 46:35.000]  этот переход заказ шагов
[46:35.000 --> 46:41.000]  да, смотрите, тогда у нас
[46:41.000 --> 46:46.000]  существует такое е, у и в
[46:46.000 --> 46:49.000]  что?
[46:49.000 --> 46:53.000]  из c мы за k-1 шаг
[46:53.000 --> 46:57.000]  вывели слово
[46:57.000 --> 47:00.000]  у
[47:00.000 --> 47:02.000]  е
[47:02.000 --> 47:07.000]  если стоит неусловно единица
[47:07.000 --> 47:13.000]  а дальше за один шаг мы с вами приводили это в и в в
[47:13.000 --> 47:18.000]  господи, какие у нас сегодня абстракции
[47:18.000 --> 47:28.000]  скажите, чему равняется w?
[47:28.000 --> 47:38.000]  тогда, по предположению, что мы с вами должны показать?
[47:38.000 --> 47:51.000]  что мы знаем с вами?
[47:51.000 --> 47:53.000]  это что у нас?
[47:53.000 --> 47:56.000]  почему у нас эквалентность?
[47:56.000 --> 47:58.000]  а?
[47:58.000 --> 48:05.000]  да
[48:05.000 --> 48:13.000]  а здесь у нас получается есть правило из е в д
[48:13.000 --> 48:18.000]  следовательно, из е в д мы можем вывести с вами
[48:19.000 --> 48:24.000]  д
[48:24.000 --> 48:30.000]  и тогда у нас получается как раз тот переход, который мы хотели с вами
[48:30.000 --> 48:33.000]  по транзитивности
[48:33.000 --> 48:38.000]  из с у в, который равняется w
[48:38.000 --> 48:44.000]  мы выводим с вами е
[48:44.000 --> 48:46.000]  е только д
[48:52.000 --> 48:54.000]  так, честно?
[48:54.000 --> 48:56.000]  вроде честно получилось
[48:56.000 --> 49:01.000]  мы считывали, что у нас есть право из е
[49:01.000 --> 49:04.000]  ну да
[49:04.000 --> 49:06.000]  сейчас
[49:06.000 --> 49:08.000]  мы же это умеем делать
[49:08.000 --> 49:10.000]  давайте когда это
[49:10.000 --> 49:14.000]  возьмем еще один шаг
[49:14.000 --> 49:18.000]  значит с у получается вот так
[49:18.000 --> 49:22.000]  д е в
[49:22.000 --> 49:24.000]  и вот тут получается д е в
[49:24.000 --> 49:27.000]  вот так это умеем делать
[49:27.000 --> 49:30.000]  по свойственной конфигурации
[49:30.000 --> 49:33.000]  так, теперь дальше
[49:33.000 --> 49:38.000]  то есть вот этот факт мы с вами доказали
[49:40.000 --> 49:46.000]  так, теперь давайте покажем факт
[49:46.000 --> 49:54.000]  что если у нас из с выводится какое-то слово w, то здесь мы приходим в сток
[49:54.000 --> 49:58.000]  так, где писать?
[49:58.000 --> 50:00.000]  слева можно писать?
[50:00.000 --> 50:02.000]  будем слева писать?
[50:02.000 --> 50:04.000]  нормально
[50:10.000 --> 50:20.000]  так, вопрос
[50:20.000 --> 50:28.000]  если у нас из с выводится слово w
[50:28.000 --> 50:33.000]  то из с, значит, аж слово w
[50:33.000 --> 50:35.000]  мы переходим всегда
[50:41.000 --> 50:43.000]  100 тепсов
[50:43.000 --> 50:45.000]  так, без этого
[50:48.000 --> 50:50.000]  это почему?
[50:52.000 --> 50:58.000]  вопрос, у нас есть переход из стока куда-нибудь?
[50:58.000 --> 51:04.000]  в нашу конструкцию автомата?
[51:04.000 --> 51:07.000]  нет, да?
[51:07.000 --> 51:09.000]  значит, смотрите
[51:09.000 --> 51:11.000]  тогда что получается?
[51:11.000 --> 51:13.000]  так как
[51:17.000 --> 51:19.000]  так как в сток нет перехода
[51:23.000 --> 51:27.000]  то существует такая решенная емм
[51:27.000 --> 51:29.000]  что
[51:29.000 --> 51:33.000]  мы из с w
[51:33.000 --> 51:35.000]  переходим к е
[51:35.000 --> 51:39.000]  какое-то слово w
[51:39.000 --> 51:41.000]  и делаем это за камеру с одним переход
[51:41.000 --> 51:43.000]  а здесь мы это делаем за один переход
[51:43.000 --> 51:45.000]  потому что мы попадаем
[51:45.000 --> 51:50.000]  это вот как раз путь, который у нас с вами работает в стоковой решении
[51:54.000 --> 51:56.000]  ой, типа, а что я решу?
[51:56.000 --> 51:58.000]  нет, так нельзя
[51:58.000 --> 52:00.000]  так лопаться я не смогу
[52:02.000 --> 52:04.000]  извиняйте
[52:04.000 --> 52:10.000]  значит, из с мы за камеру с одним переходим
[52:10.000 --> 52:14.000]  переходим к какую-то решению у е
[52:14.000 --> 52:22.000]  а из е мы читаем за один переход у в
[52:22.000 --> 52:24.000]  вот так
[52:24.000 --> 52:26.000]  и сначала у нас е
[52:26.000 --> 52:28.000]  е
[52:32.000 --> 52:34.000]  вот так
[52:38.000 --> 52:40.000]  тогда что у нас получается?
[52:44.000 --> 52:46.000]  тогда
[52:46.000 --> 52:48.000]  первое
[52:48.000 --> 52:50.000]  из с
[52:50.000 --> 52:51.000]  в
[52:51.000 --> 52:53.000]  тогда мы можем перейти
[52:53.000 --> 52:55.000]  по тому факту, который у нас был уже
[52:55.000 --> 52:57.000]  в
[52:57.000 --> 52:59.000]  е, в
[52:59.000 --> 53:01.000]  а из этой штуки
[53:01.000 --> 53:03.000]  мы можем перейти уже в сток
[53:03.000 --> 53:05.000]  е
[53:05.000 --> 53:07.000]  по определению
[53:09.000 --> 53:11.000]  по определению правил
[53:11.000 --> 53:13.000]  по тому правилу, который у нас был
[53:13.000 --> 53:15.000]  давайте мы его подначим 2
[53:15.000 --> 53:17.000]  вытянем
[53:21.000 --> 53:23.000]  вытянем
[53:27.000 --> 53:29.000]  понятно?
[53:29.000 --> 53:31.000]  ну то есть чисто
[53:31.000 --> 53:33.000]  чисто математически формальная манипуляция
[53:35.000 --> 53:37.000]  ну тогда у нас получается как раз
[53:39.000 --> 53:41.000]  давайте
[53:41.000 --> 53:43.000]  вот сразу что
[53:43.000 --> 53:45.000]  поставим
[53:47.000 --> 53:49.000]  а вот этот факт у нас
[53:49.000 --> 53:51.000]  будет
[53:55.000 --> 53:57.000]  что нам нужно поставить
[53:57.000 --> 53:59.000]  тогда
[53:59.000 --> 54:01.000]  чтобы получить требуемое состояние
[54:13.000 --> 54:15.000]  вместо с что нам нужно поставить
[54:15.000 --> 54:17.000]  чтобы мы получили с вами
[54:17.000 --> 54:19.000]  тот факт
[54:19.000 --> 54:21.000]  который мы хотим с вами показать
[54:25.000 --> 54:27.000]  вот этот вот
[54:29.000 --> 54:31.000]  да
[54:39.000 --> 54:41.000]  из этого мы получаем что
[54:41.000 --> 54:43.000]  из этой штуки
[54:43.000 --> 54:45.000]  будет наладиться
[54:47.000 --> 54:49.000]  по-первых
[54:49.000 --> 54:51.000]  у меня в этом означает
[54:51.000 --> 54:53.000]  что
[55:01.000 --> 55:03.000]  это в одну сторону
[55:03.000 --> 55:05.000]  еще 3 стороны
[55:07.000 --> 55:09.000]  ну давайте
[55:09.000 --> 55:11.000]  может быть подускоримся
[55:11.000 --> 55:13.000]  так, поэтому пойдемте переходом
[55:13.000 --> 55:15.000]  так, что мы стерем
[55:15.000 --> 55:17.000]  правила не стирать
[55:19.000 --> 55:21.000]  а стоп
[55:21.000 --> 55:23.000]  это что мы показали с вами
[55:23.000 --> 55:25.000]  а мы уже все показали
[55:25.000 --> 55:27.000]  да
[55:27.000 --> 55:29.000]  а мы показали что lg лежит в lm
[55:29.000 --> 55:31.000]  теперь нам нужно показать что lm лежит в lg
[55:37.000 --> 55:39.000]  ну поехали
[55:45.000 --> 55:47.000]  вот
[55:57.000 --> 55:59.000]  опять же давайте исследовать
[55:59.000 --> 56:01.000]  что значит что v лежит в lm
[56:15.000 --> 56:17.000]  да
[56:17.000 --> 56:19.000]  значит
[56:19.000 --> 56:21.000]  получаем что
[56:21.000 --> 56:23.000]  из s
[56:23.000 --> 56:25.000]  из s
[56:25.000 --> 56:27.000]  мы можем попасть
[56:27.000 --> 56:29.000]  в строк прочта
[56:29.000 --> 56:31.000]  оставив конфигурации epsilon
[56:33.000 --> 56:35.000]  да
[56:35.000 --> 56:37.000]  а
[56:37.000 --> 56:39.000]  потому что я тупой
[56:41.000 --> 56:43.000]  да, немного что
[56:43.000 --> 56:45.000]  так
[56:45.000 --> 56:47.000]  теперь что нам нужно показать
[56:47.000 --> 56:49.000]  нам нужно на самом деле тот же факт показать
[56:49.000 --> 56:51.000]  который мы с вами уже показывали
[56:51.000 --> 56:53.000]  значит нам
[56:55.000 --> 56:57.000]  покажем
[56:59.000 --> 57:01.000]  что если
[57:01.000 --> 57:03.000]  из c w
[57:03.000 --> 57:05.000]  мы выводим
[57:05.000 --> 57:07.000]  d epsilon
[57:07.000 --> 57:09.000]  в автомате m
[57:09.000 --> 57:11.000]  то
[57:11.000 --> 57:13.000]  d выводится
[57:13.000 --> 57:15.000]  vd
[57:15.000 --> 57:17.000]  в грамматике g
[57:17.000 --> 57:19.000]  это как мы показывали
[57:23.000 --> 57:25.000]  индукция, почему
[57:25.000 --> 57:27.000]  да
[57:27.000 --> 57:29.000]  индукция по длине пути в автомате
[57:41.000 --> 57:43.000]  давайте
[57:43.000 --> 57:45.000]  вот тут справа на доске
[57:45.000 --> 57:47.000]  как раз пытаемся это сделать
[57:47.000 --> 57:49.000]  база индукции
[57:59.000 --> 58:01.000]  по длине пути k
[58:05.000 --> 58:07.000]  база чему равняется
[58:07.000 --> 58:09.000]  ага
[58:09.000 --> 58:11.000]  тогда что у нас получается с вами
[58:15.000 --> 58:17.000]  за ноль переходов мы из c переходим в d
[58:17.000 --> 58:19.000]  а слово w пишем на epsilon
[58:19.000 --> 58:21.000]  ну из этого будет следовать что
[58:21.000 --> 58:23.000]  c равно d
[58:23.000 --> 58:25.000]  w равно epsilon
[58:25.000 --> 58:27.000]  ну вот
[58:27.000 --> 58:29.000]  из c мы можем вывести g
[58:29.000 --> 58:31.000]  в грамматике g
[58:31.000 --> 58:33.000]  от слова c
[58:33.000 --> 58:35.000]  ничего сложного
[58:35.000 --> 58:37.000]  ну вот
[58:37.000 --> 58:39.000]  пусть у нас
[58:39.000 --> 58:41.000]  с вами был переход
[58:41.000 --> 58:43.000]  за k раз
[58:43.000 --> 58:45.000]  и для меньше всех верно
[58:45.000 --> 58:47.000]  тогда у нас получается
[58:47.000 --> 58:49.000]  что существует e
[58:49.000 --> 58:51.000]  и u
[58:51.000 --> 58:53.000]  опять же
[58:53.000 --> 58:55.000]  такие что
[58:55.000 --> 58:57.000]  из c w
[58:57.000 --> 58:59.000]  мы можем прочитать
[58:59.000 --> 59:01.000]  с вами какой-то кусок
[59:01.000 --> 59:03.000]  вот
[59:03.000 --> 59:05.000]  оставить тут только дубль u
[59:05.000 --> 59:07.000]  вот это за k есть один переход
[59:07.000 --> 59:09.000]  а тут за один переход мы с вами
[59:09.000 --> 59:11.000]  делаем переход в
[59:11.000 --> 59:13.000]  d epsilon
[59:15.000 --> 59:17.000]  тогда что мы с вами получаем
[59:31.000 --> 59:33.000]  ага
[59:33.000 --> 59:35.000]  да, давайте
[59:35.000 --> 59:37.000]  обозначим w
[59:37.000 --> 59:39.000]  равно w
[59:39.000 --> 59:41.000]  тогда
[59:41.000 --> 59:43.000]  что по предположению индукции
[59:43.000 --> 59:45.000]  что мы получаем
[59:45.000 --> 59:47.000]  ага
[59:47.000 --> 59:49.000]  из c что
[59:49.000 --> 59:51.000]  и правила w
[59:51.000 --> 59:53.000]  а
[59:53.000 --> 59:55.000]  из c что
[59:55.000 --> 59:57.000]  и правила w
[59:57.000 --> 59:59.000]  а
[59:59.000 --> 01:00:01.000]  из
[01:00:03.000 --> 01:00:05.000]  поскольку у нас
[01:00:07.000 --> 01:00:09.000]  получается
[01:00:09.000 --> 01:00:11.000]  из e по u переход в d есть
[01:00:11.000 --> 01:00:13.000]  то мы получаем что
[01:00:13.000 --> 01:00:15.000]  из e у нас есть переход в u d
[01:00:15.000 --> 01:00:17.000]  из этого
[01:00:17.000 --> 01:00:19.000]  по транзитивности мы с вами получаем
[01:00:19.000 --> 01:00:21.000]  что из c мы можем вывести
[01:00:21.000 --> 01:00:23.000]  в u d
[01:00:23.000 --> 01:00:25.000]  которая у нас в d
[01:00:25.000 --> 01:00:27.000]  вроде
[01:00:27.000 --> 01:00:29.000]  чисто получилось
[01:00:29.000 --> 01:00:31.000]  а
[01:00:33.000 --> 01:00:35.000]  где
[01:00:39.000 --> 01:00:41.000]  что
[01:00:45.000 --> 01:00:47.000]  да ничего
[01:00:47.000 --> 01:00:49.000]  я что-то не понимаю
[01:00:51.000 --> 01:00:53.000]  у нас правила сейчас есть
[01:00:55.000 --> 01:00:57.000]  у нас есть правило что если
[01:00:57.000 --> 01:00:59.000]  у нас есть вот такой вот переход
[01:01:01.000 --> 01:01:03.000]  но у нас правила грамматики
[01:01:03.000 --> 01:01:05.000]  правила в автомате есть из e по u
[01:01:05.000 --> 01:01:07.000]  переход в d
[01:01:07.000 --> 01:01:09.000]  как это получается когда из e
[01:01:09.000 --> 01:01:11.000]  у нас есть переход
[01:01:11.000 --> 01:01:13.000]  в грамматики вот такой вот
[01:01:17.000 --> 01:01:19.000]  так, ну хорошо
[01:01:19.000 --> 01:01:21.000]  теперь нам нужно показать
[01:01:21.000 --> 01:01:23.000]  следующий факт
[01:01:23.000 --> 01:01:25.000]  давайте чуть попроще
[01:01:25.000 --> 01:01:27.000]  значит
[01:01:27.000 --> 01:01:29.000]  что такое
[01:01:29.000 --> 01:01:31.000]  опять же
[01:01:31.000 --> 01:01:33.000]  так как
[01:01:37.000 --> 01:01:39.000]  в исток
[01:01:39.000 --> 01:01:41.000]  и нет переходов
[01:01:47.000 --> 01:01:49.000]  то
[01:01:49.000 --> 01:01:51.000]  смотрите из w
[01:01:53.000 --> 01:01:55.000]  в исток
[01:01:55.000 --> 01:01:57.000]  это значит
[01:01:57.000 --> 01:01:59.000]  что существует такое
[01:01:59.000 --> 01:02:01.000]  e
[01:02:01.000 --> 01:02:03.000]  что у нас
[01:02:03.000 --> 01:02:05.000]  из s
[01:02:05.000 --> 01:02:07.000]  есть какой-то переход
[01:02:11.000 --> 01:02:13.000]  тут e у v надо опять же
[01:02:13.000 --> 01:02:15.000]  у v
[01:02:15.000 --> 01:02:17.000]  потом
[01:02:17.000 --> 01:02:19.000]  у нас идет переход из e по v
[01:02:19.000 --> 01:02:21.000]  и потом
[01:02:21.000 --> 01:02:23.000]  за один переход
[01:02:23.000 --> 01:02:25.000]  мы попадаем с вами в сток
[01:02:27.000 --> 01:02:29.000]  да, то есть мы смотрим
[01:02:29.000 --> 01:02:31.000]  первый переход который
[01:02:31.000 --> 01:02:33.000]  попадает в сток
[01:02:35.000 --> 01:02:37.000]  тогда какой вывод мы с вами
[01:02:37.000 --> 01:02:39.000]  из этого можем сделать
[01:02:39.000 --> 01:02:41.000]  получается
[01:02:47.000 --> 01:02:49.000]  получаем что
[01:02:49.000 --> 01:02:51.000]  из s в u
[01:02:51.000 --> 01:02:53.000]  мы переходим в
[01:02:53.000 --> 01:02:55.000]  e эпсон
[01:02:55.000 --> 01:02:57.000]  и это значит
[01:02:57.000 --> 01:02:59.000]  что из s мы можем вывести
[01:02:59.000 --> 01:03:01.000]  у e
[01:03:03.000 --> 01:03:05.000]  а из
[01:03:05.000 --> 01:03:07.000]  вот этой истории
[01:03:17.000 --> 01:03:19.000]  мы можем вывести с вами что
[01:03:19.000 --> 01:03:21.000]  из e мы попадаем
[01:03:21.000 --> 01:03:23.000]  в весток
[01:03:27.000 --> 01:03:29.000]  в итоге у нас получается
[01:03:29.000 --> 01:03:31.000]  что из s мы попадаем
[01:03:31.000 --> 01:03:33.000]  в v
[01:03:35.000 --> 01:03:37.000]  сток
[01:03:37.000 --> 01:03:39.000]  равное думаю в
[01:03:39.000 --> 01:03:41.000]  сток
[01:03:41.000 --> 01:03:43.000]  ой сток, что-то я не то пишу
[01:03:45.000 --> 01:03:47.000]  кто багу найдет
[01:03:49.000 --> 01:03:51.000]  да, просто без стока
[01:03:51.000 --> 01:03:53.000]  да, потому что
[01:03:53.000 --> 01:03:55.000]  сток это у нас совершенно в автомате
[01:03:55.000 --> 01:03:57.000]  здесь у нас ее нет
[01:03:59.000 --> 01:04:01.000]  ну и все, это получается что
[01:04:01.000 --> 01:04:03.000]  в этом автоматике же
[01:04:05.000 --> 01:04:07.000]  так
[01:04:11.000 --> 01:04:13.000]  так
[01:04:13.000 --> 01:04:15.000]  по одну сторону понятен переход
[01:04:15.000 --> 01:04:17.000]  из того что грамматика
[01:04:17.000 --> 01:04:19.000]  из грамматики можно автомат получить
[01:04:21.000 --> 01:04:23.000]  что, теперь надо обратную
[01:04:23.000 --> 01:04:25.000]  сторону
[01:04:25.000 --> 01:04:27.000]  длине пути между конфигурациями
[01:04:27.000 --> 01:04:29.000]  длина
[01:04:29.000 --> 01:04:31.000]  теперь обратно
[01:04:31.000 --> 01:04:33.000]  значит
[01:04:33.000 --> 01:04:35.000]  тут история такая
[01:04:35.000 --> 01:04:37.000]  значит
[01:04:37.000 --> 01:04:39.000]  смотрите
[01:04:39.000 --> 01:04:41.000]  опять же по переходу в
[01:04:41.000 --> 01:04:43.000]  автомате
[01:04:43.000 --> 01:04:45.000]  который у нас есть
[01:04:45.000 --> 01:04:47.000]  мы строим правила
[01:04:47.000 --> 01:04:49.000]  в автомате, то есть идея
[01:04:49.000 --> 01:04:51.000]  доказательства в другую сторону
[01:04:51.000 --> 01:04:53.000]  заключается в том
[01:05:01.000 --> 01:05:03.000]  что
[01:05:19.000 --> 01:05:21.000]  смотрите
[01:05:21.000 --> 01:05:23.000]  что мы делаем
[01:05:23.000 --> 01:05:25.000]  возьмем автомат с этим завершающим состоянием
[01:05:31.000 --> 01:05:33.000]  назовем его сток
[01:05:39.000 --> 01:05:41.000]  а
[01:05:41.000 --> 01:05:43.000]  при этом
[01:05:43.000 --> 01:05:45.000]  заметим что
[01:05:45.000 --> 01:05:47.000]  этот сток
[01:05:47.000 --> 01:05:49.000]  да, если что
[01:05:49.000 --> 01:05:51.000]  мы скажем
[01:05:51.000 --> 01:05:53.000]  в чем
[01:05:53.000 --> 01:05:55.000]  делаем так чтобы из этого стока
[01:05:55.000 --> 01:05:57.000]  не было перекодов
[01:06:01.000 --> 01:06:03.000]  и
[01:06:03.000 --> 01:06:05.000]  и
[01:06:05.000 --> 01:06:07.000]  и
[01:06:07.000 --> 01:06:09.000]  и
[01:06:09.000 --> 01:06:11.000]  и
[01:06:11.000 --> 01:06:13.000]  и
[01:06:13.000 --> 01:06:15.000]  и
[01:06:15.000 --> 01:06:17.000]  и
[01:06:17.000 --> 01:06:19.000]  можно так сделать
[01:06:19.000 --> 01:06:21.000]  ну да
[01:06:21.000 --> 01:06:23.000]  это если у вас были некоторые наборы завершающих состояния
[01:06:23.000 --> 01:06:25.000]  что вы делаете
[01:06:25.000 --> 01:06:27.000]  мы делаем вот такую
[01:06:27.000 --> 01:06:29.000]  вот такую картину
[01:06:29.000 --> 01:06:35.600]  Что мы делаем? Мы делаем вот такую картину, да, и по доказательству этого факта, как раз у нас не будет циклов на себя.
[01:06:35.600 --> 01:06:41.400]  Ой, ну и теперь смотрите, что мы делаем. А тут интересная вещь.
[01:06:41.400 --> 01:06:56.600]  Вот у нас был переход, автомат n, вот такой вот у сигма дельта у ноль, и тут у нас одна вершина, пусток.
[01:07:00.000 --> 01:07:10.000]  Встроим по нему автомат, ой, грамматику g, которая состоит, что сюда вставляем?
[01:07:16.000 --> 01:07:21.000]  Да, можно и со стоком, тут можно, а, не, да, тут кубе стока, да.
[01:07:21.000 --> 01:07:36.000]  Дальше, алфавит такой же, правила сейчас определим, а здесь у нас стартовое состояние, стартовый терминал будет какой?
[01:07:52.000 --> 01:07:58.000]  Так, ну, с русского на английский мы научились переводить, теперь в обратную сторону научимся переводить.
[01:07:58.000 --> 01:08:18.000]  Если у нас тут был в завершающем состоянии множество из стока, да, а тут у нас было s, точнее вот у нас s, вот тут, вот здесь у нас s остался.
[01:08:18.000 --> 01:08:29.000]  Двигайте, двигайте, автомат, вот он, s, вот видите, они совпадают, стартовые здесь и стартовое состояние здесь.
[01:08:29.000 --> 01:08:37.000]  Значит, что нам нужно положить стартовым терминалом в автомате, ой, в грамматике?
[01:08:38.000 --> 01:09:02.000]  Q0, вот, причем, смотрите, теперь мы с вами что можем сделать? Мы теперь с вами можем сделать ту же самую картинку, давайте правила обозначим, а правила ровно такие же.
[01:09:02.000 --> 01:09:30.000]  Значит, у нас Q1 будет выводиться в Q2, если Q2 не равно кусток, а Q2 принадлежал от этого.
[01:09:32.000 --> 01:09:46.000]  И объединить, из Q1 выводят в, если у нас есть переход вот такой, Q1 в.
[01:09:46.000 --> 01:10:15.000]  Товарищи, кто понимает, почему нам этот, почему нам сейчас не надо тратить еще 20 минут для того, чтобы показывать, что язык, задаваемый вот этим вот автоматом, вот эта грамматика будет совпадать с языком, задаваемым этим исходным автоматом?
[01:10:15.000 --> 01:10:31.000]  А? Где-где-где? Вот тут? А, кусток.
[01:10:31.000 --> 01:10:45.000]  Вопрос, кто понимает, почему сейчас нам не надо повторять те же самые доказательства?
[01:10:45.000 --> 01:11:00.000]  Да, просто те же самые буквки, просто мы переобозначим определение, немножко там логику с местами, следствие с выводом сделано. То есть, потому что там мы этот факт доказывали в обе стороны.
[01:11:00.000 --> 01:11:25.000]  Да? Напишем вот так, сделаем find and replace и повторим предыдущий пункт.
[01:11:25.000 --> 01:11:46.000]  Ровно то же самое, потому что мы с вами добились той конфигурации автомата, которую мы с вами хотели. Ага. Давайте мы просто не будем тратить на это время. Если захотите, мы это с вами сделаем.
[01:11:46.000 --> 01:12:00.000]  То есть, смотрите, идея интуитивно простая. Да, то есть, если у нас справа нет правила, взводим это в сток, если нет, если есть справа, не терминал, но привезем в это новому состоянию.
[01:12:00.000 --> 01:12:13.000]  Ага. Ну это да. Ну так, технические вещи. Наша цель еще к тому же научиться эти технические вещи формально показывать по ходу курса, но уже один из правил.
[01:12:13.000 --> 01:12:27.000]  Вот. Теперь смотрите. Интересный пример. Дерево вывода КС грамматики. Давайте просмотрим пример. Вот такая грамматика. Из А выводится СА. Давайте где-нибудь напишем.
[01:12:27.000 --> 01:12:47.000]  Из А выводится СА. Из А выводится Д. Из С выводится А. Это пример грамматики.
[01:12:47.000 --> 01:13:01.000]  Нам нужно определиться, как выводится слово А, С, Д, А, С, Д, А. Я надеюсь, не опечатался тут. Смотрите, что мы можем сделать. Мы будем заменять с вами части.
[01:13:01.000 --> 01:13:16.000]  Да, тут если что, штопоры везде стоят, но их с стрелочками можно видеть, потому что они не символы. Давайте поймем, что происходит между второй и третьей стрелкой. Ой, на второй стрелке.
[01:13:16.000 --> 01:13:35.000]  Да, к С применяем правила. Потом что делаем? Потом к С последнее правило, убираем А. Потом? Да, СА.
[01:13:35.000 --> 01:13:55.000]  Так, первое применяем Д. Потом? Ага. И потом? Ну все, забили слово. Смотрите, вот так это сложно представлять. Поэтому люди придумали вот такую картинку.
[01:13:55.000 --> 01:14:16.000]  А? А? Да, после вывода только каждый терминал здесь отображается, куда мы выводим. И как слово тут собрать? Ну надо сделать этот, как он называется?
[01:14:16.000 --> 01:14:46.000]  А, А, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а, а
[01:14:46.000 --> 01:14:51.000]  А выходим наверх. Вот эта штука называется дерево вывода грамматики.
[01:14:51.000 --> 01:14:58.000]  То есть формальное определение это последовательность. Вот такая вывода слов.
[01:14:58.000 --> 01:15:07.000]  Неформально это дерево. И мы будем идею формулировать с помощью деревьев.
[01:15:08.000 --> 01:15:16.000]  Вот. Да, да. Вот.
[01:15:16.000 --> 01:15:23.000]  И смотрите история какая. Вообще, чтобы понимать, как делается дерево вывода,
[01:15:23.000 --> 01:15:27.000]  раскрывать не терминалы сикость-накость это не очень хорошая идея.
[01:15:27.000 --> 01:15:35.000]  Поэтому мы с вами будем фиксировать дерево вывода либо правосторонний, либо левосторонний.
[01:15:35.000 --> 01:15:40.000]  И на каждом шаге мы заменяем либо самый правый не терминал, либо самый левый не терминал.
[01:15:40.000 --> 01:15:43.000]  И фиксируем этот порядок.
[01:15:46.000 --> 01:15:51.000]  То есть мысль, на самом деле, вот здесь вот построили левосторонний дерево вывода.
[01:15:51.000 --> 01:15:55.000]  Потому что мы самый левый не терминал здесь раскрывали.
[01:15:56.000 --> 01:15:59.000]  А?
[01:16:03.000 --> 01:16:12.000]  Потому что операция выводимости ассоциативна и транзитивна.
[01:16:15.000 --> 01:16:20.000]  Операция штопора, она ассоциативна и транзитивна. Поэтому мы можем менять порядок местами.
[01:16:20.000 --> 01:16:23.000]  Скобок, в котором мы это все делаем.
[01:16:23.000 --> 01:16:28.000]  Вот. И давайте вот last. Да, это last.
[01:16:28.000 --> 01:16:34.000]  Значит, смотрите. История такая. Есть однозначные грамматики.
[01:16:34.000 --> 01:16:38.000]  И они нас очень сильно будут интересовать по ходу курса.
[01:16:38.000 --> 01:16:41.000]  Конечно, грамматика называется однозначная.
[01:16:41.000 --> 01:16:48.000]  Если для любого слова есть ровно одно, либо левостороннее, либо правостороннее дерево вывода.
[01:16:48.000 --> 01:16:52.000]  Ну, мы фиксируем, допустим, правостороннее дерево вывода.
[01:16:52.000 --> 01:16:57.000]  То есть ровно одна последовательность, которым мы можем получить этот вывод.
[01:16:57.000 --> 01:17:01.000]  А в следующий раз мы с вами посмотрим, почему у нас с вами
[01:17:01.000 --> 01:17:08.000]  правильные скобочные последствия, которые мы с вами задали, они являются однозначной грамматикой.
[01:17:08.000 --> 01:17:17.000]  Вот. Но бывают такие грамматики, языки, в которых невозможно задать однозначную грамматику.
[01:17:17.000 --> 01:17:22.000]  И такие языки называются существенно неоднозначными.
[01:17:25.000 --> 01:17:28.000]  Ага. Мы еще это поговорим.
[01:17:28.000 --> 01:17:32.000]  Может быть, если у нас останется время, мы покажем, почему, докажем с вами,
[01:17:32.000 --> 01:17:41.000]  почему вот такой вот существенно неоднозначный язык, его нельзя задать однозначной грамматикой.
[01:17:41.000 --> 01:17:43.000]  То есть это A в N, B в N, C в K.
[01:17:43.000 --> 01:17:47.000]  При этом либо первые, количество букв A с количеством букв B совпадает,
[01:17:47.000 --> 01:17:51.000]  либо количество букв B с количеством букв C совпадает.
[01:17:57.000 --> 01:18:01.000]  Вообщем, смотрите, сегодня мы начали с вами знакомиться с классами на грамматику.
[01:18:01.000 --> 01:18:04.000]  Посмотрели, что такое иерархия Хомского.
[01:18:04.000 --> 01:18:08.000]  Показали, что праволинейные грамматики аналогичны автоматам.
[01:18:08.000 --> 01:18:11.000]  Ну и построили дерево вывода грамматики.
[01:18:11.000 --> 01:18:15.000]  Ну и немножко познакомились с тем, как у нас появляется одно значение.
[01:18:15.000 --> 01:18:19.000]  В следующий раз мы с вами будем упрощать грамматики,
[01:18:19.000 --> 01:18:23.000]  потому что то, что мы сейчас написали, это дичь.
[01:18:23.000 --> 01:18:28.000]  Кто-то говорил, что длину правой части можно сильно ограничить.
[01:18:28.000 --> 01:18:31.000]  И посмотрим алгоритмы, связанные с этим.
[01:18:31.000 --> 01:18:36.000]  Как проверять принадлежные слова KS-грамматики,
[01:18:36.000 --> 01:18:39.000]  когда у нас грамматика будет в более простом виде.
[01:18:39.000 --> 01:18:43.000]  Всё, извините, что задержал. Давайте вопросы задавать.
[01:18:43.000 --> 01:18:45.000]  Спасибо.
