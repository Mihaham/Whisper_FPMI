[00:00.000 --> 00:12.000]  Всем доброго дня! Мы с вами продолжаем наш курс, и внезапно мы уже приблизились к двум третьям наших лекций.
[00:12.000 --> 00:16.000]  И сегодня мы поговорим с вами про такую интересную вещь, как нормальная форма грейба х.
[00:16.000 --> 00:20.000]  Напоминаю правила русского языка шестого класса.
[00:20.000 --> 00:30.000]  Да, это женщина. Женские фамилии не склоняются... Женские фамилии иностранного происхождения не склоняются.
[00:30.000 --> 00:34.000]  Вот. Да, запоминаю.
[00:34.000 --> 00:38.000]  А сколько фамилий русского происхождения?
[00:38.000 --> 00:44.000]  Нет, ну совсем, так сказать, русского происхождения. Совсем иностранного происхождения.
[00:44.000 --> 00:50.000]  Ладно, давайте вспомним, что мы делали с вами в предыдущих лекциях.
[00:50.000 --> 00:53.000]  Короткая выжимка.
[00:53.000 --> 00:56.000]  Да, раз. Мы обсуждали с вами МП-автомат.
[00:56.000 --> 01:00.000]  КС-грамматика МП-автоматов. Отматываемся еще раньше.
[01:00.000 --> 01:04.000]  Что у нас было уже с нормальными формами?
[01:04.000 --> 01:07.000]  Да, у нас была нормальная форма хомского.
[01:07.000 --> 01:11.000]  И вот, собственно, наша цель сегодня связать эти темы.
[01:11.000 --> 01:15.000]  У нас с вами была нормальная форма хомского.
[01:15.000 --> 01:21.000]  И вот, собственно, наша цель сегодня связать эти темы.
[01:21.000 --> 01:25.000]  И вот, собственно, наша цель сегодня связать эти темы.
[01:25.000 --> 01:28.000]  У нас с вами есть нормальная форма хомского.
[01:28.000 --> 01:34.000]  И хотелось бы понять, а существует ли какая-то более крутая нормальная форма?
[01:34.000 --> 01:36.000]  Вот. А?
[01:36.000 --> 01:39.000]  Более мощная, так сказать, первая форма.
[01:39.000 --> 01:44.000]  И здесь оказывается, что иногда бывает полезно выводить именно первую букву.
[01:44.000 --> 01:49.000]  В слове. То есть, каждое правило грамматики выводило бы первую букву.
[01:49.000 --> 01:51.000]  Да, пока у нас такого нет.
[01:51.000 --> 01:54.000]  Давайте напомним грамматику.
[01:54.000 --> 02:00.000]  Нет. Праволинейные там правила все имеют вид в WB.
[02:00.000 --> 02:03.000]  А здесь будет несколько не терминалов дополнительно.
[02:03.000 --> 02:10.000]  Значит, давайте напомним, из чего у нас состоит нормальная форма хомского.
[02:10.000 --> 02:12.000]  Еще разок.
[02:12.000 --> 02:15.000]  Какие правила у нее есть?
[02:19.000 --> 02:26.000]  Да, у нас правила такие.
[02:26.000 --> 02:31.000]  Как видно, только здесь вот это правило выводит первый символ.
[02:31.000 --> 02:36.000]  Я сегодня предлагаю в качестве альтернативы построить другую нормальную форму.
[02:42.000 --> 02:45.000]  Которая будет выглядеть следующим образом.
[02:46.000 --> 02:48.000]  С в Эпсилон.
[02:50.000 --> 02:52.000]  А в А.
[02:54.000 --> 02:56.000]  А в АБ.
[02:59.000 --> 03:02.000]  И А вводит АБЦ.
[03:03.000 --> 03:06.000]  Опять же, здесь Б и Ц не равны пустому мнению.
[03:06.000 --> 03:19.000]  Как можно догадаться, мы из вот этой формы будем выводить вот эту форму.
[03:24.000 --> 03:28.000]  Давайте сразу тезисно расскажу, что нам это поможет сделать.
[03:28.000 --> 03:34.000]  Вот эта нормальная форма позволит построить МП-автомат без Эпсилон-переходов.
[03:36.000 --> 03:49.000]  А вот это в свою очередь нам позволит доказать один интересный факт.
[03:57.000 --> 04:03.000]  Что пересечение МП-языков и автоматных языков является МП-языком.
[04:06.000 --> 04:15.000]  Ну или в переводе на другой язык, что КС-пересечь с регулярными языками являются КС-языками.
[04:16.000 --> 04:19.000]  Кто-то, возможно, видел такую сдачную колокню.
[04:21.000 --> 04:25.000]  Только там, наверное, требовалось решить немножко другим способом.
[04:27.000 --> 04:33.000]  И этим мы с вами закроем основную тему, посвященную КС-грамматикам и МП-автоматам.
[04:33.000 --> 04:37.000]  Итак, хотим еще получить автомат самыми переходами.
[04:38.000 --> 04:40.000]  Определение нормальной формы гребах еще раз.
[04:41.000 --> 04:45.000]  Грамматика находится в нормальной форме гребах, если все ее правила имеют такой вид.
[04:46.000 --> 04:50.000]  А в А, А в АВ, ну и дальше А в АВЦ.
[04:50.000 --> 04:54.000]  То есть это то, что я уже выписал на слайде, на доске точнее.
[04:55.000 --> 05:00.000]  Давайте подумаем, как привести грамматику к нормальной форме гребах.
[05:00.000 --> 05:03.000]  Для этого нам нужно немножко порисовать деревья.
[05:04.000 --> 05:08.000]  Давайте, то есть давайте сформулируем теорему.
[05:09.000 --> 05:19.000]  Прежде чем, любая КС-грамматика может быть представима.
[05:30.000 --> 05:32.000]  В нормальной форме гребах.
[05:36.000 --> 05:42.000]  То есть существует эквивалентная грамматика по распознаванию языков, которые представим в нормальной форме гребах.
[05:43.000 --> 05:46.000]  Давайте мы введем следующую не терминал.
[05:47.000 --> 05:50.000]  Значит, это уже сразу доказательство идет.
[05:51.000 --> 05:52.000]  В без А.
[05:53.000 --> 05:58.000]  Точнее, если правильно говорить, это оператор правого деления.
[06:00.000 --> 06:07.000]  Чего? А, видимо матричная алгебра не так сильно разбиралась.
[06:08.000 --> 06:10.000]  Нет.
[06:11.000 --> 06:12.000]  Смотрите.
[06:13.000 --> 06:15.000]  Сейчас я покажу интересные вещи.
[06:16.000 --> 06:20.000]  Мы хотим сказать, чтобы доказывать такое свойство.
[06:25.000 --> 06:27.000]  Значит, смотрите.
[06:28.000 --> 06:29.000]  Что мы с вами сделаем?
[06:30.000 --> 06:36.000]  Давайте мы мысленно с вами представим, что вот здесь вот у нас знак равенства.
[06:37.000 --> 06:43.000]  И представим себе, что это у нас с вами не объект языка, а матрица.
[06:46.000 --> 06:51.000]  Мы хотим ввести такие объекты, пока я их формально не определяю.
[06:52.000 --> 06:55.000]  Сейчас мы увидим просто по картинкам, как хотелось бы их определить.
[06:56.000 --> 06:57.000]  Угу.
[06:58.000 --> 07:00.000]  Смотрите. Представим себе, что это у нас матрица.
[07:01.000 --> 07:03.000]  А, Б и В это матрица.
[07:04.000 --> 07:05.000]  Вопрос.
[07:06.000 --> 07:12.000]  Как решается вот это линейное уравнение в том случае, если матрица Б у нас невырожденная?
[07:13.000 --> 07:14.000]  Да.
[07:14.000 --> 07:15.000]  Вот.
[07:16.000 --> 07:19.000]  И это как раз на самом деле обозначает вот так.
[07:25.000 --> 07:30.000]  Давайте, чтобы мы с вами были удостоверены в этом, я сейчас открою Гугл.
[07:33.000 --> 07:34.000]  Ага.
[07:34.000 --> 07:35.000]  Вот.
[07:36.000 --> 07:38.000]  Собственно, определение правого деления.
[07:42.000 --> 07:44.000]  То есть, хм...
[07:45.000 --> 07:46.000]  Хм...
[07:47.000 --> 07:48.000]  Хм...
[07:49.000 --> 07:50.000]  Хм...
[07:51.000 --> 07:52.000]  Хм...
[07:53.000 --> 07:54.000]  Хм...
[07:55.000 --> 07:56.000]  Хм...
[07:57.000 --> 07:58.000]  Хм...
[07:59.000 --> 08:00.000]  Хм...
[08:01.000 --> 08:02.000]  Хм...
[08:02.000 --> 08:05.000]  То есть, хотим следующую вещь.
[08:06.000 --> 08:11.000]  Чтобы у нас с вами те свойства, которые у нас были, вот состояли таким образом.
[08:12.000 --> 08:16.000]  Что L2 без L1, сразу скажу, что мы будем использовать не а термин для...
[08:17.000 --> 08:18.000]  Существует а термин для любого.
[08:19.000 --> 08:20.000]  То есть, смотрите, что получается.
[08:21.000 --> 08:31.000]  Мы хотим сделать так, чтобы существовало слово слева из языка такое, что мы дополнение его приводило нас к общему языку.
[08:32.000 --> 08:43.000]  Если мы с вами вот это заменим на L1, а вот это на L2, то как раз тот объект, который мы хотим выводить, это будет L2 без L1.
[08:47.000 --> 08:54.000]  Я бы так сказал, что мы свели вот наше определение к формальному определению правого деления, которое существует в математике.
[08:57.000 --> 08:58.000]  А?
[09:03.000 --> 09:09.000]  Ой, стоп, это левое деление, извините, перепутал.
[09:10.000 --> 09:12.000]  Это оператор левого деления.
[09:13.000 --> 09:15.000]  Вот, он используется в линейной алгебре.
[09:16.000 --> 09:17.000]  А?
[09:21.000 --> 09:25.000]  Да-да-да, оно немножко может запутано быть.
[09:25.000 --> 09:27.000]  То есть, мы с вами определяем...
[09:28.000 --> 09:30.000]  Тут даже пишут нагады любого.
[09:31.000 --> 09:41.000]  То есть, наша цель – это определить множество слов и сигмы со звездой такое, что...
[09:51.000 --> 09:52.000]  Вот такую вещь.
[09:53.000 --> 09:54.000]  Вот такую вещь.
[09:57.000 --> 10:00.000]  То есть, это оператор для любого, есть оператор обычного деления.
[10:14.000 --> 10:15.000]  Вот. И мы хотим...
[10:16.000 --> 10:17.000]  А?
[10:19.000 --> 10:20.000]  Нет-нет.
[10:23.000 --> 10:27.000]  А, для любого.
[10:30.000 --> 10:31.000]  Вот так вот.
[10:36.000 --> 10:37.000]  А?
[10:38.000 --> 10:39.000]  Да.
[10:40.000 --> 10:47.000]  Но это вот такой термин. То есть, L2 без L1 по отношению любой.
[10:52.000 --> 10:56.000]  Да. То есть, формально смотреть, то у нас квантор меняется.
[11:01.000 --> 11:06.000]  Да, согласен. То есть, тогда мы можем просто использовать нижнее определение.
[11:08.000 --> 11:10.000]  Да, мы используем нижнее определение.
[11:11.000 --> 11:18.000]  Здесь у нас получается, существует вывод здесь, значит существует вывод здесь.
[11:19.000 --> 11:22.000]  Вот. Просто из два языка мы будем пользоваться вот этим.
[11:25.000 --> 11:27.000]  Вот. И вот основную лему, которая мы с вами...
[11:28.000 --> 11:33.000]  Конструкцию, которую мы хотим с вами привести, это такую конструкцию, которая нам позволит выводить вот эту лему.
[11:36.000 --> 11:37.000]  Этот факт.
[11:38.000 --> 11:39.000]  Давайте как раз это нарисуем в виде дерева.
[11:45.000 --> 11:46.000]  То есть, это будет выглядеть вот так.
[11:48.000 --> 11:49.000]  Вот.
[11:52.000 --> 12:00.000]  Мы хотим это сделать следующим, чтобы у нас B без A владелось нашим словом W.
[12:01.000 --> 12:03.000]  Вот. Давайте строить эту конструкцию.
[12:08.000 --> 12:09.000]  Да.
[12:19.000 --> 12:22.000]  Нет, не можем. Иначе бы это было право линейной грамматики.
[12:29.000 --> 12:34.000]  А тогда у нас, смотрите, если мы сворачиваем это в новый терминал, то у нас добавляется правило вот такого вида.
[12:37.000 --> 12:39.000]  Да, да. Мы не хотим правил такого вида.
[12:42.000 --> 12:45.000]  Так. Ну давайте шаманить с этим деревом.
[12:48.000 --> 12:51.000]  Так. Нам нужно понять, что выводится здесь.
[12:54.000 --> 12:57.000]  А помните идею, которую в прошлый раз мы с вами говорили?
[12:58.000 --> 13:01.000]  Много очень раз говорили. В алгоритме Эрли она у нас встречалась.
[13:02.000 --> 13:05.000]  Давайте посмотрим первый момент, когда у нас появился не терминал B.
[13:09.000 --> 13:11.000]  Тогда у нас возникнет следующая картинка.
[13:13.000 --> 13:14.000]  Вот такая вот.
[13:15.000 --> 13:18.000]  То есть у нас возникает зум.
[13:19.000 --> 13:32.000]  И мы говорим следующее, что на самом деле у нас с вами есть какой-то не терминал C, который за один шаг вывел BD, а дальше вывел O.
[13:34.000 --> 13:36.000]  А здесь у нас Z.
[13:37.000 --> 13:38.000]  Можно еще вопрос?
[13:39.000 --> 13:40.000]  Да.
[13:40.000 --> 13:51.000]  То есть в нашем случае нужно не что бы выводило BD, а что бы выводило Z, а не C, а D, где BD влезет в свой бойцов.
[13:52.000 --> 14:03.000]  Нет, нет. Тут именно говорится в том, что мы именно в определении деления языков будем искать первую букву.
[14:03.000 --> 14:13.000]  Ну нет, я имею в виду, что если мы берем определение с существованием, то он не обязан выводить BW, для всех BD нельзя взять B, не достаточно одного.
[14:14.000 --> 14:15.000]  Ну да.
[14:16.000 --> 14:21.000]  То есть он в той идее A должен выводить не вот это BW, а BD, где BD.
[14:23.000 --> 14:29.000]  А, стоп. То есть вы говорите, что скорее всего нужна определение для любого, да?
[14:33.000 --> 14:38.000]  Ну если вы рассматриваете BD на влагимость, как для любого слова B, оно выводит BW.
[14:43.000 --> 14:44.000]  Хороший вопрос.
[14:44.000 --> 15:09.000]  Ну да. Смотрите, давайте скажу так, что здесь мысль состоит в том, что, как бы, давайте уточню, что это как раз согласованность определений,
[15:09.000 --> 15:19.000]  и напишу, что это согласованность в кавычках. То есть почему мы именно пытаемся определить вот такой оператор?
[15:20.000 --> 15:24.000]  А это вот такой саплиментарий материал, так сказать, который нам помогает в определении.
[15:25.000 --> 15:33.000]  То есть вот это вот определение взялось не абы с того, что я взял эти символы откуда-то, а что это реально существующий оператор.
[15:33.000 --> 15:48.000]  Какой? Вот этот? Ну давайте тогда, ладно, давайте формально определим, что мы будем строить грамматику.
[15:48.000 --> 16:08.000]  Значит, GH, точнее, Г. Грейбах, у которого будет кортеж, значит, смотрите, это важно, так-так-так-так-так, у него будет множество не терминалов.
[16:08.000 --> 16:19.000]  Грейбах это С, объединить В без А, где А и В принадлежат множеству не терминалов.
[16:20.000 --> 16:35.000]  Сигма, П определим позже, и С. Вот. То есть вот такую грамматику мы с вами будем строить.
[16:38.000 --> 16:48.000]  Сейчас. Ситуация, да.
[16:48.000 --> 17:12.000]  Похоже, давайте скажем так.
[17:12.000 --> 17:36.000]  Ну да, то есть мы просто хотим максимально приблизить вот этот термин с этим термином. Это наша цель.
[17:36.000 --> 17:41.000]  Вот, больше мы ничего не делаем.
[17:41.000 --> 17:44.000]  Да-да.
[17:44.000 --> 18:03.000]  Ну да, хорошо. Так, смотрите, давайте помедитируем еще раз над этой картинкой. То есть, что у нас получается? У нас с вами есть В без А, то что выводится из В правое, левое деление А.
[18:03.000 --> 18:10.000]  А теперь смотрите, значит, что у нас происходит? Давайте попробуем вытащить первый символ.
[18:10.000 --> 18:17.000]  Как мы можем вытащить первый символ? У нас D раскрывается в некоторое слово У.
[18:17.000 --> 18:30.000]  Ну, видно. Причем из-за того, что это нормальная форма хомского, У не пустое.
[18:30.000 --> 18:55.000]  Взять на У мы можем представить в виде какого-то символа ех. Логично? Ех. Маленькая, маленькая.
[18:55.000 --> 19:00.000]  Вот. А как это можно сделать?
[19:00.000 --> 19:03.000]  В самый левый, левый, левый.
[19:03.000 --> 19:12.000]  Правильно.
[19:12.000 --> 19:25.000]  Давайте найдем первый не терминал, который раскроет это все в букву Е.
[19:25.000 --> 19:41.000]  Это новый, если мы говорим совсем-совсем формально, это новые не терминалы, которые у нас будут в новой грамматике.
[19:41.000 --> 19:59.000]  Мы хотим ввести не терминалы такого свойства, мы хотим ввести такой тип не терминалов, для которых было бы выполнено вот это свойство.
[19:59.000 --> 20:06.000]  Да. Явно конструктив сделать.
[20:06.000 --> 20:11.000]  Ну, не совсем конструктивно понять, по крайней мере, откуда вы вводится.
[20:11.000 --> 20:22.000]  Так. А теперь смотрите внимательно на вот эту картинку.
[20:22.000 --> 20:30.000]  Тут будет выводиться х.
[20:30.000 --> 20:35.000]  А вам картинка вот такая.
[20:35.000 --> 20:42.000]  Так. Сейчас, секунду. Единственный момент. Нет. Это Гонио. Мы можем вот так написать.
[20:42.000 --> 20:46.000]  Давайте оставим х.
[20:46.000 --> 20:52.000]  А теперь смотрите внимательно на вот эту картинку.
[20:52.000 --> 20:58.000]  Утверждение, что хочется добавить такие правила в нашу грамматику.
[20:58.000 --> 21:08.000]  Вот это что у нас? Вот это символ Е. Вот этот символ как закодируется в тех терминах?
[21:08.000 --> 21:16.000]  Д выводит Е, х.
[21:16.000 --> 21:23.000]  Значит, этот символ у нас Е без Д. Вот то, что выводится справа здесь.
[21:23.000 --> 21:28.000]  А З это что такое?
[21:28.000 --> 21:37.000]  Наоборот, С без А.
[21:37.000 --> 21:45.000]  Нет, тут смотрите. Там, где не написана циферка, это означает вывод за какое-то любое число шагов.
[21:45.000 --> 21:54.000]  А там, где единичка, это вывод за один шаг.
[21:54.000 --> 22:03.000]  Не-не-не. Наша цель именно посмотреть на то, собственно, а что если у нас...
[22:03.000 --> 22:10.000]  Смотрите, идея такая. Давайте рассмотрим вот такую ситуацию, что А без Б без А у нас выводится В.
[22:10.000 --> 22:22.000]  То есть у нас из А выводится БВ. Попробуем это слово В, В вывести таким образом, чтобы у нас раскрывался при первом правиле первый терминал.
[22:22.000 --> 22:32.000]  Ну вот, смотрим эту ситуацию. Раскрываем еще раз. Мы говорим, что давайте рассмотрим первый момент времени, когда появился вне терминала вывод символа В,
[22:32.000 --> 22:46.000]  и забьем дальше на то, что идет левее. У нас получился Д, который раскрывает некоторые слова У, равные ИХ.
[22:46.000 --> 22:52.000]  Вот, хорошо. Смотрим, как мы выводим первую букву. Как мы выводим первую букву Е.
[22:52.000 --> 23:00.000]  Она вывелась из никакого-то не терминала, потому что у нас грамматика в нормальной форме хомского.
[23:00.000 --> 23:10.000]  Ну вот, Е. Дальше все, что оказалось справа от этого Е, на самом деле, если мы поддержим инвариант, будет выводиться вот таким не терминалом.
[23:12.000 --> 23:17.000]  А вот этот вот З, который выводился справа отсюда, будет выводиться не терминалом С без А.
[23:26.000 --> 23:28.000]  Понятно вот эта идея?
[23:30.000 --> 23:38.000]  Да, конечно же. Иначе бы это так не произошло.
[23:46.000 --> 23:48.000]  Да-да-да.
[23:48.000 --> 24:06.000]  То есть это, смотрите, когда вот такой переход появляется, он появляется в том случае, смотрите, если у нас был переход С следует БД, и Е выводит Е.
[24:06.000 --> 24:20.000]  Где? Вот тут?
[24:20.000 --> 24:32.000]  Ну у нас просто, допустим, из А выводилось какие-то правила. У нас, допустим, и здесь, на самом деле, есть еще какие-то большие-большие наборы под деревьев.
[24:36.000 --> 24:43.000]  Нет, не обязательно. Это просто произвольное слово.
[24:43.000 --> 24:47.000]  Да легко.
[24:47.000 --> 25:01.000]  Ну смотрите, мы могли бы выводить Д, я не знаю, смотрите, Е, Ф, Ф бы вывелся в Е, Ж, А, там Ж, А бы свое, собственно, тоже как-то вывелся и так далее.
[25:01.000 --> 25:07.000]  Ну а из Е выведется Е только. А из Ф можешь вывести дальше любое слово.
[25:21.000 --> 25:27.000]  А, типа, сейчас подождите. Это хороший вопрос. Сейчас появятся они.
[25:31.000 --> 25:41.000]  Да, мы еще что-то упустили. Что мы упустили с вами?
[25:47.000 --> 25:54.000]  А, ну из Е выводят Е, остаются правила.
[25:54.000 --> 26:04.000]  Нет, не обязательно.
[26:04.000 --> 26:10.000]  Так, хорошо. Вопрос, где еще подвох?
[26:10.000 --> 26:16.000]  Смотрите, правила грамматики какие у нас. У нас есть стартовый не терминал.
[26:16.000 --> 26:23.000]  Давайте я промотаю вот это.
[26:23.000 --> 26:29.000]  Как начать и закончить вывод?
[26:29.000 --> 26:36.000]  То есть это какая-то промежуточная стадия.
[26:36.000 --> 26:43.000]  Теперь представим себе картинку,
[26:43.000 --> 26:52.000]  что мы находимся в стартом состоянии.
[26:52.000 --> 26:57.000]  Давайте посмотрим на первую букву слове, которое выводится.
[26:57.000 --> 27:03.000]  Высота буквы А.
[27:03.000 --> 27:14.000]  Это значит, что за один, существует такой же не терминал А, что за один раз он выводит нашу букву А.
[27:14.000 --> 27:18.000]  Отлично.
[27:18.000 --> 27:22.000]  Здесь у нас остается слово W.
[27:22.000 --> 27:36.000]  Но тогда логичнее, смотрите, что сделать. Добавить правило S.
[27:36.000 --> 27:42.000]  Вот такое.
[27:42.000 --> 27:49.000]  То есть это правило, которое позволяет вывести первую букву в нашем слове.
[27:49.000 --> 27:54.000]  Что?
[27:54.000 --> 28:00.000]  В смысле нету.
[28:00.000 --> 28:06.000]  Без них никак.
[28:06.000 --> 28:16.000]  Нам нужно все слово выводить.
[28:16.000 --> 28:20.000]  Это для всех не терминалов. У нас же первая буква может быть произвольная.
[28:20.000 --> 28:24.000]  Поэтому мы оставляем вот эти первые буквы.
[28:24.000 --> 28:27.000]  Максимально везде.
[28:27.000 --> 28:44.000]  Это гипотетический способ вывести первую букву.
[28:44.000 --> 28:48.000]  Да нет, не стану.
[28:48.000 --> 29:01.000]  Не, ну нам же все равно надо как-то все это вывести.
[29:01.000 --> 29:08.000]  Я понял. Сейчас, секунду.
[29:08.000 --> 29:14.000]  А, типа вы спрашиваете, а почему вот такие правила останутся?
[29:14.000 --> 29:17.000]  Это хитрый способ.
[29:17.000 --> 29:21.000]  Еще одна хитрая подманка.
[29:21.000 --> 29:24.000]  Да, давайте.
[29:24.000 --> 29:29.000]  Я просто сначала пытаюсь рассказать физический смысл, а потом его формально уже определить.
[29:29.000 --> 29:32.000]  Возможно, это не очень хорошая затея.
[29:32.000 --> 29:36.000]  Смотрите, это начало.
[29:36.000 --> 29:42.000]  Так, конец.
[29:42.000 --> 29:56.000]  Раскрыли его в букву.
[29:56.000 --> 29:58.000]  А все, что на штуку выводится.
[29:58.000 --> 30:00.000]  Так, конец.
[30:00.000 --> 30:05.000]  Смотрите, вот мы выводим с вами не терминалы вот такого типа.
[30:05.000 --> 30:12.000]  Если мы выводим не терминалы такого типа, то нам нужно их во что-то вывести.
[30:12.000 --> 30:17.000]  А теперь смотрите.
[30:17.000 --> 30:28.000]  Как вы думаете, что логично выводить из вот такого?
[30:28.000 --> 30:30.000]  Ну, в глубине, в глубине.
[30:30.000 --> 30:32.000]  То есть мы разматываем, разматываем, разматываем.
[30:32.000 --> 30:39.000]  И потом оказывается, что мы вошли в какой-то бесконечный цикл.
[30:39.000 --> 30:44.000]  Хочется пустое, ну давайте сделаем.
[30:44.000 --> 30:52.000]  Да, мы хотим без эмсион-переходов.
[30:52.000 --> 30:54.000]  Так, а теперь смотрите, последний вопрос.
[30:54.000 --> 30:59.000]  Откуда появляется правило из А следует А?
[30:59.000 --> 31:06.000]  В этом определении.
[31:06.000 --> 31:19.000]  Удаление всем порождающих.
[31:19.000 --> 31:22.000]  То есть еще раз, давайте формально определим.
[31:22.000 --> 31:31.000]  Значит, мы с вами устроим грамматику вот такого типа, где П, Ж это правило вида.
[31:31.000 --> 31:41.000]  Раз, два, три.
[31:41.000 --> 31:44.000]  Лемма, которую мы будем с вами доказывать.
[31:44.000 --> 31:57.000]  Что если мы построили такой вывод, то у нас будет выполнено вот это соотношение.
[31:57.000 --> 32:12.000]  В конце правила мы удаляем эмсион-перождающие и приводим нас вот к такому виду.
[32:12.000 --> 32:17.000]  Теперь осталось это доказать.
[32:17.000 --> 32:24.000]  Квадрат.
[32:24.000 --> 32:29.000]  Да.
[32:29.000 --> 32:32.000]  Нет.
[32:32.000 --> 32:34.000]  Сколько у нас не терминала?
[32:34.000 --> 32:41.000]  Четыре новых не терминала появляются.
[32:41.000 --> 32:44.000]  Терминал очень большой.
[32:44.000 --> 32:49.000]  И количество не терминалов становится квадратичным.
[32:49.000 --> 32:54.000]  Ну да, там было задание в одном из семинаров, по-моему, в прошлом году,
[32:54.000 --> 32:58.000]  составить грамматику в нормальной форме грейбах.
[32:58.000 --> 33:05.000]  Товарищ, получилось что-то на простую грамматику 600 правил.
[33:05.000 --> 33:10.000]  Не на доске, но на компьютере они были посчитаны.
[33:10.000 --> 33:12.000]  Это такой эфемерный объект.
[33:12.000 --> 33:17.000]  Давайте докажем это все дело.
[33:17.000 --> 33:22.000]  Угу.
[33:22.000 --> 33:27.000]  Угу.
[33:27.000 --> 33:32.000]  Да.
[33:32.000 --> 33:37.000]  Ага.
[33:37.000 --> 33:42.000]  Да.
[33:42.000 --> 33:47.000]  Ага.
[33:47.000 --> 33:52.000]  Да.
[33:52.000 --> 33:57.000]  Да.
[33:57.000 --> 34:02.000]  Да.
[34:02.000 --> 34:07.000]  Да.
[34:07.000 --> 34:12.000]  Да.
[34:12.000 --> 34:17.000]  Да.
[34:17.000 --> 34:22.000]  Угу.
[34:22.000 --> 34:27.000]  Ага.
[34:27.000 --> 34:32.000]  Да, да, да.
[34:32.000 --> 34:36.000]  Это вывод для конкретного физического слова мы сейчас разобрали.
[34:36.000 --> 34:40.000]  А слов может быть много разных.
[34:40.000 --> 34:44.000]  Поэтому нам надо все варианты перебирать.
[34:44.000 --> 34:49.000]  В этом деле тоже прав.
[34:49.000 --> 34:52.000]  Да, да, да.
[34:52.000 --> 34:57.000]  Да, да, да.
[34:57.000 --> 35:02.000]  Да, да, да.
[35:02.000 --> 35:07.000]  Да, да, да.
[35:07.000 --> 35:12.000]  Ну, я думаю, тут можно уже на досуге посчитать, сколько тут будет.
[35:12.000 --> 35:17.000]  В общем, будет много.
[35:17.000 --> 35:22.000]  Давайте на этом остановимся.
[35:22.000 --> 35:27.000]  Я предлагаю, значит, мы тут можем целую лекцию дискутировать на эту тему.
[35:27.000 --> 35:32.000]  Итак, смотрите, будем доказывать утверждение вот этого типа.
[35:32.000 --> 35:37.000]  И давайте начнем с первого утверждения.
[35:37.000 --> 35:42.000]  Докажем это утверждение правую сторону.
[35:42.000 --> 35:47.000]  Ну, как?
[35:47.000 --> 35:52.000]  Какие?
[35:52.000 --> 35:57.000]  Мы берем произвольную пару, произвольную пару правил вот такого типа.
[35:57.000 --> 36:02.000]  И генерим вот такое правило.
[36:02.000 --> 36:07.000]  Где тут? Да, произвольная, то есть для всех правил вот такого вида мы генерим.
[36:07.000 --> 36:12.000]  Да.
[36:12.000 --> 36:17.000]  Ну, ничего страшного, просто это состояние будет недостижимо.
[36:17.000 --> 36:22.000]  То есть тут огромное количество недостижимых ситуаций возникает.
[36:22.000 --> 36:27.000]  Итак, давайте докажем утверждение.
[36:27.000 --> 36:32.000]  Опять же, интукция по длине вывода.
[36:33.000 --> 36:38.000]  База.
[36:38.000 --> 36:43.000]  Б без а за один шаг выводится слово w.
[36:43.000 --> 36:48.000]  Тогда посмотрим на наши правила и поймем, что это за правило.
[36:48.000 --> 36:53.000]  Какое это правило?
[37:02.000 --> 37:07.000]  Вот, то есть получается, а равняется b, b вводит эпсилон.
[37:07.000 --> 37:12.000]  Ну, действительно, мы получаем, что из а мы выводим а эпсилон.
[37:12.000 --> 37:17.000]  Переход.
[37:17.000 --> 37:22.000]  Значит, предположим, что у нас с вами за один шаг вывелось правило.
[37:22.000 --> 37:27.000]  За один шаг у нас есть правило e,
[37:27.000 --> 37:32.000]  e без d, c без а.
[37:32.000 --> 37:37.000]  Ну, дальше у нас это выводит какое-то e иксу.
[37:37.000 --> 37:42.000]  Ну, давайте раскидывать.
[37:42.000 --> 37:47.000]  Значит, что у нас получается?
[37:47.000 --> 37:52.000]  Из вот этого следует, что у нас есть правило c, b, d.
[37:52.000 --> 37:57.000]  У нас есть правило c, b, d.
[37:57.000 --> 38:02.000]  А из этого получается, что e выводит e.
[38:02.000 --> 38:07.000]  Дальше.
[38:07.000 --> 38:12.000]  Значит, по предположению индукции.
[38:12.000 --> 38:17.000]  А у нас там z было.
[38:18.000 --> 38:23.000]  Значит, у нас получается, что d выводит e, x.
[38:23.000 --> 38:28.000]  А выводит c, z.
[38:28.000 --> 38:33.000]  Ну, тогда, смотрите, a выводит c, z.
[38:33.000 --> 38:38.000]  За один шаг выводится b, d, z.
[38:38.000 --> 38:43.000]  Дальше d у нас выводит e, x.
[38:43.000 --> 38:48.000]  И это еще раз выводится b, e, x, z.
[38:48.000 --> 38:53.000]  Которое на самом деле выровняется w.
[38:53.000 --> 38:58.000]  Да.
[38:58.000 --> 39:03.000]  Какую?
[39:03.000 --> 39:08.000]  Вот эту?
[39:09.000 --> 39:18.000]  А, типа, смотрите, вот это в грамматике g грейбах, а вот это в грамматике g холмского.
[39:28.000 --> 39:33.000]  Нет, смотрите, вот это объект в старой грамматике.
[39:33.000 --> 39:38.000]  А вот это в новой.
[39:41.000 --> 39:46.000]  Нет.
[39:46.000 --> 39:51.000]  Подождите, где стоит?
[39:51.000 --> 39:56.000]  Нет.
[39:58.000 --> 40:03.000]  Смотрите, это в старой грамматике, это в грамматике в нормальной форме холмского.
[40:09.000 --> 40:14.000]  Есть, в старой грамматике-то есть. Ну, это просто отношение выводимости.
[40:14.000 --> 40:19.000]  Нет.
[40:19.000 --> 40:24.000]  На отношении выводимости это наименьшее рефлексивное транслятивное отношение, для которого выпало на свойство.
[40:24.000 --> 40:29.000]  Там оно определялось для всех множеств пары не терминала, не терминала.
[40:29.000 --> 40:34.000]  То есть там объекты слева и справа стоят из n, b, d тигмы со звездой.
[40:34.000 --> 40:39.000]  То есть это отношение на n, b, d тигмы со звездой.
[40:39.000 --> 40:44.000]  Поэтому здесь все честно.
[40:44.000 --> 40:49.000]  Так, хорошо.
[40:49.000 --> 40:54.000]  Давайте я спрошу, индукционный переход в одну сторону понятен?
[40:54.000 --> 40:59.000]  Здесь все честно.
[40:59.000 --> 41:04.000]  В обратную сторону.
[41:11.000 --> 41:16.000]  Так.
[41:16.000 --> 41:21.000]  По длине вывода.
[41:21.000 --> 41:26.000]  По длине вывода.
[41:26.000 --> 41:31.000]  По длине вывода.
[41:31.000 --> 41:36.000]  Смотрите еще раз.
[41:36.000 --> 41:41.000]  Значит, а выводит b, v за ноль шагов.
[41:41.000 --> 41:46.000]  Что это означает?
[41:46.000 --> 41:51.000]  Ну тогда у нас а без а в грамматике, давайте g будем писать,
[41:51.000 --> 41:56.000]  выводит епсилон за один шаг.
[41:56.000 --> 42:01.000]  Потому что у нас есть такое правило грамматики.
[42:01.000 --> 42:06.000]  Переход.
[42:06.000 --> 42:11.000]  Кто здесь понимает, как происходит переход?
[42:11.000 --> 42:16.000]  Кто здесь понимает, как происходит переход?
[42:16.000 --> 42:21.000]  На самом деле здесь можно написать два слова.
[42:21.000 --> 42:26.000]  Смотри картинку.
[42:26.000 --> 42:31.000]  Можно так говорить.
[42:31.000 --> 42:36.000]  То есть смотрите, по факту вот это, это переход.
[42:36.000 --> 42:41.000]  То есть еще раз.
[42:41.000 --> 42:46.000]  Что мы говорим? У нас а выводит b, v. Давайте рассмотрим первый момент времени,
[42:46.000 --> 42:51.000]  когда выводится b, первый момент времени, когда выводится символ е.
[42:51.000 --> 42:56.000]  Выводим такое правило по предположению индукции.
[42:56.000 --> 43:01.000]  Получаем остальные выводы.
[43:01.000 --> 43:06.000]  То есть смотрите, как мы сделали. То есть мы построили конструкцию
[43:06.000 --> 43:11.000]  для того, чтобы у нас произошел переход.
[43:11.000 --> 43:16.000]  А?
[43:16.000 --> 43:21.000]  Да.
[43:21.000 --> 43:26.000]  Главное, эту ссылку не удалить.
[43:26.000 --> 43:31.000]  Да.
[43:31.000 --> 43:36.000]  Понятно, что переход можно здесь не оформлять.
[43:36.000 --> 43:41.000]  Хорошо, теперь доказательство самого факта.
[43:41.000 --> 43:46.000]  Значит, нам нужно вывести, показать следующее.
[43:46.000 --> 43:51.000]  Доказательство ремы, что в грамматике в нормальной форме хомского
[43:51.000 --> 43:56.000]  идет вывод тогда, только тогда, когда у нас выводят это все в нормальной форме грейбах.
[43:56.000 --> 44:01.000]  Ну, давайте смотреть.
[44:01.000 --> 44:06.000]  Ну, давайте смотреть, что у нас здесь происходит.
[44:06.000 --> 44:11.000]  Первый момент, что если у нас
[44:11.000 --> 44:16.000]  ε принадлежит l в нормальной форме грейбах,
[44:16.000 --> 44:21.000]  следовательно, тогда и только тогда, когда s выводит ε,
[44:21.000 --> 44:26.000]  то есть существует правило, s выводит ε, мы его оставляем
[44:26.000 --> 44:31.000]  в грамматике g.
[44:31.000 --> 44:36.000]  Ну и в грамматике в нормальной форме хомского мы его тоже оставляем.
[44:44.000 --> 44:49.000]  Да.
[44:49.000 --> 44:54.000]  Согласен. Согласен.
[44:54.000 --> 44:59.000]  С, да, то есть тут везде надо...
[45:04.000 --> 45:09.000]  Да.
[45:09.000 --> 45:14.000]  Вот так. Хорошо, согласен.
[45:14.000 --> 45:19.000]  Это нотация, что это в грамматике в нормальной форме хомского.
[45:19.000 --> 45:24.000]  Так, переход. Значит, смотрите, что здесь происходит.
[45:24.000 --> 45:29.000]  Ну, здесь, собственно, те же самые рассуждения, которые у нас есть.
[45:29.000 --> 45:34.000]  Допустим, у нас с вами
[45:37.000 --> 45:42.000]  w равняется ау,
[45:42.000 --> 45:47.000]  тогда будет утверждение следующее.
[45:47.000 --> 45:52.000]  Ау принадлежит языку задомаемой в грамматике в нормальной форме хомского.
[45:52.000 --> 45:57.000]  А это означает, что у нас есть вот как раз тот вывод в дереве, который был.
[46:05.000 --> 46:10.000]  Грамматики в нормальной форме хомского такое, что
[46:10.000 --> 46:15.000]  s выводит ау, и за один шаг мы вводим ау.
[46:15.000 --> 46:20.000]  Тогда по лемме мы понимаем
[46:20.000 --> 46:25.000]  с вами следующее, что a без s
[46:25.000 --> 46:30.000]  будет выводить не терминалу.
[46:30.000 --> 46:35.000]  И это уже в нормальной форме грейбах.
[46:35.000 --> 46:40.000]  Ну а как вот такие правила у нас порождается? Смотрите, у нас из a выводится а,
[46:40.000 --> 46:45.000]  и из a без s выводится символ у. У нас есть правило следующее.
[46:45.000 --> 46:50.000]  s за один раз в нормальной форме грейбах
[46:50.000 --> 46:55.000]  вводит следующую вещь.
[46:55.000 --> 47:00.000]  А вот это у нас выводит ау,
[47:00.000 --> 47:05.000]  наше слово w.
[47:10.000 --> 47:15.000]  Все, доказали теорему.
[47:22.000 --> 47:27.000]  То есть видите, идет огромное количество магии
[47:27.000 --> 47:32.000]  с тем, что первый раз выводится.
[47:40.000 --> 47:45.000]  Они большая часть
[47:45.000 --> 47:50.000]  будут недостижимы
[47:50.000 --> 47:55.000]  этих терминалов. То есть то количество терминалов,
[47:55.000 --> 48:00.000]  которые мы вводим, они скорее всего будут недостижимыми.
[48:00.000 --> 48:05.000]  Не, у нас нет гипотетического перехода
[48:05.000 --> 48:10.000]  с d и e. Тут обман зрения.
[48:10.000 --> 48:15.000]  Из d добираться до e мы могли не за один шаг, а за какое-то большое количество шагов.
[48:15.000 --> 48:20.000]  То есть у нас d могла замениться на...
[48:20.000 --> 48:25.000]  То есть у нас могла цепочка первых не терминалов по пути вывода просто поменяться.
[48:25.000 --> 48:30.000]  То есть у нас не было этой цепочки, это не терминал e.
[48:37.000 --> 48:42.000]  Да, да.
[48:42.000 --> 48:47.000]  То есть он не будет прирождающим.
[48:47.000 --> 48:52.000]  Так, теперь еще один взрыв мозга.
[48:52.000 --> 48:57.000]  Извините, это нужно для того, чтобы просто совместить еще один факт
[48:57.000 --> 49:02.000]  и не доказывать еще одну лишнюю теорему.
[49:02.000 --> 49:07.000]  Давайте мысленно сделаем следующую вещь.
[49:07.000 --> 49:12.000]  Вы понимаете, что мы можем по факту придумать обратную нормальную форму Хомского,
[49:12.000 --> 49:17.000]  где выводится у нас сначала самый последний символ?
[49:17.000 --> 49:22.000]  То, что мы можем аналогичным образом выводить последний символ, а не первый.
[49:22.000 --> 49:27.000]  Ну да, все, хорошо, просто это надо поговорить.
[49:27.000 --> 49:32.000]  Обратная нормальная форма Грейбах.
[49:32.000 --> 49:37.000]  Зачем это нам надо? Это нам нужно для того, чтобы построить автомат без эпсилон переходов.
[49:37.000 --> 49:42.000]  Давайте это буду, напишу ее здесь.
[49:43.000 --> 49:48.000]  Нам нужно, чтобы последний символ раскрывался.
[49:48.000 --> 49:53.000]  Сейчас я это объясню.
[49:53.000 --> 49:58.000]  Давайте вспомним, какой у нас был автомат в прошлый раз.
[49:58.000 --> 50:03.000]  Как мы пока из грамматики строили АМП-автомат?
[50:05.000 --> 50:10.000]  Кто вспомнит?
[50:10.000 --> 50:15.000]  Амп-автомат.
[50:15.000 --> 50:20.000]  Амп-автомат.
[50:20.000 --> 50:25.000]  Кто вспомнит?
[50:25.000 --> 50:30.000]  Да, да, да.
[50:30.000 --> 50:35.000]  Нет, с чего бы?
[50:35.000 --> 50:40.000]  Она бы строила, если бы мы строили пока из грамматики по автомат немножко другим способом.
[50:40.000 --> 50:45.000]  А третья мысль такая. У нас, допустим, есть правила вот такого типа.
[50:45.000 --> 50:50.000]  Это означает, что у нас был бы автомат вида вот такого,
[50:50.000 --> 50:55.000]  и дальше был бы автомат следующего образа.
[50:55.000 --> 51:00.000]  Мы снимали эпсилон, точнее, читали бы эпсилон,
[51:00.000 --> 51:05.000]  на входе бы принимали C, B, A, и на выходе писали A.
[51:05.000 --> 51:10.000]  Смотрите, у нас проблема в том, что вот здесь вот правила грамматики,
[51:10.000 --> 51:15.000]  которые есть, они содержат эпсилон.
[51:15.000 --> 51:20.000]  Правила вывода АМП-автоматов.
[51:20.000 --> 51:25.000]  Но давайте теперь внимательно посмотрим на эту конструкцию.
[51:25.000 --> 51:30.000]  Когда у нас символ А появляется на стеке,
[51:30.000 --> 51:35.000]  оно закрывает какое-то правило.
[51:35.000 --> 51:40.000]  То есть у нас добавляется вот этот символ на стеке,
[51:40.000 --> 51:45.000]  а потом происходит свертка.
[51:45.000 --> 51:50.000]  С этим символом.
[51:50.000 --> 51:55.000]  Поэтому эти два правила можно объединить.
[51:55.000 --> 52:00.000]  Вот это и вот это.
[52:00.000 --> 52:05.000]  И получить правило вида A.
[52:05.000 --> 52:10.000]  Со стека снимаем C, B и кладем A на стек.
[52:10.000 --> 52:15.000]  То есть как только мы хотим применить свертку по этому правилу,
[52:15.000 --> 52:20.000]  мы с вами берем и применяем правило для последней буквы, которое мы положили.
[52:30.000 --> 52:35.000]  Понятно ли это идея?
[52:35.000 --> 52:40.000]  Что для каждого правила вот такого вида у нас есть буква, которая ее породила.
[52:40.000 --> 52:45.000]  Берем правило для этой буквы и повторяем комбинацию этих двух правил.
[52:45.000 --> 52:50.000]  Ку-ку.
[52:50.000 --> 52:55.000]  Ку-ку.
[52:55.000 --> 53:00.000]  Есть еще второй неприятный случай, который нужно разобрать.
[53:00.000 --> 53:05.000]  Мы убираем эпсовом переход в mp-автомате.
[53:05.000 --> 53:10.000]  В mp-автомате, который мы построили по кс-грейматике в нормальной форме грейпах.
[53:10.000 --> 53:15.000]  Говорим, что у нас есть правило вот такого типа и нам нужно убрать отсюда эпсовом переход.
[53:15.000 --> 53:20.000]  Замечаем последний символ, который у нас стирался.
[53:20.000 --> 53:25.000]  Его кто-то добавил, оно было добавлено по такому правилу.
[53:25.000 --> 53:30.000]  Значит перед вот этой сверткой шло вот это правило.
[53:30.000 --> 53:35.000]  Вот мы...
[53:35.000 --> 53:40.000]  Да, да, да.
[53:40.000 --> 53:43.000]  Вот.
[53:43.000 --> 53:48.000]  Если кто не верит, формальное доказательство тут есть на слайдах.
[53:48.000 --> 53:53.000]  Но оно будет буквально слово в слово практически повторять переходы в эпсовом этом.
[53:53.000 --> 53:58.000]  Да, да, конечно же.
[53:58.000 --> 54:03.000]  Вот. Второй переход, который тоже важно рассмотреть, это вот...
[54:03.000 --> 54:08.000]  Это вот такая цепочка.
[54:08.000 --> 54:13.000]  Как вот это правило убрать?
[54:13.000 --> 54:18.000]  Посмотрите.
[54:18.000 --> 54:23.000]  Да.
[54:23.000 --> 54:28.000]  Вот.
[54:28.000 --> 54:33.000]  Вот.
[54:33.000 --> 54:38.000]  Вот.
[54:38.000 --> 54:43.000]  Да.
[54:43.000 --> 54:48.000]  Да, смотрите, у нас уже есть правило вот такого типа.
[54:48.000 --> 54:53.000]  A, C, B, A.
[54:53.000 --> 54:58.000]  Допустим, у нас был вывод в правиле S, V, O, A, B, C.
[54:58.000 --> 55:03.000]  Это значит, как бы мы его преобразовали?
[55:03.000 --> 55:08.000]  Если бы оно было, мы бы выводили бы...
[55:08.000 --> 55:13.000]  Ой, да.
[55:13.000 --> 55:18.000]  C, B, A.
[55:18.000 --> 55:23.000]  Это означает, что если у нас вывод идет такого правила, то мы делаем следующую вещь.
[55:23.000 --> 55:28.000]  Мы говорим с вами, что...
[55:28.000 --> 55:33.000]  Сделаем переход.
[55:33.000 --> 55:38.000]  Давайте нарисуем. Вот отсюда.
[55:38.000 --> 55:43.000]  Вот сюда. По вот такому символу.
[55:43.000 --> 55:48.000]  Сейчас, секунду.
[55:48.000 --> 55:53.000]  Чтобы на stack S не класть.
[55:54.000 --> 55:59.000]  То есть как бы мы повторяем три действия?
[55:59.000 --> 56:04.000]  То есть у нас вот это вот все дело было вот так.
[56:04.000 --> 56:09.000]  A, Epsilon, A.
[56:09.000 --> 56:14.000]  Это в старой грамматике.
[56:14.000 --> 56:19.000]  Дальше у нас было бы Epsilon, C, B, A, S.
[56:19.000 --> 56:24.000]  И Epsilon, S, Epsilon.
[56:24.000 --> 56:29.000]  Вот. И мы вот эти три правила вхлапываем в одно.
[56:35.000 --> 56:40.000]  Остался последний момент. Если S выводит Epsilon, то как это решить?
[56:40.000 --> 56:45.000]  Да.
[56:45.000 --> 56:50.000]  Если S выводится Epsilon, тогда это только тогда, когда Q0 в нашем автомате влияет.
[56:50.000 --> 56:55.000]  Потому что мы в завершающем состоянии.
[56:55.000 --> 57:00.000]  Формальное доказательство будет точно такое же.
[57:00.000 --> 57:05.000]  Давайте рассмотрим первый момент, когда появился не терминал C.
[57:05.000 --> 57:10.000]  И появился не терминал B.
[57:10.000 --> 57:15.000]  И построим цепочку. Вот вспоминаем предыдущие доказательства, и оно будет работать.
[57:15.000 --> 57:20.000]  Тем самым мы доказали, что у нас можно построить MP-автомат без Epsilon переходов.
[57:20.000 --> 57:25.000]  Так.
[57:25.000 --> 57:30.000]  Согласны с этим?
[57:30.000 --> 57:35.000]  Хорошо. Теперь как пересечь MP-автоматы и обычные автоматы?
[57:40.000 --> 57:45.000]  Да.
[57:45.000 --> 57:50.000]  Да.
[57:50.000 --> 57:55.000]  Да, именно.
[57:55.000 --> 58:00.000]  А?
[58:00.000 --> 58:05.000]  Значит, смотрите, картинка. MP это что такое?
[58:05.000 --> 58:10.000]  Это NKA.
[58:10.000 --> 58:15.000]  Однобуквенный плюс СТЭК.
[58:15.000 --> 58:20.000]  Я, извините, слово СТЭК не умею писать по-русски, поэтому я напишу это по-английски.
[58:20.000 --> 58:25.000]  Что такое NKA с однобуквенными переходами?
[58:25.000 --> 58:30.000]  Ну, это он и есть.
[58:30.000 --> 58:35.000]  Тогда что будет такое пересечение MP?
[58:35.000 --> 58:40.000]  Пересечение двух NKA
[58:40.000 --> 58:45.000]  плюс СТЭК, который
[58:45.000 --> 58:50.000]  привязывается к нему сбоку.
[58:50.000 --> 58:55.000]  Где?
[58:55.000 --> 59:00.000]  Там не было бы понятно, как эти переходы все замыкать.
[59:01.000 --> 59:06.000]  То есть как? Вы в одном автомате переходите по букве, а во втором что делаем?
[59:06.000 --> 59:11.000]  То есть в обычном NKA с однобуквенным переходами мы переходим по букве,
[59:11.000 --> 59:16.000]  а что делать в MP-автомате в этот момент времени?
[59:23.000 --> 59:28.000]  Вот смотрите еще раз. У вас есть один автомат, в нем перешли по букве.
[59:28.000 --> 59:33.000]  А в MP-автомате, допустим, мы сделали вот такой переход.
[59:37.000 --> 59:42.000]  Вы предлагаете просто СТЭК поменять.
[59:42.000 --> 59:47.000]  Но при этом, смотрите, здесь-то мы находимся уже в конкретном состоянии, и здесь находимся в конкретном состоянии.
[59:50.000 --> 59:55.000]  Если СТЭК поменять, то в одном автомате мы прочитали уже
[59:55.000 --> 01:00:00.000]  букву, все замечательно, а в этом мы еще эту букву не прочитали.
[01:00:00.000 --> 01:00:05.000]  У нас происходит не совпадение автоматов.
[01:00:05.000 --> 01:00:10.000]  Для NKA с однобуквенными переходами.
[01:00:15.000 --> 01:00:20.000]  Собственно, тут есть доказательство очень долгое.
[01:00:20.000 --> 01:00:25.000]  Нет, тут все формально написано.
[01:00:28.000 --> 01:00:35.000]  Вот это вот просто слово в слово пересказывание доказательства факта пересечения KS грамматики в MP-автомате.
[01:00:35.000 --> 01:00:40.000]  Смотрите, строим-те картовое произведение.
[01:00:40.000 --> 01:00:45.000]  Вот эти двух автоматов.
[01:00:45.000 --> 01:00:50.000]  Вот они переходы.
[01:00:50.000 --> 01:00:55.000]  Переходы согласованы.
[01:00:55.000 --> 01:01:00.000]  Из пары переходов мы делаем переходы на время.
[01:01:00.000 --> 01:01:05.000]  У нас просто будут похожие идеи, поэтому мы с вами это пропустим.
[01:01:05.000 --> 01:01:10.000]  Давайте картинку рассмотрим.
[01:01:10.000 --> 01:01:15.000]  Вот у нас есть с вами два автомата.
[01:01:15.000 --> 01:01:20.000]  Как их объединить?
[01:01:20.000 --> 01:01:25.000]  Как их пересечь?
[01:01:25.000 --> 01:01:30.000]  Собственно, не зря они нарисованы по строкам и по столбцам.
[01:01:30.000 --> 01:01:35.000]  Давайте применять. Давайте нарисую этот автомат на доске.
[01:01:47.000 --> 01:01:52.000]  В этом автомате будут четыре состояния.
[01:01:52.000 --> 01:01:57.000]  Стартовые будут там же.
[01:01:57.000 --> 01:02:02.000]  Завершающая где будет? Справа, снизу.
[01:02:02.000 --> 01:02:07.000]  Теперь давайте переходы разберем.
[01:02:07.000 --> 01:02:12.000]  По строке у нас есть переход по букве А. Это означает, что переходы здесь будут какие?
[01:02:12.000 --> 01:02:17.000]  У утверждения, что будет переход вот такой.
[01:02:22.000 --> 01:02:27.000]  То есть в одном переходе мы в автомате двинулись по стейку, в другом не подвинулись.
[01:02:27.000 --> 01:02:32.000]  Какие еще переходы?
[01:02:37.000 --> 01:02:42.000]  У утверждения, что есть вот такой переход.
[01:02:42.000 --> 01:02:47.000]  Есть вот такой переход.
[01:02:47.000 --> 01:02:52.000]  То есть смотрите, мы не меняемся по столбцу вот здесь, но меняемся по строкам.
[01:02:52.000 --> 01:02:57.000]  Какой автомат в утверждении этих автоматов принимает слово?
[01:02:57.000 --> 01:03:02.000]  Какие?
[01:03:02.000 --> 01:03:07.000]  Какие?
[01:03:07.000 --> 01:03:12.000]  Какой автомат в утверждении этих автоматов принимает слово?
[01:03:12.000 --> 01:03:17.000]  Какие типы слов принимают?
[01:03:17.000 --> 01:03:22.000]  Вот этот вот.
[01:03:27.000 --> 01:03:32.000]  БАБ со звездой.
[01:03:32.000 --> 01:03:37.000]  Ну да, стэк здесь оказался абсолютно бесполезный.
[01:03:37.000 --> 01:03:42.000]  А что принимает у нас эти два других автомата?
[01:03:42.000 --> 01:03:47.000]  То есть первый автомат у нас принимает АБ со звездой.
[01:03:47.000 --> 01:03:52.000]  А второй автомат у нас принимает слова вида какие?
[01:03:52.000 --> 01:03:57.000]  О, господи, тут их сложно.
[01:03:57.000 --> 01:04:02.000]  А?
[01:04:02.000 --> 01:04:07.000]  А нет, он как раз и принимает вот этот автомат.
[01:04:13.000 --> 01:04:18.000]  Вот.
[01:04:18.000 --> 01:04:23.000]  Это совпало.
[01:04:23.000 --> 01:04:28.000]  А?
[01:04:28.000 --> 01:04:33.000]  Нет, так именно.
[01:04:33.000 --> 01:04:38.000]  А, там сложнее, да.
[01:04:38.000 --> 01:04:43.000]  Могут быть Ашки в середине, да.
[01:04:43.000 --> 01:04:48.000]  Нет, они не могут быть в середине.
[01:04:48.000 --> 01:04:53.000]  Нет, смотрите,
[01:04:53.000 --> 01:04:58.000]  после Ашки сразу Башка должна идти.
[01:04:58.000 --> 01:05:03.000]  То есть мы по Башке не пройдем, пока мы на стэк букву А не положим.
[01:05:08.000 --> 01:05:13.000]  А потому что тогда перебор по Башкам будет.
[01:05:13.000 --> 01:05:18.000]  Нет смысла в автомате.
[01:05:18.000 --> 01:05:23.000]  Согласен, чисто экспериментальный пример.
[01:05:23.000 --> 01:05:28.000]  Вот этот язык.
[01:05:28.000 --> 01:05:33.000]  Тоже самое.
[01:05:33.000 --> 01:05:38.000]  Да.
[01:05:38.000 --> 01:05:43.000]  Так, хорошо.
[01:05:43.000 --> 01:05:48.000]  Значит, это что касается темы КС-МП-автоматов без эпсилон-переходов.
[01:05:48.000 --> 01:05:53.000]  Хорошо, понятно.
[01:05:53.000 --> 01:05:58.000]  Тут, может, было сказать, вот и сказочный конец, а кто слушал, молодец.
[01:05:58.000 --> 01:06:03.000]  Но у нас есть еще 20 минут, поэтому.
[01:06:04.000 --> 01:06:09.000]  Мы лекцию в 11.47 начали.
[01:06:16.000 --> 01:06:21.000]  Да, внезапно, да. Пока мы все собирались.
[01:06:21.000 --> 01:06:26.000]  Поэтому мы начнем с вами интересную тему.
[01:06:34.000 --> 01:06:39.000]  Да.
[01:06:39.000 --> 01:06:44.000]  Да, это единственная тема, которая можно рассказать с конспектом.
[01:06:44.000 --> 01:06:49.000]  А?
[01:06:49.000 --> 01:06:54.000]  Да.
[01:06:54.000 --> 01:06:59.000]  Да ладно, возникает.
[01:06:59.000 --> 01:07:04.000]  Это в нормальной форме грейбах, да?
[01:07:04.000 --> 01:07:09.000]  Ну, смотрите, у нас же есть правила вот такие вот.
[01:07:09.000 --> 01:07:14.000]  А если вот этот символ эпсилон-порождающий?
[01:07:19.000 --> 01:07:24.000]  Он может быть эпсилон-порождающим.
[01:07:31.000 --> 01:07:36.000]  Ну, у нас из них терминал, может выяснить то же самое, что и С.
[01:07:36.000 --> 01:07:41.000]  Элер алгоритм.
[01:07:41.000 --> 01:07:46.000]  На семинарах будут два типа алгоритмов.
[01:07:46.000 --> 01:07:51.000]  Помните, у нас с вами был автомат перенос свертка, на который мы уже с вами нарисовали.
[01:07:51.000 --> 01:07:56.000]  И здесь возникает следующий вопрос.
[01:07:56.000 --> 01:08:01.000]  Вот смотрите, у нас есть правило вида.
[01:08:01.000 --> 01:08:06.000]  Эпсилона.
[01:08:06.000 --> 01:08:11.000]  Есть правило, значит, эпсилон альфа-а.
[01:08:11.000 --> 01:08:16.000]  Вот эти правила, это правило вида shift.
[01:08:16.000 --> 01:08:21.000]  А вот эти правила, это правило вида reduce.
[01:08:21.000 --> 01:08:26.000]  Вопрос. Какое из правил применять?
[01:08:31.000 --> 01:08:36.000]  Значит, если мы с вами попробуем применить оба эти правила одновременно,
[01:08:36.000 --> 01:08:41.000]  то внезапно у нас в алгоритме получится экспоненциальная сложность.
[01:08:41.000 --> 01:08:46.000]  Потому что у нас будет перебор вариантов всех возможных развилок.
[01:08:46.000 --> 01:08:51.000]  То есть мы каждый раз можем либо применить правило shift, либо мы можем с вами применить правило reduce.
[01:08:51.000 --> 01:08:56.000]  Ну да, бесконечное время выполнения.
[01:08:56.000 --> 01:09:01.000]  Поэтому нам нужно каким-то образом научиться этот алгоритм делать чуть-чуть эффективнее.
[01:09:01.000 --> 01:09:06.000]  И здесь нам на помощь приходит алгоритм early внезапно.
[01:09:06.000 --> 01:09:11.000]  Я надеюсь, вы его не забыли.
[01:09:11.000 --> 01:09:16.000]  Что у нас было в алгоритме early?
[01:09:16.000 --> 01:09:21.000]  Ситуация.
[01:09:21.000 --> 01:09:26.000]  Ситуация выглядела вот таким образом.
[01:09:26.000 --> 01:09:31.000]  Я видел ваш холивар в субботу вечером в чате.
[01:09:31.000 --> 01:09:36.000]  Бесподобный.
[01:09:36.000 --> 01:09:41.000]  Точнее, в пятницу вечером.
[01:09:41.000 --> 01:09:46.000]  Но я подумал, раз суббота выходной, вы решили повеселиться.
[01:09:46.000 --> 01:09:51.000]  Ситуация.
[01:09:51.000 --> 01:09:56.000]  Значит, смотрите следующая вещь, которая у нас возникает.
[01:09:56.000 --> 01:10:01.000]  Мы с вами говорили, что у нас есть ситуация.
[01:10:01.000 --> 01:10:06.000]  Вот эти и ижи, они определяют позиции внутри слова, длину слова.
[01:10:06.000 --> 01:10:11.000]  Сколько символов мы разобрали, сколько символов мы разобрали вы родители.
[01:10:11.000 --> 01:10:16.000]  За счет того, что мы делали 4,4 по этим ситуациям, у нас возникала купическая сложность.
[01:10:16.000 --> 01:10:21.000]  Поэтому давайте мы сделаем хитрую вещь.
[01:10:21.000 --> 01:10:26.000]  Давайте попробуем избавиться от этих индексов.
[01:10:26.000 --> 01:10:31.000]  Избавиться от этих индексов.
[01:10:31.000 --> 01:10:36.000]  Просто оставить вот такую вещь.
[01:10:36.000 --> 01:10:41.000]  Чем их заменять?
[01:10:41.000 --> 01:10:46.000]  Утверждение, которое мы будем с вами доказывать, что мы можем над множеством вот этих вот ситуаций,
[01:10:46.000 --> 01:10:51.000]  некоторым образом построить детерминированный конечный автомат.
[01:10:51.000 --> 01:10:56.000]  А теперь, а?
[01:10:56.000 --> 01:11:01.000]  А как мы будем переходить из ситуации в ситуацию?
[01:11:01.000 --> 01:11:06.000]  Давайте подумаем.
[01:11:06.000 --> 01:11:11.000]  Рассмотрим правила вида scan и вида predict.
[01:11:11.000 --> 01:11:16.000]  С комплитом позже разберемся.
[01:11:16.000 --> 01:11:21.000]  Смотрите, здесь у нас была ситуация следующая.
[01:11:21.000 --> 01:11:26.000]  Альфа точка Аб.
[01:11:26.000 --> 01:11:31.000]  Переходим в ситуацию вида А стрелочка Альфа А точка Бета.
[01:11:31.000 --> 01:11:36.000]  Смотрите, давайте считать, что это переход по букве А.
[01:11:36.000 --> 01:11:41.000]  То есть из такой ситуации в такую ситуацию мы будем переходить по букве А.
[01:11:41.000 --> 01:11:46.000]  Вот.
[01:11:46.000 --> 01:11:51.000]  Значит, предикт в данном случае будет следующим.
[01:11:51.000 --> 01:11:56.000]  Если у нас есть А стрелочка Альфа точка Бета,
[01:11:56.000 --> 01:12:01.000]  ну и было правило Б стрелочка Гаммы, то мы будем с вами делать следующий переход.
[01:12:01.000 --> 01:12:06.000]  Б стрелочка точка Гамма.
[01:12:06.000 --> 01:12:11.000]  По какой букве переход? Сколько символов мы прочитали?
[01:12:11.000 --> 01:12:16.000]  Эпсилон.
[01:12:16.000 --> 01:12:21.000]  Мы говорим следующее, что вот это переход по букве А, а вот это переход по букве А.
[01:12:21.000 --> 01:12:26.000]  Нет, комплит мы не выбрасываем. На помойку мы делаем кое-что хитрее.
[01:12:26.000 --> 01:12:31.000]  Нет.
[01:12:31.000 --> 01:12:36.000]  Мы сделаем хитрее.
[01:12:36.000 --> 01:12:41.000]  Мы с вами...
[01:12:46.000 --> 01:12:51.000]  Мы сделаем очень просто.
[01:12:58.000 --> 01:13:03.000]  Вот так.
[01:13:03.000 --> 01:13:08.000]  Разрешим переход до пони-терминала.
[01:13:08.000 --> 01:13:13.000]  Состоянии?
[01:13:13.000 --> 01:13:18.000]  Да, очень много будет.
[01:13:25.000 --> 01:13:30.000]  Да, но единственное, мы сейчас поменяем порядок обхода этого автомата.
[01:13:34.000 --> 01:13:39.000]  А вот теперь хитрый момент. На самом деле, сейчас мы будем доказывать следующую вещь,
[01:13:39.000 --> 01:13:44.000]  что когда мы будем... Вообще цель всего этого процесса,
[01:13:44.000 --> 01:13:49.000]  это займет у нас несколько лекций, все формально объяснить, потому что это тяжелая история,
[01:13:49.000 --> 01:13:54.000]  наша цель будет состоять в следующем.
[01:13:54.000 --> 01:13:59.000]  Во-первых, мы с вами построим детерминирный конечный автомат над этим всем делом.
[01:13:59.000 --> 01:14:04.000]  Формально определим все возможные операции, которые у нас будут.
[01:14:04.000 --> 01:14:09.000]  А дальше мы скажем следующее, что...
[01:14:09.000 --> 01:14:14.000]  Мы будем хранить путь в нашем автомате.
[01:14:14.000 --> 01:14:19.000]  Какое формальное определение пути? Кто знает?
[01:14:19.000 --> 01:14:24.000]  В графе.
[01:14:24.000 --> 01:14:29.000]  Смотрите, значит, если...
[01:14:29.000 --> 01:14:34.000]  Нету.
[01:14:34.000 --> 01:14:39.000]  Вот смотрите, допустим, у нас есть E1, E2, E3.
[01:14:39.000 --> 01:14:44.000]  Как этот путь задается?
[01:14:44.000 --> 01:14:49.000]  Нет, не только последствия.
[01:14:49.000 --> 01:14:54.000]  Да, вот это формальное определение пути.
[01:14:54.000 --> 01:14:59.000]  Вот это последовательность.
[01:14:59.000 --> 01:15:04.000]  Мы будем хранить путь в этом автомате.
[01:15:04.000 --> 01:15:09.000]  И лемма, которую нам нужно будет доказать, что если мы с вами, допустим, добрались
[01:15:09.000 --> 01:15:14.000]  по правилу, β, стрелочка, гамма, точка,
[01:15:14.000 --> 01:15:19.000]  то внезапно на ребрах у нас будет написано гамма.
[01:15:19.000 --> 01:15:24.000]  Ну и здесь у нас будет написано где-то гамма.
[01:15:24.000 --> 01:15:29.000]  А это значит, смотрите, что мы сможем сделать. Мы сможем откатиться по вот этому пути по гамме
[01:15:29.000 --> 01:15:34.000]  и пойти по правильному не терминалу.
[01:15:34.000 --> 01:15:39.000]  Что, вообще непонятно, да?
[01:15:39.000 --> 01:15:44.000]  Давайте какую-нибудь простую грамматику разберем.
[01:15:44.000 --> 01:15:49.000]  Совсем простую.
[01:15:49.000 --> 01:15:54.000]  Нет.
[01:16:15.000 --> 01:16:20.000]  Вот, вот такая грамматика.
[01:16:20.000 --> 01:16:25.000]  И изо штриха выводится С.
[01:16:25.000 --> 01:16:30.000]  Значит, добавляем всегда в эту грамматику и давайте строить.
[01:16:30.000 --> 01:16:35.000]  Начинаем с вот такой ситуации.
[01:16:35.000 --> 01:16:40.000]  Дальше переход по С, С точка.
[01:16:40.000 --> 01:16:45.000]  У нас возникает переход по эпсилону.
[01:16:45.000 --> 01:16:50.000]  Это у нас получается А.
[01:16:50.000 --> 01:16:55.000]  С стрелочка точка АВ.
[01:16:55.000 --> 01:17:00.000]  Дальше здесь мы можем еще один эпсилон переход сделать.
[01:17:00.000 --> 01:17:05.000]  А стрелочка точка А.
[01:17:06.000 --> 01:17:11.000]  А стрелочка точка.
[01:17:18.000 --> 01:17:23.000]  А точка В.
[01:17:24.000 --> 01:17:31.000]  И получаем вот такой вот у нас автомат.
[01:17:35.000 --> 01:17:40.000]  Да, входим по нему.
[01:17:43.000 --> 01:17:48.000]  Ну, один раз построить мы считаем, что это константное время.
[01:17:48.000 --> 01:17:53.000]  Оно нас не интересует.
[01:17:53.000 --> 01:17:58.000]  Это все на стадии компиляции происходит.
[01:17:58.000 --> 01:18:03.000]  Даже на стадии кодогенерации.
[01:18:03.000 --> 01:18:08.000]  Смотрите, давайте мы с вами сейчас определим множество.
[01:18:08.000 --> 01:18:13.000]  В чем проблема?
[01:18:13.000 --> 01:18:18.000]  А, построить? Да ни в чем.
[01:18:18.000 --> 01:18:26.000]  Итак, смотрите, что нам нужно будет определить в качестве математического объекта.
[01:18:26.000 --> 01:18:31.000]  Это операция клоуза.
[01:18:31.000 --> 01:18:36.000]  Пока что это не ДК.
[01:18:36.000 --> 01:18:41.000]  Смотрите, клоуза от И это будет такое множество G.
[01:18:41.000 --> 01:18:46.000]  Которое будет олитворять следующим соотношением.
[01:18:46.000 --> 01:18:51.000]  Во-первых, G является над множеством множества И.
[01:18:51.000 --> 01:18:56.000]  И второе свойство, которое есть.
[01:18:56.000 --> 01:19:03.000]  Если у нас есть правило, а, стрелочка, альфа, точка, b, бета, принадлежит G.
[01:19:07.000 --> 01:19:12.000]  Гамма принадлежит правилам грамматики.
[01:19:12.000 --> 01:19:17.000]  То b, стрелочка, точка, гамма принадлежит G.
[01:19:17.000 --> 01:19:22.000]  То есть по факту это предикт.
[01:19:29.000 --> 01:19:34.000]  Ишка. Нет, не должна.
[01:19:34.000 --> 01:19:41.000]  То есть это наименьшее по включению над множество И, которое олитворяет этому соотношению.
[01:19:41.000 --> 01:19:46.000]  А я в чём переходы?
[01:19:46.000 --> 01:19:51.000]  И вторая операция.
[01:19:51.000 --> 01:19:56.000]  Go to от И по какому-то символу Х,
[01:19:56.000 --> 01:20:01.000]  по какому-то символу Х,
[01:20:01.000 --> 01:20:06.000]  по какому-то символу Х,
[01:20:06.000 --> 01:20:11.000]  по какому-то символу Х,
[01:20:11.000 --> 01:20:16.000]  это будет замыкание
[01:20:16.000 --> 01:20:21.000]  вот этого множества.
[01:20:21.000 --> 01:20:26.000]  А, стрелочка, альфа, х, точка, бета,
[01:20:26.000 --> 01:20:31.000]  при условии того, что
[01:20:31.000 --> 01:20:36.000]  а, стрелочка, альфа, точка, х, бета, принадлежит множеству И.
[01:20:43.000 --> 01:20:48.000]  Вот. Значит, что такое go to?
[01:20:48.000 --> 01:20:53.000]  Давайте я сразу поясню. Это по факту переходы в нашем ДК.
[01:20:53.000 --> 01:20:58.000]  Помните алгоритм Тобсона построения ДК?
[01:20:58.000 --> 01:21:03.000]  По всем вершинам. По факту это вот то, что у нас получается.
[01:21:03.000 --> 01:21:08.000]  И тогда у нас наш автомат превратится
[01:21:08.000 --> 01:21:13.000]  после применения операции go to и close вот в такой.
[01:21:13.000 --> 01:21:18.000]  Да, но это множеством ситуаций.
[01:21:18.000 --> 01:21:23.000]  С штрих, точка, с, с, точка, а, б,
[01:21:23.000 --> 01:21:28.000]  а, стрелочка, точка, а.
[01:21:28.000 --> 01:21:33.000]  Переход по букве а ведет нас сюда.
[01:21:33.000 --> 01:21:38.000]  Переход по большой букве
[01:21:38.000 --> 01:21:43.000]  а, точка, бета.
[01:21:43.000 --> 01:21:48.000]  И переход по букве с
[01:21:48.000 --> 01:21:53.000]  ведет нас сюда.
[01:21:53.000 --> 01:21:58.000]  Как вы думаете, какое оно будет?
[01:21:58.000 --> 01:22:03.000]  Нет, вот это. Логично.
[01:22:03.000 --> 01:22:08.000]  С штрих, стрелочка, с, точка. То есть мы дошли до туда.
[01:22:08.000 --> 01:22:13.000]  И вот теперь смотрите.
[01:22:13.000 --> 01:22:18.000]  Что в этой грамматике интересного?
[01:22:18.000 --> 01:22:23.000]  Да.
[01:22:23.000 --> 01:22:28.000]  То есть это переход по терминалу или не терминалу?
[01:22:28.000 --> 01:22:33.000]  А теперь смотрите интересное правило.
[01:22:33.000 --> 01:22:38.000]  Это я грамматику простую подобрал.
[01:22:38.000 --> 01:22:43.000]  И если мы в нашем автомате попадем вот в это правило,
[01:22:43.000 --> 01:22:48.000]  вот в это правило, у которого точка с правого конца,
[01:22:48.000 --> 01:22:53.000]  то утверждение нам надо делать reduce.
[01:22:53.000 --> 01:22:58.000]  То есть мы на самом деле находимся в конце нашего правила.
[01:22:58.000 --> 01:23:03.000]  Не, ну вот в терминах вот того автомата, который у нас был.
[01:23:03.000 --> 01:23:08.000]  То есть по факту это комплит, мы завершили правило.
[01:23:08.000 --> 01:23:13.000]  Но что такое завершить правило в автомате переноса свертки?
[01:23:13.000 --> 01:23:18.000]  Это нужно правую часть заменить на левую часть правила.
[01:23:18.000 --> 01:23:23.000]  И как ни странно, смотрите, какой путь в автомате.
[01:23:23.000 --> 01:23:28.000]  Если мы прошли по А, значит дальше нам нужно двинуться по С.
[01:23:28.000 --> 01:23:33.000]  То есть у нас будет переход с возвратом.
[01:23:33.000 --> 01:23:38.000]  То есть вместо операции complete мы будем идти назад по нашему пути автомате
[01:23:38.000 --> 01:23:43.000]  и проходить по левой части правила.
[01:23:43.000 --> 01:23:48.000]  То есть у нас было правило С, стрелочка А, Б.
[01:23:48.000 --> 01:23:53.000]  Здесь мы прошли по А, здесь мы прошли по Б, оказались здесь.
[01:23:53.000 --> 01:23:58.000]  Мы снимаем правую часть правила по пути и идем по левой части правила.
[01:23:58.000 --> 01:24:03.000]  Понимаете терминал С?
[01:24:03.000 --> 01:24:08.000]  То есть у нас идем-идем-идем вперед, считываем правила,
[01:24:08.000 --> 01:24:13.000]  если мы дошли до конца и мы видим, что дошли до конца, мы отматываемся назад
[01:24:13.000 --> 01:24:18.000]  и идем по левой части правила по другому.
[01:24:18.000 --> 01:24:23.000]  Да, а когда зашли в тупик?
[01:24:23.000 --> 01:24:28.000]  Чем помечаем?
[01:24:28.000 --> 01:24:33.000]  Нет, нет.
[01:24:33.000 --> 01:24:38.000]  Ну да, не обязательно.
[01:24:38.000 --> 01:24:43.000]  То есть это простой автомат, мы его будем усложнять.
[01:24:43.000 --> 01:24:48.000]  Ну во-первых, такое не для всех грамматику можно построить без конфликтов.
[01:24:48.000 --> 01:24:53.000]  Здесь есть разные типы конфликтов, поэтому я думаю,
[01:24:53.000 --> 01:24:58.000]  мы их как раз будем разбирать в следующий раз и уже дадим формальные определения
[01:24:58.000 --> 01:25:03.000]  и поймем, что такое допустимое в множестве ситуаций для конкретного разбора стека.
[01:25:03.000 --> 01:25:08.000]  И вот этим мы с вами как раз и будем заниматься.
[01:25:08.000 --> 01:25:13.000]  Это такое небольшое введение, чтобы вы готовились к тому,
[01:25:13.000 --> 01:25:18.000]  чтобы понимать, что именно у нас будет на следующих лекциях.
[01:25:18.000 --> 01:25:23.000]  На семинарах будут примеры разбираться.
[01:25:23.000 --> 01:25:28.000]  Все, давайте вопросы.
[01:25:28.000 --> 01:25:33.000]  Да, именно так.
[01:25:33.000 --> 01:25:38.000]  То есть при операции shift мы идем по автомату в переходе по букве,
[01:25:38.000 --> 01:25:43.000]  читаем символ со входа, пишем его на стэк.
[01:25:43.000 --> 01:25:48.000]  Как только мы дошли до конца какого-то правила, мы понимаем,
[01:25:48.000 --> 01:25:53.000]  что мы находимся в конце какого-то правила.
[01:25:53.000 --> 01:25:58.000]  Мы отматываем этот стэк, отматываем наш путь в автомате
[01:25:58.000 --> 01:26:03.000]  и делаем переход по не терминалу.
[01:26:03.000 --> 01:26:08.000]  Утверждение,
[01:26:08.000 --> 01:26:13.000]  для грамматики, у которых не будет здесь однозначных переходов,
[01:26:13.000 --> 01:26:18.000]  это будет работать за линию длинных слов.
[01:26:19.000 --> 01:26:24.000]  Точнее, наоборот, для которых будет однозначное действие.
[01:26:24.000 --> 01:26:29.000]  Здесь, смотрите, точка в конце правила, но здесь мог бы еще переход по буквице.
[01:26:29.000 --> 01:26:34.000]  То есть у нас могло быть не одно правило, а несколько.
[01:26:34.000 --> 01:26:39.000]  Но, смотрите, если бы внезапно оказалось следующее правило.
[01:26:40.000 --> 01:26:45.000]  Точка С,
[01:26:45.000 --> 01:26:50.000]  и здесь есть переход по букве С.
[01:26:54.000 --> 01:26:59.000]  Вот, вот мы находимся в этом ситуации. Вопрос, что сделать?
[01:26:59.000 --> 01:27:04.000]  Непонятно.
[01:27:05.000 --> 01:27:10.000]  И вот для таких грамматик мы не будем рассматривать эту конструкцию.
[01:27:10.000 --> 01:27:15.000]  Нет, а на самом деле обратно можно идти не одним способом,
[01:27:15.000 --> 01:27:20.000]  но для этого мы храним путь в нашем автомате.
[01:27:20.000 --> 01:27:25.000]  А отматываем наш путь, текущий.
[01:27:25.000 --> 01:27:30.000]  То есть вот один из типов конфликтов, который нам нужно будет уметь решать.
[01:27:30.000 --> 01:27:35.000]  Все, давайте я отпущу вас.
[01:27:35.000 --> 01:27:40.000]  В следующий раз мы уже с вами формально введем все определения
[01:27:40.000 --> 01:27:45.000]  и уже будем разбираться с этими замечательными вещами.
