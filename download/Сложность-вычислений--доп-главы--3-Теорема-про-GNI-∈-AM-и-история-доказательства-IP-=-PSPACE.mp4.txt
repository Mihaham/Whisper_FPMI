[00:00.000 --> 00:06.000]  Давайте начнём.
[00:06.000 --> 00:18.000]  Так, значит, главный сегодня такой.
[00:18.000 --> 00:23.000]  Мы сначала завершим доказательство теории с прошлого раза.
[00:23.000 --> 00:28.000]  Значит, про то, что для задачи унеизморфизма графов есть
[00:28.000 --> 00:32.000]  интерактивный протокол с общими случайными видами.
[00:32.000 --> 00:41.000]  Вот, а потом начнём оказывать, что теперь оно по space.
[00:41.000 --> 00:46.000]  Так, значит, давайте я напомню.
[00:46.000 --> 00:50.000]  Мы доказываем теорему,
[00:50.000 --> 00:55.000]  то, значит, задача GNI
[00:55.000 --> 00:57.000]  лежит в АМ.
[00:57.000 --> 01:01.000]  То есть есть протокол с общими случайными битами.
[01:01.000 --> 01:05.000]  Ну и построено доказательство было вот на кое идея.
[01:05.000 --> 01:08.000]  Да, значит, чтобы мы рассматривали некоторые множества.
[01:08.000 --> 01:13.000]  Так, давайте во-первых.
[01:13.000 --> 01:20.000]  Значит, я напомню, что у нас GNI означает, что у нас есть два графа G0, G1.
[01:20.000 --> 01:25.000]  Значит, таких, что G0 неизморфно G1.
[01:25.000 --> 01:37.000]  Вот, ну и можно считать, что вершины одинаковое количество.
[01:37.000 --> 01:41.000]  То есть число вершин уже 0 равно числу вершин G1 и равно n.
[01:41.000 --> 01:44.000]  Вот, потому что иначе задача тривиальная.
[01:44.000 --> 01:48.000]  Значит, если разное число вершин, то тогда точно они неизморфные.
[01:48.000 --> 01:50.000]  И, соответственно, точно можно сказать, да.
[01:50.000 --> 01:55.000]  А вот только если одинаковые, тогда там можно о чем-то рассуждать.
[01:55.000 --> 01:58.000]  Вот, конечно, значит, вообще задача обыкновенной архитектуры графов,
[01:58.000 --> 02:02.000]  она такая на непонятной сложности.
[02:02.000 --> 02:06.000]  Потому что вообще кажется, что там, как мы будем ее решать,
[02:06.000 --> 02:09.000]  ну, посчитаем к ней много характеристик.
[02:09.000 --> 02:12.000]  Если разное число вершин, то неизморфно.
[02:12.000 --> 02:14.000]  Если разное число ребер, то тоже неизморфно.
[02:14.000 --> 02:24.000]  Посчитаем распределение степеней, там какие-нибудь структуры под графия,
[02:24.000 --> 02:27.000]  там еще что-нибудь, минор какие-нибудь.
[02:27.000 --> 02:31.000]  Но, кажется, вот так вот мы какие-нибудь такие характеристики найдем.
[02:31.000 --> 02:34.000]  Так что если они все одинаковые, то графа изоморфная.
[02:34.000 --> 02:37.000]  Но, тем не менее, так не получается.
[02:37.000 --> 02:44.000]  Чем больше размер графа, тем больше нужно характеристик считать.
[02:44.000 --> 02:49.000]  Но вот, тем не менее, есть алгоритм Бабайи,
[02:49.000 --> 02:55.000]  который работает за квазиполеном, то есть за и на степени поленом от логарифма.
[02:55.000 --> 02:58.000]  И там даже поленом небольшой типа логарифма в кубе.
[02:58.000 --> 03:00.000]  Или там, может, два степена логарифма в кубе,
[03:00.000 --> 03:03.000]  в общем-то надо посмотреть, что там заявляется.
[03:03.000 --> 03:07.000]  Но, тем не менее, поленомиальный алгоритм так и неизвестно.
[03:14.000 --> 03:16.000]  Хорошо.
[03:18.000 --> 03:22.000]  Дальше мы рассматривали, мы обсуждали про группу автоморфизмов
[03:22.000 --> 03:26.000]  и говорили, что нужно рассмотреть такое множество.
[03:26.000 --> 03:30.000]  Значит множество С.
[03:30.000 --> 03:35.000]  Значит множество пар из графа и перестановки.
[03:35.000 --> 03:42.000]  Значит так, что H изоморфно же ноль,
[03:42.000 --> 03:46.000]  или H изоморфно же один.
[03:46.000 --> 03:54.000]  Вот, и при этом альфа это автоморфизм H.
[03:56.000 --> 04:00.000]  Вот, и мы тогда обсудили следующее.
[04:00.000 --> 04:04.000]  Значит, обсудили, что если они неизоморфные,
[04:04.000 --> 04:08.000]  значит, если же ноль действительно неизоморфно же один,
[04:08.000 --> 04:12.000]  то тогда размер этого S это двоим материал.
[04:12.000 --> 04:17.000]  А если они изоморфные,
[04:17.000 --> 04:21.000]  то тогда размер S это неизоморфная.
[04:21.000 --> 04:25.000]  А если они изоморфные,
[04:25.000 --> 04:29.000]  то тогда размер S это n-факториал.
[04:29.000 --> 04:33.000]  Вот, при этом принадлежность к С можно удостоверять
[04:33.000 --> 04:37.000]  сертификатом, как в NP.
[04:37.000 --> 04:41.000]  Соответственно, стоит вопрос, размер этого множества будет большой или маленький.
[04:41.000 --> 04:45.000]  Дальше первая идея была от метод Монте-Карло.
[04:45.000 --> 04:47.000]  То есть просто будем брать случайный объект,
[04:47.000 --> 04:49.000]  и смотреть, лежит он в С или нет.
[04:49.000 --> 04:53.000]  В любом случае это S очень маленькая.
[04:53.000 --> 04:59.000]  И, соответственно, скорее всего мы с ноль туда попадем.
[04:59.000 --> 05:03.000]  Поэтому следующая идея — это использовать хэш-функции,
[05:03.000 --> 05:07.000]  которая уменьшает все объявляющее множество,
[05:07.000 --> 05:09.000]  но не сильно уменьшает вот это множество,
[05:09.000 --> 05:13.000]  так что доля становится значительной.
[05:13.000 --> 05:17.000]  Последнее, что мы в прошлый раз успели,
[05:17.000 --> 05:19.000]  сделать систему хэш-функций нужных.
[05:19.000 --> 05:21.000]  Так, и это у нас было довольно быстро,
[05:21.000 --> 05:25.000]  так что давайте я вкратце напомню.
[05:25.000 --> 05:33.000]  Так, значит, мы строим семейство
[05:33.000 --> 05:37.000]  семейства папарно-независимых
[05:37.000 --> 05:45.000]  семейства папарно-независимых хэш-функций.
[05:45.000 --> 05:49.000]  Значит, там было такое h, n, k.
[05:49.000 --> 05:55.000]  Значит, это семейство функций
[05:55.000 --> 06:03.000]  из слов длины n двоичных в слова длины k.
[06:03.000 --> 06:07.000]  Значит, как правило, k меньше n,
[06:07.000 --> 06:09.000]  и у нас в приложении будет k меньше n,
[06:09.000 --> 06:11.000]  но определять это можно для k равного n,
[06:11.000 --> 06:17.000]  или даже для k больше n.
[06:17.000 --> 06:21.000]  Вот, совместное определение три свойства,
[06:21.000 --> 06:25.000]  ну или четыре, там смотря как определять.
[06:25.000 --> 06:31.000]  Значит, первые два – это малый размер
[06:31.000 --> 06:35.000]  и эффективная учислимость.
[06:35.000 --> 06:39.000]  Значит, малый размер означает, что
[06:39.000 --> 06:43.000]  в этом семействе будет два в степени
[06:43.000 --> 06:47.000]  полинома от n, k функций.
[06:47.000 --> 06:49.000]  То есть, просто экспонента.
[06:49.000 --> 06:51.000]  Вот, и в данном случае экспонента – это маленькое число,
[06:51.000 --> 06:55.000]  потому что общее число функции – двойное экспонента.
[06:55.000 --> 06:57.000]  Вот, и экспоненциальный размер нам дает
[06:57.000 --> 06:59.000]  полиномиальную длину описания.
[06:59.000 --> 07:03.000]  То есть, как бы у каждой функции
[07:03.000 --> 07:07.000]  есть индекс описания вот такой длины.
[07:07.000 --> 07:11.000]  Так, значит, второе.
[07:11.000 --> 07:17.000]  Второе свойство – это эффективная учислимость.
[07:17.000 --> 07:25.000]  Эффективная учислимость означает следующее.
[07:25.000 --> 07:29.000]  Что просто есть алгоритм, который получает описание функции
[07:29.000 --> 07:33.000]  и вход.
[07:33.000 --> 07:45.000]  То есть, по описанию h и входу x
[07:45.000 --> 07:55.000]  можно посчитать h от x
[07:55.000 --> 07:57.000]  за полиномиальное время.
[07:57.000 --> 08:05.000]  Значит, за время
[08:05.000 --> 08:09.000]  полинома от n, k.
[08:09.000 --> 08:11.000]  Вот, и третье свойство, которое, собственно,
[08:11.000 --> 08:13.000]  делает их по паре независимые.
[08:13.000 --> 08:15.000]  Так, ну да, там был два варианта.
[08:15.000 --> 08:17.000]  В прошлый раз давайте я один напишу.
[08:17.000 --> 08:19.000]  Что если…
[08:19.000 --> 08:21.000]  Который я… Который мы не будем доказывать.
[08:21.000 --> 08:23.000]  Значит, если x не равно x-трих,
[08:23.000 --> 08:27.000]  значит, а y…
[08:27.000 --> 08:33.000]  Ну, сейчас, значит, эти вот x не равно x-трих, они длины n.
[08:33.000 --> 08:37.000]  Вот, а y, y-трих, а длины k
[08:37.000 --> 08:39.000]  уже может быть и равные, в принципе.
[08:39.000 --> 08:43.000]  Вот, то тогда получается следующее.
[08:43.000 --> 08:45.000]  Значит, тогда вероятность
[08:45.000 --> 08:49.000]  для случайных функций h, значит,
[08:49.000 --> 08:53.000]  того, что одновременно h от x
[08:53.000 --> 08:57.000]  равно y и h от x-трих
[08:57.000 --> 09:01.000]  равняется y-трих.
[09:01.000 --> 09:03.000]  Так, значит, эта вероятность будет
[09:03.000 --> 09:07.000]  1 делить на 2 в степени 2х.
[09:11.000 --> 09:13.000]  Вот, ну и тогда, значит,
[09:13.000 --> 09:17.000]  из этого можно вывести, что
[09:17.000 --> 09:21.000]  для каждого отдельного x и случайный h
[09:21.000 --> 09:23.000]  значение распределено равномерно,
[09:23.000 --> 09:25.000]  и распределение для разных x и h-трих
[09:25.000 --> 09:27.000]  будет независимое.
[09:27.000 --> 09:31.000]  Поэтому мы только разудим по парам независимые хэш-функции.
[09:33.000 --> 09:35.000]  Так, ну и последнее, что было в прошлый раз,
[09:35.000 --> 09:37.000]  это конструкция.
[09:37.000 --> 09:39.000]  Значит, конструкция была такая,
[09:39.000 --> 09:41.000]  что мы рассматриваем поле
[09:41.000 --> 09:43.000]  из 2 в степени аналиментов.
[09:47.000 --> 09:51.000]  Значит, f с индексом 2 в n.
[09:51.000 --> 09:53.000]  Значит, это вот поле
[09:53.000 --> 09:57.000]  из 2 в степени аналиментов.
[09:59.000 --> 10:01.000]  Дальше есть, конечно, вопрос,
[10:01.000 --> 10:03.000]  откуда такое поле брать.
[10:03.000 --> 10:05.000]  Ну, есть стандартная конструкция
[10:05.000 --> 10:07.000]  через неправдивый многочлен.
[10:07.000 --> 10:09.000]  И тогда в этом поле
[10:09.000 --> 10:11.000]  элементы это просто строки из 0 единиц
[10:11.000 --> 10:13.000]  на длины k.
[10:17.000 --> 10:19.000]  И, соответственно, складываем их мы
[10:19.000 --> 10:21.000]  просто по-координатно.
[10:21.000 --> 10:23.000]  Сложение это по-координатной ксор.
[10:23.000 --> 10:25.000]  А умножение,
[10:25.000 --> 10:27.000]  это умножение по модуле
[10:27.000 --> 10:29.000]  неправдивого многочлена,
[10:29.000 --> 10:31.000]  то есть вот эти строки интерпретируются как
[10:31.000 --> 10:33.000]  коэффициенты при степенях,
[10:33.000 --> 10:35.000]  от 0 до n-1.
[10:35.000 --> 10:37.000]  И, соответственно, мы умножаем
[10:37.000 --> 10:39.000]  многочлены как обычно,
[10:39.000 --> 10:41.000]  но потом то, что получилось, делим с остатком
[10:41.000 --> 10:43.000]  на неправдивый многочлен,
[10:43.000 --> 10:45.000]  который в поле задается.
[10:45.000 --> 10:47.000]  И что-то получаем.
[10:47.000 --> 10:49.000]  Ну, значит, там есть теоремы,
[10:49.000 --> 10:51.000]  что это на самом деле только одно поле,
[10:51.000 --> 10:53.000]  и какой бы вы неправдивый многочлен не взяли,
[10:53.000 --> 10:55.000]  там все получится
[10:55.000 --> 10:57.000]  изоможно друг к другу.
[10:57.000 --> 10:59.000]  И, соответственно,
[10:59.000 --> 11:01.000]  если вы хотите,
[11:01.000 --> 11:03.000]  чтобы у вас был
[11:03.000 --> 11:05.000]  единый алгоритм,
[11:05.000 --> 11:07.000]  чтобы это не для фиксированного n,
[11:07.000 --> 11:09.000]  а для любого n происходило,
[11:09.000 --> 11:11.000]  то получается, что вам нужно
[11:11.000 --> 11:13.000]  по n каким-то образом находить
[11:13.000 --> 11:15.000]  неправдивый многочлен.
[11:15.000 --> 11:17.000]  Ну и вот на этот счет
[11:17.000 --> 11:19.000]  нет простого, детерминированного алгоритма.
[11:19.000 --> 11:21.000]  Значит, вообще алгоритмы есть,
[11:21.000 --> 11:23.000]  но довольно сложные
[11:23.000 --> 11:25.000]  со всякой хитрой алгеброй.
[11:25.000 --> 11:27.000]  Ну, относительно
[11:27.000 --> 11:29.000]  простой метод вероятностный.
[11:29.000 --> 11:31.000]  Ну, я тоже не буду доказывать.
[11:33.000 --> 11:35.000]  Не знаю, это в теории коллекции
[11:35.000 --> 11:37.000]  по линии доказывали,
[11:37.000 --> 11:39.000]  но там теорема такая,
[11:39.000 --> 11:41.000]  если брать случайный многочлен,
[11:41.000 --> 11:43.000]  то есть...
[11:51.000 --> 11:53.000]  Ну, там есть теорема о количестве
[11:53.000 --> 11:55.000]  неправдивых многочленов,
[11:55.000 --> 11:57.000]  что оно, типа, от 1 и 2 n,
[11:57.000 --> 11:59.000]  до 1 и n, и там что-то такое.
[11:59.000 --> 12:01.000]  Не доказывали такое, да?
[12:01.000 --> 12:03.000]  Ну, вот.
[12:03.000 --> 12:05.000]  Соответственно, что получается?
[12:05.000 --> 12:07.000]  Допустим, вы в это поверили,
[12:07.000 --> 12:09.000]  и вторая вещь, что есть
[12:09.000 --> 12:11.000]  это алгоритм поверки неправдимости.
[12:13.000 --> 12:15.000]  Вот, этот тоже не было.
[12:17.000 --> 12:19.000]  Ну ладно, в общем, там...
[12:19.000 --> 12:21.000]  Давайте тоже поверим.
[12:21.000 --> 12:23.000]  Вот, там алгоритм кантера
[12:23.000 --> 12:25.000]  и кого-то еще,
[12:25.000 --> 12:27.000]  но это не тот кантер, который Георг
[12:27.000 --> 12:29.000]  придумал в теории множества,
[12:29.000 --> 12:31.000]  а более современный кантер, который,
[12:31.000 --> 12:33.000]  не знаю, может, и жив еще.
[12:33.000 --> 12:35.000]  Там 81-го года алгоритм.
[12:39.000 --> 12:41.000]  Заксен Хаус, что ли,
[12:41.000 --> 12:43.000]  что-то такого бы их фамилия.
[12:43.000 --> 12:45.000]  Вот, и есть еще, в общем, ряд
[12:45.000 --> 12:47.000]  алгоритмов в проверке.
[12:49.000 --> 12:51.000]  Вот. И тогда получается,
[12:51.000 --> 12:53.000]  что если мы в эти две вещи поверили,
[12:53.000 --> 12:55.000]  то тогда получается,
[12:55.000 --> 12:57.000]  что можно
[12:57.000 --> 12:59.000]  брать случайный многочлен
[12:59.000 --> 13:01.000]  и этим алгоритмом
[13:01.000 --> 13:03.000]  проверять его неправдимость.
[13:03.000 --> 13:05.000]  И поскольку их довольно много,
[13:05.000 --> 13:07.000]  порядка 1n,
[13:07.000 --> 13:09.000]  то за порядка n экспериментов
[13:09.000 --> 13:11.000]  мы в среднем найдем неправдимый многочлен
[13:11.000 --> 13:13.000]  и после этого уже будем вычислять.
[13:15.000 --> 13:17.000]  Вот.
[13:17.000 --> 13:19.000]  Но вот это вот то, что я сказал,
[13:19.000 --> 13:21.000]  это там во всяких книжках по вычислительной алгебре
[13:21.000 --> 13:23.000]  написано.
[13:23.000 --> 13:25.000]  Да, в общем, это
[13:25.000 --> 13:27.000]  в таких специализированных
[13:27.000 --> 13:29.000]  учебниках есть.
[13:29.000 --> 13:31.000]  А вот детерминированные алгоритмы я тоже поискал.
[13:31.000 --> 13:33.000]  Оказалось, что их тоже
[13:33.000 --> 13:35.000]  там есть несколько, но
[13:35.000 --> 13:37.000]  они как только в оригинальных статьях есть,
[13:37.000 --> 13:39.000]  больше нигде не описаны.
[13:39.000 --> 13:41.000]  Так что, видимо, они не очень простые.
[13:43.000 --> 13:45.000]  Да, я, конечно, в деталях
[13:45.000 --> 13:47.000]  не разобрался пока.
[13:47.000 --> 13:49.000]  Ну, не знаю, может, попробую разобраться.
[13:51.000 --> 13:53.000]  Вряд ли там что-то элементарное,
[13:53.000 --> 13:55.000]  что можно понять без глубокого погружения
[13:55.000 --> 13:57.000]  в алгебру.
[13:57.000 --> 13:59.000]  Так, хорошо.
[13:59.000 --> 14:01.000]  Ну ладно, в общем,
[14:01.000 --> 14:03.000]  теперь давайте мы в это поверим,
[14:03.000 --> 14:05.000]  что такое поле есть, и можно в нем все вычислять.
[14:07.000 --> 14:09.000]  Вот, и тогда
[14:09.000 --> 14:11.000]  мы будем считать,
[14:11.000 --> 14:13.000]  что k равно n.
[14:13.000 --> 14:15.000]  Значит, конструкция
[14:19.000 --> 14:21.000]  для k равна vn
[14:21.000 --> 14:23.000]  заключается в следующем.
[14:23.000 --> 14:25.000]  Значит, что
[14:27.000 --> 14:29.000]  в функции сдается пара и просто элементов
[14:29.000 --> 14:31.000]  этого поля.
[14:33.000 --> 14:35.000]  H, AB.
[14:37.000 --> 14:39.000]  Значит, задается
[14:43.000 --> 14:45.000]  пара элементов.
[14:49.000 --> 14:51.000]  Пара элементов A и B.
[14:53.000 --> 14:55.000]  Вот, как это, соответственно,
[14:59.000 --> 15:01.000]  они оба из поля.
[15:01.000 --> 15:03.000]  Отсюда получается малый размер.
[15:05.000 --> 15:07.000]  То есть 2n получается,
[15:07.000 --> 15:09.000]  длина индекса одной функции.
[15:11.000 --> 15:13.000]  И следующая формула
[15:13.000 --> 15:15.000]  дает нам эффективную
[15:15.000 --> 15:17.000]  учислимость.
[15:17.000 --> 15:19.000]  H, AB, A, T, X.
[15:19.000 --> 15:21.000]  Это будет просто A плюс BX.
[15:21.000 --> 15:23.000]  Значит, где умножение
[15:23.000 --> 15:25.000]  на B и прибавление A,
[15:25.000 --> 15:27.000]  это операция из поля.
[15:27.000 --> 15:29.000]  Ну, и тогда вот
[15:29.000 --> 15:31.000]  последняя выкладка в прошлый раз,
[15:31.000 --> 15:33.000]  которая довольно быстро была.
[15:33.000 --> 15:35.000]  Сейчас еще повторим,
[15:35.000 --> 15:37.000]  что если у меня получается
[15:37.000 --> 15:39.000]  одновременно Y
[15:39.000 --> 15:41.000]  равно A плюс BX,
[15:41.000 --> 15:43.000]  а Y штрих
[15:43.000 --> 15:45.000]  равняется A плюс BX штрих.
[15:45.000 --> 15:47.000]  Вот если мы эту систему
[15:47.000 --> 15:49.000]  начнем решать,
[15:49.000 --> 15:51.000]  то мы получим...
[15:53.000 --> 15:55.000]  Например, что мы вычтем
[15:55.000 --> 15:57.000]  одно из другого,
[15:57.000 --> 15:59.000]  когда сократится.
[15:59.000 --> 16:01.000]  Y минус Y штрих равняется B
[16:01.000 --> 16:03.000]  на X минус X штрих.
[16:03.000 --> 16:05.000]  Ну, и второе равнение можно оставить.
[16:05.000 --> 16:07.000]  Ну, можно второе, можно первое.
[16:07.000 --> 16:09.000]  Давайте первое,
[16:09.000 --> 16:11.000]  потому что у него
[16:11.000 --> 16:13.000]  символов меньше.
[16:13.000 --> 16:15.000]  Значит, Y это A плюс BX.
[16:15.000 --> 16:17.000]  Ну, а после этого, поскольку это поле,
[16:17.000 --> 16:19.000]  а X не равно X штрих,
[16:19.000 --> 16:21.000]  поэтому X минус X штрих это не ноль,
[16:21.000 --> 16:23.000]  и поэтому у него можно поделить.
[16:25.000 --> 16:27.000]  Получаем, что B
[16:27.000 --> 16:29.000]  будет равняться
[16:29.000 --> 16:31.000]  Y минус Y штрих
[16:31.000 --> 16:33.000]  делить на X минус X штрих.
[16:33.000 --> 16:35.000]  Вот, а после этого
[16:35.000 --> 16:37.000]  Y... Ой, не Y, а...
[16:39.000 --> 16:41.000]  А теперь можно вычислить как Y
[16:41.000 --> 16:43.000]  минус
[16:43.000 --> 16:45.000]  вот это вот B
[16:45.000 --> 16:47.000]  Y минус Y штрих
[16:47.000 --> 16:49.000]  делить на X минус X штрих
[16:49.000 --> 16:51.000]  и умноженное на X.
[16:51.000 --> 16:53.000]  Вот.
[16:53.000 --> 16:55.000]  Значит, что же получается?
[16:55.000 --> 16:57.000]  Получается, что вот этот набор,
[16:57.000 --> 16:59.000]  значит, набор
[16:59.000 --> 17:01.000]  вот этих
[17:01.000 --> 17:03.000]  X х штрих, Y х штрих
[17:05.000 --> 17:07.000]  нам дает ровно одну пару A и B.
[17:09.000 --> 17:11.000]  То есть, что получается?
[17:11.000 --> 17:13.000]  Получается, что ровно одна пара
[17:13.000 --> 17:15.000]  из 2 в степени 2n подходит.
[17:17.000 --> 17:19.000]  Ну, вот если мы посмотрим
[17:21.000 --> 17:23.000]  на третье условие,
[17:23.000 --> 17:25.000]  то это ровно то, что нам нужно.
[17:25.000 --> 17:27.000]  Значит, нам нужно, чтобы вероятность
[17:27.000 --> 17:29.000]  была 1 делить на 2 в степени 2k,
[17:29.000 --> 17:31.000]  а k равно n, поэтому 2 в степени 2k
[17:31.000 --> 17:33.000]  то же самое, что 2 в степени 2n.
[17:35.000 --> 17:37.000]  Ну и вероятность как раз
[17:37.000 --> 17:39.000]  по классическому определению,
[17:39.000 --> 17:41.000]  значит, одна подходящая
[17:41.000 --> 17:43.000]  делить на 2 в степени 2n
[17:43.000 --> 17:45.000]  его как раз будет то,
[17:45.000 --> 17:47.000]  что нам нужно.
[17:47.000 --> 17:49.000]  Вот, в общем, второе
[17:51.000 --> 17:53.000]  второй свойств получается.
[17:55.000 --> 17:57.000]  Вот, если k меньше n,
[17:57.000 --> 17:59.000]  то что можно делать?
[18:01.000 --> 18:03.000]  Ну, во-первых, можно взять просто префикс.
[18:07.000 --> 18:09.000]  Значит, если k меньше n,
[18:09.000 --> 18:11.000]  то можно просто взять префикс
[18:11.000 --> 18:13.000]  на там h.
[18:13.000 --> 18:15.000]  А b от x это будет
[18:15.000 --> 18:17.000]  значит, a плюс bx.
[18:19.000 --> 18:21.000]  И мы возьмем как бы первые
[18:21.000 --> 18:23.000]  каобитов.
[18:25.000 --> 18:27.000]  Вот, тогда что
[18:27.000 --> 18:29.000]  получится?
[18:29.000 --> 18:31.000]  Ну, первые, вторые свойства
[18:31.000 --> 18:33.000]  понятно, никуда не денутся.
[18:33.000 --> 18:35.000]  Вот, ну а третье
[18:35.000 --> 18:37.000]  получится, что мы просто просунули
[18:37.000 --> 18:39.000]  каобитов.
[18:39.000 --> 18:41.000]  А третье получится, что мы просто просуммируем
[18:41.000 --> 18:43.000]  как раз нужное количество,
[18:43.000 --> 18:45.000]  на что
[18:45.000 --> 18:47.000]  для одного и того же значения
[18:47.000 --> 18:49.000]  вот этого a плюс bx
[18:49.000 --> 18:51.000]  обрезанного
[18:51.000 --> 18:53.000]  будет там 2 в степени n-ка
[18:53.000 --> 18:55.000]  значений
[18:55.000 --> 18:57.000]  соответственно
[18:57.000 --> 18:59.000]  полного
[19:01.000 --> 19:03.000]  2 в степени n-ка
[19:03.000 --> 19:05.000]  вариантов продления.
[19:05.000 --> 19:07.000]  Вот этого значения до
[19:07.000 --> 19:09.000]  элемента поля.
[19:09.000 --> 19:11.000]  Вот, ну и тогда
[19:13.000 --> 19:15.000]  у нас получается 2 в степени
[19:15.000 --> 19:17.000]  n-ка для y,
[19:17.000 --> 19:19.000]  2 в степени n-ка для y штрих,
[19:19.000 --> 19:21.000]  например,
[19:21.000 --> 19:23.000]  примерно так получается, что теперь
[19:23.000 --> 19:25.000]  2n-ка умножить на 2n-ка
[19:25.000 --> 19:27.000]  мы делим на 2
[19:27.000 --> 19:29.000]  в степени 2n,
[19:29.000 --> 19:31.000]  и это получается в точности 1 делить на
[19:31.000 --> 19:33.000]  2 в степени 2k.
[19:33.000 --> 19:35.000]  То есть то же самое классическое определение
[19:35.000 --> 19:37.000]  то же для невероятности применяем,
[19:37.000 --> 19:39.000]  считаем число последующих вариантов,
[19:39.000 --> 19:41.000]  делить на общий число вариантов и получаем то, что
[19:41.000 --> 19:43.000]  требуется как раз в третьем
[19:43.000 --> 19:45.000]  пункте.
[19:45.000 --> 19:47.000]  Так, ничего, понятно.
[19:47.000 --> 19:49.000]  Вот, ну на самом деле
[19:49.000 --> 19:51.000]  есть еще чуть-чуть более эффективный
[19:51.000 --> 19:53.000]  способ, потому что здесь получается
[19:53.000 --> 19:55.000]  2n длина описания,
[19:55.000 --> 19:57.000]  значит, можно это уменьшить
[19:57.000 --> 19:59.000]  до n плюс k.
[19:59.000 --> 20:01.000]  Значит,
[20:01.000 --> 20:03.000]  другой вариант
[20:03.000 --> 20:05.000]  такой, что мы
[20:05.000 --> 20:07.000]  сначала
[20:07.000 --> 20:09.000]  умножаем b на x,
[20:09.000 --> 20:11.000]  потом
[20:11.000 --> 20:13.000]  берем
[20:13.000 --> 20:15.000]  первые k,
[20:15.000 --> 20:17.000]  вот, и потом только прибавляем
[20:17.000 --> 20:19.000]  так, давайте
[20:19.000 --> 20:21.000]  я тут уже кторну напишу, потому что
[20:21.000 --> 20:23.000]  это уже не в поле операция,
[20:23.000 --> 20:25.000]  а с вырезанными значениями,
[20:25.000 --> 20:27.000]  и тогда вот b должно быть из поля,
[20:27.000 --> 20:29.000]  а а может быть только длины k.
[20:29.000 --> 20:31.000]  Вот.
[20:31.000 --> 20:33.000]  Ну и соответственно тут
[20:33.000 --> 20:35.000]  правда немножко сложнее рассуждение
[20:35.000 --> 20:37.000]  будет, да, почему это работает.
[20:37.000 --> 20:39.000]  Вот.
[20:39.000 --> 20:41.000]  Ну, в принципе,
[20:41.000 --> 20:43.000]  да, вообще более-менее понятно,
[20:43.000 --> 20:45.000]  почему, поскольку у нас
[20:45.000 --> 20:47.000]  положение здесь
[20:47.000 --> 20:49.000]  это тоже XOR, да,
[20:49.000 --> 20:51.000]  то можно наоборот, вместо того, чтобы сначала
[20:51.000 --> 20:53.000]  вкладывать, а потом брать префикс,
[20:53.000 --> 20:55.000]  можно просто сначала и там, и там взять
[20:55.000 --> 20:57.000]  префикс, а потом сложить.
[20:57.000 --> 20:59.000]  Вот, но если мы взяли префикс,
[20:59.000 --> 21:01.000]  то тогда лишние биты нам вообще
[21:01.000 --> 21:03.000]  не нужны, и можно их и не хранить.
[21:05.000 --> 21:07.000]  Вот.
[21:09.000 --> 21:11.000]  Так, ну ничего, понятно.
[21:13.000 --> 21:15.000]  Вот, в принципе, можно построить даже
[21:15.000 --> 21:17.000]  для случая k больше n,
[21:17.000 --> 21:19.000]  да, тогда можно там
[21:19.000 --> 21:21.000]  дополнить нулями, а дальше взять ту же самую конструкцию.
[21:21.000 --> 21:23.000]  Такое.
[21:23.000 --> 21:25.000]  Ну ладно, в общем,
[21:25.000 --> 21:27.000]  бывают и другие конструкции, значит,
[21:27.000 --> 21:29.000]  я
[21:31.000 --> 21:33.000]  наверное постараюсь
[21:33.000 --> 21:35.000]  через там пару недель сделать первую домашку,
[21:35.000 --> 21:37.000]  да, и там будет задача
[21:37.000 --> 21:39.000]  про альтернативную конструкцию,
[21:39.000 --> 21:41.000]  на которой не на
[21:41.000 --> 21:43.000]  не на арифметике
[21:43.000 --> 21:45.000]  поле основано, да,
[21:45.000 --> 21:47.000]  на матричной арифметике.
[21:49.000 --> 21:51.000]  Вот.
[21:51.000 --> 21:53.000]  Так, хорошо.
[21:55.000 --> 21:57.000]  Ну ладно, я надеюсь, что мы теперь с hash функциями
[21:57.000 --> 21:59.000]  разобрались.
[21:59.000 --> 22:01.000]  Вот, и теперь
[22:01.000 --> 22:03.000]  я покажу, как их применять.
[22:21.000 --> 22:23.000]  Ну, в принципе,
[22:23.000 --> 22:25.000]  нужно реализовать ту же самую идею,
[22:25.000 --> 22:27.000]  на что мы
[22:29.000 --> 22:31.000]  hash'ируем наше значение
[22:31.000 --> 22:33.000]  с уменьшением длины.
[22:51.000 --> 22:53.000]  Да, значит, мы hash'ируем
[22:53.000 --> 22:55.000]  наше значение,
[22:55.000 --> 22:57.000]  вот, и хотим, чтобы
[22:57.000 --> 22:59.000]  большое множество
[22:59.000 --> 23:01.000]  не сильно уменьшилось,
[23:01.000 --> 23:03.000]  то есть маленькое множество
[23:03.000 --> 23:05.000]  в любом случае
[23:05.000 --> 23:07.000]  не может увеличиться,
[23:07.000 --> 23:09.000]  потому что это однозначная функция,
[23:09.000 --> 23:11.000]  тут никакого раздваивания значений нету,
[23:11.000 --> 23:13.000]  значит, поэтому увеличиться множество не может.
[23:13.000 --> 23:15.000]  Вот.
[23:15.000 --> 23:17.000]  Ну вот, у нас было
[23:17.000 --> 23:19.000]  здесь изначально различие там в два раза,
[23:19.000 --> 23:21.000]  соответственно,
[23:21.000 --> 23:23.000]  мы хотим, например, чтобы
[23:23.000 --> 23:25.000]  после hash'ирования, скажем, в полтора раза осталось
[23:25.000 --> 23:27.000]  различие, и после этого
[23:27.000 --> 23:29.000]  уже можно метамонты карлу применять.
[23:31.000 --> 23:33.000]  Так.
[23:33.000 --> 23:35.000]  Ну ладно, значит.
[23:37.000 --> 23:39.000]  Так, значит, тут сейчас,
[23:39.000 --> 23:41.000]  тут мне очень хорошо,
[23:41.000 --> 23:43.000]  что у меня сейчас буква N будет в двух значениях.
[23:43.000 --> 23:45.000]  Надо
[23:45.000 --> 23:47.000]  с этим что-нибудь сделать.
[23:49.000 --> 23:51.000]  Ну какую-нибудь из нее
[23:51.000 --> 23:53.000]  переименуем. Давайте вот то,
[23:53.000 --> 23:55.000]  то N, которое в hash функции, будет M,
[23:55.000 --> 23:57.000]  а N будет числом вершин графа.
[23:59.000 --> 24:01.000]  Так.
[24:01.000 --> 24:03.000]  Вот N
[24:05.000 --> 24:07.000]  и это число вершин графа.
[24:07.000 --> 24:09.000]  Так, значит, теперь у нас,
[24:09.000 --> 24:11.000]  давайте я
[24:15.000 --> 24:17.000]  напомню наше определение.
[24:17.000 --> 24:19.000]  Тут hash и альфа,
[24:19.000 --> 24:21.000]  значит, такое, что hash
[24:21.000 --> 24:23.000]  изомашено же ноль
[24:23.000 --> 24:25.000]  или
[24:25.000 --> 24:27.000]  hash изомашено же один,
[24:27.000 --> 24:29.000]  то есть
[24:29.000 --> 24:31.000]  hash изомашено же ноль,
[24:31.000 --> 24:33.000]  а hash изомашено же один,
[24:33.000 --> 24:35.000]  то есть hash изомашено же ноль.
[24:35.000 --> 24:37.000]  hash изомашено же один,
[24:37.000 --> 24:39.000]  значит, альфа автоматизм.
[24:43.000 --> 24:45.000]  Так, значит, тогда типичный элемент,
[24:45.000 --> 24:47.000]  сколько вообще битов требует
[24:47.000 --> 24:49.000]  для описания.
[24:49.000 --> 24:51.000]  Но этот у нас граф на N вершинах,
[24:51.000 --> 24:53.000]  ну, например, с моего матрицы смежности
[24:53.000 --> 24:55.000]  задаем,
[24:55.000 --> 24:57.000]  ну, будет там
[24:57.000 --> 24:59.000]  N в квадрате,
[24:59.000 --> 25:01.000]  если экономить, будет там N, наверное,
[25:01.000 --> 25:03.000]  за ним пополам.
[25:03.000 --> 25:05.000]  Учитывая, что он обязательно...
[25:05.000 --> 25:07.000]  Ну, в общем,
[25:07.000 --> 25:09.000]  примерно,
[25:09.000 --> 25:11.000]  примерно N в квадрате.
[25:11.000 --> 25:13.000]  Да, это пополам,
[25:13.000 --> 25:15.000]  нам совершенно не важно.
[25:15.000 --> 25:17.000]  Это hash, а альфа,
[25:17.000 --> 25:19.000]  это перестановка из СН.
[25:19.000 --> 25:21.000]  Но их всего инфокатериал,
[25:21.000 --> 25:23.000]  что там N
[25:23.000 --> 25:25.000]  делить на E в N степени,
[25:25.000 --> 25:27.000]  ну, в общем, тоже это
[25:27.000 --> 25:29.000]  число битов.
[25:29.000 --> 25:31.000]  А тут будет
[25:31.000 --> 25:33.000]  примерно N log N.
[25:33.000 --> 25:35.000]  Значит, N log N
[25:35.000 --> 25:37.000]  будет
[25:37.000 --> 25:39.000]  при
[25:39.000 --> 25:41.000]  простом кодировании, да, что мы просто
[25:41.000 --> 25:43.000]  подряд прям пишем, кто куда
[25:43.000 --> 25:45.000]  переходит.
[25:45.000 --> 25:47.000]  Прямо через запятую,
[25:47.000 --> 25:49.000]  значит, каждый
[25:49.000 --> 25:51.000]  образ занимает граф логарифма N битов
[25:51.000 --> 25:53.000]  и всего N, поэтому N log N получается.
[25:53.000 --> 25:55.000]  Вот.
[25:55.000 --> 25:57.000]  Ну, и даже что это в квадрате,
[25:57.000 --> 25:59.000]  это главное слагаемое, да, их же сложить нужно.
[25:59.000 --> 26:01.000]  Вот. Соответственно,
[26:01.000 --> 26:03.000]  вот теперь M
[26:03.000 --> 26:05.000]  будет, значит, M это число
[26:05.000 --> 26:07.000]  число битов
[26:09.000 --> 26:11.000]  для описания
[26:15.000 --> 26:17.000]  hash и альфа.
[26:17.000 --> 26:19.000]  Значит, и M будет
[26:19.000 --> 26:21.000]  то большое, вот N в квадрате.
[26:21.000 --> 26:23.000]  Так.
[26:23.000 --> 26:25.000]  И вот это вот M
[26:25.000 --> 26:27.000]  будет тем,
[26:27.000 --> 26:29.000]  что вот там вот N
[26:29.000 --> 26:31.000]  то есть
[26:31.000 --> 26:33.000]  вот эти все
[26:33.000 --> 26:35.000]  пары мы будем подавать
[26:35.000 --> 26:37.000]  на вход hash функции.
[26:39.000 --> 26:41.000]  Так.
[26:41.000 --> 26:43.000]  Значит, теперь K нужно откуда-то взять.
[26:43.000 --> 26:45.000]  K нужно взять
[26:45.000 --> 26:47.000]  не слишком, если K
[26:47.000 --> 26:49.000]  взять не слишком,
[26:49.000 --> 26:51.000]  то хеширование
[26:51.000 --> 26:53.000]  как бы не сработает.
[26:53.000 --> 26:55.000]  В том смысле, что все равно
[26:55.000 --> 26:57.000]  это нож останется маленьким, да,
[26:57.000 --> 26:59.000]  именно, но на каждом нельзя будет применить.
[26:59.000 --> 27:01.000]  Если K взять слишком маленьким,
[27:01.000 --> 27:03.000]  то может потеряться вот этот
[27:03.000 --> 27:05.000]  разрыв в два раза.
[27:05.000 --> 27:07.000]  Вот. Поэтому K нужно
[27:07.000 --> 27:09.000]  взять прямо
[27:09.000 --> 27:11.000]  в точности.
[27:11.000 --> 27:13.000]  Вот. Ну, например,
[27:13.000 --> 27:15.000]  можно делать так. Значит, сначала мы
[27:15.000 --> 27:17.000]  да, значит, мы возьмем K
[27:17.000 --> 27:19.000]  равное 2,
[27:19.000 --> 27:21.000]  K большой равно 2 в степени K
[27:21.000 --> 27:23.000]  малое,
[27:23.000 --> 27:25.000]  с таким свойством.
[27:25.000 --> 27:27.000]  Значит, так, что
[27:31.000 --> 27:33.000]  ну, например,
[27:33.000 --> 27:35.000]  2 в степени K минус 3,
[27:35.000 --> 27:37.000]  то есть 1 восьмая K
[27:37.000 --> 27:39.000]  большого, будет меньше
[27:39.000 --> 27:41.000]  либо равно, чем N факториал,
[27:41.000 --> 27:43.000]  а это будет, например,
[27:43.000 --> 27:45.000]  там строго меньше,
[27:45.000 --> 27:47.000]  чем 2 в степени
[27:47.000 --> 27:49.000]  K минус 2.
[27:49.000 --> 27:51.000]  Вот такой нераз, это однозначно определит
[27:51.000 --> 27:53.000]  K малое.
[27:53.000 --> 27:55.000]  Вот. Почему именно так?
[27:55.000 --> 27:57.000]  Почему именно минус 3 и минус 2?
[27:57.000 --> 27:59.000]  Ну, тут идея такая, значит, чтоб там потом
[27:59.000 --> 28:01.000]  оценки сработали,
[28:01.000 --> 28:03.000]  нужно, чтобы размер S
[28:03.000 --> 28:05.000]  точно был меньше, чем половина
[28:05.000 --> 28:07.000]  от K большого.
[28:07.000 --> 28:09.000]  Вот. А размер S может быть N факториал
[28:09.000 --> 28:11.000]  или 2 инфекториал.
[28:11.000 --> 28:13.000]  Соответственно, когда мы сюда 2 еще припишем,
[28:13.000 --> 28:15.000]  будет 1 вторая от K большого.
[28:15.000 --> 28:17.000]  И вот это нужно, чтоб там потом
[28:17.000 --> 28:19.000]  не равенство работало.
[28:19.000 --> 28:21.000]  Вот.
[28:21.000 --> 28:23.000]  Ну, а нижняя оценка
[28:23.000 --> 28:25.000]  не так важна.
[28:25.000 --> 28:27.000]  Значит, тут можно было бы K минус 10 написать
[28:27.000 --> 28:29.000]  с тем же успехом. Да, просто
[28:29.000 --> 28:31.000]  что-то конкретное надо написать. Напишем вот так вот.
[28:33.000 --> 28:35.000]  Да, хорошо.
[28:37.000 --> 28:39.000]  Значит, теперь
[28:39.000 --> 28:41.000]  рассмотрим
[28:41.000 --> 28:43.000]  семейство hash функций.
[28:49.000 --> 28:51.000]  Значит, рассмотрим семейство hash функций.
[28:55.000 --> 28:57.000]  Это наши hash красивые с параметрами
[28:57.000 --> 28:59.000]  M и K.
[29:03.000 --> 29:05.000]  Вон мы только что доказали, что оно есть.
[29:05.000 --> 29:07.000]  Вот так.
[29:11.000 --> 29:13.000]  И значит, теперь
[29:13.000 --> 29:15.000]  будем доказывать,
[29:15.000 --> 29:17.000]  то образ
[29:17.000 --> 29:19.000]  вот этого S
[29:21.000 --> 29:23.000]  что если
[29:25.000 --> 29:27.000]  такая лемма
[29:31.000 --> 29:33.000]  что если
[29:33.000 --> 29:35.000]  если
[29:35.000 --> 29:37.000]  размер S
[29:47.000 --> 29:49.000]  так, точно условие сейчас
[29:49.000 --> 29:51.000]  ну уж, по крайней мере, если он меньше
[29:53.000 --> 29:55.000]  меньше, чем вот K пополам
[29:57.000 --> 29:59.000]  K большой пополам, да, то есть 20K минус 1.
[29:59.000 --> 30:01.000]  Вот, то тогда
[30:03.000 --> 30:05.000]  размер hash от S
[30:11.000 --> 30:13.000]  Так, тут, конечно, еще вопрос для какой hash.
[30:15.000 --> 30:17.000]  Ну, для случайной, на самом деле.
[30:19.000 --> 30:21.000]  Да, значит, сейчас.
[30:21.000 --> 30:23.000]  Но сейчас из выкладок будет понятно,
[30:23.000 --> 30:25.000]  правильно я написал или нет.
[30:25.000 --> 30:27.000]  Но вроде так должно быть, что
[30:27.000 --> 30:29.000]  мат ожидания по случайной hash
[30:31.000 --> 30:33.000]  размер hash от S.
[30:39.000 --> 30:41.000]  Значит, это будет
[30:43.000 --> 30:45.000]  но это точно будет
[30:47.000 --> 30:49.000]  меньше либо равно
[30:49.000 --> 30:51.000]  когда я тебя тут напишу
[30:51.000 --> 30:53.000]  значит, меньше либо равно
[30:53.000 --> 30:55.000]  размера S.
[30:55.000 --> 30:57.000]  Вот эта часть очевидная.
[30:57.000 --> 30:59.000]  Эта часть очевидная, потому что
[30:59.000 --> 31:01.000]  эта функция однозначна, когда она только склеивать может
[31:01.000 --> 31:03.000]  разные элементы,
[31:03.000 --> 31:05.000]  поэтому увеличиться образ не может.
[31:05.000 --> 31:07.000]  Вот.
[31:07.000 --> 31:09.000]  Ну а также, значит, что не очевидно
[31:09.000 --> 31:11.000]  это будет больше или меньше, чем 3 четверти.
[31:11.000 --> 31:13.000]  Значит, чем 3 четверти размеры.
[31:19.000 --> 31:21.000]  Вот. И вот это второе неразбократно будем доказывать.
[31:21.000 --> 31:23.000]  Ну.
[31:23.000 --> 31:25.000]  Значит, в принципе
[31:25.000 --> 31:27.000]  это ключевая лемма
[31:27.000 --> 31:29.000]  для открытой теоремы,
[31:29.000 --> 31:31.000]  потому что дальше происходит следующее.
[31:31.000 --> 31:33.000]  То у нас может быть
[31:33.000 --> 31:35.000]  вот эта S большая,
[31:35.000 --> 31:37.000]  2 n factorial.
[31:37.000 --> 31:39.000]  Тогда, соответственно,
[31:39.000 --> 31:41.000]  после фиширования
[31:41.000 --> 31:43.000]  оно будет не больше,
[31:43.000 --> 31:45.000]  чем 3 четверти, а 2,
[31:45.000 --> 31:47.000]  то есть чем 1,5 n factorial.
[31:47.000 --> 31:49.000]  А если оно было маленькое,
[31:49.000 --> 31:51.000]  наоборот, не больше,
[31:51.000 --> 31:53.000]  чем n factorial,
[31:53.000 --> 31:55.000]  то оно и останется не больше,
[31:55.000 --> 31:57.000]  чем n factorial.
[31:57.000 --> 31:59.000]  И получится этот разрыв между n factorial
[31:59.000 --> 32:01.000]  и 1,5 n factorial.
[32:01.000 --> 32:03.000]  И при этом этот разрыв
[32:03.000 --> 32:05.000]  уже будет вот такой вот,
[32:05.000 --> 32:07.000]  какая-то константа
[32:07.000 --> 32:09.000]  от, соответственно,
[32:09.000 --> 32:11.000]  его объема еще множества.
[32:11.000 --> 32:13.000]  Вот.
[32:13.000 --> 32:15.000]  И после этого уже можно запускать
[32:15.000 --> 32:17.000]  момент Монте-Карло,
[32:17.000 --> 32:19.000]  и забрать достаточное число случайных
[32:21.000 --> 32:23.000]  достаточное число случайных
[32:23.000 --> 32:25.000]  объектов вот отсюда.
[32:25.000 --> 32:27.000]  Ну, значит,
[32:27.000 --> 32:29.000]  нет, не отсюда, а из х значений.
[32:29.000 --> 32:31.000]  И спрашивать у плувера,
[32:31.000 --> 32:33.000]  есть ли вот в этом множестве
[32:33.000 --> 32:35.000]  пара, которая
[32:35.000 --> 32:37.000]  ну, во-первых,
[32:37.000 --> 32:39.000]  в этом множестве,
[32:39.000 --> 32:41.000]  во-вторых, дает такое х значение.
[32:41.000 --> 32:43.000]  И тогда, значит,
[32:43.000 --> 32:45.000]  в одном случае будет средняя
[32:45.000 --> 32:47.000]  порядка
[32:47.000 --> 32:49.000]  там вот n factorial
[32:49.000 --> 32:51.000]  делить на k большое,
[32:51.000 --> 32:53.000]  а в другом порядка
[32:53.000 --> 32:55.000]  1,5 n factorial делить на k большое.
[32:55.000 --> 32:57.000]  И это уже будет не порядка нуля,
[32:57.000 --> 32:59.000]  то и другое, а вот типа там
[33:01.000 --> 33:03.000]  ну, что-то между там 1 и 8
[33:03.000 --> 33:05.000]  или 1 и 2,
[33:05.000 --> 33:07.000]  какие-то два числа, которые различаются
[33:07.000 --> 33:09.000]  в полтора раза.
[33:09.000 --> 33:11.000]  И там уже можно
[33:11.000 --> 33:13.000]  конечное число раз повторить,
[33:13.000 --> 33:15.000]  чтобы, с большой вероятностью,
[33:15.000 --> 33:17.000]  приблизить к настоящему значению.
[33:19.000 --> 33:21.000]  Так, ну чего, пример понятного?
[33:23.000 --> 33:25.000]  Да, дайте Лему доказывать,
[33:25.000 --> 33:27.000]  потом я, может, что-нибудь подробнее напишу.
[33:43.000 --> 33:45.000]  Так, значит, я думаю, давайте так,
[33:45.000 --> 33:47.000]  я вот это все докажу,
[33:47.000 --> 33:49.000]  потом сделаем перерыв,
[33:49.000 --> 33:51.000]  потом начнем провайпировано про спейс.
[34:13.000 --> 34:15.000]  Спасибо за внимание!
[34:43.000 --> 35:09.000]  Так, ладно, конечно, давайте доказывать
[35:09.000 --> 35:11.000]  Так, ну, смотрите,
[35:13.000 --> 35:26.000]  Значит, вообще тут удобно говорить не в терминах мат ожидания, а в терминах вероятности.
[35:26.000 --> 35:34.000]  Что вообще вероянство это же мат ожидания индикатора.
[35:34.000 --> 35:40.000]  Поэтому можно от одной терминологии к другой переходить.
[35:40.000 --> 35:50.000]  Так, хорошо, значит тогда мы будем смотреть на вот что.
[35:50.000 --> 35:55.000]  Значит вообще пусть у меня даже функция h будет пока фиксирована.
[35:55.000 --> 36:07.000]  А потом посмотрим, вроде даже будет больше верно, не только мат ожидания будет таким, но и для каждой отдельной h, если уж она из этого семейства.
[36:08.000 --> 36:16.000]  Нет, так наверно нельзя. Нет, не надо аж фиксировать.
[36:16.000 --> 36:21.000]  Значит, мы вот что будем смотреть.
[36:21.000 --> 36:34.000]  Нужно смотреть на вероятность по случайной h и случайному y.
[36:34.000 --> 36:39.000]  Значит того, что y попала в h от s.
[36:39.000 --> 37:07.000]  Значит, что это значит? Это означает, просто по определению, что y попала в h от s.
[37:07.000 --> 37:15.000]  И это означает, что существует x из s.
[37:15.000 --> 37:24.000]  Значит такое, что y равняется h от y.
[37:24.000 --> 37:28.000]  Ну что такое существует? Ну это объединение.
[37:28.000 --> 37:33.000]  То есть можно сказать, что это вероятность объединения.
[37:33.000 --> 37:41.000]  Вероятность объединения по всем x из s.
[37:41.000 --> 37:53.000]  Да, как бы события.
[37:53.000 --> 37:58.000]  Ну можно писать там событие ex.
[37:58.000 --> 38:04.000]  Значит, где ex это, ну exy, наверно.
[38:04.000 --> 38:09.000]  Значит, полностью писать h y, да, exy.
[38:09.000 --> 38:16.000]  Значит, exy это событие как раз, что h от x равняется y.
[38:21.000 --> 38:27.000]  Так, что мы знаем про вероятность объединения?
[38:28.000 --> 38:32.000]  Ну мы знаем вообще форму включения исключений, да.
[38:32.000 --> 38:39.000]  Что вероятность объединения это сумма вероятностей, минус суммы попарных пересечений, плюс сумма потрочных пересечений и так далее.
[38:39.000 --> 38:45.000]  Но кроме этой полной формулы можно ее в каком-то месте закончить.
[38:45.000 --> 38:48.000]  И тогда будет в ту или иную сторону неравенство.
[38:48.000 --> 38:53.000]  Значит, если просто будет сумма вероятностей, это будет меньше либо равно.
[38:53.000 --> 39:01.000]  А вот если, соответственно, еще вычесть попарных пересечений, то это будет больше либо равно.
[39:01.000 --> 39:03.000]  Вот этим мы и воспользуемся.
[39:03.000 --> 39:11.000]  Значит, это будет больше либо равно, чем сумма.
[39:11.000 --> 39:23.000]  Сумма по всем x и z, вероятности exy.
[39:23.000 --> 39:29.000]  Так, ну, обсуждайте, я и x буду писать.
[39:29.000 --> 39:31.000]  Поменьше индексов.
[39:31.000 --> 39:41.000]  Значит, это сумма вероятностей ex, минус сумма по x неравном x'.
[39:41.000 --> 39:49.000]  Значит, а тут будет вероятность ex пересечения exx'.
[39:49.000 --> 39:54.000]  Вот это вот первые два слагаемых формы включений и исключений.
[39:54.000 --> 39:59.000]  И именно в такую сторону.
[39:59.000 --> 40:07.000]  Значит, именно в такую сторону это нужно писать неравенство.
[40:07.000 --> 40:09.000]  Так, хорошо.
[40:09.000 --> 40:26.000]  Теперь же такой вероятность ex.
[40:26.000 --> 40:30.000]  Ну, смотрите, пусть у нас вообще y фиксирован.
[40:30.000 --> 40:33.000]  Сейчас пусть y фиксировано аж случайно.
[40:33.000 --> 40:35.000]  Что такое вероятность?
[40:35.000 --> 40:37.000]  И x тоже фиксирован.
[40:37.000 --> 40:45.000]  Ну, тогда получается, что это вероятность того, что мы взяли случайную функцию,
[40:45.000 --> 40:49.000]  и она на x нам дала значение y.
[40:49.000 --> 40:54.000]  Ну, вероятность этого это как раз 1,9 на 2 вкатый.
[40:54.000 --> 40:56.000]  Вот.
[40:56.000 --> 40:58.000]  Теперь мы...
[40:58.000 --> 41:00.000]  Да, и это для каждого y.
[41:00.000 --> 41:04.000]  Значит, для случайного тоже.
[41:04.000 --> 41:08.000]  Давайте я отдельно напишу.
[41:08.000 --> 41:17.000]  Значит, для любых x и y вероятность по h, вот этого там, где ex,
[41:17.000 --> 41:23.000]  значит, это 1 делить на 2 вкатый.
[41:23.000 --> 41:35.000]  Но из этого следует, что и для любого x, значит, вероятность по h, y, ex, это тоже 1 делить на 2 вкатый.
[41:35.000 --> 41:42.000]  Значит, мы все одинаковые значения усредняем, получаем то же самое значение.
[41:42.000 --> 41:50.000]  Вот, значит...
[41:50.000 --> 41:54.000]  Ну, что дальше?
[42:11.000 --> 42:17.000]  Значит, дальше...
[42:17.000 --> 42:19.000]  Нужно это теперь сюда подставить.
[42:19.000 --> 42:23.000]  Мы это теперь суммируем по всем x и z.
[42:23.000 --> 42:26.000]  Суммируем вот эти вот константы по всем x и z.
[42:26.000 --> 42:28.000]  То есть теперь так.
[42:28.000 --> 42:32.000]  Получаем, продолжаем вот эту вот выкладку.
[42:32.000 --> 42:42.000]  Первая часть у нас, исходя из этого, получается s делить на 2 вкатый.
[42:42.000 --> 42:46.000]  Так, ничего, согласна?
[42:46.000 --> 42:49.000]  Теперь еще для пересечения нужна такую же выкладку сделать.
[42:49.000 --> 42:57.000]  Так, давайте я вот здесь вот сделаю, а потом там напишу результат.
[42:57.000 --> 43:05.000]  Значит, вероятность ex и ex'.
[43:05.000 --> 43:07.000]  Значит, это что означает?
[43:07.000 --> 43:14.000]  Это означает, что у меня одновременно h от x равно y
[43:14.000 --> 43:19.000]  и h от x' тоже равно y.
[43:19.000 --> 43:27.000]  Вот, но тут как раз используется попарнезависимость.
[43:27.000 --> 43:35.000]  Соответственно, такая штука должна быть 1 делить на 2 в степени 2к.
[43:35.000 --> 43:38.000]  Так, ну чего, согласна?
[43:44.000 --> 43:47.000]  x и штрих неупорядоченная пара.
[43:47.000 --> 43:50.000]  Ну, в общем, я не знаю, что делать.
[43:50.000 --> 43:53.000]  Но, конечно, я не знаю, что делать.
[43:53.000 --> 43:56.000]  Я не знаю, что делать.
[43:56.000 --> 43:59.000]  Я не знаю, что делать.
[43:59.000 --> 44:02.000]  Я не знаю, что делать.
[44:02.000 --> 44:04.000]  Сопорядочная пара, да.
[44:04.000 --> 44:07.000]  Ну, потому что...
[44:07.000 --> 44:09.000]  Не, ну, сопорядочная это будет...
[44:09.000 --> 44:13.000]  Только более сильно неравенственно, но она мне даст, что нам нужно.
[44:13.000 --> 44:17.000]  Так что x и x' это неупорядоченная пара.
[44:17.000 --> 44:24.000]  И тогда, значит, сколько у нас сегодня упорядоченных пар?
[44:24.000 --> 44:26.000]  Ну, смотрите, это x.
[44:26.000 --> 44:30.000]  x не равно x', но они при этом OBSS.
[44:30.000 --> 44:33.000]  Написано, да, значит, они OBSS.
[44:33.000 --> 44:42.000]  Поэтому тут будет, соответственно, s на f-1 пополам.
[44:42.000 --> 44:47.000]  И еще умножить на 1 делить на 2 в степени 2к.
[44:51.000 --> 44:55.000]  Так, но вот это вот minus 1 очень мешается, на самом деле.
[44:55.000 --> 45:00.000]  Но оно минус на минус даст плюс.
[45:00.000 --> 45:02.000]  И вот эту добавку можно просто вычеркнуть.
[45:02.000 --> 45:05.000]  Это нам даст неравенственно нужную сторону.
[45:05.000 --> 45:08.000]  Это будет строго больше.
[45:08.000 --> 45:10.000]  И вот так вот.
[45:10.000 --> 45:15.000]  Размер s делить на 2 в степени k минус 1 вторая.
[45:15.000 --> 45:20.000]  А тут будет размер s на 2 в степени k квадратим.
[45:26.000 --> 45:30.000]  Вот это уже очень простая функция.
[45:30.000 --> 45:38.000]  И тут мы как раз используем, да, что вот размер, значит, размер s на 2 в степени k.
[45:38.000 --> 45:45.000]  И это у нас какое-то число p, которое меньше 1 второй.
[45:45.000 --> 45:51.000]  И это вот для этого мы такое k брали, да, вот здесь вот.
[45:51.000 --> 45:54.000]  Вот это неравенственно теперь используется.
[45:54.000 --> 45:58.000]  Потому что может быть два раза больше, чтобы как раз k минус 1.
[45:58.000 --> 46:01.000]  И вот это 1 вторая.
[46:01.000 --> 46:06.000]  Ну а в таком случае, значит, если p меньше 1 второй,
[46:06.000 --> 46:10.000]  то тогда простое упражнение на анализ параболы,
[46:10.000 --> 46:17.000]  значит, что p минус p в квадрате пополам будет больше,
[46:17.000 --> 46:21.000]  если меньше, то тут строго больше, чем 3 четверти p.
[46:26.000 --> 46:34.000]  Ну, действительно, в нуле будет равенство, значит, в 1 второй тоже будет равенство.
[46:34.000 --> 46:40.000]  А между ними там парабол в нужную сторону выгнута, и поэтому будет больше.
[46:41.000 --> 46:43.000]  Вот.
[46:43.000 --> 46:53.000]  Поэтому получается, что теперь вот сюда вот, значит, это можно написать больше, чем 3 четверти,
[46:53.000 --> 46:58.000]  чем вот это s делить на 2 в степени k.
[46:58.000 --> 46:59.000]  Вот.
[46:59.000 --> 47:07.000]  Но это вот вероятность, да, теперь если на, значит, если на размер объема еще много что умножить,
[47:07.000 --> 47:12.000]  вот это 2 степени k, то как раз получим то самое неравенство, которое нам нужно.
[47:12.000 --> 47:13.000]  Вот.
[47:13.000 --> 47:16.000]  Даже строго получился неравенство, значит, если там строго меньше.
[47:19.000 --> 47:20.000]  Вот.
[47:20.000 --> 47:21.000]  Так.
[47:21.000 --> 47:23.000]  Ну что, согласны?
[47:23.000 --> 47:24.000]  Ну вот.
[47:24.000 --> 47:30.000]  Ну теперь получается, что s может быть либо 2n факториал,
[47:30.000 --> 47:35.000]  значит, 2n факториал, тогда получится, что, то есть размер s,
[47:35.000 --> 47:41.000]  может быть, 2n факториал, тогда размер h от s будет больше,
[47:42.000 --> 47:46.000]  чем полтора, да, 3 вторых н факториал.
[47:46.000 --> 47:47.000]  Вот.
[47:47.000 --> 47:57.000]  Либо оно n факториал, значит, тогда размер h от s будет меньше, вот здесь меньше либо равно, чем n факториал.
[47:57.000 --> 47:58.000]  Вот.
[47:58.000 --> 48:01.000]  Ну и тогда уже идея Монта-Карла.
[48:01.000 --> 48:04.000]  Следующая, значит, идея.
[48:16.000 --> 48:20.000]  Ну да, это в принципе правда, да, то есть там нужно...
[48:20.000 --> 48:23.000]  Но тут, значит, смотрите, тут возможно...
[48:25.000 --> 48:27.000]  Тут это вам можно сказать...
[48:27.000 --> 48:29.000]  В общем, из этого можно выкрутить разными способами.
[48:29.000 --> 48:33.000]  Можно делать более точные оценки там с неравенствами Маркова там или кого-то,
[48:33.000 --> 48:37.000]  насколько много таких h, которые дают нужное неравенство.
[48:37.000 --> 48:38.000]  Вот.
[48:38.000 --> 48:42.000]  А можно сказать, что раз мотожидания больше, то значит, хотя бы одна h такая есть,
[48:42.000 --> 48:44.000]  и такая же неравенство есть.
[48:44.000 --> 48:45.000]  Вот.
[48:45.000 --> 48:50.000]  А можно сказать, что раз мотожидания больше, то значит, хотя бы одна h такая есть,
[48:50.000 --> 48:53.000]  и тогда эту h пришлет прувер.
[48:53.000 --> 48:59.000]  Да, значит, просто сам Мерлин пришлет хорошую функцию h,
[48:59.000 --> 49:02.000]  а Артур потом будет ее использовать.
[49:02.000 --> 49:10.000]  Это там даст лишний раунд, но мы уже в прошлый раз обсуждали там...
[49:10.000 --> 49:13.000]  Мы, правда, не доказали, но, я думаю, сейчас и не будем доказывать,
[49:13.000 --> 49:16.000]  что число раундов можно снизить.
[49:16.000 --> 49:20.000]  Вообще, это, конечно, правильный вопрос, чтобы в среднем доказали, да,
[49:20.000 --> 49:22.000]  или конкретно h будет верно.
[49:22.000 --> 49:25.000]  Но вот можно двумя способами из этого выйти.
[49:25.000 --> 49:27.000]  Ну да, в общем, идея...
[49:27.000 --> 49:29.000]  А давайте я прямо так и напишу.
[49:29.000 --> 49:32.000]  Значит, Мерлин присылает h.
[49:35.000 --> 49:36.000]  Вот.
[49:36.000 --> 49:39.000]  И потом, значит, много раз...
[49:40.000 --> 49:42.000]  Но потом параллельно нужно.
[49:42.000 --> 49:48.000]  Значит, Артур делает следующее.
[49:48.000 --> 50:03.000]  Значит, выбирает там какое-то количество случайной пары...
[50:03.000 --> 50:06.000]  Не, сейчас неправильно я пишу, не случайной пары.
[50:06.000 --> 50:09.000]  Но случайных есть значение.
[50:15.000 --> 50:16.000]  Вот.
[50:16.000 --> 50:19.000]  А потом Мерлин...
[50:19.000 --> 50:24.000]  Значит, Мерлин присылает уже пары.
[50:24.000 --> 50:28.000]  Значит, пары h, альфа, да, значит, и z...
[50:28.000 --> 50:32.000]  С такими...
[50:32.000 --> 50:36.000]  Значениями, значит, с такими h.
[50:38.000 --> 50:41.000]  Вот, Артур все это проверяет.
[50:45.000 --> 50:48.000]  Ну, как бы и плюс сертификаты, да, то есть,
[50:48.000 --> 50:53.000]  Мерлин присылает пары и плюс сертификаты к ним.
[50:53.000 --> 50:57.000]  Да, что эти пары действительно и z.
[50:57.000 --> 51:00.000]  Вот, Артур это все проверяет.
[51:00.000 --> 51:01.000]  Так.
[51:01.000 --> 51:03.000]  Сейчас я тут не умещаюсь.
[51:03.000 --> 51:07.000]  А после этого Артур проверяет
[51:08.000 --> 51:11.000]  и сравнивает...
[51:12.000 --> 51:15.000]  Сравнивает число подходящих.
[51:20.000 --> 51:25.000]  Ну, тут получится, значит, между 1 и 3 вторых.
[51:25.000 --> 51:27.000]  Там средние 5 четвертых.
[51:27.000 --> 51:31.000]  Да, тут будет 5 четвертых n факториал
[51:31.000 --> 51:34.000]  делить на вот это два степеника.
[51:39.000 --> 51:40.000]  Вот.
[51:40.000 --> 51:43.000]  Значит, если больше, то он говорит, что ас большое,
[51:43.000 --> 51:46.000]  а если меньше, то что ас маленькое.
[51:48.000 --> 51:50.000]  Ну и тогда реальное среднее
[51:50.000 --> 51:52.000]  будет либо сильно больше этой границы,
[51:52.000 --> 51:53.000]  либо сильно меньше.
[51:53.000 --> 51:55.000]  Поэтому из достаточного раз повторить,
[51:55.000 --> 51:57.000]  то и выбрученный средний будет, скорее всего,
[51:57.000 --> 51:59.000]  с правильной стороны этой границы.
[52:09.000 --> 52:12.000]  Ну да, в таком варианте это МАМ,
[52:12.000 --> 52:15.000]  но еще там есть рем, что МАМ и то же самое, что АМ.
[52:20.000 --> 52:23.000]  Я говорю, да, значит, можно так выкрутиться,
[52:23.000 --> 52:26.000]  можно немножко по пристальнее,
[52:27.000 --> 52:30.000]  более аккуратно неравенственно написать,
[52:31.000 --> 52:34.000]  даже со случайной аж, скорее всего, тут правильно будет.
[52:34.000 --> 52:37.000]  Ну, тогда можно смотреть не только на среднее число,
[52:37.000 --> 52:41.000]  но и на то, как распределено размер аш-атес
[52:41.000 --> 52:43.000]  в другую сторону.
[52:45.000 --> 52:46.000]  Вот.
[52:48.000 --> 52:51.000]  Ну, в принципе, это дальше можно...
[52:51.000 --> 52:55.000]  Вот этот подход дальше обобщается.
[52:56.000 --> 52:59.000]  Да, значит, и в целом...
[53:03.000 --> 53:06.000]  В целом, там есть такая рема,
[53:06.000 --> 53:08.000]  что IP
[53:09.000 --> 53:11.000]  к раундами
[53:11.000 --> 53:13.000]  вложена в АМ
[53:14.000 --> 53:16.000]  ка плюс двумя раундами.
[53:16.000 --> 53:18.000]  Отсюда получается...
[53:18.000 --> 53:20.000]  Какие выводы?
[53:20.000 --> 53:24.000]  Получается, что если IP из константы раундов,
[53:24.000 --> 53:27.000]  то это то же самое, что АМ из константы раундов.
[53:28.000 --> 53:31.000]  А АМ из константы раундов это просто АМ,
[53:31.000 --> 53:34.000]  потому что там можно сократить число раундов.
[53:35.000 --> 53:37.000]  И, соответственно, это будет лежать
[53:37.000 --> 53:40.000]  на втором уровне полинамиальной иерархии.
[53:41.000 --> 53:44.000]  Но, например, для полинаминального числа раундов
[53:44.000 --> 53:46.000]  и архи для любого другого,
[53:46.000 --> 53:48.000]  в общем, неважно будут
[53:48.000 --> 53:51.000]  частные случайные биты или общие случайные биты.
[53:52.000 --> 53:53.000]  Вот.
[53:53.000 --> 53:57.000]  Но, например, что такое АМ с логарифмом раундов,
[53:57.000 --> 53:59.000]  это как-то никто не знает.
[53:59.000 --> 54:01.000]  Знаешь, что вот...
[54:02.000 --> 54:04.000]  Знаешь, что вот АМ с полиномом раундов
[54:04.000 --> 54:07.000]  это то же самое, что IP с полиномом, да, и...
[54:08.000 --> 54:10.000]  Соответственно, PSPACE.
[54:10.000 --> 54:12.000]  То, что мы сейчас будем доказывать.
[54:13.000 --> 54:14.000]  Вот.
[54:14.000 --> 54:16.000]  Что такое АМ с логарифмом раундов,
[54:16.000 --> 54:18.000]  как-то никто не знает.
[54:18.000 --> 54:20.000]  Или там сполил логарифм.
[54:22.000 --> 54:23.000]  Хорошо.
[54:23.000 --> 54:25.000]  Ну что ж, есть какие-нибудь вопросы.
[54:31.000 --> 54:33.000]  Так, давайте сейчас делаем перерыв.
[54:34.000 --> 54:36.000]  Ну, можно 15 минут.
[54:36.000 --> 54:38.000]  12 небольшим начнем.
[54:39.000 --> 54:41.000]  Ну, и где-то до часу.
[54:42.000 --> 54:43.000]  Так.
[54:56.000 --> 54:57.000]  Так.
[54:57.000 --> 54:59.000]  Ну, значит, основная часть доказательства
[54:59.000 --> 55:01.000]  будет в следующий раз.
[55:01.000 --> 55:04.000]  А в следующий раз, получается, через две недели.
[55:04.000 --> 55:06.000]  Через неделю выходной.
[55:09.000 --> 55:10.000]  Вот.
[55:10.000 --> 55:11.000]  А сейчас я расскажу некоторые базовые вещи.
[55:11.000 --> 55:14.000]  Да, это как бы в чем общее идея.
[55:16.000 --> 55:19.000]  И, может, немножко расскажу про историю вопроса.
[55:20.000 --> 55:22.000]  Значит, смотрите.
[55:25.000 --> 55:27.000]  Давайте, наверное, сначала про историю расскажу.
[55:27.000 --> 55:30.000]  Значит, потом немножко про идею подхода.
[55:31.000 --> 55:33.000]  Значит, вообще вот интерактивные доказательства
[55:33.000 --> 55:35.000]  появились в середине 80-х.
[55:36.000 --> 55:38.000]  Да, причем более-менее сразу в одной работе
[55:38.000 --> 55:39.000]  с общими случайными битами,
[55:39.000 --> 55:41.000]  в другой работе с частными случайными битами.
[55:43.000 --> 55:46.000]  Вот, начали изучать там самые разные результаты.
[55:48.000 --> 55:49.000]  Вот.
[55:49.000 --> 55:51.000]  И что быстро выяснилось.
[55:52.000 --> 55:54.000]  Ну, то, что, собственно, уже мы знаем.
[55:54.000 --> 55:56.000]  Да, что, во-первых,
[55:57.000 --> 55:59.000]  если у нас только
[56:00.000 --> 56:02.000]  интерактивности, а случайности нет,
[56:02.000 --> 56:04.000]  на детерминированном интерактивном доказательстве
[56:04.000 --> 56:06.000]  это будет NP.
[56:06.000 --> 56:08.000]  Да, то есть первый уровень полиномиальной иерархии.
[56:09.000 --> 56:11.000]  Если у нас только случайность,
[56:11.000 --> 56:13.000]  а интерактивности нет,
[56:13.000 --> 56:15.000]  то это будет класс BPP.
[56:16.000 --> 56:19.000]  И это заведомо второй уровень полиномиальной иерархии.
[56:20.000 --> 56:22.000]  Может быть, даже это просто P.
[56:23.000 --> 56:24.000]  Дальше.
[56:24.000 --> 56:26.000]  Если у нас есть интерактивные доказательства,
[56:26.000 --> 56:28.000]  то есть и интерактивность, и случайность,
[56:30.000 --> 56:32.000]  но константное число раундов,
[56:32.000 --> 56:34.000]  да, это вот мы сегодня и писали,
[56:34.000 --> 56:36.000]  тогда это будет
[56:37.000 --> 56:39.000]  AM, то есть тоже второй уровень полиномиальной иерархии.
[56:42.000 --> 56:44.000]  Вот. И была ситуация такая,
[56:46.000 --> 56:48.000]  что
[56:49.000 --> 56:51.000]  вообще-то это все было известно.
[56:52.000 --> 56:54.000]  И при этом тоже знали, что IP вложено в PSPACE,
[56:56.000 --> 56:58.000]  но не знали никакого языка,
[56:59.000 --> 57:01.000]  для которого было бы нужно
[57:02.000 --> 57:04.000]  более чем константное число раундов.
[57:05.000 --> 57:07.000]  То есть все примеры были типа вот
[57:07.000 --> 57:09.000]  изоморфизма графа.
[57:09.000 --> 57:11.000]  Точнее, не изоморфизма.
[57:13.000 --> 57:15.000]  Вот.
[57:15.000 --> 57:17.000]  Ну и думали, ну, наверное,
[57:17.000 --> 57:19.000]  тогда и для полиномиальной числа раундов,
[57:19.000 --> 57:21.000]  не понятно, как его можно использовать.
[57:21.000 --> 57:23.000]  То есть, наверное, тоже будет
[57:23.000 --> 57:25.000]  кто-то, может, тоже второй уровень,
[57:25.000 --> 57:27.000]  или может там, где-нибудь еще.
[57:28.000 --> 57:30.000]  Но оказалось, что это все совершенно не так.
[57:31.000 --> 57:33.000]  Вот. И очень интересная история,
[57:33.000 --> 57:35.000]  как именно это оказалось.
[57:38.000 --> 57:40.000]  Да, я в перерыве немножко подслушал,
[57:40.000 --> 57:42.000]  что вы там что-то про перманент
[57:42.000 --> 57:44.000]  обсуждали.
[57:44.000 --> 57:46.000]  Вот. Значит, соответственно, перманент
[57:46.000 --> 57:48.000]  на самом деле был очень важен
[57:48.000 --> 57:50.000]  в этой истории.
[57:51.000 --> 57:53.000]  Да, что такое перманент все знают, да?
[57:53.000 --> 57:55.000]  Это у вас где-то было.
[57:56.000 --> 57:58.000]  Вот. Значит, соответственно,
[57:58.000 --> 58:00.000]  ну,
[58:01.000 --> 58:03.000]  это вот
[58:03.000 --> 58:05.000]  известная, как бы, история,
[58:05.000 --> 58:07.000]  что есть его
[58:07.000 --> 58:09.000]  детерминат, определитель, да, и перманент.
[58:09.000 --> 58:11.000]  И в них очень похожее определение,
[58:11.000 --> 58:13.000]  да, там
[58:13.000 --> 58:15.000]  просто знак убирается, да,
[58:15.000 --> 58:17.000]  и детерминат получается перманент.
[58:17.000 --> 58:19.000]  Но при этом для детермината
[58:19.000 --> 58:21.000]  есть
[58:21.000 --> 58:23.000]  известный
[58:23.000 --> 58:25.000]  с XIX века алгоритмы, как его посчитать.
[58:25.000 --> 58:27.000]  Вот. А для перманента
[58:27.000 --> 58:29.000]  ничего не известно.
[58:29.000 --> 58:31.000]  Вот. И наоборот задача для перманента
[58:31.000 --> 58:33.000]  она сложная, она там
[58:33.000 --> 58:35.000]  sharp P полная,
[58:35.000 --> 58:37.000]  если кто знает, что это такое.
[58:37.000 --> 58:39.000]  Ну, вот была последняя задача, дополнительная,
[58:39.000 --> 58:41.000]  да, значит, дорежки в первой части.
[58:41.000 --> 58:43.000]  Вот так раз про sharp P.
[58:43.000 --> 58:45.000]  Вот. Тут
[58:45.000 --> 58:47.000]  сначала не очевидно,
[58:47.000 --> 58:49.000]  что она вообще в sharp P, да,
[58:49.000 --> 58:51.000]  что подсчет перманента это подсчет
[58:51.000 --> 58:53.000]  какого-то количества.
[58:53.000 --> 58:55.000]  Вот. Но это, на самом деле, если там 0 к единиче,
[58:55.000 --> 58:57.000]  то это можно интерпретировать
[58:57.000 --> 58:59.000]  или там пар сочетания, да, или еще чего-нибудь.
[58:59.000 --> 59:01.000]  Вот.
[59:01.000 --> 59:03.000]  Ну и она там будет sharp P полная.
[59:03.000 --> 59:05.000]  Вот.
[59:05.000 --> 59:07.000]  Очень сложная задача.
[59:07.000 --> 59:09.000]  Ну и, значит, соответственно
[59:13.000 --> 59:15.000]  придумали некоторый способ,
[59:15.000 --> 59:17.000]  значит, как вот
[59:17.000 --> 59:19.000]  для перманента делать интерактивные доказательства.
[59:19.000 --> 59:21.000]  Вот. И тут очень интересный
[59:21.000 --> 59:23.000]  сюжет, да,
[59:23.000 --> 59:25.000]  с такой социальной точки зрения, да, как
[59:25.000 --> 59:27.000]  наука развивала, значит, это был конец 80-х.
[59:29.000 --> 59:31.000]  Тогда еще не было
[59:31.000 --> 59:33.000]  веба, да,
[59:33.000 --> 59:35.000]  то есть не было веб-сайтов, это в первом плане 90-х
[59:35.000 --> 59:37.000]  появилась такая технология, да,
[59:37.000 --> 59:39.000]  что TTP.
[59:39.000 --> 59:41.000]  Вот. Но уже была электронная почта,
[59:41.000 --> 59:43.000]  были разные рассылки.
[59:43.000 --> 59:45.000]  Вот. И, соответственно,
[59:45.000 --> 59:47.000]  конечно, в университетах
[59:47.000 --> 59:49.000]  уже многие
[59:49.000 --> 59:51.000]  имели электронную почту, да, и регулярно
[59:51.000 --> 59:53.000]  переписывались. И в том числе
[59:53.000 --> 59:55.000]  была некоторая такая теоретическая
[59:55.000 --> 59:57.000]  рассылка, да,
[59:57.000 --> 59:59.000]  по теории сложности
[59:59.000 --> 01:00:01.000]  вычислений, где был там
[01:00:01.000 --> 01:00:03.000]  несколько десятков человек, да,
[01:00:03.000 --> 01:00:05.000]  из разных университетов,
[01:00:05.000 --> 01:00:07.000]  США, Европы, Израиля.
[01:00:09.000 --> 01:00:11.000]  Вот. И, значит,
[01:00:11.000 --> 01:00:13.000]  Ноам Нисан как раз
[01:00:13.000 --> 01:00:15.000]  из Израиля
[01:00:15.000 --> 01:00:17.000]  в конце ноября
[01:00:17.000 --> 01:00:19.000]  1989 года
[01:00:19.000 --> 01:00:21.000]  в эту рассылку
[01:00:21.000 --> 01:00:23.000]  он забросил идею,
[01:00:23.000 --> 01:00:25.000]  да, что вот
[01:00:25.000 --> 01:00:27.000]  есть такая идея, как
[01:00:27.000 --> 01:00:29.000]  использовать некоторое алгебро
[01:00:29.000 --> 01:00:31.000]  для интерактивного доказательства.
[01:00:31.000 --> 01:00:33.000]  И там как раз перманент
[01:00:33.000 --> 01:00:35.000]  фигурировал.
[01:00:35.000 --> 01:00:37.000]  Значит, он
[01:00:37.000 --> 01:00:39.000]  эту идею забросил в рассылку,
[01:00:39.000 --> 01:00:41.000]  а потом
[01:00:41.000 --> 01:00:43.000]  уехал путешествовать в Южную Америку,
[01:00:43.000 --> 01:00:45.000]  да, и, конечно, никого мобильного интернета
[01:00:45.000 --> 01:00:47.000]  тогда еще не было,
[01:00:47.000 --> 01:00:49.000]  тем более в Южной Америке.
[01:00:49.000 --> 01:00:51.000]  Вот. Поэтому он, в общем, был без связи,
[01:00:51.000 --> 01:00:53.000]  да, почта там,
[01:00:53.000 --> 01:00:55.000]  телеграмму можно было послать, да,
[01:00:55.000 --> 01:00:57.000]  или позвонить, вот.
[01:00:57.000 --> 01:00:59.000]  Но, в общем, он
[01:00:59.000 --> 01:01:01.000]  ходил там по всяким мачу-пикщу,
[01:01:01.000 --> 01:01:03.000]  да, и от работы отвлекся.
[01:01:03.000 --> 01:01:05.000]  Вот. Пока он на две недели
[01:01:05.000 --> 01:01:07.000]  тогда уехал,
[01:01:07.000 --> 01:01:09.000]  его коллеги из этой
[01:01:09.000 --> 01:01:11.000]  рассылки начали развивать
[01:01:11.000 --> 01:01:13.000]  его идею
[01:01:13.000 --> 01:01:15.000]  и довольно быстро довели до
[01:01:15.000 --> 01:01:17.000]  результата, что
[01:01:17.000 --> 01:01:19.000]  для всей полиномиальной иерархии
[01:01:19.000 --> 01:01:21.000]  есть интерактивное доказательство.
[01:01:21.000 --> 01:01:23.000]  Значит, это
[01:01:23.000 --> 01:01:25.000]  значит,
[01:01:25.000 --> 01:01:27.000]  статья
[01:01:27.000 --> 01:01:29.000]  LFKN
[01:01:29.000 --> 01:01:31.000]  это, по-моему,
[01:01:31.000 --> 01:01:33.000]  лунд
[01:01:33.000 --> 01:01:35.000]  портную Карлов и, собственно,
[01:01:35.000 --> 01:01:37.000]  Нисан.
[01:01:37.000 --> 01:01:39.000]  Вот. Но Нисан только первую идею
[01:01:39.000 --> 01:01:41.000]  подал, да, они потом ее развили.
[01:01:41.000 --> 01:01:43.000]  Вот. Значит,
[01:01:43.000 --> 01:01:45.000]  они доказали, что
[01:01:45.000 --> 01:01:47.000]  pH
[01:01:47.000 --> 01:01:49.000]  pH
[01:01:49.000 --> 01:01:51.000]  вложена в IP.
[01:01:51.000 --> 01:01:53.000]  Вот.
[01:01:53.000 --> 01:01:55.000]  И в ту же рассылку написали.
[01:01:55.000 --> 01:01:57.000]  В ту же рассылку написали,
[01:01:57.000 --> 01:01:59.000]  что вот такой вот
[01:01:59.000 --> 01:02:01.000]  результат.
[01:02:01.000 --> 01:02:03.000]  Вот. Ну, и
[01:02:03.000 --> 01:02:05.000]  это всех очень удивило.
[01:02:05.000 --> 01:02:07.000]  И, в принципе, в общем,
[01:02:07.000 --> 01:02:09.000]  стало ясно, чему дело
[01:02:09.000 --> 01:02:11.000]  клонится, да, что
[01:02:11.000 --> 01:02:13.000]  раз уж, ну, как бы, от pH
[01:02:13.000 --> 01:02:15.000]  уже небольшой шаг.
[01:02:15.000 --> 01:02:17.000]  Да, pH — это верхняя оценка.
[01:02:17.000 --> 01:02:19.000]  Вот. Ну, и как там
[01:02:19.000 --> 01:02:21.000]  наблюдатели пишут,
[01:02:23.000 --> 01:02:25.000]  что началась такая гонка,
[01:02:25.000 --> 01:02:27.000]  стало понятно, что, наверное,
[01:02:27.000 --> 01:02:29.000]  тут есть результат, да,
[01:02:29.000 --> 01:02:31.000]  и началась гонка
[01:02:31.000 --> 01:02:33.000]  за то, кто первый
[01:02:33.000 --> 01:02:35.000]  его откроет. Вот.
[01:02:35.000 --> 01:02:37.000]  И в этой гонке участвовали там, по крайней мере,
[01:02:37.000 --> 01:02:39.000]  дюжина человек, да, как там
[01:02:39.000 --> 01:02:41.000]  пишут, что, по крайней мере,
[01:02:41.000 --> 01:02:43.000]  мы знаем
[01:02:43.000 --> 01:02:45.000]  только о тех попытках,
[01:02:45.000 --> 01:02:47.000]  в которых были еще какие-то побочные результаты,
[01:02:47.000 --> 01:02:49.000]  которые были рассказаны.
[01:02:49.000 --> 01:02:51.000]  Вот. Ну, в общем, выиграл.
[01:02:51.000 --> 01:02:53.000]  Да, вот эти все люди, значит,
[01:02:53.000 --> 01:02:55.000]  Нисан тогда,
[01:02:55.000 --> 01:02:57.000]  видимо, уже надо посмотреть.
[01:02:57.000 --> 01:02:59.000]  Сейчас он, может, тоже в Америке был.
[01:02:59.000 --> 01:03:01.000]  Вот эти все люди работали в Америке.
[01:03:01.000 --> 01:03:03.000]  Да, Нисан обстрелял.
[01:03:03.000 --> 01:03:05.000]  Сейчас он в Израиле,
[01:03:05.000 --> 01:03:07.000]  тогда он где был, надо посмотреть.
[01:03:07.000 --> 01:03:09.000]  Вот. И, в общем, выиграл
[01:03:09.000 --> 01:03:11.000]  эту гонку
[01:03:11.000 --> 01:03:13.000]  Адисшамир,
[01:03:13.000 --> 01:03:15.000]  который
[01:03:15.000 --> 01:03:17.000]  является буквой
[01:03:17.000 --> 01:03:19.000]  С в РСА.
[01:03:19.000 --> 01:03:21.000]  Значит,
[01:03:21.000 --> 01:03:23.000]  протокол РСА, значит, для
[01:03:23.000 --> 01:03:25.000]  шифрования с этим ключом, да,
[01:03:25.000 --> 01:03:27.000]  это Ривисшамир и Эйдлман.
[01:03:27.000 --> 01:03:29.000]  Вот. Вот Шамир и буквка С.
[01:03:29.000 --> 01:03:31.000]  Вот он, соответственно.
[01:03:35.000 --> 01:03:37.000]  Вначале в ту же самую
[01:03:37.000 --> 01:03:39.000]  рассылку, в канун Рождества Католического
[01:03:39.000 --> 01:03:41.000]  89-го года,
[01:03:41.000 --> 01:03:43.000]  а также Ханоке, значит,
[01:03:43.000 --> 01:03:45.000]  прислал, соответственно,
[01:03:45.000 --> 01:03:47.000]  сначала анонс, что вот он доказал.
[01:03:47.000 --> 01:03:49.000]  И потом через пару дней я уже написал
[01:03:49.000 --> 01:03:51.000]  идею, чему
[01:03:51.000 --> 01:03:53.000]  айпер равно П-спейс.
[01:03:53.000 --> 01:03:55.000]  Вот.
[01:03:55.000 --> 01:03:57.000]  Но, на самом деле, эта история
[01:03:57.000 --> 01:03:59.000]  не закончилась.
[01:03:59.000 --> 01:04:01.000]  Потому что дальше там какие-то,
[01:04:01.000 --> 01:04:03.000]  в общем, про это разные рассказывают,
[01:04:03.000 --> 01:04:05.000]  какие-то не очень красивые истории, да,
[01:04:05.000 --> 01:04:07.000]  потому что Шамиру предлагали одну большую
[01:04:07.000 --> 01:04:09.000]  общую статью написать.
[01:04:09.000 --> 01:04:11.000]  А он сказал, нет, я получил этот
[01:04:11.000 --> 01:04:13.000]  результат, значит, я хочу, чтобы
[01:04:13.000 --> 01:04:15.000]  это называли потом теориям из Шамира,
[01:04:15.000 --> 01:04:17.000]  поэтому я один опубликую
[01:04:17.000 --> 01:04:19.000]  статью.
[01:04:19.000 --> 01:04:21.000]  В итоге
[01:04:21.000 --> 01:04:23.000]  все было рассказано, потом на конференциях,
[01:04:23.000 --> 01:04:25.000]  и в итоге в 2002 году
[01:04:25.000 --> 01:04:27.000]  вышел журнал,
[01:04:27.000 --> 01:04:29.000]  в котором было по тря три статьи.
[01:04:29.000 --> 01:04:31.000]  Первая
[01:04:31.000 --> 01:04:33.000]  статья вот этих, вот четырех авторов,
[01:04:33.000 --> 01:04:35.000]  ну, с каким-то таким
[01:04:35.000 --> 01:04:37.000]  сухим названием,
[01:04:37.000 --> 01:04:39.000]  типа
[01:04:39.000 --> 01:04:41.000]  алгебрические методы в теории
[01:04:41.000 --> 01:04:43.000]  интерактивных доказательств.
[01:04:43.000 --> 01:04:45.000]  Вот, потом была статья Шамира,
[01:04:45.000 --> 01:04:47.000]  что айпи равно П-спейс.
[01:04:47.000 --> 01:04:49.000]  Вот.
[01:04:49.000 --> 01:04:51.000]  А потом еще была третья статья,
[01:04:51.000 --> 01:04:53.000]  которая написала известные вам
[01:04:53.000 --> 01:04:55.000]  Александр Шейни.
[01:04:55.000 --> 01:04:57.000]  Значит, и она называлась
[01:04:57.000 --> 01:04:59.000]  айпи равно
[01:04:59.000 --> 01:05:01.000]  П-спейс.
[01:05:01.000 --> 01:05:03.000]  Значит,
[01:05:03.000 --> 01:05:05.000]  simplified proof.
[01:05:09.000 --> 01:05:11.000]  Вот, однажды
[01:05:11.000 --> 01:05:13.000]  то доказательств я вам буду рассказывать,
[01:05:13.000 --> 01:05:15.000]  когда вас придумал Шейни.
[01:05:15.000 --> 01:05:17.000]  Но он, правда, он отнекивает, что он придумал,
[01:05:17.000 --> 01:05:19.000]  он говорит, что он просто разобрался,
[01:05:19.000 --> 01:05:21.000]  что хотел сказать Шамир, и сказал то же самое
[01:05:21.000 --> 01:05:23.000]  более простыми словами.
[01:05:23.000 --> 01:05:25.000]  Но, в общем,
[01:05:25.000 --> 01:05:27.000]  это гораздо проще понять.
[01:05:27.000 --> 01:05:29.000]  Вот.
[01:05:29.000 --> 01:05:31.000]  Ну, если вам интересны
[01:05:31.000 --> 01:05:33.000]  подробности этой истории,
[01:05:33.000 --> 01:05:35.000]  то есть
[01:05:35.000 --> 01:05:37.000]  такой обзор
[01:05:37.000 --> 01:05:39.000]  Ласла Бабая.
[01:05:39.000 --> 01:05:41.000]  Значит, я прям приведу
[01:05:41.000 --> 01:05:43.000]  целиком его название.
[01:05:43.000 --> 01:05:45.000]  Он называется
[01:05:45.000 --> 01:05:47.000]  email
[01:05:47.000 --> 01:05:49.000]  and
[01:05:49.000 --> 01:05:51.000]  unexpected power
[01:05:55.000 --> 01:05:57.000]  unexpected power
[01:05:57.000 --> 01:05:59.000]  unexpected power
[01:05:59.000 --> 01:06:01.000]  of interaction.
[01:06:07.000 --> 01:06:09.000]  Значит, это обыгрывает
[01:06:09.000 --> 01:06:11.000]  как бы и сам результат,
[01:06:11.000 --> 01:06:13.000]  и то, как он был получен.
[01:06:13.000 --> 01:06:15.000]  С одной стороны,
[01:06:15.000 --> 01:06:17.000]  то, что вот айпи равно П-спейс,
[01:06:17.000 --> 01:06:19.000]  это как раз unexpected power of interaction.
[01:06:19.000 --> 01:06:21.000]  Неожиданно, что класс айпи таким большим оказался.
[01:06:23.000 --> 01:06:25.000]  Вот.
[01:06:25.000 --> 01:06:27.000]  А email – это как раз, что они
[01:06:27.000 --> 01:06:29.000]  по email обсуждали это все.
[01:06:29.000 --> 01:06:31.000]  Вот.
[01:06:31.000 --> 01:06:33.000]  И получилось, что
[01:06:33.000 --> 01:06:35.000]  это сообщество за счет
[01:06:35.000 --> 01:06:37.000]  небольшой переписки
[01:06:39.000 --> 01:06:41.000]  доказало вот такой
[01:06:41.000 --> 01:06:43.000]  большой результат.
[01:06:43.000 --> 01:06:45.000]  То есть вот эта неожиданная
[01:06:45.000 --> 01:06:47.000]  сила и с точки
[01:06:47.000 --> 01:06:49.000]  зрения теории, и с точки зрения
[01:06:49.000 --> 01:06:51.000]  социального
[01:06:51.000 --> 01:06:53.000]  процесса научного открытия.
[01:06:55.000 --> 01:06:57.000]  Вот.
[01:06:57.000 --> 01:06:59.000]  Хорошо, значит, это краткая история.
[01:06:59.000 --> 01:07:01.000]  Теперь давайте
[01:07:01.000 --> 01:07:03.000]  потихоньку
[01:07:03.000 --> 01:07:05.000]  разбираться с тем,
[01:07:05.000 --> 01:07:07.000]  в чем, собственно, заключается
[01:07:07.000 --> 01:07:09.000]  алгебраический подход.
[01:07:09.000 --> 01:07:11.000]  Значит, он вообще еще хорош
[01:07:11.000 --> 01:07:13.000]  тем, что
[01:07:13.000 --> 01:07:15.000]  вот тогда уже были известны
[01:07:15.000 --> 01:07:17.000]  то, что называется
[01:07:17.000 --> 01:07:19.000]  препятствия, барьеры
[01:07:19.000 --> 01:07:21.000]  к доказательству.
[01:07:21.000 --> 01:07:23.000]  Ну, точнее так.
[01:07:23.000 --> 01:07:25.000]  Значит, вот там есть
[01:07:25.000 --> 01:07:27.000]  natural proofs.
[01:07:27.000 --> 01:07:29.000]  Значит, это правда статья
[01:07:29.000 --> 01:07:31.000]  11-4 года, чуть позже.
[01:07:31.000 --> 01:07:33.000]  Но, в общем, говорят,
[01:07:33.000 --> 01:07:35.000]  что некоторые люди уже
[01:07:35.000 --> 01:07:37.000]  в общем понимали. Значит, это вот
[01:07:37.000 --> 01:07:39.000]  вопрос о том, почему p не равно np
[01:07:39.000 --> 01:07:41.000]  не доказано.
[01:07:43.000 --> 01:07:45.000]  Я, наверное, упоминал
[01:07:45.000 --> 01:07:47.000]  на первой лекции
[01:07:47.000 --> 01:07:49.000]  первого курса, что есть некоторые
[01:07:49.000 --> 01:07:51.000]  барьеры к доказательству того, что p не равно np.
[01:07:51.000 --> 01:07:53.000]  Значит, а именно
[01:07:53.000 --> 01:07:55.000]  целый ряд методик
[01:07:55.000 --> 01:07:57.000]  точно не проходит.
[01:07:57.000 --> 01:07:59.000]  Ну, и одна методика
[01:07:59.000 --> 01:08:01.000]  это диагонализация.
[01:08:01.000 --> 01:08:03.000]  Тип того, как
[01:08:03.000 --> 01:08:05.000]  доказывают,
[01:08:05.000 --> 01:08:07.000]  что там есть перечислимое и неразрешимое множество
[01:08:07.000 --> 01:08:09.000]  и так далее.
[01:08:09.000 --> 01:08:11.000]  И вот все такие методики
[01:08:11.000 --> 01:08:13.000]  и диагонализации.
[01:08:13.000 --> 01:08:15.000]  Терема барархии по времени так доказывается.
[01:08:15.000 --> 01:08:17.000]  И так далее.
[01:08:17.000 --> 01:08:19.000]  Вот такие методики спотыкаются
[01:08:19.000 --> 01:08:21.000]  в барьер релитивизации.
[01:08:23.000 --> 01:08:25.000]  Значит, барьер релитивизации,
[01:08:25.000 --> 01:08:27.000]  что то, что доказывает диагонализация,
[01:08:27.000 --> 01:08:29.000]  будет верно и с оракулом.
[01:08:29.000 --> 01:08:31.000]  Ну, а там
[01:08:31.000 --> 01:08:33.000]  p равно np с одним оракулом
[01:08:33.000 --> 01:08:35.000]  и не равно с другим оракулом.
[01:08:35.000 --> 01:08:37.000]  Но дальше, в 80-х
[01:08:37.000 --> 01:08:39.000]  стали появляться комбинаторные методы,
[01:08:39.000 --> 01:08:41.000]  когда
[01:08:41.000 --> 01:08:43.000]  мы рассматриваем
[01:08:43.000 --> 01:08:45.000]  какое-то семейство, чего-нибудь,
[01:08:45.000 --> 01:08:47.000]  и доказывают, что
[01:08:47.000 --> 01:08:49.000]  в этом семействе есть все задачи
[01:08:49.000 --> 01:08:51.000]  одного класса и нет какой-то
[01:08:51.000 --> 01:08:53.000]  одной задачи другого класса.
[01:08:53.000 --> 01:08:55.000]  Значит, эти классы неравны.
[01:08:55.000 --> 01:08:57.000]  Значит, вот это вот подход
[01:08:57.000 --> 01:08:59.000]  комбинаторный.
[01:08:59.000 --> 01:09:01.000]  И он получил название
[01:09:01.000 --> 01:09:03.000]  естественное доказательство.
[01:09:03.000 --> 01:09:05.000]  Natural proofs.
[01:09:07.000 --> 01:09:09.000]  Значит, он обходит барьер
[01:09:09.000 --> 01:09:11.000]  диагонализации,
[01:09:11.000 --> 01:09:13.000]  барьер релитивизации, потому что там
[01:09:13.000 --> 01:09:15.000]  конкретика используется.
[01:09:15.000 --> 01:09:17.000]  Но, оказывается,
[01:09:17.000 --> 01:09:19.000]  что разборов Ирудич показали,
[01:09:19.000 --> 01:09:21.000]  что p не равно np,
[01:09:21.000 --> 01:09:23.000]  значит, у нас подыкается и вот эти
[01:09:23.000 --> 01:09:25.000]  естественные доказательства,
[01:09:25.000 --> 01:09:27.000]  что нельзя.
[01:09:27.000 --> 01:09:29.000]  Как бы мы, в принципе, хотели
[01:09:29.000 --> 01:09:31.000]  рассматривать маленький класс,
[01:09:31.000 --> 01:09:33.000]  в котором есть p,
[01:09:33.000 --> 01:09:35.000]  я тут еще порисую,
[01:09:35.000 --> 01:09:37.000]  какой-то маленький класс,
[01:09:37.000 --> 01:09:39.000]  что целиком внутри него p.
[01:09:39.000 --> 01:09:41.000]  Ну, а, например,
[01:09:41.000 --> 01:09:43.000]  вне него
[01:09:43.000 --> 01:09:45.000]  внение его задачи сад.
[01:09:47.000 --> 01:09:49.000]  И тогда, значит,
[01:09:49.000 --> 01:09:51.000]  есть специальное...
[01:09:53.000 --> 01:09:55.000]  Значит, а если мы так докажем,
[01:09:55.000 --> 01:09:57.000]  тогда сад мне лежит p,
[01:09:57.000 --> 01:09:59.000]  тогда p не равно np.
[01:09:59.000 --> 01:10:01.000]  Ну, и вот есть
[01:10:01.000 --> 01:10:03.000]  некоторые требования к тому,
[01:10:03.000 --> 01:10:05.000]  что называется естественным доказательством,
[01:10:05.000 --> 01:10:07.000]  что вот этот вот класс
[01:10:07.000 --> 01:10:09.000]  требует конструктивности и объемности.
[01:10:09.000 --> 01:10:11.000]  Объемность, что он достаточно
[01:10:11.000 --> 01:10:13.000]  большой,
[01:10:13.000 --> 01:10:15.000]  а конструктивность, что легко проверять,
[01:10:15.000 --> 01:10:17.000]  данная точка в нем лежит или не лежит.
[01:10:19.000 --> 01:10:21.000]  Ну, и вот Разборов и Рудич доказали,
[01:10:21.000 --> 01:10:23.000]  что
[01:10:23.000 --> 01:10:25.000]  нельзя такое
[01:10:25.000 --> 01:10:27.000]  для p и np сделать.
[01:10:27.000 --> 01:10:29.000]  Но идея там такая,
[01:10:29.000 --> 01:10:31.000]  что...
[01:10:31.000 --> 01:10:33.000]  Ну, то есть как нельзя? Нельзя, если выполнить
[01:10:33.000 --> 01:10:35.000]  некоторые более сильные требования,
[01:10:35.000 --> 01:10:37.000]  а именно
[01:10:39.000 --> 01:10:41.000]  некоторые условия на псевдослучайность.
[01:10:41.000 --> 01:10:43.000]  Потому что тогда,
[01:10:43.000 --> 01:10:45.000]  если выполнены некоторые условия
[01:10:45.000 --> 01:10:47.000]  на псевдослучайность,
[01:10:49.000 --> 01:10:51.000]  то тогда получается, что...
[01:11:01.000 --> 01:11:03.000]  Но псевдослучайность означает, что есть такие
[01:11:03.000 --> 01:11:05.000]  конструкции, чтобы псевдослучайно не отличить
[01:11:05.000 --> 01:11:07.000]  от случайной,
[01:11:07.000 --> 01:11:09.000]  при помощи простых
[01:11:09.000 --> 01:11:11.000]  отличителей. А вот эта штука как раз
[01:11:11.000 --> 01:11:13.000]  дает простой отличитель.
[01:11:13.000 --> 01:11:15.000]  Ну, а если, например, там все
[01:11:15.000 --> 01:11:17.000]  p там
[01:11:17.000 --> 01:11:19.000]  попало внутрь, а сад
[01:11:19.000 --> 01:11:21.000]  не попало, то мы как раз
[01:11:21.000 --> 01:11:23.000]  сможем отличать
[01:11:23.000 --> 01:11:25.000]  при помощи этого отличителя.
[01:11:27.000 --> 01:11:29.000]  Ну ладно, значит, я не хочу
[01:11:29.000 --> 01:11:31.000]  вдуматься подробностей.
[01:11:31.000 --> 01:11:33.000]  В общем, неформально
[01:11:33.000 --> 01:11:35.000]  смысл такой,
[01:11:35.000 --> 01:11:37.000]  что если
[01:11:37.000 --> 01:11:39.000]  p не равно np, тогда есть сложные
[01:11:39.000 --> 01:11:41.000]  задачи. Да, и в частности
[01:11:41.000 --> 01:11:43.000]  сложно что-нибудь доказать. Но
[01:11:43.000 --> 01:11:45.000]  дальше некоторым образом это перекрутив,
[01:11:45.000 --> 01:11:47.000]  можно показать, что тогда и само доказательство того,
[01:11:47.000 --> 01:11:49.000]  что p не равно np будет сложной задачей
[01:11:49.000 --> 01:11:51.000]  настолько, что у нее не будет
[01:11:51.000 --> 01:11:53.000]  доказательства. Вот такая
[01:11:53.000 --> 01:11:55.000]  вот идея. Но вот это вот
[01:11:55.000 --> 01:11:57.000]  алгебрический метод,
[01:11:57.000 --> 01:11:59.000]  он обходит и этот барьер.
[01:11:59.000 --> 01:12:01.000]  Там не получается вот такого
[01:12:01.000 --> 01:12:03.000]  конструктивного объемного свойства.
[01:12:05.000 --> 01:12:07.000]  Вот так.
[01:12:07.000 --> 01:12:09.000]  Ну и напоследок,
[01:12:09.000 --> 01:12:11.000]  прежде чем перейдем к конкретике, я еще
[01:12:11.000 --> 01:12:13.000]  одну вещь хочу сказать.
[01:12:13.000 --> 01:12:15.000]  Была такая гипотеза о случайном
[01:12:15.000 --> 01:12:17.000]  оракуле,
[01:12:17.000 --> 01:12:19.000]  то есть теорема,
[01:12:19.000 --> 01:12:21.000]  что для случайного оракула p не равно
[01:12:21.000 --> 01:12:23.000]  np f'1.
[01:12:23.000 --> 01:12:25.000]  И была такая гипотеза, что
[01:12:25.000 --> 01:12:27.000]  если
[01:12:27.000 --> 01:12:29.000]  какое-то вот такое разделение
[01:12:29.000 --> 01:12:31.000]  выполнено с равенствием 1 для случайного оракулы,
[01:12:31.000 --> 01:12:33.000]  то оно и без оракулы тоже выполнено.
[01:12:33.000 --> 01:12:35.000]  А оказалось, что это неверно.
[01:12:35.000 --> 01:12:37.000]  А именно, что
[01:12:37.000 --> 01:12:39.000]  вероятность того,
[01:12:39.000 --> 01:12:41.000]  что
[01:12:41.000 --> 01:12:43.000]  ip
[01:12:43.000 --> 01:12:45.000]  в случайном оракулом a
[01:12:45.000 --> 01:12:47.000]  не равно pspace
[01:12:49.000 --> 01:12:51.000]  в случайном оракулом a.
[01:12:51.000 --> 01:12:53.000]  Значит, вот это равно 1.
[01:12:53.000 --> 01:12:55.000]  Там статья,
[01:12:55.000 --> 01:12:57.000]  там какая-то схема авторов.
[01:12:57.000 --> 01:12:59.000]  Хор, по-моему, первый.
[01:12:59.000 --> 01:13:01.000]  Хор Галдрайхтон и какие-то еще
[01:13:01.000 --> 01:13:03.000]  люди.
[01:13:03.000 --> 01:13:05.000]  Вот, статья так и называется.
[01:13:05.000 --> 01:13:07.000]  The random oracle hypothesis
[01:13:07.000 --> 01:13:09.000]  is wrong.
[01:13:09.000 --> 01:13:11.000]  То есть гипотеза о случайном оракуле
[01:13:11.000 --> 01:13:13.000]  ложная.
[01:13:13.000 --> 01:13:15.000]  Значит, для случайного оракула
[01:13:15.000 --> 01:13:17.000]  это не равно, а для пустого
[01:13:17.000 --> 01:13:19.000]  это равно.
[01:13:21.000 --> 01:13:23.000]  Случайно, да, случайно.
[01:13:23.000 --> 01:13:25.000]  Случайно, в том смысле, что каждое слово
[01:13:25.000 --> 01:13:27.000]  независимо от других,
[01:13:27.000 --> 01:13:29.000]  средство-то одно-второе.
[01:13:29.000 --> 01:13:31.000]  Не, ну там какое-то такое
[01:13:31.000 --> 01:13:33.000]  распределение
[01:13:33.000 --> 01:13:35.000]  на этом континентном
[01:13:35.000 --> 01:13:37.000]  имействе всех ораков получается.
[01:13:37.000 --> 01:13:39.000]  Там уже настоящие вероятности
[01:13:39.000 --> 01:13:41.000]  не дискретные.
[01:13:43.000 --> 01:13:45.000]  Хорошо, значит, что же
[01:13:45.000 --> 01:13:47.000]  все эти люди придумали?
[01:13:47.000 --> 01:13:49.000]  Значит, они придумали следующее.
[01:13:49.000 --> 01:13:51.000]  Да, значит, давайте
[01:13:53.000 --> 01:13:55.000]  я вам сначала
[01:13:55.000 --> 01:13:57.000]  покажу,
[01:13:57.000 --> 01:13:59.000]  значит, что
[01:13:59.000 --> 01:14:01.000]  задача от автологии.
[01:14:01.000 --> 01:14:03.000]  Значит, задача от автологии
[01:14:03.000 --> 01:14:05.000]  лежит в IP.
[01:14:05.000 --> 01:14:07.000]  И даже
[01:14:07.000 --> 01:14:09.000]  вот это, это уже усиление
[01:14:09.000 --> 01:14:11.000]  по сравнению с
[01:14:11.000 --> 01:14:13.000]  тем примером, которые были
[01:14:13.000 --> 01:14:15.000]  раньше, потому что, смотрите,
[01:14:15.000 --> 01:14:17.000]  задача от автологии не просто
[01:14:17.000 --> 01:14:19.000]  CoNP, а она CoNP
[01:14:19.000 --> 01:14:21.000]  полная.
[01:14:21.000 --> 01:14:23.000]  Всякие примеры типа
[01:14:23.000 --> 01:14:25.000]  не из-за маркетизма графа, не в CoNP,
[01:14:25.000 --> 01:14:27.000]  но они там вряд ли полные.
[01:14:29.000 --> 01:14:31.000]  Вот так.
[01:14:37.000 --> 01:14:39.000]  Дальше
[01:14:39.000 --> 01:14:41.000]  идея такая.
[01:14:41.000 --> 01:14:43.000]  Для автологии
[01:14:43.000 --> 01:14:45.000]  там, конечно,
[01:14:45.000 --> 01:14:47.000]  вопрос для 3KNF будет
[01:14:47.000 --> 01:14:49.000]  ревиальным.
[01:14:49.000 --> 01:14:51.000]  То есть никогда не будет автологией.
[01:14:51.000 --> 01:14:53.000]  А нет ревиальным CoNP
[01:14:53.000 --> 01:14:55.000]  будет вопрос
[01:14:55.000 --> 01:14:57.000]  о 3DNF.
[01:14:59.000 --> 01:15:01.000]  То есть мы будем показывать
[01:15:01.000 --> 01:15:03.000]  для 3DNF
[01:15:05.000 --> 01:15:07.000]  является 3DNF автологией.
[01:15:11.000 --> 01:15:13.000]  Идея такая, что мы перейдем
[01:15:13.000 --> 01:15:15.000]  от логики к алгебре.
[01:15:15.000 --> 01:15:17.000]  Значит, логика
[01:15:17.000 --> 01:15:19.000]  превращается
[01:15:19.000 --> 01:15:21.000]  в алгебру.
[01:15:27.000 --> 01:15:29.000]  Ну, в общем-то,
[01:15:29.000 --> 01:15:31.000]  переход довольно стандартный.
[01:15:33.000 --> 01:15:35.000]  Отрицание
[01:15:35.000 --> 01:15:37.000]  х
[01:15:37.000 --> 01:15:39.000]  превращается
[01:15:39.000 --> 01:15:41.000]  в 1-х.
[01:15:41.000 --> 01:15:43.000]  Умножение...
[01:15:43.000 --> 01:15:45.000]  Ой, наоборот,
[01:15:45.000 --> 01:15:47.000]  конъюнция превращается
[01:15:47.000 --> 01:15:49.000]  в умножение.
[01:15:49.000 --> 01:15:51.000]  Вот.
[01:15:51.000 --> 01:15:53.000]  Один юнция
[01:15:53.000 --> 01:15:55.000]  превращается в х плюс у
[01:15:55.000 --> 01:15:57.000]  минус ху.
[01:15:57.000 --> 01:15:59.000]  Вот. Заметьте, что я тут
[01:15:59.000 --> 01:16:01.000]  не ксор пишу, а плюсы и минусы.
[01:16:01.000 --> 01:16:03.000]  Почему?
[01:16:03.000 --> 01:16:05.000]  Потому что вот эти формулы верны
[01:16:05.000 --> 01:16:07.000]  не только в поле из двух элементов,
[01:16:07.000 --> 01:16:09.000]  но вообще в любом поле.
[01:16:09.000 --> 01:16:11.000]  Значит,
[01:16:13.000 --> 01:16:15.000]  вот эти вот формулы
[01:16:15.000 --> 01:16:17.000]  верны
[01:16:19.000 --> 01:16:21.000]  в любом поле.
[01:16:23.000 --> 01:16:25.000]  В том смысле, что если
[01:16:25.000 --> 01:16:27.000]  значение x и y
[01:16:27.000 --> 01:16:29.000]  это 0 и 1,
[01:16:29.000 --> 01:16:31.000]  то результат
[01:16:31.000 --> 01:16:33.000]  установки такой многочлены
[01:16:33.000 --> 01:16:35.000]  это будет тоже 0 и 1,
[01:16:35.000 --> 01:16:37.000]  соответствующим вот этим логическим функциям.
[01:16:37.000 --> 01:16:39.000]  Но вроде очевидно,
[01:16:39.000 --> 01:16:41.000]  более-менее.
[01:16:41.000 --> 01:16:43.000]  Вот. Хорошо.
[01:16:49.000 --> 01:16:51.000]  Значит, тогда...
[01:16:55.000 --> 01:16:57.000]  Смотрите, пусть у нас есть
[01:16:57.000 --> 01:16:59.000]  какая-то формула Фи.
[01:17:01.000 --> 01:17:03.000]  Значит, можно ее
[01:17:03.000 --> 01:17:05.000]  превратить в какой-то многочлен
[01:17:05.000 --> 01:17:07.000]  ПфиТ.
[01:17:07.000 --> 01:17:09.000]  Значит, это
[01:17:09.000 --> 01:17:11.000]  формула логическая.
[01:17:11.000 --> 01:17:13.000]  Это многочлен.
[01:17:15.000 --> 01:17:17.000]  Вот. В этом многочлене мы не будем раскрывать скобки.
[01:17:17.000 --> 01:17:19.000]  Да, давайте вот для
[01:17:19.000 --> 01:17:21.000]  такой функции какое-нибудь обозначение введем.
[01:17:21.000 --> 01:17:23.000]  Да, не знаю, там дизюнкция
[01:17:23.000 --> 01:17:25.000]  в кружочке, например.
[01:17:25.000 --> 01:17:27.000]  Дизюнкция в кружочке — это
[01:17:27.000 --> 01:17:29.000]  алгебрическая функция, значит, по определению
[01:17:29.000 --> 01:17:31.000]  это и будет.
[01:17:31.000 --> 01:17:33.000]  x плюс y минус x.
[01:17:35.000 --> 01:17:37.000]  Вот. И тогда, значит,
[01:17:37.000 --> 01:17:39.000]  тут будет, например, следующая, значит,
[01:17:39.000 --> 01:17:41.000]  если мы про татологию, мы именно про ДНФ
[01:17:41.000 --> 01:17:43.000]  говорим, значит,
[01:17:43.000 --> 01:17:45.000]  тут будет, ну, что-нибудь, да, там
[01:17:45.000 --> 01:17:47.000]  П, конъюнкция НЕКУ,
[01:17:47.000 --> 01:17:49.000]  конъюнкция Р
[01:17:49.000 --> 01:17:51.000]  или
[01:17:51.000 --> 01:17:53.000]  там какой-нибудь П
[01:17:53.000 --> 01:17:55.000]  или отрицание Р,
[01:17:55.000 --> 01:17:57.000]  или отрицание С
[01:17:57.000 --> 01:17:59.000]  или ИТ, вот здесь вот.
[01:18:01.000 --> 01:18:03.000]  Или и так далее.
[01:18:03.000 --> 01:18:05.000]  Значит, там многочлен
[01:18:05.000 --> 01:18:07.000]  наш будет прям таким, да,
[01:18:07.000 --> 01:18:09.000]  значит, будет там П умножить
[01:18:09.000 --> 01:18:11.000]  на 1 минус
[01:18:11.000 --> 01:18:13.000]  Q умножить на
[01:18:13.000 --> 01:18:15.000]  R. Дальше, ко всему
[01:18:15.000 --> 01:18:17.000]  этому месте мы применяем такую дизюнкцию
[01:18:17.000 --> 01:18:19.000]  в кружочке, значит,
[01:18:19.000 --> 01:18:21.000]  тут будет П
[01:18:21.000 --> 01:18:23.000]  умножить там на
[01:18:23.000 --> 01:18:25.000]  1 минус R
[01:18:25.000 --> 01:18:27.000]  умножить на 1 минус С.
[01:18:27.000 --> 01:18:29.000]  Дальше
[01:18:29.000 --> 01:18:31.000]  дизюнкция в кружочке и так далее.
[01:18:33.000 --> 01:18:35.000]  Вот.
[01:18:35.000 --> 01:18:37.000]  Ну, и вот такую запись мы будем понимать
[01:18:37.000 --> 01:18:39.000]  как запись многочленов.
[01:18:41.000 --> 01:18:43.000]  Так, так вот, смотрите.
[01:18:45.000 --> 01:18:47.000]  Теперь главная идея, значит,
[01:18:47.000 --> 01:18:49.000]  фитофтология
[01:18:51.000 --> 01:18:53.000]  фитофтология
[01:18:55.000 --> 01:18:57.000]  тогда и только тогда,
[01:18:57.000 --> 01:18:59.000]  когда сумма
[01:18:59.000 --> 01:19:01.000]  по всем, как бы,
[01:19:01.000 --> 01:19:03.000]  по всем, как бы, битам
[01:19:05.000 --> 01:19:07.000]  на там
[01:19:07.000 --> 01:19:09.000]  B
[01:19:09.000 --> 01:19:11.000]  B1 там
[01:19:11.000 --> 01:19:13.000]  из 0,1, да.
[01:19:13.000 --> 01:19:15.000]  А дайте я вот такую сумму
[01:19:15.000 --> 01:19:17.000]  напишу. Сумму по B2
[01:19:17.000 --> 01:19:19.000]  из 0,1
[01:19:19.000 --> 01:19:21.000]  и так далее. Сумма по
[01:19:21.000 --> 01:19:23.000]  B
[01:19:23.000 --> 01:19:25.000]  какое-то, да, там
[01:19:25.000 --> 01:19:27.000]  карта из 0,1.
[01:19:31.000 --> 01:19:33.000]  Так, здесь дальше
[01:19:33.000 --> 01:19:35.000]  P фитая
[01:19:35.000 --> 01:19:37.000]  P фитая
[01:19:37.000 --> 01:19:39.000]  вот B1
[01:19:39.000 --> 01:19:41.000]  и так далее Bk.
[01:19:41.000 --> 01:19:43.000]  Такая сумма должна быть равна
[01:19:43.000 --> 01:19:45.000]  всему.
[01:19:49.000 --> 01:19:51.000]  Значит, если фитофтология
[01:19:53.000 --> 01:19:55.000]  количество, ну, не количество сумм,
[01:19:55.000 --> 01:19:57.000]  количество слагаемых, да,
[01:19:57.000 --> 01:19:59.000]  что это будет за количество?
[01:19:59.000 --> 01:20:01.000]  два степеника, да.
[01:20:01.000 --> 01:20:03.000]  Совершенно верно.
[01:20:05.000 --> 01:20:07.000]  Вот мы и перешли от логики калкгибрена.
[01:20:07.000 --> 01:20:09.000]  Значит, теперь мы будем доказывать
[01:20:09.000 --> 01:20:11.000]  вот такое вот утверждение
[01:20:11.000 --> 01:20:13.000]  про значение многочленов.
[01:20:15.000 --> 01:20:17.000]  Легче пока не стало, да?
[01:20:17.000 --> 01:20:19.000]  Ну, хорошо, сейчас станет.
[01:20:19.000 --> 01:20:21.000]  Значит, дальше
[01:20:21.000 --> 01:20:23.000]  идея следующая.
[01:20:23.000 --> 01:20:25.000]  Значит, идея такая, что вот эти вот значения
[01:20:25.000 --> 01:20:27.000]  значения многочленов
[01:20:27.000 --> 01:20:29.000]  и можем рассматривать
[01:20:29.000 --> 01:20:31.000]  не только на нулях и единицах,
[01:20:31.000 --> 01:20:33.000]  но вообще на любых значениях в поле.
[01:20:35.000 --> 01:20:37.000]  Вот, и если мы не вздумаем раскрывать
[01:20:37.000 --> 01:20:39.000]  вот тут вот скобки, да, конечно, если мы начнем раскрывать
[01:20:39.000 --> 01:20:41.000]  скобки, это будет какое-то очень длинное выражение.
[01:20:41.000 --> 01:20:43.000]  Мы так не будем делать.
[01:20:43.000 --> 01:20:45.000]  Мы прямо в такое выражение будем подставлять как конкретные
[01:20:45.000 --> 01:20:47.000]  значения.
[01:20:47.000 --> 01:20:49.000]  Тогда мы, конечно, сможем посчитать.
[01:20:51.000 --> 01:20:53.000]  Вот, при этом
[01:20:53.000 --> 01:20:55.000]  да, конечно,
[01:20:57.000 --> 01:20:59.000]  поле должно быть достаточно большим.
[01:21:01.000 --> 01:21:03.000]  Потому что
[01:21:03.000 --> 01:21:05.000]  ножет не слишком большим, да.
[01:21:05.000 --> 01:21:07.000]  Значит, если это будет поле, ну, грубо говоря, там
[01:21:07.000 --> 01:21:09.000]  действительных чисел, да, или рациональных чисел,
[01:21:11.000 --> 01:21:13.000]  то
[01:21:13.000 --> 01:21:15.000]  тут, наверное, слишком...
[01:21:15.000 --> 01:21:17.000]  Ну, вообще тогда будут вообще проблемы.
[01:21:17.000 --> 01:21:19.000]  Например, мы не можем взять случайный имен в поле,
[01:21:19.000 --> 01:21:21.000]  если у нас поле бесконечное.
[01:21:23.000 --> 01:21:25.000]  Но если поле действительных
[01:21:25.000 --> 01:21:27.000]  чисел, то можем взять, но не можем в компьютер
[01:21:27.000 --> 01:21:29.000]  поставить.
[01:21:29.000 --> 01:21:31.000]  А если рациональных чисел,
[01:21:31.000 --> 01:21:33.000]  то мы можем в компьютер
[01:21:33.000 --> 01:21:35.000]  отправить рациональное
[01:21:35.000 --> 01:21:37.000]  число, но не можем взять
[01:21:37.000 --> 01:21:39.000]  случайное, да, потому что не бывает равноверного
[01:21:39.000 --> 01:21:41.000]  шклеения на счетном множестве.
[01:21:41.000 --> 01:21:43.000]  Вообще хочется,
[01:21:43.000 --> 01:21:45.000]  чтобы поле было конечным.
[01:21:45.000 --> 01:21:47.000]  На поле будет конечным.
[01:21:49.000 --> 01:21:51.000]  Так, так не очень хорошо, что я здесь
[01:21:51.000 --> 01:21:53.000]  букву P использовал.
[01:21:53.000 --> 01:21:55.000]  Дальше у нас P будет простым числом.
[01:21:55.000 --> 01:21:57.000]  Да, они были
[01:21:57.000 --> 01:21:59.000]  выпеременной.
[01:21:59.000 --> 01:22:01.000]  Вот, значит, здесь нам
[01:22:01.000 --> 01:22:03.000]  не нужны вот эти всякие
[01:22:03.000 --> 01:22:05.000]  поля
[01:22:05.000 --> 01:22:07.000]  большого размера.
[01:22:07.000 --> 01:22:09.000]  Значит, поля
[01:22:09.000 --> 01:22:11.000]  Галуа нам не нужны. Нужны
[01:22:11.000 --> 01:22:13.000]  самые обычные поля, просто поля вычетов.
[01:22:15.000 --> 01:22:17.000]  Вот, так.
[01:22:17.000 --> 01:22:19.000]  Ну ладно, сейчас я...
[01:22:19.000 --> 01:22:21.000]  Я думаю, что я
[01:22:21.000 --> 01:22:23.000]  вот про тавтологию
[01:22:23.000 --> 01:22:25.000]  прямо расскажу,
[01:22:25.000 --> 01:22:27.000]  как это потом
[01:22:27.000 --> 01:22:29.000]  на TQBF
[01:22:29.000 --> 01:22:31.000]  отстраняется. Изучим в следующий раз.
[01:22:45.000 --> 01:22:47.000]  Так, вот, значит,
[01:22:47.000 --> 01:22:49.000]  выберем
[01:22:49.000 --> 01:22:51.000]  простой число.
[01:22:51.000 --> 01:22:53.000]  Ну, насколько
[01:22:53.000 --> 01:22:55.000]  большим оно должно быть,
[01:22:55.000 --> 01:22:57.000]  то оно должно быть
[01:22:57.000 --> 01:22:59.000]  не слишком большим, чтобы можно было вычислять.
[01:22:59.000 --> 01:23:01.000]  То есть оно должно быть каково-то экспедиционного
[01:23:01.000 --> 01:23:03.000]  размера.
[01:23:03.000 --> 01:23:05.000]  Вот, но и не слишком маленьким,
[01:23:05.000 --> 01:23:07.000]  чтобы там ошибка не получилась.
[01:23:09.000 --> 01:23:11.000]  Но
[01:23:11.000 --> 01:23:15.000]  сам放inos enrichment
[01:23:15.000 --> 01:23:17.000]  geriоген worldwide
[01:23:19.000 --> 01:23:24.000]  В общем, мы сейчас поймем, какого оно размера должно быть, чтобы тут все сошлось.
[01:23:24.000 --> 01:23:42.000]  Значит, p — это простое число, связано f, p — это поле из p-элементов.
[01:23:42.000 --> 01:23:54.000]  Так, и теперь, смотрите, мы возьмем и одну сумму снимем вот из этого выражения, снимем в одну сумму.
[01:23:54.000 --> 01:23:57.000]  И будет у нас одна переменная.
[01:23:57.000 --> 01:24:03.000]  Значит, посмотрим, выражение первое от x.
[01:24:03.000 --> 01:24:14.000]  Значит, это будет такая же сумма, но начиная со второго, b2, 0,1 и так далее.
[01:24:14.000 --> 01:24:21.000]  Тут, соответственно, bk.
[01:24:21.000 --> 01:24:33.000]  Дальше будет p, и тут будет x, и дальше b2, и так далее, bk.
[01:24:33.000 --> 01:24:39.000]  Значит, смотрите, что такое q1 от x? Это многочлен от x.
[01:24:39.000 --> 01:24:48.000]  А какой степени? Ну уж точно не больше, чем длина формулы.
[01:24:48.000 --> 01:24:56.000]  Или не больше, чем три числа переменных.
[01:24:56.000 --> 01:25:04.000]  Но тут, смотрите, если мы вот так вот делаем, то у нас в этой дизюнции в кружочке тоже ведь есть умножение.
[01:25:04.000 --> 01:25:08.000]  То есть у нас просто степени все складываются.
[01:25:08.000 --> 01:25:15.000]  Ну, можно считать, что как раз три на число скобок можно считать.
[01:25:15.000 --> 01:25:18.000]  Это будет очень верхняя оценка.
[01:25:18.000 --> 01:25:22.000]  В принципе, если все скобки из трех, это прямо в точности только будет.
[01:25:22.000 --> 01:25:25.000]  А, это будет чах. Нет, это будет неправильно.
[01:25:25.000 --> 01:25:27.000]  Это верхняя оценка все равно будет.
[01:25:27.000 --> 01:25:31.000]  Но это будет степень многочлен относительно всех переменных.
[01:25:31.000 --> 01:25:35.000]  Относительно одной переменной, если у нас тут повторов нет скобок,
[01:25:35.000 --> 01:25:40.000]  то будет не больше, чем даже число скобок, просто без тройки.
[01:25:40.000 --> 01:25:42.000]  Но вообще-то все неважно.
[01:25:42.000 --> 01:25:50.000]  Все неважно, значит, это степень точно полиномиального размера формулы.
[01:25:50.000 --> 01:26:07.000]  Ку1 от х это многочлен степени полином, вот там размер формулы.
[01:26:07.000 --> 01:26:09.000]  А что же это значит?
[01:26:09.000 --> 01:26:15.000]  Это означает, что рувер может прислать его к эффициентам в явном виде.
[01:26:15.000 --> 01:26:17.000]  Да, если мы просто раскроем все скобки,
[01:26:17.000 --> 01:26:22.000]  то специальное выражение мы его не хранить, не получать, не посчитать не можем.
[01:26:22.000 --> 01:26:26.000]  Но от одной переменной, да, и вот так вот свернутой
[01:26:26.000 --> 01:26:31.000]  к последним переменным мы можем это получить.
[01:26:31.000 --> 01:26:33.000]  Вот, соответственно, рувер.
[01:26:33.000 --> 01:26:36.000]  И вот это я уже начинаю протокол.
[01:26:36.000 --> 01:26:42.000]  Значит, рувер присылает в явном виде кэффициенты.
[01:26:42.000 --> 01:26:47.000]  Присылает кэффициенты вот этого ку1 от х.
[01:26:54.000 --> 01:26:58.000]  Рувер присылает кэффициент ку1 от х.
[01:26:58.000 --> 01:26:59.000]  После этого что?
[01:26:59.000 --> 01:27:02.000]  Должен проверить верификатор.
[01:27:02.000 --> 01:27:07.000]  Но смотрите, если в этот ку1 подставить 0 и 1,
[01:27:07.000 --> 01:27:11.000]  то должна получиться теперь такая сумма.
[01:27:11.000 --> 01:27:18.000]  То есть верификатор проверяет,
[01:27:18.000 --> 01:27:28.000]  то ку1 от 0 плюс ку1 от 1 равняется 2 в степени k.
[01:27:31.000 --> 01:27:35.000]  Вот, если уж это не сошлось, то тогда нужно отвернуть.
[01:27:36.000 --> 01:27:40.000]  Дальше происходит следующее.
[01:27:40.000 --> 01:27:46.000]  Значит, что честный прувер, для которого это все верно,
[01:27:46.000 --> 01:27:51.000]  пришлет многочленку 1, который по этой форме посчитан,
[01:27:51.000 --> 01:27:53.000]  и все сойдется.
[01:27:53.000 --> 01:27:56.000]  Нечестный станет перед выбором.
[01:27:56.000 --> 01:28:00.000]  Либо прислать многочленку 1, который по этой форме посчитан,
[01:28:00.000 --> 01:28:04.000]  но тогда он сразу проиграет, потому что это не сойдется.
[01:28:04.000 --> 01:28:08.000]  Либо прислать какой-то другой многочленку 1 штрих,
[01:28:08.000 --> 01:28:13.000]  который вот тут не верен, но по крайней мере вот эта проверка пройдет.
[01:28:13.000 --> 01:28:17.000]  Но, конечно, на этом не нужно заканчивать.
[01:28:17.000 --> 01:28:19.000]  После этого происходит следующее.
[01:28:19.000 --> 01:28:26.000]  Теперь верификатор делает следующее.
[01:28:26.000 --> 01:28:31.000]  Верификатор выбирает случайный элемент поля.
[01:28:31.000 --> 01:28:40.000]  Верификатор выбирает случайный А1 из FF.
[01:28:43.000 --> 01:28:47.000]  И после этого начинает ожидать...
[01:28:50.000 --> 01:28:56.000]  Значит, ожидает доказательства следующего факта.
[01:28:56.000 --> 01:29:02.000]  Сумма теперь по B2 из 0,1.
[01:29:02.000 --> 01:29:07.000]  Сумма там по B3 из 0,1.
[01:29:07.000 --> 01:29:09.000]  И так далее.
[01:29:09.000 --> 01:29:13.000]  Сумма по Bk из 0,1.
[01:29:15.000 --> 01:29:20.000]  Значит, тут будет FF, где в качестве первого аргумента
[01:29:20.000 --> 01:29:23.000]  уже вот это вот случайно А1 подставили.
[01:29:24.000 --> 01:29:30.000]  А все остальные аргументы, они все еще вот эти B2, это дальняя Bk.
[01:29:30.000 --> 01:29:33.000]  И чему это должно быть равно?
[01:29:33.000 --> 01:29:37.000]  Смотрите, вот это, что я написал, это вообще то же самое, что там написано.
[01:29:37.000 --> 01:29:40.000]  Только вместо X я A1 подставил.
[01:29:40.000 --> 01:29:47.000]  Ну, тогда, если Q1 правильное, то это должно быть равно Q1 от A1.
[01:29:48.000 --> 01:29:51.000]  Так, ну, смотрите.
[01:29:51.000 --> 01:29:58.000]  Получается, на самом деле, утверждение примерно того же вида,
[01:29:58.000 --> 01:30:04.000]  то и раньше, то есть тоже какая-то такая сумма равняется чему-то.
[01:30:04.000 --> 01:30:10.000]  Только теперь сумма на единицу короче, значит, на одно суммирование меньше.
[01:30:10.000 --> 01:30:13.000]  Ну, и здесь тут немножко другое получается.
[01:30:13.000 --> 01:30:18.000]  Получается FF, получается FF с подставленным A1.
[01:30:18.000 --> 01:30:22.000]  Но дальше, в общем, происходит все то же самое.
[01:30:22.000 --> 01:30:27.000]  Сейчас я дайте здесь сотру, я напишу немножко подробнее.
[01:30:27.000 --> 01:30:32.000]  То есть идея, что дальше рекурсивно происходит то же самое,
[01:30:32.000 --> 01:30:36.000]  а потом, когда мы сведем к базе рекурсия,
[01:30:36.000 --> 01:30:43.000]  то верификатор сам сможет проверить, совпало или не совпало.
[01:30:54.000 --> 01:30:58.000]  Ну, дайте я еще, там, второй шаг я еще подробно напишу.
[01:30:58.000 --> 01:31:00.000]  Значит, теперь Q2.
[01:31:00.000 --> 01:31:07.000]  Значит, Q2 от X, и это будет то же самое.
[01:31:07.000 --> 01:31:09.000]  Теперь мы еще одну сумму снимаем.
[01:31:09.000 --> 01:31:13.000]  И теперь вместо B2 вставляем произвольный.
[01:31:13.000 --> 01:31:20.000]  Q2 от X это вот сумма по B3 из 0 единицы и так далее.
[01:31:20.000 --> 01:31:27.000]  Сумма по ZK из 0 единицы.
[01:31:27.000 --> 01:31:33.000]  И тут будет PFE от A1, потом X.
[01:31:33.000 --> 01:31:38.000]  A1, X, B3 и так далее, BK.
[01:31:43.000 --> 01:31:47.000]  Вот, это тоже многощина одной переменной, тоже степень небольшая.
[01:31:47.000 --> 01:31:51.000]  Теперь прувер присылает, соответственно, коэффициенты Q2.
[01:31:51.000 --> 01:31:58.000]  Значит, теперь верификатор проверяет,
[01:31:58.000 --> 01:32:06.000]  то Q2 теперь от 0, Q2 от 0 плюс Q2 от единицы
[01:32:06.000 --> 01:32:11.000]  равняется Q1 от A1,
[01:32:11.000 --> 01:32:18.000]  ну и после этого выбирает случайное A2,
[01:32:18.000 --> 01:32:22.000]  выбирает случайное A2,
[01:32:22.000 --> 01:32:28.000]  ну и, соответственно, ожидает доказательства на единицы.
[01:32:28.000 --> 01:32:35.000]  Ну, и после этого выбирает Q1 от A1,
[01:32:36.000 --> 01:32:43.000]  ну и, соответственно, ожидает доказательства на единицу меньшего.
[01:32:43.000 --> 01:32:47.000]  Так, дайте, я вот тут напишу.
[01:32:47.000 --> 01:32:50.000]  Значит, ожидает...
[01:32:50.000 --> 01:32:54.000]  Ожидая доказательства, что сумма теперь начинает с B3.
[01:32:56.000 --> 01:33:00.000]  Сумма начинает с B3.
[01:33:00.000 --> 01:33:04.000]  И так далее.
[01:33:04.000 --> 01:33:08.000]  Значит, кончая BK там.
[01:33:08.000 --> 01:33:15.000]  И тут, соответственно, тут будет прэфи от A1, A2,
[01:33:15.000 --> 01:33:18.000]  а потом B3,
[01:33:18.000 --> 01:33:22.000]  а и так далее.
[01:33:22.000 --> 01:33:26.000]  И так далее BK.
[01:33:26.000 --> 01:33:31.000]  Ну и, соответственно,
[01:33:31.000 --> 01:33:35.000]  а и так далее.
[01:33:35.000 --> 01:33:39.000]  И так далее BK.
[01:33:39.000 --> 01:33:43.000]  Вот это будет равняться, соответственно, Q2 от A2.
[01:33:47.000 --> 01:33:49.000]  И все это продолжается точно так же.
[01:33:49.000 --> 01:33:52.000]  То есть теперь еще одна сумма убирается,
[01:33:52.000 --> 01:33:54.000]  еще одна переменная, еще один крицентного члена,
[01:33:54.000 --> 01:33:57.000]  еще одно суммирование, и так далее.
[01:33:57.000 --> 01:34:01.000]  Вот, в самом конце.
[01:34:01.000 --> 01:34:05.000]  И так далее.
[01:34:05.000 --> 01:34:11.000]  Значит, и в конце получается, что верификатор сам может проверить.
[01:34:16.000 --> 01:34:22.000]  В конце верификатор сам проверяет.
[01:34:28.000 --> 01:34:32.000]  То он проверяет.
[01:34:32.000 --> 01:34:34.000]  Ну что?
[01:34:34.000 --> 01:34:38.000]  Этот многочлен, который мы все уже выбранные значения подставили,
[01:34:38.000 --> 01:34:42.000]  равняется как бы последнему многочлену.
[01:34:42.000 --> 01:34:46.000]  Да, то есть тут будет Kt,
[01:34:46.000 --> 01:34:50.000]  а тут как бы уже пустое множество сумм,
[01:34:50.000 --> 01:34:54.000]  что прэфи.
[01:34:55.000 --> 01:34:59.000]  Вот, соответственно, A1, A2, и так далее.
[01:34:59.000 --> 01:35:05.000]  Kt, что он равняется Qt от A.
[01:35:08.000 --> 01:35:12.000]  Вот, и это верификатор сам может проверить.
[01:35:12.000 --> 01:35:14.000]  Потому что, когда все значения фиксированы,
[01:35:14.000 --> 01:35:18.000]  он уже их может подставить, многочлены посчитать по формуле.
[01:35:18.000 --> 01:35:23.000]  Ну, значит, тогда смотрите, на чем основана идея корректности.
[01:35:23.000 --> 01:35:29.000]  Во-первых, если его по-честному,
[01:35:29.000 --> 01:35:33.000]  то есть если действительно тавтология,
[01:35:33.000 --> 01:35:35.000]  тогда исходное равенство верное,
[01:35:35.000 --> 01:35:39.000]  и просто каждый раз будет по формуле считать многочлен и именно его присылать.
[01:35:39.000 --> 01:35:43.000]  И тогда все проверки, конечно, пройдут.
[01:35:43.000 --> 01:35:46.000]  Теперь, пусть условие неверное,
[01:35:46.000 --> 01:35:50.000]  но тогда вот эта проверка все-таки прошла.
[01:35:50.000 --> 01:35:55.000]  Значит, тогда что нужно, что проверки придется сделать?
[01:35:55.000 --> 01:36:00.000]  Проверу придется вместо Q1 прислать какой-то Q1 штрих.
[01:36:00.000 --> 01:36:04.000]  Да, то есть вот может быть что-то такое,
[01:36:04.000 --> 01:36:08.000]  что вот, например,
[01:36:10.000 --> 01:36:19.000]  для настоящего Q1, Q1 от нуля плюс Q1 от единицы
[01:36:19.000 --> 01:36:22.000]  равняется 2 в степени K.
[01:36:22.000 --> 01:36:25.000]  Вот, а для того, что прислал прувер,
[01:36:25.000 --> 01:36:28.000]  будет какой-то Q1 штрих.
[01:36:28.000 --> 01:36:29.000]  Нуля.
[01:36:29.000 --> 01:36:31.000]  Сейчас, тут не равняй.
[01:36:31.000 --> 01:36:33.000]  Значит, это если неверное движение,
[01:36:33.000 --> 01:36:36.000]  то для честного Q1 будет не равняться,
[01:36:36.000 --> 01:36:41.000]  а для того, который прислал,
[01:36:41.000 --> 01:36:44.000]  будет равняться.
[01:36:44.000 --> 01:36:46.000]  Что из этого следует?
[01:36:46.000 --> 01:36:49.000]  То есть следует, что он прислал что-то другое.
[01:36:49.000 --> 01:36:51.000]  Ну, логично.
[01:36:51.000 --> 01:36:55.000]  Из этого следует, что как бы как многочлен формальный,
[01:36:55.000 --> 01:37:00.000]  Q1 это не то же самое, что Q1 штрих.
[01:37:00.000 --> 01:37:11.000]  А тогда получается, что вероятность того,
[01:37:12.000 --> 01:37:21.000]  что Q1 от A1 совпало Q1 штрих от A1.
[01:37:21.000 --> 01:37:25.000]  Это вероятность, что A1 это корень разности.
[01:37:25.000 --> 01:37:28.000]  Разность, поскольку и Q1 штрих,
[01:37:28.000 --> 01:37:31.000]  и Q это на очень маленькой степени.
[01:37:31.000 --> 01:37:33.000]  Да, ну Q1 как бы автоматически,
[01:37:33.000 --> 01:37:36.000]  а Q1 штрих, потому что мы так воспринимаем.
[01:37:37.000 --> 01:37:41.000]  Чтобы не прислал прувер на этом этапе,
[01:37:41.000 --> 01:37:43.000]  мы это воспринимаем как эффициентом многочлена
[01:37:43.000 --> 01:37:45.000]  на небольшой степени.
[01:37:45.000 --> 01:37:50.000]  Поэтому Q1, исходя из определения маленькой степени,
[01:37:50.000 --> 01:37:53.000]  Q1 штрих исходя из конструкции маленькой степени,
[01:37:53.000 --> 01:37:54.000]  соответственно, вероятность того,
[01:37:54.000 --> 01:37:57.000]  что мы попали в корень, тоже будет маленькая.
[01:37:57.000 --> 01:37:59.000]  Значит, это будет меньше либо равно,
[01:37:59.000 --> 01:38:02.000]  чем верхняя оценка на степень.
[01:38:02.000 --> 01:38:06.000]  Ну, там 3m это уж точно верхняя оценка.
[01:38:06.000 --> 01:38:09.000]  Делить на размер поля.
[01:38:09.000 --> 01:38:11.000]  Значит, это будет P.
[01:38:11.000 --> 01:38:16.000]  Если вдруг верификатор попал в корень вот этой разности,
[01:38:16.000 --> 01:38:18.000]  то тогда после этого у прувера
[01:38:18.000 --> 01:38:19.000]  остается вежное утверждение,
[01:38:19.000 --> 01:38:22.000]  и он его радостно доказывает.
[01:38:22.000 --> 01:38:26.000]  m это число скобок, я имею в виду.
[01:38:26.000 --> 01:38:28.000]  Но даже в принципе тройка можно убрать,
[01:38:28.000 --> 01:38:31.000]  если там переменные дублируются.
[01:38:31.000 --> 01:38:35.000]  Ну, в общем, в числителе стоит некоторая верхняя оценка
[01:38:35.000 --> 01:38:37.000]  на степень, которая полиномерная.
[01:38:37.000 --> 01:38:43.000]  Вот, в общем, вот эта вот штука, это вот 3m.
[01:38:43.000 --> 01:38:49.000]  Так, вот, значит, если случайный верификатор попал в корень,
[01:38:49.000 --> 01:38:51.000]  тогда пруверу повезло,
[01:38:51.000 --> 01:38:54.000]  и после этого заставшиеся раунды он все докажет.
[01:38:54.000 --> 01:38:57.000]  Но, скорее всего, это не будет.
[01:38:57.000 --> 01:39:01.000]  То есть нам нужно, чтобы за все раунды
[01:39:01.000 --> 01:39:05.000]  вот эта ошибка не накопилась к большой величине.
[01:39:05.000 --> 01:39:10.000]  Ну, конечно, если P будет там экспоненциальным от m,
[01:39:10.000 --> 01:39:12.000]  а раундов у нас полиномерное число,
[01:39:12.000 --> 01:39:14.000]  то она и не накопится.
[01:39:17.000 --> 01:39:18.000]  Вот.
[01:39:18.000 --> 01:39:21.000]  Ну, собственно, вот и доказательства.
[01:39:22.000 --> 01:39:27.000]  Получается, что если не на одном из этапов
[01:39:27.000 --> 01:39:32.000]  верификатор не попал случайно в корень вот этого многочлена,
[01:39:32.000 --> 01:39:35.000]  ну, какого разности между тем, что на самом деле
[01:39:35.000 --> 01:39:38.000]  должно быть, и тем, что прислал прувер,
[01:39:38.000 --> 01:39:41.000]  то тогда, соответственно...
[01:39:46.000 --> 01:39:48.000]  Ну, только на следующих этапах тут, конечно,
[01:39:48.000 --> 01:39:50.000]  если прувер что-то не то прислал,
[01:39:50.000 --> 01:39:52.000]  q1 будет q1 штрих.
[01:39:52.000 --> 01:39:55.000]  Здесь используется то, что прислал прувер,
[01:39:55.000 --> 01:39:57.000]  а не то, что должно быть на самом деле.
[01:39:57.000 --> 01:39:58.000]  Ну вот.
[01:39:58.000 --> 01:40:00.000]  Получается, что с маленькой вероятностью
[01:40:00.000 --> 01:40:05.000]  на одном из этапов верификатор случайно выберет корень,
[01:40:05.000 --> 01:40:08.000]  а с дополняющей вероятностью там в конце
[01:40:08.000 --> 01:40:11.000]  все еще останется неерное утверждение,
[01:40:11.000 --> 01:40:14.000]  и верификатор его отвернет.
[01:40:15.000 --> 01:40:18.000]  Вот, вот такое рассуждение.
[01:40:21.000 --> 01:40:24.000]  Так, ну чего, понятно?
[01:40:30.000 --> 01:40:33.000]  Не, а почему один раунд?
[01:40:33.000 --> 01:40:36.000]  Не один раунд, а для каждой переменной свой раунд.
[01:40:36.000 --> 01:40:39.000]  Все-таки тут именно важно именно пленнельство раундов.
[01:40:39.000 --> 01:40:42.000]  Да, и то, что они именно последовательно идут.
[01:40:42.000 --> 01:40:46.000]  Да, что сначала прувер фиксирует q1,
[01:40:46.000 --> 01:40:49.000]  потом верификатор там фиксирует элемент a1,
[01:40:49.000 --> 01:40:51.000]  потом прувер прислает q2,
[01:40:51.000 --> 01:40:53.000]  потом верификатор фиксирует a2.
[01:40:53.000 --> 01:40:56.000]  Да, то есть раундов, ну, таких парных раундов,
[01:40:56.000 --> 01:40:58.000]  да, прувер и верификатор
[01:40:58.000 --> 01:41:01.000]  будет только же сколько переменных формуля.
[01:41:04.000 --> 01:41:06.000]  Вот, и это, конечно, очень важно, да,
[01:41:06.000 --> 01:41:08.000]  если бы их была константа, да,
[01:41:08.000 --> 01:41:11.000]  то тогда это был бы am, а не ip.
[01:41:13.000 --> 01:41:16.000]  Не, ну, в смысле...
[01:41:16.000 --> 01:41:18.000]  Вот это вот,
[01:41:18.000 --> 01:41:20.000]  вот это вот это ошибка,
[01:41:20.000 --> 01:41:22.000]  которая добавляется на первом раунде.
[01:41:22.000 --> 01:41:24.000]  Дальше будет такая же ошибка
[01:41:24.000 --> 01:41:26.000]  на втором раунде.
[01:41:26.000 --> 01:41:28.000]  Вот, и так далее.
[01:41:28.000 --> 01:41:30.000]  Соответственно, общая ошибка
[01:41:30.000 --> 01:41:32.000]  будет вот это вот умноженное число раунда.
[01:41:32.000 --> 01:41:34.000]  Ну, давайте, а число раундов
[01:41:34.000 --> 01:41:36.000]  собственно как число переменных, да,
[01:41:36.000 --> 01:41:38.000]  то есть общая...
[01:41:38.000 --> 01:41:40.000]  то есть, общая ошибка,
[01:41:40.000 --> 01:41:47.000]  то есть общая ошибка будет 3mn делить на p.
[01:41:47.000 --> 01:41:52.000]  Да, стандартно n число переменных, m число скопок.
[01:41:52.000 --> 01:41:55.000]  Что?
[01:41:55.000 --> 01:41:57.000]  А, k переменных.
[01:41:57.000 --> 01:42:03.000]  Ну ладно.
[01:42:03.000 --> 01:42:07.000]  Ну, в данном случае можно p от пруера попросить.
[01:42:07.000 --> 01:42:12.000]  Да, можно сказать, что пусть p будет прошлое число больше, чем такое,
[01:42:12.000 --> 01:42:14.000]  то пришлите нам, пожалуйста.
[01:42:14.000 --> 01:42:19.000]  Вот, либо можно действительно выбирать там и искать его там как-нибудь.
[01:42:38.000 --> 01:42:43.000]  Так, не, ну вообще вроде да, вроде можно так сделать.
[01:42:56.000 --> 01:43:00.000]  Ну она была на первом ходе, но дальше она увеличивается.
[01:43:00.000 --> 01:43:06.000]  Если хотя бы на одном шаге верификатор попал случайно в корень,
[01:43:06.000 --> 01:43:10.000]  многочлена, то после этого прувер уже докажет.
[01:43:10.000 --> 01:43:14.000]  После этого у прувера остается верное утверждение, он его докажет.
[01:43:14.000 --> 01:43:18.000]  Поэтому это нужно, нужно еще умножить на число раундов.
[01:43:29.000 --> 01:43:32.000]  Так нет.
[01:43:33.000 --> 01:43:38.000]  Алгоритм нельзя обрубать, потому что нам кроме, кроме вот этого,
[01:43:38.000 --> 01:43:42.000]  нужно проверить еще и вот это вот.
[01:43:42.000 --> 01:43:46.000]  А это мы доказываем, это мы проверяем рекурсивно.
[01:43:51.000 --> 01:43:55.000]  Поэтому нет, это нельзя просто так прекратить.
[01:43:55.000 --> 01:43:59.000]  Тут как бы и на чем основано, да, что скорее всего,
[01:43:59.000 --> 01:44:02.000]  если изначально было утверждение неверное, то оно скорее всего
[01:44:02.000 --> 01:44:05.000]  и на втором шаге будет неверное, и на третьем, и так далее,
[01:44:05.000 --> 01:44:08.000]  и на последнем тоже, а на последнем верификатор
[01:44:08.000 --> 01:44:12.000]  может его сам проверить, уже без помощи прувера.
[01:44:12.000 --> 01:44:16.000]  Вот такое рассуждение.
[01:44:17.000 --> 01:44:20.000]  Так, ну ладно, получается на сегодня все.
[01:44:20.000 --> 01:44:23.000]  В следующий раз расскажу о том, что происходит.
[01:44:23.000 --> 01:44:27.000]  На сегодня все, в следующий раз распространим на вот ЭКБФ.
[01:44:30.000 --> 01:44:33.000]  Все, спасибо.
