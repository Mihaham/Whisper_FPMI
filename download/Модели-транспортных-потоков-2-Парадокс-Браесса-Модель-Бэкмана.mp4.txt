[00:00.000 --> 00:12.840]  Ну хорошо, а теперь сделаем вид, что ничего не было, и начнем лекцию как бы сначала.
[00:12.840 --> 00:21.680]  Тема сегодняшней лекции это продолжение изучения модели равновесного распределения потока по
[00:21.680 --> 00:26.800]  путям, модели прежде всего Бекмана, но не только. Мы сегодня поговорим еще о модели стабильной
[00:26.800 --> 00:33.120]  динамики, попробуем вывести модель Бекмана, вывести немножко по-другому, не так как это было
[00:33.120 --> 00:40.680]  сделано на прошлой лекции. Поскольку прошлая лекция не снималась, я, наверное, напомню,
[00:40.680 --> 00:46.840]  напомню вывод на прошлой лекции. Это прямой вывод, то есть задача, то есть поиск равновесия
[00:46.840 --> 00:52.960]  сводится к задаче оптимизации. А сегодня мы тоже получим, что равновесие в той же самой модели
[00:52.960 --> 00:58.920]  сводится к задаче оптимизации, но это будет двойственный вывод, то есть другая задача оптимизации
[00:58.920 --> 01:07.720]  получается, естественно, связанная с исходной, но другая. Но прежде чем переходить к моделям
[01:07.720 --> 01:13.920]  равновесного распределения потока по путям и их выводу, давайте закрепим материал примером,
[01:13.920 --> 01:20.120]  который я в общем-то только что рассказывал, но поскольку запись началась только что, я его повторю,
[01:20.120 --> 01:28.040]  пример называется paradox bryce, вот он нарисован, давайте лишние числа сотру, которые будут вас
[01:28.040 --> 01:37.200]  сбивать, то есть я не буду здесь писать, и тут тоже не буду писать. Предположим, что есть город,
[01:37.200 --> 01:42.840]  в котором есть старт, район, из которого автомобили стартуют, район finish, есть две
[01:42.840 --> 01:48.080]  вспомогательные вершины, которые не порождают никакой корреспонденции, не являются стоками,
[01:48.240 --> 01:58.160]  ну и изначально есть только четыре дороги, соединяющие старт с up-down и с finish. Дороги имеют
[01:58.160 --> 02:03.720]  характеристики такие, какие нарисованы, то есть затраты на проезд этого ребра, есть поток на
[02:03.720 --> 02:10.320]  ребре в размерности автомобилей в час и делить на 100, это будут затраты в минутах, но здесь затраты
[02:10.320 --> 02:18.520]  постоянные 45 минут, здесь симметрично 45 минут, здесь тоже самое симметрично f на 100. У нас мы считаем две
[02:18.520 --> 02:24.480]  полосы, точнее вот здесь входят в систему две полосы, ну или если хотите из домов, которые в этом
[02:24.480 --> 02:30.320]  районе выезжают, сток автомобилей, сколько вот характерно для максимальной пропускной способности
[02:30.320 --> 02:34.760]  двухполос. Эти четыре тысячи автомобилей должны как-то распределиться, как они распределятся,
[02:34.760 --> 02:39.920]  если ситуация равновесная, то легко понять за счет симметричности картинки, что половина
[02:39.980 --> 02:45.000]  потока 2000 автомобилей пойдет по верхнем пути, половина потока по нижнем пути, значит в равновесии
[02:45.000 --> 02:53.340]  получается будет 65 минут, потому что половина потока от 4000, точнее половина потока от 4000
[02:53.340 --> 02:58.960]  это 2000 автомобилей, ну и соответственно 2000 автомобилей вот 2000 автомобилей поделить
[02:58.960 --> 03:04.840]  на 100 будет двадцать минут, ну и здесь 45 минут. Итого первые конфигурации 65 минут
[03:04.840 --> 03:12.520]  Первая конфигурация 65 минут. Вторая конфигурация. Вторая конфигурация это когда строится дополнительное
[03:12.520 --> 03:18.640]  ребро. Давайте его пожирнее нарисую. И это ребро имеет нулевые затраты. Постойте телепортация. То есть
[03:18.640 --> 03:24.400]  можно понимать так что эти две вершины были близки, расстояние между ними маленькое и не было дороги
[03:24.400 --> 03:30.440]  которые их соединяют. Ну вот построили река текла. Сейчас построили мостик и можно переезжать
[03:30.440 --> 03:38.760]  через этот реку и можно сразу оказаться из UpDown. Как поменяется конфигурация? Ну предлагается такое
[03:38.760 --> 03:46.040]  решение пустить 4 тысячи автомобилей сразу на вот это вот направление. Почему это решение предлагается?
[03:46.040 --> 03:57.320]  Потому что понятно что в начальный момент вот этот путь он будет иметь затраты 40 минут. Вот если
[03:57.320 --> 04:04.440]  один только водитель захочет что-то менять он поменяет и он может сделать себе 40 минут затраты на
[04:04.440 --> 04:09.440]  перемещение. Естественно все такие умные все начнут перетекать. Перетекать с вот этих верхних и
[04:09.440 --> 04:14.240]  нижних путей вот на этот путь. Но вот оказывается что они будут перетекать, вплоть до конца перетекут.
[04:14.240 --> 04:22.160]  Потому что смотрите здесь затраты будут вот если брать этот путь и брать 4 тысячи автомобилей то
[04:22.160 --> 04:29.400]  получится здесь 40 минут здесь 40 минут и здесь 40 минут и здесь 40 минут. Итого будет 80 минут.
[04:29.400 --> 04:39.800]  Альтернативные маршруты при такой конфигурации если весь поток идет здесь то будет ли у кого-то
[04:39.800 --> 04:46.200]  желание поехать как-то по-другому. Но поскольку одна корреспонденция то мы говорим как бы по сути
[04:46.200 --> 04:52.560]  о всех водителях. Произвольно выбранном водителе будет у него желание ехать по-другому. Но давайте
[04:52.560 --> 05:01.000]  смотреть 40 минут 45 минут 85 минут вряд ли. 45 минут 40 минут с 85 не будет. То есть получается
[05:01.000 --> 05:08.560]  что в данном случае равновесие так называется неэффективно папарето. То есть мы получаем
[05:08.560 --> 05:19.800]  ситуацию когда в общем-то как сказать можно водителям сказать как двигаться и всем станет
[05:19.800 --> 05:29.040]  лучше. И как бы равновесие которое возникает оно плохое. То есть если например сказать что 1750
[05:29.040 --> 05:36.200]  автомобилей вот так должны ехать 1750 автомобилей вот так а 500 автомобилей вот так то каждый
[05:36.200 --> 05:43.800]  автомобилист будет тратить меньше чем 65 минут. А тут у нас получается в этом равновесие 80 то есть
[05:43.800 --> 05:57.800]  это какое-то очень плохое равновесие. То есть вообще как бы ну то есть не знаю непонятно зачем
[05:57.800 --> 06:04.000]  оно такое вот нужно такое равновесие. Проблема социальным оптимум вот в чем. То есть казалось бы
[06:04.160 --> 06:10.600]  вот я только что рассказал стратегию как надо двигаться чтобы всем стало лучше. Но вот представьте
[06:10.600 --> 06:18.880]  себе ситуацию что вы оказались среди тех водителей которые двигаются ну быстрее чем там вот вот это
[06:18.880 --> 06:27.760]  вот 80 минут там ну то есть быстро но кто-то быстрее вас. Вот в чем проблема. И поменяв свою стратегию
[06:27.760 --> 06:35.040]  можете еще быстрее двигаться. То есть как бы получается такая ситуация что все всем выгоднее
[06:35.040 --> 06:42.160]  чем в равновесии. Но кто-то себя ощущает обделенным потому что у кого-то еще лучше. Вот когда равновесие
[06:42.160 --> 06:47.800]  то у всех одинаково. То есть одинаково в том смысле что если есть что-то лучше каждый может по
[06:47.800 --> 06:53.920]  правилам игры туда переключиться. И поэтому что-то лучше быть не может. А когда это не равновесие
[06:53.920 --> 06:58.920]  социальный оптимум то у вас есть стратегии вообще говоря могут быть стратегии которые если вы на них
[06:58.920 --> 07:05.400]  переключитесь у вас будет лучше. И у кого-то кто использует те стратегии так оно и есть у них
[07:05.400 --> 07:10.880]  лучше. И вы задаете с резонным вопросом а почему это должен быть я. Почему я должен как бы ехать по
[07:10.880 --> 07:16.680]  вот вот такому маршруту а кто-то другой по более короткому. Но если все будут этой логике
[07:16.680 --> 07:22.040]  придерживаться и все перейдут на самый короткий уже как бы перестанет быть социальным оптимум. Вот
[07:22.040 --> 07:30.760]  и задача вообще говоря государство центра она заключается в том чтобы равновесие которое
[07:30.760 --> 07:37.200]  возникает в игре оно более менее соответствовало социальному оптимуму. Для этого что делают. Для этого
[07:37.200 --> 07:43.880]  стараются пенализировать как-то ну так сказать штрафовать те дороги на которых образуются
[07:43.880 --> 07:49.720]  наибольшие пробки чтобы было меньше желания двигаться по таким дорогам. Это могут быть реально
[07:49.720 --> 07:55.440]  платные дороги. Могут быть какие-то привилегии для отдельных категорий автомобилистов например
[07:55.440 --> 08:03.000]  выдлинной полосы. Но таким образом пропадает полоса. Ну то есть как-то влиять на ситуацию это
[08:03.000 --> 08:08.560]  называется мета игровой синтез. То есть пытаться менять правила игры так чтобы равновесие в новой
[08:08.560 --> 08:14.480]  игре было близко к социальному оптимуму. Ну в общем это мы будем отдельно говорить возможно даже в
[08:14.480 --> 08:21.520]  конце сегодняшней лекции. Итак парадокс Брайса он о том что построили новую дорогу а стало всем
[08:21.520 --> 08:28.200]  хуже. То есть равновесие имеет хуже характеристику чем чем оно было до того как эту дорогу построили
[08:28.200 --> 08:38.600]  оказалось бы строить дороги это делать лучше. То есть большего про штрафы будем но для этого мне
[08:38.600 --> 08:46.680]  нужно будет выписать более общие формулы потому что не хочется сейчас частности. Ну то есть штрафы
[08:46.680 --> 08:53.080]  это хорошо. Ну в смысле это правильное с точки зрения математики вообще по делу решение. Но
[08:53.080 --> 08:58.040]  давайте напомним что такое модель Бекмана и поговорим про штраф именно в контексте более
[08:58.040 --> 09:03.720]  общей модели чтобы у вас был общая схема. Не вот не этот пример но хотя пример тоже можно потом
[09:03.720 --> 09:10.200]  к нему вернуться. Общая схема. Итак что такое модель Бекмана модель равновесного распределения
[09:10.200 --> 09:16.600]  потока по путям. Мне придется это напомнить потому что первая лекция прошу прощения кто был и слушал
[09:16.600 --> 09:24.720]  первую лекцию. Ну что делать. В общем я так понимаю что курс хочет слушать довольно много людей издавать
[09:24.720 --> 09:30.640]  его. И вот проекты которые будут предложены они вокруг всяких тонкостей. Ну не только тонкости
[09:30.640 --> 09:37.400]  вокруг вот некой математики связаны с небольшим числом модели буквально с тремя. И об этом вот эта
[09:37.400 --> 09:43.000]  модель Бекмана это одна из них. Поэтому если я сейчас как-то замну это будет нехорошо. Это значит
[09:43.000 --> 09:48.680]  надо нам сейчас максимально разобраться в деталях. Итак что такое модель Бекмана. Сейчас просто
[09:48.680 --> 09:53.880]  определение. Ничего особо такого умного я говорить не буду. Просто повторить определение. У нас
[09:53.880 --> 10:04.440]  есть В. Набор вершин графа. Набор вершин. Набор вершин. Е. Набор ребер. Набор ребер. Обычно для
[10:04.440 --> 10:13.120]  транспортного графа характерно что вершины ребер одного порядка. Но ребер где-то раза в три больше.
[10:13.120 --> 10:18.240]  То есть мощность числа ребер это где-то три на мощность числа вершин. Вот мы сейчас моделируем
[10:18.240 --> 10:25.200]  Москву и у нас число вершин может достигать 10 в пятой степени. Но это за счет вот некого
[10:25.200 --> 10:35.000]  раздутия графа. Ну вообще число, извините, число ребер. 10 в пятый где-то может достигать. Ну просто
[10:35.000 --> 10:40.840]  вы понимали масштаб графа на котором мы работаем. Значит вершины обычно соответствуют каким-то
[10:40.840 --> 10:47.040]  фрагментам. Например ну застройка. Жилой район. Ребра это это даже не дорога. А участок дороги
[10:47.040 --> 10:54.600]  где-то метров 500. Ну на котором можно говорить о каких-то одинаковых характеристиках. Говорить о
[10:54.600 --> 11:01.360]  характеристиках одинаковых в масштабе километров можно конечно для шоссе. Но это в общем для городской
[11:01.360 --> 11:08.280]  дороги не характерно. Проезжаешь 500 метр километр и там уже просто меняется конфигурация сети. И
[11:08.280 --> 11:13.360]  каждое такое изменение, каждый перекресток он в каком-то смысле вершинка. Просто эта вершинка не
[11:13.360 --> 11:18.640]  порождает корреспонденции. Ну то есть бывают вершинки такие вот, которые ничего не порождают,
[11:18.640 --> 11:23.680]  ничего не поглощают. Это нормально. Значит граф более-менее планарный, но мы понимаем что Москва
[11:23.680 --> 11:29.560]  конечно ну не совсем планарная. И развязки на МКАДе например они точно не планарные. Вот эти всякие
[11:29.560 --> 11:34.960]  бабочки. Но это не критично. Это нигде планарность особо не используется. Граф естественно ориентированный,
[11:34.960 --> 11:41.880]  но в этом смысле как бы это тоже не критично. Потому что в большинстве случаев дороги все-таки
[11:41.880 --> 11:48.960]  двухсторонние. Хотя конечно одностороннее движение тоже много где есть. Но так вот если рисовать,
[11:48.960 --> 11:54.800]  то в основном это вот какие-то такие дороги. Вот этого практически нет. Ну оно бессмысленно
[11:54.800 --> 12:03.840]  в нашей модели. Значит граф характеризуется чем? Что у него есть пути. Ну то есть в принципе есть
[12:03.840 --> 12:10.800]  информация о том какие пути в графе разрешены. То есть потому что вообще говоря вот например может
[12:10.800 --> 12:17.720]  быть такая ситуация. И в принципе если ничего не говорю про возможные пути, то можно и вот так
[12:17.720 --> 12:25.600]  поехать и вот так поехать. Ну например вот я знаю перекрестки где в принципе вот так вот ехать нельзя.
[12:25.600 --> 12:32.280]  Вот так вот ехать можно. То есть просто вот это вот ну это редкость. Но бывает так что за счет неких
[12:32.280 --> 12:37.720]  каких-то особенностей, что вот этот вот поворот он просто запрещен. Вот нельзя отсюда сюда сворачивать.
[12:37.720 --> 12:47.520]  Под стоп-знак. Точнее не под стоп-знак, а под кирпич. Вот ехать и получается что надо все-таки
[12:47.520 --> 12:54.040]  прописывать пути которые есть набор ребер. То есть путь это какой-то набор Е. Давайте как-то так
[12:54.040 --> 13:06.640]  сказать ЕП1 ЕП. Не знаю как это обозначить. Сейчас ЕП1 да ЕП не знаю какой-нибудь М. Вот сколько
[13:06.640 --> 13:15.400]  входит ребер в этот путь. И вводим корреспонденции. Корреспонденции вершинки проиндексированы.
[13:15.400 --> 13:22.800]  Каждая вершинка имеет индекс. И вообще говоря для каких-то пар вершин ИЖи, принадлежащих
[13:22.800 --> 13:30.920]  множество ОД, мы можем вводить понятие корреспонденции. Д и Ж. Матрица корреспонденции мы
[13:30.920 --> 13:38.920]  считаем сейчас заданная. Д и Ж это принадлежит ОД. Вот это заданная матрица. То есть по каким-то
[13:38.920 --> 13:45.240]  парам источник сток. У нас есть, ну что это источник, это сток, у нас есть информация. Это вот
[13:45.240 --> 13:53.240]  столько людей из источников сток в единицу времени хочет двигаться. Дальше значит эти люди уже как-то
[13:53.240 --> 13:59.320]  должны распределяться. И мы собственно вводим пути и множество пути отвечающих заданной корреспонденции.
[13:59.320 --> 14:10.680]  По ИЖи множество путей, множество путей отвечающих, отвечающих заданной корреспонденции. Заданной
[14:10.680 --> 14:20.000]  корреспонденции ИЖи. То есть это все такие пути допустимые, которые вот соединяют И с Жи. Вот сколько
[14:20.000 --> 14:26.640]  их тут, ну вот как получится. Вообще говоря, удобно характеризовать вот эти пути вот таким вот,
[14:26.640 --> 14:36.200]  таким вот индексом. 1 если Е принадлежит П и 0 если Е не принадлежит П. Для всех П, принадлежащих П
[14:36.200 --> 14:43.400]  большое множество путей, где П большое есть просто объединение П и Жи. По всем ИЖи прямое объединение
[14:43.400 --> 14:56.880]  П и Жи. По ИЖи принадлежит ОД. То есть вот у нас соответственно есть описание множества путей. Дальше
[14:56.880 --> 15:03.200]  мы говорим, что задача-то собственно заключается в том, чтобы найти вектор Х, который есть вектор
[15:03.200 --> 15:12.280]  распределения потоков по путям. ХП, П принадлежит П большое. Вектор распределения потоков. Сейчас,
[15:12.280 --> 15:21.240]  вектор. Распределение потоков по путям. Распределение потоков по путям. По путям.
[15:21.240 --> 15:27.620]  Значит, этот вектор должен удовлетворять вот таким соотношением. ХП должно равняться Д и Жи,
[15:27.620 --> 15:35.620]  если П принадлежит соответственно П и Жи. И это должно быть верно для любой пары ИЖи,
[15:35.620 --> 15:41.180]  принадлежащего Д. То есть это набор таких симплексов. Но почему симплексов? Потому что
[15:41.180 --> 15:47.380]  естественно ХП не может быть отрицательный. И вот все это множество называется Х большое. Вообще говоря,
[15:47.380 --> 15:54.060]  это множество зависит от Д. Вектора Д, ну точнее матрицы Д, корреспонденции. Но мы ее фиксируем сейчас.
[15:54.060 --> 15:59.820]  Она фиксирована. Поэтому нам сейчас не обязательно учитывать, что есть зависимость от Д. Д замороженная
[15:59.820 --> 16:09.140]  матрица здесь. Она задана. Собственно, задача заключается в том, чтобы найти равновесие. То есть
[16:09.140 --> 16:15.980]  найти такой вектор Х, который описывает, как люди распределятся по этой сети, выполняя условия
[16:15.980 --> 16:22.820]  корреспонденции. Но я пока не описал цель людей. Что они хотят? Они хотят добраться из дома на
[16:22.820 --> 16:28.220]  работу или вот точнее удовлетворить эту корреспонденцию с наименьшими затратами. Чтобы
[16:28.220 --> 16:35.320]  количестве написать эти затраты, мы каждому ребру Е, так обозначается ребро. И естественно Е это
[16:35.320 --> 16:42.540]  из множества вот этого. Мы ставим в соответствии функцию Тау Е от Ф Е. Эти функции по определению
[16:42.540 --> 16:48.380]  считаются монотонно, точнее не убывающими. Не монотонно возрастающими, а монотонно не
[16:48.380 --> 16:55.980]  убывающими. Вот такие функции Тау Е, Ф Е, как функции потока на ребре. Ф Е, поток на ребре Е.
[16:55.980 --> 17:05.960]  Ф Е, поток на ребре Е. На ребре Е. Еще раз повторю, что я уже это говорил на прошлой лекции. Мне как бы
[17:05.960 --> 17:11.180]  неловко, что я это вынужден повторять. Но другого варианта нет, потому что, если я это сейчас не
[17:11.180 --> 17:15.980]  повторю, то у нас получится курс. Начнется с того, что я с места в карьер. Поэтому, что лучше я
[17:15.980 --> 17:23.100]  повторю, ничего криминального в этом не вижу. Может быть, лучше даже как-то это усвоится. Так,
[17:23.100 --> 17:28.980]  что такой поток? Поток на ребре Е. Это просто есть сумма потоков по всем путям, проходящих через
[17:28.980 --> 17:37.660]  заданное ребро. Значит, я должен суммировать потоки ХП по всем путям, которые проходят
[17:37.660 --> 17:45.020]  через заданное ребро. Теперь мы можем вести понятие затрат на пути. Затраты на пути П. Это
[17:45.020 --> 17:56.060]  есть сумма тех затрат на ребрах, входящих в этот путь. То есть, я беру символ кронекера и беру
[17:56.060 --> 18:06.420]  вот затраты, которые сюда входят. Ф Е. Ну, вообще говоря, конечно, если я пишу функцию ТП, то это все
[18:06.420 --> 18:13.260]  таки функция. И мне надо поставить в ней аргумент. Но, чтобы это сделать, мне тогда надо, в общем,
[18:13.260 --> 18:21.300]  понять, от какого аргумента я хочу эту зависимость. И вот мне понадобится эта зависимость от аргумента Х.
[18:21.300 --> 18:30.340]  И, соответственно, ТП от Х будет иметь вот такой вот вид. Ну, посредством того, что Ф Е зависит
[18:30.340 --> 18:40.420]  от Х. Ну, значит, так же, как и раньше, вектор Ф потоков по путям мы обозначаем просто Ф. Ну,
[18:40.420 --> 18:51.820]  и наряду с Х, конечно, важно найти F. Вот. В общем-то, это все, что надо сказать про определение. То есть,
[18:51.820 --> 18:59.020]  в общем, это есть описание задачи. Теперь, собственно, математическая такая сердцевина,
[18:59.020 --> 19:05.140]  теоретика игровая. А что водители-то делают? Они убирают кратчайший путь. Ну, то есть,
[19:05.900 --> 19:15.180]  это формализуется таким образом, что надо найти. Ну, двумя способами можно описать. Первый способ.
[19:15.180 --> 19:27.460]  Значит, водители выбирают кратчайший путь. Это означает, что если ХП для любого П,
[19:27.460 --> 19:39.340]  значит, условия, дополняющие нежесткости. Нежесткости еще иногда его называют нелинейной
[19:39.340 --> 19:47.420]  комплементарностью. Нелинейной комплементарностью. Вот. Оно выглядит таким образом. Для любого П,
[19:47.420 --> 19:54.780]  точнее так, для любой корреспонденции ИЖи, принадлежащей множеству корреспонденций ОД,
[19:55.340 --> 20:01.340]  Origin Destination. Это просто какой-то набор пар. Потенциальные это могут быть вообще все возможные,
[20:01.340 --> 20:09.460]  значит, это из множества В и это из множества В. То есть, на прямом произведении В, на самого
[20:09.460 --> 20:18.060]  себя мы задаем какой-то набор пар. И вообще говоря, он может быть сильно разрежен, потому что далеко
[20:18.060 --> 20:23.780]  не из каждого перекрестка в каждой есть какая-то корреспонденция. Потому что корреспонденции
[20:23.780 --> 20:28.540]  порождены все-таки жилыми районами. Вот. Так вот, для любой корреспонденции и любого пути,
[20:28.540 --> 20:38.020]  отвечающий этому набору этой корреспонденции, должно выполняться следующее, что xp умножить на
[20:38.020 --> 20:52.580]  tp от x минус минимум по q из всех путей, отвечающих вот этому tq от x должно равняться ную. И это вот
[20:52.580 --> 21:03.620]  x будет тогда равновесием. То есть, xp от x равновесие x с звездой равновесие. Вот если это выполняется,
[21:03.620 --> 21:15.380]  равновесие. То есть, если выполняется вот такое условие, то есть, что либо по этому пути никто
[21:15.380 --> 21:24.660]  не едет xp 0, либо этот путь, если по нему кто-то едет, он обязан быть кратчайшим. Почему? Потому
[21:24.660 --> 21:32.380]  что если эта штука 0, если эта штука 0, это что означает? Это означает, что p находится, то есть,
[21:32.380 --> 21:39.460]  он один из минимайзеров. То есть, он один из тех путей, на котором достигается кратчайший путь. И
[21:39.460 --> 21:45.380]  тогда по этому пути кто-то может ехать. А если этот путь не кратчайший, то есть, это больше нуля,
[21:45.380 --> 21:49.620]  то поскольку это должно равняться нулю, то это неизбежно равняется нулю. То есть, по этому пути
[21:49.620 --> 21:58.500]  никто ехать не должен. И вот мы с вами на прошлой лекции занимались тем, что думали,
[21:58.500 --> 22:05.220]  как эту задачу переписать по-человечески. Потому что найти решение вот этой задачи
[22:05.220 --> 22:09.660]  нелинейной комплементарности, в которой, собственно, и сидит поиск равновесия. То есть,
[22:09.660 --> 22:15.300]  если мы найдем x со звездой, удовлетворяющий системе нелинейных уравнений и уравнений здесь
[22:15.300 --> 22:23.500]  стока, сколько путей, то как бы мы найдем все эти потоки на путях. Но это как бы так никто не
[22:23.500 --> 22:28.860]  делает. Это невозможно сделать в любой такой практичной ситуации. И не только потому,
[22:28.860 --> 22:34.260]  что число путей экспоненциально большое типично. То есть, вот возьмите какую-нибудь Манхэттенскую
[22:34.260 --> 22:39.700]  сеть. Я уже про это говорил на прошлой лекции, но это несложно повторить. Возьмите точку старта,
[22:39.700 --> 22:46.380]  точку финиша. И все. Ограничитесь одним источником с током, то есть одной корреспонденцией. И
[22:46.380 --> 22:53.500]  посчитайте число путей, которые ведут вот отсюда, вот сюда. И по числу ребер это будет как бы
[22:53.500 --> 22:58.340]  экспоненциально с точностью до излечения корня в показатель экспонента и величина. То есть,
[22:58.340 --> 23:05.380]  число путей есть экспонента от линейного размера вот этого квадрата. Ну и с точностью
[23:05.380 --> 23:09.780]  некоторого полиномиального фактора. То есть для нас интересен экспоненциальный фактор. И
[23:09.780 --> 23:15.180]  естественно это экспоненциально растет от линейного размера вот этого квадрата. Ну то есть,
[23:15.180 --> 23:22.100]  число путей может быть экспоненциально больше числа ребер. И нереально решать задачу в таких
[23:22.100 --> 23:28.220]  размерностях. Но даже нет проблемы. Это как бы можно довольствоваться, например, как-то пытаться
[23:28.220 --> 23:34.060]  найти чисто f. И тогда это будет разумная задача в размерности 10 в пятый. Это уже такие задачи
[23:34.060 --> 23:40.820]  можно решать, если бы эта задача была хорошая. Но в таком виде эта задача просто найти решение
[23:40.820 --> 23:45.660]  системы нелинейных уравнений. Это нехорошая задача в общем случае. Не очень понятно как ее решать.
[23:45.660 --> 23:53.780]  И как следствие вот стали думать, ну поскольку это важная задача, надо решать. Стали думать о том,
[23:53.780 --> 24:02.020]  как такие задачи решать. И вот удалось обнаружить, что на самом деле эта задача сводится к задаче
[24:02.020 --> 24:10.740]  выпуклой оптимизации. За счет того, что функция tp от x, вот векторное поле, если даже точнее говорить,
[24:10.740 --> 24:17.140]  tp от x, это потенциальное векторное поле. То есть существует такая функция скалярного аргумента,
[24:17.140 --> 24:26.620]  которая есть сумма стигма e значит fe от x. Сейчас я напишу, что это такое. Где sigma e fe от x,
[24:26.620 --> 24:37.060]  sigma e от f просто напишу. Это есть интеграл от нуля до f, tau e от z dz. То есть существует вот функция.
[24:37.060 --> 24:46.500]  Градиент мы это в прошлый раз делали, ну в данном случае производная, который порождает вот tp от x,
[24:46.500 --> 24:55.020]  dx dx dp dx p по x равняется tp от x. Вот. И мы с вами в прошлый раз,
[24:55.020 --> 25:01.040]  пользуясь потенциальностью векторного поля, а это вообще является следствием того,
[25:01.040 --> 25:08.400]  что это игра. Вот это игра, потенциальная игра загрузки. То есть что затраты на ребре определяются
[25:08.400 --> 25:13.880]  потоком, чисто на этом ребре. И например, не зависит от потока на пересекающем его
[25:13.880 --> 25:24.440]  а вообще, говоря, в жизни все сложнее. Если это нерегулируемый перекресток и вы хотите его пересечь,
[25:24.440 --> 25:31.200]  для того, чтобы это сделать, надо, я не знаю, давайте вот в эту сторону стрелку нарисую и вот туда поехать,
[25:31.200 --> 25:36.320]  то вам надо повернуть налево, но для этого вы должны пропустить, у вас не главная дорога,
[25:36.320 --> 25:44.080]  ну по умолчанию, как бы, помеха, то есть это вот главная дорога, вам надо все это пропускать и
[25:44.080 --> 25:49.360]  только когда образуется коридор, вы поворачиваете. Ясно, что от интенсивности движения по вот этому
[25:49.360 --> 25:55.480]  направлению зависит пропускная способность вашей дороги, поэтому все сложнее, но в большинстве моделей
[25:55.480 --> 26:02.640]  все-таки-то такие вещи стараются не учитывать, уж это довольно сложно уже как бы решать такие
[26:02.640 --> 26:08.040]  задачи. Вот, в целом, в простейшем предположении, что затраты на ребре определяются потоком
[26:08.040 --> 26:14.240]  непосредственно только на этом ребре, мы можем найти такую функцию, это проверяется просто из
[26:14.240 --> 26:23.440]  определения, из определения я должен подставить fe от x вот сюда, вот сюда, ну и продеференцировать,
[26:23.440 --> 26:33.520]  и просто в одну строчку это делается. И вот оказывается, что условие дополняющей нежедкости,
[26:33.520 --> 26:49.720]  которое я выписал, вот оно, равносильно условию, что функция psi от x достигает минимума на множестве
[26:50.600 --> 26:56.640]  вот так вот. То есть это просто условие минимума этой функции. Вот на этом множестве я тут д
[26:56.640 --> 27:10.320]  писать не буду. Ну и чтобы это показать, мы взяли какую-то точку, просто решение x со звездой,
[27:10.320 --> 27:17.480]  вот, и стали рассуждать от противного. Здесь значит xp, здесь xq, и пускай они принадлежат одной
[27:17.480 --> 27:23.520]  xp больше нуля, и пускай они принадлежат одной корреспонденции, принадлежат, точнее пути
[27:23.520 --> 27:35.720]  p и q, p и q принадлежат одной как бы корреспонденции, это важно. И дальше предположив, что вообще говоря,
[27:35.720 --> 27:44.000]  вот эти задачи, ну там две стороны надо делать, я рассказывал одну сторону, что эти задачи не одно
[27:44.000 --> 27:49.840]  и то же. Мы давайте придем к противоречию. Итак, вот пускай xp больше нуля, xp больше нуля,
[27:49.840 --> 28:01.560]  и соответственно, значит, покажем, что да, и выполняется вот это условие. Ну и мы что сделали,
[28:01.560 --> 28:12.880]  мы попробуем прийти к противоречию, что значит, сейчас я забыл, там мы говорили, что если то условие
[28:12.880 --> 28:20.040]  не выполняется, вот так мы говорили, да, то есть допустим, что вот то условие не выполняется,
[28:20.040 --> 28:26.640]  то есть вот это неверно. Мы напишем, что значит, что это неверно. И значит, существует такое p,
[28:26.640 --> 28:40.240]  для которого там вот нарушается. Вот мы это p взяли, и дальше мы для этого p, значит, просто
[28:40.240 --> 28:47.800]  перебросили, если это xp больше нуля, вот в этом определении, мы можем перебросить с него на xq немножко,
[28:47.800 --> 28:53.360]  то есть сохраняя условия корреспонденции, потому что они на одной корреспонденции. Мы чуть-чуть
[28:53.360 --> 28:58.760]  взяли от xp и перебросили сюда. Из-за того, что мы взяли чуть-чуть, у нас приращение функции
[28:58.760 --> 29:04.720]  определяется первыми производными, то есть нам нет необходимости использовать ряд tlora там до второго,
[29:04.720 --> 29:11.200]  до третьего порядка включить, но мы как бы берем приращение функции, если два аргумента поменяются,
[29:11.200 --> 29:17.800]  аргумент xp и xq. Причем меняются они соразмерно, то есть так, что xp плюс xq в сумме константа,
[29:17.800 --> 29:24.880]  то есть столько, насколько уменьшили xp, настолько увеличилась xq. Вот дальше показывается, что если это
[29:24.880 --> 29:31.560]  не выполняется, то мы можем найти лучшую точку минимума, чем x звездой, то есть уменьшить еще
[29:31.560 --> 29:36.520]  значение функции по сравнению с тем, что было в этой точке. Поэтому мы приходим к противоречию с тем,
[29:36.520 --> 29:42.320]  что xp больше нуля, то есть если p не кратчайший путь, то xp должно быть больше нуля. Вот о чем эта
[29:42.320 --> 29:48.960]  формула, что если xp больше нуля, то это кратчайший путь, если это не кратчайший путь, то xp ноль. Допустим не так,
[29:48.960 --> 29:57.160]  вот xp значит больше нуля, но это не кратчайший путь, xq кратчайший путь. Ну так давайте перекинем с
[29:57.160 --> 30:05.080]  этого пути на кратчайший путь и поймем, что с точки зрения этого функционала станет лучше. Эта игра идет
[30:05.080 --> 30:09.680]  за счет того, что когда мы будем считать проращение функционала, мы будем как раз пользоваться вот этой
[30:09.680 --> 30:16.200]  вот формулой, и вот поэтому и возникает понятие связь кратчайшего пути и вот, так сказать,
[30:16.200 --> 30:21.520]  прощение этой функции. Это то, что было в прошлый раз, я прошу прощения, что скороговоркой, потому что в
[30:21.520 --> 30:27.240]  принципе те, кто присутствует в аудитории, все это уже слышали. А теперь сегодня мне хотелось бы
[30:27.240 --> 30:32.360]  другой путь показать, я надеюсь, что я все-таки успею еще и про платные дороги вам рассказать.
[30:32.360 --> 30:40.320]  Другой путь, я собственно независимо сейчас еще раз выведу ту самую постановку задачи, вот эту,
[30:40.320 --> 30:46.320]  точнее ну как задачи оптимизации, но двойственным образом. То есть я как бы не буду строить двойственную
[30:46.320 --> 30:53.240]  задачу вот к этой, а выпишу готовый ответ, но выведу его содержательно. Вот чтобы вывести его
[30:53.240 --> 31:01.680]  содержательно, мне понадобится немного другое описание того, что такое путь кратчайший. Для этого
[31:01.680 --> 31:13.320]  давайте сделаем следующее. Для этого мы ведем затраты ТЕ на прохождение ребра Е. Какие-то затраты
[31:13.320 --> 31:19.960]  будут, но очень просто, по определению. У нас же введены функции ТАУЕ, были где-то вот ТАУЕ от
[31:19.960 --> 31:30.200]  ФЕ. Ну значит ТЕ это равняется ТАУЕ от ФЕ. Вот и все. Замечательно. Ну можно даже написать,
[31:30.200 --> 31:36.240]  вот поскольку мы ввели функции СИГМАЕ, можно даже написать так, что это есть СИГМАЕ штрих от ФЕ.
[31:36.240 --> 31:41.960]  Ну вот что нам известно. То есть нам известно, что затраты на прохождение того или иного ребра,
[31:41.960 --> 31:47.600]  но это есть какие-то функции, временные затраты, это есть какие-то функции от потоков. Это как бы
[31:47.600 --> 31:54.600]  с одной стороны. Это просто вот я записал одно из условий модели. Вообще то, что рассказываю,
[31:54.600 --> 32:00.760]  это как методология. Вот полезно ее применять вообще не только в этом контексте. И почему я сейчас
[32:00.760 --> 32:05.880]  про это говорю? Потому что эта же методология позволит нам в будущем более сложную задачу решить,
[32:05.880 --> 32:11.920]  которая связана с поиском рановесия многостадийной модели. Обратите внимание на методологию. Так вот,
[32:11.920 --> 32:17.200]  это как бы формализовали просто одну связь. Давайте вторую связь формализуем. Условия
[32:17.200 --> 32:31.400]  рациональности кратчайших путей. Эта связь выглядит таким образом, что поток по тому
[32:31.400 --> 32:42.080]  или иному ребру определяется чем? Он определяется соответственно потоками. То есть вектор потока
[32:42.080 --> 32:53.440]  по ребру. Это есть сумма deltaEP на xp. Вот это мы с вами выше писали. Ну и можно написать,
[32:53.440 --> 32:59.640]  что этот вектор должен принадлежать супер дифференциалу, ну или по сути дифференциалу из
[32:59.640 --> 33:07.400]  точки гладкости. Вот такой вот штуке. Сумма Dежитых на Tежитая от T. Я сейчас должен пояснить,
[33:07.400 --> 33:13.560]  что такое Tежитая от T. Иначе это будет непонятно. Что это такая формула? Откуда она возникла?
[33:13.560 --> 33:20.440]  Значит сумма по всем EG принадлежащим ОД. Вот то, что я написал сейчас, это как бы синонимично тому,
[33:20.440 --> 33:28.800]  что водители рациональные. Значит вот эта штука, это есть минимум по всем путям P
[33:29.080 --> 33:38.200]  принадлежащим P и G от соответственно затрат, которые мы несем проходя тот или иной путь. А какие
[33:38.200 --> 33:44.760]  затраты мы несем проходя тот или иной путь? Ну понятно, что это вот такие затраты. По всем E,
[33:44.760 --> 34:02.320]  принадлежащим. Да нет, просто по всем E. Мы суммируем затраты, которые входят в данный путь.
[34:02.320 --> 34:11.920]  Вот и соответственно эта функция, она минимум из функций двух. Вот у меня одна функция линейная,
[34:12.520 --> 34:17.280]  вот у меня другая функция линейная. Смотрите, одна линияная функция, другая линияная
[34:17.280 --> 34:26.180]  функция. Минимум из этих функций, это что такое будет? Это будет вот такая функция. Это вогнутая
[34:26.180 --> 34:35.800]  функция. То есть минимум в данном случае из линейных фунций, это вогнутая функция. Ну понятно,
[34:35.800 --> 34:41.520]  что на самом деле, в общем случае, если я беру вогнутую функцию и беру еще одну вогнутую функцию,
[34:41.520 --> 34:47.400]  беру из них минимум, то я тоже получу вогнутую функцию. Поэтому я могу обобщить, сказать, что
[34:47.400 --> 34:53.280]  минимум вогнутой функции вогнутая функция. Но для вогнутой функции, которая негладкая, понятие
[34:53.280 --> 34:59.680]  градиент обобщается на понятие не sup-дифференциал, а super-дифференциал. Поэтому этот значок надо
[34:59.680 --> 35:05.960]  понимать как super-дифференциал, но по сути это то же самое, что с модулем x. То есть модуль x в нуле
[35:05.960 --> 35:13.980]  имеет как бы вот производные, непонятно какие, да, то есть что это за производное будет. Вот от
[35:13.980 --> 35:18.560]  минуса единицы до единицы все меняется. Но этот отрезок минуса один-один, он называется
[35:18.560 --> 35:24.480]  sub-градиентом. И почему именно этот отрезок выбирается? Да потому что это любая прямая с
[35:24.480 --> 35:30.320]  таким наклоном от минуса единицы до единицы будет опорной гиперплоскостью, так называемой. То есть
[35:30.320 --> 35:35.800]  график функции будет лежать по одну сторону от этой прямой. Это очень важное свойство, которое
[35:35.800 --> 35:41.440]  в анализе используется. И, собственно, аналогично можно картинку на 180 градусов повернуть и говорить
[35:41.440 --> 35:46.800]  о super-дифференциалах. То есть, по сути, о тех же векторах, которые обладают свойством вот этих
[35:46.800 --> 35:54.760]  построений, касающихся гиперплоскостей к этому нот графику. Ладно, это сейчас технический момент,
[35:54.760 --> 36:04.560]  это просто некий элемент выпуклого анализа. Вот, собственно, дальше мы как бы говорим следующее,
[36:04.560 --> 36:10.200]  что если у нас есть, ну давайте для простоты, только одна корреспонденция, только одна
[36:10.200 --> 36:23.520]  корреспонденция, то этот поток, ну просто, вот корочайший путь, вот у вас граф и вот какой-то
[36:23.520 --> 36:29.440]  корочайший путь. Есть много других путей, ну а по ним никто не едет. У нас вот одна корреспонденция,
[36:29.440 --> 36:35.040]  ну так сказать для простоты, вот я сейчас считаю, что одна корреспонденция и живет, как правило,
[36:35.040 --> 36:40.600]  настигается на каком-то одном пути, не обязательно, но может на нескольких путях, сейчас это не очень
[36:40.600 --> 36:45.520]  принципиально, но давайте вот конкретно на каком-то пути достигается. Дальше вопрос, а как посчитать,
[36:45.520 --> 36:54.360]  соответственно, как посчитать, ну соответствующий вектор потоков? Ну очень просто, давайте просто
[36:54.360 --> 37:01.040]  посмотрим, а на каких ребрах достигается, если есть одна корреспонденция, на каких ребрах
[37:01.040 --> 37:08.120]  корочайший путь реализуется? Если ребро ТЕ входит в этот корочайший путь, значит соответствующая
[37:08.120 --> 37:14.960]  производная по ТЕ будет равняться единице, и поскольку у меня корреспонденция ДЕЖ, то есть у меня весь
[37:14.960 --> 37:19.800]  поток, вот он так идет, то я, то я соответственно должен просто сказать, что поток через это ребро,
[37:19.800 --> 37:25.240]  если производная не ноль, то есть это ребро входит в корочайший путь, значит тут будет единичка, и
[37:25.240 --> 37:31.400]  вся эта единичка умножается на ДЕЖ, то есть весь поток ДЕЖ, который хочет ехать, он просто пойдет по
[37:31.400 --> 37:36.720]  вот этим ребрам, и действительно поток на этих ребрах, которые входят в корочайший путь, и по
[37:36.720 --> 37:44.880]  которым производная не ноль, будет равняться ДЕЖ. Ну понятно, что ситуация, когда у вас несколько
[37:44.880 --> 37:53.040]  корочайших путей, вот два корочайших пути, она сложнее, потому что у вас как бы получается,
[37:53.040 --> 38:00.840]  что вы можете, как объяснить, то есть у вас два корочайших пути для заданного вектора затрат,
[38:00.840 --> 38:10.640]  и вы можете в принципе, как бы это объяснить, потоки распределить так, что соответственно все поедет
[38:10.640 --> 38:16.240]  здесь, все поедет здесь, или какая-то выпуклая комбинация, но вот это и есть, вот это отражается
[38:16.240 --> 38:24.160]  вот в этом вот, что супер дифференциал, это на самом деле есть какие-то вот, так сказать,
[38:24.160 --> 38:29.520]  крайние точки, дальше любая выпуклая комбинация, вот как в случае модуля х, вы имеете вот этот
[38:29.520 --> 38:36.400]  вектор, вот этот вектор, ну и любой вектор из этого суб дифференциала, он есть выпуклая комбинация
[38:36.400 --> 38:42.960]  вот этих двух крайних, вот, и вот роли этих крайних векторов будут играть, собственно, вот эти маршруты,
[38:43.160 --> 38:47.960]  сколько этих векторов будет? Ну, вот определяет сколько этих корочайших маршрутов, на которых
[38:47.960 --> 38:53.760]  одинаковые затраты, но как бы понять этот результат, я думаю, можно проще всего, если вы будете
[38:53.760 --> 39:00.920]  считать, что у нас один корочайший маршрут, и тогда понятно, что те ребра, и только те, которые входят
[39:00.920 --> 39:06.120]  в этот корочайший маршрут, они будут входить в этот вектор, то есть он будет состоять, вектор
[39:06.120 --> 39:12.740]  производных будут состоять просто можно дж вынести и нолики единички единички будут стоять только на тех местах
[39:13.260 --> 39:18.920]  ну которые отвечают к кратчайшему пути вот а если у вас их много корреспонденции то
[39:19.380 --> 39:25.900]  соответствующая корреспонденция будут вот так они распределяться и дальше суммироваться и вносить общий вклад ну а если в свою очередь
[39:26.380 --> 39:28.380]  у вас еще для задной корреспонденции
[39:29.620 --> 39:33.820]  несколько кратчайших путей то внутри вот этих кратчайших путей
[39:34.760 --> 39:36.760]  поток в принципе
[39:37.480 --> 39:39.480]  ну во всяком случае
[39:39.480 --> 39:42.520]  то сказать чисто формально вот можно брать
[39:43.240 --> 39:45.240]  любой элемент
[39:45.720 --> 39:48.120]  суб дифференциала то есть это условие будет выполняться потому что
[39:48.440 --> 39:53.960]  сейчас это то есть я понимаю вы можете сказать что ну так не работает то есть если все поедут по одному пути
[39:54.200 --> 39:59.820]  затраты поменяются на эту же вопрос другому месту это вопрос состыковки этих двух моделей то есть
[40:00.120 --> 40:04.720]  формально вот в этом месте т зафиксированы и я не учитываю обратную связь
[40:05.040 --> 40:11.880]  если я весь поток пущу по одному ребру по одному пути то это поменяет и да это вот поменяет и это вот в этом месте
[40:12.120 --> 40:18.280]  сидит но меня то сейчас я изучаю только этот переход и в этом переходе т заморожено то есть
[40:18.720 --> 40:21.800]  проще говоря у меня есть как бы два
[40:22.720 --> 40:25.440]  два таких то сказать перехода что т
[40:26.600 --> 40:28.120]  порождает f
[40:28.180 --> 40:30.180]  согласно формуле
[40:30.460 --> 40:31.420]  значит
[40:31.420 --> 40:33.420]  т е равняется
[40:33.580 --> 40:38.180]  стигма е штрихов е да а с другой стороны с другой стороны
[40:39.020 --> 40:41.020]  f порождает t
[40:41.020 --> 40:43.020]  правильно вот смотри час будет очень красиво
[40:43.780 --> 40:48.900]  как говорила говорит о огородский учиться катарсис ну должен случиться катарсис а
[40:49.380 --> 40:51.900]  это формула вот такая f точнее
[40:52.480 --> 40:57.980]  ну я неправильно и писала это не фе и я кстати вот плохо что никто не поправил f вектор
[40:58.120 --> 41:05.720]  потому что а как бы ей это значит был здесь эту компоненту написать вот тут просто вектор потому что это тоже вектор а
[41:06.000 --> 41:07.640]  е-тоя компонента
[41:07.640 --> 41:15.020]  она как бы ну я проводила рассуждение говоря что вот соответственно если теста ходит то значит здесь будет стоять
[41:15.020 --> 41:22.420]  Ну, соответственно, при взятии супер дифференциала будет стоять единичка, потому что зависит от ТЕ.
[41:22.420 --> 41:29.820]  Ну, то есть, минимум, что такое минимум? Просто подставляется кратчайший путь. Вот и все,
[41:29.820 --> 41:34.340]  а это зачеркивается. Вот что такое минимум. Подставляется кратчайший путь. Если в кратчайшем
[41:34.340 --> 41:39.380]  пути это единичка, то понятно, что он будет входить. Все остальное я забываю. То есть,
[41:39.380 --> 41:46.500]  как бы объяснить. Вы берете минимум. Если минимум достигается только при одном П со звездой,
[41:46.500 --> 41:51.740]  я этот минимум зачеркиваю и просто его дифференцирую. Вот у меня и получается
[41:51.740 --> 41:56.420]  производная по ТЕ. Там будут векторы из нулей единички, единички будут только там, где вот это вот.
[41:56.420 --> 42:02.340]  Если минимум достигается на нескольких П, то как бы я могу дифференцировать и то, и другое,
[42:02.340 --> 42:07.060]  и вот так же, как с модулем Х. То есть, одна линейная функция пересекается с другой.
[42:07.060 --> 42:14.140]  Минимум из них. Модуль Х это минимум из х-х. Вот аналогичная ситуация здесь. То есть,
[42:14.140 --> 42:18.780]  если минимум достигается на нескольких, то я как бы должен брать и отсюда производную,
[42:18.780 --> 42:24.460]  отсюда и уже комбинировать. Ну что делать. Ладно, это просто полезно. Вот зачем вы
[42:24.460 --> 42:29.860]  поклонались, нужен в жизни. А сейчас самое красивое. Итак, я по Т порождаю F согласно
[42:29.860 --> 42:37.100]  модели вот этой вот. А потом по F порождаю T согласно модели второму переходу. Значит,
[42:37.100 --> 42:44.460]  это условие, это значит физика процесса, физика, а это экономика. Экономика. Это принцип Нэша.
[42:44.460 --> 42:50.060]  Принцип Нэша вардропа. То есть, физика заключается в том, что у нас есть некоторая зависимость.
[42:50.060 --> 42:55.220]  Но помните безопасное расстояние, там вот это все. Вот эта физика определяет, что водители,
[42:55.220 --> 43:01.900]  вообще говоря, ну как бы сказать, стараются держать безопасное расстояние, если скорость
[43:01.900 --> 43:06.980]  высокая, они стараются его держать побольше. Ну и вот тут это отражено в этой зависимости. А вот это
[43:06.980 --> 43:12.740]  просто рациональности участников движения, что кратчайший путь каждый выбирает. И вот как это
[43:12.740 --> 43:19.220]  отражается на связи вектора потока с T. Но проблема в том, что T не понятно, что такое здесь. То есть,
[43:19.220 --> 43:25.020]  T заморожен. Но зато понятно, что такое T здесь. T выражается через F. Итак, нам надо найти неподвижную
[43:25.020 --> 43:31.860]  точку, где F, соответственно, есть ну вот элемент супер дифференциала вот этой вот штуки.
[43:31.860 --> 43:40.820]  D, J, T. D, J, T от T. Вот. И J принадлежит от D. Такая оптимизация в действии. Вот что бы вы делали,
[43:40.820 --> 43:50.260]  чтобы найти эту неподвижную точку? Вот что бы вы делали? Да, да, да, да. А если вы знаете,
[43:50.260 --> 43:59.740]  выпукла анализ, что бы вы делали? Это если вы знаете анализ данных, вы бы так делали. А я говорю
[43:59.740 --> 44:05.180]  именно оптимизацию. Если вы знаете оптимизацию, вы бы подумали, вот, наверное, о чем. А можно
[44:05.180 --> 44:16.500]  придумать такую задачу, такую задачу, которая бы как бы давала вам вот это вот как условия
[44:16.500 --> 44:21.660]  минимума. То есть можно ли придумать задачу, например, по T так, чтобы вот эти два условия,
[44:21.660 --> 44:27.180]  они как бы были связаны с этой задачей. Решение этой задачи оптимизации давало бы неподвижную
[44:27.180 --> 44:33.460]  точку вот этого перехода. Давайте пофантазируем. Вот давайте просто возьмем задачу вот такую.
[44:33.460 --> 44:41.340]  Стума D, J, T. D, J, T от T. Ну то есть я просто пишу то, что здесь написано. То есть просто обратите
[44:41.340 --> 44:48.900]  внимание, здесь дифференциал и здесь дифференциал. Совпадение, не думаю, это не совпадение. Это так
[44:48.900 --> 44:56.220]  специально подбиралось. И мы сейчас это с вами, значит, поймем. И давайте здесь введем функцию
[44:56.220 --> 45:08.140]  sigma e со звездой te. Что это такое за функция? Ну, чтобы понять, что это такое за функция, надо
[45:08.140 --> 45:13.780]  инвертировать зависимость. Вот эту зависимость хочется инвертировать. Ее можно инвертировать.
[45:13.780 --> 45:20.700]  Написать, что f e равняется, ну давайте просто так введем такое обозначение sigma e со звездой
[45:20.700 --> 45:26.060]  от te. Вот так. На самом деле это действительно сопряженная функция, но просто я сейчас написал,
[45:26.060 --> 45:34.060]  что f e равняется, вот как бы инвертировал эту зависимость. Ну сейчас я немножко неаккуратно
[45:34.060 --> 45:45.580]  сказал, мне надо это будет как бы... Вот я думаю, я сейчас это просто поясню немножко более аккуратно,
[45:45.580 --> 45:49.820]  так будет понятнее. То есть сейчас тороплюсь, потому что у меня времени немного остается, хочу успеть.
[45:49.820 --> 45:55.580]  Ладно, не будем торопиться, а то запутаюсь и вас запутаю. Значит, давайте я такую задачу напишу,
[45:55.580 --> 46:10.300]  которую написал. Е принадлежит вот так. Ну задача на максимум. На максимум по te. Ну как
[46:10.300 --> 46:16.220]  будет выглядеть условие максимума в этой задаче, если просто на тему ничего не накладываем. Ну
[46:16.220 --> 46:25.660]  значит надо взять производную и просто приравнять нулю, правильно? То есть не производная, а суп
[46:25.660 --> 46:35.900]  дифференциал, супер дифференциал. Значит d от суммы значит d изжитая, t изжитая от t. То есть
[46:35.900 --> 46:48.300]  вот уже что-то знакомое. Изжитая значит od. Ну и здесь равняется сумма фигма e со звездой штрих
[46:48.300 --> 47:00.140]  на te. Ну e принадлежит e. Давайте как бы посмотрим, что нам предписывают два условия, которые написаны,
[47:00.140 --> 47:08.220]  которые написаны были ниже. Эти два условия предписывают, что вот f должно равняться вот этому.
[47:08.220 --> 47:16.580]  Ну значит я могу сказать, что вот этой f, какой это f. С другой стороны, с другой стороны вот эта вот
[47:16.580 --> 47:28.820]  штука. Она, значит, как бы можно так написать. Можно написать, что fe, давайте вот последовательно,
[47:28.820 --> 47:39.300]  это есть стигма e штрих в минус 1 как бы от te. Вот так да? Стигма e штрих в минус 1 от te. Ну обратная
[47:39.300 --> 47:45.940]  функция, я не знаю как это красиво написать. Вот сейчас она как-то. И тогда я могу тут написать,
[47:45.940 --> 47:58.420]  что если вот вот эта функция, вот эта функция. Сигма e со звездой штрих от te равняется, если
[47:58.420 --> 48:12.980]  равняется вот тому, что там написано. Сигма e штрих минус первое от te. Вот если это верно, то
[48:12.980 --> 48:24.060]  решение вот этой задачи, решение-свездочка, то решение-задача-звездочка, решение-звездочка
[48:24.060 --> 48:35.020]  совпадает с неподвижной точкой. Совпадает, совпадает, совпадает с неподвижной точкой. Это,
[48:35.020 --> 48:41.140]  вообще говоря, вот так задумываться очень-очень интересная конструкция. То есть я пока еще не
[48:41.140 --> 48:48.860]  решил проблему. Я как бы сказал, что давайте придумаем такую задачу выпуклой оптимизации,
[48:48.860 --> 48:58.460]  вогнутой максимизации, которая бы вот эти два условия на неподвижную точку. То есть как бы
[48:58.460 --> 49:03.740]  ясно, что это два уравнения на две группы переменных. И как-то их надо разрешать. И вот
[49:03.740 --> 49:09.700]  хочется придумать такую задачу, пользуясь некой потенциальностью этих уравнений, что вот тут te
[49:09.700 --> 49:14.460]  равняется градиенту некоторого поля, а тут f равняется ну не градиенту, но суб дифференциалу
[49:14.460 --> 49:21.860]  некоторого скалярного поля. То есть хочется, здесь тоже скалярное можно написать, то есть как бы
[49:21.860 --> 49:30.580]  t есть градиент значит вот этой вот функции сумма sigma e. Так вот, как бы если нам удастся подобрать,
[49:30.580 --> 49:38.020]  если нам удастся подобрать такую функцию, что вот это верно sigma со звездой, то, ну так собственно
[49:38.020 --> 49:43.300]  можно так и делать. Такую функцию можно sigma e со звездой так и взять. Просто это неудобно,
[49:43.300 --> 49:52.260]  то есть неудобно так работать, что такое sigma с штрих минус первое. Вот, ну то есть это как бы,
[49:52.260 --> 49:58.260]  ну это tau минус первое по сути, да, то есть это вот обратная функция от tau, она монотонная. Но
[49:58.260 --> 50:03.740]  хотелось бы как-то более изящно эту функцию выписать. И тогда проблема решится, то есть тогда мы
[50:03.740 --> 50:10.980]  действительно получим задачу вогнутой оптимизации в пространстве t. Решение t задачи порождает t,
[50:10.980 --> 50:19.860]  t порождает f, ну и как оказывается, когда мы порождаем f по этой формуле, мы автоматически находим
[50:19.860 --> 50:27.860]  кратчайшие пути, потому что значит знание f однозначно определяет, вообще говорят, что тут как бы,
[50:27.860 --> 50:33.740]  как оно получается, какие пути, то есть просто сама процедура. Сама процедура решения этой задачи
[50:33.740 --> 50:40.340]  предполагает вычисления субградиента вот этой штуки. Ну и там, где этот субградиент каждого
[50:40.340 --> 50:46.820]  отдельного слагаемого по ежи имеет 0 единицы, вот это и будет ребра входящие в кратчайший путь. То есть
[50:46.820 --> 50:52.300]  мы кратчайший путь автоматически вытаскиваем вот отсюда. Нам не надо решать задачу в пространстве
[50:52.300 --> 50:59.300]  всех путей, мы решаем задачу в пространстве числа ребер. И вот за счет того, что все сидит,
[50:59.300 --> 51:05.540]  вся экспоненциальность сидит вот здесь, а здесь работает дейкстра, а дейкстра умнее действует,
[51:05.540 --> 51:13.100]  он не перебирает вот этот минимум по экспоненциальному числу вариантов. Дейкстра не
[51:13.100 --> 51:17.500]  перебирает экспоненциальное число маршрутов, он находит кратчайший маршрут как бы хитро,
[51:17.500 --> 51:22.980]  это называется линейный минимизационный аракул. То есть решить задачу скалярное произведение
[51:22.980 --> 51:31.420]  набора вектора какой-то дельта, давайте назовем его p на t, вот эта задача, казалось бы, она
[51:31.420 --> 51:38.940]  очень большая, потому что надо искать минимум по всем путям и просто надо реально читать скалярные
[51:38.940 --> 51:43.020]  произведения, если вы на это смотрели как оптимизатор, но если вы специалист по компьютеру
[51:43.020 --> 51:47.020]  science, вы не будете так на эту задачу смотреть, вы будете смотреть на нее с помощью дейкстра,
[51:47.020 --> 51:52.700]  и это дает возможность убить эту колоссальную размерность, но осталось понять, что все-таки это
[51:52.700 --> 51:59.260]  за функция такая, потому что sigma штрих e-1 это как-то некрасиво. Для этого я вожу вот такую
[51:59.260 --> 52:05.900]  функцию sigma со звездой от e, которая определяется как сопряженная функция ко f e, то есть эта
[52:05.900 --> 52:16.220]  функция есть максимум от t e f e минус sigma e f e, вот такая вот функция. И давайте поймем, что
[52:16.220 --> 52:22.020]  действительно эта функция удовлетворяет нужному свойству, то есть это сопряженная функция к функции
[52:22.020 --> 52:28.060]  sigma e f e, то есть я обозначение не случайно выбрал. Давайте найдем производную этой функции по t e,
[52:28.060 --> 52:37.460]  значит sigma штрих sigma e с звездой штрих от t e, значит это формула Демьянова-Данскина,
[52:37.460 --> 52:44.940]  я сейчас ее приведу. Как дифференцировать максимум? Вот у вас есть максимум, максимум по t
[52:44.940 --> 52:56.160]  от некой функции f большое от f, давайте не f большое, g большое от t f, по аргументу вот,
[52:56.160 --> 53:03.980]  максимум по t я хочу взять производную по, нет, максимум по f, максимум по f, а производную я
[53:03.980 --> 53:12.620]  хочу взять так вот, g маленькая от t равняется максимум по f от g большое, а я хочу найти g
[53:12.620 --> 53:18.380]  штрих от t, как я это буду делать? Градиент, хорошо, градиент g от t, я это делаю таким образом,
[53:18.380 --> 53:24.900]  я говорю, что пускай максимум достигается на некой функции f, то есть это есть g от t от f со
[53:24.900 --> 53:33.420]  звездой от t, f со звездой от t удовлетворяет условию, градиент по f от функции g от t f
[53:33.420 --> 53:40.740]  со звездой от t тождественно равняется 0, это условие, соответственно, принцип фирма,
[53:40.740 --> 53:46.700]  то есть это условие у меня находится f со звездой от t, ну и когда я пишу градиент g от t,
[53:46.700 --> 53:55.780]  это есть, соответственно, градиент по t функции g большое от t от f, и я дальше использую формулу,
[53:55.780 --> 54:02.900]  ну f от t, f со звездой от t, и дальше я использую формулу дифференцирования сложной функции,
[54:02.900 --> 54:10.660]  то есть я пишу, что это есть градиент по t g, ну то есть давайте так сразу напишем gt от t f со
[54:10.660 --> 54:25.500]  звездой от t, вот штрих, плюс, соответственно, плюс что? Плюс градиент g по f, ну там на самом деле
[54:25.500 --> 54:32.060]  конечно надо писать в обратном порядке, но это неважно, значит, вот по-хорошему надо писать так,
[54:32.060 --> 54:38.780]  градиент f со звездой, значит, но это то, что векторное поле это будет на самом деле матрица,
[54:38.780 --> 54:45.380]  потому что это вектор, вот так вот напишу, но это матрица, то есть векторное поле дифференцируется,
[54:45.380 --> 54:51.500]  эта матрица умножается на вектор, который есть градиент f на g, ну и там аргумент вот такой,
[54:51.500 --> 54:59.900]  значит, t f со звездой от t, так, вот это формула дифференцирования сложной функции, ну и что вы
[54:59.900 --> 55:06.260]  можете теперь сказать относительно того, что в итоге получается, а в итоге получается, что это
[55:06.260 --> 55:12.700]  то 0, тождественный, поэтому это просто есть g, ну давайте я все-таки буду использовать
[55:12.700 --> 55:20.700]  единое обозначение, градиент частная производная этой штуки по t, то есть это просто есть dg по dt от
[55:20.700 --> 55:27.780]  t, от f, где f равняется f со звездой от t, вот так, если аккуратнее говорить, ну естественно,
[55:27.780 --> 55:33.780]  я это все делаю в случае, когда все дифференцируемо, здесь у меня как бы это предположение выполняется,
[55:33.780 --> 55:38.540]  потому что у меня эта функция есть интеграл, а то и, в общем, вот эти всякие субдифференциальные
[55:38.540 --> 55:45.060]  оговорки, они здесь не нужны, вот поэтому я могу написать, что sigma со звездой te равняется,
[55:45.060 --> 55:54.620]  равняется просто fe, просто fe, где fe есть решение уравнения, где fe получается из условия вот
[55:54.620 --> 56:01.780]  этого условия, из условия, что, ну соответственно, по fe приравниваю производную нулю и получаю te
[56:01.780 --> 56:10.700]  равняется sigma штрих, sigma штрих e от fe, но это есть не что иное, это есть не что иное, как,
[56:10.700 --> 56:20.740]  как просто te от fe, то есть, то есть, смотрите, что получается, если я хочу инвертировать уравнения
[56:20.740 --> 56:29.180]  te равняется tau e от fe и просто написать, что fe это есть tau e минус 1 от te, то я как раз могу написать так,
[56:29.180 --> 56:35.860]  что fe это есть sigma со звездой e от te, вот как, здесь sigma со звездой определяется вот таким образом,
[56:35.860 --> 56:42.500]  и тогда, тогда все схлопывается, то есть, я действительно понимаю под звездой буквально
[56:42.500 --> 56:49.100]  преобразование фенхеля или жандра, то есть, сопряженная функция, и мы получаем альтернативную
[56:49.100 --> 56:55.620]  форму записи модели, как так получилось прям, что со звонком, мы получаем альтернативную форму
[56:55.620 --> 57:03.500]  записи модели Бэтмена в варианте, в варианте, который вот называется вариантом стабильной динамики,
[57:03.500 --> 57:07.780]  точнее нестрады пальма, и вот почему он так называется, мы будем в следующий раз говорить,
[57:07.780 --> 57:13.820]  потому что на самом деле, ну это как бы одна и та же задача, но вот уже с этой задачей намного
[57:13.820 --> 57:20.900]  удобней бывает работать, почему, потому что обратите внимание, что эта задача в пространстве столько,
[57:20.900 --> 57:27.140]  сколько ребер, а эта задача в пространстве числа путей, это первый момент, второй момент,
[57:27.460 --> 57:35.780]  в этой задаче я могу делать всякие трюки, которые в той делать сложно, а именно, я могу переходить
[57:35.780 --> 57:41.940]  к пределу по свойствам функции тау-е-фе, то есть, в частности, я могу ее вырождать и делать вот
[57:41.940 --> 57:48.060]  просто такую вот константа, потом бесконечность, оказывается, это очень даже имеет смысл делать,
[57:48.060 --> 57:52.580]  вот здесь так не пройдет, если я здесь буду делать, у меня будет взрывающийся потенциал, и,
[57:52.580 --> 58:00.180]  точнее, так формально делать можно, но обосновывать проще через двойственную задачу, ну и анонс тоже
[58:00.180 --> 58:08.780]  такого как говорится вкусного, вот в следующий раз, пользуясь вот этой вот постановкой, я поясню
[58:08.780 --> 58:13.660]  вообще вот этот вот механизм платных дорог, как правильно выбирать платные дороги, я сегодня
[58:13.660 --> 58:20.340]  хотел это сделать, у меня не хватило времени, вот, но сегодня успел сделать важную вещь, вот посмотрите
[58:20.340 --> 58:26.500]  в итоге, что здесь получилось, это реально и красиво, и поучительно, потому что изначальная задача,
[58:26.500 --> 58:33.140]  она вообще вот такая, она вообще как бы, причем тут оптимизация, причем потом она оказалась задачей
[58:33.140 --> 58:38.980]  оптимизации, а в конечном итоге, она оказалась еще задачей оптимизации в пространстве существенно
[58:38.980 --> 58:45.140]  меньшей размерности, и вся сложность схлопнулась в кратчайшие пути, оно и понятно, кратчайшие пути
[58:45.140 --> 58:50.940]  должны были где-то всплыть, потому что, ну как бы рациональность, что означает, что все выбирают кратчайшие
[58:50.940 --> 58:56.660]  пути, и странно, что здесь этого не было, а вот здесь уже двойственная задача, это явно всплыло и
[58:56.660 --> 59:02.980]  убило размерность, размерность теперь адекватная, и чтобы найти вектор х, нам просто надо по походу
[59:02.980 --> 59:07.940]  вычислений, правильно, вот когда мы оцениваем супер дифференциал, восстанавливать вот эту
[59:07.940 --> 59:14.420]  информацию, это делается, у меня в принципе все, если вопросы, вообще я быстро, да, сейчас уже во второй
[59:14.420 --> 59:20.780]  половине, ну по понятным причинам, все-таки хочу, чтобы на лекциях мы что-то новое узнавали, они
[59:20.780 --> 59:26.140]  каждый раз одни и те же формулы писали, но поскольку это все есть на youtube, там есть такая опция, вы
[59:26.140 --> 59:33.740]  можете помедленнее включить, и я буду говорить вот так вот, но зато вы будете успевать, ну я надеюсь
[59:37.940 --> 59:45.620]  субградиентным, но там есть хитрости некоторые, то есть да, грубо говоря, ответ да, вот эту задачу уже
[59:45.620 --> 59:51.220]  можно решать в некотором смысле неким градиентным спуском, точнее подъемом, потому что задача на
[59:51.220 --> 01:00:01.140]  максимум, ну да, да, то есть надо решать определенным прямодвойственным методом, оказывается, что, ну мы чуть-чуть
[01:00:01.140 --> 01:00:06.500]  про это будем говорить, тут есть варианты, когда можно даже ускоренные методы использовать, но это все в
[01:00:06.500 --> 01:00:12.500]  будущем, да, то есть вот уже здесь, да, градиентные методы, как говорят, рулят, то есть они здесь уже
[01:00:12.500 --> 01:00:19.980]  прям полезны, здесь есть некая проблема с их использованием за счет того, что множество x какое-то
[01:00:19.980 --> 01:00:27.940]  хитрое, там-там-там-там его нет, а тут оно хитрое, и здесь не любой метод работы, здесь фрэнк вульф
[01:00:27.940 --> 01:00:33.140]  используется, я об этом буду отдельно говорить, то есть все это просто отдельная история, хорошо,
[01:00:33.140 --> 01:00:36.020]  коллеги, у меня все, да, спасибо.
