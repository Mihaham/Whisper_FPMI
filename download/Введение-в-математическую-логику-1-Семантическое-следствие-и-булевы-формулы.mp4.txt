[00:00.000 --> 00:08.880]  Так, ну что, звонок прозвенел, пора начинать, рассаживайтесь.
[00:08.880 --> 00:13.680]  Ну а вы меня должны по идее знать, на всякий случай
[00:13.680 --> 00:16.400]  напомню, что меня зовут Михаил Николаевич Вялый,
[00:16.400 --> 00:21.200]  я буду у вас лектором по новому курсу введения
[00:21.200 --> 00:23.640]  математическую логику.
[00:23.640 --> 00:27.120]  Раньше у нас был единый курс логики и теории алгоритмов,
[00:27.120 --> 00:32.920]  но мы программу перетасовали, и у вас вместо теории формальных
[00:32.920 --> 00:37.160]  систем алгоритмов и триапа будет логика и теория алгоритмов.
[00:37.160 --> 00:40.680]  Часть материала из триапа войдет в теорию алгоритмов,
[00:40.680 --> 00:44.920]  ну а в этом курсе будет то, что было про логику раньше,
[00:44.920 --> 00:49.120]  плюс еще, поскольку освободилось немножко места, будет еще
[00:49.120 --> 00:50.120]  разные вещи.
[00:50.120 --> 00:56.640]  Значит, ну как устроена отчетность по курсу, как устроена так
[00:56.680 --> 00:59.480]  же, как в прошлом году на алгебре, то есть будет
[00:59.480 --> 01:04.280]  экзамен, будет бально-рейтинговая система, на сайте кафедры
[01:04.280 --> 01:07.720]  вы можете посмотреть более подробно и посмотреть программу
[01:07.720 --> 01:10.040]  курса с официальным заданием.
[01:10.040 --> 01:13.600]  В общем, я думаю, что особо тратить на это время сейчас
[01:13.600 --> 01:17.320]  не нужно, вы должны все представлять, потому что все очень похоже
[01:17.320 --> 01:22.720]  на курс алгебры, там те же самые очки, в общем, все
[01:22.720 --> 01:26.600]  точно так же, никаких изменений пока не планируется, ну
[01:26.600 --> 01:29.280]  я надеюсь, их и не будет.
[01:29.280 --> 01:32.800]  Так что я сразу перейду к делу и начну рассказывать
[01:32.800 --> 01:33.800]  уже содержательным.
[01:33.800 --> 01:38.560]  Что такое математическая логика?
[01:38.560 --> 01:45.000]  Это очень амбициозный проект.
[01:45.000 --> 01:50.640]  Как научиться формализовывать математические рассуждения,
[01:50.640 --> 01:56.000]  так чтобы можно было доказывать, как часто говорят, метатеоремы.
[01:56.200 --> 01:59.280]  То есть теоремы такого типа, какое-то утверждение
[01:59.280 --> 02:03.000]  нельзя доказать в таких-то обстоятельствах, в такой-то
[02:03.000 --> 02:04.360]  формальной системе.
[02:04.360 --> 02:08.160]  Или, наоборот, какой-то класс утверждений доказываем.
[02:08.160 --> 02:10.240]  Или там две формальные системы равносильны.
[02:10.240 --> 02:14.920]  Это очень амбициозный проект, потому что на первый взгляд
[02:14.920 --> 02:17.200]  не очень понятно, как к этому подойти, математика
[02:17.200 --> 02:21.480]  науко-содержательная, когда мы рассуждаем, у нас
[02:21.480 --> 02:25.320]  и образы, и какие-то наглядные вещи, но давным-давно люди
[02:25.320 --> 02:28.960]  поняли, что математика очень хрупкая, достаточно
[02:28.960 --> 02:31.080]  одного противоречия, чтобы все рухнуло.
[02:31.080 --> 02:39.680]  И поэтому нужно обеспечить корректность всех доказательств.
[02:39.680 --> 02:42.280]  И этим занимались довольно долго, и кончилось вот тем,
[02:42.280 --> 02:44.560]  что в какой-то момент люди совершенно уже упорно
[02:44.560 --> 02:49.680]  стали работать и достигли некоторого успеха.
[02:49.680 --> 02:55.280]  Успех частичный, и объяснить, в чем успех и что неудача
[02:55.280 --> 02:58.680]  это одна из частей курса, так быстро в двух словах
[02:58.680 --> 02:59.840]  я говорить не хочу.
[02:59.840 --> 03:08.480]  С чего мы начнем?
[03:08.480 --> 03:13.080]  Давайте вообще начнем с того, что оговорим некоторые
[03:13.080 --> 03:17.320]  важные общие вещи, относящиеся ко всем рассуждениям такого
[03:17.320 --> 03:18.320]  типа.
[03:18.320 --> 03:23.080]  Смотрите, у нас идея формализовать математические рассуждения,
[03:23.080 --> 03:28.480]  хотя бы утверждения, так, чтобы можно было математическими
[03:28.480 --> 03:30.840]  средствами что-то про них доказывать.
[03:30.840 --> 03:33.800]  Возникает такая трудность, я думаю, совершенно понятная.
[03:33.800 --> 03:38.160]  У нас в результате, в одном рассуждении будут и сами
[03:38.160 --> 03:40.520]  математические утверждения, и математические утверждения
[03:40.520 --> 03:43.480]  в математических утверждениях.
[03:43.480 --> 03:44.480]  Как не запутаться.
[03:44.480 --> 03:49.240]  Это действительно некоторая проблема, и поэтому я сразу
[03:49.240 --> 03:53.680]  введу некоторые два важных понятия, которые буду постоянно
[03:53.680 --> 03:57.360]  использовать, именно чтобы различать вот эти два уровня,
[03:57.360 --> 03:58.360]  которые у нас всегда будут.
[03:58.360 --> 04:02.600]  Первый уровень называется семантик, это те объекты,
[04:02.600 --> 04:04.120]  о которых мы рассуждаем.
[04:04.120 --> 04:08.480]  Ну вот, допустим, мы берем тюрьму группы, изучаем.
[04:08.480 --> 04:12.080]  Вот группы, это наша семантика в этом случае.
[04:12.080 --> 04:17.180]  Все, конечно, не так просто, потому что здесь скрываются
[04:17.180 --> 04:20.500]  философские глубины, потому что если мы уж озабочены
[04:20.500 --> 04:23.260]  строгостью рассуждения, то нам скажут, ну а почему
[04:23.260 --> 04:26.020]  вы вообще знаете, что группы существуют, что это вообще
[04:26.020 --> 04:29.980]  такое, что за объект, мы же не можем показать, пкнуть
[04:29.980 --> 04:35.100]  пальцем вот эта вот группа, их в физическом мире нет.
[04:35.100 --> 04:39.980]  Поэтому нужно как-то эту проблему решать.
[04:39.980 --> 04:41.740]  Значит, математики ее решают очень просто.
[04:41.740 --> 04:43.540]  Математики стихийные платонисты.
[04:43.540 --> 04:46.540]  Они считают, что математические объекты существуют в некотором
[04:46.540 --> 04:51.300]  идеальном мире, мире идей, и мы какие-то свойства этих
[04:51.300 --> 04:53.100]  объектов способны узнать.
[04:53.100 --> 04:56.260]  Что там еще есть за свойства, мы не знаем, но какие-то
[04:56.260 --> 04:57.260]  способны узнать.
[04:57.260 --> 05:01.260]  То есть нам доступен этот мир с помощью наших умственных
[05:01.260 --> 05:02.260]  усилий.
[05:02.260 --> 05:06.460]  Это одна из возможных философских трактовок того, как живут
[05:06.460 --> 05:08.980]  математические объекты не единственно возможная.
[05:08.980 --> 05:11.780]  Философию я вдаваться не хочу, хочу только сразу
[05:11.780 --> 05:13.700]  сказать, что большинство работающих математиков
[05:13.700 --> 05:16.080]  стихийно этой точки зрения придерживается, никто не
[05:16.080 --> 05:19.400]  сомневается, что группа есть, что множество есть,
[05:19.400 --> 05:21.720]  не знаю, что действительно числа есть.
[05:21.720 --> 05:24.280]  При этом возникают разные трудности.
[05:24.280 --> 05:26.640]  Частично я потом про них скажу.
[05:26.640 --> 05:32.040]  И люди, озабоченные строгим обоснованием в математике,
[05:32.040 --> 05:35.200]  такой подход, конечно, не ценят.
[05:35.200 --> 05:39.500]  Считают его слишком наивным и непригодным для серьезного
[05:39.500 --> 05:40.500]  дела.
[05:40.500 --> 05:43.000]  Мы его, тем не менее, придерживаться будем, потому что иначе очень
[05:43.000 --> 05:44.000]  трудно.
[05:44.120 --> 05:48.540]  Есть способ подложить некоторые формальные основания под
[05:48.540 --> 05:49.760]  семантику, но он трудный.
[05:49.760 --> 05:54.360]  Я чуть позже во второй части курса немножко расскажу
[05:54.360 --> 05:57.300]  про саму идею, как это делается, но учить этому не буду, потому
[05:57.300 --> 06:00.280]  что это сложно и особо не нужно.
[06:00.280 --> 06:03.400]  Сейчас люди не так сильно озабочены корректностью
[06:03.400 --> 06:04.400]  рассуждений.
[06:04.400 --> 06:07.680]  А вы вообще учитесь на факультете прикладной математики,
[06:07.680 --> 06:09.600]  многие из вас программируют, а программисты вообще не
[06:09.600 --> 06:11.440]  озабочены корректностью программ.
[06:11.600 --> 06:14.680]  Все работают неправильно, никого это не смущает,
[06:14.680 --> 06:16.920]  наоборот, все этим очень довольны, потому что можно
[06:16.920 --> 06:19.480]  выпустить через два месяца следующий релиз, заработать
[06:19.480 --> 06:21.400]  еще денег, и в общем так оно все и идет.
[06:21.400 --> 06:26.420]  Но, тем не менее, такая проблема есть, ее стоит иметь
[06:26.420 --> 06:30.420]  в виду, но я буду придерживаться почти все время такого наивного
[06:30.420 --> 06:31.420]  подхода.
[06:31.420 --> 06:33.520]  Когда я от него отступлю, я это отдельно оговорю.
[06:33.520 --> 06:37.320]  А вторая вещь, которую нам что-то нужно с ней сделать,
[06:37.320 --> 06:38.880]  это называется синтаксис.
[06:39.440 --> 06:42.200]  Давайте я напишу, я все эти подробные слова писать
[06:42.200 --> 06:46.840]  конечно не буду, но по крайней мере, чтобы можно было.
[06:53.320 --> 06:54.520]  Что такое синтаксис?
[06:54.520 --> 06:57.280]  Это как раз способ формально представлять математические
[06:57.280 --> 06:58.280]  утверждения.
[06:58.280 --> 07:03.800]  И математические рассуждения, которые, как вы, я думаю,
[07:03.800 --> 07:07.640]  хорошо понимаете, это просто цепочки утверждений, связанные
[07:07.640 --> 07:08.640]  с законом милуэки.
[07:08.640 --> 07:12.320]  То есть, некоторые цепочки утверждений корректными,
[07:12.320 --> 07:15.320]  мы их называем доказательствами, некоторые – нет.
[07:15.320 --> 07:18.880]  Но что при этом, мы же все-таки хотим, чтобы это были математические
[07:18.880 --> 07:21.240]  объекты, нам надо как-то внятно сказать, что мы имеем
[07:21.240 --> 07:22.240]  в виду.
[07:22.240 --> 07:26.480]  Подход тут такой, он не сразу именно так установился,
[07:26.480 --> 07:31.560]  я уж пропущу всякие исторические истории по этому поводу,
[07:31.560 --> 07:34.360]  а сразу скажу, как более-менее сейчас на это смотрят.
[07:34.360 --> 07:38.880]  В любом случае, что математическое утверждение, что математическое
[07:38.880 --> 07:39.880]  доказательство – это текст.
[07:39.880 --> 07:43.000]  А что такое текст в современном мире?
[07:43.000 --> 07:44.000]  Это файл.
[07:44.000 --> 07:50.960]  Если упрощать жизнь, а в этой науке мы предпочитаем
[07:50.960 --> 07:54.240]  упрощать, отбрасывать разные ненужные сложности,
[07:54.240 --> 07:55.920]  файл – это просто последность нулей единиц.
[07:55.920 --> 07:58.600]  Текст – это слово из нулей единиц.
[07:58.600 --> 08:03.480]  И что нам нужно?
[08:03.480 --> 08:08.160]  Нам нужно уметь различать тексты или слова, которые
[08:08.160 --> 08:11.600]  являются описаниями каких-то математических утверждений
[08:11.600 --> 08:13.880]  или математические доказательства, которые не являются.
[08:13.880 --> 08:16.480]  А что значит различать?
[08:16.480 --> 08:21.120]  Ну, это не должно быть, как с пьесами Шекспира один
[08:21.120 --> 08:24.960]  критик говорит, да, вот это гениальное проникновение
[08:24.960 --> 08:27.120]  в историю средневеков в Англии, другой говорит,
[08:27.120 --> 08:30.320]  нет, это злобная клевета и поклёп на несчастного
[08:30.320 --> 08:32.600]  Ричарда Третьего, скажем.
[08:32.600 --> 08:36.080]  Математики так не хотят, поэтому они считают, что
[08:36.080 --> 08:39.080]  должно быть твёрдое правило, которое объясняет, вот эта
[08:39.080 --> 08:45.240]  цепочка является формулой, я потом эти слова буду использовать,
[08:45.240 --> 08:47.360]  более-менее формулами называть, ну или последовательностью
[08:47.360 --> 08:49.640]  формул, которая называется доказательством, а это
[08:49.640 --> 08:50.640]  не является.
[08:50.640 --> 08:55.240]  Ну, и сейчас вы все понимаете, как это нужно формализовать.
[08:55.240 --> 08:58.520]  Нужно сказать, что есть алгоритмы, допустим, компьютерная программа,
[08:58.520 --> 09:02.440]  вы даёте ей на вход текст, и она говорит, да, это математическое
[09:02.440 --> 09:04.120]  утверждение, даёте другое текст, она говорит, нет,
[09:04.120 --> 09:07.520]  это не математическое утверждение, и это должен быть вот такой
[09:07.520 --> 09:09.800]  вот алгоритм, который работает, совершенно механически
[09:09.800 --> 09:12.000]  преобразовывает эту цепочку.
[09:12.000 --> 09:14.280]  Ну как устроена теория алгоритмов, вам будут рассказывать в
[09:14.280 --> 09:18.400]  параллельном курсе, я позже, в самом конце курса, мне
[09:18.400 --> 09:21.520]  оно понадобится, настоящая теория алгоритмов, но вас
[09:21.520 --> 09:23.800]  ещё этому должны научить, я надеюсь, что когда мне
[09:23.800 --> 09:28.160]  понадобится, вас уже этому обучат, а пока я буду к алгоритмам
[09:28.160 --> 09:30.840]  относиться, ну апеллируя к вашей интуиции, вы все
[09:30.880 --> 09:33.800]  какие-то программы писали, у вас там был курс вообще
[09:33.800 --> 09:37.240]  весной, тоже что-то там, основы алгоритмов, поэтому
[09:37.240 --> 09:39.160]  какое представление о том, что такое алгоритм у вас
[09:39.160 --> 09:41.880]  есть, вот у нас будут конкретные алгоритмы появляться, пока
[09:41.880 --> 09:44.640]  речь идёт о конкретных алгоритмах, в общем-то, большего не
[09:44.640 --> 09:47.720]  нужно, проблемы начинаются, когда мы хотим доказывать
[09:47.720 --> 09:50.240]  утверждение, что какого-то алгоритма не существует,
[09:50.240 --> 09:52.760]  потому что это не очень понятно, как сделать, ну мало
[09:52.760 --> 09:55.520]  ли, вот сейчас не существует, а завтра кто-нибудь напишет.
[09:55.520 --> 10:06.400]  Вот, и обычно эти алгоритмы, которые различают формальные
[10:06.400 --> 10:09.560]  утверждения и формальные доказательства от мусора,
[10:09.560 --> 10:12.960]  ещё предполагается, что они эффективны, это не обязательно,
[10:12.960 --> 10:15.640]  то есть для такой настоящей теории это требование не
[10:15.640 --> 10:18.320]  обязательно, но в жизни, понятно, оно полезно, потому
[10:18.320 --> 10:21.920]  что если мы придумаем какую-то очень замысловатую формализацию,
[10:22.000 --> 10:25.520]  где чтобы понять про строчку из 20 символов является
[10:25.520 --> 10:28.240]  или она описание математического утверждения нужно 10 миллионов
[10:28.240 --> 10:31.880]  лет, ну как-то это не очень понятно, зачем такая формализация
[10:31.880 --> 10:34.360]  нужна, ну и честно говоря, никаких интересных примеров
[10:34.360 --> 10:36.720]  такого рода я не знаю, то есть не исключено, что они
[10:36.720 --> 10:40.920]  есть, я не буду утверждать, что нет, но я не знаю, вот,
[10:40.920 --> 10:46.080]  и из этого уже ясно, что логика и теория алгоритмов
[10:46.080 --> 10:48.720]  тесно связаны, не случайно были вообще долгое время
[10:48.720 --> 10:54.640]  у нас в одном курсе, и в университете, вот на Мехмате, там у них
[10:54.640 --> 10:58.520]  курс алгоритма и математическая логика, он годовой просто,
[10:58.520 --> 11:02.600]  но он единый, потому что это действительно связанные
[11:02.600 --> 11:06.360]  вещи, и более того, теория алгоритмов возникла исторически
[11:06.360 --> 11:09.120]  позже, то есть люди вначале думали, как бы убедить себя
[11:09.120 --> 11:12.640]  и других, что наши математические доказательства правильные,
[11:12.640 --> 11:16.120]  а в процессе этой работы возникли разные структуры,
[11:16.160 --> 11:18.640]  не сразу, там история очень длинная, но в какой-то момент
[11:18.640 --> 11:21.200]  возникло то, что называется формальной моделью вычислений,
[11:21.200 --> 11:24.400]  то есть появилась возможность математически строго сказать,
[11:24.400 --> 11:29.600]  что такое алгоритм. Ну и побочным следствием этой
[11:29.600 --> 11:34.400]  деятельности пары дюжин, наверное, человек за 50 лет
[11:34.400 --> 11:37.760]  стала современная компьютерная цивилизация, то есть если
[11:37.760 --> 11:41.080]  бы вот этой работы по обоснованию математики не было, скорее
[11:41.080 --> 11:44.000]  всего, технологическое развитие шло бы по-другому, потому
[11:44.000 --> 11:46.760]  что в начале вычислительные устройства были другими,
[11:46.760 --> 11:51.040]  это была такая стойка с дырочками и провода, и написание
[11:51.040 --> 11:53.000]  программы состояло в том, что надо было правильным
[11:53.000 --> 11:56.440]  образом воткнуть провода, то есть сделать какие-то
[11:56.440 --> 11:59.600]  дополнительные соединения, получалась уже электрическая
[11:59.600 --> 12:01.800]  схема, которая конкретную задачу решала, а нужно
[12:01.800 --> 12:04.480]  решать другую задачу, нужно было провода перевтыкать.
[12:04.480 --> 12:09.080]  И так довольно долго развивалось, лет 15, по крайней мере, и
[12:09.080 --> 12:12.120]  довольно сложные вещи такие устройства могли делать,
[12:12.120 --> 12:15.360]  а потом захотелось делать еще более сложные, и инженеры
[12:15.360 --> 12:17.960]  уже совсем замучились, потому что, ну вы понимаете, как
[12:17.960 --> 12:25.760]  это мучительно, допустим, вам нужно 100 килобайт программы,
[12:25.760 --> 12:29.360]  сколько нужно дырочек, ну так, вообще, если делать
[12:29.360 --> 12:32.320]  все по уму, то не так уж и много, но они же тогда делали
[12:32.320 --> 12:35.120]  по-простому, ну и нашлись математики, которые им
[12:35.120 --> 12:38.280]  объяснили, что вы зря различаете программы и данные, что это
[12:38.280 --> 12:40.960]  на самом деле одно и то же, а нужно написать вместо
[12:41.040 --> 12:43.160]  этих дырочек, нужно один раз все закоммутировать,
[12:43.160 --> 12:46.800]  чтобы реализовался универсальный алгоритм, который будет
[12:46.800 --> 12:50.520]  часть данных воспринимать как код и работать на остальных
[12:50.520 --> 12:52.120]  данных уже как на данных.
[12:52.120 --> 12:54.040]  И это была революция.
[12:54.040 --> 12:56.400]  Не только в математике, не только в технике, а, как
[12:56.400 --> 12:59.440]  мы сейчас видим, вообще во всем обществе.
[12:59.440 --> 13:06.000]  Ну, на этом я рекламную часть курса маневатической
[13:06.000 --> 13:09.360]  логики закончил, надеюсь, вы прониклись, что это важная
[13:09.360 --> 13:13.240]  вещь, что вот рассуждая в таких крайне отвлеченных
[13:13.240 --> 13:15.960]  понятиях, можно не на роком цивилизацию новую создать.
[13:15.960 --> 13:19.320]  То есть, в общем, это серьезные и глубокие вопросы.
[13:19.320 --> 13:21.520]  Мы, конечно, всего охватить не сможем.
[13:21.520 --> 13:25.320]  Моя цель более-менее дать вам представление об основных
[13:25.320 --> 13:28.760]  технических идеях, как вообще можно такие рассуждения
[13:28.760 --> 13:29.760]  проводить.
[13:29.760 --> 13:32.360]  Ну и до каких-то теорем я хочу, конечно, добраться
[13:32.360 --> 13:35.960]  не без этого, но не сильно далеко.
[13:35.960 --> 13:42.320]  И поскольку это дело достаточно трудное, и одна из трудностей
[13:42.320 --> 13:45.360]  этого курса состоит в том, что, как бы мы ни старались,
[13:45.360 --> 13:48.680]  формализации получаются очень громоздкими.
[13:48.680 --> 13:51.200]  Мы привыкли содержательно рассуждать про математику,
[13:51.200 --> 13:55.120]  и это очень гибко, очень удобно и позволяет нам легко
[13:55.120 --> 13:58.480]  подстраивать свое восприятие к каким-то конкретным
[13:58.480 --> 13:59.480]  обстоятельствам.
[13:59.480 --> 14:00.960]  А логика устроена иначе.
[14:00.960 --> 14:03.680]  Нам нужно фиксировать определение довольно сложных вещей,
[14:03.680 --> 14:06.480]  поэтому и определения получаются сложными.
[14:06.480 --> 14:10.240]  Ну это некоторая неизбежная трудность, все-таки мы очень
[14:10.240 --> 14:12.560]  амбициозную цель ставим, поэтому ее не так легко
[14:12.560 --> 14:13.560]  достичь.
[14:13.560 --> 14:17.000]  Значит, что вообще происходит, когда мы, допустим, зафиксировали
[14:17.000 --> 14:18.000]  какую-то формализацию?
[14:18.000 --> 14:21.600]  У нас их будет несколько, но зафиксировали какую-то.
[14:21.600 --> 14:24.000]  Самый первый вопрос, естественный, который возникает, это даже
[14:24.000 --> 14:26.400]  не про доказательства, а про то, какие утверждения
[14:26.400 --> 14:29.040]  у нас, зафиксировано синтакс, зафиксирована семантика,
[14:29.040 --> 14:32.200]  какие утверждения вообще мы можем выразить вот этими
[14:32.200 --> 14:34.920]  средствами формальными, которые у нас есть?
[14:34.920 --> 14:38.640]  Какие утверждения вы можете выразить обычными алгебравическими
[14:38.640 --> 14:40.080]  формулами о группах?
[14:40.080 --> 14:42.800]  На самом деле, не очень многими, я не уверен, что этот пример
[14:42.800 --> 14:46.080]  разовью подробно, но ясно, что нам нужно что-то еще,
[14:46.080 --> 14:49.400]  это мы в следующий раз обсудим, что нам нужно и что мы постоянно
[14:49.400 --> 14:53.080]  использовали, когда говорили о группах, ну и других математических
[14:53.080 --> 14:54.280]  дисциплинах тоже самое.
[14:54.280 --> 15:01.000]  Но вопрос этот, он все равно важен и он не очевиден,
[15:01.000 --> 15:04.280]  потому что, во-первых, заранее ясно, что если мы хотим
[15:04.280 --> 15:09.840]  рассуждать о каком-то бесконечном множестве, то шансов построить
[15:09.840 --> 15:13.480]  универсальную выразительную формализацию нет.
[15:13.480 --> 15:16.280]  Формализация, я напомню, это текст, то есть любое
[15:16.280 --> 15:19.120]  утверждение это текст, значит утверждение в любой формализации
[15:19.120 --> 15:22.520]  счетное множество, последности 0 единиц, счетное множество.
[15:22.520 --> 15:25.760]  Хороший вопрос, поднимите руки, кто знает, что такое
[15:25.760 --> 15:26.760]  счетное множество.
[15:26.760 --> 15:30.720]  Ага, ну почти все знают, хорошо, а теперь более сложный
[15:30.720 --> 15:33.880]  вопрос, поднимите руки те, кто может ответить на вопрос,
[15:33.880 --> 15:36.520]  где вас, в каком физтеховском курсе вас этому учили.
[15:36.520 --> 15:42.520]  Это гораздо меньше, вот у меня было такое подозрение,
[15:42.520 --> 15:44.880]  что эта тематика как-то проваливается, она нужна
[15:44.880 --> 15:48.960]  более-менее в разных областях математики, но всем в содержательных
[15:48.960 --> 15:52.320]  курсах жалко тратить на нее время и проваливается.
[15:52.320 --> 15:56.320]  Ну, в общем, более-менее в терминах, которые вы уж
[15:56.320 --> 15:58.520]  точно должны знать хотя бы из моего курса алгебры
[15:58.520 --> 16:01.240]  можно сказать так, что счетное множество те, которые можно
[16:01.240 --> 16:04.480]  поставить в взаимно однозначное соответствие с множеством
[16:04.480 --> 16:05.480]  натуральных чисел.
[16:05.480 --> 16:09.280]  Ну там целые числа тоже счетные, в общем их много,
[16:09.280 --> 16:12.440]  там есть некоторая несложная наука про эту часть и вот
[16:12.440 --> 16:15.480]  судя по опросу большинство что-то про это знает, мне
[16:15.480 --> 16:17.360]  подробности не нужны, вот сейчас мне, например, нужно
[16:17.360 --> 16:21.240]  просто чтобы вы понимали, что множество слов из 0 единиц
[16:21.240 --> 16:22.240]  счетно.
[16:22.240 --> 16:27.640]  Ну как поставить в соответствие слова из 0 единиц натуральные
[16:27.640 --> 16:30.600]  числа, есть много способов, я давайте сейчас не буду
[16:30.600 --> 16:33.960]  на это отвлекаться, но это несложное упражнение,
[16:33.960 --> 16:35.520]  я думаю, каждый из вас легко с этим справится.
[16:35.520 --> 16:42.720]  Да, а свойства это просто подмножество, то есть мы
[16:42.720 --> 16:46.760]  про одни элементы говорим, что они обладают свойством,
[16:46.760 --> 16:48.880]  другие не обладают, то есть это подмножество и подмножество
[16:48.880 --> 16:52.800]  даже счетного множества уже не счетное количество,
[16:52.800 --> 16:56.000]  это такое известное открытие кантера, поэтому шансов
[16:56.000 --> 16:59.600]  описать вообще, построить такую мощную выразительную
[16:59.600 --> 17:02.840]  систему, которая будет описывать все, если множество бесконечно
[17:02.840 --> 17:03.840]  нереально.
[17:03.840 --> 17:11.120]  Поэтому этот вопрос содержательный и вот первая часть курса
[17:11.120 --> 17:15.640]  мы будем, я постепенно введу самый мощный формализм,
[17:15.640 --> 17:18.440]  который нам будет нужен, не в один прием, а так несколько,
[17:18.440 --> 17:22.040]  и потом мы будем изучать, что же в рамках этого формализма
[17:22.040 --> 17:25.720]  можно выразить, а уже во второй части курса мы обсудим,
[17:25.720 --> 17:27.880]  что можно в рамках такого формализма доказывать.
[17:27.880 --> 17:34.280]  Понятно, выразить это одно, а доказать все-таки там
[17:34.280 --> 17:37.720]  еще какие-то логические связи, это сложнее, но так постепенно
[17:37.720 --> 17:41.240]  и в самом начале мы к этому будем готовиться, какие-то
[17:41.240 --> 17:43.600]  вещи с самого начала будем разбирать.
[17:43.600 --> 17:49.600]  Вот примерно такой план, но прежде даже чем его реализовывать,
[17:49.600 --> 17:53.600]  я хочу начать с того, чтобы вот эти слова про синтаксис
[17:53.720 --> 17:56.120]  и семантику придать им какой-то более конкретный
[17:56.120 --> 17:57.120]  смысл.
[17:57.120 --> 18:00.520]  Мне это все равно нужно, мы начнем с очень простого
[18:00.520 --> 18:05.120]  примера, я в этот раз даже не надеюсь его закончить,
[18:05.120 --> 18:07.240]  но начать все равно нужно с него, потому что он нам
[18:07.240 --> 18:09.800]  понадобится дальше для вот этой вот уже мощной
[18:09.800 --> 18:10.800]  формализации.
[18:10.800 --> 18:13.360]  Давайте вот что обсудим.
[18:13.360 --> 18:24.120]  Такой будет связь с тем, что вы заведомо знаете,
[18:24.120 --> 18:27.240]  и тем, что мы будем хотеть делать.
[18:27.240 --> 18:30.120]  Я хочу сейчас объяснить, какого рода утверждение
[18:30.120 --> 18:32.160]  мы будем формализовывать.
[18:32.160 --> 18:34.320]  И вот давайте начнем с чего-нибудь очень простого.
[18:34.320 --> 18:36.680]  Вот система линейных неравенств, x больше единицы, x больше
[18:36.680 --> 18:37.680]  двух.
[18:37.680 --> 18:41.680]  И вас, я думаю, учили еще в школе тому, что неравенство
[18:41.920 --> 18:46.920]  x больше нуля не является следствием этой системы.
[18:46.920 --> 18:57.840]  А неравенство x, ой, наоборот, x больше нуля является, прошу
[18:57.840 --> 19:02.960]  прощения, не в том порядке начал писать, а x больше трех
[19:02.960 --> 19:03.960]  не является.
[19:03.960 --> 19:08.840]  Что мы при этом понимаем ввиду, когда мы говорим
[19:09.000 --> 19:11.960]  о следствии системы уравнений или системы неравенств?
[19:11.960 --> 19:13.720]  Давайте скажем это общими словами.
[19:13.720 --> 19:16.000]  У нас есть некоторое множество утверждений.
[19:16.000 --> 19:24.000]  Ну, в данном случае это два неравенства.
[19:24.000 --> 19:26.000]  Значит, неравенство – это утверждение.
[19:26.000 --> 19:27.600]  Оно либо истинно, либо ложно.
[19:27.600 --> 19:29.400]  Как распознать утверждение?
[19:29.400 --> 19:31.600]  Необходимым условием является то, что оно должно принимать
[19:31.600 --> 19:32.760]  логическое значение.
[19:32.760 --> 19:36.000]  Утверждение должно быть истинно или ложно.
[19:36.000 --> 19:38.320]  Если что-то не может принять логическое значение, это
[19:38.320 --> 19:39.320]  не утверждение.
[19:39.320 --> 19:42.600]  А во обратную сторону надо как-то еще что-то оговаривать.
[19:42.600 --> 19:45.920]  Итак, у нас есть набор утверждений и еще одно утверждение.
[19:45.920 --> 19:51.440]  Давайте вот это вот я f обозначу, вот это вот a.
[19:51.440 --> 19:56.280]  И что мы подразумеваем, когда говорим, что a является
[19:56.280 --> 19:58.120]  следствием f?
[19:58.120 --> 20:02.980]  Мы подразумеваем следующее, что если все, ну такое обычно
[20:02.980 --> 20:05.080]  и бывает, утверждение не просто утверждение, а в них
[20:05.080 --> 20:07.880]  есть еще какие-то параметры, которые могут переменные,
[20:08.040 --> 20:09.040]  понимать какие значения.
[20:09.040 --> 20:13.480]  И вот существенно что, что если мы уже зафиксировали
[20:13.480 --> 20:16.720]  значение всех переменных, то есть истинная или ложь
[20:16.720 --> 20:21.120]  для всех утверждений в f уже определена и они все оказались
[20:21.120 --> 20:24.040]  истинными, то тогда мы точно знаем, что утверждение
[20:24.040 --> 20:25.040]  a тоже истинно.
[20:25.040 --> 20:27.840]  Ну и посмотрите, действительно, если х больше единицы и
[20:27.840 --> 20:30.800]  х больше двух, то, конечно, для любого х, который удовлетворяет
[20:30.800 --> 20:32.280]  этим неравенством, он будет положительным.
[20:32.280 --> 20:34.560]  Это очевидно.
[20:35.520 --> 20:38.120]  А х больше трех такому свойству не удовлетворяет,
[20:38.120 --> 20:41.000]  потому что может быть число, скажем, два с половиной.
[20:41.000 --> 20:43.160]  Оно больше единицы, больше двух, но меньше трех.
[20:43.160 --> 20:47.760]  То есть все из f утверждения истинны, а а ложны.
[20:47.760 --> 20:52.960]  Вот если выполняется, мы это будем обозначать вот
[20:52.960 --> 20:57.560]  таким вот знаком формальным и говорить, что это следствие.
[20:57.560 --> 21:02.000]  Но я напоминаю, что в логике приходится держать два
[21:02.400 --> 21:04.560]  уровня рассуждения, это следствие содержательное,
[21:04.560 --> 21:06.240]  на уровне семантики.
[21:06.240 --> 21:08.100]  А у нас еще будут доказательства.
[21:08.100 --> 21:10.700]  И в доказательствах тоже будут появляться свои
[21:11.040 --> 21:11.680]  следствия.
[21:11.680 --> 21:15.720]  Мы зафиксировали, так условно я сейчас не буду конкретизировать.
[21:15.760 --> 21:18.160]  Аксиомы, я думаю, на таком уровне..
[21:18.160 --> 21:20.120]  Представляете как устроено формальное рассуждение?
[21:20.120 --> 21:21.140]  Зафиксировали аксиомы.
[21:21.140 --> 21:23.780]  Зафиксировали правила рассуждения и что-то выводим.
[21:23.840 --> 21:26.980]  И вот то что выводим, является следством того, что мы приняли
[21:26.980 --> 21:28.260]  в качестве аксиома.
[21:28.260 --> 21:31.680]  Но это другое следствие, не такого вида.
[21:31.680 --> 21:35.940]  Нужно их как-то различать, поэтому вот это вот следствие мы будем называть
[21:35.940 --> 21:44.620]  семантическим следствием. Другого долгое время у меня и не будет, но я буду
[21:44.620 --> 21:50.220]  стараться все время проговаривать это лишнее слово, чтобы вы понимали, что в
[21:50.220 --> 21:55.620]  конечном счете нам нужно два вида следствий. И цель в каком-то смысле в том
[21:55.620 --> 21:59.580]  логике и состоит, чтобы придумать такую формализацию, чтобы семантические
[21:59.580 --> 22:03.960]  следствия совпадали с синтоксическими. То есть, что мы можем доказать все, что на
[22:03.960 --> 22:11.100]  самом деле следует. Семантическое следствие, если у нас есть набор утверждений и
[22:11.100 --> 22:18.780]  еще одно утверждение, то А считается семантическим следствием СЗФ, если как
[22:18.780 --> 22:27.060]  только все утверждения СЗФ истинны, А тоже истинны. Почему, потому что у нас будут
[22:27.060 --> 22:32.700]  синтоксические следствия. Например, ну пример синтаксиса, я не хочу сильно это
[22:32.700 --> 22:36.020]  развивать, с системами линейных неравенств можно выполнять синтоксические
[22:36.020 --> 22:41.820]  операции. Брать сумму неравенств положительными коэффициентами, там
[22:41.820 --> 22:46.300]  добавлять, вычитать одинаковые члены слева и справа, умножать на положительное
[22:46.300 --> 22:50.060]  число, в общем, представляете, да, вот есть некоторые такие преобразования.
[22:50.060 --> 22:54.100]  Можно считать, что наша запись в виде неравенств это вот и есть синтаксис, а
[22:54.520 --> 22:57.600]  вот эти вот преобразования это правила формального изменения. То есть у нас есть
[22:57.620 --> 23:04.180]  равносильное преобразование, и все, что можно получить такими преобразованиями,
[23:04.180 --> 23:07.180]  скажем, если мы складываем, это неравносильное преобразование. Если я
[23:07.180 --> 23:10.900]  сложил два неравенства, получил, скажем, неравенство 2х больше 3, ну это,
[23:10.900 --> 23:16.500]  конечно, следствие и вот мы объявляем, что у нас вот синтаксис вот такой, всё что
[23:16.500 --> 23:21.380]  мы можем так построить это следствие. Ну, вот, если вы немножко подумайте, вы
[23:21.380 --> 23:27.720]  поймете, что такими естественными линейными преобразованиями вы не получите неравенство
[23:27.720 --> 23:33.680]  х больше нуля из этих двух неравенств. Потому что непонятно, почему вам разрешить вычитать.
[23:33.680 --> 23:39.480]  Правильный синтаксис в этом случае включает еще себя одно действие. Но давайте я все-таки теорию
[23:39.480 --> 23:44.360]  линейных неравенств не буду рассказывать. Я не знаю, кто вас и когда этому будет учить. По
[23:44.360 --> 23:49.200]  видимо, когда уже будут учить линейному программированию, вряд ли раньше, и там не очевидно,
[23:49.200 --> 23:53.780]  что прям про линейные неравенства будут говорить. Но именно с такой, с логической точки зрения. Но в
[23:53.780 --> 24:00.300]  принципе есть такой подход, который позволяет все это. На самом деле у нас будет пример очень
[24:00.300 --> 24:10.740]  похожий на этот. Но давайте пока не забегать вперед. Итак, вот это у нас появилось семантическое
[24:10.740 --> 24:18.020]  следствие. И теперь, наконец, я хочу перейти к конкретному примеру, где будут частности
[24:18.020 --> 24:31.220]  и семантическое следствие тоже. Это булливые функции. Ну, что такое булливая функция? Я думаю,
[24:31.220 --> 24:38.540]  вы знаете, с прошлого года у вас был курс, вводный курс комбинаторики. У него длинное название,
[24:38.540 --> 24:44.220]  поэтому я не берусь его воспроизвести. Но там аллоги, брологики, комбинаторики, теориографов.
[24:44.220 --> 24:49.220]  И булливые функции там почти заведомо появлялись. Ну, я напомню, это мы берем функцию, которая
[24:49.220 --> 24:56.780]  тотальную, то есть сюда определенную, которая словам длины n булливым сопоставляет 1 бит. То есть
[24:56.780 --> 25:02.180]  другими словами аргументы ее булливы и значения тоже булливые. Почему это интересно с точки
[25:02.180 --> 25:10.420]  зрения логики? 0 и 1 традиционно кодируют ложь и истина. То есть на это можно смотреть так. У
[25:10.420 --> 25:18.700]  нас есть некоторые высказывания, которые могут быть истинными или ложными. Их еще называют
[25:18.700 --> 25:27.580]  элементарные высказывания. Ну, вот переменные функции. А функция это составное высказывание.
[25:27.580 --> 25:42.620]  Ну, например, составным высказыванием может быть такое. Все высказывания иксы это истины. Что
[25:42.620 --> 25:46.980]  это за функция будет? Ну, я думаю, всем понятно, что это будет конъюнция. Такая функция у вас заведомо
[25:46.980 --> 25:55.300]  появлялась. И более-менее любое составное высказывание можно так изобразить. Почему? Потому
[25:55.300 --> 26:00.420]  что составное высказывание, его истинность зависит только от входящих и истинности или
[26:00.420 --> 26:05.980]  ложности входящих в него частей. Ну, тогда это и получается функция. Вот такая связь булливых
[26:05.980 --> 26:14.300]  функций и логики. И это в частности объясняет следующее определение. Что если у меня теперь уже
[26:14.300 --> 26:30.060]  есть множество? Ну, смотрите, у нас есть высказывание x1, xn, а f это какое-то составное высказывание,
[26:30.060 --> 26:37.300]  которое зависит от x1, xn. Вот, как пример, конъюнция. То есть, все иксы это истины. Это составное
[26:37.300 --> 26:42.820]  высказывание. Оно зависит от значений иксы, но от ничего больше не зависит. То есть, если
[26:43.020 --> 26:47.860]  все иксы это истинные, значит, и наше составное высказывание истинное, а иначе ложное. Но
[26:47.860 --> 26:52.840]  такому составному высказыванию соответствует булливая функция. Вы подставьте истинностное
[26:52.840 --> 26:59.940]  значение 0 и 1. Посмотрите, что ваше составное высказывание говорит, истинное оно или ложное.
[26:59.940 --> 27:06.300]  Если оно истинное, то значение функции равно 1, если оно ложное равно 0. То есть,
[27:06.300 --> 27:12.300]  два языка говорить об одном и том же. Просто, технически удобно говорить о булливых функциях,
[27:12.300 --> 27:16.300]  Ну а содержательно, в логике это нужно понимать, что это действительно составные высказывания.
[27:20.300 --> 27:25.300]  А, ну может быть даже прежде, чем я напишу определение семантического следствия,
[27:25.300 --> 27:29.300]  давайте сразу разберемся, вот у меня синтаксис и семантика еще с доски не ушли,
[27:29.300 --> 27:32.300]  давайте разберемся, что в этом примере синтаксис, а что семантика.
[27:33.300 --> 27:36.300]  О чем мы вообще рассуждаем? Мы рассуждаем о
[27:36.300 --> 27:42.300]  о составных высказываниях, которые зависят от каких-то элементарных.
[27:42.300 --> 27:46.300]  Ну и чтобы не ограничивать себя в количестве этих элементарных высказываний,
[27:46.300 --> 27:49.300]  мы будем считать, что их бесконечно много. У нас есть какой-то набор,
[27:49.300 --> 27:53.300]  можно сказать, булевых переменных или вот элементарных высказываний.
[27:56.300 --> 28:00.300]  И в сущности сейчас мы находимся в такой очень ограниченной
[28:00.300 --> 28:05.300]  семантике, вот мы о свойствах последностей 0 и 1, по сути дела, что-то хотим говорить.
[28:06.300 --> 28:09.300]  А что мы говорим? Если у нас есть функция,
[28:09.300 --> 28:14.300]  которая зависит там от каких-то переменных,
[28:15.300 --> 28:18.300]  что она нам говорит? Она нам говорит,
[28:18.300 --> 28:24.300]  какие значения стоят на третьем, седьмом и восьмом месте.
[28:24.300 --> 28:27.300]  То есть если мы говорим, что функция...
[28:27.300 --> 28:30.300]  Тут еще некоторое соглашение,
[28:30.300 --> 28:33.300]  что нас же интересует истинно или ложно, это высказывание.
[28:33.300 --> 28:35.300]  Оно истинно, если равна единице.
[28:35.300 --> 28:38.300]  Вот если функция от x3 к 7 и x8 равна единице,
[28:38.300 --> 28:44.300]  это значит, что на третьем, седьмом и восьмом месте
[28:44.300 --> 28:46.300]  стоят такие наборы истинных значений,
[28:46.300 --> 28:48.300]  которые гарантируют истинность этой функции.
[28:48.300 --> 28:50.300]  Там понятно из 8 возможных вариантов,
[28:50.300 --> 28:53.300]  какие-то будут давать 0, какие-то будут давать единицу.
[28:53.300 --> 28:56.300]  То есть мы выражаем такое свойство,
[28:56.300 --> 28:59.300]  что на конкретных местах конечном количестве
[28:59.300 --> 29:03.300]  стоят какие-то значения, а другие стоять не могут.
[29:03.300 --> 29:05.300]  То есть вот это выразительное средство.
[29:05.300 --> 29:09.300]  Согласитесь, вроде бы не очень многом,
[29:09.300 --> 29:12.300]  но тем не менее,
[29:15.300 --> 29:19.300]  в таком странном и, казалось бы, очень убогом виде
[29:19.300 --> 29:22.300]  можно представлять вполне себе содержательные теоремы.
[29:22.300 --> 29:24.300]  Вот давайте...
[29:31.300 --> 29:33.300]  Давайте поймем, как с помощью булевой функции выразить
[29:33.300 --> 29:35.300]  какое-нибудь свойство графов.
[29:35.300 --> 29:37.300]  Вот, например, что граф Гамильтонов.
[29:37.300 --> 29:40.300]  Гамильтонов, вы помните, должен быть Гамильтонов цикл.
[29:40.300 --> 29:43.300]  Такой цикл, который проходит через каждую вершину ровно по разу.
[29:43.300 --> 29:47.300]  Ну и граф, давайте считать, неориентированный для определенности.
[29:47.300 --> 29:49.300]  Тогда...
[29:51.300 --> 29:53.300]  Что нам нужно? У нас...
[29:55.300 --> 29:57.300]  Как это встроить в нашу схему
[29:57.300 --> 29:59.300]  с последовательностями 0 единиц?
[29:59.300 --> 30:01.300]  Но надо вспомнить, что пар натуральных чисел
[30:01.300 --> 30:03.300]  тоже счетное количество.
[30:03.300 --> 30:05.300]  И использовать переменные не вот как я написал
[30:05.300 --> 30:09.300]  x1, xn, а переменные x и t, x и gt.
[30:09.300 --> 30:11.300]  Которые говорят следующее,
[30:11.300 --> 30:13.300]  что если у графа есть вершина и и g,
[30:13.300 --> 30:17.300]  есть ли ребро между этими двумя вершинами?
[30:19.300 --> 30:21.300]  Тогда если я выберу
[30:29.300 --> 30:33.300]  какие-то переменные вот в таком диапазоне,
[30:33.300 --> 30:35.300]  это часть всего бесконечного множества переменных,
[30:35.300 --> 30:39.300]  придам им значение 0 и 1, я закодирую граф.
[30:40.300 --> 30:42.300]  У меня будет известно, какой у меня граф.
[30:42.300 --> 30:46.300]  На самом деле тут даже не просто не равно,
[30:46.300 --> 30:49.300]  поскольку я сейчас про неориентированные графы говорю,
[30:49.300 --> 30:51.300]  нужно сказать, что и меньше g,
[30:51.300 --> 30:54.300]  потому что x и gt должно совпадать с x и gt,
[30:54.300 --> 30:57.300]  можно это избежать, чтобы лишних условий не писать,
[30:57.300 --> 31:00.300]  просто написать, что мы только такие переменные рассматриваем.
[31:00.300 --> 31:02.300]  У нас появляется граф.
[31:02.300 --> 31:06.300]  И дальше, например, свойства графа Гамильтона.
[31:06.300 --> 31:08.300]  Это некоторая функция.
[31:12.300 --> 31:16.300]  И я не хочу слишком углубляться в это дело,
[31:16.300 --> 31:20.300]  но я думаю, всем понятно, что таким способом
[31:20.300 --> 31:22.300]  в нашу вроде бы убогую семантику
[31:22.300 --> 31:26.300]  можно загнать утверждение любых конечных объектов.
[31:26.300 --> 31:28.300]  Ну, вот я о графе загнал,
[31:28.300 --> 31:30.300]  а представьте, что у вас не граф,
[31:30.300 --> 31:32.300]  а какое-нибудь там либо отношение,
[31:32.300 --> 31:34.300]  наконец-то у вас есть вершина,
[31:34.300 --> 31:36.300]  то есть у вас есть вершина,
[31:36.300 --> 31:38.300]  то есть у вас есть вершина,
[31:38.300 --> 31:40.300]  но представьте, что у вас не граф,
[31:40.300 --> 31:43.300]  а какое-нибудь там либо отношение на конечных множествах,
[31:43.300 --> 31:45.300]  либо какая-то функция, либо еще что-то такое.
[31:45.300 --> 31:48.300]  Ну, понятно, что нужно сделать примерно то же самое.
[31:48.300 --> 31:50.300]  Нужно просто завести переменные,
[31:50.300 --> 31:52.300]  отвечающие возможным элементам.
[31:52.300 --> 31:54.300]  То есть все можно определить через множество,
[31:54.300 --> 31:56.300]  ну и вот будет булевая переменная,
[31:56.300 --> 31:59.300]  что вот такой элемент входит или не входит в множество.
[31:59.300 --> 32:02.300]  То есть любой конечный объект можно так представить
[32:02.300 --> 32:05.300]  после некоторых усилий в виде конечного множества.
[32:05.300 --> 32:07.300]  Ну, вот как я сейчас, скажем, это сделал.
[32:07.300 --> 32:09.300]  Что граф, это множество ребер,
[32:09.300 --> 32:11.300]  и вот так вот я представил его.
[32:11.300 --> 32:13.300]  Таким образом,
[32:13.300 --> 32:17.300]  вроде бы семантика достаточно бедная,
[32:17.300 --> 32:19.300]  но при этом
[32:19.300 --> 32:22.300]  ну что-то интересное в ней сказать, наверное, можно.
[32:22.300 --> 32:24.300]  И
[32:25.300 --> 32:27.300]  говорить можно разные вещи.
[32:27.300 --> 32:29.300]  Я сразу, поскольку я ввел
[32:29.300 --> 32:31.300]  семантическое следствие,
[32:31.300 --> 32:33.300]  это вот для нас будет основное,
[32:33.300 --> 32:35.300]  что мы хотим выражать,
[32:35.300 --> 32:38.300]  я сразу специфицирую это определение
[32:38.300 --> 32:41.300]  для булевых функций. Пусть f множество булевых функций.
[32:48.300 --> 32:51.300]  Булевые функции я сокращенно напишу.
[32:51.300 --> 32:54.300]  И какая-нибудь f мало, это просто булева функция.
[32:54.300 --> 32:57.300]  Тогда мы говорим, что
[32:57.300 --> 33:00.300]  f мало следует из f большое.
[33:06.300 --> 33:09.300]  Ну, f такое курсивное, а там а было.
[33:09.300 --> 33:11.300]  Ну, сейчас мне удобно.
[33:11.300 --> 33:13.300]  Значит, смотрите, у меня,
[33:13.300 --> 33:16.300]  я сейчас совершаю некоторые актуальные мысли,
[33:16.300 --> 33:18.300]  потому что когда я говорю о функциях,
[33:18.300 --> 33:20.300]  я на самом деле имею в виду утверждение.
[33:20.300 --> 33:22.300]  f от x
[33:22.300 --> 33:24.300]  равно единице.
[33:26.300 --> 33:29.300]  Понятно, да? То есть я говорю о множестве функций,
[33:29.300 --> 33:31.300]  или об одной функции,
[33:31.300 --> 33:33.300]  но я имею в виду утверждение,
[33:33.300 --> 33:36.300]  что соответствующая функция равна единице.
[33:36.300 --> 33:39.300]  То есть можно считать в духе предыдущего примера,
[33:39.300 --> 33:42.300]  что я рассматриваю систему уравнений булевых.
[33:42.300 --> 33:46.300]  Вот функция из множества f красивая равна единице.
[33:46.300 --> 33:48.300]  Вот у меня есть такая система уравнения.
[33:48.300 --> 33:50.300]  Она при каких-то значениях переменных выполняется,
[33:50.300 --> 33:52.300]  при каких-то одно из переменных не выполняется.
[33:52.300 --> 33:54.300]  Значит, это недопустимое значение.
[33:54.300 --> 33:56.300]  Ну, и есть еще одна функция.
[33:56.300 --> 33:58.300]  И определение следования точно такое же,
[33:58.300 --> 34:00.300]  как для систем линейных уравнений.
[34:00.300 --> 34:02.300]  То есть это вот по определению
[34:04.300 --> 34:07.300]  Рассказ здесь не идеальная.
[34:08.300 --> 34:11.300]  По определению это означает,
[34:11.300 --> 34:17.300]  что если g от x равно единице
[34:17.300 --> 34:22.300]  для всех функций из вот этого множества,
[34:22.300 --> 34:28.300]  то тогда f от x тоже равно единице.
[34:28.300 --> 34:31.300]  То есть сейчас, когда я говорю о булевых функциях,
[34:31.300 --> 34:33.300]  еще раз подчеркну.
[34:33.300 --> 34:35.300]  Вот здесь на доске это написано.
[34:35.300 --> 34:37.300]  Я имею в виду под функцией высказывание.
[34:37.300 --> 34:39.300]  То есть нас интересует, когда оно истинно.
[34:44.300 --> 34:46.300]  Ну, это некоторые такой
[34:46.300 --> 34:49.300]  общегоупотребительные в этом месте двоемыслия.
[34:49.300 --> 34:51.300]  Обычно говорят о функциях,
[34:51.300 --> 34:53.300]  хотя речь идет об высказываниях.
[34:53.300 --> 34:58.300]  Тут, в общем, пока еще запутаться не так уж сложно.
[34:58.300 --> 35:00.300]  Можно не запутаться.
[35:00.300 --> 35:03.300]  Ну вот, это определение совершенно такое же,
[35:03.300 --> 35:05.300]  как было в общем виде,
[35:05.300 --> 35:08.300]  просто для этой конкретной ситуации специфицировано.
[35:08.300 --> 35:10.300]  Мы зафиксировали вид утверждений.
[35:10.300 --> 35:12.300]  Давайте какой-нибудь пример разберем.
[35:17.300 --> 35:19.300]  Я его напишу формально,
[35:19.300 --> 35:21.300]  чтобы место на доске экономить,
[35:21.300 --> 35:26.300]  а смысл значков на словах скажу.
[35:26.300 --> 35:28.300]  У нас есть две булевые функции.
[35:28.300 --> 35:30.300]  Она равна единице,
[35:30.300 --> 35:34.300]  если количество единиц среди аргументов этой функции нечетно.
[35:34.300 --> 35:37.300]  То есть сумма по модулю два аргумента.
[35:37.300 --> 35:41.300]  А вторая функция называется дизъюнкция.
[35:41.300 --> 35:44.300]  Я ее написал словами,
[35:44.300 --> 35:47.300]  имею в виду некоторый умысел.
[35:53.300 --> 35:54.300]  И она равна единице,
[35:54.300 --> 35:57.300]  если хотя бы один из аргументов равен единице.
[35:57.300 --> 35:59.300]  Такое определение дизъюнкции,
[35:59.300 --> 36:01.300]  как оно у вас и было,
[36:01.300 --> 36:03.300]  когда вам вводили дизъюнкцию.
[36:03.300 --> 36:05.300]  И я утверждаю,
[36:05.300 --> 36:08.300]  что из ксора семантически следует дизъюнкция.
[36:08.300 --> 36:10.300]  Ну почему? Давайте подумаем.
[36:10.300 --> 36:13.300]  Что значит, что ксор равен единице?
[36:13.300 --> 36:17.300]  Это значит, что количество единиц среди аргументов нечетно.
[36:19.300 --> 36:22.300]  Ну а нечетно это значит положительно.
[36:22.300 --> 36:24.300]  Нольчетное число.
[36:24.300 --> 36:28.300]  Здесь хотя бы один аргумент равный единице.
[36:28.300 --> 36:30.300]  Ну а дизъюнкции одного достаточно,
[36:30.300 --> 36:33.300]  поэтому дизъюнкция обязательно равна единице.
[36:33.300 --> 36:35.300]  Вот в обратную сторону неверно,
[36:35.300 --> 36:43.300]  потому что, скажем, дизъюнкция от набора 1,1,0 равна единице,
[36:43.300 --> 36:49.300]  а ксор от этого набора равен нулю.
[36:49.300 --> 36:52.300]  Поэтому в обратную сторону следствия нет.
[36:52.300 --> 36:55.300]  То есть эти высказывания, как говорят, неравносильны.
[37:02.300 --> 37:04.300]  Множество. А здесь написана одна функция.
[37:04.300 --> 37:07.300]  Формально я должен был бы написать вот так.
[37:07.300 --> 37:09.300]  Значит, это вы правы.
[37:09.300 --> 37:11.300]  Но это тоже будет наше.
[37:11.300 --> 37:12.300]  Значит, у меня будет так.
[37:12.300 --> 37:13.300]  Я буду давать определение.
[37:13.300 --> 37:17.300]  Тут поскольку формализм очень громоздкий,
[37:17.300 --> 37:19.300]  люди придумали, как с этим справляться,
[37:19.300 --> 37:21.300]  допуская некоторые вольности.
[37:21.300 --> 37:23.300]  Вот сейчас я такую вольность продемонстрировал.
[37:23.300 --> 37:26.300]  Одно элементное множество я просто записал как сам элемент.
[37:26.300 --> 37:29.300]  Еще я буду писать через запятую.
[37:29.300 --> 37:31.300]  То есть будет что-нибудь в таком духе f.
[37:31.300 --> 37:33.300]  Сейчас появится.
[37:33.300 --> 37:35.300]  Буквально через минуту.
[37:35.300 --> 37:39.300]  Ну и дальше тоже я буду вводить какую-то формальную конструкцию,
[37:39.300 --> 37:42.300]  а потом говорить, ну а вот вообще-то на письме мы будем что-то упрощать.
[37:42.300 --> 37:44.300]  Уже сегодня такое появится.
[37:44.300 --> 37:47.300]  Формально, да, надо записать вот так.
[37:47.300 --> 37:49.300]  Я полностью с вами согласен.
[37:49.300 --> 37:54.300]  Значит, давайте рассмотрим.
[37:54.300 --> 37:56.300]  Осталось три минуты до перерыва.
[37:56.300 --> 37:59.300]  И за это время, я думаю, мы успеем рассмотреть два крайних случая.
[38:05.300 --> 38:07.300]  Может так случиться, что посылки,
[38:07.300 --> 38:09.300]  вот это множество f еще называется посылками.
[38:11.300 --> 38:13.300]  Что оно вообще пустое.
[38:13.300 --> 38:17.300]  Какие функции следуют из пустого множества?
[38:21.300 --> 38:23.300]  Нет, если бы.
[38:25.300 --> 38:31.300]  Это равносильно тому, что f от x всегда равно единице.
[38:33.300 --> 38:37.300]  Дело в том, что какой набор значений переменных вы не возьмете,
[38:37.300 --> 38:40.300]  все функции из пустого множества равны единице на нем.
[38:40.300 --> 38:43.300]  Все функции из пустого множества равны единице на нем.
[38:43.300 --> 38:45.300]  Это утверждение истины.
[38:47.300 --> 38:51.300]  Значит, наша функция тоже должна быть равна единице.
[38:52.300 --> 38:56.300]  Кого-то может шокировать такое рассуждение.
[38:56.300 --> 38:58.300]  Давайте, когда я введу более подробный формализм,
[38:58.300 --> 39:00.300]  нам все равно нужно будет какие-то примеры разбирать,
[39:00.300 --> 39:02.300]  мы к этому вернемся.
[39:02.300 --> 39:06.300]  Это на самом деле следствие того, как определена в логике импликация.
[39:06.300 --> 39:08.300]  Это мы прям сегодня введем.
[39:10.300 --> 39:12.300]  У вас была импликация, думаю, год назад.
[39:12.300 --> 39:14.300]  Вы знаете, что это такое.
[39:14.300 --> 39:17.300]  Такая булева функция, которая обладает определенными свойствами.
[39:17.300 --> 39:21.300]  Но и в частности, из лжи следует в том числе истина.
[39:21.300 --> 39:24.300]  Из лжи следует истина. Это истинное утверждение.
[39:26.300 --> 39:28.300]  По этой причине нужно вот так рассуждать.
[39:28.300 --> 39:30.300]  Почему это?
[39:30.300 --> 39:32.300]  Сказать лучше позже.
[39:32.300 --> 39:36.300]  Наконец, давайте посмотрим на такую функцию.
[39:38.300 --> 39:41.300]  Давайте я ее прям вот так вот сразу обозначу.
[39:41.300 --> 39:44.300]  Вот такой значок, как перпендикуляр в геометрии,
[39:44.300 --> 39:46.300]  логики обозначают ложь.
[39:46.300 --> 39:50.300]  Ну и родственные понятия так обозначают.
[39:50.300 --> 39:52.300]  В частности, я буду так обозначать функцию,
[39:52.300 --> 39:54.300]  которая тождественно равна нулю.
[39:56.300 --> 39:58.300]  И давайте посмотрим, когда...
[39:58.300 --> 40:00.300]  Ага, ну, не успел.
[40:00.300 --> 40:03.300]  Значит, в перерыве вы можете подумать,
[40:03.300 --> 40:06.300]  когда такая функция, тождественная ложь
[40:06.300 --> 40:09.300]  является следствием какой-то системы функций.
[40:09.300 --> 40:14.300]  Давайте все-таки не будем комкать, после перерыва продолжим.
[40:14.300 --> 40:17.300]  И я начну с важного замечания.
[40:17.300 --> 40:19.300]  Мне тут напомнили,
[40:19.300 --> 40:23.300]  что у вас по этому курсу будет не экзамен,
[40:23.300 --> 40:25.300]  не экзамен, а зачет.
[40:25.300 --> 40:27.300]  Не экзамен, а зачет.
[40:27.300 --> 40:29.300]  Я точно не знаю, потому что на самом деле
[40:29.300 --> 40:31.300]  этот курс только появился.
[40:31.300 --> 40:33.300]  И я сам толком не знаю.
[40:33.300 --> 40:36.300]  История такая, долгое время, много лет был экзамен.
[40:36.300 --> 40:39.300]  Потом, в прошлом году, внезапно,
[40:39.300 --> 40:41.300]  экзамен исчез просто посреди семестра.
[40:41.300 --> 40:44.300]  То есть где-то в начале ноября мне студенты сказали,
[40:44.300 --> 40:46.300]  у нас в расписании сессии нет такого экзамена,
[40:46.300 --> 40:48.300]  а вы обещали экзамен.
[40:48.300 --> 40:50.300]  И я с удивлением обнаружил,
[40:50.300 --> 40:52.300]  что да, уже оставили только зачет.
[40:52.300 --> 40:54.300]  Поэтому правила будут немножко не такие,
[40:54.300 --> 40:56.300]  как на алгебре, где есть экзамен.
[40:56.300 --> 40:58.300]  А правила будут такие,
[40:58.300 --> 41:00.300]  что раз зачет с оценкой его будет выставлять
[41:00.300 --> 41:02.300]  преподаватель семинаров,
[41:02.300 --> 41:04.300]  и он уже объяснит правила.
[41:04.300 --> 41:06.300]  Я буду как раз тоже выставлять
[41:06.300 --> 41:08.300]  100-балльную оценку,
[41:08.300 --> 41:10.300]  и потом корректировать 10-балльную.
[41:10.300 --> 41:12.300]  Потому что я уже так привык много лет делать,
[41:12.300 --> 41:14.300]  и мне не хочется это менять,
[41:14.300 --> 41:16.300]  а потом в следующий раз снова менять,
[41:16.300 --> 41:18.300]  потому что вернут экзамен.
[41:18.300 --> 41:20.300]  Да, это важно,
[41:20.300 --> 41:22.300]  но единственное, давайте это держать в голове.
[41:22.300 --> 41:24.300]  Я уточню, я забыл посмотреть,
[41:24.300 --> 41:26.300]  честно говоря, это важная вещь,
[41:26.300 --> 41:28.300]  тем более что курс новый, это моя недоработка.
[41:28.300 --> 41:30.300]  Но
[41:30.300 --> 41:32.300]  время еще есть,
[41:32.300 --> 41:34.300]  выяснить зачет или экзамен
[41:34.300 --> 41:36.300]  мы успеем.
[41:36.300 --> 41:38.300]  Давайте вернемся к этому вопросу.
[41:38.300 --> 41:40.300]  Итак, есть множество функций,
[41:40.300 --> 41:42.300]  из которого следует тождественная ложь.
[41:42.300 --> 41:44.300]  Что это за множество?
[41:46.300 --> 41:48.300]  Это множество должно
[41:48.300 --> 41:50.300]  обладать таким свойством.
[41:50.300 --> 41:52.300]  Если у нас есть значение переменных,
[41:52.300 --> 41:54.300]  хотя бы одна из функций равна нулю.
[41:54.300 --> 41:56.300]  Представьте, что на каком-то наборе значения переменных
[41:56.300 --> 41:58.300]  все функции обращаются в единицу.
[41:58.300 --> 42:00.300]  Тогда, по нашему определению,
[42:00.300 --> 42:02.300]  вот эта функция тоже должна равняться единице,
[42:02.300 --> 42:04.300]  а она всегда ноль.
[42:04.300 --> 42:06.300]  Чтобы удовлетворить этому
[42:06.300 --> 42:08.300]  определению, нам нужно, чтобы
[42:08.300 --> 42:10.300]  хотя бы одна из функций этого множества
[42:10.300 --> 42:12.300]  обращалась бы в ноль.
[42:12.300 --> 42:14.300]  Такие множества
[42:14.300 --> 42:16.300]  называются несовместными.
[42:20.300 --> 42:22.300]  И это понятно, откуда восходит.
[42:22.300 --> 42:24.300]  Напомню, что мы же
[42:24.300 --> 42:26.300]  говорим про множество функций,
[42:26.300 --> 42:28.300]  но подразумеваем систему уравнений.
[42:28.300 --> 42:30.300]  f от x равно единице
[42:30.300 --> 42:32.300]  для какого-то множества функций.
[42:32.300 --> 42:34.300]  И это
[42:34.300 --> 42:36.300]  обычное понятие,
[42:36.300 --> 42:38.300]  несовместная система уравнения, означает,
[42:38.300 --> 42:40.300]  что у нее нет решений. Это ровно то, что нам нужно.
[42:40.300 --> 42:42.300]  И это
[42:42.300 --> 42:44.300]  будет для нас очень важное понятие.
[42:44.300 --> 42:46.300]  Поэтому я сразу
[42:46.300 --> 42:48.300]  несложную лему
[42:48.300 --> 42:50.300]  логическую докажу про него.
[42:50.300 --> 42:52.300]  На самом деле можно было
[42:52.300 --> 42:54.300]  ограничиться только понятием
[42:54.300 --> 42:56.300]  несовместной системы,
[42:56.300 --> 42:58.300]  потому что
[43:00.300 --> 43:02.300]  семантическое следствие
[43:02.300 --> 43:04.300]  из f следует g,
[43:04.300 --> 43:06.300]  оно равносильно
[43:06.300 --> 43:08.300]  тому, что
[43:08.300 --> 43:10.300]  из f
[43:10.300 --> 43:12.300]  и отрицание g
[43:12.300 --> 43:14.300]  следует уже тождественноложно.
[43:14.300 --> 43:16.300]  Отрицание g определяется очень просто.
[43:16.300 --> 43:18.300]  Но равно единице,
[43:18.300 --> 43:20.300]  если
[43:20.300 --> 43:22.300]  сама g равна 0
[43:22.300 --> 43:24.300]  и равно 0
[43:24.300 --> 43:26.300]  иначе.
[43:26.300 --> 43:28.300]  То есть инвертируем значение функции.
[43:28.300 --> 43:30.300]  И вот такое
[43:30.300 --> 43:32.300]  несложное утверждение
[43:32.300 --> 43:34.300]  о том, что это
[43:34.300 --> 43:36.300]  равносильно. Сказать, что g является
[43:36.300 --> 43:38.300]  семантическим следствием f,
[43:38.300 --> 43:40.300]  или что f и отрицание g
[43:40.300 --> 43:42.300]  несовместно.
[43:42.300 --> 43:44.300]  Давайте разберемся, почему тут очень
[43:44.300 --> 43:46.300]  много случаев. Смотрите, предположим, что
[43:50.300 --> 43:52.300]  вот это выполняется.
[43:52.300 --> 43:54.300]  Тогда, если
[43:54.300 --> 43:56.300]  f от
[43:56.300 --> 43:58.300]  x равно единице
[43:58.300 --> 44:00.300]  для всех
[44:00.300 --> 44:02.300]  функций
[44:02.300 --> 44:04.300]  нашего семейства,
[44:04.300 --> 44:06.300]  то g
[44:06.300 --> 44:08.300]  обязательно
[44:08.300 --> 44:10.300]  должно
[44:10.300 --> 44:12.300]  равняться единице. То есть
[44:12.300 --> 44:14.300]  отрицание g равняется 0.
[44:14.300 --> 44:16.300]  Ну и тогда
[44:16.300 --> 44:18.300]  на таком наборе значений переменных
[44:18.300 --> 44:20.300]  вот это множество уже
[44:20.300 --> 44:22.300]  не обращается все в единицу,
[44:22.300 --> 44:24.300]  потому что все в единицу,
[44:24.300 --> 44:26.300]  а вот это вот ноль.
[44:26.300 --> 44:28.300]  Ну а если какая-то из этих ноль,
[44:28.300 --> 44:30.300]  то
[44:32.300 --> 44:34.300]  и ладно,
[44:34.300 --> 44:36.300]  уже ноль появился.
[44:36.300 --> 44:38.300]  То есть
[44:38.300 --> 44:40.300]  в эту сторону мы доказали. Теперь давайте посмотрим.
[44:40.300 --> 44:42.300]  Предположим, вот такая система несовместна.
[44:42.300 --> 44:44.300]  Что это означает?
[44:44.300 --> 44:46.300]  Это означает, что если
[44:46.300 --> 44:48.300]  все функции f
[44:48.300 --> 44:50.300]  на каком-то наборе значений переменных
[44:50.300 --> 44:52.300]  обратились в единицу,
[44:52.300 --> 44:54.300]  система несовместна. Значит, на этом наборе значений переменных
[44:54.300 --> 44:56.300]  отрицание g должно быть нулем.
[44:56.300 --> 44:58.300]  Иначе бы она была совместна.
[44:58.300 --> 45:00.300]  Мы нашли бы набор, на котором все функции
[45:00.300 --> 45:02.300]  равны единице. Ну а раз отрицание g
[45:02.300 --> 45:04.300]  равно нулю, то g равно единице.
[45:04.300 --> 45:06.300]  Вот это ровно то, что у нас написано
[45:06.300 --> 45:08.300]  в определении семантического следства.
[45:08.300 --> 45:10.300]  Таким образом видно, что
[45:14.300 --> 45:16.300]  это равносильное понятие.
[45:18.300 --> 45:20.300]  И к несовместному
[45:20.300 --> 45:22.300]  про несовместное множество функций
[45:22.300 --> 45:24.300]  можно доказать теорему, не сложную,
[45:24.300 --> 45:26.300]  но важную, которая вообще
[45:26.300 --> 45:28.300]  для логики играет очень большую
[45:28.300 --> 45:30.300]  роль.
[45:30.300 --> 45:32.300]  Давайте я, наверное, вот здесь
[45:32.300 --> 45:34.300]  сотру.
[45:38.300 --> 45:40.300]  То есть у нас сегодня никаких
[45:40.300 --> 45:42.300]  сложных
[45:42.300 --> 45:44.300]  утверждений не будет,
[45:44.300 --> 45:46.300]  и даже сложных определений не будет.
[45:46.300 --> 45:48.300]  Сейчас под конец лекции пойдут
[45:48.300 --> 45:50.300]  чуть более сложные определения.
[45:52.300 --> 45:54.300]  В обратную сторону.
[45:54.300 --> 45:56.300]  Смотрите, множество
[45:56.300 --> 45:58.300]  функций f и отрицание g
[45:58.300 --> 46:00.300]  несовместно.
[46:00.300 --> 46:02.300]  Что это означает? Что если
[46:02.300 --> 46:04.300]  на каком-то наборе значений переменных
[46:04.300 --> 46:06.300]  все из f обратились в единицу,
[46:06.300 --> 46:08.300]  то раз оно не совместно, значит
[46:08.300 --> 46:10.300]  отрицание g должно обратиться в ноль.
[46:10.300 --> 46:12.300]  Ну иначе было бы совместно.
[46:12.300 --> 46:14.300]  А раз отрицание g
[46:14.300 --> 46:16.300]  обращается в ноль, значит само же обращается в единицу.
[46:16.300 --> 46:18.300]  Это и есть
[46:18.300 --> 46:20.300]  определение семантического следства.
[46:24.300 --> 46:26.300]  Значит, это называется
[46:26.300 --> 46:28.300]  теорема компактности.
[46:28.300 --> 46:30.300]  Давайте я даже прежде, чем
[46:30.300 --> 46:32.300]  саму теорему выписывать,
[46:32.300 --> 46:34.300]  напишу, чем она все-таки
[46:34.300 --> 46:36.300]  отличается от чего-то другого.
[46:38.300 --> 46:40.300]  Давайте рассмотрим бесконечную
[46:40.300 --> 46:42.300]  систему неравенства.
[46:42.300 --> 46:44.300]  Давайте рассмотрим бесконечную систему неравенства.
[46:44.300 --> 46:46.300]  İş больше один, больше двух, больше н больше
[46:46.300 --> 46:48.300]  любого положительного числа.
[46:48.300 --> 46:50.300]  Ну, думаю всем понятно, что эта система
[46:50.300 --> 46:52.300]  не совместна.
[46:52.300 --> 46:54.300]  У нас нет наибольшего числа, то есть
[46:54.300 --> 46:56.300]  всегда, какой бы мы
[46:56.300 --> 46:58.300]  число не взяли, найдется натуральное число,
[46:58.300 --> 47:00.300]  которое больше, чем это.
[47:00.300 --> 47:02.300]  Значит, система не совместна.
[47:02.300 --> 47:07.900]  Другой стороны, если я возьму какую-нибудь конечную подсистему, то есть оставлю только конечное количество неравенства,
[47:07.900 --> 47:10.900]  то такая система будет уже совместна обязательно.
[47:10.900 --> 47:14.500]  То есть если у вас написано конечное число вот таких вот неравенств,
[47:14.500 --> 47:17.700]  ну понятно, какое-то число там в правой части самое большое,
[47:17.700 --> 47:22.300]  ну и ясно, что решение есть все иксы, которые больше этого самого большого будут решать.
[47:24.300 --> 47:26.900]  То есть если мы говорим про линейное неравенство,
[47:26.900 --> 47:32.200]  несовместность бесконечной системы, она вот так может оказаться сложной.
[47:32.200 --> 47:36.800]  Что все конечные подсистемы совместны, а несовместность она в таком, в пределе.
[47:36.800 --> 47:39.600]  Так вот, для булевых функций это не так.
[47:39.600 --> 47:42.200]  Собственно, это и есть теорема, которую я хочу доказать.
[47:42.200 --> 47:44.600]  Она называется теорема компактности.
[47:54.200 --> 47:57.600]  Значит, если у нас есть несовместная система,
[47:58.600 --> 48:08.600]  то существует конечная подсистема, то есть под множество,
[48:13.600 --> 48:15.600]  которая тоже несовместна.
[48:17.600 --> 48:19.600]  То есть в случае булевых уравнений,
[48:19.600 --> 48:22.600]  если у нас даже есть бесконечное количество уравнений,
[48:22.600 --> 48:25.600]  и мы знаем, что система получилась несовместной,
[48:25.600 --> 48:27.600]  мы знаем, что препятствие будет описываться
[48:27.600 --> 48:30.600]  конечным количеством уравнений системы.
[48:30.600 --> 48:34.600]  Каким именно мы не знаем, если система достаточно сложная,
[48:34.600 --> 48:36.600]  может быть это и не так легко определить,
[48:36.600 --> 48:39.600]  но существенно, что такая конечная система есть.
[48:39.600 --> 48:41.600]  Это очень важный факт.
[48:41.600 --> 48:44.600]  В каком-то смысле на нем построены основные доказательства
[48:44.600 --> 48:48.600]  самых важных принципиальных теорем и логики.
[48:48.600 --> 48:51.600]  Сейчас пока совершенно неясно, какое это имеет отношение к логике,
[48:51.600 --> 48:53.600]  к доказательствам и так далее,
[48:53.600 --> 49:00.600]  поверьте, что это и есть тот мотор,
[49:00.600 --> 49:02.600]  на котором работают все доказательства.
[49:02.600 --> 49:04.600]  Давайте ее докажем.
[49:04.600 --> 49:07.600]  Теорема не сложная, но все-таки надо бы ее доказать.
[49:07.600 --> 49:09.600]  Тут мне сразу понадобится некоторое понятие,
[49:09.600 --> 49:14.600]  которое, я думаю, вам до какой-то степени известно,
[49:14.600 --> 49:15.600]  но я напомню.
[49:15.600 --> 49:21.600]  Есть такое понятие, как корневое дерево.
[49:21.600 --> 49:26.600]  Наверное, вам в курсе алгебры, логики, комбинаторики
[49:26.600 --> 49:28.600]  такое понятие как-то возникало.
[49:28.600 --> 49:30.600]  Ну или, по крайней мере, в алгоритмах возникало.
[49:30.600 --> 49:33.600]  В общем, представляете, что такое корневое дерево.
[49:33.600 --> 49:36.600]  Так, судя по реакции, лучше про это хоть пару слов сказать.
[49:36.600 --> 49:37.600]  А что такое дерево?
[49:37.600 --> 49:38.600]  Это уж точно было.
[49:38.600 --> 49:41.600]  Раз были графы, то без деревьев не обошлось.
[49:41.600 --> 49:42.600]  Очень хорошо.
[49:42.600 --> 49:45.600]  Корневое дерево – это дерево, в котором отмечена вершина,
[49:45.600 --> 49:47.600]  которая называется корнем.
[49:48.600 --> 49:52.600]  Но мне нужно, чуть более сложное понятие,
[49:52.600 --> 49:54.600]  которого у вас, наверное, не было,
[49:54.600 --> 49:58.600]  а мне нужно, чтобы, значит, тут есть корень,
[49:58.600 --> 50:00.600]  у каждого корня есть сыновья.
[50:00.600 --> 50:03.600]  Вершина, которая непосредственно под ним.
[50:03.600 --> 50:04.600]  Ну и так далее.
[50:04.600 --> 50:07.600]  И вот мне нужны деревья, которые, вообще говоря,
[50:07.600 --> 50:10.600]  у нас будут возникать такие деревья, бесконечные.
[50:10.600 --> 50:15.600]  Причем бесконечными они могут быть в ширину и в глубину.
[50:15.600 --> 50:18.600]  В ширину это значит, что у какого-то узла дерева
[50:18.600 --> 50:20.600]  бесконечное количество потомков.
[50:20.600 --> 50:23.600]  Такое, в принципе, тоже можно себе представить.
[50:23.600 --> 50:26.600]  Вообще корень, и у него бесконечное количество потомков.
[50:26.600 --> 50:27.600]  Ну, дерево.
[50:28.600 --> 50:30.600]  Но это не интересный случай.
[50:30.600 --> 50:33.600]  Интересный случай, когда количество потомков конечном.
[50:39.600 --> 50:40.600]  Что?
[50:40.600 --> 50:41.600]  Что?
[50:49.600 --> 50:50.600]  Конечный.
[50:50.600 --> 50:52.600]  Вот как я сказал, конечный.
[50:52.600 --> 50:54.600]  Значит, ляма о дереве.
[50:54.600 --> 51:00.600]  Если степень всех вершин конечный...
[51:07.600 --> 51:09.600]  Вопрос правильный, хотя буквально такой пример нам не нужен,
[51:09.600 --> 51:11.600]  но, вообще говоря, такая ситуация тоже.
[51:11.600 --> 51:13.600]  Возможно, что они конечны, но не ограничены.
[51:13.600 --> 51:19.600]  Если в степени всех вершин конечны
[51:21.600 --> 51:23.600]  и нет бесконечной ветви...
[51:24.600 --> 51:27.600]  Бесконечная ветвь, это понятно, что такое.
[51:27.600 --> 51:31.600]  Это такой путь бесконечный, который начинается в корне,
[51:31.600 --> 51:34.600]  спускается в один из сыновей корни и так далее.
[51:34.600 --> 51:37.600]  И продолжается вот такое бесконечное количество раз.
[51:37.600 --> 51:39.600]  Дерево может быть бесконечным в глубину.
[51:39.600 --> 51:41.600]  У него может быть бесконечная ветвь.
[51:41.600 --> 51:44.600]  Так вот, если в степени вершин конечны и нет бесконечной ветви,
[51:44.600 --> 51:48.600]  то есть дерево не бесконечно в ширину и не бесконечно в глубину,
[51:48.600 --> 51:49.600]  то оно конечно.
[51:56.600 --> 51:59.600]  Ну, эта ляма кажется уж совсем очевидной.
[51:59.600 --> 52:02.600]  Я скажу ее стандартное доказательство.
[52:02.600 --> 52:04.600]  Доказательство такое.
[52:04.600 --> 52:05.600]  Давайте строить.
[52:05.600 --> 52:10.600]  Предположим, что дерево бесконечно у степени всех вершин конечных.
[52:10.600 --> 52:12.600]  Давайте построим бесконечную ветвь.
[52:12.600 --> 52:15.600]  Просто предъявим процедуру, которая это строит.
[52:15.600 --> 52:17.600]  Начинаем с корня.
[52:17.600 --> 52:20.600]  У него конечное количество сыновей.
[52:20.600 --> 52:23.600]  Поскольку все дерево бесконечно,
[52:23.600 --> 52:26.600]  под одним из сыновей должно быть бесконечно много вершин.
[52:26.600 --> 52:31.600]  Выберем там, где бесконечно.
[52:31.600 --> 52:33.600]  Опять находимся в такой же ситуации.
[52:33.600 --> 52:37.600]  Конечное количество сыновей, поскольку всего бесконечно,
[52:37.600 --> 52:39.600]  то хотя бы на одной ветве бесконечно.
[52:39.600 --> 52:43.600]  И вот так, выбирая бесконечно каждый раз того сына,
[52:43.600 --> 52:48.600]  под которым у нас бесконечно много вершин дерева,
[52:48.600 --> 52:51.600]  мы получаем бесконечную ветвь.
[52:51.600 --> 52:54.600]  Так что ничего сложного, это можно по-разному оформлять.
[52:54.600 --> 53:00.600]  Такое рассуждение в таком стиле логикам как-то больше нравится.
[53:00.600 --> 53:04.600]  А в принципе, можно было бы как-то иначе сказать.
[53:04.600 --> 53:08.600]  С другой стороны, может быть, это и самое простое доказательство.
[53:08.600 --> 53:13.600]  Я, честно говоря, не хочу сейчас задумываться.
[53:13.600 --> 53:16.600]  Теперь доказательства теремы компактности.
[53:16.600 --> 53:19.600]  Причем тут дерево?
[53:19.600 --> 53:24.600]  Давайте построим то, что называется полное бинарное дерево бесконечное.
[53:31.600 --> 53:33.600]  В нем бесконечно много уровней,
[53:33.600 --> 53:39.600]  отвечающих переменным как раз x1, x2, x3 и так далее.
[53:39.600 --> 53:42.600]  И когда мы находимся в какой-то вершине,
[53:42.600 --> 53:48.600]  это означает, что мы уже присвоили значение переменных.
[53:48.600 --> 53:51.600]  Вот если мы идем по ребру из корня 1,
[53:51.600 --> 53:53.600]  это значит, что x1 равно 1.
[53:53.600 --> 53:57.600]  Если идем по 0, то мы падаем вершину, где x1 равно 0 и так далее.
[53:57.600 --> 53:59.600]  То есть если мы пришли в эту вершину,
[53:59.600 --> 54:01.600]  про три переменные мы уже знаем.
[54:01.600 --> 54:03.600]  Первая равна 1, две другие равны 0.
[54:03.600 --> 54:06.600]  Ну а остальные пока не определены.
[54:07.600 --> 54:11.600]  Чтобы определить остальные, нужно спускаться по дереву дальше.
[54:11.600 --> 54:13.600]  То есть это действительно дерево,
[54:13.600 --> 54:16.600]  и в нем, естественно, есть бесконечная ветвь.
[54:16.600 --> 54:19.600]  Более того, любая бесконечная ветвь в точности соответствует
[54:19.600 --> 54:22.600]  одной из последовательств бесконечных последовательств 0 и 1.
[54:22.600 --> 54:24.600]  Если у вас есть последовательств 0 и 1,
[54:24.600 --> 54:27.600]  у вас задан путь по этому дереву из корня.
[54:27.600 --> 54:30.600]  Ну это очевидно, по построению дерева.
[54:31.600 --> 54:34.600]  Вот это вот такой объект,
[54:34.600 --> 54:38.600]  на котором мы часто будем что-то рассуждать полезно,
[54:38.600 --> 54:40.600]  чтобы он появился пораньше.
[54:40.600 --> 54:43.600]  Теперь давайте теорему компактности попробуем доказать.
[54:43.600 --> 54:46.600]  Для этого давайте сделаем вот что.
[54:50.600 --> 54:52.600]  Условия теоремы?
[54:52.600 --> 54:56.600]  Условия теоремы такое, что если множество булевых функций
[54:56.600 --> 54:59.600]  не совместно, то в нем есть конечное подножство,
[54:59.600 --> 55:01.600]  которое тоже не совместно.
[55:04.600 --> 55:06.600]  Ограничение на ясность?
[55:06.600 --> 55:10.600]  Да, вот ограничение такое, что если оно не совместно,
[55:10.600 --> 55:13.600]  то есть конечное несовместное подножие.
[55:15.600 --> 55:17.600]  То есть это очень общая теорема.
[55:17.600 --> 55:20.600]  Она на самом деле опирается на дискретность наших функций.
[55:20.600 --> 55:23.600]  Вот пример с неравенствами числами,
[55:23.600 --> 55:26.600]  но не совсем на дискретность, даже на конечность,
[55:26.600 --> 55:28.600]  потому что там у нас тоже дискретная,
[55:28.600 --> 55:31.600]  много натуральных чисел, но оно бесконечно.
[55:31.600 --> 55:33.600]  Поэтому мы можем убежать куда-то в предел.
[55:33.600 --> 55:34.600]  А тут не можем.
[55:34.600 --> 55:36.600]  Сейчас мы увидим почему.
[55:36.600 --> 55:45.600]  Давайте я обозначу те функции f, d,
[55:45.600 --> 55:47.600]  я обозначу те функции z,
[55:47.600 --> 55:52.600]  которые зависят только от первых d переменных.
[55:53.600 --> 55:55.600]  Не обязательно от всех.
[55:58.600 --> 56:03.600]  И теперь я возьму какую-нибудь вершину дерева.
[56:04.600 --> 56:10.600]  Ей отвечает набор значений первых, скажем, d переменных.
[56:11.600 --> 56:13.600]  Какие-то значения выбраны.
[56:14.600 --> 56:19.600]  И я отмечаю эту вершину,
[56:19.600 --> 56:27.600]  если все функции из вот этого множества равны единицам.
[56:33.600 --> 56:37.600]  То есть смотрите, в этой вершине нам трудно говорить о значении функции,
[56:37.600 --> 56:39.600]  если она зависит больше, чем от d переменных.
[56:39.600 --> 56:43.600]  Если у нее аргументов больше, то как мы не знаем значения вообще говоря.
[56:43.600 --> 56:45.600]  Поэтому находясь в этой вершине,
[56:45.600 --> 56:49.600]  нам имеет смысл смотреть только на значения функций из такого множества.
[56:49.600 --> 56:55.600]  И вот если значения равны единице, мы отмечаем.
[56:55.600 --> 56:57.600]  У нас получается такое поддерево.
[56:57.600 --> 57:00.600]  Поддерево, потому что, обратите внимание,
[57:00.600 --> 57:03.600]  я специально сказал, зависит только от,
[57:03.600 --> 57:05.600]  но не обязательно от,
[57:05.600 --> 57:07.600]  но не обязательно от.
[57:07.600 --> 57:09.600]  Поддерево, потому что, обратите внимание,
[57:09.600 --> 57:12.600]  я специально сказал, зависит только от,
[57:12.600 --> 57:14.600]  но не обязательно от всех.
[57:14.600 --> 57:16.600]  Это я сказал на словами, но только от.
[57:16.600 --> 57:18.600]  Не зависит от всех остальных.
[57:18.600 --> 57:20.600]  А от этих тоже может не зависеть.
[57:20.600 --> 57:24.600]  Поэтому если мы попали, включили эту вершину в поддерево,
[57:24.600 --> 57:27.600]  то все вершины на пути к корню тоже будут включены.
[57:27.600 --> 57:31.600]  Потому что вот здесь будут функции, которые сюда тоже входят.
[57:32.600 --> 57:36.600]  Потому что они зависят только от тех переменных, это разрешается.
[57:37.600 --> 57:39.600]  Потому что функция зависит не от всех переменных,
[57:39.600 --> 57:41.600]  а только от части.
[57:41.600 --> 57:44.600]  Ну вот, получаем поддерево.
[57:44.600 --> 57:47.600]  Что мы можем про это поддерево сказать?
[57:47.600 --> 57:50.600]  В нем нет бесконечной ветви.
[57:50.600 --> 57:53.600]  Потому что бесконечная ветва
[57:53.600 --> 57:56.600]  означала бы присваивание значений всем переменным.
[57:56.600 --> 57:59.600]  И посмотрите на построение этого поддерева.
[57:59.600 --> 58:03.600]  Тогда бы все функции из нашего множества
[58:03.600 --> 58:05.600]  обращались бы в единицу.
[58:05.600 --> 58:06.600]  Ну понятно почему.
[58:06.600 --> 58:13.600]  Потому что каждая функция зависит от конечного числа переменных.
[58:13.600 --> 58:16.600]  Значит, если у нас есть бесконечная ветва,
[58:16.600 --> 58:21.600]  мы спустимся на такую глубину, чтобы все эти переменные уже входили.
[58:21.600 --> 58:25.600]  Ну и тогда наша функция должна равняться единице.
[58:25.600 --> 58:28.600]  Про любую функцию так можно сказать.
[58:28.600 --> 58:31.600]  В результате получается, что
[58:31.600 --> 58:34.600]  существование бесконечной ветви означает,
[58:34.600 --> 58:37.600]  что все множество f совместно.
[58:37.600 --> 58:39.600]  А у нас по условию оно не совместно.
[58:39.600 --> 58:41.600]  Значит, бесконечной ветви нет.
[58:41.600 --> 58:42.600]  Ветвление 2 вообще.
[58:42.600 --> 58:45.600]  Не просто конечное, а 2 в данном случае.
[58:45.600 --> 58:47.600]  Поэтому лемма о дереве применима.
[58:47.600 --> 58:49.600]  Значит, само дерево конечном.
[58:49.600 --> 58:51.600]  А что значит, что оно конечное?
[58:51.600 --> 58:54.600]  Ну в частности означает, что у него какая-то конечная глубина.
[58:54.600 --> 58:56.600]  В нем конечное число вершин.
[58:56.600 --> 58:59.600]  И поэтому есть какое-то число n такое,
[58:59.600 --> 59:07.600]  что путь от корня до любой вершины не длиннее, чем n.
[59:09.600 --> 59:11.600]  Ну потому что вершин всего конечное число.
[59:11.600 --> 59:16.600]  Поэтому путь по дереву простой однозначно определен.
[59:16.600 --> 59:17.600]  Вершины не повторяются.
[59:17.600 --> 59:19.600]  Значит, их будет не больше, чем количество вершин дерева.
[59:19.600 --> 59:21.600]  Но это означает что?
[59:21.600 --> 59:26.600]  Смотрите, если я теперь возьму множество fn плюс 1,
[59:26.600 --> 59:27.600]  оно конечное.
[59:27.600 --> 59:29.600]  Потому что сюда входят только те функции,
[59:29.600 --> 59:32.600]  которые зависят от первой n плюс одной переменной.
[59:32.600 --> 59:34.600]  Таких функций конечное количество.
[59:34.600 --> 59:37.600]  Вы их, наверное, подсчитывали на комбинаторике.
[59:37.600 --> 59:39.600]  Ну это понятно, как возьмем таблицу значения,
[59:39.600 --> 59:42.600]  поставим произвольным образом 0 единицы и все.
[59:42.600 --> 59:44.600]  То есть их конечное количество.
[59:44.600 --> 59:47.600]  Но это множество уже не совместно.
[59:47.600 --> 59:48.600]  Почему?
[59:48.600 --> 59:51.600]  Потому что если бы оно было совместно,
[59:51.600 --> 59:54.600]  то у нас бы здесь была бы какая-то вершина
[59:54.600 --> 59:57.600]  и был бы какой-то путь в корень.
[59:57.600 --> 59:59.600]  А можно сказать, что такое вершина?
[59:59.600 --> 01:00:00.600]  N?
[01:00:00.600 --> 01:00:01.600]  Да.
[01:00:01.600 --> 01:00:03.600]  Ну, допустим, количество вершин в этом дереве,
[01:00:03.600 --> 01:00:04.600]  которое я выделил.
[01:00:04.600 --> 01:00:05.600]  Отмеченных.
[01:00:05.600 --> 01:00:06.600]  Да, отмеченных.
[01:00:10.600 --> 01:00:14.600]  Таким образом, достаточно взять такое множество.
[01:00:14.600 --> 01:00:17.600]  Оно конечное и оно уже не совместно.
[01:00:18.600 --> 01:00:20.600]  Вот такое несложное рассуждение
[01:00:20.600 --> 01:00:24.600]  позволяет нам использовать вот это соображение компактности.
[01:00:24.600 --> 01:00:27.600]  Ну, последнее, что я по этому поводу хочу сказать,
[01:00:27.600 --> 01:00:29.600]  это про терминологию.
[01:00:29.600 --> 01:00:30.600]  Почему компактность?
[01:00:30.600 --> 01:00:33.600]  У вас, возможно, в анализе это слово возникало.
[01:00:33.600 --> 01:00:35.600]  Я не знаю, это зависит от курса анализа.
[01:00:35.600 --> 01:00:38.600]  Но некоторые преподаватели анализа его тоже любят.
[01:00:38.600 --> 01:00:40.600]  Вообще это понятие из топологии.
[01:00:40.600 --> 01:00:42.600]  Есть такая математическая наука.
[01:00:42.600 --> 01:00:45.600]  Ей вас, насколько я понимаю, систематически никто не учит.
[01:00:45.600 --> 01:00:48.600]  Поэтому я и не буду пытаться вам объяснять,
[01:00:48.600 --> 01:00:49.600]  как это связано.
[01:00:49.600 --> 01:00:51.600]  Это та самая компактность, которая в топологии,
[01:00:51.600 --> 01:00:53.600]  для тех, кто что-то про это слышал.
[01:00:53.600 --> 01:00:58.600]  Но для какого топологического пространства это нужно подумать.
[01:00:58.600 --> 01:01:00.600]  И те, кто немножко знают топологию,
[01:01:00.600 --> 01:01:02.600]  поймут, что надо посмотреть на вот это полное,
[01:01:02.600 --> 01:01:03.600]  бесконечно бинарное дерево.
[01:01:03.600 --> 01:01:05.600]  И какая там топология.
[01:01:05.600 --> 01:01:08.600]  А чтобы не морочить голову остальным,
[01:01:08.600 --> 01:01:10.600]  я больше никаких комментариев говорить не буду.
[01:01:10.600 --> 01:01:12.600]  Но это действительно та самая компактность.
[01:01:12.600 --> 01:01:14.600]  Нам это топологические соображения будут не нужны.
[01:01:14.600 --> 01:01:16.600]  Это другой способ построения курса логики,
[01:01:16.600 --> 01:01:19.600]  где больший упор делается на топологические соображения.
[01:01:19.600 --> 01:01:23.600]  Но поскольку учить топологию еще у нас времени не будет,
[01:01:23.600 --> 01:01:26.600]  то я буду более классическим подходом пользоваться.
[01:01:26.600 --> 01:01:32.600]  Почему Fn плюс 1 не совместно?
[01:01:32.600 --> 01:01:33.600]  Смотрите.
[01:01:33.600 --> 01:01:40.600]  Н это количество отмеченных вершин.
[01:01:46.600 --> 01:01:51.600]  Что?
[01:01:51.600 --> 01:01:52.600]  А вот я же отмечал.
[01:01:52.600 --> 01:01:55.600]  А отмеченная вершина на уровне D отмечается,
[01:01:55.600 --> 01:01:58.600]  если все функции, которые зависят не больше,
[01:01:58.600 --> 01:02:00.600]  чем от первых D переменных,
[01:02:00.600 --> 01:02:03.600]  обращаются в единицу при соответствующем присваивании.
[01:02:03.600 --> 01:02:06.600]  У нас в вершине дерева отвечает частичное присваивание.
[01:02:06.600 --> 01:02:09.600]  Первым переменным мы присвоили какие-то значения.
[01:02:09.600 --> 01:02:12.600]  Соответственно те функции, которые зависят только от этих переменных,
[01:02:12.600 --> 01:02:15.600]  уже приобретают какие-то значения.
[01:02:15.600 --> 01:02:17.600]  Требование, чтобы вершина была отмечена,
[01:02:17.600 --> 01:02:20.600]  что они все равны единице.
[01:02:20.600 --> 01:02:23.600]  Почему Fn плюс 1 не совместно?
[01:02:23.600 --> 01:02:25.600]  Давайте сейчас обсудим.
[01:02:25.600 --> 01:02:27.600]  Предположим, что оно совместно.
[01:02:27.600 --> 01:02:30.600]  Тогда у нас есть такой набор значений,
[01:02:30.600 --> 01:02:33.600]  на котором все эти функции равны единице.
[01:02:38.600 --> 01:02:42.600]  Чтобы не перерисовывать, я продолжу.
[01:02:42.600 --> 01:02:46.600]  Но это означает, что эта вершина отмечена.
[01:02:48.600 --> 01:02:52.600]  А мы уже обсудили, что у нас всего N отмеченных вершин,
[01:02:52.600 --> 01:02:56.600]  и длина пути из дерева в корень не больше, чем N.
[01:02:56.600 --> 01:03:00.600]  То есть мы не могли отметить вершины, которые лежат на глубине N плюс 1.
[01:03:00.600 --> 01:03:04.600]  Тогда бы у нас в дереве была бы N плюс 1 вершина.
[01:03:04.600 --> 01:03:07.600]  Ну даже N плюс 2, на самом деле.
[01:03:07.600 --> 01:03:09.600]  Я сейчас на единичку немного сбился,
[01:03:09.600 --> 01:03:12.600]  но я думаю, что это не должно вас сильно запутать.
[01:03:12.600 --> 01:03:15.600]  Мы просто единицу добавляем к этому числу N,
[01:03:15.600 --> 01:03:18.600]  и видно, что уже сюда мы попасть не можем.
[01:03:18.600 --> 01:03:21.600]  Потому что нам тогда нужен путь, который длиннее,
[01:03:21.600 --> 01:03:25.600]  чем у нас есть в общее количество отмеченных вершин.
[01:03:25.600 --> 01:03:27.600]  Тут очень важна монотонность.
[01:03:27.600 --> 01:03:31.600]  То есть если мы отметили вершину всех предков этой вершины,
[01:03:31.600 --> 01:03:33.600]  мы тоже отмечаем.
[01:03:33.600 --> 01:03:38.600]  Потому что в определении вот этого частичного множества Fn,
[01:03:38.600 --> 01:03:41.600]  я говорю, что это все функции, которые зависят от X1, Xd,
[01:03:41.600 --> 01:03:43.600]  но не обязательно от всех.
[01:03:43.600 --> 01:03:45.600]  Они зависят только от этих,
[01:03:45.600 --> 01:03:48.600]  но может зависеть только от X1 или только от X10.
[01:03:50.600 --> 01:03:54.600]  Поэтому приходим к противоречию.
[01:03:54.600 --> 01:03:57.600]  Именно поэтому оно не совместно.
[01:03:58.600 --> 01:04:00.600]  Хорошо, давайте...
[01:04:02.600 --> 01:04:04.600]  Еще есть 15 минут.
[01:04:04.600 --> 01:04:06.600]  Сделаем следующий шаг.
[01:04:06.600 --> 01:04:11.600]  Далеко мы уйти не успеем, но какой-то следующий шаг сделаем.
[01:04:11.600 --> 01:04:14.600]  Смотрите, я говорил в основном про семантику,
[01:04:14.600 --> 01:04:19.600]  а какой там синтаксис в этой ситуации с булевыми функциями?
[01:04:19.600 --> 01:04:22.600]  Синтаксис – это булева функция.
[01:04:22.600 --> 01:04:25.600]  Нам нужно как-то булевую функцию представить как математический объект.
[01:04:25.600 --> 01:04:28.600]  Но вообще булева функция, поскольку это функция из конечного множества,
[01:04:28.600 --> 01:04:30.600]  это конструктивный объект.
[01:04:30.600 --> 01:04:33.600]  Ее всегда можно задать таблицей значений.
[01:04:33.600 --> 01:04:39.600]  Поэтому к моему самому слабому требованию к функциям это относится.
[01:04:39.600 --> 01:04:44.600]  Но, конечно, задавать булевую функцию таблицей значений очень неэкономно.
[01:04:44.600 --> 01:04:48.600]  Потому что если переменных много, скажем, миллион,
[01:04:48.600 --> 01:04:50.600]  то какая будет таблица значений?
[01:04:50.600 --> 01:04:53.600]  Всего возможных наборов значений 2 в миллионной степени.
[01:04:53.600 --> 01:04:55.600]  Это вы знаете, сколько у нас двоичных слов.
[01:04:55.600 --> 01:04:58.600]  2 в степени N. Количество слов длины N.
[01:04:58.600 --> 01:05:01.600]  Нам нужна таблица значений 2 в миллионный размер.
[01:05:03.600 --> 01:05:07.600]  Не то что денег не хватит на диск, чтобы содержать таблицу значений,
[01:05:07.600 --> 01:05:11.600]  но вообще-то места во вселенной не хватит, чтобы записать столько значений.
[01:05:13.600 --> 01:05:15.600]  Но это к физикам почему не хватит.
[01:05:15.600 --> 01:05:21.600]  Я беру за правду то, что физики говорят, какого размера вселенная,
[01:05:21.600 --> 01:05:23.600]  сколько там элементарных частиц.
[01:05:23.600 --> 01:05:25.600]  Но 2 в миллионный всем понятно, что много.
[01:05:25.600 --> 01:05:28.600]  А тем не менее бывают функции, которые очень легко задать.
[01:05:28.600 --> 01:05:32.600]  Вот я уже задал конъюнцию. Представляете, я задаю конъюнцию миллиона переменных.
[01:05:32.600 --> 01:05:34.600]  Я это сделал очень быстро.
[01:05:34.600 --> 01:05:38.600]  Я говорю, если все переменные равны единице, функция равна единице.
[01:05:38.600 --> 01:05:41.600]  Если хотя бы одна равна нулю, функция равна нулю.
[01:05:41.600 --> 01:05:47.600]  Мне не нужно жесткий диск размером отсюда и до туманности андромеды.
[01:05:47.600 --> 01:05:49.600]  Я вот все, я уже задал функцию.
[01:05:49.600 --> 01:05:53.600]  То есть можно задавать булевые функции гораздо компактнее.
[01:05:53.600 --> 01:05:56.600]  И таких способов много.
[01:05:56.600 --> 01:05:59.600]  Сжатого описания булевых функций.
[01:05:59.600 --> 01:06:03.600]  Я сейчас введу важный для дальнейшего формализм.
[01:06:03.600 --> 01:06:06.600]  Он так и называется, булевые формулы.
[01:06:06.600 --> 01:06:09.600]  Почему я введу его? Там еще есть схемы.
[01:06:09.600 --> 01:06:13.600]  Я не знаю, может вам что-то успели на первом курсе рассказать про это.
[01:06:13.600 --> 01:06:15.600]  Если нет, то вы могли откуда-то еще знать.
[01:06:15.600 --> 01:06:17.600]  Есть схемы, есть разрешающие деревья.
[01:06:17.600 --> 01:06:23.600]  В общем, есть много способов сжатого описания, формального сжатого описания булевых функций.
[01:06:23.600 --> 01:06:27.600]  Но логики по традиции используют вполне определенные.
[01:06:27.600 --> 01:06:29.600]  И я его и введу.
[01:06:37.600 --> 01:06:39.600]  О, не функция, а формулы.
[01:06:39.600 --> 01:06:41.600]  Там были функции, теперь формулы.
[01:06:41.600 --> 01:06:44.600]  Но это, по сути дела, продолжение того же примера.
[01:06:44.600 --> 01:06:46.600]  Просто я теперь изменяю синтаксис.
[01:06:46.600 --> 01:06:50.600]  Я вместо того, чтобы считать, что функция задана в лице и значении,
[01:06:50.600 --> 01:06:53.600]  я ее буду задавать некоторым другим способом.
[01:06:53.600 --> 01:06:55.600]  И делать я это буду следующим образом.
[01:06:55.600 --> 01:06:58.600]  Вы заведомо знаете, вас в прошлом году этому учили,
[01:06:58.600 --> 01:07:02.600]  что есть такие пропозициональные связки или логические связки,
[01:07:02.600 --> 01:07:04.600]  которые объединяют булевые переменные.
[01:07:04.600 --> 01:07:09.600]  Ну вот, конъюнцию мы уже упоминали, дизюнцию, импликацию, равносильность.
[01:07:09.600 --> 01:07:14.600]  Давайте я для определенности просто напишу таблицы.
[01:07:14.600 --> 01:07:18.600]  Поскольку это функция от максимум двух переменных,
[01:07:18.600 --> 01:07:20.600]  то это все легко записать таблицы.
[01:07:20.600 --> 01:07:22.600]  Я сейчас просто напомню.
[01:07:22.600 --> 01:07:25.600]  В общем, вы это, конечно, должны знать.
[01:07:32.600 --> 01:07:38.600]  Но я, несомненно, как страдаю профессиональной деформацией,
[01:07:38.600 --> 01:07:42.600]  как все преподаватели, я считаю, что если что-то студентам сказано, они это знают.
[01:07:42.600 --> 01:07:46.600]  Но при этом я понимаю, что это ложные утверждения.
[01:07:47.600 --> 01:07:51.600]  И не стесняюсь повторять то, что, мне кажется, все знают,
[01:07:51.600 --> 01:07:55.600]  потому что кто-то мог забыть или вообще как-то пропустить.
[01:07:55.600 --> 01:07:59.600]  Ну, самая простая связка – это отрицание, это просто инвертирование бита.
[01:07:59.600 --> 01:08:05.600]  Тут связки, конъюнцию я уже определил, она равна единице только если оба.
[01:08:05.600 --> 01:08:09.600]  Обе переменных равны единице, дизюнция, наоборот, равна единице,
[01:08:09.600 --> 01:08:11.600]  если хотя бы одно равно единице.
[01:08:11.600 --> 01:08:15.600]  Импликация – это очень важная для логики связка.
[01:08:15.600 --> 01:08:19.600]  И она попала на неудачное место на доске.
[01:08:19.600 --> 01:08:22.600]  Ну ладно, слушайте, как я на слова говорю.
[01:08:22.600 --> 01:08:27.600]  Тут место, на котором не хочет писать, не признает.
[01:08:27.600 --> 01:08:29.600]  Ну вот, я постарался.
[01:08:29.600 --> 01:08:32.600]  Значит, она равна нулю в единственном случае,
[01:08:32.600 --> 01:08:35.600]  когда первый аргумент – единица, а второй – ноль.
[01:08:35.600 --> 01:08:39.600]  Первый аргумент импликации называется посылка, а второй называется заключение.
[01:08:39.600 --> 01:08:42.600]  Тома правила определения импликации очень простой.
[01:08:42.600 --> 01:08:46.600]  И это очень важно, потому что именно импликация отвечает за логическое следование,
[01:08:46.600 --> 01:08:51.600]  которое лежит в основе всех рассуждений перехода от одних утверждений к другим.
[01:08:51.600 --> 01:08:57.600]  Ну и еще есть эквивалентность мне понадобится.
[01:08:57.600 --> 01:09:01.600]  Это просто равенство аргументов.
[01:09:01.600 --> 01:09:06.600]  То есть связка, конъюнция – это просто равенство.
[01:09:07.600 --> 01:09:11.600]  Это просто равенство аргументов.
[01:09:11.600 --> 01:09:17.600]  То есть связка эквивалентность равна единице, то есть истинно, если левая и правая части одинаковы.
[01:09:17.600 --> 01:09:20.600]  Это тоже часто используется, потому что понятно,
[01:09:20.600 --> 01:09:23.600]  нас интересует не только истинность или ложность утверждения,
[01:09:23.600 --> 01:09:25.600]  скажем, равносильность.
[01:09:25.600 --> 01:09:29.600]  В математике полно утверждений, что одно свойство равносильно другому.
[01:09:29.600 --> 01:09:32.600]  Естественно, такое нужно.
[01:09:32.600 --> 01:09:34.600]  Ну в общем, есть вот такие связки.
[01:09:34.600 --> 01:09:37.600]  Есть больше, конечно, булевых функций больше,
[01:09:37.600 --> 01:09:41.600]  но логики обычно ограничиваются этим, можно даже и меньше использовать.
[01:09:41.600 --> 01:09:44.600]  А про теориям упоста вам рассказывали.
[01:09:44.600 --> 01:09:46.600]  Что? Да, да, да.
[01:09:46.600 --> 01:09:50.600]  Что, скажем, если мы оставим только импликацию отрицания,
[01:09:50.600 --> 01:09:52.600]  то мы можем выразить любую булевую функцию.
[01:09:52.600 --> 01:09:54.600]  Ну вот, это важно.
[01:09:54.600 --> 01:09:58.600]  И на самом деле я сейчас вам пересказываю примерно то же самое,
[01:09:58.600 --> 01:10:01.600]  потому что, когда вам говорили, можно выразить,
[01:10:01.600 --> 01:10:04.600]  вам как раз говорили, что существует формула,
[01:10:04.600 --> 01:10:08.600]  которая представляет соответствующую функцию.
[01:10:08.600 --> 01:10:10.600]  Но я не уверен, что это сделали.
[01:10:10.600 --> 01:10:17.600]  Очень часто в курсах дискретной математики делается немножко в вольном стиле.
[01:10:17.600 --> 01:10:20.600]  Мне, поскольку дальше придется это использовать именно формально,
[01:10:20.600 --> 01:10:24.600]  я хотел бы проговорить детально, как мы определяем формулы.
[01:10:24.600 --> 01:10:29.600]  То есть, по сути дела, это те самые формулы, с которыми вы имели дело,
[01:10:29.600 --> 01:10:32.600]  содержательно нужно понимать, что это то же самое.
[01:10:32.600 --> 01:10:35.600]  А формально вот, что нам нужно.
[01:10:35.600 --> 01:10:37.600]  У нас есть связки, но мы можем...
[01:10:37.600 --> 01:10:40.600]  Они задают какие-то простые такие блоки,
[01:10:40.600 --> 01:10:43.600]  которые объединяют элементарные высказывания.
[01:10:43.600 --> 01:10:45.600]  Дальше эти связки можно комбинировать друг с другом.
[01:10:45.600 --> 01:10:49.600]  Можно в связку подставить результаты применения других связок.
[01:10:49.600 --> 01:10:51.600]  И получаем формулу.
[01:10:51.600 --> 01:10:55.600]  То есть, формула ее, естественно, поэтому определяет рекурсивно.
[01:10:55.600 --> 01:11:01.600]  Формула – это или переменная, или результат применения связки к двум другим формулам.
[01:11:01.600 --> 01:11:08.600]  И на таком пути у нас сразу возникает представление формулы в виде дерева.
[01:11:11.600 --> 01:11:14.600]  Это не просто корневое дерево, а еще размеченное.
[01:11:17.600 --> 01:11:20.600]  Я нарисую какой-нибудь несложный пример.
[01:11:21.600 --> 01:11:27.600]  Размеченное чем? Внутренние вершины дерева помечены связками.
[01:11:27.600 --> 01:11:33.600]  А листья, то есть вершины степени 1, отличающиеся от корня, они помечены переменными.
[01:11:34.600 --> 01:11:37.600]  Это ровно соответствует моему рекурсивному определению.
[01:11:37.600 --> 01:11:40.600]  Рекурсия вообще всегда тесно связана с деревом.
[01:11:40.600 --> 01:11:42.600]  Потому что вы находитесь возле рекурсии,
[01:11:42.600 --> 01:11:46.600]  вы когда делаете рекурсивный шаг, у вас есть сколько-то вариантов.
[01:11:46.600 --> 01:11:48.600]  Вот вы спускаетесь по дереву вниз.
[01:11:48.600 --> 01:11:52.600]  Когда вы достигаете листа, у вас идет рекурсивный возврат, вы поднимаетесь вверх.
[01:11:54.600 --> 01:11:57.600]  И чем удобно представление в виде дерева,
[01:11:57.600 --> 01:12:00.600]  что сразу понятно, как вычислять значение формулы.
[01:12:00.600 --> 01:12:02.600]  Формуля отвечает булевого функции.
[01:12:02.600 --> 01:12:11.600]  Вот представьте, что я рассматриваю значение формулы вот при таких значениях переменных.
[01:12:11.600 --> 01:12:16.600]  Тогда я просто-напросто подставляю в листья эти значения.
[01:12:16.600 --> 01:12:18.600]  А что я делаю дальше?
[01:12:18.600 --> 01:12:21.600]  Чтобы означать каждую вершину дерева, я просто применяю,
[01:12:21.600 --> 01:12:26.600]  тут написана связка импликации, я ее применяю к тем значениям, которые уже вижу ниже.
[01:12:26.600 --> 01:12:30.600]  Значит здесь будет единица, а здесь, что будет тут единица, тут ноль, значит будет ноль.
[01:12:30.600 --> 01:12:34.600]  То есть вот на таком наборе эта формула ложна.
[01:12:34.600 --> 01:12:42.600]  И у нас сразу видно, что формула, которая задана таким образом, представляет булевую функцию.
[01:12:42.600 --> 01:12:45.600]  Какой недостаток у этого определения?
[01:12:45.600 --> 01:12:48.600]  Ну, недостаток такой. Почему логики его не любят?
[01:12:48.600 --> 01:12:51.600]  Потому что оно апеллирует к понятию дерева.
[01:12:51.600 --> 01:12:58.600]  На самом деле, я слегка вас обманул, не просто дерево, а полное название будет таким.
[01:12:58.600 --> 01:13:01.600]  Плоское корневое помеченное дерево.
[01:13:01.600 --> 01:13:07.600]  И уже судя по тому, сколько там эпитетов, ясно, что если это определять математически аккуратно,
[01:13:07.600 --> 01:13:09.600]  придется говорить много слов.
[01:13:09.600 --> 01:13:15.600]  И логикам это не нравится, потому что возникает какая-то сущность, которая кажется сложной.
[01:13:15.600 --> 01:13:19.600]  Ну, по крайней мере, когда логика возникала, понятие дерева считалось сложным.
[01:13:19.600 --> 01:13:23.600]  Там и теория графов-то была в зачаточном состоянии.
[01:13:23.600 --> 01:13:28.600]  И подозреваю, что сказалось сложным, потому что никто еще не написал учебников в теории графов.
[01:13:28.600 --> 01:13:33.600]  Если бы 150 лет назад кто-то бы удосужился написать такую странную книжку
[01:13:33.600 --> 01:13:39.600]  и заставил бы всех университетов ее учить, то, возможно, логика была бы сейчас по-другому бы излагалась.
[01:13:39.600 --> 01:13:43.600]  Просто когда возникала логика, понять теории графов как таковой не было.
[01:13:43.600 --> 01:13:47.600]  Были отдельные теоремы, которые приходилось очень сложно формулировать,
[01:13:47.600 --> 01:13:50.600]  потому что удобной системы терминологии не было.
[01:13:50.600 --> 01:13:51.600]  Я не уверен, что...
[01:13:51.600 --> 01:13:53.600]  Вообще деревья изучали, с другой стороны.
[01:13:53.600 --> 01:13:58.600]  Теорема Киргофова была доказана еще раньше, и она про Остовные деревья.
[01:13:58.600 --> 01:14:01.600]  Так что не знаю, как-то Киргоф ее сформулировал.
[01:14:01.600 --> 01:14:04.600]  Что-то все-таки было в качестве дерева.
[01:14:04.600 --> 01:14:06.600]  Хорошо.
[01:14:06.600 --> 01:14:08.600]  Как же выходят из этого положения логики?
[01:14:08.600 --> 01:14:10.600]  Они дают другое определение.
[01:14:10.600 --> 01:14:20.600]  Вообще логики любят, чтобы все задавалось максимально простыми математическими объектами.
[01:14:20.600 --> 01:14:23.600]  И самый простой математический объект – это слова в алфавите,
[01:14:23.600 --> 01:14:27.600]  последовательности символов, принадлежащих некоторому алфавиту.
[01:14:28.600 --> 01:14:31.600]  Ну, идеально, как я уже говорил, когда этот алфавит двоичный.
[01:14:31.600 --> 01:14:33.600]  Ну, если он конечный, тоже не страшно.
[01:14:33.600 --> 01:14:36.600]  Но логики согласны и на бесконечный алфавит.
[01:14:36.600 --> 01:14:41.600]  Почему, я надеюсь еще успеть объяснить, но если что, в следующий раз объясню.
[01:14:44.600 --> 01:14:46.600]  Значит, как теперь формула...
[01:14:50.600 --> 01:14:53.600]  Теперь я дам определение, которое будет для данного курса базовым,
[01:14:53.600 --> 01:14:55.600]  потому что так его определяют логики.
[01:14:55.600 --> 01:14:57.600]  Во-первых, я ввожу алфавит.
[01:14:57.600 --> 01:15:00.600]  Алфавит – он бесконечный.
[01:15:00.600 --> 01:15:03.600]  Он состоит из символов переменных, их счетное количество.
[01:15:03.600 --> 01:15:06.600]  А также еще из некоторого количества значков.
[01:15:06.600 --> 01:15:11.600]  Открывающая, закрывающая скобка, и вот значки для связок.
[01:15:11.600 --> 01:15:13.600]  Сколько там связок нам нужно?
[01:15:13.600 --> 01:15:19.600]  На самом деле можно было бы две связки, но пусть будут все, которые я написал.
[01:15:19.600 --> 01:15:21.600]  А переменных бесконечно много.
[01:15:21.600 --> 01:15:22.600]  А переменных бесконечно много, да.
[01:15:22.600 --> 01:15:24.600]  То есть это бесконечный алфавит.
[01:15:24.600 --> 01:15:31.600]  И вот формула – это слово в этом алфавите.
[01:15:31.600 --> 01:15:35.600]  Слова в алфавите – это конечная последовательность элементов данного множества.
[01:15:35.600 --> 01:15:37.600]  Они обозначаются а со звездочкой.
[01:15:37.600 --> 01:15:42.600]  Думаю, что эту звездочку вам скоро разъяснят в параллельном курсе алгоритмов.
[01:15:44.600 --> 01:15:46.600]  Уже было, ну прекрасно.
[01:15:46.600 --> 01:15:50.600]  Так значит, формула – это слово такое, что...
[01:15:50.600 --> 01:15:52.600]  Выполняются следующие условия.
[01:15:52.600 --> 01:15:54.600]  Одно из трех.
[01:15:54.600 --> 01:15:59.600]  Или формула – это просто-напросто переменная.
[01:15:59.600 --> 01:16:02.600]  То есть слово длины 1, которое является символом переменной.
[01:16:02.600 --> 01:16:04.600]  Или даже одно из двух.
[01:16:04.600 --> 01:16:06.600]  Или формула...
[01:16:06.600 --> 01:16:09.600]  А, ну из трех, потому что у меня есть отрицание.
[01:16:09.600 --> 01:16:11.600]  Или формула имеет вид...
[01:16:11.600 --> 01:16:17.600]  Дизъюнция, конъюнция, импликация, равносильность двух формул.
[01:16:17.600 --> 01:16:21.600]  Или формула имеет вид отрицания формул.
[01:16:21.600 --> 01:16:23.600]  То есть B и C формулы.
[01:16:28.600 --> 01:16:32.600]  То есть это определение, как вы видите, рекурсивное.
[01:16:32.600 --> 01:16:36.600]  То есть это определение, как вы видите, рекурсивное.
[01:16:37.600 --> 01:16:41.600]  То есть это определение, как вы видите, рекурсивное.
[01:16:44.600 --> 01:16:47.600]  Чтобы его использовать, его нужно вот так вот раскрывать.
[01:16:47.600 --> 01:16:49.600]  Например...
[01:16:53.600 --> 01:16:58.600]  Вот такое слово, в котором 1, 2, 3, 4, 5 символов является формулой.
[01:16:58.600 --> 01:16:59.600]  Почему?
[01:16:59.600 --> 01:17:04.600]  Потому что оно составлено вот по вот этому второму правилу
[01:17:04.600 --> 01:17:07.600]  из двух формул X1 и X2.
[01:17:07.600 --> 01:17:11.600]  А вот такое слово не является формулой.
[01:17:13.600 --> 01:17:17.600]  Потому что любая формула длины больше единицы,
[01:17:17.600 --> 01:17:20.600]  по нашему правилу, должна начинаться с открывающей скобки.
[01:17:20.600 --> 01:17:22.600]  А это слово не начинается с открывающей скобки.
[01:17:22.600 --> 01:17:24.600]  Вы скажете, как же так?
[01:17:24.600 --> 01:17:27.600]  Что ж, нельзя вот так вот писать, обязательно надо расставлять скобки.
[01:17:27.600 --> 01:17:29.600]  Успокой, можно.
[01:17:29.600 --> 01:17:34.600]  Значит, конечно, на письме ставить много скобок очень трудно.
[01:17:34.600 --> 01:17:36.600]  Загромождает.
[01:17:36.600 --> 01:17:39.600]  И мы будем использовать сокращенную запись, опускать скобки,
[01:17:39.600 --> 01:17:41.600]  если понятно, как их восстановить.
[01:17:41.600 --> 01:17:45.600]  Есть общее соглашение о том, какие связки сильнее.
[01:17:45.600 --> 01:17:48.600]  Мы это оговорим.
[01:17:48.600 --> 01:17:52.600]  Но нужно понимать, что вот такая запись, тем не менее, формулой не является.
[01:17:52.600 --> 01:17:54.600]  То есть такое слово длины 3, это не формула.
[01:17:54.600 --> 01:17:59.600]  Но это можно назвать именем формулы или описанием формулы.
[01:17:59.600 --> 01:18:03.600]  Вот ясно, какая формула имеется в виду, если мы такое напишем.
[01:18:03.600 --> 01:18:05.600]  В данном случае просто скобки расставить.
[01:18:05.600 --> 01:18:10.600]  Если написано, кстати, о несколько импликаций, то уже не так ясно.
[01:18:12.600 --> 01:18:14.600]  Вот какая формула имеется в виду?
[01:18:17.600 --> 01:18:19.600]  Слева направо, говорят мне.
[01:18:19.600 --> 01:18:24.600]  Да, на самом деле, если пользоваться стандартными соглашениями расстановки скобок,
[01:18:24.600 --> 01:18:26.600]  скобки надо поставить вот так.
[01:18:26.600 --> 01:18:31.600]  То есть когда применяется одинаковая операция без скобок,
[01:18:31.600 --> 01:18:34.600]  мы считаем, что первой применяется та, что слева.
[01:18:34.600 --> 01:18:37.600]  Ну а дальше у нас есть соглашение о старшинстве.
[01:18:37.600 --> 01:18:41.600]  Но скажем, с импликацией лучше надежнее расставлять скобки,
[01:18:41.600 --> 01:18:45.600]  потому что мало ли кто-то может не знать об этом соглашении.
[01:18:45.600 --> 01:18:49.600]  Ну в общем-то есть способ скобки почти что не использовать.
[01:18:49.600 --> 01:18:51.600]  Иногда они все равно бывают нужны.
[01:18:57.600 --> 01:18:59.600]  Что мы в сущности теперь можем сказать?
[01:18:59.600 --> 01:19:01.600]  У нас появилось строгое определение формулы.
[01:19:01.600 --> 01:19:03.600]  Вот оно формально корректное.
[01:19:03.600 --> 01:19:07.600]  На самом деле я на этом примере объяснил, как его применять к какому-то слову.
[01:19:07.600 --> 01:19:10.600]  Ну нужно просто вот так вот разложить и все.
[01:19:10.600 --> 01:19:13.600]  И более-менее ясно, что дерево и получится.
[01:19:13.600 --> 01:19:16.600]  Вот это дерево называется дерево разбора формулы.
[01:19:23.600 --> 01:19:29.600]  Что неясно, это почему по данной формуле будет всегда получаться одно и то же дерево.
[01:19:32.600 --> 01:19:34.600]  Вот это мы в следующий раз обсудим.
[01:19:34.600 --> 01:19:36.600]  Это не сложная вещь, однозначность разбора.
[01:19:36.600 --> 01:19:39.600]  Это соответствие между деревьями, которые я даже не определил,
[01:19:39.600 --> 01:19:43.600]  и формулами, которые я определил строго, оно взаимно однозначно.
[01:19:43.600 --> 01:19:50.600]  Но это требует некоторого рассуждения, которое давайте в следующий раз я проведу аккуратно, поскольку время сейчас вышло.
