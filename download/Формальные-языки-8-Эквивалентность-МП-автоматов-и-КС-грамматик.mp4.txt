[00:00.000 --> 00:16.000]  Всем доброго дня, вы потихонечку, ребят, подходят. Сегодня мы продолжаем с вами говорить про контекст свободной грамматики.
[00:16.000 --> 00:23.000]  Точнее, мы с вами должны изначально закрыть тех долг, которые у нас остался с прошлого раза.
[00:23.000 --> 00:27.000]  Мы доказывали, почему кс-грамматики эквалентна mp-автомата.
[00:27.000 --> 00:36.000]  Напоминаю, mp-автомат, вкратце, это нетерминированный, конечно, автомат, которому еще с боку припеку приделан стэк.
[00:36.000 --> 00:41.000]  И этот стэк нам позволяет делать всякие интересные возможности.
[00:41.000 --> 00:50.000]  Если у вас уже были семинары по mp-автоматам, то вы видели, что при помощи mp-автомата можно эмулировать неотрицательные целые числа.
[00:50.000 --> 00:57.000]  При помощи mp-автомата и двух стэковых символов вообще можно моделировать целых чисел.
[00:57.000 --> 01:03.000]  То есть у нас появляется какая-то достаточно простая арифметика, которую мы с вами можем отслеживать.
[01:03.000 --> 01:09.000]  И мы потихонечку с вами начали доказывать, что mp-автомата эквалентна кс-грамматика.
[01:09.000 --> 01:15.000]  Каким образом мы это сделали? Мы сначала идем из кс-грамматики, из mp-автомата строим кс-грамматику.
[01:15.000 --> 01:25.000]  Каким образом? Мы с вами заметили, что если у нас на стэке кладется какая-то буква в переходе,
[01:25.000 --> 01:33.000]  да, мы говорим, что у нас правила такие, что у нас на стэке либо кладется буква, либо вынимается буква.
[01:33.000 --> 01:36.000]  Мы специально привели кс-грамматику в виду.
[01:36.000 --> 01:44.000]  И мы заметили, что на самом деле, как только мы положили в стэк какую-то букву, то мы можем выложить ее в какой-то момент времени.
[01:44.000 --> 01:51.000]  Это важно. Ну и вообще, если посмотреть на всю длину пути, то есть на максимальное количество того, что происходит в действии,
[01:51.000 --> 01:56.000]  посмотреть на все операции добавления и удаления стэка, то это будет правильная скобочная последовательность.
[01:56.000 --> 02:01.000]  Это такое интересное замечание, которое, возможно, нам где-то еще понадобится.
[02:01.000 --> 02:06.000]  И мы с вами строили переходы такие. Напоминаю, как мы строили с вами грамматику.
[02:06.000 --> 02:15.000]  Значит, мы сказали, что давайте мы состояние, точнее не терминал, но у грамматики, это будут пары состояний,
[02:15.000 --> 02:23.000]  и в котором мы говорим следующее, что если у нас мы находимся в паре одно состояние, то же самое состояние,
[02:23.000 --> 02:30.000]  то мы можем выводить epsilon, и из стартового состояния мы выводим a из q0 куджита,
[02:30.000 --> 02:38.000]  где куджита и принт gtf. Напоминаю, что эти пары состояний такие, что мы можем выводить что-то на пути между этими двумя вершинами,
[02:38.000 --> 02:44.000]  при этом не меняя стэк. Это важно. То есть стэк какой был, такой и остается после.
[02:44.000 --> 02:53.000]  И сказали, что если у нас с вами есть такая картинка, что мы сначала написали какую-то букву a, потом мы сняли эту же букву a,
[02:53.000 --> 03:01.000]  здесь мы находились в состоянии куетом, вышли здесь кутетом, здесь куэртом куэстом, а здесь у нас кутетой и куджитой.
[03:01.000 --> 03:05.000]  Ищем первый момент, когда мы пробили, вернули стэк на тот же уровень.
[03:05.000 --> 03:12.000]  Тогда между куэртом и куэстом мы стэк не меняем, и между кутетом и куджитом мы тоже стэк не меняем.
[03:12.000 --> 03:20.000]  Поэтому мы можем написать правила. Из a и g, от e до g, в котором мы стэк не меняли, мы кладем букву a, которая была в правиле.
[03:21.000 --> 03:26.000]  Но заметьте, что тут могла быть не только буква a, здесь могло быть пустое слово.
[03:26.000 --> 03:36.000]  Дальше мы, не меняя стэк, идем от этой, от вершины r до s, это a-r-s, потом мы снимаем букву, которая была, или опять же пустое слово.
[03:36.000 --> 03:42.000]  И потом у нас кладется туджитая, которая не меняет нам стэк.
[03:42.000 --> 03:46.000]  Такие вот свойства у нас были, и мы с вами в прошлый раз формулировали лему.
[03:46.000 --> 03:51.000]  Сказали, что вот этого свойства неизменность стэка.
[03:51.000 --> 03:59.000]  То есть, если у нас из a и g выводится слово в грамматике g, тогда и только тогда, когда, по сути, от куитова до куджитова мы можем прочитать слово, не изменяя стэк.
[03:59.000 --> 04:08.000]  Мы с вами доказали лему в одну сторону, и показали, как из лемы будет следовать утверждение теоремы.
[04:08.000 --> 04:10.000]  Мы в прошлый раз это в конце сделали.
[04:10.000 --> 04:14.000]  Итак, давайте теперь, это напоминание предыдущей серии.
[04:14.000 --> 04:22.000]  В текущей серии мы начнем с того, чтобы покажем действительно, что то, что мы с вами тут написали, это право.
[04:22.000 --> 04:24.000]  То есть, со стороны, из права влево.
[04:24.000 --> 04:29.000]  И опять же, нам придется использовать такое слово как индукция.
[04:29.000 --> 04:33.000]  Давайте поймем индукцию, по какому параметру у нас тут будет идти.
[04:40.000 --> 04:49.000]  Почему у нас индукция будет с вами идти сейчас?
[04:49.000 --> 04:53.000]  Количество правил?
[04:53.000 --> 04:56.000]  Да, по количеству переходов.
[05:04.000 --> 05:06.000]  Каких еще раз переходов?
[05:06.000 --> 05:09.000]  По переходу в автомате.
[05:09.000 --> 05:15.000]  У нас есть Qt, W, ε.
[05:15.000 --> 05:17.000]  И мы перешли в...
[05:17.000 --> 05:20.000]  Давайте тут напишу количество шагов k.
[05:20.000 --> 05:27.000]  За k шагов в грамматике m мы перешли в состояние Qt, ε, ε.
[05:27.000 --> 05:31.000]  То есть, за k шагов мы переходим отсюда.
[05:31.000 --> 05:35.000]  И нам нужно будет показать, что если мы за k шагов это умеем делать,
[05:35.000 --> 05:39.000]  то мы можем его из a и g, мы можем выводить W.
[05:39.000 --> 05:44.000]  База индукции. Давайте поговорим по базу индукции.
[05:44.000 --> 05:49.000]  Чему у нас с вами k будет равно в базовом случае?
[05:53.000 --> 05:58.000]  Мы же уже по грамматике научились строить автомат.
[05:58.000 --> 06:02.000]  Нет, нет, мы еще не научились. Мы еще будем учиться строить.
[06:05.000 --> 06:12.000]  За сколько шагов мы можем с вами от одного состояния перейти?
[06:12.000 --> 06:16.000]  От одной конфигурации перейти к другой конфигурации?
[06:16.000 --> 06:19.000]  Можете еще раз повторить, что мы доказываем?
[06:19.000 --> 06:21.000]  Мы доказываем следующий факт.
[06:21.000 --> 06:22.000]  Вот он.
[06:22.000 --> 06:26.000]  Мы доказываем, что если мы из Qt доходим до Qgt,
[06:26.000 --> 06:29.000]  не меняя при этом стэк и прочитывая слово W,
[06:29.000 --> 06:34.000]  то из правила грамматики a и g мы можем вывести слово W.
[06:34.000 --> 06:37.000]  Мы сейчас доказываем к нему справедливость,
[06:37.000 --> 06:40.000]  и мы можем вывести слово W.
[06:40.000 --> 06:44.000]  То есть с правил грамматики a и g мы можем вывести слово W.
[06:44.000 --> 06:47.000]  Мы сейчас доказываем к нему справо налево индукции
[06:47.000 --> 06:49.000]  по количеству шагов вот здесь.
[07:03.000 --> 07:05.000]  Ну давайте посмотрим.
[07:05.000 --> 07:07.000]  За один переход сначала базы?
[07:07.000 --> 07:09.000]  Можно сказать за один.
[07:09.000 --> 07:14.660]  можно еще сказать проще, за ноль. Да, это значит, что мы просто в той же самой конфигурации остались.
[07:14.660 --> 07:17.800]  Давайте напишу, куда же.
[07:17.800 --> 07:34.240]  Ну, мы можем, у нас что пар позволяет? Оно наименьше рефлексивное трагитивное отношение,
[07:34.240 --> 07:38.280]  то есть рефлексивное, значит, оно само из себя тоже выводит.
[07:38.280 --> 07:49.720]  Поэтому тогда мы понимаем, что если мы из куитового по дубль В по Эпсилон за ноль шагов вывели QGT Эпсилон на Эпсилон,
[07:49.720 --> 07:59.120]  то, во-первых, у нас В равно Эпсилон, а во-вторых, QIT равно QGT.
[07:59.120 --> 08:11.080]  А что нам надо показать? Нам надо показать, что из А и QGT мы выводим W, и в нашем случае
[08:11.080 --> 08:26.680]  получается, что это из А и И выводится Эпсилон. А можем мы сейчас из А и И вывести Эпсилон из нашей грамматики?
[08:26.680 --> 08:38.560]  Тут надо на слайде посмотреть. Ну да, потому что у нас есть правило.
[08:38.560 --> 08:53.480]  Вот, то есть базу мы доказали, с вами индукты. Теперь переход.
[08:53.480 --> 09:11.720]  Предположим, что мы с вами из куитового по дубль В Эпсилон за ка шагов переходим в QGT Эпсилон на Эпсилон.
[09:11.720 --> 09:20.520]  Тогда нам надо посмотреть, каким образом мы это могли сделать.
[09:20.520 --> 09:39.640]  Поскольку стэк пустой, давайте посмотрим, что у нас происходит за один переход.
[09:39.640 --> 09:51.080]  Тогда мы из куитового в Эпсилон за один шаг переходим в состояние какой-то QRT.
[09:51.080 --> 10:02.360]  Здесь у нас что с вами получается? Давайте мы обозначим это слово У, а здесь, смотрите, у нас будет А.
[10:03.240 --> 10:05.240]  Почему здесь точно будет А?
[10:09.720 --> 10:13.560]  Мы обязательно что-то делаем на карточке.
[10:13.560 --> 10:27.080]  Давайте, существует А, так как мы либо кладем на стэк, либо снимаем со стэка.
[10:27.800 --> 10:33.640]  А второй вариант невозможно, потому что у нас стэк и так пустой.
[10:33.640 --> 10:38.120]  Давайте я буду невозможным случаем обозначать буквой F.
[10:38.840 --> 10:41.880]  Тогда у нас есть какое-то А.
[10:41.880 --> 11:06.040]  Пусть QS, какой-то переход в QT, это первый момент, когда мы А сняли со стэка.
[11:06.040 --> 11:08.040]  Мы его должны были снять.
[11:11.800 --> 11:14.760]  Тогда смотрите, что у нас получается.
[11:14.760 --> 11:17.560]  Давайте я вот тут буду выделять.
[11:17.560 --> 11:28.760]  Мы дошли до состояния QS, при этом у нас с вами стэк не поменялся.
[11:28.760 --> 11:34.760]  Потому что следующим шагом мы за один переход с вами снимаем эту Т со стэка.
[11:36.440 --> 11:45.640]  Давайте мы тут обозначим слово V, а здесь мы обозначим это слово за X.
[11:45.640 --> 11:56.040]  И потом за какое-то количество шагов мы с вами, и с этой штуки мы должны перейдем в QG,
[11:56.040 --> 11:58.040]  Эпсилон, Эпсилон.
[11:58.040 --> 12:02.040]  Нам не важно какое количество шагов, нам важно, что здесь за один шаг мы что-то делаем.
[12:02.040 --> 12:05.080]  Теперь давайте пазл собирать.
[12:06.040 --> 12:12.040]  А из вот этой штуки, давайте я буду ее подчеркивать.
[12:12.040 --> 12:18.040]  Из вот этого перехода, что мы можем сказать?
[12:18.040 --> 12:22.040]  Давайте я буду помечать это зеленым.
[12:22.040 --> 12:40.040]  Что мы с вами можем из Куитова взять какой-то символ A, сняв со стэка Эпсилон, перейти в состояние QR и положить A на стэк.
[12:40.040 --> 12:42.040]  Это у нас принадлежит правиле грамматики.
[12:42.040 --> 12:56.040]  Причем мы с вами понимаем, что из этого соотношения следует, что W равняется A на U, потому что мы эту букву A должны были прочитать.
[12:56.040 --> 13:00.040]  Раз.
[13:00.040 --> 13:02.040]  Теперь смотрите на красную картину.
[13:02.040 --> 13:08.040]  Теперь давайте посмотрим с вами на красный переход.
[13:08.040 --> 13:20.040]  Из красного перехода мы с вами можем сказать, что у нас QR U A переходит в QS V A, не меняя стэк.
[13:20.040 --> 13:38.040]  Значит, существует такое, давайте я его назову U', такое, что U равно U' V.
[13:38.040 --> 13:54.040]  А что важно нам сказать, что QR U' A выводит QS A.
[13:54.040 --> 14:06.040]  И что мы здесь можем применить до вот этого факта?
[14:06.040 --> 14:08.040]  Индукцию, предположение индукции.
[14:08.040 --> 14:14.040]  Индукцию, да.
[14:14.040 --> 14:34.040]  Конечно же, тогда по предположению индукции мы получаем, что S A R S у нас выводится U'.
[14:34.040 --> 14:38.040]  Так, теперь давайте еще каким другим цветом обозначим.
[14:38.040 --> 14:42.040]  Давайте теперь синий возьмем.
[14:42.040 --> 14:46.040]  Объясним себе вот этот переход.
[14:46.040 --> 15:05.040]  Из этого перехода мы можем сказать, что у нас из QS по какой-то букве B, снимая со стэка A, мы переходим в состояние QT, получаем и на стэк кладем Epsilon.
[15:05.040 --> 15:11.040]  Оно будет лежать к правилам грамматики, причем, замечу, что у нас V равно BX будет.
[15:11.040 --> 15:19.040]  Сразу скажу, что B, A этому, либо буквы, либо пустые слова.
[15:19.040 --> 15:31.040]  И теперь давайте объясним еще какой-нибудь, еще один переход, который у нас с вами остался, давайте его обозначу серым цветом.
[15:31.040 --> 15:34.040]  Серый переход.
[15:34.040 --> 15:53.040]  Здесь все-таки аналогично на самом деле, получается, что QT X Epsilon выводит QG Epsilon Epsilon, следовательно, опять же, по предположению индукции,
[15:53.040 --> 16:02.040]  мы получаем, что из S A T житого у нас с вами выводится слово X, потому что это делает за меньшее количество шагов.
[16:02.040 --> 16:07.040]  Теперь давайте собирать все, что у нас с вами получается.
[16:07.040 --> 16:17.040]  Давайте я обведу, давайте я подчеркну, наверное, что-нибудь голубым цветом.
[16:17.040 --> 16:21.040]  Смотрите теперь внимательно, что у нас с вами есть.
[16:21.040 --> 16:36.040]  У нас есть вот такое правило, раз, есть такая штука, есть такая штука, есть такая штука.
[16:36.040 --> 16:41.040]  Теперь давайте сравним с тем, что у нас происходит справа.
[16:41.040 --> 16:49.040]  Из Q E Epsilon Q R A, из Q S B Epsilon у нас Q T Epsilon.
[16:49.040 --> 16:53.040]  Да, я напомню, что тут баг в правиле был.
[16:53.040 --> 16:59.040]  Из A T житого выводится X.
[16:59.040 --> 17:01.040]  Ну вот, четыре этих правила.
[17:01.040 --> 17:04.040]  Вот я, кажется, их писал в прошлый раз?
[17:04.040 --> 17:07.040]  Писал ли я их или нет?
[17:07.040 --> 17:12.040]  Вот они у нас Q E Epsilon Q R A, Q S B A Q T Epsilon.
[17:12.040 --> 17:18.040]  Ну и дальше у нас получается A T житого выводит какое-то слово, и A R S выводит это же слово.
[17:18.040 --> 17:24.040]  Что это нам дает? Это нам дает следующее.
[17:24.040 --> 17:34.040]  У нас получается с вами, сейчас, секунду.
[17:34.040 --> 17:38.040]  Давайте я буду вот так обозначать важные вкладки.
[17:38.040 --> 17:55.040]  Из этого у нас получается, что у нас, так как у нас есть правила A и G T, выводится A.
[17:55.040 --> 18:01.040]  Ну поскольку мы стэк опустошаем, сейчас покажу, где мы это делаем.
[18:01.040 --> 18:10.040]  Вот, Q E T V Epsilon Q G Epsilon, поэтому мы A и G T.
[18:10.040 --> 18:12.040]  И теперь смотрим, что у нас происходит.
[18:12.040 --> 18:20.040]  У нас есть A, дальше у нас есть какое-то A R S, вот оно.
[18:20.040 --> 18:25.040]  Дальше у нас с вами есть B, которое мы сняли со стэка.
[18:25.040 --> 18:29.040]  А здесь у нас получается A T житое.
[18:29.040 --> 18:33.040]  И это у нас есть такая правила грамматики.
[18:33.040 --> 18:45.040]  То мы получаем с вами, что из A и G T мы с вами выводим A A R S B A T житое.
[18:45.040 --> 18:50.040]  Причем смотрите, из A и R S мы выводим A, у штрих.
[18:50.040 --> 18:54.040]  Здесь мы выводим B, а здесь мы выводим X.
[18:54.040 --> 19:02.040]  Тогда, поскольку у нас B X это V, то получаем A U' V.
[19:02.040 --> 19:09.040]  Дальше, давайте я буду равенство уже писать.
[19:09.040 --> 19:17.040]  Здесь U' V равно U, а A U у нас W.
[19:17.040 --> 19:23.040]  Предположение доказано.
[19:32.040 --> 19:36.040]  То есть надо просто аккуратненько собрать все блоки воедино.
[19:36.040 --> 19:40.040]  Я пытаюсь теперь это все цветами обозначать.
[19:40.040 --> 19:47.040]  Как цветовая гамма помогает лучше воспринимать информацию?
[19:56.040 --> 19:59.040]  Вообще благодаря этим цветам прекраснее.
[19:59.040 --> 20:04.040]  Да и смотреть как бы там немножко так удобнее.
[20:04.040 --> 20:08.040]  Ну да, давайте тогда я буду какие-то основные факты цветами расписывать.
[20:08.040 --> 20:11.040]  Благо у нас теперь онлайн-доска.
[20:11.040 --> 20:18.040]  В ней есть не только один цвет, а есть и общий набор цветов.
[20:23.040 --> 20:26.040]  Понятен этот переход.
[20:29.040 --> 20:30.040]  Вот эта лемма.
[20:30.040 --> 20:33.040]  То есть по сути мы с вами лему в обратную сторону доказали.
[20:33.040 --> 20:36.040]  Вот и из леммы мы с вами потом выводили теорему.
[20:36.040 --> 20:39.040]  Мы это мы с вами в прошлый раз обсуждали.
[20:39.040 --> 20:45.040]  Давайте я теперь сейчас вот так вот сделаю магию.
[20:45.040 --> 20:48.040]  Давайте я после лекции эту магию сделаю.
[20:48.040 --> 20:52.040]  Я сделаю пасту вот сюда, вот куда-нибудь.
[20:52.040 --> 20:56.040]  В доску.
[20:56.040 --> 21:00.040]  Мы сейчас доказали, что одно под множество другого.
[21:00.040 --> 21:06.040]  Да, мы сейчас доказали, что любой МП-автомат распознает СКС-громатикой.
[21:06.040 --> 21:12.040]  Теперь нам надо сделать обратный переход из СКС-громатики, построить МП-автомат.
[21:18.040 --> 21:24.040]  Давайте я здесь место оставлю, потому что вот сюда мы будем вставлять доказательство теоремы.
[21:24.040 --> 21:26.040]  Даже чуть-чуть больше.
[21:27.040 --> 21:33.040]  Давайте теперь тогда мы поговорим с вами о переходах из СКС-громатики в МП-автомат.
[21:33.040 --> 21:37.040]  На самом деле здесь все интуитивно проще.
[21:43.040 --> 21:47.040]  Опять же тут будет леммы две, точнее одна.
[21:47.040 --> 21:50.040]  Но правило намного проще.
[21:50.040 --> 21:54.040]  Смотрите, идея очень простая.
[21:54.040 --> 21:59.040]  Она заключается в том, что давайте вот у нас есть СКС-громатика.
[21:59.040 --> 22:04.040]  По сути, что каждая правила говорит, что у нас есть какая-то левая часть,
[22:04.040 --> 22:08.040]  которая раскрывается в некоторую правую часть.
[22:08.040 --> 22:12.040]  Но на самом деле это не что иное, как эмуляция стека.
[22:12.040 --> 22:16.040]  Вы берете, вынимаете со стека символ с левой частью правила
[22:16.040 --> 22:20.040]  и добавляете то, что у вас находится в правой части правила.
[22:20.040 --> 22:23.040]  Сейчас я поясню это формальнее.
[22:23.040 --> 22:25.040]  Вот смотрите.
[22:25.040 --> 22:28.040]  Давайте обозначим.
[22:28.040 --> 22:31.040]  Опять же у нас есть МП-автомат с вами.
[22:31.040 --> 22:34.040]  Точнее у нас есть СКС-громатика.
[22:34.040 --> 22:38.040]  Пусть у нас G это NСПС.
[22:38.040 --> 22:42.040]  И мы с вами говорим, давайте заведем два состояния.
[22:42.040 --> 22:45.040]  Q0 и Q1.
[22:45.040 --> 22:48.040]  Я сейчас картинку перерисую.
[22:48.040 --> 22:51.040]  Значит здесь у нас с вами будет правило такое.
[22:51.040 --> 22:57.040]  Мы читаем букву ε, снимаем со стека ε.
[22:57.040 --> 23:01.040]  А здесь мы с вами будем делать вот такую вещь.
[23:01.040 --> 23:04.040]  То есть мы добавляем стартовый символ.
[23:04.040 --> 23:08.040]  По сути, это такой маркер того, что мы начали разбор громатики.
[23:08.040 --> 23:14.040]  Если допустим, у нас с вами в громатике было правило САСБС.
[23:14.040 --> 23:17.040]  С-эпсилон это громатика для ПСП, напомню.
[23:17.040 --> 23:20.040]  У нас с вами для правильных кубочных последовательностей.
[23:20.040 --> 23:23.040]  То мы сделаем очень простую вещь.
[23:23.040 --> 23:25.040]  Давайте добавим правила здесь.
[23:25.040 --> 23:33.040]  Во-первых, если у нас с вами мы читаем букву А.
[23:33.040 --> 23:38.040]  В том случае, если у нас на стеке находится эта буква А.
[23:38.040 --> 23:43.040]  Здесь важная особенность, что стековый алфавит у нас является подморством основного.
[23:43.040 --> 23:49.040]  Здесь, если у нас со стека идет B, то даем вот так.
[23:49.040 --> 23:55.040]  То есть если мы на стеке встречаем терминал, то мы его считываем, пишем букву.
[23:55.040 --> 23:58.040]  Если не так, то увы.
[23:58.040 --> 24:02.040]  И здесь мы еще добавляем интересное правило.
[24:02.040 --> 24:04.040]  Для этого случая оно будет такое.
[24:04.040 --> 24:09.040]  Мы берем, читаем пустое слово и по сути пользуемся раскрытием правила.
[24:09.040 --> 24:17.040]  Здесь важно только история в том, что правило здесь читается в обратном порядке.
[24:20.040 --> 24:23.040]  Видите, у нас здесь называется ASBS.
[24:23.040 --> 24:28.040]  Поскольку у нас по сути слова читаются в порядке очереди.
[24:28.040 --> 24:30.040]  То есть у нас символы читаются по порядку.
[24:30.040 --> 24:33.040]  А стек работает немножко в обратном порядке.
[24:33.040 --> 24:40.040]  То есть если у нас чтение слова это LFO, last in, first out.
[24:40.040 --> 24:42.040]  Нет, стоп.
[24:42.040 --> 24:44.040]  Очередь это FIFA.
[24:44.040 --> 24:46.040]  First in, first out.
[24:46.040 --> 24:49.040]  Но стек это у нас наоборот LFO, last in, first out.
[24:49.040 --> 24:54.040]  За счет этого нам нужно по сути сделать перевод с порядка справа налево.
[24:56.040 --> 25:02.040]  Вот такая у нас грамматика с вами будет получаться.
[25:02.040 --> 25:05.040]  И теперь смотрите, что мы будем доказывать с вами.
[25:05.040 --> 25:07.040]  Давайте я опять же выпишу.
[25:10.040 --> 25:13.040]  Нам опять же нужно будет с вами показать LEM-у.
[25:13.040 --> 25:19.040]  Которая говорит, что из a мы выводим слово w тогда и только тогда,
[25:19.040 --> 25:27.040]  когда из q1 va мы можем вывести q1 епсилон-эпсилон.
[25:30.040 --> 25:33.040]  Опять же LEM-а будут оказываться в обе стороны.
[25:33.040 --> 25:41.040]  Прежде чем мы поговорим с этим, давайте поймем, как из LEM-а мы выведем наш теорем.
[25:41.040 --> 25:43.040]  Что такое a?
[25:43.040 --> 25:45.040]  А, это какой-то не терминал.
[25:45.040 --> 25:47.040]  Вы грамматики.
[25:53.040 --> 25:57.040]  Да, просто у нас по сути говорим, что вот у нас есть какое-то слово.
[25:57.040 --> 26:00.040]  Мы можем по сути сделать следующее.
[26:00.040 --> 26:03.040]  Вот у нас на стеке лежит буква a, мы можем это.
[26:03.040 --> 26:07.040]  Здесь выводим как грамматики, а здесь при помощи того, что оно лежит на стеке,
[26:07.040 --> 26:09.040]  мы попытаемся прочитать это слово целиком.
[26:12.040 --> 26:16.040]  Но давайте теперь из LEM-а мы с вами попробуем теорему соорудить.
[26:16.040 --> 26:22.040]  Значит, что такое у нас в LEM-е лежит к языку, задаваемой грамматикой?
[26:22.040 --> 26:28.040]  Тогда и только тогда, когда у нас из s мы выводим какое-то слово w.
[26:33.040 --> 26:36.040]  И, пользуясь LEM-ой, что мы получаем?
[26:36.040 --> 26:46.040]  Мы получаем, что из q1 w,s мы можем прочитать q1, epsilon, epsilon.
[26:46.040 --> 26:50.040]  Давайте я как раз подчеркну его красным цветом.
[26:54.040 --> 26:56.040]  И переход тоже обозначу красным цветом.
[26:56.040 --> 26:59.040]  Это значит, что он появился у нас из LEM-а.
[26:59.040 --> 27:08.040]  Ну, смотрите, как мы можем добраться в q1, epsilon, epsilon.
[27:08.040 --> 27:10.040]  Из q1 w,s.
[27:12.040 --> 27:15.040]  Давайте соединим это двумя вещами.
[27:15.040 --> 27:18.040]  Я сейчас такую перемычку мы с вами сделаем.
[27:20.040 --> 27:24.040]  Итак, теперь смотрите, важно, из q0, давайте нет,
[27:24.040 --> 27:28.040]  если у нас w лежит в языке, задаваемым mp-автоматом,
[27:28.040 --> 27:30.040]  тогда и только тогда.
[27:30.040 --> 27:38.040]  Когда у нас из q0 w, epsilon мы можем с вами прочесть...
[27:38.040 --> 27:42.040]  Кстати, забыл сказать, что вот это состояние у нас будет завершающее.
[27:42.040 --> 27:45.040]  q1, epsilon, epsilon.
[27:45.040 --> 27:48.040]  Давайте посмотрим на первый переход.
[27:48.040 --> 27:51.040]  Что у нас за один переход с вами осуществляется?
[27:51.040 --> 27:57.040]  Мы берем, используем правила q0, epsilon, epsilon, q1, s.
[27:57.040 --> 28:04.040]  Это значит, что за один раз у нас с вами здесь ничего не меняется,
[28:04.040 --> 28:07.040]  а здесь у нас меняется вот так.
[28:10.040 --> 28:13.040]  Вот такая транзитивность у нас с вами появляется.
[28:13.040 --> 28:18.040]  Ну а теперь обратим внимание, что у нас с вами в нижней части,
[28:21.040 --> 28:24.040]  и что у нас с вами в верхней части.
[28:25.040 --> 28:27.040]  Мы на стэк положили s.
[28:28.040 --> 28:30.040]  Потому что у нас никакого другого правила нет,
[28:30.040 --> 28:34.040]  то есть это первое правило, которое у нас есть для того,
[28:34.040 --> 28:36.040]  чтобы с q0 вообще как-то выйти.
[28:36.040 --> 28:40.040]  Нам нужно из старта в стэнк дойти за завершающего.
[28:43.040 --> 28:47.040]  Да, ну один переход есть, поэтому мы этот s должны положить на стэк.
[28:49.040 --> 28:53.040]  Вот, ну мы видим, что вот эти два факта ровно одинаковые.
[28:54.040 --> 28:58.040]  Вот, а вот этот вот переход у нас появляется так как...
[28:59.040 --> 29:01.040]  Давайте тоже подпишу.
[29:09.040 --> 29:11.040]  Надо дойти до конца.
[29:14.040 --> 29:16.040]  Только один.
[29:19.040 --> 29:22.040]  Вот, из левым мы с вами доказали теорему.
[29:22.040 --> 29:24.040]  Теперь давайте...
[29:26.040 --> 29:30.040]  Если вопросы по лемме, если нет вопросов по лемме,
[29:30.040 --> 29:33.040]  то мы с вами сейчас будем доказывать ее.
[29:33.040 --> 29:35.040]  Еще раз, почему мы доказали теорему?
[29:35.040 --> 29:37.040]  Можете, пожалуйста, повторить.
[29:37.040 --> 29:39.040]  Почему мы доказали теорему?
[29:39.040 --> 29:41.040]  Еще раз, если у нас слово лежит в языке,
[29:41.040 --> 29:43.040]  задаваем грамматика тогда и только тогда,
[29:43.040 --> 29:45.040]  когда из s выводится w.
[29:45.040 --> 29:49.040]  Из леммы мы получаем, что вот это вот по факту...
[29:50.040 --> 29:52.040]  Давайте... Не так написал.
[29:52.040 --> 29:54.040]  Сейчас давайте сотру немножечко тут.
[29:54.040 --> 29:56.040]  Красное сотру.
[29:56.040 --> 29:58.040]  Я понял.
[29:58.040 --> 30:01.040]  Вот, тогда вот этот переход у нас обеспечивается леммой.
[30:01.040 --> 30:03.040]  Да, из s выводится w, тогда и только тогда,
[30:03.040 --> 30:06.040]  когда из q1v и s выводится q1εn.
[30:06.040 --> 30:10.040]  С другой стороны, у нас v лежит в языке, задаваемым автоматом,
[30:10.040 --> 30:14.040]  тогда и только тогда, когда из q0vεn вводится q1εn.
[30:14.040 --> 30:17.040]  Но поскольку мы должны совершить один переход,
[30:17.040 --> 30:20.040]  и он обязательный, то, по сути,
[30:20.040 --> 30:23.040]  принадлежность языка автомату эквалиптует к тому,
[30:23.040 --> 30:26.040]  что обведено в голубой рамочке.
[30:26.040 --> 30:29.040]  Да, смотрим на то, что в голубой рамочке снизу,
[30:29.040 --> 30:31.040]  а то, что в голубой с рамочки сверху.
[30:31.040 --> 30:33.040]  Понимаем, что это одно и то же.
[30:33.040 --> 30:37.040]  Поэтому у нас с вами тут тоже появляется вот такой переход.
[30:40.040 --> 30:43.040]  А вот то, что на доске написано справа,
[30:43.040 --> 30:46.040]  эти правила мы и добавляем, да?
[30:46.040 --> 30:48.040]  Да, да, да.
[30:48.040 --> 30:52.040]  То есть вот такие правила перехода у нас в автомате.
[30:58.040 --> 31:01.040]  Теперь давайте докажем лему.
[31:07.040 --> 31:10.040]  Опять же, давайте в обе стороны начнем.
[31:10.040 --> 31:13.040]  Я не помню, тут написал, есть ли индукция или нет.
[31:13.040 --> 31:15.040]  Нет индукции.
[31:15.040 --> 31:18.040]  Первый факт, которым мы так будем доказывать,
[31:18.040 --> 31:21.040]  что если из A вводится W,
[31:21.040 --> 31:24.040]  то из этого будет вводиться,
[31:24.040 --> 31:33.040]  что из Q1BA у нас выводится Q1εε.
[31:45.040 --> 31:50.040]  Давайте поймем, каким образом это мы с вами сможем сделать.
[31:50.040 --> 31:55.040]  На самом деле это делается индукцией по длине дерева вывода.
[32:04.040 --> 32:06.040]  А у дерева вывода есть длина?
[32:06.040 --> 32:09.040]  Да, у дерева вывода есть длина.
[32:10.040 --> 32:13.040]  А у дерева вывода есть длина?
[32:13.040 --> 32:16.040]  Да, напоминаю, что дерево вывода
[32:16.040 --> 32:21.040]  это последовательность выводов из одного терминала какое-то слово.
[32:21.040 --> 32:24.040]  Да, если это представлять,
[32:24.040 --> 32:27.040]  давайте напишу количество ребер в дереве.
[32:27.040 --> 32:32.040]  Каждое ребро – это переход по раскрытию по правилам грамматики.
[32:32.040 --> 32:35.040]  Итак, давайте с базой начнем.
[32:39.040 --> 32:42.040]  Тут можно K поставить, и это параметр будет K.
[32:44.040 --> 32:47.040]  Итак, давайте начнем с базы.
[32:47.040 --> 32:49.040]  С базы начнем.
[32:52.040 --> 32:55.040]  Тут можно K поставить, и это параметр будет K.
[32:57.040 --> 32:59.040]  База.
[33:00.040 --> 33:02.040]  K равняется единице.
[33:02.040 --> 33:08.040]  Тогда у нас из A за один шаг выводится слово W.
[33:10.040 --> 33:13.040]  Ну что такое слово W? Давайте его обозначим.
[33:14.040 --> 33:20.040]  Пусть W – это у нас W1, W2 и так далее Wnt.
[33:21.040 --> 33:24.040]  Тогда давайте собирать этот переход.
[33:25.040 --> 33:32.040]  Что у нас получается? У нас получается, что из Q1 в A мы…
[33:34.040 --> 33:36.040]  Какое у нас правило получается?
[33:39.040 --> 33:41.040]  У нас получается правило…
[33:42.040 --> 33:46.040]  Тут очень важно. Смотрите, Q1, W…
[33:47.040 --> 33:49.040]  И у нас слова разворачиваются.
[33:51.040 --> 33:55.040]  Wn, Wn-1, тогда далее W1.
[33:58.040 --> 34:04.040]  Так как A у нас с вами выводит W1, Wn,
[34:04.040 --> 34:07.040]  и у нас в итоге есть правило, которое говорит,
[34:07.040 --> 34:12.040]  что из Q1, A мы кладем на stack…
[34:16.040 --> 34:20.040]  Q1 и на stack мы кладем слово W, Wnt.
[34:27.040 --> 34:30.040]  Вот, это нам важно. То есть мы берем, переворачиваем слово.
[34:31.040 --> 34:36.040]  И тогда мы начинаем эти буковки снимать с вами.
[34:38.040 --> 34:42.040]  Снимаем по одной букве.
[34:44.040 --> 34:46.040]  Сначала снимается первая буква.
[34:51.040 --> 34:56.040]  Wn, W… Так, сейчас.
[34:58.040 --> 35:01.040]  Wn, W-1 и так далее W2.
[35:02.040 --> 35:04.040]  Потом еще раз снимаем букву.
[35:07.040 --> 35:13.040]  Q1, W3. Ну понятно, что если букв у нас меньше будет, то…
[35:16.040 --> 35:18.040]  W3. Ну и так повторяем.
[35:23.040 --> 35:27.040]  У нас получается Q1, Wn, W…
[35:28.040 --> 35:31.040]  И после этого у нас получается Q1, A.
[35:34.040 --> 35:35.040]  Вас доказали?
[35:37.040 --> 35:38.040]  Да.
[35:44.040 --> 35:45.040]  Теперь переход.
[35:50.040 --> 35:57.040]  Давайте посмотрим на первое раскрытие.
[35:57.040 --> 35:59.040]  Что это значит? Смотрите, у нас A.
[36:00.040 --> 36:03.040]  Давайте посмотрим, за первую шагу оно вывелось в какое-то альфа.
[36:04.040 --> 36:09.040]  А потом за какое-то другое количество слов вывелось W.
[36:12.040 --> 36:18.040]  Тогда давайте посмотрим, что у нас может быть.
[36:18.040 --> 36:23.040]  Пусть у нас альфа, это альфа1 и так далее какое-то альфаn.
[36:24.040 --> 36:33.040]  Причем важно, модуль альфаiT у нас с вами будет лежать в объединении n и σ.
[36:34.040 --> 36:36.040]  То есть это либо терминал, либо нетерминал.
[36:37.040 --> 36:42.040]  А мы будем использовать альфа1, альфа2.
[36:42.040 --> 36:45.040]  А альфа3 у нас будет лежать в объединении n и σ.
[36:46.040 --> 36:48.040]  То есть это либо терминал, либо нетерминал.
[36:53.040 --> 37:06.040]  Тогда из Q1, W, A мы с вами можем вывести следующую вещь.
[37:07.040 --> 37:08.040]  Так, сейчас, секунду.
[37:09.040 --> 37:11.040]  Q1, W.
[37:12.040 --> 37:17.040]  И дальше у нас идет последовательность этих символов в обратном порядке.
[37:29.040 --> 37:35.040]  Давайте я сейчас немножечко такую страшную вещь делаю, чтобы было упрощение перебора случаев.
[37:37.040 --> 37:42.040]  Понимаете ли вы, что здесь можно поставить...
[37:45.040 --> 37:47.040]  Нет, давайте не будем так делать.
[37:50.040 --> 37:53.040]  Давайте я на одном примере покажу.
[37:53.040 --> 38:08.040]  Если у нас альфаnT принадлежит n, то тогда мы можем воспользоваться предположением индукции.
[38:08.040 --> 38:18.040]  Альфаn выводит некоторая Wn.
[38:20.040 --> 38:36.040]  И из этого будет следовать, что у нас с вами Q1, альфаn, точнее наоборот,
[38:36.040 --> 38:46.040]  Wn, альфаn будет выводить какой-то Q1, епсилон, епсилон.
[38:47.040 --> 38:50.040]  И это все будет работать по предположению индукции.
[38:50.040 --> 39:09.040]  А если у нас альфаn принадлежит сигма, то тогда у нас Q1.
[39:20.040 --> 39:23.040]  Давайте я тоже напишу вот так вот.
[39:24.040 --> 39:31.040]  Все-таки это соотношение у нас транзитивное, поэтому мы можем сказать, что альфаv, n тоже выводит некоторую Wn.
[39:32.040 --> 39:35.040]  Но при этом смотрите, у нас альфа... Нет, так?
[39:37.040 --> 39:40.040]  Сейчас, давайте подумаем, можем ли мы так сказать.
[39:41.040 --> 39:44.040]  Если у нас с вами правила грамматики...
[39:55.040 --> 40:04.040]  В принципе, да, мы можем сказать вот так, потому что штопор – это наименьшее транзитивное соотношение, которое определяется для всех правил.
[40:04.040 --> 40:09.040]  Поэтому мы так тоже можем писать, нам этого никто не мешал.
[40:10.040 --> 40:33.040]  И тогда у нас получается Q1 Wn, альфа, давайте я обозначу Wn, выводит Q1, епсилон, епсилон, так как это у нас с вами правила грамматики.
[40:34.040 --> 40:54.040]  Вот. Единственное, тут надо сказать, что вот у нас альфа...
[40:54.040 --> 41:09.040]  Давайте вот тут я напишу, вот такой зумин сделаем, что из альфа это равно альфа1 и так далее, альфаn, каждый из которых у нас выводит W1 и так далее, Wnt, которое равно епсилон.
[41:12.040 --> 41:14.040]  То есть это нам просто надо будет сказать.
[41:15.040 --> 41:19.040]  Вот, теперь смотрите, продолжаем вот эту картинку.
[41:21.040 --> 41:23.040]  Что равно епсилон? Можете еще раз повторить?
[41:24.040 --> 41:30.040]  Ой, я молодец, конечно. Нет, W1 Wn равно W, вот этому слову.
[41:32.040 --> 41:33.040]  Вот так вот.
[41:34.040 --> 41:40.040]  Да, то есть у нас получается из альфа ВЦВ, но как? Каждый из них терминалов у нас...
[41:42.040 --> 41:49.040]  Альфа это набор не терминалов или терминалов альфаитых, а из каждого альфаитого у нас выводятся какие-то Wитые.
[41:50.040 --> 41:53.040]  Вот, поэтому W это у нас набор слов.
[41:54.040 --> 41:56.040]  Ну, набор слов W1 и так далее W.
[42:01.040 --> 42:05.040]  Вот, и тогда смотрите, вот то, что мы написали с вами, что у нас получается?
[42:06.040 --> 42:10.040]  У нас получается с вами, что из Q1 Wn альфа n в Вольт с Q1 епсилон епсилон.
[42:12.040 --> 42:15.040]  Как мы бы не рассмотрели буква, это была бы или не буква.
[42:15.040 --> 42:19.040]  Тогда у нас получается, что мы можем с вами по сути...
[42:20.040 --> 42:22.040]  Давайте я напишу вот так.
[42:23.040 --> 42:29.040]  W1 и так далее Wn альфа n и так далее альфа 1.
[42:30.040 --> 42:35.040]  Но это можно сделать для любого альфаитного, то есть для любого слагаемого.
[42:36.040 --> 42:39.040]  Тут можно везде альфа n заменить и любое k.
[42:40.040 --> 42:45.040]  Получаем, что из этого выводится Q1 W2 Wn.
[42:46.040 --> 42:48.040]  Здесь у нас получается альфа с едаем.
[42:49.040 --> 42:51.040]  Получается альфа n и так далее альфа 2.
[42:52.040 --> 43:01.040]  И делая так какое-то количество раз, мы получим с вами в последний раз Q1 Wn альфа nt,
[43:01.040 --> 43:04.040]  который выводит Q1 епсилон епсилон.
[43:07.040 --> 43:08.040]  Да, который выводит Q1 епсилон епсилон.
[43:09.040 --> 43:10.040]  Поэтому мы доказали этот факт с вами.
[43:11.040 --> 43:12.040]  То есть переход.
[43:13.040 --> 43:14.040]  Тут надо аккуратненько рассмотреть важный поэнт.
[43:15.040 --> 43:16.040]  Надо рассмотреть два случая.
[43:17.040 --> 43:21.040]  Когда у нас в стеке лежит не терминал и когда в стеке лежит терминал.
[43:22.040 --> 43:27.040]  Когда в стеке лежит не терминал, мы его раскрываем по правилам грамматики и по предположениям индукции.
[43:28.040 --> 43:37.040]  Когда у нас с вами терминал, буква, мы просто снимаем ее со стека и кладем, прочитываем слово.
[43:40.040 --> 43:43.040]  То есть они почти друг от друга ничем не отличаются, да, с помощью трюка?
[43:44.040 --> 43:46.040]  Да-да, они именно ничем не отличаются.
[43:50.040 --> 43:54.040]  Вот, смотрите, идея простая, формально чуть-чуть сложно пишется.
[43:58.040 --> 44:01.040]  Это был переход в одну, это было доказательство в одну сторону.
[44:03.040 --> 44:05.040]  И теперь давайте доказательства в другую сторону.
[44:06.040 --> 44:23.040]  Значит, смотрите, теперь мы показываем, что если у нас Q1 в A выводится Q1 епсилон епсилон, то из A выводится W.
[44:24.040 --> 44:33.040]  Опять же, индукция по количеству переходов.
[44:42.040 --> 44:44.040]  Ну, давайте скажем базу.
[44:44.040 --> 44:47.040]  Давайте подумаем, какая тут база у нас с вами будет.
[44:56.040 --> 44:57.040]  Море может быть.
[45:00.040 --> 45:02.040]  Давайте я напишу вот так вот.
[45:03.040 --> 45:05.040]  A принадлежит N объединить с Сигмой.
[45:06.040 --> 45:08.040]  Но все равно это будет выполнено.
[45:08.040 --> 45:14.040]  Тогда мы за ноль это сделать не сможем, да, потому что нам нужно A со стека освободить.
[45:15.040 --> 45:17.040]  Но за один переход мы можем сделать это.
[45:18.040 --> 45:19.040]  Один переход.
[45:20.040 --> 45:26.040]  Тогда у нас с учетом одного перехода из этого будет следовать, что у нас A...
[45:29.040 --> 45:30.040]  Так, секунду.
[45:30.040 --> 45:32.040]  А принадлежит Сигма.
[45:33.040 --> 45:43.040]  Тогда, поскольку мы делаем это за один переход, то у нас получается Q1 в A за один переход мы переходим в Q1 епсилон епсилон.
[45:44.040 --> 45:45.040]  А, извините.
[45:46.040 --> 45:47.040]  Да, угу.
[45:47.040 --> 45:56.040]  Ну, как мы делаем это за один переход, то у нас получается Q1 в A за один переход мы переходим в Q1 епсилон епсилон.
[45:57.040 --> 45:58.040]  Ну, извините.
[45:59.040 --> 46:01.040]  Да, угу. А, все окей, да?
[46:02.040 --> 46:06.040]  Вот, тогда у нас получается мы из Q1 в A переходим в епсилон епсилон.
[46:07.040 --> 46:08.040]  Ну, это делается за одно правило.
[46:09.040 --> 46:13.040]  За одно правило мы можем это сделать только по правилу Q1 A A равняется Q1...
[46:14.040 --> 46:16.040]  Из Q1 A A мы выводим Q1 епсилон.
[46:17.040 --> 46:20.040]  Следовательно, W равно A.
[46:21.040 --> 46:28.040]  И из A мы можем вывести W, так как штопор это у нас рефлексивное отношение.
[46:39.040 --> 46:41.040]  Ну вот, это база.
[46:44.040 --> 46:45.040]  Теперь переход.
[46:48.040 --> 47:03.040]  Пусть у нас с вами из Q1 W A за K переходов Q1 епсилон епсилон.
[47:04.040 --> 47:05.040]  Вот с Q1 епсилон епсилон.
[47:09.040 --> 47:11.040]  Причем K больше единицы.
[47:18.040 --> 47:25.040]  Тогда можно показать, что A будет принадлежать не терминалам.
[47:26.040 --> 47:34.040]  Почему? Потому что если бы A был бы терминалом, то мы бы его сняли первым правилом со стека, а дальше бы мы никуда не продвинулись.
[47:37.040 --> 47:38.040]  Вот, я подчеркну.
[47:39.040 --> 47:56.040]  Значит, за один раз у нас если A, у нас есть правило α1 и т.д., αn, где у нас αk... так, k было у нас.
[47:58.040 --> 48:06.040]  αmt принадлежит объединению n с сигмой, то мы с вами можем сделать вот такую вот интересную вещь.
[48:09.040 --> 48:22.040]  Расписать, собственно, у1 W A за один шаг у нас с вами получается следующая вещь.
[48:27.040 --> 48:32.040]  у1 W и стек в обратном порядке, αn и т.д., α1.
[48:39.040 --> 48:41.040]  Да, мы перевернули стек.
[48:43.040 --> 48:44.040]  Вот, по второму правилу.
[48:46.040 --> 48:50.040]  А теперь нам нужно с вами аккуратненько вот эту вот штучку разобрать.
[48:52.040 --> 48:56.040]  То есть у нас здесь получается, что мы из этой штуки выводим у1 епсилон епсилон.
[48:56.040 --> 48:57.040]  Важно.
[49:01.040 --> 49:06.040]  За один шаг мы снимаем что-то со стека.
[49:19.040 --> 49:21.040]  Один элемент со стека.
[49:27.040 --> 49:34.040]  Из этого на самом деле мы можем сказать, что α1 будет выводить некоторое в W1.
[49:39.040 --> 49:46.040]  α2 будет выводить какое-то W2 и т.д.
[49:47.040 --> 49:50.040]  αn будет выводить Wn.
[49:56.040 --> 50:01.040]  Ой, нет, стоп.
[50:03.040 --> 50:09.040]  Сейчас, мы снимаем ровно один элемент со стека. Всегда.
[50:20.040 --> 50:24.040]  Почему снимаем? Второе правило, оно же кладет на стек.
[50:24.040 --> 50:28.040]  Не-не-не, ну всегда мы должны заплатить на вход.
[50:31.040 --> 50:35.040]  Да, смотрите, тут я немножко неаккуратно написал, давайте я сотру.
[50:36.040 --> 50:40.040]  Что у нас получается? У нас есть α1, а2 и т.д. аn.
[50:42.040 --> 50:45.040]  Какие у нас возможности могут быть?
[50:45.040 --> 50:50.040]  То есть, либо это терминалы, либо это не терминалы.
[50:50.040 --> 50:53.040]  Ну, с терминалами вроде бы все понятно.
[50:59.040 --> 51:05.040]  Тут важно сказать, вот тут есть одна важная особенность.
[51:06.040 --> 51:08.040]  То, что давайте
[51:08.040 --> 51:12.040]  пусть это у нас вводится в какое-то β1,
[51:12.040 --> 51:14.040]  вот это вводится в какое-то β2,
[51:14.040 --> 51:16.040]  а вот это вводится в какое-то βn.
[51:16.040 --> 51:21.040]  Если причем у нас αi и σ, элементы алфавита,
[51:21.040 --> 51:31.040]  то мы, в принципе, можем снимать ровно один элемент,
[51:32.040 --> 51:40.040]  в принципе, можем сказать, что это один и тот же символ.
[51:40.040 --> 51:44.040]  Давайте я просто покажу, вот по аналогии, чтобы вы поняли.
[51:46.040 --> 51:53.040]  Пусть у нас α1 и β1, причем у нас α1 у нас принадлежит n.
[51:53.040 --> 51:56.040]  Тогда как у нас будет стек с вами меняться?
[51:56.040 --> 52:04.040]  У нас было q1, w, αn и так далее, α1.
[52:04.040 --> 52:09.040]  За один шаг у нас что проходит?
[52:09.040 --> 52:15.040]  У нас получается q1, w, тут αn и так далее, α2,
[52:15.040 --> 52:18.040]  а здесь у нас стоит β1 перевернутое.
[52:22.040 --> 52:25.040]  И тут давайте я напишу важный момент.
[52:26.040 --> 52:53.040]  Дождемся, пока на стеке останется αn и так далее, α2.
[52:53.040 --> 52:55.040]  То есть будем ждать специально такого момента,
[52:55.040 --> 52:58.040]  когда у нас останется только αn, а2.
[52:58.040 --> 53:01.040]  Почему такой момент произойдет?
[53:05.040 --> 53:07.040]  Потому что в конце мы слово выведем.
[53:07.040 --> 53:13.040]  Да, так как в конце стек пустой.
[53:14.040 --> 53:17.040]  Стек пустой.
[53:17.040 --> 53:24.040]  И мы снимаем ровно один символ всегда.
[53:33.040 --> 53:39.040]  Вот, и тогда мы при обработке этого α1
[53:39.040 --> 53:41.040]  мы должны прочитать какое-то слово w1.
[53:44.040 --> 53:55.040]  Да, в этом моменте у нас будет получаться, смотрите, q1,
[53:55.040 --> 54:02.040]  здесь какой-то w', а здесь у нас будет αn и так далее, α2.
[54:04.040 --> 54:08.040]  Давайте я вот тут тоже сделаю вот такой вот небольшой флешбэк.
[54:09.040 --> 54:12.040]  Аккуратненько сделаем.
[54:13.040 --> 54:18.040]  Вот этот вот красный штопор, он приведет вот такому красному штопору.
[54:20.040 --> 54:23.040]  Да, вот я показываю, очень важно.
[54:24.040 --> 54:33.040]  Тогда из этого мы можем сказать, что существует такое u,
[54:33.040 --> 54:44.040]  что v равно uv', и важно, что из этого важно,
[54:44.040 --> 54:54.040]  что из q1 uα1, давайте я его специально обозначу это u,
[54:54.040 --> 54:57.040]  пусть у нас будет v1.
[55:05.040 --> 55:12.040]  Из q1 v1 α1 у нас будет выводиться q1 εε.
[55:14.040 --> 55:18.040]  Из этого будет следовать, что α1 выводится w1.
[55:24.040 --> 55:28.040]  Да, тут очень тонкий момент, что нам нужно разгрести вот этот вот стак.
[55:29.040 --> 55:33.040]  Почему из q1 α1 выводится εε?
[55:35.040 --> 55:37.040]  Давайте посмотрим внимательно.
[55:37.040 --> 55:44.040]  Получается, что из q1 v αn α1 получается q1 v' αn α2.
[55:44.040 --> 55:48.040]  Что это получается? У нас α1 со стека улетел? Улетел.
[55:50.040 --> 55:54.040]  При этом мы взяли за этот момент какое-то слово w1.
[55:54.040 --> 56:02.040]  То есть у нас получается, что w это w1 w', мы w1 прочитали, остается w'.
[56:07.040 --> 56:09.040]  Давайте я напишу по аналогии.
[56:15.040 --> 56:21.040]  αnt выводит wnt.
[56:23.040 --> 56:26.040]  Любого n равное 1 и так далее n.
[56:31.040 --> 56:35.040]  То есть тут аккуратненько надо воспользоваться предположениями индукций.
[56:35.040 --> 56:39.040]  То есть вот это вот у нас предположение индукции, если что сработало.
[56:47.040 --> 56:49.040]  Ну и тогда смотрите, что у нас получается.
[56:51.040 --> 56:52.040]  Итого.
[56:58.040 --> 57:03.040]  У нас, смотрите, a выводил α1 и так далее αn.
[57:06.040 --> 57:14.040]  При этом αкт выводит w... так.
[57:18.040 --> 57:19.040]  Вот так вот.
[57:20.040 --> 57:22.040]  αmt выводит wmt.
[57:22.040 --> 57:28.040]  А v1 и так далее vmt, которое мы съедаем, оно будет равнять слово w,
[57:28.040 --> 57:32.040]  потому что в конце концов мы должны были стэк опустошить.
[57:33.040 --> 57:40.040]  И из этого у нас выходит, что из а мы можем вывести слово w1 и так далее wm.
[57:41.040 --> 57:43.040]  А это равняет слово w.
[57:46.040 --> 57:48.040]  Давайте я еще раз прочитаю.
[57:48.040 --> 57:52.040]  Давайте я еще раз просуммирую, чтобы было понятно, что произошло.
[57:55.040 --> 57:57.040]  Мы на самом деле доказали с вами теорему.
[57:57.040 --> 57:59.040]  Теперь вкратце по шагам.
[57:59.040 --> 58:03.040]  Давайте, чтобы у нас с вами осталась фиксация, как это доказывается.
[58:04.040 --> 58:07.040]  Значит, мы построили ПКС грамматики mp-автомат.
[58:07.040 --> 58:08.040]  Каким образом?
[58:08.040 --> 58:11.040]  Мы сказали, что если у нас встречается какой-то не терминал,
[58:11.040 --> 58:19.040]  то мы берем левую часть этого правила, закидываем на стэк в обратном порядке те элементы, которые находились в правой части правила.
[58:20.040 --> 58:22.040]  Ну и делаем аккуратненько.
[58:22.040 --> 58:25.040]  Значит, в одну сторону, как мы это доказываем.
[58:25.040 --> 58:26.040]  Мы посмотрим.
[58:28.040 --> 58:32.040]  Мы смотрим с вами, раскрываем α как последность не терминалов.
[58:33.040 --> 58:35.040]  Да, и понимаем.
[58:35.040 --> 58:41.040]  Т.е. мы говорили следующее, что если из α у нас выводится табуль V, то почему-то у нас такое правило грамматики есть.
[58:43.040 --> 58:44.040]  school.
[58:46.040 --> 58:47.040]  Так, сейчас.
[58:50.040 --> 58:52.040]  Вот тогда мы из α вывели какое-то правило.
[58:52.040 --> 58:55.040]  То есть у нас из α рассматриваем первые правила, которые выводят не терминал.
[58:55.040 --> 59:02.040]  И показываем, что, по сути, мы можем этот не терминал составлять, а потом выводить первый прав不会 быть у нас не терминалов.
[59:02.040 --> 59:03.040]  Это же вопрос.
[59:03.040 --> 59:09.040]  По сути, мы можем это не терминал со стека снять, а при этом забрав какой-то кусочек.
[59:09.040 --> 59:12.040]  Вот, и в этом мы делаем предположение индукции.
[59:12.040 --> 59:15.040]  А здесь мы делаем немножко другую интересную вещь, в обратную сторону.
[59:15.040 --> 59:23.040]  Мы говорим, окей, пусть у нас находится не терминал, давайте мы его положим на стэк то, что у нас происходит,
[59:23.040 --> 59:28.040]  и дождемся первого раза момента, когда у нас все вот этот символ,
[59:28.040 --> 59:33.040]  и с учетом того, что он еще породил, выкинется из стека.
[59:33.040 --> 59:37.040]  Такой момент у нас наступит, потому что стэк мы послушаем по одному элементу,
[59:37.040 --> 59:40.040]  и в конце у нас получается стэк пустой.
[59:40.040 --> 59:46.040]  Вот, дожидаемся ровно вот этого момента, вот, видите, он красным цветом тут подчеркнут,
[59:46.040 --> 59:49.040]  и пользуемся предположением индукции.
[59:53.040 --> 59:58.040]  Вот, как говорится, идея простая, доказательства формальные.
[59:58.040 --> 01:00:01.040]  Формальные и неприятные.
[01:00:07.040 --> 01:00:13.040]  Давайте поймем, в первом приближении понятно, какая техника тут используется?
[01:00:17.040 --> 01:00:18.040]  Понятно.
[01:00:19.040 --> 01:00:23.040]  Да, тут тонко главная идея простая.
[01:00:23.040 --> 01:00:27.040]  Хорошо, в итоге мы с вами вроде более-менее доказали,
[01:00:27.040 --> 01:00:31.040]  что все каэсгроматики порождаются некоторыми mp-автоматами, и наоборот.
[01:00:31.040 --> 01:00:34.040]  То есть теперь от класса этих языков у нас совпадают.
[01:00:34.040 --> 01:00:37.040]  Чем мы, собственно, с вами будем пользоваться?
[01:00:37.040 --> 01:00:40.040]  А теперь давайте перейдем к следующей теме.
[01:00:40.040 --> 01:00:44.040]  Я думаю, сегодня дам, так сказать, вводную,
[01:00:44.040 --> 01:00:51.040]  а в следующий раз мы с вами уже посмотрим более детально по применению.
[01:00:51.040 --> 01:00:54.040]  Точнее, начнем доказывать эту историю.
[01:00:54.040 --> 01:00:59.040]  Значит, сегодня наша цель построить еще один более общий парсер, который у нас был.
[01:00:59.040 --> 01:01:01.040]  Так, давайте сейчас сделаю.
[01:01:03.040 --> 01:01:05.040]  Fit into page, вот так.
[01:01:09.040 --> 01:01:11.040]  Вот, значит, идея.
[01:01:11.040 --> 01:01:12.040]  Идея.
[01:01:14.040 --> 01:01:18.040]  Давайте мы с вами будем сейчас строить парсер,
[01:01:18.040 --> 01:01:25.040]  который позволяет каким-то эффективным образом,
[01:01:25.040 --> 01:01:31.040]  не то что эффективным, а хоть каким-то способом определить принадлежность слова грамматики.
[01:01:31.040 --> 01:01:36.040]  Давайте вспоминать, какой алгоритм у нас уже с вами был до этого,
[01:01:36.040 --> 01:01:40.040]  который позволяет проверить принадлежность слова грамматики.
[01:01:41.040 --> 01:01:43.040]  Из семи шагов вроде.
[01:01:45.040 --> 01:01:47.040]  Это мы использовали грамматику,
[01:01:47.040 --> 01:01:54.040]  которая нужна была для того, чтобы прийти к такого вида грамматики.
[01:01:54.040 --> 01:01:57.040]  Значит, у нас был алгоритм кока-янгера-косами до этого.
[01:02:04.040 --> 01:02:07.040]  А он требовал грамматику в нормальной форме хомского.
[01:02:11.040 --> 01:02:15.040]  Ну а грамматику в нормальной форме хомского сама приводится
[01:02:15.040 --> 01:02:19.040]  за какое-то дикое количество операций порядка куба,
[01:02:19.040 --> 01:02:21.040]  что не есть эффективно.
[01:02:21.040 --> 01:02:26.040]  Поэтому нам нужно с вами придумать каким-то образом
[01:02:29.040 --> 01:02:34.040]  какой-то алгоритм, который позволит работать с грамматикой в любом виде.
[01:02:34.040 --> 01:02:37.040]  Вот, и давайте в качестве примера рассмотрим как раз нашу грамматику.
[01:02:37.040 --> 01:02:40.040]  Давайте в качестве примера рассмотрим как раз нашу грамматику.
[01:02:45.040 --> 01:02:47.040]  И давайте рассмотрим слово.
[01:02:48.040 --> 01:02:52.040]  w равно a, b.
[01:02:53.040 --> 01:02:55.040]  Давайте сначала слово a, b, a, b.
[01:02:57.040 --> 01:03:00.040]  Как оно у нас раскидывается в виде дерева разбора?
[01:03:02.040 --> 01:03:05.040]  Оно у нас раскидывается в виде дерева вывода каким-то таким образом.
[01:03:05.040 --> 01:03:08.040]  То есть мы из s выводим a, s, b, s.
[01:03:09.040 --> 01:03:12.040]  Потом из этого s у нас выводится епсилон.
[01:03:13.040 --> 01:03:19.040]  А здесь у нас из s будет выводиться a, s, b, s и вводится епсилон.
[01:03:22.040 --> 01:03:25.040]  Вот такой у нас дерево разбора получается для этого слова.
[01:03:25.040 --> 01:03:28.040]  И давайте возьмем какое-нибудь слово, которое не принадлежит этой грамматике.
[01:03:28.040 --> 01:03:30.040]  Слово a, b, a.
[01:03:31.040 --> 01:03:35.040]  Идея такая, алгоритма, которая мы с вами будем делать.
[01:03:36.040 --> 01:03:43.040]  Мы с вами попытаемся делать разбор для всех возможных префиксов.
[01:03:45.040 --> 01:03:49.040]  Да, то есть пытаемся по префиксу найти в обходе дерева b, f.
[01:03:50.040 --> 01:03:51.040]  Ну, давайте начнем.
[01:03:51.040 --> 01:03:54.040]  Вот смотрите, мы типа говорим из s, ok.
[01:03:54.040 --> 01:03:55.040]  Что мы можем сделать?
[01:03:56.040 --> 01:03:58.040]  Ну, у нас есть только правило a, s, b, s.
[01:03:59.040 --> 01:04:02.040]  Первую букву прочитали? Отлично.
[01:04:03.040 --> 01:04:05.040]  Потом что мы можем сделать?
[01:04:06.040 --> 01:04:08.040]  Какие варианты у нас есть возможные разобрать?
[01:04:08.040 --> 01:04:10.040]  Давайте я буду их рисовать.
[01:04:10.040 --> 01:04:17.040]  Первый вариант у нас, который будет, это у нас, возможно, a, s, b, s вот сюда прикрепляется.
[01:04:24.040 --> 01:04:27.040]  Но почему этот вариант нам с вами не подходит?
[01:04:29.040 --> 01:04:32.040]  Две буквы a в начале?
[01:04:32.040 --> 01:04:34.040]  Да, две буквы a в начале.
[01:04:34.040 --> 01:04:40.040]  То есть в итоге, когда, вот смотрите, представьте себе, что у нас есть слово a, b, a.
[01:04:40.040 --> 01:04:43.040]  Мы начинаем идти в порядке с левой направо, в ходе дерева разбора.
[01:04:43.040 --> 01:04:46.040]  И в итоге в какой-то момент времени мы натыкаемся на проблему,
[01:04:46.040 --> 01:04:49.040]  что у нас вторая буква b, а мы должны прочитать букву a.
[01:04:50.040 --> 01:04:51.040]  Тут такая история.
[01:04:51.040 --> 01:04:52.040]  История.
[01:04:52.040 --> 01:04:58.040]  Давайте вот попытаемся подвесить все деревья, то есть пытаемся подвесить все что угодно.
[01:04:58.040 --> 01:05:01.040]  А если у нас что-то не проходит, мы будем сдирать это шпателем.
[01:05:02.040 --> 01:05:05.040]  Ну да, представьте, в общаге клеите обои.
[01:05:07.040 --> 01:05:10.040]  Хреновастико обои наклеили, фигак, шпателем обрубили.
[01:05:11.040 --> 01:05:12.040]  Поехали дальше.
[01:05:13.040 --> 01:05:19.040]  То есть у нас шпатель, вот этот шпатель, когда он, по сути, поймет, что ему нужно прочитать букву b,
[01:05:19.040 --> 01:05:23.040]  у нас этот шпатель обрежет вот это вот дерево.
[01:05:26.040 --> 01:05:30.040]  Вот. Он поймет, что здесь можно поставить правила, из s выводится епсилум.
[01:05:33.040 --> 01:05:35.040]  Хорошо, то есть у нас теперь один кандидат отлетел.
[01:05:37.040 --> 01:05:40.040]  То есть у нас теперь кандидат s, a, s, b, s.
[01:05:41.040 --> 01:05:43.040]  Из s раскрывается епсилум, двигаемся дальше.
[01:05:43.040 --> 01:05:44.040]  Двигаемся дальше.
[01:05:44.040 --> 01:05:45.040]  A, B, A.
[01:05:46.040 --> 01:05:47.040]  Это OK.
[01:05:50.040 --> 01:05:51.040]  Это у нас тоже OK.
[01:05:52.040 --> 01:05:53.040]  Дальше что?
[01:05:54.040 --> 01:05:56.040]  Дальше у нас идет s.
[01:05:59.040 --> 01:06:01.040]  Тут два варианта есть.
[01:06:02.040 --> 01:06:04.040]  Первый вариант вот такой, вот a, s, b, s.
[01:06:08.040 --> 01:06:10.040]  А второй вариант у нас такой.
[01:06:10.040 --> 01:06:15.040]  A, S, B, S, S, ε, ε.
[01:06:23.040 --> 01:06:24.040]  Вопрос.
[01:06:28.040 --> 01:06:32.040]  В какой случае почему отлететь?
[01:06:41.040 --> 01:06:44.040]  Вот у нас вот сейчас два варианта есть.
[01:06:46.040 --> 01:06:48.040]  Давайте разберемся, почему правое отлетит.
[01:06:53.040 --> 01:06:55.040]  Потому что закончилось слово.
[01:06:56.040 --> 01:06:59.040]  Да, потому что мы на самом деле, вот смотрите как мы обходим дерево.
[01:06:59.040 --> 01:07:01.040]  Мы обходим дерево в порядке DFS.
[01:07:01.040 --> 01:07:05.040]  То есть вот такой порядок, потом идем вниз, поднимаемся по дереву вверх,
[01:07:05.040 --> 01:07:09.040]  поднимаемся вниз, поднимаемся вверх, поднимаемся вверх.
[01:07:10.040 --> 01:07:15.040]  И по сути, когда мы уже хотим прочитать букву A, вот это вот.
[01:07:16.040 --> 01:07:18.040]  Мы находимся в дереве разбора здесь.
[01:07:19.040 --> 01:07:21.040]  И нам вправо уже двинуться никак невозможно.
[01:07:22.040 --> 01:07:24.040]  А нам нужно двинуться вправо.
[01:07:25.040 --> 01:07:27.040]  То есть запоминаем, у нас есть три порядка обхода.
[01:07:27.040 --> 01:07:28.040]  Это в дереве разбора.
[01:07:28.040 --> 01:07:31.040]  Спуститься вниз, проскрыться по интерминалу.
[01:07:32.040 --> 01:07:34.040]  Вправо и подняться наверх.
[01:07:34.040 --> 01:07:35.040]  Теперь во втором случае.
[01:07:35.040 --> 01:07:37.040]  Смотрите, что у нас в втором случае происходит.
[01:07:37.040 --> 01:07:39.040]  У нас мы идем в A.
[01:07:40.040 --> 01:07:44.040]  Тут даже гипотетически, если у нас с вами получается Epsilon.
[01:07:46.040 --> 01:07:49.040]  Да, то есть мы пытаемся прикрепить нашу вершинку Epsilon.
[01:07:49.040 --> 01:07:51.040]  Окей, вроде закрепили даже.
[01:07:52.040 --> 01:07:54.040]  Вроде идем, идем, идем, идем, идем.
[01:07:55.040 --> 01:07:57.040]  Прикрепляем Epsilon.
[01:07:57.040 --> 01:07:59.040]  Вроде идем, идем, идем, идем, идем.
[01:08:00.040 --> 01:08:02.040]  Прикрепляем Epsilon.
[01:08:04.040 --> 01:08:05.040]  А дальше-то что?
[01:08:05.040 --> 01:08:07.040]  А дальше нам надо букву B прочитать.
[01:08:09.040 --> 01:08:11.040]  То есть наша цель уже подняться наверх.
[01:08:11.040 --> 01:08:15.040]  Мы хотим подняться наверх, а мы должны двигаться куда-то дальше.
[01:08:16.040 --> 01:08:18.040]  То есть хотим куда-то сюда.
[01:08:19.040 --> 01:08:21.040]  Ну а вот тут нам мешает вот эта вот фигня.
[01:08:23.040 --> 01:08:25.040]  Поэтому мы с вами, у нас ничего не получается.
[01:08:25.040 --> 01:08:27.040]  То есть идея такая, о которой хочу вам сказать.
[01:08:27.040 --> 01:08:35.040]  Давайте мы попытаемся по всем префиксам держать все возможные гипотетические дерево разбора, которые подходят этому префиксу.
[01:08:38.040 --> 01:08:39.040]  Деревывода.
[01:08:40.040 --> 01:08:42.040]  Давайте только поймем.
[01:08:43.040 --> 01:08:47.040]  Вот сейчас текущая реанкарнация алгоритма, который я вам говорю.
[01:08:49.040 --> 01:08:51.040]  Это сложно делается?
[01:08:51.040 --> 01:08:53.040]  Какая у нас пока гипотетическая сложность?
[01:08:54.040 --> 01:08:55.040]  Асимптотика.
[01:09:01.040 --> 01:09:03.040]  Мы каждый раз все правила перебираем.
[01:09:04.040 --> 01:09:05.040]  Ну да, каждый раз все правила перебираем.
[01:09:05.040 --> 01:09:07.040]  Пока что экспоненты какая-то дикое выглядят.
[01:09:10.040 --> 01:09:13.040]  Ну а давайте поймем, какие у нас три операции есть.
[01:09:14.040 --> 01:09:17.040]  Мы на самом деле используем три операции.
[01:09:17.040 --> 01:09:19.040]  Используем три операции.
[01:09:20.040 --> 01:09:21.040]  Операция 1.
[01:09:25.040 --> 01:09:27.040]  Давайте я их буду стрелочками обозначать.
[01:09:28.040 --> 01:09:29.040]  Это спуск вниз.
[01:09:30.040 --> 01:09:31.040]  Где у меня эта доска?
[01:09:34.040 --> 01:09:35.040]  Давайте я немножко перенесу.
[01:09:37.040 --> 01:09:39.040]  Операция 1. Спуск вниз.
[01:09:44.040 --> 01:09:45.040]  На 1.
[01:09:48.040 --> 01:09:49.040]  Вторая операция.
[01:09:50.040 --> 01:09:52.040]  Это сдвиг вправо на 1.
[01:09:54.040 --> 01:09:57.040]  Причем тут важно сказать, что мы сдвигаемся на 1 терминал.
[01:09:59.040 --> 01:10:01.040]  Здесь мы упираемся.
[01:10:02.040 --> 01:10:04.040]  Уперлись вне терминала.
[01:10:08.040 --> 01:10:09.040]  Есть третья операция.
[01:10:10.040 --> 01:10:11.040]  Давайте я его обозначу зелененьким цветом.
[01:10:11.040 --> 01:10:12.040]  Поднимаемся вверх.
[01:10:13.040 --> 01:10:15.040]  Поднимаемся вверх на единичку.
[01:10:17.040 --> 01:10:18.040]  Все.
[01:10:18.040 --> 01:10:19.040]  Закончилась.
[01:10:26.040 --> 01:10:27.040]  Ветвь.
[01:10:28.040 --> 01:10:30.040]  То есть у нас получается три таких операции.
[01:10:31.040 --> 01:10:36.040]  И теперь давайте подумаем, нужно ли нам хранить все дерево целиком разбором?
[01:10:42.040 --> 01:10:45.040]  Для этого надо вспомнить, как DFS реализовывается.
[01:10:50.040 --> 01:10:53.040]  Вроде как не нужно. Нужно хранить только суффикс слова.
[01:10:54.040 --> 01:10:55.040]  И все.
[01:10:56.040 --> 01:10:57.040]  Ну да.
[01:10:58.040 --> 01:11:01.040]  Я даже скажу в том, что когда вы идете в вершины в порядке DFS,
[01:11:02.040 --> 01:11:06.040]  либо вы это делаете рекурсивным способом, либо вы DFS реализовывается через стэк.
[01:11:06.040 --> 01:11:09.040]  Для того, чтобы у вас стэк работал, вам нужно знать только,
[01:11:10.040 --> 01:11:13.040]  где мы находимся на уровне выше.
[01:11:14.040 --> 01:11:21.040]  То есть из DFS как раз следует то, что нам нужно, по сути, хранить,
[01:11:22.040 --> 01:11:25.040]  где мы находимся на текущем уровне и куда нам вернуться на уровень выше.
[01:11:25.040 --> 01:11:33.040]  И давайте мы будем с вами это отсекать при помощи инструмента под названием точка.
[01:11:34.040 --> 01:11:39.040]  Вот давайте я сейчас как раз на этом правиле, вам покажу, на этом дереве покажу.
[01:11:43.040 --> 01:11:44.040]  Вот.
[01:11:45.040 --> 01:11:46.040]  Вот.
[01:11:47.040 --> 01:11:48.040]  Вот.
[01:11:49.040 --> 01:11:50.040]  Вот.
[01:11:51.040 --> 01:11:52.040]  Вот.
[01:11:52.040 --> 01:11:53.040]  Вот.
[01:11:56.040 --> 01:11:57.040]  Угу.
[01:12:03.040 --> 01:12:07.040]  Смотрите, только тут единственные финтушами, которые нужно, чтобы это работало,
[01:12:08.040 --> 01:12:12.040]  нам нужно добавить одно правило грамматики, чтобы все было точнее.
[01:12:13.040 --> 01:12:16.040]  Смотрите, добавляем новое правило грамматики и за штрих выводят S.
[01:12:17.040 --> 01:12:18.040]  Вот оно важно.
[01:12:19.040 --> 01:12:20.040]  И теперь смотреть, что мы делаем.
[01:12:21.040 --> 01:12:22.040]  Ставим точку сюда.
[01:12:23.040 --> 01:12:24.040]  Я буду таймстэмп поставить.
[01:12:25.040 --> 01:12:27.040]  Вот это точка в нулевом таймстэмпе.
[01:12:28.040 --> 01:12:30.040]  Потом мы идем при помощи красной операции,
[01:12:31.040 --> 01:12:33.040]  напоминаю, что мы поддерживаем все деревья разбора.
[01:12:34.040 --> 01:12:36.040]  Да, мы идем сюда.
[01:12:37.040 --> 01:12:39.040]  У нас вот эта точка в таймстэмпе один.
[01:12:40.040 --> 01:12:42.040]  Потом мы двигаемся вправо на единичку.
[01:12:44.040 --> 01:12:45.040]  Так, давайте я...
[01:12:47.040 --> 01:12:48.040]  Так, это не вправо.
[01:12:51.040 --> 01:12:52.040]  Вправо на единичку.
[01:12:53.040 --> 01:12:54.040]  Таймстэмп двойка.
[01:12:57.040 --> 01:13:00.040]  И давайте я еще дополнительно для этого сделаю проекцию всего слова.
[01:13:01.040 --> 01:13:05.040]  A, B, A, B.
[01:13:07.040 --> 01:13:10.040]  Вот смотрите, давайте посмотрим, где у нас точки находятся.
[01:13:12.040 --> 01:13:14.040]  У себя и у родителя.
[01:13:15.040 --> 01:13:17.040]  То есть вот это таймстэмп два.
[01:13:17.040 --> 01:13:20.040]  Значит, в таймстэмпе один.
[01:13:22.040 --> 01:13:24.040]  Родительская точка у нас...
[01:13:25.040 --> 01:13:27.040]  Давайте я буду обозначать красным цветом.
[01:13:28.040 --> 01:13:30.040]  Родительская точка находится здесь,
[01:13:31.040 --> 01:13:33.040]  в оппозиции слова,
[01:13:34.040 --> 01:13:36.040]  а наша точка находится тоже здесь.
[01:13:37.040 --> 01:13:39.040]  Это позиция ноль.
[01:13:40.040 --> 01:13:42.040]  Вторая история, которая...
[01:13:43.040 --> 01:13:45.040]  Во втором таймстэмпе скажите,
[01:13:45.040 --> 01:13:47.040]  где будет находиться родительская точка,
[01:13:48.040 --> 01:13:50.040]  а где будет находиться текущая точка?
[01:13:59.040 --> 01:14:01.040]  Родительская слева, текущая после буквы A.
[01:14:06.040 --> 01:14:07.040]  Так, таймстэмп три.
[01:14:07.040 --> 01:14:09.040]  Таймстэмп три.
[01:14:15.040 --> 01:14:17.040]  Таймстэмп три, точка у нас будет находиться здесь.
[01:14:18.040 --> 01:14:20.040]  Но если что, через Epsilon мы не перескакиваем.
[01:14:23.040 --> 01:14:25.040]  Где у нас здесь положение будет?
[01:14:29.040 --> 01:14:31.040]  Родительская относительно текущая и текущая.
[01:14:33.040 --> 01:14:35.040]  После маленькой буквы A.
[01:14:35.040 --> 01:14:37.040]  Да?
[01:14:41.040 --> 01:14:43.040]  Четвертый момент времени.
[01:14:46.040 --> 01:14:48.040]  Точка будет находиться вот здесь вот.
[01:14:53.040 --> 01:14:55.040]  Опять же, называем себя родительскую.
[01:15:01.040 --> 01:15:03.040]  После B, своя родительская,
[01:15:03.040 --> 01:15:05.040]  а родительская между A и B.
[01:15:08.040 --> 01:15:10.040]  Наша находится между A и B.
[01:15:14.040 --> 01:15:16.040]  А родительская находится до A.
[01:15:21.040 --> 01:15:23.040]  И смотрите, какая закономерность с вами.
[01:15:24.040 --> 01:15:26.040]  На самом деле, у нас уже чуть-чуть прослеживается.
[01:15:27.040 --> 01:15:29.040]  Почему родительская?
[01:15:29.040 --> 01:15:31.040]  Нет, смотрите, родительская точка,
[01:15:32.040 --> 01:15:34.040]  мы смотрим точку в дереве вывода у родителя,
[01:15:35.040 --> 01:15:37.040]  где она находится.
[01:15:38.040 --> 01:15:40.040]  Нам же нужно хранить этот инвариат.
[01:15:41.040 --> 01:15:43.040]  И смотрите, что мы с вами замечаем.
[01:15:44.040 --> 01:15:46.040]  Первое замечание такое, что когда мы спускаемся вниз,
[01:15:47.040 --> 01:15:49.040]  у нас красная точка с зеленой синхронизируется.
[01:15:50.040 --> 01:15:52.040]  Красная точка с черной, наш с родительской.
[01:15:54.040 --> 01:15:56.040]  А здесь они немножечко рассинхрон идут.
[01:15:56.040 --> 01:15:58.040]  Когда у нас идет сдвиг вправо,
[01:15:59.040 --> 01:16:01.040]  у нас точка справа двигается.
[01:16:02.040 --> 01:16:04.040]  Наша точка двигается.
[01:16:05.040 --> 01:16:07.040]  А когда поднимается наверх,
[01:16:08.040 --> 01:16:10.040]  тут чуть-чуть сложнее, мы это разберем.
[01:16:11.040 --> 01:16:13.040]  Давайте пятый момент времени.
[01:16:18.040 --> 01:16:20.040]  Где точки у нас с вами будут находиться?
[01:16:27.040 --> 01:16:29.040]  После B,
[01:16:32.040 --> 01:16:34.040]  а родительская до А.
[01:16:47.040 --> 01:16:49.040]  Так, шестой момент времени мы спускаемся с вами.
[01:16:49.040 --> 01:16:51.040]  И получается, поскольку мы спускаемся,
[01:16:52.040 --> 01:16:54.040]  у нас красная точка и черная синхронизируется.
[01:16:55.040 --> 01:16:57.040]  Красная это родительская.
[01:17:00.040 --> 01:17:02.040]  Черная это наша.
[01:17:04.040 --> 01:17:07.040]  В седьмой момент времени мы идем по букве А.
[01:17:10.040 --> 01:17:12.040]  Поэтому у нас с вами черная точка,
[01:17:13.040 --> 01:17:15.040]  и черная точка с черной синхронизируется.
[01:17:16.040 --> 01:17:18.040]  Поэтому у нас с вами черная здесь,
[01:17:19.040 --> 01:17:21.040]  красная здесь.
[01:17:23.040 --> 01:17:25.040]  Дальше момент восемь, мы опять же спускаемся.
[01:17:31.040 --> 01:17:33.040]  Давайте буду нумеровать.
[01:17:34.040 --> 01:17:36.040]  6, 7, 8,
[01:17:37.040 --> 01:17:39.040]  потом мы поднимемся вверх, это 9,
[01:17:40.040 --> 01:17:42.040]  10, 11, 12
[01:17:42.040 --> 01:17:44.040]  и 13.
[01:17:51.040 --> 01:17:53.040]  Следите за махинациями.
[01:17:55.040 --> 01:17:57.040]  Значит тут зеленая, тут красная, тут.
[01:17:58.040 --> 01:18:00.040]  Давайте я справа буду писать.
[01:18:07.040 --> 01:18:09.040]  В девятой точке у нас
[01:18:09.040 --> 01:18:11.040]  красная тут,
[01:18:15.040 --> 01:18:17.040]  черная тут, красная у нас
[01:18:18.040 --> 01:18:20.040]  получается будет после В.
[01:18:23.040 --> 01:18:25.040]  Потом в десятый момент времени
[01:18:28.040 --> 01:18:30.040]  у нас получается А, В,
[01:18:31.040 --> 01:18:33.040]  А, В, красная тут,
[01:18:34.040 --> 01:18:36.040]  точнее черная тут, красная тут.
[01:18:37.040 --> 01:18:39.040]  Тут еще важно, что мы забыли
[01:18:40.040 --> 01:18:42.040]  нарисовать еще один шаг.
[01:18:45.040 --> 01:18:47.040]  Получаем 10,5.
[01:18:50.040 --> 01:18:52.040]  В котором мы опять же должны синхронизировать
[01:18:53.040 --> 01:18:55.040]  красную точку и черную точку.
[01:18:59.040 --> 01:19:01.040]  Шаг 11.
[01:19:06.040 --> 01:19:08.040]  А, В, А, В,
[01:19:09.040 --> 01:19:11.040]  черная тут,
[01:19:12.040 --> 01:19:14.040]  красная тут,
[01:19:15.040 --> 01:19:17.040]  вот 11, черная тут, красная тут.
[01:19:18.040 --> 01:19:20.040]  В двенадцатом шаге,
[01:19:21.040 --> 01:19:23.040]  смотрите, что у нас происходит,
[01:19:24.040 --> 01:19:26.040]  интересная вещь.
[01:19:27.040 --> 01:19:29.040]  А, В, А, В,
[01:19:30.040 --> 01:19:32.040]  черная тут,
[01:19:33.040 --> 01:19:35.040]  красная тут,
[01:19:36.040 --> 01:19:38.040]  черная остается на месте,
[01:19:39.040 --> 01:19:41.040]  а красная поднимается сюда.
[01:19:42.040 --> 01:19:44.040]  Видите, черная остается здесь,
[01:19:45.040 --> 01:19:47.040]  а красная она тут.
[01:19:48.040 --> 01:19:50.040]  И в тринадцатом шаге
[01:19:55.040 --> 01:19:57.040]  у нас получается А, В,
[01:19:58.040 --> 01:20:00.040]  А, В,
[01:20:03.040 --> 01:20:05.040]  вот смотрите, тут черная,
[01:20:06.040 --> 01:20:08.040]  черная точка.
[01:20:12.040 --> 01:20:14.040]  Ну, а родительскую давайте пометим вот сюда.
[01:20:20.040 --> 01:20:22.040]  Смотрите, что у нас получается,
[01:20:23.040 --> 01:20:25.040]  то есть при помощи точек, да,
[01:20:26.040 --> 01:20:28.040]  причем очень важно заметить,
[01:20:29.040 --> 01:20:31.040]  что есть некоторая закономерность,
[01:20:32.040 --> 01:20:34.040]  которую мы можем заметить.
[01:20:34.040 --> 01:20:36.040]  Давайте двенадцатое правило посмотрим,
[01:20:37.040 --> 01:20:39.040]  каким образом мы его получили.
[01:20:40.040 --> 01:20:42.040]  Двенадцатое
[01:20:46.040 --> 01:20:48.040]  у нас получилось из одиннадцатого,
[01:20:49.040 --> 01:20:51.040]  да, вот из вот этого вот.
[01:20:52.040 --> 01:20:54.040]  То есть мы двенадцатую подняли,
[01:20:55.040 --> 01:20:57.040]  и посмотрим еще пятую.
[01:20:57.040 --> 01:20:59.040]  Пятую.
[01:21:03.040 --> 01:21:05.040]  Пятую позицию.
[01:21:11.040 --> 01:21:13.040]  Давайте заметим общую закономерность
[01:21:14.040 --> 01:21:16.040]  у одиннадцатого состояния
[01:21:17.040 --> 01:21:19.040]  и у пятого состояния.
[01:21:19.040 --> 01:21:21.040]  Кто видит общности?
[01:21:23.040 --> 01:21:25.040]  Там типы отделяют на одинаковые слова.
[01:21:26.040 --> 01:21:28.040]  Не-не-не, но это случайное совпадение.
[01:21:29.040 --> 01:21:31.040]  Давайте посмотрим позиции точек.
[01:21:39.040 --> 01:21:43.040]  В одиннадцатом, смотрите, где совпадение идет.
[01:21:44.040 --> 01:21:46.040]  В одиннадцатом, смотрите, где совпадение идет.
[01:21:46.040 --> 01:21:50.040]  Смотрите, где совпадение идет у нас.
[01:21:58.040 --> 01:22:00.040]  У одиннадцатого, у пятого.
[01:22:04.040 --> 01:22:05.040]  В середине?
[01:22:06.040 --> 01:22:08.040]  Да, смотрите, в середине у одиннадцатого красная точка
[01:22:09.040 --> 01:22:11.040]  совпадает с пятого черной точкой.
[01:22:12.040 --> 01:22:13.040]  И это не случайность.
[01:22:13.040 --> 01:22:15.040]  У пятого и у двенадцатого красные...
[01:22:16.040 --> 01:22:18.040]  С пятого на двенадцатый переносится красная точка,
[01:22:19.040 --> 01:22:21.040]  а с одиннадцатого на двенадцатый переносится черная точка.
[01:22:22.040 --> 01:22:25.040]  И на самом деле это не случайность, это закономерность.
[01:22:26.040 --> 01:22:28.040]  В следующий раз мы с вами построим правила,
[01:22:29.040 --> 01:22:31.040]  которые у нас есть.
[01:22:32.040 --> 01:22:34.040]  Мы ведем такое понятие.
[01:22:35.040 --> 01:22:39.040]  На самом деле вот эта история, давайте пятая,
[01:22:40.040 --> 01:22:42.040]  мы сможем закодировать вот таким образом.
[01:22:43.040 --> 01:22:45.040]  С точки B, S.
[01:22:46.040 --> 01:22:48.040]  Здесь мы указываем красную точку.
[01:22:49.040 --> 01:22:51.040]  Давайте для этого я напишу ноль.
[01:22:52.040 --> 01:22:54.040]  А здесь мы будем писать черную точку.
[01:22:55.040 --> 01:22:56.040]  Принадлежит D2.
[01:22:57.040 --> 01:22:59.040]  D2 это значит, что красная точка стоит на второй оппозиции.
[01:23:00.040 --> 01:23:02.040]  Ноль это значит, что красная точка стоит на нулевой оппозиции.
[01:23:03.040 --> 01:23:05.040]  А одиннадцатое состояние у нас перепишется так.
[01:23:06.040 --> 01:23:09.040]  S, A, B.
[01:23:10.040 --> 01:23:13.040]  Точнее, смотрим, где у нас одиннадцатое правило находится.
[01:23:14.040 --> 01:23:16.040]  Это у нас, смотрите, A, S.
[01:23:17.040 --> 01:23:19.040]  A, S. B, S. точка.
[01:23:20.040 --> 01:23:22.040]  Точку черную пишем.
[01:23:23.040 --> 01:23:27.040]  Дальше смотрим, красная точка находится у нас с вами в позиции 2.
[01:23:28.040 --> 01:23:31.040]  А здесь у нас идет принадлежность D4.
[01:23:32.040 --> 01:23:35.040]  Вот. И при помощи как раз вот этого механизма,
[01:23:35.040 --> 01:23:38.040]  то есть вот это механизм, оно основывается на каком-то дереве,
[01:23:39.040 --> 01:23:42.040]  а здесь у нас состоится зависимость только от правил.
[01:23:51.040 --> 01:23:53.040]  Вот. В следующий раз мы с вами запишем правила
[01:23:54.040 --> 01:23:57.040]  и начнем, собственно, при помощи этих правил манипулировать.
[01:23:58.040 --> 01:23:59.040]  Там как раз будет три операции.
[01:24:00.040 --> 01:24:02.040]  Опуститься, передвинуться и подняться.
[01:24:06.040 --> 01:24:08.040]  Вот. Извините, что я чуть-чуть задержал.
[01:24:11.040 --> 01:24:14.040]  Давайте задавайте вопросы, потому что мне кажется,
[01:24:15.040 --> 01:24:18.040]  что есть, могут быть вполне непонятные вещи, которые у нас сегодня были.
[01:24:35.040 --> 01:24:36.040]  Что-то все взяли просто вышки.
[01:24:51.040 --> 01:24:56.040]  Ладно, тогда всем хорошего дня, вот, не болейте, всем здоровья.
[01:25:00.040 --> 01:25:02.040]  А, что мы хотим в итоге сделать?
[01:25:02.040 --> 01:25:04.040]  А мы в итоге хотим слово разобрать.
[01:25:07.040 --> 01:25:09.040]  Мы хотим проверить, что слово лежит в грамматике,
[01:25:10.040 --> 01:25:12.040]  если не лежит, то какое дерево вывода у него.
[01:25:15.040 --> 01:25:17.040]  Вот. Мы сейчас на одном примере разобрали,
[01:25:18.040 --> 01:25:21.040]  как гипотетические дерево разборы разложить в последность правил.
