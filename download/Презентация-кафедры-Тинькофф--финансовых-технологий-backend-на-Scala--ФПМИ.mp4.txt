[00:00.000 --> 00:08.800]  Всем привет! Ребят, сегодня будет у нас презентация базовой кафедры организации
[00:08.800 --> 00:14.960]  Тинькофф, кафедры финансовых технологий. Мы расскажем, как все устроено, что мы
[00:14.960 --> 00:20.400]  делаем, чем мы занимаемся, как нам попасть. В общем, разные вопросы рассмотрим. Для
[00:20.400 --> 00:24.440]  начала представлюсь, меня зовут Марат, я в Тинькоффе работаю в проекте Тинькофф
[00:24.440 --> 00:28.400]  инвестиции. Мы делаем лучшего в мире брокера, мы делаем удобный клиентский
[00:28.400 --> 00:32.160]  сервис. Я сам занимаюсь задачами привлечения, плюс мы проводим с командой
[00:32.160 --> 00:35.240]  инвестиционные чемпионаты. Вот у нас прошел российский инвестиционный чемпионат
[00:35.240 --> 00:39.880]  в конце 2022 года. Сейчас мы снова повторяем этот опыт. В общем, занимаюсь
[00:39.880 --> 00:46.960]  задачами инвестиций. Также занимаюсь делами кафедры, читаю на кафедре курс по
[00:46.960 --> 00:50.280]  финансовым технологиям, ну и когда время остается, занимаюсь какими-то
[00:50.280 --> 00:54.160]  своими задачами, которые мне нравятся по науке. Но это больше, наверное, как
[00:54.160 --> 01:01.080]  некое такое хобби. О чем сегодня мы расскажем, рассказ будет посвящен нашей
[01:01.080 --> 01:06.360]  кафедре, что мы из себя представляем, какие проекты делают наши студенты, как
[01:06.360 --> 01:11.640]  можно построить карьеру в Тинькофф, обучаясь на нашей кафедре. Расскажу, как
[01:11.640 --> 01:14.920]  поступить на нашу кафедру и какие есть направления. Мы на каждом из направлений
[01:14.920 --> 01:18.560]  задерживаемся поподробнее и соответствующие мои коллеги расскажут
[01:18.560 --> 01:22.040]  про каждое из направлений подробно, может быть им позадавать вопросы
[01:22.040 --> 01:26.600]  интересующие. После каждого блока мы послушаем ответы на вопросы. Вопросы
[01:26.600 --> 01:30.920]  общего характера тоже в конце можно будет задать, если что-то будет непонятно в
[01:30.920 --> 01:36.840]  течение презентации. Что за история с базовой кафедрой?
[01:36.840 --> 01:42.440]  Базовые кафедры и наши, и вообще базовые кафедры в целом. Я сравню
[01:42.440 --> 01:47.240]  две ситуации, как принято в целом и как делаем мы. В целом это прекрасный
[01:47.240 --> 01:52.400]  пример такой вот синергией системы высшего образования и индустрии, когда вы
[01:52.400 --> 01:59.160]  сразу получаете необходимые рабочие навыки. Вот в обычной ситуации, в
[01:59.160 --> 02:02.480]  системе классического образования курсы бывают оторваны от реальности. Что это
[02:02.480 --> 02:06.840]  значит? То есть вам дают прекрасные предметы, интересные возможно, возможно
[02:06.840 --> 02:10.440]  там глубокие, но вот вы приходите на работу и говорят, не-не-не, все это вот не
[02:10.440 --> 02:14.840]  надо, вот теперь вот научись вот этому. У нас такого нет. У нас вот все,
[02:14.840 --> 02:20.040]  чему мы обучаем, применяется в реальной жизни. Те работы, которые делают студенты
[02:20.040 --> 02:23.560]  там в качестве курсовых, там в последствии в качестве дипломных, это все
[02:23.560 --> 02:28.960]  полезно, все идет напрот, все помогает в итоге нашим клиентам. Вот это вот
[02:28.960 --> 02:34.640]  прекрасное чувство, конечно. Во-вторых, момент с трудоустройством. То есть как
[02:34.640 --> 02:40.640]  принято, вы заканчиваете в УС, потом устраиваетесь на работу, бывает долго
[02:40.640 --> 02:44.640]  муторно ищете работу. Здесь это есть способ сразу же устроиться на работу в
[02:44.640 --> 02:49.920]  компании, поступив на кафедру. В случае с балкалавриатом, да, то есть мы сейчас
[02:49.920 --> 02:55.400]  говорим про выбор кафедры на этапе балкалавриата, можно трудоустроиться
[02:55.400 --> 03:01.240]  после первого семестра. Ну и, конечно же, вот этот вариант с гибким учебным
[03:01.240 --> 03:05.120]  планом. Обычно вот вам то, что предложили, да, то-то вы и учитесь. Здесь есть
[03:05.120 --> 03:09.960]  возможность да выбирать какие-то курсы, да, выбрать то, что себе, ну, то, что
[03:09.960 --> 03:15.400]  интересно отказаться от того, что не так интересно. Там есть, ну, определенный
[03:15.400 --> 03:22.560]  процесс по этому поводу, да, но в целом вот есть такая возможность. Переходя так
[03:22.560 --> 03:26.360]  вот, ну, от какой-то общей информации, можно привести даже примеры тех
[03:26.360 --> 03:31.360]  ребят и тех проектов, которые они делают. Вот это все ребята, которые учились на
[03:31.360 --> 03:35.160]  нашей кафедре, да. Например, Женя Бритсон сейчас занимается головосовым
[03:36.160 --> 03:41.920]  Да, начинал он с экспериментов на больших массивах данных, работал вот с голосовыми
[03:41.920 --> 03:46.280]  технологиями, да, и вот сейчас он занимается таким вот необходимым и
[03:46.280 --> 03:50.600]  интересным проектом. С Наташей Бобровской мы вообще тесно сотрудничаем, она тоже из
[03:50.600 --> 03:53.320]  инвестиций, сейчас занимается нашей социальной сетью Pulse, вообще-то
[03:53.320 --> 03:56.400]  социальная сеть, которая не имеет аналогов, да, то есть социальная сеть для
[03:56.400 --> 04:01.360]  инвесторов, вот. И она сейчас вот занимается развитием, ну, в качестве такого
[04:01.360 --> 04:06.280]  продукт-лида, продукт-менеджера, занимается развитием социальной сети Pulse.
[04:06.280 --> 04:11.080]  Начинала она работая над чатбодом еще в студенческие годы и вот увеличила
[04:11.080 --> 04:16.480]  метрики по нашему чатбоду, да, ну или вот Александр Князев занимается задачами
[04:16.480 --> 04:21.440]  речевой аналитики, для этого там он использовал и математические модели
[04:21.440 --> 04:26.400]  внедрял, да, и какие-то новые технологии, да, и вот добился тоже значительных
[04:26.400 --> 04:31.720]  успехов. Это только вот проекты, которые вот сразу там, ну, нам удалось вспомнить,
[04:31.720 --> 04:35.360]  которые вот сразу как примеры, но в целом проектов гораздо больше, еще раз
[04:35.360 --> 04:41.040]  повторюсь, все наши студенты занимаются, ну, какими-то актуальными, необходимыми
[04:41.040 --> 04:48.600]  для компании, для клиентов вещами. Расскажу про возможность карьерного роста, это
[04:48.600 --> 04:52.320]  конечно больше на примере магистратуры, да, но понятно, что воронка вот начинается
[04:52.320 --> 05:00.760]  уже с баклавриата глобально, да, вот. Большинство студентов, ну, вот, не
[05:00.760 --> 05:04.600]  большинство, вообще все студенты, которые к нам приходят в магистратуру, начинают
[05:04.600 --> 05:08.400]  с каких-то джуновских позиций, да, начинают свое развитие, ну, вот, в компании
[05:08.400 --> 05:12.120]  с каких-то джуновских позиций, но уже к окончанию обучения на кафедре
[05:12.120 --> 05:15.760]  становятся мидл специалистами, мидл, мидл плюс специалистами, то есть
[05:15.760 --> 05:20.880]  подавляющее большинство, вот, а даже какое-то количество, да, и немалое
[05:20.880 --> 05:24.160]  количество становится синер специалистами и даже руководителями направлений, ну,
[05:24.160 --> 05:31.800]  то есть это, ну, я бы сказал, что это впечатляющая статистика. Немножко про
[05:31.800 --> 05:38.080]  процесс поступления на кафедру, да, нужно будет подать заявку на сайте, да, это
[05:38.080 --> 05:44.800]  произойдет, ну, сами процессы, которые там начнутся, это будет осенью, да, но заявку
[05:44.800 --> 05:52.160]  можно подать уже сейчас, да, затем нужно будет пройти онлайн экзамен, ну, а затем
[05:52.160 --> 05:56.760]  пройти некоторые собеседования, ну, собеседования на кафедру, да, по сути, там
[05:56.760 --> 06:00.760]  техническое собеседование, мотивационное собеседование, вот, ну, и такой вот уже
[06:00.760 --> 06:04.640]  дальше формальный момент, если вы попадаете на кафедру, вам пришел
[06:04.640 --> 06:10.680]  положительный ответ, то надо будет подать заявление в учебный офис о том, что вы
[06:10.680 --> 06:16.960]  выбрали нашу кафедру финансовых технологий. Совсем коротко скажу про
[06:16.960 --> 06:20.760]  направление, да, потому что коллеги сейчас раскроют вообще какие там предметы,
[06:20.760 --> 06:24.720]  какие курсы, вот, в рамках баклавриата у нас два направления, направление
[06:24.720 --> 06:29.960]  продуктовой аналитики и направление бэкэнда на скала. Внутри компании это, ну,
[06:29.960 --> 06:33.920]  очень-очень важные направления, да, то есть нам всегда нужны аналитики, нам
[06:33.920 --> 06:39.720]  нужны разработчики на скала, да, вот, и мы в рамках этих направлений учим, вот, как я
[06:39.720 --> 06:45.440]  уже говорил, учим каким-то актуальным вещам, которые будут пригождаться на
[06:45.440 --> 06:55.520]  практике. Здесь такой вот QR-код, можете его, ну, распознать и вступить в группу,
[06:55.520 --> 06:58.720]  где мы будем отвечать, оперативно разбирать вопросы, если там сегодня не будет
[06:58.720 --> 07:02.400]  вопросов, завтра они появятся, да, тут мы будем всегда на связи, вот,
[07:02.400 --> 07:06.600]  присоединяйтесь, вот. Я сейчас буду передавать слово коллеги, поэтому этот слайд пока
[07:06.600 --> 07:11.440]  повисит, у вас будет время, чтобы, чтобы, ну, отсканировать и присоединиться к
[07:11.440 --> 07:17.880]  группе. Всё, я передаю слово Владу, да, Влад расскажет про направление
[07:17.880 --> 07:20.720]  продуктовой аналитики.
[07:20.720 --> 07:31.880]  Так, все отсканировали, кто хотел. Буду считать, что да. Всем привет, меня зовут Влад,
[07:31.960 --> 07:40.800]  сейчас я вам расскажу про направление продуктовой аналитики на нашей кафедре.
[07:40.920 --> 07:48.960]  Значит, начнем с того, что я расскажу вам, кто я такой. Я руководитель отдела
[07:48.960 --> 07:56.080]  аналитики продуктовой команды, развивающей крезитование наличными у нас в компании.
[07:56.840 --> 08:05.360]  Что это значит? Это значит, что я координирую работу небольшой команды
[08:05.360 --> 08:09.920]  продуктовых аналитиков, чтобы решать задачи, которые перед нами ставятся, как
[08:09.920 --> 08:14.640]  перед продуктом, и я эти задачи там как-то декомпозирую, распределяю между ребятами,
[08:14.640 --> 08:21.600]  и там мы вместе это все, все эти задачи челленджем, вместе приходим к цели,
[08:21.600 --> 08:36.640]  которые перед нами ставятся. В компании я работаю уже 6 лет, начинал я с простого
[08:36.640 --> 08:44.160]  продуктового аналитика, а закончил, ну вот где закончил. У меня есть довольно
[08:44.160 --> 08:49.760]  большое образование, возможно вы слышали, что помимо бакалавриата у вас есть еще
[08:49.760 --> 09:00.160]  магистратура, и мы эту магистратуру все вместе запускали, и в общем работал с большим количеством
[09:00.160 --> 09:03.440]  образовательных проектов в разных вузах, в том числе на Пистейхе.
[09:03.440 --> 09:15.200]  Кого вообще направление продуктовой аналитики в нашем бакалавриате заинтересует? Тех, в первую
[09:15.200 --> 09:24.080]  очередь тех, кого интересует быстрый результат от выполнения ваших задач. Зачастую, может быть,
[09:24.080 --> 09:36.400]  зачастую, ну вот, например, в фундаментальной науке результаты выполнения задач, они могут
[09:36.400 --> 09:43.600]  быть где-то там на далеком горизонте, то есть условно. Курсач вы пишете, вы его можете начать
[09:43.840 --> 09:50.480]  за полгода, и за это время вы можете успеть, может быть, разочароваться в нем, или в своей теме,
[09:50.480 --> 09:58.240]  в направлении, которое вы выбрали, или иногда вы можете заниматься более сложными задачами,
[09:58.240 --> 10:07.920]  на решение которых нужно много лет. Многих ребят такое демотивирует, такое демотивировало и меня,
[10:08.160 --> 10:16.040]  и мне всегда вот хотелось такого постоянного, постоянных выбросов допамина, чисто за счет того,
[10:16.040 --> 10:25.160]  что я решаю задачу, я получаю результат, вот он, он осязаемый, вот тебе такая воображаемая конфета.
[10:25.160 --> 10:37.440]  Наши задачи продуктовой аналитики чаще всего решаются в рамках одного месяца, или если декомпозировать
[10:37.440 --> 10:43.520]  какую-то более сложную задачу, то задачи решаются там в рамках недель, одной-двух недель, поэтому
[10:43.520 --> 10:55.320]  результат вы получаете быстро. При этом мы не теряем связь с наукой, это не размахивание руками,
[10:55.320 --> 11:02.680]  мы все еще применяем методы математической статистики в наших задачах, так что мозг не заржавеет,
[11:02.680 --> 11:10.240]  так сказать. Важно еще отметить, что задачи, с которыми мы сталкиваемся, они всегда,
[11:10.240 --> 11:14.440]  их можно описать в виде какой-то логической цепочки, где вы приходите от вашей цели,
[11:14.440 --> 11:20.240]  которая перед вами ставится, к результату, вот каждый шажок между этим можно как-то обосновать,
[11:20.240 --> 11:25.720]  либо с помощью просто таких логических выводов, либо с помощью экспериментов,
[11:25.720 --> 11:35.760]  которые вы же сами будете проводить. И может возникнуть вопрос, откуда мы эти задачи берем?
[11:35.760 --> 11:41.640]  А эти задачи мы придумываем сами зачастую. Мы, конечно, можем иногда там оглядываться на рынок,
[11:41.640 --> 11:47.120]  можем посмотреть, что там происходит, вдохновиться чем-то, но чаще всего задачи мы придумываем сами,
[11:47.120 --> 11:52.800]  потому что мы придумываем что-то свое прорывное. И вот здесь в наших задачах раскрывается такой
[11:52.800 --> 12:01.800]  творческий подход. Так что если вас такое интересует, то задача продуктовой аналитики
[12:01.800 --> 12:15.080]  это для вас. Почему вам было бы интересно прийти к нам быкловариат? Давайте начнем с такого,
[12:15.080 --> 12:25.040]  с примера я сам с механика математического в культет МГУ пришел работать в Тинькофф 6 лет назад,
[12:25.040 --> 12:34.760]  будучи студентом четвертого курса. И я столкнулся с большой проблемой, что с одной стороны была учеба,
[12:34.760 --> 12:42.400]  которая от меня довольно много требовала, с другой стороны была работа, которая требовала от меня чуть
[12:42.400 --> 12:48.560]  ли не больше. И это не только мой пример, на самом деле почти там почти все наши коллеги,
[12:48.560 --> 12:56.240]  они так или иначе начинали студенческих лет, и многие хотели, многие сейчас хотят начинать
[12:56.240 --> 13:04.000]  работать рано, и вот внимание, ваше внимание и время они делятся на два потока, на учебу, работу.
[13:04.000 --> 13:14.840]  Какую проблему сейчас решает быкловариат и там впоследствии еще и магистратура? Быкловариат
[13:14.840 --> 13:22.080]  позволяет совмещать учебный рабочий процесс, учит совмещать их в будущем, то есть вы там с
[13:22.080 --> 13:30.280]  маленьких шашков начинаете, но потихоньку вы приходите к тому, что то, чему вы обучаетесь,
[13:30.360 --> 13:40.280]  оно вам пригождается в том, над чем вы работаете, и в конце концов вы будете готовы перейти к вот
[13:40.280 --> 13:46.160]  такому финальному 100 процентов рабочему процессу, потому что институт вам даст все, что вам необходимо.
[13:46.160 --> 13:56.080]  Ну также бакловариат это такая лестница на другие наши проекты, где можно себя раскрыть,
[13:56.080 --> 14:03.440]  это могут быть как стажировки, где вы решаете просто какую-то конкретную задачу за ограниченный
[14:03.440 --> 14:12.480]  промежуток времени, и понятное дело, хорошие оценки на бакловариате скорее всего гарантируют вам
[14:12.480 --> 14:17.560]  поступление в магистратуру, потому что вы будете знать все, что мы от вас требуем, когда вы
[14:17.560 --> 14:27.440]  поступаете в магистратуру, а в магистратуре вы получите, условно, все бенефиты сотрудников
[14:27.440 --> 14:38.920]  нашей компании. Что еще, наверное, суперважный момент, что диплом в бакловариате и диплом
[14:38.920 --> 14:46.480]  в магистратуре это полностью рабочие задачи, никаких выдуманных задач на каких-то искусственных
[14:46.480 --> 14:56.960]  данных ничего такого не будет. Выйти в штат можно довольно рано, ну и давайте перейдем к,
[14:56.960 --> 15:04.200]  я все абстрактно рассказывал, какие-то задачи, а что за задачи такие? Давайте расскажу,
[15:04.200 --> 15:10.920]  кто такой продуктовый аналитик и что мы от него ждем. Ну значит профессию аналитик в индустрии
[15:10.920 --> 15:16.600]  можно увидеть много где и в разных компаниях, и разные компании под аналитиками подразумевают
[15:16.600 --> 15:25.440]  разное. Если так подумать, то они там много где могут встречаться, вот здесь вот есть направление,
[15:25.440 --> 15:33.040]  где их можно встретить аналитиков, звери такого. Если прям попытаться все это обобщить,
[15:33.040 --> 15:41.320]  то как будто получается, что аналитик это кто-то, кто работает с численным описанием какого-то
[15:41.320 --> 15:50.360]  проекта. Сложный, очень абстрактно, пока ничего не понятно. Давайте сужать наш поиск. Какие бывают
[15:50.360 --> 15:58.000]  аналитики, сейчас я расскажу примерно вот как это у нас в компании работает. Мы работаем с большим
[15:58.000 --> 16:05.400]  количеством продуктов, которые составляют большую экосистему. Давайте там какой-нибудь примерчик,
[16:05.400 --> 16:11.000]  то есть есть у нас например какие-нибудь дебетовые карточки и есть инвестиции. Казалось бы разные
[16:11.000 --> 16:18.240]  продукты, но давайте предзадумываемся. В дебетовых карточках есть какие-то там денежные транзакции и
[16:18.240 --> 16:24.840]  в инвестициях есть тоже денежные транзакции. То есть если делать какую-то систему, которая
[16:24.840 --> 16:30.400]  управляет денежными транзакциями, то скорее всего, логичнее всего сделать так, чтобы эта система
[16:30.400 --> 16:38.360]  была общая для всех продуктов, которые эту систему используют. Ну и так у нас на самом деле и есть,
[16:38.360 --> 16:45.520]  что все продукты, которые по смыслу в каких-то местах пересекаются, они пользуются общими
[16:45.520 --> 16:52.280]  системами. Поэтому работу всей нашей экосистемы можно изобразить, сильно упрощая вот такой
[16:52.360 --> 17:01.800]  диаграммкой, сеткой из продуктов и систем. Соответственно нам надо как-то развивать продукты.
[17:01.800 --> 17:12.600]  Вот выходит какой-то аналитик, который решает задачи, исследует те или иные элементы продукта
[17:12.600 --> 17:18.600]  с помощью данных. Когда он приходит в первый день, он обычно занимается каким-то узким
[17:18.600 --> 17:26.200]  пересечением продукта и системы. Но со временем его зона ответственности начинает расти. У него
[17:26.200 --> 17:33.240]  растет экспертиза, его задачи начинают распространяться либо на весь продукт кросссистемно,
[17:33.240 --> 17:41.080]  либо на одну систему кросспродуктово. И продуктовый аналитик, он вот обычно развивает один продукт
[17:41.080 --> 17:48.360]  кросссистемно. При этом развивать продукт непосредственно можно разными способами. С одной
[17:48.360 --> 17:55.440]  стороны, что можно сделать? Что нужно делать, чтобы развивать продукт? Нужно как-то его улучшать.
[17:55.440 --> 18:04.720]  Соответственно нужно ответить на два вопроса. Что делать и как делать? Соответственно на вопрос
[18:04.720 --> 18:10.920]  как делать у нас отвечают обычно бизнес аналитики. Они договаривают с командами разработки, чтобы те
[18:10.920 --> 18:16.160]  или иные наши идеи были реализованы. А вот на вопрос что делать, отвечают непосредственно
[18:16.160 --> 18:22.400]  числовые аналитики. И вот под продуктовыми аналитиками, я подразумеваю сейчас, и под
[18:22.400 --> 18:28.400]  направлением продуктовой аналитики, про которые я сейчас рассказываю, подразумеваются числовые
[18:28.400 --> 18:33.120]  продуктовые аналитики, которые с помощью данных пытаются понять, а что же все-таки сделать с
[18:33.120 --> 18:44.880]  продуктом, чтобы он развивался. Соответственно, если прям максимальную такую выжимку сделать,
[18:44.880 --> 18:50.640]  о том что и дать какое-то определение, кто такой продуктовый аналитик у нас в компании,
[18:50.640 --> 18:59.240]  это вот такой партнер бизнеса, который используя данные о продукте, с которым он работает,
[18:59.240 --> 19:12.680]  используя личный опыт и применяя к этому всему знание статистики, его какие-то математические
[19:12.680 --> 19:21.440]  методы, превращает вот эти все данные в призыв к действию. Что нужно сделать с продуктом,
[19:21.440 --> 19:34.120]  чтобы достичь определенной цели. Еще приближаемся, зум такой делаем, попробуем провести аналогию,
[19:34.120 --> 19:41.240]  как должны выглядеть, чем занимается продуктовый аналитик. Не все продуктовые аналитики любят,
[19:41.240 --> 19:46.000]  когда я такую аналогию делаю, но мне она нравится, потому что она довольно наглядная. Вот представьте
[19:46.000 --> 19:56.960]  себе такого врача-терапевта или врача-диетолога, который может узнать все о своем пациенте,
[19:56.960 --> 20:03.080]  может дать совет почему угодно, но там ни в чем конкретным супер специалистом не является. Вот
[20:03.080 --> 20:09.960]  такой врач-терапевт чем занимается? Он может найти у пациента какую-то проблему, предложить
[20:09.960 --> 20:17.080]  решение этой проблемы, вылечить его, объяснить как вылечится. Может какую-то диагностику провести,
[20:17.080 --> 20:24.600]  соответственно, если эту диагностику он проведет, он может как-то спрогнозировать, что будет с его
[20:24.600 --> 20:32.040]  пациентом в будущем. Даже если пациент здоров, то он может составить какой-то там план, я не знаю,
[20:32.040 --> 20:37.000]  питание или витамины какие-то дать, чтобы пациент стал еще быстрее, сильнее, быстрее,
[20:37.160 --> 20:44.920]  сильнее. И продуктовый аналитик работает примерно так же, только в отношении какого-то проекта.
[20:44.920 --> 20:54.560]  И если переводить это на какой-то наш язык, то выглядит это так тематически, что он использует
[20:54.560 --> 21:01.720]  вот те знания, которые у него есть, он как-то метризует, описывает продукт с помощью метрик,
[21:01.720 --> 21:12.680]  использует свои знания, подходы, знания и научные свои знания, применяет это к скопу задач,
[21:12.680 --> 21:21.960]  похожей на то, о котором я рассказывал с врачом терапевта, только вот к продукту,
[21:21.960 --> 21:28.880]  и пытается достичь определенной цели, которая перед ним ставится, например, на год достичь,
[21:29.120 --> 21:34.520]  прийти к тому, чтобы у вас было n тысяч клиентов.
[21:34.520 --> 21:48.760]  Подход к задачам. Здесь можно как инструкцию к действию рассказать. В первую очередь,
[21:48.760 --> 21:55.440]  продуктовый аналитик разбирается с тем, как работает тот или иной проект, над которым он
[21:55.440 --> 22:03.360]  должен работать, понимает, в чем цель, и дальше понятно, что проект может быть
[22:03.360 --> 22:08.800]  какой-то очень сложный, там может быть много этапов, поэтому этот проект дровится на большое
[22:08.800 --> 22:19.920]  количество этапов, у каждого подэтапа определяется мини-цель и ищутся слабые места,
[22:19.920 --> 22:27.400]  или просто какие-то идеи, которые могут, может эти места не слабые, но все равно можно сделать этот
[22:27.400 --> 22:35.560]  вот кусочек процесса лучше, соответственно, вот эти места, они как точки роста, они осознаются
[22:35.560 --> 22:45.640]  и укрепляются, реализуется какое-то улучшение продукта. Самое важное, что главный вопрос,
[22:45.640 --> 22:52.960]  который аналитик должен задавать ко всему вокруг и к себе в том числе, это вопрос почему. Я уже
[22:52.960 --> 22:57.480]  несколько раз говорил про цели, вот всегда нужно понимать свою цель и стремиться к ней.
[22:57.480 --> 23:14.760]  Хорошо, несколько слов о том, кто вас погрузит в методы, которыми пользуются продуктовые аналитики.
[23:14.760 --> 23:23.720]  Все наши курсы, связанные с аналитикой, рассказывают наши действующие сотрудники. Мы
[23:23.720 --> 23:29.880]  рассказываем исключительно о том, с чем мы сталкивались сами, какие-то решения, которые мы
[23:29.880 --> 23:36.480]  либо придумали сами, либо они существуют уже для подобного типа задач, эти задачи часто встречаются,
[23:36.480 --> 23:44.080]  и вот эту учебную программу мы полировали не один год, потому что мы начинали ее рассказывать
[23:44.080 --> 23:53.480]  еще в магистратуре, а сейчас мы ее адаптировали для бакалавриата. Вкратце о том, чему научим,
[23:53.480 --> 24:00.640]  но там гораздо больше на самом деле. Опять же, вникать в суть проекта, искать его цель,
[24:00.640 --> 24:08.240]  работать с данными, у нас все записывается в наши базы данных, научим вас работать с ними,
[24:08.240 --> 24:15.800]  научим превращать какие-то сырые, нечитаемые, вообще непонятные данные в метрики, по которым
[24:15.800 --> 24:24.840]  можно сделать вывод. Понятное дело, что научим вас там SQL, научим превращать вот эти метрики
[24:24.840 --> 24:32.280]  в четкий логический вывод, что делать дальше, ну и, разумеется, научим вас доносить эти выводы
[24:32.280 --> 24:38.040]  до, условно, вашего соседа. Научим вас визуализировать это все, в том числе с помощью
[24:38.040 --> 24:45.480]  Python. Научим вас статистическим методом, здесь на них заострять внимания не буду,
[24:45.480 --> 24:58.040]  на основе вот этого вывода научим вас принимать решения, прям говорить, что делать дальше. Наверное,
[24:58.080 --> 25:03.520]  чтобы вот это все подытожить, хочу сказать, что вот аналитическое мышление, которое мы вот этими
[25:05.040 --> 25:12.960]  словно пунктами развиваем, оно часто помогает в жизни, потому что, на самом деле, если
[25:12.960 --> 25:18.120]  призадумываться, то проблемы, с которыми вы сталкиваетесь в жизни, они часто решаются очень
[25:18.120 --> 25:29.880]  похожими способами. Напоследок скажу, какие вступительные испытания есть для наших будущих
[25:29.880 --> 25:38.160]  бакалавров. Значит, нужно пройти вступительный тест, это не сложная прикладная математика,
[25:38.160 --> 25:50.160]  в основном это олимпиадные задачи с элементами теории вероятности, это кейс, это что значит,
[25:50.160 --> 25:58.240]  это какая-то прикладная задача, нужно применить логику, может быть, немножко интуицию воображения,
[25:58.240 --> 26:06.720]  очень похоже на наши реальные задачи, но там чуть меньше математики, чем на самом деле.
[26:06.800 --> 26:14.920]  И, наконец, нужно пройти мотивационное собеседование, где просто наши рекрутеры
[26:14.920 --> 26:22.600]  обсудят с вами ваш предыдущий опыт и попытаются узнать, зачем вы, почему вы хотите именно к нам.
[26:22.600 --> 26:30.480]  Вот, и если вы эти все три испытания пройдете, то добро пожаловать к нам. Вот, на этом у меня все.
[26:30.480 --> 26:48.600]  Если есть какие-то вопросы по продуктовой аналитике, я, конечно, так общу, пытался это объяснить,
[26:48.600 --> 26:53.000]  может быть, как-то на примерах, задавайте вопросы, сейчас могу ответить на них.
[26:53.000 --> 27:05.200]  Потому что есть определенные расхождения между тем, что делает терапевт, и тем,
[27:05.200 --> 27:10.800]  чем занимается продуктовый аналитик, это чуть более глубокие задачи, наверное,
[27:10.800 --> 27:15.920]  ну нам кажется глубокий терапевт, может кажется по-другому, но это такое,
[27:15.920 --> 27:40.880]  очень для каждому можно его объяснить, по крайней мере. А вот как раз Марат,
[27:40.880 --> 27:48.080]  который сейчас до меня выступал, он читает курс по, как он называется, финансовая математика,
[27:48.080 --> 28:00.160]  и там всякие интересные методы. Скажи, ребята.
[28:11.480 --> 28:18.960]  Это не всегда связано непосредственно с задачами продуктовой аналитики, но вот многие продуктовые,
[28:18.960 --> 28:22.600]  ну есть продуктовые аналитики, которые и с такими задачами тоже сталкиваются,
[28:22.600 --> 28:29.760]  то есть это как такая отрасль у нас. И про такое мы тоже расскажем. Да, кто, давай ты.
[28:29.760 --> 28:43.920]  Вот там первые два этапа, там проверяется твои знания, на третьем скорее общение,
[28:43.920 --> 28:51.000]  ну просто чтобы понять там, получится найти контакт, идешь ли ты на контакт условно.
[28:51.000 --> 29:02.840]  А вот тесты, вот эти все в начале онлайновые, они же на время, да, идут? Вот, они на время.
[29:02.840 --> 29:08.280]  Соответственно тебе на время нужно решать задачи, там сначала просто прикладывай математику,
[29:08.280 --> 29:27.480]  потом кейс, тоже все онлайне. Все довольны. Так, давай еще.
[29:38.280 --> 29:49.880]  Смотри, у нас есть такая типа профессиональная программа, которая уникальна для каждого направления,
[29:49.880 --> 29:53.040]  но я так понимаю, если очень хочешь, то можешь какой-нибудь другой курс взять, да?
[29:53.040 --> 29:54.680]  Да, но это только доп-нагрузка.
[29:54.680 --> 29:59.080]  Доп-нагрузка, да. То есть есть обязательные, и они в том числе связаны с твоими профессиональными
[29:59.080 --> 30:05.840]  навыками, которые мы хотим у вас развить, но остальное в доп-нагрузку, и оно не факт, что будет связано.
[30:05.840 --> 30:21.560]  У нас еще бакалавры не выпускались? Я тебе про магистратуру расскажу, нормально?
[30:21.560 --> 30:29.320]  Во, расскажу тебе про магу. Значит, смотри, у меня прям в команде есть аналитик Ярик.
[30:29.320 --> 30:39.000]  Я говорил, я занимаюсь кредитованием наличным. Он единственный человек, который решает, какую ставку
[30:39.000 --> 30:44.880]  клиенту по кредиту назначить. Вот мы что-то одобряем клиенту кредит и думаем, какую ставку
[30:44.880 --> 30:54.320]  одобрить. Вот он сформулировал логику, логику ставок, какому клиенту что предложить. И сейчас,
[30:54.320 --> 31:00.360]  ну то есть он какую-то логику уже выстроил, но она получена в результате экспериментов, тестов,
[31:00.360 --> 31:05.400]  которые мы проводили. А мы сейчас более, он сейчас решает более глубокую задачу, он строит модель,
[31:05.400 --> 31:11.840]  которая в зависимости от предложенной, ну теоретически предложенной ставки, пытается
[31:11.840 --> 31:20.720]  предсказать, возьмет клиент кредит или нет. Такая предсказательная модель выдачи кредита условно.
[31:20.720 --> 31:29.520]  Вот и там и немножко email используется и просто те методы, обычные продуктовые аналитики,
[31:29.520 --> 31:37.840]  проверка гипотез, это все вместе собирается и вот сейчас он завершает работу. И вот скоро эта
[31:37.840 --> 31:45.360]  модель, она у него сейчас еще не готова, но когда он ее допилит, эта модель появится на проде и она
[31:45.360 --> 31:55.640]  будет работать вот у нас прямо в нашем процессе. Причем не он сам ее в процесс встраивает,
[31:55.640 --> 32:03.920]  да, ну то есть он написал, напишет алгоритм, а потом этот алгоритм в нашу систему, которая принимает
[32:03.920 --> 32:09.920]  решение по клиенту, его пишут, ну то есть он эту модель, он ее передаст, ее в пишут и она будет
[32:09.920 --> 32:13.600]  работать. Так, еще вопросы.
[32:13.600 --> 32:31.440]  Учебный план. Никит, помоги.
[32:43.600 --> 32:51.440]  Учебный план, да, сейчас мы еще могли, но в принципе там, в этой презентации мы с кем-нибудь,
[32:51.440 --> 32:58.200]  там вот на сайтах СТОР-меморатор рассказывал, там были предметы. В СТОР-мемораторе появится
[32:58.200 --> 33:09.760]  список этих предметов и список тем, что можно получить подробнее. Какие-то онлайн, а какие-то
[33:09.760 --> 33:35.120]  на байке, в следующем году должен, ну да. Еще вопросы.
[33:39.760 --> 33:43.120]  Ну, есть учебный план, а, во.
[34:09.760 --> 34:15.600]  У вас будет какой-то спор по вашему умению, по вашему учебному деятельству, у вас будет
[34:15.600 --> 34:22.640]  департамент по вашим кураторам, у вас будет выгодный домашний станок, и на основе всего этого уже
[34:22.640 --> 34:28.640]  команда будет видеть, и твоя единица будет как вам, и у вас будет департамент.
[34:28.640 --> 34:57.320]  Ну, будем считать, что вопросов нет, если что, потом подходите, вам лично расскажу. Все,
[34:57.320 --> 35:05.600]  передаю слово. Так, всем привет. Я вам сейчас расскажу про направление бэкэнд разработки
[35:05.600 --> 35:14.120]  на нашей кафедре. Ну и, конечно же, немножко о себе. Меня зовут Бровкин Антон Александрович,
[35:14.120 --> 35:21.200]  у меня 10 плюс, чуть-чуть побольше, чем 10 плюс опыта промышленной разработки.
[35:21.200 --> 35:29.600]  Разные годы я писал на разных языках, это были C++ когда-то очень давно, ну,
[35:29.600 --> 35:38.680]  C-классами на самом деле. Это была Java, это был C-sharp, это был JavaScript, и последние, получается,
[35:38.680 --> 35:43.560]  8 лет мой основной язык это Scala. Ну, это не значит, что я вот эти все предыдущие забыл,
[35:43.560 --> 35:52.560]  просто Scala мне нравится больше всего. Тинькофф, я занимаю позицию архитектора решений, то есть я
[35:52.560 --> 35:57.040]  такой большой дядя, который там что-то проектирует какие-то большие серьезные системы, решает,
[35:57.040 --> 36:06.160]  ну, проектирует дизайн, решение каких-то больших сложных задач, ну, а также помогает инженерам,
[36:06.760 --> 36:16.000]  их локальные задачи решить так, чтобы в итоге клиентам было не так больно, чтобы решения были
[36:16.000 --> 36:21.400]  более надежными, более быстрыми, более поддержанными, ну, и так далее, да, всякие такие, всякое такое
[36:21.400 --> 36:28.560]  качество. Ну, а также последние три года я читаю лекции в магистратуре МФТИ, ну, и вот последний
[36:28.560 --> 36:37.360]  семестр еще и бакалаврят. Ну, раз уж я упомянул про Scala, давайте я расскажу, как я вообще сюда
[36:37.360 --> 36:43.720]  попал. Scala, на самом деле, язык такой немножко, мягко говоря, не самый популярный, да, это не
[36:43.720 --> 36:51.400]  Java, это не C-Sharp. Как это было? Десять лет назад в тринадцатом году на одной из конференций это
[36:51.400 --> 37:00.880]  был High-Load++, я услышал доклад от Twitter, посмотрел доклад от Twitter, и там как раз какой-то инженер
[37:00.880 --> 37:06.080]  из Twitter рассказал про Scala. Ну, честно говоря, доклад мне не понравился, то есть он, по сути,
[37:06.080 --> 37:10.920]  это было вот, смотрите, ребята, мы можем вот, смотрите, написать строку, да, у нее там через
[37:10.920 --> 37:15.600]  точечку написать to string, вот теперь классно это все работает, ну, вот, или к любому объекту написать
[37:15.600 --> 37:21.400]  to string, ну, что-то такое. Я посмотрел на это и думаю, ну, господи, еще один язык под JVM, зачем
[37:21.400 --> 37:32.720]  есть же Java? Окей. Буквально прошло пара лет, чуть-чуть поменьше, и, ну, мне вообще интересны
[37:32.720 --> 37:38.600]  высоконагруженные распределенные системы. И тогда я услышал про framework Aka, заинтересовался им,
[37:38.600 --> 37:45.440]  ну, как раз в разрезе вот этого своего интереса, high-load системы. Aka написана на Scala,
[37:45.440 --> 37:51.160]  поэтому интересно стало язык, и в второй половине 2015 года у меня появилась задача,
[37:51.160 --> 37:57.680]  которую как раз там можно было поэкспериментировать, и нужно было написать некоторый микросервис,
[37:57.680 --> 38:06.520]  и было принято решение взять Scala. Фактически с нуля там удалось изучить язык, и мне удалось
[38:06.600 --> 38:13.360]  написать этот код. Как раз я там Mac использовал. Ну, что могу сказать, мне очень понравился язык,
[38:13.360 --> 38:24.280]  показалось очень приятным для работы, поэтому я втянулся, изучал глубже, ну, и вот я здесь,
[38:24.280 --> 38:34.200]  перед вами такой красивый, рассказываю про направление Scala. Давайте от меня перейдем
[38:34.200 --> 38:43.080]  к нашей кафедре, к нашему направлению, вообще, чем мы занимаемся. Здесь важный момент, самый
[38:43.080 --> 38:47.680]  важный момент, то, что на нашем направлении мы готовим инженеров по разработке, то есть,
[38:47.680 --> 38:54.280]  чему мы учим, мы учим решать, в первую очередь, реальные задачи, настоящие, которые встречаются
[38:54.280 --> 39:02.080]  каждый день, ну, либо через день хотя бы. Мы учим работать с бизнес-требованиями, то есть,
[39:02.080 --> 39:08.160]  любой инженер должен уметь понять бизнес-постановку и уже перевести в решение,
[39:08.160 --> 39:14.720]  а не просто по какой-то готовой спецификации, где вам все до соплей расписано, просто перевести
[39:14.720 --> 39:23.320]  в код. Нет. Мы учим и архитектуре бэкэн-систем, как вот это все запроектировать так, чтобы было
[39:23.320 --> 39:29.480]  качественно, чтобы это было быстро, надежно. Учим современным инженерным практикам и подходам,
[39:29.480 --> 39:35.920]  разумеется, почему, потому что мы сами их у себя применяем. Ну, вы знаете, Тинькофф это не
[39:35.920 --> 39:41.600]  просто банк, это технологическая компания, в первую очередь, причем это одна из лидирующих
[39:41.600 --> 39:50.280]  технологических компаний нашей стране, ну, и в мире, наверное, тоже. И лидерами нельзя стать,
[39:50.280 --> 39:55.160]  если не использовать какие-то передовые подходы и практики, технологии, мы их используем, и мы
[39:55.320 --> 40:01.960]  естественно этому учим тоже и наших студентов. Ну и, конечно же, мы учим программированию,
[40:01.960 --> 40:07.640]  как, собственно говоря, пользоваться инструментом. И у нас два основных предмета на кафедре,
[40:07.640 --> 40:18.480]  это архитектура, как раз где мы рассказываем про подходы, про практики, про паттерны,
[40:18.480 --> 40:25.040]  про такие вещи, как continuous integration, continuous delivery, и так далее. Вот куча всяких вот этих
[40:25.040 --> 40:31.760]  слов. И мы учим второй предмет, это функционально программирование на языке скала, которое,
[40:31.760 --> 40:39.240]  собственно, и дало название нашему направлению. Ну и давайте поподробнее про саму скалку расскажу,
[40:39.240 --> 40:46.040]  про этот язык, ну и почему он мне нравится, и почему мы его используем. Ну, во-первых,
[40:46.040 --> 40:53.600]  тут важно сказать, да, почему мне нравится скала. Это очень лаконичный язык, буквально в
[40:53.600 --> 41:02.920]  несколько строчек можно написать то, что на другом языке займет у вас экран другой. Скала
[41:02.920 --> 41:09.760]  очень выразительный язык, в нем много всяких средств, синтаксических, синтаксического сахара,
[41:09.760 --> 41:16.320]  каких-то ключевых слов, которые вам позволяют многие вещи выразить довольно просто. А еще
[41:16.320 --> 41:23.440]  одни и те же вещи написать несколькими разными способами, они все будут правильные. Ну и сложные
[41:23.440 --> 41:29.160]  вещи, таким образом, легко и просто описывать. Еще один важный момент, скала это JVM-based язык,
[41:29.160 --> 41:35.160]  то есть ее можно, конечно, скомпилировать скала JS JavaScript, скомпилировать скала Native,
[41:35.160 --> 41:41.120]  но в первую очередь используют именно компиляцию Java bytecode. Чем это классно? Тем, что в продакшене
[41:41.120 --> 41:46.480]  с этим легко работать, потому что это аналогично Java приложениям. Для среди инженеров, для инженеров
[41:46.480 --> 41:55.520]  по эксплуатации это вообще прекрасно. Скала, как я сказал, такой язык, скажем так, не слишком
[41:55.520 --> 42:00.720]  широко распространенный, но тем не менее, у него есть сообщество, это сообщество достаточно активно
[42:00.720 --> 42:07.760]  развивается. Если вы посмотрите в Telegram-е чатики, посвященные скала, вы увидите, да, они не слишком
[42:07.760 --> 42:15.320]  населенные, но довольно активные. Ну и, конечно, такое сообщество способствует постоянному
[42:15.320 --> 42:25.320]  развитию и языка, и экосистемы. Ну и, финально, часто говорят, что, ну, есть такое мнение, что скала
[42:25.320 --> 42:30.240]  это функциональный язык, на самом деле это не совсем правда, но, тем не менее, скала за счет
[42:30.240 --> 42:34.840]  своего синтаксиса, за счет своих особенностей как бы подталкивает разработчиков, которые пишут
[42:34.840 --> 42:40.320]  на этом языке, именно к использованию функциональной парадигмы. И это важно, и вот почему.
[42:40.320 --> 42:48.040]  Ну, вкратце, что такое функциональное программирование? Я сейчас не буду рассчитать длинную лекцию про
[42:48.040 --> 42:53.240]  лямбда исчисления, про Лонза Чорща, про машины тюринга и так далее. Ну вот, вкратце, функциональная
[42:53.240 --> 43:02.160]  парадигма это о чем? Это неизменяемая структура данных, это функции, как переменные, возвращаемые
[43:02.160 --> 43:07.440]  значения. Еще говорят, функции в функциональном программировании это объект первого класса. Ну вот,
[43:07.440 --> 43:14.760]  то есть их можно вернуть, можно передать как параметр. Очень важное свойство, на чем вообще
[43:14.760 --> 43:18.840]  строится функциональная программирование, это ссылочная прозрачность. Ну, если грубо, то это
[43:18.840 --> 43:24.920]  функции, детерминированные, однозначенные, примерно как это в математике, математическом смысле слова,
[43:24.920 --> 43:35.320]  в которых нет побочных эффектов. Ну и для того, чтобы все-таки побочные эффекты иметь, есть
[43:35.320 --> 43:40.000]  функциональные эффекты, и основной инструмент это композиция. То есть, программа на функциональном
[43:40.000 --> 43:47.000]  языке на самом деле это функция, чистая функция, которая принимает что-то на вход, возвращает
[43:47.000 --> 43:51.880]  какой-то результат, и дальше этот результат можно проинтерпретировать, и она у вас выполнит
[43:51.880 --> 43:58.920]  полезную работу. И эту функцию можно собрать путем композиции. Может быть, немножечко сложно
[43:58.920 --> 44:06.160]  объясняю, но давайте вот по профитам, да, посмотрим по профитам, что это позволяет, функциональная
[44:06.160 --> 44:11.320]  парадигма, функциональное программирование позволяет описывать логику алгоритма декларативно.
[44:11.320 --> 44:19.440]  Оно позволяет, за счет декларативности, позволяет достичь того, что вот это вот описание, оно у вас
[44:19.440 --> 44:29.160]  достаточно понятное, прозрачное. Плюс, за счет того, что свойства ссылочной прозрачности,
[44:29.160 --> 44:35.400]  незаменяемой структуры данных, которые используется ФП, у вас нет, не будет никаких проблем с конкурентным
[44:35.400 --> 44:42.880]  выполнением кода. По-моему, у вас есть такой курс, и вы знаете, да, вот эти симафоры, критические
[44:42.880 --> 44:50.440]  секции и так далее, но вот ФП с этим все гораздо проще. И более того, этот код работает быстро и
[44:50.440 --> 44:57.080]  эффективно. А еще, то, чего на этом слайде нет, но о чем важно сказать, функционально написанный код,
[44:57.080 --> 45:03.080]  он очень хорошо композируется. То есть, фактически, вы пишете маленькие кусочки, вы можете из них
[45:03.080 --> 45:09.720]  собирать разные программы, из различных под программ путем композиции, и это довольно легко,
[45:09.800 --> 45:15.400]  довольно просто сделать. То есть, по сути, на выходе вы получите надежный,
[45:15.400 --> 45:24.160]  тестируемый, композируемый, хорошо работающий код. И почему это важно именно в Тинькофф? Казалось бы,
[45:24.160 --> 45:30.800]  да, почему бы не использовать какие-то более традиционные подходы? Давайте, как мы используем
[45:30.800 --> 45:37.020]  скалу? Мы ее используем для того, чтобы в первую очередь писать опишки. Опишки, какие-то ближние
[45:37.020 --> 45:41.820]  бэкенды, с которыми взаимодействуют наши фронтенды, веб-странички, мобильные приложения.
[45:41.820 --> 45:54.780]  Ну и примерно две трети API у нас написаны на скалу. Оставшиеся это C sharp и Java. Нам критически
[45:54.780 --> 46:00.300]  важна доступность и скорость работы этого нашего API. Почему? Ну, потому что у нас десятки
[46:00.300 --> 46:06.500]  миллионов клиентов, на самом деле. И потому что Тинькофф, ну, как вы знаете, у нас нет никаких
[46:07.100 --> 46:13.060]  отделений, никаких офисов для клиентов. У нас все взаимодействие с клиентом с нами происходит либо
[46:13.060 --> 46:18.400]  через web-front, либо через мобильное приложение. Если web-front не работает, клиент недовольный,
[46:18.400 --> 46:22.900]  он уходит. Если мобильное приложение не работает, клиент не может сделать свою работу. То, что он
[46:22.900 --> 46:32.020]  хочет, перести деньги, совершить покупку, сделать ставку на инвестициях, закупить что-нибудь,
[46:32.020 --> 46:37.740]  проинвестировать, открыть счет, закрыть счет, и так далее, всякие разные вещи.
[46:37.740 --> 46:43.460]  Нам важно, чтобы клиент мог это делать 24 часа в сутки, 7 дней в неделю.
[46:43.460 --> 46:49.780]  Поэтому стабильность, надежность — это для нас очень важно.
[46:49.780 --> 46:58.100]  Ну а за счет того, что на скала можно сложные вещи написать достаточно просто,
[46:58.100 --> 47:03.500]  она нам позволяет справиться вот с вот этой нагрузкой, которая нам генерят
[47:03.500 --> 47:08.660]  десятки клиентов каждый день и обеспечить нужную доступность и скорость работы.
[47:08.660 --> 47:15.420]  Ну а почему это сложно? На самом деле, потому что любая простая вещь под серьезной
[47:15.420 --> 47:20.700]  нагрузкой становится действительно сложной. Там приходится начинать думать о том, а что нам
[47:20.700 --> 47:24.980]  сделать так, чтобы обеспечить надежность ну хотя бы три девяточки, а то и четыре.
[47:25.540 --> 47:31.500]  Как это сделать? Нужно использовать там какие-нибудь паттерны, подходы и так далее.
[47:31.500 --> 47:35.900]  Скала позволяет довольно легко и красиво описать. У вас не будет мессии в коде,
[47:35.900 --> 47:45.500]  и это все тестируется и прогнозируется. Что еще можно сказать про скалов теньков?
[47:45.500 --> 47:54.100]  У нас в компании самое большое среди российских работодателей скала сообщества.
[47:54.100 --> 48:01.420]  Несколько сотен скалист, ну примерно 300 человек. Среди них есть как студенты-магистры,
[48:01.420 --> 48:07.540]  пока еще магистры, осенью, я думаю, бакалавра добавится. Вот так и те,
[48:07.540 --> 48:11.980]  кто закончили магистратуру, ну и те люди, которые пришли, скажем так, с улицы.
[48:11.980 --> 48:20.220]  Мы работаем не только над своими проектами, не только над своими опишками и так далее,
[48:20.220 --> 48:26.140]  мы еще и работаем с опенсорс-проектами. Да, теньков вкладываются в опенсорс-проекты,
[48:26.140 --> 48:31.260]  даже некоторые библиотеки, фреймарки, которые используются в Скалом мире,
[48:31.260 --> 48:39.420]  они вышли именно из нашей компании. Как пример, TOFU. У нас организуются регулярные метапы,
[48:39.420 --> 48:48.420]  наши ребята пишут статьи, входят на конференции, то есть это сообщество, которое у нас есть,
[48:48.420 --> 48:54.980]  оно еще активно развивается. Ну и, конечно же, мы преподаем, мы внутри себя тоже развиваем
[48:54.980 --> 49:01.180]  какую-то базу знаний, которую когда-нибудь рано или поздно мы тоже расширим на публику.
[49:01.180 --> 49:13.940]  Про сам курс расскажу тоже более подробно. Естественно, мы у вас в курсе по скала научим
[49:13.940 --> 49:20.540]  основам языка, научим синтаксису, ну, база. Конечно же, мы познакомимся с коллекцией,
[49:20.540 --> 49:25.180]  методами работы с ними, потому что, ну, мы все-таки зачем программируем, да,
[49:25.180 --> 49:29.380]  чтобы большие массивы данных обрабатывать. Большие массивы это коллекции, как без них.
[49:29.380 --> 49:36.980]  Мы научимся писать асинхронные или многопоточные, как хотите, код стандартными
[49:36.980 --> 49:45.180]  средствами языка. Под капот заглянем, увидим, как это устроено в кишочках и почему такой API.
[49:45.180 --> 49:49.740]  Мы посмотрим, как средства ОУП, объектно-ориентированную программирую скала,
[49:49.740 --> 49:54.540]  организованы. Как я сказал, скала толкает, конечно, к функциональной парадигме,
[49:54.540 --> 50:02.900]  но изначально, в принципе, это ОУП-язык. Немножечко мы с вами познакомимся еще и с
[50:02.900 --> 50:06.140]  математической основой функционального программирования. Это, в первую очередь,
[50:06.140 --> 50:12.620]  лямбда-исчисления, точнее, вспомним, скорее всего, да, насколько я знаю, вам его преподают.
[50:12.620 --> 50:21.700]  Вспомним упрямительно к FP и некоторые вещи из теории категорий. Ровно столько, сколько нужно
[50:21.700 --> 50:30.180]  для понимания происходящего и не больше не погружаясь в глубины глубин, чтобы, в первую очередь,
[50:30.580 --> 50:36.780]  решать инженерные задачи. Научимся функциональному дизайну, это очень важно для человека,
[50:36.780 --> 50:44.020]  который пишет в функциональном стиле. Ну и в итоге вы сможете писать полноценный
[50:44.020 --> 50:50.020]  функциональный код на скала как с нуля, так и с помощью современных каких-то библиотек.
[50:50.020 --> 51:01.420]  Ну и что тут еще сказать после этого, ну или в процессе этого. Добро пожаловать в сообщество
[51:01.420 --> 51:14.780]  скалоразработчиков Тинков. Тоже должен упомянуть об этом. Смотрите, по поводу стажировки и дальнейшей
[51:14.780 --> 51:21.140]  карьеры, как вообще у нас происходит путь развития Scala Junior. То есть Марат рассказывал нас,
[51:21.140 --> 51:26.940]  студенты, которые поступают нам на работу через два года, ну примерно через полтора года на
[51:26.940 --> 51:31.620]  самом деле, достигают мидалу уровня. Давайте я расскажу, как это вот в случае Scala происходит.
[51:31.620 --> 51:37.660]  Ну, во-первых, буквально с самого начала у вас будут реальные задачи, то есть вы попадете в
[51:37.660 --> 51:41.580]  команду, у вас будут реальные задачи, которые вы будете решать. Здесь не надо пугаться,
[51:41.580 --> 51:47.460]  потому что задачи будут от простых к сложным, разумеется. То есть сперва это возможно какие-то
[51:47.460 --> 51:52.620]  тесты написать. Мы очень много тестов пишем. Современная бэк-энд разработка без автоматизированного
[51:52.620 --> 52:00.740]  тестирования — это нонсенс. Какие-то простые вещи, типа простые рефакторинги, удалить фича,
[52:00.740 --> 52:11.820]  флаг, какой-то неиспользуемый код. Буквально на этом вы как раз сможете набить руку,
[52:11.820 --> 52:18.100]  познакомиться с языком и применить уже более лучше знания, которые вы получите на лекции.
[52:18.100 --> 52:25.460]  Дальше вы будете уже реализовывать какие-то бизнес-фичи, относительно небольшие или,
[52:25.460 --> 52:30.940]  может быть, технические какие-то фичи. Делать это по подробной технической постановке,
[52:30.940 --> 52:37.580]  которую вам коллеги подготовят. Ну а дальше вы уже научитесь и сами готовить техническую
[52:37.580 --> 52:45.620]  постановку, то есть перерабатывать абстрактно-постальную задачу в конкретные решения на языке. И, конечно же,
[52:45.620 --> 52:52.860]  вот весь этот путь вы будете не одни. У вас обязательно будет ментор, который будет вас
[52:52.860 --> 52:57.860]  спровождать. Ну это обязательно. У нас все джунгли так проходят, не только студенты. Это очень важно,
[52:57.860 --> 53:04.580]  потому что ментор всегда поможет ответить на какие-то вопросы, что-то подскажет, расскажет и так далее.
[53:04.580 --> 53:15.300]  Тоже важный момент. Мы везде во всем Тинькофф практикуем обязательное перекрестное код-ревью.
[53:15.300 --> 53:22.540]  Мы смотрим код друг друга. Опытные инженеры смотрят код более юных коллег, более юные
[53:22.540 --> 53:29.540]  коллеги смотрят код более опытных инженеров. За счет чего передаются практики, собирается обратная
[53:29.540 --> 53:34.980]  связь. Вы в этом тоже, конечно, будете участвовать. Вы будете смотреть чужой код, спрашивать, почему так.
[53:34.980 --> 53:41.340]  Написано они, так, аналогично. И коллеги вам будут помогать сделать ваш код лучше. Через это вы
[53:41.340 --> 53:47.300]  будете на практике учиться. Ну и, конечно же, вы окажетесь в команде, поэтому вы будете участвовать
[53:47.300 --> 53:52.100]  в командах активностях. Ну, от команды к команде они могут различаться, но в любом случае вас
[53:52.100 --> 53:57.260]  будут какие-нибудь лимитинги, у вас будут какие-нибудь ретроспективы, пополнения, триомига, ну и так далее.
[53:57.260 --> 54:05.220]  Всякие умные слова. Ну, еще чего команда придумает. Тоже все это интересно, полезно и поможет вам
[54:05.220 --> 54:15.300]  получить реальный практический опыт. Так, ну и что у нас осталось? Осталось про вступительный экзамен
[54:15.300 --> 54:24.860]  поговорить. То есть все это, как вам, как вам сюда попасть? Как вам попасть к нам на кафедру? Да очень
[54:24.860 --> 54:29.940]  просто. Вам, естественно, нужно подать будет заявку, да, об этом уже сказали мои коллеги.
[54:29.940 --> 54:34.860]  Конкретно на наше направление у вас будет контест по программированию, то есть это какая-то онлайн
[54:34.860 --> 54:41.340]  задачка или онлайн задачки, которые вам надо будет решить. Условно вам будет дана неделя и три
[54:41.340 --> 54:48.900]  часа на решение нескольких задачек в течение этой недели. Что вам пригодится? Знание и понимание
[54:48.900 --> 54:57.140]  алгоритмов и структуры данных. Это важно, потому что без вот этих знаний сложно вам будет решить
[54:57.140 --> 55:05.060]  задачки качественно. Знание и понимание сложности алгоритмов, естественно, это тоже важно, чтобы
[55:05.180 --> 55:12.020]  решение было оптимальное. Какой-либо язык программирования вам тоже потребуется, без него вы,
[55:12.020 --> 55:18.020]  конечно же, не сможете код написать. После того, как вы сдадите этот экзамен, да, у вас будет
[55:18.020 --> 55:26.740]  некоторое собеседование, там мы проверим, наши сотрудники проверят, насколько вы хорошо знаете,
[55:26.740 --> 55:33.620]  опять же, понимаете вот эти предметы, алгоритмы, структуры данных, но уже не на примере задачек,
[55:33.620 --> 55:40.140]  а уже в ходе беседы. Ну и какое-то мотивационное тоже интервью. После этого мы будем принимать
[55:40.140 --> 55:52.820]  решение о зачислении или не о зачислении. И финально, что хотелось бы сказать, если вас интересует
[55:52.820 --> 55:59.340]  разработка, если вы хотите писать код, если вы хотите развиваться в сторону инженера по
[55:59.340 --> 56:04.620]  разработке, если вам интересны бэкэн-системы, распределенные бэкэн-системы, высоконагруженные
[56:04.620 --> 56:12.940]  бэкэн-системы, если вас интересует и функциональное программирование, какие-то теоретические,
[56:12.940 --> 56:20.540]  какая-то теория программирования, если вот эти все условия выполняются, ну или хотя бы часть из
[56:20.540 --> 56:29.500]  них, то наше направление это как раз то, что вам нужно. Приходите к нам, и я закончил. Если у вас
[56:29.500 --> 56:39.220]  есть какие-то вопросы, задавайте только, пожалуйста, погромче. Есть компании, где еще используются
[56:39.220 --> 56:49.300]  скалы, это Яндекс, в Сбире на скала пишут что-то, на Омин, по-моему, скала разработка, ну это вот так
[56:49.300 --> 56:57.260]  вот на скидку. Вообще, на самом деле, скала достаточно широко используется в обработке больших данных
[56:57.260 --> 57:03.260]  дат инженерии, но не только. Опишки на ней тоже пишут. Вот в частности Яндекс и Яндекс Вертикали,
[57:03.260 --> 57:32.900]  там у них имена опишки. Хороший вопрос. Смотрите, наш предмет, на самом деле, называется
[57:32.900 --> 57:39.540]  функциональное программирование на языке скала. То есть мы, да, мы, конечно, вам покажем,
[57:39.540 --> 57:46.420]  расскажем на конкретный язык и покажем, как на нем писать функциональный код. Но в ходе вот этого
[57:46.420 --> 57:54.660]  в наших лекций мы вам расскажем про паттерны функционального программирования, про концепции
[57:54.660 --> 58:00.100]  абстракций, которые используются в ФП. И те же самые концепции абстракций используются в любом
[58:00.100 --> 58:04.980]  другом языке, где поддерживается функциональная парадигма. А на самом деле сейчас почти любой
[58:04.980 --> 58:11.260]  современный язык программирования поддерживает так или иначе какие-то элементы хотя бы ФП. То есть
[58:11.260 --> 58:18.900]  есть чисто функциональные языки типа Хаскель или Ирланд, но они совсем мало популярны. Ирланд
[58:18.900 --> 58:26.860]  это вам вообще в Швеции надо. Вот. Но, тем не менее, допустим, те же самые функции, как параметры,
[58:26.860 --> 58:34.180]  как вращаемые значения, ну или так называемые лямбды, это есть и в шарпе, это есть в джаве,
[58:34.180 --> 58:38.980]  это, конечно, есть в котлене, даже в плюсах это есть. И лексические замыкания там есть, там тоже
[58:38.980 --> 58:45.700]  можно писать код функционально, ну или раз, например. То есть знания, которые вы получите,
[58:45.700 --> 58:52.100]  они на самом деле, ну с поправкой на синтаксис конкретного языка и на его выразительные возможности,
[58:52.100 --> 58:54.260]  они применимы и за пределами скалы.
[58:56.860 --> 59:16.460]  Твиттер.
[59:26.860 --> 59:38.340]  Так, ну смотрите, Scala это твиттер. Твиттер, кстати, очень много в ScalaMir тоже доконтрибьютил,
[59:38.340 --> 59:43.540]  у них есть свои библиотечки, свои подходы, свои фреймарки. Недавно они заопенсорсили,
[59:43.540 --> 59:49.660]  по-моему, рекомендательный алгоритм, можно посмотреть на Гитхабе. Вот. Он написан на Scala.
[59:49.660 --> 59:59.420]  Значит, что у нас еще есть? У нас есть Netflix. Netflix на Scala пишет именно бэкэнды, то есть это не
[59:59.420 --> 01:00:05.860]  дата-инженерия, это именно бэкэнды. Правда, по-моему, в последнее время они диверсифицируют стэк,
[01:00:05.860 --> 01:00:13.380]  но у них Scala еще по-прежнему много. Ну и она будет оставаться. Так, что еще упомянуть?
[01:00:13.380 --> 01:00:23.060]  Шведский, ну, вообще, европейский финтех Klarna. Ну они, в принципе, в FPGeek, они пишут функциональные
[01:00:23.060 --> 01:00:28.900]  парадигмы, у них все FP, то есть они фронты на TypeScript это FP в функциональном стиле пишут,
[01:00:28.900 --> 01:00:35.740]  там можно так. У них бэкэнды на Ирланге, Хаскеле, Scala и, естественно, везде все
[01:00:35.740 --> 01:00:42.500]  функционально на полный максимум. Кстати, такая достаточно известная компания, у нас она не на
[01:00:42.500 --> 01:00:48.340]  слуху, но в Европе, известно, они, например, предоставляют рассрочку. Бинпель такой продукт,
[01:00:48.340 --> 01:01:00.540]  очень хороший и полезный. У нас тоже такой есть. Так, что еще? Кого бы еще вспомнить? Есть Evolution,
[01:01:00.540 --> 01:01:09.020]  это GameDev, гэмблинг точнее, скорее. У них бэкэнды и у них функциональный стиль. Ну это вот то,
[01:01:09.020 --> 01:01:14.380]  что примерно на слуху, такое достаточно крупное. Вообще, Scala частенько присутствует в банках,
[01:01:14.380 --> 01:01:22.180]  правда, частенько это все-таки обработка каких-то больших данных, это Spark и какие-то SparkJobs,
[01:01:22.180 --> 01:01:29.900]  которые написаны на Scala. Вот, ну вот как-то так. То есть, в принципе, по миру ситуация, на самом
[01:01:29.900 --> 01:01:37.780]  деле, если в двух словах, примерно как в России. Scala есть, часто используется в дат-инженерии,
[01:01:37.780 --> 01:01:43.740]  реже для каких-то бэкэндов. Scala не является каким-то мейнстрим-языком, то есть это не то,
[01:01:43.740 --> 01:01:48.820]  что вы в любой компании найдете, но, тем не менее, язык используется и развивается.
[01:01:55.500 --> 01:02:01.340]  Я преподаю и в магистратуре, и в бакалавриате.
[01:02:01.340 --> 01:02:14.780]  Дипломные. Ну давайте пример приведу. Вообще, мы тоже пишем, у нас студенты тоже пишут работы
[01:02:14.780 --> 01:02:25.460]  дипломные на рабочие темы, также как и в продуктовой аналитике. Можно сказать, что можно подумать,
[01:02:25.460 --> 01:02:30.700]  точнее, что это как-то тяжело. Мы типа код пишем, а дипломная работа это какое-то исследование,
[01:02:30.700 --> 01:02:40.180]  какая-то наукоемкая штука, в основании и так далее. Научная ценность. На самом деле,
[01:02:40.180 --> 01:02:47.380]  ее тоже можно найти и достаточно несложно найти у нас, потому что берем большую задачу, берем
[01:02:47.380 --> 01:02:54.820]  разные подходы, с помощью которых эту задачу можно решить. Эти подходы сравниваем, ищем какие-то
[01:02:54.820 --> 01:03:03.500]  определенные метрики, ищем какие-то критерии, почему нам подходит то или иное решение. Сравниваем
[01:03:03.500 --> 01:03:09.900]  по этим критериям разные варианты. Выбираем нужный, реализовываем, описываем полученные
[01:03:09.900 --> 01:03:14.940]  результаты. Ну по сути, вот дипломная работа. Так же как и в любом другом направлении. Качество
[01:03:14.940 --> 01:03:20.460]  примера. Один из студентов, ну это магистратура, конечно, тем не менее. Дипломная работа была
[01:03:20.460 --> 01:03:28.380]  посвящена тому, чтобы написать, ну какой-то предложить путь и реализовать этот путь для,
[01:03:28.380 --> 01:03:38.420]  казалось бы, просто простой обертки. Обертки к методам. То есть суть задачи была в том,
[01:03:38.420 --> 01:03:43.580]  что нам важно обеспечивать какую-то отказ-устойчивость надежности, и не хочется бизнес-логику
[01:03:43.580 --> 01:03:49.660]  загромождать техническими особенностями. То есть когда у вас бизнес-логика написана,
[01:03:49.660 --> 01:03:58.140]  описывает именно саму бизнес-суть решаемой задачи, да, не хочется туда встраивать что-то,
[01:03:58.140 --> 01:04:05.340]  что говорит о том, что вот в случае недоступности такого-то сервиса мы должны повторить или там
[01:04:05.340 --> 01:04:10.380]  использовать circuit breaker, еще какие-нибудь такие умные слова. Вот это очень легко делать обертками.
[01:04:10.380 --> 01:04:14.700]  Обертки можно на скалы реализовать разными способами. И работа была посвящена тому,
[01:04:14.700 --> 01:04:19.060]  чтобы выбрать правильный способ реализовать. В итоге там были выбраны макросы. Это довольно
[01:04:19.060 --> 01:04:26.420]  тоже интересная область. То есть это, по сути, когда мы программируем компилятор, за нас написать
[01:04:26.420 --> 01:04:32.220]  какой-то код, код сгенерировать в процессе компиляции. Вот, в итоге была выбрана именно эта тема.
[01:04:32.220 --> 01:04:38.660]  Студент показал, что именно вот такой подход подойдет в конкретных обстоятельствах. То есть
[01:04:38.660 --> 01:04:45.500]  именно макросы, а не какой-то хитрый паттерн-интерпретатор, которых на скала можно
[01:04:45.500 --> 01:05:01.100]  по-разному реализовать. Ну, отличная работа на самом деле. Так, ну что ж, если у вас вопросы
[01:05:01.100 --> 01:05:05.420]  закончились. Спасибо.
