[00:00.000 --> 00:15.000]  Давайте тогда поехали. Как говорится, и было у нас двоичные деревья поиска, и обсудили мы их в целых, получается, четыре штуки.
[00:15.000 --> 00:29.000]  Сегодня мы обсудим еще. Но важна оговорка. Сегодня мы снова будем решать всякие задачи, попытаться решать задачи построения черного ящика,
[00:29.000 --> 00:39.000]  которые очень удобно добавлять, удалять, искать элементы, а также желать на минимум и максимум, а лучше еще и какие-нибудь следующие, предыдущие.
[00:39.000 --> 00:43.000]  Ну, серечь лавербаунды, айпербаунды и наоборот.
[00:44.000 --> 00:56.000]  Но сегодня мы попробуем отойти от концепции двоичных деревьев поиска. Ожидается у нас сегодня две структуры данных на эту тему.
[00:56.000 --> 01:09.000]  Что хочется? На самом деле заметим, что до этого момента мы обсуждали всякие деревья такие, что все элементы по памяти явно влезут куда-нибудь в оперативную память.
[01:09.000 --> 01:14.000]  Ну, причем в олимпиадах это не новость.
[01:14.000 --> 01:27.000]  Но возникает такая проблема, что когда вы смотрите в вершину, если задуматься о том, что пусть у нас элементы хранятся не в оперативной памяти, а где-нибудь там на диске.
[01:27.000 --> 01:42.000]  Вот, и эти элементы надо доставать. То, как мы уже с вами знаем из внешней сортировки, оказывается, что доставать вот по одной вершинке вот в тех объемах, которые мы изучали, это как-то очень неэффективно.
[01:42.000 --> 01:47.000]  То есть в идеале хотелось бы доставать как-нибудь побольше.
[01:47.000 --> 02:04.000]  Поэтому возникает такая интересная идея. А можно ли сделать дерево, в котором в вершине находится не один элемент, а несколько?
[02:04.000 --> 02:13.000]  Вот такая вот интересная идея. Ну и желательно, чтобы оно было каким-нибудь сбалансированным, естественно.
[02:13.000 --> 02:26.000]  Ну, собственно, вот на таких предпосылках предлагается такая замечательная структура данных, как B дерево.
[02:26.000 --> 02:35.000]  Почему B? А чтобы я знал. Название такое.
[02:35.000 --> 02:42.000]  Итак, значит, смотрите, выглядеть оно будет следующим образом. Вот что было у нас раньше?
[02:42.000 --> 02:49.000]  Раньше у нас в двоичном дереве поиска обычно тут был какой-то элемент, и у него было два под дерево.
[02:49.000 --> 02:58.000]  Тут находятся элементы, условно, меньше пяти, а тут находятся элементы больше пяти.
[02:58.000 --> 03:07.000]  Ну, соответственно, в B дереве оказывается позволительно делать кое-что более продвинутое.
[03:07.000 --> 03:16.000]  То есть в демпере оказывается, что у вас может быть перечислено, скажем, например, три вершины.
[03:16.000 --> 03:24.000]  Вот, допустим, три вершины. Ну, не три вершины, а три ключа, если быть точнее.
[03:24.000 --> 03:33.000]  Вершина одна. Но тогда у него будет четыре ребёнка. Здесь элементы будут меньше пяти.
[03:33.000 --> 03:43.000]  Тут, соответственно, от пяти до семи. Ну, здесь, соответственно, от семи до девяти.
[03:43.000 --> 03:50.000]  Ну, вот и здесь, соответственно, больше девяти.
[03:50.000 --> 04:00.000]  То есть вот такая технология. То есть обратите внимание, что количество вершин, что в вершине может быть больше одного ключа.
[04:00.000 --> 04:06.000]  Но теперь, поэтому, если вы захотите доставать, скажем, вершину из какой-нибудь памяти,
[04:06.000 --> 04:13.000]  то тогда вам пришлют сразу несколько ключей, ссылку на несколько деревьев, и тогда это даст вам возможность
[04:13.000 --> 04:25.000]  сокращать количество поисков, условно, не совсем в два раза, а, соответственно, может быть чуть больше.
[04:25.000 --> 04:31.000]  Вот такая у нас возникает идея.
[04:31.000 --> 04:44.000]  Итак, но, конечно же, это условно в два раза и в четыре, это всё условно, пока мы не вводим такое понятие, как сбалансированность.
[04:44.000 --> 04:56.000]  Но давайте думать, что же мы хотим. Итак, хотим же мы следующие.
[04:56.000 --> 05:04.000]  Значит, смотрите, в определении по дереву у нас будет следующее.
[05:04.000 --> 05:11.000]  Значит, во-первых. Итак, поехали.
[05:11.000 --> 05:30.000]  Значит, каждая вершина у нас содержит ключи.
[05:30.000 --> 05:40.000]  Значит, такие х1 меньше, и так далее. Значит, х соответственно.
[05:40.000 --> 05:48.000]  Ну, я так напишу. Допустим, k от v. Значит, обратите внимание, почему k от v?
[05:48.000 --> 05:58.000]  k от v, потому что у нас будет такая фишечка, что количество ключей в вершине не обязано быть константой.
[05:58.000 --> 06:02.000]  Ни в коем случае.
[06:02.000 --> 06:09.000]  Ну, на самом деле, не то чтобы у вас может оказаться, что в вершине находятся все инэлементы, нет.
[06:09.000 --> 06:13.000]  Ну, у нас будут какие-то разумные ограничения, сейчас вы увидите.
[06:13.000 --> 06:19.000]  Но тем не менее, по крайней мере, мы отказываемся от концепции, что в вершине хранится ровно сколько-то вершин.
[06:19.000 --> 06:43.000]  Поэтому я пишу k от v. Вот. А также указатели на дереве, ну, на под дереве можно было бы сказать, конечно.
[06:43.000 --> 06:57.000]  Значит, там, ну, я их назову там, альфа 0, альфа 1, там альфа 2, и так далее, альфа k от v.
[06:57.000 --> 07:04.000]  Вот. Обратите внимание, да, видите, я не случайно тут пишу именно с нуля, потому что, да, деревьев у нас на одно больше, чем ключей.
[07:04.000 --> 07:08.000]  Ну, почему это уже по картинке, видите?
[07:08.000 --> 07:31.000]  Вот. Ну и, соответственно, такое, что, понятно, в альфа 0 все ключи, значит, там все ключи меньше х1, в альфа, значит, i, для i равно, да, вот это так пишет,
[07:31.000 --> 07:49.000]  в альфа i, значит, в, значит, полуинтервале, вот, соответственно, х и, и, соответственно, х и плюс 1, значит, i равно 1, 2, пум-пум-пум, соответственно, k от v минус 1.
[07:49.000 --> 07:59.000]  Ну и, соответственно, в альфа, значит, k в этом, соответственно, тупо больше, чем х в этом.
[07:59.000 --> 08:03.000]  Вот, если совсем формально написать, то вот можно написать так.
[08:03.000 --> 08:09.000]  Вот. Но, как вы уже догадались, это только первое условие.
[08:09.000 --> 08:16.000]  Вот. Ну, это, так сказать, определение структуры.
[08:16.000 --> 08:29.000]  Значит, еще важный момент, значит, еще, соответственно, вот, также еще для дерева важно зафиксировать одну константу.
[08:29.000 --> 08:47.000]  Значит, смотрите, зафиксирована константа T.
[08:47.000 --> 08:50.000]  Ну, я тут не буду писать, но целая.
[08:50.000 --> 09:06.000]  Потому что именно эта константа будет ограничивать количество ключей в дереве.
[09:06.000 --> 09:14.000]  Значит, тут я сразу что-то просто в этом жопу тут же и пишу.
[09:14.000 --> 09:34.000]  При этом в любой вершине дерева, значит, внимание, смотрите,
[09:34.000 --> 09:40.000]  k от v не превосходит 2t минус 1.
[09:40.000 --> 09:47.000]  Вот. То есть у нас все-таки будет такое ограничение.
[09:47.000 --> 10:03.000]  И вершина, ну вот, и b, значит, тут внимание, в любой, внимание, некорневой вершине.
[10:03.000 --> 10:28.000]  В вершине, оказывается, что вот предлагается, что k от v было больше либо равно, чем t минус 1.
[10:28.000 --> 10:42.000]  Да, вот внезапно оказывается, что у нас на всей вершины, по крайней мере, кроме корня, есть не только верхнее ограничение количества ключей, но и еще и нижнее.
[10:42.000 --> 10:53.000]  Понимаете, да? Вот.
[10:53.000 --> 11:01.000]  Вот. Но и это еще не все. Потому что само по себе пока, конечно, эта сбалансированность не гарантирует.
[11:01.000 --> 11:17.000]  То есть пока это дает в определенной степени нам развязывают руки, но исключительно в определенной, но сбалансированности нам пока не дает.
[11:17.000 --> 11:24.000]  Вот. А сбалансированность нам даст следующее.
[11:24.000 --> 11:29.000]  Ну, давайте выразимся в терминологии предыдущих лекций.
[11:29.000 --> 11:36.000]  Понимаете, мы вот это с указателей на пустые деревья обозначаем крестиком.
[11:36.000 --> 11:42.000]  Так вот. Тогда я сформулирую следующим образом.
[11:42.000 --> 12:07.000]  Все вот эти вот крестики находятся на одной и той же глубине.
[12:07.000 --> 12:17.000]  Да. Ну, на самом деле, да, но на самом деле нет. На самом деле нет.
[12:17.000 --> 12:27.000]  Контр-пример вот такой, смотрите. Дело в том, что если мы рассмотрим такое дерево как бамбу-ча, ну вот проблема, да.
[12:27.000 --> 12:38.000]  Ну, то есть более формально тут надо написать, что все листья находятся на одной и той же глубине, и у всех вершин либо все поддеревья существуют, либо все поддеревья не существуют.
[12:38.000 --> 12:48.000]  Вот. Ну или там типа у меня листов, вот это хотелось написать, но раз уж у нас есть такое понятие как крестик, вот кажется мне удалось сформулировать ту же самую мысль сильно более коротко.
[12:48.000 --> 12:56.000]  Ну да, помните о том, что да, то есть в обычных деревьях действительно у нас там какие-то дети могут существовать, а другие в то же время не существовать.
[12:56.000 --> 13:09.000]  Вот. А здесь у нас действительно достигается определенного рода сбалансированность, потому что, ну давайте вот подумаем, как у нас вообще дерево может выглядеть.
[13:09.000 --> 13:19.000]  Вот давайте зафиксируем какую-нибудь константу, там я не знаю, t равно 3, что мы тут видим.
[13:19.000 --> 13:34.000]  Вот. Но мы можем заметь, давайте скажем, что допустим у нас корень может состоять из, там я не знаю, из четырех элементов, видите, то есть у нас их должно быть от двух до пяти.
[13:34.000 --> 13:48.000]  Там допустим, там я не знаю, пять, давайте. Не-не-не-не-не. Ну снизу да, но ограничение сверху-то не для корня.
[13:48.000 --> 14:04.000]  Да. Так-то да, но в корне от одного до пяти, а у всех до двух до пяти. Ну я все равно пока нарисую так. Вот есть, то есть здесь до пять, там допустим, 15, 28, 57, например.
[14:04.000 --> 14:29.000]  Вот. Ну в принципе, да, одна вершина это, конечно, тоже корректное дерево поиска. Вот. Ну что у нас здесь? Ну здесь у нас может быть там, что-нибудь там, я не знаю, минус три, там скажем, там что-нибудь, ноль и там допустим три.
[14:29.000 --> 14:48.000]  Вот. И тут какие-нибудь листья на эту тему. Ну вот. Ну скажем, их может быть от двух, поэтому так и напишет там, минус два, минус 20 и минус четыре. Тут допустим, минус два, там минус полтора и минус один.
[14:48.000 --> 15:07.000]  Ну и так далее. Тут тоже что-нибудь типа там один, два, два с половиной, два и семь. Ну и тут, соответственно, тут должно быть от трех до пяти, поэтому тут три, один, три, два, три, три, три, четыре. Вот.
[15:07.000 --> 15:26.000]  Ну то есть вот на самом деле типичное такое под дерево, под дерево, особенно на низкой глубине, может выглядеть вот таким вот образом. Вот. Ну можно тут, конечно, аналогичные всякие вещи тоже порисовать. Вот, например, давайте я тут еще пару вершин нарисую.
[15:26.000 --> 15:42.000]  Вот. Соответственно тут семь, восемь, там допустим одиннадцать. И тут тогда обязательно существует какие-нибудь четыре дерева. Пум-пум-пум-пум. Там ну вот. Ну и тут что-нибудь там шесть, там шесть с половиной, ну и так далее.
[15:42.000 --> 15:57.000]  Ладно, я думаю, дорисовывать смысла особого нет. Я думаю, так все понятно уже. Ну это пока дерево, конечно, малой глубины, оно может быть и побольше. Ну и, конечно, как правильно замечено, то есть на самом деле, конечно, тут все может быть и побольше.
[15:57.000 --> 16:13.000]  Вот. Ну, например, ну вот. Ну то есть замечаю, что корень может быть и поменьше. То есть в принципе какой-нибудь там корень, в котором находится одно, одно, одно число пятьдесят семь, это нормально. Даже вот при любой константе Т.
[16:13.000 --> 16:25.000]  Но в любом случае у детей, конечно же, всех обязано быть уже меньше. Значит ноль, там два, там то есть два пять, ну хотя бы два должно быть.
[16:25.000 --> 16:33.000]  Там вот либо ноль-два вот так вот, чтобы два было, либо наоборот побольше. Двести, триста, четыреста, пятьсот.
[16:33.000 --> 16:49.000]  Да, в любой не корневой, да, это важно. Вот.
[16:49.000 --> 17:03.000]  Вот, соответственно, все крестики находятся на одной и той же глубине. Или что то же самое, ну то есть отсюда следует, да, не то же самое, но следует, что все листья находятся на одной и той же глубине H.
[17:03.000 --> 17:22.000]  Ну вот давайте подумаем. Как бы, какой высоте дерева это нас приводит? Ну вот давайте смотреть, да. То есть давайте подумаем, что если у нас, давайте так, если у нас высота дерева H, то есть расстояние от корня до листа H,
[17:22.000 --> 17:41.000]  то тогда мы можем заметить, что минимальное количество, значит, что тогда размер, размер в смысле количество ключей, да, вот обратите внимание у нас это впервые, теперь у нас количество вершин и количество ключей это разные вещи.
[17:41.000 --> 17:49.000]  То есть раньше вот мы как-то могли это путать, вот теперь будьте внимательны, здесь такое уже не сработает. Значит сколько у нас может быть ключей?
[17:49.000 --> 18:11.000]  Ну поехали, на нулевом уровне их не менее чем один и соответственно не менее чем два дерева, два ребеночка. Вот, ну в этих двух ребеночках не менее чем там скажем T, T-1 ключик, видим, да?
[18:11.000 --> 18:24.000]  Вот, и у них как минимум, и как следствие у каждого из этих детей получается как минимум T внуков, то есть видите количество детей от T до 2T получается.
[18:24.000 --> 18:39.000]  Вот, то есть получается тут 2 на T-1T, там дальше соответственно на T-1T в квадрате и так далее. То есть там до, там соответственно какой там степени?
[18:39.000 --> 19:00.000]  Ну давайте напишем 2T-1 на T, там степень H-1 получается. Вот, ну что это такое? Что это такое? Это 1 плюс 2T-1 на геометрическую прогрессию, 1 плюс T плюс бла-бла-бла, да?
[19:00.000 --> 19:10.000]  Ну если ее просуммировать, то вот есть такая гистическая формула T в степени H-1 поделить на T-1, так как вот T больше одного, поэтому мы так сделать можем.
[19:10.000 --> 19:33.000]  Ну тогда мы тут замгновенно получаем шлеп-шлеп, и получаем там 2T в степени H-1. Вот, ну откуда соответственно мы понимаем, что H меньше либо равно логарифам двоичной, там вот формально говоря N плюс 1 попало.
[19:33.000 --> 19:46.000]  Да, только логарифам не двоичной, а, что приятно, по основанию T.
[19:46.000 --> 20:04.000]  Почему нет? Смотри, двоечка домножается.
[20:04.000 --> 20:30.000]  Так я вот это вот вынес. Вот это? Так, вот это? Мы измеряем количество ключиков. То есть у нас, смотри, вот у нас допустим два ребенка, и в каждом из них как минимум T минус 1 ключиков.
[20:30.000 --> 20:46.000]  Почему? Потому что вот у нас вот эту. У корня может быть два ребенка, ну потому что тут ключик может быть один, нуля ключиков не бывает, то есть каждая вершина не пустая.
[20:46.000 --> 20:56.000]  Да, там хотя бы два ребенка. Да, их может быть 3-4, в общем, хоть 2T, но в худшем случае их 2.
[20:56.000 --> 21:06.000]  Итак, то есть мы понимаем, что высота дерева у нас логарифмична.
[21:06.000 --> 21:28.000]  Но, причем логарифм у нас по основанию T. Причем обратите внимание, то есть вообще с точки зрения какой-нибудь такой классической, такой олимпиадно-логаритмической, допустим, в общем-то, раз T константа, то в общем-то нам не было бы особо принципиально логарифм по основанию T или логарифм по основанию 2.
[21:28.000 --> 21:52.000]  Вот, понимаете, да? Вот. Но теперь если внимательно думать, что мы тут хотим действительно отопираться с этим деревом, то мы понимаем, что здесь вот эта вот высота, то есть это, возможно, количество, если мы хотя бы вообразим себе уже операцию search в этом дереве,
[21:52.000 --> 22:10.000]  то понятно, что мы возьмем в себе корень, поймем в какое дерево надо лезть и будем в него там лезть, условно вайликом. Но заметим, что в процессе тогда получится, что тогда у нас будет какая-то последовательность вершин, и каждую из них надо подгрузить.
[22:10.000 --> 22:33.000]  Помните, да? Вот. Значит, вот надо подумать, действительно, каждую из них надо прям очень-очень-очень аккуратно подгрузить. Вот. И поэтому сразу возникнет вопрос, можно ли так сделать insert и delete?
[22:33.000 --> 22:52.000]  Ну, давайте для начала все-таки попробуем search написать, то есть в такой технологии. Но, правда, теперь заметим, правда, для этого теперь давайте поймем примерно, что у нас вообще, что у нас из себя представляет вообще вершина.
[22:52.000 --> 23:18.000]  Ну, вот. Ну, сама в себе вершина. Ну, тут замечаем, что количество детей у нее может быть какое угодно, вот. Поэтому придется вводить, видимо, вектор. Да, в общем, мы так еще и в один индексация это определили, да, ну ладно.
[23:18.000 --> 23:35.000]  То есть, допустим, вектор, там, допустим, типа T, ключи. И что-то еще. Вот. И еще нам, конечно, придется завести вектор.
[23:35.000 --> 23:50.000]  А вот здесь важная фишка, смотрите. Потому что, казалось бы, хочется сказать, конечно, указатели, но давайте я все-таки вот так напишу.
[23:50.000 --> 24:17.000]  Что? Ну, почему на массиве, на векторе? Нет. Это не совсем число. Ну, можно сказать, число, но это некий ID, который, значит, полезет в базу данных и достанет соответствующую вершину.
[24:17.000 --> 24:39.000]  Или, ну вот, по которому можно, или, наоборот, сказать, что давай вот по этому ID-шнику положи ее на место. Потому что, смотрите, в качестве дополнительного веселья мы себе скажем, что мы, что так у нас дерево, например, большое, памяти, там, каждая вершина может там даже кушать много.
[24:39.000 --> 24:53.000]  Поэтому мы хотим хранить, ну, может быть, не совсем там по одной вершине в памяти, но O объединиться. Ну, то есть, нет, одну вершинку-то мы, наверное, загрузим и даже там две-три-пять, допустим, загрузим, но все N нет.
[24:53.000 --> 25:07.000]  И более того, вот этих всех загрузок-подгрузок нам бы хотелось, конечно, сделать как-то поменьше. Вот давайте посмотрим, как это будет выглядеть. Вот.
[25:08.000 --> 25:19.000]  Ну, я тут не буду прописывать эти все там, чтобы можно было там вести там шаблонное дерево с константами, там, с типом T и шаблонный констант, еще вот это и вот, да.
[25:19.000 --> 25:22.000]  Вот. Но мы этого не будем делать.
[25:24.000 --> 25:32.000]  Так. Ну, а теперь возникает вопрос. Как же у нас будет выглядеть search?
[25:34.000 --> 25:35.000]  Вот.
[25:37.000 --> 25:43.000]  Ну, допустим, соответственно, значит, вот, идти так, bool search.
[25:45.000 --> 25:48.000]  Ну, значит, что он у нас получает на вход?
[25:49.000 --> 25:57.000]  Ну, получает он на вход, конечно, какой-то ключик и наш корень.
[26:02.000 --> 26:05.000]  Ну, как бы у нас тут всегда что есть, то есть.
[26:07.000 --> 26:27.000]  Вот. Ну, пишем, что nodev равно, я так напишу, я вот тут введу такую операцию readFromDisk от рута.
[26:38.000 --> 26:43.000]  Значит, поехали. Что мы тут будем делать?
[26:47.000 --> 26:52.000]  Ну, и тут мы можем сделать так, ну, например, while пишем, while true.
[26:56.000 --> 26:58.000]  Ну, вот. Ну, допустим.
[27:01.000 --> 27:02.000]  Вот. Ну, вот.
[27:02.000 --> 27:03.000]  Ну, вот.
[27:04.000 --> 27:12.000]  Ну, первое, что нужно сделать, это, конечно, понять действительно, где этот ключик у нас вообще лежит в этом массиве кис.
[27:13.000 --> 27:16.000]  Ну, значит, поехали. В. Ну, вот так и напишем.
[27:19.000 --> 27:21.000]  Ну, как, соответственно, найти?
[27:22.000 --> 27:30.000]  Ну, нам желательно найти, понятно, минимальный ключик, который больше либо равен нашему, правда?
[27:32.000 --> 27:36.000]  Вот. Ну, у нас как бы все. У нас есть вот вершина v, какая-то последовательность.
[27:37.000 --> 27:43.000]  Нам нужно понять, собственно, где находится v, причем, может быть, она где-то здесь находится, малая. Мы же пока не знаем, да?
[27:44.000 --> 27:45.000]  Хотим.
[27:48.000 --> 27:55.000]  Ну, скажем так, можно, так как t константа, то можно не хотеть, потому что по большому счету это ничем особо не поможет.
[27:55.000 --> 28:07.000]  Ну, с одной стороны, да, но тут еще такая говорка есть, что, скорее всего, вот эта вот операция, скорее, как это ни странно, там перешибет все равно все эти загрузки.
[28:08.000 --> 28:12.000]  Тем более, что так или иначе, уж, наверное, вот эту операцию вы все равно уатте делаете, правда?
[28:13.000 --> 28:19.000]  Причем там такие жирные уатте, потому что там лезть куда-то надо. Мы же их, да, хотим.
[28:23.000 --> 28:24.000]  Ну, вот. Ну, не важно.
[28:25.000 --> 28:30.000]  Ну, нет, это-то да, но как бы захотите ужать, значит, и вершин захочется побольше.
[28:31.000 --> 28:34.000]  Вот. Ну, хорошо. Значит, как теперь? Ну, хотим бинпольском. Ну, да.
[28:35.000 --> 28:39.000]  Ну, как у нас делается бинпольск? Ну, делается бинпольск у нас, естественно, std-overbound.
[28:42.000 --> 28:45.000]  Вот. Если вы делаете бинпольск иначе, то зря вы это делаете.
[28:45.000 --> 29:01.000]  Значит, v.tees.begin plus 1 и там v.tees.end. Ну, и, соответственно, что там еще у нас?
[29:02.000 --> 29:10.000]  А, ну, конечно, сам ключик. Вот. Ну, и что мы тут понимаем?
[29:10.000 --> 29:11.000]  Ну, и что мы тут понимаем?
[29:15.000 --> 29:19.000]  А потому что мы тут прописали, что у нас ключи с единиц нумируются.
[29:23.000 --> 29:27.000]  Да, нулевой элемент пустой. Поэтому я так пишу. Можно так не писать? Пожалуйста.
[29:28.000 --> 29:33.000]  На ваше усмотрение. Ну, раз вы просто один раз ввели. Нет, можем переписать определение, конечно.
[29:34.000 --> 29:39.000]  Давайте. Ой, да, очень долго. Ну, хорошо, хорошо.
[29:40.000 --> 29:46.000]  Ну, хорошо, хорошо. Пожалуйста. Так. Действительно несложно. Так.
[29:47.000 --> 29:53.000]  Ага. Так, значит. Так.
[29:54.000 --> 29:57.000]  Так, так, так, так, так, так, так.
[29:58.000 --> 30:02.000]  Ну, да, да, да. Да, тут, соответственно, x0.
[30:03.000 --> 30:09.000]  В этом. Так, теперь тут надо написать, что x-1 и xit. Вот еще надо написать.
[30:11.000 --> 30:16.000]  А, нет, не так. Это остается тут минус один.
[30:17.000 --> 30:21.000]  Ну, да. Ладно, да. С нас сильно нюк было, да.
[30:22.000 --> 30:25.000]  Окей, хорошо, хорошо, хорошо. Ладно.
[30:26.000 --> 30:29.000]  Значит, что у нас теперь?
[30:30.000 --> 30:35.000]  Значит, если оказалось, ну, я тут надо сразу аккуратно прописать, что там.
[30:35.000 --> 30:40.000]  Чего? А, ну, хорошо, хорошо, хорошо.
[30:41.000 --> 30:45.000]  Ну, да. Ладно, теперь он без единички.
[30:46.000 --> 30:50.000]  А больше вас ничего не смущает, да?
[30:51.000 --> 30:54.000]  Вот. Да.
[30:55.000 --> 31:00.000]  Ну, есть разница.
[31:00.000 --> 31:03.000]  Ну, надо, что иногда чуть-чуть и сам поучиться, да.
[31:04.000 --> 31:08.000]  Так. Чуть-чуть. Так.
[31:09.000 --> 31:13.000]  Ну. Ну, надо, что иногда чуть-чуть и сам поучиться, да.
[31:14.000 --> 31:17.000]  Так. Чуть-чуть. Так.
[31:38.000 --> 31:48.000]  Ну, теперь надо просто проверить. Если соответствующий элемент оказался,
[31:55.000 --> 31:59.000]  что он тут есть, то можно прям сразу вернуть трушечку.
[31:59.000 --> 32:10.000]  Вот. Ну, а в противном случае тогда мы вынуждены обратиться к товарищам из ревизионной комиссии.
[32:11.000 --> 32:17.000]  Вот. Соответственно. Итак, ну, в какое дерево мне теперь надо обратиться?
[32:30.000 --> 32:37.000]  Ну, да. То есть я теперь утверждаю, что в В теперь мне придется кое-что загрузить.
[32:38.000 --> 32:45.000]  Ну, просто, ну, да, просто true-false такое, да.
[32:46.000 --> 32:49.000]  Вот. Ну, теперь все, что нам остается, да, это загрузить дерево.
[32:50.000 --> 32:53.000]  Ну, дерево какое у нас будет? Дерево у нас будет номер int на самом деле.
[32:54.000 --> 33:00.000]  То есть давайте так и напишем теперь. ReadFromDisc.
[33:04.000 --> 33:10.000]  Ну, можно даже так, а можно даже лучше правильно так сказать, смотрите.
[33:11.000 --> 33:12.000]  Вот так лучше.
[33:12.000 --> 33:23.000]  Но дайди там, допустим, child равно, значит, лезем там, соответственно, в children.
[33:24.000 --> 33:34.000]  Значит, v.children. Номер int. Ну, не int, конечно, а int там, минус v. вот этого точка begin.
[33:35.000 --> 33:36.000]  Ну, что делать?
[33:38.000 --> 33:40.000]  Так нет, это рано.
[33:42.000 --> 33:44.000]  Во. Вот, вот, вот, да.
[33:45.000 --> 33:46.000]  Вот.
[33:48.000 --> 33:51.000]  Ну, и все. Ну, вот. Ну, и, конечно, почему я тут это отдельно написал?
[33:52.000 --> 33:59.000]  Потому что, значит, если оказалось, что, скажем, этот ID не валитен,
[34:00.000 --> 34:02.000]  потому что оказалось, что это лист, допустим, да?
[34:03.000 --> 34:06.000]  Вот. Вот.
[34:06.000 --> 34:07.000]  Вот.
[34:08.000 --> 34:14.000]  То есть если там оказалось, что условно, допустим, он не валитен,
[34:15.000 --> 34:20.000]  да, можно было просто, наверное, даже написать для наших целей, что, типа, если оказалось, что это лист, то...
[34:21.000 --> 34:25.000]  Ну, вот. То, значит, мы просто сразу пишем, что у нас все плохо.
[34:26.000 --> 34:27.000]  Вот так вот.
[34:28.000 --> 34:36.000]  Ну, а в противном случае, конечно, мы просто говорим, что v просто загружаемся от child.
[34:41.000 --> 34:47.000]  Вот примерно так. От, соответственно, этого child.
[34:49.000 --> 34:54.000]  Вот. Ну, вот примерно вот таким вот образом у нас будет выглядеть...
[34:58.000 --> 35:02.000]  Ну, типа, ну, то есть если там реально под дерево или там пустота.
[35:03.000 --> 35:04.000]  Вот так.
[35:07.000 --> 35:11.000]  А, ой, да-да-да-да. Да, считываем из диска, конечно. Да-да-да-да.
[35:12.000 --> 35:15.000]  Ну, мало ли. Нет, теоретически возможно.
[35:16.000 --> 35:17.000]  Вот.
[35:18.000 --> 35:23.000]  Так. Ну, вот примерно, то есть это там, то есть код может выглядеть вот примерно таким образом.
[35:24.000 --> 35:25.000]  Вот.
[35:26.000 --> 35:30.000]  То есть вот такая вот тут примерно работа.
[35:31.000 --> 35:32.000]  Вот.
[35:33.000 --> 35:34.000]  И так.
[35:36.000 --> 35:44.000]  Ну, теперь давайте... Ну, соответственно, понятно, это работает за тот самый логарифм, даже по основанию t, что приятно.
[35:45.000 --> 35:49.000]  Да, конечно, умножить на t формально говорят, но вот.
[35:50.000 --> 35:56.000]  Вот. Но при этом самих по себе фактов считывания у нас ровно логарифм t.
[35:57.000 --> 35:58.000]  Да, да.
[35:59.000 --> 36:00.000]  Да.
[36:01.000 --> 36:03.000]  Вот, собственно, да, что очень приятно.
[36:04.000 --> 36:05.000]  Вот.
[36:06.000 --> 36:14.000]  Но заметим, что совсем уж в инсерте, наверное, совсем уж в инсерте у нас так, скорее всего, не получится.
[36:14.000 --> 36:15.000]  Не получится.
[36:16.000 --> 36:22.000]  Потому что заметим, что в инсерте нам придется делать не только условно read from disk, но и write from disk.
[36:23.000 --> 36:25.000]  Ну, в целом только одно, как записывание.
[36:26.000 --> 36:27.000]  Что?
[36:28.000 --> 36:29.000]  А нет.
[36:30.000 --> 36:38.000]  Ну, тут, смотрите, вот тут надо внимательно подумать, как нам себе красиво организовать жизнь.
[36:39.000 --> 36:40.000]  Вот, да.
[36:41.000 --> 36:42.000]  Вот.
[36:42.000 --> 36:43.000]  Вот.
[36:44.000 --> 36:45.000]  Как вот нам организовано, вот.
[36:46.000 --> 36:48.000]  Как нам вот очень аккуратно себе организовать жизнь.
[36:49.000 --> 36:50.000]  Ну, что значит такое?
[36:51.000 --> 36:56.000]  Ну, давайте просто, можно если пока без аккуратности, как, давайте себе представим, как мы вообще хотим делать вставку.
[36:57.000 --> 36:59.000]  Давайте split, а потом не нарушим.
[37:02.000 --> 37:06.000]  Еще это мы каждый раз делаем эти вставки, raise, а потом очень все делаем split.
[37:07.000 --> 37:10.000]  Ну, скажем так, до этого мы тоже дойдем, кстати.
[37:11.000 --> 37:12.000]  Да, куда же без этого?
[37:13.000 --> 37:14.000]  Куда же без сплитов и мержей?
[37:15.000 --> 37:16.000]  Да.
[37:17.000 --> 37:18.000]  Но пока попробуем обойтись без этого.
[37:19.000 --> 37:29.000]  Значит, ну, смотрите, напрашивающаяся технология, конечно, заключается в том, что надо просто действительно поискать элемент, дойти до листа и, собственно, в этот лист элементы вставить.
[37:30.000 --> 37:31.000]  Правда?
[37:32.000 --> 37:33.000]  Да, если он слишком большой, то...
[37:34.000 --> 37:35.000]  Да.
[37:35.000 --> 37:37.000]  Да, ну вот, да, вот вычислять маленькая проблема.
[37:38.000 --> 37:41.000]  Что делать, если там вот в листе окажется слишком много детей?
[37:42.000 --> 37:44.000]  Фон расследовал ключей.
[37:45.000 --> 37:46.000]  Ну и пустых детей тоже.
[37:47.000 --> 37:49.000]  Что вот тут делать в такой ситуации?
[37:50.000 --> 37:54.000]  Вот окажется, что у нас тут в листе целых 2t ключиков.
[37:54.000 --> 38:05.000]  Но, смотрите, если это корень, то проблема решается легким движением руки.
[38:06.000 --> 38:09.000]  Мы просто берем какой-нибудь элемент, который в середине.
[38:10.000 --> 38:12.000]  Да, он не обязательно тот, который мы реально только что вставили.
[38:13.000 --> 38:16.000]  Может, мы вставили сюда, а там отдуваться будет кто-то в центре.
[38:17.000 --> 38:18.000]  Вот.
[38:19.000 --> 38:20.000]  Ну вот, и мы...
[38:24.000 --> 38:25.000]  Вот.
[38:26.000 --> 38:27.000]  И что мы делаем?
[38:28.000 --> 38:29.000]  Мы тут поднимаем, тогда мы можем объявить этот элемент корнем.
[38:30.000 --> 38:34.000]  Вот, благо, а вот ровно ради этого мы тут, собственно, и говорили, что у нас в корне может быть и один элемент.
[38:35.000 --> 38:36.000]  Вот.
[38:37.000 --> 38:38.000]  Ну и, соответственно, вершинок у нас тоже оказывается две.
[38:39.000 --> 38:40.000]  Видите?
[38:41.000 --> 38:48.000]  Тем более, что если тут были какие-то дети, то и здесь, соответственно, тоже эти дети никуда не деваются.
[38:49.000 --> 38:53.000]  То есть они, конечно, относительно корня становятся глубже, но ничего страшного.
[38:54.000 --> 38:55.000]  Что в этом нет?
[39:00.000 --> 39:01.000]  Вот.
[39:04.000 --> 39:06.000]  Но это если вершина корень.
[39:07.000 --> 39:10.000]  А если вершина не корень, то что делать?
[39:11.000 --> 39:14.000]  Ну, в принципе, возникает та же идея.
[39:15.000 --> 39:23.000]  То есть вот даже если у нас тут что-то есть, и тут висит какое-нибудь веселое дерево, и у него тут оказалось целых 2т этих вот детей.
[39:24.000 --> 39:25.000]  Там ключей.
[39:26.000 --> 39:29.000]  Ну, не важно, есть лист это или нет.
[39:30.000 --> 39:32.000]  Что тогда можно сделать?
[39:33.000 --> 39:35.000]  Ну, сделать абсолютно то же самое.
[39:36.000 --> 39:41.000]  Берем элемент из середины и отправляем его вот сюда повыше.
[39:42.000 --> 39:43.000]  То есть получается вот пум-пум-пум.
[39:44.000 --> 39:46.000]  Тут такая штучка.
[39:47.000 --> 39:48.000]  И вот.
[39:49.000 --> 39:50.000]  Соответственно.
[39:50.000 --> 39:51.000]  Соответственно.
[39:52.000 --> 39:54.000]  То есть обратите внимание, тут что произошло.
[39:55.000 --> 39:57.000]  Правда, тут вот было 8 поддеревьев.
[39:58.000 --> 39:59.000]  Вот я их даже назову.
[40:00.000 --> 40:01.000]  Там бета 0, бета 1.
[40:03.000 --> 40:04.000]  Там бета 3.
[40:05.000 --> 40:06.000]  Там бета 4.
[40:07.000 --> 40:08.000]  Ну, смысл вы поняли.
[40:13.000 --> 40:17.000]  И тогда вот идея просто сказать такая, что если тут вот эти все там альфа, альфа, альфа, альфа.
[40:18.000 --> 40:19.000]  То есть вот висели, висели, висели.
[40:20.000 --> 40:23.000]  И вот теперь на этот уровень неожиданно переходит вот это дерево, которое тут было.
[40:24.000 --> 40:25.000]  В данном случае это b3.
[40:26.000 --> 40:28.000]  И тут соответственно b4.
[40:31.000 --> 40:35.000]  Ну, по сравнению с вот этим вот он еще жив.
[40:39.000 --> 40:40.000]  Хотя, конечно, да.
[40:40.000 --> 40:41.000]  Да.
[40:49.000 --> 40:50.000]  Вот.
[40:51.000 --> 40:52.000]  Значит, смотрите.
[40:53.000 --> 40:54.000]  Произошло следующее.
[40:55.000 --> 40:56.000]  Мы тут взяли вершину на 2t.
[40:57.000 --> 40:58.000]  И подняли ключик.
[41:00.000 --> 41:01.000]  Вот.
[41:02.000 --> 41:03.000]  Справа от него будет висеть дерево b3.
[41:04.000 --> 41:05.000]  Но ладно, тут я, конечно, наврал.
[41:06.000 --> 41:07.000]  Но b3 было снизу.
[41:08.000 --> 41:09.000]  Да, b3 было снизу.
[41:10.000 --> 41:11.000]  Но обратите внимание вот на что.
[41:12.000 --> 41:14.000]  У меня тут рядом с ним будет два ребенка.
[41:15.000 --> 41:17.000]  Вот тут будет, тут будет вот.
[41:18.000 --> 41:19.000]  Соответственно, тут было три ключика.
[41:20.000 --> 41:22.000]  И тут будет целых четыре.
[41:25.000 --> 41:26.000]  Так.
[41:27.000 --> 41:29.000]  Beta1, beta2 и beta3.
[41:30.000 --> 41:32.000]  Вот они куда делись.
[41:33.000 --> 41:34.000]  Во.
[41:36.000 --> 41:37.000]  То есть вот обратите внимание.
[41:38.000 --> 41:39.000]  То есть произошло фактически следующее.
[41:40.000 --> 41:42.000]  Вот у нас теперь вот фактически.
[41:43.000 --> 41:48.000]  Так вершина расплитилась на две вершины и ключик между ними.
[41:49.000 --> 41:50.000]  Обратите внимание.
[41:51.000 --> 41:53.000]  Так как тут стало 2t ключиков.
[41:54.000 --> 41:58.000]  То тогда слева и справа у нас оказывается не менее чем t-1.
[41:59.000 --> 42:01.000]  Ну там в одном t-1, в другом t, формально говоря.
[42:02.000 --> 42:03.000]  Вот.
[42:05.000 --> 42:07.000]  Ну и с этой стороны тоже примерно то же самое.
[42:08.000 --> 42:09.000]  Там я уже совсем рисовать не буду.
[42:11.000 --> 42:12.000]  Ну вот, но суть та же.
[42:15.000 --> 42:17.000]  То есть теперь стало все хорошо.
[42:20.000 --> 42:21.000]  На этом уровне.
[42:22.000 --> 42:28.000]  А вот на этом уровне, да, обратите внимание, в этой вершине количество ключей вполне могло тоже.
[42:30.000 --> 42:32.000]  Кто? Кто потерялся?
[42:33.000 --> 42:35.000]  Нет, обратите внимание.
[42:36.000 --> 42:39.000]  Нет, все листы всех этих вершин остались на месте.
[42:40.000 --> 42:45.000]  Максимум, что могло произойти, если эта вершина была листом, то количество листов увеличилось на 1.
[42:46.000 --> 42:50.000]  Но ограничений, технических ограничений на само по себе количество листов у нас с вами нету.
[42:51.000 --> 42:53.000]  Мы рассматриваем вершину, в которую мы добавили.
[42:54.000 --> 42:57.000]  Мы здесь просто оттратим, в которую вдруг стало 2t.
[42:58.000 --> 42:59.000]  Да, вдруг стало 2t.
[43:00.000 --> 43:03.000]  Нет, мы вообще мыслили.
[43:04.000 --> 43:07.000]  Нет, смотрите, мы исходно сюда пришли даже не из этого, а думали,
[43:07.000 --> 43:12.000]  а что делать, если у нас в какой-то вершине окажется там, скажем, 2t ключиков.
[43:16.000 --> 43:20.000]  Ну да, то есть алгоритм, как бы исходя из этих картинок, алгоритм теперь такой.
[43:21.000 --> 43:24.000]  То есть мы ищем элемент, где он должен быть, доходим до листа.
[43:26.000 --> 43:30.000]  Когда доходим до листа, вставляем его, только не как раньше тут создаем там новую вершину,
[43:31.000 --> 43:32.000]  а прям в списочек вставляем.
[43:33.000 --> 43:35.000]  Ну в листе это уже не проблема.
[43:35.000 --> 43:36.000]  Вот.
[43:37.000 --> 43:43.000]  А после этого теперь говорим, так, в листе, если в листе после этого стало все еще не более чем 2t-1 ключи,
[43:44.000 --> 43:45.000]  то в общем-то больше ничего делать и не надо.
[43:46.000 --> 43:54.000]  А если стало 2t, ну значит тогда вот по этой схеме мы поднимаем центральную вершинку вверх и распиливаем вершинку на 2.
[43:56.000 --> 44:00.000]  То есть на этом уровне теперь все хорошо, но на этом уровне теперь тоже могло стать 2t.
[44:00.000 --> 44:01.000]  Почему?
[44:06.000 --> 44:07.000]  Почему?
[44:12.000 --> 44:13.000]  Ну типа да.
[44:17.000 --> 44:18.000]  Да.
[44:19.000 --> 44:22.000]  Но вот этой вершины не 2, степень этой вершины увеличилась на 1.
[44:23.000 --> 44:27.000]  Потому что обратите внимание, потому что у нее в этом месте, в этом месте списка,
[44:27.000 --> 44:30.000]  у нее тут было какое-то поддерево.
[44:31.000 --> 44:36.000]  Да, вот тут, кстати, тут не обязательно, что тут 3, 4, тут в принципе давайте я тут для дисбаланса еще нарисую.
[44:38.000 --> 44:39.000]  Вот так вот.
[44:42.000 --> 44:43.000]  Так.
[44:47.000 --> 44:48.000]  Вот так вот.
[44:49.000 --> 44:50.000]  Вот так.
[44:51.000 --> 44:52.000]  Вот.
[44:53.000 --> 44:56.000]  Нет, то я просто для того, чтобы говорить, что здесь нам принципиально, что мы делим пополам,
[44:57.000 --> 44:58.000]  а тут вот как раз может быть все что угодно.
[44:59.000 --> 45:01.000]  Потому что даже не мы говорим, где мы тут живем.
[45:02.000 --> 45:03.000]  Та переча.
[45:04.000 --> 45:07.000]  Но теперь смотрите, тогда оказалось, что вместо вот этого дерева,
[45:08.000 --> 45:12.000]  смотрите вот, давайте попробую все-таки воспользоваться,
[45:16.000 --> 45:19.000]  образовалось вот это вот.
[45:20.000 --> 45:25.000]  То есть было просто одно поддерево, осталось два поддерева и одна вершинка.
[45:27.000 --> 45:31.000]  То есть нет, эта вершинка абсолютно равноправная со всеми, то есть она отправится в вектор кис,
[45:32.000 --> 45:35.000]  а вот эта штука отправится в детей.
[45:36.000 --> 45:37.000]  Понимаете, да?
[45:43.000 --> 45:47.000]  Нет, это пока мы просто обсуждаем это, как взять проблему,
[45:47.000 --> 45:52.000]  если у нас есть вершина из 2T, то как эту проблему перекинуть на уровень выше?
[45:53.000 --> 45:58.000]  Да, типа распилили, отправили ключик в список выше и так далее.
[45:59.000 --> 46:00.000]  Да, конечно.
[46:01.000 --> 46:05.000]  Нет, ну а мы легко находим, потому что мы все вообще знали, что у нас в этом.
[46:06.000 --> 46:07.000]  Да.
[46:08.000 --> 46:10.000]  Ну, хотя как знали?
[46:11.000 --> 46:14.000]  Тут вот начинает маленькая проблема, кажется, что знали,
[46:14.000 --> 46:17.000]  но это подразумевает, что мы как будто это все сделали рекурсивно.
[46:18.000 --> 46:20.000]  А мы не делали рекурсивно.
[46:21.000 --> 46:28.000]  Потому что, действительно, мы помним, что если вы запустили 7 раз у вас рекурсия глубины n,
[46:29.000 --> 46:30.000]  то она жрет от n памяти.
[46:31.000 --> 46:36.000]  А если в каждой функции рекурсии хранится еще какую-то вершину,
[46:37.000 --> 46:42.000]  то тогда в рекурсии глубины какой-нибудь, глубины 8, будет храниться реально 8 вершин.
[46:42.000 --> 46:43.000]  Это нас не устраивает.
[46:44.000 --> 46:48.000]  С другой стороны, что-то это родителя мы себе что-то не прописали.
[46:49.000 --> 46:52.000]  Ну, это, конечно, можно и прописать, в общем-то, айдишник родителей.
[46:53.000 --> 46:54.000]  Ничего страшного в этом не будет.
[46:55.000 --> 47:00.000]  Ну, кроме того, что эффективность работы с базой данных, наверное, несколько попортится.
[47:01.000 --> 47:02.000]  Вот.
[47:03.000 --> 47:05.000]  Ну, значит, давайте думать.
[47:06.000 --> 47:07.000]  Ну, вот.
[47:07.000 --> 47:08.000]  Ну, вот.
[47:09.000 --> 47:11.000]  Ну, действительно, но основная проблема даже не в том, что, смотрите,
[47:12.000 --> 47:15.000]  что получается, сколько мы проходов делаем по дереву в таком раскладе?
[47:16.000 --> 47:19.000]  На самом деле мало, но пока что кажется, что много.
[47:20.000 --> 47:21.000]  Но все относительно.
[47:22.000 --> 47:23.000]  Так мы, конечно, делаем от единицы.
[47:24.000 --> 47:26.000]  Но у нас получилось, что их два.
[47:27.000 --> 47:30.000]  Потому что мы один проход делаем сверху вниз,
[47:31.000 --> 47:33.000]  а потом теперь снизу вверх вот делаем вот это вот проталкивание,
[47:34.000 --> 47:35.000]  ведь в худшем случае мы можем и до корня дойти.
[47:35.000 --> 47:38.000]  Но мы уже мало раз доедем до корня.
[47:39.000 --> 47:40.000]  Мне кажется.
[47:41.000 --> 47:43.000]  Ну, пооценивайте это.
[47:44.000 --> 47:45.000]  Ну-ка.
[47:46.000 --> 47:50.000]  Потому что, смотрите, у нас когда самая нижняя вершина переполнилась,
[47:51.000 --> 47:54.000]  только в этот момент следующая, в следующих на один увеличилась количество сценарий.
[47:55.000 --> 47:58.000]  Нет, ну, в среднем количестве, конечно, да, действительно.
[47:59.000 --> 48:00.000]  Для того, чтобы там, да.
[48:01.000 --> 48:02.000]  То есть это, да, то есть, конечно, там самое худшее,
[48:02.000 --> 48:04.000]  лучше можно, скажем, мочить в одну и ту же точку,
[48:05.000 --> 48:08.000]  и то будет, и то там доходить будет не всегда.
[48:09.000 --> 48:10.000]  Но правда, для этого надо родителей ввести.
[48:11.000 --> 48:13.000]  Но на самом деле можно все равно еще круче.
[48:14.000 --> 48:15.000]  Вот.
[48:17.000 --> 48:23.000]  Потому что я утверждаю, что на самом деле мы можем попытаться обойтись одним проходом.
[48:26.000 --> 48:27.000]  Без рекурсии.
[48:28.000 --> 48:29.000]  И без родителей.
[48:30.000 --> 48:31.000]  И без родителей.
[48:32.000 --> 48:36.000]  Вообще так, может быть, нам, конечно, придется, наверное, две-три вершинки у себя внутри хранить,
[48:37.000 --> 48:38.000]  но проход будет один.
[48:40.000 --> 48:41.000]  Логика очень простая.
[48:42.000 --> 48:47.000]  Ведь, заметим, вот мы тут делаем вот этот подъем с вершиной, в которой 2t ключей, да.
[48:48.000 --> 48:52.000]  Но заметим, что у нас инвариант позволяет делать подобную махинацию,
[48:53.000 --> 48:54.000]  и когда их 2t-1.
[48:55.000 --> 48:57.000]  То есть, в принципе, с корректной вершиной можно так сделать, правда?
[48:58.000 --> 48:59.000]  Поэтому, в принципе,
[48:59.000 --> 49:04.000]  то есть, на самом деле наша цель будет такая.
[49:05.000 --> 49:08.000]  Мы будем пытаться идти сверху вниз и уже делать проталкивания.
[49:09.000 --> 49:12.000]  Уже вот, соответственно, делать эти все проталкивания.
[49:13.000 --> 49:15.000]  Но просто соблюдаем вариант, что вот мы живем в вершине,
[49:16.000 --> 49:21.000]  и в этой вершине меньше, чем 2t-1 ключей.
[49:21.000 --> 49:25.000]  Меньше, чем 2t-1 ключей.
[49:31.000 --> 49:33.000]  Ну, не проталкивал, но вот эти вот подъемчики.
[49:34.000 --> 49:36.000]  Ну, понятно, что совсем без них не обойтись.
[49:37.000 --> 49:43.000]  Да, да, да, да, вот.
[49:44.000 --> 49:47.000]  Чего? Нормально?
[49:47.000 --> 49:49.000]  Нижняя граница.
[49:50.000 --> 49:53.000]  Нижняя граница чего? Ну, да.
[49:54.000 --> 49:56.000]  Но обратите внимание, просто маленькая приятная вещь,
[49:57.000 --> 50:01.000]  что 2t-1 это 2 умножить на t-1 плюс 1.
[50:02.000 --> 50:05.000]  Глубокая мысль, да?
[50:06.000 --> 50:10.000]  То есть, обратите, я тут не случайно, видите, вот это что-то автоматически.
[50:11.000 --> 50:13.000]  Еще то есть рисуем, что обратите внимание, да, что...
[50:14.000 --> 50:17.000]  То есть, когда я в центральную вершинку одну вытаскиваю,
[50:18.000 --> 50:20.000]  у меня остается по t-1 вершин.
[50:21.000 --> 50:23.000]  Поэтому все корректно.
[50:24.000 --> 50:27.000]  То есть, видите, тут циферки вот специально ради этого подолганы.
[50:28.000 --> 50:31.000]  Чтобы я так умел.
[50:33.000 --> 50:35.000]  Ну, вот.
[50:36.000 --> 50:37.000]  Ну, то есть, в результате получится так.
[50:38.000 --> 50:42.000]  Ну, тут, конечно, будет неприятность, что надо работать отдельно с корнем.
[50:43.000 --> 50:45.000]  И отдельно с некорнем.
[50:46.000 --> 50:49.000]  Вот. Ну, то есть, в корня, конечно, тут все просто.
[50:50.000 --> 50:52.000]  Вот. Ну, давайте, ладно, так.
[50:53.000 --> 50:57.000]  Можно еще раз объяснить, что мы будем делать, когда мы поднимемся до полня, у нас там 2t.
[50:58.000 --> 51:00.000]  А мы не поднимаемся.
[51:01.000 --> 51:03.000]  Мы сразу, мы подразумеваем, что мы идем вниз.
[51:04.000 --> 51:06.000]  Нет, то есть, мы подразумеваем, что мы должны добиться того,
[51:07.000 --> 51:11.000]  что у каждой вершины, которую мы видим, должно быть ключей не более чем 2t-2.
[51:12.000 --> 51:14.000]  То есть, это наша цель.
[51:15.000 --> 51:17.000]  Потому что работать это в итоге будет так.
[51:18.000 --> 51:19.000]  Ну, как добиться этого в корне?
[51:20.000 --> 51:21.000]  Ну, в корне это добиться тривиально.
[51:22.000 --> 51:25.000]  Если случайно оказалось, что в корне, значит, там 2t-1 вершина.
[51:30.000 --> 51:35.000]  Если вот так оказалось, что в корне 2t-1 то, что мы видим.
[51:36.000 --> 51:37.000]  Ну, вот.
[51:38.000 --> 51:40.000]  То тогда мы легко просто создаем новый корень.
[51:41.000 --> 51:47.000]  Вот, например, в красночерном дереве у нас оказывается, что там корень можно было перекрасить в черный, если что.
[51:48.000 --> 51:53.000]  А тут можно поднять вершинку и распилить это все на 2.
[51:54.000 --> 51:56.000]  И сделать тут 2 ребеночка.
[51:57.000 --> 52:03.000]  То есть, обратите внимание, ровно в этом месте происходит такое эпохальное событие, как изменение глубины дерева.
[52:03.000 --> 52:05.000]  Ну, так...
[52:06.000 --> 52:08.000]  Вкусовщины.
[52:09.000 --> 52:13.000]  Не, ну вкусовщины немножко, мне кажется.
[52:14.000 --> 52:15.000]  Не важно.
[52:16.000 --> 52:17.000]  То есть, это...
[52:18.000 --> 52:22.000]  Как-то нетрилекты в таких случаях говорят, это детали реальные.
[52:23.000 --> 52:25.000]  Это детали реальные.
[52:26.000 --> 52:28.000]  Это детали реальные.
[52:28.000 --> 52:34.000]  Как-то нетрилекты в таких случаях говорят, это детали реализации.
[52:35.000 --> 52:38.000]  Это детали реализации.
[52:39.000 --> 52:41.000]  Это детали реализации.
[52:42.000 --> 52:44.000]  Ну ладно, вообще да, согласен, что этот код еще пишем.
[52:45.000 --> 52:46.000]  Ладно, раз уж пишем.
[52:47.000 --> 52:52.000]  Ну нет, в принципе да, можно все что угодно, но давайте тут на каждом шаге полностью код уже не переписывать.
[52:53.000 --> 52:54.000]  Вот.
[52:55.000 --> 52:56.000]  Так, значит, что у нас тут сейчас будет?
[52:56.000 --> 52:57.000]  Вот.
[52:58.000 --> 52:59.000]  Значит, хорошо, с корнем разобрались.
[53:00.000 --> 53:08.000]  То есть, теперь мы легко сделали так, что вот теперь мы находимся там, вынесли вершину и переселили в какую-то вершину, где у нас ключей меньше, чем 2t-1.
[53:09.000 --> 53:12.000]  Ну и общая технология у нас теперь будет какая?
[53:13.000 --> 53:14.000]  Пум-пум-пум.
[53:15.000 --> 53:16.000]  То есть, у нас тут ключиков теперь немного.
[53:17.000 --> 53:20.000]  Там их меньше, чем 2t, допустим, минус 1.
[53:21.000 --> 53:23.000]  И все, что нам теперь ост...
[53:24.000 --> 53:25.000]  Ну вот.
[53:26.000 --> 53:27.000]  Ну работаем очень просто теперь.
[53:28.000 --> 53:30.000]  Что значит... Думаем, куда вставлять?
[53:31.000 --> 53:32.000]  Ну вот, куда вставлять?
[53:33.000 --> 53:39.000]  Ну во-первых, сразу начнем, что если это оказалось листом, то сюда же и вставлять, и больше ничего делать не надо.
[53:40.000 --> 53:41.000]  Вот, что мы все это делали.
[53:42.000 --> 53:46.000]  Если тут оказались дети, ну что ж, давайте поймем, куда-то надо вставить.
[53:47.000 --> 53:51.000]  Вот давайте для разнообразия попробуем вставить на край.
[53:52.000 --> 53:55.000]  Ну можно и не на край, там это не принципиально, как вы сейчас увидите.
[53:56.000 --> 53:57.000]  Значит, что мы тут делаем?
[53:58.000 --> 53:59.000]  Мы загружаем вот эту вершинку.
[54:00.000 --> 54:01.000]  Что у нас тут происходит?
[54:02.000 --> 54:05.000]  Если там ключей оказалось меньше, чем 2t, то больше нам ничего не надо.
[54:06.000 --> 54:07.000]  Понимаете, да?
[54:08.000 --> 54:09.000]  Вот.
[54:10.000 --> 54:11.000]  То есть там больше нам ничего не надо.
[54:12.000 --> 54:13.000]  И мы туда идем.
[54:14.000 --> 54:15.000]  Если оказалось, что тут их 2t-1.
[54:16.000 --> 54:18.000]  Вот прям много оказалось, да?
[54:19.000 --> 54:20.000]  Пум-пум-пум-пум.
[54:21.000 --> 54:24.000]  И то тогда нам остается только распилить эту вершинку на 2.
[54:24.000 --> 54:25.000]  Вынести ключик.
[54:26.000 --> 54:28.000]  И, собственно, теперь перейти куда-то сюда.
[54:29.000 --> 54:31.000]  Ну там, либо сюда, либо сюда, в зависимости.
[54:34.000 --> 54:40.000]  То есть таким образом мы добьемся того, что нам будет интересно только одна конкретная вершинка.
[54:41.000 --> 54:42.000]  Вот и все.
[54:51.000 --> 54:52.000]  Может, может, может.
[54:52.000 --> 54:55.000]  В итоге, в этой вершине может оказаться 2t-1.
[54:56.000 --> 54:58.000]  Но нас это уже не волнует.
[54:59.000 --> 55:02.000]  Потому что на более низком уровне это будет меньше, чем 2t-1.
[55:03.000 --> 55:04.000]  Да, так-то, конечно.
[55:06.000 --> 55:07.000]  Да.
[55:08.000 --> 55:14.000]  То есть мы не требуем, чтобы прям весь путь, но мы хотим, чтобы пока мы идем, нам нужен запас, чтобы снизу можно было в случае чего вершинку поднять.
[55:15.000 --> 55:19.000]  То есть фактически мы заранее делаем это проталкивание такое.
[55:20.000 --> 55:28.000]  Ну и тогда это позволяет нам, по крайней мере, read-from-дисков сделать ровно на один проход, ровно вот один логариф.
[55:29.000 --> 55:35.000]  Ну, конечно, да, есть, конечно, оговорочка, что нам вот эти вершинки, конечно, может быть, придется перезаписывать, конечно.
[55:36.000 --> 55:37.000]  Вот.
[55:38.000 --> 55:43.000]  Там прям по идее, прям, возможно, по тому же самому ID-шку и записывать, потому что мы же родителей не храним.
[55:44.000 --> 55:47.000]  То есть как бы, то есть там есть же еще там кто-то там.
[55:47.000 --> 55:52.000]  Кто-то там, у которого эта вершина является ребенком.
[55:53.000 --> 56:00.000]  То есть, соответственно, надо еще аккуратно перезаписать, чтобы он потом не узнал, что оказывается, что твой ребенок ушел в другое место.
[56:01.000 --> 56:02.000]  Я не знаю.
[56:03.000 --> 56:04.000]  Это нехорошо.
[56:05.000 --> 56:06.000]  Вот.
[56:07.000 --> 56:09.000]  Так, ну что, попробуем написать или нет смысла?
[56:10.000 --> 56:11.000]  По-моему нет.
[56:14.000 --> 56:15.000]  Мне как-то написать вот это.
[56:16.000 --> 56:17.000]  Ну, вот это вот в виде код.
[56:18.000 --> 56:19.000]  Ну да.
[56:20.000 --> 56:21.000]  С одним проходом.
[56:22.000 --> 56:23.000]  Ну да. Нет, с одним проходом. Вот мы обсудили, как.
[56:24.000 --> 56:25.000]  Имеет смысл?
[56:26.000 --> 56:27.000]  Или суть уже понятна?
[56:28.000 --> 56:29.000]  Если другим маркером, то и нет.
[56:30.000 --> 56:31.000]  Другого да.
[56:32.000 --> 56:34.000]  Правда, за другим маркером сходить, правда, придется, я боюсь.
[56:35.000 --> 56:36.000]  Перерыв.
[56:37.000 --> 56:38.000]  Перерыв?
[56:40.000 --> 56:41.000]  Ну ладно.
[56:42.000 --> 56:44.000]  Так, нет, ну перерыв сейчас пока рановато.
[56:45.000 --> 56:46.000]  Ладно, давайте дальше.
[56:47.000 --> 56:50.000]  Ладно, давайте тогда думать, что можно сделать с удалением.
[56:52.000 --> 56:55.000]  Ну, сразу скажу, как говорится, одного прохода не обещаю.
[56:58.000 --> 57:03.000]  Ну, в смысле одного прохода в смысле одного алгоритма скачивания тут я не обещаю.
[57:03.000 --> 57:11.000]  Потому что если мы тут делаем сверху вниз в удалении, то тогда что бы нам хотелось?
[57:14.000 --> 57:21.000]  Ну, в идеале, конечно, хотелось бы, да, как всегда, дойти до листа, в котором не менее чем t элементов, и нужно удалить, правда?
[57:22.000 --> 57:23.000]  Очень хотелось бы.
[57:24.000 --> 57:26.000]  Но что же нам не дает это сделать?
[57:28.000 --> 57:29.000]  Что?
[57:30.000 --> 57:35.000]  Но мало того, что лист может быть маленьким, на самом деле есть еще более страшная проблема.
[57:44.000 --> 57:48.000]  Да, там хуже всего, что удаляемая вершина вообще не обязана быть в листе.
[57:50.000 --> 57:51.000]  И вот это больно.
[57:52.000 --> 57:53.000]  Вот.
[57:54.000 --> 58:03.000]  Поэтому у нас будет такая более хитрая цель, такая амбициозная, попытаться эту вершину все-таки в лист протолкнуть.
[58:05.000 --> 58:06.000]  Вот.
[58:07.000 --> 58:08.000]  Как же мы это будем делать?
[58:11.000 --> 58:12.000]  Вот давайте думать.
[58:14.000 --> 58:17.000]  Как же мы эту вершину, как же мы можем это протолкнуть?
[58:17.000 --> 58:20.000]  Ну, на самом деле у нас сейчас у нас будет две фазы.
[58:22.000 --> 58:27.000]  Такие две фазы, в которые мы тоже будем идти сверху вниз, но у нас будет две фазы.
[58:28.000 --> 58:33.000]  Сначала до того момента, как мы эту вершину обнаружим, ключик, точнее ключик, который надо удалить.
[58:34.000 --> 58:36.000]  И потом уже, когда мы этот ключик будем реально проталкивать.
[58:37.000 --> 58:45.000]  Ну, первая фаза это практически что бы мы делали, если бы, вот давайте предположим пока для простоты, что то, что мы удаляем находится в листе.
[58:48.000 --> 58:58.000]  Тогда все, что нам нужно, это найти этот лист и желательно, ну, если вот верить технологии инсорта, тогда нам нужно все протолкнуть.
[58:59.000 --> 59:04.000]  Это просто сделать так, что бы в этом листе на момент удаления вершины оказалось, ну, хотя бы этой вершины, правда.
[59:05.000 --> 59:06.000]  Ну, что бы можно было безболезненно удалить.
[59:09.000 --> 59:11.000]  Так. Ну, давайте думать.
[59:12.000 --> 59:14.000]  Итак, что же мы можем сделать?
[59:15.000 --> 59:23.000]  Значит, пытаемся идти, как всегда, сверху вниз, и у нас качественный вариант, мы говорим, что у нас прямо сейчас вершина больше либо равно, чем t вершин.
[59:24.000 --> 59:30.000]  Тогда у нас психологически есть уверенность, что мы из этого поддерева можем удалить ключик и ничего не поменять.
[59:31.000 --> 59:37.000]  Ведь обратите внимание, кстати, да, то есть почему-то это как-то да, то есть заметим, что если бы у нас тут могло быть t-1 детей,
[59:37.000 --> 59:42.000]  то вообще могло так оказаться, что мы не можем удалить вершину и вообще ничего не попортить.
[59:43.000 --> 59:51.000]  Потому что если в этой вершине t-1 ключиков и у всех ее потомков по t-1 ключику, то удалить из этого дерева ключик без выпиливания,
[59:52.000 --> 59:55.000]  без полного перепиливания дерева вообще не получится.
[59:56.000 --> 01:00:01.000]  В чем не в смысле, что это там, мы недостаточно много подумали на эту тему, а в принципе невозможно,
[01:00:02.000 --> 01:00:06.000]  потому что из оставшихся ключиков вы на этом месте дерева нужной глубины тупо не построите, правда.
[01:00:07.000 --> 01:00:12.000]  Вот, но тем не менее, если их больше либо равно t, то шанс есть.
[01:00:13.000 --> 01:00:16.000]  Как же мы это будем делать?
[01:00:17.000 --> 01:00:23.000]  Ну, давайте посмотрим. Вот, предположим, выяснилось, что наш ключик должен оказаться где-то здесь.
[01:00:24.000 --> 01:00:32.000]  Вот у нас деревце. Нет, это не лист этот как раз. Нет, если бы был лист, мы бы тупо нужную вершину удалили бы и все.
[01:00:32.000 --> 01:00:44.000]  Вот, например, мы сейчас пока для простоты живем в предположении, что наш удаляемый ключик находится в каком-то листе.
[01:00:45.000 --> 01:00:52.000]  Да, мы занимаемся тем, что в него идем, и пытаемся поддерживать вариант, что в каждой вершине, в которой мы идем,
[01:00:53.000 --> 01:00:58.000]  по крайней мере в тот момент, в который мы идем, в ней хотя бы t ключиков есть.
[01:00:59.000 --> 01:01:08.000]  Вот такая идея. Значит, смотрим. Так, это пока еще не лист. Значит, смотрим, в какого ребенка надо пойти.
[01:01:09.000 --> 01:01:13.000]  Если оказалось, что там уже ключиков много, то больше ничего делать не надо.
[01:01:14.000 --> 01:01:20.000]  Ну, а самый интересный случай, конечно, если их оказалось t-1.
[01:01:21.000 --> 01:01:34.000]  Ну, давайте смотреть. Да, на самом деле, да. То есть, тут смотрите, какая операция.
[01:01:35.000 --> 01:01:42.000]  Первое, конечно, что приходит в голову, это если посуды в соседа. Заметим, что мы имеем право морально смотреть только в одного соседа, кстати.
[01:01:42.000 --> 01:01:56.000]  Нет, не в этом смысле. Дело в том, что вот это вот дерево, я его нарисовал в середине, но оно могло оказаться слева и справа.
[01:01:57.000 --> 01:02:04.000]  Поэтому желательно обойтись одним соседом. Он у нас безограничие общества правы.
[01:02:04.000 --> 01:02:17.000]  Ну, давайте смотрите. Если тут оказалось t-1 детей, то тогда я могу просто вот с этой вершинкой провернуть операцию обратную вот этой вот.
[01:02:18.000 --> 01:02:26.000]  То есть, я ее могу обозначить так. То есть, я могу просто этот ключик торжественно отправить вот сюда и эти вершины объединить.
[01:02:27.000 --> 01:02:34.000]  Тогда я гарантирую, что у меня тут тогда будет очень много вершин, я тут с ними могу развлекаться как угодно.
[01:02:35.000 --> 01:02:39.000]  Но это, конечно, если у нас вот такая мечта и тут t-1.
[01:02:40.000 --> 01:02:51.000]  А что же делать, если оказалось, что у нас тут пом-пом-пом-пом-пом-пом, значит, что мы тут вот куда-то пошли.
[01:02:52.000 --> 01:02:59.000]  Оказалось, что тут у нас t-1 вершина, а у соседа их оказалось больше.
[01:03:09.000 --> 01:03:11.000]  Какие варианты?
[01:03:21.000 --> 01:03:23.000]  Отнять его детей?
[01:03:24.000 --> 01:03:26.000]  Нет, но не совсем.
[01:03:26.000 --> 01:03:28.000]  Его детей мы положим наверх, а сверху наверх.
[01:03:29.000 --> 01:03:33.000]  Ну да, на самом деле, да. Более корректно, конечно, не отнять там что-то у кого-то там.
[01:03:34.000 --> 01:03:38.000]  Это будет более похоже сейчас на какой-нибудь малый левый поворот в ВВЛ.
[01:03:42.000 --> 01:03:44.000]  Вот допустим, пусть вот этот элемент оказался х.
[01:03:46.000 --> 01:03:49.000]  Эти оказались у0.
[01:03:52.000 --> 01:03:55.000]  Игрок 0, игрок 1, игрок 2.
[01:03:57.000 --> 01:04:00.000]  Ну и в конце тут у нас игрок t-2.
[01:04:02.000 --> 01:04:06.000]  И здесь оказался какой-нибудь там z0, z1, z2 и так далее.
[01:04:07.000 --> 01:04:09.000]  Так, и у них еще дети какие-то есть.
[01:04:10.000 --> 01:04:14.000]  Ну там, как всегда, не дети, а целые деревья.
[01:04:15.000 --> 01:04:20.000]  Знаете ли вы, как все знают, у нас дети растут на деревьях.
[01:04:23.000 --> 01:04:27.000]  Ну ладно, у нас, правда, дети не растут, у нас они просто висят.
[01:04:36.000 --> 01:04:42.000]  Ну и тут в конце там b, что-нибудь там k от этого соседа.
[01:04:43.000 --> 01:04:48.000]  Вот, значит, какую комбинацию предлагается делать?
[01:04:50.000 --> 01:04:54.000]  Как это предлагается перестроить?
[01:04:58.000 --> 01:05:00.000]  Перестройкой нас не напугать.
[01:05:02.000 --> 01:05:07.000]  Хотя ладно, больше, конечно, перестройка у нас будет возникать, когда у нас будет корневуха.
[01:05:08.000 --> 01:05:10.000]  Так, смотрите.
[01:05:12.000 --> 01:05:14.000]  А, а те дадут, так.
[01:05:17.000 --> 01:05:22.000]  Ну нет, ну можно попробовать там, скажем так, на первом этаже.
[01:05:24.000 --> 01:05:30.000]  На первом этаже, вот там есть вход, вот рядом с ним есть пара дверей.
[01:05:31.000 --> 01:05:35.000]  Вот, собственно, в правую из них надо обратиться.
[01:05:35.000 --> 01:05:37.000]  Вот, так, ну что, а мы тут пока.
[01:05:37.000 --> 01:05:41.000]  Так, ну вот, чего?
[01:05:49.000 --> 01:05:51.000]  Ну да, да, да, да, да, как это да.
[01:05:53.000 --> 01:06:01.000]  Ну вот, значит, смотрите, внимание, количество вершин мы тут содержим.
[01:06:01.000 --> 01:06:09.400]  Ну вот, значит, смотрите, внимание, количество вершин мы тут, смотрите, количество вершин мы сейчас менять не будем.
[01:06:09.400 --> 01:06:14.400]  То есть это нужно было делать, только если тут было по t-1 и мы пихали сверху.
[01:06:14.400 --> 01:06:29.400]  Но смотрите, теперь вместо х, да, так, вместо х мы сюда повесим вершинку z0 внезапно, ну не вершинку, а ключик.
[01:06:29.400 --> 01:06:44.400]  А теперь смотрите, значит, да, у нас, понятно, у него будут те же самые соседи, но обратите внимание теперь, куда же делся х?
[01:06:44.400 --> 01:06:58.400]  Ну, с х тут все в порядке, то есть вершинки у нас будут у0, у1, значит, у, наш любимый t-2, и вот здесь, собственно, этот х мы и поставим.
[01:06:58.400 --> 01:07:05.400]  То есть мы просто теперь добавим этот х вот сюда, и у нас теперь здесь будет t ключиков.
[01:07:05.400 --> 01:07:14.400]  Что касается под деревьев, да, ну понятно, все альфы тут на месте, в частности вот альфа t-1 на месте.
[01:07:14.400 --> 01:07:18.400]  Ну понятно, тут эти все альфа 0, это не альфа 1, понятно.
[01:07:18.400 --> 01:07:24.400]  Но справа от х тоже должно что-то висеть, и это будет бета 0.
[01:07:25.400 --> 01:07:34.400]  Вот, вон то, вот это вот, видите, было оно тут самым, было оно тут крайним, оно и тут крайним будет, вот.
[01:07:34.400 --> 01:07:42.400]  Так что да, как говорится, называется, позаимствовали ребенка у брата, называется.
[01:07:42.400 --> 01:07:53.400]  Вот, ну, как говорится, как говорится, после проверок случаев является ли дядя его дети черными, знаете.
[01:07:53.400 --> 01:08:05.400]  Так, тут-то сюда, как говорится, ну, в концерт, да, да, у нас был всплой дерева, у нас вон дедушка, у нас тут это, внуки дедушками становились.
[01:08:05.400 --> 01:08:09.400]  Там, как вы помните, так что тут ничего страшного.
[01:08:09.400 --> 01:08:11.400]  Ну вот, ну, а чем приятно.
[01:08:11.400 --> 01:08:17.400]  Но, как говорится, ладно, это называется, ладно, у брата, это называется, детей много.
[01:08:17.400 --> 01:08:21.400]  Вот, то есть одного, пока не миром, можно и позаимствовать.
[01:08:21.400 --> 01:08:31.400]  Ну и соответственно, тут все вот эти деревья, бета 1, бета 2, там бета 3 и так далее, и бета какой-нибудь КАТВ.
[01:08:31.400 --> 01:08:36.400]  Так что вот такая вот, то есть вот такая вот радость нас ждет.
[01:08:36.400 --> 01:08:50.400]  То есть как минимум, видите, идти сверху вниз и добиваться того, чтобы в каждой вершине, в которой вы сейчас находитесь, было по Т или более ключиков, в общем-то нас устраивает.
[01:08:50.400 --> 01:09:05.400]  Вот, то есть поэтому, если удалять вершину надо откуда-то из листа, то, в общем-то, обратить внимание, больше нам ничего делать не надо, правда?
[01:09:05.400 --> 01:09:12.400]  Согласны?
[01:09:12.400 --> 01:09:17.400]  Чего?
[01:09:17.400 --> 01:09:26.400]  Да, ну виртуально понятно, да?
[01:09:26.400 --> 01:09:30.400]  Ну типа, да.
[01:09:30.400 --> 01:09:35.400]  Так, нет, ну да, в принципе, хорошо.
[01:09:35.400 --> 01:09:43.400]  Ну вот теперь возникает такой маленький вопрос.
[01:09:43.400 --> 01:09:49.400]  А что делать, если мы тут взяли и наткнулись, что какой-то ключик, который мы удаляем, оказался не в листе?
[01:09:49.400 --> 01:09:53.400]  О, спасибо.
[01:09:53.400 --> 01:10:04.400]  Так, так, так, давайте, что из этого надо дорисовать?
[01:10:04.400 --> 01:10:05.400]  Так, сейчас.
[01:10:05.400 --> 01:10:17.400]  Так, ничего не видно, да?
[01:10:17.400 --> 01:10:19.400]  Да, да, да, ну да.
[01:10:19.400 --> 01:10:22.400]  Не, ну так иногда кажется, да.
[01:10:22.400 --> 01:10:26.400]  Как это, знаете?
[01:10:26.400 --> 01:10:28.400]  Вот.
[01:10:28.400 --> 01:10:32.400]  Вау, какая красота, вау.
[01:10:32.400 --> 01:10:35.400]  Вот.
[01:10:35.400 --> 01:10:46.400]  Так, так, вау.
[01:10:46.400 --> 01:11:00.400]  Так, вот, вот так вот, вот так вот.
[01:11:00.400 --> 01:11:02.400]  Сейчас.
[01:11:02.400 --> 01:11:07.400]  Один сосед всегда есть.
[01:11:07.400 --> 01:11:13.400]  Ну потому что у любой вершины, если дети есть, то их хотя бы два.
[01:11:13.400 --> 01:11:25.400]  Нет, если у нас нет соседа справа, то есть сосед слева.
[01:11:25.400 --> 01:11:33.400]  Уцеждение, если у вершины нет брата справа, то у нее есть брат слева.
[01:11:33.400 --> 01:11:35.400]  Вот.
[01:11:35.400 --> 01:11:42.400]  Ну как, в общем, брат, он у нас это, он либо справа, либо слева.
[01:11:42.400 --> 01:11:49.400]  А что вот тут?
[01:11:49.400 --> 01:11:52.400]  Не, просто.
[01:11:52.400 --> 01:11:54.400]  Так, ну хорошо.
[01:11:54.400 --> 01:11:58.400]  Ладно, вот давайте мы воспользуемся, ой, летающим маркером.
[01:11:58.400 --> 01:12:00.400]  Так.
[01:12:00.400 --> 01:12:03.400]  И сейчас я нарисую то же самое, но с другой стороны.
[01:12:03.400 --> 01:12:06.400]  Значит, смотрите.
[01:12:06.400 --> 01:12:09.400]  Это все очень просто при атаке соперника.
[01:12:09.400 --> 01:12:12.400]  Так.
[01:12:12.400 --> 01:12:14.400]  Вот.
[01:12:14.400 --> 01:12:16.400]  Итак, мы отдаем им все пространство.
[01:12:16.400 --> 01:12:18.400]  Вот так, так, так и вот так.
[01:12:18.400 --> 01:12:20.400]  Вот, давайте вот.
[01:12:20.400 --> 01:12:27.400]  Вот предположим, вот мы, вот тут, пытаемся удалять вот отсюда.
[01:12:27.400 --> 01:12:29.400]  И тут T-1, да.
[01:12:29.400 --> 01:12:33.400]  И, получается, и вот тут у соседа оказалось больше либо равно T.
[01:12:33.400 --> 01:12:36.400]  Но если оказалось T-1, то понятно.
[01:12:36.400 --> 01:12:39.400]  Ну вот, тогда у нас тут, оказывается, х.
[01:12:39.400 --> 01:12:42.400]  Тут у нас, оказывается, альфы.
[01:12:42.400 --> 01:12:47.400]  Альфа 0, альфа 1, альфа 2, альфа 3, там и так далее.
[01:12:47.400 --> 01:12:49.400]  Тут, соответственно, альфа T.
[01:12:49.400 --> 01:12:52.400]  Сколько там? Минус 1, на самом деле.
[01:12:52.400 --> 01:12:53.400]  Ой.
[01:12:53.400 --> 01:12:56.400]  А, ну да, альфа T-1, да.
[01:12:56.400 --> 01:12:57.400]  А то я думал.
[01:12:57.400 --> 01:12:58.400]  Так.
[01:12:58.400 --> 01:12:59.400]  Ну вот.
[01:12:59.400 --> 01:13:00.400]  Ну, а что у нас тут?
[01:13:00.400 --> 01:13:07.400]  Получается тоже там какие-то бета 0, там бета 1, там бета 2 и бум-бум-бум.
[01:13:07.400 --> 01:13:12.400]  И тут бета, там K от V штрих Т какой-то.
[01:13:12.400 --> 01:13:13.400]  Вот.
[01:13:13.400 --> 01:13:15.400]  Ну и вот этот ключик.
[01:13:15.400 --> 01:13:19.400]  Мы назовем этот, понятно, что ключики мы называем тут Z 0, Z 1 и так далее.
[01:13:19.400 --> 01:13:22.400]  Z, соответственно, K от V штрих.
[01:13:22.400 --> 01:13:23.400]  Спасибо.
[01:13:23.400 --> 01:13:27.400]  Да, да, да, да, да.
[01:13:27.400 --> 01:13:28.400]  Вот, безусловно.
[01:13:28.400 --> 01:13:29.400]  Вот.
[01:13:29.400 --> 01:13:32.400]  И Х.
[01:13:32.400 --> 01:13:39.400]  Ну вот теперь, и теперь делаем маленький поворотчик.
[01:13:39.400 --> 01:13:41.400]  Вот.
[01:13:41.400 --> 01:13:42.400]  Как всегда.
[01:13:42.400 --> 01:13:46.400]  Что же мы делаем?
[01:13:46.400 --> 01:13:49.400]  Ну это уже.
[01:13:49.400 --> 01:13:50.400]  Так, стоп.
[01:13:50.400 --> 01:13:51.400]  Значит, соответственно.
[01:13:51.400 --> 01:13:52.400]  Значит, так.
[01:13:52.400 --> 01:13:59.400]  Этот бывший Z K V штрих Т минус 1 так жестко висит теперь здесь.
[01:13:59.400 --> 01:14:01.400]  Значит, в этой вершине у нас теперь.
[01:14:01.400 --> 01:14:03.400]  А что сейчас происходит?
[01:14:03.400 --> 01:14:04.400]  Да.
[01:14:04.400 --> 01:14:05.400]  Для последней.
[01:14:05.400 --> 01:14:06.400]  Да.
[01:14:06.400 --> 01:14:07.400]  Тут просто заказывали, что происходит слева.
[01:14:07.400 --> 01:14:10.400]  Вот я теперь использую черный маркер.
[01:14:10.400 --> 01:14:11.400]  Спасибо Тихону.
[01:14:11.400 --> 01:14:14.400]  И, соответственно, дорисовываем.
[01:14:14.400 --> 01:14:15.400]  Вот он.
[01:14:15.400 --> 01:14:16.400]  Х.
[01:14:16.400 --> 01:14:17.400]  Вот.
[01:14:17.400 --> 01:14:18.400]  Значит, и.
[01:14:18.400 --> 01:14:21.400]  Значит, альфа 0, альфа 1, альфа 2.
[01:14:21.400 --> 01:14:24.400]  И что тут еще, да?
[01:14:24.400 --> 01:14:26.400]  Там альфа Т минус 1.
[01:14:26.400 --> 01:14:29.400]  И вот здесь теперь будет висеть вот это вот поддерево.
[01:14:29.400 --> 01:14:33.400]  Бета K V штрих.
[01:14:33.400 --> 01:14:34.400]  Ну а вот.
[01:14:34.400 --> 01:14:38.400]  Ну а с этой стороны просто висит все то же самое, только
[01:14:38.400 --> 01:14:41.400]  на один меньше.
[01:14:42.400 --> 01:14:47.400]  Ну, да.
[01:14:47.400 --> 01:14:49.400]  K V штрих минус 2.
[01:14:49.400 --> 01:14:50.400]  Ну тут понятно.
[01:14:50.400 --> 01:14:51.400]  Z 0.
[01:14:51.400 --> 01:14:52.400]  Тут понятно эти все.
[01:14:52.400 --> 01:14:53.400]  Бета 0 висит.
[01:14:53.400 --> 01:14:54.400]  Бета 1.
[01:14:54.400 --> 01:14:55.400]  Бета 2.
[01:14:55.400 --> 01:14:57.400]  Ну и прочее бла-бла-бла на эту тему.
[01:14:57.400 --> 01:14:58.400]  Вот.
[01:14:58.400 --> 01:14:59.400]  Ну вот.
[01:14:59.400 --> 01:15:03.400]  Вот такая вот у нас получилась радость.
[01:15:03.400 --> 01:15:07.400]  То есть вот такая, в общем-то, приятная красота, если
[01:15:07.400 --> 01:15:13.400]  выяснилось, что вершина, которую мы хотим удалять,
[01:15:13.400 --> 01:15:18.400]  находится почему-то в листе.
[01:15:18.400 --> 01:15:19.400]  Ключ.
[01:15:19.400 --> 01:15:20.400]  Да.
[01:15:20.400 --> 01:15:21.400]  Да-да-да-да-да.
[01:15:21.400 --> 01:15:22.400]  Правильно.
[01:15:22.400 --> 01:15:23.400]  Правильно.
[01:15:23.400 --> 01:15:24.400]  Правильно.
[01:15:24.400 --> 01:15:25.400]  Так.
[01:15:25.400 --> 01:15:26.400]  Абсолютно правильно.
[01:15:26.400 --> 01:15:27.400]  Сам сказал.
[01:15:27.400 --> 01:15:28.400]  Вот.
[01:15:28.400 --> 01:15:30.400]  А теперь давайте думать.
[01:15:30.400 --> 01:15:36.400]  Что делать, если ключ удаляемый оказался рад такой не
[01:15:36.400 --> 01:15:37.400]  в листе?
[01:15:37.400 --> 01:15:40.400]  Ну вот вы думали как проталкивать, осталось просто как-то
[01:15:40.400 --> 01:15:41.400]  красивое.
[01:15:41.400 --> 01:15:42.400]  А не скажите.
[01:15:42.400 --> 01:15:45.400]  Не скажите.
[01:15:45.400 --> 01:15:47.400]  Потому что обратите внимание, дело в том, что мы вот эту
[01:15:47.400 --> 01:15:49.400]  вершинку проталкиваем не всегда.
[01:15:49.400 --> 01:15:53.400]  Ведь обратите внимание, если бы, потому что мы ее проталкиваем
[01:15:53.400 --> 01:15:56.400]  только в той ситуации, когда у нас тут, вот там, скажем,
[01:15:56.400 --> 01:15:59.400]  тут реально оказалось t минус 1.
[01:15:59.400 --> 01:16:03.400]  А кто нам запретил это сделать в другом случае?
[01:16:03.400 --> 01:16:06.400]  И не в самом крайнем?
[01:16:06.400 --> 01:16:08.400]  Есть вариант.
[01:16:08.400 --> 01:16:09.400]  Смотрю.
[01:16:09.400 --> 01:16:13.400]  Если у нас вершинка х, которую мы будем удалить,
[01:16:13.400 --> 01:16:17.400]  и два ближайших к ней дерева, оба t минус 1, то все очень
[01:16:17.400 --> 01:16:18.400]  просто.
[01:16:18.400 --> 01:16:19.400]  Так.
[01:16:19.400 --> 01:16:22.400]  Если оба t минус 1 протолкнули, так.
[01:16:22.400 --> 01:16:26.400]  А если какой-то больше, чем t минус 1, то можно сделать
[01:16:26.400 --> 01:16:27.400]  поворот.
[01:16:27.400 --> 01:16:29.400]  Х улыбится вниз.
[01:16:29.400 --> 01:16:30.400]  Да.
[01:16:32.400 --> 01:16:34.400]  Есть один маленький нюанс.
[01:16:39.400 --> 01:16:42.400]  Ну тогда можно переповернуть и увеличить.
[01:16:42.400 --> 01:16:44.400]  И, короче, сделать.
[01:16:44.400 --> 01:16:45.400]  Кого?
[01:16:45.400 --> 01:16:46.400]  Можно взять поворот.
[01:16:46.400 --> 01:16:47.400]  Так.
[01:16:47.400 --> 01:16:48.400]  И сплик.
[01:16:48.400 --> 01:16:50.400]  А, кстати, можно сделать.
[01:16:50.400 --> 01:16:57.400]  Циклический поворот делать.
[01:16:57.400 --> 01:17:03.400]  Она будет менять просто вот так.
[01:17:03.400 --> 01:17:06.400]  Отсюда, сюда, сюда, сюда, сюда.
[01:17:06.400 --> 01:17:08.400]  Чего, чего, чего?
[01:17:08.400 --> 01:17:09.400]  Циклический поворот.
[01:17:09.400 --> 01:17:13.400]  Напоминаю, у нас это дерево поиска, они там в задном порядке
[01:17:13.400 --> 01:17:14.400]  лежат.
[01:17:14.400 --> 01:17:17.400]  Поэтому так это...
[01:17:17.400 --> 01:17:18.400]  Так.
[01:17:18.400 --> 01:17:21.400]  Сейчас сюда.
[01:17:21.400 --> 01:17:22.400]  Да.
[01:17:22.400 --> 01:17:23.400]  Вот действительно.
[01:17:23.400 --> 01:17:24.400]  2t минус.
[01:17:24.400 --> 01:17:25.400]  Да.
[01:17:25.400 --> 01:17:30.400]  2t минус 1, это, конечно, да.
[01:17:30.400 --> 01:17:31.400]  Да.
[01:17:31.400 --> 01:17:33.400]  Можно, конечно, до икса пытаться, да.
[01:17:33.400 --> 01:17:36.400]  Действительно, делать более аккуратные подгодочки,
[01:17:36.400 --> 01:17:40.400]  чтобы тут и t минус 1 не было, и 2t минус 1 не было, да.
[01:17:40.400 --> 01:17:43.400]  Сейчас у кого, какой представитель?
[01:17:43.400 --> 01:17:48.400]  У этого икса, чтобы представить, буди-бы какого-то мотивчика.
[01:17:48.400 --> 01:17:50.400]  Он может так сказать.
[01:17:50.400 --> 01:17:51.400]  Не понял.
[01:17:51.400 --> 01:17:56.400]  Может как сказать, кто это лежит в этом мотивчике, да.
[01:17:56.400 --> 01:18:06.400]  Он лежит, но как бы он с ним связан.
[01:18:06.400 --> 01:18:07.400]  Сейчас.
[01:18:07.400 --> 01:18:09.400]  Он лежит, но он не с ним связан.
[01:18:09.400 --> 01:18:15.400]  Сейчас, он лежит, в этом массиве он буквально лежит. Ну и что?
[01:18:20.400 --> 01:18:22.400]  Ну и что?
[01:18:32.400 --> 01:18:35.400]  Не по очереди, так, не по очереди.
[01:18:39.400 --> 01:18:45.400]  А х им, а х скинем вниз, и вот так вот сделаем вообще везде, на всех под деревьях.
[01:18:49.400 --> 01:18:53.400]  Не, а зачем? Нет, в эту сторону можно даже гораздо проще сделать.
[01:18:54.400 --> 01:18:57.400]  Помните, мы этот чит на самом деле уже применяли в свое время.
[01:18:58.400 --> 01:19:05.400]  Помните, когда у нас оказалось, что мы хотим удалить вершинку в обычном дереве поиска, у нее возьми и делай, оказалось два ребенка.
[01:19:06.400 --> 01:19:08.400]  Помните, что мы в этом случае делаем?
[01:19:10.400 --> 01:19:21.400]  Да, мы шли вправо ребенка, находили в этом под дереве самый левый элемент, их свопали, а потом вот эту самую левую, вот ее уже и удаляли, помните?
[01:19:23.400 --> 01:19:25.400]  А что нам мешает?
[01:19:26.400 --> 01:19:38.400]  То есть единственная аккуратность, идея может быть такая теперь, что мы найдем, эту вершину мы себе сохраним.
[01:19:41.400 --> 01:19:45.400]  То есть мы сейчас пойдем вправо и будем пытаться удалять у нее самый минимальный элемент.
[01:19:46.400 --> 01:19:48.400]  То есть нас будут спрашивать, так, какое вам под дерево надо?
[01:19:49.400 --> 01:19:51.400]  Он говорит, так, давай, самые левые, самые левые, самые левые.
[01:19:52.400 --> 01:20:09.400]  И соответственно, ну вот, и тогда придем мы в эту вершину, ее удалим, то есть вот эту самую левую, условно, пум, пум, вот на уровне идеи вот, то есть ее мы удалим, но мы запомним этот ключик и просто его сюда запишем, все.
[01:20:10.400 --> 01:20:19.400]  То есть обратите внимание, пока мы тут не храним этих ваших там всяких статистик, всяких там типа суммы на подотрески и так далее, в общем-то их проблем нет.
[01:20:20.400 --> 01:20:33.400]  Ну, в общем, когда, в общем, заметим, что это вся технология мечты о минимальной загрузке, они все равно начинают вылетать в трубу, если, если вы там пытаетесь начинать хранить какие-то отложенные операции, правда?
[01:20:36.400 --> 01:20:44.400]  Ну, собственно, об этом мы тоже поговорим сейчас, конечно, но вот, вот, значит, смотрите, то есть в принципе тогда нам просто ничего не мешает.
[01:20:44.400 --> 01:21:01.400]  Ну, единственная, конечно, оговорка, то есть на самом деле не совсем сказать, что мы эту вершину сохраним и просто будем удалять отсюда, потому что, напоминаю, если тут оказалось t-1 ключиков, то может возникнуть такая ситуация, что просто так автономно из этого дерева мы ничего не удалим, правда?
[01:21:01.400 --> 01:21:24.400]  Поэтому, на самом деле, тут надо аккуратно, поэтому, на самом деле, просто начиная с х, мы, то есть пытаемся делать, там, удалять элемент, да, справа от него, но при этом следим, что, как бы, где находится х, потому что если произошло так, что х повернулся куда-нибудь вот сюда, ну, у нас там могло быть вот в данном случае, явно произойдет поворот, который перенесет х поглубже.
[01:21:31.400 --> 01:21:37.400]  Самый правый, самый нижний, но его еще и вернуть бы хорошо, и все, так же рекурсивно продолжаем удалять.
[01:21:37.400 --> 01:21:40.400]  Ну, не рекурсивно, ну, во-первых, мы...
[01:21:40.400 --> 01:21:42.400]  В таком же цикле примерно продолжаем.
[01:21:42.400 --> 01:21:56.400]  Нет, смотри, разница в том, что до какого-то момента мы этот х будем реально пропихивать вниз, но до какого-то, потому что в какой-то момент выяснится, потому что, напоминаю, у нас есть один случай, когда этот х оказывается не в ребенке.
[01:21:56.400 --> 01:22:10.400]  Случай называется, если в теку, вот там, мы, тут, жил был х, допустим, мы отправились в нужного ребенка, и бабах, и там количество детей оказалось адекватным, то есть больше либо равно т.
[01:22:10.400 --> 01:22:17.400]  Тогда в этом месте х остается на месте, обратите внимание, вот, поэтому так.
[01:22:17.400 --> 01:22:25.400]  Поэтому в этом, как только это произойдет, вот тогда этот х остается на месте, надо запомнить, где он, чтобы потом записать вот это вот удаляемое.
[01:22:25.400 --> 01:22:30.400]  То есть потом мы свапаем новый х с самым левым элементом?
[01:22:30.400 --> 01:22:37.400]  Да, да, ты можешь сказать, даже не свапаем. Мы его там, мы это самое левое достаем оттуда, удаляем, потому что мы у нас о его цели удалить, да?
[01:22:37.400 --> 01:22:41.400]  Ну, потому что мы вот, наконец, шли, шли, шли, шли, шли, шли, и вот, наконец, дошли.
[01:22:41.400 --> 01:22:48.400]  И вот у нас нашелся вот этот самый левый элемент, мы знаем, что их тут больше либо равно t, мы, собственно, ради этого все это делали, да?
[01:22:48.400 --> 01:22:58.400]  Тогда эта идея такая, мы сохраняем, что этот элемент равен х-трих, удаляем его отсюда, и записываем сюда.
[01:22:58.400 --> 01:23:04.400]  Просто тупо вставляемся, говорим, что тут х-трих, все.
[01:23:04.400 --> 01:23:15.400]  Ну, в общем-то, да. Точнее так, то есть как это у нас уже раньше было, то есть как бы избавились мы от х самого по себе как ключика в одном месте,
[01:23:15.400 --> 01:23:21.400]  а от физической позиции мы избавились в другом месте.
[01:23:21.400 --> 01:23:30.400]  Вот. Собственно, в общем-то, для нас технология не новая, но получилось так, смотрите, то есть проход у нас получился один.
[01:23:30.400 --> 01:23:36.400]  Но правда, конечно, скачивание вершин у нас оказалось уже чуть-чуть, все-таки в два раза больше.
[01:23:36.400 --> 01:23:43.400]  Почему? Потому что для каждой вершины мы теперь скачиваем уже не одного ребеночка, а все-таки двух, потому что нам нужно делать поворот.
[01:23:43.400 --> 01:23:57.400]  То есть опять, как у нас уже неоднократно бывало, как у нас бывало неоднократно, что удаление оказалось несколько сложнее вставки.
[01:23:57.400 --> 01:24:02.400]  Ну, потому что, да, вставка это, да, вставить куда-нибудь, а удалить надо из того места, где оно находится.
[01:24:02.400 --> 01:24:10.400]  Вот. Ну, то есть вот такая вот, оказывается, такая приятная структура данных.
[01:24:10.400 --> 01:24:12.400]  Да.
[01:24:12.400 --> 01:24:18.400]  Ну, мегаинтересного ничего делать не умеем.
[01:24:18.400 --> 01:24:33.400]  Ну, да, более того, да, если мы в принципе захотим с ней делать, вот, как там, скажем, какие-нибудь суммы на каких-нибудь подотресках, там, в явных, в явных-неявных, то, нет, то в принципе тоже можно,
[01:24:33.400 --> 01:24:44.400]  потому что на самом деле пока у вас нет отложенных операций типа прибавления на отрезки и присваивания на отрезки, да, на самом деле как бы тоже все можно делать за проходы сверху вниз.
[01:24:45.400 --> 01:24:57.400]  Вот. Хотя, а, хотя, да, точнее так, операции можно делать, пока вы не хотите что-то менять.
[01:24:57.400 --> 01:25:02.400]  Как только вы хотите что-то менять, то есть вам придется там во всех предках потом все пересчитывать обратно.
[01:25:02.400 --> 01:25:09.400]  Да, проблема. Потому что, да, проталкивать операции сверху вниз мечтает, а, собственно, ради этого они и создавались, да.
[01:25:09.400 --> 01:25:17.400]  Но здесь-то проблема. Вот. Ну, что делать? Что делать? Как быть, значит, возможно тут нужно тогда не усложнять.
[01:25:17.400 --> 01:25:23.400]  Вот. Но, правда, тем не менее, да, вот возникает, возникает, конечно, такой вопрос хорошо.
[01:25:23.400 --> 01:25:32.400]  Прибавляйте, допустим, если, конечно, мы сейчас просто отойдем от баз данных и будем относиться к этой структуре данных как, а бы, как просто к обычной какой-нибудь такой структуре,
[01:25:32.400 --> 01:25:39.400]  которая лежит у нас в оперативке, и мы можем там, называю, это делать, если ничего хотим, без лишних там скачиваний и там записей.
[01:25:39.400 --> 01:25:45.400]  Вот. То тогда, вот возникает вопрос. Тогда хорошо, что мы с ней можем делать?
[01:25:45.400 --> 01:25:53.400]  Ну, всякие присваивания на подотрезке. Ну, вот. Ну, там какие-нибудь отложенными операциями мы делать можем, конечно, всякие суммы идти искать.
[01:25:53.400 --> 01:25:59.400]  А вот можем ли мы, ну, там, да, ну, вот, а вот можем ли мы делать всякие реверсы?
[01:26:00.400 --> 01:26:09.400]  Да, для этого нужно делать сплит и мерч. Возникает вопрос, нужен ли нам для этого перерыв, кстати, время которого подошло.
[01:26:09.400 --> 01:26:24.400]  Ну, давайте. Вот, ладно, значит, поехали. Итак, значит, как мы поняли уже еще до перерыва, у нас возникла веселая мечта научиться делать у Б дерева сплит и мерч.
[01:26:25.400 --> 01:26:36.400]  Вот. Причем желательно, потому что если мы научимся делать сплит и мерч, то выяснится, что нам больше, что у нас будет достижение.
[01:26:36.400 --> 01:26:41.400]  То есть тогда у нас получится дерево, которое умеет абсолютно то же самое, что и дикартовое дерево.
[01:26:41.400 --> 01:26:45.400]  Только обратите внимание, логарифм у него будет честным.
[01:26:46.400 --> 01:26:53.400]  А не вероятностным, как в дикартовом дереве, и не, собственно, амортизационным, как в сплит дереве.
[01:26:54.400 --> 01:26:56.400]  Вот такая вот у нас мечта.
[01:26:57.400 --> 01:26:58.400]  Что?
[01:26:58.400 --> 01:27:00.400]  У Б дерева звучит хорошо.
[01:27:00.400 --> 01:27:02.400]  Ну, вот.
[01:27:02.400 --> 01:27:04.400]  Дерево даже ничего не гарантирует.
[01:27:05.400 --> 01:27:07.400]  Сколько будет заодить?
[01:27:12.400 --> 01:27:13.400]  А.
[01:27:13.400 --> 01:27:15.400]  Ты сказал, сейчас научишься делать сплит, у Б дерева.
[01:27:17.400 --> 01:27:18.400]  А, понял.
[01:27:19.400 --> 01:27:20.400]  Красиво.
[01:27:21.400 --> 01:27:22.400]  У Б дерева.
[01:27:29.400 --> 01:27:30.400]  Ну почему, как бы.
[01:27:31.400 --> 01:27:35.400]  Хорошо, там, если готов был, то давай, если он погнал, мы всё им сразу.
[01:27:44.400 --> 01:27:47.400]  Начнём мы, как-то не странно, с мержа.
[01:27:52.400 --> 01:27:57.400]  Но, смотрите, сейчас нас ждёт такая неожиданно интересная фишка.
[01:27:58.400 --> 01:28:04.400]  Значит, мержить, сейчас мы немножко отойдём от концепции мержа, просто даны два дерева и надо их объединить.
[01:28:05.400 --> 01:28:07.400]  Значит, мы пойдём другим путём.
[01:28:10.400 --> 01:28:14.400]  Да, мы всё ещё говорим про Б дерева, да, совершенно вероятно.
[01:28:16.400 --> 01:28:26.400]  Значит, смотрите, раньше мы говорили, что у нас даны два дерева, в одном там, тут все элементы меньше либо равны вот этих, да, и нам их надо как-то слить.
[01:28:27.400 --> 01:28:29.400]  Так вот, теперь у нас будет более крутая технология.
[01:28:30.400 --> 01:28:34.400]  Значит, у нас будет два дерева и ключик между ними.
[01:28:35.400 --> 01:28:38.400]  Тут все меньше икса, и тут больше икса.
[01:28:39.400 --> 01:28:42.400]  И я хочу эти деревья объединить.
[01:28:45.400 --> 01:28:47.400]  И ключик тоже будет...
[01:28:48.400 --> 01:28:50.400]  Ключик будет внутри них, но лишним не получится.
[01:28:51.400 --> 01:28:55.400]  Да, то есть я хочу объединить как бы не два дерева, а два дерева и вершины.
[01:28:57.400 --> 01:29:13.400]  Ну, замечаем, как бы, идейно вы можете увидеть, что не особо принципиально, потому что теперь можно в принципе вот так два дерева объединить, да, потому что я просто создам фиктивную вершину по значению типа между ними, особенно если там строго меньше, вообще не проблема, а потом эту лишнюю вершину тупо удалим.
[01:29:14.400 --> 01:29:16.400]  Мы только что научились делать, правда?
[01:29:17.400 --> 01:29:21.400]  То есть поэтому, в общем-то, пока как бы идейно мы себя не сильно ограничили.
[01:29:22.400 --> 01:29:23.400]  Я бы сказал, даже никак.
[01:29:24.400 --> 01:29:27.400]  Но именно такая технология нам очень так поможет.
[01:29:28.400 --> 01:29:33.400]  То есть у нас есть дерево, потом все элементы меньше икс, все потом больше икс, а у нас есть икс отдельно.
[01:29:34.400 --> 01:29:35.400]  И, собственно, сам икс, да.
[01:29:36.400 --> 01:29:37.400]  Смотрите.
[01:29:38.400 --> 01:29:40.400]  Что тут приятно?
[01:29:41.400 --> 01:29:45.400]  Приятно в этом дереве, конечно, то, что... Смотрите.
[01:29:45.400 --> 01:29:46.400]  Смотрите.
[01:29:47.400 --> 01:29:58.400]  Ну вот, что на самом деле эти деревья очень легко объединить, если совершенно случайно оказалось, что они одинаковые высоты.
[01:30:02.400 --> 01:30:03.400]  Видите, да?
[01:30:05.400 --> 01:30:06.400]  Как их объединить?
[01:30:09.400 --> 01:30:12.400]  Нет, это одна и та же буква, просто тут ножка маленькая.
[01:30:13.400 --> 01:30:14.400]  Да.
[01:30:15.400 --> 01:30:17.400]  Да, очень-очень-очень, да.
[01:30:18.400 --> 01:30:19.400]  Так.
[01:30:20.400 --> 01:30:21.400]  Ну идея тогда очень простая, смотрите.
[01:30:22.400 --> 01:30:23.400]  Вот у нас тут икс был, да?
[01:30:24.400 --> 01:30:25.400]  Значит, рассмотрим корни.
[01:30:26.400 --> 01:30:28.400]  В общем, берем эти корни.
[01:30:29.400 --> 01:30:32.400]  Вот у них тут висели... Давайте лучше сотру это, да?
[01:30:33.400 --> 01:30:34.400]  Вот.
[01:30:35.400 --> 01:30:37.400]  Так, вот это мы... Вот так вот.
[01:30:38.400 --> 01:30:39.400]  Вот так вот.
[01:30:39.400 --> 01:30:40.400]  Вот такой вот.
[01:30:49.400 --> 01:30:50.400]  Вот, значит, смотрите.
[01:30:53.400 --> 01:30:54.400]  Вот.
[01:30:55.400 --> 01:30:56.400]  Вот-вот-вот-вот-вот.
[01:30:57.400 --> 01:30:58.400]  И вот.
[01:30:59.400 --> 01:31:00.400]  Такая красота, видите, да?
[01:31:01.400 --> 01:31:02.400]  Вот.
[01:31:03.400 --> 01:31:14.400]  Но тогда, смотрите, в принципе, нам практически ничего не мешает мысленность объединить эти два корня, одну вершину, в один большой корень.
[01:31:15.400 --> 01:31:16.400]  Вот обойтись, Мария.
[01:31:17.400 --> 01:31:24.400]  Чтобы объединить два корня, да, у нас единственная была проблема, что тут с краю есть дерево, тут с краю есть дерево, между ними должно что-то стоять, и вот оно, что-то.
[01:31:25.400 --> 01:31:27.400]  Вот мы собственно ради этого этот иксик и ввели.
[01:31:28.400 --> 01:31:29.400]  Видите, да?
[01:31:29.400 --> 01:31:30.400]  Вот, да.
[01:31:31.400 --> 01:31:32.400]  Конечно, маленькая проблема.
[01:31:33.400 --> 01:31:34.400]  Может стать больше, чем 2k.
[01:31:35.400 --> 01:31:36.400]  Ну, там, чем 2t.
[01:31:37.400 --> 01:31:38.400]  Минус один.
[01:31:39.400 --> 01:31:40.400]  Но это не проблема.
[01:31:41.400 --> 01:31:45.400]  Потому что после объединения корней нам ничто не мешает взять середину.
[01:31:46.400 --> 01:31:48.400]  Да, середина, кстати, не обязана оказаться иксом, как вы понимаете, да?
[01:31:49.400 --> 01:31:54.400]  Более того, как бы, может так оказаться, что тут в корне было один элемент, а тут 2t минус один, понимаете, да?
[01:31:55.400 --> 01:31:57.400]  Поэтому что-то надо вынести, но икс не подойдет.
[01:31:57.400 --> 01:32:05.400]  Но какую-нибудь серединку, списочка мы, конечно, просто вынесем в корень, у нас получится тогда дерево высоты h плюс 1.
[01:32:06.400 --> 01:32:07.400]  Вот, понимаете, да?
[01:32:09.400 --> 01:32:15.400]  Тогда получается, что если у нас два дерева высоты h, то мы легко можем сделать мерч.
[01:32:16.400 --> 01:32:23.400]  Причем, что очень для нас важно не просто за o от логарифма, а на самом деле за o от единицы.
[01:32:24.400 --> 01:32:25.400]  Ну, в смысле, за o от t.
[01:32:26.400 --> 01:32:27.400]  Которая для нас константа.
[01:32:30.400 --> 01:32:31.400]  Вот.
[01:32:32.400 --> 01:32:33.400]  Так, уже неплохо, правда?
[01:32:34.400 --> 01:32:40.400]  Декартовые деревья, например, у нас декартовые деревья, в которые мы объединяем, по-моему, за o от единицы, это только если одно из них пустое.
[01:32:41.400 --> 01:32:45.400]  Отнесение вершины, это типа мы вершину вытащили, а ее дерево как бы подняли соседом.
[01:32:46.400 --> 01:32:47.400]  Наоборот, распилили.
[01:32:48.400 --> 01:32:52.400]  Ну, просто помните, как мы решали, у нас, как бы, какая тут проблема, если тут вершин слишком много?
[01:32:53.400 --> 01:32:54.400]  Как мы эту проблему решаем?
[01:32:55.400 --> 01:32:58.400]  Распиливаем вершину надвое, вершинку выносим вверх и объявляем ее новым корнем.
[01:33:00.400 --> 01:33:02.400]  А еще, зачем нам x нужно взять?
[01:33:03.400 --> 01:33:04.400]  В чем он помогает?
[01:33:05.400 --> 01:33:06.400]  Он помогает тем, что вы, как бы, смотрите, когда вы...
[01:33:07.400 --> 01:33:09.400]  Вот представьте себе, что у вас просто два корня, да?
[01:33:10.400 --> 01:33:12.400]  Вот вам хочется взять и объединить эти два корня.
[01:33:13.400 --> 01:33:14.400]  Но маленькая проблема.
[01:33:15.400 --> 01:33:16.400]  У них есть еще дети.
[01:33:17.400 --> 01:33:19.400]  Вот тут пять детей, тут пять детей.
[01:33:19.400 --> 01:33:20.400]  Тут пять детей, тут пять детей.
[01:33:21.400 --> 01:33:25.400]  Как бы, если просто так объединить, то получится, что вот между этими двумя детьми должно быть вот эти вот два дерева.
[01:33:26.400 --> 01:33:31.400]  И тогда надо либо эти деревья как-то объединять, желательно с сохранением глубины причем.
[01:33:32.400 --> 01:33:33.400]  Либо между ними должно что-то встать.
[01:33:34.400 --> 01:33:36.400]  Вот ровно за этим нам этот x понадобился.
[01:33:38.400 --> 01:33:39.400]  Вот.
[01:33:40.400 --> 01:33:45.400]  Это был мерч, когда у нас высоты одинаковые.
[01:33:49.400 --> 01:33:51.400]  Значит, давайте повысим планочку.
[01:33:52.400 --> 01:33:56.400]  Что делать, если мерч оказался...
[01:33:57.400 --> 01:33:58.400]  А что я убираю?
[01:33:59.400 --> 01:34:00.400]  Вот.
[01:34:01.400 --> 01:34:06.400]  А что делать, если у нас мерч, если у нас деревья оказались разных высот?
[01:34:07.400 --> 01:34:15.400]  Вот скажем, давайте без ограничений особого общности скажем, что тут высота какая-нибудь h1, а тут какая-нибудь высота поменьше h2.
[01:34:17.400 --> 01:34:18.400]  И надо их как-то пообъединять.
[01:34:19.400 --> 01:34:23.400]  Хочется из h1 максимально жирное дерево высоты h2 выпилить.
[01:34:24.400 --> 01:34:25.400]  Максимально правое.
[01:34:26.400 --> 01:34:27.400]  Максимально жирное?
[01:34:28.400 --> 01:34:29.400]  Ну точно максимально.
[01:34:30.400 --> 01:34:31.400]  Ну да.
[01:34:32.400 --> 01:34:34.400]  Максимальное по количеству что ли?
[01:34:35.400 --> 01:34:36.400]  Ну и чем это поможет?
[01:34:37.400 --> 01:34:40.400]  Где-нибудь там в середине дерева у него есть какое-то жирное дерево.
[01:34:41.400 --> 01:34:44.400]  Мы вот это сюда не вставим, потому что у нас же порядочность напоминаю.
[01:34:45.400 --> 01:34:46.400]  Чего?
[01:34:46.400 --> 01:34:47.400]  Да?
[01:34:48.400 --> 01:34:49.400]  Как?
[01:34:50.400 --> 01:34:53.400]  Нет, ну тут как-то порядок-то надо соблюдать.
[01:34:54.400 --> 01:34:55.400]  Да.
[01:34:56.400 --> 01:34:59.400]  Да, на самом деле действительно заметим следующее, что чем приятны дерева?
[01:35:00.400 --> 01:35:01.400]  Что глубина у нас все одинаковая.
[01:35:02.400 --> 01:35:03.400]  Вот.
[01:35:04.400 --> 01:35:06.400]  То есть это у нас приятный случай.
[01:35:07.400 --> 01:35:09.400]  И вот наконец мы вот дошли до вот этого.
[01:35:10.400 --> 01:35:13.400]  То есть идем по правому пути, вот у нас тут наконец-то глубина h2.
[01:35:14.400 --> 01:35:15.400]  Ну не глубина, а высота.
[01:35:17.400 --> 01:35:19.400]  Ну тогда идея какая-то такая.
[01:35:20.400 --> 01:35:22.400]  А давайте вот эти деревья объединим вот на этом уровне.
[01:35:25.400 --> 01:35:26.400]  Вот.
[01:35:30.400 --> 01:35:31.400]  Опа, прокашечки.
[01:35:32.400 --> 01:35:33.400]  Вот.
[01:35:35.400 --> 01:35:36.400]  Ну и теперь что делать?
[01:35:37.400 --> 01:35:40.400]  Если оказалось, что тут слишком много вершин,
[01:35:41.400 --> 01:35:44.400]  ну значит тогда опять же мы проталкиваем эту вершину вверх.
[01:35:44.400 --> 01:35:47.400]  То есть просто распличиваем обратно и проталкиваем вверх.
[01:35:48.400 --> 01:35:51.400]  Но соответственно в худшем случае мы это делаем по цепочке.
[01:35:52.400 --> 01:35:55.400]  Потому что если тут оказалось тоже больше, чем t-1 после этого,
[01:35:56.400 --> 01:35:57.400]  значит тут проталкиваем, проталкиваем, проталкиваем.
[01:35:58.400 --> 01:35:59.400]  Понимаете, да?
[01:36:00.400 --> 01:36:01.400]  Вот.
[01:36:02.400 --> 01:36:03.400]  То есть вот такая вот идея.
[01:36:04.400 --> 01:36:05.400]  Можно же опять-таки опускаемся?
[01:36:06.400 --> 01:36:07.400]  Да.
[01:36:08.400 --> 01:36:09.400]  Кстати, да.
[01:36:10.400 --> 01:36:12.400]  То есть можно просто идти сверху вниз до высоты вот до этой вершины,
[01:36:12.400 --> 01:36:17.400]  добиваясь того, чтобы тут была высота, чтобы тут не было 2t-1 вершины.
[01:36:18.400 --> 01:36:19.400]  Да.
[01:36:20.400 --> 01:36:22.400]  Можно этого действительно добиться, и тогда, когда вы тут будете объединять, вы уже без проблем справитесь.
[01:36:23.400 --> 01:36:24.400]  Да.
[01:36:25.400 --> 01:36:27.400]  То есть при таком мерже можно обойтись одним проходом, что приятно.
[01:36:28.400 --> 01:36:29.400]  Вот.
[01:36:30.400 --> 01:36:31.400]  Да.
[01:36:32.400 --> 01:36:34.400]  Но тогда смотрите, за какой асимптомикой это работает?
[01:36:35.400 --> 01:36:36.400]  Разница высоты.
[01:36:37.400 --> 01:36:38.400]  Да.
[01:36:38.400 --> 01:36:43.400]  Формально говоря, все-таки от единицы плюс там допустим h1 минус h2.
[01:36:44.400 --> 01:36:45.400]  Вот так.
[01:36:46.400 --> 01:36:47.400]  Значит смотрите, как мы делаем мерж?
[01:36:48.400 --> 01:36:49.400]  Мы делаем мерж так.
[01:36:50.400 --> 01:36:52.400]  Вот пусть у нас левое под дерево по высоте оказалось больше право.
[01:36:53.400 --> 01:36:55.400]  Да, отдельный вопрос, как мы об этом узнали, но неважно.
[01:36:56.400 --> 01:36:57.400]  Вот.
[01:36:58.400 --> 01:37:00.400]  Значит смотрите, мы идем тупо по правому пути.
[01:37:01.400 --> 01:37:04.400]  И доходим до дерева высоты h2.
[01:37:05.400 --> 01:37:11.400]  На этом уровне мы, собственно, мерж делаем вот аналогично этой технологии.
[01:37:12.400 --> 01:37:13.400]  Видите, да?
[01:37:14.400 --> 01:37:15.400]  Да.
[01:37:16.400 --> 01:37:17.400]  У нас же какие-то элементы могут...
[01:37:18.400 --> 01:37:19.400]  Что?
[01:37:20.400 --> 01:37:29.400]  Типа вот, если на уровне большими посмотреть сейчас, то когда мы запускаемся, то у нас все элементы новые, они должны быть больше, чем вот элементы предыдущие.
[01:37:30.400 --> 01:37:31.400]  Совершенно верно.
[01:37:31.400 --> 01:37:34.400]  Ну мы и требуем в мерже, что когда мы сливаем два дерева, помните?
[01:37:35.400 --> 01:37:40.400]  Помните, напоминаю, мы ни в одном дереве не умеем сливать два произвольных.
[01:37:41.400 --> 01:37:46.400]  То есть мы когда сливаем, мы жестко требуем, что ключи тут меньше, чем ключи тут.
[01:37:47.400 --> 01:37:48.400]  Вот везде, что в ВВЛе, что там...
[01:37:49.400 --> 01:37:50.400]  А, ВВЛ мы пока не умеем.
[01:37:51.400 --> 01:37:52.400]  Ну это ладно.
[01:37:53.400 --> 01:37:55.400]  Ну это ладно, это научимся минут через 10.
[01:37:56.400 --> 01:37:57.400]  Вот.
[01:37:58.400 --> 01:37:59.400]  Нет, через 10 не научимся.
[01:37:59.400 --> 01:38:00.400]  Ладно.
[01:38:01.400 --> 01:38:02.400]  Вот.
[01:38:03.400 --> 01:38:04.400]  Пока у нас есть красивые маркеры, научимся.
[01:38:05.400 --> 01:38:06.400]  Вот.
[01:38:07.400 --> 01:38:08.400]  Значит, смотрите.
[01:38:09.400 --> 01:38:10.400]  То есть это вот важный момент, поэтому, конечно, вот.
[01:38:11.400 --> 01:38:12.400]  Но здесь, соответственно, мы смёрживаем.
[01:38:13.400 --> 01:38:20.400]  И дальше, если тут слишком много вершин оказалось, то есть ключиков, то тогда мы опять начинаем сплитить и проталкивать там элементы вверх.
[01:38:21.400 --> 01:38:23.400]  Ну и в худшем случае так вот до высоты и протолкнем.
[01:38:23.400 --> 01:38:36.400]  Ну или, как уже было сказано, то есть если у нас как бы мы не хотим второй раз проходиться вверх, то лучше просто сразу идем сверху вниз и следим за тем, чтобы в каждой текущей вершине у нас количество вершин было не более, чем 2t-1.
[01:38:37.400 --> 01:38:41.400]  Ну, главное добиться, чтобы вот в этой вершине было не более, чем 2t-1.
[01:38:42.400 --> 01:38:43.400]  Не более, чем 2t-2.
[01:38:44.400 --> 01:38:47.400]  И тогда, если тут надо сделать подъём, мы его сделаем и завершаем в этом месте работу.
[01:38:48.400 --> 01:38:51.400]  То есть получается, да, можно ещё и за один проход это всё делать.
[01:38:53.400 --> 01:38:54.400]  Вот, понятно?
[01:38:55.400 --> 01:38:57.400]  Вот такая красота у нас получается.
[01:38:59.400 --> 01:39:03.400]  И мы это делаем теперь за О от единицы плюс разность высот.
[01:39:04.400 --> 01:39:07.400]  Ну, это прям максимально общее получается.
[01:39:08.400 --> 01:39:11.400]  Вот. Ну, тогда получается подходит и случай, когда высоты равны.
[01:39:12.400 --> 01:39:16.400]  А мы считаем, что внутри вершин стоит это за О от единицы?
[01:39:17.400 --> 01:39:19.400]  Да. Потому что мы считаем, что тет константа.
[01:39:19.400 --> 01:39:20.400]  Вот тет константа.
[01:39:25.400 --> 01:39:32.400]  Потому что там мы ещё считали количество обращений к базе данных, из которых мы достаём вершину.
[01:39:36.400 --> 01:39:37.400]  А сейчас?
[01:39:38.400 --> 01:39:44.400]  Ну, сейчас мы, помитуя эти все проталкиваемые операции и потенциальные пересчёты, мы на это забиваем.
[01:39:44.400 --> 01:39:50.400]  Потому что, смотрите, дело в том, что если вы храните какие-то там всякие вещи, типа суммы на подотреске,
[01:39:51.400 --> 01:39:54.400]  то это суммы на поддереве или там какие-то минимумы или что-нибудь ещё в этом роде,
[01:39:55.400 --> 01:39:58.400]  то вам всё равно придётся скорее всего по всем этим вершинам пробежаться.
[01:39:59.400 --> 01:40:02.400]  Ну, либо в каждом конкретном случае там как-то извращаться.
[01:40:03.400 --> 01:40:07.400]  Но скорее всего просто сами по себе эти рекалки вам придётся переделывать.
[01:40:09.400 --> 01:40:10.400]  Вот в чём проблема.
[01:40:15.400 --> 01:40:16.400]  Так, ну что, ещё вопросы?
[01:40:19.400 --> 01:40:21.400]  Так, ну что, с Миржом всё понятно?
[01:40:25.400 --> 01:40:26.400]  Так, отлично.
[01:40:27.400 --> 01:40:28.400]  Ладно, тогда давайте это.
[01:40:29.400 --> 01:40:31.400]  Так, ладно, тогда за скучавшие могут вылезать из телефонов.
[01:40:32.400 --> 01:40:35.400]  Вот. И тогда теперь будет его величество сплит.
[01:40:37.400 --> 01:40:38.400]  Вот.
[01:40:40.400 --> 01:40:41.400]  Значит, смотрите.
[01:40:42.400 --> 01:40:44.400]  Итак, что такое сплит?
[01:40:46.400 --> 01:40:50.400]  Значит, со сплитом у нас тоже будет не совсем то, что нужно.
[01:40:52.400 --> 01:40:55.400]  То есть наша цель, то есть у нас сплит должен быть обратен на Миржу.
[01:40:56.400 --> 01:41:00.400]  То есть у нас есть великое дерево, в котором где-то внутри есть там какой-то х.
[01:41:01.400 --> 01:41:05.400]  И мы хотим его расплитить на дерево с элементами меньше, чем х,
[01:41:06.400 --> 01:41:09.400]  на сам х и элементы больше, чем х.
[01:41:11.400 --> 01:41:13.400]  Вот такая у нас цель будет.
[01:41:17.400 --> 01:41:18.400]  Значит, поехали.
[01:41:19.400 --> 01:41:20.400]  Как мы это будем делать?
[01:41:21.400 --> 01:41:22.400]  Делать будем так.
[01:41:23.400 --> 01:41:24.400]  Отправляемся в корень.
[01:41:26.400 --> 01:41:30.400]  В нём есть сколько-то элементов и на один нод, и чуть больше детей.
[01:41:34.400 --> 01:41:37.400]  Ну, заметим, что если нам фантастически повезло
[01:41:37.400 --> 01:41:47.400]  и х оказался где-то здесь, то тогда мы в общем-то произвести соответствующий сплит можем без труда.
[01:41:48.400 --> 01:41:50.400]  Согласны? То есть каким образом?
[01:41:51.400 --> 01:41:57.400]  Ну, условно говоря, просто вот сейчас вот так вот.
[01:41:58.400 --> 01:41:59.400]  И вот так вот условно.
[01:42:00.400 --> 01:42:01.400]  Там всех детей вот так вот повесим.
[01:42:02.400 --> 01:42:04.400]  И вот этот вот х остался здесь.
[01:42:08.400 --> 01:42:09.400]  Чего?
[01:42:12.400 --> 01:42:15.400]  А, ну, на тему того, что если х крайний, что ли?
[01:42:16.400 --> 01:42:17.400]  Ну, условно, да.
[01:42:18.400 --> 01:42:19.400]  Заметим, что в результате сплитайте.
[01:42:20.400 --> 01:42:23.400]  Деревья могут оказаться одинаковой высоты, а могут и разной высоты, но это не принципиально.
[01:42:24.400 --> 01:42:25.400]  Вот.
[01:42:26.400 --> 01:42:27.400]  Ну, что делать, если х оказался глубже?
[01:42:29.400 --> 01:42:30.400]  Ну, смотрите.
[01:42:31.400 --> 01:42:33.400]  В этом случае тогда смотрите.
[01:42:34.400 --> 01:42:35.400]  Да.
[01:42:36.400 --> 01:42:41.400]  Значит, вот пусть оказалось, что, значит, этот х находится вот где-то вот в этом мистическом дереве.
[01:42:44.400 --> 01:42:49.400]  Тогда идея оказывается следующая.
[01:42:50.400 --> 01:43:01.400]  Смотрите, вот пусть он, это дерево, допустим, вот сейчас общий случай рассмотрим, оказалось между ключами, ну, допустим, там х, х1 и у1.
[01:43:04.400 --> 01:43:06.400]  Тогда смотрите, что я делаю.
[01:43:07.400 --> 01:43:10.400]  Значит, смотрите, тут какие-то кто-то там висит и тут кто-то там висит.
[01:43:11.400 --> 01:43:14.400]  Так вот, тогда я из этого сделаю следующее.
[01:43:16.400 --> 01:43:24.400]  Тогда я скажу, что у меня теперь есть вот эти вот, видите, вот эти четыре элемента, с висящим на них деревом.
[01:43:24.400 --> 01:43:34.400]  Точка х1, значит, точка у1, вот то, что тут справа, вот тут у нас немного осталось.
[01:43:37.400 --> 01:43:39.400]  И, что еще?
[01:43:42.400 --> 01:43:43.400]  Да.
[01:43:44.400 --> 01:43:48.400]  И, соответственно, давайте осталось вот это вот лишнее дерево, и надо его посплитить.
[01:43:49.400 --> 01:43:54.400]  И вот с этим деревом мы будем поступать, ну, условно, рекурсивно.
[01:43:56.400 --> 01:43:57.400]  Вот, понимаете, да?
[01:44:00.400 --> 01:44:02.400]  Будем поступать с ним рекурсивно.
[01:44:03.400 --> 01:44:07.400]  Да, сразу скажу, хранить тут у1 с вершин, скорее всего, не получится.
[01:44:08.400 --> 01:44:09.400]  Почему?
[01:44:09.400 --> 01:44:10.400]  Почему?
[01:44:10.400 --> 01:44:19.400]  Потому что, если мы будем с этим деревом повторять эту операцию, то тогда, по-видимому, мы возьмем корень, и у нас тут образуется еще пара вершин.
[01:44:20.400 --> 01:44:21.400]  Видите, да?
[01:44:22.400 --> 01:44:28.400]  Ну вот, тут там образуется еще там пара вершин, и еще там какая-нибудь вершина, и тут х2, тут там, допустим, х2.
[01:44:29.400 --> 01:44:30.400]  Вот.
[01:44:30.400 --> 01:44:36.400]  Но мы можем ударить, что местами она образоваться не будет, потому что если вот это дерево оказалось крайним,
[01:44:36.400 --> 01:44:39.400]  то тогда у нас останется только дерево справа, а дерево слева не останется.
[01:44:40.400 --> 01:44:41.400]  Понимаете, да?
[01:44:42.400 --> 01:44:44.400]  Но в любом случае тут получится вот...
[01:44:45.400 --> 01:44:53.400]  То есть, получится такая последовательность, и в самом конце, наконец, мы все-таки найдем сам вот этот х, и тогда вот этот финальный сплит сделаем.
[01:44:56.400 --> 01:44:57.400]  Что у нас получилось?
[01:44:58.400 --> 01:45:03.400]  Мы хотели получить два дерева и вершину, и успешно перевыполнили этот план.
[01:45:06.400 --> 01:45:07.400]  Вот пока не обратили.
[01:45:08.400 --> 01:45:13.400]  Можно пока пояснить почему нам нужно вообще идти дальше в дерево х1, между х1 и х1?
[01:45:15.400 --> 01:45:17.400]  Ну потому что именно в этом дереве находится х.
[01:45:18.400 --> 01:45:21.400]  То есть, смотрите, мы знаем, что вот это все должно находиться вот типа в левой части ответа, да?
[01:45:23.400 --> 01:45:25.400]  Ну потому что это все заведомо меньше х.
[01:45:25.400 --> 01:45:36.400]  У нас есть какое-то общее условие, если у нас известно, что дерево лежит между х1 и х1, которое выполняется для всех элементов этого дерева?
[01:45:37.400 --> 01:45:38.400]  Нет, у нас есть...
[01:45:39.400 --> 01:45:40.400]  И все лежат на границах х1 и х1?
[01:45:41.400 --> 01:45:44.400]  Ну да, все элементы этого под дерево лежат между х1 и х1.
[01:45:45.400 --> 01:45:46.400]  Потому что...
[01:45:48.400 --> 01:45:50.400]  При этом они лежат строго или нестрого?
[01:45:51.400 --> 01:45:52.400]  У нас строго, мы с f.
[01:45:52.400 --> 01:45:56.400]  То есть, все элементы этого под дерево, они строго, ведь больше х1 получаются?
[01:45:57.400 --> 01:45:59.400]  Да, и строго меньше и гк1 заодно, да.
[01:46:01.400 --> 01:46:02.400]  А х1 же это не х, все-таки, да?
[01:46:03.400 --> 01:46:04.400]  Да, это немножко другое.
[01:46:05.400 --> 01:46:06.400]  Нет, если вас смущают...
[01:46:07.400 --> 01:46:08.400]  Ладно, если вас смущают буковки, то...
[01:46:09.400 --> 01:46:10.400]  Нет, я просто...
[01:46:11.400 --> 01:46:12.400]  Нет, давайте...
[01:46:13.400 --> 01:46:14.400]  Ладно, если нас х смущает, давайте я тут буду...
[01:46:15.400 --> 01:46:17.400]  Я напишу а1 и b1, пожалуйста.
[01:46:18.400 --> 01:46:23.400]  Ну да, лучше давайте по возможности избавляться от колизии с буковками.
[01:46:24.400 --> 01:46:25.400]  Итак...
[01:46:26.400 --> 01:46:27.400]  То есть, получается, да.
[01:46:28.400 --> 01:46:29.400]  Смотрите, у нас получилось...
[01:46:30.400 --> 01:46:34.400]  То есть, у нас слева и справа получилась вот такая последовательность деревьев с убывающими, что приятно, высотами.
[01:46:35.400 --> 01:46:36.400]  Видите, да?
[01:46:37.400 --> 01:46:38.400]  Ну вот, и между ними...
[01:46:39.400 --> 01:46:43.400]  Ну вот, и между ними там, соответственно, вершинки.
[01:46:44.400 --> 01:46:45.400]  То есть, в переводе говоря...
[01:46:45.400 --> 01:46:46.400]  То есть, в переводе говоря...
[01:46:47.400 --> 01:46:48.400]  Так, давайте это мы уберем.
[01:46:50.400 --> 01:46:51.400]  Как бы все равно...
[01:46:52.400 --> 01:46:53.400]  А, это еще видно, да?
[01:46:54.400 --> 01:46:55.400]  Эх.
[01:46:56.400 --> 01:46:57.400]  Так, смотрите, в чем у меня есть.
[01:46:58.400 --> 01:47:01.400]  Значит, тогда получается, что у нас слева и справа...
[01:47:02.400 --> 01:47:03.400]  То есть, вот этот х у нас где-то на границе.
[01:47:04.400 --> 01:47:06.400]  И тут получилось, смотрите, какое-то дерево.
[01:47:07.400 --> 01:47:09.400]  Вот я его давайте так и назову t1.
[01:47:10.400 --> 01:47:11.400]  t1 условно а1.
[01:47:12.400 --> 01:47:13.400]  Да, ну надо было альфа его, наверное, назвать.
[01:47:13.400 --> 01:47:14.400]  А, ну что надо было?
[01:47:15.400 --> 01:47:16.400]  Вот, пожалуйста.
[01:47:17.400 --> 01:47:18.400]  Как говорится, мы сегодня не такие.
[01:47:19.400 --> 01:47:21.400]  Это переобувание делали.
[01:47:22.400 --> 01:47:23.400]  Так.
[01:47:24.400 --> 01:47:25.400]  Вот.
[01:47:26.400 --> 01:47:27.400]  Ну вот, какая-то вот такая вот штука.
[01:47:28.400 --> 01:47:29.400]  То есть, вот такая последовательность.
[01:47:30.400 --> 01:47:31.400]  И в самом конце у нас остается какое-то там дерево высоты.
[01:47:32.400 --> 01:47:33.400]  Там, допустим, альфа катая.
[01:47:34.400 --> 01:47:35.400]  k это не высота, это просто количество.
[01:47:36.400 --> 01:47:38.400]  Мы про эти деревья, мы не знаем, какие высоты у этих деревьев.
[01:47:39.400 --> 01:47:41.400]  Мы только знаем, что они строго убывают.
[01:47:43.400 --> 01:47:44.400]  Понимаете, да?
[01:47:45.400 --> 01:47:47.400]  Но что мы знаем?
[01:47:48.400 --> 01:47:51.400]  Теперь вот нам бы единственное хотелось бы составить из них единое дерево.
[01:47:52.400 --> 01:47:54.400]  Но с другой стороны, а что нам мешает?
[01:47:55.400 --> 01:48:04.400]  Сначала мы заметим, что мы можем вот тут, вот у нас в самом низу есть альфа к-1, альфа к, и между ними вот это вот число ак-1.
[01:48:05.400 --> 01:48:10.400]  Но заметим, что я могу эти деревья слить.
[01:48:11.400 --> 01:48:12.400]  Мы только что вот это научились делать.
[01:48:13.400 --> 01:48:15.400]  В чем, за какое время мы научились это делать?
[01:48:16.400 --> 01:48:25.400]  Мы заучились, вот единица, плюс по факту аж от альфа к-1, минус аж от альфа к-2.
[01:48:26.400 --> 01:48:29.400]  Можно, пожалуйста, пояснить, почему мы добавляем единицу?
[01:48:30.400 --> 01:48:33.400]  То есть, мы так отмечаем, что нам будет вызовы делать подружами?
[01:48:34.400 --> 01:48:35.400]  Для общего случая.
[01:48:36.400 --> 01:48:40.400]  Ну, то есть, смотрите, ну, во-первых, мы, смотрите, от аж 1 минус аж 2 это вот количество вот этих операций.
[01:48:40.400 --> 01:48:45.400]  Нет, единичку мы, на самом деле, добавляем, потому что, формально говоря, разность высот может быть ноль.
[01:48:46.400 --> 01:48:50.400]  Да, а от нуля это, к сожалению, вообще что-то некорректное.
[01:48:51.400 --> 01:48:53.400]  Поэтому мы для формальности пишем 1.
[01:48:54.400 --> 01:48:58.400]  Конечно, если вы гарантируете, что высоты различные, то, конечно, единицу можно не писать.
[01:48:59.400 --> 01:49:05.400]  Впрочем, в нашем случае мы можем и писать, потому что все равно этих единиц будет суммарно логарифмическое число, нас это устраивает.
[01:49:06.400 --> 01:49:10.400]  Да, правда, вы думаете, что, а что, неужели мы тут будем это все прям вот так вот мержить?
[01:49:11.400 --> 01:49:12.400]  Ну, да.
[01:49:13.400 --> 01:49:14.400]  Вот, вот поехали.
[01:49:15.400 --> 01:49:22.400]  Потому что самое приятное, что нас ждет, это то, что, ну, единственная проблема, что вот кто-то может сказать, так, у нас тут были убывающие высоты.
[01:49:23.400 --> 01:49:24.400]  Вот, хорошо, следующее.
[01:49:25.400 --> 01:49:32.400]  Теперь, когда мы будем мержить это с деревом альфа к минус 2, тут вообще может возникнуть, что для того, чтобы это была телескопическая сумма, да,
[01:49:32.400 --> 01:49:36.400]  хочется, чтобы вот эта h от альфа к минус 1 оказался в минусе, правда?
[01:49:37.400 --> 01:49:39.400]  Да, кстати, тут не k минус 2, а k.
[01:49:40.400 --> 01:49:49.400]  И тогда вот этот вот следующий мерж мы будем делать тогда за o от единицы плюс h от альфа к минус 2 на этот раз, минус h от альфа к минус 1.
[01:49:50.400 --> 01:50:01.400]  Вот так и говорим, то есть будем вот так вот фактически идти, идти, идти, и в конце у нас там получится o от единицы плюс h от альфа там, скажем, 2 минус 2.
[01:50:02.400 --> 01:50:03.400]  Х от альфа 3.
[01:50:04.400 --> 01:50:13.400]  И в самом конце мы заявим, что у нас тут будет o от единицы плюс h от альфа 1 минус h от альфа 2 шлеп-шлеп.
[01:50:14.400 --> 01:50:16.400]  Ну вот, нет, это еще не шлеп-шлеп, это скобочки.
[01:50:17.400 --> 01:50:18.400]  Шлеп-шлеп начинается здесь.
[01:50:19.400 --> 01:50:20.400]  Но это не совсем правда.
[01:50:21.400 --> 01:50:22.400]  Сейчас, ну.
[01:50:23.400 --> 01:50:25.400]  Но теперь, да, только вот есть важная роль.
[01:50:25.400 --> 01:50:37.400]  Просто если высоты действительно у нас будет так, оказывается, что левое дерево всегда будет по высоте не меньше правого, хотя бы не меньше, да, то тогда мы действительно можем раскрывать модуль именно таким образом,
[01:50:38.400 --> 01:50:40.400]  и тогда у нас получится вот такие красивые шлеп-шлепы.
[01:50:41.400 --> 01:50:44.400]  В сумме у нас получится там логарифм единичек плюс разность высот.
[01:50:45.400 --> 01:50:48.400]  А высот, так как высоты у нас не происходит логарифма, то получился логарифм.
[01:50:49.400 --> 01:50:51.400]  То есть sumar, то есть o от старой высоты.
[01:50:52.400 --> 01:50:54.400]  Только маленькая оговорка.
[01:50:55.400 --> 01:51:00.400]  Мы сказали, что каждое следующее дерево будет получаться по высоте не меньше правого.
[01:51:01.400 --> 01:51:03.400]  Это казалось бы очевидно.
[01:51:04.400 --> 01:51:10.400]  Потому что вроде как у нас, как бы мы же говорили, что вот высоты этих деревьев убывают, да?
[01:51:11.400 --> 01:51:12.400]  Да, строго убывают.
[01:51:13.400 --> 01:51:14.400]  Но была маленькая оговорка.
[01:51:15.400 --> 01:51:22.400]  К сожалению, когда мы сливаем два дерева, никто не сказал, что результат слияния будет равен максимально из высоты этих деревьев, правда?
[01:51:22.400 --> 01:51:33.400]  Да, но важное, но тут важное замечание, что в результате мержа двух деревьев у нас оказывается высота этого дерева, она не будет больше, чем высота максимума плюс один.
[01:51:34.400 --> 01:51:46.400]  Ну плюс один она может быть, потому что если тут прям вот это, если вот этот вот подъем вершины прям до корня аж дойдет, то да, высота могла увеличиться на один, но не более того.
[01:51:47.400 --> 01:52:00.400]  Но тогда если они строго, но тогда обратите внимание, если они строго убывали, то тогда мы просто теперь по индукции получаем факт, что результат слияния, он по высоте не превосходит предыдущего дерева.
[01:52:03.400 --> 01:52:09.400]  И тогда просто по индукции, то есть если там даже два равных дерева, то все равно высота у них больше, чем на один, не увеличится.
[01:52:10.400 --> 01:52:21.400]  И поэтому получается, что вот расписывать вот таким образом, но единственное, да, тут конечно может быть, видите, не минус h от альфа-3, а может быть даже от альфа-3 минус один получается.
[01:52:23.400 --> 01:52:34.400]  Но обратите внимание, меньше высота от мержа не станет, ну а то, что мы тут это, как бы тут h от альфа-3 минус один, ну значит мы тут лишний минус один просто сверху оценили.
[01:52:35.400 --> 01:52:45.400]  То есть таким образом мы получается можем сделать вот такой телескопический мерж, значит слева, и соответственно аналогичный мерж справа, естественно.
[01:52:46.400 --> 01:53:01.400]  Вот, то есть помните, самое важное делать его, видите, здесь нам принципиально, что мы его делаем именно снизу вверх, потому что тут я боюсь совсем проталкивания этих всех операций там в духе, там сначала сделаем этот мерж, потом этот, потом этот, может не прекратить.
[01:53:02.400 --> 01:53:18.400]  Хотя, хотя в принципе эту технологию можно тоже делать так справа, потому что вы тоже можете добиваться, что там, когда у вас два дерева, вы там превращаете их в одно, допустим, да, но при этом гарантируете, что на нужной вам высоте количество вершин не превосходит 2t-2.
[01:53:18.400 --> 01:53:27.400]  И вот на самом деле, и тогда таким образом вот можно все-таки выкрутиться и сделать так, чтобы проход тут все-таки один будет, а не два.
[01:53:28.400 --> 01:53:37.400]  Вот, понимаете? Ну правда, если конечно вы не начинаете там что-нибудь еще делать, там суммы пересчитывать и так далее.
[01:53:37.400 --> 01:53:57.400]  Вот, но в принципе, то есть, по идее так, если забивать на все эти базы данных, то замечаем, что таким образом сплит и мерж мы делаем, причем, как и ранее, мы делаем сплит и мерж, по сути, проходами сверху вниз, то есть это означает, что все присваивания на подотреске реверса, на подотреске и прочей отложенной операции, собственно, вы теперь тут без труда делаете.
[01:53:57.400 --> 01:54:16.400]  Ну вот, без дополнительного интеллектуального труда, по крайней мере, на уровне идеи. Нет, в общем-то, если вы уже научились делать сплит и мерж, то все, что вам нужно делать, это в нужном месте вставить функцию recalc.
[01:54:16.400 --> 01:54:28.400]  Вот, ну там вообще две функции, там надо вставить функцию push и функцию recalc, помните, в декартом дереве, ну вот, собственно, везде и в декартом, и мы сплеем, и тут вот, пожалуйста.
[01:54:28.400 --> 01:54:39.400]  Вот, но, как говорится, мы не остановимся на этом, потому что тут возникает интересная идея. Вот давайте теперь попробуем придумать, смотрите.
[01:54:39.400 --> 01:54:44.400]  А нужно ли нам было гардить бета-дерево, чтобы получить честный логорифм в этом месте?
[01:54:44.400 --> 01:54:56.400]  Ну вот, хорошо, бета-дерево нам гарантирует теперь, что у нас теперь все честный логорифм. А теперь вы сказали, что AVL этого не умеет всего случайно?
[01:54:56.400 --> 01:55:13.400]  Вот, смотрите, возможно, теперь возникает вопрос, ну, сейчас вот, собственно, да, возможно, у кого-то задавался вопрос, почему это мы к AVL-ке вернулись именно сейчас, они стали обсуждать сплит и мерж когда-нибудь, хотя бы на прошлой лекции, когда мы обсуждали.
[01:55:13.400 --> 01:55:28.400]  Вообще, что такое сплит и мерж, да? Вот, но на самом деле давайте попробуем, просто идея такая, давайте попробуем просто придумать AVL, сплит и мерж AVL-дерево, базируясь на подобной технологии.
[01:55:28.400 --> 01:55:54.400]  Вот, ну вот, давайте посмотрим, чем у нас будет отличаться, чем у нас будет отличаться вот действительно мерж в AVL-дереве от мержа, соответственно, в где-нибудь еще? Вот, в B-дереве.
[01:55:54.400 --> 01:56:06.400]  Ну вот, давайте попробуем, сейчас вот это мы, так, так, давайте-ка, ладно, давайте будем вот это стирать.
[01:56:06.400 --> 01:56:36.400]  В конце концов определение B-дерево там уже не понадобится, думаю, мы по нему уже все поняли, вот, значит, смотрите, вот, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так, так
[01:56:36.400 --> 01:57:05.400]  думать. Итак, ну, казалось бы, да, как делать мерш в ВВЛ-дереве? Ну, как всегда, значит, здесь вот у нас жили-были дерево, и у нас тут есть вершинка, и жила была тоже вершинка, у нее есть дерево. И хотим мы их шлить, в чем, как всегда, у нас тут еще, в чем, опять же, давайте, пользуемся той же технологией, что у нас есть меньше х, больше х и, собственно, Вася. Вот.
[01:57:05.400 --> 01:57:07.400]  Как же эти деревья сливать?
[01:57:10.400 --> 01:57:26.400]  Ну да, если они равны высоты, или даже их высоты отличаются на плюс-минус один, обратите внимание, да? То есть, если тут, действительно, тут h, а тут, допустим, h плюс-минус даже один, то, в принципе, вообще думать не надо.
[01:57:27.400 --> 01:57:32.400]  Просто объявить Васю корнем, подвесить два дерева и возрадоваться. Все.
[01:57:36.400 --> 01:57:53.400]  Вот. Ну хорошо. Так, хорошо. А есть у них все-таки высоты прям вот разные. Вот у нас тут высота h, но h1, а тут h, но h2.
[01:57:56.400 --> 01:58:00.400]  И тут Вася. Что тогда делать?
[01:58:06.400 --> 01:58:19.400]  Так, спустимся. Да, пойдем. Ну даже не, скорее во правого-правого, ну-ка скорее. Ну в принципе та же технология. Правда, есть, правда, одна маленькая, тонкая разница.
[01:58:20.400 --> 01:58:30.400]  Тонкая разница заключается в том, что вот этого, вот на правом пути вершины высоты h2 может и не оказаться.
[01:58:31.400 --> 01:58:43.400]  Вот. Но, ну как, да, если конкретно высоты h2 не будет, то будет высота h2 плюс-1 и h2 минус-1, правда? Есть такое подозрение, да?
[01:58:44.400 --> 01:58:56.400]  Вот. Ну поэтому находим какую-то вершину на глубине, ну допустим, от h2 до h2 плюс-1. И тогда что мы делаем?
[01:59:01.400 --> 01:59:10.400]  Высоты. Вот так. Чтобы высота под... Ну, например. Хотя надо подумать, как нам выгоднее.
[01:59:15.400 --> 01:59:16.400]  Ну хорошо.
[01:59:16.400 --> 01:59:19.400]  Ну это просто не поможет. Возможно и так, и так будет приятно.
[01:59:20.400 --> 01:59:26.400]  Но неважно. Но нет, на самом деле ничего страшного не произойдет. Потому что, значит, смотрите, вы найдете вот этот дерево, вот у него родитель.
[01:59:27.400 --> 01:59:35.400]  Тогда что вы делаете? Вы объявите, что правый ребенок вот этого родителя это Вася. И к Вася подвесите вот эти два под дерево, правда?
[01:59:36.400 --> 01:59:49.400]  Что может произойти? Тогда мы, ну в этом случае понятно, мы гарантируем, что у Васи теперь, значит, глубина теперь точно высота h2 плюс-1.
[01:59:50.400 --> 01:59:56.400]  В принципе, могла возникнуть такая нехорошая ситуация.
[01:59:58.400 --> 02:00:01.400]  Да, что давайте посмотрим. Вот у левого какая глубина может быть?
[02:00:01.400 --> 02:00:15.400]  Я боюсь, тут все хуже. Если вот эта высота h2 минус 1 до h2, то в принципе тут получается глубина от h2 минус 2 до h2 плюс-1.
[02:00:15.400 --> 02:00:25.400]  Вот. Поэтому мы по этому понимаем, что просто так, ну вот поэтому, что просто вот так смертно, что у нас даже плохо.
[02:00:26.400 --> 02:00:36.400]  Потому что если бы тут неожиданно у этой вершины глубина оказалась там на 2 больше, то тогда мы просто делаем, с этой ситуацией мы уже сталкивались в инсерте, помните?
[02:00:37.400 --> 02:00:42.400]  То есть инвариант прям идентичен, поэтому прям просто вот там поворотами добиваемся того, что надо.
[02:00:42.400 --> 02:00:52.400]  Но если глубина 3, то у нас проблемы. Что же делать? Можно было найти более подходящую вершину.
[02:00:53.400 --> 02:01:00.400]  Можно. Ну можно просто сказать, что давайте просто с h2 минус 1 не связываться, а просто связываться с именно h2 и h2 плюс-1. Все-таки как раньше и хотели.
[02:01:01.400 --> 02:01:09.400]  Тогда мы замечаем, что, ну вот, тогда что тут может произойти? Ну да.
[02:01:09.400 --> 02:01:17.400]  Ну да. Нет, ну давайте смотреть. Нет, то же самое, да, не то же самое.
[02:01:18.400 --> 02:01:31.400]  Смотрите, потому что да, формально говоря, если совсем в тупую анализировать, то тут глубина h2 минус-1, значит, то есть может быть h2 минус-1, h2 плюс-2 теоретически.
[02:01:32.400 --> 02:01:36.400]  И кажется, может быть такая ситуация, когда тут h2 плюс-2, тут h2 минус-1.
[02:01:36.400 --> 02:01:44.400]  Но мы замечаем маленький тонкий момент. Для того, чтобы тут было h2 плюс-2, теперь нам нужно, чтобы тут было h2 плюс-1.
[02:01:45.400 --> 02:01:53.400]  Понимаете, да? А тогда у нас здесь h2 минус-1 не будет. У нас же все хорошо было, значит тут как минимум h.
[02:01:54.400 --> 02:02:05.400]  Потому что более точно анализ здесь провести лучше так. Смотрите, то есть да, то есть на самом деле сказать, что тут была какая-то высота, вот я назову ее h2 минус-1.
[02:02:06.400 --> 02:02:13.400]  Х3. Да, и она лежит на отрезке h2 и h2 плюс-1. Вот так.
[02:02:14.400 --> 02:02:26.400]  Тогда, смотрите, тогда если очень аккуратно сделать, то тогда у нас получается, что здесь у нас получается h3 плюс-1. Железно, да, потому что максимум точно здесь.
[02:02:26.400 --> 02:02:38.400]  А здесь мы получаем от h3 минус-1 до h3 плюс-1. И тогда получается просто, что в худшем случае тогда у нас, вот.
[02:02:39.400 --> 02:02:45.400]  И тогда мы получаем, что в худшем случае тогда разность высот между вот этим и вот этим может оказаться 2.
[02:02:46.400 --> 02:02:52.400]  Ну вот, ну и в этом случае мы нужные повороты, конечно же, без труда делаем.
[02:02:53.400 --> 02:02:55.400]  Вот, понятно?
[02:03:02.400 --> 02:03:15.400]  Вот. То есть, то есть, то есть тут возникает просто, да, некоторая, такая маленькая закувычка, но с сохранением вот такой асимптотики, правда?
[02:03:16.400 --> 02:03:21.400]  Пока вроде, то есть, по крайней мере, с мержом разбрались.
[02:03:22.400 --> 02:03:31.400]  Ну ладно, ну да, на всякий случай. Надеюсь, ни у кого не вызывает сомнений, что если у правого дерева высота больше, то мы все можем аналогично сделать, просто симметрично рассмотреть, правда?
[02:03:32.400 --> 02:03:34.400]  Вот.
[02:03:35.400 --> 02:03:40.400]  Вот. А то мало ли там кто-то умер уже, да?
[02:03:41.400 --> 02:03:49.400]  Ну, ну, как сказать, на самом деле, если написать там 0.1 и передавать параметры, то это можно даже без копипасты сделать.
[02:03:50.400 --> 02:03:54.400]  И вот, там у кого-то там такие красивые технологии на эту тему были.
[02:03:59.400 --> 02:04:01.400]  Ну, возможно.
[02:04:02.400 --> 02:04:04.400]  Как-то это хорошая идея.
[02:04:05.400 --> 02:04:10.400]  Так, значит, смотрите, что у нас дальше.
[02:04:11.400 --> 02:04:14.400]  А теперь давайте думать, что у нас будет со сплитом.
[02:04:15.400 --> 02:04:25.400]  Значит, давайте, так ладно, давайте эти картинки с бодерей мы тоже уберем, потому что, вот, а технологию оставим.
[02:04:26.400 --> 02:04:27.400]  Значит, смотрите.
[02:04:28.400 --> 02:04:35.400]  Так, вот нам бы в идеале хотелось бы теперь делать сплит по вот этой вот технологии. Видите, да?
[02:04:38.400 --> 02:04:43.400]  Ну да. И так у нас, ну вот, нет, тут та же схема.
[02:04:44.400 --> 02:04:46.400]  То есть, ищем х. То есть, нам нужно опять то же самое.
[02:04:47.400 --> 02:04:49.400]  У нас есть дерево, в нем х есть.
[02:04:50.400 --> 02:04:54.400]  Как-то если х нет, то можно его сначала туда вставить, а потом развлекаться.
[02:04:55.400 --> 02:04:57.400]  Вот. Соответственно.
[02:04:58.400 --> 02:05:00.400]  И тогда у нас, значит, получается следующее.
[02:05:01.400 --> 02:05:04.400]  Ну, правда, конкретно ВВЛ деревья, кстати, не сильно критично будет.
[02:05:05.400 --> 02:05:09.400]  Потому что если х нет, то просто у вас эта последовательность в какой-то момент упрется в пустое дерево.
[02:05:10.400 --> 02:05:15.400]  А если одно из этих деревьев там в конце будет пустым, кстати, в общем-то мы сильно не пострадаем, правда?
[02:05:16.400 --> 02:05:17.400]  Значит, поехали.
[02:05:18.400 --> 02:05:19.400]  Значит, что у нас тогда получится?
[02:05:19.400 --> 02:05:20.400]  Что у нас тогда получится?
[02:05:21.400 --> 02:05:25.400]  У нас опять получится, значит, тогда у нас, то есть, как мы берем корень.
[02:05:26.400 --> 02:05:32.400]  Если он оказался меньше х, то мы этот корень, значит, обзываем А1 и отправляем влево вместе с под деревом А1, да?
[02:05:33.400 --> 02:05:38.400]  Вот. Ну, дальше там потом, ну, а ты, в результате, потом получилась та же самая последовательность.
[02:05:39.400 --> 02:05:43.400]  Только, видите, только разница в том, что у нас теперь тут, ну, никакой разницы нет.
[02:05:44.400 --> 02:05:46.400]  То есть, опять, да, как был ключик, так и остался.
[02:05:46.400 --> 02:05:48.400]  Может справа ниже, у нас лево справа ниже, а пирослева ниже?
[02:05:49.400 --> 02:05:50.400]  На каждом шаге, да.
[02:05:51.400 --> 02:05:57.400]  Ну, понятно, да, но понятно, что тут, может, тут на этом шаге, вот, Б1, я его чуть ниже специально рисую, но суть останется той же.
[02:05:59.400 --> 02:06:06.400]  Вот, можно даже так обозвать тут А1, а потом Б2, а потом А3, там А4, Б5, можно так написать, но мы не будем этого делать,
[02:06:07.400 --> 02:06:08.400]  потому что сливать все равно надо с одной стороны.
[02:06:09.400 --> 02:06:13.400]  Да, то есть деревьев суммарно будет меньше, конечно, вот.
[02:06:13.400 --> 02:06:14.400]  Вот.
[02:06:15.400 --> 02:06:17.400]  Но, правда, принципиальная суть это не меняет.
[02:06:18.400 --> 02:06:20.400]  Вот, допустим, у нас А3 и А3, ну и так далее.
[02:06:21.400 --> 02:06:23.400]  И в конце у нас опять АК.
[02:06:24.400 --> 02:06:31.400]  Ну и хочется вроде делать по той же самой технологии, да, то есть давайте смёрживаем, казалось бы, снизу вверх,
[02:06:32.400 --> 02:06:36.400]  всё суммируем, там суммируем, телескопически всё сокращается и радуемся жизни.
[02:06:37.400 --> 02:06:40.400]  Да, но теперь вот возникает маленькая проблема.
[02:06:40.400 --> 02:06:45.400]  Раньше мы это работало, потому что мы гарантировали, что нам нужно две вещи гарантировать было.
[02:06:46.400 --> 02:06:56.400]  Что, во-первых, что тут высоты строго убывают у Альф, и второе, что когда мы смёрживаем, у нас высота становится не менее того,
[02:06:57.400 --> 02:07:04.400]  ну там, желательно, не менее того, что не менее максимальной высоты сливаемого и не более, чем это максимум плюс один.
[02:07:05.400 --> 02:07:07.400]  Но второе мы, впрочем, гарантировать можем, правда?
[02:07:08.400 --> 02:07:15.400]  Потому что помните, мы же при инсекте следили за тем, что у нас высота в итоге не уменьшится, но увеличится не более, чем на один, помните?
[02:07:16.400 --> 02:07:19.400]  Аккуратненько было, да, очень аккуратненько.
[02:07:20.400 --> 02:07:25.400]  А вот здесь у нас проблема, потому что что мы можем гарантировать?
[02:07:26.400 --> 02:07:31.400]  Потому что, смотрите, давайте я здесь вот в качестве ашек запишу, какая высота была у вершины,
[02:07:31.400 --> 02:07:38.400]  когда мы её в исходном дереве.
[02:07:39.400 --> 02:07:41.400]  Вот была такая высота.
[02:07:42.400 --> 02:07:44.400]  Вот h1, h2, h3 и так далее.
[02:07:45.400 --> 02:07:49.400]  Но что мы теперь можем сказать про высоту Альфа1?
[02:07:51.400 --> 02:07:53.400]  Что мы можем сказать?
[02:07:55.400 --> 02:07:58.400]  Мы, к сожалению, не можем сказать, что она равна h1-1.
[02:07:58.400 --> 02:08:06.400]  Мы можем сказать, что она равна, что она где-то от h-1-2 до h1-1.
[02:08:08.400 --> 02:08:12.400]  То есть вполне могло оказаться, что правое дерево по высоте больше, чем левое.
[02:08:15.400 --> 02:08:17.400]  Значит, Альфа2, что про неё?
[02:08:18.400 --> 02:08:22.400]  Ну здесь она тоже h2-2 и h2-1.
[02:08:23.400 --> 02:08:25.400]  Ну h2, конечно, что мы точно можем сказать?
[02:08:25.400 --> 02:08:26.400]  Ну что мы точно можем сказать?
[02:08:27.400 --> 02:08:32.400]  Мы можем точно сказать, что высота h1 точно больше h2, правда?
[02:08:35.400 --> 02:08:39.400]  Но гарантировать, что вот эта высота строго больше этой, мы так просто не можем.
[02:08:40.400 --> 02:08:48.400]  Потому что могло так оказаться, что мы вычли здесь больше, и получилось, что h1-2 равно h2-1.
[02:08:49.400 --> 02:08:51.400]  Но это единственный проблемный случай, но он есть.
[02:08:51.400 --> 02:08:58.400]  То есть могло оказаться, что у каких-то соседних деревьев высоты таки совпали.
[02:08:59.400 --> 02:09:00.400]  Вот, понимаете, да?
[02:09:04.400 --> 02:09:06.400]  Ну как вам сказать?
[02:09:07.400 --> 02:09:09.400]  Понимаете, это на самом деле потенциальная проблема.
[02:09:10.400 --> 02:09:18.400]  Потому что, да, можно даже заметить, что подряд больше, чем двух идущих подряд деревьев совпадающей высотой у нас, конечно, не будет.
[02:09:22.400 --> 02:09:24.400]  Нет, на самом деле даже понятно почему.
[02:09:25.400 --> 02:09:34.400]  Потому что если вот тут h2-1 совпало с h1-2, то тогда, смотрите, тогда h3 не превосходит h2-1.
[02:09:37.400 --> 02:09:39.400]  Нет, ну в идеале хотелось бы снизу вверх.
[02:09:41.400 --> 02:09:45.400]  Нет, смотрите, мы сначала идем сверху вниз, получаем эти деревья, а потом снизу вверх сливаем.
[02:09:46.400 --> 02:09:47.400]  Помните, мы в б-дереве так делали, да?
[02:09:48.400 --> 02:09:53.400]  Пока у нас смысл в том, что применим ту же технологию, попробуем доказать, что все работает.
[02:09:54.400 --> 02:10:00.400]  И вот мы обсуждаем в том, что возникают какие-то проблемы с тем, что у нас некоторые альфы, к сожалению, могут оказаться равными.
[02:10:02.400 --> 02:10:08.400]  То есть мы, конечно, ограничиваем неприятность, доказывая, что трех идущих подряд деревьев с одинаковой высотой у нас не будет.
[02:10:10.400 --> 02:10:11.400]  Я это утверждаю.
[02:10:12.400 --> 02:10:13.400]  Почему я это утверждаю?
[02:10:14.400 --> 02:10:22.400]  Ну просто потому, что если тут так произошло, значит, вот это дерево было именно h2-1, тогда h3 точно не более, чем h2-1, и тогда следующее дерево заведомо меньше.
[02:10:23.400 --> 02:10:24.400]  Вот, понимаете, да?
[02:10:25.400 --> 02:10:42.400]  Но тем не менее, тем не менее обгон все-таки теоретически произойти может.
[02:10:44.400 --> 02:10:53.400]  Ну на уровне, что у нас может быть так, что вот хорошо, тут две равные высоты, а тут мы вот взяли, все пообъединяли, и у нас оказалась высота равная h2-1.
[02:10:54.400 --> 02:10:58.400]  Вот эти два дерева объединили, у нас правое дерево вообще оказалось выше левого.
[02:11:00.400 --> 02:11:01.400]  Не очень хорошо, правда?
[02:11:03.400 --> 02:11:04.400]  Правда, с другой стороны?
[02:11:05.400 --> 02:11:06.400]  Нет, ну да, могло так оказаться.
[02:11:08.400 --> 02:11:13.400]  И тогда, получается, конкретно вот в таком виде доказательства предстает работать.
[02:11:14.400 --> 02:11:15.400]  Что делать?
[02:11:16.400 --> 02:11:17.400]  Все?
[02:11:18.400 --> 02:11:28.400]  Если показать, что асимптотику потом как-нибудь докажем, хочется показать, что у нас не будет никогда ситуации, когда разница отличается на 3.
[02:11:30.400 --> 02:11:32.400]  Потому что потом, ну, что можно сказать?
[02:11:33.400 --> 02:11:41.400]  Можно мы хотим крайне сказать, что у нас есть какая-то последовательность, и каждый элемент отличается от того, что нам хотелось бы не больше, чем, например, с минус каждым 2?
[02:11:42.400 --> 02:11:43.400]  Нет, в принципе, я согласен.
[02:11:44.400 --> 02:11:54.400]  То есть, заметьте, если мы докажем, что вот этот результат может стать выше следующего дерева, но не более, чем на 2, то в принципе нас это устроит, потому что вот эта разность высот там где-то превратится вот в единичке.
[02:11:56.400 --> 02:11:59.400]  То есть ее в единичку запихиваем, тут телескопическая сумма условно сохраняется.
[02:12:01.400 --> 02:12:07.400]  Да, с другой стороны, а верен ли этот факт?
[02:12:08.400 --> 02:12:11.400]  Верно ли, что все работает вообще? Верно ли, что если так написать, оно хотя бы не сломается?
[02:12:12.400 --> 02:12:16.400]  Нет, в смысле, если вы просто запускаете там условно просто функцию merge на каждых двух деревьях, то не проблема.
[02:12:17.400 --> 02:12:18.400]  То есть, естественно, оно все работает.
[02:12:21.400 --> 02:12:25.400]  А что бы ему ломаться-то? Мы просто вызвали merge и все, у нас проблема только в асимптотике.
[02:12:27.400 --> 02:12:33.400]  То есть, даже Больтова, если нас устраивает асимптотика лог квадрат, то у нас тоже нет проблем, кстати.
[02:12:34.400 --> 02:12:35.400]  Обратите внимание.
[02:12:35.400 --> 02:12:41.400]  Но, конечно, да, то есть в идеале, конечно, да, тут возникает вопрос. Вот давайте подумаем.
[02:12:42.400 --> 02:12:54.400]  А можно ли действительно показать, что в результате слияния деревьев у нас не может получиться высота, то есть высота дерева не может стать больше, чем, скажем, высота вот этого максимального дерева плюс, допустим, два?
[02:12:54.400 --> 02:13:04.400]  Вот можем ли мы такое попытаться по индукции доказать?
[02:13:05.400 --> 02:13:15.400]  Так, ну давайте попробуем. Вот жила была вершина, и была у нее высота аж.
[02:13:15.400 --> 02:13:26.400]  Давайте все-таки а1 оставим, ну неважно, поехали.
[02:13:27.400 --> 02:13:36.400]  И жила была у нее дерево а1. Что у нас тут получилось?
[02:13:37.400 --> 02:13:42.400]  Значит, тут было, значит, здесь тут а1, тут тут а1-2, а1-1.
[02:13:43.400 --> 02:13:57.400]  Но давайте думать. Жила и было у нее тут под дерево, теоретически, какое-то большое правое под дерево, вот, хотя неважно, то есть было у него тут условно а2 там какие-то, а2 и так далее.
[02:13:57.400 --> 02:14:12.400]  И вот все вот это мы как-то смерзили, и у нас получилось какое-то единое дерево бета, которое по высоте не превосходит вот высоты аж от а2 плюс два.
[02:14:12.400 --> 02:14:31.400]  Допустим такое, да? Но давайте думать. По умолчанию, конечно, аж от а2 плюс два это меньше либо равно, чем, значит, а1-1 плюс 2, правда?
[02:14:31.400 --> 02:14:41.400]  Ну понятно, что если у дерева высота а1, то, наверное, у него под дерева высота строго меньше, правда? То есть получается, что это меньше либо равно, чем а1-1.
[02:14:42.400 --> 02:14:58.400]  Плюс один, да, спасибо. Так, ну тогда выясняет вопрос. Итак, мы сливаем дерево а1 высоты а1 плюс один, и дерево высоты а1-2 а1-1.
[02:15:01.400 --> 02:15:11.400]  У нас получается, но тогда у нас, как мы уже знаем, результат из слияния двух деревьев получится дерево высоты не более, чем максимальная высота плюс один, правда?
[02:15:12.400 --> 02:15:19.400]  Это мы уже точно знаем. О чем многовато? Мы заказывали, что тут это не более, чем плюс два?
[02:15:19.400 --> 02:15:27.400]  Нет-нет-нет, у нас глубина аж от а2 плюс два. А здесь нам случилось а1 плюс 2.
[02:15:31.400 --> 02:15:42.400]  Нет, погодите. Так, погодите. Мы сейчас по индукции пытаемся доказать, что если мы сливаем прямо снизу вверх прям в тупую, как раньше делали, в чем не заморачиваемся.
[02:15:42.400 --> 02:16:00.400]  Справа оказалось более высокое дерево, по барабану все равно сливаем. Мы пытаемся сейчас доказать следующее. Мы пытаемся доказать, что в результате слияния, значит если мы дошли до дерева а3, то результат слияния по высоте будет не более, чем а3 плюс 2.
[02:16:01.400 --> 02:16:07.400]  Именно а3 плюс 2. Да, именно аж от а3 плюс 2, да. А у нас случилось совсем не это.
[02:16:07.400 --> 02:16:19.400]  Так, у нас получилось не совсем. Аж от а1 это либо а1 минус 2, либо а1 минус 1. Разница в 4 пока что вылезла.
[02:16:20.400 --> 02:16:35.400]  Ну ладно. Хорошо, хорошо, проблема. Хорошо. Тогда нам всяко понадобится воспользоваться фактом того, что у нас трех одинаковых деревьев подряд не бывает, иначе мы точно проиграем.
[02:16:37.400 --> 02:16:47.400]  Нет, ну это, кстати, вполне может быть на самом деле. Вот что-то мне кажется. Нет, ну на самом деле хорошо. Пока я бы хотел выделять такая мысль. Хорошо.
[02:16:48.400 --> 02:16:57.400]  А если мы сейчас переформулируем утверждение так, то давайте так видите, у каждой ажки есть вот эти вот высоты аж, правда?
[02:16:57.400 --> 02:17:05.400]  Да. А давайте попробуем доказать, что результат всех их слияния будет не превосходить вот этой же высоты плюс 2.
[02:17:06.400 --> 02:17:11.400]  Это больше похоже на правду. Больше похоже на правду, да. Значит поехали. Смотрите.
[02:17:11.400 --> 02:17:22.400]  Тогда, значит, если тут у нас был результат, он не превосходит, значит высота тут аж было меньше, поэтому не происходит аж 1 минус 1, значит не происходит аж 1 плюс 1, да, как можно сказать.
[02:17:23.400 --> 02:17:34.400]  Но тогда слияние дерева аж высоты не более чем аж 1 плюс 1 и дерева там какой-то высоты уже не важно какой, тоже не больше чем аж 1 плюс 1, явно даже меньше.
[02:17:35.400 --> 02:17:38.400]  Но тогда он тоже получится не более чем аж 1 плюс 2.
[02:17:42.400 --> 02:17:45.400]  То есть вот такая вот технология.
[02:17:46.400 --> 02:17:52.400]  Так. Нет, пока баги нет. Утверждение по индукции доказано. Вопрос, что оно нам дает?
[02:17:54.400 --> 02:18:02.400]  То есть бага скорее подозрение мне кажется больше вызывает, собственно, а как бы приводит ли это нас там к победе.
[02:18:04.400 --> 02:18:06.400]  Вот, понимаете, да?
[02:18:06.400 --> 02:18:20.400]  Ну а давайте смотреть внимательно. Ладно, согласны ли вы с тем, что мы действительно доказали, что в результате такого слияния там, собственно, получится дерево высоты не более чем аж 1 плюс 2?
[02:18:22.400 --> 02:18:24.400]  Хорошо?
[02:18:24.400 --> 02:18:26.400]  Вот.
[02:18:30.400 --> 02:18:35.400]  Кстати, вытекает вопрос, интересно, а плюс 1 мы тут доказать не можем так по индукции?
[02:18:43.400 --> 02:18:44.400]  На самом деле?
[02:18:44.400 --> 02:18:49.400]  Ну, кстати, можем. Если у нас, по крайней мере, переход индукции доказывается легко, обратите внимание.
[02:18:50.400 --> 02:19:02.400]  Так что все, что нам остается, так что на самом деле проверить плюс 1 или плюс, или может быть тут вообще даже не плюс 1, а можно там что угодно ставить, хоть минус 57 на самом деле.
[02:19:04.400 --> 02:19:11.400]  Обратите внимание, да? То есть на самом деле, что нам поможет сказать, что я тут в точности могу написать, это, конечно, база индукции.
[02:19:11.400 --> 02:19:13.400]  База индукции, да?
[02:19:14.400 --> 02:19:16.400]  Вот.
[02:19:17.400 --> 02:19:27.400]  Но с другой стороны, ну давайте смотреть, потому что база индукции, это когда у меня вот этой вот А2-шки уже нет, правда?
[02:19:28.400 --> 02:19:35.400]  То есть база индукции, это когда у меня здесь вот осталось А, и тут два дерева, и тут какая-то высота аж.
[02:19:36.400 --> 02:20:02.400]  Но в результате слияния двух этих деревьев, ну в результате этих деревьев теоретически высота может уйти в аж плюс 1, а может, правда, и не уйти, потому что заметим, что у нас просто есть два дерева, просто вершина и слияние.
[02:20:02.400 --> 02:20:07.400]  Кстати, вот действительно возникает вопрос, а может мы тут на самом деле просто больше, чем аж, не получим?
[02:20:09.400 --> 02:20:18.400]  Не, не может. Потому что, смотрите, тут меньше либо равно аж минус 1, и тут меньше либо равно, чем аж минус 1, да?
[02:20:18.400 --> 02:20:37.400]  Тогда, смотрите, когда мы их объединим даже вот на этом уровне, ну или в другую сторону, то тут высота увеличится на 1 и будут какие-то повороты, но все равно в этом дереве выше чем аж вы не получите.
[02:20:37.400 --> 02:20:56.400]  Поэтому вывод на самом деле крутой, то есть на самом деле оказывается, вот действительно, можно по индукции заявлять себе, ну вот, то есть на самом деле окажется, что мы получим не выше, чем аж 1.
[02:20:56.400 --> 02:21:11.400]  То есть, смотрите, если мы тут получим не выше аж 2, которая, собственно, не выше, чем аж 1 минус 1, то тогда получается, что при слиянии вот этих деревьев мы получим дерево в высоте не более, чем аж 1, и все в порядке.
[02:21:11.400 --> 02:21:32.400]  То есть получается, вот действительно крутизна. То есть получается, что мы получим, то есть на каждом шаге мы получаем дерево не выше, чем, то есть здесь не выше, чем, то есть не выше, чем аж, там, ака 1 бывшая, тут не выше, чем аж, ака минус 2, ну и так далее.
[02:21:32.400 --> 02:21:57.400]  Правда, ну вот, ну возникает, правда, теперь такой маленький вопрос. Как это нам, как конкретно это нам помогает победить вот эту асимптотику? Потому что, к сожалению, про, там, вот эти вот, ну вот, про разности вот этих вот альфа ашка минус 2 ашка альфа ка минус 1, по-моему, нам это пока не поможет. Победить.
[02:21:57.400 --> 02:22:07.400]  Ну-ка давайте, как говорится, как эту проблему теперь за минуту решить?
[02:22:07.400 --> 02:22:16.400]  Чего? Как это называется, да. Как говорится, да.
[02:22:16.400 --> 02:22:30.400]  Ну да, то есть, на самом деле, да. То есть, идея такая, что, в общем-то, вот эти все ашки, они от, вот, тех ашек отличаются на, там, от единицы, правда? Ну, там, на единицу двоечку.
[02:22:30.400 --> 02:22:50.400]  Поэтому, в общем-то, мы можем теперь заявлять, вот, что, на самом деле, действительно, эти, ну вот, то есть, там, эти мержики у нас, ну, хотя нет, тут не совсем, ну вот, то есть, да, отличаются они не меньше.
[02:22:50.400 --> 02:22:59.400]  А еще высота при слиянии тоже не уменьшается, да. То есть, мы не можем слить, там, дерево высоты 7 и дерево высоты 2 и получить дерево высоты 5, правда?
[02:22:59.400 --> 02:23:04.400]  Вот. То есть, у нас, по крайней мере, так слияние у нас устроено. Вот.
[02:23:04.400 --> 02:23:25.400]  Но тогда получается, что, ну, если совсем вот так формально писать, да, то у нас получается все за от единицы плюс там модуль, допустим, hk-1-hk. Ну да, то есть, в реальности там, конечно, вот, действительно, модуль разности этих деревьев, да.
[02:23:25.400 --> 02:23:39.400]  Вот. Ну, точнее так, здесь, ну вот, мы замечаем, что у этих деревьев, действительно, они отличаются на плюс-минус 2. То есть, вот этот модуль отличается от этой вот модули разности этих вершин не более чем на, условно, там, 4, да.
[02:23:39.400 --> 02:23:46.400]  И эти 4, собственно, вот в этой вот, в константу 1 спокойно впихиваются, правда? Вот.
[02:23:46.400 --> 02:24:00.400]  Да? Ну.
[02:24:00.400 --> 02:24:14.400]  Хотя, на самом деле, не этот бронё. Вот этот, вот это под дерево, оно может быть очень-очень-очень сильно меньше, на самом деле. Да, но это и не... Ну ладно.
[02:24:14.400 --> 02:24:21.400]  А, кстати, начнём с того, что hk вообще не существует.
[02:24:21.400 --> 02:24:27.400]  Ну там, да, ну ладно, допустим, за от единицы плюс hk мы это успешно делаем, да?
[02:24:27.400 --> 02:24:34.400]  Ладно, теперь вот эти слияния. Тут дерево высоты от, то есть, дерево альфа к-2.
[02:24:34.400 --> 02:24:50.400]  Оно имеет высоту, значит, от hk-2-1. Так, давайте нарисую, да. Вот. У нас есть вершина ak-2. У неё есть под дерево альфа к-2.
[02:24:50.400 --> 02:24:56.400]  Значит, тут высота была h2, значит, тут высота от h-2 до h2-1, да.
[02:24:56.400 --> 02:25:09.400]  И тут у нас результат слияния, значит, получился не превосходящим чего, бывшие высоты этой вершины, то есть hk-1, да.
[02:25:09.400 --> 02:25:16.400]  Так, тут hk-2, если что, да. Понимаете, да?
[02:25:16.400 --> 02:25:25.400]  Ну вот, с одной стороны. Но с другой стороны обратите внимание, результат тут больше либо равен, чем hk-1-2.
[02:25:25.400 --> 02:25:31.400]  Потому что мы помним, левое под дерево здесь, как минимум, было хотя бы такой высоты, помните, да?
[02:25:31.400 --> 02:25:46.400]  Поэтому с точностью, да, там, плюс-минус 4 мы можем утверждать, что здесь там, ладно, можно так написать, от 5 плюс, там, значит, модуль, там, скажем, hk-2.
[02:25:46.400 --> 02:25:55.400]  Ну, тут можно модуль не писать, минус hk-1, даже без модуля.
[02:25:55.400 --> 02:25:59.400]  Ну да, но для понятности мы это тоже бы написали, ничего страшного.
[02:25:59.400 --> 02:26:04.400]  Ну, помните, мы в сплэй-тереве тоже там себе писали, что у нас там 2 плюс что-то там, да.
[02:26:04.400 --> 02:26:13.400]  Ну, а плюс-минус 2 было, но ничего страшного там.
[02:26:13.400 --> 02:26:21.400]  Так, hk-3 минус hk-2 здесь аналогичным образом, ну и так далее.
[02:26:21.400 --> 02:26:31.400]  Плюс h1 минус h2, ну там шлеп-шлеп, ну понятно, тут везде там эти вот шлеп-шлепы, шлеп-шлепы, шлеп-шлепы.
[02:26:31.400 --> 02:26:37.400]  И вы представляете, получается логарифм пятачков и h1.
[02:26:37.400 --> 02:26:41.400]  Ну вот, ну и таким образом, да.
[02:26:41.400 --> 02:26:49.400]  Получилось, что, оказывается, даже такая технология в тупую, на самом деле, уже прекрасно работает.
[02:26:49.400 --> 02:26:59.400]  Хотя, на самом деле, если вас, на самом деле, эта технология смущала, то есть, на самом деле, потому что ей там можно было предложить такое программистское решение.
[02:26:59.400 --> 02:27:02.400]  Ну как бы да, если вы видите проблемы в доказательстве, что делать?
[02:27:02.400 --> 02:27:08.400]  Либо написать более крутое доказательство, либо просто написать код, который железобетонно работает.
[02:27:08.400 --> 02:27:12.400]  Да, на олимпиаде чаще, конечно, второй работает, потому что так быстрее, правда.
[02:27:12.400 --> 02:27:26.400]  Ну потому что, на самом деле, ну вот, пока у меня изначально была опция, на самом деле, просто говорить, давайте идем сверху вниз, если встретили два равных дерева, а давайте их тупо на месте смержим.
[02:27:26.400 --> 02:27:33.400]  Вот тупо на месте смержим, если там следующее дерево по высоте оказалось равно предыдущему, то значит тоже смержим.
[02:27:33.400 --> 02:27:38.400]  Ну, практически, вот просто кладем деревья в стэк, и в случае чего там просто стэк уменьшается.
[02:27:38.400 --> 02:27:48.400]  Понимаете, да, то есть, это все равно все делается за О от единицы, поэтому, ну вот, и на каждом шаге уменьшается количество деревьев, поэтому таких О от единичных слияний будет мало, правда.
[02:27:48.400 --> 02:27:58.400]  Вот. Да, даже если там, ну, если хранится плюс-минус один, правда, могут быть, возможно, те же проблемы.
[02:27:58.400 --> 02:28:02.400]  Ну а нет, просто нет, смотрите, просто поэти, в чем фишка, это даже уже не важно.
[02:28:02.400 --> 02:28:07.400]  Ну, если плюс-минус один, то там начнутся какие-то обгоны, может, лучше не рисковать.
[02:28:07.400 --> 02:28:22.400]  Вот. Потому что, как бы, если вы добиваетесь вот этого равного типа вот мержим, вот так телескопический мержим, то в итоге у нас оказывается, что эти, значит, глубины тогда строго убывают, и тогда остаток можно вот так сверху вниз спокойно мерзить.
[02:28:22.400 --> 02:28:34.400]  То есть, можно было вот так выкрутиться на самом деле еще. То есть, такой программистский такой более надежный метод, но, как мы убедились, на самом деле, и необходимости-то в нем толком нет.
[02:28:34.400 --> 02:28:45.400]  То есть, на самом деле, как говорится, и так сойдет. То есть, тут, конечно, больше проблем в том, чтобы это очень аккуратно сформулировать и доказать, но вот, идеи, наконец, думать не надо.
[02:28:45.400 --> 02:28:50.400]  Так, эх, 17 минут осталось, да?
[02:28:50.400 --> 02:29:01.400]  Вот. Не, просто пролетаю туда. Принципиально новую тему не начнешь, то ладно. Теперь тогда такой, может быть, вопрос уровня правды, уровня бога. А красно-черное это не умеет?
[02:29:01.400 --> 02:29:03.400]  До связи.
[02:29:03.400 --> 02:29:05.400]  Ну, там.
[02:29:05.400 --> 02:29:07.400]  Ну, что сразу это?
[02:29:07.400 --> 02:29:08.400]  Конечно же, умеет.
[02:29:08.400 --> 02:29:16.400]  Ну вот, да, у нас еще есть. У нас, оу, чудо, у нас остался красный маркер. Вот жалко у нас. В прошлый раз вообще кайф был. У нас был черный маркер, красный маркер и синий маркер.
[02:29:16.400 --> 02:29:18.400]  Во.
[02:29:18.400 --> 02:29:20.400]  Вот жалко.
[02:29:20.400 --> 02:29:25.400]  Вот жалко, потому что это была красочная лекция.
[02:29:25.400 --> 02:29:28.400]  Вот, значит, смотрите.
[02:29:28.400 --> 02:29:31.400]  А теперь давайте думать,
[02:29:31.400 --> 02:29:38.400]  может ли вот эту местическую технологию,
[02:29:38.400 --> 02:29:45.400]  местическую технологию, действительно, адаптировать на красно-черные деревья?
[02:29:45.400 --> 02:29:49.400]  Ну, давайте, давайте, с самого начала. Уровень изи.
[02:29:56.400 --> 02:30:04.400]  Ну, давайте вспоминать, что у нас было, что такое красно-черное дерево. Красно-черное дерево, это когда у нас вершины бывают красные и черные.
[02:30:04.400 --> 02:30:08.400]  Значит, мы, нет, значит, мы хотим поддерживать что?
[02:30:08.400 --> 02:30:15.400]  Например, мы помним, что у нас у красных вершин нет черных детей. У нас у каждого корень дерева черный.
[02:30:15.400 --> 02:30:22.400]  И что самое главное, до каждого, на пути от корня до любого крестика количество черных вершин одно и то же.
[02:30:22.400 --> 02:30:26.400]  Помним, да?
[02:30:26.400 --> 02:30:36.400]  Тогда мы понимаем, что слить два дерева одинаковой черной высоты, да, то есть, помните, да, это в красно-черном дереве нам все равно, нам плевать на высоту,
[02:30:36.400 --> 02:30:47.400]  нам главное, чтобы черная высота была одинакова, да, вот. И тогда получается, что если у нас есть два дерева высоты BH, корень у них черный, да,
[02:30:47.400 --> 02:30:53.400]  поэтому как бы слить с какой-нибудь новой вершины Х тоже без проблем.
[02:30:53.400 --> 02:31:00.400]  Просто подвешиваем, объявляем эту вершину черной и радуемся жизни, правда? Вот, согласны?
[02:31:00.400 --> 02:31:10.400]  Вот. А теперь, правда, возникает вопрос, а что делать, если высоты оказались различными?
[02:31:10.400 --> 02:31:13.400]  Что делать?
[02:31:13.400 --> 02:31:15.400]  Ну, хотелось бы спускаться, но нельзя.
[02:31:15.400 --> 02:31:20.400]  А что нет? Нет, смотрите, а что нет? Честно спускаемся, все нормально.
[02:31:20.400 --> 02:31:24.400]  Значит, идем, идем, идем. Я жалко, у меня нет синего маркера, но ладно.
[02:31:24.400 --> 02:31:32.400]  Спускаемся, спускаемся, спускаемся, спускаемся. И доходим до ситуации, когда у нас черная глубина равна вот BH2.
[02:31:32.400 --> 02:31:43.400]  Вот тут она была BH1, а тут справа стала BH2. И тут у нас тоже мистическое дерево на BH2. Видите, да?
[02:31:43.400 --> 02:31:54.400]  Так вот, идея такая. Значит, давайте их объединим, но для того, чтобы черная высота оказалась той же, х на этот раз мы объявим красненьким.
[02:31:54.400 --> 02:32:07.400]  Вот, видите, да? Вот так вот. То есть вот тут какая-то связь была, мы ее убили, а теперь она тут есть, вот тут красненький х.
[02:32:07.400 --> 02:32:11.400]  Да, его не видно, но он есть.
[02:32:12.400 --> 02:32:13.400]  Что?
[02:32:17.400 --> 02:32:26.400]  Нет, оно бинарное. Нет, у нас только одно не бинарное дерево, пока это B дерево. Все остальные были бинарными двоичными деревьями поиска.
[02:32:26.400 --> 02:32:46.400]  А элементарно, смотри, мы убили, ну да, вот так вот. То есть это мы могли просто, с точки зрения двоичного дерева поиска, мы эту операцию могли проделать не только к этой вершине, но и как абсолютно любой.
[02:32:46.400 --> 02:32:51.400]  А могли просто объявить х скорким, повесить bh1 слева, bh2 справа?
[02:32:52.400 --> 02:32:59.400]  С точки зрения двоичного дерева поиска было бы все в порядке. Плохо было бы только с точки зрения вариантов красно-черного дерева уже самого.
[02:33:05.400 --> 02:33:10.400]  Да, кстати, приятно. Да, мы действительно можем добиться того, чтобы слева была прям черная вершина.
[02:33:10.400 --> 02:33:20.400]  Правда, у нас есть проблема. То, что родитель х не красной вершины при этом будет, мы гарантировать не можем. Но проблема ли это?
[02:33:21.400 --> 02:33:35.400]  Мы помним, что у нас уже была ситуация, когда у нас все хорошо, глубины все адекватные, там все дерево корректное, только единственная проблема, что там существует одна красная вершина, у которой есть красный родитель.
[02:33:35.400 --> 02:33:41.400]  И это единственная проблема. Как вы помните, в инсорте мы эту проблему уже решали, помните?
[02:33:45.400 --> 02:33:54.400]  Нет, тяжело, это когда мы рэй сделали. А тут у нас там какие-то перекраски-перекраски, пара поворотов и до свидания.
[02:33:54.400 --> 02:34:11.400]  То есть инсорта это еще халява была. Но тогда что у нас получается? Но при этом, давайте вспоминать нот, но при этом обнаружим, что максимум, что у нас могло произойти, опять же, эта черная высота могла увеличиться на один.
[02:34:11.400 --> 02:34:27.400]  Да, в итоге, помните, да? Такое могло быть, но понятно, что на веки вечной после инсорта высота оставаться одной и той же не может, потому что у нас рано или поздно количество вершин станет слишком много и дерево должно увеличиться.
[02:34:27.400 --> 02:34:42.400]  Но черная высота увеличивается не более чем на один. Мы можем оценивать этот мерч за от, обратите внимание, единицы плюс модуль разности именно черных высот.
[02:34:42.400 --> 02:34:50.400]  Ну потому что заметим, что разность длина самого этого пути это не более чем удвоенное вот это вот, правда?
[02:34:50.400 --> 02:35:07.400]  Да, напоминаю, фишка доказательства этого факта базируется на том, что у нас на этом пути нет двух подряд красных вершин.
[02:35:07.400 --> 02:35:12.400]  Нет, нет, нет. Чего шлепать нельзя?
[02:35:12.400 --> 02:35:17.400]  В данном случае написано корректное утверждение.
[02:35:17.400 --> 02:35:19.400]  Так.
[02:35:19.400 --> 02:35:28.400]  Но когда мы попытаемся сделать сплит, у нас будет проблема в том, что у нас эта оценка и там может быть два и мы не можем просто взять и сократить друг друга.
[02:35:28.400 --> 02:35:37.400]  Почему? Ну в смысле, в этим точке мы пишем так, то есть это не происходит не происходит с умножить на вот один плюс там разность высот.
[02:35:37.400 --> 02:35:41.400]  Так что поэтому тут может быть не в шлепе проблема.
[02:35:41.400 --> 02:35:54.400]  Проблема может быть в том, что когда мы делаем вот такой сплит, то есть мы обнаружим, что эти деревья могут не быть корректными деревьями в том плане, что вот корни этих деревьев сами по себе могут и красными оказаться.
[02:35:54.400 --> 02:35:57.400]  Да, это не проблема.
[02:35:57.400 --> 02:35:59.400]  Это не проблема.
[02:35:59.400 --> 02:36:07.400]  Но по модулю того, что от того, чтобы взяли у этого по дереву покрасили вершину красной, то вообще-то у него черная высота увеличилась.
[02:36:07.400 --> 02:36:13.400]  Поэтому тут надо придется еще, может быть там пять превратиться еще в какую-нибудь гадость.
[02:36:13.400 --> 02:36:15.400]  Ну ладно, не превратится.
[02:36:15.400 --> 02:36:21.400]  То есть раньше у нас глубина просто могла тут скакнуть на два, типа могла скакнуть на один, тут скакнуть на два.
[02:36:21.400 --> 02:36:28.400]  А тут получается она могла уменьшиться на один или остаться прежней.
[02:36:28.400 --> 02:36:31.400]  Но правда, получить примерно сопоставимая проблема.
[02:36:31.400 --> 02:36:40.400]  То есть там будут те же пятерки, но суть останется той же, потому что по факту черные высоты могут остаться теми же.
[02:36:40.400 --> 02:36:42.400]  То есть как бы уменьшиться на один или остаться теми же.
[02:36:42.400 --> 02:36:45.400]  Поэтому тут последовательность будет тоже такая.
[02:36:45.400 --> 02:36:48.400]  Последовательность будет неубывающая.
[02:36:48.400 --> 02:36:50.400]  будет там какая-нибудь неубывающая, то можно...
[02:36:50.400 --> 02:36:52.400]  Что?
[02:36:52.400 --> 02:36:54.400]  Да, невозрастающая, да,
[02:36:54.400 --> 02:36:56.400]  как говорится.
[02:36:56.400 --> 02:36:58.400]  Но, тем не менее,
[02:36:58.400 --> 02:37:00.400]  суть останется прежней, потому что, если я в качестве h1
[02:37:00.400 --> 02:37:02.400]  буду писать везде букву
[02:37:02.400 --> 02:37:04.400]  b, это типа бывшая высота черной вершины,
[02:37:04.400 --> 02:37:06.400]  то я могу вот писать вот
[02:37:06.400 --> 02:37:08.400]  ровно то же самое, правда?
[02:37:08.400 --> 02:37:10.400]  То есть, я это
[02:37:10.400 --> 02:37:12.400]  могу писать, я это буду писать,
[02:37:12.400 --> 02:37:14.400]  и, собственно, у меня тоже получится 5 очки, ну или там,
[02:37:14.400 --> 02:37:16.400]  если совсем правильно эти минус-единички писать,
[02:37:16.400 --> 02:37:18.400]  может, там даже шестерочка-семерочка вылезет.
[02:37:18.400 --> 02:37:20.400]  Но, как вы понимаете,
[02:37:20.400 --> 02:37:22.400]  принципиально это не поменяется,
[02:37:22.400 --> 02:37:24.400]  и получается, что даже красночерное дерево
[02:37:24.400 --> 02:37:26.400]  теоретически прекрасно
[02:37:26.400 --> 02:37:28.400]  умеет эти ваши протоэнот
[02:37:28.400 --> 02:37:30.400]  реверсы на подотреске.
[02:37:30.400 --> 02:37:32.400]  Нет, приеда.
[02:37:32.400 --> 02:37:34.400]  Нет, в принципе, получается любое дерево,
[02:37:34.400 --> 02:37:36.400]  у которого вы все делаете там, скажем, сверху вниз,
[02:37:36.400 --> 02:37:38.400]  и там, скажем, можете
[02:37:38.400 --> 02:37:40.400]  посвапать детей без нарушения всяких инвариантов,
[02:37:40.400 --> 02:37:42.400]  там каких-нибудь
[02:37:42.400 --> 02:37:44.400]  красночерных, а в красночерном дереве это так,
[02:37:44.400 --> 02:37:46.400]  равно как и в любом, рассматриваемом нами другом,
[02:37:46.400 --> 02:37:48.400]  тогда получается, что
[02:37:48.400 --> 02:37:50.400]  любое такое дерево, на самом деле,
[02:37:50.400 --> 02:37:52.400]  скорее всего, там
[02:37:52.400 --> 02:37:54.400]  сплитом и мержем,
[02:37:54.400 --> 02:37:56.400]  а как следствие
[02:37:56.400 --> 02:37:58.400]  и всеми операциями на подотреске будет делать.
[02:37:58.400 --> 02:38:00.400]  То есть получается и красночерное дерево это прекрасно делает.
[02:38:02.400 --> 02:38:04.400]  То есть получается, да,
[02:38:04.400 --> 02:38:06.400]  чисто математически, на самом деле,
[02:38:06.400 --> 02:38:08.400]  развитие этого всего можно было остановить и в ВВЛке,
[02:38:08.400 --> 02:38:10.400]  или сказать, что ладно,
[02:38:10.400 --> 02:38:12.400]  лучшее дерево красночерное, потому что там будет
[02:38:12.400 --> 02:38:14.400]  мало поворотов.
[02:38:14.400 --> 02:38:16.400]  Ладно, тут мы, конечно, мало поворотов при сплите
[02:38:16.400 --> 02:38:18.400]  и мерже не обещаем, правда?
[02:38:18.400 --> 02:38:20.400]  То есть мы обещаем только,
[02:38:20.400 --> 02:38:22.400]  что при каждом мерже поворотов будет
[02:38:22.400 --> 02:38:24.400]  не более чем один.
[02:38:24.400 --> 02:38:26.400]  Ну или там может быть... Нет, я не удивлюсь,
[02:38:26.400 --> 02:38:28.400]  честно, я не знаю ответа, но я не
[02:38:28.400 --> 02:38:30.400]  удивлюсь, если выяснится, что там
[02:38:30.400 --> 02:38:32.400]  можно аккуратно доказать, что при этом телескопическом
[02:38:32.400 --> 02:38:34.400]  мерже, на самом деле, у вас там
[02:38:34.400 --> 02:38:36.400]  поворотов тоже будет у отъединиться,
[02:38:36.400 --> 02:38:38.400]  особенно если тут
[02:38:38.400 --> 02:38:40.400]  где-нибудь в процессе там не особо
[02:38:40.400 --> 02:38:42.400]  закачиваться на тему красного корня.
[02:38:42.400 --> 02:38:44.400]  То есть может быть,
[02:38:44.400 --> 02:38:46.400]  не знаю.
[02:38:46.400 --> 02:38:48.400]  Но, по крайней мере, на уровне идеи вот поняли,
[02:38:48.400 --> 02:38:50.400]  что да, то есть декартовый дерево
[02:38:50.400 --> 02:38:52.400]  мы пишем только потому, что оно просто пишется.
[02:38:54.400 --> 02:38:56.400]  А не потому, что там
[02:38:56.400 --> 02:38:58.400]  соответственно.
[02:38:58.400 --> 02:39:00.400]  Так что вот такая вот красивая вещь.
[02:39:02.400 --> 02:39:04.400]  Так что вот такие вот красивые мерже.
[02:39:04.400 --> 02:39:06.400]  Сразу видно, почему я не стал это сразу
[02:39:06.400 --> 02:39:08.400]  рассматривать, потому что, как заметим,
[02:39:08.400 --> 02:39:10.400]  эта вся технология в B дереве, она
[02:39:10.400 --> 02:39:12.400]  наиболее красивая, конечно.
[02:39:12.400 --> 02:39:14.400]  Потому что там, собственно, с высотами все четко
[02:39:14.400 --> 02:39:16.400]  и понятно, а вот в ВВЛке красно-черном
[02:39:16.400 --> 02:39:18.400]  надо еще додумывать чуть-чуть.
[02:39:18.400 --> 02:39:20.400]  Но чуть-чуть. Так, есть ли тут
[02:39:20.400 --> 02:39:22.400]  какие-то вопросы?
[02:39:28.400 --> 02:39:30.400]  Не понял.
[02:39:34.400 --> 02:39:36.400]  Так, не надо.
[02:39:36.400 --> 02:39:38.400]  Ну хорошо, ладно.
[02:39:38.400 --> 02:39:40.400]  Ну ладно, тогда соответственно ладно.
[02:39:40.400 --> 02:39:42.400]  Тогда, думаю, на этом можно пока остановиться
[02:39:42.400 --> 02:39:44.400]  и тогда в на следующем занятии перейти
[02:39:44.400 --> 02:39:46.400]  к дереву OneMDBoss.
[02:39:48.400 --> 02:39:50.400]  Нет, смотрите, значит да.
[02:39:52.400 --> 02:39:54.400]  Видимо, приблизительный план так,
[02:39:54.400 --> 02:39:56.400]  что из деревьев, на самом деле,
[02:39:56.400 --> 02:39:58.400]  две штуки из обязательной программы
[02:39:58.400 --> 02:40:00.400]  у нас такие. Ну, во-первых, раз уж мы
[02:40:00.400 --> 02:40:02.400]  упомянули дерево отрезков, то, наверное,
[02:40:02.400 --> 02:40:04.400]  тупо было бы когда-нибудь не упомянуть дерево
[02:40:04.400 --> 02:40:06.400]  отрезков. Но тем более, что там
[02:40:06.400 --> 02:40:08.400]  есть отдельные, тем более, что там есть
[02:40:08.400 --> 02:40:10.400]  отдельные красоты, на самом деле.
[02:40:10.400 --> 02:40:12.400]  Но, конечно, тут еще возникает вопрос.
[02:40:12.400 --> 02:40:14.400]  Вот это мы с вами пообсуждали вон десятью
[02:40:14.400 --> 02:40:16.400]  способами, как реализовывать черный ящик с
[02:40:16.400 --> 02:40:18.400]  поясом, с инсортом, дилитом и прочими
[02:40:18.400 --> 02:40:20.400]  саксессами предыссессорами при желании.
[02:40:20.400 --> 02:40:22.400]  Вот.
[02:40:22.400 --> 02:40:24.400]  Но возникает
[02:40:24.400 --> 02:40:26.400]  такой естественный вопрос,
[02:40:26.400 --> 02:40:28.400]  как уже, как в кеф-патрик-сорте.
[02:40:28.400 --> 02:40:30.400]  А если мы работаем там с целыми,
[02:40:30.400 --> 02:40:32.400]  не отрицательными числами,
[02:40:32.400 --> 02:40:34.400]  нельзя ли сделать круче?
[02:40:36.400 --> 02:40:38.400]  Вот.
[02:40:38.400 --> 02:40:40.400]  Да, то есть, оказывается, если, как всегда,
[02:40:40.400 --> 02:40:42.400]  очень обнаглеть и сказать,
[02:40:42.400 --> 02:40:44.400]  что у нас памяти там бесконечно много
[02:40:44.400 --> 02:40:46.400]  и любой индекс является
[02:40:46.400 --> 02:40:48.400]  ячейкой в реальной памяти, как
[02:40:48.400 --> 02:40:50.400]  кеф-патрик-сорте, вот,
[02:40:50.400 --> 02:40:52.400]  этот наглеж называется Transnichotomial
[02:40:52.400 --> 02:40:54.400]  Model, вот.
[02:40:54.400 --> 02:40:56.400]  Так что вот в науке так называется.
[02:40:56.400 --> 02:40:58.400]  Вот. То вот
[02:40:58.400 --> 02:41:00.400]  оказывается, да, что можно
[02:41:00.400 --> 02:41:02.400]  попытаться это действительно делать не за log n,
[02:41:02.400 --> 02:41:04.400]  а за
[02:41:04.400 --> 02:41:06.400]  условно там
[02:41:06.400 --> 02:41:08.400]  log log c.
[02:41:08.400 --> 02:41:10.400]  Где c это максимальное
[02:41:10.400 --> 02:41:12.400]  число, которое вы там юзаете.
[02:41:12.400 --> 02:41:14.400]  Вот. Но как это сделать?
[02:41:14.400 --> 02:41:16.400]  Соответственно, к этому мы перейдем
[02:41:16.400 --> 02:41:18.400]  тогда уже на доске
[02:41:18.400 --> 02:41:20.400]  с мелом.
[02:41:20.400 --> 02:41:22.400]  Да, преимущество
[02:41:22.400 --> 02:41:24.400]  мела, он точно работает.
