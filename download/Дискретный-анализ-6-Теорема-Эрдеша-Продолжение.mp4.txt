[00:00.000 --> 00:11.200]  Так, товарищи, если там кто есть, то добрый день, но даже если никого нет записи, народ слушает,
[00:11.200 --> 00:18.800]  это я так немножко даже в курсе, я иногда посматриваю за процессом. Ну в общем понятно,
[00:18.800 --> 00:28.880]  конечно, кому как удобно, многим удобно прослушать все, как кто-то выразился залпом. У нас новая тема,
[00:28.880 --> 00:35.080]  сейчас речь пойдет по большому счету про гиперграфы, ну и про графы тоже, речь пойдет про
[00:35.080 --> 00:40.520]  такую классическую, на самом деле очень важную с точки зрения практики, в том числе задачу о
[00:40.520 --> 00:49.800]  покрытии графов и гиперграфов вершинами этих объектов, вершинных покрытий. Так, я потерял мел,
[00:49.800 --> 00:58.840]  но уже кажется нашел его, и надо вывернуть еще тряпку, потому что она уже совсем в милу вся.
[00:58.840 --> 01:08.240]  Ага, так, ну у нас это традиционно называется систему общих представителей, и в общем я школьникам
[01:08.240 --> 01:14.840]  даже очень люблю рассказывать увлекательную историю про эти самые системы, вот, ну я могу
[01:14.840 --> 01:20.920]  напомнить для тех, кто когда-то, может быть, это слушал, речь идет от такой задачи, у нас есть какое-то
[01:20.920 --> 01:28.680]  количество студентов, например, или школьников, не знаю, 30 человек, скажем, и мы хотим из этих 30 человек
[01:28.680 --> 01:35.560]  отправить какую-то команду для участия в олимпиаде, но проблема в том, что олимпиада проходит очень
[01:35.560 --> 01:41.680]  далеко, там где-нибудь в Австралии, хочется, чтобы команда была поменьше, ну потому что иначе придется
[01:41.680 --> 01:47.760]  платить очень большие деньги за билеты и так далее. Вот, а с другой стороны, хочется командно выступить
[01:47.760 --> 01:55.720]  хорошо, то есть надо, чтобы в этой команде присутствовали представители, ну так сказать, лучших, то есть надо,
[01:55.720 --> 02:01.560]  чтобы по каждому предмету мы выбрали каких-то лучших и из них отправили по представителю. Вот это
[02:01.560 --> 02:07.480]  вот мотивировка для задачи о покрытии ребер гиперграфов вершинами, и это встречается в очень
[02:07.480 --> 02:14.080]  многих практических вопросах. Давайте я дам формальное определение уже. Вот у нас есть гиперграф,
[02:14.080 --> 02:28.680]  у него есть вершины, есть ребра. Ну, может быть, мне немножко будет удобнее в этом месте обозначать
[02:28.680 --> 02:34.680]  вершины не так, как вот они, буквой В, и ребра тоже не совсем буквой Е, мне просто так привычнее как-то
[02:34.680 --> 02:40.920]  в контексте именно этой науки. Давайте я введу такое обозначение R красивое с индексом N,
[02:40.920 --> 02:46.880]  но это будет просто множество натуральных чисел от единицы до N, которые я без ограничений
[02:46.880 --> 02:53.760]  общности буду считать вершинами гиперграфа, это и есть множество В. Ну, просто конечное множество
[02:53.760 --> 03:00.480]  вершин, вот оно состоит из N элементов. Можно считать, что это первый N натуральных чисел. А ребра
[03:00.480 --> 03:08.040]  я буду обозначать вот так. Буква М красивая, это множество ребер, то есть М вместо Е, ну так,
[03:08.040 --> 03:14.280]  для определенности в рамках этой темы я буду использовать другое обозначение. А сами, сами
[03:14.280 --> 03:27.160]  ребра буду обозначать тоже красивыми, но прямыми буквами М. Ну, их будет какое-то количество С. Ну,
[03:27.240 --> 03:31.440]  вообще, я всегда буду писать именно эти буквы, потому что мне так удобнее, вам легче будет запоминать,
[03:31.440 --> 03:40.040]  что происходит. У нас есть N вершин, у нас есть S ребер. Ну, давайте, в общем случае, гиперграф не
[03:40.040 --> 03:46.120]  обязательно однородный. В общем случае, вот эти М-ки могут иметь разные мощности, поэтому,
[03:46.120 --> 03:54.760]  давайте, я пока не буду вводить обозначение для мощностей. Пока мы ничего не говорим про соотношение
[03:54.760 --> 04:07.680]  между параметрами, С и N там они какие угодно. Нет, ну, мы задали набор ребер. М красивое,
[04:07.680 --> 04:16.120]  это то же самое, что Е. Просто набор ребер. То есть, вот эти М и Т это под множество ВРН,
[04:16.120 --> 04:24.560]  а оно же множество вершин. Задали какой-то набор ребер, и всё. Новые, так сказать, может быть,
[04:24.560 --> 04:28.720]  привычные, может, не очень привычные обозначения для гиперграфа. Привел просто ничего больше.
[04:28.720 --> 04:39.840]  Вот, ну, пока он не обязательно однородный, давайте назовём вершинным покрытием. Оно же система
[04:39.840 --> 04:52.120]  представителей или общих представителей. Так, вершинное покрытие. Ну, для нас будет более
[04:52.120 --> 05:01.560]  характерный термин SOP. Система общих представителей. SOP. Система общих представителей. Вершинное
[05:01.560 --> 05:08.160]  покрытие гиперграфа или система общих представителей для вот этой совокупности множеств. Это
[05:08.160 --> 05:23.640]  любое множество вершин. Любое С. Вот здесь С большое из РН. Такое, что для любого И М и Т,
[05:23.640 --> 05:37.080]  пересечённое с С, не пусто. Ну, то есть, в терминах задачи про Олимпиаду речь идёт о чём. Что мы
[05:37.080 --> 05:45.080]  выбираем, условно говоря, из наших Н человек, у нас Н человек всего, вообще всего, студентов или
[05:45.080 --> 05:52.160]  школьников, Н человек. Мы выбираем из них лучших, условно говоря, комбинаторчиков и образуем из этих
[05:52.160 --> 05:58.600]  лучших комбинаторчиков множество М1. Потом выбираем лучших, не знаю, геометров и образуем из них
[05:58.600 --> 06:04.680]  множество М2. И так далее, пока не переберём все предметы, которые для нас актуальны. Вот их С
[06:04.680 --> 06:13.240]  штук, С предметов. Система общих представителей – это команда. То есть, это набор таких вершин,
[06:13.240 --> 06:20.440]  набор таких людей вот в этой конкретной интерпретации, что для любого предмета существует человек в
[06:20.440 --> 06:30.320]  команде, который является одним из лучших по этому предмету. Содержат по представителю из каждого
[06:30.320 --> 06:35.960]  множества. Ну, мы будем в основном заниматься случаем всё-таки К однородных гиперграфов. Здесь
[06:35.960 --> 06:45.960]  К будет мерой однородности. То есть, мы будем считать, что мощность Митова равняется К для
[06:45.960 --> 06:52.000]  любого И. Но это не обязательно. То есть, задачу можно, конечно, формулировать и не так. Мы для
[06:52.000 --> 06:57.400]  определённости будем рассматривать случаи, когда гиперграф К однороден или совокупность множеств
[06:57.400 --> 07:05.160]  просто состоит из К элементных подмножеств Н элементного множества, каковых С штук. Три параметра.
[07:05.160 --> 07:12.120]  Объемлющее множество множества вершин имеет мощность Н. Каждое подмножество, оно же ребро
[07:12.120 --> 07:21.440]  гиперграфа, имеет мощность К. Ну а самих этих ребер С штук. Всё. Так, ну в чём вопрос? Вопрос,
[07:21.440 --> 07:27.600]  конечно, в минимизации мощности вот этого множества С. И если говорить в терминах
[07:27.600 --> 07:32.520]  сложности вычислений, которые у вас формально ещё не было, ну в терминах теории алгоритмов,
[07:32.520 --> 07:40.800]  то отыскание минимального С это, вообще говоря, трудная задача. Скорее всего, для неё нет
[07:40.800 --> 07:47.200]  полинамиального алгоритма, а задача, конечно, важная. Отыскание минимальной мощности вот этого С
[07:47.200 --> 07:52.480]  это задача трудная. А хочется минимизировать команду, ну, например, потому что Олимпиада
[07:52.480 --> 08:02.560]  в Австралии. Вот, давайте tau от M вот этого красивого, ну или от гиперграфа, можно по-разному
[08:02.560 --> 08:12.120]  обозначать tau от множества ребер. Это у нас будет как раз минимальная мощность системы общих
[08:12.120 --> 08:21.240]  представителей для этой совокупности. Вот сейчас мы будем обсуждать, какие возможны оценки для этой
[08:21.240 --> 08:26.960]  минимальной мощности и какие возможны, в том числе, алгоритмические подходы для того, чтобы эти
[08:26.960 --> 08:32.800]  оценки реализовать. Но на самом деле алгоритм здесь, как это не забавно, уже один раз с нами
[08:32.800 --> 08:39.400]  обсуждавшееся в прошлом семестре, это жадный алгоритм, и он очень хорошо здесь работает,
[08:39.400 --> 08:45.400]  в очередной раз доказывая, что на почти всех ситуациях даже банальный жадный алгоритм
[08:45.400 --> 08:50.920]  срабатывает очень круто. Он быстрый при этом, понимаете. Срабатывает круто в каком смысле,
[08:50.920 --> 08:57.880]  это мы поймем постепенно, не сразу. Давайте обсудим какие-нибудь простейшие утверждения. Вот
[08:57.880 --> 09:04.400]  какое, например, можно сразу сделать утверждение. Я не буду их нумеровать, утверждение. Что можно
[09:04.400 --> 09:14.200]  точно сказать? Точно можно сказать, что вообще, тривиальным образом, для любых n, s и k, и для
[09:14.200 --> 09:22.160]  любой совокупности m с этими параметрами... Понятно, что совокупность m с параметрами n,
[09:22.160 --> 09:28.240]  s, k. Ну вот так. N вершин, s элементов самой совокупности, то есть ребра, и каждая мощность
[09:28.240 --> 09:36.800]  k. Для любой совокупности с любыми совершенно параметрами tau от m не превосходит минимума.
[09:36.800 --> 09:44.640]  Ну, я могу написать совсем идиотскую оценку, написать n запятая s, но это, наверное, будет
[09:44.640 --> 09:53.080]  совсем издевательством. Я напишу s, но запятая не n, а n-k плюс 1. Чуть-чуть получше. Значит,
[09:53.080 --> 09:58.600]  первый элемент минимум, это трив абсолютный, потому что мы просто из каждого множества берем по
[09:58.600 --> 10:04.040]  элементу. У нас нет задачи выбрать различные представители, как в известной проблеме о
[10:04.040 --> 10:10.720]  мрежах и так далее. Знаете, там в двудольных графах иногда берут систему различных представителей.
[10:10.720 --> 10:17.200]  Это нас не интересует, поэтому если в какой-то момент мы исчерпаем все элементы и нечего будет
[10:17.200 --> 10:23.800]  брать. Но, слава богу, значит, мы взяли только меньше. Нам же меньше надо. Так что s это тривиальная
[10:23.800 --> 10:30.200]  верхняя оценка, n, конечно, само по себе тоже тривиальная верхняя оценка. Если мы всех отправим на
[10:30.200 --> 10:37.040]  Олимпиаду, естественно, мы всех лучших туда отправим. Так что это не вопрос. Но n-k плюс 1
[10:37.040 --> 10:46.360]  тоже очевидно верно, коль скоро каждое множество мощности k. Потому что возьмите любые n-k плюс 1
[10:46.360 --> 10:57.480]  вершины. Вообще любые. Например, вершины 1, 2 и так далее n-k плюс 1. У вас вот здесь останется только
[10:57.480 --> 11:04.960]  k-1 вершина. Сюда целиком не одно множество из нашей совокупности, то есть ни одно ребро не залезет.
[11:04.960 --> 11:12.760]  Ясно, что какой бы ни была наша совокупность, все ее ребра хоть что-нибудь отсюда, вот из этих
[11:12.760 --> 11:20.080]  первых n-k плюс 1 элементов доцепляют. Хоть один элемент они отсюда берут. Ну все, значит, это система
[11:20.080 --> 11:26.800]  представителей. Любое n-k плюс 1 элементное множество служит системой представителей для
[11:26.800 --> 11:39.960]  совокупности k-элементных подмножеств. Это совсем просто. Другое утверждение. Так, ну если вдруг кому-то
[11:39.960 --> 11:46.120]  не совсем просто, и если я как-то очень быстро рассуждаю, то лучше спрашивать. Другое утверждение.
[11:46.120 --> 11:51.160]  Как бы оценка в обратную сторону. В одну сторону мы написали для любой совокупности с параметрами.
[11:51.160 --> 11:56.760]  Есть такая оценка. Другую сторону. Это существует совокупность, которая все-таки не поддается
[11:56.760 --> 12:07.240]  слишком хорошей оценке. Есть утверждение такое. Для любых n-sk существует m с этими параметрами опять.
[12:07.240 --> 12:22.760]  Такая, что tau от m больше либо равняется… Плохо пишет. Ну ладно. Это не он плохо пишет.
[12:22.760 --> 12:30.400]  Наверное, доска помылась и пока не очень расписалась. Чисто это. Хорошо. Tau от m больше… Ну,
[12:30.400 --> 12:35.880]  к сожалению, тоже минимум. Это важно. Это я не описался. Тут лучше, конечно, максимум бы нарисовать,
[12:35.880 --> 12:44.280]  но вот, к сожалению, минимум. А минимум из каких величин? Сейчас скажу. s тоже. И целая часть от n поделить на k.
[12:44.280 --> 12:58.120]  Ну, то есть, по крайней мере, в каком-то смысле в тривиальной ситуации, когда s меньше, чем n поделить
[12:58.120 --> 13:07.080]  на k, все вообще получилось в каком-то ключе. То есть, мы знаем наихудший случай. Если s меньше, чем n поделить на k,
[13:07.080 --> 13:15.400]  тогда получается, что и всегда хватает s, и существует плохая ситуация, когда потребуется s. Но почему это верно?
[13:15.400 --> 13:26.600]  Построение такое. Берем просто множество 1, 2 и так далее k, потом k плюс 1 и так далее 2k. Ну и так далее,
[13:26.600 --> 13:33.480]  пока влезает в каком-то смысле. То есть, я обычно это всегда рассказываю так. У нас есть такая,
[13:33.480 --> 13:45.840]  знаете, условная кастрюля, в которой n позиции, а есть сардельки, каждая из которых состоит из k позиции,
[13:45.840 --> 13:54.440]  и мы эти сардельки раскладываем по дну кастрюльки, так чтобы они между собой не пересекались. Ну,
[13:54.440 --> 14:01.320]  понятно, что система представителей для такой совокупности множеств, она просто имеет мощность,
[14:01.320 --> 14:07.960]  равную количеству этих самых множеств, количеству сарделек, которые нам удалось так вот разложить.
[14:07.960 --> 14:16.600]  Но если s не больше, чем n поделить на k, вот в ней в каждой k элементов, если s не больше, чем n
[14:16.600 --> 14:23.560]  поделить на k, тогда мы спокойно положим s, сарделик, и получим совокупность, в которой как раз
[14:23.560 --> 14:33.200]  tau от m равняется s в точности. Но если вдруг s, вот внимание, сейчас очень важный момент, простой,
[14:33.200 --> 14:40.160]  но важный, если вдруг s больше, чем n поделить на k, то мы тупо разложим вот столько сарделек,
[14:40.160 --> 14:47.400]  и уже у нас для этой совокупности будет такая оценка, ну даже точное равенство. А потом просто
[14:47.400 --> 14:56.880]  докидаем сверху как угодно, чтобы стало s, если s больше, чем n поделить на k, то мы сверху докидаем
[14:56.880 --> 15:02.440]  еще так, чтобы действительно s получилось. Но система представителей может только увеличиться,
[15:02.440 --> 15:07.520]  уж по крайней мере не уменьшится, правда же? Поэтому как было tau от m больше или
[15:07.520 --> 15:12.800]  равной на k, так оно и останется. Нормально в таком темпе или надо подробнее что-то писать?
[15:12.800 --> 15:27.760]  Вроде это очень просто. Вот, но это тривиальные оценки, конечно, очень грубые, и конструкция
[15:27.760 --> 15:35.360]  здесь тривиальная, понятно, что может быть бывает что-то более сложное. Школьником я обычно в этом
[15:35.360 --> 15:40.800]  месте запускаю прямо жадный алгоритм на конкретном примере, там остается некая интрига, сейчас я
[15:40.800 --> 15:52.240]  этого ничего делать не буду. Я сейчас расскажу сразу общие теоремы. Значит, большая теорема,
[15:52.240 --> 16:00.080]  не сложная, но важная. Теорема один. Я даже не знаю, кто был первым, кто ее доказал, скорее всего
[16:00.080 --> 16:05.320]  Эрдерс с какими-то соавторами, но, в принципе, конечно, все, кто приходил к необходимости подсчета
[16:05.320 --> 16:10.360]  минимальной системы представителей, они, в общем, сразу придумывали, конечно, этот жадный алгоритм,
[16:10.360 --> 16:15.680]  запускали его и получали примерно такую же оценку. То есть в каком-то смысле теорема один,
[16:15.680 --> 16:24.720]  которую я сейчас сформулирую, это прям фольклор такой. Отверждение такое тоже для абсолютно
[16:24.720 --> 16:34.880]  любых NKS и для совершенно любой M. С этими параметрами можно написать такое неравенство.
[16:34.880 --> 16:50.000]  Неравенство tau от m не превосходит максимума, не минимума, максимума. Из двух величин n на k
[16:50.000 --> 17:01.280]  и n на k помножить на логариф натуральный sk на n. Дальше еще надо прибавить снова n поделенное
[17:01.280 --> 17:15.840]  на k и снова еще единичку. Ну, я прокомментирую, потому что выглядит чуть-чуть все-таки устрашающе,
[17:15.840 --> 17:21.200]  главное непонятно, может быть, на первый взгляд. А что это за максимум? Тут n на k,
[17:21.200 --> 17:28.400]  тут n на k, да еще на что-то умножается. Наверное, максимум-то тут, да? Ну, в каком-то смысле вы правы,
[17:28.400 --> 17:33.840]  содержательная часть вот это. Она нетривиальная, потому что в утверждениях, которые мы только что
[17:33.840 --> 17:41.320]  доказали, случаи, когда максимум достигается, вот тут фактически разобраны. А именно, что значит
[17:41.320 --> 17:46.960]  максимум достигается на первой величине, а не на второй? Это значит, что логарифм, ну, хотя бы
[17:46.960 --> 17:54.840]  меньше единицы. Логарифм может быть меньше единицы, если дробь, стоящая под логарифм, меньше, чем е.
[17:54.840 --> 18:02.960]  Ну, а если она еще и меньше единицы, ну, что примерно то же самое, так, в масштабах вечности, если она
[18:02.960 --> 18:08.160]  еще и меньше единицы, это дробь сама, то логарифм вообще отрицательный. То есть, да, действительно может
[18:08.160 --> 18:16.200]  вот здесь находиться максимум двух величин. Но что значит дробь меньше единицы? Что такое sk на n
[18:16.200 --> 18:23.240]  меньше одного или там меньше, чем e, неважно на самом деле. Это значит в точности, что s меньше,
[18:23.240 --> 18:30.000]  чем n поделить на k. Но я же говорил, когда s меньше, чем n поделить на k, задача промаксимизации
[18:30.000 --> 18:39.320]  худшего случая, она полностью решена. Просто максимум равен s и все. В худшем случае придется
[18:39.320 --> 18:44.280]  отправить s человек на Олимпиаду, и тут ни о чем говорить. Сколько предметов вам нужно представить,
[18:44.280 --> 18:50.120]  столько человек вы отправите на Олимпиаду. То есть при s меньше, чем n на k и говорить не о чем. Ну,
[18:50.120 --> 18:56.760]  en на k, просто n на k, это уже такая мизерная составляющая. По порядку, конечно, вот эта вот
[18:56.760 --> 19:04.120]  главная величина, как только s становится больше, чем n поделить на k или сильно больше. А вы же
[19:04.120 --> 19:12.320]  понимаете, s может дотягиваться даже до c из n по k. Вот это вы понимаете, да? Если мы рассматриваем k
[19:12.320 --> 19:19.520]  элементные под множество n элементного множества, то их количество вполне может оказаться и c из n
[19:19.520 --> 19:25.680]  по k. Нет, оно может даже больше оказаться, если говорить в терминах Олимпиады. Ну, представьте
[19:25.680 --> 19:31.960]  себе, что лучшие комбинаторчики и лучшие геометры образуют одно и то же множество. Но мы все-таки
[19:31.960 --> 19:37.840]  рассматриваем не кратные ребра. Какой смысл? Для системы представителей это неважно, кратные они
[19:37.840 --> 19:47.800]  или нет. Я понятно говорю? То есть понятно, что s всегда не больше, чем c из n по k, но сама вот эта
[19:47.800 --> 19:54.320]  величина, она может расти экспоненциально по n, когда k само порядка n, например. Она может расти
[19:54.320 --> 20:01.400]  как n в степени k, если k относительно маленькая там от n в квадрате, от корни из n. Она может
[20:01.400 --> 20:08.160]  очень по-разному расти. То есть s больше, чем n на k гораздо чаще, чем s меньше, чем n на k. И вот
[20:08.160 --> 20:14.720]  в этом случае, конечно, подчеркнутая величина здесь симпатически доминирующая. В большинстве
[20:14.720 --> 20:21.040]  ситуаций, в большинстве конкретных приложений, вторая величина под знаком максимума действительно
[20:21.040 --> 20:27.080]  максимально и вообще доминирует по отношению к первой величине и к вот этим вот двум паразитическим
[20:27.080 --> 20:34.400]  слагаемым. То есть, конечно, содержательная это вот n-к алгорифма скане. Так, теперь мы идем в сторону
[20:34.400 --> 20:45.760]  доказательства. Ну, прежде чем запускать уже не раз обещанный жадный алгоритм, давайте я отделюсь
[20:45.760 --> 20:51.960]  от некоторых тривиальностей. То есть вот рассмотрю два случая, в которых нелепо запускать жадный
[20:51.960 --> 21:00.040]  алгоритм, но которые тоже могут теоретически иметь место. Значит, первый случай, ну вот я уже его
[21:00.040 --> 21:07.640]  написал, s меньше либо равен n поделить на k. То есть, алгоритм отрицательный, это дурацкий
[21:07.640 --> 21:18.520]  случай. Ну, в этом случае, в этом случае просто говорим, что tau от m меньше либо равняется s.
[21:18.520 --> 21:29.640]  Ну, то есть, не потому tau от m не превосходит s, что s не больше, чем n поделить на k, а просто
[21:29.640 --> 21:35.880]  если s не больше, чем n поделить на k, мы пользуемся вот этой тривиальной оценкой, которая в одном из
[21:35.880 --> 21:43.160]  утверждений была, и дальше пользуемся уже вот этим предположением, и с огромным запасом получаем то,
[21:43.160 --> 21:51.360]  что утверждается в теории. Ну, огромным, не огромным, там в два раза точно. Вот, так что первый
[21:51.360 --> 21:58.200]  случай тривиально. Второй случай, давайте возьмем тоже другую крайность. s настолько велико, вот
[21:58.200 --> 22:05.440]  настолько большим оказалось, что вот это произведение, которое мы считаем более содержательным, вот это
[22:05.440 --> 22:16.440]  произведение больше либо равняется n. Ну, может такое теоретически случиться. В этом случае пользуемся
[22:16.440 --> 22:23.840]  оценкой tau от m меньше либо равняется n-k плюс 1, ну, или просто меньше либо равняется n, не важно,
[22:23.840 --> 22:31.680]  просто тупо пользуемся оценкой tau не превосходит, ну, а n же оно не превосходит в рамках случая нашей
[22:31.680 --> 22:38.920]  вот этой величины. Продолжаем неравенство за счет условия случая и опять получаем с запасом утверждение
[22:38.920 --> 22:47.600]  теоремы 1. Все, мы ограничились от двух таких вот, ну, совсем граничных кривых случаев, в которых
[22:47.600 --> 22:54.920]  и так все очевидно. Поэтому мы можем считать, что, во-первых, s больше, чем n поделить на k и, во-вторых,
[22:54.920 --> 23:03.400]  n меньше, чем n на k в логарифме с k на n. Ну, или что то же самое, k меньше, чем логарифм с k на n.
[23:03.400 --> 23:16.280]  Вот здесь запускаем жадный алгоритм, то есть нам дана совокупность какая-то m, состоящей из
[23:16.280 --> 23:28.960]  ребер множеств m1, ms. И мы выбираем такой элемент из множества rn объемлющего, выбираем такой
[23:28.960 --> 23:38.920]  элемент, который содержится в самом большом количестве вот этих множеств. Ну, я не могу,
[23:38.920 --> 23:46.720]  как называется, не могу удержаться, наоборот. Не могу удержаться от обычной своей метафоры,
[23:46.720 --> 23:53.040]  если можно так выразиться, которую я употребляю при рассказе про эту задачу. Конечно, у нас по-прежнему
[23:53.040 --> 24:02.520]  в кастрюле находятся сардельки. Мы берем шампур и начинаем тыкать в эту кастрюлю, пока не найдем ту
[24:02.520 --> 24:11.560]  точку, в которой больше всего сарделик на шампур насядит. Вот это точка, которую мы жадно возьмем. Это
[24:11.560 --> 24:18.160]  будет первый элемент системы представителей. Ну, я сейчас формально напишу. Ладно, товарищи,
[24:18.160 --> 24:32.720]  значит, возьмем nu1 принадлежащий rn такой, что количество i таких, что nu принадлежит mi тому,
[24:32.720 --> 24:45.960]  nu1 принадлежит mi тому, вот количество таких i, ну давайте я напишу так, равно максимуму по всем
[24:45.960 --> 24:58.480]  nu количество таких i, что nu принадлежит mi тому. Максимально громоздко, но зато точно понятно. Ну,
[24:58.480 --> 25:04.840]  я, конечно, мог написать argmax, если вы знаете такое обозначение, тогда было бы чуть короче. Аргумент
[25:04.840 --> 25:12.560]  максимума, то есть точка, на которой достигается максимум. nu1 это одна, любая причем, из тех точек,
[25:12.560 --> 25:20.000]  на которой достигается вот этот максимум. Неформально, да, вот тыкаем шампуру, мы ищем то nu,
[25:20.000 --> 25:30.680]  где шампур посадит самое большое количество сарделик на себя. Ну, их может быть несколько,
[25:30.680 --> 25:35.840]  да, с максимальным количеством, выбираем любое абсолютно, но угад. Можно первое,
[25:35.840 --> 25:43.160]  например, по щеке, неважно. Вот, это строится система представителей, нашли такой элемент nu1.
[25:43.160 --> 25:53.360]  Давайте теперь обозначим через ro1 вот эту величину. Ведем такое обозначение ro1. Ну,
[25:53.360 --> 26:02.320]  то есть сколько сарделик зацепил этот шампур. Я утверждаю, что ro1 точно не меньше, чем sk
[26:02.320 --> 26:12.560]  поделить на n. Вот откуда берется sk поделить на n. Под логарифмом уже понятно. Ну, я не знаю,
[26:12.560 --> 26:19.320]  можно это формально обосновать с помощью двойного счета, но давайте я вернусь к кастрюле. По-моему,
[26:19.320 --> 26:26.200]  и так понятно, чем писать всякие суммы индикаторов. Можно просто вот так нарисовать как-то. Вот эти
[26:26.200 --> 26:34.240]  сардельки, они варятся, они уже пересекаются как-то. Вот мы отделим сверху такую, накроем,
[26:34.240 --> 26:45.960]  как называется, крышкой эту кастрюлю. Высота здесь будет как раз вот эта ro1. По ro1 отграничим, да,
[26:45.960 --> 26:53.360]  все поместится. Вот. Но мы так разложили сейчас эти сосиски, что они же между собой не пересекаются,
[26:53.360 --> 26:59.160]  конечно. В реальности сосиски пересекаться не могут. Мы их специально так кучками разложили,
[26:59.160 --> 27:06.800]  чтобы они не пересекались. Вот. Поэтому суммарное количество элементов в этом прямоугольнике это
[27:06.800 --> 27:13.240]  с одной стороны ro1, помноженное на n в точности, а с другой стороны это не меньше, чем s, умноженное
[27:13.240 --> 27:22.760]  на k. У нас вот в этом прямоугольнике размер ro1 умножить на n содержится ks, извините, сарделик,
[27:22.760 --> 27:30.440]  каждая мощность k. Ну, то есть получается, что ro1 на n больше либо равняется sk, откуда и выходит вот
[27:30.440 --> 27:37.600]  это неравенство. Но это можно формально написать, сказав, пусть есть индикатор принадлежности
[27:37.600 --> 27:44.240]  элемента. Множество просуммируем по всем элементам и по всем множествам. Один раз сначала фиксируем
[27:44.240 --> 27:50.280]  множество, потом элемент, а другой раз сначала фиксируем элемент, потом множество. Ну и получим
[27:50.280 --> 27:56.200]  это неравенство. Это в общем принцип Дерехле простой, двойной счет такой. Вот. Ну, ro1 больше либо
[27:56.200 --> 28:01.960]  равняется sk. Когда вы это применяете к каким-то конкретным задачкам, вот у вас есть конкретное
[28:01.960 --> 28:08.040]  число людей, конкретные размеры этих множеств, лучших комбинаторщиков, геометров и так далее,
[28:08.040 --> 28:16.400]  вы еще здесь можете нарисовать верхнюю целую часть. Всегда. Но ro1 же целое число. Но для наших
[28:16.400 --> 28:21.440]  текущих нужд, для доказательства теоремы, это повредит, потому что очень трудно потом будет
[28:21.440 --> 28:28.320]  проделывать аккуратные вычисления, а на асимптотики в каком-то смысле это не скажется. Поэтому вы должны
[28:28.320 --> 28:33.360]  понимать, что если вы честно запускаете на конкретном примере алгоритм, конечно берите здесь целую часть,
[28:33.360 --> 28:38.920]  выкидываете все, что получилось и продолжаете этот алгоритм. А здесь в доказательстве никакую целую
[28:38.920 --> 29:00.600]  часть рисовать не станем. Вот. Все. Мы что делаем? Мы берем, удаляем из m все ro1 множества, которые сели на
[29:00.600 --> 29:07.960]  элемент nu1. Все. Мы для этих множеств представителя нашли. Можно их спокойно удалить. У нас остается,
[29:07.960 --> 29:18.760]  давайте я это обозначу, совокупность m1 после удаления. И давайте я ее мощность обозначу s1.
[29:18.760 --> 29:30.920]  Ну, s1 это, конечно, s-ro1. Было всего s множеств, мы ro1 удалили, осталось s-ro1. Ну, просто введем
[29:30.920 --> 29:52.120]  такое обозначение s1 для этой разности. Чего больше. Вот. Ну и все. Снова жадно ищем nu2, ro2 будет не меньше,
[29:52.120 --> 30:04.240]  чем s1k. Так, понимаешь такое ro2? nu2 это какой-то элемент, ну nu2, естественно, уже не равен nu1,
[30:04.240 --> 30:11.880]  nu1 мы тоже выкидываем. Вот. Жадно ищем nu2, на котором сидит максимальное количество множества
[30:11.880 --> 30:17.000]  zm1. С вашего позволения уже эти обозначения я не буду формально выписывать, но понятно,
[30:17.000 --> 30:25.000]  то о чем идет речь. Можно поделить на n-1 даже, потому что nu1-то мы удалили, и у нас остался выбор
[30:25.000 --> 30:31.400]  только из n-1 элемента. И опять напоминаю, можно навесить верхнюю целую часть. Для конкретных
[30:31.400 --> 30:38.160]  чиселок это очень важно. Для наших асимпатических будущих нужд можно тупо написать, что это больше,
[30:38.160 --> 30:46.040]  чем s1k на n, и на этом успокоиться. Ну, больше и больше. Мне вот лень таскать за собой какие-то
[30:46.040 --> 30:56.080]  n-1, потом n-2 будет, еще что-то. В общем, и так далее. Всего делаем n-большое шагов,
[30:56.080 --> 31:08.040]  выбирая на каждом из них очередной элемент nu1, nu2 и так далее, где n-большое это целая
[31:08.040 --> 31:26.240]  часть n на k логарифм sk на n плюс 1. Вот то самое n на k логарифм sk на n, и еще плюс 1. Поскольку
[31:26.240 --> 31:36.320]  мы находимся в рамках текущего случая, я могу тут показать, что n у нас меньше, чем n на k логарифм
[31:36.320 --> 31:45.840]  sk на ns больше, чем n на k, то, конечно, вот это n-большое не меньше единицы. Один шаг мы точно
[31:45.840 --> 31:53.960]  сделаем, вот как мы и описывали. Ну, а с другой стороны, оно не больше, чем n на k логарифм sk на
[31:53.960 --> 32:09.320]  n плюс 1. Ну, это понятно. Ну, еще можно сказать, что оно не меньше, чем n на k логарифм sk на n. Ну,
[32:09.320 --> 32:22.720]  как любая целая часть x, она не больше, чем сам x и не меньше, чем x-1. Да, n-большое мы сами вот так
[32:22.720 --> 32:29.000]  выбрали, взяли и зафиксировали вот таким. Сейчас все получится. Мы уже вот столько элементов в
[32:29.000 --> 32:35.880]  систему представителей набрали. Если мы набрали столько элементов в систему представителей,
[32:35.880 --> 32:44.480]  значит на выходе у нас осталось в наших обозначениях s с индексом n множество. Ну,
[32:44.480 --> 32:50.360]  после первого шага осталось s1, после второго там будет s2, после n-ого останется sn. Чисто
[32:50.360 --> 32:59.360]  формально. Sn это как и раньше, sn-1 вот сравнивайте с вот этим, смотрите сюда. Ну, тут было s,
[32:59.360 --> 33:09.000]  но s можно считать это s0. Наш исход на s это как bs0. Вот, поэтому всегда будет sn-1, а здесь минус
[33:09.000 --> 33:18.440]  ρ1. Ну, значит в общем случае будет минус ρn. Причем, ну где написать, давайте вот здесь,
[33:18.440 --> 33:32.640]  ρn больше либо равняется sn-1 k на n. Сравнивайте вот здесь, ρ2 больше либо равняется s1 k на n,
[33:32.640 --> 33:42.200]  ρ1 больше либо равняется s0 k на n, ρn больше либо равняется sn-1 k на n, минус,
[33:42.200 --> 33:57.240]  поэтому меньше либо равняется sn-1, минус sn-1 k на n, выносим sn-1 за скобку, в скобках остается 1-k на n.
[34:02.640 --> 34:12.000]  Спеваете? Нет, ну дальше то же самое, то есть это мы просто начинаем итерировать, sn-1
[34:12.000 --> 34:19.520]  естественно оценивается также, но уже как sn-2 и еще выделяется такой же саммножитель. То есть
[34:19.520 --> 34:26.960]  мы можем продолжить вот так, многоточие, в конце будет s0, но оно просто s у нас обозначено,
[34:26.960 --> 34:36.240]  просто s это наше исходное количество множеств, умноженное на 1-k на n, в степени n большое,
[34:36.240 --> 34:48.320]  плохо написалось, вот так, s. Ну я специально выписал все неравенства, n большое, например,
[34:48.320 --> 34:54.040]  больше либо равняется вот этого. Поскольку оно стоит в показателе числа меньшего единицы,
[34:54.040 --> 35:01.160]  то знак неравенства вот в такую сторону. Ну давайте сюда перейдем, меньше либо равно
[35:01.160 --> 35:20.760]  s, 1-k на n, в степени n на k, логариф натуральный, ск на n. Ась, правильно? Стандартная оценка 1-x не
[35:20.760 --> 35:30.120]  больше, чем е в степени минус x, сто раз пользовались, это не больше, чем s на е в степени
[35:30.120 --> 35:38.080]  минус ск на n, это е в степени минус x. И дальше мы это возводим еще вот в эту степень, смотрите
[35:38.080 --> 35:49.080]  какая красота, n на k, логарифм ск на n. Ну они так специально подобрали, чтобы сократиться.
[35:49.080 --> 35:56.040]  Но сейчас еще тетрис просыпется так, вот они так проваливаются, n на k, ск на n. Они гелировали
[35:56.040 --> 36:03.480]  е в степени логарифм ск на n, это что, это ск на n, правильно? Но он с минусом тут, логарифм-то,
[36:03.480 --> 36:13.000]  то есть это не ск на n, а n на ск. Ну еще s надо вот это написать, а тут будет n на ск. И вот вам
[36:13.000 --> 36:22.720]  еще шлеп-шлеп и катарсис, потому что вот вам n на k. Что получилось? Получилось, что в результате
[36:22.720 --> 36:29.640]  построения не более чем такого количества элементов SOP, система общих представителей,
[36:29.640 --> 36:38.200]  мы выкинули столько множеств, что на выходе осталось не более чем столько множеств, еще
[36:38.200 --> 36:43.640]  не представленных. Вот мы задействовали не более чем столько представителей в команде,
[36:43.640 --> 36:51.200]  а нам еще осталось представить не больше, чем столько групп, не больше, чем столько рёбер множеств.
[36:51.200 --> 37:01.520]  Ну здесь воспользуемся тупой оценкой, из каждого возьмем по представителю. Все, у нас получается,
[37:01.520 --> 37:16.040]  что tau от m не больше чем n на k, логарифм ск на n плюс 1 и плюс n на k. Это отсюда. В аккурат
[37:16.040 --> 37:22.240]  то, что было заявлено в теореме. Максимум сейчас достигается как раз вот тут, плюс 1 плюс n на k,
[37:22.240 --> 37:32.240]  ну или плюс n на k плюс 1. Прям четко вот в точности вписались в утверждение теоремы. Доказал вроде бы.
[37:42.520 --> 37:49.120]  Ну вот сейчас будем создавать пафос этому утверждению, не только красоту доказательства,
[37:49.120 --> 37:57.280]  но и пафос, состоящий в том, что это утверждение в каком-то смысле не улучшаемо. Ну то есть улучшаемо,
[37:57.280 --> 38:04.960]  конечно. Вон там мы много где огрубили, можно было верхние целые части брать, и на n делить,
[38:04.960 --> 38:10.080]  а на n минус 1, на n минус что-то. Понятно, что в конкретных ситуациях какие-то улучшения,
[38:10.080 --> 38:16.960]  безусловно, возможны, но в каком-то смысле результат не улучшаем. Сейчас я сформулирую и,
[38:16.960 --> 38:22.560]  наверное, даже, может быть, успею доказать теорему совершенно конструктивную, без всякого
[38:22.560 --> 38:33.280]  вероятностного метода работающего. Теорема два. Ждать следующее. Пусть, ну я, может быть,
[38:33.280 --> 38:39.120]  с каким-то запасом возьму, ну n больше либо равняется 4. Чуть-чуть тут надо будет все-таки
[38:39.120 --> 38:44.800]  уже некоторые условия на n, s и k написать. Н, s и k в этой теореме будут не любые, а с некоторыми
[38:44.800 --> 38:55.440]  небольшими ограничениями. Пусть n больше либо равняется 4, k не превосходит n на 4. И s таково,
[38:55.440 --> 39:15.160]  что... Так, ну давайте логарифм s, k на n больше либо равняется. Я думаю, что 2 хватит. Ну,
[39:15.160 --> 39:23.760]  ну давайте напишем 2, может и хватит. Если вдруг не хватит, ну я обычно 4 писал, не важно. Логарифм
[39:23.760 --> 39:30.480]  s, k на n такой относительно большой. Ну, то есть на самом деле это не очень большие, не очень
[39:30.480 --> 39:38.840]  ограничительные утверждения. Почему? Потому что мы... Ну, здесь вообще ерунда какая-то. Боже мой,
[39:38.840 --> 39:45.600]  n больше либо равно 4. Чего там обсуждать? А вот это вот ограничение не сильно ограничительно,
[39:45.600 --> 39:50.760]  потому что мы хотим, конечно, работать вот с этой ситуацией. Логарифм больше, то есть мы хотим,
[39:50.760 --> 39:56.560]  чтобы максимум был здесь. Если максимум тут, мы разобрались еще в рамках утверждений,
[39:56.560 --> 40:01.800]  тут неинтересно. Интересно понять ситуацию, когда логарифм на самом деле большой. Ну,
[40:01.800 --> 40:07.320]  тут, наверное, надо еще сказать, что k, конечно, не превосходит, не превосходит k, но это понятно,
[40:07.320 --> 40:15.000]  что мы же пишем логарифм поделенный на k, то есть надо, чтобы эта оценка была не тривиальной. Ну,
[40:15.000 --> 40:19.960]  в общем, это вообще никакое не ограничение, это понятно, а это какое-то ограничение,
[40:19.960 --> 40:31.520]  но несущественное. Так вот, в этих условиях тогда существует m с параметрами nks такая,
[40:31.520 --> 40:39.000]  что ее tau... Я тоже с очень большим запасом сейчас напишу оценку. Ну, вот так я пишу.
[40:39.000 --> 40:50.840]  Одна тридцать вторая число зубов умножить на n на k на логарифм sk на n. Вы сейчас поймете,
[40:50.840 --> 40:57.840]  откуда степень двойки, она, конечно, уж точно не от того, что зубы так растут во рту. Дело в том,
[40:57.840 --> 41:02.400]  что доказывая эту теорию, мы будем использовать довольно грубое неравенство следующего вида,
[41:02.400 --> 41:08.000]  это я пишу на будущее. Мы будем вот такое неравенство использовать, но которое верно,
[41:08.000 --> 41:16.160]  конечно, если х больше либо равно единице. При х больше либо равном единице. Мне ужасно не
[41:16.160 --> 41:23.200]  хочется писать итоговую оценку в виде что-то, минус что-то, минус что-то, а если оценивать целую
[41:23.200 --> 41:31.440]  часть не грубо, но величиной х-1, тогда вот эти минусы там полезут, будет очень дурацкая оценка,
[41:31.440 --> 41:38.720]  незапоминаемая. Но пафос-то виден. Для практически всех возможных параметров nsk,
[41:38.720 --> 41:45.920]  при которых максимально вот именно эта часть верхней оценки из теоремы 1, эта теорема, если и
[41:45.920 --> 41:53.640]  улучшаема, то лишь в константное число раз. То есть nsk могут быть колоссальными, эта величина может
[41:53.640 --> 42:00.880]  квадриллион быть, там, 10 в степени, 10-10 тысяч раз, что хотите, понимаете. А константы одна и та же
[42:00.880 --> 42:05.960]  для всех. И я повторяю, там можно, если очень постараться, до одной четверти, наверное, дотянуть,
[42:05.960 --> 42:11.720]  ну то есть это очень грубая оценка. Но до единицы дотянуть в этом рассуждении не удастся. Вот это
[42:11.720 --> 42:16.200]  можете для себя как-то пометить, посмотреть потом на рассуждение, убедиться в том, что ну да,
[42:16.200 --> 42:21.760]  все-таки прямо единицей тут не обойтись. Ну это, в общем, и не удивительно, потому что в верхней оценке
[42:21.760 --> 42:29.720]  тоже есть какие-то добавки. Позже мы поймем, что в некоторых чуть более ограничительных ситуациях 1.32
[42:29.720 --> 42:36.440]  или 1.4, которую здесь можно написать, удастся заменить на любое 1-эпсилом, то есть на 1 плюсом
[42:36.440 --> 42:42.600]  малое от единицы. Но давайте не забегать вперед, зато здесь будет совершенно явная конструкция. То есть
[42:42.600 --> 42:48.320]  вот эта вот совокупность m, которая обладает указанным свойством, и свидетельствует уже о мощи
[42:48.320 --> 42:58.920]  вот этого алгоритма жадного, о том, что он, если и ошибается, то не более чем в 4-32 раза. Вот эта
[42:58.920 --> 43:03.640]  конструкция, она будет совершенно явной. То есть мы прямо явно опишем, как строится эта совокупность.
[43:03.640 --> 43:11.800]  Сейчас вот я этим займусь. Так, поехали. Доказательства. Сейчас будем строить совокупность. В ней должно
[43:11.800 --> 43:17.920]  быть s множеств, каждое должно состоять из k элементов, но давайте начнем с некой вспомогательной
[43:17.920 --> 43:25.760]  конструкции, которая пока не совсем, отнюдь не совсем такая, мягко выражаясь, вспомогательная
[43:25.760 --> 43:31.440]  конструкция. Но вообще в итоге нам нужны, конечно, под множество n элементного множества, их должно
[43:31.440 --> 43:37.520]  быть s штук, и каждое должно состоять из k элементов. Что такое вспомогательная конструкция? Давайте
[43:37.520 --> 43:52.520]  введем вот такое m, это будет целая часть от 1 вторая логарифма с k на n. Ну, поскольку логарифм по
[43:52.520 --> 43:59.240]  условию не меньше двойки, то это натуральное число в классическом школьном смысле слова. Ну,
[43:59.240 --> 44:06.200]  то есть не меньше единицы, целое число не меньше единицы. Наверное, да, вот это вот двойки хватит,
[44:06.200 --> 44:14.760]  может четверка нужна, но по-моему двойки хватит. Значит, да, вот ввели такое такое число m. Давайте
[44:14.760 --> 44:24.080]  рассмотрим r с индексом 2m, ну или, чтобы понять не было, рассмотрим 2m элементное множество.
[44:24.080 --> 44:36.160]  Ну, зачем рассмотрим? Сейчас будет через какое-то время понятно, пока просто рассмотрим,
[44:36.160 --> 44:42.600]  вспомогательная конструкция. Давайте вот в этом 2m элементном множестве выберем все возможные
[44:42.600 --> 44:52.720]  под множество мощности m. Ну, как-то их хорошо бы обозначить. Давайте как-нибудь их обозначим,
[44:52.720 --> 45:05.160]  n1 и так далее, n с индексом c из 2m по m. Ну, их же столько, их c из 2m по m,
[45:05.160 --> 45:11.160]  правильно? Вот мы их все выберем оттуда, как-то занумеруем, неважно как, но вот в каком понятном
[45:11.160 --> 45:25.920]  порядке. Так, что про них можно сказать? Ну, так не особо много пока, что вот их мощность такая,
[45:25.920 --> 45:32.640]  вот их столько, пока не понятно. Но что-то можно сказать, например, можно сказать,
[45:32.640 --> 45:39.560]  какая tau у совокупности, которая составлена из этих множеств. Это совершенно, казалось бы,
[45:39.560 --> 45:46.360]  не те множества, которые нам нужны, потому что они отнюдь не k элементные. Понятно, они вообще
[45:46.360 --> 45:53.880]  непонятно, какое отношение пока к делу имеют, но легко сказать, какая у них tau. У них, хотя они вроде
[45:53.880 --> 46:02.000]  к делу отношения пока не имеют. Вот какая у них tau? Минимальная система представителей для совокупности
[46:02.000 --> 46:10.960]  всех возможных m элементных под множество 2m элементного множества. Если 2m элементное множество,
[46:10.960 --> 46:19.320]  оттуда все-все-все под множество выбрали. Какая минимальная сов? Очень простой вопрос, на самом деле.
[46:19.320 --> 46:31.960]  Вот если мы возьмем m каких-нибудь элементов, они образуют сов или нет? Возьмем вот отсюда и
[46:31.960 --> 46:41.520]  из этих 1 и так далее 2m произвольные m элементов. О, там правильный ответ появился. Ну не в зуме,
[46:41.520 --> 46:49.080]  а в ютубе. Правильный ответ появился. Если мы возьмем произвольные m элементов, то обязательно
[46:49.080 --> 46:54.920]  найдется дополнительные к ним еще m элементов, которые мы рассматриваем среди вот этих множеств,
[46:54.920 --> 47:01.080]  но которые с ними, с исходными этими m элементами не пересекаются. То есть ни одно множество из m
[47:01.080 --> 47:07.320]  элементов отсюда не может служить сов. Какое бы мы ни взяли, есть дополнительное к нему множество,
[47:07.320 --> 47:13.280]  присутствующее среди вот этих, которые с ним не пересекаются. А вот если мы возьмем любое
[47:13.280 --> 47:19.960]  m плюс 1 элементное под множество, причем тоже любое m плюс 1 элементное под множество. Мы сегодня уже
[47:19.960 --> 47:27.440]  такое рассуждение проводили, когда писали оценку tau не больше чем n-k плюс 1. Возьмем любое m плюс 1
[47:27.440 --> 47:33.120]  элементное под множество, и очевидно, любое m элементное под множество с ним уже пересекается.
[47:33.120 --> 47:40.920]  Поэтому tau равняется m плюс 1 в точности. Нам хватит того знания, что оно больше чем m или
[47:40.920 --> 47:50.800]  больше либо равно m. Лучше написать как есть, а потом просто загрубить. Теперь я из этой
[47:50.800 --> 47:57.760]  вспомогательной конструкции путем ее размножения сделаю почти уже то, что нужно, в каком-то смысле,
[47:57.760 --> 48:06.760]  но не почти то, что нужно, но так, близко к тому, что нужно. Я теперь возьму вот так 1 и так далее 2m,
[48:06.760 --> 48:24.400]  добавлю к нему 2m плюс 1 и так далее 4m и так далее. Но писать трудно в таком явном виде,
[48:24.400 --> 48:35.200]  но наверное придется, раз уж встал. Давайте вот так 2q минус 1, такой q я сейчас скажу на m плюс 1,
[48:35.200 --> 48:53.320]  а здесь будет 2qm. Тут и так далее пропущено. Ну то есть я написал как-то очень формалистично,
[48:53.320 --> 49:01.160]  но смысл простой. Я беру множество из 2 мэй-элементов и вот так его итерирую q раз. Где q я сейчас скажу,
[49:01.160 --> 49:07.560]  что такое. q это некоторое явное выражение от наших параметров, но вот я сейчас сотру с доски.
[49:23.320 --> 49:45.520]  Я нарисую картинку вот так. Здесь 1, 2m, здесь 4m и так далее. В конце 2qm, где q это целая часть
[49:45.520 --> 50:02.440]  от 2k поделить на мэя. Вот такой q у нас будет. Сейчас давайте я сначала слеплю некую конструкцию
[50:02.440 --> 50:08.080]  с вспомогательных, а потом уже буду какие-то оценки делать. Там надо оценки сделать,
[50:08.080 --> 50:12.040]  чтобы проверить корректность конструкции. Но давайте сначала конструкцию сделаем,
[50:12.040 --> 50:19.560]  а потом проверим, что она корректна. Конструкция такая. Вот здесь у нас, мы уже знаем, есть все
[50:19.560 --> 50:31.160]  возможные вот эти, так напишу, n1 и так далее, nc с 2m. Стрелку такую нарисую. Вот эти вот
[50:31.160 --> 50:35.280]  сорделечки. Это как раз мы элементные подмножества, которые мы только что обсуждали,
[50:35.280 --> 50:42.960]  для которых tau там равно m плюс 1, мы это писали. Давайте транслируем просто параллельным переносом
[50:42.960 --> 50:50.800]  всю эту конструкцию сюда и вообще всюду, в каждую из лоханочек. Такие лоханочки. Вот мы их разложили
[50:50.800 --> 50:59.480]  по кастрюличке, а в них маленькие сосисочки. Ну ладно, бог бы с ними. Надо как-то нумерацию
[50:59.480 --> 51:04.600]  тут сделать еще. Смотрите, у нас же есть обозначение для сосисочек, которые в первой лоханочке,
[51:04.600 --> 51:10.920]  но во второй-то тоже такие же сосисочки. Давайте, чтобы их различать, я еще в верхний индекс добавлю
[51:10.920 --> 51:15.880]  единицы. Вот я сразу этого не стал делать, чтобы вам голову не морочить. А сейчас я нарисую верхний
[51:15.880 --> 51:22.640]  индекс единицы, указывая, что они находятся именно в самой левой, первой вот этой лоханочке. А здесь
[51:22.640 --> 51:34.320]  во второй лоханочке находятся n1,2 и так далее, nc с 2m по m2. Ну и в последней, соответственно, n1q
[51:34.320 --> 51:45.040]  и так далее, nc с 2m по mq. Видите, все совершенно явно конструктивно строится. Пока не очень понятно,
[51:45.240 --> 51:53.160]  но сейчас я объясню, что. Я сейчас буду из маленьких сардельщик склеивать одну большую
[51:53.160 --> 52:02.480]  сардельку, потом другую большую сардельку, потом третью и так далее. Склеивать я буду так. Я беру
[52:02.480 --> 52:10.360]  сардельки из разных лоханочек с одинаковым нижним номером. Ну то есть я беру вот эту,
[52:10.360 --> 52:20.440]  вот эту и так далее, вот эту. Объединяю их как множество и говорю, что это одна длинная
[52:20.440 --> 52:26.960]  сарделька. Да, она такая разрывная как будто бы, но это одно множество. Я их просто объединяю. То есть
[52:26.960 --> 52:37.960]  я рассматриваю вот такое множество n1,1, объединенное с n1,2, объединенное и так далее,
[52:37.960 --> 52:53.560]  объединенное с n1q. Успеваете за мыслью, да? Ну и так далее. То есть потом беру n2,1, n2,2,
[52:53.560 --> 53:14.080]  n2q объединил. Ну и так далее. В конце у меня получится nc с 2m q, так далее nc, ой, что ж я
[53:14.080 --> 53:37.120]  пишу-то? Объединенное с nc с 2m q. Что-то не то написал. Здесь 1, а здесь q. Все, сейчас правильно. То есть у
[53:37.120 --> 53:42.440]  меня по-прежнему столько же множеств сколько и было, только они стали длинными, они такой склейкой
[53:42.440 --> 53:48.720]  образованы. Если раньше у меня было c с 2m q маленьких, коротеньких множеств внутри маленькой
[53:48.720 --> 53:58.520]  лоханочки, то теперь склеивая множество с одинаковыми номерами, склеивая множество с одинаковыми
[53:58.520 --> 54:06.760]  номерами, я в итоге получу столько же множеств c с 2m q, только все они будут длинными. Понятно сказал?
[54:06.760 --> 54:20.160]  Как множество устроено, понятно? Ну такие длинные множества, что такое? Их c с 2m q. Но,
[54:20.160 --> 54:29.560]  смотрите, давайте я их тоже обозначу покороче. Ну скажем, пусть это будет, не знаю, m1, это будет
[54:29.560 --> 54:47.000]  m2, а это будет m c с 2m q. Тогда вопрос на засыпку, товарищи. А чему равно tau от m1 и так далее
[54:47.000 --> 54:56.960]  m c с 2m q? Вот от этих удлиненных множеств. Смотрите, вот были короткие внутри лоханочки, а мы взяли эти
[54:56.960 --> 55:03.600]  короткие, склепили одну гирлянду, потом склепили другую гирлянду, склепили третью гирлянду. Вот
[55:03.600 --> 55:17.360]  какое будет tau у совокупности этих гирлянт? Это центральный ключевой вопрос.
[55:26.960 --> 55:33.080]  Что-то никто не отвечает. Плохо объяснил, значит.
[55:33.080 --> 55:44.840]  Ну это же та же самая, по сути, совокупность, что была изначально. Вот у нас внутри маленькой
[55:44.840 --> 55:50.080]  лоханки сидят какие-то сосиски, да, вот они образуют совокупность, у которой tau равна m
[55:50.080 --> 55:56.120]  плюс 1. Мы берем маленькую отсюда, такую же точно маленькую отсюда, также расположенную в своей
[55:56.120 --> 56:03.880]  лоханочке. Потом следующую, следующую, следующую. Что изменилось-то? Если я уже здесь нашел какого-то
[56:03.880 --> 56:09.160]  представителя, то я всю длинную гирлянду уже представил. Вот в ютубе появился правильный ответ.
[56:09.160 --> 56:19.600]  m плюс 1. Ответ тот же самый. Он такой же. m плюс 1. Если мы нашли систему представителей для
[56:19.600 --> 56:25.520]  коротеньких сосисочек внутри одной лоханки, то мы тем самым нашли систему представителей и для
[56:25.520 --> 56:32.800]  вот этих m1, m2 и так далее, потому что стартовые сосиски они же входят внутрь построенных m1, m2 и так
[56:32.800 --> 56:38.720]  далее. Наоборот, она не может увеличиться, потому что любая система представителей для этих,
[56:38.720 --> 56:44.760]  это система представителей для тех. Если вы взяли какую-то систему представителей для m1, m2 и так
[56:44.760 --> 56:50.000]  далее, ну даже если вы зачем-то брали этих представителей из разных лоханочек, но вы всегда
[56:50.000 --> 56:56.160]  можете представители из этой лоханки транслировать в первую, и от этого ничего не поменяется с точки
[56:56.160 --> 57:05.960]  зрения его множеств, которые с помощью него представлены. Понимаете? Если вы нашли представителя
[57:05.960 --> 57:11.360]  для этой совокупности где-то тут, вы можете точно такой же элемент взять здесь, и он будет
[57:11.360 --> 57:20.800]  представлять те же самые сардельки, те же самые m1, m2 и так далее, те же самые. Без ограничений
[57:20.800 --> 57:24.280]  общности можно считать, что вся система представителей находится в левой лоханке,
[57:24.280 --> 57:33.280]  и тут тоже равняется m плюс 1. Вот, теперь я хочу обсудить размеры митых, вот этих множеств,
[57:33.280 --> 57:39.280]  сколько в них элементов. Если в исходных вот этих n-очках, вот в этих маленьких сосисочках,
[57:39.280 --> 57:46.120]  очевидно было не столько элементов сколько нам нужно. Нам-то нужно k, вы помните, да? То вот в
[57:46.120 --> 57:51.360]  этих m-ках сейчас уже будет что-то похожее на то, что нам нужно. Смотрите, давайте, во-первых,
[57:51.360 --> 58:06.920]  посмотрим на число q. Так, мы знаем, что m не больше, чем k. Помните такое условие очевидное? Ну вот
[58:06.920 --> 58:17.880]  оно написано. Не m не больше, чем k. Сейчас, черт, нет, не совсем так. Не m, а логарифм вот этот с k
[58:17.880 --> 58:23.240]  на n не больше, но m тем более не больше, чем k. m тем более не больше, чем k, поэтому это,
[58:23.240 --> 58:29.120]  конечно, содержательное натуральное число. Это сразу понятно, 2k на m больше либо равняется
[58:29.120 --> 58:35.160]  двойке даже, четверке может быть. В общем, это какое-то число, которое точно отделено от нуля,
[58:35.160 --> 58:40.440]  поэтому мы можем воспользоваться вот этим вот пресловутым неравенством, что целая часть не
[58:40.440 --> 58:48.000]  меньше, чем половинка от того, от чего она берется. Это не меньше, чем k поделить на m. Но отсюда,
[58:48.000 --> 58:53.920]  конечно, следует, что мощность каждого м-того, которое равняется q умножить на m, больше либо
[58:53.920 --> 59:00.640]  равняется k. И это очень хорошо, потому что это уже похоже на тот размер, который нам нужен. Это не в
[59:00.640 --> 59:07.080]  точности k, нам хотелось в точности k, это важно, но хотя бы не меньше, чем k. Уже так вот проклевывается
[59:07.080 --> 59:15.400]  что-то. Пока вот только это мы знаем, что мощность м-того не меньше, чем k. Еще, товарищи, важный
[59:15.400 --> 59:21.400]  момент. Надо проверить корректность этой конструкции в следующем смысле. Нам надо, чтобы вся эта
[59:21.400 --> 59:29.360]  конструкция помещалась в n-вершин. У нас же изначально n-вершин, а мы уже заполонили 2qm.
[59:29.360 --> 59:36.600]  А может 2qm больше, чем n? Тогда ничего не получится. Ну, тут, конечно, все тоже очень просто. Смотрите,
[59:36.600 --> 59:48.080]  2qm меньше либо равняется, чем 2 на 2 на k на m. Правильно я пишу? Ну q просто оцениваю,
[59:48.080 --> 59:56.720]  как 2k поделить на m. Так, и умножить на m. Шлёп-шлёп. Это равняется 4k. Все учтено.
[59:56.720 --> 01:00:09.240]  Но k-то не больше, чем n поделить на 4. k не больше, чем n поделить на 4, поэтому конструкция корректна.
[01:00:09.240 --> 01:00:22.400]  Так, но это еще не все. А сколько в ней множеств? Давайте вот это поймем. c из 2m по m. Это понятно.
[01:00:22.400 --> 01:00:35.520]  Но, конечно, c из 2m по m меньше, чем 2 в степени 2m. Это понятно, тривиально. 2m
[01:00:35.520 --> 01:00:48.840]  не больше, чем логарифм sк на n. Значит, это не больше, чем 2 в степени логарифм sк на n.
[01:00:48.840 --> 01:00:58.680]  Согласны? Ну, я еще так скажу. Совсем уж по-издевательски. Это меньше,
[01:00:58.680 --> 01:01:06.600]  чем e в степени логарифм sк на n. Здесь некий большой запас. А это уже равно чему-то осязаемому,
[01:01:06.600 --> 01:01:16.680]  и это sk на n. А нам, как вы, наверное, помните, нужно построить s множество, а не меньше,
[01:01:16.680 --> 01:01:24.640]  чем sк на n. То есть у нас вот из этого рассуждения видно, что у нас есть еще потенциал увеличить всю
[01:01:24.640 --> 01:01:35.400]  эту конструкцию примерно в n поделить на k раз. А этого знаете почему хочется? Потому что таута
[01:01:35.400 --> 01:01:46.080]  это м плюс один. Но что такое м плюс один? Это примерно логарифм пополам. Ну м, помните,
[01:01:46.080 --> 01:01:53.000]  что такое? Это одна вторая логарифм ск на n. То есть пока мы построили совокупность, похожую на
[01:01:53.000 --> 01:01:58.760]  что-то нужное, она умещается куда надо, она состоит из примерно k элементов множества, ну как бы
[01:01:58.760 --> 01:02:06.800]  мажется уже. Но у нее тау очень маленькая, логарифм пополам. Но, по счастью, мы отсюда видим,
[01:02:06.800 --> 01:02:12.480]  что мы можем увеличивать примерно в n на k раз, по крайней мере по количеству множеств. И вот если
[01:02:12.480 --> 01:02:18.720]  мы действительно сможем это сделать, то мы и тау в n на k раз увеличим и реализуем наш великий
[01:02:18.720 --> 01:02:23.120]  замысел. Ну сейчас мы это сделаем. Остался один содержательный шаг.
[01:02:23.120 --> 01:02:49.880]  Ну смотрите, ну просто тупо размножим эту конструкцию еще раз, она сейчас опять влезет,
[01:02:49.880 --> 01:02:57.160]  но один раз она точно влезает. Вот давайте возьмем такое t, которое определим как целая часть,
[01:02:57.160 --> 01:03:14.320]  просто от n поделить на q, наверное. Нет, не на q, конечно, а на 2qm. Вот так. n поделить на 2qm. Ну то есть
[01:03:14.320 --> 01:03:21.520]  это вот сколько раз мы хотим теперь проэтерировать уже сделанную конструкцию. Я могу ее еще раз вот так
[01:03:21.520 --> 01:03:30.080]  нарисовать. Вот у нас было от 1 до 2m и так далее. Все заканчивалось на 2qm, и здесь образовалась
[01:03:30.080 --> 01:03:39.320]  совокупность m1 и так далее mc с 2mpi, с которой мы только что работали. А дальше я могу взять и
[01:03:39.320 --> 01:03:49.400]  продолжить эту конструкцию. Вот так нарисую, лоп, и еще раз ее размещу и так далее. Итак, t раз.
[01:03:49.400 --> 01:03:59.120]  Ну t здесь не указывает на номер элемента, а на количество этих овалов. Вот это первый овал,
[01:03:59.120 --> 01:04:08.840]  вот это второй, а вот это с номером t. Понятно пока, что происходит, да? Вот в этом первом овале
[01:04:08.840 --> 01:04:16.880]  у нас расположена совокупность множеств, каждая из которых имеет мощность не меньшую k. Такая,
[01:04:16.880 --> 01:04:27.840]  что tau от этой совокупности c с 2mpi m больше, чем m, ну равняется m плюс 1, это значит больше,
[01:04:27.840 --> 01:04:37.560]  чем m. И количество элементов в этой совокупности c с 2mpi m меньше, чем sk поделить на m. Вот это то,
[01:04:37.560 --> 01:04:45.000]  что мы знаем про вот эту левую часть. А дальше мы берем и все, вот это транслируем сюда, транслируем
[01:04:45.000 --> 01:04:53.160]  сюда, но только уже никаких склеек не делаем. Уже никаких склеек не делаем. Давайте с вашего
[01:04:53.160 --> 01:04:58.200]  позволения снова номера навешу, чтобы точно было понятно. Ничего страшного, если я сейчас вот
[01:04:58.200 --> 01:05:03.840]  здесь дорисую номера. Мне кажется, так должно быть понятно. Я опять скажу, что вот это с номером 1,
[01:05:03.840 --> 01:05:15.800]  здесь везде добавлю номер 1, а здесь все то же самое, но с номером 2. m1-2, mc с 2mpi m2,
[01:05:15.800 --> 01:05:27.440]  мощность митого второго больше либо равняется k, tau от их совокупности больше m, и, ну, это уж
[01:05:27.440 --> 01:05:33.040]  можно не писать. c с 2mpi m, конечно, меньше, чем sk поделить на m. Что их количество меньше,
[01:05:33.280 --> 01:05:47.080]  чем sk поделить на m. Ну и здесь точно также m1t, mc с 2mpi mt, мощность mитого t больше либо равно k,
[01:05:47.080 --> 01:05:57.840]  tau от них больше m, ну и все. Вот, теперь я организую огромную совокупность, которую давайте я пока
[01:05:57.840 --> 01:06:04.520]  назову не m, как нам хочется в итоге, а m штрих, например. Это не совсем еще итоговая совокупность,
[01:06:04.520 --> 01:06:13.160]  но уже почти она. Я в нее скину ворохом и вот эти c с 2mpi m множество, и вот эти c с 2mpi m,
[01:06:13.160 --> 01:06:19.640]  и вот эти c с 2mpi m. То есть я не буду их никак склеивать, я их просто в кучу сложу. Ну давайте
[01:06:19.640 --> 01:06:33.600]  я прям так напишу, это m11, mc с 2mpi m1, и так далее, mc с 2mpi mt. Я надеюсь, достаточно в такой
[01:06:33.600 --> 01:06:39.200]  степени подробностей. Просто все эти множества собрали воедино и назвали это совокупностью m
[01:06:39.200 --> 01:06:47.840]  штрих. Так, что можно сказать про эти множества? Про эти множества по-прежнему можно сказать,
[01:06:47.840 --> 01:06:55.520]  что мощность m итого житого больше либо равняется k. Дальше можно сказать, что
[01:06:55.520 --> 01:07:08.800]  мощность m со штрихом, то есть количество этих множеств, в точности равняется t умножить на c
[01:07:08.800 --> 01:07:19.360]  с 2mpi m. Согласны? Давайте на t еще посмотрим. Ну t выбрано так, опять мы это проверяли,
[01:07:19.360 --> 01:07:24.800]  2qm не больше, чем n, мы же это проверяли. Специально, когда проверяли, что вот эта
[01:07:24.800 --> 01:07:31.000]  конструкция корректна. 2qm не больше, чем n. Поэтому t больше либо равно 1, ну в худшем случае будет
[01:07:31.000 --> 01:07:36.440]  одна только такая конструкция, а если вдруг t большой, будет много таких конструкций. Это понятно.
[01:07:36.440 --> 01:07:41.120]  То есть все заранее уже проверено на корректность. Эти конструкции точно
[01:07:41.120 --> 01:07:47.640]  помещаются в наше множество вершин. В n элементов они, конечно, влезают. Что еще надо
[01:07:47.640 --> 01:07:53.320]  сказать про t, кроме того, что оно больше либо равно 1? Ну, наверное, надо сказать,
[01:07:53.320 --> 01:08:03.440]  что оно не превосходит, конечно, n поделить на 2qm. Это понятно. А про qm мы знаем, что оно больше
[01:08:03.440 --> 01:08:08.880]  либо равно k, но это мы уже использовали и продолжаем использовать. Про qm мы знаем,
[01:08:08.880 --> 01:08:13.160]  что оно больше либо равно k, значит, это все не больше, чем n поделить на 2k.
[01:08:13.160 --> 01:08:23.040]  Ну, давайте воспользуемся этим здесь, продолжим просто неравенство. Равенство неравенством
[01:08:23.040 --> 01:08:31.520]  продолжим. Это не больше, чем, смотрим еще сюда, sk поделить на n, n поделить на 2k. Вот пишем n
[01:08:31.520 --> 01:08:43.360]  поделить на 2k, умножить на sk, поделить на n. Хлоп-хлоп, шлёп-шлёп равно s пополам. Это меньше,
[01:08:43.360 --> 01:08:49.480]  чем s, это очень хорошо. Даже до сих пор это меньше, чем s. Не в точности равно, но меньше,
[01:08:49.480 --> 01:08:54.080]  и слава богу. Сейчас вы увидите, почему это, слава богу. Это как раз очень хорошо, что оно меньше.
[01:08:54.080 --> 01:09:04.640]  Главное, что не больше. Так, ну и венец. Всему здесь писать не очень, давайте я вот тут напишу,
[01:09:04.640 --> 01:09:11.680]  tau от m штрих. Вот оно как раз мультиплицируется, в отличие от случая со склейкой. То есть оно,
[01:09:11.680 --> 01:09:18.360]  конечно, не меньше, чем m, помноженное на t. Ну, потому что наши конструкции лежат отдельно друг
[01:09:18.360 --> 01:09:23.800]  от друга, и для каждой надо строить свою отдельную систему представителей. Тут деваться-то некуда.
[01:09:23.800 --> 01:09:33.040]  Вот. Больше либо равняется m на t. Ну, значит t и m надо оценить снизу. Так, возвращаюсь вот сюда.
[01:09:33.040 --> 01:09:41.840]  Логарифм больше либо равен двойке. Значит, здесь стоит число больше либо равное единице. Ну,
[01:09:41.840 --> 01:09:47.120]  я уже про это говорил. То есть это больше либо равно, согласно нашему замечательному неравенству,
[01:09:47.120 --> 01:09:53.200]  которое грубое, конечно, больше либо равно. Одна четверть логарифма с канаян. Согласны?
[01:09:53.200 --> 01:10:03.400]  Возвращаюсь обратно. Значит, я пишу это больше либо равно одна четверть логарифма с канаян.
[01:10:03.400 --> 01:10:09.880]  Я так в скобочках еще нарисую. И надо t оценить снизу. Ну, я уже десять раз повторял, что аргумент,
[01:10:09.880 --> 01:10:15.600]  стоящий под знаком целой части, не меньше одного. Поэтому мы в очередной раз применяем неравенство,
[01:10:15.600 --> 01:10:28.880]  добавляя здесь еще одну вторую в знаменатель. То есть будет n поделить на 4qm. Так, успеваете,
[01:10:28.880 --> 01:10:36.920]  товарищи? Это очень простые выкладки. Теперь возвращаемся к q. Вот это q. Чего не больше qm,
[01:10:36.920 --> 01:10:45.560]  он стоит в знаменателе, а нам нужна оценка снизу. Чего не больше? 2k на m. Ну q не больше,
[01:10:45.560 --> 01:10:53.600]  чем 2k на m. А если q на m умножить, это будет не больше, чем 2k. Поехали обратно. Значит q на m не
[01:10:53.600 --> 01:11:08.240]  больше, чем 2k. Больше либо равно 1 четверть логарифм с канаян, n на 4qd2k. Согласны? Ну и все.
[01:11:08.240 --> 01:11:17.400]  Почти все. Все, но катарсис-то наступил, если можно так сказать, потому что 4qd4,2 это 32 вакурат.
[01:11:17.400 --> 01:11:27.520]  То есть мы получили вакурат 1,32, n на k, логарифм с канаян. Но вот я в очередной раз могу повторить,
[01:11:27.520 --> 01:11:32.320]  что если бы мы оценивали целые части лучше, то, наверное, здесь такой бы степени двойки не
[01:11:32.320 --> 01:11:38.880]  получилось. Но это не очень важно сейчас для нас. Что для нас важно? Мы получили совокупно с тем
[01:11:38.880 --> 01:11:48.000]  штрих, у которой tau прямо такое, как надо. Но у нее есть два изъяна, в ней недостаточно множество,
[01:11:48.000 --> 01:11:56.240]  должно быть ровно s. И мощности множества с перелетом, наоборот, тут не долет, а тут перелет. А нам
[01:11:56.240 --> 01:12:02.720]  нужны все-таки множество в точности k элементные. Это очень легко решается. Смотрите, вот у нас есть
[01:12:02.720 --> 01:12:09.160]  какая-то совокупность больших множеств, вообще говоря, более жирных, чем хотелось бы. Давайте возьмем
[01:12:09.160 --> 01:12:15.360]  каждое множество, в котором больше элементов, чем надо, действительно больше, и выкинем из этого
[01:12:15.360 --> 01:12:23.680]  множество любые лишние элементы, вообще любые. Некоторые множества при этом могут склеиться,
[01:12:23.680 --> 01:12:30.880]  превратиться в одно, но тогда их еще меньше станет. Пока мы на это вообще не говорим, меньше станет,
[01:12:30.880 --> 01:12:38.880]  и еще и еще лучше, пусть еще меньше станет. Вот. Да елки-палки, сейчас кто-то звонит. Я не знаю,
[01:12:38.880 --> 01:12:46.000]  потом. Вот, смотрите, мы обрезали множество, от этого их стало только меньше, ну или столько же
[01:12:46.000 --> 01:12:52.760]  осталось, я уж не знаю, но не больше, во всяком случае. Но у совокупности, составленной из этих
[01:12:52.760 --> 01:12:59.800]  обрезанных множеств, tau не может быть меньше, чем у исходной совокупности, потому что любая
[01:12:59.920 --> 01:13:07.320]  система представителей для новых обрезанных множеств, конечно, является системой представителей
[01:13:07.320 --> 01:13:14.160]  для исходных. Если бы для обрезанных множеств tau уменьшилось бы, ну как это могло бы получиться,
[01:13:14.160 --> 01:13:23.680]  тогда это бы означало, что у исходных множеств tau меньше. То есть, если мы берем и из m' сначала
[01:13:23.680 --> 01:13:31.760]  делаем условно m', не знаю, 2', путем обрезания лишних элементов у тех множеств, у которых
[01:13:31.760 --> 01:13:38.640]  это нужно сделать, любых совершенно лишних элементов, и склейки, то в m' tau тем более не меньше
[01:13:38.640 --> 01:13:49.080]  вот этой величины. При этом у m' все множества уже в точности k-элементные, и их по-прежнему строго
[01:13:49.080 --> 01:13:58.080]  меньше, чем s. Ну а дальше действуем как в самом начале, в простейшем утверждении. Если у нас меньше,
[01:13:58.080 --> 01:14:05.360]  чем s множеств, и у них уже большая tau, ну давайте добавим любые совершенно множества мощностей k так,
[01:14:05.360 --> 01:14:12.640]  чтобы их стало s. Tau от этого уменьшиться тоже не может. То есть, это уже правка элементарная.
[01:14:12.640 --> 01:14:18.920]  Мы сначала срезаем лишнее, tau только увеличивается или по крайней мере не уменьшается. Потом
[01:14:18.920 --> 01:14:24.840]  у новой совокупности не хватает множества. Докидываем какие угодно, tau от этого тоже только
[01:14:24.840 --> 01:14:34.040]  увеличится может, но никак не уменьшится. Понятно говорю? Все, переходим к m, добавляя вот эти
[01:14:34.040 --> 01:14:41.120]  недостающие множества. И вот m уже такая, как надо, в ней ровное с множеством, в ней все множества k-элементные,
[01:14:41.120 --> 01:14:53.720]  а tau у нее по-прежнему не меньше вот этой величины. Все. Вот, ну смотрите, я бы на этом на сегодня
[01:14:53.720 --> 01:14:59.920]  закончил. Как раз, в общем, мы по времени точно уложились. Если какие-то вопросы есть, ну пожалуйста, задавайте.
