[00:00.000 --> 00:17.560]  Ну хорошо, сегодня по плану предпоследняя лекция, будем
[00:17.560 --> 00:21.640]  говорить про байвскую имплементацию.
[00:21.640 --> 00:27.280]  Мы уже рассмотрели разные примеры механизмов, имплементирующих
[00:27.280 --> 00:29.520]  различные функции общественного выбора.
[00:29.520 --> 00:33.680]  Как то, производство общественных благ, где мы рассмотрели
[00:33.680 --> 00:35.680]  как механизмы ГРОФСа, так и другие.
[00:35.680 --> 00:43.260]  Далее, аукционы, аукцион первой цены, аукцион второй цены.
[00:43.260 --> 00:45.840]  На семинаре рассмотрели аукцион контекстной рекламы.
[00:45.840 --> 00:49.320]  Рассмотрели модель двусторонней торговли.
[00:49.320 --> 00:55.160]  Мы столкнулись с тем, что в некоторых случаях у нас
[00:55.160 --> 00:59.360]  есть ограничения, не позволяющие, но по крайней мере с первого
[00:59.360 --> 01:04.440]  взгляда не видно как имплементировать функцию общественного
[01:04.440 --> 01:06.560]  выбора во всех отношениях хорошего.
[01:06.560 --> 01:15.360]  Что такое хорошее, еще я уточню.
[01:15.360 --> 01:21.680]  Пока что заметил, что имплементация бывает разного типа на самом
[01:21.680 --> 01:22.680]  деле.
[01:22.680 --> 01:25.160]  Бывает имплементация в доминирующих стратегиях,
[01:25.160 --> 01:32.840]  когда та игра, которая разыгрывается, имеет правдивое равновесие
[01:32.840 --> 01:34.720]  в доминирующих стратегиях.
[01:34.720 --> 01:42.040]  Это хорошая, сильная концепция, означающая, что люди не обманывают
[01:42.040 --> 01:44.520]  не только в ответ на правдивые стратегии остальных, а
[01:44.520 --> 01:49.400]  вообще им выгодно не обманывать всегда, как бы другие себя
[01:49.400 --> 01:50.400]  не вели.
[01:51.040 --> 01:58.080]  Несколько более слабая концепция, но тоже разумная, это байс
[01:58.080 --> 02:04.240]  и скомплементация, а именно, предполагаю, что все остальные
[02:04.240 --> 02:07.080]  люди ведут себя правдиво, мы ведем себя тоже правдиво,
[02:07.080 --> 02:08.080]  нам это выгодно.
[02:08.080 --> 02:12.680]  То есть это равновесие байс и нэша, не в доминирующих
[02:12.680 --> 02:15.040]  стратегиях, но хотя бы просто равновесие.
[02:15.040 --> 02:20.200]  Такое равновесие мы видели в ОКЦО не первой цены.
[02:20.280 --> 02:23.120]  Такое равновесие мы видели в модели двойного аукциона.
[02:25.120 --> 02:28.240]  Нужно еще отметить, я это уже отмечал, что бывает еще
[02:28.240 --> 02:32.400]  одна концепция имплементации, а именно сильная имплементация
[02:32.400 --> 02:37.240]  в той ситуации, когда между агентами полная информация
[02:37.240 --> 02:40.040]  о состоянии мира, между ними нет неопределенности,
[02:40.040 --> 02:46.640]  но для тех, кто разрабатывает для них механизм, для аукционистов
[02:46.640 --> 02:51.400]  в кавычках, этой полной информации нет, и задача
[02:51.400 --> 02:55.440]  собственно выяснить, чтобы выяснить эту информацию,
[02:55.440 --> 03:02.640]  соответственно, там свои есть результаты, Маскин
[03:02.640 --> 03:06.520]  за это получил Нобелевскую премию, мы не обсуждаем,
[03:06.520 --> 03:09.440]  возможно, это скорее всего даже обсуждает Данил Масатов
[03:09.440 --> 03:10.840]  в своем курсе по Эппродвиндум.
[03:10.840 --> 03:16.080]  В курсе РЭШ более подробно, на самом деле, иногда обсуждается
[03:16.080 --> 03:17.080]  в микроэкономике.
[03:17.080 --> 03:28.520]  Сегодня мы обсуждаем базовскую имплементацию, и первая
[03:28.520 --> 03:32.080]  мысль такая, что, как и в случае имплементации
[03:32.080 --> 03:37.040]  в доминирующих стратегиях, мы можем, применяя принцип
[03:37.040 --> 03:41.840]  выявления, ограничиться механизмом прямого выявления,
[03:41.840 --> 03:47.440]  то есть, такие механизмы, когда мы объявляем людям
[03:47.440 --> 03:50.580]  функции общественной выборы и говорим им, сообщите нам
[03:50.580 --> 03:54.440]  свой тип, они сообщают и должны сделать это правдиво.
[03:54.440 --> 04:05.000]  В том смысле, что, это правдивый профиль стратегии является
[04:05.000 --> 04:08.440]  равновесием Байс и Нэша, не в доминирующих стратегиях,
[04:08.440 --> 04:09.440]  это просто равновесие.
[04:09.440 --> 04:17.160]  Что в этом хорошего?
[04:17.160 --> 04:19.800]  Концепция более слабая, значит, меньше требований
[04:19.800 --> 04:25.360]  накладывается, значит, по сравнению с концепцией
[04:25.360 --> 04:28.000]  имплементации в доминирующих стратегиях, можно надеяться,
[04:28.000 --> 04:32.160]  что мы больше всего сможем имплементировать более
[04:32.160 --> 04:34.160]  широкий класс функций общественного выбора.
[04:34.160 --> 04:43.680]  Ну и в дальнейшем сегодня я буду рассматривать такой
[04:43.680 --> 04:47.920]  частный случай, как линейная модель, это на самом деле
[04:47.920 --> 04:53.880]  частный случай квазилинейной модели, а именно модель,
[04:53.880 --> 04:58.400]  в которой в функции полезности участников, ну да, квазилинейно
[04:58.400 --> 05:03.200]  входит деньги, как обычно, но еще тот параметр, который
[05:03.240 --> 05:08.520]  предлагается типом участника, он в соответствующие слагаемые
[05:08.520 --> 05:16.600]  функции полезности входит как сомножитель, вот, значит,
[05:16.600 --> 05:22.680]  а именно мы считаем, что состояние такой линейной
[05:22.680 --> 05:29.120]  модели, состояние линейной экономики, это пара Qt, где
[05:29.120 --> 05:32.440]  Q это вектор, состоящий из компонентов Q1, Q2 и так далее
[05:32.680 --> 05:40.560]  по количеству людей, то есть Q и t, это обычно количество
[05:40.560 --> 05:44.040]  какого-нибудь товара или что-нибудь такое, что достается
[05:44.040 --> 05:51.120]  этому участнику, и он это как-то ценит, в целом Q вектор
[05:51.120 --> 05:54.480]  Q является опять же неким существенным экономическим
[05:54.480 --> 05:56.840]  или общественным решением, сколько общественного блога
[05:56.840 --> 06:00.360]  произвести, кому передать неделимые товары и тому
[06:01.280 --> 06:06.640]  ну и денежные расчеты, как всегда, входящие аддитивно
[06:06.640 --> 06:15.480]  в функции полезности, сколько кто должен заплатить, вот,
[06:15.480 --> 06:21.640]  значит, соответственно, ну Q называется исходом, а
[06:21.640 --> 06:28.120]  пара Qt, собственно, образует состояние системы, полезность
[06:28.280 --> 06:30.560]  выглядит вот так, то есть это частный случай квазилинейной
[06:30.560 --> 06:33.960]  модели, в квазилинейной модели у нас здесь на месте первого
[06:33.960 --> 06:42.600]  слагаемого некоторая функция, которая зависит от общественного
[06:42.600 --> 06:46.840]  решения и от типа участника, ну не знаю как, как угодно
[06:46.840 --> 06:50.320]  может зависеть, а тут она зависит вполне определенным
[06:50.320 --> 06:56.120]  образом, а именно, как v и t умножить на q и t, где v и t,
[06:56.120 --> 07:02.600]  вот вместо t и t будем здесь использовать букву v, которая
[07:02.600 --> 07:07.600]  есть первая буква слоя value, что символизирует ценность
[07:07.600 --> 07:11.400]  единицы, ну, скажем так, товара, а q и t, обычно это
[07:11.400 --> 07:19.920]  все товар для агента i, наблюдается, соответственно,
[07:19.920 --> 07:22.920]  в i и t, как всегда, только i и t агентом, не наблюдается
[07:22.920 --> 07:29.200]  остальными, вместо этого остальные знают, в общем
[07:29.200 --> 07:34.360]  знаниями является тот факт, что ценности v и t распределены
[07:34.360 --> 07:37.640]  независимо в соответствии с какими-то функциями распределения
[07:37.640 --> 07:46.520]  f и t, вот, еще мы хотим делать некоторое специальное
[07:46.520 --> 07:49.360]  предположение, а именно, что эти распределения имеют
[07:49.360 --> 07:54.160]  плотность, то есть прозводная функция f и t, в каждой точке
[07:54.160 --> 07:59.440]  существует и положительно внутри отрезка, это нужно
[07:59.440 --> 08:03.160]  для некой связанности, то есть носитель распределения
[08:03.160 --> 08:06.400]  является связанным множеством, можно сказать, нет такого,
[08:06.400 --> 08:10.160]  что есть там какой-нибудь один горб распределения,
[08:10.160 --> 08:13.320]  потом ноль, потом другой горб распределения, тогда
[08:13.320 --> 08:17.480]  получается некая несвязанность, ну, и там в той же для этой
[08:17.480 --> 08:22.880]  ситуации можно делать свои выводы, но те рассуждения,
[08:22.880 --> 08:26.920]  которые мы делаем, скажем так, для нее уже не годятся,
[08:26.920 --> 08:29.440]  поэтому считаем, что у нас связанный носитель, ну,
[08:29.440 --> 08:36.280]  и такое вот распределение с плотностью, без атомов,
[08:36.280 --> 08:37.280]  хорошо.
[08:37.280 --> 08:44.640]  Далее, значит, смотрите, функция общественного выбора,
[08:44.640 --> 08:47.840]  или можно сказать, что она сдает сразу и механизм
[08:47.840 --> 08:53.920]  прямого явления, а именно, по каждому набору типов
[08:53.920 --> 09:00.640]  v1, v2 и так далее, этот механизм или эта функция предлагает
[09:00.640 --> 09:04.760]  пару qt, которая на самом деле не пара, а набор из 2 умножительного
[09:04.760 --> 09:13.480]  количества людей чисел, да, то есть, пара функций
[09:13.480 --> 09:18.440]  qt, v2, v3, это вот функция общественного выбора, она же сдает механизм
[09:18.440 --> 09:22.600]  прямого явления, но в чем стоит механизм, в том, что
[09:22.600 --> 09:28.400]  людей, наблюдающих эту функцию, просят сообщить свои типы,
[09:28.400 --> 09:29.800]  они должны сообщить свой правдивый тип.
[09:29.800 --> 09:38.640]  Ну, и как в квазерлинийной модели всегда, у нас свойство
[09:38.640 --> 09:40.920]  экспост эффективности функции общественного выбора состоит
[09:40.920 --> 09:43.440]  из двух составляющих, первое, это эффективный исход
[09:43.440 --> 09:48.120]  то есть, в данном случае первая слагаемая функция
[09:48.120 --> 09:51.440]  полезности суммируется и эта сумма должна максимизироваться.
[09:51.440 --> 10:01.840]  Так, сумма vt, qt, лучше пока не писать qt от v, потому что
[10:01.840 --> 10:12.080]  qt от v, собственно, это будет, ну, это и будет оптимальный
[10:12.080 --> 10:16.520]  выбор при этой максимизации, в общем, максимизируется
[10:16.520 --> 10:26.480]  сумма vt, qt, что это означает, это означает, что qt берутся
[10:26.480 --> 10:30.400]  большими, ну, скажем, единицы, ну, есть определенные ограничения
[10:30.400 --> 10:34.800]  тоже на множество, вот это вот самое q, такое калиграфическое,
[10:34.800 --> 10:37.640]  значит, оно может по-разному быть устроено, например,
[10:37.640 --> 10:40.680]  для ситуации, кому передать неделимый товар, если он
[10:40.680 --> 10:43.000]  эффективен, соответственно, сумму всех выйдет равна
[10:43.000 --> 10:48.520]  единице, или меньше равна единице, вот, тогда, например,
[10:48.520 --> 10:51.080]  эффективный исход состоит в том, чтобы передать товар
[10:51.080 --> 10:53.480]  тому, кому он важнее всего, то есть, у кого выйдет самое
[10:53.480 --> 10:54.480]  большое.
[10:54.480 --> 10:58.600]  В ситуации производства общественного блага, производитель
[10:58.600 --> 11:03.600]  не производить, видимо, надо опираться в вопросе
[11:03.600 --> 11:09.680]  в эффективном исходе, но то, превышает ли сумма ценностей
[11:09.680 --> 11:10.680]  издержки.
[11:10.680 --> 11:11.680]  Ну, и так далее.
[11:11.680 --> 11:16.680]  Можно для каждой задачи, для каждой модели, эту вот
[11:16.680 --> 11:19.680]  функцию, критерии общественного государства промаксимизировать
[11:19.680 --> 11:22.680]  и найти решение.
[11:22.680 --> 11:25.680]  При каждом наборе выиток, при некоторых наборах выиток
[11:25.680 --> 11:28.680]  решений может быть много, ну, то выбираем любое.
[11:28.680 --> 11:29.680]  Вот.
[11:29.680 --> 11:30.680]  Ну, вот.
[11:30.680 --> 11:31.680]  Вот.
[11:32.680 --> 11:34.680]  И баланс бюджета должен соблюдаться, то есть, не
[11:34.680 --> 11:38.680]  должно быть, с одной стороны, потерь в системе, то есть,
[11:38.680 --> 11:42.680]  денег не должны выходить на ветер, с другой стороны,
[11:42.680 --> 11:46.680]  эта система не должна иметь потребность подпитываться
[11:46.680 --> 11:49.680]  снаружи деньгами, то есть, не должно быть бюджетного
[11:49.680 --> 11:50.680]  дефицита.
[11:50.680 --> 11:52.680]  Не дефицита, не профицита, вообще говоря, не должно
[11:52.680 --> 11:53.680]  быть.
[11:53.680 --> 11:54.680]  Не должно быть.
[11:54.680 --> 11:55.680]  Не должно быть.
[11:55.680 --> 11:56.680]  Не должно быть.
[11:56.680 --> 11:57.680]  Не должно быть.
[11:57.680 --> 11:58.680]  Не должно быть.
[11:58.680 --> 12:02.680]  Ну, можно, могут спросить люди, а вот мы рассматривали
[12:02.680 --> 12:06.680]  модель аукцион второй цены, это VCG аукцион, и говорили,
[12:06.680 --> 12:11.680]  что в этом аукционе профицит у нас, да.
[12:11.680 --> 12:15.680]  Ну, на самом деле, надо в частке понимать, что у нас
[12:15.680 --> 12:18.680]  всегда входит в эту систему еще продавец, и деньги не
[12:18.680 --> 12:21.680]  на ветер бросаются, а отдаются продавцам.
[12:21.680 --> 12:25.680]  Просто у нас в этом аукцион, в этом аукционе, в этом аукционе
[12:25.680 --> 12:28.680]  не на ветер бросаются, а отдаются продавцам.
[12:28.680 --> 12:30.680]  Просто продавец – это такой агент, который не совсем
[12:30.680 --> 12:35.680]  агент, он просто получает прибыль.
[12:35.680 --> 12:41.680]  И важно в этой модели, что для продавца ценность товара
[12:41.680 --> 12:42.680]  известна.
[12:42.680 --> 12:45.680]  Неважно какая она, ну, 0 обычно предполагается, может
[12:45.680 --> 12:47.680]  не 0, но известна всем.
[12:47.680 --> 12:50.680]  А вот если она не известна, сразу сказка становится
[12:50.680 --> 12:56.680]  более сложной, и не очень хорошо имплементируются
[12:56.680 --> 13:02.680]  всякие хорошие решения.
[13:02.680 --> 13:03.680]  И вопрос у нас такой.
[13:03.680 --> 13:06.680]  Ну, вот правоэксплоста эффективность мы поняли,
[13:06.680 --> 13:09.680]  эти две составляющие, собственно говоря, это пока мы повторяем
[13:09.680 --> 13:11.680]  то, что мы уже выписывали.
[13:11.680 --> 13:12.680]  Да.
[13:12.680 --> 13:20.680]  Да, для каждой задачи множество Q свое.
[13:20.680 --> 13:21.680]  Вот смотрите.
[13:21.680 --> 13:24.680]  Например, сколько общественного блага произвести?
[13:24.680 --> 13:31.680]  Ну, у нас Q определяется вот чем.
[13:31.680 --> 13:37.680]  Значит, Q1 равно Q2, и так далее, равно Q1 равно G, как написано.
[13:37.680 --> 13:42.680]  Ну и еще, на самом деле, здесь надо учесть издержки.
[13:42.680 --> 13:45.680]  Эти издержки каким-то образом должны, например, по умолчанию
[13:45.680 --> 13:50.680]  как-то раскидываться на людей, а потом уже с помощью
[13:50.680 --> 13:54.680]  системы взаимоплатижей и т.е. мы как-то перераспределяем
[13:54.680 --> 13:55.680]  издержки.
[13:55.680 --> 13:59.680]  Но вначале надо как-то зафиксировать, что они есть.
[13:59.680 --> 14:00.680]  Другой вариант.
[14:00.680 --> 14:01.680]  Кому передать неделимый товар?
[14:01.680 --> 14:02.680]  Вот есть неделимый товар.
[14:02.680 --> 14:06.680]  Он, допустим, сейчас находится у продавца, агент 0.
[14:06.680 --> 14:11.680]  А его надо передать кому-нибудь из агентов 0, 1, 2, 3, и так далее.
[14:11.680 --> 14:14.680]  0 это оставить у продавца, 1 передать агенту 1, и так далее.
[14:14.680 --> 14:16.680]  Значит, соответственно, у нас множество Q большое,
[14:16.680 --> 14:18.680]  вот это вот Q, калиографическое.
[14:18.680 --> 14:24.680]  Это точки такие.
[14:24.680 --> 14:29.680]  Либо все нули, либо один, все остальные нули, либо 0, 1, все остальные нули, и так далее.
[14:29.680 --> 14:33.680]  Т.е. одна единица, остальные нули или все нули.
[14:33.680 --> 14:39.680]  Ну и другие варианты мы рассмотрим моделей, где
[14:39.680 --> 14:42.680]  будет для каждой своей множества Q.
[14:42.680 --> 14:45.680]  А в случае, где раскидываются издержки, это считается,
[14:45.680 --> 14:50.680]  что издержки идут в кошелек условного продавца?
[14:50.680 --> 14:53.680]  Т.е. там же возникает дефицит бюджета за счет того,
[14:53.680 --> 14:55.680]  что все платят издержки?
[14:55.680 --> 14:58.680]  Нет, смотрите, издержки, допустим, мы их как-то раскидываем
[14:58.680 --> 15:04.680]  по-ровну, не знаю, технически, чтобы нам общественное решение
[15:04.680 --> 15:08.680]  у нас тогда такое, что мы производим общественное благо
[15:08.680 --> 15:13.680]  и берем с каждого, допустим, по-ровну его стоимость.
[15:13.680 --> 15:21.680]  А дальше платежи. Т.И.Т. перераспределяет эти расходы.
[15:21.680 --> 15:24.680]  И в этом случае у нас нигде никакого дефицита нет,
[15:24.680 --> 15:27.680]  пока у нас нет дефицита среди Т.И.Т.
[15:28.680 --> 15:29.680]  Да?
[15:32.680 --> 15:33.680]  Хорошо.
[15:35.680 --> 15:41.680]  Ну, т.е. в целом, Q.И.Т. это всегда количество какого-нибудь товара
[15:41.680 --> 15:45.680]  частного или общественного, который потребляет И.Т. участник.
[15:45.680 --> 15:50.680]  Т.е. что-то, у чего есть ценность, разная для разных типов.
[15:50.680 --> 15:54.680]  Соответственно, эта ценность умножается на количество этого товара.
[15:57.680 --> 15:59.680]  Ну вот, вопрос теперь такой.
[15:59.680 --> 16:01.680]  Вот у нас есть функция общественного выбора.
[16:01.680 --> 16:03.680]  Пара функций Q от V, T от V.
[16:05.680 --> 16:09.680]  При каких условиях на эту пару функций,
[16:09.680 --> 16:12.680]  при каких условиях на эту пару функций,
[16:12.680 --> 16:16.680]  при каких условиях на эту пару можно утверждать,
[16:16.680 --> 16:19.680]  что у нас есть байсовская совместимость со стимулами?
[16:24.680 --> 16:30.680]  Байсовская это значит, что если все агенты жизни равной и говорят правду,
[16:30.680 --> 16:35.680]  то И.Т. тоже это выгодно. Тоже говорит правду.
[16:36.680 --> 16:38.680]  Т.е. вот это механизм прямого явления,
[16:38.680 --> 16:42.680]  в котором если все играют правдивую стратегию,
[16:42.680 --> 16:44.680]  то я тоже играю правдивую стратегию.
[16:44.680 --> 16:47.680]  Вот это условие байсовской совместимости со стимулами.
[16:48.680 --> 16:50.680]  Сейчас мы будем его выводить.
[16:52.680 --> 16:54.680]  Это будет необходимое условие.
[16:58.680 --> 17:02.680]  Начнем с того, что у нас есть механизм,
[17:02.680 --> 17:06.680]  задающийся парой функций Q от V, T от V.
[17:06.680 --> 17:10.680]  У нас с точки зрения И.Т. участников, которые не знают.
[17:10.680 --> 17:13.680]  Допустим, он даже верит в то, что все действуют правдиво,
[17:13.680 --> 17:15.680]  но он же не знает типа других людей.
[17:15.680 --> 17:20.680]  Поэтому он не знает, что реализуется.
[17:20.680 --> 17:23.680]  Какие Q.Б.И.Т. реализуются?
[17:23.680 --> 17:25.680]  Какое Q.Б.И.Т. реализуется?
[17:25.680 --> 17:27.680]  Какое T.Б.И.Т. реализуется?
[17:27.680 --> 17:32.680]  Сколько товара ему дадут, сколько денег он заплатит.
[17:32.680 --> 17:33.680]  Он не знает.
[17:34.680 --> 17:39.680]  Ему надо посчитать математическое ожидание того и другого.
[17:39.680 --> 17:43.680]  Учитывая, что обе эти величины, Q.И.Т. и T.И.Т.,
[17:43.680 --> 17:46.680]  они входят линейно в функции полезности.
[17:46.680 --> 17:48.680]  Когда мы вычисляем ожидаемую полезность,
[17:48.680 --> 17:52.680]  то нам нужно вычислить V.И.Т. умножить на матождание Q.И.Т.
[17:52.680 --> 17:54.680]  минус матождание T.И.Т.
[17:54.680 --> 17:56.680]  Вот так и запишем.
[17:58.680 --> 18:01.680]  Соответственно, агент И, зная свой тип V.И.Т.,
[18:01.680 --> 18:04.680]  вычисляет мат ожидания Q.И.Т.
[18:04.680 --> 18:07.680]  и аналогично вычисляет мат ожидания T.И.Т.
[18:07.680 --> 18:10.680]  Соответственно, величину будем маленьким буквом писать.
[18:14.680 --> 18:16.680]  Я еще буду использовать на протяжении этой лекции
[18:16.680 --> 18:19.680]  и следующей, наверное, тоже вот такое обозначение.
[18:19.680 --> 18:24.680]  Мат ожидания с индексом И означает сокращение от вот такого.
[18:24.680 --> 18:27.680]  То есть с точки зрения этого участника.
[18:27.680 --> 18:29.680]  То есть этот участник знает свой тип,
[18:29.680 --> 18:31.680]  больше ничего не знает.
[18:31.680 --> 18:33.680]  Соответственно, нужно по всему остальному,
[18:33.680 --> 18:35.680]  по V.И.Т. нужно усреднить
[18:35.680 --> 18:38.680]  и вычислить интеграл с этой плотностью.
[18:41.680 --> 18:43.680]  Если мы пишем Q.И.Т., значит,
[18:43.680 --> 18:45.680]  мат ожидания с точки зрения Q.И.Т. участника T.И.Т. знают.
[18:45.680 --> 18:48.680]  Если мы пишем просто Q.И.Т. без нижнего индекса,
[18:48.680 --> 18:51.680]  это будет означать, что это мат ожидания
[18:51.680 --> 18:53.680]  со стороны внешнего наблюдателя,
[18:53.680 --> 18:54.680]  который не знает вообще ничего,
[18:54.680 --> 18:56.680]  со стороны дизайнера механизма.
[18:57.680 --> 19:00.680]  Или со стороны, допустим, даже И.Т. участника,
[19:00.680 --> 19:02.680]  но который еще не узнал свой тип.
[19:05.680 --> 19:08.680]  Итак, вот И.Т. участник
[19:08.680 --> 19:12.680]  в механизме прямого выявления решает такую задачу.
[19:12.680 --> 19:14.680]  Вот его функция полезности.
[19:14.680 --> 19:17.680]  Смотрите, V.И.Т. и Q.И.Т. минус T.И.Т.
[19:17.680 --> 19:19.680]  А что он может делать?
[19:19.680 --> 19:21.680]  В чем состоит его стратегия?
[19:21.680 --> 19:24.680]  В том, что он может этим механизмом манипулировать.
[19:25.680 --> 19:28.680]  Именно вместо своего истинного типа V.И.Т.
[19:28.680 --> 19:32.680]  он может объявить некое ложное объявление Z.И.Т.
[19:33.680 --> 19:36.680]  И, соответственно, он выбирает Z.И.Т.
[19:36.680 --> 19:42.680]  В ответ ему дают в мат ожидании Q.И.Т. T.И.Т.
[19:42.680 --> 19:44.680]  не от V.И.Т., а от Z.И.Т.
[19:44.680 --> 19:46.680]  Как он сказал, так ему дают.
[19:47.680 --> 19:49.680]  Но тип у него истинный, все-таки V.И.Т.
[19:50.680 --> 19:52.680]  Поэтому его функция полезности вот такая.
[19:52.680 --> 19:54.680]  V.И.Т., Q.И.Т. от Z.И.Т.,
[19:54.680 --> 19:56.680]  минус T.И.Т. от Z.И.Т.
[19:56.680 --> 20:00.680]  И максимизировать его надо по объявляемому типу Z.И.Т.
[20:02.680 --> 20:05.680]  И в результате решение задачи должно оказаться,
[20:05.680 --> 20:08.680]  что оптимально Z.И.Т. должен стать V.И.Т.
[20:10.680 --> 20:12.680]  Это и будет условие совместимости со стимулами.
[20:14.680 --> 20:17.680]  То есть условие совместимости со стимулами это вот такое,
[20:17.680 --> 20:21.680]  что для каждого V.И.Т. в этой задаче решение Z.И.Т. равно V.И.Т.
[20:23.680 --> 20:28.680]  Соответственно, полезность
[20:28.680 --> 20:31.680]  V.И.Т. участника в этом случае получается как?
[20:31.680 --> 20:33.680]  Мы подставляем эту функцию оптимум.
[20:33.680 --> 20:35.680]  Предположим, мы эту задачу уже решили.
[20:35.680 --> 20:37.680]  Решение оказалось такое, какое нам нужно.
[20:37.680 --> 20:38.680]  Мы его подставили.
[20:38.680 --> 20:40.680]  Вместо Z.И.Т. его подставили V.И.Т.
[20:40.680 --> 20:42.680]  То есть V.И.Т. от V.И.Т. V.И.Т.
[20:42.680 --> 20:45.680]  Или более подробно вот так можно расписать.
[20:45.680 --> 20:47.680]  V.И.Т. от V.И.Т.
[20:47.680 --> 20:49.680]  от V.И.Т.
[20:50.680 --> 20:55.680]  Обозначим эту максимальную полезность функции у.И.Т. с большой буквы U.
[21:03.680 --> 21:05.680]  Смотрите, сейчас будет пара условий,
[21:05.680 --> 21:09.680]  которые характеризуют совместимость со стимулами.
[21:09.680 --> 21:11.680]  Первое условие такое.
[21:11.680 --> 21:13.680]  Пока что мы его докажем как необходимое.
[21:13.680 --> 21:15.680]  Потом выясним, что оно достаточно тоже.
[21:16.680 --> 21:18.680]  Функция у.И.Т.
[21:19.680 --> 21:22.680]  обязательно не убывает по V.И.Т.
[21:24.680 --> 21:27.680]  Смотрите, при беглом взгляде на целевую функцию,
[21:27.680 --> 21:29.680]  вот на эту целевую функцию,
[21:29.680 --> 21:32.680]  агента И, на самом деле это уже видно.
[21:33.680 --> 21:34.680]  Видно. Почему?
[21:34.680 --> 21:36.680]  Потому что, смотрите,
[21:37.680 --> 21:38.680]  пара,
[21:41.680 --> 21:42.680]  скажем так,
[21:42.680 --> 21:44.680]  если бы было Q.И.Т. переменной,
[21:44.680 --> 21:46.680]  относительно которой делается выбор,
[21:46.680 --> 21:47.680]  представьте себе,
[21:47.680 --> 21:50.680]  то у нас была бы здесь супермодулярная функция.
[21:51.680 --> 21:54.680]  Супермодулярная функция по паре,
[21:54.680 --> 21:55.680]  переменная параметр,
[21:55.680 --> 21:58.680]  переменная оптимизация Z.И.Т., параметр V.И.Т.
[21:58.680 --> 21:59.680]  Мы знаем
[22:00.680 --> 22:03.680]  из теориала модернациальности,
[22:03.680 --> 22:04.680]  который я еще раз упоминал,
[22:05.680 --> 22:06.680]  что
[22:07.680 --> 22:09.680]  если у нас целевая функция
[22:09.680 --> 22:11.680]  супермодулярная по паре переменная параметр,
[22:11.680 --> 22:13.680]  то при увеличении параметра
[22:13.680 --> 22:18.680]  а оптимальное значение максимизированной переменной тоже должно не уменьшиться.
[22:18.680 --> 22:24.680]  И вот, соответственно, оптимальная куитоя должно не уменьшиться при росте параметра ваитоя,
[22:24.680 --> 22:27.680]  а при этом оптимальность затытоя должна быть равна этому самому ваитою.
[22:27.680 --> 22:38.680]  Тем самым отсюда куитоя должно быть не убывающим при изменении ваитоя.
[22:38.680 --> 22:41.680]  Ну, это такое рассуждение, использующее терямотенцерогнистатики.
[22:41.680 --> 22:45.680]  Если почему-то мы про нее забыли, то это очень легко доказать непосредственно.
[22:45.680 --> 22:47.680]  Самая-то теря очень простая, на самом деле.
[22:47.680 --> 22:53.680]  Повторяя логику доказательства, можно проделать такие рассуждения.
[22:53.680 --> 22:58.680]  Вот пусть, например, у нас есть ваитоя, наш истинный тип.
[22:58.680 --> 23:05.680]  И мы решили выбрать вместо затытоя уравного ваитоя затытое меньше, чем ваитое.
[23:05.680 --> 23:06.680]  Что тогда?
[23:06.680 --> 23:09.680]  Тогда мы должны от этого не выиграть, как минимум.
[23:09.680 --> 23:11.680]  То есть должно выполняться неравенство.
[23:11.680 --> 23:18.680]  Что если мы объявили наш истинный тип, то нам от этого не хуже, чем если мы объявили ложный тип затытое.
[23:20.680 --> 23:28.680]  Соответственно, подставим в эту функцию, что мы получаем.
[23:28.680 --> 23:31.680]  Но ваитое у нас одно и то же.
[23:31.680 --> 23:36.680]  Поэтому получается, ваитое множество разницы куитох должно быть больше или равно разниц тейтых.
[23:36.680 --> 23:38.680]  Вот так.
[23:40.680 --> 23:41.680]  Понятно.
[23:41.680 --> 23:43.680]  Хорошо.
[23:43.680 --> 23:44.680]  Теперь, что мы делаем?
[23:44.680 --> 23:48.680]  Меняем местами ваитое и затытое в этом неравенстве.
[23:48.680 --> 23:53.680]  Ведь, на самом деле, это просто две переменных.
[23:53.680 --> 23:59.680]  Почему бы тогда не выписать такое же точное неравенство для помененных местами ваитое и затытое?
[23:59.680 --> 24:00.680]  Тоже верно.
[24:00.680 --> 24:03.680]  Вот оно.
[24:03.680 --> 24:07.680]  Просто я механически поменял местами переменные.
[24:07.680 --> 24:12.680]  А теперь мы эти два неравенства складываем.
[24:12.680 --> 24:14.680]  Смотрите.
[24:14.680 --> 24:19.680]  В правой части сокращаются, правильно?
[24:19.680 --> 24:23.680]  А в левой части получается вот что.
[24:23.680 --> 24:27.680]  Вит минус Зит умножить на вот здесь.
[24:27.680 --> 24:30.680]  Здесь куитое от ваитое минус куитое от затытое.
[24:30.680 --> 24:32.680]  А здесь тоже самое знаком минус в скобках.
[24:32.680 --> 24:35.680]  Поэтому именно ваитое минус затытое, а не плюс.
[24:35.680 --> 24:37.680]  Вот такое произведение.
[24:37.680 --> 24:39.680]  Больше в нуля.
[24:39.680 --> 24:42.680]  И нам известно, что ваитое больше, чем затытое.
[24:42.680 --> 24:45.680]  Вот это вот положительное число.
[24:45.680 --> 24:48.680]  Значит то, что в скобках не отрицательное число.
[24:48.680 --> 24:51.680]  Еще доказали монотонность.
[24:54.680 --> 24:58.680]  А мы можем поменять ваитое и затытое местами?
[24:58.680 --> 25:01.680]  Потому что предполагается, что если человек честно
[25:01.680 --> 25:04.680]  говорит свой тип, то есть будто он является затытое,
[25:04.680 --> 25:08.680]  то ему не выгодно перейти на другую софту.
[25:08.680 --> 25:10.680]  Просто это буквы, на самом деле.
[25:10.680 --> 25:13.680]  Пусть у человека истинный тип равен затытое тому теперь.
[25:13.680 --> 25:15.680]  И он решил объявить, что он ваитое.
[25:15.680 --> 25:18.680]  Все равно должно появиться такое же неравенство.
[25:18.680 --> 25:21.680]  А второе свойство такое.
[25:21.680 --> 25:23.680]  Смотрите.
[25:23.680 --> 25:25.680]  Вот у нас есть функция у большое.
[25:25.680 --> 25:28.680]  Она получена как максимум в задаче оптимизации.
[25:28.680 --> 25:33.680]  Мы любим к такому делу применять теорему обогибающей.
[25:33.680 --> 25:38.680]  А именно дифференцировать функции у этой большой по витому.
[25:38.680 --> 25:40.680]  И мы знаем, чему это равно.
[25:40.680 --> 25:44.680]  Это равно частной производной целевой функции максимизируемой
[25:44.680 --> 25:49.680]  по параметру.
[25:49.680 --> 25:52.680]  Как если бы переменная от параметра не зависела.
[25:52.680 --> 25:56.680]  На самом деле переменная максимизации в оптимуме от параметра зависит.
[25:56.680 --> 25:59.680]  Но эта зависимость,
[25:59.680 --> 26:03.680]  ее влияние на самозначение своей функции,
[26:03.680 --> 26:05.680]  бесконечно малое более высокого порядка.
[26:05.680 --> 26:09.680]  Просто потому что в оптимуме эта функция
[26:09.680 --> 26:13.680]  должна мало меняться при изменении переменной максимизации.
[26:13.680 --> 26:16.680]  Как условие первого порядка.
[26:16.680 --> 26:20.680]  Поэтому мы дифференцируем.
[26:20.680 --> 26:22.680]  Функция у этой большой.
[26:22.680 --> 26:25.680]  Как если бы мы брали частную производную функцию у этой маленькой,
[26:25.680 --> 26:26.680]  потеряем обогибающей.
[26:26.680 --> 26:29.680]  И мы видим, что от у этой зависит она только здесь.
[26:29.680 --> 26:31.680]  У этой вообще никак не влияет.
[26:31.680 --> 26:36.680]  Соответственно, частная производная равна уитому.
[26:36.680 --> 26:38.680]  Подставить надо оптимум.
[26:38.680 --> 26:40.680]  То есть Ztt равно вит.
[26:40.680 --> 26:44.680]  И получается, что производная функция уитого равна к уитой от витого.
[26:44.680 --> 26:48.680]  Вот так.
[26:48.680 --> 26:51.680]  И далее.
[26:51.680 --> 26:54.680]  Отсюда мы находим функцию у теперь.
[26:54.680 --> 26:57.680]  У нас есть производная, мы можем найти функцию у.
[26:57.680 --> 26:59.680]  Это первообразная правая часть.
[26:59.680 --> 27:05.680]  Первообразная вычисляется вот таким образом.
[27:05.680 --> 27:08.680]  Как интеграл.
[27:08.680 --> 27:12.680]  Здесь имеется некая неопределенность.
[27:12.680 --> 27:17.680]  Как всегда у нас первообразная задается с точностью до параметра.
[27:17.680 --> 27:23.680]  Например, параметр можно назвать уитой от самого маленького типа.
[27:23.680 --> 27:27.680]  Уитой с нижней чертой.
[27:27.680 --> 27:30.680]  Почему обязательно с нижней чертой?
[27:30.680 --> 27:32.680]  Почему это обязательно должен быть самый маленький тип?
[27:32.680 --> 27:34.680]  Почему не использовать, например, правое краевое условие?
[27:34.680 --> 27:35.680]  Или иное условие.
[27:35.680 --> 27:36.680]  Какая разница?
[27:36.680 --> 27:43.680]  Можно любое условие использовать, как задача каши.
[27:43.680 --> 27:47.680]  Но в этом есть некий смысл, что именно это мы используем.
[27:47.680 --> 27:55.680]  Он станет ясным, когда мы будем говорить об условиях участия или индивидуальной рациональности.
[27:55.680 --> 28:05.680]  Окажется тогда, что участие в механизме агента с типом вит следует из участия самого нижнего агента.
[28:05.680 --> 28:07.680]  При некоторых условиях.
[28:07.680 --> 28:10.680]  При условиях, что все акуиты не отрицательные.
[28:10.680 --> 28:15.680]  Если же акуиты не обязательно не отрицательные, мы тоже можем рассмотреть.
[28:15.680 --> 28:19.680]  В такой случае такие модели тоже интересны.
[28:19.680 --> 28:24.680]  Нам, например, не обязательно же товар кому-то поступает.
[28:24.680 --> 28:26.680]  У кого-то он может и уйти из рук.
[28:27.680 --> 28:39.680]  В этом случае базовый тип будет другой.
[28:39.680 --> 28:41.680]  Какой?
[28:41.680 --> 28:50.680]  В любом случае, как бы это константа не была, какой бы она не была, с точностью до нее функция уйты большой определена.
[28:50.680 --> 28:51.680]  Однозначно.
[28:51.680 --> 28:54.680]  Если известна функция q маленькая.
[28:54.680 --> 29:02.680]  Получается, что вот у нас есть функция уйты.
[29:02.680 --> 29:06.680]  Ее производная при этом равна qt маленькой.
[29:06.680 --> 29:10.680]  Про qt маленькой мы знаем, что она обязательно не строго возрастающая.
[29:10.680 --> 29:12.680]  Что это означает?
[29:12.680 --> 29:14.680]  Вот мы интегрируем не строго возрастающую функцию.
[29:14.680 --> 29:16.680]  Получается выпуклая функция.
[29:17.680 --> 29:20.680]  Выпуклая это значит вот такая.
[29:21.680 --> 29:24.680]  У нее производная растет.
[29:24.680 --> 29:27.680]  Если это выпуклая функция.
[29:27.680 --> 29:30.680]  Если qt всегда не отрицательная.
[29:30.680 --> 29:34.680]  Значит это просто возрастающая функция.
[29:34.680 --> 29:36.680]  Неважно выпуклая или не выпуклая.
[29:36.680 --> 29:37.680]  Возрастающая.
[29:37.680 --> 29:40.680]  У нее самое маленькое значение при самом маленьком уйд.
[29:40.680 --> 29:44.680]  Если же среди qt встречается отрицательная.
[29:44.680 --> 29:46.680]  То все равно это функция выпуклая.
[29:46.680 --> 29:48.680]  Если это строго выпуклая функция.
[29:48.680 --> 29:50.680]  Она равна 1 июм.
[29:50.680 --> 29:52.680]  В середине или в начале или в конце отрезка.
[29:52.680 --> 29:54.680]  Но она равна 1.
[29:54.680 --> 29:56.680]  Если функция просто выпуклая.
[29:56.680 --> 29:58.680]  Не обязательно строго выпуклая.
[29:58.680 --> 30:00.680]  У нее может быть больше минимумов.
[30:00.680 --> 30:02.680]  Но она не образует выпуклой множество.
[30:02.680 --> 30:04.680]  Можно любое из них взять.
[30:04.680 --> 30:08.680]  Короче говоря имеет смысл в качестве базового уровня.
[30:08.680 --> 30:12.680]  В качестве базового типа рассматривать.
[30:12.680 --> 30:14.680]  На самом деле тип того участника.
[30:14.680 --> 30:18.680]  На котором эта функция уйд минимизируется.
[30:18.680 --> 30:20.680]  Например в задаче.
[30:20.680 --> 30:24.680]  Где у нас есть один продавец и один покупатель.
[30:24.680 --> 30:26.680]  Оба неизвестных типов.
[30:26.680 --> 30:28.680]  С неизвестной ценностью товара.
[30:28.680 --> 30:30.680]  Нижний тип покупателя.
[30:30.680 --> 30:32.680]  Это его наименьшая оценка.
[30:32.680 --> 30:34.680]  А нижний тип продавца.
[30:34.680 --> 30:36.680]  На самом деле его наибольшая оценка.
[30:36.680 --> 30:38.680]  Потому что имеет смысл издержки.
[30:38.680 --> 30:40.680]  Самый слабый продавец.
[30:40.680 --> 30:42.680]  Тот у которого самые большие издержки.
[30:42.680 --> 30:46.680]  Когда человек одновременно покупатель и продавец.
[30:46.680 --> 30:48.680]  Может быть еще интереснее.
[30:48.680 --> 30:52.680]  Некий промежуточный тип может оказаться нижним.
[30:52.680 --> 30:54.680]  Хорошо.
[30:54.680 --> 30:56.680]  Тем не менее так или иначе.
[30:56.680 --> 30:58.680]  Будем пока считать.
[30:58.680 --> 31:00.680]  Нижний тип это именно левая граница.
[31:00.680 --> 31:02.680]  Множество типов.
[31:02.680 --> 31:04.680]  Тогда вот как вычисляется функция у.
[31:04.680 --> 31:06.680]  Давайте отсюда выразим т и т.
[31:06.680 --> 31:08.680]  Отсюда можно т и т выразить.
[31:08.680 --> 31:10.680]  Потому что у и т равно.
[31:10.680 --> 31:12.680]  У и т равно как написано.
[31:12.680 --> 31:14.680]  Вот чему.
[31:14.680 --> 31:16.680]  То есть.
[31:16.680 --> 31:18.680]  В и т и у и т минус у и т.
[31:18.680 --> 31:20.680]  Равно этой правой части.
[31:20.680 --> 31:22.680]  Отсюда вычисляется у и т.
[31:22.680 --> 31:24.680]  Вот так.
[31:24.680 --> 31:26.680]  Вот у нас минус у и т.
[31:26.680 --> 31:28.680]  Это минус интеграл.
[31:32.680 --> 31:34.680]  Соответственно.
[31:40.680 --> 31:42.680]  Вот так считается т и т.
[31:42.680 --> 31:44.680]  Ну и еще я повторил условия.
[31:44.680 --> 31:46.680]  Монотонности функции у.
[31:46.680 --> 31:48.680]  Их можно.
[31:48.680 --> 31:50.680]  Вот так обозвать.
[31:50.680 --> 31:52.680]  Условия монотонности буквы м.
[31:52.680 --> 31:54.680]  Условия.
[31:54.680 --> 31:56.680]  Которые на самом деле.
[31:56.680 --> 31:58.680]  Получили из теории новогибающие.
[31:58.680 --> 32:00.680]  Вот это равенство или вот это равенство.
[32:00.680 --> 32:02.680]  Эквалентное у.
[32:02.680 --> 32:04.680]  Будем называть.
[32:04.680 --> 32:06.680]  Инициатив compatibility.
[32:06.680 --> 32:08.680]  Или дифференциальная версия.
[32:08.680 --> 32:10.680]  Дифференциальная версия.
[32:10.680 --> 32:12.680]  В этих словах.
[32:12.680 --> 32:14.680]  Заключается некое недоверие.
[32:14.680 --> 32:16.680]  То есть.
[32:16.680 --> 32:18.680]  Точно ли это.
[32:18.680 --> 32:20.680]  Это вроде как необходимые условия.
[32:20.680 --> 32:22.680]  Почему оно и достаточно.
[32:22.680 --> 32:24.680]  На самом деле.
[32:24.680 --> 32:26.680]  Вместе с м.
[32:26.680 --> 32:28.680]  Они являются оба.
[32:28.680 --> 32:30.680]  По отдельности.
[32:30.680 --> 32:32.680]  Вместе с м.
[32:32.680 --> 32:34.680]  Уже являются.
[32:34.680 --> 32:36.680]  Доказательства.
[32:36.680 --> 32:38.680]  Предположим.
[32:38.680 --> 32:40.680]  Что выполнена дифференциальная версия.
[32:40.680 --> 32:42.680]  Совместимость системы.
[32:42.680 --> 32:44.680]  При этом.
[32:44.680 --> 32:46.680]  Вот это вот.
[32:46.680 --> 32:48.680]  Последнее слагаемое.
[32:48.680 --> 32:50.680]  Это просто любая константа.
[32:50.680 --> 32:52.680]  Мы не вдаемся в детали откуда она взялась.
[32:52.680 --> 32:54.680]  Какая-то там. Не знаю.
[32:54.680 --> 32:56.680]  С.
[32:56.680 --> 32:58.680]  Тогда.
[32:58.680 --> 33:00.680]  Что мы хотим.
[33:00.680 --> 33:02.680]  Мы хотим проверить настоящую совместимость.
[33:02.680 --> 33:04.680]  Для этого мы берем.
[33:04.680 --> 33:06.680]  И вычитаем оттуда полезность.
[33:06.680 --> 33:08.680]  Если агент говорит правду.
[33:08.680 --> 33:10.680]  То есть заявляет.
[33:10.680 --> 33:12.680]  Вот оно.
[33:12.680 --> 33:14.680]  И вычитаем оттуда.
[33:14.680 --> 33:16.680]  Полезность.
[33:16.680 --> 33:18.680]  Если агент говорит.
[33:18.680 --> 33:20.680]  Разница должна быть.
[33:20.680 --> 33:22.680]  Не отрицательна.
[33:22.680 --> 33:24.680]  И всегда.
[33:24.680 --> 33:26.680]  Давайте в этом убедимся.
[33:26.680 --> 33:28.680]  Вычислим.
[33:28.680 --> 33:30.680]  У.
[33:30.680 --> 33:32.680]  Смотрите.
[33:32.680 --> 33:34.680]  Вот отсюда сразу можно брать.
[33:34.680 --> 33:36.680]  Знак минус только забыв.
[33:36.680 --> 33:38.680]  Не забыв.
[33:38.680 --> 33:40.680]  Знак минус убрать.
[33:40.680 --> 33:42.680]  И.
[33:42.680 --> 33:44.680]  Соответственно.
[33:44.680 --> 33:46.680]  У.И.Т. равно.
[33:46.680 --> 33:48.680]  В.И.Т. к У.И.Т. минус Т.И.Т.
[33:48.680 --> 33:50.680]  Поэтому мы вот так пишем.
[33:50.680 --> 33:52.680]  Дальше мы все это.
[33:52.680 --> 33:54.680]  Вот подставляем.
[33:54.680 --> 33:56.680]  У.И.Т. отсюда.
[33:56.680 --> 33:58.680]  Т.И.Т. соответственно отсюда.
[33:58.680 --> 34:00.680]  То есть смотрите.
[34:00.680 --> 34:02.680]  Вот У.И.Т.
[34:02.680 --> 34:04.680]  У.И.Т. соответственно.
[34:04.680 --> 34:06.680]  У нас вот эта константа сократится.
[34:06.680 --> 34:08.680]  Она будет с знаком плюс,
[34:08.680 --> 34:10.680]  с знаком минус сократится.
[34:10.680 --> 34:12.680]  От У.И.Т. останется вот эта слагаемая.
[34:14.680 --> 34:16.680]  Так.
[34:16.680 --> 34:18.680]  Соответственно.
[34:18.680 --> 34:20.680]  Интеграл от В.И.Т. нижнее.
[34:20.680 --> 34:22.680]  Именно до В.И.Т.
[34:22.680 --> 34:24.680]  Потому что У.И.Т. от В.И.Т. минус.
[34:24.680 --> 34:26.680]  В.И.Т. к В.И.Т. здесь ничего не меняется.
[34:26.680 --> 34:28.680]  Плюс.
[34:28.680 --> 34:30.680]  Т.И.Т.
[34:30.680 --> 34:32.680]  А Т.И.Т. мы переписываем отсюда.
[34:34.680 --> 34:36.680]  Переписали, но сократили
[34:36.680 --> 34:38.680]  вот эту константу.
[34:38.680 --> 34:40.680]  Хорошо.
[34:40.680 --> 34:42.680]  Теперь мы это немножко упрощаем.
[34:42.680 --> 34:44.680]  Смотрите.
[34:46.680 --> 34:48.680]  Во-первых интеграл у нас от В.И.Т. нижнее
[34:48.680 --> 34:50.680]  до В.И.Т. минус интеграл
[34:50.680 --> 34:52.680]  той же самой функции.
[34:52.680 --> 34:54.680]  Под интегральной от В.И.Т. нижней до З.И.Т.
[34:54.680 --> 34:56.680]  Это то же самое, что интеграл от
[34:56.680 --> 34:58.680]  Д.В.И.Т.
[34:58.680 --> 35:00.680]  от К.И.Т.
[35:00.680 --> 35:02.680]  И отсюда мы вычитаем
[35:02.680 --> 35:04.680]  разницу.
[35:04.680 --> 35:06.680]  В.И.Т. минус
[35:06.680 --> 35:08.680]  З.И.Т. умножить на
[35:08.680 --> 35:10.680]  К.И.Т.
[35:10.680 --> 35:12.680]  от З.И.Т.
[35:14.680 --> 35:16.680]  Соответственно.
[35:16.680 --> 35:18.680]  Что это означает?
[35:18.680 --> 35:20.680]  Мы можем эту разницу формально записать
[35:20.680 --> 35:22.680]  как тоже интеграл.
[35:22.680 --> 35:24.680]  В.И.Т.
[35:24.680 --> 35:26.680]  Интеграл от единицы
[35:26.680 --> 35:28.680]  от З.И.Т.
[35:28.680 --> 35:30.680]  до В.И.Т.
[35:30.680 --> 35:32.680]  равен
[35:32.680 --> 35:34.680]  В.И.Т. минус З.И.Т.
[35:34.680 --> 35:36.680]  Ну и мы
[35:36.680 --> 35:38.680]  если интегрировать не единицу, а константу
[35:38.680 --> 35:40.680]  К.И.Т. от З.И.Т. по Д.З.
[35:40.680 --> 35:42.680]  Не по Д.З.И.Т., а именно по Д.З.
[35:42.680 --> 35:44.680]  Это разные переменные. Соответственно
[35:44.680 --> 35:46.680]  просто умножать длину отрезка на это число.
[35:46.680 --> 35:48.680]  Получается, что
[35:48.680 --> 35:50.680]  эти слага
[35:50.680 --> 35:52.680]  мы тоже можем запихнуть под интеграл
[35:52.680 --> 35:54.680]  вот таким образом.
[35:54.680 --> 35:56.680]  И отсюда уже прямо видно
[35:56.680 --> 35:58.680]  что это не отрицательная величина.
[35:58.680 --> 36:00.680]  Смотрите.
[36:00.680 --> 36:02.680]  У нас здесь свойство
[36:02.680 --> 36:04.680]  M играет. Вот в этот момент
[36:04.680 --> 36:06.680]  это ружье стреляет. Потому что
[36:06.680 --> 36:08.680]  функция К.И.Т.
[36:08.680 --> 36:10.680]  монотонная, не убывающая.
[36:10.680 --> 36:12.680]  Значит, предположим, что
[36:12.680 --> 36:14.680]  нижние пределы интегрирования меньше
[36:14.680 --> 36:16.680]  верхнего. З.И.Т. меньше вы этого.
[36:16.680 --> 36:18.680]  Тогда у нас
[36:18.680 --> 36:20.680]  отрезок интегрирования
[36:20.680 --> 36:22.680]  обычным образом ориентирован.
[36:22.680 --> 36:24.680]  И эта разница
[36:24.680 --> 36:26.680]  получается
[36:26.680 --> 36:28.680]  Смотрите. Z между этими величинами.
[36:28.680 --> 36:30.680]  То есть не меньше, чем Z.И.Т.
[36:30.680 --> 36:32.680]  Значит, эта разница
[36:32.680 --> 36:34.680]  не отрицательная.
[36:34.680 --> 36:36.680]  Не отрицательная разница интегрируется
[36:36.680 --> 36:38.680]  по отрезку
[36:38.680 --> 36:40.680]  в положительном направлении.
[36:40.680 --> 36:42.680]  Получается не отрицательная
[36:42.680 --> 36:44.680]  величина.
[36:44.680 --> 36:46.680]  Либо Z.И.Т. больше, чем
[36:46.680 --> 36:48.680]  Z.И.Т.
[36:48.680 --> 36:50.680]  Тогда пределы интегрирования
[36:50.680 --> 36:52.680]  оставлены в противоестественном порядке.
[36:52.680 --> 36:54.680]  Значит, у нас будет
[36:54.680 --> 36:56.680]  минус интеграл, если мы
[36:56.680 --> 36:58.680]  брали их в естественном порядке.
[36:58.680 --> 37:00.680]  Разница, с которой мы интегрируем, тоже
[37:00.680 --> 37:02.680]  неположительная, отрицательная.
[37:02.680 --> 37:04.680]  В результате у нас получается все равно
[37:04.680 --> 37:06.680]  не отрицательная величина.
[37:06.680 --> 37:08.680]  Таким образом,
[37:08.680 --> 37:10.680]  мы догазали, что
[37:10.680 --> 37:12.680]  из этих двух свойств следует
[37:12.680 --> 37:14.680]  настоящая совместимость со стилами.
[37:14.680 --> 37:16.680]  То есть,
[37:16.680 --> 37:18.680]  что-то вроде
[37:18.680 --> 37:20.680]  слоя первого порядка, да?
[37:20.680 --> 37:22.680]  Но мы таким образом
[37:22.680 --> 37:24.680]  из монотонности вывели,
[37:24.680 --> 37:26.680]  что это настоящий оптимум.
[37:26.680 --> 37:28.680]  Как бы слоя второго порядка.
[37:28.680 --> 37:30.680]  Даже просто проверили, что оптимум все.
[37:32.680 --> 37:34.680]  И вывод такой же. Задача разработки механизмов
[37:34.680 --> 37:36.680]  можно заменить
[37:36.680 --> 37:38.680]  в сложно устроенную
[37:38.680 --> 37:40.680]  слою совместимость со стилами.
[37:40.680 --> 37:42.680]  Какая-то задача во всех случаях
[37:42.680 --> 37:44.680]  иметь такое-то решение, да?
[37:44.680 --> 37:46.680]  Это непонятное какое-то условие,
[37:46.680 --> 37:48.680]  непонятно, как его обрабатывать.
[37:48.680 --> 37:50.680]  Мы можем заменить
[37:50.680 --> 37:52.680]  просто набором равенства вот таких.
[37:52.680 --> 37:54.680]  Ну, точнее, равенством
[37:54.680 --> 37:56.680]  для всех водитых.
[37:56.680 --> 37:58.680]  Но плюс еще правда
[37:58.680 --> 38:00.680]  вот это дополнительное ограничение,
[38:00.680 --> 38:02.680]  которое надо проверять.
[38:02.680 --> 38:04.680]  И может быть
[38:04.680 --> 38:06.680]  не очень понятно, что делать, если оно
[38:06.680 --> 38:08.680]  оказывается сдерживающим.
[38:08.680 --> 38:10.680]  Но если нет, то как бы про него
[38:10.680 --> 38:12.680]  можно потом и забыть.
[38:14.680 --> 38:16.680]  Хорошо.
[38:16.680 --> 38:18.680]  Вот необходимые слои Байтска
[38:18.680 --> 38:20.680]  совместимости со стимулами мы вывели.
[38:20.680 --> 38:22.680]  На этом можно небольшой перерыв.
[38:22.680 --> 38:24.680]  Хорошо, продолжаем.
[38:24.680 --> 38:26.680]  Вот так вот мы
[38:26.680 --> 38:28.680]  получили условия
[38:30.680 --> 38:32.680]  эквивалентные условия
[38:32.680 --> 38:34.680]  совместимости со стимулами.
[38:34.680 --> 38:36.680]  Из этого можно делать далеко идущие выводы.
[38:36.680 --> 38:38.680]  Например, принцип эквивалентности доходов.
[38:38.680 --> 38:40.680]  Это утверждение
[38:40.680 --> 38:42.680]  теоремы про аукционы,
[38:42.680 --> 38:44.680]  но она на самом деле про вщеринейные механизмы.
[38:46.680 --> 38:48.680]  Просто можно посмотреть
[38:48.680 --> 38:50.680]  на условия оси штрих.
[38:50.680 --> 38:52.680]  Чем определяется
[38:52.680 --> 38:54.680]  ожидаемый платеж агента И,
[38:54.680 --> 38:56.680]  ТИТ маленькая?
[38:56.680 --> 38:58.680]  Он вычисляется
[38:58.680 --> 39:00.680]  только если знать
[39:00.680 --> 39:02.680]  функции КУИТ
[39:02.680 --> 39:04.680]  и величину
[39:04.680 --> 39:06.680]  константа УИТ
[39:06.680 --> 39:08.680]  базовая.
[39:12.680 --> 39:14.680]  В частности, если нам
[39:14.680 --> 39:16.680]  известно правило принятия решения
[39:16.680 --> 39:18.680]  функции КУИТ
[39:18.680 --> 39:20.680]  и известно
[39:20.680 --> 39:22.680]  благосостояние агента самого нижнего типа,
[39:22.680 --> 39:24.680]  то автоматически
[39:24.680 --> 39:26.680]  из этого только одним образом
[39:26.680 --> 39:28.680]  может быть вычислен ожидаемый платеж
[39:28.680 --> 39:30.680]  агента И.
[39:30.680 --> 39:32.680]  Применительно
[39:32.680 --> 39:34.680]  к аукционам.
[39:34.680 --> 39:36.680]  Если у нас есть
[39:36.680 --> 39:38.680]  два аукциона,
[39:38.680 --> 39:40.680]  у которых
[39:40.680 --> 39:42.680]  одинаково
[39:42.680 --> 39:44.680]  процедура КУИТ
[39:44.680 --> 39:46.680]  или просто вероятность получения товара
[39:46.680 --> 39:48.680]  при данном типе.
[39:48.680 --> 39:50.680]  Например,
[39:50.680 --> 39:52.680]  аукцион эффективный.
[39:52.680 --> 39:54.680]  То есть товар дается тому,
[39:54.680 --> 39:56.680]  кто имеет наивысшую оценку.
[39:56.680 --> 39:58.680]  Если применяются
[39:58.680 --> 40:00.680]  в двух разных аукционах одно и то же правило
[40:00.680 --> 40:02.680]  того, кому выдается товар.
[40:02.680 --> 40:04.680]  И благосостояние
[40:04.680 --> 40:06.680]  каждого покупателя самого нижнего типа
[40:06.680 --> 40:08.680]  не отличается в двух аукционах.
[40:08.680 --> 40:10.680]  Например,
[40:10.680 --> 40:12.680]  ну, скорее всего, нижний тип,
[40:12.680 --> 40:14.680]  человек-представитель нижнего типа
[40:14.680 --> 40:16.680]  не побеждает
[40:16.680 --> 40:18.680]  в аукционе, не получает товар, ничего не платит.
[40:20.680 --> 40:22.680]  В этом случае мы можем делать вывод,
[40:22.680 --> 40:24.680]  что
[40:24.680 --> 40:26.680]  одинаково в двух процедурах
[40:26.680 --> 40:28.680]  ожидаемые расходы каждого покупателя
[40:28.680 --> 40:30.680]  при известном ВАИТе.
[40:30.680 --> 40:32.680]  А значит,
[40:32.680 --> 40:34.680]  одинаковые ожидаемые расходы каждого покупателя
[40:34.680 --> 40:36.680]  при еще неизвестном ВАИТе
[40:36.680 --> 40:38.680]  до узнавания ВАИТа.
[40:38.680 --> 40:40.680]  А значит,
[40:40.680 --> 40:42.680]  если это все просуммировать по И,
[40:42.680 --> 40:44.680]  то получится ожидаемый доход продавца,
[40:44.680 --> 40:46.680]  который тоже не знает типа.
[40:46.680 --> 40:48.680]  Он тоже будет одинаковым в двух процедурах.
[40:48.680 --> 40:50.680]  Ну, например,
[40:50.680 --> 40:52.680]  вот есть
[40:52.680 --> 40:54.680]  аукцион
[40:54.680 --> 40:56.680]  второй цены.
[40:56.680 --> 40:58.680]  Допустим, у нас есть
[40:58.680 --> 41:00.680]  одинаково распределенные
[41:00.680 --> 41:02.680]  независимые оценки,
[41:02.680 --> 41:04.680]  распределенные с помощью функции споделения
[41:04.680 --> 41:06.680]  F кумулятивной.
[41:06.680 --> 41:08.680]  Мы знаем, как вычисляется
[41:08.680 --> 41:10.680]  ожидаемый платеж
[41:10.680 --> 41:12.680]  покупателя
[41:12.680 --> 41:14.680]  в аукционе второй цены. Допустим, мы
[41:14.680 --> 41:16.680]  только знаем про аукцион
[41:16.680 --> 41:18.680]  второй цены одну вещь простую,
[41:18.680 --> 41:20.680]  что там доминирующей стратегией является
[41:20.680 --> 41:22.680]  делать ставку равной
[41:22.680 --> 41:24.680]  товару.
[41:24.680 --> 41:26.680]  Из этого мы делаем вывод такой,
[41:26.680 --> 41:28.680]  что
[41:28.680 --> 41:30.680]  ожидаемый платеж,
[41:30.680 --> 41:32.680]  если у меня тип И
[41:32.680 --> 41:34.680]  равен вероятности
[41:34.680 --> 41:36.680]  того, что я выиграю в этом аукционе,
[41:36.680 --> 41:38.680]  то есть, что
[41:38.680 --> 41:40.680]  типы всех остальных участников, их ценности
[41:40.680 --> 41:42.680]  будут меньше моей ценности.
[41:42.680 --> 41:44.680]  Y обозначим максимум
[41:44.680 --> 41:46.680]  ценности среди остальных участников
[41:46.680 --> 41:48.680]  вот так.
[41:48.680 --> 41:50.680]  Это случайная величина, имеющая распределение
[41:50.680 --> 41:52.680]  согласно функции G
[41:52.680 --> 41:54.680]  равной
[41:54.680 --> 41:56.680]  F в степени
[41:56.680 --> 41:58.680]  минус один.
[41:58.680 --> 42:00.680]  Поскольку одновременно должно выполняться
[42:00.680 --> 42:02.680]  условие, что
[42:02.680 --> 42:04.680]  я первый человек, что
[42:04.680 --> 42:06.680]  Y2 меньше
[42:06.680 --> 42:08.680]  моего
[42:08.680 --> 42:10.680]  Y1,
[42:10.680 --> 42:12.680]  Y3 меньше Y1 и так далее.
[42:12.680 --> 42:14.680]  Одновременно
[42:14.680 --> 42:16.680]  реализуется именно одно случайное событие,
[42:16.680 --> 42:18.680]  вероятности перемножаются,
[42:18.680 --> 42:20.680]  как у независимых событий
[42:20.680 --> 42:22.680]  и получается
[42:22.680 --> 42:24.680]  вот такая функция распределения.
[42:24.680 --> 42:26.680]  Вот с помощью этой функции распределения
[42:26.680 --> 42:28.680]  распределена случайная величина Y.
[42:28.680 --> 42:30.680]  Вероятность того,
[42:30.680 --> 42:32.680]  что эта случайная величина
[42:32.680 --> 42:34.680]  меньше моего типа
[42:34.680 --> 42:36.680]  умножена на условное
[42:36.680 --> 42:38.680]  отожидание этой случайной величины
[42:38.680 --> 42:40.680]  при этом условии.
[42:40.680 --> 42:42.680]  Можно было бы написать по-другому,
[42:42.680 --> 42:44.680]  что это интеграл
[42:44.680 --> 42:46.680]  от нижнего типа
[42:46.680 --> 42:48.680]  до моего типа
[42:50.680 --> 42:52.680]  величины Y по ее плотности.
[42:54.680 --> 42:56.680]  Это тоже самое.
[42:58.680 --> 43:00.680]  Хорошо. То есть это мы легко
[43:00.680 --> 43:02.680]  вычислили.
[43:02.680 --> 43:04.680]  А дальше отсюда мы
[43:04.680 --> 43:06.680]  получаем bidding strategy, то есть
[43:06.680 --> 43:08.680]  стратегию делания ставок
[43:08.680 --> 43:10.680]  для аукциона первой цены, не анализируя эту базовую игру.
[43:10.680 --> 43:12.680]  Смотрите, как замечательно.
[43:12.680 --> 43:14.680]  Но мы это делали, конечно, уже
[43:14.680 --> 43:16.680]  мы всячески ее проанализировали
[43:16.680 --> 43:18.680]  не один раз.
[43:18.680 --> 43:20.680]  Но представим себе, что мы этого не делали
[43:20.680 --> 43:22.680]  и не умеем это делать вообще.
[43:22.680 --> 43:24.680]  Тем не менее, мы знаем,
[43:24.680 --> 43:26.680]  как вычислить стратегию.
[43:26.680 --> 43:28.680]  Или, например, вот у вас
[43:28.680 --> 43:30.680]  на семинаре рассматривает пример.
[43:30.680 --> 43:32.680]  У вас в курсе теории игр была задачка
[43:32.680 --> 43:34.680]  про аукцион средней цены.
[43:34.680 --> 43:36.680]  Кто его знает, как в этом аукционе
[43:36.680 --> 43:38.680]  вычислять стратегию?
[43:38.680 --> 43:40.680]  Но мы тоже в нем можем
[43:40.680 --> 43:42.680]  вычислить ее
[43:42.680 --> 43:44.680]  через эквалинатных доходов.
[43:44.680 --> 43:46.680]  Значит, смотрите.
[43:46.680 --> 43:48.680]  В аукционе первой цены
[43:48.680 --> 43:50.680]  что важно?
[43:50.680 --> 43:52.680]  Что если у нас симметричный
[43:52.680 --> 43:54.680]  сетинг, независимые частные
[43:54.680 --> 43:56.680]  оценки симметричные,
[43:56.680 --> 43:58.680]  то мы можем утверждать,
[43:58.680 --> 44:00.680]  скорее всего,
[44:00.680 --> 44:02.680]  что действительно в аукционе первой цены
[44:02.680 --> 44:04.680]  товар достанется тому, кому он
[44:04.680 --> 44:06.680]  больше всего нужен.
[44:06.680 --> 44:08.680]  Ну и также, если
[44:08.680 --> 44:10.680]  человек
[44:10.680 --> 44:12.680]  сам нижний тип, ну допустим, все от нуля
[44:12.680 --> 44:14.680]  начинается, да, у нас типы ценности,
[44:14.680 --> 44:16.680]  тогда он ничего не получит.
[44:18.680 --> 44:20.680]  Соответственно,
[44:20.680 --> 44:22.680]  условия принципа эквалинатных доходов
[44:22.680 --> 44:24.680]  выполнена. Значит, можно утверждать, что
[44:24.680 --> 44:26.680]  ТИТ от выгоды в аукционе
[44:26.680 --> 44:28.680]  первой цены точно
[44:28.680 --> 44:30.680]  такое же, как вот здесь вычислено.
[44:32.680 --> 44:34.680]  А в аукционе первой цены у нас что?
[44:34.680 --> 44:36.680]  У нас ставка,
[44:36.680 --> 44:38.680]  то есть,
[44:38.680 --> 44:40.680]  нет, ожидаемый платеж равен вот чему.
[44:40.680 --> 44:42.680]  Это вероятность умножить
[44:42.680 --> 44:44.680]  на, собственно говоря,
[44:44.680 --> 44:46.680]  ставку, которую говорим мы,
[44:46.680 --> 44:48.680]  на БАИТ. То есть,
[44:48.680 --> 44:50.680]  если мы побеждаем в аукционе, что происходит
[44:50.680 --> 44:52.680]  с этой вероятностью,
[44:52.680 --> 44:54.680]  то у нас
[44:54.680 --> 44:56.680]  совершенно определенный платеж вот такой,
[44:56.680 --> 44:58.680]  БАИТ. Мы платим свою первую цену.
[45:00.680 --> 45:02.680]  Соответственно,
[45:02.680 --> 45:04.680]  если так, то БАИТ вычисляется,
[45:04.680 --> 45:06.680]  то получается, как ожидаемый платеж
[45:06.680 --> 45:08.680]  делить на эту вероятность.
[45:08.680 --> 45:10.680]  А вероятность равна G от ВИТ.
[45:12.680 --> 45:14.680]  Соответственно, мы получаем опять
[45:14.680 --> 45:16.680]  то, что мы уже получали.
[45:18.680 --> 45:20.680]  Равновесная стратегия в аукционе первой цены.
[45:20.680 --> 45:22.680]  Ну и для другой процедуры
[45:22.680 --> 45:24.680]  аукциона
[45:24.680 --> 45:26.680]  можно аналогично вычислить.
[45:26.680 --> 45:28.680]  То есть, принцип эквалинатных доходов
[45:28.680 --> 45:30.680]  позволяет
[45:30.680 --> 45:32.680]  вычислять
[45:32.680 --> 45:34.680]  стратегию в аукционах, например.
[45:36.680 --> 45:38.680]  Ну и какое для чего еще?
[45:38.680 --> 45:40.680]  На самом деле, все это просто
[45:40.680 --> 45:42.680]  переформулировка одного утверждения,
[45:42.680 --> 45:44.680]  что у нас из БАИТ
[45:44.680 --> 45:46.680]  в совместимости со стимулами следует
[45:46.680 --> 45:48.680]  определенный вид ожидаемой функции
[45:48.680 --> 45:50.680]  платежа. Вот только такой,
[45:50.680 --> 45:52.680]  не какой другой.
[45:54.680 --> 45:56.680]  Хорошо. Теперь поговорим про другие
[45:56.680 --> 45:58.680]  требования к механизму. Вообще,
[45:58.680 --> 46:00.680]  чего мы хотим от механизмов?
[46:00.680 --> 46:02.680]  Общественного выбора. Мы хотим
[46:02.680 --> 46:04.680]  обычно четырех вещей,
[46:04.680 --> 46:06.680]  совместимых со стимулами.
[46:06.680 --> 46:08.680]  Но это не то, что мы хотим, а просто
[46:08.680 --> 46:10.680]  мы это автоматически
[46:10.680 --> 46:12.680]  получаем. Если мы говорим
[46:12.680 --> 46:14.680]  о произвольном механизме,
[46:14.680 --> 46:16.680]  то та функция, которую мы имплеметировали
[46:16.680 --> 46:18.680]  в БАИТском равновесии, это и будет
[46:18.680 --> 46:20.680]  совместимая со стимулами функция общественного
[46:20.680 --> 46:22.680]  выбора какая-то. Но надо, чтобы мы это
[46:22.680 --> 46:24.680]  контролировали и могли предсказать.
[46:24.680 --> 46:26.680]  Если же мы организуем механизм
[46:26.680 --> 46:28.680]  прямого выявления, то у нас все-таки требования
[46:28.680 --> 46:30.680]  на него ключевые, чтобы он был
[46:30.680 --> 46:32.680]  с правдивым
[46:32.680 --> 46:34.680]  равновесием.
[46:34.680 --> 46:36.680]  Соответственно, мы увидели,
[46:36.680 --> 46:38.680]  какие условия для этого необходимы достаточно.
[46:38.680 --> 46:40.680]  Вот я еще раз их выписал.
[46:40.680 --> 46:42.680]  Дальше. Вообще
[46:42.680 --> 46:44.680]  нам хочется, чтобы у нас был эффективный исход.
[46:44.680 --> 46:46.680]  А также баланс бюджета.
[46:46.680 --> 46:48.680]  Все вместе одно плюс другое
[46:48.680 --> 46:50.680]  называется экспостэффективностью.
[46:50.680 --> 46:52.680]  То есть порядок оптимальности.
[46:54.680 --> 46:56.680]  Ну а также, если у нас нет
[46:56.680 --> 46:58.680]  нуждения, чтобы люди не сбежали
[46:58.680 --> 47:00.680]  с нашего механизма, когда мы хотим
[47:00.680 --> 47:02.680]  насильно осчастливить,
[47:02.680 --> 47:04.680]  надо, чтобы каждый
[47:04.680 --> 47:06.680]  получал не меньше,
[47:06.680 --> 47:08.680]  чем то, что он может получить, не участвуя
[47:08.680 --> 47:10.680]  в механизме. Мы можем нормировать
[47:10.680 --> 47:12.680]  полезности так, что
[47:12.680 --> 47:14.680]  альтернативная полезность равна нулю.
[47:18.680 --> 47:20.680]  Соответственно,
[47:20.680 --> 47:22.680]  полезность каждого
[47:22.680 --> 47:24.680]  участника в равновесии
[47:24.680 --> 47:26.680]  должна быть не отрицательной.
[47:26.680 --> 47:28.680]  Вот об этом сейчас
[47:28.680 --> 47:30.680]  и поговорим.
[47:30.680 --> 47:32.680]  Смотрите.
[47:32.680 --> 47:34.680]  Давайте предположим,
[47:34.680 --> 47:36.680]  что все куиты не отрицательны.
[47:36.680 --> 47:38.680]  На самом деле, это не
[47:38.680 --> 47:40.680]  ограничивающее предположение.
[47:40.680 --> 47:42.680]  Если мы этого предполагать не будем,
[47:42.680 --> 47:44.680]  если некоторые куиты у нас отрицательны,
[47:44.680 --> 47:46.680]  то просто нужно использовать
[47:46.680 --> 47:48.680]  вместо веитоя с нижней чертой,
[47:48.680 --> 47:50.680]  которая нижняя граница,
[47:50.680 --> 47:52.680]  всевозможных веитох,
[47:52.680 --> 47:54.680]  то, что доставляет минимум функцию.
[47:56.680 --> 47:58.680]  Помните это замечание,
[47:58.680 --> 48:00.680]  что функция выпуклая, у нее
[48:00.680 --> 48:02.680]  минимум, как правило, один.
[48:02.680 --> 48:04.680]  Слева от минимума она убывает, справа
[48:04.680 --> 48:06.680]  возрастает.
[48:06.680 --> 48:08.680]  Если мы обеспечиваем
[48:08.680 --> 48:10.680]  для этого конкретного агента,
[48:10.680 --> 48:12.680]  на ком достигается минимум его участия,
[48:12.680 --> 48:14.680]  то мы обеспечиваем участие для всех.
[48:16.680 --> 48:18.680]  Если у нас все куиты не отрицательны,
[48:18.680 --> 48:20.680]  то этот агент
[48:20.680 --> 48:22.680]  гарантирующий всем остальном участие
[48:22.680 --> 48:24.680]  это агент с нижним типом.
[48:28.680 --> 48:30.680]  Потому что полезность любого другого
[48:30.680 --> 48:32.680]  агента равна полезности
[48:32.680 --> 48:34.680]  самого нижнего типа,
[48:34.680 --> 48:36.680]  плюс некий не отрицательный интеграл.
[48:40.680 --> 48:42.680]  Мы можем
[48:42.680 --> 48:44.680]  не проверять условия индивидуальной национальности
[48:44.680 --> 48:46.680]  для всех, а можем только для одного.
[48:46.680 --> 48:48.680]  Вот в чем, собственно говоря, идея.
[48:50.680 --> 48:52.680]  Условия со стимулами
[48:52.680 --> 48:54.680]  это условия, которые
[48:54.680 --> 48:56.680]  выполняются для любого типа.
[48:56.680 --> 48:58.680]  Это, на самом деле, набор равенств,
[48:58.680 --> 49:00.680]  континум равенств,
[49:00.680 --> 49:02.680]  жестко задающих функции
[49:02.680 --> 49:04.680]  ТИТ.
[49:04.680 --> 49:06.680]  А условия индивидуальной национальности
[49:06.680 --> 49:08.680]  это одно не равенство точнее.
[49:14.680 --> 49:16.680]  Интересно, что
[49:16.680 --> 49:18.680]  все это очень
[49:18.680 --> 49:20.680]  существенно связано
[49:20.680 --> 49:22.680]  с тем,
[49:22.680 --> 49:24.680]  является ли
[49:24.680 --> 49:26.680]  механизм VCG
[49:34.680 --> 49:36.680]  механизм VCG
[49:36.680 --> 49:38.680]  является индивидуально-рациональным.
[49:38.680 --> 49:40.680]  Сейчас увидим мы.
[49:40.680 --> 49:42.680]  И кроме того,
[49:42.680 --> 49:44.680]  из всех индивидуально-рациональных
[49:44.680 --> 49:46.680]  механизмов,
[49:46.680 --> 49:48.680]  он такой, что обеспечивает
[49:48.680 --> 49:50.680]  максимальные платежи агентов.
[49:50.680 --> 49:52.680]  То есть, если почему-либо
[49:54.680 --> 49:56.680]  пусть у нас
[49:56.680 --> 49:58.680]  организатор механизма хочет,
[49:58.680 --> 50:00.680]  во что бы то ни стало реализовать эффективный исход,
[50:00.680 --> 50:02.680]  допустим, такая у него цель,
[50:02.680 --> 50:04.680]  а следующая цель после этого
[50:04.680 --> 50:06.680]  это максимизировать свою прибыль, скажем,
[50:06.680 --> 50:08.680]  изымая весь излишек.
[50:08.680 --> 50:10.680]  Тогда, ну и там минимизировать потери,
[50:10.680 --> 50:12.680]  если это у нас дефицитный механизм,
[50:12.680 --> 50:14.680]  дефицитный бюджет,
[50:14.680 --> 50:16.680]  у нас организует механизм VCG.
[50:16.680 --> 50:18.680]  Почему?
[50:18.680 --> 50:20.680]  Значит, смотрите,
[50:20.680 --> 50:22.680]  здесь будет некоторая тонкая разница
[50:22.680 --> 50:24.680]  с тем, что я рассказывал про механизм VCG ранее.
[50:24.680 --> 50:26.680]  Ранее я говорил про механизм VCG
[50:28.680 --> 50:30.680]  в ситуации
[50:30.680 --> 50:32.680]  квазилинейной экономики,
[50:32.680 --> 50:34.680]  а здесь линейная.
[50:34.680 --> 50:36.680]  Здесь, на самом деле, можно
[50:36.680 --> 50:38.680]  немножечко еще, как это называется,
[50:38.680 --> 50:40.680]  поджать ограничения.
[50:40.680 --> 50:42.680]  Короче говоря, смотрите,
[50:42.680 --> 50:44.680]  как определяется,
[50:44.680 --> 50:46.680]  то есть это чуть-чуть другой механизм VCG,
[50:46.680 --> 50:48.680]  чем про то, что мы говорили раньше.
[50:48.680 --> 50:50.680]  Очень тонкая разница, маленькая,
[50:50.680 --> 50:52.680]  на самом деле, в большинстве случаев ее нет.
[50:52.680 --> 50:54.680]  А именно, смотрите,
[50:54.680 --> 50:56.680]  определим следующее,
[50:56.680 --> 50:58.680]  что такое эффективный исход, понятно, да?
[50:58.680 --> 51:00.680]  То есть максимизируется сумма
[51:00.680 --> 51:02.680]  всех выжитые и кожитые,
[51:02.680 --> 51:04.680]  получается код V,
[51:04.680 --> 51:06.680]  эффективный исход при наборе типов V.
[51:08.680 --> 51:10.680]  Далее, ну, соответственно,
[51:10.680 --> 51:12.680]  максимум этой суммы
[51:12.680 --> 51:14.680]  равен W от V по определению.
[51:14.680 --> 51:16.680]  Будем называть эту функцию W от V.
[51:16.680 --> 51:18.680]  А теперь с этой W от V
[51:18.680 --> 51:20.680]  вычтем
[51:20.680 --> 51:22.680]  Vtqt.
[51:22.680 --> 51:24.680]  И мы с вами возьмем
[51:24.680 --> 51:26.680]  сумму всех g кроме i.
[51:26.680 --> 51:28.680]  То есть вот эту вот целевую функцию
[51:28.680 --> 51:30.680]  возьмем, но в ней
[51:30.680 --> 51:32.680]  пропустим it слагаемая.
[51:32.680 --> 51:34.680]  Получится W минус it от V.
[51:36.680 --> 51:38.680]  То есть это суммарная выигрыш
[51:38.680 --> 51:40.680]  всех кроме it участника.
[51:40.680 --> 51:42.680]  И будем определять Vcg
[51:42.680 --> 51:44.680]  у нас сейчас здесь,
[51:44.680 --> 51:46.680]  в этом контексте,
[51:46.680 --> 51:48.680]  как вот такую разницу.
[51:50.680 --> 51:52.680]  W от
[51:52.680 --> 51:54.680]  такого набора типов,
[51:54.680 --> 51:56.680]  что it участник
[51:56.680 --> 51:58.680]  не изымается
[51:58.680 --> 52:00.680]  из принимающих решения,
[52:00.680 --> 52:02.680]  но принудительно назначается тот,
[52:02.680 --> 52:04.680]  у кого самый нижний тип.
[52:04.680 --> 52:06.680]  Вот смотрите, тот механизм Vcg,
[52:06.680 --> 52:08.680]  который мы рассмотрели раньше,
[52:08.680 --> 52:10.680]  предполагалось, что просто этого
[52:10.680 --> 52:12.680]  человека нет. На его месте стоит
[52:12.680 --> 52:14.680]  слагаемая ноль.
[52:14.680 --> 52:16.680]  Ну, точнее так, его нет.
[52:16.680 --> 52:18.680]  Сейчас мы
[52:18.680 --> 52:20.680]  предполагаем, что он есть,
[52:20.680 --> 52:22.680]  но самого нижнего типа. Вот разница.
[52:22.680 --> 52:24.680]  Это все равно
[52:24.680 --> 52:26.680]  механизмы, семейство механизмов
[52:26.680 --> 52:28.680]  Грофса тоже называется Vcg.
[52:28.680 --> 52:30.680]  В общем, может быть так,
[52:30.680 --> 52:32.680]  этот как раз настоящий Vcg,
[52:32.680 --> 52:34.680]  а тот Vcg, который мы обсуждали,
[52:34.680 --> 52:36.680]  тоже называется Vcg в многих случаях.
[52:36.680 --> 52:38.680]  Он там, допустим,
[52:38.680 --> 52:40.680]  условно Грофса Кларка только, без Викри.
[52:40.680 --> 52:42.680]  Можно так, чтобы их различать.
[52:44.680 --> 52:46.680]  Вот.
[52:46.680 --> 52:48.680]  Впрочем, если типы начинаются
[52:48.680 --> 52:50.680]  от нуля, то разницы никакой.
[52:50.680 --> 52:52.680]  Разницы есть только вот в каком случае.
[52:52.680 --> 52:54.680]  Смотрите, допустим, у вас аукцион
[52:54.680 --> 52:56.680]  и несимметричная модель
[52:56.680 --> 52:58.680]  аукциона. Допустим, есть
[52:58.680 --> 53:00.680]  участник
[53:00.680 --> 53:02.680]  номер один и участник
[53:02.680 --> 53:04.680]  номер два. Участник номер один имеет типы
[53:04.680 --> 53:06.680]  распределенные от нуля до двух,
[53:06.680 --> 53:08.680]  а участник номер два от единицы
[53:08.680 --> 53:10.680]  до трех.
[53:10.680 --> 53:12.680]  Соответственно, представим себе
[53:12.680 --> 53:14.680]  участника номер два самого нижнего
[53:14.680 --> 53:16.680]  типа, который типа единицы. Сколько он должен
[53:16.680 --> 53:18.680]  платить? В аукционе второй цены
[53:18.680 --> 53:20.680]  он должен платить
[53:20.680 --> 53:22.680]  все равно цену,
[53:22.680 --> 53:24.680]  которую назначит
[53:24.680 --> 53:26.680]  ставку второго участника.
[53:26.680 --> 53:28.680]  Если он победил, то есть второй
[53:28.680 --> 53:30.680]  оказался типа между нулем и единицей,
[53:30.680 --> 53:32.680]  если он платит
[53:32.680 --> 53:34.680]  первое.
[53:34.680 --> 53:36.680]  Но мы можем
[53:36.680 --> 53:38.680]  устроить лучше
[53:38.680 --> 53:40.680]  для продавца в этом
[53:40.680 --> 53:42.680]  случае, а именно мы можем
[53:42.680 --> 53:44.680]  заставить его платить полностью
[53:44.680 --> 53:46.680]  единиц.
[53:46.680 --> 53:48.680]  Тогда
[53:50.680 --> 53:52.680]  тогда все равно
[53:52.680 --> 53:54.680]  он
[53:54.680 --> 53:56.680]  будет декларировать свой стиль
[53:56.680 --> 53:58.680]  и
[53:58.680 --> 54:00.680]  и он еще будет продолжать участвовать
[54:00.680 --> 54:02.680]  в этом аукционе. Он не откажется
[54:02.680 --> 54:04.680]  участвовать. Значит, смотрите,
[54:04.680 --> 54:06.680]  в общем случае,
[54:06.680 --> 54:08.680]  почему этот механизм, ну почему
[54:08.680 --> 54:10.680]  совместимый со стилем, понятно, потому что это механизм
[54:10.680 --> 54:12.680]  из семейства Грофс,
[54:12.680 --> 54:14.680]  там Кларка, а также
[54:14.680 --> 54:16.680]  он единая рациональная.
[54:16.680 --> 54:18.680]  Можно посчитать, чему равна УИТ
[54:18.680 --> 54:20.680]  от самого нижнего типа.
[54:20.680 --> 54:22.680]  Давайте посчитаем просто по этой формуле.
[54:22.680 --> 54:24.680]  Соответственно,
[54:24.680 --> 54:26.680]  Дубль В
[54:26.680 --> 54:28.680]  от ВИТ
[54:28.680 --> 54:30.680]  с нижней чертой В-ИТ.
[54:34.680 --> 54:36.680]  Да, значит,
[54:36.680 --> 54:38.680]  что такое УИТ
[54:38.680 --> 54:40.680]  с нижней чертой?
[54:40.680 --> 54:42.680]  Здесь
[54:44.680 --> 54:46.680]  не хватает только множителя
[54:46.680 --> 54:48.680]  ВИТ с нижней чертой.
[54:48.680 --> 54:50.680]  Я его пропустил, эта
[54:50.680 --> 54:52.680]  печатка. ВИТ с нижней чертой на КУИТ.
[54:52.680 --> 54:54.680]  Вот ВИТ с нижней чертой.
[54:54.680 --> 54:56.680]  Если такого типа
[54:56.680 --> 54:58.680]  наш ИТ-участник, то ВИТ
[54:58.680 --> 55:00.680]  с нижней чертой должно быть множено на КУИТ
[55:00.680 --> 55:02.680]  с такого набора
[55:02.680 --> 55:04.680]  выходных данных.
[55:04.680 --> 55:06.680]  И минус ТИТ. ТИТ
[55:06.680 --> 55:08.680]  равно, соответственно, вот этой разнице.
[55:08.680 --> 55:10.680]  То есть минус Дубль В
[55:10.680 --> 55:12.680]  от этой вот штуки.
[55:12.680 --> 55:14.680]  И плюс Дубль В минус ИТ
[55:14.680 --> 55:16.680]  от ВИТ, где В равно вот чему.
[55:16.680 --> 55:18.680]  Ну, на самом деле,
[55:18.680 --> 55:20.680]  поскольку вот это, если печатку исправить,
[55:20.680 --> 55:22.680]  то вот это плюс это
[55:22.680 --> 55:24.680]  равно в точности вот это.
[55:24.680 --> 55:26.680]  Получается ноль просто.
[55:26.680 --> 55:28.680]  Это означает,
[55:28.680 --> 55:30.680]  что только-только выполняется
[55:30.680 --> 55:32.680]  словит дидидально-рациональности,
[55:32.680 --> 55:34.680]  если еще немножко ужесточить механизм,
[55:34.680 --> 55:36.680]  а именно еще побольше
[55:36.680 --> 55:38.680]  брать участников,
[55:38.680 --> 55:40.680]  то уже кто-нибудь отвалится.
[55:40.680 --> 55:42.680]  То есть из всех
[55:42.680 --> 55:44.680]  дидидально-рациональных этот механизм
[55:44.680 --> 55:46.680]  обладает максимально возможными
[55:46.680 --> 55:48.680]  платежами агентов.
[55:48.680 --> 55:50.680]  Суммарными.
[55:50.680 --> 55:52.680]  Потому что все
[55:52.680 --> 55:54.680]  все вот эти условия
[55:54.680 --> 55:56.680]  дидидально-рациональности критические,
[55:56.680 --> 55:58.680]  для критического участника самого нижнего типа,
[55:58.680 --> 56:00.680]  они сводятся в ноль.
[56:00.680 --> 56:02.680]  То есть ни у кого нет ни коэриента вообще.
[56:02.680 --> 56:04.680]  Ни у кого в смысле из представителя
[56:04.680 --> 56:06.680]  нижнего типа нет ни коэриента.
[56:08.680 --> 56:10.680]  Ну вот.
[56:10.680 --> 56:12.680]  Теперь. Следующий вопрос.
[56:12.680 --> 56:14.680]  Значит, смотрите, наше требование
[56:14.680 --> 56:16.680]  еще раз давайте проверим
[56:16.680 --> 56:18.680]  критический состимул, эффективный исход,
[56:18.680 --> 56:20.680]  баланс бюджета и дидидально-рациональности.
[56:20.680 --> 56:22.680]  Но вот мы про все кроме
[56:22.680 --> 56:24.680]  баланса бюджета сейчас поговорили,
[56:24.680 --> 56:26.680]  пришла пора вспомнить,
[56:26.680 --> 56:28.680]  что нам вообще-то бюджет надо балансировать,
[56:28.680 --> 56:30.680]  а то иначе как же. Иначе у нас
[56:30.680 --> 56:32.680]  дыра образуется, например,
[56:32.680 --> 56:34.680]  требующая постоянного вливания денег.
[56:34.680 --> 56:36.680]  Ну или образуется неэффективность
[56:36.680 --> 56:38.680]  не в серплес, если у нас профицит,
[56:38.680 --> 56:40.680]  тоже не очень хорошо, что люди будут
[56:40.680 --> 56:42.680]  терять ресурс. Надо, чтобы
[56:42.680 --> 56:44.680]  балансировался в ноль.
[56:44.680 --> 56:46.680]  Допустим сначала, что у нас не требуется
[56:46.680 --> 56:48.680]  дидидально-рациональности. Можно ли просто
[56:48.680 --> 56:50.680]  имплементировать эффективный исход
[56:50.680 --> 56:52.680]  с баланса бюджета? Такой вопрос. То есть, вот из этих
[56:52.680 --> 56:54.680]  четырех требований
[56:54.680 --> 56:56.680]  мы жертвуем последним,
[56:56.680 --> 56:58.680]  а эти три мы хотим.
[57:00.680 --> 57:02.680]  Казывается, можно.
[57:02.680 --> 57:04.680]  Озывается механизм
[57:04.680 --> 57:06.680]  AGV,
[57:06.680 --> 57:08.680]  erodospermon-gerarvare.
[57:08.680 --> 57:10.680]  Это механизм
[57:10.680 --> 57:12.680]  ожидаемой экстреналии.
[57:12.680 --> 57:14.680]  И вычисляется...
[57:14.680 --> 57:16.680]  Значит, смотрите, Q вычисляется
[57:16.680 --> 57:18.680]  так же, как механизм VCG,
[57:18.680 --> 57:20.680]  а именно, эффективный исход.
[57:20.680 --> 57:22.680]  Вот так.
[57:24.680 --> 57:26.680]  А платеж по-другому.
[57:26.680 --> 57:28.680]  Но у нас W,
[57:28.680 --> 57:30.680]  вспомните, как W
[57:30.680 --> 57:32.680]  минус ИТ вычисляется, вот W
[57:32.680 --> 57:34.680]  минус ИТ.
[57:34.680 --> 57:36.680]  Сумма выигрышей
[57:36.680 --> 57:38.680]  всех, кроме этого, в
[57:38.680 --> 57:40.680]  оптимальном решении при данной
[57:40.680 --> 57:42.680]  конфигурации типов.
[57:42.680 --> 57:44.680]  Так вот, мы берем...
[57:44.680 --> 57:46.680]  Научаемся
[57:46.680 --> 57:48.680]  усреднять эту величину W
[57:48.680 --> 57:50.680]  минус ИТ с точки зрения
[57:50.680 --> 57:52.680]  этого участника. То есть, этот участник думает,
[57:52.680 --> 57:54.680]  а сколько выигрывает
[57:54.680 --> 57:56.680]  в сумме все остальные?
[57:56.680 --> 57:58.680]  Я их типов не знаю, но я могу вычислить
[57:58.680 --> 58:00.680]  на ожидание. Вот,
[58:00.680 --> 58:02.680]  пусть он умеет это вычислять.
[58:02.680 --> 58:04.680]  Теперь, он тогда платит,
[58:06.680 --> 58:08.680]  собственно говоря,
[58:08.680 --> 58:10.680]  вот это самое, с его точки зрения,
[58:10.680 --> 58:12.680]  величину, от ожидания
[58:12.680 --> 58:14.680]  выигрышей остальных, он получает
[58:14.680 --> 58:16.680]  как раз, а не платит, а платит
[58:16.680 --> 58:18.680]  он усредненную
[58:18.680 --> 58:20.680]  по всем остальным участникам их такую
[58:20.680 --> 58:22.680]  оценку.
[58:22.680 --> 58:24.680]  Понятно? Вот.
[58:24.680 --> 58:26.680]  По самому построению, это
[58:26.680 --> 58:28.680]  балансирующийся в ноль механизм.
[58:28.680 --> 58:30.680]  Потому что, вот если мы просуммируем
[58:30.680 --> 58:32.680]  все эти платежи,
[58:32.680 --> 58:34.680]  то
[58:34.680 --> 58:36.680]  сумма этих
[58:36.680 --> 58:38.680]  слагаемых дает нам на самом деле
[58:38.680 --> 58:40.680]  даже не вдаваясь в вопрос, как эти
[58:40.680 --> 58:42.680]  яйты вычисляются или ежитые, просто
[58:42.680 --> 58:44.680]  какие угодно величины.
[58:44.680 --> 58:46.680]  Если мы из одной
[58:46.680 --> 58:48.680]  вычитаем усредненные остальные, то это
[58:48.680 --> 58:50.680]  обязательно баланс. Потому что
[58:50.680 --> 58:52.680]  суммировав, мы получаем здесь
[58:54.680 --> 58:56.680]  сумму по всем и
[58:56.680 --> 58:58.680]  яйт их.
[58:58.680 --> 59:00.680]  Потому что здесь берется
[59:00.680 --> 59:02.680]  сумма как бы
[59:02.680 --> 59:04.680]  именно с одного слагаемого, всех кроме одного.
[59:04.680 --> 59:06.680]  Но это одно, которое мы не берем.
[59:06.680 --> 59:08.680]  Каждый раз меняется.
[59:08.680 --> 59:10.680]  Если мы суммируем по всем и.
[59:10.680 --> 59:12.680]  Соответственно, у нас получается
[59:14.680 --> 59:16.680]  i-1 экземпляр
[59:16.680 --> 59:18.680]  полной суммы.
[59:18.680 --> 59:20.680]  Если мы по всем и
[59:20.680 --> 59:22.680]  просуммируем.
[59:22.680 --> 59:24.680]  Ну и поскольку у нас делится на i-1,
[59:24.680 --> 59:26.680]  то сокращается, получается единица.
[59:26.680 --> 59:28.680]  А вычитается у нас просто полная сумма всех яитых
[59:28.680 --> 59:30.680]  w-t, получается ноль.
[59:30.680 --> 59:32.680]  Это баланс по построению.
[59:32.680 --> 59:34.680]  А совместимый со стимуями
[59:34.680 --> 59:36.680]  тоже проверяется.
[59:36.680 --> 59:38.680]  Вот совместимый со стимуем. Вычислим
[59:38.680 --> 59:40.680]  напрямую функцию
[59:40.680 --> 59:42.680]  от zt в it.
[59:42.680 --> 59:44.680]  Надо нам максимизировать,
[59:44.680 --> 59:46.680]  что zt равно vt.
[59:46.680 --> 59:48.680]  Вычислим полезность
[59:48.680 --> 59:50.680]  человека, который настоящего типа
[59:50.680 --> 59:52.680]  vt, но решил мимикрировать
[59:52.680 --> 59:54.680]  под zt.
[59:54.680 --> 59:56.680]  Тогда
[59:56.680 --> 59:58.680]  его ожидаемая полезность
[59:58.680 --> 01:00:00.680]  естественно равна.
[01:00:00.680 --> 01:00:02.680]  Вот как обычно мы записываем.
[01:00:02.680 --> 01:00:04.680]  Здесь я более подробно записал.
[01:00:04.680 --> 01:00:06.680]  Обычно мы записывали вот так.
[01:00:06.680 --> 01:00:08.680]  Мы записывали
[01:00:14.680 --> 01:00:16.680]  Вот так мы записывали в ожиданиях.
[01:00:16.680 --> 01:00:18.680]  А я сейчас записал,
[01:00:18.680 --> 01:00:20.680]  чему эти ожидания равны.
[01:00:22.680 --> 01:00:24.680]  Вот, то же самое.
[01:00:28.680 --> 01:00:30.680]  Теперь расписываем, чему равно ta.
[01:00:30.680 --> 01:00:32.680]  Вот у нас чему равно ta.
[01:00:34.680 --> 01:00:36.680]  Здесь, смотрите,
[01:00:36.680 --> 01:00:38.680]  мы прибавляем
[01:00:40.680 --> 01:00:42.680]  eit w-t
[01:00:42.680 --> 01:00:44.680]  и расписываем, что это такое.
[01:00:44.680 --> 01:00:46.680]  Под знаком от ожидания мы внесли
[01:00:46.680 --> 01:00:48.680]  штуку w-t.
[01:00:48.680 --> 01:00:50.680]  Это вот такая штука,
[01:00:50.680 --> 01:00:52.680]  такая сумма.
[01:00:52.680 --> 01:00:54.680]  А дальше, вот это мы еще должны
[01:00:54.680 --> 01:00:56.680]  вычесть.
[01:00:56.680 --> 01:00:58.680]  Мы вычитаем из полезности,
[01:00:58.680 --> 01:01:00.680]  но замечаем, что эта величина
[01:01:00.680 --> 01:01:02.680]  никак от этого типа, от wt
[01:01:02.680 --> 01:01:04.680]  не зависит.
[01:01:04.680 --> 01:01:06.680]  Потому что это что-то про чужих людей.
[01:01:06.680 --> 01:01:08.680]  Какие у них оценки.
[01:01:10.680 --> 01:01:12.680]  Это их оценки,
[01:01:12.680 --> 01:01:14.680]  они не доступны. Они мою информацию не знают,
[01:01:14.680 --> 01:01:16.680]  они не доступны, поэтому
[01:01:16.680 --> 01:01:18.680]  это что-то зависит исключительно от их типов,
[01:01:18.680 --> 01:01:20.680]  от их профиля типов.
[01:01:20.680 --> 01:01:22.680]  Это какая-то функция от h, ht-t.
[01:01:22.680 --> 01:01:24.680]  Константа для меня.
[01:01:24.680 --> 01:01:26.680]  Соответственно,
[01:01:26.680 --> 01:01:28.680]  я и ты человек, заинтересован
[01:01:28.680 --> 01:01:30.680]  в максимизации вот этой функции.
[01:01:30.680 --> 01:01:32.680]  Что я знаю про это?
[01:01:32.680 --> 01:01:34.680]  Это на самом деле мы можем
[01:01:34.680 --> 01:01:36.680]  эту формулу упростить
[01:01:36.680 --> 01:01:38.680]  до такой. Это просто сумма по всем
[01:01:38.680 --> 01:01:40.680]  g, v житых, q житых.
[01:01:40.680 --> 01:01:42.680]  И все.
[01:01:42.680 --> 01:01:44.680]  Вот эта слагаемая, это it слагаемая
[01:01:44.680 --> 01:01:46.680]  добавляется к этой сумме.
[01:01:48.680 --> 01:01:50.680]  q it
[01:01:50.680 --> 01:01:52.680]  z it
[01:01:52.680 --> 01:01:54.680]  и v minus it
[01:01:54.680 --> 01:01:56.680]  надо все-таки добавить здесь.
[01:01:56.680 --> 01:01:58.680]  Да.
[01:01:58.680 --> 01:02:00.680]  От z it и v minus it.
[01:02:00.680 --> 01:02:02.680]  Печатка.
[01:02:02.680 --> 01:02:04.680]  Еще одна нашлась.
[01:02:04.680 --> 01:02:06.680]  Хорошо.
[01:02:06.680 --> 01:02:08.680]  Значит, после этого
[01:02:08.680 --> 01:02:10.680]  у нас получается вот такое.
[01:02:10.680 --> 01:02:12.680]  И надо это максимизировать
[01:02:12.680 --> 01:02:14.680]  по всем z it. Но мы знаем, что
[01:02:14.680 --> 01:02:16.680]  при любой реализации того,
[01:02:16.680 --> 01:02:18.680]  что есть по знакам от ожидания,
[01:02:18.680 --> 01:02:20.680]  эта штука
[01:02:20.680 --> 01:02:22.680]  не больше, чем максимум
[01:02:22.680 --> 01:02:24.680]  всего этого, равный
[01:02:24.680 --> 01:02:26.680]  максимум по z it, я имею ввиду,
[01:02:26.680 --> 01:02:28.680]  равный
[01:02:28.680 --> 01:02:30.680]  сумме v житых, q житых
[01:02:30.680 --> 01:02:32.680]  от v житых.
[01:02:32.680 --> 01:02:34.680]  Да, то есть
[01:02:34.680 --> 01:02:36.680]  просто
[01:02:38.680 --> 01:02:40.680]  просто потому, что
[01:02:40.680 --> 01:02:42.680]  при данной конфигурации типов
[01:02:42.680 --> 01:02:44.680]  v1, v2 и так далее, v it
[01:02:44.680 --> 01:02:46.680]  мой собственный тип истинный.
[01:02:46.680 --> 01:02:48.680]  Лучше всего
[01:02:48.680 --> 01:02:50.680]  такое решение, которое максимизирует
[01:02:50.680 --> 01:02:52.680]  от суммы. Вообще лучше всего.
[01:02:52.680 --> 01:02:54.680]  В частности, в ограниченные задачи,
[01:02:54.680 --> 01:02:56.680]  когда мы выбираем только z it,
[01:02:56.680 --> 01:02:58.680]  тоже оно лучше всего. А поэтому
[01:02:58.680 --> 01:03:00.680]  от ожидания будет самое большое,
[01:03:00.680 --> 01:03:02.680]  когда мы положим z it, равный v и t.
[01:03:04.680 --> 01:03:06.680]  Можно вопрос?
[01:03:06.680 --> 01:03:08.680]  Да.
[01:03:08.680 --> 01:03:10.680]  У нас сначально был
[01:03:10.680 --> 01:03:12.680]  задан набор социальных благ,
[01:03:12.680 --> 01:03:14.680]  который производится
[01:03:14.680 --> 01:03:16.680]  оптимально такой, чтобы это свелся
[01:03:16.680 --> 01:03:18.680]  для色н escuchащих.
[01:03:18.680 --> 01:03:20.680]  По сути w
[01:03:20.680 --> 01:03:22.680]  это у нас
[01:03:22.680 --> 01:03:24.680]  полезность игроков при данном
[01:03:24.680 --> 01:03:26.680]  распределении, когда
[01:03:26.680 --> 01:03:28.680]  вesse игроков нет.
[01:03:28.680 --> 01:03:30.680]  Это оптимальное решение
[01:03:30.680 --> 01:03:32.680]  для множества игроков,
[01:03:32.680 --> 01:03:34.680]  но данного Homя, мы не учитываем с
[01:03:34.680 --> 01:03:36.680]  его полезности.
[01:03:36.680 --> 01:03:38.680]  Учитываем полезность всех остальных.
[01:03:38.680 --> 01:03:40.980]  То есть
[01:03:40.980 --> 01:03:42.980]  при данном распределении как будто есть
[01:03:42.980 --> 01:03:44.320]  tutti игроки,
[01:03:44.320 --> 01:03:46.320]  Кроме одного игрока тоже будет оптимум?
[01:04:14.320 --> 01:04:16.320]  И есть замечательная теорема.
[01:04:17.320 --> 01:04:23.320]  Теорема в Кришне, по-моему, 52, что ли, с пятой главы. Короче, 53.
[01:04:24.320 --> 01:04:33.320]  Если у нас механизм VCG, вот как он определен выше, имеет ожидаемый бюджетный профицит,
[01:04:34.320 --> 01:04:41.320]  то с помощью вот этого механизма AGV мы можем получить паланс бюджета и индивидуальная рациональность.
[01:04:41.320 --> 01:04:47.320]  То есть не будет только... А, нет, будет все, будет вообще все.
[01:04:48.320 --> 01:04:52.320]  Смотрите, в AGV есть вот эти четыре свойства, которые мы хотим.
[01:04:53.320 --> 01:04:56.320]  Есть все, кроме индивидуальной рациональности, вообще в AGV в любом случае.
[01:04:57.320 --> 01:05:04.320]  А если еще нам известно, что VCG без дефицитин, то у нас есть все четыре свойства желанных нами.
[01:05:05.320 --> 01:05:12.320]  Ну, тут дело в том, что оба механизма совместимы со стимулами.
[01:05:13.320 --> 01:05:19.320]  Значит, мы знаем, что совместимы со стимулами механизмы, если мы возьмем полезности агентов в равновесии,
[01:05:20.320 --> 01:05:22.320]  то они отличаются на константу.
[01:05:23.320 --> 01:05:24.320]  Да?
[01:05:25.320 --> 01:05:28.320]  Обозначим вот константу DIT. Что мы про нее знаем?
[01:05:29.320 --> 01:05:35.320]  Поскольку в AGV по построению баланс, а VCG по нашему предположению профицит,
[01:05:36.320 --> 01:05:41.320]  то сумма полезностей VCG не меньше, чем сумма полезностей здесь.
[01:05:42.320 --> 01:05:46.320]  Соответственно, вот эта сумма DIT не отрицательна должна быть.
[01:05:47.320 --> 01:05:52.320]  И теперь мы не отрицательную сумму эту как угодно раскидываем между людьми.
[01:05:53.320 --> 01:05:55.320]  Но так, чтобы не повредить индивидуальную рациональность.
[01:05:56.320 --> 01:06:03.320]  То есть, смотрите, вот мы берем изначально, допустим, AGV механизм, в нем баланс.
[01:06:04.320 --> 01:06:06.320]  Соответственно, вот столько денег платит люди.
[01:06:08.320 --> 01:06:17.320]  А дальше мы хотим, чтобы с одной стороны, вот если они будут платить побольше,
[01:06:17.320 --> 01:06:25.320]  на DIT каждый будет платить, то это тоже будет совместимый со стимулами механизм.
[01:06:26.320 --> 01:06:30.320]  Но где люди будут получать такую же полезность, как VCG.
[01:06:31.320 --> 01:06:36.320]  Он будет другой немножко. VCG обеспечивает имплементацию доминирующих стратегий.
[01:06:37.320 --> 01:06:40.320]  Это будет более слабая имплементация, но с таким же выигрышами.
[01:06:41.320 --> 01:06:46.320]  А теперь мы компенсируем эту потерю для людей тем, что им всем поровно раздаем
[01:06:47.320 --> 01:06:51.320]  эту сумму. Не обязательно поровну, как угодно раздаем.
[01:06:52.320 --> 01:06:54.320]  Но главное, что эта сумма положительная, не отрицательная.
[01:06:55.320 --> 01:06:59.320]  Можно раздать в любых пропорциях, но так, чтобы каждому достался не отрицательный кусочек.
[01:07:00.320 --> 01:07:05.320]  Там можно быть уверены, что у нас останется то, что у нас было VCG,
[01:07:06.320 --> 01:07:07.320]  вот это свойство индивидуальнациональности.
[01:07:08.320 --> 01:07:12.320]  Значит, если просто плюс DIT, если вот эту вот часть убрать, то она будет.
[01:07:12.320 --> 01:07:17.320]  Значит, если ее изъять из налогов, из платежей, а если добавить людям в карман,
[01:07:18.320 --> 01:07:19.320]  то тем более она будет.
[01:07:20.320 --> 01:07:24.320]  Люди точно не разбегутся, если они не разбегаются даже без этого минуса.
[01:07:26.320 --> 01:07:29.320]  И есть и план с бюджета, и индивидуальнациональность.
[01:07:30.320 --> 01:07:33.320]  Итак, подводя итоги сегодняшней лекции.
[01:07:34.320 --> 01:07:37.320]  Имплементация экспост-эффективной функции общественного выбора.
[01:07:37.320 --> 01:07:40.320]  Возможно, со всеми четырьмя хорошими свойствами,
[01:07:42.320 --> 01:07:45.320]  если у нас VCG имеет ожидаемый бюджетный профицит,
[01:07:46.320 --> 01:07:48.320]  и невозможно, если оно имеет ожидаемый бюджетный дефицит.
[01:07:49.320 --> 01:07:53.320]  Ну, обжидаемый бюджетный профицит имеется в виду в нестрогом смысле, без дефицитный бюджет.
[01:07:54.320 --> 01:07:57.320]  То есть, это на самом деле необходимы достаточно условия того,
[01:07:58.320 --> 01:08:01.320]  что можно все реализовать, все четыре хорошие свойства.
[01:08:01.320 --> 01:08:04.320]  Пробежимся по нашим основным моделям, которые мы рассматривали.
[01:08:05.320 --> 01:08:06.320]  Модель дискретного общественного блага.
[01:08:07.320 --> 01:08:10.320]  Строить и не строить мост, если участники получают ту или иную полезность от него.
[01:08:11.320 --> 01:08:14.320]  Значит, мы увидели, что VCG дефицитен, значит, нельзя имплементировать.
[01:08:15.320 --> 01:08:16.320]  Никак.
[01:08:17.320 --> 01:08:18.320]  Чтобы все четыре свойства были.
[01:08:19.320 --> 01:08:20.320]  Двусторонняя торговля.
[01:08:21.320 --> 01:08:22.320]  Тоже мы увидели, что VCG дефицитен.
[01:08:23.320 --> 01:08:24.320]  Помните?
[01:08:25.320 --> 01:08:27.320]  Ну, мы увидели, что VCG дефицитен.
[01:08:27.320 --> 01:08:28.320]  То же мы увидели, что VCG дефицитен.
[01:08:29.320 --> 01:08:30.320]  Помните?
[01:08:31.320 --> 01:08:36.320]  Выгода от торговли генерируется в модели экономики один раз.
[01:08:37.320 --> 01:08:39.320]  А выплотенные должны быть и продавцу и покупателю.
[01:08:40.320 --> 01:08:41.320]  Значит, дефицит.
[01:08:42.320 --> 01:08:43.320]  Значит, нельзя имплементировать.
[01:08:44.320 --> 01:08:48.320]  И это на самом деле это утверждение носит горды и метерем Маэльсен Цетероиде.
[01:08:49.320 --> 01:08:50.320]  Да?
[01:08:51.320 --> 01:08:52.320]  Это некая проблема.
[01:08:53.320 --> 01:08:56.320]  То есть, нельзя реализовать хорошую эффективность,
[01:08:57.320 --> 01:09:02.880]  Модель двусторонней торговли в двух лиц – Печаль.
[01:09:02.880 --> 01:09:06.960]  Одна из известных в микроэкономике телема «Невозможность»
[01:09:06.960 --> 01:09:11.240]  – Телема «Арсен и Центруайт».
[01:09:11.240 --> 01:09:14.480]  Есть хорошая новость – та же самая модель двусторонней
[01:09:14.480 --> 01:09:16.400]  торговли на обе стороны.
[01:09:16.400 --> 01:09:20.640]  Пусть у каждого из этих двух агентов есть товар
[01:09:20.640 --> 01:09:21.640]  в руках.
[01:09:21.640 --> 01:09:23.640]  И есть ценности этого товара.
[01:09:23.640 --> 01:09:26.280]  У первого ценность В1, у второго ценность В2.
[01:09:26.280 --> 01:09:29.640]  И каждый из них готов купить еще одну единицу товара,
[01:09:29.640 --> 01:09:31.880]  и он от двух единиц получит двойную полезность.
[01:09:31.880 --> 01:09:35.320]  То есть каждый может быть как продавцом, так и покупателем
[01:09:35.320 --> 01:09:36.320]  одновременно.
[01:09:36.320 --> 01:09:38.880]  В зависимости от того, как сложится рынок.
[01:09:38.880 --> 01:09:45.440]  Окажется, что эта модель – это экономика бездефицитная.
[01:09:45.440 --> 01:09:49.320]  У меня WCG без дефицитен, профицитен даже, и там все
[01:09:49.320 --> 01:09:50.320]  можно реализовать.
[01:09:50.320 --> 01:09:54.960]  Смотрите, как устроен эффективный исход, если мы просто по
[01:09:55.000 --> 01:09:58.920]  формулам нашим, которые у нас есть, все посчитаем,
[01:09:58.920 --> 01:10:04.080]  то товар нужно передавать от того, у кого полезность
[01:10:04.080 --> 01:10:07.120]  меньше, к тому, у кого полезность больше.
[01:10:07.120 --> 01:10:09.960]  Допустим, если В1 больше, чем В2, то первому товар
[01:10:09.960 --> 01:10:11.520]  достается, а у второго отнимается.
[01:10:11.520 --> 01:10:16.400]  Соответственно, если В1 меньше, чем В2, то у первого
[01:10:16.400 --> 01:10:18.320]  товара отнимается, а у второго товара достается.
[01:10:18.320 --> 01:10:21.760]  Получается, какое-то равно плюс или минус единицы,
[01:10:21.760 --> 01:10:26.160]  знак величины в 1,02.
[01:10:26.160 --> 01:10:30.360]  И отсюда следует такая вещь, что у нас, поскольку
[01:10:30.360 --> 01:10:33.360]  КУИТ и отрицательные, у нас вот это вот феномен,
[01:10:33.360 --> 01:10:36.840]  что нам не годится, чтобы базовый тип был самым маленьким
[01:10:36.840 --> 01:10:37.840]  типом.
[01:10:37.840 --> 01:10:41.760]  Нам нужно вычислить, при каком в аитом достигается
[01:10:41.760 --> 01:10:44.000]  минимум функции У.
[01:10:44.000 --> 01:10:49.360]  Минимум сигнум умножить на В достигается при медианном
[01:10:49.440 --> 01:10:57.680]  значении, медианном распределении, то есть значение такое В,
[01:10:57.680 --> 01:11:01.320]  при котором f от Vm равно 1 и 2.
[01:11:01.320 --> 01:11:05.600]  Слева и вправо одинаковый вес, и поэтому у нас получается
[01:11:05.600 --> 01:11:12.600]  ожидаемое Q, минимальное, равное 0.
[01:11:20.360 --> 01:11:23.360]  Вот, минимум достигается при медиане, соответственно,
[01:11:23.360 --> 01:11:29.360]  если мы обеспечим медианного агента, как это называется,
[01:11:29.360 --> 01:11:32.360]  индивидуальной рациональностью, значит построим ВСГ, где
[01:11:32.360 --> 01:11:37.360]  базовый агент будет вот этот, то для него надо проверять
[01:11:37.360 --> 01:11:38.360]  бездефицитность.
[01:11:38.360 --> 01:11:41.360]  Вот мы его строим.
[01:11:41.360 --> 01:11:47.360]  Мы вычисляем эти самые функции W, которые нам нужны
[01:11:47.360 --> 01:11:52.360]  для WCG, соответственно.
[01:11:52.360 --> 01:11:55.360]  Чему равно выгода от торговли в этой системе?
[01:11:55.360 --> 01:11:59.360]  Модуль разности в 1 и 2, то есть если в 1 и 2 разные,
[01:11:59.360 --> 01:12:01.360]  то надо от того, у кого меньше, передать тому, у кого
[01:12:01.360 --> 01:12:06.360]  больше, и выгода от торговли равна модуле разности.
[01:12:06.360 --> 01:12:09.360]  Значит, соответственно, сколько должен заплатить
[01:12:09.360 --> 01:12:14.360]  первый, ну вот по формуле WCG мы это вычисляем прямо.
[01:12:17.360 --> 01:12:21.360]  В качестве нижнего типа беремидианный тип.
[01:12:21.360 --> 01:12:27.360]  Вычисляем и видим такую вещь, что сумма платежей,
[01:12:27.360 --> 01:12:32.360]  если мы вычислим, равна вот такой сумме.
[01:12:32.360 --> 01:12:36.360]  Это, значит, видно, что это не отрицательная величина,
[01:12:36.360 --> 01:12:38.360]  потому что не равенство треугольника.
[01:12:38.360 --> 01:12:42.360]  Да?
[01:12:42.360 --> 01:12:44.360]  Ну, как бы треугольник расположен вдоль одной прямой,
[01:12:44.360 --> 01:12:46.360]  но не треугольник, у него есть не равенство треугольника.
[01:12:46.360 --> 01:12:50.360]  И, соответственно, у нас профицит, нестрогий профицит
[01:12:50.360 --> 01:12:51.360]  бюджета.
[01:12:51.360 --> 01:12:55.360]  И это значит, что мы можем реализовать AGV, если надо,
[01:12:55.360 --> 01:12:58.360]  то мы его можем еще подкорректировать с помощью этих.
[01:12:58.360 --> 01:13:01.360]  Вы помните?
[01:13:01.360 --> 01:13:05.360]  И мы получим имплементацию бездефицитную, значит,
[01:13:05.360 --> 01:13:10.360]  ну с бонусом бюджета, имплементацию, экспост
[01:13:10.360 --> 01:13:13.360]  эффективной функции общественного выбора, вот этой вот, собственно
[01:13:13.360 --> 01:13:15.360]  говоря.
[01:13:15.360 --> 01:13:20.360]  Подсчеты показывают, что нам даже и поправок вводить
[01:13:20.360 --> 01:13:24.360]  не надо, этот механизм AGV сразу индивидуально рационален.
[01:13:24.360 --> 01:13:27.360]  А именно, вот если, например, первому надо платить вот
[01:13:27.360 --> 01:13:33.360]  такую сумму, в AGV получается вот такая сумма, равная
[01:13:33.360 --> 01:13:42.360]  удвоенному интегралу от V2 до V1, значит, уровня ценности.
[01:13:42.360 --> 01:13:44.360]  Имеется индивидуальная рациональность.
[01:13:44.360 --> 01:13:47.360]  Можно по-другому реализовать этот механизм на семинаре
[01:13:47.360 --> 01:13:48.360]  «Рассмотрим».
[01:13:48.360 --> 01:13:53.360]  К целому, если у нас есть не просто один продавец,
[01:13:53.360 --> 01:13:56.360]  один покупатель, а много продавцов и много покупателей,
[01:13:56.360 --> 01:14:00.360]  то проблема, которая выявляет термин Miles & Setterweight, этим
[01:14:00.360 --> 01:14:01.360]  преодолевается.
[01:14:01.360 --> 01:14:06.360]  Если у нас большой рынок, то можно устроить непрерывный
[01:14:06.360 --> 01:14:08.360]  двойной встречный аукцион.
[01:14:08.360 --> 01:14:11.360]  Это, собственно говоря, основной механизм биржевой
[01:14:11.360 --> 01:14:13.360]  торговли, заключающий в том, что у нас есть много
[01:14:13.360 --> 01:14:16.360]  предложений цен продажи и покупки.
[01:14:16.360 --> 01:14:21.360]  Мы просто удовлетворяем те, которые сходятся.
[01:14:21.360 --> 01:14:27.360]  В смысле, что цена покупки превышает цену продажи.
[01:14:27.360 --> 01:14:35.360]  Ну, соответственно, можно предложить такой механизм,
[01:14:35.360 --> 01:14:39.360]  в таком случае, что там не будет таких проблем, которые
[01:14:39.360 --> 01:14:40.360]  есть через Miles & Setterweight.
[01:14:40.360 --> 01:14:44.360]  Если у нас, допустим, модель рассмотреть с континуумом
[01:14:44.360 --> 01:14:47.360]  агентов, и там все будет хорошо.
[01:14:47.360 --> 01:14:52.360]  Вот, на сегодня все.
[01:14:52.360 --> 01:14:56.360]  И на следующей лекции мы рассматриваем уже, собственно,
[01:14:56.360 --> 01:14:59.360]  задачу дизайна оптимального механизма.
