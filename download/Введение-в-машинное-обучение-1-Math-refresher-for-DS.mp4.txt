[00:00.000 --> 00:24.300]  Итак, что такое SQL-Learning, я думаю, все помнят, правильно?
[00:24.300 --> 00:28.160]  Мы из него, как обычно, сейчас вытащим только собственно
[00:28.160 --> 00:35.640]  датасет, ну, функцию, которая генерирует нам синтетический датасет раз, и вытащим функцию, которая считает качественную классификацию.
[00:35.800 --> 00:42.960]  Пока что мы с вами явно метрики, в кавычках метрики, не в смысле, не на алгебре, классификацию не разбирали, но accuracy, она же,
[00:43.680 --> 00:51.400]  скажем так, точность, но со звездочкой, потому что есть еще precision recall, где precision тоже точность на русский перевели, поэтому обычно и называют accuracy.
[00:51.760 --> 00:55.360]  Потому что на русском у нас появляется коллизия типа precision и accuracy переводится одинаково.
[00:56.160 --> 01:00.320]  Вот, короче-ка, это доля правильных ответов, все, тут ничего думать не надо.
[01:01.240 --> 01:07.680]  И разбиение на тройный тест. Ну, давайте генерируем себе маленький датасетик, смотрите, на самом деле, для всяких
[01:08.400 --> 01:14.580]  игрушечных вещей крайне полезная вещь, что чем руками генератор данных писать, более того, многие из вас, я думаю, будут писать
[01:15.000 --> 01:17.000]  диплом в этом году или в следующем.
[01:17.720 --> 01:19.720]  Пожалуйста, не пишите диплом за последний месяц.
[01:20.040 --> 01:25.560]  Так вот, на всяких синтетических данных поработать бывает очень удобно, чтобы свои гипотезы проверить.
[01:25.840 --> 01:30.480]  Лезоскалерно дергать генератор синтетических данных сплошное удовольствие, не пренебрегайте им, пожалуйста.
[01:32.320 --> 01:39.120]  Вот. Ну и, собственно, вот наш с вами какой-то простенький датсет, с которым мы с вами можем поработать.
[01:41.760 --> 01:45.880]  Она порождает вам выборку просто-напросто из нескольких классов
[01:45.880 --> 01:49.240]  случайным образом. Ну вот, если вы почитаете...
[01:54.400 --> 02:01.440]  Не, смотрите, в данном случае мы с вами просто сгенерировали себе выборку из явно как бы случайных точек. Короче, что у нас здесь на самом деле есть?
[02:01.880 --> 02:05.440]  По факту у нас здесь с вами нормальное распределение.
[02:06.320 --> 02:10.320]  Несколько нормальных распределений случайным образом инициализируются, из них сэмплируются точки.
[02:11.160 --> 02:13.160]  Двумерное, понятное дело, нормальное распределение.
[02:15.880 --> 02:17.880]  Да, да.
[02:22.320 --> 02:28.280]  Мы сейчас с вами как раз таки разобьем, собственно, нашу выборку на две части. Одна будет нам доступна, вторая будет отложенная.
[02:33.360 --> 02:36.560]  Смотрите еще раз. Вот это вся выборка, которая нам доступна.
[02:37.680 --> 02:43.240]  Мы пока что с вами работаем, грубо говоря, на оффлайн-данных, поэтому у нас есть выборка. Мы от нее часть отрубаем.
[02:43.240 --> 02:48.360]  Это будет отложенная выборка, на ней будем проверять качество на отложенных данных. Все остальное используем как обучающую выборку.
[02:49.400 --> 02:51.400]  Окей?
[02:52.240 --> 02:56.720]  То есть, по факту отложенная выборка это то же самое, что могло бы к нам прийти потом.
[02:57.920 --> 03:04.080]  Единственное, что мы сейчас с вами их уже видели, но так как учебные цели пока нормальные. По-хорошему, конечно, мы не должны вообще ничего там видеть.
[03:06.000 --> 03:08.000]  Вот.
[03:09.000 --> 03:14.240]  Ну, отложенная выборка симулирует то, что мы не видели на этапе обучения, но она по факту таковой и является.
[03:16.280 --> 03:22.280]  Смотрите, у вас могут данные приходить или в режиме реального времени, например, там биржевые всякие данные, вот биржи работы, данные падают.
[03:22.720 --> 03:26.920]  У вас могут быть данные отложенные, например, на том же самом кегле, на соревновании по машинному обучению.
[03:27.360 --> 03:34.480]  У вас есть выборка, которую вам дали, чтобы учиться, и вам дали признаково описание, допустим, объектов с тестовой выборки, для них ответов вы не знаете.
[03:34.480 --> 03:40.440]  Вы ответы генерируете, отправляете на платформу Kegel, она вам, соответственно, говорит, угадал, не угадал, молодец, не молодец.
[03:40.440 --> 03:49.840]  И причем она опять говорит, на самом деле, по подвыборке, чтобы вы не знали на части данных вообще своих результатов, потому что именно по этой части данных будет потом утоговый лидерборд оттениваться.
[03:49.840 --> 03:54.080]  То есть вы не знаете до последнего, как ваша модель себя ведет, но как в реальной жизни.
[03:54.320 --> 04:02.760]  Вы сделали предсказание для клиентов, вы про них что-то знаете, потом клиенты либо ушли, либо остались, либо повысилась прибыль, либо понизилась. Все так же. Понятно?
[04:05.400 --> 04:10.080]  Собственно, вот разбиение наших данных, тут вроде комментарии излишни.
[04:10.880 --> 04:25.600]  Ну и собственно, вот наш классификатор, просто кнн-очка, так, там зеленая штука прыгает, супер, просто кнн-очка, берем 30 процентов, откладываем на тест, остальные 70, соответственно, останутся на тройне.
[04:26.480 --> 04:32.640]  Вот наш классификатор, породить его абсолютно просто, инстанцируем k-nervous classifier.
[04:32.640 --> 04:40.640]  Заметьте, гиперпараметр k мы явно не указывали, это не значит, что его нет, просто по умолчанию он равен 5, то есть пока что мы будем работать на 5 соседях.
[04:42.080 --> 04:51.360]  Собственно, обучаем мы его, ну что значит обучаем, по факту кнн никак не обучается, там параметров нет, он просто запоминает обучающую выборку, он говорит, понял, ходите вот сюда, все.
[04:52.240 --> 05:00.160]  И соответственно, для предсказания он точно так же делает предсказания для всех. Мы видим, что 90 процентов точность классификации для нашего классификатора.
[05:04.640 --> 05:15.520]  Да, по дефолт, по умолчанию метрика, скорее всего, Евклидова, ну почему, почти наверно, скорее всего, потому что я, если честно сам, далеко не всегда помню все доки наизусть, давайте посмотрим.
[05:15.520 --> 05:28.640]  Да, вот до этого мы с вами как раз помните, я говорил, что в некоторых условиях она хорошо подходит, сейчас для этого как раз доберемся.
[05:30.640 --> 05:33.440]  Так, ну ты что-нибудь покажешь мне или нет, дай доку.
[05:35.440 --> 05:36.640]  Во, дал доку.
[05:37.360 --> 05:53.760]  Так, веса соответственно для всех одинаковые, алгоритм построения, вот, собственно, изначально у нас метрика Именковского, собственно, степенью 2, ну короче, да, Евклидова метрика.
[05:54.480 --> 06:06.880]  Вот, хорошо, ну и здесь мы с вами можем на самом деле посмотреть на предсказания и сразу, чтобы это было недалеко от того, что я вам говорил, мы с вами можем и на вероятности посмотреть.
[06:11.880 --> 06:22.880]  Вот, смотрите, предикт, проба, у всех почти методов классификации из колерна оно есть, то есть, предскажи мне, пожалуйста, вероятность, вы можете их замечательно тоже увидеть.
[06:23.880 --> 06:30.880]  Вот, заметьте, некоторые объекты прям получили вероятность аля 100%, некоторые получили поменьше, вам что-нибудь видно вообще?
[06:31.880 --> 06:32.880]  Хорошо.
[06:33.880 --> 06:34.880]  Вот.
[06:35.880 --> 06:39.880]  Ну и давайте, соответственно, посмотрим, кому он что предскажет.
[06:42.880 --> 06:52.880]  Вот как будет наш классикатор выглядеть для различных, скажем так, как его называют.
[06:53.880 --> 06:56.880]  Давайте его пока заставлю построить, для различного количества соседей.
[06:57.880 --> 07:00.880]  Допустим, вот по ближайшему соседу он работает, по сути, как построена данная картинка.
[07:01.880 --> 07:17.880]  У вас, у нас нарисована просто картинка изначальных точек, точки тестовые, в кавычках, положенные в, разбито все это по сетке, в, как это называется, у нас есть сетка, у нее есть вот эти ноды, как это называется, углы, спасибо.
[07:18.000 --> 07:24.000]  В узлах сетки стоят типа точки, каждый из них, каждый узел сетки классифицируется, получаем цвет.
[07:25.000 --> 07:30.000]  После этого раскрашиваем картинку, видим, где, грубо говоря, границы для различных классов по мнению нашей модели.
[07:31.000 --> 07:35.000]  Видим, что для одного соседа границы какие-то немножко рваные, но это логично.
[07:36.000 --> 07:38.000]  Один сосед оказался в ближайшем, и это сразу повлияло.
[07:39.000 --> 07:42.000]  Для двух соседей все еще есть вот эти штуки, то есть тут несколько желтых точек.
[07:43.000 --> 07:46.000]  Для трех, четырех и так далее эти дыры начинают постепенно исчезать.
[07:46.120 --> 07:48.120]  Видите, вот у нас есть желтые точки на границе.
[07:49.120 --> 07:53.120]  Видите, для тридцати соседей уже у нас достаточно плавная грынь.
[07:54.120 --> 07:58.120]  В принципе, логично, чем больше у вас плотность точек, грубо говоря, в вашем пространстве,
[07:59.120 --> 08:01.120]  и чем больше соседей вы учитываете, тем более четкая картина у вас будет.
[08:02.120 --> 08:08.120]  На самом деле, если вы заместите, замощаете все свое линейное пространство, признаков пространства точками,
[08:09.120 --> 08:12.120]  условно, берете какой-нибудь тепсилон сеть, строите, во всех узлах есть по точке,
[08:13.120 --> 08:15.120]  то все в порядке, у вас метрический алгоритм будет работать замечательно.
[08:16.120 --> 08:18.120]  Просто другое дело, что чем больше размеров пространства,
[08:19.120 --> 08:21.120]  тем больше объектов вам понадобится, чтобы все работало замечательно.
[08:22.120 --> 08:23.120]  Только и всего.
[08:24.120 --> 08:27.120]  Ну и заметьте, что у нас качество классификации, в принципе,
[08:28.120 --> 08:30.120]  разница на трене и на тесте.
[08:31.120 --> 08:34.120]  Допустим, для двух соседей на тесте у нас 80%, на трене 93%,
[08:35.120 --> 08:37.120]  здесь один на 80%,
[08:38.120 --> 08:40.120]  но логично, что если у нас один ближайший сосед,
[08:41.120 --> 08:43.120]  на обучающей выборке это будет всегда 100% точность,
[08:43.240 --> 08:45.240]  у нас каждый объект и так присутствует в обучающей выборке.
[08:46.240 --> 08:47.240]  Догласны?
[08:48.240 --> 08:50.240]  По двум соседям видим, что у нас есть ситуация,
[08:51.240 --> 08:53.240]  где объекты двух классов находятся очень близко друг к другу,
[08:54.240 --> 08:56.240]  потому что иначе бы по двум соседям у нас тоже была точка близка к сотне.
[08:57.240 --> 09:00.240]  У нас, ну, к единице, у нас она не близка к единице уже.
[09:01.240 --> 09:02.240]  И так далее.
[09:03.240 --> 09:05.240]  Смотрите, а теперь, внимание, вопрос,
[09:06.240 --> 09:08.240]  я пока его оставлю немножко подумать,
[09:09.240 --> 09:10.240]  внимание, вопрос,
[09:10.360 --> 09:12.360]  а всегда ли мы можем использовать
[09:13.360 --> 09:15.360]  КНН с Евклидовой метрикой абсолютно спокойно?
[09:16.360 --> 09:18.360]  Или нам надо что-то явно понимать про свои данные?
[09:19.360 --> 09:21.360]  Тут данные мы сгенерировали из какого-то нормального распределения,
[09:22.360 --> 09:24.360]  все нормально.
[09:27.360 --> 09:29.360]  0.1, да, ну, все-таки это все равно чиселки,
[09:30.360 --> 09:31.360]  но они уже какие-то странные.
[09:32.360 --> 09:34.360]  Верное замечание, а?
[09:35.360 --> 09:37.360]  А размер небольшой?
[09:37.480 --> 09:39.480]  Ну, про переобучение тоже.
[09:40.480 --> 09:43.480]  Смотрите, мы с вами, когда считаем Евклиды в расстоянии,
[09:44.480 --> 09:45.480]  мы что делаем?
[09:46.480 --> 09:48.480]  Корень извлекаем, а еще мы с вами, по сути,
[09:49.480 --> 09:51.480]  берем вектор, грубо говоря, разностей и считаем его нормой.
[09:52.480 --> 09:53.480]  Правильно?
[09:54.480 --> 09:57.480]  А у нас каждая компонента, вообще говоря, развивляется?
[09:58.480 --> 10:00.480]  У нас разве компоненты однородны?
[10:01.480 --> 10:03.480]  Ну, все признаки разве одной и той же природы?
[10:04.480 --> 10:05.480]  Нет.
[10:05.600 --> 10:07.600]  Ну, величитая невероятность, какая-то фигня еще...
[10:08.600 --> 10:10.600]  Да, есть такая проблема.
[10:11.600 --> 10:12.600]  Вот.
[10:13.600 --> 10:15.600]  Как бы то, что у нас категориальные переменные,
[10:16.600 --> 10:18.600]  плохо, грубо говоря, вы считаете друг из друга, да, вы правы,
[10:19.600 --> 10:21.600]  но с этим еще можно, худо-бедно, как-то мириться.
[10:22.600 --> 10:24.600]  А вот если у нас с вами признаки в разных шкалах,
[10:25.600 --> 10:27.600]  то КНН, применяйтесь в коробке, ну, это очень плохая затея.
[10:28.600 --> 10:29.600]  Почему?
[10:30.600 --> 10:32.600]  Предположим, у нас с вами, опять же, есть условно,
[10:32.720 --> 10:34.720]  вот дурацкая ситуация, выгрузили откуда-нибудь из ОДНСа
[10:35.720 --> 10:37.720]  какую-нибудь табличку, и там какие-нибудь начисления есть
[10:38.720 --> 10:40.720]  в рублях и в копейках.
[10:41.720 --> 10:43.720]  И у вас как бы все начисления как раз какие-то,
[10:44.720 --> 10:46.720]  порядка сотен рублей.
[10:47.720 --> 10:49.720]  Тогда у вас получается, что для КННа, так это два отдельных
[10:50.720 --> 10:52.720]  признака, разница в копейках и эквалентно разница в рублях.
[10:53.720 --> 10:55.720]  Они одинаковый вклад в расстояние дают.
[10:56.720 --> 10:58.720]  Хотя по смыслу это абсолютно бессмысленно.
[10:59.720 --> 11:01.720]  Или что то же самое, у вас там может быть, я не знаю,
[11:02.720 --> 11:04.720]  рублях, а цена чего-нибудь в тугрифах.
[11:05.720 --> 11:07.720]  Все.
[11:08.720 --> 11:10.720]  Получается, что у вас разница в шкалах
[11:11.720 --> 11:13.720]  влияет на то, какой вклад делают ваши признаки
[11:14.720 --> 11:16.720]  в расстояние исходное.
[11:17.720 --> 11:19.720]  Поэтому, если вы, скажем так, не обладаете четким
[11:20.720 --> 11:22.720]  пониманием, что у вас шкалы указывают реально на значимость
[11:23.720 --> 11:25.720]  признаков, и чем больше шкала признаков, тем более
[11:26.720 --> 11:28.720]  он важный, для КННа лучше признаки нормировать.
[11:29.720 --> 11:31.720]  Вообще говоря, почти всегда лучше нормировать ваши данные.
[11:32.720 --> 11:34.720]  В разных шкалах лучше для каждого признака посчитать
[11:35.720 --> 11:37.720]  среднюю дисперсию, минус среднюю поделить на корень
[11:38.720 --> 11:40.720]  с дисперсией.
[11:41.720 --> 11:43.720]  Стандартизовать данные будет целее и работать будет более
[11:44.720 --> 11:46.720]  устойчиво. Кроме случаев, когда у вас реально каждый
[11:47.720 --> 11:49.720]  признак, скажем так, чем более значимый признак,
[11:50.720 --> 11:52.720]  тем больше у него шкала и наоборот.
[11:53.720 --> 11:55.720]  Окей? Договорились?
[11:56.720 --> 11:58.720]  И, кстати, как раз таки вот с тем, что мы с вами считаем
[11:59.720 --> 12:01.720]  расстояние, это нам тоже поможет, так у нас по крайней
[12:02.720 --> 12:04.720]  части отклонения там синего от зеленого тоже будет
[12:05.720 --> 12:07.720]  гораздо ближе ко всему остальному.
[12:08.720 --> 12:10.720]  Окей?
[12:13.720 --> 12:15.720]  Капейки это полная разница?
[12:16.720 --> 12:18.720]  Не, не, вот смотрите, у вас условно
[12:19.720 --> 12:21.720]  есть сумма, она у вас просто записана в табличке
[12:22.720 --> 12:24.720]  70 рублей, 24 копейки.
[12:25.720 --> 12:27.720]  У другого там 25 рублей, 31 копейка.
[12:28.720 --> 12:30.720]  Тогда у вас получается отклонение по рублям и по копейкам
[12:30.840 --> 12:32.840]  и, по сути, одинаково порядка вклады, хотя это принципиально
[12:33.840 --> 12:35.840]  неверно. И я привел этот пример, именно чтобы было
[12:36.840 --> 12:38.840]  понятно, потому что если такой пример, можно там
[12:39.840 --> 12:41.840]  еще как-то данные предобработать, их совместить и так далее.
[12:42.840 --> 12:44.840]  Представь себе, что у вас, не знаю, там, это на самом
[12:45.840 --> 12:47.840]  деле даже нормировкой не починится, более того, это
[12:48.840 --> 12:50.840]  плохо. Но в общем случае, представь себе, что у вас
[12:51.840 --> 12:53.840]  там один признак, грубо говоря, не знаю, у вас там
[12:54.840 --> 12:56.840]  площадь в квадратных метрах, средняя, не знаю, вот,
[12:57.840 --> 12:59.840]  средняя площадь жилья, допустим, в Москве, это
[13:00.840 --> 13:03.840]  один признак. А другой признак, это у вас население
[13:04.840 --> 13:06.840]  города, например, просто в количестве человек.
[13:07.840 --> 13:09.840]  И тогда у вас для одного города, там, для маленьких
[13:10.840 --> 13:12.840]  городов, там, 60 тысяч, для Москвы, это миллионы,
[13:13.840 --> 13:15.840]  там, для миллионников, а средняя площадь жилья
[13:16.840 --> 13:18.840]  все равно будет там варьироваться от 25 до, я не знаю,
[13:19.840 --> 13:21.840]  там, 100, условно. Получается, когда мы будем считать
[13:22.840 --> 13:24.840]  своими расстояниями между точками, у вас средняя
[13:25.840 --> 13:27.840]  площадь жилья просто улетит куда-то, потому что у вас тут
[13:27.960 --> 13:29.960]  очень большая разница в шкалах, и это будет гораздо
[13:30.960 --> 13:32.960]  больше вклад в норму, чем разница там на единицу.
[13:33.960 --> 13:35.960]  Услов, да что угодно на самом деле, мы же расстояние
[13:36.960 --> 13:38.960]  считаем, нам не важно какая-то силовая переменная.
[13:39.960 --> 13:41.960]  То есть, если у вас очень большая разница в шкалах,
[13:42.960 --> 13:44.960]  то у вас тот признак, который в большей шкале, просто
[13:45.960 --> 13:47.960]  будет доминировать все остальные. Ничего хорошего
[13:48.960 --> 13:50.960]  в этом нет. Так что, пожалуйста, не забывайте
[13:51.960 --> 13:53.960]  нормировать ваши данные или четко понимать, почему
[13:54.960 --> 13:56.960]  не надо нормировать ваши данные. Я могу придумать
[13:57.960 --> 13:59.960]  норму, с которой мы доминируем эти фильмы?
[14:00.960 --> 14:02.960]  Ну, можно ввести, да, такую норму, это нормально.
[14:03.960 --> 14:05.960]  Технически, да, вы можете туда свою норму ввести,
[14:06.960 --> 14:08.960]  вы, в принципе, можете очень сильно переписывать
[14:09.960 --> 14:11.960]  все, что есть, это нормально. Вот. Ну и коллеги,
[14:12.960 --> 14:14.960]  смотрите, последнее, на самом деле, что хочется сказать
[14:15.960 --> 14:17.960]  перед тем, как я вас отпущу. Мы с вами только что
[14:18.960 --> 14:20.960]  брали простенький датсет, с ним все работало.
[14:21.960 --> 14:23.960]  Но, по-моему, у нас есть датсет, у нас есть
[14:24.080 --> 14:26.080]  датсет, мы с вами только что брали простенький
[14:27.080 --> 14:29.080]  датсет, с ним все работало. Но, по факту, мы можем
[14:30.080 --> 14:32.080]  сделать более сложный датсет, где у нас и данные
[14:33.080 --> 14:35.080]  уже более зашумленные, и количество информативных
[14:36.080 --> 14:38.080]  признаков уже не все, а, допустим, только половина.
[14:39.080 --> 14:41.080]  Половина, какой-то мусор, так бывает. И можем увидеть,
[14:42.080 --> 14:44.080]  что у нас с вами классификатор тогда будет выдавать
[14:45.080 --> 14:47.080]  качество классификации порядка 60%, что все еще
[14:48.080 --> 14:50.080]  лучше, чем слепое угадывание, на трех классах
[14:51.080 --> 14:53.080]  это было бы, сколько? 33%. Но, тем не менее, про
[14:54.080 --> 14:56.080]  то, как настроить вашу модель так, чтобы не сидеть
[14:57.080 --> 14:59.080]  вручную и все перебирать, мы поговорим на грядущих
[15:00.080 --> 15:02.080]  занятиях. А пока, добро пожаловать, скажем так,
[15:03.080 --> 15:05.080]  в мир машинного обучения, где у вас уже есть два
[15:06.080 --> 15:08.080]  метода и база по линейной алгебре. Спасибо, все.
