[00:00.000 --> 00:09.960]  Огонь-то, давайте начинать. Да, всем снова привет. Здорово, что вы сюда добрались. На этот раз на
[00:09.960 --> 00:14.640]  самом деле очень приятно, чем когда ты читаешь более-менее в пустое аудиторию, дальше встанет
[00:14.640 --> 00:23.200]  виртуальная. Надеюсь, что это будет не просто так, я что-нибудь полезное расскажу. Ну примерно
[00:23.200 --> 00:28.440]  такой у нас на сегодня план. Сначала я что-то поговорю. Вы же видели запись прошлого раза? Да,
[00:28.440 --> 00:33.280]  прокомментирую некоторые штуки, которые я сказал в прошлый раз. Там было не все совсем правдой,
[00:33.280 --> 00:38.960]  а что-то было не очень подробно и стоит к этому вернуться. Дальше обсудим, наверное, последний
[00:38.960 --> 00:44.200]  раз набор формул, самая продвинутая вещь, которая вам будет постоянно пригождаться. Поговорим,
[00:44.200 --> 00:48.880]  как устроены ссылки-гиперссылки в техе, как ссылаться на свой же документ на другие страницы,
[00:48.880 --> 00:54.520]  как ссылаться на что-то в интернете. Тоже постоянно нужная вещь. И поговорим про инструмент счетчиков,
[00:54.520 --> 01:00.040]  ну вот тот самый, который позволяет какие-то вычисления внутри теха делать, вычитать номера
[01:00.040 --> 01:06.200]  страниц, номера секций, как-то регулировать эту номерацию и всякое такое. И подробнее поговорим
[01:06.200 --> 01:09.720]  про создание окружений, которые мы уже много раз затрагивали в контексте того, как именно
[01:09.720 --> 01:14.440]  хотим пользоваться. Ну там окружение вроде Center и Flashrite и всякие теоремы, которые тоже
[01:14.440 --> 01:20.480]  являются окружениями, тоже подробнее на этот раз обсудим. Да, и можно приступать. Во-первых,
[01:20.480 --> 01:26.280]  я заготовил много комментариев на тему всяких переходов на новую строку. Это, на самом деле,
[01:26.280 --> 01:31.040]  довольно тонкая материя и, наверное, даже не все, что я сейчас скажу, будет целиком правдой,
[01:31.040 --> 01:36.280]  но нам на текущем уровне понимания, наверное, стоит сказать вот так. Во-первых, есть много,
[01:36.280 --> 01:41.280]  очень много разных способов перейти на новую строку. Зачем-то они существуют, при том,
[01:41.280 --> 01:46.560]  что есть просто двойная пустая строка, ну как мы раньше обсуждали, два Enter — это новый абзац.
[01:46.560 --> 01:51.080]  Но вот есть много альтернатив. Есть команда Park, которая делает буквально то же самое,
[01:51.080 --> 01:55.160]  что и переход на новую строку. Возникает это про зачем он не пользоваться, если он может
[01:55.160 --> 01:59.600]  сделать просто двойной Enter. Ну я ответа дать не могу, я не знаю, я никогда не пользуюсь,
[01:59.600 --> 02:06.520]  мне кажется, это некий overhead. Есть команда New Line и команда Line Break. В прошлый раз я сказал,
[02:06.520 --> 02:12.680]  что они более-менее эквивалентны, и это почти правда, но тут есть что пояснить. New Line делает
[02:12.680 --> 02:18.440]  переход вот прям, где вы его ввели, текст идет, идет, идет, потом пишется New Line. С этого момента
[02:18.440 --> 02:23.640]  строка сразу обрывается и начинается с новой строки, ну вот, с самого начала. А то, что осталось,
[02:23.640 --> 02:27.480]  ну там, половинка строки осталась, вот она так и есть. Он с ней ничего не делает, просто оставляет
[02:27.480 --> 02:33.880]  как в том виде, как она осталась. И то же самое делает команда двойной Backslash. Команда Line Break,
[02:33.880 --> 02:39.760]  она несколько умнее, она дает теху, ну как я сказал, здесь вот рекомендацию, когда перейти на
[02:39.760 --> 02:45.000]  новую строку, он это не сделает прямо сейчас, он это сделает тогда, когда ему это удобно. Ну там
[02:45.000 --> 02:50.040]  есть свои правила, по которым он предъявляет, какая вертка хорошая, какая не очень. Скорее всего
[02:50.040 --> 02:56.880]  справится с задачей. Другое дело, что ни в случае New Line или двойного Backslash, ни в случае Line Break
[02:56.880 --> 03:01.480]  тех не начинает нового абзаца, ну которые, скорее всего, строки там со стопом предыдущего абзаца и
[03:01.480 --> 03:07.040]  все такое. Вот все штуки, которые мы задавали параметрами, вроде setLength, что-то там, то ли на
[03:07.640 --> 03:11.840]  позапрошлом. Это все будет неприменимым, он просто начнет новую строку вплотную предыдущей.
[03:11.840 --> 03:16.840]  Ну и есть эквиваленты эти команд, но работающие не для строка, а для страниц,
[03:16.840 --> 03:23.920]  соответственно New Line, New Page, Line Break, Page Break. Та же самая история, New Page начинает новую
[03:23.920 --> 03:28.960]  страницу прямо вот с этого момента, как вы написали, сразу все обрывает, начинает новую страницу
[03:28.960 --> 03:36.760]  следующего нашего слова. Page Break тоже считается рекомендательным, ну и заканчивает там, где более
[03:36.760 --> 03:41.880]  или менее уместно. Вот Page Break мне пораз пригождался. Иногда, если пишут длинные абзацы, в которых
[03:41.880 --> 03:48.080]  еще какие-то выкладки внутри, может так случиться, что вот если писать его целиком, то тех вынужден
[03:48.080 --> 03:51.960]  все строки ужимать друг к другу, чтобы все это уместилось на одну страницу, и почему-то он
[03:51.960 --> 03:58.280]  не догадывается это перенести сам. Наверняка это можно регулировать как-то иначе, но такой
[03:58.280 --> 04:03.040]  рабочий крестьянский метод — это писать Page Break, где-нибудь ближе к концу этого абзаца, тогда тех
[04:03.040 --> 04:07.480]  догадает, что ему нужно, хотя бы не в конце абзаца, немножко пораньше перейти на новую страницу и
[04:07.480 --> 04:17.280]  сделать это. — А может соответствующий вопрос? — Да. — У меня была ситуация, я писал формулу, и я ее обрамлял так, чтобы она была по центру, и у меня вот была
[04:17.280 --> 04:22.640]  проблема, что я когда это писал все подряд, у меня из-за того, что на строке не хватало места, у меня это уходило
[04:22.640 --> 04:28.320]  куда-то вправо. Я чтобы, ну как-то справиться по крестьянски тоже, писал чуть там не влайн,
[04:28.320 --> 04:42.320]  это не очень хорошо, но здорово, что спросил, для этого есть специальное окружение, такие как MountLine, я их упоминал в прошлый раз под запись, но сегодня мы
[04:42.320 --> 04:47.040]  про это снова поговорим, потому что вещь полезная. Да, в техе много инструментов, как писать многостроечные
[04:47.040 --> 04:52.880]  выкладки, и там уже не придется такие костыли делать, вот это применимо все для обычного текста, и в общем-то в основном только для
[04:52.880 --> 04:58.880]  него. Да, чем еще вообще, ну я вообще не рекомендую эти команды использовать, может кроме PageBreaker, потому что
[04:58.880 --> 05:06.480]  он бывает полезен, ну для строк почему так, ну потому что они даже начинают новый абзац, вам вряд ли во многих задачах в жизни потребуется
[05:06.480 --> 05:16.080]  начать новую строку, никак и не форматировав, а просто зачем-то скинув на следующую позицию в тексте, это выглядит не очень симпатично, это первая причина. Вторая причина у двойного
[05:16.080 --> 05:25.280]  бэкслэша, миллион разных значений, он в каждом окружении значит свое, и в целом, каждое дешнее его вхождение затрудняет читаемость, и если кто-то ваш
[05:25.280 --> 05:33.680]  код будет читать, он может запутаться и подумать, что это бэкслэш, который, ну чтобы на самом деле хотели делать какое-то окружение, вроде там таблицы или матрицы, и там
[05:33.680 --> 05:44.480]  бэкслэш оттуда пришел, а потом его убрали, и он остался, ну это как-то тоже не симпатично, но вот разница есть, на всякий случай я прокомментирую, что оно вот так.
[05:44.480 --> 05:58.080]  Я думаю, что даже оправданно, ну какой-то минимальный, например, привести, здесь я как-то делал, я просто размножил очень много текста, одинаково, ну и посмотрим на разные эффекты.
[05:58.080 --> 06:12.480]  Давайте тут 4,5,6, чтобы было видно хотя бы какую-то разницу, что будет, если я сделаю new line. Если мы верим в то, что я сказал только что, он прервется прямо на том месте, на котором я написал new line,
[06:12.480 --> 06:29.280]  и да, видите, строка вроде только началась по его правилам, но вот я ему написал, он взял и перешел на новую, и на новую возникло уже 1,3,4,5,6. Ну не симпатично, правда, не тебе отступа красной строки, ничего, ну то есть не понятно для чего это может быть нужно, я как-то не придумал.
[06:30.080 --> 06:59.080]  С другой стороны, если бы я сделал здесь вместо этого, что там, line break, как было бы? Видите, он, поскольку это все 1,2,3, разница может быть плохо видна, но он их на первой строке поджал таким образом, чтобы они все вместились в три строки, и чтобы хоть как-то их можно было бы форматировать, то есть он принял мою рекомендацию и все правила форматирования этого абзаца немножко подстроил так, чтобы это было хоть как-то нормально.
[06:59.080 --> 07:12.880]  И новую строку он действительно начал, причем даже не то что примерно там, где я сказал, а вот прямо там, где я сказал, но это мне повезло, могло и не повести, но опять же, это такая экзотика, я не думаю, что в реальной жизни мне могло бы такое потребоваться, вот.
[07:12.880 --> 07:25.880]  Ну и глобально, если вам хочется делать просто оступы по вертикали, не то что начинает новая строка, а вот именно отделять текст друг от друга какими-то просто блоками пустого пространства, для этого есть команды vspace соответствующие.
[07:25.880 --> 07:55.680]  Я про них тоже говорил в прошлый раз, vertical space, и в качестве аргумента указывается расстояние, на которое вы хотите отступить, это по всем параметрам удобнее, во-первых, это читаемое, сразу понятно, что вот эта команда делает просто оступ на какое-то состояние вперед, во-вторых, она масштабируема в том плане, что новыми строками вы можете делать оступ только кратными количеством новых строк, а если вам нужно делать полстрочки оступа или что-нибудь такое, то вы тоже не справитесь с такими инструментами. Вот целых два аргумента, чтобы никогда больше то, что я написал, не писать.
[07:55.880 --> 08:20.680]  Вот, и еще один комментарий по прошлому разу, ну это одно из окружений, которые часто бывают нужны, я просто кратко упомянул, а вот стоит, наверное, сказать подробнее, вот есть такое окружение cases, давайте еще раз, вы видели в прошлый раз, хотя бы в записи, рассказ про всякие окружения математики для многостроительных выкруток?
[08:20.680 --> 08:48.480]  Ну, конечно, в среднем по аудитории голоса, да, это здорово, но вот там было окружение cases. Какой у него синтаксис? Оно устроено примерно как окружение, которое рисует вам таблицы, опять же, если помните, как мы это делали в прошлый раз. Есть разделители столбсов, амперсанды, есть разделители строк, опять двойные бэкслэши, вот они снова стрельнули в другом значении, не в том, к которому мы говорили на прошлом слайде.
[08:48.480 --> 09:18.480]  Что оно делает? Оно делает так, чтобы все левые части, ну, то есть, что вообще такое cases? Это разбор случаев, то есть, вам хочется создать функцию на разных каких-то промежутках, на разных множествах, по-разному, естественно, вы левым столбсовом пишете, какие значения должна функция принимать, ну или какими выражениями должна задаваться, а правыми частями пишете, при каких условиях она сдается таким образом, ну и cases все делает наиболее симпатично,
[09:18.480 --> 09:48.480]  как это вообще принято в теле литературе, он равняет так, чтобы все условия были по одной вертикальной прямой, чтобы они были на нужном расстоянии, чтобы хватило места для всех этих выражений, которые здесь могут возникнуть, дальше они довольно длинные, он их правильно отступит, все отрисует как положено, ну и сам рисует фигурную скобку, довольно удобно, ну, то есть, при довольно малом использовании кода, всего лишь новое окружение завести, он делает полезную вещь, которая часто встречается с каких-то
[09:48.480 --> 10:18.480]  работах, которые вам тоже может пригодиться, ну и да, это был пример еще и к тому, что вот, аккуратнее с такими там бэкслэшами амперсандами, они очень много где зарезервированы, такие за особые значения, мы это еще много раз увидим, в матрицах, диаграммах коммутативных много в чем, вот, по рампам, со всем в прошлом раз, наверное, на этом все, но вот сейчас будет большой раздел, где мы повторим всякие окружения типа align, gather, на это прям нужно, вот стоит их различать,
[10:18.480 --> 10:48.480]  я, мне не жалко, вот, ты еще немножко разговор отвести, давайте так, есть ли вопросы, вот, потому что я до этого сказал, огонь, а, да, ну ладно, это не совсем по теме, но давай выбираемся сейчас, не хочет, он говорит, что не скомплировался, а потому что хотя бы, ему не нравится даже пустой документ, абсолютно, смотри, у тебя какой-то кириллический символ, вот это можно просто вот убрать, оно просто не хочет ничего делать,
[10:48.480 --> 11:18.480]  сейчас, а, ну, можно пойти решить проблемы и посмотреть, на что он, собственно, жалуется, но это сейчас есть, а до этого их не было, он просто не делал пудоевку, если бы документ был совсем пустой, это бы не сработало, просто потому что пустой документ, ну, здесь есть новая страница, есть, хорошо, запустим прям в таком виде, ничего не происходит, не, смотри, раз ничего не происходит, конечно, он все сделал, можно кнопочкой preview в соседней посмотреть, что произошло, она не работала, ну,
[11:18.480 --> 11:28.880]  значит, тебе очень повезло, что она заработала на этот раз, да, хорошо, значит, это мы можем закрывать и идти дальше, вот, во-первых, окружение equation,
[11:28.880 --> 11:43.680]  глобально, оно эквивалентное просто окружению экранированной квадратной скобки, но для чего оно может быть полезно, окружение equation, как и многие окружения математического рода, они номируемые,
[11:44.480 --> 11:55.280]  если вам хочется сделать формулу, на которую потом будете ссылаться, там, типа, смотри, формула 1, то вы пишете какие-то вот такие вещи, в частности, для этого может помочь equation,
[11:55.280 --> 12:06.480]  у него есть аналог со звездочкой, ну, то есть, equation звездочка, вместо просто equation, он будет ненумерованным, в таком случае он вообще полностью экваленсен обычным окружением квадратной скобки,
[12:06.880 --> 12:21.680]  ну, как следствие, вам никогда он не пригодится, потому что это писать просто длиннее, чем обычные квадратные скобки, если вам нужен номерация, то вы делаете вот так, вот, ну, и номерация у меня,
[12:22.480 --> 12:32.480]  здесь просто единичка, а не номерсекция.единечка, потому что это я комплиировал, когда делал презентацию, если бы я жил в обычном документе, который document class article,
[12:32.800 --> 12:36.800]  ну, который мы всегда до этого создавали, было бы немножко иначе, давайте посмотрим, как,
[12:46.640 --> 12:48.400]  ну, мне не что-то придумать, сложное,
[12:52.880 --> 12:56.640]  для меня это довольно удивительно, потому что я немножко другого ожидал, сейчас секцию создадим,
[13:03.360 --> 13:07.760]  ну, ладно, значит, придется это регулировать отдельно, когда мы идем до счетчиков,
[13:07.760 --> 13:17.440]  нет, так, он, конечно, сцентрирует, потому что это как квадратные скобки, ну, это выключенные формулы, которые всегда рисуются по центру с новостарки, как положено,
[13:17.440 --> 13:28.720]  почему я затупил, мне хотелось другого эффекта, чтобы здесь было выражение вида 1.1 в часть первой секции, вот, это можно регулировать, но мы это, видимо, попозже увидим,
[13:28.720 --> 13:38.960]  надеюсь, что сегодня, если у меня есть такой слайд, иначе, в начале следующего раза, в общем, это тоже еще штука глубоко регулируемая, тут можно аж даже задавать вообще свои символы,
[13:38.960 --> 13:47.760]  и своими символами это нумеровать, ну, то есть, там, единичкой, а каким-то выражением, мы это вот, это мы точно сегодня увидим, это все, в общем, настраивается,
[13:47.760 --> 14:05.040]  ну, по умолчанию вот так, да, и окружение align, окружение align нужно до следующего, если у вас есть какая-то, ну, скажем, некоторое семейство формул, которые хочется записать все в одном блоке, там, друг под другом,
[14:05.040 --> 14:17.440]  или, например, одну длинную выкладку написать во много строк, но при этом как-то грамотно выровняв, сейчас еще поговорим как, вам для этого потребуется окружение align, что оно делает?
[14:17.440 --> 14:17.920]  оно берет все формулы, которые вы ему дали, и равняет по правому краю, по умолчанию, но это поведение можно регулировать, можно в каждой строке, да, у нас снова строки отделяются двойным бэкслэшем, то есть, это первая строка, а это вторая, даже если между ними нет двойной новой строки, поскольку я поставил бэкслэша, и здесь это как раз уместно, потому что это бэкслэш, который имеет особое значение в каждой среде, в частности, в среде align, и тут как раз принято писать примерно
[14:47.440 --> 15:16.280]  вот так, в общем, в каждой строке можно поставить символ апперсанда, вот, и тогда поведение меняется на следующее, он захочет все символы, помеченные амперсандами, разместить по одной вертикальной прямой, какой бы длины они ни были, и вот это как раз бывает полезно, сейчас я продемонстрирую для чего, например, у вас есть, да, символ, который помечен амперсандом слева от него,
[15:18.360 --> 15:41.680]  причем, как мы выяснили в прошлый раз случайно, именно символ бинарной операции, по всей видимости, ну, например, вы считаете какой-то длинный интеграл, я сейчас не буду придумать конкретный интеграл, который хочется посчитать, я просто скажу, что вот, дотс, чтобы было симпатично, еще дотс, новая строка, далее снова равно снова дотс,
[15:41.680 --> 16:03.920]  ну, скажем, вот, посчитали что-ли, получили, что он равен единице, смотря что будет по умолчанию, ну, пока много проблем, во-первых, непонятная амперсанда, во-вторых, она как-то не выровнялась, но давай сейчас первую проблему решим, как делать, чтобы она выровнялась, а, мы помечаем все знаки равно амперсандами,
[16:11.680 --> 16:23.920]  ну, это все для красоты, поставлю еще знаки равенства здесь, чтобы показать, что, типа, вычленение закончилось, и дальше считается, вот, ну, вот уже что-то симпатичное, вот такого вида выражения, если какие-то статьи читаете, вы часто будете встречать,
[16:23.920 --> 16:39.920]  вот какая-то большая выкладка, какое-то одно выражение хочется долго-долго преобразовывать и к чему-то привести, обычно как раз так это и делается, пишется илайн, и куча-куча строк, и все, как правило, равняются как раз по одной вертикальной прямой со знака равно, ну, потому что это довольно удобно читать,
[16:39.920 --> 17:09.920]  как будто бы каждая новая строка с того же самого места, это типа новый штаб вычисления, да, и, ну, это мы пока решили часть проблемы, вторая часть проблемы, что у нас пока есть нумерация, опять звездочка, наш спаситель, звездочка после любого меморического окружения делает его ненумируемым, если я сделаю вместо просто илайна, илайна со звездочками, то нумерация пропадет, ура, причем, как вы могли заметить,
[17:09.920 --> 17:39.920]  нумируется каждая строка независимо друг от друга, ну, например, если вы писали бы какую-то систему уравнений, то, ну, и вам хотелось бы по какой-то причине нумеровать каждое из них, в принципе, это неплохое поведение, они тоже можно будут пользоваться, да, что еще отмечу, если бы у нас было два илайна, ну, или там equation илайн, или вообще любые окружения, которые как-то нумируются, нумерация будет согласованной, это все управляется одним и тем же счетчиком, мы поговорим о том, что такое счетчики, и вот,
[17:39.920 --> 18:09.920]  каждая новая строка, каждое новое окружение математики, этот счетчик инкриментирует, отрисовывает его новое значение, на 1 больше, чем предыдущее, вот, в частности, им можно даже управлять, и между этими двумя уравнениями можно было бы написать команду вида, прибавь к значению счетчика еще единицу, и нумерация была бы уже не четверкой, а с пятерки, мы это сегодня научимся делать, ну, не знаю, это такое теоретически может пригодиться, немножко в другом виде, ну, то есть, в целом управлять какими-то числами в документе бывает полезно, может быть, не в таком контексте, но вообще, ну, вот так,
[18:09.920 --> 18:21.920]  да, и тут я перечитаю еще дволь много раз о полезных окружений, которые я в прошлый раз упоминал, но не мешает закрепить, потому что это прям реально супер полезная вещь,
[18:21.920 --> 18:32.920]  во-первых, mountline, это вот то, что только что прям был вопрос, что делать, если у тебя есть одна выкладка, которая хочет списать намного строк, но по какой-то причине вам иллайн не очень нравится идеологически,
[18:32.920 --> 18:46.920]  можно иначе, можно mountline, давайте для числа эксперимента просто попробуем ту же самую формулу, но уже без имперсентов, загнать в новое окружение, которое mountline, почему без имперсентов,
[18:46.920 --> 18:55.920]  ну, потому что это особая хича именно из иллайна, вот там она работает, а нигде больше, она, наверное, и не работает, вернее, возможно, в других окружениях
[18:55.920 --> 19:05.920]  оперсант тоже поддерживается, но он уже имеет другое значение, и вы получите что-то неожиданное, если вы там его оставите, не зачем рисковать, сделаем так,
[19:05.920 --> 19:20.920]  ага, смотрите, тут выглядит не очень симпатично, но в основном потому, кстати, давайте я сделаю покрупнее, что ли, потому что мне кажется с камеры, иначе будет не очень понятно,
[19:20.920 --> 19:33.920]  что он сделал, он взял наши три строки и разместил их так, чтобы центры этих строк находились по одной диагонали, то есть будет это прям реально очень длинная формула, давайте размножим много раз,
[19:33.920 --> 19:59.920]  вот, ну, это становится уже симпатичнее, это бывает полезно, ну, то есть это как бы вторая альтернатива, как можно было писать длинные выкладки, и она еще тем хороша, что здесь она нумирует только последнюю строку, а не все их,
[19:59.920 --> 20:11.920]  ну, вернее как, она считается просто единой строкой, но побитой на некоторые части, и грамотно выровненной, но при этом, если будет слишком большое количество символов, они же будут очень узкие, наверное,
[20:11.920 --> 20:30.920]  ну, да, тут есть, конечно, свои ограничения, если вы сделаете полную строку текста, то, наверное, вам тогда странно было вообще использовать самолайн именно в таком виде, вы бы подразвели ее еще на две строки, но, да, если будет слишком много символов, оно как-то не очень симпатично выровняется, но тогда вы будете просто сами виноваты, вот.
[20:30.920 --> 20:46.920]  Кристина Ивановна, вот в чем соврал, он не прям центры строк ровняет, а все-таки разбивает все пространство этой строки на равные части, да, точно, на три части, и размещает так, чтобы оно начиналось с 0 третьих строки, с одной третьей строки, с двух третьих строки.
[20:46.920 --> 21:05.920]  Я вот не умею, мне кажется, что нет, ну, вернее так, это можно регулировать почти наверняка командами типа hspace, ну, то есть, горизонтального пробела, можно сместить его влево или вправо, давай попробуем, я не обещаю, что это вообще сработает, скомпилируется, потому что я не помню работать для hspace по тематике.
[21:05.920 --> 21:35.920]  Если он умеет, то да, ну, смотри, кажется, что ничего не изменилось, да, если я скажу, я еще больше делаю аргументы, по-моему, ничего не изменилось, а, нет, смотри, работает, я указал hspace, горизонтальный пробел сказал, отступи мне вот еще на 200 пикселей, а он взял и отступил, ну, и как я упоминал в прошлый раз, значение может быть 30 пикселей, но я не думаю, что это будет, я думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет,
[21:35.920 --> 22:05.920]  я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет,
[22:05.920 --> 22:35.920]  я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет,
[22:35.920 --> 23:05.920]  я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет, я не думаю, что это будет,
[23:05.920 --> 23:09.580]  да, он сделал выравнивание по правому краю
[23:10.380 --> 23:14.440]  про номерацию я поищу, подумаю, сейчас я не помню как это делается
[23:15.260 --> 23:21.500]  это будет в числе первых слайдов в следующей лекции вот как раз повод будет на нее прийти, послушать
[23:24.520 --> 23:31.880]  но такая опция уж точно есть, точность окружения, которая умеет номеровать весь объект по центру, как это, если помещать, например, номерацию
[23:32.920 --> 23:35.460]  просто вот он мне и likes, а я его подзабыл
[23:35.920 --> 23:43.920]  Ну и здесь снова есть комментарий, который я уже говорил словами, что окружение со звездой не номируется.
[23:43.920 --> 23:49.920]  Если ваше обычное окружение не генерировало нумерацию, то и вы хотите отключить, то вы пишете окружение со звездой.
[23:49.920 --> 23:56.920]  Если по умолчанию ваше окружение нумерации не генерировало, значит, скорее всего, звезда вообще не сработает и, может быть, будет ошибка компиляции.
[23:56.920 --> 24:03.920]  Ну потому что тут нет поведения, которое можно менять, чтобы еще звезду дорисовывать. Вот по такой, наверное, логике.
[24:04.920 --> 24:11.920]  Вот то, что я обещал, как выбирать конкретно, ну, какой будет нумерация.
[24:11.920 --> 24:17.920]  Во-первых, команда tag. Что-то стоит понаблюдать.
[24:17.920 --> 24:23.920]  Во-первых, она, по крайней мере, в этом примере кода посреди элайна, который даже не нумируется.
[24:23.920 --> 24:30.920]  То есть команда tag, она буквально в любом окружении, ну в любой математике,
[24:30.920 --> 24:35.920]  берет текущую строку и нумирует ее так, как вам захотелось. Да тут лучше, видимо, третий закон Ньютона.
[24:35.920 --> 24:41.920]  Ну и давайте я скопирую код, проверю, что я вас не обману, но что правда все так работает.
[24:41.920 --> 24:47.920]  Надеюсь, должно ничего не изменилось с прошлого раза. Да, действительно.
[24:47.920 --> 24:54.920]  Вот, в частности, одно из решений, вот прямо предыдущего твоего вопроса, то, как нумеровать конкретную, ну скажем, по центру.
[24:54.920 --> 24:59.920]  Выбираешь среднюю строчек, пишешь там tag и указываешь то значение, которое тебе хочется.
[24:59.920 --> 25:03.920]  В принципе, тоже вполне себе выход. Хочется, чтобы это еще и было значение автогенерируемое,
[25:03.920 --> 25:07.920]  ну то есть по тем же правилам нумерации, что и все остальные.
[25:07.920 --> 25:11.920]  Но вот про это мне нужно еще почитать. Я сейчас так не могу сказать, как это делается.
[25:11.920 --> 25:17.920]  Вот, есть команда tag. Как потом к таким штукам отсылаться, мы поговорим чуть попозже.
[25:17.920 --> 25:20.920]  Ну вот, синтез базовый такой.
[25:20.920 --> 25:31.920]  Да, это тоже то, что я в прошлый раз говорил, что некоторые окружения генерируют внутри себя режим математики сами по себе.
[25:31.920 --> 25:35.920]  А некоторые, чтобы существовать, должны уже быть в режиме математики.
[25:35.920 --> 25:43.920]  Например, режим математики, это я называю основой либо там доллары окружения, либо квадратные скобочки, но все как всегда.
[25:44.920 --> 25:53.920]  Некоторые окружения, такие как align, mouthline, gather, они сами по себе делают окружение автоматическим.
[25:53.920 --> 26:00.920]  Там прямо-то прописано, что align его открывает, ну вернее begin align ее открывает, а end align ее закрывает.
[26:00.920 --> 26:04.920]  Поэтому здесь не нужно ни доллара, ни квадратной скобки, ничего, оно работает само по себе.
[26:05.920 --> 26:13.920]  С cases наоборот. Cases требует вокруг себя чего-то, что включает режим математики, и он не скомпилируется вне его.
[26:13.920 --> 26:21.920]  Я мог бы, как в примере, который был пораньше про функцию Dirichlet, завернуть cases в обычные квадратные скобочки.
[26:21.920 --> 26:26.920]  Но мог бы завернуть его и в любой другой режим, который открывает математику.
[26:26.920 --> 26:29.920]  Например, окружение тоже самое align или gather.
[26:35.920 --> 26:37.920]  Сейчас, не очень примутый вопрос.
[26:37.920 --> 26:39.920]  Мы сделали cases внутри квадратных скобок.
[26:39.920 --> 26:40.920]  Да.
[26:40.920 --> 26:43.920]  А можно ли, наоборот, сделать внутри cases квадратные скобки?
[26:43.920 --> 26:48.920]  Я думаю, что нет. Это не должно скомпилироваться, потому что...
[26:50.920 --> 26:56.920]  Короче, да, в код cases почти наверняка зашито, чтобы проверить, что находится внутри математики.
[26:56.920 --> 26:59.920]  Если не находится, то выкинуть ошибку. Скорее всего, это работает вот так.
[26:59.920 --> 27:02.920]  Но это вопрос грамотный, давай его проверим.
[27:04.920 --> 27:20.920]  Да, видишь, missing dollar inserted.
[27:20.920 --> 27:26.920]  Ну, то есть, он попытался проверить, что он в математике, в долларах, и оказалось, что это не так.
[27:26.920 --> 27:28.920]  Он попытался это как-то исправить, вставить доллары в нужные места.
[27:28.920 --> 27:30.920]  У него ничего не получилось.
[27:30.920 --> 27:32.920]  Вывод, надо просто так не делать.
[27:32.920 --> 27:39.920]  Ну и, для верности, надо проверить, что, если я сделаю уже вот так, то у нас работает.
[27:41.920 --> 27:45.920]  Ну, что характерно, мы используем cases не по назначению.
[27:45.920 --> 27:48.920]  Он же нужен, чтобы рисовать какие-то разборы случаев, начиная с фигурной скобки.
[27:48.920 --> 27:50.920]  А тут у нас просто какое-то равенство.
[27:50.920 --> 27:55.920]  Ну, давайте представим, что тут было написано не cases, а какое-то другое окружение.
[27:55.920 --> 27:57.920]  Скажем, окружение aligned.
[27:57.920 --> 28:01.920]  Вот я говорю про окружение aligned, оно математику создает само по себе.
[28:01.920 --> 28:03.920]  Ну, открывает и закрывает.
[28:03.920 --> 28:11.920]  Окружение aligned, оно работает как align, но при этом оно является окружением, которое вкладывается в математику, не создавая само по себе.
[28:11.920 --> 28:19.920]  Ну то есть, если вам нужно сделать сложную систему вложных окружений, скажем, cases, чтобы разбирать случаи,
[28:19.920 --> 28:23.920]  и внутри него еще какие-то многостроечные выкладки, вот там уже нужно будет окружение aligned.
[28:23.920 --> 28:28.920]  Align не сработает, потому что он откроет математику снова, она уже открыта, и все упадет.
[28:28.920 --> 28:32.920]  Вот. В этом все разница между align и aligned.
[28:32.920 --> 28:39.920]  Ну, давайте, чтобы быть уверенным, я предемонстрирую, что вот я так пишу aligned.
[28:39.920 --> 28:45.920]  Это снова не вполне по назначению, потому что строка всего одна, а, как мы понимаем, такие окружения нужно писать много строк подряд.
[28:45.920 --> 28:48.920]  Но глобально это работает, будучи вложным.
[28:48.920 --> 28:53.920]  А если я сделаю не вложным, то оно, наоборот, работать перестанет.
[28:53.920 --> 28:57.920]  Да. Ну вот, видите, allowed only in math mode.
[28:57.920 --> 29:02.920]  Ошибка другая, но смысл такой же. Нужно было математику открыть, иначе ничего не сработает.
[29:02.920 --> 29:04.920]  Вот.
[29:07.920 --> 29:16.920]  Ну и здесь примерно такой же пример, что вот я открыл режим математики с помощью align, а дальше пошло cases.
[29:16.920 --> 29:20.920]  Ну, которым, кстати, можно записывать и просто систему уравнений.
[29:20.920 --> 29:23.920]  Ну просто в чем разница? Тут мы не использовали амперсанды.
[29:23.920 --> 29:28.920]  Те амперсанды, которые выравнивали правую часть текста по какой-то другой границе справа.
[29:28.920 --> 29:33.920]  То есть, в принципе, кейс можно использовать и так, просто по системе уравнений.
[29:33.920 --> 29:37.920]  Но можно и иначе. Можно делать, смотрите как.
[29:39.920 --> 29:42.920]  Это вы не с презентажки, но это просто стоит прогаментировать, что так бывает.
[29:42.920 --> 29:47.920]  Допустим, я хочу там не систему, а совокупность, да, то есть не фигурную скобку, а квадратную.
[29:47.920 --> 29:50.920]  То есть кейс уже не прокатит, уже не сработает.
[29:50.920 --> 29:56.920]  Я могу сделать так. Я могу сделать left, квадратная скобка.
[29:56.920 --> 29:58.920]  Ну давайте пока тоже write, квадратная скобка.
[29:58.920 --> 30:03.920]  Помните, что это такое, да? Это скобки, которые масштабируются по размеру содержимого.
[30:03.920 --> 30:11.920]  А внутри сделать просто набор строк с помощью команды align, той самой, которая как align, но внутри математики.
[30:11.920 --> 30:16.920]  Ну потому что она реально вложена в математику, очень логично именно здесь ее применить.
[30:16.920 --> 30:20.920]  Ну и написать такую же систему, там x равно 1, y равно 0.
[30:20.920 --> 30:24.920]  Вообще неважно. Ну и да, бэкслайдж, конечно, строки отделить.
[30:24.920 --> 30:26.920]  Ура!
[30:26.920 --> 30:32.920]  Команды left и right настолько умные, что они взяли квадратные скобки и завернули в них все содержимое,
[30:32.920 --> 30:35.920]  которым являлось аж несколько в строк подряд.
[30:35.920 --> 30:40.920]  Но для совокупности, как мы понимаем, хотелось бы иметь только левую квадратную скобку, а правую не иметь, да?
[30:40.920 --> 30:45.920]  И выход для этого такой. У команды write в качестве аргумента не скобка, а точка.
[30:45.920 --> 30:50.920]  Она отличает, что пустая скобка без ничего.
[30:50.920 --> 30:54.920]  Ну вот, сработало. Вроде симпатично выглядит.
[30:54.920 --> 30:56.920]  Это полезно, этим можно пользоваться.
[30:56.920 --> 31:01.920]  Да, и, разумеется, скобка может быть любой, если хотите, скажем, фигурной.
[31:01.920 --> 31:05.920]  Ну и тогда мы сделали буквально то же самое, что и кейсис, просто более сложным образом.
[31:05.920 --> 31:09.920]  Но будь у нас скобка, опять же, квадратная, или там, не дай бог, круглая, по какой-то причине,
[31:09.920 --> 31:14.920]  то это бы уже у нас не сработало. Ну, с помощью кейсис. А так сработает.
[31:15.920 --> 31:17.920]  Вот.
[31:21.920 --> 31:23.920]  С этой частью, я думаю, всё.
[31:23.920 --> 31:28.920]  Ну и вот как раз, раз мы заговорили про всякие там скобочки, естественно упомянусь, как рисуются матрицы.
[31:28.920 --> 31:31.920]  У вас уже, наверное, были матрицы, да?
[31:31.920 --> 31:33.920]  Ну какому-то видео уж точно.
[31:33.920 --> 31:39.920]  И вам постоянно может прикажетаться их рисовать, если вы пишете какие-то там алгебарические выкладки.
[31:39.920 --> 31:44.920]  И вот для матриц много разных окружений, которые работают примерно похоже на окружение для таблиц.
[31:44.920 --> 31:50.920]  Если помните, для таблиц, ну или там, как мы видели сегодня, скажем, для а-лайнов или для кейсов,
[31:50.920 --> 31:56.920]  есть разделители строк, бэкслэши, и разделители столцов, амперсанды.
[31:56.920 --> 32:03.920]  Матрица забивается так. Ну, просто всё содержимое вот по ячейкам, разделяя, где нужно, амперсандами,
[32:03.920 --> 32:08.920]  элементы одной строки, и бэкслэшами строки друг от друга.
[32:08.920 --> 32:12.920]  И заворачивается какое-то окружение. И вот окружение для матриц есть несколько.
[32:12.920 --> 32:18.920]  Есть p-matrix, который рисует матрицу, у которой будут круглые скобки.
[32:18.920 --> 32:23.920]  Я не знаю, от какого слова p, возможно, от слова parenthesis, ну вот скобки.
[32:23.920 --> 32:27.920]  Есть v-matrix, который рисует вертикальные черты у матрицы.
[32:27.920 --> 32:34.920]  Что? Нет, v-matrix. А, для чего это может быть нужно?
[32:34.920 --> 32:40.920]  Я вообще видел носации, в которых просто матрицы рисуются как штучки в этих вертикальных чертах.
[32:40.920 --> 32:45.920]  Ну да, для определителя в частности это полезно так рисовать.
[32:45.920 --> 32:48.920]  Кажется, что когда я писал какую-то алгебру, я тоже рисовал определители.
[32:48.920 --> 32:51.920]  Ну, терминант, как ты говоришь, то есть через v-matrix.
[32:51.920 --> 32:54.920]  Ну давай скопирую и посмотрю, что это сработает.
[32:57.920 --> 33:02.920]  Но да, мы тестируем сейчас другое окружение. Мы тестируем окружение не p-matrix, а v-matrix.
[33:02.920 --> 33:04.920]  Поэтому придётся поменять.
[33:04.920 --> 33:11.920]  Да, действительно, вертикальные черты.
[33:11.920 --> 33:18.920]  Может возникнуть вопрос, а вот если хочется рисовать две вертикальные черты или там ещё что-то,
[33:18.920 --> 33:20.920]  вот я сейчас не помню, как это делается.
[33:20.920 --> 33:25.920]  Есть ещё более хитрое окружение array, которое делает примерно то же, что и line,
[33:25.920 --> 33:30.920]  но оно ещё и настраивается по-разному, типа как отделять друг от друга разные столбцы,
[33:30.920 --> 33:34.920]  как там, во что его заворачивать, какие там поставить пробелы.
[33:34.920 --> 33:36.920]  Это довольно сложно, я в предстоящий раз расскажу.
[33:36.920 --> 33:42.920]  А сейчас давайте предположим, нам захотелось нарисовать двойные вертикальные черты.
[33:44.920 --> 33:48.920]  Возможно, это сработает. Сейчас сходу не знаю, будет здорово.
[33:48.920 --> 33:54.920]  Но мой вариант такой, я предлагаю завернуть это в left, вертикальная черта, right, вертикальная черта.
[33:54.920 --> 33:56.920]  С ними это тоже должно работать.
[33:56.920 --> 34:00.920]  Опять помните left, right, которые просто берут скобочки, вертикальные черты тоже считаются скобочками.
[34:00.920 --> 34:02.920]  На них тоже спространяется, тоже будет работать.
[34:02.920 --> 34:04.920]  Давайте проверим.
[34:05.920 --> 34:07.920]  Left, вертикальная.
[34:14.920 --> 34:16.920]  Мне тоже так кажется, но давай проверим.
[34:16.920 --> 34:18.920]  А, смотри, конец одного размера.
[34:18.920 --> 34:21.920]  Получается, мы нашли ещё один способ, как это можно сделать.
[34:21.920 --> 34:25.920]  Другое дело, что они как-то друг от друга на большом расстоянии.
[34:25.920 --> 34:29.920]  То есть обычно, когда их две подряд, они как-то друг от друга поплотнее идут.
[34:29.920 --> 34:31.920]  Скажем, если я сделаю здесь какую-то таблицу.
[34:31.920 --> 34:33.920]  Ну буквально чуть-чуть.
[34:33.920 --> 34:35.920]  Ну сейчас сравним, прям сравним.
[34:35.920 --> 34:37.920]  Так, таблица это tabular, да?
[34:39.920 --> 34:41.920]  Много-много параметров.
[34:41.920 --> 34:43.920]  Не хочу указывать.
[34:49.920 --> 34:51.920]  Вот.
[34:51.920 --> 34:53.920]  А, tabbing.
[34:53.920 --> 34:55.920]  Tabular это немножко другое.
[34:55.920 --> 34:57.920]  Видимо стоит и про это тоже поговорить.
[34:57.920 --> 34:59.920]  В чем разница и все такое.
[34:59.920 --> 35:01.920]  Но сейчас я сам исходу не помню.
[35:01.920 --> 35:03.920]  Поэтому будет не очень просто.
[35:07.920 --> 35:09.920]  Слушайте, я забыл округление для таблиц.
[35:09.920 --> 35:11.920]  Как же так?
[35:11.920 --> 35:13.920]  Просто раз оно было прямо в слайдах.
[35:15.920 --> 35:17.920]  Нет, давайте я просто подсмотрю.
[35:17.920 --> 35:19.920]  У меня, собственно, презентации тут тоже все заготовленные это есть.
[35:21.920 --> 35:23.920]  Мне, конечно, тоже там быть стыдно,
[35:23.920 --> 35:25.920]  но тут довольно много разного кода
[35:25.920 --> 35:27.920]  и так бывает, что можно что-то забыть.
[35:27.920 --> 35:29.920]  Не, все-таки tabular. Что ж он-то не сработал?
[35:31.920 --> 35:33.920]  Слушай, мне кажется, это встроенные вещи с теха.
[35:33.920 --> 35:35.920]  Оно должно прямо из коробки работать.
[35:37.920 --> 35:39.920]  Возможно, дело было в вёдочке.
[35:39.920 --> 35:41.920]  У меня же, конечно, там была вёдочка.
[35:41.920 --> 35:43.920]  Ну, давайте проверим,
[35:43.920 --> 35:45.920]  что оно должно сработать.
[35:47.920 --> 35:49.920]  Фу.
[35:49.920 --> 35:51.920]  Вот, лали.
[35:53.920 --> 35:55.920]  Оно как будто бы... Да, вот.
[35:55.920 --> 35:57.920]  Видишь, тут сильно более плотно
[35:57.920 --> 35:59.920]  друг к другу идут вертикальные черты.
[35:59.920 --> 36:01.920]  То есть, наверное,
[36:01.920 --> 36:03.920]  я почти уверен, что с помощью окружения
[36:03.920 --> 36:05.920]  array можно сделать такие же плотные
[36:05.920 --> 36:07.920]  вертикальные черты и в этом случае.
[36:07.920 --> 36:09.920]  Но про это сегодня говорить точно не буду.
[36:09.920 --> 36:11.920]  Пока что мы придумали хоть какой-то
[36:11.920 --> 36:13.920]  способ, как это можно было бы нарисовать.
[36:13.920 --> 36:15.920]  Ну, еще, как всегда, наблюдение. Смотрите, тут
[36:15.920 --> 36:17.920]  у нас прямые латинские буквы, а тут косые.
[36:17.920 --> 36:19.920]  Ну, курсивные. Ну, почему? Потому что
[36:19.920 --> 36:21.920]  это текстовое окружение, это
[36:21.920 --> 36:23.920]  обычно текстовые буквы, а это буквы, как
[36:23.920 --> 36:25.920]  математические вы будете, переменные.
[36:25.920 --> 36:27.920]  Странно, а таблицы, вроде бы, казалось бы, что это должно
[36:27.920 --> 36:29.920]  что-то математическое быть?
[36:29.920 --> 36:31.920]  Ну, нет, таблицы, это любая статистика,
[36:31.920 --> 36:33.920]  что угодно, когда-то всё завершится в таблице,
[36:33.920 --> 36:35.920]  разумеется.
[36:35.920 --> 36:37.920]  Это нужно обычные тексты тоже.
[36:37.920 --> 36:39.920]  И, видимо, как раз тейбинг
[36:39.920 --> 36:41.920]  немножко более математику
[36:41.920 --> 36:43.920]  нужен, но я про это в следующий раз поговорю.
[36:43.920 --> 36:45.920]  Сейчас, опять же, сходу
[36:45.920 --> 36:47.920]  что-то не помню.
[36:47.920 --> 36:49.920]  Ну, хорошо, смотрится
[36:49.920 --> 36:51.920]  мы разобрались.
[36:51.920 --> 36:53.920]  И вот просто более
[36:53.920 --> 36:55.920]  сложный пример, как можно было бы
[36:55.920 --> 36:57.920]  делать матрицы.
[36:59.920 --> 37:01.920]  Сейчас всё прокомментируем, что-то написано.
[37:01.920 --> 37:03.920]  Первое наблюдение.
[37:03.920 --> 37:05.920]  Что я зря сделал? Тут
[37:05.920 --> 37:07.920]  окружение Ln со звездой, но здесь оно
[37:07.920 --> 37:09.920]  нужно только чтобы математику открыть и закрыть.
[37:09.920 --> 37:11.920]  То есть, с тем же успехом я мог бы сделать
[37:11.920 --> 37:13.920]  квадратные скобочки. То есть, не пугайтесь
[37:13.920 --> 37:15.920]  то, что я тут написал. Я это, наверное,
[37:15.920 --> 37:17.920]  когда слайды буду выкладывать и справлю,
[37:17.920 --> 37:19.920]  просто чтобы было более читаемо, тут
[37:19.920 --> 37:21.920]  эффекта никакого не имеет.
[37:21.920 --> 37:23.920]  Главное, что нас интересует, собственно,
[37:23.920 --> 37:25.920]  вот эта вот матрица. Ну, как всегда,
[37:25.920 --> 37:27.920]  окружение Pmatics, мы его
[37:27.920 --> 37:29.920]  открыли-закрыли, и внутри синдокса
[37:29.920 --> 37:31.920]  снова такой же. У нас есть
[37:31.920 --> 37:33.920]  некоторое количество строк, некоторое
[37:33.920 --> 37:35.920]  количество столцов. Содержимое
[37:35.920 --> 37:37.920]  одной строки, но раза столцов,
[37:37.920 --> 37:39.920]  отделяется апперсандами.
[37:39.920 --> 37:41.920]  Строки друг от друга отделяются
[37:41.920 --> 37:43.920]  вдалим бэкслэшами. И если мы
[37:43.920 --> 37:45.920]  грамотно это выровняем,
[37:45.920 --> 37:47.920]  вернее, тут даже неважно,
[37:47.920 --> 37:49.920]  что они находятся на одном и том же
[37:49.920 --> 37:51.920]  вертикальной прямой. Если бы я про белых
[37:51.920 --> 37:53.920]  поставил больше или меньше, ничего бы не изменилось,
[37:53.920 --> 37:55.920]  он выровняется сам, разумеется. Но так просто
[37:55.920 --> 37:57.920]  более читаемо получается, что
[37:57.920 --> 37:59.920]  наглядно. У тебя и тут оно в таком
[37:59.920 --> 38:01.920]  виде, и тут в таком виде.
[38:01.920 --> 38:03.920]  Но вот что стоит еще сказать.
[38:03.920 --> 38:05.920]  Во-первых,
[38:05.920 --> 38:07.920]  во-первых обман. Тут у меня, видите,
[38:07.920 --> 38:09.920]  индексы с запятыми должны быть, а тут не без
[38:09.920 --> 38:11.920]  их.
[38:11.920 --> 38:13.920]  То есть, на самом деле, тут их тоже быть не должно.
[38:13.920 --> 38:15.920]  То, что отрисовалось на запятых, конечно,
[38:15.920 --> 38:17.920]  не имеет. А во-вторых, тут разные виды точечек.
[38:17.920 --> 38:19.920]  Много-много точек, видите?
[38:19.920 --> 38:21.920]  Есть C dot,
[38:21.920 --> 38:23.920]  что это такое? Это точки по центру
[38:23.920 --> 38:25.920]  строки. Ну, C, слово «центр».
[38:25.920 --> 38:27.920]  Есть V dot, это вертикальные
[38:27.920 --> 38:29.920]  точки. Есть D dot,
[38:29.920 --> 38:31.920]  диагональные точки.
[38:31.920 --> 38:33.920]  Тоже все максимально прозрачно.
[38:33.920 --> 38:35.920]  А вот у меня вопрос в связи с точками.
[38:35.920 --> 38:37.920]  Я искал, какие вообще бывают
[38:37.920 --> 38:39.920]  виды точек, и мне нужно было знак кратности поставить.
[38:39.920 --> 38:41.920]  Вот я нашел вариант
[38:41.920 --> 38:43.920]  vertical dot. Это хороший
[38:43.920 --> 38:45.920]  вопрос. Знак кратности,
[38:45.920 --> 38:47.920]  к сожалению, в техе не получается
[38:47.920 --> 38:49.920]  делать метод его из коробки.
[38:49.920 --> 38:51.920]  Нужно делать свой.
[38:51.920 --> 38:53.920]  Мы будем обсуждать, как делать свои спецсимволы.
[38:53.920 --> 38:55.920]  Для этого есть инструментарий, который называется
[38:55.920 --> 38:57.920]  всякие скейлбоксы, ротейдбоксы.
[38:57.920 --> 38:59.920]  Я про это поговорю в следующий раз обязательно.
[38:59.920 --> 39:01.920]  Это прям важная штука.
[39:01.920 --> 39:03.920]  Наверное, ты нашел какой-нибудь ответ
[39:03.920 --> 39:05.920]  на stackoverflow, где есть хоть какой-то вариант
[39:05.920 --> 39:07.920]  как задать эту команду кратности,
[39:07.920 --> 39:09.920]  и его скопировал, и дальше им пользуешься.
[39:09.920 --> 39:11.920]  Нет, я на самом деле забил
[39:11.920 --> 39:13.920]  слова, которые я писал. А, ну или так.
[39:13.920 --> 39:15.920]  Это тоже третий выход.
[39:15.920 --> 39:17.920]  Можно делимость обозначать в другую
[39:17.920 --> 39:19.920]  сторону. Не то, что там...
[39:21.920 --> 39:23.920]  Сейчас.
[39:23.920 --> 39:25.920]  Не то, что там
[39:25.920 --> 39:27.920]  4 делится на 2.
[39:27.920 --> 39:29.920]  Пока что V dot, пока не будем
[39:29.920 --> 39:31.920]  создавать свой символ. А можно написать,
[39:31.920 --> 39:33.920]  что 2 делит 4.
[39:33.920 --> 39:35.920]  Нет.
[39:35.920 --> 39:37.920]  Для этого есть символ mid.
[39:37.920 --> 39:39.920]  Это не очень большая вертикальная палочка.
[39:39.920 --> 39:41.920]  Да, есть такая
[39:41.920 --> 39:43.920]  аннотация, что 2 делит 4 обозначается
[39:43.920 --> 39:45.920]  это вот так. Так тоже можно делать.
[39:45.920 --> 39:47.920]  Про то, как
[39:47.920 --> 39:49.920]  сделать знак кратности. Тут три точки маленьких.
[39:49.920 --> 39:51.920]  Поговорим. Это прям...
[39:51.920 --> 39:53.920]  Ты здорово напомнил. Это хорошая идея.
[39:53.920 --> 39:55.920]  Можно вообще написать 4 раз на 2x и x?
[39:55.920 --> 39:57.920]  Это конечно
[39:57.920 --> 39:59.920]  тоже можно, но мы как-то изобретаем слишком большой
[39:59.920 --> 40:01.920]  велосипед, как мне кажется.
[40:03.920 --> 40:05.920]  А Vmatrix
[40:05.920 --> 40:07.920]  это на что?
[40:07.920 --> 40:09.920]  В начале две палки?
[40:09.920 --> 40:11.920]  Vmatrix это одна палочка. Просто вертикальные
[40:11.920 --> 40:13.920]  ограничители матрицы. Ну, слово vertical.
[40:13.920 --> 40:15.920]  Есть еще какие-то.
[40:15.920 --> 40:17.920]  Есть, кажется,
[40:17.920 --> 40:19.920]  Bmatrix, которые в квадраты
[40:19.920 --> 40:21.920]  скобки заворачивают. Возможно, не B. Возможно,
[40:21.920 --> 40:23.920]  другая буква. Лучше погуглите.
[40:23.920 --> 40:25.920]  Это все очень просто гуглится. Просто типа
[40:25.920 --> 40:27.920]  matrix в слотях. Вбивайте
[40:27.920 --> 40:29.920]  и вам наверняка все окружение эти найдет.
[40:29.920 --> 40:31.920]  Ну, вот я парочку просто упомянул, что
[40:31.920 --> 40:33.920]  такое существует.
[40:33.920 --> 40:35.920]  Вот. На этом слайде, наверное,
[40:35.920 --> 40:37.920]  теперь все должно быть понятно. Вот есть разные точечки.
[40:37.920 --> 40:39.920]  И вот так можно большие матрицы
[40:39.920 --> 40:41.920]  рисовать. Ну, неогранично большие.
[40:41.920 --> 40:43.920]  Все элементы, которые лишние,
[40:43.920 --> 40:45.920]  пропускают точечками.
[40:45.920 --> 40:47.920]  Нужно направление.
[40:47.920 --> 40:49.920]  Вот. Наверное, вопросов
[40:49.920 --> 40:51.920]  на этой сайте больше быть не должно. Давайте двигаться дальше.
[40:51.920 --> 40:53.920]  Этот слайд
[40:53.920 --> 40:55.920]  не от меня. От моего коллеги
[40:55.920 --> 40:57.920]  Леша Ребликова. Он, наверное, будет в следующий раз
[40:57.920 --> 40:59.920]  что-то рассказывать про графику
[40:59.920 --> 41:01.920]  в техе. Но вот
[41:01.920 --> 41:03.920]  он пользуется пакетом nice-metrics,
[41:03.920 --> 41:05.920]  который позволяет
[41:05.920 --> 41:07.920]  рисовать матрицы как-то...
[41:09.920 --> 41:11.920]  Ну, так называется пакет.
[41:11.920 --> 41:13.920]  И так его разработали.
[41:13.920 --> 41:15.920]  Ну, короче, это как матрица, но с более гибкой
[41:15.920 --> 41:17.920]  настройкой. Скажем, можно сказать, чтобы
[41:17.920 --> 41:19.920]  отделили мне последний столбец
[41:19.920 --> 41:21.920]  вертикальной чертой. Помните, как
[41:21.920 --> 41:23.920]  в таблицах, когда было типа
[41:23.920 --> 41:25.920]  tabular, а потом у тебя есть вот эта вот настроечка.
[41:25.920 --> 41:27.920]  Как выравнивать каждый
[41:27.920 --> 41:29.920]  столбец по левой стороне, по правой, по центру
[41:29.920 --> 41:31.920]  или там еще как-то иначе.
[41:31.920 --> 41:33.920]  Как иначе, еще поговорим попозже.
[41:33.920 --> 41:35.920]  И вот для nice-metrics
[41:35.920 --> 41:37.920]  это тоже работает, можно
[41:37.920 --> 41:39.920]  пользоваться. Я этим
[41:39.920 --> 41:41.920]  не пользовался, не могу ничего порекомендовать
[41:41.920 --> 41:43.920]  отдельно, но вот есть
[41:43.920 --> 41:45.920]  мануал. У меня тут нет интернета.
[41:45.920 --> 41:47.920]  Прямо сейчас. Но
[41:47.920 --> 41:49.920]  ссылочка рабочая, я слайды выложу, сможете
[41:49.920 --> 41:51.920]  по ней пройти, почитать, если что, воспользоваться.
[41:51.920 --> 41:53.920]  Вот.
[41:53.920 --> 41:55.920]  Ну, это скорее такая рекламная интеграция,
[41:55.920 --> 41:57.920]  чем содержательный рассказ.
[41:57.920 --> 41:59.920]  Да, ссылки.
[41:59.920 --> 42:01.920]  Это было обещано. Ну и, кстати,
[42:01.920 --> 42:03.920]  тут вот прямо сейчас я использовал в Техе
[42:03.920 --> 42:05.920]  ссылку. Вот я про такое сейчас буду рассказывать.
[42:05.920 --> 42:07.920]  Как такие вещи делать,
[42:07.920 --> 42:09.920]  чтобы потом это было кликабельно и можно было переходить.
[42:09.920 --> 42:11.920]  Вот.
[42:11.920 --> 42:13.920]  Во-первых, можно ссылаться
[42:13.920 --> 42:15.920]  на штучки внутри документа.
[42:15.920 --> 42:17.920]  Вот.
[42:19.920 --> 42:21.920]  Ну, вот.
[42:21.920 --> 42:23.920]  Что на слайде написано? Да, это делается
[42:23.920 --> 42:25.920]  с помощью команды label. Сейчас я все поясню.
[42:25.920 --> 42:27.920]  Во-первых,
[42:27.920 --> 42:29.920]  ну, то, что здесь тег, не обращайте
[42:29.920 --> 42:31.920]  внимания. Ну, это просто осталось
[42:31.920 --> 42:33.920]  со слайда, который демонстрировал возможности
[42:33.920 --> 42:35.920]  команды тег.
[42:35.920 --> 42:37.920]  Как сделать так, чтобы у вас
[42:37.920 --> 42:39.920]  были какие-то метки в тексте,
[42:39.920 --> 42:41.920]  на которые потом можно было бы ссылаться.
[42:41.920 --> 42:43.920]  Вот.
[42:43.920 --> 42:45.920]  Типа, смотри такую-то страницу или смотри такую-то формулу.
[42:45.920 --> 42:47.920]  Для этого вы
[42:47.920 --> 42:49.920]  помечаете конкретные объекты.
[42:49.920 --> 42:51.920]  Например, объекты вида окружения,
[42:51.920 --> 42:53.920]  ну, какое-то математическое, будь-то там
[42:53.920 --> 42:55.920]  aline, будь-то gather, будь-то просто какая-то формула,
[42:55.920 --> 42:57.920]  equation,
[42:57.920 --> 42:59.920]  команды label.
[42:59.920 --> 43:01.920]  Она задает, ну, ее аргумент,
[43:01.920 --> 43:03.920]  это любой набор символов, он значит
[43:03.920 --> 43:05.920]  следующая. С этого момента
[43:05.920 --> 43:07.920]  у вас есть специальный маркер, который
[43:07.920 --> 43:09.920]  указывает, ну, маркер с таким
[43:09.920 --> 43:11.920]  названием, который вы указали здесь,
[43:11.920 --> 43:13.920]  который указывает на нужное место в тексте.
[43:17.920 --> 43:19.920]  Ну, примерно так.
[43:19.920 --> 43:21.920]  Наверное, да, можно так сказать.
[43:21.920 --> 43:23.920]  Вот. То, что здесь написано,
[43:23.920 --> 43:25.920]  ну, есть просто некие
[43:25.920 --> 43:27.920]  код-стайлы, которым можно придерживаться.
[43:27.920 --> 43:29.920]  Некоторые код-стайлы рекомендуют писать, типа, что вот
[43:29.920 --> 43:31.920]  если у вас уравнение, то сначала пишите EQ
[43:31.920 --> 43:33.920]  от слова equation, а потом там двоеточие,
[43:33.920 --> 43:35.920]  а потом уже вашу номерацию.
[43:35.920 --> 43:37.920]  Вообще не важно, можете как угодно писать.
[43:37.920 --> 43:39.920]  Это просто, ну, так, артефакт
[43:39.920 --> 43:41.920]  конкретного примера. Ну, вот, допустим,
[43:41.920 --> 43:43.920]  я захочу сделать equation,
[43:43.920 --> 43:45.920]  в котором
[43:45.920 --> 43:47.920]  будет, ну, я даже не знаю, что написать.
[43:47.920 --> 43:49.920]  Давайте один больше нуля. Снова
[43:49.920 --> 43:51.920]  разрешательное утверждение.
[43:51.920 --> 43:53.920]  И вот тут я помечаю
[43:53.920 --> 43:55.920]  label, ну, какой-то текст.
[43:55.920 --> 43:57.920]  Ну, допустим,
[43:57.920 --> 43:59.920]  fact
[43:59.920 --> 44:01.920]  1, 0. Ну, почему бы
[44:01.920 --> 44:03.920]  нет?
[44:03.920 --> 44:05.920]  Сейчас это наше жизнь никак не отразится.
[44:05.920 --> 44:07.920]  Ну, потому что, что мы сделали?
[44:07.920 --> 44:09.920]  Мы поместили какой-то, пока никак
[44:09.920 --> 44:11.920]  не отрисованный указатель
[44:11.920 --> 44:13.920]  куда-то на странице. Нам нужно учиться
[44:13.920 --> 44:15.920]  еще на него ссылаться. Вот.
[44:15.920 --> 44:17.920]  Сейчас мы научимся.
[44:17.920 --> 44:19.920]  Делается это
[44:19.920 --> 44:21.920]  с помощью команды ecref.
[44:21.920 --> 44:23.920]  Давайте посмотрим.
[44:23.920 --> 44:25.920]  Что делает команда ecref?
[44:25.920 --> 44:27.920]  Типа, смотри.
[44:33.920 --> 44:35.920]  Ну, и далее
[44:35.920 --> 44:37.920]  label, тот самый, который мы указали.
[44:37.920 --> 44:39.920]  Видите, он даже подсказывает, что можно написать,
[44:39.920 --> 44:41.920]  потому что он, ну, сам хранит
[44:41.920 --> 44:43.920]  все лейблы, которые я указал.
[44:43.920 --> 44:45.920]  Вот. По крайней мере,
[44:45.920 --> 44:47.920]  редактор VS-кода так устроен.
[44:47.920 --> 44:49.920]  В общем, он понимает,
[44:49.920 --> 44:51.920]  что я хочу именно это, и сейчас
[44:51.920 --> 44:53.920]  оно все получится. Почему формула 1?
[44:53.920 --> 44:55.920]  Ну, потому что я задал ей номерацию номером 1.
[44:55.920 --> 44:57.920]  Вот. И, как
[44:57.920 --> 44:59.920]  видим, ecref что сделал? Он
[44:59.920 --> 45:01.920]  развернул, ну, он прошел
[45:01.920 --> 45:03.920]  по этому указателю, смотрел, ага, он указывает на
[45:03.920 --> 45:05.920]  формулу, которая номер 1. И нарисовал
[45:05.920 --> 45:07.920]  нам выражение вида 1 в скобочках.
[45:07.920 --> 45:09.920]  Если бы у меня был какой-то другой текст здесь,
[45:09.920 --> 45:11.920]  вспоминаем команду
[45:11.920 --> 45:13.920]  скобочек, который залеет тегать любым другим символом.
[45:13.920 --> 45:15.920]  Скажем, давайте
[45:15.920 --> 45:17.920]  тегаем это. Так, господи,
[45:17.920 --> 45:19.920]  не важно, 666 или 66.
[45:19.920 --> 45:21.920]  Не отпечатал.
[45:21.920 --> 45:23.920]  Оно тоже сработает. Во-первых,
[45:23.920 --> 45:25.920]  номерация изменилась на 66.
[45:25.920 --> 45:27.920]  Во-вторых, у нас теперь, смотри, формула 66.
[45:27.920 --> 45:29.920]  Почему это удобно? Почему не писать
[45:29.920 --> 45:31.920]  просто, смотри, формула 66?
[45:31.920 --> 45:33.920]  Ну, скажем,
[45:33.920 --> 45:35.920]  я мог просто написать, типа, вот,
[45:35.920 --> 45:37.920]  буквально.
[45:37.920 --> 45:39.920]  Давайте, математики.
[45:39.920 --> 45:41.920]  Скобочек 66.
[45:41.920 --> 45:43.920]  Чем это плохо?
[45:45.920 --> 45:47.920]  Ну, например, у нас
[45:47.920 --> 45:49.920]  еще одно уравнение выше добавилось,
[45:49.920 --> 45:51.920]  номерация съехала. У нас
[45:51.920 --> 45:53.920]  это стало номером 67,
[45:53.920 --> 45:55.920]  а тут-то не поменялось, потому что мы это указывали
[45:55.920 --> 45:57.920]  руками. А если бы мы указывали
[45:57.920 --> 45:59.920]  по-умному, то оно бы тоже на нужный момент
[45:59.920 --> 46:01.920]  поменялось, и все было бы согласовано.
[46:01.920 --> 46:03.920]  То есть, многие вещи в техе
[46:03.920 --> 46:05.920]  может показаться, что это,
[46:05.920 --> 46:07.920]  ну, типа, какое-то излишество, и можно бы это
[46:07.920 --> 46:09.920]  сделать, но они нужны для того, чтобы
[46:09.920 --> 46:11.920]  согласованность охранялась для всего документа,
[46:11.920 --> 46:13.920]  и вы это, ну, типа, вам не пришлось
[46:13.920 --> 46:15.920]  думать об этом самим.
[46:15.920 --> 46:17.920]  Это, ну, когда вы пишете большие
[46:17.920 --> 46:19.920]  тексты, какие-то там статьи, или там,
[46:19.920 --> 46:21.920]  не дай бог, книги, у вас уже
[46:21.920 --> 46:23.920]  возникает очень много объектов,
[46:23.920 --> 46:25.920]  там, которые друг на друга
[46:25.920 --> 46:27.920]  ссылаются по каким-то номерам, и за этим
[46:27.920 --> 46:29.920]  следить руками просто было бы невозможно.
[46:29.920 --> 46:31.920]  А вот с помощью этого
[46:31.920 --> 46:33.920]  это делается просто на автомате и вообще не требует
[46:33.920 --> 46:35.920]  ваших усилий. Вот такая мораль.
[46:35.920 --> 46:37.920]  Сейчас еще раз, то есть у нас получается
[46:37.920 --> 46:39.920]  два способа братья, либо
[46:39.920 --> 46:41.920]  писать qrf и вот ключ,
[46:41.920 --> 46:43.920]  либо
[46:43.920 --> 46:45.920]  мы пишем, получается,
[46:45.920 --> 46:47.920]  а, вызов по тегу, либо.
[46:47.920 --> 46:49.920]  А, не, подожди, это же точности
[46:49.920 --> 46:51.920]  то же самое. Ну да.
[46:51.920 --> 46:53.920]  Ну, я и говорю, это две опции? Нет, это, нет.
[46:53.920 --> 46:55.920]  Сейчас ты имеешь в виду вызовом по тегу,
[46:55.920 --> 46:57.920]  ты имеешь в виду то, что ты сейчас написал? Да.
[46:57.920 --> 46:59.920]  Нет, сейчас я просто написал руками, скобка,
[46:59.920 --> 47:01.920]  66, скобка. А, точно. То есть, это
[47:01.920 --> 47:03.920]  вообще ничего другого не значит, он никуда
[47:03.920 --> 47:05.920]  не ссылается, это просто текст.
[47:05.920 --> 47:07.920]  И как раз, если бы я тут сделал другой тег,
[47:07.920 --> 47:09.920]  скажем, ну, наконец-то, сейчас 6 ты писал бы,
[47:11.920 --> 47:13.920]  то тут бы оно поменялось, а тут уже нет
[47:13.920 --> 47:15.920]  и оно уже, ну, не работает.
[47:15.920 --> 47:17.920]  То есть, формулы такой уже нет в документе.
[47:17.920 --> 47:19.920]  Окружение equation нужно
[47:19.920 --> 47:21.920]  для чего-то или нет?
[47:21.920 --> 47:23.920]  Equation нужно было бы,
[47:23.920 --> 47:25.920]  чтобы нам нумеровать формулы.
[47:25.920 --> 47:27.920]  А, понял. Поскольку мы уже написали
[47:27.920 --> 47:29.920]  здесь тег и задали номер сами, это, в принципе,
[47:29.920 --> 47:31.920]  уже излишество. Могли бы уже без equation
[47:31.920 --> 47:33.920]  здесь. Ну, просто
[47:33.920 --> 47:35.920]  так сложилось, что вот конкретно
[47:35.920 --> 47:37.920]  в этой ситуации мы написали equation. Кстати,
[47:37.920 --> 47:39.920]  я не уверен, можно, ребята, label для просто
[47:39.920 --> 47:41.920]  формул, которые даже не equation,
[47:41.920 --> 47:43.920]  а, ну, скажем,
[47:43.920 --> 47:45.920]  просто вот в таком окружении, в обычном самом,
[47:45.920 --> 47:47.920]  которые квадратные скобочки.
[47:47.920 --> 47:49.920]  Давайте проверим. Интересная задача.
[47:49.920 --> 47:51.920]  Да, смотрите, тоже будет работать.
[47:51.920 --> 47:53.920]  Значит, если я здесь сделаю снова ecref
[47:55.920 --> 47:57.920]  на
[47:57.920 --> 47:59.920]  1,0.
[47:59.920 --> 48:01.920]  Да, смотрите.
[48:01.920 --> 48:03.920]  Вообще сейчас
[48:03.920 --> 48:05.920]  что-то случилось.
[48:05.920 --> 48:07.920]  Нет, вроде бы
[48:07.920 --> 48:09.920]  скомплировалась, вроде бы. Это уже актуальная штучка.
[48:09.920 --> 48:11.920]  Давайте, чтобы убедиться, что это
[48:11.920 --> 48:13.920]  не старый документ, я что-нибудь еще припишу.
[48:13.920 --> 48:15.920]  Ну, на всякий случай еще
[48:15.920 --> 48:17.920]  да, это актуальный документ, он работает,
[48:17.920 --> 48:19.920]  все хорошо. Смотрите, что
[48:19.920 --> 48:21.920]  я сделал командой tag. Я
[48:21.920 --> 48:23.920]  текущую строку в математике,
[48:23.920 --> 48:25.920]  даже несмотря на то, что это не какое-то там
[48:25.920 --> 48:27.920]  хитрое окружение, а просто обычные квадратные скобки,
[48:27.920 --> 48:29.920]  я текущую строку пометил тегом.
[48:29.920 --> 48:31.920]  И с этого момента у нас есть
[48:31.920 --> 48:33.920]  указатель на эту конкретную строку.
[48:33.920 --> 48:35.920]  И на нее может ссылаться команда ecref.
[48:35.920 --> 48:37.920]  То есть команда label никак не привязана к конкретному
[48:37.920 --> 48:39.920]  окружению. Ее можно применять вообще в любой математике.
[48:39.920 --> 48:41.920]  Ура.
[48:41.920 --> 48:43.920]  А можно ли
[48:43.920 --> 48:45.920]  делать активную ссылку на фрагмент тексти,
[48:45.920 --> 48:47.920]  чтобы он прям тебе перегибел?
[48:47.920 --> 48:49.920]  Чтобы она была крикабельна? Да, это нужен пакет
[48:49.920 --> 48:51.920]  каштахref. Сейчас мы примерно поговорим.
[48:51.920 --> 48:53.920]  Это будет.
[48:53.920 --> 48:55.920]  Ну что, еще тут стоит посмотреть,
[48:55.920 --> 48:57.920]  что есть еще pageref.
[48:57.920 --> 48:59.920]  Он указывает...
[48:59.920 --> 49:01.920]  Ну, кажется, понятно. Он указывает на
[49:01.920 --> 49:03.920]  номер страницы, на которой расположен какой-то объект.
[49:05.920 --> 49:07.920]  Ну, тут не формула.
[49:07.920 --> 49:09.920]  Видимо, смотреть страницу, один был
[49:09.920 --> 49:11.920]  правильно написать.
[49:11.920 --> 49:13.920]  Он просто вместо
[49:13.920 --> 49:15.920]  вот этого выражения, pageref
[49:15.920 --> 49:17.920]  и названия подставит номер
[49:17.920 --> 49:19.920]  страницы, на которой находится объект,
[49:19.920 --> 49:21.920]  под таким же именем, который мы указали в качестве
[49:21.920 --> 49:23.920]  переменной. В данном случае как бы неинтересно.
[49:23.920 --> 49:25.920]  Первая страница, поэтому номер один и подставился.
[49:25.920 --> 49:27.920]  Но повторюсь, если у вас большие документы
[49:27.920 --> 49:29.920]  с кучей страницы, это очень полезно,
[49:29.920 --> 49:31.920]  потому что вы не следите никогда в жизни
[49:31.920 --> 49:33.920]  за этим всем самостоятельно, чтобы все указывал
[49:33.920 --> 49:35.920]  на правильные страницы.
[49:35.920 --> 49:37.920]  И это тоже можно делать крикабельным.
[49:37.920 --> 49:39.920]  И здесь тоже нужен пакет, которым мы сейчас
[49:39.920 --> 49:41.920]  попозже поговорим.
[49:41.920 --> 49:43.920]  Вот, ну на этой стадии, наверное, все очень понятно.
[49:43.920 --> 49:45.920]  Да?
[49:49.920 --> 49:51.920]  Вот, pageref.
[49:51.920 --> 49:53.920]  Вместо этого выражения
[49:53.920 --> 49:55.920]  в тексте подставится номер страницы,
[49:55.920 --> 49:57.920]  на которой находится данный объект.
[49:57.920 --> 49:59.920]  Объект, который
[49:59.920 --> 50:01.920]  подписан лейблом Factor 10.
[50:01.920 --> 50:03.920]  Вот, который вот здесь вот.
[50:07.920 --> 50:09.920]  Да, ну еще есть
[50:09.920 --> 50:11.920]  figref, чтобы указываться
[50:11.920 --> 50:13.920]  обращаться конкретно
[50:13.920 --> 50:15.920]  к фигурам. Мы еще не говорили
[50:15.920 --> 50:17.920]  про фигуры, поэтому эта информация вам пока
[50:17.920 --> 50:19.920]  не очень пригодится.
[50:19.920 --> 50:21.920]  Ну и вообще можно было бы
[50:21.920 --> 50:23.920]  просто делать ref.
[50:23.920 --> 50:25.920]  ref и ecref эквивалентны в том, что
[50:25.920 --> 50:27.920]  ecref работает просто конкретно
[50:27.920 --> 50:29.920]  для формул. Ну просто номировать можно
[50:29.920 --> 50:31.920]  разные вещи. Можно номировать страницы, можно
[50:31.920 --> 50:33.920]  номировать там картинки, можно номировать
[50:33.920 --> 50:35.920]  секции. И вот
[50:35.920 --> 50:37.920]  есть для этого разные refs.
[50:37.920 --> 50:39.920]  И просто ref работает для всего.
[50:39.920 --> 50:41.920]  А ecref он проверяет, что он отсылается
[50:41.920 --> 50:43.920]  именно на формулу. Как он это понимает?
[50:43.920 --> 50:45.920]  Ну потому что мы лейбл указали именно для строчки
[50:45.920 --> 50:47.920]  математики, ну то есть для формулы.
[50:47.920 --> 50:49.920]  Поэтому оно сработало. Но сработало бы
[50:49.920 --> 50:51.920]  и просто ref, если бы я сделал
[50:51.920 --> 50:53.920]  просто ref.
[50:53.920 --> 50:55.920]  Ну вот, да, снова c6.
[50:55.920 --> 50:57.920]  Но что характерно, оно уже
[50:57.920 --> 50:59.920]  не нарисовало нам эти круглые скобочки.
[50:59.920 --> 51:01.920]  Смотрите, если мы сделаем
[51:01.920 --> 51:03.920]  ecref,
[51:05.920 --> 51:07.920]  оно нарисует там круглые скобочки, потому что
[51:07.920 --> 51:09.920]  именно в таком формате отсылается именно
[51:09.920 --> 51:11.920]  на уравнение, ну на equation.
[51:11.920 --> 51:13.920]  То есть в него просто это зашито.
[51:13.920 --> 51:15.920]  А в ref ничего не зашито, он
[51:15.920 --> 51:17.920]  оставляется на что угодно, что ему скажут.
[51:17.920 --> 51:19.920]  И вот ему сошлись на объект, который называется
[51:19.920 --> 51:21.920]  fx10. Он идет, ага, объект fx10.
[51:21.920 --> 51:23.920]  У него tag666.
[51:23.920 --> 51:25.920]  Ну его и подставлю, значит.
[51:25.920 --> 51:27.920]  Без скобочек, без всего. Вот.
[51:27.920 --> 51:29.920]  Ну то есть просто более общая команда, которая может быть
[51:29.920 --> 51:31.920]  для чего-то еще нужна.
[51:33.920 --> 51:35.920]  Так, есть ли вопросы по этой части?
[51:35.920 --> 51:37.920]  Нет. Огонь.
[51:41.920 --> 51:43.920]  Ну это не совсем про то, о чем мы говорили.
[51:43.920 --> 51:45.920]  Это внешние ссылки.
[51:45.920 --> 51:47.920]  Это как ссылаться на какие-то url в интернете.
[51:47.920 --> 51:49.920]  Есть просто команда href,
[51:49.920 --> 51:51.920]  ну href,
[51:51.920 --> 51:53.920]  типа гиперссылка hyperref,
[51:53.920 --> 51:55.920]  я так понимаю.
[51:55.920 --> 51:57.920]  Ну синтез очень простой.
[51:57.920 --> 51:59.920]  Команда href, у нее два аргумента.
[51:59.920 --> 52:01.920]  Аргумент, какой url,
[52:01.920 --> 52:03.920]  на какой url ссылаться в интернете.
[52:03.920 --> 52:05.920]  А второй аргумент, какой текст вместо него поставить.
[52:05.920 --> 52:07.920]  То есть на самом деле вот здесь,
[52:07.920 --> 52:09.920]  вот эта вот штучка сгенерирована такой командой.
[52:09.920 --> 52:11.920]  href, ссылка
[52:11.920 --> 52:13.920]  Google и подпись google.com
[52:15.920 --> 52:17.920]  Ну, я конечно могу кликнуть,
[52:17.920 --> 52:19.920]  но у меня ничего не сработает,
[52:19.920 --> 52:21.920]  просто потому что у меня нет интернета.
[52:25.920 --> 52:27.920]  Вот.
[52:27.920 --> 52:29.920]  Сейчас, слушайте, а я вот,
[52:29.920 --> 52:31.920]  блин, получается я в этот рассказ не включил,
[52:31.920 --> 52:33.920]  как делать скрикабельные ссылки.
[52:33.920 --> 52:35.920]  Знаешь, да,
[52:35.920 --> 52:37.920]  ну типа, чтобы ссылки были не просто,
[52:37.920 --> 52:39.920]  как мы и сделали, как мы научились делать
[52:39.920 --> 52:41.920]  на какой-то номер.
[52:41.920 --> 52:43.920]  А чтобы на нее можно было кликнуть,
[52:43.920 --> 52:45.920]  он нас сослал на нужную страницу.
[52:45.920 --> 52:47.920]  Да, это можно.
[52:47.920 --> 52:49.920]  Для этого есть конкретный пакет.
[52:49.920 --> 52:51.920]  Я был уверен, что у меня слайд про него в этой презентации.
[52:51.920 --> 52:53.920]  Но он, видимо, в следующей.
[52:53.920 --> 52:55.920]  И даже если это не так, я его сделаю в специальной презентации,
[52:55.920 --> 52:57.920]  про него расскажу.
[52:57.920 --> 52:59.920]  Это можно делать.
[52:59.920 --> 53:01.920]  Но, кстати, мне вот так, мне очень нравится.
[53:01.920 --> 53:03.920]  Я прям везде руками говорю,
[53:03.920 --> 53:05.920]  даже если подключен этот пакет,
[53:05.920 --> 53:07.920]  я отключаю всякие присылки.
[53:07.920 --> 53:09.920]  Это хорошо, что крикабельнее,
[53:09.920 --> 53:11.920]  когда можно случайно попасть.
[53:11.920 --> 53:13.920]  Но так можно делать,
[53:13.920 --> 53:15.920]  мы при этом поговорим, как это делается.
[53:15.920 --> 53:17.920]  На самом деле, это совсем несложно.
[53:17.920 --> 53:19.920]  Вам нужно просто подключить к специальный пакет,
[53:19.920 --> 53:21.920]  который сейчас подзабыл, как называется,
[53:21.920 --> 53:23.920]  и там нужно настроечки указать.
[53:23.920 --> 53:25.920]  Про настроечки тоже просто поговорим.
[53:25.920 --> 53:27.920]  И это уже будет работать в таком же виде.
[53:27.920 --> 53:29.920]  То есть, вот этот текущий код,
[53:29.920 --> 53:31.920]  он сделает не то, что сейчас,
[53:31.920 --> 53:33.920]  а сделает тут крикабельную ссылку.
[53:33.920 --> 53:35.920]  То есть, даже не придется нового писать,
[53:35.920 --> 53:37.920]  но поговорим.
[53:37.920 --> 53:39.920]  Да, ну и конкретно вот что сейчас заготовлено.
[53:39.920 --> 53:41.920]  Есть такая штука сноски.
[53:41.920 --> 53:43.920]  Ну, footnotes.
[53:43.920 --> 53:45.920]  Ну, оно буквально...
[53:45.920 --> 53:47.920]  Во-первых, что делает footnote?
[53:47.920 --> 53:49.920]  Текст,
[53:49.920 --> 53:51.920]  который является ее аргументом,
[53:51.920 --> 53:53.920]  помещает в качестве сноски.
[53:53.920 --> 53:55.920]  То есть, убирает его
[53:55.920 --> 53:57.920]  с главной страницы
[53:57.920 --> 53:59.920]  и перемещает его вниз.
[53:59.920 --> 54:01.920]  Ну, под нужным номером.
[54:01.920 --> 54:03.920]  У них тоже есть
[54:03.920 --> 54:05.920]  своя нумерация.
[54:05.920 --> 54:07.920]  Она задается тоже лейблами.
[54:07.920 --> 54:09.920]  Да, у сносок есть своя нумерация.
[54:09.920 --> 54:11.920]  То есть, если бы была еще
[54:11.920 --> 54:13.920]  еще одна footnote, было бы уже
[54:13.920 --> 54:15.920]  под номером два и так далее.
[54:15.920 --> 54:17.920]  Ну, как в обычных технических наверняка такое видели.
[54:17.920 --> 54:19.920]  И если мы хотим на них ссылаться,
[54:19.920 --> 54:21.920]  мы тоже можем помещать конкретный footnote
[54:21.920 --> 54:23.920]  command-label, чтобы потом
[54:23.920 --> 54:25.920]  на нее ссылаться с помощью ref.
[54:25.920 --> 54:27.920]  Ну, мы уже видели command-ref, command-label.
[54:27.920 --> 54:29.920]  Они работают не только для уравнений,
[54:29.920 --> 54:31.920]  значит, они работают еще и для сносок.
[54:31.920 --> 54:33.920]  Для чего еще? Ну, сейчас не очень важно.
[54:35.920 --> 54:37.920]  Да, по умолчанию
[54:37.920 --> 54:39.920]  сноски всегда отделяются
[54:39.920 --> 54:41.920]  вертикальной чертой от всего остального текста.
[54:41.920 --> 54:43.920]  Наверняка это можно регулировать,
[54:43.920 --> 54:45.920]  но, если честно, я никогда не делал всех документов сносок,
[54:45.920 --> 54:47.920]  поэтому я не знаю, как это делается.
[54:47.920 --> 54:49.920]  Я думаю, это можно загуглить.
[54:51.920 --> 54:53.920]  Наконец, счетчики.
[54:53.920 --> 54:55.920]  Да, на всякий случай.
[54:55.920 --> 54:57.920]  Это же было понятно, вопросов не будет.
[54:57.920 --> 54:59.920]  Я могу двигаться дальше, да? Хорошо.
[54:59.920 --> 55:01.920]  Да, счетчики.
[55:01.920 --> 55:03.920]  Это вот инструментарии
[55:03.920 --> 55:05.920]  и теха, которые позволяют делать какие-то вычисления.
[55:05.920 --> 55:07.920]  Счетчик – это буквально числовая переменная.
[55:07.920 --> 55:09.920]  Ой, я потерял заглавную букву, я потом это исправлю.
[55:09.920 --> 55:11.920]  Чтобы задать счетчик,
[55:11.920 --> 55:13.920]  нужно использовать команду newcounter.
[55:13.920 --> 55:15.920]  Да, поскольку теха – это не какой-то язык программирования,
[55:15.920 --> 55:17.920]  это все-таки язык разметки,
[55:17.920 --> 55:19.920]  там сложнее работать с переменными.
[55:19.920 --> 55:21.920]  Тут нет типа арифметики.
[55:21.920 --> 55:23.920]  То, что вот a плюс b
[55:23.920 --> 55:25.920]  равно чему-то там
[55:25.920 --> 55:27.920]  задать какое-то значение.
[55:27.920 --> 55:29.920]  Командами теха,
[55:29.920 --> 55:31.920]  ну как бы инициализации переменной,
[55:31.920 --> 55:33.920]  это команда newcounter.
[55:33.920 --> 55:35.920]  Она задает счетчик, которого помолчали на любое значение.
[55:39.920 --> 55:41.920]  Есть более хитрая команда,
[55:41.920 --> 55:43.920]  которая...
[55:43.920 --> 55:45.920]  Ой.
[55:45.920 --> 55:47.920]  Ну вот, мне ни разу не прикаждалось,
[55:47.920 --> 55:49.920]  но вот есть такой синдексис,
[55:49.920 --> 55:51.920]  можно указать еще в побочный аргумент
[55:51.920 --> 55:53.920]  после основного в квадратных скобках.
[55:53.920 --> 55:55.920]  Это как бы эти два счетчика
[55:55.920 --> 55:57.920]  завяжут друг на друга в следующем смысле.
[55:57.920 --> 55:59.920]  Мы можем как-то значение счетчиков
[55:59.920 --> 56:01.920]  модифицировать, инкриментировать,
[56:01.920 --> 56:03.920]  но как только инкриментируется счетчик первый,
[56:03.920 --> 56:05.920]  второй будет обнуляться
[56:05.920 --> 56:07.920]  и как бы начинаться заново.
[56:07.920 --> 56:09.920]  Ну, где мы такие эффекты видели?
[56:09.920 --> 56:11.920]  Секция и подсекция.
[56:11.920 --> 56:13.920]  Секция номируется там 1, 2, 3,
[56:13.920 --> 56:15.920]  но в рамках секции,
[56:15.920 --> 56:17.920]  под секции номируется
[56:17.920 --> 56:19.920]  каждый раз заново с единицы.
[56:19.920 --> 56:21.920]  Как будто мы делаем такую же связь.
[56:21.920 --> 56:23.920]  Мы задаем связь как будто бы
[56:23.920 --> 56:25.920]  между секцией и под секцией,
[56:25.920 --> 56:27.920]  только своими новыми переменами,
[56:27.920 --> 56:29.920]  которые name и other name мы назвали.
[56:29.920 --> 56:31.920]  Но, опять же,
[56:31.920 --> 56:33.920]  как мне кажется,
[56:33.920 --> 56:35.920]  все такого рода связи,
[56:35.920 --> 56:37.920]  которые нам могут пригодиться,
[56:37.920 --> 56:39.920]  секции и под секции,
[56:39.920 --> 56:41.920]  или, может быть, теоремы естественные из теоремы,
[56:41.920 --> 56:43.920]  их можно регулировать и без использования счетчиков,
[56:43.920 --> 56:45.920]  поэтому вот в голом виде
[56:45.920 --> 56:47.920]  место не берегажалось ни разу.
[56:47.920 --> 56:49.920]  Кстати, если вы смотрели прошлый раз
[56:49.920 --> 56:51.920]  запись,
[56:51.920 --> 56:53.920]  такое же синдексис работает,
[56:53.920 --> 56:55.920]  когда мы хотим сделать номерацию
[56:55.920 --> 56:57.920]  следствий после теорем.
[56:57.920 --> 56:59.920]  Мы хотим, чтобы у нас
[56:59.920 --> 57:01.920]  была теорема,
[57:01.920 --> 57:03.920]  чтобы она номировала, скажем,
[57:03.920 --> 57:05.920]  1, 2, 3, и вот были следствия из теоремы,
[57:05.920 --> 57:07.920]  отдельный вид теорем.
[57:07.920 --> 57:09.920]  Плохо, что это называется в русском теоремам.
[57:09.920 --> 57:11.920]  Давайте, у нас была категория теорем,
[57:11.920 --> 57:13.920]  теоремы, которые
[57:13.920 --> 57:15.920]  номирались 1, 2, 3.
[57:15.920 --> 57:17.920]  А потом мы сделали категорию теорем следствия,
[57:17.920 --> 57:19.920]  которая номируется в честь теоремы.
[57:19.920 --> 57:26.300]  теорема 1, следствие после нее это 1.1, 1.2 и так далее. После теоремы w либо следствие 2.1, 2.2 и так далее.
[57:26.520 --> 57:34.200]  Там-то определялось точно так же. Сначала объявлялось, ну, то есть там new-серием, что-то там, тут и вот в конце был аргумент в угарноскопках
[57:34.800 --> 57:40.960]  категории теорем, все из которой нужно это нумеровать. На словах не очень понятно, но это было в слайдах, и там, в общем, был такой же синтаксис.
[57:41.160 --> 57:47.120]  Сейчас не очень важно, даже если вы не совсем поняли, просто, ну, к слову, что устройство и синтаксис более-менее одинаково.
[57:48.120 --> 57:53.640]  Для счетчика можно работать, как я уже говорил, не арифметически, а используя всякие команды.
[57:54.240 --> 58:00.920]  Есть step-counter, это буквально инкрементировать, ну, прибавить единичку. Есть add to counter, это прибавить конкретное число.
[58:01.440 --> 58:09.520]  Соответственно, add to counter название, и вторым аргументом 1, эквивалентно просто step-counter, ну, то есть, инкремент, увеличение на 1.
[58:10.080 --> 58:13.800]  А можно прям задавать числовое значение, это делается через команду set-counter.
[58:14.360 --> 58:17.520]  Ну, опять же, все переводится английского очень-очень прозрачно.
[58:18.600 --> 58:27.560]  Да, аргумент name – это название счетчика, которым вы работаете, в частности, ну, тот, который вы объявили, допустим, под названием name, вот, можно на него ссылаться, написав name.
[58:28.600 --> 58:34.800]  Второй аргумент, который здесь есть, это какое-то число, причем, возможно, даже отрицательное, он их тоже воспринимает.
[58:36.800 --> 58:43.720]  Что характерно в техе много встроенных счетчиков, хотя, наверное, про это еще поговорим, в общем, в техе много встроенных счетчиков то, что мы видели
[58:44.800 --> 58:54.720]  номерация секции, номерация страниц, это все тоже делается счетчиками. Есть счетчик page, который отвечает за номер страницы, есть счетчик section, который отвечает за номер секции, ну, и так далее.
[58:55.200 --> 59:03.320]  В частности, если вы помните, у нас была, как мы делали калантитала, и в калантитале мы указывали номер страницы с помощью команды thepage.
[59:04.120 --> 59:10.720]  Вот это все не просто так, сейчас мы про это тоже поговорим. Ну, это как раз один из вариантов работы счетчиками. Так выглядит.
[59:11.720 --> 59:15.640]  Вот. Как обращаться к значению счетчика.
[59:17.720 --> 59:25.640]  Ну, тут, эта строчка нам уже знакомая, мы объявили новый счетчик, который называется name, и дали ему значение 22. Вот. Ничего удивительного.
[59:26.720 --> 59:34.640]  Это же понятно. А далее мы по-разному обращаемся к этому счетчику. Во-первых, можно к нему обратиться командой backslash the, а потом название счетчика.
[59:35.640 --> 59:41.560]  Буквально в одно слово. Для меня это было тоже противоестественно, но вот оно почему-то работает.
[59:41.640 --> 59:46.560]  В частности, когда я писал команду thepage, я буквально обращался к значению счетчика page.
[59:47.640 --> 59:53.560]  То есть даже ваше кастомное имя, каким бы оно ни было, вот the и далее ваше кастомное имя, оно сработает.
[59:54.640 --> 59:57.560]  Это для меня довольно странно, но вот оно вот так.
[59:57.640 --> 01:00:00.560]  Можно выдавать значение счетчика форматированным.
[01:00:00.560 --> 01:00:03.480]  Например, если мы хотим, чтобы это было просто арабское число.
[01:00:04.560 --> 01:00:09.480]  Ну, вообще-то оно по умолчанию арабское число, но вот можно приписать еще Arabic.
[01:00:09.560 --> 01:00:14.480]  Ну, наверное, такая команда есть скорее декоситетность, чтобы было понятно, почему другие тоже работают.
[01:00:14.560 --> 01:00:22.480]  Что вот есть команда Roman, которая принимает на вход значение, название счетчика, она выдает значение счетчика в качестве римского числа.
[01:00:23.560 --> 01:00:28.480]  Причем, как видим, страшными буквами. Если хотим заглавными буквами, то Roman заглавные буквы.
[01:00:28.480 --> 01:00:30.400]  Главные буквы, ее команда equivalent.
[01:00:31.480 --> 01:00:38.400]  Но понятно, что римская система числения, она там поддерживает не все числа, а типа только тысяч за десяти, кажется, да, что-то такое.
[01:00:39.480 --> 01:00:45.400]  Да, разумеется, она не умеет в знаке, но и там еще есть некая граница сверху, по-моему, десять тысяч, но может быть поменьше.
[01:00:46.480 --> 01:00:52.400]  Вот если число будет не из этого диапазона, оно не отработает просто, оно скажет ошибку, а то что вот это, я не умею римское число вставать по такому числу.
[01:00:53.480 --> 01:00:57.400]  А если будет нормальное число, как в нашем случае 22, его оно отрицует.
[01:00:58.480 --> 01:01:03.400]  Ну и можно еще в качестве, ну, буквки можно, в общем, рисовать.
[01:01:03.480 --> 01:01:10.400]  Команда alph, это будет такая по счету буква латинского алфавита, какое у нас значение счетчика?
[01:01:11.480 --> 01:01:15.400]  На данном случае значение счетчика 22, 22-я буква алфавита, это буква vi.
[01:01:18.480 --> 01:01:22.400]  Можно ли кириллические буквы так вызывать? По-моему, да, но я не помню как.
[01:01:22.400 --> 01:01:26.320]  Для этого надо будет подключить этот russian или babel?
[01:01:26.400 --> 01:01:30.320]  Ну, во-первых, да, нам потребуется вот это, как всегда, наше мантра для подключения русского языка,
[01:01:30.400 --> 01:01:34.320]  который и babel делает, и там font-eng, input-eng и все такое.
[01:01:35.400 --> 01:01:38.320]  И, наверное, есть какая-то команда, которая умеет кириллические символы вырисовывать.
[01:01:38.400 --> 01:01:41.320]  Я забыл, или даже не так, я не знал, как она делается.
[01:01:41.400 --> 01:01:44.320]  Если вам интересно, я могу погуглить, для червей рассказать.
[01:01:45.400 --> 01:01:51.320]  Ну, вдруг вам захочется нумеровать все формулы в вашем тексте в русским буквуме abvgd.
[01:01:51.320 --> 01:01:53.240]  Ну, по какой-то причине вам так захотелось.
[01:01:53.320 --> 01:01:57.240]  Это можно делать, я уверен, что это можно делать, но сейчас я не помню как.
[01:01:57.320 --> 01:02:02.240]  Но, по крайней мере, я помню, как делается это для числа римских и для просто буквок латинских.
[01:02:02.320 --> 01:02:04.240]  Вот, понятно ли все вот здесь?
[01:02:04.320 --> 01:02:05.240]  Да.
[01:02:05.320 --> 01:02:06.240]  Ну, хорошо.
[01:02:06.320 --> 01:02:12.240]  Да, то, что я уже упоминал, есть многие разные встроенные счетчики.
[01:02:12.320 --> 01:02:21.240]  Есть счетчики page и там номеров других объектов, типа номер текущей таблицы, текущей фигуры.
[01:02:21.320 --> 01:02:23.240]  Мы про это еще не говорили, но мы про это поговорим.
[01:02:23.320 --> 01:02:26.240]  Да, номер текущего футноута, вот это мы только что видели,
[01:02:26.320 --> 01:02:30.240]  то, что у футноутов есть своя нумерация, и вот она регулируется счетчиком футноут.
[01:02:30.320 --> 01:02:31.240]  Вот.
[01:02:31.320 --> 01:02:36.240]  Есть счетчики, номирующие там разделы, типа там section, subsection и так далее.
[01:02:36.320 --> 01:02:38.240]  Их тоже можно модифицировать.
[01:02:38.320 --> 01:02:43.240]  Да, есть счетчик equation, который, естественно, номер текущего уравнения выдает.
[01:02:43.320 --> 01:02:46.240]  А про это сейчас отдельно будет разговор.
[01:02:46.240 --> 01:02:52.160]  Счетчики вида Yanam, ну, типа римская 1, Yanam, римская 2, Yanam, римская 3, Yanam, римская 4.
[01:02:52.240 --> 01:02:56.160]  Это, ну, не вполне счетчики, это переменные, в которых хранится...
[01:02:58.240 --> 01:03:01.160]  Сейчас, нет, даже нет, это действительно счетчики.
[01:03:01.240 --> 01:03:07.160]  Это счетчики, указывающие номер текущего объекта номированного списка
[01:03:07.240 --> 01:03:09.160]  на таком-то уровне вложенности.
[01:03:09.240 --> 01:03:11.160]  И вот это число регулирует именно уровень вложенности.
[01:03:11.240 --> 01:03:15.160]  Давайте, это, наверное, сейчас не было понятно, я лучше пример проведу.
[01:03:17.160 --> 01:03:19.160]  Если так и subsection задается?
[01:03:19.240 --> 01:03:20.160]  В частности, да.
[01:03:20.240 --> 01:03:22.160]  Кстати, да, давайте сначала, пока мы далеко не ушли,
[01:03:22.240 --> 01:03:24.160]  покажу, как регулировать номерацию секций.
[01:03:24.240 --> 01:03:29.160]  Вот, допустим, у меня есть section, первый раздел.
[01:03:32.240 --> 01:03:35.160]  Есть section, дальше внезапно пятый раздел.
[01:03:35.240 --> 01:03:37.160]  Ну, по какой-то причине.
[01:03:37.240 --> 01:03:39.160]  По умолчанию, если я просто попытаюсь это комплировать,
[01:03:39.240 --> 01:03:42.160]  он мне сделает первый раздел под номером 1, а пятый под номером 2.
[01:03:42.240 --> 01:03:44.160]  Ясно, что не то, чего я хочу, да?
[01:03:45.080 --> 01:03:47.080]  Я хочу, чтобы это было цифра 5.
[01:03:47.160 --> 01:03:50.080]  Но теперь мы уже знаем, что вообще-то номер секции –
[01:03:50.160 --> 01:03:53.080]  это счетчик, его можно задавать руками, да?
[01:03:53.160 --> 01:03:55.080]  Но я перед этим и напишу.
[01:03:55.160 --> 01:03:59.080]  Set counter section.
[01:04:01.160 --> 01:04:03.080]  Ну, давай пока попробуем 5, не спойлери.
[01:04:04.160 --> 01:04:07.080]  Казалось бы, должно сработать, но почему-то получается число 6.
[01:04:07.160 --> 01:04:09.080]  Почему так?
[01:04:09.160 --> 01:04:13.080]  Ну, потому что команда section, она сама инкриментирует section на 1.
[01:04:13.080 --> 01:04:17.000]  Ну, потому что когда мы вообще к этому не обращаемся,
[01:04:17.080 --> 01:04:20.000]  а просто пишем секции подряд, нам хочется, чтобы их номера тоже росли, правда?
[01:04:20.080 --> 01:04:23.000]  1, 2, 3, чтобы они шли. Они все время одно и то же значение.
[01:04:23.080 --> 01:04:28.000]  Поэтому команда section при вызове, она счетчик section инкриментирует на 1.
[01:04:28.080 --> 01:04:32.000]  И, ну, поскольку нам хочется, чтобы после этого получалось число 5,
[01:04:32.080 --> 01:04:35.000]  значит, мы делаем... Сначала мы задаем значение 4,
[01:04:35.080 --> 01:04:38.000]  чтобы оно после еще одного инкримента стало уже 5.
[01:04:38.920 --> 01:04:39.920]  Вот.
[01:04:40.000 --> 01:04:44.920]  Если я из пятерки хочу получить 7, то я не один или два добавляю, а я пишу 6.
[01:04:45.000 --> 01:04:49.920]  Да. Ну, либо добавляешь еще один, ну, руками, типа step counter применяешь,
[01:04:50.000 --> 01:04:53.920]  а потом уже вызываешь и снова section, и получается уже седьмая секция.
[01:04:54.000 --> 01:04:55.920]  Вот. Такая идея.
[01:04:56.000 --> 01:04:58.920]  Теперь то, что я обещал в пронумерованные списки.
[01:05:05.000 --> 01:05:06.920]  Помните, да, команда enumerate?
[01:05:06.920 --> 01:05:08.840]  Окружение enumerate.
[01:05:08.920 --> 01:05:09.840]  Вот.
[01:05:10.920 --> 01:05:12.840]  Первый пункт.
[01:05:14.920 --> 01:05:16.840]  Третий пункт.
[01:05:17.920 --> 01:05:19.840]  Ну, опять та же история.
[01:05:19.920 --> 01:05:22.840]  Нам хотелось бы, чтобы то, что называется третьим пунктом,
[01:05:22.920 --> 01:05:24.840]  имело перед собой число 3. Да?
[01:05:24.920 --> 01:05:28.840]  Ну, наверное, это можно как-то регулировать с помощью счетчиков.
[01:05:28.920 --> 01:05:32.840]  Мы думаем, ага, мы только что видели счетчик enum 1.
[01:05:32.920 --> 01:05:35.840]  Да, мы сейчас находимся на первом уровне вложенности.
[01:05:35.840 --> 01:05:38.760]  Ну, то есть, если были вложены какие-то нумерованные списки,
[01:05:38.840 --> 01:05:40.760]  то есть, вот скажем, вместо item еще один enumerate,
[01:05:40.840 --> 01:05:41.760]  а внутри него еще enumerate,
[01:05:41.840 --> 01:05:43.760]  это каждый раз впуск на еще один уровень ниже,
[01:05:43.840 --> 01:05:45.760]  там, на второй, на третий и так далее.
[01:05:45.840 --> 01:05:48.760]  Я в прошлый раз, ну, вы, наверное, в записи видели,
[01:05:48.840 --> 01:05:50.760]  показывал, что на разных уровнях вложенности
[01:05:50.840 --> 01:05:52.760]  нумерация разного формата.
[01:05:52.840 --> 01:05:54.760]  Скажем, на первом уровне арабские числа,
[01:05:54.840 --> 01:05:56.760]  на втором уровне, по-моему, латинские буквы,
[01:05:56.840 --> 01:06:01.760]  на третьем, типа, римские цифры, типа, ну, просто по-разному.
[01:06:01.840 --> 01:06:04.760]  Это все регулируется, мы про это еще тоже поговорим как.
[01:06:05.680 --> 01:06:07.680]  Но вот мы находимся на первом уровне вложенности
[01:06:07.760 --> 01:06:08.680]  и нам хочется, чтобы на первом уровне,
[01:06:08.760 --> 01:06:11.680]  нам прямо сейчас было значение счетчика не 2, а 3.
[01:06:11.760 --> 01:06:13.680]  Ну, мы говорим.
[01:06:14.760 --> 01:06:20.680]  Давайте делаем setCounter enum 1.
[01:06:20.760 --> 01:06:21.680]  Ну, какое значение?
[01:06:21.760 --> 01:06:23.680]  Ну, значение 2, да?
[01:06:23.760 --> 01:06:24.680]  Почему?
[01:06:24.760 --> 01:06:26.680]  Ну, потому что, опять, при вызове еще одного item'а
[01:06:26.760 --> 01:06:29.680]  он экрементируется еще на 1, получится как раз 3.
[01:06:31.760 --> 01:06:33.680]  Ура, получилось.
[01:06:35.680 --> 01:06:39.680]  Соответственно, если бы мы были на уровне вложенности 2,
[01:06:39.760 --> 01:06:42.680]  давайте я спущусь на уровень вложенности 2.
[01:06:42.760 --> 01:06:44.680]  Ну, то есть, просто сделаю...
[01:06:46.680 --> 01:06:49.680]  Вот, у меня на месте первого item'а
[01:06:49.760 --> 01:06:51.680]  вложенный нумерованный список.
[01:06:51.760 --> 01:06:55.680]  И захочу тут тоже сделать, типа, пункт...
[01:06:56.760 --> 01:07:00.680]  пункт 1, а потом пункт 4.
[01:07:01.600 --> 01:07:02.600]  4.
[01:07:03.600 --> 01:07:06.600]  Как мне сделать консистентную нумерацию,
[01:07:06.680 --> 01:07:07.600]  чтобы тут был пункт...
[01:07:07.680 --> 01:07:10.600]  Да, во-первых, как видим, формат тут уже другой,
[01:07:10.680 --> 01:07:11.600]  латинские буквы.
[01:07:11.680 --> 01:07:13.600]  Ну, вот как мне сделать, чтобы этот пункт 4
[01:07:13.680 --> 01:07:17.600]  пошел под буквкой D, а не под буквкой B?
[01:07:18.680 --> 01:07:20.600]  Enum 2 сделать?
[01:07:20.680 --> 01:07:23.600]  Да, задать значение счетчика enum 2.
[01:07:23.680 --> 01:07:24.600]  И там ему 3 написать?
[01:07:24.680 --> 01:07:26.600]  Ну, получается, что так, потому что...
[01:07:26.680 --> 01:07:29.600]  Ой, enum 2.
[01:07:29.600 --> 01:07:32.520]  Значение 3, поскольку вызов команды item
[01:07:32.600 --> 01:07:33.520]  его еще раз инкремитирует.
[01:07:33.600 --> 01:07:34.520]  Получится как раз 4.
[01:07:35.600 --> 01:07:37.520]  Да, другой, скорее, типа, мемный выход.
[01:07:37.600 --> 01:07:38.520]  Можно было бы сделать...
[01:07:38.600 --> 01:07:40.520]  Ну, типа, озеркалить значение тега
[01:07:40.600 --> 01:07:42.520]  и бэпер шлоговда как раз.
[01:07:42.600 --> 01:07:44.520]  Мы про это поговорим, как это делается?
[01:07:44.600 --> 01:07:45.520]  Что?
[01:07:45.600 --> 01:07:49.520]  Ну, типа, завернуть значение вот этой штуки
[01:07:49.600 --> 01:07:50.520]  в mirrorbox, штучка, которая...
[01:07:50.600 --> 01:07:54.520]  Ну, может быть, не прямо одинаково,
[01:07:54.600 --> 01:07:55.520]  но явно очень похоже,
[01:07:55.600 --> 01:07:56.520]  и никто бы не заметил разницу, скорее всего.
[01:07:56.600 --> 01:07:57.520]  Да, посмотрим.
[01:07:58.440 --> 01:07:59.440]  Ну, то есть, в принципе,
[01:07:59.520 --> 01:08:01.440]  мне кажется, если я разверну букву D,
[01:08:01.520 --> 01:08:02.440]  никто ничего не заметит.
[01:08:02.520 --> 01:08:03.440]  Никакой разницы.
[01:08:03.520 --> 01:08:04.440]  Ну, практически не заметит.
[01:08:04.520 --> 01:08:06.440]  Можно и две подряды объяснить.
[01:08:06.520 --> 01:08:08.440]  Ну, ладно, это не так важно.
[01:08:08.520 --> 01:08:09.440]  Мы это в следующий раз обсудим,
[01:08:09.520 --> 01:08:10.440]  когда будем, собственно,
[01:08:10.520 --> 01:08:12.440]  всякие символы вращать, масштабировать,
[01:08:12.520 --> 01:08:14.440]  вот такими вещами заниматься.
[01:08:15.520 --> 01:08:17.440]  Пока, я думаю, хватит у нас такого.
[01:08:18.520 --> 01:08:20.440]  То есть можно обращаться, допустим,
[01:08:20.520 --> 01:08:22.440]  к секции, к секции ГАБД сэкшн?
[01:08:22.520 --> 01:08:23.440]  Да, все так.
[01:08:24.520 --> 01:08:26.440]  Более того, если я тут напишу
[01:08:26.440 --> 01:08:30.360]  уберу этот весь текст,
[01:08:31.440 --> 01:08:32.360]  сделаю сэкшн,
[01:08:33.440 --> 01:08:36.360]  какой-то текст и сделаю the section,
[01:08:37.440 --> 01:08:41.360]  то он мне отрисует номер текущей секции единичку.
[01:08:42.440 --> 01:08:43.360]  Кстати, интересно,
[01:08:43.440 --> 01:08:44.360]  я сейчас сам задумался,
[01:08:44.440 --> 01:08:46.360]  а если секции не будет вообще?
[01:08:46.440 --> 01:08:47.360]  Он вообще,
[01:08:47.440 --> 01:08:48.360]  этот человек пренационизирует нулем
[01:08:48.440 --> 01:08:49.360]  или вообще не пренационизирует?
[01:08:49.440 --> 01:08:50.360]  Давайте посмотрим.
[01:08:51.440 --> 01:08:52.360]  Нет, все-таки нулем.
[01:08:52.440 --> 01:08:53.360]  По умолчанию он нулевой,
[01:08:53.440 --> 01:08:55.360]  но просто каждый вызов команда сэкшн
[01:08:55.360 --> 01:08:56.280]  его будет экремитировать на один.
[01:08:57.360 --> 01:08:58.280]  Вот.
[01:08:58.360 --> 01:09:00.280]  Ну либо мы сами его как-то зададим по-своему,
[01:09:01.360 --> 01:09:03.280]  и он уже будет такое значение иметь.
[01:09:03.360 --> 01:09:05.280]  Ну да, к ним можно обращаться.
[01:09:05.360 --> 01:09:06.280]  И повторюсь,
[01:09:06.360 --> 01:09:07.280]  даже если сделали кастомный счетчик,
[01:09:07.360 --> 01:09:08.280]  который называется abvgd,
[01:09:08.360 --> 01:09:09.280]  ну там abcd,
[01:09:09.360 --> 01:09:11.280]  мы могли бы обратиться к нему,
[01:09:11.360 --> 01:09:13.280]  командой с помощью the abcd.
[01:09:13.360 --> 01:09:14.280]  Вот, это бы тоже сработало.
[01:09:16.360 --> 01:09:18.280]  То есть он в части обращается к той,
[01:09:18.360 --> 01:09:20.280]  которая выше до него находилась?
[01:09:21.360 --> 01:09:22.280]  Сейчас что ты имеешь?
[01:09:22.360 --> 01:09:24.280]  Если у меня есть 1, 2, 3, все там,
[01:09:24.360 --> 01:09:25.280]  секция 3 и все.
[01:09:25.360 --> 01:09:29.280]  А нет, смотри, он обращается не к секции,
[01:09:29.360 --> 01:09:31.280]  он обращается к значению,
[01:09:31.360 --> 01:09:33.280]  ну к числовому значению счетчика.
[01:09:33.360 --> 01:09:35.280]  Счетчик на данный момент
[01:09:35.360 --> 01:09:38.280]  после третьей секции уже имеет значение 3.
[01:09:38.360 --> 01:09:39.280]  Вот.
[01:09:39.360 --> 01:09:41.280]  Кстати, да, это хороший вопрос,
[01:09:41.360 --> 01:09:43.280]  я думаю, что стоит прелюстировать.
[01:09:43.360 --> 01:09:45.280]  Если я даже сделаю,
[01:09:45.360 --> 01:09:47.280]  так, первый,
[01:09:47.360 --> 01:09:50.280]  сделаю короче несколько секций,
[01:09:50.360 --> 01:09:52.280]  второй,
[01:09:52.360 --> 01:09:55.280]  и из каждой секции попытаюсь обратиться к счетчику,
[01:09:55.360 --> 01:09:56.280]  the section,
[01:09:56.360 --> 01:09:57.280]  ну, собственно,
[01:09:57.360 --> 01:09:58.280]  к счетчику,
[01:09:58.360 --> 01:10:00.280]  которому хранится номер секции текущей,
[01:10:00.360 --> 01:10:02.280]  то я утверждаю,
[01:10:02.360 --> 01:10:05.280]  что везде будет разный результат.
[01:10:05.360 --> 01:10:07.280]  Его значение будет,
[01:10:07.360 --> 01:10:09.280]  ну, короче, значение счетчика подсчитывается
[01:10:09.360 --> 01:10:12.280]  на момент данной позиции в тексте.
[01:10:12.360 --> 01:10:13.280]  Вот.
[01:10:13.360 --> 01:10:15.280]  Если мы делаем какую-то манипуляцию
[01:10:15.360 --> 01:10:20.280]  типа set counter section,
[01:10:20.360 --> 01:10:22.280]  думаю, значение 500,
[01:10:25.360 --> 01:10:27.280]  то на тексте выше...
[01:10:27.360 --> 01:10:28.280]  Ой.
[01:10:28.360 --> 01:10:30.280]  На тексте выше это никак не отразится,
[01:10:30.360 --> 01:10:32.280]  потому что мы задали значение уже
[01:10:32.360 --> 01:10:34.280]  после того, как мы вызвали команду the section.
[01:10:34.360 --> 01:10:36.280]  То есть он сначала отрисует счетчика как положено,
[01:10:36.360 --> 01:10:38.280]  а уже потом его модифицирует.
[01:10:38.360 --> 01:10:40.280]  Вот.
[01:10:40.360 --> 01:10:43.280]  То есть тех комплиируется строго сверху вниз.
[01:10:43.360 --> 01:10:45.280]  Хотя, наверное,
[01:10:45.360 --> 01:10:47.280]  это верно вообще для любого языка, да?
[01:10:47.360 --> 01:10:49.280]  Так что это не очень полезное утверждение,
[01:10:49.360 --> 01:10:51.280]  но вот...
[01:10:51.360 --> 01:10:53.280]  Нет, я имею в виду для языка программирования.
[01:10:53.360 --> 01:10:55.280]  Хотя, мне кажется, нет,
[01:10:55.360 --> 01:10:57.280]  потому что HTML, наверное, предпочитывает всю страницу
[01:10:57.360 --> 01:10:58.280]  и отрисовывает ее целиком
[01:10:58.360 --> 01:11:00.280]  и все значения выдают уже конечные.
[01:11:00.360 --> 01:11:02.280]  Вот.
[01:11:02.360 --> 01:11:04.280]  Ну, короче, для тех это точно верно,
[01:11:04.360 --> 01:11:06.280]  что оно работает именно сверху вниз.
[01:11:09.360 --> 01:11:10.280]  Вот.
[01:11:10.360 --> 01:11:12.280]  Я обещал показать,
[01:11:12.360 --> 01:11:16.280]  как задавать нумерацию с помощью других символов.
[01:11:16.360 --> 01:11:18.280]  То есть вот у нас по умолчанию
[01:11:18.360 --> 01:11:20.280]  нумерованные списки нумируются числами
[01:11:20.360 --> 01:11:22.280]  на первом уровне вложенности.
[01:11:22.360 --> 01:11:23.280]  Мы хотим, чтобы у нас был нумерованный список
[01:11:23.360 --> 01:11:24.280]  первого уровня,
[01:11:24.280 --> 01:11:26.200]  скажем, нумерованный буковками.
[01:11:26.280 --> 01:11:29.200]  Для этого в качестве необязательного аргумента
[01:11:29.280 --> 01:11:31.200]  указывается аргумент label,
[01:11:31.280 --> 01:11:33.200]  и значение которого...
[01:11:33.280 --> 01:11:34.200]  Ну, тинкс вот такой.
[01:11:34.280 --> 01:11:35.200]  Пишем ту команду,
[01:11:35.280 --> 01:11:37.200]  которую мы хотим применить к счетчику.
[01:11:37.280 --> 01:11:39.200]  Помните команду alpho, да?
[01:11:39.280 --> 01:11:40.200]  Которая...
[01:11:40.280 --> 01:11:42.200]  Если мы применяем ее к счетчику в качестве аргумента,
[01:11:42.280 --> 01:11:44.200]  мы получаем значение счетчика,
[01:11:44.280 --> 01:11:47.200]  записанное как букву алфавита
[01:11:47.280 --> 01:11:50.200]  со социального номера, да?
[01:11:50.280 --> 01:11:51.200]  Вот он...
[01:11:51.280 --> 01:11:53.200]  Мы указываем, какую команду применить к счетчику,
[01:11:53.200 --> 01:11:55.120]  ну, то есть к звездочке.
[01:11:55.200 --> 01:11:56.120]  Ну, такой синдекс есть.
[01:11:56.200 --> 01:11:58.120]  Сейчас не смотря, почему это именно так пишется,
[01:11:58.200 --> 01:11:59.120]  но вот идея такая,
[01:11:59.200 --> 01:12:00.120]  что мы указываем,
[01:12:00.200 --> 01:12:02.120]  какое преобразование применить
[01:12:02.200 --> 01:12:06.120]  к нашему счетчику номера текущего итама.
[01:12:06.200 --> 01:12:09.120]  Давайте я скобирую этот код.
[01:12:09.200 --> 01:12:11.120]  Но поскольку мы уже поигрались с set counters,
[01:12:11.200 --> 01:12:14.120]  я не буду повторять эффект set counters,
[01:12:14.200 --> 01:12:16.120]  просто удалю эту строку.
[01:12:16.200 --> 01:12:17.120]  Вот посмотрим, что будет,
[01:12:17.200 --> 01:12:19.120]  если я укажу не просто enumerate,
[01:12:19.200 --> 01:12:20.120]  а enumerate,
[01:12:20.200 --> 01:12:23.120]  у которого есть такой вот аргумент.
[01:12:23.200 --> 01:12:25.120]  А, он не скомпилируется.
[01:12:25.200 --> 01:12:26.120]  Прикольно.
[01:12:26.200 --> 01:12:27.120]  Как же так?
[01:12:30.200 --> 01:12:32.120]  Слушайте, я в замешательстве.
[01:12:32.200 --> 01:12:35.120]  А вы не надо заканчивать так же как-то?
[01:12:39.200 --> 01:12:41.120]  Да вроде как все должно работать.
[01:12:41.200 --> 01:12:43.120]  А, потому что для того,
[01:12:43.200 --> 01:12:44.120]  чтобы это работало,
[01:12:44.200 --> 01:12:50.120]  нужно получить пакет enumerate itemize.
[01:12:50.200 --> 01:12:52.120]  Теперь все заработает.
[01:12:53.120 --> 01:12:54.040]  Ура.
[01:12:54.120 --> 01:12:56.040]  Теперь наши аитмы номируются
[01:12:56.120 --> 01:12:58.040]  алтинскими буквами.
[01:12:58.120 --> 01:13:00.040]  Если мы хотели номераться
[01:13:00.120 --> 01:13:01.040]  иринскими зифрами...
[01:13:01.120 --> 01:13:02.040]  Что за звездочка?
[01:13:02.120 --> 01:13:05.040]  В данном сетексе, видимо,
[01:13:05.120 --> 01:13:07.040]  звездочка означает просто
[01:13:07.120 --> 01:13:10.040]  дальше подставить enum 1.
[01:13:10.120 --> 01:13:12.040]  Какой будет номерация?
[01:13:12.120 --> 01:13:13.040]  Не просто enum 1,
[01:13:13.120 --> 01:13:14.040]  а alph enum 1,
[01:13:14.120 --> 01:13:16.040]  то есть примененное к нему
[01:13:16.120 --> 01:13:18.040]  значение преобразования alph,
[01:13:18.120 --> 01:13:19.040]  которое делает из него
[01:13:19.120 --> 01:13:20.040]  алтинскую букву.
[01:13:20.040 --> 01:13:20.960]  Соответственно,
[01:13:21.040 --> 01:13:21.960]  если бы я тут написал ром,
[01:13:22.040 --> 01:13:22.960]  он вместо этого,
[01:13:23.040 --> 01:13:24.960]  то у меня были бы римские числа.
[01:13:26.040 --> 01:13:26.960]  Вот.
[01:13:30.040 --> 01:13:32.960]  Ну, остальное мы тут уже видели.
[01:13:33.040 --> 01:13:34.960]  Мы можем сделать setCounter,
[01:13:35.040 --> 01:13:36.960]  и тогда он задаст нам значение 5,
[01:13:37.040 --> 01:13:37.960]  и следующий item сделает нам
[01:13:38.040 --> 01:13:38.960]  значение 6,
[01:13:39.040 --> 01:13:39.960]  инкритирует на 1,
[01:13:40.040 --> 01:13:40.960]  и получится поэтому буква f,
[01:13:41.040 --> 01:13:42.960]  шестая буква алтинского алфавита.
[01:13:43.040 --> 01:13:44.960]  Тут уже должно все понятно.
[01:13:46.040 --> 01:13:47.960]  Окей, да, двигаемся дальше.
[01:13:50.040 --> 01:13:50.960]  Вот.
[01:13:51.040 --> 01:13:52.960]  Немножко из другой оперы,
[01:13:53.040 --> 01:13:53.960]  но тоже похоже.
[01:13:54.040 --> 01:13:55.960]  Есть счетчик enum 1,
[01:13:56.040 --> 01:13:56.960]  enum 2,
[01:13:57.040 --> 01:13:58.960]  а есть команда label item 1,
[01:13:59.040 --> 01:14:00.960]  label item 2 и так далее.
[01:14:01.040 --> 01:14:03.960]  Это значки для маркированных списков
[01:14:04.040 --> 01:14:04.960]  на разных уровнях вложенности.
[01:14:05.040 --> 01:14:06.960]  Но поскольку там нет номерации,
[01:14:07.040 --> 01:14:07.960]  это уже не счетчики,
[01:14:08.040 --> 01:14:08.960]  это один тоже каждый раз значок,
[01:14:09.040 --> 01:14:11.960]  просто рисуется перед каждым item'ом.
[01:14:12.040 --> 01:14:13.960]  Его тоже можно переобределять.
[01:14:14.040 --> 01:14:15.960]  Вот по умолчанию,
[01:14:16.040 --> 01:14:17.960]  если мы сделаем просто itemize,
[01:14:20.040 --> 01:14:24.960]  потому что тут тоже itemize, конечно,
[01:14:25.040 --> 01:14:27.960]  то по умолчанию они маркируются
[01:14:28.040 --> 01:14:28.960]  вот такими буллетами,
[01:14:29.040 --> 01:14:30.960]  такими закрашенными кружочками.
[01:14:31.040 --> 01:14:31.960]  Если мы хотим,
[01:14:32.040 --> 01:14:32.960]  чтобы это было не так,
[01:14:33.040 --> 01:14:34.960]  мы скажем renew command,
[01:14:35.040 --> 01:14:37.960]  просто переобределим команду
[01:14:38.040 --> 01:14:40.960]  label item 1.
[01:14:41.040 --> 01:14:41.960]  Сейчас я не ошибся,
[01:14:42.040 --> 01:14:42.960]  она так пишется.
[01:14:43.040 --> 01:14:44.960]  Да, label item 1.
[01:14:45.040 --> 01:14:47.960]  И вот каким вы хотите видеть маркеры
[01:14:47.960 --> 01:14:49.880]  перед элементами?
[01:14:49.960 --> 01:14:50.880]  Что тут написать?
[01:14:50.960 --> 01:14:51.880]  Доллар.
[01:14:51.960 --> 01:14:52.880]  Давайте доллар.
[01:14:52.960 --> 01:14:53.880]  Как мы помним,
[01:14:53.960 --> 01:14:54.880]  доллар спецсимвол,
[01:14:54.960 --> 01:14:55.880]  поэтому его экранируем,
[01:14:55.960 --> 01:14:58.880]  чтобы он записался.
[01:14:58.960 --> 01:15:00.880]  Теперь у нас будет маркирован список
[01:15:00.960 --> 01:15:02.880]  маркироваться долларами.
[01:15:02.960 --> 01:15:03.880]  И это будет только
[01:15:03.960 --> 01:15:05.880]  для уровня вложенности 1.
[01:15:05.960 --> 01:15:06.880]  Для вложенного списка
[01:15:06.960 --> 01:15:08.880]  он этого не почувствует.
[01:15:08.960 --> 01:15:10.880]  Это очевидно из того,
[01:15:10.960 --> 01:15:12.880]  что мы задаем только
[01:15:12.960 --> 01:15:13.880]  для первого уровня вложенности,
[01:15:13.960 --> 01:15:14.880]  но в всякий случай.
[01:15:18.880 --> 01:15:22.880]  Тут у него будет своя маркировка.
[01:15:22.960 --> 01:15:23.880]  По умолчанию маркировка
[01:15:23.960 --> 01:15:24.880]  на втором уровне
[01:15:24.960 --> 01:15:25.880]  делается тиражками.
[01:15:25.960 --> 01:15:26.880]  Ну вот, допустим,
[01:15:26.960 --> 01:15:27.880]  мы хотим ее поменять
[01:15:27.960 --> 01:15:28.880]  на какую-то.
[01:15:28.960 --> 01:15:30.880]  Мы переобределяем
[01:15:30.960 --> 01:15:31.880]  quanta label item 2.
[01:15:31.960 --> 01:15:33.880]  Давайте, на что переобредить ее?
[01:15:37.960 --> 01:15:39.880]  Я вот не умею вырисовывать
[01:15:39.960 --> 01:15:40.880]  начок евро.
[01:15:40.960 --> 01:15:41.880]  Может, здесь встроенный?
[01:15:41.960 --> 01:15:42.880]  Давайте посмотрим.
[01:15:42.960 --> 01:15:43.880]  Евро.
[01:15:43.960 --> 01:15:44.880]  Нет.
[01:15:44.960 --> 01:15:45.880]  Не, видимо, нету.
[01:15:45.960 --> 01:15:46.880]  Он предлагает смириться
[01:15:46.880 --> 01:15:47.800]  и сделать просто
[01:15:47.880 --> 01:15:48.800]  какой-нибудь симпатичный значок,
[01:15:48.880 --> 01:15:50.800]  типа крестик times,
[01:15:50.880 --> 01:15:52.800]  математический times.
[01:15:54.880 --> 01:15:55.800]  Ну почему нет?
[01:15:55.880 --> 01:15:57.800]  Пусть будет int.
[01:15:57.880 --> 01:15:58.800]  Что важно,
[01:15:58.880 --> 01:16:00.800]  я его заворачиваю в доллары,
[01:16:00.880 --> 01:16:01.800]  уже не в экранированные,
[01:16:01.880 --> 01:16:03.800]  в обычные математические,
[01:16:03.880 --> 01:16:04.800]  потому что это символ
[01:16:04.880 --> 01:16:05.800]  из математики,
[01:16:05.880 --> 01:16:06.800]  и он иначе просто
[01:16:06.880 --> 01:16:07.800]  не скомпедируется.
[01:16:07.880 --> 01:16:08.800]  Забавно звучит,
[01:16:08.880 --> 01:16:09.800]  обычный математический.
[01:16:09.880 --> 01:16:10.800]  Ну да.
[01:16:10.880 --> 01:16:12.800]  И теперь у нас маркировка
[01:16:12.880 --> 01:16:13.800]  списка второго уровня
[01:16:13.880 --> 01:16:14.800]  делается интегралами.
[01:16:14.880 --> 01:16:15.800]  Зачем-то?
[01:16:16.880 --> 01:16:17.800]  Ну в общем-то,
[01:16:17.880 --> 01:16:18.800]  такая опция есть,
[01:16:18.880 --> 01:16:19.800]  это все можно регулировать
[01:16:19.880 --> 01:16:20.800]  и настраивать под себя.
[01:16:20.880 --> 01:16:21.800]  Я часто делаю
[01:16:21.880 --> 01:16:22.800]  номерованные списки,
[01:16:22.880 --> 01:16:23.800]  маркированные все
[01:16:23.880 --> 01:16:24.800]  этими треугольничками.
[01:16:24.880 --> 01:16:25.800]  Переопределяю
[01:16:25.880 --> 01:16:26.800]  документы своих вот так.
[01:16:26.880 --> 01:16:28.800]  Мне это как-то больше нравится.
[01:16:30.880 --> 01:16:31.800]  Вот.
[01:16:31.880 --> 01:16:32.800]  А нельзя вначале пакет...
[01:16:32.880 --> 01:16:33.800]  А, ну это...
[01:16:33.880 --> 01:16:34.800]  То есть а это работает
[01:16:34.880 --> 01:16:36.800]  для всех вызовов
[01:16:36.880 --> 01:16:39.800]  пакета NM-item?
[01:16:39.880 --> 01:16:40.800]  Мне кажется,
[01:16:40.880 --> 01:16:41.800]  тут NM-item
[01:16:41.880 --> 01:16:42.800]  вообще ни при чем.
[01:16:42.880 --> 01:16:43.800]  Если я его уберу,
[01:16:43.880 --> 01:16:44.800]  ничего не изменится.
[01:16:45.800 --> 01:16:46.720]  Да.
[01:16:46.800 --> 01:16:47.720]  Это вообще встроенные
[01:16:47.800 --> 01:16:48.720]  команды из латеха.
[01:16:49.800 --> 01:16:50.720]  Или ты имеешь в виду,
[01:16:50.800 --> 01:16:51.720]  если мы хотим,
[01:16:51.800 --> 01:16:53.720]  чтобы одни маркированные списки
[01:16:53.800 --> 01:16:54.720]  определялись вот таким
[01:16:54.800 --> 01:16:55.720]  вот образом,
[01:16:55.800 --> 01:16:56.720]  а другие рисовались бы
[01:16:56.800 --> 01:16:57.720]  другими символами.
[01:16:57.800 --> 01:16:58.720]  Типа мы хотим
[01:16:58.800 --> 01:16:59.720]  посреди документов
[01:16:59.800 --> 01:17:00.720]  переопределить.
[01:17:00.800 --> 01:17:01.720]  Среди, как раз таки,
[01:17:01.800 --> 01:17:02.720]  я понял.
[01:17:02.800 --> 01:17:03.720]  Не, вот мне кажется,
[01:17:03.800 --> 01:17:04.720]  это не сработает.
[01:17:04.800 --> 01:17:05.720]  Мне кажется,
[01:17:05.800 --> 01:17:06.720]  что RenewCommand
[01:17:06.800 --> 01:17:07.720]  это команда,
[01:17:07.800 --> 01:17:08.720]  которая должна быть
[01:17:08.800 --> 01:17:09.720]  именно в преамбуле,
[01:17:09.800 --> 01:17:10.720]  а не в документе.
[01:17:10.800 --> 01:17:11.720]  Я подумаю,
[01:17:11.800 --> 01:17:12.720]  она скажет ошибку
[01:17:12.800 --> 01:17:13.720]  компиляции.
[01:17:13.800 --> 01:17:14.720]  А, не смотри,
[01:17:14.800 --> 01:17:15.720]  будет им иметь эффект
[01:17:15.800 --> 01:17:16.720]  только после того,
[01:17:16.800 --> 01:17:17.720]  как мы это написали.
[01:17:17.800 --> 01:17:18.720]  Ну, действительно так.
[01:17:18.800 --> 01:17:19.720]  Опять компиляция
[01:17:19.800 --> 01:17:20.720]  сверху вниз.
[01:17:20.800 --> 01:17:21.720]  Он шел сверху вниз,
[01:17:21.800 --> 01:17:23.720]  видит, ага,
[01:17:23.800 --> 01:17:24.720]  там маркированный список.
[01:17:24.800 --> 01:17:25.720]  Его отрисовал.
[01:17:25.800 --> 01:17:26.720]  Дальше, ага,
[01:17:26.800 --> 01:17:27.720]  переопределили значки.
[01:17:27.800 --> 01:17:28.720]  Значит, дальше
[01:17:28.800 --> 01:17:29.720]  будут использовать
[01:17:29.800 --> 01:17:30.720]  другие значки.
[01:17:30.800 --> 01:17:31.720]  Второй список,
[01:17:31.800 --> 01:17:32.720]  его уже отрисовал
[01:17:32.800 --> 01:17:33.720]  другими значками.
[01:17:33.800 --> 01:17:34.720]  Вот.
[01:17:34.800 --> 01:17:35.720]  Тоже все,
[01:17:35.800 --> 01:17:36.720]  как кажется,
[01:17:36.800 --> 01:17:37.720]  очень прозрачно.
[01:17:37.800 --> 01:17:38.720]  Я, честно говоря,
[01:17:38.800 --> 01:17:39.720]  думал, что
[01:17:39.800 --> 01:17:40.720]  RenewCommand
[01:17:40.800 --> 01:17:41.720]  и пишут вне
[01:17:41.800 --> 01:17:42.720]  окружения документов,
[01:17:42.800 --> 01:17:43.720]  а только в преамбуле.
[01:17:43.800 --> 01:17:44.720]  Оказывается,
[01:17:44.800 --> 01:17:45.720]  это не так.
[01:17:47.800 --> 01:17:48.720]  Да.
[01:17:48.800 --> 01:17:49.720]  И кажется,
[01:17:49.800 --> 01:17:50.720]  что
[01:17:50.800 --> 01:17:51.720]  про счетчики
[01:17:51.800 --> 01:17:52.720]  тоже на сегодня все.
[01:17:53.800 --> 01:17:54.720]  Совсем чуть-чуть.
[01:17:54.800 --> 01:17:55.720]  Я так понимаю,
[01:17:55.800 --> 01:17:56.720]  все уже устали
[01:17:56.800 --> 01:17:57.720]  и время уже позднее.
[01:17:57.800 --> 01:17:58.720]  Но вот просто упомянул
[01:17:58.800 --> 01:17:59.720]  про создание окружений.
[01:17:59.800 --> 01:18:00.720]  В следующий раз,
[01:18:00.800 --> 01:18:01.720]  видимо,
[01:18:01.800 --> 01:18:02.720]  я это повторю.
[01:18:02.800 --> 01:18:03.720]  Помните,
[01:18:03.800 --> 01:18:04.720]  что такое окружение,
[01:18:04.800 --> 01:18:05.720]  да?
[01:18:05.800 --> 01:18:06.720]  Мы с ними сегодня
[01:18:06.800 --> 01:18:07.720]  работаем весь день.
[01:18:07.800 --> 01:18:08.720]  Это штука,
[01:18:08.800 --> 01:18:09.720]  которая begin название,
[01:18:09.800 --> 01:18:10.720]  end название.
[01:18:10.800 --> 01:18:11.720]  Это все окружение.
[01:18:11.800 --> 01:18:12.720]  Можешь создавать их свои
[01:18:12.800 --> 01:18:13.720]  прямо с нуля.
[01:18:13.800 --> 01:18:14.720]  Команда вот такая.
[01:18:14.800 --> 01:18:15.720]  New environment
[01:18:15.800 --> 01:18:16.720]  ну типа новая среда.
[01:18:16.800 --> 01:18:17.720]  Так же,
[01:18:17.800 --> 01:18:18.720]  как с командами.
[01:18:18.800 --> 01:18:19.720]  New environment
[01:18:19.800 --> 01:18:20.720]  далее название среды,
[01:18:20.800 --> 01:18:21.720]  которые мы хотим.
[01:18:21.800 --> 01:18:22.720]  Ну,
[01:18:22.800 --> 01:18:23.720]  вообще любой набор символов.
[01:18:23.800 --> 01:18:24.720]  Далее,
[01:18:24.800 --> 01:18:25.720]  тот код,
[01:18:25.800 --> 01:18:26.720]  который будет
[01:18:26.800 --> 01:18:27.720]  буквально подставлен
[01:18:27.800 --> 01:18:28.720]  перед содержимым среды
[01:18:28.800 --> 01:18:29.720]  при компиляции
[01:18:29.800 --> 01:18:30.720]  и после компиляции.
[01:18:30.800 --> 01:18:32.720]  Сейчас не очень понятно.
[01:18:32.800 --> 01:18:33.720]  Понятнее будет на примере.
[01:18:33.800 --> 01:18:34.720]  Допустим,
[01:18:34.800 --> 01:18:35.720]  мы хотим
[01:18:35.800 --> 01:18:36.720]  окружение,
[01:18:36.800 --> 01:18:37.720]  которое
[01:18:37.800 --> 01:18:39.720]  все внутри себя
[01:18:39.800 --> 01:18:40.720]  делает по центру
[01:18:40.800 --> 01:18:41.720]  еще и жирным.
[01:18:41.800 --> 01:18:42.720]  Вот сразу две задачи
[01:18:42.800 --> 01:18:43.720]  хотим решать.
[01:18:43.720 --> 01:18:45.640]  Делаем такое окружение,
[01:18:45.720 --> 01:18:46.640]  новую среду,
[01:18:46.720 --> 01:18:47.640]  которая будет называется
[01:18:47.720 --> 01:18:48.640]  center bolt.
[01:18:48.720 --> 01:18:49.640]  Ну типа и по центру,
[01:18:49.720 --> 01:18:50.640]  и жирным.
[01:18:50.720 --> 01:18:51.640]  Далее,
[01:18:51.720 --> 01:18:52.640]  второй аргумент.
[01:18:52.720 --> 01:18:53.640]  Мы хотим,
[01:18:53.720 --> 01:18:54.640]  чтобы весь текст,
[01:18:54.720 --> 01:18:55.640]  который внутри нее
[01:18:55.720 --> 01:18:56.640]  завернулся в какой-то код
[01:18:56.720 --> 01:18:57.640]  до и после.
[01:18:57.720 --> 01:18:58.640]  Мы хотим,
[01:18:58.720 --> 01:18:59.640]  чтобы кодом до
[01:18:59.720 --> 01:19:00.640]  было begin center
[01:19:00.720 --> 01:19:01.640]  и начало модификатора
[01:19:01.720 --> 01:19:02.640]  жирного шрифта.
[01:19:02.720 --> 01:19:03.640]  Ну,
[01:19:03.720 --> 01:19:04.640]  то есть,
[01:19:04.720 --> 01:19:05.640]  оно буквально
[01:19:05.720 --> 01:19:06.640]  подставится
[01:19:06.720 --> 01:19:07.640]  перед текстом,
[01:19:07.720 --> 01:19:08.640]  который будет
[01:19:08.720 --> 01:19:09.640]  в это окружение завернут.
[01:19:09.720 --> 01:19:10.640]  Вот.
[01:19:10.720 --> 01:19:11.640]  Но поскольку мы
[01:19:11.720 --> 01:19:12.640]  открыли окружение,
[01:19:12.720 --> 01:19:13.640]  begin center,
[01:19:13.720 --> 01:19:14.640]  мы хотим открыть.
[01:19:14.720 --> 01:19:15.640]  Поэтому,
[01:19:15.720 --> 01:19:16.640]  следующим аргументом,
[01:19:16.720 --> 01:19:17.640]  тем кодом,
[01:19:17.720 --> 01:19:18.640]  который будет поставлен
[01:19:18.720 --> 01:19:19.640]  после всего текста,
[01:19:19.720 --> 01:19:20.640]  будет end center.
[01:19:20.720 --> 01:19:21.640]  Он подставится
[01:19:21.720 --> 01:19:22.640]  уже после этого текста,
[01:19:22.720 --> 01:19:23.640]  вот сюда.
[01:19:23.720 --> 01:19:24.640]  Вот.
[01:19:24.720 --> 01:19:25.640]  Ну, естественно,
[01:19:25.720 --> 01:19:28.640]  оно вот так вот сработает.
[01:19:28.720 --> 01:19:29.640]  Это тоже
[01:19:29.720 --> 01:19:30.640]  можно не перенабирать,
[01:19:30.720 --> 01:19:31.640]  это все будет в слайдах.
[01:19:31.720 --> 01:19:32.640]  Ну, давайте так,
[01:19:32.720 --> 01:19:35.640]  понятна ли общая идея?
[01:19:35.720 --> 01:19:37.640]  Сейчас я могу повторить?
[01:19:37.720 --> 01:19:39.640]  Смотри.
[01:19:39.720 --> 01:19:41.640]  Что делает окружение?
[01:19:41.720 --> 01:19:42.640]  Оно берет то,
[01:19:42.640 --> 01:19:43.560]  пишет
[01:19:43.640 --> 01:19:44.560]  перед ним
[01:19:44.640 --> 01:19:45.560]  какой-то код,
[01:19:45.640 --> 01:19:46.560]  который заранее задан,
[01:19:46.640 --> 01:19:47.560]  и после него
[01:19:47.640 --> 01:19:48.560]  какой-то код,
[01:19:48.640 --> 01:19:49.560]  который заранее задан.
[01:19:49.640 --> 01:19:51.560]  Вот здесь как раз.
[01:19:51.640 --> 01:19:52.560]  Качество этого
[01:19:52.640 --> 01:19:53.560]  и этого аргументов.
[01:19:53.640 --> 01:19:54.560]  То есть,
[01:19:54.640 --> 01:19:55.560]  мы хотим,
[01:19:55.640 --> 01:19:56.560]  чтобы в начале
[01:19:56.640 --> 01:19:57.560]  перед нашим текстом
[01:19:57.640 --> 01:19:58.560]  мы открыли
[01:19:58.640 --> 01:19:59.560]  окружение center,
[01:19:59.640 --> 01:20:01.560]  ну, уже заранее определенное,
[01:20:01.640 --> 01:20:02.560]  и открыли модификатор
[01:20:02.640 --> 01:20:03.560]  bf-series,
[01:20:03.640 --> 01:20:04.560]  который делает все жирным.
[01:20:04.640 --> 01:20:05.560]  Ну, поскольку мы
[01:20:05.640 --> 01:20:06.560]  открыли окружение center,
[01:20:06.640 --> 01:20:07.560]  надо его закрыть.
[01:20:07.640 --> 01:20:08.560]  Поэтому,
[01:20:08.640 --> 01:20:09.560]  по окончании
[01:20:09.640 --> 01:20:10.560]  мы хотим,
[01:20:10.640 --> 01:20:11.560]  чтобы было еще
[01:20:12.480 --> 01:20:13.480]  Это модификатор.
[01:20:13.560 --> 01:20:14.480]  Он просто работает
[01:20:14.560 --> 01:20:15.480]  до конца блока.
[01:20:15.560 --> 01:20:16.480]  Его не нужно закрывать.
[01:20:19.480 --> 01:20:20.480]  Ну, вот.
[01:20:21.560 --> 01:20:22.480]  Это тоже,
[01:20:22.560 --> 01:20:23.480]  повторюсь,
[01:20:23.560 --> 01:20:24.480]  такая, скорее экзотика.
[01:20:29.560 --> 01:20:30.480]  Вот это все end-center
[01:20:30.560 --> 01:20:31.480]  это аргумент,
[01:20:31.560 --> 01:20:32.480]  который тоже
[01:20:32.560 --> 01:20:33.480]  завернут с кодки целиком.
[01:20:33.560 --> 01:20:34.480]  То есть,
[01:20:34.560 --> 01:20:35.480]  команда new-in-ware
[01:20:35.560 --> 01:20:36.480]  принимает в ход три аргумента.
[01:20:36.560 --> 01:20:37.480]  Название среды,
[01:20:37.560 --> 01:20:39.480]  код, который подставить до,
[01:20:39.560 --> 01:20:40.480]  и код, который подставить после.
[01:20:42.480 --> 01:20:43.480]  Если вы напишите
[01:20:43.560 --> 01:20:44.480]  в каком-то другом месте
[01:20:44.560 --> 01:20:45.480]  begin-center
[01:20:45.560 --> 01:20:46.480]  и не закроете
[01:20:46.560 --> 01:20:48.480]  в этом же блоке end-center,
[01:20:48.560 --> 01:20:49.480]  он просто не скомпелируется.
[01:20:50.560 --> 01:20:51.480]  Но,
[01:20:51.560 --> 01:20:52.480]  вот,
[01:20:52.560 --> 01:20:53.480]  и на случай,
[01:20:53.560 --> 01:20:54.480]  когда вы делаете среду,
[01:20:54.560 --> 01:20:55.480]  все сработает,
[01:20:55.560 --> 01:20:56.480]  потому что код,
[01:20:56.560 --> 01:20:57.480]  который внутри,
[01:20:57.560 --> 01:20:58.480]  он не компелирует,
[01:20:58.560 --> 01:20:59.480]  будучи поданным на вход.
[01:20:59.560 --> 01:21:00.480]  Он компелирует его
[01:21:00.560 --> 01:21:01.480]  только,
[01:21:01.560 --> 01:21:02.480]  когда он его подставляет
[01:21:02.560 --> 01:21:03.480]  уже в конкретное окружение
[01:21:03.560 --> 01:21:04.480]  и до, и после,
[01:21:04.560 --> 01:21:05.480]  и вот это уже все вместе
[01:21:05.560 --> 01:21:06.480]  он компелирует
[01:21:06.560 --> 01:21:07.480]  и получается хорошо.
[01:21:12.480 --> 01:21:13.480]  Ну,
[01:21:13.560 --> 01:21:14.480]  надеюсь,
[01:21:14.560 --> 01:21:15.480]  хотя бы
[01:21:15.560 --> 01:21:16.480]  идейно понятно,
[01:21:16.560 --> 01:21:17.480]  что бы произошло.
[01:21:19.560 --> 01:21:20.480]  Ну,
[01:21:20.560 --> 01:21:21.480]  это последнее на сегодня.
[01:21:21.560 --> 01:21:22.480]  Тут тоже дофига всего.
[01:21:22.560 --> 01:21:23.480]  Просто упоминаю,
[01:21:23.560 --> 01:21:24.480]  что это существует.
[01:21:24.560 --> 01:21:25.480]  Помните,
[01:21:25.560 --> 01:21:26.480]  мы делали разные теоремы
[01:21:26.560 --> 01:21:27.480]  и у них были разные стили.
[01:21:27.560 --> 01:21:28.480]  Там Serum Style
[01:21:28.560 --> 01:21:29.480]  можно было задавать.
[01:21:30.560 --> 01:21:31.480]  Вот Serum Style
[01:21:31.560 --> 01:21:32.480]  можно делать вообще свои.
[01:21:33.560 --> 01:21:34.480]  Эта есть команда
[01:21:34.560 --> 01:21:35.480]  New Serum Style.
[01:21:36.560 --> 01:21:37.480]  Ну,
[01:21:37.560 --> 01:21:38.480]  есть какие-то аргументы.
[01:21:38.560 --> 01:21:39.480]  Можно сказать
[01:21:39.560 --> 01:21:40.480]  название стиля,
[01:21:40.560 --> 01:21:41.480]  ну и дальше
[01:21:41.560 --> 01:21:42.480]  параметры.
[01:21:42.560 --> 01:21:43.480]  Там отступы до после,
[01:21:43.560 --> 01:21:44.480]  модификаторы шрифта,
[01:21:44.560 --> 01:21:45.480]  видимо,
[01:21:45.560 --> 01:21:46.480]  даже какие-то цвета,
[01:21:46.560 --> 01:21:48.480]  шрифт заголовка отдельно.
[01:21:49.560 --> 01:21:50.480]  Это я просто
[01:21:50.560 --> 01:21:51.480]  упоминаю,
[01:21:51.560 --> 01:21:52.480]  что это существует.
[01:21:53.560 --> 01:21:54.480]  Да,
[01:21:54.560 --> 01:21:55.480]  это все
[01:21:55.560 --> 01:21:56.480]  аргументы одной команды.
[01:21:56.560 --> 01:21:57.480]  Команда New Serum Style.
[01:21:57.560 --> 01:21:58.480]  Такая вот команда,
[01:21:58.560 --> 01:21:59.480]  у которой раз в три,
[01:21:59.560 --> 01:22:00.480]  четыре штук,
[01:22:00.560 --> 01:22:01.480]  восемь аргументов,
[01:22:01.560 --> 01:22:02.480]  девять.
[01:22:04.560 --> 01:22:05.480]  Ты их просто пустыми делаешь.
[01:22:05.560 --> 01:22:06.480]  То есть
[01:22:06.560 --> 01:22:07.480]  просто пустые фигурные скобки
[01:22:07.560 --> 01:22:08.480]  и ничего не пишут там.
[01:22:08.560 --> 01:22:09.480]  Вот.
[01:22:09.560 --> 01:22:10.480]  Но
[01:22:10.560 --> 01:22:11.480]  вот мнение
[01:22:11.560 --> 01:22:12.480]  о том,
[01:22:12.560 --> 01:22:13.480]  как ты это мог своему стилю.
[01:22:13.560 --> 01:22:14.480]  А потом ты просто...
[01:22:14.560 --> 01:22:15.480]  Помните,
[01:22:15.560 --> 01:22:16.480]  был модификатор
[01:22:16.560 --> 01:22:17.480]  помните,
[01:22:17.560 --> 01:22:18.480]  был модификатор
[01:22:18.560 --> 01:22:20.480]  Serum Style,
[01:22:20.560 --> 01:22:21.480]  который
[01:22:21.560 --> 01:22:22.480]  все, что далее
[01:22:22.560 --> 01:22:23.480]  давайте plain.
[01:22:23.560 --> 01:22:24.480]  Вот
[01:22:24.560 --> 01:22:25.480]  что он говорит?
[01:22:25.560 --> 01:22:26.480]  Все теоремы,
[01:22:26.560 --> 01:22:27.480]  которые будут объявлены далее,
[01:22:27.560 --> 01:22:28.480]  имеют стиль plain.
[01:22:28.560 --> 01:22:30.480]  А вот ты сделал свой стиль,
[01:22:30.560 --> 01:22:31.480]  который называется
[01:22:31.560 --> 01:22:32.480]  my style.
[01:22:32.560 --> 01:22:33.480]  Значит,
[01:22:33.560 --> 01:22:34.480]  ты его так как вызываешь?
[01:22:34.560 --> 01:22:35.480]  Пишешь my style.
[01:22:35.560 --> 01:22:36.480]  Все.
[01:22:36.560 --> 01:22:37.480]  Все теоремы,
[01:22:37.560 --> 01:22:38.480]  которые будут далее,
[01:22:38.560 --> 01:22:39.480]  будут иместить
[01:22:39.560 --> 01:22:40.480]  my style,
[01:22:40.560 --> 01:22:41.480]  который ты объявил.
[01:22:41.560 --> 01:22:43.480]  Я даже не буду компетировать.
[01:22:43.560 --> 01:22:44.480]  Типа,
[01:22:44.560 --> 01:22:45.480]  мне вот такое не пригодалось
[01:22:45.560 --> 01:22:46.480]  делать руками ни разу.
[01:22:46.560 --> 01:22:47.480]  Вот
[01:22:47.560 --> 01:22:48.480]  не знаю.
[01:22:48.560 --> 01:22:49.480]  Мне кажется,
[01:22:49.560 --> 01:22:50.480]  что стили,
[01:22:50.560 --> 01:22:51.480]  которые есть в техи по умолчанию,
[01:22:51.560 --> 01:22:52.480]  там plain, remark
[01:22:52.560 --> 01:22:53.480]  и что-то еще,
[01:22:53.560 --> 01:22:54.480]  их хватает головой.
[01:22:54.560 --> 01:22:55.480]  Ну,
[01:22:55.560 --> 01:22:56.480]  если вам захочется
[01:22:56.560 --> 01:22:57.480]  как-то там выделиться из толпы
[01:22:57.560 --> 01:22:58.480]  и сделать
[01:22:58.560 --> 01:22:59.480]  свою уникальную книжечку,
[01:22:59.560 --> 01:23:00.480]  то вот
[01:23:00.560 --> 01:23:01.480]  вот эта штука
[01:23:01.560 --> 01:23:02.480]  вам может помочь.
[01:23:02.560 --> 01:23:03.480]  И
[01:23:03.560 --> 01:23:04.480]  я подозреваю,
[01:23:04.560 --> 01:23:05.480]  что это все,
[01:23:05.560 --> 01:23:06.480]  что я хотел вам сегодня рассказать.
[01:23:06.560 --> 01:23:07.480]  И дальше должен быть слайд,
[01:23:07.560 --> 01:23:08.480]  который говорит все.
[01:23:08.560 --> 01:23:09.480]  Вот.
[01:23:09.560 --> 01:23:10.480]  Есть ли вопросы какие-то,
[01:23:10.480 --> 01:23:11.400]  да.
[01:23:13.480 --> 01:23:14.400]  Ну, контекстов,
[01:23:14.480 --> 01:23:15.400]  если есть,
[01:23:15.480 --> 01:23:16.400]  там в чате напишите
[01:23:16.480 --> 01:23:17.400]  или там меня лично.
[01:23:17.480 --> 01:23:18.400]  В общем,
[01:23:18.480 --> 01:23:19.400]  думаю,
[01:23:19.480 --> 01:23:20.400]  что на сегодня стоит закончить.
[01:23:20.480 --> 01:23:21.400]  Спасибо за внимание.
[01:23:21.480 --> 01:23:22.400]  Да.
