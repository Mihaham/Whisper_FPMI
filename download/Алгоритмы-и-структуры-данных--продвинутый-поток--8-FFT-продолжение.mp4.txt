[00:00.000 --> 00:12.200]  Последние 10 минут, да, тут, по-моему, все уже можно напоминать, тем более, что давайте, так,
[00:12.200 --> 00:16.520]  ну, тем более, что давайте, так, давайте, так, сейчас, давайте по ICPC вопрос чуть позже обсудим,
[00:16.520 --> 00:21.320]  потому что сейчас у нас как бы через, там, 35 или 45 минут нас по-любому отсюда выгонят, вот,
[00:21.320 --> 00:27.800]  поэтому давайте, собственно, вспоминать, что там, что за фурятина у нас там была две недели назад.
[00:27.800 --> 00:37.280]  Вот, но если так вкратце, то мы с вами остановились на том, что, то есть мы научились, как, если я
[00:37.280 --> 00:45.560]  правильно помню, мы научились делать фурье за n log n, и так на уровне идеи вроде поняли, что как бы
[00:45.560 --> 00:54.680]  то, что мы делаем, это обратимо. Вот, так, а напомните, научились мы, так, но мы с вами так и не научились,
[00:54.680 --> 01:02.080]  по-моему, писать фурье нерекурсивно. Нет, ну, код мы не писали, но рекурсивно мы вроде поняли более-менее.
[01:02.080 --> 01:09.600]  Что мы поняли? Давайте, итак, краткое содержание, давайте вспоминать. Значит, напоминаю, значит,
[01:09.600 --> 01:15.560]  но мы сейчас даже немножко абстрадируемся. Значит, сейчас будет мистическая абстракция, да,
[01:15.560 --> 01:21.880]  мы говорили о каких-то там комплексных числах, но мы говорим следующее. Ну, во-первых, напоминаю,
[01:21.880 --> 01:28.680]  что мы перемножаем с вами, ну, значит, так, цель у нас в итоге оказалась следующая, что у нас с вами
[01:28.680 --> 01:50.000]  есть многочлен. Многочлен размера два в степени k, а еще у нас, а еще мы живем в мистическом поле k,
[01:50.000 --> 01:58.160]  то есть более поле, ладно, какой буквы можно обозвать поле? Ну, естественно, да, конечно. Вот,
[01:58.160 --> 02:08.520]  почему f, да, f значит field, логично, да. Вот, что мы знаем про это поле? Значит, ну, помимо того,
[02:08.520 --> 02:16.840]  что это поле, мы знаем, что в этом поле есть мистическая штука. То есть у нас будет такое понятие,
[02:17.160 --> 02:25.240]  как мистическая штука, вот я ее буду называть даже qn. У этой qn есть мистическое свойство,
[02:25.240 --> 02:40.920]  что qn в степени n равно 1, а qn в степени n пополам не равно 1. Да, для n равно степени 2, как вы в
[02:40.920 --> 02:50.240]  прошлый раз убедились, не будем сейчас повторяться, это эквивалентно тому, что qn в степени n равно 1,
[02:50.240 --> 03:01.360]  а числа 1 qn в квадрате qn в кубе и так далее по парду различны.
[03:01.360 --> 03:21.560]  Да, да, конечно, важно, что n в степени 2, потому что, да, если бы n было равно 18, то это было бы,
[03:21.560 --> 03:25.360]  конечно, ни черта не так просто, потому что это могло быть там какой-то q в третьей степени,
[03:25.360 --> 03:32.280]  не могло быть равно 1. Ну ладно, не совсем, ну ладно. Нет, хотя нет, совсем, совсем. Вот, но для
[03:32.280 --> 03:38.440]  степени 2 это вот просто такое просто упражнение, действительно, показать, что это так, что это
[03:38.440 --> 03:52.160]  эквивалентно. Вот, значит, что нам надо? Нам надо с вами научиться, значит, получать по последствия
[03:52.160 --> 04:03.920]  0, 1 и так далее n-1, последовательность чисел a от qn в степени 0, a от qn в степени 1 и так далее
[04:03.920 --> 04:15.120]  a от qn в степени n-1. И наоборот, да, в качестве полей в основном мы используем комплексные поля,
[04:15.120 --> 04:20.640]  поля комплексных чисел, но если, как мы уже говорили, если вам фантастически повезло,
[04:20.800 --> 04:26.360]  если у нас там есть поле по простому модулю и простой модуль, там простой модуль P имеет
[04:26.360 --> 04:32.080]  вид там q на 2 в какую-нибудь достаточно большую, например, больше, чем k степень, то такое q там
[04:32.080 --> 04:36.840]  тоже найдется. И это позволит вам делать то же самое, только без всяких этих ваших точностей с
[04:36.840 --> 04:47.320]  доплами. Вот. Значит, как же мы это делаем? Значит, как же эта мистика делается? Значит,
[04:47.320 --> 04:54.760]  ну, выяснялось, что это делается достаточно просто, по крайней мере, на уровне идеи. Мы говорим,
[04:54.760 --> 05:00.360]  что мы вводим, то есть, по крайней мере, если вот в эту сторону думать, что a0 от t мы вводим,
[05:00.360 --> 05:06.720]  как наращение размера n пополам состоящийся, аккуратно, это есть формулировка, коэффициентов
[05:06.720 --> 05:13.680]  с четными индексами. Да, очень хочется в этом месте употребить в словосочетании четные,
[05:13.680 --> 05:21.400]  конечно, коэффициенты, но когда они даже не обязательно целы, это сомнительно. Так, t в степени
[05:21.400 --> 05:30.200]  пополам минус 1. Ну, как сказать, в действительности, даже в действительности комплексных на 2 делится
[05:30.200 --> 05:43.440]  все. Так что, да. А мы тут на пополам что-то хотим, там что-то это t в кубе плюс и так далее, плюс вот
[05:43.440 --> 05:56.280]  такая вот красота. Почему мы неожиданно решили так развлечься? Мы решили так рассмотреть
[05:56.280 --> 06:10.080]  таким наращением, потому что мы с вами обнаружили, что at равно a0 от t квадрат плюс t на a1 от t квадрат.
[06:10.080 --> 06:25.320]  Мало того, что так, так еще и оказывается, так еще и оказывается следующий интересный факт,
[06:25.320 --> 06:30.240]  что если вы возьмете это число qun и вот рассмотрите вот эту последовательность,
[06:30.240 --> 06:45.120]  вот я вот так напишу qun в степени n пополам, qun в степени n пополам плюс 1, qun в степени n
[06:45.120 --> 06:50.160]  минус 1. Оказывается, что если я всю эту последовательность возведу в квадрат,
[06:50.160 --> 07:03.040]  то у меня получится число 1, qun в квадрате, qun в четвертой, qun в шестой и так далее, qun в
[07:03.040 --> 07:17.240]  степени n минус 2, qun в n, но это равно 1, дальше qun в квадрате и так далее, qun в степени n минус 2.
[07:17.240 --> 07:25.000]  То есть мы еще, да, вводим еще такую, такую приятность, что должно быть еще что qun пополам,
[07:25.000 --> 07:32.160]  то это должно быть qun в квадрате, ну потому что q можно ввести несколькими способами обычно,
[07:32.160 --> 07:38.720]  да, вот, поэтому мы вводим там для каждого, для различных степеней двойки, вводим q согласованно,
[07:38.720 --> 07:48.160]  вот так. Вот, но оказывается, да, что вот эти вот числа это фактически то же самое, как 1, qun
[07:48.160 --> 07:57.640]  пополам t, qun пополам t в квадрате, qun пополам t в кубе и так далее, qun пополам t в степени n
[07:57.640 --> 08:07.680]  пополам минус 1, дальше 1, qun пополам t, ну и так далее, короче. То есть получается, да, что вот,
[08:07.680 --> 08:14.080]  чтобы получить вот эти значения многочлена A в n точках, вот эти числа, нам нужно получается
[08:14.080 --> 08:23.600]  в многочлены A0 и A1 подставить все степени qun пополам. Вот, понятно, да? Вот, понятно?
[08:23.600 --> 08:36.880]  Чего? qun в квадрате, qun в четвертой, единица, qun в квадрате, qun в четвертой, qun в шестой и так далее.
[08:36.880 --> 08:52.640]  Где? Да, вот она. Нет, это просто, вот пусть у меня есть как бы набор степеней qun. Ну да,
[08:52.640 --> 08:57.080]  qun в степени n пополам минус 1, qun в степени n пополам, qun в степени n пополам плюс 1 и так далее.
[08:57.080 --> 09:06.960]  Да, все просто. Вот, то есть оказалось, что надо просто теперь, то есть оказалось, что если мы тут
[09:06.960 --> 09:12.480]  подставим, то в общем-то, ну действительно, можно прям так и написать. То есть для любого,
[09:12.480 --> 09:22.040]  вот как мы писали, для любого j меньше, чем n пополам, получается, что A от qun в степени j равно
[09:22.040 --> 09:32.440]  просто A0 от qun пополам в степени j. То есть, оказывается, если вы вот, вот, вот,
[09:32.440 --> 09:50.400]  плюс qun в степени j на A1 от qu в степени j, но n пополам. А от an в степени j плюс n пополам,
[09:50.400 --> 09:59.440]  оказывается, равно абсолютно то же самому, тому же самому, n пополам. Ну, как бы, в квадрат
[09:59.440 --> 10:05.520]  возвели, получилось qun в степени n, на qun пополам в степени j, qun в степени n это единица. Вот,
[10:05.520 --> 10:12.720]  и тут получается, что, а тут получалось, ну ладно, если очень вкратце, вкратце расписать, мы это в
[10:12.720 --> 10:28.560]  прошлый раз делали, то окажется, что минус qun в степени j на A1 от qun пополам в степени j. Вот,
[10:28.560 --> 10:45.080]  вот такой вот оказался прикол. Ну вот, ну вот, то есть, в принципе, вот, то есть, вот такой вот
[10:45.080 --> 10:57.400]  логенчик получался. Вот. Так, сколько у нас там? Нормальное время? Нормально. Вот. То есть,
[10:57.400 --> 11:05.560]  вот такое заклинание. Ну вот, и, и, соответственно, чисто теоретически оно на самом деле, на самом
[11:05.560 --> 11:21.120]  деле приводило, могло привести к следующему коду. Вектор k, fft. Значит, я бы сказал так.
[11:35.560 --> 11:50.920]  Чего? А от qun в степени j, plus n пополам. Ну равно A0 от qun пополам в степени h. В общем,
[11:50.920 --> 12:00.800]  то же самое, что и здесь, только вместо плюса минус. Прям копия. Вот. Да, то есть, qu здесь,
[12:00.800 --> 12:11.840]  я имею в виду, что qu тождественно равно qun. Ну, да. Ну, а мега мы просто использовали в комплекте
[12:11.840 --> 12:21.760]  числа. А я здесь пишу qu, чтобы подчеркнуть, видишь, что это произвольное поле. Вот. Ну и говорим.
[12:21.760 --> 12:32.240]  Там пишем int n, как всегда равно a.size. Ну, там можно там даже для разбитом написать,
[12:32.240 --> 12:43.360]  что assert там, я не знаю, n, степень двойки. Если прям очень-очень-очень надо. Ну, там надо
[12:43.360 --> 12:48.280]  проявить, что assert там n, степень двойки, что q обладает вот этими свойствами приятными и так далее.
[12:48.280 --> 12:53.520]  Там, но это если очень хочется, на самом деле обычно этим никто не занимается,
[12:53.520 --> 13:02.440]  что q в степени n равно 1, q в степени n пополам не равно 1. Ну и говорим. Если оказалось,
[13:02.440 --> 13:14.960]  что n равно 1, то надо естественно выброситься из этого fft с криком a. Вот. Просто a. Вот.
[13:14.960 --> 13:29.920]  Ну да. В противном случае мы завоем вектора a0, a1 и дальше говорим. For instance,
[13:29.920 --> 13:45.520]  i равно 0 и меньше n и плюс равно 2. Говорим. Значит, в a0 мы пихаем. Так, ладно, не i, а g.
[13:45.520 --> 13:49.640]  Ну ладно, когда мы перешли в поле уже по барабану, ну лучше g давайте.
[13:49.640 --> 14:03.040]  Значит, вот получается так. a1.push, а в a1 пихаем a0. То есть как раз вот то, что надо. Товарищи
[14:03.040 --> 14:07.280]  с четными коэффициентами отправляются в 0, товарищи с нечетными коэффициентами отправляются,
[14:07.280 --> 14:21.280]  ну ладно, нечетными индексами отправляются в 1. Вот. Понятно, да? Вот. И теперь немножко наоборот.
[14:21.280 --> 14:33.320]  Так. Ну и теперь говорим. Смотрите. a0 равно fft от a0. Нет, неправильно. Для того, чтобы немножко
[14:33.320 --> 14:45.320]  оптимизировать, давайте я веду так. kqq равно q умножить на q. Ну логично, да? Ну как записывать q
[14:45.320 --> 15:09.420]  умножить на q? В алгабрите записывается как qq, логично. Так, вот. Ага. Да-да-да. a0 превращается.
[15:09.420 --> 15:18.060]  Давайте fft с a0 и qq, когда вы будете знать текст?
[15:18.060 --> 15:29.020]  Так вот, значит теперь немножко, ну вот, и самая магическая строчка.
[15:29.020 --> 15:42.060]  Значит теперь я пишу kqdeg равно 1. Ну, верим, что в нашем поле, наверное, есть 1.
[15:42.060 --> 15:48.260]  Вот. И дальше мы делаем следующее.
[15:48.260 --> 15:59.540]  Так. Как это называется? Здесь мы используем наше выражение.
[15:59.540 --> 16:02.900]  Можем ли мы использовать нормальный маркер? Как сказал бы классер.
[16:02.980 --> 16:15.300]  Так вот. Дальше пишем int g равно 0, g меньше, чем n попало, плюс, плюс g.
[16:15.300 --> 16:24.100]  И тут мы говорим. Ну, здесь я уже сразу пишу с оптимизациями, мы это в прошлый раз обсуждали.
[16:24.100 --> 16:50.500]  Значит, значит k, допустим, какой-нибудь, а, ну так пишут, u равно ajt, kv равно aj плюс n пополамt, умноженное на qdeg.
[16:51.380 --> 17:06.900]  Вот. И дальше мы пишем ajt равно u плюс v, aj плюс n пополамt равно u минус v, и что-то еще.
[17:06.900 --> 17:12.900]  А, и, конечно же, его величество qdeg умножить равно q.
[17:20.900 --> 17:26.900]  Блээээ. Какое безобразие, что делать-то, а?
[17:26.900 --> 17:29.940]  Мы в прошлый раз оптимизацию уже обсуждали.
[17:29.940 --> 17:38.900]  Нет, не обсуждали. Так, ладно. Да, обсуждали, но не с вами, да. Это, да, точно, да, это в 11 классе было, да.
[17:38.900 --> 17:40.900]  Так.
[17:44.900 --> 17:46.900]  Бывает.
[17:46.900 --> 17:48.900]  Ну да.
[17:50.900 --> 17:52.900]  Вот.
[17:52.900 --> 17:54.900]  Вот теперь хорошо.
[17:54.900 --> 17:56.900]  Нет, нехорошо.
[18:00.900 --> 18:02.900]  Мы пишем обычный код, или уже какой-то...
[18:02.900 --> 18:04.900]  Ну, и то, и то.
[18:04.900 --> 18:06.900]  Ну, как сказать, пока мы пишем рекурсивный код.
[18:06.900 --> 18:08.900]  Ну, точнее, как пишем.
[18:08.900 --> 18:12.900]  Нам осталось только выброситься с криком a, как всегда.
[18:12.900 --> 18:14.900]  Так. Вот. И вот все.
[18:14.900 --> 18:16.900]  Вот так вот выглядит код.
[18:20.900 --> 18:24.900]  Так, почему как, кстати?
[18:24.900 --> 18:28.900]  F уже. Мы ж поле F называем.
[18:28.900 --> 18:30.900]  Да, мы здесь уже кофигу уже.
[18:30.900 --> 18:32.900]  Ну, что делать?
[18:32.900 --> 18:36.900]  Нет, ну можно взять type-def, kf, там вот это все.
[18:36.900 --> 18:38.900]  Ну, знаете...
[18:42.900 --> 18:44.900]  Какой type-def? Defi?
[18:44.900 --> 18:48.900]  Да, это шедевр, конечно, да.
[18:50.900 --> 18:52.900]  Так.
[18:52.900 --> 18:54.900]  Вроде никто не знал.
[18:54.900 --> 18:56.900]  Да тут вообще что-то вон...
[18:56.900 --> 18:58.900]  Кошмар вон съездил, вон что-то ведь...
[19:00.900 --> 19:04.900]  Ну, знаете, вот он съездил под Гладыш, ему поплохело что-то.
[19:04.900 --> 19:06.900]  Ладно.
[19:06.900 --> 19:12.900]  Ну вот. Ну, в общем-то, пока в этом коде, в общем-то, ничего экстраординарного не написано. Правда?
[19:14.900 --> 19:16.900]  Есть такое, да?
[19:16.900 --> 19:18.900]  Какая-то лагерь, по-моему.
[19:19.300 --> 19:21.300]  Какая-то магия.
[19:25.300 --> 19:29.300]  А почему мы один раз умножаем qdek на q?
[19:29.300 --> 19:33.300]  А потому что мы тут параллельно этот qdek в степень возвоим.
[19:33.300 --> 19:35.300]  Видите, там же должна быть qm в степени g.
[19:35.300 --> 19:39.300]  И поэтому мы тут, когда прибираемся фориком, мы как бы вот qdek...
[19:39.300 --> 19:41.300]  qdek это вот текущий...
[19:43.300 --> 19:45.300]  Да?
[19:45.300 --> 19:47.300]  Нет, только в одном месте.
[19:47.700 --> 19:49.700]  Все, вот теперь хорошо.
[19:51.700 --> 19:53.700]  Нет, qdek все.
[19:53.700 --> 19:55.700]  Я вторую q убрал.
[19:57.700 --> 20:01.700]  Не, ну если совсем плохо видно, я могу то же самое по телевизору показать.
[20:01.700 --> 20:03.700]  Давайте.
[20:11.700 --> 20:13.700]  Так, сейчас попробуем.
[20:17.700 --> 20:19.700]  Нет, рекусивный код.
[20:21.700 --> 20:25.700]  Так, я, кстати, надо покопаться, может у меня там код даже есть.
[20:25.700 --> 20:27.700]  Ой.
[20:27.700 --> 20:29.700]  Рекусивный код есть на Ямасе.
[20:29.700 --> 20:31.700]  Ну, там...
[20:31.700 --> 20:35.700]  Причем там почти такой же код, как мы сейчас написали.
[20:35.700 --> 20:37.700]  Ну, логично.
[20:37.700 --> 20:39.700]  Слушайте, вот зазвоните мне.
[20:43.700 --> 20:45.700]  Да.
[20:46.100 --> 20:48.100]  Значение.
[20:50.100 --> 20:54.100]  Ну, например, мы из коэффициентов многочленов получаем значение многочлена вот в степенях кушки.
[20:56.100 --> 20:58.100]  Обратно? Нет.
[20:58.500 --> 21:00.500]  Ага.
[21:14.500 --> 21:16.500]  Так.
[21:28.500 --> 21:30.500]  Так, ладно.
[21:30.500 --> 21:32.500]  Так, а камера готова смотреть телевизор?
[21:32.500 --> 21:34.500]  А, готова, вижу.
[21:34.500 --> 21:36.500]  Так.
[21:38.500 --> 21:40.500]  Ну, пока там.
[21:44.500 --> 21:46.500]  Ну-ка, давайте попробуем.
[21:48.500 --> 21:50.500]  Так.
[21:50.500 --> 21:52.500]  Так, где я? Так.
[21:54.500 --> 21:56.500]  Так.
[21:56.900 --> 21:58.900]  Так.
[22:08.900 --> 22:10.900]  Тут кодов нет, обидно.
[22:10.900 --> 22:12.900]  Ну, ладно, так.
[22:12.900 --> 22:14.900]  Ну, в принципе, да.
[22:14.900 --> 22:16.900]  Ладно.
[22:18.900 --> 22:20.900]  Так, ладно, давайте.
[22:21.300 --> 22:23.300]  Ой.
[22:23.300 --> 22:25.300]  Ой, что тут было такое?
[22:25.300 --> 22:27.300]  Боже.
[22:27.300 --> 22:29.300]  Не, ну да, нет, я в Бангладеште там...
[22:29.300 --> 22:31.300]  Так.
[22:31.300 --> 22:33.300]  Так.
[22:33.300 --> 22:35.300]  Так.
[22:35.300 --> 22:37.300]  Не, это не Бангладеш, это его нормальное состояние.
[22:37.300 --> 22:39.300]  Так.
[22:39.300 --> 22:41.300]  Так, значит.
[22:45.300 --> 22:47.300]  Так.
[22:47.300 --> 22:49.300]  Не, это не Бангладеш, это его нормальное состояние.
[22:49.700 --> 22:51.700]  Так.
[22:51.700 --> 22:53.700]  Не, ну, кстати, Бангладеш очень милая страна оказалась.
[22:53.700 --> 22:55.700]  Ну, как сказать?
[22:55.700 --> 22:57.700]  Мы не то чтобы...
[22:57.700 --> 22:59.700]  Мы только там два часа, видимо, были
[22:59.700 --> 23:01.700]  в самом Бангладеше, собственно.
[23:01.700 --> 23:03.700]  В остальное время нас как бы возили
[23:03.700 --> 23:05.700]  из пятизвездочного отеля
[23:05.700 --> 23:07.700]  в, собственно, место проведения финала.
[23:07.700 --> 23:09.700]  Аккуратненько огороженное
[23:09.700 --> 23:11.700]  от внешнего мира.
[23:11.700 --> 23:13.700]  Вот.
[23:13.700 --> 23:15.700]  Поэтому... Ну, мне понравилось.
[23:15.700 --> 23:17.700]  Вот так.
[23:18.100 --> 23:20.100]  Но это отдельная, но это отдельная песня.
[23:20.100 --> 23:22.100]  Сейчас давайте не будем на это время трясти.
[23:22.100 --> 23:24.100]  Это следующая лекция.
[23:24.100 --> 23:26.100]  Ну, а что следующая лекция у нас когда-то?
[23:26.100 --> 23:28.100]  Через полтора часа потом будет, да?
[23:28.100 --> 23:30.100]  Ой.
[23:30.100 --> 23:32.100]  Так-то вполне себе мило, да.
[23:32.100 --> 23:34.100]  Как бы имело смысл выходить до финала, чтобы там...
[23:36.100 --> 23:38.100]  Так. Ой.
[23:38.100 --> 23:40.100]  Ну...
[23:40.100 --> 23:42.100]  Ну, как сказать? Мне было сложно.
[23:42.100 --> 23:44.100]  Я по возрасту бы не проходил.
[23:44.100 --> 23:46.100]  Поэтому мне... Я ездил в Екатеринбург.
[23:46.100 --> 23:48.100]  Екатеринбург тоже хороший город.
[23:50.100 --> 23:52.100]  Так, Олимпиадная...
[23:52.100 --> 23:54.100]  Так, сейчас...
[23:54.100 --> 23:56.100]  Уфты, лекции, семинары.
[23:56.100 --> 23:58.100]  О, вот сейчас мы вот сюда этот
[23:58.100 --> 24:00.100]  ФФТ и положим.
[24:00.100 --> 24:02.100]  Значит, смотрите.
[24:02.100 --> 24:04.100]  Сейчас поедем.
[24:04.100 --> 24:06.100]  Итак, супер-код.
[24:06.100 --> 24:08.100]  Итак, начну...
[24:08.100 --> 24:10.100]  Начинаем.
[24:10.100 --> 24:12.100]  Пожалуйста.
[24:14.100 --> 24:16.100]  Ага.
[24:16.100 --> 24:18.100]  Так.
[24:18.100 --> 24:20.100]  Так, ну я так.
[24:20.100 --> 24:22.100]  Так, ладно.
[24:22.100 --> 24:24.100]  Значит, поехали.
[24:24.100 --> 24:26.100]  Начинаем с того, чтобы получить бан
[24:26.100 --> 24:28.100]  на предыдущей паре?
[24:28.100 --> 24:30.100]  Да, но мы не на предыдущей паре.
[24:32.100 --> 24:34.100]  Пожалуйста.
[24:40.100 --> 24:42.100]  Здесь, кроме туды,
[24:42.100 --> 24:44.100]  ничего не смущает.
[24:44.100 --> 24:46.100]  Вот.
[24:46.100 --> 24:48.100]  Ну, нет.
[24:48.100 --> 24:50.100]  Еще эти парни на лонглог как-то не стоят.
[24:50.100 --> 24:52.100]  Ну, это ладно.
[24:52.100 --> 24:54.100]  Какой лонглог? Тебе должно смущать,
[24:54.100 --> 24:56.100]  что тут темплейта не стоит.
[24:56.100 --> 24:58.100]  Вот так.
[24:58.100 --> 25:00.100]  Ну, это, знаете, давай...
[25:00.100 --> 25:02.100]  А вы все еще не знаете,
[25:02.100 --> 25:04.100]  что такое темплейта, да?
[25:04.100 --> 25:06.100]  Ну, я на них любую задачу сдавал.
[25:06.100 --> 25:08.100]  Ну, основа знает, а он только не знает.
[25:08.100 --> 25:10.100]  А основа там, динамику, наверно,
[25:10.100 --> 25:12.100]  тоже знает, да?
[25:12.100 --> 25:14.100]  А мы с вами видимо только в следующем семестре узнаем,
[25:14.100 --> 25:16.100]  что такое динамика.
[25:20.100 --> 25:22.100]  Да.
[25:22.100 --> 25:24.100]  Ну, тоже видимо в следующем семестре, да.
[25:26.100 --> 25:28.100]  Не, ну,
[25:28.100 --> 25:30.100]  как сказать, на DFS основаны важные алгоритмы,
[25:30.100 --> 25:32.100]  как там, поиск, компонент всяких
[25:32.100 --> 25:34.100]  связностей, а также дерево
[25:34.100 --> 25:36.100]  доминаторов, да. Они основаны
[25:36.100 --> 25:38.100]  доминатором? А, как же!
[25:38.100 --> 25:40.100]  Ну, DFS-то зачем вы?
[25:40.100 --> 25:42.100]  Ну, в смысле, дерево доминаторов
[25:42.100 --> 25:44.100]  или какая-то структура
[25:44.100 --> 25:46.100]  специальная для хитовства?
[25:46.100 --> 25:48.100]  Тебя поздно, ты думал,
[25:48.100 --> 25:50.100]  что мы едем на динамику?
[25:50.100 --> 25:52.100]  В DFS
[25:52.100 --> 25:54.100]  вы кученым чем-нибудь.
[25:54.100 --> 25:56.100]  Ну, ты DFS-то скидываешь?
[25:56.100 --> 25:58.100]  Да.
[26:00.100 --> 26:02.100]  Я не знаю,
[26:02.100 --> 26:04.100]  не знаю.
[26:04.100 --> 26:06.100]  Сейчас вы загоните.
[26:06.100 --> 26:08.100]  Я не знаю.
[26:08.100 --> 26:10.100]  Я не знаю.
[26:10.100 --> 26:12.100]  Я не знаю.
[26:12.100 --> 26:14.100]  Вы не договаривайтесь.
[26:14.100 --> 26:16.100]  Вы не договаривайтесь.
[26:16.100 --> 26:18.100]  Вместо N
[26:18.100 --> 26:20.100]  минус 3,1
[26:20.100 --> 26:22.100]  написать знак безотвержность.
[26:22.100 --> 26:24.100]  И сколько раз?
[26:24.100 --> 26:26.100]  Все, какой экдак по инвлежности, где?
[26:26.100 --> 26:28.100]  В динамике.
[26:28.100 --> 26:30.100]  А что вы выясняете
[26:30.100 --> 26:32.100]  перед летом?
[26:32.100 --> 26:34.100]  Ну, не дойди.
[26:34.100 --> 26:36.100]  Это вообще так не доехать.
[26:36.100 --> 26:38.100]  Это вообще так не доехать.
[26:38.100 --> 26:40.100]  Это вообще так не доехать.
[26:40.100 --> 26:42.100]  Так!
[26:42.100 --> 26:44.100]  Не, не дойди!
[26:44.100 --> 26:46.100]  Не, не дойди!
[26:46.100 --> 26:48.100]  Можно быть умной операцией
[26:48.100 --> 26:50.100]  на степень блоки.
[26:50.100 --> 26:52.100]  За 1,3
[26:52.100 --> 26:54.100]  за 1,3
[26:54.100 --> 26:56.100]  за 1,3
[26:56.100 --> 26:58.100]  Н, N минус 1,3
[26:58.100 --> 27:00.100]  Н, N минус 1,3
[27:00.100 --> 27:02.100]  Вот, не взрослись.
[27:06.100 --> 27:08.100]  Так, ну что?
[27:08.100 --> 27:10.100]  Пока все понятно, да?
[27:10.100 --> 27:12.100]  Да, да.
[27:30.100 --> 27:32.100]  Так, вот.
[27:54.100 --> 27:56.100]  Там, обратите внимание,
[27:56.100 --> 27:58.100]  у нас там формула к степени QN
[27:58.100 --> 28:00.100]  а не QN пополамтова,
[28:00.100 --> 28:02.100]  поэтому домножаем именно на Q,
[28:02.100 --> 28:04.100]  не на QQ.
[28:06.100 --> 28:08.100]  Не точно.
[28:10.100 --> 28:12.100]  О!
[28:14.100 --> 28:16.100]  Вот теперь хорошо.
[28:20.100 --> 28:22.100]  То есть, вот как мы можем увидеть, вот...
[28:22.100 --> 28:24.100]  Вот...
[28:26.100 --> 28:28.100]  Нет, ну, как бы, по крайней мере,
[28:28.100 --> 28:30.100]  сейчас должно быть вроде понятно, что происходит, да?
[28:30.100 --> 28:32.100]  Так вот, понятно,
[28:32.100 --> 28:34.100]  почему этот код действительно делает то,
[28:34.100 --> 28:36.100]  что мы себе заявляли?
[28:42.100 --> 28:44.100]  Ну, утверждение, что нажитые
[28:44.100 --> 28:46.100]  итерации QDEC это в точности
[28:46.100 --> 28:48.100]  Q в степени G.
[28:48.100 --> 28:50.100]  Но у нас в итерации всего типа...
[28:50.100 --> 28:52.100]  N пополам.
[28:52.100 --> 28:54.100]  Правильно.
[28:54.100 --> 28:56.100]  Да, но обратите внимание,
[28:56.100 --> 28:58.100]  мы на каждом шаре по два значения заполняем,
[28:58.100 --> 29:00.100]  пользуясь мистическим свойством.
[29:04.100 --> 29:06.100]  Ну, потому что здесь, как бы,
[29:06.100 --> 29:08.100]  я могу здесь порисовать еще, да?
[29:08.100 --> 29:10.100]  Что значит...
[29:12.100 --> 29:14.100]  То есть, A от QN
[29:14.100 --> 29:16.100]  в степени, соответственно,
[29:16.100 --> 29:18.100]  G плюс N пополам, видно тут что-нибудь?
[29:20.100 --> 29:22.100]  Ну да, это я вот покажу, откуда тут вот берется, да?
[29:22.100 --> 29:24.100]  Это что такое?
[29:24.100 --> 29:26.100]  По определению,
[29:26.100 --> 29:28.100]  это, как бы, что такое?
[29:28.100 --> 29:30.100]  Это, как мы выяснили, это равно
[29:30.100 --> 29:32.100]  значит,
[29:32.100 --> 29:34.100]  многочлен A0.
[29:34.100 --> 29:36.100]  Так, там видно, да?
[29:36.100 --> 29:38.100]  Да, видно.
[29:38.100 --> 29:40.100]  QN в степени вот этой штуки.
[29:40.100 --> 29:42.100]  Ну, короче.
[29:46.100 --> 29:48.100]  Вот.
[29:48.100 --> 29:50.100]  Ой.
[29:56.100 --> 29:58.100]  Это чего?
[29:58.100 --> 30:00.100]  A0 от QN в степени
[30:00.100 --> 30:02.100]  G плюс N пополам.
[30:04.100 --> 30:06.100]  Ну, это я типа в техе пишу.
[30:12.100 --> 30:14.100]  Да, да.
[30:14.100 --> 30:16.100]  Здесь еще в степени, как бы,
[30:16.100 --> 30:18.100]  еще два умножить на это.
[30:18.100 --> 30:20.100]  Мы же квадрат возводим, помните?
[30:28.100 --> 30:30.100]  Ну, типа...
[30:30.100 --> 30:32.100]  Да, два умножить на G плюс N пополам, да.
[30:32.100 --> 30:34.100]  Вот.
[30:34.100 --> 30:36.100]  Теперь, что это такое?
[30:36.100 --> 30:38.100]  Вот.
[30:42.100 --> 30:44.100]  Значит, теперь заметим, что
[30:44.100 --> 30:46.100]  QN в степени 2...
[30:46.100 --> 30:48.100]  То есть, это то же самое, что...
[30:48.100 --> 30:50.100]  Вот давайте я могу так написать выкладку.
[30:56.100 --> 30:58.100]  Ну, по факту, да.
[30:58.100 --> 31:00.100]  Да, два G не равно G плюс N пополам.
[31:00.100 --> 31:02.100]  Вот у нас же там
[31:02.100 --> 31:04.100]  минус стоит за этой строке, нет?
[31:04.100 --> 31:06.100]  Сейчас.
[31:06.100 --> 31:08.100]  Сейчас увидите, откуда он берется.
[31:08.100 --> 31:10.100]  Ну, пока тут в степени N пополам находится.
[31:10.100 --> 31:12.100]  Значит, начнем с того,
[31:12.100 --> 31:14.100]  что QN в степени N равно 1,
[31:14.100 --> 31:16.100]  поэтому вот это N я стираю аккуратно.
[31:24.100 --> 31:26.100]  Нет.
[31:26.100 --> 31:28.100]  Высчитаем значение многочлена A
[31:28.100 --> 31:30.100]  в точке QN в степени G плюс N пополам.
[31:32.100 --> 31:34.100]  Вот.
[31:34.100 --> 31:36.100]  Я тут пошаманил, пошаманил выкладку.
[31:36.100 --> 31:38.100]  Я обнаружил, что вот тут внутри
[31:38.100 --> 31:40.100]  стоит QN в степени 2G.
[31:40.100 --> 31:42.100]  Вот. А еще QN в степени G плюс N пополам.
[31:42.100 --> 31:44.100]  Еще я знаю, что QN в степени N пополам
[31:44.100 --> 31:46.100]  равно заведомо минус 1.
[31:50.100 --> 31:52.100]  Ну, потому что если оно не равно...
[31:52.100 --> 31:54.100]  То есть, жило было поле.
[31:54.100 --> 31:56.100]  И был в нем х,
[31:56.100 --> 31:58.100]  у которого квадрат был равен 1,
[31:58.100 --> 32:00.100]  но сам х единицы равен не был.
[32:00.100 --> 32:02.100]  Чего равен х?
[32:02.100 --> 32:04.100]  Простое упражнение на УКТЧ.
[32:04.100 --> 32:06.100]  Такое на оценку 0.
[32:06.100 --> 32:08.100]  Там, да, да, на оценку минус 3 даже где-то.
[32:10.100 --> 32:12.100]  Соответственно, что это минус 1.
[32:16.100 --> 32:18.100]  Так что получается вот N пополам
[32:18.100 --> 32:20.100]  мы тут превращаем вот в минус.
[32:20.100 --> 32:22.100]  И еще остается заметить,
[32:22.100 --> 32:24.100]  что QN в степени 2G.
[32:24.100 --> 32:26.100]  Это для нас то же самое, что
[32:26.100 --> 32:28.100]  QN пополам T в степени G.
[32:34.100 --> 32:36.100]  Мы в позиции A, G плюс N
[32:36.100 --> 32:38.100]  плюс пополам.
[32:38.100 --> 32:40.100]  G плюс N пополам, они
[32:40.100 --> 32:42.100]  в включении 2D-членов,
[32:42.100 --> 32:44.100]  2.Q в степени N.
[32:44.100 --> 32:46.100]  G плюс N пополам, да.
[32:48.100 --> 32:50.100]  Вот.
[32:50.100 --> 32:52.100]  То есть оказывается, видите, что
[32:52.100 --> 32:54.100]  формула оказывается абсолютно той же,
[32:54.100 --> 32:56.100]  что и для ожитого обычного,
[32:56.100 --> 32:58.100]  потому что для ожитого было бы написано абсолютно то же самое,
[32:58.100 --> 33:00.100]  только тут было бы плюсик, а не минусик.
[33:00.100 --> 33:02.100]  Поэтому здесь это
[33:02.100 --> 33:04.100]  превращается вот в такой красивый код.
[33:04.100 --> 33:06.100]  То есть здесь вот я специально
[33:06.100 --> 33:08.100]  написал U и V, потому что иначе пришлось бы
[33:08.100 --> 33:10.100]  делать вместо вот 2 умножения,
[33:10.100 --> 33:12.100]  как мы делаем 3.
[33:12.100 --> 33:14.100]  А это прям принципиальная оптимизация,
[33:14.100 --> 33:16.100]  которая так в полтора раза ускоряет
[33:16.100 --> 33:18.100]  код, ну почти в полтора.
[33:20.100 --> 33:22.100]  Вот.
[33:22.100 --> 33:24.100]  Да теперь у нас есть...
[33:24.100 --> 33:26.100]  Так, ну сейчас тут понятно,
[33:26.100 --> 33:28.100]  что тут написано?
[33:28.100 --> 33:30.100]  А у нас снизу нижняя закомментированная строчка там
[33:30.100 --> 33:32.100]  A0 от чего?
[33:32.100 --> 33:34.100]  От QN пополамтова
[33:34.100 --> 33:36.100]  в степени G.
[33:36.100 --> 33:38.100]  Это фигурные скобки такие.
[33:38.100 --> 33:40.100]  QN пополамтова.
[33:40.100 --> 33:42.100]  Да.
[33:42.100 --> 33:44.100]  Но в нашей терминологии QQ.
[33:46.100 --> 33:48.100]  У нас
[33:48.100 --> 33:50.100]  QN пополамтова в степени G.
[33:50.100 --> 33:52.100]  Да не в степени
[33:52.100 --> 33:54.100]  пополамтова.
[33:54.100 --> 33:56.100]  Это Q в степени... это QN пополамтова
[33:56.100 --> 33:58.100]  в степени G.
[33:58.100 --> 34:00.100]  Ну да, вот если вам так удобнее,
[34:00.100 --> 34:02.100]  можно так.
[34:08.100 --> 34:10.100]  Почему QN в степени
[34:10.100 --> 34:12.100]  пополамтова?
[34:12.100 --> 34:14.100]  Ну потому что, смотрите,
[34:14.100 --> 34:16.100]  потому что это, смотрите,
[34:16.100 --> 34:18.100]  прямое уравнение
[34:18.100 --> 34:20.100]  x квадрат... там
[34:20.100 --> 34:22.100]  x умножить на x равно 1.
[34:24.100 --> 34:26.100]  Это эквивалентно тому,
[34:28.100 --> 34:30.100]  что x умножить на x минус 1 равно 0.
[34:30.100 --> 34:32.100]  Это эквивалентно тому,
[34:32.100 --> 34:34.100]  что x минус 1 умножить
[34:34.100 --> 34:36.100]  на x плюс 1 равно 0.
[34:38.100 --> 34:40.100]  Но раз у нас...
[34:40.100 --> 34:42.100]  Ну вот.
[34:42.100 --> 34:44.100]  Так, ладно, там в аксиомах поля есть
[34:44.100 --> 34:46.100]  какая-нибудь там описание, что
[34:46.100 --> 34:48.100]  как бы два не нулевых элемента
[34:48.100 --> 34:50.100]  произведения дают что-то не нулевое.
[34:52.100 --> 34:54.100]  Да, в поле не отделитель нуля
[34:54.100 --> 34:56.100]  это часть определения поля.
[34:56.100 --> 34:58.100]  Так как это поле,
[34:58.100 --> 35:00.100]  то получается отсюда следует, что
[35:00.100 --> 35:02.100]  x лежит в множестве
[35:02.100 --> 35:04.100]  1 и минус 1.
[35:08.100 --> 35:10.100]  Ну in это типа... в техе это знак
[35:10.100 --> 35:12.100]  вот этой принадлежности множества.
[35:14.100 --> 35:16.100]  1х принадлежит сразу
[35:16.100 --> 35:18.100]  это множество.
[35:18.100 --> 35:20.100]  Ну он принадлежит этому множеству, кто-то из них.
[35:20.100 --> 35:22.100]  Вот и все, поэтому как бы...
[35:26.100 --> 35:28.100]  То есть я как бы в определении ровно по этой причине
[35:28.100 --> 35:30.100]  описал не равно 1, я написал более слабое
[35:30.100 --> 35:32.100]  требование, но на самом деле если бы я написал,
[35:32.100 --> 35:34.100]  что там равно минус 1, это было бы абсолютно
[35:34.100 --> 35:36.100]  то же самое. Вот.
[35:38.100 --> 35:40.100]  Так вот.
[35:40.100 --> 35:42.100]  Значит, так вот так у нас пишется
[35:42.100 --> 35:44.100]  ФФТ. Ну а теперь, видимо,
[35:44.100 --> 35:46.100]  пока нас, прежде чем
[35:46.100 --> 35:48.100]  нас выгнали, но пока нас не выгнали,
[35:48.100 --> 35:50.100]  сейчас мы, значит, ну у нас
[35:50.100 --> 35:52.100]  сегодня много целей и обратные
[35:52.100 --> 35:54.100]  все они, что приятно, независимы.
[35:56.100 --> 35:58.100]  Но пока раз уж мы смотрим на
[35:58.100 --> 36:00.100]  собственно этот код, давайте попробуем
[36:00.100 --> 36:02.100]  сделать первый шаг для того, чтобы сделать его
[36:02.100 --> 36:04.100]  не рекурсивным.
[36:04.100 --> 36:06.100]  Вот.
[36:08.100 --> 36:10.100]  Не.
[36:10.100 --> 36:12.100]  Значит, во-первых, скопировать.
[36:22.100 --> 36:24.100]  Значит, а теперь давайте себе представим
[36:24.100 --> 36:26.100]  вот что.
[36:26.100 --> 36:28.100]  Значит, можно
[36:28.100 --> 36:30.100]  на самом деле сделать так. Давайте себе представим,
[36:30.100 --> 36:32.100]  что мы
[36:32.100 --> 36:34.100]  не хотим ничего,
[36:34.100 --> 36:36.100]  что мы хотим, как бы,
[36:36.100 --> 36:38.100]  типа не вылезать за пределы
[36:38.100 --> 36:40.100]  А.
[36:42.100 --> 36:44.100]  Обратите внимание, от старого кода
[36:44.100 --> 36:46.100]  что поменяется? Поменяется только одно.
[36:52.100 --> 36:54.100]  Вот. Понятно, да?
[37:02.100 --> 37:04.100]  Да.
[37:04.100 --> 37:06.100]  Это действительно все.
[37:14.100 --> 37:16.100]  Да.
[37:26.100 --> 37:28.100]  Вот.
[37:28.100 --> 37:30.100]  Более того, можно совсем развлечься и даже
[37:30.100 --> 37:32.100]  еще подумать, а что делать, если мы хотим
[37:32.100 --> 37:34.100]  не вектора, а массивы?
[37:34.100 --> 37:36.100]  Ну, чтобы еще оптимальнее было.
[37:40.100 --> 37:42.100]  Чего? А, потому
[37:42.100 --> 37:44.100]  для этого надо переставить.
[37:44.100 --> 37:46.100]  Для этого надо элементы
[37:46.100 --> 37:48.100]  мистическим образом переставить, чтобы сначала шли
[37:48.100 --> 37:50.100]  0, 24, 6, 8, потом 1, 3, 5, 7.
[37:50.100 --> 37:52.100]  Если мы поверим, что у нас такое
[37:52.100 --> 37:54.100]  есть, то на самом деле
[37:54.100 --> 37:56.100]  это может работать следующим образом.
[37:56.100 --> 37:58.100]  Сейчас я еще одну версию
[37:58.100 --> 38:00.100]  напишу, смотрите.
[38:02.100 --> 38:04.100]  Ой, о боже.
[38:06.100 --> 38:08.100]  Сейчас увидите.
[38:12.100 --> 38:14.100]  Вот. Значит, смотрите, на самом деле
[38:14.100 --> 38:16.100]  то есть, как бы, делаем следующее.
[38:16.100 --> 38:18.100]  То есть, во-первых,
[38:22.100 --> 38:24.100]  а потому что массивы быстрее
[38:24.100 --> 38:26.100]  векторов работают.
[38:26.100 --> 38:28.100]  Но это, блин, может же сначала сделать
[38:28.100 --> 38:30.100]  оптимизации, которые не влияют
[38:30.100 --> 38:32.100]  на то, что век не век,
[38:32.100 --> 38:34.100]  а потом уже оптимизируем на что-то.
[38:34.100 --> 38:36.100]  Ну, вот.
[38:36.100 --> 38:38.100]  Не, ну как? Ну, что такое глубоко?
[38:38.100 --> 38:40.100]  Пока как бы не глубоко. Тут как бы
[38:40.100 --> 38:42.100]  нет, тут как бы, все равно, следующая идея,
[38:42.100 --> 38:44.100]  которая нам все равно понадобится.
[38:44.100 --> 38:46.100]  Значит, смотрите.
[38:46.100 --> 38:48.100]  Вот единственная проблема, что я тут, конечно,
[38:48.100 --> 38:50.100]  мог забабахать вот что-нибудь, типа
[38:50.100 --> 38:52.100]  там f, там, я не знаю,
[38:52.100 --> 38:54.100]  звездочка а0 равно нью, там,
[38:54.100 --> 38:56.100]  я не знаю, нью, f,
[38:56.100 --> 38:58.100]  а тент пополам, вот да,
[38:58.100 --> 39:00.100]  но согласен, если честно.
[39:00.100 --> 39:02.100]  По времени мы
[39:02.100 --> 39:04.100]  зафигеем,
[39:04.100 --> 39:06.100]  поэтому мы здесь
[39:06.100 --> 39:08.100]  делаем так.
[39:08.100 --> 39:10.100]  Давайте пока не убирать векторов, берем векторов.
[39:10.100 --> 39:12.100]  Смотрите, сейчас будет читерство красивое.
[39:12.100 --> 39:14.100]  Переставить элементы
[39:14.100 --> 39:16.100]  а.
[39:16.100 --> 39:18.100]  Нет, ну, скажем так, просто за оставшееся
[39:18.100 --> 39:20.100]  время мы этого не сделаем.
[39:20.100 --> 39:22.100]  Мы только подготовиться успеем.
[39:30.100 --> 39:32.100]  Нет, мы его не удалили, мы его теперь передаем.
[39:32.100 --> 39:48.100]  Вот, допустим, что у нас есть
[39:48.100 --> 39:50.100]  мистическая функция,
[39:50.100 --> 39:52.100]  которая умеет заод
[39:52.100 --> 39:54.100]  единицы дополнительной памяти
[39:54.100 --> 39:56.100]  вот так переставлять элементы,
[39:56.100 --> 39:58.100]  желательно еще и за линию, чтобы работало.
[39:58.100 --> 40:00.100]  Ну, как со свопом?
[40:04.100 --> 40:06.100]  А, а,
[40:06.100 --> 40:08.100]  вперед забегаешь, вот конкретно,
[40:08.100 --> 40:10.100]  если надо только вот на
[40:10.100 --> 40:12.100]  сначала четное, потом нечетное,
[40:12.100 --> 40:14.100]  ты так просто так не сделаешь.
[40:16.100 --> 40:18.100]  Вот, значит, fft теперь запускается,
[40:18.100 --> 40:20.100]  что такое массив а0?
[40:20.100 --> 40:22.100]  Ну, на самом деле теперь массив а0
[40:22.100 --> 40:24.100]  это просто массив, на самом деле,
[40:24.100 --> 40:26.100]  это просто массив, на самом деле,
[40:26.100 --> 40:28.100]  массив а0 это просто массив, начинающийся там же,
[40:28.100 --> 40:30.100]  где а длинным пополам,
[40:30.100 --> 40:32.100]  а массив а1 это теперь
[40:32.100 --> 40:34.100]  массив, который начинается
[40:34.100 --> 40:36.100]  в месте а плюс
[40:36.100 --> 40:38.100]  и пополам и тоже длинным пополам.
[40:42.100 --> 40:44.100]  Так, и теперь как удалить
[40:44.100 --> 40:46.100]  вот это вот а0?
[40:48.100 --> 40:50.100]  Удалить его неожиданно
[40:50.100 --> 40:52.100]  просто.
[40:56.100 --> 40:58.100]  Да, то есть на самом деле вот так надо.
[41:10.100 --> 41:12.100]  Нет, обратите внимание, кстати,
[41:12.100 --> 41:14.100]  почему тут уев прям так отдельно выносится,
[41:14.100 --> 41:16.100]  видите, что магия заключается в том,
[41:16.100 --> 41:18.100]  что вы берете два элемента и заменяете
[41:18.100 --> 41:20.100]  их на два элемента.
[41:22.100 --> 41:24.100]  Ага.
[41:26.100 --> 41:28.100]  Вот получается такая красота.
[41:28.100 --> 41:30.100]  Есть еще одна эпичная оптимизация,
[41:30.100 --> 41:32.100]  давайте последнее, что скажу.
[41:32.100 --> 41:34.100]  Прям тут сразу хочется ее делать,
[41:34.100 --> 41:36.100]  потому что это такая важная
[41:36.100 --> 41:38.100]  оптимизация. Вот что мы делаем
[41:38.100 --> 41:40.100]  n log n раз? Обращаемся к массиву, правда?
[41:40.100 --> 41:42.100]  То есть прибавляем
[41:42.100 --> 41:44.100]  к а, вот эти жишки там и так далее.
[41:44.100 --> 41:46.100]  Зачем?
[41:46.100 --> 41:48.100]  На самом деле это делается
[41:48.100 --> 41:50.100]  вообще совсем мистическим образом.
[41:50.100 --> 41:52.100]  Внимание.
[41:52.100 --> 41:54.100]  Значит, f
[41:54.100 --> 41:56.100]  звездочка st равно a,
[41:56.100 --> 41:58.100]  звездочка, допустим,
[41:58.100 --> 42:00.100]  mid равно a плюс
[42:00.100 --> 42:02.100]  n пополам.
[42:06.100 --> 42:08.100]  Значит, звездочка, допустим,
[42:10.100 --> 42:12.100]  так,
[42:12.100 --> 42:14.100]  ukl
[42:14.100 --> 42:16.100]  равно
[42:18.100 --> 42:20.100]  указатель?
[42:20.100 --> 42:22.100]  Да.
[42:22.100 --> 42:24.100]  Что за мем?
[42:30.100 --> 42:32.100]  Вот.
[42:32.100 --> 42:34.100]  ukl, ukr.
[42:34.100 --> 42:36.100]  Значит, сейчас вот это, сейчас просто весело будет.
[42:36.100 --> 42:38.100]  Сейчас вот вместо вот этой магии.
[42:38.100 --> 42:40.100]  А ukl точно
[42:40.100 --> 42:42.100]  у нас указатель?
[42:42.100 --> 42:44.100]  Потому что ukr
[42:44.100 --> 42:46.100]  значит, сейчас
[42:46.100 --> 42:48.100]  сейчас вообще
[42:48.100 --> 42:50.100]  хорошо будет.
[42:50.100 --> 42:52.100]  f u равно
[42:52.100 --> 42:54.100]  ukl
[42:54.100 --> 42:56.100]  f v равно
[42:56.100 --> 42:58.100]  ukr
[42:58.100 --> 43:00.100]  ukl
[43:00.100 --> 43:02.100]  равно u плюс, а, ну да,
[43:02.100 --> 43:04.100]  пардон, конечно, тут умножить надо обязательно
[43:04.100 --> 43:06.100]  на кудек обязательно.
[43:08.100 --> 43:10.100]  ukr равно u минус
[43:10.100 --> 43:12.100]  v.
[43:14.100 --> 43:16.100]  Все-таки ошибка.
[43:16.100 --> 43:18.100]  Что?
[43:18.100 --> 43:20.100]  А,
[43:20.100 --> 43:22.100]  кошмар какой.
[43:22.100 --> 43:24.100]  А так?
[43:24.100 --> 43:26.100]  Во.
[43:28.100 --> 43:30.100]  Так, че?
[43:32.100 --> 43:34.100]  То есть у нас просто st min
[43:34.100 --> 43:36.100]  не существует, чтобы существовать?
[43:36.100 --> 43:38.100]  Чего?
[43:38.100 --> 43:40.100]  Да, мы что-то очень странное написали.
[43:40.100 --> 43:42.100]  Не, на самом деле он существует для того, чтобы
[43:42.100 --> 43:44.100]  я тут
[43:44.100 --> 43:46.100]  написал, вот вместо вот этого
[43:46.100 --> 43:48.100]  фора я написал
[43:48.100 --> 43:50.100]  while
[43:50.100 --> 43:52.100]  ukl неравно
[43:52.100 --> 43:54.100]  mid.
[43:56.100 --> 43:58.100]  А пригодится потом.
[43:58.100 --> 44:00.100]  Сейчас ни зачем.
[44:00.100 --> 44:02.100]  Ах да.
[44:02.100 --> 44:04.100]  Сейчас ни зачем.
[44:06.100 --> 44:08.100]  Нет.
[44:08.100 --> 44:10.100]  Но мы ей
[44:10.100 --> 44:12.100]  просто воспользуемся, когда мы писали некурсивный код,
[44:12.100 --> 44:14.100]  поэтому я ее оставлю.
[44:16.100 --> 44:18.100]  То есть смотрите, вот такая теперь у нас красота.
[44:18.100 --> 44:20.100]  Если я сейчас вот это все
[44:20.100 --> 44:22.100]  комментарии уберу,
[44:26.100 --> 44:28.100]  то получится
[44:28.100 --> 44:30.100]  вот такой красивый код.
[44:36.100 --> 44:38.100]  Ну, можно и убрать.
[44:42.100 --> 44:44.100]  Ну, как сказать, ладно, пока их
[44:44.100 --> 44:46.100]  не трогайте, может и не сильно,
[44:46.100 --> 44:48.100]  но тут как бы
[44:48.100 --> 44:50.100]  ну, скажем так,
[44:50.100 --> 44:52.100]  чуть-чуть дольше должны
[44:52.100 --> 44:54.100]  работать, просто потому что
[44:54.100 --> 44:56.100]  оберточка все-таки.
[44:58.100 --> 45:00.100]  То есть итератор будет тот же самый указатель,
[45:00.100 --> 45:02.100]  но там будут какие-то навороты, поэтому чуть-чуть дольше
[45:02.100 --> 45:04.100]  наверное будет.
[45:14.100 --> 45:16.100]  Нет, ну да, просто смотрите, тут как бы важная
[45:16.100 --> 45:18.100]  фишка всегда заключается в том, что
[45:20.100 --> 45:22.100]  нет, просто тут важная фишка, что мы
[45:22.100 --> 45:24.100]  значение массива не вычисляем, тут
[45:24.100 --> 45:26.100]  у этого кода еще приятная конечно
[45:26.100 --> 45:28.100]  такая приятность есть, что
[45:28.100 --> 45:30.100]  вы на самом деле к памяти обращаетесь подряд,
[45:30.100 --> 45:32.100]  а не рандомно.
[45:32.100 --> 45:34.100]  Помните, мы когда обсуждали внешнюю сортировку,
[45:34.100 --> 45:36.100]  мы говорили о том, что обращаться
[45:36.100 --> 45:38.100]  к памяти подряд гораздо быстрее,
[45:38.100 --> 45:40.100]  чем обращаться в рандомное значение.
[45:40.100 --> 45:42.100]  Вот.
[45:42.100 --> 45:44.100]  И вот здесь у нас, ну вот и здесь
[45:44.100 --> 45:46.100]  это отчасти этого иллюстрация,
[45:46.100 --> 45:48.100]  ну то есть конечно это, и здесь в общем-то
[45:48.100 --> 45:50.100]  это тоже было так.
[45:50.100 --> 45:52.100]  Ну вот, но здесь как бы мы этим совсем
[45:52.100 --> 45:54.100]  уже воспользовались, то есть видите, мы там даже не плюс-плюсов
[45:54.100 --> 45:56.100]  никаких не делали, то есть плюс-плюс
[45:56.100 --> 45:58.100]  делает только тот, то есть можно тут,
[45:58.100 --> 46:00.100]  то есть на самом деле правильно тут вообще писать вот так.
[46:04.100 --> 46:06.100]  Вот тут сейчас
[46:06.100 --> 46:08.100]  совсем взбодробительно будет.
[46:10.100 --> 46:12.100]  Пушка, да.
[46:20.100 --> 46:22.100]  Вот на самом деле это вот так пишется.
[46:24.100 --> 46:26.100]  Ну при большом желании можете еще
[46:26.100 --> 46:28.100]  в эту вот инициализацию еще
[46:28.100 --> 46:30.100]  кудек впихнуть,
[46:30.100 --> 46:32.100]  но...
[46:32.100 --> 46:34.100]  А почему?
[46:36.100 --> 46:38.100]  Это очевидно.
[46:38.100 --> 46:40.100]  Ну это очевидно.
[46:40.100 --> 46:42.100]  Ну слава, ну и ладно,
[46:42.100 --> 46:44.100]  но я не знаю, да, а что?
[46:44.100 --> 46:46.100]  Мещерин дал вам уже задание написать
[46:46.100 --> 46:48.100]  длинную арифметику? Да.
[46:48.100 --> 46:50.100]  Через FFT еще недели назад. А,
[46:50.100 --> 46:52.100]  молодец. Что-то ты и хотел. Так.
[46:52.100 --> 46:54.100]  Ладно, ребята, значит,
[46:54.100 --> 46:56.100]  поехали. Итак,
[46:56.100 --> 46:58.100]  на чем мы остановились?
[46:58.100 --> 47:00.100]  Мы остановились вот на этом
[47:00.100 --> 47:02.100]  вот.
[47:02.100 --> 47:04.100]  Мы обнаружили, что в принципе рекурсивный
[47:04.100 --> 47:06.100]  FFT можно написать в одном
[47:06.100 --> 47:08.100]  красивом массиве без этих
[47:08.100 --> 47:10.100]  ваших там векторов,
[47:10.100 --> 47:12.100]  если у нас есть
[47:12.100 --> 47:14.100]  вот такая мистическая функция.
[47:14.100 --> 47:16.100]  Вот.
[47:16.100 --> 47:18.100]  Желать то, чтобы она работала за
[47:18.100 --> 47:20.100]  O от N времени и O от единицы
[47:20.100 --> 47:22.100]  дополнительной памяти.
[47:22.100 --> 47:24.100]  Как это делать, я не знаю.
[47:24.100 --> 47:26.100]  Не в последнюю очередь,
[47:26.100 --> 47:28.100]  потому что нам это на самом деле
[47:28.100 --> 47:30.100]  не надо.
[47:30.100 --> 47:32.100]  Почему?
[47:32.100 --> 47:34.100]  Потому что на самом деле следующая цель,
[47:34.100 --> 47:36.100]  которая у нас будет, давайте просто наконец
[47:36.100 --> 47:38.100]  избавимся от рекурсии.
[47:40.100 --> 47:42.100]  Извините, то есть мы не будем
[47:42.100 --> 47:44.100]  обвалить эти элементы в таком порядке?
[47:44.100 --> 47:46.100]  Да.
[47:48.100 --> 47:50.100]  И не будем мы это делать вот
[47:50.100 --> 47:52.100]  почему.
[47:56.100 --> 47:58.100]  Не судьба.
[47:58.100 --> 48:00.100]  Ага, сейчас.
[48:00.100 --> 48:02.100]  Так, мечта.
[48:04.100 --> 48:06.100]  Сейчас вы увидите
[48:06.100 --> 48:08.100]  собственно почему.
[48:08.100 --> 48:10.100]  Потому что на самом деле, смотрите.
[48:10.100 --> 48:12.100]  Давайте вот внимательно посмотрите.
[48:12.100 --> 48:14.100]  Нижняя часть заключается в том, что
[48:14.100 --> 48:16.100]  у нас есть массив
[48:16.100 --> 48:18.100]  и мы с ним просто
[48:18.100 --> 48:20.100]  делаем маленькое линейное шаманство.
[48:22.100 --> 48:24.100]  Вот.
[48:24.100 --> 48:26.100]  Значит, да.
[48:26.100 --> 48:28.100]  Чтобы было действительно максимально
[48:28.100 --> 48:30.100]  хорошо, сейчас я покажу.
[48:30.100 --> 48:32.100]  Сейчас я буду показывать на примере
[48:32.100 --> 48:34.100]  Смотрите.
[48:34.100 --> 48:36.100]  А нулевое.
[48:36.100 --> 48:38.100]  А первое. А второе.
[48:38.100 --> 48:40.100]  А третье. О маркер.
[48:40.100 --> 48:42.100]  Хорошо пишет.
[48:42.100 --> 48:44.100]  Так что смотрите.
[48:44.100 --> 48:46.100]  Вот.
[48:46.100 --> 48:48.100]  О.
[48:50.100 --> 48:52.100]  О. Отлично.
[48:54.100 --> 48:56.100]  Так вот. В чем заключается шаманство?
[48:58.100 --> 49:00.100]  Если верить этому коду,
[49:00.100 --> 49:02.100]  то происходит следующее.
[49:02.100 --> 49:04.100]  Мы его переставляем вот в таком порядке.
[49:04.100 --> 49:06.100]  Все элементы.
[49:08.100 --> 49:10.100]  А может не надо примеры длины миллиард
[49:10.100 --> 49:12.100]  рассматривать?
[49:12.100 --> 49:14.100]  Я не рассматриваю примеры длины миллиард.
[49:14.100 --> 49:16.100]  Я рассматриваю пример длины 16.
[49:18.100 --> 49:20.100]  Нет, скажу так.
[49:20.100 --> 49:22.100]  Я в свое время пытался проводить
[49:22.100 --> 49:24.100]  на примеры 8, это вообще ненаглядно.
[49:24.100 --> 49:26.100]  А 57 – степень двойки.
[49:26.100 --> 49:28.100]  Нет, я могу нарисовать 64.
[49:30.100 --> 49:32.100]  Нет, ну 64, то знаете,
[49:32.100 --> 49:34.100]  я отдельно в студии должен написать
[49:34.100 --> 49:36.100]  что-нибудь за 3 часа, а потом перемотка
[49:36.100 --> 49:38.100]  под балалайчик.
[49:38.100 --> 49:40.100]  Значит, смотрите.
[49:40.100 --> 49:42.100]  Не волнуйтесь, на самом деле это недолго.
[49:42.100 --> 49:44.100]  Итак, мы распилили
[49:44.100 --> 49:46.100]  на четные индексы и нечетные индексы.
[49:46.100 --> 49:48.100]  Дальше происходит
[49:48.100 --> 49:50.100]  тут какое-то независимое
[49:50.100 --> 49:52.100]  шамань-шаманство.
[49:52.100 --> 49:54.100]  Тут происходит независимое шамань-шаманство.
[49:54.100 --> 49:56.100]  Потом мы пробегаем двумя указателями
[49:56.100 --> 49:58.100]  по вот этим элементам
[49:58.100 --> 50:00.100]  и каждую пару там тоже
[50:00.100 --> 50:02.100]  перешаманиваем.
[50:02.100 --> 50:04.100]  Два указателя у нас называются
[50:04.100 --> 50:06.100]  УК-левый и УК-правый.
[50:06.100 --> 50:08.100]  Логично, да?
[50:08.100 --> 50:10.100]  То есть как бы все честно
[50:10.100 --> 50:12.100]  и на понятном языке.
[50:14.100 --> 50:16.100]  А теперь мы искать такая идея.
[50:16.100 --> 50:18.100]  А что мы делаем?
[50:18.100 --> 50:20.100]  Давайте попробуем развернуть следующий слой рекурсии.
[50:20.100 --> 50:22.100]  Следующий слой рекурсии
[50:22.100 --> 50:24.100]  скажет нам,
[50:24.100 --> 50:26.100]  что мы, значит, вот этот подмассив
[50:26.100 --> 50:28.100]  распиливаем на A0,
[50:28.100 --> 50:30.100]  A4, A8, A12,
[50:30.100 --> 50:32.100]  а потом A2, A6,
[50:32.100 --> 50:34.100]  A10, A14,
[50:36.100 --> 50:38.100]  потом A1, A5,
[50:38.100 --> 50:40.100]  A9, A13,
[50:40.100 --> 50:42.100]  A3, A7,
[50:42.100 --> 50:44.100]  A11, A15.
[50:50.100 --> 50:52.100]  Доделаем, посмотрим.
[50:56.100 --> 50:58.100]  Смотрите, то есть можно было
[50:58.100 --> 51:00.100]  два слоя рекурсии
[51:00.100 --> 51:02.100]  на самом деле развернуть.
[51:02.100 --> 51:04.100]  Давайте упорядочим элементы сразу вот так.
[51:04.100 --> 51:06.100]  Потом внутри каждого массива
[51:06.100 --> 51:08.100]  длины 4 сделаем вот это вот шамань-шамань.
[51:10.100 --> 51:12.100]  Потом, значит, по этой паре
[51:12.100 --> 51:14.100]  пробежимся с ку-ку,
[51:14.100 --> 51:16.100]  здесь пробежимся
[51:16.100 --> 51:18.100]  по этой паре с ку-ку,
[51:18.100 --> 51:20.100]  а вот потом по этой уже паре
[51:20.100 --> 51:22.100]  полученных массивов пробежимся с ку-ку.
[51:24.100 --> 51:26.100]  Понятно, что я сказал, да?
[51:26.100 --> 51:28.100]  Вот.
[51:28.100 --> 51:30.100]  Ну, вы помните, ку-ку это у нас
[51:30.100 --> 51:32.100]  ку в квадрате, да?
[51:32.100 --> 51:34.100]  Вот.
[51:34.100 --> 51:36.100]  Ку-ку, да. Ну, можно ее называть ку-кушкой,
[51:36.100 --> 51:38.100]  если хотите, да.
[51:38.100 --> 51:40.100]  Вот. Ну так вот.
[51:40.100 --> 51:42.100]  Давайте разберем следующий слой рекурсии.
[51:42.100 --> 51:44.100]  Да, этот слой рекурсии
[51:44.100 --> 51:46.100]  мы сделали с ку-ку,
[51:46.100 --> 51:48.100]  этот сделали с ку-ку.
[51:50.100 --> 51:52.100]  Ну, следовательно, слой с ку-ку...
[51:52.100 --> 51:54.100]  Не, ку-ку ку-ку.
[51:54.100 --> 51:56.100]  А, да, действительно.
[51:56.100 --> 51:58.100]  Почему?
[51:58.100 --> 52:00.100]  Ку в четвертый, да.
[52:00.100 --> 52:02.100]  А на экзамене будут спрашивать
[52:02.100 --> 52:04.100]  тедолы при ализации
[52:04.100 --> 52:06.100]  физико-физики?
[52:06.100 --> 52:08.100]  Не, ну это святое, ребят.
[52:08.100 --> 52:10.100]  Более того, вам на любом контесте,
[52:10.100 --> 52:12.100]  где задача на фурье, будут спрашивать.
[52:12.100 --> 52:14.100]  Потому что
[52:14.100 --> 52:16.100]  дело в том, что то, к чему мы стремились,
[52:16.100 --> 52:18.100]  работает 10 раз быстрее.
[52:18.100 --> 52:20.100]  Поэтому, как вы напишите рекурсию, вы получите свой трейл
[52:20.100 --> 52:22.100]  и будете сразу скажут, ну что, нет, фурье писали,
[52:22.100 --> 52:24.100]  ну просто, а что, ну просто
[52:24.100 --> 52:26.100]  наш НЛОГН 10 раз быстрее НЛОГНа вашего,
[52:26.100 --> 52:28.100]  ну что мы можем сделать?
[52:28.100 --> 52:30.100]  Мы не оптимизировали,
[52:30.100 --> 52:32.100]  ну просто, да. Ну, то есть оптимизировали,
[52:32.100 --> 52:34.100]  ну вот, соответственно. Вот.
[52:34.100 --> 52:36.100]  Так вот.
[52:36.100 --> 52:38.100]  Значит, есть так
[52:38.100 --> 52:40.100]  разворачивать, то получается следующее.
[52:40.100 --> 52:42.100]  У нас есть вот такие массивы.
[52:42.100 --> 52:44.100]  Значит, А4, А12,
[52:44.100 --> 52:46.100]  А2, А10, А6, А14.
[52:46.100 --> 52:48.100]  В общем, короче, да, такие.
[52:48.100 --> 52:50.100]  Так, я тут лучше уже перемотаю,
[52:50.100 --> 52:52.100]  конечно, да, тут.
[52:52.100 --> 52:54.100]  Так.
[52:54.100 --> 52:56.100]  3А11, А7 и А15.
[52:58.100 --> 53:00.100]  Ну и что, что да, ну вот.
[53:00.100 --> 53:02.100]  То есть, теперь надо сделать шамань-шамань на вот
[53:02.100 --> 53:04.100]  в восьми массивах длины 2.
[53:04.100 --> 53:06.100]  А потом уже делать сначала вот
[53:06.100 --> 53:08.100]  два указателя
[53:08.100 --> 53:10.100]  с кув четвертый на вот этих вот
[53:10.100 --> 53:12.100]  парах массивах.
[53:12.100 --> 53:14.100]  Там пум-пум и пум-пум.
[53:14.100 --> 53:16.100]  Ну вот, ну потом, а потом, соответственно,
[53:16.100 --> 53:18.100]  вот на этих парах с ку-ку и нас с этой ку.
[53:18.100 --> 53:20.100]  Вот.
[53:20.100 --> 53:22.100]  Господи.
[53:22.100 --> 53:24.100]  Вот знаете, вообще считается,
[53:24.100 --> 53:26.100]  что шутка постов Дориной несколько раз,
[53:26.100 --> 53:28.100]  она как бы перестает быть смешной.
[53:28.100 --> 53:30.100]  Что-то по вам не скажешь.
[53:30.100 --> 53:32.100]  После некоторой ретерации
[53:32.100 --> 53:34.100]  она начинает наоборот наэмбирать.
[53:34.100 --> 53:36.100]  Там пора разыграть другие краски.
[53:36.100 --> 53:38.100]  Ну это да. Нет, ну нет, как сказать,
[53:38.100 --> 53:40.100]  если она референ, это, конечно, да.
[53:40.100 --> 53:42.100]  Но тогда она хоть в разных контекстах
[53:42.100 --> 53:44.100]  должна возникать, что ли, я не знаю.
[53:44.100 --> 53:46.100]  Вот.
[53:46.100 --> 53:48.100]  Ну ладно.
[53:50.100 --> 53:52.100]  Не, классно было бы так биатлоны, конечно,
[53:52.100 --> 53:54.100]  выигрывать с одной и той же шуткой.
[53:54.100 --> 53:56.100]  Ну.
[53:56.100 --> 53:58.100]  Так. Вот. И наконец.
[53:58.100 --> 54:00.100]  Классно было бы ICPC
[54:00.100 --> 54:02.100]  выигрывать с одним и тем же кодом.
[54:02.100 --> 54:04.100]  Ну.
[54:04.100 --> 54:06.100]  Да, да, да.
[54:06.100 --> 54:08.100]  Ну.
[54:08.100 --> 54:10.100]  Нет, там хороший год был,
[54:10.100 --> 54:12.100]  хорошие задачи такие, халявники.
[54:12.100 --> 54:14.100]  Ну.
[54:14.100 --> 54:16.100]  Так вот.
[54:16.100 --> 54:18.100]  Значит, смотрите дальше.
[54:20.100 --> 54:22.100]  Ну вот. И наконец,
[54:22.100 --> 54:24.100]  когда мы берем совсем уровень, то есть мы уже
[54:24.100 --> 54:26.100]  переходим в рекурсию, когда у нас
[54:26.100 --> 54:28.100]  запускаются массивы длины 1. Теперь надо
[54:28.100 --> 54:30.100]  сделать с ними шаманство, а потом
[54:30.100 --> 54:32.100]  уже сливать. Но шаманство
[54:32.100 --> 54:34.100]  с массивом длины 1 сделать
[54:34.100 --> 54:36.100]  очень просто. Это шаманство заключается в том, чтобы
[54:36.100 --> 54:38.100]  ничего не делать, сказать,
[54:38.100 --> 54:40.100]  что все в порядке.
[54:40.100 --> 54:42.100]  То есть в результате
[54:42.100 --> 54:44.100]  мы получаем, что на самом деле,
[54:44.100 --> 54:46.100]  как избавиться от рекурсии, это очень просто.
[54:46.100 --> 54:48.100]  Надо просто научиться вот не так
[54:48.100 --> 54:50.100]  переставлять элементы, а сразу
[54:50.100 --> 54:52.100]  вот таким образом.
[54:52.100 --> 54:54.100]  Обратите внимание.
[54:54.100 --> 54:56.100]  Просто вот таким образом переставляем.
[54:56.100 --> 54:58.100]  А потом после этого
[54:58.100 --> 55:00.100]  ну, соответственно, значит
[55:00.100 --> 55:02.100]  сливаем.
[55:02.100 --> 55:04.100]  Да, теперь вы искать вопрос.
[55:04.100 --> 55:06.100]  Как переставить элементы вот таким
[55:06.100 --> 55:08.100]  образом?
[55:08.100 --> 55:10.100]  Чтобы получить ответ, на самом деле давайте просто
[55:10.100 --> 55:12.100]  запишем эти индексы
[55:12.100 --> 55:14.100]  в двоичной системе счастлей.
[55:14.100 --> 55:16.100]  Ну, у нас 16,2 в четвертой,
[55:16.100 --> 55:18.100]  поэтому пишу 4 бита.
[55:18.100 --> 55:20.100]  0,0,0,0. Тут
[55:20.100 --> 55:22.100]  1,0,0,0. У четверки будет 0,1,0,0.
[55:22.100 --> 55:24.100]  Так, тут у нас 12.
[55:24.100 --> 55:26.100]  Это будет у нас сколько? Это будет 1,1,0,0.
[55:26.100 --> 55:28.100]  Тут будет 0,0,1,0.
[55:28.100 --> 55:30.100]  Тут будет 1,0,1,0. Теперь
[55:30.100 --> 55:32.100]  вот можете пока
[55:32.100 --> 55:34.100]  угадать, как я так быстро
[55:34.100 --> 55:36.100]  пишу.
[55:36.100 --> 55:38.100]  Ой, ой, ой, ой, ой, ой.
[55:38.100 --> 55:40.100]  Ой, ой, ой, ой, ой, ой.
[55:40.100 --> 55:42.100]  Вы пропустили? Нет.
[55:42.100 --> 55:44.100]  Нет.
[55:44.100 --> 55:46.100]  Нет, подожди.
[55:46.100 --> 55:48.100]  Это просто же не в первый раз.
[55:48.100 --> 55:50.100]  Высказите, не запомните.
[55:50.100 --> 55:52.100]  Чего, чего?
[55:52.100 --> 55:54.100]  Нет.
[55:54.100 --> 55:56.100]  Нет, у меня все сошлось. Я ничего не пропустил.
[55:56.100 --> 55:58.100]  Да?
[55:58.100 --> 56:00.100]  То есть, обратите внимание.
[56:00.100 --> 56:02.100]  Просто если вы причитаете то же самое справа-налево,
[56:02.100 --> 56:04.100]  то это будет число 0,1,2,3,4,5.
[56:04.100 --> 56:06.100]  Нет, справа-налево это будет 15,
[56:06.100 --> 56:08.100]  7, 11, 13.
[56:08.100 --> 56:10.100]  Нет, я имею в виду, каждый из этих чисел
[56:10.100 --> 56:12.100]  вы причитаете. Вот возьмите биты.
[56:12.100 --> 56:14.100]  Не слева-направо причитайте, что вот тут был 12.
[56:14.100 --> 56:16.100]  Справа-налево. То есть, 0,0,1,1.
[56:16.100 --> 56:18.100]  И это тройбан.
[56:18.100 --> 56:20.100]  И, в общем-то, ничего удивительного
[56:20.100 --> 56:22.100]  в этом нет. Потому что, по большому счету,
[56:22.100 --> 56:24.100]  что вы сделали? Вы отсортировали
[56:24.100 --> 56:26.100]  числа по младшему биту.
[56:26.100 --> 56:28.100]  Сначала четное, потом нечетное.
[56:28.100 --> 56:30.100]  Второй параметр.
[56:30.100 --> 56:32.100]  Второй по младшести бит. Потом третий, четвертый
[56:32.100 --> 56:34.100]  и пятый.
[56:34.100 --> 56:36.100]  Ну, собственно, ничего удивительного.
[56:36.100 --> 56:38.100]  То есть, с тем же успехом вы могли просто взять
[56:38.100 --> 56:40.100]  четырехбитное представление этих чисел,
[56:40.100 --> 56:42.100]  развернуть их и отсортировать по ним.
[56:42.100 --> 56:44.100]  Или, что то же самое,
[56:44.100 --> 56:46.100]  для каждого числа
[56:46.100 --> 56:48.100]  просто сказать, вот у меня есть число,
[56:48.100 --> 56:50.100]  давайте я его четырехбитное представление разверну.
[56:50.100 --> 56:52.100]  Вот у меня было пять.
[56:52.100 --> 56:54.100]  Вот я его развернул, у меня сколько там получилось?
[56:54.100 --> 56:56.100]  Отлично, значит, здесь должно стоять десятое число.
[56:56.100 --> 56:58.100]  А на десятой позиции,
[56:58.100 --> 57:00.100]  кстати, пятая.
[57:00.100 --> 57:02.100]  Очень удобно, правда?
[57:02.100 --> 57:04.100]  Невероятно.
[57:04.100 --> 57:06.100]  Вот. В результате
[57:06.100 --> 57:08.100]  это приводит нас к тому,
[57:08.100 --> 57:10.100]  что наш супер ФФТ
[57:10.100 --> 57:12.100]  превращается в следующее.
[57:16.100 --> 57:18.100]  Вот, значит, смотрите.
[57:18.100 --> 57:20.100]  Так.
[57:22.100 --> 57:24.100]  Так.
[57:24.100 --> 57:26.100]  Вот.
[57:26.100 --> 57:28.100]  То есть, в результате
[57:28.100 --> 57:30.100]  магия работает так.
[57:36.100 --> 57:38.100]  Значит, можно сделать так.
[57:38.100 --> 57:40.100]  g меньше n плюс g.
[57:40.100 --> 57:42.100]  Значит, пишем так. int
[57:42.100 --> 57:44.100]  rev g равно
[57:44.100 --> 57:46.100]  reverse
[57:46.100 --> 57:48.100]  reverse
[57:48.100 --> 57:50.100]  bits
[57:50.100 --> 57:52.100]  от g и n.
[57:52.100 --> 57:54.100]  Тут обязательно надо просто по числу g, вы же однозначно не скажете,
[57:54.100 --> 57:56.100]  сколько в нем bit, да, потому что
[57:56.100 --> 57:58.100]  ведущие нули, не понятно, сколько ведущих нулей вам надо.
[57:58.100 --> 58:00.100]  Вот. Поэтому пишем reverse bits.
[58:00.100 --> 58:02.100]  Но это функция, которую там можно самостоятельно реализовать.
[58:06.100 --> 58:08.100]  n.
[58:08.100 --> 58:10.100]  А без разницы, можно так и так.
[58:10.100 --> 58:12.100]  Ну, просто вы там в форе будете писать
[58:12.100 --> 58:14.100]  плюс плюс k, или n делить равно 2?
[58:14.100 --> 58:16.100]  Можно писать n хресь хресь
[58:16.100 --> 58:18.100]  равно 1.
[58:18.100 --> 58:20.100]  Когда мы начали функцию
[58:20.100 --> 58:22.100]  передавать n, а
[58:22.100 --> 58:24.100]  когда статистически. Ну да.
[58:24.100 --> 58:26.100]  Ну вот. И дальше
[58:26.100 --> 58:28.100]  то есть, каждую пару надо посвапать.
[58:28.100 --> 58:30.100]  Тут применяется такой классический лайфхак,
[58:30.100 --> 58:32.100]  что если g меньше rev g, чтобы два раза не свапать,
[58:32.100 --> 58:34.100]  то пишем свап.
[58:36.100 --> 58:38.100]  Вот. Все.
[58:38.100 --> 58:40.100]  И никаких
[58:40.100 --> 58:42.100]  этих ваших рекурсий.
[58:42.100 --> 58:44.100]  А reverse bits
[58:44.100 --> 58:46.100]  это что?
[58:46.100 --> 58:48.100]  Чего? Чего не так?
[58:48.100 --> 58:50.100]  Reverse bits это что?
[58:50.100 --> 58:52.100]  Это
[58:52.100 --> 58:54.100]  взять битовое представление
[58:54.100 --> 58:56.100]  вот этого числа, log n bit
[58:56.100 --> 58:58.100]  и развернуть и записать его bit в обратном порядке.
[58:58.100 --> 59:00.100]  Самому написать или там есть что?
[59:00.100 --> 59:02.100]  Нет, самому написать, да.
[59:02.100 --> 59:04.100]  Сишность функции я такое не знаю.
[59:04.100 --> 59:06.100]  Ну вот. Чисто в этом был вопрос. Есть ли что-нибудь уже?
[59:06.100 --> 59:08.100]  Нет. Ну, если бы я знал,
[59:08.100 --> 59:10.100]  я бы, собственно, тут какую-нибудь такую функцию не писал.
[59:10.100 --> 59:12.100]  Ну да.
[59:14.100 --> 59:16.100]  Так вот.
[59:16.100 --> 59:18.100]  Значит, в результате. Что теперь надо делать?
[59:18.100 --> 59:20.100]  Теперь надо идти
[59:20.100 --> 59:22.100]  по... Теперь надо...
[59:22.100 --> 59:24.100]  Теперь надо сливать. Теперь пишем
[59:24.100 --> 59:26.100]  for int l равно
[59:26.100 --> 59:28.100]  2. Значит, будем сливать массивы длины l.
[59:28.100 --> 59:30.100]  Из двух массивов
[59:30.100 --> 59:32.100]  по l пополам. То есть, работать это будет вот так.
[59:32.100 --> 59:34.100]  Вот.
[59:34.100 --> 59:36.100]  Ну, напишу пока как понятнее.
[59:36.100 --> 59:38.100]  Ой, ну, господи.
[59:38.100 --> 59:40.100]  Пока так напишем, потом можем и...
[59:40.100 --> 59:42.100]  То есть, видите, чтобы написать вот эту оптимизацию.
[59:42.100 --> 59:44.100]  Мы же тоже там заморочились, да?
[59:44.100 --> 59:46.100]  Ну, и теперь идея такая.
[59:50.100 --> 59:52.100]  Начнем, пишу так.
[59:54.100 --> 59:56.100]  Ну, давайте так. Я вот могу написать.
[59:56.100 --> 59:58.100]  Скажите, пожалуйста, вот этот цифровар, он...
[59:58.100 --> 01:00:00.100]  Он сделал всю работу, он нам оставил массив, как мы хотели.
[01:00:00.100 --> 01:00:02.100]  А че bit.vg?
[01:00:02.100 --> 01:00:04.100]  Да?
[01:00:04.100 --> 01:00:06.100]  Ну, вот.
[01:00:06.100 --> 01:00:08.100]  Так, ну, во-первых, надо изобрести q,
[01:00:08.100 --> 01:00:10.100]  с какой степени у нас тут будет.
[01:00:10.100 --> 01:00:12.100]  f, c, q.
[01:00:12.100 --> 01:00:14.100]  Типа k-not.
[01:00:14.100 --> 01:00:16.100]  Значит, оно будет равно у нас.
[01:00:16.100 --> 01:00:18.100]  Понятно. q.
[01:00:20.100 --> 01:00:22.100]  Значит, for int.
[01:00:22.100 --> 01:00:24.100]  Вот я так сделаю. l, l.
[01:00:28.100 --> 01:00:30.100]  Равно, допустим, l, l, l.
[01:00:30.100 --> 01:00:32.100]  Нет, равно, но n.
[01:00:32.100 --> 01:00:34.100]  l, l больше, чем l.
[01:00:34.100 --> 01:00:36.100]  Диф равно 2.
[01:00:36.100 --> 01:00:38.100]  cq уносит равно cq.
[01:00:42.100 --> 01:00:44.100]  Откуда я это взял, да?
[01:00:44.100 --> 01:00:46.100]  Смотрите, давайте разбираться.
[01:00:46.100 --> 01:00:48.100]  Почему вы не заведете?
[01:00:48.100 --> 01:00:50.100]  Потому что, смотрите, давайте посмотрим,
[01:00:50.100 --> 01:00:52.100]  с каким q я должен сливать вот на каждом уровне.
[01:00:52.100 --> 01:00:54.100]  Почему вы не будете его пересчитывать
[01:00:54.100 --> 01:00:56.100]  просто на каждый раз, уменьшая цифру,
[01:00:56.100 --> 01:00:58.100]  картриджа?
[01:00:58.100 --> 01:01:00.100]  Нет, я так и буду делать.
[01:01:00.100 --> 01:01:02.100]  У меня есть цикл, надо вычислить еще.
[01:01:02.100 --> 01:01:04.100]  Это как бы у нас по-моему лог не выйдет.
[01:01:04.100 --> 01:01:06.100]  Его лучше вычислить, мне кажется, во внешнем цифре,
[01:01:06.100 --> 01:01:08.100]  а потом просто делить каждый раз.
[01:01:08.100 --> 01:01:10.100]  Это не принципиально,
[01:01:10.100 --> 01:01:12.100]  потому что это лог квадрат действий.
[01:01:12.100 --> 01:01:14.100]  А бит мы разворачиваем из логерита?
[01:01:14.100 --> 01:01:16.100]  Да.
[01:01:16.100 --> 01:01:18.100]  Вот этот первый цикл, он dn.
[01:01:18.100 --> 01:01:20.100]  Изначально мы развернем в одну сторону,
[01:01:20.100 --> 01:01:22.100]  а потом развернем обратно.
[01:01:22.100 --> 01:01:24.100]  Нам dn делен надо нужно идти, нет?
[01:01:26.100 --> 01:01:28.100]  Нет, то почему?
[01:01:28.100 --> 01:01:30.100]  Сначала мы сливаем,
[01:01:30.100 --> 01:01:32.100]  сначала мы получаем под массивы длины 2
[01:01:32.100 --> 01:01:34.100]  из-под массива длины 1,
[01:01:34.100 --> 01:01:36.100]  потом под массив 4 из-под массива 2,
[01:01:36.100 --> 01:01:38.100]  потом 84, потом 16.
[01:01:38.100 --> 01:01:40.100]  В конце мы получаем массив n из-под массива длины n пополам.
[01:01:44.100 --> 01:01:46.100]  Теперь давайте смотреть,
[01:01:46.100 --> 01:01:48.100]  сколько раз я это q должен
[01:01:48.100 --> 01:01:50.100]  возводить в квадрат?
[01:01:50.100 --> 01:01:52.100]  Если у меня l равно n, то нисколько.
[01:01:54.100 --> 01:01:56.100]  Если l равно n пополам,
[01:01:56.100 --> 01:01:58.100]  то видимо в два раза, чтобы у меня qq получилось.
[01:01:58.100 --> 01:02:00.100]  Потом n в четвертой будет
[01:02:00.100 --> 01:02:02.100]  в четвертой и так далее.
[01:02:02.100 --> 01:02:04.100]  Вроде все правильно.
[01:02:06.100 --> 01:02:08.100]  Это указатель
[01:02:08.100 --> 01:02:10.100]  на, так сказать,
[01:02:10.100 --> 01:02:12.100]  после конца массива.
[01:02:12.100 --> 01:02:14.100]  Значит, смотрите.
[01:02:16.100 --> 01:02:18.100]  Работает теперь будет так.
[01:02:20.100 --> 01:02:22.100]  Вот вы тут спрашивали, зачем st?
[01:02:22.100 --> 01:02:24.100]  Я буду говорить
[01:02:24.100 --> 01:02:26.100]  st равно a
[01:02:26.100 --> 01:02:28.100]  st равно a,
[01:02:28.100 --> 01:02:30.100]  st не равно агент,
[01:02:30.100 --> 01:02:32.100]  st плюс равно, соответственно, l.
[01:02:34.100 --> 01:02:36.100]  Будьте здоровы.
[01:02:36.100 --> 01:02:38.100]  И поехали.
[01:02:38.100 --> 01:02:40.100]  Ну и теперь поехали.
[01:02:40.100 --> 01:02:42.100]  Указатель mid
[01:02:42.100 --> 01:02:44.100]  значит у нас будет равен
[01:02:44.100 --> 01:02:46.100]  к чему у нас там равен?
[01:02:46.100 --> 01:02:48.100]  st плюс l пополам.
[01:02:50.100 --> 01:02:52.100]  И дальше можно написать f звездочка
[01:02:52.100 --> 01:02:54.100]  с
[01:02:54.100 --> 01:02:56.100]  c
[01:02:56.100 --> 01:02:58.100]  что?
[01:03:00.100 --> 01:03:02.100]  А какой надо?
[01:03:06.100 --> 01:03:08.100]  Ну я не знаю,
[01:03:08.100 --> 01:03:10.100]  а вот
[01:03:10.100 --> 01:03:12.100]  а вот тут
[01:03:12.100 --> 01:03:14.100]  а вот эта строчка
[01:03:14.100 --> 01:03:16.100]  вообще тогда?
[01:03:16.100 --> 01:03:18.100]  А за такое вообще банда.
[01:03:18.100 --> 01:03:20.100]  Вообще
[01:03:20.100 --> 01:03:22.100]  без объявления войны причем.
[01:03:24.100 --> 01:03:26.100]  Мы еще и воюем.
[01:03:26.100 --> 01:03:28.100]  Просто паром по голове
[01:03:28.100 --> 01:03:30.100]  и все.
[01:03:30.100 --> 01:03:32.100]  Паром по голове.
[01:03:32.100 --> 01:03:34.100]  Так вот.
[01:03:34.100 --> 01:03:36.100]  Здесь я могу просто
[01:03:36.100 --> 01:03:38.100]  пипастить.
[01:03:38.100 --> 01:03:40.100]  Смотрите.
[01:03:40.100 --> 01:03:42.100]  Это нормально,
[01:03:42.100 --> 01:03:44.100]  потому что мы тут сейчас
[01:03:44.100 --> 01:03:46.100]  переписываем.
[01:03:48.100 --> 01:03:50.100]  Я таб жму.
[01:03:50.100 --> 01:03:52.100]  Вот я вот так выделяю, жму таб.
[01:03:52.100 --> 01:03:54.100]  Вот, пожалуйста. Могу нажать shift таб,
[01:03:54.100 --> 01:03:56.100]  оно двигается назад.
[01:03:56.100 --> 01:03:58.100]  Чего?
[01:04:00.100 --> 01:04:02.100]  Пожалуйста.
[01:04:04.100 --> 01:04:06.100]  Вот.
[01:04:06.100 --> 01:04:08.100]  Ой, свет там
[01:04:08.100 --> 01:04:10.100]  выключить.
[01:04:10.100 --> 01:04:12.100]  Ага.
[01:04:14.100 --> 01:04:16.100]  Ну l это
[01:04:16.100 --> 01:04:18.100]  длина подмассива,
[01:04:18.100 --> 01:04:20.100]  корректного подмассива, который мы сейчас
[01:04:20.100 --> 01:04:22.100]  хотим получить.
[01:04:22.100 --> 01:04:24.100]  Слив подмассива, длина l пополам.
[01:04:24.100 --> 01:04:26.100]  У меня есть корректная
[01:04:26.100 --> 01:04:28.100]  массива длины l пополам,
[01:04:28.100 --> 01:04:30.100]  я хочу из них получить корректная подмассива длины l.
[01:04:32.100 --> 01:04:34.100]  Что такое корректная?
[01:04:34.100 --> 01:04:36.100]  Вот в этом смысле.
[01:04:36.100 --> 01:04:38.100]  Потому что еще раз.
[01:04:38.100 --> 01:04:40.100]  Что у нас делает по всей рекурсии?
[01:04:40.100 --> 01:04:42.100]  Рекурсия
[01:04:42.100 --> 01:04:44.100]  немножко в другом порядке,
[01:04:44.100 --> 01:04:45.840]  я если бы представлял
[01:04:45.840 --> 01:04:47.380]  элементы вот таким образом,
[01:04:47.380 --> 01:04:49.920]  потом из каждой пары элементов делал格ой то массив длины 2
[01:04:49.920 --> 01:04:52.020]  с помощью такого слияния.
[01:04:52.020 --> 01:04:54.060]  потом из каждой пары соседних object
[01:04:54.060 --> 01:04:56.560]  делал этот массив длины 4,
[01:04:56.560 --> 01:04:58.560]  но потом 8 и 16.
[01:04:59.560 --> 01:05:01.560]  Немного не в таком порядке.
[01:05:01.560 --> 01:05:03.560]  Получалось, что сначала делала все тут,
[01:05:03.560 --> 01:05:05.560]  потом все тут, но
[01:05:05.560 --> 01:05:07.560]  давайте делать послой,
[01:05:07.560 --> 01:05:09.560]  сначала все массивы длины 2,
[01:05:09.560 --> 01:05:11.560]  потом все массивы длины 4,
[01:05:11.560 --> 01:05:13.560]  вот я утверждаю, что ровно
[01:05:13.560 --> 01:05:15.560]  по 115 строчки явно что-то не так, как мы хотим
[01:05:15.560 --> 01:05:17.560]  почему?
[01:05:17.560 --> 01:05:19.560]  потому что мы единицу на два делим
[01:05:19.560 --> 01:05:21.560]  это L
[01:05:23.560 --> 01:05:25.560]  нет, смотрите, вот единица, вот L
[01:05:25.560 --> 01:05:27.560]  видите отличия?
[01:05:27.560 --> 01:05:29.560]  в цвете, да?
[01:05:29.560 --> 01:05:31.560]  нет, в цвете тут вот эта штучка еще, видите?
[01:05:35.560 --> 01:05:37.560]  код, который g меньше, чем refg
[01:05:37.560 --> 01:05:39.560]  мы переставляем, работает
[01:05:39.560 --> 01:05:41.560]  но потому что
[01:05:41.560 --> 01:05:43.560]  мы просто внимательно посмотрели
[01:05:43.560 --> 01:05:45.560]  на то, каким образом переставляются элементы
[01:05:45.560 --> 01:05:47.560]  на нижнем уровне относительно верхнего
[01:05:47.560 --> 01:05:49.560]  и обнаружили, что
[01:05:49.560 --> 01:05:51.560]  на месте
[01:05:51.560 --> 01:05:53.560]  на позиции g
[01:05:53.560 --> 01:05:55.560]  там, где было ожитое, становится
[01:05:55.560 --> 01:05:57.560]  refg
[01:05:57.560 --> 01:05:59.560]  мы так обнаружили
[01:05:59.560 --> 01:06:01.560]  почему Q нигде не использована?
[01:06:01.560 --> 01:06:03.560]  что?
[01:06:03.560 --> 01:06:05.560]  Q, да?
[01:06:05.560 --> 01:06:07.560]  да
[01:06:09.560 --> 01:06:11.560]  поэтому да, правильнее, на самом деле, и тут
[01:06:11.560 --> 01:06:13.560]  давайте вот, чтобы это подчеркнуть
[01:06:13.560 --> 01:06:15.560]  давайте везде тут CQ
[01:06:15.560 --> 01:06:17.560]  назовем
[01:06:17.560 --> 01:06:19.560]  это будет
[01:06:19.560 --> 01:06:21.560]  Q в степени
[01:06:21.560 --> 01:06:23.560]  2 в степени N
[01:06:25.560 --> 01:06:27.560]  ну это
[01:06:27.560 --> 01:06:29.560]  Q в степени N поделить
[01:06:29.560 --> 01:06:31.560]  на L я бы сказал
[01:06:33.560 --> 01:06:35.560]  на что, чувак, где?
[01:06:35.560 --> 01:06:37.560]  в 113 строке
[01:06:37.560 --> 01:06:39.560]  нет, ладно, N пополам поделить
[01:06:39.560 --> 01:06:41.560]  в 113 строке
[01:06:41.560 --> 01:06:43.560]  CQ возводится
[01:06:43.560 --> 01:06:45.560]  в квадрат, все нормально
[01:06:45.560 --> 01:06:47.560]  мы убавили в квадрат
[01:06:47.560 --> 01:06:49.560]  да
[01:06:57.560 --> 01:06:59.560]  потому что у нас
[01:06:59.560 --> 01:07:01.560]  на каждом инкурсивном запуске
[01:07:01.560 --> 01:07:03.560]  вы бы передавали QQ
[01:07:03.560 --> 01:07:05.560]  то есть Q в квадрате
[01:07:05.560 --> 01:07:07.560]  теперь мы говорим, что если мы сейчас
[01:07:07.560 --> 01:07:09.560]  перешли с уровня N на уровня L
[01:07:09.560 --> 01:07:11.560]  то значит, сколько раз мы делили N
[01:07:11.560 --> 01:07:13.560]  на 2, чтобы получить L, мы должны были
[01:07:13.560 --> 01:07:15.560]  Q возвести в квадрат
[01:07:15.560 --> 01:07:17.560]  вот чем мы это делаем
[01:07:17.560 --> 01:07:19.560]  чем мы и занимаемся
[01:07:19.560 --> 01:07:21.560]  вот
[01:07:21.560 --> 01:07:23.560]  так что вот в принципе
[01:07:23.560 --> 01:07:25.560]  таким образом можно это написать
[01:07:25.560 --> 01:07:27.560]  как было правильно замечено
[01:07:27.560 --> 01:07:29.560]  эти лишние цикушки можно заранее вычислить
[01:07:29.560 --> 01:07:31.560]  это тоже даст маленькое ускорение
[01:07:33.560 --> 01:07:35.560]  можно что-то там
[01:07:35.560 --> 01:07:37.560]  ну там разные варианты
[01:07:37.560 --> 01:07:39.560]  если вы делаете по простому модулю
[01:07:39.560 --> 01:07:41.560]  то у вас с точностью никаких проблем нет
[01:07:41.560 --> 01:07:43.560]  если делаете в комплексных числах
[01:07:43.560 --> 01:07:45.560]  от long doubles, то там с точностью
[01:07:45.560 --> 01:07:47.560]  какие-то проблемы есть
[01:07:47.560 --> 01:07:49.560]  ну а сколько проблем?
[01:07:49.560 --> 01:07:51.560]  ну скажем так, есть практическая рекомендация
[01:07:51.560 --> 01:07:53.560]  желательно фурия адекватно работает
[01:07:53.560 --> 01:07:55.560]  если у вас там итоговые коэффициенты
[01:07:55.560 --> 01:07:57.560]  где-то 10 в 11 и 10 в 12
[01:07:57.560 --> 01:07:59.560]  если там изначально
[01:07:59.560 --> 01:08:01.560]  дал что-то порядка 1000, то вообще нормально
[01:08:01.560 --> 01:08:03.560]  ну да
[01:08:03.560 --> 01:08:05.560]  ну все
[01:08:05.560 --> 01:08:07.560]  но если там больше коэффициентов, то значит вам придется
[01:08:07.560 --> 01:08:09.560]  принимать какие-то меры
[01:08:09.560 --> 01:08:11.560]  что, то есть если коэффициенты больше 1000
[01:08:11.560 --> 01:08:13.560]  то у нас даже long doubles никак не помогут?
[01:08:13.560 --> 01:08:15.560]  если больше 10
[01:08:15.560 --> 01:08:17.560]  ну тогда да, но сами по себе
[01:08:17.560 --> 01:08:19.560]  нет, если при этом еще и длина массива, то есть конечно большая
[01:08:19.560 --> 01:08:21.560]  то есть если вы перемножаете
[01:08:21.560 --> 01:08:23.560]  миллионы
[01:08:23.560 --> 01:08:25.560]  многочлены там
[01:08:25.560 --> 01:08:27.560]  числа порядка
[01:08:27.560 --> 01:08:29.560]  больше чем 10 в кубе, то да, у вас могут быть проблемы
[01:08:29.560 --> 01:08:31.560]  то есть на long doubles, где здесь в кубе
[01:08:31.560 --> 01:08:33.560]  должно быть какая-то проблема
[01:08:33.560 --> 01:08:35.560]  ну вроде как да
[01:08:35.560 --> 01:08:37.560]  откуда взялось 10 в кубе?
[01:08:37.560 --> 01:08:39.560]  ну то есть А3
[01:08:39.560 --> 01:08:41.560]  предположим, что у тебя все коэффициенты порядка 10 в кубе
[01:08:41.560 --> 01:08:43.560]  и длина массива
[01:08:43.560 --> 01:08:45.560]  10 в шестой, тогда и то коэффициент
[01:08:45.560 --> 01:08:47.560]  в перемножении многочленов, мы же да
[01:08:47.560 --> 01:08:49.560]  напоминаем, мы перемножение многочленов
[01:08:49.560 --> 01:08:51.560]  все это делаем, оно получается сколько?
[01:08:51.560 --> 01:08:53.560]  у вас там 10 в шестой раз, получается 10 в кубе на 10 в кубе
[01:08:53.560 --> 01:08:55.560]  и того 10 в двенадцатый
[01:08:55.560 --> 01:08:57.560]  по грамм застава
[01:08:57.560 --> 01:08:59.560]  ну вот
[01:09:07.560 --> 01:09:09.560]  ну да, нет
[01:09:09.560 --> 01:09:11.560]  просто в конце у вас получится
[01:09:11.560 --> 01:09:13.560]  ну допустим вы перемножаете
[01:09:13.560 --> 01:09:15.560]  целый многочлен на целый многочлен
[01:09:15.560 --> 01:09:17.560]  если вы делаете там в комплексных числах
[01:09:17.560 --> 01:09:19.560]  long doubles, то у вас и получится в конце
[01:09:19.560 --> 01:09:21.560]  какие-то комплексные long doubles
[01:09:21.560 --> 01:09:23.560]  и в идеалах кажется, что они должны быть близки к целым числам
[01:09:23.560 --> 01:09:25.560]  поэтому там в конце
[01:09:25.560 --> 01:09:27.560]  все что вам будет делать, это их как-то округлить
[01:09:27.560 --> 01:09:29.560]  ну вот утверждается, что если
[01:09:29.560 --> 01:09:31.560]  итоговые коэффициенты будут больше 10 в двенадцатый, то в округлении
[01:09:31.560 --> 01:09:33.560]  могут возникнуть проблемы
[01:09:33.560 --> 01:09:35.560]  то есть там погрешность будет чуть больше, чем
[01:09:35.560 --> 01:09:37.560]  хотелось бы
[01:09:37.560 --> 01:09:39.560]  у нас просто прописают задачи
[01:09:39.560 --> 01:09:41.560]  ну вот
[01:09:41.560 --> 01:09:43.560]  а саму куму вычисляем
[01:09:43.560 --> 01:09:45.560]  с помощью
[01:09:45.560 --> 01:09:47.560]  синусов и косинусов
[01:09:47.560 --> 01:09:49.560]  ну да, ну в комплексных числах
[01:09:49.560 --> 01:09:51.560]  да
[01:09:51.560 --> 01:09:53.560]  ну или там
[01:09:53.560 --> 01:09:55.560]  по модулю какого-то
[01:09:55.560 --> 01:09:57.560]  да, чего?
[01:09:57.560 --> 01:09:59.560]  у нас в итоге порядок
[01:10:01.560 --> 01:10:03.560]  нам еще свалпать надо
[01:10:03.560 --> 01:10:05.560]  после этого
[01:10:05.560 --> 01:10:07.560]  зачем нам кого-то свалпать
[01:10:13.560 --> 01:10:15.560]  что с ними?
[01:10:23.560 --> 01:10:25.560]  у нас ну плюсак
[01:10:25.560 --> 01:10:27.560]  просто прикол
[01:10:27.560 --> 01:10:29.560]  напишите biginteger, где нужно написать их вот
[01:10:29.560 --> 01:10:31.560]  и еще куча разных методов
[01:10:31.560 --> 01:10:33.560]  и чтобы это нормально там
[01:10:33.560 --> 01:10:35.560]  вводить-выводить, видимо придется
[01:10:35.560 --> 01:10:37.560]  это делать в каблах, потому что по модулю
[01:10:37.560 --> 01:10:39.560]  супер неприятно хранить
[01:10:39.560 --> 01:10:41.560]  почему неприятно по модулю?
[01:10:41.560 --> 01:10:43.560]  да
[01:10:43.560 --> 01:10:45.560]  по модулю или чего, не слышите?
[01:10:45.560 --> 01:10:47.560]  по модулю
[01:10:47.560 --> 01:10:49.560]  или в комплах
[01:10:49.560 --> 01:10:51.560]  ну в большинстве случаев в комплах пишут
[01:10:51.560 --> 01:10:53.560]  а почему?
[01:10:53.560 --> 01:10:55.560]  потому что это универсально
[01:10:55.560 --> 01:10:57.560]  а еще они постоянно работают
[01:10:57.560 --> 01:10:59.560]  да, но просто по каким-нибудь модулю
[01:10:59.560 --> 01:11:01.560]  проблема такая, что
[01:11:01.560 --> 01:11:03.560]  если писать по модулю 998
[01:11:03.560 --> 01:11:05.560]  244353
[01:11:05.560 --> 01:11:07.560]  теоретически можно, но
[01:11:07.560 --> 01:11:09.560]  только если вы гарантируете, что у вас все коэффициенты
[01:11:09.560 --> 01:11:11.560]  будут меньше
[01:11:11.560 --> 01:11:13.560]  если будут, то вот пожалуйста
[01:11:13.560 --> 01:11:15.560]  тогда это будет даже хорошо
[01:11:15.560 --> 01:11:17.560]  работать
[01:11:17.560 --> 01:11:19.560]  чаще всего это не совсем так
[01:11:19.560 --> 01:11:21.560]  впрочем, эта проблема на самом деле конечно
[01:11:21.560 --> 01:11:23.560]  решается с помощью китайской теории
[01:11:23.560 --> 01:11:25.560]  об остатках
[01:11:25.560 --> 01:11:27.560]  ну в плане, сделайте два FFT по двум таким модулям
[01:11:27.560 --> 01:11:29.560]  такого порядка, скомпонуйте, возрадуйтесь
[01:11:29.560 --> 01:11:31.560]  вот
[01:11:31.560 --> 01:11:33.560]  вот там да, начинаются подобные
[01:11:33.560 --> 01:11:35.560]  приколы, а как это считать?
[01:11:35.560 --> 01:11:37.560]  ну это другой вопрос
[01:11:37.560 --> 01:11:39.560]  по модулю
[01:11:39.560 --> 01:11:41.560]  ну просто из такого
[01:11:41.560 --> 01:11:43.560]  да
[01:11:43.560 --> 01:11:45.560]  ну вот, так, ну все
[01:11:45.560 --> 01:11:47.560]  так, ну в общем да
[01:11:47.560 --> 01:11:49.560]  можно наверное еще какие-нибудь версии допиливать
[01:11:49.560 --> 01:11:51.560]  но вот основная суть такая
[01:11:51.560 --> 01:11:53.560]  это вот что касается
[01:11:53.560 --> 01:11:55.560]  самого FFT
[01:11:55.560 --> 01:11:57.560]  если тут какие-то вопросы
[01:12:01.560 --> 01:12:03.560]  оценку чего?
[01:12:07.560 --> 01:12:09.560]  разговор зашел о том, что
[01:12:09.560 --> 01:12:11.560]  если мы вычисляем в комплексных
[01:12:11.560 --> 01:12:13.560]  лонг-доблах, то у нас проблемы есть
[01:12:13.560 --> 01:12:15.560]  проблема в том, что
[01:12:15.560 --> 01:12:17.560]  как бы итоговый ответ вы получите не точно
[01:12:21.560 --> 01:12:23.560]  ну по умолчанию, потому что откуда вы
[01:12:23.560 --> 01:12:25.560]  ну давайте вспоминать, откуда вы такое
[01:12:25.560 --> 01:12:27.560]  кумистическое возьмете вообще?
[01:12:29.560 --> 01:12:31.560]  найдите такой корень из единицы, да
[01:12:31.560 --> 01:12:33.560]  к сожалению, в действительных числах такого нет
[01:12:33.560 --> 01:12:35.560]  но он есть комплексно
[01:12:35.560 --> 01:12:37.560]  не, он может быть в простом
[01:12:37.560 --> 01:12:39.560]  либо вот мы говорили
[01:12:39.560 --> 01:12:41.560]  или по простому моду, или еще один
[01:12:41.560 --> 01:12:43.560]  ну вот
[01:12:43.560 --> 01:12:45.560]  есть комплекс
[01:12:45.560 --> 01:12:47.560]  и проблема
[01:12:47.560 --> 01:12:49.560]  в чем проблема?
[01:12:49.560 --> 01:12:51.560]  ну проблема в том,
[01:12:51.560 --> 01:12:53.560]  что когда комплексный числа
[01:12:53.560 --> 01:12:55.560]  от лонг-доблов то у вас будет не точно
[01:12:55.560 --> 01:12:57.560]  то есть ответ итоговые коэффициенты
[01:12:57.560 --> 01:12:59.560]  переполнения будут у вас не 5, а что-нибудь там
[01:12:59.560 --> 01:13:01.560]  4, 9, 9, 9, 9, 9, 9
[01:13:01.560 --> 01:13:03.560]  9 умножить на 0, 0, 0, 0, 0, 0
[01:13:03.560 --> 01:13:05.560]  сколько-то там
[01:13:05.560 --> 01:13:07.560]  что мы с этим делаем?
[01:13:07.560 --> 01:13:09.560]  ну по дефолту округляем видимо до ближайшего
[01:13:09.560 --> 01:13:11.560]  действительно, вы добавляем 0,5
[01:13:11.560 --> 01:13:14.600]  А если у вас будут слишком большие дефиценты, то как бы могут быть проблемы.
[01:13:15.960 --> 01:13:20.360]  Кстати, а можно использовать тригнометрические всякие штуки, типа синусумы, это будет...
[01:13:20.840 --> 01:13:21.640]  В смысле?
[01:13:21.960 --> 01:13:25.640]  Ну, типа в итоге выразить просто синус с угла плюс косин с угла.
[01:13:27.240 --> 01:13:28.600]  Да, сейчас, не понял.
[01:13:29.480 --> 01:13:31.560]  Нет, ну если вы там с шишами...
[01:13:31.560 --> 01:13:34.760]  Чтобы работать с углами, а не с дублами.
[01:13:35.000 --> 01:13:36.600]  Но, как тебе сказать...
[01:13:36.600 --> 01:13:40.680]  Нет, если ты напишешь свое там поле расширения комплексных чисел,
[01:13:40.680 --> 01:13:44.520]  там расширение действительных чисел соответствующим корням, то можно.
[01:13:45.000 --> 01:13:46.680]  А слава богу, сейте его и написать, да.
[01:13:47.400 --> 01:13:51.960]  Нет, хотя, в общем-то ладно, у меня в моих внешних бильярдах что-то подобное сделано, это да.
[01:13:52.680 --> 01:13:55.480]  Не для произвольного Н, конечно, только для конкретных, но там...
[01:13:55.960 --> 01:13:57.240]  Но гадость там та еще.
[01:13:58.280 --> 01:14:02.920]  Просто там, когда начнешь такое писать, там у тебя свое поле, да, то у вас есть маленькая проблема, что...
[01:14:03.480 --> 01:14:07.800]  А нет, здесь никаких проблем не возникнет, здесь просто вычисляем и все.
[01:14:10.920 --> 01:14:15.400]  А нет, проблема возникнет, потому что если ты напишешь просто Q и будешь рассматривать уркновечен,
[01:14:15.400 --> 01:14:20.040]  то тебе придется каждое число хранить как линейную комбинацию соответствующей степени и кушки.
[01:14:20.760 --> 01:14:22.280]  Ну, мы-то стараемся забежать.
[01:14:22.840 --> 01:14:27.080]  Нет, а это просто в явном виде хранить не поможет.
[01:14:27.720 --> 01:14:30.280]  Поэтому нужна вот просто мистическое число, которое работает.
[01:14:33.240 --> 01:14:35.240]  То есть что значит округлить до ближайшего действия?
[01:14:35.800 --> 01:14:36.440]  То и значит.
[01:14:37.000 --> 01:14:37.960]  До ближайшего целого.
[01:14:38.600 --> 01:14:39.240]  От целого?
[01:14:39.400 --> 01:14:40.280]  А, ну в смысле, да.
[01:14:40.440 --> 01:14:43.160]  Ну если у нас целые коэффициенты были, то мы округляем до целого.
[01:14:43.160 --> 01:14:44.440]  Да, ой, да, да, да, все.
[01:14:45.000 --> 01:14:48.920]  Все, ребят, все, я... Да, да, да, да, да, я и вообще все, а сегодня еще...
[01:14:49.320 --> 01:14:54.040]  Ночью сегодня я провел летящим из Стамбула, собственно, на самолете, так что да.
[01:14:55.160 --> 01:14:56.600]  Так что да, я сегодня...
[01:14:57.560 --> 01:14:58.120]  Спасибо.
[01:14:59.080 --> 01:15:00.280]  Спасибо за понимание.
[01:15:01.960 --> 01:15:02.440]  Вот.
[01:15:03.320 --> 01:15:03.960]  Так что да.
[01:15:05.080 --> 01:15:06.600]  А, ну да, я вас еще и предупреждал.
[01:15:06.600 --> 01:15:08.600]  Да, вы держались.
[01:15:08.760 --> 01:15:09.560]  Да, да, да.
[01:15:09.960 --> 01:15:11.960]  Ну не то, чтобы я держался, в общем-то, да.
[01:15:15.320 --> 01:15:16.920]  Так, ладно, еще тут вопросы есть какие?
[01:15:20.120 --> 01:15:20.840]  А дальше что?
[01:15:21.800 --> 01:15:22.200]  Дальше?
[01:15:23.000 --> 01:15:25.160]  Ну следующий блок начинается как-то...
[01:15:25.560 --> 01:15:27.000]  Как это развернуть?
[01:15:29.320 --> 01:15:31.160]  Вот теперь смотрите, вот просто можно...
[01:15:31.320 --> 01:15:34.760]  Нет, по идее можно... Тут задача такая, вот у нас есть FFT.
[01:15:34.760 --> 01:15:40.280]  Жил бы многочлен, размеры степени двойки, надо получить по нему значение в точках.
[01:15:41.080 --> 01:15:44.840]  А теперь обратная задача, данные значения в точках надо получить коэффициентами.
[01:15:47.080 --> 01:15:51.480]  Кажется, что эту функцию можно даже не переписывать, куда другое передать или там что-то такое.
[01:15:51.480 --> 01:15:53.160]  Ну вот, тут как бы два момента, да.
[01:15:53.640 --> 01:15:57.560]  По идее, конечно, вот этот код явно выглядит так, что можно его, конечно, легко развернуть.
[01:15:57.560 --> 01:15:59.320]  Кстати, рекурсию надо убрать.
[01:15:59.320 --> 01:16:03.640]  Можно посчитать, ну, значение на A, ну, значение на B, и потом перемножить, да.
[01:16:04.120 --> 01:16:06.280]  Ага, а потом для значения на C обратно сделать.
[01:16:07.400 --> 01:16:10.600]  И все это даже не для N2N еще сделать, чтобы там про запас было.
[01:16:10.600 --> 01:16:11.960]  Давайте вот этот...
[01:16:13.080 --> 01:16:17.400]  Ну это просто, это эти все детали из прошлой лекции, которые я сейчас опускаю.
[01:16:17.400 --> 01:16:20.600]  Да, еще нужно довести до степени двойки каждой задачей, да?
[01:16:21.000 --> 01:16:21.800]  Да.
[01:16:22.680 --> 01:16:23.640]  Да, это святое.
[01:16:23.640 --> 01:16:25.800]  До степени двойки нам прям жестко принципиально.
[01:16:28.360 --> 01:16:30.120]  Так вот, казалось бы, как делать FFT?
[01:16:30.120 --> 01:16:31.640]  Да, можно просто развернуть этот код.
[01:16:31.640 --> 01:16:34.600]  То есть там сначала вот эти форы в другом порядке делать, да.
[01:16:34.600 --> 01:16:37.320]  Там с уровня вверх, уровня вниз.
[01:16:37.320 --> 01:16:39.800]  Вот это вот преобразование заменить на обратное, да.
[01:16:40.840 --> 01:16:42.200]  В принципе, можно развлечься.
[01:16:42.760 --> 01:16:46.920]  А потом в самом конце еще вот эту вот штуку забабахать.
[01:16:47.800 --> 01:16:50.200]  Но, оказывается, этого делать не нужно.
[01:16:52.120 --> 01:16:53.640]  Почему это делать не нужно?
[01:16:53.640 --> 01:16:55.640]  Ну потому что смотреть.
[01:16:55.640 --> 01:16:57.640]  Давайте внимательно посмотрим.
[01:16:57.640 --> 01:16:58.600]  Сейчас мы...
[01:16:58.600 --> 01:17:02.440]  Так, давайте временно уберем экранчик и снова позанимаемся алгеброй.
[01:17:03.240 --> 01:17:04.200]  Лигейной.
[01:17:05.080 --> 01:17:05.800]  Вот.
[01:17:07.880 --> 01:17:09.880]  Потому что смотрите, чем мы...
[01:17:09.880 --> 01:17:11.880]  Ну как бы как всегда, глобальный вопрос.
[01:17:11.880 --> 01:17:14.280]  Чем мы вообще тут занимаемся?
[01:17:15.080 --> 01:17:18.600]  Скажите, пожалуйста, мы уже не успели обсудить, как разворачиваться?
[01:17:19.400 --> 01:17:20.440]  Э-э-э, нет.
[01:17:20.440 --> 01:17:25.800]  Ну, мы обнаружили, даже если на уровне рекурсивном, что в принципе это явно-то как-то делается.
[01:17:27.240 --> 01:17:27.800]  Вот.
[01:17:27.800 --> 01:17:29.800]  Это все, на чем мы остановились.
[01:17:29.800 --> 01:17:31.800]  Сейчас мы обсудим, как это делается на самом деле.
[01:17:33.240 --> 01:17:34.440]  Потому что смотрите.
[01:17:35.000 --> 01:17:37.000]  Что такое FFT?
[01:17:38.360 --> 01:17:43.880]  По большому счету, FFT, как следует из предыдущего обсуждения, делает следующее.
[01:17:43.880 --> 01:17:45.880]  Оно берет вектор...
[01:17:45.880 --> 01:17:49.080]  А 0, а 1, а 2, и так далее.
[01:17:49.080 --> 01:17:51.080]  А, n-1.
[01:17:51.080 --> 01:17:55.080]  И домножает его на матрицу.
[01:17:56.040 --> 01:17:57.080]  Какую?
[01:17:57.080 --> 01:17:59.080]  А вот такую.
[01:17:59.080 --> 01:18:01.080]  Как говорится?
[01:18:01.080 --> 01:18:03.080]  Как говорится?
[01:18:03.080 --> 01:18:05.080]  Как говорится, какую на матрицу Вандермонда?
[01:18:05.240 --> 01:18:07.240]  Вандермонда
[01:18:07.240 --> 01:18:09.240]  Мы уже в прошлый раз упоминали такую фамилию.
[01:18:09.240 --> 01:18:13.240]  И вас на линале тоже должны упомянуть такую фамилию.
[01:18:13.240 --> 01:18:15.240]  Ну да.
[01:18:15.240 --> 01:18:19.240]  Да, мало кто знает, но если ходить на матрицу...
[01:18:19.240 --> 01:18:23.400]  Если ходить на матрицу Вандермонда, когда у нас...
[01:18:23.400 --> 01:18:25.400]  У нас нет фамилия.
[01:18:25.400 --> 01:18:27.400]  И если у нас нет фамилия?
[01:18:27.400 --> 01:18:28.520]  Да.
[01:18:28.520 --> 01:18:30.520]  А если у нас нет фамилия?
[01:18:30.520 --> 01:18:32.520]  И у нас нет фамилий.
[01:18:32.520 --> 01:18:34.040]  Так.
[01:18:34.040 --> 01:18:36.840]  но если ходить на линал можно много полезного узнать
[01:18:39.200 --> 01:18:41.200]  чего на все оси из маленьких
[01:18:43.920 --> 01:18:45.920]  вау
[01:18:53.040 --> 01:18:57.580]  это называется испорченный телефон но знаете
[01:18:57.580 --> 01:19:11.900]  вот такая вот красота теперь у нас есть задачка эту матрицу теперь надо обратить
[01:19:11.900 --> 01:19:17.980]  что за каламбуры пошли
[01:19:17.980 --> 01:19:27.940]  ой и потом что-то омская птица уже умерла много лет назад а вот какой-то сайт который
[01:19:27.940 --> 01:19:35.340]  специализировался на подобного рода каламбурах там я не знаю там знаете это там надежда крупская
[01:19:35.340 --> 01:19:46.340]  вера брешнева там вот это вот все так понятно и он стал вот тёмскую птицу так как обращать
[01:19:46.340 --> 01:20:00.700]  такую матрицу вот действительно такая вот небольшая интрига так а что давайте повесили
[01:20:00.700 --> 01:20:07.060]  давайте обратим эту матрицу чем вообще париться мы бы чули на ла не знаем что ли значит смотреть
[01:20:07.060 --> 01:20:12.980]  давайте для простоты я сделаю матрицу поменьше давайте матрица длины 5 я думаю это будет максимально
[01:20:12.980 --> 01:20:18.060]  наглядно но мы же можем себе вообразить корень пятой степени из единицы правда
[01:20:18.060 --> 01:20:40.860]  6 9 12 4 8 12 16 так ну давайте вспоминать как мы тут обращаем 1 1 1 1 1 так что там у нас дальше будет
[01:20:40.860 --> 01:20:51.740]  так ну давайте вычитаем единицу так так значит тут будет смотрите 1 0 0 0 и тут везде будет
[01:20:51.740 --> 01:21:08.940]  минус 1 минус 1 минус 1 минус 1 так что будет тут да это мало связано с тем что реально
[01:21:08.940 --> 01:21:17.020]  почему ну нет ну просто давайте просто обратим матрицу что бы нам ее не обретить
[01:21:17.020 --> 01:21:40.420]  потому что если вы перемножите скажем вот этот вот столбец на этот вот вектор то это
[01:21:40.420 --> 01:21:45.460]  абсолютно то же самое как вы многочлен с такими коэффициентами подставите в качестве т куб кубе
[01:21:45.460 --> 01:21:51.900]  ну потому что получится а 0 плюс а 1 умножить на кубе плюс а 2 умножить на куб 6 ну и так далее
[01:21:51.900 --> 01:22:00.940]  но потому что я вот взял вот эту строчку для примера там если вот эту строчку домножите
[01:22:00.940 --> 01:22:10.540]  подставите к у второй если эту ку и так далее так что тут все очень просто вот при атаке
[01:22:10.540 --> 01:22:36.900]  соперника да мы так вот так так вот так я вот вывесили вот красота правда так
[01:22:36.900 --> 01:22:47.260]  так что там у нас будет дальше так ну теперь только напомните мне я имею право делать то
[01:22:47.260 --> 01:22:57.900]  же самое со столбцами не а в чем проблема то что приобщение матрицы они имеют право там еще и со
[01:22:57.900 --> 01:23:10.140]  столбцами то же самое делать чего с нюансами нет почему там вот смотрите механизм обращения
[01:23:10.140 --> 01:23:15.340]  матрицы был вроде как такой я значит просто делаю значит добиваюсь того чтобы это матрица
[01:23:15.340 --> 01:23:20.380]  стала там единичной при этом и начинать единичной матрицы делаю ровно те же преобразования тогда
[01:23:20.380 --> 01:23:26.660]  когда тут будет 1 и дд дд тут будет соответственно то что мне надо работает это работает это за счет
[01:23:26.660 --> 01:23:30.420]  того что я как бы на самом деле для того чтобы вычесть там строчку из какой-нибудь другой строчки
[01:23:30.420 --> 01:23:35.300]  я должен там домножить это там матрицу слева на какую-то там фиксированную матрицу я домножаю это
[01:23:35.300 --> 01:23:43.180]  домножает вот у меня почему-то жуткое ощущение что вроде как должно существовать вроде то есть так
[01:23:43.180 --> 01:23:51.420]  вроде можно без нюансов но я не знаю если существует смотрите существует матрица на
[01:23:51.420 --> 01:23:55.060]  которой давно же вот это слева и получится как будто я просто прибавил ко второму столбцу
[01:23:55.060 --> 01:24:15.260]  первой то вроде как этого должно хватать вот ну вот так сейчас какие ксы чего какие ксы не понял
[01:24:15.260 --> 01:24:28.100]  так ну ладно так ну ладно если так ну ладно нет то в принципе ладно на самом деле нам не сильно
[01:24:28.100 --> 01:24:32.180]  глобально можем как бы столбца со столбцами ничего не делать а можно просто заметить что
[01:24:32.180 --> 01:24:48.780]  здесь все делится на q-1 неплохо так правда давайте значит тут будет один один тут я побольше
[01:24:48.780 --> 01:25:01.180]  нарисую так тут будет 1 0 0 0 0 тут получится так минус 1 делить на q-1 тут получится 1
[01:25:01.180 --> 01:25:15.540]  делить на q-1 ну и слава богу 0 0 0 тут получится ладно ну-ка минус 1 делить на q-1 минус 1
[01:25:15.540 --> 01:25:27.740]  делить на q-1 минус 1 делить на q-1 0 0 0 0 0 0 0 так что получится тут ну тут получится что-то
[01:25:27.740 --> 01:25:38.780]  посмешнее так тут получится 1 q плюс 1 так давайте давайте так сказать 1 1 плюс q 1 плюс q
[01:25:38.780 --> 01:25:56.420]  плюс q квадрат 1 плюс q плюс q квадрат плюс q в кубе да да так тут у нас давайте 1 плюс q
[01:25:56.420 --> 01:26:04.980]  тут получается 1 плюс q плюс q квадрат плюс q в кубе тут 1 плюс и так далее плюс что штутку
[01:26:04.980 --> 01:26:15.180]  в пятый 1 плюс и так далее плюс q ну соответственно седьмой да так тут у нас получается 1 плюс q плюс q
[01:26:15.180 --> 01:26:32.340]  квадрат так тут q в пятой чего что не так но вот пока так что не так где я пока как бы
[01:26:32.340 --> 01:26:41.340]  каждую строчку поделился чем-то на q-1 возможно зря я это сделал но вот так не одно просто уже
[01:26:41.340 --> 01:26:51.500]  интересно просто что получится так 1 плюс и так далее плюс q 11 1 плюс и так далее плюс q у 15 так
[01:26:51.500 --> 01:27:04.300]  спрашивается так как-то переча это обращать но теперь кажется пришло время что-то по вычитать
[01:27:04.300 --> 01:27:12.500]  так вот давайте я может быть даже не буду стирать а давайте я попробую просто вычесть
[01:27:12.500 --> 01:27:24.220]  вот например вот эту строчку из допустим вот этой что будет тогда ну во-первых здесь мы поубиваем
[01:27:24.220 --> 01:27:33.500]  единичку здесь мы убиваем 1 плюс q здесь у нас сумма идет от куб кубе здесь у нас сумма идет от
[01:27:33.500 --> 01:27:43.100]  q в четвертой да и с третьей строчки я вычел пока вторую и у меня получилось но здесь получается 0
[01:27:43.100 --> 01:27:57.140]  здесь получается минус 1 делить на q минус 1 вот теперь значит да не будем значит да не значит
[01:27:57.260 --> 01:28:06.580]  попробуем не бежать тут может быть действительно где-то впереди паровоза а вместо этого скажем
[01:28:06.580 --> 01:28:12.740]  следующее так но давайте вот допустим попробуем теперь из этой строчки из четвертой строчки
[01:28:12.740 --> 01:28:23.340]  по вычитать первые две хотя нет правильнее было сделать немножко по-другому правильнее на самом
[01:28:23.340 --> 01:28:32.140]  деле да сначала вот давайте из четвертой строчки сейчас вычтем третью что у нас получится тот
[01:28:32.140 --> 01:28:42.020]  получится q в кубе тут получится q в шестой плюс q в седьмой тут получится q в девятой плюс q в
[01:28:42.020 --> 01:28:57.940]  десятой плюс q в одиннадцатой а тот получится 12 13 14 15 вот так что правильно пока или нет
[01:28:57.940 --> 01:29:14.220]  да ладно что-то да что-то не знать как раз еще раз был порядок в смысле порядок 5 какой
[01:29:14.220 --> 01:29:21.140]  порядок но сначала мы из третьей строчки вычтем вторую потом мы решили сейчас вот из пятой
[01:29:21.140 --> 01:29:31.140]  строчки вычислить четвертую нет ну как сказать там будет это из цикла надо угадать ответа
[01:29:31.140 --> 01:29:41.900]  потом обнаружить что он всегда заходит вот так вот ну ладно на самом деле да если вы внимательно
[01:29:41.900 --> 01:29:48.180]  посмотрите это и угадайте закономерность то явно будет получаться вот что-то такое смотрите
[01:29:48.180 --> 01:29:59.420]  q 6 плюс q седьмой и тут вот так значит тут у нас что q в 8 плюс и так далее плюс q в одиннадцатой
[01:29:59.420 --> 01:30:12.580]  а тут на самом деле будет 0 и тут будет минус один делить на q минус один вот спрашивается
[01:30:12.580 --> 01:30:26.220]  так что у нас теперь можно сделать слушайте а то прям точно нельзя столбцы друг с другом вычитать
[01:30:26.220 --> 01:30:45.100]  а вот я вот пытаюсь вспомнить а какая она на самом деле но да но как сказать если вы зафиксируете
[01:30:45.100 --> 01:30:50.620]  конкретное куда там будет больно но фишка но в данном случае мы должны начать пользоваться
[01:30:50.620 --> 01:30:58.060]  тем что кув пятый равно один прочим ладно ладно давайте действительно забьем на это так просто
[01:30:58.060 --> 01:31:07.460]  видимо не получится придется просто подумать что ж там должны быть за столбцы так изе но то на
[01:31:07.460 --> 01:31:13.460]  самом деле просто магия на самом деле оказывается ну тут разные магии бывают вот одна из магии
[01:31:13.460 --> 01:31:22.020]  звучит так да вот например давайте создадим ту же самую магию от кув минус 1 вот давайте я
[01:31:22.020 --> 01:31:29.860]  вот возьму вот эту вот матрицу один да ку ку квадрат один ку квадрат ку четвертый
[01:31:29.860 --> 01:31:41.260]  но вот но нет но как сказать знаете я просто не очень люблю это из цикла заветим что вот
[01:31:41.260 --> 01:31:54.420]  это вот работает но как сказать получается смотря что мы там дальше должны делать дальше
[01:31:54.420 --> 01:32:02.940]  возможно вот эти строчки должны на ку как-то поделить потом что-то тут вычесть там но может
[01:32:02.940 --> 01:32:08.940]  а не но да тут вообще на куб придется а тут еще он это на кув кубе какие-то делить носим гады
[01:32:09.300 --> 01:32:15.340]  ладно значит давайте действительно значит очень хочется попытаться действительно как-то да
[01:32:15.340 --> 01:32:24.020]  множить эту матрицу на вот такую на абсолютно то же самое только вместо ку я подставляю кув минус
[01:32:24.020 --> 01:32:39.220]  1 вот так это будет ку минус 2 кув минус 4 и так далее ку минус 2 и минус 1
[01:32:54.020 --> 01:33:18.060]  что получится получится какая-то мистическая матрица dnn где внимание dgtkt равно сумме по всем
[01:33:18.060 --> 01:33:30.340]  l от 0 dn минус 1 значит q в степени g умножить на l умножить на q в степени чего минус l умножить
[01:33:30.340 --> 01:33:44.100]  на к согласны или что то же самое это сумма л так степеней числа q в степени l минус
[01:33:44.100 --> 01:34:05.740]  к ладно жи минус к вот чему это равно ну как известно 1 плюс z плюс z квадрат плюс и так
[01:34:05.740 --> 01:34:15.740]  далее плюс z в степени n минус 1 у нас равен к чему ну вот то есть это равно z поделить на z
[01:34:15.740 --> 01:34:26.620]  минус 1 известная формула из 7 класса ладно из 8 ну максимум вот ну соответственно значит это
[01:34:26.620 --> 01:34:37.180]  равно пишем q в степени g минус к соответственно в степени n минус 1 поделить на q в степени g
[01:34:37.180 --> 01:34:47.460]  минус к минус 1 но мы знаем что q в степени n равно 1 правда да получается это равно 1
[01:34:47.460 --> 01:35:01.700]  минус 1 поделить на q в степени g минус к минус 1 равно 0 буга гашу не так а шоу а шоу такое
[01:35:01.700 --> 01:35:15.100]  а шоу формула не работает что ли ой смотрите классно мы сделали круче мы искали матрицу чтобы
[01:35:15.100 --> 01:35:23.300]  домножить на вот эту и получить единичную а нашли матрицу что домножили не получили 0 да
[01:35:23.300 --> 01:35:29.900]  какой безобразие ну да действительно заметим что это формула работает естественно только
[01:35:29.900 --> 01:35:38.300]  в том случае когда z не равно 1 то есть это значит этот переход тоже будет равен когда q в степени
[01:35:38.300 --> 01:35:46.140]  g минус к не равно 1 а это происходит очевидно тогда и только тогда когда g не равно к то есть
[01:35:46.140 --> 01:35:58.500]  получается что везде кроме диагонали будут нули это уже похоже на правду правда вот а если у нас
[01:35:58.500 --> 01:36:05.780]  а теперь давайте посмотрим что если у нас d же житое но даже житое тут все просто сумма от
[01:36:05.780 --> 01:36:15.420]  нуля до n минус 1 значит q в степени g l умножить на q в степени минус g l ну шлеп шлеп 1 в общем
[01:36:15.420 --> 01:36:25.580]  короче n то есть мораль то есть получается d н н это банально единичная матрица размера n умноженная
[01:36:25.580 --> 01:36:36.820]  на n то есть обратная матрица к ушкам это такая же матрица от q минус 1 только еще надо поделить
[01:36:36.820 --> 01:36:52.380]  на n да ну ков минус 1 ну ку в степени минус 1 да какая-то матрица у которой я вот тут написал
[01:36:52.740 --> 01:37:03.060]  вот оказывается чему вот к сожалению нам не удалось избежать заметим что но но что поделать
[01:37:03.060 --> 01:37:12.380]  ну потому что мы часто перемножили две матрицы доказали что эта матрица состоит из
[01:37:12.380 --> 01:37:20.180]  н-ок на диагонали и нулей в остальных местах мы вот это аккуратно доказали вот и все приводит
[01:37:20.180 --> 01:37:29.980]  нас к это к следующему вот теперь заметим то есть нам нужно чтобы сделать fft получается нам
[01:37:29.980 --> 01:37:38.780]  нужно все домножить на матрицу только не завище не от q от q в минус 1 но заметим что q в минус 1
[01:37:38.780 --> 01:37:45.060]  это тоже хорошее число тоже n степень равна единице а n пополам той степени единица не равна правда
[01:37:45.060 --> 01:37:53.460]  то есть это означает что она тоже может быть передана fft как параметр в результате
[01:37:53.460 --> 01:38:11.760]  ну число q в минус первой обладает теми же хорошими свойствами что и q ну то есть что
[01:38:11.760 --> 01:38:17.660]  не военная степень равна единице n пополам ты не равна это это означает что как бы если я
[01:38:17.660 --> 01:38:26.140]  могу q передать fft вот вот вот fft то я и q 1 делить на q тоже могу передать ну то есть q в минус 1
[01:38:26.140 --> 01:38:52.380]  ну вот в результате обратно fft инф fft на самом деле то есть если нам передает q ну нам понятно
[01:38:52.980 --> 01:39:03.180]  параметр того какие значения в каких степенях какого ку нам выданы то идея очень простая мы
[01:39:03.180 --> 01:39:17.940]  запускаем fft от a то есть просто от 1 делить на q то есть q минус 1 и не забываем
[01:39:17.940 --> 01:39:28.300]  потом поделить на n все
[01:39:33.180 --> 01:39:51.060]  вот понятно что не так ну это мы взяли но просто 1 делить на q скорее всего у вас не получится
[01:39:51.060 --> 01:40:06.660]  в твоем поле единица ну а единица делить на q это обратный q элемент в этом поле да
[01:40:06.660 --> 01:40:20.540]  потому что мы обнаружили что-то обратно там от матрицы та же самая матрица с q в минус первой
[01:40:20.540 --> 01:40:26.420]  это не совсем обратная матрица давно жена на n
[01:40:26.420 --> 01:40:53.900]  но мы не хотим здесь получать матрицу мы не хотим получить массив а домноженный на эту обратную
[01:40:53.900 --> 01:41:04.900]  матрицу но да нет не на вторую матрицу она обратную к первой это но оказалось что обратная к первой как
[01:41:04.900 --> 01:41:11.540]  у нас выяснилось это вот эта матрица только еще на n деленное а потому что если мы умножить это
[01:41:11.540 --> 01:41:21.300]  будет д а д это е на н да поэтому чтобы получить но вот поэтому на самом деле вот можно вот скорее
[01:41:21.300 --> 01:41:36.580]  так писать тоже кстати вполне универсальный низ от поля не зависит но ку в минус 1 ку в минус
[01:41:36.580 --> 01:41:48.220]  первое что такое это 1 делить таку потому что мы кастуем единицу к полю f больше ничего не
[01:41:48.220 --> 01:42:00.220]  делаем но правильно но я не знаю я не но как сказать я мне в чем-то на автомате ощущение что
[01:42:00.220 --> 01:42:09.300]  инс на ку не на f не делится но нет это зависит конечно от перегрузки вашего оператора но
[01:42:09.300 --> 01:42:13.860]  скорее всего это не будет работать потому что скорее всего там минус 48 делить на ваш f он
[01:42:13.860 --> 01:42:22.580]  скорее всего не умеет вот но мне так кажется вот конкретно единицу он скастует но по-хорошему
[01:42:22.580 --> 01:42:32.100]  до правильно конечно на самом деле написать f1 вот так ну статики но там какой-нибудь статическую
[01:42:32.100 --> 01:42:38.020]  перемене почему статическая переменная с какого перепуга там типа завести статические
[01:42:38.180 --> 01:42:46.140]  под 0 единицу и минус 1 нет ну почему либо завести либо get one тут какой-нибудь статическую
[01:42:46.140 --> 01:42:54.420]  функцию написать как угодно это все не но ладно как ладно мы тут не самый формальный код ладно
[01:42:54.420 --> 01:43:04.460]  если вам так удобно вот вам один делить на ку наслаждайтесь вот вот такой вот красота
[01:43:09.020 --> 01:43:13.180]  и сейчас чего мы чего начали
[01:43:13.180 --> 01:43:37.580]  ну да ну да ну да ну да ну да ну да ну да ну да ну да ну да ну да ну да ну да ну да ну да ну да
[01:43:38.220 --> 01:43:42.340]  ну типа давайте ну давайте покажу просто как это теперь будет вред
[01:43:42.340 --> 01:43:53.620]  значит смотрите работать это будет так вот если вы хотите перемножить два многочлена вектор
[01:43:53.620 --> 01:44:03.540]  int допустим а и вектор int b я даже буду по константной ссылке передавать и допустим мы поверим что
[01:44:03.540 --> 01:44:11.980]  их коэффициенты там итоговый не превосходят чего вам надо значит смотрите как-то тогда
[01:44:11.980 --> 01:44:18.540]  будет выглядеть значит но на счет int n равно 1 как теперь перемножение многочлена выглядит
[01:44:18.540 --> 01:44:21.300]  теперь так ну по и значит
[01:44:21.300 --> 01:44:38.660]  вот ну находим ближе первую степень двойки которые не меньше ни а ни
[01:44:38.660 --> 01:44:53.460]  да умножаем еще на два чала да спасибо теперь умножаем еще на два потому что нам запасом надо
[01:44:53.460 --> 01:45:08.380]  помните да ну вот и конечно и теперь заводим собственную да давайте я так комплекс
[01:45:08.380 --> 01:45:24.020]  long double cld значит заводим наша любимая массива cld c а равно new cld от n
[01:45:24.020 --> 01:45:33.620]  ну и про цб еще не забудем
[01:45:33.620 --> 01:45:50.060]  там да вы стояли есть тип комплекс это прям комплексные числа да чтобы они работали можно
[01:45:50.060 --> 01:46:03.220]  подключить include комплекс но введение псевдонима на какой-то тип у нас такое не пока ставим у
[01:46:03.880 --> 01:46:15.960]  using и using cld равно пожалуйста пожалуйста как пожалуйста как скажете как скажете у нас
[01:46:15.960 --> 01:46:27.340]  вот такое да да да да да да да да да да да да да да да нет сайзов от массива он выдаёт
[01:46:27.340 --> 01:46:35.220]  сколько байт в массиве. Это не динамия, в смысле, почему не делает.
[01:46:35.220 --> 01:46:45.940]  Сейчас вот именно он же байтами выполняет, а у нас числа, у нас же не чары хранятся.
[01:46:45.940 --> 01:46:51.220]  Какая разница? Спеца, да, внимание, но тут интересно,
[01:46:51.220 --> 01:46:58.740]  в C++, в C++, ну обычно w и long w устроены так, что 0 кодируется полностью нулевым набором бит.
[01:46:58.740 --> 01:47:11.860]  Чего? Чем, если что.
[01:47:11.860 --> 01:47:17.700]  Сайзов СА и Сайзов СБ нормальны.
[01:47:17.700 --> 01:47:21.700]  Сайзов не работает так, он назначает размер-оказатель.
[01:47:21.700 --> 01:47:23.700]  Да, это размер-оказатель.
[01:47:23.700 --> 01:47:29.700]  Пожалуйста.
[01:47:29.700 --> 01:47:49.300]  А теперь смотрите, теперь в лице кушки, познакомьтесь, CLD-Q,
[01:47:50.180 --> 01:48:00.500]  так, CLD-ang, ну, во-первых, так, ну, во-первых, вам не помешается статическая константа.
[01:48:00.500 --> 01:48:24.580]  Во-первых, NP, во-вторых, у меня в визуалке ее как бы по-included нормально не получается.
[01:48:24.660 --> 01:48:32.660]  Почему?
[01:48:32.660 --> 01:48:36.660]  Это универсально от всех тестирующих, от всех компиляторов, от всех тестирующих системах.
[01:48:36.660 --> 01:48:44.660]  Ну, я под этим засылал просто во что угодно, и оно везде работает.
[01:48:44.660 --> 01:48:46.660]  Молодцы.
[01:48:46.740 --> 01:48:54.740]  Ну, молодцы, вы используете, давай так, вы используете так, я вот использую так, в общем, на вашу усмотреть.
[01:48:54.740 --> 01:48:58.740]  А хос L, это в лонгтаблак она считает?
[01:48:58.740 --> 01:49:04.740]  Она бы без этого не посчитала в лонгтаблак.
[01:49:04.740 --> 01:49:08.740]  Не, ну, посчитала бы, но я вот люблю QSL, чтобы просто для явности.
[01:49:08.740 --> 01:49:14.740]  Знаете, в дзене одного языка, как говорится, явное лучше, чем неявное.
[01:49:14.820 --> 01:49:28.820]  Ну, это означает, что это примерно как бы едино для всех, внутри всех вызовов этой функции.
[01:49:34.820 --> 01:49:38.820]  А функции тоже есть.
[01:49:38.820 --> 01:49:42.820]  То есть он каждый раз себя заново не пересчитывает?
[01:49:42.900 --> 01:49:46.900]  А хос L будет вызываться только один раз, да?
[01:49:46.900 --> 01:49:50.900]  Так вот, вызываем Q, и теперь, смотрите, немножко магии.
[01:49:50.900 --> 01:50:00.900]  Ну, во-первых, значит, запускаем FFT от C, A, N, и что-то там еще, что-то там это Q.
[01:50:00.900 --> 01:50:02.900]  И то же самое от B.
[01:50:06.900 --> 01:50:08.900]  Вот.
[01:50:08.980 --> 01:50:14.980]  Ну, здесь, чтобы лишний массив не плодить, вот легче уж так написать.
[01:50:14.980 --> 01:50:22.980]  После этого FFT от C, A, N, значит, 1.0 делить на Q, дай бог, чтобы для комплекса это работало.
[01:50:22.980 --> 01:50:28.980]  Ну, для конкретного комплекса можете вообще, на самом деле, вместо этого написать тут вот.
[01:50:28.980 --> 01:50:32.980]  Вместо этого можно написать Q.conj.
[01:50:32.980 --> 01:50:37.980]  Ну, мало кто знает, но для того Q, который мы выбрали, обратные и сопряженные – это одно и то же.
[01:50:38.060 --> 01:50:41.060]  Потому что модуль один.
[01:50:41.060 --> 01:50:43.060]  Именно.
[01:50:43.060 --> 01:50:49.060]  Да, это обратные FFT, да.
[01:50:49.060 --> 01:50:53.060]  А, ну да, правильно написать.
[01:50:53.060 --> 01:50:57.060]  Да, правильнее, конечно, написать, конечно, in FFT, да.
[01:50:59.060 --> 01:51:03.060]  Да, теперь остается только перернать это.
[01:51:08.060 --> 01:51:11.060]  Ну, ладно, может быть, правильнее.
[01:51:14.060 --> 01:51:17.060]  Может быть, даже вот так правильнее написать.
[01:51:21.060 --> 01:51:25.060]  Ну, просто размер реального произведения, он будет вот такой.
[01:51:25.140 --> 01:51:27.140]  Ну и что?
[01:51:27.140 --> 01:51:30.140]  Нужно просто потом селить ручьи нули и все равно удалить.
[01:51:30.140 --> 01:51:31.140]  А ну так.
[01:51:31.140 --> 01:51:33.140]  Может быть, так ледевые ручьи нули удалять.
[01:51:33.140 --> 01:51:36.140]  Сейчас непонятно, почему мы не читаем ледницу.
[01:51:36.140 --> 01:51:43.140]  Ну, потому что последний коэффициент имеет тут номера A.size-1 и B.size-1.
[01:51:43.140 --> 01:51:51.140]  Произведение – это коэффициент, их произведение пойдет в коэффициент A.size plus B.size-2.
[01:51:51.140 --> 01:51:54.140]  Что он был последним, поэтому мы тут пишем –1.
[01:51:54.220 --> 01:51:57.220]  Нормально, нам никто и не гарантировал, чтобы А нет.
[01:51:57.220 --> 01:52:00.220]  Вот, допустим, мы взяли произведение 9 на 9.
[01:52:00.220 --> 01:52:03.220]  У нас мы получили 81.
[01:52:03.220 --> 01:52:06.220]  Сами по себе 9 были размеры 1.
[01:52:06.220 --> 01:52:08.220]  Когда мы переножили, то мы получили…
[01:52:08.220 --> 01:52:11.220]  Мы перемножаем многочлены, а не длинные числа.
[01:52:12.220 --> 01:52:16.220]  Хотите перемножать длинные числа – это значит сводить их в перемножение многочленов,
[01:52:16.220 --> 01:52:19.220]  а потом развлекаетесь там с переносами.
[01:52:19.220 --> 01:52:21.220]  Ладно, сейчас вы увидите.
[01:52:21.220 --> 01:52:23.220]  То есть мы, обратите внимание,
[01:52:23.300 --> 01:52:27.300]  перемножаем поле, но мы все, мы не заморачиваемся.
[01:52:34.300 --> 01:52:39.300]  Ну вот, но здесь я пишу обычно что-то типа floor L от… значит…
[01:52:48.300 --> 01:52:49.300]  Потому что мы прибавляем 0,5.
[01:52:49.300 --> 01:52:50.300]  Да.
[01:52:50.380 --> 01:52:52.380]  Если вы хотите округлять по математическим правилам
[01:52:52.380 --> 01:52:55.380]  до ближайшего целого, то это вот да.
[01:52:55.380 --> 01:52:57.380]  Нет, там есть какой-нибудь раунд.
[01:52:57.380 --> 01:52:59.380]  Ну могли, а могли так.
[01:52:59.380 --> 01:53:01.380]  Который под капотом делает то же самое, на самом деле.
[01:53:01.380 --> 01:53:03.380]  Да, да, да.
[01:53:08.380 --> 01:53:09.380]  Вот.
[01:53:10.380 --> 01:53:12.380]  А, и самое важное.
[01:53:15.380 --> 01:53:19.380]  А в мейджине там можно будет задержать какой-то большой мусор?
[01:53:19.460 --> 01:53:20.460]  Сейчас.
[01:53:22.460 --> 01:53:23.460]  Конечно.
[01:53:24.460 --> 01:53:25.460]  Вот да.
[01:53:25.460 --> 01:53:26.460]  Да, киваруешь.
[01:53:27.460 --> 01:53:30.460]  В мейджине там может лежать какой-то большой мусор?
[01:53:32.460 --> 01:53:33.460]  Большой нет.
[01:53:34.460 --> 01:53:37.460]  Ну там скорее всего будет не сильно, ну там не сильно большой,
[01:53:37.460 --> 01:53:40.460]  но понятно, что чем больше коэффициенты, тем возможно он будет и больше.
[01:53:40.460 --> 01:53:42.460]  Если ты перемножаешь целые числа,
[01:53:42.460 --> 01:53:45.460]  он у тебя только за счет неточности доблов появляется.
[01:53:45.460 --> 01:53:47.460]  Поэтому он не сильно большой.
[01:53:47.540 --> 01:53:52.540]  Ну типа он не будет на порядок больше, чем у тебя в целой, ну точнее вещественной части.
[01:53:56.540 --> 01:53:59.540]  То есть если у тебя вещественные числа то же самое же.
[01:54:00.540 --> 01:54:01.540]  В смысле?
[01:54:02.540 --> 01:54:03.540]  Как ты...
[01:54:04.540 --> 01:54:08.540]  Там небольшая проблема, что у нас прям конкретные проблемы с точностью могут начаться.
[01:54:08.540 --> 01:54:13.540]  Ну в плане, здесь мы видишь плюс 0,5 и округляем вниз, а вещественных у нас не будет большой точности.
[01:54:13.620 --> 01:54:14.620]  Мы не знаем как...
[01:54:15.620 --> 01:54:18.620]  Что так, что так у нас точность теряется, потому что мы...
[01:54:19.620 --> 01:54:24.620]  Ну в целых у нас так точность не потеряется, если они у нас не сильно большие были.
[01:54:25.620 --> 01:54:27.620]  У нас Q это вещественное число.
[01:54:28.620 --> 01:54:29.620]  Ну да.
[01:54:29.620 --> 01:54:31.620]  И мы целые числа мы не жали на Q.
[01:54:31.620 --> 01:54:32.620]  Да.
[01:54:34.620 --> 01:54:35.620]  Да.
[01:54:35.620 --> 01:54:39.620]  Но у нас из-за того, как с алгебрической точки зрения во второй устроена,
[01:54:39.620 --> 01:54:42.620]  в идеале должны получиться целые числа,
[01:54:42.700 --> 01:54:43.700]  если...
[01:54:43.700 --> 01:54:44.700]  Ну да, целые числа.
[01:54:45.700 --> 01:54:48.700]  Если мы не пролетаем по точностям, мы пролетаем.
[01:54:53.700 --> 01:54:54.700]  Да.
[01:54:54.700 --> 01:54:57.700]  Ну вот округляет вниз тот раунд, поэтому я вот не люблю использовать,
[01:54:57.700 --> 01:55:00.700]  потому что я не знаю как он там работает для отрицательных чисел.
[01:55:00.700 --> 01:55:04.700]  То есть там минус 3.5, он будет это в сторону минус 3 округлять или минус 4.
[01:55:04.700 --> 01:55:07.700]  Так же он работает, он сам вот так написан.
[01:55:07.700 --> 01:55:08.700]  Да, ну окей, еще.
[01:55:08.780 --> 01:55:11.780]  Потому что ничего умнее там написать нельзя.
[01:55:13.780 --> 01:55:15.780]  Знаете, в процентиках написали что-то более умное.
[01:55:15.780 --> 01:55:18.780]  Знаете, там почему-то минус 20, 12 процент 7 не равно,
[01:55:18.780 --> 01:55:19.780]  же 2 почему-то.
[01:55:19.780 --> 01:55:21.780]  Потому что написали что-то более тупое.
[01:55:21.780 --> 01:55:24.780]  Ну вот мало ли, может тут тоже, я же не знаю.
[01:55:28.780 --> 01:55:31.780]  Так, ну ладно, короче.
[01:55:31.860 --> 01:55:34.860]  Очень короче, перемножение многочленов выглядит вот примерно,
[01:55:34.860 --> 01:55:35.860]  вот таким вот образом.
[01:55:36.860 --> 01:55:37.860]  Вот понятна?
[01:55:41.860 --> 01:55:43.860]  Так, ну это перемножение именно многочленов.
[01:55:45.860 --> 01:55:48.860]  Значит, если очень хочется перемножить именно длинные числа,
[01:55:53.860 --> 01:55:56.860]  то как бы это может выглядеть примерно следующим образом.
[01:55:56.940 --> 01:55:59.940]  Ну давайте я вот предположу, что мне и передают основание.
[01:56:13.940 --> 01:56:16.940]  Если так формально смотреть, то можно заявлять, что в плюсах
[01:56:16.940 --> 01:56:19.940]  и деление в целых числах работает неправильно.
[01:56:21.940 --> 01:56:24.940]  Ну потому что мы берем деление с эквалинием.
[01:56:26.940 --> 01:56:29.940]  Да, мы берем целую часть, то есть у нас должно быть
[01:56:29.940 --> 01:56:32.940]  деление с эквалинием вниз.
[01:56:34.940 --> 01:56:36.940]  А если мы делим там отрицательное на положительное,
[01:56:36.940 --> 01:56:38.940]  вообще не так, что такое.
[01:56:38.940 --> 01:56:41.940]  Там получается просто мы делим два модуля.
[01:56:41.940 --> 01:56:42.940]  Да.
[01:56:42.940 --> 01:56:45.940]  Ну да, ну вот я и говорю, что если так смотреть, то у нас
[01:56:45.940 --> 01:56:48.940]  деление с эквалинием ноль.
[01:56:48.940 --> 01:56:49.940]  То есть по моду.
[01:56:49.940 --> 01:56:50.940]  Ну да.
[01:56:50.940 --> 01:56:53.940]  Ну у нас и модуль с эквалинием ноль.
[01:56:53.940 --> 01:56:54.940]  Нет.
[01:56:56.940 --> 01:57:00.940]  Ну типа если у тебя положительное число n-1 по модуле,
[01:57:00.940 --> 01:57:02.940]  то это будет не минус один.
[01:57:09.940 --> 01:57:12.940]  Ну короче, я имею в виду модуль, не очень понятно,
[01:57:12.940 --> 01:57:13.940]  что значит эквалиния.
[01:57:13.940 --> 01:57:16.940]  Ну да, но в общем, он работает в той же логике,
[01:57:16.940 --> 01:57:17.940]  что и деление.
[01:57:17.940 --> 01:57:23.940]  Он работает в логике, что если мы берем частное к нему,
[01:57:23.940 --> 01:57:24.940]  то должно получиться само число.
[01:57:24.940 --> 01:57:25.940]  О, да.
[01:57:26.020 --> 01:57:29.020]  Я тут пока еще немножко магии написал.
[01:57:29.020 --> 01:57:30.020]  Магия?
[01:57:30.020 --> 01:57:31.020]  Магия.
[01:57:31.020 --> 01:57:32.020]  Магия.
[01:57:33.020 --> 01:57:36.020]  Ну ладно, никакая-то не магия, конечно, на самом деле.
[01:57:42.020 --> 01:57:44.020]  Но могу бейс написать, надо.
[01:57:44.020 --> 01:57:51.020]  Нет, ну если у нас тут бродят всякие ука, так что, знаете,
[01:57:51.100 --> 01:57:52.100]  ОС.
[01:57:57.100 --> 01:57:59.300]  Вот, ну ладно, я тут, конечно, всякие удаления ведущих
[01:57:59.300 --> 01:58:04.300]  нулей я, конечно, тут не убирал, но это уже локальность,
[01:58:04.300 --> 01:58:05.300]  это уже детали.
[01:58:05.300 --> 01:58:08.300]  Это вы уже сами будете писать длинную рифметику, напишите.
[01:58:14.300 --> 01:58:16.300]  Вот, а теперь начинается шоу.
[01:58:16.300 --> 01:58:17.300]  Так.
[01:58:17.300 --> 01:58:18.300]  Или начинается.
[01:58:18.300 --> 01:58:20.300]  А какое шоу?
[01:58:20.580 --> 01:58:21.580]  Разное.
[01:58:22.580 --> 01:58:23.580]  Так.
[01:58:25.580 --> 01:58:26.580]  Так.
[01:58:28.580 --> 01:58:30.580]  Не, сейчас я, нет, я просто прикидываю.
[01:58:30.580 --> 01:58:33.580]  Ну, просто, знаете, просто по FFTшку у нас куча блоков
[01:58:33.580 --> 01:58:35.580]  на самом деле, того, что вообще можно делать.
[01:58:35.580 --> 01:58:37.580]  Можно спойлеры, пожалуйста.
[01:58:37.580 --> 01:58:40.580]  Ну, смотрите, так, что как минимум на вскидку надо.
[01:58:40.580 --> 01:58:41.580]  Ну, конечно же, деление.
[01:58:41.580 --> 01:58:43.580]  В общем, деление многочленов и деление чисел.
[01:58:43.580 --> 01:58:45.580]  Вообще разные вещи.
[01:58:47.580 --> 01:58:49.580]  Зато деление извлечения корня, это будет одно и то
[01:58:49.580 --> 01:58:50.580]  же.
[01:58:50.580 --> 01:58:52.580]  Деление многочленов и чисел – разные вещи.
[01:58:52.580 --> 01:58:53.580]  Абсолютно.
[01:58:54.580 --> 01:58:56.580]  Ну, значит, так, если вы делите многочлены и знаете,
[01:58:56.580 --> 01:58:59.580]  что они поделятся нацелло, то да, это тогда одно и то
[01:58:59.580 --> 01:59:00.580]  же.
[01:59:00.580 --> 01:59:01.580]  За какую осень точка?
[01:59:02.580 --> 01:59:05.580]  А мы числа сможем любые делить?
[01:59:06.580 --> 01:59:07.580]  Ну, в поле.
[01:59:08.580 --> 01:59:09.580]  Не, понятно, в поле.
[01:59:09.580 --> 01:59:11.580]  То есть у нас там не будет никаких нюансиков.
[01:59:12.580 --> 01:59:14.580]  Нет, ну как сказать, числа мы будем честно делить
[01:59:14.580 --> 01:59:16.580]  со… Числа мы будем делить с остатком.
[01:59:16.580 --> 01:59:20.580]  Точнее, а с остатком, b соответственно еще иногда,
[01:59:20.580 --> 01:59:22.580]  еще столбиком до интересующего нас знака.
[01:59:23.580 --> 01:59:27.580]  И многочлены будем делить, и числа будем делить.
[01:59:28.580 --> 01:59:32.580]  Нет, нет, на этот раз нет вообще ни одно и то же.
[01:59:33.580 --> 01:59:37.580]  Я пытался на гуглить, там было что-то очень странное,
[01:59:37.580 --> 01:59:40.580]  там два деления, если у нас длины относятся вот так
[01:59:40.580 --> 01:59:44.580]  или вот так, это я где-то на алгоритмике, по-моему,
[01:59:44.580 --> 01:59:45.580]  такое.
[01:59:45.580 --> 01:59:48.580]  Так, ну ладно, значит у нас алгоритмика разная алгоритма,
[01:59:48.580 --> 01:59:49.580]  окей.
[01:59:49.580 --> 01:59:51.580]  То есть там прям какая-то дичь, я…
[01:59:51.580 --> 01:59:52.580]  Ну я понял, ладно.
[01:59:52.580 --> 01:59:55.580]  Ну вот, по-моему, по модулю деления там есть еще всякие,
[01:59:55.580 --> 01:59:57.580]  но, во-первых, надо узнать как-то, потому что…
[01:59:57.580 --> 01:59:59.580]  Как там задачи, как задачи с помощью этого решать,
[01:59:59.580 --> 02:00:02.580]  а задачи там бывают не тривиальные.
[02:00:02.580 --> 02:00:04.580]  Вот тут на финале одна… Ой, извините про спойлеры.
[02:00:04.580 --> 02:00:05.580]  Ладно.
[02:00:06.580 --> 02:00:07.580]  Не.
[02:00:08.580 --> 02:00:09.580]  Так, нет.
[02:00:09.580 --> 02:00:12.580]  Ну все, ладно, симус я вам не обещаю.
[02:00:12.580 --> 02:00:14.580]  Так, после деления что там еще будет?
[02:00:14.580 --> 02:00:18.580]  Да, ну будут всякие, ну будут всякие, ну, во-первых,
[02:00:18.580 --> 02:00:21.580]  там всякие задачи, всякие там мелочи типа там,
[02:00:21.580 --> 02:00:24.580]  и нахождение действительно многочлена,
[02:00:24.580 --> 02:00:28.580]  многочлена размера n в n уже на этот раз в произвольных
[02:00:28.580 --> 02:00:31.580]  точках будет, будет, наоборот, интерполяция там.
[02:00:31.580 --> 02:00:34.580]  Ну вот, ну, конечно, многомерная FFT там и так далее.
[02:00:34.580 --> 02:00:36.580]  Вот это вот, это вот все.
[02:00:36.580 --> 02:00:38.580]  И это, возможно, я еще что-то забыл, потому что я помню,
[02:00:38.580 --> 02:00:41.580]  что у нас там много всего на эту тему есть.
[02:00:41.580 --> 02:00:43.580]  Среди которых голосовали за FFT.
[02:00:43.580 --> 02:00:44.580]  А какая разница?
[02:00:44.580 --> 02:00:47.580]  Либо сейчас, либо… Не, Больтова я вас обрадую.
[02:00:47.580 --> 02:00:48.580]  Да.
[02:00:48.580 --> 02:00:50.580]  Закончим мы семестер на том, что, как бы, да, у вас
[02:00:50.580 --> 02:00:52.580]  на это все будет шикарное домашнее задание.
[02:00:52.580 --> 02:00:53.580]  Мы закончим на FFT.
[02:00:53.580 --> 02:00:55.580]  У нас есть big integer, блин, от мещерина.
[02:00:55.580 --> 02:00:56.580]  Вот отлично.
[02:00:56.580 --> 02:00:58.580]  А я вам еще накидал, а я вам еще накидал контестик
[02:00:58.580 --> 02:00:59.580]  на FFT.
[02:00:59.580 --> 02:01:01.580]  Так что напишите один код и будете выпихать два контеста.
[02:01:01.580 --> 02:01:02.580]  Кайф.
[02:01:02.580 --> 02:01:03.580]  То, что надо.
[02:01:03.580 --> 02:01:05.580]  У нас будет контест покучен на этом семесте.
[02:01:05.580 --> 02:01:06.580]  Нет.
[02:01:06.580 --> 02:01:07.580]  В этом семесте мы FFT закончим.
[02:01:07.580 --> 02:01:09.580]  У нас будет контест на FFT.
[02:01:10.580 --> 02:01:12.580]  Может я еще на строчке какие-нибудь задачи добавлю,
[02:01:12.580 --> 02:01:14.580]  потому что, как выяснилось, что там на финалах могут
[02:01:14.580 --> 02:01:16.580]  и задачи на сортировки давать.
[02:01:16.580 --> 02:01:20.580]  Можно я на 19 декабря публиковать, пожалуйста?
[02:01:20.580 --> 02:01:22.580]  Хорошо, публикую 18.
[02:01:22.580 --> 02:01:25.580]  А куда дедлайн будет по домашней?
[02:01:25.580 --> 02:01:28.580]  Ну, дедлайн, я думаю, будет сопоставить тоже с примерно
[02:01:28.580 --> 02:01:32.580]  дедлайном, собственно, курса, потому что…
[02:01:32.580 --> 02:01:35.580]  Будут ли там, на самом деле, ревьюшные задачи, я не уверен.
[02:01:35.580 --> 02:01:37.580]  Дедлайна курса есть просто два.
[02:01:37.580 --> 02:01:39.580]  Есть зачет.
[02:01:39.580 --> 02:01:41.580]  А, зачет, зачет, конечно.
[02:01:42.580 --> 02:01:44.580]  Так, ладно.
[02:01:44.580 --> 02:01:46.580]  Итак, попробуем.
[02:01:46.580 --> 02:01:48.580]  Давайте сейчас будем делить.
[02:01:48.580 --> 02:01:50.580]  Итак, сейчас будет.
[02:01:50.580 --> 02:01:52.580]  Так, вот теперь…
[02:01:52.580 --> 02:01:54.580]  Так, ладно, кто тут спал, кто знает фурия,
[02:01:54.580 --> 02:01:55.580]  наоборот, пришло время просыпаться.
[02:01:55.580 --> 02:01:57.580]  Сейчас начнется магия.
[02:01:57.580 --> 02:02:00.580]  Ладно, если в делении многочленов магия будет относительная такая,
[02:02:00.580 --> 02:02:03.580]  то как бы там…
[02:02:03.580 --> 02:02:06.580]  То потом, когда мы начнем делить реально числа,
[02:02:06.580 --> 02:02:07.580]  вот там начнется…
[02:02:07.580 --> 02:02:09.580]  То там уже придется вспоминать еще,
[02:02:09.580 --> 02:02:11.580]  что вы там сейчас нам это анализе проходите.
[02:02:11.580 --> 02:02:13.580]  А можно не надо?
[02:02:13.580 --> 02:02:15.580]  Нельзя.
[02:02:15.580 --> 02:02:17.580]  Рэд и Тейлора?
[02:02:17.580 --> 02:02:19.580]  Ну да.
[02:02:19.580 --> 02:02:21.580]  Ну, скорее формулам и Кларой она, если быть.
[02:02:21.580 --> 02:02:23.580]  Сейчас как там это?
[02:02:23.580 --> 02:02:25.580]  Сейчас там как-то остаток…
[02:02:25.580 --> 02:02:27.580]  Пиано, пиано.
[02:02:27.580 --> 02:02:29.580]  Нет, пиано – это просто ОАТ.
[02:02:29.580 --> 02:02:31.580]  Есть там достаточно чем-то в более адекватном виде.
[02:02:31.580 --> 02:02:33.580]  Вот.
[02:02:33.580 --> 02:02:35.580]  Вот скорее он нам понадобится.
[02:02:35.580 --> 02:02:37.580]  Но не волнуйтесь, там порядок максимум второй, так что не страшно.
[02:02:37.580 --> 02:02:39.580]  Что, хэши чего?
[02:02:39.580 --> 02:02:41.580]  Пиано.
[02:02:41.580 --> 02:02:43.580]  Ой, пиано, форта.
[02:02:43.580 --> 02:02:45.580]  Ой, Господи, так.
[02:02:45.580 --> 02:02:47.580]  Фордебел.
[02:02:47.580 --> 02:02:49.580]  Ага, ой, да.
[02:02:49.580 --> 02:02:51.580]  Фордопал.
[02:02:51.580 --> 02:02:53.580]  О, Господи.
[02:02:53.580 --> 02:02:55.580]  Да, там томверда – это хорошо, конечно.
[02:02:55.580 --> 02:02:57.580]  Так, ладно.
[02:02:57.580 --> 02:02:59.580]  Ладно, давайте пока что-нибудь похалявнее.
[02:03:01.580 --> 02:03:03.580]  Так, господа, немножко халявы.
[02:03:03.580 --> 02:03:05.580]  Давайте смотреть.
[02:03:05.580 --> 02:03:07.580]  Итак, это уже было.
[02:03:07.580 --> 02:03:09.580]  Нет.
[02:03:09.580 --> 02:03:11.580]  Сейчас мы с вами
[02:03:11.580 --> 02:03:13.580]  будем делить
[02:03:13.580 --> 02:03:15.580]  многочлены.
[02:03:15.580 --> 02:03:17.580]  Ну, в идеале…
[02:03:17.580 --> 02:03:19.580]  Ну, сначала мы хотим
[02:03:19.580 --> 02:03:21.580]  поделить многочлены с остатком.
[02:03:21.580 --> 02:03:23.580]  Но начнем мы не с этого.
[02:03:23.580 --> 02:03:25.580]  Место деления
[02:03:25.580 --> 02:03:27.580]  многочлены с остатками
[02:03:27.580 --> 02:03:29.580]  мы будем делить многочлены
[02:03:29.580 --> 02:03:31.580]  по модулю Q в степени N.
[02:03:31.580 --> 02:03:33.580]  Итак, что означает
[02:03:33.580 --> 02:03:35.580]  делить многочлены по модулю Q в степени N?
[02:03:35.580 --> 02:03:37.580]  Фу, по модулю T в степени N.
[02:03:37.580 --> 02:03:39.580]  Это означает, что, допустим,
[02:03:39.580 --> 02:03:41.580]  у меня есть…
[02:03:41.580 --> 02:03:43.580]  Там P от T равно…
[02:03:43.580 --> 02:03:45.580]  Ну, ладно, A от T равно,
[02:03:45.580 --> 02:03:47.580]  как всегда, там, A0 плюс
[02:03:47.580 --> 02:03:49.580]  A1 на T плюс
[02:03:49.580 --> 02:03:51.580]  A2 в степени T квадрат плюс
[02:03:51.580 --> 02:03:53.580]  и так далее, плюс, допустим,
[02:03:53.580 --> 02:03:55.580]  A, там, N-1
[02:03:55.580 --> 02:03:57.580]  на T в степени N-1.
[02:03:57.580 --> 02:03:59.580]  И вот,
[02:03:59.580 --> 02:04:01.580]  на T в степени N-1.
[02:04:01.580 --> 02:04:03.580]  И есть у меня многочлен B.
[02:04:05.580 --> 02:04:07.580]  То же самое,
[02:04:11.580 --> 02:04:13.580]  только до M.
[02:04:15.580 --> 02:04:17.580]  Я очень хочу найти такой
[02:04:17.580 --> 02:04:19.580]  многочлен C,
[02:04:19.580 --> 02:04:21.580]  что A сравнимо
[02:04:21.580 --> 02:04:23.580]  с BC по модулю
[02:04:23.580 --> 02:04:25.580]  T в степени N.
[02:04:29.580 --> 02:04:31.580]  Ну, что это значит?
[02:04:31.580 --> 02:04:33.580]  То же самое.
[02:04:33.580 --> 02:04:35.580]  A равно BC
[02:04:35.580 --> 02:04:37.580]  плюс T в степени N
[02:04:37.580 --> 02:04:39.580]  умножить на какой-то
[02:04:39.580 --> 02:04:41.580]  мистический многочлен D.
[02:04:45.580 --> 02:04:47.580]  То есть, допустим, меня интересуют
[02:04:47.580 --> 02:04:49.580]  какие-то младшие слагаемые,
[02:04:49.580 --> 02:04:51.580]  а то, что у меня там происходит
[02:04:51.580 --> 02:04:53.580]  на N порядке, я сбиваю.
[02:04:53.580 --> 02:04:55.580]  Но это, кстати, очень в стиле
[02:04:55.580 --> 02:04:57.580]  как раз тех самых рядов Тейлора.
[02:04:57.580 --> 02:04:59.580]  А?
[02:05:01.580 --> 02:05:03.580]  Да, сравним многочлены
[02:05:03.580 --> 02:05:05.580]  по модулю T, T в степени N.
[02:05:05.580 --> 02:05:07.580]  То есть, все, что там, T в степени,
[02:05:07.580 --> 02:05:09.580]  при коэффициентах...
[02:05:09.580 --> 02:05:11.580]  Ну ладно, даже...
[02:05:15.580 --> 02:05:17.580]  До чего?
[02:05:17.580 --> 02:05:19.580]  А вот они разными длинными будут.
[02:05:21.580 --> 02:05:23.580]  Но, на самом деле, с точки зрения
[02:05:23.580 --> 02:05:25.580]  вот этой задачи,
[02:05:25.580 --> 02:05:27.580]  мы вообще можем считать, что тут все одинаковые,
[02:05:27.580 --> 02:05:29.580]  они тут оба до K, на самом деле.
[02:05:31.580 --> 02:05:33.580]  На самом деле.
[02:05:33.580 --> 02:05:35.580]  Вот.
[02:05:37.580 --> 02:05:39.580]  Ну, потому что
[02:05:39.580 --> 02:05:41.580]  в этом вот равенстве
[02:05:41.580 --> 02:05:43.580]  будет выполняться, если вы
[02:05:43.580 --> 02:05:45.580]  A к B и C добавите что угодно
[02:05:45.580 --> 02:05:47.580]  умноженное на T в степени K
[02:05:47.580 --> 02:05:49.580]  или T в степени K плюс 1
[02:05:49.580 --> 02:05:51.580]  и так далее.
[02:05:51.580 --> 02:05:53.580]  Равенство, правильным или неправильным,
[02:05:53.580 --> 02:05:55.580]  от этого не перестанет быть.
[02:05:59.580 --> 02:06:01.580]  Чего еще раз?
[02:06:07.580 --> 02:06:09.580]  Ну да.
[02:06:09.580 --> 02:06:11.580]  По факту так оно и есть, да.
[02:06:11.580 --> 02:06:13.580]  А вот.
[02:06:13.580 --> 02:06:15.580]  Теперь выясняет вопрос.
[02:06:15.580 --> 02:06:17.580]  При каких A и B
[02:06:17.580 --> 02:06:19.580]  такое C
[02:06:19.580 --> 02:06:21.580]  вообще существует?
[02:06:21.580 --> 02:06:23.580]  Давайте так. Всегда ли такое C существует?
[02:06:25.580 --> 02:06:27.580]  Да, и при каких
[02:06:27.580 --> 02:06:29.580]  A и B оно не существует?
[02:06:29.580 --> 02:06:31.580]  Чего?
[02:06:31.580 --> 02:06:33.580]  Ну да, если B равно 0,
[02:06:33.580 --> 02:06:35.580]  а не равно 0, то очевидно такого C нет.
[02:06:35.580 --> 02:06:37.580]  А еще,
[02:06:37.580 --> 02:06:39.580]  это хорошо, да, это достаточно,
[02:06:39.580 --> 02:06:41.580]  чтобы ответ не существовал.
[02:06:45.580 --> 02:06:47.580]  Ну да, но тут бывает по-разному.
[02:06:47.580 --> 02:06:49.580]  Ведь заметим, что
[02:06:49.580 --> 02:06:51.580]  Б свободных членов
[02:06:51.580 --> 02:06:53.580]  как бы больше, чем
[02:06:53.580 --> 02:06:55.580]  А видимо.
[02:06:55.580 --> 02:06:57.580]  Ну да,
[02:06:57.580 --> 02:06:59.580]  но фактически да, если тут в начале
[02:06:59.580 --> 02:07:01.580]  B стоит больше нулей, чем
[02:07:01.580 --> 02:07:03.580]  А на самом деле.
[02:07:03.580 --> 02:07:05.580]  Вот.
[02:07:05.580 --> 02:07:07.580]  Но давайте так.
[02:07:07.580 --> 02:07:09.580]  Давайте оговоримся, что
[02:07:09.580 --> 02:07:11.580]  предположим, что B0
[02:07:11.580 --> 02:07:13.580]  не равно 0, давайте сразу оговоримся.
[02:07:15.580 --> 02:07:17.580]  Тогда я утверждаю, что C
[02:07:17.580 --> 02:07:19.580]  существует единственно всегда.
[02:07:19.580 --> 02:07:21.580]  Почему так?
[02:07:21.580 --> 02:07:23.580]  Ну, например, если вы попробовали,
[02:07:23.580 --> 02:07:25.580]  потому что на самом деле начинает работать
[02:07:25.580 --> 02:07:27.580]  просто метод деления столбиком.
[02:07:27.580 --> 02:07:29.580]  Вот чтобы это
[02:07:29.580 --> 02:07:31.580]  продемонстрировать, давайте я сейчас
[02:07:33.580 --> 02:07:35.580]  допустим скажу, что K у меня равно
[02:07:35.580 --> 02:07:37.580]  опять 5
[02:07:37.580 --> 02:07:39.580]  и поделю какой-нибудь там веселый многочлен.
[02:07:39.580 --> 02:07:41.580]  Ну я не знаю, 7 минус 4T плюс
[02:07:41.580 --> 02:07:43.580]  2T квадрат
[02:07:43.580 --> 02:07:45.580]  плюс 3T
[02:07:45.580 --> 02:07:47.580]  в четвертой минус
[02:07:47.580 --> 02:07:49.580]  А все?
[02:07:49.580 --> 02:07:51.580]  И поделю я его на какой-нибудь красивый
[02:07:51.580 --> 02:07:53.580]  многочлен. Ой нет, я третью степень
[02:07:53.580 --> 02:07:55.580]  произвел.
[02:07:55.580 --> 02:07:57.580]  Плюс
[02:07:57.580 --> 02:07:59.580]  5T в кубе пусть будет.
[02:07:59.580 --> 02:08:01.580]  И минус 3T в четвертой.
[02:08:01.580 --> 02:08:03.580]  А тут я напишу
[02:08:03.580 --> 02:08:05.580]  что-нибудь типа 2
[02:08:07.580 --> 02:08:09.580]  плюс 3T
[02:08:09.580 --> 02:08:11.580]  минус 5T
[02:08:11.580 --> 02:08:13.580]  в квадрате плюс 6T
[02:08:13.580 --> 02:08:15.580]  в кубе плюс
[02:08:15.580 --> 02:08:17.580]  Т в четвертой, чтобы уже совсем
[02:08:17.580 --> 02:08:19.580]  не заморачиваться.
[02:08:19.580 --> 02:08:21.580]  Значит, честно делим
[02:08:21.580 --> 02:08:23.580]  как это работает.
[02:08:23.580 --> 02:08:25.580]  Ну, во-первых, да, какой должен быть младший член
[02:08:25.580 --> 02:08:27.580]  этого коэффициента? Ну, очевидно, такой, что
[02:08:27.580 --> 02:08:29.580]  эта штука умножить на 2 должна быть
[02:08:29.580 --> 02:08:31.580]  равна 7 без вариантов, правда?
[02:08:31.580 --> 02:08:33.580]  Поэтому пишем
[02:08:33.580 --> 02:08:35.580]  7
[02:08:35.580 --> 02:08:37.580]  вторых.
[02:08:37.580 --> 02:08:39.580]  В поле
[02:08:39.580 --> 02:08:41.580]  рациональных чисел, допустим.
[02:08:41.580 --> 02:08:43.580]  Ну, давайте
[02:08:43.580 --> 02:08:45.580]  уж, чтобы понятно было происходящее
[02:08:45.580 --> 02:08:47.580]  давайте.
[02:08:47.580 --> 02:08:49.580]  Ну, делить по модулю 11,
[02:08:49.580 --> 02:08:51.580]  не.
[02:08:51.580 --> 02:08:53.580]  Значит, поехали.
[02:08:53.580 --> 02:08:55.580]  Тут у нас получается 7.
[02:08:55.580 --> 02:08:57.580]  Так, плюс 21
[02:08:57.580 --> 02:08:59.580]  вторых Т.
[02:08:59.580 --> 02:09:01.580]  Минус
[02:09:01.580 --> 02:09:03.580]  значит, соответственно,
[02:09:03.580 --> 02:09:05.580]  35 вторых Т.
[02:09:05.580 --> 02:09:07.580]  А мы начали
[02:09:07.580 --> 02:09:09.580]  делить с конца.
[02:09:09.580 --> 02:09:11.580]  Господи.
[02:09:11.580 --> 02:09:13.580]  Какой ты добрый, Миш.
[02:09:13.580 --> 02:09:15.580]  Как мы додумались до этого?
[02:09:15.580 --> 02:09:17.580]  Что?
[02:09:17.580 --> 02:09:19.580]  Как мы додумались до того, чтобы делить столбиком?
[02:09:19.580 --> 02:09:21.580]  Нет, чтобы делить с конца. Мы же так никогда
[02:09:21.580 --> 02:09:23.580]  столбиком не делим. А вот чуть позже я вам
[02:09:23.580 --> 02:09:25.580]  расскажу откуда мы это взяли.
[02:09:25.580 --> 02:09:27.580]  А нет, может отчасти для этого я вам
[02:09:27.580 --> 02:09:29.580]  сейчас свои собственные деления и провожу
[02:09:29.580 --> 02:09:31.580]  деление столбиком. Чтобы у нас сейчас там
[02:09:31.580 --> 02:09:33.580]  занавелись. Чтобы у вас
[02:09:33.580 --> 02:09:35.580]  было ощущение, что, в общем-то, отделение классическим
[02:09:35.580 --> 02:09:37.580]  столбиком и, в общем-то, нормальные
[02:09:37.580 --> 02:09:39.580]  деления навещения мы далеко не ушли.
[02:09:39.580 --> 02:09:41.580]  Смотрите. Тут 7 вторых.
[02:09:41.580 --> 02:09:43.580]  Так, значит, тут я нарисовал,
[02:09:43.580 --> 02:09:45.580]  вычитаем.
[02:09:45.580 --> 02:09:47.580]  Так, 7,7, ну шлёп-шлёп мы этого
[02:09:47.580 --> 02:09:49.580]  и добивались.
[02:09:49.580 --> 02:09:51.580]  Так, минус 29 вторых Т.
[02:09:51.580 --> 02:09:53.580]  Плюс
[02:09:53.580 --> 02:09:55.580]  39 вторых Т квадрат.
[02:09:55.580 --> 02:09:57.580]  Так, минус
[02:09:57.580 --> 02:09:59.580]  16 Т в кубе.
[02:09:59.580 --> 02:10:01.580]  Минус
[02:10:01.580 --> 02:10:03.580]  13 вторых Т
[02:10:03.580 --> 02:10:05.580]  в кубе.
[02:10:05.580 --> 02:10:07.580]  Так,
[02:10:07.580 --> 02:10:09.580]  отлично.
[02:10:09.580 --> 02:10:11.580]  Так, дальше у нас должно идти
[02:10:11.580 --> 02:10:13.580]  что-то при Т. То так, чтобы
[02:10:13.580 --> 02:10:15.580]  домножить эту штуку на два, было вот это.
[02:10:15.580 --> 02:10:17.580]  То есть, получается, пишем.
[02:10:17.580 --> 02:10:19.580]  На самом деле, минус
[02:10:19.580 --> 02:10:21.580]  29 четвертых Т.
[02:10:21.580 --> 02:10:23.580]  Ну и тут получается
[02:10:23.580 --> 02:10:25.580]  минус 29 вторых Т.
[02:10:25.580 --> 02:10:27.580]  Так, что тут у нас дальше?
[02:10:27.580 --> 02:10:29.580]  Теперь домножаем это на три. Получается
[02:10:29.580 --> 02:10:31.580]  87 четвертых Т
[02:10:31.580 --> 02:10:33.580]  в квадрате.
[02:10:33.580 --> 02:10:35.580]  Так, что там у нас дальше?
[02:10:35.580 --> 02:10:37.580]  Так, что у нас получается так?
[02:10:37.580 --> 02:10:39.580]  29 умножить на 5. Это сколько?
[02:10:39.580 --> 02:10:41.580]  Правильно. 145. Молодцы.
[02:10:43.580 --> 02:10:45.580]  Очень активно.
[02:10:47.580 --> 02:10:49.580]  Наверно. Может быть.
[02:10:49.580 --> 02:10:51.580]  Так, значит, далее.
[02:10:51.580 --> 02:10:53.580]  Домножаем на 6. Это то же самое.
[02:10:53.580 --> 02:10:55.580]  Домножить на 3 и поделить на 2.
[02:10:55.580 --> 02:10:57.580]  87 вторых.
[02:10:57.580 --> 02:10:59.580]  Т в четвертый.
[02:10:59.580 --> 02:11:01.580]  Т в пятый мы не пишем,
[02:11:01.580 --> 02:11:03.580]  потому что оно отправляется в модуль.
[02:11:03.580 --> 02:11:05.580]  Понятно, да?
[02:11:07.580 --> 02:11:09.580]  Да, но на самом деле,
[02:11:09.580 --> 02:11:11.580]  если вы аккуратно помодитесь,
[02:11:11.580 --> 02:11:13.580]  вы обнаружите, что действия, которые мы делаем,
[02:11:13.580 --> 02:11:15.580]  они более-менее вынуждены.
[02:11:15.580 --> 02:11:17.580]  То есть, мы вынуждены
[02:11:17.580 --> 02:11:19.580]  нашли этот коэффициент.
[02:11:19.580 --> 02:11:21.580]  А дальше все, что остальное
[02:11:21.580 --> 02:11:23.580]  должно делиться на Т, поэтому следующий коэффициент
[02:11:23.580 --> 02:11:25.580]  тоже оказывается вынужденным.
[02:11:27.580 --> 02:11:29.580]  Так, значит, тут у нас получается шлеп-шлеп.
[02:11:29.580 --> 02:11:31.580]  Так, 39 умножить на 2.
[02:11:31.580 --> 02:11:33.580]  Сколько?
[02:11:33.580 --> 02:11:35.580]  78.
[02:11:35.580 --> 02:11:37.580]  Так, 78 плюс 87.
[02:11:39.580 --> 02:11:41.580]  165.
[02:11:43.580 --> 02:11:45.580]  Так, что у нас тут?
[02:11:45.580 --> 02:11:47.580]  64, 145.
[02:11:47.580 --> 02:11:49.580]  Так, ага, 200.
[02:11:49.580 --> 02:11:51.580]  Минус 209 четвертых Т в кубе.
[02:11:53.580 --> 02:11:55.580]  О, соточка!
[02:11:55.580 --> 02:11:57.580]  Ну ладно, 50.
[02:11:59.580 --> 02:12:01.580]  Не, видите, они такие уж убойные вычисления
[02:12:01.580 --> 02:12:03.580]  получаются на самом деле.
[02:12:03.580 --> 02:12:05.580]  А почему у нас
[02:12:05.580 --> 02:12:07.580]  87 вторых у нас, а не 87 четвертых?
[02:12:07.580 --> 02:12:09.580]  Это четвертых.
[02:12:13.580 --> 02:12:15.580]  Так, дальше.
[02:12:15.580 --> 02:12:17.580]  Так, значит, теперь 165.
[02:12:17.580 --> 02:12:19.580]  Что у нас дальше получается?
[02:12:19.580 --> 02:12:21.580]  165 восьмых.
[02:12:21.580 --> 02:12:23.580]  Ну все логика понятна.
[02:12:23.580 --> 02:12:25.580]  Не, ну что, ну давайте хоть одну
[02:12:25.580 --> 02:12:27.580]  интерацию-то. Ну тут, видите, тут
[02:12:27.580 --> 02:12:29.580]  сейчас быстро это все закончится.
[02:12:35.580 --> 02:12:37.580]  А оно там получилось Т в пятой,
[02:12:37.580 --> 02:12:39.580]  поэтому его можно не вычислять.
[02:12:43.580 --> 02:12:45.580]  Ну, то есть там просто тут, на самом деле
[02:12:45.580 --> 02:12:47.580]  как бы, можно сказать, за этой стенкой
[02:12:47.580 --> 02:12:49.580]  там еще какие-то там Т в пятой водятся.
[02:12:49.580 --> 02:12:51.580]  Но с точки зрения по модулю
[02:12:51.580 --> 02:12:53.580]  они нас не волнуют. Нам главное, чтоб тут
[02:12:53.580 --> 02:12:55.580]  остался, нам
[02:12:55.580 --> 02:12:57.580]  главное, чтоб тут нолик остался.
[02:12:59.580 --> 02:13:01.580]  Значит так, пишем
[02:13:01.580 --> 02:13:03.580]  165 четвертых Т в квадрате.
[02:13:03.580 --> 02:13:05.580]  Так, тут у нас что? Домножаем
[02:13:05.580 --> 02:13:07.580]  на 3. 165 умножить на 3. Сколько?
[02:13:07.580 --> 02:13:09.580]  495.
[02:13:11.580 --> 02:13:13.580]  Вот, да, это я умею, да.
[02:13:15.580 --> 02:13:17.580]  О, 165 умножить на 5.
[02:13:19.580 --> 02:13:21.580]  825.
[02:13:21.580 --> 02:13:23.580]  Браво.
[02:13:23.580 --> 02:13:25.580]  Так.
[02:13:25.580 --> 02:13:27.580]  О. Вычитаем.
[02:13:27.580 --> 02:13:29.580]  Так.
[02:13:29.580 --> 02:13:31.580]  Ну, как всегда, 209.
[02:13:31.580 --> 02:13:33.580]  Так, сколько там? 418
[02:13:33.580 --> 02:13:35.580]  плюс 495.
[02:13:35.580 --> 02:13:37.580]  895 плюс 18.
[02:13:37.580 --> 02:13:39.580]  913.
[02:13:41.580 --> 02:13:43.580]  913 8Т
[02:13:43.580 --> 02:13:45.580]  в кубе, минус
[02:13:45.580 --> 02:13:47.580]  1220
[02:13:47.580 --> 02:13:49.580]  куб.
[02:13:49.580 --> 02:13:51.580]  Да, правильно.
[02:13:51.580 --> 02:13:53.580]  1225 восьмых Т в четвертых.
[02:13:53.580 --> 02:13:55.580]  Все нормально.
[02:13:55.580 --> 02:13:57.580]  Ах, да, действительно.
[02:13:57.580 --> 02:13:59.580]  Ладно, просто 225.
[02:13:59.580 --> 02:14:01.580]  А, тоже чушь, да.
[02:14:01.580 --> 02:14:03.580]  Да, минус
[02:14:03.580 --> 02:14:05.580]  400 плюс. В общем, 425
[02:14:05.580 --> 02:14:07.580]  и плюс. Да, все нормально. Вот так.
[02:14:09.580 --> 02:14:11.580]  Чего? Где?
[02:14:11.580 --> 02:14:13.580]  Где вот
[02:14:13.580 --> 02:14:15.580]  вот тот?
[02:14:15.580 --> 02:14:17.580]  913 8.
[02:14:19.580 --> 02:14:21.580]  Вот здесь?
[02:14:21.580 --> 02:14:23.580]  Ну, минус 209, минус
[02:14:23.580 --> 02:14:25.580]  455.
[02:14:25.580 --> 02:14:27.580]  А?
[02:14:27.580 --> 02:14:29.580]  Столбик такой все равно.
[02:14:29.580 --> 02:14:31.580]  Почему мы его воврат?
[02:14:31.580 --> 02:14:33.580]  Потому что, я же огласил задачу.
[02:14:33.580 --> 02:14:35.580]  Мы как бы делим по модлю
[02:14:35.580 --> 02:14:37.580]  Т в степенька. Это не то деление столбиком,
[02:14:37.580 --> 02:14:39.580]  которое мы обычно делали.
[02:14:39.580 --> 02:14:41.580]  Мы другую задачу решаем.
[02:14:41.580 --> 02:14:43.580]  То, что вы сейчас делали, можно было делать в обратную сторону.
[02:14:43.580 --> 02:14:45.580]  Что значит в обратную сторону?
[02:14:47.580 --> 02:14:49.580]  Нет, погоди, погоди. Мы не многочлены делим.
[02:14:49.580 --> 02:14:51.580]  Мы не делим многочлены с остатком в классическом смысле.
[02:14:51.580 --> 02:14:53.580]  Мы делим многочлены по модлю
[02:14:53.580 --> 02:14:55.580]  в степенька. Это принципиально другая операция.
[02:14:57.580 --> 02:14:59.580]  Пока. Поэтому как бы
[02:14:59.580 --> 02:15:01.580]  мы ее делаем вот в
[02:15:01.580 --> 02:15:03.580]  Ну, как, Падик?
[02:15:07.580 --> 02:15:09.580]  А как она будет с другой стороны работать?
[02:15:09.580 --> 02:15:11.580]  Я вот поделю четвертую степень
[02:15:11.580 --> 02:15:13.580]  Получу там три, что-то вычту.
[02:15:13.580 --> 02:15:15.580]  Тут будет меньше четвертой степени, а тут четвертой степень.
[02:15:15.580 --> 02:15:17.580]  Что вы дальше делать будете?
[02:15:21.580 --> 02:15:23.580]  Напишу ноль, и выиграл.
[02:15:23.580 --> 02:15:25.580]  Ну, вот.
[02:15:25.580 --> 02:15:27.580]  А нельзя. У нас тут, видите,
[02:15:27.580 --> 02:15:29.580]  об этих временах у нас остатков нет.
[02:15:29.580 --> 02:15:31.580]  У нас есть вот этот вот аут
[02:15:31.580 --> 02:15:33.580]  в той степеника.
[02:15:35.580 --> 02:15:37.580]  Ну и последний член, который у нас остался,
[02:15:37.580 --> 02:15:39.580]  пишем, минус
[02:15:39.580 --> 02:15:41.580]  913 шестнадцатых.
[02:15:41.580 --> 02:15:43.580]  Вот, давайте. Финальное.
[02:15:43.580 --> 02:15:45.580]  Чего там 405?
[02:15:45.580 --> 02:15:47.580]  425.
[02:15:47.580 --> 02:15:49.580]  Там же был
[02:15:49.580 --> 02:15:51.580]  минус сверху.
[02:15:51.580 --> 02:15:53.580]  Чего?
[02:15:53.580 --> 02:15:55.580]  Тут было минус 400,
[02:15:55.580 --> 02:15:57.580]  минус 408. Тут мы прибавили 825.
[02:15:57.580 --> 02:15:59.580]  Получилось плюс 425.
[02:15:59.580 --> 02:16:01.580]  Да, это 825.
[02:16:01.580 --> 02:16:03.580]  Так, ну поехали.
[02:16:03.580 --> 02:16:05.580]  Минус 913
[02:16:05.580 --> 02:16:07.580]  восьмых в кубе.
[02:16:07.580 --> 02:16:09.580]  Теперь надо просто так.
[02:16:09.580 --> 02:16:11.580]  913 на 3 умножить.
[02:16:11.580 --> 02:16:13.580]  Сколько у нас там получится? Ой, какие халявные числа.
[02:16:13.580 --> 02:16:15.580]  2739.
[02:16:15.580 --> 02:16:17.580]  Шестнадцатых.
[02:16:17.580 --> 02:16:19.580]  Четвертый.
[02:16:19.580 --> 02:16:21.580]  Окей.
[02:16:21.580 --> 02:16:23.580]  Так.
[02:16:25.580 --> 02:16:27.580]  Так, 850.
[02:16:27.580 --> 02:16:29.580]  Да, значит.
[02:16:29.580 --> 02:16:31.580]  Ага.
[02:16:31.580 --> 02:16:33.580]  Ага.
[02:16:33.580 --> 02:16:35.580]  Ну да, логично.
[02:16:35.580 --> 02:16:37.580]  А нет, не логично.
[02:16:37.580 --> 02:16:39.580]  А тут плюс 850 надо.
[02:16:39.580 --> 02:16:41.580]  3,5.
[02:16:41.580 --> 02:16:43.580]  Халявно, да. 3,589 шестнадцатых.
[02:16:43.580 --> 02:16:45.580]  Вот.
[02:16:45.580 --> 02:16:47.580]  Ну и последний
[02:16:47.580 --> 02:16:49.580]  член, который тут окажется,
[02:16:49.580 --> 02:16:51.580]  это соответственно плюс 3589
[02:16:51.580 --> 02:16:53.580]  32
[02:16:53.580 --> 02:16:55.580]  Т в четвертый.
[02:16:55.580 --> 02:16:57.580]  Ну тут понятно.
[02:16:59.580 --> 02:17:01.580]  Т в четвертый.
[02:17:01.580 --> 02:17:03.580]  Все.
[02:17:03.580 --> 02:17:05.580]  А как же?
[02:17:05.580 --> 02:17:07.580]  Не, ну это халявно.
[02:17:07.580 --> 02:17:09.580]  Так.
[02:17:09.580 --> 02:17:11.580]  А?
[02:17:11.580 --> 02:17:13.580]  Да, мы поделили многочлен
[02:17:13.580 --> 02:17:15.580]  А на многочлен В
[02:17:15.580 --> 02:17:17.580]  по модулю Т в пятый.
[02:17:17.580 --> 02:17:19.580]  Вот чисто теоретически это примерно вот так
[02:17:19.580 --> 02:17:21.580]  делается. На уровне определения,
[02:17:21.580 --> 02:17:23.580]  по крайней мере.
[02:17:23.580 --> 02:17:25.580]  Да, теперь нам надо два.
[02:17:25.580 --> 02:17:27.580]  Во-первых, как это сделать
[02:17:27.580 --> 02:17:29.580]  быстро там за энлогенов, во-вторых, зачем
[02:17:29.580 --> 02:17:31.580]  мы вообще это ввели?
[02:17:33.580 --> 02:17:35.580]  Чего?
[02:17:35.580 --> 02:17:37.580]  Ну действительно, да.
[02:17:37.580 --> 02:17:39.580]  Заметим, что если у нас
[02:17:39.580 --> 02:17:41.580]  В0 не равно нулю,
[02:17:41.580 --> 02:17:43.580]  В0 не равно нулю,
[02:17:43.580 --> 02:17:45.580]  то мы в принципе можем
[02:17:45.580 --> 02:17:47.580]  на самом деле
[02:17:47.580 --> 02:17:49.580]  к многочлену В
[02:17:49.580 --> 02:17:51.580]  найти обратное.
[02:17:51.580 --> 02:17:53.580]  Логично, да?
[02:17:53.580 --> 02:17:55.580]  Значит, как
[02:17:55.580 --> 02:17:57.580]  мы это будем делать?
[02:17:57.580 --> 02:17:59.580]  Ну если мы найдем обратное,
[02:17:59.580 --> 02:18:01.580]  то тогда, чтобы поделить А на В,
[02:18:01.580 --> 02:18:03.580]  надо просто А умножить на обратное.
[02:18:03.580 --> 02:18:05.580]  Логично, да?
[02:18:05.580 --> 02:18:07.580]  То есть, хотим найти такое В-1,
[02:18:07.580 --> 02:18:09.580]  чтобы В умножить на В-1
[02:18:09.580 --> 02:18:11.580]  было сравнимо с единицей
[02:18:11.580 --> 02:18:13.580]  по модулю Т в степени N.
[02:18:13.580 --> 02:18:15.580]  Логично, да?
[02:18:21.580 --> 02:18:23.580]  В смысле?
[02:18:23.580 --> 02:18:25.580]  Ну как бы, если мы найдем такое обратное,
[02:18:25.580 --> 02:18:27.580]  то мы А сможем поделить на В, вот в этом смысле.
[02:18:31.580 --> 02:18:33.580]  Ну это
[02:18:33.580 --> 02:18:35.580]  определение многочленов
[02:18:35.580 --> 02:18:37.580]  В-1.
[02:18:37.580 --> 02:18:39.580]  Да, вот из этого механизма следует,
[02:18:39.580 --> 02:18:41.580]  что он существует.
[02:18:41.580 --> 02:18:43.580]  И В-1
[02:18:43.580 --> 02:18:45.580]  это В на В-1?
[02:18:45.580 --> 02:18:47.580]  Ну типа.
[02:18:47.580 --> 02:18:49.580]  А, ну ясно.
[02:18:49.580 --> 02:18:51.580]  Вот.
[02:18:51.580 --> 02:18:53.580]  Теперь Ч.
[02:18:53.580 --> 02:18:55.580]  Внимание, внимание.
[02:18:55.580 --> 02:18:57.580]  По модуле ТК?
[02:18:57.580 --> 02:18:59.580]  А, у нас К, ну ладно.
[02:19:01.580 --> 02:19:03.580]  Так вот.
[02:19:03.580 --> 02:19:05.580]  Давайте сделаем вот как.
[02:19:05.580 --> 02:19:07.580]  Давайте скажем, что
[02:19:07.580 --> 02:19:09.580]  К это у нас, как всегда,
[02:19:09.580 --> 02:19:11.580]  степень двойки, на самом деле.
[02:19:13.580 --> 02:19:15.580]  Там 2 в степени L, допустим, да?
[02:19:17.580 --> 02:19:19.580]  И давайте еще скажем, что
[02:19:19.580 --> 02:19:21.580]  B от T.
[02:19:21.580 --> 02:19:23.580]  Ну, что такое B от T?
[02:19:23.580 --> 02:19:25.580]  Если мы уж по модулю Т в степень К,
[02:19:25.580 --> 02:19:27.580]  то это равно B1T плюс B2 в степени T
[02:19:27.580 --> 02:19:29.580]  в квадрат, плюс и так далее, плюс
[02:19:29.580 --> 02:19:31.580]  и так далее.
[02:19:31.580 --> 02:19:33.580]  Логично, да?
[02:19:33.580 --> 02:19:35.580]  Внимание.
[02:19:35.580 --> 02:19:37.580]  Давайте скажем, что
[02:19:37.580 --> 02:19:39.580]  B от T.
[02:19:39.580 --> 02:19:41.580]  Это равно B0T
[02:19:41.580 --> 02:19:43.580]  плюс T в степени К пополам
[02:19:43.580 --> 02:19:45.580]  на B1T.
[02:19:45.580 --> 02:19:47.580]  Помните, вот как мы в каратсубе делали.
[02:19:47.580 --> 02:19:49.580]  Ну, то есть B0 и B1
[02:19:49.580 --> 02:19:51.580]  это многочлены размера К пополам.
[02:19:51.580 --> 02:19:53.580]  Понятно, каким образом.
[02:19:53.580 --> 02:19:55.580]  Нет, только в каратсубе.
[02:19:55.580 --> 02:19:57.580]  А где еще?
[02:19:57.580 --> 02:19:59.580]  Т в степени К.
[02:19:59.580 --> 02:20:01.580]  Т в степени К,
[02:20:01.580 --> 02:20:03.580]  только в классическом каратсубе мы так делали.
[02:20:03.580 --> 02:20:05.580]  Теперь немножко...
[02:20:05.580 --> 02:20:07.580]  Ну вот.
[02:20:07.580 --> 02:20:09.580]  Теперь, значит, идея такая.
[02:20:11.580 --> 02:20:13.580]  Значит, давайте
[02:20:13.580 --> 02:20:15.580]  найдем
[02:20:15.580 --> 02:20:17.580]  рекурсивно
[02:20:17.580 --> 02:20:19.580]  B0 в минус
[02:20:19.580 --> 02:20:21.580]  1.
[02:20:21.580 --> 02:20:23.580]  То есть пусть у меня B0 в минус 1
[02:20:23.580 --> 02:20:25.580]  это такое многочлен, что B0
[02:20:25.580 --> 02:20:27.580]  было сравнимо
[02:20:27.580 --> 02:20:29.580]  с единицей по воду LUT
[02:20:29.580 --> 02:20:31.580]  в степени К пополам.
[02:20:35.580 --> 02:20:37.580]  Вот, понятно, да?
[02:20:41.580 --> 02:20:43.580]  Вот, допустим, мы это
[02:20:43.580 --> 02:20:45.580]  откуда-то взяли.
[02:20:47.580 --> 02:20:49.580]  Только для B0?
[02:20:49.580 --> 02:20:51.580]  Ну, только конкретно для B0.
[02:20:51.580 --> 02:20:53.580]  Я утверждаю, что больше нам и не понадобится.
[02:20:55.580 --> 02:20:57.580]  Вот почему.
[02:20:57.580 --> 02:20:59.580]  Давайте скажем, что
[02:20:59.580 --> 02:21:01.580]  B в минус 1
[02:21:01.580 --> 02:21:03.580]  значит
[02:21:03.580 --> 02:21:05.580]  чему это равно?
[02:21:05.580 --> 02:21:07.580]  Я утверждаю, что
[02:21:07.580 --> 02:21:09.580]  B это равно B0 в минус 1
[02:21:09.580 --> 02:21:11.580]  плюс T в степени К пополам
[02:21:11.580 --> 02:21:13.580]  на какой-то мистический многочлен E.
[02:21:17.580 --> 02:21:19.580]  Ну, так я могу тоже этот многочлен разбить
[02:21:19.580 --> 02:21:21.580]  на те, у кого
[02:21:21.580 --> 02:21:23.580]  коэффициенты меньше, как пополам,
[02:21:23.580 --> 02:21:25.580]  и начинать с К пополам, да?
[02:21:27.580 --> 02:21:29.580]  И более того, достаточно очевидно,
[02:21:29.580 --> 02:21:31.580]  что первые К пополам коэффициентов
[02:21:31.580 --> 02:21:33.580]  ровно B0 в минус 1 будут, правда?
[02:21:33.580 --> 02:21:35.580]  Ну,
[02:21:35.580 --> 02:21:37.580]  не очевидно.
[02:21:37.580 --> 02:21:39.580]  Очевидно же два выделения.
[02:21:41.580 --> 02:21:43.580]  Еще раз.
[02:21:47.580 --> 02:21:49.580]  А, да, логично.
[02:21:53.580 --> 02:21:55.580]  Чего?
[02:21:55.580 --> 02:21:57.580]  Ну, не делим, а обращаем.
[02:21:57.580 --> 02:21:59.580]  Ну, утверждается, что
[02:21:59.580 --> 02:22:01.580]  если вы хотите найти в этом обращении
[02:22:01.580 --> 02:22:03.580]  первые К пополам коэффициентов, то для этого достаточно
[02:22:03.580 --> 02:22:05.580]  обратить вот это.
[02:22:05.580 --> 02:22:07.580]  Ну, потому что, смотрите, давайте вот
[02:22:07.580 --> 02:22:09.580]  представим себе, что B в минус 1
[02:22:09.580 --> 02:22:11.580]  это равно, там я не знаю,
[02:22:11.580 --> 02:22:13.580]  F плюс T в степени К пополам
[02:22:13.580 --> 02:22:15.580]  на E, да?
[02:22:15.580 --> 02:22:17.580]  И тогда мы с вами знаем, что
[02:22:17.580 --> 02:22:19.580]  единица сравнима по модулю
[02:22:19.580 --> 02:22:21.580]  T в степени К пополам с B
[02:22:21.580 --> 02:22:23.580]  на B в минус 1, да? Это равно
[02:22:23.580 --> 02:22:25.580]  B0 плюс
[02:22:25.580 --> 02:22:27.580]  B1 на T в степени К пополам
[02:22:27.580 --> 02:22:29.580]  умножить
[02:22:29.580 --> 02:22:31.580]  на F плюс T пополам
[02:22:31.580 --> 02:22:33.580]  на E.
[02:22:35.580 --> 02:22:37.580]  Да, это равно
[02:22:37.580 --> 02:22:39.580]  B0F, вот я так
[02:22:39.580 --> 02:22:41.580]  если раскрою скорую, плюс T в степени К пополам
[02:22:41.580 --> 02:22:43.580]  на очень много
[02:22:43.580 --> 02:22:45.580]  чего. Это сравнимо по модулю T в степени
[02:22:45.580 --> 02:22:47.580]  К пополам с
[02:22:47.580 --> 02:22:49.580]  B0F.
[02:22:49.580 --> 02:22:51.580]  Все. Так что вывод F
[02:22:51.580 --> 02:22:53.580]  равен B0 в минус 1.
[02:22:55.580 --> 02:22:57.580]  Что?
[02:22:59.580 --> 02:23:01.580]  И還有 T в степени К пополам
[02:23:01.580 --> 02:23:03.580]  Ну, неважно. Давай again.
[02:23:03.580 --> 02:23:11.580]  Мы, получается, ищем по модулю
[02:23:11.580 --> 02:23:13.580]  F в степени К пополам.
[02:23:13.580 --> 02:23:15.580]  Ну, когда я беру diesel
[02:23:15.580 --> 02:23:17.580]  по модулю T в степени К по полам,
[02:23:17.580 --> 02:23:19.580]  мусор, как раз, отбрасывает.
[02:23:19.580 --> 02:23:21.580]  У нас же, вот там, да、
[02:23:21.580 --> 02:23:23.580]  мы считали F в степени
[02:23:23.580 --> 02:23:25.220]  К. Но если у нас есть
[02:23:25.220 --> 02:23:27.220]  равенство по модулю T в степени K, то это же
[02:23:27.220 --> 02:23:29.220]  равенство работает и по модулю T в степени К пополам.
[02:23:29.220 --> 02:23:37.620]  Ну, когда вы берете просто t в меньшей степени, вы просто лишние еще несколько коэффициентов отбрасываете.
[02:23:37.620 --> 02:23:51.120]  Вот. Так что получается вот этот f, так что теперь мы можем уже точно утверждать, что это b0-1, да?
[02:23:51.120 --> 02:23:57.920]  Ну, а теперь смотрите. Теперь давайте внимательно...
[02:23:57.920 --> 02:24:06.420]  Ну, кажется, осталось найти обратный f-0 и их...
[02:24:06.420 --> 02:24:11.420]  Не-не-не, ну там, погодите. На самом деле... Ну, давайте еще раз то же самое напишем.
[02:24:11.720 --> 02:24:16.720]  Итак, значит, мы ждаем 1 сравнимо по модулю t в степени k на...
[02:24:16.720 --> 02:24:29.720]  Значит, b0 плюс b1 на t в степени k пополам на какой-то там b0-1 плюс e на t в степени k пополам.
