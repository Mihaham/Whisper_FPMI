[00:00.000 --> 00:19.000]  Мы с вами продолжаем, меня в прошлый раз не было, а коллега Виталий подменил меня немного свежими лекциями, значит, я сделал все результаты пересмотреть, посмотри в вопрос.
[00:19.000 --> 00:23.000]  У меня есть вопрос, я подношу извинения, мне пришлось уехать.
[00:23.000 --> 00:36.000]  Будет еще один блок, который будет читать Виталий, он достаточно хардовый, но презентацию там с поискениями, с примерами они будут выложены.
[00:36.000 --> 00:48.000]  Что еще? Кажется, будущий вопрос по поводу колоколема, когда он будет, он будет по притворительным планам, я считал, он будет в начале ноября.
[00:48.000 --> 01:00.000]  Я могу ошибаться в плюс-минус неделю с датами, но вроде бы, если мы сегодня отчитываем лекцию, даже что-то успеваем, то он будет в конце октября, скорее всего начнется.
[01:00.000 --> 01:26.000]  Если мы сегодня не успеем одну тему, то он где-то будет в начале ноября. Где-то вот такие вот у нас эстимейты по колоколам будут проводиться совместно, там будет несколько семинаристов, мы еще точно с форматом до конца не отделились.
[01:27.000 --> 01:37.000]  Ну, мы друг другу обычно уходим, да, я там буду. Но это не значит, что можно скалявить и, допустим, начать проводить.
[01:41.000 --> 01:45.000]  Так, давайте комментируем, на чем вы в прошлый раз-то остановились?
[01:46.000 --> 01:50.000]  Мы доказали, что конечная формата и квалифтная контекция не действует на матче.
[01:50.000 --> 01:52.000]  Нет, а мне не действует на матче.
[01:52.000 --> 01:55.000]  Так, а вы, в определенной контекции, свободны на матче?
[01:55.000 --> 01:57.000]  Да, все кроматисты кроматисты.
[01:59.000 --> 02:03.000]  Ну да, давайте напомним его, потому что сегодня нам придется им пользоваться.
[02:15.000 --> 02:20.000]  И с чего она состоит?
[02:20.000 --> 02:24.000]  Из множественных терминалов.
[02:24.000 --> 02:27.000]  Да, это множественные терминалы, ага.
[02:27.000 --> 02:30.000]  Из множественных терминалов.
[02:30.000 --> 02:33.000]  Алфавит, дальше.
[02:33.000 --> 02:35.000]  Стартовый терминал S.
[02:35.000 --> 02:40.000]  Да, стартовый терминал S, иногда его меняется правилами и множество правил.
[02:41.000 --> 02:45.000]  И какие свойства должны быть выполнены?
[02:45.000 --> 02:48.000]  Первое.
[02:48.000 --> 02:52.000]  Что должны мы сказать про множественные терминалы?
[02:52.000 --> 02:54.000]  Англичная.
[02:54.000 --> 02:57.000]  Да.
[02:57.000 --> 03:00.000]  Все правила перехода имеют особенный вид.
[03:00.000 --> 03:03.000]  Да, все правила перехода имеют особенный вид.
[03:03.000 --> 03:06.000]  Так, давайте скажем, что мы знаем про вот это.
[03:06.000 --> 03:08.000]  Пустое.
[03:08.000 --> 03:11.000]  Пустое.
[03:11.000 --> 03:14.000]  S где лежит у нас?
[03:14.000 --> 03:16.000]  Ага.
[03:16.000 --> 03:20.000]  И четвертое, это именно определение контекста свободной графантики.
[03:20.000 --> 03:24.000]  F у нас имеет вид A,
[03:24.000 --> 03:26.000]  стрелочка альфа.
[03:26.000 --> 03:31.000]  Из этого значит, что F имеет под множество N
[03:31.000 --> 03:36.000]  на N объединить сигму со звездой.
[03:36.000 --> 03:41.000]  Да, все правила пишутся таким образом, здесь всегда стоит Z, N, V.
[03:41.000 --> 03:44.000]  Последняя запись не формальная.
[03:44.000 --> 03:46.000]  Вот это да.
[03:46.000 --> 03:49.000]  Вот это формальная.
[03:49.000 --> 03:51.000]  Вот.
[03:51.000 --> 03:54.000]  Дальше еще одно напоминание.
[03:54.000 --> 03:57.000]  У нас было правило штопа.
[03:57.000 --> 04:00.000]  Как оно у нас удавалось?
[04:00.000 --> 04:09.000]  Что-то идет у нас, кажется, поверни, не обязательно слева берут одни терминалы.
[04:09.000 --> 04:10.000]  А, мы...
[04:10.000 --> 04:11.000]  У нас есть...
[04:11.000 --> 04:14.000]  У нас есть контекст свободной графантики, да.
[04:14.000 --> 04:18.000]  Да, мы вспоминаем контекст свободной графантики, потому что мы сегодня про них говорили.
[04:18.000 --> 04:19.000]  Так.
[04:19.000 --> 04:23.000]  Как определяется воводимость над графантикой?
[04:23.000 --> 04:28.000]  Это у нас напоминает, наименьшее.
[04:28.000 --> 04:38.000]  Нефексивно-транситивное отношение такое, что...
[04:38.000 --> 04:41.000]  Что?
[04:41.000 --> 04:44.000]  Ну, если есть правила, то...
[04:44.000 --> 04:49.000]  Не, ну, давайте все-таки...
[04:49.000 --> 04:52.000]  Из альфа.
[04:52.000 --> 04:55.000]  Так, сейчас еще получается...
[04:55.000 --> 05:00.000]  Ну, если для контекста свободной графантики писать, то это будет вот так.
[05:00.000 --> 05:08.000]  Фи, а, кси выгодят фи, альфа, кси.
[05:08.000 --> 05:09.000]  Вот.
[05:09.000 --> 05:11.000]  Это вот такое...
[05:11.000 --> 05:12.000]  РТ.
[05:12.000 --> 05:13.000]  РТ?
[05:13.000 --> 05:15.000]  А, рефексивно-транситивное?
[05:25.000 --> 05:28.000]  Вот мы и поняли, как Артар расшифровывается.
[05:28.000 --> 05:31.000]  Так.
[05:31.000 --> 05:32.000]  Ага.
[05:32.000 --> 05:34.000]  И давайте еще одно напоминание.
[05:34.000 --> 05:38.000]  Когда у нас слово лежит в языке, задаваем ему в грамматике.
[05:38.000 --> 05:40.000]  Когда он лежит в языке.
[05:40.000 --> 05:45.000]  Да.
[05:45.000 --> 05:46.000]  А можно вопрос?
[05:46.000 --> 05:48.000]  Да, конечно.
[05:48.000 --> 05:52.000]  Если мы пересмотрели свободные контекстно-речимые грамматики,
[05:52.000 --> 05:56.000]  то правилы перекода по общей линии можно запишем, но с правом будет альфа.
[05:56.000 --> 05:59.000]  В одном случае, нам когда-нибудь сказалось,
[05:59.000 --> 06:03.000]  она будет из символа...
[06:03.000 --> 06:06.000]  Из другой элемента и из символа, да.
[06:06.000 --> 06:09.000]  Альфа в этом есть в истории.
[06:09.000 --> 06:11.000]  Да, если это контекстно...
[06:11.000 --> 06:14.000]  Это если смотреть определение контекстно-зависимого грамматика,
[06:14.000 --> 06:17.000]  то есть здесь всегда, по-моему,
[06:17.000 --> 06:19.000]  должен быть не терминальный символ,
[06:19.000 --> 06:22.000]  как минимум один, или от слова должен быть не пустой.
[06:22.000 --> 06:25.000]  То есть там просто определение контекстно-зависимого грамматика
[06:25.000 --> 06:29.000]  сильно похоже с определением воводимости для произвольного грамматика.
[06:29.000 --> 06:32.000]  Поэтому это может запутать несколько.
[06:32.000 --> 06:34.000]  Так.
[06:34.000 --> 06:36.000]  Ну, кажется, мы с вами ввели необходимое определение.
[06:36.000 --> 06:41.000]  Теперь давайте расскажем, что у нас сегодня на обед.
[06:41.000 --> 06:43.000]  Сегодня у нас в программе...
[06:43.000 --> 06:45.000]  Так, стоп.
[06:45.000 --> 06:49.000]  Значит, план сегодня достаточно простный.
[06:49.000 --> 06:52.000]  Надо понять, как можно упрощать контексты поводного грамматика.
[06:52.000 --> 06:55.000]  Это все, что мы сегодня ввели.
[06:55.000 --> 06:57.000]  Точнее, это первая часть нашего балета,
[06:57.000 --> 07:00.000]  вторая часть нашего балета будет на следующей лекции.
[07:00.000 --> 07:02.000]  Потому что их еще можно упрощать.
[07:02.000 --> 07:04.000]  Итак.
[07:04.000 --> 07:07.000]  Значит, давайте введем такой понятие, как нормальная форма контекста.
[07:07.000 --> 07:10.000]  Я говорю, что это невиданная понятие,
[07:10.000 --> 07:14.000]  и оно, значит, нам будет сильно помогать в будущем.
[07:15.000 --> 07:18.000]  Давайте его введу.
[07:18.000 --> 07:20.000]  Значит, грамматика называется...
[07:20.000 --> 07:23.000]  контексты поводного грамматика называется грамматика в нормальной форме Хомского,
[07:23.000 --> 07:27.000]  если все ее правила имеют вид такой, только такой.
[07:27.000 --> 07:30.000]  Я сейчас перечислю их правила.
[07:30.000 --> 07:33.000]  Значит...
[07:40.000 --> 07:43.000]  Значит, правила имеют один из трех видов.
[07:46.000 --> 07:49.000]  А. Интерпенал.
[07:49.000 --> 07:52.000]  А, это символ алфавита более того.
[07:52.000 --> 07:54.000]  А.
[07:54.000 --> 07:57.000]  Дальше у нас А.
[07:57.000 --> 07:59.000]  С.
[07:59.000 --> 08:01.000]  А.
[08:01.000 --> 08:03.000]  Получается...
[08:03.000 --> 08:06.000]  B.C. не равны S.
[08:06.000 --> 08:09.000]  И третье правило из S полует С.
[08:09.000 --> 08:11.000]  Ага.
[08:11.000 --> 08:13.000]  Давайте подумаем.
[08:13.000 --> 08:16.000]  Вот, если у нас грамматика находится в такой виде,
[08:16.000 --> 08:21.000]  какие следствия мы можем автоматам понять?
[08:21.000 --> 08:24.000]  Про это граммо.
[08:24.000 --> 08:27.000]  Если у нас грамматика такая замечательная.
[08:27.000 --> 08:30.000]  Вот, представим, что у нас грамматика находится в нормальной форме Хомского,
[08:30.000 --> 08:33.000]  то есть все правила имеют в том, какой вид.
[08:33.000 --> 08:35.000]  Угу.
[08:35.000 --> 08:38.000]  Повершенную форму надо понять.
[08:38.000 --> 08:44.000]  Никакой, ни терминалу не может расстаться пустой, кроме старт.
[08:44.000 --> 08:45.000]  Да, кроме старта.
[08:45.000 --> 08:49.000]  То есть, если у нас слово пустое, то оно распознается только одним правилом.
[08:49.000 --> 08:53.000]  То есть, нет необозначенности по выводу слова.
[08:53.000 --> 08:56.000]  Раз.
[08:56.000 --> 08:59.000]  С кого заключена необозначенность?
[08:59.000 --> 09:03.000]  Ну, типа, что у нас не может быть такого, что, там, не знаю,
[09:03.000 --> 09:06.000]  из A выводится в C, из B выводится в С.
[09:06.000 --> 09:08.000]  Типа, что здесь не A?
[09:08.000 --> 09:09.000]  Да.
[09:09.000 --> 09:12.000]  Такого быть не может.
[09:12.000 --> 09:15.000]  Угу.
[09:15.000 --> 09:18.000]  Давайте посмотрим на наше дерево.
[09:18.000 --> 09:22.000]  И если мы, так, было бы понятие дерево, было бы.
[09:22.000 --> 09:24.000]  Да, не по манеру.
[09:24.000 --> 09:25.000]  Да, не по манеру.
[09:25.000 --> 09:34.000]  То есть, это последовательность замены штопора на левой части, на правой части.
[09:34.000 --> 09:36.000]  Только это можно и выразить не дерево.
[09:36.000 --> 09:40.000]  То есть, поэтому называется в дерево вывода.
[09:40.000 --> 09:44.000]  То есть, A в C, B в A, T, C в A, T.
[09:44.000 --> 09:46.000]  Да, важно только, как раскрывается.
[09:46.000 --> 09:49.000]  То есть, в эту последовательность, на самом деле, будет такая.
[09:49.000 --> 09:53.000]  Из A за один шаг выводится, допустим, по C.
[09:53.000 --> 09:54.000]  Из B мы выводим епсилон.
[09:54.000 --> 09:58.000]  Если мы начинаем идти слева, то есть, получается C.
[09:58.000 --> 10:00.000]  И потом еще за один шаг мы выводимся.
[10:00.000 --> 10:05.000]  То есть, вот эта цепочка называется деревом вывода.
[10:05.000 --> 10:08.000]  А мы предполагаем, что на правой стороне.
[10:08.000 --> 10:09.000]  Ну, да.
[10:09.000 --> 10:12.000]  На правой стороне, значит, открывается самая правая левая терминал.
[10:12.000 --> 10:16.000]  В левой стороне открывается самая левая терминал.
[10:16.000 --> 10:17.000]  Вот.
[10:17.000 --> 10:20.000]  Так, что еще?
[10:20.000 --> 10:23.000]  Давайте еще выводы накидаем.
[10:23.000 --> 10:24.000]  Дерево получается двоичное.
[10:24.000 --> 10:26.000]  Да, дерево получается двоичное.
[10:26.000 --> 10:34.000]  А это значит следующее, что если у нас высота дерева H максимальная, то есть, от корня,
[10:35.000 --> 10:40.000]  то можем ли мы как-то понять, какая у нас длина хвороба?
[10:40.000 --> 10:41.000]  Да.
[10:41.000 --> 10:43.000]  Немощь, чем 2 в степени H плюс-минус 1.
[10:43.000 --> 10:48.000]  Потому что, ну, там надо определять, где корень, где не корень.
[10:48.000 --> 10:49.000]  Да.
[10:49.000 --> 10:50.000]  Вот.
[10:50.000 --> 10:55.000]  Это на самом деле будет полезным свойством, которое нам позволит понимать,
[10:55.000 --> 11:00.000]  какие языки являются, какие языки не являются в этой школе.
[11:00.000 --> 11:03.000]  Вот этого штука нам сильно поможет.
[11:03.000 --> 11:04.000]  Вот.
[11:04.000 --> 11:09.000]  А давайте поймем, поговорим про нормальную форму комства.
[11:09.000 --> 11:16.000]  А те, о которых мы сегодня будем показывать, любая грамматика,
[11:16.000 --> 11:18.000]  какая-то грамматика,
[11:22.000 --> 11:24.000]  эквивалентна.
[11:24.000 --> 11:31.000]  Давайте G обозначим.
[11:31.000 --> 11:33.000]  Эквивалентна грамматики.
[11:38.000 --> 11:40.000]  Сейчас я вас немножко испугаю.
[11:40.000 --> 11:42.000]  Давайте, наверное, назовем G-C.
[11:47.000 --> 11:49.000]  Некоторые только.
[11:50.000 --> 11:54.000]  Нормальная форма комства.
[11:58.000 --> 12:03.000]  Вот вы думаете, откуда тут слово 6, откуда тут цифра 7 появилась?
[12:03.000 --> 12:05.000]  Семь шагов.
[12:05.000 --> 12:07.000]  Будет семь шагов.
[12:09.000 --> 12:10.000]  А?
[12:10.000 --> 12:11.000]  Страшно.
[12:11.000 --> 12:12.000]  Да.
[12:12.000 --> 12:14.000]  Поэтому мы на эту почти всю лекцию убьем.
[12:14.000 --> 12:15.000]  А?
[12:15.000 --> 12:18.000]  Ну, потому что правила могут быть всякие коря.
[12:18.000 --> 12:19.000]  Да?
[12:19.000 --> 12:21.000]  И первая была, которая у нас есть.
[12:21.000 --> 12:23.000]  Помните задачку семи норов был?
[12:23.000 --> 12:25.000]  Была такая.
[12:25.000 --> 12:27.000]  Есть автомат.
[12:27.000 --> 12:29.000]  Автомат, язык.
[12:29.000 --> 12:31.000]  Как задать язык всех, у кого претимся?
[12:31.000 --> 12:34.000]  В чем подлоков в этой задаче?
[12:38.000 --> 12:41.000]  Да, там были некоторые состояния, которые были неправдающими.
[12:41.000 --> 12:43.000]  То есть, от которых нельзя дойти до конца.
[12:43.000 --> 12:45.000]  Их надо было убирать.
[12:45.000 --> 12:47.000]  И здесь, в этой лекции,
[12:47.000 --> 12:52.000]  здесь первое, с чем мы начнем работать, это как раз с такими символами.
[12:54.000 --> 12:55.000]  Вот.
[12:55.000 --> 12:58.000]  Значит, давайте перечислим пункты нашей программы.
[12:58.000 --> 13:01.000]  Первое, что мы сделаем, мы удалим непорождающие символы.
[13:02.000 --> 13:05.000]  Второе, что мы сделаем, мы удалим недостижимые символы.
[13:05.000 --> 13:08.000]  То есть, символы, которые недостижимые стартового.
[13:08.000 --> 13:10.000]  Тоже поясним, что это такое.
[13:11.000 --> 13:13.000]  Удаление правил вот такого вида.
[13:14.000 --> 13:16.000]  A и C это штабы?
[13:16.000 --> 13:19.000]  A и C это пример.
[13:19.000 --> 13:24.000]  В общем, когда у нас в правой части правила есть и терминалы, и итерминалы.
[13:24.000 --> 13:25.000]  А.
[13:25.000 --> 13:27.000]  Ну, это просто презентация, чтобы...
[13:27.000 --> 13:30.000]  То есть, это вопрос, какого языка?
[13:30.000 --> 13:32.000]  Да-да-да-да.
[13:32.000 --> 13:39.000]  Дальше убираем длинные правила, в которых правая часть состоит из более, чем двух итерминалов.
[13:40.000 --> 13:44.000]  Как вы думаете, после этого шага какие правила у нас останутся?
[13:48.000 --> 13:51.000]  Да, останутся правила из не терминалов A и C.
[13:51.000 --> 13:54.000]  Из не терминала дальше какие еще правила?
[13:57.000 --> 13:58.000]  Стройки?
[13:58.000 --> 14:02.000]  А, кстати, смешанным еще относятся в которых это...
[14:02.000 --> 14:04.000]  В которых есть маленькие пункты.
[14:04.000 --> 14:05.000]  Вот.
[14:05.000 --> 14:06.000]  Я немножко делаюсь?
[14:06.000 --> 14:07.000]  Сейчас.
[14:07.000 --> 14:08.000]  Так.
[14:08.000 --> 14:09.000]  Да-да.
[14:09.000 --> 14:11.000]  Ну, вот еще вот какие смешанные правила?
[14:11.000 --> 14:15.000]  Смешанные правила в которых есть хотя бы один терминальный символ.
[14:15.000 --> 14:18.000]  И его смена достаточно большая.
[14:20.000 --> 14:22.000]  То есть, грубо говоря, давайте...
[14:22.000 --> 14:25.000]  А вот это не смешанная правила, а вот это не смешанная правила.
[14:25.000 --> 14:27.000]  Это не смешанное правило, да.
[14:27.000 --> 14:29.000]  Ой, нет, так сейчас, куда?
[14:29.000 --> 14:31.000]  Вот это смешанное правило?
[14:31.000 --> 14:32.000]  Ага.
[14:32.000 --> 14:34.000]  А вот это не смешанное правило?
[14:34.000 --> 14:35.000]  Отлично.
[14:35.000 --> 14:42.000]  Остались все правила, которые нам нужны, и еще лишние.
[14:42.000 --> 14:56.000]  На самом деле останутся пары здесь, а, б, с, а, в, а, в и в, а, в, а.
[14:56.000 --> 15:05.000]  Дальше, после этого, мы будем избавляться от апсилон правилов, а, в, а, в.
[15:05.000 --> 15:11.000]  Но на самом деле, фишка состоит в том, что их просто так нельзя убрать.
[15:11.000 --> 15:15.000]  Потому что нам надо как-то будет распознать пустое слово.
[15:15.000 --> 15:19.000]  Сейчас будут все определения.
[15:19.000 --> 15:27.000]  Непорождающие, грубо говоря, символы, из которых нельзя его раскрыть в какой-то последствии терминальных символов.
[15:27.000 --> 15:33.000]  Вот. Дальше нам придется обработать пустое слово.
[15:33.000 --> 15:37.000]  И на седьмом шаге удаление одиночных правил.
[15:37.000 --> 15:40.000]  То есть нам останется убрать правила Котового Рова.
[15:40.000 --> 15:51.000]  Да. Причем, в одном из курток я могу сказать ровно доказательство, ровно логично одному факту, который был у нас в самом начале курса.
[15:51.000 --> 15:55.000]  Точно-точно будет совпадать.
[15:55.000 --> 15:59.000]  Ну что, вот такой у нас план на сегодня. Поехали, да?
[15:59.000 --> 16:05.000]  А, давайте введем понятие, так, все эти шаги они у нас будут.
[16:05.000 --> 16:09.000]  Давайте начнем с непорождающих символов.
[16:19.000 --> 16:23.000]  Поехали. Первый шаг.
[16:23.000 --> 16:29.000]  Давайте обозначим Y каким?
[16:29.000 --> 16:33.000]  Да, Y порождающим.
[16:35.000 --> 16:45.000]  Если существует такое слово W, что из Y мы можем вывести слово W.
[16:45.000 --> 16:51.000]  Непорождающие это, знаете, такого, какого-нибудь.
[16:51.000 --> 16:56.000]  И на первом шаге мы сделаем следующее.
[16:56.000 --> 16:59.000]  Удалим?
[16:59.000 --> 17:03.000]  Да, да, да. Да, без проблем, конечно.
[17:03.000 --> 17:11.000]  Среди наших задач попросили, чтобы у нас не было правил вида A, B, C, D, B, C, A, S.
[17:11.000 --> 17:13.000]  В каком шаге они издаются?
[17:13.000 --> 17:17.000]  Мы издаемся на шаге 5 и 6.
[17:17.000 --> 17:21.000]  А почему шаги 6 в этом не говорят?
[17:21.000 --> 17:25.000]  Ну потому что они на слайд не помещаются.
[17:25.000 --> 17:27.000]  Ладно.
[17:28.000 --> 17:36.000]  Значит, смотрите, давайте предположим, что будет, если у нас есть непорождающие символы.
[17:36.000 --> 17:40.000]  Как только в слове имелся непорождающий символ, мы поняли.
[17:40.000 --> 17:43.000]  Ну мы поняли, да. Теперь надо доказать.
[17:43.000 --> 17:47.000]  Давайте построим грамматику G1.
[17:47.000 --> 17:53.000]  N1 sigma P s P1.
[17:53.000 --> 18:06.000]  Такое, что N1 равно A принадлежит N, а это порождающие.
[18:06.000 --> 18:08.000]  Вот.
[18:08.000 --> 18:18.000]  А P1 давайте обозначим следующим.
[18:18.000 --> 18:24.000]  Я вот так напишу, но рукой.
[18:24.000 --> 18:29.000]  Я напишу, что это правило Fn на множество правил N1.
[18:29.000 --> 18:38.000]  Да, то есть выкидываем все правила, которые содержат правила из N1.
[18:38.000 --> 18:41.000]  То есть в нем есть только N1.
[18:41.000 --> 18:46.000]  А если у нас только N1 из N1 остается?
[18:46.000 --> 18:53.000]  Так, N1 не останется.
[18:53.000 --> 18:58.000]  Хороший вопрос. Ну может быть такое, что грамматика ничего не украдет.
[18:58.000 --> 19:00.000]  Я знаю, в чем вопрос.
[19:00.000 --> 19:05.000]  Нет, просто утверждение в том, что у нас N1 может охранять пустынку.
[19:05.000 --> 19:07.000]  Нет, не может, если там есть.
[19:07.000 --> 19:11.000]  А S1 может быть непорождающим.
[19:11.000 --> 19:13.000]  Ну да, изначально грамматика бывает.
[19:13.000 --> 19:15.000]  Ну да.
[19:15.000 --> 19:17.000]  Так.
[19:17.000 --> 19:19.000]  Это проблема?
[19:19.000 --> 19:21.000]  Давайте попробуем.
[19:21.000 --> 19:26.000]  Проблема в том, что оно будет обратно на N1, даже если оно не порождающее.
[19:26.000 --> 19:27.000]  Ну да.
[19:27.000 --> 19:29.000]  Ну давайте скажем так.
[19:29.000 --> 19:37.000]  Если N1 равно пустому, то...
[19:37.000 --> 19:40.000]  N1 не не играет пустынку.
[19:40.000 --> 19:43.000]  Просто N1, дайте вы думать, что он не несет все.
[19:43.000 --> 19:45.000]  Да.
[19:45.000 --> 19:48.000]  Сейчас, дайте-ка подуму.
[19:48.000 --> 19:50.000]  Так, интересный вопрос.
[19:50.000 --> 19:54.000]  То есть как сделать такую грамматику, которая была бы в нормальной форме Хомского,
[19:54.000 --> 19:56.000]  и при этом ничего не распознавала?
[20:01.000 --> 20:03.000]  Все правила имеют такой вид.
[20:03.000 --> 20:05.000]  Да, нам не обязательно.
[20:05.000 --> 20:07.000]  Просто говорим тупо.
[20:07.000 --> 20:09.000]  Да.
[20:09.000 --> 20:11.000]  Все.
[20:11.000 --> 20:13.000]  N1 не должно быть пустым.
[20:13.000 --> 20:15.000]  Почему?
[20:15.000 --> 20:17.000]  А, стоп.
[20:17.000 --> 20:19.000]  Нужно N1 поменять, и все.
[20:20.000 --> 20:25.000]  Нужно N1 определить, как оно порождающее.
[20:25.000 --> 20:26.000]  Да.
[20:26.000 --> 20:28.000]  Хорошо.
[20:34.000 --> 20:36.000]  Да ладно, давайте напишем так.
[20:40.000 --> 20:42.000]  Давайте сделаем так.
[20:42.000 --> 20:44.000]  Добавляем эту штуку, если N1 пустой.
[20:44.000 --> 20:46.000]  Вот так вот.
[20:47.000 --> 20:49.000]  Вот.
[20:49.000 --> 20:51.000]  Костылем, короче.
[20:58.000 --> 21:00.000]  Да, в общем.
[21:02.000 --> 21:04.000]  Да, давайте закостыляем.
[21:07.000 --> 21:08.000]  Да.
[21:08.000 --> 21:10.000]  Все, отлично.
[21:10.000 --> 21:13.000]  Теперь нам что надо доказать с вами?
[21:13.000 --> 21:17.000]  По факту нам надо доказать, что Lg1 равняется Lts.
[21:20.000 --> 21:22.000]  Ой, Lg.
[21:22.000 --> 21:24.000]  Как доказываем это?
[21:26.000 --> 21:28.000]  Что мы можем сказать точно?
[21:33.000 --> 21:35.000]  Ну да.
[21:35.000 --> 21:37.000]  Ну так как любой путь, который у нас был.
[21:37.000 --> 21:39.000]  Да.
[21:39.000 --> 21:41.000]  Так как...
[21:43.000 --> 21:48.000]  Если у нас S выводит g1 какое-то слово дубль V.
[21:48.000 --> 21:51.000]  То давайте напишу в цепи вывода.
[21:52.000 --> 21:56.000]  А, мы можем пользоваться как раз понятием дерева вывода.
[21:57.000 --> 22:00.000]  Вывода, все не терминалы.
[22:02.000 --> 22:06.000]  Lg1 равняется Lts, то что мы хотим доказать.
[22:07.000 --> 22:11.000]  То стереи вывода, все не терминалы.
[22:13.000 --> 22:15.000]  Принадлежат N1.
[22:15.000 --> 22:17.000]  Следовательно, они принадлежат N.
[22:19.000 --> 22:21.000]  Так.
[22:21.000 --> 22:25.000]  А теперь смотрите, предположим, что у нас существует
[22:26.000 --> 22:30.000]  слово W, принадлежащее Lg1 без Lg.
[22:36.000 --> 22:38.000]  Ой, наоборот.
[22:38.000 --> 22:40.000]  Lg без Lg1.
[22:41.000 --> 22:44.000]  Что тогда мы можем сказать?
[22:46.000 --> 22:48.000]  Не, ну блин.
[22:50.000 --> 22:53.000]  Значит, у нас есть цепь вывода.
[22:54.000 --> 23:05.000]  Из S мы вывели какую-то цепь альфа, пусть d.
[23:06.000 --> 23:10.000]  Я утверждаю, что в дереве вывода этого слова тогда появляется
[23:10.000 --> 23:13.000]  не терминал, которого не было здесь.
[23:16.000 --> 23:20.000]  Дерево вывода я тут пользуюсь как определение последовательности.
[23:21.000 --> 23:25.000]  Да, да, давайте последовательность.
[23:27.000 --> 23:30.000]  Смотрите, тогда что у нас существует?
[23:30.000 --> 23:33.000]  Тогда у нас существует d.
[23:35.000 --> 23:40.000]  Что у нас из S выводится альфа, д, бета и выводится слово w.
[23:41.000 --> 23:48.000]  При этом d будет лежать в N без N1.
[23:49.000 --> 23:52.000]  Да, потому что если бы такого d не нашлось,
[23:52.000 --> 23:57.000]  то значит слово бы просто лежало в языке задаваемой грамматикой N1.
[23:58.000 --> 24:00.000]  Ой, Lg1.
[24:01.000 --> 24:03.000]  Ну а тогда мы можем сказать,
[24:03.000 --> 24:08.000]  что если у нас альфа, д, бета выводят w,
[24:09.000 --> 24:15.000]  значит существуют x и y такие, что альфа...
[24:16.000 --> 24:18.000]  Давайте z еще возьмем.
[24:19.000 --> 24:26.000]  Что альфа выводит x, d выводит y, а бета выводит z.
[24:28.000 --> 24:30.000]  Кто найдет противоречие?
[24:30.000 --> 24:33.000]  А можете объяснить, пожалуйста, почему они не существуют?
[24:34.000 --> 24:36.000]  Противоречие тискет видно, потому что где не прочитаешь, но...
[24:37.000 --> 24:38.000]  Почему существует?
[24:38.000 --> 24:42.000]  Потому что каждый раз, когда мы раскрываем штопор,
[24:42.000 --> 24:45.000]  мы берем левый не терминал и раскрываем его каким-то образом.
[24:46.000 --> 24:48.000]  То есть вот эту цепочку нам надо довести до конца,
[24:48.000 --> 24:51.000]  вот эту цепочку нам тоже надо довести до конца,
[24:51.000 --> 24:54.000]  и вот эту последствия нам тоже надо раскрыть до терминала.
[24:55.000 --> 24:57.000]  Потому что этот цепатарий считается формальным или нет?
[24:58.000 --> 25:00.000]  Если да, то есть проблема.
[25:01.000 --> 25:02.000]  Все, что ты говорил, это формально или нет?
[25:03.000 --> 25:04.000]  Не, ну...
[25:05.000 --> 25:07.000]  Просто скажи, что не д, а как бы он это перейдет, я так могу.
[25:10.000 --> 25:12.000]  Ну тут надо по идее как это говорить формально.
[25:13.000 --> 25:16.000]  Значит, у нас есть... Рассмотрим последовательность выводов.
[25:17.000 --> 25:20.000]  Рассмотрим первый момент, когда у нас не терминал d раскроется.
[25:21.000 --> 25:22.000]  Значит, он заменится на y.
[25:22.000 --> 25:23.000]  Заменится на y.
[25:23.000 --> 25:26.000]  Значит, потом рассмотрим последствия цепочку, которая ссылкается здесь.
[25:27.000 --> 25:28.000]  Она в какой-то момент должна дойти до терминала,
[25:29.000 --> 25:31.000]  значит, она дойдет до кого-то терминала с какого-то слова x.
[25:33.000 --> 25:34.000]  То есть каждую не терминал рассмотрим здесь,
[25:35.000 --> 25:38.000]  раскрываем до последнего, до талого, так сказать, и это.
[25:39.000 --> 25:40.000]  И смотрим, в какое слово там это переходит.
[25:42.000 --> 25:43.000]  Это вот формально, если пояснять.
[25:46.000 --> 25:47.000]  Да, да, да.
[25:52.000 --> 25:58.000]  Как обычно, наименьшее рефлексивное и транзитивное отношение, собственно, отвечает за то, что это все до конца раскроется.
[26:18.000 --> 26:19.000]  Да.
[26:22.000 --> 26:23.000]  Да, можно так.
[26:26.000 --> 26:27.000]  Да.
[26:28.000 --> 26:29.000]  Ну, можно так.
[26:30.000 --> 26:32.000]  Ну, вывод такой, что d не порождающий.
[26:33.000 --> 26:34.000]  Да.
[26:43.000 --> 26:44.000]  Фейл.
[26:50.000 --> 26:51.000]  Последовательность.
[26:52.000 --> 26:54.000]  Дерево в нашем случае это последовательность вывода.
[26:56.000 --> 26:58.000]  Что, с первым шагом разобрались?
[26:59.000 --> 27:00.000]  Да?
[27:07.000 --> 27:08.000]  Да, да, да, произвольная.
[27:09.000 --> 27:10.000]  Конечно.
[27:11.000 --> 27:12.000]  Так, что?
[27:13.000 --> 27:14.000]  Готовы ко второму шагу?
[27:15.000 --> 27:16.000]  Да.
[27:17.000 --> 27:18.000]  Второй шаг удавля...
[27:19.000 --> 27:21.000]  Так, это тут пруфы, можно посмотреть.
[27:22.000 --> 27:23.000]  Руны такие же.
[27:24.000 --> 27:25.000]  Нахождение порождающих символов.
[27:26.000 --> 27:30.000]  Да, алгоритм надо пояснить, потому что все-таки к нормальной форме Хомского хочется приходить алгоритмически.
[27:31.000 --> 27:32.000]  Вопрос.
[27:33.000 --> 27:35.000]  Как находить порождающие символы?
[27:47.000 --> 27:48.000]  Ну, странным бы флэтсом.
[27:49.000 --> 27:51.000]  Так, все знают, что такое обход в ширину?
[27:52.000 --> 27:53.000]  Мне кажется, не все знают.
[27:58.000 --> 27:59.000]  Ну да.
[28:00.000 --> 28:01.000]  Смотрите, создаем очередь.
[28:07.000 --> 28:09.000]  Добавляем в очередь вершины вида такого.
[28:10.000 --> 28:11.000]  Правило вида.
[28:12.000 --> 28:13.000]  А, стрелочка w.
[28:19.000 --> 28:20.000]  Угу.
[28:21.000 --> 28:26.000]  Дальше, на следующем шаге, когда мы достаем правила из очереди, что мы делаем?
[28:27.000 --> 28:30.000]  Мы берем и из правых частей правил вычеркиваем этот терминал.
[28:31.000 --> 28:43.000]  То есть, если бы у нас было, там не знаю, х, айб, да, то значит, вот этот символ что-то порождает, так ведь?
[28:43.000 --> 28:48.000]  А значит, чтобы символ х стал порождающим, что нам необходимо сделать?
[28:49.000 --> 28:51.000]  Чтобы у и b были порождающими.
[28:52.000 --> 28:53.000]  Да, ну поэтому мы делаем следующее.
[28:54.000 --> 29:00.000]  Мы зачеркиваем а из всех таких правых частей правил и смотрим справа остались только терминалы или нет.
[29:01.000 --> 29:07.000]  Если остаются только терминалы, то мы х добавляем в множество порождающих и закидываем в очередь.
[29:08.000 --> 29:10.000]  То есть, bfs.
[29:14.000 --> 29:15.000]  Не очень.
[29:16.000 --> 29:18.000]  Ну, в общем, алгоритм обработки через очередь.
[29:19.000 --> 29:20.000]  Спасибо.
[29:21.000 --> 29:24.000]  Так, что? Это такой алгоритм? Вот этот алгоритм понятен?
[29:25.000 --> 29:26.000]  Ну, какой был?
[29:27.000 --> 29:29.000]  Не, реалибантность не будет куклой.
[29:30.000 --> 29:31.000]  Я абсолютно не знаю.
[29:32.000 --> 29:33.000]  Да, я довольен.
[29:34.000 --> 29:37.000]  Давайте вам рассказать, что только не буду спрошу спрашивать на экзамене, не будет куклы.
[29:38.000 --> 29:40.000]  Давайте так.
[29:41.000 --> 29:42.000]  Идею я рассказал.
[29:43.000 --> 29:47.000]  То есть, если попросят формальный пруф, скажите, что рассказываете мне идею.
[29:48.000 --> 29:49.000]  Идея какая?
[29:50.000 --> 29:53.000]  Вот смотрим, значит, у нас есть правила вида x, a, y, b.
[29:54.000 --> 29:55.000]  Как понять, x-порождающий или нет?
[29:56.000 --> 29:57.000]  Не терминала.
[29:58.000 --> 30:00.000]  Ну, приблизительно набор не терминалов.
[30:01.000 --> 30:02.000]  Да, да, да.
[30:02.000 --> 30:13.000]  Этот не терминал является порождающим в том случае, если все не терминалы в каком-то из правил, в правой части, все не терминалы будут порождающими.
[30:14.000 --> 30:16.000]  Потому что каждый из не терминалов мы раскрываем до слова.
[30:17.000 --> 30:22.000]  Допустим, это w1, это w2.
[30:23.000 --> 30:25.000]  Ну и все. И тогда мы победили.
[30:26.000 --> 30:36.000]  Поэтому мы говорим, заводим, по сути, для каждого правила множество не терминалов, которые еще не факт, что являются порождающими.
[30:37.000 --> 30:43.000]  То есть, для вот этого правила, допустим, у нас будет такое множество вот таким.
[30:44.000 --> 30:45.000]  A, y, b.
[30:45.000 --> 30:46.000]  A, y, b.
[30:47.000 --> 30:48.000]  Да?
[30:49.000 --> 30:56.000]  И в тот бац оказывается, что мы инициируем очередь из всех таких правил, из всех таких не терминалов, что они содержат такое правило.
[30:57.000 --> 30:58.000]  Ну, значит, они явно порождающие.
[30:59.000 --> 31:04.000]  Потом мы достаем этот элемент из очереди и видим, ага, в правой части правил у нас есть A.
[31:05.000 --> 31:08.000]  Из A у нас что-то выводится, вычеркиваем, это не терминал из очереди.
[31:09.000 --> 31:10.000]  Ой, из этого множества.
[31:10.000 --> 31:16.000]  И если при этом какое-то множество остается пустым, ну, допустим, мы в какой-то момент вычеркнули y и в какой-то момент вычеркнули b,
[31:17.000 --> 31:22.000]  это значит, что у нас x является порождающим и мы его можем засунуть в очередь, если в этом не было.
[31:31.000 --> 31:32.000]  Ну, конечно.
[31:41.000 --> 31:42.000]  Ну, да.
[31:51.000 --> 31:52.000]  Да, да, да.
[31:57.000 --> 31:58.000]  Ну, да, вот это.
[32:05.000 --> 32:06.000]  Ну.
[32:06.000 --> 32:07.000]  Ну.
[32:12.000 --> 32:13.000]  С этой, которая.
[32:13.000 --> 32:14.000]  Да, да, да.
[32:15.000 --> 32:16.000]  Ладненько.
[32:17.000 --> 32:18.000]  Что это?
[32:19.000 --> 32:20.000]  Давайте оптимизацию.
[32:24.000 --> 32:25.000]  Понятная идея.
[32:28.000 --> 32:29.000]  Давайте пример, короче.
[32:32.000 --> 32:34.000]  Смотрите, непорождающие символы BD.
[32:34.000 --> 32:35.000]  Почему?
[32:37.000 --> 32:39.000]  Почему здесь непорождающие символы BAD?
[32:39.000 --> 32:40.000]  Кто может мне сказать?
[32:44.000 --> 32:45.000]  Да.
[32:45.000 --> 32:48.000]  Ну, то есть, смотрите, у нас получается следующее.
[32:50.000 --> 32:52.000]  У нас есть правило ASBS.
[32:52.000 --> 32:53.000]  Что там еще есть у нас?
[32:54.000 --> 32:55.000]  Я просто не вижу что сверху.
[32:55.000 --> 32:58.000]  Так, смотрите, какие символы у нас точно порождающие здесь?
[32:59.000 --> 33:00.000]  S, A.
[33:02.000 --> 33:03.000]  Закидываем их в очередь.
[33:05.000 --> 33:06.000]  Достаем S из очереди.
[33:12.000 --> 33:13.000]  Ой, сори.
[33:16.000 --> 33:17.000]  Угу.
[33:20.000 --> 33:21.000]  Ну.
[33:21.000 --> 33:22.000]  Вот.
[33:22.000 --> 33:23.000]  Значит, смотрите, что у нас?
[33:23.000 --> 33:24.000]  S непорождающий.
[33:24.000 --> 33:25.000]  Ой, S порождающий.
[33:26.000 --> 33:29.000]  Поэтому в правых частях правил мы берем, вычеркиваем эти штуки.
[33:30.000 --> 33:32.000]  Ну, потому что они уже что-то порождают.
[33:33.000 --> 33:34.000]  Угу.
[33:34.000 --> 33:36.000]  В правых частях у нас остались терминалы, не терминалы.
[33:37.000 --> 33:38.000]  Вроде остались.
[33:38.000 --> 33:40.000]  То есть, тут AB есть, тут D есть.
[33:41.000 --> 33:42.000]  Угу.
[33:43.000 --> 33:44.000]  Поехали дальше.
[33:44.000 --> 33:45.000]  Достаем A из очереди.
[33:46.000 --> 33:47.000]  Вот.
[33:47.000 --> 33:48.000]  Угу.
[33:48.000 --> 33:49.000]  Поехали дальше.
[33:50.000 --> 33:51.000]  Достаем A из очереди.
[33:52.000 --> 33:53.000]  Вычеркиваем A.
[33:54.000 --> 33:55.000]  Остается B, остается D.
[33:56.000 --> 33:57.000]  Да?
[33:58.000 --> 33:59.000]  Очередь пустая.
[33:59.000 --> 34:00.000]  Закончился алгоритм.
[34:00.000 --> 34:02.000]  Значит, символы B и D у нас являются непорождающими.
[34:06.000 --> 34:07.000]  Ага.
[34:08.000 --> 34:10.000]  Ну, значит, эти правила мы выкидываем.
[34:15.000 --> 34:16.000]  Так.
[34:18.000 --> 34:19.000]  Извините.
[34:20.000 --> 34:21.000]  А когда у нас...
[34:22.000 --> 34:23.000]  Ну, пример.
[34:24.000 --> 34:25.000]  Если бы у нас, допустим, было бы правило...
[34:26.000 --> 34:27.000]  Не знаю.
[34:30.000 --> 34:32.000]  В этой же грамматике было бы правило из D вводит A.
[34:33.000 --> 34:34.000]  Да?
[34:34.000 --> 34:35.000]  А то что бы у нас изменилось?
[34:36.000 --> 34:37.000]  Мы бы достали A из очереди.
[34:38.000 --> 34:39.000]  Да?
[34:40.000 --> 34:41.000]  Зачеркнули бы вот эту штуку.
[34:42.000 --> 34:44.000]  Здесь у нас было бы пустое уже справа.
[34:44.000 --> 34:45.000]  Справа.
[34:45.000 --> 34:46.000]  Поэтому мы бы D положили в очередь.
[34:47.000 --> 34:48.000]  В этом моменте времени.
[34:49.000 --> 34:51.000]  Ну и тогда, если бы мы D положили в очередь, мы бы отсюда вычеркнули.
[34:52.000 --> 34:54.000]  Ну, я бы снова стал порождающим, но как бы этого уже не надо.
[34:57.000 --> 34:58.000]  Так.
[35:00.000 --> 35:03.000]  Давайте до перерыва мы еще успеем второй шаг сделать с вами.
[35:05.000 --> 35:07.000]  Второй шаг удаления недостижимых символов.
[35:07.000 --> 35:12.000]  Значит, символ называется достижимым, если до него можно дойти.
[35:38.000 --> 35:39.000]  Да выводит...
[35:40.000 --> 35:42.000]  Ой, из S выводится phi до psi.
[35:49.000 --> 35:51.000]  Как вы думаете, грамматика G2 как строится будет?
[35:55.000 --> 35:56.000]  Ну да.
[35:57.000 --> 35:58.000]  Ровно то же самое.
[36:00.000 --> 36:05.000]  Опять же, с теми же самыми ограничениями, которые у нас были до этого.
[36:07.000 --> 36:08.000]  Н.
[36:09.000 --> 36:10.000]  Ой.
[36:11.000 --> 36:12.000]  А достижимый.
[36:17.000 --> 36:18.000]  АП2.
[36:19.000 --> 36:21.000]  Это P у проекта N2.
[36:23.000 --> 36:24.000]  А?
[36:25.000 --> 36:27.000]  Да, из N1, конечно же.
[36:29.000 --> 36:30.000]  И тут P1, да.
[36:32.000 --> 36:33.000]  Ну да.
[36:34.000 --> 36:35.000]  И тут P1, да.
[36:38.000 --> 36:39.000]  Что теперь нам надо доказать?
[36:40.000 --> 36:42.000]  Тут на самом деле уже два факта надо доказывать.
[36:43.000 --> 36:44.000]  Каких?
[36:45.000 --> 36:46.000]  Первый, какой?
[36:48.000 --> 36:50.000]  Первый, что языки совпадают.
[36:52.000 --> 36:53.000]  А есть еще второй факт.
[36:54.000 --> 36:56.000]  Кто может догадаться, какой второй факт?
[36:58.000 --> 36:59.000]  А?
[36:59.000 --> 37:00.000]  А?
[37:02.000 --> 37:08.000]  Не, ну корректность мы докажем удалением, доказательством того, что у нас языки совпадают.
[37:12.000 --> 37:14.000]  Не, ну они так будут все достижимы, если это...
[37:17.000 --> 37:18.000]  Не, ну если они...
[37:20.000 --> 37:21.000]  А какая проблема могла?
[37:22.000 --> 37:25.000]  Мы удалили все непорождающие символы, мы удалили все недостижимые символы.
[37:26.000 --> 37:27.000]  Что могло бы быть?
[37:29.000 --> 37:33.000]  На факту некоторые состояния могли бы стать снова непорождающими.
[37:35.000 --> 37:36.000]  Да, и это надо обработать.
[37:38.000 --> 37:41.000]  На самом деле порождающих новых там не появится, но это надо показать.
[37:42.000 --> 37:49.000]  Итак, значит, нам надо доказать, что Lg2 равняется Lg1.
[37:50.000 --> 37:52.000]  Какое вложение, опять же...
[37:54.000 --> 37:55.000]  Да, да.
[38:00.000 --> 38:04.000]  Сужение множество. Так, сейчас, секунду, как бы это аккуратненько объяснить.
[38:06.000 --> 38:08.000]  Lg2 вложено в Lg1.
[38:09.000 --> 38:24.000]  Но потому что если бы мы, опять же, из S выводим в дубль в Lg1, в G2, то мы это делаем по не терминалу N2.
[38:25.000 --> 38:27.000]  Ну, следовательно, мы это делаем по N1.
[38:30.000 --> 38:35.000]  Так, теперь в другую сторону. Пусть слово w лежит в дополнении.
[38:39.000 --> 38:42.000]  Тогда что? У нас, опять же, получается следующая вещь.
[38:43.000 --> 38:45.000]  Что существует такое D.
[38:47.000 --> 39:04.000]  Получается Lg1 в N1 без N2 такое, что из S выводится αdβ выводит слово w.
[39:05.000 --> 39:11.000]  То есть у нас в пути вывода точно бы встретился наш вывод из не терминалов.
[39:13.000 --> 39:20.000]  Какая часть противоречит? Правая или левая? Там правая противоречила, а тут левая противоречит.
[39:31.000 --> 39:37.000]  Недостижимость. Все, значит, языки совпадают.
[39:37.000 --> 39:41.000]  Теперь что нам необходимо доказать? Второй в пункт.
[39:43.000 --> 39:45.000]  Неопорождающих не появилось.
[39:48.000 --> 39:51.000]  Так, тут некоторая замудренная цепочка будет.
[39:52.000 --> 39:54.000]  Итак, пусть у нас с вами...
[40:07.000 --> 40:17.000]  Пусть какой-нибудь это D. Так, сейчас, секунду. Что у нас должен быть?
[40:18.000 --> 40:22.000]  Он у нас должен быть... Пусть D это некоторые непорождающие.
[40:22.000 --> 40:26.000]  В G2. Да? Ну тогда что мы про D можем сказать относительно G1?
[40:31.000 --> 40:33.000]  Нет, мы можем сказать, что пока D был достижимым.
[40:38.000 --> 40:39.000]  А?
[40:40.000 --> 40:41.000]  Он не достижим, может быть.
[40:42.000 --> 40:44.000]  Нет, мы можем сказать, что пока D был достижимым.
[40:45.000 --> 40:46.000]  А?
[40:47.000 --> 40:48.000]  Он не достижим, может быть.
[40:48.000 --> 40:49.000]  Да.
[41:09.000 --> 41:12.000]  Ну, теперь давайте напишем, что же у нас получается.
[41:12.000 --> 41:14.240]  Теперь давайте напишем, что же у нас получается.
[41:16.840 --> 41:20.880]  У нас должно получаться следующее, что у нас есть D.
[41:24.560 --> 41:25.960]  В грамматике G1.
[41:27.600 --> 41:28.800]  А из D...
[41:30.040 --> 41:31.360]  То есть давайте напишу так.
[41:37.840 --> 41:41.120]  А, смотрите, а D еще достижим в, получается, G2.
[41:41.760 --> 41:42.760]  Да, Вить?
[41:56.560 --> 41:57.560]  Так.
[41:59.960 --> 42:01.520]  Сейчас как бы написать это.
[42:04.120 --> 42:05.120]  Да, да, да.
[42:05.200 --> 42:07.680]  Мы предполагаем, что D, не порождающие в G2,
[42:07.760 --> 42:09.280]  и они должны прийти к противоречию.
[42:09.360 --> 42:10.360]  Такого быть не может.
[42:11.120 --> 42:13.600]  А D будет сказать, что все уже на пути достижимые,
[42:13.680 --> 42:14.680]  значит, не это в G2.
[42:15.680 --> 42:16.920]  Так, сейчас, секунду.
[42:17.000 --> 42:18.800]  Вот смотрите, что у нас хочется сказать.
[42:18.880 --> 42:21.760]  У нас с вами D,
[42:23.840 --> 42:25.200]  достижимый в G2.
[42:25.280 --> 42:26.280]  Это значит у нас...
[42:32.760 --> 42:34.080]  Но при этом не порождающий.
[42:34.160 --> 42:36.720]  То есть из него не должно никакого слова порождаться.
[42:36.720 --> 42:39.840]  В нем путь от D до G1.
[42:39.920 --> 42:40.920]  Ага.
[42:41.000 --> 42:46.320]  И, значит, там должен быть какой-то недостижимый.
[42:46.400 --> 42:50.480]  Да, давайте рассмотрим путь, который содержит D.
[42:50.560 --> 42:51.560]  Такой точно есть.
[42:55.960 --> 42:57.720]  Потому что это штука порождающая.
[42:57.800 --> 42:58.800]  И что?
[42:58.880 --> 43:02.320]  Ну, это значит, что по правам идти,
[43:02.360 --> 43:04.160]  у нас должен появиться в какой-то момент
[43:04.240 --> 43:08.320]  символ, не терминальный символ за G1,
[43:08.400 --> 43:10.200]  не являющийся достижимым.
[43:10.280 --> 43:12.280]  А это будет противоречие,
[43:12.360 --> 43:14.360]  потому что путь у нас прямо тут расписан,
[43:14.440 --> 43:15.440]  будет как D.
[43:15.520 --> 43:16.520]  Так, секунду.
[43:16.600 --> 43:17.600]  Сейчас, секунду.
[43:17.680 --> 43:19.160]  Чтобы этот путь перестал работать,
[43:19.240 --> 43:20.240]  который вот на том написан,
[43:20.320 --> 43:21.320]  по-первых, у нас будет для того,
[43:21.400 --> 43:22.400]  чтобы результат не достиг,
[43:22.480 --> 43:26.200]  что этот символ порождающий,
[43:26.280 --> 43:28.280]  нам нужно, чтобы этот путь перестал работать,
[43:28.360 --> 43:29.360]  чтобы этот путь перестал работать,
[43:29.400 --> 43:31.400]  чтобы этот символ порождающий,
[43:31.480 --> 43:33.480]  нам нужно, чтобы второй век,
[43:33.560 --> 43:35.560]  потому что если нет достижима A, B, D,
[43:35.640 --> 43:39.640]  то нам нужно в этой второй веке,
[43:39.720 --> 43:43.720]  либо это же такой же путь работает в G2,
[43:43.800 --> 43:44.800]  либо нет.
[43:44.880 --> 43:46.880]  Но там есть удалённый символ.
[43:46.960 --> 43:49.960]  Удалённый, значит, надуман, недостижимый.
[43:50.040 --> 43:52.040]  Да, согласен.
[43:52.120 --> 43:53.120]  Спасибо большое.
[43:53.200 --> 43:54.200]  Что-то затупил.
[43:54.280 --> 43:55.280]  Смотрите.
[43:55.360 --> 43:58.360]  Давайте рассмотрим путь вывода слова D в W1.
[43:58.360 --> 43:59.360]  Да?
[44:01.440 --> 44:02.440]  Значит...
[44:04.520 --> 44:06.520]  Давайте посмотрим следующее.
[44:06.600 --> 44:09.600]  Значит, каким-то образом у нас из D
[44:11.040 --> 44:13.040]  выводилось слово W.
[44:13.120 --> 44:16.120]  Тогда у нас мы можем расписать,
[44:16.200 --> 44:21.200]  что D выводит какое-то гамма E.
[44:21.280 --> 44:25.280]  Если у нас гамма выводит...
[44:25.360 --> 44:27.360]  D выводит гамма E,
[44:27.440 --> 44:29.440]  получается дельта.
[44:29.520 --> 44:30.520]  Вот.
[44:32.120 --> 44:35.120]  Это получается у нас в грамматике G1.
[44:35.200 --> 44:38.200]  А если вот этот вывод...
[44:38.280 --> 44:40.280]  Давайте предположим,
[44:40.360 --> 44:43.360]  что у нас D выводит какое-то Y в G1.
[44:43.440 --> 44:45.440]  И выводит Y в грамматике G1.
[44:45.520 --> 44:47.520]  То есть получается, что если у нас
[44:47.600 --> 44:51.600]  все такие штуки, все E лежат в P1...
[44:53.360 --> 44:55.360]  Ой, в N1.
[44:55.360 --> 44:56.360]  Да?
[44:56.440 --> 44:58.440]  Точнее, все E лежат в N2,
[44:58.520 --> 45:00.520]  тогда у нас D получается будет достижимым.
[45:00.600 --> 45:01.600]  Так ведь?
[45:03.480 --> 45:05.480]  Все вырубились, кажется, да?
[45:08.200 --> 45:10.200]  То есть, смотрите, история такая,
[45:10.280 --> 45:12.280]  что давайте посмотрим,
[45:12.360 --> 45:14.360]  а почему же он не порождается?
[45:14.440 --> 45:16.440]  Что ему могло сломать пораждаемость?
[45:16.520 --> 45:19.520]  Это значит, что у нас был какой-то не терминал,
[45:20.520 --> 45:24.520]  который сломает ему пораждаемость.
[45:24.600 --> 45:26.600]  Да? Вот тут вот.
[45:28.680 --> 45:30.680]  Давайте я напишу это хорошо.
[45:33.280 --> 45:34.280]  D.
[45:37.160 --> 45:39.160]  Да, мы уже 2.
[45:39.240 --> 45:45.240]  Следовательно, существует такое E из N1 без N2,
[45:47.000 --> 45:49.000]  что выполнено вот это вот свойство.
[45:50.000 --> 45:56.000]  Да, то есть мы получается убрали наш символ E.
[46:01.000 --> 46:02.000]  Сейчас.
[46:12.080 --> 46:14.080]  Сейчас мы убираем символ E.
[46:20.000 --> 46:22.000]  Сейчас, давайте, может быть,
[46:22.080 --> 46:24.080]  перерыв небольшой устроим.
[46:24.160 --> 46:26.160]  Я сейчас дотуплю доказательства.
[46:26.240 --> 46:29.240]  Рань, что-то такая достаточно очевидная история.
[46:29.320 --> 46:31.320]  Что-то...
[46:31.400 --> 46:33.400]  В общем...
[46:33.480 --> 46:35.480]  Давайте продолжать.
[46:35.560 --> 46:39.560]  В общем, рубрика «Помощь зала» сработала.
[46:39.640 --> 46:41.640]  Смотрите. Короче...
[46:45.720 --> 46:48.720]  У нас есть D достижимый в N1.
[46:49.000 --> 46:51.000]  D, G2. Да?
[46:55.080 --> 46:57.080]  Это значит что?
[46:57.160 --> 46:59.160]  Это значит, существует путь,
[46:59.240 --> 47:03.240]  вывод из F с альфа, D, B, G2.
[47:04.760 --> 47:06.760]  Да?
[47:06.840 --> 47:08.840]  А теперь смотрите.
[47:08.920 --> 47:12.920]  У нас D, D, порождающий в...
[47:16.000 --> 47:18.000]  В где? В G1.
[47:20.000 --> 47:25.000]  Да? Это значит, что у нас есть вывод из D
[47:25.080 --> 47:27.080]  по слову Y в G1.
[47:31.160 --> 47:33.160]  А теперь смотрите.
[47:33.240 --> 47:39.240]  Значит, что значит, что D стал непорождающим в G2?
[47:39.240 --> 47:43.240]  Это значит, существует такое E,
[47:43.320 --> 47:47.320]  который был удален на пути,
[47:49.400 --> 47:56.400]  что у нас из D выводится какой-то гамма E дельта,
[47:56.480 --> 47:58.480]  а из него выводится Y.
[47:58.880 --> 48:02.880]  Причем вот здесь у нас с вами вывод идет по...
[48:02.960 --> 48:04.960]  Тут даже неважно почему.
[48:05.040 --> 48:09.040]  Можно сказать, что вывод идет в грамматике G1.
[48:09.120 --> 48:11.120]  Тогда смотрите, что у нас получается.
[48:11.200 --> 48:14.200]  Объединяем что из S.
[48:14.280 --> 48:20.280]  Мы в игре, в гамматике, в игре, в игре, в игре, в игре,
[48:20.360 --> 48:24.360]  в игре, в игре, в игре, в игре.
[48:25.240 --> 48:27.240]  Что из S?
[48:27.320 --> 48:33.320]  Мы, значит, в игре, в грамматике G1 выводим альфа D бета,
[48:33.400 --> 48:39.400]  а из этого мы вводим альфа гамма E дельта бета в G1.
[48:39.480 --> 48:43.480]  А тогда у нас E каким был в G1?
[48:47.800 --> 48:49.800]  Он был децижим.
[48:49.880 --> 48:51.880]  В плане моего предмета?
[48:51.960 --> 48:53.960]  Да.
[48:54.200 --> 48:56.200]  Да.
[49:00.280 --> 49:02.280]  Следовательно, E достижим в G1.
[49:05.000 --> 49:09.000]  Следовательно, у нас противоречилось тем, что E был удален.
[49:18.800 --> 49:22.800]  Все, спасибо, я затупил.
[49:22.800 --> 49:24.800]  Постараюсь больше не тупить.
[49:24.880 --> 49:28.880]  На самом деле, как ни странно, это был самый сложный момент доказательств.
[49:28.960 --> 49:30.960]  Это сиаремы.
[49:31.040 --> 49:34.040]  Доказать, что у нас при удалении недостижимых,
[49:34.120 --> 49:37.120]  ничего не порождающих, ничего нового не появляется.
[49:37.200 --> 49:41.200]  Итак, вот это понятно?
[49:41.280 --> 49:43.280]  Хорошо, следующий вопрос.
[49:43.360 --> 49:45.360]  Как искать недостижимые символы?
[49:45.440 --> 49:48.440]  Застяжим все точно, это самый обычный обход.
[49:48.520 --> 49:50.520]  Да, обычный DFS.
[49:50.600 --> 49:52.600]  Обычный обход графа со стартовой вершины запускаем,
[49:52.640 --> 49:54.640]  все вершины, которые не дошли.
[49:54.720 --> 49:56.720]  Все не терминалы, до которых не дошли.
[50:00.680 --> 50:02.680]  Шаг третий.
[50:04.000 --> 50:08.000]  Удаляем какие смешанные правила.
[50:12.040 --> 50:14.040]  Так, ну вот это прикол.
[50:14.480 --> 50:16.480]  Это мы прошли.
[50:19.120 --> 50:21.120]  Вот такого типа.
[50:23.400 --> 50:25.400]  Что сделать хочется?
[50:25.480 --> 50:27.480]  Чтобы все буковки большие были.
[50:28.960 --> 50:31.960]  Это же такого типа, значит, не держащиеся объекты.
[50:32.040 --> 50:35.040]  Хотя бы один терминал, хотя бы они не терминалы.
[50:35.120 --> 50:37.120]  Давайте так.
[50:37.880 --> 50:39.880]  Пусть смешанное у нас будет такое.
[50:42.440 --> 50:46.440]  Либо содержит хотя бы два терминала.
[50:47.440 --> 50:51.440]  Либо хотя бы один терминал, хотя бы один не терминал.
[50:59.320 --> 51:01.320]  Вот так вот.
[51:01.400 --> 51:03.400]  Ну, давайте посмотрим.
[51:03.480 --> 51:05.480]  Тут проще на примере показать.
[51:11.200 --> 51:13.200]  Не, ну там две большие будут несмеховны.
[51:14.160 --> 51:16.160]  Не, ну там две большие будут несмешанными.
[51:19.280 --> 51:21.280]  Потому что у нас могут быть определенные...
[51:21.360 --> 51:24.360]  Могут быть все не терминалы, тогда это правило не смешано.
[51:24.440 --> 51:27.440]  Так, смотрите, какой финт ушами хочется сделать.
[51:32.720 --> 51:34.720]  Отвернуть терминал не терминалами.
[51:34.800 --> 51:36.800]  То есть мы добавляем правила вида.
[51:36.800 --> 51:38.800]  А вот это правило заменяем на правило.
[51:44.560 --> 51:46.560]  Ну а такое.
[51:48.560 --> 51:53.560]  Сейчас, а почему мы щадим правила, состоящие из двух терминалов?
[51:53.640 --> 51:55.640]  Из двух терминалов.
[51:55.720 --> 51:59.720]  А, стоп, они не набрали?
[51:59.800 --> 52:01.800]  Ну, чтобы потом с ним не бораться.
[52:01.880 --> 52:03.880]  Ну, чтобы потом с ним не бораться.
[52:03.960 --> 52:05.960]  Ну, чтобы потом с ним не бораться.
[52:05.960 --> 52:07.960]  Ну, чтобы потом с ним не бораться.
[52:08.040 --> 52:10.040]  Ну, мы не хотим...
[52:10.120 --> 52:12.120]  Да, мы их не щадем.
[52:12.200 --> 52:17.200]  Итак, ну, тут как доказывать, что lg3 равняется lg2?
[52:20.360 --> 52:22.360]  Давайте подумаем.
[52:25.560 --> 52:27.560]  Ну, тут на уровне правил делается.
[52:27.640 --> 52:29.640]  То есть допустим, у нас...
[52:29.720 --> 52:32.720]  Давайте я в качестве экземпляра на этом примере покажу.
[52:32.800 --> 52:34.800]  Вдруг у нас а...
[52:36.400 --> 52:40.400]  Выводил какое-то слово w.
[52:44.240 --> 52:46.240]  Тут проще сделать так.
[52:48.320 --> 52:53.320]  Да, рассмотрим те деревья выводов, в которых мы прошлись по другим правилам.
[53:00.080 --> 53:03.080]  То есть тут проще даже сделать... Сейчас, как?
[53:04.080 --> 53:06.080]  Давайте подумаем.
[53:08.680 --> 53:10.680]  То есть у нас...
[53:10.760 --> 53:15.760]  Давайте рассмотрим первый момент в дереве вывода, когда у нас что-то пошло не так.
[53:34.080 --> 53:38.080]  Какой у нас первый момент несовпадения мог быть?
[53:42.160 --> 53:44.160]  Смотрите.
[53:44.240 --> 53:47.240]  Первый момент несовпадения у нас мог быть такой, что у нас...
[53:47.320 --> 53:52.320]  Мы за один шаг какое-то правило вывели.
[53:55.440 --> 53:57.440]  Какое правило у нас могло быть?
[53:57.520 --> 54:00.520]  Могло ли быть первым правилом, в котором у нас вышло несовпадение?
[54:00.600 --> 54:02.600]  Вот такое правило.
[54:03.080 --> 54:05.080]  Какое правило у нас есть?
[54:07.600 --> 54:09.600]  Где большая буква меняется на маленькую?
[54:15.680 --> 54:18.680]  Ну, у нас есть две посредности вывода.
[54:22.480 --> 54:25.480]  Давайте зафиксируем вывод. Левосторонний вывод, допустим.
[54:25.560 --> 54:30.560]  В грамматике получается нашего слова lg3 и lg2.
[54:30.560 --> 54:43.800]  lg2 и начнем смотреть типа так стоп сейчас а давайте сделаем блин я ссоре сегодня надо это надо
[54:43.800 --> 54:54.440]  больше отдыхать давайте проще сделаем короче давайте докажем что lg3 вложена в lg2 и lg2 вложена
[54:54.440 --> 55:08.320]  в lg3 почему lg3 вложена в lg2 потому что смотрите если в какой-то момент времени мы встретили
[55:08.320 --> 55:21.240]  вывод по смешанному правилу за один шаг то как его обойти в новой грамматике
[55:24.440 --> 55:36.320]  да да да вот так согласен так ну что нам надо сделать нам надо просто зайти вот так вот
[55:36.320 --> 55:47.880]  потом за один шаг заменить букву b да и потом за один шаг
[55:47.880 --> 55:57.080]  заменить эту историю на вот такое то есть в одну сторону так
[55:57.080 --> 56:04.280]  в обратную сторону
[56:04.280 --> 56:25.600]  да здесь делается следующее как только у нас встречается правило вида
[56:25.600 --> 56:39.480]  новый вывод новый это значит по правилам g3
[56:39.480 --> 56:55.000]  условия в то есть допустим мы делаем следующее что у нас из с выводится какое-то слово в да и
[56:55.000 --> 57:01.720]  в какой-то момент за один шаг мы раскрываем следующее по новому правилу там не знаю альфа б
[57:01.720 --> 57:18.680]  бета а тут у нас было получается альфа б бета да то поскольку у нас все такие правила появились
[57:18.680 --> 57:26.640]  в момент появления грамматики ну в момент появления новой грамматики то их по факту по факту
[57:26.640 --> 57:35.360]  можно присоединить к старым правилам грамматики то есть то есть сейчас альфа
[57:43.440 --> 57:51.800]  здесь скорее всего лучше так сказать то есть мы делаем следующее вот у нас есть дерево вывода
[57:51.800 --> 58:01.200]  вот здесь последствия вывода и давайте мы сразу сделаем все правила которые у нас были вида
[58:01.200 --> 58:08.320]  б бета новые правила мы просто зачеркнем те переходы то есть мы по факту когда у нас вот
[58:08.320 --> 58:14.640]  такая вот штука произошла в новом правиле мы просто мысленно вот так вот дрем и вычеркиваем эти
[58:14.640 --> 58:23.360]  правила вот а дальше мы смотрим что когда такие правила у нас появлялись они про они
[58:23.360 --> 58:34.680]  появлялись совокупности только со старыми правилами грамматики да да причем сразу скажу
[58:34.680 --> 58:40.480]  что последствия правил вывода мы можем их переставлять в любом порядке давайте просто
[58:40.480 --> 58:46.040]  фиксируем их порядок вот переставим их грамотно порядки и дальше мы их как раз
[58:46.040 --> 59:02.920]  схлопнем в предыдущие правила так кажется это кажется стали в ауте в общем в общем вот такой
[59:02.920 --> 59:11.280]  кейс да тут аккуратненько доказывать чуть сложнее но в целом получается правила без
[59:11.280 --> 59:18.480]  однобуквенной ой без длинных переходов давайте к следующему шагу перейдем
[59:18.480 --> 59:38.200]  четвертый шаг это удаление длинных правил больше больше двух не терминал да что с ними
[59:38.200 --> 59:58.040]  делать было но тут можно сделать делать вот так типа так сейчас давайте прикинем давайте вот так
[59:58.040 --> 01:00:22.640]  а 1 б 1 вот такие вот заменим вот это правило на последовательность вот этих правил да опять
[01:00:22.640 --> 01:00:41.960]  почему лг 4 будет вложен в лг 3 лг 3 вложено в лг 4 почему ну у нас есть такое правило мы раскрываем
[01:00:41.960 --> 01:00:52.160]  вот таким образом и получается цепочка вывода то есть получается у нас стоп сейчас это еще доказываю
[01:00:52.160 --> 01:00:59.240]  да то есть я вот это вот могу
[01:00:59.240 --> 01:01:12.240]  могу заменить на такую цепочку в обратную сторону как
[01:01:22.160 --> 01:01:33.120]  ну да тут история такая что если у нас замены нет то есть если с из w не содержит правил так
[01:01:33.120 --> 01:01:45.800]  сказать дать напишу без замен ну то все ок если у нас есть какая-то замена то заметим что с у нас
[01:01:45.800 --> 01:02:02.400]  получается b 1 и так далее b n минус 1 приходит вся цепь целиком то есть у нас не может где-то
[01:02:02.400 --> 01:02:07.040]  просто не терминал b 2 появится он обязательно появляется со всеми не терминалами которые
[01:02:07.040 --> 01:02:13.600]  порождают эту цепь вывода ну и поэтому раз у нас есть эта цепь то мы по ней можем развернуть и
[01:02:13.600 --> 01:02:26.040]  вот это правило чего но нам надо чтобы все правила состояли из не больше чем двух не терминалов
[01:02:26.040 --> 01:02:33.520]  да но вот у нас длинные правила было мы берем объем на куски на два говорим что это плюс еще все
[01:02:33.520 --> 01:02:40.760]  остальное потом берем вот это плюс остальное третье плюс остальное то есть это штука заводится
[01:02:40.760 --> 01:02:58.920]  для остальных так живем мы мы уже прошли 4 4 шага вот собственно доказательств какие правила у
[01:02:58.920 --> 01:03:04.320]  нас остались нас остались правила вот такого типа и как говорится мы теперь должны избавляться
[01:03:04.320 --> 01:03:10.800]  от epsilon правил для этого нам нужно ввести понятие epsilon порождающих символов
[01:03:26.400 --> 01:03:31.080]  определение это шаг 5
[01:03:34.320 --> 01:03:40.920]  а epsilon порождающий если заводится
[01:03:40.920 --> 01:03:53.400]  теперь смотрите какая фишка тут замена давайте я на слайде покажу потом перепишу
[01:03:53.400 --> 01:04:01.880]  делается следующее нам нужно явным образом выпилить все что может порождать и все он
[01:04:01.880 --> 01:04:10.640]  значит делается так добавим правила
[01:04:10.640 --> 01:04:31.400]  б если из а выводится бц а с ц может выводится epsilon добавим правила а выводит ц если а выводит
[01:04:31.400 --> 01:04:56.600]  бц б выводит epsilon и будем убирать правила вида вот теперь как говорится получим грамматику
[01:04:56.600 --> 01:05:12.080]  g5 а все кто выводит epsilon давайте научимся находить их как их находить точно так же как
[01:05:12.080 --> 01:05:20.040]  искать по ищем порождающие только проверяем что порождаем epsilon все то есть по сути что
[01:05:20.040 --> 01:05:30.720]  нам необходимо нам нужно из правой части правил убрать epsilon порождающие вот если они есть тут
[01:05:30.720 --> 01:05:37.840]  кажется сейчас секунду а ц в epsilon нет окажется не нужен итак получим грамматику g5 и тут хочется
[01:05:37.840 --> 01:05:47.200]  сказать соблазну что давайте докажем что lg5 равно lg4 но это неправда а что правды будет
[01:05:50.320 --> 01:06:01.400]  да собственно поэтому нам надо будет обрабатывать пустое слово и так а давайте
[01:06:01.400 --> 01:06:29.760]  докажем это утверждение и так у из дубль в так да сразу скажу что мы
[01:06:29.760 --> 01:06:51.120]  рассмотрим произвольно не пустое слово и вот здесь мы наконец-таки будем пользоваться нашим
[01:06:51.120 --> 01:06:59.080]  любимым словом индукция по длине вывода
[01:06:59.080 --> 01:07:23.880]  да потом вернем индукции по длине вывода база и с с мы вывели слово в за один шаг
[01:07:23.880 --> 01:07:34.760]  грамматики g4 при этом слово не пустое из-за того что будет следовать
[01:07:43.240 --> 01:07:49.480]  ну какие правила у нас остались когда мы за один шаг можем букву вывести
[01:07:53.880 --> 01:08:14.040]  одну букву значит с дубль в равно а ясно ну значит это правило оставал оставалось и в этом выгромать
[01:08:14.600 --> 01:08:29.280]  все начальный хотя можно и для произвольного доказывать сейчас подумаем так теперь дальше
[01:08:29.280 --> 01:08:42.720]  значит предположим следующее значит для произвольных слов длины меньше к мы все доказали
[01:08:42.840 --> 01:08:56.240]  так давайте теперь посмотрим что мы можем заперта слов меньше к да и наверное нам надо доказывать
[01:08:56.240 --> 01:09:11.400]  сейчас я подумаю кажется это для произвольного не терминала надо доказывать сейчас дайте
[01:09:11.440 --> 01:09:19.960]  секундочку я немножечко это утверждение индукции что если у нас из произвольного не терминала
[01:09:19.960 --> 01:09:25.400]  выводилось какое-то не пустое слово грамматики в g4 то оно будет выводиться вы грамматики g5
[01:09:25.400 --> 01:09:43.880]  да для произвольного да да да да все хорошо переход давайте рассмотрим вывод слова а все
[01:09:43.880 --> 01:10:05.920]  ага почему за один шаг вы вот одно да теперь смотрите пусть заказ шагов мы дошли до слова
[01:10:06.360 --> 01:10:14.600]  для меньшего шага все было ok тогда что у нас у нас грамматика g4 да в ней какие правила могли быть
[01:10:14.600 --> 01:10:32.480]  да а в б цели а в а в epsilon тут это вряд ли нас интересует но смотрите мы отсекать будем
[01:10:32.480 --> 01:10:42.200]  сейчас первый шаг да и так дальше у нас могут быть первые несколько случаев первый а выводит
[01:10:42.200 --> 01:10:53.880]  бц за один шаг грамматики g4 и мы выводим это все за каменус один шаг грамматики g4 второй шаг мы
[01:10:53.880 --> 01:11:13.240]  что у нас еще могло быть да а какой из случаев мы так давайте первый вот этот пуст первый
[01:11:13.240 --> 01:11:21.040]  случай этот пуст второй случай что мы можем сказать про оба эти два случая давайте второй
[01:11:21.040 --> 01:11:41.720]  случай рассмотрим мне кажется он проще ну да то есть если рассмотреть второй случай то получается
[01:11:41.720 --> 01:12:06.360]  поскольку w предположение индукции получается у нас g5 w а а выводилась в
[01:12:06.360 --> 01:12:11.960]  тоже потому что у нас было правила грамматики
[01:12:11.960 --> 01:12:27.120]  так стоп сейчас секунду в g4 да мы убираем только правила
[01:12:27.120 --> 01:12:43.920]  а выводится б это все в g5 это раз шок первый случай интереснее
[01:12:43.920 --> 01:13:04.320]  пусть b выводила у а ц выводила w ой в первый случай достаточно простой у не пустое и в не пустое
[01:13:04.320 --> 01:13:29.120]  что в этом случае делаем если два слова не пустые да g5 целует в грамматики g5
[01:13:29.120 --> 01:13:59.080]  ну да да да спасибо так какой случай будем разбирать у пустое или в пустое
[01:13:59.080 --> 01:14:19.640]  ну за меньшее число шагов мы выводим это пустоту то есть если слов дайте дайте утверждение все
[01:14:19.640 --> 01:14:34.880]  таки которые мы доказываем вот такое
[01:14:34.880 --> 01:14:57.280]  так отлично давайте рассмотрим случай у пустое слово да значит б выводит
[01:14:57.280 --> 01:15:09.320]  грамматики g4 а следовательно у нас а выводит с есть грамматики вы грамматики g5 да давайте за
[01:15:09.320 --> 01:15:19.280]  один шаг я буду писать ну да а выводится за один шаг это значит что оно выводит у нас что выводит
[01:15:19.280 --> 01:15:29.800]  слово w которая по факту будет дуб которая будет нашим словом потому что у пустое наверное
[01:15:29.800 --> 01:15:55.360]  аналогично только а а с акцентирует так как добавилось правило а вот так добавилось правило
[01:15:55.960 --> 01:16:06.720]  поскольку у нас б эпсилон порождающие вот оно добавилось спасибо так ну в одну сторону доказали
[01:16:06.720 --> 01:16:18.400]  кажется может быть случае что у эпсилон и в эпсилон нет хорошо да потому что это будет неверно
[01:16:18.400 --> 01:16:27.440]  вот а значит смотрите дальше следующий факт опять же еще одна индукция
[01:16:27.440 --> 01:16:39.760]  вот такой вот
[01:16:39.760 --> 01:16:56.960]  база какая да да да привыкаем один шаг я же говорил в начале курса что индукцию мы будем
[01:16:56.960 --> 01:17:09.560]  говорить сто пятьсот раз добавлялись ли у нас правила из а выводится не термина и за
[01:17:09.560 --> 01:17:23.800]  выводится терминал нет значит иза у нас в g4 опять же за один шаг было это правило то есть база ровно
[01:17:23.800 --> 01:17:33.000]  такая же теперь переход так вот это я не буду стирать это нам понадобится просто
[01:17:33.000 --> 01:17:53.640]  тут интересно а выводится за пусть один громадь же 5 за один шаг выводится бц и
[01:17:53.640 --> 01:17:57.480]  является дубльвэ тогда что мы можем про это сказать
[01:17:57.480 --> 01:18:06.520]  да
[01:18:06.520 --> 01:18:20.720]  в g4 но из этого выводится что там б выводил какое-то у в g5
[01:18:20.720 --> 01:18:27.640]  сейчас секунду
[01:18:27.640 --> 01:18:41.440]  давайте скажем так пусть это выводила какое-то ув равное дубльвэ вот так то есть
[01:18:41.440 --> 01:18:50.280]  б выводила у ц выводила в и получается чтобы цел у нас поводило слово дубльвэ просто
[01:18:50.280 --> 01:19:02.520]  тут надо аккуратненько проходиться но надо сказать что у не пустое и вы не пустое в данном
[01:19:02.520 --> 01:19:21.160]  случае так как в g5 вот потому что если посмотреть на правила грамматики у нас
[01:19:21.160 --> 01:19:31.280]  ничего из пустой ничто пустое порождаться нем не может у нас удалились все правила за
[01:19:32.160 --> 01:19:56.000]  да да да вот а это значит что у нас получается б в эту g4 в g5 ц выводят в g5 в
[01:19:56.040 --> 01:20:14.400]  да они оба не пустые вот и получается что у нас а выводит в итоге в g4
[01:20:14.400 --> 01:20:31.120]  тоже g4 это просто равенство вот значит смотрите что мы мы не успели доказать значит получается
[01:20:31.120 --> 01:20:36.360]  энное количество пунктов на самом деле последний пункт доказывается просто ровно
[01:20:36.360 --> 01:20:50.720]  аналогично тому как мы удаляли эпсом перехода в автомате значит да дальше надо будет смотрите
[01:20:50.720 --> 01:20:58.520]  крат краткая идея которым будем повторять будущим смотрите у нас получается а выводит
[01:20:58.720 --> 01:21:10.120]  g5 за один шаг выводит получает слово в и тут надо просто понять как это правило могло появиться как
[01:21:10.120 --> 01:21:18.640]  оно могло появиться оно либо уже было и все хорошо либо она появилась при таких махинациях
[01:21:18.640 --> 01:21:34.680]  и тогда надо понять что происходит громадки g4 вот да да да да да вот да надо расписать
[01:21:34.680 --> 01:21:41.480]  потому что это важно все да что-то сегодня я не рассчитал по планам так можно задавать
[01:21:41.480 --> 01:21:42.840]  вопросы и всем спасибо
