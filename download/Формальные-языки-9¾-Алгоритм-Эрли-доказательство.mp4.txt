[00:00.000 --> 00:10.900]  так коллеги всем доброго дня это небольшая такая лекция 9 и три четверти связаны с тем что нам
[00:10.900 --> 00:18.180]  необходимо доказать корректность алгоритма р ли мы в прошлый раз с вами доказали уже корректность
[00:18.180 --> 00:24.140]  в одну сторону и сегодня я решил записать видео для того чтобы мы смогли доказать корректность
[00:24.140 --> 00:30.100]  в обратную сторону к сожалению которую я не смог довести и на прошлой лекции поэтому будем
[00:30.100 --> 00:36.260]  считать что это у нас такая лекция 9 3 четверти давайте начнем и вспомним стол факта который мы
[00:36.260 --> 00:44.180]  хотим собственно доказать итак смотрите у нас в алгоритм р ли было понятие ситуации в которой
[00:44.180 --> 00:58.340]  мы говорили что у нас возможно следующая позиция мы говорили что у нас есть ситуация в алгоритме
[00:58.340 --> 01:04.700]  р ли ситуация мы обычно обозначали таким образом что из правила грамматики а у нас выводится
[01:04.700 --> 01:14.300]  некоторая позиция ситуация а стрелочка б и принадлежит дежитуму причем важно нам
[01:14.300 --> 01:19.980]  сказать что а стрелочка альфа бета это некоторые правила грамматики которую мы с вами знаем и
[01:19.980 --> 01:26.660]  мы хотим с вами доказать следующий вариант что если вдруг у нас в алгоритме р ли появилась
[01:26.660 --> 01:45.340]  такая ситуация появляется такая ситуация тогда и только тогда когда существует такой вывод что
[01:45.340 --> 01:54.940]  из штрих мы каким-то образом вывели первый префикс до позиции и замечу что у нас с вами вот
[01:54.940 --> 02:01.540]  это и вот это и совпадают дальше идет не терминал а дальше у нас идет какая-то последность
[02:01.540 --> 02:11.140]  терминалов и не терминала psi и далее мы говорим что из а мы понятно за один шаг выводим с вами
[02:11.140 --> 02:18.180]  правила альфа бета потому что а стрелочка альфа бета это у нас правила грамматики и что не наесть
[02:18.180 --> 02:26.700]  важное что из альфа мы вводим по слову от и того дожитого где джит и позиция у нас совпадает с этим
[02:26.700 --> 02:31.820]  если мы опять же нарисуем это на картинке то мы будем получать следующий ситуация что из а
[02:31.820 --> 02:45.420]  штрих мы выводим позицию от нуля до и того а си а из psi мы с вами вводим за один шаг альфа бета давайте
[02:45.420 --> 02:50.700]  я буду писать внутри дерево за кое количество шагов оно выводил спустя то мы выводили за к шагов
[02:50.700 --> 03:02.020]  это мы выводили за один шаг а вот это мы с вами допустим выводим за л шагов в и g и на лекции я
[03:02.020 --> 03:06.500]  к сожалению неправильно сказал по кому параметру мы будем делать индукцию давайте зафиксируем
[03:06.500 --> 03:12.700]  сейчас по какому параметру мы будем делать индукцию индук мы доказываем факт из нижнего верхнего
[03:12.700 --> 03:19.540]  на лекции мы с вами доказали что если появляется такая ситуация то у нас существует вывод соответственно
[03:19.540 --> 03:26.660]  сейчас нам нужно сделать все то же самое только в противоположном месте давайте посмотрим значит
[03:26.660 --> 03:34.060]  по какому параметру у нас идет индукция индукция у нас идет смотрите внимательно
[03:34.060 --> 03:47.140]  индукция у нас идет по параметру сначала идет по параметру g что не есть важно второй
[03:47.140 --> 03:57.460]  параметр индукция это у нас будет l k плюс l а третий параметр индукции у нас с вами уже будет l то
[03:57.460 --> 04:04.740]  есть сначала мы смотрим позицию внутри слова потом мы смотрим позицию суммы выводов из
[04:04.740 --> 04:12.420]  штрих в а и из альфа в слово и потом при равенстве этих двух параметрах мы уже с вами будем оценивать
[04:12.420 --> 04:25.740]  глубину вывода из альфа в w и давайте начнем значит база нашей индукции за индукции g равно нулю
[04:25.740 --> 04:35.260]  l плюс k равно нулю ну из этого будет естественно следовать что l равно нулю а что это значит давайте
[04:35.260 --> 04:47.020]  перепишем мы из а штрих за ноль шагов выводим слово с позиции с нулевой до иты а пси потом
[04:47.020 --> 04:55.460]  за один шаг каким-то образом мы выводим правила альфа бета и потом за ноль шагов мы выводим позицию
[04:55.460 --> 05:04.340]  слова от итого до житого но давайте поразмыслим если мы что-то выводим с вами за ноль шагов то
[05:04.340 --> 05:10.660]  это значит что у нас ничего не меняется из этого следует из вот этой картинки у нас будет
[05:10.660 --> 05:21.660]  следовать что s штрих собственно равняется v 0 и а пси поскольку а штрих точно не а штрих у нас
[05:21.660 --> 05:27.180]  точно является не терминалом то из этого будет следовать что а равно и штрих потому что только
[05:27.180 --> 05:32.900]  этот не терминал у нас мог находиться в этой строке из этого дальше будет следовать что у нас
[05:32.900 --> 05:45.460]  v 0 и равняется нулю равняется пустому слову и из этого следует что и равно нулю это раз а второе
[05:45.460 --> 05:51.540]  что мы хотим с вами показать что альфа это тоже пустое слово альфа равно пустое слово так как
[05:51.540 --> 05:59.100]  g равняется нулю можно сказать таким образом а теперь давайте посмотрим внимательно во что же у
[05:59.100 --> 06:04.940]  нас превращается это дерево вывода у нас в итоге вот это дерево вывода трансформируется не что
[06:04.940 --> 06:20.340]  следующее что из штрих за ноль шагов у нас выводится штрих за один шаг из этого у нас могло мог
[06:20.340 --> 06:27.220]  вывести столько альфа бета но у нас мы знаем что и штрих стрелочка с единственное правило
[06:27.220 --> 06:44.980]  грамматики из этого следует что у нас с вами альфа б равняется с но альфа равняется эпсилон из
[06:44.980 --> 06:53.660]  этого следует что б равняется с да то есть мы получаем с вами что б равняется с но тогда
[06:53.660 --> 06:59.260]  давайте подумаем какое правило у нас с вами появилось теперь мы отматываем мы хотим с
[06:59.260 --> 07:06.740]  вами чтобы у нас появилось правила такого вида давайте перепишем его альфа у нас это эш
[07:06.740 --> 07:25.820]  а это эш а равно эш альфа равно эпсилон а б бета равно с получаем точку с запятая 0 поскольку
[07:25.820 --> 07:33.300]  это и у нас с вами принадлежит но что до 0 из этого мы с вами понимаем что это у нас старт
[07:33.300 --> 07:43.500]  наша алгоритма то есть мы специально эту ситуацию сразу доволяли множество
[07:43.500 --> 07:49.540]  да ноль чтобы она у нас с вами была поэтому мы можем считать с вами базу индукции доказанной
[07:49.540 --> 07:56.580]  теперь давайте переход а переход индукции будет состоять следующим давайте давайте
[07:56.580 --> 08:05.380]  я специально скопирую правила наши которые у нас было то есть мы у нас есть вот такая вот вещь
[08:05.380 --> 08:24.660]  раз два так сейчас и немножечко поправлю а все из а штрих а и рассмотрим последний символ в альфа
[08:24.660 --> 08:38.940]  у нас может быть три варианта первый вариант который заключается в следующем что альфа штрих
[08:38.940 --> 08:47.540]  это точнее что альфа это у нас некоторая альфа штриху нужно на альфу ой на какой-то
[08:47.540 --> 08:54.980]  обычный терминал на обычную буф второй вариант это альфа равно альфа штрих на а то есть где у
[08:54.980 --> 08:59.780]  нас последний символ не терминал ну и третий вариант который остается если у нас последняя
[08:59.780 --> 09:07.780]  буква последний символ не буквой не является не терминал то альфа равно эпсел и давайте
[09:07.780 --> 09:13.340]  внимательно смотреть я еще раз нарисую по дерево вывода потому что оно нам понадобится за
[09:13.340 --> 09:22.020]  к раз мы вводим символ от 0 до 1 потом мы вводим апси потом мы за один шаг выводим альфа бета и
[09:22.020 --> 09:36.540]  потом за л шагов выводим в и gt и так первый случай давайте рассматривать первый случай
[09:36.540 --> 09:48.020]  смотреть значит у нас мы знаем что с вами альфа равно альфа штриха выводится за l шагов
[09:48.020 --> 09:56.060]  в и т gt да а что это значит что это означает из этого сразу можно сделать не два года
[09:56.060 --> 10:04.780]  во первых из альфа штрих за такое же количество шагов мы вводим символ ситова даже минус 1 а второе
[10:04.780 --> 10:16.900]  что из а мы вводим в и в житая из этого следует что в житая у нас равняется а это важный факт
[10:16.900 --> 10:30.260]  второй факт который у нас с вами есть что из а штрих мы выводим смотрите из а штрих мы
[10:30.260 --> 10:49.980]  выводим из в 0 и апси а есть такое а из а мы выводим за один шаг тоже альфа штрих а бета но
[10:49.980 --> 11:06.460]  но теперь смотрите альфа штрих альфа штрих выводят в и g минус 1 за те же самые л шагов поэтому
[11:06.460 --> 11:13.780]  здесь мы по параметрам смотрите тройки какие у нас тройка g минус 1 это мы заказчиков выводим
[11:13.780 --> 11:19.840]  к плюс л потому что сумма количества шагов которая у нас было здесь к плюс
[11:19.840 --> 11:26.740]  и и третий параметр тоже и здесь как раз играет в переходе индукции то что мы сделали параметра
[11:26.740 --> 11:35.940]  первого параметра индукции параметр g да и из этого мы можем сказать что по предположению индукции
[11:35.940 --> 11:52.700]  по предположению индукции мы получаем с вами что у нас ситуация из а стрелочка альфа штрих
[11:52.700 --> 12:02.880]  а точку точка а бета и лежала в ситуации даже минус 1 это раз но вторая история что у нас
[12:03.880 --> 12:12.560]  а и значит из этих двух фактов из того что наша операция операция scan мы как раз и получаем
[12:12.560 --> 12:20.800]  необходимую ситуацию альфа штрих а точка бета и принадлежит джитому но это собственно альфа
[12:20.800 --> 12:28.520]  мы получили что а альфа точка бета и принадлежит джита все то есть в этом месте мы с вами показали
[12:28.520 --> 12:34.840]  что если последний символ у нас является терминальным то мы получаем его при помощи операции
[12:34.840 --> 12:44.560]  ска теперь давайте дальше перейдем к следующему пункту следующий пункт интереснее это второй
[12:44.560 --> 12:54.040]  шаг это у нас операция должна получиться операция комплит то есть у нас альфа штрих альфа равно а
[12:54.040 --> 13:06.120]  штрих на б давайте посмотрим у нас с вами мы знаем что из альфа мы за л шагов давайте я
[13:06.120 --> 13:20.880]  опять же скопирую нашу дерево вывода чтобы было видно его я буду вот смотрите альфа штрих за
[13:20.880 --> 13:34.400]  альфа за л шагов выводит в и т джитая отлично но давайте подумаем как тогда из альфа штрих
[13:34.400 --> 13:43.000]  бета мы могли за л шагов вывести б в и т джитая значит а из этого понятно что мы должны сначала
[13:43.000 --> 13:49.240]  раскрыть альфа не теряем а поскольку у нас вывод левосторонний мы с вами договаривались что в
[13:49.680 --> 13:57.800]  у нас левосторонний вывод то значит из этого мы можем сказать что существует некоторое
[13:57.800 --> 14:09.880]  существует такое некоторое м что из альфа давайте я даже скажу что м и т т это количество шагов
[14:09.880 --> 14:18.920]  и вода будет м это под слово что альфа штрих внимательно выводит слово с и того по м т за
[14:18.920 --> 14:27.920]  некоторое количество шагов равное т из этого можно сразу сказать что ты меньше чем л отлично
[14:27.920 --> 14:38.560]  теперь давайте подумаем что у нас происходит с б с б важно сказать что б раскрывается по некоторому
[14:38.560 --> 14:53.120]  правилу грамматики и у б выводит гамма и то за один шаг он вводит так и только потом за
[14:53.120 --> 15:01.800]  количество шагов давайте посчитаем сумми х это у нас т в сумме х это этот шаг т это один шаг
[15:01.800 --> 15:13.640]  такой значит за м минус за л минус т минус один шаг мы с вами выводим в м gт
[15:13.640 --> 15:25.000]  теперь давайте собирать все в цепочку давайте я сейчас наверное опять же это дерево немножечко
[15:25.000 --> 15:33.960]  мы сделаем для него вот для вот этого дерева итак смотрите я немножечко его перерисую
[15:33.960 --> 15:45.040]  значит альфа штрих то есть альфа у нас смотрите теперь становится альфа штрих бета раз теперь
[15:45.040 --> 15:59.520]  за т шагов мы получаем здесь в и м за один шаг мы получаем с вами гамму и за л минус т минус
[15:59.520 --> 16:12.440]  один шаг мы получаем в м gт вот такое вот продвинутое дерево появилось и теперь давайте посмотрим
[16:12.440 --> 16:21.000]  напишем тут два свойства которые нам в итоге позволят сделать операцию комплит смотрите
[16:21.000 --> 16:26.360]  первый раз значит давайте я покажу вам под деревья под которым мы будем писать это все а первое
[16:26.360 --> 16:37.920]  под деревья это вот такое вот раз и вот этот вот кусочек два что мы имеем мы имеем что из
[16:37.920 --> 16:55.720]  штрих за к шагов за к шагов мы выводим в нули апси и за из альфа штрих мы за т шагов выводим
[16:55.720 --> 17:10.520]  в и м в итоге для пары для тройки м запятая к плюс т и т мы имеем по предположению индукции
[17:10.520 --> 17:28.360]  что следующая ситуация а стрелочка альфа штрих точка альф б бета и принадлежит dm это раз
[17:28.360 --> 17:33.800]  дерево которое нас интересует а вот теперь смотрите внимательно второе дерево которое
[17:33.800 --> 17:43.760]  нас интересует оно интересней это дерево вот такого вот типа давайте я покажу нет плохо обвел
[17:43.760 --> 17:55.760]  вот оно вот это дерево у нас интересно значит давайте напишем внимательно тут нужно это все
[17:55.760 --> 18:02.280]  аккуратно проделать значит смотрите и за штрих мы выводим за какое количество шагов сейчас мы
[18:02.280 --> 18:15.120]  посчитаем в 0 м б бета си дай читать количество шагов здесь количество шагов к здесь 1 т то есть
[18:15.120 --> 18:23.040]  у нас здесь к плюс т плюс один шаг мы получаем этот вывод и из гаммы мы с вами за л минус т
[18:23.040 --> 18:37.880]  минус один шаг выводим в м gt да при этом у нас б стрелочка гамма правило нашей грамматики и из
[18:37.880 --> 18:45.520]  этого предположения из этой штуки по предположении индукции но для параметра смотрите g потом у нас
[18:45.520 --> 18:57.760]  параметры идет с вами а к так стоп давайте скобочку беру к плюс т плюс один плюс л минус
[18:57.760 --> 19:15.760]  т секундочку к плюс л плюс а л минус т минус 1 я немножечко замельчил л минус т минус 1
[19:15.760 --> 19:24.600]  а выводится и и давайте треть параметр который нам важен л минус т минус 1 давайте сравним его
[19:24.600 --> 19:38.160]  с парой g к и каплю селько то точнее g каплю селье мы замечаем что вот это слагаемо у нас равняется
[19:38.160 --> 19:43.960]  вот этому слагаемо а вот это слагаемо меньше чем вот этот слагаемо поэтому мы с вами вправе
[19:43.960 --> 19:56.360]  осуществить индукционный переход и какой же у нас вами получается b стрелочка гамма точка m принадлежит
[19:56.360 --> 20:13.400]  дожитому я его введу это раз но то есть это давайте я даже помечу что это у нас с вами было
[20:13.400 --> 20:20.720]  зеленое дерево а вот это у нас вами красный дерево мы разбирали итак вы смотрите что у нас
[20:20.720 --> 20:28.400]  получается у нас получается что из аст альфа точка бета и предложить дм а здесь тот же самый
[20:28.400 --> 20:36.880]  индекс но он совпадает и здесь мы правила заканчиваем из этого мы можем сказать что применяя комплит
[20:43.400 --> 20:52.600]  мы получаем следующую вещь что у нас правила а стрелочка альфа штрих бета точка бета и
[20:52.600 --> 21:02.000]  принадлежит дожитому но опять же вспоминаем что это у нас с вами альфа покажу значит получаем
[21:02.000 --> 21:07.880]  альфа и индукционный переход у нас вами доказан в этом случае то есть идея рассмотреть одно
[21:07.880 --> 21:15.200]  правило вглубь да то есть как посмотрим как бета у нас раскрывалась теперь мы с вами для
[21:15.200 --> 21:21.560]  разбора третьего случая в котором альфа у нас вами пустое слово сделаем ровно то же самое только
[21:21.560 --> 21:28.840]  наоборот мы возьмем альфа который раскрывается пустой символ и посмотрим как оно вывелось давайте
[21:28.840 --> 21:44.120]  это сделаем и так третий случай альфа равно пустому слову так и в итоге смотрите здесь мы
[21:44.120 --> 21:50.040]  даже не будем с вами раскрывать дерево внутрь нам это не интересно раскроем сразу дерево с
[21:50.040 --> 22:00.560]  наружу давайте я сначала перепишу оригинальное дерево в нулевой и а си и только после этого
[22:00.560 --> 22:14.600]  у нас за один шаг раскрывается сразу бета да то есть тут у нас количество шагов равное нулю давайте
[22:14.600 --> 22:20.320]  поймем как этот правило было получен для этого рассмотрим как получилось а
[22:29.600 --> 22:38.440]  как мы могли получить а ну давайте напишем что а могло получиться применив какое-то правило
[22:38.440 --> 22:49.720]  принадлежащие грамматике в итоге значит у нас получается такая цепь и за штрих мы выводим
[22:49.720 --> 22:58.320]  некоторый контекст который нам важен давайте я напишу что мы должны выводить в 0 м поскольку
[22:58.320 --> 23:02.720]  у нас вывод левосторонний мы должны были сначала раскрыть какое-то количество правил потом мы
[23:02.720 --> 23:09.360]  раскрываем правила б и у нас появляется контекст фи си штрих это раз давайте предположим что мы
[23:09.360 --> 23:16.920]  это сделали за те шагов да то есть вот это вот это и вот это у нас вами предположение
[23:16.920 --> 23:25.000]  предположение потом за один шаг мы раскрываем с вами правила грамматики то есть мы пишем что
[23:25.000 --> 23:38.520]  это в 0 м гамма а дельта си штрих да потом нам нужно потратить какое-то количество шагов для
[23:38.520 --> 23:43.880]  того чтобы раскрыть гамму потому что у нас вывод левосторонний и мы раскрываем с вами гамму то
[23:43.880 --> 23:56.480]  есть у нас получается в 0 м в м г а дельта си штрих при этом давайте посчитаем за какое количество
[23:56.480 --> 24:06.560]  шагов мы выводим гамма м г м г если смотрите в сумме нам дается к операции то есть вот эта
[24:06.560 --> 24:11.560]  операция плюс вот эта операция плюс эта операция дает сумме к действий то вот это действие мы
[24:11.560 --> 24:27.560]  выполняем за к-т-1 шаг ну теперь давайте смотреть еще раз нарисую дерево то есть вы наверное даже
[24:27.560 --> 24:35.160]  не надо рисовать давайте все-таки нарисуем чтобы было понятно то есть у нас получается с вами что
[24:35.160 --> 24:52.440]  с штрих за к-т за т шагов вывел в 0 м б си штрих потом за один шаг мы выводим гамма альфа дельта
[24:52.440 --> 25:06.440]  потом за камен к-т-1 шаг мы с вами выводим в мг т и теперь смотрите какие правила мы
[25:06.440 --> 25:15.240]  можем с вами применить для перехода к индукции значит это раз и вот это два то есть вот этот
[25:15.240 --> 25:28.440]  кусочек что из гаммы мы выводим вот теперь смотрите что мы получаем мы получаем с вами что
[25:28.440 --> 25:43.680]  давайте еще раз перепишем это все что из штрих за т шагов мы выводим в 0 м б си штрих потом из гаммы
[25:43.840 --> 25:52.720]  за камен ст-1 шаг мы выводим в мг и теперь смотрите внимательно за как какое предположение индукция
[25:52.720 --> 25:59.960]  у нас с вами работы для какой тройки здесь тройка g но она собственно у нас не меняется здесь нам
[25:59.960 --> 26:07.640]  нужно сложить количество 10 которые было здесь и здесь это к плюс так давайте я напишу вот так
[26:07.640 --> 26:20.560]  т плюс камен ст-1 и здесь у нас количество шагов равное камен ст-1 сравним с тем что мы
[26:20.560 --> 26:26.440]  хотим получить тем что мы хотим у нас базе g количество шагов здесь внимательно капли с
[26:26.440 --> 26:32.800]  0 шагов потому что из альфа пустое слово вводится за ноль шагов и здесь у нас количество шагов
[26:33.400 --> 26:39.640]  и замечаем что вот эту штучку у нас с вами равняется к-1 а вот эта штучка равняется
[26:39.640 --> 26:47.120]  к поэтому мы можем сделать предположение индукции то есть по предположение индукции у
[26:47.120 --> 26:56.760]  нас получается что правила b стрелочка гамма точка альфа дельта и давайте посмотрим м принадлежит
[26:56.760 --> 27:07.120]  раз раз отлично то есть это у нас правила есть а теперь второй факт который нам с
[27:07.120 --> 27:17.280]  вами нужен это то что а стрелочка бета у нас лежит грамматики из этого получается что у нас с
[27:17.280 --> 27:28.200]  вами альфа стрелочка точка бета g ой точка смотрите я тут ошибся давайте я немножечко
[27:28.200 --> 27:36.080]  подправлю здесь у нас везде позиции не джи ты а и ты были но тут у нас везде и равно g поэтому
[27:36.080 --> 27:46.240]  мы с вами могли бы применять как это и так и g давайте я тут и равная g здесь тоже и равная g то
[27:46.240 --> 28:02.000]  есть у нас получается с вами альфа стрелочка точка бета g принадлежит джитому да а теперь
[28:02.000 --> 28:27.360]  смотрите это у нас работает по правил предикт по правил предикт а смотрите что мы хотели с
[28:27.360 --> 28:38.920]  вами получить мы хотели с вами хотели что из а стрелочка epsilon точка бета и тут важно понять что
[28:38.920 --> 28:47.960]  на самом деле мы хотели g принадлежит джи так как и равно g ну собственно мы это правила и с вами
[28:47.960 --> 28:54.480]  и получили таким образом давайте мы с вами еще раз подытожим что у нас получилось у нас с
[28:54.480 --> 29:03.040]  вами получилось что мы доказываем переход индукционный с смотрим по последнему символу
[29:03.040 --> 29:09.720]  который у нас получается из альфы они из альфы побывается не терминал терминал тогда это у нас
[29:09.720 --> 29:19.520]  правила scam а это у нас правила complete а epsilon это правила предикт кем образом рассмотрев три
[29:19.520 --> 29:24.760]  случая тут надо очень аккуратно где-то просто посмотреть внимательно где-то нужно было посмотреть
[29:24.760 --> 29:30.200]  как мы раскрываем этот не терминал а где-то посмотреть как мы получаем этот не терминал таким
[29:30.200 --> 29:38.000]  образом мы теперь с вами можем сказать что индукционный переход в итоге доказ вот теперь
[29:38.000 --> 29:46.280]  давайте мы с вами немножечко с вами поговорим по тому какая у нас с вами сложность алгоритма
[29:46.520 --> 29:53.520]  потому что я тоже немножечко замял это этот момент в лекции и хотелось бы его дополнительно
[29:53.520 --> 30:07.160]  рассказать сложность алгоритма и так смотрите значит мы поняли с вами что нам надо каким-то
[30:07.160 --> 30:14.160]  образом эффективно хранить ситуации альфа давайте предположим что у нас какой-то символ тут x стоит
[30:14.160 --> 30:23.120]  причем x у нас может быть трех типов альфа x точка б и т принадлежит дежит значит дежит мы
[30:23.120 --> 30:31.120]  будем с вами хранить массиве то есть у нас получается д а джит и будем хранить позицию x которая
[30:31.120 --> 30:40.240]  здесь есть и здесь у нас будет получаться будут лежать все правила вида альфа x точка бета и и то
[30:40.240 --> 30:46.080]  есть вот такие все-таки ситуации у нас будут лежать допустим тут что могли быть какие-то наборы
[30:46.080 --> 30:54.080]  ситуации а теперь давайте внимательно оценим чему может быть x район то есть у нас может быть x это
[30:54.080 --> 31:07.760]  сейчас секунду давайте напишем вот так все-таки на вот так то есть следующий все-таки символ нам
[31:07.760 --> 31:18.640]  нужно уметь стрекать следующий символ вот так вот у нас может быть три варианта x равно а где
[31:18.640 --> 31:29.440]  а это символа фавита x равно а где а это некоторые не терминал да тут дублирование понятия но я
[31:29.440 --> 31:40.800]  думаю понятно что это другие а и третье это x это символ конца слова и в принципе тогда мы
[31:40.800 --> 31:47.560]  можем достаточно эффективно с вами обращаться для того чтобы делать операции там скан предик
[31:47.560 --> 31:56.160]  комплит почему смотреть значит тут что мы можем сразу сказать давайте правила будем хранить тоже
[31:56.160 --> 32:05.240]  таким образом то есть у нас g от а будет хранить все правила начинающиеся
[32:05.240 --> 32:21.000]  с а то есть это правило вида а стрелочку бета теперь смотреть что получается значит операция
[32:21.000 --> 32:30.840]  скан как у нас работает нам нужно взять на самом деле если у нас в gt равно а то нам надо просто
[32:30.840 --> 32:48.600]  взять d получается gt и а и просто передвинуть все символы и пут в д g плюс 1 но надо для каждого
[32:48.600 --> 32:54.320]  правила уметь эффективно смотреть на следующую на следующий символ я думаю если это реализовать
[32:54.320 --> 32:59.120]  в классе грамотно в классе в виде массивчика там в виде списка это спокойно можно сделать за вот
[32:59.120 --> 33:05.880]  и не все время поэтому мы сразу с вами понимаем что эта операция нам с вами обходится за о
[33:05.880 --> 33:16.040]  мощность количества правил грамматики давайте вот так напишу потому что нам надо просто взять
[33:16.640 --> 33:26.040]  взять смотрите все все позиции а и эффективно перебирать только не давайте вот так напишу что
[33:26.040 --> 33:37.560]  это все-таки будет мощность вот такая d gt а т то есть это количество символов которые у
[33:37.560 --> 33:43.000]  нас с вами находятся потом мы будем детальнее разъяснить а теперь смотрите операция предикт
[33:46.040 --> 33:52.800]  что мы хотим с вами операции предикт напоминаю что у нас есть а стрелочка альфа точка
[33:52.800 --> 33:59.280]  b бета и принадлежит дожитое и бета стрелочка гамма принадлежит правил грамматики то есть
[33:59.280 --> 34:17.800]  нам надо посмотреть с вами в д житое b и g b ну и тогда мы эффективно с вами это достаточно все
[34:18.320 --> 34:31.320]  опять и комплит что у нас с вами получается здесь а стрелочка альфа точка бета бета
[34:31.320 --> 34:43.320]  к принадлежащий некоторым дитому здесь б стрелочка гамма точка и принадлежит джитому нам надо
[34:43.320 --> 34:49.000]  эффективно трекать все такие позиции ну давайте смотреть здесь у нас это множество получается
[34:49.000 --> 35:07.280]  d и бета d и b а здесь у нас получается с вами d g доллар то есть это символ конца слова то есть
[35:07.280 --> 35:13.760]  все такие штуки мы можем с вами эффективно трекать а давайте оценим чему равняется чему
[35:13.760 --> 35:24.320]  у нас асимптотика о джитом мощность джитов равняется утверждение что это g плюс один умножить на модуль
[35:24.320 --> 35:33.800]  гамма где модуль гамма это сумма всем всех длин всех длин правых частей правил
[35:38.280 --> 35:47.160]  да действительно почему это так потому что на самом деле в у нас любое правило а стрелочка
[35:47.160 --> 35:58.600]  альфа точка бета и которая лежит в джитом здесь и меняется от нуля даже а точку можно поставить
[35:58.600 --> 36:27.240]  любезде в о от g местах вот отлично теперь давайте оценим сверху скан в итоге у скана
[36:27.240 --> 36:36.360]  асимптотика получается у нас вами о от модуль джит это сверху то есть это о большое а давайте
[36:36.360 --> 36:42.720]  оценивать достаточно в тупую это модуль модуль вена модуль же я думаю что здесь можно точнее
[36:42.720 --> 36:49.400]  поставить посмотреть на самом деле те правила в грамматике в которых у нас есть символ а то
[36:49.400 --> 37:00.440]  есть на самом деле здесь можно даже написать что это будет не давайте не будем оценивать
[37:00.440 --> 37:05.600]  давайте просто скажем что это вот такая величина тут пока что точнее не хочется
[37:05.600 --> 37:14.200]  оценивать теперь давайте посмотрим в операцию предикт что у нас вами происходит в операции
[37:14.200 --> 37:22.280]  предикт значит тут мы можем с вами сказать что у нас добавляется правила б стрелочка
[37:22.280 --> 37:33.720]  б б стрелочка точка гамма g принадлежит джитом да то есть давайте даже точнее скажу что мы должны
[37:33.720 --> 37:42.200]  посмотреть еще и правила а стрелочка альфа точка б бета и принадлежащие джит но давайте
[37:42.200 --> 37:49.200]  подумаем за какое время мы можем с вами осмотреть все такие множество но у нас с
[37:49.200 --> 37:59.440]  вами тут перебирается во первых и то есть у нас здесь и перебор и вот эти все точки тоже
[37:59.440 --> 38:08.640]  перебираются мы в итоге мы с вами получаем о большое от модуль джитого ну что сверху мы
[38:08.640 --> 38:17.680]  тоже можем оценить как у большой от модуль гамма модуль гамма и осталась операция комплит тут
[38:17.680 --> 38:26.920]  самое интересное смотрите значит здесь нам нужно смотреть значит во-первых нам нужно посмотреть
[38:26.920 --> 38:38.160]  в джитая доллар это раз здесь у нас каждый джитая доллар указывает на некоторую позицию и и
[38:38.160 --> 38:51.280]  выплевывает некоторую пару терминал б раз а здесь мы потом смотрим в д и т бета ну давайте
[38:51.280 --> 39:01.040]  прикидывать а сколько у нас тут получается значит здесь в правиле и джитая я могу с вами
[39:01.040 --> 39:11.200]  сказать точно что это будет вот так вот такие вот вот эту мощность вот этого множества у нас
[39:11.200 --> 39:19.840]  состоит с вами о большое от количества правил грамматики да потому что у нас точка всегда
[39:19.840 --> 39:33.040]  стоит в конце умножить на g ну на модуль g плюс один тут давайте скажу потому что и у нас
[39:33.040 --> 39:41.840]  может пробегать любые позиции вот а вот здесь у нас вами уже получается интереснее потому что
[39:41.840 --> 39:59.920]  позиции и позиции б то есть тут вот здесь вот у нас еще с вами может добавиться о большое от модуль
[40:00.520 --> 40:13.600]  потому что у нас ну по сути это здесь у нас вами идет оценка сверху и тут нужно очень аккуратненько
[40:13.600 --> 40:25.720]  все по все соответствие поставить причем смотрите внимательно это вот такая важная особенность
[40:25.720 --> 40:31.880]  что по сути здесь для каждого вот эту вот штуку мы можем избавиться то есть давайте напишу
[40:31.880 --> 40:41.160]  точнее симптотику это получается от модуль п на мощность д0 потому что если мы указываем и равное
[40:41.160 --> 40:46.960]  нулю то мы получаем что мы переходим на что д0 нам надо оценить эту штуку плюс количество правил
[40:46.960 --> 40:54.840]  на модуль д1 плюс и так далее плюс количество правил умножить на мощность множество дежитая
[40:54.840 --> 41:05.200]  ну и тогда смотрите что у нас получается о большой от мощности количества правил умножить на длину
[41:05.200 --> 41:14.880]  слова давайте сверху оценим количество g сверху длиной слова умножить на мощность дежитого это
[41:14.880 --> 41:24.800]  получается длина слова w на количество правил грамматики на количество правил грамматики
[41:24.800 --> 41:32.600]  ну на суммарном количестве правой части правил как мы обозначили модуль g ну и это получаем мы с
[41:32.600 --> 41:43.640]  вами о большое от модуль v в квадрате на модуль g в квадрате и так о заметьте что мы это дело для
[41:43.640 --> 41:53.240]  каждого g поэтому итогов у нас асимптотика алгоритма получается с вами о большое от модуль
[41:53.240 --> 42:01.840]  v в квадрате модуль v в кубе точнее на модуль g в квадрате вот то есть алгоритм является не очень
[42:01.840 --> 42:08.000]  эффективным но если точнее посмотреть оценки асимптотик и заметить что на каждой на каждой
[42:08.000 --> 42:13.840]  стадии мы не делаем мы добавляем не более чем c правил если
[42:22.320 --> 42:24.040]  то асимптотика будет
[42:29.160 --> 42:35.240]  будет уже о большое от количества слов в квадрате там на эту константу домножим
[42:35.240 --> 42:44.080]  вот при этом считаем всегда что количество правил грамматики либо суммарная часть правой
[42:44.080 --> 42:49.880]  суммарная длина всех правом числе грамматики это константа потому что на самом деле все
[42:49.880 --> 42:57.720]  этой истории происходит на стадии компиляции если вы посмотрите и дадите какие-то комментарии по
[42:57.720 --> 43:04.520]  этой части будет отлично вот ссылочку на доску я прикреплю в комментариях всем спасибо
[43:04.520 --> 43:10.440]  наша лекция 9 и 3 четверти подождать к концу буду ждать вас всех на следующих лекциях
