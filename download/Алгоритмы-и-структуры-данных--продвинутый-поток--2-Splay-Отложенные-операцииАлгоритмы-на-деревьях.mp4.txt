[00:00.000 --> 00:21.120]  Так, ну что ж… Так, ну что, давайте будем начинать,
[00:21.120 --> 00:22.120]  соответственно.
[00:22.120 --> 00:25.360]  Да, что-то… Не, что-то всё равно мало как-то.
[00:25.360 --> 00:29.560]  Да, уже больше, чем было в начале, конечно, но…
[00:29.560 --> 00:30.560]  Ладно.
[00:30.560 --> 00:31.560]  Соответственно.
[00:31.560 --> 00:33.880]  Значит, ну, чем мы сегодня будем заниматься?
[00:33.880 --> 00:36.080]  Ну, возможно, заниматься будем много чем.
[00:36.080 --> 00:37.080]  Вот.
[00:37.080 --> 00:42.720]  Но, соответственно, как-то полное ощущение, что сегодня
[00:42.720 --> 00:45.840]  или, по крайней мере, максимум в следующий раз это может
[00:45.840 --> 00:48.200]  всё сойтись в какое-то единое целое.
[00:48.200 --> 00:55.240]  Вот, потому что… Называется нацеливаться, или мы будем
[00:55.240 --> 00:58.360]  на страшную, в скобках нет, такую структуру данных
[00:58.360 --> 01:01.720]  как линкат-3.
[01:01.720 --> 01:04.720]  Слышали о такой?
[01:04.720 --> 01:05.720]  Давайте попробуем.
[01:05.720 --> 01:06.720]  Отпадите руки.
[01:06.720 --> 01:09.720]  Кто слышал о такой?
[01:09.720 --> 01:13.520]  Ага, кто знает, что это такое?
[01:13.520 --> 01:15.920]  О, да, логично.
[01:15.920 --> 01:19.120]  Так, кто писал, говорите?
[01:19.120 --> 01:21.480]  А, спасибо.
[01:21.480 --> 01:22.480]  Вот.
[01:22.480 --> 01:23.480]  Ну, понятно.
[01:24.480 --> 01:25.480]  Ну, понятно.
[01:25.480 --> 01:26.480]  Да-да-да.
[01:26.480 --> 01:27.480]  Да-да-да.
[01:27.480 --> 01:29.480]  Я не сам, меня заставили.
[01:29.480 --> 01:32.480]  Не, ну, Хёда, ты не сам, меня заставили.
[01:32.480 --> 01:33.480]  Давай по тексту.
[01:33.480 --> 01:34.480]  Кира, я тебя поймаю.
[01:34.480 --> 01:35.480]  Вот.
[01:35.480 --> 01:39.480]  О, кто-то смотрел, наверное, да?
[01:39.480 --> 01:40.480]  Так.
[01:40.480 --> 01:41.480]  Вот.
[01:41.480 --> 01:42.480]  Но как бы до этого идти.
[01:42.480 --> 01:45.480]  Тут уже, конечно, другие писенки, конечно, в голове
[01:45.480 --> 01:46.480]  появляются.
[01:46.480 --> 01:47.480]  Там всякие.
[01:47.480 --> 01:48.480]  Называется.
[01:48.480 --> 01:52.520]  Но давайте всех этих героев драмы, собственно, по очереди
[01:52.520 --> 01:53.520]  рассматривать.
[01:53.520 --> 01:55.520]  Ну, конечно, первое основное.
[01:55.520 --> 01:58.520]  Это у нас, конечно, будет сплей дерева.
[01:58.520 --> 01:59.520]  Вот.
[01:59.520 --> 02:08.520]  Как бы сбалансированное двоичное дерево поиска.
[02:08.520 --> 02:10.520]  Таких у нас, естественно, не было.
[02:10.520 --> 02:11.520]  Поэтому вот вам уже.
[02:11.520 --> 02:12.520]  Там какое у нас?
[02:12.520 --> 02:13.520]  Четвёртое или пятое?
[02:13.520 --> 02:14.520]  Я уже забыл.
[02:14.520 --> 02:15.520]  Да.
[02:15.520 --> 02:16.520]  Дай-дай.
[02:16.520 --> 02:17.520]  Вот.
[02:17.520 --> 02:21.520]  Ну да, дикарь тягих у нас не было.
[02:21.520 --> 02:22.520]  Вот.
[02:22.520 --> 02:26.520]  Вот, видимо, возможно, придётся обсудить, но неважно.
[02:26.520 --> 02:27.520]  Вот.
[02:27.520 --> 02:29.520]  Но сплей дерева будет оказываться там.
[02:29.520 --> 02:32.520]  Вот, казалось бы, зачем нам нужно сплей дерева?
[02:32.520 --> 02:35.520]  Какими убедительными свойствами оно обладает?
[02:35.520 --> 02:36.520]  Вот.
[02:36.520 --> 02:40.520]  То есть, действительно, оно обладает убедительным
[02:40.520 --> 02:43.520]  свойством, что все операции делаются за логарифом.
[02:44.520 --> 02:45.520]  Вызывается.
[02:45.520 --> 02:47.520]  Были ли у нас вообще когда-нибудь такие деревья,
[02:47.520 --> 02:49.520]  чтобы все операции были за логарифом?
[02:49.520 --> 02:51.520]  Есть логариф.
[02:51.520 --> 02:52.520]  Да.
[02:52.520 --> 02:55.520]  Продоксально, да, но аж целых три дерева.
[02:55.520 --> 02:58.520]  Все как-то три дерева как-то это ухитрили сделать.
[02:58.520 --> 03:00.520]  Но сплей дерева круче.
[03:00.520 --> 03:03.520]  Оно умеет делать это за амортизированное логарифом.
[03:03.520 --> 03:07.520]  А круче где?
[03:07.520 --> 03:09.520]  Вот.
[03:09.520 --> 03:11.520]  И вот, действительно, казалось бы вопрос.
[03:11.520 --> 03:13.520]  Так, но-то.
[03:13.520 --> 03:16.520]  Да, а в чем амортизированность круче обычности?
[03:16.520 --> 03:19.520]  Так, ну ведь сплей дерева оно же...
[03:19.520 --> 03:22.520]  Там знаете какой шикарный вариант у дерева?
[03:22.520 --> 03:23.520]  Вот.
[03:23.520 --> 03:27.520]  Знаете, какие двоичные дерева могут быть сплей деревьями?
[03:27.520 --> 03:30.520]  Любые.
[03:30.520 --> 03:31.520]  Да.
[03:31.520 --> 03:33.520]  Ведь, действительно, что такое сплей дерева?
[03:33.520 --> 03:36.520]  Значит, сбалансированное двоичное дерево поиска,
[03:36.520 --> 03:40.520]  в котором, на самом деле, в котором никаких внутренних
[03:40.520 --> 03:41.520]  инвариантов нет.
[03:41.520 --> 03:42.520]  От слова вообще.
[03:42.520 --> 03:47.520]  То есть, абсолютно, теоретически, абсолютно любое двоичное
[03:47.520 --> 03:51.520]  дерево, там двоичное дерево поиска может быть сплей
[03:51.520 --> 03:52.520]  деревом.
[03:52.520 --> 03:53.520]  Вот.
[03:53.520 --> 03:58.520]  Фишка будет заключаться, конечно, в другом.
[03:58.520 --> 03:59.520]  Ну вот.
[03:59.520 --> 04:02.520]  То есть, фишка сплей дерева будет заключаться в правильных
[04:02.520 --> 04:03.520]  операциях.
[04:03.520 --> 04:06.520]  Точнее, снова в правильных поворотах.
[04:06.520 --> 04:09.520]  Вот.
[04:09.520 --> 04:10.520]  Спрашивайте.
[04:10.520 --> 04:14.520]  Зачем же, товарищи слейтериториян, его вообще, действительно,
[04:14.520 --> 04:15.520]  придумали?
[04:15.520 --> 04:16.520]  Да.
[04:16.520 --> 04:19.520]  Это не по причине того, что это там первое историческое
[04:19.520 --> 04:20.520]  дерево.
[04:20.520 --> 04:22.520]  То есть, сначала придумали типа там амортизированное.
[04:22.520 --> 04:24.520]  Потом уже думали, а можно ли сделать честное, придумали
[04:24.520 --> 04:25.520]  овель?
[04:25.520 --> 04:26.520]  Нет, конечно.
[04:26.520 --> 04:29.520]  То есть, овель, там помню, год 62, а сплей, это, там,
[04:29.520 --> 04:30.520]  помню, 80-е.
[04:30.520 --> 04:32.520]  И то, дай бог.
[04:32.520 --> 04:33.520]  Вот.
[04:33.520 --> 04:34.520]  Ну вот.
[04:34.520 --> 04:35.520]  Ну да, 80-е.
[04:35.520 --> 04:36.520]  Вот.
[04:36.520 --> 04:37.520]  Ну вот.
[04:37.520 --> 04:38.520]  Ну зачем оно надо?
[04:38.520 --> 04:43.520]  Но дело в том, что оказывается, что у сплей дерева несколько
[04:43.520 --> 04:47.520]  на самом деле, как называется, байтоматизированных оценок.
[04:47.520 --> 04:48.520]  Вот.
[04:48.520 --> 04:51.520]  То есть, например, если открыть оригинальную статью,
[04:51.520 --> 04:55.680]  слейтериторияна, собственно, и про сплей дерева, то на
[04:55.680 --> 04:59.160]  самом деле, там, можно подробно причитать, что на самом деле,
[04:59.160 --> 05:01.680]  как бы да, сложилась ситуация, что да, придумывается огромное
[05:01.680 --> 05:03.160]  количество деревьев поиска.
[05:03.160 --> 05:05.680]  Не всегда сбалансированных, но иногда там по своей нужды.
[05:06.440 --> 05:08.440]  То есть, там, на самом деле, то, что мы, то есть, то, что
[05:08.440 --> 05:10.680]  мы там перечисляли, там, раньше, там, бейт дерева,
[05:10.680 --> 05:13.680]  там, вот это, там, овель дерева и так далее, это так, это,
[05:13.680 --> 05:14.680]  ну вот.
[05:14.680 --> 05:16.680]  То есть, это еще только самые видные представители.
[05:16.680 --> 05:19.680]  На самом деле, там деревьев гораздо больше, они там
[05:19.680 --> 05:22.400]  могут быть не всегда идеальные, но они там просто работают
[05:22.400 --> 05:24.920]  какие-то под свои нужды, и у них там время работы
[05:24.920 --> 05:27.680]  оценивается еще как-то дополнительно, из-под каких-то параметров.
[05:27.680 --> 05:28.680]  Вот.
[05:28.680 --> 05:29.680]  Ну вот.
[05:29.680 --> 05:33.960]  Критизна сплей дерева заключается в том, что называется
[05:33.960 --> 05:36.760]  многие из этих деревьев, там, сплей дерева начинает
[05:36.760 --> 05:37.760]  мажорировать.
[05:37.760 --> 05:40.680]  Ну, в том плане, что, там, говорит, что вот у нас
[05:40.680 --> 05:43.680]  есть фингер дерева, там какой-то фингер дерева, допустим.
[05:43.680 --> 05:45.680]  Да, так и называется, фингер 3.
[05:45.680 --> 05:46.680]  Вот.
[05:46.680 --> 05:49.520]  И у него там есть, там, какое-то, там, какое-то странное
[05:49.520 --> 05:52.480]  время работы, там, исчисляемое какими-то, там, параметрами.
[05:52.480 --> 05:55.120]  А теперь, заметим, что если вы вместо фингер 3 напишете
[05:55.120 --> 05:59.040]  сплей дерева, то асимптотика будет абсолютно такой же.
[05:59.040 --> 06:01.240]  Или даже лучше.
[06:01.240 --> 06:03.680]  По крайней мере, также оценить можем.
[06:03.680 --> 06:04.680]  Вот.
[06:04.680 --> 06:08.240]  Ну, помимо фингер 3 есть еще, там, какое-то, там, называется
[06:08.240 --> 06:10.240]  васипети дерево, там, какое-то.
[06:10.240 --> 06:13.760]  Нет, сейчас я название придумал, естественно, да.
[06:13.760 --> 06:14.760]  Вот.
[06:14.760 --> 06:16.240]  Там, какое-то васипети дерево.
[06:16.240 --> 06:19.240]  Оно там, оно работает за асимптотику такую-такую-такую-то.
[06:19.240 --> 06:21.760]  Но, оказывается, сплей дерево тоже работает за такую
[06:21.760 --> 06:22.760]  асимптотику.
[06:22.760 --> 06:23.760]  Вот.
[06:23.760 --> 06:26.440]  Ну и так перечисляются где-то там дерево 4, как минимум
[06:26.440 --> 06:27.440]  точно.
[06:27.440 --> 06:28.440]  Вот.
[06:28.440 --> 06:29.960]  Можем там, может там в какой-то момент даже попробовать
[06:29.960 --> 06:30.960]  открыть статью, наверное.
[06:30.960 --> 06:31.960]  Вот.
[06:31.960 --> 06:33.960]  У нас, раз презентация нас в какой-то момент сыграет,
[06:33.960 --> 06:35.840]  даже посмотрим, что ж там за такое счастье.
[06:35.840 --> 06:42.040]  И, действительно, на самом деле у сплей, ну, то есть,
[06:42.040 --> 06:44.280]  у сплей дерева, действительно, то есть, мы, конечно, будем
[06:44.280 --> 06:49.300]  доказывать, что мы будем доказывать, а мы будем доказывать
[06:49.300 --> 06:51.080]  весьма неожиданную, вот, штуку.
[06:51.080 --> 06:54.960]  Оно, кстати, поднимите руки, кто когда-нибудь сталкивался
[06:54.960 --> 06:55.960]  со сплей деревом раньше.
[06:55.960 --> 06:56.960]  Так.
[06:56.960 --> 06:59.960]  Кто когда-нибудь писал сплей дерево.
[06:59.960 --> 07:00.960]  Ага.
[07:00.960 --> 07:01.960]  Логично.
[07:01.960 --> 07:02.960]  Примерно те же.
[07:02.960 --> 07:03.960]  Вот.
[07:03.960 --> 07:04.960]  Так.
[07:04.960 --> 07:05.960]  А кто доказывал асимптотику?
[07:05.960 --> 07:06.960]  Чего?
[07:06.960 --> 07:07.960]  А?
[07:07.960 --> 07:08.960]  А, окей.
[07:08.960 --> 07:09.960]  Ну вот.
[07:09.960 --> 07:16.640]  Но тут возникает вопрос, какое доказательство было.
[07:16.640 --> 07:20.080]  Потому что тут я вас сразу предупрежу, значит, будет
[07:20.080 --> 07:21.080]  подляночка.
[07:21.080 --> 07:23.760]  В презентации, там в презентации у этого сплей дерева может
[07:23.760 --> 07:24.760]  быть даже доказательство.
[07:24.760 --> 07:25.760]  Ну вот.
[07:25.760 --> 07:28.360]  Ну оно будет не совсем правильно.
[07:28.360 --> 07:33.000]  Так, ладно, нет, это я сейчас неправильно выяснил.
[07:33.000 --> 07:35.920]  Доказательство будет правильным, с его помощью действительно
[07:35.920 --> 07:39.360]  можно показать, что учетная стоимость всех операций
[07:39.360 --> 07:41.000]  сплей дерева логарифом.
[07:41.000 --> 07:43.440]  Оно не подойдет до линката?
[07:43.440 --> 07:44.440]  Да.
[07:44.440 --> 07:45.440]  Совершенно верно.
[07:45.440 --> 07:49.920]  То есть мы используем чуть более сложные доказательства,
[07:49.920 --> 07:52.200]  но зато после этого оно будет линкат.
[07:52.200 --> 07:54.760]  Но мы и теорему сформулируем сильно мощнее.
[07:55.400 --> 07:58.000]  Потому что в простом виде теорема говорит, да, все
[07:58.000 --> 08:01.200]  операции работам, если правильно ввести потенциал,
[08:01.200 --> 08:03.280]  то учетная стоимость будет от логарифма.
[08:03.280 --> 08:04.280]  Да, доказательства.
[08:04.280 --> 08:10.360]  Но на самом деле можно это сделать сильно хитрее.
[08:10.360 --> 08:15.920]  Вот, а именно, допустим, у нас есть двоичное дерево
[08:15.920 --> 08:16.920]  поиска какой-нибудь.
[08:16.920 --> 08:31.600]  Так вот, идея такая, давайте в каждую вершину поместим
[08:31.600 --> 08:34.040]  мистическое число w.
[08:34.040 --> 08:43.080]  Там wut, wvt, там… Ну, скорее веса.
[08:43.080 --> 08:47.520]  Это обычно называется веса, wa, wb и так далее.
[08:47.520 --> 08:53.840]  Причем известно, что все w что-то там, все они строго
[08:53.840 --> 08:54.840]  больше нуля.
[08:54.840 --> 09:02.200]  Вот, у каждого элемента будет введен, соответственно,
[09:02.200 --> 09:03.200]  какой-то вес.
[09:03.200 --> 09:13.000]  Так вот, мы докажем, но также мы введем, что w большое
[09:13.000 --> 09:19.080]  это будет сумма всех весов дерева.
[09:19.080 --> 09:23.240]  Нет, это не потенциал, не путать.
[09:23.240 --> 09:37.360]  Так вот, мы докажем, что учетная стоимость всех
[09:38.360 --> 09:49.520]  у нас есть, равна o от логарифма w поделить на… Вот, w это.
[09:49.520 --> 09:50.520]  Чего?
[09:50.520 --> 10:01.040]  Значит, где и – это вершина, с которой мы работали.
[10:02.040 --> 10:05.040]  В некотором смысле.
[10:05.040 --> 10:06.040]  Да.
[10:06.040 --> 10:07.040]  Вот.
[10:07.040 --> 10:12.040]  Ну, потому что у нас все… Значит, тут оговорка такая,
[10:12.040 --> 10:16.240]  что все операции обычно там устроены так, что мы там
[10:16.240 --> 10:20.040]  спускаемся к какой-то вершине и параллельно что-то делаем.
[10:20.040 --> 10:21.040]  Вот.
[10:21.040 --> 10:25.640]  Ну вот, когда мы будем спускать… Если операция потребует
[10:25.640 --> 10:30.360]  спуститься к вершине i, то оказывается, что мы сделаем
[10:30.360 --> 10:34.560]  так, что учетная стоимость этой операции будет логарифм,
[10:34.560 --> 10:40.280]  то есть o от логарифма отношения суммы всех весов к весу
[10:40.280 --> 10:42.280]  конкретно этой вершины.
[10:42.280 --> 10:43.280]  Вот.
[10:43.280 --> 10:50.240]  Ну, на самом деле, да, то есть отсюда, скажем, можно
[10:50.240 --> 10:56.000]  сделать вывод, что… Как бы это формулировать?
[10:56.600 --> 11:02.760]  Заметим, что каждая операция… То есть, там, допустим,
[11:02.760 --> 11:05.900]  там каждая операция с каждой вершиной делась какое-то
[11:05.900 --> 11:06.900]  количество раз.
[11:06.900 --> 11:09.140]  Вот, допустим, для простоты, что у нас эта операция была
[11:09.140 --> 11:11.680]  операцией с searching, допустим, да, ну, чтобы просто было
[11:11.680 --> 11:12.680]  проще вообразить.
[11:12.680 --> 11:17.420]  И мы знаем, что там каждая операция, допустим, каждой
[11:17.420 --> 11:20.660]  вершине мы пытались обратиться к какое-то количество раз.
[11:20.660 --> 11:21.660]  Да?
[11:21.660 --> 11:22.660]  Вот.
[11:22.660 --> 11:29.880]  Получается, что если мы, допустим, п1 раз вызывали первую
[11:29.880 --> 11:33.880]  вершину, п2 второй, п3 третью, то суммарное время работы
[11:33.880 --> 11:40.180]  получается что-то типа п1 логарифом в поделить
[11:40.180 --> 11:47.540]  на w1, плюс п2 логарифом в поделить на w2, плюс и так
[11:47.540 --> 11:53.340]  далее плюс пn в логарифом, там соответственно w поделить
[11:53.340 --> 11:58.540]  на wn, но зе. Вот, ну как тогда, где-то там что-то
[11:58.540 --> 12:01.020]  какое-то слово энтропия как-то возникает с собой-собой
[12:01.020 --> 12:05.740]  где-то, да? Не, ну что? Не, ну по-моему, что-то похожее,
[12:05.740 --> 12:14.540]  нет? Не, ну не всегда, конечно, да, ну вот. Ну тут вот такое,
[12:14.740 --> 12:20.340]  да, но фишка, знаете, в чем заключается? Фишка заключается
[12:20.340 --> 12:23.260]  в том, что вы каждому элементу на самом деле вот эти w-то
[12:23.260 --> 12:29.860]  можете самостоятельно ввести. Вот, то есть на самом деле
[12:29.860 --> 12:36.740]  если я скажу, что w и t пусть будет равно тупо p и t, да,
[12:36.740 --> 12:39.780]  и при этом, причем заявим, что сумма всех p и t-х равно
[12:39.780 --> 12:44.180]  1, обратите внимание, да, то есть я как бы могу там
[12:44.180 --> 12:47.140]  сантиметры спокойно переводить килограммы и наоборот, понимаете,
[12:47.140 --> 12:52.300]  да? Вот, и соответственно, поэтому тут получается уже,
[12:52.300 --> 12:54.940]  то есть тогда получится асимптотика, то есть заметим,
[12:54.940 --> 12:57.500]  что я просто под w могу подставлять просто абсолютно
[12:57.500 --> 13:01.580]  все что угодно и асимптотика будет реально такая, обратите
[13:01.580 --> 13:04.660]  внимание, поэтому логариф, ну вот тут получится логариф
[13:04.740 --> 13:09.220]  лог, там 1 делить на p1 плюс p2, там логарифом 1 делить
[13:09.220 --> 13:17.020]  на p2, там плюс и так далее, плюс, вот. Так что вот тут
[13:17.020 --> 13:20.060]  получается такая красота. Так вот это уже по-моему
[13:20.060 --> 13:22.660]  и два лени словарное определение слова энтропия по-моему
[13:22.660 --> 13:31.940]  уже. Вот. Ну, то есть возможно, да, еще одна причина, по
[13:31.940 --> 13:34.260]  которой действительно оказывается, что сплэй-дерево интересно.
[13:34.260 --> 13:40.180]  Вот. Так что вот такие вот тут у нас неожиданности
[13:40.180 --> 13:52.140]  возникают. Ну вот. И так. Значит, ну давайте поймем,
[13:52.140 --> 13:54.780]  что же это такое за мистическое сплэй-дерево, которое вот
[13:54.780 --> 13:59.020]  без всяких инвариантов поддерживает вот такую асимптотику. Вот.
[13:59.780 --> 14:06.140]  Ну, идея очень простая. Значит, идея очень простая.
[14:06.140 --> 14:11.100]  Для того, чтобы реализовать соответственно такую штуку,
[14:11.100 --> 14:21.740]  нам потребуется мистическая операция сплэй. Сплэй от В.
[14:21.740 --> 14:35.460]  Я сказал от В, а не от W. Вот. Эта операция будет делать маленькую простую вещь.
[14:35.460 --> 14:46.300]  Она будет брать вершину В. Там, допустим, где-то тут вот пум-пум-пум. Вершина В. И будет делать
[14:46.300 --> 14:56.980]  серию поворотов таким образом, что В окажется корким. То есть еще одно такое интересное
[14:56.980 --> 15:03.580]  свойство. Вот как бы в компьютере, как знаете, есть такое понятие кэш. Вот. Ну не будет кэш,
[15:03.580 --> 15:10.340]  соответственно, да? То есть что такое кэш? Это мы говорим, что если мы использовали какую-то
[15:10.340 --> 15:15.700]  область памяти, то мы ее, по крайней мере, некоторое время храним где-то близко от себя.
[15:15.700 --> 15:21.140]  И тогда получится, если нам потребуется эта область памяти еще раз, то мы там глубоко в память
[15:21.140 --> 15:27.420]  лезть не будем, а вместо этого прочитаем ее вот быстро. Она вот у нас типа рядом лежит. Вот,
[15:27.420 --> 15:34.660]  понимаете такое, да? Вот. Вот. То есть там коррект. То есть, естественно, в роли этого стола,
[15:34.660 --> 15:39.980]  на которой мы положим, будет там какая-то более маленькая область там, но пока к этой маленькой
[15:39.980 --> 15:45.100]  области будет обеспечено сильно более быстрый доступ, соответственно. Но там бывают разноуровни,
[15:45.100 --> 15:50.460]  то есть там кэши бывают там просто там, бывают там трехуровневые, четырехуровневые, там как угодно.
[15:50.460 --> 15:56.500]  Вот. Ну это вы там уже, собственно, там предметы операционных, там всяких там архитектуры
[15:56.500 --> 16:01.060]  компьютера, операционных систем, это у вас еще, вам еще предстоит такое? Или у вас это уже есть?
[16:01.060 --> 16:07.140]  Ну предстоит. Ну предстоит, конечно, да. Вот. Поэтому не будем сейчас копать. Ну вот. Но отмечу,
[16:07.140 --> 16:11.740]  только что вот у сплея дерева такое же свойство будет, да? То есть если мы тыкали в вершину,
[16:11.820 --> 16:23.140]  то в следующий раз мы эту вершину найдем за 1, потому что она будет тупо в корне. Вот. Вот. Но идея будет
[16:23.140 --> 16:34.500]  заключаться в том, что мы будем фактически все операции делать через сплей. Вот. То есть в некотором
[16:34.500 --> 16:42.180]  плане, при этом, заметьте, мы просто попробуем доказать, что сплей работает за, ну там учетная
[16:42.180 --> 16:48.420]  стоимость работает за вот этот вот логарифом. Посмотрим чего, да. И окажется, что просто,
[16:48.420 --> 16:53.940]  ну окажется, что все остальные операции будут работать буквально за о, за тета от сплея. Ну или
[16:53.940 --> 17:03.300]  там тета от сплея плюс один. Вот. Ну практически. Вот давайте это поймем. Вот предположим,
[17:03.300 --> 17:12.660]  что у нас есть операция сплей, вот допустим, да. Которая магическим образом, ну вот. Которой
[17:12.660 --> 17:27.180]  реальное время работы. То есть реальное время работы. Оно будет, конечно же, о от там, ну допустим,
[17:27.180 --> 17:36.020]  тета от глубины вершины в текущей плюс один. Ну глубины имеется в виду глубины перед сплеем, да.
[17:36.020 --> 17:47.300]  Вот. И, допустим, вот у нас реальное время будет такое, а учетное время будет немножко другим.
[17:47.300 --> 17:55.420]  А именно оно будет это от вот этого логарифма w делить на w и т. Ладно, я неправ. Тут тоже плюс
[17:55.420 --> 18:02.020]  один на самом деле. Да, это важная оговорка, потому что вот этот логариф может быть сколь угодно меньше
[18:02.020 --> 18:11.540]  единицы. Сколь угодно меньше единицы, соответственно. Вот. Поэтому тут вот оговорка на плюс один все-таки
[18:11.540 --> 18:19.100]  важна. Она нам даже некоторую жизнь будет портить, но что делать? Вот. Значит, это реальное время,
[18:19.100 --> 18:28.700]  это учетное время. Предположим, что у нас есть вот такой мистический сплей. Ну, заметим,
[18:28.700 --> 18:34.580]  что тогда я утверждаю, что за такое же учетное время можно реализовать как минимум сёрч.
[18:34.580 --> 18:43.660]  Ну, допустим, нам пришел какой-то ключик. Ладно, Ки допустим и пришел. И мы его ищем в дереве.
[18:43.660 --> 18:50.540]  Напоминаю, это двоичное дерево поиска. Тогда идея простая. Мы его честно идем-идем-идем-идем-идем
[18:50.540 --> 18:59.100]  находим и потом от найденной вершины вызываем сплей. Пологично, да? Получилось время работы
[18:59.100 --> 19:07.740]  прям тета от сплея. Вот. Ну или если мы там шли-шли-шли-шли-шли и вылетели в аут, то от последней
[19:07.740 --> 19:17.780]  вершины тогда все равно вызываем сплей, ничего страшного. Так. Но давайте думать, что еще можно
[19:17.780 --> 19:33.380]  сделать на халяву с помощью сплея. Все? Ничего себе. Нет, ну все, конечно, вот. Вот что такое все. Ну,
[19:33.380 --> 19:39.940]  совсем, нет, совсем на халяву, к сожалению, не получится. Ну, потому что, допустим, какую-нибудь
[19:39.940 --> 19:48.140]  операцию максимум, вот найти максимум в дереве, это мы за сплей можем сделать. Как? Ну, то есть,
[19:48.140 --> 19:54.540]  тупо идем вправо-вправо-вправо-вправо, а потом от самой правой вершины вызываем сплей, да? Ну,
[19:54.540 --> 20:09.580]  автоматически там понятно минимум, естественно. Но как сделать, например... Так. Какое? Ну,
[20:09.940 --> 20:19.900]  вот эрейс. Как, например? Ну, корень, а потом как-то полную схитрю. А, то есть еще и мерч надо сразу, да?
[20:19.900 --> 20:27.860]  Так, хорошо, как сделать мерч? Ну, спуститься там в одного, в правую вершинку засплейте, повесить.
[20:27.860 --> 20:34.100]  Да, допустим, в самую правую вершинку левого спуститься, сплей от нее и повесить в ней правую.
[20:34.100 --> 20:42.300]  Отлично, только возникает вопрос. А вот это вот повесить, оно адекватное учетное время имеет?
[20:42.300 --> 20:57.700]  Это реальное время один, я согласен. А учетное? Вот. Да, вот, видите, маленькая проблема. Просто так
[20:57.700 --> 21:04.060]  на халяву не получится, потому что для исследования нам все-таки придется исследовать потенциал какой-то.
[21:04.060 --> 21:09.780]  Ну, раз есть учетное время, значит есть потенциал. Будем пользоваться методом потенциалов, да. То есть,
[21:09.780 --> 21:16.700]  по-моему, редкие случаи, когда монетки вообще не помогут от слова вообще. Ну, потому что нам
[21:16.700 --> 21:22.660]  придется пользоваться вещественным потенциалом. Нет, ну, то есть вы можете себе там говорить,
[21:22.660 --> 21:27.580]  что там монетки типа, давайте положим туда, там, я не знаю, две монетки 75 центов, там, я не знаю,
[21:27.580 --> 21:37.780]  что-то в этом роде. Нет, ну там, как это называется, вы когда-нибудь покупали по цене корень из двух
[21:37.780 --> 21:47.340]  долларов. Ну вот, значит, смотрите, какой потенциал ведем. Так, ну, во-первых, как мы уже сказали,
[21:47.340 --> 21:57.660]  у каждой вершины есть, соответственно, ее вес, который больше нуля, да. Значит, смотрите,
[21:57.660 --> 22:11.780]  мы, я теперь веду понятие такое, я веду понятие СВ. Значит, СВ это, соответственно, такой красивый
[22:11.780 --> 22:19.740]  двухместный вагон, в котором висят зеркала и, соответственно, находится по повышенный класс
[22:19.740 --> 22:34.820]  обслуживания. Вот, но обычно там, но обычно там все-таки два пассажировку поживут. Вот, но в нашем СВ будет
[22:34.820 --> 22:45.780]  лежать одна сумма по всем потомкам векшины В, включая ее саму. Вот, мы это вот так ведем.
[22:45.780 --> 23:11.540]  Значит, вот, ну и, наконец, патент, мистический потенциал. Сумма логарифмов двоичных СВ. Что,
[23:11.540 --> 23:35.420]  какой интергал? Да. Вот, да, такая красота у нас получится. Так, ну, чем потенциал приятен? Ну,
[23:35.420 --> 23:40.020]  вот, ну да, конечно, конечно, в простой версии доказательства мы бы сказали, что, то есть,
[23:40.420 --> 23:45.260]  в простой версии доказательства все веса были бы один. То есть, по сути, СВ это такое СЗ,
[23:45.260 --> 23:50.660]  на самом деле, от В, а потенциал суммы логарифмов размеров получился бы, что он порядка Н логена.
[23:50.660 --> 24:06.260]  Вот, соответственно, но у нас вот все будет хитрее. Так. Чего-чего?
[24:20.660 --> 24:30.140]  Да, а ведь действительно проблема, да. Да, к сожалению, действительно. Да,
[24:30.140 --> 24:37.700]  возникает такая, действительно, мелкая проблема, что, на самом деле, такой потенциал может быть и
[24:37.700 --> 24:50.140]  меньше единицы. Ну, если бы все веса были единичными, например, то было бы нормально. Так.
[24:50.140 --> 25:05.660]  Так, что ждет? Ну, пока проблема в том, что в текущем виде потенциал у нас, соответственно,
[25:05.660 --> 25:16.540]  называется бывает не очень. Так, ну, хорошо. Так, ну, хорошо. Ладно, давайте, как-то можно
[25:16.540 --> 25:24.940]  выкручиваться тогда в этой ситуации. Да, нет? Так, нет, ну, как сказать, совсем вес,
[25:24.940 --> 25:32.780]  это, конечно, не очень хорошо. Ну, можно там, конечно, ввести. Что тут можно ввести?
[25:32.780 --> 25:39.620]  У нас, видимо, в легкой версии сдачи вылезти был нулевой вклад. Да, ну, это нормально.
[25:39.620 --> 25:48.260]  Нет, ну, как сказать, нет, ну, можно в этом смысле по аналогии, конечно, ввести,
[25:48.260 --> 25:59.460]  СВ поделить на W. Нет, ну, мне бы, конечно, да, но я не знаю, мне бы, конечно, не хотелось так делать.
[25:59.460 --> 26:05.540]  Ладно, поэтому мы пойдем по более простому пути и скажем все веса от единицы.
[26:05.540 --> 26:16.420]  Проблема, да, потенциал меньше нуля. Вот в этом проблему.
[26:16.420 --> 26:32.420]  Ладно, значит, смотрите, давайте, пусть веса у нас будет на всякий случай больше,
[26:32.420 --> 26:39.860]  или, правда, единица. Так, ну, давайте тестить, что? Нет, давайте мы это потестим. Вот, давайте
[26:39.860 --> 26:45.300]  посмотрим, как нам сделать мерч, например.
[27:02.420 --> 27:13.300]  Нет, ну, и нет, это просто оказывается, что можно показать, что там вот учеты, там все эти времена, они вот такие, вот такие, вот такие, ля-ля-ля-ля-ля-ля-ля.
[27:13.300 --> 27:21.380]  Так, ну, давайте думать, значит, за какое время, значит, да, сетч мы можем теперь, получается, реализовать тоже за, там, вот эти времена,
[27:21.380 --> 27:29.300]  равна, как и максимум минимум. А теперь внимание, вопрос. А теперь давайте посмотрим, вот давайте начнем с мержа.
[27:29.300 --> 27:35.460]  Спрашивается, как с помощью сплей деревьев сделать мерч?
[27:35.460 --> 28:02.340]  Так, ну, давайте сейчас по порядочку, давайте, хорошо?
[28:02.980 --> 28:28.820]  Так, ну, давайте по порядочку, по порядочку, по порядочку, давайте это я убираю. Значит, смотрите, то есть, действительно, идея заключается в том, что, допустим, нам надо слить два дерева, вот, да, но, правда, нет, тут, на самом деле, вопрос, который мы, кстати, в прошлый раз не обсуждали, а как сливать, вообще, деревья по явному ключу, вообще?
[28:28.900 --> 28:32.260]  Мы же говорили, что у нас сплит и мерч есть только в деревьях по неявному ключу.
[28:34.260 --> 28:42.180]  Да, но, на самом деле, конечно, никаких проблем слияния деревьев по явному ключу вполне себе существует, но, правда, с важной оговоркой.
[28:42.180 --> 28:55.860]  Оговорка будет заключаться в том, что все ключи слева, в левом дереве, должны быть меньше всех ключей вправо, вот. То есть, прям вот, любой ключ здесь меньше, чем любой ключ здесь.
[28:55.860 --> 29:04.900]  И тогда, в принципе, абсолютно те же слияния, собственно, будут работать. Значит, к чему нас это приводит?
[29:04.900 --> 29:25.780]  Ну, идея, возникает такая, значит, так как у нас в сплит-земле нет никаких вариантов, в том числе, на глубину, а есть операция сплей, то заметим, что из правого дерева можно с помощью операции сплей сделать очень простое дерево, у корня которого нет у правого сына.
[29:26.700 --> 29:47.700]  А слева висит все. Это, конечно, взрывает мозг, то есть, казалось бы, там сбаланс, мы говорили о сбалансированности, а потом просто корню сообщаем, так, дорогой, значит, возьми все, как-то, значит, смотри, возьми всех своих потомков левую руку, все.
[29:47.700 --> 29:49.700]  Так и сиди.
[29:50.620 --> 30:03.620]  Ну да, но на самом деле нет, это неправда, потому что мы ему не просто так повесили все в левую руку, потому что теперь мы говорим, а в правую руку мы теперь тебе повесим вот это вот замечательное дерево.
[30:05.620 --> 30:07.620]  Вот такая вот простая вещь.
[30:13.620 --> 30:15.620]  Какой сёрч? Сёрч кого?
[30:16.540 --> 30:27.540]  Ну не сёрч, а скорее максимум, потому что, как бы, если мы искали не максимум, то как бы с левой справа что-то висеть обязательно будет.
[30:29.540 --> 30:31.540]  Вот если мы ищем максимум, то тогда вот такая ситуация.
[30:32.460 --> 30:40.460]  То есть, получается, мы работаем за сплей от этого максимума плюс от единицы.
[30:40.460 --> 30:42.460]  Но, внимание, вопрос.
[30:42.460 --> 30:48.460]  За какую, спрашивается АСИП точку, учетную это работает?
[30:49.380 --> 31:03.380]  Если мы будем большие дерево выбирать и к нему меньше подвешивать, тогда понятно, что там у корня лог не больше чем единицы.
[31:03.380 --> 31:10.380]  Но, кажется, мы не храним информацию о том, какое дерево больше.
[31:11.300 --> 31:13.300]  Ну, во-первых, не факт.
[31:13.300 --> 31:22.300]  Если вы просто подвешиваете больше дерева к меньшему, то у вас вполне может образоваться вот такого рода бамбуча.
[31:29.300 --> 31:35.300]  Ну и что? Я на каждом шаге тут куда-то одну вершинку подвешиваю.
[31:41.300 --> 31:46.300]  В смысле? Ну, это же мы сделали, это же мы кучу операции сделали.
[31:46.300 --> 31:53.300]  Нет, ну, приятель, допустим, у вас такое дерево, и вы решили примержить к нему одну вершину.
[31:53.300 --> 31:55.300]  Внимание, вопрос.
[31:55.300 --> 31:56.300]  Что будет?
[31:56.300 --> 31:58.300]  Мы найдем вот этот максимум, вот он.
[31:58.300 --> 32:00.300]  За сплеем его.
[32:00.300 --> 32:02.300]  Что у нас там получится?
[32:02.300 --> 32:07.300]  Допустим, я вам открою страшную тайну.
[32:07.300 --> 32:09.300]  Вот что-то такое получится.
[32:10.220 --> 32:12.220]  И мы повесим эту вершину сюда.
[32:12.220 --> 32:14.220]  Поздравляю.
[32:14.220 --> 32:20.220]  Ну, операция работает завод единицы, но нам и по барабану.
[32:20.220 --> 32:22.220]  Да, действительно.
[32:22.220 --> 32:24.220]  Операция завод единицы.
[32:24.220 --> 32:28.220]  Обратите внимание, что дерево может быть вообще не сбалансировано.
[32:28.220 --> 32:30.220]  Это нормально.
[32:31.140 --> 32:33.140]  Перед этим было уже плохим.
[32:33.140 --> 32:43.140]  Нет, ну, если вы с нуля это все будете делать, то у вас все это и будет возникать.
[32:43.140 --> 32:49.140]  Но там без вот этих промежутков, там просто вот такая будет бамбуция.
[32:49.140 --> 32:53.140]  Бамбуция с сучком.
[32:54.060 --> 32:58.060]  Я просто не совсем понимаю, зачем нам как-то вообще-то думывается о структуре дерева,
[32:58.060 --> 33:01.060]  если мы можем просто оценивать потенциалы?
[33:01.060 --> 33:03.060]  Нет, нет, просто нет.
[33:03.060 --> 33:07.060]  Я как бы это исходя из того, что кто-то там говорил, что если подвешивать меньше к большему,
[33:07.060 --> 33:09.060]  то там что-то автоматически что-то будет.
[33:09.060 --> 33:11.060]  Нет, автоматически не будет.
[33:11.060 --> 33:17.060]  То есть там просто автоматически не будет, дерево может оказаться бамбучей.
[33:17.060 --> 33:19.060]  Ну а давайте смотреть.
[33:19.980 --> 33:25.980]  Допустим, у нас у этого дерева был максимум с весом W.
[33:25.980 --> 33:31.980]  Допустим, было тут суммарный вес W1, а тут суммарный вес W2.
[33:33.980 --> 33:43.980]  Тогда, значит, смотрите, сплей у нас сработал за время θ, значит 1 плюс логарифом W1 поделить на Wt.
[33:44.980 --> 33:46.980]  Логично, да?
[33:47.900 --> 33:49.900]  А теперь внимание и вопрос.
[33:49.900 --> 33:55.900]  За какую асимптотику сработало собственно подвешивание?
[33:55.900 --> 33:57.900]  Вот это вот.
[34:02.900 --> 34:04.900]  Вот за сколько оно сработало, как вы думаете?
[34:04.900 --> 34:12.900]  У нас сложились, собственно, вот эти потенциалы, они в целом просто сложились,
[34:12.900 --> 34:14.900]  за исключением того, что S в корне поменялось.
[34:15.820 --> 34:25.820]  Обратите внимание, в потенциале, заметим, поменялся только потенциал вот этой вершины.
[34:25.820 --> 34:27.820]  Другое не поменялось.
[34:28.740 --> 34:34.740]  И получается, то есть реальное время от единицы стало в этой вершине сколько?
[34:34.740 --> 34:48.740]  Логарифом W1 плюс W2 минус логарифом W1 получается.
[34:49.660 --> 34:59.660]  Или что то же самое, это 1 плюс двоичный логарифом W1 плюс W2 поделить на W1.
[35:00.580 --> 35:08.580]  Как мы можем перерывать W1, если у нас изменилась структура дерева, когда мы сделали сплей?
[35:08.580 --> 35:14.580]  Когда изменилась структура дерева, мы это учитываем в оценке в учетном районе сплея.
[35:14.580 --> 35:22.580]  Да, то есть учетное время работы оно не такое, оно такое плюс такое.
[35:22.580 --> 35:24.580]  W1, как я понимаю, это S.
[35:24.580 --> 35:28.580]  Это суммарный вес вот этого дерева левого, да?
[35:29.500 --> 35:31.500]  То есть Sv от корня.
[35:45.500 --> 35:55.500]  И тогда получается в итоге merge будет работать за θ от единицы, 1 плюс 1 равно 1.
[35:56.420 --> 36:10.420]  И логарифом двоичной суммы весов 2 поделить на Wmax1.
[36:18.420 --> 36:22.420]  В общем случае можно просто сказать, что это 1 плюс логарифум суммы их весов.
[36:22.420 --> 36:24.420]  И в общем-то на этом не заморачиваться.
[36:25.340 --> 36:29.340]  Например, если все веса единичные, то вот вам логан вылез.
[36:37.340 --> 36:45.340]  Но правда то, что делим на логариф Wmax, это на самом деле может сослужить добрую службу.
[36:45.340 --> 36:51.340]  Собственно забегая вперед в линкате и собственно сослужит нам добрую службу.
[36:52.260 --> 36:56.260]  Так, ну теперь давайте что-нибудь попроще, split.
[37:06.260 --> 37:08.260]  Вот, ну по сути да.
[37:08.260 --> 37:13.260]  То есть как сделать split, например, так, чтобы там слева оказались все меньше либо равны
[37:13.260 --> 37:16.260]  какого-то элемента ki, да?
[37:16.260 --> 37:18.260]  И справа больше.
[37:19.180 --> 37:24.180]  Ну идея простая, надо этот элемент ki найти и торжественно отправить в корень.
[37:24.180 --> 37:26.180]  Логично, да?
[37:26.180 --> 37:29.180]  А после этого просто правое дерево торжественно отпилить.
[37:31.180 --> 37:35.180]  Нет, мы ж не erase делаем, мы split делаем.
[37:35.180 --> 37:39.180]  Нет, erase, да, кстати тоже можно так делать.
[37:39.180 --> 37:41.180]  Давайте как удалить элемент?
[37:41.180 --> 37:45.180]  Значит это вывесить его в корень.
[37:46.100 --> 37:52.100]  Называется, да, он такой уже становится довольный, расслабленный и тут мы его и соответственно.
[37:52.100 --> 37:58.100]  Как говорится, да, но на мне же все висит, ну ничего, а у нас есть слияние, ничего страшного.
[37:58.100 --> 38:03.100]  Да, такая вот действительно красота.
[38:03.100 --> 38:09.100]  Ну а со split все проще, слава богу split никого не удаляет, мы просто распиливаем детей.
[38:09.100 --> 38:15.100]  Мы говорим, что похроничный элемент отправляется в корень и правого ребенка мы его отпиливаем.
[38:16.100 --> 38:25.100]  Вот, но заметим, что отпили, что приятно в этом потенциале, что отпиливание по дереву только уменьшает потенциал.
[38:25.100 --> 38:27.100]  Логично, да?
[38:28.100 --> 38:35.100]  То есть как это называется? Отпили у себя правого ребенка и получи дополнительно 100.
[38:38.100 --> 38:41.100]  Что-то я себе плохо формулирую.
[38:42.020 --> 38:50.020]  Ну вот и это называется, да, хочешь заработать дополнительные 100.
[38:50.020 --> 38:54.020]  Просто отпили, да, просто вылези в корень и отпили себе ребенка.
[38:54.020 --> 38:56.020]  Нормально.
[38:56.020 --> 39:02.020]  Вот, да, это тоже получается работает за 1 плюс логарифом двоичный.
[39:02.020 --> 39:08.020]  Значит W большое, поделить на W вот этого вот.
[39:08.940 --> 39:12.940]  Ну я вот так неаккуратно напишу немножко, но W ключика.
[39:17.940 --> 39:19.940]  Ой, что-то жужжит.
[39:22.940 --> 39:24.940]  Так, сейчас спрошу прощения.
[39:24.940 --> 39:26.940]  Так, давайте я не сюда.
[39:32.940 --> 39:34.940]  Ай-дё.
[39:35.940 --> 39:37.940]  Стоять, всё.
[39:38.860 --> 39:40.860]  Ладно, так.
[39:41.860 --> 39:43.860]  Ладно, разберемся.
[39:47.860 --> 39:49.860]  Вот.
[39:49.860 --> 39:52.860]  Значит вот сплит у нас будет работать, ну допустим вот за такую симпточку,
[39:52.860 --> 39:58.860]  ещё там за какой-то минус, но это уже там непонятно какой конкретно.
[39:58.860 --> 40:01.860]  Вот, потому что непонятно уже сколько мы там справа отпилим.
[40:01.860 --> 40:03.860]  Вот.
[40:03.860 --> 40:07.860]  Ну а теперь заметим, как теперь делать вставку.
[40:08.780 --> 40:10.780]  Вот теперь.
[40:16.780 --> 40:22.780]  Ну да, можно действительно сделать это за какие-нибудь аккуратный мёрзший сплит.
[40:24.780 --> 40:26.780]  Вот.
[40:26.780 --> 40:30.780]  Или там периодически можно...
[40:30.780 --> 40:32.780]  Что ещё можно сделать?
[40:32.780 --> 40:36.780]  Правда, не знаю, инстракт нельзя сделать.
[40:37.700 --> 40:40.700]  Спуститься и за сплит добавленную вершину.
[40:43.700 --> 40:45.700]  Ну как вам сказать.
[40:45.700 --> 40:51.700]  В тот момент, когда вы подвесите лист, потенциал поменяется непонятно как.
[40:51.700 --> 40:53.700]  Поэтому тут лучше.
[40:53.700 --> 40:55.700]  Поэтому поаккуратнее.
[40:55.700 --> 40:59.700]  Поэтому просто так на халитам сделать как обычно нельзя.
[40:59.700 --> 41:01.700]  Но можно действительно...
[41:02.620 --> 41:08.620]  То есть можно действительно сделать сплит и потом соответственно два мержа.
[41:08.620 --> 41:10.620]  Вот.
[41:10.620 --> 41:12.620]  Чего?
[41:12.620 --> 41:14.620]  Ну вот.
[41:14.620 --> 41:23.620]  Значит, можно действительно сделать сплит за условие лог2 w поделить на w какого-то элемента.
[41:23.620 --> 41:29.620]  Но, правда, и после этого действительно сделать соответственно два мержа.
[41:30.540 --> 41:32.540]  Вот.
[41:32.540 --> 41:34.540]  Ну и суммарно действительно всё слопается.
[41:34.540 --> 41:36.540]  Получится хорошо.
[41:36.540 --> 41:38.540]  Вот.
[41:38.540 --> 41:42.540]  Соответственно, что-то у нас ещё получается.
[41:44.540 --> 41:46.540]  Так, так, так.
[41:46.540 --> 41:48.540]  Сплит понятно.
[41:48.540 --> 41:52.540]  Хотя с другой стороны, а можно ещё повеселее.
[41:54.540 --> 41:57.540]  Хочется утверждать, что сплит можно делать проще.
[41:58.460 --> 42:00.460]  То есть вставку можно делать проще.
[42:00.460 --> 42:04.460]  Я утверждаю, что можно делать не за сплит и два мержа, а за сплит и всё.
[42:07.460 --> 42:09.460]  Ну такой естественный вариант.
[42:09.460 --> 42:12.460]  А давайте по сплите вставляем элемент ki.
[42:12.460 --> 42:16.460]  Так, ну давайте по сплите дерева на меньше ki и больше ki.
[42:16.460 --> 42:20.460]  А после этого тупо повесим эти деревья к ключику.
[42:20.460 --> 42:24.460]  Ну то есть скажем, что он теперь новый корень.
[42:25.380 --> 42:29.380]  Ну-ка вот как вы думаете, а такая вставка за сколько работать будет?
[42:33.380 --> 42:35.380]  Потенциал у нас.
[42:35.380 --> 42:41.380]  А там кажется вот с этим делением проблем мы его никак не получим.
[42:43.380 --> 42:45.380]  Нет, так.
[42:50.380 --> 42:52.380]  Нет, почему?
[42:53.300 --> 42:55.300]  Нет, ну почему же не получим?
[42:55.300 --> 42:59.300]  Мы, например, будем тупо искать там.
[43:01.300 --> 43:03.300]  А, или действительно не получим.
[43:07.300 --> 43:11.300]  Откуда-то там у нас достался минус.
[43:15.300 --> 43:22.300]  Ну просто когда мы повесим два дерева, у нас очень странно меняется потенциал вот этой вершинки.
[43:23.220 --> 43:28.220]  Так, нет, а какая разница?
[43:30.220 --> 43:34.220]  Нет, давайте вот сейчас решим, похоже, значит тоже нам она пригодится.
[43:34.220 --> 43:36.220]  Вот как найти в этом дереве лавербаунд?
[43:39.220 --> 43:41.220]  Ну так лавербаунд-то понятно.
[43:41.220 --> 43:44.220]  Мы же там просто спускаемся в любом случае до какого-то...
[43:44.220 --> 43:46.220]  Ну не факт.
[43:46.220 --> 43:49.220]  То есть да, в какой-то момент мы до этого лавербаунда дойдём.
[43:49.220 --> 43:50.220]  Допустим, да.
[43:50.220 --> 43:52.220]  Вот допустим это лавербаунд.
[43:53.140 --> 44:01.140]  Для того, чтобы убедиться, что это лавербаунд, нам придётся пойти в левое под дерево, а потом идти, значит, там долго вправо-вправо-вправо до крестика.
[44:01.140 --> 44:04.140]  Для того, чтобы убедиться, что это реально лавербаунд.
[44:06.140 --> 44:10.140]  Окей, мы засплеимся просто от последней вершины, где мы были.
[44:11.140 --> 44:12.140]  Ну да.
[44:12.140 --> 44:13.140]  Но правда для того...
[44:13.140 --> 44:15.140]  Так что да, лавербаунд.
[44:15.140 --> 44:18.140]  Да, правда единственная проблема, что лавербаунд, конечно, не будет корнем.
[44:18.140 --> 44:25.060]  Да, если очень хочется, конечно, лавербаунд можно запомнить и после сплея от этой вершины сделать сплей, собственно, от лавербаунда.
[44:25.060 --> 44:26.060]  Если очень прям хочется.
[44:26.060 --> 44:28.060]  В общем-то никаких проблем не будет.
[44:31.060 --> 44:34.060]  А нам прям, в принципе, именно хочется, чтобы он стал корнем?
[44:34.060 --> 44:38.060]  Или всё-таки хочется поддержать и симптонику, скажем так?
[44:39.060 --> 44:40.060]  Ну...
[44:40.060 --> 44:42.060]  Нет, ну нам пока хочется поддержать и симптонику.
[44:42.060 --> 44:43.060]  Ну тут как всегда...
[44:43.060 --> 44:45.060]  Ну тут это и цикла да, смотря для чего.
[44:45.980 --> 44:46.980]  Да, если у нас есть...
[44:46.980 --> 44:47.980]  Просто была задача найти лавербаун туда.
[44:47.980 --> 44:48.980]  Мы его нашли.
[44:48.980 --> 44:49.980]  Ну там корнем оказался кто-то ещё.
[44:49.980 --> 44:50.980]  Ну и не важно.
[44:50.980 --> 44:51.980]  Чешем мы.
[44:51.980 --> 44:52.980]  Ну вот.
[44:52.980 --> 44:56.980]  Но есть просто оговор, что в сплее деревья не обязательно то, что вы ищете, обязательно
[44:56.980 --> 44:57.980]  станет корнем.
[44:57.980 --> 44:58.980]  Так.
[44:58.980 --> 44:59.980]  Ну вот.
[44:59.980 --> 45:08.980]  Ну а теперь был вопрос, как посплитить по конкретному элементу.
[45:08.980 --> 45:09.980]  Вот как посплитить.
[45:10.900 --> 45:11.900]  Сейчас, ну...
[45:11.900 --> 45:15.900]  А чем проблема сделать по нему сплей и потом...
[45:15.900 --> 45:17.900]  Ну сплей и слева то, что нужно.
[45:17.900 --> 45:18.900]  Ну вот.
[45:18.900 --> 45:19.900]  Но проблема будет только от Даши.
[45:19.900 --> 45:23.740]  А симптоника будет, к сожалению, там, если вы делаете там сплит по какому-то
[45:23.740 --> 45:30.380]  там элементу В, то получится 1 плюс, значит, логарифон двоичный,
[45:30.380 --> 45:36.700]  там, соответственно, W делить на W какое-то, и только потом
[45:37.420 --> 45:45.580]  И только потом ещё придётся добавить двоичный логарифом W и делить его на, соответственно,
[45:45.580 --> 45:46.580]  ваш этот лавербаунд.
[45:46.580 --> 45:49.580]  Вот так вот.
[45:58.580 --> 46:06.580]  Где мы тут учитываем этот спуск до максимума въёма по деревью лавербаунд?
[46:07.580 --> 46:10.580]  Вот здесь.
[46:24.580 --> 46:28.580]  Когда мы искали лавербаунд, мы дошли до этой вершины.
[46:28.580 --> 46:31.580]  Вот недореального лавербаунда до этой вершины.
[46:31.580 --> 46:33.580]  Мы вынуждены были от неё сделать сплей.
[46:33.580 --> 46:36.580]  Он сработал вот с такой симпточкой.
[46:37.460 --> 46:39.460]  Вот.
[46:39.460 --> 46:45.460]  А если мы хотим реально сделать сплит прям по этому лавербаунду, допустим, да,
[46:45.460 --> 46:50.460]  то нам придётся тогда от него ещё вызвать сплей, чтобы отправить его в корень.
[46:50.460 --> 46:56.460]  А вот симптоника сплея, мы её просто, мы решили, что она такое говорит.
[46:56.460 --> 46:57.460]  Чего она?
[46:57.460 --> 47:00.460]  Мы решили, что она такое говорит, мы ничего не слышали.
[47:00.460 --> 47:03.460]  Нет, мы пока просто сказали, что у нас есть магическая функция
[47:04.340 --> 47:07.340]  сплей, у которой вот учётное время работы вот такое.
[47:07.340 --> 47:12.340]  А мы считаем, что спуск до вершины работает за её сплей, да?
[47:12.340 --> 47:19.340]  Сейчас мы считаем, что, ну мы считаем, да, что если у нас как бы
[47:19.340 --> 47:23.340]  операция работала за тета спуска от корня до какой-то вершины,
[47:23.340 --> 47:27.340]  то как бы да, то сплей будет, у сплея реальное время работает,
[47:27.340 --> 47:29.340]  да, глубина этой вершины, да.
[47:30.220 --> 47:33.220]  Потому что сплей как бы спустится и подняет.
[47:33.220 --> 47:35.220]  Да, потому что сплей будет, как раз, заниматься тем,
[47:35.220 --> 47:38.220]  что возьмёт эту вершину и будет от её глубины поднимать её в корень
[47:38.220 --> 47:41.220]  путём каких-то поворотов.
[47:41.220 --> 47:45.220]  Ну там, конечно, хитроумные повороты такие, чтобы потенциал сходился.
[47:45.220 --> 47:47.220]  Вот.
[47:47.220 --> 47:50.220]  Но здесь заметим, да, что если прям вот действительно копать в анализ,
[47:50.220 --> 47:53.220]  то получается, конечно, вот там операции такие вот,
[47:53.220 --> 47:55.220]  надо какие-то точные писать.
[47:55.220 --> 47:58.220]  То есть обычно, если вы просто работаете с сплей деревом,
[47:59.100 --> 48:01.100]  то самое тупое, что можно оценивать,
[48:01.100 --> 48:04.100]  это, конечно, то, что, как говорится,
[48:04.100 --> 48:07.100]  учётное время это просто логарифм веса, соответственно.
[48:09.100 --> 48:11.100]  Вот, понимаете, да?
[48:11.100 --> 48:13.100]  Ну там, может, логарифм веса,
[48:13.100 --> 48:15.100]  но там, возможно, есть ещё какие-то там,
[48:15.100 --> 48:17.100]  потому что, видите, это там точно оговорки,
[48:17.100 --> 48:20.100]  что когда вы делаете сплит, вы его делаете за сколько-то нельзя.
[48:20.100 --> 48:23.100]  Но, правда, в тупом виде это по-любому работало,
[48:23.100 --> 48:25.100]  по принципу, что давайте все веса сделаем единичными,
[48:25.100 --> 48:27.100]  тогда у вас всё-то будет с залогом работать.
[48:28.300 --> 48:30.300]  Вот, понимаете, да?
[48:30.300 --> 48:32.300]  Вот.
[48:32.300 --> 48:34.300]  Соответственно.
[48:34.300 --> 48:36.300]  Вот, то есть, конечно, тут вот
[48:36.300 --> 48:38.300]  приходится тут вот подописывать,
[48:38.300 --> 48:40.300]  да, видите, то есть по факту, да,
[48:40.300 --> 48:42.300]  придётся тут искать условно,
[48:42.300 --> 48:44.300]  log2 w на lever bound.
[48:48.300 --> 48:50.300]  Bound.
[48:50.300 --> 48:52.300]  Вот.
[48:52.300 --> 48:54.300]  Хотя, ну вот,
[48:54.300 --> 48:56.300]  хотя самое, ну вот,
[48:56.380 --> 48:58.380]  хотя можно делать на lever bound,
[48:58.380 --> 49:00.380]  хотя самое смешное, что на самом деле
[49:00.380 --> 49:02.380]  если правильно уточнить, то можно эти два логарифма не писать.
[49:06.380 --> 49:08.380]  На самом деле вот эту часть можно
[49:08.380 --> 49:10.380]  вообще-то убить.
[49:10.380 --> 49:12.380]  Знаете почему?
[49:12.380 --> 49:14.380]  Потому что кто вот этот элемент?
[49:16.380 --> 49:18.380]  Чего?
[49:20.380 --> 49:22.380]  Нет, он не просто потомок.
[49:22.380 --> 49:24.380]  Если вот lever bound это кто?
[49:24.460 --> 49:26.460]  Это минимальный элемент,
[49:26.460 --> 49:28.460]  который больше либо равен нас, правда?
[49:28.460 --> 49:30.460]  Следовательно, вот этот элемент
[49:30.460 --> 49:32.460]  это максимальный элемент, который меньше нас.
[49:32.460 --> 49:34.460]  Понимаете, да?
[49:34.460 --> 49:36.460]  То есть получается, когда вы
[49:36.460 --> 49:38.460]  торжественно отправили его,
[49:38.460 --> 49:40.460]  допустим, в корень,
[49:40.460 --> 49:42.460]  то получается, что вы сделали split,
[49:42.460 --> 49:44.460]  только там слева все меньше,
[49:44.460 --> 49:46.460]  а справа все там больше либо равны.
[49:48.460 --> 49:50.460]  Но правда, тут начнётся там маленькая
[49:50.460 --> 49:52.460]  оговорка на тему того,
[49:52.540 --> 49:54.540]  а что делать, если мы нашли lever bound
[49:54.540 --> 49:56.540]  и слева пусто?
[49:58.540 --> 50:00.540]  Но с другой стороны, тогда это уже будет
[50:00.540 --> 50:02.540]  вопрос отпиливать от этого дерева
[50:02.540 --> 50:04.540]  левое ребёнка или правое.
[50:04.540 --> 50:06.540]  Понимаете, да?
[50:06.540 --> 50:08.540]  Ну, с точки зрения симптотики,
[50:08.540 --> 50:10.540]  логен, конечно, абсолютно всё равно,
[50:10.540 --> 50:12.540]  то есть это всё, на самом деле,
[50:12.540 --> 50:14.540]  называется глубоко копание,
[50:14.540 --> 50:16.540]  непонятно в чём, на самом деле, но
[50:16.540 --> 50:18.540]  ну вот,
[50:18.540 --> 50:20.540]  вот такой момент, такие моменты
[50:20.620 --> 50:22.620]  возникают.
[50:22.620 --> 50:24.620]  Вот, ну а что делать?
[50:24.620 --> 50:26.620]  С этим insert, который...
[50:26.620 --> 50:28.620]  Да, да,
[50:28.620 --> 50:30.620]  с чего мы начали, да, мы вернули, да,
[50:30.620 --> 50:32.620]  мы начали с того, что мы предлагали делать
[50:32.620 --> 50:34.620]  insert, который работает за split и всё.
[50:36.620 --> 50:38.620]  Вот, но я утверждаю,
[50:38.620 --> 50:40.620]  что да, ну тогда получается,
[50:40.620 --> 50:42.620]  если мы научились делать split за 1
[50:42.620 --> 50:44.620]  плюс там logarithm w поделить на wt,
[50:44.620 --> 50:46.620]  какой-то вершины, да?
[50:46.620 --> 50:48.620]  Там какой-то
[50:48.700 --> 50:50.700]  1.
[50:50.700 --> 50:52.700]  То теперь давайте думать.
[50:52.700 --> 50:54.700]  Жило было у нас два дерева
[50:54.700 --> 50:56.700]  с весами w1 и w2, да?
[50:58.700 --> 51:00.700]  Вправивается.
[51:00.700 --> 51:02.700]  Как поменяется
[51:02.700 --> 51:04.700]  мир, если мы заведём
[51:04.700 --> 51:06.700]  новую вершину с весом
[51:06.700 --> 51:08.700]  wv,
[51:08.700 --> 51:10.700]  объявим её корнем и повесим к ней
[51:10.700 --> 51:12.700]  вот это вот, повесим вот это счастье.
[51:14.700 --> 51:16.700]  У нас прибавится
[51:16.780 --> 51:18.780]  вот этот logarithm.
[51:20.780 --> 51:22.780]  Ну да, по большому счёту да.
[51:22.780 --> 51:24.780]  То есть теперь получается 1 плюс там
[51:24.780 --> 51:26.780]  logarithm двоичный, получается
[51:26.780 --> 51:28.780]  там бывшее w, да?
[51:30.780 --> 51:32.780]  Плюс теперь, ну получается
[51:32.780 --> 51:34.780]  ну там ещё плюс один
[51:34.780 --> 51:36.780]  на самом деле, да, плюс один,
[51:36.780 --> 51:38.780]  но теперь у нас появляется ещё logarithm двоичный
[51:38.780 --> 51:40.780]  ну вот этого всего.
[51:40.780 --> 51:42.780]  Да?
[51:42.780 --> 51:44.780]  Ну вот
[51:46.780 --> 51:48.780]  Так, ну чего это получается?
[51:48.780 --> 51:50.780]  logarithm двоичный
[51:50.780 --> 51:52.780]  w бывшее
[51:52.780 --> 51:54.780]  плюс wv.
[51:56.780 --> 51:58.780]  Да, заметим, что на этот раз
[51:58.780 --> 52:00.780]  мы его ни на кого не делим.
[52:00.780 --> 52:02.780]  Видите, мы просто добавляем.
[52:02.780 --> 52:04.780]  Что?
[52:04.780 --> 52:06.780]  Это вот, ну это когда мы
[52:06.780 --> 52:08.780]  делали сплит исходного дерева
[52:08.780 --> 52:10.780]  суммарного веса w.
[52:12.780 --> 52:14.780]  Вот, здесь придётся говориться,
[52:14.860 --> 52:16.860]  что, скажем так, такую
[52:16.860 --> 52:18.860]  вставку нам всё равно
[52:18.860 --> 52:20.860]  придётся делать вот за
[52:20.860 --> 52:22.860]  получается вот какую-то
[52:22.860 --> 52:24.860]  такую асимтутику.
[52:26.860 --> 52:28.860]  Ну вот, ну как-то
[52:28.860 --> 52:30.860]  видимо,
[52:30.860 --> 52:32.860]  ну видимо не очень хорошо, правда?
[52:32.860 --> 52:34.860]  Нет, потенциал
[52:34.860 --> 52:36.860]  нет, почему? Потенциал увеличился.
[52:38.860 --> 52:40.860]  Вот на эту величину,
[52:40.860 --> 52:42.860]  на этот logarithm увеличился, поэтому
[52:42.940 --> 52:44.940]  в учётное время нам придётся его
[52:44.940 --> 52:46.940]  в учётном времени
[52:46.940 --> 52:48.940]  нам придётся его учитывать.
[52:48.940 --> 52:50.940]  Вот.
[52:50.940 --> 52:52.940]  Но получается немножко грустно, потому что
[52:52.940 --> 52:54.940]  от того, как получается
[52:54.940 --> 52:56.940]  редкие слухи, когда
[52:56.940 --> 52:58.940]  от того, что мы переведём сантиметры в килограммы,
[52:58.940 --> 53:00.940]  у нас оказывается с весами будут
[53:00.940 --> 53:02.940]  какие-то проблемы.
[53:02.940 --> 53:04.940]  Вот это как-то вообще странно.
[53:04.940 --> 53:06.940]  У нас получилось не то, что мы хотели
[53:06.940 --> 53:08.940]  вообще никак?
[53:08.940 --> 53:10.940]  Ну, нет, но тут
[53:11.020 --> 53:13.020]  это вопрос, а что мы хотели, в точке зрения вставки?
[53:13.020 --> 53:15.020]  Если уж в таких террорных мыслей,
[53:15.020 --> 53:17.020]  так что мы хотели вообще?
[53:17.020 --> 53:19.020]  У нас
[53:19.020 --> 53:21.020]  asset-корня стала как-то
[53:25.020 --> 53:27.020]  Почему у нас блок 2A,
[53:27.020 --> 53:29.020]  2A плюс W?
[53:29.020 --> 53:31.020]  Ну, потому что у нас
[53:31.020 --> 53:33.020]  добавилась новая вершина, у которой
[53:33.020 --> 53:35.020]  там SV равно
[53:35.020 --> 53:37.020]  WV плюс W1
[53:37.020 --> 53:39.020]  плюс W2, то есть W большое.
[53:41.020 --> 53:43.020]  Вот.
[53:45.020 --> 53:47.020]  У нас же
[53:47.020 --> 53:49.020]  уменьшились
[53:49.020 --> 53:51.020]  другие SV.
[53:51.020 --> 53:53.020]  Нет, так как они там
[53:53.020 --> 53:55.020]  поменялись, мы уже учли в здесь.
[53:55.020 --> 53:57.020]  Вот.
[53:57.020 --> 53:59.020]  Но это вот если делать insert таким
[53:59.020 --> 54:01.020]  образом.
[54:01.020 --> 54:03.020]  Потому что если мы делали
[54:03.020 --> 54:05.020]  это через, допустим, сплиты
[54:05.020 --> 54:07.020]  и, соответственно, 2 мержа,
[54:07.020 --> 54:09.020]  то чтобы у нас получилось.
[54:09.100 --> 54:11.100]  То есть
[54:11.100 --> 54:13.100]  там было бы,
[54:13.100 --> 54:15.100]  ну давайте, нет, ну давайте
[54:15.100 --> 54:17.100]  попробуем, что.
[54:17.100 --> 54:19.100]  Так, ну сначала мы делаем split,
[54:19.100 --> 54:21.100]  это делается там за вот
[54:21.100 --> 54:23.100]  логарифом двоичный, опять W,
[54:23.100 --> 54:25.100]  там поделить на WE,
[54:25.100 --> 54:27.100]  да?
[54:27.100 --> 54:29.100]  Ну вот. Но пришлось бы еще,
[54:29.100 --> 54:31.100]  теперь делаем мерж, еще один плюс
[54:31.100 --> 54:33.100]  там логарифом двоичный,
[54:33.100 --> 54:35.100]  чего?
[54:35.100 --> 54:37.100]  Так, ну и здесь получается,
[54:37.180 --> 54:39.180]  во-первых, W1
[54:39.180 --> 54:41.180]  плюс WV,
[54:41.180 --> 54:43.180]  да, поделить на
[54:43.180 --> 54:45.180]  там какой-то W, еще
[54:45.180 --> 54:47.180]  какой-то, еще какой-то
[54:47.180 --> 54:49.180]  житой, да?
[54:51.180 --> 54:53.180]  Ну и плюс, соответственно, еще
[54:53.180 --> 54:55.180]  значит 1 плюс логарифом
[54:55.180 --> 54:57.180]  двоичный, там
[54:57.180 --> 54:59.180]  W1 плюс WV
[54:59.180 --> 55:01.180]  плюс W2
[55:01.180 --> 55:03.180]  поделить на
[55:03.180 --> 55:05.180]  какое-то еще Wкаты.
[55:05.260 --> 55:07.260]  Ну, по большому счету, в общем-то,
[55:07.260 --> 55:09.260]  не то, чтобы прям стало
[55:09.260 --> 55:11.260]  сильно лучше,
[55:13.260 --> 55:15.260]  вот, но, по крайней мере, сохранилась
[55:15.260 --> 55:17.260]  эта приятная вещь, что, как бы, если мы
[55:17.260 --> 55:19.260]  все потенциалы увеличили, там,
[55:19.260 --> 55:21.260]  давно жили на 5, то, как бы,
[55:21.260 --> 55:23.260]  время работы от этого не поменялось.
[55:25.260 --> 55:27.260]  Что, безусловно, приятно.
[55:29.260 --> 55:31.260]  Вот.
[55:31.260 --> 55:33.260]  Так что вот такая, допустим,
[55:33.340 --> 55:35.340]  у нас будет красота.
[55:35.340 --> 55:37.340]  Вот.
[55:37.340 --> 55:39.340]  Ну, опять же, как я уже сказал, то есть, если бы,
[55:39.340 --> 55:41.340]  опять же, да, было бы все очень
[55:41.340 --> 55:43.340]  тупо, если бы все W там
[55:43.340 --> 55:45.340]  брали единичками, тогда просто
[55:45.340 --> 55:47.340]  ведь везде логен и не паримся.
[55:47.340 --> 55:49.340]  Вот. И можно
[55:49.340 --> 55:51.340]  делать вообще как угодно.
[55:51.340 --> 55:53.340]  Вот.
[55:55.340 --> 55:57.340]  Но здесь вот, тут, как всегда,
[55:57.340 --> 55:59.340]  надо помнить, что имеется в
[55:59.340 --> 56:01.340]  виду. Так вот.
[56:01.420 --> 56:03.420]  Да.
[56:09.420 --> 56:11.420]  Ну, мы тут просто, но
[56:11.420 --> 56:13.420]  мы тут просто сказали, что мы подняли
[56:13.420 --> 56:15.420]  эту вершину, да, и просто
[56:15.420 --> 56:17.420]  отпилили у нее правое дерево. Тогда,
[56:17.420 --> 56:19.420]  по сути, в этом правом дереве был
[56:19.420 --> 56:21.420]  лавербаунд и все больше.
[56:23.420 --> 56:25.420]  Но там, конечно, может быть, немножко подменилось
[56:25.420 --> 56:27.420]  определение.
[56:27.420 --> 56:29.420]  Но, с другой стороны, если бы хотели, скажем,
[56:29.500 --> 56:31.500]  меньше отправить влево, а больше либо
[56:31.500 --> 56:33.500]  равное отправить вправо, да,
[56:33.500 --> 56:35.500]  то как бы, что мы делали? Мы могли этот
[56:35.500 --> 56:37.860]  лавербаунд, скажем, поднять в корень и отпилить левое дерево.
[56:37.860 --> 56:38.700]  Правильно?
[56:39.360 --> 56:41.300]  Ну вот. Но мы вместо этого, это просто, mixture,
[56:41.620 --> 56:44.440]  то есть если у этого лавербаунда
[56:45.040 --> 56:47.220]  не было левой ребенка, значит, подымаем его,
[56:47.680 --> 56:50.300]  а если был, значит, мы как мы ее искали, лавербаунд?
[56:50.300 --> 56:52.300]  Мы пошли влево под дерево,
[56:52.300 --> 56:54.300]  шли вправо-вправо и так
[56:54.400 --> 56:56.400]  элементов больше либо равных ключа не нашли.
[56:56.400 --> 56:57.500]  Нашли вот этот элемент.
[56:57.500 --> 57:00.140]  элемент, так давайте его поднимем и отпилим уже
[57:00.140 --> 57:01.140]  правое поддверье.
[57:01.140 --> 57:04.620]  То есть тут в общем-то все достаточно просто.
[57:04.620 --> 57:11.860]  Так, ну а теперь начинается, но пришло время самое
[57:11.860 --> 57:12.860]  интересное.
[57:12.860 --> 57:14.340]  То есть все это работает в предположении, то есть
[57:14.340 --> 57:17.180]  мы что, действительно сплей у нас каким-то мистическим
[57:17.180 --> 57:18.980]  образом укладывается вот в такую асимптотику.
[57:18.980 --> 57:22.980]  Но так ли это?
[57:22.980 --> 57:23.980]  Чего?
[57:23.980 --> 57:34.500]  Ну реально да, ну ладно, не за линию, а за глубину.
[57:34.500 --> 57:36.300]  Поэтому как всегда, если бы доказали, что глубина
[57:36.300 --> 57:38.220]  всегда логарифом, то было бы все в порядке.
[57:38.220 --> 57:42.580]  Да, но редкий случай, мы уже доказали, что глубина
[57:42.580 --> 57:44.380]  не всегда логарифом.
[57:44.380 --> 57:48.900]  Мы прям в явном виде привели пример, когда это не так.
[57:49.820 --> 57:54.140]  Но нам на этот раз придется поговорить, как же мы будем
[57:54.140 --> 57:55.140]  делать сплей.
[57:55.140 --> 57:58.020]  Вот собственно давайте посмотрим в сердце.
[58:19.020 --> 58:29.900]  Значит как же мы будем делать сплей?
[58:29.900 --> 58:32.540]  Ну значит делать будем очень просто, значит наша задача
[58:32.540 --> 58:37.300]  взять вершину В и поднять ее в кой.
[58:37.300 --> 58:38.580]  Ну значит как мы ее будем делать?
[58:38.580 --> 58:41.860]  Ну у нас будет четыре, в смысле три случая.
[58:41.860 --> 58:47.780]  Случай номер ноль.
[58:47.780 --> 58:53.300]  В оказалось в коре, как мы тогда ее будем поднять
[58:53.300 --> 58:54.300]  в корень?
[58:54.300 --> 58:59.740]  Нужно опустить на два и поднять на два.
[58:59.740 --> 59:04.740]  Мы сделаем еще круче, мы просто не будем дышать.
[59:05.700 --> 59:24.220]  Ну вот, дальше начинается следующее.
[59:24.220 --> 59:31.020]  Значит случай номер один.
[59:31.020 --> 59:36.940]  Если оказалось, что В это не корень, но сын корня.
[59:49.940 --> 59:53.700]  Если вершина В оказалась вот таким вот мажорчиком,
[59:53.700 --> 59:55.020]  то собственно еще тут можно сделать.
[01:00:01.020 --> 01:00:10.900]  То как бы что мы делаем, мы делаем то, что мы уже
[01:00:10.900 --> 01:00:14.660]  знаем из ВЛ, как малый какой-то поворот.
[01:00:14.660 --> 01:00:20.540]  Да, я бы сказал, что левый.
[01:00:20.540 --> 01:00:21.540]  Но бывает правый.
[01:00:21.540 --> 01:00:24.340]  Ну вот, соответственно да, здесь как бы есть случаи
[01:00:24.340 --> 01:00:28.860]  А и Б, в зависимости от того, типа В это левый ребенок
[01:00:28.860 --> 01:00:29.860]  корня или правый.
[01:00:30.700 --> 01:00:35.780]  Ну в общем, догадываетесь, что суть симметрична.
[01:00:35.780 --> 01:00:40.820]  То есть в этих двух случаях мы завершаем работу за
[01:00:40.820 --> 01:00:41.820]  О от единицы.
[01:00:41.820 --> 01:00:45.940]  Следующие случаи мы тоже будем разбирать за О от единицы,
[01:00:45.940 --> 01:00:52.220]  но в отличие от этих они будут говорить, типа сделаем
[01:00:52.220 --> 01:00:57.220]  то, что в них написано и продолжаем.
[01:01:00.220 --> 01:01:04.420]  Да, и мы будем исследовать, как он поменялся.
[01:01:04.420 --> 01:01:09.180]  Ну нет, сейчас я рассказываю, как работает сплей.
[01:01:09.180 --> 01:01:14.380]  После этого мы будем доказывать, что сплей работает действительно
[01:01:14.380 --> 01:01:15.380]  вот так.
[01:01:15.380 --> 01:01:20.620]  Ну левый что?
[01:01:20.620 --> 01:01:22.780]  Ну может быть и правый, если бы вывести его с другой
[01:01:22.780 --> 01:01:23.780]  стороны.
[01:01:23.780 --> 01:01:29.340]  Ну вот так, да.
[01:01:29.820 --> 01:01:34.820]  Если бы вывесил вот так, было бы вот так, да, ну логично.
[01:01:34.820 --> 01:01:40.500]  И вот теперь, что делать если В, если оказалось, что
[01:01:40.500 --> 01:01:45.940]  ни В не корень, ни родитель не корень.
[01:01:45.940 --> 01:01:49.540]  Ну и здесь мы делаем следующее, смотрите.
[01:01:49.540 --> 01:01:57.940]  Допустим вот у нас жила была В, у нее был папа А и дедушка
[01:01:57.940 --> 01:02:06.460]  Б, и этот дедушка В, возможно, на ком-то висел, хотя может
[01:02:06.460 --> 01:02:08.500]  он и корень, но нас сейчас это уже не волнует.
[01:02:08.500 --> 01:02:16.460]  И дальше случаи, оказывается, 2 и 3, оказываются такие.
[01:02:16.460 --> 01:02:22.580]  Пусть оказалось, что папа висит с той же стороны от
[01:02:22.580 --> 01:02:24.180]  дедушки, что и В от папы.
[01:02:24.180 --> 01:02:31.500]  Ну то есть, например, вот В оказался левым ребенком
[01:02:31.500 --> 01:02:34.780]  вершины А, а вершина А левым ребенком вершины В.
[01:02:34.780 --> 01:02:37.700]  Ну они могут, ну или оба правыми симметрично.
[01:02:37.700 --> 01:02:48.820]  Значит, смотрите, тут оговорка, да, потому что, ладно, потом
[01:02:48.820 --> 01:02:49.820]  оговорку скажу.
[01:02:50.460 --> 01:02:54.500]  Так вот, в этом случае мы пойдем дальше.
[01:02:54.500 --> 01:02:58.020]  Малые, обычно повороты очень любили делать, конечно,
[01:02:58.020 --> 01:02:59.180]  родителей детьми.
[01:02:59.180 --> 01:03:03.020]  Мы пойдем дальше.
[01:03:03.020 --> 01:03:04.380]  Мы сделаем дедушку внуком.
[01:03:04.380 --> 01:03:05.380]  Соответственно.
[01:03:05.940 --> 01:03:06.940]  Чего?
[01:03:06.940 --> 01:03:07.940]  Чего?
[01:03:07.940 --> 01:03:16.940]  По какому росту, где росту, что?
[01:03:16.940 --> 01:03:19.940]  Ну типа.
[01:03:19.940 --> 01:03:20.940]  Вот.
[01:03:20.940 --> 01:03:21.940]  Вот такая красота.
[01:03:22.500 --> 01:03:27.940]  Ну да, в принципе, да, заметим, что, то есть, для этого,
[01:03:27.940 --> 01:03:30.940]  то есть, помните, да, будет технический момент.
[01:03:30.940 --> 01:03:33.460]  Если вы попытаетесь сделать это с помощью двух малых
[01:03:33.460 --> 01:03:36.460]  поворотов для вершины В, то вас ждет фейл.
[01:03:38.460 --> 01:03:43.460]  Потому что, если вы будете делать это с помощью двух
[01:03:43.460 --> 01:03:46.460]  малых поворотов для вершины В, то вас ждет фейл.
[01:03:46.980 --> 01:03:51.980]  Потому что, если вы сделаете два левых поворота, то,
[01:03:51.980 --> 01:03:54.980]  конечно, у вас дедушка станет вашим сыном, но не внуком.
[01:03:55.980 --> 01:03:57.980]  То есть, тут будет В, а тут будет А.
[01:03:57.980 --> 01:03:59.980]  То есть, вам вот, а нужно именно так.
[01:04:00.980 --> 01:04:01.980]  Почему?
[01:04:01.980 --> 01:04:04.980]  Ну как-то часто бывает, да, как-то часто бывает.
[01:04:04.980 --> 01:04:08.980]  Потому что доказательства так сходилось, а так нет.
[01:04:10.980 --> 01:04:12.980]  А иногда делают наоборот.
[01:04:13.500 --> 01:04:15.500]  А иногда делают наоборот.
[01:04:15.500 --> 01:04:18.500]  Делают, получается, второй случай, чтобы он изначально,
[01:04:18.500 --> 01:04:21.500]  ну, чтобы он, как вы сказали, как не сходится, да?
[01:04:21.500 --> 01:04:22.500]  Да.
[01:04:22.500 --> 01:04:24.500]  Что папа и дедушка, сыновья, да?
[01:04:24.500 --> 01:04:25.500]  Нет.
[01:04:25.500 --> 01:04:27.500]  А третий случай, наоборот, делают, чтобы он так и бомбулся.
[01:04:27.500 --> 01:04:28.500]  Нет.
[01:04:28.500 --> 01:04:29.500]  А, ну, смотря, что вы имеете в виду.
[01:04:29.500 --> 01:04:30.500]  Да.
[01:04:31.500 --> 01:04:33.500]  Так, ну, давайте тогда дорисую.
[01:04:33.500 --> 01:04:37.500]  Ну, давайте предположим, оказалось, что у нас обнаруживается
[01:04:37.500 --> 01:04:38.500]  так.
[01:04:38.500 --> 01:04:39.500]  Нет, ну почему нет?
[01:04:39.500 --> 01:04:41.500]  Обычно этот второй, нет, обычно это называется
[01:04:42.020 --> 01:04:44.020]  второй случай, а это называется третий случай.
[01:04:45.020 --> 01:04:47.020]  Ну, по крайней мере, в порядке исследования.
[01:04:47.020 --> 01:04:50.020]  Ладно, на самом деле, конечно, в науке они не называются
[01:04:50.020 --> 01:04:53.020]  случай 1, случай 2, случай 3.
[01:04:53.020 --> 01:05:02.020]  Они называются зиг, зиг-зиг и зигзаг.
[01:05:06.020 --> 01:05:10.020]  И рассматривается так, то есть, вы делаете шаги,
[01:05:10.540 --> 01:05:13.540]  вы делаете несколько шагов, пока вершина V не окажется
[01:05:13.540 --> 01:05:14.540]  в корне.
[01:05:14.540 --> 01:05:17.540]  И каждый шаг, он бывает один из трех вариантов.
[01:05:17.540 --> 01:05:22.540]  То есть, зиг, если вы оказались сыном корня, зиг-зиг, если
[01:05:22.540 --> 01:05:25.540]  у вас тут, оказывается, от дедушки к вам, значит,
[01:05:25.540 --> 01:05:28.540]  линия без поворотов и зигзаг, если с поворотом.
[01:05:32.540 --> 01:05:33.540]  Вот.
[01:05:40.540 --> 01:05:46.540]  Ну, и спрашивает, что делать в случае зиг-зага, а вот
[01:05:46.540 --> 01:05:49.540]  здесь, как раз, заморачиваться не надо, два малых поворота
[01:05:49.540 --> 01:05:54.540]  и называется, да, и папа и дедушка становятся вашими
[01:05:54.540 --> 01:05:55.540]  детьми.
[01:05:55.540 --> 01:05:59.540]  Вот, ну, это у нас уже было.
[01:05:59.540 --> 01:06:04.540]  Вот, я как раз помню то, что в некоторых интерпретациях
[01:06:05.060 --> 01:06:09.060]  наоборот делают, делают во втором случае два поворота
[01:06:09.060 --> 01:06:12.060]  вершины V, а в третьем случае изначально, типа, верхний
[01:06:12.060 --> 01:06:15.060]  крутит, а потом нежный.
[01:06:15.060 --> 01:06:18.060]  Ну, как у нас случилось в том случае.
[01:06:18.060 --> 01:06:21.060]  Сейчас, погодите, погодите, нет, пойдите, если вы сделаете
[01:06:21.060 --> 01:06:25.060]  здесь два поворота, то тут будет еще раз V, V, A, да?
[01:06:25.060 --> 01:06:26.060]  Да, да, да.
[01:06:26.060 --> 01:06:28.060]  И это, и это типа устраивает?
[01:06:28.060 --> 01:06:29.060]  Да.
[01:06:29.060 --> 01:06:34.060]  Мы не можем делать два поворота, вернее, в случае зиг-зага
[01:06:34.580 --> 01:06:37.580]  мы не можем сделать как здесь, потому что иначе V не станет
[01:06:37.580 --> 01:06:38.580]  кое-кому.
[01:06:38.580 --> 01:06:41.580]  Тогда V не станет кое-кому.
[01:06:41.580 --> 01:06:42.580]  Нет, ну, почему?
[01:06:42.580 --> 01:06:44.080]  Чисто теоретически мы могли бы сказать, что давайте
[01:06:44.080 --> 01:06:47.080]  повесим, что скажем, там, допустим.
[01:06:47.080 --> 01:06:50.080]  Мы не можем сделать сначала зиг-А, и затем зиг-В, потому
[01:06:50.080 --> 01:06:52.080]  что V не станет кое-кому.
[01:06:52.080 --> 01:06:53.080]  В таком случае.
[01:06:53.080 --> 01:06:54.080]  Нет, мы делаем изначально зиг-В.
[01:06:54.080 --> 01:06:57.080]  А, ну, нет, нет, у нас, нет, основные проблемы у нас
[01:06:57.080 --> 01:07:00.080]  будут то, что A и B по-любому по разные стороны от V,
[01:07:00.080 --> 01:07:01.080]  на этот раз находятся.
[01:07:01.080 --> 01:07:02.080]  Да.
[01:07:02.100 --> 01:07:06.100]  А мы сделаем изначально зиг-А, а потом зиг-В.
[01:07:06.100 --> 01:07:09.100]  И тогда у нас будет V, A, B идти.
[01:07:09.100 --> 01:07:13.100]  Вы знаете, если вы сделаете сейчас зиг-А, а потом зиг-В,
[01:07:13.100 --> 01:07:15.100]  по-любому дерево тебе поменяется слово вообще.
[01:07:15.100 --> 01:07:16.100]  Зиг-В, зиг-В.
[01:07:16.100 --> 01:07:17.100]  Ну, сделали.
[01:07:17.100 --> 01:07:18.100]  Так, будет A, V, B.
[01:07:18.100 --> 01:07:19.100]  Так.
[01:07:19.100 --> 01:07:20.100]  Да, да.
[01:07:20.100 --> 01:07:21.100]  Ну, и что?
[01:07:21.100 --> 01:07:23.100]  Ну, это тоже работает, утверждается.
[01:07:23.100 --> 01:07:28.100]  Если мы обе случаи свапнем, и второй будет делать
[01:07:28.100 --> 01:07:30.100]  в другой способ, и третий будет делать в другой
[01:07:30.100 --> 01:07:31.100]  способ.
[01:07:31.120 --> 01:07:32.120]  Это же будет работать.
[01:07:32.120 --> 01:07:33.120]  Да.
[01:07:33.120 --> 01:07:35.120]  Ну, потому что я и так согласен.
[01:07:37.120 --> 01:07:41.120]  Ну, или тебя просто не завалили, да.
[01:07:41.120 --> 01:07:42.120]  Знаете, как называется?
[01:07:42.120 --> 01:07:44.120]  Это решение оказалось полной неожиданностью для нас,
[01:07:44.120 --> 01:07:46.120]  мы не заготовили против него тестов.
[01:07:48.120 --> 01:07:49.120]  Вот, знаете, как это.
[01:07:49.120 --> 01:07:50.120]  Так что не факт.
[01:07:50.120 --> 01:07:51.120]  Не факт.
[01:07:51.120 --> 01:07:53.120]  Впрочем, всякое бывает.
[01:07:54.120 --> 01:07:55.120]  Ну, вот.
[01:07:55.120 --> 01:07:58.120]  Хотя, не знаю, может, нет, может...
[01:08:01.120 --> 01:08:04.120]  Нет.
[01:08:04.120 --> 01:08:05.120]  Ну, ладно.
[01:08:05.120 --> 01:08:06.120]  Ну, как всегда.
[01:08:06.120 --> 01:08:08.120]  Давайте будет картинка, называется такая.
[01:08:08.120 --> 01:08:11.120]  Я буду рассказывать вот такое, потому что вот это
[01:08:11.120 --> 01:08:12.120]  сейчас железобетонно работает.
[01:08:12.120 --> 01:08:14.120]  А все остальное, ну, как бы ладно.
[01:08:14.120 --> 01:08:16.120]  Если вы мне на экзамене докажете, что это тоже работает,
[01:08:16.120 --> 01:08:17.120]  то, пожалуйста.
[01:08:19.120 --> 01:08:22.120]  Всем желательно еще и вот в этом виде красиво.
[01:08:23.120 --> 01:08:26.120]  А то, знаете, вот из-за этого, потому что...
[01:08:27.120 --> 01:08:29.120]  Потому что так, я сильно не удивился.
[01:08:29.140 --> 01:08:30.140]  Смотрите, тут есть...
[01:08:31.140 --> 01:08:33.140]  Еще можно так доказывать.
[01:08:34.140 --> 01:08:36.140]  Мы доказываем, скажем, с вами вот в таком виде.
[01:08:37.140 --> 01:08:41.140]  Вот если вы откроете, допустим, книжку Боберка Левина,
[01:08:41.140 --> 01:08:42.140]  уже упоминавшаяся ранее,
[01:08:43.140 --> 01:08:45.140]  там вот с этими весами не заморачивались.
[01:08:46.140 --> 01:08:49.140]  Там потенциал был просто сумма
[01:08:51.140 --> 01:08:55.140]  округленных вниз двоичных логарифмов СЗАТВ.
[01:08:55.140 --> 01:08:57.140]  Вот там был вот такой потенциал.
[01:08:57.160 --> 01:08:59.160]  Да, чем приятен такой потенциал?
[01:08:59.160 --> 01:09:00.160]  Он целый.
[01:09:03.160 --> 01:09:04.160]  Я, между прочим, проиграл.
[01:09:04.160 --> 01:09:05.160]  Чего?
[01:09:05.160 --> 01:09:06.160]  Я проиграл.
[01:09:07.160 --> 01:09:08.160]  Я тоже проиграл.
[01:09:10.160 --> 01:09:12.160]  Так, это что, это опять интеллектуальная игра, что ли?
[01:09:13.160 --> 01:09:14.160]  Ну, в смысле, нет.
[01:09:14.160 --> 01:09:15.160]  Ну, типа...
[01:09:16.160 --> 01:09:17.160]  Ну, вот.
[01:09:18.160 --> 01:09:20.160]  Ну, вот, то есть там тогда вы как-то аккуратно
[01:09:20.160 --> 01:09:21.160]  докажете, что...
[01:09:21.160 --> 01:09:23.160]  Ну, там, в общем, то, что вы докажете.
[01:09:24.160 --> 01:09:26.160]  А вот с вот этим будет не факт.
[01:09:26.180 --> 01:09:28.180]  То есть, если вы пишете splay-дерево
[01:09:28.180 --> 01:09:30.180]  ради того, чтобы написать splay-дерево, то как бы...
[01:09:31.180 --> 01:09:32.180]  Соответственно.
[01:09:32.180 --> 01:09:33.180]  Хотя...
[01:09:33.180 --> 01:09:34.180]  Ну, как бы...
[01:09:34.180 --> 01:09:36.180]  Поэтому тут вот...
[01:09:38.180 --> 01:09:39.180]  Ну, там нет.
[01:09:39.180 --> 01:09:40.180]  Просто подлянка будет в том,
[01:09:40.180 --> 01:09:42.180]  что у вас там в дразатстве тогда в этих логарифмах
[01:09:42.180 --> 01:09:44.180]  что там, что там все равно единички будут вылезать,
[01:09:44.180 --> 01:09:46.180]  и вам придется с ними работать.
[01:09:48.180 --> 01:09:49.180]  Вот.
[01:09:50.180 --> 01:09:51.180]  Значит, поехали.
[01:09:51.180 --> 01:09:52.180]  Значит, теперь давайте думать.
[01:09:52.180 --> 01:09:55.180]  Значит, как же у нас будет это?
[01:09:56.180 --> 01:09:58.180]  Значит, соответственно, работать.
[01:09:59.180 --> 01:10:00.180]  Так.
[01:10:00.180 --> 01:10:01.180]  Ну, давайте...
[01:10:01.180 --> 01:10:03.180]  Значит, что мы попытаемся доказать?
[01:10:06.180 --> 01:10:07.180]  Так.
[01:10:07.180 --> 01:10:08.180]  Ну, давайте так.
[01:10:08.180 --> 01:10:10.180]  Учетное время вот этого шара.
[01:10:10.180 --> 01:10:11.180]  Ну, как угодно.
[01:10:11.180 --> 01:10:13.180]  От нуля, от единицы, все что угодно.
[01:10:13.180 --> 01:10:14.180]  Правда?
[01:10:16.180 --> 01:10:17.180]  Значит, давайте...
[01:10:17.180 --> 01:10:18.180]  Значит, поехали.
[01:10:19.180 --> 01:10:20.180]  Значит, что нам...
[01:10:21.180 --> 01:10:23.180]  Значит, хочется доказать.
[01:10:23.200 --> 01:10:28.200]  Значит, соответственно, хотим.
[01:10:30.200 --> 01:10:32.200]  Значит, на самом деле мы...
[01:10:32.200 --> 01:10:34.200]  Значит, все, что мы хотим показать,
[01:10:36.200 --> 01:10:38.200]  это то, что мы хотим показать,
[01:10:38.200 --> 01:10:40.200]  что учетная стоимость...
[01:10:46.200 --> 01:10:48.200]  Стоимость каждого...
[01:10:48.200 --> 01:10:49.200]  Ну, вот.
[01:10:50.200 --> 01:10:52.200]  Каждого из шагов...
[01:10:53.200 --> 01:10:54.200]  Значит...
[01:11:05.200 --> 01:11:07.200]  Не превосходит.
[01:11:15.200 --> 01:11:16.200]  Значит, смотрите чего.
[01:11:16.200 --> 01:11:17.200]  Внимание.
[01:11:17.200 --> 01:11:19.200]  Три на...
[01:11:21.200 --> 01:11:22.200]  Значит, логарифом...
[01:11:22.220 --> 01:11:23.220]  Логарифом...
[01:11:23.220 --> 01:11:24.220]  Я лучше вот так напишу.
[01:11:24.220 --> 01:11:25.220]  Надо было...
[01:11:25.220 --> 01:11:26.220]  Мог бы отношения писать.
[01:11:27.220 --> 01:11:32.220]  Логариф двоичное S, V, new.
[01:11:34.220 --> 01:11:38.220]  Минус логарифом двоичное S, V, old.
[01:11:45.220 --> 01:11:46.220]  Нет.
[01:11:47.220 --> 01:11:49.220]  Поэтому я напишу.
[01:11:49.220 --> 01:11:50.220]  Плюс.
[01:11:52.220 --> 01:11:59.220]  Ну, короче, на zig шаг я еще единичку накину.
[01:12:01.220 --> 01:12:04.220]  Кстати, вот та самая единица в учетном времени.
[01:12:05.220 --> 01:12:06.220]  Вот, понятно, да?
[01:12:09.220 --> 01:12:10.220]  То есть...
[01:12:11.220 --> 01:12:12.220]  А мы и меняем как-то?
[01:12:13.220 --> 01:12:16.220]  Да, вот поэтому я пишу new и old.
[01:12:16.220 --> 01:12:20.220]  Потому что заметим, что S, V до шага и после шага
[01:12:20.240 --> 01:12:22.240]  это две разных S, V.
[01:12:22.240 --> 01:12:23.240]  Правильно?
[01:12:23.240 --> 01:12:24.240]  Ну, в смысле...
[01:12:25.240 --> 01:12:27.240]  S, V это понятно меняется за счет того,
[01:12:27.240 --> 01:12:30.240]  что мы W представили.
[01:12:30.240 --> 01:12:32.240]  А мы меняем значение в сами?
[01:12:32.240 --> 01:12:33.240]  Нет, в смысле, нет.
[01:12:33.240 --> 01:12:34.240]  Веса мы не меняем.
[01:12:34.240 --> 01:12:35.240]  Веса фиксированы раз и навсегда.
[01:12:36.240 --> 01:12:37.240]  То есть как бы вы можете...
[01:12:37.240 --> 01:12:38.240]  Скажите так, вы можете считать,
[01:12:38.240 --> 01:12:41.240]  что у вас изначально есть N-вершин с весами.
[01:12:42.240 --> 01:12:43.240]  Вот.
[01:12:43.240 --> 01:12:45.240]  И, собственно, вы там с ними что-то делаете.
[01:12:46.240 --> 01:12:48.240]  То есть потом мержите их, сплитите,
[01:12:48.240 --> 01:12:49.240]  то есть там и так далее.
[01:12:50.240 --> 01:12:53.240]  Но веса как бы зафиксированы заранее.
[01:12:54.240 --> 01:12:56.240]  Так что вот такая получается красота.
[01:12:58.240 --> 01:13:00.240]  Значит, ну, во-первых, давайте сразу скажу,
[01:13:00.240 --> 01:13:02.240]  что если мы сейчас это докажем,
[01:13:03.240 --> 01:13:05.240]  то я утверждаю, что учетное время
[01:13:05.240 --> 01:13:08.240]  тогда сплея оттуда выплывет автоматически.
[01:13:08.240 --> 01:13:09.240]  Согласны?
[01:13:12.240 --> 01:13:14.240]  Ну, потому что там вот тут телескопические субы
[01:13:14.240 --> 01:13:17.240]  посхлопываются и в итоге у вас окажется
[01:13:17.260 --> 01:13:21.260]  что-то типа 3 логарифм 2-ичное s,
[01:13:24.260 --> 01:13:25.260]  так сказать, v...
[01:13:27.260 --> 01:13:28.260]  Да, можно сказать v-final
[01:13:31.260 --> 01:13:34.260]  минус логарифм 2-ичный s v-start.
[01:13:35.260 --> 01:13:36.260]  Ну, теперь...
[01:13:37.260 --> 01:13:38.260]  Ну, заметим, что...
[01:13:39.260 --> 01:13:41.260]  Действительно, ну, плюс один.
[01:13:41.260 --> 01:13:46.260]  Это равно 3, значит, логарифм 2-ичных w
[01:13:47.260 --> 01:13:50.260]  потому что в конце-то у нас s v, как раз,
[01:13:50.260 --> 01:13:52.260]  просто с w и совпадет, правда?
[01:13:55.260 --> 01:13:56.260]  Ну, вот.
[01:13:56.260 --> 01:13:57.260]  Но здесь можно сказать,
[01:13:57.260 --> 01:13:59.260]  что a-start можно оценить снизу,
[01:13:59.260 --> 01:14:01.260]  ну, потому что раз с минусом, то снизу.
[01:14:01.260 --> 01:14:02.260]  Ну, вот.
[01:14:02.260 --> 01:14:04.260]  То есть как логарифм 2-ичный,
[01:14:04.260 --> 01:14:05.260]  собственно, этого...
[01:14:06.260 --> 01:14:08.260]  там, веса вершины v.
[01:14:09.260 --> 01:14:10.260]  Ну, потому что в любом s v
[01:14:10.260 --> 01:14:12.260]  уж вот это вот хранится,
[01:14:12.260 --> 01:14:14.260]  а хранится ли что-нибудь еще непонятно.
[01:14:14.260 --> 01:14:15.260]  Хотя полезно помнить,
[01:14:15.280 --> 01:14:17.280]  что на самом деле там в этим точке
[01:14:17.280 --> 01:14:18.280]  можно было не w и t написать,
[01:14:18.280 --> 01:14:20.280]  а s и t написать вполне себе.
[01:14:22.280 --> 01:14:23.280]  Что?
[01:14:43.280 --> 01:14:44.280]  Ну, вот.
[01:14:44.300 --> 01:14:46.300]  Ну, потому что там у нас...
[01:14:46.300 --> 01:14:47.300]  там мы, собственно,
[01:14:47.300 --> 01:14:49.300]  без этой единицы не обойдемся.
[01:14:51.300 --> 01:14:52.300]  Вот.
[01:14:53.300 --> 01:14:54.300]  Вот.
[01:14:55.300 --> 01:14:56.300]  Вот.
[01:14:57.300 --> 01:14:58.300]  Так что вот осталась...
[01:14:58.300 --> 01:15:00.300]  то есть вот такая вот у нас
[01:15:00.300 --> 01:15:01.300]  мистическая цель.
[01:15:01.300 --> 01:15:02.300]  Если мы ее достигнем,
[01:15:02.300 --> 01:15:03.300]  то мы победили.
[01:15:03.300 --> 01:15:04.300]  Понятно?
[01:15:06.300 --> 01:15:07.300]  Вот. Хорошо.
[01:15:09.300 --> 01:15:11.300]  Значит, что же у нас теперь будет?
[01:15:12.300 --> 01:15:13.300]  Так.
[01:15:13.320 --> 01:15:14.320]  Давайте уберем эту цель.
[01:15:17.320 --> 01:15:18.320]  Ну, так.
[01:15:19.320 --> 01:15:20.320]  Точнее, так.
[01:15:20.320 --> 01:15:22.320]  Ну, вот эту вот оговорку уберем
[01:15:22.320 --> 01:15:24.320]  и немножко попишем.
[01:15:30.320 --> 01:15:31.320]  Итак, поехали.
[01:15:31.320 --> 01:15:33.320]  Значит, zik-chik.
[01:15:34.320 --> 01:15:35.320]  Zik-chik.
[01:15:36.320 --> 01:15:38.320]  Zik-zik-zik-zik.
[01:15:39.320 --> 01:15:40.320]  Так.
[01:15:40.320 --> 01:15:42.320]  Ну, давайте попробуем.
[01:15:43.320 --> 01:15:44.320]  Поехали.
[01:15:44.320 --> 01:15:45.320]  Учетная.
[01:15:46.320 --> 01:15:47.320]  Стоимость.
[01:15:50.320 --> 01:15:51.320]  Zik-shaga.
[01:15:57.320 --> 01:15:58.320]  Что это будет?
[01:16:01.320 --> 01:16:02.320]  Вот.
[01:16:02.320 --> 01:16:03.320]  Ну, очевидно,
[01:16:03.320 --> 01:16:04.320]  прям по определению,
[01:16:04.320 --> 01:16:06.320]  это в точности один,
[01:16:06.320 --> 01:16:07.320]  плюс потенциал в конце,
[01:16:07.320 --> 01:16:09.320]  минус потенциал в начале.
[01:16:09.320 --> 01:16:10.320]  Правда?
[01:16:10.320 --> 01:16:11.320]  Но давайте так.
[01:16:11.340 --> 01:16:12.340]  Альфа, бета, гамма
[01:16:12.340 --> 01:16:13.340]  мы перебирать не будем,
[01:16:13.340 --> 01:16:16.340]  потому что их вклад в потенциал
[01:16:16.340 --> 01:16:17.340]  не меняется от слова никак.
[01:16:17.340 --> 01:16:18.340]  Слышите?
[01:16:19.340 --> 01:16:20.340]  Вот.
[01:16:25.340 --> 01:16:26.340]  Ну, теперь давайте
[01:16:26.340 --> 01:16:28.340]  значит, тогда смотреть.
[01:16:29.340 --> 01:16:30.340]  Ну, давайте так.
[01:16:36.340 --> 01:16:37.340]  Нет.
[01:16:38.340 --> 01:16:39.340]  Вес?
[01:16:39.340 --> 01:16:40.340]  Ну...
[01:16:41.340 --> 01:16:42.340]  Да.
[01:16:43.340 --> 01:16:44.340]  Нет, смотрите,
[01:16:44.340 --> 01:16:45.340]  у каждой вершины есть вклад.
[01:16:46.340 --> 01:16:47.340]  Другой вопрос,
[01:16:47.340 --> 01:16:48.340]  что вклад вершины В
[01:16:48.340 --> 01:16:49.340]  будут принимать участие
[01:16:49.340 --> 01:16:50.340]  веса альфы и беты.
[01:16:50.340 --> 01:16:51.340]  Это да.
[01:16:51.340 --> 01:16:52.340]  Это мы будем учитывать,
[01:16:52.340 --> 01:16:53.340]  конечно.
[01:16:53.340 --> 01:16:54.340]  Ну вот.
[01:16:54.340 --> 01:16:55.340]  Но я имею в виду,
[01:16:55.340 --> 01:16:57.340]  что писать сумму
[01:16:57.340 --> 01:16:58.340]  прям всех,
[01:16:58.340 --> 01:16:59.340]  по всем вершинам
[01:16:59.340 --> 01:17:00.340]  я не буду.
[01:17:00.340 --> 01:17:01.340]  Я буду писать
[01:17:01.340 --> 01:17:02.340]  только сумму
[01:17:02.340 --> 01:17:03.340]  непосредственно
[01:17:03.340 --> 01:17:04.340]  вот этим вершинам.
[01:17:04.340 --> 01:17:05.340]  И давайте еще
[01:17:05.340 --> 01:17:06.340]  сделаем оговорку
[01:17:06.340 --> 01:17:07.340]  для того,
[01:17:07.340 --> 01:17:08.340]  чтобы сказать,
[01:17:08.340 --> 01:17:09.340]  что давайте лучше
[01:17:09.340 --> 01:17:10.340]  рут вынесем сюда,
[01:17:10.360 --> 01:17:11.360]  вершину У все-таки.
[01:17:15.360 --> 01:17:16.360]  И заметим,
[01:17:16.360 --> 01:17:17.360]  что учетная стоимость
[01:17:17.360 --> 01:17:18.360]  тогда в точности,
[01:17:18.360 --> 01:17:19.360]  внимание,
[01:17:19.360 --> 01:17:20.360]  в точности равна.
[01:17:21.360 --> 01:17:22.360]  Она равна
[01:17:22.360 --> 01:17:23.360]  значит,
[01:17:23.360 --> 01:17:24.360]  1 плюс
[01:17:26.360 --> 01:17:27.360]  значит,
[01:17:27.360 --> 01:17:28.360]  чего?
[01:17:28.360 --> 01:17:29.360]  С
[01:17:29.360 --> 01:17:30.360]  В
[01:17:30.360 --> 01:17:31.360]  после
[01:17:32.360 --> 01:17:33.360]  минус
[01:17:33.360 --> 01:17:34.360]  С
[01:17:34.360 --> 01:17:35.360]  У
[01:17:35.360 --> 01:17:36.360]  точнее,
[01:17:36.360 --> 01:17:37.360]  плюс С
[01:17:37.360 --> 01:17:38.360]  У
[01:17:38.360 --> 01:17:39.360]  после
[01:17:40.360 --> 01:17:41.360]  минус
[01:17:41.360 --> 01:17:42.360]  С
[01:17:42.360 --> 01:17:43.360]  В
[01:17:43.360 --> 01:17:44.360]  до
[01:17:44.360 --> 01:17:45.360]  минус
[01:17:45.360 --> 01:17:46.360]  С
[01:17:46.360 --> 01:17:47.360]  У
[01:17:47.360 --> 01:17:48.360]  до
[01:17:48.360 --> 01:17:49.360]  Логарифм?
[01:17:49.360 --> 01:17:50.360]  Логарифм?
[01:17:50.360 --> 01:17:51.360]  Какой логарифм?
[01:17:51.360 --> 01:17:52.360]  Одесский.
[01:17:52.360 --> 01:17:53.360]  Бээээ.
[01:17:53.360 --> 01:17:54.360]  Логарифм
[01:17:54.360 --> 01:17:55.360]  еще какой-то.
[01:17:55.360 --> 01:17:56.360]  Господи,
[01:17:56.360 --> 01:17:57.360]  кто его выдумал
[01:17:57.360 --> 01:17:58.360]  вообще?
[01:17:58.360 --> 01:17:59.360]  Ой,
[01:17:59.360 --> 01:18:00.360]  Господи,
[01:18:00.360 --> 01:18:01.360]  пиши тут теперь.
[01:18:01.360 --> 01:18:02.360]  Логарифм
[01:18:02.360 --> 01:18:03.360]  С
[01:18:03.360 --> 01:18:04.360]  У
[01:18:04.360 --> 01:18:05.360]  после
[01:18:05.360 --> 01:18:06.360]  плюс
[01:18:06.360 --> 01:18:07.360]  Логарифм
[01:18:07.360 --> 01:18:08.360]  С
[01:18:08.360 --> 01:18:09.360]  У
[01:18:09.360 --> 01:18:10.360]  после
[01:18:10.360 --> 01:18:11.360]  плюс
[01:18:11.360 --> 01:18:12.360]  Логарифм
[01:18:12.360 --> 01:18:13.360]  С
[01:18:13.360 --> 01:18:14.360]  У
[01:18:14.360 --> 01:18:15.360]  после
[01:18:15.360 --> 01:18:16.360]  минус
[01:18:16.360 --> 01:18:17.360]  Логарифм
[01:18:17.360 --> 01:18:18.360]  С
[01:18:18.360 --> 01:18:19.360]  У
[01:18:19.360 --> 01:18:20.360]  до
[01:18:20.360 --> 01:18:21.360]  минус
[01:18:21.360 --> 01:18:22.360]  Логарифм
[01:18:22.360 --> 01:18:23.360]  С
[01:18:23.360 --> 01:18:24.360]  У
[01:18:24.360 --> 01:18:25.360]  до
[01:18:25.360 --> 01:18:26.360]  Вот.
[01:18:26.360 --> 01:18:27.360]  Такая
[01:18:27.360 --> 01:18:28.360]  красота.
[01:18:28.360 --> 01:18:29.360]  Так.
[01:18:29.360 --> 01:18:30.360]  Ну,
[01:18:30.360 --> 01:18:31.360]  начнем
[01:18:31.360 --> 01:18:32.360]  с того,
[01:18:32.360 --> 01:18:33.360]  что
[01:18:33.360 --> 01:18:34.360]  имеет
[01:18:34.360 --> 01:18:35.360]  конечно же
[01:18:35.360 --> 01:18:36.360]  место
[01:18:36.360 --> 01:18:37.360]  его величества
[01:18:37.360 --> 01:18:38.360]  шлеп-шлеп.
[01:18:38.360 --> 01:18:39.360]  Где
[01:18:39.360 --> 01:18:40.360]  он имеет
[01:18:40.360 --> 01:18:41.360]  место?
[01:18:41.360 --> 01:18:42.360]  Вот я
[01:18:42.360 --> 01:18:43.360]  утверждаю,
[01:18:43.360 --> 01:18:44.360]  что
[01:18:44.360 --> 01:18:45.360]  сразу
[01:18:45.360 --> 01:18:46.360]  тут
[01:18:46.360 --> 01:18:47.360]  кое-что
[01:18:47.360 --> 01:18:48.360]  можно...
[01:18:48.360 --> 01:18:49.360]  Да,
[01:18:49.360 --> 01:18:50.360]  совершенно верно.
[01:18:50.360 --> 01:18:51.360]  Потому что
[01:18:51.360 --> 01:18:52.360]  заметим,
[01:18:52.360 --> 01:18:53.360]  что
[01:18:53.360 --> 01:18:54.360]  В
[01:18:54.360 --> 01:18:55.360]  после
[01:18:55.360 --> 01:18:56.360]  С
[01:18:56.360 --> 01:18:57.360]  У до
[01:18:57.360 --> 01:18:58.360]  принимают
[01:18:58.360 --> 01:18:59.360]  участие
[01:18:59.360 --> 01:19:00.360]  все
[01:19:00.360 --> 01:19:01.360]  вершины
[01:19:01.360 --> 01:19:02.360]  дерева.
[01:19:02.360 --> 01:19:03.360]  Видно,
[01:19:03.360 --> 01:19:04.360]  да?
[01:19:04.360 --> 01:19:05.360]  Поэтому
[01:19:05.360 --> 01:19:06.360]  остается
[01:19:06.360 --> 01:19:07.360]  только
[01:19:07.360 --> 01:19:08.360]  минус
[01:19:08.360 --> 01:19:09.360]  Логарифм
[01:19:09.360 --> 01:19:10.360]  С
[01:19:10.360 --> 01:19:11.360]  У
[01:19:11.360 --> 01:19:12.360]  до
[01:19:12.360 --> 01:19:13.360]  Так.
[01:19:13.360 --> 01:19:14.360]  Ну,
[01:19:14.360 --> 01:19:15.360]  тут
[01:19:15.360 --> 01:19:16.360]  видимо
[01:19:16.360 --> 01:19:17.360]  придется
[01:19:17.360 --> 01:19:18.360]  подписать
[01:19:18.360 --> 01:19:19.360]  нот
[01:19:19.360 --> 01:19:20.360]  соответственно
[01:19:20.360 --> 01:19:21.360]  чуть-чуть
[01:19:21.360 --> 01:19:22.360]  поаккуратнее.
[01:19:22.360 --> 01:19:23.360]  Так.
[01:19:23.360 --> 01:19:24.360]  А,
[01:19:24.360 --> 01:19:25.360]  хотя
[01:19:25.360 --> 01:19:26.360]  нет.
[01:19:26.360 --> 01:19:27.360]  Ничего
[01:19:27.360 --> 01:19:28.360]  аккуратного
[01:19:28.360 --> 01:19:29.360]  тут писать
[01:19:29.360 --> 01:19:30.360]  не надо.
[01:19:30.360 --> 01:19:31.360]  Потому что
[01:19:31.360 --> 01:19:32.360]  теперь
[01:19:32.360 --> 01:19:33.360]  заметим,
[01:19:33.360 --> 01:19:34.360]  что
[01:19:34.360 --> 01:19:35.360]  это
[01:19:35.360 --> 01:19:36.360]  меньше
[01:19:36.360 --> 01:19:37.360]  либо
[01:19:37.360 --> 01:19:38.360]  равно
[01:19:38.360 --> 01:19:39.360]  один
[01:19:39.360 --> 01:19:40.360]  плюс
[01:19:40.360 --> 01:19:41.360]  Логарифм
[01:19:41.360 --> 01:19:42.360]  двоичный
[01:19:42.360 --> 01:19:43.360]  значит
[01:19:43.360 --> 01:19:44.360]  С
[01:19:44.360 --> 01:19:45.360]  В
[01:19:45.360 --> 01:19:46.360]  после
[01:19:46.360 --> 01:19:47.360]  Да.
[01:19:47.360 --> 01:19:48.360]  Ой,
[01:19:48.360 --> 01:19:49.360]  да,
[01:19:49.360 --> 01:19:50.360]  здесь вообще
[01:19:50.360 --> 01:19:51.360]  думать
[01:19:51.360 --> 01:19:52.360]  не надо.
[01:19:52.360 --> 01:19:53.360]  Минус
[01:19:53.360 --> 01:19:54.360]  Логарифм
[01:19:54.360 --> 01:19:55.360]  двоичный
[01:19:55.360 --> 01:19:56.360]  С
[01:19:56.360 --> 01:19:57.360]  В
[01:19:57.360 --> 01:19:58.360]  до.
[01:19:58.360 --> 01:19:59.360]  Ну,
[01:19:59.360 --> 01:20:00.360]  потому что
[01:20:00.360 --> 01:20:01.360]  если я
[01:20:01.360 --> 01:20:02.360]  У
[01:20:02.360 --> 01:20:03.360]  заменяю
[01:20:03.360 --> 01:20:04.360]  на В,
[01:20:04.360 --> 01:20:05.360]  то
[01:20:05.360 --> 01:20:06.360]  ну,
[01:20:06.360 --> 01:20:07.360]  кстати,
[01:20:07.360 --> 01:20:08.360]  обратите
[01:20:08.360 --> 01:20:09.360]  внимание,
[01:20:09.360 --> 01:20:10.360]  еще
[01:20:10.360 --> 01:20:11.360]  один
[01:20:11.360 --> 01:20:12.360]  момент,
[01:20:12.360 --> 01:20:13.360]  где мы
[01:20:13.360 --> 01:20:14.360]  воспользовались
[01:20:14.360 --> 01:20:15.360]  тем,
[01:20:15.360 --> 01:20:16.360]  чтобы все W
[01:20:16.360 --> 01:20:17.360]  больше либо
[01:20:17.360 --> 01:20:18.360]  равно
[01:20:18.360 --> 01:20:19.360]  единицы,
[01:20:19.360 --> 01:20:20.360]  кстати.
[01:20:20.360 --> 01:20:21.360]  Вот.
[01:20:21.360 --> 01:20:22.360]  А,
[01:20:22.360 --> 01:20:23.360]  действительно,
[01:20:23.360 --> 01:20:24.360]  да,
[01:20:24.360 --> 01:20:25.360]  да,
[01:20:25.360 --> 01:20:26.360]  да,
[01:20:26.360 --> 01:20:27.360]  ладно.
[01:20:27.360 --> 01:20:28.360]  А,
[01:20:28.360 --> 01:20:29.360]  ну,
[01:20:29.360 --> 01:20:30.360]  по сути,
[01:20:30.360 --> 01:20:31.360]  да,
[01:20:31.360 --> 01:20:32.360]  да.
[01:20:32.360 --> 01:20:33.360]  Ну,
[01:20:33.360 --> 01:20:34.360]  очень
[01:20:34.360 --> 01:20:35.360]  удобно
[01:20:35.360 --> 01:20:36.360]  этого
[01:20:36.360 --> 01:20:37.360]  под дерево.
[01:20:37.360 --> 01:20:38.360]  Что
[01:20:38.360 --> 01:20:39.360]  такое
[01:20:39.360 --> 01:20:40.360]  С
[01:20:40.360 --> 01:20:41.360]  В
[01:20:41.360 --> 01:20:42.360]  после?
[01:20:42.360 --> 01:20:43.360]  Это
[01:20:43.360 --> 01:20:44.360]  суммарный
[01:20:44.360 --> 01:20:45.360]  вес
[01:20:45.360 --> 01:20:46.360]  вот
[01:20:46.360 --> 01:20:47.360]  этого
[01:20:47.360 --> 01:20:48.360]  всего
[01:20:48.360 --> 01:20:49.360]  дерева.
[01:20:49.360 --> 01:20:50.360]  Удобно,
[01:20:50.360 --> 01:20:51.360]  правда?
[01:20:51.360 --> 01:20:52.360]  То есть,
[01:20:52.360 --> 01:20:53.360]  просто
[01:20:53.360 --> 01:20:54.360]  заменили,
[01:20:54.360 --> 01:20:55.360]  подменили
[01:20:55.360 --> 01:20:56.360]  вершину
[01:20:56.360 --> 01:20:57.360]  В
[01:20:57.360 --> 01:20:58.360]  на предка
[01:20:58.360 --> 01:20:59.360]  и все.
[01:20:59.360 --> 01:21:00.360]  Вот.
[01:21:00.360 --> 01:21:01.360]  Но
[01:21:01.360 --> 01:21:02.360]  теперь
[01:21:02.360 --> 01:21:03.360]  мы заметим,
[01:21:03.360 --> 01:21:04.360]  поэтому
[01:21:04.360 --> 01:21:05.360]  мы тут
[01:21:05.360 --> 01:21:06.360]  можем
[01:21:06.360 --> 01:21:07.360]  честно
[01:21:07.360 --> 01:21:08.360]  написать,
[01:21:08.360 --> 01:21:09.360]  что это
[01:21:09.360 --> 01:21:10.360]  меньше
[01:21:10.360 --> 01:21:11.360]  либо
[01:21:11.360 --> 01:21:12.360]  равно
[01:21:12.360 --> 01:21:13.360]  1
[01:21:13.360 --> 01:21:14.360]  плюс
[01:21:14.360 --> 01:21:15.360]  3
[01:21:15.360 --> 01:21:16.360]  на
[01:21:16.360 --> 01:21:17.360]  логарифом
[01:21:17.360 --> 01:21:18.360]  2-ичный
[01:21:18.360 --> 01:21:19.360]  С
[01:21:19.360 --> 01:21:20.360]  В
[01:21:20.360 --> 01:21:21.360]  после
[01:21:21.360 --> 01:21:22.360]  минус
[01:21:22.360 --> 01:21:23.360]  логарифом
[01:21:23.360 --> 01:21:24.360]  2-ичный
[01:21:24.360 --> 01:21:25.360]  С
[01:21:25.360 --> 01:21:26.360]  В
[01:21:26.360 --> 01:21:27.360]  до.
[01:21:27.360 --> 01:21:28.360]  Вот.
[01:21:28.360 --> 01:21:29.360]  Так.
[01:21:29.360 --> 01:21:30.360]  Ну,
[01:21:30.360 --> 01:21:31.360]  по-моему,
[01:21:31.360 --> 01:21:32.360]  практически
[01:21:32.360 --> 01:21:33.360]  так.
[01:21:33.360 --> 01:21:34.360]  Чего?
[01:21:34.360 --> 01:21:35.360]  Ну,
[01:21:35.360 --> 01:21:36.360]  вроде
[01:21:36.360 --> 01:21:37.360]  работает.
[01:21:37.360 --> 01:21:38.360]  Ну,
[01:21:38.360 --> 01:21:39.360]  мы
[01:21:39.360 --> 01:21:40.360]  единичку
[01:21:40.360 --> 01:21:41.360]  не
[01:21:41.360 --> 01:21:42.360]  убили,
[01:21:42.360 --> 01:21:43.360]  но
[01:21:43.360 --> 01:21:44.360]  я
[01:21:44.360 --> 01:21:45.360]  вот
[01:21:45.360 --> 01:21:46.360]  ради
[01:21:46.360 --> 01:21:47.360]  этого
[01:21:47.360 --> 01:21:48.360]  как раз вот
[01:21:48.360 --> 01:21:49.360]  писал
[01:21:49.360 --> 01:21:50.360]  тут,
[01:21:50.360 --> 01:21:51.360]  что это
[01:21:51.360 --> 01:21:52.360]  зиг.
[01:21:52.360 --> 01:21:53.360]  То есть,
[01:21:53.360 --> 01:21:54.360]  это
[01:21:54.360 --> 01:21:55.360]  зиг,
[01:21:55.360 --> 01:21:56.360]  он
[01:21:56.360 --> 01:21:57.360]  мажорчик,
[01:21:57.360 --> 01:21:58.360]  ему
[01:21:58.360 --> 01:21:59.360]  единичку
[01:21:59.360 --> 01:22:00.360]  можно.
[01:22:00.360 --> 01:22:01.360]  Вот.
[01:22:01.360 --> 01:22:02.360]  Ну,
[01:22:02.360 --> 01:22:03.360]  вот теперь
[01:22:03.360 --> 01:22:04.360]  мы
[01:22:04.360 --> 01:22:05.360]  приходим
[01:22:05.360 --> 01:22:06.360]  к
[01:22:06.360 --> 01:22:07.360]  самому
[01:22:07.360 --> 01:22:08.360]  интересному.
[01:22:08.360 --> 01:22:09.360]  Ну,
[01:22:09.360 --> 01:22:10.360]  зигзигу
[01:22:10.360 --> 01:22:11.360]  и
[01:22:11.360 --> 01:22:12.360]  зигзагу.
[01:22:12.360 --> 01:22:13.360]  Потому,
[01:22:13.360 --> 01:22:14.360]  что у них,
[01:22:14.360 --> 01:22:15.360]  конечно,
[01:22:15.360 --> 01:22:16.360]  доказательства
[01:22:16.360 --> 01:22:17.360]  будут
[01:22:17.360 --> 01:22:18.360]  на порядок сложнее.
[01:22:18.360 --> 01:22:19.360]  Так.
[01:22:19.360 --> 01:22:20.360]  Так,
[01:22:20.360 --> 01:22:21.360]  ладно.
[01:22:21.360 --> 01:22:22.360]  Так.
[01:22:22.360 --> 01:22:23.360]  Ну,
[01:22:23.360 --> 01:22:24.360]  тут,
[01:22:24.360 --> 01:22:25.360]  я надеюсь,
[01:22:25.360 --> 01:22:26.360]  никаких
[01:22:26.360 --> 01:22:27.360]  вопросов
[01:22:27.360 --> 01:22:28.360]  нету.
[01:22:28.360 --> 01:22:29.360]  Вот.
[01:22:29.360 --> 01:22:30.360]  Мы
[01:22:30.360 --> 01:22:31.360]  сейчас
[01:22:31.360 --> 01:22:32.360]  будем,
[01:22:32.360 --> 01:22:33.360]  соответственно,
[01:22:33.360 --> 01:22:34.360]  разбираться.
[01:22:34.360 --> 01:22:35.360]  Так.
[01:22:35.360 --> 01:22:36.360]  Значит,
[01:22:36.360 --> 01:22:37.360]  что
[01:22:37.360 --> 01:22:38.360]  у нас
[01:22:38.360 --> 01:22:39.360]  туточки?
[01:22:39.360 --> 01:22:40.360]  А
[01:22:40.360 --> 01:22:41.360]  туточки
[01:22:41.360 --> 01:22:42.360]  у нас
[01:22:42.360 --> 01:22:43.360]  вот что?
[01:22:43.360 --> 01:22:44.360]  Так.
[01:22:44.360 --> 01:22:45.360]  Ну,
[01:22:45.360 --> 01:22:46.360]  поехали
[01:22:46.360 --> 01:22:47.360]  писать.
[01:22:47.360 --> 01:22:48.360]  Или,
[01:22:48.360 --> 01:22:49.360]  все-таки,
[01:22:49.360 --> 01:22:50.360]  другую
[01:22:50.360 --> 01:22:51.360]  доску
[01:22:51.360 --> 01:22:52.360]  притащить,
[01:22:52.360 --> 01:22:53.360]  а?
[01:22:53.360 --> 01:22:54.360]  Ну,
[01:22:54.360 --> 01:22:55.360]  ладно.
[01:22:55.360 --> 01:22:56.360]  О,
[01:22:56.360 --> 01:22:57.360]  да,
[01:22:57.360 --> 01:22:58.360]  сейчас
[01:22:58.360 --> 01:22:59.360]  я
[01:22:59.360 --> 01:23:00.360]  подвести.
[01:23:00.360 --> 01:23:01.360]  О,
[01:23:01.360 --> 01:23:02.360]  вы как раз к
[01:23:02.360 --> 01:23:03.360]  самому интересу.
[01:23:03.360 --> 01:23:04.360]  О,
[01:23:04.360 --> 01:23:05.360]  вы как раз к
[01:23:05.360 --> 01:23:06.360]  самому интересу.
[01:23:06.360 --> 01:23:07.360]  Ага,
[01:23:07.360 --> 01:23:08.360]  зигзиг у нас
[01:23:08.360 --> 01:23:09.360]  тут уже,
[01:23:09.360 --> 01:23:10.360]  да.
[01:23:10.360 --> 01:23:11.360]  Ой.
[01:23:11.360 --> 01:23:12.360]  И
[01:23:12.360 --> 01:23:13.360]  кадас.
[01:23:13.360 --> 01:23:14.360]  Так.
[01:23:14.360 --> 01:23:15.360]  Ну,
[01:23:15.360 --> 01:23:16.360]  вот.
[01:23:16.360 --> 01:23:17.360]  Ладно,
[01:23:17.360 --> 01:23:18.360]  поехали.
[01:23:18.360 --> 01:23:19.360]  Так.
[01:23:19.360 --> 01:23:20.360]  Значит,
[01:23:20.360 --> 01:23:21.360]  уважаемые
[01:23:21.360 --> 01:23:22.360]  знатоки,
[01:23:22.360 --> 01:23:23.360]  поехали.
[01:23:23.360 --> 01:23:24.360]  Итак,
[01:23:24.360 --> 01:23:25.360]  поехали
[01:23:25.360 --> 01:23:26.360]  на зигзиг.
[01:23:26.360 --> 01:23:27.360]  Что
[01:23:27.360 --> 01:23:28.360]  говорит
[01:23:28.360 --> 01:23:29.360]  нас?
[01:23:29.360 --> 01:23:30.360]  Значит,
[01:23:30.360 --> 01:23:31.360]  зигзиг
[01:23:31.360 --> 01:23:32.360]  берет
[01:23:32.360 --> 01:23:33.360]  один
[01:23:33.360 --> 01:23:34.360]  плюс
[01:23:34.360 --> 01:23:35.360]  логарифом
[01:23:35.360 --> 01:23:36.360]  двоичной
[01:23:36.360 --> 01:23:37.360]  С
[01:23:37.360 --> 01:23:38.360]  В
[01:23:38.360 --> 01:23:39.360]  после,
[01:23:39.360 --> 01:23:40.360]  плюс
[01:23:40.360 --> 01:23:41.360]  логарифом
[01:23:41.360 --> 01:23:42.360]  двоичной
[01:23:42.360 --> 01:23:43.360]  С
[01:23:43.360 --> 01:23:44.360]  А
[01:23:44.360 --> 01:23:45.360]  после,
[01:23:45.360 --> 01:23:46.360]  плюс
[01:23:46.360 --> 01:23:47.360]  логарифом
[01:23:47.360 --> 01:23:48.360]  двоичной
[01:23:48.360 --> 01:23:49.360]  С
[01:23:49.360 --> 01:23:50.360]  В
[01:23:50.360 --> 01:23:51.360]  после.
[01:23:51.360 --> 01:23:52.360]  Что
[01:23:52.360 --> 01:23:53.360]  у нас
[01:23:53.360 --> 01:23:54.360]  дальше?
[01:23:54.360 --> 01:23:55.360]  Минус
[01:23:55.360 --> 01:23:56.360]  логарифом
[01:23:56.360 --> 01:23:57.360]  двоичной
[01:23:57.360 --> 01:23:58.360]  С.
[01:23:58.360 --> 01:23:59.360]  Что там?
[01:23:59.360 --> 01:24:00.360]  В
[01:24:00.360 --> 01:24:01.360]  до,
[01:24:01.360 --> 01:24:02.360]  минус
[01:24:02.360 --> 01:24:03.360]  логарифом
[01:24:03.360 --> 01:24:04.360]  двоичной
[01:24:04.360 --> 01:24:05.360]  С
[01:24:05.360 --> 01:24:06.360]  А
[01:24:06.360 --> 01:24:07.360]  до,
[01:24:07.360 --> 01:24:08.360]  минус
[01:24:08.360 --> 01:24:09.360]  логарифом
[01:24:09.360 --> 01:24:10.360]  двоичной
[01:24:10.360 --> 01:24:11.360]  В
[01:24:11.360 --> 01:24:12.360]  до.
[01:24:12.360 --> 01:24:13.360]  Так.
[01:24:13.360 --> 01:24:14.360]  Вот.
[01:24:14.360 --> 01:24:15.360]  Ну,
[01:24:15.360 --> 01:24:16.360]  конечно,
[01:24:16.360 --> 01:24:17.360]  если бы нам
[01:24:17.360 --> 01:24:18.360]  разрешалась
[01:24:18.360 --> 01:24:19.360]  единичка,
[01:24:19.360 --> 01:24:20.360]  ну,
[01:24:20.360 --> 01:24:21.360]  конечно,
[01:24:21.360 --> 01:24:22.360]  если бы нам
[01:24:22.360 --> 01:24:23.360]  разрешалась
[01:24:23.360 --> 01:24:24.360]  единичка,
[01:24:24.360 --> 01:24:25.360]  мы
[01:24:25.360 --> 01:24:26.360]  конечно
[01:24:26.360 --> 01:24:27.360]  тоже могли бы там
[01:24:27.360 --> 01:24:28.360]  задачку
[01:24:28.360 --> 01:24:29.360]  спокойно
[01:24:29.360 --> 01:24:30.360]  в тупую,
[01:24:30.360 --> 01:24:31.360]  то есть это
[01:24:31.360 --> 01:24:32.360]  оценивать
[01:24:32.360 --> 01:24:33.360]  сверху,
[01:24:33.360 --> 01:24:34.360]  как лог
[01:24:34.360 --> 01:24:35.360]  два
[01:24:35.360 --> 01:24:36.360]  С.
[01:24:36.360 --> 01:24:37.360]  В
[01:24:37.360 --> 01:24:38.360]  после,
[01:24:38.360 --> 01:24:39.360]  а это
[01:24:39.360 --> 01:24:40.360]  оценивать
[01:24:40.360 --> 01:24:41.360]  тоже там,
[01:24:41.360 --> 01:24:42.360]  снизу,
[01:24:42.360 --> 01:24:43.360]  как в С.
[01:24:43.360 --> 01:24:44.360]  В
[01:24:44.360 --> 01:24:45.360]  до.
[01:24:45.360 --> 01:24:46.360]  Но нам
[01:24:46.360 --> 01:24:47.360]  нужно
[01:24:47.360 --> 01:24:48.360]  скушать
[01:24:48.360 --> 01:24:49.360]  единичку.
[01:24:49.360 --> 01:24:50.360]  Вот.
[01:24:50.360 --> 01:24:51.360]  Вправить.
[01:24:51.360 --> 01:24:52.360]  Как мы будем
[01:24:52.360 --> 01:24:53.360]  кушать
[01:24:53.360 --> 01:24:54.360]  единичку?
[01:24:54.360 --> 01:24:55.360]  Как он
[01:24:55.360 --> 01:24:56.360]  нас
[01:24:56.360 --> 01:24:57.360]  поприветствует?
[01:24:57.360 --> 01:24:58.360]  В
[01:24:58.360 --> 01:24:59.360]  после
[01:24:59.360 --> 01:25:00.360]  и
[01:25:00.360 --> 01:25:01.360]  В.
[01:25:01.360 --> 01:25:02.360]  В.
[01:25:02.360 --> 01:25:03.360]  В.
[01:25:03.360 --> 01:25:04.360]  Ну,
[01:25:04.360 --> 01:25:05.360]  вот.
[01:25:05.360 --> 01:25:06.360]  Да.
[01:25:06.360 --> 01:25:07.360]  То есть
[01:25:07.360 --> 01:25:08.360]  это мы
[01:25:08.360 --> 01:25:09.360]  просто
[01:25:09.360 --> 01:25:10.360]  пошлеп-шлепли.
[01:25:10.360 --> 01:25:11.360]  Равно.
[01:25:11.360 --> 01:25:12.360]  А1
[01:25:12.360 --> 01:25:13.360]  плюс
[01:25:13.360 --> 01:25:14.360]  логарифом
[01:25:14.360 --> 01:25:15.360]  двоичной
[01:25:15.360 --> 01:25:16.360]  С.
[01:25:16.360 --> 01:25:17.360]  А
[01:25:17.360 --> 01:25:18.360]  после.
[01:25:18.360 --> 01:25:19.360]  Плюс
[01:25:19.360 --> 01:25:20.360]  логарифом
[01:25:20.360 --> 01:25:21.360]  двоичной
[01:25:21.360 --> 01:25:22.360]  С.
[01:25:22.360 --> 01:25:23.360]  Минус
[01:25:23.360 --> 01:25:24.360]  логарифом
[01:25:24.360 --> 01:25:25.360]  двоичной
[01:25:25.360 --> 01:25:26.360]  С.
[01:25:26.360 --> 01:25:27.360]  В.
[01:25:27.360 --> 01:25:28.360]  До.
[01:25:28.360 --> 01:25:29.360]  Минус
[01:25:29.360 --> 01:25:30.360]  логарифом
[01:25:30.360 --> 01:25:31.360]  двоичной
[01:25:31.360 --> 01:25:32.360]  С.
[01:25:32.360 --> 01:25:33.360]  А.
[01:25:33.360 --> 01:25:34.360]  До.
[01:25:34.360 --> 01:25:35.360]  Вот.
[01:25:35.360 --> 01:25:36.360]  Ой.
[01:25:36.360 --> 01:25:37.360]  Или все-таки
[01:25:37.360 --> 01:25:38.360]  зиг-зага
[01:25:38.360 --> 01:25:39.360]  начать.
[01:25:39.360 --> 01:25:40.360]  Чего?
[01:25:40.360 --> 01:25:41.360]  Ну,
[01:25:41.360 --> 01:25:42.360]  да-да-да.
[01:25:42.360 --> 01:25:43.360]  Нет,
[01:25:43.360 --> 01:25:44.360]  просто в
[01:25:44.360 --> 01:25:45.360]  зиг-заге
[01:25:45.360 --> 01:25:46.360]  мы применим
[01:25:46.360 --> 01:25:47.360]  красивый хак,
[01:25:47.360 --> 01:25:48.360]  а в
[01:25:48.360 --> 01:25:49.360]  зиг-зиге
[01:25:49.360 --> 01:25:50.360]  надо, значит,
[01:25:50.360 --> 01:25:51.360]  добавить
[01:25:51.360 --> 01:25:52.360]  непонятно,
[01:25:52.360 --> 01:25:53.360]  что,
[01:25:53.360 --> 01:25:54.360]  и после этого
[01:25:54.360 --> 01:25:55.360]  делать красивый
[01:25:55.360 --> 01:25:56.360]  хак.
[01:25:56.360 --> 01:25:57.360]  Ну,
[01:25:57.360 --> 01:25:58.360]  ладно.
[01:25:58.360 --> 01:25:59.360]  Да,
[01:25:59.360 --> 01:26:00.360]  начали,
[01:26:00.360 --> 01:26:01.360]  так начали.
[01:26:01.360 --> 01:26:02.360]  Так,
[01:26:02.360 --> 01:26:03.360]  ну,
[01:26:03.360 --> 01:26:04.360]  давайте,
[01:26:04.360 --> 01:26:05.360]  это называется,
[01:26:05.360 --> 01:26:06.360]  ну,
[01:26:06.360 --> 01:26:07.360]  давайте
[01:26:07.360 --> 01:26:08.360]  смотреть.
[01:26:08.360 --> 01:26:09.360]  Значит,
[01:26:09.360 --> 01:26:10.360]  как
[01:26:10.360 --> 01:26:11.360]  мы тут
[01:26:11.360 --> 01:26:12.360]  будем,
[01:26:12.360 --> 01:26:13.360]  соответственно,
[01:26:13.360 --> 01:26:14.360]  оценивать?
[01:26:14.360 --> 01:26:15.360]  Значит,
[01:26:15.360 --> 01:26:16.360]  ну,
[01:26:16.360 --> 01:26:17.360]  смотрите.
[01:26:17.360 --> 01:26:18.360]  Ну,
[01:26:18.360 --> 01:26:19.360]  во-первых,
[01:26:19.360 --> 01:26:20.360]  ликвидируем
[01:26:20.360 --> 01:26:21.360]  ашку.
[01:26:21.360 --> 01:26:22.360]  Ну,
[01:26:22.360 --> 01:26:23.360]  как я ее
[01:26:23.360 --> 01:26:24.360]  ликвидирую?
[01:26:24.360 --> 01:26:25.360]  Ну,
[01:26:25.360 --> 01:26:26.360]  ну,
[01:26:26.360 --> 01:26:27.360]  и в после,
[01:26:27.360 --> 01:26:28.360]  и в до
[01:26:28.360 --> 01:26:29.360]  я ее
[01:26:29.360 --> 01:26:30.360]  отправлю в
[01:26:30.360 --> 01:26:31.360]  в.
[01:26:31.360 --> 01:26:32.360]  Соответственно.
[01:26:32.360 --> 01:26:33.360]  А,
[01:26:33.360 --> 01:26:34.360]  нет.
[01:26:34.360 --> 01:26:35.360]  А,
[01:26:35.360 --> 01:26:36.360]  не
[01:26:36.360 --> 01:26:37.360]  отправлю,
[01:26:37.360 --> 01:26:38.360]  да.
[01:26:38.360 --> 01:26:39.360]  А,
[01:26:39.360 --> 01:26:40.360]  ну,
[01:26:40.360 --> 01:26:41.360]  нет,
[01:26:41.360 --> 01:26:42.360]  почему же?
[01:26:42.360 --> 01:26:43.360]  Ага.
[01:26:43.360 --> 01:26:44.360]  Нет,
[01:26:44.360 --> 01:26:45.360]  хотя
[01:26:45.360 --> 01:26:46.360]  чего,
[01:26:46.360 --> 01:26:47.360]  чего,
[01:26:47.360 --> 01:26:48.360]  чего,
[01:26:48.360 --> 01:26:49.360]  кого?
[01:26:49.360 --> 01:26:50.360]  Чего,
[01:26:50.360 --> 01:26:51.360]  чего,
[01:26:51.360 --> 01:26:52.360]  кого?
[01:26:52.360 --> 01:26:53.360]  Так.
[01:26:53.360 --> 01:26:54.360]  Ну,
[01:26:54.360 --> 01:26:55.360]  да.
[01:26:55.360 --> 01:26:56.360]  Так.
[01:26:56.360 --> 01:26:57.360]  Значит,
[01:26:57.360 --> 01:26:58.360]  ну,
[01:26:58.360 --> 01:26:59.360]  ну,
[01:26:59.360 --> 01:27:00.360]  давайте
[01:27:00.360 --> 01:27:01.360]  смотреть.
[01:27:01.360 --> 01:27:02.360]  Значит,
[01:27:02.360 --> 01:27:03.360]  чем
[01:27:03.360 --> 01:27:04.360]  вообще
[01:27:04.360 --> 01:27:05.360]  хочется тут,
[01:27:05.360 --> 01:27:06.360]  конечно,
[01:27:06.360 --> 01:27:07.360]  как-то
[01:27:07.360 --> 01:27:08.360]  воспользоваться?
[01:27:08.360 --> 01:27:09.360]  Ну,
[01:27:09.360 --> 01:27:10.360]  в идеале,
[01:27:10.360 --> 01:27:11.360]  на самом деле,
[01:27:11.360 --> 01:27:12.360]  хочется воспользоваться тем,
[01:27:12.360 --> 01:27:13.360]  что у нас,
[01:27:13.360 --> 01:27:14.360]  действительно,
[01:27:14.360 --> 01:27:15.360]  есть
[01:27:15.360 --> 01:27:16.360]  вершина В,
[01:27:16.360 --> 01:27:17.360]  на ней весят под деревья
[01:27:17.360 --> 01:27:18.360]  альфа бета,
[01:27:18.360 --> 01:27:19.360]  вот.
[01:27:19.360 --> 01:27:20.360]  Да,
[01:27:20.360 --> 01:27:21.360]  спрашивается.
[01:27:21.360 --> 01:27:22.360]  Действительно,
[01:27:22.360 --> 01:27:23.360]  как же этим
[01:27:23.360 --> 01:27:24.360]  воспользоваться?
[01:27:24.360 --> 01:27:25.360]  Так,
[01:27:25.360 --> 01:27:26.360]  ну,
[01:27:26.360 --> 01:27:27.360]  давайте,
[01:27:27.360 --> 01:27:28.360]  действительно,
[01:27:28.360 --> 01:27:29.360]  ладно.
[01:27:29.360 --> 01:27:30.360]  А,
[01:27:30.360 --> 01:27:31.360]  ну,
[01:27:31.360 --> 01:27:32.360]  вот,
[01:27:32.360 --> 01:27:33.360]  так.
[01:27:33.360 --> 01:27:34.360]  Ну,
[01:27:34.360 --> 01:27:35.360]  вот.
[01:27:35.360 --> 01:27:36.360]  Ну,
[01:27:36.360 --> 01:27:37.360]  слава Богу,
[01:27:37.360 --> 01:27:38.360]  А,
[01:27:38.360 --> 01:27:39.360]  до,
[01:27:39.360 --> 01:27:40.360]  мы все-таки на В
[01:27:40.360 --> 01:27:41.360]  подменим.
[01:27:41.360 --> 01:27:42.360]  Соответственно.
[01:27:42.360 --> 01:27:43.360]  И А,
[01:27:43.360 --> 01:27:44.360]  после,
[01:27:44.360 --> 01:27:45.360]  тоже,
[01:27:45.360 --> 01:27:46.360]  пожалуй,
[01:27:46.360 --> 01:27:47.360]  подменим.
[01:27:47.360 --> 01:27:48.360]  Так,
[01:27:48.360 --> 01:27:49.360]  значит,
[01:27:49.360 --> 01:27:50.360]  да,
[01:27:50.360 --> 01:27:51.360]  значит,
[01:27:51.360 --> 01:27:52.360]  В,
[01:27:52.360 --> 01:27:53.360]  до,
[01:27:53.360 --> 01:27:54.360]  у нас уже,
[01:27:54.360 --> 01:27:55.360]  нет,
[01:27:55.360 --> 01:27:56.360]  хотя,
[01:27:56.360 --> 01:27:57.360]  нет,
[01:27:57.360 --> 01:27:58.360]  мы ничего
[01:27:58.360 --> 01:27:59.360]  пока не будем делать,
[01:27:59.360 --> 01:28:00.360]  значит,
[01:28:00.360 --> 01:28:01.360]  у нас есть В,
[01:28:01.360 --> 01:28:02.360]  до,
[01:28:02.360 --> 01:28:03.360]  у нас есть,
[01:28:03.360 --> 01:28:04.360]  есть у нас В,
[01:28:04.360 --> 01:28:05.360]  есть у нас В,
[01:28:05.360 --> 01:28:06.360]  да,
[01:28:06.360 --> 01:28:07.360]  вот.
[01:28:07.360 --> 01:28:08.360]  Ну,
[01:28:08.360 --> 01:28:09.360]  и,
[01:28:09.360 --> 01:28:10.360]  соответственно,
[01:28:10.360 --> 01:28:11.360]  значит,
[01:28:11.360 --> 01:28:12.360]  как-то
[01:28:12.360 --> 01:28:13.360]  превратить В,
[01:28:13.360 --> 01:28:14.360]  после,
[01:28:14.360 --> 01:28:15.360]  ну,
[01:28:15.360 --> 01:28:16.360]  после,
[01:28:16.360 --> 01:28:17.360]  так.
[01:28:17.360 --> 01:28:18.360]  Так,
[01:28:18.360 --> 01:28:19.360]  ладно,
[01:28:19.360 --> 01:28:20.360]  давайте.
[01:28:20.360 --> 01:28:21.360]  Так,
[01:28:21.360 --> 01:28:22.360]  логарифом два,
[01:28:22.360 --> 01:28:23.360]  значит,
[01:28:23.360 --> 01:28:24.360]  С,
[01:28:24.360 --> 01:28:25.360]  значит,
[01:28:25.360 --> 01:28:26.360]  допустим,
[01:28:26.360 --> 01:28:27.360]  В,
[01:28:27.360 --> 01:28:28.360]  после,
[01:28:28.360 --> 01:28:29.360]  там,
[01:28:29.360 --> 01:28:30.360]  плюс,
[01:28:30.360 --> 01:28:31.360]  логарифом,
[01:28:31.360 --> 01:28:32.360]  двоичный,
[01:28:32.360 --> 01:28:33.360]  значит,
[01:28:33.360 --> 01:28:34.360]  С,
[01:28:34.360 --> 01:28:35.360]  соответственно.
[01:28:35.360 --> 01:28:36.360]  Ну,
[01:28:36.360 --> 01:28:37.360]  ну,
[01:28:37.360 --> 01:28:38.360]  ну,
[01:28:38.360 --> 01:28:39.360]  ну,
[01:28:39.360 --> 01:28:40.360]  ну,
[01:28:40.360 --> 01:28:41.360]  ну,
[01:28:41.360 --> 01:28:42.360]  ну,
[01:28:42.360 --> 01:28:43.360]  ну,
[01:28:43.360 --> 01:28:44.360]  ну,
[01:28:44.360 --> 01:28:45.360]  ну,
[01:28:45.360 --> 01:28:46.360]  соответственно.
[01:28:46.360 --> 01:28:47.360]  Не,
[01:28:47.360 --> 01:28:48.360]  там,
[01:28:48.360 --> 01:28:49.360]  соответственно.
[01:28:49.360 --> 01:28:50.360]  В,
[01:28:50.360 --> 01:28:51.360]  после,
[01:28:51.360 --> 01:28:52.360]  минус,
[01:28:52.360 --> 01:28:53.360]  соответственно,
[01:28:53.360 --> 01:28:54.360]  логарифом,
[01:28:54.360 --> 01:28:55.360]  двоичный,
[01:28:55.360 --> 01:28:56.360]  С,
[01:28:56.360 --> 01:28:57.360]  В,
[01:28:57.360 --> 01:28:58.360]  до,
[01:28:58.360 --> 01:28:59.360]  минус,
[01:28:59.360 --> 01:29:00.360]  логарифом,
[01:29:00.360 --> 01:29:01.360]  двоичный.
[01:29:01.360 --> 01:29:02.360]  Так.
[01:29:02.360 --> 01:29:03.360]  С,
[01:29:03.360 --> 01:29:04.360]  В,
[01:29:04.360 --> 01:29:05.360]  допустим,
[01:29:05.360 --> 01:29:06.360]  ну,
[01:29:06.360 --> 01:29:07.360]  ну,
[01:29:07.360 --> 01:29:08.360]  ну,
[01:29:08.360 --> 01:29:09.360]  ну,
[01:29:09.360 --> 01:29:10.360]  ну,
[01:29:10.360 --> 01:29:11.360]  ну,
[01:29:11.360 --> 01:29:12.360]  ну,
[01:29:12.360 --> 01:29:13.360]  ну,
[01:29:13.360 --> 01:29:14.360]  ну,
[01:29:14.360 --> 01:29:15.360]  ну,
[01:29:15.360 --> 01:29:16.360]  ну,
[01:29:16.360 --> 01:29:17.360] 크то.
[01:29:17.360 --> 01:29:18.360]  Не,
[01:29:18.360 --> 01:29:19.360]  ну,
[01:29:19.360 --> 01:29:20.360]  почему?
[01:29:20.360 --> 01:29:21.360]  Если у нас была
[01:29:21.360 --> 01:29:22.360]  А,
[01:29:22.360 --> 01:29:23.360]  то,
[01:29:23.360 --> 01:29:24.360]  то,
[01:29:24.360 --> 01:29:25.360]  как бы,
[01:29:25.360 --> 01:29:26.360]  если мы
[01:29:28.360 --> 01:29:29.360]  её хотим
[01:29:29.360 --> 01:29:30.360]  подменять,
[01:29:30.360 --> 01:29:31.360]  то получится
[01:29:31.360 --> 01:29:32.360]  только В.
[01:29:32.360 --> 01:29:33.360]  Ну,
[01:29:33.360 --> 01:29:36.360]  ночью 모습TEG500,
[01:29:36.360 --> 01:29:38.160]  так,
[01:29:38.160 --> 01:29:39.160]  ну,
[01:29:39.160 --> 01:29:40.620]  так,
[01:29:40.620 --> 01:29:41.620]  ну,
[01:29:41.620 --> 01:29:42.700]  ну,
[01:29:42.700 --> 01:29:43.700]  так,
[01:29:43.700 --> 01:29:50.620]  так нет ну как правда скажем так это скажем так так они не в это аэсв
[01:29:50.620 --> 01:29:56.140]  нет ну не совсем так смотрите потому что нет ну как я уже сказал мы после
[01:29:56.140 --> 01:30:01.700]  могли заменить на в после получить два там две разности логарифм плюс один но
[01:30:01.700 --> 01:30:08.980]  это нас не устраивает потому что сказать что 2 там две разности логарифм
[01:30:08.980 --> 01:30:12.420]  плюс один не обязательно меньше либо равных чем три разности логарифм без
[01:30:12.420 --> 01:30:18.220]  этой денечки вот поэтому придется здесь немножко по 4
[01:30:18.220 --> 01:30:28.500]  какие он вот каким соответствующим образом мы это сделаем вот
[01:30:28.500 --> 01:30:35.180]  мы это сделаем весьма неожиданным образом давай
[01:30:35.180 --> 01:30:46.020]  а что поменялось смотри давай что поменялось а после мы заменили на в
[01:30:46.020 --> 01:30:51.820]  после то есть в после ведь я а мы заменили на родителя а поэтому стало
[01:30:51.820 --> 01:30:58.460]  больше а здесь мы поменяли в до а на там с минусом поменяли наоборот на
[01:30:58.460 --> 01:31:08.500]  потомка а так слушайте а теперь мы сделаем неожиданный хак мы скажем что
[01:31:08.500 --> 01:31:23.500]  это равно 1 плюс логарифм двоичной с в после плюс логарифм двоичной с б после
[01:31:23.540 --> 01:31:40.580]  плюс логарифм двоичной с в до минус 3 логарифма двоичных с в но внезапно да
[01:31:40.580 --> 01:31:49.420]  вправывается зачем я это сделал а сделал я это вот зачем
[01:31:49.580 --> 01:31:57.700]  и смотрите да потому что я прибавил логарифм двоичной св до и вычел логарифм
[01:31:57.700 --> 01:32:05.020]  двоичной св до тут плюс а тут три минуса
[01:32:05.780 --> 01:32:12.540]  значит а теперь вспомним так ну что вы уже значит закончили первую вы уже
[01:32:12.540 --> 01:32:16.500]  сдали первый экзамен по анализу поэтому вы знаете что такое выпуклое
[01:32:16.500 --> 01:32:24.780]  вверх функция да великолепно и также наверно знаете что логарифм это выпуклое
[01:32:24.780 --> 01:32:33.940]  вверх функция а у выпуклых вверх функций есть такое мистическое свойство лог
[01:32:33.940 --> 01:32:45.540]  икс один плюс лог икс два пополам меньше либо равно чем лог икс один плюс икс два
[01:32:45.540 --> 01:32:54.580]  пополам вот да как-то по-моему что-то в голове почему-то начинает такое
[01:32:54.580 --> 01:33:00.420]  словосочетание как неравенство янсона да нет это не оно
[01:33:00.420 --> 01:33:28.500]  можно это просто это не поможет смотрите если мы сделаем это в тупую я мог бы тут
[01:33:28.500 --> 01:33:36.860]  описать что это будет один плюс две вот такие разности логарифм но верно ли что один плюс
[01:33:36.860 --> 01:33:41.380]  две такие разности логарифм меньше либо равны чем три такие разности логарифм вот
[01:33:41.380 --> 01:33:48.660]  эту штуку нам уже не нужна к сожалению разность логарифм это было бы верно только в одном
[01:33:48.660 --> 01:33:53.180]  случае если бы разность логарифм была больше либо равна единице такой гарантии у нас нет
[01:33:53.180 --> 01:34:00.580]  вот собственно как сразу вот вот вот в этом вот случае кстати с ограничение вниз логарифм
[01:34:00.580 --> 01:34:05.800]  да там в этом месте там аккуратно доказывают что потенциал там то что как-то скрип квантовый
[01:34:05.800 --> 01:34:12.060]  скотчок произошел потому что там доказывают что как бы допустим у всех там квантовый
[01:34:12.060 --> 01:34:16.180]  скотчок не произошел у всех этих вершин потенциал там округленный вниз логарифм
[01:34:16.180 --> 01:34:23.020]  там СЗшки равен К, тут К, тут К, тут К, тут К, тут К, тут К, но такого не бывает. Почему?
[01:34:23.180 --> 01:34:29.940]  Потому что значит тут у нас какая-то порядка степень двойки, то есть там около два степеника вершин, тут около два степеника вершин, значит
[01:34:29.940 --> 01:34:34.420]  суммарно их около два степеника плюс один вершин. Ай-яй-яй, ну там какое-то такое доказательство.
[01:34:35.500 --> 01:34:37.500]  Зачем я вообще это вспомнил? Да.
[01:34:37.500 --> 01:34:51.060]  Сейчас подождите, у нас самая верхняя сумма, там один плюс лог, там СВ после, вот нельзя все, что с плюсами оценить как СВ после, все, что с минусами как СВ до.
[01:34:51.060 --> 01:34:57.020]  Можно. Ну его получим. Значит еще, ладно, давайте так, давайте распишу.
[01:34:57.020 --> 01:35:15.060]  А типа единицы? Да, нам единицы прям принципиально надо убить. Да, да, да, потому что иначе это будет работать как бы за три разности глобального грифа плюс количество шагов, но это нам не надо, ну вот, а это плохо.
[01:35:15.060 --> 01:35:15.500]  Так, ну давайте попробуем вот этим воспользоваться, вот этим читом, значит это, значит пишем, где у нас тут, меньше либо равно, значит меньше либо равно, получается один плюс логарифом двоичный СВ после, плюс, соответственно, два логарифом двоичный СВ после, плюс, соответственно, два логарифом двоичный СВ после, плюс, соответственно, два логарифом двоичный СВ после, плюс, соответственно, два логарифом двоичный СВ после, плюс, соответственно, два логарифом двоичный СВ после, плюс, соответственно, два логарифом двоичный СВ после, плюс, соответственно, два логарифом двоичный СВ после, плюс, соответственно, два логарифом двоичный СВ после, плюс, соответственно, два логарифом двоич
[01:35:45.060 --> 01:36:01.380]  соответственно, смотрите, С, значит, В после, плюс, СВ до пополам, ну, двоечку и убили, ничего страшного,
[01:36:01.380 --> 01:36:25.380]  вот, вот, но теперь, да, вы уже, да, но вы уже пробили, а в чем, собственно, приятность? Приятность заключает в том, что если я эту двойку вынесу, у меня тут будет минус два, и тем самым единичку убьется, да?
[01:36:25.380 --> 01:36:39.380]  А приятность в том, что почему я подгонял именно так? Потому что СВ после, плюс СВ до, они прекрасно вписываются в СВ после, правда?
[01:36:39.380 --> 01:36:44.380]  Видите, я специально подгонял так, чтобы эти под деревья не пересекались.
[01:36:44.380 --> 01:37:04.380]  Чего нифига? Вот поэтому нужна была вторая доска. Ладно. Так, чего, где, где не видно, чего не видно?
[01:37:04.380 --> 01:37:23.380]  Ничего не видно. Не видно, как бы их сумми участвует А. Ну, почему, вот, ну, во-первых, вот А, вот А. Вот, теперь вот здесь А осталось, ну, вот, ну, потом мы сделали шлёп-шлёп, вот А, вот А.
[01:37:23.380 --> 01:37:31.380]  А в самом конце её нет, потому что вот на этом шаге мы эту А убили.
[01:37:31.380 --> 01:37:34.380]  Ладно, я не в принципе просил, но я уже всё понял.
[01:37:34.380 --> 01:37:35.380]  Окей.
[01:37:35.380 --> 01:37:41.380]  Стоп, ну, вот там же, там же С, А после всё ещё есть.
[01:37:41.380 --> 01:37:42.380]  Где?
[01:37:42.380 --> 01:37:44.380]  На предпоследней стреке.
[01:37:45.380 --> 01:37:46.380]  Нет.
[01:37:46.380 --> 01:37:47.380]  Где?
[01:37:47.380 --> 01:37:48.380]  В.
[01:37:48.380 --> 01:37:49.380]  Это В.
[01:37:49.380 --> 01:37:51.380]  Ну, давайте я побольше нарисую.
[01:37:51.380 --> 01:37:54.380]  Это В.
[01:37:54.380 --> 01:37:57.380]  А потом что?
[01:37:57.380 --> 01:38:00.380]  Там везде ВДО два раза.
[01:38:00.380 --> 01:38:03.380]  А, это мы как раз таки А вот так оценили.
[01:38:03.380 --> 01:38:10.380]  Да. Да, тут оценили А вот так, тут оценили А вот так, я прям вот по-членному так нарисовал, чтобы понятно было.
[01:38:10.380 --> 01:38:12.380]  Вот.
[01:38:12.380 --> 01:38:14.380]  Так, ну, давайте смотреть.
[01:38:14.380 --> 01:38:19.380]  Так, вот тут я, пожалуй, перейду вот сюда куда-нибудь.
[01:38:19.380 --> 01:38:22.380]  Так, это у нас что получается?
[01:38:22.380 --> 01:38:29.380]  Значит, один плюс лог два С, соответственно.
[01:38:29.380 --> 01:38:32.380]  Ой, а это В у меня такое, ничего себе.
[01:38:32.380 --> 01:38:34.380]  В после.
[01:38:34.380 --> 01:38:37.380]  С, В после.
[01:38:37.380 --> 01:38:43.380]  Плюс два, значит, логарифма двоичных.
[01:38:43.380 --> 01:38:47.380]  Значит, С, В после.
[01:38:47.380 --> 01:38:51.380]  Плюс С, ВДО.
[01:38:51.380 --> 01:38:54.380]  Минус два.
[01:38:54.380 --> 01:38:58.380]  Минус три логарифма двоичных.
[01:38:58.380 --> 01:39:01.380]  С, В, ДО.
[01:39:01.380 --> 01:39:06.380]  Значит, ну, это получается, смотрите, вот эта штука.
[01:39:06.380 --> 01:39:12.380]  Вот, заметим, что вот эта вот штука меньше либо равна С, В после.
[01:39:12.380 --> 01:39:17.380]  Вся эта скобочка.
[01:39:17.380 --> 01:39:28.380]  И получается, что это меньше либо равно, чем три лог двоичных С, В после.
[01:39:28.380 --> 01:39:37.380]  Плюс три, точнее, минус три С, логарифма двоичных С, ВДО.
[01:39:37.380 --> 01:39:42.380]  Минус один.
[01:39:42.380 --> 01:39:45.380]  Все.
[01:39:45.380 --> 01:39:52.380]  Ну, я должен был, конечно, еще меньше либо равно написать, чтобы этой единички не было, но это уже мелочь.
[01:39:52.380 --> 01:40:06.380]  Вот.
[01:40:06.380 --> 01:40:18.380]  Так, ну вот, понятно?
[01:40:18.380 --> 01:40:24.380]  Ну, как вы, смотрите, логарифм вот этого среднего пятичка это логарифм суммы минус логарифм двойки.
[01:40:24.380 --> 01:40:28.380]  Логарифм двойки единичка, умножаем на два, получается минус два.
[01:40:28.380 --> 01:40:39.380]  Так что получается еще такой чит. Неожиданный.
[01:40:39.380 --> 01:40:51.380]  Так что, да, вот с точки зрения тройки, в общем-то, видите, неплохо получилось.
[01:40:51.380 --> 01:40:52.380]  Вот.
[01:40:52.380 --> 01:40:59.380]  Так что получается, зиг-зиг шаг впал.
[01:40:59.380 --> 01:41:00.380]  Вот.
[01:41:00.380 --> 01:41:03.380]  Но я утверждаю, что зиг-заг пойдет после этого еще проще.
[01:41:03.380 --> 01:41:08.380]  Ну, к сожалению, не так же, поэтому нам придется его расписать.
[01:41:08.380 --> 01:41:14.380]  Но, скажем так, дополнительных плюс-минусов нам делать не придется.
[01:41:14.380 --> 01:41:18.380]  Давай.
[01:41:18.380 --> 01:41:22.380]  Какой из?
[01:41:22.380 --> 01:41:31.380]  Ну, ну что, если мы взяли вот эти два логарифма и сказали, что это меньше либо равно, чем два логарифма среднего рифметического, это эквивалентно вот этому неравенству.
[01:41:31.380 --> 01:41:36.380]  Вот.
[01:41:36.380 --> 01:41:39.380]  То есть такой вот неожиданный чит.
[01:41:39.380 --> 01:41:44.380]  Так, ну давайте смотреть.
[01:41:44.380 --> 01:41:50.380]  Так, ну теперь давайте попробуем победить зиг-заг.
[01:41:50.380 --> 01:42:08.380]  Да.
[01:42:08.380 --> 01:42:12.380]  А, уже просчитали там, да?
[01:42:12.380 --> 01:42:13.380]  Да.
[01:42:13.380 --> 01:42:14.380]  А, это я говорю, да.
[01:42:14.380 --> 01:42:15.380]  Нет, я это говорю.
[01:42:15.380 --> 01:42:16.380]  Валер, может вы там уже...
[01:42:16.380 --> 01:42:20.380]  Вы там, в принципе, если там сели, вы застали то же самое расписывать, может у вас там уже и сошлось.
[01:42:20.380 --> 01:42:23.380]  Итак, зиг-заг.
[01:42:23.380 --> 01:42:26.380]  Нас приветствует зиг-заг.
[01:42:26.380 --> 01:42:32.380]  Так, ну начало я зря стер, потому что оно, в общем-то, идентичное, да?
[01:42:32.380 --> 01:42:39.380]  Лог двоичный В, там С, В после.
[01:42:39.380 --> 01:42:46.380]  Плюс логарифм двоичный С, значит А после.
[01:42:46.380 --> 01:42:51.380]  Плюс логарифм двоичный С, В после.
[01:42:51.380 --> 01:42:58.380]  Значит дальше минус логарифм двоичный С, В до.
[01:42:58.380 --> 01:43:03.380]  Там плюс С, как жалко, что это нельзя промотать.
[01:43:03.380 --> 01:43:10.380]  Ну вы там на видео промотаете.
[01:43:10.380 --> 01:43:12.380]  Знаете, это на самом деле как презентация.
[01:43:12.380 --> 01:43:19.380]  Знаете, самое короткое, что можно было сделать, это на самом деле я бы записал все то же самое на презентацию и, собственно, вам бы показывал.
[01:43:19.380 --> 01:43:20.380]  Ну вот.
[01:43:20.380 --> 01:43:26.380]  Ну, собственно, в какой-то момент я перестал это делать, потому что обнаружила, что как бы...
[01:43:26.380 --> 01:43:33.380]  Как бы, на понимаемость, то есть это, конечно, классно отражается на скорости, но не очень хорошо на понимание, на понимабельность.
[01:43:33.380 --> 01:43:37.380]  Вот.
[01:43:37.380 --> 01:43:39.380]  То есть, на самом деле, дайте так преимущество.
[01:43:39.380 --> 01:43:46.380]  Пока я это пишу, у вас есть дополнительные, там, 30 секунд на то, чтобы, там, называется, лучше понять, что происходит.
[01:43:46.380 --> 01:43:47.380]  Вот.
[01:43:47.380 --> 01:43:50.380]  Значит, смотрите.
[01:43:50.380 --> 01:43:51.380]  Так.
[01:43:51.380 --> 01:43:54.380]  Ну, что мы тут делаем?
[01:43:54.380 --> 01:43:55.380]  Так.
[01:43:55.380 --> 01:43:59.380]  Ну, теперь мы, да, правда, теперь мы смотрим в зигзаг, соответственно, да?
[01:43:59.380 --> 01:44:02.380]  Снова С В после.
[01:44:02.380 --> 01:44:03.380]  Так.
[01:44:03.380 --> 01:44:04.380]  Ну, да.
[01:44:04.380 --> 01:44:05.380]  Так.
[01:44:05.380 --> 01:44:07.380]  Ну, начнем с того, что мы должны что-то убить.
[01:44:07.380 --> 01:44:14.380]  В ролик чего-то, естественно, опять у нас В после и В до, да?
[01:44:14.380 --> 01:44:16.380]  Да, это уже было.
[01:44:16.380 --> 01:44:19.380]  Значит, логарифом двоичный С.
[01:44:19.380 --> 01:44:22.380]  А после.
[01:44:22.380 --> 01:44:27.380]  Плюс логарифом двоичный С В после.
[01:44:27.380 --> 01:44:28.380]  Так.
[01:44:28.380 --> 01:44:32.380]  Минус логарифом двоичный.
[01:44:32.380 --> 01:44:33.380]  Ну, вот.
[01:44:33.380 --> 01:44:38.380]  Минус логарифом двоичный С А до.
[01:44:38.380 --> 01:44:40.380]  Вот.
[01:44:40.380 --> 01:44:41.380]  Значит.
[01:44:41.380 --> 01:44:43.380]  Ну, а сейчас все будет короче.
[01:44:43.380 --> 01:44:48.380]  Потому что заметим, что А и B лежат после, лежат слева.
[01:44:48.380 --> 01:44:50.380]  Там слева и справа от В.
[01:44:50.380 --> 01:44:52.380]  Поэтому к ним сразу можно применить неравенство.
[01:44:52.380 --> 01:44:54.380]  Это вот мистическое неравенство.
[01:44:54.380 --> 01:44:57.380]  Ну, точнее, неравенство просто можно применить.
[01:44:57.380 --> 01:45:00.380]  Во-первых, можно просто сказать, что это меньше либо равно,
[01:45:00.380 --> 01:45:08.380]  чем один плюс два логарифа двоичных С А после.
[01:45:08.380 --> 01:45:11.380]  Плюс С В после.
[01:45:11.380 --> 01:45:14.380]  Пополам.
[01:45:14.380 --> 01:45:16.380]  И, ну, я здесь еще с четырю.
[01:45:16.380 --> 01:45:17.380]  Я еще напишу сразу.
[01:45:17.380 --> 01:45:24.380]  Минус два логарифа двоичных С В до.
[01:45:24.380 --> 01:45:27.380]  Значит.
[01:45:27.380 --> 01:45:28.380]  Ну, вот.
[01:45:28.380 --> 01:45:30.380]  Ну, очевидно, это равно.
[01:45:30.380 --> 01:45:35.380]  Чему это равно?
[01:45:35.380 --> 01:45:38.380]  Ну, вот.
[01:45:38.380 --> 01:45:41.380]  Ну, ладно, я давайте уже покороче напишу.
[01:45:41.380 --> 01:45:44.380]  Два логарифма двоичных получится.
[01:45:44.380 --> 01:45:50.380]  С значит В после.
[01:45:50.380 --> 01:45:51.380]  Значит.
[01:45:51.380 --> 01:45:57.380]  Минус один, минус два логарифма двоичных С В до.
[01:45:57.380 --> 01:46:04.380]  Ну, это соответственно меньше либо равно, чем три логарифма двоичных С В после.
[01:46:04.380 --> 01:46:10.380]  Минус логарифма двоичных С В до.
[01:46:10.380 --> 01:46:17.380]  То есть как бы приятное свойство логарифма, да?
[01:46:17.380 --> 01:46:20.380]  То есть как-то он получает эту единическую,
[01:46:20.380 --> 01:46:25.380]  скрадывает действительно вот где-то вот в красивых объединениях.
[01:46:25.380 --> 01:46:28.380]  Вот.
[01:46:28.380 --> 01:46:33.380]  У нас С А после плюс С В после это С В после.
[01:46:33.380 --> 01:46:34.380]  Чего-чего?
[01:46:34.380 --> 01:46:39.380]  У нас С А после плюс С В после равно С В после, да?
[01:46:39.380 --> 01:46:45.380]  Это меньше либо равно С В после.
[01:46:45.380 --> 01:46:46.380]  И еще минус.
[01:46:46.380 --> 01:46:48.380]  Ну, один, минус два, вот как уже было.
[01:46:48.380 --> 01:46:51.380]  Поэтому я тут минус один написал.
[01:46:51.380 --> 01:46:54.380]  Но при меньше либо равно минус один я убиваю,
[01:46:54.380 --> 01:46:58.380]  а С В после по-любому больше либо равно С В до.
[01:46:58.380 --> 01:47:02.380]  Поэтому как бы два меньше либо равно трех.
[01:47:02.380 --> 01:47:04.380]  То есть можно еще было в предыдущем доказательстве,
[01:47:04.380 --> 01:47:07.380]  в зигзиге еще подумать, а этот тройбан нам вообще нужен,
[01:47:07.380 --> 01:47:11.380]  или как-то можно избавиться аккуратненько.
[01:47:11.380 --> 01:47:12.380]  Вот.
[01:47:12.380 --> 01:47:18.380]  Но впрочем это не принципиально.
[01:47:18.380 --> 01:47:19.380]  Ну вот.
[01:47:19.380 --> 01:47:23.380]  Так что получается плей дерево работает.
[01:47:23.380 --> 01:47:28.380]  Ну, сплей работает, ну и как следует.
[01:47:28.380 --> 01:47:31.380]  А на основании вома мы все уже выделили.
[01:47:31.380 --> 01:47:34.380]  То есть мы уже воспользовались нашим методом, что если
[01:47:34.380 --> 01:47:39.380]  мистический сплей работает, то мы умеем все.
[01:47:39.380 --> 01:47:40.380]  Вот.
[01:47:40.380 --> 01:47:44.380]  Но мы как бы убедились, что ну да.
[01:47:44.380 --> 01:47:47.380]  В чем он умеет делать те же самые сплиты и мержи.
[01:47:47.380 --> 01:47:51.380]  Может быть даже проще, чем эти ваши АВЛи там всякие.
[01:47:51.380 --> 01:47:55.380]  Поэтому можно обнаружить, что там всякие там,
[01:47:55.380 --> 01:47:59.380]  то есть всякие там операции типа там массовые операции вполне себе работают.
[01:47:59.380 --> 01:48:03.380]  Но правда мы в прошлый раз не успели обсудить массовые операции.
[01:48:03.380 --> 01:48:05.380]  Или успели.
[01:48:05.380 --> 01:48:07.380]  О.
[01:48:07.380 --> 01:48:08.380]  Вот.
[01:48:08.380 --> 01:48:10.380]  А все-таки спуск до вершины, да?
[01:48:10.380 --> 01:48:11.380]  Где учитывается?
[01:48:11.380 --> 01:48:12.380]  Чего?
[01:48:12.380 --> 01:48:14.380]  Спуск до вершины, где учитывается?
[01:48:14.380 --> 01:48:18.380]  Спуск до вершины?
[01:48:18.380 --> 01:48:19.380]  Нет.
[01:48:19.380 --> 01:48:22.380]  Мы учитываем то, что мы спустились до вершины В, да?
[01:48:22.380 --> 01:48:25.380]  А потом делаем сплей, который в реальном времени работает
[01:48:25.380 --> 01:48:27.380]  вот за как раз ее глубину.
[01:48:27.380 --> 01:48:30.380]  Мы же спускались тоже за ее глубину.
[01:48:30.380 --> 01:48:33.380]  И сплей делается за глубину.
[01:48:33.380 --> 01:48:36.380]  То есть получается, что реальное время симпатически не поменялось.
[01:48:36.380 --> 01:48:38.380]  Поменялось только константа, разве что.
[01:48:38.380 --> 01:48:39.380]  Вот.
[01:48:39.380 --> 01:48:43.380]  Но учетное время оказалось хорошим.
[01:48:43.380 --> 01:48:46.380]  То есть получается мы просто в это учетное время собственно впихнули
[01:48:46.380 --> 01:48:50.380]  собственно этот спуск и не тривиальную работу с ним.
[01:48:50.380 --> 01:48:51.380]  Так что вот.
[01:48:51.380 --> 01:48:54.380]  Получилась такая красота.
[01:48:54.380 --> 01:48:55.380]  Так.
[01:48:55.380 --> 01:48:56.380]  Ну что ж.
[01:48:56.380 --> 01:48:59.380]  Московское время 10 часов 58 минут.
[01:48:59.380 --> 01:49:01.380]  И это означает, что наконец-то.
[01:49:01.380 --> 01:49:02.380]  Да.
[01:49:02.380 --> 01:49:03.380]  Как это называется?
[01:49:03.380 --> 01:49:04.380]  Значит пришло время.
[01:49:04.380 --> 01:49:05.380]  Да.
[01:49:05.380 --> 01:49:06.380]  Как это называется?
[01:49:06.380 --> 01:49:07.380]  Да.
[01:49:07.380 --> 01:49:08.380]  Это называется.
[01:49:08.380 --> 01:49:09.380]  Прошло два часа.
[01:49:09.380 --> 01:49:10.380]  Мы закончили сплей деревом.
[01:49:10.380 --> 01:49:11.380]  Пришел Денис.
[01:49:11.380 --> 01:49:12.380]  А это означает, что пришло время устроить перерыв.
[01:49:12.380 --> 01:49:13.380]  Так.
[01:49:13.380 --> 01:49:14.380]  Ну вот.
[01:49:14.380 --> 01:49:15.380]  Так.
[01:49:15.380 --> 01:49:16.380]  Ну вот.
[01:49:16.380 --> 01:49:17.380]  Это что?
[01:49:17.380 --> 01:49:18.380]  Р Fernandes.
[01:49:18.380 --> 01:49:19.380]  Так.
[01:49:19.380 --> 01:49:20.380]  Ну вот.
[01:49:20.380 --> 01:49:21.380]  Так.
[01:49:21.380 --> 01:49:22.380]  Р Fernandes.
[01:49:22.380 --> 01:49:23.380]  Так.
[01:49:23.380 --> 01:49:24.380]  Ну вот.
[01:49:24.380 --> 01:49:25.380]  А так.
[01:49:25.380 --> 01:49:37.740]  так ну вот так ну вот
[01:49:37.740 --> 01:49:43.740]  видно что-нибудь
[01:49:43.740 --> 01:49:50.460]  сильно поменялось да
[01:49:50.460 --> 01:50:00.780]  совсем темно стало так ну давайте немножко пробежимся по кое-чему
[01:50:00.780 --> 01:50:13.940]  давайте пробежимся и так значит еще раз тогда вспомним значит как бы значит у
[01:50:13.940 --> 01:50:20.220]  нас все деревья которые мы изучили соответственно мы изучили четыре дерева все они являются так
[01:50:20.220 --> 01:50:28.020]  называем сплит мёрч 3 но падать сервинг ведем рандомно донную суть вы понимаете то есть можно
[01:50:28.020 --> 01:50:34.820]  распиливать на сплит ну соответственно да вот но заметим что если вас просто есть сплит мёрч то
[01:50:34.820 --> 01:50:42.420]  в общем можно и катаю порядковую статистику при желании искать вот ну собственно но вот ну собственно
[01:50:42.420 --> 01:50:51.460]  во всех деревьях это не сильно сложно будет вот вот ну совсем в принципе вот да можно даже
[01:50:51.460 --> 01:50:57.300]  убедиться что код будет выглядеть вот например сплит дерево примерно вот таким образом вот видно
[01:50:57.300 --> 01:51:05.140]  да вот ну то есть заметим вот чем приятно сплит дерево это то что как бы сильно то есть ничего
[01:51:05.140 --> 01:51:08.620]  то есть как напоминаю никаких вариантов нет единственное конечно что память вам хранить
[01:51:08.620 --> 01:51:13.700]  придется потому что по-видимому все-таки избавиться от указателя на родителя вам
[01:51:13.700 --> 01:51:21.020]  все-таки не удастся вот ну а так вы храните ключик но и конечно для это если вы хотите
[01:51:21.020 --> 01:51:27.420]  искать скажем катаю порядковую статистику то сайс конечно искать надо вот значит что еще у нас
[01:51:27.420 --> 01:51:32.940]  есть значит сайс у нас енот но сайс есть но соответственно как и как делать собственно поиск
[01:51:32.940 --> 01:51:37.540]  катого элемента если у вас есть этот сайс но в общем-то думаю стандартный код тут думаю никаких
[01:51:37.540 --> 01:51:45.900]  проблем особо нет или есть вот ну тут да думаю там во всех декортиачах вы тоже неоднократно
[01:51:45.900 --> 01:51:54.740]  делали вот вот ну дальше у нас так ну что у нас возникает да но ладно тут-то тут возникает всякие
[01:51:54.740 --> 01:52:01.340]  там мы же говорили что у нас есть деревья по неявному ключу это прошлый раз обсуждали да вот ну давайте
[01:52:01.340 --> 01:52:06.420]  так на всякий случай отметим да что как-то что там что такое дерево по неявному ключу то есть
[01:52:06.420 --> 01:52:10.460]  мы отказываемся от требований что элементы от сортированной воображаем их себе как массив и
[01:52:10.460 --> 01:52:17.380]  тогда с этим массивом можно делать на самом деле там всякие веселые операции например там скажем
[01:52:17.380 --> 01:52:26.060]  сделаем циклический сдвиг дерева чем не на один элемент она ну ну вот но оказывается понятно как
[01:52:26.060 --> 01:52:31.940]  это делать то сделаем один сплит и один мерч просто тех же двух деревьев то в другом порядке вот
[01:52:32.020 --> 01:52:38.440]  соответственно можно сделать на подотрезке вот но можно одному элементу за uno му присвоить
[01:52:38.440 --> 01:52:43.040]  элемент но как бы это делается там 2 сплита 2 мерца ну там зависимости от твscene там можно
[01:52:43.040 --> 01:52:48.260]  скажем сумму поддерживать то есть там можно целую инфраструктуру на эту тему сделать и здесь я вот
[01:52:48.260 --> 01:52:52.020]  на всякие случаи давайте поговорим потому что мало ли там иногда и ту инфраструктуру можно
[01:52:52.020 --> 01:52:59.220]  очень не оптимально писать вот допустим вы хотите там скажем хранить делать сумму на подотрезке да
[01:52:59.220 --> 01:53:06.100]  что нам для этого нужно но во-первых значит сразу отметим не помешают вот
[01:53:06.100 --> 01:53:12.620]  такие 2 там мелкие функции вот видно да но то есть знаете там будет очень
[01:53:12.620 --> 01:53:16.340]  удобно дай я хочу там узнать какая сумма улева по дерева ну желать то вот
[01:53:16.340 --> 01:53:20.540]  чтобы в этой функции был рассмотрен случай когда это дерево пустое но но и
[01:53:20.540 --> 01:53:27.900]  соответственно суммой вот значит но конечно вообще когда вы там были как бы
[01:53:27.980 --> 01:53:31.740]  фраза play деревья вам постоянно эти деревья придется как-то пер lasciMike
[01:53:31.740 --> 01:53:34.780]  от пилиḿ Absolute подвешивать куда-то так с другой стороны лета в другую
[01:53:34.780 --> 01:53:40.200]  вершину поэтому для того но вот а вам нужно поддерживать сумму на подделье
[01:53:40.200 --> 01:53:45.800]  правда то есть как бы что такое сумма это сумма на териам и получается тогда вам
[01:53:45.800 --> 01:53:51.480]  неплохо было бы уметь sahi couper веси товарищ разр helen или как бы
[01:53:51.480 --> 01:53:56.100]  размер посчитан правильно а вот корме не факт потому что бы только что к этому
[01:53:56.100 --> 01:54:03.700]  у коги чуть новое подвесили поэтому для этого нужна функция recalculate вот ну и по сумме то
[01:54:03.700 --> 01:54:12.620]  же самое вот так что вот примерно так это теперь выглядит желательно объединить это в единую
[01:54:12.620 --> 01:54:21.500]  функцию recalculate и в общем-то хорошо вот то есть дальше там появляются уже технические всякие
[01:54:21.500 --> 01:54:29.940]  функции типа там connect и disconnect которая там дисконнект говорит что вот у вас есть корень
[01:54:29.940 --> 01:54:37.900]  есть допустим у него ребенок пожалуйста отпилите от него ребенок но вот я сейчас конечно не самый
[01:54:37.900 --> 01:54:42.980]  оптимальный по асимптутике там по именно времени там константе код но по камере видите он рабочий
[01:54:42.980 --> 01:54:48.860]  то есть есть команда disconnect которая сказала что соответствующего ребенка нету вот так но
[01:54:48.860 --> 01:54:56.940]  надеюсь вас вот этот тренажный оператор слева от присваивания не пугает нет ну естественно вот
[01:54:56.940 --> 01:55:02.780]  значит ну тут вот все там аккуратно какие-то случаи смотря но и конечно вызвать recalculate
[01:55:02.780 --> 01:55:12.780]  обязательно так ну что еще тут надо ну тут вот да ты хит всякое такое таки делаем ну вот ну и
[01:55:12.780 --> 01:55:18.780]  соответственно connect то есть куда подвесить ну тоже вот можно делать recalculate то есть ну
[01:55:18.780 --> 01:55:23.180]  то есть тут такой инфраструктурный код что типа по камере железобетонно работает да то есть когда
[01:55:23.180 --> 01:55:27.340]  вы пишете там большой сложный код у вас особенно поначалу будет желание чтобы код в первую очередь
[01:55:27.340 --> 01:55:33.620]  заработал а там работает он за 10 логарифом филиза там за 6 логарифов это вас уже не так сильно будет
[01:55:33.620 --> 01:55:46.900]  волновать главное что работает вообще но вот ну да а да везде господи при любом повороте вам
[01:55:46.900 --> 01:55:53.540]  придется делать disconnect и connect там собственно придется на этом при повороте скажем вам придется
[01:55:53.540 --> 01:56:00.740]  отпилить дерево бета из одного места и подвести его другому например вот ну и там эти все то есть
[01:56:00.740 --> 01:56:06.740]  там этих коннектов дисконнектов будет много вот но на самом деле да если включать какой-нибудь
[01:56:06.740 --> 01:56:13.940]  дикартово дерево то конечно как вы уже знаете там реализация практически идентична впрочем как
[01:56:13.940 --> 01:56:19.260]  мы уже с вами знаем то на самом деле если мы включим овл там сплит и мерч в овл красночерных
[01:56:19.260 --> 01:56:29.860]  деревьев то тоже никто в общем-то тоже суть останется прежней вот ну там вот что-то еще можно делать
[01:56:29.860 --> 01:56:35.500]  вот ну значит давайте типичная ситуация предположим что вы хотите изменять элементы
[01:56:35.500 --> 01:56:45.500]  находить сумму на отрезке вот вот но заметим что кстати изменять элемент с плей дерева в общем
[01:56:45.500 --> 01:56:50.580]  вообще становится максимально приятно потому что конкретно с плей деревья обратить внимание
[01:56:50.580 --> 01:56:57.100]  вы как бы просто нашли этот элемент достали его естественно в корень да и после этого вы можете
[01:56:57.100 --> 01:57:05.820]  спокойно в этом корне сделать переприсваивание и пересчитать сумму удобно правда это не вот это
[01:57:05.820 --> 01:57:11.060]  даже как и круче чем в этой вашей дикарте очки вы сплетите тот элемент поменять там в бюджете
[01:57:11.060 --> 01:57:18.420]  обратно тут вон вообще на халяву так что зачем вам дикартовые деревья пишите с плей вам понравится
[01:57:18.420 --> 01:57:31.820]  вот не надо так кто-то и прикол вы ее в корень достали поэтому там никаких проблем нет даже
[01:57:31.820 --> 01:57:41.700]  откреплять не надо просто один рекалькулей ты рад вот чего туда а теперь смотрите но если у
[01:57:41.700 --> 01:57:46.220]  нас есть сабсермент какой-нибудь там то есть одно самое главное что если вы хотите делать
[01:57:46.220 --> 01:57:51.940]  операцию на подотрезке то конечно вам нужна инфраструктура которая позволяет вам вы сплетить
[01:57:51.940 --> 01:57:59.380]  подотрезок то есть разбить дерево на три дерева средние из которых это элементы из нужного вам
[01:57:59.380 --> 01:58:08.140]  подотрезка понимаете да вот то есть в общем то здесь можно прям так и написать что есть сплит
[01:58:08.140 --> 01:58:13.900]  есть мер штамм и так далее но есть там всякие нот то есть как считать с помощью этого сумму да
[01:58:13.900 --> 01:58:19.540]  очень просто вы сплитчиваем нужный подотрезок записываем сумму значит вмерживаем подотрезок
[01:58:19.540 --> 01:58:30.260]  обратно радуемся понимаете да вот так но ладно я раскуер рамку это мы в прошлый раз обсуждали
[01:58:30.260 --> 01:58:37.140]  обсуждали обсуждали обсуждали там так здесь джойн спар стейбл мы с вами уже тоже обсудили так
[01:58:37.140 --> 01:58:46.180]  дерево отрезков обсудили вот да но на всякий случай показываю что на всякий случай как писать
[01:58:46.180 --> 01:58:49.980]  дерево отрезков с операциями снизу то есть помните если вы изменяете только один элемент
[01:58:49.980 --> 01:58:56.700]  боже вас упасти писать рекурсию потому что как бы вот как бы будет версия которая работает просто
[01:58:56.700 --> 01:59:10.980]  тупо как бы в общем и пишется проще и работает быстрее ну ну и нет но тут уже на ваше усмотрение
[01:59:10.980 --> 01:59:16.020]  если вы будете писать дерево пол интервалов будет еще круче но это дерево отрезков да
[01:59:16.020 --> 01:59:29.380]  что я боюсь отвечать на этот вопрос как мне показывает практика если я прям скажу
[01:59:29.380 --> 01:59:38.660]  что там все не будет задачи значит все что угодно произойдет мы сегодня не будет вот я его да вот
[01:59:39.380 --> 01:59:45.220]  я просто прошла да да я про что-то говорил что хотелось бы действительно этой недели
[01:59:45.220 --> 01:59:50.260]  но с этим на той неделе встать и я радостно и проболел ее раз на всю практически эту неделю
[01:59:50.260 --> 02:00:04.300]  только там от концу недели собственно там более-менее очухался а потом как я чуть-чуть не так
[02:00:04.300 --> 02:00:15.740]  захотелось ой лучше ничего не буду обещать задачки но так вот идем дальше ладно значит теперь
[02:00:15.740 --> 02:00:23.980]  смотрите но теперь переходим к операциям сверху так ну вот ну как дот но операции
[02:00:23.980 --> 02:00:31.220]  сверху дала в дереве отрезков так надо подробнее разбирать нет это мы по-моему не разбирали
[02:00:34.300 --> 02:00:43.900]  нет смотрите вот это у нас было да но поиск вот такой суммы это было до снизу это мы
[02:00:43.900 --> 02:00:53.180]  смотрели а вот сверху мы не обсуждали вот нет надо ли тут кому-то это подробнее обсуждать или
[02:00:53.180 --> 02:01:00.900]  не надо хорошо вот ну вот но отметим здесь что есть вот стандартный код но тоже он я думаю вам
[02:01:00.900 --> 02:01:11.940]  без сомнения известен вот чем такой код сверху приятен да ну вот примерно вот этим вот да но
[02:01:11.940 --> 02:01:17.100]  тут написано какой-то текст но просто оказывается что очень удобно действительно делать присваивание
[02:01:17.100 --> 02:01:24.380]  на подотреске с помощью технологии отложенных операций чем она заключается ну заключается она
[02:01:24.380 --> 02:01:31.540]  в том что если вы например решили сделать присваивание на вот таком подотреске да с точки
[02:01:31.540 --> 02:01:36.780]  зрения старой версии дерево отрезка вы должны вот все тут раскрашенные хоть ваше это элементы
[02:01:36.780 --> 02:01:42.420]  поменять согласны ну вот нет не согласно надо поменять не только раскрашенные элементы но
[02:01:42.420 --> 02:01:50.420]  еще и вот эти вот потому что они как бы тоже изменились да но нет вот те которые да но их
[02:01:50.420 --> 02:01:56.740]  все равно надо поменять то есть по сути надо поменять все дерево вот но мы четыре мы говорим
[02:01:56.740 --> 02:02:02.540]  так вот надо поменять вот эту вершину все я по дереву но вы так но мы же операции делаем только
[02:02:02.540 --> 02:02:09.100]  сверху и тогда говорим что пока мы не пойдем ее детей в общем-то в них ничего делать не надо
[02:02:09.100 --> 02:02:17.300]  потому что а все равно как бы но потому что действительно зачем но в том плане что если то
[02:02:17.300 --> 02:02:22.580]  есть как бы то есть пока мы туда не пойдем в общем-то нам и по барабану что там хранится главное
[02:02:22.580 --> 02:02:29.060]  что когда мы туда придем там все хорошо да то знаете это как это и сыкла пока комната пока в
[02:02:29.060 --> 02:02:33.660]  комнате темно нам абсолютно все равно что самое главное что когда свет включится чтобы там было
[02:02:33.660 --> 02:02:43.620]  все в порядке вот понятна логика да вот то есть поэтому мы говорим то есть это но то есть мы в
[02:02:44.060 --> 02:02:49.740]  говорим по принципу что это называется надо идти в детей не надо ну значит ладно я им потом
[02:02:49.740 --> 02:02:55.340]  передам когда надо будет если кто-то придет скажет я хочу увидеть детей мы говорим так
[02:02:55.340 --> 02:03:01.740]  сейчас одну минуточку и быстренько передаем им вот то есть видите получается что мы вот
[02:03:01.740 --> 02:03:06.980]  в эти вершины никого не идем а идем вот в эти но вот но если бы но обратить внимание знаете
[02:03:06.980 --> 02:03:11.980]  тут получается очень красивая иногда ситуация то есть есть у вас такая последовая такая вот
[02:03:11.980 --> 02:03:16.900]  последовательная операция получается то есть эти получается так вот какой-нибудь вот этот
[02:03:16.900 --> 02:03:24.860]  элемент говорит я гордая пятерочка но вот его родитель на самом деле ты двоечка но ты пока об
[02:03:24.860 --> 02:03:31.900]  этом не знаешь на них с мета удобным взглядом смотрит дедушка и говорит на самом деле вы все
[02:03:31.900 --> 02:03:41.380]  единички ну вот но этого я тоже не скажу кстати более того бедная пятерочка даже не узнает что
[02:03:41.700 --> 02:03:50.100]  даже никогда не узнает что она была двоечкой но потому что прежде для того чтобы пока мы до
[02:03:50.100 --> 02:03:55.820]  нее дойдем обнаружится так слушай ты передал что у тебя дети двоечки нет ой спасибо и не надо
[02:03:55.820 --> 02:04:05.340]  они уже единички соответственно да вот так что примерно таким вот образом это будет работать
[02:04:05.340 --> 02:04:15.100]  вот нашим принцип очень простой но соответственно что здесь происходит вот но здесь обнаруживаем
[02:04:15.100 --> 02:04:21.100]  да что но вот но инфраструктура здесь отметим что значит кодовые фразы здесь у нас присвоить
[02:04:21.100 --> 02:04:30.500]  на подотрезке там на под дереве и конечно мистическая операция push что такое операция push это
[02:04:30.620 --> 02:04:35.540]  операция который говорит так если у меня есть отложенная операция я также сто передаю ее детям
[02:04:35.540 --> 02:04:48.540]  ну вот ну и конечно присваивание на подотрезке может быть там здесь у нас при снот но здесь
[02:04:48.540 --> 02:04:54.060]  присваивание на подотрезке сводится к присваивании на поддельный 6 дерева отрезков правда то есть
[02:04:54.060 --> 02:04:58.660]  присваивание под дерево это что как бы я пришел к вершину в и я хочу чтобы весь подотрезок
[02:04:58.660 --> 02:05:06.780]  который ей за который она отвечает был переприсвоен на и вот ну здесь деревья
[02:05:06.780 --> 02:05:10.140]  отрезков тут приходится тоже делать какие-то ассайдон сегментом слева и
[02:05:10.140 --> 02:05:16.060]  справа ну вот но оказывается в сплее но во всяких вот с плей деревьях это
[02:05:16.060 --> 02:05:24.140]  можно делать гораздо проще ну как делать это с плей деревья так ну вот ну
[02:05:24.140 --> 02:05:30.340]  код будет выглядеть примерно так то есть там вот то есть любая операция будет
[02:05:30.340 --> 02:05:33.820]  соответственно делать так то есть вы вы сплитчиваете нужный подотрезок
[02:05:33.820 --> 02:05:40.900]  делаете на нем отложенную операцию да вы прям в корне помещаете что у тебя у
[02:05:40.900 --> 02:05:45.740]  вас есть отложенные операции потом вмёрзшим то есть обратите внимание да то
[02:05:45.740 --> 02:05:49.260]  есть разница от старой версии отличается только в том что когда мы
[02:05:49.260 --> 02:05:57.380]  идем вниз обязательно делаем пушдал вот понятно так но ладно тут ну мы никаких
[02:05:57.380 --> 02:06:01.900]  вопросов нету да то мы этого все и так уже давно знаете но здесь только вот на
[02:06:01.900 --> 02:06:06.740]  всякий случай подчеркнем важный момент да что как бы что чем приятные вот это
[02:06:06.740 --> 02:06:13.340]  дерево сплэй всякие сплеи что оказывается что то есть оказывается что
[02:06:13.340 --> 02:06:19.060]  вы можете теперь делать реверс на подотрезке но потому что оказывается что
[02:06:19.060 --> 02:06:23.060]  реверс можно свести к отложенной операции что надо чтобы делать реверс нужно
[02:06:23.060 --> 02:06:28.300]  просто посвапать местами детей и сохранить информацию о том что дорогие
[02:06:28.300 --> 02:06:31.260]  дети вас надо вы должны быть там вас надо потом развернуть
[02:06:31.260 --> 02:06:41.020]  но на самом деле ну утверждает все что поддерживает сплит мёрзшей операции
[02:06:41.020 --> 02:06:45.740]  сверху пожалуйста теперь реверс на подотрезке то есть поэтому с точки зрения
[02:06:45.740 --> 02:06:50.420]  науки до аввл умеет делать все что умеет делать все остальные деревья и у него
[02:06:50.420 --> 02:06:56.340]  логарифм честный так что зачем вам эти декартовые деревья ну кому нужно да не
[02:06:56.340 --> 02:07:03.380]  нужны нам эти декартовые деревья пишите аввл вот но правда декартовые деревья
[02:07:03.380 --> 02:07:07.860]  правда они насколько я понимаю собственно чисто из-за этого изобретались что как
[02:07:07.860 --> 02:07:14.300]  бы хотелось изобрести дерево которые очень просто пишут чего
[02:07:14.300 --> 02:07:20.500]  но не совсем как ну как вы знаете константа у него не очень все-таки но
[02:07:20.500 --> 02:07:24.260]  тут да все да все относительно да то есть помните да что все-таки при выборе
[02:07:24.260 --> 02:07:27.660]  если как бы обычно советуются декартового дерева не писать если
[02:07:27.660 --> 02:07:37.700]  можно обойтись дошечкой все-таки вот а так ну вот значит всякое бывает
[02:07:38.620 --> 02:07:45.500]  но если вот но это у нас было соответственно до да и так то есть на
[02:07:45.500 --> 02:07:51.580]  дыру в дереве отрезков и на всяких деревьях этих вот то есть на дереве по
[02:07:51.580 --> 02:08:00.300]  неявному ключу можно делать всякие операции на подотрезке вот но значит
[02:08:00.300 --> 02:08:07.580]  если но вот но на самом деле сейчас мы попытаемся неожиданно усилиться
[02:08:07.580 --> 02:08:15.540]  сейчас мы попытаемся сделать эти все эти ваши дрожки но не на дереве она
[02:08:15.540 --> 02:08:23.100]  мастер но не на массиве она дереве вот казалось бы да вот у нас есть то есть
[02:08:23.100 --> 02:08:26.180]  обычно в дереве отрезка говорят что мы хотим делать там как-то изменять
[02:08:26.180 --> 02:08:30.060]  элементы там присваивать на подотрезке там прибавлять на подотрезке сумму
[02:08:30.060 --> 02:08:36.580]  искать на подотрезке ну что-то подобное а теперь возникает такой вот
[02:08:36.580 --> 02:08:44.740]  неожиданный момент что а теперь представим себе что у вас оказывается
[02:08:44.740 --> 02:08:55.380]  не массив а дерево вот такое классическое дерево что такое дерево ну
[02:08:55.380 --> 02:09:01.900]  соответственно связанных ров без циклов да логично или вы не знаете что такое
[02:09:01.900 --> 02:09:11.140]  дерево нет как бы я не спрашиваю про дфс это сложно это очень сложные
[02:09:11.140 --> 02:09:17.980]  технологии спрашивают кое дерево нет я имею в виду что у вас там на кроме
[02:09:17.980 --> 02:09:23.980]  дискрайне и там дерево не было раз нет а
[02:09:23.980 --> 02:09:36.580]  кошмар да да что такое дерево а ну вот это как вы это авл вот это вот
[02:09:36.580 --> 02:09:43.620]  дерево да а вы вот это дерево да красно-керное вот это вот дерево да
[02:09:43.820 --> 02:10:00.620]  да сплеем она дерево да так ну да но вот ну ладно опять же что называется да не
[02:10:00.620 --> 02:10:05.220]  называется но на этот раз опять не будем прикидываться вениками действительно и
[02:10:05.220 --> 02:10:09.540]  скажем что вот у нас есть абсолютно обычно какой-нибудь подвешенный дерево а
[02:10:10.020 --> 02:10:15.660]  может и не подвешенные но самое главное что не обязательно двойчина то есть там
[02:10:15.660 --> 02:10:19.420]  степень вершины может быть какая угодно сбалансированность тоже может
[02:10:19.420 --> 02:10:26.500]  быть какая угодно и нам говорят что теперь давайте в каждой вершинке хранится
[02:10:26.500 --> 02:10:33.740]  киселка абсолютно произвольная
[02:10:39.540 --> 02:10:51.660]  вот и нам хочется на этом дереве дерево допустим фиксированные давайте еще
[02:10:51.660 --> 02:10:59.980]  что-нибудь тут порисую и на этом дереве хочется делать всякие операции ну как
[02:10:59.980 --> 02:11:06.500]  я вот какие-нибудь операции но например нам очень хочется делать операцию
[02:11:09.700 --> 02:11:18.540]  но например сумма на подотрезке но что такое подотрезок в дереве не очень понятно
[02:11:18.540 --> 02:11:24.220]  поэтому хочется делать сумму на пути от удовольствия
[02:11:24.220 --> 02:11:34.700]  но вот такая вот логичная идея но как же это делать
[02:11:34.700 --> 02:11:47.060]  действительно пути на нот а бенапа да чтобы но вот ну вот то есть да мы конечно
[02:11:47.060 --> 02:11:50.020]  можем воспользоваться тем что двумя вершинами сдается путь между ними но
[02:11:50.020 --> 02:11:57.740]  надо но да да преф суммы но на чем но к сожалению для этого нам придется ввести
[02:11:57.740 --> 02:12:06.740]  еще одну операцию на самом деле если мы хотим но здесь как бы знаете как бы
[02:12:06.740 --> 02:12:11.060]  много чего придется сделать да поэтому придется на самом деле умерить пока
[02:12:11.060 --> 02:12:16.500]  аппетиты да у нас была бы мечта то есть сразу забегай вперед у нас будет мечта
[02:12:16.500 --> 02:12:24.980]  сделать то есть надо искать сумму на путях присваивать на путях да прям на
[02:12:24.980 --> 02:12:40.140]  путях не вот к сожалению не настолько нет мы обобщаем все-таки дерево отрезков
[02:12:40.140 --> 02:12:46.940]  эти картинки поэтому пока давай поэтому умерим аппетиты да вот присваивание на
[02:12:46.940 --> 02:12:52.860]  третий все что умеет дерево отрезков мы хотим уметь на путях и более того за
[02:12:52.860 --> 02:13:04.780]  тот же самый логарифом да не залог квадрата за логариф а то мало ли там знаете кто-то вот
[02:13:04.780 --> 02:13:26.620]  но вот не но погодите как у хлд хлд для этого придет хотя бы более разминочные задачи нам
[02:13:26.620 --> 02:13:38.060]  порешать вот для этого придется просто поработать с деревом как с деревом вот
[02:13:38.060 --> 02:13:42.740]  ладно там можно много чего говорить на самом деле я могу сейчас рассказывать там про центры
[02:13:42.740 --> 02:13:48.340]  там центроиды всякие диаметры но я пожалуй пока не буду этого делать вот хотя нет ну как бы
[02:13:48.340 --> 02:13:52.300]  когда мы будем обсуждать центроидную декомпозицию конечно мы обязательно будем это делать куда же
[02:13:52.300 --> 02:14:01.580]  мы денемся вот но вообще неплохо было бы сделать так вот допустим у нас дерево повесилось ну как
[02:14:01.580 --> 02:14:10.860]  всегда это у нас бывает за какой-то курить и начнем мы просто с такой простой такой разминочной
[02:14:10.860 --> 02:14:27.100]  операции операция называется из parent ув это же не операция просто були в запрос спрашивается
[02:14:27.100 --> 02:14:36.260]  является ли вершина у предком вершины в да совершенно верно спасибо да является ли она
[02:14:36.260 --> 02:14:46.060]  родителем это как-то просто а вот является ли она предка вот но здесь возникает классическая
[02:14:46.060 --> 02:14:54.140]  технология тайм им и тайм аут то есть мы введем такое понятие как значит можем вести тайм им
[02:14:54.140 --> 02:15:04.020]  это у нас соответственно время входа так сказать если мы запустим ладно совсем не
[02:15:04.020 --> 02:15:19.100]  прикидывайся деньками dfs вот значит у нас есть вот тайм им и соответственно давайте их тайм аут
[02:15:19.100 --> 02:15:33.660]  время выхода тогда возникает такая классическая технология да ну вот то есть давайте вот
[02:15:33.660 --> 02:15:43.580]  проэмулируем чему это будет равно значит то есть 0 1 2 3 значит тут соответственно 4 вот тут
[02:15:43.580 --> 02:15:53.180]  соответственно 5 6 7 и тут соответственно 8 соответственно 9 10 ну как вы уже догадываетесь
[02:15:53.180 --> 02:16:08.100]  тут 12 потому что тут 11 13 14 15 16 и тут 18 ну потому что тут 17 вот ну а дальше тут понятно 19 20
[02:16:08.100 --> 02:16:28.460]  21 22 23 24 вот 25 26 27 28 29 30 там соответственно что там еще 31 32 34 там соответственно но тут
[02:16:28.460 --> 02:16:43.980]  33 35 36 37 39 потому что тут 38 40 41 42 43 вот то есть у каждой вершины есть подотрезок тайм
[02:16:43.980 --> 02:16:52.540]  им тайм аут то есть когда вы в нее входите когда вы ее выходите и возникает мистическое утверждение
[02:16:53.020 --> 02:17:10.780]  то есть у предок в тогда и только тогда когда соответственно временной подотрезок у является
[02:17:10.780 --> 02:17:27.180]  над отрезком отрезка от в вот то есть здесь мы пишем тайм аут от у здесь мы пишем тайм аут от
[02:17:27.180 --> 02:17:49.260]  в ну и здесь соответственно пишем тайм им от в и здесь пишем тайм инот вот вот согласны
[02:17:49.260 --> 02:18:01.740]  с таким утверждением вот отлично вот ну по всем такое наблюдение позволяет вам сделать предподсчет
[02:18:01.740 --> 02:18:10.140]  за от и из после этого за от единицы отвечать на каждый вопрос то есть прям вот идеально но
[02:18:10.140 --> 02:18:15.300]  обычно конечно отдельно эту задачу не решают естественно обычно это так то есть там насчитывается
[02:18:15.300 --> 02:18:20.380]  в предподсчете для того чтобы решать что-то более сложное то есть теперь помним что определить
[02:18:20.380 --> 02:18:28.860]  кто там чей предок мы теперь можем на халяву так так ну а теперь вот возникает вопрос что еще
[02:18:28.860 --> 02:18:38.980]  можно было бы сделать вот ну ключи но вот ну конечно ключевое без чего мы конечно работать
[02:18:38.980 --> 02:18:44.260]  с деревом не сможем а слова никак это конечно мистическая операция л ца
[02:18:44.260 --> 02:18:55.780]  экзектина хотя почему лист это вопрос конечно
[02:18:55.780 --> 02:19:12.340]  ну пусть лову страшно не но нет логичнее потому что как бы самый низкий а так минимальный
[02:19:12.340 --> 02:19:18.760]  общепредок ну хотя вот странно дайте вот тут то вот действительно потому что как бы на русском
[02:19:18.760 --> 02:19:23.820]  языке и называется наименьший общепредок почему-то пишется что это лайк сайта ассасмент
[02:19:23.820 --> 02:19:32.540]  ловость ловость нет но лост до янтс да лост лост спасибо
[02:19:32.540 --> 02:19:48.740]  вот значит лост коман анцеста то что это такое то есть по определению это не самая глубокая вершина
[02:19:48.740 --> 02:19:58.940]  да которая является предком и вершины у и вершины логично да вот значит но от внимания вопрос
[02:19:58.940 --> 02:20:11.540]  значит как же этот значит как же этого общего предка искать вот но на самом деле тут есть
[02:20:11.540 --> 02:20:20.340]  конечно два способа один способ там но то есть два способа оба требуют предподсчета за н логен
[02:20:20.340 --> 02:20:28.020]  но вот но один способ тогда потом илца ищет за логарифом а другой за от единицы
[02:20:28.020 --> 02:20:40.940]  спрашивается зачем же нам нужны оба способа а вот оказывается нужны вот но пожалуй давайте
[02:20:40.940 --> 02:20:47.540]  начнем с казалось бы менее эффективного способа т.е. менее эффективный способ подразумевает что
[02:20:47.540 --> 02:20:51.820]  вы для каждой вершины насчитайте такое понятие как значит будете насчитывать такие вещи как
[02:20:51.820 --> 02:21:15.300]  ап от v и l то есть это предок v на расстоянии да два степени вот понятно да понятно да два степени
[02:21:15.620 --> 02:21:22.220]  вот но насчитать в общем-то более менее без труда
[02:21:22.220 --> 02:21:34.140]  вот особенно если вы это считаете кстати вот в таком приятном виде ну там это уже технические
[02:21:34.140 --> 02:21:41.500]  детали но обычно вот удобно так считать но на самом деле насчитать в итоге все такие апы можно
[02:21:41.500 --> 02:21:51.860]  за н логен используя мистический факт что ап от v и l плюс 1 равно соответственно ап от ап от v и
[02:21:51.860 --> 02:22:00.460]  вот такая мистическая формула который говорит о том что что подняться на два степень плюс
[02:22:00.460 --> 02:22:07.980]  один шагов нужно подняться на два степень шагов из этой вершины подняться еще на два степень шагов
[02:22:07.980 --> 02:22:23.580]  вот так вот вот значит ну допустим вы такое за н логен насчитали но пригодится нам такое да
[02:22:23.580 --> 02:22:34.380]  вот но что но вот значит как же это насчитать теперь нет как же это использовать но эти тут
[02:22:34.380 --> 02:22:42.260]  есть разные способы на самом деле то есть есть две принципиально разные технологии вот вот
[02:22:42.260 --> 02:22:48.900]  потому что можно значит делать так предположим вот допустим вам даны вершины ув первое что вы
[02:22:48.900 --> 02:22:58.820]  делаете это за соответственно от единицы понимаете они являются ли кто-нибудь из них предком кого-то
[02:22:58.820 --> 02:23:04.740]  ну потому что если скажем в это предок у то надо просто вернуть ответ в и не парится правда
[02:23:04.740 --> 02:23:17.300]  логично вот но теперь предположим что выяснилось что у это не предок в но тогда идея будет очень
[02:23:17.300 --> 02:23:24.380]  простая значит мы будем аккуратненько вот допустим дерево у нас вот как так выглядит мы будем
[02:23:24.380 --> 02:23:30.140]  пытаться аккуратненько подниматься из вершины у по максимум вот но подниматься стараться так
[02:23:30.140 --> 02:23:40.380]  чтобы не стать предком в но будет это работать примерно так там for и равно там лог там какой
[02:23:40.380 --> 02:23:56.060]  нибудь там и так далее 0 значит там по принципу если у значит не из анцестер там от ап от у
[02:23:56.060 --> 02:24:13.540]  л запятая в то тогда мы пишем что у равно ап от у вот понятно да вот то есть тогда кажется что
[02:24:13.540 --> 02:24:20.620]  после этой операции как не сложно доказать у окажется не в лца но за один шаг до лца понимаете
[02:24:20.620 --> 02:24:26.540]  да то есть там в конце вам останется только вернуть родитель то есть заведем что есть
[02:24:26.540 --> 02:24:33.700]  получается что вот вы за логарифом собственно сам по себе это толца нашли ну кстати поднимите
[02:24:33.700 --> 02:24:46.020]  руки кто пишет толца именно так ух ты популярно спасибо да ну хотя да чаще конечно пишут обычно
[02:24:46.660 --> 02:24:55.580]  чаще вместо этого конечно вершинах просто хранят глубины и просто там пытаются сначала поднимают
[02:24:55.580 --> 02:25:00.740]  одну вершину до глубины другой об том тем подобно подобного рода бин поиском пытаются поднять эти
[02:25:00.740 --> 02:25:08.420]  вершины на нужную высоту ну и зачем это нужно то есть технология это не бесполезная там и конечно
[02:25:08.420 --> 02:25:14.300]  сейчас узнаем в кавычках нет я имею нет кстати когда я говорил по другу пишем по-другому я
[02:25:14.300 --> 02:25:19.740]  имел ввиду не то что там мы там сейчас это какие-то спортом сведем эту задачу к спортсам каким-то
[02:25:19.740 --> 02:25:25.500]  да то есть на самом деле есть просто другой способ искать лца с помощью двоичных подъемов
[02:25:25.500 --> 02:25:42.220]  нет а но в другой технологии да но в этой технологии этого не нужно да то есть альтернативная
[02:25:42.220 --> 02:25:46.980]  версия нет альтернативная версия была давайте мы ее тоже упомянем потому что тоже на самом
[02:25:46.980 --> 02:25:54.300]  деле может быть интересно альтернативная версия будет звучать так что у нас будет
[02:25:54.300 --> 02:26:03.700]  некая мистическая функция значит допустим go up от в и аж то есть типа поднимись из вершины
[02:26:03.700 --> 02:26:13.420]  в на высоту аж вот понятно да и если у нас есть эта функция то значит лца от ув после этого работает
[02:26:13.420 --> 02:26:23.140]  примерно так значит что-то такое ну во-первых если оказалось что там аж от в допустим там
[02:26:23.140 --> 02:26:31.540]  меньше чем аж от в этом аж от в это допустим там swap соответственно у и вы и после этого мы
[02:26:31.540 --> 02:26:39.340]  говорим что у точно глубже чем в поэтому у теперь равно go up там соответственно от у аж да ну и вот
[02:26:39.340 --> 02:26:47.660]  это вот все там проверить конечно если у равно равно в это ритор ну там ритор ну ну а дальше
[02:26:47.660 --> 02:26:58.780]  там дальше уже классическое for log там l равно log 0 ну и соответственно там если значит а под там
[02:26:58.780 --> 02:27:10.940]  в не равно а по туэль то соответственно в равно блаблабла тому равно блаблабла но в общем но
[02:27:10.940 --> 02:27:20.700]  принцип понятен короче думаю подробнее не надо или надо вот но просто хотелось обрести внимание
[02:27:20.700 --> 02:27:30.860]  что вот иногда используют такую функцию но к ней мы тоже соответственно будем еще обращаться вот
[02:27:30.860 --> 02:27:38.780]  значит это был go up значит зачем это вообще все нужно вот это как помогает то что заметим что
[02:27:38.860 --> 02:27:43.860]  этих двоичных подъемов можно насчитывать еще что-нибудь например сумму на двоичном подъеме
[02:27:43.860 --> 02:27:51.540]  вот насчитывали когда инль сумму на двоичном подъеме и максимой самое главное максимум и
[02:27:51.540 --> 02:27:59.560]  минимум да то есть на самом деле с помощью двойцы то есть как бы если нам дали запрос какой тип
[02:27:59.560 --> 02:28:06.260]  найти скажем там максимум на максимум на пути то как бы вы находите и лца поднимаетесь из
[02:28:06.260 --> 02:28:08.500]  каждой вершины к этому илца и как раз насчитываете
[02:28:08.500 --> 02:28:12.380]  максимум и там собственно суммируете, можно так и
[02:28:12.380 --> 02:28:13.380]  сумму искать.
[02:28:13.380 --> 02:28:17.140]  Правда, Боже у вас упаси сумму так считать.
[02:28:17.140 --> 02:28:25.780]  Хотя, погодите, прежде чем перейти, вернуться к сумме,
[02:28:25.780 --> 02:28:30.140]  ладно, мы сейчас все-таки попробуем поискать илца
[02:28:30.140 --> 02:28:31.140]  по-другому.
[02:28:31.140 --> 02:28:35.820]  С помощью метода двоичных подъемов мы делаем предподсчет
[02:28:35.820 --> 02:28:41.540]  за n log n и потом на каждый запрос отвечаем за log n, логично,
[02:28:41.540 --> 02:28:42.540]  да?
[02:28:42.540 --> 02:28:46.540]  Но есть альтернативная версия, но она заключается
[02:28:46.540 --> 02:28:50.460]  в том, что, кстати, сходство с двоичным деревом поиска.
[02:28:50.460 --> 02:28:54.540]  Заметьте, что поиск таймына, он в некотором роде похож
[02:28:54.540 --> 02:29:03.660]  на такой DFS в формате, как у нас он назывался, преордер,
[02:29:03.660 --> 02:29:07.900]  но мы знаем, что такое преордер.
[02:29:07.900 --> 02:29:10.220]  На самом деле, я заметил, что если бы вычитали только
[02:29:10.220 --> 02:29:13.300]  таймин, это был бы по факту преордер, то есть сначала
[02:29:13.300 --> 02:29:14.300]  вершина, потом дети.
[02:29:14.300 --> 02:29:18.620]  Тайм-аут очень похож на пост-ордер, да, сначала
[02:29:18.620 --> 02:29:21.620]  дети, потом вы.
[02:29:21.620 --> 02:29:26.220]  А теперь мы попробуем ввести понятие in-order.
[02:29:26.220 --> 02:29:33.580]  Понятие, да, мы его вводили, но для двоичного дерева.
[02:29:33.580 --> 02:29:36.780]  А как мы собираемся его вводить тут?
[02:29:36.780 --> 02:29:37.780]  А очень просто.
[02:29:37.780 --> 02:29:43.180]  Если я лист, то, значит, пишем меня и уходим.
[02:29:43.180 --> 02:29:49.620]  Если вы видите, если есть я и у меня куча детей, значит,
[02:29:49.620 --> 02:29:53.620]  пишем, значит, пишем первый ребенок, значит, пишем я
[02:29:53.620 --> 02:29:57.380]  первый ребенок, я второй ребенок, я третий ребенок,
[02:29:57.380 --> 02:29:59.980]  я четвертый ребенок, я пошел.
[02:29:59.980 --> 02:30:08.540]  Вот, то есть в результате это сейчас поможет неожиданно
[02:30:08.540 --> 02:30:13.020]  свести задачу ЛЦА к поиску минимума статическом массиве
[02:30:13.020 --> 02:30:14.020]  на подотрезке.
[02:30:14.020 --> 02:30:15.020]  Как это?
[02:30:15.020 --> 02:30:20.940]  Ну вот, ну да, мы уже, ну как бы раз у нас спортстейбл
[02:30:20.940 --> 02:30:24.500]  у нас уже есть, да, а при подсчет, ну как бы при подсчет
[02:30:24.820 --> 02:30:29.940]  НЛОГН нас устраивает, поэтому, значит, ну вот, ну то есть
[02:30:29.940 --> 02:30:32.980]  нет, конечно же, оговоримся, что мы будем, конечно, рассматривать
[02:30:32.980 --> 02:30:38.020]  идеальный, в кавычках, алгоритм, который будет делать предподсчет
[02:30:38.020 --> 02:30:43.660]  за УАТН, а потом все операции за УАТ1, естественно, но,
[02:30:43.660 --> 02:30:46.420]  но я думаю, мы этим не сегодня займемся.
[02:30:46.420 --> 02:30:52.980]  Думаю, мы там, думаю, мы там этими всеми четырьмя русскими
[02:30:53.060 --> 02:30:55.460]  и прочими товарищами будем развлекаться в следующий раз.
[02:30:58.260 --> 02:31:00.820]  Вот, значит, поехали.
[02:31:00.820 --> 02:31:05.460]  А, Б, ну я тут сейчас вот от балды тут какие-то названия
[02:31:05.460 --> 02:31:06.900]  вершинкам напишу.
[02:31:06.900 --> 02:31:21.300]  Е, Ф, Ж, Х, Е, Й, К, Л, М, Н, О, П, П, К, Так, Р, С,
[02:31:23.540 --> 02:31:27.860]  Т, У, В, W, Х.
[02:31:27.860 --> 02:31:30.580]  Так, ничего не пропустил.
[02:31:30.580 --> 02:31:36.100]  Да, нет, не пропустил, вон даже, тут даже две буквки
[02:31:36.100 --> 02:31:39.220]  нарисовал, да, даже перестарался, но, окей.
[02:31:39.220 --> 02:31:42.020]  И так, ИНОРДРОПХОТ.
[02:31:42.020 --> 02:31:47.620]  Знаете, как мы же, для каждой вершины будем, пишем, я, потом,
[02:31:47.620 --> 02:31:50.340]  а потом, значит, запускаемся от каждого ребенка и после
[02:31:50.340 --> 02:31:51.780]  каждого ребенка пишем меня.
[02:31:51.780 --> 02:32:01.280]  Получается примерно следующее, значит A, B, E, K, E, R, L... Ой, опять две буквы, что-то.
[02:32:01.280 --> 02:32:21.880]  L, U, L, V, W, V, X, V, L, R, E, D, E, C, M... Ой. Не, это буква O, все нормально.
[02:32:21.880 --> 02:32:27.380]  Подождите, а мы когда входим в совершину, мы ее не пишем? Пишем. А я еще не написал?
[02:32:27.380 --> 02:32:44.880]  Вы написали V, W, V... V, W, V, X, V, и я пошел. Да, все нормально. Давайте L, R, E, D, E, C, M. Ой, а это тоже O. Ой-ой-ой.
[02:32:44.880 --> 02:33:12.880]  А, это буква Q. У нас же буква Q нет больше нигде. Значит C, M, Q, N, O, P, O, N, Q. Там, соответственно, M, C, E, B, A, G, A, F, H, G, H, I, H, F, A.
[02:33:12.880 --> 02:33:27.880]  Нет, O это междометие, если что. Ну вот. Зачем мы это сделали? Сам по себе этот список ничего не дает.
[02:33:27.880 --> 02:33:31.880]  Но если мы напишем глубины этих вершин...
[02:33:57.880 --> 02:34:11.880]  Вот примерно так это будет выглядеть. То теперь оказывается, что с помощью этого мистического массива и поиска минимума на подотресках в нем можно искать L, C, A.
[02:34:11.880 --> 02:34:23.880]  Казалось бы, каким образом? Ну вот, например, хотим мы найти L, C, A между вершиной U и вершиной V, которые у нас L и N.
[02:34:24.880 --> 02:34:37.880]  Ну тогда идея такая. Давайте найдем первое вхождение массива L и первое вхождение вершины N.
[02:34:40.880 --> 02:34:45.880]  Так вот, давайте на этом подотреске между ними найдем минимум.
[02:34:46.880 --> 02:34:58.880]  Он находится однозначно. Это вершина E. В нескольких экземплярах он находится, правда? Мистическое утверждение E и есть L, C, A.
[02:35:01.880 --> 02:35:04.880]  Но остается только это доказать, правда, в общем случае.
[02:35:06.880 --> 02:35:09.880]  Но думаю, на экзамене вы докажете без труда.
[02:35:10.880 --> 02:35:11.880]  Хорошо.
[02:35:23.880 --> 02:35:26.880]  Ну а что, тогда лист вообще не писать что ли?
[02:35:28.880 --> 02:35:31.880]  Ну и потом, а если одна вершина преток другой, ну что ж.
[02:35:40.880 --> 02:35:41.880]  Ага.
[02:35:42.880 --> 02:35:44.880]  Так, ага.
[02:35:45.880 --> 02:35:50.880]  А, ну нормально, да. Значит, что же нам тогда предстоит дальше?
[02:35:52.880 --> 02:35:53.880]  Что нам предстоит дальше?
[02:35:54.880 --> 02:35:55.880]  Вот.
[02:35:56.880 --> 02:36:02.880]  Ну вот, то заметим, что этот способ, конечно, с помощью разрешенной таблицы позволит вам искать L, C, A за вот единицы.
[02:36:03.880 --> 02:36:08.880]  Ну вот, но это как бы просто работать будет как черный ящик, типа хотели L, C, A, вот вам L, C, A.
[02:36:09.880 --> 02:36:11.880]  И без какой-то там доп информации об этом.
[02:36:12.880 --> 02:36:15.880]  То есть остальной доп информации вы ковыриваете сами.
[02:36:17.880 --> 02:36:18.880]  Вот.
[02:36:19.880 --> 02:36:23.880]  Но с помощью, но чем так или иначе L, C, A мы уже искать научились.
[02:36:24.880 --> 02:36:28.880]  И теперь с помощью L, C, A мы теперь можем делать много чего.
[02:36:28.880 --> 02:36:29.880]  Ну вот, например.
[02:36:30.880 --> 02:36:33.880]  Допустим, у нас фиксированное дерево, да.
[02:36:35.880 --> 02:36:38.880]  И мы, иначе у нас какое-то вот фиксированное дерево.
[02:36:39.880 --> 02:36:43.880]  Давайте я вот эти таймыны, таймалты я, пожалуй, ликвидирую вместе с вершинами, да.
[02:36:44.880 --> 02:36:46.880]  Ой, лучше давайте легче вообще уже вот так все это сделать.
[02:36:49.880 --> 02:36:51.880]  Все, значит, L, C, A научились делать.
[02:36:52.880 --> 02:36:53.880]  Вот.
[02:36:53.880 --> 02:36:54.880]  Ну вот.
[02:36:55.880 --> 02:36:57.880]  Что, соответственно, у нас будет?
[02:36:58.880 --> 02:37:00.880]  Будет у нас пример на следующий.
[02:37:10.880 --> 02:37:11.880]  Вот.
[02:37:12.880 --> 02:37:14.880]  Ну, допустим, у нас все в порядке.
[02:37:15.880 --> 02:37:16.880]  Ну, вот.
[02:37:16.880 --> 02:37:17.880]  Вот.
[02:37:22.880 --> 02:37:23.880]  Вот.
[02:37:24.880 --> 02:37:26.880]  Ну, допустим, у нас есть какие-то вершинки, в них какие-то чиселки, как всегда.
[02:37:39.880 --> 02:37:40.880]  Так.
[02:37:40.880 --> 02:37:41.880]  Ну, вот.
[02:37:42.880 --> 02:37:43.880]  И, допустим, дерево фиксировано.
[02:37:44.880 --> 02:37:49.880]  И нам очень-очень-очень-очень хочется искать сумму на пути оттуда V.
[02:37:53.880 --> 02:37:55.880]  Вот спрашивается, как это быстро делать?
[02:38:06.880 --> 02:38:08.880]  Ну да, кто-то уже ради этого побежит писать heavy light.
[02:38:08.880 --> 02:38:11.880]  Но, боже, у вас вот почти это прямо бежать и делать.
[02:38:13.880 --> 02:38:18.880]  Потому что в случае конкретно суммы можно даже двоичные подъемы не писать.
[02:38:19.880 --> 02:38:26.880]  А вместо этого действительно для каждой вершины посчитать сумму на пути от корня до этой вершины.
[02:38:27.880 --> 02:38:32.880]  Да, в дереве, правда, вам могли не задать корень, но вы можете задать корень стандартным образом, вида вот он.
[02:38:32.880 --> 02:38:35.880]  То есть, или что-то то же самое, тыкнуть в произвольную вершину.
[02:38:36.880 --> 02:38:43.880]  Ну а так, честно, там, ну скажем так, лада, преордер обходом, значит, насчитаем сумму.
[02:38:48.880 --> 02:38:54.880]  Так, 15, тут получается 19, 17, 20, 22.
[02:38:55.880 --> 02:38:59.880]  Значит, тут получается 8, 10, 15.
[02:38:59.880 --> 02:39:03.880]  Тут получается 8, 10, 15, 21.
[02:39:04.880 --> 02:39:07.880]  Я почему 21? 16, 17, 18.
[02:39:08.880 --> 02:39:17.880]  То есть насчитали вот такую сумму, и теперь замечаем, что если мы хотим найти сумму на пути, допустим, от У до В,
[02:39:18.880 --> 02:39:24.880]  то получается, что ответ это сумма здесь, плюс сумма здесь, минус дважды сумма здесь.
[02:39:25.880 --> 02:39:26.880]  Был Сашечка.
[02:39:27.880 --> 02:39:31.880]  Да, ну ладно, плюс само еще чиселка был Сашечки еще.
[02:39:32.880 --> 02:39:34.880]  Так, это понятно, откуда я эту формулу беру, да?
[02:39:35.880 --> 02:39:36.880]  Да, все тут пока понятно.
[02:39:39.880 --> 02:39:42.880]  Да, поэтому я с LCI начал.
[02:39:43.880 --> 02:39:44.880]  Да.
[02:39:46.880 --> 02:39:53.880]  Нет, ну почему, от логарифма избавили, ну почему, да, мы могли в запросе избавиться от логарифма, да.
[02:39:54.880 --> 02:39:58.880]  А почему добавляем еще сумму в самой вершине?
[02:39:59.880 --> 02:40:01.880]  Мы что, два раза добавили и один раз избавили?
[02:40:02.880 --> 02:40:08.880]  Ну потому что, смотри, допустим, вот ты когда здесь прибавил вот это к этому, ты как бы весь вот этот путь прибавил два раза.
[02:40:09.880 --> 02:40:14.880]  То есть если два раза вычтешь этот путь, то как бы вот тогда получается путь без этой вершины.
[02:40:15.880 --> 02:40:19.880]  Вот, поэтому как бы саму вершинку надо, но это мелкие технические детали.
[02:40:20.880 --> 02:40:21.880]  Вот.
[02:40:22.880 --> 02:40:23.880]  Значит, это сумма.
[02:40:24.880 --> 02:40:26.880]  Но есть следующий уровень.
[02:40:28.880 --> 02:40:33.880]  Если вам нужно искать сумму и исправить один элемент.
[02:40:37.880 --> 02:40:38.880]  Что это значит?
[02:40:39.880 --> 02:40:42.880]  Ну, значит сказать, что возьми вершину V и напиши туда число X.
[02:40:43.880 --> 02:40:44.880]  И продолжи искать суммы на путях.
[02:40:44.880 --> 02:40:46.880]  Профессор, пишем хавилайт?
[02:40:47.880 --> 02:40:48.880]  Погодите.
[02:40:49.880 --> 02:40:50.880]  Не надо хавилайт.
[02:40:51.880 --> 02:40:52.880]  Да.
[02:40:53.880 --> 02:40:54.880]  Пока хавилайт не надо.
[02:40:56.880 --> 02:40:58.880]  Потому что вместо этого у нас есть...
[02:40:59.880 --> 02:41:00.880]  Дерево отрезка.
[02:41:01.880 --> 02:41:02.880]  Да, и приордер обход.
[02:41:03.880 --> 02:41:05.880]  Ну просто в чем идея?
[02:41:06.880 --> 02:41:10.880]  Просто идея заключается в том, что допустим вместо пятерки мы тут написали семерку.
[02:41:10.880 --> 02:41:12.880]  Допустим вместо пятерки мы тут написали семерку.
[02:41:15.880 --> 02:41:21.880]  Тогда заметим, что у нас тут ко всем суммам ее поддерева прибавилось двоечка.
[02:41:23.880 --> 02:41:30.880]  То есть по большому счету теперь все, что вам нужно уметь делать, это уметь делать прибавление на поддереве.
[02:41:32.880 --> 02:41:34.880]  А как делать прибавление на поддереве?
[02:41:38.880 --> 02:41:39.880]  Ну вот.
[02:41:40.880 --> 02:41:42.880]  То есть можно было сказать массовые операции прям тут.
[02:41:43.880 --> 02:41:45.880]  Делаем тут отложенную операцию, если пойдем ниже.
[02:41:46.880 --> 02:41:47.880]  Протолкнем плюс два.
[02:41:49.880 --> 02:41:51.880]  Нет, но у нас же в нашем обходе...
[02:41:52.880 --> 02:41:53.880]  Да, но совершенно верно.
[02:41:54.880 --> 02:41:58.880]  Если мы сделаем вот этот вот мистический приордер обход.
[02:42:00.880 --> 02:42:02.880]  И перенумируем вершины в соответствии с ним.
[02:42:03.880 --> 02:42:07.880]  То окажется, что все вершины поддерева представляют собой подотрезок.
[02:42:08.880 --> 02:42:12.880]  И тогда это прибавление можно просто делать в дереве отрезков.
[02:42:13.880 --> 02:42:14.880]  Да.
[02:42:15.880 --> 02:42:16.880]  Это тоже такая классическая идея.
[02:42:17.880 --> 02:42:19.880]  Ну здесь я на всякий случай проговариваю, потому что вот тут...
[02:42:20.880 --> 02:42:25.880]  Там понятно, что в целом вы наверно это знаете, но как бы там кто-то о каких-то мелочах мог не задумываться.
[02:42:26.880 --> 02:42:28.880]  Поэтому тут вот проговаривать важно.
[02:42:29.880 --> 02:42:30.880]  Вот.
[02:42:30.880 --> 02:42:38.880]  То есть получается сумму и изменение одного элемента можно вполне себе делать просто с помощью правильной перенумерации вершин и дерево отрезков.
[02:42:39.880 --> 02:42:40.880]  Вот.
[02:42:45.880 --> 02:42:46.880]  Нет, сумму ищем также.
[02:42:47.880 --> 02:42:48.880]  Ну как бы сумма...
[02:42:49.880 --> 02:42:55.880]  Это сумма на префиксе в UBI, плюс сумма на префиксе V, минус там дважды сумма на LCA.
[02:42:56.880 --> 02:42:58.880]  Но не на префиксе, а на пути.
[02:42:59.880 --> 02:43:00.880]  Вот.
[02:43:01.880 --> 02:43:03.880]  То есть ищем абсолютно так же.
[02:43:04.880 --> 02:43:07.880]  Правда, теперь уже это не завод единицы, а реально уже логарифм начинает работать, к сожалению.
[02:43:08.880 --> 02:43:09.880]  Но ничего страшного.
[02:43:10.880 --> 02:43:12.880]  Ладно, что делать?
[02:43:13.880 --> 02:43:15.880]  Мы можем сделать диджоин спорт стейбл, нет?
[02:43:16.880 --> 02:43:17.880]  Чего?
[02:43:18.880 --> 02:43:20.880]  Чем нам поможет диджоин спорт стейбл?
[02:43:21.880 --> 02:43:24.880]  Видимо ничем, но мы сможем складывать завод единицы.
[02:43:25.880 --> 02:43:26.880]  А нет.
[02:43:27.880 --> 02:43:31.880]  Да, но замечаю, что вот эти вот технологии конечно для ограниченного числа операции работают.
[02:43:32.880 --> 02:43:38.880]  Потому что если я вас попросил еще и делать присваивание там на пути, тут ваше полномочие скорее всего уже все.
[02:43:40.880 --> 02:43:41.880]  Вот.
[02:43:42.880 --> 02:43:43.880]  Соответственно.
[02:43:44.880 --> 02:43:48.880]  Вот, более того, если я даже просто попрошу вас искать максимум на пути.
[02:43:48.880 --> 02:43:55.880]  Ну ладно, вы еще где-то выкрутитесь, потому что слава богу у вас есть двоичные подъемы, на которых вы можете и максимум насчитывать, да?
[02:43:56.880 --> 02:44:02.880]  Но эти двоичные подъемы торжественно отправятся в трубу, как только вам к этому максимуму потребуют делать присваивание.
[02:44:06.880 --> 02:44:07.880]  Ну логично, да?
[02:44:08.880 --> 02:44:16.880]  Потому что как бы изменение вершины влекет за собой изменение огромного количества двоичных подъемов, просто всех двоичных подъемов, которые через вершину проходят, а их много бывает.
[02:44:16.880 --> 02:44:26.880]  Поэтому нужна, конечно, какая-то более продвинутая структура данных, если мы хотим прям сделать все то же самое, что в дереве отрезков, но на дереве.
[02:44:29.880 --> 02:44:30.880]  Ну вот, только не на массиве, а на путях.
[02:44:32.880 --> 02:44:36.880]  И нам потребуется, конечно, ее величество Heavy Light Decomposition.
[02:44:39.880 --> 02:44:40.880]  Вот. Нет. Неправильно.
[02:44:41.880 --> 02:44:42.880]  Значит, Decomposition.
[02:44:47.880 --> 02:44:49.880]  Decomposition Defease.
[02:44:52.880 --> 02:44:55.880]  Вот. Heavy, соответственно.
[02:44:57.880 --> 02:44:58.880]  Light.
[02:45:01.880 --> 02:45:02.880]  Вот.
[02:45:03.880 --> 02:45:05.880]  Вот. Красно-синяя, что-то там.
[02:45:05.880 --> 02:45:06.880]  Значит.
[02:45:07.880 --> 02:45:09.880]  Логика оказывается очень простой.
[02:45:12.880 --> 02:45:13.880]  Значит, ну вот.
[02:45:14.880 --> 02:45:15.880]  Идея будет заключаться в том...
[02:45:16.880 --> 02:45:22.880]  Ну, как бы слово Decomposition подразумевает, что мы будем, значит, дерево декомпозировать на что-то.
[02:45:25.880 --> 02:45:31.880]  Ну вот, что-то это будет в том, что дерево будет декомпозировать на что-то.
[02:45:32.880 --> 02:45:35.880]  Ну вот. Что-то это будут у нас пути.
[02:45:38.880 --> 02:45:40.880]  Ну что же, ну вот. Ну что же это за пути?
[02:45:42.880 --> 02:45:44.880]  Ну вот. Ну и сделаем вот как.
[02:45:45.880 --> 02:45:50.880]  Значит, естественно, всегда у практических любого дерева есть такое понятие, как размер под дерево, правда?
[02:45:51.880 --> 02:45:55.880]  Более известный среди мирного населения, как СЗВ, правда?
[02:45:55.880 --> 02:45:56.880]  Вот.
[02:45:58.880 --> 02:46:00.880]  Ну давайте уж. Я думаю, многие из вас используют.
[02:46:02.880 --> 02:46:03.880]  Так.
[02:46:03.880 --> 02:46:07.880]  Ну как, кто хоть раз в жизни писал как бы именно СЗВ?
[02:46:09.880 --> 02:46:11.880]  Я имею в виду, не использовал какой-нибудь синоним.
[02:46:11.880 --> 02:46:16.880]  Типа size of W, size of 3, я не знаю.
[02:46:16.880 --> 02:46:17.880]  Окей, молодцы.
[02:46:17.880 --> 02:46:18.880]  Да, логично.
[02:46:19.880 --> 02:46:20.880]  Ну да, СЗВ.
[02:46:20.880 --> 02:46:21.880]  Ну да, да, да.
[02:46:21.880 --> 02:46:24.880]  И еще метод потом. Get sub 3 size const.
[02:46:27.880 --> 02:46:28.880]  О, я, я, я.
[02:46:31.880 --> 02:46:33.880]  Вот. СЗВ.
[02:46:34.880 --> 02:46:35.880]  Что будет тут?
[02:46:35.880 --> 02:46:36.880]  Ну тут.
[02:46:37.880 --> 02:46:39.880]  Значит, тут СЗВ все понятно.
[02:46:41.880 --> 02:46:42.880]  Ну вот.
[02:46:43.880 --> 02:46:44.880]  Ну вот.
[02:46:45.880 --> 02:46:46.880]  Ну вот.
[02:46:47.880 --> 02:46:48.880]  Ну вот.
[02:46:49.880 --> 02:46:53.880]  А вот теперь пришло время вести определение.
[02:46:54.880 --> 02:46:55.880]  То есть пусть.
[02:46:57.880 --> 02:47:01.880]  Значит, УВ ребро дерева.
[02:47:06.880 --> 02:47:09.880]  И У родитель.
[02:47:09.880 --> 02:47:10.880]  Так, да.
[02:47:11.880 --> 02:47:16.880]  Значит, ребро УВ тяжелое.
[02:47:19.880 --> 02:47:20.880]  Под капсом, в смысле.
[02:47:20.880 --> 02:47:22.880]  Тяжелое, да.
[02:47:23.880 --> 02:47:27.880]  Хотя на эту тему могло быть тут это красное, там металлическое,
[02:47:27.880 --> 02:47:29.880]  или это кирпичное, там я не знаю.
[02:47:32.880 --> 02:47:33.880]  Значит, если.
[02:47:33.880 --> 02:47:38.880]  СЗВ больше либо равно половины всего СЗВ.
[02:47:38.880 --> 02:47:41.880]  То есть на вершине В висит как минимум половина всего под дерево.
[02:47:44.880 --> 02:47:45.880]  Ну вот. И.
[02:47:47.880 --> 02:47:49.880]  Соответственно, легкое.
[02:47:51.880 --> 02:47:52.880]  Иначе.
[02:47:56.880 --> 02:47:57.880]  Ну вот.
[02:47:57.880 --> 02:47:58.880]  Иначе.
[02:48:08.880 --> 02:48:09.880]  Вот.
[02:48:10.880 --> 02:48:13.880]  Вот такая, вот красота.
[02:48:21.880 --> 02:48:22.880]  Вот.
[02:48:23.880 --> 02:48:26.880]  Но сразу возникает мистическое утверждение.
[02:48:27.880 --> 02:48:35.880]  Любой вершине В.
[02:48:40.880 --> 02:48:43.880]  В вершине У.
[02:48:44.880 --> 02:48:46.880]  Инцидентно.
[02:48:51.880 --> 02:48:56.880]  Не более одного тяжелого ребра.
[02:48:57.880 --> 02:48:58.880]  Вот.
[02:49:06.880 --> 02:49:08.880]  Вот такой красивый утверждение.
[02:49:17.880 --> 02:49:23.880]  Основная его красота, что это чистейшая брехня.
[02:49:27.880 --> 02:49:28.880]  Правильно.
[02:49:29.880 --> 02:49:30.880]  Конечно.
[02:49:32.880 --> 02:49:41.880]  Верным оно станет, если я допишу здесь не более одного тяжелого ребра, ведущего в ребёнка У.
[02:49:51.880 --> 02:49:56.880]  Потому что так-то в общем-то у родителя может и тяжелое ребро вести, почему бы и нет.
[02:49:56.880 --> 02:49:57.880]  Нормальная ситуация.
[02:49:58.880 --> 02:49:59.880]  Вот.
[02:50:00.880 --> 02:50:03.880]  Ну здесь-то в таком виде, конечно, доказательство очень простое.
[02:50:04.880 --> 02:50:13.880]  Ну действительно, что если у вас есть два, так сказать, тяжёлых ребёнка, то тогда получится, что в них содержится не менее чем всё под дерево вершины В.
[02:50:14.880 --> 02:50:16.880]  А это неправда, потому что сама вершина В в них не содержится.
[02:50:18.880 --> 02:50:19.880]  Логично, да?
[02:50:20.880 --> 02:50:24.880]  Ну как вы же догадываетесь, сама вершина В в СЗВ обязательно входит.
[02:50:25.880 --> 02:50:26.880]  Вот.
[02:50:27.880 --> 02:50:38.880]  Ну теперь давайте попробуем нарисовать, какие тут ребра тяжёлые, а какие лёгкие.
[02:50:41.880 --> 02:50:42.880]  Так.
[02:50:43.880 --> 02:50:44.880]  Тут 6.
[02:50:46.880 --> 02:50:47.880]  Тут 7.
[02:50:48.880 --> 02:50:49.880]  Ну да, значит получается вот это.
[02:50:50.880 --> 02:50:51.880]  Ну здесь без вариантов.
[02:50:51.880 --> 02:50:52.880]  Ну и тут без вариантов.
[02:50:54.880 --> 02:50:57.880]  Да, не самое показательное дерево получилось, конечно.
[02:51:01.880 --> 02:51:02.880]  Вот.
[02:51:05.880 --> 02:51:06.880]  Вот.
[02:51:12.880 --> 02:51:14.880]  Ну, заметим теперь, что здесь.
[02:51:14.880 --> 02:51:19.880]  Ну вот, можно теперь заметить, что, на самом деле, что такое хэви-лайд-декомпозиция?
[02:51:20.880 --> 02:51:26.880]  Это представление дерева в виде, то есть множество вершин, в виде набора тяжёлых путей.
[02:51:27.880 --> 02:51:31.880]  То есть заметим, что вершины можно однозначно разбить на тяжёлые пути.
[02:51:32.880 --> 02:51:34.880]  Да, каждая вершина будет лежать в своём пути.
[02:51:35.880 --> 02:51:40.880]  Ну да, если вершине вообще не инцидентны тяжёлые ребра, значит она находится на тяжёлом пути.
[02:51:40.880 --> 02:51:41.880]  Вот.
[02:51:41.880 --> 02:51:42.880]  Понимаете, да?
[02:51:45.880 --> 02:51:53.880]  Ну и идея будет заключаться в том, что на каждом из этих путей мы будем на это сохранить реальное дерево отрезков.
[02:51:56.880 --> 02:51:57.880]  Вот.
[02:51:57.880 --> 02:51:58.880]  Понятен принцип, да?
[02:51:59.880 --> 02:52:04.880]  Будем сохранять реальное дерево отрезков на каждом из этих путей.
[02:52:05.880 --> 02:52:06.880]  Вот.
[02:52:07.880 --> 02:52:08.880]  Понятен принцип, да?
[02:52:09.880 --> 02:52:13.880]  Будем хранить абсолютно реальное дерево отрезков.
[02:52:14.880 --> 02:52:15.880]  То есть если там придёт...
[02:52:16.880 --> 02:52:18.880]  То есть, допустим, вот мы хотим сейчас реально дерево отрезков.
[02:52:19.880 --> 02:52:22.880]  То есть, типа, хотим искать сумму на пути и изменять там один элемент, например.
[02:52:24.880 --> 02:52:26.880]  Ну пока для разминочки один элемент.
[02:52:27.880 --> 02:52:30.880]  То есть, чтоб поменять один элемент, поменяем его вот просто в соответствующем дереве.
[02:52:31.880 --> 02:52:32.880]  А как искать теперь сумму?
[02:52:32.880 --> 02:52:35.880]  Ну или там минимум, или что вы там ищете.
[02:52:36.880 --> 02:52:37.880]  Идея будет следующей.
[02:52:38.880 --> 02:52:39.880]  Вот жили были вершины Уйве.
[02:52:40.880 --> 02:52:43.880]  И был у них мистический ЛЦА.
[02:52:47.880 --> 02:52:53.880]  Тогда, чтоб найти сумму, нужно найти сумму вот на этом пути и найти сумму на этом пути.
[02:52:54.880 --> 02:52:55.880]  Логично, правда?
[02:52:56.880 --> 02:52:57.880]  Логично.
[02:52:58.880 --> 02:53:00.880]  Так, ну теперь начинаем думать.
[02:53:01.880 --> 02:53:04.880]  Вершина У находится на каком-то пути.
[02:53:05.880 --> 02:53:07.880]  И он в тяжёлом пути.
[02:53:08.880 --> 02:53:12.880]  И он где-то, наверное, вот тут заканчивается, правда?
[02:53:15.880 --> 02:53:19.880]  Ну тогда давайте на этом пути, прямо из дерева отрезков, выковырием сумму.
[02:53:21.880 --> 02:53:22.880]  И пройдём дальше.
[02:53:23.880 --> 02:53:24.880]  Так, приходит вот эта вершина.
[02:53:25.880 --> 02:53:27.880]  У неё тоже есть какой-то путь.
[02:53:27.880 --> 02:53:30.880]  Путь, который тоже куда-то высоко идёт.
[02:53:34.880 --> 02:53:35.880]  Вот.
[02:53:36.880 --> 02:53:41.880]  Ну и наконец, кончится это в итоге тем, что мы в какой-то момент до этой ЛЦАшки дойдём.
[02:53:42.880 --> 02:53:44.880]  И у нас тут будет вот найденный путь.
[02:53:45.880 --> 02:53:46.880]  И вот мы путь отут до ЛЦА нашли.
[02:53:47.880 --> 02:53:48.880]  Понимаете, да?
[02:53:51.880 --> 02:53:52.880]  За какую симпточку мы это сделали?
[02:53:53.880 --> 02:53:54.880]  Не совсем.
[02:53:54.880 --> 02:53:55.880]  Не совсем.
[02:53:56.880 --> 02:54:07.880]  Мы это сделали за логарифом N умножить на количество вот этих вот ребер.
[02:54:14.880 --> 02:54:17.880]  Это-то да, но мы работали не за количество красных.
[02:54:18.880 --> 02:54:21.880]  Видите, мы же красные разбили на подотрески, и каждый из них обработали за логарифом.
[02:54:21.880 --> 02:54:25.880]  Ну да, но я имел в виду, что количество красных – это же самое, что количество синего.
[02:54:26.880 --> 02:54:28.880]  Количество красных чего?
[02:54:29.880 --> 02:54:30.880]  Красных ребер? Нет.
[02:54:31.880 --> 02:54:32.880]  Красных путей на нашем пути.
[02:54:33.880 --> 02:54:35.880]  Ну, количество красных путей, ну да.
[02:54:36.880 --> 02:54:37.880]  Ну там плюс один.
[02:54:38.880 --> 02:54:39.880]  Да. Ну, кстати, да.
[02:54:40.880 --> 02:54:41.880]  На самом деле, кстати, да.
[02:54:42.880 --> 02:54:45.880]  Это я тут так нарисовал, но давайте, в принципе, вот такая ситуация вполне возможна.
[02:54:46.880 --> 02:54:49.880]  Ну правда, мы это тоже рассматриваем, как типа подотрезы глины 1.
[02:54:50.880 --> 02:54:57.880]  Вот, то есть тут получится вот так, как-то тут получится вот так, тут тоже получится вот так, и еще получится вот так.
[02:54:58.880 --> 02:55:03.880]  А что именно мы имеем в виду, когда говорим о своем дереве отрезков на тяжелом пути?
[02:55:04.880 --> 02:55:09.880]  Буквально. Каждый тяжелый путь мы рассматриваем как массив вершин.
[02:55:10.880 --> 02:55:11.880]  То есть у нас несколько деревьев отрезков?
[02:55:12.880 --> 02:55:14.880]  Да. У нас, да, несколько деревьев отрезков.
[02:55:14.880 --> 02:55:15.880]  Да. Несколько деревьев отрезков.
[02:55:20.880 --> 02:55:25.880]  А, сейчас. Почему мы операцию дарим отрезкам, отрезками ценили крошлого N?
[02:55:27.880 --> 02:55:32.880]  Потому что в каждой, потому что N это общий число вершин в дереве.
[02:55:33.880 --> 02:55:36.880]  И длина каждого массива не более, чем N получается.
[02:55:37.880 --> 02:55:38.880]  Ничего лучше сделать не может, да?
[02:55:38.880 --> 02:55:46.880]  Ну, принципиально лучше не получится, потому что там получится куча рас, покоя, низы, но как бы не поможет.
[02:55:47.880 --> 02:55:50.880]  Можно вопрос? Мы уможем N на количестве синих?
[02:55:51.880 --> 02:55:52.880]  Синих ребер, которые мы встретили на пути.
[02:55:53.880 --> 02:55:54.880]  Ну, пусть так, ну, не ребер.
[02:55:55.880 --> 02:55:56.880]  Ну, могу плюс один написать, хорошо?
[02:55:57.880 --> 02:55:59.880]  Давайте я плюс один напишу, если вас это смущает.
[02:56:00.880 --> 02:56:01.880]  Да, плюс один, да.
[02:56:02.880 --> 02:56:03.880]  Давайте плюс один, да.
[02:56:04.880 --> 02:56:11.880]  Ну, потому что мы с ДОшкой пользуемся за логарифмы, а количество таких штучек, где мы воспользуемся с ДОшкой, как раз равно.
[02:56:12.880 --> 02:56:17.880]  Ну, да. Вот. Поэтому теперь мы искали самый интересный вопрос.
[02:56:18.880 --> 02:56:20.880]  Какой самый интересный вопрос?
[02:56:21.880 --> 02:56:24.880]  Да, сколько легких ребер может быть на пути?
[02:56:25.880 --> 02:56:26.880]  Не больше, чем логарифмы, а что-то раз-два раза.
[02:56:27.880 --> 02:56:29.880]  Да, мистическое синее утверждение.
[02:56:30.880 --> 02:56:49.880]  Для любой вершины В на пути от В до корня не более, чем двоичный логарифм N легких ребер.
[02:56:49.880 --> 02:56:58.880]  Так, ну, тут тоже, видимо, простенько. Думаю, даже...
[02:56:59.880 --> 02:57:00.880]  Так, тут надо объяснять почему.
[02:57:01.880 --> 02:57:04.880]  Нет, тоже все понятно. Ой, Господи, да.
[02:57:06.880 --> 02:57:11.880]  В общем, так, можно было сразу к сублимации суперэго переводить, да.
[02:57:12.880 --> 02:57:13.880]  Ну, что делать?
[02:57:14.880 --> 02:57:17.880]  Ну, да. Нет, ну, знаете, как бы...
[02:57:17.880 --> 02:57:21.880]  К сожалению, в данном случае это надо прогреть, чтобы мы с вами хоть на одном языке говорили,
[02:57:22.880 --> 02:57:23.880]  потому что выяснится потом, что как бы там...
[02:57:24.880 --> 02:57:28.880]  Для вас ХЛД, это же какая-то другая аббревиатура, и вы там доказываете что-то по-другому.
[02:57:29.880 --> 02:57:30.880]  Там всякое бывает.
[02:57:31.880 --> 02:57:34.880]  Ну, в принципе, да. Почему тут легких ребер действительно не больше, чем логарифм?
[02:57:35.880 --> 02:57:36.880]  Потому что понятно, что когда идем от вершины В до корня,
[02:57:37.880 --> 02:57:39.880]  каждый раз, когда проходим по легкому ребру, size увеличивается хотя бы в два раза,
[02:57:40.880 --> 02:57:43.880]  а когда проходим по тяжелому, size просто увеличивается.
[02:57:44.880 --> 02:57:45.880]  Да, это важно подчеркнуть.
[02:57:45.880 --> 02:57:46.880]  Да, поэтому не более, чем логарифм.
[02:57:47.880 --> 02:57:55.880]  Ну, и отсюда получается, что в таком тупом виде, значит, это уже можно оценивать как лог квадрат.
[02:58:00.880 --> 02:58:01.880]  Понимаете, да?
[02:58:02.880 --> 02:58:03.880]  Вот.
[02:58:04.880 --> 02:58:06.880]  Ну, заметим, что в таком виде, да, это, конечно, хуже, чем логарифм,
[02:58:07.880 --> 02:58:11.880]  но зато за этот лог квадрат можно делать буквально все, что делало деревоотресков.
[02:58:12.880 --> 02:58:14.880]  Правда? То есть там присваивание теперь на отрезке,
[02:58:15.880 --> 02:58:17.880]  называется прибавление на отрезке.
[02:58:18.880 --> 02:58:19.880]  Без проблем, правда?
[02:58:20.880 --> 02:58:21.880]  Или нет?
[02:58:23.880 --> 02:58:24.880]  Не совсем.
[02:58:25.880 --> 02:58:27.880]  Нет, ну все, что умело именно деревоотреск.
[02:58:28.880 --> 02:58:29.880]  Нет, на Нарейк Божий упаси.
[02:58:30.880 --> 02:58:32.880]  На Нарейк Примутейшн на подотреске тут никто не претендует.
[02:58:34.880 --> 02:58:36.880]  Так, ну и теперь, возможно, начинается самое интересное.
[02:58:36.880 --> 02:58:39.880]  А можно ли бы это было допилить до логарифма все-таки?
[02:58:46.880 --> 02:58:47.880]  Вот.
[02:58:48.880 --> 02:58:49.880]  Да.
[02:58:50.880 --> 02:58:51.880]  Но, оказывается, да, вполне можно.
[02:58:52.880 --> 02:58:53.880]  Главное просто на...
[02:58:54.880 --> 02:58:57.880]  То есть главное просто действительно оказывается на тяжелом пути, да, делать...
[02:58:58.880 --> 02:59:03.880]  Мы сделаем на каждом тяжелом пути модификацию деревоотресков.
[02:59:06.880 --> 02:59:07.880]  Вот.
[02:59:08.880 --> 02:59:11.880]  То есть мы сделаем что-то типа дерево поиска по неявному ключу,
[02:59:12.880 --> 02:59:17.880]  но весьма читерским образом будем делить массив на две части.
[02:59:19.880 --> 02:59:22.880]  Как же мы это будем делать?
[02:59:23.880 --> 02:59:24.880]  Делать мы будем так.
[02:59:25.880 --> 02:59:28.880]  Значит, вот у нас есть красный путь.
[02:59:37.880 --> 02:59:38.880]  Смотрите, на каждом...
[02:59:39.880 --> 02:59:40.880]  Ну вот.
[02:59:41.880 --> 02:59:42.880]  Вот есть у нас этот красный путь.
[02:59:43.880 --> 02:59:48.880]  На каждой из вершин висит какое-то дерево.
[02:59:52.880 --> 02:59:53.880]  Понятно, да?
[02:59:55.880 --> 02:59:56.880]  Так вот.
[02:59:57.880 --> 02:59:58.880]  Давайте последовать.
[02:59:59.880 --> 03:00:04.880]  Значит, у каждого из них объявим его размер, как С1, С2, С3 и так далее.
[03:00:05.880 --> 03:00:06.880]  Значит, С, допустим, Л.
[03:00:07.880 --> 03:00:12.880]  Значит, внимание, вес каждого поддерева сама вершина входит, да,
[03:00:13.880 --> 03:00:16.880]  но очевидно то, что висит на красном ребре не входит.
[03:00:17.880 --> 03:00:18.880]  Понятно, да?
[03:00:19.880 --> 03:00:20.880]  Сейчас еще раз.
[03:00:21.880 --> 03:00:22.880]  То есть на каждой вершине...
[03:00:23.880 --> 03:00:24.880]  На каждой вершине.
[03:00:25.880 --> 03:00:26.880]  То есть мы говорим, что у нас есть тяжелый путь.
[03:00:27.880 --> 03:00:31.880]  На каждой вершине помимо красного пути висит еще что-то на легких ребрах, правда?
[03:00:31.880 --> 03:00:32.880]  Так вот.
[03:00:33.880 --> 03:00:35.880]  Я для каждой вершины определяю вот С от нее.
[03:00:36.880 --> 03:00:41.880]  То есть сколько вершин, так сказать, на ней висит, не считая, вот, без учета тяжелого поддерева.
[03:00:42.880 --> 03:00:43.880]  Ну, если оно есть.
[03:00:44.880 --> 03:00:46.880]  Вот для этой вершины как бы это СЛ совпадает с СЗ-шкой.
[03:00:47.880 --> 03:00:49.880]  То есть СЗ-В-СЗ...
[03:00:50.880 --> 03:00:51.880]  От тяжелого ребенка, да.
[03:00:52.880 --> 03:00:53.880]  Если таковой есть.
[03:00:54.880 --> 03:00:56.880]  Вот для этой вершины у нее тяжелого ребенка нет, поэтому мы ее выпиливаем.
[03:00:57.880 --> 03:00:59.880]  Поэтому, то есть у нее СЛ совпадает с СЗ.
[03:00:59.880 --> 03:01:00.880]  Понятно, да?
[03:01:04.880 --> 03:01:07.880]  Значит, надо из этого массива сделать двоичное дерево поиска.
[03:01:08.880 --> 03:01:14.880]  Ну, если мы сделаем двоичное дерево поиска, то там все операции сверху мы будем делать прям, как и раньше делали.
[03:01:15.880 --> 03:01:16.880]  Как же мы это будем делать?
[03:01:18.880 --> 03:01:19.880]  А делать будем так.
[03:01:19.880 --> 03:01:21.880]  Мы найдем мистическую позицию И.
[03:01:24.880 --> 03:01:25.880]  Такую, что С1 плюс...
[03:01:26.880 --> 03:01:27.880]  Давайте, вот, пусть у нас С.
[03:01:28.880 --> 03:01:29.880]  Это будет просто сумма...
[03:01:30.880 --> 03:01:31.880]  Просто всех С.
[03:01:32.880 --> 03:01:34.880]  Ну, как легко убедиться, кстати, она торжественно равно.
[03:01:35.880 --> 03:01:39.880]  На самом деле, если это В1, то это тупо СЗ от В1 в первозданном виде.
[03:01:40.880 --> 03:01:41.880]  Понимаете, да?
[03:01:42.880 --> 03:01:43.880]  Так вот.
[03:01:44.880 --> 03:01:45.880]  Не совсем она же...
[03:01:46.880 --> 03:01:47.880]  В нашей постановке путь этот может закончиться...
[03:01:48.880 --> 03:01:49.880]  А, да.
[03:01:50.880 --> 03:01:51.880]  Не, в данном случае, да.
[03:01:52.880 --> 03:01:53.880]  Так вот.
[03:01:54.880 --> 03:01:55.880]  Ну, не важно.
[03:01:56.880 --> 03:01:57.880]  Давайте я это назову просто С.
[03:01:58.880 --> 03:01:59.880]  То есть это я так в скобочках помечу, потому что...
[03:02:00.880 --> 03:02:01.880]  Значит, идея такая.
[03:02:02.880 --> 03:02:03.880]  Я найду такое И.
[03:02:04.880 --> 03:02:05.880]  Ну, вот.
[03:02:06.880 --> 03:02:07.880]  И вот.
[03:02:08.880 --> 03:02:09.880]  И вот.
[03:02:09.880 --> 03:02:10.880]  Я найду такое И.
[03:02:11.880 --> 03:02:15.880]  Что С1 плюс С2 плюс и так далее.
[03:02:16.880 --> 03:02:17.880]  Плюс С и минус первое.
[03:02:18.880 --> 03:02:20.880]  Строго меньше, чем С пополам.
[03:02:21.880 --> 03:02:25.880]  Но С пополам меньше либо равен С1 плюс С2 плюс и так далее.
[03:02:26.880 --> 03:02:27.880]  Плюс С и.
[03:02:31.880 --> 03:02:33.880]  Ну, вот, короче, я буду идти слева направо.
[03:02:34.880 --> 03:02:35.880]  Набирать сумму прям.
[03:02:36.880 --> 03:02:37.880]  Суммировать, суммировать, суммировать.
[03:02:37.880 --> 03:02:39.880]  И вот эту половину всей суммы я останавливаюсь.
[03:02:44.880 --> 03:02:46.880]  То есть вот я выберу такое И.
[03:02:47.880 --> 03:02:48.880]  Так вот.
[03:02:49.880 --> 03:02:52.880]  Я объявлю, что теперь И у меня объявляется корнем дерева по неявному ключу.
[03:02:55.880 --> 03:02:58.880]  То есть тут у меня типа подотрезок от 1 до И минус 1.
[03:02:59.880 --> 03:03:01.880]  Тут подотрезок от И плюс 1 до L.
[03:03:03.880 --> 03:03:04.880]  Ну и дальше.
[03:03:04.880 --> 03:03:08.880]  На каждом из этих подотресков я начинаю строить сумму абсолютно таким же образом.
[03:03:10.880 --> 03:03:13.880]  То есть считаю сумму всех вот эсок на подотреске.
[03:03:14.880 --> 03:03:15.880]  Потом иду слева направо.
[03:03:16.880 --> 03:03:17.880]  Насчитываю префиксную сумму.
[03:03:18.880 --> 03:03:21.880]  Как только она набирает сумму пополам, то я объявляю эту вершину.
[03:03:22.880 --> 03:03:24.880]  Там корнем нового поддерева.
[03:03:25.880 --> 03:03:27.880]  Вот. Понятен принцип?
[03:03:30.880 --> 03:03:31.880]  Да нет, наверное.
[03:03:32.880 --> 03:03:33.880]  Наверное, да.
[03:03:34.880 --> 03:03:35.880]  Вот.
[03:03:38.880 --> 03:03:39.880]  Вот.
[03:03:40.880 --> 03:03:42.880]  И вот к чему у нас это приводит.
[03:03:43.880 --> 03:03:44.880]  То есть получается вот такое дерево.
[03:03:45.880 --> 03:03:49.880]  Ну заметим, что глубина каждого поддерева.
[03:03:50.880 --> 03:03:51.880]  Какова?
[03:03:52.880 --> 03:03:53.880]  Логарифм.
[03:03:54.880 --> 03:03:55.880]  Логарифм чего?
[03:03:58.880 --> 03:03:59.880]  Нашего исходного дерева.
[03:04:00.880 --> 03:04:01.880]  Ну не совсем.
[03:04:02.880 --> 03:04:06.880]  Глубина каждого дерева, она не превосходит логарифма вот этой эски.
[03:04:07.880 --> 03:04:08.880]  Понимаете, да?
[03:04:09.880 --> 03:04:12.880]  Именно у каждого дерева эска своя и нам сейчас это будет важно.
[03:04:13.880 --> 03:04:15.880]  Ну то есть с одной стороны заметим, что в каждом...
[03:04:16.880 --> 03:04:17.880]  Ну вот.
[03:04:18.880 --> 03:04:21.880]  То есть в принципе деревья получаются не более чем логарины.
[03:04:22.880 --> 03:04:23.880]  Это в принципе нормально.
[03:04:24.880 --> 03:04:26.880]  Но теперь заметим следующее.
[03:04:27.880 --> 03:04:28.880]  Что в подавляющем...
[03:04:29.880 --> 03:04:30.880]  Теперь мы будем делать аккуратно.
[03:04:31.880 --> 03:04:34.880]  Заметим, что в подавляющем большинстве случаев, кроме, может быть, одного, да?
[03:04:35.880 --> 03:04:37.880]  Нам требуется найти сумму на префиксе, правда?
[03:04:40.880 --> 03:04:41.880]  Понимаете, да?
[03:04:42.880 --> 03:04:48.880]  И на самом деле, когда мы делаем вот сумму на пути, нам нужно найти такую цепочку сумм на префиксе.
[03:04:49.880 --> 03:04:54.880]  Ну вот эту операцию мы выкинем, потому что эта операция уже за логан как-нибудь сработает, правда?
[03:04:56.880 --> 03:04:57.880]  Вот, но это уже как-нибудь там...
[03:04:58.880 --> 03:05:03.880]  Уже без труда можно доказать, что мы действительно за логан в таком дереве можем найти сумму на любом подотреске.
[03:05:04.880 --> 03:05:05.880]  Вот.
[03:05:08.880 --> 03:05:10.880]  Ну а что же делать с вот этими префиксами?
[03:05:11.880 --> 03:05:14.880]  Ну заметим, как у нас работает сумма на префиксе вообще в дереве...
[03:05:15.880 --> 03:05:17.880]  В чем-то подобном типа деревоотресков.
[03:05:19.880 --> 03:05:20.880]  Она работает так.
[03:05:20.880 --> 03:05:27.880]  Итак, вы идете в корень и говорите, так, если этот корень в нужный вам префикс не входит, то вы как бы идете в левое поддерево, да?
[03:05:30.880 --> 03:05:39.880]  Ну а в противном случае вы говорите, так, значит, берем сумму тут, прибавляем эту вершину и идем в правое поддерево, ищем там сумму на оставшемся префиксе, правда?
[03:05:41.880 --> 03:05:43.880]  То есть получается вот такой лестничный спуск, да?
[03:05:44.880 --> 03:05:46.880]  Да, аккуратный за логарифом.
[03:05:47.880 --> 03:05:53.880]  Ну, кстати, вот помните эту классическую задачу, как найти там катую единичку на подотреске в деревеотресках?
[03:05:57.880 --> 03:05:59.880]  Так, ну погибите руки, кто знает, о чем базар?
[03:06:01.880 --> 03:06:02.880]  Ага. Так, ну окей.
[03:06:03.880 --> 03:06:06.880]  Ладно, всегда, значит, все, кто не сидят глубоко в компьютере, знают, окей.
[03:06:07.880 --> 03:06:08.880]  Вот.
[03:06:11.880 --> 03:06:12.880]  Да, за логария, ну вот.
[03:06:13.880 --> 03:06:14.880]  Ну да, дан массив из нулей единиц.
[03:06:15.880 --> 03:06:16.880]  Надо поддерживать две операции.
[03:06:17.880 --> 03:06:21.880]  Первая, поменять какую-нибудь цифрку, там нолик на единичку, единичку на нолик.
[03:06:22.880 --> 03:06:28.880]  И второй тип запроса, это подотрезок от числа к, найдите в нем катую единичку.
[03:06:30.880 --> 03:06:31.880]  Такая классическая задача.
[03:06:32.880 --> 03:06:35.880]  То есть там классическая задача на вот такого рода как спуск.
[03:06:36.880 --> 03:06:41.880]  То есть пример того, как делать бинпоиск в деревеотресках за логарифом, а не за лог квадрат.
[03:06:43.880 --> 03:06:44.880]  Вот.
[03:06:45.880 --> 03:06:51.880]  Ну вот такая вот, такой вот аккуратный спуск, аккуратный спуск, собственно, ждет вас здесь.
[03:06:54.880 --> 03:06:59.880]  Но теперь я утверждаю, то есть, конечно, да, с одной стороны, в каждом дереве этот спуск будет работать как бы за логарифом,
[03:07:00.880 --> 03:07:01.880]  поэтому суммарно может быть лог квадрат.
[03:07:02.880 --> 03:07:05.880]  Но теперь я утверждаю мистический факт.
[03:07:06.880 --> 03:07:11.880]  Суммарно, на самом деле, вы спускаться будете здесь от логарифа раз.
[03:07:13.880 --> 03:07:15.880]  Почему так?
[03:07:16.880 --> 03:07:18.880]  А, в общем-то, вот почему.
[03:07:19.880 --> 03:07:20.880]  Смотрите.
[03:07:21.880 --> 03:07:23.880]  Вот, допустим, у вас такая вот цепочка путей.
[03:07:24.880 --> 03:07:26.880]  Все диоды между собой.
[03:07:27.880 --> 03:07:29.880]  Там вот этими вот легкими ребрами.
[03:07:30.880 --> 03:07:31.880]  Итак, поехали.
[03:07:32.880 --> 03:07:33.880]  Значит, смотрите.
[03:07:34.880 --> 03:07:35.880]  Давайте говорить так.
[03:07:36.880 --> 03:07:38.880]  Мы будем идти сверху вниз.
[03:07:39.880 --> 03:07:45.880]  У нас сейчас есть вот этот путь, на котором суммарно висит, ну, допустим, m вершин.
[03:07:46.880 --> 03:07:48.880]  Вот на этой вершине суммарно m висит.
[03:07:49.880 --> 03:07:54.880]  Я сейчас буду просто вершины, которые мне типа не нужны, я буду типа отпиливать.
[03:07:55.880 --> 03:07:56.880]  Вот, понятно, да?
[03:07:57.880 --> 03:07:58.880]  Как я это буду делать?
[03:07:59.880 --> 03:08:00.880]  Я буду говорить так.
[03:08:01.880 --> 03:08:02.880]  Я хочу найти сумму вот на этом префексе.
[03:08:03.880 --> 03:08:04.880]  Так, где центр этого пути?
[03:08:05.880 --> 03:08:07.880]  Так, он находится где-то здесь.
[03:08:09.880 --> 03:08:10.880]  Ну, допустим, здесь.
[03:08:11.880 --> 03:08:19.880]  Так, он, значит, на нашем, на вот этом пути не лежит, поэтому его и правое под дерево мы выкидываем из рассмотрения.
[03:08:20.880 --> 03:08:21.880]  Вот, понятно, да?
[03:08:24.880 --> 03:08:29.880]  Но заметим, что мы выкинули из рассмотрения, как минимум, m пополам вершин.
[03:08:35.880 --> 03:08:37.880]  Ну, эту-то мы тоже выкинули, потому что.
[03:08:38.880 --> 03:08:41.880]  Ну, там же у нас могло быть, где мы писали это равенство.
[03:08:42.880 --> 03:08:43.880]  Да.
[03:08:44.880 --> 03:08:45.880]  Ну.
[03:08:46.880 --> 03:08:47.880]  Ну.
[03:08:48.880 --> 03:08:52.880]  А там же у нас могло быть s1, s1 будет равно, надо будет с не единички, а потом это.
[03:08:53.880 --> 03:08:54.880]  Нет, смотрите, дело.
[03:08:55.880 --> 03:08:56.880]  Ну и что?
[03:08:57.880 --> 03:09:00.880]  Нет, дело, фишка в том, что мы сам этот корень тоже выкидываем из рассмотрения.
[03:09:01.880 --> 03:09:04.880]  А можно тебе повторить, что мы еще раз делаем с рассмотрения?
[03:09:05.880 --> 03:09:07.880]  Мы его мысленно выкидываем из рассмотрения.
[03:09:08.880 --> 03:09:10.880]  Это когда мы поднимаемся из левого под деревом?
[03:09:11.880 --> 03:09:14.880]  Нет, мы не поднимаемся ни из каких под деревьев, мы только спускаемся.
[03:09:15.880 --> 03:09:16.880]  Ну, в плане.
[03:09:17.880 --> 03:09:19.880]  То есть мы как бы говорим, что мы ищем сумму на этом пути, да?
[03:09:20.880 --> 03:09:21.880]  Такие на этом префексе.
[03:09:22.880 --> 03:09:24.880]  Так, смотрим центр этого дерева, он допустим оказался здесь.
[03:09:25.880 --> 03:09:26.880]  На префексе до развилки, да?
[03:09:27.880 --> 03:09:32.880]  Да. Допустим, он корень оказался после развилки, значит его и то, что дальше мы типа не рассматриваем дальше.
[03:09:33.880 --> 03:09:39.880]  То есть спускаемся в левое под дерево и выкидываем из рассмотрения тем самым все, что висит вот здесь и здесь, да?
[03:09:40.880 --> 03:09:41.880]  А это как минимум мем пополам, да?
[03:09:42.880 --> 03:09:43.880]  Следующий раунд.
[03:09:44.880 --> 03:09:47.880]  Так, у левого под дерево корень, допустим, оказался до развилки.
[03:09:48.880 --> 03:09:53.880]  Тогда мы выкидываем из рассмотрения ее и то, что находится до этого.
[03:09:54.880 --> 03:09:57.880]  Почему? Потому что мы просто тут за вот единицы берем сумму и добавляем к ответу, правда?
[03:09:59.880 --> 03:10:00.880]  Понимаете, да?
[03:10:01.880 --> 03:10:07.880]  Но тогда это тоже нам превращает уже, тут было м пополам, тут теперь уже осталось м на 4, ну и так далее.
[03:10:08.880 --> 03:10:10.880]  То есть каждый спуск по этому дереву уменьшает м в два раза, правда?
[03:10:12.880 --> 03:10:17.880]  Ну вот, значит делаем, бомбим, бомбим, бомбим, бомбим и вот наконец мы пришли вот в эту вершину.
[03:10:18.880 --> 03:10:20.880]  Почему то, что мы сверху откинули это м на 4?
[03:10:21.880 --> 03:10:24.880]  Потому что мы это сделали после того, как откинули это.
[03:10:25.880 --> 03:10:29.880]  Так, ну мы ее откинули, у нас исчезла м, ну как минимум он пополам, я согласен.
[03:10:31.880 --> 03:10:35.880]  Но теперь у нас остался вот этот подотрезок, на котором не более чем м пополам вершин.
[03:10:36.880 --> 03:10:37.880]  Вот.
[03:10:38.880 --> 03:10:40.880]  Да, и сам корень этот тоже откидываем.
[03:10:41.880 --> 03:10:44.880]  Да, но у нас же нет гарантии, что на одним м на 4 вершин.
[03:10:45.880 --> 03:10:48.880]  Есть. Мы же дальнейшее дерево также строили.
[03:10:49.880 --> 03:10:52.880]  Там-то корень мы тоже выбираем по тому же принципу.
[03:10:52.880 --> 03:11:06.880]  Сейчас, я не понимаю, ну то есть почему не могло произойти так, что мы выбрали корень так, что у нас слева, опять же, глубина, слева одна вершина, а справа s-1, например.
[03:11:07.880 --> 03:11:10.880]  Так мы же считаем не количество вершин.
[03:11:11.880 --> 03:11:17.880]  Мы считаем не количество вершин на пути, мы считаем количество вершин, которые висят на этих путях.
[03:11:17.880 --> 03:11:24.880]  И мы выбираем центр так, чтобы как бы здесь висело меньше половины, и здесь висело меньше половины.
[03:11:25.880 --> 03:11:27.880]  Но меньше ли бы равно.
[03:11:28.880 --> 03:11:36.880]  А потом, когда мы берём вот этот подотрезок, мы тоже считаем сумму уже для него, и тут его делим напополам так, чтобы тут висело меньше половины и тут меньше половины.
[03:11:36.880 --> 03:11:42.480]  села меньше половины, тут меньше половины. Это уже половина от того, что тут, а нет половины от глобального.
[03:11:42.480 --> 03:11:48.880]  Честно, да, но почему не может быть так, что, так я сказал, что у нас одна вершина, а есть мы сюда.
[03:11:48.880 --> 03:11:54.160]  И что? Такое может быть. В чем проблема?
[03:11:54.160 --> 03:12:00.160]  Проблема в том, что мы отсечем вот, например, вот эту одну вершину и пойдем дальше в правую, ну, к этому можно сказать.
[03:12:00.160 --> 03:12:04.560]  Да, но, значит, на этой вершине висело там очень много вершин, половина.
[03:12:04.800 --> 03:12:10.320]  Я правильно понимаю, что мы строим типа дерева отрезков просто моего типа?
[03:12:10.320 --> 03:12:17.280]  Ну, скорее дерево по неявному ключу мы строим, потому что у нас корень есть, который мы отдельно рассматриваем.
[03:12:17.280 --> 03:12:22.560]  Ну, в смысле, типа в 12 палку мы берем пополам, типа перетягиваем?
[03:12:22.560 --> 03:12:23.360]  Ну, типа.
[03:12:23.360 --> 03:12:27.360]  Ну, пополам, если считать, что все взвешены.
[03:12:29.360 --> 03:12:31.360]  Ну, типа.
[03:12:32.160 --> 03:13:00.960]  Сейчас я, ну, не знаю. Я все равно не понял, ну, то есть.
[03:13:00.960 --> 03:13:01.280]  Ну хорошо, вот мы поделили так, что у нас, с ЛЕВО, меньше чем СПОПОЛАМ, а СПРОВО БОЛЬШЕ, чем СПОПОЛАМ. Давайgentle.
[03:13:01.280 --> 03:13:02.280]  и
[03:13:02.280 --> 03:13:03.280]  и
[03:13:03.280 --> 03:13:04.280]  и
[03:13:04.280 --> 03:13:05.280]  и
[03:13:05.280 --> 03:13:06.280]  и
[03:13:06.280 --> 03:13:07.280]  и
[03:13:07.280 --> 03:13:08.280]  и
[03:13:08.280 --> 03:13:09.280]  и
[03:13:09.280 --> 03:13:10.280]  и
[03:13:10.280 --> 03:13:11.280]  и
[03:13:11.280 --> 03:13:12.280]  и
[03:13:12.280 --> 03:13:13.280]  и
[03:13:14.280 --> 03:13:15.280]  и
[03:13:16.280 --> 03:13:17.280]  и
[03:13:17.280 --> 03:13:18.280]  и
[03:13:18.280 --> 03:13:19.280]  и
[03:13:19.280 --> 03:13:20.280]  и
[03:13:20.280 --> 03:13:21.280]  и
[03:13:21.280 --> 03:13:22.280]  и
[03:13:22.280 --> 03:13:23.280]  и
[03:13:23.280 --> 03:13:24.280]  и
[03:13:24.280 --> 03:13:25.280]  и
[03:13:25.280 --> 03:13:26.280]  и
[03:13:26.280 --> 03:13:27.280]  и
[03:13:27.280 --> 03:13:28.280]  и
[03:13:28.280 --> 03:13:29.280]  и
[03:13:29.280 --> 03:13:30.280]  и
[03:13:30.280 --> 03:13:31.280]  и
[03:13:31.280 --> 03:13:32.280]  и
[03:13:32.280 --> 03:13:33.280]  и
[03:13:33.280 --> 03:13:34.280]  и
[03:13:34.280 --> 03:13:35.280]  и
[03:13:35.280 --> 03:13:36.280]  и
[03:13:36.280 --> 03:13:37.280]  и
[03:13:37.280 --> 03:13:38.280]  и
[03:13:38.280 --> 03:13:39.280]  и
[03:13:39.280 --> 03:13:40.280]  и
[03:13:40.280 --> 03:13:41.280]  и
[03:13:41.280 --> 03:13:42.280]  и
[03:13:42.280 --> 03:13:43.280]  и
[03:13:43.280 --> 03:13:44.280]  и
[03:13:44.280 --> 03:13:45.280]  и
[03:13:45.280 --> 03:13:46.280]  и
[03:13:46.280 --> 03:13:47.280]  и
[03:13:47.280 --> 03:13:48.280]  и
[03:13:48.280 --> 03:13:49.280]  и
[03:13:49.280 --> 03:13:50.280]  une
[03:13:50.280 --> 03:13:51.280]  une
[03:13:51.280 --> 03:13:52.280]  une
[03:13:52.280 --> 03:13:53.280]  une
[03:13:53.280 --> 03:13:54.280]  une
[03:13:54.280 --> 03:13:55.280]  une
[03:13:55.280 --> 03:13:56.280]  une
[03:13:56.280 --> 03:13:57.280]  une
[03:13:57.280 --> 03:13:58.280]  une
[03:13:58.280 --> 03:13:59.280]  une
[03:13:59.280 --> 03:14:00.280]  une
[03:14:00.280 --> 03:14:01.280]  une
[03:14:01.280 --> 03:14:02.280]  une
[03:14:02.280 --> 03:14:03.280]  une
[03:14:03.280 --> 03:14:04.280]  une
[03:14:04.280 --> 03:14:05.280]  une
[03:14:05.280 --> 03:14:06.280]  une
[03:14:06.280 --> 03:14:07.280]  une
[03:14:07.280 --> 03:14:08.280]  une
[03:14:09.280 --> 03:14:10.280]  une
[03:14:10.280 --> 03:14:11.280]  une
[03:14:11.280 --> 03:14:20.980]  Ну вот, то есть идея такая, что у нас есть количество актуальных вершин, то есть изначально у нас актуальными являются все вершины, все потомки вот этой вершины.
[03:14:20.980 --> 03:14:30.280]  Вот не только вот эти вот пути, а просто вообще все-все-все потомки, то есть там все, что тут вот-вот-вот висит, все вот-вот-вот висит и так далее, вот это все, все актуальные, да?
[03:14:30.280 --> 03:14:40.280]  Но на каждом шаге внутри красного дерева мы как бы там, как бы, так сказать, какую-то из псевдополовин делаем не актуальной.
[03:14:41.280 --> 03:14:49.280]  То есть как бы вот, если корень в эту сторону, значит вот эти вершины будут не актуальны. И количество актуальных вершин у нас как бы падает в два раза.
[03:14:55.280 --> 03:14:58.280]  Нет, не дерево отрезков, а вот эту структуру.
[03:14:59.280 --> 03:15:12.280]  То, что на каждом шаге мы отпиливаем половину интересных вершин, то есть актуальных вершин, это делается ровно со счет того, что мы заменили на тяжелом пути дерево отрезков на вот эту структуру.
[03:15:12.280 --> 03:15:19.280]  Ну мы заменили дерево отрезков на бинарное дерево.
[03:15:42.280 --> 03:15:59.280]  Мы, когда мы начали проходить, у нас все наше под дерево было важно, да?
[03:15:59.280 --> 03:16:00.280]  Чего?
[03:16:00.280 --> 03:16:27.280]  Ну, потому что в ДО ты просто поделишь этот список вершин пополам, и плевать, что тут висит там 100500 вершин, а тут мало.
[03:16:27.280 --> 03:16:35.280]  То есть фишка будет в том, что ты будешь выделять корень и делить на отрезки таким образом, что количество висящих тут будет делиться пополам.
[03:16:36.280 --> 03:16:44.280]  Ну, может быть так, что на одной вершине очень много висит, но поэтому мы ее в корень выносим. То есть тогда, когда идем что влево, что вправо, все равно там в два раза меньше.
[03:16:44.280 --> 03:16:52.280]  При каждом переходе по ребру в любом из наших деревьев у нас суммарное количество рассматриваемых в будущем вершин уменьшается в два раза.
[03:16:52.280 --> 03:16:56.280]  Но не совсем, когда вы переходите по легкому ребру.
[03:16:56.280 --> 03:17:02.280]  Я имею в виду, я имею в виду, пройдем прямо в том дереве, в том дереве, в котором мы построили новую структуру.
[03:17:02.280 --> 03:17:11.280]  Ну, типа да. То есть мы там вводим понятие, можно ввести там понятие еще какой-нибудь актуальной вершины, и собственно обнаружит, что…
[03:17:11.280 --> 03:17:13.280]  При спуске по вашему ребру оно уменьшается в два раза.
[03:17:14.280 --> 03:17:16.280]  Ну, типа того, да.
[03:17:21.280 --> 03:17:23.280]  Вот. Понятно?
[03:17:25.280 --> 03:17:27.280]  Слушайте, а кто-нибудь когда-нибудь это писал, кстати?
[03:17:32.280 --> 03:17:38.280]  Не, ну почему шок? Нет, ну штука, в общем-то, известная, тоже во всех там тенькофах это вроде рассказывают, насколько я знаю.
[03:17:38.280 --> 03:17:39.280]  Еще нет?
[03:17:40.280 --> 03:17:43.280]  Ну, это просто лично Филипп Грибов сказал, на самом деле.
[03:17:43.280 --> 03:17:45.280]  Кстати, это Филипп Грибов.
[03:17:45.280 --> 03:17:48.280]  С нами он решил, и Филипп Грибов, и я.
[03:17:48.280 --> 03:17:49.280]  Да?
[03:17:49.280 --> 03:17:50.280]  Он мне не решил.
[03:17:50.280 --> 03:17:51.280]  А, и?
[03:17:51.280 --> 03:17:52.280]  Наших психи играл.
[03:17:52.280 --> 03:17:58.280]  А, да. Сейчас. Хотя не вот что он мне сказал, вот это или… Нет, Level Ancestor Quarries я в статьях читал, нет.
[03:18:00.280 --> 03:18:04.280]  Вопрос, а как у нас в итоге суммарно получается?
[03:18:04.280 --> 03:18:06.280]  Он суммарно хорошо получается.
[03:18:06.280 --> 03:18:07.280]  Значит, ну еще раз.
[03:18:07.280 --> 03:18:10.280]  Так, ладно. Сейчас я, кажется, придумал, как это… Ооо.
[03:18:11.280 --> 03:18:12.280]  О.
[03:18:14.280 --> 03:18:16.280]  А Стас уже за едой пока сгонял, да?
[03:18:17.280 --> 03:18:20.280]  Ну, хорошо. Так, ну ладно, Стас, как раз вовремя пришел, конечно, да.
[03:18:22.280 --> 03:18:24.280]  Какой перерыв?
[03:18:25.280 --> 03:18:31.280]  Нет, там, знаете, там такой хренометраж, что если честно, есть просто большое желание пораньше закончить уже.
[03:18:31.280 --> 03:18:33.280]  У нас теперь две пары по полторы пары.
[03:18:34.280 --> 03:18:36.280]  Ну, две пары по полторы пары.
[03:18:36.280 --> 03:18:37.280]  Ну, да.
[03:18:42.280 --> 03:18:43.280]  Да, удобно считать так.
[03:18:44.280 --> 03:18:50.280]  Нет, я предпочитаю считать, что у нас с вами есть, как бы, четыре с половиной часа, которые мы там можем с вами полезно использовать.
[03:18:54.280 --> 03:18:55.280]  Да, ну как бы.
[03:19:02.280 --> 03:19:04.280]  Так без любви, без любви.
[03:19:07.280 --> 03:19:08.280]  А, ну вот.
[03:19:09.280 --> 03:19:10.280]  Нет, нет, нет.
[03:19:10.280 --> 03:19:11.280]  Нет, нет.
[03:19:12.280 --> 03:19:13.280]  Я читал УЗУ, нравится.
[03:19:14.280 --> 03:19:15.280]  Ну вот, значит, смотрите.
[03:19:16.280 --> 03:19:17.280]  Идея теперь будет такая.
[03:19:18.280 --> 03:19:19.280]  Значит, вот этот красный путь.
[03:19:22.280 --> 03:19:23.280]  Значит, смотрите, дело в том, что это так.
[03:19:24.280 --> 03:19:25.280]  Значит, у вас есть этот красный путь.
[03:19:25.280 --> 03:19:26.280]  Красный путь.
[03:19:27.280 --> 03:19:32.280]  Значит, он на самом деле является собой, то есть мы из него построили вот это мистическое дерево, да.
[03:19:35.280 --> 03:19:42.280]  Там не шибко сбалансированное так вот по этому параметру, но ладно, допустим, вот так так нарисуем.
[03:19:43.280 --> 03:19:44.280]  Вот.
[03:19:45.280 --> 03:19:48.280]  То есть на каждом из них есть, висит что-то синее.
[03:19:52.280 --> 03:19:53.280]  Вот.
[03:19:55.280 --> 03:19:56.280]  Вот.
[03:19:57.280 --> 03:19:58.280]  Сейчас максимально наглядно будет.
[03:20:04.280 --> 03:20:05.280]  Значит, смотрите.
[03:20:06.280 --> 03:20:07.280]  Что получается?
[03:20:08.280 --> 03:20:09.280]  Значит, идея такая.
[03:20:11.280 --> 03:20:18.280]  Значит, на самом деле, когда мы ищем сумму на префиксе, мы как бы делаем какой-то аккуратный спуск до какой-то веревки.
[03:20:18.280 --> 03:20:25.280]  Значит, на самом деле, когда мы ищем сумму на префиксе, мы как бы делаем какой-то аккуратный спуск до какой-то вершины.
[03:20:27.280 --> 03:20:28.280]  Понимаете, да?
[03:20:29.280 --> 03:20:44.280]  Так вот, давайте будем говорить, что на самом деле теперь будем говорить, что у нас как бы актуальные вершины, это те вершины, которые вот в таком смысле висят, то есть еще висят на той вершине, которую мы рассматриваем.
[03:20:45.280 --> 03:20:47.280]  То есть изначально у нас актуальны все вот эти вершины.
[03:20:49.280 --> 03:20:51.280]  Потом мы, например, решили идти влево.
[03:20:52.280 --> 03:20:54.280]  Теперь актуальными становятся только вот эти вершины.
[03:20:55.280 --> 03:21:08.280]  Но фишка в том, что мы как бы, то есть коринг мы выбирали так, что вот этих вершин как минимум там их всего, как минимум половина от всего, и вот этих вот вершин как минимум половина от всего, правда?
[03:21:09.280 --> 03:21:10.280]  Правда, что это тот же алгоритм?
[03:21:11.280 --> 03:21:12.280]  Абсолютно тот же.
[03:21:13.280 --> 03:21:14.280]  Просто я его сейчас по-другому рассказываю.
[03:21:15.280 --> 03:21:16.280]  То есть просто так нагляднее.
[03:21:17.280 --> 03:21:18.280]  Вот, значит, смотрите.
[03:21:19.280 --> 03:21:26.280]  Значит, получается, что вот сейчас вот этих вот вершин как минимум в два раза меньше, чем всего вот этого, правда?
[03:21:27.280 --> 03:21:28.280]  Понимаете, да?
[03:21:29.280 --> 03:21:31.280]  Потом мы за вот единицу переходим сюда.
[03:21:32.280 --> 03:21:37.280]  И получается, что здесь количество актуальных вершин уменьшилось еще в два раза.
[03:21:39.280 --> 03:21:42.280]  Потом мы перешли сюда и уменьшилось еще в два раза.
[03:21:43.280 --> 03:21:44.280]  Понимаете, да?
[03:21:44.280 --> 03:21:49.280]  Потом мы здесь уже из этой вершины перешли по легкому ребру.
[03:21:50.280 --> 03:21:52.280]  Вот в этом вот глобальном поддереве, да?
[03:21:57.280 --> 03:22:02.280]  И на этом поддереве обнаружился еще один путь.
[03:22:03.280 --> 03:22:04.280]  Вот, понимаете, да?
[03:22:06.280 --> 03:22:09.280]  Ну, как бы, который идентичен вот примерно вот такому.
[03:22:14.280 --> 03:22:15.280]  Вот, понимаете, да?
[03:22:17.280 --> 03:22:20.280]  Но здесь тоже мы теперь идем, допустим, влево.
[03:22:21.280 --> 03:22:23.280]  И у нас опять количество, то есть актуальные вершины.
[03:22:24.280 --> 03:22:26.280]  Это вот теперь у нас все то, что вот типа висит вот здесь, да?
[03:22:27.280 --> 03:22:31.280]  То есть это является частью того, что висело вот на этой вершине, да?
[03:22:33.280 --> 03:22:37.280]  Теперь поменяли, поменяли, вот поменяли.
[03:22:38.280 --> 03:22:39.280]  То есть тут вот висит.
[03:22:39.280 --> 03:22:45.280]  Теперь вот опять, то есть каждый раз, когда мы идем по вот этому красному дереву влево или вправо,
[03:22:46.280 --> 03:22:51.280]  неважно, допустим, идем сюда-сюда, то на каждом шаре количество актуальных вершин все равно уменьшается в два раза.
[03:22:52.280 --> 03:22:53.280]  Видите, да?
[03:22:54.280 --> 03:22:59.280]  Но здесь мы тоже, допустим, пришли куда-нибудь вот сюда, пошли тут сюда и повторили операцию.
[03:23:00.280 --> 03:23:07.280]  То есть получается, видите, мы делаем какие-то шаги внутри красных этих деревьев и по легким ребрам.
[03:23:08.280 --> 03:23:13.280]  Но получается количество шагов вот этих вот в красном дереве, их не более, чем логарифом,
[03:23:14.280 --> 03:23:16.280]  потому что на каждом шаге количество актуальных вершин уменьшается в два раза.
[03:23:17.280 --> 03:23:23.280]  Ну а количество, ну вот, для просинья ребра мы так сказать не можем, но мы знаем, что их в принципе логарифом.
[03:23:25.280 --> 03:23:30.280]  Поэтому отсюда получается, что вот в таком виде мы умеем писать heavy light за логарифом.
[03:23:30.280 --> 03:23:38.280]  И на самом деле получается с точки зрения задач деревоотресков нам без разницы дерево, это как бы на массиве мы пишем или на дереве.
[03:23:39.280 --> 03:23:40.280]  Все работает за логарифом.
[03:23:43.280 --> 03:23:45.280]  Вот кажется, здесь куда более пижальная константа.
[03:23:46.280 --> 03:23:47.280]  Да, с большей.
[03:23:48.280 --> 03:23:52.280]  А это для минимума максимума?
[03:23:54.280 --> 03:23:55.280]  А какая разница?
[03:23:55.280 --> 03:23:56.280]  А какая разница?
[03:23:57.280 --> 03:24:03.280]  Это нормально, как бы мы на этом дереве можем спокойно делать абсолютно все те же самые присваивания на подотреске,
[03:24:04.280 --> 03:24:11.280]  потому что делаются они тоже на наборе префиксов там, наборе префиксов тут, наборе префиксов тут и там одной какой-то там вот этой штуки.
[03:24:12.280 --> 03:24:14.280]  То есть это тоже самое можно делать, что из этого квадрата?
[03:24:15.280 --> 03:24:16.280]  Ну да.
[03:24:17.280 --> 03:24:23.280]  То есть просто нет, мы же деревоотресков заменили на вот эту структуру, на которой все отложенные операции также делаются.
[03:24:26.280 --> 03:24:30.280]  Прям вот, прям вот идентичненько.
[03:24:33.280 --> 03:24:34.280]  Так.
[03:24:38.280 --> 03:24:40.280]  Так, сколько у нас времени-то вообще осталось?
[03:24:43.280 --> 03:24:45.280]  В смысле меньше часа?
[03:24:46.280 --> 03:24:50.280]  Ну меньше часа это вообще называется 40 минут, с учетом того, что мы не делали второго перерыва.
[03:24:52.280 --> 03:24:53.280]  Ладно.
[03:24:53.280 --> 03:24:57.280]  Значит тогда вынужден констатировать, что лент-кат придется собирать в следующий раз?
[03:25:02.280 --> 03:25:03.280]  Чего нет?
[03:25:04.280 --> 03:25:05.280]  Очень хочется сейчас?
[03:25:06.280 --> 03:25:11.280]  Нет, я могу это организовать, но я боюсь как бы нас просто остановит лично мещерин.
[03:25:16.280 --> 03:25:20.280]  Ну там прилично, но я бы за 40 минут мы как бы это не обсудим.
[03:25:23.280 --> 03:25:26.280]  Нет, ну можем, но зачем на это тратить время?
[03:25:27.280 --> 03:25:29.280]  Нет, ребят, все гораздо проще.
[03:25:30.280 --> 03:25:33.280]  Нет, у меня для вас еще одна красивая задача, действительно.
[03:25:34.280 --> 03:25:35.280]  Нет, правда это уже не... Да.
[03:25:36.280 --> 03:25:37.280]  Да.
[03:25:38.280 --> 03:25:40.280]  То есть просто есть еще одна такая красивая задача.
[03:25:41.280 --> 03:25:43.280]  Ну как бы да, видимо в следующий раз у нас будет наверное много...
[03:25:44.280 --> 03:25:46.280]  Да, вот сегодня у нас было видимо не очень интересная такая лекция получилась.
[03:25:47.280 --> 03:25:48.280]  Вот.
[03:25:48.280 --> 03:25:53.280]  Ну половина ее, я как бы повторял то, что понятно, что вы там и так давно знаете.
[03:25:54.280 --> 03:25:55.280]  Вот.
[03:25:56.280 --> 03:25:58.280]  Ну в следующий раз видимо нам придется просматривать во-первых лент-кат.
[03:25:59.280 --> 03:26:00.280]  Ну вот.
[03:26:01.280 --> 03:26:04.280]  Ну и во-вторых конечно же видимо метод четырех русских.
[03:26:05.280 --> 03:26:06.280]  Там в куче его проявлений.
[03:26:07.280 --> 03:26:09.280]  Ну и видимо в конце видимо...
[03:26:10.280 --> 03:26:14.280]  Да, ну видимо в конце повернем еще центроиде композиционом, но это уже халява будет.
[03:26:14.280 --> 03:26:15.280]  Вот.
[03:26:16.280 --> 03:26:20.280]  Ладно, а пока у меня для вас есть такая замечательная, красивая еще одна задача,
[03:26:21.280 --> 03:26:23.280]  которая всегда в тему очень хорошо ложится.
[03:26:26.280 --> 03:26:27.280]  Вот.
[03:26:30.280 --> 03:26:34.280]  Называется она Level Ancestor Queries.
[03:26:39.280 --> 03:26:40.280]  Level Ancestor.
[03:26:41.280 --> 03:26:42.280]  Ancestor Queries.
[03:26:42.280 --> 03:26:43.280]  Ancestor Queries.
[03:26:44.280 --> 03:26:45.280]  Ancestor Queries.
[03:26:46.280 --> 03:26:47.280]  Ancestor Queries.
[03:26:48.280 --> 03:26:49.280]  Вау!
[03:26:50.280 --> 03:26:51.280]  А, в смысле предподсчет?
[03:26:52.280 --> 03:26:53.280]  Пока нет.
[03:26:54.280 --> 03:26:59.280]  Нет, в следующий раз у нас будет метод четырех русских, потом там она будет за ОАТ.
[03:27:00.280 --> 03:27:03.280]  Но как бы да, метод четырех русских тут будет решать прям все.
[03:27:05.280 --> 03:27:07.280]  То есть знаете как это, как там вот...
[03:27:08.280 --> 03:27:10.280]  Потому что знаете, вот вы знаете...
[03:27:11.280 --> 03:27:12.280]  Потому что знаете, вот вы...
[03:27:13.280 --> 03:27:14.280]  Ну как вы знаете, вот у меня есть научный руководитель.
[03:27:15.280 --> 03:27:18.280]  Ну вот, так вот лучше так, что на самом деле хорошее занятие,
[03:27:19.280 --> 03:27:22.280]  на самом деле должно быть всегда посвящено ровно одной идее.
[03:27:23.280 --> 03:27:27.280]  То есть какой-то одной идее, и надо ее рассматривать вот со всех ее, от всех возможных сторон.
[03:27:28.280 --> 03:27:29.280]  Вот.
[03:27:30.280 --> 03:27:33.280]  В общем, не очень хорошо я считаю занятия с этой точки зрения, конечно, да.
[03:27:34.280 --> 03:27:35.280]  Вот.
[03:27:35.280 --> 03:27:36.280]  Ну вот.
[03:27:37.280 --> 03:27:38.280]  Ну вот.
[03:27:39.280 --> 03:27:40.280]  Ну вот, в следующий раз мы как бы возможно приблизимся.
[03:27:41.280 --> 03:27:43.280]  То есть у нас будет в следующий раз метод четырех русских там, но как бы...
[03:27:44.280 --> 03:27:45.280]  Возможно сразу и везде.
[03:27:46.280 --> 03:27:47.280]  Две идеи, да?
[03:27:48.280 --> 03:27:49.280]  Нет, у метода четырех русских одна идея.
[03:27:50.280 --> 03:27:53.280]  Но она будет применена как минимум в задаче про РМКУ.
[03:27:54.280 --> 03:27:56.280]  Как минимум в задаче про ЛЦА.
[03:27:57.280 --> 03:28:00.280]  И это, кстати, будут даже две, два разных четырех русских.
[03:28:00.280 --> 03:28:03.280]  Ну потому что как бы, как бы есть классический алгоритм парок Колтон Бендера, да.
[03:28:04.280 --> 03:28:09.280]  Который там РМКУ сведет к ЛЦА, потом ЛЦА к РМКУ плюс-минус один, а дальше четыре русских поехали.
[03:28:10.280 --> 03:28:11.280]  Вот.
[03:28:12.280 --> 03:28:16.280]  А есть на самом деле версия, как РМКУ сводить просто напрямую без сведения к ЛЦА.
[03:28:17.280 --> 03:28:18.280]  Вот.
[03:28:19.280 --> 03:28:22.280]  Но это такая более, такая более сложная версия там, весело будет.
[03:28:23.280 --> 03:28:24.280]  Вот.
[03:28:25.280 --> 03:28:27.280]  И конечно есть четыре русских еще вот в этой задаче.
[03:28:27.280 --> 03:28:29.280]  Но тут, да, но тут мясо будет то еще, да.
[03:28:31.280 --> 03:28:33.280]  Нет, хотя нет, знаете, это, нет, там.
[03:28:34.280 --> 03:28:36.280]  Нет, знаете, настоящее мясо это Atomic Hip на самом деле.
[03:28:37.280 --> 03:28:38.280]  Вот, знаете.
[03:28:39.280 --> 03:28:40.280]  Ой, у нас будет Atomic Hip.
[03:28:41.280 --> 03:28:42.280]  Ой.
[03:28:43.280 --> 03:28:44.280]  Чего?
[03:28:45.280 --> 03:28:46.280]  Нет.
[03:28:47.280 --> 03:28:51.280]  Знаете, я целенаправленно его не пропустил, вот по какой причине.
[03:28:51.280 --> 03:28:56.280]  Значит, дело в том, что это как бы алгоритм не произвольный, это вот алгоритм именно вот на целочисленный.
[03:28:57.280 --> 03:29:02.280]  То есть как мы уже говорили, да, вот, помните, вот когда-то, мы когда-то в прошлом семестре осматривали техпатрик-сорт, помните?
[03:29:03.280 --> 03:29:04.280]  Да.
[03:29:05.280 --> 03:29:09.280]  То есть там мы прям в явном виде пользовались тем, что у нас память выглядит вот так, то есть как бы W-битные числа, да,
[03:29:10.280 --> 03:29:12.280]  мы с ними там умеем что-то делать за О от единицы.
[03:29:13.280 --> 03:29:15.280]  И вот давайте на них, там, сделаем сортировку.
[03:29:15.280 --> 03:29:18.280]  Вот выяснилось, что мы, оказывается, умеем это делать за прикольную асимптотику еще более прикольным образом, да.
[03:29:19.280 --> 03:29:20.280]  Вот.
[03:29:20.280 --> 03:29:22.280]  На самом деле там в эту сторону может там целый класс алгоритмов забабахивать.
[03:29:23.280 --> 03:29:26.280]  То есть пользуясь тем, что вот мы работаем именно с такими числами.
[03:29:27.280 --> 03:29:28.280]  Вот.
[03:29:28.280 --> 03:29:30.280]  Кстати, дерево он МД Босса, кстати, из той же категории.
[03:29:31.280 --> 03:29:33.280]  Вот мы его тоже, кстати, пропустили в кавычках.
[03:29:34.280 --> 03:29:36.280]  Хотя, на самом деле, мы его целенаправленно оставлял.
[03:29:37.280 --> 03:29:38.280]  Вот.
[03:29:38.280 --> 03:29:40.280]  И вот поэтому, я думаю, что у нас в этом видео было очень интересно.
[03:29:40.280 --> 03:29:42.280]  У нас будет просто широкий, там, собственно, широкий класс алгоритмов в эту сторону,
[03:29:43.280 --> 03:29:45.280]  который у нас, возможно, уменьшает атомик хип.
[03:29:46.280 --> 03:29:48.280]  Нет, если повезет, его уменьшает алгоритм торопа, конечно.
[03:29:49.280 --> 03:29:51.280]  Но тут как повезет.
[03:29:52.280 --> 03:29:54.280]  Потому что алгоритм торопа, это вот, действительно, настоящее мясо.
[03:29:55.280 --> 03:29:57.280]  Потому что если мы, просто, если обладеем вот это, то как бы это прям все.
[03:29:57.280 --> 03:29:59.280]  Мы вообще богами будем.
[03:30:00.280 --> 03:30:02.280]  Алгоритм на нас 3,7, да.
[03:30:03.280 --> 03:30:04.280]  3.
[03:30:05.280 --> 03:30:07.280]  Что ACPC?
[03:30:08.280 --> 03:30:09.280]  Нет, что ACPC?
[03:30:10.280 --> 03:30:12.280]  Нет, богами ACPC мы, к сожалению, от изучения этого алгоритма не станем.
[03:30:13.280 --> 03:30:15.280]  Ну, потому что так, как бы, в общем, мы, ну, мы, ну, мы, ну, мы, ну, мы, ну, мы.
[03:30:16.280 --> 03:30:17.280]  Да, да.
[03:30:18.280 --> 03:30:19.280]  Вот.
[03:30:20.280 --> 03:30:21.280]  Вот.
[03:30:22.280 --> 03:30:23.280]  Делаем, да.
[03:30:24.280 --> 03:30:25.280]  Вот.
[03:30:25.280 --> 03:30:30.680]  но потому что как всегда это будет алгоритм до корридиона он использует
[03:30:30.680 --> 03:30:34.640]  атомик хипа томик хип начинает нормально работать если n больше чем два
[03:30:34.640 --> 03:30:41.480]  в степени там 53 и в степени 12 нет там реально какая-то такая башенка стоит
[03:30:41.480 --> 03:30:45.000]  цифру вообще не помню сейчас но вот
[03:30:45.000 --> 03:31:03.240]  давай да нет вот это вот это красно у красного дерева ребра конечно же не
[03:31:03.240 --> 03:31:07.120]  совпадают с ребрами исходного как минимум потому что как бы исходно на
[03:31:07.120 --> 03:31:29.440]  этих красных ребрах это просто путь был но не совсем ну да ну типа хорошо потому
[03:31:29.440 --> 03:31:40.200]  что мы сделали преобразование так что как бы когда вы спускаетесь по красному
[03:31:40.200 --> 03:31:43.480]  ребру количество вершин и висящих вершин как бы тоже уменьшается в два
[03:31:43.480 --> 03:31:48.520]  раза правда как бы для синих это видимо перестало так это возможно так
[03:31:48.520 --> 03:32:00.400]  работать ну да для себя так хотя кстати ну да как бы да для синих как бы так
[03:32:00.400 --> 03:32:07.000]  перестало работать да но синих тоже алгоритм да за счет этого мы победили то
[03:32:07.000 --> 03:32:10.040]  есть как бы у нас две красные стали как бы хорошие а синие могли стать плохими
[03:32:10.040 --> 03:32:17.120]  но синих осталось мало вот вот ну то есть тут вот да философский крыша
[03:32:17.200 --> 03:32:20.360]  просто с какой точки зрения на это смотреть чтобы действительно всё стало
[03:32:20.360 --> 03:32:24.300]  понятному чем мне легче вот действительно смотреть что вот есть вот такой красный
[03:32:24.300 --> 03:32:28.240]  путь и мы как бы отпиливаем там типа вот эту часть потом вот эту часть потом вот
[03:32:28.240 --> 03:32:32.160]  эту часть подлите у себя пилен так что вот останется только это нет легко так
[03:32:32.160 --> 03:32:36.720]  воспринимать но тут видимо корейца на вкус и цвет фломастер и разный как
[03:32:36.720 --> 03:32:39.040]  всегда да
[03:32:39.040 --> 03:32:49.040]  А теперь задача levelAncestorQuest.
[03:32:49.040 --> 03:32:51.040]  Пока в простой версии.
[03:32:51.040 --> 03:32:53.040]  На самом деле задача простая.
[03:32:53.040 --> 03:32:55.040]  Дано дерево.
[03:32:55.040 --> 03:32:57.040]  И надо делать только один запрос.
[03:32:57.040 --> 03:33:01.040]  Тот самый goUp от v и h.
[03:33:01.040 --> 03:33:05.040]  Подымитесь из вершины v на высоту h, пожалуйста.
[03:33:05.040 --> 03:33:13.040]  С помощью двоичных подъемов мы умеем делать предподсчет за m log n.
[03:33:13.040 --> 03:33:15.040]  И сам подъем можем делать за логарифу.
[03:33:15.040 --> 03:33:17.040]  Вот, согласны?
[03:33:17.040 --> 03:33:23.040]  Так вот, наша цель, пока я не мирюсь сегодня, предподсчет сделать все еще за m log n.
[03:33:23.040 --> 03:33:27.040]  Но этот подъем делать все-таки за 1.
[03:33:27.040 --> 03:33:33.040]  Вот такая у нас мечта.
[03:33:33.040 --> 03:33:35.040]  Вот, понятно?
[03:33:35.040 --> 03:33:39.040]  Тут сейчас веселее будет.
[03:33:39.040 --> 03:33:45.040]  Нам для этого придется обсудить еще парочку декомпозиций.
[03:33:45.040 --> 03:33:47.040]  Нет, это мы как раз успеем.
[03:33:47.040 --> 03:33:49.040]  Нет, сейчас будет очень просто.
[03:33:49.040 --> 03:33:53.040]  Давайте, просто если вы меня сейчас отвлекать особенно не будете, то мы сейчас успеем.
[03:33:53.040 --> 03:33:55.040]  Значит, смотрите.
[03:33:55.040 --> 03:33:59.040]  Вот у нас была хавиллай декомпозиция.
[03:33:59.040 --> 03:34:01.040]  Забудьте.
[03:34:01.040 --> 03:34:03.040]  Это называется...
[03:34:03.040 --> 03:34:07.040]  Да, ну, во CPC жизни она как раз пригодится.
[03:34:07.040 --> 03:34:11.040]  Но слющайте другую декомпозицию.
[03:34:11.040 --> 03:34:15.040]  Longest pass decomposition.
[03:34:15.040 --> 03:34:19.040]  Значит, смотрите.
[03:34:19.040 --> 03:34:21.040]  О, ладно, я ее красеньким буду рисовать.
[03:34:21.040 --> 03:34:25.040]  Longest pass decomposition.
[03:34:25.040 --> 03:34:27.040]  Или...
[03:34:27.040 --> 03:34:35.040]  Да, почему-то она называется longest pass, хотя правильно назвать, наверное, longest depth decomposition.
[03:34:41.040 --> 03:34:43.040]  Значит, она говорит так.
[03:34:43.040 --> 03:34:45.040]  Я хочу...
[03:34:45.040 --> 03:34:49.040]  У меня есть подвешенное дерево, как всегда.
[03:34:49.040 --> 03:34:59.040]  Смотрите, я у каждой вершины, у каждой вершины, у которой есть дети, хочу выбрать одно ребро в ребенка и сказать, что оно крутое.
[03:34:59.040 --> 03:35:07.040]  То есть, заметил, что я таким образом декомпозирую дерево на хорошие пути, правда?
[03:35:07.040 --> 03:35:13.040]  Остается только вопрос, по какому принципу выбирать...
[03:35:13.040 --> 03:35:17.040]  Ну, по какому принципу, собственно, выбирать хорошесть.
[03:35:17.040 --> 03:35:21.040]  Вот, кстати, могла быть версия, давайте хорошим...
[03:35:21.040 --> 03:35:25.040]  Я выберу ребро, если оно ведет самое тяжелое под дерево.
[03:35:25.040 --> 03:35:27.040]  Ну, плевать оно там, половина или нет.
[03:35:27.040 --> 03:35:31.040]  Что значит тяжелая в нашей текущей декомпозиции?
[03:35:31.040 --> 03:35:35.040]  А что она означает в текущей декомпозиции, я не сказал.
[03:35:35.040 --> 03:35:37.040]  Я говорю, что просто в heavy...
[03:35:37.040 --> 03:35:41.040]  Есть просто такая интересная версия heavy light, а, кстати, кто-то ее так пишет, что...
[03:35:41.040 --> 03:35:45.040]  Вот мы сейчас говорили, что тяжелое ребро, это прямо если там обязательно половина, да?
[03:35:45.040 --> 03:35:51.040]  А теперь идея такая, а давайте скажем, что просто давайте из каждой вершины будем вести ребро самого тяжелого ребенка.
[03:35:51.040 --> 03:35:57.040]  То есть, тогда это будет такая, это будет heavy light, у которого некоторые пути сконкатинированы еще.
[03:35:57.040 --> 03:36:01.040]  То есть, это уменьшает количество путей и, вроде как, дает какую-то оптимизацию.
[03:36:01.040 --> 03:36:05.040]  Дает оптимизацию хотя бы в написании, потому что как-то она приятнее по...
[03:36:05.040 --> 03:36:07.040]  Ну, например...
[03:36:07.040 --> 03:36:09.040]  Чего?
[03:36:09.040 --> 03:36:14.040]  Да, если писать там же можно перепорядочить...
[03:36:14.040 --> 03:36:23.040]  Нет, погодите, life hacks перепорядочили таким образом, что когда в каждом пути вершины идут от A до B, он работает в любой декомпозиции вообще.
[03:36:23.040 --> 03:36:27.040]  Вы главное просто построите там какие ребра хорошие, а какие плохие.
[03:36:27.040 --> 03:36:31.040]  Ну, это пожалуйста, да.
[03:36:31.040 --> 03:36:38.040]  Но, правда, не знаю, мне все равно ощущение, что если писать дерево отрезков все-таки честное, то есть на столько сколько там надо, то это может быстрее работать.
[03:36:39.040 --> 03:36:44.040]  Потому что так вы будете в едином дерево отрезке полюбачку за логорифом работать.
[03:36:44.040 --> 03:36:46.040]  А, в смысле, если это пучак строить?
[03:36:46.040 --> 03:36:47.040]  Ну да.
[03:36:47.040 --> 03:36:49.040]  Да, конечно, это будет быстрее работать. В смысле еще?
[03:36:49.040 --> 03:36:51.040]  Тут вопрос только в приятности написания.
[03:36:51.040 --> 03:36:52.040]  Ну да.
[03:36:52.040 --> 03:36:53.040]  Так вот.
[03:36:53.040 --> 03:36:57.040]  Значит, в long-response decomposition принцип построения принципиально другой.
[03:36:57.040 --> 03:37:03.040]  Мы ведем ребро в самое глубокое под дерево.
[03:37:04.040 --> 03:37:05.040]  То есть меня интересует.
[03:37:05.040 --> 03:37:09.040]  Так, дорогие дети, а насколько глубоко я вас могу пойти?
[03:37:14.040 --> 03:37:16.040]  Так, что-то плохо сказал, да?
[03:37:20.040 --> 03:37:21.040]  Ну вот.
[03:37:21.040 --> 03:37:26.040]  Ну типа да. Дорогие дети, на вас висят какие-то листы.
[03:37:28.040 --> 03:37:32.040]  Да, лист находится где-то глубоко.
[03:37:34.040 --> 03:37:36.040]  Вот, давайте в самое глубокое и отправимся.
[03:37:37.040 --> 03:37:40.040]  Ну и здесь у нас боевая ничья, потому что здесь...
[03:37:40.040 --> 03:37:42.040]  Ну давай, нет, ну тут вот насчитать можно так.
[03:37:43.040 --> 03:37:53.040]  То есть это вот 0, 0, 0, 1, 0, 0, 2, 0, 0, 3, 0, 0, 4, 0, 0.
[03:37:54.040 --> 03:38:01.040]  Так, 0, 0, 0, там 1, 2, 3, 4, 5, 0.
[03:38:04.040 --> 03:38:06.040]  А, прикольно, тут все-таки глубже.
[03:38:06.040 --> 03:38:08.040]  Ну, значит, логика очень простая теперь.
[03:38:08.040 --> 03:38:12.040]  То есть я насчитал для каждой вершины максимальный путь до своего потопка.
[03:38:13.040 --> 03:38:15.040]  Так вот, ну и рисовать я буду очень просто.
[03:38:15.040 --> 03:38:18.040]  Из каждой вершины я буду выбирать ребенка, у которого эта чиселка побольше.
[03:38:20.040 --> 03:38:22.040]  То есть вот примерно вот так.
[03:38:22.040 --> 03:38:23.040]  Вот, например, это будет...
[03:38:23.040 --> 03:38:27.040]  Ну если есть боевая ничья, то как бы пишем, выбираем любого.
[03:38:29.040 --> 03:38:32.040]  Вот, ну и здесь вот так получается там, допустим.
[03:38:34.040 --> 03:38:35.040]  Ну вот.
[03:38:38.040 --> 03:38:39.040]  Вот.
[03:38:41.040 --> 03:38:42.040]  А, ну и вот так.
[03:38:43.040 --> 03:38:45.040]  И это называется long-dispase decomposition.
[03:38:46.040 --> 03:38:48.040]  Чем приятен этот long-dispase decomposition?
[03:38:48.040 --> 03:38:51.040]  Он приятен тем, что его можно построить за линию.
[03:38:53.040 --> 03:38:54.040]  Вот.
[03:38:55.040 --> 03:39:00.040]  Ну, можно построить за линию и, в принципе, ровно теми же способами искать сумму на отрезке.
[03:39:01.040 --> 03:39:03.040]  Остается нам только самое интересное.
[03:39:03.040 --> 03:39:09.040]  Если я иду от какой-нибудь вершины до корня, сколько различных путей я встречу?
[03:39:10.040 --> 03:39:13.040]  Ну и что то же самое, сколько некрасных ребер я встречу?
[03:39:20.040 --> 03:39:21.040]  Ну да.
[03:39:21.040 --> 03:39:30.040]  То есть оказывается, что количество вот этих вот некрасных ребер, их оказывается не более чем.
[03:39:30.040 --> 03:39:33.040]  То есть на пути от вершины до корня.
[03:39:34.040 --> 03:39:36.040]  Черных ребер не более чем...
[03:39:38.040 --> 03:39:39.040]  Ну сколько там?
[03:39:39.040 --> 03:39:40.040]  Ладно, напишу так.
[03:39:40.040 --> 03:39:41.040]  Корень из 2n.
[03:39:43.040 --> 03:39:44.040]  Почему именно из 2n?
[03:39:44.040 --> 03:39:45.040]  А вот почему.
[03:39:45.040 --> 03:39:46.040]  Смотрите.
[03:39:47.040 --> 03:39:48.040]  Нет, ну смотрите.
[03:39:48.040 --> 03:39:56.040]  Дело в том, что когда вы пройдете по черному ребру, если у вас тут было написано число x, то тут будет написано число хотя бы x плюс 1.
[03:39:56.040 --> 03:39:57.040]  Правильно?
[03:40:00.040 --> 03:40:01.040]  Это смешной факт, да?
[03:40:04.040 --> 03:40:05.040]  Нет, это не смешной факт.
[03:40:07.040 --> 03:40:08.040]  Сейчас смотрите.
[03:40:10.040 --> 03:40:11.040]  Но фишка такая.
[03:40:11.040 --> 03:40:22.040]  Заметим, что раз тут написано хотя бы x плюс 1, это значит, что тут можно ответвиться, пойти в другое место ответвиться и пойти на прям глубину x плюс 1.
[03:40:22.040 --> 03:40:23.040]  Логично, да?
[03:40:24.040 --> 03:40:25.040]  Вот.
[03:40:25.040 --> 03:40:27.040]  Значит тут мы еще тут прогулялись.
[03:40:28.040 --> 03:40:30.040]  Значит и опять черный ребер.
[03:40:30.040 --> 03:40:34.040]  Значит тут у нас получается больше либо равно, чем x плюс 2.
[03:40:35.040 --> 03:40:38.040]  И это значит, это дает нам еще x плюс 2 вершины.
[03:40:39.040 --> 03:40:40.040]  Ну и так далее.
[03:40:42.040 --> 03:40:54.040]  То есть получается, если мы встретили k таких ребер, то тогда получается, у нас вот эти глубины, получается, бывают хотя бы, то мы встретим числа, получается, какие.
[03:40:55.040 --> 03:40:56.040]  Ну мы встретим хотя бы 0.
[03:40:58.040 --> 03:41:04.040]  То есть числа, значит, больше либо равно 1, больше либо равно 2 и так далее, больше либо равно k в конце.
[03:41:04.040 --> 03:41:22.040]  И это будет соответствует тому, что у нас реально есть, получается, независимая хотя бы одна вершина здесь, хотя бы две вершины, ну потому что считая исходную здесь, хотя бы 3 тут и так далее, хотя бы k плюс 1.
[03:41:22.040 --> 03:41:30.040]  Но тогда получается n вынуждено быть больше либо равно, чем 1 плюс 2 плюс и так далее, плюс k плюс 1.
[03:41:30.040 --> 03:41:34.040]  Это равно там k плюс 1 на k плюс 2 пополам.
[03:41:39.040 --> 03:41:40.040]  Ну вот.
[03:41:40.040 --> 03:41:45.040]  Ну отсюда собственно и следует, что k меньше либо равно, ну я тогда простоты напишу, корень из 2n.
[03:41:45.040 --> 03:41:47.040]  Могу еще минус 1 написать, но не хочу.
[03:41:47.040 --> 03:41:48.040]  Вот.
[03:41:48.040 --> 03:41:53.040]  Ну вот такая стандартная корневушная логика.
[03:41:56.040 --> 03:41:57.040]  Ну вот.
[03:41:57.040 --> 03:41:58.040]  Ну в принципе уже неплохо.
[03:41:58.040 --> 03:41:59.040]  Зато предподсчет за линию.
[03:42:00.040 --> 03:42:03.040]  Да, операция теперь за корень, но зато и это за линию.
[03:42:03.040 --> 03:42:04.040]  Ничего страшного.
[03:42:05.040 --> 03:42:06.040]  Вот, понятно, да?
[03:42:07.040 --> 03:42:09.040]  Как теперь задачка?
[03:42:10.040 --> 03:42:11.040]  Как превратить?
[03:42:12.040 --> 03:42:14.040]  Значит, как теперь превратить?
[03:42:14.040 --> 03:42:16.040]  Значит, теперь задача следующая.
[03:42:16.040 --> 03:42:22.040]  Мы получили n предподсчета и корень из n на запрос.
[03:42:26.040 --> 03:42:33.040]  Как теперь хочется сохранить n, но сделать так, чтобы теперь запросы делались все-таки за логарифом?
[03:42:36.040 --> 03:42:39.040]  Это слючайте другую декомпозицию.
[03:42:41.040 --> 03:42:42.040]  Опять?
[03:42:42.040 --> 03:42:44.040]  Нет, не опять.
[03:42:45.040 --> 03:42:49.040]  Потому что на этот раз эта декомпозиция не будет декомпозицией.
[03:42:50.040 --> 03:42:53.040]  Но называется она декомпозиция.
[03:42:54.040 --> 03:42:58.040]  Предыдущая декомпозиция строилась за n, но запросы за 2 корень.
[03:42:58.040 --> 03:43:00.040]  За корень, да.
[03:43:02.040 --> 03:43:07.040]  А теперь вас приветствует лестничная декомпозиция.
[03:43:12.040 --> 03:43:15.040]  Значит, она нам говорит следующее.
[03:43:16.040 --> 03:43:19.040]  Так, у нас тут есть какие-то пути, да?
[03:43:20.040 --> 03:43:25.040]  Вот давайте я тут даже для красоты еще тут нарисую кое-что красивое.
[03:43:32.040 --> 03:43:34.040]  Вот, значит, смотрите.
[03:43:35.040 --> 03:43:38.040]  Значит, идея теперь такая.
[03:43:38.040 --> 03:43:42.040]  Я же могу за линию вот эту декомпозицию построить, да?
[03:43:43.040 --> 03:43:45.040]  А давайте я тебе потрачу времени.
[03:43:45.040 --> 03:43:47.040]  Слушайте, это же симптомика.
[03:43:47.040 --> 03:43:49.040]  Я же могу потратить времени n.
[03:43:49.040 --> 03:43:52.040]  Могу хранить в декомпозиции не n вершин, а 2n.
[03:43:52.040 --> 03:43:54.040]  Могу?
[03:43:54.040 --> 03:43:55.040]  Могу.
[03:43:55.040 --> 03:43:56.040]  И я это сделаю.
[03:43:56.040 --> 03:43:57.040]  Знаете как?
[03:43:57.040 --> 03:44:02.040]  Я возьму путь, и к каждому пути еще добавлю сверху столько же вершин.
[03:44:02.040 --> 03:44:06.040]  То есть если у меня, например, путь длины 2, например, да,
[03:44:06.040 --> 03:44:09.040]  то я добавлю к нему еще две вершины сверху.
[03:44:11.040 --> 03:44:16.040]  Ну вот, если путь 1, 2, 3, 4, 5, то я добавлю еще 5 вершин сверху.
[03:44:16.040 --> 03:44:19.040]  Ну или сколько там получится, если я там случайно до корня дойду.
[03:44:20.040 --> 03:44:22.040]  Это модификация long и start.
[03:44:22.040 --> 03:44:23.040]  Да, по факту да.
[03:44:24.040 --> 03:44:28.040]  То есть заметим, что это, формально говоря, это не черта, не декомпозиция,
[03:44:28.040 --> 03:44:34.040]  потому что одна вершина может оказаться, собственно, в сколько угодно там путей,
[03:44:34.040 --> 03:44:36.040]  может через нее проходить, короче.
[03:44:37.040 --> 03:44:38.040]  Вот.
[03:44:39.040 --> 03:44:41.040]  Но так все равно.
[03:44:41.040 --> 03:44:43.040]  Но это все равно линия.
[03:44:45.040 --> 03:44:46.040]  Понимаете, да?
[03:44:47.040 --> 03:44:49.040]  То есть все равно можно построить за линию.
[03:44:49.040 --> 03:44:59.040]  Но заметим, что теперь подыматься от вершины до корня,
[03:44:59.040 --> 03:45:04.040]  ну, то есть нам обычно нужно разбить путь от вершины до корня
[03:45:04.040 --> 03:45:11.040]  на какое-то количество путей, каждый из которых является подотреском чего-то в ледер декомпозиции, правда?
[03:45:13.040 --> 03:45:14.040]  И чит очень простой.
[03:45:14.040 --> 03:45:15.040]  То, что идея такая.
[03:45:15.040 --> 03:45:21.040]  Вот жила была вершина, и у нее это максимальная глубина потомка х, да?
[03:45:23.040 --> 03:45:24.040]  Тогда у меня идея такая.
[03:45:24.040 --> 03:45:31.040]  Я, значит, от этой вершины иду, естественно, до конца красного пути, то есть лонгест паса, да?
[03:45:33.040 --> 03:45:34.040]  Понимаете, да?
[03:45:35.040 --> 03:45:43.040]  А потом, после этого, я иду еще в этом довеске, который в ледере возник.
[03:45:43.040 --> 03:45:44.040]  Понимаете, да?
[03:45:45.040 --> 03:45:46.040]  Да.
[03:45:46.040 --> 03:45:47.040]  Вот.
[03:45:47.040 --> 03:45:50.040]  Но он не весь, можно сказать, какой его префикс, например, да?
[03:45:50.040 --> 03:45:54.040]  Ну, так понятно, что это ж тоже как бы префикс ледера, правда?
[03:45:56.040 --> 03:45:57.040]  Да.
[03:45:57.040 --> 03:45:58.040]  Вот.
[03:45:59.040 --> 03:46:00.040]  Это супикс.
[03:46:02.040 --> 03:46:04.040]  Ну, префикс мы же сверху вниз считаем, поэтому префикс.
[03:46:05.040 --> 03:46:07.040]  Но могло же быть такое, что нам надо еще дальше пройти?
[03:46:07.040 --> 03:46:08.040]  Могло быть.
[03:46:09.040 --> 03:46:10.040]  Могло быть, но...
[03:46:10.040 --> 03:46:12.040]  А могло быть, что оно и не пошло?
[03:46:12.040 --> 03:46:13.040]  Нет, смотрите, могло быть.
[03:46:14.040 --> 03:46:15.040]  Ну вот.
[03:46:15.040 --> 03:46:18.040]  И здесь мы тоже тогда обнаруживаем, что тут какой-то красный путь.
[03:46:18.040 --> 03:46:21.040]  Может быть, кстати, даже как-то вот так идущий, кстати.
[03:46:22.040 --> 03:46:23.040]  Но ничего страшного.
[03:46:23.040 --> 03:46:25.040]  Мы идем по огрызку этого красного пути.
[03:46:26.040 --> 03:46:27.040]  Ну вот.
[03:46:27.040 --> 03:46:30.040]  И продолжаем по его же, по сгенерированному им же зелененькому.
[03:46:31.040 --> 03:46:32.040]  Да.
[03:46:32.040 --> 03:46:34.040]  Так можно идти, может быть, идти много-много раз.
[03:46:35.040 --> 03:46:37.040]  Но я утверждаю, что много-много – это логорифом.
[03:46:38.040 --> 03:46:40.040]  И причина очень проста.
[03:46:40.040 --> 03:46:44.040]  Дело в том, что если максимальная глубина вот этой вершины x,
[03:46:46.040 --> 03:46:50.040]  то максимальная глубина вот этой вершины, очевидно, больше либо равна x.
[03:46:50.040 --> 03:46:51.040]  Правда?
[03:46:57.040 --> 03:46:58.040]  Вот.
[03:46:59.040 --> 03:47:00.040]  Но я вам даже больше скажу.
[03:47:01.040 --> 03:47:05.040]  Максимальная глубина вот этой вершины больше либо равна, чем 2x.
[03:47:10.040 --> 03:47:14.040]  Ну потому что, если я из этой могу пойти на глубину x,
[03:47:14.040 --> 03:47:16.040]  то я из этой могу пойти на глубину там…
[03:47:17.040 --> 03:47:18.040]  Ну потому что, смотрите.
[03:47:19.040 --> 03:47:22.040]  Потому что, заметим следующее, что длина вот этой части,
[03:47:23.040 --> 03:47:30.040]  она, очевидно, больше, ну вот, она больше либо равна x.
[03:47:30.040 --> 03:47:31.040]  Почему?
[03:47:31.040 --> 03:47:34.040]  Потому что, заметим, что если у вершины глубина x,
[03:47:34.040 --> 03:47:37.040]  это означает, что у нее вот этот красный путь
[03:47:38.040 --> 03:47:41.040]  идет прям куда-то до листа, и у него тут прям вот длина реальной x.
[03:47:42.040 --> 03:47:44.040]  А что мы поддерживаем в этих красных путях?
[03:47:45.040 --> 03:47:46.040]  Ничего не поддерживаем.
[03:47:46.040 --> 03:47:47.040]  А, ну поддерживаем.
[03:47:47.040 --> 03:47:49.040]  Ну то же самое, что это там всякие суммы на подотреске.
[03:47:50.040 --> 03:47:51.040]  Дерево отрезков строим, вот это все.
[03:47:51.040 --> 03:47:54.040]  Тогда у нас за прошлый день в позиции были закоординированные логотипы.
[03:47:56.040 --> 03:47:59.040]  А, ну в этом смысле да. Хорошо.
[03:48:01.040 --> 03:48:03.040]  А, ну с другой стороны, нет, можно было так,
[03:48:03.040 --> 03:48:05.040]  но с другой стороны, с точки зрения этой задачи,
[03:48:05.040 --> 03:48:08.040]  на самом деле нам достаточно было хранить только массив точек,
[03:48:08.040 --> 03:48:10.040]  и, в общем-то, все завод единицы там было бы.
[03:48:11.040 --> 03:48:12.040]  Нет, зачем?
[03:48:12.040 --> 03:48:15.040]  Нет, мы сейчас, например, мы решаем задачу level necessities queries вообще, да?
[03:48:16.040 --> 03:48:19.040]  То есть, в которой все, что нам надо, это дана вершина, я хочу подняться.
[03:48:19.040 --> 03:48:22.040]  Но если я могу подняться в рамках одному пути, я это делаю завод единицы.
[03:48:24.040 --> 03:48:26.040]  Тупо храню все вершины в массиве.
[03:48:27.040 --> 03:48:30.040]  И для каждой вершины храню, где она в этом массиве конкретно находится.
[03:48:31.040 --> 03:48:32.040]  В общем-то, все.
[03:48:32.040 --> 03:48:33.040]  В общем-то, все.
[03:48:33.040 --> 03:48:38.040]  То есть, если я нахожусь там в 179-й клетке и хочу подняться на 57.
[03:48:38.040 --> 03:48:40.040]  Так, ну, наверное, мне надо в этом массиве подняться,
[03:48:40.040 --> 03:48:42.040]  пойти в клетку номер 122. Все.
[03:48:44.040 --> 03:48:45.040]  Вот.
[03:48:45.040 --> 03:48:47.040]  Но тогда, если тут х, то тут, соответственно,
[03:48:47.040 --> 03:48:50.040]  то есть мы, когда поднимаемся по ladder decomposition,
[03:48:50.040 --> 03:48:53.040]  мы просто поднимаемся уже сразу за один шаг на высоту хотя бы 2х.
[03:48:56.040 --> 03:48:58.040]  Ну, кто 63? Еще раз.
[03:48:58.040 --> 03:49:01.040]  Потому что этот путь, красный, в начало которого мы поднялись,
[03:49:01.040 --> 03:49:03.040]  он длины как минимум х, правда?
[03:49:04.040 --> 03:49:07.040]  Значит, мы к нему пририсовали еще х вершин зеленых.
[03:49:09.040 --> 03:49:11.040]  Получается, вот тебе глубина 2х.
[03:49:12.040 --> 03:49:13.040]  Вот.
[03:49:14.040 --> 03:49:17.040]  Ну вот, теперь берем этот путь и, значит, повторяем операцию.
[03:49:18.040 --> 03:49:22.040]  А вот тут уже хотя бы 2х есть, поэтому там мы тоже на 2х поднимемся.
[03:49:24.040 --> 03:49:25.040]  Получается логарифом.
[03:49:26.040 --> 03:49:27.040]  Вот, понятна логика, да?
[03:49:28.040 --> 03:49:30.040]  Так, и, наконец, финалочка теперь.
[03:49:31.040 --> 03:49:34.040]  Нет, стало богу, больше декомпозиционов не будет.
[03:49:37.040 --> 03:49:38.040]  Бинапу из листьев делать?
[03:49:38.040 --> 03:49:39.040]  Чего?
[03:49:39.040 --> 03:49:40.040]  Бинапу из листьев посчитать?
[03:49:41.040 --> 03:49:43.040]  Нет. Нет, бинапу из листьев мы будем считать,
[03:49:43.040 --> 03:49:45.040]  когда у нас будет метр четырех русских.
[03:49:46.040 --> 03:49:49.040]  А пока, если мы просто хотим достичь 7.nlog n1,
[03:49:49.040 --> 03:49:51.040]  значит, мы сделаем для дерева две вещи.
[03:49:52.040 --> 03:49:54.040]  Во-первых, мы насчитаем ladder decomposition,
[03:49:55.040 --> 03:49:58.040]  а во-вторых, мы насчитаем бинарные подъемы.
[03:49:58.040 --> 03:50:00.040]  Но пока для простоты все.
[03:50:03.040 --> 03:50:04.040]  Вот, понятно, да?
[03:50:07.040 --> 03:50:09.040]  Так, и тогда идея будет очень простая.
[03:50:10.040 --> 03:50:13.040]  Жила была вершина В, мы хотим из нее подняться на высоту H.
[03:50:15.040 --> 03:50:19.040]  Так вот, давайте, допустим, если это H, а давайте поднимемся...
[03:50:20.040 --> 03:50:21.040]  Смотрите, чего?
[03:50:22.040 --> 03:50:23.040]  Где я запутался?
[03:50:24.040 --> 03:50:25.040]  Нет, там запутался, окей.
[03:50:25.040 --> 03:50:29.040]  Ну вот, значит, давайте поднимемся на максимальную степень двойки из вершины В,
[03:50:30.040 --> 03:50:31.040]  которая не превосходит H.
[03:50:32.040 --> 03:50:35.040]  Ну, мы можем заранее для всех чисел от одного до N такую степень предпочитать.
[03:50:36.040 --> 03:50:38.040]  В общем-то, в спортсах вы обычно этим занимаетесь, правда?
[03:50:41.040 --> 03:50:43.040]  H это высота, на которую мы хотим...
[03:50:44.040 --> 03:50:45.040]  Да.
[03:50:45.040 --> 03:50:47.040]  А мы возьмем максимальную степень двойки, которую не превосходит.
[03:50:48.040 --> 03:50:50.040]  Почему там больше либо равно х плюс один?
[03:50:51.040 --> 03:50:53.040]  Ну, потому что у нас есть х,
[03:50:53.040 --> 03:50:54.040]  там больше либо равно х плюс один.
[03:50:55.040 --> 03:50:56.040]  Ну, потому что подняли...
[03:50:57.040 --> 03:50:58.040]  Одному либо перешли, да?
[03:50:59.040 --> 03:51:00.040]  Ну, если по одному, то будет х плюс один.
[03:51:01.040 --> 03:51:02.040]  Хотя бы х плюс один.
[03:51:03.040 --> 03:51:04.040]  Если по двум, то х плюс два.
[03:51:05.040 --> 03:51:07.040]  Нет, ну, могло так случиться, что уже здесь прямо заканчивается красный путь,
[03:51:08.040 --> 03:51:09.040]  но здесь все равно будет 2х.
[03:51:10.040 --> 03:51:11.040]  То есть, по факту, да.
[03:51:12.040 --> 03:51:13.040]  По факту, да, мы этим...
[03:51:14.040 --> 03:51:15.040]  Достаточно вот так написать.
[03:51:18.040 --> 03:51:20.040]  Потому что зеленая штука увеличит наш путь.
[03:51:21.040 --> 03:51:22.040]  Ну, да.
[03:51:23.040 --> 03:51:26.040]  То есть, если у нас тут глубина х, то зеленая штука должна на х увеличивать.
[03:51:27.040 --> 03:51:28.040]  Но на самом деле мы дойдем сюда,
[03:51:29.040 --> 03:51:31.040]  тут глубина будет еще больше, поэтому она увеличит еще на больше.
[03:51:32.040 --> 03:51:33.040]  Вот так.
[03:51:34.040 --> 03:51:36.040]  Там будет вершина, которая обозначена х, да?
[03:51:37.040 --> 03:51:39.040]  А после нее идет синяя ребра, да?
[03:51:40.040 --> 03:51:41.040]  На черная ребра.
[03:51:42.040 --> 03:51:43.040]  Это не тот же путь, да?
[03:51:44.040 --> 03:51:45.040]  А, где? Вот здесь?
[03:51:46.040 --> 03:51:47.040]  Нет, в нижней вершине х.
[03:51:48.040 --> 03:51:49.040]  Здесь? Ну, почему нет?
[03:51:50.040 --> 03:51:51.040]  Это вполне красная, все нормально.
[03:51:51.040 --> 03:51:53.040]  Ну, ее родитель черная ребра.
[03:51:54.040 --> 03:51:56.040]  Ну, почему? Ну, может черная, но вообще может и красная, как повезет.
[03:51:57.040 --> 03:51:59.040]  Мы для каждого пути считаем.
[03:52:00.040 --> 03:52:01.040]  Вы такую зеленую штуку доехали для каждого красного пути.
[03:52:02.040 --> 03:52:03.040]  Да.
[03:52:04.040 --> 03:52:05.040]  Но мы как бы поднимаемся в начало этого пути.
[03:52:06.040 --> 03:52:08.040]  В середину пути начали зеленую штуку вести.
[03:52:09.040 --> 03:52:10.040]  Ну, потому что зеленый...
[03:52:11.040 --> 03:52:14.040]  Потому что по факту зеленый путь, он покрывает как бы формально все.
[03:52:15.040 --> 03:52:16.040]  Вот такое он на самом деле.
[03:52:17.040 --> 03:52:20.040]  То есть, он как бы наш путь и еще столько же сверху.
[03:52:21.040 --> 03:52:22.040]  Вот, понятно, да?
[03:52:23.040 --> 03:52:24.040]  Да, да, да.
[03:52:25.040 --> 03:52:26.040]  Так вот.
[03:52:27.040 --> 03:52:28.040]  Теперь.
[03:52:29.040 --> 03:52:30.040]  Значит, возвращаемся.
[03:52:31.040 --> 03:52:36.040]  Значит, с помощью двойечных подъемов мы за от единицы можем подняться на высоту хотя бы половину h.
[03:52:37.040 --> 03:52:38.040]  Согласны?
[03:52:39.040 --> 03:52:40.040]  Вот.
[03:52:41.040 --> 03:52:42.040]  Ну, просто степень двойки правильную возьмем.
[03:52:43.040 --> 03:52:44.040]  Там мы заранее предпочитаем для всех чисел от 1 до n.
[03:52:45.040 --> 03:52:46.040]  Но теперь идея такая.
[03:52:46.040 --> 03:52:51.040]  Теперь нам надо подняться на высоту вот эту вот.
[03:52:52.040 --> 03:52:56.040]  Вот у нас тут осталось вот это вот допустим h'.
[03:52:57.040 --> 03:52:58.040]  Понимаете, да?
[03:52:59.040 --> 03:53:00.040]  Надо на нее из этой вершины подняться.
[03:53:01.040 --> 03:53:05.040]  Но теперь заметим, что длина вот этого пути она больше.
[03:53:06.040 --> 03:53:08.040]  Даже можно сказать строго больше, чем h'.
[03:53:09.040 --> 03:53:15.040]  Но тогда это означает, что у этого поддерева этой вершины глубина хотя бы h'.
[03:53:16.040 --> 03:53:21.040]  И это означает, что с помощью ladder decomposition мы из нее поднимемся тупо за от единицы.
[03:53:23.040 --> 03:53:24.040]  Все.
[03:53:25.040 --> 03:53:26.040]  Значит, еще раз.
[03:53:27.040 --> 03:53:28.040]  Значит, фишка.
[03:53:29.040 --> 03:53:31.040]  Насчитаем ladder decomposition, насчитаем двоичные подъемы.
[03:53:32.040 --> 03:53:34.040]  Теперь надо подняться из вершины v на высоту h.
[03:53:35.040 --> 03:53:38.040]  За от единицы мы поднимаемся на максимальную степень двойки, не происходящую h.
[03:53:39.040 --> 03:53:44.040]  Теперь мы получили новую вершину v', из которой надо подняться на высоту h'.
[03:53:45.040 --> 03:53:47.040]  И h' строго меньше, чем 2 в степени l.
[03:53:50.040 --> 03:53:51.040]  Но теперь утверждение.
[03:53:52.040 --> 03:53:56.040]  Из этой вершины на эту высоту я могу подняться за от единицы в ladder decomposition.
[03:54:00.040 --> 03:54:01.040]  Потому что глубина пути уже...
[03:54:02.040 --> 03:54:11.040]  Да, потому что глубина этой вершины, ну глубина красного пути у нее, он конечно не обязательно сюда идет, может куда угодно, но глубина его хотя бы вот эти 2 в степени l уж точно будет.
[03:54:12.040 --> 03:54:13.040]  То есть хотя бы h'.
[03:54:14.040 --> 03:54:15.040]  То есть минимум h3.
[03:54:16.040 --> 03:54:17.040]  Все.
[03:54:20.040 --> 03:54:24.040]  И получается вот такая вот красивая штука, что получается теперь...
[03:54:25.040 --> 03:54:27.040]  Да, предподсчет все еще n log n.
[03:54:28.040 --> 03:54:31.040]  На самом деле все еще n log n, но за от единицы.
[03:54:32.040 --> 03:54:38.040]  Но на самом деле отметим, что если у вас в дереве листьев не сильно много, то это может легко стать и o от n и o от единицы.
[03:54:38.040 --> 03:54:52.040]  Ну потому что, да, то есть первая идея, которая там возникает, то что давайте считать двоичные подъемы, там скажем, не для всех вершин, а только для листьев.
[03:54:55.040 --> 03:54:59.040]  Ну как считать для листьев, только для листьев двоичные подъемы, не пересчитывая для остальных.
[03:55:00.040 --> 03:55:03.040]  Очень просто, давайте скажем запустим, прости господи, DFS.
[03:55:03.040 --> 03:55:09.040]  И каждый раз, когда вершина появляется, мы ее добавляем в стек, когда выходим в DFS, мы ее из стека удаляем.
[03:55:10.040 --> 03:55:20.040]  Тогда, когда мы приходим в лист, то у нас прям полный путь у нас в стеке хранится, и в принципе мы там подняться на 1, 2, 4, 8 и так далее можем без труда, правда?
[03:55:20.040 --> 03:55:32.040]  Ну вот, поэтому там возникает такая идея, там первая идея будет, что вот таким тупым, то есть там, но идея будет такая, что зачем нам подниматься из произвольной вершины на высоту h?
[03:55:33.040 --> 03:55:40.040]  А давайте вместо этого из вершины v спустимся до какого-нибудь ее листа в поддереве и с греблом подниматься на большую высоту.
[03:55:43.040 --> 03:55:47.040]  Ну для каждой вершины просто сохраним какой-нибудь лист у нее в поддереве.
[03:55:51.040 --> 03:56:01.040]  Ну мы просто когда, в предподсчете мы DFS запустили, и для каждого, когда мы пришли в лист, у нас как бы есть как бы векторы с всего пути откормлены до нее.
[03:56:05.040 --> 03:56:06.040]  Ну вот, ну и все.
[03:56:07.040 --> 03:56:12.040]  Это уже без учета того, что у нас вообще-то там всякие лонгест-пессы вот эти есть, а нет, они не помогут все равно.
[03:56:13.040 --> 03:56:21.040]  Ну то есть с помощью, на самом деле с помощью ladder decomposition, а кстати из любой вершины, можно спокойно за логарифом насчитать все ее LCA, вот ровно этим же способом.
[03:56:25.040 --> 03:56:30.040]  Нет, потому что нет, это будет не за n log n, это будет log n умножить на количество листов.
[03:56:32.040 --> 03:56:38.040]  Поэтому если листов меньше чем, не больше чем n поделить на log n, то это уже чемпионский алгоритм.
[03:56:39.040 --> 03:56:42.040]  А вот если листов чуть больше, тогда...
[03:56:44.040 --> 03:56:46.040]  Но об этом мы поговорим в следующий раз.
[03:56:49.040 --> 03:56:50.040]  Пока да.
[03:56:51.040 --> 03:56:56.040]  Но как бы я так проанонсировал, куда можно думать и куда применять метод четырех русских, чтобы тут все-таки стало OADN.
[03:56:58.040 --> 03:57:01.040]  Но об этом веселом мясе мы поговорим в следующий раз.
[03:57:02.040 --> 03:57:04.040]  Ну а сейчас пожалуй на сегодня все.
