[00:00.000 --> 00:13.000]  Ну, во-первых, давайте вспоминать, какую задачу мы вообще решаем в принципе.
[00:13.000 --> 00:20.000]  Ну, формальное определение можно сказать так.
[00:20.000 --> 00:23.000]  Пока еще нельзя, конечно, формально сказать, позже скажем.
[00:23.000 --> 00:32.000]  Но у нас действительно есть какой-то ориентированный граф, по которому мы можем пускать какую-то воду.
[00:32.000 --> 00:40.000]  Ну, а естественно у каждого ребра есть пропускная способность.
[00:40.000 --> 00:47.000]  Так, что тут? Видно, что написано? Да, нет, наверное. Хорошо.
[00:47.000 --> 01:02.000]  Значит, есть какая-то вода, то есть есть какая-то пропускная способность, то есть означает, что в единицу времени по этой трубе может протечь не более чем столько-то воды.
[01:02.000 --> 01:06.000]  То есть это такой классический пример.
[01:06.000 --> 01:11.000]  Но наша задача, тут конечно возникает подлянка.
[01:11.000 --> 01:18.000]  Какая у нас цель? Наша цель как бы протащить из точки S в точку T как можно больше воды.
[01:18.000 --> 01:23.000]  Но интуитивно картинка может быть на самом деле неправильная, если бы формулировать так.
[01:23.000 --> 01:38.000]  Более точная формулировка говорит, что нам надо наладить бесперебойный процесс перекачки воды из точки S в точку T так, чтобы в единицу времени из S в T перекатывалось как можно больше воды.
[01:38.000 --> 01:42.000]  То есть скорее такая задача.
[01:42.000 --> 01:51.000]  Ну, кстати, можно отметить, что если кому-то неудобно это мыслить в терминах воды, можно мыслить еще в терминах автомобилей на самом деле.
[01:51.000 --> 02:09.000]  Потому что на самом деле можно вообразить себе, на самом деле часто предлагается такая интерпретация, что на самом деле ребра это дороги на самом деле, а пропускная способность это какое количество машин в единицу времени по ним может проехать.
[02:09.000 --> 02:17.000]  Это работает гораздо хуже с точки зрения применимости на практике, потому что на практике в основном проблема в том, что, блин, это машины.
[02:17.000 --> 02:21.000]  Ну, люди действуют неоптимально.
[02:21.000 --> 02:23.000]  Нет, ну, нет, ну, конечно.
[02:23.000 --> 02:26.000]  Но это больше, тем более близко к практике.
[02:26.000 --> 02:28.000]  Ну, может быть, может быть.
[02:28.000 --> 02:29.000]  Да, хорошо.
[02:29.000 --> 02:30.000]  Ну, как сказать, да.
[02:30.000 --> 02:32.000]  Ну, тут водопроводи тоже там по-разному.
[02:32.000 --> 02:36.000]  То есть обычно такой трубопровод работает, конечно, в предположении, что мы монополисты.
[02:36.000 --> 02:46.000]  Вот изначально мы будем мыслить, что мы монополисты, то есть у нас есть полный трубопровод, и мы сами своими ручками решаем, сколько воды мы можем прокатить в единицу времени.
[02:46.000 --> 02:47.000]  Вот.
[02:47.000 --> 02:50.000]  Потому что в некоторых случаях бывает, что это не так.
[02:50.000 --> 02:51.000]  Вот.
[02:51.000 --> 02:55.000]  Но тем не так или иначе надо формально сформулировать, что мы хотим.
[02:55.000 --> 02:57.000]  Значит, формально говорим так, смотрите.
[02:57.000 --> 03:01.000]  То есть можно уже формально сказать, что там есть определение сети.
[03:01.000 --> 03:03.000]  Вот есть такая сеть.
[03:03.000 --> 03:05.000]  И у нее есть пропускная способность.
[03:05.000 --> 03:12.000]  То есть, ну, просто фактически это граф, на каждом ребре которого определено неотрицательное число С.
[03:12.000 --> 03:14.000]  Правда, здесь видите оговорочка.
[03:14.000 --> 03:19.000]  Мы здесь пишем С от УВ, на самом деле, которое больше либо равно нуля.
[03:19.000 --> 03:21.000]  Вот.
[03:22.000 --> 03:27.000]  Но на самом деле, конечно, граф ориентированный, могут быть в принципе и кратные ребра.
[03:27.000 --> 03:31.000]  Но с точки зрения нашей задачи чаще всего нам более-менее все равно.
[03:31.000 --> 03:37.000]  На самом деле у нас там есть ребра, если у нас кратные ребра с пропускными способностями 1,2,5,
[03:37.000 --> 03:41.000]  или у нас есть одна толстая труба пропускной способности 8.
[03:41.000 --> 03:46.000]  Теоретически нам надо пригодится пропустить 5 литров по первой, 2 по второй.
[03:46.000 --> 03:48.000]  Ну теоретически может.
[03:48.000 --> 03:51.000]  Но там это уже дополнительные условия.
[03:51.000 --> 03:53.000]  Обычно этого не требуется.
[03:53.000 --> 03:55.000]  То есть мы все-таки с базы начнем.
[03:55.000 --> 03:57.000]  Вот.
[03:57.000 --> 03:59.000]  Но тут оказывается интересно.
[03:59.000 --> 04:03.000]  Просто на самом деле тут можно вводить определение двумя разными способами.
[04:05.000 --> 04:07.000]  Потому что вот смотрите.
[04:07.000 --> 04:09.000]  Потому что как вы себе воображаете граф?
[04:09.000 --> 04:13.000]  Потому что граф можно вообразить себе с помощью ориентированным способом.
[04:14.000 --> 04:19.000]  Но с точки зрения презентации предлагается воображать его себе неориентированным способом.
[04:19.000 --> 04:22.000]  Это означает, что А. У вас нет кратных ребер.
[04:22.000 --> 04:28.000]  Б. Удобно считать, что у вас между любыми двумя вершинами ребро есть.
[04:28.000 --> 04:32.000]  Просто у некоторых из этих ребер пропускная способность 0.
[04:34.000 --> 04:36.000]  Как вам удобнее считать?
[04:36.000 --> 04:41.000]  Называется ребро, существует оно нулевое, или у меня нет нулевых ребер.
[04:41.000 --> 04:43.000]  Просто если ребро нулевое, то оно не существует.
[04:46.000 --> 04:48.000]  О господи.
[04:52.000 --> 04:54.000]  А, вот да.
[04:54.000 --> 04:56.000]  Да, нет, это просто пример.
[04:58.000 --> 05:02.000]  Но там все основное, что там было, это определение сети.
[05:05.000 --> 05:07.000]  А есть определение потока.
[05:11.000 --> 05:13.000]  Предпоток.
[05:13.000 --> 05:15.000]  Не, какой предпоток, господи.
[05:15.000 --> 05:18.000]  Кошмар, че, бурашка и предпотоки, ужас какой.
[05:24.000 --> 05:26.000]  А теперь давайте посмотрим.
[05:26.000 --> 05:30.000]  Если вводить определение такое формальное, то получается немножко странно.
[05:30.000 --> 05:32.000]  То есть оно не самое интуитивное.
[05:32.000 --> 05:35.000]  То есть есть как бы, может быть, более интуитивное.
[05:35.000 --> 05:41.000]  Но тем не менее, с таким потоком оказывается очень удобно мыслить.
[05:41.000 --> 05:43.000]  Смотрите, какая логика здесь.
[05:47.000 --> 05:50.000]  Формально говоря, поток это не какая-то вода текущая.
[05:50.000 --> 05:52.000]  То есть поток это функция, как всегда.
[05:52.000 --> 05:58.000]  Функция, которая по двум вершинам говорит, сколько воды от одной к другой течет.
[05:58.000 --> 06:05.000]  Только с тремя маленькими оговорками.
[06:05.000 --> 06:10.000]  Во-первых, у нас есть антисимметричность,
[06:10.000 --> 06:19.000]  которая по сути говорит о том, что если мы говорим, что из пункта А в пункт Б течет 5 единиц жидкости,
[06:19.000 --> 06:24.000]  то то же самое, что говорит, что из пункта В в пункт А течет минус 5 единиц жидкости.
[06:25.000 --> 06:26.000]  Да, так вот.
[06:26.000 --> 06:32.000]  То есть такое стандартное завихрение веселых математиков.
[06:32.000 --> 06:36.000]  Но оказывается, это действительно так удобно.
[06:36.000 --> 06:41.000]  Но дальше следующее ограничение, оно более естественно.
[06:41.000 --> 06:44.000]  То есть как бы, может быть, сколь угодно в минус,
[06:44.000 --> 06:50.000]  но тем не менее у нас поток между двумя вершинами не превосходит профессиональную способность.
[06:50.000 --> 06:54.000]  Здесь мы вынуждены признать, что...
[06:54.000 --> 06:59.000]  То есть здесь оказывается, что между двумя вершинами может течь поток, даже если пропускная способность ноль,
[06:59.000 --> 07:02.000]  потому что он в принципе может быть отрицательный.
[07:02.000 --> 07:04.000]  Нет, но это нормальная ситуация.
[07:04.000 --> 07:10.000]  Вы же на физике тоже сталкивались, что казалось бы, что через конденсатор оказывается ток может течь.
[07:10.000 --> 07:14.000]  Хотя как он может течь, если это тупо вот такие две пластины, не связанные между собой?
[07:14.000 --> 07:17.000]  А вот оказывается течет, скотина.
[07:18.000 --> 07:20.000]  На чем вы сталкивались?
[07:20.000 --> 07:21.000]  На физике?
[07:21.000 --> 07:22.000]  Нет.
[07:22.000 --> 07:23.000]  Да.
[07:23.000 --> 07:24.000]  Это что?
[07:24.000 --> 07:26.000]  В школе у вас физика была, не знаю.
[07:26.000 --> 07:30.000]  Я говорю, у меня это была программа 10 класса, я не знаю.
[07:33.000 --> 07:37.000]  Нет, конденсатор это вот такие две пластины, такие длинные, такие ноты.
[07:37.000 --> 07:40.000]  И между ними такое небольшое расстояние.
[07:40.000 --> 07:41.000]  Вот.
[07:44.000 --> 07:45.000]  Ну это да.
[07:45.000 --> 07:48.000]  Да, понятно, здесь собрались те, кто не хочет это изучать глубоко.
[07:48.000 --> 07:50.000]  Да, я понимаю, поэтому да.
[07:50.000 --> 07:51.000]  Но тем не менее.
[07:51.000 --> 07:54.000]  То есть мы мыслим в том, что да.
[07:54.000 --> 07:55.000]  Но это второе.
[07:55.000 --> 07:57.000]  Но есть третья ситуация.
[07:57.000 --> 08:00.000]  Но третья, это вот для нас важно.
[08:00.000 --> 08:03.000]  То есть это сохранение потока.
[08:03.000 --> 08:07.000]  Вот, ну здесь так, здесь написан какой-то текст.
[08:07.000 --> 08:10.000]  Но по сути он означает следующее.
[08:10.000 --> 08:14.000]  Что мы перегоняем воду из точки С в точку Т.
[08:14.000 --> 08:17.000]  Это значит, что мы подразумеваем, что вода может появляться
[08:17.000 --> 08:20.000]  только в точке С и исчезать только в точке Т.
[08:20.000 --> 08:22.000]  Ну, по крайней мере в идеале.
[08:22.000 --> 08:28.000]  На самом деле вода может теоретически появляться в точке С и исчезать из нее, в принципе.
[08:28.000 --> 08:30.000]  Равно как и наоборот.
[08:30.000 --> 08:34.000]  Но самое важное для нас это то, что больше она нигде не появляется и не исчезает.
[08:34.000 --> 08:42.000]  Это выражается вот этим условием, которое говорит о том, что суммарное количество воды,
[08:42.000 --> 08:47.000]  которое вытекает из любой вершины, значит из любой вершины У,
[08:47.000 --> 08:52.000]  не совпадающей с истоком истоком, вот это важно, равно нулю.
[08:57.000 --> 09:01.000]  То есть вот такое вот, это вот математическое определение поток.
[09:01.000 --> 09:07.000]  Ну, видите, оно подразумевает, что у нас там есть какие-то отрицательные потоки.
[09:07.000 --> 09:10.000]  Не всегда в этом это удобно мыслить.
[09:13.000 --> 09:21.000]  Так, дальше пока не надо читать, потому что дальше лучше посмотреть сюда.
[09:21.000 --> 09:26.000]  Потому что в этом месте тогда я сейчас вам покажу другое определение потока.
[09:26.000 --> 09:29.000]  Но для этого нам придется пойти до доски.
[09:30.000 --> 09:35.000]  Так, но для этого абсолютно, на самом деле абсолютно формально.
[09:37.000 --> 09:43.000]  Абсолютно. Так, первую очередь, мне кажется, нам нужно сделать вот это.
[09:48.000 --> 09:50.000]  Так, ну что?
[09:50.000 --> 09:52.000]  Ну что, доска там видна?
[09:57.000 --> 10:01.000]  Ну что, фамилия какого известного преподавателя сейчас на доске?
[10:02.000 --> 10:06.000]  Да, может ли ответить на этот вопрос рандомный телезритель?
[10:08.000 --> 10:10.000]  Нет, это какая-то вопрос.
[10:10.000 --> 10:14.000]  Вы имеете в виду назвать его имя, фамилию или?
[10:14.000 --> 10:16.000]  Да нет, это nicknames of teachers.
[10:16.000 --> 10:18.000]  Вы имеете в виду назвать его имя, фамилию или?
[10:18.000 --> 10:21.000]  Да нет, это nicknames of teachers достаточно.
[10:30.000 --> 10:32.000]  Ну там не самое сложное отчество, знаете?
[10:32.000 --> 10:34.000]  Ну оно не самое типовое.
[10:34.000 --> 10:36.000]  Ну как вам сказать, знаете...
[10:43.000 --> 10:46.000]  Ладно, отчество оно сложное, но он, конечно, молодец.
[10:48.000 --> 10:50.000]  Видимо, не угадал каким макером писать.
[10:50.000 --> 10:52.000]  Ну ладно.
[10:52.000 --> 10:54.000]  Нет, ну знаете, как бы...
[10:54.000 --> 10:56.000]  Ну я не знаю.
[10:58.000 --> 11:01.000]  Не, ну пыщ-пыщ там и сделаем, это не проблема.
[11:01.000 --> 11:03.000]  Ладно.
[11:03.000 --> 11:05.000]  Ну ладно, это не принципиально.
[11:05.000 --> 11:09.000]  Он не настолько их обозначил, чтобы доской нельзя было пользоваться.
[11:09.000 --> 11:11.000]  Значит, альтернативное определение потока,
[11:11.000 --> 11:13.000]  такое более программистское, на самом деле,
[11:13.000 --> 11:15.000]  которым вы, на самом деле, по умолчанию пользуетесь,
[11:15.000 --> 11:17.000]  когда обычно кодите потоки,
[11:17.000 --> 11:19.000]  оно выглядит другим способом.
[11:19.000 --> 11:21.000]  Но вот они выглядят по-другому.
[11:21.000 --> 11:23.000]  Она говорит, значит, то есть оно говорит...
[11:23.000 --> 11:25.000]  Ну понятно, ну то есть сеть...
[11:25.000 --> 11:27.000]  Давайте, ну я уж что-то для полноты напишу,
[11:27.000 --> 11:29.000]  что вот пишем, определение.
[11:29.000 --> 11:31.000]  Сеть называется это...
[11:31.000 --> 11:33.000]  Там, соответственно, можно сказать V,
[11:33.000 --> 11:37.000]  то есть там G равно V, E,
[11:37.000 --> 11:41.000]  ну и, соответственно, C.
[11:41.000 --> 11:43.000]  Где C...
[11:43.000 --> 11:45.000]  А, нет, неправильно.
[11:45.000 --> 11:47.000]  C, S, T.
[11:47.000 --> 11:49.000]  На самом деле, если формально писать определение сети,
[11:49.000 --> 11:51.000]  то в ней есть понятие исток, исток.
[11:51.000 --> 11:53.000]  То есть это часть определения.
[11:53.000 --> 11:55.000]  То есть обязательно...
[11:55.000 --> 11:59.000]  То есть просто пропускные способности указать недостаточно.
[11:59.000 --> 12:01.000]  Вот.
[12:01.000 --> 12:03.000]  Хотя разные определения бывают,
[12:03.000 --> 12:05.000]  потому что, в принципе,
[12:05.000 --> 12:07.000]  можно рассматривать сети без истока истока.
[12:07.000 --> 12:09.000]  Мы это будем делать, когда будем рассматривать циркуляцию.
[12:09.000 --> 12:11.000]  Но там, в принципе, можно просто сказать,
[12:11.000 --> 12:13.000]  так ладно, пусть исток вот это,
[12:13.000 --> 12:15.000]  исток вот это, но на самом деле нам по барабану.
[12:15.000 --> 12:17.000]  Давай.
[12:17.000 --> 12:19.000]  Вы будете...
[12:19.000 --> 12:21.000]  Ну, короче, вы будете выспрашивать определение.
[12:21.000 --> 12:23.000]  И если будете,
[12:23.000 --> 12:25.000]  то можно ли пользоваться
[12:25.000 --> 12:27.000]  тем, которым было в презентации?
[12:27.000 --> 12:29.000]  Ой, ну...
[12:29.000 --> 12:31.000]  Ну, скажем так.
[12:31.000 --> 12:33.000]  Я буду спрашивать оба определения.
[12:33.000 --> 12:35.000]  То есть тут как бы мне
[12:35.000 --> 12:37.000]  хочется... Тут важно
[12:37.000 --> 12:39.000]  просто понимать, что это как бы более математическое.
[12:39.000 --> 12:41.000]  То есть оно как бы навешивает
[12:41.000 --> 12:43.000]  по сравнению с этим...
[12:43.000 --> 12:45.000]  Так, давайте не буду еще...
[12:45.000 --> 12:47.000]  Черт, я ее комментирую, лучше я сначала напишу определение,
[12:47.000 --> 12:49.000]  потом мы их будем сравнивать.
[12:49.000 --> 12:51.000]  Итак, смотрите, сеть, это просто определение вот такое.
[12:51.000 --> 12:53.000]  То есть формально говорим, что V еет, понятно,
[12:53.000 --> 12:55.000]  вершины ребра, C
[12:55.000 --> 12:57.000]  просто такая вот
[12:57.000 --> 12:59.000]  функция.
[13:01.000 --> 13:03.000]  То есть это пропускные
[13:03.000 --> 13:05.000]  способности.
[13:07.000 --> 13:09.000]  То есть это называется пропускная
[13:09.000 --> 13:11.000]  способность.
[13:13.000 --> 13:15.000]  Значит, S
[13:15.000 --> 13:17.000]  это вершина,
[13:17.000 --> 13:19.000]  она называется исток.
[13:19.000 --> 13:21.000]  T это вершина,
[13:21.000 --> 13:23.000]  не равная истоку,
[13:23.000 --> 13:25.000]  это сток.
[13:29.000 --> 13:31.000]  Вот. То есть
[13:31.000 --> 13:33.000]  мы
[13:33.000 --> 13:35.000]  можем ввести вот такое определение сети.
[13:35.000 --> 13:37.000]  То есть
[13:37.000 --> 13:39.000]  на самом деле вот в этой части
[13:39.000 --> 13:41.000]  определение, то есть на самом деле
[13:41.000 --> 13:43.000]  пишут, что C это все-таки вот такая
[13:43.000 --> 13:45.000]  функция.
[13:45.000 --> 13:47.000]  Вот так.
[13:49.000 --> 13:51.000]  То есть вот где мы определяем
[13:51.000 --> 13:53.000]  поток на матрице смежности,
[13:53.000 --> 13:55.000]  здесь тогда пропускная способность зависит от вершин.
[13:55.000 --> 13:57.000]  Поэтому мы там пишем C от УВ
[13:57.000 --> 13:59.000]  на самом деле. Вот.
[13:59.000 --> 14:01.000]  Ребра ориентированные
[14:01.000 --> 14:03.000]  да.
[14:03.000 --> 14:05.000]  То есть давайте
[14:05.000 --> 14:07.000]  напишем. То есть да, тут надо было бы написать,
[14:07.000 --> 14:09.000]  что V е это
[14:09.000 --> 14:11.000]  ориентированный граф. Да, очень важно,
[14:11.000 --> 14:13.000]  спасибо за замечание, что ребра
[14:13.000 --> 14:15.000]  ориентированные.
[14:15.000 --> 14:17.000]  Ну, то есть конечно могут быть и не ориентированные,
[14:17.000 --> 14:19.000]  но по умолчанию они ориентированные.
[14:19.000 --> 14:21.000]  Значит далее.
[14:21.000 --> 14:23.000]  S такое,
[14:23.000 --> 14:25.000]  T это
[14:25.000 --> 14:27.000]  сток, значит вот так сеть мы определили.
[14:27.000 --> 14:29.000]  Теперь идем дальше.
[14:29.000 --> 14:31.000]  Значит определение.
[14:31.000 --> 14:33.000]  Теперь обычно так везде пишем.
[14:33.000 --> 14:35.000]  Пусть у нас
[14:35.000 --> 14:37.000]  G равно там соответственно
[14:37.000 --> 14:39.000]  V,E,C,S,T.
[14:39.000 --> 14:41.000]  Это сеть.
[14:41.000 --> 14:43.000]  Тогда
[14:43.000 --> 14:45.000]  говорим мы
[14:45.000 --> 14:47.000]  поток
[14:47.000 --> 14:49.000]  значит F
[14:51.000 --> 14:53.000]  значит это тоже
[14:53.000 --> 14:55.000]  функция.
[14:57.000 --> 14:59.000]  То есть это функция.
[14:59.000 --> 15:01.000]  То есть это такая
[15:01.000 --> 15:03.000]  функция F.
[15:03.000 --> 15:05.000]  Значит откуда-куда.
[15:05.000 --> 15:07.000]  Вот здесь мы пишем. То есть
[15:07.000 --> 15:09.000]  где каждому ребру сопоставляется
[15:09.000 --> 15:11.000]  какая-то величина потока.
[15:11.000 --> 15:13.000]  Причем в этот раз, обратите внимание,
[15:13.000 --> 15:15.000]  она не
[15:15.000 --> 15:17.000]  отрицательная.
[15:17.000 --> 15:19.000]  То есть если у нас ребра ориентированная,
[15:19.000 --> 15:21.000]  то мы торжественно заявляем,
[15:21.000 --> 15:23.000]  что
[15:23.000 --> 15:25.000]  пункт A в B
[15:25.000 --> 15:27.000]  минус 5 течет не может.
[15:27.000 --> 15:29.000]  То есть дорога ориентированная.
[15:29.000 --> 15:31.000]  Поэтому
[15:31.000 --> 15:33.000]  все разговоры.
[15:33.000 --> 15:35.000]  Слушайте,
[15:35.000 --> 15:37.000]  из Новгорода в Твери есть ли
[15:37.000 --> 15:39.000]  дорога? Да.
[15:39.000 --> 15:41.000]  Но ехать можно только туда.
[15:41.000 --> 15:43.000]  Что за мелочи? Давайте мы просто напишем,
[15:43.000 --> 15:45.000]  что машина едет не из Твери
[15:45.000 --> 15:47.000]  в Нижний Новгород, а из Нижнего
[15:47.000 --> 15:49.000]  в Твере едет минус одна машина.
[15:49.000 --> 15:51.000]  Ну вот.
[15:51.000 --> 15:53.000]  Но в этом случае
[15:53.000 --> 15:55.000]  подобные разговоры приравниваются
[15:55.000 --> 15:57.000]  к даче взятки и коррупции.
[15:57.000 --> 15:59.000]  Соответственно.
[16:03.000 --> 16:05.000]  Почему?
[16:07.000 --> 16:09.000]  Нет, мы тут ничем нелегальным
[16:09.000 --> 16:11.000]  не занимаемся.
[16:11.000 --> 16:13.000]  Вот.
[16:13.000 --> 16:15.000]  Здесь я говорю, что в этом определении мы
[16:15.000 --> 16:17.000]  все мыслим удобно, что у нас
[16:17.000 --> 16:19.000]  вода течет
[16:19.000 --> 16:21.000]  никакими нетривиальностями,
[16:21.000 --> 16:23.000]  что у нас туда течет минус
[16:23.000 --> 16:25.000]  5 единиц жидкости, мы этим не занимаемся.
[16:25.000 --> 16:27.000]  То есть мы говорим, что
[16:27.000 --> 16:29.000]  все так течет, но есть
[16:29.000 --> 16:31.000]  маленькие оговорки. Какие оговорки есть?
[16:31.000 --> 16:33.000]  Есть две оговорки.
[16:33.000 --> 16:35.000]  Во-первых.
[16:35.000 --> 16:37.000]  Значит, первая оговорка.
[16:37.000 --> 16:39.000]  Ладно.
[16:39.000 --> 16:41.000]  И первая оговорка. Вторая оговорка.
[16:43.000 --> 16:45.000]  Говорит о том, что у нас
[16:45.000 --> 16:47.000]  для любого ребра E
[16:47.000 --> 16:49.000]  верно, что
[16:49.000 --> 16:51.000]  F от E меньше либо равно
[16:51.000 --> 16:53.000]  C от E.
[16:53.000 --> 16:55.000]  И есть
[16:55.000 --> 16:57.000]  третья оговорка. Почему я пишу
[16:57.000 --> 16:59.000]  вторая-третья? По аналогии с тем, что есть.
[16:59.000 --> 17:01.000]  Потому что первой оговорки нет.
[17:01.000 --> 17:03.000]  Потому что у нас как бы
[17:03.000 --> 17:05.000]  обратного ребра нету,
[17:05.000 --> 17:07.000]  так сказать.
[17:07.000 --> 17:09.000]  Это не внимание определения потока.
[17:09.000 --> 17:11.000]  То есть вы конечно там
[17:11.000 --> 17:13.000]  если кто-то писал, то конечно у вас там начинаются
[17:13.000 --> 17:15.000]  фантомные ассоциации, типа там обратное ребро,
[17:15.000 --> 17:17.000]  там остаточная сеть.
[17:17.000 --> 17:19.000]  Но погодите, у нас еще такого нету.
[17:19.000 --> 17:21.000]  То есть конечно это все будет,
[17:21.000 --> 17:23.000]  мы никуда не денемся от этого.
[17:23.000 --> 17:25.000]  Но помните, это тоже не более
[17:25.000 --> 17:27.000]  чем абстракция.
[17:27.000 --> 17:29.000]  Такая удобная абстракция.
[17:29.000 --> 17:31.000]  Поэтому первая нет, а вот третья есть.
[17:31.000 --> 17:33.000]  Как же написать сохранение потока?
[17:33.000 --> 17:35.000]  Но сохранение потока нам теперь реально придется писать,
[17:35.000 --> 17:37.000]  что сколько втекает,
[17:37.000 --> 17:39.000]  столько вытекает.
[17:39.000 --> 17:41.000]  Поэтому придется писать
[17:41.000 --> 17:43.000]  это следующим образом.
[17:43.000 --> 17:45.000]  То есть любой вершины У,
[17:45.000 --> 17:47.000]  которая не исток и не
[17:47.000 --> 17:49.000]  сток,
[17:49.000 --> 17:51.000]  оказывается, что сумма
[17:51.000 --> 17:53.000]  по всем
[17:53.000 --> 17:55.000]  ребрам таким,
[17:55.000 --> 17:57.000]  которые входят
[17:57.000 --> 17:59.000]  в вершину У,
[18:01.000 --> 18:03.000]  равна
[18:03.000 --> 18:05.000]  сумме потоков
[18:05.000 --> 18:07.000]  по всем ребрам таким,
[18:07.000 --> 18:09.000]  что стартовая
[18:09.000 --> 18:11.000]  вершина этого
[18:11.000 --> 18:13.000]  ребра равна У.
[18:13.000 --> 18:15.000]  То есть
[18:15.000 --> 18:17.000]  если брать более
[18:17.000 --> 18:19.000]  приближенное к реальной жизни
[18:19.000 --> 18:21.000]  или реальному программированию определение
[18:21.000 --> 18:23.000]  потока, оно бы выглядело
[18:23.000 --> 18:25.000]  вот таким образом.
[18:25.000 --> 18:27.000]  Понятно, да?
[18:27.000 --> 18:29.000]  То есть в общем-то
[18:29.000 --> 18:31.000]  на уровне
[18:31.000 --> 18:33.000]  математической абстракции
[18:33.000 --> 18:35.000]  всегда можно выбирать
[18:35.000 --> 18:37.000]  какое определение, потому что понятно, что это
[18:37.000 --> 18:39.000]  более-менее одно и то же. Правда?
[18:39.000 --> 18:41.000]  Ну, то есть, по крайней мере,
[18:41.000 --> 18:43.000]  перевести поток,
[18:43.000 --> 18:45.000]  сети поток из этого вида в этот,
[18:45.000 --> 18:47.000]  в этот, в общем-то, труда особо не составляет.
[18:47.000 --> 18:49.000]  Сейчас у нас в таком
[18:49.000 --> 18:51.000]  определении не может
[18:51.000 --> 18:53.000]  вытекать
[18:53.000 --> 18:55.000]  в исток?
[18:55.000 --> 18:57.000]  Нет, почему?
[18:57.000 --> 18:59.000]  Втекать в исток
[18:59.000 --> 19:01.000]  вполне может.
[19:01.000 --> 19:03.000]  В смысле, пойти
[19:03.000 --> 19:05.000]  в истоке и прямо из него же
[19:05.000 --> 19:07.000]  выйти? Нет, погодите,
[19:07.000 --> 19:09.000]  это другое ребро уже будет.
[19:09.000 --> 19:11.000]  Нет, может быть ситуация, когда
[19:11.000 --> 19:13.000]  вода по какому-то ребру втекает
[19:13.000 --> 19:15.000]  в исток, и в это время по другому
[19:15.000 --> 19:17.000]  ребру из истока вода
[19:17.000 --> 19:19.000]  вытекает. Такое вполне может быть.
[19:19.000 --> 19:21.000]  Сейчас
[19:21.000 --> 19:23.000]  не так
[19:23.000 --> 19:25.000]  сформулирую. Мы же хотим,
[19:25.000 --> 19:27.000]  чтобы, как бы говоря,
[19:27.000 --> 19:29.000]  все, что пошло
[19:29.000 --> 19:31.000]  через исток, потом
[19:31.000 --> 19:33.000]  вышло через сток.
[19:33.000 --> 19:35.000]  Ну, в идеале, в идеале
[19:35.000 --> 19:37.000]  хотелось бы. Это у нас такая
[19:37.000 --> 19:39.000]  мечта, да.
[19:39.000 --> 19:41.000]  Это тут достигается.
[19:41.000 --> 19:43.000]  Ну, в максимальном потоке
[19:43.000 --> 19:45.000]  это и так? Нет, погоди,
[19:45.000 --> 19:47.000]  но это не совсем то.
[19:47.000 --> 19:49.000]  Значит, да, вот достигает действительно естественный вопрос.
[19:49.000 --> 19:51.000]  Да, чисто математический вопрос.
[19:51.000 --> 19:53.000]  Да, кажется естественным, да,
[19:53.000 --> 19:55.000]  то есть кажется естественным, что
[19:55.000 --> 19:57.000]  втечет в сток может только
[19:57.000 --> 19:59.000]  то, что вытекло из истока,
[19:59.000 --> 20:01.000]  потому что вода вроде больше нигде
[20:01.000 --> 20:03.000]  не скапливается.
[20:03.000 --> 20:05.000]  То есть там
[20:05.000 --> 20:07.000]  вот эти вот третьи условия
[20:07.000 --> 20:09.000]  в обоих интерпретациях говорят нам, что
[20:09.000 --> 20:11.000]  вода нигде не появляется
[20:11.000 --> 20:13.000]  и нигде не исчезает, кроме истока истока.
[20:13.000 --> 20:15.000]  Да.
[20:15.000 --> 20:17.000]  Нет, да, она может циркулировать
[20:17.000 --> 20:19.000]  по кругу, но это как бы и свыкло,
[20:19.000 --> 20:21.000]  что вот изначально дано, вот
[20:21.000 --> 20:23.000]  из поколён веков так повелось, но
[20:23.000 --> 20:25.000]  как бы не появляется, не исчезает.
[20:25.000 --> 20:27.000]  Вот.
[20:27.000 --> 20:29.000]  То есть да, но вот, то есть да,
[20:29.000 --> 20:31.000]  сразу оговорить сюда, как выглядит сеть.
[20:31.000 --> 20:33.000]  То есть типичная какая-нибудь сеть, обычно
[20:33.000 --> 20:35.000]  мы можем рисовать вот таким вот образом, да,
[20:35.000 --> 20:37.000]  то есть вот это какой-нибудь вот такой ориентированный граф.
[20:37.000 --> 20:39.000]  Чик.
[20:39.000 --> 20:41.000]  Вот.
[20:41.000 --> 20:43.000]  Так, как-нибудь вот так вот
[20:43.000 --> 20:45.000]  можно сделать даже.
[20:45.000 --> 20:47.000]  Вот.
[20:47.000 --> 20:49.000]  Ну, то есть, ну вот,
[20:49.000 --> 20:51.000]  и обычно мы будем писать чаще всего
[20:51.000 --> 20:53.000]  вот так, смотрите. То есть вот есть у нас
[20:53.000 --> 20:55.000]  пропускные способности, как-нибудь от
[20:55.000 --> 20:57.000]  балды, два, четыре там,
[20:57.000 --> 20:59.000]  восемь, шесть, пять,
[20:59.000 --> 21:01.000]  четыре, ну я сейчас от балды пишу, сейчас
[21:01.000 --> 21:03.000]  не принципиально, четыре.
[21:03.000 --> 21:05.000]  Вот, а поток хочется писать
[21:05.000 --> 21:07.000]  следующим образом.
[21:07.000 --> 21:09.000]  То есть вот, где-то вот
[21:09.000 --> 21:11.000]  слева, я вот тут буду писать, что тут течёт, допустим,
[21:11.000 --> 21:13.000]  две единицы потока.
[21:15.000 --> 21:17.000]  Да, где я не нарисовал, будем по умолчанию
[21:17.000 --> 21:19.000]  считать ноль.
[21:19.000 --> 21:21.000]  Вот. Ну, в принципе, вот это, вот это вполне себе
[21:21.000 --> 21:23.000]  поток, по крайней мере, вот по этому
[21:23.000 --> 21:25.000]  определению. Ну, я могу нарисовать матрицу
[21:25.000 --> 21:27.000]  смежности, согласно там, но в этой
[21:27.000 --> 21:29.000]  матрице смежности тогда из этой вершины,
[21:29.000 --> 21:31.000]  ой, забыл нарисовать это.
[21:33.000 --> 21:35.000]  Вот. То есть из этой вершины
[21:35.000 --> 21:37.000]  в эту будете четыре единицы потока,
[21:37.000 --> 21:39.000]  а из эту в эту типа минус две.
[21:39.000 --> 21:41.000]  Вот. Ну, вот
[21:41.000 --> 21:43.000]  по этому определению такого нет.
[21:43.000 --> 21:45.000]  Вот.
[21:45.000 --> 21:47.000]  Значит, далее, что у нас тут ещё
[21:47.000 --> 21:49.000]  происходит?
[21:49.000 --> 21:51.000]  Ну, в принципе, заметим, что
[21:51.000 --> 21:53.000]  да, видим, что здесь
[21:53.000 --> 21:55.000]  максимально наглядно видно, что у нас из эстетик
[21:55.000 --> 21:57.000]  ещё две единицы жидкости в единицу времени.
[21:57.000 --> 21:59.000]  Вот.
[21:59.000 --> 22:01.000]  Ну, в принципе, да, можно теоретически развлечься
[22:01.000 --> 22:03.000]  и забабахать вот что-нибудь подобное.
[22:07.000 --> 22:09.000]  Во.
[22:11.000 --> 22:13.000]  То есть, видите, как, ну вот,
[22:13.000 --> 22:15.000]  то есть как интересно, то есть заметим, что
[22:15.000 --> 22:17.000]  из эстетик течёт всё ещё две единицы жидкости.
[22:19.000 --> 22:21.000]  Да. Ну, вот я и хочу отметить,
[22:21.000 --> 22:23.000]  да, что как бы в потоке
[22:23.000 --> 22:25.000]  не обязательно вся вода течёт из эстетик,
[22:25.000 --> 22:27.000]  потому что в принципе есть вот такие,
[22:27.000 --> 22:29.000]  могут быть вот такие циклы. То есть, более того,
[22:29.000 --> 22:31.000]  я могу здесь даже ноль нарисовать
[22:31.000 --> 22:33.000]  и получается такой парадокс.
[22:33.000 --> 22:35.000]  То есть, как бы сеть вроде работает,
[22:35.000 --> 22:37.000]  какая-то вода течёт, но тем
[22:37.000 --> 22:39.000]  не менее из эстетика вода
[22:39.000 --> 22:41.000]  ничего не перетекает.
[22:41.000 --> 22:43.000]  То есть, такое
[22:43.000 --> 22:45.000]  бывает.
[22:45.000 --> 22:47.000]  Вот. То есть, что-то
[22:47.000 --> 22:49.000]  из, знаете, что-то из цикла, что
[22:49.000 --> 22:51.000]  как бы, то есть, вроде сеть
[22:51.000 --> 22:53.000]  ничего полезного не делает, но как бы
[22:53.000 --> 22:55.000]  рабочие места мы обеспечиваем.
[22:55.000 --> 22:57.000]  Что-то из цикла очень точное определение.
[22:57.000 --> 22:59.000]  Вот.
[22:59.000 --> 23:01.000]  Да.
[23:01.000 --> 23:03.000]  Вот.
[23:03.000 --> 23:05.000]  Так что тут
[23:05.000 --> 23:07.000]  то есть, видите, поток, вот вещь такая.
[23:07.000 --> 23:09.000]  То есть, поток так подразумевает, что какая-то
[23:09.000 --> 23:11.000]  вода может как бы циркулировать.
[23:11.000 --> 23:13.000]  Вот. То есть, понятно, что
[23:13.000 --> 23:15.000]  я привёл пример одного цикла,
[23:15.000 --> 23:17.000]  но тут они могут быть несколько.
[23:17.000 --> 23:19.000]  А, ну, например, что-то далеко ходить. Я могу ещё вот так
[23:19.000 --> 23:21.000]  нарисовать, в принципе.
[23:21.000 --> 23:23.000]  О.
[23:23.000 --> 23:25.000]  А нет, так не могу.
[23:27.000 --> 23:29.000]  О. А вот так могу.
[23:29.000 --> 23:31.000]  Вот так.
[23:31.000 --> 23:33.000]  Ну, то есть, видите,
[23:33.000 --> 23:35.000]  как бы тут более сложная структура, то есть, хотя она
[23:35.000 --> 23:37.000]  конечно декомпозируется на два цикла.
[23:37.000 --> 23:39.000]  Давайте к композициям чуть позже поговорим.
[23:39.000 --> 23:41.000]  Вот.
[23:43.000 --> 23:45.000]  Ой.
[23:45.000 --> 23:47.000]  Итак.
[23:47.000 --> 23:49.000]  Вот.
[23:49.000 --> 23:51.000]  Но вот возник уже действительно важный вопрос.
[23:51.000 --> 23:53.000]  Да.
[23:53.000 --> 23:55.000]  То есть, возникает
[23:55.000 --> 23:57.000]  действительно важный вопрос, почему, например,
[23:57.000 --> 23:59.000]  в таком определении, да и, в общем-то, в том,
[23:59.000 --> 24:01.000]  действительно оказывается, что
[24:01.000 --> 24:03.000]  сколько воды вытекает из-за стока,
[24:03.000 --> 24:05.000]  столько втекает. То есть, в общем-то...
[24:05.000 --> 24:07.000]  В первом определении мы какие-то ограничения на С
[24:07.000 --> 24:09.000]  от УВУ накладываем?
[24:09.000 --> 24:11.000]  Эээ...
[24:11.000 --> 24:13.000]  Как мы действуем с тем, что у нас...
[24:13.000 --> 24:15.000]  Нет, на С мы никаких определений
[24:15.000 --> 24:17.000]  ограничений не накладываем.
[24:17.000 --> 24:19.000]  С от УВУ и С от ВУ никак не связаны?
[24:19.000 --> 24:21.000]  Да, С от УВУ и С от ВУ никак не связаны
[24:21.000 --> 24:23.000]  ни в этом определении, ни в этом.
[24:23.000 --> 24:25.000]  Это тебе дали сверху.
[24:25.000 --> 24:27.000]  Вот. Нет, то есть, это просто
[24:27.000 --> 24:29.000]  размеры труб. То есть, единственное ограничение,
[24:29.000 --> 24:31.000]  которое есть здесь, то, что они не отрицательные.
[24:31.000 --> 24:33.000]  Вот.
[24:33.000 --> 24:35.000]  Это все, что дано.
[24:35.000 --> 24:37.000]  Вот. Ну, теперь вытекает...
[24:37.000 --> 24:39.000]  Ну, если мы хотим определить, что сколько вытекло,
[24:39.000 --> 24:41.000]  столько втекло, нам бы действительно определить.
[24:41.000 --> 24:43.000]  А что такое вытекло-втекло?
[24:43.000 --> 24:45.000]  И вообще, что такое величина потока?
[24:45.000 --> 24:47.000]  Какой поток вообще лучше?
[24:47.000 --> 24:49.000]  Ну, нам, конечно, лучше, чтобы
[24:49.000 --> 24:51.000]  чем больше мы перекачиваем из С в Т, тем лучше.
[24:51.000 --> 24:53.000]  Но теперь надо определить.
[24:53.000 --> 24:55.000]  А сколько воды мы прям вот перекачиваем
[24:55.000 --> 24:57.000]  из С в Т?
[24:57.000 --> 24:59.000]  Ну, разница...
[24:59.000 --> 25:01.000]  Ну, вот.
[25:01.000 --> 25:03.000]  Ну, а мы видим, да, здесь
[25:03.000 --> 25:05.000]  в этой сети определение очень просто.
[25:05.000 --> 25:07.000]  Сколько воды вытекает из Истока, но с учетом
[25:07.000 --> 25:09.000]  отрицательности, обратите внимание.
[25:09.000 --> 25:11.000]  То есть, важный момент,
[25:11.000 --> 25:13.000]  да, то есть, если я напишу...
[25:13.000 --> 25:15.000]  То есть, вот в этой терминологии определение,
[25:15.000 --> 25:17.000]  то тогда у меня получится чуть по-другому.
[25:17.000 --> 25:19.000]  То есть, здесь мне придется
[25:19.000 --> 25:21.000]  написать. Определение 1
[25:21.000 --> 25:23.000]  это, значит, модуль
[25:23.000 --> 25:25.000]  ФС. Да, вот эту штуку
[25:25.000 --> 25:27.000]  я называю обычно модуль ФС. То есть, типа
[25:27.000 --> 25:29.000]  пропускная способность, определенная через Исток.
[25:29.000 --> 25:31.000]  Ну, не пропускная способность, а вот
[25:31.000 --> 25:33.000]  величина потока.
[25:33.000 --> 25:35.000]  Она равна
[25:35.000 --> 25:37.000]  сколько воды вытекает
[25:37.000 --> 25:39.000]  из Истока.
[25:39.000 --> 25:41.000]  То есть, пишем...
[25:41.000 --> 25:43.000]  Это временное обозначение, которое потом
[25:43.000 --> 25:45.000]  обозначается просто на модулях, да?
[25:45.000 --> 25:47.000]  Ну, по факту, да.
[25:47.000 --> 25:49.000]  То есть, E точка start, пардон,
[25:49.000 --> 25:51.000]  равно S.
[25:51.000 --> 25:53.000]  Почему мы не вычитаем то, что это было?
[25:53.000 --> 25:55.000]  Потому что я это еще не дописал.
[25:55.000 --> 25:57.000]  Вот, я вот хочу обратить
[25:57.000 --> 25:59.000]  внимание, что в этой, смотрите,
[25:59.000 --> 26:01.000]  в этой пределе тупой
[26:01.000 --> 26:03.000]  такой, так сказать, это...
[26:03.000 --> 26:05.000]  Сейчас, каким точным русским
[26:05.000 --> 26:07.000]  словом заменить английское straightforward?
[26:07.000 --> 26:09.000]  Прямолинейным.
[26:09.000 --> 26:11.000]  Да, прямолинейным.
[26:11.000 --> 26:13.000]  Нет, это как литературно слишком.
[26:13.000 --> 26:15.000]  Да.
[26:15.000 --> 26:17.000]  Да, лобовым.
[26:17.000 --> 26:19.000]  Во. Да. А.
[26:19.000 --> 26:21.000]  Лом. Да, тупо. Да.
[26:21.000 --> 26:23.000]  А дуболомным. Во.
[26:23.000 --> 26:25.000]  Вот дуболомным. Вот это да.
[26:25.000 --> 26:27.000]  Вот это дуболомное определение,
[26:27.000 --> 26:29.000]  но тогда оно приводит к тому,
[26:29.000 --> 26:31.000]  что приходится писать вот это вот.
[26:31.000 --> 26:33.000]  То есть, приходится вычитать, сколько
[26:33.000 --> 26:35.000]  вернут. То есть, как бы...
[26:35.000 --> 26:37.000]  То есть, чтобы не было такое,
[26:37.000 --> 26:39.000]  что на самом деле у нас вытекает аж на миллион
[26:39.000 --> 26:41.000]  воды, просто полмиллиона возвращается
[26:41.000 --> 26:43.000]  в качестве отката там какого-то.
[26:43.000 --> 26:45.000]  Ну да.
[26:45.000 --> 26:47.000]  Не, ну если уж мы говорим о коррупции,
[26:47.000 --> 26:49.000]  ну как бы да, нет. Вот здесь все явно
[26:49.000 --> 26:51.000]  прописано, что есть вода, которая вытекает,
[26:51.000 --> 26:53.000]  а есть вода, которая возвращается.
[26:53.000 --> 26:55.000]  А здесь?
[26:55.000 --> 26:57.000]  Нет, а вот здесь
[26:57.000 --> 26:59.000]  к челке?
[26:59.000 --> 27:01.000]  Нет, здесь это прописано.
[27:01.000 --> 27:03.000]  Вот E маленько принадлежит E большое,
[27:03.000 --> 27:05.000]  там что-то явно прописано, и не E
[27:05.000 --> 27:07.000]  старт равно S.
[27:07.000 --> 27:09.000]  В смысле, E точка старт равно S.
[27:09.000 --> 27:11.000]  Я бы просто обозначал на самом деле S
[27:11.000 --> 27:13.000]  стрелочка, а входящий
[27:13.000 --> 27:15.000]  стрелочка S.
[27:15.000 --> 27:17.000]  Нет, ну может так, но я здесь пишу
[27:17.000 --> 27:19.000]  максимально формально, потому что там если
[27:19.000 --> 27:21.000]  чем более такие определения вводить,
[27:21.000 --> 27:23.000]  то есть вероятность, что кто-то
[27:23.000 --> 27:25.000]  просто не поймет, что в голове не та картинка.
[27:29.000 --> 27:31.000]  Да, совершенно верно.
[27:45.000 --> 27:47.000]  Ну и туда.
[27:47.000 --> 27:49.000]  Нет, мы это делаем
[27:49.000 --> 27:51.000]  сейчас мы определение пишем только для
[27:51.000 --> 27:53.000]  истока, но это на самом деле
[27:53.000 --> 27:55.000]  нет, правильные вопросы, которые вот говорят о том,
[27:55.000 --> 27:57.000]  что действительно заниматься формализмом полезно.
[27:57.000 --> 27:59.000]  Почему?
[27:59.000 --> 28:01.000]  Потому что, да, интуитивно вот могут такие вопросы
[28:01.000 --> 28:03.000]  возникать, и это как бы говорит, что может быть
[28:03.000 --> 28:05.000]  мы неправильно как-то это говорим, или что-то такое.
[28:05.000 --> 28:07.000]  Вот.
[28:07.000 --> 28:09.000]  Но оказывается, ну вот,
[28:09.000 --> 28:11.000]  но чуть позже убедимся, что на самом деле ничего страшного
[28:11.000 --> 28:13.000]  там в этом нет. То есть, в принципе,
[28:13.000 --> 28:15.000]  если по какому-то циклу вытекла вода,
[28:15.000 --> 28:17.000]  протекла и вернулась, то на самом деле
[28:17.000 --> 28:19.000]  мы ее прибавили к потоку, мы ее вычли,
[28:19.000 --> 28:21.000]  она не считается.
[28:21.000 --> 28:23.000]  Если она в цикле крутится, она не возвращается.
[28:23.000 --> 28:25.000]  Нет, если она крутится в цикле
[28:25.000 --> 28:27.000]  несвязанном СС, то, да, мы ее и не считаем.
[28:29.000 --> 28:31.000]  Потому что для нас поток это сколько перетекает из СВТ.
[28:35.000 --> 28:37.000]  Если у тебя цикл несвязанный СС,
[28:37.000 --> 28:39.000]  пофиг, если он
[28:39.000 --> 28:41.000]  связанный СС, то мы вычтем.
[28:41.000 --> 28:43.000]  Если там есть какой-то припирил, то так быть не может.
[28:43.000 --> 28:45.000]  Ну как-то так.
[28:45.000 --> 28:47.000]  Но важный момент такой,
[28:47.000 --> 28:49.000]  потому что одно дело наша интуитивная
[28:49.000 --> 28:51.000]  картинка, другое дело еще все-таки
[28:51.000 --> 28:53.000]  работает ли
[28:53.000 --> 28:55.000]  формализм. Потому что формально
[28:55.000 --> 28:57.000]  F это просто
[28:57.000 --> 28:59.000]  какая-то функция,
[28:59.000 --> 29:01.000]  которую мы избрали. Вот такая функция
[29:01.000 --> 29:03.000]  с вот такими свойствами.
[29:05.000 --> 29:07.000]  Возникает вопрос,
[29:07.000 --> 29:09.000]  ну вот есть определение, сколько воды
[29:09.000 --> 29:11.000]  вытекает, почему здесь
[29:11.000 --> 29:13.000]  никакого минуса нет?
[29:13.000 --> 29:15.000]  Вот минус прописан вот здесь.
[29:15.000 --> 29:17.000]  Видим, да?
[29:17.000 --> 29:19.000]  То есть просто, когда вода
[29:19.000 --> 29:21.000]  вытекает в нас, то мы это
[29:21.000 --> 29:23.000]  учитываем просто со знаком минус.
[29:23.000 --> 29:25.000]  Поэтому здесь получается,
[29:25.000 --> 29:27.000]  оказывается, видите, мы пишем короче.
[29:27.000 --> 29:29.000]  Видите, да?
[29:29.000 --> 29:31.000]  Или не видите?
[29:33.000 --> 29:35.000]  Нет, ну мало, просто я смотрю,
[29:35.000 --> 29:37.000]  кто-то смотрит, щурится, поэтому
[29:37.000 --> 29:39.000]  не знаю. Вот.
[29:39.000 --> 29:41.000]  А вот есть второе определение.
[29:41.000 --> 29:43.000]  Почему? Надо определять,
[29:43.000 --> 29:45.000]  как бы из истока, мало ли там, что там
[29:45.000 --> 29:47.000]  по откатам берется, надо определять не
[29:47.000 --> 29:49.000]  сколько вышло из истока, но
[29:49.000 --> 29:51.000]  то, что до стока дотекает.
[29:53.000 --> 29:55.000]  Вот. Правда там могут быть
[29:55.000 --> 29:57.000]  симметричные накрутки.
[29:57.000 --> 29:59.000]  То есть я думаю, до меня дотекает пять, а мне нужно
[29:59.000 --> 30:01.000]  продемонстрировать, что дотекает десять. Ну давайте я тут
[30:01.000 --> 30:03.000]  циклик какой-нибудь забабахаю.
[30:03.000 --> 30:05.000]  Теоретически могло бы быть.
[30:05.000 --> 30:07.000]  Но здесь
[30:07.000 --> 30:09.000]  заметим, что здесь такой циклик как бы
[30:09.000 --> 30:11.000]  ничтожится, очевидно. Ну а здесь,
[30:11.000 --> 30:13.000]  как вы понимаете, здесь можно написать тоже
[30:13.000 --> 30:15.000]  идентичное определение.
[30:15.000 --> 30:17.000]  Да, то есть тоже там
[30:17.000 --> 30:19.000]  будут модуль ft
[30:19.000 --> 30:21.000]  равен, соответственно, чем он там
[30:21.000 --> 30:23.000]  равен. Там тоже сумма f от
[30:23.000 --> 30:25.000]  e минус сумма f от e.
[30:25.000 --> 30:27.000]  Вот.
[30:27.000 --> 30:29.000]  Только здесь
[30:29.000 --> 30:31.000]  оговорка, что тут
[30:31.000 --> 30:33.000]  сколько втекает во-первых в сток
[30:33.000 --> 30:35.000]  и тут конечно сколько
[30:35.000 --> 30:37.000]  вытекает из стока.
[30:37.000 --> 30:39.000]  Вот.
[30:41.000 --> 30:43.000]  Вот.
[30:43.000 --> 30:45.000]  Интуитивно кажется, что
[30:45.000 --> 30:47.000]  если вода нигде не появляется и не исчезает,
[30:47.000 --> 30:49.000]  а мы прям вот прописали, что у нас такое должно быть,
[30:49.000 --> 30:51.000]  то интуитивно
[30:51.000 --> 30:53.000]  уже кому-то вообще кажется, что
[30:53.000 --> 30:55.000]  уже из этого следует, что в общем-то
[30:55.000 --> 30:57.000]  эти две величины должны быть
[30:57.000 --> 30:59.000]  эквивалентны.
[30:59.000 --> 31:01.000]  Но как бы вы уже понимаете, что
[31:01.000 --> 31:03.000]  формально это не ответ, хотя конечно
[31:03.000 --> 31:05.000]  кого-то спрашивает, кто-то так пытается удивленно,
[31:05.000 --> 31:07.000]  что вода нигде не скапливается, все.
[31:07.000 --> 31:09.000]  А чего вы от меня еще хотите вообще?
[31:09.000 --> 31:11.000]  Ну вот.
[31:11.000 --> 31:13.000]  Как вам сохранение
[31:13.000 --> 31:15.000]  достаточно
[31:15.000 --> 31:17.000]  антисимметричности только?
[31:17.000 --> 31:19.000]  Нет.
[31:19.000 --> 31:21.000]  Просто сумма
[31:21.000 --> 31:23.000]  всех f и краб на 0.
[31:23.000 --> 31:25.000]  Ну не скажите. Вот давайте смотреть.
[31:25.000 --> 31:27.000]  Ну вот давайте разбираться.
[31:27.000 --> 31:29.000]  Вот сразу говори, вот у нас возникает
[31:29.000 --> 31:31.000]  лемма о том, что
[31:31.000 --> 31:33.000]  определение 1, определение 2
[31:33.000 --> 31:35.000]  и т.д.
[31:35.000 --> 31:37.000]  Вот.
[31:37.000 --> 31:39.000]  Ну и вот тут собственно
[31:39.000 --> 31:41.000]  доказательства.
[31:43.000 --> 31:45.000]  Значит, ну давайте попробуем.
[31:45.000 --> 31:47.000]  Да, тут описан какой-то
[31:47.000 --> 31:49.000]  текст. Так что давайте
[31:49.000 --> 31:51.000]  попробуем написать это, расписать это в более
[31:51.000 --> 31:53.000]  цивильном виде и понять, что это
[31:53.000 --> 31:55.000]  вообще значит.
[31:57.000 --> 31:59.000]  Значит, смотреть.
[31:59.000 --> 32:01.000]  Так, ну ладно, это я уже могу
[32:01.000 --> 32:03.000]  вот в принципе стирать.
[32:03.000 --> 32:05.000]  Марил? Марил.
[32:13.000 --> 32:15.000]  Нет.
[32:15.000 --> 32:17.000]  Конечно понятно, что это
[32:17.000 --> 32:19.000]  все по телевизору pokажут.
[32:31.000 --> 32:50.000]  Вот, значит, смотрите, теперь давайте посмотрим, что же там написано.
[32:50.000 --> 32:52.000]  А написано там примерно следующее.
[32:52.000 --> 32:55.000]  Там написано, что ноль равно...
[32:55.000 --> 32:57.000]  Чему же равен нулю?
[32:57.000 --> 32:59.000]  Что же равно нулю?
[32:59.000 --> 33:02.000]  А нулю равно следующей эпической суммы.
[33:02.000 --> 33:08.000]  Мы прибираемся по всем вершинам не из стока из стока.
[33:08.000 --> 33:09.000]  Вот.
[33:09.000 --> 33:14.000]  И в каждой из них суммируем, сколько воды вытекает.
[33:14.000 --> 33:17.000]  Вот так вот пишем.
[33:17.000 --> 33:21.000]  Видите, да?
[33:21.000 --> 33:23.000]  Это верно тупо по третьему свойству.
[33:23.000 --> 33:27.000]  Потому что, видите, мы тупо сложили вот такие величины, которые равны нулю.
[33:27.000 --> 33:29.000]  Видите, да?
[33:29.000 --> 33:32.000]  Вот.
[33:32.000 --> 33:35.000]  То есть это вот можно так действительно формулировать.
[33:35.000 --> 33:37.000]  Ну а теперь заметим следующее.
[33:37.000 --> 33:42.000]  Что я могу в принципе сказать, что эту сумму можно разбить на два слагаемых.
[33:42.000 --> 33:51.000]  Где слагаемые на сумму, в которой вершина В тоже не из стока из стока.
[33:51.000 --> 33:55.000]  Вот так вот, да?
[33:55.000 --> 33:57.000]  Вот.
[33:57.000 --> 34:02.000]  И то, что собственно вытекает из стока и вытекает из-за стока.
[34:02.000 --> 34:04.000]  То есть можно просто вот так написать.
[34:13.000 --> 34:15.000]  Так, только здесь я пишу.
[34:15.000 --> 34:16.000]  Так, нет, не так.
[34:16.000 --> 34:17.000]  Вот так пишем.
[34:17.000 --> 34:19.000]  Тут мы пишем С.
[34:19.000 --> 34:21.000]  И тут мы пишем вот так.
[34:21.000 --> 34:23.000]  Вот.
[34:25.000 --> 34:26.000]  Вот.
[34:26.000 --> 34:28.000]  Ну а теперь, ну вот.
[34:28.000 --> 34:31.000]  То теперь замечаем, что у нас есть мистическое первое свойство.
[34:31.000 --> 34:33.000]  Антисимметричное.
[34:35.000 --> 34:36.000]  Ждю.
[34:50.000 --> 34:51.000]  Ага.
[34:51.000 --> 34:52.000]  Да.
[34:52.000 --> 34:54.000]  Да, неправ, неправ, неправ.
[34:55.000 --> 34:56.000]  Да.
[34:56.000 --> 34:59.000]  В, С, В, Т.
[34:59.000 --> 35:00.000]  Да, прошу прощения.
[35:00.000 --> 35:02.000]  Неправ, неправ, неправ, неправ.
[35:07.000 --> 35:08.000]  Какая?
[35:08.000 --> 35:09.000]  Подождите.
[35:09.000 --> 35:11.000]  По токе мы сейчас изучаем первое.
[35:12.000 --> 35:13.000]  Да.
[35:13.000 --> 35:16.000]  Да, я сейчас просто расписываю доказательства, которые вот там.
[35:16.000 --> 35:17.000]  То есть вот как бы.
[35:17.000 --> 35:21.000]  То есть да, к сожалению, да, его там можно, его там нужно как бы еще раз парсить.
[35:21.000 --> 35:22.000]  Но соответственно.
[35:22.000 --> 35:23.000]  Значит, смотрим.
[35:24.000 --> 35:25.000]  Ну вот.
[35:25.000 --> 35:30.000]  Ну а теперь замечаем, что по первому свойству вот это можно убить.
[35:30.000 --> 35:31.000]  Видите, да?
[35:31.000 --> 35:35.000]  Потому что мы тупо пробегаемся по парам вершин одного и того же множества и суммируем
[35:35.000 --> 35:36.000]  F от УВ.
[35:36.000 --> 35:39.000]  Поэтому там в силу антисимметричности там напарники убиваются.
[35:40.000 --> 35:41.000]  Вот.
[35:42.000 --> 35:43.000]  СТ.
[35:43.000 --> 35:46.000]  Ну да, то есть если совпадает, то все равно работает.
[35:46.000 --> 35:47.000]  Да.
[35:47.000 --> 35:51.000]  Поэтому здесь можно аккуратненько, ну и здесь вот можно там вот промотать несколько
[35:51.000 --> 35:52.000]  нот.
[35:52.000 --> 35:57.000]  То есть пробегаемся, сколько у нас тут F от ВС.
[35:57.000 --> 36:00.000]  Ну я просто переписываю, чтобы пока не запутаться.
[36:03.000 --> 36:04.000]  Вот.
[36:05.000 --> 36:14.000]  Ну в принципе можно заметить, что на самом деле вот эту оговорку без СТ я могу в принципе
[36:14.000 --> 36:15.000]  и выкинуть.
[36:23.000 --> 36:24.000]  Вот.
[36:25.000 --> 36:27.000]  То есть могу сделать вот такой переход.
[36:27.000 --> 36:29.000]  Ну опять из антисимметричности.
[36:29.000 --> 36:33.000]  Ну по сути да, потому что, во-первых, по антисимметричности, да, заметим важное
[36:33.000 --> 36:34.000]  приятное свойство.
[36:34.000 --> 36:36.000]  F от УУ равно нулю так или иначе.
[36:39.000 --> 36:40.000]  Вот.
[36:41.000 --> 36:42.000]  Вот соответственно.
[36:42.000 --> 36:46.000]  Поэтому что я здесь добавил, поэтому по сравнению с этими нулями, что я тут добавил?
[36:46.000 --> 36:51.000]  Тут я добавил F от СТ, как бы да, а тут я добавил F от СТ.
[36:52.000 --> 36:56.000]  Они друг друга поубивали, поэтому, собственно, ничего не поменялось.
[36:57.000 --> 36:58.000]  Вот.
[36:59.000 --> 37:00.000]  Но тогда что это такое?
[37:00.000 --> 37:10.000]  Заметим, что вот это вот F от ВС плюс F от ВТ равно минус величина потока по истоку
[37:10.000 --> 37:12.000]  плюс величина потока по стоку.
[37:13.000 --> 37:14.000]  Все, доказательство окончено.
[37:22.000 --> 37:23.000]  Вот.
[37:24.000 --> 37:28.000]  То есть вот такой формальное доказательство получилось.
[37:29.000 --> 37:36.000]  То есть действительно оказывается, что по такому определению, сколько втекает,
[37:36.000 --> 37:37.000]  столько и вытекает.
[37:40.000 --> 37:41.000]  Не больше и не меньше.
[37:42.000 --> 37:47.000]  Ну в качестве упражнений вам остается провернуть то же самое доказательство,
[37:47.000 --> 37:50.000]  но в другое определение.
[37:52.000 --> 37:56.000]  Ну то есть суть будет абсолютно так же, только букв придется тут писать в два раза больше,
[37:56.000 --> 38:00.000]  потому что внутри каждой этой суммы вам придется тут в явном виде писать,
[38:00.000 --> 38:03.000]  типа сколько вытекает, минус сколько втекает.
[38:04.000 --> 38:05.000]  Вот.
[38:05.000 --> 38:09.000]  А так просто свойство антисимметричности позволило вам этого не писать.
[38:11.000 --> 38:12.000]  Вот.
[38:12.000 --> 38:17.000]  Значит это нас и приводит к тому, что получается, что это два определения эквивалентные,
[38:17.000 --> 38:22.000]  тогда эту величину мы теперь называем просто модуль F и объявляем, что это просто величина потока.
[38:23.000 --> 38:24.000]  Так.
[38:24.000 --> 38:27.000]  Есть ли тут какие-то вопросы?
[38:28.000 --> 38:33.000]  Маленькая тонкость еще про то, что мне не очень понятно, почему топливный, который вы дали,
[38:33.000 --> 38:37.000]  и той эквалентной с точки зрения материи, потому что там вот вы рассматривали ребра.
[38:38.000 --> 38:39.000]  Да.
[38:39.000 --> 38:40.000]  Ну.
[38:42.000 --> 38:43.000]  Нет, отвечу.
[38:43.000 --> 38:44.000]  Нет, я отвечу.
[38:44.000 --> 38:45.000]  Я отвечу.
[38:45.000 --> 38:46.000]  Идея в следующем.
[38:46.000 --> 38:49.000]  На самом деле оно эквивалентно более-менее в том плане, что, как я уже сказал,
[38:49.000 --> 38:52.000]  что если у вас есть кратные ребра, там три трубы, допустим,
[38:53.000 --> 38:58.000]  то с точки зрения этого определения просто это одна большая труба с общей пропускной способностью.
[38:58.000 --> 38:59.000]  Нет, это понятно получить.
[38:59.000 --> 39:03.000]  Из того, это мы свели мотоопределение к этому обратную сторону.
[39:04.000 --> 39:11.000]  Нет, обратная сводится просто совсем в тупую, просто в обратном случае не будет кратных ребр.
[39:14.000 --> 39:15.000]  Сейчас.
[39:17.000 --> 39:21.000]  То есть, во-первых, можно просто в тупую сделать, только просто с оговоркой,
[39:21.000 --> 39:27.000]  что, во-первых, не будет кратных ребров, то есть могут быть ребра с нулевой пропускной способностью.
[39:27.000 --> 39:29.000]  Правда, это нас не сильно волнует.
[39:29.000 --> 39:31.000]  Нет, просто здесь у нас граф по факту не ориентирован.
[39:33.000 --> 39:34.000]  Нет, почему нет?
[39:34.000 --> 39:35.000]  На самом деле нет.
[39:35.000 --> 39:36.000]  Ну, не совсем так.
[39:36.000 --> 39:37.000]  Граф ориентированный.
[39:37.000 --> 39:38.000]  Не ориентированный, а с мультирёхами.
[39:38.000 --> 39:39.000]  Здесь вот без мультирёха.
[39:39.000 --> 39:40.000]  Да.
[39:40.000 --> 39:43.000]  Да, то есть, конечно, то определение более практично,
[39:43.000 --> 39:48.000]  потому что оно, во-первых, подразумевает мультирёбра, точнее их возможность прямо с ними работает,
[39:48.000 --> 39:51.000]  а во-вторых, что самое главное, почему оно практичнее,
[39:51.000 --> 39:54.000]  оно не подразумевает, что размер графа обязательно в квадрат.
[39:54.000 --> 39:59.000]  То есть, если у вас там сеть в реальности на 100 тысяч вершин и 200 тысяч ребер,
[39:59.000 --> 40:03.000]  то определение его кушает, а это не особо.
[40:04.000 --> 40:07.000]  То есть, это нам может быть важно именно с нашей практической точки зрения,
[40:07.000 --> 40:09.000]  когда мы будем время исследовать.
[40:10.000 --> 40:11.000]  А мы же будем исследовать.
[40:11.000 --> 40:15.000]  То есть, у нас же там 8 точки будут какие-то там всякие зекорни и СВ там какие-то возникать, да?
[40:16.000 --> 40:17.000]  К сожалению, будут.
[40:17.000 --> 40:18.000]  Нет, почему к сожалению?
[40:18.000 --> 40:19.000]  Там как раз красота.
[40:20.000 --> 40:21.000]  Что, разве не кайф, что это?
[40:21.000 --> 40:24.000]  Оказывается, если у тебя 2 доли граф на 100 тысяч вершин и 200 тысяч ребер,
[40:24.000 --> 40:25.000]  то про сочетание ищется.
[40:26.000 --> 40:27.000]  Кун заходит просто.
[40:28.000 --> 40:29.000]  Ну, как бы...
[40:30.000 --> 40:32.000]  Кун заходит, ну, удачи, удачи.
[40:33.000 --> 40:37.000]  Честно скажу, у товарища Данилюка другое мнение по данному вопросу.
[40:37.000 --> 40:38.000]  Межсорт 3?
[40:39.000 --> 40:42.000]  Нет, он может этого не знать, потому что он не знает, что это так называется.
[40:43.000 --> 40:46.000]  Там полный протокол межсорта, наверное, он там в том или ином виде сталкивался.
[40:48.000 --> 40:52.000]  Это, конечно, типичная программистская там попытаться доказать человеку, что он тупой,
[40:52.000 --> 40:54.000]  потому что он не знает, что означает вот эта аббревиатура.
[40:55.000 --> 40:57.000]  Там выясняется, что да, он как бы прекрасно ей пользуется,
[40:57.000 --> 40:59.000]  просто он первый раз слышит, что она так называется.
[41:01.000 --> 41:02.000]  Ладно, ну, это мы с тобой.
[41:02.000 --> 41:03.000]  Кто больше, чем Динец?
[41:04.000 --> 41:05.000]  Кун больше, чем Динец.
[41:08.000 --> 41:09.000]  Ну, там по-разному, ладно.
[41:10.000 --> 41:12.000]  Нет, на самом деле просто я почему умненько упомянул,
[41:12.000 --> 41:14.000]  просто у него есть типическая задачка на эту тему,
[41:14.000 --> 41:16.000]  с которой мы чуть позже обязательно столкнемся.
[41:18.000 --> 41:19.000]  Да.
[41:20.000 --> 41:21.000]  Ну, то есть это шедевры.
[41:24.000 --> 41:25.000]  Ну, я думаю, что это шедевры.
[41:26.000 --> 41:27.000]  Ну, я думаю, что это шедевры.
[41:28.000 --> 41:29.000]  Ну, я думаю, что это шедевры.
[41:29.000 --> 41:30.000]  Это шедевры.
[41:32.000 --> 41:34.000]  Прям на эту не гарантирую.
[41:34.000 --> 41:36.000]  Но домашнее задание, естественно, на потоке будет.
[41:37.000 --> 41:38.000]  Ну, вообще...
[41:38.000 --> 41:40.000]  Чем отличается контест от подобных?
[41:43.000 --> 41:45.000]  Ну, потому что нет, домашнее задание конкретно на эту тему,
[41:45.000 --> 41:48.000]  как будто конкретно на эту тему Данилюка будет отдельный конкретный контест.
[41:49.000 --> 41:52.000]  А у нас этого, как вы догадываетесь, не будет, у нас как бы будет единый контест.
[41:53.000 --> 41:56.000]  То есть понятно, что там задачи будут на много чего, но соответственно.
[41:57.000 --> 41:58.000]  Ладно.
[41:58.000 --> 41:59.000]  Смотрите.
[42:00.000 --> 42:03.000]  Так вот, вот мы дошли до примера, кстати.
[42:04.000 --> 42:05.000]  Да.
[42:08.000 --> 42:09.000]  Так.
[42:11.000 --> 42:12.000]  Ага, да-да-да.
[42:13.000 --> 42:14.000]  Только давайте не...
[42:15.000 --> 42:18.000]  Но давайте все-таки аккуратно, произведите уважение к реально существующим городам в Канаде.
[42:19.000 --> 42:20.000]  Вот.
[42:21.000 --> 42:22.000]  Так что, соответственно.
[42:23.000 --> 42:24.000]  В конце концов, да, видите?
[42:25.000 --> 42:26.000]  То есть это отдельно.
[42:26.000 --> 42:27.000]  Интересно, что как бы...
[42:29.000 --> 42:32.000]  Что как в авторы картинки выбрали именно города Канады, почему-то.
[42:33.000 --> 42:34.000]  Но, соответственно, почему бы и нет.
[42:35.000 --> 42:37.000]  Может они там все четыре канадца, я не знаю на самом деле.
[42:38.000 --> 42:39.000]  Вот.
[42:40.000 --> 42:45.000]  Ну вот, в принципе, действительно можно действительно вот думать, что у нас дороги устроены это вот таким образом.
[42:46.000 --> 42:51.000]  То есть, скажем, из Калгари до Ригины может доехать не более 14 машин в единицу времени.
[42:52.000 --> 42:53.000]  Вот.
[42:53.000 --> 42:58.000]  Но это неплохо, потому что, скажем, из соскотуна до Калгари может приехать не более чем 9.
[42:59.000 --> 43:00.000]  Вот.
[43:01.000 --> 43:07.000]  Но, соответственно, да, мы можем сказать, что давайте скажем, что там и стоком является Ванкувер, там стоком является Винни-Пек,
[43:08.000 --> 43:16.000]  и нам жутко интересно наладить бесперебойную передачу каких-нибудь грузовиков из Ванкувер-Винни-Пек, чтобы там каждый день приезжало как можно больше.
[43:18.000 --> 43:19.000]  Вот.
[43:20.000 --> 43:21.000]  Что же у нас получается?
[43:22.000 --> 43:23.000]  А получается...
[43:24.000 --> 43:33.000]  Но, в принципе, да, вот у нас есть пример потока, то есть мы решили, что действительно отсюда из Ванкувера в Эдмонтон будет ехать там 11 грузовиков, допустим.
[43:34.000 --> 43:37.000]  Из Эдмонтонов-Соскотун 12.
[43:40.000 --> 43:43.000]  Так, что там, обсуждение какое-то пошло, вопросы?
[43:45.000 --> 43:46.000]  Вот.
[43:47.000 --> 43:48.000]  Ну здесь у нас 12, здесь 15 и так далее.
[43:49.000 --> 43:50.000]  Вот видите пример.
[43:51.000 --> 43:53.000]  Ну здесь все просто, величина потока 19.
[43:54.000 --> 44:04.000]  То есть мы надеемся, получается каким-то мистическим образом 19, соответственно, грузовиков каждый день выезжают из Ванкувера.
[44:05.000 --> 44:06.000]  Что такое 8-13 грузовика?
[44:07.000 --> 44:12.000]  Нет, это не 8-13, это не 8-13, это 8 из 13, вот то, что тут нарисовано.
[44:13.000 --> 44:17.000]  То есть как бы пропустая способность 13, но едет 8.
[44:18.000 --> 44:19.000]  Ладно.
[44:19.000 --> 44:20.000]  Вот.
[44:21.000 --> 44:29.000]  И вот таким вот образом мы добиваемся того, что едет целых 19, собственно, грузовиков в единицу времени.
[44:30.000 --> 44:31.000]  Да.
[44:32.000 --> 44:33.000]  Теперь внимание, вопрос.
[44:34.000 --> 44:35.000]  Да, можно ли это оптимизировать?
[44:36.000 --> 44:37.000]  Да, там цикл есть, можно убавить.
[44:38.000 --> 44:42.000]  Но это оптимизация, скажем так, чтоб по дорогам меньше кто-то ездил, но не более того.
[44:43.000 --> 44:44.000]  Он в другую сторону ведет, тогда нельзя.
[44:44.000 --> 44:45.000]  Ну по-разному.
[44:46.000 --> 44:49.000]  Ну вот теперь надо, ну тут надо вот действительно думать.
[44:52.000 --> 44:54.000]  Так, вот как же это понять?
[44:55.000 --> 44:56.000]  Я вижу разрез.
[44:57.000 --> 44:58.000]  Я тоже.
[44:59.000 --> 45:03.000]  Можно убавить 4 из цикла и добавить еще 4 потом.
[45:04.000 --> 45:05.000]  Чего, куда?
[45:06.000 --> 45:09.000]  Да, вот ребро, видите, которое диагонально с права вверху, в лево вниз.
[45:10.000 --> 45:11.000]  Так.
[45:12.000 --> 45:15.000]  Да нельзя в другую сторону пускать, у нас же уже ориентированы.
[45:16.000 --> 45:23.000]  Нет, тут, смотри, нет, эту четверку можно перенаправить сюда, это правда, но тогда здесь будет втикать на 4 меньше, поэтому здесь...
[45:24.000 --> 45:28.000]  Нет, у нас есть разрезы 12, 17, 7, 4, 4.
[45:29.000 --> 45:30.000]  Как вы еще хотите больше?
[45:31.000 --> 45:32.000]  Вот можно его двумать.
[45:33.000 --> 45:34.000]  Первый цикл 2, 3, 4.
[45:35.000 --> 45:36.000]  Удаляем 2, 3, 4.
[45:37.000 --> 45:38.000]  Ага, ну да.
[45:38.000 --> 45:40.000]  Ну можно об этом думать, да.
[45:41.000 --> 45:42.000]  То есть что-то может, да.
[45:43.000 --> 45:46.000]  Но тут вот действительно важный момент оказывается, просто чисто иллюстрируется.
[45:47.000 --> 45:56.000]  Что если у вас задача придумать, взять, вот у меня еще есть какой-нибудь новый грузовик и хочется найти для него маршрут, то мы видим действительно утык.
[45:57.000 --> 46:06.000]  Потому что мы заметим, что как бы, допустим, он отсюда уже выехать не может, там допустим здесь как-то проехать не может, так что кажется, что тупик.
[46:08.000 --> 46:10.000]  Вот, то есть так он проехать тоже не может.
[46:11.000 --> 46:14.000]  Кажется, что увеличить поток нельзя, но это называется жадно нельзя.
[46:19.000 --> 46:22.000]  Вот, то есть как бы жадно, то есть если мы хотим только увеличивать потоки, нельзя.
[46:23.000 --> 46:28.000]  Но как правильно замечено, то есть действительно что-то тут, какие-то оптимизации возможны.
[46:29.000 --> 46:33.000]  Как минимум давайте, можно оптимизировать дорогу действительно, чтобы вот по этому циклу отменить одну машинку.
[46:34.000 --> 46:39.000]  Вот, то есть одну машинку, это как минимум, то есть поток не изменит, но будет меньше ездить.
[46:40.000 --> 46:47.000]  Но зато неожиданно выяснится, что тут окажется 11, тут окажется 0 и в принципе вот по этому пути можно еще что-то протолкнуть оказывается.
[46:49.000 --> 46:58.000]  То есть оказывается, то есть надо, то есть как честно, то есть оказывается, да, если мы пожертвуем каким-нибудь потоком, который уже есть, то может оказаться, что мы потом можем пустить больше.
[46:59.000 --> 47:02.000]  Или циркуляцию какую-нибудь поотменяем, или что-нибудь еще в этом роде.
[47:05.000 --> 47:10.000]  Так, но давайте посмотрим, как это предлагается, поэтому предлагается такой более продвинутый, хотя тоже жадный подход.
[47:12.000 --> 47:18.000]  Да, то есть классический подход здесь называется остаток читая сеть.
[47:19.000 --> 47:28.000]  Значит, внимание, да, то есть помните, то есть точки зрения практики можно сразу сказать, что остаточной сети не существует.
[47:29.000 --> 47:34.000]  Помните, да, то есть остаточная сеть не существует, то есть это математическая абстракция.
[47:36.000 --> 47:41.000]  То есть как бы условно говоря, когда вы будете там командовать какой-нибудь там тетеньке на вот этом руле,
[47:42.000 --> 47:48.000]  в конкретном усле водопровода, то есть она не будет ничего знать об остаточной сети.
[47:49.000 --> 47:56.000]  То есть она будет понимать только простые запросы вида, сколько пускать в литрах, соответственно.
[48:01.000 --> 48:08.000]  Но нам в абстракции оказывается удобно мыслить, вот давайте ввести остаточную сеть по принципу, по какому?
[48:08.000 --> 48:14.000]  По какому? Вот по такому принципу, то есть по каждому ребру мы пишем, а сколько у нас?
[48:16.000 --> 48:18.000]  Так, что там опять за параллельное обсуждение?
[48:27.000 --> 48:28.000]  Все, можно продолжать?
[48:31.000 --> 48:32.000]  Или нельзя?
[48:33.000 --> 48:34.000]  Можно?
[48:35.000 --> 48:39.000]  Нет, ну просто не очевидно, мало ли о том, что вы что-то так активно обсуждаете, я не знаю.
[48:43.000 --> 48:48.000]  Смотрите, предлагается такое, пишем остаточную пропускную способность, то есть формально говорим так,
[48:49.000 --> 48:56.000]  пусть у нас есть сеть с пропускной способностью и с током с током, и в ней течет поток f,
[48:57.000 --> 49:05.000]  тогда остаточная сеть, это сеть с теми же самыми, то есть там теми же самыми с током с током и с графом примерно,
[49:06.000 --> 49:15.000]  но с маленькой, но пропускная способность у нас cf, остаточная, теперь другая, это просто, то есть разность между пропускной способностью и исходной, сколько там течет.
[49:17.000 --> 49:22.000]  Ну или в переводе говорят, сколько еще воды можно пустить по этой трубе?
[49:26.000 --> 49:27.000]  Вот.
[49:32.000 --> 49:33.000]  Вот.
[49:34.000 --> 49:36.000]  Ну, скажем, пример можно тот же и привести.
[49:37.000 --> 49:43.000]  Правда видите, как интересно сразу, что с одной стороны тут формально, математически тут все понятно, но с другой стороны это не совсем связано вот с этим.
[49:44.000 --> 49:46.000]  Правда ли, что это не минус перед c, а типа так t?
[49:47.000 --> 49:48.000]  Это t.
[49:49.000 --> 49:50.000]  Ну то есть не минус.
[49:51.000 --> 49:52.000]  Нет, боже упаси.
[49:53.000 --> 49:54.000]  Это не минус.
[49:54.000 --> 49:55.000]  И теперь вот смотрим.
[49:56.000 --> 50:01.000]  Правда ребра у нас с точки зрения картинки появляются как будто новые ребра.
[50:02.000 --> 50:08.000]  Видите, вот у нас было ребро 8 из 13, тогда в остаточной сети мы с одной стороны говорим, что в эту сторону можно пустить еще 5 грузовиков,
[50:09.000 --> 50:18.000]  но оказывается формально, что у нас появляется вот такое ребро, потому что формально, потому что вот это ребро есть, просто у него пропускная способность ноль.
[50:18.000 --> 50:24.000]  Но по вот этому математическому определению в эту сторону едет минус 8 грузовиков.
[50:26.000 --> 50:29.000]  Поэтому получается можно пустить еще 8 грузовиков.
[50:30.000 --> 50:34.000]  Ну это классическая ситуация, то есть есть же стандартный мехматовский анекдот на эту тему.
[50:39.000 --> 50:40.000]  И как раз вот это произошло.
[50:41.000 --> 50:43.000]  Там ехало минус 8 грузовиков.
[50:44.000 --> 50:48.000]  Нет, более типичная ситуация такая, значит такая лекция, на лекцию пришло 3 студента.
[50:49.000 --> 50:50.000]  Внезапно пятеро встают и уходят.
[50:51.000 --> 50:54.000]  Электрогрузство думает, ну вот сейчас еще двое придут, вообще никого не будет.
[50:55.000 --> 50:58.000]  То есть это вот типичная ситуация, с которой мы тут живем.
[50:59.000 --> 51:02.000]  А потом появляется человек, который 3 раза подряд заходит, не выходя.
[51:02.000 --> 51:03.000]  Нет, ну почему?
[51:04.000 --> 51:05.000]  Нет, ну почему не выходя?
[51:06.000 --> 51:07.000]  Он как бы зашел, вышел, зашел, вышел.
[51:08.000 --> 51:09.000]  Он зашел, зашел, зашел.
[51:10.000 --> 51:11.000]  Это как?
[51:16.000 --> 51:19.000]  Ну нет, ну нет, это уже, да.
[51:20.000 --> 51:24.000]  Но это как следить, это как бы вас вводит в заблуждение, если вы не знаете, что есть другой выход.
[51:25.000 --> 51:28.000]  Потому что нет, конечно, на этом основан этот стандартный герметик.
[51:28.000 --> 51:30.000]  Действительно, как обмануть злую консьержку, которая не хочет пускать гостей.
[51:31.000 --> 51:32.000]  Очень просто.
[51:33.000 --> 51:34.000]  Значит, вы так входите.
[51:35.000 --> 51:36.000]  Ну, значит, если вы житель, она вас знает.
[51:37.000 --> 51:39.000]  Вы входите, говорите, привет, тетя Люба, погодка сегодня отпад.
[51:40.000 --> 51:41.000]  О, привет.
[51:42.000 --> 51:45.000]  Ну вот, значит, вы там поднимаетесь на пятый этаж, открываете окно, спускаетесь по пожарной лестнице.
[51:46.000 --> 51:49.000]  Значит, вы входите, дверь, и говорите, привет, тетя Люба, погодка сегодня отпад.
[51:50.000 --> 51:52.000]  А разве не ты только что зашла в этот момент?
[51:52.000 --> 51:55.000]  Значит, вы входите, дверь, и говорите, привет, тетя Люба, погодка сегодня отпад.
[51:56.000 --> 51:57.000]  А разве не ты только что зашла в этот момент?
[51:58.000 --> 51:59.000]  Ну что вы, тетя Люба, опознались.
[52:00.000 --> 52:04.000]  Значит, с улыбкой поднимаетесь на пятый этаж, выходите из окна, спускаетесь по лестнице.
[52:05.000 --> 52:07.000]  Ходите, привет, тетя Люба, погодка сегодня отпад.
[52:08.000 --> 52:11.000]  Но где-то максимум на седьмой интерации тетя Люба падает без сознания.
[52:12.000 --> 52:14.000]  Вот, ну, собственно, стандартный гералашевский метод.
[52:15.000 --> 52:16.000]  Там, собственно, он очень красочно описан.
[52:17.000 --> 52:18.000]  Вот.
[52:19.000 --> 52:23.000]  Он основан на том, что бабушке не пришло в голову, что есть и другой выход.
[52:25.000 --> 52:26.000]  Да.
[52:27.000 --> 52:31.000]  Ну и тем более, что это были старые времена, там у него камер видеонаблюдения за всеми окнами не было, поэтому, соответственно.
[52:34.000 --> 52:35.000]  Асад.
[52:36.000 --> 52:37.000]  Ну вот.
[52:38.000 --> 52:39.000]  Вообще-то, да.
[52:40.000 --> 52:41.000]  Вот.
[52:42.000 --> 52:43.000]  Так вот.
[52:44.000 --> 52:45.000]  Ну, это, соответственно, немножко другое.
[52:46.000 --> 52:48.000]  Так что у нас тут обычно все-таки, как бы, вошел, то есть, вошел, вышел все-таки.
[52:49.000 --> 52:50.000]  Вот.
[52:51.000 --> 52:52.000]  Ну, в общем, на эту тему будем тоже обсуждать.
[52:53.000 --> 52:54.000]  А пока же так.
[52:55.000 --> 52:56.000]  Значит, зачем нам нужна эта остаточная сеть?
[52:57.000 --> 53:02.000]  Потому что, в таком виде, остаточная сеть позволяет нам судить, а где еще можно пустить воду.
[53:03.000 --> 53:04.000]  Но что такое пустить?
[53:05.000 --> 53:13.000]  То есть, в остаточной сети, если ее вот так вот нарисовать, то оказывается, что появился путь из С в Т по ненулевым ребрам.
[53:14.000 --> 53:17.000]  По ненулевым в остаточной сети ребрам.
[53:18.000 --> 53:19.000]  Вот они.
[53:20.000 --> 53:22.000]  Но что это означает?
[53:23.000 --> 53:26.000]  Можно ли, очень хочется по этому пути пустить поток.
[53:27.000 --> 53:32.000]  И оказывается, в некотором смысле это вполне можно сделать.
[53:32.000 --> 53:38.000]  Потому что, ну, скажем, вот тут 5, 4, 5, ну, значит, надо пустить 4 единицы жидкости.
[53:39.000 --> 53:41.000]  Так, ну, что значит по этому ребру пустить 4 единицы жидкости?
[53:42.000 --> 53:44.000]  Ну, 8 увеличить до 12, правда?
[53:45.000 --> 53:46.000]  Тут все нормально.
[53:47.000 --> 53:51.000]  Но здесь, казалось бы, как тут пустить 4 единицы потока, если у вас ребро ведет только сюда?
[53:52.000 --> 53:53.000]  Очень просто.
[53:54.000 --> 53:57.000]  Надо просто отменить 4 единицы потока, которые в эту сторону идут.
[53:58.000 --> 54:03.000]  Тогда как раз получается, что отсюда-сюда будет течь на 4 единицы больше.
[54:04.000 --> 54:05.000]  Было минус 4 единицы, стало 0.
[54:06.000 --> 54:07.000]  Очень удобно.
[54:08.000 --> 54:11.000]  Почему это ребро 4, а не 13?
[54:12.000 --> 54:13.000]  Почему 13?
[54:14.000 --> 54:16.000]  Посмотрите, тут 4 из 9.
[54:17.000 --> 54:19.000]  Нет, смотрите, тут фишка такая.
[54:20.000 --> 54:22.000]  В эту сторону получается 9 минус 4, то есть вообще 5?
[54:23.000 --> 54:24.000]  Нет, ну, а в ту?
[54:24.000 --> 54:30.000]  А в ту сторону на самом деле, то есть на самом деле тут ребро, то есть с точки зрения нашего определения,
[54:31.000 --> 54:35.000]  там на самом деле нарисовано ребро, и тут должно быть написано минус 4 из нуля по-хорошему.
[54:36.000 --> 54:38.000]  Ну и мы получаем 9 минус минус 4?
[54:39.000 --> 54:40.000]  Нет, не получаем.
[54:41.000 --> 54:43.000]  Потому что в эту-то сторону пропускная способность не 9, а 0.
[54:45.000 --> 54:46.000]  Вот, да, это важно, обретите внимание.
[54:47.000 --> 54:50.000]  То есть пропускная способность симметричной не является, боже упаси.
[54:51.000 --> 54:52.000]  Это важно.
[54:52.000 --> 54:55.000]  Поэтому здесь получается нот, то есть минус 4 из нуля.
[54:57.000 --> 55:04.000]  Вот, то есть да, но видите, как интерес получается, то есть в матрице смешности в общем-то новых ребер не появляется,
[55:05.000 --> 55:10.000]  просто мы их тут не везде рисовали, а вот в определениях вот этой доски на самом деле у нас проблемы.
[55:11.000 --> 55:15.000]  То есть там эту остаточную сеть еще придется придумывать.
[55:16.000 --> 55:24.000]  Потому что, смотрите, то есть здесь формально, внимание, формально, остаточную сеть придется допиливать следующим образом.
[55:25.000 --> 55:26.000]  Смотрите.
[55:26.000 --> 55:34.000]  Ф от УВ?
[55:35.000 --> 55:39.000]  Ну если Ф от УВ, Ф от ВУД, почему-то, да?
[55:40.000 --> 55:46.000]  А погодите, мы тут Ф не определяли, мы здесь определили, только смотрите, мы определили понятие остаточная сеть.
[55:47.000 --> 55:51.000]  Понятие остаточная сеть и понятие поток в ней, это разные вещи.
[55:52.000 --> 56:00.000]  Да, имеется в виду, просто здесь пока иллюстрируется следующее, что если у вас есть остаточная сеть и в ней есть путь из СТ по не нулевым ребрам,
[56:01.000 --> 56:05.000]  то на самом деле этот путь показывает, где можно увеличить поток.
[56:06.000 --> 56:09.000]  То есть вот пустить в остаточной сети вот эти четверочки, чего?
[56:10.000 --> 56:11.000]  СФ?
[56:11.000 --> 56:15.000]  СФ, да, это индекс Ф, кстати, обратите внимание, не видно, да, это важно.
[56:18.000 --> 56:19.000]  Да, это индекс Ф.
[56:19.000 --> 56:27.000]  То есть что означает, что вот тут можно пустить 4, то есть в реальной жизни с точки зрения там, собственно, реальных бабушек получится так,
[56:28.000 --> 56:33.000]  мы говорим, что тут плюс 4, тут отмена 4 и тут плюс 4.
[56:34.000 --> 56:41.000]  То есть видите, у нас такая идея, кстати, уже где-то крутилась, что давайте отменим вот эти четверки, тогда эту четверку нужно куда-то перенаправить.
[56:41.000 --> 56:48.000]  То есть здесь-то можно четверку перенаправить, но тогда здесь втекает, тогда сюда втекает на 4 единицы меньше.
[56:49.000 --> 56:50.000]  Откуда эти 4 единицы взять?
[56:51.000 --> 56:53.000]  Ну вот, оказывается, можно просто по этому ребру пустить четверку.
[56:54.000 --> 56:55.000]  Вот.
[56:56.000 --> 56:59.000]  То есть ну вот, ну оказывается, мы нашли это с помощью вот такой классической технологии.
[57:00.000 --> 57:02.000]  Это вот называется остаточная сеть.
[57:03.000 --> 57:04.000]  Ну вот.
[57:05.000 --> 57:11.000]  То есть так она вот выглядит, но формально с точки зрения программирования нам придется ее с вами как-то определять нетривиально.
[57:12.000 --> 57:15.000]  Потому что здесь придется тут немножко пописать.
[57:16.000 --> 57:23.000]  Потому что там-то мы еще воспользовались тем, что в принципе у нас в серии образ существует просто у некоторых большинства пропускная способность 0,
[57:24.000 --> 57:28.000]  а тут этих ребер не существует и их придется в явном виде ввести.
[57:30.000 --> 57:31.000]  Вот, понимаете, да?
[57:32.000 --> 57:41.000]  Поэтому предлагается следующее, то есть пусть у нас значит сеть, значит g равно там v, e, c, s, t, это соответственно сеть.
[57:42.000 --> 57:43.000]  Но мы все еще не хотим делать квадрат, мы хотим определять.
[57:44.000 --> 57:45.000]  Да, это, нет, это вот альтернатива.
[57:46.000 --> 57:48.000]  Нет, почему я как бы цепляюсь за эту альтернативу?
[57:49.000 --> 57:53.000]  Потому что как бы понятно, что граф в виде матрицы смежности вы будете хранить не всегда.
[57:54.000 --> 57:57.000]  То есть скорее всего вы, наверное, список смежности вы хотите все-таки хранить.
[57:58.000 --> 57:59.000]  Вот.
[58:00.000 --> 58:07.000]  Поэтому как бы хочется, поэтому очень хочется действительно сеть строить так, чтобы в ней хранить только те ребра, которые реально надо.
[58:08.000 --> 58:09.000]  Вот.
[58:10.000 --> 58:13.000]  Итак, пусть у нас g это сеть, а пусть af поток в ней.
[58:13.000 --> 58:31.000]  Тогда, остаточная сеть, остаточная сеть cf, не cf, а g с индексом f.
[58:32.000 --> 58:38.000]  Вот мы будем значит остаточную сеть тоже определять как той же буквы, что исходную сеть, но с индексом f типа по потоку в ней.
[58:39.000 --> 58:40.000]  Видите, да?
[58:40.000 --> 58:43.000]  Значит gf, это сеть.
[58:45.000 --> 58:51.000]  Значит v, e с индексом f, c с индексом f, s и t.
[58:52.000 --> 58:53.000]  Ну v, s, t понятно.
[58:54.000 --> 58:55.000]  Что такое?
[58:56.000 --> 58:57.000]  Значит, а что такое e, f?
[58:58.000 --> 59:00.000]  А вы точно хотите вонять разные значения g и c?
[59:01.000 --> 59:02.000]  G и c в смысле?
[59:03.000 --> 59:09.000]  В смысле g это сеть, c это пропускная способность в ней.
[59:10.000 --> 59:11.000]  Не путайте.
[59:12.000 --> 59:13.000]  Вот.
[59:14.000 --> 59:16.000]  Значит, где получается, как определяется e?
[59:17.000 --> 59:25.000]  Значит, где, смотрите, e, f равно, просто по определению это я так присваиваю, ну помните, да?
[59:26.000 --> 59:38.000]  Значит, оно равно, я так скажу, e объединенное с обратными ребрами, я так это назову,
[59:38.000 --> 59:40.000]  рев от e.
[59:45.000 --> 59:46.000]  Вот так скажем.
[59:47.000 --> 59:50.000]  Ну в общем так, я скажу так, рев от просто e, да?
[59:53.000 --> 59:58.000]  То есть, ну рев от вот этого вот ребра, которое вот u, v что-нибудь, да?
[59:59.000 --> 01:00:01.000]  Оно равно просто ребру v у что-нибудь, да?
[01:00:02.000 --> 01:00:04.000]  Ну просто вот разворот ребра, операция такая, да?
[01:00:05.000 --> 01:00:06.000]  Ну вот.
[01:00:06.000 --> 01:00:10.000]  Ну а здесь это именно разворот ребра.
[01:00:11.000 --> 01:00:14.000]  Значит, какая у него будет пропускная способность, я сейчас скажу.
[01:00:15.000 --> 01:00:25.000]  Вот. То есть, рев от e, это естественно просто называется множество рев от e, где пробегаемся по всем ребрам.
[01:00:26.000 --> 01:00:28.000]  Вы видите, почему у вас множество?
[01:00:29.000 --> 01:00:34.000]  Вы имеете в виду, что ребро задается не только в начальной и конечной вершины, а еще какими-то параметрами?
[01:00:35.000 --> 01:00:39.000]  Ну на каждом ребре у нас вообще еще там пропускная способность какая-то написана, там это.
[01:00:40.000 --> 01:00:45.000]  Хотя ладно, давайте, пожалуй, для удобства действительно давайте уберем это.
[01:00:46.000 --> 01:00:50.000]  Хорошо. Рев от u, v равно v, то есть просто вот так.
[01:00:53.000 --> 01:00:54.000]  Чего? Что не так?
[01:00:54.000 --> 01:00:55.000]  Что не так?
[01:00:55.000 --> 01:00:59.000]  Вот. А теперь смотрите, при этом c, ну вот.
[01:01:01.000 --> 01:01:03.000]  При этом, значит...
[01:01:06.000 --> 01:01:07.000]  Чего-чего-чего?
[01:01:12.000 --> 01:01:13.000]  Могли быть.
[01:01:13.000 --> 01:01:16.000]  И более того, для каждого...
[01:01:18.000 --> 01:01:21.000]  Ну опять, может, немного некорректность, но здесь имеется в виду следующее.
[01:01:21.000 --> 01:01:25.000]  Для каждого кратного ребра вводится свое обратное.
[01:01:27.000 --> 01:01:30.000]  То есть количество ребр прям вот в явном виде удваивается.
[01:01:30.000 --> 01:01:34.000]  Даже если у ребер там обратное уже было, то мы его...
[01:01:38.000 --> 01:01:40.000]  Ну да, но там это уже другое.
[01:01:40.000 --> 01:01:45.000]  Отдельная песня, как вы это будете конкретно кодить, но мы чуть позже об этом поговорим.
[01:01:45.000 --> 01:01:49.000]  И вот здесь у нас технология, чтобы их как бы с кратным действием не зависеть.
[01:01:49.000 --> 01:01:52.000]  Теперь надо ввести, значит, понятие.
[01:01:52.000 --> 01:01:55.000]  Значит, cf от e, оно равно чему?
[01:01:55.000 --> 01:01:59.000]  Оно равно просто c от e минус f от e,
[01:01:59.000 --> 01:02:04.000]  если ребро лежит...
[01:02:06.000 --> 01:02:09.000]  Значит, если оно из e, а если оно из rev от e,
[01:02:09.000 --> 01:02:12.000]  то тогда это получается просто f от e.
[01:02:13.000 --> 01:02:16.000]  То есть f от, так сказать,
[01:02:16.000 --> 01:02:18.000]  называется e',
[01:02:18.000 --> 01:02:23.000]  если оказалось, что действительно e равно rev от e'.
[01:02:23.000 --> 01:02:26.000]  e' лежит в e.
[01:02:26.000 --> 01:02:29.000]  Ну я, может, опять Никузева написал, конечно.
[01:02:29.000 --> 01:02:33.000]  Но имеется в виду следующее, что остаточная пропускная способность говорит так,
[01:02:33.000 --> 01:02:37.000]  что если это рев от e, то это значит, что у ребра есть рев от e.
[01:02:37.000 --> 01:02:39.000]  Если это пропускная способность говорит так,
[01:02:39.000 --> 01:02:42.000]  что если это сделать то ребро, которое было раньше,
[01:02:42.000 --> 01:02:46.000]  то просто тогда разность между пропускной способностью и сколько реально потекло.
[01:02:46.000 --> 01:02:49.000]  А вот если это обратное ребро,
[01:02:49.000 --> 01:02:52.000]  то как бы мы говорим, что если по ребру текло 5 единиц жидкости,
[01:02:52.000 --> 01:02:55.000]  значит по этому обратному можно те самые 5 пустить.
[01:02:58.000 --> 01:03:01.000]  То есть формально можно сказать так.
[01:03:01.000 --> 01:03:06.000]  Ну не отменить, а это еще не отмена потока.
[01:03:06.000 --> 01:03:09.000]  Возможность отменить поток.
[01:03:14.000 --> 01:03:16.000]  Ну, e',
[01:03:16.000 --> 01:03:18.000]  e равно
[01:03:18.000 --> 01:03:20.000]  рев от e',
[01:03:20.000 --> 01:03:22.000]  где...
[01:03:22.000 --> 01:03:24.000]  Вот так, да, пардон.
[01:03:24.000 --> 01:03:26.000]  Да, спасибо, спасибо.
[01:03:28.000 --> 01:03:30.000]  Нет.
[01:03:32.000 --> 01:03:34.000]  А нет, правильно.
[01:03:36.000 --> 01:03:41.000]  Нет, то есть мы говорим, что если e – это разворот какого-то ребра из e'.
[01:03:41.000 --> 01:03:43.000]  Пусть у нас было ребро из e',
[01:03:43.000 --> 01:03:46.000]  из разворота которого получилась наша e'.
[01:03:46.000 --> 01:03:51.000]  Тогда остаточная способность этого ребра – это вот поток пущенный.
[01:03:51.000 --> 01:03:54.000]  Так что нет, здесь штрих на месте.
[01:04:02.000 --> 01:04:03.000]  Ну сейчас мы его не учитываем.
[01:04:03.000 --> 01:04:08.000]  Нет, другое дело, что в этой сети тоже можно пустить поток, конечно же, какой-то.
[01:04:08.000 --> 01:04:09.000]  Какие-то может быть больше, меньше.
[01:04:09.000 --> 01:04:12.000]  Но, как я сказал, пока нам это не так принципиально.
[01:04:12.000 --> 01:04:13.000]  То есть пока мы просто...
[01:04:13.000 --> 01:04:15.000]  Вот есть понятие остаточная сеть.
[01:04:15.000 --> 01:04:18.000]  Это вспомогательная математическая абстракция,
[01:04:18.000 --> 01:04:25.000]  в которой мы можем удобно понимать, значит, нельзя ли увеличить поток.
[01:04:25.000 --> 01:04:28.000]  По крайней мере, на уровне лайфхака.
[01:04:28.000 --> 01:04:32.000]  Потому что на уровне лайфхака мы знаем, что если в остаточной сети случайно
[01:04:32.000 --> 01:04:37.000]  есть путь из s в t по ненулевым пропускной способности ребрам...
[01:04:37.000 --> 01:04:38.000]  Важно, что именно по ненулевым, да?
[01:04:38.000 --> 01:04:39.000]  Мы это пока не доказали.
[01:04:39.000 --> 01:04:40.000]  Мы пока это не доказали.
[01:04:40.000 --> 01:04:41.000]  Нет, почему?
[01:04:41.000 --> 01:04:42.000]  Нет, ну на самом деле мы уже...
[01:04:42.000 --> 01:04:45.000]  Ну практически очевидным вот из этой картинки является следующий факт.
[01:04:45.000 --> 01:04:52.000]  Если в остаточной сети найдется путь из s в t по ненулевым ребрам,
[01:04:52.000 --> 01:04:55.000]  то увеличить поток в исходной сети можно.
[01:04:59.000 --> 01:05:01.000]  Это вроде должно быть очевидно, да?
[01:05:01.000 --> 01:05:08.000]  Про то, что если такого пути нет, то и поток максимальный, я еще ничего не говорил.
[01:05:08.000 --> 01:05:14.000]  Сейчас, если найдется путь по ненулевым ребрам, то мы запускаем по нему...
[01:05:14.000 --> 01:05:20.000]  То в исходной сети мы просто соответствующие единицы потока по этому пути запускаем.
[01:05:20.000 --> 01:05:24.000]  Потому что этому пути, то есть каждому ребру из этого пути соответствует,
[01:05:24.000 --> 01:05:29.000]  либо ребро из исходной сети, по которому можно еще столько пустить,
[01:05:29.000 --> 01:05:34.000]  либо ребро, идущее в другую сторону, по которому столько единиц воды можно отменить.
[01:05:35.000 --> 01:05:41.000]  Поэтому делая последовательно это, мы, собственно, и увеличиваем поток в исходной сети.
[01:05:42.000 --> 01:05:46.000]  То есть можно его отменить на минимум из пропускной способности по пути.
[01:05:48.000 --> 01:05:50.000]  Ну ладно, из первого определения это вообще видно?
[01:05:52.000 --> 01:05:53.000]  Нет, ну вот.
[01:05:53.000 --> 01:05:56.000]  Ну и с второго на самом деле тоже, потому что здесь мы просто в явном виде
[01:05:56.000 --> 01:06:01.000]  прописываем... То есть здесь просто в явном виде прописано то же самое.
[01:06:01.000 --> 01:06:05.000]  Потому что за счет чего мы можем поменять поток по какому-то ребру?
[01:06:05.000 --> 01:06:11.000]  За счет того, что с одной стороны мы можем пихнуть больше, если такая возможность есть?
[01:06:11.000 --> 01:06:13.000]  Это вот первый случай.
[01:06:13.000 --> 01:06:17.000]  А второй случай говорит о том, что можно еще поток по ребру уменьшить,
[01:06:17.000 --> 01:06:21.000]  и это идентично тому, что мы пустили воду в обратную сторону.
[01:06:22.000 --> 01:06:27.000]  То есть на самом деле это продолжается иллюстрация того, что это в общем-то об одном и том же,
[01:06:27.000 --> 01:06:29.000]  просто с немножко разных точек зрения.
[01:06:30.000 --> 01:06:35.000]  То есть точки зрения формальных математических результатов это первый подход, конечно, в разы лучше.
[01:06:36.000 --> 01:06:40.000]  Но в реальном кодинге, конечно, вы не хотите, вам не захочется кодить матрицу смежности
[01:06:40.000 --> 01:06:43.000]  по очевидным причинам, поэтому придется думать.
[01:06:43.000 --> 01:06:44.000]  Но на самом деле...
[01:06:44.000 --> 01:06:48.000]  На самом деле потоки же применяются обычно все-таки не на статусе.
[01:06:49.000 --> 01:06:50.000]  По-разному. Почему?
[01:06:51.000 --> 01:06:55.000]  Если вы изучите про сочетание в дольном графе, то и до ста тысячах применяется вполне.
[01:06:56.000 --> 01:06:58.000]  И это нормально.
[01:06:59.000 --> 01:07:02.000]  Тем более, что иногда не всегда же потоки вам надо супер максимально найти.
[01:07:03.000 --> 01:07:06.000]  То есть, конечно, чаще всего, если у вас задача, дан граф, найти максимальный поток,
[01:07:06.000 --> 01:07:11.000]  то чемпионский алгоритм, по-моему, сейчас в ЗВЕ работает, если я правильно помню.
[01:07:12.000 --> 01:07:17.000]  Вроде как вам самое чемпионское, что есть, это алгоритм 2015 года ЗВЕ.
[01:07:17.000 --> 01:07:21.000]  Лучше пока, в общем случае, пока вроде не придумали.
[01:07:21.000 --> 01:07:23.000]  В смысле только в 2015 году придумали ЗВЕ?
[01:07:23.000 --> 01:07:24.000]  Ну да.
[01:07:25.000 --> 01:07:26.000]  Итока да.
[01:07:27.000 --> 01:07:31.000]  Ну, насколько я честно, статьи прям так глубоко я не копал, но, насколько я помню,
[01:07:31.000 --> 01:07:36.000]  там с табличкой в Википедии, там показано было про ЗВЕ.
[01:07:36.000 --> 01:07:37.000]  А у нас же такого не будет.
[01:07:38.000 --> 01:07:40.000]  Нет, такого, к сожалению, нет.
[01:07:40.000 --> 01:07:49.000]  Ну, по-разному нет, почему нет.
[01:07:49.000 --> 01:07:50.000]  Ну, как сказать, нет.
[01:07:50.000 --> 01:07:53.000]  Если нет, у нас как бы легко возникнет ЗВЕ.
[01:07:54.000 --> 01:08:00.000]  Ладно, правда с оговоркой, что для этого потребуется сплей деревья, но твой линкат.
[01:08:01.000 --> 01:08:02.000]  Да.
[01:08:03.000 --> 01:08:07.000]  Ну, как бы, но линкат у нас уже был, мы даже убедились, что там логарифом не лог квадрат,
[01:08:07.000 --> 01:08:09.000]  поэтому как бы не проблема.
[01:08:09.000 --> 01:08:10.000]  Вот.
[01:08:11.000 --> 01:08:12.000]  Значит, соответственно.
[01:08:12.000 --> 01:08:16.000]  Ну нет, у нас как бы, да, но зато как бы так как ВЕ приматрица смежности этого икупа,
[01:08:16.000 --> 01:08:19.000]  кубических алгоритмов у нас будет даже несколько.
[01:08:20.000 --> 01:08:22.000]  И вообще-то выясняется, что они, кстати, не так сложно пишутся.
[01:08:23.000 --> 01:08:24.000]  Вот.
[01:08:25.000 --> 01:08:26.000]  Ладно.
[01:08:27.000 --> 01:08:28.000]  Так, смотрите.
[01:08:29.000 --> 01:08:33.000]  Но если говорить, кстати, тоже о формализации, то на самом деле тут вводится еще,
[01:08:33.000 --> 01:08:35.000]  то есть можно еще ввести пару понятий.
[01:08:36.000 --> 01:08:38.000]  Каких-то вот таких.
[01:08:39.000 --> 01:08:40.000]  Аюшки.
[01:08:41.000 --> 01:08:43.000]  В том определении все-таки потока, да.
[01:08:44.000 --> 01:08:47.000]  У нас у всех обратных ребер поток статичен.
[01:08:48.000 --> 01:08:49.000]  Это не странно, нет?
[01:08:50.000 --> 01:08:54.000]  Ну, то есть если ребро обратное, то у него величина потока всегда равна
[01:08:54.000 --> 01:08:58.000]  опровосной способности его инвертированного ребра.
[01:08:59.000 --> 01:09:02.000]  Ну, такая, погодите, вы не путаете понятие сеть и понятие поток,
[01:09:02.000 --> 01:09:04.000]  мы в этой сети никаких потоков вообще не пускали.
[01:09:04.000 --> 01:09:05.000]  Нет, не совсем.
[01:09:05.000 --> 01:09:07.000]  Потока мы пока не пускали.
[01:09:07.000 --> 01:09:11.000]  То есть мы говорили, у нас была сеть G исходная, мы в ней пустили поток F.
[01:09:12.000 --> 01:09:16.000]  По этой сети и этому потоку мы построили остаточную сеть.
[01:09:17.000 --> 01:09:21.000]  Это просто такая иллюстрация на тему того, сколько еще воды теоретически,
[01:09:21.000 --> 01:09:22.000]  где можно пустить.
[01:09:23.000 --> 01:09:24.000]  Все.
[01:09:24.000 --> 01:09:25.000]  Никакой воды там нет.
[01:09:25.000 --> 01:09:28.000]  Естественно, если вы меняете поток, то поток не пустит.
[01:09:28.000 --> 01:09:29.000]  Теоретически, где можно пустить.
[01:09:29.000 --> 01:09:30.000]  Все.
[01:09:30.000 --> 01:09:32.000]  Никакой воды там нет.
[01:09:32.000 --> 01:09:36.000]  Естественно, если вы меняете поток в исходной сети, то и остаточная сеть
[01:09:36.000 --> 01:09:38.000]  естественно меняется.
[01:09:48.000 --> 01:09:51.000]  СЕ это опровосная способность.
[01:09:51.000 --> 01:09:53.000]  То есть это сколько мы теоретически максимум можем...
[01:09:53.000 --> 01:09:55.000]  FЕ это сколько мы пустили.
[01:09:55.000 --> 01:09:57.000]  Да, FЕ это сколько реально пустили.
[01:09:57.000 --> 01:09:58.000]  СЕ от Е сколько можем.
[01:10:01.000 --> 01:10:08.000]  Формально увеличение потока по остаточной сети можно расписать так.
[01:10:10.000 --> 01:10:12.000]  То есть формально можно расписать так.
[01:10:12.000 --> 01:10:17.000]  Пусть у нас есть сеть G и F-поток в ней, пусть есть F', который в остаточной сети.
[01:10:18.000 --> 01:10:22.000]  И тогда можно определить увеличение потока F на этот F'.
[01:10:22.000 --> 01:10:23.000]  То есть обратите внимание.
[01:10:23.000 --> 01:10:25.000]  F' это поток в сети GF.
[01:10:26.000 --> 01:10:28.000]  То есть это разные миры.
[01:10:28.000 --> 01:10:32.000]  F живет в сети G, значит F' живет в сети GF.
[01:10:32.000 --> 01:10:36.000]  Тогда, оказывается, F можно увеличить на F'.
[01:10:36.000 --> 01:10:40.000]  То есть я так даже не путь нахожу, а просто увеличиваю аж на целый поток.
[01:10:42.000 --> 01:10:45.000]  Увеличение, понятно, делается автоматическим образом.
[01:10:46.000 --> 01:10:51.000]  И только в качестве упражнения вам только остается показать, что вот это вот увеличение
[01:10:51.000 --> 01:10:54.000]  F' это, во-первых, корректный поток в сети G,
[01:10:55.000 --> 01:10:57.000]  и величина которого равна реально F'
[01:11:02.000 --> 01:11:03.000]  Понятна логика, да?
[01:11:05.000 --> 01:11:08.000]  Но не будем сейчас, наверное, для экономии времени расписывать действительно,
[01:11:08.000 --> 01:11:10.000]  как это выглядит вон там.
[01:11:12.000 --> 01:11:14.000]  Но думаю так, общая суть ясна.
[01:11:18.000 --> 01:11:20.000]  Значит, общая суть ясна.
[01:11:21.000 --> 01:11:25.000]  Тем более, что, ладно, то есть, если возникнет вопрос действительно,
[01:11:25.000 --> 01:11:27.000]  как это кодить в виде списка смежности,
[01:11:27.000 --> 01:11:29.000]  то, на самом деле, сразу можно сказать,
[01:11:29.000 --> 01:11:32.000]  что максимально удобным способом оказывается следующее,
[01:11:32.000 --> 01:11:37.000]  что вы для каждого ребра просто сразу делаете список смежности,
[01:11:37.000 --> 01:11:40.000]  но для каждого ребра автоматически создаете обратное.
[01:11:43.000 --> 01:11:47.000]  И как бы гарантируете, что между ними такая связь,
[01:11:47.000 --> 01:11:52.000]  что если по одному течет поток F, по другому автоматически течет минус F.
[01:11:53.000 --> 01:11:57.000]  То есть, кстати, да, правильнее даже в коде еще продумать инфраструктуру так,
[01:11:57.000 --> 01:12:00.000]  что если вы там пустили по ребру поток,
[01:12:00.000 --> 01:12:03.000]  то автоматически по другому ребру течет минус только.
[01:12:05.000 --> 01:12:07.000]  То есть там в идеале.
[01:12:08.000 --> 01:12:10.000]  То есть в идеале там обычно надо строить так,
[01:12:10.000 --> 01:12:14.000]  чтобы у вас там иным способом поменять поток просто не было невозможно физически.
[01:12:15.000 --> 01:12:16.000]  Вот.
[01:12:16.000 --> 01:12:18.000]  То есть это, кстати, такой подход,
[01:12:18.000 --> 01:12:21.000]  когда вы рядом с каждым ребром храните типа обратное,
[01:12:22.000 --> 01:12:25.000]  то такой подход, он как бы сочетает в себе лучше
[01:12:25.000 --> 01:12:28.000]  и из списка смежности, и из матрицы смежности.
[01:12:29.000 --> 01:12:31.000]  В смысле К-41 вы хотите делать?
[01:12:32.000 --> 01:12:36.000]  Ну, нет, К-41 это уже более техническая деталь.
[01:12:36.000 --> 01:12:41.000]  Потому что К-41 это если вы действительно там храните все ребра в едином большом списке
[01:12:41.000 --> 01:12:43.000]  и векторы векторов,
[01:12:43.000 --> 01:12:45.000]  только храните номера ребер в этом списке.
[01:12:46.000 --> 01:12:48.000]  Потому что в принципе кто-то этим не занимается,
[01:12:48.000 --> 01:12:50.000]  а вместо этого там кидается указателями.
[01:12:52.000 --> 01:12:54.000]  Нет, указателями не надо,
[01:12:54.000 --> 01:12:57.000]  потому что не надо кидать указатели на элементы вектора.
[01:12:58.000 --> 01:12:59.000]  Вот.
[01:12:59.000 --> 01:13:02.000]  Но в принципе теоретически кто-то пишет так,
[01:13:02.000 --> 01:13:04.000]  что допустим вы создаете два ребра,
[01:13:04.000 --> 01:13:06.000]  одно добавляете в один список,
[01:13:06.000 --> 01:13:07.000]  другой в другой,
[01:13:07.000 --> 01:13:09.000]  и в каждом ребре храните,
[01:13:09.000 --> 01:13:12.000]  а в другом списке мой напарник находится под номером вот таким-то.
[01:13:14.000 --> 01:13:15.000]  Ну, в принципе так тоже можно.
[01:13:15.000 --> 01:13:17.000]  Реально, конечно, так делать не надо.
[01:13:18.000 --> 01:13:20.000]  То есть оптимально, конечно,
[01:13:20.000 --> 01:13:23.000]  это создать вектор векторов так,
[01:13:23.000 --> 01:13:25.000]  чтобы рядом с каждым ребром хранилось обратное.
[01:13:25.000 --> 01:13:27.000]  Если вы хотите по ребру найти обратное,
[01:13:27.000 --> 01:13:30.000]  то как бы берем индекс и делаем К-41.
[01:13:30.000 --> 01:13:32.000]  Так, а сейчас понятно, что я имею в виду вообще?
[01:13:33.000 --> 01:13:34.000]  Или нет?
[01:13:35.000 --> 01:13:36.000]  Нет, лучше, если не понятно,
[01:13:36.000 --> 01:13:38.000]  я просто могу сказать подробнее.
[01:13:38.000 --> 01:13:40.000]  С этим не сталкивались, я не знаю.
[01:13:41.000 --> 01:13:43.000]  Но если понятно, о чем речь, то хорошо.
[01:13:44.000 --> 01:13:45.000]  Ладно.
[01:13:46.000 --> 01:13:47.000]  Впрочем, не суть.
[01:13:47.000 --> 01:13:48.000]  Ладно.
[01:13:49.000 --> 01:13:50.000]  Чего?
[01:13:52.000 --> 01:13:54.000]  Ну, это не принципиально.
[01:13:57.000 --> 01:14:00.000]  Ну, скажем так, это как бы формальное доказательство.
[01:14:00.000 --> 01:14:04.000]  Я думаю, не думаю, что имеет смысл тут сильно прокапываться.
[01:14:05.000 --> 01:14:07.000]  Потому что как бы
[01:14:07.000 --> 01:14:09.000]  возможно вам будет быстрее то же самое
[01:14:09.000 --> 01:14:11.000]  прописать самостоятельно.
[01:14:12.000 --> 01:14:13.000]  Пожалуйста.
[01:14:18.000 --> 01:14:19.000]  Вот.
[01:14:20.000 --> 01:14:23.000]  И так, то есть по этой лемме получается,
[01:14:24.000 --> 01:14:27.000]  что у нас, если в остаточной сети есть увеличивающий путь,
[01:14:27.000 --> 01:14:30.000]  то оказывается поток f можно увеличить.
[01:14:33.000 --> 01:14:35.000]  Ну, пока эта лемма говорит только одно,
[01:14:35.000 --> 01:14:37.000]  что в остаточной сети есть путь, значит можно увеличить.
[01:14:38.000 --> 01:14:40.000]  То есть это продвинутая версия.
[01:14:41.000 --> 01:14:43.000]  То есть мы думали, можно ли поток увеличить?
[01:14:43.000 --> 01:14:44.000]  Первый вариант жадно.
[01:14:44.000 --> 01:14:47.000]  Просто можно ли там найти какой-то путь в исходной сети,
[01:14:47.000 --> 01:14:49.000]  по ненасыщенным ребрам?
[01:14:50.000 --> 01:14:52.000]  Да, на всякий случай сразу еще введем такое понятие,
[01:14:52.000 --> 01:14:54.000]  которое мы интуитивно постоянно пользуемся.
[01:14:54.000 --> 01:14:58.000]  Ребро насыщено, если по нему потекет максимальный поток
[01:14:58.000 --> 01:15:00.000]  с соответствующей пропускной способностью.
[01:15:01.000 --> 01:15:03.000]  То есть если f равно c, то как бы ребро насыщено.
[01:15:03.000 --> 01:15:05.000]  В ином случае оно ненасыщено.
[01:15:07.000 --> 01:15:10.000]  Так вот, можно в исходной сети просто посмотреть,
[01:15:10.000 --> 01:15:13.000]  без всяких там, без изобретения всяких обратных ребр,
[01:15:13.000 --> 01:15:16.000]  можно ли дойти от st по ненасыщенным ребрам.
[01:15:16.000 --> 01:15:17.000]  То есть есть такой жадик.
[01:15:17.000 --> 01:15:19.000]  То есть если можно, значит поток можно увеличить.
[01:15:20.000 --> 01:15:22.000]  Вот это строго более продвинутая вещь.
[01:15:25.000 --> 01:15:27.000]  То есть как бы существует ли путь в остаточной сети?
[01:15:27.000 --> 01:15:31.000]  То есть мы говорим, что мы можем идти не только по ненасыщенным ребрам,
[01:15:31.000 --> 01:15:34.000]  но еще и можем отменять потоки, то есть ходить по обратным ребрам.
[01:15:37.000 --> 01:15:40.000]  То есть как бы это более продвинутый жадник,
[01:15:40.000 --> 01:15:41.000]  строго более продвинутый,
[01:15:42.000 --> 01:15:44.000]  потому что предыдущее все он включает.
[01:15:45.000 --> 01:15:47.000]  Но как со всяким жадником возникает вопрос,
[01:15:47.000 --> 01:15:48.000]  а всегда лед работает?
[01:15:49.000 --> 01:15:50.000]  Ну скорее все лед находит.
[01:15:51.000 --> 01:15:52.000]  Нет, ну почему?
[01:15:53.000 --> 01:15:54.000]  Ну что такое все?
[01:15:55.000 --> 01:15:57.000]  Ну в плане доказания, что он всегда работает, но возможно он...
[01:15:58.000 --> 01:15:59.000]  Нет, что значит всегда работает?
[01:16:00.000 --> 01:16:01.000]  Тут возникает как бы вопрос...
[01:16:02.000 --> 01:16:04.000]  Нет, что такое корректность опять же?
[01:16:05.000 --> 01:16:08.000]  Все корректно, как бы потоки, которые находят корректны.
[01:16:09.000 --> 01:16:10.000]  Вот это мы догадали.
[01:16:10.000 --> 01:16:11.000]  Да.
[01:16:11.000 --> 01:16:13.000]  Тут возникает вопрос, найдем ли мы максимальный поток?
[01:16:15.000 --> 01:16:17.000]  Хотя на уровне математики возникает вообще вопрос.
[01:16:17.000 --> 01:16:19.000]  Да, но тут формальный вопрос вообще.
[01:16:19.000 --> 01:16:20.000]  А что такое максимальный поток в принципе?
[01:16:22.000 --> 01:16:23.000]  С максимальной?
[01:16:24.000 --> 01:16:25.000]  Ну допустим да, это что-то типа
[01:16:25.000 --> 01:16:30.000]  рассмотрим все возможные потоки и рассмотрим их величины.
[01:16:30.000 --> 01:16:32.000]  Из этих величин выберем максимальный.
[01:16:33.000 --> 01:16:36.000]  Да, но сразу возникает вопрос,
[01:16:37.000 --> 01:16:40.000]  что взять мы можем, к сожалению, только супремум.
[01:16:42.000 --> 01:16:43.000]  И у нас сразу возникает вопрос,
[01:16:44.000 --> 01:16:46.000]  может быть максимального потока не существует в природе?
[01:16:47.000 --> 01:16:49.000]  Потому что может быть этот супремум,
[01:16:49.000 --> 01:16:51.000]  просто конкретно супремум не достигается,
[01:16:51.000 --> 01:16:53.000]  существуют только потоки сколь угодно близкие к нему.
[01:16:54.000 --> 01:16:56.000]  Либо он бесконечный.
[01:16:57.000 --> 01:17:00.000]  А самое худшее, теоретически еще и бесконечность.
[01:17:01.000 --> 01:17:08.000]  Если мы берем потоки, то у нас по идее, что достигается, либо он бесконечный, то не достигается.
[01:17:08.000 --> 01:17:13.000]  Не факт, потому что даже в целочисленных сетях мы не обязаны пускать потоки целочисленные.
[01:17:16.000 --> 01:17:19.000]  Да, но правда нет, мы конечно сразу можем сказать,
[01:17:19.000 --> 01:17:21.000]  что ладно, величины потока все-таки ограничены,
[01:17:21.000 --> 01:17:25.000]  потому что величина потока не может превосходить, например,
[01:17:25.000 --> 01:17:29.000]  суммы пропускных способностей ребер, исходящих из стока, например.
[01:17:30.000 --> 01:17:35.000]  Ну, можно и так, но то, что я сказал, просто напрямую из определения следует.
[01:17:36.000 --> 01:17:39.000]  А так мы просто в доказательстве того упреждения, да.
[01:17:39.000 --> 01:17:41.000]  То есть оценивать можно с полпинка, да,
[01:17:41.000 --> 01:17:45.000]  что просто С большое умножить на модуль Е, все, в принципе, это больше не бывает.
[01:17:46.000 --> 01:17:49.000]  Это да, но можно более точно оценить,
[01:17:49.000 --> 01:17:55.000]  что обычно все-таки речь идет о модуле С на количество ребер там исходящих.
[01:17:56.000 --> 01:17:58.000]  Вот, но не важно, оно ограничено.
[01:17:58.000 --> 01:18:02.000]  Но из этого понятно, это супраймум не будет бесконечностью.
[01:18:03.000 --> 01:18:07.000]  Ну, достаточно доказать, что нам не нужно брать дробные веса ребер.
[01:18:09.000 --> 01:18:10.000]  Чего доказать?
[01:18:10.000 --> 01:18:13.000]  Если мы так намажем, что не нужно брать дробные веса ребер, сразу становится конечной.
[01:18:13.000 --> 01:18:15.000]  Да, но если только целочисленные сети.
[01:18:15.000 --> 01:18:18.000]  Ведь в определениях никто не сказал обратить внимание,
[01:18:18.000 --> 01:18:20.000]  что профессиональные способности обязательно целые.
[01:18:25.000 --> 01:18:26.000]  Вот тогда возникает вопрос.
[01:18:26.000 --> 01:18:28.000]  Существует ли максимальный потом?
[01:18:39.000 --> 01:18:40.000]  На самом деле нет.
[01:18:41.000 --> 01:18:42.000]  Нет, правильно.
[01:18:43.000 --> 01:18:44.000]  Абсолютно правильная идея.
[01:18:44.000 --> 01:18:46.000]  На самом деле ситуация такая.
[01:18:46.000 --> 01:18:51.000]  Рассмотрим последовательность потоков, пропускная способность которых сходится к супраймуму.
[01:18:56.000 --> 01:18:58.000]  Бесконечная последовательность потоков.
[01:18:59.000 --> 01:19:04.000]  Каждый из этих потоков предлагает сколько-то пускать по первому ребру.
[01:19:06.000 --> 01:19:12.000]  Получается последовательность эфок, который предлагает запустить по первому ребру.
[01:19:13.000 --> 01:19:15.000]  Эта последовательность ограничена.
[01:19:15.000 --> 01:19:17.000]  Ц-шкой своей.
[01:19:17.000 --> 01:19:20.000]  Следовательно, потерями бойца на Вейкстраса...
[01:19:26.000 --> 01:19:27.000]  Ну колебания...
[01:19:29.000 --> 01:19:30.000]  И что?
[01:19:31.000 --> 01:19:33.000]  Это не приводит к колебаниям величин поток.
[01:19:33.000 --> 01:19:38.000]  Это приводит к колебаниям того, что бывают нулевые потоки, в которых вода где-то куда-то течет.
[01:19:42.000 --> 01:19:44.000]  А почему по первому ребру можно будет пустить...
[01:19:44.000 --> 01:19:46.000]  Нет, а причем тут сходится?
[01:19:46.000 --> 01:19:47.000]  Ну смотри, утверждение такое.
[01:19:47.000 --> 01:19:50.000]  Нет, там просто говорится, что раз величины ограничены, значит потеряемые бойца на Вейкстраса,
[01:19:50.000 --> 01:19:55.000]  или по какой там, я не помню названия, можно выбрать сходящуюся подпоследовательность.
[01:19:55.000 --> 01:19:56.000]  Что нужно подпоследить?
[01:19:56.000 --> 01:19:58.000]  А, да, очевидно.
[01:19:58.000 --> 01:20:00.000]  Сходимость по качеству ребра.
[01:20:00.000 --> 01:20:03.000]  Нет, смотри, имейте в виду величины.
[01:20:03.000 --> 01:20:07.000]  То есть мы сказали так, что в каждый поток пускают сколько-то по первому ребру.
[01:20:08.000 --> 01:20:12.000]  То есть получается последовательность потоков индуцирует последовательность чиселок.
[01:20:12.000 --> 01:20:15.000]  Сколько опускается по первому ребру?
[01:20:15.000 --> 01:20:18.000]  Это последовательность чиселок ограничена, потому что она н toma.
[01:20:18.000 --> 01:20:25.000]  Следовательно, можно там, из нее можно выбрать сходящуюся подпоследовательность.
[01:20:25.000 --> 01:20:31.000]  Поэтому давайте в последовательстве потоков возьмем вот эту подпоследовательность,
[01:20:31.000 --> 01:20:35.000]  так чтобы поток по этой штуке сходился.
[01:20:35.000 --> 01:20:38.960]  Вот, потом повторим операцию по второму ребру, по третьему ребру и так далее,
[01:20:38.960 --> 01:20:41.960]  пользуясь тем, что мы все-таки с конечными графами работаем.
[01:20:41.960 --> 01:20:46.960]  А мне не очень нравится, почему величина потоков у Супраимома будет действительно...
[01:20:46.960 --> 01:20:52.960]  Нет, мы получили последовательность потоков величины, которых сходятся к максимальному,
[01:20:52.960 --> 01:20:57.960]  но теперь остается только убедиться, что по каждому ребру f сходятся куда-то.
[01:20:57.960 --> 01:21:03.960]  Почему Супраимом по потокам стремится к Супраимому по величинам?
[01:21:04.920 --> 01:21:06.920]  Нет, там не совсем так.
[01:21:06.920 --> 01:21:12.920]  Пока у нас получилась последовательность потоков, величины которых сходятся к...
[01:21:12.920 --> 01:21:14.920]  Нет, смотри, что у нас получилось?
[01:21:14.920 --> 01:21:15.920]  У нас получилось...
[01:21:15.920 --> 01:21:19.920]  Где раз мы применили тюрему Бальца Неверстраса?
[01:21:19.920 --> 01:21:22.940]  Это привело к тому, что у нас теперь есть последовательность потоков,
[01:21:22.940 --> 01:21:27.920]  величины которых с одной стороны сходятся к Супраимому.
[01:21:28.920 --> 01:21:29.920]  Это с одной стороны.
[01:21:29.920 --> 01:21:33.440]  А с другой стороны, мы замечаем, что по каждому ребру
[01:21:33.600 --> 01:21:37.120]  по члену F-ки имеют какой-то предел.
[01:21:41.320 --> 01:21:43.080]  Да, это пока все, что мы сделали.
[01:21:44.400 --> 01:21:47.440]  Да, но на самом деле, да, сделали мы, в общем-то, все.
[01:21:47.520 --> 01:21:49.520]  Остается только сесть и аккуратно доказать,
[01:21:49.600 --> 01:21:53.200]  что мы можем рассмотреть поток,
[01:21:53.280 --> 01:21:57.120]  F-ки которых, это те самые пределы.
[01:21:58.000 --> 01:22:00.920]  Остается только показать A, что это корректный поток,
[01:22:01.720 --> 01:22:05.600]  и B, что его величина равна чему надо.
[01:22:05.680 --> 01:22:08.000]  Но оба раза это, я думаю, достаточно очевидно.
[01:22:08.480 --> 01:22:11.600]  Просто потому что понятно, что если у вас есть...
[01:22:11.680 --> 01:22:13.800]  Ну, мы помним, что если у нас последовательность
[01:22:13.880 --> 01:22:17.200]  не превосходит какой-то C-шки, то ее предел тоже этой C-шки не превосходит.
[01:22:17.280 --> 01:22:19.400]  Там еще нужно, чтобы сумма 0, но она всегда 0.
[01:22:19.480 --> 01:22:22.880]  Да, она всегда сумма 0, поэтому и предел суммы будет,
[01:22:22.960 --> 01:22:25.440]  тоже как сумма пределов, поэтому тоже 0.
[01:22:25.480 --> 01:22:26.440]  Что там еще надо?
[01:22:26.520 --> 01:22:29.120]  А, ну и величину, но величина это тоже сумма каких-то ребер,
[01:22:29.200 --> 01:22:30.600]  поэтому там сумма...
[01:22:34.680 --> 01:22:35.400]  Нет, не совсем.
[01:22:35.480 --> 01:22:38.960]  Величина потока это, извините, сколько у тебя вытекает из-за стока.
[01:22:39.200 --> 01:22:43.320]  Да, но у нас сумма имеется величина как раз вот этому штуку.
[01:22:43.400 --> 01:22:45.200]  Ну, это да, ну да.
[01:22:46.600 --> 01:22:51.120]  Из этого следует, что величина вот этого предельного потока
[01:22:51.200 --> 01:22:53.520]  это действительно предел величины сходных потоков.
[01:22:55.480 --> 01:23:06.320]  Это доказывает, что мы в явном виде построили поток с такой...
[01:23:08.240 --> 01:23:08.920]  Ну да.
[01:23:11.400 --> 01:23:13.520]  Да, именно.
[01:23:24.200 --> 01:23:25.120]  А мы прям...
[01:23:25.440 --> 01:23:30.680]  Так, все будет понятно, да?
[01:23:31.240 --> 01:23:33.600]  Нет, сейчас еще пока думаем.
[01:23:41.040 --> 01:23:42.480]  Так, ну все, удалось разобраться.
[01:23:44.920 --> 01:23:47.200]  Да, то есть да, тут нетриониальный момент, но как бы да.
[01:23:48.960 --> 01:23:52.560]  То есть мы взяли последовательство потоков
[01:23:52.600 --> 01:23:55.240]  с величинами, стоявящимися к чему-то,
[01:23:55.920 --> 01:23:57.160]  оставили из нее под последовательство,
[01:23:57.240 --> 01:23:59.120]  которое сходится не только по величине потока,
[01:23:59.200 --> 01:24:01.480]  но еще и по каждому ребру по члену,
[01:24:02.400 --> 01:24:04.880]  совершили предельный переход и убедились, что...
[01:24:05.120 --> 01:24:07.840]  И тем самым получили сеть, у которой просто...
[01:24:08.920 --> 01:24:13.480]  Получили корректный поток, у которого величина является этим супремовым.
[01:24:15.440 --> 01:24:18.840]  То есть в принципе уже из этого можно сообразить,
[01:24:18.920 --> 01:24:21.800]  что максимальный поток всегда существует, осталось только его найти.
[01:24:23.200 --> 01:24:25.960]  То есть иронично на самом деле исключается в том,
[01:24:26.040 --> 01:24:29.040]  что доказательством на самом деле существования максимального потока
[01:24:29.120 --> 01:24:31.840]  является практически любой алгоритм, который мы сейчас будем изучать.
[01:24:34.800 --> 01:24:37.280]  Ну, точнее тот факт, что он будет работать за конечное время.
[01:24:38.760 --> 01:24:41.880]  Ну вот, но на самом деле убедиться в этом можно и заранее.
[01:24:43.720 --> 01:24:46.040]  Так, да, можно переходить и дальше, но...
[01:24:46.520 --> 01:24:48.440]  Внимание, вопрос. Да, на чем мы остановились?
[01:24:48.800 --> 01:24:51.560]  Мы убедились, что максимальный поток существует,
[01:24:51.640 --> 01:24:55.800]  то есть существует поток, у которого величина максимально возможна.
[01:24:56.760 --> 01:24:59.920]  Да, мы даже убедились, что это да, именно максимум, а не супремов.
[01:25:01.640 --> 01:25:04.680]  Осталось только... Ну вот, и более того, у нас даже возникла
[01:25:05.040 --> 01:25:06.920]  мистическая жадная технология.
[01:25:09.240 --> 01:25:12.200]  Жадная технология говорила, что вот у нас есть остаточная сеть,
[01:25:13.040 --> 01:25:17.120]  и мы можем говорить, ой, а давайте-ка, что мы сейчас сделаем?
[01:25:17.440 --> 01:25:19.920]  То есть, а давайте-ка найдем путь вот этот вот, да?
[01:25:20.320 --> 01:25:22.880]  То есть, дадем... Построим остаточную сеть, попробуем найти путь.
[01:25:23.000 --> 01:25:24.960]  Если путь нашелся, значит, пускаем по нему поток.
[01:25:25.600 --> 01:25:29.880]  Если... Ну вот. И как бы так, и теоретически, я даже заранее скажу,
[01:25:29.960 --> 01:25:31.880]  это может называться метод Форда Фолкерсона.
[01:25:32.120 --> 01:25:35.000]  Давайте так просто искать в остаточной сети поток
[01:25:35.080 --> 01:25:37.240]  и там каким-то образом эти пути находить,
[01:25:37.520 --> 01:25:40.280]  и будем так делать до тех пор, пока путь находится.
[01:25:40.960 --> 01:25:43.480]  Но не поток, потому что поток мы как-то рекурсивно задавали.
[01:25:44.200 --> 01:25:45.800]  Нет, но не поток, а путе, я имею в виду.
[01:25:46.360 --> 01:25:48.120]  То есть, путь, по которому можно пустить поток.
[01:25:48.120 --> 01:25:52.200]  Ну вот, возникает естественное...
[01:25:52.280 --> 01:25:54.560]  Ну вот, но предположим, что мы такого пути не нашли.
[01:25:54.880 --> 01:25:55.480]  Не нашли.
[01:25:56.320 --> 01:26:00.000]  Возникает естественный вопрос, верно ли, что следует ли из этого,
[01:26:00.520 --> 01:26:01.680]  что поток максимальный?
[01:26:03.160 --> 01:26:07.040]  Или может быть, мы уперлись в какой-то неудачный локальный максимум,
[01:26:07.520 --> 01:26:09.320]  который локальный, но не глобальный?
[01:26:12.760 --> 01:26:15.880]  Да, возможно, кто-то сейчас начинает ругаться какими-то словами типа
[01:26:15.960 --> 01:26:16.760]  Матроид.
[01:26:18.560 --> 01:26:19.760]  Ну, может и нет, я не знаю.
[01:26:21.040 --> 01:26:21.960]  Ну, мало ли там, что там...
[01:26:23.200 --> 01:26:25.720]  Ну, мало ли, кто-то из вас был в Тень кофе, а там Тень кофе, вроде,
[01:26:25.800 --> 01:26:27.000]  там ругались такими словами.
[01:26:35.800 --> 01:26:38.160]  Не знаю, возможно, ни в каком.
[01:26:46.000 --> 01:26:50.840]  Ну, как сказать, видимо, столкнуться в ней можно везде,
[01:26:50.920 --> 01:26:54.200]  потому что, нет, я вам честно скажу, я до текущего момента, к сожалению,
[01:26:54.280 --> 01:26:58.120]  вот дожил до своих вот этих вот так седых волос и так и не понял,
[01:26:58.200 --> 01:27:02.480]  что, ну, а ты и так и не узнал, что такое Матроид, на самом деле, если честно.
[01:27:05.040 --> 01:27:05.760]  Нет, ну как?
[01:27:06.320 --> 01:27:09.760]  Нет, смотри, смотри, смотри с точки зрения чего.
[01:27:11.040 --> 01:27:14.440]  Нет, смотри с точки зрения чего, потому что, на самом деле, как бы...
[01:27:16.080 --> 01:27:19.120]  То есть, сформулируем так, то есть, если вы утверждаете,
[01:27:19.200 --> 01:27:23.400]  что достаточно знать то, что знаю я, то как бы, то да,
[01:27:23.480 --> 01:27:27.320]  это вам хватит, чтобы знать этот курс, конечно, но не более того.
[01:27:28.280 --> 01:27:32.240]  Слушай, а честно скажу, для того, чтобы там, то есть, скорее всего,
[01:27:32.320 --> 01:27:35.280]  чтобы там выиграть чемпионат мира ACPC, наверное, знать надо чуть-чуть больше.
[01:27:37.000 --> 01:27:38.720]  Ну, или, пока ими, кодик чуть-чуть лучше надо.
[01:27:39.360 --> 01:27:42.240]  Но это выражается, как минимум, в том, что я просто как бы сейчас не тренируюсь
[01:27:42.320 --> 01:27:42.760]  и так далее.
[01:27:43.120 --> 01:27:46.600]  Ну, не говоря уже о том, что там, понятно, уровень финала 2014 года
[01:27:46.680 --> 01:27:49.640]  и уровень финала 2023-го, это немножко разные уровни все-таки.
[01:27:52.160 --> 01:27:55.320]  Но, впрочем, это ладно, это уже другой вопрос.
[01:27:56.920 --> 01:27:57.520]  Значит, смотрите.
[01:27:58.440 --> 01:28:00.760]  Как говорится, да, поэтому, в принципе, можно сказать, что...
[01:28:00.840 --> 01:28:03.840]  То есть, общая знания, что Матроид, это, видимо, такая абстракция,
[01:28:03.920 --> 01:28:07.880]  которая может теоретически обобщить какие-то жадные ситуации,
[01:28:07.960 --> 01:28:09.000]  которые иногда возникают.
[01:28:10.000 --> 01:28:12.400]  Да, потому что там утверждается, что там Матроидную структуру
[01:28:12.400 --> 01:28:15.960]  имеют какие-то остовные деревья, например, или что-то еще в этом роде.
[01:28:17.160 --> 01:28:21.520]  Но мы не будем это лезть, а на самом деле мы будем работать с потоками
[01:28:21.600 --> 01:28:26.440]  прямо так, как они есть, и сводить это к чему-то великому мы сейчас не будем.
[01:28:29.440 --> 01:28:30.240]  Но мы еще сейчас...
[01:28:30.680 --> 01:28:32.000]  Но перед тем, как доказывать...
[01:28:33.040 --> 01:28:35.080]  Ну, тут на самом деле еще главный вопрос, потому что, знаете,
[01:28:35.160 --> 01:28:37.600]  всегда просто говорят, кто знает, что такое терема Форда Фолкерсона?
[01:28:37.680 --> 01:28:40.640]  Обычно поднимают руки все, но, на поверху, оказывается, что там
[01:28:40.800 --> 01:28:43.720]  многие считают, что терема Форда Фолкерсона, это что...
[01:28:48.080 --> 01:28:49.080]  Как это формулируется?
[01:28:49.480 --> 01:28:51.600]  А, ну, просто, да, что если в остаточной сети пути нет,
[01:28:51.680 --> 01:28:52.680]  значит поток максимальный.
[01:28:54.360 --> 01:28:55.360]  Да, тогда и только тогда.
[01:28:57.200 --> 01:29:01.520]  Так вот, в нашей терминологии нашего курса это не вся терема Форда Фолкерсона,
[01:29:02.280 --> 01:29:03.760]  это только ее часть.
[01:29:06.280 --> 01:29:07.600]  Значит, но чтобы...
[01:29:08.600 --> 01:29:09.600]  Что?
[01:29:09.680 --> 01:29:10.680]  Что 3DMO?
[01:29:12.280 --> 01:29:14.360]  Тут 3DMO не надо, спокойно.
[01:29:16.000 --> 01:29:18.200]  Не, ну, я не знаю, можно, наверное, придумать алгоритм поиска
[01:29:18.280 --> 01:29:20.640]  максимального потока с помощью 3DMO, конечно.
[01:29:22.080 --> 01:29:23.080]  Но зачем?
[01:29:23.600 --> 01:29:24.600]  Ну, это...
[01:29:24.880 --> 01:29:27.600]  Ну, слушай, если задаваться таким вопросом, можно вообще
[01:29:27.680 --> 01:29:28.680]  много чего обвалить.
[01:29:29.040 --> 01:29:30.920]  А потом поймешь, что зря, на самом деле.
[01:29:32.280 --> 01:29:33.920]  Ну, то есть, ладно, философия, это...
[01:29:34.680 --> 01:29:36.880]  Как бы спокойно, философия, это философия, как бы,
[01:29:36.880 --> 01:29:39.720]  философия науки, это то, с чем вы столкнетесь,
[01:29:39.800 --> 01:29:41.200]  начиная с 4-го курса.
[01:29:41.280 --> 01:29:43.720]  Сначала 4-й курс, потом инистратура, потом инспирантура.
[01:29:45.440 --> 01:29:46.960]  Так что, поэтому зачем это все?
[01:29:47.040 --> 01:29:49.920]  Мы как бы будем в меньшей степени задаваться этим вопросом.
[01:29:55.560 --> 01:29:56.560]  Значит, смотрите.
[01:29:57.560 --> 01:30:00.080]  Значит, нам потребуется понятие разрез.
[01:30:01.920 --> 01:30:03.360]  Значит, внимание, не путать.
[01:30:03.960 --> 01:30:05.920]  Потому что, да, поняли, то есть мы уже сталкивались
[01:30:05.920 --> 01:30:07.760]  с понятием разрез, когда изучали остовы.
[01:30:09.080 --> 01:30:10.360]  Но здесь мы столкнемся...
[01:30:11.400 --> 01:30:13.000]  Но здесь разрез немножко не то.
[01:30:13.640 --> 01:30:17.000]  То есть, казалось бы, да, это тоже разбиение вершин
[01:30:17.080 --> 01:30:19.560]  на два множества, да, два не пустых, что важно.
[01:30:20.680 --> 01:30:24.400]  Но здесь есть важная, просто принципиально важная оговорка.
[01:30:25.160 --> 01:30:27.040]  Что мы не просто разделяем на два множества,
[01:30:27.120 --> 01:30:30.160]  мы требуем, чтобы исток был в первом из этих множеств,
[01:30:30.400 --> 01:30:33.040]  в первом из этих множеств, а Т в другом.
[01:30:33.280 --> 01:30:36.040]  Или я эти множества еще называю долями разреза.
[01:30:38.800 --> 01:30:39.800]  Вот.
[01:30:40.840 --> 01:30:42.120]  Это называется разрез.
[01:30:45.760 --> 01:30:46.760]  Идем дальше.
[01:30:47.480 --> 01:30:49.840]  Ну, дальше тут просто формально пишем.
[01:30:49.920 --> 01:30:51.600]  Пропускная способность разреза это...
[01:30:52.080 --> 01:30:53.120]  Так, вот тут тоже внимательно.
[01:30:53.200 --> 01:30:54.200]  Так, ребят.
[01:30:54.680 --> 01:30:57.440]  Так, внимание, тут бы как бы детали лучше не пропускать.
[01:30:59.720 --> 01:31:00.720]  То есть как бы, знаете, да.
[01:31:01.520 --> 01:31:03.600]  То есть, смотрите, что такое пропускная способность?
[01:31:03.920 --> 01:31:05.720]  Это, конечно, что все просто.
[01:31:05.800 --> 01:31:10.080]  Сумма пропусты способностей всех ребер, которые ведут из С в Т.
[01:31:10.360 --> 01:31:11.600]  Значит, но тут очень важно.
[01:31:12.240 --> 01:31:14.280]  Когда мы говорим про пропускную способность разреза,
[01:31:14.520 --> 01:31:19.960]  мы имеем в виду именно ребра, которые ведут именно из С в именно Т.
[01:31:20.520 --> 01:31:22.720]  То есть, ребра, ведущие назад, нас не интересуют.
[01:31:24.360 --> 01:31:26.480]  Но, впрочем, конкретно в пропускной способности, в общем-то,
[01:31:26.560 --> 01:31:27.680]  это нас особо не волнует.
[01:31:28.680 --> 01:31:29.680]  Вот.
[01:31:29.760 --> 01:31:31.560]  А вот сейчас будет прям совсем нетривиально.
[01:31:32.800 --> 01:31:36.040]  Потому что дальше мы вводим понятие чистый поток через разрез.
[01:31:36.120 --> 01:31:37.200]  Вот нам жутко интересно.
[01:31:37.520 --> 01:31:38.640]  Жила-была вот сеть.
[01:31:39.280 --> 01:31:42.320]  Мы, значит, тут нарисовали какую-то границу.
[01:31:42.480 --> 01:31:43.920]  Какую мы границу нарисовали.
[01:31:46.480 --> 01:31:47.480]  Вот.
[01:31:48.960 --> 01:31:49.960]  Вот. Вот такая.
[01:31:51.800 --> 01:31:53.200]  И получается примерно следующее.
[01:31:53.280 --> 01:31:55.160]  Ну вот. И нам жутко интересно,
[01:31:55.240 --> 01:31:58.320]  сколько воды проходит через эту границу.
[01:32:01.280 --> 01:32:02.760]  Но здесь надо аккуратно формулировать.
[01:32:03.720 --> 01:32:06.520]  Потому что, казалось бы, мы пишем то же самое, как в пропускной способности.
[01:32:06.680 --> 01:32:10.440]  Просто суммируем серебра, которые идут из вот отсюда сюда.
[01:32:13.000 --> 01:32:15.040]  Но здесь, конечно, есть маленькая подлянка.
[01:32:16.240 --> 01:32:18.400]  А как вы думаете, как бы мы написали определение,
[01:32:18.560 --> 01:32:23.400]  если бы мы были в другом определении потоков?
[01:32:23.520 --> 01:32:25.520]  Ну, вычислил бы еще просто то, что...
[01:32:25.600 --> 01:32:26.920]  Да. То есть будьте внимательны.
[01:32:29.280 --> 01:32:31.800]  Тогда нам бы пришлось сколько течет в эту сторону,
[01:32:31.880 --> 01:32:33.400]  минус сколько течет в эту сторону.
[01:32:34.440 --> 01:32:35.960]  То есть, как всегда, здесь это учтено,
[01:32:36.040 --> 01:32:38.040]  потому что у нас вот минуса тоже считаем.
[01:32:38.280 --> 01:32:39.280]  Понимаете, да?
[01:32:40.240 --> 01:32:41.240]  Это вот очень важно.
[01:32:42.560 --> 01:32:44.280]  Просто важно на это обратить внимание.
[01:32:44.360 --> 01:32:45.560]  Ну, в принципе, и логично.
[01:32:45.640 --> 01:32:48.200]  То есть сколько воды перетекает через эту границу.
[01:32:48.680 --> 01:32:50.440]  Ну, естественно, наверное, полагать,
[01:32:50.440 --> 01:32:54.720]  что если у нас вода появляется только в истоке и исчезает только в стоке,
[01:32:54.800 --> 01:32:57.320]  то, наверное, логично, что через эту границу столько и притекает.
[01:33:00.320 --> 01:33:03.960]  Но это, конечно, приходится формально доказывать.
[01:33:07.320 --> 01:33:10.320]  То есть так и доказываем, что для абсолютно любого разреза
[01:33:10.400 --> 01:33:13.640]  верно, что чистый поток через этот разрез равен тупой величине потока.
[01:33:16.440 --> 01:33:20.280]  То есть и было у нас два определения
[01:33:20.280 --> 01:33:24.000]  величины потока, а мы сделали из них два в степени n,
[01:33:25.000 --> 01:33:27.240]  два в степени n минус два, определение потока.
[01:33:27.320 --> 01:33:30.480]  Так, подождите, вы говорите, что мы сейчас доказали,
[01:33:30.560 --> 01:33:31.960]  что Макс Поток равен медразряд?
[01:33:32.160 --> 01:33:33.160]  Нет.
[01:33:33.800 --> 01:33:35.280]  Так, я дошел только до сюда.
[01:33:37.120 --> 01:33:38.480]  Я пока еще ничего не сказал.
[01:33:39.640 --> 01:33:42.520]  Я пока сказал, что у нас есть мечта доказать, что там Макс Поток...
[01:33:43.280 --> 01:33:45.280]  Да, то есть такая мечта у нас будет, это уже так,
[01:33:45.360 --> 01:33:46.760]  но это ты пока забегаешь вперед.
[01:33:48.000 --> 01:33:49.240]  Пока я еще такого ничего не сказал.
[01:33:49.280 --> 01:33:51.640]  Пока я сказал, что мы просто захотели рассмотреть разрез,
[01:33:52.560 --> 01:33:55.440]  то есть нам просто стало интересно, что, допустим,
[01:33:55.520 --> 01:33:59.000]  течет у нас какая-то речка, и мы думаем, насколько эта речка
[01:33:59.080 --> 01:34:03.280]  мешает нам действительно запустить там сильно большое число грузовиков.
[01:34:04.280 --> 01:34:06.840]  То есть это просто способность, сколько мы тут теоретически грузовиков
[01:34:06.920 --> 01:34:10.120]  суммарно можем пихать по всем мостам, которые через нее едут.
[01:34:10.960 --> 01:34:13.640]  Чистый поток это же, сколько реально грузовиков едет.
[01:34:14.040 --> 01:34:17.120]  Но при этом соговорка, что у нас у какого-то грузовика маршрут
[01:34:17.160 --> 01:34:20.640]  тут предполагает пересечение реки несколько раз,
[01:34:20.720 --> 01:34:24.640]  то мы должны в такой ситуации не три раза его считать, а все-таки один.
[01:34:26.080 --> 01:34:28.720]  Но здесь это автоматически считать, потому что нужное число раз с минусом
[01:34:28.800 --> 01:34:30.000]  посчитается, ничего страшного.
[01:34:30.080 --> 01:34:30.760]  Разное время.
[01:34:30.840 --> 01:34:31.360]  Чего?
[01:34:31.440 --> 01:34:32.200]  Разное время.
[01:34:33.440 --> 01:34:35.920]  Нет, ну как сказать, разное время?
[01:34:36.000 --> 01:34:40.240]  Ну тут вот, да, тут это, конечно, может немножко путать.
[01:34:40.640 --> 01:34:44.160]  Но тут вопрос о правильном восприятии, потому что, да,
[01:34:44.480 --> 01:34:47.080]  к сожалению, да, проблема, что грузовик едет в течение какой-то количества
[01:34:47.160 --> 01:34:49.840]  времени, а мы как бы уже фиксированы картинки.
[01:34:49.920 --> 01:34:52.720]  Говорим, что тут едет сколько-то машин, тут едет и так далее.
[01:34:54.240 --> 01:34:57.480]  Но тем не менее очень удобно говорить, очень удобно мыслить,
[01:34:57.800 --> 01:35:01.120]  вот, видимо, чуть позже обсудим, в терминах декомпозиции потока на самом деле.
[01:35:06.240 --> 01:35:10.120]  Значит, смотрите, ну вот, ну, значит, возникает такая лемма.
[01:35:10.320 --> 01:35:11.200]  Ну как ее доказать?
[01:35:11.640 --> 01:35:13.280]  Так, ну доказать, что понятно, да?
[01:35:15.360 --> 01:35:16.040]  Ну вот.
[01:35:19.240 --> 01:35:19.760]  Что?
[01:35:19.840 --> 01:35:24.720]  Ну, это, нет, я не понял, чем это отличается от того, что вы сказали, что мы еще не сказали.
[01:35:25.760 --> 01:35:26.720]  Ну пока еще ничем.
[01:35:27.760 --> 01:35:32.640]  Ну пока, пока, как бы да, есть лемма, что чистый поток через разрез равен модуле F, все.
[01:35:33.520 --> 01:35:37.680]  Это просто величина потока в том определении, которое у нас было.
[01:35:38.800 --> 01:35:40.080]  Нет, сейчас, стоп, что?
[01:35:40.080 --> 01:35:40.920]  Ну, в смысле?
[01:35:41.560 --> 01:35:42.760]  Ну, в смысле между S и T?
[01:35:44.200 --> 01:35:45.120]  Ой, не туда.
[01:35:45.960 --> 01:35:48.680]  Да, между S, ну вот, вот у нас модуле F, определение.
[01:35:51.600 --> 01:35:53.120]  Это определение величины поток.
[01:35:53.480 --> 01:35:58.800]  Так вот, я утверждаю, что чистый поток через разрез, что чистый поток через разрез,
[01:35:58.800 --> 01:36:01.080]  это в точности величина этого потока.
[01:36:01.560 --> 01:36:04.760]  Так, чистый поток через разрез индуцируется потоком F.
[01:36:04.760 --> 01:36:08.680]  То есть у нее есть величина, называемая чистый поток, вот это F от S-T.
[01:36:10.040 --> 01:36:14.040]  И вот утверждается, что эта величина совпадает с основной величиной разреза.
[01:36:17.200 --> 01:36:17.640]  Вот.
[01:36:17.640 --> 01:36:20.200]  А, ну давайте посмотрим, что тут вообще написано.
[01:36:21.680 --> 01:36:26.600]  Ну, написано тут, ну я не знаю, прям хочется на самом деле вот это заклинание
[01:36:26.600 --> 01:36:28.720]  на самом деле прям на картинке изобразить.
[01:36:29.720 --> 01:36:32.400]  Просто, звучит так, условно.
[01:36:32.760 --> 01:36:36.320]  Потому что, вот жела была сеть, вот жел был разрез.
[01:36:38.440 --> 01:36:39.120]  Теперь посмотрим.
[01:36:39.760 --> 01:36:42.640]  То есть то, что там написано, иллюстрируется так.
[01:36:42.640 --> 01:36:44.040]  Что такое величина потока?
[01:36:44.040 --> 01:36:48.880]  Это сколько вытекает из истока.
[01:36:50.040 --> 01:36:55.520]  То есть может быть вот так, может быть вот так, может быть вот так, это и так.
[01:36:55.520 --> 01:37:00.520]  то есть может быть вот так, может быть вот так, ну и так далее, понимаете, да?
[01:37:00.520 --> 01:37:09.520]  А теперь давайте к этой величине прибавим для каждой вершины еще вот по такому солнышку.
[01:37:09.520 --> 01:37:16.520]  Вот тут по солнышку, вот тут по солнышку, там, ну и так далее.
[01:37:16.520 --> 01:37:23.520]  Ну солнышка в данном случае, берем вершину, берем вершины вот с этой стороны разреза,
[01:37:23.520 --> 01:37:31.520]  вот тут С, тут Т, и прибавляем к этой величине просто все F по всем ребрам, выходящим из вершин.
[01:37:31.520 --> 01:37:34.520]  Даже с своей стороны, да.
[01:37:34.520 --> 01:37:41.520]  Чего? Ну что, нет, эта вершина должна быть с этой стороны, но куда ребра идут, там, сюда или сюда, нам не важно.
[01:37:41.520 --> 01:37:45.520]  А, в плане мы взяли суммарную величину потоков по вершинам слева?
[01:37:45.520 --> 01:37:50.520]  Нет, ну не совсем.
[01:37:50.520 --> 01:37:55.520]  Ну суммарный поток, выходящий из всех вершин слева, да.
[01:37:55.520 --> 01:37:57.520]  То есть это как раз во втором определении?
[01:37:57.520 --> 01:37:59.520]  Да.
[01:37:59.520 --> 01:38:00.520]  Да нет.
[01:38:00.520 --> 01:38:03.520]  Нет, во втором определении нам надо...
[01:38:03.520 --> 01:38:14.520]  Нет, скажем так, просто нам надо было бы вычитать, потому что сейчас-то можем сказать, почему мы имеем право такое солнышко добавлять, потому что оно все равно равно нулю.
[01:38:14.520 --> 01:38:21.520]  Потому что, помним, суммарный поток выходящий из любой вершины, кроме истока, равен нулю, мы помним, да.
[01:38:21.520 --> 01:38:25.520]  Поэтому взяли солнышко.
[01:38:25.520 --> 01:38:44.520]  Но тогда, ну с другой стороны, заметим, как правильно замечено, что тогда у нас получается, ну то есть у нас там получается, давайте вот, то есть получается модуль f равен, получается сумма по всем, значит, вершинам в s, значит, сумма по всем u, f от uw.
[01:38:44.520 --> 01:38:47.520]  То есть f от vu.
[01:38:47.520 --> 01:38:50.520]  Вот.
[01:38:50.520 --> 01:38:53.520]  То есть это мы вот все эти солнышки добавили.
[01:38:53.520 --> 01:39:03.520]  Но теперь заметим, что по антисимметричности все ребра, все, между всеми парами вершин слева у нас ребра поубивались.
[01:39:03.520 --> 01:39:09.520]  Но раз они поубивались, то остаются только те ребра, которые заканчиваются не в s.
[01:39:09.520 --> 01:39:19.520]  То есть тогда получается, что остаются только ребра те, которые начинаются все еще в s, но заканчиваются они уже все-таки в t.
[01:39:19.520 --> 01:39:25.520]  Но это прям, но это прям определение чистого потока через разрез.
[01:39:25.520 --> 01:39:29.520]  Все.
[01:39:29.520 --> 01:39:41.520]  Ну то есть там, конкретно там в тексте написано, что в этом месте, что это равно просто сумма, то есть такая сумма по доле s.
[01:39:41.520 --> 01:39:44.520]  Вот.
[01:39:44.520 --> 01:39:50.520]  Но там плюс тоже самое, но...
[01:39:50.520 --> 01:39:52.520]  Ну вот, но теперь в долю t.
[01:39:52.520 --> 01:40:06.520]  И оказывается, что это равно вот этому просто потому, что вот это вот, это, собственно, оно само себя убивает.
[01:40:06.520 --> 01:40:09.520]  Вот.
[01:40:09.520 --> 01:40:16.520]  Так что вот такая несложная лемма, но из нее есть не менее простое, но очень важное свойство.
[01:40:16.520 --> 01:40:33.520]  Что для любой, то есть свойство, что для любого s и t, то есть на самом деле лему можно было сформулировать так, что теперь для любого этого разреза st, верно, что f от st, то есть модуль ft, который равен этому, не превосходит c от st.
[01:40:33.520 --> 01:40:36.520]  Но это не следствие, а просто.
[01:40:36.520 --> 01:40:43.520]  Ну потому что f от st, c от st, они определяются одинаково, то есть сумма по одним и тем же ребрам, только тут суммируются f-ки, тут суммируются c-шки.
[01:40:43.520 --> 01:40:47.520]  Так как f-ки не превосходят c-шек по члену, то и сумма не превосходит.
[01:40:47.520 --> 01:40:50.520]  Вот.
[01:40:50.520 --> 01:40:54.520]  То есть пока, видите, просто как будто на уровне какой-то польцевой магии получается.
[01:40:54.520 --> 01:40:55.520]  Да даже и магии никакой.
[01:40:55.520 --> 01:40:57.520]  Внимание разреза мы, получается, определяем.
[01:40:57.520 --> 01:40:58.520]  Ну да.
[01:40:58.520 --> 01:41:01.520]  Ну да, то есть да.
[01:41:01.520 --> 01:41:02.520]  Ну не совсем.
[01:41:02.520 --> 01:41:03.520]  Почему?
[01:41:03.520 --> 01:41:09.520]  Пока мы просто говорим, ну изначально мы говорим, что заметим, что модуль f не превосходит пропускной способности любого разреза.
[01:41:09.520 --> 01:41:11.520]  Да?
[01:41:11.520 --> 01:41:12.520]  Вот.
[01:41:12.520 --> 01:41:20.520]  Но тогда разрезов у нас всего, конечное количество, 2 в степени v-, там модуль v-2, если быть точнее.
[01:41:20.520 --> 01:41:21.520]  Да?
[01:41:21.520 --> 01:41:22.520]  Вот.
[01:41:22.520 --> 01:41:31.520]  Тогда получается из всех разрезов можно выбрать минимальный, естественно, по пропускной способности и сказать, что модуль f не превосходит на самом деле пропускной способности,
[01:41:31.520 --> 01:41:37.520]  минимальный из этих пропускных способностей.
[01:41:37.520 --> 01:41:38.520]  Вот.
[01:41:38.520 --> 01:41:43.520]  Понимаете, да?
[01:41:43.520 --> 01:41:46.520]  Чистый поток у всех одинаковый, да?
[01:41:46.520 --> 01:41:49.520]  Чистый поток?
[01:41:49.520 --> 01:41:50.520]  Ну да.
[01:41:50.520 --> 01:41:52.520]  Чистый поток по всем.
[01:41:52.520 --> 01:41:59.520]  Ну то есть так, если любой поток f индуцирует 2 в степени модуль v-2 чистых потоков вот этих.
[01:41:59.520 --> 01:42:02.520]  Но они все одинаковые и равны собственно великим.
[01:42:02.520 --> 01:42:09.520]  Но заметим, что величины потока, вот когда мы их определяли через исток и через сток, это на самом деле тоже просто двух примеров.
[01:42:09.520 --> 01:42:13.520]  То есть это примеры просто двух чистых потоков через два разреза.
[01:42:13.520 --> 01:42:22.520]  Просто в первом разрезе у вас там доля s состоит только из истока, во втором доля t состоит только из стока.
[01:42:22.520 --> 01:42:23.520]  Вот.
[01:42:23.520 --> 01:42:27.520]  То есть по большому счету получилось обобщение такое.
[01:42:27.520 --> 01:42:30.520]  Что такое qed?
[01:42:30.520 --> 01:42:32.520]  Quod, random, random.
[01:42:32.520 --> 01:42:35.520]  Что и требовалось доказать по-латински.
[01:42:35.520 --> 01:42:36.520]  Ну вот.
[01:42:36.520 --> 01:42:39.520]  Ну это просто стадакное сокращение.
[01:42:39.520 --> 01:42:40.520]  Вот.
[01:42:40.520 --> 01:42:42.520]  Просто ради кет.
[01:42:42.520 --> 01:42:45.520]  Нет, qed.
[01:42:45.520 --> 01:42:46.520]  Вот.
[01:42:46.520 --> 01:42:56.520]  И так получается важное свойство, что modul f, то есть пока простое свойство, что величина потока не происходит пропускной способностью минимального разреза.
[01:42:56.520 --> 01:42:59.520]  То есть такая верхняя оценка.
[01:42:59.520 --> 01:43:03.520]  Точна ли она?
[01:43:03.520 --> 01:43:11.520]  И вот теперь-то мы можем в полной мере сформулировать теорему Форда Фолкерсона.
[01:43:11.520 --> 01:43:14.520]  То есть она говорит так.
[01:43:14.520 --> 01:43:16.520]  Мы ее будем формулировать так.
[01:43:16.520 --> 01:43:23.520]  Пусть у нас есть сеть, а в ней течет поток.
[01:43:23.520 --> 01:43:26.520]  Тогда оказывается три утверждения эквивалентные.
[01:43:26.520 --> 01:43:29.520]  Ну то есть либо одновременно все три верны, либо все три не верны.
[01:43:29.520 --> 01:43:33.520]  Утверждение первое f, максимальный поток.
[01:43:33.520 --> 01:43:36.520]  Ой, а можете на прошлом ставить?
[01:43:36.520 --> 01:43:39.520]  О господи.
[01:43:39.520 --> 01:43:41.520]  А что там так?
[01:43:41.520 --> 01:43:42.520]  Что там?
[01:43:42.520 --> 01:43:43.520]  Вот.
[01:43:43.520 --> 01:43:45.520]  То есть первое f, максимальный поток.
[01:43:45.520 --> 01:43:52.520]  Второе утверждение говорит, что в остаточной сети нет увеличивающего пути.
[01:43:52.520 --> 01:43:55.520]  Ну понятно, что такое увеличивающий путь.
[01:43:55.520 --> 01:44:00.520]  То есть это путь по ненасыщенным ребрам в остаточной сети.
[01:44:00.520 --> 01:44:02.520]  То есть такого пути в остаточной сети нет.
[01:44:02.520 --> 01:44:17.520]  И третье утверждение, что существует разрез, для которого, то есть профестория способности которого равна величине этого потока.
[01:44:17.520 --> 01:44:27.520]  То есть на самом деле в полной версии теория звучит именно так.
[01:44:27.520 --> 01:44:38.520]  Вот, понятно?
[01:44:38.520 --> 01:44:41.520]  Вот, да нет, наверное?
[01:44:41.520 --> 01:44:42.520]  Вот.
[01:44:42.520 --> 01:44:43.520]  Ну а теперь вот.
[01:44:43.520 --> 01:44:46.520]  И остается только доказать эквивалент.
[01:44:46.520 --> 01:44:47.520]  Ну как доказывать?
[01:44:47.520 --> 01:44:50.520]  Ну из первого следует второе очевидно.
[01:44:50.520 --> 01:44:55.520]  Точнее наоборот, очевидно, что если увеличивающий путь есть, то поток не максимальный.
[01:44:55.520 --> 01:44:56.520]  Вот.
[01:44:56.520 --> 01:45:00.520]  То есть мы это просто практически на пальцах видели.
[01:45:00.520 --> 01:45:01.520]  Так.
[01:45:01.520 --> 01:45:03.520]  Ну и замечаем, что если величина...
[01:45:03.520 --> 01:45:11.520]  Ну с другой стороны, и стройки следует автоматически единица, потому что если мы уже достигли профестория способности какого-то разреза, то больше уже не будет.
[01:45:11.520 --> 01:45:16.520]  То есть в этом мы тоже только что уже убедились.
[01:45:16.520 --> 01:45:33.520]  Так что получается для окончания доказательства нам нужно доказать, что если увеличивающего пути нет, то тогда оказывается, что можно найти вот такой разрез.
[01:45:33.520 --> 01:45:37.520]  То есть вот что нам осталось сделать.
[01:45:37.520 --> 01:45:40.520]  Ну вот это достаточно легко сделать.
[01:45:40.520 --> 01:45:42.520]  Более того, попутно можно еще...
[01:45:42.520 --> 01:45:49.520]  То есть более того, это делается просто тем, что вы просто алгоритмически находите этот разрез.
[01:45:49.520 --> 01:45:51.520]  Вот.
[01:45:51.520 --> 01:46:00.520]  Я бы скорее доказывал, что из того, что наш поток меньше, чем минимальный, существует увеличивающий путь.
[01:46:00.520 --> 01:46:04.520]  Ну можно так, но кажется мне...
[01:46:04.520 --> 01:46:08.520]  По одной вершинке, по левую долю, по идее кажется должно быть.
[01:46:08.520 --> 01:46:15.520]  Можно пытаться добавлять, а можно сказать попроще.
[01:46:15.520 --> 01:46:18.520]  Ну вот, просто алгоритмически удобно просто сказать так.
[01:46:18.520 --> 01:46:20.520]  То есть доказательство такое.
[01:46:20.520 --> 01:46:26.520]  Пусть у нас есть остаточные сети в неувеличивых причине, то есть и в ней по ненулевым ребрам дойти до t нельзя.
[01:46:26.520 --> 01:46:34.520]  А давайте запустим DFS и найдем, до каких вершин дойти можно.
[01:46:34.520 --> 01:46:37.520]  Давайте и скажем, пусть доля S это вот докуда дойти можно.
[01:46:37.520 --> 01:46:42.520]  Вот любым просто DFS запустили и возрадовались.
[01:46:42.520 --> 01:46:44.520]  Тогда что получается?
[01:46:44.520 --> 01:46:46.520]  Да, t в нем не лежит.
[01:46:46.520 --> 01:46:48.520]  Ну понятно, да, t большое это дополнение S.
[01:46:48.520 --> 01:46:53.520]  Ну значит, понятно, т, то есть сток у нас естественно в доле t лежит.
[01:46:53.520 --> 01:47:01.520]  Но с другой стороны мы замечаем, что из S в t ведут только насыщенные ребра.
[01:47:01.520 --> 01:47:06.520]  Насыщенные в исходной сети или то же самое нулевые в остаточной сети.
[01:47:06.520 --> 01:47:17.520]  Но тогда по определению этого множества получается, что для любой пары вершин, первая из которых возрадовалась в t, оказывается, что f равно c.
[01:47:17.520 --> 01:47:25.520]  То есть следовательно, во-первых, S и t это корректный разрез.
[01:47:25.520 --> 01:47:34.520]  И при этом оказывается, что чистый поток через этот разрез равен пропускной способности этого разреза.
[01:47:34.520 --> 01:47:39.520]  Все, разрез найден, ура.
[01:47:39.520 --> 01:47:42.520]  Мы изначально утверждали, что там нет лечеб.
[01:47:42.520 --> 01:47:44.520]  Что-что?
[01:47:44.520 --> 01:47:46.520]  Мы пришли к противоречию, да?
[01:47:46.520 --> 01:47:48.520]  Нет, мы не пришли, нет.
[01:47:48.520 --> 01:47:56.520]  Мы здесь не шли никакому противоречию, потому что мы не делали ничего противного.
[01:47:56.520 --> 01:48:00.520]  Мы доказывали, что из второго пункта следует третий.
[01:48:00.520 --> 01:48:03.520]  То есть мы про максимальность вообще забыли.
[01:48:03.520 --> 01:48:06.520]  То есть мы говорим, пусть нет увеличивающих путей.
[01:48:06.520 --> 01:48:14.520]  Тогда мы взялись найти разрез, пропускная способность которого равна величине нашего потока.
[01:48:14.520 --> 01:48:16.520]  И мы ее нашли.
[01:48:17.520 --> 01:48:18.520]  Очень простой.
[01:48:18.520 --> 01:48:22.520]  Запустим DFS из истока по всем ненасыщенным ребрам.
[01:48:24.520 --> 01:48:27.520]  И сказали, что пусть это будет множество S.
[01:48:27.520 --> 01:48:29.520]  А t это все остальное.
[01:48:29.520 --> 01:48:30.520]  Это разрез.
[01:48:30.520 --> 01:48:31.520]  Почему?
[01:48:31.520 --> 01:48:36.520]  Потому что так как до истока дойти нельзя, это было предположение 2, то получается, что это разрез.
[01:48:36.520 --> 01:48:42.520]  Но с другой стороны, оказывается, что для всех ребер, ведущих из S в t,
[01:48:42.520 --> 01:48:48.520]  для всех таких паровершин, оказывается, что поток между ними равен пропускной способности в точности.
[01:48:48.520 --> 01:48:50.520]  Потому что они насыщенные?
[01:48:50.520 --> 01:48:52.520]  Да, потому что они насыщенные.
[01:48:52.520 --> 01:48:55.520]  Если они DFS по ненасыщенным шлейфам?
[01:48:55.520 --> 01:48:56.520]  Именно.
[01:48:56.520 --> 01:48:59.520]  А старшееся значит, что они насыщенные?
[01:48:59.520 --> 01:49:00.520]  Получается, да.
[01:49:00.520 --> 01:49:03.520]  Если ребро ведет из Ft, значит оно насыщенное.
[01:49:05.520 --> 01:49:08.520]  Тогда получается, что по всем таким ребрам F равно C.
[01:49:08.520 --> 01:49:13.520]  Но значит, тогда пропускная способность этого разреза, как сумма по всем таким ребрам,
[01:49:13.520 --> 01:49:17.520]  в точности равна сумме F по всем таким ребрам.
[01:49:17.520 --> 01:49:22.520]  А так как сумма всех таких ребер это модуль F, то получается радость.
[01:49:23.520 --> 01:49:25.520]  Как вы разделили S и t?
[01:49:25.520 --> 01:49:26.520]  Нет, еще раз.
[01:49:26.520 --> 01:49:27.520]  Так и разделили.
[01:49:27.520 --> 01:49:30.520]  Мы сказали, что S это до чего DFS дошло.
[01:49:30.520 --> 01:49:32.520]  T – все остальное.
[01:49:32.520 --> 01:49:33.520]  Все.
[01:49:38.520 --> 01:49:40.520]  Потому что он не дойдет до…
[01:49:40.520 --> 01:49:41.520]  Он не дойдет до T.
[01:49:41.520 --> 01:49:42.520]  Да.
[01:49:42.520 --> 01:49:43.520]  Потому что они насыщенные.
[01:49:43.520 --> 01:49:45.520]  Нет, нет, нет, нет.
[01:49:45.520 --> 01:49:48.520]  Да, он не дойдет до DFS, не дойдет до T.
[01:49:48.520 --> 01:49:51.520]  Потому что пункт 2 как раз то же самое говорит.
[01:49:51.520 --> 01:49:52.520]  Что такое увеличивающий путь?
[01:49:52.520 --> 01:49:54.520]  Это путь по ненасыщенным ребрам от S до T.
[01:49:54.520 --> 01:49:55.520]  Все.
[01:50:00.520 --> 01:50:04.520]  Так что оказалось, что пункт 2-3 тоже не сильно сложный, оказывается.
[01:50:05.520 --> 01:50:06.520]  Вот.
[01:50:06.520 --> 01:50:08.520]  И это, между прочим, очень сильно помогает.
[01:50:09.520 --> 01:50:10.520]  Вот.
[01:50:10.520 --> 01:50:11.520]  Потому что…
[01:50:11.520 --> 01:50:15.520]  То есть, вот этот пункт помнить очень важно.
[01:50:16.520 --> 01:50:20.520]  Потому что на самом деле, то есть если брать какое-нибудь там спортивное программирование,
[01:50:20.520 --> 01:50:23.520]  то там иногда встречаются задачи на потоке.
[01:50:25.520 --> 01:50:28.520]  Более того, иногда даже на финалах попадаются.
[01:50:28.520 --> 01:50:29.520]  Вот.
[01:50:29.520 --> 01:50:30.520]  Ну вот.
[01:50:30.520 --> 01:50:32.520]  И на самом деле эти задачи делятся…
[01:50:32.520 --> 01:50:33.520]  Да, можно разделить на…
[01:50:33.520 --> 01:50:37.520]  Ну то есть во всех этих задачах, да, задача сводится к тому, что надо построить сеть.
[01:50:37.520 --> 01:50:40.520]  Но теперь вопрос, а что в ней делать дальше?
[01:50:40.520 --> 01:50:41.520]  Так вот.
[01:50:41.520 --> 01:50:45.520]  Ну пока отбросим Минкос, но если задача на обычный поток, то у вас два…
[01:50:45.520 --> 01:50:48.520]  То на самом деле у задач бывает два варианта.
[01:50:48.520 --> 01:50:52.520]  Первая задача, то есть вам нужно найти, собственно, максимальный поток,
[01:50:52.520 --> 01:50:55.520]  и этот поток как-то проинтерпретировать.
[01:50:55.520 --> 01:51:00.520]  И второй тип задачи – это, где вам на самом деле нужно найти не максимальный поток,
[01:51:00.520 --> 01:51:01.520]  а только минимальный разрез.
[01:51:01.520 --> 01:51:04.520]  Именно это им проинтерпретировать.
[01:51:04.520 --> 01:51:05.520]  Вот.
[01:51:05.520 --> 01:51:10.520]  Нет, ну я сейчас просто приведу пример обоих подходов.
[01:51:10.520 --> 01:51:14.520]  Ну, самый простой подход, то есть по первому примеру,
[01:51:14.520 --> 01:51:19.520]  самый простой подход – это, конечно, там поиск просочетания в двудольном графе.
[01:51:21.520 --> 01:51:24.520]  Нет, ну давай сейчас вот уже.
[01:51:24.520 --> 01:51:25.520]  Да.
[01:51:25.520 --> 01:51:26.520]  Как это?
[01:51:27.520 --> 01:51:30.520]  Ну тут по-разному может быть, да.
[01:51:30.520 --> 01:51:34.520]  Потому что там… Ну сейчас я это просто покажу.
[01:51:34.520 --> 01:51:35.520]  Вот.
[01:51:35.520 --> 01:51:36.520]  То есть тут надо это оговорить.
[01:51:36.520 --> 01:51:39.520]  То есть, видимо, про просочетания мы в какой-то момент там,
[01:51:39.520 --> 01:51:42.520]  видимо, должны будем поговорить подробнее.
[01:51:42.520 --> 01:51:44.520]  Подробнее.
[01:51:44.520 --> 01:51:45.520]  Ну почему-то надо подумать.
[01:51:45.520 --> 01:51:47.520]  Можно, в принципе, сегодня.
[01:51:47.520 --> 01:51:48.520]  Так.
[01:51:48.520 --> 01:51:50.520]  А можно и не сегодня.
[01:51:50.520 --> 01:51:53.520]  Так.
[01:51:53.520 --> 01:51:56.520]  В общем, тут по-разному можно мыслить.
[01:51:56.520 --> 01:51:58.520]  Значит, смотрите.
[01:51:58.520 --> 01:52:00.520]  Но это тоже как бы важный момент.
[01:52:00.520 --> 01:52:04.520]  Ну как бы в чем у нас заключается поиск просочетания, да?
[01:52:04.520 --> 01:52:07.520]  Ну вообще у нас задача поиска просочетания звучит так.
[01:52:07.520 --> 01:52:14.520]  Дан неориентированный граф, найдите, пожалуйста, максимальное по количеству множество ребер,
[01:52:14.520 --> 01:52:20.520]  которые такие что, никакие два из них не имеют общего конца.
[01:52:20.520 --> 01:52:22.520]  Ну формальная произведение звучит так.
[01:52:22.520 --> 01:52:26.520]  И более того, такое определение не требует, чтобы граф был вообще двудольным, правда?
[01:52:26.520 --> 01:52:27.520]  Понятно.
[01:52:27.520 --> 01:52:30.520]  То есть более того, не знаю, мы тоже вряд ли до этого доживем,
[01:52:30.520 --> 01:52:37.520]  но теоретически есть там алгоритм ЗВЕ, который ищет просочетания даже в не двудольном графе.
[01:52:37.520 --> 01:52:40.520]  Там, кодовое слово сочетание сжатия соцветий.
[01:52:40.520 --> 01:52:42.520]  Вот.
[01:52:42.520 --> 01:52:46.520]  Но если мы говорим о двудольном графе,
[01:52:46.520 --> 01:52:51.520]  то есть допустим, вот у нас есть, как-то вот так мы обычно будем изображать две доли.
[01:52:52.520 --> 01:52:54.520]  То есть что такое двудольный граф?
[01:52:54.520 --> 01:53:00.520]  Когда у нас граф можно разбить на два множества, так шеребры соединяют только вершины разных долей.
[01:53:00.520 --> 01:53:05.520]  И вот у нас задача найти максимальное просочетание в таком графе.
[01:53:05.520 --> 01:53:08.520]  Как же это сделать?
[01:53:08.520 --> 01:53:10.520]  Ну, в левую долю.
[01:53:10.520 --> 01:53:11.520]  Ну да.
[01:53:11.520 --> 01:53:12.520]  В обстрепении m.
[01:53:12.520 --> 01:53:13.520]  Да.
[01:53:13.520 --> 01:53:14.520]  Чего два?
[01:53:14.520 --> 01:53:18.520]  А, ну можно, кроме того, что это можно сделать перебором, естественно, полным.
[01:53:18.520 --> 01:53:19.520]  Да.
[01:53:19.520 --> 01:53:21.520]  Но на самом деле делаем так.
[01:53:21.520 --> 01:53:23.520]  Построим из этого графа сеть.
[01:53:23.520 --> 01:53:25.520]  То есть все ребра, во-первых, ориентируем.
[01:53:25.520 --> 01:53:28.520]  И объявим, что они пропускной способности 1.
[01:53:31.520 --> 01:53:34.520]  Во-вторых, введем исток исток.
[01:53:34.520 --> 01:53:37.520]  Исток будет такой слева.
[01:53:37.520 --> 01:53:42.520]  И из него будут вести ребра всех вершин.
[01:53:42.520 --> 01:53:47.520]  Во всей вершине левой, внимание, левой доли.
[01:53:47.520 --> 01:53:49.520]  Понимаете, да?
[01:53:51.520 --> 01:53:52.520]  Вот.
[01:53:52.520 --> 01:53:54.520]  И есть доля t.
[01:54:01.520 --> 01:54:02.520]  Вот.
[01:54:02.520 --> 01:54:04.520]  И получается примерно следующее.
[01:54:04.520 --> 01:54:05.520]  Вот.
[01:54:05.520 --> 01:54:07.520]  И тут тоже единицы.
[01:54:07.520 --> 01:54:14.520]  Тогда я утверждаю, что задача поиска просочетания свойствует задачу поиска максимального потока в этом графе.
[01:54:15.520 --> 01:54:17.520]  Почему так?
[01:54:17.520 --> 01:54:20.520]  Да просто потому, что а как в этом графе вообще может выглядеть поток?
[01:54:20.520 --> 01:54:23.520]  Ну, если не вспоминать там какую-то остаточную сеть, да?
[01:54:25.520 --> 01:54:26.520]  Как оно может выглядеть?
[01:54:26.520 --> 01:54:27.520]  Да очень просто.
[01:54:27.520 --> 01:54:28.520]  Да единственным образом.
[01:54:28.520 --> 01:54:38.520]  Просто, то есть как бы все, то есть поток это набор вот таких вот путей, которые по вершинам, кроме SCT, не пересекаются и вообще состоят из трех ребер.
[01:54:38.520 --> 01:54:40.520]  Нет, по вершинам не пересекаются.
[01:54:40.520 --> 01:54:44.520]  Ну, по SCT они, смотрите, по SCT они могут пересекаться.
[01:54:44.520 --> 01:54:45.520]  Вот.
[01:54:45.520 --> 01:54:55.520]  Но при этом заметим, что, ну скажем так, если мы рассматриваем, ну во-первых, тут надо оговориться, что, конечно, максимальный поток, как мы говорили, не обязан быть целочисленным.
[01:54:55.520 --> 01:55:06.520]  Но с другой стороны, из сериала Муфорда Фолкерсона автоматически следует, что в целочисленной сети на самом деле существует максимальный целочисленный поток.
[01:55:07.520 --> 01:55:09.520]  Ну, просто потому что, давай.
[01:55:09.520 --> 01:55:10.520]  Разрез.
[01:55:10.520 --> 01:55:18.520]  Просто потому что, ну метод Фордов, нет, ну да, нет, из самого разреза будет следовать только, что его величина целая.
[01:55:18.520 --> 01:55:21.520]  Но не будет следовать, что он по всем ребрам течет целое число.
[01:55:21.520 --> 01:55:22.520]  Вот.
[01:55:22.520 --> 01:55:33.520]  Ну а как бы фишка будет в том, что на самом деле просто в целочисленной сети методом Форда Фолкерсона можно просто находить пути в остаточной сети и пускать по нему целочисленный поток.
[01:55:34.520 --> 01:55:37.520]  И более того, рано или поздно этот принцип реально закончится.
[01:55:39.520 --> 01:55:52.520]  Но более того, кстати, в этом графе, если вы будете таким образом искать поток, то есть просто честным ДФСом в остаточной сети искать потоки, то это сработает за время ООВЕ.
[01:55:54.520 --> 01:56:02.520]  Да, видите, я тут не случайно пишу профессиональную способность 1 специально для того, чтобы разные единицы потока не могли пройти по одному и тому же вот этому ребру.
[01:56:03.520 --> 01:56:04.520]  Понимаете, да?
[01:56:04.520 --> 01:56:07.520]  Ну скорее для того, чтобы мы не могли из одной вершины.
[01:56:07.520 --> 01:56:16.520]  Ну да, то есть это приведет к тому, что тогда получается, что если мы возьмем синие ребра, которые попали в поток, то окажется, что они образуют парасочетание.
[01:56:18.520 --> 01:56:26.520]  И более того, по любому парасочетанию поток такого вида можно легко построить, и более того, величина потока будет равна размеру парасочетания.
[01:56:27.520 --> 01:56:35.520]  Поэтому получается, что найти максимальное парасочетание в двудольном графе – это то же самое, что найти поток вот в такой сети.
[01:56:36.520 --> 01:56:37.520]  Понимаете, да?
[01:56:38.520 --> 01:56:43.520]  И более того, это будет работать за ООВЕ.
[01:56:43.520 --> 01:56:52.520]  Вот, ну можно так сразу выйти, да, кто-то скажет, что да, кто-то тут пишет кун и говорит, что кун.
[01:56:52.520 --> 01:56:54.520]  Что-то кун, кун, давайте куном все искать.
[01:56:54.520 --> 01:56:57.520]  Но кун работает ровно за такую синтетику.
[01:56:59.520 --> 01:57:02.520]  Да, но тут мы что-то понимаем, что формально мы не знаем, что такое алгоритм куна, да?
[01:57:02.520 --> 01:57:04.520]  Я не знаю, возможно, а кстати это и дело.
[01:57:04.520 --> 01:57:07.520]  Правда ли, что кун будет просто то же самое?
[01:57:07.520 --> 01:57:13.520]  Но я утверждаю, что кун – это на самом деле оптимизированная версия вот этого самого алгоритма.
[01:57:15.520 --> 01:57:27.520]  Причем более того, знаете, тут что интересно, сейчас у меня будет несколько математических и иллюстраций на эту тему, да, что обычно вот понятно, что многие из вас, конечно, изучали алгоритм куна до того, как познакомились с понятием поток, да?
[01:57:29.520 --> 01:57:30.520]  Ну есть такое подозрение, да?
[01:57:31.520 --> 01:57:37.520]  И тогда, но тогда у вас там могли быть какие-то проблемы с тем, чтобы доказать, что алгоритм куна вообще работает, да?
[01:57:39.520 --> 01:57:40.520]  А зачем это так? Мы не доказывали.
[01:57:41.520 --> 01:57:46.520]  Да ладно, вам просто сказали, что вот такие, так вот ищутся удлиняющие цепи, вот почему-то работает?
[01:57:47.520 --> 01:57:48.520]  Нет, у них проблемы были, кто доказывает.
[01:57:50.520 --> 01:57:51.520]  Нет, у нас там, ну как сказать, я не знаю.
[01:57:52.520 --> 01:57:53.520]  Ну тут кто как.
[01:57:54.520 --> 01:57:55.520]  Как бы да.
[01:57:56.520 --> 01:57:57.520]  В олипиадной школе обычно принято доказывать.
[01:57:57.520 --> 01:58:04.520]  Но правда там доказательства, но как обычно там может выглядеть какое-нибудь типичное доказательство того, что этот алгоритм работает, да?
[01:58:05.520 --> 01:58:13.520]  То есть там говорили, что, но там все сводилось к тому, что там рассмотрим ваши текущие просочетания и рассмотрим максимальные просочетания, да?
[01:58:14.520 --> 01:58:18.520]  Тогда у вас получится какой-то граф, у которого степень вершины не превосходит двух.
[01:58:19.520 --> 01:58:20.520]  Логично, да?
[01:58:21.520 --> 01:58:22.520]  Но если вы составили граф из двух просочетаний, да?
[01:58:23.520 --> 01:58:29.520]  И тогда как в графе со степенями вершин не более чем два выглядят компоненты связности?
[01:58:30.520 --> 01:58:34.520]  Это как бы либо такие цепочки, либо такие циклики, да?
[01:58:35.520 --> 01:58:36.520]  А там же мы к сору берем, просто читаем.
[01:58:37.520 --> 01:58:39.520]  Ну особенно если вы к сору возьмете, да?
[01:58:40.520 --> 01:58:45.520]  Ну к сору в смысле, что выкинем ребра, которые попали и туда и туда.
[01:58:46.520 --> 01:58:49.520]  Ну там дальше техник, которая нота.
[01:58:49.520 --> 01:58:50.520]  Зачем?
[01:58:51.520 --> 01:58:53.520]  Зачем у нас будет цикл где-то два?
[01:58:54.520 --> 01:58:56.520]  Ну по-разному.
[01:58:57.520 --> 01:58:59.520]  Ну так, чисто для удобства, не важно.
[01:59:00.520 --> 01:59:03.520]  Тогда у вас оказывается, что есть какие-то компоненты связности,
[01:59:04.520 --> 01:59:08.520]  и оказывается, что в циклах ребер обоих просочетаний одинаковое количество, очевидно.
[01:59:09.520 --> 01:59:11.520]  А вот в цепочках как повезет?
[01:59:12.520 --> 01:59:18.520]  То есть в цепочках может быть одинаковое количество ребер, может на одно больше у первого просочетания, может быть на одно больше у второго.
[01:59:19.520 --> 01:59:27.520]  Но так как максимальная типа больше вашего, то должна быть цепочка, у которой, значит, на одно ребро из максимального просочетания больше.
[01:59:28.520 --> 01:59:29.520]  Но оно, собственно, удлиняющей цепью оказывается.
[01:59:30.520 --> 01:59:32.520]  Это какое-то очерное доказательство, по-моему, нам сложнее рассказывать.
[01:59:33.520 --> 01:59:34.520]  Да?
[01:59:35.520 --> 01:59:36.520]  Нет, у тебя просто мозг начнет уже работать с тех пор.
[01:59:37.520 --> 01:59:38.520]  Может быть, может быть.
[01:59:39.520 --> 01:59:42.520]  Ой, ну нет, может, на самом деле просто, да, уже просто что-то удалось понять.
[01:59:42.520 --> 01:59:52.520]  У меня такое было, когда я как-то был так, вот на втором курсе, когда я изучал доказательства Терема Каши, там вот это вот, а существование единственности Дифура,
[01:59:53.520 --> 01:59:55.520]  на одной из ближайших лекций, видимо, будет доказательство.
[01:59:56.520 --> 01:59:57.520]  Доказательства?
[01:59:58.520 --> 01:59:59.520]  Нет, ну на лекциях доказательства будет.
[02:00:00.520 --> 02:00:05.520]  Ну, жалко, жалко.
[02:00:06.520 --> 02:00:07.520]  А жалко, это у нас просто все было.
[02:00:07.520 --> 02:00:13.520]  И там как бы было какое-то мощное доказательство, аж на 3-4 страницы учебника, какие-то действия.
[02:00:14.520 --> 02:00:15.520]  Я его даже выучил, я его вроде даже воспроизводил.
[02:00:16.520 --> 02:00:23.520]  Но потом, но потом через где-то прошел где-то год-полтора, я прочитал просто то же самое доказательство в учебнике по Функану.
[02:00:24.520 --> 02:00:30.520]  Оказалось, что с точки зрения, то есть если подняться выше просто в мыслях терминам метрических пространств и сжимающих отображений,
[02:00:31.520 --> 02:00:34.520]  то оказалось, что там просто доказательство на полстранический, оно там просто полуочевидное оказывается.
[02:00:34.520 --> 02:00:38.520]  А можете прислать?
[02:00:39.520 --> 02:00:42.520]  Ну, прислать не смогу, но просто у вас там будет просто...
[02:00:43.520 --> 02:00:48.520]  Нет, для этого мне нужно вспомнить учебник по Функану, но скорее всего вы просто на третьем курсе с этим столкнетесь.
[02:00:49.520 --> 02:00:59.520]  Нет, ну там просто суть в том, что я могу просто сказать, что там как бы теорема искала, то есть как бы диффурт как выглядит, как f, то есть как он там выглядит.
[02:00:59.520 --> 02:01:06.520]  f штрих равно там какая-то функция g от x f.
[02:01:10.520 --> 02:01:14.520]  Ну, где x это переменная, а f это типа функция, там какая-то такая.
[02:01:15.520 --> 02:01:23.520]  Вот, но там теорема звучала так что эквивалентно тому, что там f равно там, называется там, интеграл g от x f.
[02:01:24.520 --> 02:01:31.520]  Там по x равно, допустим, ну не важно, просто интеграл, короче.
[02:01:32.520 --> 02:01:35.520]  Вот, но если прям уточнить от x 0 до...
[02:01:37.520 --> 02:01:39.520]  Но там точнее так.
[02:01:40.520 --> 02:01:41.520]  Да, f от x 1, да.
[02:01:42.520 --> 02:01:44.520]  Да, мы неожиданно перешли к диффурам, да, я не знаю.
[02:01:45.520 --> 02:01:48.520]  Да, потому что я дапши-лектора, как всегда, понесло куда-то не туда, да.
[02:01:49.520 --> 02:01:50.520]  Ну, что делать?
[02:01:51.520 --> 02:01:54.520]  Это вас недавно удивляет, вроде как не первый семестр работает.
[02:01:55.520 --> 02:02:01.520]  Ну вот, то есть там можно по идее вот так вот сказать, просто это какая-то такая функция.
[02:02:02.520 --> 02:02:11.520]  То есть получается, что на самом деле можно сказать, что давайте, то есть можно сказать, что давайте, что пусть у нас f от f присвоить вот этот вот интеграл, да.
[02:02:12.520 --> 02:02:16.520]  То есть это как бы типа функционал такой, да, то есть такое отображение.
[02:02:16.520 --> 02:02:27.520]  И там просто доказывается, что при каких-то там условиях, там этих липшиц, там по-моему, или какие-то еще там умные слова, там в какой-то окрестности, оказывается, что это преобразование в некотором смысле сжимаемое.
[02:02:29.520 --> 02:02:39.520]  То есть условно говоря, там можно потому что между функциями ввести там какое-то расстояние, выясняется, что он меньше единицы, и тогда из этого будет следовать, что там существует неподвижная точка.
[02:02:40.520 --> 02:02:41.520]  Это и есть решение диффура.
[02:02:41.520 --> 02:02:46.520]  Там отдельная песня, как доказывать единственность, но это там уже другая история.
[02:02:47.520 --> 02:02:57.520]  Это как мы в лямбдах функцию доказывали, типа то, что существует, ну вот этот Y комбинатор, то, что рекурсивно можно функцию тут давать.
[02:02:58.520 --> 02:02:59.520]  Да, вы так доказывали, да?
[02:03:00.520 --> 02:03:05.520]  Ну мы доказывали, типа рекурсивно можно давать функцию, потому что есть Y комбинатор, который находится в неподвижную точку.
[02:03:06.520 --> 02:03:09.520]  А дальше неподвижной точкой как раз будет рекурсивно заданная даша.
[02:03:09.520 --> 02:03:11.520]  А, ну наверное, да.
[02:03:12.520 --> 02:03:15.520]  Ну да, ну а что делать, идеи могут и в других местах возникнуть.
[02:03:16.520 --> 02:03:18.520]  Ну да, ну наверное, ладно, так.
[02:03:19.520 --> 02:03:20.520]  Это мы все обсудим.
[02:03:21.520 --> 02:03:23.520]  Так, окей, ладно, все, по диффуру и поговорили.
[02:03:24.520 --> 02:03:29.520]  Ну, хорошая вещь, наверное, это я не знаю.
[02:03:32.520 --> 02:03:33.520]  Да, но это уже другое.
[02:03:34.520 --> 02:03:38.520]  Тем более, что мусимантика есть преимущество, то есть я не могу ее анонсировать, потому что она у вас уже была.
[02:03:39.520 --> 02:03:41.520]  Вы уже по ней экзамен сдали, все.
[02:03:42.520 --> 02:03:43.520]  Ну не все.
[02:03:44.520 --> 02:03:45.520]  Мы все знаем мусимантику.
[02:03:46.520 --> 02:03:47.520]  Да, наверное, да.
[02:03:48.520 --> 02:03:49.520]  Так вот, так, тихо, тихо.
[02:03:50.520 --> 02:03:51.520]  Так, что там опять за шум пошел?
[02:03:52.520 --> 02:03:54.520]  Значит, смотрите, вернемся к куну.
[02:03:55.520 --> 02:04:03.520]  Ну с куном, да, то есть там доказательства, то есть это была иллюстрация, да, к чему мы вышли на диффуре, это иллюстрация того, что там какие-то доказательства со временем могут казаться более простыми.
[02:04:04.520 --> 02:04:05.520]  Потому что могут, ну вот.
[02:04:06.520 --> 02:04:14.520]  Но на самом деле вот интересно, что на самом деле надо просто, то есть чтобы доказать алгоритм куна, то есть правильнее просто этот алгоритм куна просто из этого вывести.
[02:04:16.520 --> 02:04:19.520]  Потому что по большому счету давайте думать, как выглядит, ну вот.
[02:04:20.520 --> 02:04:26.520]  Потому что в принципе можно за ОАТВ просто запустить стандартный метод фотофокерсона, то есть искать вот эти вот пути от СТ ДФС.
[02:04:27.520 --> 02:04:36.520]  Но теперь давайте внимательно подумаем, а что такое вообще поиск вот этой, как тут выглядит вообще остаточная сеть, короче?
[02:04:37.520 --> 02:04:38.520]  Как она тут выглядит?
[02:04:39.520 --> 02:04:40.520]  Очень просто.
[02:04:41.520 --> 02:04:45.520]  То есть вот допустим у нас, вот мы нашли случайно вот такого рода просочетания, да.
[02:04:46.520 --> 02:04:49.520]  Вот такое, например, вот такое.
[02:04:52.520 --> 02:04:54.520]  Ну вот и давайте еще какую-нибудь рыбку возьмем.
[02:04:54.520 --> 02:04:55.520]  Вот такое давайте.
[02:04:56.520 --> 02:04:57.520]  Тогда остаточная сеть выглядит вот таким образом.
[02:04:58.520 --> 02:05:07.520]  То есть ребра, то есть у нас как бы ребра, то есть ребра из просочетания у нас как бы теперь смотрят справа налево, все остальные слева направо, правда?
[02:05:08.520 --> 02:05:11.520]  А теперь вопрос, как нам теперь дойти от СДТ?
[02:05:14.520 --> 02:05:22.520]  Но чтобы дойти до СДТ надо выйти из С, то есть пройти по ребру, которая как бы с просочетанием не связана, то есть вот по какому-то вот такому ребру, да.
[02:05:23.520 --> 02:05:28.520]  Дальше пройти по какому-то ребру, не из просочетания вправо,
[02:05:29.520 --> 02:05:36.520]  вернуться по ребру из просочетания налево, то есть опять пройти вправо по ребру, не из просочетания,
[02:05:37.520 --> 02:05:40.520]  пройти по ребру из просочетания направо, несколько раз так туда, сюда сделать
[02:05:41.520 --> 02:05:45.520]  и в конце концов дойти до вершины, которая не связана с просочетанием, или что то же самое,
[02:05:46.520 --> 02:05:49.520]  то есть из нее есть вот это красное ребро прямо в сток.
[02:05:49.520 --> 02:05:59.440]  прямо в сток. И вот удлиняющий путь, как мы бы его называли в терминах остаточной сети. А в терминах
[02:05:59.440 --> 02:06:05.240]  просочетания это называется удлиняющая цепь. Что такое удлиняющая цепь? Это как раз путь вот такого
[02:06:05.240 --> 02:06:12.680]  вида, который начинается в вершине левой доли, не покрытой просочетанием. Идет по ребрам так,
[02:06:12.680 --> 02:06:18.560]  что ребра не из просочетания, а чередуются с ребрами просочетания. Заметим, что мы придумали
[02:06:18.560 --> 02:06:24.680]  алгоритм Куна. Ну вот, и заканчиваем. Почти не совсем. Не совсем. То есть по факту теперь... Нет,
[02:06:24.680 --> 02:06:30.560]  это еще не совсем алгоритм Куна. Потому что пока алгоритм... То есть это нам предлагает делать так.
[02:06:30.560 --> 02:06:35.080]  То есть, во-первых, давайте удалим СТ и будем говорить, что мы будем искать не путь из СПТ,
[02:06:35.080 --> 02:06:41.920]  а как бы мы будем пытаться запускать ДФС из всех вершин левой доли, не покрытыми просочетанием.
[02:06:41.920 --> 02:06:47.600]  И при этом будем считать, что все ребра не из просочетания ориентированы вправо,
[02:06:47.600 --> 02:06:53.800]  ребра из просочетания ориентированы влево. И наша задача найти вершину правой доли,
[02:06:53.800 --> 02:07:00.320]  не покрытой просочетанием этим ДФС. Вот. Это фактически... То есть мы алгоритм
[02:07:00.320 --> 02:07:08.040]  пока идейно не поменяли, но поменяли чуть-чуть его реализация. То есть следующий шаг, это как
[02:07:08.040 --> 02:07:12.600]  нам понимать вообще... То есть следующий шаг будет там говорить, как нам понимать для вершин левой
[02:07:12.600 --> 02:07:20.880]  и правой доли, покрыта она просочетанием или нет. Но оказывается такая удобная идея, что удобно... То
[02:07:20.880 --> 02:07:25.440]  есть вообще, как нам удобно разворачивать ребра. Потому что по дефолту это будет означать, что,
[02:07:25.440 --> 02:07:29.980]  хотя мы хотим развернуть ребро, мы его должны в явном виде выпилить из списка смежности, а вместо
[02:07:29.980 --> 02:07:36.480]  него там отсюда в список смежности добавить и обратное. Но на самом деле следующая оптимизация,
[02:07:36.480 --> 02:07:43.880]  что как минимум для вершин правой доли, этого делать не нужно. А что нужно делать? Просто надо
[02:07:43.880 --> 02:07:50.880]  для вершины правой доли, то есть как бы если у нас вот эта вершина, вот эта доля L, а доля R,
[02:07:50.880 --> 02:07:59.360]  то тогда нам нужно ввести для... То есть ввести вот эти вершины от одного до модуляр. То есть
[02:07:59.920 --> 02:08:06.600]  где R – это напарник в левой доле. То есть как бы с кем я связан в просочетании в левой доле.
[02:08:06.600 --> 02:08:13.880]  То есть это как бы... То есть как бы вот либо этот напарник, то есть либо он может быть еще
[02:08:13.880 --> 02:08:23.360]  минус один, если такого напарника нет. И тогда DFS можно немножко сократить. То есть DFS тогда
[02:08:23.360 --> 02:08:28.840]  можно сократить, когда оно говорит, что мы пришли вот в эту вершину и говорим так, что если в этой
[02:08:28.840 --> 02:08:35.080]  вершины минус один, вот где-то здесь, то мы победили, мы нашли удлиняющую цепь. А если не минус один,
[02:08:35.080 --> 02:08:39.560]  то единственное, куда дальше может пойти DFS – это по вот этому напарнику, то есть в ПР. То есть
[02:08:39.560 --> 02:08:45.240]  мы DFS сразу от ПРшки запускаем. То есть отсюда в Кунии возникает вот эта вот замечательная штука
[02:08:45.240 --> 02:09:01.840]  и в ПР от В равно минус один или DFS от ПР от В. Сейчас. То есть, ну короче говоря, еще раз,
[02:09:01.840 --> 02:09:09.000]  мы говорим, что мы хотим найти путь от цепи из С в Т. Ну да. Мы говорим, что он как-то идет туда,
[02:09:09.000 --> 02:09:17.800]  потом путешествует между ними, между ними и идет, соответственно, потом в Т. А дальше, чтобы
[02:09:17.800 --> 02:09:26.560]  путешествовать, да, чтобы идти направо, это должно быть еще не взятая ребро, да? Не обязательно. Не,
[02:09:26.560 --> 02:09:31.320]  как угодно. На самом деле заметим, что специально разворачивать ребро не надо, потому что DFS,
[02:09:31.320 --> 02:09:34.600]  ну давайте вспомним. Да, я тут, конечно, может немножко рассчитывал, что вы все помните,
[02:09:34.600 --> 02:09:44.120]  как бы как пишется Кун. Ну вот. Ну я, значит, сейчас. Ну, смотрите, DFS, из него стандартная
[02:09:44.120 --> 02:09:54.920]  реализация обычно звучит так. Use a tattoo равно 1. Значит, for сейчас. Ну, давай ты сейчас попытайся
[02:09:54.920 --> 02:10:00.160]  еще чуть-чуть понять 30 секунд, а я тут код все-таки напишу, чтобы мы тут предметно
[02:10:00.160 --> 02:10:12.760]  разговаривали. For. Там, значит, для всех ребер там УВ. Если оказывается, что не. Если оказывается,
[02:10:12.760 --> 02:10:21.080]  что. А нет, неправильно. Вот тут оказывается, да. В стандартной реализации тут еще удобнее
[02:10:21.080 --> 02:10:30.440]  писать так, что если не. То есть если оказалось, что use a tattoo, то мы просто сразу выбрасываемся с
[02:10:30.440 --> 02:10:44.120]  криком false. И только после этого пишем там use a tattoo равно 1. Значит, и тут for от УВ. Значит,
[02:10:44.120 --> 02:10:54.000]  Е. Значит, оказывается, что если пр от В меньше нуля или DFS от пр от В. Это просто очень
[02:10:54.000 --> 02:10:58.560]  удобно. Смотрите, то есть могло так случиться, что вы прошли, что на самом деле вершина УВ уже
[02:10:58.560 --> 02:11:06.080]  в пресочетании находится. И более того, вы по этому ребру в пресочетании и прошли. То тогда этот
[02:11:06.080 --> 02:11:12.280]  DFS просто вернет вас в себя же и вы тут же выброситесь. Поэтому тут как бы лишних символов писать не надо.
[02:11:12.280 --> 02:11:18.840]  То есть поэтому если DFS, то тогда оказывается, что желательно это пресочетание переписать. Но
[02:11:18.840 --> 02:11:24.240]  как бы если вы тут вот так шли-шли-шли, не надо просто из всех этих вершин пр перебросить на туда,
[02:11:24.240 --> 02:11:36.520]  куда вы прошли. Поэтому дальше тут пишется, что пр от В равно У теперь и return true. То есть
[02:11:36.520 --> 02:11:41.720]  стандартный DFS в куне. А, ну и в конце, конечно, return false. То есть если вы там раньше не
[02:11:41.720 --> 02:11:47.880]  выбросились, значит нам не повезло. То есть вот стандартный DFS в куне выглядит ровно таким
[02:11:47.880 --> 02:11:57.080]  образом. То есть на самом деле это действительно очень красиво выглядит. То есть единственное,
[02:11:57.080 --> 02:12:02.920]  то есть что можно оказывается удлиняющие цепи искать так, если вы гарантируете,
[02:12:02.920 --> 02:12:08.760]  что вы там в мейне где-то или там в основном алгоритме DFS запускаете только из вершин,
[02:12:08.760 --> 02:12:18.840]  которые пресочетаниями не покрыты. Но это еще не алгоритм куна. Потому что в реальности,
[02:12:18.840 --> 02:12:31.320]  да, потому что на самом деле, ну вот, потому что как бы по дефолту мы пока пришли к следующему
[02:12:31.320 --> 02:12:39.120]  алгоритму. Так, как у нас там пресочетания будет? А, find matching. Потому что найти пресочетания
[02:12:39.120 --> 02:12:46.280]  обычно звучит так. То есть как-то там. Ладно, давайте пусть он возвращает хотя бы размер этого
[02:12:46.280 --> 02:12:58.280]  пресочетания. То есть пока этот алгоритм может быть написан так. ans равно 0. Так while true. Значит
[02:12:58.280 --> 02:13:12.680]  мы говорим, значит bool там, я не знаю, из ok равно false. Значит перебираем все вершины в левой доле,
[02:13:12.680 --> 02:13:25.920]  там for вот так вот у и говорим, что если не у in matching, то есть если пока вершина у не в
[02:13:25.920 --> 02:13:39.880]  matching, то значит мы можем написать так, что значит если оказалось, что то нет оговорка,
[02:13:39.880 --> 02:13:49.920]  то значит придется запускать dfs. То есть пишем, значит там условно говоря user.assign там на модуль
[02:13:49.920 --> 02:14:04.200]  l там 0. То есть если dfs atu, то что мы тут делаем? Plus plus ans там соответственно и там из ok
[02:14:04.200 --> 02:14:10.400]  равно true. И в принципе, ну тут как угодно, можно брякнуться, можно не брякнуться, неважно.
[02:14:10.400 --> 02:14:25.160]  Ну разумеется. Вот, ну и тут в конце return ans. То есть видите, то есть на самом деле это не
[02:14:25.160 --> 02:14:39.680]  совсем кунг. То есть в таком виде, кстати, алгоритм еще и может наверное, но он да,
[02:14:39.680 --> 02:14:52.920]  он формально может не за we работать даже. Где брек? Где брек? Ни одного брека нет.
[02:14:52.920 --> 02:15:01.600]  Не, если я тут брек напишу, он будет брек на for. Ну ладно, правильно. Ну можно как угодно,
[02:15:01.600 --> 02:15:08.520]  можно там, можно так написать bool из ok равно true и дальше написать while из ok,
[02:15:08.520 --> 02:15:18.280]  значит пишем из ok равно false и бла-бла-бла. Вот теперь хорошо будет. Вот, ну как, значит как
[02:15:18.280 --> 02:15:25.240]  тут вернуть we? Но на самом деле нет, вернуть we на самом деле несложно. Потому что на самом
[02:15:25.240 --> 02:15:42.960]  деле просто зачищать юзет на самом деле надо не здесь, а вот здесь. Почему это? Нет, не совсем,
[02:15:42.960 --> 02:15:52.480]  смотрите. Нет, в чем проблема? То есть заметим, что если мы юзет запустили только так, то заметим,
[02:15:52.480 --> 02:15:58.080]  что мы на самом деле, то есть эти DFS на самом деле по каждой вершине проходят не более одного раза,
[02:15:58.080 --> 02:16:02.480]  и получается, что суммарно они на каждой итерации работают за e. Не, юзды-то можно вообще не
[02:16:02.480 --> 02:16:07.200]  достигнуть, потому что есть же метода. Нет, ну почему? Нет, на самом деле я правильно говорю так,
[02:16:07.200 --> 02:16:11.520]  как только вы нашли, то есть пока вы не, если вы запустили DFS и не нашли удлиняющую цепь,
[02:16:11.520 --> 02:16:16.480]  то вы можете запуститься от другой вершины, не стирая старые юзды, потому что по старым вершинам
[02:16:16.480 --> 02:16:22.400]  ходить бессмысленно. Но как только вы удлиняющую цепь нашли, тогда юзды придется зачистить,
[02:16:22.400 --> 02:16:35.040]  потому что граф изменился, потому что граф изменился. А, ну в том плане да, что нет,
[02:16:35.040 --> 02:16:39.040]  то это не да. Ну то есть есть, конечно, момент, что юзды можно там сделать технологию, которая
[02:16:39.040 --> 02:16:44.160]  зачищает юзды за от единицы, но на самом деле это бы сильно не помогло, потому что,
[02:16:44.160 --> 02:16:49.120]  если вы каждый раз здесь зачищаете юзды, то как бы сам DFS, каждый DFS будет отдельно работать за
[02:16:49.120 --> 02:16:56.080]  от e, а не все, а так мы можем сказать, что на каждой итерации вайла все DFS будут работать за от e
[02:16:56.080 --> 02:17:14.080]  суммарно. Тут в этом дело. Ну почему? При такой реализации этого не будет происходить,
[02:17:14.080 --> 02:17:18.640]  потому что если вершина однажды помечена DFS, то второй раз он просто войдет в вершину и скажет,
[02:17:18.640 --> 02:17:26.400]  ой, она помечена и до свидания сразу. А потом мы ее обнулим. Да, но мы ее обнулим на следующей
[02:17:26.400 --> 02:17:32.840]  итерации вайла. А итераторе вайла у нас V раз, да? Да, и таким образом. В квадрат E. Нет,
[02:17:32.840 --> 02:17:38.600]  никаких V квадрат E. Почему? Смотрите, у нас не более чем, ну то есть у нас итерация не более
[02:17:38.600 --> 02:17:46.880]  чем E на размер просочетания. Кстати, вот в реальности-то. Ну потому что на каждой итерации,
[02:17:46.880 --> 02:17:57.560]  кроме может быть последней, хотя бы одна удлиняющая цепь найдена будет. Вот, одна найдена будет.
[02:17:57.560 --> 02:18:04.960]  Но внутри одного и внутри одного вайла суммарно все эти DFS работают за V плюс E. Суммарно,
[02:18:04.960 --> 02:18:10.480]  не каждый DFS работает за V плюс E, а все вместе они внутри одного фора работают за V плюс E.
[02:18:10.480 --> 02:18:22.760]  Она говорит, проходимся по всем вершинам левой доли. И если вершина не в просочетании,
[02:18:22.760 --> 02:18:29.480]  то мы пытаемся из нее найти удлиняющую цепь, DFS запуская. Если получилось, то значит,
[02:18:29.480 --> 02:18:36.000]  мы говорим, что размер просочетания увеличился на один. Нет, юзды мы здесь не обнуляем,
[02:18:36.000 --> 02:18:41.280]  потому что, то есть мы могли бы просто брякнуться на самом деле. Но в принципе,
[02:18:41.280 --> 02:18:47.560]  можно еще оставшиеся DFS запускать, чтобы на той же итерации еще просочетания увеличить.
[02:18:47.560 --> 02:18:57.680]  Если у нас граф типа из двух вершин ведет ребра в одну. И что? Мы сначала возьмем пару. Ну,
[02:18:57.680 --> 02:19:04.920]  можете нарисовать. Ну и что? Мы сначала возьмем первое ребро, потом возьмем второе,
[02:19:04.920 --> 02:19:09.360]  потом пытаемся взять второе, но ничего в итоге не увеличим. Не увеличим, так и должно быть.
[02:19:09.360 --> 02:19:16.880]  Да, мы придем сюда. Сделаем лишний итерации. Кажется, это должно влиять на время выполнения.
[02:19:16.880 --> 02:19:21.360]  Да нет, а симпатически это ни на что не влияет. Если два, то окей, но если у нас такая длинная цепочка.
[02:19:21.360 --> 02:19:32.400]  Нет, смысл длинная. Я имею ввиду, вот у нас вот так идет длинный путь туда-сюда, а в конце у
[02:19:32.400 --> 02:19:43.080]  нас куча ребер входит в последнюю вершину. Сейчас, ну я не знаю. Вот, а в самую последнюю
[02:19:43.080 --> 02:19:52.080]  вершину входит просто куча ребер. Вот в эту? Да. И что? Да, только, ну смотри, ну максимум,
[02:19:52.080 --> 02:19:59.120]  чтобы, не будем. Потому что, смотри, первая итерация ДФСа, допустим, попытается тут прогуляться по
[02:19:59.120 --> 02:20:05.120]  всем этим вершинам, попытается что-то найти и ничего не найдет, но она все эти вершины пометит,
[02:20:05.120 --> 02:20:09.760]  потому что следующий трансвыгрывает так, говорит, я должен пойти сюда, прэшка отправляет меня сюда,
[02:20:09.760 --> 02:20:17.280]  а эта вершина уже с юзидом, поэтому мы просто за 1 из нее выбросимся, и больше она никуда не
[02:20:17.280 --> 02:20:26.440]  пойдет, поэтому до свидания сразу. Ну то есть нет, это такой лайфхак, что у нас такой отложенный юзид,
[02:20:26.440 --> 02:20:30.680]  то есть вместо того, чтобы пометить сразу эту вершину юзидом, как в обычном ДФСе, мы говорим,
[02:20:30.680 --> 02:20:37.360]  что да, то есть у нее единственный напарник, но этот напарник пометен юзидом. Так что нет,
[02:20:37.360 --> 02:20:45.320]  никаких проблем здесь нет. То есть вот есть алгоритм, он все еще работает за WE, даже работает
[02:20:45.320 --> 02:20:52.960]  не за WE, а за размер просочетания плюс один на E на самом деле он работает, но это не совсем
[02:20:52.960 --> 02:21:00.440]  кун, потому что есть подозрение, что вас учили куну, наверное, в более простой версии этого кода,
[02:21:00.760 --> 02:21:14.160]  потому что обычно стандартный кун все-таки пишется по-другому. Он пишется так, то есть
[02:21:14.160 --> 02:21:20.280]  перебираем тупо один раз все вершины левой доли и говорим, значит, зачищаем юзид.
[02:21:20.280 --> 02:21:38.400]  Нет, как только граф изменился, зачищать надо. Пока он не поменялся, зачищать не надо. Вот,
[02:21:38.400 --> 02:21:43.840]  но сейчас мы и поговорим на эту тему. То есть дефолтная версия, поэтому зачищаем, что там,
[02:21:43.840 --> 02:21:56.920]  если там повезло DFS от U, то значит плюс плюс ans. Вот и все. То есть обычно куну пишут все-таки вот так.
[02:21:56.920 --> 02:22:11.640]  Вот, но правда этот алгоритм в честную работает за WE, а не за размер просочетания на E. Но на самом
[02:22:11.640 --> 02:22:17.280]  деле его легко сделать, то есть эту версию легко сделать и за размер просочетания на E следующим
[02:22:17.280 --> 02:22:31.760]  образом. Не, не совсем. Не-не-не-не-не. Нам главное, чтобы... Да, юзид assign, значит, модуль L0, то есть
[02:22:31.760 --> 02:22:40.080]  зачищаем здесь, здесь не зачищаем, а вот зачищаем, когда DFS что-то нашел. То есть принцип такой, что если
[02:22:40.080 --> 02:22:46.960]  DFS ничего не нашел, то имеет смысл сохранить пометки вершин, по которым он прошел. Почему? Да,
[02:22:46.960 --> 02:22:51.760]  правда, но да просто потому, что пока граф не поменяется из этих вершин, ходить куда-то бессмысленно.
[02:22:51.760 --> 02:23:04.240]  Вот. Соответственно, паранот. То есть это и цикл. Если мы ничего не нашли, то соответственно и не
[02:23:04.240 --> 02:23:20.320]  судьба. Вот. Так что вот такая вот получается красота. Вот. Значит, паранот. Но, к сожалению,
[02:23:20.320 --> 02:23:26.680]  как бы у этого алгоритма есть пока большое преимущество по сравнению с Куном. Преимущество
[02:23:26.680 --> 02:23:31.800]  заключает в том, что этот алгоритм... Да, этот алгоритм доказатель... Теперь мы уже знаем,
[02:23:31.800 --> 02:23:37.960]  что он доказательно правильный. А вот с этим, к сожалению, есть одна маленькая подлянка.
[02:23:37.960 --> 02:23:48.120]  Принципиальная разница. Потому что, смотрите, здесь мы на каждой итерации из всех вершин
[02:23:48.120 --> 02:23:55.760]  неисправосочетания запускаем DFS. А здесь мы просто из каждой вершины один раз запускаем DFS,
[02:23:55.760 --> 02:24:01.760]  получилось-получилось, не получилось. До свидания. То есть мы как-то почему-то верим,
[02:24:01.760 --> 02:24:06.160]  что мы если из какой-то вершины левой доли запустили поиск удлиняющей цепи, ее не нашли,
[02:24:06.160 --> 02:24:17.360]  то мы почему-то свято верим, что больше не найдется никогда. Нет, может найти, но этой
[02:24:17.360 --> 02:24:25.280]  эквивалентом там может найдется из какой-то новой вершины. Почему это? Нет. По индукции доказываем,
[02:24:25.280 --> 02:24:31.280]  что каждый раз у нас максимальная просторность. А, ну можно и так. Мы просто верим, что да,
[02:24:31.280 --> 02:24:37.040]  если на... То есть можем пытаться что-то... Или как-то еще пытаться, и факт остается фактом.
[02:24:37.040 --> 02:24:41.200]  В общем, доказательств тут пока особо нет. В принципе, пока вы не вводите потока,
[02:24:41.200 --> 02:24:45.320]  на самом деле получается одно из самых сложных, по-моему, едва ли не самое сложное место в
[02:24:45.320 --> 02:24:50.720]  доказательствах, кстати. Потому что как-то доказывать на уровне удлиняющих цепей вот этих,
[02:24:50.720 --> 02:25:01.080]  вот там на пальчиках. Нет, когда вы добавили, но с другой стороны, а кто... Но тогда вам просто
[02:25:01.080 --> 02:25:05.680]  надо доказывать, что на к... Мы по индукции доказываем, что на к отритерации у нас максимальная
[02:25:05.680 --> 02:25:12.560]  по рассчитанию на префикс есть к вершину. А, ну да, то есть тогда надо просто аккуратно
[02:25:12.560 --> 02:25:16.960]  поговорить, что если вы добавили вершину со всеми ребрами по рассочетанию, увеличилась на один,
[02:25:16.960 --> 02:25:29.400]  то обязательно... Ну окей, хорошо. Ну, можно доказывать и так, но мы докажем по-другому,
[02:25:29.400 --> 02:25:35.360]  потому что как бы... У нас какая цель? У нас как бы... То есть, знаете, мы сейчас пытаемся
[02:25:35.360 --> 02:25:38.240]  продемонстрировать, что вся эта теория про рассочетание, это просто простое следствие
[02:25:38.240 --> 02:25:40.340]  теории Форда Фолкерсона, на самом деле.
[02:26:08.240 --> 02:26:24.960]  Вот, нет, но на самом деле мы сейчас это докажем в более крутый способ. Раз уж мы пришли из теории
[02:26:24.960 --> 02:26:29.600]  потоков, то я сейчас просто докажу одно маленькое утверждение из теории потоков,
[02:26:29.600 --> 02:26:36.480]  с которого это напрямую следует. Такое более общее. Звучать оно будет следующим образом.
[02:26:37.040 --> 02:26:48.240]  Давайте, временно забыли о просочетаниях. Значит, временно забыли о просочетаниях. И делаем мы вот что.
[02:26:48.240 --> 02:27:02.480]  Значит, представим себе... Итак, мистическая лемма. На теорию не тянет, а утверждение тоже как-то
[02:27:02.480 --> 02:27:21.880]  слабо. Значит, лемма. Пусть у нас g это сеть, в которой мы ищем поток методом Форда Фолкерсона.
[02:27:21.880 --> 02:27:38.920]  Наверное, надо было следующий слайд включить. Это я называю методом Форда Фолкерсона. Изначально
[02:27:38.920 --> 02:27:44.240]  обнуляем просто сеть. То есть, говорим, что у нас потока пока вообще нет. Пока в остаточной сети
[02:27:44.240 --> 02:27:50.920]  есть путь из st, я подразумеваю путь по ненасыщенным рогам, естественно, то мы вдоль этого пути
[02:27:50.920 --> 02:27:56.840]  пропускаем поток максимально возможной величины, который по этому пути проталкивается сейчас.
[02:27:56.840 --> 02:28:05.280]  Понятно, да? То есть, внимание, это метод, это не алгоритм. Почему это не алгоритм? Потому что никак
[02:28:05.280 --> 02:28:17.600]  не сказано, каким конкретным образом мы ищем этот путь. Если мы, скажем, ищем фс, то это внезапно
[02:28:17.600 --> 02:28:23.560]  станет алгоритмом. Но если я скажу, что мы ищем жестко dfs, то да, это уже алгоритм. Или если я скажу,
[02:28:23.560 --> 02:28:29.480]  ищем этот bfs, то это станет именным алгоритмом. То есть, это будет называться алгоритмом Эдмонса Карпа.
[02:28:29.480 --> 02:28:42.400]  Вот. Если я скажу ОМД, это другой вопрос. Это я называю методом Форда Фолкерсона,
[02:28:42.400 --> 02:28:48.880]  значит, у нас будет вот с вами такая терминология. Итак, ищем поток методом Форда Фолкерсона.
[02:28:48.880 --> 02:29:16.040]  Пусть, значит, я сформулирую так. Пусть перед какой-то итерацией из некоторой вершины В
[02:29:19.600 --> 02:29:33.600]  нельзя, ну я так, давайте неформально уже так сформулирую, нельзя дойти до t, ну в смысле в gf,
[02:29:33.600 --> 02:29:44.320]  там gfqr, я так скажу, по ненасыщенным ребрам. Ну я пишу fqr, потому что типа вот у меня, значит,
[02:29:44.320 --> 02:29:51.560]  я тут делаю сколько-то итераций, после каждой итерации у меня в сети g течет какой-то поток,
[02:29:51.560 --> 02:29:57.440]  пока, естественно, не максимальный. Итак, пусть перед какой-то итерацией выяснилось,
[02:29:57.440 --> 02:30:10.560]  что я из какой-то вершины В, оказывается, до t дойти не могу. Да, внимание, то есть,
[02:30:10.560 --> 02:30:16.920]  заметим, сеть не обязательно единичная, то есть сеть может быть какая угодно. Тогда после этой
[02:30:16.920 --> 02:30:41.840]  итерации, итерации, пути из этой вершины В в t по ненасыщенным ребрам, по ненасыщеным ребрам,
[02:30:41.840 --> 02:30:57.800]  появиться не могло, заявляю я. То есть, на самом деле, видите, то есть, если у вас вот вы сделали
[02:30:57.800 --> 02:31:02.600]  сколько-то итераций, обнаружили, что из вершины В, то вы уже не доберетесь. Тогда утверждается,
[02:31:02.600 --> 02:31:07.600]  что вы больше никогда до нее не доберетесь, можете ее просто там в ней какой-нибудь там супервечный
[02:31:07.600 --> 02:31:19.200]  юзит на нее повесить. То есть, если мы сейчас докажем такую лему, то из нее тогда уже
[02:31:19.200 --> 02:31:27.800]  правильность алгоритма Куна следует сама собой. Понимаете, да? Ну, потому что если мы запустим
[02:31:27.800 --> 02:31:33.360]  DFS из какой-то вершины, если из нее удлиняющая цель была найдена, то мы больше из нее DFS запускать
[02:31:33.360 --> 02:31:38.600]  не будем, потому что эта вершина войдет в просочетание. Но если мы запустили из нее DFS и
[02:31:38.600 --> 02:31:46.040]  удлиняющей цепи не нашли, то тогда, получается, больше никогда и не найдем, потому что, как мы
[02:31:46.040 --> 02:31:52.240]  помним, по большому счету то, что мы делаем, это просто метод Форда Фолкерсона. Просто мы там это
[02:31:52.240 --> 02:31:56.560]  чуть-чуть оптимизировали, но если бы мы делали вот в исходной вере вот это вот с этой вот этой
[02:31:56.560 --> 02:32:02.520]  всей радостью с зелеными и красными ребрами, то тогда получается, что если из этой вершины путь до
[02:32:02.520 --> 02:32:07.080]  Т не нашелся удлиняющая цепь, значит больше никогда не найдется, можно из нее DFS не запускать.
[02:32:07.080 --> 02:32:15.720]  Понятно, да? То есть, получается, да. То есть, на самом деле свели задачу к более серьезной. То
[02:32:15.720 --> 02:32:24.840]  есть, оказывается, это просто более серьезный факт. Но теперь внимание, вопрос. А почему же этот факт
[02:32:24.840 --> 02:32:33.060]  вообще верен? Почему так? Ведь, казалось бы, в результате каждой итерации Форда Фолкерсона у нас
[02:32:33.060 --> 02:32:41.840]  могут появляться новые ненасыщенные ребра. Логично, да? Потому что каждый раз, когда вы
[02:32:41.840 --> 02:32:47.360]  пропускаете поток по какому-то ребру, то у обратного ему ребра появляется какая-то
[02:32:47.360 --> 02:32:56.560]  ненулевая пропускная способность, остаточная, правда? Ну, если она и была ненулевой, то она останется
[02:32:56.560 --> 02:33:01.040]  ненулевой, просто она станет больше. Но могло и появиться. Но, как бы, когда появляются новые
[02:33:01.040 --> 02:33:17.880]  ребра, наверное, путь может и появиться. Но, оказывается, нет. Или вам это в ДЗ задачку дать.
[02:33:17.880 --> 02:33:24.840]  Не, ладно, не буду. Значит, смотрите. То есть, доказательство здесь выглядит очень просто.
[02:33:24.840 --> 02:33:39.400]  Смотрите как. Допустим, после этой итерации путь в Т неожиданно появился. Вот он, да? Тогда,
[02:33:39.400 --> 02:33:45.600]  смотрите какая ситуация. Перед этой итерации этого пути не было. Что это означает? Значит,
[02:33:45.600 --> 02:33:55.720]  какие-то ребра только что появились. А это означает, что перед этой итерации были какие-то
[02:33:55.720 --> 02:34:02.880]  вот такие ребра, по которым вот этот путь проходил. Вот их тут несколько таких ребер. И получается,
[02:34:02.880 --> 02:34:09.040]  имел место какой-то путь из С в Т, который как-то ходил-ходил-ходил-ходил-ходил,
[02:34:09.040 --> 02:34:15.480]  прошел по этому ребру, ходил-ходил-ходил-ходил-ходил, прошел по этому ребру, ходил-ходил-ходил-ходил-ходил-ходил,
[02:34:15.480 --> 02:34:24.760]  пришел в Т. Да, порядок ребер вообще может быть не таким, естественно. А теперь резко появился.
[02:34:24.760 --> 02:34:32.920]  Ну, потому что что такое итерация? Мы нашли какой-то путь из С в Т и пропустили по нему поток.
[02:34:32.920 --> 02:34:39.680]  Вы взяли все ребра, а почему они в обратном? Нет, смотри, потому что после этой итерации из С в Т
[02:34:39.680 --> 02:34:47.520]  неожиданно появился путь. Значит, посмотри, перед итерации пути не было, после итерации путь
[02:34:47.520 --> 02:34:53.560]  появился. Это означает, что каких-то ребер на этом пути не было. То есть, какие-то были насыщенные,
[02:34:53.560 --> 02:35:02.160]  стали не насыщенные. Ну да. А как насыщенное ребро могло стать не насыщенным? То есть,
[02:35:02.240 --> 02:35:07.760]  могло быть только по одному, что мы по обратному ребру протолкнули поток на предыдущей итерации.
[02:35:07.760 --> 02:35:13.880]  То есть, на предыдущей итерации был вот такой путь, который проходил вот по таким ребрам. А теперь
[02:35:13.880 --> 02:35:30.800]  давайте пойдем из вершины В по вот этому пути. То есть, теперь давайте думать. Все ребра этого пути
[02:35:30.800 --> 02:35:36.920]  существовали перед итерацией. Доходим до первого ребра, до вот этой первой красненькой вершины.
[02:35:36.920 --> 02:35:44.880]  Нет, хочется дойти не до первой. До первой. Потому что, смотрите, до сюда мы как бы дойти и так и так
[02:35:44.880 --> 02:35:50.320]  можем. Но по этому отрезочку пути мы можем прогуляться как после итерации, так и перед
[02:35:50.320 --> 02:35:57.440]  итерацией мы могли, потому что все эти ребра перед итерацией были. Вот. Но теперь заметим,
[02:35:57.440 --> 02:36:02.200]  что перед итерацией мы могли из вершины В пойти по этой части пути, а из этой вершины
[02:36:02.200 --> 02:36:07.920]  пройти по вот этому остатку красного пути в Т. Значит, получается, что мы просто в явном виде
[02:36:07.920 --> 02:36:20.000]  построили путь из В в Т перед этой итерацией противоречия. Нет, красный это путь вот этой
[02:36:20.000 --> 02:36:29.920]  итерации. Вот давайте, вот это какой-то итерации я буду выделять красненьким. Потому что тем я
[02:36:29.920 --> 02:36:44.240]  почетру, что красный путь это путь, вдоль которого был протолкнут, проталкнут, пропущен поток в
[02:36:44.240 --> 02:36:54.840]  результате этой итерации. Какой синий ребро? Нет, это В и Т это не ребро, это путь. То есть путь у нас
[02:36:54.840 --> 02:37:02.600]  после итерации В и Т был путь. Тогда какие-то из этих ребр только появились только что, хотя бы
[02:37:02.600 --> 02:37:12.440]  одно ребро-то появилось только что. Мы, допустим, нашли путь, в котором был протолкнут из вершины В и Т. Да, после итерации.
[02:37:12.440 --> 02:37:18.320]  Но тогда какие-то из этих ребер, какие-то ребер были, работали и перед итерацией, какие-то работали,
[02:37:18.320 --> 02:37:25.400]  появились только после. Вот, но тогда давайте идем по этому пути до первого ребра, которое появилось
[02:37:25.400 --> 02:37:30.600]  после. Да, но выяснилось, что из этой вершины, так как она лежала на этом пути итерации,
[02:37:30.600 --> 02:37:40.600]  значит получается перед итерацией мы могли из этой вершины по вот этому пути дойти до Т. А что если до этой вершины было удаленное ребро?
[02:37:40.600 --> 02:37:49.080]  Не было, потому что тот алгоритм говорит, дойдем до первого такого ребра. Первого в смысле на пути от В и Т.
[02:37:49.080 --> 02:37:56.920]  Первого какого? Ну, смотрите, вот от В и Т есть ребра. Первый, второй, третий, четвертый, пятый и так далее. Давайте дойдем до первого
[02:37:57.000 --> 02:38:03.400]  ребра, который... То есть будем идти до первого ребра, которое перед итерацией не существовало.
[02:38:03.400 --> 02:38:14.400]  Это ребра, которые у нас уже заложены в наше просочетание. Какое просочетание? Так, мы влеме забыли о просочетании.
[02:38:14.400 --> 02:38:24.400]  Сейчас синие ребра это просто какие-то ребра к графику, верно? Нет, то скажи так, это какие-то ребра, которые образуют путь, который появился после итерации.
[02:38:24.880 --> 02:38:37.880]  То есть этот путь синий, это путь после итерации, который как бы у нас появился? Да. То есть мы раньше не могли до этой итерации построить синий путь? Да. А после смогли? Да.
[02:38:41.880 --> 02:38:49.880]  Или после он у нас появился? Нет, после, ну да, но это означает, что если до не могли, а после смогли, значит до его не было, а после он был.
[02:38:50.360 --> 02:38:53.360]  Ну, в смысле? А после он резко появился.
[02:38:55.360 --> 02:39:00.360]  Да. Раньше у нас не было возможности, а теперь у нас появилась возможность на не факт, что мы её реализовали.
[02:39:00.360 --> 02:39:02.360]  Чёрт, ну это...
[02:39:02.360 --> 02:39:04.360]  Философская рассуждение.
[02:39:04.360 --> 02:39:15.360]  Нет, не совсем. У нас предположение было, что из вершины В перед какой-то итерацией, перед, нельзя было вообще найти из ВФТ, то есть вообще никакого пути по ненасыщенным ребрам не было.
[02:39:15.840 --> 02:39:20.840]  И мы пытаемся доказать, что после этой итерации тоже такой возможности не появится.
[02:39:20.840 --> 02:39:26.840]  Всё, схема, да. То есть дальше схема говорит, что после этой итерации, допустим, после какой-то такой путь появился.
[02:39:26.840 --> 02:39:29.840]  Короче говоря, если ты был безнадёжный, то ты останешься безнадёжным.
[02:39:32.840 --> 02:39:34.840]  Ну, можно так сказать, наверное.
[02:39:34.840 --> 02:39:36.840]  Миша, позитивная мысль.
[02:39:37.840 --> 02:39:44.840]  Не, ну а что? Не, ну какая-то позитивность в этом есть, потому что это как бы позволяет вам с хорошим настроением не тратить куда-то энергию.
[02:39:45.840 --> 02:39:52.840]  Другой вопрос, что проблема, что это надо ещё сильно поверить, что вы в чём-то безнадёжны, а на самом деле чаще всего это не так.
[02:39:52.840 --> 02:39:54.840]  Это будет обнадёжность в безнадёжности.
[02:39:55.840 --> 02:40:00.840]  Да, ну я не знаю. Нет, просто где-то это может превратиться в выученную беспомощность на самом деле.
[02:40:00.840 --> 02:40:06.840]  А это бывает иногда просто психологически, там просто симптом психологической проблемы иногда на самом деле.
[02:40:06.840 --> 02:40:09.840]  Можно ещё раз, у нас в СССР не было, и он появился.
[02:40:10.320 --> 02:40:16.320]  Так, у Кости был вопрос в другом, чего говоришь?
[02:40:17.320 --> 02:40:25.320]  Нет, противоречие заключается в том, что мы доказали, что перед этой итерацией оказалось, что путь из ВФТ всё-таки существовал.
[02:40:25.320 --> 02:40:27.320]  Да, не конкретно этот, но существовал.
[02:40:29.320 --> 02:40:30.320]  А, очень просто.
[02:40:30.320 --> 02:40:33.320]  Рассмотрим путь из ВФТ, который появился.
[02:40:33.800 --> 02:40:44.800]  Тогда на этом пути какие-то ребра перед этой итерацией существовали, то есть были ненасыщенными, а какие-то были насыщенными, но разносытились в результате итерации.
[02:40:44.800 --> 02:40:51.800]  Тогда идём по этому пути, по ненасыщенным ребрам, до первого ребра, которое разносытилось.
[02:40:53.800 --> 02:40:55.800]  Но тогда как оно разносытилось?
[02:40:56.280 --> 02:40:57.280]  Что такое итерация?
[02:40:57.280 --> 02:41:06.280]  Итерация Форда Фолкерсона – это когда мы нашли из СФТ какой-то путь по ненасыщенным ребрам и пропустили по нему поток.
[02:41:06.280 --> 02:41:10.280]  И оказывается, по этому ребру такой поток прошёл.
[02:41:12.280 --> 02:41:14.280]  Но тогда что это означает?
[02:41:14.280 --> 02:41:21.280]  Это означает, что из этой вершины перед этой итерацией был путь в Т, по ненасыщенным ребрам.
[02:41:21.760 --> 02:41:31.760]  Это означает, что мы из В до этой вершины могли дойти перед итерацией и из этой вершины до Т тоже могли дойти.
[02:41:31.760 --> 02:41:33.760]  Значит, могли дойти до Т.
[02:41:35.760 --> 02:41:37.760]  Вот такая, на самом деле, красота.
[02:41:37.760 --> 02:41:45.760]  Логичным образом можно, кстати, доказать, что если вы из устока до какой-то вершины В дойти не можете в процессе Форда Фолкерсона в какой-то момент,
[02:41:45.760 --> 02:41:48.760]  то и дальше вы до него не дойдёте, можете не заморачиваться.
[02:41:49.240 --> 02:41:51.240]  Вот, понятна логика, да?
[02:41:53.240 --> 02:41:55.240]  То есть это, на самом деле, такая полезная лемма.
[02:41:55.240 --> 02:41:57.240]  То есть тоже так её полезно помнить.
[02:41:57.240 --> 02:42:01.240]  Но из неё автоматически следует кунчик.
[02:42:01.240 --> 02:42:03.240]  Вот, понятно, да?
[02:42:06.240 --> 02:42:07.240]  Вот.
[02:42:07.240 --> 02:42:09.240]  Более того, такой...
[02:42:09.240 --> 02:42:11.240]  Что?
[02:42:11.720 --> 02:42:13.720]  В кончике мы идём...
[02:42:13.720 --> 02:42:15.720]  В кончике мы...
[02:42:17.720 --> 02:42:23.720]  Мы ищем путь только по префиксу или вообще по всем вершинам второй доли?
[02:42:23.720 --> 02:42:25.720]  По всем вершинам.
[02:42:25.720 --> 02:42:31.720]  Нет, мы запускаем ДФС из всех вершин второй доли каждый по одному раз.
[02:42:31.720 --> 02:42:33.720]  По факту мы ищем на префиксе,
[02:42:34.200 --> 02:42:40.200]  потому что ДФС может войти в вершину левой доли
[02:42:40.200 --> 02:42:43.200]  только при группе сочетания или стартовав из неё.
[02:42:43.200 --> 02:42:48.200]  Поэтому по факту ДФС из пятой вершины левой доли может пройти только по первым четырём.
[02:42:48.200 --> 02:42:50.200]  Я имею в виду, что геопитетическая ситуация...
[02:42:50.200 --> 02:42:52.200]  Сейчас.
[02:42:52.200 --> 02:42:54.200]  Если мы...
[02:42:54.200 --> 02:42:56.200]  Нет, по идее мы по всем должны искать,
[02:42:56.200 --> 02:42:58.200]  потому что...
[02:42:58.200 --> 02:43:00.200]  Нет, то есть в левой долю?
[02:43:00.200 --> 02:43:02.200]  Нет, но вот, допустим, у нас был граф,
[02:43:02.680 --> 02:43:06.680]  и с первой вершины во вторую идёт ребро.
[02:43:06.680 --> 02:43:08.680]  Ну и что?
[02:43:08.680 --> 02:43:10.680]  И всё.
[02:43:10.680 --> 02:43:12.680]  Тогда на первой террации, если мы берём только первую вершину, из неё нет пути в Т,
[02:43:12.680 --> 02:43:14.680]  тогда мы добавили ещё вторую вершину,
[02:43:14.680 --> 02:43:18.680]  появился путь в Т через вот это ребро 1,2.
[02:43:18.680 --> 02:43:20.680]  Как это?
[02:43:20.680 --> 02:43:22.680]  Нет, при этом на префи...
[02:43:22.680 --> 02:43:24.680]  То есть можно сказать так,
[02:43:24.680 --> 02:43:28.680]  после 10 терраций куна вы найдёте максимальное просочетание,
[02:43:28.680 --> 02:43:31.680]  если в левой доле оставить только первые 10 вершин.
[02:43:32.160 --> 02:43:34.160]  А в правой все остаются?
[02:43:34.160 --> 02:43:36.160]  В правой, естественно, все остаются, да.
[02:43:36.160 --> 02:43:38.160]  Ну тогда, кстати, тогда не так очевидно,
[02:43:38.160 --> 02:43:40.160]  почему работает по индукции доказательства.
[02:43:40.160 --> 02:43:42.160]  А вот так.
[02:43:42.160 --> 02:43:44.160]  А вот поэтому я тут какие-то сложные леммы доказываю.
[02:43:46.160 --> 02:43:48.160]  Поэтому я и доказываю, что если...
[02:43:48.160 --> 02:43:50.160]  Потому что основное, что нам надо в этом куне доказать,
[02:43:50.160 --> 02:43:52.160]  то есть, в принципе, достаточно доказать следующее,
[02:43:52.160 --> 02:43:54.160]  что если ты запустил ДФС из какой-то вершины левой доли
[02:43:54.160 --> 02:43:56.160]  и удлиняющей цепи не нашёл,
[02:43:56.160 --> 02:43:58.160]  то кун в этом месте гордо заявляет,
[02:43:58.160 --> 02:44:00.160]  что больше она никогда и не найдётся.
[02:44:02.160 --> 02:44:04.160]  И доказательства на самом деле сводятся
[02:44:04.160 --> 02:44:06.160]  к вот этой лемме.
[02:44:08.160 --> 02:44:10.160]  То есть нет, можно там
[02:44:10.160 --> 02:44:12.160]  как бы на языке удлиняющих цепей
[02:44:12.160 --> 02:44:14.160]  аккуратно доказать, что если в будущем удлиняющая
[02:44:14.160 --> 02:44:16.160]  цепь найдётся, то она и тут была,
[02:44:16.160 --> 02:44:18.160]  но соответственно.
[02:44:22.160 --> 02:44:24.160]  Так, есть ли тут ещё по
[02:44:24.160 --> 02:44:26.160]  вот этой весёлой части вопрос?
[02:44:28.160 --> 02:44:30.160]  А мы говорим там, что синие ребра – это насыщенные ребра?
[02:44:30.640 --> 02:44:32.640]  Не, наоборот, ненасыщенные.
[02:44:34.640 --> 02:44:36.640]  Это ребра, которые оказались ненасыщенными
[02:44:36.640 --> 02:44:38.640]  после итерации.
[02:44:40.640 --> 02:44:42.640]  Да, вот тут, конечно, надо не запутаться, соответственно,
[02:44:42.640 --> 02:44:44.640]  кто тут насыщенный, кто тут нет.
[02:44:45.120 --> 02:44:47.120]  Вот.
[02:44:47.120 --> 02:44:49.120]  А правда ли, что мы, вот мы нашли
[02:44:49.120 --> 02:44:51.120]  какой-то путь из ВФТ в Куне
[02:44:51.120 --> 02:44:53.120]  и насытили его?
[02:44:53.120 --> 02:44:55.120]  Может, у нас остался ещё какой-то путь?
[02:44:57.120 --> 02:44:59.120]  Наверное, такое не могло быть, да?
[02:44:59.120 --> 02:45:01.120]  Сейчас, если мы из ВФТ,
[02:45:01.120 --> 02:45:03.120]  чего ещё равно?
[02:45:03.120 --> 02:45:05.120]  Нет, то мог быть какой-то другой путь, а какая нам разница?
[02:45:05.120 --> 02:45:07.120]  Тогда не сработает эта лемма,
[02:45:07.120 --> 02:45:09.120]  потому что мы после того,
[02:45:09.120 --> 02:45:11.120]  как насытили путь из ВФТ,
[02:45:11.120 --> 02:45:13.120]  у нас нет ситуации,
[02:45:13.600 --> 02:45:15.600]  что вот это вот...
[02:45:15.600 --> 02:45:17.600]  Нет, пароди, мы про Куна говорим, или вообще про лемму?
[02:45:17.600 --> 02:45:19.600]  Но лемма окей.
[02:45:19.600 --> 02:45:21.600]  Нет, в Куне,
[02:45:21.600 --> 02:45:23.600]  если мы нашли удлиняющую цепь,
[02:45:23.600 --> 02:45:25.600]  то эта вершина с этого момента
[02:45:25.600 --> 02:45:27.600]  вошла в просочетание.
[02:45:27.600 --> 02:45:29.600]  Этим это важно.
[02:45:29.600 --> 02:45:31.600]  Но путь из неё мог остаться.
[02:45:31.600 --> 02:45:33.600]  Да, но будущие ДФС, это будут через неё проходить
[02:45:33.600 --> 02:45:35.600]  вполне себе, если надо.
[02:45:35.600 --> 02:45:37.600]  Поэтому там никаких проблем нет.
[02:45:43.120 --> 02:45:45.120]  Ну, то есть, да.
[02:45:45.120 --> 02:45:47.120]  Если сейчас путь есть,
[02:45:47.120 --> 02:45:49.120]  то в будущих итерациях
[02:45:49.120 --> 02:45:51.120]  какие-то другие пути могут
[02:45:51.120 --> 02:45:53.120]  существовать.
[02:45:53.120 --> 02:45:55.120]  Скажем так, я просто не вижу,
[02:45:55.120 --> 02:45:57.120]  почему отсюда напрямую свернут Кунь?
[02:45:57.120 --> 02:45:59.120]  Ну, почему?
[02:45:59.120 --> 02:46:01.120]  Потому что мы говорим так,
[02:46:01.120 --> 02:46:03.120]  потому что Кунь говорит так,
[02:46:03.120 --> 02:46:05.120]  что запускаем,
[02:46:05.120 --> 02:46:07.120]  а мы не запускаем,
[02:46:07.120 --> 02:46:09.120]  а мы не запускаем,
[02:46:09.120 --> 02:46:11.120]  а мы не запускаем.
[02:46:11.120 --> 02:46:13.120]  Так что, потому что Кунь говорит так,
[02:46:13.120 --> 02:46:15.120]  что запускаем ДФС в вершины
[02:46:15.120 --> 02:46:17.120]  каждой левой доли.
[02:46:17.120 --> 02:46:19.120]  Если запустили не сработал,
[02:46:19.120 --> 02:46:21.120]  значит, из неё никогда ничего не будет.
[02:46:21.120 --> 02:46:23.120]  Если не сработал,
[02:46:23.120 --> 02:46:25.120]  это значит, что не было пути, да?
[02:46:25.120 --> 02:46:27.120]  Да, не было пути,
[02:46:27.120 --> 02:46:29.120]  а значит, никогда и не будет.
[02:46:29.120 --> 02:46:31.120]  А если сработал, то из неё
[02:46:31.120 --> 02:46:33.120]  ДФС мы больше никогда запускать не будем,
[02:46:33.120 --> 02:46:35.120]  потому что она в просочетании.
[02:46:35.120 --> 02:46:37.120]  Мы же запускаем ДФС,
[02:46:37.120 --> 02:46:39.120]  исходный ДФС запускаем,
[02:46:39.120 --> 02:46:41.120]  только из вершин левой доли не из просочетания.
[02:46:41.120 --> 02:46:43.120]  И должны дойти
[02:46:43.120 --> 02:46:45.120]  до какой-то вершины правой доли
[02:46:45.120 --> 02:46:47.120]  тоже не из просочетания.
[02:46:47.120 --> 02:46:49.120]  Вот, поэтому
[02:46:49.120 --> 02:46:51.120]  как бы да. То есть сработало ОК,
[02:46:51.120 --> 02:46:53.120]  не сработало, значит, никогда не будет.
[02:46:53.120 --> 02:46:55.120]  Так что вот получилось.
[02:46:55.120 --> 02:46:57.120]  Так что вот так работает Кунь
[02:46:57.120 --> 02:46:59.120]  за симпточку, даже не за ВЭДИ,
[02:46:59.120 --> 02:47:01.120]  а за ОАТ.
[02:47:01.120 --> 02:47:03.120]  Там, соответственно,
[02:47:03.120 --> 02:47:05.120]  анс плюс один
[02:47:05.120 --> 02:47:07.120]  на Е.
[02:47:07.120 --> 02:47:09.120]  Вот.
[02:47:09.120 --> 02:47:11.120]  Так что вот такой вот красота.
[02:47:11.120 --> 02:47:13.120]  Но правда, чтобы сделать
[02:47:13.120 --> 02:47:15.120]  не ВЭДИ, а вот размер просочетания
[02:47:15.120 --> 02:47:17.120]  плюс один на Е, то как бы надо
[02:47:17.120 --> 02:47:19.120]  правильно зачищать.
[02:47:19.120 --> 02:47:21.120]  То есть ещё раз говорю, напоминаю,
[02:47:21.120 --> 02:47:23.120]  что если запустили ДФС и не нашли удлиняющую цепь,
[02:47:23.120 --> 02:47:25.120]  то зачищать юзит не нужно.
[02:47:25.120 --> 02:47:27.120]  Потому что пока граф не поменялся,
[02:47:27.120 --> 02:47:29.120]  у вас просто сохранятся пометки,
[02:47:29.120 --> 02:47:31.120]  что туда ходить не надо,
[02:47:31.120 --> 02:47:33.120]  потому что только шоу ходили и не надо.
[02:47:33.120 --> 02:47:35.120]  Так, но это вот такой типичный пример
[02:47:35.120 --> 02:47:37.120]  просочетания,
[02:47:37.120 --> 02:47:39.120]  это задача, о которой вы
[02:47:39.120 --> 02:47:41.120]  свели к задачу поиска потока,
[02:47:41.120 --> 02:47:43.120]  и вам интересен именно поток.
[02:47:45.120 --> 02:47:47.120]  Потому что в принципе есть такие
[02:47:47.120 --> 02:47:49.120]  более сложные задачи.
[02:47:49.120 --> 02:47:51.120]  Есть вот такая задача,
[02:47:51.120 --> 02:47:53.120]  которая может быть не очевидной, хотя вряд ли.
[02:47:53.120 --> 02:47:55.120]  Задача про кубики.
[02:47:55.120 --> 02:47:57.120]  Не та задача про кубики,
[02:47:57.120 --> 02:47:59.120]  где привидение какое-то,
[02:47:59.120 --> 02:48:01.120]  любят играть во что-то,
[02:48:01.120 --> 02:48:03.120]  зеркало поставили.
[02:48:03.120 --> 02:48:05.120]  Эту мы тоже будем обсуждать,
[02:48:05.120 --> 02:48:07.120]  но очевидно в другое время.
[02:48:11.120 --> 02:48:13.120]  Господи, какие хэшы?
[02:48:13.120 --> 02:48:15.120]  Это префикс функции.
[02:48:15.120 --> 02:48:17.120]  Я знал весь контест стириусов,
[02:48:17.120 --> 02:48:19.120]  которые нужно было использовать,
[02:48:19.120 --> 02:48:21.120]  все эти Z функции.
[02:48:21.120 --> 02:48:23.120]  Да понятно, что так можно делать.
[02:48:23.120 --> 02:48:25.120]  Скажем так,
[02:48:25.120 --> 02:48:27.120]  у меня было три периода в жизни
[02:48:27.120 --> 02:48:29.120]  по поводу строчек.
[02:48:29.120 --> 02:48:31.120]  Первый, я принципиально не любил хэши
[02:48:31.120 --> 02:48:33.120]  и старался решать только честными методами.
[02:48:33.120 --> 02:48:35.120]  В какой-то момент на каком-то
[02:48:35.120 --> 02:48:37.120]  МИП-топане я наткнулся
[02:48:37.120 --> 02:48:39.120]  на задачу, которая принципиально не
[02:48:39.120 --> 02:48:41.120]  хэшами решалась.
[02:48:41.120 --> 02:48:43.120]  Или там что, с жуткими уконенными
[02:48:43.120 --> 02:48:45.120]  какими-то.
[02:48:45.120 --> 02:48:47.120]  После этого я наоборот, я прям полюбил хэши
[02:48:47.120 --> 02:48:49.120]  и стал просто их упихивать везде.
[02:48:49.120 --> 02:48:51.120]  Но кончилось тем,
[02:48:51.120 --> 02:48:53.120]  что там была какая-то задача, где дана
[02:48:53.120 --> 02:48:55.120]  строчка на миллион, и там нужно было решать
[02:48:55.120 --> 02:48:57.120]  хэшами бинпоиском за N лог N или префикс функции за N.
[02:48:57.120 --> 02:48:59.120]  Хэши и бинпоиск затейлились.
[02:48:59.120 --> 02:49:01.120]  После этого я перестал так
[02:49:01.120 --> 02:49:03.120]  любить хэши.
[02:49:03.120 --> 02:49:05.120]  Вот.
[02:49:07.120 --> 02:49:09.120]  Чего?
[02:49:09.120 --> 02:49:11.120]  Чего хэши и сувмасс?
[02:49:11.120 --> 02:49:13.120]  Хэши через сувмасс.
[02:49:13.120 --> 02:49:15.120]  Мы вспоминаем вот таковый
[02:49:15.120 --> 02:49:17.120]  построитель сувмасса.
[02:49:17.120 --> 02:49:19.120]  А?
[02:49:21.120 --> 02:49:23.120]  Не, ну да, да, да.
[02:49:23.120 --> 02:49:25.120]  Не, ну да.
[02:49:25.120 --> 02:49:27.120]  Если у вас хэши сводится только к тому,
[02:49:27.120 --> 02:49:29.120]  чтобы сравнить две строки, равны ли они,
[02:49:29.120 --> 02:49:31.120]  то да.
[02:49:31.120 --> 02:49:33.120]  Но после этого надо написать сувмасс,
[02:49:33.120 --> 02:49:35.120]  на нем нужно написать спарсы, и в эти спарсы еще лазить.
[02:49:35.120 --> 02:49:37.120]  А нет, надо написать сувмасс,
[02:49:37.120 --> 02:49:39.120]  потом нужно по сувмассу написать
[02:49:39.120 --> 02:49:41.120]  лцпшки,
[02:49:41.120 --> 02:49:43.120]  на этих лцпшках написать спарстейбл.
[02:49:47.120 --> 02:49:49.120]  А,
[02:49:49.120 --> 02:49:51.120]  ну да.
[02:49:53.120 --> 02:49:55.120]  Нет, на самом деле
[02:49:55.120 --> 02:49:57.120]  ну можно.
[02:49:57.120 --> 02:49:59.120]  Не, ну да, можно, но это
[02:49:59.120 --> 02:50:01.120]  если уровень, это подразумевает, что вы реально
[02:50:01.120 --> 02:50:03.120]  сувмасс за НЛОГН строите.
[02:50:03.120 --> 02:50:05.120]  А если вы там построите другим алгоритмом
[02:50:05.120 --> 02:50:07.120]  за ОАТН, ну такой, какой типичный
[02:50:07.120 --> 02:50:09.120]  алгоритм построения сувмасса за ОАТН?
[02:50:09.120 --> 02:50:11.120]  СОИС, конечно.
[02:50:11.120 --> 02:50:13.120]  СОИС, конечно.
[02:50:13.120 --> 02:50:15.120]  Да, боже упаси, господи. Нет, самый стандартный алгоритм
[02:50:15.120 --> 02:50:17.120]  это строим украниным
[02:50:17.120 --> 02:50:19.120]  суффиксное дерево и запускаем
[02:50:19.120 --> 02:50:21.120]  ДФС. Там вы еще
[02:50:21.120 --> 02:50:23.120]  лцпшки за бесплатно найдете.
[02:50:23.120 --> 02:50:25.120]  Это размер алфавита?
[02:50:25.120 --> 02:50:27.120]  Ну,
[02:50:27.120 --> 02:50:29.120]  будет там
[02:50:29.120 --> 02:50:31.120]  Н на лог алфавита.
[02:50:31.120 --> 02:50:33.120]  В подавляющей большинстве случаев лфит константный.
[02:50:33.120 --> 02:50:35.120]  Нет, оно, конечно, да, если у вас там
[02:50:35.120 --> 02:50:37.120]  лфит и камешки, то алгоритм за НЛОГН
[02:50:37.120 --> 02:50:39.120]  оптимальный, это да. То есть быстрее
[02:50:39.120 --> 02:50:41.120]  не бывает.
[02:50:41.120 --> 02:50:43.120]  У нас будет субдерево?
[02:50:43.120 --> 02:50:45.120]  А, как же. Нет, субдерево не автоматно.
[02:50:45.120 --> 02:50:47.120]  Ну, конечно.
[02:50:47.120 --> 02:50:49.120]  Нет, укранин будет, не волнуйтесь.
[02:50:49.120 --> 02:50:51.120]  Он укранин?
[02:50:51.120 --> 02:50:53.120]  Нет, ну, один из нет алгоритмов
[02:50:53.120 --> 02:50:55.120]  поиска субдерева за линию
[02:50:55.120 --> 02:50:57.120]  ДШШ и даже больше укранин далеко не первый.
[02:50:57.120 --> 02:50:59.120]  Просто он считается наиболее простым прямым
[02:50:59.120 --> 02:51:01.120]  алгоритмом.
[02:51:01.120 --> 02:51:03.120]  И более того, он приятный тем, что
[02:51:03.120 --> 02:51:05.120]  он как бы итеративный.
[02:51:05.120 --> 02:51:07.120]  То есть алгоритм подразумевает так, что
[02:51:07.120 --> 02:51:09.120]  если у вас есть строчка и есть субдерева,
[02:51:09.120 --> 02:51:11.120]  если вы приписали к ней символ,
[02:51:11.120 --> 02:51:13.120]  то вы как бы чуть-чуть пошаманили
[02:51:13.120 --> 02:51:15.120]  и получилось
[02:51:15.120 --> 02:51:17.120]  дерево для новой строки.
[02:51:17.120 --> 02:51:19.120]  Но там, к сожалению, алгоритм
[02:51:19.120 --> 02:51:21.120]  амортизированный, но
[02:51:21.120 --> 02:51:23.120]  тем не менее. Но он считается наиболее
[02:51:23.120 --> 02:51:25.120]  простым, потому что там есть какие-то более старые
[02:51:25.120 --> 02:51:27.120]  алгоритмы Вакка Маккрейта или там
[02:51:27.120 --> 02:51:29.120]  какие-то Вайнера там какого-нибудь там
[02:51:29.120 --> 02:51:31.120]  и так далее. Но они как бы просто
[02:51:31.120 --> 02:51:33.120]  вам как бы подключили вот там
[02:51:33.120 --> 02:51:35.120]  ну не подключили, а там просто вот вам
[02:51:35.120 --> 02:51:37.120]  строчка, я там полная строчка, я под ней
[02:51:37.120 --> 02:51:39.120]  там почесался, почесался, вот вам субдерева.
[02:51:39.120 --> 02:51:41.120]  Вот.
[02:51:41.120 --> 02:51:43.120]  Ой, подождите, а можно еще плюс символ писать?
[02:51:43.120 --> 02:51:45.120]  Нет. Говорит, могу только заново пойти.
[02:51:45.120 --> 02:51:47.120]  Вот.
[02:51:47.120 --> 02:51:49.120]  Ну вот.
[02:51:49.120 --> 02:51:51.120]  Значит, ладно, вернемся в протокол.
[02:51:51.120 --> 02:51:53.120]  Значит, это был нот.
[02:51:53.120 --> 02:51:55.120]  Задача про сочетание. Так вот, задача про кубики.
[02:51:57.120 --> 02:51:59.120]  Задача про кубики может
[02:51:59.120 --> 02:52:01.120]  звучать так. Ну, короче говоря,
[02:52:01.120 --> 02:52:03.120]  дам набор из там
[02:52:03.120 --> 02:52:05.120]  200 кубиков
[02:52:05.120 --> 02:52:07.120]  и
[02:52:07.120 --> 02:52:09.120]  нам хочется... Ну, кубик,
[02:52:09.120 --> 02:52:11.120]  что такое кубик? Это значит, у него есть шесть граней,
[02:52:11.120 --> 02:52:13.120]  на каждой написана какая-то буковка.
[02:52:13.120 --> 02:52:15.120]  Можно ли из этих кубиков собрать какое-нибудь слово
[02:52:15.120 --> 02:52:17.120]  за вечность?
[02:52:17.120 --> 02:52:19.120]  Ну, или какое-нибудь любое другое слово.
[02:52:21.120 --> 02:52:23.120]  Вот. Ну, известная такая задача, да?
[02:52:23.120 --> 02:52:25.120]  Ну, может неизвестно, но
[02:52:25.120 --> 02:52:27.120]  как она решается, но тупой способ очевидный.
[02:52:27.120 --> 02:52:29.120]  Левая доля кубики, правая доля
[02:52:29.120 --> 02:52:31.120]  позиции в слове, буковки прям,
[02:52:31.120 --> 02:52:33.120]  строим и в явном
[02:52:33.120 --> 02:52:35.120]  виде делаем про сочетание.
[02:52:35.120 --> 02:52:37.120]  Что-то я запутался.
[02:52:37.120 --> 02:52:39.120]  Почему нельзя проверить, что у нас
[02:52:39.120 --> 02:52:41.120]  есть буквы В, Е, Ч,
[02:52:41.120 --> 02:52:43.120]  Н, О, Э?
[02:52:43.120 --> 02:52:45.120]  Что может В, Е, С, Н, Т, С, что В, Е
[02:52:45.120 --> 02:52:47.120]  находится на одном и том же кубике?
[02:52:49.120 --> 02:52:51.120]  Да, вот есть такая
[02:52:51.120 --> 02:52:53.120]  маленькая подлянка, да.
[02:52:55.120 --> 02:52:57.120]  Вот.
[02:52:57.120 --> 02:52:59.120]  Но на самом деле
[02:52:59.120 --> 02:53:01.120]  это решение, если вы знаете не просто
[02:53:01.120 --> 02:53:03.120]  не только там какого-то тупого куна,
[02:53:03.120 --> 02:53:05.120]  но и все-таки потоки, то решение можно
[02:53:05.120 --> 02:53:07.120]  оптимизировать для больших ограничений.
[02:53:09.120 --> 02:53:11.120]  Потому что, предположим,
[02:53:11.120 --> 02:53:13.120]  что окажется,
[02:53:13.120 --> 02:53:15.120]  как оптимизировать?
[02:53:15.120 --> 02:53:17.120]  Потому что оказывается следующее,
[02:53:17.120 --> 02:53:19.120]  что у вас может быть очень много ребер.
[02:53:19.120 --> 02:53:21.120]  Например, если у вас
[02:53:21.120 --> 02:53:23.120]  есть 200 кубиков
[02:53:23.120 --> 02:53:25.120]  и строчка длины 200,
[02:53:25.120 --> 02:53:27.120]  и
[02:53:27.120 --> 02:53:29.120]  на всех их написана одна и та же буква,
[02:53:29.120 --> 02:53:31.120]  то грав вы построите размеры 40
[02:53:31.120 --> 02:53:33.120]  тысяч ребер.
[02:53:33.120 --> 02:53:35.120]  Но на самом деле это достаточно легко оптимизировать.
[02:53:35.120 --> 02:53:37.120]  Каким образом?
[02:53:37.120 --> 02:53:39.120]  Нужно просто
[02:53:39.120 --> 02:53:41.120]  букву
[02:53:41.120 --> 02:53:43.120]  ввести.
[02:53:43.120 --> 02:53:45.120]  Потому что, по большому счету,
[02:53:45.120 --> 02:53:47.120]  нас не интересует порядок букв,
[02:53:47.120 --> 02:53:49.120]  нас интересует про каждую букву, по большому счету,
[02:53:49.120 --> 02:53:51.120]  сколько раз она встречается.
[02:53:51.120 --> 02:53:53.120]  Поэтому на самом деле в правой доле
[02:53:53.120 --> 02:53:55.120]  встроим то же самое
[02:53:55.120 --> 02:53:57.120]  типа просочетания,
[02:53:57.120 --> 02:53:59.120]  но в правой доле у нас только
[02:53:59.120 --> 02:54:01.120]  вершинки A, B, C, D, Z.
[02:54:01.120 --> 02:54:03.120]  А здесь ребрышкой пропустой способности
[02:54:03.120 --> 02:54:05.120]  не один, а
[02:54:05.120 --> 02:54:07.120]  сколько раз эта буква встречается в слове.
[02:54:07.120 --> 02:54:09.120]  Понятно, да?
[02:54:09.120 --> 02:54:11.120]  То есть можно вот такое
[02:54:11.120 --> 02:54:13.120]  там можно тут уписывать.
[02:54:13.120 --> 02:54:15.120]  То есть мы говорим, что
[02:54:15.120 --> 02:54:17.120]  у нас есть объекты,
[02:54:17.120 --> 02:54:19.120]  которые ассинктически работают за констанцию?
[02:54:19.120 --> 02:54:21.120]  Нет, нет, нет, нет.
[02:54:21.120 --> 02:54:23.120]  Смотри, это у тебя
[02:54:23.120 --> 02:54:25.120]  потому что в правой доле 26 вершин,
[02:54:25.120 --> 02:54:27.120]  а в левой-то у тебя количество кубиков...
[02:54:27.120 --> 02:54:29.120]  26 в шестой.
[02:54:29.120 --> 02:54:31.120]  Ну да.
[02:54:31.120 --> 02:54:33.120]  Нет, ну кубик...
[02:54:33.120 --> 02:54:35.120]  Нет, ну как сказать, на самом деле идея,
[02:54:35.120 --> 02:54:37.120]  потому что у вас в домашнем задании будет задача,
[02:54:37.120 --> 02:54:39.120]  в которой такой хак все-таки прокатывает.
[02:54:39.120 --> 02:54:41.120]  Как называется карточка.
[02:54:41.120 --> 02:54:43.120]  Да.
[02:54:43.120 --> 02:54:45.120]  Не за константы, потому что мы не знаем,
[02:54:45.120 --> 02:54:47.120]  сколько кубик, сколько видов, какого кубика.
[02:54:47.120 --> 02:54:49.120]  Нет, в смысле раз вверх сети будет
[02:54:49.120 --> 02:54:51.120]  количество вершин и ребер, будет не происходить константы.
[02:54:51.120 --> 02:54:53.120]  Вот так. То есть другой вопрос, да,
[02:54:53.120 --> 02:54:55.120]  что конечно пропустые способности константы
[02:54:55.120 --> 02:54:57.120]  и быть уже не обязаны, но соответственно.
[02:54:57.120 --> 02:54:59.120]  А.
[02:54:59.120 --> 02:55:01.120]  Решение?
[02:55:01.120 --> 02:55:03.120]  Ну решение такое.
[02:55:03.120 --> 02:55:05.120]  Значит, для каждой...
[02:55:05.120 --> 02:55:07.120]  Строим такую же сеть, где
[02:55:07.120 --> 02:55:09.120]  в левой доле находятся кубики,
[02:55:09.120 --> 02:55:11.120]  тут все честно, да.
[02:55:13.120 --> 02:55:15.120]  А в правой доле буковки.
[02:55:17.120 --> 02:55:19.120]  То есть не само слово,
[02:55:19.120 --> 02:55:21.120]  а только буковки, 26 вершин.
[02:55:21.120 --> 02:55:23.120]  Из каждой из них в сток
[02:55:23.120 --> 02:55:25.120]  выведем ребро пропустной способности не один,
[02:55:25.120 --> 02:55:27.120]  а сколько раз эта буква встречается.
[02:55:27.120 --> 02:55:29.120]  То есть, например, если у нас
[02:55:29.120 --> 02:55:31.120]  было слово аббатсаба, то здесь было бы 4,
[02:55:31.120 --> 02:55:33.120]  тут было бы 2, тут было бы 1.
[02:55:35.120 --> 02:55:37.120]  Вот. Ищем в такой сети
[02:55:37.120 --> 02:55:39.120]  максимальный поток.
[02:55:39.120 --> 02:55:41.120]  И, собственно, там, допустим, в эту вершину, допустим,
[02:55:41.120 --> 02:55:43.120]  входят там, допустим, 4 ребра,
[02:55:43.120 --> 02:55:45.120]  это означает, что вот из этих 4 кубиков
[02:55:45.120 --> 02:55:47.120]  мы букву а и возьмем.
[02:55:49.120 --> 02:55:51.120]  Вот такая идея.
[02:55:51.120 --> 02:55:53.120]  Но, в принципе, как уже было сказано,
[02:55:53.120 --> 02:55:55.120]  принципиально разных кубиков
[02:55:55.120 --> 02:55:57.120]  не более, чем 26 в шестой,
[02:55:57.120 --> 02:55:59.120]  там можно еще более точную оценку подогнать.
[02:55:59.120 --> 02:56:01.120]  Там, по-моему,
[02:56:01.120 --> 02:56:03.120]  там что-то типа
[02:56:03.120 --> 02:56:05.120]  C из 26 по 6 чертой
[02:56:05.120 --> 02:56:07.120]  или что-то в этом роде.
[02:56:09.120 --> 02:56:11.120]  Да, C из 26 по 6 чертой.
[02:56:11.120 --> 02:56:15.120]  Это C из 31 по 5.
[02:56:15.120 --> 02:56:17.120]  Это чуть меньше.
[02:56:17.120 --> 02:56:19.120]  Вроде. Вот.
[02:56:19.120 --> 02:56:21.120]  Тоже тут можно аналогичное
[02:56:21.120 --> 02:56:23.120]  сжатие сделать.
[02:56:23.120 --> 02:56:25.120]  Нет, ну просто реально, если вы понимаете,
[02:56:25.120 --> 02:56:27.120]  что у вас существует две вершины,
[02:56:27.120 --> 02:56:29.120]  в которые входят ребра
[02:56:29.120 --> 02:56:31.120]  из одних и тех же вершин
[02:56:31.120 --> 02:56:33.120]  и из которых ведут ребра
[02:56:33.120 --> 02:56:35.120]  в одни и те же вершины одинаковые,
[02:56:35.120 --> 02:56:37.120]  то, как бы, возникает естественный вопрос,
[02:56:37.120 --> 02:56:39.120]  почему бы нам
[02:56:39.120 --> 02:56:41.120]  эти вершины не объединить.
[02:56:41.120 --> 02:56:43.120]  Вот.
[02:56:43.120 --> 02:56:45.120]  Ну, там что-то типа такого.
[02:56:45.120 --> 02:56:47.120]  Ну, бывают там и более
[02:56:47.120 --> 02:56:49.120]  продвинутые задачи.
[02:56:49.120 --> 02:56:51.120]  Сейчас какая...
[02:56:51.120 --> 02:56:53.120]  Сейчас, ладно, давайте, прежде чем мы пойдем
[02:56:53.120 --> 02:56:55.120]  еще раз на перерыв, кажется, тоже время уже пришло,
[02:56:55.120 --> 02:56:57.120]  там какие еще были задачи?
[02:56:57.120 --> 02:56:59.120]  Нет, там еще была задачка...
[02:56:59.120 --> 02:57:01.120]  А, но есть еще веселая задача про монетки.
[02:57:01.120 --> 02:57:03.120]  Не сталкивались?
[02:57:03.120 --> 02:57:05.120]  Там что-то Петя коллекционирует
[02:57:05.120 --> 02:57:07.120]  монетки.
[02:57:07.120 --> 02:57:09.120]  И монетки существуют всего там,
[02:57:09.120 --> 02:57:11.120]  допустим, какого-то ограниченного количества типов.
[02:57:11.120 --> 02:57:13.120]  Там 100 типов у них.
[02:57:13.120 --> 02:57:15.120]  Каких-то монеток у Пети нет,
[02:57:15.120 --> 02:57:17.120]  а каких-то, наоборот, много.
[02:57:17.120 --> 02:57:19.120]  И тут оказывается, что Петя, в принципе,
[02:57:19.120 --> 02:57:21.120]  те монетки, которые у него лишние,
[02:57:21.120 --> 02:57:23.120]  то есть если какого-то
[02:57:23.120 --> 02:57:25.120]  типа монеток у него больше,
[02:57:25.120 --> 02:57:27.120]  то он их готов выменивать.
[02:57:27.120 --> 02:57:29.120]  Но выменивать у нас там,
[02:57:29.120 --> 02:57:31.120]  по правилам мира, можно только одну
[02:57:31.120 --> 02:57:33.120]  монетку на одну монетку,
[02:57:33.120 --> 02:57:35.120]  но при этом оппонент
[02:57:35.120 --> 02:57:37.120]  согласен поменять
[02:57:37.120 --> 02:57:39.120]  монетку на монетку только
[02:57:39.120 --> 02:57:41.120]  в двух случаях. Только при двух условиях.
[02:57:41.120 --> 02:57:43.120]  Первое, ему дают монетку,
[02:57:43.120 --> 02:57:45.120]  которой у него нету.
[02:57:45.120 --> 02:57:47.120]  И второе, он отдает монетку, которой у него тоже в излишке.
[02:57:49.120 --> 02:57:51.120]  Это каждый момент времени.
[02:57:51.120 --> 02:57:53.120]  Да.
[02:57:53.120 --> 02:57:55.120]  То есть в каждое время я смотрю.
[02:57:57.120 --> 02:57:59.120]  Петя обнаруживает, что Вася
[02:57:59.120 --> 02:58:01.120]  готов меня обменять монетку
[02:58:01.120 --> 02:58:03.120]  номер пять на мою монетку номер семь.
[02:58:03.120 --> 02:58:05.120]  Если у него
[02:58:05.120 --> 02:58:07.120]  нет монетки номер семь,
[02:58:07.120 --> 02:58:09.120]  а монетки номер пять у него
[02:58:09.120 --> 02:58:11.120]  хотя бы две.
[02:58:13.120 --> 02:58:15.120]  И там, собственно, задача, какое максимальное
[02:58:15.120 --> 02:58:17.120]  количество различных монеток Петя в итоге
[02:58:17.120 --> 02:58:19.120]  при правильной организации обменов
[02:58:19.120 --> 02:58:21.120]  может получить.
[02:58:25.120 --> 02:58:27.120]  Вот, понятная задача, да?
[02:58:29.120 --> 02:58:31.120]  Ну,
[02:58:31.120 --> 02:58:33.120]  чего?
[02:58:33.120 --> 02:58:35.120]  Ну, оппонентов тоже может быть
[02:58:35.120 --> 02:58:37.120]  много, и дано, естественно,
[02:58:37.120 --> 02:58:39.120]  и Петя еще и знает, там, сколько у кого,
[02:58:39.120 --> 02:58:41.120]  у сколько у кого и каких монет.
[02:58:41.120 --> 02:58:43.120]  Но тоже там везде по сотки
[02:58:43.120 --> 02:58:45.120]  всего.
[02:58:45.120 --> 02:58:47.120]  Ну вот, ну и там,
[02:58:47.120 --> 02:58:49.120]  в общем-то, оказывается, что
[02:58:57.120 --> 02:58:59.120]  ну, то есть оказывается, что
[02:58:59.120 --> 02:59:01.120]  оказывается, что там надо
[02:59:01.120 --> 02:59:03.120]  просто тоже там, если вкратце там,
[02:59:03.120 --> 02:59:05.120]  построить сеть, где там
[02:59:05.120 --> 02:59:07.120]  вершинами будут монетки, соответственно,
[02:59:07.120 --> 02:59:09.120]  то такие типы монеток, а
[02:59:09.120 --> 02:59:11.120]  между двумя монетками там есть действительно
[02:59:11.120 --> 02:59:13.120]  какое-то ребро, какой-то пропускной способности
[02:59:13.120 --> 02:59:15.120]  там семь. Это означает, что
[02:59:15.120 --> 02:59:17.120]  я теоретически, что теоретически Петя
[02:59:17.120 --> 02:59:19.120]  может обменять там семь таких
[02:59:19.120 --> 02:59:21.120]  монеток на семь таких монеток у вот этого
[02:59:21.120 --> 02:59:23.120]  вот менялы.
[02:59:23.120 --> 02:59:25.120]  А нет, не может.
[02:59:25.120 --> 02:59:27.120]  Нет, он такую монетку
[02:59:27.120 --> 02:59:29.120]  может обменять только одну, поэтому просто
[02:59:29.120 --> 02:59:31.120]  рисуем единичную эту.
[02:59:31.120 --> 02:59:33.120]  Он хочет получать только те монеты, которых у него нет.
[02:59:33.120 --> 02:59:35.120]  Да.
[02:59:35.120 --> 02:59:37.120]  Он не может быть умным,
[02:59:37.120 --> 02:59:39.120]  чтобы копить какие-то другие, потом их
[02:59:39.120 --> 02:59:41.120]  обменивать.
[02:59:41.120 --> 02:59:43.120]  Сейчас, а может, нет, надо подумать,
[02:59:43.120 --> 02:59:45.120]  ой, а нет, вру. Может, кстати, может.
[02:59:45.120 --> 02:59:47.120]  Может, может, может. Ладно, вру.
[02:59:47.120 --> 02:59:49.120]  Петя обменивает все что угодно, да.
[02:59:49.120 --> 02:59:51.120]  Да, вру.
[02:59:51.120 --> 02:59:53.120]  Чего?
[02:59:53.120 --> 02:59:55.120]  Нет, оппоненты, нет, они люди тупые.
[02:59:55.120 --> 02:59:57.120]  Все, они...
[02:59:57.120 --> 02:59:59.120]  Они говорят, я готов обменивать, только если ты мне
[02:59:59.120 --> 03:00:01.120]  дашь то, что у меня нет, и я тебе отдам то,
[03:00:01.120 --> 03:00:03.120]  что у меня еще есть.
[03:00:03.120 --> 03:00:05.120]  Да, с друг другом они не меняются.
[03:00:05.120 --> 03:00:07.120]  Да, с друг другом они не меняются.
[03:00:07.120 --> 03:00:09.120]  Да, Петя умный, да.
[03:00:09.120 --> 03:00:11.120]  Нет,
[03:00:11.120 --> 03:00:13.120]  я не дай.
[03:00:13.120 --> 03:00:15.120]  Как говорится, я ни в коем случае не хочу
[03:00:15.120 --> 03:00:17.120]  обменить никакого конкретного Васю,
[03:00:17.120 --> 03:00:19.120]  просто мы зафиксировали Петю, значит будет
[03:00:19.120 --> 03:00:21.120]  Петя, да. Но там в условии Петя был,
[03:00:21.120 --> 03:00:23.120]  так что все вопросы к составителю
[03:00:23.120 --> 03:00:25.120]  условия, да.
[03:00:25.120 --> 03:00:27.120]  Вот.
[03:00:27.120 --> 03:00:29.120]  Вот.
[03:00:29.120 --> 03:00:31.120]  Да хоть Серега, Господи.
[03:00:31.120 --> 03:00:33.120]  Так.
[03:00:33.120 --> 03:00:35.120]  Значит...
[03:00:35.120 --> 03:00:37.120]  Нет, ну и там вот действительно...
[03:00:37.120 --> 03:00:39.120]  Ну там просто вот оказывается, что надо
[03:00:39.120 --> 03:00:41.120]  такое построить, то есть как бы понятно, что
[03:00:41.120 --> 03:00:43.120]  между двумя монетками действительно получается
[03:00:43.120 --> 03:00:45.120]  там, то есть
[03:00:45.120 --> 03:00:47.120]  каждый возможный обмен фиксируется,
[03:00:47.120 --> 03:00:49.120]  получается. То есть там
[03:00:49.120 --> 03:00:51.120]  оказывалось, ну там технология оказывалась примерно такая,
[03:00:51.120 --> 03:00:53.120]  что каждый там
[03:00:53.120 --> 03:00:55.120]  то есть как
[03:00:55.120 --> 03:00:57.120]  единичным ребром фиксируется,
[03:00:57.120 --> 03:00:59.120]  что как бы вот эта монетка может быть обменена
[03:00:59.120 --> 03:01:01.120]  на вот эту.
[03:01:01.120 --> 03:01:03.120]  Вот. Но с другой стороны у самого
[03:01:03.120 --> 03:01:05.120]  Пети, вот мы из сток типа Пети рисуем,
[03:01:05.120 --> 03:01:07.120]  да, то есть у него как бы есть, мы
[03:01:07.120 --> 03:01:09.120]  рисуем там ребро пропускной способности
[03:01:09.120 --> 03:01:11.120]  5, если оказывается, что изначально у
[03:01:11.120 --> 03:01:13.120]  Пети 6 монет такого типа.
[03:01:15.120 --> 03:01:17.120]  Вот, понятно, да?
[03:01:17.120 --> 03:01:19.120]  То есть там
[03:01:19.120 --> 03:01:21.120]  6 понятно, что в эту вершину можем еще как-то
[03:01:21.120 --> 03:01:23.120]  пройтись, и вот как было правильно замечено,
[03:01:23.120 --> 03:01:25.120]  мы эту монетку можем еще другим способом
[03:01:25.120 --> 03:01:27.120]  получить.
[03:01:27.120 --> 03:01:29.120]  Потому что действительно мы там можем пойти там по цепочке,
[03:01:29.120 --> 03:01:31.120]  эту монету принять на эту, эту, на эту, на эту,
[03:01:31.120 --> 03:01:33.120]  на эту, а потом выменить там то, что нам реально надо.
[03:01:33.120 --> 03:01:35.120]  Вот.
[03:01:35.120 --> 03:01:37.120]  Да.
[03:01:37.120 --> 03:01:39.120]  Ну вот.
[03:01:39.120 --> 03:01:41.120]  А, а можно даже не 5.
[03:01:41.120 --> 03:01:43.120]  Можно написать
[03:01:43.120 --> 03:01:45.120]  как бы
[03:01:45.120 --> 03:01:47.120]  Мне кажется 5. Мы пишем,
[03:01:47.120 --> 03:01:49.120]  а вам пишем, в котором у нас ребра
[03:01:49.120 --> 03:01:51.120]  из стока. Да, на самом деле
[03:01:51.120 --> 03:01:53.120]  да, потому что важный момент, что
[03:01:53.120 --> 03:01:55.120]  из каждой такой монетки
[03:01:55.120 --> 03:01:57.120]  нам бы в идеале есть по одной
[03:01:57.120 --> 03:01:59.120]  монетке допустим 100.
[03:01:59.120 --> 03:02:01.120]  Вот.
[03:02:02.120 --> 03:02:04.120]  То есть просто
[03:02:04.120 --> 03:02:06.120]  потому что каждый такой путь
[03:02:06.120 --> 03:02:08.120]  будет говорить о том, что у Пети в результате цепочки
[03:02:08.120 --> 03:02:10.120]  обменов появилась какая-то
[03:02:10.120 --> 03:02:12.120]  монетка.
[03:02:12.120 --> 03:02:14.120]  Ну либо появилась, либо, видите, если она была,
[03:02:14.120 --> 03:02:16.120]  то как бы мы можем одну единицу потока
[03:02:16.120 --> 03:02:18.120]  провести через эту вершину.
[03:02:18.120 --> 03:02:20.120]  Или мы оставляем вариант, что
[03:02:20.120 --> 03:02:22.120]  может быть нам выгодно все эти 6 монет
[03:02:22.120 --> 03:02:24.120]  на что-нибудь поменять.
[03:02:24.120 --> 03:02:26.120]  Да, это другой вопрос, да.
[03:02:26.120 --> 03:02:28.120]  Хотя возможно примерно из этой технологии
[03:02:28.120 --> 03:02:30.120]  потом вы уже доказываете, что на самом деле
[03:02:30.120 --> 03:02:32.120]  идею монетку выменивать бессмысленно.
[03:02:32.120 --> 03:02:34.120]  Ну там как бы на самом деле
[03:02:34.120 --> 03:02:36.120]  там аккуратность нужна, но обычно
[03:02:36.120 --> 03:02:38.120]  тут это не нужно, потому что просто вы там
[03:02:38.120 --> 03:02:40.120]  строите такого рода сеть, как бы потом
[03:02:40.120 --> 03:02:42.120]  строите поток, декомпозируете его
[03:02:42.120 --> 03:02:44.120]  на пути, соответственно, и каждый
[03:02:44.120 --> 03:02:46.120]  путь это на самом деле такая цепочка обменов.
[03:02:46.120 --> 03:02:48.120]  То есть это
[03:02:48.120 --> 03:02:50.120]  я просто привел еще как пример
[03:02:50.120 --> 03:02:52.120]  такой нетривиальной задачки, в которой нужно
[03:02:52.120 --> 03:02:54.120]  построить сеть, найти в ней поток
[03:02:54.120 --> 03:02:56.120]  и этот поток конкретно
[03:02:56.120 --> 03:02:58.120]  проинтерпретировать.
[03:02:58.120 --> 03:03:00.120]  Но на самом деле как бы не менее
[03:03:00.120 --> 03:03:02.120]  популярным является
[03:03:02.120 --> 03:03:04.120]  как раз наоборот там примеры задач,
[03:03:04.120 --> 03:03:06.120]  в которых ваша цель на самом деле
[03:03:06.120 --> 03:03:08.120]  построить сеть, но к задаче
[03:03:08.120 --> 03:03:10.120]  имеет отношение не сам по себе поток,
[03:03:10.120 --> 03:03:12.120]  а именно минимальный разрез.
[03:03:14.120 --> 03:03:16.120]  Но такие задачи, видимо,
[03:03:16.120 --> 03:03:18.120]  мы рассмотрим после перерыва.
[03:03:18.120 --> 03:03:20.120]  Продолжаем
[03:03:20.120 --> 03:03:22.120]  веселую киношку.
[03:03:28.120 --> 03:03:30.120]  Значит, итак, следующий тип задачек.
[03:03:32.120 --> 03:03:34.120]  То есть это задачи, где
[03:03:34.120 --> 03:03:36.120]  нам поможет именно разрез.
[03:03:38.120 --> 03:03:40.120]  Ну, одной из просто, может быть, классических
[03:03:40.120 --> 03:03:42.120]  задач на эту тему
[03:03:44.120 --> 03:03:46.120]  является, любимая мной задача,
[03:03:46.120 --> 03:03:48.120]  называется
[03:03:48.120 --> 03:03:50.120]  Ярость и команды.
[03:03:52.120 --> 03:03:54.120]  Вот.
[03:03:54.120 --> 03:03:56.120]  Не-не-не.
[03:03:58.120 --> 03:04:00.120]  Нет.
[03:04:00.120 --> 03:04:02.120]  Не-не-не.
[03:04:02.120 --> 03:04:04.120]  Значит, смотрите.
[03:04:04.120 --> 03:04:06.120]  Представьте себе
[03:04:06.120 --> 03:04:08.120]  ситуация. Представьте,
[03:04:08.120 --> 03:04:10.120]  вы организовали стартап.
[03:04:10.120 --> 03:04:12.120]  Ну, типичная ситуация
[03:04:12.120 --> 03:04:14.120]  такая.
[03:04:14.120 --> 03:04:16.120]  Что такое обычно стартап поначалу?
[03:04:16.120 --> 03:04:18.120]  Это когда у вас где-то там 5 человек
[03:04:18.120 --> 03:04:20.120]  условно максимум.
[03:04:20.120 --> 03:04:22.120]  И вы все условно,
[03:04:22.120 --> 03:04:24.120]  ну, не то, чтобы все делают все,
[03:04:24.120 --> 03:04:26.120]  но более-менее работаете за одним столом,
[03:04:26.120 --> 03:04:28.120]  все в курсе, что делает каждый,
[03:04:28.120 --> 03:04:30.120]  то, что вы все обсуждаете и так далее.
[03:04:30.120 --> 03:04:32.120]  То есть вы как бы все вместе,
[03:04:32.120 --> 03:04:34.120]  вы как бы едины и так далее.
[03:04:34.120 --> 03:04:36.120]  Вот.
[03:04:36.120 --> 03:04:38.120]  Но, как это
[03:04:38.120 --> 03:04:40.120]  часто бывает, стартап оказался
[03:04:40.120 --> 03:04:42.120]  успешный.
[03:04:42.120 --> 03:04:44.120]  Как это не часто бывает.
[03:04:44.120 --> 03:04:46.120]  Ну,
[03:04:46.120 --> 03:04:48.120]  ну, все относительно, но
[03:04:48.120 --> 03:04:50.120]  стартап оказался успешен.
[03:04:50.120 --> 03:04:52.120]  И
[03:04:52.120 --> 03:04:54.120]  ваша команда начала расти.
[03:04:54.120 --> 03:04:56.120]  6, 10,
[03:04:56.120 --> 03:04:58.120]  50, 100.
[03:04:58.120 --> 03:05:00.120]  И вы поняли, что уже как-то
[03:05:00.120 --> 03:05:02.120]  места в кабинете
[03:05:02.120 --> 03:05:04.120]  заканчиваются.
[03:05:04.120 --> 03:05:06.120]  И вообще сложно уже так
[03:05:06.120 --> 03:05:08.120]  жить так, что мы как бы все знают
[03:05:08.120 --> 03:05:10.120]  все, все едимы и все все понимают.
[03:05:10.120 --> 03:05:12.120]  Это уже
[03:05:12.120 --> 03:05:14.120]  заговаривает пост.
[03:05:14.120 --> 03:05:16.120]  Поэтому вы решили,
[03:05:16.120 --> 03:05:18.120]  лимит количества людей для каждой команды
[03:05:18.120 --> 03:05:20.120]  твой, но суть одна.
[03:05:20.120 --> 03:05:22.120]  Вы решили,
[03:05:22.120 --> 03:05:24.120]  что пришло время обводить какие-то отделы.
[03:05:24.120 --> 03:05:26.120]  Ну, с чего вы
[03:05:26.120 --> 03:05:28.120]  начали? Ну, начали с того,
[03:05:28.120 --> 03:05:30.120]  что вы решили поделить
[03:05:30.120 --> 03:05:32.120]  вашу компанию
[03:05:32.120 --> 03:05:34.120]  на две команды.
[03:05:34.120 --> 03:05:36.120]  Ну, например,
[03:05:36.120 --> 03:05:38.120]  будем называть их, например,
[03:05:38.120 --> 03:05:40.120]  программистами
[03:05:40.120 --> 03:05:42.120]  и тестировщиками.
[03:05:42.120 --> 03:05:44.120]  Нет, у нас две команды,
[03:05:44.120 --> 03:05:46.120]  не три.
[03:05:46.120 --> 03:05:48.120]  Так что нет,
[03:05:48.120 --> 03:05:50.120]  уборщики это не то, уборщики это
[03:05:50.120 --> 03:05:52.120]  как бы просто клининг фирмы,
[03:05:52.120 --> 03:05:54.120]  которая отдельно там нанимается,
[03:05:54.120 --> 03:05:56.120]  это не интересно.
[03:05:56.120 --> 03:05:58.120]  Ну, не говоря уже о том, что может у вас
[03:05:58.120 --> 03:06:00.120]  и фиксировано офис, а нет, вы там у кого-нибудь на хате
[03:06:00.120 --> 03:06:02.120]  сидите, господи.
[03:06:06.120 --> 03:06:08.120]  Нет, ну это в общем не важно,
[03:06:08.120 --> 03:06:10.120]  это уже отдельная песня. Может вы там
[03:06:10.120 --> 03:06:12.120]  офис какой-нибудь арендуете в какой-нибудь бизнес-центре
[03:06:12.120 --> 03:06:14.120]  и так далее, не важно.
[03:06:14.120 --> 03:06:16.120]  Решили поделить
[03:06:16.120 --> 03:06:18.120]  на программистов и тестировщиков.
[03:06:18.120 --> 03:06:20.120]  Ну, в принципе, вы так подумали,
[03:06:20.120 --> 03:06:22.120]  ну, в принципе,
[03:06:22.120 --> 03:06:24.120]  у вас все, как это часто бывает,
[03:06:24.120 --> 03:06:26.120]  там люди крутые, могут круто программировать
[03:06:26.120 --> 03:06:28.120]  и круто тестировать.
[03:06:28.120 --> 03:06:30.120]  Вот. Поэтому
[03:06:30.120 --> 03:06:32.120]  как же поделить?
[03:06:32.120 --> 03:06:34.120]  У вас тут целых два степени способов, как это сделать.
[03:06:34.120 --> 03:06:36.120]  Ну, вы решили,
[03:06:36.120 --> 03:06:38.120]  ну, вы как-то
[03:06:38.120 --> 03:06:40.120]  еще более часто бывает очень любите своих сотрудников,
[03:06:40.120 --> 03:06:42.120]  поэтому решили спросить
[03:06:42.120 --> 03:06:44.120]  их в их мнении.
[03:06:44.120 --> 03:06:46.120]  Значит, провели,
[03:06:46.120 --> 03:06:48.120]  провели опрос и
[03:06:48.120 --> 03:06:50.120]  выяснили следующие
[03:06:50.120 --> 03:06:52.120]  интересные особенности.
[03:06:52.120 --> 03:06:54.120]  Оказалось, некоторые люди
[03:06:54.120 --> 03:06:56.120]  хотят быть программистами
[03:06:56.120 --> 03:06:58.120]  и не хотят быть тестировщиками.
[03:07:00.120 --> 03:07:02.120]  Но тут все не совсем
[03:07:02.120 --> 03:07:04.120]  бинарно.
[03:07:04.120 --> 03:07:06.120]  Тут оказывается следующее,
[03:07:06.120 --> 03:07:08.120]  что какой-нибудь Петя говорит,
[03:07:08.120 --> 03:07:10.120]  я хочу быть
[03:07:10.120 --> 03:07:12.120]  программистом. Слушай, а может так случиться,
[03:07:12.120 --> 03:07:14.120]  что нам тебе придется делать тестировщиком?
[03:07:14.120 --> 03:07:16.120]  Ну вот. Но тогда выяснилось,
[03:07:16.120 --> 03:07:18.120]  что
[03:07:18.120 --> 03:07:20.120]  Петя расстроится.
[03:07:20.120 --> 03:07:22.120]  И расстройство
[03:07:22.120 --> 03:07:24.120]  Пети
[03:07:24.120 --> 03:07:26.120]  мы выразим величиной
[03:07:26.120 --> 03:07:28.120]  А с индексом Петя.
[03:07:28.120 --> 03:07:30.120]  Вот.
[03:07:30.120 --> 03:07:32.120]  То есть это какая-то величина больше нуля.
[03:07:32.120 --> 03:07:34.120]  Вот.
[03:07:34.120 --> 03:07:36.120]  Это означает, что мы, значит,
[03:07:36.120 --> 03:07:38.120]  то есть если мы, то есть Петя
[03:07:38.120 --> 03:07:40.120]  может быть программистом, если вы его сделаете
[03:07:40.120 --> 03:07:42.120]  тестировщиком, он будет
[03:07:42.120 --> 03:07:44.120]  плакать. Уровень его плача
[03:07:44.120 --> 03:07:46.120]  значит А Петя.
[03:07:46.120 --> 03:07:48.120]  Вот.
[03:07:50.120 --> 03:07:52.120]  Ну, во-первых,
[03:07:52.120 --> 03:07:54.120]  минимизировать.
[03:07:54.120 --> 03:07:56.120]  Тем более, что есть и
[03:07:56.120 --> 03:07:58.120]  тем более, что есть другое.
[03:07:58.120 --> 03:08:00.120]  Оказывается,
[03:08:00.120 --> 03:08:02.120]  оказывается, например, некоторые очень любят
[03:08:02.120 --> 03:08:04.120]  тестировать.
[03:08:04.120 --> 03:08:06.120]  Ладно, не будем отходить от классики.
[03:08:06.120 --> 03:08:08.120]  Значит, теперь Вася очень любит тестировать.
[03:08:08.120 --> 03:08:10.120]  Давайте лучше Витя.
[03:08:10.120 --> 03:08:12.120]  Что инаком он любит тестировать?
[03:08:16.120 --> 03:08:18.120]  Нет, ну ладно, нет, просто Петя и Вася это как-то более классично.
[03:08:18.120 --> 03:08:20.120]  Я-то могу, конечно, написать хоть
[03:08:20.120 --> 03:08:22.120]  Аскольд и Эдгард, господи, но там
[03:08:22.120 --> 03:08:24.120]  все-таки.
[03:08:24.120 --> 03:08:26.120]  Значит...
[03:08:26.120 --> 03:08:28.120]  Ой. Ага.
[03:08:28.120 --> 03:08:30.120]  Елось Валера. Да, Елось Валера.
[03:08:30.120 --> 03:08:32.120]  Да-да-да.
[03:08:32.120 --> 03:08:34.120]  Ой. Ладно.
[03:08:34.120 --> 03:08:36.120]  Короче говоря,
[03:08:36.120 --> 03:08:38.120]  Вася очень хочет быть тестировщиком.
[03:08:38.120 --> 03:08:40.120]  Если у него
[03:08:40.120 --> 03:08:42.120]  не получится быть тестировщиком,
[03:08:42.120 --> 03:08:44.120]  его посадят все-таки программировать.
[03:08:44.120 --> 03:08:46.120]  Вася расстроится.
[03:08:46.120 --> 03:08:48.120]  Вот. Ну, уровень В.
[03:08:48.120 --> 03:08:50.120]  Ну, Петя и Вася я пишу условно, потому что
[03:08:50.120 --> 03:08:52.120]  на самом деле
[03:08:52.120 --> 03:08:54.120]  у каждого,
[03:08:54.120 --> 03:08:56.120]  оказывается, члена команды
[03:08:56.120 --> 03:08:58.120]  есть какое-то мнение на эту тему.
[03:08:58.120 --> 03:09:00.120]  Еще более того, чиселки, естественно, разные.
[03:09:00.120 --> 03:09:02.120]  То есть, наоборот,
[03:09:02.120 --> 03:09:04.120]  мы знаем, что кому-то
[03:09:04.120 --> 03:09:06.120]  для кого-то
[03:09:06.120 --> 03:09:08.120]  это Ашка означает, ну, я чуть-чуть расстроился.
[03:09:08.120 --> 03:09:10.120]  Я все-таки больше люблю программиру, чем
[03:09:10.120 --> 03:09:12.120]  тестировать, но в принципе...
[03:09:12.120 --> 03:09:14.120]  Но так мне не особо принципиально.
[03:09:14.120 --> 03:09:16.120]  Буду плакать.
[03:09:16.120 --> 03:09:18.120]  Буду плакать на один.
[03:09:18.120 --> 03:09:20.120]  Нет, а тут я буду
[03:09:20.120 --> 03:09:22.120]  плакать немножко здесь. Тут я буду плакать
[03:09:22.120 --> 03:09:24.120]  чуть побольше. Не то чтобы плакать, но просто
[03:09:24.120 --> 03:09:26.120]  я привык программировать.
[03:09:26.120 --> 03:09:28.120]  Если вы меня сделаете тестировщиком,
[03:09:28.120 --> 03:09:30.120]  мне придется переключаться. А когда я переключаюсь
[03:09:30.120 --> 03:09:32.120]  на новую задачу, я некоторое время
[03:09:32.120 --> 03:09:34.120]  злобный.
[03:09:34.120 --> 03:09:36.120]  Но это быстро пройдет, поэтому так.
[03:09:36.120 --> 03:09:38.120]  А это если он больше любит программировать,
[03:09:38.120 --> 03:09:40.120]  а то это если он любит тестировать?
[03:09:40.120 --> 03:09:42.120]  Да. Уважно.
[03:09:42.120 --> 03:09:44.120]  Вот.
[03:09:44.120 --> 03:09:46.120]  И в принципе
[03:09:46.120 --> 03:09:48.120]  все нот. А кто-то
[03:09:48.120 --> 03:09:50.120]  может наоборот. У кого-то там этот уровень может быть
[03:09:50.120 --> 03:09:52.120]  10-9.
[03:09:52.120 --> 03:09:54.120]  Потому что
[03:09:54.120 --> 03:09:56.120]  не знаю. Потому что программистка
[03:09:56.120 --> 03:09:58.120]  далеко не та Лиса,
[03:09:58.120 --> 03:10:00.120]  допустим.
[03:10:00.120 --> 03:10:02.120]  Она наоборот. Если ее заставят тестировать,
[03:10:02.120 --> 03:10:04.120]  она будет просто возмутиться так,
[03:10:04.120 --> 03:10:06.120]  что...
[03:10:06.120 --> 03:10:08.120]  Я не обезьяна!
[03:10:22.120 --> 03:10:24.120]  Ну может и так, ладно.
[03:10:24.120 --> 03:10:26.120]  Ну да, может у нее вражденная
[03:10:26.120 --> 03:10:28.120]  такой какой-то небольшой
[03:10:28.120 --> 03:10:30.120]  глюк в мозгу, и она там слово тестировщик
[03:10:30.120 --> 03:10:32.120]  почему-то подменяет на слово обезьяна.
[03:10:32.120 --> 03:10:34.120]  По каким-то причинам.
[03:10:34.120 --> 03:10:36.120]  Да, вот.
[03:10:36.120 --> 03:10:38.120]  Ну там вся... Ну у этих программистов
[03:10:38.120 --> 03:10:40.120]  стартапов всякое бывает, там конечно всякие
[03:10:40.120 --> 03:10:42.120]  издвиги. Вот. Поэтому да.
[03:10:42.120 --> 03:10:44.120]  Поэтому если Лису сделать
[03:10:44.120 --> 03:10:46.120]  тестировщицей, то она
[03:10:46.120 --> 03:10:48.120]  взводит на уровень 10-9.
[03:10:48.120 --> 03:10:50.120]  Вот совсем.
[03:10:50.120 --> 03:10:52.120]  И теперь задача.
[03:10:52.120 --> 03:10:54.120]  Ну казалось бы да. Нам хочется, ну понятно,
[03:10:54.120 --> 03:10:56.120]  что скорее всего разбить так, чтобы никто не плакал
[03:10:56.120 --> 03:10:58.120]  невозможно, естественно. Но хочется плакать было
[03:10:58.120 --> 03:11:00.120]  как можно меньше. Пока задача решается
[03:11:00.120 --> 03:11:02.120]  просто. Давайте просто тех, кто хочет быть
[03:11:02.120 --> 03:11:04.120]  программистом, сделаем программистами, кто
[03:11:04.120 --> 03:11:06.120]  хочет быть тестировщиком, делаем тестировщиком.
[03:11:06.120 --> 03:11:08.120]  Но хотим суммарного плача, или это
[03:11:08.120 --> 03:11:10.120]  можно больше? Нет, как можно меньше.
[03:11:10.120 --> 03:11:12.120]  Или Brittany плач suffice?
[03:11:12.120 --> 03:11:14.120]  Нет. Но хотим, чтобы
[03:11:14.120 --> 03:11:16.120]  суммарного плача было как
[03:11:16.120 --> 03:11:18.120]  можно меньше. Чтобы они плакали
[03:11:18.120 --> 03:11:20.120]  где-то там тихо.
[03:11:20.120 --> 03:11:22.120]  Ну чтоб суммарно потише.
[03:11:22.120 --> 03:11:27.120]  потому что мы все равно, хоть у нас будет две комнаты одни-одна, но все-таки общее настроение.
[03:11:27.120 --> 03:11:30.120]  Я тут минимизировал максимальный плач.
[03:11:30.120 --> 03:11:37.120]  Нет, тут другая задача. В таком виде она кастривиальна, но дело в том, что у Вазикова еще одно мнение.
[03:11:37.120 --> 03:11:41.120]  Это одна интересная особенность работающих в стартапе людей.
[03:11:41.120 --> 03:11:47.120]  Дело в том, что если люди работают в одном стартапе, они иногда дружат.
[03:11:48.120 --> 03:11:53.120]  Вот, бывает такое.
[03:11:53.120 --> 03:11:59.120]  Не, дружбу отменять не надо, дружба, наоборот, хорошо влияет на дружный коллектив.
[03:11:59.120 --> 03:12:06.120]  Не то чтобы мы опускаемся до этой пошлости, что мы не просто стартап, мы одна семья и так далее.
[03:12:06.120 --> 03:12:12.120]  Если начальник не может решить проблему дружбы двух людей, то это плохой начальник.
[03:12:12.120 --> 03:12:17.120]  Ну, не, ну как сказать.
[03:12:17.120 --> 03:12:26.120]  Скажем так, понимаете, если у некоторых людей сильно дружба, то, наоборот, как бы они не решили проблему начальника, который пытается решить их проблему.
[03:12:26.120 --> 03:12:29.120]  Вот, так вот.
[03:12:29.120 --> 03:12:32.120]  Но, значит, анализ оказался следующий.
[03:12:32.120 --> 03:12:35.120]  Что значит, товарищи какие-нибудь там?
[03:12:35.120 --> 03:12:40.120]  Ну ладно, давайте. Так, какие у нас там товарищи будут у нас?
[03:12:40.120 --> 03:12:43.120]  А, Леша и Слава?
[03:12:43.120 --> 03:12:46.120]  Нет, Леша и Слава.
[03:12:46.120 --> 03:12:49.120]  Нет, тут конкретная отсылка.
[03:12:49.120 --> 03:12:54.120]  Конечно, Леша и Слава вот хотят работать вместе.
[03:12:54.120 --> 03:12:58.120]  Им не особо принципиально в каком отделе, с точки зрения дружбы, по крайней мере.
[03:12:58.120 --> 03:13:11.120]  Но если их разлучат, так если их поставить одного, программировать другого, тестировать, то, соответственно, они тоже будут плакать.
[03:13:11.120 --> 03:13:12.120]  Сумарно.
[03:13:12.120 --> 03:13:13.120]  Чего?
[03:13:13.120 --> 03:13:14.120]  Или каждый.
[03:13:14.120 --> 03:13:15.120]  Сумарно.
[03:13:15.120 --> 03:13:16.120]  Сумарно.
[03:13:16.120 --> 03:13:21.120]  Ну, когда люди дружат, плач сумарен.
[03:13:21.120 --> 03:13:23.120]  Но оказалось еще неожиданные спецэффекты.
[03:13:23.120 --> 03:13:24.120]  Да ладно.
[03:13:25.120 --> 03:13:26.120]  Нет, ну там...
[03:13:26.120 --> 03:13:27.120]  Да какой гиперграф?
[03:13:27.120 --> 03:13:30.120]  Нет, там еще жалко, у меня черного маркера нет, но неважно.
[03:13:30.120 --> 03:13:33.120]  Оказалось, есть еще интересный спецэффект.
[03:13:33.120 --> 03:13:35.120]  Мы знаем, у кого он есть.
[03:13:38.120 --> 03:13:40.120]  Нету черного.
[03:13:42.120 --> 03:13:45.120]  Или это тот самый черный, который не стирается.
[03:13:50.120 --> 03:13:52.120]  Да.
[03:13:52.120 --> 03:13:53.120]  Да.
[03:13:53.120 --> 03:13:55.120]  А нет, стирается, смотрите.
[03:14:01.120 --> 03:14:02.120]  Жалко, жалко.
[03:14:02.120 --> 03:14:03.120]  Черт, тут жалко.
[03:14:03.120 --> 03:14:07.120]  Вот были у меня времена, когда я притаскивал 12 разноцветных маркеров, конечно.
[03:14:07.120 --> 03:14:09.120]  Вот, надо быть, наверное.
[03:14:09.120 --> 03:14:10.120]  Попарно разноцветных?
[03:14:10.120 --> 03:14:11.120]  Ну да, да, да.
[03:14:11.120 --> 03:14:16.120]  У меня там были рыжие маркеры, фиолетовые там маркеры, там коричневые маркеры, там все, что угодно.
[03:14:16.120 --> 03:14:17.120]  Вот.
[03:14:17.120 --> 03:14:18.120]  Ладно.
[03:14:20.120 --> 03:14:21.120]  Ладно.
[03:14:21.120 --> 03:14:22.120]  Так.
[03:14:22.120 --> 03:14:24.120]  Давайте не будем тратить время, а то сейчас затянется еще.
[03:14:24.120 --> 03:14:25.120]  Вот.
[03:14:25.120 --> 03:14:27.120]  И значит, оказалось еще.
[03:14:27.120 --> 03:14:30.120]  Потому что оказалось еще всякие спецэффекты.
[03:14:30.120 --> 03:14:35.120]  Потому что отношения между людьми всякие, потому что вот та же, ну вот.
[03:14:35.120 --> 03:14:40.120]  Потому что, например, там есть какая-нибудь алимистика, которая просто не хочет быть тестировщицей.
[03:14:40.120 --> 03:14:42.120]  А кто-то наоборот.
[03:14:42.120 --> 03:14:43.120]  Ну вот.
[03:14:43.120 --> 03:14:44.120]  А кто-то наоборот.
[03:14:44.120 --> 03:14:45.120]  Услышавших, ну вот.
[03:14:45.120 --> 03:14:47.120]  Там не хочет, там, ну вот.
[03:14:47.120 --> 03:14:49.120]  А кто-то наоборот.
[03:14:50.120 --> 03:14:51.120]  Ну вот.
[03:14:51.120 --> 03:14:52.120]  Нет.
[03:14:52.120 --> 03:14:53.120]  А кто-то говорит.
[03:14:53.120 --> 03:14:54.120]  Нет.
[03:14:54.120 --> 03:14:55.120]  А нота.
[03:14:55.120 --> 03:14:58.120]  Но с другой стороны, потом какая-нибудь та же самая Алиса или кто-нибудь еще в этом роде.
[03:14:58.120 --> 03:15:00.120]  Неожиданно заявляю.
[03:15:00.120 --> 03:15:01.120]  Слушайте.
[03:15:01.120 --> 03:15:02.120]  Нет.
[03:15:02.120 --> 03:15:03.120]  Ну тестирование.
[03:15:03.120 --> 03:15:04.120]  Нет.
[03:15:04.120 --> 03:15:05.120]  Ну тестирование.
[03:15:05.120 --> 03:15:06.120]  Знаете, что мне не нравится?
[03:15:06.120 --> 03:15:07.120]  Нет.
[03:15:07.120 --> 03:15:08.120]  Можно, конечно.
[03:15:08.120 --> 03:15:09.120]  Ну просто я себе представлю, что вот этот вот козел Жора там.
[03:15:09.120 --> 03:15:10.120]  Нет.
[03:15:10.120 --> 03:15:11.120]  Нет среди вас Жора.
[03:15:11.120 --> 03:15:12.120]  Нет.
[03:15:12.120 --> 03:15:13.120]  Нет.
[03:15:13.120 --> 03:15:14.120]  Нет.
[03:15:14.120 --> 03:15:15.120]  Нет.
[03:15:15.120 --> 03:15:16.120]  Ну просто.
[03:15:16.120 --> 03:15:18.120]  Все в телевизоре.
[03:15:18.120 --> 03:15:20.120]  Ну все в телевизоре, да.
[03:15:20.120 --> 03:15:21.120]  Ну ладно.
[03:15:26.120 --> 03:15:27.120]  Да, прости, там Жора.
[03:15:27.120 --> 03:15:28.120]  Да, мы не вели тебя в виду.
[03:15:28.120 --> 03:15:29.120]  Да.
[03:15:29.120 --> 03:15:30.120]  Вот.
[03:15:30.120 --> 03:15:31.120]  Ну короче говоря.
[03:15:31.120 --> 03:15:33.120]  Ну просто если, просто если, знаете, что это такое, что это?
[03:15:33.120 --> 03:15:36.120]  То есть если, если я буду проигрывать, этот козел Жора будет меня тестировать.
[03:15:37.120 --> 03:15:39.120]  Это что за безобразие вообще?
[03:15:39.120 --> 03:15:40.120]  Да я вам тут всем.
[03:15:40.120 --> 03:15:42.120]  Я вам тут устрою.
[03:15:42.120 --> 03:15:43.120]  Я вам тут все раскисую.
[03:15:43.120 --> 03:15:46.120]  Я, в общем, короче говоря, вы посчитали ущерб.
[03:15:46.120 --> 03:15:48.120]  И поняли, что он равен D.
[03:15:49.120 --> 03:15:51.120]  То есть D, Алиса и Жора.
[03:15:51.120 --> 03:15:52.120]  Да.
[03:15:53.120 --> 03:15:55.120]  Вы считали, сколько Алиса разнесет?
[03:15:56.120 --> 03:16:06.120]  Мы, это означает, мы посчитали, значит, сколько еще ярости будет, если выяснится, что Алиса окажется программистом, а Жора окажется тестировщиком.
[03:16:08.120 --> 03:16:09.120]  Но ее устроит.
[03:16:09.120 --> 03:16:11.120]  Если Алиса будет тестировать Жору, ее устроит.
[03:16:11.120 --> 03:16:14.120]  А вот если Жора будет тестировать Алису, Алиса взводит.
[03:16:15.120 --> 03:16:16.120]  Чего еще раз?
[03:16:16.120 --> 03:16:17.120]  Что такое D?
[03:16:17.120 --> 03:16:18.120]  D.
[03:16:18.120 --> 03:16:19.120]  Значит, еще раз.
[03:16:19.120 --> 03:16:20.120]  Формально, D.
[03:16:20.120 --> 03:16:29.120]  Для двух людей, например, Алиса и Жора, оказывается, что если Алиса окажется программистом, а Жора окажется тестировщиком, то тогда ярость увеличится на вот эту величину.
[03:16:30.120 --> 03:16:31.120]  Именно так.
[03:16:31.120 --> 03:16:35.120]  Но если Алиса окажется тестировщиком, а Жора окажется программистом, то будет все нормально.
[03:16:36.120 --> 03:16:38.120]  А если они будут в одной весовой категории, то тоже нормально?
[03:16:38.120 --> 03:16:39.120]  Тоже нормально.
[03:16:40.120 --> 03:16:41.120]  А что за черт?
[03:16:42.120 --> 03:16:45.120]  Насколько люди будут недовольны, если их поселят в разные команды?
[03:16:45.120 --> 03:16:46.120]  Да.
[03:16:46.120 --> 03:16:48.120]  Зачем столько отношений?
[03:16:49.120 --> 03:16:52.120]  Нет, потому что мне просто хочется как можно больше различных.
[03:16:52.120 --> 03:16:56.120]  Хотя вот как мы сейчас увидим метод решения, то есть видим, просто не все работает.
[03:16:57.120 --> 03:17:02.120]  А C не будет, как мы говорили, что Леша будет злиться на половину?
[03:17:02.120 --> 03:17:04.120]  Не-не-не-не, обратите внимание.
[03:17:04.120 --> 03:17:06.120]  Тут будет плохо, если они...
[03:17:06.120 --> 03:17:08.120]  А, ну в принципе, да.
[03:17:09.120 --> 03:17:10.120]  C это как все давно жить на два.
[03:17:10.120 --> 03:17:15.120]  Да, но здесь давайте D оставим, потому что тут будет важный момент, поэтому мне хочется...
[03:17:15.120 --> 03:17:16.120]  Мы всегда оставим C.
[03:17:17.120 --> 03:17:18.120]  Ну да, ну хорошо, можем.
[03:17:18.120 --> 03:17:19.120]  Хорошо, да.
[03:17:19.120 --> 03:17:20.120]  Можем D.
[03:17:20.120 --> 03:17:22.120]  Хорошо, давайте D сделаем зеленый тогда.
[03:17:22.120 --> 03:17:23.120]  Вот так.
[03:17:24.120 --> 03:17:25.120]  Вот.
[03:17:26.120 --> 03:17:28.120]  D, D, Лиса и Жора больше 0.
[03:17:28.120 --> 03:17:29.120]  Хорошо.
[03:17:30.120 --> 03:17:31.120]  Знаете, хорошо.
[03:17:31.120 --> 03:17:34.120]  Ну а теперь вот такие вот у вас пришли сведения.
[03:17:34.120 --> 03:17:35.120]  Сведений много.
[03:17:35.120 --> 03:17:41.120]  Более того, каждое сведение, более того, одного и того же человека может касаться несколько таких сведений.
[03:17:42.120 --> 03:17:45.120]  Ну потому что кто-то может плакать и от этого, и от этого, и от этого в принципе.
[03:17:48.120 --> 03:17:50.120]  Ну да, ему в принципе не нравится.
[03:17:52.120 --> 03:17:53.120]  Нет, в смысле, потому что его...
[03:17:53.120 --> 03:17:58.120]  Ну нет, вы просто его устраиваете и высвоит то, как это происходит сейчас.
[03:18:01.120 --> 03:18:02.120]  Разве C не сводится к D?
[03:18:03.120 --> 03:18:04.120]  Сводится, сводится.
[03:18:04.120 --> 03:18:07.120]  Вот поэтому я зеленым перерисовал, что C на самом деле сводится к двум D.
[03:18:08.120 --> 03:18:09.120]  Хорошо.
[03:18:10.120 --> 03:18:11.120]  Да.
[03:18:11.120 --> 03:18:12.120]  Ну вот.
[03:18:12.120 --> 03:18:13.120]  Но теперь возникает вопрос.
[03:18:14.120 --> 03:18:15.120]  Но теперь вот возникает вопрос.
[03:18:15.120 --> 03:18:18.120]  Как же такую задачу решать?
[03:18:19.120 --> 03:18:22.120]  И казалось бы, причем тут потоки вообще, да?
[03:18:25.120 --> 03:18:26.120]  Ну вот.
[03:18:26.120 --> 03:18:31.120]  Да, но это типичная задача, где надо строить сеть, но искать в ней не поток, а разрез.
[03:18:31.120 --> 03:18:32.120]  Одно и то же.
[03:18:32.120 --> 03:18:33.120]  Нет.
[03:18:34.120 --> 03:18:35.120]  Нет.
[03:18:35.120 --> 03:18:36.120]  Ну как бы идея на это не одно и то же.
[03:18:36.120 --> 03:18:39.120]  Потому что разрез теоретически можно найти как-нибудь еще.
[03:18:40.120 --> 03:18:41.120]  А, это реально разрез.
[03:18:41.120 --> 03:18:42.120]  Да.
[03:18:42.120 --> 03:18:46.120]  То есть в данном случае наша задача построить сеть, в которой минимальный...
[03:18:47.120 --> 03:18:48.120]  Ну в идеале...
[03:18:48.120 --> 03:18:50.120]  То есть идеальная ситуация такая здесь.
[03:18:50.120 --> 03:18:53.120]  Мы построим сеть, в которой пропускная способность каждый...
[03:18:53.120 --> 03:18:56.120]  То есть каждый разрез это будет символизировать, как мы пытаемся поделить.
[03:18:57.120 --> 03:19:01.120]  А пропускная способность этого разреза будет соответствовать ярости,
[03:19:01.120 --> 03:19:03.120]  которая получится именно в этом разрезе.
[03:19:03.120 --> 03:19:06.120]  И тогда ваша задача будет найти просто минимальный разрез.
[03:19:07.120 --> 03:19:10.120]  То есть там отдельная песня, что он ищется максимальным потоком,
[03:19:10.120 --> 03:19:13.120]  но это уже там в черном ящике написано.
[03:19:15.120 --> 03:19:19.120]  То есть если вы придумаете как искать минимальный разрез без потоков лучше,
[03:19:19.120 --> 03:19:21.120]  то значит вам вообще нет.
[03:19:21.120 --> 03:19:23.120]  Тогда эта задача перестанет быть задачей на потоке.
[03:19:24.120 --> 03:19:26.120]  Но пока правда, к сожалению,
[03:19:27.120 --> 03:19:30.120]  оптимальный известный алгоритм поиска минразреза сводится к потоку, поэтому увы.
[03:19:31.120 --> 03:19:32.120]  Вот.
[03:19:32.120 --> 03:19:34.120]  Итак, как же мы это будем делать?
[03:19:34.120 --> 03:19:35.120]  А очень просто.
[03:19:35.120 --> 03:19:37.120]  Значит, смотрите, товарищи...
[03:19:37.120 --> 03:19:39.120]  Нет, так-то поток же сводится к разрезу?
[03:19:40.120 --> 03:19:41.120]  Нет.
[03:19:41.120 --> 03:19:42.120]  Ну смотри, как это?
[03:19:42.120 --> 03:19:44.120]  Ну поток обычно ищется вот как поток.
[03:19:44.120 --> 03:19:45.120]  Разрез?
[03:19:45.120 --> 03:19:47.120]  Я имею в виду, что поток сводится к задачи разреза в целом.
[03:19:48.120 --> 03:19:49.120]  Если будет возможность...
[03:19:49.120 --> 03:19:50.120]  Ну нет, не совсем...
[03:19:50.120 --> 03:19:51.120]  Ну как сказать?
[03:19:51.120 --> 03:19:52.120]  Если бы в чиселку получить...
[03:19:52.120 --> 03:19:54.120]  Да, если в чиселку, то да.
[03:19:54.120 --> 03:19:56.120]  В рёбра, то кажется, что нет.
[03:19:56.120 --> 03:19:58.120]  То есть нет, там отдельная песня, можно задуматься.
[03:19:58.120 --> 03:19:59.120]  Предположим, что ты там...
[03:19:59.120 --> 03:20:01.120]  У тебя есть какой-то там...
[03:20:01.120 --> 03:20:02.120]  Выражая как это?
[03:20:02.120 --> 03:20:03.120]  Черный ящик?
[03:20:03.120 --> 03:20:04.120]  Или выражаясь как-то от логики?
[03:20:04.120 --> 03:20:05.120]  Оракул?
[03:20:06.120 --> 03:20:07.120]  Вот это.
[03:20:07.120 --> 03:20:08.120]  Который...
[03:20:08.120 --> 03:20:10.120]  Которому ты можешь подсовывать там любой разрез,
[03:20:10.120 --> 03:20:12.120]  он тебе с небес по факсу присылает его пропускную там...
[03:20:13.120 --> 03:20:14.120]  Нет.
[03:20:14.120 --> 03:20:15.120]  Способность я сам могу?
[03:20:15.120 --> 03:20:16.120]  Нет, хотя нет.
[03:20:16.120 --> 03:20:17.120]  То есть, точнее так.
[03:20:17.120 --> 03:20:18.120]  Допустим, у тебя есть оракул,
[03:20:18.120 --> 03:20:21.120]  который по сети сообщает тебе величину минимального разреза.
[03:20:21.120 --> 03:20:22.120]  Тогда будет интересно, да.
[03:20:22.120 --> 03:20:24.120]  Там какой орхет тогда тебе нужен?
[03:20:24.120 --> 03:20:26.120]  Сколько таких запросов тебе надо,
[03:20:26.120 --> 03:20:29.120]  чтобы вообще хотя бы найти сам минимальный разрез,
[03:20:29.120 --> 03:20:30.120]  во-первых.
[03:20:30.120 --> 03:20:32.120]  А во-вторых, еще и построить по нему поток.
[03:20:32.120 --> 03:20:34.120]  Поток же не только сообщает величину, но и говорит сам поток.
[03:20:34.120 --> 03:20:37.120]  По идее оракул тогда должен говорить и разрез сам тоже.
[03:20:38.120 --> 03:20:39.120]  Ну, допустим.
[03:20:39.120 --> 03:20:40.120]  Допустим.
[03:20:40.120 --> 03:20:41.120]  Просто можно ли по этому...
[03:20:41.120 --> 03:20:43.120]  И настолько быстро из этого восстановляется поток.
[03:20:43.120 --> 03:20:45.120]  Ну да, ну да, ну да.
[03:20:46.120 --> 03:20:47.120]  Вот.
[03:20:47.120 --> 03:20:48.120]  Ну так вот, ладно.
[03:20:48.120 --> 03:20:49.120]  Итак.
[03:20:49.120 --> 03:20:50.120]  Как строим сеть?
[03:20:50.120 --> 03:20:51.120]  Ну, естественно, каждый участник у нас,
[03:20:52.120 --> 03:20:54.120]  нашего стартапа, значит, это вершина.
[03:20:54.120 --> 03:20:58.120]  Также мы вводим, допустим...
[03:20:59.120 --> 03:21:00.120]  Ладно, правильно, видимо, я сделал так.
[03:21:00.120 --> 03:21:02.120]  Вводим и сток.
[03:21:02.120 --> 03:21:03.120]  Сток.
[03:21:03.120 --> 03:21:04.120]  А, ну да.
[03:21:04.120 --> 03:21:05.120]  А, нет.
[03:21:05.120 --> 03:21:06.120]  Черт.
[03:21:06.120 --> 03:21:07.120]  Черт.
[03:21:07.120 --> 03:21:08.120]  Так я что-то с цветами напутал, да?
[03:21:08.120 --> 03:21:11.120]  Нет, давайте вот, чтобы с цветами все соответственно было все-таки.
[03:21:14.120 --> 03:21:15.120]  Или ничего.
[03:21:15.120 --> 03:21:18.120]  Ну, у нас проблема в том, что типа дискретно изменяется.
[03:21:18.120 --> 03:21:20.120]  Если петь чуть-чуть программиста,
[03:21:20.120 --> 03:21:22.120]  то он сразу плачет сильно, а если не чуть-чуть,
[03:21:22.120 --> 03:21:25.120]  а если вообще не программист, то плачет на ноль.
[03:21:25.120 --> 03:21:26.120]  Почему?
[03:21:26.120 --> 03:21:28.120]  Нет, ну в смысле, в смысле, не понял.
[03:21:28.120 --> 03:21:30.120]  Нет, в данном случае это говорит о том,
[03:21:30.120 --> 03:21:32.120]  что если петь программиста, он не плачет вообще.
[03:21:32.120 --> 03:21:34.120]  Но если петь тестировщика, он плачет и жестко, да.
[03:21:34.120 --> 03:21:36.120]  Ну, к сожалению, у нас такая команда...
[03:21:36.120 --> 03:21:37.120]  Ну, у нас как бы все просто.
[03:21:37.120 --> 03:21:39.120]  У нас человек либо как бы либо программист, либо тестировщик.
[03:21:39.120 --> 03:21:41.120]  Вот такие у нас два отдела.
[03:21:41.120 --> 03:21:43.120]  По крайней мере, так изначально выглядит.
[03:21:43.120 --> 03:21:45.120]  То есть там другой вопрос шел, понятно.
[03:21:45.120 --> 03:21:47.120]  То есть тестировщики там, возможно, тоже все так ходят.
[03:21:47.120 --> 03:21:50.120]  Как минимум тестовые примеры автоматические.
[03:21:50.120 --> 03:21:52.120]  Но как бы понятно.
[03:21:54.120 --> 03:21:56.120]  Ну да, но это уже там, да.
[03:21:56.120 --> 03:21:58.120]  Ну, у нас вот так.
[03:21:58.120 --> 03:22:00.120]  Ну, как сказать, мы люди простые,
[03:22:00.120 --> 03:22:02.120]  у нас в стартапе обычно.
[03:22:02.120 --> 03:22:04.120]  То есть вы же там,
[03:22:04.120 --> 03:22:06.120]  не начинайте там приходить
[03:22:06.120 --> 03:22:08.120]  и разговаривать с ними в каких-то там
[03:22:08.120 --> 03:22:10.120]  умных языках, там каких-то там
[03:22:10.120 --> 03:22:12.120]  с полудепутатскими диалектами
[03:22:12.120 --> 03:22:14.120]  какими-то вот этими всеми.
[03:22:14.120 --> 03:22:16.120]  Так.
[03:22:18.120 --> 03:22:20.120]  Вот, значит, смотрите.
[03:22:20.120 --> 03:22:22.120]  То есть вот будем считать, что давайте,
[03:22:22.120 --> 03:22:24.120]  вот у меня есть исток, он будет соответствовать
[03:22:24.120 --> 03:22:26.120]  как бы и доля S,
[03:22:26.120 --> 03:22:28.120]  у меня будет соответствовать доле
[03:22:28.120 --> 03:22:30.120]  программистов.
[03:22:32.120 --> 03:22:34.120]  А
[03:22:34.120 --> 03:22:36.120]  красная T будет соответствовать
[03:22:36.120 --> 03:22:38.120]  доле тестировщика.
[03:22:40.120 --> 03:22:42.120]  Но это идейно.
[03:22:42.120 --> 03:22:44.120]  То есть я, например, да, цель у нас
[03:22:44.120 --> 03:22:46.120]  составить такой граф, чтобы
[03:22:46.120 --> 03:22:48.120]  у любого разреза была пропускная способность
[03:22:48.120 --> 03:22:50.120]  равная ярости при соответствующем
[03:22:50.120 --> 03:22:52.120]  разбиении в стартапе.
[03:22:52.120 --> 03:22:54.120]  Как это сделать? Ну, потому что вот
[03:22:54.120 --> 03:22:56.120]  как вот добиться того,
[03:22:56.120 --> 03:22:58.120]  например, пусть у меня есть Петя.
[03:22:58.120 --> 03:23:00.120]  Ну, давайте
[03:23:00.120 --> 03:23:02.120]  себе вот вообразим вот
[03:23:02.120 --> 03:23:04.120]  такой разрезик.
[03:23:04.120 --> 03:23:06.120]  И вот нам очень хочется, чтобы вот этот
[03:23:06.120 --> 03:23:08.120]  вот Петя, вот он допустим,
[03:23:08.120 --> 03:23:10.120]  да, а нет, так неправильно.
[03:23:10.120 --> 03:23:12.120]  Так, Петя у нас синенький,
[03:23:12.120 --> 03:23:14.120]  поэтому пишем вот так.
[03:23:14.120 --> 03:23:16.120]  Так, вот.
[03:23:16.120 --> 03:23:18.120]  Вот.
[03:23:18.120 --> 03:23:20.120]  Да. Значит,
[03:23:20.120 --> 03:23:22.120]  соответственно, Петя синенький.
[03:23:22.120 --> 03:23:24.120]  И теперь нам хочется, что если Петя оказался
[03:23:24.120 --> 03:23:26.120]  в доле тестировщиков, он плачет,
[03:23:26.120 --> 03:23:28.120]  а если в доле
[03:23:28.120 --> 03:23:30.120]  программистов, то нет. Как нам этого добиться?
[03:23:32.120 --> 03:23:34.120]  Наоборот, очень понятно.
[03:23:34.120 --> 03:23:36.120]  Надо просто нарисовать вот
[03:23:36.120 --> 03:23:38.120]  такое ребро из истока
[03:23:38.120 --> 03:23:40.120]  третью пропускной способности
[03:23:40.120 --> 03:23:42.120]  о Петя.
[03:23:42.120 --> 03:23:44.120]  Все.
[03:23:44.120 --> 03:23:46.120]  Ну, да.
[03:23:46.120 --> 03:23:48.120]  То есть тогда, видите, то есть это ребро как бы
[03:23:48.120 --> 03:23:50.120]  войдет в разрез, если
[03:23:50.120 --> 03:23:52.120]  Петя будет тестировщиком и не войдет,
[03:23:52.120 --> 03:23:54.120]  если окажется программистом.
[03:23:54.120 --> 03:23:56.120]  Вот, видите, очень удобно.
[03:23:56.120 --> 03:23:58.120]  Так, что у нас еще есть?
[03:23:58.120 --> 03:24:00.120]  Так, ну
[03:24:00.120 --> 03:24:02.120]  Б это симметричный случай.
[03:24:02.120 --> 03:24:04.120]  Что надо сделать с Васей?
[03:24:04.120 --> 03:24:06.120]  Сделать его тестировщиком.
[03:24:06.120 --> 03:24:08.120]  Как его сделать тестировщиком?
[03:24:10.120 --> 03:24:12.120]  Привести в сток.
[03:24:12.120 --> 03:24:14.120]  Ага, да.
[03:24:14.120 --> 03:24:16.120]  Вот. Привести ребро
[03:24:16.120 --> 03:24:18.120]  из Васи в сток
[03:24:18.120 --> 03:24:20.120]  с пропускной
[03:24:20.120 --> 03:24:22.120]  способностью Б Вася.
[03:24:24.120 --> 03:24:26.120]  Вот.
[03:24:26.120 --> 03:24:28.120]  Так.
[03:24:28.120 --> 03:24:30.120]  Вот теперь давайте посмотрим.
[03:24:30.120 --> 03:24:32.120]  А вот теперь интересно.
[03:24:32.120 --> 03:24:34.120]  Вот у нас теперь произошла
[03:24:34.120 --> 03:24:36.120]  радость с Алисой и Жорой.
[03:24:36.120 --> 03:24:38.120]  Ну, вот давайте
[03:24:38.120 --> 03:24:40.120]  допустим, вот тут я нарисую, вот это у нас
[03:24:40.120 --> 03:24:42.120]  где-то здесь будет Алиса.
[03:24:42.120 --> 03:24:44.120]  А вот это будет Жора.
[03:24:46.120 --> 03:24:48.120]  Как нам теперь, то есть надо теперь сделать так,
[03:24:48.120 --> 03:24:50.120]  чтобы у нас
[03:24:50.120 --> 03:24:52.120]  Дэшка,
[03:24:52.120 --> 03:24:54.120]  значит, то есть надо
[03:24:54.120 --> 03:24:56.120]  теперь сделать так, чтобы
[03:24:56.120 --> 03:24:58.120]  значит, если Алиса оказалась
[03:24:58.120 --> 03:25:00.120]  программистом А Жора тестировщиком,
[03:25:00.120 --> 03:25:02.120]  то мы, то тогда значит
[03:25:02.120 --> 03:25:04.120]  плач сработал.
[03:25:04.120 --> 03:25:06.120]  Если нет, то нет.
[03:25:06.120 --> 03:25:08.120]  В любом ином случае нет.
[03:25:08.120 --> 03:25:10.120]  Как нам это сделать?
[03:25:10.120 --> 03:25:12.120]  Да, тут очень важно, что мы здесь проводим
[03:25:12.120 --> 03:25:14.120]  именно ориентированное ребро
[03:25:14.120 --> 03:25:16.120]  именно из Алисы в именно Жору.
[03:25:16.120 --> 03:25:18.120]  Соответствующей пропускной
[03:25:18.120 --> 03:25:20.120]  способностью
[03:25:20.120 --> 03:25:22.120]  Д Алиса и Жора.
[03:25:22.120 --> 03:25:24.120]  Вот.
[03:25:24.120 --> 03:25:26.120]  То есть обратите внимание, видите?
[03:25:26.120 --> 03:25:28.120]  То есть если Алиса программист
[03:25:28.120 --> 03:25:30.120]  Жора тестировщик, то это ребро в разрез входит.
[03:25:30.120 --> 03:25:32.120]  Если Алиса и Жора оказались
[03:25:32.120 --> 03:25:34.120]  оба тестировщиками либо программистами,
[03:25:34.120 --> 03:25:36.120]  то ребро в разрез не входит.
[03:25:36.120 --> 03:25:38.120]  Но если Алиса оказалась
[03:25:38.120 --> 03:25:40.120]  тестировщиком и Жора программистом,
[03:25:40.120 --> 03:25:42.120]  то это ребро в разрез
[03:25:42.120 --> 03:25:44.120]  внимание тоже не входит.
[03:25:46.120 --> 03:25:48.120]  Понимаете, да?
[03:25:48.120 --> 03:25:50.120]  Потому что ребра, которые идут отсюда-сюда,
[03:25:50.120 --> 03:25:52.120]  нас в разрезе не интересуют.
[03:25:52.120 --> 03:25:54.120]  Вот это очень важно.
[03:25:54.120 --> 03:25:56.120]  Поэтому я хотел обратить на это внимание.
[03:25:56.120 --> 03:25:58.120]  Вот.
[03:25:58.120 --> 03:26:00.120]  Именно поэтому, когда у вас есть
[03:26:00.120 --> 03:26:02.120]  вот это симметричное отношение,
[03:26:02.120 --> 03:26:04.120]  что Леша и Слава просто дружат,
[03:26:04.120 --> 03:26:06.120]  то тогда нужно, чтобы Леша и Слава...
[03:26:06.120 --> 03:26:08.120]  То есть тогда
[03:26:08.120 --> 03:26:10.120]  Лешу и Славу...
[03:26:10.120 --> 03:26:12.120]  Ну тогда пополам делить не нужно, короче.
[03:26:12.120 --> 03:26:14.120]  Нет, пополам не нужно делить, боже упаси.
[03:26:14.120 --> 03:26:16.120]  Надо просто нарисовать
[03:26:16.120 --> 03:26:18.120]  фактически два ребра.
[03:26:18.120 --> 03:26:20.120]  В обе стороны.
[03:26:20.120 --> 03:26:22.120]  И тогда если они окажутся в разных отделах,
[03:26:22.120 --> 03:26:24.120]  то тогда
[03:26:26.120 --> 03:26:28.120]  сработает ровно одно.
[03:26:28.120 --> 03:26:30.120]  Если у нас ребро не в какую сторону,
[03:26:30.120 --> 03:26:32.120]  она разве не интересится на комминус?
[03:26:32.120 --> 03:26:34.120]  Нет-нет-нет.
[03:26:34.120 --> 03:26:36.120]  У нас нет никаких обратных ребер.
[03:26:36.120 --> 03:26:38.120]  Мы строим сеть.
[03:26:38.120 --> 03:26:40.120]  У нас из ТФС ребро?
[03:26:40.120 --> 03:26:42.120]  Нет.
[03:26:42.120 --> 03:26:44.120]  Это с минусом берется,
[03:26:44.120 --> 03:26:46.120]  когда мы говорим о потоках,
[03:26:46.120 --> 03:26:48.120]  но не о пропускных способностях.
[03:26:48.120 --> 03:26:50.120]  То есть вполне может быть,
[03:26:50.120 --> 03:26:52.120]  что у вас есть труба,
[03:26:52.120 --> 03:26:54.120]  по которой вы течете отсюда-сюда,
[03:26:54.120 --> 03:26:56.120]  а есть труба, которая течет отсюда-сюда.
[03:26:58.120 --> 03:27:00.120]  Ну то есть две стороны.
[03:27:00.120 --> 03:27:02.120]  И более того, пропускные способности могут различать.
[03:27:02.120 --> 03:27:04.120]  Может быть так, что в одну сторону у вас 5 полос,
[03:27:04.120 --> 03:27:06.120]  а в другую 3.
[03:27:06.120 --> 03:27:08.120]  Пропускная способность это только...
[03:27:08.120 --> 03:27:10.120]  Это сумма тех, которые...
[03:27:10.120 --> 03:27:12.120]  Нет.
[03:27:12.120 --> 03:27:14.120]  Пропустая способность это...
[03:27:14.120 --> 03:27:16.120]  Это такое чиселка на ребре.
[03:27:16.120 --> 03:27:18.120]  Это сколько потока может в единицу времени
[03:27:18.120 --> 03:27:20.120]  этому ребру течь?
[03:27:20.120 --> 03:27:22.120]  Это...
[03:27:22.120 --> 03:27:24.120]  Пропускная способность для разреза.
[03:27:24.120 --> 03:27:26.120]  Нет, пропускная способность разреза это мы перебираем
[03:27:26.120 --> 03:27:28.120]  все ребра, которые ведут из доли С в долю Т
[03:27:28.120 --> 03:27:30.120]  и суммируем их пропускные способности.
[03:27:30.120 --> 03:27:32.120]  Вот так.
[03:27:32.120 --> 03:27:34.120]  То есть тогда в эту...
[03:27:34.120 --> 03:27:36.120]  То есть если эту пару разрез разлучит,
[03:27:36.120 --> 03:27:38.120]  то ровно одно из этих ребер в разрез войдет.
[03:27:38.120 --> 03:27:40.120]  Поэтому получится то,
[03:27:40.120 --> 03:27:42.120]  что надо.
[03:27:42.120 --> 03:27:44.120]  То есть вам останется только построить такую сеть,
[03:27:44.120 --> 03:27:46.120]  найти в ней минимальный разрез.
[03:27:46.120 --> 03:27:48.120]  И, скорее всего, потоком или каким-то другим способом.
[03:27:48.120 --> 03:27:50.120]  И, соответственно, победить.
[03:27:52.120 --> 03:27:54.120]  То есть вот...
[03:27:54.120 --> 03:27:56.120]  Часто дают задачи на поток,
[03:27:56.120 --> 03:27:58.120]  которые правильно называть задачами
[03:27:58.120 --> 03:28:00.120]  на разрез.
[03:28:00.120 --> 03:28:02.120]  Вот.
[03:28:02.120 --> 03:28:04.120]  То есть вот такая типичная
[03:28:04.120 --> 03:28:06.120]  ситуация.
[03:28:06.120 --> 03:28:08.120]  В принципе,
[03:28:08.120 --> 03:28:10.120]  там начинаются вообще всякие
[03:28:10.120 --> 03:28:12.120]  умные лайфхаки в духе,
[03:28:12.120 --> 03:28:14.120]  что...
[03:28:14.120 --> 03:28:16.120]  То есть иногда
[03:28:16.120 --> 03:28:18.120]  там надо придумать
[03:28:18.120 --> 03:28:20.120]  что-то в духе, что
[03:28:20.120 --> 03:28:22.120]  если, например...
[03:28:22.120 --> 03:28:24.120]  Иногда нам говорят, что есть вот
[03:28:24.120 --> 03:28:26.120]  уровень заприти... То есть как бы
[03:28:26.120 --> 03:28:28.120]  будет плакать, а есть уровень, что Петю нельзя
[03:28:28.120 --> 03:28:30.120]  сделать программистом, потому что он там
[03:28:30.120 --> 03:28:32.120]  молодец.
[03:28:32.120 --> 03:28:34.120]  Но просто известно, что Петя должен быть
[03:28:34.120 --> 03:28:36.120]  глава отдела программистов тут без вариантов.
[03:28:38.120 --> 03:28:40.120]  Ну вот. Как тогда такой запрет сделать?
[03:28:40.120 --> 03:28:42.120]  Ну...
[03:28:42.120 --> 03:28:44.120]  Зачем?
[03:28:44.120 --> 03:28:46.120]  Ну да.
[03:28:46.120 --> 03:28:48.120]  То есть тогда просто нарисовать штраф
[03:28:48.120 --> 03:28:50.120]  плюс бесконечный.
[03:28:50.120 --> 03:28:52.120]  Ну да.
[03:28:52.120 --> 03:28:54.120]  Можно считать, что да.
[03:28:54.120 --> 03:28:56.120]  Можно отправить Петю в сток.
[03:28:56.120 --> 03:28:58.120]  Но чаще просто удобнее бывает вот так.
[03:28:58.120 --> 03:29:00.120]  Потому что ровно так же, если нужно запретить
[03:29:00.120 --> 03:29:02.120]  вот такую ситуацию, например, то тоже выгодно
[03:29:02.120 --> 03:29:04.120]  просто добавить по ребро плюс
[03:29:04.120 --> 03:29:06.120]  той способности плюс бесконечно.
[03:29:06.120 --> 03:29:08.120]  А как сделать так, чтобы в одном отделе было ровно
[03:29:08.120 --> 03:29:10.120]  не искать?
[03:29:10.120 --> 03:29:12.120]  Вот это такими методами
[03:29:12.120 --> 03:29:14.120]  боюсь никак.
[03:29:14.120 --> 03:29:16.120]  Ну или мне слёто непонятно.
[03:29:16.120 --> 03:29:18.120]  То есть, к сожалению, да. То есть этот метод
[03:29:18.120 --> 03:29:20.120]  не всесилен. Потому что в идеале наоборот
[03:29:20.120 --> 03:29:22.120]  бы хотелось, что там какие-то люди
[03:29:22.120 --> 03:29:24.120]  наоборот там не дружат. Ну ладно, не дружбу
[03:29:24.120 --> 03:29:26.120]  мы, видимо, можем вот так вот.
[03:29:26.120 --> 03:29:28.120]  Нет, точнее наоборот. Какие-то люди
[03:29:28.120 --> 03:29:30.120]  очень хотят быть в разных отделах,
[03:29:30.120 --> 03:29:32.120]  например, и если вы их пихнёте
[03:29:32.120 --> 03:29:34.120]  в один отдел, они будут плакать.
[03:29:34.120 --> 03:29:36.120]  Да, и как так? Никак.
[03:29:36.120 --> 03:29:38.120]  По крайней мере, таким методом никак.
[03:29:38.120 --> 03:29:40.120]  Ну может быть там
[03:29:40.120 --> 03:29:42.120]  может такими не знаю, но тут вот
[03:29:42.120 --> 03:29:44.120]  то есть, к сожалению, да,
[03:29:44.120 --> 03:29:46.120]  задача в этом сфере не всесильна.
[03:29:46.120 --> 03:29:48.120]  То есть тут, к сожалению,
[03:29:48.120 --> 03:29:50.120]  работают только специальным образом
[03:29:50.120 --> 03:29:52.120]  подобранные ограничения.
[03:29:52.120 --> 03:29:54.120]  Сейчас я правильно понимаю, что
[03:29:54.120 --> 03:29:56.120]  с того, что вы нарисовали, нельзя
[03:29:56.120 --> 03:29:58.120]  из С попасть в Т по этой сети?
[03:29:58.120 --> 03:30:00.120]  Почему? Вполне можно.
[03:30:00.120 --> 03:30:02.120]  Потому что из С вы там
[03:30:02.120 --> 03:30:04.120]  попадаете в Петью, из Пети попадаете
[03:30:04.120 --> 03:30:06.120]  куда-то там, как-то вот так и попадаете
[03:30:06.120 --> 03:30:08.120]  в Т вполне.
[03:30:08.120 --> 03:30:10.120]  Нет, может так, что не можете, это означает,
[03:30:10.120 --> 03:30:12.120]  что у вас найдётся разрез ноль.
[03:30:12.120 --> 03:30:14.120]  Это означает, что вы можете
[03:30:14.120 --> 03:30:16.120]  вообще разбить
[03:30:16.120 --> 03:30:18.120]  всех на отдел и так,
[03:30:18.120 --> 03:30:20.120]  что вообще никаких проблем не будет.
[03:30:20.120 --> 03:30:22.120]  Да, логично.
[03:30:22.120 --> 03:30:24.120]  Ну просто будет у вас размер ноль,
[03:30:24.120 --> 03:30:26.120]  это разрез ноль, это нормально.
[03:30:26.120 --> 03:30:28.120]  То есть понятно, что если у вас этим всем
[03:30:28.120 --> 03:30:30.120]  требования ограничиваются, давайте вот аккуратненько
[03:30:30.120 --> 03:30:32.120]  эту линию проведём и возвращаемся.
[03:30:32.120 --> 03:30:34.120]  То есть давайте Пети будут программистом,
[03:30:34.120 --> 03:30:36.120]  все будут тестировщиками, всё хорошо.
[03:30:38.120 --> 03:30:40.120]  Вот.
[03:30:40.120 --> 03:30:42.120]  Ну там, господи, там
[03:30:42.120 --> 03:30:44.120]  всякое там может быть.
[03:30:44.120 --> 03:30:46.120]  Ой, господи.
[03:30:46.120 --> 03:30:48.120]  А вообще стоимость
[03:30:48.120 --> 03:30:50.120]  бесконечности,
[03:30:50.120 --> 03:30:52.120]  это вообще легально в точки зрения
[03:30:52.120 --> 03:30:54.120]  определения подобия? Нет, это
[03:30:54.120 --> 03:30:56.120]  легально, потому что, как это часто в Олимпиадах,
[03:30:56.120 --> 03:30:58.120]  ты вместо плюс бесконечности напишешь 10 девятый.
[03:30:58.120 --> 03:31:00.120]  10 девятый легально,
[03:31:00.120 --> 03:31:02.120]  короче, можно поставить такое число,
[03:31:02.120 --> 03:31:04.120]  которое больше, чем всё в цену.
[03:31:04.120 --> 03:31:06.120]  Ну вполне можно.
[03:31:06.120 --> 03:31:08.120]  Ну да, да, да, да.
[03:31:08.120 --> 03:31:10.120]  Нет, там разное.
[03:31:10.120 --> 03:31:12.120]  Нет, ой, господи.
[03:31:12.120 --> 03:31:14.120]  А у нас там не сильно много времени, господи.
[03:31:14.120 --> 03:31:16.120]  Так, что я ещё хотел-то?
[03:31:16.120 --> 03:31:18.120]  А нет, ладно, просто да.
[03:31:18.120 --> 03:31:20.120]  Нет, ну ладно,
[03:31:20.120 --> 03:31:22.120]  нет, у меня, конечно, был большой соблазн,
[03:31:22.120 --> 03:31:24.120]  он прямо рассказал сразу Hard Life, конечно, да.
[03:31:24.120 --> 03:31:26.120]  Ой, это
[03:31:26.120 --> 03:31:28.120]  одна из легендарных
[03:31:28.120 --> 03:31:30.120]  задач, которые никто не решил
[03:31:30.120 --> 03:31:32.120]  на полуфинале.
[03:31:32.120 --> 03:31:34.120]  Ну,
[03:31:34.120 --> 03:31:36.120]  переводится так, да.
[03:31:36.120 --> 03:31:38.120]  Но это ладно.
[03:31:38.120 --> 03:31:40.120]  Но это ладно,
[03:31:40.120 --> 03:31:42.120]  я ещё в своё время
[03:31:42.120 --> 03:31:44.120]  расскажу.
[03:31:44.120 --> 03:31:46.120]  Но пока, на самом деле,
[03:31:46.120 --> 03:31:48.120]  нет, на эту тему можно тут ещё.
[03:31:48.120 --> 03:31:50.120]  На самом деле, удовольствие можно получить,
[03:31:50.120 --> 03:31:52.120]  не только решая именно Олимпиадные задачи,
[03:31:52.120 --> 03:31:54.120]  но и чисто математически.
[03:31:54.120 --> 03:31:56.120]  Потому что одним из моих любимых
[03:31:56.120 --> 03:31:58.120]  примеров, например, работы
[03:31:58.120 --> 03:32:00.120]  с потоками и разрезами
[03:32:00.120 --> 03:32:02.120]  является знаменитая Леммо Холла.
[03:32:02.120 --> 03:32:04.120]  Вот, кстати,
[03:32:04.120 --> 03:32:06.120]  вы на дискретке там не сталкивались ещё с такой?
[03:32:06.120 --> 03:32:08.120]  У нас не было дискретки.
[03:32:08.120 --> 03:32:10.120]  А, графов не было.
[03:32:10.120 --> 03:32:12.120]  Ну, понятно,
[03:32:12.120 --> 03:32:14.120]  ладно.
[03:32:16.120 --> 03:32:18.120]  Но просто, на самом деле,
[03:32:18.120 --> 03:32:20.120]  да, просто есть такая там,
[03:32:20.120 --> 03:32:22.120]  пока в математическом мире известная такая
[03:32:22.120 --> 03:32:24.120]  Леммо Холла, но которая вот
[03:32:24.120 --> 03:32:26.120]  очень интересна. Это тоже такой пример,
[03:32:26.120 --> 03:32:28.120]  когда доказывать её, на самом деле,
[03:32:28.120 --> 03:32:30.120]  через потоки оказывается легко, приятно.
[03:32:30.120 --> 03:32:32.120]  А в остальном случае...
[03:32:32.120 --> 03:32:34.120]  Ну, там, знаете,
[03:32:34.120 --> 03:32:36.120]  на самом деле, скажем так,
[03:32:36.120 --> 03:32:38.120]  если вы олимпиадник по информатике,
[03:32:38.120 --> 03:32:40.120]  но пришли случайно олимпиаду по математике,
[03:32:40.120 --> 03:32:42.120]  то есть классы задач, в которых вы будете иметь преимущество.
[03:32:44.120 --> 03:32:46.120]  Но там, вы же в каких-нибудь задачах на графы
[03:32:46.120 --> 03:32:48.120]  неожиданно работает идея вида запустим DFS?
[03:32:48.120 --> 03:32:50.120]  Или там, в каких-то задачах говорят,
[03:32:50.120 --> 03:32:52.120]  просто давайте посчитаем,
[03:32:52.120 --> 03:32:54.120]  там бывает какая-то счётная задача,
[03:32:54.120 --> 03:32:56.120]  и там, на самом деле, просто, если вы владеете идеологическим программированием,
[03:32:56.120 --> 03:32:58.120]  то вы там просто изобрели формулу DPS,
[03:32:58.120 --> 03:33:00.120]  доказали её, а потом честно табличку заполнили.
[03:33:00.120 --> 03:33:02.120]  Ну, там бывают такие задачи.
[03:33:04.120 --> 03:33:06.120]  Вот.
[03:33:06.120 --> 03:33:08.120]  А бывает, например, вот такая. А бывает классическая задача,
[03:33:08.120 --> 03:33:10.120]  а там, скажем, докажите Леммо Холла.
[03:33:10.120 --> 03:33:12.120]  Или она ещё известна как теория
[03:33:12.120 --> 03:33:14.120]  Леммо Холла.
[03:33:14.120 --> 03:33:16.120]  В чём задача?
[03:33:18.120 --> 03:33:20.120]  Ну, вот.
[03:33:20.120 --> 03:33:22.120]  Классическая формулировка звучит так.
[03:33:24.120 --> 03:33:26.120]  Значит, классическая формулировка
[03:33:26.120 --> 03:33:28.120]  звучит так, допустим.
[03:33:30.120 --> 03:33:32.120]  Значит, там N мальчиков
[03:33:32.120 --> 03:33:34.120]  и N девочек
[03:33:34.120 --> 03:33:36.120]  хотят пойти на бал.
[03:33:36.120 --> 03:33:38.120]  Вот. Ну и мальчики, соответственно, хотят девочек
[03:33:38.120 --> 03:33:40.120]  пригласить на бал.
[03:33:40.120 --> 03:33:42.120]  Но, как и так часто бывает,
[03:33:42.120 --> 03:33:44.120]  как говорится,
[03:33:44.120 --> 03:33:46.120]  мальчик может пригласить девочку на бал.
[03:33:46.120 --> 03:33:48.120]  Только если она ему нравится.
[03:33:48.120 --> 03:33:50.120]  Да.
[03:33:50.120 --> 03:33:52.120]  Ну, в этой задаче всё примитивно.
[03:33:52.120 --> 03:33:54.120]  То есть, как бы, мальчик – это существо
[03:33:54.120 --> 03:33:56.120]  примитивное. Ему девочка либо нравится, либо не нравится.
[03:33:56.120 --> 03:33:58.120]  А чё?
[03:33:58.120 --> 03:34:00.120]  Ну, нет, просто нет. У нас в какой-то момент
[03:34:00.120 --> 03:34:02.120]  может быть там постановка задачи всё-таки
[03:34:02.120 --> 03:34:04.120]  более продвинутая.
[03:34:08.120 --> 03:34:10.120]  Не, не, не.
[03:34:10.120 --> 03:34:12.120]  Жать и соцветить – это другой вопрос.
[03:34:12.120 --> 03:34:14.120]  Да.
[03:34:14.120 --> 03:34:16.120]  Не, не надо.
[03:34:16.120 --> 03:34:18.120]  Да, да, да, да.
[03:34:18.120 --> 03:34:20.120]  Вот. Нет, у нас в этом смысле
[03:34:20.120 --> 03:34:22.120]  нет. У нас всё, как бы, да,
[03:34:22.120 --> 03:34:24.120]  всё примитивно. Но, как бы,
[03:34:24.120 --> 03:34:26.120]  мальчики, ну, мальчики, значит, тут
[03:34:26.120 --> 03:34:28.120]  нарисовали граф, что как бы,
[03:34:28.120 --> 03:34:30.120]  какие девочки нравятся.
[03:34:30.120 --> 03:34:32.120]  И теперь у мальчиков задача
[03:34:32.120 --> 03:34:34.120]  договориться так, чтобы они, значит,
[03:34:34.120 --> 03:34:36.120]  смогли договориться, кто, какую девочку
[03:34:36.120 --> 03:34:38.120]  зовёт.
[03:34:38.120 --> 03:34:40.120]  Но, внимание, вопрос.
[03:34:42.120 --> 03:34:44.120]  Ну, вопрос, можно ли это? Ну, понятно, что
[03:34:44.120 --> 03:34:46.120]  с точки зрения программирования, да, составьте
[03:34:46.120 --> 03:34:48.120]  двудольный граф, там построите просочетание.
[03:34:48.120 --> 03:34:50.120]  Но
[03:34:50.120 --> 03:34:52.120]  нас это интересует с точки зрения математики.
[03:34:52.120 --> 03:34:54.120]  То есть, какой критерий должен выполняться?
[03:34:54.120 --> 03:34:56.120]  И вот есть
[03:34:56.120 --> 03:34:58.120]  лемма-хола. Она говорит вот что.
[03:34:58.120 --> 03:35:00.120]  Так. Вот, допустим,
[03:35:00.120 --> 03:35:02.120]  у нас есть,
[03:35:02.120 --> 03:35:04.120]  значит, да, вот этот вот
[03:35:04.120 --> 03:35:06.120]  двудольный граф, значит, там
[03:35:06.120 --> 03:35:08.120]  левая доля мальчики, правая доля девочки.
[03:35:08.120 --> 03:35:10.120]  Вот.
[03:35:10.120 --> 03:35:12.120]  Соответственно.
[03:35:12.120 --> 03:35:14.120]  Ну, вот.
[03:35:14.120 --> 03:35:16.120]  И, в принципе,
[03:35:16.120 --> 03:35:18.120]  допустим, у нас есть какое-то
[03:35:18.120 --> 03:35:20.120]  подмножество.
[03:35:20.120 --> 03:35:22.120]  Ну, допустим, так, для каждого
[03:35:22.120 --> 03:35:24.120]  мальчика у нас есть множество
[03:35:24.120 --> 03:35:26.120]  эноту. Что такое эноту?
[03:35:26.120 --> 03:35:28.120]  Это типа
[03:35:28.120 --> 03:35:30.120]  множество девочек, которые ему нравятся.
[03:35:30.120 --> 03:35:32.120]  А можно
[03:35:32.120 --> 03:35:34.120]  рассмотреть подмножество
[03:35:34.120 --> 03:35:36.120]  мальчиков и по ним
[03:35:36.120 --> 03:35:38.120]  рассмотреть подмножество девочек,
[03:35:38.120 --> 03:35:40.120]  которые нравятся...
[03:35:40.120 --> 03:35:42.120]  Вот, короче говоря, это просто объединение.
[03:35:44.120 --> 03:35:46.120]  Ну, короче говоря, то есть это...
[03:35:46.120 --> 03:35:48.120]  То есть по каждому множеству мальчиков можно рассмотреть множество девочек,
[03:35:48.120 --> 03:35:50.120]  каждое из которых
[03:35:50.120 --> 03:35:52.120]  нравится хотя бы одному из этих мальчиков.
[03:35:54.120 --> 03:35:56.120]  Ну, вот.
[03:35:56.120 --> 03:35:58.120]  Ну, теперь мы можем заметить, что
[03:35:58.120 --> 03:36:00.120]  если мы хотим прям,
[03:36:00.120 --> 03:36:02.120]  то есть идеальную ситуацию,
[03:36:02.120 --> 03:36:04.120]  чтобы все мальчики девочек
[03:36:04.120 --> 03:36:06.120]  позвали, то что нам нужно,
[03:36:06.120 --> 03:36:08.120]  нам тогда желательно, чтобы
[03:36:08.120 --> 03:36:10.120]  в каждом подмножестве,
[03:36:10.120 --> 03:36:12.120]  для каждого подмножества у было верно,
[03:36:12.120 --> 03:36:14.120]  что в эноту девочек, наверное,
[03:36:14.120 --> 03:36:16.120]  не меньше, чем самих мальчиков
[03:36:16.120 --> 03:36:18.120]  в этом множестве, правда?
[03:36:18.120 --> 03:36:20.120]  Ну, потому что если пяти мальчикам суммарно нравятся
[03:36:20.120 --> 03:36:22.120]  три девочки, то есть проблемы.
[03:36:24.120 --> 03:36:26.120]  Трех девочек на пять мальчиков не хватит.
[03:36:28.120 --> 03:36:30.120]  Вот.
[03:36:32.120 --> 03:36:34.120]  То есть, поэтому,
[03:36:34.120 --> 03:36:36.120]  на самом деле, видите, бывает очень легко
[03:36:36.120 --> 03:36:38.120]  доказать, что, не, ничего не получится.
[03:36:38.120 --> 03:36:40.120]  Вот этим пяти мальчикам нравятся всего три девочки,
[03:36:40.120 --> 03:36:42.120]  так что до свидания. Да, проблема.
[03:36:42.120 --> 03:36:44.120]  А теперь предположим, что такого подмножества не возникло.
[03:36:44.120 --> 03:36:46.120]  То есть, любому подмножеству
[03:36:46.120 --> 03:36:48.120]  мальчиков нравится количество девочек,
[03:36:48.120 --> 03:36:50.120]  не меньше, чем самих этих мальчиков.
[03:36:52.120 --> 03:36:54.120]  Вот. Оказывается, что этого достаточно,
[03:36:54.120 --> 03:36:56.120]  чтобы совершенное просочетание существовало.
[03:36:58.120 --> 03:37:00.120]  Ну, совершенным я называю просочетание, которое покрывает все вершины.
[03:37:02.120 --> 03:37:04.120]  И в результате
[03:37:04.120 --> 03:37:06.120]  это звучит так.
[03:37:08.120 --> 03:37:10.120]  То есть, существует совершенное просочетание.
[03:37:12.120 --> 03:37:14.120]  Совершенное
[03:37:14.120 --> 03:37:16.120]  парусочетание.
[03:37:18.120 --> 03:37:20.120]  Парусочетание.
[03:37:20.120 --> 03:37:22.120]  Тогда и только тогда,
[03:37:22.120 --> 03:37:24.120]  когда для любого
[03:37:24.120 --> 03:37:26.120]  подмножества мальчиков
[03:37:26.120 --> 03:37:28.120]  верно, что размер N2
[03:37:28.120 --> 03:37:30.120]  больше либо равен
[03:37:30.120 --> 03:37:32.120]  размеру U.
[03:37:34.120 --> 03:37:36.120]  Это подмножество R, верно?
[03:37:36.120 --> 03:37:38.120]  Да, N2 это подмножество R.
[03:37:38.120 --> 03:37:40.120]  Ну, как я уже сказал, подмножество девочек,
[03:37:40.120 --> 03:37:42.120]  которые нравятся
[03:37:42.120 --> 03:37:44.120]  хотя бы одному из этих мальчиков.
[03:37:50.120 --> 03:37:52.120]  Ну, хорошо. Ну, давайте напишу.
[03:37:52.120 --> 03:37:54.120]  Хотя...
[03:37:54.120 --> 03:37:56.120]  Нет, лучше давайте.
[03:37:56.120 --> 03:37:58.120]  На самом деле, Леву можно доказать,
[03:37:58.120 --> 03:38:00.120]  если сказать, что
[03:38:00.120 --> 03:38:02.120]  совершенным называется парусочетание, которое покроет всех мальчиков.
[03:38:02.120 --> 03:38:04.120]  Да, чтобы мальчикам было хорошо.
[03:38:06.120 --> 03:38:08.120]  Вот, честно скажу, я хотел
[03:38:08.120 --> 03:38:10.120]  избежать этой ситуации, поэтому
[03:38:10.120 --> 03:38:12.120]  N2 равно R.
[03:38:12.120 --> 03:38:14.120]  Ну, конечно, понятно, что там...
[03:38:14.120 --> 03:38:16.120]  Все еще девочкам может быть не очень хорошо.
[03:38:16.120 --> 03:38:18.120]  Нет, ну понятно, что
[03:38:18.120 --> 03:38:20.120]  если у нас
[03:38:20.120 --> 03:38:22.120]  на 10 девчонок
[03:38:22.120 --> 03:38:24.120]  оказалось тут 9 ребят,
[03:38:24.120 --> 03:38:26.120]  то ничего не поделаешь.
[03:38:26.120 --> 03:38:28.120]  Да, как минимум одна девочка будет страдать.
[03:38:28.120 --> 03:38:30.120]  Девочки...
[03:38:30.120 --> 03:38:32.120]  9 мальчиков пригласили 9 девочек.
[03:38:32.120 --> 03:38:34.120]  Вопрос.
[03:38:34.120 --> 03:38:36.120]  Умеют ли девочки говорить?
[03:38:36.120 --> 03:38:38.120]  Ну...
[03:38:38.120 --> 03:38:40.120]  Причем тут говорить?
[03:38:40.120 --> 03:38:42.120]  Ну, не знаю.
[03:38:42.120 --> 03:38:44.120]  А!
[03:38:44.120 --> 03:38:46.120]  Чего еще раз?
[03:38:50.120 --> 03:38:52.120]  Любое...
[03:38:52.120 --> 03:38:54.120]  А, оговорился.
[03:38:54.120 --> 03:38:56.120]  Да, в данном случае
[03:38:56.120 --> 03:38:58.120]  вот так.
[03:39:02.120 --> 03:39:04.120]  Но это означает,
[03:39:04.120 --> 03:39:06.120]  что размер N от этого
[03:39:06.120 --> 03:39:08.120]  мальчика равно нулю, что меньше,
[03:39:08.120 --> 03:39:10.120]  чем размер N, что состоящий из этого мальчика.
[03:39:12.120 --> 03:39:14.120]  То есть как бы, да, это условие автоматически
[03:39:14.120 --> 03:39:16.120]  подразумевает, что из каждого мальчика
[03:39:16.120 --> 03:39:18.120]  торчит хотя бы одно ребро.
[03:39:18.120 --> 03:39:20.120]  Можно ли считать мальчика, которому не нравится
[03:39:20.120 --> 03:39:22.120]  ни одна девочка мальчика?
[03:39:22.120 --> 03:39:24.120]  Ну, как...
[03:39:26.120 --> 03:39:28.120]  Ну, тут как бы оговорка.
[03:39:28.120 --> 03:39:30.120]  Никто не сказал, что ему не нравится,
[03:39:30.120 --> 03:39:32.120]  что ему не нравятся
[03:39:32.120 --> 03:39:34.120]  девочки не из этого множества.
[03:39:34.120 --> 03:39:36.120]  То есть как бы...
[03:39:38.120 --> 03:39:40.120]  Мне очень нравится девочка,
[03:39:40.120 --> 03:39:42.120]  но я не могу ее позвать на бал,
[03:39:42.120 --> 03:39:44.120]  потому что она сейчас находится в Австралии, а бал через час.
[03:39:44.120 --> 03:39:46.120]  Так что, соответственно.
[03:39:46.120 --> 03:39:48.120]  Такое же тоже может быть.
[03:39:48.120 --> 03:39:50.120]  А, ну да, и это не мультик таинственный портал,
[03:39:50.120 --> 03:39:52.120]  и ее не в Ирландии.
[03:39:52.120 --> 03:39:54.120]  Соответственно.
[03:39:54.120 --> 03:39:56.120]  Тем более, что это не мультик, да, неважно.
[03:39:56.120 --> 03:39:58.120]  Ну, хорошо.
[03:39:58.120 --> 03:40:00.120]  Идем дальше.
[03:40:00.120 --> 03:40:02.120]  А теперь спрашивается,
[03:40:02.120 --> 03:40:04.120]  как доказать эту лему?
[03:40:06.120 --> 03:40:08.120]  Так, ребят, ау.
[03:40:08.120 --> 03:40:10.120]  Вот как доказать такую лему?
[03:40:10.120 --> 03:40:12.120]  Казалось бы, при чем тут
[03:40:12.120 --> 03:40:14.120]  потоки, опять же, да?
[03:40:16.120 --> 03:40:18.120]  Ну, опять, потоки не при чем.
[03:40:18.120 --> 03:40:20.120]  А вот разрезы...
[03:40:22.120 --> 03:40:24.120]  Ну, в одну сторону понятно,
[03:40:24.120 --> 03:40:26.120]  что если просочетания существуют,
[03:40:26.120 --> 03:40:28.120]  то понятно, что любому множеству мальчиков
[03:40:28.120 --> 03:40:30.120]  нравится как минимум девочки из просочетания.
[03:40:30.120 --> 03:40:32.120]  В одну сторону очевидно,
[03:40:32.120 --> 03:40:34.120]  а вот в другую вопрос.
[03:40:36.120 --> 03:40:38.120]  Да, но на самом деле
[03:40:38.120 --> 03:40:40.120]  оказывается, что
[03:40:40.120 --> 03:40:42.120]  с разрезами тут на самом деле все хорошо.
[03:40:42.120 --> 03:40:44.120]  Потому что что нам нужно доказать?
[03:40:44.120 --> 03:40:46.120]  Нам нужно доказать, что
[03:40:46.120 --> 03:40:48.120]  если вот размеры
[03:40:48.120 --> 03:40:50.120]  обеих равны n, нам надо просто доказать,
[03:40:50.120 --> 03:40:52.120]  что...
[03:40:52.120 --> 03:40:54.120]  Ну, например, давайте сведем
[03:40:54.120 --> 03:40:56.120]  к поиску просочетания потоком.
[03:40:56.120 --> 03:40:58.120]  То есть что это означает?
[03:40:58.120 --> 03:41:00.120]  Это означает, что давайте строим
[03:41:00.120 --> 03:41:02.120]  вот эту нашу технологию.
[03:41:04.120 --> 03:41:06.120]  То есть вот...
[03:41:08.120 --> 03:41:10.120]  Строим вот это вот.
[03:41:10.120 --> 03:41:12.120]  Строим вот это вот.
[03:41:12.120 --> 03:41:14.120]  Т-шку какую-нибудь там...
[03:41:16.120 --> 03:41:18.120]  Вот так вот, вот так вот и вот так вот...
[03:41:18.120 --> 03:41:20.120]  Да?
[03:41:20.120 --> 03:41:22.120]  Стандартная сеть.
[03:41:22.120 --> 03:41:24.120]  И теперь надо показать, что в этой сети
[03:41:24.120 --> 03:41:26.120]  есть поток размера n.
[03:41:26.120 --> 03:41:28.120]  Как показать, что в этой сети есть поток размера n?
[03:41:28.120 --> 03:41:30.120]  Надо, наверно, показать,
[03:41:30.120 --> 03:41:32.120]  что максимальный поток
[03:41:32.120 --> 03:41:34.120]  здесь имеет размер не меньше n.
[03:41:37.120 --> 03:41:39.120]  Но так как максимальный поток
[03:41:39.120 --> 03:41:41.120]  по тяжелям Форд и millimeter равен величине минимального разреза.
[03:41:41.120 --> 03:41:43.120]  Значит, надо показать, что величина
[03:41:43.120 --> 03:41:45.120]  минимального разреза здесь не меньше
[03:41:45.120 --> 03:41:55.960]  н или что то же самое, достаточно показать, что величина любого разреза в этой сети не меньше n.
[03:41:55.960 --> 03:42:09.360]  Логично, да? Ну поехали. Рассмотрим произвольный разрез в этой сети. Вот,
[03:42:09.360 --> 03:42:23.240]  это доля S, это доля T. Это доля S. Мальчики, это доля T. Хотя нет, это не то, потому что есть
[03:42:23.240 --> 03:42:31.280]  мальчики и девочки в доле S и в доле T. Это не то. Ну, значит, давайте смотреть. У нас оказывается,
[03:42:31.280 --> 03:42:42.400]  что в доле S у нас есть мальчики, мы их назовем L, S. И есть соответственно еще какие-то девочки,
[03:42:42.400 --> 03:43:02.800]  мы их назовем R, S. Вот, а есть мальчики в доле T, L, T и девочки из R, T. А что там, на R, T нету девочек?
[03:43:02.800 --> 03:43:18.400]  Какого фаб-фа? Но кроме того, что фаб-фа не существует, ничего не имею. По-хорошему,
[03:43:18.400 --> 03:43:35.400]  да. Нет, S и T это доли. Мальчики это L, девочки это R. Ну в смысле разрез не спрашивает. Да, S и T
[03:43:35.400 --> 03:43:42.960]  это какой-то разрез. То есть мы построили сеть, мы взяли мальчиков и девочек и каким-то
[03:43:42.960 --> 03:43:54.520]  произвольным образом порезали. А теперь давайте думаем, чему равна пропускная способность этого разреза?
[03:43:54.520 --> 03:44:04.680]  Значит, поехали. С от СТ равно. Какие ребра у нас пересекают этот разрез в нужном нам направлении?
[03:44:05.400 --> 03:44:22.000]  Ну давайте слева не с этого начнем. Во-первых, из стока в L, T. Поэтому сразу пишем красненьким модуль L, T.
[03:44:22.000 --> 03:44:33.320]  И плюс сразу зелененьким еще пишем давайте симметричный вариант R, S. Вот эти вот ребра.
[03:44:33.320 --> 03:44:44.560]  И плюс, как вы абсолютно правильно заметили, я так напишу С от L, S запятая R, T.
[03:44:45.120 --> 03:44:57.040]  Нет, это просто какой-то разрез. Мы исследуем его пропускную способность.
[03:44:57.040 --> 03:45:14.200]  СТ способность разреза. Нет, это большие S, T, видите. Так что привыкайте к языку.
[03:45:14.840 --> 03:45:21.800]  Как бы это еще просто. Будет у вас макроэкономика. А у вас не будет макроэкономики, да ладно.
[03:45:21.800 --> 03:45:29.120]  У кого-то будет. Вот там просто вас завалят сразу буквами.
[03:45:29.120 --> 03:45:37.240]  Да. Веселый курс, очень полезный. Курс экономики. Первый семестр микроэкономика,
[03:45:37.240 --> 03:45:42.720]  второй макроэкономика. То есть первый курс. Вы фирма и пытаетесь оптимизировать свой доход.
[03:45:42.720 --> 03:45:46.680]  Макроэкономика тоже все просто. У вас на кухне стоит печатная машинка,
[03:45:46.680 --> 03:45:51.920]  которая умеет печатать деньги. Вам нужно понимать, что будет происходить в экономике,
[03:45:51.920 --> 03:45:58.160]  если вы напечатаете лишнего или, наоборот, запылесосите эти деньги обратно.
[03:45:58.160 --> 03:46:06.320]  Обычно это кухня печатная машинка называется Центробанк.
[03:46:06.320 --> 03:46:19.360]  Сейчас курс русского языка, ну видимо он же риторика, он же там вот это все не важно.
[03:46:19.360 --> 03:46:27.520]  Вот там история конечно была. Тут без вариантов. Да, конечно. А ну из обязательных там по-моему
[03:46:27.520 --> 03:46:31.640]  слету все. То есть там есть еще дополнительные конкурсы по выбору. У меня там была годовая
[03:46:31.640 --> 03:46:38.000]  история кино. Ну я так ходил, но вот там было весело. Ладно, так давайте, так. А то у нас там время
[03:46:38.000 --> 03:46:44.480]  потихоньку выходит по-моему. Да, три минуты назад вышло, поэтому давайте сейчас быстренько вот эту
[03:46:44.480 --> 03:46:52.640]  задачу добьем. Да, погодите, спокойно. Потому что нет, нет, на самом деле тут все еще круче.
[03:46:52.640 --> 03:47:00.680]  Потому что, смотрите, сейчас я тут давайте попишу. Значит, это равно lt плюс модуль rs, а вот это,
[03:47:00.680 --> 03:47:14.040]  я скажу так, плюс c от, значит ls, вот я так напишу, lsr минус c от ls rs. Видите, да?
[03:47:14.040 --> 03:47:25.480]  Хотя нет, так мы писать не будем. То есть это верное утверждение, но мы так писать не будем,
[03:47:25.480 --> 03:47:33.680]  пожалуй. Оно нам не поможет. Потому что, смотрите, нам надо бы попытаться воспользоваться нашим
[03:47:33.680 --> 03:47:41.120]  условием. Вот давайте попытаемся для множества ls использовать вот это условие. Тогда мы знаем,
[03:47:41.200 --> 03:48:00.720]  что вот это вот. Знаете, как мы напишем? Я напишу так, модуль n от ls пересеченная с rt. Ну,
[03:48:00.720 --> 03:48:09.400]  смотрите, сколько Реберта ведет из ls в rt? Ну, не менее, чем сколько у меня вообще соседей есть в
[03:48:09.400 --> 03:48:16.400]  этом множестве rt, правда? Ну, может быть и больше, потому что там из разных мальчиков в одну и ту
[03:48:16.400 --> 03:48:19.960]  же девочку может вести ребро. Ну, бывает же так, что девочка нравится больше, чем одну мальчику,
[03:48:19.960 --> 03:48:26.880]  правда? Ну вот, я бы сказал, это даже скорее нормальная ситуация, чем нет. Ну вот, соответственно.
[03:48:26.880 --> 03:48:36.640]  Но, тем не менее. Сейчас, еще раз, n от ls это все торчащие ребра, да? Да, n от ls это просто,
[03:48:36.680 --> 03:48:42.880]  нет, это все девочки, в которых торчит хотя бы одно ребро из этих ls. Но я, как бы их,
[03:48:42.880 --> 03:48:54.760]  видите, пересекаю с rt, видите, да? Вот. Но смотрите, как я сделаю. Теперь я делаю аккуратненько.
[03:48:54.760 --> 03:49:10.040]  Значит, это равно модуль lt плюс модуль rs плюс модуль n от ls, внимание, минус n от ls, пересеченное с rs.
[03:49:10.040 --> 03:49:20.960]  Ну, я такую теоретику множественную операцию написал, да? Смотрите. Это больше либо равно,
[03:49:21.000 --> 03:49:35.560]  чем, смотрите, модуль lt плюс модуль n от ls и все. То есть, обратите внимание, я просто убил вот эти два слагаемые.
[03:49:35.560 --> 03:49:43.000]  Ну, потому что очевидно, что размер этого множества больше либо равен, чем размер этого множества,
[03:49:43.000 --> 03:49:54.880]  пересеченное с чем бы то ни было, правда? Поэтому осталось это. Ну, я обнаружил, что просто вот это
[03:49:54.880 --> 03:49:59.160]  минус вот это больше либо равно нуля. Ведь я тут больше либо равно пишу, поэтому я как бы их типа
[03:49:59.160 --> 03:50:12.640]  убил. То есть, я их как бы сократил. Ну, потому что я утверждаю, что вот это равно,
[03:50:12.680 --> 03:50:28.960]  вот этому. Нет, n от ls равно n от ls, пересеченное с этим, плюс модуль n от ls, пересеченное с этим.
[03:50:28.960 --> 03:50:38.600]  Это верно, потому что n от ls само по себе это как бы под множество вот этого. Вот то, что я тут написал,
[03:50:38.600 --> 03:50:46.360]  это верно всегда. А теперь я пользуюсь вот этим условием. То есть, по предположению,
[03:50:46.360 --> 03:50:57.840]  оказывается, что размер вот этого n от ls больше либо равен, чем размер ls. Ну,
[03:50:57.840 --> 03:51:15.760]  тогда модуль lt плюс модуль ls равно модуль l. Все. Скажем так, кто-то, я не знаю, можно это дать в
[03:51:15.760 --> 03:51:20.320]  домашнем состоянии, кто-то докажет там действительно по индукции, там будет что-то про индукцию,
[03:51:20.320 --> 03:51:28.160]  про удлиняющие цепи. В принципе, да, у кого-то оказывается даже несложно. Вот. Но на самом деле,
[03:51:28.160 --> 03:51:32.240]  вот просто я сильно радуюсь, видите, что с точки, как бы, если вы там пришли на Олимпиаду по
[03:51:32.240 --> 03:51:36.840]  математике из программирования и знаете вот теорию Форда Фалкерсона, то в общем-то вы тут все,
[03:51:36.840 --> 03:51:45.240]  то в общем-то вот это вот вы сделали достаточно на халяву. Вот эту лему мы доказали. Точнее,
[03:51:45.240 --> 03:51:51.240]  что вот отсюда следует вот это. То есть еще раз сворачиваем. Мы доказали, что у любого разреза,
[03:51:51.240 --> 03:51:57.640]  то есть разрез абсолютно произвольный, пропускная способность не менее чем n. Следовательно,
[03:51:57.640 --> 03:52:01.280]  у минимального разреза пропускная способность тоже не менее чем n. Следовательно,
[03:52:01.280 --> 03:52:05.560]  существует максимальный поток, имеет размер не менее чем n. Значит, существует
[03:52:05.560 --> 03:52:14.040]  просочетание размера не менее чем n. Ура. Все. То есть вот такая цепочка оказалась. Такая вот
[03:52:14.040 --> 03:52:19.160]  очка очень красивая. То есть на самом деле, чем понятно, то есть мы доказали, на самом деле,
[03:52:19.160 --> 03:52:23.480]  казалось бы, просто чисто математический факт. Казалось бы, из мира математики программирование
[03:52:23.480 --> 03:52:31.760]  тут казалось бы не при чем. Но на самом деле, вот оказалось, что оно при чем и очень даже. Вот.
[03:52:31.760 --> 03:52:36.880]  Так что посмотрим. В принципе, у нас где-то там еще будет пара задач действительно на подобное.
[03:52:36.880 --> 03:52:40.920]  То есть что-то, может быть, у вас все-таки будет в домашнем задании. То есть там просто есть еще
[03:52:40.920 --> 03:52:45.040]  одна важная задача, которую тоже нужно знать. Но, возможно, я вам ее в домашнее задание оставлю.
[03:52:45.040 --> 03:52:49.560]  То есть там тоже на самом деле вы сможете просто применить абсолютно ту же технологию и тоже
[03:52:49.560 --> 03:52:56.600]  на халяву ее решить. Вот. Ладно. На этом тогда мы останавливаемся. Увидимся через неделю.
