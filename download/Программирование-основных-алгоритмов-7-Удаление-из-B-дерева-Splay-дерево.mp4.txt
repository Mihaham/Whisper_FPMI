[00:00.000 --> 00:21.500]  Так, все, давайте начинать тогда. У нас с вами седьмая лекция. И про что мы сегодня с
[00:21.500 --> 00:26.640]  вами будем говорить? Мы закончим с вами пробу дерева. У нас там должок остался минут на 30,
[00:26.640 --> 00:35.840]  наверное, это удаление. Потом у нас будет сплей дерева, там быстренько, и если успеем,
[00:35.840 --> 00:45.760]  там еще что-нибудь разберем. Но если не успеем, значит на этом все. Что? А оно вообще не в эту сторону.
[00:45.760 --> 01:05.600]  Б-дерево часть вторая, и сплой дерева. Окей, ну давайте. Все же помнят, что такое б-дерево.
[01:05.600 --> 01:13.000]  Это дерево, в котором хотя бы t-1 элемент в узлах, кроме корня, не больше чем 2t-1 и глубина
[01:13.000 --> 01:28.080]  всех листьев одинаково. Вот окей, нас будет интересовать удаление. Удаление из б-дерева.
[01:28.080 --> 01:45.240]  И мы будем гарантировать себе следующее. В ходе спуска во всех узлах, кроме корня,
[01:45.240 --> 02:05.760]  на пути хотя бы t-элементов. Казалось бы, зачем вам это надо? Потому что у нас ограничение t-1 из
[02:05.760 --> 02:14.000]  определения, для б-дерева ранга t. А здесь мы хотим прям на 1 больше. Этой краски нам надо
[02:14.000 --> 02:20.280]  быть, чтобы когда-нибудь мы его там спустим, этот элемент, и удалим его. Чтобы у нас остался t-1.
[02:20.280 --> 02:29.440]  Вот. Окей, как-то будет делаться. У нас будет несколько случаев. И первый случай такой.
[02:29.440 --> 02:52.040]  Ладно. Первый случай откладывается. А мы спустились в узел и не можем найти маркера
[02:52.040 --> 03:04.520]  нормально, хотя он даже типа запакован. Вот так спустились в узел. Узел давайте обозначим как-нибудь
[03:04.520 --> 03:25.600]  x. В нём есть искомый ключ k. Ой, почему в узел? Извините, в лист. Вот. То есть мы сами спускались,
[03:25.600 --> 03:29.960]  спускались, спускались, пришли в лист, и в нём есть нужный нам ключ. Вот что мы будем делать?
[03:29.960 --> 03:36.600]  Просто удалим его из листа. Почему? Потому что мы гарантируем, что у нас хотя бы t-элементов
[03:36.600 --> 03:41.840]  в нём есть. Вот по вот этому вот интересному утверждению. Пока что мы не знаем как,
[03:41.840 --> 03:58.480]  но давайте просто поверим в это. Вот. Просто удаляем. Случай. Второй давайте перейду
[03:58.480 --> 04:15.200]  на следующую досочку. Это мы с вами пришли в узел x. Это у нас будет внутренний узел, то есть
[04:15.280 --> 04:30.560]  листовой. И в нём есть ключ k. Вот что тогда делать, если мы пришли внутренний узел, в нём есть ключ.
[04:30.560 --> 04:49.000]  То есть как бы такая у нас ситуация. Это x, есть ключ k. Есть какие-то его дети. Вот что можно
[04:49.000 --> 04:57.560]  сделать? Какие у нас будут варианты? Ну, вариант первый следующий, что, то есть случай A. Давайте
[04:57.560 --> 05:08.200]  обозначим левого сына за y, а правого сына за z. Вот такая ситуация. В y больше либо равно,
[05:08.200 --> 05:22.000]  чем t. Минус один. Больше чем t просто. Т ключи. Вот что тогда можно сделать? Ну, будто бы можно
[05:22.000 --> 05:31.240]  абсолютно легитимно взять отсюда последний элемент. Затем сюда, а этот удалить. Почему это
[05:31.240 --> 05:36.680]  можно сделать? Потому что этот элемент самый большой среди тех, кто меньше k. Поэтому просто
[05:36.680 --> 05:51.000]  берём на него заменяем. А k выбрасываем. Вот. Как-то так. Хотя бы t. Потому что если у нас меньше,
[05:51.000 --> 06:04.560]  чем t, то есть t минус один, то мы не можем просто вот туда удалить. Вот. Тогда пишем вместо k
[06:04.560 --> 06:28.800]  максимум в y и удаляем k. Удаляем вот этот максимум по y. Суть второй. Это y t минус один
[06:28.800 --> 06:40.960]  элемент. Но в z больше либо равно t элемента. То есть ситуация такая же абсолютно.
[06:40.960 --> 07:02.560]  З, у, х. Ключка. Что тогда мы делаем? Мы делаем абсолютно аналогично, а только наоборот из z выпиливаем.
[07:02.560 --> 07:17.800]  Аналогично 2a, но вместо
[07:17.800 --> 07:39.680]  максимум по y будет минимум по z. Ну окей. Казалось бы классно, да? Какой у нас случай остался? Да,
[07:39.680 --> 08:08.360]  в случае v у и z по t минус 1 элементу. Что тогда предлагается сделать? Будут идеи какие-нибудь?
[08:08.360 --> 08:34.400]  Ну да. Идея следующая. Сделаем узел y штрих, состоящий из y плюс k плюс z. То есть будет
[08:34.400 --> 08:52.160]  такой вот, дайте здесь нарисуем. Здесь lr, чтобы было понятно кто у него соседя. Это l от r, то есть мы выпилили отсюда k, просто убрали. И у них ребенок будет вот такой вот.
[08:52.160 --> 09:09.280]  Y, k, z. То есть мы просто взяли и k перекинули вниз. Мы его отсюда удалили, внули его в этот узел,
[09:09.280 --> 09:38.760]  но войден дочерний. И рекурсивно выдвинемся от этого узла дальше. Ну вот смотрите, давайте просто посмотрим. Вот у нас наша ситуация. Вдруг здесь тоже были дети какие-то такие неприятные, маленькие. Да, у них? Вот как сморжить этих двух? То есть у инжера там тоже есть свои дети какие-то?
[09:38.760 --> 09:52.240]  Здесь какое-то большое, здесь какое-то большое может быть. Если их сливать вот так вот просто, то это будут какие-то огромные дети. То есть тут допустим 2t минус 1, тут 2t минус 1, в общем 4t минус 2 вообще в ребенке. С ним не понятно что делать.
[09:52.240 --> 10:10.720]  Поэтому, то есть смотрите, наша цель какая? Взять и k докинуть до листа каким-то образом. Вот этот ключ k провести. Вот, и потом воспользоваться первым случаем.
[10:11.200 --> 10:12.200]  В плане?
[10:18.680 --> 10:22.680]  Ну да, да, рекурсивно от него запускайтесь. Просто основным ключом удаления вызываете.
[10:23.640 --> 10:26.640]  Удаляем, здесь имеется в виду по правилам B дерево.
[10:45.640 --> 10:47.640]  Давайте здесь допишем далее.
[10:47.640 --> 10:49.640]  Удалим k из x.
[10:53.640 --> 10:57.640]  И новый ребенок.
[11:00.640 --> 11:02.640]  Это y'.
[11:06.640 --> 11:08.640]  Какой случай мы еще не рассмотрели?
[11:14.640 --> 11:16.640]  Не, с корнем все легко.
[11:17.600 --> 11:19.600]  Лист это вон первый пункт.
[11:20.600 --> 11:24.600]  Пришли в узел, а в нем нет ключа k. Он есть в каком-то из детей.
[11:25.600 --> 11:31.600]  Видите, мы же еще это не разобрали. Мы только знаем, что если мы пришли в узел с ключом или пришли в лист.
[11:31.600 --> 11:35.600]  Но что делать, если мы пришли в лист без ключа, мы еще не знаем вообще.
[11:35.600 --> 11:37.600]  В узел без ключа.
[11:40.600 --> 11:45.600]  Пришли в узел x.
[11:47.600 --> 11:53.600]  Ключ k лежит в x.
[11:53.600 --> 11:55.600]  Ну, x это ребенок.
[11:55.600 --> 12:01.600]  То есть, вы находитесь в вашем прекрасном x.
[12:01.600 --> 12:06.600]  И вы знаете, что где-то вот здесь, в каком-то вот поддереве,
[12:06.600 --> 12:10.600]  вот это вот x.x находится ключ k.
[12:10.600 --> 12:16.600]  Например, вы просто посмотрели, сравнили вот эти вот два элемента и поняли, что k между ними находится.
[12:17.560 --> 12:19.560]  Что тогда нужно делать?
[12:23.560 --> 12:26.560]  Давайте здесь нарисую большую картинку.
[12:37.560 --> 12:43.560]  Вот нам понадобятся вот эти вот, так сказать, ребенок и его два брата акробата.
[12:43.560 --> 12:45.560]  Слева и справа.
[12:46.520 --> 12:48.520]  Что делаем тогда?
[12:48.520 --> 12:50.520]  Ну, внезапно пункт A.
[12:52.520 --> 12:54.520]  Это если у нас
[12:58.520 --> 13:00.520]  пункт A даже не так.
[13:00.520 --> 13:08.520]  x.city содержит больше либо равно t ключей.
[13:08.520 --> 13:10.520]  Что тогда мы делаем по-вашему?
[13:16.520 --> 13:18.520]  Просто спускаемся в него, да и все.
[13:28.520 --> 13:30.520]  Случай B сложнее.
[13:33.520 --> 13:38.520]  x.city t-1 элемент.
[13:42.520 --> 13:44.520]  Что тогда хочется сделать?
[13:46.520 --> 13:52.520]  Как-то мы можем объединить его с соседом, если у него может быть много элементов.
[13:52.520 --> 13:54.520]  2t-1.
[13:56.520 --> 13:58.520]  Что?
[13:58.520 --> 14:00.520]  Ну, типа того, да.
[14:00.520 --> 14:02.520]  И вот следующее.
[14:03.480 --> 14:18.480]  Пусть в x.city-1 или в x.city-1 хотя бы t элементов.
[14:18.480 --> 14:20.480]  То есть в одном из них хотя бы t.
[14:21.480 --> 14:22.480]  Что мы тогда можем сделать?
[14:22.480 --> 14:25.480]  Допустим, у этого размер больше либо равен t.
[14:28.480 --> 14:29.480]  Что можно сделать?
[14:30.440 --> 14:32.440]  Вот отсюда вот пилить максимум.
[14:32.440 --> 14:34.440]  Перекинуть его вот сюда.
[14:34.440 --> 14:37.440]  А этот элемент в ребенка закинуть.
[14:40.440 --> 14:42.440]  Тогда у нас здесь, кажется, t элементов.
[14:42.440 --> 14:44.440]  И при этом все хорошо.
[14:45.440 --> 14:47.440]  То есть нам нужно лишь понимать, откуда можно отрезать.
[14:50.440 --> 14:52.440]  Тогда
[14:54.440 --> 14:58.440]  пусть у x.city-1
[14:59.400 --> 15:01.400]  больше будет t.
[15:01.400 --> 15:03.400]  Что тогда мы делаем?
[15:07.400 --> 15:09.400]  Тогда вместо
[15:11.400 --> 15:13.400]  Так, это будет у нас x.ity.
[15:15.400 --> 15:17.400]  Вместо x.ity пишем
[15:19.400 --> 15:23.400]  Максимум от x.city-1
[15:24.360 --> 15:30.360]  x.ity перебрасываем
[15:34.360 --> 15:36.360]  в того
[15:37.360 --> 15:39.360]  x.city
[15:40.360 --> 15:42.360]  Окей, перебросили.
[15:45.360 --> 15:47.360]  Что дальше-то?
[15:48.320 --> 15:50.320]  Ну да, дальше можем в x.city спускаться.
[15:50.320 --> 15:52.320]  Здесь все будет хорошо.
[15:53.320 --> 15:55.320]  Ну и в случае v
[15:57.320 --> 15:59.320]  я думаю последним этапом исключения,
[15:59.320 --> 16:01.320]  что у вас в обоих по t-1 элементов.
[16:07.320 --> 16:11.320]  Понятно, что кого-то придется объединять по t-1.
[16:12.320 --> 16:14.320]  Ну и в случае v
[16:15.280 --> 16:19.280]  только вот придется объединять по t-1 элементу.
[16:23.280 --> 16:27.280]  То есть смотрите, у нас в x.city там t-1 элемент
[16:28.280 --> 16:30.280]  еще и в этих вот двух
[16:31.280 --> 16:33.280]  чуваках по t-1 элементу.
[16:34.280 --> 16:36.280]  Ну давайте просто совьем с одним из соседей.
[16:37.240 --> 16:39.240]  Причем сольем путем того, что мы x.ity
[16:39.240 --> 16:41.240]  будем туда вниз опускать.
[16:47.240 --> 16:49.240]  Опустив x.ity
[16:53.240 --> 16:55.240]  Ну и рекурсивно называемся от этого узла.
[16:55.240 --> 16:57.240]  То есть будто бы как вот здесь вот
[16:57.240 --> 16:59.240]  делали.
[17:01.240 --> 17:03.240]  Ну и в случае v
[17:04.200 --> 17:06.200]  теперь все.
[17:06.200 --> 17:08.200]  Маленький алгоритм на три досочки.
[17:09.200 --> 17:11.200]  Давайте пример рассматривать.
[17:16.200 --> 17:18.200]  У нас с вами будет сегодня
[17:19.200 --> 17:21.200]  одно большое B-дерево,
[17:21.200 --> 17:23.200]  из которого мы будем удалять элементы
[17:23.200 --> 17:25.200]  рассматривая разные случаи.
[17:28.200 --> 17:30.200]  Так, чтобы
[17:31.160 --> 17:33.160]  Так, чтобы
[17:47.160 --> 17:49.160]  Кого именно?
[17:49.160 --> 17:51.160]  Ну и x.city вы опускаете и сливаете его
[17:51.160 --> 17:53.160]  в двух чуваков.
[17:57.160 --> 17:59.160]  В плане включить корни, вы его можете опускать.
[18:00.120 --> 18:02.120]  Причем проблема.
[18:02.120 --> 18:04.120]  Все то же самое абсолютно.
[18:04.120 --> 18:06.120]  То есть здесь вся ситуация, если вы в корне
[18:06.120 --> 18:08.120]  абсолютно аналогичная.
[18:08.120 --> 18:10.120]  Вот.
[18:10.120 --> 18:12.120]  Как бы с этим вообще проблем нет,
[18:12.120 --> 18:14.120]  что мы в корне находимся.
[18:18.120 --> 18:20.120]  Так, здесь AB,
[18:20.120 --> 18:22.120]  здесь D,E,F.
[18:24.120 --> 18:26.120]  Так, здесь
[18:27.080 --> 18:29.080]  J,K,L.
[18:33.080 --> 18:35.080]  Здесь no.
[18:35.080 --> 18:37.080]  Здесь
[18:37.080 --> 18:39.080]  Q,R,S,
[18:43.080 --> 18:45.080]  U,V
[18:45.080 --> 18:47.080]  И здесь Y,Z,T
[18:47.080 --> 18:49.080]  равно 3.
[18:49.080 --> 18:51.080]  Вот такое вот дерево у нас с вами.
[18:53.080 --> 18:55.080]  Ну почти весь алфавит английский
[18:55.080 --> 18:57.080]  я бы уместил.
[18:59.080 --> 19:01.080]  И мы сейчас будем с вами просто-напросто кучу удалений делать
[19:01.080 --> 19:03.080]  подряд.
[19:03.080 --> 19:05.080]  И перерисовывать дерево после этого.
[19:07.080 --> 19:09.080]  Удаление F происходит.
[19:09.080 --> 19:11.080]  У вас запрос, ну и рейс F сделать.
[19:13.080 --> 19:15.080]  Смотрим алгоритм.
[19:15.080 --> 19:17.080]  Мы стоим в корне.
[19:17.080 --> 19:19.080]  Все OK.
[19:19.080 --> 19:21.080]  Смотрим, что F будет находиться вот здесь.
[19:21.080 --> 19:23.080]  Правда ли, что здесь больше либо равно
[19:23.080 --> 19:25.080]  Да, отлично, все, просто спускаемся.
[19:25.080 --> 19:27.080]  Находимся здесь.
[19:29.080 --> 19:31.080]  OK, F снова.
[19:31.080 --> 19:33.080]  Спускаемся, он где-то здесь должен быть.
[19:33.080 --> 19:35.080]  Больше либо равно ты был слов? Да.
[19:35.080 --> 19:37.080]  Спустились. О, мы в листе оказывается.
[19:37.080 --> 19:39.080]  Значит, в нем можно просто F удалять.
[19:41.080 --> 19:43.080]  Поэтому дерево
[19:43.080 --> 19:45.080]  можно я не буду перерисовывать его.
[19:45.080 --> 19:47.080]  Я его потом перерисовываю,
[19:47.080 --> 19:49.080]  когда будут более масштабные изменения.
[19:49.080 --> 19:51.080]  Просто
[19:51.080 --> 19:53.080]  вырезаем F.
[20:01.080 --> 20:03.080]  Дальше следующее, удаление M.
[20:11.080 --> 20:13.080]  Вот я стою здесь, снова смотрю.
[20:13.080 --> 20:15.080]  Лево больше либо равно T?
[20:15.080 --> 20:17.080]  Да, ну и M где-то здесь должен находиться.
[20:17.080 --> 20:19.080]  OK, спускаюсь сюда.
[20:19.080 --> 20:21.080]  Нахожу M.
[20:21.080 --> 20:23.080]  Ага, мы находимся
[20:23.080 --> 20:25.080]  не в листе, поэтому это не первый
[20:25.080 --> 20:27.080]  случай.
[20:27.080 --> 20:29.080]  И при этом у нас есть наш ключ.
[20:29.080 --> 20:31.080]  Поэтому находимся где-то во втором случае.
[20:31.080 --> 20:33.080]  Теперь надо выбрать один из трех.
[20:35.080 --> 20:37.080]  OK, в Y больше либо равно T ключей?
[20:37.080 --> 20:39.080]  Да.
[20:39.080 --> 20:41.080]  Потому что вот он ваш.
[20:41.080 --> 20:43.080]  Сейчас, подождите.
[20:43.080 --> 20:45.080]  Тра-та-та.
[20:45.080 --> 20:47.080]  А, ну да, все OK.
[20:47.080 --> 20:49.080]  Вот он наш Y.
[20:49.080 --> 20:51.080]  В нем больше либо равно T ключей.
[20:51.080 --> 20:53.080]  Поэтому мы берем, делаем следующее.
[21:09.080 --> 21:11.080]  A, B.
[21:11.080 --> 21:13.080]  D, E.
[21:15.080 --> 21:17.080]  И что мы с вами делали?
[21:17.080 --> 21:19.080]  Мы говорим, берем максимальный элемент,
[21:19.080 --> 21:21.080]  перекидываем вот сюда.
[21:27.080 --> 21:29.080]  Дальше что?
[21:29.080 --> 21:31.080]  Здесь остаются вот эти вот G и K.
[21:33.080 --> 21:35.080]  Здесь
[21:35.080 --> 21:37.080]  N, O.
[21:37.080 --> 21:39.080]  Вот.
[21:39.080 --> 21:41.080]  Вот мы и удалили с вами L.
[21:51.080 --> 21:53.080]  L.
[21:53.080 --> 21:55.080]  Вот он.
[21:55.080 --> 21:57.080]  Мы перекинули наверх, вместо M.
[21:57.080 --> 21:59.080]  Да, J, K, L.
[21:59.080 --> 22:01.080]  Да, удалили M.
[22:03.080 --> 22:05.080]  Ну да.
[22:05.080 --> 22:07.080]  Ну давайте посмотрим.
[22:07.080 --> 22:09.080]  Это в случае A.
[22:09.080 --> 22:11.080]  Просто-напросто.
[22:21.080 --> 22:23.080]  Что?
[22:25.080 --> 22:27.080]  Раз, два.
[22:27.080 --> 22:29.080]  Слева, справа.
[22:29.080 --> 22:31.080]  Это Y, это Z.
[22:31.080 --> 22:33.080]  Ну да.
[22:33.080 --> 22:35.080]  Ну что поделать?
[22:35.080 --> 22:37.080]  B дерево, это такая штука
[22:37.080 --> 22:39.080]  интересная.
[22:39.080 --> 22:41.080]  Особенно по терминологии.
[22:55.080 --> 22:57.080]  С кого мы тут дальше удаляем?
[22:57.080 --> 22:59.080]  Удаляем G.
[22:59.080 --> 23:01.080]  G которая.
[23:03.080 --> 23:05.080]  Удаляем G.
[23:07.080 --> 23:09.080]  Давайте здесь писать в случае, что это был первый случай.
[23:09.080 --> 23:11.080]  Это был 2A.
[23:11.080 --> 23:13.080]  Теперь я хочу удалить G.
[23:15.080 --> 23:17.080]  Ну что здесь?
[23:17.080 --> 23:19.080]  Спускаюсь вниз.
[23:19.080 --> 23:21.080]  Больше либо равно Т-узлов?
[23:21.080 --> 23:23.080]  Да, все хорошо. Спустились.
[23:23.080 --> 23:25.080]  Вижу, что G есть такой чувак
[23:25.080 --> 23:27.080]  и при этом у него
[23:29.080 --> 23:31.080]  оба ребенка по T-1.
[23:33.080 --> 23:35.080]  Ну тогда смотрим.
[23:35.080 --> 23:37.080]  То есть в Y и Z по T-1 элементу
[23:37.080 --> 23:39.080]  значит это 2V.
[23:41.080 --> 23:43.080]  Как тогда действовать?
[23:43.080 --> 23:45.080]  Ну опять же по алгоритму
[23:45.080 --> 23:47.080]  будто бы опускаем этого чувака вниз.
[23:47.080 --> 23:49.080]  Делаем один большой узел
[23:49.080 --> 23:51.080]  и от него вызываем удаление.
[24:03.080 --> 24:05.080]  А, B.
[24:05.080 --> 24:07.080]  Здесь
[24:07.080 --> 24:09.080]  N, O.
[24:09.080 --> 24:11.080]  Давайте А, B.
[24:11.080 --> 24:13.080]  Правее прикину.
[24:15.080 --> 24:17.080]  И посередине у них будет результат
[24:17.080 --> 24:19.080]  этого гениального слияния.
[24:21.080 --> 24:23.080]  D, E.
[24:25.080 --> 24:27.080]  G, J, K.
[24:27.080 --> 24:29.080]  Да.
[24:29.080 --> 24:31.080]  То есть вот мы с вами вниз прокинули
[24:31.080 --> 24:33.080]  этот элемент.
[24:33.080 --> 24:35.080]  Ну и дальше вызываем
[24:35.080 --> 24:37.080]  эрейс G в этом узле.
[24:47.080 --> 24:49.080]  Ну смотрите,
[24:49.080 --> 24:51.080]  когда вы сливаете,
[24:51.080 --> 24:53.080]  у вас проблема в том, что если вы просто
[24:53.080 --> 24:55.080]  бы оставили бы узел D, E,
[24:55.080 --> 24:57.080]  J, K сразу,
[24:57.080 --> 24:59.080]  у вас здесь вот
[24:59.080 --> 25:01.080]  вот у этого чувака
[25:01.080 --> 25:03.080]  самого правого сына,
[25:03.080 --> 25:05.080]  у этого чувака самого левого сына могут быть большими.
[25:05.080 --> 25:07.080]  Вы не можете так просто взять их и схлопнуть в одного.
[25:09.080 --> 25:11.080]  Там же могут быть оба по 2T-1.
[25:11.080 --> 25:13.080]  Их нельзя так просто сложить.
[25:15.080 --> 25:17.080]  То есть у вас могли быть здесь сыновья,
[25:17.080 --> 25:19.080]  которые огромные.
[25:19.080 --> 25:21.080]  И если бы вы схлопнули их в один,
[25:21.080 --> 25:23.080]  все было бы совсем плохо.
[25:23.080 --> 25:25.080]  А так у вас все очень вариант поддерживается
[25:25.080 --> 25:27.080]  и дальше вызывают удаление G, вы корректно это обработаете.
[25:29.080 --> 25:31.080]  Ну мы находимся в листе,
[25:31.080 --> 25:33.080]  поэтому удаление G выполняется
[25:33.080 --> 25:35.080]  по первому случаю, вот так вот.
[25:35.080 --> 25:37.080]  Все.
[25:43.080 --> 25:45.080]  Да.
[25:45.080 --> 25:47.080]  Если вы их просто так схлопните в одного ребенка,
[25:47.080 --> 25:49.080]  то это проблема.
[25:51.080 --> 25:53.080]  Так нет, они схлопнутся
[25:53.080 --> 25:55.080]  по нужным вам правилам.
[25:55.080 --> 25:57.080]  То есть если у вас здесь много детей,
[25:57.080 --> 25:59.080]  то посидите, например, сюда один
[25:59.080 --> 26:01.080]  и не будьте их сливать,
[26:01.080 --> 26:03.080]  как в 2A делалось или в 2B.
[26:07.080 --> 26:09.080]  Ну смотрите, если у вас здесь
[26:09.080 --> 26:11.080]  дети
[26:11.080 --> 26:13.080]  были какие-то большие,
[26:13.080 --> 26:15.080]  то вы бы удалили бы G
[26:15.080 --> 26:17.080]  путем вот такого вот алгоритма.
[26:17.080 --> 26:19.080]  Как в 2A вы делаете.
[26:19.080 --> 26:21.080]  Или в 2B.
[26:21.080 --> 26:23.080]  То есть вам бы не пришлось
[26:23.080 --> 26:25.080]  схлопывать детей на самом деле.
[26:27.080 --> 26:29.080]  Нет.
[26:31.080 --> 26:33.080]  Если здесь T элементов,
[26:33.080 --> 26:35.080]  то смотрите, это в случае 2A
[26:35.080 --> 26:37.080]  становится тогда.
[26:37.080 --> 26:39.080]  То есть вот ваш новый X,
[26:39.080 --> 26:41.080]  вот ваш новый Y,
[26:41.080 --> 26:43.080]  вот ваш новый Z.
[26:45.080 --> 26:47.080]  И если в Y много элементов, вы удалите
[26:47.080 --> 26:49.080]  путем просто подмена.
[26:53.080 --> 26:55.080]  Вот.
[26:57.080 --> 26:59.080]  То есть поэтому так просто здесь не делается.
[27:01.080 --> 27:03.080]  Потому что у вас могут быть какие-то сложные ситуации.
[27:17.080 --> 27:19.080]  Так.
[27:19.080 --> 27:21.080]  2B.
[27:21.080 --> 27:23.080]  Так, дальше удаляем B.
[27:23.080 --> 27:25.080]  Так, давайте я здесь нарисую,
[27:25.080 --> 27:27.080]  что здесь было.
[27:27.080 --> 27:29.080]  У вас TX.
[27:31.080 --> 27:33.080]  Так.
[27:33.080 --> 27:35.080]  Q
[27:35.080 --> 27:37.080]  RS
[27:39.080 --> 27:41.080]  QB
[27:43.080 --> 27:45.080]  YZ.
[27:47.080 --> 27:49.080]  Вот такое дерево у нас теперь.
[27:49.080 --> 27:51.080]  Теперь мы будем удалять D.
[27:55.080 --> 27:57.080]  Вот мы стоим
[27:57.080 --> 27:59.080]  в узле P, в корне.
[28:01.080 --> 28:03.080]  Мы понимаем, что нам надо идти влево.
[28:03.080 --> 28:05.080]  Проблема в том,
[28:05.080 --> 28:07.080]  что у вас здесь T-1 узел уже.
[28:07.080 --> 28:09.080]  Вы не можете так просто пойти.
[28:09.080 --> 28:11.080]  То есть какая ситуация, что
[28:13.080 --> 28:15.080]  мы находимся в узле,
[28:15.080 --> 28:17.080]  у нас нет нашего
[28:17.080 --> 28:19.080]  внутреннего узла, мы не лист,
[28:19.080 --> 28:21.080]  поэтому первый случай отсекается.
[28:21.080 --> 28:23.080]  При этом ключ находится не внутри нас.
[28:25.080 --> 28:27.080]  То есть не второй пункт.
[28:27.080 --> 28:29.080]  Значит, пункт третий нам нужен,
[28:29.080 --> 28:31.080]  потому что ключ находится где-то в ребенке.
[28:33.080 --> 28:35.080]  При этом прикол в том, что мы не можем
[28:35.080 --> 28:37.080]  просто так спуститься в ребенка.
[28:39.080 --> 28:41.080]  Потому что у вас здесь по T-1 элементов.
[28:41.080 --> 28:43.080]  Поэтому что делать? Происходит
[28:43.080 --> 28:45.080]  слияние внезапно.
[28:47.080 --> 28:49.080]  По пункту
[28:51.080 --> 28:53.080]  вот этот вот.
[28:55.080 --> 28:57.080]  У вас появляется один здоровый корень.
[29:03.080 --> 29:05.080]  Вот мы наконец-то пришли к тому моменту,
[29:05.080 --> 29:07.080]  когда высота уменьшилась, кстати.
[29:09.080 --> 29:11.080]  Его дети.
[29:13.080 --> 29:15.080]  Это A, B.
[29:19.080 --> 29:21.080]  D, E, G, K.
[29:25.080 --> 29:27.080]  N, O.
[29:29.080 --> 29:31.080]  Q, R, S.
[29:33.080 --> 29:35.080]  U, V.
[29:37.080 --> 29:39.080]  Y, Z.
[29:39.080 --> 29:41.080]  Вот такое вот дерево.
[29:41.080 --> 29:43.080]  И теперь из него удаляют D.
[29:45.080 --> 29:47.080]  Ну окей, смотрим.
[29:47.080 --> 29:49.080]  Переходим сюда, видим,
[29:49.080 --> 29:51.080]  что здесь много элементов.
[29:51.080 --> 29:53.080]  Больше верно, чем T.
[29:53.080 --> 29:55.080]  Поэтому просто D здесь удаляется путем
[29:55.080 --> 29:57.080]  отпиливания.
[30:03.080 --> 30:05.080]  В случае 3V.
[30:13.080 --> 30:15.080]  Что?
[30:15.080 --> 30:17.080]  Кого?
[30:19.080 --> 30:21.080]  Да, конечно, вы просто пробегайте
[30:21.080 --> 30:23.080]  по ним.
[30:23.080 --> 30:25.080]  Смотрите, чтобы реализовать 3-й случай,
[30:25.080 --> 30:27.080]  вам нужно понять,
[30:27.080 --> 30:29.080]  что ключ K лежит в X-рейтам.
[30:29.080 --> 30:31.080]  Вы это делаете с помощью
[30:31.080 --> 30:33.080]  краски просто либо прохода линейного,
[30:33.080 --> 30:35.080]  либо бинпоиском как-то по узлу.
[30:47.080 --> 30:49.080]  Вообще, по-хорошему, в идеале вы
[30:49.080 --> 30:51.080]  сначала вызовите и проверьте,
[30:51.080 --> 30:53.080]  есть ли он или нет.
[30:53.080 --> 30:55.080]  Потому что если элемента просто
[30:55.080 --> 30:57.080]  нет в дереве,
[30:57.080 --> 30:59.080]  зачем-то что-то мучится его ломать
[30:59.080 --> 31:01.080]  как-то.
[31:01.080 --> 31:03.080]  Но можно и не делать файнт
[31:03.080 --> 31:05.080]  на самом деле. Просто если в какой-то момент вы пришли вниз
[31:05.080 --> 31:07.080]  и там нет элемента, то
[31:07.080 --> 31:09.080]  да, чуть-чуть перелопатели
[31:09.080 --> 31:11.080]  свой дерево.
[31:11.080 --> 31:13.080]  Ну круто, конечно, но зачем вы это делали?
[31:13.080 --> 31:15.080]  Не очень понятно. Ну окей, перелопатели,
[31:15.080 --> 31:17.080]  оно все еще корректное будет после этой
[31:17.080 --> 31:19.080]  операции. Вы просто пойдете вниз и обнаружите, что
[31:19.080 --> 31:21.080]  элемента нет.
[31:21.080 --> 31:23.080]  Ну ладно, ничего страшного,
[31:23.080 --> 31:25.080]  можно вызвать один проход. Можно вызвать
[31:25.080 --> 31:27.080]  файнт сначала, потом
[31:27.080 --> 31:29.080]  всю эту процедуру, но зачем?
[31:33.080 --> 31:35.080]  Ну например, вот вы перелопатели
[31:35.080 --> 31:37.080]  уменьшили глубину. При этом у вас
[31:37.080 --> 31:39.080]  D вообще могло не быть в дереве на самом деле.
[31:41.080 --> 31:43.080]  Ну я же говорю, да, вы можете дерево
[31:43.080 --> 31:45.080]  перелопатить, оставить его корректным.
[31:45.080 --> 31:47.080]  Вот, но при этом ничего и не найти.
[31:47.080 --> 31:49.080]  Что?
[31:53.080 --> 31:55.080]  Ну, спускаться лишний раз-то долго, потому что
[31:55.080 --> 31:57.080]  вам читать надо два раза.
[31:57.080 --> 31:59.080]  Странички вот эти вот.
[31:59.080 --> 32:01.080]  Ну перелопачевое
[32:01.080 --> 32:03.080]  дерево тоже не то что прям классная идея, если честно.
[32:03.080 --> 32:05.080]  То есть как бы чтобы быстрее, здесь
[32:05.080 --> 32:07.080]  сложно сказать, все есть
[32:07.080 --> 32:09.080]  железо, грубо говоря, на котором вы пишете, и ранга дерева.
[32:11.080 --> 32:13.080]  Здесь как бы нельзя давать какую-то теоретическую
[32:13.080 --> 32:15.080]  оценку.
[32:15.080 --> 32:17.080]  Так, ну и последний случай
[32:17.080 --> 32:19.080]  это УДМБ.
[32:25.080 --> 32:27.080]  Стоим в корне, все нормально,
[32:27.080 --> 32:29.080]  идем вниз, смотрим. Ага,
[32:29.080 --> 32:31.080]  элементов мало.
[32:31.080 --> 32:33.080]  Но у нас есть любимый брат,
[32:33.080 --> 32:35.080]  который с нами поделится.
[32:37.080 --> 32:39.080]  Вот этот вот чувак, вот он сейчас
[32:39.080 --> 32:41.080]  будет жертвовать собой.
[32:43.080 --> 32:45.080]  То есть вот такой случай у нас, что
[32:45.080 --> 32:47.080]  xCity содержит
[32:49.080 --> 32:51.080]  xCity содержит t-1
[32:51.080 --> 32:53.080]  элемент, вот наш ребеночек.
[32:53.080 --> 32:55.080]  Но у него есть брат,
[32:55.080 --> 32:57.080]  большой брат, который содержит много элементов.
[32:57.080 --> 32:59.080]  Поэтому это 3b.
[32:59.080 --> 33:01.080]  Что делается?
[33:01.080 --> 33:03.080]  Полняется следующий трюк.
[33:07.080 --> 33:09.080]  Сюда пишется e,
[33:09.080 --> 33:11.080]  сюда пишется c.
[33:13.080 --> 33:15.080]  Единственное проблема в том,
[33:15.080 --> 33:17.080]  что у вас как бы здесь ключ удалился,
[33:17.080 --> 33:19.080]  поэтому вы должны будто бы вызвать,
[33:19.080 --> 33:21.080]  будто бы у вас на самом деле здесь d
[33:21.080 --> 33:23.080]  остается,
[33:23.080 --> 33:25.080]  и вы делаете e raise от d от этого узла дальше.
[33:25.080 --> 33:27.080]  Потому что у вас здесь есть дети,
[33:27.080 --> 33:29.080]  с которыми тоже надо как-то управляться,
[33:29.080 --> 33:31.080]  и нельзя просто вырезать элементы,
[33:31.080 --> 33:33.080]  схлопнуть детей.
[33:33.080 --> 33:35.080]  Дети это вам не игрушка.
[33:35.080 --> 33:37.080]  Вот бы дерево доказывает.
[33:37.080 --> 33:39.080]  Подождите, сейчас.
[33:39.080 --> 33:41.080]  d остается.
[33:41.080 --> 33:43.080]  У вас же здесь d, e, g, k?
[33:43.080 --> 33:45.080]  Будто бы было, да?
[33:45.080 --> 33:47.080]  Как изначально.
[33:49.080 --> 33:51.080]  А, мы d удалили, все, окей.
[33:53.080 --> 33:55.080]  Сейчас, подождите.
[33:55.080 --> 33:57.080]  И смотри, что у вас происходит.
[33:57.080 --> 33:59.080]  Вот вы будто бы такое дерево оставили,
[33:59.080 --> 34:01.080]  дальше и raise от e здесь делать,
[34:01.080 --> 34:03.080]  от этого узла.
[34:03.080 --> 34:05.080]  Потому что если вы просто выпилите отсюда d,
[34:05.080 --> 34:07.080]  у вас есть два ребенка, с которыми надо что-то делать.
[34:09.080 --> 34:11.080]  Ну да, да, да.
[34:11.080 --> 34:13.080]  Вот сейчас вы будете тоже рекурсивно запускать от него.
[34:13.080 --> 34:15.080]  То есть будто бы вы взяли,
[34:15.080 --> 34:17.080]  поперекидывали элементы,
[34:17.080 --> 34:19.080]  но вот этот чувак, его e отсюда надо удалить,
[34:19.080 --> 34:21.080]  на самом деле.
[34:21.080 --> 34:23.080]  То есть это будто бы вот как 2a мы делали с вами,
[34:23.080 --> 34:25.080]  чтобы вызвать вот этот узел,
[34:25.080 --> 34:27.080]  вот этот узел,
[34:27.080 --> 34:29.080]  вот этот узел,
[34:29.080 --> 34:31.080]  вот этот узел,
[34:31.080 --> 34:33.080]  2a мы делали с вами,
[34:33.080 --> 34:35.080]  чтобы вызвать этот e raise max, вот этих вот.
[34:35.080 --> 34:37.080]  То есть вы там не просто выпиливаете чувака,
[34:37.080 --> 34:39.080]  а вызываете от него e raise нормально,
[34:39.080 --> 34:41.080]  чтобы с детьми все было хорошо.
[34:41.080 --> 34:43.080]  Иначе, ну, дети расстроятся.
[34:45.080 --> 34:47.080]  Как бы отца забрали,
[34:47.080 --> 34:49.080]  а с ним ничего не сделали,
[34:49.080 --> 34:51.080]  надо о них позаботиться.
[34:51.080 --> 34:53.080]  Грустная история.
[34:53.080 --> 34:55.080]  Я забыл дописать последний шаг,
[34:57.080 --> 34:59.080]  что здесь еще нужно с ребенком разобраться.
[34:59.080 --> 35:01.080]  Но почему это так?
[35:03.080 --> 35:05.080]  Давайте мы из
[35:05.080 --> 35:07.080]  этого дерева,
[35:09.080 --> 35:11.080]  вот из этого, да,
[35:13.080 --> 35:15.080]  вот отсюда
[35:15.080 --> 35:17.080]  сделаем delete a.
[35:21.080 --> 35:23.080]  Что тогда происходит?
[35:25.080 --> 35:27.080]  Давайте будем считать, что здесь еще есть какие-то дети.
[35:29.080 --> 35:31.080]  Да, да, да, да, да.
[35:37.080 --> 35:39.080]  То есть вот, допустим, у нас есть какие-то дети.
[35:39.080 --> 35:41.080]  Ну, здесь их нет,
[35:41.080 --> 35:43.080]  но давайте допустим, чтобы было понятнее,
[35:43.080 --> 35:45.080]  что нужно доделать.
[35:45.080 --> 35:47.080]  Только их надо как-нибудь обозначить по-хорошему.
[35:47.080 --> 35:49.080]  Давайте t1,
[35:49.080 --> 35:51.080]  t3,
[35:51.080 --> 35:53.080]  t4, t5.
[35:53.080 --> 35:55.080]  Ну, это t2, соответственно,
[35:55.080 --> 35:57.080]  у меня просто негде его написать.
[35:57.080 --> 35:59.080]  Что тогда вы должны сделать по-хорошему?
[36:01.080 --> 36:03.080]  Ну, во-первых, как мы с вами и говорили,
[36:03.080 --> 36:05.080]  что у вас происходит?
[36:05.080 --> 36:07.080]  Во-первых, у вас происходит
[36:07.080 --> 36:09.080]  эта вот переброска этих чуваков.
[36:09.080 --> 36:11.080]  То есть вот ваш p.
[36:11.080 --> 36:13.080]  Здесь что-то страшное.
[36:15.080 --> 36:17.080]  Что будет здесь?
[36:17.080 --> 36:19.080]  Во-первых, у вас сюда e перебрасывается,
[36:19.080 --> 36:21.080]  сюда c.
[36:21.080 --> 36:23.080]  Тут такое вот дерево получается.
[36:23.080 --> 36:25.080]  Ну, единственное, здесь у вас будет слияние большое.
[36:25.080 --> 36:27.080]  Да, сейчас отменим.
[36:31.080 --> 36:33.080]  То есть у вас сначала здесь все сольется.
[36:37.080 --> 36:39.080]  c, l, p, t, x.
[36:41.080 --> 36:43.080]  Вот.
[36:45.080 --> 36:47.080]  Сейчас e, c, l, p, t, x.
[36:47.080 --> 36:49.080]  Вот.
[36:49.080 --> 36:51.080]  Сейчас.
[36:51.080 --> 36:53.080]  И что я хочу еще сделать?
[36:55.080 --> 36:57.080]  Давайте я буду считать,
[36:57.080 --> 36:59.080]  что у меня здесь...
[36:59.080 --> 37:01.080]  Ладно, давайте я нарисую просто новое дерево.
[37:01.080 --> 37:03.080]  Чтобы не танцевать
[37:03.080 --> 37:05.080]  на этих старых костях.
[37:13.080 --> 37:15.080]  У меня есть такое дерево.
[37:15.080 --> 37:17.080]  Так, здесь будет p.
[37:19.080 --> 37:21.080]  Здесь будет что-то страшное,
[37:21.080 --> 37:23.080]  не нужное нам.
[37:23.080 --> 37:25.080]  Здесь будет c, l, m.
[37:27.080 --> 37:29.080]  Здесь будет n, o.
[37:31.080 --> 37:33.080]  Ой, кто там левее?
[37:33.080 --> 37:35.080]  Jk.
[37:41.080 --> 37:43.080]  Сейчас.
[37:43.080 --> 37:45.080]  Надо буквы подобрать.
[37:49.080 --> 37:51.080]  Это a, b.
[37:53.080 --> 37:55.080]  Здесь будет d, e, f.
[37:55.080 --> 37:57.080]  Не нужны.
[38:01.080 --> 38:03.080]  f, g.
[38:09.080 --> 38:11.080]  h, i, j.
[38:11.080 --> 38:13.080]  О, вот такое вот дерево пускай у меня будет.
[38:15.080 --> 38:17.080]  Ну, здесь там какая-то часть,
[38:17.080 --> 38:19.080]  которая нас не очень интересует.
[38:19.080 --> 38:21.080]  Вот.
[38:21.080 --> 38:23.080]  Я хочу вызвать у него delete
[38:23.080 --> 38:25.080]  от a.
[38:27.080 --> 38:29.080]  Что тогда я делаю?
[38:31.080 --> 38:33.080]  Ну, я перерисовал,
[38:33.080 --> 38:35.080]  чтобы здесь было три ключа,
[38:35.080 --> 38:37.080]  чтобы мне эти слияния не нужно было делать.
[38:37.080 --> 38:39.080]  И они у меня не портили картину.
[38:39.080 --> 38:41.080]  Мы выходим сюда, отлично.
[38:41.080 --> 38:43.080]  Вызываем запуск отсюда.
[38:43.080 --> 38:45.080]  Смотрим.
[38:45.080 --> 38:47.080]  Ага, здесь t-1, чувак, грустно.
[38:47.080 --> 38:49.080]  Но здесь их три,
[38:49.080 --> 38:51.080]  поэтому этот чувак может поделиться с нами на самом деле.
[38:51.080 --> 38:53.080]  Поэтому что происходит?
[38:53.080 --> 38:55.080]  Происходит такая вот трансформация
[38:55.080 --> 38:57.080]  следующего вида.
[38:57.080 --> 38:59.080]  Ну, давайте детей их нарисуем сразу.
[39:01.080 --> 39:03.080]  t1,
[39:03.080 --> 39:05.080]  t2,
[39:05.080 --> 39:07.080]  t3,
[39:07.080 --> 39:09.080]  t4,
[39:09.080 --> 39:11.080]  t5.
[39:13.080 --> 39:15.080]  Что мы с вами говорили?
[39:15.080 --> 39:17.080]  Мы с вами говорили, что c мы будто бы перекидываем сюда,
[39:17.080 --> 39:19.080]  а d сюда.
[39:25.080 --> 39:27.080]  Это пункт
[39:27.080 --> 39:29.080]  3b.
[39:31.080 --> 39:33.080]  Что у вас здесь происходит?
[39:33.080 --> 39:35.080]  У вас, понятно, остается этот p несчастный.
[39:35.080 --> 39:37.080]  Стоим
[39:37.080 --> 39:39.080]  правым под деревом.
[39:39.080 --> 39:41.080]  Здесь мы с вами говорили, что
[39:41.080 --> 39:43.080]  происходят страшные вещи.
[39:43.080 --> 39:45.080]  Ну, gm тут вообще не страшно,
[39:45.080 --> 39:47.080]  что происходит.
[39:47.080 --> 39:49.080]  Это я даже рисовать не буду.
[39:49.080 --> 39:51.080]  Что происходит здесь?
[39:51.080 --> 39:53.080]  Вы сюда пишете d,
[39:55.080 --> 39:57.080]  да,
[39:57.080 --> 39:59.080]  а сюда будто бы пишете
[39:59.080 --> 40:01.080]  a,
[40:01.080 --> 40:03.080]  b, c.
[40:03.080 --> 40:05.080]  И проблема в том,
[40:05.080 --> 40:07.080]  что если у меня здесь еще остается d, e, f
[40:07.080 --> 40:09.080]  с их деревьями,
[40:09.080 --> 40:11.080]  то мне нужно делать и рейс от a здесь,
[40:11.080 --> 40:13.080]  и рейс от d здесь.
[40:13.080 --> 40:15.080]  Это грустная история.
[40:15.080 --> 40:17.080]  Вот так делать не нужно.
[40:17.080 --> 40:19.080]  Поэтому что здесь делается?
[40:19.080 --> 40:21.080]  Вот здесь остается e, f,
[40:21.080 --> 40:23.080]  в которых какие дети были?
[40:23.080 --> 40:25.080]  У e правый ребенок,
[40:25.080 --> 40:27.080]  это левый ребенок, это t5.
[40:29.080 --> 40:31.080]  Здесь у вас
[40:31.080 --> 40:33.080]  t1,
[40:33.080 --> 40:35.080]  t2,
[40:35.080 --> 40:37.080]  t3.
[40:37.080 --> 40:39.080]  А t4 был левым ребенком d.
[40:41.080 --> 40:43.080]  И мы не можем его сделать левым ребенком d,
[40:43.080 --> 40:45.080]  там abc стоит.
[40:45.080 --> 40:47.080]  Но смотрите, какое красивое вакантное место есть для t4.
[40:49.080 --> 40:51.080]  Давайте поймем, почему это работает.
[40:51.080 --> 40:53.080]  Элементы все в t4
[40:53.080 --> 40:55.080]  меньше, чем d, согласны?
[40:55.080 --> 40:57.080]  Потому что это левый ребенок d.
[40:57.080 --> 40:59.080]  Но больше, чем c,
[40:59.080 --> 41:01.080]  потому что они в правом поддереве от c.
[41:01.080 --> 41:03.080]  То есть все элементы t4
[41:03.080 --> 41:05.080]  между c и d. Что здесь происходит?
[41:05.080 --> 41:07.080]  Они все больше, чем c,
[41:07.080 --> 41:09.080]  потому что это
[41:09.080 --> 41:11.080]  их левый родитель,
[41:11.080 --> 41:13.080]  назовем это так.
[41:13.080 --> 41:15.080]  Родитель номер один, родитель номер два.
[41:15.080 --> 41:17.080]  А у
[41:17.080 --> 41:19.080]  c родитель
[41:19.080 --> 41:21.080]  это d.
[41:21.080 --> 41:23.080]  Поэтому все вот эти вот чуваки должны быть меньше, чем d.
[41:23.080 --> 41:25.080]  Поэтому все элементы t4
[41:25.080 --> 41:27.080]  снова между c и d и заняли корректное положение.
[41:27.080 --> 41:29.080]  То есть мы здесь не дописали
[41:29.080 --> 41:31.080]  саби на самом деле,
[41:31.080 --> 41:33.080]  что
[41:33.080 --> 41:35.080]  левого
[41:35.080 --> 41:37.080]  ребенка
[41:37.080 --> 41:39.080]  x, c,
[41:39.080 --> 41:41.080]  и плюс один
[41:43.080 --> 41:45.080]  на место
[41:45.080 --> 41:47.080]  подвешиваемого, назовем это так.
[41:47.080 --> 41:49.080]  Потому что это сложно
[41:49.080 --> 41:51.080]  описать словами и не влезет сюда.
[41:51.080 --> 41:53.080]  Вот.
[41:55.080 --> 41:57.080]  Теперь понятно.
[41:57.080 --> 41:59.080]  Это все в долине из b дерева.
[41:59.080 --> 42:01.080]  Наконец-то мы закончили.
[42:03.080 --> 42:05.080]  Приключение на
[42:05.080 --> 42:07.080]  полтора часа. Вошли и вышли.
[42:11.080 --> 42:13.080]  Откуда я могу стирать?
[42:13.080 --> 42:15.080]  Где бесполезную информацию?
[42:15.080 --> 42:17.080]  На самой правой доске?
[42:21.080 --> 42:23.080]  Так.
[42:39.080 --> 42:41.080]  Так, кейс-плей дерева.
[42:51.080 --> 42:53.080]  Сплей дерева это вообще очень простая
[42:53.080 --> 42:55.080]  штука на самом деле.
[42:55.080 --> 42:57.080]  Если не доказывать теорему,
[42:57.080 --> 42:59.080]  которую мы не будем доказывать.
[42:59.080 --> 43:01.080]  Поэтому это очень простая штука.
[43:01.080 --> 43:03.080]  Сплей дерева
[43:03.080 --> 43:05.080]  обладает
[43:05.080 --> 43:07.080]  одной операцией.
[43:07.080 --> 43:09.080]  Называется сплей.
[43:09.080 --> 43:11.080]  И через нее все выражается.
[43:11.080 --> 43:13.080]  И мерч, и спли.
[43:13.080 --> 43:15.080]  Все через сплей выражается.
[43:15.080 --> 43:17.080]  Вот.
[43:17.080 --> 43:19.080]  Окей.
[43:19.080 --> 43:21.080]  Здесь даже определение сложно написать,
[43:21.080 --> 43:23.080]  потому что просто дерево поиска обычное.
[43:23.080 --> 43:25.080]  Здесь совсем все просто.
[43:25.080 --> 43:27.080]  Давайте скажем, что такое сплей.
[43:27.080 --> 43:29.080]  Сплей
[43:29.080 --> 43:31.080]  от x
[43:31.080 --> 43:33.080]  сделай
[43:33.080 --> 43:35.080]  x корнем
[43:35.080 --> 43:37.080]  путем
[43:37.080 --> 43:39.080]  комбинации
[43:41.080 --> 43:43.080]  поворотов.
[43:43.080 --> 43:45.080]  У сплей всего три вида поворотов.
[43:47.080 --> 43:49.080]  Называются они не очень
[43:49.080 --> 43:51.080]  лицеприятно.
[43:51.080 --> 43:53.080]  Надеюсь, YouTube нас не забанит.
[43:53.080 --> 43:55.080]  Поэтому просто напишу их название.
[43:59.080 --> 44:01.080]  Вот.
[44:01.080 --> 44:03.080]  Собственно, их три штуки.
[44:03.080 --> 44:05.080]  Как вы можете видеть, они
[44:05.080 --> 44:07.080]  состоят из двух слогов разных.
[44:07.080 --> 44:09.080]  Вот.
[44:09.080 --> 44:11.080]  Что?
[44:11.080 --> 44:13.080]  Абсолютно так, как написано.
[44:13.080 --> 44:15.080]  Прям плохо видно?
[44:15.080 --> 44:17.080]  Ну, Z, I, J.
[44:17.080 --> 44:19.080]  З, A, J.
[44:19.080 --> 44:21.080]  Там, не знаю, просто оставляйте варианты.
[44:21.080 --> 44:23.080]  Вот.
[44:23.080 --> 44:25.080]  Окей.
[44:25.080 --> 44:27.080]  Соответственно,
[44:27.080 --> 44:29.080]  что теперь?
[44:29.080 --> 44:31.080]  Давайте рассмотрим просто,
[44:31.080 --> 44:33.080]  как они все выглядят.
[44:33.080 --> 44:35.080]  И первый случай,
[44:35.080 --> 44:37.080]  когда мы будем
[44:37.080 --> 44:39.080]  и первый случай,
[44:39.080 --> 44:41.080]  это вот этот прекрасный товарищ.
[44:51.080 --> 44:53.080]  Что?
[44:53.080 --> 44:55.080]  Три вида.
[44:55.080 --> 44:57.080]  Вот.
[44:57.080 --> 44:59.080]  И первый это
[44:59.080 --> 45:01.080]  товарищ Фрейд.
[45:01.080 --> 45:03.080]  Вот.
[45:03.080 --> 45:05.080]  Что?
[45:05.080 --> 45:07.080]  Это R.
[45:07.080 --> 45:09.080]  Рут. Это корень.
[45:11.080 --> 45:13.080]  На первой партии
[45:13.080 --> 45:15.080]  он свободное место есть.
[45:17.080 --> 45:19.080]  Ну, не то чтобы это много
[45:19.080 --> 45:21.080]  времени займет.
[45:21.080 --> 45:23.080]  Окей, хорошо, я буду рисовать еще крупнее.
[45:23.080 --> 45:25.080]  Но это уже
[45:25.080 --> 45:27.080]  останется изменение, к сожалению.
[45:27.080 --> 45:29.080]  Вот что делает Зиг?
[45:29.080 --> 45:31.080]  Он делает, что у вас, когда вам остается
[45:31.080 --> 45:33.080]  лишь один шаг до победы,
[45:33.080 --> 45:35.080]  он делает поворот
[45:35.080 --> 45:37.080]  вдоль этого ребра.
[45:51.080 --> 45:53.080]  Достаточно крупно?
[45:57.080 --> 45:59.080]  Слишком хорошо видно.
[45:59.080 --> 46:01.080]  Ну, есть симметричный ему
[46:01.080 --> 46:03.080]  и это наоборот,
[46:03.080 --> 46:05.080]  если вы находитесь справа,
[46:05.080 --> 46:07.080]  то как бы можно делать Зиг влево,
[46:07.080 --> 46:09.080]  можно делать Зиг вправо, как вам удобнее.
[46:11.080 --> 46:13.080]  Нет, мы не будем изобретать
[46:13.080 --> 46:15.080]  AVL дерево.
[46:15.080 --> 46:17.080]  Мы вообще сейчас себе ничего не будем гарантировать
[46:17.080 --> 46:19.080]  на высоту.
[46:19.080 --> 46:21.080]  Как бы это дерево, оно, ну не знаю,
[46:21.080 --> 46:23.080]  оно очень похоже
[46:23.080 --> 46:25.080]  на студента, оно вообще ничего не делает,
[46:25.080 --> 46:27.080]  только иногда
[46:27.080 --> 46:29.080]  что-то там себя проворачивает,
[46:29.080 --> 46:31.080]  совсем надо.
[46:31.080 --> 46:33.080]  Вот. Типа, если вызовете сплэн,
[46:33.080 --> 46:35.080]  так что бы что-то сделать, значит вообще делать ничего не будет.
[46:37.080 --> 46:39.080]  Следующий чувак это
[46:39.080 --> 46:41.080]  удвоенный Зиг.
[46:45.080 --> 46:47.080]  Ситуация какая?
[46:47.080 --> 46:49.080]  Вот у вас есть ваш дедушка,
[46:51.080 --> 46:53.080]  у него есть ребенок в виде
[46:53.080 --> 46:55.080]  вашего отца.
[46:55.080 --> 46:57.080]  И есть вы,
[46:57.080 --> 46:59.080]  давайте раздолбай.
[46:59.080 --> 47:01.080]  Вот.
[47:01.080 --> 47:03.080]  Есть у них тут под деревья какие-то свои.
[47:05.080 --> 47:07.080]  Д.
[47:07.080 --> 47:09.080]  С.
[47:09.080 --> 47:11.080]  Д.
[47:11.080 --> 47:13.080]  Что делает
[47:13.080 --> 47:15.080]  товарищ Зиг?
[47:15.080 --> 47:17.080]  Он делает два поворота.
[47:17.080 --> 47:19.080]  Раз.
[47:19.080 --> 47:21.080]  Два.
[47:21.080 --> 47:23.080]  Два Зига, вау.
[47:23.080 --> 47:25.080]  Собственно, почему это?
[47:25.080 --> 47:27.080]  Когда это происходит?
[47:27.080 --> 47:29.080]  Это происходит, когда у вас вы,
[47:29.080 --> 47:31.080]  ваш отец и ваш дед
[47:31.080 --> 47:33.080]  как бы на одной прямой находитесь.
[47:33.080 --> 47:35.080]  Вот.
[47:35.080 --> 47:37.080]  Тут тоже можно много про что шутить, я не стану.
[47:37.080 --> 47:39.080]  Додумывайте сами.
[47:39.080 --> 47:41.080]  Как это происходит?
[47:41.080 --> 47:43.080]  Ну, промежуточная
[47:43.080 --> 47:45.080]  стадия такая, что у вас есть X,
[47:45.080 --> 47:47.080]  у него есть бывший дед,
[47:47.080 --> 47:49.080]  теперь отец.
[47:49.080 --> 47:51.080]  Его отец
[47:51.080 --> 47:53.080]  становится сыном.
[47:53.080 --> 47:55.080]  Какая ирония.
[48:01.080 --> 48:03.080]  А.
[48:03.080 --> 48:05.080]  Ну и дальше теперь мы
[48:05.080 --> 48:07.080]  занимаем место деда.
[48:09.080 --> 48:11.080]  Выполняем второй поворот.
[48:13.080 --> 48:15.080]  Вроде бы так, да?
[48:15.080 --> 48:17.080]  Как нам занять место деда так, чтобы никто не был против?
[48:19.080 --> 48:21.080]  Будто бы X.
[48:21.080 --> 48:23.080]  Ну, X станет корнем, это понятно.
[48:23.080 --> 48:25.080]  Кто был
[48:25.080 --> 48:27.080]  от него справа?
[48:27.080 --> 48:29.080]  А, ну понятно.
[48:29.080 --> 48:31.080]  Здесь станет дед.
[48:31.080 --> 48:33.080]  Отец станет здесь.
[48:33.080 --> 48:35.080]  Будто бы здесь будет D.
[48:35.080 --> 48:37.080]  Здесь будет A.
[48:37.080 --> 48:39.080]  Здесь будет B.
[48:39.080 --> 48:41.080]  Здесь будет C.
[48:41.080 --> 48:43.080]  Вот это товарищ Зиг-Зиг.
[48:43.080 --> 48:45.080]  Мы заняли место деда.
[48:45.080 --> 48:47.080]  Вот.
[48:49.080 --> 48:51.080]  Ну, есть еще один
[48:51.080 --> 48:53.080]  последний чувак, это
[48:53.080 --> 48:55.080]  Зиг-Заг.
[49:07.080 --> 49:09.080]  Он выполняется, когда
[49:11.080 --> 49:13.080]  скажем так, вы с отцом
[49:13.080 --> 49:15.080]  и дедом образуете угол.
[49:19.080 --> 49:21.080]  Что тогда
[49:21.080 --> 49:23.080]  происходит?
[49:23.080 --> 49:25.080]  Ну, происходит абсолютно
[49:25.080 --> 49:27.080]  все то же самое.
[49:27.080 --> 49:29.080]  Вообще ничего не
[49:29.080 --> 49:31.080]  меняется, на самом деле.
[49:31.080 --> 49:33.080]  То есть, сначала, после первого
[49:33.080 --> 49:35.080]  поворота, ну, дед
[49:35.080 --> 49:37.080]  все еще на недосягаемых высотах
[49:37.080 --> 49:39.080]  со своим правым
[49:39.080 --> 49:41.080]  поворотом.
[49:41.080 --> 49:43.080]  То есть, в первом повороте
[49:43.080 --> 49:45.080]  он все еще на недосягаемых высотах.
[49:45.080 --> 49:47.080]  То есть, в первом повороте
[49:47.080 --> 49:49.080]  он все еще на недосягаемых высотах
[49:49.080 --> 49:51.080]  со своим правым под деревом.
[49:51.080 --> 49:53.080]  Но вы уже выше.
[49:55.080 --> 49:57.080]  П, здесь
[49:57.080 --> 49:59.080]  А, здесь
[49:59.080 --> 50:01.080]  B и здесь
[50:01.080 --> 50:03.080]  C. И выполняется поворот
[50:03.080 --> 50:05.080]  до летового ребра.
[50:07.080 --> 50:09.080]  Вы заняли вершину мира.
[50:11.080 --> 50:13.080]  У вас справа дед, слева
[50:13.080 --> 50:15.080]  отец.
[50:17.080 --> 50:19.080]  Вот три вида
[50:19.080 --> 50:21.080]  поворотов.
[50:21.080 --> 50:23.080]  Собственно, сплей от
[50:23.080 --> 50:25.080]  X внезапно.
[50:25.080 --> 50:27.080]  Это применяй
[50:27.080 --> 50:29.080]  повороты, пока не стал корнем.
[50:29.080 --> 50:31.080]  В зависимости от того, какой тебе нужен.
[50:31.080 --> 50:33.080]  Либо зиг-зиг, либо зиг-заг.
[50:33.080 --> 50:35.080]  В зависимости от того, как ты там с имя
[50:35.080 --> 50:37.080]  отцами, дедами, прадедами
[50:37.080 --> 50:39.080]  находишься в каких-то
[50:39.080 --> 50:41.080]  соотношениях. Вот.
[50:41.080 --> 50:43.080]  И если вдруг тебе остался один шаг до корня,
[50:43.080 --> 50:45.080]  то так уж и быть, сделай один раз зиг
[50:45.080 --> 50:47.080]  и захвати власть.
[50:47.080 --> 50:49.080]  Вот. Стань корнем в дереве.
[50:53.080 --> 50:55.080]  Непринципиально
[50:55.080 --> 50:57.080]  вообще.
[50:59.080 --> 51:01.080]  Ну, авторы
[51:01.080 --> 51:03.080]  решили, что более подходит
[51:03.080 --> 51:05.080]  другое слово для однозначного поворота.
[51:05.080 --> 51:07.080]  Я не знаю
[51:07.080 --> 51:09.080]  почему, честно говоря.
[51:11.080 --> 51:13.080]  Нет, нет, нет. Это не в этом
[51:13.080 --> 51:15.080]  прикол.
[51:15.080 --> 51:17.080]  Скажем так, зиг – это просто поворот.
[51:17.080 --> 51:19.080]  Один.
[51:19.080 --> 51:21.080]  Зиг-зиг – это двойной поворот, а зиг-заг – это
[51:21.080 --> 51:23.080]  надо было как-то же назвать для третьего случая.
[51:23.080 --> 51:25.080]  Я думаю, там Локи, например, такая
[51:25.080 --> 51:27.080]  была.
[51:31.080 --> 51:33.080]  Ну, в плане, их специально
[51:33.080 --> 51:35.080]  так называют. Это нужно их вводить специально
[51:35.080 --> 51:37.080]  для анализа.
[51:37.080 --> 51:39.080]  Да, для заказательства.
[51:39.080 --> 51:41.080]  Для кода достаточно знать, что есть
[51:41.080 --> 51:43.080]  все. И вы вот там как-то им
[51:43.080 --> 51:45.080]  крутите свое дерево.
[51:45.080 --> 51:47.080]  Вообще, вот эти вот
[51:47.080 --> 51:49.080]  зиг-зиг-зиг-заг, они нужны
[51:49.080 --> 51:51.080]  в следующую теорему, которую мы доказывать
[51:51.080 --> 51:53.080]  не будем.
[51:53.080 --> 51:55.080]  Что?
[51:55.080 --> 51:57.080]  Да.
[51:57.080 --> 51:59.080]  Ну, симметричных
[51:59.080 --> 52:01.080]  надо сделать, да. Ну, понятно, что я
[52:01.080 --> 52:03.080]  рисовал только в одну сторону, а если симметричные?
[52:03.080 --> 52:05.080]  Собственно, про что
[52:05.080 --> 52:07.080]  эта теорем прекрасная?
[52:07.080 --> 52:09.080]  Теорема гласит следующее.
[52:09.080 --> 52:11.080]  А высоте?
[52:11.080 --> 52:13.080]  Не так.
[52:13.080 --> 52:15.080]  Не так. Немножко не высоте, а
[52:15.080 --> 52:17.080]  о, времени с плей.
[52:19.080 --> 52:21.080]  Вот как вы думаете, за сколько
[52:21.080 --> 52:23.080]  делается операция с плей?
[52:23.080 --> 52:25.080]  Почему, Логориф, у вас дерево бомбу к Машту родится?
[52:25.080 --> 52:27.080]  Что?
[52:27.080 --> 52:29.080]  Как понесли такое
[52:29.080 --> 52:31.080]  аж?
[52:31.080 --> 52:33.080]  Да, внезапно.
[52:39.080 --> 52:41.080]  Это вообще не очевидно,
[52:41.080 --> 52:43.080]  на самом деле.
[52:45.080 --> 52:47.080]  Ну, вот у нас было это
[52:47.080 --> 52:49.080]  на лекциях раньше.
[52:49.080 --> 52:51.080]  Ну, у средняя по набору операции,
[52:51.080 --> 52:53.080]  если вы вызовете кучу раз с плей,
[52:53.080 --> 52:55.080]  то у вас вероятно, что в среднем
[52:55.080 --> 52:57.080]  за QLogin
[52:57.080 --> 52:59.080]  они отработают.
[52:59.080 --> 53:01.080]  Ну, конечно.
[53:01.080 --> 53:03.080]  Ну, как бы плохие деревья,
[53:03.080 --> 53:05.080]  плохие времена.
[53:05.080 --> 53:07.080]  Хорошие деревья, хорошие времена.
[53:07.080 --> 53:09.080]  Все хорошо.
[53:09.080 --> 53:11.080]  То есть в среднем дерево
[53:11.080 --> 53:13.080]  хорошее получается.
[53:13.080 --> 53:15.080]  Но, понятное дело, что можно привести
[53:15.080 --> 53:17.080]  операцию в последовательность с плейов, которые будут
[53:17.080 --> 53:19.080]  работать очень долго.
[53:19.080 --> 53:21.080]  Ну, вы этим на семинаре
[53:21.080 --> 53:23.080]  будете заниматься вообще.
[53:23.080 --> 53:25.080]  Пытаться ломать с плей дерево.
[53:27.080 --> 53:29.080]  Окей, немножко
[53:29.080 --> 53:31.080]  о том, как реализована операция.
[53:31.080 --> 53:33.080]  Зачем вообще сплей нужен, на самом деле?
[53:33.080 --> 53:35.080]  Вообще непонятно, зачем мы делаем сплей,
[53:35.080 --> 53:37.080]  потому что это амортизированный логариф,
[53:37.080 --> 53:39.080]  что хуже, чем обычные деревья,
[53:39.080 --> 53:41.080]  которые мы с вами прошли.
[53:41.080 --> 53:43.080]  Но сплей — это такая интересная особенность,
[53:43.080 --> 53:45.080]  что...
[53:45.080 --> 53:47.080]  Ну, давайте посмотрим на практике вообще,
[53:47.080 --> 53:49.080]  когда вы используете деревья поиска.
[53:49.080 --> 53:51.080]  Чтобы там что-то найти, вставить или удалить, да?
[53:51.080 --> 53:53.080]  Предположим, у вас есть там какой-нибудь сайт ваш,
[53:53.080 --> 53:55.080]  там есть login, ну,
[53:55.080 --> 53:57.080]  и там есть пользователи.
[53:57.080 --> 53:59.080]  И вы храните там какие-нибудь там
[53:59.080 --> 54:01.080]  логин и пароли, не знаю.
[54:01.080 --> 54:03.080]  Вот, их можно хранить в хэш-таблице.
[54:03.080 --> 54:05.080]  Не знаю, что это такое, но можно.
[54:05.080 --> 54:07.080]  Можно хранить массивы, просто ходить, бегать по массиву
[54:07.080 --> 54:09.080]  и смотреть, правда ли, что подходит?
[54:09.080 --> 54:11.080]  Вот. Можно хранить дерево поиска.
[54:11.080 --> 54:13.080]  И, как бы казалось бы,
[54:15.080 --> 54:17.080]  если у вас какой-то содержательный сайт,
[54:17.080 --> 54:19.080]  то там есть касты людей, которые
[54:19.080 --> 54:21.080]  часто на сайт заходят,
[54:21.080 --> 54:23.080]  а есть касты людей, которые
[54:23.080 --> 54:25.080]  редко на сайт заходят, да?
[54:25.080 --> 54:27.080]  И, как бы, получается,
[54:27.080 --> 54:29.080]  что вам по-хорошему
[54:29.080 --> 54:31.080]  элементы, на которые часто обращаются,
[54:31.080 --> 54:33.080]  чтобы они находились повыше.
[54:37.080 --> 54:39.080]  Собственно, это сплей делает.
[54:41.080 --> 54:43.080]  Там find работает следующим образом.
[54:43.080 --> 54:45.080]  Раздаваете find как в дерево поиска,
[54:45.080 --> 54:47.080]  и дальше от него сплей этого элемента вызываете,
[54:47.080 --> 54:49.080]  чтобы его в корень поднять.
[54:49.080 --> 54:51.080]  И, поэтому, если у вас какое-то очень малое количество людей,
[54:51.080 --> 54:53.080]  которые постоянно,
[54:53.080 --> 54:55.080]  то есть очень малое количество уникальных
[54:55.080 --> 54:57.080]  запросов постоянно делается,
[54:57.080 --> 54:59.080]  то сплей будет работать очень быстро
[54:59.080 --> 55:01.080]  на них.
[55:01.080 --> 55:03.080]  Нужна сгубина будет небольшая
[55:03.080 --> 55:05.080]  для этих элементов.
[55:05.080 --> 55:07.080]  И, конечно, понятное дело, вам придется
[55:07.080 --> 55:09.080]  ходить туда, на дно,
[55:09.080 --> 55:11.080]  за редкими пользователями.
[55:11.080 --> 55:13.080]  Вот мотивация сплей-дерево.
[55:29.080 --> 55:31.080]  Я не знаю такого.
[55:33.080 --> 55:35.080]  Мне кажется, что нет,
[55:35.080 --> 55:37.080]  если честно.
[55:37.080 --> 55:39.080]  Потому что у сплея
[55:39.080 --> 55:41.080]  есть еще много
[55:41.080 --> 55:43.080]  сплея такая штука, что
[55:43.080 --> 55:45.080]  мы с ним вот так
[55:45.080 --> 55:47.080]  буквально почти разобрались,
[55:47.080 --> 55:49.080]  но там очень много теоремий,
[55:49.080 --> 55:51.080]  в том числе теоретико-информационных.
[55:51.080 --> 55:53.080]  Есть такая штука теории информации,
[55:53.080 --> 55:55.080]  которая оценивает, сколько вам информации надо узнать,
[55:55.080 --> 55:57.080]  чтобы найти элемент какой-нибудь, например,
[55:57.080 --> 55:59.080]  деревья или что-нибудь такое.
[55:59.080 --> 56:01.080]  Оказывается, что сплей это оптимально.
[56:01.080 --> 56:03.080]  Но мы этого не будем делать,
[56:03.080 --> 56:05.080]  потому что мы
[56:05.080 --> 56:07.080]  все-таки,
[56:07.080 --> 56:09.080]  скажем так, еще жить хотим.
[56:11.080 --> 56:13.080]  Давайте подумаем, как выражать операцию
[56:13.080 --> 56:15.080]  через сплей.
[56:15.080 --> 56:17.080]  Ну, файн понятно.
[56:19.080 --> 56:21.080]  Ищем, плюс сплей.
[56:23.080 --> 56:25.080]  Как делать инсерт?
[56:27.080 --> 56:29.080]  Ну, чтобы элемент поднять в корень.
[56:31.080 --> 56:33.080]  Так, нет, это не круто.
[56:33.080 --> 56:35.080]  Мы же хотим его еще вверх поднимать.
[56:35.080 --> 56:37.080]  Но мы же популярные должны вверх
[56:37.080 --> 56:39.080]  как-то закидывать.
[56:39.080 --> 56:41.080]  Вот.
[56:41.080 --> 56:43.080]  Как делать инсерт, по-вашему?
[56:43.080 --> 56:45.080]  Так, мы выучим динарно в дереве,
[56:45.080 --> 56:47.080]  если его упасть, я скажу.
[56:51.080 --> 56:53.080]  Здравствуйте.
[56:55.080 --> 56:57.080]  Если элементик меньше, то идем в левый,
[56:57.080 --> 56:59.080]  если больше, то идем в правый.
[56:59.080 --> 57:01.080]  Как в обычных, да.
[57:01.080 --> 57:03.080]  У нас же дерево поиска.
[57:03.080 --> 57:05.080]  Прикроем.
[57:05.080 --> 57:07.080]  Что?
[57:07.080 --> 57:09.080]  У нас дерево поиска.
[57:09.080 --> 57:11.080]  Конечно, да.
[57:11.080 --> 57:13.080]  Теперь мы будем делать сплей.
[57:13.080 --> 57:15.080]  Значит, у нас все операции будут
[57:15.080 --> 57:17.080]  заканчиваться сплеем, если что.
[57:19.080 --> 57:21.080]  Да.
[57:31.080 --> 57:33.080]  Ну, удаление давайте.
[57:35.080 --> 57:37.080]  А от кого сплей-то дергать?
[57:37.080 --> 57:39.080]  От него не будешь играть.
[57:39.080 --> 57:41.080]  Вот нет.
[57:41.080 --> 57:43.080]  Давайте сделаем мерч сначала.
[57:43.080 --> 57:45.080]  Как сделать мерч?
[57:53.080 --> 57:55.080]  Как мерч?
[57:55.080 --> 57:57.080]  Как мерч-то сделать?
[57:57.080 --> 57:59.080]  Вот у вас два дерева, от кого вы сплей будете вызывать?
[58:01.080 --> 58:03.080]  Наивное.
[58:03.080 --> 58:05.080]  Выбрать случайный элемент.
[58:05.080 --> 58:07.080]  И сплеить можно же.
[58:07.080 --> 58:09.080]  Все равно в среднем быстро работает, да?
[58:13.080 --> 58:15.080]  Это уже похоже на правду.
[58:15.080 --> 58:17.080]  Это сплей от T1.max.
[58:21.080 --> 58:23.080]  Что будет особенность T1
[58:23.080 --> 58:25.080]  после вот такого сплея?
[58:29.080 --> 58:31.080]  Не так, что у вас есть вот этот ваш T1.max.
[58:31.080 --> 58:33.080]  И у вас правой ребенка нет.
[58:33.080 --> 58:35.080]  У вас все слева будет.
[58:39.080 --> 58:41.080]  Да.
[58:41.080 --> 58:43.080]  Все.
[58:45.080 --> 58:47.080]  T1 и T2.
[58:49.080 --> 58:51.080]  Это деревья.
[58:51.080 --> 58:53.080]  Но мы искренне верим.
[58:53.080 --> 58:55.080]  Опять же, везде мерч.
[58:55.080 --> 58:57.080]  T1 точка ключи.
[58:57.080 --> 58:59.080]  Меньше, чем T2 точка ключи.
[59:01.080 --> 59:03.080]  Нет, за виду, вот такое соотношение на них, конечно.
[59:03.080 --> 59:05.080]  Как в Декартовом дерево было, например.
[59:09.080 --> 59:11.080]  Вот у вас есть дерево.
[59:11.080 --> 59:13.080]  Вы засплеили его максимальный элемент.
[59:13.080 --> 59:15.080]  Значит, он стал корнем.
[59:15.080 --> 59:17.080]  Было корректно.
[59:17.080 --> 59:19.080]  Да. А так что некорректное, что ли, будет?
[59:21.080 --> 59:23.080]  В смысле? Нет.
[59:23.080 --> 59:25.080]  У вас изначально какой-то дерево, у которого
[59:25.080 --> 59:27.080]  есть какие-то элементы, здесь какие-то элементы.
[59:27.080 --> 59:29.080]  Максимум где лежит?
[59:29.080 --> 59:31.080]  Максимум где-то здесь лежит.
[59:31.080 --> 59:33.080]  Вот вы путем сплея подняли его вверх.
[59:33.080 --> 59:35.080]  И превратили это в
[59:35.080 --> 59:37.080]  дерево без правого сына.
[59:39.080 --> 59:41.080]  А его правое место
[59:41.080 --> 59:43.080]  вместо правого сына занимает T2.
[59:43.080 --> 59:45.080]  Все.
[59:47.080 --> 59:49.080]  Мерч от двух детей
[59:49.080 --> 59:51.080]  вызывается.
[59:51.080 --> 59:53.080]  Все.
[59:57.080 --> 59:59.080]  T2 подвесили ее
[59:59.080 --> 01:00:01.080]  правым сыном.
[01:00:05.080 --> 01:00:07.080]  Зачем?
[01:00:15.080 --> 01:00:17.080]  Не может быть.
[01:00:17.080 --> 01:00:19.080]  У вас условия на ключи, видите?
[01:00:21.080 --> 01:00:23.080]  Нет.
[01:00:25.080 --> 01:00:27.080]  Нет, смотрите, если у вас нет
[01:00:27.080 --> 01:00:29.080]  этого соотношения, все, что вы говорите,
[01:00:29.080 --> 01:00:31.080]  это будет фигня полная.
[01:00:31.080 --> 01:00:33.080]  Так не получится сделать.
[01:00:33.080 --> 01:00:35.080]  А так получится.
[01:00:39.080 --> 01:00:41.080]  Ну что, если ты подсинешь сюда T2, ты ничего не сломаешь.
[01:00:47.080 --> 01:00:49.080]  Нет.
[01:00:49.080 --> 01:00:51.080]  Вершины T1 меньше, чем все вершины T2.
[01:00:55.080 --> 01:00:57.080]  Максимум из T1.
[01:00:57.080 --> 01:00:59.080]  Которые все равно будут меньше, чем
[01:00:59.080 --> 01:01:01.080]  любой из T2 по этому счету.
[01:01:09.080 --> 01:01:11.080]  Стоп, я как-то так понял.
[01:01:11.080 --> 01:01:13.080]  То есть мы вместо того, чтобы нарисовать
[01:01:13.080 --> 01:01:15.080]  сначала T1 и T2, нарисовать T2 и T1
[01:01:15.080 --> 01:01:17.080]  вот на самом низу нарисованного?
[01:01:17.080 --> 01:01:19.080]  Нет.
[01:01:19.080 --> 01:01:21.080]  Это вообще просто дерево какое-то абстрактное.
[01:01:21.080 --> 01:01:23.080]  Абстрактное, то есть
[01:01:23.080 --> 01:01:25.080]  стоит у него T2, стоит у него T1?
[01:01:25.080 --> 01:01:27.080]  Здесь?
[01:01:27.080 --> 01:01:29.080]  Ничего.
[01:01:37.080 --> 01:01:39.080]  Вот жила T1 прекрасная.
[01:01:43.080 --> 01:01:45.080]  Давайте я нарисую побольше.
[01:01:45.080 --> 01:01:47.080]  Вот жила T1 прекрасная.
[01:01:51.080 --> 01:01:53.080]  У него был какой-то самый правый чувак.
[01:01:53.080 --> 01:01:55.080]  T1 максимум, больше нет.
[01:01:57.080 --> 01:01:59.080]  И жил был T2.
[01:01:59.080 --> 01:02:01.080]  Жил себе в ус не дул.
[01:02:03.080 --> 01:02:05.080]  Случилось страшно, их надо смёрзнуть зачем-то.
[01:02:07.080 --> 01:02:09.080]  Вы берете и делаете сплей отсюда.
[01:02:11.080 --> 01:02:13.080]  То есть поднимаете именно в T1 этот элемент наверх.
[01:02:19.080 --> 01:02:21.080]  Вот у вас ваш T1 точка максимум.
[01:02:21.080 --> 01:02:23.080]  И вот все остальное.
[01:02:23.080 --> 01:02:25.080]  T1 штрих.
[01:02:25.080 --> 01:02:27.080]  Ну это, который без максимума, если его бы означать.
[01:02:27.080 --> 01:02:29.080]  Все это T1 будет.
[01:02:29.080 --> 01:02:31.080]  И вот ваш T2.
[01:02:31.080 --> 01:02:33.080]  У которого все ключи больше,
[01:02:33.080 --> 01:02:35.080]  чем вот этот вот чувак.
[01:02:37.080 --> 01:02:39.080]  Теперь мы берем и делаем так вот.
[01:02:41.080 --> 01:02:43.080]  Все. Мерш окончен.
[01:02:47.080 --> 01:02:49.080]  Ну мы умеем вызывать мерш,
[01:02:49.080 --> 01:02:51.080]  у кого-то таких вот чуваков.
[01:02:55.080 --> 01:02:57.080]  Нет.
[01:02:57.080 --> 01:02:59.080]  Это два разных дерева.
[01:02:59.080 --> 01:03:01.080]  Вообще разных, никак не связанных.
[01:03:09.080 --> 01:03:11.080]  Что?
[01:03:13.080 --> 01:03:15.080]  Ну, ищем X.
[01:03:15.080 --> 01:03:17.080]  Плюс сплайт X.
[01:03:17.080 --> 01:03:19.080]  Вот он есть.
[01:03:21.080 --> 01:03:23.080]  Еще раз.
[01:03:23.080 --> 01:03:25.080]  Вам нужно, чтобы элементы, которые вы запрашивали,
[01:03:25.080 --> 01:03:27.080]  они были вверху.
[01:03:29.080 --> 01:03:31.080]  Ну прям, вы хотите как можно выше отправить,
[01:03:31.080 --> 01:03:33.080]  чтобы, потому что есть тенденция,
[01:03:33.080 --> 01:03:35.080]  что уникальных запросов
[01:03:35.080 --> 01:03:37.080]  Find будет мало.
[01:03:37.080 --> 01:03:39.080]  Это жизнь
[01:03:39.080 --> 01:03:41.080]  такова.
[01:03:41.080 --> 01:03:43.080]  Вот. И вы это делаете с помощью
[01:03:43.080 --> 01:03:45.080]  сплей. Поднимаете вверх,
[01:03:45.080 --> 01:03:47.080]  и от него меньше спускаться надо было.
[01:03:51.080 --> 01:03:53.080]  Ну будто бы да.
[01:03:57.080 --> 01:03:59.080]  Ну да, каждый раз новый царь горы.
[01:04:01.080 --> 01:04:03.080]  Побеждает тот, кого вы последним спросили.
[01:04:05.080 --> 01:04:07.080]  Что? Да.
[01:04:11.080 --> 01:04:13.080]  T1, это T2.
[01:04:15.080 --> 01:04:17.080]  Фух.
[01:04:17.080 --> 01:04:19.080]  Сплит.
[01:04:23.080 --> 01:04:25.080]  Если вы сделаете
[01:04:25.080 --> 01:04:27.080]  сплей от X,
[01:04:27.080 --> 01:04:29.080]  давайте сделаем сплей от lower bound
[01:04:29.080 --> 01:04:31.080]  от X. Сплей от
[01:04:31.080 --> 01:04:33.080]  наибольшего элемента,
[01:04:33.080 --> 01:04:35.080]  это наименьшего элемента,
[01:04:35.080 --> 01:04:37.080]  больше либо равный данного.
[01:04:39.080 --> 01:04:41.080]  Ну как искать всякие lower bounds,
[01:04:41.080 --> 01:04:43.080]  вы должны были обсуждать на семинарах.
[01:04:45.080 --> 01:04:47.080]  Если вы на них не ходите, то
[01:04:47.080 --> 01:04:49.080]  да.
[01:04:51.080 --> 01:04:53.080]  Это понятно, что вы пишете идею.
[01:04:53.080 --> 01:04:55.080]  Вы должны еще такими штуками заниматься по-хорошему.
[01:04:55.080 --> 01:04:57.080]  Вот если вы делаете сплей от lower bound от X,
[01:04:57.080 --> 01:04:59.080]  это значит, что у вас влево,
[01:04:59.080 --> 01:05:01.080]  то есть у вас что будет здесь?
[01:05:01.080 --> 01:05:03.080]  У вас будет ситуация, что здесь будто бы
[01:05:03.080 --> 01:05:05.080]  X, ну или что-то очень похоже на X.
[01:05:07.080 --> 01:05:09.080]  Здесь все меньше X.
[01:05:09.080 --> 01:05:11.080]  Здесь все больше X.
[01:05:11.080 --> 01:05:13.080]  Ну и здесь есть то,
[01:05:13.080 --> 01:05:15.080]  куда вы хотите отправить X,
[01:05:15.080 --> 01:05:17.080]  вы либо делаете вот так вот разрез,
[01:05:17.080 --> 01:05:19.080]  ну либо вот так вот разрез.
[01:05:21.080 --> 01:05:23.080]  Все.
[01:05:23.080 --> 01:05:25.080]  Да.
[01:05:27.080 --> 01:05:29.080]  Что?
[01:05:29.080 --> 01:05:31.080]  Ну если есть X, то это будет lower bound
[01:05:31.080 --> 01:05:33.080]  от X до X.
[01:05:33.080 --> 01:05:35.080]  Lower bound от X это
[01:05:35.080 --> 01:05:37.080]  наименьший элемент,
[01:05:37.080 --> 01:05:39.080]  больше либо равный, чем X.
[01:05:39.080 --> 01:05:41.080]  Если X нет, то он будет lower bound стоять.
[01:05:41.080 --> 01:05:43.080]  Не очень важно, что он стоит.
[01:05:45.080 --> 01:05:47.080]  Здесь есть то, куда вы хотите отправить
[01:05:47.080 --> 01:05:49.080]  элемент равный X.
[01:05:49.080 --> 01:05:51.080]  Хотите вправо, будете вправо.
[01:05:51.080 --> 01:05:53.080]  Может быть, да.
[01:05:53.080 --> 01:05:55.080]  Тогда он вправо уйдет, дерево.
[01:05:57.080 --> 01:05:59.080]  Окей.
[01:05:59.080 --> 01:06:01.080]  Как хотите, так и делайте.
[01:06:01.080 --> 01:06:03.080]  Здесь свобододействие.
[01:06:05.080 --> 01:06:07.080]  Если бы не по X, то,.
[01:06:07.080 --> 01:06:09.080]  Ну хочу.
[01:06:09.080 --> 01:06:11.080]  Ну бывает такое в жизни огорчение,
[01:06:11.080 --> 01:06:13.080]  что мне хочется сделать split
[01:06:13.080 --> 01:06:15.080]  по отсутствующему элементу.
[01:06:15.080 --> 01:06:17.080]  Ну я хочу построить дерево
[01:06:17.080 --> 01:06:19.080]  меньших и дерево больших.
[01:06:23.080 --> 01:06:25.080]  Почему нет?
[01:06:25.080 --> 01:06:27.080]  Я делаю надрез вот так вот.
[01:06:27.080 --> 01:06:29.080]  То есть у меня это одно дерево,
[01:06:29.080 --> 01:06:31.080]  это другое дерево.
[01:06:31.080 --> 01:06:33.080]  И я его не удаляю.
[01:06:33.080 --> 01:06:35.080]  Чего я хотел-то написать?
[01:06:37.080 --> 01:06:39.080]  Ну это плюс X.
[01:06:39.080 --> 01:06:41.080]  Я не знаю, что такое X.
[01:06:41.080 --> 01:06:43.080]  Короче, ладно.
[01:06:43.080 --> 01:06:45.080]  Плюс, разрез.
[01:06:49.080 --> 01:06:51.080]  Доль.
[01:06:51.080 --> 01:06:53.080]  Ребра.
[01:06:53.080 --> 01:06:55.080]  И скорня.
[01:06:55.080 --> 01:06:57.080]  Позовем это так.
[01:06:59.080 --> 01:07:01.080]  Ну теперь пора сделать.
[01:07:01.080 --> 01:07:03.080]  И рейс, наконец-то.
[01:07:07.080 --> 01:07:09.080]  Как и рейс сделать?
[01:07:11.080 --> 01:07:13.080]  Сделаем find.x
[01:07:13.080 --> 01:07:15.080]  и merge детей.
[01:07:15.080 --> 01:07:17.080]  Если X был.
[01:07:27.080 --> 01:07:29.080]  Все, победа.
[01:07:29.080 --> 01:07:31.080]  Все, победа.
[01:07:31.080 --> 01:07:33.080]  То есть видите, у вас здесь каждая операция
[01:07:33.080 --> 01:07:35.080]  занимает какое-то константное число вызовов в сплее.
[01:07:37.080 --> 01:07:39.080]  Чего?
[01:07:45.080 --> 01:07:47.080]  Client включает в себя сплей.
[01:07:53.080 --> 01:07:55.080]  Вот у тебя есть левый ребенок, есть правый.
[01:07:59.080 --> 01:08:01.080]  Ну я понял.
[01:08:01.080 --> 01:08:03.080]  На семинарах вы не присутствовали.
[01:08:03.080 --> 01:08:05.080]  Окей.
[01:08:05.080 --> 01:08:07.080]  Значит, семинарист плохой.
[01:08:17.080 --> 01:08:19.080]  Так, определение.
[01:08:19.080 --> 01:08:21.080]  Что такое lower bound?
[01:08:21.080 --> 01:08:23.080]  Lower bound
[01:08:23.080 --> 01:08:25.080]  ловер
[01:08:25.080 --> 01:08:27.080]  баунд
[01:08:27.080 --> 01:08:29.080]  баунд
[01:08:29.080 --> 01:08:31.080]  от X
[01:08:31.080 --> 01:08:33.080]  это
[01:08:33.080 --> 01:08:35.080]  наименьший элемент
[01:08:35.080 --> 01:08:37.080]  больше либо равный X.
[01:08:43.080 --> 01:08:45.080]  Ну, не обязательно.
[01:08:45.080 --> 01:08:47.080]  Он может находиться...
[01:08:47.080 --> 01:08:49.080]  Может быть X это лист, где-то наименьший
[01:08:49.080 --> 01:08:51.080]  элемент, который больше него, где-то там вообще в другом
[01:08:51.080 --> 01:08:53.080]  поддереве.
[01:08:53.080 --> 01:08:55.080]  Ну это конечно.
[01:08:55.080 --> 01:08:57.080]  Но X у вас далеко не в корде. Вы хотите сначала ловер баунд найти,
[01:08:57.080 --> 01:08:59.080]  потом сплей от него вызвать.
[01:08:59.080 --> 01:09:01.080]  Вот upper bound и lower bound
[01:09:01.080 --> 01:09:03.080]  вы должны были на семинаре реализовывать.
[01:09:03.080 --> 01:09:05.080]  Если нет, то
[01:09:05.080 --> 01:09:07.080]  настоятельно попросите семинаристов это сделать.
[01:09:07.080 --> 01:09:09.080]  Если они отказываются,
[01:09:09.080 --> 01:09:11.080]  то жалуйтесь в чатке, не знаю.
[01:09:17.080 --> 01:09:19.080]  Так, ну окей.
[01:09:19.080 --> 01:09:21.080]  У нас остается две минуты как раз таки.
[01:09:21.080 --> 01:09:23.080]  В целом
[01:09:23.080 --> 01:09:25.080]  мне больше нечего вам рассказывать.
[01:09:27.080 --> 01:09:29.080]  Что?
[01:09:29.080 --> 01:09:31.080]  Не-не-не, его не будет.
[01:09:31.080 --> 01:09:33.080]  Все, мы про деревьев позже закончили.
[01:09:35.080 --> 01:09:37.080]  Что?
[01:09:39.080 --> 01:09:41.080]  Дальше будет разреженная таблица,
[01:09:41.080 --> 01:09:43.080]  фенвик, дерево, отрезков
[01:09:43.080 --> 01:09:45.080]  и деревья по неявным ключам.
[01:09:47.080 --> 01:09:49.080]  Так, есть ли еще вопрос?
