[00:00.000 --> 00:13.600]  Да, в общем, всем привет. Сегодня, извините, приведу я. На повестке дня набор формул,
[00:13.600 --> 00:21.600]  это, наверное, самая стабильная часть. Немного про ссылки, ну и про теория. Там побольше,
[00:21.600 --> 00:33.120]  например, показываю. Да, в общем, набор формул уже третьей части. В общем, обычно при наборе
[00:33.120 --> 00:40.960]  выключено формул. Ну, в общем, самым простым, что можно делать, использовать такую аннотацию.
[00:40.960 --> 00:46.720]  Вот, еще можно двумя значками доллара, но это все такой немного старый стиль. И,
[00:46.720 --> 00:49.920]  ну, наверное, в самом противном случае, конечно, можно вот так использовать,
[00:49.920 --> 00:56.680]  но есть несколько проблем, например, как нам решить вопрос с номерацией формул или
[00:56.680 --> 01:05.880]  с многосрочной формулой. Вот. Ну, придумали окружение equation. Ну, она вроде стандартная.
[01:05.880 --> 01:18.240]  И в основном преущество она дает возможность идти на номерацию. И вообще, в общем, если писать
[01:18.240 --> 01:25.960]  формулы тоже в виде окружения, то весь код будет выглядеть более структурно, потому что как только
[01:25.960 --> 01:33.840]  начинает писать на лотехе что-то длиннее, чем там 100 строк, то уже сильно важно, чтобы это
[01:33.840 --> 01:38.960]  выглядело аккуратно не только снаружи, но и сам код выглядел аккуратно, поэтому какое-то
[01:38.960 --> 01:50.520]  единобразие и аккуратное формление достаточно важно. Ну, вот, например, если все использовать
[01:50.520 --> 02:00.920]  в окружении, кто-то будет выглядеть аккуратно. Но equation еще не самое лучшее решение. Вот. Да,
[02:00.920 --> 02:10.600]  но оно дает номерацию. Номерация привязана к секциям, если мы говорим в article. В книгах с
[02:10.600 --> 02:17.200]  главами она начинается просто заново. Это все настройки по умолчанию, и, конечно же, их можно
[02:17.200 --> 02:25.880]  перенастраивать. Вот. Но об этом тоже будет позже не сказано. Это уже такая большая портаж. Уже куда
[02:25.880 --> 02:37.800]  более хороших способ писать выключенную формулу, это aligning в окружении. Aligning позволяет набирать
[02:37.800 --> 02:47.600]  во-первых, много строк в одну формулу, во-вторых, делать в равном. Например, когда вы переносите длину
[02:47.600 --> 02:54.640]  цепочку равности, может быть аккуратно выровнять первое равно в строчке. Вот. Ну или когда вы просто
[02:54.640 --> 03:01.960]  пишете какое-то большое количество похожих уравнений. В общем, выравнивание по какому-то знаковому
[03:01.960 --> 03:09.120]  типу равенства или неравенства может быть очень приятно украсить то, что происходит. Вот. Ну,
[03:09.120 --> 03:14.760]  в общем, вот пример как это использовать. И aligning – это уже такой канонический способ писать
[03:14.760 --> 03:20.560]  уравнения, потому что он, если все уравнения писать aligning, то их можно делать как однострочные,
[03:20.560 --> 03:26.120]  так и многострочные, как с нумерацией, так и без нумерации. В общем, оно развязывает руки и
[03:26.120 --> 03:37.000]  вызывает не задумываться лишний раз. Однако для каких-то конкретных целей может быть удобно какое-то
[03:37.000 --> 03:43.840]  свое окружение. Например, правда может быть удобно окружение Multiline. Его особенность – оно
[03:43.840 --> 03:51.720]  выравнивает первую строчку по правому краю, последнюю по правому, и все, что между как-то
[03:51.720 --> 03:57.400]  по центру выровнено. Это нужно для писания очень длинных формул, и это может выглядеть лучше,
[03:57.400 --> 04:07.240]  чем просто aligning. Вот. Про остальные не вижу смысла говорить подробно. Это уже такие специфичные
[04:07.240 --> 04:16.040]  случаи. И, в принципе, про них можно прочитать. Вот ссылочка будет. Ну или загуглите. Да, вот. Я
[04:16.040 --> 04:22.960]  уже говорил, что aligning можно использовать и без нумерации. Для этого нужно добавить звездочку.
[04:22.960 --> 04:29.400]  Это работает не только с aligning, например, с cohesion, с multiline, gather и всеми этими. Тоже
[04:29.400 --> 04:40.400]  так можно делать. Вот если вам почему-то не нужно нумеровать. Есть очень хитрый
[04:40.400 --> 04:46.360]  macros. Я его не ставил в ориентацию, но, наверное, просто вправлю в чат в программе,
[04:46.360 --> 04:54.920]  который позволяет включить умную номерацию формул. Чуть позднее объясню, что это значит.
[04:54.920 --> 05:01.640]  Вот. Ну и такое немного экзотическое случая. Когда мы хотим как-то по-своему поместить формулу,
[05:01.640 --> 05:10.440]  по-моему, один раз в жизни не пригодилось. В общем, есть команда tag. Там может быть любой
[05:10.440 --> 05:20.680]  символ. Можно подместить звездочкой, там еще каким-то символом, словом. Вот. Ну вот. Но это
[05:20.680 --> 05:29.440]  редкое использование. Уже более экзотически. Следующая проблема, с которой можно столкнуться при
[05:29.440 --> 05:34.600]  наборе формул, это система уравнения. И для этого тоже есть такой стандартное решение окружения
[05:34.600 --> 05:39.880]  cases. В общем, это математическое окружение. Это как обычное окружение, только уже внутри математического
[05:39.880 --> 05:48.200]  мода. Ну, математического режима. И, в принципе, если правильно помню, это можно использовать не
[05:48.200 --> 05:55.160]  только в выключенных формулах, но это... Не вижу особого смысла использовать окружение типа... Ну,
[05:55.160 --> 06:01.680]  любые внутриформульные окружения в строчных формулах, потому что они все-таки в несколько
[06:01.680 --> 06:06.080]  строк, и это портит структуру самих строк. Все-таки для этого лучше использовать выключенные формулы.
[06:06.080 --> 06:14.520]  Ну вот. В общем, стандартный пример это система уравнений. Сколько угодно большая может быть. Ну,
[06:14.520 --> 06:22.680]  в принципе, вот еще есть аналог окружения cases, это aligned. Он позволяет, как обычный aligned,
[06:22.680 --> 06:27.680]  только, в общем, это внутриформульное окружение, позволяет там также уравнивать, как обычный
[06:27.680 --> 06:39.440]  aligned, только уже внутри. Да, еще, наверное, самый популярный пример, все-таки, это набор матриц.
[06:39.440 --> 06:45.360]  И есть, опять-таки, стандартное решение. Вот матриц. Оно может быть B-matrix. Это, значит,
[06:45.360 --> 06:53.520]  обычные скобки. Может быть, B-matrix. Ну, первая буква B, это будут квадратные скобки. Может быть,
[06:53.520 --> 07:00.280]  просто матриц, когда скобок вообще не будет. Ну, в общем, это все... Ну, там есть много вариантов,
[07:00.280 --> 07:06.920]  можно просто погуглить. В общем, при наборе матриц. Ну, в общем, вот так можно брать матрицы.
[07:14.760 --> 07:21.960]  Так, B-matrix. В общем, это пройдет и с обычной матрицей. Здесь B-matrix с обычной матрицей. Вот такая
[07:21.960 --> 07:29.080]  классическая запись матрицы, квадратная матрица NN, может быть проверена с помощью C-dots,
[07:29.080 --> 07:34.400]  V-dots и D-dots. В общем, диагональные. В общем, вертикально-диагональные горизонтальные точки.
[07:34.400 --> 07:41.760]  В общем, в самом деле, это, наверное, ну, в общем, вот такой пример, как можно набирать матрицы.
[07:41.760 --> 07:54.400]  Есть еще такой пакет Nice-matrix. Там, в общем, люди заморочились и придумали очень-очень-очень
[07:54.400 --> 08:03.960]  хороший функционал для написания различных матриц, блочных, вообще, каких-то очень-очень
[08:03.960 --> 08:11.200]  экзотического содержания. Там выделение под матриц. И на самом деле он очень, очень, они очень
[08:11.200 --> 08:15.960]  хорошо это сделали. Очень просто все это написано. Очень легко этим пользоваться. И, самое главное,
[08:15.960 --> 08:23.440]  там очень понятная инструкция, что делать. Там хорошие примеры. И на самом деле можно,
[08:23.440 --> 08:28.040]  просто листая инструкцию, увидеть то, что нужно. И там будет написано, как это сделать, и пояснение,
[08:28.040 --> 08:33.840]  как расширить. В общем, очень хорошее. Очень хороший пакет рекомендую. Вы можете посмотреть.
[08:33.840 --> 08:45.760]  Я вот, когда столкнулся с потребностью, когда мне нужно было много матриц в своем документе
[08:45.760 --> 08:52.480]  использовать, в общем, я столкнулся с проблемой, как это сделать все аккуратно. И, в общем,
[08:52.480 --> 08:59.080]  смотри их с хороших. Да, следующий раздел сегодня. Ссылки.
[09:05.080 --> 09:12.320]  Могут быть внутренние ссылки. Это, например, ссылки на формулы. Вообще ссылаться можно на все,
[09:12.320 --> 09:18.720]  что, все угодно, что иметь на вирации. Будь то раздел, будь то теоремы, которые уже упоминали,
[09:18.720 --> 09:31.920]  будь то таблицы, картинки, иллюстрации, разделы. В общем, все, что имеет на вирации,
[09:31.920 --> 09:43.320]  можно ссылаться. Чтобы ссылаться, нужна, в общем, нужна команда label, аргументом,
[09:43.320 --> 09:48.080]  где вы передаете название ссылки. И потом, с помощью ref вы можете
[09:48.080 --> 09:55.000]  сослаться на эту ссылку. И будет, ну, в бульклорной версии, конечно, будет работать,
[09:55.000 --> 10:00.720]  будет работать ссылочная система. В плане, что, если вы нажмете, ну, гиперсылка, в общем,
[10:00.720 --> 10:08.000]  если вы нажмете, то вас перекинет к тому месту, на что вы ссылаетесь. И вот, например, вот эта вот
[10:08.000 --> 10:14.080]  штука кликабельная, если я нажму на, в общем, вот, как здесь есть закон вируса, нажимаю сюда и нас
[10:14.080 --> 10:26.960]  подкидывает на этот слайд. К этой формуле. Также с помощью page.gf можно указать не только саму, ну,
[10:26.960 --> 10:34.160]  то есть не только, не только ссылку на саму формулу, но и на страницу, где это искать. И когда у вас,
[10:34.160 --> 10:42.600]  если вы делаете какой-то большой конспект на десятки или больше страниц, и когда у вас там формулу
[10:42.600 --> 10:49.560]  тоже уже перевались за сотню, ну, во-первых, обычно нумерация формул все-таки идет, ну, в общем,
[10:49.560 --> 10:54.800]  какие-то циферками, а не вот такими вот пояснениями. И чтобы в этом все не запутаться, очень удобно,
[10:54.800 --> 10:59.760]  во-первых, давать какие-то смысленные названия своими формулами, и во-вторых, вот на них,
[10:59.760 --> 11:09.840]  при ссылках на них можно указывать страницу. Хотя, опять-таки, большинство PDF-ридеров уже
[11:09.840 --> 11:16.320]  поддерживают ссылки, но не все. В общем, иногда ссылки могут не работать, поэтому, в принципе,
[11:16.320 --> 11:22.560]  логично оставлять номер страницы, который находится. Ну, или там, если вы делаете книжку,
[11:22.560 --> 11:27.680]  то это вообще must-have, я считаю, потому что когда в книжке непросто указание на формулу,
[11:27.680 --> 11:35.560]  на очень многих страницах искать, это очень удобно. Да, в общем, код седьмого слайда немного
[11:35.560 --> 11:42.560]  модернизировал, вот, добавил просто команду label, и теперь на нем можно ссылаться. Я на том же
[11:42.560 --> 11:49.040]  слайде упомянул про возможность умыть ссылок. В общем, тот macros позволяет что делать? Вы просто
[11:49.040 --> 11:55.560]  пишете все, просто пишете обычные все формулы без звездочки, и нумируются только те формулы,
[11:55.560 --> 12:02.800]  на которые вы ссылаетесь. То есть, обычно какая проблема? Ну, какая дерема стоит у людей,
[12:02.800 --> 12:08.000]  которые пишут? Ну, если вы пишете много формул, вы же не на все будете ссылаться. И иногда вот эта
[12:08.000 --> 12:14.560]  номерация, там, очень-очень большая номерация может, в общем, путать, и, в общем, она излишняя
[12:14.560 --> 12:21.120]  информация и неприятна. И вот этот macros позволяет, в общем, весьма эрегантно эту проблему решить,
[12:21.120 --> 12:28.440]  то, что номера будут являться в такую тех-формулу, на которую вы ссылаетесь. Что, в принципе,
[12:28.440 --> 12:36.200]  логично. Что-то такое удобное решение. Ну, еще немного про культуру самого теха. Чтобы не запутаться,
[12:36.200 --> 12:44.800]  в общем, очень рекомендовано начинать с ссылки на уравнение с такого префикса, вот, как
[12:44.800 --> 12:56.040]  equation 2.0, на всякие плавающие, ну, на окружение feature с fig, ну и так далее. На самом деле можно,
[12:56.040 --> 13:02.120]  это как бы никак не зарезервировано, это просто, в общем, так принято такой стиль, можно на скит
[13:02.120 --> 13:07.800]  свои окружения, свои ссылки делать. Поэтому, как бы, так только будет лучше, чтобы не запутаться в них.
[13:07.800 --> 13:24.800]  Так, про это вроде все. Да, ну, ссылки, конечно, можно делать и на какие-то внешние ресурсы,
[13:24.800 --> 13:32.240]  например, на сайта. Если нажать на эту ссылку, то откроется сайт Google. Вот так это можно делать.
[13:32.240 --> 13:46.240]  И, в принципе, в принципе, тут больше даже нечего добавить. Да, я не знаю, показываю,
[13:46.240 --> 13:53.160]  было ли, не помню, было ли просто в презентациях именно сноски. Вот, в общем,
[13:53.160 --> 14:04.560]  ну, сноски, чтобы сделать сноску, нужно просто в нужном месте вставить footnotes и дальше текст
[14:04.560 --> 14:12.040]  сноски, и появится номер сноски и сама сноска. На сноске, как и на все, что номируется, также
[14:12.040 --> 14:18.920]  можно ссылаться. Например, ну, также нужно оставить где-то внутри сноски команда label и дальше
[14:18.920 --> 14:25.920]  с помощью ref уже в ситуации. Вроде есть команда footref, вот, но это она либо есть в
[14:25.920 --> 14:33.600]  консистентахном окружении, либо в консистентахном приезде, либо в каком-то дополнительном,
[14:33.600 --> 14:40.160]  но это все так можно играть. В общем, все эти добавления, как там было ecref, figref, footref,
[14:40.160 --> 14:54.880]  это все просто про, вот, например, на предыдущем слайде, ecref, он вместо просто номера обернул его
[14:54.880 --> 15:05.040]  в скобочки, поэтому он принят, чтобы каждый раз не писать скобочки, обычно принято писать
[15:05.040 --> 15:13.600]  номерацию формул в скобочках, и, в общем, именно ecref позволяет не просто номер формул, а номер
[15:13.600 --> 15:20.880]  формул в скобочках. Figref вроде ничего, вроде по умолчанию ничего не меняет, но тоже можно
[15:20.880 --> 15:30.960]  как-то его отдельно настроить. В общем, figref, ecref, можно по-своему настраивать ссылки, например,
[15:30.960 --> 15:35.200]  ваш объект, если вы делаете какое-то окружение, у него будет номерация, вы будете в него ссылаться,
[15:35.200 --> 15:39.120]  и вы можете сделать свою собственную на него ссылку, чтобы она как-то по-особому оформлялась,
[15:39.120 --> 15:47.880]  например, как sm. Ну, добавить sm, ну или, например, для ссылок на страницу можно добавить sm.str,
[15:47.880 --> 16:06.240]  ну, то есть sm.str, точка номер страницы. Так, да, дальше про теоремы. В общем, пакет amsm,
[16:06.240 --> 16:14.720]  в общем, вот здесь в посылке есть мануал, самлеч короткий, и там, помимо того, что написано,
[16:14.720 --> 16:24.920]  ну, то есть там очень короткое, но достаточно подробно написано про все, что можно делать с
[16:24.920 --> 16:31.280]  расширением, ну, с теорем стайлу, и там также написано, например, популярные ошибки, то есть
[16:31.280 --> 16:36.680]  почему полезно, например, иногда посчитать мануал, там очень часто написаны какие-то неочевидные
[16:36.680 --> 16:42.360]  факты, как не нужно делать, потому что, вот, например, как они пишут known problems, в общем,
[16:42.960 --> 16:48.000]  как не нужно делать, потому что, скорее всего, это вызовет ошибку. В общем, они не знают,
[16:48.000 --> 16:51.960]  как это исправить, и поэтому рекомендуют так не делать. Вот, обычно какие-то экзотические
[16:51.960 --> 16:59.640]  случаи, которые просто набираются в каких-то, в общем, очень экзотических ситуациях. В общем,
[16:59.640 --> 17:09.320]  основной посыл amsm, ну, в общем, этого amsm, это работа с теоремами, в общем, с таким, с такой
[17:09.320 --> 17:15.080]  преподавшей математической информации, как вот эти теоремы, лемы, утверждение, определение,
[17:15.080 --> 17:22.320]  в общем, если читали какие-то математические книжки, там очень часто вообще нет просто текста,
[17:22.320 --> 17:28.360]  там обычно просто набор всяких утверждений, лемы, пояснения, примеры, ну, в общем, так вот по кругу.
[17:28.360 --> 17:36.600]  Да, ну, в общем, например, в презентации замечание выглядит вот такой, ну, вот, оно,
[17:36.600 --> 17:43.520]  в презентации оно даже вот так немного выкидывает, ну, в общем, немного выдаётся вперёд даже стене,
[17:43.520 --> 17:53.760]  вот там замечание, теорема тоже. Да, к слову, я тоже не видел в прошлых презентациях, если вы хотите
[17:53.760 --> 18:00.040]  делать обычные кавычки, можете, ну, в общем, обычные кавычки, ёлочки делаются, вот, буквально,
[18:00.040 --> 18:05.760]  меньше-меньше-больше-больше. Вот, всё-таки ближе к делу. Про термсталов, в общем, есть три типа,
[18:05.760 --> 18:18.560]  ну, в общем, вот три типа, и разница лишь в том, как выглядит само название, то есть там слово
[18:18.560 --> 18:26.120]  замечание, слово дополнение, ну, и в каком формате там курсивум, некурсивум, набранный текст.
[18:26.120 --> 18:33.800]  Ну, вот, вот так можно создать своё окружение, ну, без нумерации, потому что со звёдочкой,
[18:33.800 --> 18:43.760]  и, ну, вот, а с нумерацией, чтобы делать окружение с нумерацией, нужно, ну, точнее, не нужно, в общем,
[18:43.760 --> 18:48.080]  ему можно делать просто с нумерацией, а можно ещё указывать зависимость. Как я помню, я говорил,
[18:48.080 --> 18:56.000]  что, например, формулы начинают нумерироваться заново с новой секцией, точнее, они зависят, ну да,
[18:56.000 --> 19:11.440]  то есть они зависят от номера секции. Также можно выстраивать иерархию нумерации в теоремах. Ну,
[19:11.520 --> 19:18.400]  в теоремах обычно называют вот это любое окружение, типа утверждение, замечание,
[19:18.400 --> 19:25.520]  определение, та же теорема. Вот, и, в общем, вот так можно выстраивать иерархию между теоремами.
[19:25.520 --> 19:30.800]  Ну, давайте дальше уже я покажу больше на каких-то примерах.
[19:30.800 --> 19:37.440]  Презентация, мы остановились на том, как можно сделать
[19:37.440 --> 19:49.280]  на вспоминатель. Вот я их сделал и допустим.
[20:07.440 --> 20:32.080]  Да, в общем, если я начну, например, новую секцию, секция, то, да, в общем, теорема будет
[20:32.080 --> 20:42.760]  нумероваться вместе с номером секции, а вспоминатель LEM будет относиться к теореме. И если я
[20:42.760 --> 20:50.960]  делаю еще одну вспоминатель LEM, например, то это будет 1.1.2. А если я сделаю новую теорему и после
[20:50.960 --> 21:02.400]  нее вспоминатель LEM. Ну, в общем, принцип, видимо, ну, принцип, думаю, понятен. Ну, и каждый из них можно,
[21:02.400 --> 21:24.400]  конечно же, делать ссылку. Например, main.crm1. Ну, где-то здесь можно на нее сослот. Да, в общем, и вот
[21:24.400 --> 21:34.000]  это ссылка работает, то есть она кликабельная и, ну, как-то так. Также в теоремах, ну, именно в стиле plane
[21:34.000 --> 21:43.440]  можно делать помещение или не обязательно аргументы. Например, теорема кого? Например, теорема
[21:43.440 --> 21:56.320]  lagrm. И тогда это будет в скобочках другим текстом, точка сдвинется. Вот, ну, в общем, или там LEM,
[21:56.320 --> 22:03.720]  или там вспоминатель LEM отрезутся. В общем, вот так можно делать именные LEM. Еще отмечу вот такую
[22:03.720 --> 22:11.200]  фишку. Если указать необязательные параметры, ну, вот мы указывали обязательные параметры
[22:11.200 --> 22:16.960]  в скобках квадратных в конце, после всех обязательных, тогда он говорит, что мы наследуем
[22:16.960 --> 22:23.000]  нумерацию того объекта, который был этим параметром. Если мы укажем его сразу после названия теоремы,
[22:23.000 --> 22:28.160]  там, main.theorem, sub.theorem, то это будет не наследование счетчика. Ну, то есть при
[22:28.160 --> 22:32.720]  приписании нового счетчика начинает сьединиться к тому, который здесь. А это будет означать,
[22:32.720 --> 22:39.600]  что эти среды делит общий счетчик, у них нумерация, как бы, единая. То есть будет теорема 1, потом LEM
[22:39.600 --> 22:54.840]  2, потом LEM 3, потом теорема 4. Да, это может быть полезно, когда у вас есть две сущности,
[22:54.840 --> 22:58.840]  на самом деле, одного рода, просто которые чуть-чуть по-другому называются, чуть-чуть по-разному
[22:58.840 --> 23:10.920]  называются. Да, в общем, да, хорошее замечание. Спасибо. Ну, это, наверное, основное про создание
[23:10.920 --> 23:17.920]  своих дотов, это, наверное, все, что нужно. Это, наверное, максимум, который можно сделать уже
[23:17.920 --> 23:31.560]  с имеющейся theorem style. Потом расскажем про создание своего стиле theorem. И еще немного
[23:31.920 --> 23:43.920]  идет здесь доказательства. В общем, доказательств тоже есть несколько. Да, в общем, доказательства
[23:43.920 --> 23:48.960]  есть с нескольких особенностей. В общем, обычно как называют, как обычно выглядит доказательство.
[23:48.960 --> 24:02.200]  Оно, как и полагается любому, так, ой, полагается любому доказательству, оно заканчивается на,
[24:02.200 --> 24:10.880]  заканчивается квадратиком. И этот квадратик, в общем, по-английски, что-то да, это CAD. Вот,
[24:10.880 --> 24:20.960]  ну и в общем, это, оно заканчивается символом CAD Symbol. И, например, можно, ну, теперь немного
[24:20.960 --> 24:27.760]  фишек про доказательства. Во-первых, можно изменить само доказательство, например, очень часто может
[24:27.760 --> 24:33.800]  быть, в общем, когда вы доказываете что-то, в две стороны может быть, ну, как это обычно, доказательство
[24:33.800 --> 24:38.800]  делится на две части, в одну сторону и в другую, то есть необходимость и достаточность. И удобно
[24:39.640 --> 24:45.120]  разделить доказательство так вот, то есть, если вы пишите не Laughing out loud ну, точнее, да,
[24:45.120 --> 24:50.040]  не обязательный аргумент у... AO, у доказательства меняется мой словок доказательства, и
[24:50.040 --> 24:54.560]  когда вы доказываете какой-то факт или, там, в общем, вот, необходимость или,
[24:54.560 --> 24:58.200]  там, какой-то типа, ассоциатив, в общем, когда вы доказываете какое-то свойство
[24:58.200 --> 25:02.120]  или, в общем, какое-то короткое описание для доказательства есть, в общем,
[25:02.120 --> 25:10.920]  в общем, очень разумно его так разместить. Дальше, этот значок называется, как я уже говорил,
[25:10.920 --> 25:20.240]  cat.symbol и по идее можно его переназначить на какой-то свой символ.
[25:20.240 --> 25:30.640]  Сейчас, вроде так должно сработать. Да, теперь, догадались, это будет
[25:30.640 --> 25:36.400]  заканчивать с крестиком. То есть, это умножение, на самом деле. Тут вместо этого может быть что угодно.
[25:36.400 --> 25:45.520]  По-моему, бриллиант есть или как-то так. Нет, в общем, будем заканчивать с крестиком.
[25:45.520 --> 25:56.320]  Ну, в общем, можете, если вы считаете, можете как-то в свое знаменовать окончание доказательства,
[25:56.320 --> 26:04.800]  вернусь к стандартному. Когда вы пишете, допущая, у вас доказательства заканчиваются,
[26:04.800 --> 26:25.840]  вот, заканчиваете какую-то формулу и квадрат уехать вниз. И для этого думали команду get here,
[26:25.920 --> 26:29.040]  которая, в общем, заканчивается внутри формулы.
[26:29.040 --> 26:44.640]  Пошло неплохо. Сейчас. Видимо, наступается просто кет.
[26:44.640 --> 26:59.920]  В общем, было какое-то типа кет, который, в общем, так, ладно, я шумчат как это сделать,
[26:59.920 --> 27:07.240]  чтобы сейчас времени. В общем, значком доказательства можно немного манипулировать,
[27:07.240 --> 27:14.120]  как оно располагается. Это все опять такие вопросы эстетства. Основное, что можно сделать,
[27:14.120 --> 27:26.360]  в общем, не забывайте, что там будет квадратик. Это все, что я хотел сказать. Есть какие-то вопросы?
[27:26.360 --> 27:27.480]  Примеры.
[27:57.360 --> 28:04.960]  Так, хорошо. Дайн, это здесь? Это, видимо, здесь? Кажется, вопросов нет, поэтому я могу подключиться,
[28:04.960 --> 28:09.880]  добавить что-то от себя по темам, которые сегодня хотелось рассказать. Нужно попасть в минуту,
[28:09.880 --> 28:15.520]  чтобы подготовиться, сейчас все будет. Так, ну, идем тогда, я прощаюсь и передаю финальное
[28:15.520 --> 28:23.400]  словодание. И вот, что хотелось бы добавить про создание окружений и про счетчики. Это то,
[28:23.400 --> 28:30.360]  что было анонсировано еще в прошлый раз и, в общем, связано между собой тема счетчиков. Это способ
[28:30.360 --> 28:35.160]  создавать числовые переменные в техе, которые можно использовать, но в разных целях. Например,
[28:35.160 --> 28:39.640]  в прошлый раз мы видели пример с созданием колонтитула, который использовал счетчик
[28:39.640 --> 28:44.800]  DPAGE, чтобы использовать номер страницы в качестве нижнего колонтитула. Довольно естественное
[28:44.800 --> 28:50.040]  желание, но это оказывается довольно широкая возможность, и счетчики могут отражать более-менее
[28:50.040 --> 28:56.280]  что угодно, что нам потребуется. Можем создавать свои, в синтезе суд такой, new counter и название
[28:56.280 --> 29:02.120]  счетчика, как название переменной, по умолчанию с значением ноль. Как мне значение, поговорим чуть
[29:02.120 --> 29:09.440]  дальше. Второй вариант создания счетчика – создание целой пары, при которой второй счетчик,
[29:09.440 --> 29:13.080]  он как бы оказывается вложенным с первым, и каждый раз, когда первый меняет свое значение,
[29:13.080 --> 29:20.920]  второй обнуляется. Ну, это можно, например, сравнить с нумерацией теорем внутри одной секции. Если мы
[29:20.920 --> 29:27.520]  делаем у теорем нумерацию в тезотекции, то в каждой секции они нумируют снова с единицы. И если
[29:27.520 --> 29:33.640]  вдруг нам потребуется это сымитировать, не прибегая к окружению теорем, то писать мы будем именно так.
[29:33.640 --> 29:39.080]  Значение счетчиков модифицируется такими командами. Есть команда step counter, которая просто
[29:39.080 --> 29:45.080]  инкримитирует его на единицу. Есть add to counter, которая прибавляет любое значение, причем не обязательно
[29:45.080 --> 29:51.680]  положительное, можно, собственно, и вычитать команда add to counter. И set counter тоже создает значение счетчика
[29:51.680 --> 29:59.840]  на любое целое число, включая отрицательные. Ну, я не знаю числа границ, видимо, какой-то. Не думаю,
[29:59.840 --> 30:05.880]  что когда-то может потребоваться больше. И для чего счетчики нужны? Их можно по-разному отрисовывать
[30:05.880 --> 30:13.040]  на страницах. Как мы видели, вариант the page, где счетчик называется page, вот сейчас все эти
[30:13.040 --> 30:19.920]  способы перечистим. Что делает этот код? Он создает счетчик, который называется name, и дает ему
[30:19.920 --> 30:26.440]  точение 22. И далее я его отрисовываю в куче разных способов, которые ниже представлены. Есть вариант
[30:26.440 --> 30:33.400]  the name, просто приписывание к названию счетчика, каким бы оно ни было, префиксы the и backslash,
[30:33.400 --> 30:40.000]  делает его командой, эквивалентной их следующей команде, которая называется Arabic. Она принимает
[30:40.000 --> 30:44.320]  на флот название счетчика уже без этих всех модификаций и отрисовывает его, ну, как обычное
[30:44.320 --> 30:51.120]  арабское число, может быть, с минусом, если оно отрицательное. Да, эти два варианта не скомплировались,
[30:51.120 --> 30:57.040]  потому что их принес в следующую строку. Это команды Roman с страшной закладной буквы. Как ясное
[30:57.040 --> 31:03.480]  название, они по счетчику производят числа в римской нотации, равные ему по значению. Но там тоже
[31:03.480 --> 31:07.480]  есть ограничения, соответственно, вход должен быть обязательно положительным и не превосходить
[31:07.480 --> 31:13.200]  максимального числа, которое в римском стиме можно записать, что-то типа четыре тысячи. Но, опять же,
[31:13.200 --> 31:18.280]  вряд ли такие большие числа могут вообще встречаться в реальном коде. И есть команды alph,
[31:18.280 --> 31:23.440]  с страшной закладной буквы, они позволяют отрисовывать счетчик, как с точечкой буквы латинского
[31:23.440 --> 31:28.200]  алфавита. Ну, соответственно, значение может быть только 1 ряд 26, причем, я полагаю, 0 не
[31:28.200 --> 31:33.440]  включительно, потому что нулевую букву мы сейчас не существует. А все положительные значения
[31:33.440 --> 31:40.480]  мепятся в соответствующей буквы латинского алфавита. И есть сколько-то счетчиков, которые стандартные и
[31:40.480 --> 31:48.320]  к которым можно обращаться в ходе написания кода. Есть счетчики, отражающие текущую там секцию,
[31:48.320 --> 31:56.080]  главу, подглаву и так далее. Ну, как всегда, можно обращаться с помощью префикса T, можно с
[31:56.080 --> 32:01.080]  помощью там арабской или римской номерации. Это иногда может пригождаться. Есть счетчики,
[32:01.080 --> 32:06.520]  отражающие номер текущей страницы, как мы уже видели, и аналогичные номер там текущей фигуры,
[32:06.520 --> 32:11.560]  номер текущей таблицы, это то, о чем мы говорили в прошлый раз, или номер с носки, о чем было
[32:11.560 --> 32:16.520]  упомянуто буквально сегодня. Есть счетчики, отражающие текущую позицию внутри нумерованного
[32:16.520 --> 32:24.160]  списка. Чуть дальше будет пример, но вот нумеровный список поддерживает четыре уровня вложенности,
[32:24.160 --> 32:29.240]  на каждом из которых номерация ведет, естественно, отдельно. И от номерации можно управлять,
[32:29.240 --> 32:37.560]  мы скоро увидим как. Ну, и есть всякие номерации, номерации уравнений, которые мы опять увидели
[32:37.560 --> 32:43.320]  буквально вот только что, который является общей и для там среды Align, Equation и прочего,
[32:43.320 --> 32:50.120]  это хранится в счетчике Equation. Ну и как к ним обращаться, как их использовать. Есть такой пакет
[32:50.120 --> 32:57.600]  enumItem, который позволяет управлять, как будет выглядеть номерованный список. В частности,
[32:57.600 --> 33:04.240]  в начале команды, в начале окружения numrate мы можем указывать значение label и некого вида
[33:04.240 --> 33:09.040]  выражения, синтаксис можно нагуглить, который управляет тем, как будут выглядеть номера
[33:09.040 --> 33:13.400]  номеров на списке. То есть на команда ALG, закладные буквы, как это естественно ожидать из того,
[33:13.400 --> 33:20.200]  что мы видели буквально только что, отрисовывают вместо чисел заглавные латинские буквы. То есть
[33:20.200 --> 33:26.240]  первый item номируется буквой A, а далее была бы буква B, если бы не сделала следующего. Мы
[33:26.240 --> 33:34.960]  к счетчику enum1, ну то есть римская единичка I, оставляли значение 5. С того момента следующий
[33:34.960 --> 33:39.280]  item считается уже не вторым, а пятым, потому что мы его поменяли, и поэтому это будет буква F.
[33:39.280 --> 33:44.800]  Это скорее экзотика, в таком сочетании команда вряд ли стоит использовать,
[33:44.800 --> 33:51.680]  но по деятельности они пригождаются и имеют какую-то пользу. Прочечки сами по себе, наверное,
[33:51.680 --> 33:57.360]  и все. И вот что я считаю добавить про окружение, чего еще не было сказано. Во-первых, их можно писать
[33:57.360 --> 34:02.560]  целиком с нуля своей, не только используя встроенный пакет теорем и прочего. Есть такая
[34:02.560 --> 34:06.480]  команда newEnvironment, я в прошлый раз ее анонсировал, и тут я в любом случае зафиксировал это синтаксис,
[34:06.480 --> 34:12.560]  как она пишется. У нее есть три обязательных аргумента, это название нового окружения,
[34:12.560 --> 34:18.480]  но опять же, оно не должно иметь конфликта имен. Как мы видели в прошлый раз, есть варианты
[34:18.480 --> 34:23.760]  команд newCommand и renewCommand, где renewCommand определяет уже существующую команду, а newCommand
[34:23.760 --> 34:28.360]  уже существующую команду просто не запускается, говорит, что имя уже занято. Здесь можно делать
[34:28.360 --> 34:35.200]  тоже самое, но забудьте пока про newEnvironment, он нам не очень пригодится. И далее два блока из
[34:35.200 --> 34:39.960]  переменных, в которых пишется код того, с чего начинается среда, и того, чем заканчивается среда.
[34:39.960 --> 34:46.680]  Буквально в коде происходит следующее, каждый раз, когда встречается эта среда, вместо beginEnvironment
[34:46.680 --> 34:52.200]  подставляется тот код, который мы указали в этом блоке, precedingCode, а вместо endEnvironment
[34:52.200 --> 34:57.160]  подставляется тот код, который есть как seatingCode, и его же полученный файлик эмпелируется. Ну вот
[34:57.160 --> 35:02.960]  такой пример. Если мы хотели совместить стиле жирного шрифта и центрирование, мы могли бы
[35:02.960 --> 35:06.200]  сделать это, например, таким образом. Сделать новую среду, которая называется CenterBolt,
[35:06.200 --> 35:11.800]  в которой открывающий блок это, собственно, beginCenter, который помещает все, что далее
[35:11.800 --> 35:17.600]  внутри среды будет находиться в окружении Center, и bfseries, модификатор, который делает весь текст
[35:17.600 --> 35:21.720]  дайдера жирным, пока не будет сказано обратное. Но обратное сказано не будет, мы просто упрям
[35:21.720 --> 35:28.760]  себя в закрывающий блок, который будет выражена endCentrum, и посмотрим, как это будет выглядеть.
[35:28.760 --> 35:34.840]  Текст завернутый в эту среду, он одновременно и жирный, и по центру вроде то, чего мы и хотели.
[35:34.840 --> 35:42.040]  Вот такая вот полезная функция. И еще что не было сказано, тут я не успел прям примеры привести,
[35:42.040 --> 35:48.560]  скопировал код StackWareFlow, но, по всяком случае, есть такая команда NewSerumStyle. Мы в прошлый раз
[35:48.560 --> 35:56.480]  видели, что есть встроенный стиле теорем, там plane, remark и, кажется, definition. Казалось бы,
[35:56.480 --> 36:02.080]  их уже хватает, чтобы покрыть все, что только можно покрыть, но вот не совсем. Если вам требуются
[36:02.080 --> 36:05.840]  какие-то более специфические решения, типа изменения шрифта, там изменения каковцев отступов,
[36:05.840 --> 36:10.640]  то это можно делать так. Есть команда NewSerum, у которой куча аргументов, все обязательные,
[36:10.640 --> 36:14.880]  но если какой-то аргумент вы не хотите менять, вы просто оставляете его пустым, а те, что вы
[36:14.880 --> 36:23.160]  хотите поменять, вы меняете на то, что вам нужно. Как и написано. Название стиля, то, насколько будет
[36:23.160 --> 36:28.960]  большим отступ до теоремы и после нее, шрифты, то есть модификаторы шрифта, которые будут налогаться
[36:28.960 --> 36:34.240]  на сам текст теоремы, не касаясь ее названия. Ну а headfont – это и то, что будет начисляться именно
[36:34.240 --> 36:40.800]  названием. indent – это параметр отступа от левого края. head.tension – это по умолчанию теорема
[36:40.800 --> 36:49.800]  1. и далее текст. Это тоже можно менять вот этим вот параметром. Ну а headspace – это, собственно,
[36:49.800 --> 36:59.120]  размер пробелы между объявлением теоремы номер такой-то, точка, и основом ее текста. Ну и headspec – тоже
[36:59.120 --> 37:04.080]  некие модификаторы, которым можно накладывать название. Необходимость редкая, но она возникает,
[37:04.080 --> 37:10.480]  вот можно и пользоваться. Часто эта штука удобно сочетается с new environment. Если мы хотим,
[37:10.480 --> 37:17.320]  скажем, чтобы наши теоремы были подчеркнуты красным фоном по какой-то причине или завернуты
[37:17.320 --> 37:22.240]  в рамку, такое удобно реализовывать через new environment, а внутри него уже зашивать
[37:22.240 --> 37:29.400]  использование какой-то теоремы. Думаю, что сегодня были довольно сложные примеры кода,
[37:29.400 --> 37:30.720]  поэтому на этом стоит закончить.
