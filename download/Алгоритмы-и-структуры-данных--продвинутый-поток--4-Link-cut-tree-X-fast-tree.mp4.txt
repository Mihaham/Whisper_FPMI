[00:00.000 --> 00:13.480]  и так краткое содержание того что было вот и так как вы помните значит мы писали лент-кат
[00:13.480 --> 00:18.040]  мы хотели действительно чтобы у нас были подвешенные деревья которые мы хотели мало
[00:18.040 --> 00:23.280]  того что там допиливать ребра или отпиливать ребра так еще и брать дерево и переподвешивать
[00:23.280 --> 00:31.280]  его за другую вершину вот а помимо этого мы еще хотели на всяких путях там делать какие-нибудь
[00:31.280 --> 00:40.600]  прибавления на прибавления на них или присваивание или нахождение суммы и так далее вот но чуть-чуть
[00:40.600 --> 00:45.320]  позже мы с вами может вернемся к перечислению операции это будет для нас важно но пока для
[00:45.320 --> 00:51.840]  нас важно следующее что мы хранят как мы храним собственно нашу структуру храним мы ее следующим
[00:51.840 --> 00:58.880]  образом напоминаю то есть у нас есть ребра сплошные вот значит мы их будем взять так
[00:58.880 --> 01:19.640]  сплошные и пунктирные не а че с ними разбираться нет а сам ли разобраться там не сложно потому
[01:19.640 --> 01:25.040]  что ну давайте так еще свое сформулирую значит как у нас устроено и тогда уже там про пролинка
[01:25.040 --> 01:31.480]  как будет уметь мне сказать значит мы храним так что из каждой вершины в ребенка ведет не
[01:31.480 --> 01:39.600]  более одного сплошного пути эти то есть тем самым сплошные ребра индуцирует декомпозицию дерева
[01:39.600 --> 01:47.440]  а точнее или даже леса на пути пути там от какой-то вершины до какого-то предка вот то есть это
[01:47.440 --> 01:58.160]  вот примерно вот таким вот образом выглядит чего ноль сплошных да может быть но сплошных
[01:58.160 --> 02:05.920]  ребер да это нормально но например ну как минимум в листах но и не в листах тоже то есть нам это
[02:05.920 --> 02:29.800]  сейчас не будет теоретически да но нет все будет зависеть от реализации потому что ну конечно же
[02:29.800 --> 02:35.120]  нам желательно может иметь точную реализацию для того чтобы иметь точные доказательства но на самом
[02:35.120 --> 02:40.000]  деле как это всегда часто бывает мы просто поймем технологию доказательства и там как устроить
[02:40.000 --> 02:48.760]  потенциал исходя из него поймем собственно что мы можем сделать а что не можем да он будет
[02:48.760 --> 03:10.080]  работать за у от единицы но это да да да да да да да действительно действительно да не но это другое но
[03:10.080 --> 03:17.840]  это с этим никто не спорит вот так вот как же мы вот то есть у нас вот разбиение на пути но
[03:17.840 --> 03:22.520]  при по какому принципу у нас тут сплошные пунктирные ребра ответ ни по какому формально
[03:22.520 --> 03:30.080]  говоря внутри дерева сплошные пункти рёбра могут быть сплошные пунктирные как угодно но с единственным
[03:30.080 --> 03:36.000]  ограничением что из вершины в детей идет не более чем одного сплошного все других ограничений нет ну
[03:36.000 --> 03:40.600]  по аналогии с тем самым с плей деревом то есть помните да там тоже на самом деле двоичное дерево
[03:40.600 --> 03:46.240]  поиска может быть абсолютно там любой из там из там этих чисел каталана там из числа каталана их
[03:46.240 --> 03:54.880]  так упражнения доказать что на n вершинах двоичных деревьев поиска равно числу каталана н м числу каталана
[03:54.880 --> 04:16.200]  ну в общем еще одна ссылка к вашему экзамену на первом в первом семе нет не обязательно
[04:16.200 --> 04:22.480]  нет смысла почему вот это правильно вот это правильное скопченное последовательно
[04:22.560 --> 04:39.400]  будет символизировать вот такое вот дерево все нормально да нет аж ну ну не знаю ну не знаю
[04:39.400 --> 04:45.080]  значит там числа каталана как-то по-другому возникают ну ладно потому что как бы если вот
[04:45.080 --> 04:48.240]  такие деревья однозначно считать то там как бы ровно число каталана потому что есть
[04:48.240 --> 04:54.560]  однозначные соответствия с правильными скопченными вот на их смотреть вот я тут
[04:54.560 --> 05:04.440]  подлиннее нарисовал и мы обнаружили что все у нас делает мистическая функция expose которая
[05:04.440 --> 05:13.880]  значит еще раз напомним делает следующее она берет вершину какой-нибудь в и добивается того
[05:13.880 --> 05:26.080]  что все ребра от вершины в до корня становятся сплошными но соответственно от более того
[05:26.080 --> 05:31.440]  вы должны быть началом пути поэтому если там вот ниже вы было то есть поэтому если там из
[05:31.440 --> 05:37.160]  в какого-то ребенка шло сплошное ребро то значит оно становится бунктир также еще тут по пути
[05:37.160 --> 05:51.520]  некоторые ребра тоже становятся сплошными твого пунктирными но не совсем вот вот то есть мы
[05:51.520 --> 06:00.080]  сказали что если мы по но что на самом деле мы все операции можем выполнять за асимптотику
[06:00.080 --> 06:08.280]  expose вот но например если вот говорить о линках и катах но то линк например будет сделать очень
[06:08.280 --> 06:15.720]  просто вот вы хотите подвесить там допустим корень в к вершине у ну что вы делаете вы делаете
[06:15.720 --> 06:26.800]  эксползату пригодится да когда конкретно сейчас там действительно нет ну ну в принципе да то есть
[06:26.800 --> 06:33.040]  на самом деле в текущем варианте может быть даже и незачем просто хотя посмотреть хотя
[06:33.040 --> 06:38.360]  посмотрим да вот когда будем анализировать может пригодится потому что рекомендуется на самом
[06:38.360 --> 06:46.400]  деле все-таки откуда тут эксполсты таки забабах вот впрочем посаду от чем не просто забабахать а
[06:46.400 --> 06:51.200]  потом этот путь в котором заканчивается вершина в с этим путем проконкатинировать
[06:51.200 --> 07:03.280]  вот это это мы это мы это как как как делать линк с помощью эксполза вот может быть пока
[07:03.280 --> 07:10.080]  можно и без него но сейчас будем анализировать поймем вот ну как ну вот ну как соответственно
[07:10.080 --> 07:17.520]  очень просто вот как то есть если мы хотим вот взять ребро вот это в у его отпилить то
[07:17.520 --> 07:23.720]  ну делается очень просто вызываем эксполз от у превращаем это ребро в пунктирные все что
[07:23.720 --> 07:39.280]  нам остается это его ликвидировать нет ну корею но вот ну эксполда и ну эксползы делаем ну
[07:39.280 --> 07:44.440]  ради того чтобы во первых как бы так чтобы это ребро стало пунктирным потому что пунктирное
[07:44.440 --> 07:50.720]  ребро ликвидировать гораздо проще чем ликвидировать сплошь но про линк ну про линк да там линк
[07:50.720 --> 07:55.200]  действительно можно там действительно может быть там в некоторых вариантах у нас выяснится что
[07:55.200 --> 08:00.840]  можно не заморачиваться на самом деле ну пока я имею пока вы живете на лог квадрат а вот когда
[08:00.840 --> 08:17.360]  будет сплей но по моему заморочиться надо вот дело в том что у нас смотрите реальность но дело в
[08:17.360 --> 08:21.960]  том что у нас тут эксползы будут работать естественно как-то амортизировано значит у нас
[08:21.960 --> 08:26.520]  будет какой-то потенциал может так случиться что это ваше подвешивание за у от единицы и
[08:27.520 --> 08:34.280]  очень сильно увеличит потенциал и как следствие его учетная стоимость будет плохой вот в чем
[08:34.280 --> 08:52.600]  проблема ну типа того ну хотя как повезет всякое бывает так что вот такая ставка то есть нам
[08:52.600 --> 09:03.440]  нужны потенциалы но вот но пока как бы мы сами пути не влезаем просто верим что у нас есть
[09:03.440 --> 09:08.920]  овл который умеет делать там сплит мерш реверс блаблабла все это делает запредельно к честным
[09:08.920 --> 09:17.280]  логарифом в него мы не лезем поэтому нас интересует сплайсы что такое сплайс вот
[09:17.280 --> 09:23.600]  сплайсом мы будем называть вот так вот эту вот операцию которая заменю которая берет
[09:23.600 --> 09:31.800]  вершины и объявил и заменяет ее сплошного ребенка на другого вот это будет называться сплайс
[09:31.800 --> 09:42.880]  вот соответственно наша цель будет попало то есть наша то есть наша сейчас цель будет
[09:42.880 --> 09:51.600]  проанализировать количество сплайсов которые возникнут если у нас есть n вершин в внимание
[09:51.600 --> 10:08.280]  лисе да у нас желез но так как линк ну чтоб в кате было легче отпиливать но в данном случае
[10:08.280 --> 10:35.440]  но да или реверс вот это да спокойно не надо это понять и тут еще проблема такая если повторяю
[10:35.600 --> 10:41.560]  если повторять какое-то событие называется то оно может и случиться поэтому поэтому это пробеда
[10:41.560 --> 10:52.160]  с башкой в отличный раз лучше не поменять вот значит смотрите итак давайте смотреть но мы можем
[10:52.160 --> 10:58.880]  заметить что как бы то есть нам нужно проанализировать сколько вот на этом линкатия
[10:58.880 --> 11:05.000]  будут выполняться будет выполняться к запросу суммарно правда вот то есть ну желательно
[11:05.000 --> 11:12.280]  доказать что в среднем все будет выполняться залога но пока же мы можем сказать что но пока
[11:12.280 --> 11:17.840]  мы можем что честная симпатика каждого запроса будет количество сплайсов умножить на логарифом
[11:17.840 --> 11:23.480]  правда но так можно оценить это конечно не лучший вариант но вот можно так и ценить поэтому наша
[11:23.480 --> 11:36.200]  цель оценить количество сплайсов вот именно количество сплайсов но вот значится давайте
[11:36.200 --> 11:44.360]  смотреть но действительно заметьте в сплайсов теоретически каждый конкретно на каждом конкретном
[11:44.360 --> 11:51.200]  ходу сплайсов может быть действительно очень много вплоть до от особенно если вы там выбрали
[11:51.200 --> 11:54.880]  не самый удачный метод подвешивания то есть теоретически вообще у вас может быть
[11:54.880 --> 11:59.560]  теоретически может быть целое дерево из состоящей исключительно из монтированных
[11:59.560 --> 12:09.000]  да да с другой стороны да то есть как бы за один сплайс то есть за один по камере
[12:09.000 --> 12:13.480]  эксполсу вы имеете шанс тут конечно прям целый путь действительно сделать сплошным
[12:13.480 --> 12:25.200]  но значит давайте смотреть но значит теперь вспомним что у нас есть еще на самом деле такая
[12:25.200 --> 12:31.120]  красота как но что ребра у нас бывают я вот не случайно видите одноцветный предыдущего они
[12:31.120 --> 12:38.680]  бывают сплошные и они бывают пунктируем а еще в дереве вот именно в дереве они во всяких этих
[12:39.280 --> 13:01.440]  ребра бывают тяжелые и легкие да спасибо важное уточнение да именно именно то есть то есть в
[13:01.440 --> 13:05.040]  данном случае мы не будем поддерживать кто там тяжелый кто там легкий потому что мы размера
[13:05.040 --> 13:17.840]  по дерево даже не поддерживаем потому что да да ну да в косом дереве да у нас была цель чтобы
[13:17.840 --> 13:32.640]  как раз этого не хранить да вот но вот так вот значит теперь значит смотрите следующее значит
[13:32.640 --> 13:43.320]  что у нас происходит значит на самом деле какие сплайсы у нас бывают вот сейчас мы
[13:43.320 --> 13:56.760]  просто рассмотрим все типы сплайсов и значит посмотрим сколько раз за к у запросов они
[13:57.560 --> 14:04.800]  да можем для простоты считать что изначально у нас лес представляет собой n изолированных
[14:04.800 --> 14:14.600]  корней вот ну на самом деле нет потому что вы вы можете в это кукар бы если вам надо
[14:14.600 --> 14:20.480]  реальное дерево строить деревья строить то просто вы там за n минус один операции линк и собственно
[14:20.480 --> 14:26.280]  создаете то что вам надо ну или сколько вам там надо поэтому на самом деле не
[14:26.280 --> 14:35.560]  шибко сильно учтей так но вот так вот давайте представить значит какие вообще типа бывают
[14:35.560 --> 14:52.400]  но вот нет а сам нет на самом деле есть еще один один маленький нулевой вариант изображенный
[14:52.400 --> 14:59.720]  вот здесь когда мы когда мы просто когда тут из вершины там не было не было вообще сплошного
[14:59.720 --> 15:08.960]  ребра и мы его только что создали но да то есть когда вот то есть когда у нас вот есть действительно
[15:08.960 --> 15:17.800]  просто перевод одного тяжелого то есть одного пунктирного вот тоже самое сплошное там называется
[15:17.800 --> 15:30.320]  без без вот этого вот так сказать но теперь давайте думать сколько таких операций могло
[15:30.320 --> 15:47.680]  произойти нет это даже не важно потому что тут все гораздо проще дело в том
[15:47.680 --> 15:55.000]  что каждая такое такая операция уменьшает количество сплошных путей и на сплошных путей
[15:55.000 --> 16:11.840]  во всех деревьях на 1 вот ну вот ну сейчас давай но но нет но тут даже потенциал нет ну смысле
[16:11.840 --> 16:17.160]  смотрите как ну было то есть фактически как бы если у вас тут только одно сплошное пунктирное
[16:17.160 --> 16:24.640]  ребро и сплошного тут не было то сплита не происходит правда но да ну сплита чтобы отсплитить
[16:24.640 --> 16:29.160]  вот то что было ниже не происходит происходит фактически просто жили были два пути и бы их
[16:29.160 --> 16:41.240]  сконкатинировали да то есть количество то есть то есть получается да количество но количество
[16:41.240 --> 16:53.200]  вот таких вот путей сплошных минут он вот фактически минус равно 1 теперь важное замечание что в
[16:53.200 --> 17:00.880]  остальных случаях то есть в остальных случаях при в остальных сплайсах мы заметим что количество
[17:00.880 --> 17:18.920]  путей не меняется не меняется но правда это не все ситуации но но правда но вот тут мы заметим
[17:18.920 --> 17:23.400]  что это еще не все ситуации когда медь потому что может ли количество путей увеличиваться
[17:23.400 --> 17:35.600]  конечно может потому что у нас есть операция кат может увеличить на один ну то есть может
[17:35.600 --> 17:40.560]  увеличить на один да и вообще любой эксполз на самом деле может увеличить количество путей
[17:40.560 --> 17:48.840]  на один потому что вот мы тут вот то что снизу отпиливаем да в остальных случаях не меняется
[17:48.840 --> 18:01.960]  но вот но также бывает также каждый эксполз вот я так но вот каждый эксполз может
[18:01.960 --> 18:30.760]  дать плюс один снизу да но это не совсем splice нет нет мы оцениваем splice да то есть
[18:30.760 --> 18:38.080]  такое может быть до пути может быть ну поддерживаем да такие как оно меняется
[18:38.080 --> 18:56.200]  правильно да да да да нет минус один это когда мы конкретно идем снизу вверх и
[18:56.200 --> 19:01.440]  конкатине но как и и у вас тут происходит конкатинация путей без там ликвидации чего-то
[19:01.440 --> 19:09.320]  вот то есть мы пытаемся оценить количество таких splice и оцениваем их так что количество
[19:09.320 --> 19:16.360]  путей когда меняется ну практически увеличивается на один оно вот при ну каждый эксполз может дать
[19:16.360 --> 19:22.480]  такое плюс один у максимум плюс один это вот единственный случай вот то есть может быть там
[19:22.480 --> 19:26.400]  вот если так перебрать там линкат и вверх при некоторых реализациях может там еще что-нибудь
[19:26.400 --> 19:31.720]  вам дадут хотя сомнительно ну кат да кат вам ничего не даст потому что кат просто будет
[19:31.720 --> 19:37.120]  вызван эксполз который вам соответственно этот путь отбилет поэтому сам по себе кат то есть как
[19:37.120 --> 19:41.760]  бы линк и канут то есть как обычные линк и кат они создают только пунктирное ребро поэтому пока
[19:41.760 --> 19:53.160]  ничего нового но когда вы вызываете эксполз от вершины в вершина в не самое нижнее в своем пути
[19:53.160 --> 20:03.360]  а должна и стать поэтому вот там вот поэтому может стать плюс один ну эксползов мы не будем
[20:03.360 --> 20:09.000]  утвердить очень хочется сказать что изначально путей n минус 1 но тогда тогда хочется сказать так
[20:09.000 --> 20:17.080]  путей изначально их n на каждом шаге увеличивается не более чем на 1 на каждом запросе и а меньше
[20:17.080 --> 20:23.480]  единицы становиться не количество таких путей не может правда так что отсюда следует что минус
[20:23.480 --> 20:42.280]  1 будет не более чем н плюску что там еще другие сплесы есть спокойно это еще не все но то есть
[20:42.280 --> 20:46.760]  тут тоже надо заметить есть маленькая неточность потому что она предполагала что каждое каждую из
[20:46.760 --> 20:53.680]  куза просов дает ровно один эксполз а это неправда ну помните там потому что мы все решали за там
[20:53.680 --> 20:59.640]  могли там бывало два эксполза поэтому но нам достаточно сказать что как бы отн плюску да то
[20:59.640 --> 21:08.160]  есть вот таких штук и того всего значит отн плюску да это был простой случай да мы собственно тут
[21:08.160 --> 21:19.280]  все просто вот далее начинается действительно более продвинутая шоу вот те самые остальные
[21:19.280 --> 21:26.160]  случаи потому что остальные случаи тоже хотелось бы так проанализировать то к сожалению там это
[21:26.160 --> 21:36.080]  потенциал не меняется поэтому это нам никакой информации не даст но давайте смотреть
[21:38.600 --> 21:48.480]  чего а может а может нам даже не потребствую прямо вводить ну то есть для вот этих вот штук
[21:48.480 --> 21:54.920]  мы можем сказать что у нас есть потенциал как количество путей то есть у нас и меняется он
[21:54.920 --> 22:00.120]  может у нас будет такое что-то типа потенциал равен количеству путей плюс нечто что нужно
[22:00.120 --> 22:06.600]  чтобы обрубать обрубать соседей вот значит поехали пошли обрубали значит пошли смотреть что там
[22:06.600 --> 22:16.520]  у соседей и так значит у соседей значит бывает следующая ситуация то есть пунктирная
[22:16.520 --> 22:21.880]  превращается в тяжелая и тяжелая превращается то сплошное превращается в пунктирные даты
[22:21.880 --> 22:26.360]  нельзя путаться потому что сплошное пунктирная и тяжелая легкая это не совсем коррелирующие
[22:26.360 --> 22:36.640]  вещи да но да то есть когда да то есть когда вот то есть во всех данных случая когда вы
[22:36.640 --> 22:41.920]  пунктирное делаете сплошным какое-то сплошную ребро из этой вершины перестало быть стало на
[22:41.920 --> 22:51.680]  оборот пунктир к чему это нас приводит значит какие случаи вообще есть но тут нам потребуется
[22:51.680 --> 23:03.760]  анализ действительно легкие и тяжелые вот значит и в данном случае потенциал так давайте
[23:03.760 --> 23:23.680]  даже подгляну чтобы не путаться вот там простой потенциал опа да нет количество нет как это
[23:23.680 --> 23:39.200]  утверждается что нас интересует количество сплошных легких сплошных так splice это да да то есть
[23:39.200 --> 23:44.960]  в которых одно тяжелое одно сплошное изменяется на тежу значит рассматриваем то есть тут был
[23:44.960 --> 23:54.680]  потенциал можно было сказать что вот здесь так сказать фея 1 количество путей количество путей
[23:54.680 --> 24:05.480]  в системе здесь мы введем такой такой фи два подчеркнутый и голубой почему голубой потому
[24:05.480 --> 24:13.800]  что сплошные почему подчеркнутый голубой потому что сплошные легкие рёбра вот
[24:13.800 --> 24:38.320]  ну да а можно было просто написать диез рёбра и подчеркнутый голубым максимально понятно да
[24:38.320 --> 24:51.640]  да да да пишите в таком стиле статью посылайте вам говорят ой ой ой а мы можем только в черно-белом
[24:51.640 --> 25:00.800]  виде посылать вот так вот да перечал ты жил был значит как меняется этот потенциал при вот
[25:00.800 --> 25:09.600]  таких splice вот значит да нас интересует действительно количество сплошных легких
[25:09.600 --> 25:16.520]  рёбер но значит значит какие замены тут мы заменили тяжелое ребро на тяжелое ребро правда
[25:16.520 --> 25:24.680]  но вот сплошное на сплошное до важное замечание да потому что мы заменили сплошное на сплошной
[25:24.680 --> 25:30.120]  у нас есть четыре случая первое может быть тяжелое легкое второе может быть тяжелое легкое да
[25:30.600 --> 25:42.420]  случай когда мы заменили тяжелое ребро на тяжелое ребро такого не бывает ну
[25:42.420 --> 25:45.900]  Но это значит, что мы заменили вот это тяжелое ребро, а вот это тяжелое ребро.
[25:45.900 --> 25:48.860]  Первое, которое заменили, второе на кого заменили.
[25:48.860 --> 25:53.420]  То, которое мы сделали сплошным, оно было тяжелым, оказалось, и то, которое мы убрали, оно тоже тяжелым.
[25:53.420 --> 25:53.920]  Да.
[25:54.920 --> 25:56.300]  Да, так вот быть не может.
[25:56.300 --> 25:56.800]  Да.
[25:57.500 --> 25:58.860]  У нас множество чего-то конечного.
[25:58.860 --> 26:01.220]  А как мы сейчас определили тяжелые ребрики?
[26:01.220 --> 26:06.500]  А также, то есть ребро в ребенка называется тяжелым, если в его под деревья...
[26:06.500 --> 26:07.700]  Через сайзы?
[26:07.700 --> 26:09.220]  Да, через те самые сайзы, да.
[26:09.300 --> 26:14.500]  В общем, сайзы меряются по вот этим вот деревьям, а не по АВЛ-кам, если что, это важно.
[26:14.500 --> 26:18.500]  В первом случае, у нас мы были единственными ребятами, правильно?
[26:18.500 --> 26:19.500]  В каком первом?
[26:19.500 --> 26:20.500]  А, да.
[26:20.500 --> 26:21.500]  Не обязательно.
[26:21.500 --> 26:23.500]  А нет, даже не обязательно, да, согласен.
[26:23.500 --> 26:25.500]  Тут, в принципе, тут могли висеть еще.
[26:25.500 --> 26:26.500]  Ассет был концом.
[26:26.500 --> 26:31.500]  То есть самое главное, что просто у этой вершины не было тяжелых детей, сплошных детей.
[26:31.500 --> 26:33.500]  А как мы можем это проверить?
[26:33.500 --> 26:34.500]  А мы не должны проверять.
[26:34.500 --> 26:35.500]  А зачем нам это?
[26:35.500 --> 26:36.500]  Ну, я про то, что...
[26:36.780 --> 26:43.780]  А элементарно, потому что у тебя есть опция, когда тебе надо проверить, это вершина первая в своем дереве или нет.
[26:45.780 --> 26:47.780]  Ну, в своем пути все.
[26:47.780 --> 26:48.780]  Да.
[26:48.780 --> 26:50.780]  Например, это делается за алгорифом, да.
[26:52.780 --> 26:54.780]  Ну, то есть так, если в тупую АВЛ.
[26:54.780 --> 27:01.780]  Фактически это можно не проверять, потому что когда ты будешь делать сплайк, он сам отделит пустое дерево.
[27:03.780 --> 27:04.780]  На хит, хорошо.
[27:04.780 --> 27:05.780]  Поехали дальше.
[27:06.780 --> 27:08.780]  Теперь давайте анализировать дальше.
[27:09.780 --> 27:13.780]  Итак, теперь было у нас тяжелое сплошное ребро.
[27:16.780 --> 27:17.780]  Вот.
[27:17.780 --> 27:18.780]  И превратилось оно...
[27:18.780 --> 27:19.780]  Это же...
[27:19.780 --> 27:20.780]  Нет, не так.
[27:20.780 --> 27:25.780]  Превратилось оно в легкое сплошное ребро.
[27:30.780 --> 27:31.780]  Вот.
[27:32.780 --> 27:33.780]  Сколько раз?
[27:33.780 --> 27:34.780]  Ну, понятно.
[27:35.060 --> 27:40.060]  За конкретный сплайс понятно, что это с одной стороны было плюс один.
[27:43.060 --> 27:45.060]  Вот у нас стало плюс одно тяжелое.
[27:45.060 --> 27:47.060]  Это сплошное легкое ребро.
[27:48.060 --> 27:52.060]  Но самое важное, что заметим, что это все...
[27:53.060 --> 28:00.060]  То есть заметим, что на вот этом вот пути у нас легких ребер, которые стали сплошными.
[28:00.340 --> 28:05.340]  То есть у нас есть несколько ребер на этом пути, которые стали сплошными,
[28:05.340 --> 28:10.340]  но среди них легких не более чем логорифм.
[28:14.340 --> 28:16.340]  Поэтому я вот пишу так.
[28:16.340 --> 28:18.340]  Не более чем логорифм на эксполс.
[28:18.340 --> 28:19.340]  Еще раз.
[28:19.340 --> 28:20.340]  Не больше, чем логорифм.
[28:20.340 --> 28:22.340]  Не больше, чем логорифм.
[28:22.340 --> 28:26.340]  У нас тяжелое ребро стало сплошным, а легкое перестало быть сплошным.
[28:26.620 --> 28:31.620]  Чтобы там тяжелое перестало быть сплошным, а легкое стало сплошным.
[28:31.620 --> 28:33.620]  Легкое стало пунктированным.
[28:33.620 --> 28:35.620]  Легкое стало сплошным именно.
[28:37.620 --> 28:38.620]  Сейчас.
[28:38.620 --> 28:39.620]  Мы не можем более чем...
[28:39.620 --> 28:40.620]  Т это...
[28:40.620 --> 28:41.620]  Тяжело.
[28:41.620 --> 28:42.620]  Сейчас.
[28:42.620 --> 28:43.620]  Т это какое ребро?
[28:43.620 --> 28:44.620]  Которое стало...
[28:44.620 --> 28:45.620]  Которое перестало.
[28:45.620 --> 28:47.620]  То есть в обратном порядке.
[28:47.620 --> 28:48.620]  Ну почему?
[28:48.620 --> 28:52.620]  Слева записывают то, что мы убираем, справа записывают то, что мы ставим.
[28:52.620 --> 28:54.620]  Ну как бы было так, стало так.
[28:54.620 --> 28:55.620]  Ну я не знаю.
[28:55.700 --> 28:56.800]  Всё хорошо, всё хорошо.
[28:56.800 --> 28:57.800]  Не знаю.
[28:57.800 --> 29:00.060]  Удивляюсь, что это не интуитивно, но...
[29:00.060 --> 29:01.060]  Да.
[29:01.060 --> 29:01.560]  Это просто обозначение.
[29:01.660 --> 29:08.960]  Смотрите, для меня интуитивно, чтобы мы слева писали ребро, которое сделало
[29:09.260 --> 29:10.360]  то, что написано над ним.
[29:10.360 --> 29:11.360]  Справа писали ребро, которое сделало то, что написано над ним.
[29:11.360 --> 29:14.540]  Там мы ещё видели, напишено пунктирчик «стрелочка тяжелая».
[29:15.580 --> 29:16.360]  Пунктирчик «стрелочка сплошная».
[29:17.360 --> 29:19.160]  Стрелочка «легкая» написано,laubноOld.
[29:19.160 --> 29:20.160]  Нет.
[29:20.160 --> 29:22.360]  Сверху, видишь, пунктирчик «стрелочка сплошная».
[29:22.360 --> 29:25.260]  Это событие, которое произошло.
[29:25.260 --> 29:34.600]  Ну окей, ладно-ладно. Ну окей. Ладно, значит, тут просто, да. Хорошо. Значит, далее.
[29:34.600 --> 29:44.580]  Заметим, что аналогичная ситуация. Бывает еще, что было сплошным легкое
[29:44.580 --> 29:54.300]  ребро, а стало все еще легкое ребро. Это, смотрите тут, что важно. Это к потенциалу
[29:54.300 --> 30:04.180]  тоже дает плюс ноль. Ну ладно, тоже дает, согласен, тоже лишнее было. Но тоже я имел
[30:04.180 --> 30:09.460]  в виду, что тоже таких ситуаций не более, чем лог-2н. Я бы сказал, даже суммарно этих
[30:09.460 --> 30:15.820]  ситуаций не более, чем лог-2н, правда? А по той же причине, потому что все ребра,
[30:15.820 --> 30:20.940]  все ребра, которые стали сплошными, они лежат на одном пути. А если вы прогуливаетесь от
[30:20.940 --> 30:25.220]  вершины до корня, то на этом пути легких ребер вы встретите не более, чем логарифом.
[30:25.220 --> 30:34.700]  Почему? Потому что, когда вы идете, при проходе по легкому ребру, количество размера под дерево
[30:34.700 --> 30:40.820]  увеличивается хотя бы в два раза. А при прогулке по тяжелым увеличивается просто. Вот.
[30:40.820 --> 30:50.420]  А вот еще вопрос по реализации. Как мы будем смотреть, какие ребра нам стоит перекрасить?
[30:50.420 --> 30:58.940]  Ну, пунктивные. То есть мы делаем... То, которое было сплошным, перекрашивается в пунктивные.
[30:58.940 --> 31:22.980]  Так вот. И теперь самое интересное, что вот так вот на логарифом не оценишь. Это когда,
[31:23.020 --> 31:31.700]  наоборот, было у нас тяжелым легкое ребро, было сплошным легкое ребро, а стало сплошным тяжелое
[31:31.700 --> 31:42.860]  ребро. Вот этого добра на один экспоус может произойти сколько угодно. Но! Так, потенциал у нас
[31:42.860 --> 31:57.980]  минус... Так, давайте я уберу эти сплайсы. Но к потенциалу это минус один. Ну, что это означает?
[31:57.980 --> 32:03.540]  Значит, теперь давайте оценим просто... Ну, теперь давайте... То есть можно попробовать оценить,
[32:03.540 --> 32:07.100]  а сколько тогда сплайсов вообще могло быть. Мы же оцениваем именно сплайсы, помните? И
[32:07.100 --> 32:14.700]  мы обнаруживаем следующее. Что... То есть, ну, мы помним, таких сплайсов у нас вообще линейное
[32:14.700 --> 32:21.980]  количество. Таких сплайсов у нас получается от количества экспоузов умножить на логарифа. Ну,
[32:21.980 --> 32:33.020]  то есть от кулоген получается. Таких сплайсов тоже от кулоген. А этих... А вот с этими интереснее,
[32:33.020 --> 32:39.780]  потому что замечаем, что потенциал у нас никогда не становится меньше нуля, но увеличивается он при
[32:39.780 --> 32:52.660]  этом не более чем, как мы уже выяснили, от кулоген раз, правда? Ну да. Значит, получается,
[32:52.660 --> 33:01.780]  что таких суммарно получается от кулоген. Значит, еще раз. Ну, потому что, смотрите, утверждение,
[33:01.780 --> 33:15.340]  вот этих сплайсов будет не более чем всех остальных сплайсов. Не понял, что... Мы считаем
[33:15.340 --> 33:20.940]  количество сплайсов. Мы доказали, что вот сплайсов вот без лишения какого-то сплошного
[33:20.940 --> 33:31.900]  ребра статуса сплошности. Собственно, их линейное количество. Вот. Это было в самом начале. Все остальные
[33:31.900 --> 33:38.620]  сплайсы, значит, они имеют четыре типа, а на самом деле три, потому что как бы не бывает,
[33:38.620 --> 33:43.260]  что было тяжелое ребро, было сплошным тяжелое ребро и стало сплошным снова тяжелое ребро.
[33:43.260 --> 33:50.780]  Такого не бывает. Потому что у вершины не бывает двух тяжелых детей. Теперь мы замечаем следующее.
[33:50.780 --> 33:59.260]  Есть рассматривать сплайсы, которые вместо тяжелого сплошного ребра подставляют легкое
[33:59.260 --> 34:09.660]  сплошное ребро. Таких у нас не более чем логарифом на эксполс. То есть, следовать на таких... Да,
[34:09.660 --> 34:14.660]  и они дают плюс один. То есть, потенциал тогда получается вот в этом месте суммарно увеличивается
[34:14.660 --> 34:25.140]  на о от кулоген. Ну, от количества эксполсов на логен, если быть точнее. Вот. Здесь еще,
[34:25.140 --> 34:33.500]  который превращает легкое в легкое. Ну, такая же ситуация, но здесь это важно для просто времени
[34:33.500 --> 34:40.740]  работы, но потенциал на потенциал оно не влияет. Но их тоже кулоген. Теперь. И наконец, третий тип.
[34:40.740 --> 34:50.820]  Когда было сплошным легкое ребро, стало сплошным тяжелое ребро. Да, больше либо равно нуля. То есть,
[34:50.820 --> 34:54.620]  как всегда воспользовались этим и воспользовались тем, что в этом месте потенциал уменьшается на
[34:54.620 --> 35:05.380]  единицу. Тогда это означает, что, то есть, он уменьшится не более чем раз, когда оно увеличится. И тогда,
[35:05.380 --> 35:09.660]  но так как оно у нас увеличивается не более чем кулоген раз, потому что мы предполагаем,
[35:09.660 --> 35:16.020]  что в других местах у нас сплошных легких ребер не появляется. Вот, кстати, для этого очень
[35:16.020 --> 35:20.020]  удобно считать, что когда мы делаем линк, мы подвешиваем все-таки запунктирное ребро и никого
[35:20.020 --> 35:35.340]  не конкретно. Ну, или сказать плюс один, но это просто чуть усложнит анализ. Да, вот хороший вопрос.
[35:35.340 --> 35:38.940]  Да, на самом деле, если внимательно смотреть, то потенциал, конечно, еще где-то меняется. Это
[35:38.940 --> 35:47.420]  важно. Не важно проанализировать как. Но конкретно в Эверте происходит следующее. То есть, заметим,
[35:47.420 --> 35:56.420]  что, на самом деле, вот что происходит в Эверте. У нас есть вот этот вот корневой путь. И, нет,
[35:56.420 --> 36:02.700]  смотрите, и на нем что-то висит. Я даже напишу, что висят просто какие-то под деревья, потому что
[36:02.700 --> 36:10.860]  заметим, что от того, что вы этот путь реверсите... Что? А, я случайно. Так, да-да, не бывает,
[36:10.860 --> 36:17.580]  не бывает, безусловно. Вот, но я тут пишу. То есть, заметим, что самих, сами вклад этих под деревья
[36:17.580 --> 36:22.220]  в потенциал не поменяется от слова никак. Эти ребра так пунктирными от самого реверса останутся.
[36:22.220 --> 36:32.540]  А сам Эверт, что он сделает? Он, конечно, перевернет этот путь, и эти все, там, и эти все ребра будут
[36:32.540 --> 36:38.060]  смотреть в другую сторону. Их тяжесть и легкость может там перемешаться как-то совсем рандомно. Но,
[36:38.060 --> 36:45.020]  но теперь заметим, что на одном пути количество сплошных, вот на этом пути, количество легких
[36:45.020 --> 36:52.660]  ребер не более чем логарифм. Правда? То есть, получается, было оно от нуля до логарифма,
[36:52.660 --> 37:00.340]  а после реверса стало тоже от нуля до логарифма. То есть, это может быть принципиально другие
[37:00.340 --> 37:07.180]  логарифм ребер, но их все равно не больше. То есть, следовательно, от самого по себе Эверта,
[37:07.180 --> 37:14.340]  значит, увеличение потенциала произошло не более чем на логарифм. Да, но спасибо огромное
[37:14.340 --> 37:21.340]  замечание. Действительно очень важно. Вот. Но в асимптотику Q log N мы продолжаем вписываться.
[37:21.340 --> 37:36.860]  Значит, Q log N splice. Q log N splice совершенно верно. За Q log N общей асимптотики я, конечно,
[37:36.860 --> 37:44.860]  пока не претендую. Вот. Но нет, это уже тоже, на самом деле, важная для нас веха. То есть,
[37:44.860 --> 37:52.660]  я утверждаю, что в итоге мы прямо сейчас доказали, что действительно, что мы научились делать,
[37:52.660 --> 38:05.300]  значит, Q запросов, выполняя внутри них Q от Q log N splice. Ну, то есть, мы выполняем какие-то
[38:05.300 --> 38:12.020]  от… В каждом запросе мы выполняем, по сути, от единицы действий плюс какое-то количество
[38:12.020 --> 38:19.900]  splice'ов. Эти splice'ов от Q log N. Другой вопрос, что каждый splice работает тоже за log N,
[38:19.900 --> 38:24.420]  потому что мы пока пользуемся обычными AVL деревьями и ни на что больше не претендуем.
[38:24.420 --> 38:29.460]  Ну, можете поставить там, пожалуйста, красночерный, дикотячку, B дерево, кстати,
[38:29.460 --> 38:38.260]  нам вскоре пригодится. Не в этом месте, но вообще. Вот. И так далее. Вот. То есть,
[38:38.260 --> 38:46.860]  тогда отсюда следует, что если вы напишите такой линкат с абсолютно произвольной дикотячкой,
[38:46.860 --> 38:55.300]  вашей любимой. Вот. Ну, знаете, это дикотячка с маленькой буквы. То есть, имеется в виду,
[38:55.300 --> 39:00.460]  что, как бы, ваша любимая двоечная дерева. Вот. То тогда получается, что на все запросы вы
[39:00.460 --> 39:15.740]  научились отвечать за учетное время O от log квадрат. Вот. Да, в принципе, уже неплохо. Нет,
[39:15.740 --> 39:20.180]  ну как сказать, нет, log квадрат в принципе тоже не самая плохая асимптатика, как бы лучше,
[39:20.180 --> 39:27.460]  она лучше, чем корень. А log квадрат берется из-за того, что каждый splice вы по факту делаете
[39:27.460 --> 39:57.140]  за логорифом. Вот. Пока. Да, это только splice. Ну-ка. Ну-ка. Ну да.
[39:57.140 --> 40:02.900]  Но их тоже было, да. Но стало их только меньше. Да, ну. Ну, как сказать, было логорифом и осталось
[40:02.900 --> 40:11.940]  логорифом. Могло, но суть та же. Да, ну, спасибо. Да, то есть, вот если совсем формально копать,
[40:11.940 --> 40:17.260]  то да. Там, да, может быть, жалко, что у нас не осталась списка, потому что надо прям по всем
[40:17.260 --> 40:21.260]  переменным прибегаться. Хотя там, да, больше ничего там серьезного-то не осталось, потому что все
[40:21.260 --> 40:26.060]  операции, по-моему, сводятся в основном к expose и какой-то там отложенной операции на этом
[40:26.060 --> 40:34.460]  дереве. Вот. Которая сама по себе главная отложенная операция на дереве, там без эксползу вообще
[40:34.460 --> 40:46.780]  за от единицы работает. Вот. Ну, потому что, ну, мы анализировали, как во время splice изменяется
[40:46.780 --> 40:53.580]  fed2. Вот. Вот мы проанализировали, что splice бывают вот таких типов и вот изменяется потом,
[40:53.580 --> 41:01.140]  изменяется не fed2, вот так, вот так и вот так. Это, но это уже следующий шаг. Так что вот такая
[41:01.140 --> 41:08.540]  технология, вот такой вот log2, вот такой вот интерес. Ура. Вот такое локальное, ну, локальное,
[41:08.540 --> 41:31.780]  конечно, такое ура. Безусловно. Ну, хорошо, n plus q log n, хорошо. Особенно, если учесть, что
[41:32.580 --> 41:38.540]  запросов скорее всего у вас будут, их будет n, вот эта вот связь, то, ну да, формально, конечно,
[41:38.540 --> 42:00.980]  да, надо писать, что там n plus q. Ну, что там? Ну, да. Ну, хорошо, хорошо. Ну, да. Ну, да. Ну, да.
[42:00.980 --> 42:10.060]  Ну, это все такая локальность, да. Вот. А вот дальше, ну, вот. Так, ну, еще вопросы по log2 есть?
[42:10.060 --> 42:26.140]  Возможно. Значит, смотрите. А вот дальше начинается самое интересное. Самое, ну, вот выражается это
[42:26.140 --> 42:36.300]  самое, самое интересное в том, что утверждается, что это можно неожиданно оптимизировать. Оптимизация
[42:36.300 --> 42:41.780]  теперь будет заключаться в том, что теперь, если вместо брать непроизвольное двоичное дерево
[42:41.780 --> 42:50.540]  поиска, а конкретное, а конкретно сплей дерева и не просто конкретно сплей дерева, но с этим,
[42:51.180 --> 43:00.340]  с этим сплей деревом еще и так очень-очень аккуратно работать, то на самом деле log2 можно убить до лога.
[43:00.340 --> 43:12.980]  Вот такая вот ставка. Нет, мы еще только собираемся, мы еще собираемся только приступить
[43:12.980 --> 43:21.020]  к этому увлекательному занятию. Вот. Как-то мы еще только это разбег берем. Вот. Значит, смотрите.
[43:21.020 --> 43:27.300]  Так что мы запомнили, вот сейчас нам нужен важно, значит, важный для нас момент. Смотрите,
[43:27.300 --> 43:36.100]  что мы знаем, что сплайсов самих по себе, их от вот n plus q на log n. Это мы уже выяснили. Вот
[43:36.100 --> 43:41.500]  запомнили. То есть конкретно этот анализ нам больше не понадобится. Нам нужно будет только помнить,
[43:41.500 --> 43:49.940]  что самих сплайсов, то есть самих по сути сплитов мержей будет n plus q на log n. Теперь надо
[43:49.940 --> 43:55.860]  просто грамотно убедиться в том, что эти сами по себе сплитые мержи будут адекватно работать.
[43:55.860 --> 44:06.700]  Для этого мы немножко отвлечемся от линката и воспомним, собственно, сплей дерева и чуть-чуть
[44:06.700 --> 44:20.260]  его анализа. Давайте это я уберу. Значит, это я уберу. Это я вот убрал.
[44:36.700 --> 44:55.540]  И теперь давайте вспоминать, что у нас вообще такое сплей дерево, чем оно отличается от других
[44:55.540 --> 45:05.460]  двоичных деревьев поиска. Оно отличается у нас тем, напоминаю, что у нас теперь двоичное дерево
[45:05.460 --> 45:13.660]  поиска в каждый момент времени мог быть абсолютно любым, причем буквально. То есть в каждом моменте
[45:13.660 --> 45:19.460]  времени оно там случайно может оказаться практически кем угодно, но важно для нас следующее.
[45:19.460 --> 45:33.700]  Вот, то есть важно теперь следующее, что если мы, давайте так, что если мы захотим пойти в какую-то
[45:33.700 --> 45:39.220]  вершину, что-то с ней сделать, захотим найти, скажем, вот эту вершину, чтобы там посмотреть ей в глаза, например,
[45:39.220 --> 45:52.940]  то значит мы это сделаем честно за вот от длины пути от корня до нее. Да, может быть, но мы это оплатим.
[45:52.940 --> 46:01.820]  Мы это оплатим тем, что вызовем от нее функцию сплей, то есть такой аналог expose, который с помощью
[46:02.140 --> 46:12.900]  хитроумных операций, значит, там операции zig, zig-zig и zigzag отправит, то есть доведет ее до коркин.
[46:12.900 --> 46:21.900]  То есть она вот там, она станет коркин. В чем там, напомним, помните, там важно, собственно, именно
[46:21.900 --> 46:27.300]  какие операции мы делали. То есть именно важно следующее, что, то есть важно, то есть важно,
[46:27.300 --> 46:33.740]  что это не просто малые повороты вот прям по одному на каждом ребре, а тут вот именно важно следующее,
[46:33.740 --> 46:39.380]  то есть там вот для анализа оказывается важно, что, ну конечно, значит, есть zig шаг в самом конце,
[46:39.380 --> 46:49.260]  если ваша вершина оказалась просто сыном корня, да, но там тут все просто, тут ее подвесили, это шаг zig.
[46:49.260 --> 47:01.140]  А дальше, если она оказалась внуком или правнуком, то есть соответственно zig-zig и zig-zag.
[47:01.140 --> 47:15.740]  Вот, значит, тогда оказывается, что если у нас тут есть вершина, значит, zig-zig у нас работает так,
[47:15.740 --> 47:22.700]  что если у нас вот есть тут вот висит какая-то вершина z, и тут у нас висит от 4 под дерево, вот они,
[47:22.700 --> 47:36.500]  то мы за там, так сказать, о от двух, если так можно выразиться, да, делаем вот, делаем вот такие операции.
[47:36.500 --> 47:43.740]  То есть вот объявляем, что теперь у нас называется отец x становится его сыном,
[47:43.740 --> 47:55.860]  вот там дедушка x становится его внуком, вот, то есть вот примерно вот так это происходит.
[47:55.860 --> 48:02.620]  Вот, ну соответственно это был zig-zig, ну и соответственно еще легче проанализировать,
[48:02.620 --> 48:11.300]  ну вот еще был zig-zag. Вот, значит, если, ну это как бы работает, если, как бы когда мы идем от
[48:11.300 --> 48:16.820]  дедушки к внуку, от дедушки x к x, то мы два раза идем в одном направлении, два раза влево или там
[48:16.820 --> 48:22.580]  соответственно два раза вправо, там симметрично. Но если оказалось, что у нас zig-zag, то есть что мы
[48:22.580 --> 48:32.300]  идем в две разные стороны, вот, например, вот такая ситуация, и тут висят какие-то под деревья,
[48:32.300 --> 48:49.900]  то получается гораздо более интерес. Ну вот, ну можно так, ну, я так скажу, здесь тоже на самом деле
[48:49.900 --> 48:56.180]  два маленьких поворота, да, только сначала вот в этом ребро, потом по этому, да, но это уже детали,
[48:56.180 --> 49:06.860]  сейчас для нас несущественное. Вот, значит, здесь мы тоже за о от двух делаем, то есть вот такую
[49:06.860 --> 49:12.980]  мистическую комбинацию, то есть, то есть и гкз мы вешаем слева и справа от х, и там соответственно эти
[49:12.980 --> 49:20.260]  вот альфа, бета, гамма, дельта у равно вот так вот, по крайней мере, равновесно в кавычках вешаем,
[49:20.260 --> 49:30.260]  почему в кавычках, потому что реальные размеры альфа, бета, гамма, дельта мы не знаем. Вот, то есть вот так
[49:30.260 --> 49:40.500]  было устроено сплей дерева, вот, и теперь оно вот, и у нас есть мистическая теорема, ну у нас была
[49:40.500 --> 49:52.500]  мистическая теорема о том, что значит она, что это все работает за о от, что учетная стоимость каждого
[49:52.500 --> 50:00.860]  сплея получается от луген, вот, если вот именно вот в таком виде реализовывать, там это было, но, значит,
[50:00.860 --> 50:14.740]  мы попробуем, но нам потребуется более сильная теорема, вот, но мы ее воспомним, что делать, и теорема у нас
[50:14.740 --> 50:29.500]  звучала так, значит, смотрите, ну вот, значит, как она, как она у нас звучала, звучала она соответственно так, что мы объявляли, что
[50:29.500 --> 50:50.740]  что к каждой вершине v будет соответствовать некий вес w от v, который больше 0, вот, а также мы вводим еще такую замечательную вещь, как
[50:51.340 --> 51:14.900]  s от v, которая равна сумма по всем u, значит, лежит в, значит, там, так сказать, под дереве v, значит, по всем им суммируем эти веса, да, только v от u, конечно, ну вот,
[51:15.900 --> 51:38.580]  также теперь рангом вершины, ну тут разные варианты, но рангом вершины r мы назовем логарифом двоичной s от v, это s от v, и, наконец, потенциал, который нас интересует, значит, phi от t, это просто сумма всех рангов,
[51:38.580 --> 51:43.580]  вот, t на этот раз, это дерево.
[51:43.580 --> 52:11.580]  в с, в, это всех патереев у, или всех вершин в, все вершины патереев, да, а стандартный анализ будет w от v будет всегда единицей, да, ну, точнее, общая теорема звучит теперь так, что, действительно,
[52:11.580 --> 52:29.580]  ну, то есть, общая теорема будет звучать так, давайте так вот напишем, такие же, значит, что, значит, учетная стоимость сплея от вершины v, учетная стоимость,
[52:29.580 --> 52:56.580]  значит, учетная стоимость чего, учетная стоимость сплей от v есть, вот, но есть, на самом деле, o от, ну, можно сказать, единицы плюс r от, так сказать, root минус r от v,
[52:56.580 --> 53:24.580]  ну, где можно сказать, что, где вот r берется перед сплеем, вот, или что то же самое, может быть, напишу в более похожем, известный, один плюс, значит, скажем, логарифом двоичный, значит, s от root,
[53:24.580 --> 53:46.580]  поделить на s от v, хотя, конечно, вот именно в виде вот этой вычиталки это максимально хорошо, вот, то есть, видите, тут отношение говорит следующее, что, на самом деле, какие тут конкретно брать веса все равно,
[53:46.580 --> 54:05.580]  потому что заметим, что асимптотика вот этой, в этой теории не поменяется, если вы все веса домножите на какую-нибудь константу, то есть, если все веса завтра там вы увеличите в пять раз, то, в общем-то, асимптотика от этого не меняется никак, потому что отношение одно и то же.
[54:05.580 --> 54:33.580]  Вот, но обратите внимание, что для нас было важно, вот, вот эта единица была, то есть, по-моему, вот, то есть, вот она была, ну, потому что сирема доказывалась очень просто, значит, она доказывалась, что, значит, каждый из этих вот шагов делается за, то есть, вот, зиг-зиг и зиг-заг делаются не более, чем за o от,
[54:33.580 --> 54:58.580]  собственно, три разности между, вот, там, рангом z минус рангом x, вот видите, да? Ну, так как заметим, что ранг z, он потом, как бы, после операции становится рангом x, поэтому в итоге эта сумма телескопируется, но в самом конце вот у этого зиг-шара там оказалось все-таки три утроенная разность вот этих вот рангов, но все-таки плюс один.
[54:58.580 --> 55:25.580]  Да, поэтому это вот важно, потому что по каким-то странным причинам, по-моему, в некоторых статьях эту единицу почему-то опускают, вот, поэтому даже тарьяновское доказательство меня начинало смущать, вот, хотя в данном случае, конечно, эта единица нам, ну, вот, на самом деле, погоды будет особо не сделать, потому что придется эту единицу покрывать сплайсами, вот.
[55:25.580 --> 55:35.580]  Но для этого, так, ну что, надо доказательство этой серии? Нет, ну, кажется, да, она была на экзамене, да, что еще надо?
[55:35.580 --> 55:37.580]  Ни хуя было на экзамене, никого.
[55:37.580 --> 55:43.580]  Че, никому не выпало сплайд-дерево? Ну, странно, потому что, нет, по идее, сплайд-дерево даже в основном потоке есть.
[55:43.580 --> 55:51.580]  Да, но в итоге выпадали у Сабстринк и Кобяков.
[55:51.580 --> 55:56.580]  О, господи. Тот, да тот АЛЦС это называется, господи.
[55:56.580 --> 55:58.580]  Ой, да что ж такое?
[55:58.580 --> 56:00.580]  Че там?
[56:00.580 --> 56:05.580]  Ну, потому что, ну, в науке она так называется, шо я делаю.
[56:05.580 --> 56:17.580]  Какая наука? Ну, какая наука? Ну, толкарь, вы знаете, там вообще даже едва, там иногда даже что-то, там будут просто спецжурналы, в которые подбубликуются, там, теоретик, компьютер, саенс, вот это вот.
[56:17.580 --> 56:22.580]  Ой, господи. Хотя иногда ощущение, что да, да, как проводить, да, как проводить лекции.
[56:22.580 --> 56:26.580]  Это очень просто. Берем, берем эти все журналы и вперед.
[56:26.580 --> 56:28.580]  На самом деле.
[56:28.580 --> 56:33.580]  Нет, ну, в какой-то момент, может, и да даже. Хотя, нет, это больше уже на спецкурс похоже, конечно.
[56:33.580 --> 56:34.580]  Да, нормально.
[56:34.580 --> 56:40.580]  Ну, в какой-то момент, может, да, че. Тем более, в конце концов уровень, да, уровень у нас растет все время, так шо.
[56:40.580 --> 56:45.580]  Как бы, как бы, возможно, лет через пять придут все скажут, ну, шо это такое? Это все уже давно знают.
[56:45.580 --> 56:47.580]  Из-за этого нафсерис нельзя выйти.
[56:51.580 --> 57:01.580]  Знаете, да, нафсерис, да, как это потом, на регионе, да, на регионе не может быть там потоков, сказали, да, и потом в каком-то 18-м году бабах появились.
[57:01.580 --> 57:09.580]  Там была какая-то история с линкадом нафсерис, что какой-то чувак был очень горд тем, что он писал, сдал задачу линкадам,
[57:09.580 --> 57:12.580]  потом же сказали, что на самом деле там все гораздо проще.
[57:12.580 --> 57:13.580]  Ну, да.
[57:13.580 --> 57:15.580]  Ну, блин, никогда вообще учил, да.
[57:15.580 --> 57:19.580]  Ну, ну, как сказать, тут че, ну, выучил, сдал.
[57:19.580 --> 57:24.580]  Нет, возможно, это называется решение оказалось неожиданностью для жюри, мы не закрутовили против него тестов.
[57:24.580 --> 57:25.580]  Нет.
[57:25.580 --> 57:28.580]  Нет, ну, в смысле, ну, на трейль-то могли завалить.
[57:28.580 --> 57:29.580]  Ну, вот.
[57:29.580 --> 57:30.580]  Ну, не важно, впрочем.
[57:30.580 --> 57:36.580]  Ну, нет, честно скажем, на самом деле, конечно, эти прогнозы не очень, потому что жюри будут очень стараться всегда делать задачи так,
[57:36.580 --> 57:40.580]  чтобы там надо было много думать, но немного знать.
[57:40.580 --> 57:45.580]  То есть поэтому вряд ли они там дадут, что надо там это апперсистентного Уконина на линкаде писать.
[57:45.580 --> 57:48.580]  А персистентного от кого?
[57:48.580 --> 57:49.580]  Уконина.
[57:49.580 --> 57:50.580]  Уконин я знаком.
[57:50.580 --> 57:52.580]  Вот, знакомая фамилия, да.
[57:52.580 --> 57:53.580]  Уконина.
[57:53.580 --> 57:55.580]  Уконин эско.
[57:55.580 --> 57:57.580]  Такой финский ученый.
[57:57.580 --> 58:02.580]  У него есть алгоритм, который строится в дерево за линию.
[58:02.580 --> 58:04.580]  Причем...
[58:04.580 --> 58:06.580]  Зачем такие сложные мемена?
[58:06.580 --> 58:07.580]  Просто дерево за линию.
[58:07.580 --> 58:08.580]  Все.
[58:08.580 --> 58:09.580]  Резко стало понятно.
[58:09.580 --> 58:10.580]  Ну, не знаю, по-моему, Уконенко.
[58:10.580 --> 58:12.580]  Прикольная фамилия.
[58:12.580 --> 58:13.580]  Ладно.
[58:13.580 --> 58:14.580]  Значит, далее.
[58:14.580 --> 58:15.580]  Хорошо.
[58:15.580 --> 58:17.580]  Значит, мы воспомнили, что у нас вот есть такая штука.
[58:17.580 --> 58:19.580]  То есть есть он вот так вот работает.
[58:20.580 --> 58:29.580]  Теперь, значит, наша цель у всех этих сплей деревьев ввести правильные потенциалы.
[58:29.580 --> 58:32.580]  Правильные в В.
[58:32.580 --> 58:33.580]  Да, правильные.
[58:33.580 --> 58:37.580]  Ну, правильные в первую очередь В, конечно.
[58:37.580 --> 58:38.580]  Да.
[58:38.580 --> 58:39.580]  Ну, вот.
[58:39.580 --> 58:40.580]  Ну, да.
[58:40.580 --> 58:43.580]  По сути, в первую очередь В.
[58:45.580 --> 58:46.580]  Да.
[58:46.580 --> 58:48.580]  Хотя тут надо будет обращать внимание.
[58:48.580 --> 58:49.580]  Да.
[58:49.580 --> 58:50.580]  Да.
[58:50.580 --> 58:52.580]  Для обычного, чтобы доказать просто логарифм, достаточно
[58:52.580 --> 58:57.580]  просто сказать, что W от В равно 1, и логарифм N становится автоматически.
[58:57.580 --> 58:58.580]  Ну, вот.
[58:58.580 --> 59:00.580]  Там еще были примеры, что...
[59:00.580 --> 59:03.580]  Часто еще, если вы знаете, с какой частотой будут обращаться
[59:03.580 --> 59:07.580]  в какие-то вершины, то вы там можете вместо W поставить просто
[59:07.580 --> 59:09.580]  вероятность того, что в нее тыкнут.
[59:09.580 --> 59:13.580]  И получить что-то типа энтропии.
[59:13.580 --> 59:15.580]  Вот.
[59:15.580 --> 59:16.580]  Спасибо.
[59:16.580 --> 59:18.580]  Очень помогает задача.
[59:18.580 --> 59:19.580]  Нет.
[59:19.580 --> 59:20.580]  Ну, как?
[59:20.580 --> 59:21.580]  Ну, это интересный факт.
[59:21.580 --> 59:24.580]  Особенно когда вы пишете алгоритмы не для того, чтобы
[59:24.580 --> 59:29.580]  запихать лапшу в тейстер, а для реалижения.
[59:29.580 --> 59:30.580]  Вот.
[59:30.580 --> 59:31.580]  Энтропия заходит.
[59:31.580 --> 59:32.580]  Ну, вот.
[59:32.580 --> 59:33.580]  Так что да.
[59:33.580 --> 59:34.580]  Ну, вот.
[59:34.580 --> 59:35.580]  Так вот.
[59:35.580 --> 59:39.580]  Ну, более того, я вас сразу предупрежу, что вот это
[59:39.580 --> 59:43.580]  вот W может меняться со временем.
[59:43.580 --> 59:44.580]  Да.
[59:44.580 --> 59:49.580]  И поэтому нам сейчас с вами придется внимательно думать.
[59:58.580 --> 59:59.580]  Твой вопрос...
[59:59.580 --> 01:00:03.580]  Значит, у тебя это звучит немножко так.
[01:00:03.580 --> 01:00:04.580]  Когда...
[01:00:04.580 --> 01:00:05.580]  Вот.
[01:00:05.580 --> 01:00:06.580]  То есть это...
[01:00:06.580 --> 01:00:08.580]  Кто нам мешает, когда мы будем переходить дорогу,
[01:00:08.580 --> 01:00:09.580]  посмотреть сначала направо, потом налево?
[01:00:09.580 --> 01:00:10.580]  Да.
[01:00:10.580 --> 01:00:11.580]  Никто нам не мешает.
[01:00:11.580 --> 01:00:16.580]  Но я это сказал не для того, что нам кто-то мешает,
[01:00:16.580 --> 01:00:19.580]  а для того, чтобы мы это сделали.
[01:00:19.580 --> 01:00:20.580]  А то как бы...
[01:00:20.580 --> 01:00:21.580]  А то получится это так.
[01:00:21.580 --> 01:00:22.580]  У меня пожар, так.
[01:00:22.580 --> 01:00:25.580]  Выхожу в коридор, огнетушитель есть, решение существует,
[01:00:25.580 --> 01:00:26.580]  пошел спать.
[01:00:26.580 --> 01:00:27.580]  Ну, мы это уже обсуждали.
[01:00:27.580 --> 01:00:28.580]  Вот.
[01:00:28.580 --> 01:00:31.580]  Примерно та же ситуация будет.
[01:00:31.580 --> 01:00:32.580]  А то тем более...
[01:00:32.580 --> 01:00:33.580]  Жизнь в общаге такая.
[01:00:33.580 --> 01:00:35.580]  Ну, че жить в общаге?
[01:00:35.580 --> 01:00:36.580]  Тут он...
[01:00:36.580 --> 01:00:37.580]  Недавно вот пока стираю...
[01:00:37.580 --> 01:00:39.580]  Знаете, тут показали видео, как действительно в Харькове
[01:00:39.580 --> 01:00:41.580]  там женщина переходила трамвайные пути, посмотрела
[01:00:41.580 --> 01:00:43.580]  налево, ничего не нашла и пошла.
[01:00:43.580 --> 01:00:45.580]  В результате избил трамвай, едущий с той стороны.
[01:00:45.580 --> 01:00:47.580]  Ну, было бы смешно...
[01:00:47.580 --> 01:00:50.580]  Ну, вроде без летального исхода и даже без там
[01:00:50.580 --> 01:00:52.580]  супер мега травм, но...
[01:00:52.580 --> 01:00:54.580]  Сам по себе факт неприятен.
[01:00:54.580 --> 01:00:56.580]  Вот.
[01:01:02.580 --> 01:01:03.580]  Ну да, да, да, да, да.
[01:01:03.580 --> 01:01:04.580]  Ну да, да, да, да.
[01:01:04.580 --> 01:01:06.580]  Да, да, да, да, да.
[01:01:06.580 --> 01:01:07.580]  Ну да, да, да, да.
[01:01:07.580 --> 01:01:08.580]  Да, да, да, да.
[01:01:08.580 --> 01:01:09.580]  Да, да, да, да.
[01:01:09.580 --> 01:01:11.580]  Конечно, причина была в том, что в Харькове сейчас живет
[01:01:11.580 --> 01:01:13.580]  Алексей Данилюк, конечно, да.
[01:01:15.580 --> 01:01:17.580]  Не, кстати, да, на полном сервизе.
[01:01:17.580 --> 01:01:19.580]  Он там, собственно, женился и поехал в Аенод
[01:01:19.580 --> 01:01:21.580]  и поехал в Харьков.
[01:01:21.580 --> 01:01:22.580]  Я не знаю, кто это.
[01:01:22.580 --> 01:01:24.580]  Умник.
[01:01:24.580 --> 01:01:26.580]  Действующий чемпион мира
[01:01:26.580 --> 01:01:27.580]  от Нижегородского юричитета.
[01:01:27.580 --> 01:01:28.580]  Да, да, да.
[01:01:28.580 --> 01:01:29.580]  Я тоже в курсе.
[01:01:29.580 --> 01:01:30.580]  Вот.
[01:01:30.580 --> 01:01:31.580]  Да, ну не важно.
[01:01:31.580 --> 01:01:32.580]  Вот.
[01:01:32.580 --> 01:01:33.580]  Так вот.
[01:01:33.580 --> 01:01:35.580]  Значится, поехали.
[01:01:36.580 --> 01:01:38.580]  Значит, вообразим себе следующее.
[01:01:38.580 --> 01:01:41.580]  Значит, как выглядит тяжелый путь?
[01:01:42.580 --> 01:01:44.580]  Значит, как мы с вами знаем,
[01:01:44.580 --> 01:01:46.580]  тяжелый путь, как мы уже поняли,
[01:01:46.580 --> 01:01:49.580]  это, вот, будем говорить, вот такое сплэй-дерево.
[01:01:49.580 --> 01:01:50.580]  Да?
[01:01:50.580 --> 01:01:53.580]  То есть, вот, на самом деле, вот такой вот путь.
[01:01:55.580 --> 01:01:57.580]  От начала до корня.
[01:01:57.580 --> 01:01:59.580]  Может быть, сплошной, а не тяжелый?
[01:01:59.580 --> 01:02:00.580]  Ой.
[01:02:00.580 --> 01:02:02.580]  Чего я бы тяжелый хотел?
[01:02:02.580 --> 01:02:03.580]  Ну да, сплошной.
[01:02:03.580 --> 01:02:04.580]  Значит, что такое?
[01:02:04.580 --> 01:02:07.580]  Я понимаю, что мы забываем теперь про легкие и тяжелые.
[01:02:07.580 --> 01:02:09.580]  Да, мы, да, все, да, мы, да, мы.
[01:02:09.580 --> 01:02:11.580]  Ну да, про легкие и тяжелые, да.
[01:02:11.580 --> 01:02:12.580]  Мы действительно забываем.
[01:02:12.580 --> 01:02:13.580]  Да, совершенно верно.
[01:02:13.580 --> 01:02:15.580]  То есть, все, что нам теперь из предыдущей жизни надо,
[01:02:15.580 --> 01:02:17.580]  это только что сплэй-дерево.
[01:02:17.580 --> 01:02:19.580]  Да, что сплайсов у нас, а не плюску налога.
[01:02:19.580 --> 01:02:21.580]  Ну, для надежности давайте скажем,
[01:02:21.580 --> 01:02:22.580]  что не плюску налога.
[01:02:22.580 --> 01:02:26.580]  Там можно там, там, что-то из скобочек выносить,
[01:02:26.580 --> 01:02:29.580]  но, как говорится, это нам не особо интересно.
[01:02:29.580 --> 01:02:31.580]  Так вот, смотрите.
[01:02:31.580 --> 01:02:33.580]  Как выглядит путь?
[01:02:33.580 --> 01:02:35.580]  Ну, кроме того, что у него там, может быть,
[01:02:35.580 --> 01:02:37.580]  ведет какое-нибудь сплошное ребро куда-нибудь.
[01:02:39.580 --> 01:02:42.580]  Значит, на самом этом пути еще что-то висит.
[01:02:42.580 --> 01:02:44.580]  Вот сейчас, на самом деле, картинка будет...
[01:02:45.580 --> 01:02:46.580]  Вот, обратите внимание,
[01:02:46.580 --> 01:02:49.580]  картинка будет очень сейчас похожа на то, что,
[01:02:49.580 --> 01:02:51.580]  на анализ, который мы делали в Heavy Light.
[01:02:51.580 --> 01:02:53.580]  Оранжевый – это путь от корбы.
[01:02:54.580 --> 01:02:56.580]  Нет, ну, путь от чего-то.
[01:02:56.580 --> 01:02:57.580]  Это сплошной путь.
[01:02:57.580 --> 01:02:58.580]  Это сплошной путь.
[01:02:58.580 --> 01:03:00.580]  Вот, а это пунктирные ребра.
[01:03:01.580 --> 01:03:02.580]  Вот.
[01:03:02.580 --> 01:03:03.580]  Вот.
[01:03:03.580 --> 01:03:04.580]  Я тут рисую под деревья,
[01:03:04.580 --> 01:03:07.580]  потому что мне сейчас не особо они будут принципиально,
[01:03:07.580 --> 01:03:08.580]  что они там,
[01:03:08.580 --> 01:03:11.580]  что они там, как они там, где они там.
[01:03:11.580 --> 01:03:14.580]  Да, главное, чтоб тут они висели на пунктирных ребрах.
[01:03:18.580 --> 01:03:19.580]  Вот так вот.
[01:03:20.580 --> 01:03:21.580]  А впрочем...
[01:03:21.580 --> 01:03:22.580]  Ну вот.
[01:03:22.580 --> 01:03:24.580]  А впрочем, не особо.
[01:03:25.580 --> 01:03:26.580]  Угу.
[01:03:29.580 --> 01:03:30.580]  Ну вот.
[01:03:34.580 --> 01:03:35.580]  QA?
[01:03:35.580 --> 01:03:36.580]  Какой expose?
[01:03:36.580 --> 01:03:37.580]  Где expose?
[01:03:42.580 --> 01:03:43.580]  Вот.
[01:03:43.580 --> 01:03:44.580]  Ну, на самом деле...
[01:03:44.580 --> 01:03:46.580]  Ну, потому что мы не знали, как потенциал.
[01:03:46.580 --> 01:03:48.580]  Скорее всего, да, сейчас выяснится,
[01:03:48.580 --> 01:03:50.580]  что это выигрышная стратегия.
[01:03:50.580 --> 01:03:51.580]  Вот.
[01:03:51.580 --> 01:03:53.580]  Как вы знаете, как в анализе выясняется,
[01:03:53.580 --> 01:03:54.580]  что...
[01:03:54.580 --> 01:03:55.580]  Вот.
[01:03:55.580 --> 01:03:56.580]  Так вот.
[01:03:56.580 --> 01:03:58.580]  Что такое?
[01:03:58.580 --> 01:04:00.580]  Значит, так вот, что я предлагаю?
[01:04:00.580 --> 01:04:02.580]  Ну, то есть, на самом деле,
[01:04:02.580 --> 01:04:05.580]  как это будет в реальной жизни храниться?
[01:04:05.580 --> 01:04:09.580]  Сейчас я нарисую так называемое виртуальное дерево.
[01:04:10.580 --> 01:04:12.580]  Ну, я просто немножко предупрежу,
[01:04:12.580 --> 01:04:14.580]  потому что, как бы, какая тут основная...
[01:04:14.580 --> 01:04:15.580]  Ну, как сказать?
[01:04:15.580 --> 01:04:18.580]  Потому что, да, если говорить о литературе, да,
[01:04:18.580 --> 01:04:21.580]  то, как бы, вообще говоря, конечно, там...
[01:04:21.580 --> 01:04:23.580]  До лог квадрата, конечно, там, по идее,
[01:04:23.580 --> 01:04:25.580]  там литература, там любые вики конспекты.
[01:04:27.580 --> 01:04:29.580]  А вот дальше за логарифом, вот я говорю,
[01:04:29.580 --> 01:04:30.580]  как я уже...
[01:04:30.580 --> 01:04:32.580]  Вот я говорю, у меня вот там много лет была проблема,
[01:04:32.580 --> 01:04:34.580]  я нормального догадательства не видел.
[01:04:34.580 --> 01:04:36.580]  Видел только какой-то кукарек.
[01:04:36.580 --> 01:04:37.580]  Вот.
[01:04:37.580 --> 01:04:38.580]  В чем?
[01:04:38.580 --> 01:04:40.580]  От MIT-шных конспектов и от Станкевича.
[01:04:40.580 --> 01:04:42.580]  Поэтому я говорю, что есть...
[01:04:42.580 --> 01:04:44.580]  Ну, просто, который скорее всего в своей,
[01:04:44.580 --> 01:04:46.580]  там, видимо, короткой лекции на полтора часа
[01:04:46.580 --> 01:04:49.580]  просто действительно опирался именно на MIT-шный конспект.
[01:04:49.580 --> 01:04:51.580]  Ну, мне так кажется, я не обсуждал.
[01:04:51.580 --> 01:04:52.580]  Вот.
[01:04:52.580 --> 01:04:54.580]  То есть более подробно, откуда там берется логарифом,
[01:04:54.580 --> 01:04:55.580]  собственно, как-то никто не обсуждал.
[01:04:55.580 --> 01:04:57.580]  Просто там же потенциалы схлопываются.
[01:04:57.580 --> 01:04:59.580]  Ну, как бы, вот понятно.
[01:04:59.580 --> 01:05:01.580]  Но более подробно вот никто не давал.
[01:05:01.580 --> 01:05:03.580]  Вот я тоже не знал, откуда братьюр.
[01:05:03.580 --> 01:05:05.580]  И потом выяснилось, что надо было просто
[01:05:05.580 --> 01:05:07.580]  открыть статью по сплей-дереву.
[01:05:07.580 --> 01:05:09.580]  Ну, потому что, нет, просто я говорю,
[01:05:09.580 --> 01:05:11.580]  что на поверхку просто...
[01:05:11.580 --> 01:05:12.580]  Изначально...
[01:05:12.580 --> 01:05:13.580]  Да.
[01:05:13.580 --> 01:05:15.580]  Потому что в статье по линкату было там ссылка
[01:05:15.580 --> 01:05:17.580]  просто на другое дерево с какими-то
[01:05:17.580 --> 01:05:18.580]  подробительными свойствами.
[01:05:18.580 --> 01:05:20.580]  А потом они избрали сплей-дереву,
[01:05:20.580 --> 01:05:22.580]  который тоже это кушает.
[01:05:22.580 --> 01:05:24.580]  И поэтому основная статья,
[01:05:24.580 --> 01:05:26.580]  кстати, которая, как ни странно,
[01:05:26.580 --> 01:05:28.580]  даже без скай-хабов на самом деле скачивается,
[01:05:28.580 --> 01:05:30.580]  просто открывайте Википедию по...
[01:05:30.580 --> 01:05:34.580]  По какой-нибудь линкату и так далее.
[01:05:34.580 --> 01:05:37.580]  И просто смотрите ссылки, ну, английскую, конечно.
[01:05:37.580 --> 01:05:40.580]  Открывайте ссылку, и там просто PDF-ка открывается.
[01:05:40.580 --> 01:05:42.580]  Вот.
[01:05:42.580 --> 01:05:43.580]  Очень удобно.
[01:05:43.580 --> 01:05:45.580]  Сам удивился, потому что куча статей
[01:05:45.580 --> 01:05:47.580]  приходится так открывать.
[01:05:47.580 --> 01:05:49.580]  Вот. Так вот, смотрите.
[01:05:49.580 --> 01:05:51.580]  Значит, так вот, что я...
[01:05:51.580 --> 01:05:53.580]  Ну, то есть, так вот, там вы встретите
[01:05:53.580 --> 01:05:55.580]  вот такую забребительную картинку.
[01:05:55.580 --> 01:05:57.580]  То есть, в реальной жизни,
[01:05:57.580 --> 01:05:59.580]  то есть, вы вот это вот рыжее безобразие...
[01:05:59.580 --> 01:06:01.580]  Реально.
[01:06:01.580 --> 01:06:03.580]  На самом деле будет выглядеть...
[01:06:03.580 --> 01:06:05.580]  Ну, сплей-дерево...
[01:06:05.580 --> 01:06:07.580]  Я вот нарисую условно вот так.
[01:06:07.580 --> 01:06:09.580]  Так, вот сейчас...
[01:06:09.580 --> 01:06:11.580]  Это я сплей-дерево нарисовал.
[01:06:11.580 --> 01:06:14.580]  Ну, потому что в реальности вы вместо вот этого пути
[01:06:14.580 --> 01:06:16.580]  ухранить не будете в таком виде.
[01:06:16.580 --> 01:06:18.580]  Вы будете ухранить в виде сплей-дерево.
[01:06:18.580 --> 01:06:20.580]  И на каждом...
[01:06:20.580 --> 01:06:22.580]  И на каждой из этих вершин...
[01:06:22.580 --> 01:06:24.580]  На каждую из этих вершин
[01:06:24.580 --> 01:06:26.580]  ссылаются вот эти вот там поддеревья
[01:06:26.580 --> 01:06:28.580]  в лице каких-то там своих путей, правда?
[01:06:28.580 --> 01:06:31.580]  И сама нас куда-то там ссылается.
[01:06:31.580 --> 01:06:33.580]  Вот.
[01:06:33.580 --> 01:06:35.580]  Вот.
[01:06:35.580 --> 01:06:37.580]  То есть, вот так вот, как-то вот так вот.
[01:06:37.580 --> 01:06:39.580]  То есть, я тут даже вот могу нарисовать
[01:06:39.580 --> 01:06:41.580]  вот еще что тут.
[01:06:41.580 --> 01:06:43.580]  Альфа-1, альфа-2, там какой-нибудь вот это вот.
[01:06:43.580 --> 01:06:45.580]  Ну, в общем, ясно.
[01:06:45.580 --> 01:06:47.580]  Ну, принцип, да, принцип вы поняли, да.
[01:06:47.580 --> 01:06:49.580]  Кислор называешь и город.
[01:06:49.580 --> 01:06:51.580]  Так.
[01:06:51.580 --> 01:06:53.580]  Что там прям?
[01:06:53.580 --> 01:06:55.580]  Заказать там залог?
[01:06:55.580 --> 01:06:57.580]  Да.
[01:06:57.580 --> 01:06:59.580]  Ага.
[01:06:59.580 --> 01:07:01.580]  Ну, если они адекватно ссылаются, то окей.
[01:07:01.580 --> 01:07:03.580]  Значит, у меня устаревшие сведения.
[01:07:03.580 --> 01:07:05.580]  Коротко написано.
[01:07:05.580 --> 01:07:07.580]  У всех-всех-всех подробностей.
[01:07:07.580 --> 01:07:09.580]  Нет, ну я...
[01:07:09.580 --> 01:07:11.580]  У всех-всех-всех подробностей.
[01:07:11.580 --> 01:07:13.580]  Ну, как сказать, да.
[01:07:13.580 --> 01:07:15.580]  Никому кроме экзенатора.
[01:07:15.580 --> 01:07:17.580]  Ну, да.
[01:07:17.580 --> 01:07:19.580]  Ну, как это.
[01:07:19.580 --> 01:07:21.580]  Ну, да.
[01:07:21.580 --> 01:07:23.580]  Ну, да.
[01:07:23.580 --> 01:07:25.580]  Ну, да.
[01:07:25.580 --> 01:07:27.580]  Ну, да.
[01:07:27.580 --> 01:07:29.580]  Ну, да.
[01:07:29.580 --> 01:07:31.580]  Ну, слава богу, да, у нас тут
[01:07:31.580 --> 01:07:33.580]  теорема есть, так что
[01:07:33.580 --> 01:07:35.580]  можем пользоваться.
[01:07:35.580 --> 01:07:37.580]  Но главное, как всегда, тут главное
[01:07:37.580 --> 01:07:39.580]  грамотно определить потенциал. Вот мы сейчас
[01:07:39.580 --> 01:07:41.580]  определили потенциал, там количество сплошных
[01:07:41.580 --> 01:07:43.580]  легких ребр и как бы все сразу заиграло
[01:07:43.580 --> 01:07:45.580]  мгновенно. То есть, в общем-то,
[01:07:45.580 --> 01:07:47.580]  сопротивление закончилось, не успев начаться.
[01:07:47.580 --> 01:07:49.580]  А теперь, значит,
[01:07:49.580 --> 01:07:51.580]  потенциал мы введем
[01:07:51.580 --> 01:07:53.580]  так. Значит,
[01:07:53.580 --> 01:07:55.580]  w от каждой вершины
[01:07:55.580 --> 01:07:57.580]  будет, как и в
[01:07:57.580 --> 01:07:59.580]  heavy light,
[01:07:59.580 --> 01:08:01.580]  будет 1 плюс
[01:08:03.580 --> 01:08:05.580]  1 плюс то, что висит
[01:08:05.580 --> 01:08:07.580]  на пунктирных ребрах.
[01:08:09.580 --> 01:08:11.580]  Ну, только зачем плюс?
[01:08:11.580 --> 01:08:13.580]  Мы же просто размеры под дерево.
[01:08:13.580 --> 01:08:15.580]  Не-не-не-не.
[01:08:15.580 --> 01:08:17.580]  Когда мы будем, чтобы определить w,
[01:08:17.580 --> 01:08:19.580]  нам надо все-таки их выкинуть, чтобы потом
[01:08:19.580 --> 01:08:21.580]  суммировать.
[01:08:21.580 --> 01:08:23.580]  Нет.
[01:08:25.580 --> 01:08:27.580]  Не, мы в heavy light'е, помните, определяли
[01:08:27.580 --> 01:08:29.580]  вот это весами, поэтому там
[01:08:29.580 --> 01:08:31.580]  баланс какой-то определяли и
[01:08:31.580 --> 01:08:33.580]  соответственно.
[01:08:35.580 --> 01:08:37.580]  Нет, ну,
[01:08:37.580 --> 01:08:39.580]  вот.
[01:08:39.580 --> 01:08:41.580]  Что?
[01:08:41.580 --> 01:08:43.580]  w от u – это вот количество вершин
[01:08:43.580 --> 01:08:45.580]  в таком вот под дереве, если выделить эту вершину
[01:08:45.580 --> 01:08:47.580]  и все, что к ней подключено
[01:08:47.580 --> 01:08:49.580]  к пунктирным ребрамам. Да, именно
[01:08:49.580 --> 01:08:51.580]  под пунктирным, да. На яхтной картинке
[01:08:51.580 --> 01:08:53.580]  w от какого-то u – это просто обвести
[01:08:53.580 --> 01:08:55.580]  пачку деревьев. По сути, да.
[01:08:55.580 --> 01:08:57.580]  Так, еще
[01:08:57.580 --> 01:08:59.580]  секундочку. Значит, w от v – это
[01:08:59.580 --> 01:09:01.580]  сама вершинка плюс
[01:09:01.580 --> 01:09:03.580]  все под деревья, которые висят к ней
[01:09:03.580 --> 01:09:05.580]  на пунктирных ребрах. Да, их размеры. Совершенно верно?
[01:09:05.580 --> 01:09:07.580]  Хорошо. Вот.
[01:09:07.580 --> 01:09:09.580]  Ну, почему
[01:09:09.580 --> 01:09:11.580]  именно так, да? Потому что, да, очень хочется
[01:09:11.580 --> 01:09:13.580]  просто сказать, что давайте скажем, что
[01:09:13.580 --> 01:09:15.580]  что-что висит на самой вершине.
[01:09:15.580 --> 01:09:17.580]  Но это, конечно,
[01:09:17.580 --> 01:09:19.580]  нет,
[01:09:19.580 --> 01:09:21.580]  это просто s. Помните, мы вводили s,
[01:09:21.580 --> 01:09:23.580]  когда мы для каждой вершины суммировали
[01:09:23.580 --> 01:09:25.580]  все по ее режиму под дерево.
[01:09:27.580 --> 01:09:29.580]  То есть, по сути, да, это мы тут
[01:09:29.580 --> 01:09:31.580]  вот, то есть, да, по сути
[01:09:31.580 --> 01:09:33.580]  действительно, то есть, s от v – это
[01:09:33.580 --> 01:09:35.580]  сколько на ней висит, включая
[01:09:35.580 --> 01:09:37.580]  как ребра
[01:09:37.580 --> 01:09:39.580]  в сплее, так и все остальное.
[01:09:39.580 --> 01:09:41.580]  То есть, там в статье
[01:09:41.580 --> 01:09:43.580]  вообще там еще более зубдробительно
[01:09:43.580 --> 01:09:45.580]  это все написано.
[01:09:45.580 --> 01:09:47.580]  То есть, говорят, что у них есть там какие-то ребра
[01:09:47.580 --> 01:09:49.580]  и эти ребра бывают там
[01:09:49.580 --> 01:09:51.580]  в левое-правое и сколько-то
[01:09:51.580 --> 01:09:53.580]  средних там, в общем.
[01:09:53.580 --> 01:09:55.580]  Ну, в общем, ну, как сказать,
[01:09:55.580 --> 01:09:57.580]  слейтериториян, может быть, это в чуть-чуть
[01:09:57.580 --> 01:09:59.580]  другой терминологии мыслили.
[01:09:59.580 --> 01:10:01.580]  Ну, вот.
[01:10:01.580 --> 01:10:03.580]  Но, с другой стороны, понимаете, у них такая задача,
[01:10:03.580 --> 01:10:05.580]  они были первым проходцами, поэтому у них, может быть,
[01:10:05.580 --> 01:10:07.580]  еще и задача была, с одной стороны,
[01:10:07.580 --> 01:10:09.580]  писать более формально, а с другой стороны, сразу еще
[01:10:09.580 --> 01:10:11.580]  изобить за собой все там различные подходы.
[01:10:11.580 --> 01:10:13.580]  Вот. Поэтому
[01:10:13.580 --> 01:10:15.580]  они могли там мыслить чуть-чуть
[01:10:15.580 --> 01:10:17.580]  по-другому. Ну, и тем более, да, они, может,
[01:10:17.580 --> 01:10:19.580]  не такие там олимпиадные, там опытные олимпиадные
[01:10:19.580 --> 01:10:21.580]  кодеры, как мы с вами. Ну, там, скажем,
[01:10:21.580 --> 01:10:23.580]  как известно, у Дэнила
[01:10:23.580 --> 01:10:25.580]  слейтера, например, помси не рейтинг на Кодфорсисе,
[01:10:25.580 --> 01:10:27.580]  например.
[01:10:27.580 --> 01:10:29.580]  Да.
[01:10:29.580 --> 01:10:31.580]  Нет, он не тренируется, если быть точнее.
[01:10:31.580 --> 01:10:33.580]  Да, совершенно верно.
[01:10:33.580 --> 01:10:35.580]  Вот. То есть понятно,
[01:10:35.580 --> 01:10:37.580]  что изобретать крутые алгоритмы и действительно
[01:10:37.580 --> 01:10:39.580]  уметь их там быстро загонять
[01:10:39.580 --> 01:10:41.580]  в лавшу в тестер, это немножко разные скилы.
[01:10:41.580 --> 01:10:43.580]  Вот.
[01:10:43.580 --> 01:10:45.580]  Да, обычно второй выигрывает
[01:10:45.580 --> 01:10:47.580]  олимпиады. Ну, да.
[01:10:47.580 --> 01:10:49.580]  Вот. Нет.
[01:10:49.580 --> 01:10:51.580]  Не совсем, потому что
[01:10:51.580 --> 01:10:53.580]  там проблема такая, что там еще и быстро
[01:10:53.580 --> 01:10:55.580]  надо придумывать.
[01:10:55.580 --> 01:10:57.580]  То есть так он ставит большие задачи,
[01:10:57.580 --> 01:10:59.580]  то есть они там ставят большие задачи и сидят там все
[01:10:59.580 --> 01:11:01.580]  вместе, думают некоторое время, собственно,
[01:11:01.580 --> 01:11:03.580]  там скидывая общими усилиями.
[01:11:03.580 --> 01:11:05.580]  А тут как бы дано пять часов, у вас там максимум
[01:11:05.580 --> 01:11:07.580]  трое, если команда олимпиады и у вас двенадцать задач,
[01:11:07.580 --> 01:11:09.580]  вам надо там как можно больше этой лапши загнать.
[01:11:09.580 --> 01:11:11.580]  Я, наоборот, честно говорю,
[01:11:11.580 --> 01:11:13.580]  я не знаю, зачем это. Нас за скорость
[01:11:13.580 --> 01:11:15.580]  написания хода, потому что
[01:11:15.580 --> 01:11:17.580]  сама задача свойствована в том, что ее надо придумать.
[01:11:17.580 --> 01:11:19.580]  И ты же не будешь тратить четыре часа,
[01:11:19.580 --> 01:11:21.580]  как это?
[01:11:21.580 --> 01:11:23.580]  Нет.
[01:11:23.580 --> 01:11:25.580]  Нет, ну я так скажу,
[01:11:25.580 --> 01:11:27.580]  просто в школе, когда у тебя три-четыре задачи,
[01:11:27.580 --> 01:11:29.580]  ты можешь над каждой задачей еще чуть-чуть там не особо
[01:11:29.580 --> 01:11:31.580]  торопясь ее писать. И тем более, что там
[01:11:31.580 --> 01:11:33.580]  сложные решения. Но в ICPC-контесте
[01:11:33.580 --> 01:11:35.580]  ты должен найти легкие задачи и их написать очень быстро,
[01:11:35.580 --> 01:11:37.580]  потому что, во-первых, скорость важна, во-вторых,
[01:11:37.580 --> 01:11:39.580]  чем быстрее ты решишь, тем больше у тебя времени останется
[01:11:39.580 --> 01:11:41.580]  на сложной задачи. То есть
[01:11:41.580 --> 01:11:43.580]  это просто
[01:11:43.580 --> 01:11:45.580]  немного, ну просто вот
[01:11:45.580 --> 01:11:47.580]  чуть разные скилы. Или
[01:11:47.580 --> 01:11:49.580]  типичный пример, как это
[01:11:49.580 --> 01:11:51.580]  подход чистого математика, вот я не знаю,
[01:11:51.580 --> 01:11:53.580]  или как я играл в минус сто, вот это я рассказывал.
[01:11:53.580 --> 01:11:55.580]  Потому что писал я как-то Codeforces,
[01:11:55.580 --> 01:11:57.580]  вроде все хорошо, но в четвертой задаче явно была
[01:11:57.580 --> 01:11:59.580]  какая-то задача на жаге. Вот я
[01:11:59.580 --> 01:12:01.580]  вроде придумал жагник и час его пытался доказать.
[01:12:01.580 --> 01:12:03.580]  Пока я его пытался доказать, собственно, тысяча человек
[01:12:03.580 --> 01:12:05.580]  его уже сдала.
[01:12:05.580 --> 01:12:07.580]  Вот я сам, как математик,
[01:12:07.580 --> 01:12:09.580]  это очень не люблю, но
[01:12:09.580 --> 01:12:11.580]  конкретно в данном случае
[01:12:11.580 --> 01:12:13.580]  вот действительно это оказалось
[01:12:13.580 --> 01:12:15.580]  в стратегии не сработало. Да.
[01:12:15.580 --> 01:12:17.580]  В других случаях это бывает, что та же
[01:12:17.580 --> 01:12:19.580]  тысяча напишет этот жагник, получит там
[01:12:19.580 --> 01:12:21.580]  в при-тестах или в худшем случае в анасис-тестах.
[01:12:21.580 --> 01:12:23.580]  Или там
[01:12:23.580 --> 01:12:25.580]  умные люди их потом похакают.
[01:12:25.580 --> 01:12:27.580]  Да.
[01:12:27.580 --> 01:12:29.580]  Вот.
[01:12:29.580 --> 01:12:31.580]  Да. Чего?
[01:12:31.580 --> 01:12:33.580]  Да.
[01:12:33.580 --> 01:12:35.580]  Вернемся к делу, да. Значит
[01:12:35.580 --> 01:12:37.580]  да.
[01:12:37.580 --> 01:12:39.580]  То есть более того, на самом деле
[01:12:39.580 --> 01:12:41.580]  тут, на самом деле, если так
[01:12:41.580 --> 01:12:43.580]  это все разворачивать, то на самом деле
[01:12:43.580 --> 01:12:45.580]  там будет вообще получаться что-то типа,
[01:12:45.580 --> 01:12:47.580]  что вот у нас тут какие-то вот рыжие дерева,
[01:12:47.580 --> 01:12:49.580]  тут еще есть какие-то рыжие деревья.
[01:12:49.580 --> 01:12:51.580]  Да, они везде.
[01:12:51.580 --> 01:12:53.580]  Да, они везде.
[01:12:53.580 --> 01:12:55.580]  Это
[01:12:55.580 --> 01:12:57.580]  символизирует, что я вот
[01:12:57.580 --> 01:12:59.580]  рисую, ну просто каждый сплошной
[01:12:59.580 --> 01:13:01.580]  путь я рисую, он у меня будет
[01:13:01.580 --> 01:13:03.580]  как сплей дерева. Вот я это сплей дерева
[01:13:03.580 --> 01:13:05.580]  сейчас и рисую.
[01:13:05.580 --> 01:13:07.580]  Вот.
[01:13:07.580 --> 01:13:09.580]  И у них, условно, там какие-то корни
[01:13:09.580 --> 01:13:11.580]  ссылаются вот куда-нибудь.
[01:13:11.580 --> 01:13:13.580]  На какие-то вот
[01:13:13.580 --> 01:13:15.580]  как-то вот так, вот как-то
[01:13:15.580 --> 01:13:17.580]  на самом деле глобально это вот так вот
[01:13:17.580 --> 01:13:19.580]  выглядело.
[01:13:19.580 --> 01:13:21.580]  Вот.
[01:13:23.580 --> 01:13:25.580]  А теперь смотрите.
[01:13:25.580 --> 01:13:27.580]  Значит немножко магии.
[01:13:29.580 --> 01:13:31.580]  Так.
[01:13:31.580 --> 01:13:33.580]  Чего?
[01:13:33.580 --> 01:13:35.580]  W мы ввели
[01:13:35.580 --> 01:13:37.580]  как
[01:13:37.580 --> 01:13:39.580]  один для вершины,
[01:13:39.580 --> 01:13:41.580]  как один плюс суммарный
[01:13:41.580 --> 01:13:43.580]  размер под деревья, которые висят
[01:13:43.580 --> 01:13:45.580]  на ней на пунктирных ребрах.
[01:13:47.580 --> 01:13:49.580]  Вот ровно так мы ввели W.
[01:13:51.580 --> 01:13:53.580]  Вот.
[01:13:57.580 --> 01:13:59.580]  Ну вот.
[01:13:59.580 --> 01:14:01.580]  Значит смотрите,
[01:14:01.580 --> 01:14:03.580]  что происходит теперь.
[01:14:05.580 --> 01:14:07.580]  Значит теперь происходит следующее.
[01:14:07.580 --> 01:14:09.580]  Значит теперь давайте
[01:14:09.580 --> 01:14:11.580]  думать, как у нас
[01:14:11.580 --> 01:14:13.580]  будет вообще
[01:14:13.580 --> 01:14:15.580]  выглядеть
[01:14:15.580 --> 01:14:17.580]  так сказать
[01:14:17.580 --> 01:14:19.580]  сплайс.
[01:14:19.580 --> 01:14:21.580]  Да. Боялся говорится.
[01:14:21.580 --> 01:14:23.580]  Значит смотрите.
[01:14:23.580 --> 01:14:25.580]  Как он будет выглядеть?
[01:14:25.580 --> 01:14:27.580]  Выглядеть он будет следующим образом.
[01:14:27.580 --> 01:14:29.580]  Здесь он, помните там
[01:14:29.580 --> 01:14:31.580]  как вообще выглядит
[01:14:31.580 --> 01:14:33.580]  мэкш, там как выглядит мэкш
[01:14:33.580 --> 01:14:35.580]  двух деревьев.
[01:14:35.580 --> 01:14:37.580]  Сплей деревьев.
[01:14:37.580 --> 01:14:39.580]  Сплой
[01:14:39.580 --> 01:14:41.580]  самой левой вершины
[01:14:41.580 --> 01:14:43.580]  и подвесить
[01:14:43.580 --> 01:14:45.580]  ее как левой сына,
[01:14:45.580 --> 01:14:47.580]  левой дерева. Ну, например.
[01:14:47.580 --> 01:14:49.580]  Или можно то же самое наоборот.
[01:14:49.580 --> 01:14:51.580]  Справа подвесить.
[01:14:51.580 --> 01:14:53.580]  Но в данном случае, конечно, нам будет
[01:14:53.580 --> 01:14:55.580]  удобно подвесить именно слева.
[01:14:55.580 --> 01:14:57.580]  Хотя у нас тут, конечно, есть определенная
[01:14:57.580 --> 01:14:59.580]  хитрость.
[01:14:59.580 --> 01:15:01.580]  То есть прежде чем помэкшить, придется посплитить.
[01:15:01.580 --> 01:15:03.580]  Но у нас логика будет такая.
[01:15:03.580 --> 01:15:05.580]  Жил-пыл-путь.
[01:15:05.580 --> 01:15:07.580]  Жил-пыл-путь.
[01:15:07.580 --> 01:15:09.580]  Из него шло
[01:15:09.580 --> 01:15:11.580]  какое-то ребро.
[01:15:11.580 --> 01:15:13.580]  И оно
[01:15:13.580 --> 01:15:15.580]  ворвалось.
[01:15:15.580 --> 01:15:17.580]  Ну вот.
[01:15:17.580 --> 01:15:19.580]  И оно
[01:15:19.580 --> 01:15:21.580]  ворвалось куда-то вот посередине
[01:15:21.580 --> 01:15:23.580]  вот этого вот дерева.
[01:15:23.580 --> 01:15:25.580]  Вот здесь, заметьте, этот путь,
[01:15:25.580 --> 01:15:27.580]  мне сейчас он не важен, какая у него там
[01:15:27.580 --> 01:15:29.580]  структурка.
[01:15:29.580 --> 01:15:31.580]  Так вот.
[01:15:31.580 --> 01:15:33.580]  Как мы тогда
[01:15:33.580 --> 01:15:35.580]  будем действовать?
[01:15:35.580 --> 01:15:37.580]  Действовать будем так,
[01:15:37.580 --> 01:15:39.580]  что вот в этом под деревом,
[01:15:39.580 --> 01:15:41.580]  вот эту вершину мы загоним в корень
[01:15:41.580 --> 01:15:43.580]  за операцию сплей.
[01:15:43.580 --> 01:15:45.580]  Так, что мы делаем?
[01:15:45.580 --> 01:15:47.580]  Ну, мы делаем
[01:15:47.580 --> 01:15:49.580]  splice.
[01:15:49.580 --> 01:15:51.580]  То есть мы делаем splice.
[01:15:51.580 --> 01:15:53.580]  Ну, давайте так. Глобально это выглядит так.
[01:15:53.580 --> 01:15:55.580]  Жил-пыл-путь.
[01:15:55.580 --> 01:15:57.580]  Жил-пыл-путь.
[01:15:57.580 --> 01:15:59.580]  Жило было ребро.
[01:15:59.580 --> 01:16:01.580]  Я хочу, чтобы
[01:16:01.580 --> 01:16:03.580]  вот тут стало рыжим,
[01:16:03.580 --> 01:16:05.580]  а вот тут стало черным пунктируем.
[01:16:05.580 --> 01:16:07.580]  То есть я хочу...
[01:16:09.580 --> 01:16:11.580]  Если корень справа.
[01:16:11.580 --> 01:16:13.580]  Корень справа. Да.
[01:16:13.580 --> 01:16:15.580]  И дерево вверх. Отлично.
[01:16:15.580 --> 01:16:17.580]  Ну хорошо, хорошо.
[01:16:17.580 --> 01:16:19.580]  Пожалуйста.
[01:16:19.580 --> 01:16:21.580]  Не за что.
[01:16:21.580 --> 01:16:23.580]  Вот. Вот, что хотелось бы.
[01:16:23.580 --> 01:16:25.580]  Как это будет выглядеть?
[01:16:25.580 --> 01:16:27.580]  Вот давайте этот дерево с точки зрения деревьев.
[01:16:27.580 --> 01:16:29.580]  Значит,
[01:16:29.580 --> 01:16:31.580]  было-было тут вот это веселое дерево.
[01:16:31.580 --> 01:16:33.580]  Вот какое-нибудь
[01:16:33.580 --> 01:16:35.580]  смешное.
[01:16:35.580 --> 01:16:37.580]  Значит,
[01:16:37.580 --> 01:16:39.580]  как я его хочу туда подмешивать?
[01:16:43.580 --> 01:16:45.580]  Это пунктирное ребро.
[01:16:59.580 --> 01:17:01.580]  Ну связь очень простая.
[01:17:01.580 --> 01:17:03.580]  Понятно, что вот это пунктирное ребро
[01:17:03.580 --> 01:17:05.580]  подразумевается, что это ребро
[01:17:05.580 --> 01:17:07.580]  ведет из самой верхней
[01:17:07.580 --> 01:17:09.580]  вершины этого пути.
[01:17:09.580 --> 01:17:11.580]  То есть реально типа из вот этой.
[01:17:11.580 --> 01:17:13.580]  Но я его рисую здесь,
[01:17:13.580 --> 01:17:15.580]  потому что обычно это ребро все-таки в корне хранят.
[01:17:15.580 --> 01:17:17.580]  То есть да,
[01:17:17.580 --> 01:17:19.580]  правильнее может быть даже вот так.
[01:17:19.580 --> 01:17:21.580]  То есть воображаем себе...
[01:17:21.580 --> 01:17:23.580]  Это связь
[01:17:23.580 --> 01:17:25.580]  между двумя путями
[01:17:25.580 --> 01:17:27.580]  на самом деле проходит не то,
[01:17:27.580 --> 01:17:29.580]  чтобы...
[01:17:29.580 --> 01:17:31.580]  Ну да, то есть на самом деле она ведет
[01:17:31.580 --> 01:17:33.580]  скорее из этой вершины.
[01:17:33.580 --> 01:17:35.580]  Но вот здесь важно,
[01:17:35.580 --> 01:17:37.580]  что именно в эту.
[01:17:37.580 --> 01:17:39.580]  Тогда смотрите.
[01:17:39.580 --> 01:17:41.580]  Теперь, значит,
[01:17:41.580 --> 01:17:43.580]  делаем сплей у вот этой вершины.
[01:17:43.580 --> 01:17:45.580]  Делаем сплей.
[01:17:45.580 --> 01:17:47.580]  У этой вершины.
[01:17:47.580 --> 01:17:49.580]  Так, значит,
[01:17:49.580 --> 01:17:51.580]  так ликвидируем рояльчик.
[01:17:53.580 --> 01:17:55.580]  Ну вот это вот, знаете,
[01:17:55.580 --> 01:17:57.580]  типические фразы конферанса там.
[01:17:57.580 --> 01:17:59.580]  Сообразите мне рояльчик, пожалуйста.
[01:17:59.580 --> 01:18:01.580]  Там помощь вытаскивает рояльчик.
[01:18:01.580 --> 01:18:03.580]  Да, не откажите в любезности. При собой купите стульчик.
[01:18:05.580 --> 01:18:07.580]  Ладно.
[01:18:07.580 --> 01:18:09.580]  Нет, потом после номера там ликвидируйте рояльчик.
[01:18:09.580 --> 01:18:11.580]  А потом восстановите
[01:18:11.580 --> 01:18:13.580]  мне рояльчик.
[01:18:13.580 --> 01:18:15.580]  Ну вот, и в конце, конечно,
[01:18:15.580 --> 01:18:17.580]  когда там рояль совсем разошелся,
[01:18:17.580 --> 01:18:19.580]  уже там, ой, все, уберите этот сумасшедший инструмент.
[01:18:19.580 --> 01:18:21.580]  Что он знает, что.
[01:18:21.580 --> 01:18:23.580]  Ну в общем, необыкновенный концерт.
[01:18:23.580 --> 01:18:25.580]  Очень рекомендую, конечно.
[01:18:25.580 --> 01:18:27.580]  Вот.
[01:18:27.580 --> 01:18:29.580]  Так вот.
[01:18:29.580 --> 01:18:31.580]  Так вот, значит, смотрите.
[01:18:31.580 --> 01:18:33.580]  Что с этим происходит?
[01:18:33.580 --> 01:18:35.580]  Значит, теперь мы, значит, эту вершину,
[01:18:35.580 --> 01:18:37.580]  ну давайте вот назовем ее, допустим,
[01:18:37.580 --> 01:18:39.580]  у.
[01:18:39.580 --> 01:18:41.580]  Тогда, значит, мы тут делаем сплей.
[01:18:43.580 --> 01:18:45.580]  Значит,
[01:18:45.580 --> 01:18:47.580]  так сказать, сплей от у.
[01:18:47.580 --> 01:18:49.580]  Ну в данном случае это сплей от у превращается в зигзаг шаг.
[01:18:49.580 --> 01:18:51.580]  Но это конкретно не сильно принципиально.
[01:18:53.580 --> 01:18:55.580]  Значит, да, сплей от у работает,
[01:18:55.580 --> 01:18:57.580]  ну вот.
[01:18:57.580 --> 01:18:59.580]  То есть, если тут у, а тут root,
[01:18:59.580 --> 01:19:01.580]  то как бы это у нас работает за время,
[01:19:01.580 --> 01:19:03.580]  как мы помним,
[01:19:03.580 --> 01:19:05.580]  по камере, ну вот, учетно.
[01:19:05.580 --> 01:19:07.580]  Значит, учетно 1 плюс
[01:19:07.580 --> 01:19:09.580]  логарифом
[01:19:09.580 --> 01:19:11.580]  двоичный s от root.
[01:19:13.580 --> 01:19:15.580]  Минус логарифом двоичный,
[01:19:15.580 --> 01:19:17.580]  но я пока напишу.
[01:19:17.580 --> 01:19:19.580]  Вот, s от u я уже начал.
[01:19:19.580 --> 01:19:21.580]  Так вот, и превращается это в следующее.
[01:19:23.580 --> 01:19:25.580]  Превращается это в следующее.
[01:19:25.580 --> 01:19:27.580]  Значит
[01:19:27.580 --> 01:19:29.580]  то, что
[01:19:29.580 --> 01:19:31.580]  что у нас появляется у нас тут в корне,
[01:19:31.580 --> 01:19:33.580]  то вершина у.
[01:19:33.580 --> 01:19:35.580]  У нее висит левое под дерево.
[01:19:35.580 --> 01:19:37.580]  У нее висит правое под дерево.
[01:19:37.580 --> 01:19:39.580]  Так сказать. Тут висит какао...
[01:19:39.580 --> 01:19:41.580]  аа, ну тут.
[01:19:41.580 --> 01:19:43.580]  Да. Висит левое под дерево.
[01:19:43.580 --> 01:19:45.580]  Есть правое по дерево.
[01:19:45.580 --> 01:19:47.580]  И теперь у нее...
[01:19:47.580 --> 01:19:49.580]  Ну вот. И тут есть, наши,
[01:19:49.580 --> 01:19:51.580]  кстати, пока так не поменявшиеся
[01:19:51.580 --> 01:20:02.940]  есть да которая мы вот типа подвешиваем вот сюда и более того очень хочется значит их смершить
[01:20:02.940 --> 01:20:16.580]  как же мы это будем делать совершенно верно да совершенно верно значит происходит тогда в
[01:20:16.580 --> 01:20:22.340]  итоге следующие давайте я вот так и нарисую что происходит теперь значит жила была все еще
[01:20:22.340 --> 01:20:32.180]  вершина у это вот под дерево альфа бета я так нарисую вот значит ну конечно значит бета пока
[01:20:32.180 --> 01:20:39.980]  остается жива тут как было так было тут ничего не меняется значит здесь теперь вот это вот все
[01:20:39.980 --> 01:20:55.300]  безобразие гамма его назовем вот так вот нарисуем остается здесь так именно да но сплей мы сделали
[01:20:55.300 --> 01:21:10.340]  вот там видите мы тут не наоборот сейчас сейчас будет принципиально и теперь и он еще у нас
[01:21:10.340 --> 01:21:17.060]  остается под дерево альфа которая оказалась подвержена splice и теперь оно прицеплено все еще
[01:21:17.060 --> 01:21:25.740]  но теперь вот сюда вот ну да здесь конечно но вот не совсем приятно потому что казалось
[01:21:25.740 --> 01:21:30.700]  с одной стороны получается альфа все-таки теперь теперь не входила в поднот но хотя на самом деле
[01:21:30.700 --> 01:21:36.980]  теперь если внимательно посмотреть то с точки зрения с на самом деле конкретно вот в этом
[01:21:36.980 --> 01:21:48.780]  месте потенциал не поменялся ни у кого да тут вас может вести в заблуждение что w теперь у вершины
[01:21:48.780 --> 01:21:54.940]  у конечно вот при вот этой операции конкретной операция значит вес w конечно мог сильно поменяться
[01:21:54.940 --> 01:22:06.820]  но вес и да вес w поменялся но с не поменялся вообще вообще ни у какой вершины конкретно
[01:22:06.820 --> 01:22:14.860]  splice этот потенциал не поменял а потому что потенциал каждой вершины который s вот этот вот у
[01:22:14.860 --> 01:22:22.980]  которого мы логарифм берем да это по сути сколько вершин висит на ней как на пунктирных так и на так
[01:22:22.980 --> 01:22:27.300]  сказать рыжих ребрах не могу их называть совсем сплошными потому что это не совсем сплошные ребра
[01:22:27.900 --> 01:22:41.220]  да так и на ребрах сплэй дерево да да да именно но помните ведь мы сказали что то есть как бы
[01:22:41.220 --> 01:22:45.460]  мы говорим чтобы вот у сплэй дерево рассматриваем сплэй дерево рассматриваем что у каждой вершины есть
[01:22:45.460 --> 01:22:53.060]  вес а s от вершины это сумма весов в ее под деревьем но учитывая что такое для нас вес получается что
[01:22:53.060 --> 01:23:00.580]  для нас s это сколько вершин висит на у во всех смыслах как в смысле сплэй дерево так и в смысле
[01:23:00.580 --> 01:23:20.260]  пунктирно вот ну да просто скоро да то есть если мы идем вниз как по пунктирным ребрам так и по
[01:23:20.260 --> 01:23:32.300]  в меняется таки так w меняется s нет вот так вот конкретно в этом штуке конечно же вот в
[01:23:32.300 --> 01:23:45.660]  этом месте конечно с может и поменяться безусловно вот парадокс том что оно перераспределяется
[01:23:45.660 --> 01:23:54.820]  тут конечно т.е. w но с от остается неизменным потому что у на у здесь но что это то смотреть
[01:23:54.820 --> 01:24:00.940]  что такое это сколько это вот вес вот этого всего плюс там вес вот этой вершины плюс вес вот этой
[01:24:00.940 --> 01:24:09.700]  вершины плюс да да вот а что такое здесь тоже сколько висит вот тут вот везде в альфе да сколько
[01:24:09.700 --> 01:24:13.820]  висит вот тут сколько висит вот тут потому что нам в эске по барабану кто какой из этих ребер
[01:24:13.820 --> 01:24:23.740]  рыжий а какой еще так что как бы да так что условно как бы и от того что тут это шахтер
[01:24:23.740 --> 01:24:31.100]  поменял собственно там это домашнюю форму на гостевую ничего не поменялось вот вот
[01:24:31.100 --> 01:24:42.380]  нет ученые от малых что что-то мало как бы мало там какой-нибудь преподаватель окажется
[01:24:42.380 --> 01:24:50.700]  футбольным фанатом почему нет ну да нет но там конечно нет всегда аккуратно и тогда как желать
[01:24:50.700 --> 01:24:58.420]  выяснить там за кого он болеет то есть знаете ну вот то есть условно там как бы бой там будет
[01:24:58.420 --> 01:25:03.380]  там условно да когда да ой а мы снота вы болеете футбол да войка вообще классно вчера циркоска
[01:25:03.380 --> 01:25:10.860]  рубин вынес да о извините ревиль довидович там вот словно точнее ревиль дарович там ну вот
[01:25:10.860 --> 01:25:19.980]  да все все все возвращаюсь на место да нету шутка была на то что как бы можно было догадаться
[01:25:19.980 --> 01:25:33.100]  что-то там товарищ с таким именем наверно за рубин болеет да вот ну понятно это если понятно
[01:25:33.100 --> 01:25:41.260]  можете заменить как бы носка ягбар с ну вот ну ладно тут уже ладно так вот значит теперь значит
[01:25:41.260 --> 01:25:49.180]  смотрим что происходит с потенциалом значит что происходит потенциал значит значит если смотреть
[01:25:49.180 --> 01:25:55.260]  вот этот сплейный потенциал по всем вершинам да то мы замечаем следующее что во-первых при
[01:25:55.260 --> 01:26:03.100]  конкретном выполнении сплея в одном дереве потенциал меняется только вот у вершин внутри этого дерева
[01:26:03.100 --> 01:26:13.180]  то есть у остальных вершин у остальных деревьев потенциал не меняется от слова никак потенциал мы
[01:26:13.980 --> 01:26:26.100]  потенциалом мы называем сумму эссок по всем по всем по всем вообще вершинам сейчас так что у нас есть да у
[01:26:26.100 --> 01:26:32.540]  нас есть значит еще раз у нас есть веса у нас есть эске как сумма весов по дереве у нас есть рамги как
[01:26:32.540 --> 01:26:40.100]  логарифм этих сумм эссок и вот действительно сумма этих логарифм по всем вершинам это соответственно
[01:26:40.100 --> 01:26:47.940]  потенциал дерева а сумма потенциалов по всем деревьям это потенциал леса вот такая простая естественная
[01:26:47.940 --> 01:26:57.100]  иерархия но вот я но вот теперь для данного для анализа конечно вот нам очень важность нет но
[01:26:57.100 --> 01:27:07.540]  мы сейчас исследуем эксполс да при конкретно да при конкретно вот этой операции замены ребра на
[01:27:07.540 --> 01:27:17.220]  ребро да не меняется никак конкретно здесь да но если брать просто вот мы расплатываем splice
[01:27:17.220 --> 01:27:25.340]  splice состоит из двух частей первая часть это сплей вот этой вершины и вторая непосредственно вот
[01:27:25.340 --> 01:27:33.820]  переподвешивание значит утверждение во-первых при обоих этих фазах потенциалы потенциалы вершин
[01:27:33.820 --> 01:27:43.020]  нележащих вот в этом подделье не меняется от слова никак вот вот во-первых бал того что мы с
[01:27:43.020 --> 01:27:48.420]  ними не взаимодействуем а во-вторых что потенциал вершины не зависит от того то есть он зависит
[01:27:48.420 --> 01:27:52.700]  от того сколько вершин на ней висит но никак не зависит от того как конкретно друг за друга они
[01:27:52.700 --> 01:28:01.620]  там цепляются вот поэтому получается более того в этот шаг что приятно смотрите теперь если мы
[01:28:01.620 --> 01:28:06.700]  хотим оценивать по времени да то получается так как потенциал здесь не меняется то учетная
[01:28:06.700 --> 01:28:12.980]  стоимость этого шага равна реальной стоимости этого шага а реальность стоимость этого конкретно
[01:28:12.980 --> 01:28:26.660]  этого шага обратите внимание о от единицы конкретно здесь уже нет я не рассматриваю да
[01:28:26.660 --> 01:28:31.100]  ведь я не случайно вот тут это все нарисовал да вот правильно наверное рисовать вот от единицы
[01:28:31.100 --> 01:28:40.740]  здесь вот так то есть здесь это происходит за от единицы потенциал не меняется но самих этих
[01:28:40.740 --> 01:28:46.660]  от единиц но можете сразу заметить что их небо и столько же их не более чем splice поэтому с этим
[01:28:46.660 --> 01:28:56.100]  вот и этих от единиц непокрытых потенциалов с ними все нормально вот теперь рассматриваем
[01:28:56.100 --> 01:29:02.980]  сплей ну то есть во время этого сплея поменялись потенциалы только внутри этого дерева и
[01:29:02.980 --> 01:29:09.260]  исключительно но вот а во всех остальных всех остальных векшин потенциал не менялся правда
[01:29:09.260 --> 01:29:18.220]  поэтому мы можем заявить что учетная стоимость конкретно этого сплея совпадает с учетной
[01:29:18.220 --> 01:29:32.580]  стоимостью просто действительно как в обычном сплей дереве вот понятно да вот и но работает это
[01:29:32.580 --> 01:29:36.500]  обратите внимание не случай я тут мог написать как отношения но я вот очень важно написал это
[01:29:36.500 --> 01:29:44.540]  именно вот в виде вот таком то есть именно в виде разности потому что теперь значит теперь вот
[01:29:44.540 --> 01:29:51.500]  теперь аккуратное рассуждение теперь давайте посмотрим на эксполс в целом то есть вот эксполс
[01:29:51.500 --> 01:29:59.500]  в целом значит у нас как выглядит тут у нас какое-то дерево тут у нас какое-то дерево
[01:29:59.500 --> 01:30:10.780]  ну практически нет единички еще останутся да с единичками придется аккуратно разобраться вот
[01:30:10.780 --> 01:30:20.260]  остаются какие-то деревья тут что-то вот значит тут висит там я не знаю висит ну я не знаю висит
[01:30:20.260 --> 01:30:37.780]  от забыл висит во и что получается и плана вот и получается примерно следующее то есть мы
[01:30:37.780 --> 01:30:44.420]  замечаем что я значит это у нас давайте рассмотрим эти вот эти вершины ну да тут тут цепочки
[01:30:44.420 --> 01:30:49.260]  конечно вот скорее вот так висят ну ладно давайте вот для удобства так нарисуем тогда если
[01:30:49.260 --> 01:31:02.580]  рассмотреть эти вершины как допустим там допустим v1 там у1 v2 у2 там да значит v3 у3 там v4 и там
[01:31:02.580 --> 01:31:09.500]  какая-нибудь у4 да и в итоге пусть у нас тут корень какой-нибудь v5 да вот ну или неважно там
[01:31:09.500 --> 01:31:17.580]  уже что то получается что когда мы начинаем это все суммировать у нас получается то есть ну замечаем
[01:31:17.580 --> 01:31:23.820]  что пока тут происходит при подвышивании туточки мы замечаем что потенциалы тут не меняются
[01:31:23.820 --> 01:31:32.260]  поэтому и у каждого сплея значит вот свой логорифм и у вас получается значит 1 плюс значит
[01:31:32.260 --> 01:31:47.700]  лог 2 с от соответственно ну да ну по хорошему тут надо видимо лог 2 с допустим там v1 минус
[01:31:47.700 --> 01:31:55.020]  лог 2 с от с от у 0 но потому что изначально тут у нас он тут было у 0 дамы тут еще самый первый
[01:31:55.020 --> 01:32:06.340]  сплей тут делаем помните вот а чтобы отпилить то что слева помните у 0 должна стать самой левой
[01:32:06.340 --> 01:32:12.060]  поэтому нам тоже ее надо загнать в корень и отпилить левое под дерево но само в себе это
[01:32:12.060 --> 01:32:19.580]  отпиливание на потенциалы вот ровно по тем же причинам не влияет от слова никак вот значит
[01:32:19.580 --> 01:32:33.140]  далее плюс дальше 1 плюс лог 2 с от v2 минус лог 2 это у 1 соответственно да вот плюс ну да
[01:32:33.140 --> 01:32:41.180]  тут не совсем шлеп-шлеп конечно да да тут не смотрите тут не точный шлеп-шлеп но когда но
[01:32:41.180 --> 01:32:49.980]  как бы ну да давайте вот еще с логами тут напишу s от v3 минус там допустим минус лог 2
[01:32:49.980 --> 01:32:59.420]  s от у2 какой-нибудь да плюс и так далее но тем не менее вот такой шлеп-шлеп делать хочется почему
[01:32:59.420 --> 01:33:05.740]  потому что мы оцениваем это сверху и мы замечаем что вот этот s от у1 размер сколько висит на у1
[01:33:05.740 --> 01:33:11.620]  строго больше чем сколько висит на v1 потому что под дерево v1 тупо висит на левшине у1
[01:33:11.620 --> 01:33:25.140]  поэтому в некотором смысле такой шлеп-шлеп меньше либо равно выполнить можно вот равно как
[01:33:25.140 --> 01:33:31.620]  и потом значит где-то надо еще вот этот шлеп-шлеп потом шлеп-шлеп там ну и так далее то есть
[01:33:31.620 --> 01:33:40.500]  получается это меньше либо равно значит один плюс один плюс один плюс один плюс и так далее
[01:33:40.500 --> 01:33:49.620]  плюс один и плюс логарифом сейчас допишу логариф двоичной ну фактически сайза t я
[01:33:49.620 --> 01:34:13.700]  бы сказал че уж туда хриха таить минус лог 2 с от 0 где у2 тут у 0
[01:34:13.700 --> 01:34:28.420]  в 2 его один давайте я по аккуратней нарисую но вот сейчас но да то есть фактически получается
[01:34:28.420 --> 01:34:33.100]  учетная стоимость давайте я сейчас так говорю к эксполсов куда очень хочется сказать что она
[01:34:33.100 --> 01:34:40.100]  вот разность вот этих логарифов то есть по сути там то есть по сути это от логен но это неправда
[01:34:40.100 --> 01:34:45.740]  потому что до мы убили эти логарифа но эти одни ки ми не убили до эта разность меньше
[01:34:45.740 --> 01:34:56.260]  либо равно 0 но но на столько насколько нам меньше либо равно Нуля мы не знаем вот но
[01:34:56.260 --> 01:35:05.540]  заметим что количество единичек что так что это за количество единочек это количество эксползов
[01:35:05.540 --> 01:35:14.020]  сплайсов. Ведь каждая эта единичка берется из одного
[01:35:14.020 --> 01:35:18.260]  конкретного сплайса, правда? А мы знаем с вами, что сплайсов
[01:35:18.260 --> 01:35:25.380]  не более чем от n плюс q на log n. То есть получается,
[01:35:25.380 --> 01:35:31.020]  что сумма этих вот учетных стоимости с таким потенциалом
[01:35:31.020 --> 01:35:37.020]  не превосходит. Получается от n плюс q на логарифм.
[01:35:43.020 --> 01:35:47.020]  Ну, значит, еще раз. Мы посчитали тут относительно нашего потенциала
[01:35:47.020 --> 01:35:53.020]  учетную стоимость эксполза, конкретного эксполза, да?
[01:35:53.020 --> 01:35:57.020]  Ну, и мы в предположении, конечно, что у нас выполняется только эксполз.
[01:35:57.020 --> 01:36:07.020]  И после этого потенциала получилось, что учетная стоимость каждого эксполза
[01:36:07.020 --> 01:36:11.020]  не более чем log n плюс сколько сплайсов сделали.
[01:36:11.020 --> 01:36:15.020]  Сплайсов не умножить на логарифм, как раньше, а именно количество сплайсов.
[01:36:15.020 --> 01:36:22.020]  То есть получается, мы не смогли даже доказать, что учетная стоимость равна логарифм.
[01:36:22.020 --> 01:36:25.020]  Формально говоря. Но это нам не особо принципиально.
[01:36:25.020 --> 01:36:27.020]  Можно подогнать более правильный потенциал.
[01:36:27.020 --> 01:36:32.020]  То есть включить в этот потенциал не только потенциал этот, но и потенциал для сплайсов.
[01:36:32.020 --> 01:36:36.020]  А можно просто сказать, что если мы просуммируем эти все учетные стоимости,
[01:36:36.020 --> 01:36:44.020]  которые суммарно их просуммируем, то тогда у нас в сумме получится логарифм
[01:36:44.020 --> 01:36:47.020]  на количество запросов плюс сколько было сплайсов.
[01:36:47.020 --> 01:36:49.020]  А сплайсов было n плюс q на логарифм.
[01:36:49.020 --> 01:36:55.020]  Так что основная часть доказательства закончена.
[01:37:03.020 --> 01:37:06.020]  Учетная стоимость логарифм плюс сплайсов.
[01:37:06.020 --> 01:37:12.020]  То есть тут надо быть аккуратными, потому что это было бы верно, если бы у нас выполнялись только эксполсы.
[01:37:12.020 --> 01:37:26.020]  Нет, мы доказали, что если просуммировать все учетные стоимости всех эксползов, то получится от n плюс q на логарифм.
[01:37:26.020 --> 01:37:30.020]  Но будьте внимательны, это не все. Этого еще недостаточно.
[01:37:30.020 --> 01:37:33.020]  Причина очень проста.
[01:37:34.020 --> 01:37:43.020]  Так, потому что, как вы уже догадываетесь, то есть дело в том, что потенциал могут менять и другие товарищи.
[01:37:43.020 --> 01:37:47.020]  А вот те самые линк-кат.
[01:37:47.020 --> 01:37:49.020]  Вот, например, рассмотрим операцию линк.
[01:37:49.020 --> 01:37:56.020]  Заметим, что когда вы подвесили под дерево к другой вершине, вообще говоря, потенциал поменялся.
[01:37:56.020 --> 01:37:58.020]  И поменялся не сила, не правда ли?
[01:37:59.020 --> 01:38:06.020]  То есть может оказаться, что даже если вы это сделали за o от единицы, то потенциал, наоборот, увеличился аж на o от m.
[01:38:06.020 --> 01:38:11.020]  И тогда этот весь анализ просто летит к чертям.
[01:38:13.020 --> 01:38:16.020]  Вот. А что мы с ним придумаем?
[01:38:16.020 --> 01:38:21.020]  Не, не, не, не.
[01:38:21.020 --> 01:38:27.020]  Ну, просто реально тут все эти операции, сейчас просто 5 минут осталось.
[01:38:27.020 --> 01:38:33.020]  В общем-то вы уже сами догадываетесь, что называется где тут и почему хэппи энд.
[01:38:33.020 --> 01:38:36.020]  Нет, ну, смотрите, просто давайте перебирать операции.
[01:38:36.020 --> 01:38:38.020]  Значит, операция линк.
[01:38:38.020 --> 01:38:40.020]  Значит, теперь добьемся.
[01:38:40.020 --> 01:38:45.020]  Вот, имея в виду этот весь потенциал, давайте придумаем, как сделать линк.
[01:38:45.020 --> 01:38:47.020]  А линк сделать очень просто.
[01:38:47.020 --> 01:38:52.020]  Вот, допустим, жило было у вас там что-нибудь.
[01:38:52.020 --> 01:38:57.020]  То есть жило было у вас какое-то поддерево.
[01:38:57.020 --> 01:39:01.020]  Вот, там какое-то дерево большое, дерево большое.
[01:39:01.020 --> 01:39:06.020]  Ну, я тут не знаю, кто тут сложный, кто тут сплошной, кто тут не сплошной.
[01:39:06.020 --> 01:39:10.020]  И вы тут решили целое поддерево к нему подвести.
[01:39:10.020 --> 01:39:13.020]  Взяли, тут решили подвести.
[01:39:13.020 --> 01:39:15.020]  Предлагается это сделать так.
[01:39:15.020 --> 01:39:21.020]  Если вы решили подвешивать к вершине у, то вы первым делом делаете expose.
[01:39:23.020 --> 01:39:27.020]  Ну вот, значит, заметьте теперь следующее.
[01:39:27.020 --> 01:39:31.020]  Значит, вы делаете expose за адекватную асимптотику.
[01:39:31.020 --> 01:39:36.020]  И после этого в качестве добивочки вы еще и делаете сплей от у.
[01:39:37.020 --> 01:39:39.020]  Если понадобится.
[01:39:40.020 --> 01:39:41.020]  Хотя нет, понадобится.
[01:39:41.020 --> 01:39:49.020]  То есть делаем для того, чтобы вот в поддереве, чтобы вот вершина у, то есть в поддереве, то есть была она корнем.
[01:39:49.020 --> 01:39:55.020]  И слева у нее ничего не было, то есть у нее все висело либо справа, либо на пунктирных ребрах.
[01:39:55.020 --> 01:39:58.020]  То есть мы вот делаем от нее сплей.
[01:40:01.020 --> 01:40:04.020]  Хотя нет, может не получиться, потому что она не обязана быть самой...
[01:40:04.020 --> 01:40:10.020]  Хотя нет, если мы сделали expose, то как бы, да, мы и отпилили то, что у нее ниже было, поэтому она самая левая.
[01:40:10.020 --> 01:40:17.020]  Раз она самая левая, то есть теперь вот загнали ее в корень, потратили еще адекватное число операций, да?
[01:40:18.020 --> 01:40:22.020]  Ну, то есть учетная стоимость сплея одинак, а адекватная от этого, правда?
[01:40:22.020 --> 01:40:25.020]  Я, кстати, понимаю, что чем левее вершина, она ниже, похоже, что...
[01:40:25.020 --> 01:40:26.020]  Нет.
[01:40:27.020 --> 01:40:29.020]  Потому что, если иначе у вас будет...
[01:40:29.020 --> 01:40:34.020]  Нет, если идти по левому пути, то каждая следующая вершина, конечно, ниже предыдущей, но она не обязана быть самой глупой.
[01:40:34.020 --> 01:40:40.020]  Если у вас будет по правому, и у вас будет справа путь, то вы бы хотели, наверное, что-таки был у вас...
[01:40:40.020 --> 01:40:42.020]  Мне по барабану, где по барабану?
[01:40:42.020 --> 01:40:48.020]  Я знаю, что если я буду менять дерево только сплеями, у меня как бы будет учетная стоимость такая, и меня это устраивает.
[01:40:48.020 --> 01:40:50.020]  После этого вопроса реализации.
[01:40:50.020 --> 01:40:52.020]  Ну, может.
[01:40:52.020 --> 01:40:55.020]  Ну, нет, по-моему, это вопрос анализа.
[01:40:55.020 --> 01:41:02.020]  Нет, тут важно, что вы, как бы, если вы будете делать как-нибудь, а не только сплеи, то тогда вы не сможете доказать, что это адекватно работает.
[01:41:03.020 --> 01:41:08.020]  То есть вопрос в данном случае, что какие конкретно сплеи я делаю?
[01:41:08.020 --> 01:41:10.020]  Конечно, да, это мое личное дело.
[01:41:10.020 --> 01:41:13.020]  Я имею право их делать как хочу, и я хочу их делать так.
[01:41:13.020 --> 01:41:15.020]  Почему я хочу делать именно так?
[01:41:15.020 --> 01:41:27.020]  Потому что я хочу, что когда вы подвесите новое под дерево к этой вершине, запунктирное ребро, я хочу, чтобы потенциал увеличился только у этой вершины и ни у какой другой окромя.
[01:41:27.020 --> 01:41:37.020]  То есть заметим, что учетная стоимость конкретно этого действия тогда увеличит наш потенциал не более, чем на алгорифм.
[01:41:37.020 --> 01:41:43.020]  Потому что, в принципе, у каждой вершины потенциал не более, чем на алгорифм, правда?
[01:41:43.020 --> 01:41:46.020]  Очень удобно.
[01:41:46.020 --> 01:41:50.020]  Даже вес изменился только у нее.
[01:41:51.020 --> 01:41:57.020]  То есть таким образом мы убедились в том, что мы смогли сделать линкад за экспоуз.
[01:41:57.020 --> 01:42:02.020]  Там может быть дополнительный сплей и адекватное подвешивание.
[01:42:07.020 --> 01:42:08.020]  Нет, нет, нет.
[01:42:08.020 --> 01:42:11.020]  Вот теперь мы обнаружили, что в этом нет просто смысла.
[01:42:12.020 --> 01:42:17.020]  Вот чем приятно, когда вы понимаете доказательства, вы можете сами делать как вам удобно.
[01:42:17.020 --> 01:42:21.020]  Потому что вы не знаете как правильно, вы знаете доказательства.
[01:42:21.020 --> 01:42:24.020]  То есть правильно так, как докажется.
[01:42:24.020 --> 01:42:25.020]  Так вот.
[01:42:25.020 --> 01:42:27.020]  Ну, с катом все еще проще.
[01:42:28.020 --> 01:42:30.020]  Ну, потому что с катом фактически обратная операция.
[01:42:30.020 --> 01:42:34.020]  Вы делаете экспоуз от родителя ребра, который вы отпиливаете.
[01:42:37.020 --> 01:42:40.020]  То есть это ребро становится соответственно пунктирным, если не было.
[01:42:40.020 --> 01:42:44.020]  И после этого вы его отпиливаете, и это даже уменьшает потенциал.
[01:42:47.020 --> 01:42:49.020]  У нас же несколько потенциалов было.
[01:42:50.020 --> 01:42:57.020]  Да, но мы анализировали, что с сплайсовым потенциалом все в порядке.
[01:43:00.020 --> 01:43:02.020]  То есть здесь мы тоже отпиливаем.
[01:43:02.020 --> 01:43:04.020]  Отпиливаем потенциал.
[01:43:04.020 --> 01:43:07.020]  То есть когда кат происходит, то будет вообще еще лучше.
[01:43:08.020 --> 01:43:09.020]  Думаем, какие у нас еще?
[01:43:09.020 --> 01:43:12.020]  У нас была проблемная операция Эверт.
[01:43:12.020 --> 01:43:13.020]  Да?
[01:43:14.020 --> 01:43:16.020]  Проблемная операция Эверт.
[01:43:16.020 --> 01:43:17.020]  Ну, замечаем, что...
[01:43:20.020 --> 01:43:23.020]  Да, но заметим, что когда мы делаем это отложенный реверс,
[01:43:23.020 --> 01:43:25.020]  как мы помним, потенциал не меняется от слова никак.
[01:43:26.020 --> 01:43:27.020]  Помните, да?
[01:43:28.020 --> 01:43:32.020]  Да, поэтому от перестановки мест слагаемых суммы не меняется.
[01:43:32.020 --> 01:43:35.020]  Поэтому, да, то есть в Эверте вообще легко.
[01:43:36.020 --> 01:43:39.020]  Ну, а по-моему, более умных операции у нас там и не было.
[01:43:39.020 --> 01:43:47.020]  То есть все остальные операции вообще работают за экспозы от единицы навешивания в корень отложенной операции.
[01:43:48.020 --> 01:43:49.020]  По сути.
[01:43:50.020 --> 01:43:53.020]  Так что отсюда получается, что, да, ура.
[01:43:54.020 --> 01:43:58.020]  Как говорится, да, впервые в истории у нас есть линкат за логорифом ура.
[01:43:59.020 --> 01:44:00.020]  Идея такая.
[01:44:01.020 --> 01:44:03.020]  Но начнем с такой идеи.
[01:44:04.020 --> 01:44:07.020]  Значит, мы сейчас на всех...
[01:44:08.020 --> 01:44:11.020]  Вот возьмем все. У нас всего два в степени W чисел.
[01:44:14.020 --> 01:44:18.020]  И мы на их всех создадим бор.
[01:44:19.020 --> 01:44:20.020]  Прям вот вообще на всех.
[01:44:22.020 --> 01:44:23.020]  Вот. Вот так вот.
[01:44:24.020 --> 01:44:25.020]  Вот так вот.
[01:44:26.020 --> 01:44:27.020]  То есть из данных там чисел?
[01:44:28.020 --> 01:44:30.020]  Нет, даже хуже. Не из данных.
[01:44:31.020 --> 01:44:32.020]  А вообще из всех.
[01:44:33.020 --> 01:44:35.020]  Ну, пока мысленно.
[01:44:36.020 --> 01:44:37.020]  Из всех в один и двух.
[01:44:38.020 --> 01:44:39.020]  Ну вот.
[01:44:40.020 --> 01:44:41.020]  То есть запишем все в один и двух и выполним на одного.
[01:44:42.020 --> 01:44:43.020]  Да, вот да.
[01:44:44.020 --> 01:44:45.020]  Вот так вот, вот так вот, вот так вот, вот так вот, вот так вот.
[01:44:46.020 --> 01:44:47.020]  Тем дальше дописывать не буду.
[01:44:48.020 --> 01:44:49.020]  Пусть у нас будет W равных 4.
[01:44:50.020 --> 01:44:54.020]  И теперь смотрите, что мы еще тут теперь делаем.
[01:44:55.020 --> 01:44:58.020]  Значит, смотрите, делаем вот так.
[01:44:59.020 --> 01:45:07.020]  Значит, среди этих чисел есть те, кто лежит в нашем черном ящике, типа в сайте.
[01:45:08.020 --> 01:45:11.020]  И те, кто не лежит.
[01:45:12.020 --> 01:45:13.020]  Логично, да?
[01:45:14.020 --> 01:45:15.020]  Вот.
[01:45:16.020 --> 01:45:17.020]  Да.
[01:45:18.020 --> 01:45:19.020]  Ну, как сказать, да.
[01:45:20.020 --> 01:45:21.020]  Вот.
[01:45:22.020 --> 01:45:23.020]  Как это?
[01:45:24.020 --> 01:45:25.020]  Вот.
[01:45:25.020 --> 01:45:26.020]  Вот.
[01:45:27.020 --> 01:45:28.020]  Вот.
[01:45:29.020 --> 01:45:30.020]  Так вот, идея такая.
[01:45:31.020 --> 01:45:33.020]  Значит, мы их пометим.
[01:45:34.020 --> 01:45:36.020]  Мы прям пометим те вершины.
[01:45:37.020 --> 01:45:38.020]  Нет, даже не так лучше.
[01:45:39.020 --> 01:45:40.020]  Вот так давайте.
[01:45:41.020 --> 01:45:44.020]  Значит, пометим те вершины, которые соответствуют числам, которые вы множете.
[01:45:45.020 --> 01:45:49.020]  Более того, на всякий пожарный, даже не на всякий пожарный, а просто.
[01:45:49.020 --> 01:45:50.020]  На всякий пожарный, а просто.
[01:45:51.020 --> 01:45:57.020]  Мы из этих чисел еще и будем поддерживать отсортированный двусвязанный список.
[01:45:58.020 --> 01:45:59.020]  Вот.
[01:46:00.020 --> 01:46:05.020]  Ну, это для того, что у нас тут сейчас будет такое.
[01:46:06.020 --> 01:46:07.020]  Нам нужно искать successor, нужно искать predecessor.
[01:46:08.020 --> 01:46:09.020]  Мы не будем заморачиваться.
[01:46:10.020 --> 01:46:14.020]  Мы найдем что-то из этого, а там быстренько, если это не то, значит, сходим по указателю.
[01:46:14.020 --> 01:46:19.020]  То есть, типа вот, я знаю, что это что-то, вот это самое близкое там.
[01:46:20.020 --> 01:46:22.020]  Это не successor, а predecessor.
[01:46:23.020 --> 01:46:24.020]  Он же имеется.
[01:46:25.020 --> 01:46:27.020]  Ой, ну что вы придираетесь, мы вот войдем по указателю.
[01:46:28.020 --> 01:46:29.020]  Нет.
[01:46:30.020 --> 01:46:31.020]  Сейчас нет.
[01:46:32.020 --> 01:46:36.020]  А, ну типа если мы знаем successor, то мы умеем переставить.
[01:46:37.020 --> 01:46:38.020]  Ну, не совсем.
[01:46:39.020 --> 01:46:40.020]  То есть, если мы знаем.
[01:46:40.020 --> 01:46:43.020]  Ну, во-первых, если мы знаем successor, то мы знаем и predecessor автоматически.
[01:46:44.020 --> 01:46:45.020]  Вот очень удобно.
[01:46:46.020 --> 01:46:47.020]  Но теперь смотрите.
[01:46:48.020 --> 01:46:52.020]  Successor это upper bound, короче.
[01:46:53.020 --> 01:46:54.020]  А successor это lower bound?
[01:46:55.020 --> 01:46:59.020]  Нет, это upper bound это, ну, давай так, лучше lower bound будем искать.
[01:47:00.020 --> 01:47:02.020]  Нет, successor это первый, который не меньше.
[01:47:03.020 --> 01:47:04.020]  Давайте будем искать, который не меньше.
[01:47:05.020 --> 01:47:06.020]  Ну, нам по барабану, в общем.
[01:47:07.020 --> 01:47:08.020]  Вот.
[01:47:08.020 --> 01:47:10.020]  Кстати, successor это последний, который не больше.
[01:47:11.020 --> 01:47:12.020]  Вот.
[01:47:13.020 --> 01:47:15.020]  Хотя, может, лучше правильно первый, который строго больше.
[01:47:16.020 --> 01:47:18.020]  Лучше искать, чтобы для каждого элемента вот successor был.
[01:47:19.020 --> 01:47:20.020]  Ну, не важно.
[01:47:21.020 --> 01:47:22.020]  Это все деталь.
[01:47:23.020 --> 01:47:24.020]  Да.
[01:47:25.020 --> 01:47:26.020]  Но это еще не все.
[01:47:27.020 --> 01:47:36.020]  Ну, потому что замечаем, что, действительно, в такой штуке, действительно, мы всякие, ну понятно, всякие search мы ищем за логорифом.
[01:47:37.020 --> 01:47:38.020]  Но как же нам искать successor?
[01:47:39.020 --> 01:47:40.020]  За какой логорифом? За V вообще-то?
[01:47:41.020 --> 01:47:42.020]  Ну, за логорифом V.
[01:47:43.020 --> 01:47:44.020]  А, хуже даже.
[01:47:45.020 --> 01:47:46.020]  Да, согласен.
[01:47:47.020 --> 01:47:48.020]  Да, согласен, за V, за V, за V.
[01:47:49.020 --> 01:47:50.020]  Пока в тупую, да.
[01:47:51.020 --> 01:47:52.020]  Ну, а теперь смотрите, какой чит у нас будет.
[01:47:53.020 --> 01:47:55.020]  Значит, сейчас мы обведем.
[01:47:56.020 --> 01:47:57.020]  Сейчас мы обведем.
[01:47:58.020 --> 01:48:02.020]  Пометим, значит, не только, значит, эти вот листы.
[01:48:02.020 --> 01:48:15.020]  Но также мы пометим все вершины, в поддереве которых есть, соответственно, хотя бы одна помеченная вершина.
[01:48:18.020 --> 01:48:19.020]  Вот примерно так это будет выглядеть.
[01:48:28.020 --> 01:48:29.020]  Вот.
[01:48:30.020 --> 01:48:37.020]  Нет, вершин-то у нас 2, 2V-1, такие 2 в степени W-1, если быть точнее.
[01:48:38.020 --> 01:48:43.020]  А помеченных N, V, да.
[01:48:44.020 --> 01:48:53.020]  Значит, мы пометили, в листах, листы мы пометили те листы, которые соответствуют вершинам, которые сейчас в сете.
[01:48:54.020 --> 01:48:56.020]  А также мы, по сути, пометили все их предки.
[01:48:57.020 --> 01:48:58.020]  В каком сете?
[01:48:59.020 --> 01:49:01.020]  Ну, мы сет реализуем.
[01:49:02.020 --> 01:49:04.020]  Мы реализуем сет с аксессором и предиссессором.
[01:49:09.020 --> 01:49:10.020]  Прямо всех.
[01:49:11.020 --> 01:49:22.020]  Как правильно заметил, тихон, действительно, это, то есть, как бы количество вершин помеченных, то есть, помеченных вершин там не более чем N на W.
[01:49:25.020 --> 01:49:26.020]  Да, пожалуй.
[01:49:27.020 --> 01:49:28.020]  Да.
[01:49:29.020 --> 01:49:31.020]  Ну, поэтому я говорю, что это пристрелочная версия.
[01:49:32.020 --> 01:49:33.020]  Вот.
[01:49:34.020 --> 01:49:38.020]  Ну, пока у нас, когда, и памяти это все жрет от 2 в степени W.
[01:49:39.020 --> 01:49:40.020]  Вот.
[01:49:41.020 --> 01:49:42.020]  Да.
[01:49:43.020 --> 01:49:46.020]  Да, мы вообще пока ничего не умеем.
[01:49:47.020 --> 01:49:53.020]  Да, если говорить об инсерте, ну, инсерт мы пока умеем делать за, там, я не знаю, за сколько мы его там умеем делать.
[01:49:53.020 --> 01:49:54.020]  Ну, инсерт.
[01:49:55.020 --> 01:49:56.020]  Ну, правда, хуй раньше, значит, инсерт у нас.
[01:49:57.020 --> 01:50:00.020]  Пока, если вот в таком миде втупают, значит, он делается за O от W.
[01:50:04.020 --> 01:50:05.020]  А потом?
[01:50:06.020 --> 01:50:10.020]  А, если мы хотим сделать Erase, он будет делаться за O от W.
[01:50:12.020 --> 01:50:13.020]  Мы не знаем как.
[01:50:14.020 --> 01:50:15.020]  Не-не-не, знаем-знаем.
[01:50:16.020 --> 01:50:17.020]  А что такое?
[01:50:18.020 --> 01:50:21.020]  Ну, пробежаться, если вы тут срели вот эту пометку, вы тут можете пробежаться по...
[01:50:22.020 --> 01:50:23.020]  Без проблем.
[01:50:24.020 --> 01:50:28.020]  Ну, в смысле, удаляешь эту вершину с двухсвязанного списка, значит, левый и правый экран негтишь проблемы.
[01:50:29.020 --> 01:50:30.020]  А в инсерте тебе...
[01:50:31.020 --> 01:50:33.020]  А, в инсерте, да, да-да-да-да-да.
[01:50:36.020 --> 01:50:44.020]  Но там, да, но там заметим, что когда ты спускаешься вот по пути, да, ты попутно ищешь там какой-нибудь самый максимальный элемент.
[01:50:45.020 --> 01:50:50.020]  Потому что идея тут будет такая, то есть, когда ты вот пришел, вот, допустим, тебе жутко интересно,
[01:50:51.020 --> 01:50:56.020]  найти там какой элемент, самый близкий элемент слева помеченный, тебе жутко интересно, да?
[01:50:57.020 --> 01:50:58.020]  Наверное.
[01:50:59.020 --> 01:51:11.020]  Тогда идея такая, идем, идем, значит, идем-идем-идем, и находим такую, первое встреченное нами такое правое ребро, у которого слева тут находится, слева висит помеченный ребёнок.
[01:51:12.020 --> 01:51:21.020]  Я утверждаю, что, на самом деле, просто надо теперь вот в этом поддереве найти максимум, честно к нему спуститься, и это и есть предиссессор.
[01:51:22.020 --> 01:51:26.020]  Не в первом повороте направо, а на последнем повороте направо?
[01:51:27.020 --> 01:51:30.020]  Нет, в первом, если идти снизу, мы снизу идем.
[01:51:31.020 --> 01:51:37.020]  Да, но это была стандартная технология, как ищется саксессор-предиссессор в каком-нибудь дикартовом дереве.
[01:51:38.020 --> 01:51:41.020]  Вот, собственно, абсолютно идентично.
[01:51:42.020 --> 01:51:43.020]  Вот.
[01:51:44.020 --> 01:52:00.020]  Ну, то есть, мы понимаем, что саксессор-предиссессор, ну, по крайней мере, в текущей версии, там саксессор-предиссессор, все они работают за сколько?
[01:52:01.020 --> 01:52:02.020]  За, пока, от.
[01:52:03.020 --> 01:52:08.020]  Ну, то есть, если бы в тупую наборе это все хранили, то вот можно было бы за от w это делать и радоваться.
[01:52:15.020 --> 01:52:21.020]  Да, но каждую пометку-то пересчитать несложно, надо просто увидеть у детей, есть ли пометки.
[01:52:23.020 --> 01:52:25.020]  Так что само по себе это не проблема.
[01:52:26.020 --> 01:52:27.020]  Вот.
[01:52:27.020 --> 01:52:28.020]  Что делать?
[01:52:30.020 --> 01:52:33.020]  Ну, понятно, что от w памяти как-то не очень хочется.
[01:52:34.020 --> 01:52:39.020]  Ну, и как-то хочется, наверное, всяких этих саксессоров-предиссессоров попытаться искать чуть-чуть побыстрее.
[01:52:40.020 --> 01:52:41.020]  Все поэффективнее.
[01:52:42.020 --> 01:52:44.020]  Да, все хочется поэффективнее.
[01:52:45.020 --> 01:52:46.020]  Поэтому мы обнаглеем.
[01:52:47.020 --> 01:52:55.020]  Мы в каждой вершине, значит, в каждой вершине помимо пометки будем хранить еще минимум и максимум.
[01:52:56.020 --> 01:53:01.020]  В этом, то есть, минимум, то есть, минимальную и максимальную помеченную вершину в этом под деревом.
[01:53:04.020 --> 01:53:07.020]  Что значит в данном случае будет минимально и максимально? То есть, минимально самое левое из помеченного?
[01:53:08.020 --> 01:53:10.020]  Ну, из листов, да. Самое правое, да.
[01:53:11.020 --> 01:53:14.020]  Ну, они как бы и по числам соответствуют самым, кто меньше, кто больше.
[01:53:15.020 --> 01:53:16.020]  Мы все на числах.
[01:53:17.020 --> 01:53:18.020]  Вот, так что соответственно.
[01:53:19.020 --> 01:53:20.020]  Ага, так, работаем, да.
[01:53:21.020 --> 01:53:22.020]  Вот.
[01:53:23.020 --> 01:53:25.020]  Значит, далее получается такая.
[01:53:26.020 --> 01:53:28.020]  Значит, будем хранить этот вот минимум-максимум.
[01:53:31.020 --> 01:53:32.020]  Вот.
[01:53:33.020 --> 01:53:35.020]  Ну, давайте, какие симптики от этого меняются?
[01:53:39.020 --> 01:53:40.020]  Ну, пока никакие, да.
[01:53:41.020 --> 01:53:44.020]  Нет, хотя некоторые улучшения есть.
[01:53:45.020 --> 01:53:46.020]  В два раза.
[01:53:46.020 --> 01:53:47.020]  Ну, да, в два раза.
[01:53:48.020 --> 01:53:51.020]  Потому что successor, predecessor, у них как бы есть два шага.
[01:53:52.020 --> 01:53:53.020]  Подъем и спуск.
[01:53:54.020 --> 01:53:56.020]  А спуск теперь уже можно за 1 искать.
[01:53:57.020 --> 01:53:58.020]  Да.
[01:53:59.020 --> 01:54:01.020]  Осталось только понять, можно ли подняться.
[01:54:02.020 --> 01:54:07.020]  А вот теперь, как теперь сделать так, чтобы successor, predecessor искались?
[01:54:08.020 --> 01:54:12.020]  Торжественно превратились в соответственно...
[01:54:12.020 --> 01:54:14.020]  Ну, да, по факту, да, в лог В.
[01:54:17.020 --> 01:54:18.020]  Как их торжественно превратить?
[01:54:19.020 --> 01:54:24.020]  Вот как это сделать в лог В, и чтобы памяти тоже стало от NW.
[01:54:31.020 --> 01:54:34.020]  Ну, пока у нас проблема в том, что мы это все дерево в явном виде храним.
[01:54:35.020 --> 01:54:37.020]  Потому что у нас пока так устроена структура.
[01:54:37.020 --> 01:54:38.020]  Ну, да.
[01:54:39.020 --> 01:54:42.020]  А на самом деле, да, идея действительно читерская.
[01:54:43.020 --> 01:54:55.020]  Вместо того, чтобы хранить весь этот прям честный борт, давайте все вот эти вот, все вот эти слова, все вот эти, так сказать, префиксы помеченных, хранить в какой-нибудь хэшмапе.
[01:54:56.020 --> 01:54:58.020]  Да, в той самой, в которую мы поверили.
[01:54:58.020 --> 01:55:00.020]  Ну, как сказать, не совсем. Длина-то разная.
[01:55:00.020 --> 01:55:12.020]  Ну, во-первых, ну, как это называется, да, это называется авторы статьи опускают такие несерьезные детали, видимо, просто даже не считая нужным сказать, что, ну, как это называется, да, это называется...
[01:55:12.020 --> 01:55:14.020]  Ну, как сказать, не совсем. Длина-то разная.
[01:55:14.020 --> 01:55:27.020]  Ну, во-первых, ну, как это называется, да, это называется авторы статьи опускают такие несерьезные детали, видимо, просто даже не считая нужным сказать, что, там, я самостоятельно, хотя не отвернул.
[01:55:27.020 --> 01:55:35.020]  Хотя не отвернул, ладно, может, я гоню на авторы статьи, да, потому что я же по конспектам ориентировался не по оригинальной статье.
[01:55:35.020 --> 01:55:45.020]  Но не знаю, я лично в этом случае предлагаю, на самом деле, создать не один хэшмап, а N хэшмап, а W хэшмапов.
[01:55:45.020 --> 01:55:51.020]  W хэшмапов, где хранить только масочки соответствующей длины.
[01:55:51.020 --> 01:55:53.020]  Вот.
[01:55:57.020 --> 01:56:14.020]  Не, ну, смотри, просто, ну, просто идея такая, в данном случае мы, ну, там, тут мы будем хранить какую-нибудь пустую масочку, здесь мы будем хранить масочки 0 и 1, в мапе номер 2 мы будем хранить вот масочки 0 0 0 1 1 0 1 1, в мапе номер 3 будет интереснее.
[01:56:14.020 --> 01:56:27.020]  То есть мы будем хранить масочки 0 0 0, 0 0 1, там 0 1 0, нет, ну не все, вот видите, тут уже две пропущенные, вот только те, которые помечены, 1 0 0, 1 1 0 и 1 1 1.
[01:56:30.020 --> 01:56:43.020]  Ну потому что к каждой вершине соответствует путь, а каждому пути соответствует строчка из 0 единиц, а каждой строчке из 0 единиц соответствует масочка, которую можно запихнуть, можно оформить как одно число.
[01:56:44.020 --> 01:56:47.020]  Ну вот, эти числа вот мы в этих вот n-мапах храним.
[01:56:50.020 --> 01:56:52.020]  Вот, я приложу так.
[01:56:53.020 --> 01:56:55.020]  Ну да, wmap, да.
[01:56:57.020 --> 01:57:08.020]  Да, то есть, ну, ну, то есть, да, в этом смысле мы может где-то это немножко забиваем на то, что там предпочет у нас теперь будет за w, чтобы создать w-мапов, но это мелко.
[01:57:08.020 --> 01:57:16.020]  Ну и тем более, в случае чего всегда можно создать там хэшмап хэшмапчиков там, да, это в общем не проблема.
[01:57:18.020 --> 01:57:24.020]  Вот, так вот, тогда что это нам дает? Откуда мы берем log w?
[01:57:25.020 --> 01:57:36.020]  Ну идея очень простая, вместо того, чтобы честно идти вверх, мы замечаем, что если идти просто, вот, вообразим себе этот процесс, и мы понимаем, что некоторое время вершины будут не помечены,
[01:57:36.020 --> 01:57:41.020]  когда мы добавляем что-то, например, а в какой-то момент они, бабаха, окажутся помеченными.
[01:57:42.020 --> 01:57:46.020]  И нас интересует последний момент, когда они будут помечены.
[01:57:47.020 --> 01:57:51.020]  Ну, проверять числа на совпадение по префису, кажется, быстро дело.
[01:57:52.020 --> 01:57:55.020]  Ну вот, хотя да, но мы говорим о successor и predecessor, да.
[01:57:56.020 --> 01:57:58.020]  Ну потому что да, insert и erase, там все равно эти пометки.
[01:57:58.020 --> 01:58:04.020]  Потом еще на уровне, еще на уровне, и в худшем случае это double.
[01:58:05.020 --> 01:58:10.020]  Поэтому, на самом деле, нам нужно найти, по идее, первую вершину, если идти снизу, которая помечена.
[01:58:11.020 --> 01:58:20.020]  Заметим, что, в чем заметим, что вот именно сейчас проявляется, что как бы сейчас мы будем немножко вольны, мы можем найти или successor, или predecessor, ну, что-то из этого.
[01:58:21.020 --> 01:58:25.020]  Ну вот, ну, как бы, бах, или Brahms, что-то из классики вот этого.
[01:58:25.020 --> 01:58:26.020]  Нет.
[01:58:27.020 --> 01:58:28.020]  За insert мы ничего не говорим.
[01:58:29.020 --> 01:58:31.020]  Мы говорим про successor и predecessor.
[01:58:32.020 --> 01:58:33.020]  А?
[01:58:34.020 --> 01:58:35.020]  Пока нету.
[01:58:36.020 --> 01:58:41.020]  Значит, смотрите, мы находим эту вот первую вершину помеченную, начнем ее, честно, залог В, binpolsk.
[01:58:43.020 --> 01:58:44.020]  И вот.
[01:58:45.020 --> 01:58:48.020]  Значит, что у нас, ну вот, теперь смотрим.
[01:58:48.020 --> 01:58:50.020]  Если наша вершина оказывается в ее правом поддереве.
[01:58:51.020 --> 01:58:52.020]  Вот.
[01:58:53.020 --> 01:58:54.020]  Ну вот.
[01:58:55.020 --> 01:58:58.020]  Тогда мы действительно просто берем максимум в ее левом поддереве.
[01:58:59.020 --> 01:59:04.020]  А если это оказывается про левое поддереве, то мы берем просто там, минимум, в правом поддереве.
[01:59:05.020 --> 01:59:10.020]  И таким образом находим или successor, или predecessor.
[01:59:10.020 --> 01:59:12.020]  Да, заметим, что эта вершина, которую мы тут ходили, она не помечена.
[01:59:13.020 --> 01:59:17.020]  Ну, если мы просто в хэшмапе ее нашли, мы за вот единицы поняли, что там кто у нее predecessor, successor.
[01:59:18.020 --> 01:59:22.020]  А так, как бы, если она не помечена, то мы впервые находим поддерево, которое помечено.
[01:59:23.020 --> 01:59:25.020]  И, значит, вот где-то здесь, тут у нее есть сосед.
[01:59:26.020 --> 01:59:28.020]  Либо слева, либо справа мы его находим.
[01:59:29.020 --> 01:59:30.020]  Ну, вот.
[01:59:31.020 --> 01:59:32.020]  Ну, вот.
[01:59:33.020 --> 01:59:34.020]  Вот.
[01:59:35.020 --> 01:59:36.020]  Ну, вот.
[01:59:37.020 --> 01:59:38.020]  Ну, вот.
[01:59:38.020 --> 01:59:47.020]  А очень просто, смотри, потому что ты, как говоришь, чтобы проверить, то есть ты говоришь, так, вот у нее целая маска.
[01:59:48.020 --> 01:59:49.020]  Такой маски нет.
[01:59:50.020 --> 01:59:52.020]  А вот, а ее префикс длины 3 есть?
[01:59:53.020 --> 01:59:54.020]  Ой, есть.
[01:59:55.020 --> 01:59:57.020]  А префикс длины 5? Ой, нету.
[01:59:58.020 --> 01:59:59.020]  Ну, вот, да, поэтому вот.
[02:00:00.020 --> 02:00:04.020]  То есть, поэтому вот такая вот неожиданная bin поиска.
[02:00:05.020 --> 02:00:08.020]  Ну, вот, не хотели.
[02:00:09.020 --> 02:00:10.020]  Что это мы не хотели?
[02:00:11.020 --> 02:00:15.020]  А, ну, это да, это он mdboss делает пока тоже самое, согласен.
[02:00:16.020 --> 02:00:19.020]  Но зато у нас памяти хотя бы уже реально от mw они там.
[02:00:20.020 --> 02:00:23.020]  Ну, хотя, да, тут сдано хэшмапу на хэшмапу, согласен, но вот.
[02:00:24.020 --> 02:00:26.020]  Хотя надо посмотреть, хотя нет.
[02:00:27.020 --> 02:00:31.020]  Да, первая мысль, может, тогда они изобрели дерево mdboss, а в том числе, они изобрели, они на него ссылались.
[02:00:32.020 --> 02:00:33.020]  Да.
[02:00:34.020 --> 02:00:35.020]  Ну, ничего страшного.
[02:00:36.020 --> 02:00:37.020]  Но, как я уже сказал, конкурирующая фирма.
[02:00:38.020 --> 02:00:41.020]  Ну, сейчас мы просто как бы рандом находим.
[02:00:42.020 --> 02:00:43.020]  Повезет, найдем success, пойдет, найдем, придаст.
[02:00:44.020 --> 02:00:47.020]  Да, но у нас на этой список, обратите внимание.
[02:00:48.020 --> 02:00:49.020]  А, да.
[02:00:50.020 --> 02:00:54.020]  Но важный момент, что мало того, что памяти не от от на от and w.
[02:00:55.020 --> 02:00:56.020]  Уже не плохие.
[02:00:57.020 --> 02:01:03.020]  Так еще и заметим, что insert и erase при вот этих вот хранениях минимум максимума, а нам принципиально их хранить.
[02:01:04.020 --> 02:01:07.020]  Ну, потому что нам тут надо прям максимум найти в этой вершине, да.
[02:01:08.020 --> 02:01:12.020]  То получается, что никаких, что от w мы никуда не сдвинулись.
[02:01:14.020 --> 02:01:15.020]  Вот.
[02:01:19.020 --> 02:01:20.020]  Вот.
[02:01:21.020 --> 02:01:22.020]  Но, тем не менее, вот такая штука есть.
[02:01:23.020 --> 02:01:27.020]  Но я поэтому и сказал, что это версия 1 пристрелочная.
[02:01:28.020 --> 02:01:33.020]  Ну, такая пристрелочная, она будет использоваться как часть в следующей версии.
[02:01:34.020 --> 02:01:39.020]  Ну, например, да.
[02:01:40.020 --> 02:01:41.020]  Еще в одном хэш-мапе.
[02:01:42.020 --> 02:01:44.020]  Хотя даже не хэш-мап, это массив.
[02:01:45.020 --> 02:01:50.020]  Да, да, да.
[02:01:51.020 --> 02:01:52.020]  Ну, да, ну, конечно, конечно, да.
[02:01:53.020 --> 02:01:57.020]  Да, поэтому я употребляю не слово хэш-сет, а слово хэш-мап.
[02:01:58.020 --> 02:01:59.020]  Да.
[02:02:00.020 --> 02:02:01.020]  Как бы мы и верим в хэш-мапы.
[02:02:04.020 --> 02:02:05.020]  Нет, они есть.
[02:02:06.020 --> 02:02:07.020]  Просто они продолжают работать за w.
[02:02:08.020 --> 02:02:11.020]  Да, потому что, ну, минимум максимум надо хранить.
[02:02:12.020 --> 02:02:13.020]  Ничего не попишешь.
[02:02:14.020 --> 02:02:19.020]  Но, как бы, тем не менее, такая версия называется по-своему прикольная.
[02:02:20.020 --> 02:02:23.020]  И сейчас мы ее попробуем использовать.
[02:02:24.020 --> 02:02:31.020]  Ну, search, конечно, работает за 1, потому что вы лезете в хэш-мап.
[02:02:32.020 --> 02:02:33.020]  Да.
[02:02:34.020 --> 02:02:39.020]  Так что это, как бы, в первую очередь для нас важны successor-predecessor.
[02:02:40.020 --> 02:02:46.020]  Нет, это, конечно, ну, и тем более, если мы умеем делать successor-predecessor, то что-то мне подсказывает, то search мы умеем за ту же ассиндотику.
[02:02:47.020 --> 02:02:48.020]  Поверьте мне.
[02:02:49.020 --> 02:02:50.020]  Да.
[02:02:51.020 --> 02:02:52.020]  Я так думаю.
[02:02:53.020 --> 02:02:54.020]  Ну, вот, да.
[02:02:55.020 --> 02:02:56.020]  Ну, мало ли.
[02:02:57.020 --> 02:02:58.020]  Так, хорошо.
[02:02:59.020 --> 02:03:02.020]  Значит, это был, это было вот xfast3.
[02:03:03.020 --> 02:03:08.020]  Ну, оно, нет, оно, оно successor-predecessor быстро ищет.
[02:03:09.020 --> 02:03:10.020]  Да.
[02:03:11.020 --> 02:03:26.020]  Ну, как-то, как говорили, как это говорилось, есть язык, называется, его очень любят биологи, как сам язык, на самом деле, не самый приятный, конечно, скажем аккуратно, но в нем есть куча статистических пакетов, поэтому там все его очень любят.
[02:03:27.020 --> 02:03:28.020]  Вот.
[02:03:28.020 --> 02:03:33.020]  Да, так что вот, да, ну, вскоре вы с этим столкнетесь.
[02:03:34.020 --> 02:03:35.020]  Вот.
[02:03:36.020 --> 02:03:37.020]  Значит, уровень следующий.
[02:03:38.020 --> 02:03:40.020]  Значит, давайте, малиновый.
[02:03:41.020 --> 02:03:43.020]  Да, малиновый пусть будет.
[02:03:44.020 --> 02:03:54.020]  Значит, версия, значит, это была, да, давайте отрисуем, да, это вот была фиолетовая версия yfast3, вот ассиндотику я оставлю.
[02:03:55.020 --> 02:03:57.020]  Все остальное буду стирать.
[02:03:58.020 --> 02:03:59.020]  Значит, поехали дальше.
[02:04:00.020 --> 02:04:02.020]  А теперь версия вторая.
[02:04:03.020 --> 02:04:04.020]  Название.
[02:04:05.020 --> 02:04:06.020]  Yfast.
[02:04:07.020 --> 02:04:08.020]  Реально.
[02:04:09.020 --> 02:04:10.020]  Которую амортизировать.
[02:04:11.020 --> 02:04:15.020]  Да, все, да, то есть мало нам, да, мало на вероятности сейчас будет еще амортизация.
[02:04:16.020 --> 02:04:17.020]  Я, кажется, знаю, как будет называться третья версия.
[02:04:18.020 --> 02:04:19.020]  Нет, z.
[02:04:20.020 --> 02:04:21.020]  Fusion 3, нет?
[02:04:22.020 --> 02:04:23.020]  Вообще да.
[02:04:24.020 --> 02:04:25.020]  Называется zfast3.
[02:04:25.020 --> 02:04:30.020]  Ну, сейчас это будем даже доживать.
[02:04:31.020 --> 02:04:32.020]  Доживать.
[02:04:33.020 --> 02:04:34.020]  И то, и то.
[02:04:35.020 --> 02:04:36.020]  Так.
[02:04:37.020 --> 02:04:38.020]  Значит, смотреть.
[02:04:39.020 --> 02:04:40.020]  Что тут?
[02:04:41.020 --> 02:04:42.020]  Значит, какая красота?
[02:04:43.020 --> 02:04:44.020]  Пока никакой.
[02:04:45.020 --> 02:04:53.020]  Ну, красота тут заключается в том, что тут, конечно, хочется напомнить одну, как говорится, одну из технологий корневухи.
[02:04:54.020 --> 02:04:58.020]  Она нам сейчас неожиданно, сейчас она неожиданно выплывет, причем в очень неожиданном месте.
[02:04:59.020 --> 02:05:03.020]  Потому что, смотрите, как бы, что делать, если вот у вас есть задача?
[02:05:04.020 --> 02:05:09.020]  У вас есть массив, и в нем есть операции там минимума на подотрезке, ну, или там суммы, или что-нибудь еще.
[02:05:10.020 --> 02:05:12.020]  А также есть операция вставки и удаления.
[02:05:15.020 --> 02:05:16.020]  Вот.
[02:05:17.020 --> 02:05:18.020]  А вы не любите писать AVL дерева.
[02:05:19.020 --> 02:05:20.020]  И Дикартова.
[02:05:21.020 --> 02:05:22.020]  И Красночерная.
[02:05:23.020 --> 02:05:24.020]  Вот.
[02:05:25.020 --> 02:05:26.020]  Деревня не любит.
[02:05:27.020 --> 02:05:28.020]  Ну вот.
[02:05:29.020 --> 02:05:30.020]  А вставка?
[02:05:31.020 --> 02:05:32.020]  К огнящикам, по блокам.
[02:05:33.020 --> 02:05:34.020]  Вот.
[02:05:35.020 --> 02:05:37.020]  А мы пойдем другим, мы пойдем другим путем.
[02:05:38.020 --> 02:05:39.020]  Все в этом мире можно написать.
[02:05:40.020 --> 02:05:42.020]  Ну, кроме того, что написать нельзя, конечно.
[02:05:43.020 --> 02:05:44.020]  Вот.
[02:05:45.020 --> 02:05:46.020]  Да.
[02:05:47.020 --> 02:05:52.020]  Я нормально.
[02:05:53.020 --> 02:05:58.020]  Так вот.
[02:05:59.020 --> 02:06:00.020]  Так вот.
[02:06:01.020 --> 02:06:02.020]  Значит, смотрите.
[02:06:03.020 --> 02:06:04.020]  Так вот, смотрите, технология.
[02:06:05.020 --> 02:06:06.020]  Еще одна технология корневухи.
[02:06:07.020 --> 02:06:12.020]  Значит, если мы хотим делать вставки, то предлагается делать такую...
[02:06:13.020 --> 02:06:15.020]  Ну, тут много вариантов, на самом деле, по-разному.
[02:06:16.020 --> 02:06:21.020]  Поэтому слушайте внимательно, потому что, возможно, эта версия, которая у вас стоит по умолчанию в голове, может сейчас не совпадать с тем, что я скажу.
[02:06:21.020 --> 02:06:25.020]  Нет, там это принципиально.
[02:06:26.020 --> 02:06:27.020]  То есть, идея такая.
[02:06:28.020 --> 02:06:30.020]  Значит, я разобью все на блоке.
[02:06:31.020 --> 02:06:32.020]  Массив.
[02:06:33.020 --> 02:06:34.020]  Так.
[02:06:35.020 --> 02:06:36.020]  Напоминаю, что у нас задача.
[02:06:37.020 --> 02:06:38.020]  Сейчас мы отвлекаемся от этого.
[02:06:39.020 --> 02:06:40.020]  Рассказываю технологию.
[02:06:41.020 --> 02:06:42.020]  То есть, у нас есть технология, у нас есть массив.
[02:06:43.020 --> 02:06:44.020]  Теперь задача, у нас есть массив.
[02:06:45.020 --> 02:06:46.020]  Мы хотим в него делать вставку.
[02:06:47.020 --> 02:06:48.020]  Эрейс.
[02:06:49.020 --> 02:06:52.020]  И там какой-нибудь, я не знаю, минимум на подотреске.
[02:06:53.020 --> 02:06:54.020]  Там еще можно...
[02:06:55.020 --> 02:06:56.020]  Вот.
[02:06:57.020 --> 02:06:58.020]  Ну, все что угодно.
[02:06:59.020 --> 02:07:00.020]  Ну, да.
[02:07:01.020 --> 02:07:02.020]  Вот.
[02:07:03.020 --> 02:07:04.020]  Значит, как мы это будем делать?
[02:07:05.020 --> 02:07:07.020]  Ну, я не буду сейчас, мы не будем сейчас забарашиваться по отложенности.
[02:07:08.020 --> 02:07:09.020]  Так вот, идея такая.
[02:07:10.020 --> 02:07:13.020]  Мы представляем этот массив.
[02:07:14.020 --> 02:07:16.020]  В виде блока.
[02:07:17.020 --> 02:07:21.020]  Значит, в виде двусвязного списка вот таких вот под массивов, таких блоков.
[02:07:27.020 --> 02:07:28.020]  Вот.
[02:07:29.020 --> 02:07:32.020]  И мы будем поддерживать мистический инвариант.
[02:07:34.020 --> 02:07:37.020]  Значит, мы введем Бубен.
[02:07:37.020 --> 02:07:38.020]  Бубен.
[02:07:41.020 --> 02:07:43.020]  Который, как всегда, корень из N.
[02:07:46.020 --> 02:07:47.020]  Бубен.
[02:07:48.020 --> 02:07:49.020]  Вот.
[02:07:50.020 --> 02:07:51.020]  Да, но какую?
[02:07:52.020 --> 02:07:53.020]  Тут сейчас просто разные варианты есть.
[02:07:54.020 --> 02:07:56.020]  Потому что там можно делать просто вставку удаления, если вы думаете, а потом каждый корень из N делать перестройку.
[02:07:57.020 --> 02:07:58.020]  Вот.
[02:07:59.020 --> 02:08:00.020]  Да.
[02:08:01.020 --> 02:08:02.020]  Ну, rebuild.
[02:08:03.020 --> 02:08:04.020]  Я люблю.
[02:08:08.020 --> 02:08:11.020]  Просто вставляют, вставляют в массив число X.
[02:08:12.020 --> 02:08:13.020]  Именно вставляют, в смысле перед позиции pos.
[02:08:14.020 --> 02:08:15.020]  То есть массив увеличивается.
[02:08:16.020 --> 02:08:17.020]  Увеличивается на один, да.
[02:08:18.020 --> 02:08:19.020]  А в эрензии уменьшается.
[02:08:20.020 --> 02:08:21.020]  На позицию X.
[02:08:22.020 --> 02:08:23.020]  Нет, на позицию pos и вставляем число X.
[02:08:24.020 --> 02:08:25.020]  Вот.
[02:08:26.020 --> 02:08:27.020]  Так вот.
[02:08:28.020 --> 02:08:30.020]  Но нет, мы сейчас ухитримся сделать так, что мы не будем делать rebuild.
[02:08:31.020 --> 02:08:33.020]  Технология будет немножко другой.
[02:08:34.020 --> 02:08:36.020]  Мы будем поддерживать инвариант.
[02:08:37.020 --> 02:08:40.020]  Потому что в каждом блоке находится не слишком мало элементов.
[02:08:41.020 --> 02:08:42.020]  И не слишком много.
[02:08:43.020 --> 02:08:44.020]  А именно в нашем случае.
[02:08:45.020 --> 02:08:47.020]  От одной-второй бубна.
[02:08:48.020 --> 02:08:50.020]  До двух бубнов.
[02:08:51.020 --> 02:08:53.020]  А это уже спритмёрш, который надеется?
[02:08:54.020 --> 02:08:55.020]  Ну, типа.
[02:08:56.020 --> 02:08:58.020]  Ооо, мне снова начало звонить тебе абонент.
[02:08:59.020 --> 02:09:00.020]  Я отказывался.
[02:09:01.020 --> 02:09:02.020]  О, господи.
[02:09:03.020 --> 02:09:04.020]  Ой, вот.
[02:09:04.020 --> 02:09:05.020]  Вот.
[02:09:07.020 --> 02:09:08.020]  Значит, нет.
[02:09:09.020 --> 02:09:10.020]  На этих блоках построен двусвязанный список.
[02:09:11.020 --> 02:09:12.020]  Каждый блок это честный массив.
[02:09:13.020 --> 02:09:15.020]  Честный вот этот под массив какой-то.
[02:09:16.020 --> 02:09:19.020]  И более того, в каждом блоке мы ещё храним эту сумму минимум или что там.
[02:09:21.020 --> 02:09:22.020]  Вот.
[02:09:23.020 --> 02:09:25.020]  Ну, то есть дальше, то есть делаем как всегда, как положено.
[02:09:26.020 --> 02:09:31.020]  Ну, во-первых, если нам там требуется запрос на подотрезки от LR, то мы всё честно делаем.
[02:09:31.020 --> 02:09:38.020]  То есть, во-первых, за O от количества блоков, коих O от корни из N, мы честно находим, в каком блоке мы живём.
[02:09:39.020 --> 02:09:43.020]  Прям проходимся, потому что мы же заранее не знаем, в какой блок идти, потому что у нас неодинаковое количество элементов, может быть.
[02:09:44.020 --> 02:09:45.020]  Вот.
[02:09:46.020 --> 02:09:53.020]  И честно проходим, то есть находим за O от корни из N, в каком блоке надо жить, и в этом блоке честно за O от корни из N считаем ответ.
[02:09:55.020 --> 02:09:58.020]  Если же мы задеваем несколько блоков целиком, ну, здесь просто.
[02:09:58.020 --> 02:10:05.020]  Во-первых, находим в каких блоках мы живём, там где-то учитываем суффикс, где-то учитываем префикс, какие-то блоки учитываем целиком.
[02:10:07.020 --> 02:10:09.020]  Так ищутся минимумы от LR.
[02:10:10.020 --> 02:10:12.020]  Как делается insert?
[02:10:13.020 --> 02:10:14.020]  Ну, insert и rest делаются очень просто.
[02:10:15.020 --> 02:10:20.020]  Мы находим просто, в какой блок надо вставлять или удалять, и честно туда вставляем.
[02:10:21.020 --> 02:10:26.020]  Прям предельно честно вставляем, и не менее честно всё пересчитываем вот этот вот минимум на подотрезке.
[02:10:28.020 --> 02:10:30.020]  Это тоже работает за корень из N.
[02:10:31.020 --> 02:10:40.020]  Но это блестяще работает, пока, ну, изначально, конечно, всё классно, потому что изначально у вас каждый блок как бы по корню из N элементов, очевидно, работает.
[02:10:41.020 --> 02:10:43.020]  Поэтому некоторое время будете жить предпевающе.
[02:10:44.020 --> 02:10:49.020]  Но в какой-то момент у вас какой-то блок по размеру будет слишком большим или слишком маленьким.
[02:10:50.020 --> 02:10:52.020]  Что делать?
[02:10:53.020 --> 02:11:00.020]  Ну, слишком большой, да. Если у вас блок достиг два корня из N, то тогда вы его просто торжественно распиливаете.
[02:11:07.020 --> 02:11:09.020]  Ну, там, да, сейчас скажем это, да.
[02:11:10.020 --> 02:11:21.020]  Начнём с простого. Если блок оказался размером вот два корня из N, да, тут вот, где-то тут два корня из N, то мы его просто распиливаем на два блока по корню из N.
[02:11:22.020 --> 02:11:26.020]  Да, разумеется. Мы это делаем за O от корня из N.
[02:11:27.020 --> 02:11:29.020]  Что мы ещё делаем?
[02:11:30.020 --> 02:11:34.020]  Ну, ещё может быть проблема, что блок стал слишком мелким.
[02:11:35.020 --> 02:11:38.020]  Что мы делаем в этом случае?
[02:11:39.020 --> 02:11:42.020]  В этом случае мы делаем следующее.
[02:11:43.020 --> 02:11:49.020]  У нас есть блок, одна вторая корня из N, и рядом с ней есть кто-то.
[02:11:49.020 --> 02:11:57.020]  Что мы тогда с ним делаем?
[02:11:58.020 --> 02:12:02.020]  Так вот, идея. Мы их просто объединяем, и получается блок.
[02:12:03.020 --> 02:12:08.020]  Блок получается размера от корня из N до двух с половиной корня из N.
[02:12:08.020 --> 02:12:14.020]  Ну, всё, что нам остаётся, это сказать теперь следующее.
[02:12:15.020 --> 02:12:23.020]  Что если у нас блок, допустим, оказался, вот тут надо очень аккуратно для анализа.
[02:12:24.020 --> 02:12:36.020]  Что если оказалось, что он больше, чем даже не два корня из N, а, ну, на всякий случай, ну, допустим, там неважно особо будет.
[02:12:37.020 --> 02:12:40.020]  Один семьдесят пять корень из N.
[02:12:41.020 --> 02:12:44.020]  Ну, сейчас увидите для чего это нужно.
[02:12:45.020 --> 02:12:47.020]  Тогда мы его распиливаем на двое.
[02:12:48.020 --> 02:12:50.020]  Что?
[02:12:51.020 --> 02:12:55.020]  А суть одна. Ой, любую константу на этом отрезке, даже чуть более широко, можете выбрать.
[02:12:56.020 --> 02:13:00.020]  Сейчас все поймём почему и по каким принципам.
[02:13:01.020 --> 02:13:03.020]  Ну, я беру мне так как-то красивше.
[02:13:03.020 --> 02:13:09.020]  То есть у нас блок теперь не от одной второй до двух корня из N, а до один из семьдесят пять корня из N.
[02:13:10.020 --> 02:13:12.020]  Да, вот очень важно для нас следующее.
[02:13:13.020 --> 02:13:21.020]  Нам очень важно, что если мы только что делали какую-то операцию с блоком или парой блоков, мы затратили θ от корня операции.
[02:13:21.020 --> 02:13:23.020]  θ, не O от θ.
[02:13:24.020 --> 02:13:35.020]  Поэтому нам очень хотелось бы, чтобы в следующий раз, когда с этим отрезком у нас что-то ещё будет, это произошло через то же там омега от корня операции.
[02:13:38.020 --> 02:13:42.020]  Поэтому, да, вот мы теперь убеждаемся, то есть мы теперь, смотрите, что гарантируем.
[02:13:42.020 --> 02:13:56.020]  Мы теперь гарантируем, что после вот этой операции у нас будет либо блок размера от корня из N до один семьдесят пять корня из N, либо будут два блока размера, соответственно, от...
[02:13:57.020 --> 02:14:00.020]  Ой, что-то я усложнил себе жизнь, конечно, но ладно.
[02:14:01.020 --> 02:14:05.020]  От ноль точка там, восемьсот сколько-то там. Сколько там?
[02:14:06.020 --> 02:14:07.020]  Давай полтора.
[02:14:08.020 --> 02:14:10.020]  Да, восемьсот семьдесят пять корня из N, да.
[02:14:11.020 --> 02:14:13.020]  Да, может ты и прав, но ладно.
[02:14:14.020 --> 02:14:16.020]  Но мне просто хотелось, чтобы там побольше расстояния было.
[02:14:17.020 --> 02:14:20.020]  Вот, до, ну, соответственно, один точка двадцать пять.
[02:14:25.020 --> 02:14:33.020]  То есть в переводе говоря, каждый блок после, то есть блок после вот этого θ от корня из N распилов там мержей и так далее, он лежит, короче, от...
[02:14:33.020 --> 02:14:37.020]  Нет, это если он не распилился, то такой, а если распилился, то такой.
[02:14:38.020 --> 02:14:42.020]  В сумме, да, получается, что от ноль восемьсот семьдесят пять до один точка семьдесят пять.
[02:14:43.020 --> 02:14:45.020]  Ну, то есть что это означает?
[02:14:46.020 --> 02:14:54.020]  Это означает, что если, что конкретно этот блок, ну, то есть мы не можем гарантировать, что на следующей операции этот блок не захочет помержить у себя сосед,
[02:14:54.020 --> 02:15:03.020]  но мы гарантируем, что в следующий раз конкретно этот блок захочет распилиться или смержиться не ранее, чем через, соответственно, ноль двадцать пять корней из N.
[02:15:06.020 --> 02:15:13.020]  Ну, потому что у него сейчас один, потому что он сейчас один семьдесят пять или ноль восемьсот семьдесят пять, ну, там где-то между ними.
[02:15:14.020 --> 02:15:19.020]  Ну, то есть мы не можем гарантировать, что на следующей операции этот блок не захочет помержить у себя сосед,
[02:15:19.020 --> 02:15:24.020]  потому что он сейчас один семьдесят пять или ноль восемьсот семьдесят пять, ну, там где-то между ними.
[02:15:25.020 --> 02:15:30.020]  А он должен, чтобы захотеть чего-то распилиться или чтобы захотеть распилиться, он должен стать хоть два корни из N.
[02:15:31.020 --> 02:15:34.020]  А чтобы захотеть смержиться, он должен захотеть стать ноль пять.
[02:15:36.020 --> 02:15:38.020]  Да, пожалуй, действительно, может и, ну, вот, ну, неважно.
[02:15:39.020 --> 02:15:43.020]  Вот. Так что отсюда вот такая, вот получается, отсюда следует.
[02:15:43.020 --> 02:15:52.020]  Отсюда следует. То есть тогда получается, что там, условно, на каждое, там, действительно, то есть интерес получается такой,
[02:15:53.020 --> 02:16:02.020]  что после распила за от корней из N вы на каждый, соответственно, отрезок можете положить по корню из N монетку.
[02:16:05.020 --> 02:16:08.020]  Нет, хотя нет. Точнее так, с каждой, не так.
[02:16:08.020 --> 02:16:13.020]  То есть учетный анализ, то есть я теперь утверждаю, что учетная стоимость всех этих,
[02:16:14.020 --> 02:16:18.020]  каждый теперь инсерт и рейс за это будет теперь работать, будет она за корень из N.
[02:16:20.020 --> 02:16:26.020]  Идея будет простая. Каждый инсерт и каждый рейс вы будете класть на блок монетку.
[02:16:29.020 --> 02:16:34.020]  И тогда утверждается, что когда придет время именно этот отрезок с кем-то там мержить или его сплитить,
[02:16:35.020 --> 02:16:37.020]  то у вас наберется тета от корень из N монеток.
[02:16:38.020 --> 02:16:41.020]  Останется только подогнать курс валют и, собственно, все.
[02:16:42.020 --> 02:16:50.020]  А зачем нам вообще амортизация здесь? Как у нас может пойти так, что, ну, если она за честный, не за корень из N сделается?
[02:16:51.020 --> 02:16:52.020]  А что такое честный корень из N?
[02:16:53.020 --> 02:16:55.020]  Ну, в смысле, за реальное время, не за корень из N.
[02:16:56.020 --> 02:16:57.020]  А как?
[02:16:58.020 --> 02:17:04.020]  Нет, ну, вот я и спрашиваю, что может случиться, что за корень из N мы не сделаем?
[02:17:04.020 --> 02:17:05.020]  Нет, что такое честный?
[02:17:06.020 --> 02:17:11.020]  Ну, может случиться, что если вы будете делать инсерты в один и тот же блок в одно и то же место, то у вас блок будет расширяться.
[02:17:12.020 --> 02:17:18.020]  А тогда, а вы ж как бы тут проблема в том, что когда вы что-то вставляете, вы на этом блоке должны вот этот минимум поддерживать и пересчитывать.
[02:17:19.020 --> 02:17:21.020]  А пересчитываете вы его в честную.
[02:17:21.020 --> 02:17:30.020]  Просто в другом. Ты сейчас показал, что сплитов и мержи будут на самом деле по отку.
[02:17:32.020 --> 02:17:34.020]  Ну, можно и так сказать, да, и что.
[02:17:35.020 --> 02:17:41.020]  Или нет. Или даже суммарное время, которое уйдет на сплиты и мержи будет по отку, а не по отку корней из N.
[02:17:42.020 --> 02:17:44.020]  Но нам это не очень важно, в общем-то.
[02:17:45.020 --> 02:17:50.020]  У нас и так уже есть куберни из N, а симпатика ответ на все остальные запросы.
[02:17:51.020 --> 02:17:58.020]  Мы же могли каждый раз честную, в коем случае, блок разбивать или мержить любыми соседними, потому что они все корректных размеров.
[02:18:00.020 --> 02:18:04.020]  Но при желании да, но при этом контролировать, что они адекватных размеров.
[02:18:05.020 --> 02:18:06.020]  Что такое куб?
[02:18:07.020 --> 02:18:08.020]  Количество запросов.
[02:18:09.020 --> 02:18:11.020]  Так, нет, ну теоретически, наверное, могли, да.
[02:18:11.020 --> 02:18:15.020]  Возможно, нам просто эта идея понадобится сейчас дальше, что мы очевидно, что мы проходим.
[02:18:16.020 --> 02:18:19.020]  Ну да. Нет, ну тут по-разному можно было.
[02:18:20.020 --> 02:18:25.020]  Ну, правда, к сожалению, не сейчас, потому что, по-моему, время у нас потихоньку вышло.
[02:18:26.020 --> 02:18:27.020]  Очень жаль.
[02:18:28.020 --> 02:18:30.020]  Да, оно, к сожалению, вышло.
[02:18:31.020 --> 02:18:37.020]  Но в будущем, значит, просто теперь такая тизера на следующий раз.
[02:18:37.020 --> 02:18:41.020]  То есть в следующий раз там вот у нас будет работать вот подобного рода технология.
[02:18:42.020 --> 02:18:46.020]  Только Бубен будет работать, будет равен не коррю, а логарифму.
[02:18:54.020 --> 02:18:58.020]  Нет, W в степени 1,5 это в плавленом дереве будет.
[02:18:59.020 --> 02:19:03.020]  А в игре к фасте мы пока все-таки будем постепенно переходить это.
[02:19:07.020 --> 02:19:09.020]  Амортизировано за то, что надо, да.
[02:19:17.020 --> 02:19:21.020]  Да, и когда делаем рейс, тоже кладем монетку на блок, в котором мы это сделали.
[02:19:22.020 --> 02:19:29.020]  Утверждение. Когда придет время, отрезок там станет слишком маленьким и слишком большим, монеток будет тета от корени Зен.
[02:19:31.020 --> 02:19:32.020]  Почему?
[02:19:32.020 --> 02:19:35.020]  Можем сказать, что мы каждый раз кладем 5 монеток?
[02:19:36.020 --> 02:19:37.020]  Пожалуйста, пожалуйста, да.
[02:19:38.020 --> 02:19:41.020]  Ну, это я имел в виду, когда сказал, подгоним курс валют.
[02:19:42.020 --> 02:19:43.020]  Вот, а то мало.
[02:19:44.020 --> 02:19:45.020]  Вот.
[02:19:46.020 --> 02:19:49.020]  В идеале N у нас же меняется, да, и мы в соответствии с этим тоже работаем.
[02:19:50.020 --> 02:19:51.020]  Или Бубен у нас фиксирован?
[02:19:52.020 --> 02:19:53.020]  Ну нет, но N у нас...
[02:19:54.020 --> 02:19:56.020]  Нет, ну обычно тут подозревается, что N у нас видимо известен заранее.
[02:19:57.020 --> 02:19:58.020]  Ну максимально N.
[02:19:59.020 --> 02:20:00.020]  Можешь сказать, что корень Зен плюс пол.
[02:20:00.020 --> 02:20:01.020]  Ну можно, да.
[02:20:02.020 --> 02:20:05.020]  Нет, ну можно там всегда подгонять, можно перестраивать, там все можно.
[02:20:06.020 --> 02:20:07.020]  Что будет, если динамически что-нибудь будет?
[02:20:08.020 --> 02:20:16.020]  Нет, а можно N действительно поддерживать прям динамически, потому что когда у вас N увеличился на единицу, корень увеличился не то чтобы сильно.
[02:20:17.020 --> 02:20:21.020]  Не то чтобы сильно, но может возникнуть момент, когда все блоки перестроить.
[02:20:22.020 --> 02:20:24.020]  Да, неприятно, неприятно.
[02:20:24.020 --> 02:20:25.020]  Ну тут да.
[02:20:26.020 --> 02:20:29.020]  Хотя тут, по-моему, да, тут уже лучше перестройку каждый, корень и Зен раз делать.
[02:20:30.020 --> 02:20:33.020]  Не знаю, я на Олимпудке все себе написал.
[02:20:35.020 --> 02:20:41.020]  Ну, нет, это-то да, но я как бы это рассказываю только для того, что вот выиграть FastTri вот ровно эта технология потребуется.
[02:20:42.020 --> 02:20:48.020]  То есть оказывается, просто фишка такая, что там просто идея будет в том, что если у вас это будет не корень, а логарифм,
[02:20:48.020 --> 02:20:55.020]  то если вы будете быстро находить в какой блок вставлять или удалять, то тогда все остальное у вас будет работать тоже за типо логарифм.
[02:21:04.020 --> 02:21:07.020]  Да, безусловно, но я просто вот на этом примере привел, что вот можно делать и так, и вот да.
[02:21:08.020 --> 02:21:12.020]  То есть нет, если мы там сможем в игре FastTri сделать D-ложку, будет круто, конечно, но я что-то в этом не уверен.
[02:21:12.020 --> 02:21:16.020]  Ну да, но там, там будет, там поверх будет Xfast, вот не просто так.
[02:21:17.020 --> 02:21:26.020]  Не, почему отстой, там будет N поделить на лог W просто вершин, ну вот это в блоке, поэтому как бы вот это вот там, типа это будет круто, а памяти будет вот N.
[02:21:26.020 --> 02:21:30.020]  Сейчас, что? То есть будет W, а не лог N?
[02:21:31.020 --> 02:21:40.020]  Нет, почему? Нет, successor, predecessor как бы там за адекватную точку, а реальные инсорты и рейсы туда нам потребуется делать редко, поэтому как бы амортизировано это все скушать.
[02:21:41.020 --> 02:21:42.020]  Ну вот поймешь.
[02:21:43.020 --> 02:21:45.020]  А вот это, как говорится, подробнее в следующей серии.
