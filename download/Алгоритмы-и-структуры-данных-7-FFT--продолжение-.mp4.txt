[00:00.000 --> 00:14.000]  Здравствуйте, продолжаем про FFT. Несколько задач посмотрим про многочлены, как можно их решать с помощью FFT.
[00:14.000 --> 00:20.000]  Начну. Первая промежуточная задача – это деление многочленов с остатком.
[00:20.000 --> 00:26.000]  Мы научились их умножать. Теперь представьте, наша задача – два многочлена поделить один над другой с остатком.
[00:26.000 --> 00:43.000]  Вывести частные, вывести остаток. Чтобы не заботиться о дробях, давайте сразу в ZP переместимся, чтобы у всех чисел были обратные.
[00:43.000 --> 00:51.000]  И можно было делить спокойно, если надо, возводя обратные по модульбюря. Как вы предлагаете лог квадрат?
[00:51.000 --> 01:05.000]  Ну, за сколько угодно, быстрее. Нет, будет у вас NM.
[01:05.000 --> 01:15.000]  Ну хорошо, чтобы это научиться делать, давайте сначала промежуточную задачу решим.
[01:15.000 --> 01:23.000]  Давайте прямо так напишу задачу. Перед тем, как делить, давайте научимся находить обратные по модулю.
[01:23.000 --> 01:49.000]  Пусть P многочлен, а хотим найти P в минус первый по модулю х в маленькой МТ.
[01:49.000 --> 01:54.000]  Что такое P в минус первый? Это обратный многочлен, такой, что при домножении на P будет единица по модулю.
[01:54.000 --> 02:06.000]  То есть это такой многочлен, давайте его назову как-нибудь Q, что произведение Q на P сравнимо с единицей по модулю х в МТ.
[02:06.000 --> 02:15.000]  Ну, что такое по модулю х в МТ? Если у вас есть многочлены по модулю х в МТ, значит по факту вы просто отбрасываете все коэффициенты, начиная с МТ.
[02:15.000 --> 02:22.000]  Потому что все мономы, в которых х хотя бы в МТ степени при взятии по модулю обнуляться, их, соответственно, не будет.
[02:22.000 --> 02:30.000]  То есть по факту это значит, что произведение вот этих двух многочленов это единица плюс, возможно, еще какие-то коэффициенты старше, хотя бы М и старше.
[02:30.000 --> 02:39.000]  Да, это мы живем в ZP, то есть все коэффициенты у меня из ZP.
[02:39.000 --> 02:44.000]  Ну, конечно, П там достаточно хороший, чтобы можно было в Fourier там запускать.
[02:44.000 --> 02:51.000]  Вот. Так, ладно. Значит, будем это делать следующим образом.
[02:51.000 --> 03:02.000]  Во-первых, мы давайте будем считать, что M это степень двойки, потому что, скажем, если меня просят найти обратный по модулю х в десятой, то если я найду обратный по модулю х в шестнадцатой, то я сделаю только лучше.
[03:02.000 --> 03:07.000]  Ну, потому что вот как раз модуль х в МТ, значит, я коэффициенты начинаю с кого-то отбрасывать.
[03:07.000 --> 03:11.000]  Поэтому давайте сразу считать, что M это степень двойки. Если надо, округлим вверх до ближайшей степени двойки.
[03:11.000 --> 03:20.000]  И теперь давайте научимся переходить от M к 2M. То есть, например, пусть я нашел обратный по модулю х в МТ, давайте найдем обратный по модулю х в степени 2M.
[03:20.000 --> 03:22.000]  Значит, ну начнем с M равно единице.
[03:22.000 --> 03:30.000]  Значит, обратный по модулю х в МТ для M равно единице.
[03:30.000 --> 03:40.000]  Вот. Но здесь все просто. Если у нас многочлен P, и мы хотим найти обратный к нему по модулю х, то, значит, все коэффициенты, начиная с х, можно отбросить.
[03:40.000 --> 03:43.000]  И по факту мне нужно просто обратный к младшему члену.
[03:44.000 --> 03:46.000]  То есть, если P от х это что-то вот такое,
[03:53.000 --> 03:57.000]  вот тогда в качестве обратного можно взять просто 1 на 0.
[04:00.000 --> 04:04.000]  Вот. Ну более того, только такое мы взять и можем.
[04:06.000 --> 04:11.000]  Да, потому что по модулю х у нас все коэффициенты, начиная вот отсюда отбрасываться, мне нужен обратный.
[04:11.000 --> 04:13.000]  К этому это как раз 1 на 0.
[04:13.000 --> 04:18.000]  Значит, в частности, если а 0 не 0, то мы так сделать можем, а если а 0 это 0, то мы так сделать не можем.
[04:19.000 --> 04:24.000]  Вот. Ну и вроде логично, представьте себе, что если бы у вас был здесь 0, тогда бы у вас это все делилось на х.
[04:24.000 --> 04:27.000]  То есть, вот представьте, я отслагаю моменту, тогда все делится на х.
[04:27.000 --> 04:29.000]  Понятно, где вы не можете найти обратный по модулю х.
[04:30.000 --> 04:34.000]  Что-то кратно х при домножении на что-то не может быть единицей по модулю.
[04:34.000 --> 04:36.000]  Оно обязательно должно делиться на х.
[04:36.000 --> 04:41.000]  Вот. Поэтому мы поняли, что если младший коэффициент 0, то задача не решаемая.
[04:41.000 --> 04:43.000]  Если не 0, то решаемая.
[04:44.000 --> 04:45.000]  Понятно?
[04:45.000 --> 04:47.000]  Вот. Ну давайте подпишу, что а 0 не 0.
[04:53.000 --> 04:55.000]  Ну дойдем до этого еще.
[04:56.000 --> 04:58.000]  Там это проблемы не составит, кажется.
[05:01.000 --> 05:05.000]  Ну, наверное, предпочитать будет сложно, потому что p большое.
[05:05.000 --> 05:07.000]  Ну, запускаем там...
[05:08.000 --> 05:12.000]  Обратный по модулю, это а в степени p-2, потому что мало термин фирма.
[05:12.000 --> 05:15.000]  Вот. Значит обратный можно там, в бинарном возрасте степень посчитать.
[05:16.000 --> 05:18.000]  Ну, логарифом. Ну, это не очень сложно.
[05:21.000 --> 05:23.000]  Я про это, наверное, не буду говорить, про всякие обращения.
[05:23.000 --> 05:27.000]  Ну, если надо, посчитаем. Но так это как бы, я считаю, что как-то встроенно делается, и бог с ним.
[05:28.000 --> 05:33.000]  Вот. Все. Теперь давайте считать, что у меня по модулю хвм-то и нашелся обратный.
[05:33.000 --> 05:35.000]  Я хочу найти обратный по модулю хвм-то.
[05:36.000 --> 05:43.000]  Значит, пусть q0 таково, что q0 это обратный по модулю хвм-то.
[05:45.000 --> 05:55.000]  Хотим найти q1, давайте просто q, такой, что q на p это 1 по модулю хвм-то.
[05:58.000 --> 05:59.000]  Вот.
[06:00.000 --> 06:04.000]  Хорошо. Ну, давайте я его искать буду в следующем виде.
[06:07.000 --> 06:13.000]  Значит, я оставлю первые m-коэффициентов из q0 и допишу еще какие-то m-коэффициентов.
[06:17.000 --> 06:20.000]  Значит, это опять-таки многочлен степени меньше, чем m.
[06:20.000 --> 06:24.000]  Вот. Ну, тоже вроде логичное предположение, потому что что мне нужно?
[06:24.000 --> 06:29.000]  Смотрите, q0 у меня был многочлен степени m-1, да, потому что если я все рассматриваю по модулю хвм-то,
[06:29.000 --> 06:32.000]  то мне достаточно только коэффициенты от 0 до m-1.
[06:33.000 --> 06:37.000]  Дальше я расширяю пространство, я говорю, что у меня теперь коэффициентов вдвое больше,
[06:38.000 --> 06:41.000]  то есть у меня могут добавиться какие-то коэффициенты в более старших степенях.
[06:41.000 --> 06:45.000]  Ну, понятно, что вот эти вот, они не влияют на поведение при маленьких степенях.
[06:45.000 --> 06:47.000]  Поэтому маленькие степени можно оставить такие, как было.
[06:49.000 --> 06:53.000]  Вот. Ну, соответственно, а вот старшие, все начиная с m-то, какие-то.
[06:53.000 --> 06:55.000]  Вот давайте скажем, что это многочлен t, сейчас будем t искать.
[06:56.000 --> 07:01.000]  Значит, более того, я представлю p в виде таком же самом,
[07:02.000 --> 07:04.000]  p0 после хвм-ты на p1.
[07:05.000 --> 07:07.000]  Ну, то есть опять-таки это какой-то большой многочлен,
[07:07.000 --> 07:09.000]  я скажу, что его младше m-коэффициентов это p0,
[07:09.000 --> 07:11.000]  вторая группа многочленов это p1.
[07:12.000 --> 07:13.000]  Вот. Хорошо.
[07:13.000 --> 07:15.000]  Значит, давайте напишем, что у меня уже есть.
[07:15.000 --> 07:17.000]  У меня есть вот это.
[07:17.000 --> 07:21.000]  И здесь понятное дело, что вот в этом равенстве тоже участвует только p0.
[07:21.000 --> 07:24.000]  Вот здесь вот p1 никак не влияет, поэтому я ему могу выкинуть
[07:24.000 --> 07:29.000]  и написать, что q0 на p0, это единица по модулю хвм-ты.
[07:31.000 --> 07:32.000]  Вот.
[07:32.000 --> 07:33.000]  Ну, вот.
[07:33.000 --> 07:37.000]  q0 на p0, это единица по модулю хвм-ты.
[07:42.000 --> 07:43.000]  Так. Хорошо.
[07:43.000 --> 07:45.000]  Ну, давайте напишем в точности, что это значит.
[07:45.000 --> 07:48.000]  Давайте напишем в точности значение вот этого многочлена.
[07:48.000 --> 07:53.000]  Давайте скажем, что это 1 плюс хвм-ты на какое-то, скажем, r.
[07:54.000 --> 07:58.000]  Мы знаем, что если это единица по модулю хвм-ты, значит первые m-коэффициентов
[07:58.000 --> 08:00.000]  это только 1 и куча нулей,
[08:00.000 --> 08:04.000]  и возможно, что какие-то еще более старшие, начиная с хвм-ты.
[08:05.000 --> 08:09.000]  Ну, то есть если надо, я их просто переножил, честно, и получил полное представление.
[08:09.000 --> 08:13.000]  Коэффициентов с 1 по m-1 нет, есть только возможность м-то.
[08:14.000 --> 08:15.000]  Вот. Окей.
[08:15.000 --> 08:16.000]  Значит, это у меня есть.
[08:16.000 --> 08:18.000]  А теперь давайте напишем, что я хочу вот здесь вот.
[08:18.000 --> 08:21.000]  Я хочу, чтобы q на p равнялся единицей по модуле хвм-ты.
[08:21.000 --> 08:23.000]  Давайте распишем, что такое q на p.
[08:24.000 --> 08:32.000]  Значит, это q0 плюс хвм-ты t на p0 плюс хвм-ты p1.
[08:34.000 --> 08:36.000]  Вот. Ну, опять-таки, так.
[08:36.000 --> 08:39.000]  Здесь мне надо подписать, что это происходит по модуле хвм-ты.
[08:41.000 --> 08:44.000]  Да, понятно. Ну, короче, я не рассматриваю коэффициенты с номерами 2m и больше.
[08:44.000 --> 08:47.000]  Потому что если я сейчас живу по модуле хвм,
[08:47.000 --> 08:49.000]  то мне коэффициенты, начиная с этого, не нужны.
[08:49.000 --> 08:51.000]  Поэтому p я вот так вот просто обрубаю.
[08:51.000 --> 08:54.000]  Там есть какие-то еще более старшие в p коэффициенты.
[08:54.000 --> 09:00.000]  Но они мне сейчас значения вот в этом вот, в этом кольце значения не имеют.
[09:01.000 --> 09:02.000]  Ну, раскрываем.
[09:03.000 --> 09:05.000]  Значит, здесь будет в частности наша q0p0,
[09:05.000 --> 09:06.000]  которую мы только что посчитали.
[09:08.000 --> 09:13.000]  Хвм-ты у меня будет домножаться на q0p1 плюс p0t.
[09:14.000 --> 09:19.000]  Вот. Ну, и останется хвм-ты на что-то там, на tp1.
[09:19.000 --> 09:23.000]  Вот. Но если, повторяю, мы живем в этом кольце по модуле хвм-ты,
[09:24.000 --> 09:25.000]  то вот это зануляется.
[09:26.000 --> 09:29.000]  Потому что это хвм-ты, это какие-то ногощины, значит, это будет 0 по модулю.
[09:30.000 --> 09:31.000]  Согласны?
[09:32.000 --> 09:33.000]  Ну, вот.
[09:33.000 --> 09:34.000]  Значит, переписываю.
[09:35.000 --> 09:37.000]  Ну, и давайте q0p0 сразу распишем, как оно у нас есть.
[09:40.000 --> 09:43.000]  1 плюс хвм-ты r, хвм-ты сразу вынесу за скобку,
[09:43.000 --> 09:47.000]  а у меня останется r плюс q0p1 плюс p0t.
[09:47.000 --> 09:49.000]  Вот. Это все по модулю хвм-ты.
[09:49.000 --> 09:52.000]  И мне хотелось бы, чтобы это внезапно была единица.
[09:53.000 --> 09:54.000]  Ау?
[09:55.000 --> 09:56.000]  Ну, вон же.
[10:03.000 --> 10:05.000]  Вот. Мне хочется, чтобы было так.
[10:05.000 --> 10:07.000]  Напомню, я хочу найти такое t, чтобы это было верно.
[10:08.000 --> 10:12.000]  Для этого необходимо и достаточно, чтобы вот эта штука делилась на хвм-ты.
[10:12.000 --> 10:14.000]  Потому что тогда единичка будет единичкой,
[10:14.000 --> 10:17.000]  а здесь как раз что-то кратное хвм-ты, то есть она как раз и нулится по модулю.
[10:19.000 --> 10:22.000]  Окей. То есть мне нужно решить сейчас такое сравнение,
[10:22.000 --> 10:24.000]  что p0t
[10:25.000 --> 10:27.000]  сравнимо с минус r
[10:27.000 --> 10:29.000]  минус q0p1
[10:30.000 --> 10:32.000]  по модулю хвм-ты.
[10:34.000 --> 10:36.000]  Чтобы это делилось на хвм-ты.
[10:38.000 --> 10:39.000]  Ну, и вот.
[10:40.000 --> 10:42.000]  Чтобы это делилось на хвм-ты,
[10:42.000 --> 10:44.000]  я просто перенес вот эти вот штуки направо.
[10:44.000 --> 10:46.000]  Мне надо, чтобы выполнялось вот это.
[10:49.000 --> 10:50.000]  Да?
[10:52.000 --> 10:54.000]  Ну, что дальше делать, скажите, пожалуйста?
[10:57.000 --> 11:00.000]  умножить на p0 в минус 1, потому что мы уже p0 в минус 1
[11:00.000 --> 11:02.000]  и по этому модулю посчитали.
[11:02.000 --> 11:03.000]  А мы знаем, что p0
[11:03.000 --> 11:05.000]  на q0
[11:05.000 --> 11:06.000]  это 1 по модулю хвм-ты.
[11:06.000 --> 11:08.000]  Поэтому если сейчас обе части этого сравнения
[11:08.000 --> 11:10.000]  домножим на q0,
[11:10.000 --> 11:12.000]  у меня p0 сократится слева, а справа
[11:12.000 --> 11:14.000]  появится просто умножитель q0.
[11:14.000 --> 11:16.000]  То есть вот давайте напишу, я домножу это
[11:16.000 --> 11:18.000]  на q0
[11:18.000 --> 11:20.000]  с обеих сторон.
[11:20.000 --> 11:22.000]  Слева у меня q0 на p0
[11:22.000 --> 11:24.000]  заединичится, останется просто t.
[11:24.000 --> 11:26.000]  Ну, а справа будет там какая-то гадость.
[11:26.000 --> 11:28.000]  q0
[11:28.000 --> 11:30.000]  умноженное на минус r
[11:30.000 --> 11:32.000]  минус q0
[11:32.000 --> 11:34.000]  p1
[11:34.000 --> 11:36.000]  хвм-ты.
[11:36.000 --> 11:38.000]  Вот.
[11:38.000 --> 11:40.000]  То есть чудесным образом мы смогли разрешить
[11:40.000 --> 11:42.000]  это сравнение относительно многочленов,
[11:42.000 --> 11:44.000]  зная обратный к p0.
[11:48.000 --> 11:50.000]  Все, мы получили явное выражение для t.
[11:50.000 --> 11:52.000]  Причем его можно спокойно посчитать.
[11:52.000 --> 11:54.000]  Смотрите, q0 мне известно с предыдущего шага,
[11:54.000 --> 11:56.000]  это обратный к p0 по модулю хвм-ты.
[11:56.000 --> 11:58.000]  Значит, это мне известно. r я тоже
[11:58.000 --> 12:00.000]  посчитать могу, просто перемножив честно q0
[12:00.000 --> 12:02.000]  на p0 и оставив ставшие коэффициенты.
[12:02.000 --> 12:04.000]  Здесь q0, здесь p1,
[12:04.000 --> 12:06.000]  p1 в общей части инпута.
[12:06.000 --> 12:08.000]  Здесь я перемножаю два многочлена,
[12:08.000 --> 12:10.000]  вычитаю, домножаю
[12:10.000 --> 12:12.000]  еще на многочлен.
[12:12.000 --> 12:14.000]  И отбрасываю все коэффициенты,
[12:14.000 --> 12:16.000]  начиная с m-того, потому что если я живу в
[12:16.000 --> 12:18.000]  х-тепени m, то мне коэффициенты нужны только
[12:18.000 --> 12:20.000]  от 0 до m-1.
[12:20.000 --> 12:22.000]  Все.
[12:24.000 --> 12:26.000]  Ну, конкретно вот этот шаг
[12:26.000 --> 12:28.000]  да, за m-логом, за вот
[12:28.000 --> 12:30.000]  m-логом работает, да.
[12:30.000 --> 12:32.000]  Вот. Да, давайте это напишем, что этот шаг
[12:32.000 --> 12:34.000]  мы сделали за
[12:34.000 --> 12:36.000]  o от m-лог m.
[12:36.000 --> 12:38.000]  Потому что все многочлены
[12:38.000 --> 12:40.000]  у меня сейчас состоят из m-коэффициентов,
[12:40.000 --> 12:42.000]  от 0 до m-1.
[12:42.000 --> 12:44.000]  Здесь перемножение двух таких многочленов,
[12:44.000 --> 12:46.000]  ну, сложение вообще за линию работает,
[12:46.000 --> 12:48.000]  и еще перемножение многочленов тоже там m на m порядка.
[12:50.000 --> 12:52.000]  Супер. Мы тем самым научились переходить
[12:52.000 --> 12:54.000]  от вот такого вот к такому.
[12:54.000 --> 12:56.000]  То есть мы научились наращивать
[12:56.000 --> 12:58.000]  степень х в двое.
[13:00.000 --> 13:02.000]  За m-логом.
[13:02.000 --> 13:04.000]  Ну, все. А теперь, если у меня есть база
[13:04.000 --> 13:06.000]  для х-тепени 1,
[13:06.000 --> 13:08.000]  я потом от него перехожу по модулю
[13:08.000 --> 13:10.000]  х в квадрате, х в четвертый, х в восьмой, х в шестнадцатый и так далее,
[13:10.000 --> 13:12.000]  пока не леду до
[13:12.000 --> 13:14.000]  нужной мне достаточно большой степени х.
[13:14.000 --> 13:16.000]  Вот. Значит, до сколько это работает?
[13:20.000 --> 13:22.000]  Значит, мне нужно просуммировать
[13:22.000 --> 13:24.000]  все степени двойки,
[13:24.000 --> 13:26.000]  давайте так напишу, да,
[13:26.000 --> 13:28.000]  m это степень двойки,
[13:28.000 --> 13:30.000]  m не больше, чем
[13:30.000 --> 13:32.000]  m большое.
[13:32.000 --> 13:34.000]  Мне нужно просуммировать m-лог m.
[13:38.000 --> 13:40.000]  Ну, правда, да, конечно.
[13:40.000 --> 13:42.000]  Ну, давайте я вот так вот сделаю просто.
[13:44.000 --> 13:46.000]  Да, да, это правда, конечно.
[13:48.000 --> 13:50.000]  Вот.
[13:50.000 --> 13:52.000]  Ну, понятно же, просто на каждом шаге m-лог m
[13:52.000 --> 13:54.000]  по всем степням двойки суммируем от единицы
[13:54.000 --> 13:56.000]  до m большого. Ну, вот я
[13:56.000 --> 13:58.000]  скажу, что это будет просто m-лог m.
[14:04.000 --> 14:06.000]  Надо?
[14:08.000 --> 14:10.000]  Ну, смотрите, если бы у меня, вот давайте
[14:10.000 --> 14:12.000]  представим себе идеальный мир, где логарифма не было бы.
[14:12.000 --> 14:14.000]  Тогда бы я складывал просто степень двойки
[14:14.000 --> 14:16.000]  1, 2, 4, 8 и так далее. Мы знаем, что их сумма,
[14:16.000 --> 14:18.000]  это максимальная из них, там, умноженная
[14:18.000 --> 14:20.000]  на 2. Да, поэтому сумма
[14:20.000 --> 14:22.000]  просто была бы m большая.
[14:22.000 --> 14:24.000]  Ну, а теперь вы каждую логарифму можете оценить
[14:24.000 --> 14:26.000]  в лог m большое.
[14:26.000 --> 14:28.000]  Ну, и получить немедленно вот это вот.
[14:32.000 --> 14:34.000]  Да, да, да. Ну, то есть на самом деле, как бы вы
[14:34.000 --> 14:36.000]  делаете фурье для многошленов длины
[14:36.000 --> 14:38.000]  1, 2, 4, 8, 16 и так далее.
[14:38.000 --> 14:40.000]  Ну, понятно, что только последний у вас самый
[14:40.000 --> 14:42.000]  сложный, все остальные они вообще копеечные.
[14:42.000 --> 14:44.000]  По сравнению с последним.
[14:44.000 --> 14:46.000]  Все, обратили.
[14:46.000 --> 14:48.000]  Номана?
[14:50.000 --> 14:52.000]  Вот. На самом деле
[14:52.000 --> 14:54.000]  техника вот эта вот
[14:54.000 --> 14:56.000]  весьма
[14:56.000 --> 14:58.000]  ну, такая, весьма общая.
[14:58.000 --> 15:00.000]  Довольно много задач можно решать в таком виде.
[15:00.000 --> 15:02.000]  То есть, смотрите, я хочу там найти что-то
[15:02.000 --> 15:04.000]  по модулю x в м-той. Давайте я
[15:04.000 --> 15:06.000]  буду итеративно расширять
[15:06.000 --> 15:08.000]  это m в двое. То есть, представьте, что я
[15:08.000 --> 15:10.000]  решил задачу по какому-то маленькому модулю, там
[15:10.000 --> 15:12.000]  x в м-той, вот, например, такое.
[15:12.000 --> 15:14.000]  Хочу посчитать x в 2 м-той, по модулю x в 2 м-той.
[15:14.000 --> 15:16.000]  То же самое сделать. Ну, вот если какую-то магию
[15:16.000 --> 15:18.000]  поделать, то обычно как раз
[15:18.000 --> 15:20.000]  это получается сделать. То есть, точность
[15:20.000 --> 15:22.000]  ответа количества известных коэффициентов
[15:22.000 --> 15:24.000]  можно увеличивать в двое.
[15:24.000 --> 15:26.000]  Вот. Частенько такое
[15:26.000 --> 15:28.000]  срабатывает.
[15:30.000 --> 15:32.000]  Ну, в каком-то смысле
[15:32.000 --> 15:34.000]  на самом деле это
[15:34.000 --> 15:36.000]  что-то типа метода
[15:36.000 --> 15:38.000]  Ньютона касательных.
[15:38.000 --> 15:40.000]  Да, когда у вас есть график функции,
[15:40.000 --> 15:42.000]  вы хотите найти корень
[15:44.000 --> 15:46.000]  корень какой-то функции, f от x равно 0.
[15:46.000 --> 15:48.000]  Ну, давайте я нарисую.
[15:48.000 --> 15:50.000]  Я вас уже сказал.
[15:50.000 --> 15:52.000]  Представьте, у вас есть какой-то график, да?
[15:52.000 --> 15:54.000]  Вы хотите найти корень в нём.
[15:54.000 --> 15:56.000]  То есть, там, где она зануляется. Что такое
[15:56.000 --> 15:58.000]  метод Ньютона?
[15:58.000 --> 16:00.000]  Это вы берёте какое-то начальное приближение,
[16:00.000 --> 16:02.000]  говоришь, что ответ примерно здесь.
[16:02.000 --> 16:04.000]  Далее рисуете касательно,
[16:04.000 --> 16:06.000]  и говоришь, что ответ теперь примерно здесь.
[16:06.000 --> 16:08.000]  Ну, то есть, как бы вот эту ординату имеет.
[16:08.000 --> 16:10.000]  То есть, вот эту точку. Потом здесь рисуете касательно,
[16:10.000 --> 16:12.000]  она вас всё ближе и ближе к ответу приближает.
[16:12.000 --> 16:14.000]  Ну, на самом деле, да.
[16:14.000 --> 16:16.000]  Только там
[16:16.000 --> 16:18.000]  длина шага
[16:18.000 --> 16:20.000]  равна просто
[16:20.000 --> 16:22.000]  так, чтобы попасть на o, x.
[16:22.000 --> 16:24.000]  Но если там начальное приближение достаточно
[16:24.000 --> 16:26.000]  хорошее, функция достаточно хорошая,
[16:26.000 --> 16:28.000]  то это очень быстро сходится.
[16:28.000 --> 16:30.000]  В каком-то смысле мы сделали
[16:30.000 --> 16:32.000]  то же самое. Если на это по-другому посмотреть,
[16:32.000 --> 16:34.000]  то можно обнаружить то же самое.
[16:34.000 --> 16:36.000]  Но это...
[16:36.000 --> 16:38.000]  Это знать нельзя.
[16:42.000 --> 16:44.000]  Так, хорошо.
[16:44.000 --> 16:46.000]  Значит, мы научились обращать
[16:46.000 --> 16:48.000]  по модулю x в m t,
[16:48.000 --> 16:50.000]  коль скоро младше коэффициент не ноль.
[16:50.000 --> 16:52.000]  Ну, теперь давайте научимся делить многочлены.
[16:52.000 --> 16:54.000]  Сейчас будет ещё большая магия.
[16:54.000 --> 16:56.000]  Значит, пусть у нас есть два многочлена
[16:56.000 --> 16:58.000]  f и g.
[16:58.000 --> 17:00.000]  Многочлены.
[17:00.000 --> 17:02.000]  Мы хотим их поделить с остатком
[17:02.000 --> 17:04.000]  f на g.
[17:04.000 --> 17:06.000]  Хотим
[17:06.000 --> 17:08.000]  поделить с остатком
[17:08.000 --> 17:10.000]  f на g.
[17:10.000 --> 17:12.000]  Хотим
[17:12.000 --> 17:14.000]  поделить
[17:14.000 --> 17:16.000]  f на g с остатком.
[17:20.000 --> 17:22.000]  Ну, что это значит?
[17:22.000 --> 17:24.000]  То есть, мы хотим найти такие два многочлена
[17:28.000 --> 17:30.000]  p и q.
[17:30.000 --> 17:32.000]  Что f это
[17:32.000 --> 17:34.000]  p, g...
[17:34.000 --> 17:36.000]  Нет, не p и q, я их
[17:36.000 --> 17:38.000]  переназову как-то.
[17:38.000 --> 17:40.000]  У меня было бы q и r всё-таки.
[17:40.000 --> 17:42.000]  Quotient и
[17:42.000 --> 17:44.000]  remainder.
[17:44.000 --> 17:46.000]  Значит, q и r, что это q g плюс r.
[17:46.000 --> 17:48.000]  Ну, где степень r,
[17:48.000 --> 17:50.000]  меньше степень g.
[17:54.000 --> 17:56.000]  Вот. Хотим поделиться
[17:56.000 --> 17:58.000]  с остатком, чтобы остаток имел меньшую степень.
[18:00.000 --> 18:02.000]  Окей.
[18:02.000 --> 18:04.000]  Сейчас будет магия.
[18:04.000 --> 18:06.000]  Смотрите, давайте определим
[18:06.000 --> 18:08.000]  на многочленах простую
[18:08.000 --> 18:10.000]  функцию реверс.
[18:12.000 --> 18:14.000]  Как она работает? Если у вас
[18:14.000 --> 18:16.000]  p было равно
[18:16.000 --> 18:18.000]  a n
[18:18.000 --> 18:20.000]  x v n
[18:20.000 --> 18:22.000]  плюс так далее, плюс a 0,
[18:22.000 --> 18:24.000]  эта штука просто берёт
[18:24.000 --> 18:26.000]  и реверсит список
[18:26.000 --> 18:28.000]  коэффициентов.
[18:28.000 --> 18:30.000]  То есть, давайте считать, что a 0
[18:30.000 --> 18:32.000]  это
[18:32.000 --> 18:34.000]  старше ненулевой коэффициент.
[18:34.000 --> 18:36.000]  Она просто берёт...
[18:36.000 --> 18:38.000]  Уважая длину, да,
[18:38.000 --> 18:40.000]  то есть она оставляет,
[18:40.000 --> 18:42.000]  то есть она берёт старше ненулевой коэффициент,
[18:42.000 --> 18:44.000]  то есть как раз что степень p это n
[18:44.000 --> 18:46.000]  и просто разворачивает этот список, получая
[18:46.000 --> 18:48.000]  вот такой вот многочлен.
[18:52.000 --> 18:54.000]  Вот, и здесь в частности получается, что теперь младший
[18:54.000 --> 18:56.000]  как раз будет ненулём.
[18:56.000 --> 18:58.000]  Так как мы и хотели в какой-то момент
[18:59.000 --> 19:01.000]  вот, ну, это сыграет ещё.
[19:03.000 --> 19:05.000]  Хорошо.
[19:18.000 --> 19:20.000]  Так, ну, я вот хочу теперь
[19:20.000 --> 19:22.000]  эту функцию рев применить к обеим частям
[19:22.000 --> 19:24.000]  этого равенства.
[19:24.000 --> 19:26.000]  Значит, ну, слева понятно будет просто рев
[19:26.000 --> 19:28.000]  а справа я хочу понять
[19:28.000 --> 19:30.000]  что такое рев вот этой вот суммы
[19:30.000 --> 19:32.000]  странной.
[19:32.000 --> 19:34.000]  Значит, ну, замечание первое,
[19:34.000 --> 19:36.000]  что рев от произведения
[19:36.000 --> 19:38.000]  q на g
[19:38.000 --> 19:40.000]  это на самом деле произведение
[19:40.000 --> 19:42.000]  ревов q и g.
[19:52.000 --> 19:54.000]  Пруфы.
[19:54.000 --> 19:56.000]  Может, кто-нибудь скажет почему это так?
[20:10.000 --> 20:12.000]  Да, да, да, да, да, это в каком-то смысле
[20:12.000 --> 20:14.000]  значит, я вместо
[20:14.000 --> 20:16.000]  x пишу 1 на x, да, и умножаю
[20:16.000 --> 20:18.000]  на x в m, да, вы вот так вот говорите.
[20:20.000 --> 20:22.000]  Так, сейчас я проверю, что это верно.
[20:22.000 --> 20:24.000]  Да, то есть a0 будет как раз с этим.
[20:24.000 --> 20:26.000]  Да, да, ну, это в точности.
[20:26.000 --> 20:28.000]  В точности рев от p, это в точности такой многочлен.
[20:28.000 --> 20:30.000]  Вот.
[20:30.000 --> 20:32.000]  Ну, и тогда вроде очевидно,
[20:32.000 --> 20:34.000]  что в произведении вы как раз
[20:34.000 --> 20:36.000]  заменяете в обоих
[20:36.000 --> 20:38.000]  многочленах x на 1 делить на x.
[20:38.000 --> 20:40.000]  Тут ещё умножаете на x в степени
[20:40.000 --> 20:42.000]  степень q плюс
[20:42.000 --> 20:44.000]  x в степени степень g, ну, и здесь тоже самое
[20:44.000 --> 20:46.000]  x в степени степени q плюс x в степени степени g.
[20:46.000 --> 20:48.000]  Вот, поэтому рев мультипликативно,
[20:48.000 --> 20:50.000]  да, можно рев от произведения
[20:50.000 --> 20:52.000]  ревов.
[20:52.000 --> 20:54.000]  Более того, я утверждаю,
[20:54.000 --> 20:56.000]  что реверс всей правой части
[20:56.000 --> 20:58.000]  целиком q на g плюс r.
[20:58.000 --> 21:00.000]  Это следующее.
[21:06.000 --> 21:08.000]  Рев r, но
[21:08.000 --> 21:10.000]  немножко сдвинутая.
[21:10.000 --> 21:12.000]  Потому что, смотрите,
[21:12.000 --> 21:14.000]  r само по себе, оно довольно маленькой
[21:14.000 --> 21:16.000]  степени,
[21:16.000 --> 21:18.000]  но когда вы его добиваете
[21:18.000 --> 21:20.000]  спереди большими коэффициентами,
[21:20.000 --> 21:22.000]  ну, в смысле, коэффициентами
[21:22.000 --> 21:24.000]  с большими номерами, то после реверса
[21:24.000 --> 21:26.000]  вот эти маленькие коэффициенты в r
[21:26.000 --> 21:28.000]  наоборот будут влиять на старшие коэффициенты
[21:28.000 --> 21:30.000]  в результате.
[21:30.000 --> 21:32.000]  Поэтому после реверса вам нужно их умножить
[21:32.000 --> 21:34.000]  на что-то типа степень
[21:34.000 --> 21:36.000]  f минус степень r.
[21:42.000 --> 21:44.000]  Ну как?
[21:44.000 --> 21:46.000]  Ну, окей,
[21:46.000 --> 21:48.000]  степень qg можно
[21:48.000 --> 21:50.000]  я могу здесь написать.
[21:50.000 --> 21:52.000]  Вот, да, то еще раз картинка давайте,
[21:52.000 --> 21:54.000]  пусть вот это вот все было qg плюс r,
[21:54.000 --> 21:56.000]  вот это все было qg,
[21:56.000 --> 21:58.000]  а вот здесь вот было еще r добавлялось сверху.
[21:58.000 --> 22:00.000]  Тогда после реверса у вас r будет
[22:00.000 --> 22:02.000]  влиять на вот эти вот старшие коэффициенты,
[22:02.000 --> 22:04.000]  а если вы просто сам по себе
[22:04.000 --> 22:06.000]  r развернете, то он как бы будет вот здесь вот на месте
[22:06.000 --> 22:08.000]  это делать. Но вам надо еще сдвинуть это сюда,
[22:08.000 --> 22:10.000]  чтобы старший перешел вот сюда.
[22:10.000 --> 22:12.000]  Похоже?
[22:12.000 --> 22:14.000]  Ну, супер.
[22:14.000 --> 22:16.000]  Ну, супер.
[22:16.000 --> 22:18.000]  Тогда, значит,
[22:18.000 --> 22:20.000]  мы знаем следующее, что
[22:20.000 --> 22:22.000]  revf
[22:22.000 --> 22:24.000]  это revq на revg
[22:26.000 --> 22:28.000]  плюс revx
[22:28.000 --> 22:30.000]  на x какой-то там
[22:30.000 --> 22:32.000]  степенью.
[22:36.000 --> 22:38.000]  Значит, теперь я хочу избавиться
[22:38.000 --> 22:40.000]  здесь от ревер.
[22:42.000 --> 22:44.000]  Я хочу избавиться
[22:44.000 --> 22:46.000]  вот от этого и сначала решить задачу
[22:46.000 --> 22:48.000]  с поиском q.
[22:48.000 --> 22:50.000]  Что можно сделать в этом
[22:50.000 --> 22:52.000]  равенстве, чтобы избавиться вот
[22:52.000 --> 22:54.000]  ревер?
[22:54.000 --> 22:56.000]  Да, просто берем и смотрим
[22:56.000 --> 22:58.000]  это равенство
[22:58.000 --> 23:00.000]  по модулю x, ну, в степени
[23:00.000 --> 23:02.000]  на один меньше, чем вот этот x.
[23:02.000 --> 23:04.000]  На то, с dg
[23:04.000 --> 23:06.000]  минус dgr
[23:06.000 --> 23:08.000]  минус один.
[23:08.000 --> 23:10.000]  Берем это по такому модулю, просто смотрим
[23:10.000 --> 23:12.000]  это сравнение. Тогда это полностью умирает,
[23:12.000 --> 23:14.000]  потому что здесь x в большей степени, чем здесь.
[23:14.000 --> 23:16.000]  Ну, и остается такая штука.
[23:24.000 --> 23:26.000]  Так, справедливо.
[23:26.000 --> 23:28.000]  Справедливо, да, извините, значит,
[23:28.000 --> 23:30.000]  я, наверное, глупо сказал.
[23:30.000 --> 23:32.000]  Да,
[23:32.000 --> 23:34.000]  по такой
[23:34.000 --> 23:36.000]  модулю смотрим.
[23:40.000 --> 23:42.000]  Вот это все по модулю
[23:42.000 --> 23:44.000]  x в степени dg
[23:44.000 --> 23:46.000]  минус dgr.
[23:48.000 --> 23:50.000]  Вот, хорошо.
[23:50.000 --> 23:52.000]  А то есть
[23:52.000 --> 23:54.000]  мы, если не полностью
[23:54.000 --> 23:56.000]  теперь умеем находить рев q,
[23:56.000 --> 23:58.000]  а смотрите, что такое решить вот это уравнение.
[23:58.000 --> 24:00.000]  Смотрите, мне f известно, g известно.
[24:00.000 --> 24:02.000]  Чтобы вычислить отсюда рев q, мне нужно
[24:02.000 --> 24:04.000]  просто домножить на обратный к рев g по модулю
[24:04.000 --> 24:06.000]  как раз x в степени m.
[24:06.000 --> 24:08.000]  Такое мы уже решать умеем, да, то есть если я нахожу обратный
[24:08.000 --> 24:10.000]  к этому по модулю вон тому,
[24:10.000 --> 24:12.000]  я на него домножаю, оно переходит сюда
[24:12.000 --> 24:14.000]  и остается рев q равно чему-то там, значит, мы знаем q.
[24:14.000 --> 24:16.000]  Но не совсем, мы знаем q
[24:16.000 --> 24:18.000]  по такому модулю.
[24:18.000 --> 24:20.000]  Я утверждаю, что этого хватает.
[24:20.000 --> 24:22.000]  Давайте просто на степень посмотрим.
[24:22.000 --> 24:24.000]  То есть я утверждаю, что вот эта вот степень
[24:24.000 --> 24:26.000]  достаточно большая,
[24:26.000 --> 24:28.000]  так что рев q при взятии по этому модулю
[24:28.000 --> 24:30.000]  сохраняет все свои коэффициенты.
[24:30.000 --> 24:32.000]  То есть мы ничего не потеряли, мы никакую информацию
[24:32.000 --> 24:34.000]  про q не потеряли.
[24:34.000 --> 24:36.000]  Потому что, смотрите, какая степень у q?
[24:38.000 --> 24:40.000]  Ну, видимо, f минус g.
[24:44.000 --> 24:46.000]  Правда же, потому что я делю многочисленные
[24:46.000 --> 24:48.000]  на одной степени на другой,
[24:48.000 --> 24:50.000]  неполно частные имеют степень разности.
[24:50.000 --> 24:52.000]  Ну, если я в ZP живу, конечно.
[24:52.000 --> 24:54.000]  Вот.
[24:54.000 --> 24:56.000]  И дальше я знаю, что
[24:56.000 --> 24:58.000]  дег r меньше, чем дег g.
[24:58.000 --> 25:00.000]  Значит, минус
[25:00.000 --> 25:02.000]  дег g будет
[25:02.000 --> 25:04.000]  меньше,
[25:04.000 --> 25:06.000]  чем дег f
[25:06.000 --> 25:08.000]  минус дег r.
[25:10.000 --> 25:12.000]  Потому что вот у меня есть
[25:12.000 --> 25:14.000]  такая неравенственная степень.
[25:16.000 --> 25:18.000]  Ну, все.
[25:18.000 --> 25:20.000]  Значит, у меня в q
[25:20.000 --> 25:22.000]  коэффициентов
[25:22.000 --> 25:24.000]  достаточно мало, что при рассмотрении
[25:24.000 --> 25:26.000]  их по этому модулю я ни один не потеряю.
[25:26.000 --> 25:28.000]  То есть степень q меньше, чем вот это вот,
[25:28.000 --> 25:30.000]  чем x в той степени, по которой я его рассматриваю.
[25:30.000 --> 25:32.000]  Значит, при
[25:32.000 --> 25:34.000]  решении этого сравнения я никакую информацию
[25:34.000 --> 25:36.000]  не потерял.
[25:36.000 --> 25:38.000]  То есть у меня были там какие-то коэффициенты, я их развернул,
[25:38.000 --> 25:40.000]  они все остались на месте, потому что
[25:40.000 --> 25:42.000]  здесь достаточно большая степень, я ничего не теряю.
[25:42.000 --> 25:44.000]  Но такие сравнения я решать уже умею.
[25:46.000 --> 25:48.000]  Я домножаю на вот это вот обратное,
[25:48.000 --> 25:50.000]  получаю рев q, разворачиваю, получаю q.
[25:52.000 --> 25:54.000]  И более того, так я делать умею,
[25:54.000 --> 25:56.000]  потому что здесь младший коэффициент
[25:56.000 --> 25:58.000]  не ноль. У рева всегда младший коэффициент
[25:58.000 --> 26:00.000]  не ноль, потому что я это проговаривал,
[26:00.000 --> 26:02.000]  где-то здесь картиночка была.
[26:02.000 --> 26:04.000]  Значит, я умею обращать, я умею находить
[26:04.000 --> 26:06.000]  рев q.
[26:06.000 --> 26:08.000]  Давайте скажу, что я умею находить отсюда рев q.
[26:10.000 --> 26:12.000]  После реверса я знаю q.
[26:12.000 --> 26:14.000]  Ну и после этого r найти уже
[26:14.000 --> 26:16.000]  никакого труда не составляет, r это просто f-q.
[26:24.000 --> 26:26.000]  Поделились с остатком.
[26:26.000 --> 26:28.000]  За, кажется, опять n лог n,
[26:28.000 --> 26:30.000]  где n это степень f.
[26:38.000 --> 26:40.000]  Потому что что я здесь делаю?
[26:40.000 --> 26:42.000]  Я делаю обращение по кому-то модулю.
[26:42.000 --> 26:44.000]  Это вот,
[26:44.000 --> 26:46.000]  ну эта штука имеет меньше,
[26:46.000 --> 26:48.000]  степень меньше, чем n.
[26:48.000 --> 26:50.000]  Значит, здесь все fft-шки работают
[26:50.000 --> 26:52.000]  от n лог n.
[26:52.000 --> 26:54.000]  Потом мне вот здесь нужно еще переножить
[26:54.000 --> 26:56.000]  два многочлена и тоже работают за n лог n.
[26:56.000 --> 26:58.000]  Ну и вычесть.
[26:58.000 --> 27:00.000]  Все, получается, поделились за n лог n.
[27:02.000 --> 27:04.000]  Нормально?
[27:08.000 --> 27:10.000]  Что делать остать хочется?
[27:10.000 --> 27:12.000]  Вот, то есть, смотрите.
[27:12.000 --> 27:14.000]  Мы научились с многочленами
[27:14.000 --> 27:16.000]  делать, ну более-менее, все риторические
[27:16.000 --> 27:18.000]  операции, умножать, делить.
[27:18.000 --> 27:20.000]  Что-то там еще, получился,
[27:20.000 --> 27:22.000]  вот, вот.
[27:22.000 --> 27:24.000]  Вот, вот.
[27:24.000 --> 27:26.000]  Вот, вот.
[27:26.000 --> 27:28.000]  Вот, вот.
[27:28.000 --> 27:30.000]  Вот.
[27:30.000 --> 27:32.000]  Вот.
[27:32.000 --> 27:34.000]  Вот.
[27:34.000 --> 27:36.000]  Вот.
[27:36.000 --> 27:38.000]  Вот.
[27:38.000 --> 27:39.000]  Делить.
[27:39.000 --> 27:41.360]  Что-то там еще были бы странные операции.
[27:41.360 --> 27:43.640]  Возвадить в степень – это, наверное, ту матч.
[27:43.640 --> 27:46.280]  Х в степени х, я не знаю, что такое, например.
[27:46.280 --> 27:47.280]  Вот.
[27:47.280 --> 27:48.280]  Но умножать делить мы умеем.
[27:48.280 --> 27:52.880]  Хорошо, вот с многощинами как ни странно разобрались.
[27:52.880 --> 27:56.320]  А вот если бы нам надо было делать то же самое с числами,
[27:56.320 --> 27:57.320]  то это чуть сложнее.
[27:57.320 --> 28:02.120]  Скажем, ну умножать числа можно довольно просто с
[28:02.120 --> 28:03.120]  помощью FFT.
[28:03.120 --> 28:07.800]  А вот делить – там, там запара, да.
[28:08.800 --> 28:10.720]  Ну представьте, у вас есть два длинных числа.
[28:10.720 --> 28:14.560]  Одно длины 10 в шестой, другое длины 10 в пятый.
[28:14.560 --> 28:15.720]  Вам надо одно на другое поделить.
[28:15.720 --> 28:25.760]  Ну мы хотим какую-то адекватную симпатику, да, чтобы не
[28:25.760 --> 28:28.120]  10 в 11 работало, а что-то нормально.
[28:28.120 --> 28:29.120]  Вот.
[28:29.120 --> 28:34.920]  Ну, значит, там сложнее алгоритмы, они тоже существуют,
[28:34.920 --> 28:37.360]  на базе FFT это все работает, конечно.
[28:37.360 --> 28:39.600]  Но там прям, там прям жестко.
[28:39.600 --> 28:40.600]  Нет.
[28:40.600 --> 28:51.920]  Ну, много чего, например, потому что когда мы живем
[28:51.920 --> 28:56.840]  в 10-шеме числении, нам, типа, надо делить по модлю 10,
[28:56.840 --> 28:57.840]  во-первых.
[28:57.840 --> 28:59.800]  Там не всегда есть обратный.
[28:59.800 --> 29:05.240]  Во-вторых, ну, типа, даже, ну, как бы, вы просто никак
[29:05.240 --> 29:06.240]  переход не сделаете.
[29:06.240 --> 29:08.120]  Ну, вот, поделили многочлены один на другой, да, то есть,
[29:08.120 --> 29:09.920]  ну, понятно, да, если у меня есть какое-нибудь число,
[29:09.920 --> 29:12.920]  например, там, ну, не знаю, 9, 2, 3, его, наверное, логично
[29:12.920 --> 29:17.360]  отождествится с самым многочленом 9х2 плюс 2х плюс 3, да, и как
[29:17.360 --> 29:19.400]  бы, подразумевает, что х равно 10.
[29:19.400 --> 29:22.120]  Ну вот, я утверждаю, что если вы поделите один многочлен
[29:22.120 --> 29:26.400]  такого видна другой, и даже, там, если что-то у вас получится,
[29:26.400 --> 29:27.400]  то что с этим делать потом, непонятно.
[29:27.400 --> 29:31.360]  Ну вот, потому что коэффициенты, которые вы там получите,
[29:31.360 --> 29:34.520]  они будут, ну, не цифрами, как минимум, а вам надо,
[29:34.520 --> 29:36.480]  чтобы были цифры, и как их проталкивать, там непонятно.
[29:36.480 --> 29:57.360]  Ну, вот, короче, короче, сложно, ну, и там по-другому
[29:57.360 --> 30:01.760]  делаете, так не получится, скорее всего, вот, поэтому
[30:01.760 --> 30:03.880]  с многочленами работать почему-то приятнее получается,
[30:03.880 --> 30:07.280]  с числами даже, такая магия.
[30:07.280 --> 30:11.960]  Ну ладно, давайте скажем, что это сложно, и мы этого
[30:11.960 --> 30:12.960]  делать не будем.
[30:12.960 --> 30:15.680]  Давайте еще порешаем про многочлены, раз с ними
[30:15.680 --> 30:17.400]  так все хорошо получается, давайте еще с ними какие-то
[30:17.400 --> 30:18.400]  задачки порешаем.
[30:18.400 --> 30:33.840]  Значит, задача называется multi-point evaluation, у вас есть
[30:33.840 --> 30:42.920]  многочлен, заданный набором своих коэффициентов, давайте
[30:42.920 --> 30:47.480]  x в m-той, вот, и вам нужно найти его значение во многих
[30:47.480 --> 30:48.480]  точках.
[30:48.480 --> 30:55.680]  Значит, найти p в точке x1, и так далее, p в точке xn,
[30:55.680 --> 30:58.880]  вот такая задача, найти p во многих точках.
[30:58.880 --> 31:05.840]  Ну, понятно, что там обычно алгоритм работал бы за
[31:05.840 --> 31:09.120]  nm, если вы в тупую поставляете каждую точку в многочлен,
[31:09.120 --> 31:11.600]  то это работает за линию на каждую точку, на каждый
[31:11.600 --> 31:12.600]  запрос.
[31:12.600 --> 31:13.600]  Мы сделаем побыстрее.
[31:13.600 --> 31:18.800]  Да, мы будем делить.
[31:18.800 --> 31:22.280]  Значит, скажите, пожалуйста, знаете ли вы, чему равно
[31:22.280 --> 31:24.280]  значение многочленов в точках, как это можно выразить
[31:24.280 --> 31:32.240]  с помощью делений, например, поинтеллектуально.
[31:32.240 --> 31:46.480]  Терембезу, помните?
[31:46.480 --> 31:47.480]  Такая умная теорема есть.
[31:47.480 --> 31:52.080]  Значит, почему это верно?
[31:52.640 --> 31:55.680]  Ну, потому что p от x по модулю многочлены первой степени
[31:55.680 --> 32:05.120]  точно число, и если подставить, что подставить, ну да, что
[32:05.120 --> 32:06.120]  вот это значит?
[32:06.120 --> 32:11.280]  Если написать, что p от x это какой-то там q от x на x
[32:11.280 --> 32:15.880]  минус x, плюс какое-то значение a, еще раз, остаток это обязательно
[32:15.880 --> 32:19.680]  число a, число не многочлен, но вот если сюда поставить
[32:19.680 --> 32:22.480]  x и, то у вас получится p в точке x и равно нулю плюс
[32:22.480 --> 32:23.480]  a.
[32:23.480 --> 32:27.680]  Значит, как раз значение в точке x и.
[32:27.680 --> 32:30.880]  Поэтому, чтобы нам решить такую задачу, мне достаточно
[32:30.880 --> 32:35.320]  найти процент по многим модулям, остаток определений
[32:35.320 --> 32:38.080]  на много многочленов x минус x1, x минус x2 и так далее.
[32:38.080 --> 32:47.080]  Не надо.
[32:47.080 --> 33:03.480]  Дальше мы сделаем следующее, смотрите.
[33:03.480 --> 33:08.280]  Давайте я, ну я сейчас для удобства, я, короче, нарисую
[33:08.280 --> 33:12.480]  картинку, когда я пытаюсь найти значение в 8 точках.
[33:12.480 --> 33:15.680]  Давайте построим следующие многочлены.
[33:16.280 --> 33:20.480]  Я сначала напишу все наши 8 элементарных наличия
[33:20.480 --> 33:21.480]  на степени 1.
[33:33.480 --> 33:35.680]  Вот, дальше начну их по парному нажать.
[33:35.680 --> 33:42.680]  Я умножу вот эти два, получу какой-то многочлен, ну равный
[33:42.680 --> 33:43.680]  вот такому.
[33:43.680 --> 33:45.680]  Значит, эти два умножу, получу такой многочлен.
[33:58.680 --> 33:59.680]  Дальше перемножаем.
[34:02.680 --> 34:04.680]  Да, дерево отрезков построили на самом деле, это правда.
[34:07.680 --> 34:08.680]  Да.
[34:10.680 --> 34:12.680]  В конце, в корне дерева будет произведение всех скобок,
[34:12.680 --> 34:13.680]  верно.
[34:22.680 --> 34:24.680]  Значит, зачем мы это сделали?
[34:24.680 --> 34:29.680]  Смотрите, я хочу найти значение p по всем вот этим вот модулям.
[34:29.680 --> 34:33.680]  Но если это делать нашим обычным алгоритмам, то это будет
[34:33.680 --> 34:35.680]  n log n на запрос.
[34:35.680 --> 34:37.680]  Если у меня есть многочлен на степени n, найти его остаток
[34:37.680 --> 34:40.680]  по модулю многочлена какого-то, это n log n.
[34:41.680 --> 34:42.680]  Вот.
[34:43.680 --> 34:46.680]  Давайте мы сначала найдем остаток p по вот этому модулю.
[34:48.680 --> 34:50.680]  У нас останется многочлен степени 8.
[34:50.680 --> 34:52.680]  Даже 7.
[34:52.680 --> 34:54.680]  Если я найду остаток p по этому модулю, у меня останется
[34:54.680 --> 34:56.680]  многочлен степени 7.
[34:56.680 --> 34:59.680]  А дальше уже я смогу это прокидывать по всем веточкам
[34:59.680 --> 35:00.680]  нашего дерева.
[35:00.680 --> 35:04.680]  У меня есть многочлен степени 7, я здесь нахожу его остаток
[35:04.680 --> 35:07.680]  по многочлену, по модулю многочлен степени 4, остается
[35:07.680 --> 35:09.680]  многочлен степени 3.
[35:09.680 --> 35:11.680]  Ну, здесь harp, многочлен степени 3, и так далее.
[35:11.680 --> 35:15.680]  И поскольку я на каждом шаге беру процент не от многочлена
[35:15.680 --> 35:18.680]  степени n, а от многочлена все меньше и меньше степени,
[35:18.680 --> 35:21.680]  то это будет работать все быстрее и быстрее.
[35:21.680 --> 35:24.680]  То есть, если я вот эти все многочлены как-то нашел,
[35:24.680 --> 35:27.680]  то за сколько у меня теперь работают все вот эти проценты?
[35:27.680 --> 35:29.680]  То есть, еще раз, во-первых, я утверждаю, что чтобы найти,
[35:29.680 --> 35:33.680]  скажем, p по модуле этого многочлена, мне достаточно сделать
[35:33.680 --> 35:35.680]  следующее.
[35:35.680 --> 35:38.480]  модулю, потом остаток взять по этому модулю, потом остаток
[35:38.480 --> 35:41.120]  по этому модулю, потом остаток по этому модулю.
[35:41.120 --> 35:42.760]  Ну, вроде очевидно.
[35:42.760 --> 35:43.760]  Еще раз?
[35:43.760 --> 35:50.520]  Ну, это наша исходная задача, да, мы хотим значение многочленов
[35:50.520 --> 35:51.520]  во всех точках.
[35:51.520 --> 35:53.660]  Вот для этого я говорю, что достаточно найти проценты
[35:53.660 --> 35:55.640]  по всем этим модулям, теряем безу.
[35:55.640 --> 35:58.000]  Дальше я это делаю так, я нахожу сначала по проценту
[35:58.000 --> 36:00.880]  вот этот вот многочлен, у меня остается многочлен
[36:00.880 --> 36:05.080]  степени 7, дальше я его проталкиваю в обе веточки, беру многочлен
[36:05.080 --> 36:08.320]  в степени 7 по обоим модулям, получаю многочлен в степени
[36:08.320 --> 36:10.880]  3, ну и так далее, проталкиваю его вниз, каждый раз степень
[36:10.880 --> 36:13.200]  многочленов сокращается вдвое, ну и соответственно
[36:13.200 --> 36:14.760]  деление занимает все меньше и меньше времени.
[36:14.760 --> 36:19.120]  Ну, типа того, да, ну не совсем.
[36:19.120 --> 36:22.200]  Да, вот давайте представим, что вот это вот дерево у
[36:22.200 --> 36:26.360]  меня полностью построено, давайте посчитаем, за сколько
[36:26.360 --> 36:27.680]  будет все эти деления работать.
[36:27.680 --> 36:41.920]  Так, ну вот первое будет что-то типа, давайте вот
[36:41.920 --> 36:47.400]  так напишу, m plus m log n plus m, а то есть если этот многочлен
[36:47.400 --> 36:50.560]  неизвестен, я беру остаток многочлена степени m по
[36:50.560 --> 36:57.360]  модулю многочлена степени n, вот этот вот степени m
[36:57.360 --> 37:00.520]  беру по модулю многочлена степени n, но это работает,
[37:00.520 --> 37:02.920]  мы знаем, деление в частности вычлений остатка работает
[37:02.920 --> 37:10.600]  за сумму умножить на лог суммы, на самом деле за m log m на
[37:10.600 --> 37:15.520]  самом деле, да, ну типа да, если n больше, ну это грубая
[37:15.520 --> 37:16.520]  оценка сверху.
[37:16.520 --> 37:19.440]  Значит, смотрите, напоминаю, мы считаем, что мы построили
[37:19.440 --> 37:21.600]  все это дерево, мы знаем все эти многочлены в явном
[37:21.600 --> 37:24.000]  виде, то есть я пока что их написал как произведение
[37:24.000 --> 37:28.120]  каких-то двучленов, да, на самом деле, ну чтобы делить,
[37:28.120 --> 37:30.160]  мне нужно знать многочлен в явном виде, как набор
[37:30.160 --> 37:33.280]  коэффициентов, то есть еще раз, я еще пока что предполагаю,
[37:33.280 --> 37:36.480]  что здесь все эти многочлены раскрыты, я знаю все их коэффициенты,
[37:36.480 --> 37:39.680]  потом еще посчитаем, сколько нужно времени на это, вот,
[37:39.680 --> 37:42.080]  ну давайте делить, значит, мы p пропускаем через это
[37:42.080 --> 37:45.280]  дерево, первое деление, самое сложное, оно вот такое,
[37:45.280 --> 37:49.360]  примерно m log m, дальше у меня на этом уровне остается
[37:49.360 --> 37:52.300]  многочлен степень ни больше, н, ну даже строго меньше,
[37:52.300 --> 37:55.680]  но я n-ко ограничу, потому что я взял его по модулю многочлена
[37:55.680 --> 37:58.880]  степени n, остался всего многочлен станет меньше,
[37:58.880 --> 37:59.880]  чем n.
[37:59.880 --> 38:03.480]  Дальше, я на каждом уровне делю намногочлены степеней
[38:03.480 --> 38:06.160]  в два раза меньше, здесь степень n пополам, здесь
[38:06.160 --> 38:10.320]  степень n пополам и делаю это дважды, у меня остаются
[38:10.320 --> 38:13.900]  многочлены степени n пополам, но вот эти деления работают
[38:13.900 --> 38:18.560]  за 2 раза n log n, потому что намногочлен Степени n делю
[38:18.560 --> 38:24.280]  что-то. Остаются многочлены степени n пополам. Теперь я многочлены степени n
[38:24.280 --> 38:29.240]  пополам четыре раза делю на многочлены степени n на 4. Получается у меня, что это
[38:29.240 --> 38:34.560]  все работает за 4 n пополам лого n пополам, потому что многочлены степени n
[38:34.560 --> 38:39.480]  пополам поделились на что-то. После этого остаются многочлены степени n на 4.
[38:39.480 --> 38:44.960]  Опять, я их 8 раз делю на многочлены еще меньшей степени. Получается, что весь
[38:44.960 --> 38:53.280]  вот этот слой обрабатывается за 8 n на 4 лого n на 4. Ну и так далее. Давайте
[38:53.280 --> 39:08.480]  просуммируем, что, скажем, сумма по всем k от нуля там до логорифма примерно, так
[39:08.480 --> 39:14.320]  2 в степени k плюс 1 n на 2 вкатой лого n на 2 вкатой. Вот такая у меня
[39:14.320 --> 39:21.040]  получается сумма, если я ничего не путаю. Ну то есть k это номер слоя. Количество
[39:21.040 --> 39:26.360]  делений в слой это 2 в степени k плюс 1. Многочлены в слой имеют вот такую длину.
[39:26.360 --> 39:36.320]  Правда? Ну все, это не больше, чем сумма k от нуля до логорифма. 2 вкате, 2 вкате
[39:36.320 --> 39:58.320]  сокращается n лого n. Да, и это есть n лого квадрат. Мне неизвестно, кажется, никто пока не умеет.
[39:58.320 --> 40:06.840]  Тут согласны? Ну, короче, сложили, получили честный n лого квадрат. Плюс не забываем,
[40:06.840 --> 40:10.600]  что первое еще деление было, да, то есть если у меня m было какой-то большой степени, надо
[40:10.600 --> 40:16.480]  еще добавить там типа m лого m, но это оставляю, оно здесь у меня написано. Так, теперь вернемся к
[40:16.480 --> 40:20.280]  тому, что мне еще нужно дерево все посчитать. Напоминаю, что мне нужны эти многочлены раскрыть
[40:20.280 --> 40:24.440]  как набор коэффициентов, не как какие-то со множды, а именно коэффициент. Ну, давай считать,
[40:24.440 --> 40:28.760]  за сколько это можно сделать. Давайте мы дерево будем снизу вверх строить и перемножать многочлены
[40:28.760 --> 40:35.320]  с помощью фурье. Понятно, нижний слой у меня посчитан, это просто вот двучлены такие. Теперь
[40:35.320 --> 40:39.880]  на каждом слое мне нужно перемножить два многочлена степени одинаковой, получить многочлен степень в
[40:39.880 --> 40:44.560]  два раза больше. Вот, но я тоже, что если это опять просуммировать, то опять получится n лого квадрат.
[40:44.560 --> 40:49.880]  То есть, чтобы это построить дерево, будет n лого квадрат, чтобы потом все поделить, тоже будет n
[40:49.880 --> 41:05.680]  лого квадрат. Ну, давайте посчитаем, сколько у меня занимает построение дерева. Так, вопрос.
[41:05.680 --> 41:19.840]  Ну, давайте скажем опять, возьмем какой-то катый уровень. Так, момент, сейчас я буду, сейчас я
[41:19.840 --> 41:24.720]  немножко поторможу, но все-таки было бы хорошо это нормально писать. Значит, вот здесь у меня будут
[41:24.720 --> 41:32.520]  многочлены степени n на 2 в катый примерно. Здесь будут многочлены степени в два раза меньше,
[41:32.520 --> 41:45.080]  n на 2 в степени k плюс 1. Я их перемножаю и делаю это ну столько раз, какой номер уровня. Ну, короче,
[41:45.080 --> 41:52.480]  та же самая сумма получится, потому что, ну типа вот здесь я иду сверху вниз и делю один многочлен
[41:52.480 --> 41:58.520]  на два многочлена поменьше, это работает там суммарно за n лого квадрат. А теперь, если я наоборот
[41:58.520 --> 42:02.960]  буду снизу вверх идти и перемножать многочлены, то есть я вот здесь делил один большой на два поменьше,
[42:02.960 --> 42:07.720]  чтобы пойти снизу вверх, нужно сначала перемножить вот эти два маленьких, получить один побольше. Но
[42:07.720 --> 42:12.480]  перемножение работает за столько же сколько деления, поэтому то же самое время будет тоже n лого
[42:12.480 --> 42:18.520]  квадрат. Вот, ну все, значит, суммарно n лого квадрат и на построение, и потом на спускание вот
[42:18.520 --> 42:45.360]  этого вот p по всем модулям. Такие дела. Так, вопросы есть? Вот здесь в смысле? Ну, еще раз,
[42:45.360 --> 42:49.920]  у вас есть остаток по модулю, вы берете его по этому модулю, по этому модулю, по этому модулю,
[42:49.920 --> 43:07.680]  у вас получается значение в точке. И так, и так по всем веточкам. Не, еще раз, еще раз, если у вас,
[43:07.680 --> 43:29.280]  еще раз, кто большой? Н? Не знаю, честно говоря. Хорошо, вопрос я сходно не могу ответить. Ну,
[43:29.280 --> 43:33.520]  подумайте, я что-то не уверен, честно говоря, что если точек сильно больше, чем степень многочлена,
[43:33.520 --> 43:48.880]  бог его знает, не знаю. Хз. Давайте дальше поедем. Давайте мы решим обратную задачу интерполяция.
[43:48.880 --> 44:01.760]  Значит, прошлой задачей я находил по многочлену значение его в каких-то точках, теперь обратная
[44:01.760 --> 44:08.800]  задача по значению в наборе точек хочу восстановить коэффициенты многочлена. Значит, по значениям
[44:08.800 --> 44:26.600]  p от x1 равно y1 и так далее, p от xn равно yn восстановить коэффициенты p. Ну да, мы такую задачу
[44:26.600 --> 44:31.600]  решали, если у нас степень, pardon, точки, в которых заданы значения, это корни за
[44:31.600 --> 44:37.000]  единицы степени там какой-то. Такую задачу мы решаем, это фурье. Ну, давайте в общем случае
[44:37.000 --> 44:50.240]  теперь с помощью фурье обобщим на произвольный набор точек. Так, сейчас будет чудо. Давайте мы
[44:50.240 --> 44:55.960]  разобьем нашу задачу на две. Давайте первым шагом, вот смотрите, я хочу найти такой многочлен.
[44:55.960 --> 45:04.400]  Давайте первый шаг сделаем такой. Значит, найдем многочлен, давайте его назову a1,
[45:04.400 --> 45:13.440]  который равен нужным значениям на первой половине точек. То есть, a1 от x1 равно y1,
[45:13.440 --> 45:24.800]  а 1 от x2 равно y2, ну и так далее, вплоть до x с номером n пополам. Вот, это задача вдвое
[45:24.800 --> 45:29.960]  меньшего размера. Если я сведу большую задачу к двум задачам размеров вдвое меньше, у меня
[45:29.960 --> 45:37.440]  будет там асимптотика понятна какая. Вот, ну давайте сначала скажем такое. Вот, а дальше я говорю,
[45:37.440 --> 45:53.600]  что, коль скоро я a1 нашел, говорю, что дальше я буду искать p в виде, так, a1x плюс,
[45:53.600 --> 46:09.720]  так сейчас один момент. Кажется, вот в таком виде это буду искать. Значит, где q, да, да, да,
[46:09.720 --> 46:19.640]  все правильно, все правильно. Где q это произведение x-x по всем i от 1 до n пополам.
[46:19.640 --> 46:32.760]  Значит, q это произведение x-x по всем вот тем i, который я построил в этой первой части. То есть,
[46:32.760 --> 46:42.280]  по i от 1 до n пополам. Вот, ну понятно, что это разумное предположение, потому что если я
[46:42.280 --> 46:47.200]  буду подставлять вот эти вот x с маленькими номерами в этот многочлен, p от x равно вот этой
[46:47.200 --> 46:55.000]  штуке, у меня q будет зануляться и значение будет такое же, как в a1. Поэтому на первой половине точек
[46:55.000 --> 47:00.680]  у меня все будет адекватно. Но если у меня p имеет вот такой вот вид, где q это такое произведение,
[47:00.680 --> 47:04.880]  то во всех точках x1 и так далее x и n пополам, у меня значение будет совпадать со значением
[47:04.880 --> 47:23.000]  многочлена a1. А это то, что мне нужно. Вот. Н-лог-куб. Нормально, нормально. Так, ну что умеем. Значит,
[47:23.000 --> 47:28.280]  давайте разберемся, с первыми и n пополам точками разобрались, что делать с остальными. Да,
[47:28.440 --> 47:34.280]  давайте я скажу, что i это больше чем n пополам. Давайте поймем тогда, что здесь написано. Что такое
[47:34.280 --> 47:53.120]  p в точке x? Давайте xj назову это. Это a1 от xj плюс a2 от xj на q в точке xj. Я знаю,
[47:53.120 --> 48:01.000]  чему должно быть равно a2 в точке xj. Ну там как-то перегруппирую, вычту, получится, что надо.
[48:01.000 --> 48:13.520]  Причем эта штука не нулевая, потому что это произведение каких-то не нулевых множителей.
[48:13.520 --> 48:27.440]  Правда? Ну вот. Все, что мне осталось сделать, это найти такой a2, что в точках с номерами от
[48:27.440 --> 48:39.120]  n пополам плюс 1 до n, его значения вот такие. Что такое такие? p в точке xj я знаю, что это просто
[48:39.120 --> 48:48.960]  yj. По условия задачи мне нужно, чтобы pxj было yj. Это я знаю, это значение уже найденного многочлена
[48:48.960 --> 48:54.880]  в каких-то точках. Это опять-таки значение какого-то понятного многочлена в каких-то точках. Это
[48:54.880 --> 49:01.720]  предыдущая задача. Задача multi-point evaluation. У меня есть два многочлена, я их явным образом знаю,
[49:01.720 --> 49:09.280]  но a1 я вообще нашел с рекурсивного запуска. Я знаю a1, q. Найти тоже не очень сложно. Мы в прошлой
[49:09.280 --> 49:14.000]  задаче этим как раз занимались. Мы строили дерево, в частности в корне которого было произведение
[49:14.000 --> 49:18.760]  всех вот этих вот товарищей. Значит я нахожу такое произведение, я знаю многочлен q, и дальше
[49:18.760 --> 49:24.960]  мне нужно найти его значение в n пополам точках. Вот этих вот xj со всеми вот этими номерами. Это
[49:24.960 --> 49:31.080]  опять-таки предыдущая задача multi-point evaluation. Найти значение многочлена в куче точек. Значит
[49:31.080 --> 49:46.280]  и того второй шаг. Находим значение a1 и q в точках x с номером n пополам плюс 1 и так далее xn.
[49:46.280 --> 49:55.680]  С помощью прошлой задачи за n лог квадрат. Ну и третий шаг. Находим a2 как многочлен с
[49:55.680 --> 50:15.240]  такими значениями в таких точках. Находим a1 рекурсивным вызовом. Ну отсюда n лог q,
[50:15.240 --> 50:25.280]  потому что у вас на каждом шаге n лог квадрат. Находим a1 рекурсивным вызовом. Ну то есть
[50:25.280 --> 50:34.760]  еще раз мы знаем, извините, а2, да, спасибо, а2. А2-то у нас уже есть, 1 в смысле есть. Мы находим
[50:34.760 --> 50:39.960]  а2, потому что мы знаем какие значения он должен принимать в каких точках. Это задача того же
[50:39.960 --> 50:48.120]  порядка, только в два раза меньшего размера. Ну и значит время работы будет у меня два раза
[50:48.120 --> 51:04.760]  пятен пополам плюс n лог квадрат. Ну значит по мастертиареме это просто n лог куб. Такие дела.
[51:04.760 --> 51:13.000]  Так, это правда вообще, кстати?
[51:18.200 --> 51:26.360]  В смысле легко оценивается? Мне кажется мастертиарема говорит, что здесь n лог квадрат будет, нет?
[51:26.360 --> 51:43.160]  Входит, потому что одно превосходит другую на лог. Да, значит не мастертиарема, ну а просто если
[51:43.160 --> 51:51.560]  честно расписать, то будет n лог куб. Да, по индукции. Нет, вот здесь квадрат и здесь куб. Да-да-да. Нет,
[51:51.560 --> 51:56.520]  я имею ввиду, sorry, это не мастертиарема, потому что не помещается ни в один из случаев. Это ну
[51:56.520 --> 52:00.640]  отдельно, типа отдельно можно по индукции доказать или расписать, что вот это вот там,
[52:00.640 --> 52:12.440]  опять расписать это как n лог квадрат. Ну да-да-да-да-да, ну короче будет лог куб. Вот,
[52:12.440 --> 52:24.520]  вопросы? Ну вроде, вроде, вроде ничего так. Вот, ну это конечно лучше, чем всякие там обычные
[52:24.520 --> 52:29.680]  многочлены интерпретационные, там Lagrange или Newton, потому что они требуют перемножения каких-то
[52:29.680 --> 52:34.280]  многочленов, деления и там еще сумма какая-то в общем, если это руками делать, то это будет
[52:34.280 --> 52:39.920]  квадрат. Вот, а тут он лог куб. Ну как бы, не бог весть, конечно, какая оптимизация для каких-то
[52:39.920 --> 52:47.600]  адекватных n, но если оно очень большое, то вполне себе. Так, хорошо, блин, что-то время как-то медленно
[52:47.600 --> 53:14.200]  идет, ну ладно. Задача. Ревнивые рекурренты. Представьте себе, что у вас есть последовательность
[53:14.200 --> 53:22.800]  чисел, которая подчиняется какому-то рекуррентному линейному соотношению такого
[53:22.800 --> 53:33.000]  вида. Ну давайте пример сразу нарисуем. Давайте скажем, что аэнная это что-нибудь типа 7 аэн-1,
[53:33.000 --> 53:44.560]  минус 8 аэн-2, плюс, не знаю, 13 аэн-3, минус аэн-4. То есть это линейная комбинация нескольких предыдущих
[53:44.560 --> 53:53.320]  членов с фиксированными коэффициентами. То есть вот эти 7, минус 8, 13 и минус 1, они общие для
[53:53.320 --> 53:59.680]  всех n, то есть для всех n, начиная с 4, выполняется такое соотношение. Линейная рекуррента с
[53:59.680 --> 54:06.320]  постоянными коэффициентами. Вот, предлагается понять, как это, как можно будет быстро находить
[54:06.320 --> 54:17.280]  n-ый член такой последовательности. Слишком знакомая, да. Ну можно матрички, это правда. Давайте скажем,
[54:17.280 --> 54:24.560]  что линейная порядка у меня будет, линейная рекуррента у меня будет с этого порядка. Это значит
[54:24.560 --> 54:31.800]  просто, что аэнная зависит от s предыдущих. В данном случае s равно 4. От скольких предыдущих
[54:31.800 --> 54:37.240]  членов зависит аэн, таков порядок рекуррента. Значит, ну тогда можно записать простое матричное
[54:37.240 --> 54:52.040]  соотношение, что вот такие вот s членов прогрессии, рекурренты, равны матрице на предыдущие s
[54:52.040 --> 54:57.720]  аналогичных значений. Аэн минус 1 и так далее, аэн минус s. Здесь соответственно в первой строке
[54:57.720 --> 55:04.960]  будут вот эти вот коэффициенты, как аэн выражается через столбец предыдущих. А здесь будет вот такая
[55:04.960 --> 55:16.680]  вот простая матрица с единичками по диагонали. Согласны? Ну просто умножение матриц так работает.
[55:16.680 --> 55:25.880]  Вот, ну это будет у меня за s куб лог n. Значит, тогда, если мне хочется посчитать
[55:25.880 --> 55:34.480]  аэнный элемент рекурренты, то это получается алгоритм за s куб лог n. Потому что умножение
[55:34.480 --> 55:39.760]  матриц работает за куб. Бинарное возведение требует еще логарифмического множителя. Ну и тогда
[55:39.760 --> 55:49.080]  аэн и мы можем за такую симпатику считать. Вот. Ну мы хотим побыстрее, чем s куб.
[55:49.080 --> 56:09.680]  Кого? А вы имеете в виду через корни вот это вот? В смысле, решение, уравнение решите
[56:09.680 --> 56:15.200]  характеристическое? Да, ну решать мы его не будем, но характеристики многощины мы построим.
[56:15.200 --> 56:20.880]  Значит, смотрите, давайте действительно для вот этой штуки я заведу характеристические
[56:20.880 --> 56:24.960]  многочлены. Раз у нас сегодня было все про многочлены, давайте построим характеристические
[56:24.960 --> 56:30.920]  многочлены. Значит, что будет здесь? Вот на этом примере давайте построим. Если я не ошибаюсь,
[56:30.920 --> 56:43.320]  то следующий многочлен. Значит, x4 минус 7x в кубе плюс 8x в квадрате минус 13x плюс 1. То есть,
[56:43.320 --> 56:48.320]  я беру x в этой, а дальше с противоположными коэффициентами вычитаю все, ну вот, короче,
[56:48.320 --> 56:55.160]  какой здесь номер h и с такой степенью x будет. Вот это характеристические многочлены. Давайте
[56:55.160 --> 57:21.040]  я как-нибудь обозначу, пусть будет. Отверждение. Пусть x в n по модулю p
[57:21.040 --> 57:36.720]  Это следующий многочлен. Так, b-шки у меня свободные. Давайте b0 плюс b1x плюс и так далее,
[57:36.720 --> 57:45.880]  плюс bs минус 1 и xs минус 1. Ну понятно, это многочлен степени s. Степень многочлена характеристичка
[57:45.880 --> 57:50.600]  такая же, как порядок рекурренты. При взятии остатка по нему у меня получается многочлен
[57:50.600 --> 57:55.520]  в степени не выше s минус 1. А возможно это 0, тогда это меньше степени многочлен. Так вот,
[57:55.520 --> 58:16.200]  тогда я утверждаю, аn равно a0 b0 плюс a1 b1 плюс и так далее, плюс аs минус 1 bs минус 1. А вот,
[58:16.200 --> 58:23.200]  первые с-коэффициентов нашей рекурренты, первые значения нашей рекурренты. То есть,
[58:23.200 --> 58:29.160]  ну вообще, что такое рекуррент, если она с-то в порядка, то у нее очень-очень первые с-значения
[58:29.160 --> 58:33.500]  должны быть заданы. То есть, а0, а1, а2, а3 должны быть заданы, потому что, ну как тут написано,
[58:33.500 --> 58:38.880]  что n хотя бы 4. Значит, первые с-членов у меня фиксированы, какие-то константы. А дальше все,
[58:38.880 --> 58:44.560]  начиная с с этого выражаются через предыдущий вот по такой рекурренте. Так вот, я утверждаю,
[58:44.560 --> 58:51.920]  что если взять х венны по модулю х-многочлена, у меня получится как раз представление а n через 1s
[58:51.920 --> 58:59.400]  коэффициентов. То есть, вот эти вот коэффициенты перед х будут то, с какими коэффициентами надо
[58:59.400 --> 59:08.920]  взять изначальные вот эти ашки. Соответственно, если мы это докажем, то что остается сделать?
[59:08.920 --> 59:13.360]  Остается поделить один многочлен на другой с остатком. Ну, единственная правда, что у него
[59:13.360 --> 59:19.040]  может быть большая степень. Да, я хочу делать это примерно за log n. Вот, надо будет еще понять,
[59:19.040 --> 59:25.080]  как многочлен вот такой степени брать по модулю. Ну, это еще собрать. Давайте с этим разберемся сначала.
[59:25.080 --> 59:33.040]  Так, первый раз жизни будут доказывать, так что ничего не обещаю. Индукция по n.
[59:33.040 --> 59:54.400]  Значит, база n до s-1 тривиально. Если n до s-1, то мы берем многочлен маленькой степени по модулю
[59:54.400 --> 01:00:02.080]  многочлена с этой степени. Значит, я ничего не делаю и у меня остается просто х венный. То есть,
[01:00:02.080 --> 01:00:06.160]  коэффициент перед х венный будет единичка, все остальные нули. Это как раз выражение а n-ого
[01:00:06.160 --> 01:00:10.360]  через само себя, через а n. Если n маленькое, то это просто выражение а n само через себя.
[01:00:10.360 --> 01:00:31.160]  То есть, в этом случае я а n выражаю само через себя. Согласны? Ну, теперь давайте для х веста
[01:00:31.160 --> 01:00:45.000]  это докажем. Значит, n равно s тоже в базу индукции я запихаю. Давайте докажем для n равно s руками.
[01:00:45.000 --> 01:00:53.240]  Ну, я беру вот такой многочлен и к степени s, делю его на характеристический той же степени,
[01:00:53.240 --> 01:01:00.640]  причем он имеет обязательный вид х веста и там минус что-то. Так, ну, давайте напишу минус что.
[01:01:00.640 --> 01:01:20.360]  Ну, я обозначу вот эти вот коэффициенты, с помощью которых выражается а n-ое через предыдущий,
[01:01:20.360 --> 01:01:29.840]  как за c-шки просто. Вот я говорю, что это c s-1, это c-3, это c-2, это c-1, это c-0. Ну, с минусами. Вот.
[01:01:29.840 --> 01:01:36.520]  Ну, давайте поделим в столбик. Понятно, что старше здесь будет единица. Мне нужно вычесть это из этого это.
[01:01:36.520 --> 01:01:45.920]  Да, то есть, минус х многочлен, остается сумма этих c-шек с плюсами уже. То есть, c s-1, x s-1,
[01:01:45.920 --> 01:01:56.200]  плюс так далее, плюс c-0. Ну, не очень сложно многочлены делить, пока что еще не разучились. Ну,
[01:01:56.200 --> 01:02:02.680]  это ровно то, что нужно. Потому что мы получили, что определение как раз остатка деления х веста
[01:02:02.680 --> 01:02:08.880]  на p, это вот такая вот вещь. Но мы же с вами знаем, что а s-то, это в точности вот такая вот комбинация
[01:02:08.880 --> 01:02:18.400]  ровно с такими коэффициентами первых s-значений. То есть, мы знаем, что верно вот это вот. А это мы
[01:02:18.400 --> 01:02:30.760]  хотим доказать. Вот. То есть, еще раз. Что я хочу? Я хочу сказать, что если я взял х вестой по модулю
[01:02:30.760 --> 01:02:36.120]  p, получил какой-то многочлен, то вот эти вот коэффициенты, результаты, которые я получил в остатке,
[01:02:36.120 --> 01:02:45.120]  вот эти вот коэффициенты, это и будут коэффициенты выражения а s-того через первые s-ашек. Ну вот. То
[01:02:45.120 --> 01:02:53.680]  есть, мне надо доказать вот это. Ну ровно это как бы и написано в рекурренте. Что а для всех n
[01:02:53.680 --> 01:03:03.040]  начиная с s, это вот такое вот выражение через предыдущее. Понятно? Вот. Ну, значит, база есть.
[01:03:03.040 --> 01:03:22.840]  Теперь переход. Значит, пусть х вентой в процент p от x, это вот тот многочлен. И известно,
[01:03:22.840 --> 01:03:29.440]  что а n-ая, это линейная комбинация первых s-ашек, вот опять-таки с такими же коэффициентами. То есть,
[01:03:29.440 --> 01:03:47.480]  это b0 а0, плюс так далее, плюс b s-1 a s-1. А теперь рассмотрим х вен плюс первый. Вот. Ну,
[01:03:47.480 --> 01:03:54.240]  я напишу, что х вен плюс первый это х умножить на х венный. Значит, х умножить на х венный по
[01:03:54.240 --> 01:04:22.840]  модулю p и потом вот это вот все еще раз по модулю p. Вот это почему верно? Ну, потому что,
[01:04:22.840 --> 01:04:29.120]  ну, смотрите, если мы погрузимся в кольцо по модулю zp, по модулю p от x, если p как модуль
[01:04:29.120 --> 01:04:32.800]  воспринимать, то вам неважно, в каком порядке делать перемножение. Вы можете сначала х вентой
[01:04:32.800 --> 01:04:36.440]  взять по модулю, потом домножить на х и взять по модулю. Либо сразу вот это взять по модулю.
[01:04:36.440 --> 01:04:59.280]  Ну, это я не буду доказывать, совсем просто. Ничего, если подумать, то поймете. Вот. Ну,
[01:04:59.280 --> 01:05:12.360]  чего? х венты по модулю я знаю, что такое. Это вот эта вот вещь. b s-1 х v s-1. Значит,
[01:05:12.360 --> 01:05:18.480]  теперь после домножения на х, давайте я веду как раз по модулю, я говорю, что я перемещаюсь в кольцо
[01:05:18.480 --> 01:05:24.320]  по модулю p от x, этот процент везде сотру. Но теперь я вот этот стук умножаю на х. Тут будет
[01:05:24.320 --> 01:05:38.200]  написано b 0 х в первой, b 1 х во второй, плюс так далее, плюс b s-1 х в эстой. Вот. Ну,
[01:05:38.200 --> 01:05:52.280]  а теперь х в эстой меняем, да и побеждаем, собственно. Так, сейчас. Да, ну вот я написал
[01:05:52.280 --> 01:06:01.760]  сравнимо по модулю p от x, да. Сейчас, сейчас, сейчас. Ну, давайте так скажу. Смотрите,
[01:06:01.760 --> 01:06:10.040]  я получил выражение х в n плюс первой через вот эти вот s х. Это в частности означает,
[01:06:10.040 --> 01:06:26.600]  смотрите, это в частности означает, что a n плюс первая, это следующее. Почему? Потому что,
[01:06:26.600 --> 01:06:32.480]  смотрите, я знал это для a n. Я знал, что a n выражается вот с коэффициентами b через первые
[01:06:32.480 --> 01:06:38.280]  s х. Теперь, я говорю, я сдвигаю все на единицу, и a n плюс первая выражается с теми же самыми
[01:06:38.280 --> 01:06:44.520]  коэффициентами через вот эти ашки, с первой по эстой. Почему? Ну, потому что вот у меня была
[01:06:44.520 --> 01:06:49.720]  бесконечная последовательность, бесконечная рекуррента, у нее первая s члена фиксированная,
[01:06:49.720 --> 01:06:55.360]  все астамии выражаются по формуле. Давайте я сдвину ее на 1 и начну нумерацию не с нулевого, а с первого.
[01:06:55.360 --> 01:07:04.160]  Ну, тогда выражение n плюс первого члена будет выражено как раз через вот эти вот первые члены
[01:07:04.160 --> 01:07:09.600]  с первого по эстой с теми же самыми коэффициентами, что x в n было выражено через a 0, и так далее,
[01:07:09.600 --> 01:07:15.760]  ас минус 1. То есть, если вот это вот корректное выражение для x в n через 0, и так далее,
[01:07:15.760 --> 01:07:21.320]  ас минус 1, то это корректное выражение для x в n плюс первое через a 1, и так далее, ас. Ну,
[01:07:21.320 --> 01:07:27.040]  просто я сдвинул рекуррент на 1 влево. Поскольку рекуррентно-соотношение не изменилось,
[01:07:27.040 --> 01:07:31.800]  то у меня выполняется по-прежнему вот это вот выражение любого члена через предыдущее.
[01:07:31.800 --> 01:07:38.880]  Ну вот. А дальше мы знаем, ну все, а дальше уже очевидно. Дальше мы знаем, что x в эстой,
[01:07:38.880 --> 01:07:45.200]  если взять по модулю P, то оно превратится, оно как бы разложится при взятии по модуле,
[01:07:45.200 --> 01:07:50.360]  оно как раз даст разложение x в эстой через все меньшие степени. То есть, как вот это вот
[01:07:50.360 --> 01:07:57.640]  выражается через a 0, и так далее, ас минус 1. Ну и значит, после взятия по модуле у меня как раз это
[01:07:57.640 --> 01:08:03.720]  прокинется во все предыдущие ашки. То есть, мы уже знаем с вами, у нас по индукции мы знаем,
[01:08:03.720 --> 01:08:11.200]  что x в эстой, по предположению индукции мы знаем, что x в эстой, так о чем? Можно просто сказать,
[01:08:11.200 --> 01:08:17.720]  что это по модулю, по модулю P, это мы знаем, что, это вот здесь написано, да? С с минус 1,
[01:08:17.720 --> 01:08:31.000]  x в эстой минус 1, и так далее, c 0 x 0. Значит, если я беру b множитель, то b с минус 1 на x в эстой по
[01:08:31.000 --> 01:08:35.080]  модулю P, это все то же самое, только коэффициент надо еще умножить на b.
[01:08:47.720 --> 01:08:53.760]  Ну вот, это то же самое, что если бы мы вот это вот ас расписали через первые
[01:08:53.760 --> 01:08:59.680]  члены с номерами от 0 до с минус 1. Поэтому в итоге у нас получилось, что вот этот многочлен,
[01:08:59.680 --> 01:09:05.520]  после взятия его по модулю P от x, у меня получится ровно то же самое разложение его через первые
[01:09:05.520 --> 01:09:12.120]  с коэффициентов, что и если бы мы разложили вот в этом вот выражении ас через первые с коэффициентов.
[01:09:12.120 --> 01:09:24.160]  Нет, все нормально, я на константу умножил просто, она вот здесь везде есть. Я просто вот эту строчку
[01:09:24.160 --> 01:09:33.040]  на константу умножил. Вот, ну вроде, вроде, да. Точно так же, мы же знаем, как ас раскладывается
[01:09:33.040 --> 01:09:40.160]  через предыдущие. Ас это с, с минус 1, ас минус 1, плюс и так далее, плюс с нулевое, а нулевое.
[01:09:40.160 --> 01:09:47.640]  То есть строчка по факту вот такая же. Теперь еще если на b с минус 1 умножить, то будет вот эта
[01:09:47.640 --> 01:10:06.680]  вот строчка. Ну вот, получается, что вот это вот и вот это вот это одно и то же. Еще раз? Ну вот, ас
[01:10:06.680 --> 01:10:16.800]  минус 1. А, извините, да, да, да, да. Спасибо. Вот, то есть, ну вот эти вот строчки, если взять
[01:10:16.800 --> 01:10:22.800]  xс по модулю p или если ас разложить через первые с членов, получится одно и то же. Ну а ровно это
[01:10:22.800 --> 01:10:28.160]  и мы хотим показать, что взять xn плюс 1 по модулю p имеет коэффициенты такие же, как разложение
[01:10:28.160 --> 01:10:43.600]  ан плюс 1 по первым с членам рекуррента. Ну, на самом деле, магия здесь небольшая. Магия только
[01:10:43.600 --> 01:10:49.160]  вот в этом члене, что если вы xс-то берете по модулю p, то вы получаете его разложение по первым
[01:10:49.160 --> 01:10:54.920]  с коэффициентам. Выражение ас-то через первые с коэффициентов. Ну а дальше, более-менее тривиально,
[01:10:54.920 --> 01:10:59.240]  если у вас это верно, то при умножении на x у вас просто проталкивается степень через предыдущие.
[01:10:59.240 --> 01:11:05.040]  При взятии по модулю у вас xn плюс 1 проталкивается через предыдущие. Если каждое правильно разложилось
[01:11:05.040 --> 01:11:12.080]  через предыдущие, через первые с, ну то значит это тоже разложится, грубо говоря. Вот. Хорошо,
[01:11:12.080 --> 01:11:29.520]  значит это мы доказали. Теперь давайте посмотрим, как задачу теперь решать. Все готово? Значит,
[01:11:29.520 --> 01:11:36.760]  смотрите, мне нужно взять многочлен вот такой вот по модулю p от x, где это многочлен степени s.
[01:11:36.760 --> 01:11:51.000]  Правда? Давайте будем это делать внезапно так же, как бинарного зрения в степень. То есть,
[01:11:51.000 --> 01:11:58.800]  я из такой позиции, ну смотрите, как у нас работает бинарное зрение в степень, а в n-й это
[01:11:58.800 --> 01:12:04.080]  а n пополам в квадрате, если n четно. То же самое здесь, если у меня есть x в n-й и n четно,
[01:12:04.080 --> 01:12:10.160]  давайте скажем, что n четно, тогда я сначала посчитаю x в степени n пополам по модулю p,
[01:12:10.160 --> 01:12:18.680]  потом возведу в квадрат и еще раз возьму по модулю p. Это мне упрощает жизнь, потому что после
[01:12:18.680 --> 01:12:23.520]  взятия по модулю у меня получается многочлен степени s, и возведить его в квадрат работает за s
[01:12:23.520 --> 01:12:30.440]  лог s. То есть, если n очень большой, ну там, не знаю, миллиарды, десятки миллиардов, там 10 в 9,
[01:12:30.440 --> 01:12:35.560]  а s какой-нибудь типа 10 в 5, ну то понятно, что возведить многочлен порядка s в квадрат легко,
[01:12:35.560 --> 01:12:41.960]  более-менее, по сравнению с многочленом степени n. Вот, ну поэтому просто бинарное зрение в степень.
[01:12:41.960 --> 01:12:49.720]  То есть, я делаю следующее, если n четно, то я решаю сначала такую задачу, получаю многочлен
[01:12:49.720 --> 01:12:54.840]  степени s, возвожу в квадрат, делю по модулю p, все это работает за s лог s. Если n нечетно,
[01:12:54.840 --> 01:13:03.380]  то я вычитаю единичку, сначала считаю x в n минус 1 по модулю p от x, получаю опять-таки многочлен
[01:13:03.380 --> 01:13:10.600]  степени s, потом домножаю на x и опять беру процент. Значит, это было в случае n четно,
[01:13:10.600 --> 01:13:21.040]  это в случае n нечетно. Вот. Ну дальше, как обычно, получается, хотя бы на каждой второй
[01:13:21.040 --> 01:13:25.360]  итерации я n поделю пополам, значит у меня итерация всего будет порядка логарифма,
[01:13:25.360 --> 01:13:33.640]  и каждая итерация работает за s лог s, потому что каждая итерация это, в худшем случае,
[01:13:33.640 --> 01:13:39.000]  просто возведение в квадрат и взятие по модулю. Это я умею делать за s лог s,
[01:13:39.000 --> 01:13:49.840]  где s размер многочленов. Значит, s лог s на итерацию. Ну и получается общая сложность s лог s лог n.
[01:13:49.840 --> 01:14:05.200]  Потому что это бы работал за n лог n. Представьте, что n очень большое, было бы тогда n лог n. То есть,
[01:14:05.200 --> 01:14:10.000]  можно было бы сразу просто поделить с помощью фурье, но это n лог n. Если n очень большое,
[01:14:10.000 --> 01:14:14.400]  мы можем только логарифм от n брать, ну 8 точек в смысле включать, то вот можно так.
[01:14:14.400 --> 01:14:18.560]  s лог s лог n, это уже более-менее что-то адекватное. То есть, еще раз, да, представьте себе,
[01:14:18.560 --> 01:14:22.880]  что у вас есть рекуррента не очень большого порядка, там ну 100, 200, может быть 1000,
[01:14:22.880 --> 01:14:26.560]  может быть 10 в пятый. Ну короче, s, что-то такое, что можно брать многочлены,
[01:14:26.560 --> 01:14:31.240]  перемножать многочлены размера s. Ну а n какой-нибудь очень большой, вам надо посчитать очень большой
[01:14:31.240 --> 01:14:46.240]  член рекуррента. Ну тогда вот, пожалуйста. Так, вопросы можете? Ну все тогда, спасибо.
