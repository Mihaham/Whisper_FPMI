[00:00.000 --> 00:06.960]  Поговорим про логарифмическую память.
[00:06.960 --> 00:24.760]  Мы в прошлый раз изучили, что логарифмическая память
[00:24.760 --> 00:26.960]  и в детерминированном варианте, и в нетерминированном
[00:26.960 --> 00:28.960]  варианте, в котором она лежит в P.
[00:28.960 --> 00:32.960]  Тут получается L, вложено в NL, это вложено в P.
[00:32.960 --> 00:42.960]  Возникает вопрос, какие задачи решаются в NL.
[00:42.960 --> 00:49.960]  Поскольку теорема Сейвича нам не позволяет сказать,
[00:49.960 --> 00:54.960]  что NL равно L, и вообще это неизвестно, то возникает
[00:54.960 --> 00:56.960]  некоторая градация задач.
[00:56.960 --> 01:04.960]  Давайте посмотрим на некоторые задачи из L.
[01:04.960 --> 01:26.960]  Во-первых, будет в L лежать все автоматные языки,
[01:26.960 --> 01:27.960]  они же регулярные.
[01:27.960 --> 01:32.960]  Там вообще никакой памяти не нужно, потому что можно
[01:32.960 --> 01:36.960]  просто слева-направо пройтись и получить ответ.
[01:36.960 --> 02:01.960]  Есть что-нибудь более сложное.
[02:01.960 --> 02:04.960]  Как бы сам по себе автомат, это такая очень простая
[02:04.960 --> 02:05.960]  машинтюринг, которая движется только слева-направо.
[02:05.960 --> 02:13.960]  А нам не нужно чего хранить, мы просто идем по ленте
[02:13.960 --> 02:20.960]  слева-направо, и соответственно, когда встретили конец слова,
[02:20.960 --> 02:22.960]  нужно понять, в каком мы состоянии, в принимающем
[02:22.960 --> 02:25.960]  или отвергающем, и уже вернуть соответствующий ответ.
[02:26.960 --> 02:31.960]  Все автоматные здесь будут лежать, но, например,
[02:31.960 --> 02:33.960]  можно рассмотреть задачу про баланс скобок.
[02:33.960 --> 02:44.960]  Это множество правильных скобочных последовательностей.
[02:55.960 --> 03:00.960]  Это уже не автоматный язык, но, тем не менее, он не очень
[03:00.960 --> 03:03.960]  сложный, но он там контекст свободный.
[03:07.960 --> 03:09.960]  Сейчас, кстати, я не знаю, все ли контексты свободные
[03:09.960 --> 03:10.960]  тут лежат или не все.
[03:15.960 --> 03:17.960]  Но он, конечно, неограниченный.
[03:17.960 --> 03:19.960]  Нет, наверное, если все что угодно, можем класть там
[03:19.960 --> 03:21.960]  вот какие-нибудь проблемы.
[03:21.960 --> 03:24.960]  Ладно, это наверняка где-то написано, но я просто не знаю.
[03:24.960 --> 03:27.960]  В общем, короче говоря, вот этот язык, он точно будет
[03:27.960 --> 03:31.960]  в Эль, потому что там не нужен большой стэк.
[03:31.960 --> 03:36.960]  Например, потому что есть теорема о том, что последовательность
[03:36.960 --> 03:39.960]  правильная, тогда и только тогда, когда во всей баланс
[03:39.960 --> 03:44.960]  нулевой, соответственно, в любом префиксе баланс неотрясательный.
[03:44.960 --> 03:45.960]  Что можно делать?
[03:45.960 --> 03:48.960]  Можно просто идти слева направо и считать баланс.
[03:48.960 --> 03:54.960]  Но на это удобно смотреть, ровно так, как мы вводили модель в прошлый раз.
[03:54.960 --> 03:58.960]  То есть есть отдельная лента неизменяемая со входом,
[03:58.960 --> 04:00.960]  и есть рабочая лента.
[04:00.960 --> 04:04.960]  Вот на рабочей ленте у нас есть отдельная лента,
[04:04.960 --> 04:09.960]  если мы встретили открывающую скобку, то мы его увеличиваем на единицу,
[04:09.960 --> 04:12.960]  если закрывающую, то уменьшаем на единицу.
[04:12.960 --> 04:18.960]  Если пытаемся ноль уменьшить, то значит эта ошибка нужно вернуть до ноль.
[04:18.960 --> 04:20.960]  Нужно вернуть отрицательный ответ.
[04:20.960 --> 04:25.960]  Если дошли до конца, то смотрим, что баланс нулевой,
[04:25.960 --> 04:28.960]  и соответственно, что баланс нулевой.
[04:28.960 --> 04:33.960]  Если дошли до конца, то смотрим, что баланс нулевой,
[04:33.960 --> 04:37.960]  и соответственно, если нулевой, то выдаем наоборот единицу,
[04:37.960 --> 04:42.960]  а если положительный, то выдаем снова отрицание.
[04:42.960 --> 04:48.960]  Соответственно, баланс точно будет не больше, чем число символов.
[04:48.960 --> 04:51.960]  А раз баланс не больше, чем число символов,
[04:51.960 --> 04:57.960]  то это значит, что на него уходит как раз логорифм от числа символов,
[04:57.960 --> 04:59.960]  то есть память как раз какая нужна.
[05:02.960 --> 05:05.960]  Так, ну можно не записывать, да?
[05:05.960 --> 05:08.960]  Да, с двумя парами скобок уже нифига не работает.
[05:08.960 --> 05:12.960]  Ну, с двумя парами скобок не работает такая простая вещь,
[05:12.960 --> 05:15.960]  но на самом деле работает.
[05:15.960 --> 05:20.960]  Значит, пар бра, это parenthesis, это круглые скобки, а брекетс квадратные.
[05:20.960 --> 05:24.960]  Значит, здесь два недоскобок.
[05:27.960 --> 05:32.960]  Любой какой язык?
[05:32.960 --> 05:37.960]  Ну, нет, на самом деле...
[05:37.960 --> 05:42.960]  Да, я не знаю. Это у вас такая теорема была?
[05:42.960 --> 05:46.960]  Нет, там еще раз что-то издало, какие-то преобразования.
[05:46.960 --> 05:50.960]  Ну, в смысле, не просто скобка.
[05:50.960 --> 05:53.960]  Так, ну давайте с двумя скобками разберемся.
[05:53.960 --> 05:58.960]  Но проблема такая, что нужно смотреть не только на баланс каждого вида скобок в отдельности,
[05:58.960 --> 06:03.960]  но и на то, как они друг к другу относятся.
[06:03.960 --> 06:10.960]  Но дальше идея такая, что для каждой скобки можно найти парную Ей
[06:10.960 --> 06:14.960]  через тот же самый баланс по одному виду скобок.
[06:14.960 --> 06:18.960]  То есть если у нас есть, скажем, открывающая скобка,
[06:18.960 --> 06:23.960]  то мы можем идти, считать, соответственно...
[06:23.960 --> 06:27.960]  Значит, на самом деле, смотрите, нужно считать две вещи.
[06:27.960 --> 06:30.960]  Нужно считать общее число шагов. Зачем?
[06:30.960 --> 06:33.960]  Чтобы потом сюда можно было вернуться.
[06:33.960 --> 06:37.960]  Смотрите, если два вида скобок, то нужно больше одного счетчика.
[06:37.960 --> 06:42.960]  Мы не можем никаких меток оставлять на ленте, потому что мы не можем считать.
[06:42.960 --> 06:45.960]  Но мы можем считать, в каком месте мы находимся.
[06:45.960 --> 06:48.960]  Завести отдельный счетчик.
[06:48.960 --> 06:52.960]  Ну или можно поставить метку, но не в виде изменения символа,
[06:52.960 --> 06:57.960]  а в виде того, что мы просто отсчитываем число шагов от этой клетки.
[06:57.960 --> 07:02.960]  Поэтому какое-то константное число меток можно поставить.
[07:02.960 --> 07:06.960]  Соответственно, если у нас есть два вида скобок,
[07:06.960 --> 07:09.960]  то мы идем слева-направо.
[07:09.960 --> 07:12.960]  Во-первых, просто считаем шаги, насколько далеко мы ушли.
[07:12.960 --> 07:17.960]  И во-вторых, считаем баланс по именно скобкам такого вида.
[07:17.960 --> 07:22.960]  И, соответственно, в первый момент, когда он обратился в ноль,
[07:22.960 --> 07:25.960]  это закрывающая скобка.
[07:25.960 --> 07:31.960]  Там критерии на самом деле такое, что, во-первых, у каждой скобки есть парная ей,
[07:31.960 --> 07:36.960]  и, во-вторых, если посмотреть на участок между двумя видами скобок,
[07:36.960 --> 07:40.960]  то тогда в нем будет соблюден баланс для другого вида скобок.
[07:40.960 --> 07:43.960]  И это, как раз, тоже нарушается вот здесь.
[07:43.960 --> 07:47.960]  Если мы посмотрим этот участок между парными круглыми скобками,
[07:47.960 --> 07:52.960]  то тут будет одна квадратная, которая, конечно, не сбалансирована.
[07:52.960 --> 07:56.960]  Ну это, в общем, управляемое место.
[07:56.960 --> 08:01.960]  Ну а дальше понятно, что делать.
[08:01.960 --> 08:05.960]  От открывающей скобки мы ищем закрывающую,
[08:05.960 --> 08:10.960]  и потом идем назад, следя за балансом по другому виду скобок.
[08:10.960 --> 08:14.960]  Ну и, соответственно, как раз за этим нужен счетчик,
[08:14.960 --> 08:17.960]  насколько далеко мы ушли, чтобы вернуться туда же.
[08:17.960 --> 08:22.960]  И еще нужно какой-то глагол, чтобы вернуться туда же.
[08:22.960 --> 08:26.960]  То есть глобальная программа, что мы идем слева направо,
[08:26.960 --> 08:31.960]  и для каждой открывающей скобки ищем ей закрывающую.
[08:31.960 --> 08:36.960]  Нет, почему самую удаленную, самую ближнюю?
[08:36.960 --> 08:39.960]  Значит, смотрите, можно с самого начала проверить,
[08:39.960 --> 08:42.960]  что здесь в целом с балансами все правильно,
[08:42.960 --> 08:46.960]  но если бы мы ищем самую удаленную скобку,
[08:46.960 --> 08:48.960]  то мы ищем ее ближнюю.
[08:48.960 --> 08:50.960]  Смотрите, можно с самого начала проверить,
[08:50.960 --> 08:53.960]  что здесь в целом с балансами все правильно,
[08:53.960 --> 08:57.960]  чтобы там никаких хвостов не оставалось.
[08:57.960 --> 09:00.960]  А потом уже анализировать отдельные участки
[09:00.960 --> 09:03.960]  между двумя парными скобками.
[09:03.960 --> 09:05.960]  И тут, конечно, это ближайшая должна быть,
[09:05.960 --> 09:09.960]  то есть та, которая парна именно этой.
[09:09.960 --> 09:11.960]  Ну, соответственно, есть какой-то один счетчик,
[09:11.960 --> 09:13.960]  до которой мы уже дошли,
[09:13.960 --> 09:16.960]  один счетчик, насколько далеко мы отошли от этой штуки,
[09:16.960 --> 09:20.960]  и третий счетчик, это просто счетик баланса,
[09:20.960 --> 09:22.960]  чтобы найти эту закрывающую.
[09:22.960 --> 09:25.960]  И потом можно тот же самый или другой счетчик
[09:25.960 --> 09:29.960]  использовать, чтобы баланс по другому виду скобок.
[09:29.960 --> 09:32.960]  В принципе, вообще это можно в один проход делать.
[09:32.960 --> 09:34.960]  Можно отдельно идти слева направо
[09:34.960 --> 09:36.960]  и считать отдельно баланс по круглым,
[09:36.960 --> 09:38.960]  отдельно по квадратным.
[09:38.960 --> 09:40.960]  И в тот момент, когда по круглым
[09:40.960 --> 09:42.960]  первый раз баланс обратился в ноль,
[09:42.960 --> 09:44.960]  то по квадратным он тоже должен быть нулевым.
[09:44.960 --> 09:47.960]  Ну и ни в какой момент в минус не уходить.
[09:51.960 --> 09:54.960]  И да, аналогично между квадратными.
[09:54.960 --> 09:57.960]  Нет, а это мы просто идем слева направо,
[09:57.960 --> 10:00.960]  вот это глобальный цикл слева направо,
[10:00.960 --> 10:02.960]  где мы каждые открывающие скобки ищем парну
[10:02.960 --> 10:06.960]  и проверяем, что между этими парными все балансы совпадают.
[10:13.960 --> 10:16.960]  Да, ближайший закрывающий, который обращает в ноль баланс,
[10:16.960 --> 10:18.960]  который начинается отсюда.
[10:43.960 --> 10:46.960]  Ну это как по индукции по построению доказывает,
[10:46.960 --> 10:48.960]  что это правильный критерий.
[10:53.960 --> 10:55.960]  Ну вот, в общем, нужно несколько счетчиков,
[10:55.960 --> 10:59.960]  и это на самом деле основной смысл логарифмической памяти,
[10:59.960 --> 11:01.960]  что память логарифмическая, если достаточно
[11:01.960 --> 11:07.960]  конечного числа счетчика, который в полимерном диапазоне варьируется.
[11:08.960 --> 11:11.960]  Так, хорошо.
[11:11.960 --> 11:15.960]  Значит, что еще можно сделать на логарифмической памяти?
[11:15.960 --> 11:18.960]  Ну, например, двоичная арифметика работает.
[11:26.960 --> 11:29.960]  Значит, тут будут небольшие различия,
[11:29.960 --> 11:32.960]  связанные с тем, что если у вас несколько аргументов,
[11:32.960 --> 11:35.960]  то вопрос, будут ли они на одной ленте
[11:35.960 --> 11:38.960]  или на нескольких записан, это во-первых.
[11:38.960 --> 11:42.960]  И во-вторых, если речь идет, например, о сложении,
[11:42.960 --> 11:44.960]  то тогда еще есть два варианта.
[11:44.960 --> 11:46.960]  Либо вы проверяете правильность сложения,
[11:46.960 --> 11:51.960]  что данные А, Б, С, и нужно проверить, что действительно С это А плюс Б.
[11:51.960 --> 11:54.960]  Либо вам нужно печатать прям С,
[11:54.960 --> 11:58.960]  и тогда нужно еще отдельное понятие логарифмически вычислимой функции,
[11:58.960 --> 12:00.960]  а не предиката.
[12:00.960 --> 12:05.960]  Сейчас, наверное, обсудим, там есть два определения.
[12:05.960 --> 12:08.960]  Одно определение связано с тем,
[12:08.960 --> 12:13.960]  что у этой самой логарифмической машины еще есть лента выхода.
[12:13.960 --> 12:16.960]  На нее можно только печатать, наоборот.
[12:16.960 --> 12:19.960]  Читать нельзя, значит, можно только печатать.
[12:19.960 --> 12:22.960]  И, соответственно, на этой ленте нужно печатать ответ,
[12:22.960 --> 12:25.960]  использовав логарифмическую рабочую память.
[12:25.960 --> 12:30.960]  Второй подход связан с...
[12:30.960 --> 12:33.960]  Ну, в общем, через ряд предикатов это определяется,
[12:33.960 --> 12:38.960]  грубо говоря, что эта бита ответа может иметь три вида.
[12:38.960 --> 12:41.960]  0, 1, или что слово уже закончилось.
[12:41.960 --> 12:45.960]  Ну и, соответственно, для трех вариантов ответа
[12:45.960 --> 12:47.960]  одного бита не хватит, но двух хватит.
[12:47.960 --> 12:51.960]  Соответственно, оба бита нужно уметь вычислять в логарифмическое время.
[12:52.960 --> 12:55.960]  Вот, хорошо.
[12:55.960 --> 12:57.960]  Так, значит, двоечная арифметика.
[12:57.960 --> 13:01.960]  Но сначала, ну, совсем просто, если это, наверное, сравнение чисел.
[13:07.960 --> 13:12.960]  Значит, сравнение чисел в двоечной записи.
[13:12.960 --> 13:15.960]  Вот, как это делается?
[13:15.960 --> 13:21.960]  Ну, давайте считать, что...
[13:21.960 --> 13:26.960]  Мы не будем предполагать, что там они в корректном виде,
[13:26.960 --> 13:28.960]  то есть без ведущих нулей.
[13:28.960 --> 13:30.960]  Пусть там даже будут ведущие нули,
[13:30.960 --> 13:33.960]  и они могут быть даже разной длины.
[13:33.960 --> 13:34.960]  Ну, что нам нужно сделать?
[13:34.960 --> 13:38.960]  Ну, нам сначала нужно найти, где там старшие единицы.
[13:38.960 --> 13:48.960]  Вот, значит, это даже...
[13:48.960 --> 13:52.960]  Сейчас, это можно делать даже ничего не записывая,
[13:52.960 --> 13:57.960]  а просто идти с мальших разрядов.
[13:57.960 --> 14:04.960]  Соответственно, да, где стоит единица,
[14:04.960 --> 14:08.960]  то есть как бы текущее большее число.
[14:08.960 --> 14:11.960]  Вот, если и там, и там стоит единица в новом разряде,
[14:11.960 --> 14:13.960]  то как бы текущая одинаковая.
[14:13.960 --> 14:16.960]  Вот, и так мы идем, пока оба числа не закончатся.
[14:16.960 --> 14:23.960]  Вот, значит, если у одного числа более старшие единицы,
[14:23.960 --> 14:24.960]  значит, нам и больше.
[14:24.960 --> 14:27.960]  Вот, если они в одинаковом разряде,
[14:27.960 --> 14:31.960]  то тогда нужно, как полагается, идти теперь к более младшим
[14:31.960 --> 14:33.960]  и сравнить лектик графически.
[14:33.960 --> 14:36.960]  Искать первое разночтение.
[14:36.960 --> 14:39.960]  Вот, и тут, значит, если они на разных лентах,
[14:39.960 --> 14:42.960]  то тут вроде даже логихмической памяти не нужно,
[14:42.960 --> 14:47.960]  а вообще константной будет достаточно.
[14:47.960 --> 14:50.960]  Сейчас.
[14:50.960 --> 14:54.960]  Мы идем еще сначала.
[14:54.960 --> 14:59.960]  Если они на одной ленте ленте будут просто узнавались...
[14:59.960 --> 15:02.960]  Если на одной ленте, то они записаны через пробел,
[15:02.960 --> 15:06.960]  и тогда нужно все время ходить туда-сюда, сравнивать эти разряды,
[15:06.960 --> 15:09.960]  а чтобы разобраться, куда именно идти, нужны счетчики.
[15:09.960 --> 15:16.960]  Есть еще способ написать, что чередую разряды.
[15:16.960 --> 15:18.960]  А, чередую разряды.
[15:18.960 --> 15:21.960]  Да, если чередует, то это очень удобно, конечно.
[15:21.960 --> 15:23.960]  Не нужно никуда бегать.
[15:23.960 --> 15:28.960]  Да, если чередует, то даже автоматное получится.
[15:28.960 --> 15:33.960]  Ну, типа того, да.
[15:33.960 --> 15:36.960]  В общем, разобрались, да, можно не рисовать.
[15:36.960 --> 15:42.960]  Так, хорошо, значит, сравнение более-менее очевидно.
[15:42.960 --> 15:45.960]  Так, сложение.
[15:45.960 --> 15:49.960]  Зачем договариваться, когда во всех случаях получаются логерестнические?
[15:49.960 --> 15:53.960]  Нет, каких-то, да.
[15:53.960 --> 15:58.960]  Если чередует на двух лентах, то вообще константная память нужна.
[15:58.960 --> 16:03.960]  Сложение тоже к константу, опять же, если две ленты, или если чередует.
[16:03.960 --> 16:08.960]  Ну да, если чередует на двух лентах, то вообще константная память нужна.
[16:08.960 --> 16:15.960]  Сложение тоже к константу, опять же, если две ленты, или если чередует.
[16:15.960 --> 16:26.960]  Просто обычный алгоритм в столбик.
[16:26.960 --> 16:33.960]  Вообще, кстати, долгие века алгоритмами назывались именно методами сложения и умножения в десятичной записи.
[16:33.960 --> 16:40.960]  Это, собственно, от имени Альхаризми произошло, и его труды были переведены на латинский,
[16:40.960 --> 16:46.960]  где там фамилия автора как-то переделалась в существительное, просто алгоритмис или как-то так.
[16:46.960 --> 16:52.960]  И, соответственно, алгоритмами долгое время называли именно вот это, как складывать столбик и так далее.
[16:52.960 --> 16:59.960]  Но потом уже, во времена Эйлера и Гаусса, уже более-менее современное понимание постепенно пришло,
[16:59.960 --> 17:04.960]  и более сложная теоретика числовой манипуляции.
[17:04.960 --> 17:11.960]  От числа, конечно, лог-лог.
[17:11.960 --> 17:16.960]  Когда мы говорим про лог-память, мы считаем логарифм от длины записи.
[17:16.960 --> 17:23.960]  То есть тут n битов, число 2 в степени n битов и логарифм n памяти.
[17:23.960 --> 17:29.960]  Если разные ленты, то даже логарифма не нужна, опять константа.
[17:29.960 --> 17:35.960]  Потому что мы просто идем с мальчик к старшим, складываем, переносим, и все как полагается.
[17:40.960 --> 17:43.960]  А неважно.
[17:43.960 --> 17:49.960]  Если нам нужно вывести ответ, то мы идем с мальчиках разряда, складываем, храним только бит переноса.
[17:49.960 --> 17:57.960]  Да, если нам нужно проверить, то мы просто то, что должны сейчас напечатать вместо печати, сравниваем с тем битом, который у нас в предполагаемом ответе есть.
[18:01.960 --> 18:07.960]  Да, мы не будем сохранять. Все, что мы сохраняем, это есть у нас перенос предыдущий разряд или нет.
[18:07.960 --> 18:15.960]  То есть мы, в случае складывания, считаем, что у нас 3 полноделки для чтения, для записти и для работы.
[18:15.960 --> 18:17.960]  Ну, типа того, да.
[18:17.960 --> 18:19.960]  И считаем только то, что на работе.
[18:24.960 --> 18:30.960]  Так, давайте мы про умножение поговорим, потому что это немножко более хитрая вещь.
[18:30.960 --> 18:40.960]  Если умножать в столбик, как в школе, то там даже не то, что логорист, а n в квадрате будет память.
[18:40.960 --> 18:42.960]  Такая квадратная табличка.
[18:42.960 --> 18:49.960]  Ну да, соответственно, можно не записывать, но констант это все равно не обойдешься.
[18:49.960 --> 18:54.960]  Что здесь получается?
[18:54.960 --> 19:00.960]  Так, вы старшие биты хотите маленькими дексами, или большими?
[19:00.960 --> 19:02.960]  Большими.
[19:02.960 --> 19:08.960]  Большими, да. То есть тут а n, а n-1 и так далее.
[19:08.960 --> 19:10.960]  1 давайте a0.
[19:10.960 --> 19:15.960]  Мы это умножаем на b.
[19:15.960 --> 19:19.960]  Пусть для простоты точно такое же число, но нулями дополним.
[19:19.960 --> 19:23.960]  Да, ведущими нулями дополним, чтобы было одинаково.
[19:23.960 --> 19:25.960]  b1, b0.
[19:25.960 --> 19:28.960]  Соответственно, все a i и b i это просто биты.
[19:28.960 --> 19:30.960]  Вот, и тогда что здесь получается?
[19:30.960 --> 19:37.960]  Ну получается, что здесь, если это 0 или единичка, то либо мы просто копируем то же самое число, либо просто все нули.
[19:37.960 --> 19:40.960]  То есть тут что-то такое получается.
[19:40.960 --> 19:44.960]  Ну, значит, на самом деле будет там а n умножить на b0.
[19:44.960 --> 19:49.960]  Значит, скажем b0 это 1, а b1 это 0.
[19:49.960 --> 19:53.960]  Ну и так далее.
[19:53.960 --> 19:56.960]  Дальше мы все суммируем.
[19:56.960 --> 20:03.960]  Соответственно, ответ как будет выглядеть?
[20:03.960 --> 20:05.960]  Можно побитого записать.
[20:05.960 --> 20:11.960]  c0 это будет просто a0 b0.
[20:11.960 --> 20:12.960]  Да, значит.
[20:12.960 --> 20:18.960]  А, слушайте, давайте лучше s. s от слова сумма, а c будет от слова carry переноса.
[20:18.960 --> 20:21.960]  Значит, s0 это a0 b0.
[20:21.960 --> 20:30.960]  Дальше s1 это будет a0 b1 плюс b1 a0.
[20:30.960 --> 20:34.960]  Вот, ну от этого a0 b0 переноса не может быть, а от этого уже может быть.
[20:34.960 --> 20:42.960]  А если здесь получилось 2, то, соответственно, сюда получается еще бит переноса c1.
[20:42.960 --> 20:54.960]  Соответственно, s2 это будет a0 b2 плюс a1 b1 плюс a2 b0 и еще плюс вот этот c1.
[20:54.960 --> 20:58.960]  Вот, и это в принципе даже 4 может получиться.
[20:58.960 --> 21:05.960]  То есть даже не в один следующий разряд, а в два следующих может получиться перенос.
[21:05.960 --> 21:13.960]  Но мы будем считать, что просто в предыдущий переносится как бы 2.
[21:13.960 --> 21:15.960]  Ну и так далее.
[21:15.960 --> 21:20.960]  Значит, и так далее все это будет вычисляться.
[21:20.960 --> 21:33.960]  Соответственно, смотрите, получается, на катом уровне вот эту сумму мы можем вычислять, имея логографическое число счетчиков.
[21:33.960 --> 21:42.960]  То есть нам нужен счетчик, чтобы запоминать, с какого места мы сейчас начинаем складывать.
[21:42.960 --> 21:50.960]  Мы можем считать, что у нас, скажем, один счетчик вот здесь, и мы так идем навстречу друг к другу.
[21:50.960 --> 21:53.960]  И, соответственно, перемножаем, складываем.
[21:53.960 --> 21:59.960]  Плюс еще добавляем перенос предыдущего этапа.
[21:59.960 --> 22:13.960]  Ну да, после этого, как бы, четность это в ответ.
[22:13.960 --> 22:15.960]  Вот такая большая сумма получилась.
[22:15.960 --> 22:20.960]  Значит, ее четность это очередное скт.
[22:20.960 --> 22:34.960]  А целая часть, половина, ну, в общем, все, что как бы без последнего бита, четность это и есть последний бит.
[22:34.960 --> 22:36.960]  А все остальное без последнего бита.
[22:36.960 --> 22:41.960]  Значит, это получается перенос на следующий раз.
[22:42.960 --> 22:56.960]  Ну и что же получается? Получается, что все эти биты будут не больше, по размеру все эти переносы будут не больше n.
[22:56.960 --> 22:59.960]  Нет, значит, 2n это уже сумма получится.
[22:59.960 --> 23:05.960]  Потому что, смотрите, вот эта часть не больше n, потому что здесь не больше n слагаемых.
[23:05.960 --> 23:08.960]  Ну n плюс 1 там может быть, если я так начал.
[23:08.960 --> 23:14.960]  Вот, значит, вот эта часть не больше n по предложению индукции, значит, сумма не больше 2n.
[23:14.960 --> 23:19.960]  А тогда, когда мы последний бит уберем, то снова будет не больше n.
[23:19.960 --> 23:25.960]  Кстати, даже n плюс 1 здесь не сломает ничего, потому что n плюс 1 и еще plus n, 2n плюс 1.
[23:25.960 --> 23:29.960]  Но уберем последний бит, все равно не больше n получится.
[23:29.960 --> 23:32.960]  Соответственно, значит, перенос не больше n.
[23:32.960 --> 23:37.960]  Для остального нужны счетчики, где мы тут находимся.
[23:37.960 --> 23:41.960]  И, соответственно, хранить нужны эти счетчики и перенос.
[23:41.960 --> 23:44.960]  Вот логорифмены получается.
[23:44.960 --> 23:52.960]  Ну опять же, сколько точно, зависит от того, храним мы это на разных лентах или на одной ленте.
[23:52.960 --> 23:56.960]  Да, логорифмены – суммарная память.
[23:56.960 --> 24:01.960]  То есть должна быть константа счетчиков и каждый счетчик в полиномеральном диапазоне.
[24:01.960 --> 24:06.960]  Если будет так, то это логорифмическая память.
[24:06.960 --> 24:11.960]  Ну что, с умножением тоже понятно.
[24:11.960 --> 24:15.960]  Ну ладно, тогда давайте что-нибудь посложнее.
[24:15.960 --> 24:20.960]  Давайте я сразу сформулирую очень сложную теорему.
[24:20.960 --> 24:25.960]  Я ее доказывал на спецкурсе, но это прямо на много лекций.
[24:25.960 --> 24:28.960]  Там 4-5 лекций на спецкурсе.
[24:28.960 --> 24:33.960]  Но сформулировать ее несложно.
[24:33.960 --> 24:42.960]  Теорема Рейнгольда заключается в том...
[24:42.960 --> 24:49.960]  Это, конечно, очень большой контраст по сложности, но формулироваться она легко.
[24:49.960 --> 24:56.960]  Если мы рассматриваем задачу достижимости в неориентированном графе.
[24:56.960 --> 24:59.960]  Она обычно называется U-path.
[24:59.960 --> 25:03.960]  Undirected path – неориентированный путь.
[25:03.960 --> 25:23.960]  Это множество троек G,S,T таких, что в неориентированном графе G есть путь из S в T.
[25:26.960 --> 25:33.960]  Мы все хорошо знаем, что она лежит в P, но оказывается, что она лежит и в L.
[25:33.960 --> 25:37.960]  И тут видно, почему это сложная теорема.
[25:37.960 --> 25:45.960]  Все алгоритмы, которые вы знаете, связаны с тем, что мы ходим по всему графу и там какие-то метки оставляем.
[25:45.960 --> 25:50.960]  То есть, грубо говоря, использованная память примерно равна размеру графа.
[25:50.960 --> 25:54.960]  Оказывается, что можно так не делать.
[25:54.960 --> 25:59.960]  Конечно, это будет ценой большего числа хождения по графу.
[25:59.960 --> 26:13.960]  Но оказывается, что можно так хитро его обходить, так что хранить совсем немного данных и так, что все равно проверить.
[26:21.960 --> 26:30.960]  Я могу чуть-чуть сказать, какая там общая идея.
[26:30.960 --> 26:35.960]  И заодно это будет такая удочка в следующую тему.
[26:35.960 --> 26:41.960]  Смотрите, есть алгоритм рандомизированный.
[26:41.960 --> 26:46.960]  Как рандомизированный проверить, есть путь из S,T или нет?
[26:46.960 --> 26:51.960]  Запустить просто случайное блуждание.
[26:51.960 --> 26:56.960]  У вас случайных процессов еще не было? Что такое марковский процесс, вы не знаете?
[26:56.960 --> 27:01.960]  Ну ладно, тогда надо поверить.
[27:01.960 --> 27:05.960]  Надо, конечно, считать, сколько мы шагов сделали.
[27:05.960 --> 27:10.960]  Нам нужно доказать, что если путь есть, то если мы сделаем, скажем, N в четвертый шагов,
[27:10.960 --> 27:16.960]  то мы с очень большой вероятностью все достижимые вершины посетим.
[27:16.960 --> 27:20.960]  Это не совсем тривиально, но и не очень сложно.
[27:20.960 --> 27:25.960]  Может быть, мы на лекции про вероятность это обсудим.
[27:25.960 --> 27:29.960]  Смотрите, тут то, что называется одностроенная ошибка.
[27:29.960 --> 27:33.960]  Если пути нет, то если мы сделаем, хоть и на четвертый, хоть и на десятый шагов,
[27:33.960 --> 27:39.960]  то мы совершенно точно не достигнем вершин, до которых пути нет.
[27:39.960 --> 27:44.960]  Но если путь есть, то нужно сказать, что с вероятностью, скажем, 99%
[27:44.960 --> 27:49.960]  во время случайного блуждания мы до той вершины дойдем.
[27:49.960 --> 27:54.960]  Так вот, что показал Рейнгольд.
[27:54.960 --> 27:59.960]  Для такого алгоритма, очевидно, нужна алгоритмическая память,
[27:59.960 --> 28:08.960]  потому что нам просто нужно хранить предыдущую вершину и случайно выбирать следующую.
[28:08.960 --> 28:12.960]  Тут зависит от того, как именно грамм записан.
[28:12.960 --> 28:17.960]  Если есть список ребер, то можно выбирать случайно ребро из этого списка.
[28:17.960 --> 28:22.960]  Если это матрица смежности, то удобнее брать вообще случайную вершину
[28:22.960 --> 28:28.960]  и дальше смотреть, есть туда ребро или нет. Если нет, то брать другую случайную вершину.
[28:28.960 --> 28:32.960]  Но может быть, так получится немножко дольше.
[28:32.960 --> 28:38.960]  Уф-то должно быть N в четвертой, а бросаний тут N в пятой получится,
[28:38.960 --> 28:45.960]  если одно ребро выходит, то нужно N раз в среднем кинуть, пока мы на него наткнемся.
[28:45.960 --> 28:52.960]  Соответственно, тут нужна алгоритмическая память,
[28:52.960 --> 28:57.960]  потому что нужно несколько номеров вершин хранить.
[28:57.960 --> 29:02.960]  Рейнгольд показал, что можно этот алгоритм дерандомизировать,
[29:02.960 --> 29:09.960]  то есть на похожих идеях построить детерминированный алгоритм.
[29:09.960 --> 29:14.960]  Это очень интересная большая тема дерандомизации,
[29:14.960 --> 29:21.960]  можно ли в принципе вероятностные алгоритмы превратить в детерминированные.
[29:21.960 --> 29:26.960]  Но может поговорим на эту тему на последних лекциях немножко.
[29:26.960 --> 29:30.960]  Что с теоремой Рейнгольда следует?
[29:30.960 --> 29:34.960]  Например, что связность тоже лежит в L.
[29:34.960 --> 29:47.960]  Если рассмотреть связность в неориентированном графе, то это тоже, конечно...
[29:47.960 --> 29:55.960]  Сейчас, я не дописал теорему, я сказал, но не написал, что это лежит в L.
[30:03.960 --> 30:07.960]  Связанность тоже лежит в L, но почему?
[30:07.960 --> 30:13.960]  Потому что можно просто перебрать все вершины, и это еще пара счетчиков.
[30:13.960 --> 30:19.960]  А может даже еще проще сделать, можно вести один счетчик и для каждой вершины проверять, что есть путь в следующую.
[30:19.960 --> 30:23.960]  Если из каждой есть путь в следующую, то из любой есть в любую.
[30:23.960 --> 30:29.960]  А из последней в первую еще нужно проверить.
[30:29.960 --> 30:36.960]  U-кон, U это undirected, con это connectivity, то есть что граф связан.
[30:36.960 --> 30:42.960]  Если мы умеем на логотипическом планете проверять для любой пары вершин, то можно либо вообще все вершины проверить,
[30:42.960 --> 30:48.960]  либо для каждой вершины проверить, что есть путь в следующую.
[30:48.960 --> 30:54.960]  Тогда есть из любой в любую.
[30:54.960 --> 31:02.960]  Есть еще некоторые, например, можно двудольность проверять, или, скажем, оцикличность.
[31:12.960 --> 31:18.960]  Сейчас давайте как раз про оцикличность поговорим.
[31:24.960 --> 31:30.960]  Как проверять оцикличность или, наоборот, цикличность?
[31:30.960 --> 31:40.960]  Что такое вообще цикличность? Это означает, что есть какое-то ребро,
[31:40.960 --> 31:48.960]  что если его из графа удалить, то все равно останется путь между этими вершинами.
[31:48.960 --> 31:54.960]  Оцикличность означает, что такого нет.
[31:54.960 --> 32:06.960]  Как это проверять?
[32:06.960 --> 32:18.960]  Можно много раз запускать UPS для исходного графа без одного ребра.
[32:18.960 --> 32:24.960]  А как его запускать?
[32:24.960 --> 32:32.960]  Если алгоритм решения вот этого запрашивает, есть ли такое ребро,
[32:32.960 --> 32:38.960]  то мы смотрим, не совпадает ли это ребро с удаленным.
[32:38.960 --> 32:44.960]  Если он совпадает, то говорим нет, а если не совпадает, то отвечаем то же самое, что в исходном графе.
[32:44.960 --> 32:50.960]  Это совсем небольшое изменение.
[32:50.960 --> 32:56.960]  Нужно перебирать просто все ребра.
[32:56.960 --> 33:02.960]  Граф, который связан и без циклов, мы знаем, как называется.
[33:02.960 --> 33:10.960]  Это дерево. Дерево тоже лежит в L.
[33:10.960 --> 33:16.960]  Удивительным образом, оказывается, что вот этот последний факт можно доказать проще,
[33:16.960 --> 33:24.960]  не ссылаясь на тюрем Рейнгольда, а из некоторых простых соображений.
[33:24.960 --> 33:34.960]  Можно доказать непосредственно.
[33:34.960 --> 33:44.960]  Сначала такая неформальная картинка.
[33:44.960 --> 33:52.960]  Пусть есть какое-то дерево.
[33:52.960 --> 34:00.960]  Вот есть какое-то дерево.
[34:00.960 --> 34:06.960]  Я немного жульничаю, нарисовав его на плоскости.
[34:06.960 --> 34:14.960]  Вот так его можно обходить.
[34:14.960 --> 34:20.960]  Получается, что каждое ребро будет пройдено два раза.
[34:20.960 --> 34:26.960]  А если тут есть какой-то цикл,
[34:26.960 --> 34:32.960]  и мы начнем вот так вот обходить,
[34:32.960 --> 34:40.960]  то получится, что мы некоторые ребра пройдем только один раз.
[34:40.960 --> 34:48.960]  Такое, на самом деле, будет верно, если мы это действительно расположим на плоскости,
[34:48.960 --> 34:54.960]  и сможем так обходить по правилам левой руки.
[34:54.960 --> 35:00.960]  Но если игра вообще будет не планарной, то прямо так обходить не получится.
[35:00.960 --> 35:08.960]  Это как бы идея.
[35:08.960 --> 35:14.960]  Если мы сможем сказать, что это за обход,
[35:14.960 --> 35:20.960]  то надо проверять следующее. Во-первых, что число ребер на один меньше, чем число вершин,
[35:20.960 --> 35:26.960]  это мы сможем проверить, и это для дерева должно быть верно.
[35:26.960 --> 35:32.960]  Во-вторых, что такой обход делает шагов в два раза больше, чем ребер, прежде чем вернется на исходное ребро.
[35:32.960 --> 35:42.960]  На самом деле проблема с формулировкой, что это за обход не геометрически, а абстрактно.
[35:42.960 --> 35:50.960]  Я, наверное, сразу раскрою все карты, что на самом деле, если там будет не один цикл больше,
[35:50.960 --> 35:58.960]  то при формулировке обхода он может и для недерева тоже каждое ребро пройти два раза.
[35:58.960 --> 36:06.960]  Поэтому мы проверяем на самом деле три вещи.
[36:06.960 --> 36:14.960]  Первое, что число ребер это число вершин минус один.
[36:14.960 --> 36:24.960]  Второе, внимание, что нет изолированных вершин.
[36:24.960 --> 36:32.960]  Нет изолированных вершин.
[36:32.960 --> 36:40.960]  А что значит, что если у вас число ребер на один меньше, чем число вершин,
[36:40.960 --> 36:46.960]  и нет изолированных вершин, если при этом не дерево, то значит там хотя бы две компоненты связности,
[36:46.960 --> 36:52.960]  в которых есть ребра. Вот почему это важно.
[36:52.960 --> 37:00.960]  Есть две компоненты связности, и в обеих есть ребра.
[37:00.960 --> 37:06.960]  Ну а третье, это уже условий на обход.
[37:06.960 --> 37:12.960]  Ну вот как устроен обход.
[37:12.960 --> 37:20.960]  Смотрите, когда у нас просто граф записан списком ребер или матрицы, то у нас там нет никакого вложения в плоскость.
[37:20.960 --> 37:26.960]  Ну что у нас есть? У нас есть номера вершин.
[37:26.960 --> 37:36.960]  В любой вершине есть естественное направление по номерам вершин.
[37:36.960 --> 37:44.960]  То есть там вот это ИТ, вот это ЖТ, это КТ.
[37:44.960 --> 37:52.960]  То это естественный порядок. И потом Ж, потом К, потом по циклу снова И.
[37:52.960 --> 37:58.960]  Да, совершенно верно.
[37:58.960 --> 38:06.960]  Обход такой, после ребра и Ж,
[38:06.960 --> 38:16.960]  Смотрите, хотя сам граф не ориентированный, но обход ориентированный, в обходе ребра со стрелочками.
[38:16.960 --> 38:22.960]  После ребра и Ж идет ребро ЖК.
[38:22.960 --> 38:40.960]  Такое, что К это будет минимальное из тех Л, которые больше И, таких, что ребро ЖК есть.
[38:40.960 --> 38:48.960]  Где вот это минимальное понимается по циклу. То есть мы идем и плюс один, и плюс два, и плюс три и так далее.
[38:48.960 --> 38:54.960]  Если до Н дошли, и ни одного нету, то соответственно идем с единицы.
[38:54.960 --> 39:08.960]  В самом крайнем случае, если Ж это вообще висячая вершина, то мы придем снова к И и пойдем обратно.
[39:08.960 --> 39:16.960]  Соответственно, этот обход должен сделать два умноженных число ребер, прежде чем вернется на исходный ребро.
[39:16.960 --> 39:38.960]  Значит, обход делает два умноженных число ребер шагов до воздушного.
[39:38.960 --> 39:44.960]  Но, соответственно, для всего этого нужна рифмическая партия.
[39:44.960 --> 39:49.960]  То, что это корректные критерии, давайте я оставлю в качестве задачи.
[39:49.960 --> 39:52.960]  Мне кажется, это полезно подумать.
[39:52.960 --> 39:58.960]  Значит, нужно ждать, что до дерева он сработает, что дерево будет распользовано, как он здесь нарисовывается.
[39:58.960 --> 40:03.960]  Что будет для ни дерева неважно, потому что проверяем наисторежные вершины.
[40:03.960 --> 40:09.960]  Потому что, смотрите, если больше, чем столько, он точно не может сделать.
[40:09.960 --> 40:14.960]  Потому что у нас столько ребер, и каждый в двух направлениях может быть поединат.
[40:14.960 --> 40:20.960]  А если повторилось, то уже до возврата, то есть до повторного.
[40:20.960 --> 40:22.960]  Это, в принципе, диреклия.
[40:22.960 --> 40:24.960]  Ну, не понятно, почему оно повториться не может.
[40:25.960 --> 40:28.960]  Ваня, как мы проверяем, что мы пришли в конец?
[40:28.960 --> 40:31.960]  Нет, нам нужно еще хранить самое бедное ребро.
[40:31.960 --> 40:35.960]  Хорошо, мы хранили ребро, но непонятно, почему мы не можем социклиться где-то под ним.
[40:37.960 --> 40:41.960]  А, в смысле, почему циклы будут обязательно без предприюта?
[40:41.960 --> 40:42.960]  Да.
[40:42.960 --> 40:44.960]  Ну, надо доказать дальше.
[40:44.960 --> 40:46.960]  На самом деле, потому что это обратимо.
[40:50.960 --> 40:53.960]  То есть в обратную сторону делается то, что так же.
[40:53.960 --> 40:55.960]  Ну, не очевидно даже, что обратимо.
[40:55.960 --> 40:57.960]  Ну, не очевидно, да.
[40:57.960 --> 40:59.960]  Ну, вот задача какая-то.
[41:01.960 --> 41:04.960]  Ну, можно, наверное, сказать, что-то странное.
[41:08.960 --> 41:12.960]  Ладно, да, сейчас сделаем перерыв, и потом я правильно хочу уйти.
[41:12.960 --> 41:13.960]  Давайте.
[41:31.960 --> 41:32.960]  Значит, Энель.
[41:34.960 --> 41:37.960]  Значит, Энель означает новый трибунный тепловый спейс.
[41:38.960 --> 41:45.960]  Да, значит, не натрагинировал.
[41:47.960 --> 41:49.960]  У меня, очевидно, делается ежевеса.
[41:50.960 --> 41:51.960]  Да?
[41:51.960 --> 41:52.960]  У меня, очевидно, делается еда.
[41:52.960 --> 41:53.960]  И едульку.
[41:54.960 --> 41:55.960]  Да?
[41:55.960 --> 41:56.960]  Ну, реалитированный пылок.
[41:56.960 --> 41:57.960]  Да-да.
[41:59.960 --> 42:01.960]  Значит, бой-то это будет Энель Пол.
[42:01.960 --> 42:02.960]  Знача?
[42:02.960 --> 42:03.960]  Мол.
[42:04.960 --> 42:05.960]  Значит, П.
[42:08.960 --> 42:11.960]  То есть, нам только G, S, T.
[42:11.960 --> 42:13.960]  Такая, что в ориентированной грани.
[42:15.960 --> 42:16.960]  G, еще двой.
[42:18.960 --> 42:19.960]  Куть.
[42:22.960 --> 42:23.960]  И дальше как?
[42:23.960 --> 42:26.960]  А, нам как-то, короче, ориентировать в неориентированную грани,
[42:26.960 --> 42:29.960]  или это то, что мы, типа, в неориентированной грани
[42:29.960 --> 42:31.960]  в неориентированную грани не может, случайно,
[42:31.960 --> 42:33.960]  вождание тебя испортит, случайно.
[42:33.960 --> 42:35.960]  А в ориентированную мы туда пойдем,
[42:35.960 --> 42:37.960]  и дальше, поэтому, тут только,
[42:37.960 --> 42:39.960]  все тебе не сможет выйти обратно.
[42:39.960 --> 42:41.960]  Да, значит, рандомизируемо алгоритмы.
[42:43.960 --> 42:45.960]  Да, алгоритмы можно вообще выйти
[42:45.960 --> 42:47.960]  в неориентированную связанность.
[42:47.960 --> 42:50.960]  Ну, да, то есть, у нас обратимый процент в съемке пас.
[42:51.960 --> 42:52.960]  Да.
[42:53.960 --> 42:54.960]  Да, точно.
[42:54.960 --> 42:56.960]  Значит, в ответ мы можем вообще выйти никуда.
[42:56.960 --> 42:57.960]  Да.
[42:58.960 --> 43:00.960]  И во-вторых, даже если есть случайное вождание,
[43:00.960 --> 43:02.960]  да, то может быть такой, да?
[43:03.960 --> 43:05.960]  Да, в общем, пограется кучка.
[43:10.960 --> 43:11.960]  Вот.
[43:12.960 --> 43:15.960]  И тут каждый будет, значит, вот так.
[43:18.960 --> 43:19.960]  Да, да?
[43:20.960 --> 43:21.960]  Вот.
[43:21.960 --> 43:23.960]  И тайна, соответственно, чтобы,
[43:23.960 --> 43:25.960]  тут как бы не теряется возможность пройти
[43:26.960 --> 43:27.960]  к конецу.
[43:27.960 --> 43:28.960]  Да, да, да.
[43:28.960 --> 43:29.960]  Вот.
[43:29.960 --> 43:30.960]  Но дело в том, что если я делал нечаянно,
[43:30.960 --> 43:32.960]  да, то, соответственно,
[43:33.960 --> 43:34.960]  много раз подряд,
[43:35.960 --> 43:36.960]  одинаковый момент.
[43:39.960 --> 43:40.960]  Да?
[43:46.960 --> 43:47.960]  Ну.
[43:48.960 --> 43:49.960]  Хорошо.
[43:49.960 --> 43:50.960]  Вот.
[43:50.960 --> 43:51.960]  Ну вот.
[43:51.960 --> 43:53.960]  Не на терпенизм позволяет ценить правильность.
[43:54.960 --> 43:55.960]  Да.
[43:55.960 --> 43:56.960]  Но,
[43:57.960 --> 43:59.960]  как бы каждый раз идем не на терминировано,
[43:59.960 --> 44:01.960]  да, если ветка есть,
[44:01.960 --> 44:02.960]  в графе.
[44:02.960 --> 44:04.960]  Да, если есть путь в графе, то есть ветка в вычислении,
[44:04.960 --> 44:06.960]  которое было по этой пути.
[44:08.960 --> 44:09.960]  Вот.
[44:11.960 --> 44:12.960]  И более, да,
[44:13.960 --> 44:16.960]  значит, интуитивно, почему плет – это наиполная задача.
[44:23.960 --> 44:24.960]  Значит, наиполная.
[44:25.960 --> 44:28.960]  Потому что можно рассмотреть наш великий интуитивный граф.
[44:31.960 --> 44:32.960]  Да, значит, можно,
[44:34.960 --> 44:35.960]  то есть любая интуитивная задача,
[44:39.960 --> 44:40.960]  любая интуитивная задача
[44:44.960 --> 44:45.960]  сводится
[44:50.960 --> 44:51.960]  к поиску пути,
[44:55.960 --> 44:56.960]  к поиску пути
[44:57.960 --> 44:58.960]  в лакомственном графе.
[45:12.960 --> 45:13.960]  Вот.
[45:13.960 --> 45:14.960]  Надо только об этом сказать,
[45:14.960 --> 45:16.960]  в каком смысле, собственно, сводится.
[45:17.960 --> 45:20.960]  Да, потому что понятно, что наш старый сегодня пуск не годится.
[45:21.960 --> 45:22.960]  Вот.
[45:22.960 --> 45:23.960]  Ну, значит, вообще,
[45:23.960 --> 45:24.960]  так,
[45:24.960 --> 45:27.960]  значит, насколько нас интересуют вопросы про Эй и Эмей,
[45:28.960 --> 45:29.960]  да,
[45:29.960 --> 45:30.960]  Эй и Божий и Эмей,
[45:30.960 --> 45:31.960]  то всегда
[45:31.960 --> 45:32.960]  смысл один и тот же,
[45:32.960 --> 45:33.960]  да,
[45:33.960 --> 45:36.960]  что мы смотрим на сводимых, которые большего класса,
[45:37.960 --> 45:39.960]  а сама сводимых будет меньшего класса.
[45:40.960 --> 45:42.960]  Да, то есть тут должна быть географическая своденность.
[45:43.960 --> 45:44.960]  Вот.
[45:44.960 --> 45:45.960]  Ну, вот сейчас вкратце обсудим
[45:46.960 --> 45:49.960]  два варианта понятия географической храницы.
[45:54.960 --> 45:55.960]  Вот.
[45:55.960 --> 45:56.960]  То есть так, в целом,
[45:56.960 --> 45:57.960]  в этом линии,
[45:57.960 --> 45:58.960]  точно такое же,
[45:58.960 --> 46:01.960]  что сводимость не подменяет на географическую.
[46:23.960 --> 46:24.960]  Ага.
[46:30.960 --> 46:31.960]  Так.
[46:32.960 --> 46:33.960]  А,
[46:33.960 --> 46:34.960]  то, значит,
[46:35.960 --> 46:36.960]  а,
[46:36.960 --> 46:38.960]  логеретическую сводьбу В,
[46:39.960 --> 46:40.960]  где-то вот тут,
[46:40.960 --> 46:41.960]  ну, есть
[46:42.960 --> 46:44.960]  логеретическую сводьбу В.
[46:45.960 --> 46:46.960]  Вверх
[46:46.960 --> 46:48.960]  настоят логеретические сводьбы X,
[46:49.960 --> 46:51.960]  будут скоммунированы
[46:51.960 --> 46:52.960]  географические храницы,
[46:52.960 --> 46:54.960]  там географика не подменяет на храницы,
[46:54.960 --> 46:55.960]  но будут.
[46:57.960 --> 46:59.960]  Ну, теперь, что такое логеретические вычисления?
[47:00.960 --> 47:02.960]  Ну, я в храническом языке уже говорил,
[47:02.960 --> 47:03.960]  давайте спешим.
[47:07.960 --> 47:09.960]  Логеретические вычисления.
[47:13.960 --> 47:14.960]  Значит,
[47:14.960 --> 47:16.960]  первый вариант определения
[47:16.960 --> 47:19.960]  такой, что есть машина,
[47:21.960 --> 47:22.960]  есть
[47:23.960 --> 47:24.960]  машина,
[47:26.960 --> 47:27.960]  значит,
[47:27.960 --> 47:28.960]  с
[47:29.960 --> 47:31.960]  одной входом вентой,
[47:34.960 --> 47:35.960]  значит, с одной
[47:35.960 --> 47:37.960]  входом вентой,
[47:40.960 --> 47:42.960]  значит, с одной работой
[47:44.960 --> 47:46.960]  и одной выходом.
[47:46.960 --> 47:47.960]  Так.
[47:51.960 --> 47:53.960]  Значит, это использующая
[47:56.960 --> 47:58.960]  логеретический пальц на рабочей ленте
[47:59.960 --> 48:00.960]  и
[48:00.960 --> 48:02.960]  печатающая фрадыкс на выходной,
[48:02.960 --> 48:03.960]  значит, ну,
[48:03.960 --> 48:04.960]  слева.
[48:06.960 --> 48:07.960]  Использующий
[48:09.960 --> 48:11.960]  логеретический пальц
[48:11.960 --> 48:13.960]  на рабочей ленте.
[48:16.960 --> 48:17.960]  Ну, печатающий
[48:19.960 --> 48:20.960]  фрадыкс
[48:23.960 --> 48:24.960]  на выходной,
[48:24.960 --> 48:25.960]  значит, слева.
[48:31.960 --> 48:32.960]  Так.
[48:32.960 --> 48:34.960]  Ну, при этом понятно, да?
[48:36.960 --> 48:37.960]  Это определение один,
[48:38.960 --> 48:39.960]  значит, определение два,
[48:39.960 --> 48:40.960]  что есть
[48:41.960 --> 48:42.960]  два языка,
[48:43.960 --> 48:44.960]  выжащие
[48:46.960 --> 48:47.960]  Так.
[48:48.960 --> 48:49.960]  Значит, такое язык,
[48:49.960 --> 48:50.960]  потому что пар
[48:51.960 --> 48:52.960]  х
[48:52.960 --> 48:53.960]  и х,
[48:56.960 --> 48:57.960]  значит, таким,
[48:58.960 --> 48:59.960]  что
[48:59.960 --> 49:00.960]  х
[49:00.960 --> 49:01.960]  меньше
[49:02.960 --> 49:03.960]  х,
[49:05.960 --> 49:06.960]  значит,
[49:06.960 --> 49:07.960]  такой язык
[49:07.960 --> 49:08.960]  выжащий.
[49:10.960 --> 49:11.960]  Сейчас.
[49:11.960 --> 49:12.960]  Нет, это
[49:12.960 --> 49:13.960]  ну,
[49:13.960 --> 49:14.960]  очень важно,
[49:14.960 --> 49:15.960]  за этим
[49:16.960 --> 49:17.960]  очень важно.
[49:19.960 --> 49:20.960]  Вот.
[49:20.960 --> 49:21.960]  И, соответственно,
[49:21.960 --> 49:22.960]  ну, такое вот
[49:22.960 --> 49:23.960]  язык,
[49:24.960 --> 49:25.960]  и
[49:25.960 --> 49:26.960]  язык из ката,
[49:27.960 --> 49:28.960]  что
[49:29.960 --> 49:30.960]  просто ката,
[49:30.960 --> 49:31.960]  вид, как вот
[49:33.960 --> 49:34.960]  разумеется,
[49:35.960 --> 49:36.960]  то же же.
[49:40.960 --> 49:41.960]  Так.
[49:42.960 --> 49:43.960]  Значит, чуете,
[49:43.960 --> 49:44.960]  я тебе не говорю?
[49:45.960 --> 49:46.960]  Так.
[49:50.960 --> 49:51.960]  Значит, определение кавалюты,
[49:51.960 --> 49:52.960]  ну, значит,
[49:52.960 --> 49:53.960]  главное, что
[49:53.960 --> 49:54.960]  давайте сначала из второго в первое.
[49:55.960 --> 49:57.960]  Значит, из второго в первое
[49:57.960 --> 49:58.960]  мы просто,
[49:58.960 --> 49:59.960]  значит,
[49:59.960 --> 50:00.960]  запускаем
[50:01.960 --> 50:02.960]  вычисления.
[50:04.960 --> 50:05.960]  Ну, да.
[50:05.960 --> 50:06.960]  Сначала
[50:06.960 --> 50:07.960]  спрашиваем,
[50:08.960 --> 50:09.960]  верно ли,
[50:09.960 --> 50:10.960]  что длина и фаты
[50:10.960 --> 50:11.960]  вышедшую на единицы?
[50:12.960 --> 50:13.960]  Если не верно,
[50:13.960 --> 50:14.960]  значит,
[50:14.960 --> 50:15.960]  на где-то будет
[50:15.960 --> 50:16.960]  то и слово,
[50:16.960 --> 50:17.960]  мы его печатаем.
[50:17.960 --> 50:18.960]  Ну,
[50:18.960 --> 50:19.960]  сразу остановимся.
[50:19.960 --> 50:20.960]  Если
[50:20.960 --> 50:21.960]  на этой
[50:21.960 --> 50:22.960]  большинстве на единицы,
[50:22.960 --> 50:23.960]  то мы смотрим
[50:23.960 --> 50:24.960]  на первый бит.
[50:24.960 --> 50:25.960]  Да,
[50:25.960 --> 50:26.960]  спрашиваем,
[50:26.960 --> 50:27.960]  вот,
[50:27.960 --> 50:28.960]  по этой программе
[50:28.960 --> 50:29.960]  первый бит район единицы
[50:29.960 --> 50:30.960]  мы его
[50:30.960 --> 50:31.960]  упечатаем.
[50:31.960 --> 50:32.960]  Дальше
[50:32.960 --> 50:33.960]  спрашиваем,
[50:33.960 --> 50:34.960]  верно ли,
[50:34.960 --> 50:35.960]  что длина хотя бы 2?
[50:35.960 --> 50:36.960]  Если не верно,
[50:36.960 --> 50:37.960]  значит,
[50:37.960 --> 50:38.960]  то, что напечатали,
[50:38.960 --> 50:39.960]  это ответ,
[50:39.960 --> 50:40.960]  и это наоборот.
[50:40.960 --> 50:41.960]  Значит,
[50:41.960 --> 50:42.960]  если верно,
[50:42.960 --> 50:43.960]  пока ответ
[50:43.960 --> 50:44.960]  не закончится.
[50:44.960 --> 50:45.960]  Значит,
[50:45.960 --> 50:46.960]  запечатаем
[50:46.960 --> 50:47.960]  на выходную ленту.
[50:47.960 --> 50:48.960]  Читать нам
[50:48.960 --> 50:49.960]  оттуда
[50:49.960 --> 50:50.960]  не нужно.
[50:50.960 --> 50:51.960]  Да,
[50:51.960 --> 50:52.960]  ничего
[50:52.960 --> 50:53.960]  переправлять
[50:53.960 --> 50:54.960]  не нужно.
[50:54.960 --> 50:55.960]  Рабочее
[50:55.960 --> 50:56.960]  пространство
[50:56.960 --> 50:57.960]  каждый раз
[50:57.960 --> 50:58.960]  используем
[50:58.960 --> 50:59.960]  одно и то же.
[50:59.960 --> 51:00.960]  Сейчас,
[51:00.960 --> 51:01.960]  а это
[51:01.960 --> 51:02.960]  сводимость
[51:02.960 --> 51:03.960]  по кому?
[51:03.960 --> 51:04.960]  Ну,
[51:04.960 --> 51:05.960]  это
[51:05.960 --> 51:06.960]  лагерезническая
[51:06.960 --> 51:07.960]  сводимость
[51:07.960 --> 51:08.960]  по карту.
[51:08.960 --> 51:09.960]  То есть,
[51:09.960 --> 51:10.960]  нам по карту
[51:10.960 --> 51:11.960]  лагерезническая.
[51:11.960 --> 51:12.960]  Вот.
[51:12.960 --> 51:13.960]  Ну,
[51:13.960 --> 51:14.960]  вот.
[51:14.960 --> 51:15.960]  То есть,
[51:15.960 --> 51:16.960]  нам можно хранить
[51:16.960 --> 51:17.960]  счетчик
[51:17.960 --> 51:18.960]  какой-то
[51:18.960 --> 51:19.960]  кущей Х
[51:19.960 --> 51:20.960]  и плюс
[51:20.960 --> 51:21.960]  парой,
[51:21.960 --> 51:22.960]  чтобы
[51:22.960 --> 51:23.960]  числять
[51:23.960 --> 51:24.960]  вот это вот
[51:24.960 --> 51:25.960]  и вот это вот.
[51:25.960 --> 51:26.960]  Значит,
[51:26.960 --> 51:27.960]  она
[51:27.960 --> 51:28.960]  все это
[51:28.960 --> 51:29.960]  будет
[51:29.960 --> 51:30.960]  электрическое.
[51:30.960 --> 51:31.960]  В основном,
[51:31.960 --> 51:32.960]  как-то
[51:32.960 --> 51:33.960]  органично
[51:33.960 --> 51:34.960]  длина
[51:34.960 --> 51:35.960]  отыгрывается.
[51:35.960 --> 51:36.960]  Просто,
[51:36.960 --> 51:37.960]  если она
[51:37.960 --> 51:38.960]  в конфигурации
[51:38.960 --> 51:39.960]  содержится,
[51:39.960 --> 51:40.960]  то
[51:40.960 --> 51:41.960]  это
[51:41.960 --> 51:42.960]  вообще
[51:42.960 --> 51:43.960]  правильный
[51:43.960 --> 51:44.960]  вопрос.
[51:44.960 --> 51:45.960]  Вообще,
[51:45.960 --> 51:46.960]  наверное,
[51:46.960 --> 51:47.960]  да.
[51:47.960 --> 51:48.960]  По
[51:48.960 --> 51:49.960]  второму
[51:49.960 --> 51:50.960]  мнению,
[51:50.960 --> 51:51.960]  нужно
[51:51.960 --> 51:52.960]  сгорать
[51:52.960 --> 51:53.960]  варианты.
[51:53.960 --> 51:54.960]  Потому что
[51:54.960 --> 51:55.960]  в первом
[51:55.960 --> 51:56.960]  она
[51:56.960 --> 51:57.960]  автоматически
[51:57.960 --> 51:58.960]  будет
[51:58.960 --> 51:59.960]  предминальная
[51:59.960 --> 52:00.960]  просто из-за
[52:00.960 --> 52:01.960]  числа
[52:01.960 --> 52:02.960]  конфигурации.
[52:02.960 --> 52:03.960]  Потому что
[52:03.960 --> 52:04.960]  что
[52:04.960 --> 52:05.960]  не
[52:05.960 --> 52:06.960]  можно
[52:06.960 --> 52:07.960]  напечатать,
[52:07.960 --> 52:08.960]  не влияет
[52:08.960 --> 52:09.960]  на конфигурацию,
[52:09.960 --> 52:10.960]  не
[52:10.960 --> 52:11.960]  влияет
[52:11.960 --> 52:12.960]  на
[52:12.960 --> 52:13.960]  конфигурацию
[52:13.960 --> 52:14.960]  и
[52:14.960 --> 52:15.960]  длина
[52:15.960 --> 52:16.960]  отыгрывается.
[52:16.960 --> 52:17.960]  Вот.
[52:17.960 --> 52:18.960]  Значит,
[52:18.960 --> 52:19.960]  здесь,
[52:19.960 --> 52:20.960]  наверное,
[52:20.960 --> 52:21.960]  да,
[52:21.960 --> 52:22.960]  она
[52:22.960 --> 52:23.960]  будет
[52:23.960 --> 52:24.960]  потребоваться
[52:24.960 --> 52:25.960]  для
[52:25.960 --> 52:26.960]  длины
[52:26.960 --> 52:27.960]  отыгрываться
[52:27.960 --> 52:28.960]  детективно,
[52:28.960 --> 52:29.960]  либо
[52:29.960 --> 52:30.960]  требовать,
[52:30.960 --> 52:31.960]  чтобы
[52:31.960 --> 52:32.960]  этот
[52:32.960 --> 52:33.960]  логариф
[52:33.960 --> 52:34.960]  был
[52:34.960 --> 52:35.960]  не
[52:35.960 --> 52:36.960]  откатан
[52:36.960 --> 52:37.960]  отыгрывается.
[52:37.960 --> 52:38.960]  Да,
[52:38.960 --> 52:39.960]  значит,
[52:39.960 --> 52:40.960]  это было
[52:40.960 --> 52:41.960]  из
[52:41.960 --> 52:42.960]  второго
[52:42.960 --> 52:43.960]  певца.
[52:43.960 --> 52:44.960]  Ну,
[52:44.960 --> 52:45.960]  как раз
[52:45.960 --> 52:46.960]  длина
[52:46.960 --> 52:47.960]  ограничена,
[52:47.960 --> 52:48.960]  по-любому,
[52:48.960 --> 52:49.960]  да,
[52:49.960 --> 52:50.960]  то,
[52:50.960 --> 52:51.960]  как
[52:51.960 --> 52:52.960]  будет
[52:52.960 --> 52:53.960]  логарифмически,
[52:53.960 --> 52:54.960]  да,
[52:54.960 --> 52:55.960]  и все
[52:55.960 --> 52:56.960]  это
[52:56.960 --> 52:57.960]  будет
[52:57.960 --> 52:58.960]  логарифмически.
[52:58.960 --> 52:59.960]  Вот.
[52:59.960 --> 53:00.960]  А
[53:00.960 --> 53:01.960]  в обратную
[53:01.960 --> 53:02.960]  сторону,
[53:02.960 --> 53:03.960]  ну,
[53:03.960 --> 53:04.960]  тоже понятно,
[53:04.960 --> 53:05.960]  да,
[53:05.960 --> 53:06.960]  значит,
[53:06.960 --> 53:07.960]  тут
[53:07.960 --> 53:08.960]  вот.
[53:08.960 --> 53:09.960]  А
[53:09.960 --> 53:10.960]  здесь
[53:10.960 --> 53:11.960]  можно
[53:11.960 --> 53:12.960]  просто
[53:12.960 --> 53:13.960]  ждать
[53:13.960 --> 53:14.960]  катего
[53:14.960 --> 53:15.960]  гита.
[53:15.960 --> 53:16.960]  Вот.
[53:16.960 --> 53:17.960]  Если
[53:17.960 --> 53:18.960]  дождались,
[53:18.960 --> 53:19.960]  то
[53:19.960 --> 53:20.960]  это
[53:20.960 --> 53:21.960]  не
[53:21.960 --> 53:22.960]  будет.
[53:22.960 --> 53:23.960]  Если
[53:23.960 --> 53:24.960]  закончилось
[53:24.960 --> 53:25.960]  раньше,
[53:25.960 --> 53:26.960]  то сказать
[53:26.960 --> 53:27.960]  нет,
[53:27.960 --> 53:28.960]  ну,
[53:28.960 --> 53:29.960]  это
[53:29.960 --> 53:30.960]  в принципе
[53:30.960 --> 53:31.960]  не
[53:31.960 --> 53:32.960]  важно.
[53:32.960 --> 53:33.960]  Вот.
[53:33.960 --> 53:34.960]  Ну,
[53:34.960 --> 53:35.960]  а
[53:35.960 --> 53:36.960]  силы нет
[53:36.960 --> 53:37.960]  так.
[53:37.960 --> 53:38.960]  Ну,
[53:38.960 --> 53:39.960]  чего?
[53:39.960 --> 53:40.960]  Примерно понятно,
[53:40.960 --> 53:41.960]  да.
[53:41.960 --> 53:42.960]  Сейчас,
[53:42.960 --> 53:43.960]  я не могу понять
[53:43.960 --> 53:44.960]  второе
[53:44.960 --> 53:45.960]  проверение
[53:45.960 --> 53:46.960]  сейчас-то.
[53:46.960 --> 53:47.960]  Нет,
[53:47.960 --> 53:48.960]  ну,
[53:48.960 --> 53:49.960]  смотри,
[53:49.960 --> 53:50.960]  значит,
[53:50.960 --> 53:51.960]  у нас
[53:51.960 --> 53:52.960]  смысл
[53:52.960 --> 53:53.960]  такой,
[53:53.960 --> 53:54.960]  что на
[53:54.960 --> 53:55.960]  уровне
[53:55.960 --> 53:56.960]  количества
[53:56.960 --> 53:57.960]  памяти
[53:57.960 --> 53:58.960]  можно понять
[53:58.960 --> 53:59.960]  ответ
[53:59.960 --> 54:00.960]  длиннее
[54:00.960 --> 54:01.960]  данного
[54:01.960 --> 54:02.960]  порога
[54:02.960 --> 54:03.960]  или короче,
[54:03.960 --> 54:04.960]  а если
[54:04.960 --> 54:05.960]  длиннее,
[54:05.960 --> 54:06.960]  то
[54:06.960 --> 54:07.960]  вот,
[54:07.960 --> 54:08.960]  естественно.
[54:08.960 --> 54:09.960]  Да.
[54:09.960 --> 54:10.960]  Угу.
[54:10.960 --> 54:11.960]  Так.
[54:11.960 --> 54:12.960]  Ну,
[54:12.960 --> 54:13.960]  хорошо.
[54:13.960 --> 54:14.960]  Так.
[54:14.960 --> 54:15.960]  Ну,
[54:15.960 --> 54:16.960]  теперь,
[54:16.960 --> 54:17.960]  значит,
[54:17.960 --> 54:18.960]  то,
[54:18.960 --> 54:19.960]  что
[54:19.960 --> 54:20.960]  то,
[54:20.960 --> 54:21.960]  что
[54:21.960 --> 54:22.960]  без
[54:22.960 --> 54:23.960]  этой
[54:23.960 --> 54:24.960]  энергии
[54:24.960 --> 54:25.960]  полная,
[54:25.960 --> 54:26.960]  это
[54:26.960 --> 54:27.960]  в принципе
[54:27.960 --> 54:28.960]  развитием
[54:28.960 --> 54:29.960]  на
[54:29.960 --> 54:30.960]  более-менее
[54:30.960 --> 54:31.960]  очевидно,
[54:31.960 --> 54:32.960]  надо только
[54:32.960 --> 54:33.960]  сказать,
[54:33.960 --> 54:34.960]  что
[54:34.960 --> 54:35.960]  сводимости
[54:35.960 --> 54:36.960]  горизонтическая,
[54:36.960 --> 54:37.960]  и это
[54:37.960 --> 54:38.960]  довольно
[54:38.960 --> 54:39.960]  техническая
[54:39.960 --> 54:40.960]  вещь,
[54:40.960 --> 54:41.960]  значит,
[54:41.960 --> 54:42.960]  я
[54:42.960 --> 54:43.960]  это
[54:43.960 --> 54:44.960]  отпущу.
[54:44.960 --> 54:45.960]  То есть,
[54:45.960 --> 54:46.960]  нам
[54:46.960 --> 54:47.960]  нужно
[54:47.960 --> 54:48.960]  аккуратно
[54:48.960 --> 54:49.960]  показать,
[54:49.960 --> 54:50.960]  что
[54:50.960 --> 54:51.960]  конфигурационный
[54:51.960 --> 54:52.960]  граф
[54:52.960 --> 54:53.960]  по
[54:53.960 --> 54:54.960]  исходному
[54:54.960 --> 54:55.960]  входу
[54:55.960 --> 54:56.960]  мы
[54:56.960 --> 54:57.960]  понимаем.
[54:57.960 --> 54:58.960]  Вот.
[54:58.960 --> 54:59.960]  Тут,
[54:59.960 --> 55:00.960]  конечно,
[55:00.960 --> 55:01.960]  просто
[55:01.960 --> 55:02.960]  я
[55:02.960 --> 55:03.960]  не
[55:03.960 --> 55:04.960]  граф
[55:04.960 --> 55:05.960]  записываю,
[55:05.960 --> 55:06.960]  но
[55:06.960 --> 55:07.960]  в
[55:07.960 --> 55:08.960]  я
[55:08.960 --> 55:09.960]  матрице
[55:09.960 --> 55:10.960]  смешности.
[55:10.960 --> 55:11.960]  Надо как-то
[55:11.960 --> 55:12.960]  договориться
[55:12.960 --> 55:13.960]  о
[55:13.960 --> 55:14.960]  том,
[55:14.960 --> 55:15.960]  как
[55:15.960 --> 55:16.960]  мы
[55:16.960 --> 55:17.960]  кодируем
[55:17.960 --> 55:18.960]  конфигурации,
[55:18.960 --> 55:19.960]  и
[55:19.960 --> 55:20.960]  дальше
[55:20.960 --> 55:21.960]  нужно
[55:21.960 --> 55:22.960]  объяснить,
[55:22.960 --> 55:23.960]  что
[55:23.960 --> 55:24.960]  в духе
[55:24.960 --> 55:25.960]  второго
[55:25.960 --> 55:26.960]  контурина,
[55:26.960 --> 55:27.960]  для сколько
[55:27.960 --> 55:28.960]  состояния,
[55:28.960 --> 55:29.960]  да,
[55:29.960 --> 55:30.960]  сколько
[55:30.960 --> 55:31.960]  того,
[55:31.960 --> 55:32.960]  как
[55:32.960 --> 55:33.960]  это
[55:33.960 --> 55:34.960]  мы
[55:34.960 --> 55:35.960]  посчитали.
[55:35.960 --> 55:36.960]  Вот.
[55:36.960 --> 55:37.960]  И дальше,
[55:37.960 --> 55:38.960]  чтобы понять,
[55:38.960 --> 55:39.960]  какой
[55:39.960 --> 55:40.960]  символ,
[55:40.960 --> 55:41.960]  фактически это означает,
[55:41.960 --> 55:42.960]  что
[55:42.960 --> 55:43.960]  мы
[55:43.960 --> 55:44.960]  на
[55:44.960 --> 55:45.960]  всю
[55:45.960 --> 55:46.960]  матрицу
[55:46.960 --> 55:47.960]  смежности,
[55:47.960 --> 55:48.960]  то есть,
[55:48.960 --> 55:49.960]  нам
[55:49.960 --> 55:50.960]  было
[55:50.960 --> 55:51.960]  двум
[55:51.960 --> 55:52.960]  конфигурации,
[55:52.960 --> 55:53.960]  надо понять,
[55:53.960 --> 55:54.960]  есть
[55:54.960 --> 55:55.960]  конфигурация,
[55:55.960 --> 55:56.960]  но
[55:56.960 --> 55:57.960]  в
[55:57.960 --> 55:58.960]  проекте
[55:58.960 --> 55:59.960]  все
[55:59.960 --> 56:00.960]  почти
[56:00.960 --> 56:01.960]  одинаковые,
[56:01.960 --> 56:02.960]  кроме
[56:02.960 --> 56:03.960]  маленького
[56:03.960 --> 56:04.960]  фрагмента,
[56:04.960 --> 56:05.960]  который,
[56:05.960 --> 56:06.960]  соответственно,
[56:06.960 --> 56:07.960]  меняется
[56:07.960 --> 56:08.960]  разным
[56:08.960 --> 56:09.960]  значением.
[56:09.960 --> 56:10.960]  Вот.
[56:10.960 --> 56:11.960]  Ну,
[56:11.960 --> 56:12.960]  тут
[56:12.960 --> 56:13.960]  куча
[56:13.960 --> 56:14.960]  каких-то
[56:14.960 --> 56:15.960]  технических
[56:15.960 --> 56:16.960]  деталей,
[56:16.960 --> 56:17.960]  как мы
[56:17.960 --> 56:18.960]  записываем
[56:18.960 --> 56:19.960]  конфигурацию,
[56:19.960 --> 56:20.960]  как мы
[56:20.960 --> 56:21.960]  сделаем
[56:21.960 --> 56:22.960]  фрагмент,
[56:22.960 --> 56:23.960]  как проверяем,
[56:24.960 --> 56:25.960]  домовые
[56:25.960 --> 56:26.960]  состояния.
[56:26.960 --> 56:27.960]  Вот.
[56:27.960 --> 56:28.960]  И это
[56:28.960 --> 56:29.960]  даже,
[56:29.960 --> 56:30.960]  наверное,
[56:30.960 --> 56:31.960]  будет
[56:31.960 --> 56:32.960]  повторно
[56:32.960 --> 56:33.960]  нагореть.
[56:33.960 --> 56:34.960]  Четче,
[56:34.960 --> 56:35.960]  потому что
[56:35.960 --> 56:36.960]  у нас
[56:36.960 --> 56:37.960]  стилон
[56:37.960 --> 56:38.960]  нагореть
[56:38.960 --> 56:39.960]  надо длина
[56:39.960 --> 56:40.960]  в символах.
[56:40.960 --> 56:41.960]  Вот.
[56:41.960 --> 56:42.960]  Вот.
[56:42.960 --> 56:43.960]  Вот.
[56:43.960 --> 56:44.960]  Вот.
[56:44.960 --> 56:45.960]  Вот.
[56:45.960 --> 56:46.960]  Вот.
[56:46.960 --> 56:47.960]  Вот.
[56:47.960 --> 56:48.960]  Вот.
[56:48.960 --> 56:49.960]  Вот.
[56:49.960 --> 56:50.960]  Вот.
[56:50.960 --> 56:51.960]  Вот.
[56:51.960 --> 56:52.960]  Сейчас,
[56:52.960 --> 56:53.960]  а может,
[56:53.960 --> 56:54.960]  вот в Афхин
[56:54.960 --> 56:55.960]  даже
[56:55.960 --> 56:56.960]  ничего
[56:56.960 --> 56:57.960]  сложного
[56:57.960 --> 56:58.960]  не нужно.
[56:58.960 --> 56:59.960]  Смотрите,
[56:59.960 --> 57:00.960]  тут есть такая
[57:00.960 --> 57:01.960]  фишка,
[57:01.960 --> 57:02.960]  что даже
[57:02.960 --> 57:03.960]  если у вас
[57:03.960 --> 57:04.960]  нагоритмическая
[57:04.960 --> 57:05.960]  память,
[57:05.960 --> 57:06.960]  но при этом
[57:06.960 --> 57:07.960]  конкретный вход
[57:07.960 --> 57:08.960]  тоже
[57:08.960 --> 57:09.960]  нагоритмический,
[57:09.960 --> 57:10.960]  то с этим
[57:10.960 --> 57:11.960]  входом
[57:11.960 --> 57:12.960]  можно как вообще
[57:12.960 --> 57:13.960]  все,
[57:13.960 --> 57:14.960]  что угодно
[57:14.960 --> 57:15.960]  делать,
[57:15.960 --> 57:16.960]  ну,
[57:16.960 --> 57:17.960]  что требует
[57:17.960 --> 57:18.960]  понимания
[57:18.960 --> 57:19.960]  памяти.
[57:19.960 --> 57:20.960]  Вот.
[57:20.960 --> 57:21.960]  Да,
[57:21.960 --> 57:22.960]  даже
[57:22.960 --> 57:23.960]  не нужно
[57:23.960 --> 57:24.960]  технических
[57:24.960 --> 57:25.960]  деталей,
[57:25.960 --> 57:26.960]  а просто
[57:26.960 --> 57:27.960]  сказать,
[57:27.960 --> 57:28.960]  что у нас
[57:28.960 --> 57:29.960]  как бы
[57:29.960 --> 57:30.960]  номер
[57:30.960 --> 57:31.960]  вершины
[57:31.960 --> 57:32.960]  графа,
[57:32.960 --> 57:33.960]  он же
[57:33.960 --> 57:34.960]  является
[57:34.960 --> 57:35.960]  входом
[57:35.960 --> 57:36.960]  конфигурации.
[57:36.960 --> 57:37.960]  Да,
[57:37.960 --> 57:38.960]  он
[57:38.960 --> 57:39.960]  занимает
[57:39.960 --> 57:40.960]  алгорифы
[57:40.960 --> 57:41.960]  гитов.
[57:41.960 --> 57:42.960]  И
[57:42.960 --> 57:43.960]  второй
[57:43.960 --> 57:44.960]  номер
[57:44.960 --> 57:45.960]  тоже
[57:45.960 --> 57:46.960]  занимает
[57:46.960 --> 57:47.960]  алгорифы
[57:47.960 --> 57:48.960]  гитов.
[57:48.960 --> 57:49.960]  Вот.
[57:49.960 --> 57:50.960]  Ну,
[57:50.960 --> 57:51.960]  а
[57:51.960 --> 57:52.960]  то,
[57:52.960 --> 57:53.960]  что
[57:53.960 --> 57:54.960]  мы
[57:54.960 --> 57:55.960]  можем
[57:55.960 --> 57:56.960]  провести
[57:56.960 --> 57:57.960]  корректный
[57:57.960 --> 57:58.960]  переход
[57:58.960 --> 57:59.960]  на
[57:59.960 --> 58:00.960]  линейную
[58:00.960 --> 58:01.960]  память,
[58:01.960 --> 58:02.960]  да,
[58:02.960 --> 58:03.960]  все,
[58:03.960 --> 58:04.960]  что
[58:04.960 --> 58:05.960]  может быть
[58:05.960 --> 58:06.960]  на
[58:06.960 --> 58:07.960]  линейную
[58:07.960 --> 58:08.960]  память,
[58:08.960 --> 58:09.960]  с такой
[58:09.960 --> 58:10.960]  конфигурацией,
[58:10.960 --> 58:11.960]  мы можем
[58:11.960 --> 58:12.960]  сделать.
[58:12.960 --> 58:13.960]  Вот.
[58:13.960 --> 58:14.960]  Ну,
[58:14.960 --> 58:15.960]  а что,
[58:15.960 --> 58:16.960]  чтобы
[58:16.960 --> 58:17.960]  мы
[58:17.960 --> 58:18.960]  могли
[58:18.960 --> 58:19.960]  в
[58:19.960 --> 58:20.960]  следующий раз
[58:20.960 --> 58:21.960]  выскажу,
[58:21.960 --> 58:22.960]  нам
[58:22.960 --> 58:23.960]  по крайней мере
[58:23.960 --> 58:24.960]  понадобится
[58:24.960 --> 58:25.960]  следующее.
[58:25.960 --> 58:26.960]  Значит,
[58:26.960 --> 58:27.960]  нам
[58:27.960 --> 58:28.960]  понадобится
[58:28.960 --> 58:29.960]  альтернативное
[58:29.960 --> 58:30.960]  определение
[58:30.960 --> 58:31.960]  ANN
[58:31.960 --> 58:32.960]  через
[58:32.960 --> 58:33.960]  сертификат.
[58:33.960 --> 58:34.960]  Альтернативное
[58:34.960 --> 58:35.960]  определение
[58:35.960 --> 58:36.960]  ANN
[58:36.960 --> 58:37.960]  через
[58:37.960 --> 58:38.960]  сертификат.
[58:38.960 --> 58:39.960]  Вот.
[58:39.960 --> 58:40.960]  С
[58:40.960 --> 58:41.960]  ANNB
[58:41.960 --> 58:42.960]  было
[58:42.960 --> 58:43.960]  очень
[58:43.960 --> 58:44.960]  удобно.
[58:44.960 --> 58:45.960]  Да,
[58:45.960 --> 58:46.960]  значит,
[58:46.960 --> 58:47.960]  были
[58:47.960 --> 58:48.960]  ненавидимированные
[58:48.960 --> 58:49.960]  машины,
[58:49.960 --> 58:50.960]  значит,
[58:50.960 --> 58:51.960]  были
[58:51.960 --> 58:52.960]  сертификаты.
[58:52.960 --> 58:53.960]  Вот.
[58:53.960 --> 58:54.960]  Но если
[58:54.960 --> 58:55.960]  вы возьмете
[58:55.960 --> 58:56.960]  просто
[58:56.960 --> 58:57.960]  определение
[58:57.960 --> 58:58.960]  ANNB
[58:58.960 --> 58:59.960]  через
[58:59.960 --> 59:00.960]  сертификаты
[59:00.960 --> 59:01.960]  и
[59:01.960 --> 59:02.960]  заметите,
[59:02.960 --> 59:03.960]  например,
[59:03.960 --> 59:04.960]  время на
[59:04.960 --> 59:05.960]  линейную
[59:05.960 --> 59:06.960]  память,
[59:06.960 --> 59:07.960]  то у вас
[59:07.960 --> 59:08.960]  получится
[59:08.960 --> 59:09.960]  все
[59:09.960 --> 59:10.960]  равно
[59:10.960 --> 59:11.960]  ANNB.
[59:11.960 --> 59:12.960]  Да,
[59:12.960 --> 59:13.960]  значит,
[59:13.960 --> 59:14.960]  конечно,
[59:14.960 --> 59:15.960]  на самом деле
[59:15.960 --> 59:16.960]  проверять
[59:16.960 --> 59:17.960]  на
[59:17.960 --> 59:18.960]  скажем,
[59:18.960 --> 59:19.960]  формулу
[59:19.960 --> 59:20.960]  в 3KNF
[59:20.960 --> 59:21.960]  и прямо
[59:21.960 --> 59:22.960]  в данный
[59:22.960 --> 59:23.960]  список значений.
[59:23.960 --> 59:24.960]  Вот.
[59:24.960 --> 59:25.960]  И вам нужно проверить,
[59:25.960 --> 59:26.960]  что эта формула
[59:26.960 --> 59:27.960]  на этом
[59:27.960 --> 59:28.960]  списке
[59:28.960 --> 59:29.960]  истинная.
[59:29.960 --> 59:30.960]  Ну,
[59:30.960 --> 59:31.960]  что вам
[59:31.960 --> 59:32.960]  фактически
[59:32.960 --> 59:33.960]  нужно
[59:33.960 --> 59:34.960]  делать?
[59:34.960 --> 59:35.960]  Ну,
[59:35.960 --> 59:36.960]  вам нужно
[59:36.960 --> 59:37.960]  читать
[59:37.960 --> 59:38.960]  эту формулу
[59:38.960 --> 59:39.960]  по одной
[59:39.960 --> 59:40.960]  скобочке,
[59:40.960 --> 59:41.960]  да,
[59:41.960 --> 59:42.960]  смотри,
[59:42.960 --> 59:43.960]  какие там
[59:43.960 --> 59:44.960]  применные,
[59:44.960 --> 59:45.960]  да,
[59:45.960 --> 59:46.960]  там
[59:46.960 --> 59:47.960]  есть
[59:47.960 --> 59:48.960]  еще
[59:48.960 --> 59:49.960]  несколько
[59:49.960 --> 59:50.960]  счетчиков,
[59:50.960 --> 59:51.960]  чтобы
[59:51.960 --> 59:52.960]  ходить
[59:52.960 --> 59:53.960]  туда-сюда,
[59:53.960 --> 59:54.960]  значит,
[59:54.960 --> 59:55.960]  между
[59:55.960 --> 59:56.960]  формулой
[59:56.960 --> 59:57.960]  сертификатом.
[59:57.960 --> 59:58.960]  Да,
[59:58.960 --> 59:59.960]  то есть это
[59:59.960 --> 01:00:00.960]  будет
[01:00:00.960 --> 01:00:01.960]  логеристическое.
[01:00:01.960 --> 01:00:02.960]  Да,
[01:00:02.960 --> 01:00:03.960]  логеристическое
[01:00:03.960 --> 01:00:04.960]  дополнительная
[01:00:04.960 --> 01:00:05.960]  память.
[01:00:05.960 --> 01:00:06.960]  Вот.
[01:00:06.960 --> 01:00:07.960]  Значит,
[01:00:07.960 --> 01:00:08.960]  это будет
[01:00:08.960 --> 01:00:09.960]  неправильное
[01:00:09.960 --> 01:00:10.960]  определение.
[01:00:10.960 --> 01:00:11.960]  Значит,
[01:00:11.960 --> 01:00:12.960]  это тоже
[01:00:12.960 --> 01:00:13.960]  правильное определение.
[01:00:13.960 --> 01:00:14.960]  А
[01:00:15.960 --> 01:00:16.960]  значит,
[01:00:16.960 --> 01:00:17.960]  будет
[01:00:17.960 --> 01:00:18.960]  входная
[01:00:18.960 --> 01:00:19.960]  элемента.
[01:00:19.960 --> 01:00:20.960]  Значит,
[01:00:20.960 --> 01:00:21.960]  это
[01:00:21.960 --> 01:00:22.960]  будет
[01:00:22.960 --> 01:00:23.960]  только
[01:00:23.960 --> 01:00:24.960]  для
[01:00:24.960 --> 01:00:25.960]  счетчика.
[01:00:25.960 --> 01:00:26.960]  Значит,
[01:00:26.960 --> 01:00:27.960]  будет
[01:00:27.960 --> 01:00:28.960]  следующая
[01:00:28.960 --> 01:00:29.960]  элемента
[01:00:29.960 --> 01:00:30.960]  сертификата.
[01:00:30.960 --> 01:00:31.960]  Ну,
[01:00:31.960 --> 01:00:32.960]  что вам
[01:00:32.960 --> 01:00:33.960]  нужно
[01:00:33.960 --> 01:00:34.960]  делать?
[01:00:34.960 --> 01:00:35.960]  Ну,
[01:00:35.960 --> 01:00:36.960]  что вам
[01:00:36.960 --> 01:00:37.960]  нужно
[01:00:37.960 --> 01:00:38.960]  делать?
[01:00:38.960 --> 01:00:39.960]  Ну,
[01:00:39.960 --> 01:00:40.960]  что вам
[01:00:40.960 --> 01:00:41.960]  нужно
[01:00:41.960 --> 01:00:42.960]  делать?
[01:00:42.960 --> 01:00:43.960]  Ну,
[01:00:43.960 --> 01:00:44.960] iser
[01:00:44.960 --> 01:00:45.960]  asteroids.
[01:00:45.960 --> 01:00:46.960]  И
[01:00:46.960 --> 01:00:48.960]  rainbow
[01:00:48.960 --> 01:00:49.960]  Inter comics.
[01:00:49.960 --> 01:00:50.960]  Вот.
[01:00:50.960 --> 01:00:51.960]  И
[01:00:51.960 --> 01:00:52.960]  будет
[01:00:52.960 --> 01:00:53.960]  соответственно
[01:00:53.960 --> 01:00:54.960]  рабочим.
[01:00:54.960 --> 01:00:55.960]  Там
[01:00:55.960 --> 01:00:56.960]  будет
[01:00:56.960 --> 01:00:57.960] ?
[01:00:57.960 --> 01:00:58.960]  Ммм.
[01:00:58.960 --> 01:00:59.960] Jason
[01:00:59.960 --> 01:01:00.960] ptions,
[01:01:00.960 --> 01:01:01.960]  да,
[01:01:01.960 --> 01:01:02.960]  вс mega
[01:01:02.960 --> 01:01:03.960]  bra.
[01:01:03.960 --> 01:01:04.960]  Сп takiej
[01:01:04.960 --> 01:01:05.960]  арте
[01:01:05.960 --> 01:01:06.960]  конк facing
[01:01:06.960 --> 01:01:09.960]  по
[01:01:09.960 --> 01:01:12.960]  subd realize,
[01:01:12.960 --> 01:01:31.960]  Ну и, значит, машина для чтения и для записи.
[01:01:31.960 --> 01:01:35.960]  Ну вот, соответственно, будет, как на управляющий
[01:01:35.960 --> 01:01:39.960]  блок, будут указать на направлении.
[01:01:39.960 --> 01:01:41.960]  Нет.
[01:01:41.960 --> 01:01:44.960]  Ну, наверное, здесь, когда указатель может
[01:01:44.960 --> 01:01:47.960]  убедиться и налево, и направо, он не может
[01:01:47.960 --> 01:01:49.960]  записываться.
[01:01:49.960 --> 01:01:52.960]  А вот этот вот указатель, только слева направо
[01:01:52.960 --> 01:01:54.960]  может быть.
[01:01:54.960 --> 01:01:57.960]  Ну, это, конечно, стоит.
[01:01:57.960 --> 01:01:59.960]  Вот.
[01:01:59.960 --> 01:02:02.960]  Ну, и после этого будет точно такое же.
[01:02:02.960 --> 01:02:06.960]  То есть, это зрение, что там A на жидкость
[01:02:06.960 --> 01:02:13.960]  D, светло существует, лагеринческая маска
[01:02:13.960 --> 01:02:16.960]  дюлинга вот такого вот вида.
[01:02:16.960 --> 01:02:21.960]  Значит, такая, что, значит, тогда и что?
[01:02:21.960 --> 01:02:25.960]  У любого X будет верно, что у слева два.
[01:02:25.960 --> 01:02:28.960]  Тогда и только тогда, когда существует
[01:02:28.960 --> 01:02:33.960]  у, такое же, когда у проявляется.
[01:02:40.960 --> 01:02:41.960]  Так.
[01:02:41.960 --> 01:02:44.960]  Значит, почему это то же самое?
[01:02:44.960 --> 01:02:47.960]  Ну, мне понятно почему, да, что вот в такой
[01:02:47.960 --> 01:02:53.960]  формулировке уже получается, что доказательство
[01:02:53.960 --> 01:02:56.960]  экваленции примерно так же, как в NP.
[01:02:56.960 --> 01:02:57.960]  Ну, как это?
[01:02:57.960 --> 01:02:58.960]  В одну сторону.
[01:02:58.960 --> 01:03:01.960]  Значит, мы же у нас есть такая машина.
[01:03:01.960 --> 01:03:06.960]  Значит, тогда нетерминированный аналог будет работать так,
[01:03:06.960 --> 01:03:08.960]  что просто, когда нам нужно прочесть следующий
[01:03:08.960 --> 01:03:11.960]  мексиканский хаха, мы будем нетерминированно
[01:03:11.960 --> 01:03:14.960]  брать либо ноль, либо единичку.
[01:03:14.960 --> 01:03:16.960]  То есть, вместо счетения след, ну, мы просто
[01:03:16.960 --> 01:03:18.960]  нетерминированно браться.
[01:03:18.960 --> 01:03:21.960]  Ну, и тогда, если он существует, то тогда мы
[01:03:21.960 --> 01:03:24.960]  на какой-то вес вычисления ровно его и возьмем, да,
[01:03:25.960 --> 01:03:28.960]  вот другую сторону.
[01:03:28.960 --> 01:03:31.960]  Значит, другую сторону, если нетерминированная,
[01:03:31.960 --> 01:03:34.960]  то здесь мы ровно сертификат записываем,
[01:03:34.960 --> 01:03:36.960]  по какой ветке идти.
[01:03:36.960 --> 01:03:40.960]  Да, то есть, например, для задачи ПЭС
[01:03:40.960 --> 01:03:43.960]  сертификат просто сам в пути есть.
[01:03:43.960 --> 01:03:50.960]  То есть, нам поддают, чтобы пэс плывет в этот
[01:03:50.960 --> 01:03:55.960]  дырах и две вершины.
[01:03:55.960 --> 01:03:58.960]  Значит, дырах и две вершины.
[01:03:58.960 --> 01:04:01.960]  Значит, игрек это кончит.
[01:04:01.960 --> 01:04:05.960]  Вот. А вы, Алексей, проверяете карьерный способ?
[01:04:12.960 --> 01:04:14.960]  Значит, так проверять карьерный способ.
[01:04:14.960 --> 01:04:17.960]  Ну, нужно вспоминать там будущее, шевелить и кушать.
[01:04:17.960 --> 01:04:22.960]  И проверять, что, соответственно, это ребро есть в графе.
[01:04:22.960 --> 01:04:25.960]  Вот. Если нет, то отвергаем сертификат.
[01:04:25.960 --> 01:04:28.960]  Если есть, то предыдущего времени текущую,
[01:04:28.960 --> 01:04:31.960]  текущую читаемую сертификата, ей снова проверяем.
[01:04:31.960 --> 01:04:33.960]  Ну, и так далее.
[01:04:35.960 --> 01:04:38.960]  Соответственно, вот нам нужно хранить там две вершины.
[01:04:38.960 --> 01:04:41.960]  Ну, и вот еще какие-нибудь счетчики небольшие.
[01:04:41.960 --> 01:04:43.960]  Нам нужны счетчики, чтобы проверять, что есть ребро.
[01:04:43.960 --> 01:04:45.960]  Ну, это тоже там еще пара счетчиков.
[01:04:47.960 --> 01:04:50.960]  Вот. И поэтому это будет логическое.
[01:04:53.960 --> 01:04:54.960]  Так.
[01:04:55.960 --> 01:04:57.960]  Ничего. Понятно?
[01:05:02.960 --> 01:05:04.960]  Логническая память.
[01:05:04.960 --> 01:05:06.960]  То есть память, она рабочая идентина.
[01:05:07.960 --> 01:05:09.960]  Не здесь, не здесь, не считается.
[01:05:09.960 --> 01:05:11.960]  Память, считается, она забавная.
[01:05:12.960 --> 01:05:14.960]  Хорошо.
[01:05:14.960 --> 01:05:18.960]  Но теперь, к чему эта вся подготовка?
[01:05:20.960 --> 01:05:23.960]  Значит, вот есть такая теорема
[01:05:26.960 --> 01:05:31.960]  им. Мана Солепчения.
[01:05:34.960 --> 01:05:36.960]  Солепчение – какое-то венгерское имя.
[01:05:36.960 --> 01:05:38.960]  Я все время забываю, как оно пишется.
[01:05:38.960 --> 01:05:40.960]  Это очень странно.
[01:05:41.960 --> 01:05:43.960]  Сейчас, может быть, вот так вот.
[01:05:47.960 --> 01:05:49.960]  Может быть, вот так вот.
[01:05:49.960 --> 01:05:53.960]  И какие-то там еще точно есть диагнетические знаки.
[01:05:55.960 --> 01:05:57.960]  Если венгерский не изучать, то это невозможно.
[01:05:57.960 --> 01:05:59.960]  Помните?
[01:06:04.960 --> 01:06:06.960]  Так вот, начнем чему теорема.
[01:06:06.960 --> 01:06:09.960]  Значит, теорема в следующем.
[01:06:09.960 --> 01:06:13.960]  Что n и n равняется coin и n.
[01:06:17.960 --> 01:06:19.960]  Значит, coin и n мы пока не изучали,
[01:06:19.960 --> 01:06:21.960]  но язык нам не выделяется.
[01:06:23.960 --> 01:06:27.960]  Да, значит, это дополнение к языкам из n и n.
[01:06:28.960 --> 01:06:33.960]  Ну и, соответственно, достаточно доказать,
[01:06:33.960 --> 01:06:36.960]  что дополнение к p,
[01:06:36.960 --> 01:06:38.960]  значит, p в чертовой режим в n и n.
[01:06:41.960 --> 01:06:43.960]  Как раз за счет того, что p в n и n полный,
[01:06:43.960 --> 01:06:47.960]  то если он будет и в coin и n,
[01:06:47.960 --> 01:06:50.960]  то есть это то же самое, что дополнение к p в n и n,
[01:06:50.960 --> 01:06:53.960]  то сразу все из coin и n лежат в n и n,
[01:06:53.960 --> 01:06:55.960]  и наоборот тоже получится.
[01:06:56.960 --> 01:06:58.960]  Так, ну что, понятно, почему это достаточно?
[01:06:59.960 --> 01:07:01.960]  Ну, например, как с n и p.
[01:07:01.960 --> 01:07:03.960]  Если coin и p полный язык лежит в n и p,
[01:07:03.960 --> 01:07:05.960]  то n и p равно coin и p.
[01:07:05.960 --> 01:07:07.960]  Значит, здесь точно не так же.
[01:07:08.960 --> 01:07:10.960]  Ну вот так.
[01:07:11.960 --> 01:07:13.960]  Вообще сейчас может немножко и успеем,
[01:07:13.960 --> 01:07:15.960]  может не целиком, еще 8 минут.
[01:07:16.960 --> 01:07:18.960]  Давайте обсудим.
[01:07:18.960 --> 01:07:21.960]  Можно каким-то образом составить сертификат.
[01:07:22.960 --> 01:07:24.960]  Значит, можно составить сертификат,
[01:07:24.960 --> 01:07:27.960]  который будет доказывать, что пути нет.
[01:07:29.960 --> 01:07:31.960]  Значит, как даже пути нет.
[01:07:31.960 --> 01:07:33.960]  Так, что я этим показал?
[01:07:34.960 --> 01:07:36.960]  Значит, как доказать, что пути нет.
[01:07:38.960 --> 01:07:40.960]  Ну, смотрите, можно просто,
[01:07:40.960 --> 01:07:43.960]  если мы откуда-то знаем,
[01:07:44.960 --> 01:07:46.960]  сколько всего достижимых язык,
[01:07:49.960 --> 01:07:53.960]  то можно предъявить такое число достижимых,
[01:07:53.960 --> 01:07:55.960]  среди которых нет t.
[01:07:56.960 --> 01:07:58.960]  Ну, про каждую мы заказали число достижимых.
[01:07:58.960 --> 01:08:01.960]  Да, смотрите, доказывать достижимых мы умеем.
[01:08:03.960 --> 01:08:07.960]  Если мы знаем число c,
[01:08:11.960 --> 01:08:13.960]  доказательства,
[01:08:14.960 --> 01:08:16.960]  значит, если знаем
[01:08:19.960 --> 01:08:21.960]  число c,
[01:08:21.960 --> 01:08:23.960]  вершин
[01:08:25.960 --> 01:08:27.960]  достижимых из s,
[01:08:27.960 --> 01:08:29.960]  то можно доказать,
[01:08:34.960 --> 01:08:36.960]  что можно доказать недостижимость.
[01:08:41.960 --> 01:08:43.960]  Т.е. просто предъявить,
[01:08:48.960 --> 01:08:50.960]  предъявить c различных
[01:08:52.960 --> 01:08:54.960]  достижимых языков,
[01:08:54.960 --> 01:08:56.960]  различных
[01:08:56.960 --> 01:08:58.960]  достижимых вершин
[01:09:02.960 --> 01:09:04.960]  из s,
[01:09:04.960 --> 01:09:06.960]  среди которых нет t.
[01:09:15.960 --> 01:09:17.960]  Так, как это делается?
[01:09:18.960 --> 01:09:20.960]  Значит, тут вот
[01:09:20.960 --> 01:09:22.960]  различные, это
[01:09:22.960 --> 01:09:24.960]  очень важные условия,
[01:09:24.960 --> 01:09:26.960]  чтобы все были разные.
[01:09:26.960 --> 01:09:28.960]  А мы не можем всех хранить
[01:09:28.960 --> 01:09:30.960]  на всякой технической партии.
[01:09:30.960 --> 01:09:32.960]  Ну, а что мы можем?
[01:09:32.960 --> 01:09:34.960]  Мы можем их предъявить в отсортированном порядке.
[01:09:34.960 --> 01:09:36.960]  Т.е. можно прям
[01:09:36.960 --> 01:09:38.960]  рассмотреть v1 меньше v2,
[01:09:38.960 --> 01:09:40.960]  меньше и т.д.,
[01:09:40.960 --> 01:09:42.960]  меньше vc,
[01:09:42.960 --> 01:09:44.960]  начиная с достижимых вершин.
[01:09:44.960 --> 01:09:46.960]  Значит, и сертификат
[01:09:46.960 --> 01:09:48.960]  будет быть где-то так.
[01:09:48.960 --> 01:09:50.960]  Значит, v1,
[01:09:50.960 --> 01:09:52.960]  потом, соответственно, путь
[01:09:52.960 --> 01:09:54.960]  из s в v1,
[01:09:54.960 --> 01:09:56.960]  значит, потом v2,
[01:09:56.960 --> 01:09:58.960]  потом путь
[01:09:58.960 --> 01:10:00.960]  из s в v2,
[01:10:00.960 --> 01:10:02.960]  и т.д.
[01:10:02.960 --> 01:10:04.960]  Нам будет даже не важно, да?
[01:10:04.960 --> 01:10:06.960]  Что?
[01:10:06.960 --> 01:10:08.960]  Нам будет даже не нужно, как-то сказать.
[01:10:08.960 --> 01:10:10.960]  Нет, почему?
[01:10:10.960 --> 01:10:12.960]  Мы же должны проверять, что мы достижим.
[01:10:12.960 --> 01:10:14.960]  Мы же умеем сами проверять, что мы достижим?
[01:10:14.960 --> 01:10:16.960]  Нет, сейчас, смотрите, я
[01:10:16.960 --> 01:10:18.960]  прошу программу сертификата.
[01:10:18.960 --> 01:10:20.960]  Я прошу вот эту нервную программу
[01:10:20.960 --> 01:10:22.960]  сертификата.
[01:10:22.960 --> 01:10:24.960]  Потому что
[01:10:24.960 --> 01:10:26.960]  мы не будем взмешивать два подхода,
[01:10:26.960 --> 01:10:28.960]  если сертификат не интервенируется.
[01:10:28.960 --> 01:10:30.960]  Соответственно,
[01:10:30.960 --> 01:10:32.960]  сертификат мы умеем проверять,
[01:10:32.960 --> 01:10:34.960]  если мы его напечатаем.
[01:10:36.960 --> 01:10:38.960]  Значит, v1, потом
[01:10:38.960 --> 01:10:40.960]  путь с v1, v2,
[01:10:40.960 --> 01:10:42.960]  и т.д., значит, vc,
[01:10:42.960 --> 01:10:44.960]  и т.д.
[01:10:44.960 --> 01:10:46.960]  Значит, как это проверять?
[01:10:46.960 --> 01:10:48.960]  Ну как?
[01:10:48.960 --> 01:10:50.960]  Нужно вспоминать предыдущую вершину,
[01:10:50.960 --> 01:10:52.960]  проверять путь,
[01:10:52.960 --> 01:10:54.960]  и потом проверять, что новая машина
[01:10:54.960 --> 01:10:56.960]  больше, чем предыдущая.
[01:10:56.960 --> 01:10:58.960]  Ну и что не совпадает с t.
[01:10:58.960 --> 01:11:00.960]  Вот.
[01:11:00.960 --> 01:11:02.960]  И так, соответственно, старую забываем,
[01:11:02.960 --> 01:11:04.960]  новую дверь записываем,
[01:11:04.960 --> 01:11:06.960]  проверяем путь,
[01:11:06.960 --> 01:11:08.960]  читаем новую, проверяем, что она больше,
[01:11:08.960 --> 01:11:10.960]  не совпадает с t, и так далее доходим до конца.
[01:11:10.960 --> 01:11:12.960]  И еще у нас есть счетчик, сколько
[01:11:12.960 --> 01:11:14.960]  и т.д. И нужно, чтобы в конце этого счетчика
[01:11:14.960 --> 01:11:16.960]  совпался не в самом центре.
[01:11:16.960 --> 01:11:18.960]  Вот.
[01:11:18.960 --> 01:11:20.960]  Хорошо. Ну, а ответственно вопрос
[01:11:20.960 --> 01:11:22.960]  о том, кто цель взять.
[01:11:22.960 --> 01:11:24.960]  Ну, значит, дальше
[01:11:24.960 --> 01:11:26.960]  идея такая, что
[01:11:26.960 --> 01:11:28.960]  мы, значит, кроме
[01:11:28.960 --> 01:11:30.960]  c,
[01:11:30.960 --> 01:11:32.960]  просто достижимых, рассмотрим, может быть,
[01:11:32.960 --> 01:11:34.960]  число достижимых
[01:11:34.960 --> 01:11:36.960]  путем, ну, конвертной длины.
[01:11:36.960 --> 01:11:38.960]  Да, то есть
[01:11:38.960 --> 01:11:40.960]  cхt,
[01:11:40.960 --> 01:11:42.960]  значит, это число
[01:11:42.960 --> 01:11:44.960]  достижимых
[01:11:46.960 --> 01:11:48.960]  причем длины
[01:11:48.960 --> 01:11:50.960]  не больше k.
[01:11:54.960 --> 01:11:56.960]  Не больше k.
[01:11:56.960 --> 01:11:58.960]  Тогда c равно есть c.
[01:11:58.960 --> 01:12:00.960]  Да, потому что если путь есть, то есть простой путь,
[01:12:00.960 --> 01:12:02.960]  который не больше
[01:12:02.960 --> 01:12:04.960]  отверший.
[01:12:04.960 --> 01:12:06.960]  Значит, c равно c.
[01:12:06.960 --> 01:12:08.960]  Вот. А c0
[01:12:08.960 --> 01:12:10.960]  мы все это знаем, да, c0
[01:12:10.960 --> 01:12:12.960]  это единица.
[01:12:12.960 --> 01:12:14.960]  Ну, значит, c0 это единица.
[01:12:16.960 --> 01:12:18.960]  Вот. И, соответственно,
[01:12:20.960 --> 01:12:22.960]  нам вот так же получиться
[01:12:22.960 --> 01:12:24.960]  предъявление
[01:12:24.960 --> 01:12:26.960]  спирика при
[01:12:26.960 --> 01:12:28.960]  известном цейте, статикат, что цейт
[01:12:28.960 --> 01:12:30.960]  т.д.
[01:12:30.960 --> 01:12:32.960]  То есть нам нужно написать
[01:12:32.960 --> 01:12:34.960]  предъявление
[01:12:34.960 --> 01:12:36.960]  т.д., значит,
[01:12:36.960 --> 01:12:38.960]  при известном
[01:12:40.960 --> 01:12:42.960]  и известном цейте.
[01:12:44.960 --> 01:12:46.960]  Если мы это умеем, то более непонятно.
[01:12:46.960 --> 01:12:48.960]  Дальше, соответственно,
[01:12:48.960 --> 01:12:50.960]  c0 мы знаем, значит, c1
[01:12:50.960 --> 01:12:52.960]  считаем, не забываем, то далее cn,
[01:12:52.960 --> 01:12:54.960]  а cn дальше тоже надо
[01:12:54.960 --> 01:12:56.960]  получить.
[01:12:56.960 --> 01:12:58.960]  Да, так все это раздается.
[01:12:58.960 --> 01:13:00.960]  Вот. Но, соответственно,
[01:13:02.960 --> 01:13:04.960]  вот, основной вопрос,
[01:13:04.960 --> 01:13:06.960]  значит, как спирит при этом.
[01:13:06.960 --> 01:13:08.960]  Дело в том, что
[01:13:10.960 --> 01:13:12.960]  мы можем
[01:13:14.960 --> 01:13:16.960]  предъявлять
[01:13:18.960 --> 01:13:20.960]  как сертификат достижимости, так и
[01:13:20.960 --> 01:13:22.960]  сертификат недостижимости.
[01:13:22.960 --> 01:13:24.960]  Вот этот сертификат
[01:13:24.960 --> 01:13:26.960]  это набор
[01:13:26.960 --> 01:13:28.960]  сертификатов,
[01:13:28.960 --> 01:13:30.960]  значит,
[01:13:30.960 --> 01:13:32.960]  сертификатора
[01:13:32.960 --> 01:13:34.960]  достижимости, нет, достижимости
[01:13:36.960 --> 01:13:38.960]  не достижимый.
[01:13:42.960 --> 01:13:44.960]  Значит, ученый и плюс один
[01:13:44.960 --> 01:13:46.960]  для всех вершин.
[01:13:46.960 --> 01:13:48.960]  Может, так сейчас
[01:13:50.960 --> 01:13:52.960]  значит, ученый. Так, сейчас
[01:13:52.960 --> 01:13:54.960]  дому и плюс один
[01:13:54.960 --> 01:13:56.960]  для всех вершин.
[01:14:02.960 --> 01:14:07.960]  Мы сейчас там, соответственно, достижимы в краю.
[01:14:07.960 --> 01:14:10.960]  Сейчас! Приизвестны в ЦИ.
[01:14:10.960 --> 01:14:13.960]  Сейчас, давайте я за пару минуток скажу.
[01:14:13.960 --> 01:14:17.960]  Достижимысть, это понятно. Достижимысть, это просто путь.
[01:14:17.960 --> 01:14:19.960]  Надо только проверить, что мы уже недели,
[01:14:19.960 --> 01:14:23.960]  это мы еще чуть-чуть замедленные и посчитаем тут.
[01:14:23.960 --> 01:14:26.960]  Достижимысть.
[01:14:27.960 --> 01:14:31.960]  И это просто путь.
[01:14:33.960 --> 01:14:36.960]  Путь длины не больше,
[01:14:36.960 --> 01:14:40.960]  не больше, чем И плюс один.
[01:14:40.960 --> 01:14:43.960]  Потому что у нас ЦИ плюс один уже.
[01:14:43.960 --> 01:14:46.960]  Значит, недостижимысть.
[01:14:51.960 --> 01:14:54.960]  Это вот примерно как мы там сделали.
[01:14:54.960 --> 01:14:57.960]  Значит, смотрите, мы знаем ЦИТ.
[01:14:57.960 --> 01:15:00.960]  Мы знаем ЦИТ. Это значит ЦИТ.
[01:15:00.960 --> 01:15:03.960]  Различных.
[01:15:03.960 --> 01:15:06.960]  Достижимых вершин.
[01:15:09.960 --> 01:15:12.960]  Пучом длины не больше И.
[01:15:13.960 --> 01:15:17.960]  Значит, пучом длины не больше И.
[01:15:18.960 --> 01:15:22.960]  И мы теперь проверяем, что ни одна из них не совпадает с данной.
[01:15:22.960 --> 01:15:25.960]  И ни из одной из них нет ребрафта.
[01:15:27.960 --> 01:15:33.960]  Значит, которые не совпадают с данной.
[01:15:38.960 --> 01:15:41.960]  Не совпадают с данной.
[01:15:41.960 --> 01:15:47.960]  И из которых нет ребрафта.
[01:15:53.960 --> 01:15:58.960]  И вот это мы как раз позволили отмечить еще что-то.
[01:16:00.960 --> 01:16:03.960]  Да, что не только сама межинка достижена.
[01:16:03.960 --> 01:16:06.960]  Она не достижена за И, она не достигает.
[01:16:06.960 --> 01:16:09.960]  Значит, она не достижена за ВСН.
[01:16:09.960 --> 01:16:12.960]  Ну а дальше о чем собирается.
[01:16:12.960 --> 01:16:15.960]  Например, у нас будет сертификат.
[01:16:15.960 --> 01:16:18.960]  Там уже длина будет сертификата С4.
[01:16:18.960 --> 01:16:21.960]  Потому что у нас ЭН этап пока ВСН считает.
[01:16:21.960 --> 01:16:25.960]  Эн этап для интерсертификата.
[01:16:25.960 --> 01:16:29.960]  Но сертификат на достиженности тоже не убирает квадрат.
[01:16:29.960 --> 01:16:35.960]  Ну, если цепь достаточно большая, будут длинные пути.
[01:16:35.960 --> 01:16:38.960]  И их будет тоже достаточно много.
[01:16:39.960 --> 01:16:42.960]  Ну, соответственно, дальше мы это все прочтем.
[01:16:42.960 --> 01:16:44.960]  И все правильно.
[01:16:44.960 --> 01:16:48.960]  А потом в итоге мы посчитаем СН и добавим еще этот сертификат.
[01:16:48.960 --> 01:16:51.960]  И получается, что мы можем достигать недостижения.
[01:16:53.960 --> 01:16:57.960]  Вот, значит, вот такая хитрая конструкция.
[01:16:57.960 --> 01:17:02.960]  Но для НТВ и КМП ничего такого нет.
[01:17:02.960 --> 01:17:05.960]  А в оконнеле равно кое-что.
[01:17:06.960 --> 01:17:10.960]  Так, ну ладно, какие-то вопросы остались.
[01:17:10.960 --> 01:17:15.960]  Вы на первой лекции говорили, что интервью дальше одна.
[01:17:15.960 --> 01:17:17.960]  Так, значит, что QR не равно NB.
[01:17:17.960 --> 01:17:20.960]  Это, ну, по слову, значит.
[01:17:20.960 --> 01:17:23.960]  Нет, это... так, это просто...
[01:17:23.960 --> 01:17:25.960]  Так, когда-то не нужно коммунировать.
[01:17:25.960 --> 01:17:27.960]  Ну, понятно.
[01:17:27.960 --> 01:17:29.960]  Ну, QR, по-моему, плодно.
[01:17:29.960 --> 01:17:30.960]  Да.
[01:17:30.960 --> 01:17:31.960]  Ну, это то, что...
[01:17:31.960 --> 01:17:32.960]  Нет, то есть нормально.
[01:17:32.960 --> 01:17:36.960]  Мы предъявляем алгоритм, в котором решаем, ну, какую-то из интересных задач.
[01:17:36.960 --> 01:17:39.960]  Ну, какую-то из интересных задач заклинован.
[01:17:39.960 --> 01:17:42.960]  И вот он и проверяет, соответственно, наш алгоритм.
[01:17:42.960 --> 01:17:44.960]  А это значит, что алгоритм работает?
[01:17:44.960 --> 01:17:46.960]  Нет, это конечно.
[01:17:46.960 --> 01:17:48.960]  Это значит, что работает?
[01:17:48.960 --> 01:17:49.960]  В общем, работает.
[01:17:49.960 --> 01:17:50.960]  Да.
[01:17:50.960 --> 01:17:53.960]  Но там алгоритм работает лишь, когда там алгоритм работает.
[01:17:54.960 --> 01:17:57.960]  А, ну какие-то препятствия предоставляются или нет.
[01:17:57.960 --> 01:17:59.960]  Вообще неприятно, вот и иначе.
[01:18:00.960 --> 01:18:02.960]  Надо поискать.
[01:18:06.960 --> 01:18:08.960]  Надо поискать, но вообще...
[01:18:10.960 --> 01:18:14.960]  Некоторые исследователи, они вообще сомневаются, что они не равны.
[01:18:14.960 --> 01:18:16.960]  Да, вот, как говорят.
[01:18:16.960 --> 01:18:18.960]  NL или QL получились равными, да.
[01:18:18.960 --> 01:18:21.960]  Почему NL или QL не равны, так как-то не очень понятно.
[01:18:23.960 --> 01:18:24.960]  Вот.
[01:18:24.960 --> 01:18:26.960]  А особенно, что касательно равномизированных.
[01:18:26.960 --> 01:18:28.960]  Да, то есть почему равномизированные?
[01:18:28.960 --> 01:18:32.960]  Вероятно, если ты равномизированный, то ты чувствуешь себя более чем равномерным.
[01:18:32.960 --> 01:18:34.960]  Это вообще не понятно.
[01:18:34.960 --> 01:18:36.960]  Скорее всего, просто ты не привыкешь, если ты равномизированный.
[01:18:36.960 --> 01:18:38.960]  Да, я понимаю.
[01:18:42.960 --> 01:18:44.960]  Вот.
[01:18:44.960 --> 01:18:46.960]  Да, вообще интересный вопрос.
[01:18:46.960 --> 01:18:47.960]  Надо поискать.
[01:18:47.960 --> 01:18:49.960]  Наверное, что это будет называть?
[01:18:51.960 --> 01:18:53.960]  Ну, хотя я не знаю.
[01:18:53.960 --> 01:18:59.960]  Те методы, которые для PNP, они здесь точно не работают.
[01:19:00.960 --> 01:19:03.960]  Так, ну важно, чтобы подпалили на это время.
[01:19:03.960 --> 01:19:05.960]  Нет проблем.
[01:19:05.960 --> 01:19:07.960]  Ну, что-то кинускально для разных задач.
[01:19:07.960 --> 01:19:09.960]  Красный, да.
[01:19:09.960 --> 01:19:11.960]  Подходы из одной там не переносится.
[01:19:11.960 --> 01:19:13.960]  Не переносится.
[01:19:13.960 --> 01:19:14.960]  Так.
[01:19:14.960 --> 01:19:17.960]  Ладно, давайте заканчивайся, ты уже все время назад.
[01:19:17.960 --> 01:19:19.960]  Спасибо за внимание.
