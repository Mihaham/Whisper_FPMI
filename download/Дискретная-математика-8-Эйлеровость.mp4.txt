[00:00.000 --> 00:14.000]  Давайте сейчас докажем непознавательную таблику А5, для этого нужно запускать мейнера.
[00:14.000 --> 00:23.000]  Мейнер мы непосредственно подобрались, потому что я определил, что такое грани.
[00:23.000 --> 00:40.000]  Значит, если, теперь я буду учить так, если уже связанный лоский граф,
[00:40.000 --> 01:00.000]  то для любой лосской укладки, для любой глагарной укладки,
[01:00.000 --> 01:24.000]  верно вот что, вот это запишем, число вершин.
[01:24.000 --> 01:37.000]  Это число вершин, то есть число грани.
[01:37.000 --> 01:48.000]  Важно обратить внимание, что граф плоский это используется, и что граф связанный именно,
[01:48.000 --> 01:51.000]  потому что для связанного здесь будет не два.
[01:51.000 --> 01:57.000]  Обращаю внимание, некое число, которое зависит от количества компонент связанности.
[01:57.000 --> 02:06.000]  Если я не ошибаюсь, мы давали это на семинарах в виде упражнения,
[02:06.000 --> 02:14.000]  посчитать, что здесь будет ли не связанного графа, тут будет что-то вроде 1 плюс т, где-то количество связанных компонентов.
[02:14.000 --> 02:36.000]  Вот, смотрите, давайте просто вот так докажем, индукция по количеству вершин минус количеству грани.
[02:44.000 --> 02:58.000]  Так, ну давайте база.
[02:58.000 --> 03:06.000]  Какое самое маленькое значение вот этой разницы количества вершин, скорее всего?
[03:06.000 --> 03:12.000]  Единица, это уйдет.
[03:12.000 --> 03:18.000]  Количество ребер уйдет, количество вершин минус один.
[03:18.000 --> 03:23.000]  Вот если у вас просто вот такой вот граф вершин, это или бабка-регольничка?
[03:23.000 --> 03:27.000]  Ну, вот так, тут уравну.
[03:27.000 --> 03:29.000]  Так, подождите.
[03:29.000 --> 03:33.000]  Количество... так, еще раз.
[03:33.000 --> 03:37.000]  Количество ребер уйдет.
[03:37.000 --> 03:45.000]  Так, подождите.
[03:45.000 --> 03:49.000]  Вот еще чуть перекутал сейчас.
[03:49.000 --> 03:51.000]  Может даже отрицательно попробовать.
[03:51.000 --> 03:53.000]  Так оно будет отрицательно, да, я перепутал.
[03:53.000 --> 03:57.000]  Ну, я бы вот так, я еще что-либо, скорее всего, я бы вот так делал.
[03:57.000 --> 04:07.000]  И нет.
[04:07.000 --> 04:17.000]  Вот это уже будет...
[04:17.000 --> 04:22.000]  Вот это минус один до там, не знаю, до куда?
[04:22.000 --> 04:25.000]  До цизи на под варь минус сэн, что?
[04:25.000 --> 04:29.000]  Через цизи на под варь минус сэн, что такое?
[04:29.000 --> 04:33.000]  Значит, смотрите.
[04:33.000 --> 04:40.000]  Ну, если количество ребер...
[04:40.000 --> 04:46.000]  Минус количество вершин...
[04:46.000 --> 04:57.000]  равное 21, то у нас... то, у нас получается же связи...
[04:57.000 --> 05:05.000]  же связи и количество ребер...
[05:05.000 --> 05:14.000]  равно количество вершин на 20.
[05:14.000 --> 05:16.000]  Так, звук-то наладили, нет?
[05:16.000 --> 05:17.000]  Да.
[05:17.000 --> 05:21.000]  Так, ну, заберите тогда телефон, вы, ваш...
[05:21.000 --> 05:26.000]  Так, или вы будете писать на два?
[05:26.000 --> 05:30.000]  Нет, в принципе, можно не писать.
[05:30.000 --> 05:45.000]  Так, тогда у нас мы доказывали, это один из определений дерева, то есть же дерево.
[05:45.000 --> 05:49.000]  Это связанный граф, у которого количество ребер, это количество вершин минус один.
[05:49.000 --> 05:53.000]  Помните, у нас было одно из таких определений дерева?
[05:53.000 --> 06:00.000]  Ну, тогда у нас вот как будет это выглядеть.
[06:00.000 --> 06:06.000]  В любой плоской укладке дерева одна грань, так?
[06:06.000 --> 06:14.000]  Поэтому количество вершин...
[06:14.000 --> 06:19.000]  минус количество ребер...
[06:19.000 --> 06:24.000]  плюс количество граней...
[06:24.000 --> 06:33.000]  равно, в данном случае, количество вершин минус количество ребер будет равно единице, правильно?
[06:33.000 --> 06:40.000]  Значит, ограни одна, поэтому здесь будет два.
[06:40.000 --> 06:42.000]  Проверили базу.
[06:42.000 --> 06:49.000]  Переход...
[06:49.000 --> 07:01.000]  Пусть утверждения доказаны.
[07:01.000 --> 07:17.000]  Вот такого плоского связанного графа.
[07:17.000 --> 07:24.000]  Значит, с количеством вершин давайте теперь обозначению идем.
[07:24.000 --> 07:34.000]  Количеством ребер и количеством ребер.
[07:34.000 --> 07:36.000]  Соответственно...
[07:36.000 --> 07:38.000]  Количество ребер минус количество вершин.
[07:38.000 --> 07:51.000]  Соответственно, это ребер будет n плюс k, давайте, минус один.
[07:51.000 --> 07:52.000]  Так?
[07:52.000 --> 07:56.000]  Поэтому разница количества ребер минус количество вершин будет k, минус один.
[07:56.000 --> 08:00.000]  Пускай это утверждение доказано, да?
[08:00.000 --> 08:04.000]  Рассмотрим.
[08:04.000 --> 08:06.000]  Любой.
[08:06.000 --> 08:09.000]  А, забыл написать.
[08:09.000 --> 08:11.000]  Больше либо равно, чем...
[08:11.000 --> 08:16.000]  Сколько у нас получается? Чем?
[08:16.000 --> 08:20.000]  Ноль получается? Да.
[08:20.000 --> 08:24.000]  Ноль.
[08:24.000 --> 08:28.000]  Потому что самое маленькое значение для вот этой разности это минус один.
[08:28.000 --> 08:34.000]  Типа вот...
[08:34.000 --> 08:36.000]  Фух, ну как?
[08:36.000 --> 08:39.000]  Нет, это количество, разность между количеством ребер и количеством вершин.
[08:39.000 --> 08:42.000]  Если вы хотите это представить, ну как?
[08:42.000 --> 08:44.000]  Я рассказывал или нет?
[08:44.000 --> 08:49.000]  В общем, у меня восемь курсов, я не могу перепутать, что я где рассказывал.
[08:49.000 --> 08:51.000]  Значит...
[08:51.000 --> 08:57.000]  Ну где-то я точно это рассказывал, что мы берем остов у связанного графа, основное дерево,
[08:57.000 --> 09:00.000]  и туда добавляем ребра.
[09:00.000 --> 09:02.000]  Ну можете так это представлять себе.
[09:02.000 --> 09:09.000]  То есть берем основное дерево, и к нему там k ребер еще докидываем.
[09:09.000 --> 09:11.000]  Вот.
[09:11.000 --> 09:15.000]  Это не здесь, наверное, да, я рассказывал.
[09:15.000 --> 09:16.000]  Вот.
[09:16.000 --> 09:21.000]  К концу семестра это уже начинает путаться в голове, перемешиваться,
[09:21.000 --> 09:27.000]  и уже я не могу запомнить, что конкретно где я рассказывал.
[09:27.000 --> 09:29.000]  Вот.
[09:29.000 --> 09:31.000]  К сожалению.
[09:31.000 --> 09:35.000]  От усталости уже в памяти все не помещается.
[09:35.000 --> 09:36.000]  Вот.
[09:36.000 --> 09:39.000]  Значит...
[09:39.000 --> 09:44.000]  А студенты, кстати, в этих сообщениях своих очень любят так делать.
[09:44.000 --> 09:49.000]  Вопросы задают по какому-то курсу и не говорят по какому.
[09:49.000 --> 09:55.000]  Блин, неужели вы не понимаете, что преподаватели не один курс ведут?
[09:55.000 --> 09:58.000]  Ну уточните, напишите, какой курс конкретно.
[09:58.000 --> 10:00.000]  У меня их восемь, блин.
[10:00.000 --> 10:02.000]  Вот.
[10:02.000 --> 10:05.000]  Значит...
[10:05.000 --> 10:08.000]  Смотрите, сбился.
[10:08.000 --> 10:10.000]  Количество ребер вот такое.
[10:10.000 --> 10:12.000]  Теперь рассмотрим любой.
[10:16.000 --> 10:18.000]  Любой.
[10:21.000 --> 10:23.000]  Связанный.
[10:25.000 --> 10:27.000]  Плоский граф.
[10:32.000 --> 10:34.000]  На N-вершинах.
[10:36.000 --> 10:38.000]  С N плюс K ребрами.
[10:40.000 --> 10:48.000]  И любую его плоскую укладку тоже рассмотрим.
[10:48.000 --> 10:50.000]  И любую ее...
[10:50.000 --> 10:52.000]  Любую.
[10:52.000 --> 10:54.000]  Его плоскую укладку.
[11:04.000 --> 11:06.000]  Вот.
[11:06.000 --> 11:08.000]  Теперь смотрите.
[11:11.000 --> 11:13.000]  Что мы делаем дальше?
[11:13.000 --> 11:15.000]  Вот.
[11:15.000 --> 11:17.000]  Где-то надо нарисовать.
[11:17.000 --> 11:19.000]  Места на рисунок нет.
[11:19.000 --> 11:21.000]  Что такое в данном случае?
[11:21.000 --> 11:24.000]  Вот грани этой самой плоской укладки.
[11:24.000 --> 11:27.000]  Я как-нибудь условно нарисую.
[11:27.000 --> 11:32.000]  Вот как-нибудь они вот так, относительно друга зацеплены.
[11:32.000 --> 11:36.000]  Вот грани плоской укладки.
[11:36.000 --> 11:38.000]  Вот есть внешняя грань.
[11:38.000 --> 11:41.000]  Здесь есть грани плоской укладки.
[11:41.000 --> 11:43.000]  Граница которой циклы.
[11:43.000 --> 11:45.000]  Ребята.
[11:46.000 --> 11:48.000]  Смотрите.
[11:48.000 --> 11:50.000]  Поскольку K больше либо равно нулю.
[11:50.000 --> 11:54.000]  Так как K больше либо равно нулю.
[11:54.000 --> 12:00.000]  То наш граф тоже не деревом.
[12:04.000 --> 12:06.000]  У него ребер больше, чем у дерева.
[12:06.000 --> 12:07.000]  Правда?
[12:07.000 --> 12:09.000]  Значит в нем есть цикл.
[12:09.000 --> 12:11.000]  Значит уже есть цикл.
[12:19.000 --> 12:21.000]  Ну что тогда?
[12:21.000 --> 12:23.000]  Тогда у нас получается вот что.
[12:23.000 --> 12:25.000]  Этот цикл ограничивает какую-то грань.
[12:25.000 --> 12:27.000]  Правда?
[12:29.000 --> 12:31.000]  Поэтому.
[12:31.000 --> 12:33.000]  Собственно говоря.
[12:33.000 --> 12:35.000]  Значит грани.
[12:37.000 --> 12:41.000]  Больше либо равно чем 2 как минимум.
[12:41.000 --> 12:45.000]  И этот цикл ограничивает какую-то грань.
[12:45.000 --> 13:01.000]  А почему за не дерево?
[13:01.000 --> 13:03.000]  Почему за не дерево?
[13:03.000 --> 13:07.000]  Потому что у нас ребер N плюс K.
[13:07.000 --> 13:09.000]  K больше либо равно нулю.
[13:09.000 --> 13:12.000]  А всегда так.
[13:12.000 --> 13:17.440]  Реберн плюс к, а в дереве н минус одно ребро.
[13:17.440 --> 13:20.120]  К больше, равно нулю, я специально это написал.
[13:20.120 --> 13:35.840]  Этот цикл ограничивает какой-то грани укладки, плоской укладки.
[13:35.840 --> 13:52.560]  Ну, значит есть раз две грани и цикл это граница одной из них, то хотя бы две
[13:52.560 --> 13:58.400]  грани, то есть ребро, которое лежит на границе, принадлежит двум граням сразу, правда?
[13:58.400 --> 14:14.720]  Значит есть ребро цикла, ребро цикла, принадлежащее двум граням сразу.
[14:14.720 --> 14:32.120]  Вот теперь удалим это ребро цикла, ну вот здесь условно вот такое вот ребро у нас есть,
[14:32.120 --> 14:36.440]  вот его срежем. Удалим это ребро.
[14:45.600 --> 14:55.520]  Тогда у нас две грани объединятся, да? Ну мы взяли просто как раз вот на границе двух
[14:55.520 --> 15:01.920]  грани ребро, срезали его, две грани объединились, количество ребер уменьшилось на один,
[15:01.920 --> 15:08.000]  количество грани тоже уменьшилось на один. Получим грамм же штрих.
[15:14.720 --> 15:34.640]  Же штрих с n вершинами, n минус k, n плюс k минус одним ребром и как же обозначить там
[15:34.640 --> 15:55.400]  количество грани? Количество грани давайте, не знаю. И если, не знаю, гамма это количество грани,
[15:55.400 --> 16:21.720]  то в плоской укладке же штрих будет гамма минус один грани.
[16:25.640 --> 16:34.920]  Правильно? Ну при этом он останется связанным. Почему собственно имеет смысл удалять ребро именно из цикла?
[16:34.920 --> 16:41.280]  Это мотивация. Ну вот почему мы выбираем ребро именно из цикла? Что бы осталась связанность,
[16:41.280 --> 16:46.760]  гарантированно. Почему ребро на границе двух грани? Чтобы грани объединились.
[16:46.760 --> 17:00.000]  Вот. Ну гамма один грани и же штрих еще связан. Ну значит же штрих можем применить
[17:00.000 --> 17:09.480]  предположение индукции. Потому что у него разность, количество ребер минус количество вершин меньше
[17:09.480 --> 17:18.040]  на единичку чем у нашего графа же. Правильно ребят? И он связан и плоский. Потому что у нас есть
[17:18.040 --> 17:40.600]  его плоская укладка. Вот. Значит по предположению индукции у нас количество вершин n минус количество
[17:40.600 --> 17:52.960]  ребер. Ой да. Все правильно. n минус n плюс k минус 1 плюс гамма минус 1 равно 2. Потому что мы
[17:52.960 --> 18:00.200]  предполагаем, что доказали это утверждение для таких графов. То есть у нас получается,
[18:00.200 --> 18:10.880]  что, обратите внимание, вот эти минус единички, ну минус минус один, еще здесь минус один, они
[18:10.880 --> 18:21.240]  сокращаются. Поэтому у нас получается n минус n минус k плюс гамма тоже равно 2. Но это для нашего
[18:21.240 --> 18:31.560]  графа уже равенство. Правда ребят? Плюс k да плюс k. А это уже для нашего графа, не для же штриха,
[18:31.560 --> 18:41.800]  а для же. То есть мы доказали то же самое равенство для нашего графа же. Вот все по индукции утверждение
[18:41.800 --> 19:01.800]  доказано. Ну вот. Собственно такое доказательство. Так. Из вот этой самой футиаремейлеры следует вот
[19:01.800 --> 19:08.040]  что. Давайте следствие выводить. Давай. Они довольно красивые. Вот часть одной из этих следствий,
[19:08.040 --> 19:19.360]  что k3,3 и k5 не плоские. Это как раз из нее из теоремы иллеры. Самые главные, самые интересные следствия,
[19:19.360 --> 19:27.720]  конечно непосредственно из этой теоремы, это такие, что в плоском графе не может быть много ребер. То
[19:27.720 --> 19:37.440]  есть количество ребер в плоском графе сильно ограничена величина. И поэтому там сразу
[19:37.440 --> 19:48.800]  возникает целая теория про так называемые числа скрещиваний. Ну раз. Понимаете в чем проблема? Раз
[19:48.800 --> 19:55.800]  в плоском графе много ребер не может, а хочется рассмотреть граф, в которых много ребер, то хочется,
[19:55.800 --> 20:02.520]  тогда приходится брать наименьшее возможное количество самопересечений по всем укладкам.
[20:02.520 --> 20:17.640]  Это называется числом скрещиваний. Там уже они отдельно изучаются. Что? Теорема о чем?
[20:17.640 --> 20:34.560]  Это теорема про что? В чем ваши вопросы? То есть подождите, если вот этот он плоский и связанный,
[20:34.560 --> 20:51.240]  ну грань определяется только для плоской укладки, поэтому и у нас для неплоской укладки граней не
[20:51.240 --> 20:57.400]  бывает. Я сразу определял это только для плоской укладки. То есть если у вас есть просто такая
[20:57.400 --> 21:01.600]  величина, как количество граней, значит сразу предполагается, что он плоский, вот что он связанный.
[21:01.600 --> 21:13.760]  Ну да, судя по всему это верно, потому что для несвязанных тут не два. Вот. Да, это тоже,
[21:13.760 --> 21:32.600]  кстати, несложно установить. Ну вот давайте, следствие 1. Если же связанный плоский грав,
[21:32.600 --> 21:45.880]  причем
[21:45.880 --> 22:14.520]  это длина самого короткого цикла уже. Длина самого короткого. Короткого. Сейчас подождите,
[22:14.520 --> 22:40.600]  самого короткого, простого цикла уже. То у нас будет вот что. Так, так, так. Количество граней.
[22:44.520 --> 23:07.720]  Меньше либо равно, чем 2 делить на t на количество ребер. Вот так. Это такое одно из следствий. Хотя
[23:07.720 --> 23:19.000]  это, наверное, не следствие. Давайте это лемма. Оно без этого доказывается. Лемма. Значит,
[23:19.000 --> 23:45.640]  смотрите. Рассмотрим любую плоскую укладку уже. И рассмотрим все грани этой самой укладки.
[23:45.640 --> 24:11.600]  Рассмотрим все грани этой укладки. Пусть там, не знаю, грани гамма-1, гамма-2, гамма-k. Не знаю,
[24:11.600 --> 24:38.560]  как-нибудь их обозначим эти грани. Пусть граница гамма-1 содержит n1 ребер. Граница гамма-2 содержит,
[24:38.560 --> 25:06.560]  там, не знаю, n2 ребер. Ну и так далее. Граница гамма-k содержит n-k ребер. Ну что тогда мы
[25:06.560 --> 25:15.560]  можем сказать, что вот эта сумма по i от единички до k, n-k-t, где вот эти n-k-t это количество ребер на границе,
[25:15.560 --> 25:26.440]  грани, что смотрите, вот это n-k-t, ну как минимум там содержится все ребра какого-то цикла. Я не утверждаю,
[25:26.440 --> 25:35.360]  что границы любой грани, это есть цикл, это неправда. Это цикл плюс деревья, которые из этого цикла
[25:35.360 --> 25:46.920]  могут расти. Ну вот как минимум там есть ребра цикла, а цикл содержит как минимум t ребер. Так,
[25:46.920 --> 25:59.360]  ребят, ну стало быть, это больше либо равно, чем t умножить на k. А вот эта сумма сверху,
[25:59.360 --> 26:11.960]  давайте ее оценим, это что будет? Просто учтем, что каждое ребро здесь максимум два раза посчитано,
[26:11.960 --> 26:27.160]  не обязательно все по два раза посчитаны. Здесь каждое ребро посчитано максимум два раза,
[26:27.320 --> 26:38.160]  поэтому это максимум удвоенное количество ребер. Ну а отчего получается количество грани,
[26:38.160 --> 26:48.040]  которое мы обозначили k, не превосходит 2 делить на t на количество ребер. Ну все утверждение доказано.
[26:48.040 --> 27:10.200]  Вот теперь следствие, если же
[27:10.200 --> 27:36.800]  связанный плоский граф с длиной минимального цикла t с длиной
[27:41.040 --> 28:09.120]  минимального цикла t, то вот та самая оценка, что ребер в плоском графе много быть не может.
[28:09.120 --> 28:22.000]  Смотрите, число ребер не превосходит t делить на t минус 2 умножить на число вершин минус 2.
[28:22.000 --> 28:32.240]  Давайте докажем.
[29:09.120 --> 29:29.000]  Значит, смотрим. Пусть g содержит n вершин, как мы использовали обозначение так для простоты,
[29:29.000 --> 29:53.920]  значит, не знаю, k ребер, s ребер и гамма грани. Ну что ж, тогда по теориям Эйлера
[29:53.920 --> 30:11.280]  у нас получается вот что. Значит, n минус s плюс гамма равно 2. С другой стороны, по лиме 1
[30:11.280 --> 30:26.680]  гамма никак не может быть больше, чем 2 делить на t на количество на n. Правда?
[30:26.680 --> 30:45.360]  Вот давайте теперь вот это оценим, n минус s. Так, то есть у нас n минус s плюс гамма, с одной
[30:45.360 --> 31:00.560]  стороны это 2, с другой стороны это не больше, чем n минус s плюс 2 делить на t на s. Так? Так,
[31:00.560 --> 31:15.440]  ну преобразуем немножко, что у нас получится. Значит, так-так-так-так, s на 1 минус 2 делить на t
[31:15.440 --> 31:34.040]  меньше либо равно, чем n минус 2, правда? Вроде так. А отсюда получается, вот, преобразовывая
[31:34.040 --> 31:44.720]  вот это, это t минус 2 делить на t. Получается как раз то, что нужно. s не превосходит t делить на t
[31:44.720 --> 32:01.120]  минус 2 делить на n минус 2, умножить на n минус 2. Вот та самая оценка, которая нам нужна. В принципе,
[32:01.120 --> 32:08.600]  можно вот эту версию использовать, а можно ее немножко ослабить. Более слабое утверждение доказать
[32:08.600 --> 32:37.160]  следствие 2. Сейчас напишу следствие 2. Если же плоский связанный граф, содержащий простой цикл,
[32:37.160 --> 32:57.560]  короче, это не про дерево, вот, содержащий простой цикл, то количество ребер в нем не превосходит
[32:57.560 --> 33:10.920]  утройного количества вершин. Минус 6. Да, ну, количество вершин, конечно, должно быть хотя бы 3.
[33:10.920 --> 33:19.640]  Единственное замечание, вершин хотя бы 3 должно быть, иначе неверно. Сейчас где это приписать?
[33:19.640 --> 33:35.480]  С количеством вершин больше либо равным чем 3. Вот. Ну да, вот как раз для этого и нужно.
[33:35.480 --> 33:48.840]  То есть, на самом деле, граф на n вершинах, если он плоский, не может содержать больше
[33:48.840 --> 33:59.120]  чем 3n минус 6 ребер, а максимум в графе цзн по 2 ребер. Правда, это сильно большая величина. То есть,
[33:59.120 --> 34:07.480]  как бы, понимаете, ограничение линейное. Поэтому, ну, как бы, если больше, этого уже точно не плоский
[34:07.480 --> 34:14.760]  граф, сразу можно сказать. И планарную укладку вы не сделаете, и поэтому там приходится рассматривать
[34:14.760 --> 34:24.240]  то, что я говорил, минимальное количество самопересечений. А просто, понимаете, в теории,
[34:24.240 --> 34:30.800]  как минимум интернета и модели интернета, интересны так называемые плотные графы. Это графы,
[34:30.800 --> 34:37.560]  в которых количество ребер сопоставимо с n квадрат, а симпатически равно n квадрат,
[34:37.560 --> 34:43.400]  constant n квадрат. То есть, они заведомо уже не плоские никак, никаким образом. И там,
[34:43.400 --> 34:48.440]  поэтому, приходится вот какие-то вот такие величины рассматривать. Вот,
[34:48.440 --> 34:53.880]  ну, давайте докажем это в следствии о 2, а потом выведем как раз, что карты 3 и 5 не плоские.
[35:07.560 --> 35:21.600]  Ну да, вот эту штуку надо оценить. То есть, вот взять следствие 1 наше, вон оно,
[35:21.600 --> 35:28.960]  формулировка вон на той доске, и оценить вот эту вот величину, просто доказательство.
[35:28.960 --> 35:38.600]  Да, это более слабо, но потому что мы должны доказать, что для всех t больше
[35:38.600 --> 35:44.600]  либо равно 3, вот это больше, это самое, самое маленькое, подожди, самое большое значение для
[35:44.600 --> 35:54.360]  этого это 3. Вот, самое большое. То есть, надо доказать, рассмотрим согласно следствию 1.
[35:54.360 --> 36:14.760]  Согласно следствию 1, количество ребер меньше либо равно, чем t на t-2 на количество вершин
[36:14.760 --> 36:38.160]  t-2. Вот, осталось доказать, что для любого t больше либо равно от 3, t на t-2 не превосходит тех
[36:38.160 --> 36:45.120]  же самых трех. Вот, ну давайте, можно непосредственно решать t больше либо равно,
[36:45.120 --> 36:53.640]  значит, знаменатель положитель. Попытаемся, собственно, проверить это неравенство. То есть,
[36:53.640 --> 37:05.400]  как делаем? Вопрос. Тогда и только тогда, когда t больше либо равно 3, тогда и только тогда,
[37:05.400 --> 37:16.200]  когда t меньше либо равно, чем 3t-6, отсюда получается, что это равносильно чему? Тому,
[37:16.200 --> 37:22.680]  что t больше либо равно 3. То есть, при t больше либо равно 3, у нас получается это меньше либо
[37:22.680 --> 37:29.240]  равно 3. Можно так, а можно, понимаете, как еще раз, еще один способ, но чуть более замороченный,
[37:29.240 --> 37:39.360]  но тем не менее. Ну, если бы я, вот когда студентом, я бы доказывал, но у нас просто не было этого. Ну,
[37:39.360 --> 37:46.600]  и не помню такой материал, по крайней мере. Вот, потом пересматриваешь конспекты. Оказывается,
[37:46.600 --> 37:51.560]  ты не помнишь какие-то вещи, которые тебе уже рассказывали, а сейчас снова приходится их
[37:51.560 --> 38:01.360]  изучать. Вот. Но, тем не менее, не помню такого материала, как бы я доказывал, но вот я бы
[38:01.360 --> 38:11.160]  просто посмотрел, где возрастает и бывает вот эта штука. Производную берем. У нас получается t-2
[38:11.160 --> 38:23.320]  минус t. Делить на t-2 в квадрате. Производная у них простая. Это минус 2 делить на t-2 в квадрате.
[38:23.320 --> 38:33.520]  То бишь, эта штука для t больше либо равно 3, убывающая. Так? А значит, для t равно и 3,
[38:33.520 --> 38:39.400]  у нас самое большое значение имеет, если на интервале от 3 до плюс биска, естественно,
[38:39.880 --> 38:47.920]  самое большое значение тройка, если 30 сюда подставить. Поняли? Можно так, типа просто
[38:47.920 --> 39:05.280]  проанализировать саму функцию. Ну вот, ну все. Все. Утверждение доказано. Вот. Все
[39:05.280 --> 39:19.920]  получалось. Так, ну давайте дальше. Ну давайте, утверждение. Каторе 3 и К5 неплоские игры,
[39:19.920 --> 39:29.120]  непланарные. Помните, мы там все эквивалентности доказывали, но там везде висело вот это утверждение,
[39:29.520 --> 39:37.440]  как бы, не доказано, что они непланарные. Вот давайте сейчас докажем. Значит, смотрите,
[39:37.440 --> 39:56.480]  ну если я, давайте Каторе 3. Если Каторе 3 планарен, то по формуле Эйлера,
[39:56.480 --> 40:05.840]  хотя нет, здесь не надо формулы Эйлера, здесь надо вот эту вот формулу, следствие 1,
[40:05.840 --> 40:13.800]  последствие 1. Ну это же связанный граф Каторе 3 связи и плоский. Значит, там это утверждение
[40:13.800 --> 40:31.040]  верно. Следствие 1. Количество ребер в Каторе 3 не превосходит t делить на 3 минус 2 на количество
[40:31.040 --> 40:40.200]  вершин минус 2. Давайте подставлять параметры и смотреть. Количество ребер в Каторе 3.
[40:40.200 --> 41:07.440]  9, правильно. Количество вершин 6. Длина самого короткого цикла 3. Там треугольник есть Каторе 3?
[41:07.440 --> 41:16.440]  4. Нечетных циклов в двудольных графах не бывает. Угадайте почему. Потому что каждый цикл он скачет
[41:16.440 --> 41:21.520]  между долями, правда? То есть если он нечетное количество шагов сделает, то он вернутся в ту же
[41:21.520 --> 41:29.480]  долю, из которой вышел и поэтому не замкнется. Нечетно. Это одни из таких главных графов, у которых
[41:29.480 --> 41:36.760]  нет циклов нечетной длины. Кстати, это критерии двудольности графа, если что, ребят. У вас, может,
[41:36.760 --> 41:42.840]  на семинарах что-то такое? Критерии двудольности графа. Граф двудолен тогда и только тогда,
[41:42.840 --> 41:55.480]  когда в нем нет циклов нечетной длины. Вот. Значит, здесь 4. Ну, давайте. Т равно 4. Подставим. 9.
[41:55.480 --> 42:08.560]  Должно быть меньше либо равно, чем 4 делить на 2. Минус 4. Восемь пополам получается 4. То есть
[42:08.560 --> 42:27.680]  9 меньше либо равно 4. Сразу противоречие. Плохо. Все. Ну, то есть неравенство вот это,
[42:27.680 --> 42:40.920]  которое было бы верно, если бы граф был плоским, не выполнено. Поэтому все. Теперь копять. Тоже
[42:40.920 --> 43:05.360]  самое давайте проделаем. Копять. Количество ребер.
[43:05.360 --> 43:28.280]  Есть с из 5 по 2, то есть 5 на 4 пополам 10. Количество вершин 5. Длина критичного цикла 3, да.
[43:28.280 --> 43:40.560]  Опять подставляем. Значит, 10 должно быть меньше либо равно, чем 3 делить на 1 умножить на 5,
[43:40.560 --> 43:55.800]  минус 2. То есть 10 меньше либо равно 9. Противоречие 5. Все. Подожди. Доказано.
[43:55.800 --> 44:17.560]  Ну что? Вот это часть про планарность, которую я хотел рассказать. Теперь начнем с эйлер-востем.
[44:17.560 --> 44:31.360]  У нас 40 минут. Эйлер-вость. Наверное тогда со следующей лекции как раз о гамильтоновости
[44:31.360 --> 44:39.760]  приступим. Это побольше темы. Эйлер-вость простая тема. Там хорошие алгоритмы есть, все работает.
[44:39.760 --> 44:53.320]  Я сказал, что мы эквивалентность докажем. Докажем вот что не планарный, который 3к5,
[44:53.320 --> 45:04.040]  а что сам критерийный. Нет, не будем доказывать. Там топология некая. Обычно это если рассказывают
[45:04.040 --> 45:11.760]  на каких-то продвинутых курсах по теории графов, если честно. Причем не университетских,
[45:11.760 --> 45:19.040]  а каких-то даже факультативных на выбор. Потому что факультетские, я так понимаю,
[45:19.040 --> 45:29.920]  они не помещаются по объему курса что ли. Это как я в каких-то продвинутых курсах для магистров
[45:29.920 --> 45:35.560]  читаю. Там продвинутые вещи нужно рассказывать. Я рассказываю то, что мне интересно. Некоторым
[45:35.560 --> 45:42.600]  интересны такие продвинутые теоремы, которые мне интересны. Некоторым интересны вот эта
[45:42.600 --> 45:54.760]  патрагина Куротовского и не доказывают. Значит смотрите. Эйлер-вость.
[45:59.920 --> 46:09.400]  Сбился. Теперь смотрите определение. Цикл называется Эйлер-вость.
[46:09.400 --> 46:29.840]  Если этот цикл проходит все ребрографы по одному разу. Вот так вот этот цикл
[46:29.840 --> 46:43.160]  проходит. То, что мы здесь докажем. Так и сейчас. Ладно. Вся определение. Проходит
[46:43.160 --> 47:06.120]  все ребрографы по одному рату.
[47:06.120 --> 47:35.800]  Граф называется Эйлер-Он. Граф. Ж называется Эйлер-Он, если Ж связан и содержит Эйлер-офф
[47:35.800 --> 47:53.680]  цикл. Вот так. Это кстати очень важное замечание. Не забывайте про связанность. Если вы упустите,
[47:53.680 --> 48:00.440]  то вы получите класс немножко других Эйлер-офф графов, которые могут быть не связанными,
[48:00.440 --> 48:14.000]  но содержать при этом Эйлер-офф цикл. Такие бывают. Вот такой граф не связан и содержит
[48:14.000 --> 48:17.640]  Эйлер-офф цикл. Вы можете количество изолированных этих вершин добавлять,
[48:17.640 --> 48:27.320]  сколько вам влезет, он останется если забыть про связанность с Эйлер-овым. То есть из того,
[48:27.400 --> 48:34.840]  что есть Эйлер-офф цикл, не следует связанность вообще. Может оказаться наличие изолированных
[48:34.840 --> 48:48.320]  вершин. Это не помешает тому, что у нас останется Эйлер-офф цикл. Поэтому я сразу говорю Ж связан.
[48:48.320 --> 48:56.480]  Но я излагаю по книжке Харары теорию графа, который я выложил у вас в материалах. Харары
[48:56.560 --> 49:02.960]  считает, что граф не может быть Эйлер-офф, если он не связан. Хотя некоторые, в Википедии можете
[49:02.960 --> 49:08.440]  статью почитать, там они называют Эйлер-офф граф, просто который содержит Эйлер-офф цикл. Не
[49:08.440 --> 49:11.800]  излагайте по Википедии. Немного разной терминологии.
[49:38.440 --> 49:54.360]  Так. Критерии Эйлер-ости давайте. Теорияма два. Критерии Эйлер-ости.
[49:54.360 --> 50:20.040]  Смотрите. Граф Ж. Эйлер-офф. Связанный граф Ж. Вот так давайте. Для связанного графа Ж,
[50:20.040 --> 50:24.040]  сразу же хотел так. Для связанного графа Ж
[50:24.040 --> 50:46.160]  эквивалентны следующие условия. То есть сразу говорю, вот тут по умолчанию везде предполагается,
[50:46.160 --> 51:05.560]  что граф связан. Первое. Ж содержит Эйлер-офф цикл. Второе. Множество ребер Ж
[51:05.560 --> 51:25.080]  разбивается на попарно не пересекающиеся по ребрам простые циклы. На попарно не пересекающиеся
[51:25.080 --> 51:53.320]  по ребрам простые циклы. Сейчас понятно вот эта формулировка? То есть эти простые циклы могут
[51:53.320 --> 52:00.120]  пересекаться по вершинам. И они должны пересекаться по вершинам, потому что граф связан. Но они по ребрам
[52:00.120 --> 52:23.240]  не должны пересекаться. Три. Все степени всех вершин уже четны. Вот три штуки эквивалента.
[52:23.240 --> 52:31.240]  Не предупреждаю. Ни за одной из этих штук по отдельности не следует связанности Ж. Тоже самое
[52:31.240 --> 52:38.520]  может выполняться для несвязанного графа. Поэтому связанность предполагается изначально, она везде
[52:38.520 --> 52:51.800]  должна быть здесь верно. Поняли? Хорошо. Так, давайте в таком порядке докажем. Три следует два,
[52:51.800 --> 53:00.200]  потом два следует один, а потом один следует три. Так, мы знаем, что степени всех вершин четны.
[53:00.200 --> 53:27.880]  Степени всех вершин же четны. Ну что тогда? Тогда же не дерево. Понимаете почему? Потому что нет
[53:27.880 --> 53:37.720]  листьев. В дереве мы доказывали, обязательно имеется лист. А если степени всех вершин четны,
[53:37.720 --> 53:52.840]  то листьев нет. Поэтому же не дерево. Не дерево, так как нет листьев. Так как уже нет листьев.
[53:52.840 --> 54:10.560]  Вот. Ну отсюда получается, что уже есть цикл, раз оно не дерево. Значит же есть простой цикл.
[54:10.560 --> 54:31.440]  Удаляем ребра этого простого цикла. Удаляем ребра этого простого цикла.
[54:40.560 --> 54:56.320]  Правда? Тогда, если беда небольшая, уже может потерять связанность. Ну вот, удалим цикл. Он
[54:56.320 --> 55:02.320]  был связан, а после удаления он перестает быть связанным. Что с этим делать? Ну то есть, смотрите,
[55:02.320 --> 55:08.800]  при удалении ребра цикла, степени вершин всех, которые участвуют в цикле, проседают на два. Так?
[55:08.800 --> 55:16.120]  А с той степени всех, всех, всех, всех остальных вершин не меняются. То есть он остается с тем
[55:16.120 --> 55:22.720]  же, с тем же самым свойством графа, что у него все степени вершин четные. Но он может потерять
[55:22.720 --> 55:32.640]  связанность при этом. Что с этим будем делать? Да, нужно рассмотреть каждый компонент связанности по
[55:32.640 --> 55:46.640]  отдельности, который образовалось. Получим граф же штрих, в котором все степени вершин четны.
[55:46.640 --> 55:52.840]  Все степени вершин четны.
[56:03.620 --> 56:08.840]  Смотрите. Тогда каждая компонента связанности, которая не является изолированной вершиной...
[56:08.840 --> 56:19.720]  Ну, изолированная вершина рассматривать не имеет смысла. Значит, тогда каждая компонента связанности,
[56:19.720 --> 56:27.240]  которая не является изолированной вершиной, ни дерева… значит, там тоже есть цикл простой. Опять
[56:27.240 --> 56:30.640]  Удаляем ребра этого цикла и так продолжаем до тех
[56:30.640 --> 56:32.120]  пор, пока остались ребра.
[56:32.120 --> 56:39.000]  Поняли, да, каким образом мы разбиваем все ребра
[56:39.000 --> 56:42.760]  на не пересекать по ребрам цикла.
[56:42.760 --> 57:00.280]  В каждой компоненте связанности же штрих, не являющейся
[57:00.280 --> 57:04.800]  изолированной вершины, так сюда, наверное, куда я
[57:04.800 --> 57:34.240]  писал, вот туда, не являющейся изолированной вершины.
[57:34.240 --> 57:50.800]  Причем новые циклы.
[57:50.800 --> 57:53.200]  Продолжаем до тех пор, пока остались ребра, пока есть
[57:53.200 --> 57:54.200]  ребра.
[57:54.200 --> 58:20.080]  Все, собственно, утверждение доказано.
[58:20.080 --> 58:21.920]  Два-три, ой, два-один.
[58:21.920 --> 58:28.000]  То есть, у нас граф связан и множество ребер разбито
[58:28.000 --> 58:31.280]  на по парне пересекающие по ребрам простые циклы.
[58:31.280 --> 58:37.640]  Тогда есть иллеров цикл, утверждение, так?
[58:37.640 --> 58:41.000]  Ну как это сделать, смотрите, давайте чисто формально
[58:41.000 --> 58:42.000]  изложу.
[58:42.080 --> 58:51.800]  Это формально излагается так, индукция по количеству
[58:51.800 --> 58:52.800]  циклов разбиения.
[58:52.800 --> 59:08.040]  Индукция по количеству циклов в разбиении.
[59:08.040 --> 59:27.920]  Ну база, давайте, в разбиении один цикл.
[59:27.920 --> 59:40.440]  Но он и есть тогда иллеров цикл, правда, если так уж
[59:40.440 --> 59:42.880]  повезло нам?
[59:42.880 --> 59:44.680]  Он и есть иллеров цикл.
[59:44.680 --> 59:45.680]  Переход.
[59:45.680 --> 01:00:09.440]  Да, вопрос какой-то.
[01:00:09.440 --> 01:00:10.440]  Один цикл.
[01:00:10.440 --> 01:00:33.880]  Ну, смотрите, пускай доказано для кациклов, пусть утверждение
[01:00:33.880 --> 01:00:58.360]  связано для любого связанного графа, множество ребер которого
[01:00:58.360 --> 01:01:21.640]  разбивается на кациклов.
[01:01:21.640 --> 01:01:28.000]  К больше либо равно, чем один.
[01:01:28.000 --> 01:01:43.960]  Рассмотрим любое гравже, содержащие К плюс один цикл,
[01:01:43.960 --> 01:01:46.400]  ну, любое связанное гравже.
[01:01:46.400 --> 01:02:08.680]  Рёбра которого
[01:02:08.680 --> 01:02:10.560]  разбивается на К плюс один цикл.
[01:02:10.560 --> 01:02:26.840]  Делаем вот что, так, вот туда наверное придётся
[01:02:26.840 --> 01:02:27.840]  перенестись.
[01:02:27.840 --> 01:02:40.200]  Ну да, я не хочу удлинять эти формулировки, конечно,
[01:02:40.200 --> 01:02:42.840]  здесь вот, предполагается, парни пересекаются по
[01:02:42.840 --> 01:02:43.840]  ребрам, конечно же.
[01:02:43.840 --> 01:02:55.840]  Так, вот здесь рисунок надо сделать.
[01:02:55.840 --> 01:03:01.840]  Ну, сначала вот что, рассмотрим любой цикл от этого разбиения,
[01:03:01.840 --> 01:03:20.600]  удалим его ребра.
[01:03:20.600 --> 01:03:35.600]  Что тогда?
[01:03:35.600 --> 01:03:37.840]  Тогда у нас получается вот такая картинка, сейчас
[01:03:37.840 --> 01:03:39.840]  я вам её попытаюсь изобразить.
[01:03:39.840 --> 01:03:48.640]  Граф при всём этом великолепии может потерять связанность,
[01:03:49.640 --> 01:03:56.280]  мы не застрахованы от этого, вот, поэтому у нас образуется
[01:03:56.280 --> 01:03:59.080]  какое-то количество компонент связанности после удаления
[01:03:59.080 --> 01:04:03.640]  ребра цикла, в которых, ребра которых также разбивается
[01:04:03.640 --> 01:04:07.320]  на, ну, связанные компоненты, тоже у них у ребра разбитанные
[01:04:07.320 --> 01:04:11.000]  пересекаются по ребрам цикла, то есть, по предположению
[01:04:11.000 --> 01:04:14.000]  индукции, в каждой компоненте связанности можно создать
[01:04:14.000 --> 01:04:17.800]  эйлеров цикл, правильно, ребята?
[01:04:17.960 --> 01:04:20.600]  Вот у нас есть компонент связанности, который цепляет
[01:04:20.600 --> 01:04:22.200]  как-то та.
[01:04:22.200 --> 01:04:24.360]  Вот здесь мы эйлеров цикл сделали.
[01:04:24.360 --> 01:04:27.080]  Потом вот так, здесь цепляет.
[01:04:27.080 --> 01:04:29.880]  То есть, смотрите, эти компоненты связанности fighting
[01:04:29.880 --> 01:04:32.240]  эйлеров циклы обязательно должны каким-то образом
[01:04:32.240 --> 01:04:36.520]  пересекать наш вот этот цикл, который мы удалили.
[01:04:36.520 --> 01:04:39.200]  Ну, иначе граф не связан.
[01:04:39.200 --> 01:04:41.360]  По условию граф связан.
[01:04:41.360 --> 01:04:44.780]  Вот здесь какая-то компонента связанности у нас образовалась,
[01:04:44.780 --> 01:04:46.360]  мы сделали из неё эйлеров цикл.
[01:04:46.360 --> 01:04:51.560]  красивый цикл рисую но обратите внимание или ров цикл не обязан быть простым циклом вообще
[01:04:51.560 --> 01:04:58.600]  говоря он не является простым циклом понимаете он там может у нём повторяется вершина степени d
[01:04:58.600 --> 01:05:08.040]  сколько до пополам раз правда вершина степени 4 2 раза должно повториться вершина степени 6
[01:05:08.040 --> 01:05:14.000]  три раза должна повториться он сложный цикл как раз таки один из таких примеров сложных циклов
[01:05:14.000 --> 01:05:18.280]  простым он вообще говоря не является. То есть я такие красивые картинки рисую,
[01:05:18.280 --> 01:05:23.480]  потому что не могу нарисовать какую-то такую замороченную картинку,
[01:05:23.480 --> 01:05:30.040]  которая и обычной Эйлеров циклы является. А дальше делаем вот как.
[01:05:30.040 --> 01:05:37.040]  Стартуем с любой вершинкой, двигаемся по циклу в любом направлении.
[01:05:37.040 --> 01:05:42.560]  Встречаем первую вершинку, которая общая с уже построенным Эйлеровым циклом.
[01:05:42.560 --> 01:05:51.200]  Так, ребят. Самую первую, которую встретили. Сначала двигаемся по Эйлерову циклу,
[01:05:51.200 --> 01:05:58.840]  возвращаемся к изначальной вершинке, откуда вы стартовали. Продолжаем вот по этому циклу
[01:05:58.840 --> 01:06:08.160]  двигаться. То есть вот так, потом дальше вот так. Встречаем первую вершинку, уходим в цикл,
[01:06:08.160 --> 01:06:19.600]  возвращаемся, продолжаем. Поняли? Ну это ребра, цикл ребра, которого мы удалили.
[01:06:19.600 --> 01:06:31.840]  Ну мы развернули его. Мы удалили предположение индукции, применили,
[01:06:31.840 --> 01:06:39.160]  а потом возвращаем этот цикл. Начинаем по нему двигаться и вклеивать все образовавшиеся
[01:06:39.160 --> 01:06:46.520]  Эйлерово циклы, к нему подклеивать вот таким вот образом. Поняли? Ребят. То есть вот так к
[01:06:46.520 --> 01:06:57.400]  нему подклеиваем, к этому циклу. Все эти образованные Эйлерово циклы, получаем новый Эйлеров.
[01:06:57.400 --> 01:07:15.800]  Поняли? Просто проще изобразить вот на картинке, то есть как это действует. То есть у нас стартуем,
[01:07:15.800 --> 01:07:22.560]  вот возвращаем, удаляем ребра еще раз, делаем Эйлерово циклы на каждой компоненте связанности,
[01:07:22.560 --> 01:07:31.520]  которая не одна вершина. Потом возвращаем наш цикл. У нас получается один простой цикл и еще
[01:07:31.520 --> 01:07:40.920]  куча Эйлерово, которые его цепляют. Так? И теперь из этого делаем один большой Эйлеров цикл. Так,
[01:07:40.920 --> 01:07:47.600]  двигаемся по простому циклу до тех пор, пока не встретим первую вершинку общую с этого цикла и
[01:07:47.600 --> 01:07:53.360]  Эйлерового. Как только встречаем, двигаемся по Эйлерову циклу до тех пор, пока не вернемся в
[01:07:53.360 --> 01:07:59.200]  начало, откуда стартовали. Потом двигаемся дальше по простому циклу. И так, пока как бы встречаем
[01:07:59.200 --> 01:08:07.000]  все Эйлерово циклы, которые мы еще не прошли, проходим мы их сначала, потом дальше. Ну и так
[01:08:07.000 --> 01:08:15.080]  далее. Поняли, да? Таким образом в итоге мы достроим Эйлеров цикл в целом весь.
[01:08:15.080 --> 01:08:39.440]  Да, сколько у нас там? 15 минут, да. Да, 15 минут. 12, да, у нас. Так, ну что ж. Ну и 1, 2, 1, 3 осталось, да, наверное.
[01:08:39.440 --> 01:08:56.320]  1, 3. То есть есть Эйлеров цикл в степени всех вершин четные. Как доказать? Это уже совсем
[01:08:56.320 --> 01:09:07.880]  просто. В каждую вершину по какому-то ребру Эйлеров цикл входит и по какому-то ребру из
[01:09:07.880 --> 01:09:19.840]  этой вершины он выходит. И ребра он повторять не может, поэтому он просто использует по очереди,
[01:09:19.840 --> 01:09:30.320]  он должен использовать все ребра, во-вторых, каждое пройти по одному разу. Поэтому он каждую вершину,
[01:09:30.800 --> 01:09:36.140]  каждую вершину он по какому-то ребру войдет, как по кому-то выйдет, и вот так сделает,
[01:09:36.140 --> 01:09:42.960]  да пополам раз. И ребр не должно остаться после этого. Значит степень каждой вершины четная.
[01:09:42.960 --> 01:09:50.760]  Да, степень каждой вершины четная.
[01:10:01.200 --> 01:10:14.600]  Так как каждый Эйлеров цикл не повторяет ребр
[01:10:14.600 --> 01:10:36.320]  и по какому-то ребру входит вершина,
[01:10:36.320 --> 01:10:44.800]  по какому-то с другому ребру выходит.
[01:10:44.800 --> 01:11:14.320]  При нечетной степени он не сможет использовать все ребра. При нечетной степени в степени
[01:11:14.320 --> 01:11:27.600]  вершины, вершины он не сможет использовать все ребра.
[01:11:27.600 --> 01:11:46.960]  Ну что ж, мы доказали три эквивалентных утверждения для связного графа.
[01:11:46.960 --> 01:11:59.960]  Все. Ну и кстати показал, как, по крайней мере, на уровне доказательства, как доказывается,
[01:11:59.960 --> 01:12:07.380]  что если степени четные, то у нас есть Эйлеров цикл. Вот таким вот образом сначала мы разбиваем
[01:12:07.380 --> 01:12:13.200]  на простые циклы, не пересекаясь, потом их склеиваем, условно говоря, друг к другу подклеиваем
[01:12:13.200 --> 01:12:27.640]  в один Эйлеров цикл. Что ж, что еще тут про Эйлеровость вам рассказать?
[01:12:27.640 --> 01:12:37.080]  Что я хотел еще рассказать? А, алгоритм построения Эйлерового цикла, алгоритм.
[01:12:37.080 --> 01:12:59.160]  Ну, то, собственно, проверить, что в графе есть Эйлеров цикл просто, как выясняется.
[01:12:59.160 --> 01:13:06.080]  Да, единственное, надо проверять связность и четность всех вершин. Четность степеней всех вершин.
[01:13:06.080 --> 01:13:12.640]  Если это есть, то есть Эйлеров цикл. Вопрос, вот, предположим, мы бы выяснили, что Эйлеров цикл есть,
[01:13:12.640 --> 01:13:25.400]  а как его найти? Как вы думаете? Вот чисто алгоритмически давайте. Ну, к сожалению,
[01:13:25.400 --> 01:13:30.560]  вы тогда, возможно, не построите Эйлеров цикл. Это правильный подход, но вы можете
[01:13:30.680 --> 01:13:46.760]  не зациклиться раньше, чем закройте все ребра. Ну, примерно так это и работает вообще. Тут нужно
[01:13:46.760 --> 01:13:51.520]  алгоритм выбора, просто вот это ребро, по которому мы идем, немножко модифицировать. Это называется
[01:13:51.520 --> 01:14:15.880]  алгоритм флири. Значит, он работает следующим образом. Алгоритм старт. Значит, выбираем любую
[01:14:15.880 --> 01:14:29.240]  любую вершину. Любую вершину. Двигаемся по любому ребру.
[01:14:29.240 --> 01:14:54.160]  Ну, это старт. Дальше. Дальше. Делаем вот как. Пройденное ребро удаляем. Все правильно
[01:14:54.160 --> 01:15:18.000]  говорите. Пройденное ребро удаляем. Какую проверку на каждом шаге следующим нужно сделать?
[01:15:18.000 --> 01:15:37.640]  Да, но чуть-чуть посторожнее. Смотрите, да, все правильно говорите. Нужно определить понятие
[01:15:37.640 --> 01:15:45.600]  моста. Мост это ребро, удаление которого приводит к потере связности. То есть до этого граф был
[01:15:45.600 --> 01:15:53.680]  связан. После удаления этого ребра он перестает быть связанным. В начале мост не может возникнуть
[01:15:53.680 --> 01:16:00.880]  в принципе, потому что степени всех вершин четные. У нас есть альтернативный маршрут. Поэтому
[01:16:00.880 --> 01:16:09.040]  стартовать мы можем двигаясь по любому ребру в принципе. А вот дальше нужно проверять уже. Вот
[01:16:09.040 --> 01:16:15.840]  и вы хотите пройти по какому-то ребру? Является ли это ребро мостом? Если оно является мостом,
[01:16:15.840 --> 01:16:25.600]  то мы по нему сейчас не идем. А идем по какому-то ребру, который мостом не является. И когда мы
[01:16:25.600 --> 01:16:36.680]  пройдем по мосту? Вопрос. Когда других ребер не останется? Мост сжигается в самую последнюю
[01:16:36.680 --> 01:16:50.880]  очередь. И таким вот образом на самом деле построится именно Эллеров цикл. Далее. Выбирается
[01:16:50.880 --> 01:17:12.960]  любое ребро и проверяется, является ли оно мостом.
[01:17:12.960 --> 01:17:33.000]  Мост это ребро, удаление которого приводит к потере связности. То есть ребром, удаление которого
[01:17:33.000 --> 01:17:45.320]  из компонента связности приводит к потере ее связности. Ну я почему говорю так аккуратно
[01:17:45.320 --> 01:17:53.480]  из компонента связности? Мы же начинаем рубить эти самые ребра. И так или иначе, на каком-то шаге
[01:17:53.480 --> 01:17:59.400]  граф точно потеряет связность. По крайней мере там должно образоваться масса изолированных вершин.
[01:17:59.400 --> 01:18:20.600]  То есть поэтому я говорю про компоненты связности. Приводит к распадению этой компонент связанности
[01:18:20.600 --> 01:18:37.960]  на несколько других. Приводит к распадению этой компоненты связанности.
[01:18:50.600 --> 01:19:02.200]  На две другие. На там две образуются. Вот. Ну то есть что такое мост? Вот у нас вот есть компоненты
[01:19:02.200 --> 01:19:09.800]  связанности. Вот есть ребро. Есть вторая компонент связанности. Удаление моста приводит к тому,
[01:19:09.800 --> 01:19:18.320]  что компоненты связанности перестают быть одной компонент связанности. Поняли? Вот.
[01:19:18.320 --> 01:19:37.520]  Является ли оно мостом? Если да, то ищем ребро, которое мостом не является. Ищем
[01:19:37.520 --> 01:20:04.680]  другое ребро, по которому можем пройти. По которому можем пройти. Которое ребро
[01:20:04.680 --> 01:20:23.440]  мостом не является. Не всегда найдется. Если нет такого ребра, то двигаемся по мосту. Если такое
[01:20:23.440 --> 01:20:51.880]  есть, то двигаемся по нему. То двигаемся по нему. Если такого нет, то просто двигаемся по мосту.
[01:20:51.880 --> 01:21:12.160]  Если нет, то двигаемся по мосту. Мост несколько мостов. Случайно, да. Как один мост может быть,
[01:21:12.160 --> 01:21:34.360]  все остальные как бы внутрь ведут, правда? Ну, смотрите. Ну, по-любому из мостов правильно,
[01:21:34.360 --> 01:21:40.040]  все правильно говорите. Такое может казаться по-любому из мостов в таком случае. Хотя нет,
[01:21:40.040 --> 01:22:01.360]  хотя нет. Сейчас двигаемся по мосту. Сейчас запишу. Критерия остановки. Кончились ребра.
[01:22:10.040 --> 01:22:25.080]  Ну, некуда идти. Давайте так запишем. Идти дальше. Все. Все пройденные ребра удаляются,
[01:22:25.080 --> 01:22:32.920]  как я говорил. Вот. Давайте подумаем. Самый алгоритм я изложил. То, что он строит именно
[01:22:32.920 --> 01:22:38.520]  Эйлеров цикл. Докажем в следующий раз. Начнем с этого. Это вот то, что я про Эйлерова хотел
[01:22:38.520 --> 01:22:46.520]  рассказать. Потом начнем с Гомельто новости. Или до Брюйна вам рассказать, что ли. Господи.
[01:22:46.520 --> 01:22:58.080]  Не может быть в том-то и дело. Как доказать?
[01:23:08.640 --> 01:23:14.120]  Ну, по идее, да, если у нас условно два моста, то эти-то компоненты связанности должны тоже
[01:23:14.120 --> 01:23:30.320]  быть соединены. В одну или нет. Подождите. Так. А, может быть. Вот у нас компоненты связанности.
[01:23:30.320 --> 01:23:55.520]  Может вот так оказаться. Ну, по-любому из них идти. Все. А, тут, наверное, четность какая-нибудь
[01:23:55.520 --> 01:24:12.120]  нарушается. Да, я как-то сейчас нужно подумать. Ну, в общем, давайте я подумаю. Что по идее. Да,
[01:24:12.120 --> 01:24:15.120]  здесь должно быть две вершины с ничетной степенью.
