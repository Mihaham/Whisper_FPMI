[00:00.000 --> 00:13.240]  Возвращаемся к кэшам, очень простая схема, мы сохраняем
[00:13.240 --> 00:16.640]  в памяти результаты вычислений для того, чтобы не вычислять
[00:16.640 --> 00:17.640]  еще раз.
[00:17.640 --> 00:20.640]  Мы уже пришли к вам, с вами к тому, что у нас не просто
[00:20.640 --> 00:26.520]  ключ значения, а ключ, а там какое-то махровое, какой-то
[00:27.080 --> 00:30.840]  массивчик или хэшик, и там куча различных флагов,
[00:30.840 --> 00:33.320]  еще что-то, еще что-то, и в том числе значений.
[00:33.320 --> 00:35.680]  В эти флаги мы складываем информацию о том, а вдруг
[00:35.680 --> 00:39.760]  мы сейчас что-то пересчитываем, а вдруг мы там что-то еще,
[00:39.760 --> 00:43.960]  дата до какого числа это значение актуальное, ну
[00:43.960 --> 00:47.600]  то есть куча различной информации служебной, да, то есть
[00:47.600 --> 00:54.040]  это уже не просто, это массивчик, массивчик или хэшик, вы
[00:54.040 --> 01:01.040]  же знаете все эти примитивные, да, массив, хэш, окей, проблема,
[01:01.040 --> 01:07.120]  с которой мы ушли в прошлый раз, эти значения в кэше
[01:07.120 --> 01:13.440]  оказались вдруг взаимозависимы, ну то есть, например, хэш,
[01:13.440 --> 01:19.080]  ключ кэш, главная страница может включать в себя несколько
[01:19.080 --> 01:21.840]  других кэшей, а те могут включать в себя еще несколько
[01:21.840 --> 01:24.040]  кэшей, а те могут включать в себя еще несколько кэшей,
[01:24.040 --> 01:27.160]  то есть зависит, да, то есть вот главная страница,
[01:27.160 --> 01:30.040]  здесь у нас там, не знаю, логотип, там, не знаю, последние
[01:30.040 --> 01:35.200]  новости, погода, новости спорта, да, и вот это вот
[01:35.200 --> 01:40.000]  один кэш, вот этот другой кэш, это третий кэш, третий
[01:40.000 --> 01:45.720]  кусочек кэша, да, а главная страница это вот тоже запись
[01:45.720 --> 01:50.320]  в кэше, а вот этот спорт, например, он зависит там,
[01:50.960 --> 01:53.600]  не знаю, от списка последних новостей в спорте и так
[01:53.600 --> 02:00.480]  далее, и вот у нас, новости спорта..
[02:00.480 --> 02:06.400]  и мы должны сбросить вот это, вот это, вот это и
[02:06.400 --> 02:10.200]  так далее, то есть мы должны сбросить целый куст данных,
[02:10.200 --> 02:13.880]  когда пришла одна маленькая, блин, новость спорта.
[02:13.880 --> 02:20.080]  Вопрос, к которому вы ушли на наши затянувшиеся выходные,
[02:20.080 --> 02:28.480]  это сделать? Как вот эту взаимосвязь отследить? Где ее хранить? Как нам запомнить о том, что при
[02:28.480 --> 02:33.200]  приходе новой новости спорта мы должны сбросить какое-то количество кэшей?
[02:33.200 --> 02:51.520]  Ну то есть ты представляешь, это означает, что когда ты будешь кэшировать главную страницу,
[02:51.520 --> 02:56.120]  программисту нужно знать обо всем, что у него там внутри под ним лежит.
[02:56.120 --> 03:12.960]  Вот она пока еще нигде не просматривается. А давай я тебе усложню задачу. Не просто спорты
[03:12.960 --> 03:24.040]  новости, а программист новостного раздела принимает решение, что мы теперь к новости
[03:24.040 --> 03:33.800]  подвязываем спортсмена. То есть меняется какой-то кусочек вот здесь, внизу, вот здесь, об этом не знаю.
[03:33.800 --> 03:53.040]  Ну то есть хранить некое дерево зависимости. Окей, первый вариант. Мы храним дерево зависимости,
[03:53.800 --> 04:01.040]  то есть каким-то образом это нужно придумать, как мы вот это все деревце отсюда сюда сюда,
[04:01.040 --> 04:09.440]  оно будет там не знаю, оно будет сложным. Мы храним. И если происходит какое-то изменение,
[04:09.440 --> 04:16.800]  мы поэтому дерево должны пройти и все сбросить. Все, что может измениться.
[04:23.040 --> 04:40.280]  Ну в смысле мы по ней идем и сбрасываем вот это или как?
[04:40.280 --> 04:53.300]  Вы не сможете так, я понимаю про что вы говорите, но тогда это дерево у вас не просто хранит
[04:53.300 --> 05:00.320]  информацию о связях, она еще и хранит информацию о сути этой связи. Это я просто вам так сказал,
[05:00.520 --> 05:13.860]  это последняя новость, а может будет какая угодна связь когда это может означать что вот
[05:13.860 --> 05:18.300]  эта штучка включена в эту штучку, а вот этот связь может означать что если вот эта штучка
[05:18.300 --> 05:24.320]  приходит, то вся вот эта штучка становится не важной. А вот это может означать что
[05:24.320 --> 05:32.720]  если вот это вот это изменяется то здесь нужно добавить там не знаю синий цвет ну то есть как
[05:32.720 --> 05:41.960]  без связь может быть какая угодно сложности нужно попроще как весь путь до корня да и все ничего
[05:42.080 --> 06:01.040]  да все верно то есть как бы в варианте с деревом вы берете и выкидываете весь путь до корня есть
[06:01.040 --> 06:14.480]  другой способ есть другие идеи чем плохо вариант потому что мы не знаем как конкретно вот это
[06:14.480 --> 06:19.600]  вот это изменение вот этих данных повлияло на все остальные киши что нужно с ними сделать мы не
[06:19.600 --> 06:24.960]  знаем но мы знаем что не зависит поэтому просто на всякий случай всех до корня выкидываем и
[06:24.960 --> 06:32.200]  и рассчитываем на то что дальше наш программа сама разберется сама все перчатки в принципе
[06:32.200 --> 06:38.880]  правильно рассчитываю чем плох вариант
[06:38.880 --> 06:58.000]  да но мы эту проблему не решим если не будем залезать внутрь понимать смысл вот
[06:58.000 --> 07:04.240]  это вот конкретно связи а мы не очень хотим но это правильно то есть как бы решение то есть
[07:04.240 --> 07:08.160]  вы всегда будете когда вы будете разрабатывать решение всегда будете балансировать на грани
[07:08.160 --> 07:16.640]  простоты и как бы и эффективности да и не факт что самое эффективное решение лучше потому что
[07:16.640 --> 07:23.600]  самое эффективное решение вот в данном случае это разработать некий механизм где бы вы могли
[07:23.600 --> 07:29.920]  там не знаю мета язык где вы могли бы кодировать что вот что конкретно как конкретно вот это вот
[07:29.920 --> 07:39.600]  этот вот элемент киша влияет на этот элемент киша и как бы выполнять как бы осмысленная да вот
[07:39.600 --> 07:45.520]  сбрасывать эту связь да то есть не просто все сбросить а именно как-то пересчитывать да насколько
[07:45.520 --> 07:50.240]  времени вы на это потратите и как это будет работать сколько-то будет ошибок которые напишут
[07:50.240 --> 07:56.600]  программисты которому поставить задачу это вы выпускники и у вас все хорошо вы крутые
[07:56.600 --> 08:03.560]  ребятки а они-то я не знаю черти где учились но понаехали и как бы фигачить с ошибками кривый коз
[08:03.560 --> 08:13.280]  конечно буду пересчитывать сюда это простое решение но не само
[08:13.280 --> 08:31.480]  давайте чем плох вариант вас само наличие вот такого дерева не не смущает вот это вот
[08:31.480 --> 08:39.800]  хрень которая через два года работы станет какой-то совершенно огромной сложной тяжело
[08:39.800 --> 08:50.760]  поддерживаемой конструкции вот будет там я не знаю 5 уровней там я не знаю тысячи сущностей как
[08:50.760 --> 08:56.400]  ее вообще банально редактировать как ее в памяти держать как ее вообще то есть как бы это должен
[08:56.400 --> 09:05.960]  быть хорошо это означает что его в таком случае если каждое решение знает только про родителя
[09:05.960 --> 09:12.560]  означает что при старте вашей программы как это фигня должна собраться кто-то должен все это
[09:12.560 --> 09:31.600]  обойти ну или как или ты при каждом и где само дерево не сохранится каждый знает своего родителя
[09:31.600 --> 09:49.240]  ну окей хорошо да или гонить проще согласен да ну ладно я хорошо все равно да то есть да то есть
[09:49.240 --> 09:58.120]  при каких-то изменениях да то есть в чем чем плохая чем плохая эта история при каких-то
[09:58.120 --> 10:08.520]  изменениях не ну дерево дерево
[10:08.520 --> 10:22.560]  хорошая кстати история да это будет не дерево это будет у нас это будет не дерево это будет сеточка
[10:22.560 --> 10:26.880]  поясни
[10:26.880 --> 10:42.520]  это 100 процентов не дерево совершенно верно вот эта штука может влиять вот сюда вот сюда вот
[10:42.520 --> 11:07.880]  сюда и приходит приходится к разным этим просто сеть сетка ну блин граф это может быть как угодно
[11:07.880 --> 11:14.880]  главное чтобы не было стык и зависимости и мы не сломались на этом хорошо вам не
[11:14.880 --> 11:18.760]  кажется что это все равно будет сложно поддерживать
[11:28.760 --> 11:32.240]  потому что нам нужно кешировать не только главную страницу например страницу спорта и
[11:32.240 --> 11:45.320]  страницу конкретной новости спорта для главной страницы используются кусочки из внутренних да
[11:45.320 --> 11:50.920]  из других страниц короче есть такой вот способ да окей он немножко стрёмный потому что мы вот
[11:50.920 --> 11:56.800]  можно действительно поймать здесь какие-нибудь кривые конструкции в виде какой-нибудь цикла
[11:57.360 --> 12:07.880]  а может быть здесь есть какой-нибудь элемент который только для главной используется понимаешь
[12:07.880 --> 12:16.640]  мы не знаем этого всего вот это сложно поддерживать и вполне возможно что когда-нибудь то есть смотрите
[12:16.640 --> 12:24.680]  да то есть он знает своего родителя вот я вспомнил чем здесь проблема хорошо а теперь я беру и
[12:24.680 --> 12:36.080]  переписываю вот эту страницу главную меняю ловят у меня структуру меняю и теперь я должен
[12:36.080 --> 12:49.360]  просканировать весь блин мой код надо запустить истер который пойдет вниз да найдет мне подсветит
[12:49.360 --> 12:54.400]  все те места где это потенциально использовав кто меня потенциально сбрасывает и переписать
[12:54.400 --> 12:56.440]  давай
[12:59.960 --> 13:04.120]  ребят это все да красиво но слишком сложно для киша
[13:04.120 --> 13:27.560]  нет я про таймстэм поэтому уже и так храним чтобы понимать где что у нас живо что не живо я
[13:27.560 --> 13:32.680]  говорю про то что у нас эти изменения могут идти не только вверх но и вниз я могу переписать
[13:32.680 --> 13:38.040]  главную страницу сделать ее принципиально другой и теперь я должен просканировать весь мой код
[13:38.040 --> 13:45.040]  который сбрасывает главную страницу и пересмотреть на каждый вот этих этих связей
[13:45.040 --> 13:51.520]  заново а она сейчас по прежнему актуальной или нет и поддержка киша становится довольно сложной
[13:51.520 --> 13:59.000]  историей есть более элегантное решение назовите мне его все с деревом забыли вы поняли все плюсы
[13:59.000 --> 14:04.680]  все минус очень просто на поверхности но пока когда сайт начинает расти начинается с
[14:04.680 --> 14:19.480]  проблемы и сложностей другое решение так развивай мысль
[14:19.480 --> 14:37.600]  сама фраза подписываются на меня пугает понимаешь то есть давай по-другому
[14:37.600 --> 14:48.560]  забудь не нет то есть как бы мы построить сервис по обслуживанию киша слишком сложно
[14:48.560 --> 14:55.720]  проще посмотрите налог здесь мы пытаемся с вами в этом дереве мы пытаемся сохранить связи с
[14:55.720 --> 15:22.840]  низу вверх а что если попробовать наоборот проще без шины проще и так мы пытаемся сбросить при
[15:22.840 --> 15:29.400]  изменении листочка мы пытаемся сбросить все потенциальные элементы дерева которые от него зависит
[15:29.400 --> 15:37.560]  так
[15:37.560 --> 15:52.200]  услышали давай еще раз
[16:37.560 --> 16:46.400]  смотрите а поменялась структура это нас как главную страницу не волнует потому что
[16:46.400 --> 16:53.480]  главная страница знает только про свою структуру у нас структура главная страница она проверяет
[16:53.480 --> 17:00.640]  себя мои элементы не протухли если мой элемент протух ты его грубо говоря вызываю и говорю тупо
[17:00.640 --> 17:06.320]  проверь себя а он уже знает сам про себя все и так далее и так он спустит до всех протухших
[17:06.320 --> 17:19.040]  элементов при показе при показе точно также как и да то есть это вот этот история она нас
[17:19.040 --> 17:27.400]  составляет то есть мы при изменении элемента вот здесь внизу мы сбрасываем все киши предлагаем
[17:27.760 --> 17:33.480]  противопал как бы другая логика есть то есть смотрите по ключу хранится
[17:33.480 --> 17:46.600]  тоже сам массивчик в этом массивчике кроме значения есть список так называемый это то что вы
[17:46.600 --> 17:59.080]  сейчас назвали это называется системы тегирования кишей то есть есть хэш который описывает что
[17:59.080 --> 18:14.120]  вот этот конкретный ключ зависит от ключа 2 ключа там и не знаю 15 и там не знаю еще ключа 24 при
[18:14.120 --> 18:27.720]  этом когда вот это значение вычислялась ключ 2 имел таймстэп такой-то ну то есть время да такой-то
[18:27.720 --> 18:39.640]  ключ 15 имел таймстэп не знаю какой-то ключ 24 имел таймстэп такой то есть это некий слепок
[18:39.640 --> 18:49.840]  что было какие были значения у вот этих вот составных частей да то есть насколько какие они
[18:49.840 --> 18:55.560]  были когда они были вычислены какая была версия актуальность здесь можно и таймстэп писать
[18:55.560 --> 19:02.840]  можно списать версию версия 1 версия 2 версия 3 да и тут просто значение версии его просто
[19:03.840 --> 19:12.920]  и теперь проверка нас усложняется мы поднимаем по ключу вот эту вот конструкцию после этого мы
[19:12.920 --> 19:25.800]  смотрим ключ 2 идем в тот же самый кэш и смотрим какой текущий текущий таймстэп у ключа 2 если
[19:25.800 --> 19:35.240]  он такой же значит с этим ключом все в порядке время нет таймстэпе находится время вычисления
[19:35.240 --> 19:36.000]  время актуальность
[19:56.680 --> 20:05.400]  давайте ответим на этот вопрос должны ли мы нет подожди она по таймеру это в нормальном
[20:05.400 --> 20:08.800]  режиме а как нам понять что она не стухла
[20:08.800 --> 20:30.320]  если кто-то под ключом вот смотри вот у нас вот этот у нас просто ключ на вот
[20:30.320 --> 20:39.920]  это вот у нас там и ключ 2 если кто-то вот здесь обновился нам мы по идее должны пойти вниз
[20:39.920 --> 21:09.480]  да это если уже обновился а если что-то
[21:09.480 --> 21:36.920]  под ключом 2 обновилась у нас была проблема не со временем работы да у нас была проблема
[21:36.920 --> 21:45.320]  с поддержимостью этой штуки короче логика верна да то есть формально мы должны пойти вниз то
[21:45.320 --> 21:50.920]  есть если мы хотим прямо абсолютно честно мы должны дойти вниз до конца люди с этим мухлюют
[21:50.920 --> 21:57.840]  немножечко да как мухлюют но то есть мы поняли да как как эти вниз но смысл не как эти вниз а
[21:57.840 --> 22:03.840]  логику поняли да то есть грубо говоря у каждого составного элемента проверяется когда он был
[22:03.840 --> 22:11.320]  вычислен если у нас в кэше лежит информация о том что тех пор этот конкретный ключ обновился
[22:11.320 --> 22:19.880]  это значит что вот это тоже уже не актуально и это тоже нужно пересчитать поняли это поняли да
[22:19.880 --> 22:34.240]  придется
[22:49.880 --> 23:19.720]  он куда-то включается тоже наверное ну вдруг не сюда но какой-то другой
[23:19.720 --> 23:27.960]  страничку включается естественно иначе это не иначе она тогда не нужно вообще да то есть
[23:27.960 --> 23:32.000]  он где-то тоже используется на какой-то страничке он тоже используется и когда-то он тоже обновится
[23:32.000 --> 23:51.960]  мы не все дерево мы обходим все дерево который от нас зависит да короче совершенно правильная
[23:51.960 --> 23:57.560]  прозвучала фраза зависит от того какие у нас требования если нам нужно показывать абсолютно
[23:57.560 --> 24:00.400]  актуальную информацию нам нужно обходить все дерево
[24:00.400 --> 24:28.760]  не подожди подожди не совсем так
[24:28.760 --> 24:33.440]  смотрите
[24:39.120 --> 24:45.640]  у нас ссылки на валидность невалидность у нас не ссылки на куски данных грубо говоря то есть
[24:45.640 --> 24:56.080]  то что вот этот ключ зависит от ключа 2 15 и 24 не значит что вот это значение является суммой
[24:56.080 --> 25:02.240]  значений 2 15 и 24 понимаете
[25:02.240 --> 25:13.120]  это вовсе не не гарантирован то есть грубо говоря у нас главная страница зависит от времени
[25:13.120 --> 25:20.960]  поступления последней новости зависит зависит страница спорта зависит от времени поступления
[25:20.960 --> 25:26.200]  последней новости зависит но это не значит что вся страница спорта включена в главную
[25:26.200 --> 25:32.680]  страницу нет да то есть нас это это некий просто как бы сигнал то есть как только столкнулись
[25:32.680 --> 25:40.840]  тем что что-то невалидно цепочки просто пересчитываем вот это значение все оно там уже
[25:40.840 --> 25:47.760]  в процессе пересчета где-то там что-то обновится и все эти ключи пойду да но вернее как мы когда
[25:47.760 --> 25:54.560]  будем пересчитать вот это значение мы запишем новые значение новые темпы для ключей и все
[25:54.560 --> 26:01.280]  следующий раз мы просто не сломаемся то есть вот эта штука это у нас она исключительно сигнал
[26:01.280 --> 26:19.200]  о том что что-то протухло почему скорее всего очень часто вряд ли кэш будет часто перечислить
[26:19.200 --> 26:36.760]  он не имеет смысла если он будет часто пересчитывать вот поэтому поэтому
[26:36.760 --> 26:43.520]  используются небольшие хаки сейчас вам расскажу да то есть
[26:43.840 --> 26:51.600]  да когда формируете вот эту главную страницу вы когда формируете вот этот ключ вы садитесь
[26:51.600 --> 27:01.160]  думаете от чего он зависит и вы можете просто ввести некие пективные значения которые например
[27:01.160 --> 27:12.200]  реально нигде не используется но для вас являются плагом например время последней новости вот ты
[27:12.200 --> 27:19.540]  знаешь то у тебя главная страница зависит от того где что есть последнее но ты не знаешь где
[27:19.540 --> 27:25.360]  конкретно она появится спорте погоде или то не знаю в политике или еще где-то то есть
[27:25.360 --> 27:31.320]  ты вот как бы конкретное дерево но не не туда с конкретной конкретной цепочку ты не знаешь то
[27:31.320 --> 27:36.400]  есть не важно тебе просто если появилась новость она изменилась то это Notice,
[27:36.400 --> 27:38.400]  что главная страница изменится.
[27:38.400 --> 27:40.400]  То есть мы провели броу же в 12 минут.
[27:40.400 --> 27:42.400]  Да.
[27:42.400 --> 27:44.400]  Погнали цепить есть.
[27:44.400 --> 27:46.400]  Если надо будет какой-то подключить
[27:46.400 --> 27:48.400]  софтпорт, то мы бы правильно
[27:48.400 --> 27:50.400]  разобрали броу же.
[27:50.400 --> 27:52.400]  Да, грубо говоря.
[27:52.400 --> 27:54.400]  Даже не так.
[27:54.400 --> 27:56.400]  Ты сюда провел.
[27:56.400 --> 27:58.400]  Ты ввел некое значение.
[27:58.400 --> 28:00.400]  Вот это у нас раздел.
[28:00.400 --> 28:02.400]  Это последняя новость в разделе, грубо говоря.
[28:02.400 --> 28:04.400]  Ты просто
[28:04.400 --> 28:06.400]  вводишь отдельную сущность.
[28:06.400 --> 28:08.400]  Последняя новость.
[28:12.400 --> 28:14.400]  Да.
[28:14.400 --> 28:16.400]  И проводишь ее вот так вообще.
[28:22.400 --> 28:24.400]  Нет, ты прям
[28:24.400 --> 28:26.400]  вводишь это вот прям, я поэтому и говорю,
[28:26.400 --> 28:28.400]  ты вводишь эту фиктивную сущность.
[28:28.400 --> 28:30.400]  И когда ты теперь сохраняешь новость,
[28:30.400 --> 28:32.400]  ты меняешь
[28:32.400 --> 28:34.400]  какой-то из вот этих вот значений.
[28:34.400 --> 28:36.400]  И вот это.
[28:38.400 --> 28:40.400]  Тогда новую новость сохраняешь.
[28:40.400 --> 28:42.400]  Да.
[28:42.400 --> 28:44.400]  Просто эта фиктивная сущность
[28:44.400 --> 28:46.400]  сдается там, я не знаю,
[28:46.400 --> 28:48.400]  время последней новости.
[28:52.400 --> 28:54.400]  Нет.
[28:54.400 --> 28:56.400]  Потому что если ты сейчас
[28:56.400 --> 28:58.400]  я понимаю, что ты хочешь сделать.
[28:58.400 --> 29:00.400]  Ты хочешь связать вот так вот сюда.
[29:00.400 --> 29:02.400]  Это будет как бы канонически правильно
[29:02.400 --> 29:04.400]  с точки зрения и так далее.
[29:04.400 --> 29:06.400]  Но это хрен будет работать, потому что в этом случае
[29:06.400 --> 29:08.400]  ты все равно будешь из главной страницы
[29:08.400 --> 29:10.400]  проходить все под уровни,
[29:10.400 --> 29:12.400]  а не только свойства.
[29:12.400 --> 29:14.400]  А мы хотим именно вот этого
[29:14.400 --> 29:16.400]  сбежать. Мы хотим уйти от конструкции,
[29:16.400 --> 29:18.400]  когда мы должны будем вот здесь
[29:18.400 --> 29:20.400]  идти в ключ 2 и проверять его валидность.
[29:20.400 --> 29:22.400]  А потом идти
[29:22.400 --> 29:24.400]  все его под ключи и проверять их
[29:24.400 --> 29:26.400]  валидность, да и так далее.
[29:26.400 --> 29:28.400]  Мы хотим от этой штуки уйти.
[29:28.400 --> 29:30.400]  И в явном виде прописать в главную страницу
[29:30.400 --> 29:32.400]  все, от чего она может быть зависима.
[29:36.400 --> 29:38.400]  Да.
[29:38.400 --> 29:40.400]  В месте сохранения,
[29:40.400 --> 29:42.400]  в месте, где у тебя сохраняется статья.
[29:42.400 --> 29:44.400]  Так, а
[29:44.400 --> 29:46.400]  что ты так помнишь,
[29:46.400 --> 29:48.400]  с того, что я тебе чинил,
[29:48.400 --> 29:50.400]  ты видела или нет?
[29:50.400 --> 29:52.400]  Нет.
[29:56.400 --> 29:58.400]  Это как заказ кожаного?
[29:58.400 --> 30:00.400]  Это как заказ кожаного, да.
[30:02.400 --> 30:04.400]  Ну подожди, понимаешь,
[30:04.400 --> 30:06.400]  то есть как бы эти новые данные тебе
[30:06.400 --> 30:08.400]  где-то нужны. Да, то есть чисто теоретически
[30:08.400 --> 30:10.400]  возможно, то есть это такая же
[30:10.400 --> 30:12.400]  штука, вид сбоку.
[30:12.400 --> 30:14.400]  Что вот это вот наша конструкция.
[30:14.400 --> 30:16.400]  То есть чисто теоретически, вот сейчас
[30:16.400 --> 30:18.400]  на главной странице, главная страница построена
[30:18.400 --> 30:20.400]  таким образом, что ей
[30:20.400 --> 30:22.400]  нужен вот этот вот фиктивный блок.
[30:22.400 --> 30:24.400]  Время последнего, время последней
[30:24.400 --> 30:26.400]  новости.
[30:26.400 --> 30:28.400]  Через год пришли новые
[30:28.400 --> 30:30.400]  программисты, главную страницу переписали.
[30:30.400 --> 30:32.400]  Им вот этот блок уже не нужен.
[30:32.400 --> 30:34.400]  Но ребятки, которые
[30:34.400 --> 30:36.400]  пилят редакторский интерфейс,
[30:36.400 --> 30:38.400]  возможно об этом никогда и не узнают.
[30:38.400 --> 30:40.400]  И продолжают поддерживать этот фиктивный блок.
[30:40.400 --> 30:42.400]  Да, такая же жопа.
[30:42.400 --> 30:44.400]  Вид сбоку.
[30:44.400 --> 30:46.400]  То есть в этом случае,
[30:46.400 --> 30:48.400]  в варианте подъема вверх по дереву
[30:48.400 --> 30:50.400]  мы
[30:50.400 --> 30:52.400]  как бы нам это сложно поддерживать,
[30:52.400 --> 30:54.400]  потому что при изменении
[30:54.400 --> 30:56.400]  этой сущности мы должны пойти вниз.
[30:56.400 --> 30:58.400]  И здесь по большому счету точно так же.
[30:58.400 --> 31:00.400]  При изменении
[31:00.400 --> 31:02.400]  этой сущности
[31:02.400 --> 31:04.400]  мы должны
[31:04.400 --> 31:06.400]  те фиктивные блоки, которые используются,
[31:06.400 --> 31:08.400]  все фиктивные ключи,
[31:08.400 --> 31:10.400]  мы должны каким-то образом
[31:10.400 --> 31:12.400]  ...
[31:12.400 --> 31:14.400]  ...
[31:14.400 --> 31:16.400]  ...
[31:16.400 --> 31:18.400]  ...
[31:18.400 --> 31:20.400]  ...
[31:20.400 --> 31:22.400]  ...
[31:22.400 --> 31:24.400]  ...
[31:24.400 --> 31:26.400]  ...
[31:26.400 --> 31:28.400]  ...
[31:28.400 --> 31:30.400]  ...
[31:30.400 --> 31:32.400]  ...
[31:32.400 --> 31:34.400]  ...
[31:34.400 --> 31:36.400]  ...
[31:36.400 --> 31:38.400]  ...
[31:38.400 --> 31:40.400]  ...
[31:40.400 --> 31:42.400]  ...
[31:42.400 --> 31:44.400]  ...
[31:44.400 --> 31:46.400]  ...
[31:46.400 --> 31:48.400]  ...
[31:48.400 --> 31:50.400]  ...
[31:50.400 --> 31:52.400]  ...
[31:52.400 --> 31:54.400]  ...
[31:54.400 --> 31:56.400]  ...
[31:56.400 --> 31:58.400]  ...
[31:58.400 --> 32:00.400]  ...
[32:00.400 --> 32:02.400]  ...
[32:02.400 --> 32:09.880]  выборке мы должны доходить до дна каждый раз либо вот такие вот хаки в виде того что блин
[32:09.880 --> 32:15.760]  водится какие-то эффективные сущности которые используются только для сброса кишах по большому
[32:15.760 --> 32:25.000]  счету последняя новость но вот такая вот сущность или погода погода там не знаю температура изменилась
[32:25.000 --> 32:30.840]  температура то есть то есть такая же конструкция будет у нас будет температура в москве санкт-петербурге
[32:30.840 --> 32:37.880]  я не знаю в яреване еще где-то еще где-то еще где и в нормальном варианте у нас меняется например
[32:37.880 --> 32:42.520]  погода только в москве у нас меняется вот это вот и сбрасывается потихонечку и главная
[32:42.520 --> 32:50.360]  страница сбрасывается только в случае если мы в москве если пользователи в москве но мы
[32:50.360 --> 32:57.480]  можем придумать какую-то другую конструкцию мы можем придумать ими не знаю погода последняя
[32:57.840 --> 33:03.880]  которая будет бросиваться некие ключи которые сбрасываться каждый раз когда изменилась хоть
[33:03.880 --> 33:20.800]  какая-то погода хоть где-нибудь и писать его сюда нет просто вот вот просто берется пересчитывать
[33:20.800 --> 33:35.560]  значение еще раз то что у тебя вот этот вот ключ зависит от вот отсюда отсюда и отсюда не
[33:35.560 --> 33:42.760]  означает что у тебя вот это значение физически состоит из вот этого вот этого и вот это это не
[33:42.760 --> 33:58.400]  не обязательно все равно не обязательно как бы то есть нет да вполне возможно что где-то у
[33:58.400 --> 34:09.760]  тебя внутри вычислений твоего кода эти значения будут использоваться это сигнал о том что вот эти
[34:09.760 --> 34:16.200]  данные вот эти данные зависит от вот этих все как-то зависит ты не знаешь как если ты
[34:16.200 --> 34:24.480]  сейчас будешь еще и про это думать ну блин совсем закопать как ты используешь их не обязательно
[34:24.480 --> 34:36.840]  нет и вот это начинаешь вот это начинаешь пересчитывать ну вот давай вернемся к спорту
[34:36.840 --> 34:46.760]  вот смотри появилась последняя новость последний появилась последняя новость спорта последняя
[34:46.760 --> 34:56.120]  новость спорта используется в ключе 2 это главная страница раздела спорт и есть ключ это главная
[34:56.220 --> 35:10.480]  страница сайт еще у тебя появилась последняя новость в спорте да это эффективная сущность
[35:10.480 --> 35:16.180]  поменялась потому что последняя новость поменя色 так и вот и вот у тебя есть ключ 2 это
[35:16.180 --> 35:22.500]  главная страница спорта и ключ это главная страница и те и это стране и эта страничка и
[35:22.500 --> 35:27.220]  и эта страничка зависит от того, что у тебя новость
[35:27.220 --> 35:28.220]  в спорте.
[35:28.220 --> 35:31.780]  Но это не значит, что у тебя главная страница включает
[35:31.780 --> 35:32.780]  в себя спорт.
[35:32.780 --> 35:34.500]  Тебе не нужно спорт пересчитывать.
[35:34.500 --> 35:39.700]  Ты его пересчитаешь тогда, когда будешь валидировать
[35:39.700 --> 35:40.700]  ключ два.
[35:40.700 --> 35:45.740]  В валидации ключа два тоже будет написана вот эта
[35:45.740 --> 35:47.300]  ссылка на эту фиктивную сущность.
[35:47.300 --> 36:01.180]  Главную страницу ты пересчитаешь.
[36:01.180 --> 36:02.180]  Зачем?
[36:02.180 --> 36:05.220]  Не факт, что ты, то, что ты человек пришел на главную
[36:05.220 --> 36:07.220]  страницу, это не значит, что он тут же пойдет на
[36:07.220 --> 36:09.220]  страницу спорта или кто-то вообще спорт смотрит.
[36:09.220 --> 36:16.220]  Спорта нет, зачем?
[36:16.220 --> 36:39.100]  Да, зависит от того, как конкретно вы построите этот
[36:39.100 --> 36:40.820]  самый пересчет.
[36:40.820 --> 36:48.660]  То есть, смотри, если, вот допустим, вот у тебя главная
[36:48.660 --> 36:49.660]  страница.
[36:49.660 --> 36:52.740]  Допустим, она у тебя состоит из вот таких вот, вот это
[36:52.740 --> 36:57.060]  последние новости из спорта, вот это последние новости
[36:57.060 --> 36:58.060]  из политики.
[36:58.060 --> 37:02.860]  В спорте появилась новая новость.
[37:02.860 --> 37:08.540]  Соответственно, протухла вот эта страница.
[37:08.700 --> 37:10.380]  Протухла страница спорта.
[37:10.380 --> 37:13.980]  А страница спорта выглядит как последние новости о
[37:13.980 --> 37:17.420]  футболе, последние новости, не знаю, о баскетболе.
[37:17.420 --> 37:20.420]  И вот эта страница.
[37:20.420 --> 37:23.700]  Появилась новая новость о спорте, протухли две вот
[37:23.700 --> 37:24.700]  эти странички.
[37:24.700 --> 37:28.820]  Их обе надо пересчитать по большому счету.
[37:28.820 --> 37:33.420]  Но сейчас у нас пользователь пришел сюда, и мы вот занимаемся
[37:33.420 --> 37:35.300]  выводом вот этой страницы.
[37:35.300 --> 37:36.700]  Мы начинаем пересчитывать.
[37:36.700 --> 37:39.300]  Дальше мы понимаем, что где-то у нас фиктивный
[37:39.300 --> 37:43.460]  ключ, который называется, не знаю, ТЛАСС, вот он протух,
[37:43.460 --> 37:44.460]  все, помер.
[37:44.460 --> 37:47.380]  А, соответственно, вот это все невалидно, нам нужно
[37:47.380 --> 37:48.380]  пересчитать.
[37:48.380 --> 37:49.380]  Начинаем пересчитывать.
[37:49.380 --> 37:50.380]  Поехали.
[37:50.380 --> 37:52.380]  Вот дальше, как построено наше вычисление.
[37:52.380 --> 37:55.180]  Если оно построено грамотно, то по большому счету будет
[37:55.180 --> 37:57.700]  вызван какой-то метод, который...
