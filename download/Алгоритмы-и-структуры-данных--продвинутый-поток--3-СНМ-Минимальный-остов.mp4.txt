[00:00.000 --> 00:08.600]  потому что на самом деле нет фишка в следующем просто
[00:08.600 --> 00:14.280]  на самом деле придумал абсолютно не то я ну вот то есть на
[00:14.280 --> 00:18.660]  самом деле тут тут тут в общем то есть и по по самому
[00:18.660 --> 00:21.840]  ссылкам там сразу значит действительно что снм у
[00:21.840 --> 00:29.160]  нас да придумали да придумали как-то раньше вот но в принципе
[00:29.160 --> 00:33.120]  более того алгоритм был и алгоритм который мы тут все знаем и любим
[00:33.120 --> 00:39.000]  называется до лиры там далеко не первый вот что более того даже не первый за
[00:39.000 --> 00:45.240]  любимую всеми симпатику а какой симпатику мы любим да нет
[00:45.240 --> 00:52.440]  нет оказалась слишком любят все а симпатику конечно звездочка вот ну
[00:52.440 --> 00:56.640]  давайте я сейчас помню о чем у нас вообще речь нас о том что у нас есть
[00:56.640 --> 01:01.920]  какая-то мистическая структура данных системы не пересекающихся множество что
[01:01.920 --> 01:12.960]  мы вообще хотим мы хотим чтобы у нас было n элементов каждый из которых но вот
[01:12.960 --> 01:16.760]  и которые в каждый момент времени разбиты на какие-то не пересекающиеся
[01:16.760 --> 01:20.400]  множество изначально у нас n множество в каждом из которых там находится по
[01:20.400 --> 01:27.720]  одному элементу вот и нам хочется делать какие-то операции какие операции
[01:27.720 --> 01:33.960]  мы хотим делать ну в идеале ну разные можно делать операции но первых можно
[01:33.960 --> 01:40.480]  говорить что там допустим вот кстати талян предлагает такое такое вот union
[01:40.480 --> 01:46.080]  abc то есть это возьми два множества а и б объедини их и скажи что результат
[01:46.080 --> 01:53.960]  теперь называется ц вот ну можно и в такой интерпретация но конечно но вот
[01:53.960 --> 01:57.680]  но конечно если была только это операция это бы легко делать за вот
[01:57.680 --> 02:05.800]  единицы методом логично да вот поэтому нужно что-то еще а что еще надо вот ну в
[02:05.800 --> 02:09.720]  идеале конечно не плохо хотя бы уметь говорить там покинь два элемента а в
[02:09.720 --> 02:14.920]  одном они в одном ли они множестве находятся но в классических интерпретация
[02:14.920 --> 02:22.840]  обычно это сводится к операции поинт а тв что такое поинт а тв нам говорится
[02:22.840 --> 02:29.240]  что у каждого мужа должен быть так называемый представитель и хочется чтобы
[02:29.240 --> 02:32.960]  файн да твэ выдавал этого представитель в чем что какие
[02:32.960 --> 02:38.400]  ограничения на представитель но фактически ограничения только два первая
[02:38.400 --> 02:41.960]  значит этот представитель должен лежать соответствующим множестве
[02:41.960 --> 02:47.480]  но первых а во вторых самое главное что пока множество по составу не меняется
[02:47.480 --> 02:54.360]  то соответственно и сам представитель меняться не должен логично да логично
[02:54.360 --> 02:59.760]  вот эти мы будем там можно пользоваться там например если мы для каждого
[02:59.760 --> 03:03.360]  представителя то есть там если то есть теперь если назначить проверить лежат
[03:03.360 --> 03:07.280]  ли два элемента в одном множестве как это сделать надо вычислить представитель
[03:07.280 --> 03:15.120]  от одного представитель от второго и выяснить а совпадают ли они вот это у
[03:15.120 --> 03:22.080]  нас структура данных снм и теперь вытекает естественный вопрос как же
[03:22.080 --> 03:28.360]  это все реализовать но у нас есть действительно есть но есть любимая конечно
[03:28.360 --> 03:35.320]  версия версия называется а давайте-ка хранить все все это в подвешенных
[03:35.680 --> 03:41.200]  то есть множество мы будем хранить подвешенных деревьях а представителем то есть у каждой
[03:41.200 --> 03:47.200]  вершины будем хранить там указатель на родителя то есть вот как-то вот так-то
[03:47.200 --> 03:54.560]  будет и единственное только но вот и представителем будем считать корень
[03:54.560 --> 04:07.240]  то есть вот примерно такая вот штука вот то есть как тогда это предлагается делать то есть
[04:07.240 --> 04:12.400]  если вы хотите объединить там скажем если вы хотите найти представителя то вам нужно просто
[04:12.400 --> 04:22.840]  взять вершинку и пройти до корня а если вы хотите там объединить но объединить два дерева то надо
[04:22.840 --> 04:30.200]  один из корней подвесить к другому то есть вот такая у нас базовая версия то есть базовая
[04:30.200 --> 04:40.600]  версия реализации такая вот но при этом у нас сыграют две эвристики а какие у нас тут
[04:40.600 --> 04:50.040]  эвристики бывают вот ну первая такая ну а да ну первая эвристика которая вы крыша возникает
[04:50.200 --> 04:57.000]  мы думали что если подвешивать множество абы как то конечно может получиться бамбу ча бамбу чум
[04:57.000 --> 05:05.760]  и не любим как избежать бамбу чу наверно подвешивать в каком-то смысле меньше к большему вот
[05:05.760 --> 05:20.160]  поэтому мы введем такое понятие как весовая эвристика значит весовая эвристика что такое
[05:20.160 --> 05:25.760]  весовая эвристика это означает следующее в каждом корне мы будем хранить количество
[05:25.760 --> 05:32.680]  элементов соответствующей множестве именно в корке вот и это вот и подвешивать мы будем
[05:32.800 --> 05:39.880]  меньше там дерево меньшего веса к большему да вот такая дон twentистила ну как классическая
[05:39.880 --> 05:45.440]  возможно конечно вам ноった возможно вам никогда не рассказывали про такую эвристику
[05:45.440 --> 05:50.100]  а возможно и рассказывали тут тут в гайле как повезет то что про [? сп菱 tails ‫ и
[05:50.100 --> 05:55.200]  мне в свое время первые рассказывали сэнэ вводилась невесовая эвристика а – ран Milooky
[05:55.200 --> 06:01.240]  причем более того где ранг это просто мистическая функция которая вычисляется вот так
[06:01.240 --> 06:07.120]  ну типа подвешиваем меньше ранг к большему, а если два ранга родные, то одной вершины ранг
[06:07.120 --> 06:11.920]  увеличиваем на единичку и после этого докажем что там оказывается ранг обладает какими-то
[06:11.920 --> 06:17.560]  приятными свойствами. Вот потом где-нибудь там года там через два-три года жизни вы понимаете,
[06:17.560 --> 06:24.680]  что этот ранг это всего лишь высота под дерево на самом деле. Вот, но кстати ранг сегодня нам
[06:24.680 --> 06:30.680]  встретится, но скорее уже там больше как свойства, то есть базироваться мы все-таки будем на вот этой
[06:30.680 --> 06:38.720]  штуке. Вот как она называется-то. Нет, просто тут какая-то красивая английская терминология на
[06:38.720 --> 06:45.200]  самом деле, причем не всегда тривиальная, поэтому я лучше подглядю. Вот и пока вы думаете как тут
[06:45.200 --> 06:53.200]  называется эвристика сжатия путей, вот даже интересно угадать вообще. Может кто-то, может кто-то
[06:53.200 --> 07:00.680]  даже случайно угадает. Вот как вы думаете как может называться эвристика сжатия путей по
[07:00.680 --> 07:23.480]  английски. Так, еще варианты. Господи, так. Ну окей, это называется, да, значит это называется
[07:23.480 --> 07:38.760]  значит weighted union. Ну тут пока все логично. Там weighted union rule. Ну мало ли вдруг. Вот, ну это значит
[07:38.760 --> 07:50.960]  у нас такая первая эвристика. Вторая эвристика-это эвристика сжатия путей. Вот, как-ли? Ну вот, ну здесь
[07:50.960 --> 08:11.320]  очень легко догадаться. Она называется collapse rule. Вот, логично, да? Вот, да будет сжатие. Значит, ну в чем она
[08:11.320 --> 08:17.840]  заключается? Заключается она в том, что когда мы начинаем идти по длинному пути от вершины до
[08:17.840 --> 08:23.960]  корня, мы начинаем думать, так стоп, если нам и от этих вершин в следующий раз попробуем искать корень,
[08:23.960 --> 08:30.400]  то мы уже до этой вершины по-любому дойдем. Так давайте попутно еще и не теряясь им точки, тупо
[08:30.400 --> 08:41.160]  переподвесимся, говорим мы. Вот, вот такая красота у нас будет. Вот, это будет называться сжатие путей.
[08:41.160 --> 08:51.640]  Вот, то есть в принципе каждая из этих эвристик на самом деле сама по себе эффективна. Ну,
[08:51.640 --> 08:55.600]  например, давайте начнем первое утверждение. За какой всем точку у нас будут работать всякие
[08:55.600 --> 09:06.400]  юнионные файнды, если у нас есть только весовая эвристика? За логарифом. Да, мы уже прям с тостов
[09:06.400 --> 09:17.680]  начинаем. Да, за логарифом. Да, вот, причем действительно, причем логарифом почему? Ну,
[09:17.680 --> 09:22.800]  потому что как бы любимый уже нами в прошлом семестр прием о том, что если подвешивать меньше
[09:22.800 --> 09:29.600]  к большему, если висит там меньше подвесилось к большему, то при переходе от ребеночка к родителю
[09:29.600 --> 09:36.400]  у нас размер потерьего увеличивается хотя бы в два раза, поэтому получается логариф. Так,
[09:36.400 --> 09:46.600]  тут надо что-то пояснять, да? В смысле нет? Ну, понятно. Ну, мало ли вдруг там. Вот, да. Что более
[09:46.600 --> 09:52.400]  того, да, что здесь важно отметить, конечно, что логарифом здесь в принципе можно и даже еще и в
[09:52.400 --> 09:59.200]  явном виде выписать, потому что если делать юнионы таким образом, чтобы у нас появлялось вот там
[09:59.200 --> 10:08.440]  что-то похожее на двоичную кучу, то будет хорошо, то будет прям предельно честный логарифом,
[10:08.440 --> 10:17.280]  тут вы уже ничего не сделаете. Вот, но это если делать весовую выистику. А что делать,
[10:17.280 --> 10:25.320]  если будет только сжатие путей? Вот нам допустим лень тратить лишнюю память на там какие-то там
[10:25.320 --> 10:34.320]  поддержки каких-нибудь СС-шек, а хочется делать только сжатие путей. Ну, оказывается, что это
[10:34.320 --> 10:45.440]  тоже эффективно. Правда, в амортизированном смысле. А именно, я утверждаю,
[10:45.440 --> 10:55.600]  ну вот, а именно, значит, можно даже сформулировать, здесь я уже попродвину,
[10:55.600 --> 11:00.880]  теперь я сформулирую. Значит, я сформулирую в том виде, в котором мы, собственно, будем сегодня
[11:00.880 --> 11:20.320]  жить. Значит, при условии использования лишь сжатия путей, давайте вот так напишу, лишь сжатие
[11:20.320 --> 11:48.000]  путей. Пути m-find с промежуточными n-1, там юнионами.
[11:48.000 --> 12:16.640]  Будут работать за o от n плюс m лог n. Да, что? Ну, потому что у нас изначально n множество в конце будет
[12:16.640 --> 12:23.600]  одно, поэтому n множество. Более того, кстати, здесь еще обычно не всегда, в общем-то, понятно,
[12:23.600 --> 12:30.360]  зачем, но хотя логично подразумевается, что n все-таки больше либо равно n. Да, не очень понятно,
[12:30.360 --> 12:35.040]  зачем, но тем не менее. Ну, в данном случае, обязательно, но вот тут будем идти. Потому что,
[12:35.040 --> 12:40.320]  то есть, формулировка честная тоже взята у Тарьяна, то есть, потому что у Тарьяна там половина
[12:40.760 --> 12:56.040]  там звучит как, вот сейчас зачитаем. Where is it? То есть, тут используется формулировка,
[12:56.040 --> 13:04.160]  that union algorithm for m greater or equal than n finds and n-1 intermixed unions.
[13:04.160 --> 13:13.960]  Так еще я сказал, да? Нет? Ну, вот, а вы знаете английский, молодцы. Да, я просто не знаю,
[13:13.960 --> 13:27.720]  поэтому. Да, ответственно. Оба. А, отлично. Да-да-да-да-да-да. Как-то вот так. Чтобы изучить это,
[13:27.720 --> 13:32.400]  надо знать английский. А вот, чтобы изучить продвинутые деревоотрески, надо знать китайский.
[13:32.640 --> 13:39.440]  Как-то вот, да. Ну, вот. Ну, в принципе, да, вот интересно. То есть, сказал я буквально то
[13:39.440 --> 13:43.400]  же самое. Ну, в общем-то, это. Ну, на самом деле, даже наоборот. Это была калька вот с того,
[13:43.400 --> 13:51.000]  что у Тарьяна написано. Вот. Ну, давайте просто разомнемся. Разомнемся в плане,
[13:51.000 --> 14:00.880]  откуда же взялось вообще вот это утверждение. Вот, действительно. Откуда же нам такое счастье
[14:00.880 --> 14:13.840]  взять? Вот. Ну, взять его можно, ну, например, следующим образом. Или нельзя. Или можно. Ну,
[14:13.840 --> 14:30.040]  не суть. Как бы его попроще взять? Кажется, то, что юнион просто увеличивает длину не больше,
[14:30.040 --> 14:49.040]  чем на один. Ну, допустим. Ну, деревья дай. Нет, ну, деревья дай. Ну, как? Нет, ну, как? Ну,
[14:49.040 --> 14:57.320]  потенциал, количество ребер. Так, вы дайте. Нет, подождите. Нет, подождите. У нас количество
[14:57.320 --> 15:03.240]  ребер всегда дедаковое. Ну, практически. Файлы сами в себе не меняют количество ребер. Они
[15:03.240 --> 15:10.440]  меняют только то, куда они направлены. Нет, это, в общем-то, действительно не очень. Не очень
[15:10.440 --> 15:17.880]  интересно. Не-не-не. На самом деле, все гораздо проще. Дело в том, что у каждого ребра на самом
[15:17.880 --> 15:25.960]  деле можно ввести такой, например, веселый ранг. Ну, например, вот, простая интерпретация звучит так.
[15:26.360 --> 15:29.680]  То есть сейчас у нас будет чуть посложнее. Но, например, можно сделать так. Рассмотрим
[15:29.680 --> 15:39.040]  ребро ВВ. Вот. Значит, по нему всегда можно рассмотреть такое понятие, как, допустим,
[15:39.040 --> 15:54.160]  СЗ от В минус СЗ от В. Логично, да? А еще у него можно взять двоичный логариф.
[15:54.240 --> 16:10.920]  А еще этот двоичный логариф можно округлить вниз. Ну, например, вот так. Что-что? Это ребро из ВВ.
[16:10.920 --> 16:20.840]  Да. Значит, мне жуткая нот. Значит, ну, просто давайте смотреть. То есть заметим, что ребро,
[16:20.840 --> 16:26.680]  если оно... Ну, обычно, если ребро попало в файнт, и оно там оказалось не последним,
[16:26.680 --> 16:36.200]  то оно поменяется. Логично, да? Вот. Но давайте посмотрим, как будет меняться ранг. Соответственно,
[16:36.200 --> 16:43.160]  ребрик, торчащих из вершины В в процессе файнта. Но давайте посмотрим для этого. Потому что,
[16:43.160 --> 16:46.800]  ну, вершина В у нас тут где-то находится. То есть, допустим, есть у нас какой-нибудь вот...
[16:46.800 --> 16:52.640]  Вызвали мы какой-нибудь файнт. Где-то вот тут оказалась вершина В. И, соответственно,
[16:52.640 --> 16:59.000]  у нее ребро теперь куда-то перенаправилось. То есть, какой-нибудь вот... То есть, вот они
[16:59.000 --> 17:04.280]  теперь все перенаправились вот как-то вот так, вот так, вот так, вот так, вот так, вот и вот так,
[17:04.280 --> 17:19.460]  вот и вот так, вот. То есть, вот такая вот приятная радость. Вот. Теперь давайте думать,
[17:19.460 --> 17:25.120]  значит, как же у нас могли поменяться... Значит, что у нас могло поменяться? Так,
[17:25.120 --> 17:32.640]  могла ли поменяться вот эта вот мистическая функция? Вот. Так, как бы нам... Ну ладно,
[17:32.640 --> 17:38.600]  давайте в рамках этого доказательства назовем эту функцию рангом вершины В. Точнее, рангом
[17:38.600 --> 17:44.960]  ребра. Хотя у нас, конечно, ранги тут будут путаться, но тем не менее. Значит, как же нам
[17:44.960 --> 17:49.040]  будет меняться ранг? Ну, теперь заметим следующее. Что, ну, во-первых, рангов у нас всего не будет
[17:49.040 --> 17:57.800]  от нуля до логарифма, правда? Более того, если я тут напишу в явном виде какие-нибудь ранги,
[17:57.800 --> 18:06.400]  ну, тут всякие ранги бывают, конечно, два, один, там, четыре, два, то заметим, что у каждого ранга,
[18:06.400 --> 18:16.000]  что, ну, что каждое ребро может быть последним на пути своего ранга, а может быть не последним.
[18:16.000 --> 18:27.680]  Вот как-то так вот. Логично, да? Ну, смотрите, рассмотрим ребра каждого ранга на этом
[18:27.680 --> 18:40.720]  пути. Одно из этих ребер последнее, а все остальные нет. Вот. Вот, действительно, такой парадокс
[18:40.720 --> 18:45.560]  бывает. Как говорится, это круче, чем, как бы, парадокс про ростов на дону таранрук и шахты,
[18:45.560 --> 18:53.640]  если кто знает. Ну, то же самое. Ну, как-то классик говорит, да, как говорится, ученые обнаружили
[18:53.640 --> 19:00.840]  аномалию, что если соединить на карте, когда ростов на дону таранрук и шахты, получится треугольник.
[19:00.840 --> 19:07.880]  Вот. Ну, здесь примерно то же самое. Вот. Да, уровень парадокса абсолютно тот же. Вот.
[19:07.880 --> 19:20.580]  Соответственно. Вот. Но, как говорится, да, пока мы не заметим еще одно что. Даже два что. Во-первых,
[19:20.580 --> 19:27.940]  заметим, что вот этих вот последних ребер у нас логарифм. Ну, не более чем логарифм, да? А у всех
[19:27.940 --> 19:33.820]  остальных ребер есть маленькое приятное свойство. В результате этого файнда их ранг увеличится.
[19:33.820 --> 19:46.020]  Почему? Ну, потому что, что означает, что вот у этого ребра ранг 4? Это означает, что разница
[19:46.620 --> 19:53.740]  между ними, то есть между вот этими вершинами, как минимум два в четвертый, правда? Но раз это
[19:53.740 --> 19:58.980]  ребро не последнее, значит вот тут еще есть ребро, которое увеличивает ранг на два в четвертый.
[19:58.980 --> 20:06.100]  Следовательно, когда эта вершина будет указывать сюда, тут разница высот будет уже хотя бы два в пятый.
[20:06.100 --> 20:15.540]  Вот. Можно вот так доказывать. Вот. То есть получается следующее, что в каждом файнде
[20:15.540 --> 20:23.140]  мы обрабатываем логарифм последних ребер. Отсюда у нас получается, на этом мы тратим m log n.
[20:23.140 --> 20:31.740]  То есть m раз мы тратим по log n на обработку последних ребер. А также есть куча остальных
[20:31.740 --> 20:36.580]  ребер, но на каждом из остальных ребер ранг увеличивается. Но суммарно увеличиваться у
[20:36.580 --> 20:42.340]  каждой вершины ранг, точнее у ребра, торчащих из нее, ранг может не более чем логарифм раз,
[20:42.340 --> 20:48.940]  потому что у нас ранг ребра может быть только от нуля до логарифма. Поэтому вершина у нас
[20:48.940 --> 20:58.340]  n, то проявляется, вот m log n плюс n log n. Ну, в принципе, терема доказана. Вот. То есть вот оказалось,
[20:58.340 --> 21:06.180]  что само по себе сжатие путей это в принципе вам уже может помочь. То есть как бы, ну, то есть
[21:06.180 --> 21:10.580]  само по себе даже там никакие там лишние поля на ССС добавляйте внимание. То есть обратите
[21:11.220 --> 21:14.860]  внимание, то есть евристика сжатия путей работает даже если вы это ССС пересчитывать не будете.
[21:14.860 --> 21:27.620]  Вот. Но возникает вопрос, а что будет, если мы соединим эти две евристики, потому что действительно
[21:27.620 --> 21:36.180]  реализационно вроде как объединить их, никакой проблемы нету. Вот. Ну, то есть да, то есть там
[21:36.180 --> 21:42.260]  действительно код там, это просто на муа, там все, я думаю, там, называется рассказан, вот. Так надо, то есть надо
[21:42.260 --> 21:52.980]  рассказывать как-то в три строчки писать. Ну, вот, да. Действительно, да, тут уже, да, то есть это вот
[21:52.980 --> 22:03.020]  такое небо. Ну, вот. Для такого уже. Значит, ну, вот, что же, что же будет? Ну, здесь высекают, как бы,
[22:03.020 --> 22:11.060]  на самом деле, да, популярная на нашем курсе автора Ховкрофт и Ульман внезапно. Вот, да, правильно.
[22:11.060 --> 22:26.580]  Ну, вот. Ну, возможно, они даже есть. Нет, как бы, я не знаю, там убили кто-то или нет. Нет, ну, а в нашем
[22:26.580 --> 22:33.020]  курсе? Нет, должны были быть, как минимум, по упоминаниям, что это должны были быть авторы книжки
[22:33.020 --> 22:41.980]  про компиляторы, в которые упоминают дерево доминаторов. Да, это тоже они, да. Ой-ой-ой, вот какие молодцы.
[22:41.980 --> 22:49.840]  Да, ну, действительно, не один же Тарьян там сидит и работает. Вот. Ну, впрочем, тут ссылка, что утверждается,
[22:49.840 --> 22:55.880]  что действительно Ховкрофт Ульман, значит, предложили, вот, едва ли они, едва ли они предложили, собственно,
[22:55.880 --> 23:01.260]  вот это вот, на самом деле, вот эту реализацию. Ну, вот такую упрощенную версию. И, собственно,
[23:01.740 --> 23:15.660]  вот им, по крайней мере, Тарьян приписывает, что они ноты асимптотику О от локзвездочка. Да, что такое
[23:15.660 --> 23:23.820]  локзвездочка? Так, ну, как вы знаете, что такое локзвездочка? Так, пока вопрос, кто знает, что такое локзвездочка?
[23:23.820 --> 23:34.980]  Ух ты! А, ну, да-да. Действительно, да. Значит, Ховкрофт, да. Да, действительно. Зачем локзвездочка? Да.
[23:34.980 --> 23:42.220]  Хотя в некоторых местах, в некоторых лкошах это даже доказывает. А кто умеет доказывать,
[23:42.220 --> 24:01.580]  что СНМ работает за вот эту асимптотику? Так, понятно. Значит, смотрите. Ну, значит, В, нет. Чего? Нет, ну, как предположение, я просто знаю. Нет, смотрите.
[24:01.580 --> 24:10.020]  Нет, определение очень простое, смотрите. Локзвездочка N, это, значит, я его определю так. Это
[24:10.020 --> 24:17.340]  минимальное такое K, что лажарифм двоичный от лажарифма двоичного от лажарифма двоичного и так
[24:17.340 --> 24:25.460]  далее от лажарифма двоичного от N, где вот это вот делается K раз, оказалось меньше единиц. Может быть, даже меньше
[24:25.540 --> 24:34.020]  равно. То есть, сколько раз, то есть, такая чисто, целовечная, сколько раз надо брать лажарифм,
[24:34.020 --> 24:39.380]  чтобы оказалось меньше либо равно единиц. Ну или там, может быть, иногда там нуля там,
[24:39.380 --> 24:45.740]  или что-нибудь еще в этом вроде. То есть, там разные варианты могут быть. Вот. То есть, ну,
[24:45.740 --> 24:53.420]  пожалуй, для наших целей можно так определить. Вот. Да, но заметим, что функция растет достаточно
[24:53.740 --> 25:03.100]  медленно. Потому что, например, то есть, что нам, вот, то есть, заметим, что если локзвездочка у нас N
[25:03.100 --> 25:10.540]  меньше либо равно одного, то из этого следует, что N не превосходит чего? Так, ну, очевидно,
[25:10.540 --> 25:17.620]  двух. Если мы хотим, чтобы локзвездочка N не превосходила двух, то тогда из этого следует,
[25:17.960 --> 25:24.740]  что N не должно превосходить, ну очевидно, два в этой степени. То есть, лог N не превосходит двух,
[25:24.740 --> 25:30.780]  то есть, получается, N не превосходит два в квадрате. Если мы хотим, чтобы локзвездочка
[25:30.780 --> 25:36.800]  не превосходил три, то N меньше либо равно два, вот в этой степени. То есть, два в степени 2,
[25:36.800 --> 25:44.300]  два в степени 2, пока не много. Это 16. Но, если мы хотим, чтобы локзвездочка Н не превосходит четырки,
[25:44.300 --> 25:50.220]  то получается не должен посетить 2 в степени 2 степени 2 степени 2 это равда 65 тысяч 536
[25:50.220 --> 25:59.100]  но до 16 пока тоже немного но если мы хотим чтобы лог звездочка не проследила 5 то он не должен
[25:59.100 --> 26:04.700]  присоединить 2 степени 2 степени 2 степени 2 степени 2 то есть 2 степени 65 тысяч 536 ну мне лень
[26:04.700 --> 26:11.860]  выписывать это число вот думаю вы догадываетесь почему вот потому что да как-то выписывать
[26:11.860 --> 26:17.780]  число которое там много больше чем там возможно количество атомов во вселенной вот как-то это не
[26:17.780 --> 26:25.140]  очень вот то есть в принципе то есть в принципе это уже достаточно бы но то есть и ладно если
[26:25.140 --> 26:29.740]  мы сейчас докажем это симпатику то конечно это уже достаточно обоснование того что эсэдэм
[26:29.740 --> 26:35.420]  работает быстро как это воспринято говорить в олимпиадной среде ну практически за линию
[26:35.420 --> 26:46.260]  там проектом цирк за констант такой да практически вот осталось только понять
[26:46.260 --> 26:55.500]  а откуда же так а симпатика у нас берется вот действительно откуда у нас такая берется
[26:55.580 --> 27:09.220]  ну вот ну давайте ну вот ну давайте тогда тоже попробуем это понять так
[27:09.220 --> 27:23.260]  амортизировано конечно ну так да давай то есть ну скажем так да то есть реально мы
[27:23.260 --> 27:28.100]  попытаемся поверить то есть там теорема будет опять звучать так то есть давайте так теорема
[27:28.100 --> 27:46.220]  при условии использования обеих ивристик пользования обеих ивристик обеих ивристик
[27:46.220 --> 28:06.300]  значит find of с промежуточными с промежуточными и там n минус 1 юнионами да м давайте больше
[28:06.300 --> 28:21.220]  либо равно n напишем чтоб красиво было может пригодится нам это но сработают за о от я утверждаю
[28:21.220 --> 28:39.300]  м лог звездочка n вот такой вот шпиль вот вот вправывается но вот откуда мы такое счастье возьмем
[28:39.300 --> 28:49.420]  вот действительно но да но то есть давайте вот подумаем откуда мы такое счастье воврем так
[28:49.420 --> 28:54.620]  но опять но вот ну во первых давайте введем такой парень на этот раз пришло время ввести
[28:54.620 --> 29:08.420]  понятие настоящего ранга давайте скажем что эра тв это высота значит под дерево в
[29:08.420 --> 29:20.220]  так но и здесь правда важный нюанс здесь важный нюанс потому что на самом деле у нас будет два
[29:20.220 --> 29:26.340]  дерева ну опять так начнем с того что если просто выполнить n минус 1 юнионов и больше
[29:26.340 --> 29:35.860]  никаких файлов не делать то получится дерево вот но опять тарангрогу и шахтам да вот вот но
[29:35.860 --> 29:41.420]  но вот но правда это дерево до счетов то есть это такой в идеале будет такое дерево файлов
[29:41.420 --> 29:46.620]  то есть вот это там дерево юнион но при этом если вы в процессе делаете файлы то мы вершины
[29:46.620 --> 29:56.900]  предподвешиваем и дерево меняется вот это важный момент так вот значит мы но вот так вот мы в
[29:56.900 --> 30:04.260]  данном случае эра тв будем значит подразумевать что высота именно в исходном дереве я его буду
[30:04.260 --> 30:18.860]  называть дерево юнион вот то есть отыть как как сегодня будет это все удобно воображать удобно
[30:18.860 --> 30:25.980]  воображать себе так что у нас как бы заранее уже есть полное дерево на н минус прям вот полное
[30:25.980 --> 30:31.020]  подвешенное дерево вот но некоторые вершины так сказать еще бледненькие такие некоторые
[30:31.020 --> 30:37.420]  ребра но то есть потому что соответствующих юнионов еще не произошло вот поэтому файл да
[30:37.420 --> 30:43.100]  но поэтому файл будут как бы сжимать пути но как бы делать они будут не до конца а до ближайшего
[30:43.100 --> 30:52.980]  бледненького ребра понятно да вот поэтому вот эра тв у нас будет такой вот пока дерево юнионов
[30:52.980 --> 31:01.620]  то есть эра эра это у нас вот такая высота так ну во-первых есть коридор давайте обратим
[31:01.620 --> 31:11.140]  внимание на маленькое приятное утверждение маленькое утверждение заключается в том что
[31:11.140 --> 31:21.660]  сзв больше либо равно чем два в степени эра 2 да сзв естественно тоже подразумевается в
[31:21.660 --> 31:46.020]  дереве юнионов то есть это тоже в дереве юнионов вот вот вот более того из этого следует что
[31:46.020 --> 31:58.500]  как говорится вы дереве то есть такое следствие в дереве не более чем n делить на два степени
[31:58.500 --> 32:25.820]  эра 2 вершин на два степени к вершин ранга к вот будет у нас такая вот маленькая приятная
[32:25.820 --> 32:34.700]  вещь которой мы будем пользоваться вот но теперь весь кайта просто как же но как же мы
[32:34.700 --> 32:51.620]  ей вот значит как же как же мы ей будем пользоваться вот но да но давайте посмотрим
[32:51.620 --> 32:57.060]  то есть на самом деле технология на самом деле должна быть очень похоже на это то есть в принципе
[32:57.060 --> 33:03.460]  можно сразу заметить что когда мы сжимаем пути у нас действительно бывает то есть это откуда нам
[33:03.460 --> 33:11.260]  взять лог звездочка но лог звездочку можно на самом деле взять то есть вот откуда то есть ну и
[33:11.260 --> 33:17.580]  вот то есть откуда мы брали логарифом логарифом брали из того что тут наверное должны быть
[33:17.580 --> 33:25.060]  ребра которые ведут из там под дерево высоты сз в потере высоты 2 сз правда так вот по рангам
[33:25.060 --> 33:31.620]  на самом деле можно теперь сказать так вот у нас бывает тут допустим ранга тв равно допустим
[33:31.620 --> 33:39.300]  x а тут вот у дабл ю неожиданно ранга тв ранга дабл ю больше либо равен там допустим два степени
[33:39.500 --> 33:51.260]  вот ну случается такое иногда да и еще был бы кайф конечно сказать что больше ничего у нас
[33:51.260 --> 34:02.420]  не случается почему это было но почему был бы кайф так сказать ну был бы кайф так сказать
[34:02.420 --> 34:08.020]  просто потому что если бы у нас были только такие ребра то тогда мы бы отсюда без труда бы вывели
[34:08.020 --> 34:19.660]  что симптотика файла вот такая правда логично да вот то есть соответственно более но вот то есть
[34:19.660 --> 34:27.060]  в общем-то более того даже утверждение было бы верно если я тут двоечку заменю на один точка 9
[34:27.060 --> 34:37.620]  такое кое зачем нет вот там просто утверждается что да то есть тут скачку количество скачков
[34:37.620 --> 34:43.700]  а будет там больше чем логизм чк не более чем в два раза очевидно ну даже меньше вот
[34:43.700 --> 34:59.060]  ну а почему очевидно то действительно ну наверное нет ну да может кэша ну не знаю
[34:59.060 --> 35:05.740]  как-то почему-то ну кажется очевидным факт что 1.9 степени 1.9 степени x наверное ну должен
[35:05.740 --> 35:18.300]  быть больше либо равен чем два степени x да давайте хорошо проверим давайте ну вот логарифом
[35:18.300 --> 35:29.980]  двоичный 1.9 наверное должен быть больше либо равен чем x ну как-то скажем так начинается
[35:29.980 --> 35:36.860]  какого-то к сайту что четвертый явно не сильно большой то есть я думаю там как бы лада уровень
[35:36.860 --> 35:41.940]  владения вами мотонализом должен на самом деле даже еще и вывести там позволить вам вывести
[35:41.940 --> 35:48.860]  чему примерно этот x равен но там производную там забабахать вот это все да там понять где там
[35:48.860 --> 35:57.340]  бин поиском понять где она там примерно 0 убедиться что там скажем там что нету смысле
[35:57.340 --> 36:03.100]  нету мотонализом нужно чтобы понимать что как бы если вы тут вычислить и производную там то
[36:03.100 --> 36:07.180]  понять что она там какая-нибудь монотонная там где-нибудь она 0 и дальше бин поиска мы найдете
[36:07.180 --> 36:17.220]  скажем там допустим что этот там 0 находится между единицей тройкой например нет ну это
[36:17.220 --> 36:23.380]  если производа там ну если там она начинается как-то момент она точно монотонно конечно но
[36:23.380 --> 36:32.980]  вот вот да не будем тут перезаморачиваться вот значит как как-то вот так поэтому тут
[36:32.980 --> 36:38.060]  действительно будет какой-то лок звезд но поэтому тут слов с лок звездочка действительно никаких
[36:38.060 --> 36:47.580]  проблем не будет так вот но вот но вот вот возникает вопрос к огромному сожалению бывают и другие
[36:48.020 --> 36:55.940]  вот что там
[36:55.940 --> 37:01.380]  кива кива кива
[37:01.380 --> 37:17.060]  четвёрку ну да у нас будет в определении себе зачем-то локу а сейчас увидите зачем это
[37:17.060 --> 37:24.900]  принципиально у нас степени свернутся потому что смотрите какая фишка значит что я тут буду
[37:24.900 --> 37:31.620]  делать значит смотрите значит теперь вычислить вопрос значит значит наш файнт работает за о от
[37:31.620 --> 37:38.900]  единицы плюс переключение ребер правда но заметим что когда ребро переключается оно переключается на
[37:38.900 --> 37:48.620]  ребро строго большего рамка правда у каждого следующего рамка строго больше да но теперь
[37:48.620 --> 37:55.100]  заметим следующее что значит вот мы говорим что у нас ребро хорошее если вот это да вот это
[37:55.100 --> 38:05.540]  хорошее ну ладно через он напишу вот нет ладно хорошее вот вот чтобы подчеркнуть что это вот
[38:05.540 --> 38:09.940]  типа мы ввели математически термина и чтоб там социация с ассоциациями какими-то там соцензиями
[38:09.940 --> 38:25.700]  суждения вот это все вот а вот это ребро плохое вот плохое да да от слова плохов ну да ну вот
[38:25.700 --> 38:34.180]  значит первые ну вот теперь смотрите значит у нас изначально у нас ребро вот сейчас все бы так
[38:34.180 --> 38:42.060]  сначала ребро плохое потом через него проходит несколько файнтов и оно становится хорошим причем
[38:42.060 --> 38:58.620]  навсегда это что такое можно юриде да это но это может быть очень странно но тянутся
[38:58.620 --> 39:28.620]  да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да
[39:28.620 --> 39:37.980]  ну сколько ну вот сколько у нас переключений но заметил что в каждом файне у нас есть вот переключения
[39:37.980 --> 39:45.260]  хороших ребер хорошие ребра у нас переключаются за как мы уже поняли звездочка потому что лог звездочка
[39:45.260 --> 39:59.340]  на каждом пути вот а есть остальные ребра но теперь заметим следующее да что теперь теперь заметим что давайте
[39:59.340 --> 40:10.980]  переберем все ранги но теперь заметим что рангов у нас сколько логарифом значит к равно логарифом но
[40:10.980 --> 40:25.620]  заметим что ребро но ребро ранга к точнее торчащие с вершины ранга к оно будет переключаться не более чем сколько не более чем соответственно
[40:25.620 --> 40:40.100]  один точка девять в степени к раз ну перенаправляться ну как бы следующего предка в прижатии путей вот это да ну то есть
[40:40.100 --> 40:45.180]  мы оцениваем собственно фактически ровно количество переключений потому что файны ровно за там за это плюс м и
[40:45.180 --> 41:00.020]  работают логично да вот вот то есть и теперь остается только это домножить на количество вершин ранга к но теперь
[41:00.020 --> 41:07.780]  заметим маленькую прятую вещь что не так просто стать вершиной ранга к настолько не просто что этих вершин не более чем
[41:07.980 --> 41:19.180]  поделить на два степеника вот вы спрашивали зачем один точка девять да да потому что это не превосходит м лог звездочка
[41:19.180 --> 41:29.380]  n плюс n на сумму пока равно от нулю и в принципе до бесконечности можно сказать один делить на два
[41:29.380 --> 41:42.660]  делить на один точка девять степеника вот вот вот это вот штука это от единицы
[41:42.660 --> 41:53.860]  такое да жирная но от единиц вот нет вот хорошо я тут мог полторашку в принципе написать или там
[41:53.860 --> 42:04.540]  это как-то в корень из двух вот тогда вообще вопросов не было чего 0 нет ну и не мог так вот
[42:04.540 --> 42:13.260]  это от единиц ну и таким образом ну вывод что это о отн а так как это с больше либо равно n ну
[42:13.260 --> 42:22.940]  чтобы красиво было то получается что это отм лог звездочка и вот то есть вот в принципе такое
[42:22.940 --> 42:27.700]  доказательство вам могли в каких-нибудь там лкшах собственно и прочих школах рассказывать
[42:27.700 --> 42:34.460]  а могли нам могли не рассказывать да то есть могли не рассказывать хотя в общем-то как бы
[42:34.460 --> 42:43.980]  при желании видите доказательства общем-то мягко говоря неубойная вот да дальше будет
[42:43.980 --> 42:53.140]  посложнее но на самом деле тоже не убой как выяснилось вот то в принципе да то есть на самом
[42:53.140 --> 42:58.140]  деле то есть в принципе для ну вот что-то для олимпиадных целей вот этих сведений уже
[42:58.140 --> 43:08.380]  достаточно то есть это уже достаточно обоснование что с мм работает быстро чего надо да да да ну
[43:08.380 --> 43:13.500]  понятно да вкупе сыно вот но я имею в виду достаточно как для лог звездочка но иметь в
[43:13.500 --> 43:21.780]  виду сейчас другое вот но как бы для науки возникает естественный вопрос а лог звездочка
[43:21.780 --> 43:29.860]  это оптимальная оценка нет потому что да идеальная оценка конечно была бы вообще если
[43:29.860 --> 43:35.020]  бы доказали что это все вообще за м плюсн работает в чем в общем так честно скажу на
[43:35.020 --> 43:38.740]  самом деле что-то последние дни вообще сюжет не могу для себя вообще нормально ощутить а
[43:38.740 --> 43:45.500]  почему это действительно вообще не почему одно сжатие пути не делается за м плюсн ну потому
[43:45.500 --> 43:50.220]  что смотрите ну просто интуитивно почему-то еще не того что заметим маленькую приятную вещь
[43:50.220 --> 43:56.740]  предположим что мы сначала сделали n-1 юнионов а потом делаем все файлы тогда я утверждаю что
[43:56.740 --> 44:03.340]  файлы сделаются за м плюсн но потому что просто потому что да мы пройдемся каким-то вершинам и
[44:03.340 --> 44:08.780]  у всех этих верев всех эти вершин начали с этого момента будут смотреть в корень вот почему-то там
[44:08.780 --> 44:13.700]  то есть возникает ощущение что и в процессе тоже там как-то амулитизировано можно тоже м плюсн
[44:13.700 --> 44:19.660]  выковать по камере так может показаться то есть да там видимо если доводить это до кого-то хоть
[44:19.660 --> 44:25.420]  какого-то формализма то будто там может быть те же эффекты что почему м-6 у нас за линию работает
[44:25.420 --> 44:30.620]  но там же тоже вот эти вот финальные но явно там же то константа наверно в рекурсию там распихать
[44:30.620 --> 44:36.780]  можно ноги но очевидно сюда вот да то есть ну то есть вот эффекта наверное видимо
[44:36.780 --> 44:43.460]  примерно те же и вот возникает вопрос а какая тут могла бы быть оптимальная но то есть какой
[44:43.460 --> 44:48.820]  может быть оптимальное время работы вот но тут на арене на арене наконец появляется роберт
[44:48.820 --> 44:56.740]  эндротариан вот это все в принципе тут без тарья на обошлись принципе и тарьян торжественно
[44:56.740 --> 45:09.580]  заявляет что нам нужна мистическая обратная функция керман а что-то похожее что-то похожее
[45:09.580 --> 45:17.580]  на нее да не совсем она то есть там надо точно выводить вот значит поэтому смотреть
[45:17.580 --> 45:25.340]  но то и осталось только теперь аккуратно подойти вообще выяснить а что это вообще такое да то есть
[45:25.340 --> 45:35.140]  пока можно сказать так что это будет еще более медленно растущая функция но растущая да так
[45:35.140 --> 45:44.740]  смотреть так ладно по вот этой вот так сказать водной части есть вопрос вот хорошо да сразу
[45:44.740 --> 45:49.220]  да сразу должен предупредить для полной понятности это возможно мы сейчас какие-то из этих фактов
[45:49.220 --> 45:54.820]  будем передоказывать но в более близко к общему доказать там к уже более сильному результаты
[45:54.820 --> 46:00.860]  интерпретации да и ну вот ну и в общем-то тут вот скажем для чистого сжатия путей там результат
[46:00.860 --> 46:11.500]  будет поточнее и так смотреть так все убираем лог звездочка все больше нам не понадобится
[46:11.500 --> 46:27.620]  по крайней мере в этом разделе значит смотреть но начнем вот с чего да сейчас я фактически
[46:27.620 --> 46:35.660]  снова вернусь к интерпретации когда у нас есть только сжатие путей но но и сделаем мы догадались
[46:35.660 --> 46:45.860]  теперь немножко по-другому там чуть-чуть более сложным образом вот значит смотрите давайте
[46:45.860 --> 46:53.500]  введем насеки значит во первых введем пару обозначений так во первых давайте тут т это у
[46:53.500 --> 47:08.260]  нас будет дерево юнионов значит это мы ввели значит что еще надо ввести ну эра тв так но
[47:08.260 --> 47:25.820]  тоже самое высота под дерево в вот так так а вот теперь аккуратненько значит смотрите
[47:25.820 --> 47:39.500]  т штрих от м это будет максимальное время работы время работы м файлов
[47:39.500 --> 47:47.260]  и вот с промежуточными
[47:47.260 --> 47:55.860]  н минус один юнионами
[47:59.860 --> 48:08.300]  вот при использовании лишь и в ристики сжатия путей вот поэтому и штрих
[48:08.300 --> 48:16.380]  лишь и в ристики сжатия путей
[48:26.380 --> 48:30.980]  вот то есть вот такая вот радость
[48:30.980 --> 48:40.940]  да пожалуй действительно будет наверно надо будет хорошо если это здесь буду
[48:40.940 --> 48:47.020]  использовать просто все понятия значит смотрите я будем так смотрите введем на
[48:47.020 --> 48:59.100]  четвердас появляются константы z и b да тут мы используем заклинание как бы зафиксируем
[48:59.100 --> 49:09.660]  константы которые выберем позже нет метод 4 русских тут ни при чем чего ну не важно да
[49:09.660 --> 49:20.980]  просто использовать мы будем крыша принципиально по-другому нет ага метод 8 русских которых и
[49:20.980 --> 49:26.940]  да которая почему-то да скрывается под псевдогимом роберта эндритариан да да да вот
[49:26.940 --> 49:36.220]  нет ну да а да сколько до сколько нужно русских чтобы изобрести константа нет
[49:36.220 --> 49:46.780]  вообще у сафобии у господи нет там никакой сафобии так начинайте значит значит теперь внимание
[49:46.780 --> 49:55.580]  значит z и b мы ввели если мы говорим а теперь внимание сейчас я введу z множество значит что
[49:55.580 --> 50:01.500]  я имею ввиду значит смотрите нет дело вот что значит я буду рассматривать ребра которые у
[50:01.500 --> 50:08.900]  меня возникают значит рассмотрим все все все все все вообще ребра которые возникают во всех
[50:08.900 --> 50:19.940]  вот этих файла вот прям вообще все вот так вот я и челюбра буду ну технология такая ребра будем
[50:19.940 --> 50:29.660]  разбивать на множество то есть множество этих будет у нас ну примерно z плюс один ну там плюс
[50:29.660 --> 50:38.100]  минус 1 3 там может быть вот и соответственно но вот и вот ну и мы будем пытаться от того
[50:38.100 --> 50:44.220]  значит оценивать сколько там сколько или сколько сколько ребер лежит в каждом множестве но то
[50:44.220 --> 50:49.620]  что по большому счету нам нужно оценить ровно коли вот это вот суммарное количество ребер с
[50:49.620 --> 50:59.220]  которым мы столкнемся за время вот все же эти путей правда логично да вот так вот значит
[51:00.100 --> 51:12.420]  и это множество это мы назовем f то есть пусть у нас f множество всех ребер встречающихся
[51:12.420 --> 51:35.740]  но-то в файлах вот так вот а вот дальше начинает прям самое интересное внимание значит для нас
[51:35.740 --> 51:48.820]  значит м и т где и у нас один меньше либо равно и меньше либо равно z это вот что это множество
[51:48.820 --> 52:03.940]  таких ребер w да ребра у нас ориентированных родителей напоминаю таких таких что значит
[52:03.940 --> 52:16.980]  во-первых существует такое g что b в степени g тьфу неправильно b в степени и на g меньше
[52:16.980 --> 52:34.860]  либо равно erotw меньше чем erotw меньше чем b в степени и на g плюс один и и это вот это вот
[52:34.860 --> 52:52.500]  вот да и существует такое k что b в степени и минус 1 на неправильно неправильно неправильно
[52:53.100 --> 53:06.980]  где оказывается что erotw меньше чем b в степени и минус 1 на k меньше либо равно чем erotw
[53:06.980 --> 53:27.420]  что что да нет но ты херю ну то есть ну скажем так можно сказать так у каждой
[53:27.420 --> 53:34.220]  вершины в есть какие-то ребра которые ведут ее в каких-то родителей да там там файлы могут
[53:34.220 --> 53:45.420]  это там это там ребра перенаправлять вот я хочу здесь хранить в все вот просто все версии вот так
[53:45.420 --> 53:54.540]  да остается только самое малость собственно попытаться понять а что это вообще значит ну
[53:54.540 --> 54:02.740]  можно это ну тарьян здесь дает простое интерпретацию если то есть если вы рассмотрите число то есть эти
[54:02.740 --> 54:09.900]  ранги в b и чной системе исчисления для этого может не помешала бы что написать чтобы больше
[54:09.900 --> 54:16.420]  либо равно двух но не ладно вот то тогда можно заметно тогда вот эти утверждения говорят просто
[54:16.420 --> 54:27.620]  следующее то есть они говорят что различия идут ровно в последних и битах разрядах ну то есть
[54:27.620 --> 54:36.180]  в этом разряде и старших разрядах различия нет а вот вы минус первым есть вот что по сути мы на
[54:36.180 --> 54:44.300]  самом деле и говорим вот но на самом деле нам будет полезно немножко другая интерпретация значит
[54:44.300 --> 54:55.260]  смотреть давайте ка значит выписываем тут кое-что вот ну например вот выпишем вот эти вот ряды
[54:55.260 --> 55:10.500]  1 вот табличку это круче с напишу 1 2 3 4 5 и так далее z вот и напишу я тут примерно следующее то есть
[55:10.500 --> 55:36.100]  напишем так значит давайте напишем 0 2 3 4 5 6 7 8 9 вот здесь напишем 0 в квадрат 2 в квадрат 3
[55:36.100 --> 55:49.020]  б квадрат 4 б квадрат там 5 б квадрат там 6 б квадрат там и так далее вот так тут мы напишем
[55:49.020 --> 56:09.500]  тоже самое прокуп вот вот но принципы поняли вот ну как бы да вот число на число называешь
[56:09.500 --> 56:22.180]  город вот то есть что такое м и т то есть как бы то есть ребро vw хоть попадает в ранг этого если
[56:22.180 --> 56:28.620]  я оба этих ранга там могу вставить между как какими-то двумя соседними числами вы там допустим
[56:28.620 --> 56:34.260]  соответствующие строчки то есть ранг 3 это означает что я вот куда-то вот между вот этими
[56:34.260 --> 56:40.820]  чиселками вот это включить на это нет вставить их могу а вот предыдущие строчки я этого сделать
[56:40.820 --> 56:52.340]  не могу понимаете да да есть такой интерпрета но вот вот можно даже предъявить еще одну
[56:52.340 --> 56:59.700]  интерпретацию просто давайте я сейчас да значит я сейчас попробую привести интерпретацию где
[56:59.700 --> 57:07.100]  б равно ну допустим ну что мне привязываться к степени двойки 3 смотрите на самом деле
[57:07.100 --> 57:12.060]  проинтерпретировать можно так смотрите возьмем числовую прямую и будет у нас тут чиселки да
[57:12.060 --> 57:41.500]  допустим 1 2 там 3 4 там 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
[57:41.500 --> 58:01.380]  27 28 29 30 31 32 33 34 вот ну допустим значит смотрите так вот что у нас будет в первой строчке
[58:01.380 --> 58:19.180]  в первой строчке у нас будут числа 3 там ну помимо нуля 0 3 6 9 12 15 18 21 24 27 30 33 следующей
[58:19.180 --> 58:28.300]  строчке будут уже б квадраты то есть 9 18 там 27 ну и так далее тут будет только 27 да ну и
[58:28.420 --> 58:38.460]  вот то есть на самом деле полезно это понимать так то есть фактически есть у меня есть два
[58:38.460 --> 58:46.980]  ранга где-нибудь встретили там ребро ведет из ранга 11 допустим в ранг ну допустим 16 тогда получается
[58:46.980 --> 58:54.820]  что ранг этого ребра оказывается сколько у нас получается получается два почему два потому что
[58:54.820 --> 58:59.220]  здесь эти две точки можно вставить вот между девятью и восемнадцатью вот тут вот в этот
[58:59.220 --> 59:06.020]  вот гэп оно помещается а вот в более мелкие гэпы на уровне 1 оно уже не помещается то есть
[59:06.020 --> 59:18.500]  между ними есть вот это вот от мне точка вот а если бы ребро было допустим из ранга 6 в ранг
[59:18.500 --> 59:27.300]  куда-нибудь там 25 то тогда ну так и 6 25 то тогда тут бы оказалось что это ребро оказалось бы в
[59:27.300 --> 59:34.980]  третьем множестве потому что вот наоборот во втором тут уже 9 18 возник понимаете да вот такая
[59:34.980 --> 59:46.100]  полезная штука да ну и в качестве добивочки мы себе еще скажем что м и плюс первая таки м
[59:46.100 --> 59:56.820]  z плюс первая чтобы это могло быть как вы думаете ну да f минус объединение м этих предыдущих да ну
[59:56.820 --> 01:00:06.500]  здесь в общем-то вот да теперь можно гордо заявить что м это объединение по парной нот
[01:00:06.500 --> 01:00:16.780]  что множество м и теперь образуют разбиение множество f вот такое вот не хитрый
[01:00:16.780 --> 01:00:24.460]  значит поехали то есть вот такая нот то есть вот такая у нас интерпретация будет
[01:00:24.460 --> 01:00:37.940]  так ну поехали теперь так где что все писать то теперь так как это табличку жалко и это
[01:00:37.940 --> 01:00:54.780]  ну ладно но впрочем дамы теперь можем все это убрать вот
[01:00:54.780 --> 01:01:19.260]  вот значит смотрите значит поехали так а нет ой еще не все ой ой ой а теперь смотрите значит
[01:01:19.260 --> 01:01:25.100]  как бы сейчас мы да как бы мы конечно стерли но у нас остается последний привет от того что мы
[01:01:25.100 --> 01:01:39.740]  стерли а привет такой и и т значит множество элита это множество таких ребер в дабл ю из такой м и т
[01:01:39.740 --> 01:01:55.980]  что но вот что произошел хотя бы один файнт вот я в таком так сформулирую произошел хотя бы
[01:01:55.980 --> 01:02:21.940]  один файнт хотя бы один файнт хотя бы один файнт во время которого время которого в дабл ю оказалось
[01:02:21.940 --> 01:02:45.540]  последним ребром из м и ну последним в каком смысле то есть у нас во время файта мы обрабатываем
[01:02:45.540 --> 01:02:55.700]  какой-то путь правда так уже умерли да и ребят рано рано вам еще умирать
[01:02:55.700 --> 01:03:08.340]  не просто нет просто будут ли у вас так какие вас более сложные курсы вот а нет
[01:03:08.340 --> 01:03:13.300]  вас вот статы еще будут до раны еще умирать да а у вас будут вот статы и шубастом будут еще
[01:03:13.300 --> 01:03:26.660]  да так но вот нет посмотри просто пока еще тут ничего страшного просто не происходит мы еще
[01:03:26.660 --> 01:03:31.380]  мы еще не увидели обратную функцию кермана это понимаешь она растет так медленно что не
[01:03:31.380 --> 01:03:38.060]  заснуть невозможно но все-таки вот а что тут имеется ввиду но имеется в виду что мы рассматриваем
[01:03:38.060 --> 01:03:44.740]  ребра как и как каждый из этих ребят принадлежит какому-то множеству да но и более того какие-то
[01:03:44.740 --> 01:03:49.820]  из этих ребят принадлежат и тому но соответственно в дабл значит нас интересует последний из них
[01:03:49.820 --> 01:04:02.020]  ну последнее в плане наиболее близко к оке понятно да все тут тут все однозначно вот значит
[01:04:02.020 --> 01:04:10.580]  смотрите а теперь начинаем интеллектуальные леммы значит первая интеллектуальная лемма
[01:04:10.580 --> 01:04:16.700]  как говорится до степень комыча до кавычек в слове интеллектуальные подставьте самостоятельно
[01:04:32.020 --> 01:04:41.740]  ну-ка давайте так кто-то вот кто мне может четко сформулировать откуда это взялось
[01:04:41.740 --> 01:04:53.860]  так
[01:04:53.860 --> 01:05:06.900]  ну да по определению слова последний да да действительно да действительно все это заметят
[01:05:06.900 --> 01:05:12.660]  что каждый файнт дает нам в элите не более чем одно ребро то самое последнее но его почему не
[01:05:12.660 --> 01:05:19.740]  более потому что могло там этих ребер и не быть вообще вот так что да здесь получается то есть
[01:05:19.740 --> 01:05:27.300]  один файнт один вот это вот да последние ребра мы рассмотрели но теперь надо рассмотреть не
[01:05:27.300 --> 01:05:35.580]  последние и вот здесь уже оказывается чуть более интеллектуальное утверждение которое говорит
[01:05:35.580 --> 01:05:46.740]  нам что если я рассмотрю размер множество элитово значит м это минус элиты правда с оговорочкой
[01:05:46.740 --> 01:06:00.820]  при 1 меньше либо равно и меньше либо равно z на этот раз аша минус backslash короче вот скажем
[01:06:00.820 --> 01:06:09.460]  так да просто тарьян почему-то так пишет я не знаю но если тарьян пишет кто мы такие шубы да нет
[01:06:09.460 --> 01:06:13.580]  ладно мы как бы наглые поэтому да нет мы там будем в одном месте наглеть в любом случае потому
[01:06:13.580 --> 01:06:17.580]  что честно там в одном месте будет утверждение про 5 восьмых а я не понял откуда там 5 восьмых
[01:06:17.580 --> 01:06:26.020]  поэтому написал два тоже сработала нет может вы меня сейчас завалите я не знаю нет если вы
[01:06:26.020 --> 01:06:31.860]  конечно будете спать вы меня не завалите да вот да поэтому потом пойдете на экзамены
[01:06:31.860 --> 01:06:41.820]  воззвалю я если конечно не буду спать я а тогда как говорится вы прослушали миниатюру как на
[01:06:41.820 --> 01:06:51.980]  фистехе идет учеба да так вот ладно так ну наверное наивно полагает что на этом лево утверждение
[01:06:52.140 --> 01:07:02.380]  заканчивается так вот а вот это уже звучит больше-то да
[01:07:02.380 --> 01:07:20.420]  нет это вот оно да нет да и извините есть это сонный поэтому пишу одним светом поэтому да
[01:07:20.420 --> 01:07:29.340]  их надо было сказать что за это коричневая об этом зеленая да вот вот это все но вот вот увы все
[01:07:29.340 --> 01:07:35.180]  у нас все монотонно вообще как как это как статья у тарьяна да конечно нету редкий случай ни одной
[01:07:35.180 --> 01:07:44.700]  картинки вообще вот нет это не история ну взято да кстати да я есть вам покажется статья тарьяна
[01:07:44.700 --> 01:07:49.500]  что за судьбой тарьяна читать очень сложно есть альтернативный источник дело в том что где-то в
[01:07:49.500 --> 01:07:56.220]  двадцать первом году на эту тему на про вот это вот все прочитал лекцию павел маврин но то есть
[01:07:56.220 --> 01:08:01.460]  там буквально на ютубе можно лекцию найти правда там не тревелить то есть там алгоритмы там курсом
[01:08:01.460 --> 01:08:06.940]  algorithms and data structures да он его там частично русском читал частично английском ну или параллельно
[01:08:06.940 --> 01:08:13.660]  там что-то такое вот и где-то там в дополнительных во второй дополнительной лекции он рассказал
[01:08:13.660 --> 01:08:19.700]  вот это вот так вот картинка взята вот действительно очень рекомендую на самом деле
[01:08:19.700 --> 01:08:25.060]  что-то говорит он по-английски но как бы вот говорит о таком английском что как бы там вы все
[01:08:25.060 --> 01:08:35.500]  поймете даже если там по-английски не говорить то есть там очень простой английский что ну нет ну
[01:08:35.500 --> 01:08:43.220]  может все-таки алгоритм но в общем короче там там понятно вот так я просто я знаю о чем говорил
[01:08:43.220 --> 01:08:47.980]  как человек который там который по англии я по английски не говорю но там ну у него там все понятно
[01:08:47.980 --> 01:08:57.980]  вот значит а треть значит давайте разбираться давайте разбираться откуда мы такой в нот откуда
[01:08:57.980 --> 01:09:05.340]  мы такое берем а берем это вот откуда вот давайте докажем что м третье без л третьего не превосходит
[01:09:05.560 --> 01:09:15.320]  вот давайте с plötzlich то потому что это не последний ребро ранга и то есть это означает
[01:09:15.320 --> 01:09:20.940]  следующее что у нас тут есть то есть она допустила да ранга два так удобнее будет то судно за
[01:09:20.940 --> 01:09:26.280]  чает что у нас наш путик вот как-то так устроим вот там шел у нас путь стоп у то есть плеске
[01:09:26.280 --> 01:09:32.440]  скакали скакали скакали скакали вот у нас нашлось ребро допустим будет дорога два а тут
[01:09:32.440 --> 01:09:38.040]  мы скакали, скакали и еще нашли ребро ранга 2, а потом может и даже еще. Да, тут
[01:09:38.040 --> 01:09:45.920]  может быть перескока через 2 чиселки, пожалуйста. Вот, но теперь заметим следующее,
[01:09:45.920 --> 01:09:52.840]  какая у нас основная идея. То есть заметим, что раз вот это вот ребро ранга и оно не последнее,
[01:09:52.840 --> 01:09:59.080]  то есть тут вот перескок через чиселку и в будущем еще через чиселку будет, то когда мы сожмем
[01:09:59.080 --> 01:10:06.080]  пути, то есть это ребро может остаться ранга 2, но при этом перескакивать оно будет уже не через
[01:10:06.080 --> 01:10:16.600]  одно число, а как минимум через два. То есть количество чисел, ну вот, а это кстати да, в данном
[01:10:16.600 --> 01:10:23.840]  случае как бы ранг у нас получается 3 получается. То есть это ребро может остаться ранга 3,
[01:10:23.840 --> 01:10:29.920]  но оно перескакивать уже будет через большее количество чиселок, лежащих во втором ряду,
[01:10:29.920 --> 01:10:39.440]  правда. Но теперь заметим следующее, что между двумя чиселками третьего ряда у нас сколько
[01:10:39.440 --> 01:10:47.720]  находится чиселок, вот сколько вот этих чиселок находится. Ну вот их, ну можно сказать даже меньше,
[01:10:47.720 --> 01:10:59.800]  то есть в формале ряда даже b-1. Вот, действительно. Вот, но действительно их там соответственно b,
[01:10:59.800 --> 01:11:04.120]  ну то есть можно там доказательства было проводить из вот интерпретации про боичную
[01:11:04.120 --> 01:11:10.400]  систему счисления, что там как бы вот эти вот последние там допустим, последние и биты они
[01:11:10.400 --> 01:11:14.560]  там увеличиваются, увеличиваться они могут там, то есть вот это и минус первый бит увеличивается,
[01:11:14.560 --> 01:11:19.760]  он увеличивается не более чем b раз, поэтому и, но кажется вот так вот визуально понятнее, правда.
[01:11:19.760 --> 01:11:25.440]  Вот, поэтому мы оставим это bn, хотя кажется, хотя есть такой интерпретация кажется можно уже
[01:11:25.440 --> 01:11:35.840]  и b-1 написать в принципе тоже верно будет. Вот, соответственно. Вот, так же такая вот у нас получается
[01:11:35.840 --> 01:12:05.840]  красота. Значит, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да,
[01:12:05.840 --> 01:12:35.840]  да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да, да,
[01:12:35.840 --> 01:12:37.840]  да, да, да, да, да, да, да, да.
[01:13:05.840 --> 01:13:20.340]  Лемма 3 говорит нам, что mz плюс 1 без lz плюс 1, она меньше либо равна, чем внезапно вот столько.
[01:13:34.340 --> 01:13:35.340]  Это z.
[01:13:36.340 --> 01:13:37.340]  Что из?
[01:13:40.340 --> 01:13:43.340]  Ну да, они же отличаются.
[01:13:44.340 --> 01:13:45.340]  Нет? Ну ладно.
[01:13:46.840 --> 01:13:47.840]  Ну хорошо, да.
[01:13:48.840 --> 01:13:50.340]  Ладно, да, да, да, да, да, да.
[01:13:53.340 --> 01:13:54.340]  Вот помогло.
[01:13:58.340 --> 01:14:00.340]  Нет, тут b в степени z.
[01:14:06.340 --> 01:14:07.340]  Вот.
[01:14:08.340 --> 01:14:11.340]  Ну фишка, ну идея на самом деле легче проста.
[01:14:13.340 --> 01:14:18.340]  Потому что что означает, ну вот, потому что что означает z плюс первое множество?
[01:14:19.340 --> 01:14:24.340]  Это означает, что у нас, ну потому что что у нас тут находится в z-том ряду?
[01:14:25.340 --> 01:14:33.340]  В z-том ряду находится число 0, b в степени z, 2 b в степени z, 3 b в степени z и так далее, да?
[01:14:33.840 --> 01:14:36.840]  И что означает, что у нас ребро ранга z плюс 1?
[01:14:37.840 --> 01:14:44.840]  Это означает, что ребро имеет перескох через вот какой-то вот b в степени z, может даже не через 1, да?
[01:14:45.840 --> 01:14:46.840]  Понимаете, да?
[01:14:48.840 --> 01:14:56.840]  Но тогда замечаем, что если у нас есть какая-то фиксированная вершина v, да, то каждый раз, когда это ребро было не последним,
[01:14:57.340 --> 01:15:06.340]  и это ребро, там, not и ребро, соответственно, мы тут сделали сжатие, то тогда оно стало перескакивать через большее количество чисел.
[01:15:09.340 --> 01:15:15.340]  А чисел всего, ну так как заметим, что ранг, то у нас, наверное, больше n не бывает.
[01:15:17.340 --> 01:15:18.340]  Ну есть такое подозрение, да?
[01:15:19.340 --> 01:15:20.340]  Вот.
[01:15:20.840 --> 01:15:21.840]  Вот.
[01:15:24.840 --> 01:15:28.840]  Ну вот, сейчас мы же про, так сейчас мы что, мы сейчас про ранговую, ну да.
[01:15:29.840 --> 01:15:30.840]  Вот.
[01:15:32.840 --> 01:15:34.840]  То есть, а почему n квадрат тогда вообще?
[01:15:37.840 --> 01:15:45.840]  Нет, ну просто в том плане, что, а, почему, да, да, нет, просто возникло ощущение, у нас же рангов бывает всего, логарифм.
[01:15:47.840 --> 01:15:49.840]  Да, мы видим, угу.
[01:15:50.840 --> 01:15:54.840]  Да, как говорится, тут на секунду быстрее я вспоминаю, что, а кто сказал?
[01:15:55.840 --> 01:16:00.840]  Заметьте, пока этого никто не сказал, потому что мы живем в мире только с эвристикой решения путей.
[01:16:01.840 --> 01:16:04.840]  Поэтому пока у нас ранг может быть n.
[01:16:05.840 --> 01:16:06.840]  Ладно, минус один.
[01:16:07.840 --> 01:16:08.840]  Вот.
[01:16:11.840 --> 01:16:15.840]  Поэтому получается, что перескоков тут все-таки может быть n делить на b в степени z.
[01:16:16.340 --> 01:16:22.340]  Всего у нас свершен n, поэтому получился вот это и еще там n зачем-то добавилось.
[01:16:23.340 --> 01:16:25.340]  Кстати, непонятно зачем.
[01:16:30.340 --> 01:16:31.340]  Вот.
[01:16:33.340 --> 01:16:34.340]  Ну, ну да.
[01:16:35.340 --> 01:16:36.340]  Ну давайте так.
[01:16:37.340 --> 01:16:45.340]  Ладно, честно, ну вот, то есть не знаю, тут вот честно, везде, в этом месте как бы да, почему-то ошибиться страшно, поэтому Тарьян сказал и мы поверим, да.
[01:16:46.340 --> 01:16:48.340]  Хотя тут, конечно, немножко перестраховочно.
[01:16:49.340 --> 01:16:54.340]  Хотя, да, кстати, да, у нас нет, к сожалению, возможно позвать сюда Тарьяна и спросить, а может это уберем.
[01:16:55.340 --> 01:16:59.340]  Но в любом случае, ладно, я думаю, вы до радости, что в общем, глобально это мелочи.
[01:17:00.340 --> 01:17:01.340]  Вот.
[01:17:03.340 --> 01:17:07.340]  Да, то есть там вот, хотя казалось бы, да, последние ребра, да.
[01:17:08.340 --> 01:17:11.340]  Но да, то есть перескок должен, в общем, да, странно.
[01:17:11.840 --> 01:17:15.840]  Вот это вот еще, короче, поставим с вопросиком, потому что может это и не надо.
[01:17:18.840 --> 01:17:23.840]  Как-то, как говорил Маяковский, впрочем, может это и не нужно.
[01:17:24.840 --> 01:17:25.840]  Вот.
[01:17:26.840 --> 01:17:28.840]  А, нет, у нас нет леммы 4.
[01:17:29.840 --> 01:17:30.840]  Да, есть теоремы 4, да.
[01:17:31.840 --> 01:17:32.840]  О, вы уже открыли статью.
[01:17:34.840 --> 01:17:35.840]  Да, логично, да.
[01:17:36.840 --> 01:17:37.840]  А вы уже не понимаете логику Тарьяна, да.
[01:17:38.340 --> 01:17:40.340]  Ну, хотя логично, да, мы уже там, по-моему, да.
[01:17:41.340 --> 01:17:45.340]  А, ну, в общем, по-моему, в этом семестре пока только Тарьяна мы занимаемся, в общем-то, поэтому да.
[01:17:49.340 --> 01:17:50.340]  Не будет.
[01:17:51.340 --> 01:17:54.340]  Нет, тут, тут, видите, сквозная дуберация, поэтому как бы да.
[01:17:55.340 --> 01:17:56.340]  Так вот, теоремы 4.
[01:17:59.340 --> 01:18:01.340]  Модуль F не превосходит.
[01:18:04.340 --> 01:18:05.340]  Смотрите.
[01:18:05.840 --> 01:18:06.840]  Смотрите.
[01:18:07.840 --> 01:18:32.840]  3m умножить на максимум из единицы и, значит, округлённого вверх двоичного логарифма n² делить на m, делённого на логарифом двоичный, округлённого вниз 2m поделить на n.
[01:18:33.340 --> 01:18:35.340]  Вот, тут округлённого вниз, тут округлённого вверх.
[01:18:38.340 --> 01:18:39.340]  Нет.
[01:18:42.340 --> 01:18:45.340]  Нет. И плюс 2m плюс n.
[01:18:46.340 --> 01:18:47.340]  Да, знаете.
[01:18:48.340 --> 01:18:49.340]  Ну да.
[01:18:50.340 --> 01:18:51.340]  Господи.
[01:18:52.340 --> 01:18:56.340]  Ну да, делать на кассете, надо писать это утверждение, потом повернуться в камеру и сказать, а вам слабо.
[01:18:59.340 --> 01:19:02.340]  А, вы уже этого не достали, да.
[01:19:03.340 --> 01:19:08.340]  Хотя, ладно, передача закрылась только в прошлом году, как выяснилось.
[01:19:09.340 --> 01:19:12.340]  Да, открылась в 95-м, да, 96-м.
[01:19:13.340 --> 01:19:14.340]  Вот.
[01:19:15.340 --> 01:19:17.340]  Ну ладно, сейчас-то действительно уже неактуальная передача.
[01:19:18.340 --> 01:19:19.340]  Так вот.
[01:19:20.340 --> 01:19:23.340]  Ой, а n² делить на m, он же тоже должен был, наверное.
[01:19:24.340 --> 01:19:25.340]  Ну ладно, ладно, переживём.
[01:19:26.340 --> 01:19:27.340]  Вот.
[01:19:28.340 --> 01:19:29.340]  Вот.
[01:19:30.340 --> 01:19:31.340]  То есть, что это значит?
[01:19:31.840 --> 01:19:32.840]  Это в принципе означает, что...
[01:19:33.840 --> 01:19:34.840]  Да, вообще-то почему это сирема?
[01:19:35.840 --> 01:19:36.840]  Потому что в принципе это означает, что...
[01:19:37.840 --> 01:19:45.840]  Потому что фактически она нам заявляет, что mfind'ов на самом деле у нас работают за o от m на вот это вот.
[01:19:46.840 --> 01:19:47.840]  Ладно, это будет следствие 5, хорошо.
[01:19:49.840 --> 01:19:50.840]  Вот.
[01:19:51.840 --> 01:19:53.840]  Значит, давайте смотреть, откуда мы это берём.
[01:19:54.840 --> 01:19:56.840]  Ну потому что, значит, тут давайте попишем.
[01:19:57.340 --> 01:20:01.340]  Значит, потому что заметим, что модуль f меньше либо равен...
[01:20:02.340 --> 01:20:05.340]  Ну давайте, вот у нас тут трилеммы написаны, давайте всё это просуммируем.
[01:20:06.340 --> 01:20:13.340]  Так, ну во-первых, ну потому что модуль f это что такое?
[01:20:14.340 --> 01:20:23.340]  Это сумма размеров всех элитых, плюс сумма размеров всех эмитых без элитых.
[01:20:23.840 --> 01:20:24.840]  Вот.
[01:20:25.840 --> 01:20:27.840]  Ну, в общем, опять тагодрок и шахты с нами, да?
[01:20:28.840 --> 01:20:29.840]  Вот.
[01:20:30.840 --> 01:20:31.840]  Вот.
[01:20:32.840 --> 01:20:33.840]  Значит, это у нас не превосходит.
[01:20:34.840 --> 01:20:36.840]  m на z плюс 1 получается.
[01:20:38.840 --> 01:20:40.840]  Плюс, что у нас там происходит?
[01:20:41.840 --> 01:20:44.840]  Ну вот, плюс значит bnz.
[01:20:46.840 --> 01:20:47.840]  Вот, не путать с dmz.
[01:20:48.840 --> 01:20:49.840]  Так.
[01:20:50.840 --> 01:20:51.840]  Вот.
[01:20:52.340 --> 01:20:53.340]  Вот.
[01:20:54.340 --> 01:20:55.340]  Не путайте, молодцы.
[01:20:56.340 --> 01:20:57.340]  Вот.
[01:20:58.340 --> 01:21:00.340]  И плюс n квадрат, ну давайте вот напишем, как тут написано.
[01:21:01.340 --> 01:21:02.340]  Так.
[01:21:03.340 --> 01:21:04.340]  Плюс n.
[01:21:05.340 --> 01:21:06.340]  Вот.
[01:21:08.340 --> 01:21:09.340]  Топереча.
[01:21:10.340 --> 01:21:12.340]  Ну, наверное, пришло время ввести b и z.
[01:21:17.340 --> 01:21:18.340]  Значит, это меньше либо...
[01:21:19.340 --> 01:21:20.340]  Значит, давайте так скажем.
[01:21:20.840 --> 01:21:21.840]  B у нас неожиданно равно.
[01:21:24.840 --> 01:21:25.840]  Ну, к чему бы у нас сделать b?
[01:21:27.840 --> 01:21:31.840]  Ну, наверное, логично было бы, чтобы вот как-то этот n убился.
[01:21:32.840 --> 01:21:34.840]  Ну, по крайней мере, такая мысль возникает.
[01:21:36.840 --> 01:21:37.840]  Нет.
[01:21:38.840 --> 01:21:39.840]  2m делить на n.
[01:21:40.840 --> 01:21:41.840]  Вот.
[01:21:42.840 --> 01:21:43.840]  Ну, m-то по-любому есть, куда жди.
[01:21:44.840 --> 01:21:45.840]  Значит, 2m делить на n.
[01:21:46.340 --> 01:21:50.340]  Значит, и это получается меньше либо равно.
[01:21:52.340 --> 01:21:53.340]  Значит, меньше либо равно.
[01:21:54.340 --> 01:21:55.340]  Пока все то же самое.
[01:21:56.340 --> 01:21:57.340]  Значит...
[01:21:58.340 --> 01:22:01.340]  Значит, пока m на z плюс 1 плюс n.
[01:22:02.340 --> 01:22:03.340]  Плюс...
[01:22:04.340 --> 01:22:05.340]  Что там?
[01:22:06.340 --> 01:22:08.340]  Ну, тут пишем, допустим, 2mz.
[01:22:11.340 --> 01:22:12.340]  Плюс...
[01:22:13.340 --> 01:22:14.340]  Значит, смотрите, n квадрат.
[01:22:14.840 --> 01:22:21.840]  Делить на вот это вот безобразие в степени z.
[01:22:24.840 --> 01:22:25.840]  Так.
[01:22:26.840 --> 01:22:29.840]  Ну, спрашивайте, как вы думаете, чему же нам сделать z?
[01:22:32.840 --> 01:22:33.840]  Чего?
[01:22:36.840 --> 01:22:37.840]  Ну, да.
[01:22:38.840 --> 01:22:39.840]  Только не совсем.
[01:22:40.340 --> 01:22:46.340]  Смотрите, нужно, чтобы вот эта вот степень убила n квадрат и тут стало что-то удобоворимое.
[01:22:47.340 --> 01:22:49.340]  Ну, и z не сильно большой.
[01:22:50.340 --> 01:22:51.340]  Вот.
[01:22:51.340 --> 01:22:53.340]  Поэтому мы сделаем неожиданное.
[01:22:54.340 --> 01:22:55.340]  z мы сделаем...
[01:23:02.340 --> 01:23:04.340]  Ну, хотя, логично, чему мы сделаем z.
[01:23:05.340 --> 01:23:08.340]  Уже очевидно, на самом деле, с формулевки теоремы, чему мы должны его сделать.
[01:23:08.840 --> 01:23:12.840]  Максимум из 1 и вот это вот.
[01:23:16.840 --> 01:23:17.840]  Понятно.
[01:23:18.840 --> 01:23:19.840]  Вот.
[01:23:19.840 --> 01:23:20.840]  Ну, да.
[01:23:21.840 --> 01:23:22.840]  Понятно.
[01:23:24.840 --> 01:23:25.840]  Вот.
[01:23:27.840 --> 01:23:28.840]  Нет, тут что?
[01:23:28.840 --> 01:23:29.840]  Ну, просто как бы...
[01:23:30.840 --> 01:23:32.840]  Просто аккуратно подставим, чтобы получилось оптимально.
[01:23:33.840 --> 01:23:34.840]  Вот.
[01:23:34.840 --> 01:23:35.840]  Значит, если я это z подставлю...
[01:23:35.840 --> 01:23:36.840]  Да.
[01:23:37.340 --> 01:23:39.340]  Ну, это округление можно снять.
[01:23:39.340 --> 01:23:41.340]  Ну, нам, к сожалению, нужна округление.
[01:23:41.340 --> 01:23:42.340]  Почему?
[01:23:42.340 --> 01:23:43.340]  Потому что у нас b и z целые.
[01:23:43.340 --> 01:23:45.340]  Этот тут ничего не пойдет.
[01:23:45.340 --> 01:23:46.340]  Хотя...
[01:23:46.340 --> 01:23:47.340]  Ну, да.
[01:23:47.340 --> 01:23:48.340]  Чистее...
[01:23:48.340 --> 01:23:49.340]  Ну, так же.
[01:23:49.340 --> 01:23:50.340]  Ну, хотя, не знаю, да.
[01:23:50.340 --> 01:23:53.340]  Ну, z нам нужно целое, потому что у нас количество уровней.
[01:23:54.340 --> 01:23:55.340]  Вот b...
[01:23:56.340 --> 01:23:57.340]  Доверно, да.
[01:23:57.340 --> 01:23:58.340]  В принципе, не так принципиально.
[01:23:58.340 --> 01:23:59.340]  Вот.
[01:24:00.340 --> 01:24:01.340]  Нет.
[01:24:01.340 --> 01:24:02.340]  Ну, просто так, чтобы вот.
[01:24:02.340 --> 01:24:03.340]  Отметки были, а так...
[01:24:04.340 --> 01:24:06.340]  Ну, так просто удобнее просто мыслить.
[01:24:06.840 --> 01:24:07.840]  То есть, на самом деле, как бы...
[01:24:07.840 --> 01:24:09.840]  Ничего страшного тут на самом деле не происходит.
[01:24:10.840 --> 01:24:12.840]  Значит, берем этот максимум.
[01:24:13.840 --> 01:24:14.840]  Так.
[01:24:14.840 --> 01:24:15.840]  Ну, вот это...
[01:24:15.840 --> 01:24:18.840]  Ну, вот и получается, что это не превосходит, соответственно...
[01:24:18.840 --> 01:24:21.840]  Ну, раз z у нас как минимум единица, то...
[01:24:21.840 --> 01:24:23.840]  Получается не менее, чем я пока напишу.
[01:24:23.840 --> 01:24:25.840]  Там 2mz.
[01:24:27.840 --> 01:24:28.840]  А, ладно, нет.
[01:24:29.840 --> 01:24:30.840]  Тут надо так.
[01:24:30.840 --> 01:24:31.840]  3mz.
[01:24:31.840 --> 01:24:33.840]  Пока plus m, plus n.
[01:24:33.840 --> 01:24:34.840]  Плюс.
[01:24:34.840 --> 01:24:35.840]  И что я тут напишу?
[01:24:36.340 --> 01:24:38.340]  И тут я напишу, фактически, n квадрат.
[01:24:40.340 --> 01:24:41.340]  Вот.
[01:24:43.340 --> 01:24:44.340]  Да.
[01:24:44.340 --> 01:24:45.340]  А, ой.
[01:24:45.340 --> 01:24:46.340]  Ой-ой-ой-ой.
[01:24:46.340 --> 01:24:47.340]  Кошмар какой.
[01:24:47.340 --> 01:24:48.340]  Так.
[01:24:48.340 --> 01:24:49.340]  Вот.
[01:24:49.340 --> 01:24:50.340]  Значит, тут получается...
[01:24:50.340 --> 01:24:55.340]  Значит, это не больше 2m делить на n в степени...
[01:24:55.340 --> 01:24:59.840]  Логарифм двоичный n квадрат делить на m делить на логарифм
[01:24:59.840 --> 01:25:02.340]  двоичный вот этого вот.
[01:25:03.340 --> 01:25:04.340]  Вот.
[01:25:06.340 --> 01:25:07.340]  Ну, скажем так.
[01:25:07.340 --> 01:25:10.340]  Ну, почему я так тут могу вот применьше либо равно
[01:25:10.340 --> 01:25:11.340]  написать?
[01:25:11.340 --> 01:25:13.340]  Потому что я это число могу спокойно уменьшать.
[01:25:13.340 --> 01:25:14.340]  Да, то есть это...
[01:25:14.340 --> 01:25:15.840]  Чтобы уменьшить, я уменьшаю z.
[01:25:15.840 --> 01:25:18.840]  А чтобы уменьшить z, я могу как минимум снять это округление
[01:25:18.840 --> 01:25:19.840]  и забить на эту единицу.
[01:25:20.840 --> 01:25:24.840]  И еще воспользоваться маленьким приятным утверждением из алгебры.
[01:25:25.840 --> 01:25:32.840]  Что a в степени лог два b делить на лог два a равно b.
[01:25:35.840 --> 01:25:36.840]  Да.
[01:25:36.840 --> 01:25:37.840]  Мало кто знает.
[01:25:37.840 --> 01:25:41.840]  Да, в таком виде, конечно, точетство не очень известно,
[01:25:41.840 --> 01:25:44.840]  но если это просто заметить, что это равно в степени
[01:25:44.840 --> 01:25:48.840]  лог а b, и тогда это уже просто определение логарифма,
[01:25:48.840 --> 01:25:50.840]  то становится все в порядке.
[01:25:50.840 --> 01:25:51.840]  Вот.
[01:25:52.840 --> 01:25:54.840]  То есть, видите, получается...
[01:25:54.840 --> 01:26:01.840]  Получилось у меня в итоге 3mz плюс 2m плюс n.
[01:26:02.840 --> 01:26:05.840]  Ну, в принципе, все.
[01:26:06.840 --> 01:26:07.840]  Вот.
[01:26:09.840 --> 01:26:12.840]  То есть, такой вот получился красивый упихочек.
[01:26:12.840 --> 01:26:15.840]  Но, правда, заметим, что, как бы, нот...
[01:26:15.840 --> 01:26:17.840]  То есть, в общем-то, пока, конечно, мы...
[01:26:17.840 --> 01:26:19.840]  Что по сравнению с тем, что у нас было перед этим,
[01:26:19.840 --> 01:26:22.840]  в общем-то, не то чтобы мы сильно продвинулись.
[01:26:22.840 --> 01:26:25.840]  Потому что, например, при n равно m,
[01:26:25.840 --> 01:26:27.840]  вот давайте подставим, n равно m,
[01:26:27.840 --> 01:26:30.840]  это будет просто в явном виде логарифм.
[01:26:30.840 --> 01:26:32.840]  То есть, единственная разница заключается в том,
[01:26:32.840 --> 01:26:35.840]  что мы логарифм домножаем только на m,
[01:26:35.840 --> 01:26:37.840]  а на n мы как-то не домножаем.
[01:26:37.840 --> 01:26:38.840]  Ну, учитывая, что m больше либо но n,
[01:26:38.840 --> 01:26:40.840]  а симпатически нам это не помогает.
[01:26:40.840 --> 01:26:42.840]  Так, да, давайте зафиксируем результат.
[01:26:42.840 --> 01:26:44.840]  Следствие 5.
[01:26:46.840 --> 01:26:48.840]  t штрих от m, n.
[01:26:49.840 --> 01:26:51.840]  Как тут сформулировано?
[01:26:51.840 --> 01:26:56.840]  Не превосходит o от m на максимум из этого вот.
[01:26:57.840 --> 01:27:04.840]  1 и логарифм двоичный n квадрат делить на m.
[01:27:06.840 --> 01:27:08.840]  Делить на логарифм.
[01:27:08.840 --> 01:27:10.840]  Ну да, двоичный тут не обязательно даже писать,
[01:27:10.840 --> 01:27:13.840]  потому что лог поделить на лог и так понятно.
[01:27:15.840 --> 01:27:17.840]  Вот.
[01:27:17.840 --> 01:27:19.840]  То есть, в принципе, получается так.
[01:27:19.840 --> 01:27:22.840]  То есть, учетная стоимость вот этих...
[01:27:22.840 --> 01:27:25.840]  То есть, вот этих вот файндов,
[01:27:25.840 --> 01:27:27.840]  самих по себе даже файндов,
[01:27:27.840 --> 01:27:29.840]  потому что сами юнионы без файндов
[01:27:29.840 --> 01:27:31.840]  в общем-то делаются за единицу.
[01:27:31.840 --> 01:27:33.840]  То есть, она получается вот такая.
[01:27:33.840 --> 01:27:35.840]  То есть, на самом деле,
[01:27:35.840 --> 01:27:37.840]  это чуть более продвинутый результат, чем лог n.
[01:27:37.840 --> 01:27:39.840]  Почему?
[01:27:39.840 --> 01:27:41.840]  Ну, потому что мы видим, да,
[01:27:41.840 --> 01:27:43.840]  что при n равно m действительно порядка логарифм,
[01:27:43.840 --> 01:27:45.840]  но чем m больше, тем вот эта штука
[01:27:45.840 --> 01:27:47.840]  становится ближе к единице.
[01:27:49.840 --> 01:27:51.840]  Вот.
[01:27:51.840 --> 01:27:53.840]  Соответственно.
[01:27:53.840 --> 01:27:55.840]  Если у вас этих файндов порядка n квадрат,
[01:27:55.840 --> 01:27:57.840]  то тогда...
[01:27:57.840 --> 01:27:59.840]  Тогда там уже учетная стоимость...
[01:27:59.840 --> 01:28:01.840]  То есть, тогда это уже в среднем работает
[01:28:01.840 --> 01:28:03.840]  скорее за единицу, чем за логарифм.
[01:28:03.840 --> 01:28:05.840]  Вот.
[01:28:05.840 --> 01:28:07.840]  То есть, такой вот момент возникает.
[01:28:07.840 --> 01:28:09.840]  Вот.
[01:28:11.840 --> 01:28:13.840]  То есть, это, конечно, вот чуть круче.
[01:28:15.840 --> 01:28:17.840]  Вот. Но у нас, как вы уже...
[01:28:17.840 --> 01:28:19.840]  Но у нас, как вы уже догадываетесь,
[01:28:19.840 --> 01:28:21.840]  действительно, еще в запасе есть неразыгранная карта.
[01:28:21.840 --> 01:28:23.840]  Карта называется
[01:28:23.840 --> 01:28:25.840]  эвристика-весовая.
[01:28:27.840 --> 01:28:29.840]  Так.
[01:28:29.840 --> 01:28:31.840]  Сколько у нас времени?
[01:28:31.840 --> 01:28:33.840]  Ух, ух, ух!
[01:28:33.840 --> 01:28:35.840]  Нет, почему у нас нет времени? У нас есть время, все нормально.
[01:28:35.840 --> 01:28:37.840]  Вот.
[01:28:37.840 --> 01:28:39.840]  Но, думаю, перед тем, как, собственно, начать узнавать,
[01:28:39.840 --> 01:28:41.840]  а что же это за...
[01:28:41.840 --> 01:28:43.840]  Кто же такой-то такирман, и что это у него за функции такие?
[01:28:43.840 --> 01:28:45.840]  Ну,
[01:28:45.840 --> 01:28:47.840]  думается, что надо устроить
[01:28:47.840 --> 01:28:49.840]  перерывчик.
[01:28:49.840 --> 01:28:51.840]  Откуда можно взять
[01:28:51.840 --> 01:28:53.840]  лог-звездочку?
[01:28:53.840 --> 01:28:55.840]  Так.
[01:28:55.840 --> 01:28:57.840]  Ой, откуда?
[01:28:57.840 --> 01:28:59.840]  А, нет, отсюда ее нельзя
[01:28:59.840 --> 01:29:01.840]  толком взять, да?
[01:29:01.840 --> 01:29:03.840]  Ну, жалко.
[01:29:03.840 --> 01:29:05.840]  Ну, хотя...
[01:29:05.840 --> 01:29:07.840]  Нет, почему? В принципе...
[01:29:07.840 --> 01:29:09.840]  Нет, ну, на самом деле, нет.
[01:29:09.840 --> 01:29:11.840]  Просто делается все примерно то же самое.
[01:29:11.840 --> 01:29:13.840]  Смотрите.
[01:29:13.840 --> 01:29:15.840]  Значит, откуда еще раз у нас бралась
[01:29:15.840 --> 01:29:17.840]  лог-звездочка?
[01:29:17.840 --> 01:29:19.840]  Значит, смотрите.
[01:29:19.840 --> 01:29:21.840]  То есть, у каждого ребра
[01:29:21.840 --> 01:29:23.840]  тоже можно ввести своего рода
[01:29:23.840 --> 01:29:25.840]  ранг, своего рода м и т,
[01:29:25.840 --> 01:29:27.840]  вот такого рода.
[01:29:27.840 --> 01:29:29.840]  Единственное, только давайте в этот раз мы скажем попроще.
[01:29:29.840 --> 01:29:31.840]  Давайте скажем, что b у нас на этот раз...
[01:29:31.840 --> 01:29:33.840]  Ну, давайте я тут вот в уголочке попишу
[01:29:33.840 --> 01:29:35.840]  чуть-чуть. Давайте скажем, что b равно 2.
[01:29:35.840 --> 01:29:37.840]  Да?
[01:29:37.840 --> 01:29:39.840]  И тогда у нас тут возникает, действительно,
[01:29:39.840 --> 01:29:41.840]  если тут выписывать там,
[01:29:41.840 --> 01:29:43.840]  допустим, 1, 2, 3 там,
[01:29:43.840 --> 01:29:45.840]  и так далее, какой-нибудь z,
[01:29:45.840 --> 01:29:47.840]  тогда у нас получается, тут можно написать
[01:29:47.840 --> 01:29:49.840]  1, 2, там быть...
[01:29:49.840 --> 01:29:51.840]  Ладно, там 0, 2, 4, там 6,
[01:29:51.840 --> 01:29:53.840]  8, там 10,
[01:29:53.840 --> 01:29:55.840]  12, 14, 16, 18,
[01:29:55.840 --> 01:29:57.840]  20, 22.
[01:29:57.840 --> 01:29:59.840]  Значит, тут у нас возникает
[01:29:59.840 --> 01:30:01.840]  0, 4, там 8,
[01:30:01.840 --> 01:30:03.840]  12, 16,
[01:30:03.840 --> 01:30:05.840]  20 и так далее. Тут остается
[01:30:05.840 --> 01:30:07.840]  дальше идет 0, 8,
[01:30:07.840 --> 01:30:09.840]  16, тут остается
[01:30:09.840 --> 01:30:11.840]  0, 16 и так далее.
[01:30:11.840 --> 01:30:13.840]  Да?
[01:30:13.840 --> 01:30:15.840]  Вот. То есть, вот возьмем такое b,
[01:30:15.840 --> 01:30:17.840]  а z, ну, куда-нибудь отправим.
[01:30:19.840 --> 01:30:21.840]  То есть, смотрите. То есть, опять же,
[01:30:21.840 --> 01:30:23.840]  то есть, опять же, m и t,
[01:30:23.840 --> 01:30:25.840]  то есть, как бы мы говорим, что
[01:30:25.840 --> 01:30:27.840]  ребро попадает в множество m и t,
[01:30:27.840 --> 01:30:29.840]  если только в
[01:30:29.840 --> 01:30:31.840]  i-том ряду это ребро вообще попадает
[01:30:31.840 --> 01:30:33.840]  куда-то между двумя чиселками.
[01:30:33.840 --> 01:30:35.840]  Ну, то есть, оно
[01:30:35.840 --> 01:30:37.840]  не делает перескока.
[01:30:37.840 --> 01:30:39.840]  Вот.
[01:30:39.840 --> 01:30:41.840]  И теперь...
[01:30:43.840 --> 01:30:45.840]  Да. Так, теперь стоит...
[01:30:45.840 --> 01:30:47.840]  Сколько это нам поможет?
[01:30:47.840 --> 01:30:49.840]  Ну, вот. Но, впрочем, давайте смотреть.
[01:30:49.840 --> 01:30:51.840]  Вот. Ну, доказать...
[01:30:51.840 --> 01:30:53.840]  Ну, казалось бы, начало
[01:30:53.840 --> 01:30:55.840]  то будет, в общем-то, то же самое. Да? То есть, вот
[01:30:55.840 --> 01:30:57.840]  elite... То есть, если elite
[01:30:57.840 --> 01:30:59.840]  это вот для каждого ранга смотреть последние ребра,
[01:30:59.840 --> 01:31:01.840]  то их, конечно, не
[01:31:01.840 --> 01:31:03.840]  более чем m. Логично, да?
[01:31:05.840 --> 01:31:07.840]  Вот. То есть, m и t без elite-го
[01:31:07.840 --> 01:31:09.840]  их получается не более
[01:31:09.840 --> 01:31:11.840]  чем 2n. Ну, то есть,
[01:31:11.840 --> 01:31:13.840]  пока тут, соответственно...
[01:31:13.840 --> 01:31:15.840]  Теперь остается только вопрос, действительно,
[01:31:15.840 --> 01:31:17.840]  какой у нас взять?
[01:31:17.840 --> 01:31:19.840]  Потому что сумма, по-любому, выковырится
[01:31:19.840 --> 01:31:21.840]  здесь, по крайней мере, такая.
[01:31:21.840 --> 01:31:23.840]  Вот.
[01:31:23.840 --> 01:31:25.840]  Ну, а теперь возникает вопрос...
[01:31:25.840 --> 01:31:27.840]  Да. Ну, давайте
[01:31:27.840 --> 01:31:29.840]  так смотреть. Что у нас тут будет? m и t
[01:31:29.840 --> 01:31:31.840]  без elite-х. Это у нас что? Мы утверждаем,
[01:31:31.840 --> 01:31:33.840]  что их не более чем 2n. Почему?
[01:31:33.840 --> 01:31:35.840]  Ну, потому что тут
[01:31:35.840 --> 01:31:37.840]  один перескок. Видно, да?
[01:31:37.840 --> 01:31:39.840]  Так.
[01:31:39.840 --> 01:31:41.840]  Ой, слушайте,
[01:31:41.840 --> 01:31:43.840]  расскажите. Так. Ну, вот.
[01:31:43.840 --> 01:31:45.840]  Замечательно.
[01:31:47.840 --> 01:31:49.840]  Ну, правда, да. Правда, b, n
[01:31:49.840 --> 01:31:51.840]  или их. Или...
[01:31:55.840 --> 01:31:57.840]  Чего? Где?
[01:31:57.840 --> 01:31:59.840]  Так. Сейчас вот. Ну, вот.
[01:31:59.840 --> 01:32:01.840]  Значит, так.
[01:32:01.840 --> 01:32:03.840]  Так, так, так, так, так, так.
[01:32:03.840 --> 01:32:05.840]  Нет, погодите. Тут мы еще, возможно,
[01:32:05.840 --> 01:32:07.840]  не выкрутимся.
[01:32:07.840 --> 01:32:09.840]  Нет, там надо...
[01:32:09.840 --> 01:32:11.840]  Там надо было кое-что еще.
[01:32:11.840 --> 01:32:13.840]  Там надо было
[01:32:13.840 --> 01:32:15.840]  кое-что еще.
[01:32:15.840 --> 01:32:17.840]  Да, это было бы, если b равно 2.
[01:32:17.840 --> 01:32:19.840]  Так.
[01:32:19.840 --> 01:32:21.840]  Сейчас. А если мы...
[01:32:25.840 --> 01:32:27.840]  Черт, интересно,
[01:32:27.840 --> 01:32:29.840]  неужели это к этой картинке не сводится?
[01:32:29.840 --> 01:32:31.840]  Хотя...
[01:32:31.840 --> 01:32:33.840]  Нет, хотя нет. Ну, вот.
[01:32:33.840 --> 01:32:35.840]  Сейчас.
[01:32:37.840 --> 01:32:39.840]  А нет, можно... Ну ладно, давайте попробуем
[01:32:39.840 --> 01:32:41.840]  свести.
[01:32:41.840 --> 01:32:43.840]  Посмотрите. Потому что на самом деле
[01:32:43.840 --> 01:32:45.840]  действительно функции можно выводить более
[01:32:45.840 --> 01:32:47.840]  аккуратные.
[01:32:47.840 --> 01:32:49.840]  Потому что, допустим, можно
[01:32:49.840 --> 01:32:51.840]  там начать, допустим, вот так.
[01:32:51.840 --> 01:32:53.840]  Даже можно в первом ряду написать честно
[01:32:53.840 --> 01:32:55.840]  вообще 0, 1, 2, 3 и так далее.
[01:32:57.840 --> 01:32:59.840]  5, 6, 7, 8, 9, 10.
[01:33:01.840 --> 01:33:03.840]  Вот.
[01:33:03.840 --> 01:33:05.840]  А здесь, допустим,
[01:33:05.840 --> 01:33:07.840]  написать какой-нибудь там,
[01:33:07.840 --> 01:33:09.840]  допустим, ну, примерно, я сейчас
[01:33:09.840 --> 01:33:11.840]  напишу 1.
[01:33:11.840 --> 01:33:13.840]  Ну, тут написать, короче,
[01:33:13.840 --> 01:33:15.840]  в честной степени двойки.
[01:33:15.840 --> 01:33:17.840]  В честной степени двойки. Там тоже, в общем-то,
[01:33:17.840 --> 01:33:19.840]  никто не мешает написать, правда?
[01:33:19.840 --> 01:33:21.840]  Вот.
[01:33:21.840 --> 01:33:23.840]  В чем непросто? Ну, тут степень...
[01:33:23.840 --> 01:33:25.840]  То есть тут степени двойки.
[01:33:25.840 --> 01:33:27.840]  Тут да, ну, вот...
[01:33:27.840 --> 01:33:29.840]  Так.
[01:33:29.840 --> 01:33:31.840]  Чего?
[01:33:31.840 --> 01:33:33.840]  Нет, ну, теоретически
[01:33:33.840 --> 01:33:35.840]  да, хотя практически в этом уже нет
[01:33:35.840 --> 01:33:37.840]  необходимости. То есть откуда берется
[01:33:37.840 --> 01:33:39.840]  лог-звездочка? Лог-звездочка
[01:33:39.840 --> 01:33:41.840]  говорит, что ранги бывают вот... Вот давайте так.
[01:33:41.840 --> 01:33:43.840]  Ранги бывают, допустим, только такие.
[01:33:43.840 --> 01:33:45.840]  Да?
[01:33:45.840 --> 01:33:47.840]  Вот. То есть бывают там
[01:33:47.840 --> 01:33:49.840]  элементы лежат во втором множестве
[01:33:49.840 --> 01:33:51.840]  и в третьем.
[01:33:51.840 --> 01:33:53.840]  И теперь мы начинаем думать.
[01:33:55.840 --> 01:33:57.840]  Что... Ну, вот, кто у нас там
[01:33:57.840 --> 01:33:59.840]  в третьем множестве лежит?
[01:33:59.840 --> 01:34:01.840]  Ну, вообще так.
[01:34:01.840 --> 01:34:03.840]  Но там, правда, логика такая.
[01:34:03.840 --> 01:34:05.840]  Ну, то есть там вот...
[01:34:05.840 --> 01:34:07.840]  То есть, действительно, давайте думать,
[01:34:07.840 --> 01:34:09.840]  сколько у нас не последних множеств
[01:34:09.840 --> 01:34:11.840]  ребер третьего ранга?
[01:34:11.840 --> 01:34:13.840]  То есть ребер,
[01:34:13.840 --> 01:34:15.840]  которые у нас тут вот делают вот эти перескоти.
[01:34:17.840 --> 01:34:19.840]  Вот.
[01:34:19.840 --> 01:34:21.840]  Ну, конкретно в таком виде
[01:34:21.840 --> 01:34:23.840]  их получается логарифм, правда?
[01:34:23.840 --> 01:34:25.840]  Понимаете, да?
[01:34:25.840 --> 01:34:27.840]  Ну, можно сделать по-другому.
[01:34:27.840 --> 01:34:29.840]  Можно,
[01:34:29.840 --> 01:34:31.840]  как бы, функцию забабахать еще
[01:34:31.840 --> 01:34:33.840]  круче.
[01:34:33.840 --> 01:34:35.840]  Можно забабахать функцию
[01:34:35.840 --> 01:34:37.840]  один, там, два,
[01:34:37.840 --> 01:34:39.840]  два в квадрате, два в квадрате в квадрате,
[01:34:39.840 --> 01:34:41.840]  два в квадрате в квадрате в квадрате
[01:34:41.840 --> 01:34:43.840]  и так далее.
[01:34:45.840 --> 01:34:47.840]  Ну, можно так сделать. Что бы нет, да?
[01:34:47.840 --> 01:34:49.840]  Ну, а в первом ряду тут находятся,
[01:34:49.840 --> 01:34:51.840]  типа, там, все, один, там,
[01:34:51.840 --> 01:34:53.840]  один, два, там, три,
[01:34:53.840 --> 01:34:55.840]  четыре, там, пять, шесть, семь,
[01:34:55.840 --> 01:34:57.840]  восемь, восемь. Принцип вы поняли.
[01:34:57.840 --> 01:34:59.840]  Вот.
[01:34:59.840 --> 01:35:01.840]  И тогда замечаем, что
[01:35:01.840 --> 01:35:03.840]  на третьем уровне у нас вот этих вот
[01:35:03.840 --> 01:35:05.840]  скачков, их получается
[01:35:05.840 --> 01:35:07.840]  лог звездочков, прям, в явном виде.
[01:35:07.840 --> 01:35:09.840]  Видно, да?
[01:35:09.840 --> 01:35:11.840]  Но это на третьем. Ну, вот.
[01:35:11.840 --> 01:35:13.840]  Ну, теперь остается только вопрос,
[01:35:13.840 --> 01:35:15.840]  а сколько у нас будет скачков на втором
[01:35:15.840 --> 01:35:17.840]  уровне?
[01:35:17.840 --> 01:35:19.840]  Вот.
[01:35:19.840 --> 01:35:21.840]  Ну, смотрите. На втором уровне у нас
[01:35:21.840 --> 01:35:23.840]  скачков может быть много, особенно
[01:35:23.840 --> 01:35:25.840]  вот в этом гэпе, правда?
[01:35:27.840 --> 01:35:29.840]  Ну, вот, вообще так. То есть мы, конечно, находим
[01:35:29.840 --> 01:35:31.840]  максимально там вот эту башенку,
[01:35:31.840 --> 01:35:33.840]  которая не происходит, N. Скорее всего, это вот
[01:35:33.840 --> 01:35:35.840]  максимум она и будет.
[01:35:35.840 --> 01:35:37.840]  Ну, да, вот это вот она
[01:35:37.840 --> 01:35:39.840]  скорее всего будет. Но с другой
[01:35:39.840 --> 01:35:41.840]  стороны, вот этот вот гэп, он уже порядка N.
[01:35:41.840 --> 01:35:43.840]  Может быть так, что тут достаточно много.
[01:35:43.840 --> 01:35:45.840]  Но, оказывается, маленькая
[01:35:45.840 --> 01:35:47.840]  приятная фишка.
[01:35:47.840 --> 01:35:49.840]  Можно заметить, что тут количество вершин
[01:35:49.840 --> 01:35:51.840]  такого ранга, из которых
[01:35:51.840 --> 01:35:53.840]  точить такое ребро, их немного.
[01:35:53.840 --> 01:35:55.840]  То есть их тут,
[01:35:55.840 --> 01:35:57.840]  то есть таких нот,
[01:35:57.840 --> 01:35:59.840]  то есть, видите, вот мы тут писали
[01:35:59.840 --> 01:36:01.840]  N квадрат делить на B в степени Z,
[01:36:01.840 --> 01:36:03.840]  а так мы могли бы нот в данном
[01:36:03.840 --> 01:36:05.840]  случае написать, что ребер
[01:36:05.840 --> 01:36:07.840]  второго ранга, их на самом деле
[01:36:07.840 --> 01:36:09.840]  не более чем, то есть если
[01:36:09.840 --> 01:36:11.840]  мы вот переберем вот эти вот все степень,
[01:36:11.840 --> 01:36:13.840]  да, то есть там
[01:36:13.840 --> 01:36:15.840]  K равно там, от 0 до
[01:36:15.840 --> 01:36:17.840]  логарифмы Н.agers, то там получается
[01:36:17.840 --> 01:36:19.840]  что у нас тут получается.
[01:36:19.840 --> 01:36:21.840]  Значить сколько тут может быть скачков?
[01:36:21.840 --> 01:36:23.840]  Скачков там может быть
[01:36:23.840 --> 01:36:25.840]  вот эта вот 2 в степени, да.
[01:36:25.840 --> 01:36:27.840]  Там два в степени, два в
[01:36:27.840 --> 01:36:29.840]  степени, 2 в степени два, вот это вот.
[01:36:29.840 --> 01:36:31.840]  Сколько там간 есть, получается?
[01:36:31.840 --> 01:36:33.840]  Может быть даже
[01:36:33.840 --> 01:36:34.840]  каплюса —
[01:36:34.840 --> 01:36:36.840]  нет, ну да, вроде K.
[01:36:36.840 --> 01:36:38.840]  Может быть К, может там
[01:36:38.840 --> 01:36:40.840]  K плюс 1, неважно.
[01:36:40.840 --> 01:36:42.840]  Вот.
[01:36:42.840 --> 01:36:50.840]  Но при этом мы замечаем, что для того, чтобы такого достичь счастья,
[01:36:50.840 --> 01:36:59.840]  нам мы замечаем, что таких вершин, чтобы у них там, допустим, ранг оказался хотя бы столько,
[01:36:59.840 --> 01:37:03.840]  нужно, чтобы там вершин под дерево было, как видимо, 2 в степени стока,
[01:37:03.840 --> 01:37:10.840]  поэтому там приходится действительно давно жать на n, на тоже 2 в степени, 2 в степени, там и так далее, 2,
[01:37:10.840 --> 01:37:16.840]  и тоже там вот размер башенки получается какой, ну то есть 2 в степени там вот этого вот,
[01:37:16.840 --> 01:37:23.840]  то есть вот это вот получается там должно было быть, получается к чему оно там должно быть равно,
[01:37:23.840 --> 01:37:32.840]  ну вот, ну видимо к, чтобы тут капли соединили, ну вот, ну вот, и получается, то есть можно попробовать
[01:37:32.840 --> 01:37:43.840]  видеть, как там, допустим, n log, да, видно, да, вот, но приет, ну вот, но тут у нас фишка оказывается в том,
[01:37:43.840 --> 01:37:57.840]  что, а кто сказал, что мы тут должны писать двойки, мы же тут могли бы писать и 1.9, округленные куда-нибудь,
[01:37:57.840 --> 01:38:09.840]  ну нет, ну чтоб целые числа типа были, ну там как-то вот так вот это все будет, вот,
[01:38:09.840 --> 01:38:20.840]  и тогда у нас получается нод, и тогда что здесь получается, вот, и тогда здесь получается немножко другое,
[01:38:20.840 --> 01:38:30.840]  но тогда здесь получается, значит скачков у нас там получается, то есть тогда тут получается 1.9 на 1.9,
[01:38:30.840 --> 01:38:42.840]  1.9 на 1.9, так, а здесь, ну вот, ну да, то есть как бы, ну да, чтобы ранг был такой, то там 2, ну вот,
[01:38:42.840 --> 01:38:52.840]  а тут получается тогда, а здесь получается такая фишечка, а тут получается два в степени, то есть 1.9,
[01:38:52.840 --> 01:39:05.840]  1.9 и так далее, 1.9, их тут вполне себе к, что, откуда, а вот ключевое соображение, потому что для того,
[01:39:05.840 --> 01:39:13.840]  чтобы такое ребро W такого ранга существовало, да, и так, ну вот, то есть, и при этом, допустим,
[01:39:13.840 --> 01:39:20.840]  у нас вот существует ребро W, да, то есть, которое попадает вот сюда, в этот ряд, и при этом, допустим,
[01:39:20.840 --> 01:39:26.840]  оно находится вот между этими двумя чиселками, но для того, чтобы это, ну смотрите, ну во-первых,
[01:39:26.840 --> 01:39:32.840]  для того, чтобы это произошло, нужно, чтобы ранг вершины В был хотя бы вот столько, а для этого
[01:39:32.840 --> 01:39:38.840]  необходимо, чтобы у него в поддеявы было два в степени вот столько вершин, поэтому их не более,
[01:39:38.840 --> 01:39:45.840]  чем вот столько, а скачков мы из нее сделаем, ну, очевидно, вот столько, да, только тут тоже 1.9,
[01:39:45.840 --> 01:39:57.840]  1.9, 1.9, вот, ну вот, то есть, это получается n на что-то типа вот сумма пока равно от нуля до лог 2n,
[01:39:57.840 --> 01:40:05.840]  лог 2n, значит, получается там 1.9 попало, то есть, там 0.95 в какой-то экзотической степени,
[01:40:05.840 --> 01:40:15.840]  вот, вот этой вот, вот, но это очевидно от единицы, потому что даже если я тут просуммирую просто
[01:40:15.840 --> 01:40:22.840]  по всем k от нуля до n, это все равно получится от единиц, вот, то есть, получается, что такие вот ребра
[01:40:22.840 --> 01:40:28.840]  вот эти вот второго ранга, они так же убились, их там вот будет за всю историю в принципе,
[01:40:28.840 --> 01:40:34.840]  а вот на третьем уровне у нас получается лог звездочка, в чем обратить внимание, получается
[01:40:34.840 --> 01:40:41.840]  лог звездочка и теоретически есть, ну, и какие-то вот теоретические возможности на там продолжение
[01:40:41.840 --> 01:40:51.840]  у пихона, там на оптимизацию, вот, так что вот как с этой точки зрения на самом деле может выглядеть
[01:40:51.840 --> 01:40:57.840]  наша лог звездочка, сейчас понятно? Или еще нет?
[01:40:57.840 --> 01:41:03.840]  Как переносится что?
[01:41:03.840 --> 01:41:11.840]  Переносится 1.9 в степени 2, видимо, ну да, тогда понятно.
[01:41:11.840 --> 01:41:15.840]  Ну да, нет, вот, да, идея простая, то есть, на самом деле, и сейчас мы этим, кстати, внимание будем
[01:41:15.840 --> 01:41:19.840]  пользоваться очень сильно, я, собственно, почему я стал вообще рассказывать это именно так,
[01:41:19.840 --> 01:41:25.840]  а не рассказал то, что было раньше, потому что на самом деле я здесь могу поставить,
[01:41:25.840 --> 01:41:31.840]  могу, во-первых, поставить любую Z, а здесь могу поставить практически любые последовательности,
[01:41:31.840 --> 01:41:36.840]  на самом деле, то есть, единственное, что мне нужно, это чтобы там количество ребер там как-то
[01:41:36.840 --> 01:41:42.840]  адекватно оценивалось, и естественно, мы будем пользоваться там тем, что у нас там
[01:41:42.840 --> 01:41:48.840]  количество вершин за одного ранга не сильно много, вот.
[01:41:48.840 --> 01:41:53.840]  Но действительно, в чем хочется как-то вот действительно упихивать, зачем казалось бы упихивать?
[01:41:53.840 --> 01:41:58.840]  Практических целей это уже не надо, но в математике стоит вопрос, возникает вопрос
[01:41:58.840 --> 01:42:04.840]  об оптимальной асимптотике, ну то есть, хочется показать, что в худшем случае, ну вот,
[01:42:04.840 --> 01:42:10.840]  что там, найти какую-нибудь такую мистическую асимптотику, чтобы, типа, в худшем случае было вот
[01:42:10.840 --> 01:42:16.840]  с точностью до мультипликативной константы вот ровно вот столько, то есть, не больше, но и не меньше.
[01:42:16.840 --> 01:42:22.840]  Как бы, налог звездочку, тут такой оценки нет. Вот, собственно, откуда берется обратная функция
[01:42:22.840 --> 01:42:28.840]  Акермана, то есть, тут Тарьян, то есть, мотивация это рассматривает такая, что Тарьян утверждает,
[01:42:28.840 --> 01:42:35.840]  что эта функция Акермана будет оптимальной, то есть, на самом деле, в этой же статье, сегодня мы,
[01:42:35.840 --> 01:42:41.840]  к сожалению, до этого не доживем, ну или к счастью, я не знаю. Вот, ну вот, там утверждается,
[01:42:41.840 --> 01:42:48.840]  вот там дальше идет и доказательство того, что это действительно еще и нижний оценок. Вот.
[01:42:48.840 --> 01:42:55.840]  Да, ну там, действительно, совсем мясо нужно поделать. Вот, вот, хотя, может, даже попробуем
[01:42:55.840 --> 01:42:59.840]  разобраться, хотя там интрига, потому что на эту статью даже просто едва ли не там,
[01:42:59.840 --> 01:43:06.840]  присылали просто там официальную апелляцию. Там что-то типа, что мы считаем, что вот нижняя
[01:43:06.840 --> 01:43:08.840]  оценка не верна.
[01:43:16.840 --> 01:43:20.840]  Понятно, понятно, а вот обвашку с нижней оценкой он признал?
[01:43:22.840 --> 01:43:26.840]  Нет, чем парадокс заключает в том, что, кстати, да, при этом на английской википедии, кстати,
[01:43:26.840 --> 01:43:31.840]  ничего об этом не написано. Там просто написано, что все, вот он, там он, вот он доказал, что есть
[01:43:31.840 --> 01:43:36.840]  обратная функция керман, и что эта оценка точная. Все, до свидания. Так что может, так что может
[01:43:36.840 --> 01:43:40.840]  там попробовать эти, как сказать, эти две странички заботать и, собственно, либо найти багу, либо
[01:43:40.840 --> 01:43:45.840]  убедиться, что там все нормально. Вот. Значит, черт его знает, конечно.
[01:43:47.840 --> 01:43:49.840]  Так, ну давайте разбираться.
[01:43:49.840 --> 01:43:55.840]  Попробуем теперь поразбираться, откуда же у нас эта обратная, что же это вообще за обратная функция
[01:43:55.840 --> 01:44:04.840]  кермана, откуда же она вообще взялась. Значит, смотрите, теперь, внимание, так, значит, теперь, значит,
[01:44:04.840 --> 01:44:11.840]  сейчас мы это все сотрем. Господи, сколько тряпочек вообще. Так, значит, это мы убираем.
[01:44:12.120 --> 01:44:18.840]  Ну это вот, ладно. Так. Значит, давайте это убираю, это я убираю, убираю это, это я тоже убираю.
[01:44:23.840 --> 01:44:33.840]  Убираю это я, я убираю это, я это убираю, убираю это я, убираю это, это я убираю, это убираю.
[01:44:33.840 --> 01:44:42.040]  убираю я так ну вроде ничего не забыл так значит что-то еще у нас есть так
[01:44:42.040 --> 01:44:47.160]  значит поехали какой значит так ну начнем с того что так значит мы теперь
[01:44:47.160 --> 01:44:59.560]  значит поменяется следующий во-первых мы убираем штрих а вот но вот но на этот
[01:44:59.560 --> 01:45:14.320]  раз театр мэн это уже обеевристики используем и весовую вристика вот так
[01:45:14.320 --> 01:45:23.680]  что у нас еще будет так значит так ладно знаете давайте я буду буду карьер это
[01:45:23.680 --> 01:45:27.800]  пока ну ладно давайте так возможно конечно часть из этого придется потом
[01:45:27.800 --> 01:45:34.440]  восстановить но это но легче будет реально восстановить значит все пока как это потом
[01:45:34.440 --> 01:45:40.440]  значит из колода из кармана достанем собственно эту лишнюю карту так вот потом но она быть не
[01:45:40.440 --> 01:45:51.600]  лишняя конечно но вот ничего себе так значит смотреть так f понадобится ли нам f 1 пока ой
[01:45:51.600 --> 01:45:57.240]  давайте смотрим до сюда просто чтобы не думать значит пока какие значит хочет еще
[01:45:57.240 --> 01:46:05.600]  что ввести т ввели значит ранка останется и еще мы введем ладно на всякий случай я введу
[01:46:05.600 --> 01:46:13.600]  понятие d от v потому что тарьян его называет d от v правда как вы это наша алипиадная
[01:46:13.600 --> 01:46:21.080]  тусовка называет его cz от v да буквально размер под деревом да вот такое у нас
[01:46:21.080 --> 01:46:28.400]  определение но просто на всякий случай то есть если я случай я может быть и даже не буду
[01:46:28.400 --> 01:46:41.360]  пользоваться наверно но вот но сразу от леммочка вот который я так немножко иероглифично конечно
[01:46:41.360 --> 01:47:00.040]  сейчас напишу нет для ребра vw имеющего меня находящегося в дереве t верно что
[01:47:00.040 --> 01:47:10.680]  d от w больше либо равно 2 d от v да ну вот нет ну да понятно я не претендовал на то что сейчас
[01:47:10.680 --> 01:47:17.480]  это лемма прям станет для вас откровения вот но как вы просто дайте как-то идем по тарьяну так
[01:47:17.480 --> 01:47:23.920]  идем значит следствие 7 соответственно возникает что там очевидно в нашем случае d от v больше
[01:47:23.920 --> 01:47:33.120]  либо равно 20 степени r от v ну понятно да как-то тут даже вот как бы это тут даже у него написано
[01:47:33.120 --> 01:47:41.360]  ну по индукции и по рангу все кевин вот по построению а ну и соответственно там 0 меньше
[01:47:41.360 --> 01:47:47.080]  либо равно r от v меньше либо равно лог 2 и дает тоже утверждение что ранку у нас не бывает больше
[01:47:47.680 --> 01:47:56.280]  так а теперь начинаем интеллектуальную игру сейчас я введу интеллектуально
[01:47:56.280 --> 01:48:03.160]  значит сейчас вашему вниманию представляется ам слайд версии оф аккерман функцию
[01:48:03.160 --> 01:48:15.400]  эзит тарьян нейп так значит начать и сейчас я введу супер функцию сейчас будет очень круто
[01:48:15.400 --> 01:48:26.440]  значит отрить начать поехали начать а от господи ну давайте тут ведем а от нуля x
[01:48:26.440 --> 01:48:38.400]  значит при x больше либо равном нуля будет равно 2 x значит а от и 0 при и больше либо
[01:48:38.400 --> 01:48:53.840]  равном единице будет равно нулю так значит а от и 1 будет равно двойке пока ничего страшного
[01:48:53.840 --> 01:49:08.000]  и наконец а и да но здесь да и больше либо единицы естественно вот значит а и и внезапно x почему-то
[01:49:08.000 --> 01:49:19.600]  будет равна вот такой штук
[01:49:19.600 --> 01:49:40.720]  выглядит мирно да но попробуем давайте нарисовать табличку и понять отчет вообще такое давайте вот
[01:49:40.720 --> 01:49:57.280]  x у меня будет 0 1 2 3 4 5 6 7 8 9 10 11 12 13 черт с ним так 0 1 2 3 4 5 вот это дальше рисовать
[01:49:57.280 --> 01:50:06.240]  вот так ну давайте смотреть как бы пока ничто не предвещало беды ну хотя в общем ладно беды
[01:50:06.240 --> 01:50:26.240]  не будет в общем так 22 24 26 дальше так что у нас тут ну тут припишем 0 2 0 2 0 2 0 2 0 2 ну и тогда
[01:50:26.240 --> 01:50:40.840]  так ну давайте смотреть что у нас будет здесь значит а 1 x чему нас равно вот давайте посмотрим
[01:50:40.840 --> 01:50:50.320]  чему равно а 1 2 то есть она равно следующему то есть надо пойти в предыдущий ряд и пойти в нём
[01:50:50.320 --> 01:50:59.880]  в ту чиселку которая и ну по индексу пойти в ту чиселку которые тут написано так то есть
[01:50:59.880 --> 01:51:08.920]  предыдущий 2 значит переписываем вот этот вот второй индекс пишем 4 так теперь идем в 4 индекс
[01:51:08.920 --> 01:51:20.240]  получается 8 идем 8 индекс получаем 16 идем 16 индекс получаем 32 видно да то есть ну даже
[01:51:20.240 --> 01:51:25.680]  я не так пожалуй буду писать правильно писать наверное так то есть по факту это будет 2 в
[01:51:25.680 --> 01:51:43.160]  квадрате 2 в кубе 2 в 4 2 в 5 2 6 2 7 2 8 2 9 2 в 10 2 в 11 2 в 12 2 в 13 вот так что же будет здесь так
[01:51:43.160 --> 01:51:51.080]  но отправляемся так здесь что у нас получается отправляемся во второй индекс получается 2 в
[01:51:51.080 --> 01:51:59.640]  степени 2 степени 2 отправляемся вот в этот индекс и что мы получаем 2 в степени 2 степени 2
[01:52:00.240 --> 01:52:09.840]  то было понятно почему да так 2 степени 2 степени 2 степени 2 степени 2 степени 2 степени 2
[01:52:10.480 --> 01:52:13.840]  степень 2 степень 2
[01:52:16.360 --> 01:52:36.280]  а да но да глад borrowed а да да да да поэтому поэтому все не настолько страшно
[01:52:39.840 --> 01:52:46.060]  ну хорошо ладно в общем суть вы поняли да так дальше очевидно да это страшно
[01:52:46.060 --> 01:52:58.020]  дальше рисовать конечно ну давайте так давайте просто немножко поиграемся ну
[01:52:58.020 --> 01:53:02.220]  во первых заметим маленькую приятную вещь да можно на самом деле заметить что
[01:53:02.220 --> 01:53:12.580]  тут два в квадрате кстати вот эти четыре будет всегда значит да да то есть то есть
[01:53:12.580 --> 01:53:24.780]  приятные факты да я назвал рубрика приятные факты приятные факты об этом да да знаете
[01:53:24.780 --> 01:53:36.860]  там допуска так значит а первых а и 2 всегда равно 4 вот да прям вообще всегда
[01:53:36.860 --> 01:53:58.780]  значит второе интересный факт что что-то что-то что не так все хорошо да все пока хорошо так
[01:53:58.780 --> 01:54:08.060]  но первое да заметили что а 1 х 2 степени как мы выяснили прям в явном виде так что еще
[01:54:08.060 --> 01:54:17.380]  можно выяснить ну как вы уже поняли а от 2 х равно чему 2 степени но при х больше либо равном
[01:54:17.380 --> 01:54:24.380]  единицы конечно два в степени два в степени два в степени два и вот в этой башенке икс
[01:54:25.100 --> 01:54:40.260]  неплохо так вы так что у нас еще так так но тут ладно разные прикольные вот то есть
[01:54:40.260 --> 01:54:45.500]  разные там прикольные фактики могут быть может какие-то даже нам ну во первых да там какие-то
[01:54:45.500 --> 01:54:51.860]  может быть даже нам пригодятся хотя по факту нет ну давайте поиграем чему равно а 4 3 давайте
[01:54:52.260 --> 01:55:05.060]  вот нет там просто да смотрите во первых там получается что а 4 3 ну давайте так ладно если
[01:55:05.060 --> 01:55:13.660]  честно по определению расписать то что это такое это а от трех да и очевидно а от 4 2
[01:55:13.660 --> 01:55:32.660]  логично да так что такое а 4 2 это 4 ну да получается да значит а 3 3 4 равно
[01:55:32.660 --> 01:55:41.980]  да да в точке 4 3 симметрично да так дальше это равно получается а от двух и соответственно
[01:55:41.980 --> 01:55:52.740]  а от там соответственно получается трех и пяти так и что помогает так а сколько а
[01:55:52.740 --> 01:56:06.980]  да со счетом 33 хорошо-хорошо так так ну что такое а 33 вот тут уже надо расписывать
[01:56:06.980 --> 01:56:23.300]  а двое двоечки и значит тут это значит это у нас равно тогда значит от 2 от а 24 да так
[01:56:23.300 --> 01:56:31.420]  так но как вы думаете а можно ли это запись теперь упростить
[01:56:31.420 --> 01:56:59.180]  а не можем а сколько давайте разбить а вот так вот да так хорошо
[01:57:02.420 --> 01:57:24.900]  а 3 2 и 4 да так не почему-то вот тарья но именно это хотелось доказать ну как бы ну как бы
[01:57:25.100 --> 01:57:32.100]  давайте смотрим а 24 это вот это там башенка 2222 вот эта штука это значит башенка из вот
[01:57:32.100 --> 01:57:43.940]  такого количества двоек да шестнадцать но до башенки за да да да вот это вот да хотя это
[01:57:43.940 --> 01:57:52.740]  уже неплохо да а вот башенка из такого количества да да это называется очень очень очень очень
[01:57:52.740 --> 01:58:02.140]  очень очень быстро растущая функция да но вот но на самом деле да тут много еще ладно у меня
[01:58:02.140 --> 01:58:08.620]  тут много еще чем-то всякого вышел ну например давайте ладно еще чуть-чуть там по пару минут пару
[01:58:08.620 --> 01:58:15.420]  пару по этом минут поизраимся значит опять утверждение еще такое утверждается что а ты
[01:58:15.420 --> 01:58:35.980]  больше либо равно икс но да действительно потому что да просто чисто по индукции потому что да
[01:58:35.980 --> 01:58:50.380]  а ты икс равно а значит и минус один а от и икс минус один да это больше либо равно чем а от и
[01:58:50.380 --> 01:59:01.860]  икс минус один ответим ну на халяву совсем не получается потому что это не всегда это больше
[01:59:01.860 --> 01:59:15.740]  либо равно икс минус один стал столько выяснить бывает ли это да но это нам не поможет а из того
[01:59:15.740 --> 01:59:22.140]  что будет больше икс минус один тут будет случай когда тут тогда не выведем что это больше икса так
[01:59:22.140 --> 01:59:45.140]  что тут как бы не но тут аккуратненько на самом деле возможно его доказывать так это надо вместе
[01:59:45.140 --> 01:59:52.060]  с каким-то утверждением в духе что а и плюс один икс там допустим всегда больше чем а и икс
[01:59:52.060 --> 02:00:04.500]  да для начала ну хотя бы вот это хотя ладать неверно вот это верно да но при и но вот ну да
[02:00:04.500 --> 02:00:10.140]  при и да при икс больше либо равно двух там конечно строго больше там вот это есть там
[02:00:10.480 --> 02:00:21.020]  еще есть какие там еще развлечения есть нет нет ну на самом деле так это так то есть картинка
[02:00:21.020 --> 02:00:24.720]  это называется давайте чуть-чуть поизраемся потому что ладно мы не будем на самом деле много
[02:00:24.720 --> 02:00:29.760]  еще утверждений а то что не все записал потому что заявлена потому что заявлена там следующее
[02:00:29.760 --> 02:00:37.100]  нужны они то есть там нужны они только для того чтобы думать там доказать потом нижнюю
[02:00:37.100 --> 02:00:41.940]  то сейчас они сейчас это нам то сейчас это так вот эти вот я просто поставил
[02:00:41.940 --> 02:00:44.980]  чтобы тут просто чуть-чуть поигрались а на самом деле они нам особо не нужны
[02:00:44.980 --> 02:00:51.940]  вот ну чтобы просто хоть вот хоть как-то поработали да то есть ладно вот
[02:00:51.940 --> 02:01:09.340]  эти вот штуки доказать несложно вот с этой вот конечно придется нет а че но
[02:01:09.340 --> 02:01:19.820]  вот вы карбача хорошо ладно давайте а ну-ка действительно даже интересно будет
[02:01:19.820 --> 02:01:31.260]  чуть-чуть только 2 x это больше либо равно чем два и что будет 4 x минус 4 но
[02:01:31.260 --> 02:01:37.380]  очевидно это больше либо равно 2 x при значит очевидно x больше либо равном
[02:01:37.380 --> 02:01:49.380]  2 но и что основу вот а случай их равно 1 и 0 разбираются и так типа базы индукции все хорошо
[02:01:49.380 --> 02:01:53.860]  да ну вот ну как всегда данная стандартная вещь не доказывается неравенства усилите его и оно
[02:01:53.860 --> 02:02:00.820]  сойдется то есть как бы не доказывает что меньше либо равно цен вычтите д этом сейчас работает вот
[02:02:00.820 --> 02:02:08.020]  да вот так что надо чуть-чуть поигрались значит смотрите значит наша цель будет в чем наша цель
[02:02:08.020 --> 02:02:13.700]  будет том что мы сейчас вот сейчас вот из этой таблички значит тоже буду будем пытаться делать
[02:02:13.700 --> 02:02:26.740]  какие-то ранги значит делать мы их будем так значит смотрите давайте себе сейчас вы себе
[02:02:27.620 --> 02:02:36.540]  саму себе табличку эту вообразили насколько да это конечно число за пределами нашего
[02:02:36.540 --> 02:02:49.020]  воображения да но что поделать как вы это жить такая вот значит смотрите
[02:02:49.020 --> 02:03:06.780]  так нет значит тот но тот придется почему-то сразу ввести еще маленькую приятную штуку а
[02:03:06.780 --> 02:03:25.980]  маленькая да не путать с альфой это еще не альфа значит смотрите а от и и это я веду
[02:03:25.980 --> 02:03:43.580]  теперь минимальное такое жеи минимальное такое жеи что а от и жеи а ты же больше чем двоичную
[02:03:43.580 --> 02:03:57.980]  гарриф у а смотрите интеллектуальная функция то есть есть у меня данные числа и я хочу посмотреть
[02:03:57.980 --> 02:04:04.780]  где у меня впервые появляется в этой строке число которое больше чем двоичную гаррифом
[02:04:04.940 --> 02:04:20.860]  да ну а первую давайте поиграем как вы думаете чему равно значит а 1
[02:04:20.860 --> 02:04:42.940]  нет но не настолько нет погодите давайте так нам нужно минимальное число жеи да
[02:04:42.940 --> 02:04:51.500]  да нам нужно минимальное число жеи такой два в степени жеи больше чем двоичную гаррифом
[02:04:51.500 --> 02:05:16.140]  но но короче от логлора а теперь скажите чему равно от двоих ну да минимальное такое жеи что
[02:05:16.140 --> 02:05:28.020]  ну по сути да ну ладно давайте напишем там нет давайте может это это ну мы сейчас
[02:05:28.020 --> 02:05:44.580]  нет хотя было бы неплохо берем эти там 16 неравенства тарья надаем вам в тюрке
[02:05:44.580 --> 02:05:51.540]  там с дедлайном через неделю и через неделю доказываем нишки оценку да во комбинации да
[02:05:51.540 --> 02:06:21.540]  да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да
[02:06:21.540 --> 02:06:51.540]  так ну ладно дальше дальше ряд продолжать и будем туша на это вы догадываетесь что от трех и это функция раз которая растет очень медленно да то есть настолько медленно что вот это это нормально да ну можно наверное так и вести да хотя да интересно
[02:06:51.540 --> 02:07:21.540]  ну да интересно ой они будет ли это да от лог звездочка лог звездочка и она интересно но такое ну ладно нет ладно не будем заморачиваться не паримся так значит смотрите это мы тут чуть-чуть подписали а теперь соответственно введем кое-что и шо господи доска заканчивается кошмар так ладно
[02:07:21.540 --> 02:07:49.260]  придется вот это стереть так жалко ну ладно нам все равно понадобится не эта табличка так что ну вот значит смотрите значит еще одно определение значит зафиксируем внезапно z
[02:07:49.260 --> 02:08:01.140]  ну новое нет оно будет другой естественно но к нему в напахнике не пойдет б то есть пока просто за
[02:08:01.140 --> 02:08:14.540]  ну во первых четырех русских обычно кану хотя ну хотя ладно не уверен что этих четырех русских там было вообще какой-то зафиксируем которые выберем там еще
[02:08:14.540 --> 02:08:30.580]  честно говоря не знаю кстати оригинальную статью не видел вот значит смотрите для вот таких и и и жи для таких же мы введем неожиданное с и жи
[02:08:30.580 --> 02:08:54.060]  и равно у нас будет мистической вещи это количество таких вершин в что а от и жи меньше либо равно эра тв меньше чем а от и жи плюс один
[02:08:54.060 --> 02:09:14.700]  значит смотрите просто у каждой вершины есть какой-то ранг вот он значит есть какой-то ранг и нам но и в каждой строке этот ранг попадает в какой-то полу интервал между
[02:09:14.700 --> 02:09:37.980]  вот соседними чиселками вот с и жито это просто множество вершин которые в этой строке попадают вот именно в житый полу интервал ранг нет ранг вполне себе целый нет ранг тут нет
[02:09:37.980 --> 02:10:07.260]  тут все целые тут вы уже и догадываетесь почему у меня тут в аин больше чем лог 2н видите да потому что но потому что у нас ранг не может быть больше чем логарифа да поэтому мы себе такое написали да не сильно много таких с и житых будет но тем не менее значит так поехали сразу так что-то у нас тут было так левма 6 следствие 7
[02:10:07.260 --> 02:10:18.780]  но дальше логично предположить что будет левма 8 с и жи не превосходят как вы думаете чаво
[02:10:18.780 --> 02:10:35.300]  не круче
[02:10:35.300 --> 02:10:43.800]  немного неправда
[02:10:43.800 --> 02:10:55.760]  причем в общем-то даже не сильно сложно узнать откуда мы это взяли потому что напоминаю у нас
[02:10:55.760 --> 02:11:05.880]  есть а у нас есть да теперь мы можем просто ссылаться вот сюда потому что нам в с и ж
[02:11:05.880 --> 02:11:14.440]  придется по рамкам суммировать да да да потому что было бы когда количество вершин ранга там
[02:11:14.440 --> 02:11:20.400]  допустим от и жи действительно не более чем n делить на два в степени столько но в с и
[02:11:20.760 --> 02:11:27.000]  лежат вершины не только такого ранга но и такого ранга плюс один такого ранга плюс два и так далее до
[02:11:27.000 --> 02:11:35.240]  этой штуки то есть то есть как бы мы можем сказать так что с и житая не превосходит сумму пока
[02:11:35.240 --> 02:11:45.000]  которая прибегает значение от а и жи до а и будь здоров жи плюс один минус один не более чем n
[02:11:45.000 --> 02:11:56.960]  делить на два степени к вот ну в принципе но заметим следующее что на самом деле это не
[02:11:56.960 --> 02:12:03.520]  превосходит просто я могу то есть можно было бы сказать что это не происходит n сумму значит
[02:12:03.520 --> 02:12:10.400]  один делить на два степени как дека пробегает от а и жи до ну просто бесконечности на самом деле
[02:12:10.400 --> 02:12:18.800]  вот а эта штука очевидно не превосходит нот ну как не происходит а эта штука просто равна на
[02:12:18.800 --> 02:12:27.480]  самом деле 2n делить на два вот в этой вот минимальной степени на самом деле так причем
[02:12:27.480 --> 02:12:31.800]  более того учитывая какие-то депы на самом деле оценка в общем-то достаточно точно
[02:12:31.800 --> 02:12:41.640]  наоборот не сократили как бы это будет достаточно точно вот так что такая красота
[02:12:41.640 --> 02:12:52.240]  видим что да то есть у нас да и не сильно вот то есть это то есть ребер там достался достаточно
[02:12:52.240 --> 02:12:59.000]  большой жиж там прикажем и чем больше жить им очень-очень-очень сильно меньше и поэтому есть
[02:12:59.320 --> 02:13:08.840]  поэтому как бы мечта у нас продолжает быть так значит смотрите значит теперь приходит
[02:13:08.840 --> 02:13:20.340]  время ввести еще множество да да ну какие ну то есть и сужимы ввели конечно но теперь мы будем
[02:13:20.340 --> 02:13:30.820]  говорить вот как значит внимание значит определим значит ну f значит ведем f шутка
[02:13:30.820 --> 02:13:45.580]  f ну то же самое ребра из всех всех всех файнда вот потому что она у нас опять цели оценить сколько
[02:13:45.580 --> 02:13:55.660]  у нас ребер встретилась во всех файндах значит пишем значит будем говорить значит смотрите
[02:13:55.660 --> 02:14:08.300]  значит если значит ведем теперь так если значит у нас есть вот такое ребро вот и выяснилось что
[02:14:08.300 --> 02:14:22.300]  в и в принадлежат интервалу с и жи то тогда будем говорить что в и в значит они лежат в множестве
[02:14:22.300 --> 02:14:45.220]  n-к-т но вот если если что значит соответственно если к это значит да вот есть у нас да давайте
[02:14:45.220 --> 02:14:56.100]  так напишу для каких-то кто и жи потому что обратите внимание кстати по ув в таких и пар и
[02:14:56.100 --> 02:15:04.340]  жи может быть много там просто едва линия там может там во многих в нескольких рядах так вот
[02:15:04.340 --> 02:15:11.740]  на самом так вот из этих рядов мы будем брать минимальный то есть я буду будет что к это
[02:15:11.740 --> 02:15:26.780]  минимальное такое и что значит существует жи что ну короче говоря там в и в лежат в с и жи
[02:15:31.980 --> 02:15:40.980]  определение может показаться сложно сочиненным пока мы не нарисуем картинку
[02:15:40.980 --> 02:15:51.380]  потому что смотрите как у нас картинка это выглядит потому что давайте смотреть потому что
[02:15:51.380 --> 02:15:59.020]  если я возьму соответственно то есть я вот буду рисовать соответственно то что я буду тут рисовать
[02:15:59.020 --> 02:16:10.780]  но я тут я буду рисовать там 0 2 4 6 там 8 10 там 12 14 там да ну там допустим 20 это 20
[02:16:10.780 --> 02:16:21.220]  значит тот я буду рисовать значит соответственно 2 4 что у нас там было степень 16 да тот я буду
[02:16:21.220 --> 02:16:30.020]  рисовать так что там нас надо там 2 4 там 2 в четвертой потом где-то 2 степень 2 степень в четвертой
[02:16:30.020 --> 02:16:36.900]  и так далее да ну то есть короче говоря в каждом ряду я тут вот очень где-то там вот это в каждом
[02:16:36.900 --> 02:16:43.300]  ряду я буду ставить только отметку напротив вот а и т житая там а от и ж плюс один и так далее
[02:16:43.300 --> 02:16:49.840]  понятно да то есть я в каждом ряду то есть я как бы прорежу и то есть как бы каждый отметки
[02:16:49.840 --> 02:16:55.340]  следующий в следующем ряду это под множество отметок в предыдущем ряду и меня и я говорю что
[02:16:55.340 --> 02:17:01.660]  если у меня есть ребро то как бы я хочу найти минимальную строчку так чтобы как бы это ребро
[02:17:01.660 --> 02:17:06.700]  уместилось между отметками в этом ряду то есть вот просто тоже что было и раньше просто
[02:17:06.700 --> 02:17:13.100]  я отметки просто отметки подбрались вот более экзотическим способом понятно да вот
[02:17:13.100 --> 02:17:20.540]  значит вот примерно так это будет работать да но это конечно если такое есть что может так так
[02:17:20.540 --> 02:17:30.420]  как количество рядов у нас ограничена потому что у нас рядов z понятно да но вот
[02:17:30.420 --> 02:17:42.620]  но вот то есть поэтому если таких и же нет то мы объявляем что мы объявляем
[02:17:42.620 --> 02:18:05.780]  да то мы объявляем что да w лежит в n z плюс 1 вот то есть вот такие n ки мы пытаемся оценить
[02:18:05.780 --> 02:18:13.900]  ладно n ки это для нас новое множество но догадываетесь ли вы что такое l и т
[02:18:13.900 --> 02:18:26.180]  ну да то есть давайте этот формально конечно напишу но в общем-то там можно было бы копипастить
[02:18:26.180 --> 02:18:35.980]  не но может вы в этом планшете может можете копипастить то есть w то есть это такие ребра из
[02:18:35.980 --> 02:19:01.620]  n и т что на каком-то файне файне было опять же последним из n в степени и то есть вот такая
[02:19:01.620 --> 02:19:13.740]  красота такая вот у нас и лишняя красота так так ну что ж так ладно эти леммы нам уже не
[02:19:13.740 --> 02:19:31.100]  понадобятся но понадобятся почти они так начнем с леммы 9 а какой вы хотите
[02:19:31.100 --> 02:19:43.460]  нет это да но опять и лемма 1 она формируется для других элик старых а это новое но ладно эльки
[02:19:43.460 --> 02:19:53.900]  новая но конкретно это лемма крыши не поменялась ровно по тем же причинам что да но нет здесь будет
[02:19:54.500 --> 02:20:06.260]  так нет это я уберу так ладно да вот это да хотя как бы то есть хотя скажем так технология
[02:20:06.260 --> 02:20:11.540]  будет по прям до точки просто практически такая же просто техника просто техника будет чуть
[02:20:11.540 --> 02:20:20.180]  более экзотическая потому что но потому что да как бы да но потому что мы работаем с более
[02:20:20.180 --> 02:20:29.860]  экзотической функцией значит лемма 10 она говорит о том что размер эль ноль н 0 без
[02:20:29.860 --> 02:20:45.980]  л 0 не превосходит хочу я все говорю сами угадать так давайте сколько у нас может быть
[02:20:45.980 --> 02:21:15.620]  да нет у нас н 0 мы только нулевой ретро смотрю ну короче да так
[02:21:15.620 --> 02:21:25.740]  хотя хотя надо перепроверить душа по-моему ночи нет если бы я не знаю дайте это даже про
[02:21:25.740 --> 02:21:31.900]  меня было очень что почему-то талян в этом месте более аккуратен в оценках то есть осторожно
[02:21:31.900 --> 02:21:41.940]  ой какая гадость я сам скажу а нет тут нет тут все нормально нет указалось бы логично потому
[02:21:41.940 --> 02:21:47.580]  что заметим что как бы если у вершины весь какой-то ранг и какой-то ребро который
[02:21:47.580 --> 02:21:53.300]  значит попадает вот в эти интервалы все в полу интервалы то становится очевидно что такое
[02:21:53.300 --> 02:21:57.540]  ребро может вести ток следующий ранг и следует на но не более чем одно поэтому м в общем
[02:21:57.540 --> 02:22:07.020]  что ладовый сами без меня ответ уже угадали чего что я тут звать буду еще ну я ну как-то
[02:22:07.020 --> 02:22:14.820]  наверное не просто так угадали нет я не на нет тут конечно когда аккуратно дай иногда конечно
[02:22:14.820 --> 02:22:21.500]  есть умение до объяснять откуда угадали ответ потому что я уже рассказывал эту историю там ну
[02:22:21.500 --> 02:22:25.940]  вам-то просто предстоит свое время просто значит просто вот в конце третьего семестра вас ждет
[02:22:25.940 --> 02:22:31.780]  или четвертого ждет письменный экзамен по дифура вот значит напишу на экзамене по дифура
[02:22:31.780 --> 02:22:36.260]  значит там ну там я лично меня там была как предпоследний задача какой-то экзотическое
[02:22:36.260 --> 02:22:41.780]  решение уравнение которая ну как это но правда решение надо было мне не там не дефицит на
[02:22:41.780 --> 02:22:46.940]  уравнение а там вот я дефицит на уравнение и говорят еще начальные условия игрок от нуль там
[02:22:46.940 --> 02:22:55.500]  ну что-то там от x игрок игрок штрих и там игрок от нуля равно нулю игрок штрих от нуля равно 1 вот
[02:22:55.500 --> 02:23:05.500]  ну мне слету господи что ты делаешь так господи машины вот какие-то но и была очередь но ты
[02:23:05.500 --> 02:23:12.060]  получил следующее но что я не не там как только уравнение решать там не очень было понятно но я
[02:23:12.060 --> 02:23:16.300]  думаю так ладно давайте почему думать что-нибудь подставить ну-ка вообще какая вообще функция бывает
[02:23:16.300 --> 02:23:20.620]  что игрок от нуля равно нулю игрок штрих от нуля равно один вот какая в голову приходит вот
[02:23:20.620 --> 02:23:27.540]  синус да логично так вот подставил синус он зашел поэтому я часто пишу заметим шусти до с подходит
[02:23:27.540 --> 02:23:33.620]  дальше потеряеме существования единственности задачи каши все но вот так вот прихожу на
[02:23:33.620 --> 02:23:38.380]  русский экзамен все меня обвиняют списывание пошел говрят вы чувствуете у нас не такое было
[02:23:38.380 --> 02:23:44.820]  сам было заметим что подходит игрок равно и дальше трехэтажная дробь но я говорю узнаете ну синус
[02:23:44.820 --> 02:23:51.220]  это как бы не тот ответ рату и типа нельзя угадать но идите к лектору но вот ну конечно вот ну
[02:23:51.220 --> 02:24:02.060]  лектор пошел там под это позвал спросил семинариста семинариза меня вступился в общем но чем
[02:24:02.160 --> 02:24:09.400]  очень люди потому что а уdalev know
[02:24:09.400 --> 02:24:10.140]  тогда вот он тогда не мне-то вас напрямую apparent位 или будет знать mand goo
[02:24:10.140 --> 02:24:18.980]  спис alliances я не знаю вот так же соответственно вот хотя из jobbarа то есть убедия да то
[02:24:20.100 --> 02:24:24.340]  OVERWAT C то есть убедия но то есть удалось там то есть л overlap то есть экзамен заовору
[02:24:24.340 --> 02:24:30.820]  там закончился там успешным отлом так что соответственно вот а хорошо us know вот дальше идем
[02:24:30.820 --> 02:24:36.460]  дальше вот поэтому это я просто к чему то есть как бы и желательно иногда то
[02:24:36.460 --> 02:24:39.380]  есть иногда еще это так угадывать ответ нужно аккуратно иногда да
[02:24:39.380 --> 02:24:54.220]  пошел ой пошел мало нет ну мало ли нет знаете я не твой сосед не ну бывает
[02:24:54.220 --> 02:24:56.940]  просто там неприятно то есть одной команде например одна команда там в
[02:24:57.540 --> 02:25:03.300]  аналогичный пример нет они там показали просто смешной номер но в котором суть
[02:25:03.300 --> 02:25:08.100]  заключается в том что там они там вывели на сцену хором vd и начали там петь что мы
[02:25:08.100 --> 02:25:11.700]  там что там мы там хотели сделать это пафосная поэтому чтобы сделать там все
[02:25:11.700 --> 02:25:16.900]  круто там за 200 тысяч мы о рамоче тарин давали хор и хор да это так что
[02:25:16.900 --> 02:25:21.540]  погодите варен давали хор чтобы не спели одно слово но это хор там хором да
[02:25:22.100 --> 02:25:27.260]  вот такой гречек все нормально вообще классный гэк но результате команде
[02:25:27.260 --> 02:25:32.340]  прилетела потому что выяснилось что где-то за там за примерно год до этого там где-то
[02:25:32.340 --> 02:25:36.820]  там международные лиги ровно идентичный гэк показала там другая команда и вот и
[02:25:36.820 --> 02:25:42.260]  команде пришлось вот просто разводить руками и просто объяснять что не там что
[02:25:42.260 --> 02:25:45.060]  действительно совпадение случайный просто объясняли просто просто из какой
[02:25:45.060 --> 02:25:48.460]  логики они вообще это сделали то есть хотелось делать что-то массовое то есть
[02:25:48.460 --> 02:25:52.700]  массовое действительно какой-то хор там виде там видим mvd а прокат там какая
[02:25:52.700 --> 02:25:59.820]  песня поется с хором vd ну как бы очевидно вот там ну и так далее вот то
[02:25:59.820 --> 02:26:07.580]  есть ну ну любишь надо который да там пожелай ты ни пуха ни пера но то что в
[02:26:07.580 --> 02:26:12.500]  какой-то песне там это прется там да там вот это хором пожелай ты им не пуха не
[02:26:12.500 --> 02:26:19.300]  пера да вот это все неважно ладно вот то есть там просто да не знаю то есть
[02:26:19.300 --> 02:26:22.900]  конечно то есть понятно в такой ситуации конечно дала да видимо вторая
[02:26:22.900 --> 02:26:26.140]  команда может думать бесконечно долго что формально говорят да то есть это как
[02:26:26.140 --> 02:26:31.740]  бы там они выступили там причем в ютубе там собственно номер был поэтому ну да
[02:26:31.740 --> 02:26:36.580]  но к сожалению да возможно возможно все ну вот поэтому вот то есть их там слава
[02:26:36.580 --> 02:26:41.020]  богу никто ни в чем не обвинил но соответственно ладно значит идем дальше
[02:26:41.020 --> 02:26:44.020]  значит тут у нас все хорошо а вот теперь давайте а вот теперь начинается
[02:26:44.020 --> 02:26:57.020]  мясо значит значит смотрите так значит для любого и от одного до z утверждается
[02:26:57.020 --> 02:27:13.100]  что н и т без ли не превосходит не угадать да нет нет туда сам или можно
[02:27:13.100 --> 02:27:18.460]  попробовать развлечься потому что нет в том в том плане смотрите а давайте нет
[02:27:18.460 --> 02:27:21.900]  потому что мы в принципе уже можем предсказать ответ потому что мы уже
[02:27:21.900 --> 02:27:25.580]  знаем собственно по какой технологии мы вообще-то доказывать будем точнее из
[02:27:25.580 --> 02:27:30.740]  какой технологии будем вычислять да значит но давайте смотреть потому что
[02:27:30.740 --> 02:27:38.020]  жила была у нас какая-то вершина с рангом в да то есть что нет что вообще
[02:27:38.020 --> 02:27:44.700]  означает что у нас ребро попало множество н и что это означает это
[02:27:44.700 --> 02:27:49.060]  означает значит то есть доказательства то есть это означает что у нас нашлось
[02:27:49.060 --> 02:27:59.460]  такое g что а от и g меньше либо равно значит r от в меньше r w меньше чем а от
[02:27:59.460 --> 02:28:04.860]  и g плюс один да то есть нашлось вот это вот то есть как это то есть две точки
[02:28:04.860 --> 02:28:09.940]  которые тут в интервал в пол интервалы легли но в и там ряду такой интервал
[02:28:09.940 --> 02:28:21.700]  нашелся в нот а выше такое не нашлось примете дам а выше тут вот оказались
[02:28:21.700 --> 02:28:26.980]  еще какие-то точки какие-то вот перескоки то есть означает но то есть
[02:28:26.980 --> 02:28:34.220]  означает что наши ребро делает вот хотя бы один перескок видно да вот но
[02:28:35.020 --> 02:28:41.140]  это значит вот у нас такая технология тогда значит если говорить опять же а
[02:28:41.140 --> 02:28:49.260]  перес соответственно о перескока значит и значит и если у нас говорить о
[02:28:49.260 --> 02:28:53.180]  перескоко то теперь что-то сколько скачков из этой вершины в может быть
[02:28:53.180 --> 02:28:57.500]  начинать ровно столько то есть не ровно столько сколько у нас тут точек
[02:28:57.500 --> 02:29:14.740]  между ними правда а точек между ними у нас сколько но вот ну на самом но вот
[02:29:14.740 --> 02:29:19.660]  но на самом деле смотрим но вот да да но вот ну да вот хороший вопрос действительно
[02:29:19.660 --> 02:29:24.780]  сколько тут точек по точнее бы оценивать что-то мы помним что а и же вот оба этих числа помню
[02:29:24.780 --> 02:29:33.220]  в предыдущем ряду лежат причем под именем каким значит а от и минус один значит а от и
[02:29:33.220 --> 02:29:45.540]  жи минус один и вот это лежит под именем а от и минус один а это жи ты видно да но это то есть как
[02:29:45.540 --> 02:29:49.340]  видите нам тут просто еще сказали в каких конкретно позициях в этом ряду они лежат
[02:29:49.340 --> 02:29:54.860]  но поиска отсюда следует что перескоков на самом деле будет не более чем вот вот столько
[02:29:54.860 --> 02:30:04.100]  минус вот столько но будем для простоты оценивать просто что вот столько да значит тогда получается
[02:30:04.100 --> 02:30:15.380]  сумма у нас получается такая что модуль н и т минус элиты не превосходит чего получается значит
[02:30:15.380 --> 02:30:21.540]  сумма ну во первых по всем же получается же от нуля до сколько там получается ну допустим
[02:30:21.540 --> 02:30:30.460]  но до бесконечности короче по барабану вот на самом деле получается перескоков может быть
[02:30:30.460 --> 02:30:38.340]  а от и же и это а ты же умножаем на а сколько у нас вообще таких а сколько у нас таких вершин
[02:30:38.340 --> 02:30:49.860]  в вообще бывает которые сколько у нас бывает вершин которые в этом ряду попали значит попали
[02:30:49.860 --> 02:31:00.060]  в ранг вот между а и ж до а и ж плюс один сколько у нас их но вот да но на самом деле ну ладно
[02:31:00.060 --> 02:31:03.620]  формально это должен но на самом деле чтобы не повторяться заметим что я тут должен написать
[02:31:03.620 --> 02:31:11.780]  просто модуль с и ж этого согласны вот просто у нас мы вот ровно для этого тут он специально
[02:31:11.780 --> 02:31:24.220]  лему прописали вот вот получается следующее же значит от л плюс один значит это получается а от
[02:31:24.220 --> 02:31:34.500]  и же на что у нас там получилось 2 н делить на 2 в степени а и и так а вот теперь вытекает
[02:31:34.500 --> 02:31:52.820]  вопрос как-то нормально оценивать что так ну 2 н можно но да это когда 2 н на сумму ну да давайте
[02:31:52.820 --> 02:32:03.980]  по-другому напишем да а и жи делать на 2 в степени а и жи нет можно сказать что это равно меньше
[02:32:03.980 --> 02:32:12.580]  либо равно но дает но вот вот эти тут вопрос какая нет я могу просто да я бы просто скажи
[02:32:12.580 --> 02:32:17.340]  так у меня вот это надежная оценка который я точно знаю которая работает давайте тут
[02:32:17.340 --> 02:32:21.420]  икс напишу их делить на 2 в степени икс а теперь чему равна сумма этого ряда кстати
[02:32:21.420 --> 02:32:39.420]  так но вроде 4 но вот вроде нот в рот 4 поэтому в принципе тут можно писать 8 н
[02:32:39.420 --> 02:32:48.340]  но самая самая смешной что принципе этого зайдет нет просто фишка такая на самом деле
[02:32:48.340 --> 02:32:54.020]  то есть можно то есть проблема такая на самом деле в оригинале у тарья но тут написано 5 восьмых
[02:32:54.020 --> 02:33:05.340]  но но этого но честно скажу я этого у пехона не понял значит смотрите там какие-то еще два
[02:33:05.780 --> 02:33:14.220]  два момента из которых я понял только один значит смотрите момент номер раз нет смотрите
[02:33:14.220 --> 02:33:22.100]  нет на самом деле так смотрите значит момент номер один который я понял то есть момент
[02:33:22.100 --> 02:33:33.780]  номер один тут сумма проходит от жи не от нуля от двойки почему ну про нот
[02:33:33.780 --> 02:33:46.740]  значит соответственно почему вот ну просто утверждается что при звать при жире внули
[02:33:46.740 --> 02:33:52.820]  там при же равно 0 и 1 на самом деле как будто там просто называется больше чем одного ребра
[02:33:52.820 --> 02:33:59.420]  собственно такого не бывает что что такое вот это н и минус или да напоминаем да то есть
[02:33:59.420 --> 02:34:07.740]  н это это мы значит то есть то есть мы помним да что вот но вот но вот хотя нет здесь уже не
[02:34:08.740 --> 02:34:31.420]  так так так так так так так так нет тут оба не почему сейчас нет у нас нет вот так нет в итоге
[02:34:31.420 --> 02:34:37.620]  как выяснился вроде не принципиально на самом деле там нет у него как-то вот константа меньше
[02:34:37.660 --> 02:34:45.460]  потому что как минимум в 1967 เซ надо вот для жи только двух HIX вот почему потому что но я
[02:34:45.460 --> 02:34:50.880]  вот почему тут понятно не очень если честно потому что для какого-то и вот то есть утверждается
[02:34:50.880 --> 02:34:56.580]  что чисто теоретически вроде как она потому что заметим следующая ну accessible так для
[02:34:56.580 --> 02:35:03.580]  если и ну потому что заметим следующее что если же у нас оканут то есть если у нас
[02:35:03.580 --> 02:35:07.980]  ж окажется при каком-то и вот когда попадет в один или в ноль то тогда и
[02:35:07.980 --> 02:35:12.580]  ребро тогда это но то есть ребро попадет вот интервал 24 то он
[02:35:12.580 --> 02:35:18.100]  автоматически провалится на нулевой ряд помните да у нас в этом ряду так
[02:35:18.100 --> 02:35:22.220]  должно быть а тут нет просто лишних дырок нет поэтому на самом деле просто
[02:35:22.220 --> 02:35:25.340]  вот в этих дыхках на привод и больше одного на самом деле тут просто ничего
[02:35:25.340 --> 02:35:31.180]  нет поэтому суммируем от двойки но к чему это нас приводит это сприводит
[02:35:31.180 --> 02:35:36.100]  к тому что как бы тут суммируем от двоечки тут суммируем тогда от двоечки тут
[02:35:36.100 --> 02:35:47.540]  суммируем от двоечки и тогда вместо 8 мы получили двое что-что
[02:35:47.540 --> 02:36:03.820]  а как и чили да так понятно то есть давайте от 4 понял так понял понял сколько
[02:36:03.820 --> 02:36:12.340]  сейчас 21 точно ну я не знаю по-моему если у нас до двое от двойки до
[02:36:12.340 --> 02:36:17.220]  бесконечности сумма была один то тут сейчас сумма должна быть одна четвертая
[02:36:17.540 --> 02:36:28.820]  ну вот так ну смотрите а нет ай лада неправ хорошо нет хорошо нет ну хорошо нет
[02:36:28.820 --> 02:36:37.180]  это хорошо если это 4 потому что да да нет ладно нет давайте давайте я знаю как
[02:36:38.180 --> 02:36:58.380]  а от и 2 вот правда по-любому 4 нет чего нет у нас нет утверждалось следующее что
[02:36:58.380 --> 02:37:07.780]  если суммировать с нуля то сумма будет 4 так ну хорошо давайте разбираться так
[02:37:07.780 --> 02:37:14.900]  хорошо так давайте так давайте надежно сделаем x 2 в степени x где x у нас но от
[02:37:14.900 --> 02:37:18.580]  нуля но в принципе можно от единицы потому что равно ну значит это у нас
[02:37:18.580 --> 02:37:25.020]  равно давайте пишем первый ряд значит то есть я это обычно расписываю так то
[02:37:25.140 --> 02:37:38.180]  пишем 1 вторая потом 2 1 четвертая потом 3 1 восьмая потом 4 1 16 1 16 1 16 1 16 но и
[02:37:38.180 --> 02:37:43.540]  так далее но тогда смотрите вот в этом ряду получается тут 1 тут 1 вторая тут
[02:37:43.540 --> 02:37:50.380]  1 четвертая тут 1 штат очень получается 2 да тут получается 2 то есть это исходно
[02:37:50.380 --> 02:37:56.060]  было бы 4 хорошо но теперь давайте представим себе что мы суммируем
[02:37:56.060 --> 02:38:07.300]  начиная с четверки да ну а ну да хорошо да но если начинается четверки то это
[02:38:07.300 --> 02:38:14.540]  равно то есть получается 2 n на 2 минус 1 вторая минус там две четвертые минус
[02:38:14.540 --> 02:38:24.460]  3 8 только только умноженное на 2 то есть то есть как будто лишняя двойка еще
[02:38:24.460 --> 02:38:33.140]  где-то сократилась откуда мы двойку взяли вообще о и там да в чем там все
[02:38:33.140 --> 02:38:51.140]  честно было странно а ну сам идеально он что-то такой писал главное про это да
[02:38:51.140 --> 02:39:07.340]  вот вот вот вот так нета чем это поможет хорошо допустим давайте так давайте хорошо
[02:39:07.340 --> 02:39:13.700]  2 с суммируем только начинаем видимо не с четверки а с двойки на этот раз да
[02:39:13.700 --> 02:39:34.580]  так пройдите да так ну ладно тут получается д-10 8 так ну пройдите если вот ладно давайте
[02:39:34.580 --> 02:39:41.060]  я начну про их с двойки вот так вот да то что у меня получится то есть равно тогда
[02:39:41.060 --> 02:39:51.220]  пройдите вовсе получается 4 н так погодите чем это поможет нет нет просто сумму получается
[02:39:51.220 --> 02:39:59.820]  вот такая два в степени 2 x до бесконечности нет ну да нет просто получить но получается
[02:39:59.820 --> 02:40:08.940]  примерно следующее что начиная с двух если то получается что там получается одна одна как то
[02:40:08.940 --> 02:40:21.180]  есть 1 шестнадцатая 1 шестнадцатая то есть 1 30 сколько там 64 1 6 4 4 ну и так далее значит
[02:40:21.180 --> 02:40:28.620]  так теперь только это вопрос вот это так так так давайте так вот эту сумму чему равна
[02:40:28.620 --> 02:40:42.660]  так нет давайте так просто 1 плюс 1 четверть плюс 1 шестнадцатая плюс и так далее это у
[02:40:42.660 --> 02:40:52.780]  нас равно что-то типа 1 делить на 1 минус 2 равно 4 3 так 4 3 но да то есть получается делим так
[02:40:52.780 --> 02:41:03.260]  тут получается так значит 1 12 нет давайте не так нет давайте не так запишем значит я вот
[02:41:03.260 --> 02:41:13.780]  значит ответ равен 1 16 на 4 3 плюс 4 3 на 1 плюс 1 4 плюс 1 16 но вот тут вот эта
[02:41:13.780 --> 02:41:24.260]  лестница пошла потому что плюс и так далее это равно так 1 16 умножить на 4 3 плюс 4 3 на
[02:41:24.260 --> 02:41:38.340]  4 3 так это у нас 4 3 значит это 12 девятых 12 девятых тут сколько а ну да на 28 девятых
[02:41:38.340 --> 02:41:47.520]  вопрос кайфец так получается вообще какой-то кайф так нет а погодите нет давайте пошлеп
[02:41:47.520 --> 02:42:00.860]  шлепаем сначала вот тут получается 7 4 получается 7 36 ой о боже мы убили тарья на кайф ладно
[02:42:00.860 --> 02:42:30.860]  да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да да
[02:42:30.860 --> 02:42:36.980]  да кладу нет но тогда не было нет ну ребят всегда заметил с таким прореженым
[02:42:36.980 --> 02:42:42.180]  керманам принципе да а нет вот да но так и прореженым керманам конечно зайдет
[02:42:42.180 --> 02:42:44.840]  все что угодно да
[02:42:44.840 --> 02:43:00.640]  Нет, шутки шутками, но это на самом деле серьезная
[02:43:00.640 --> 02:43:01.640]  проблема.
[02:43:01.640 --> 02:43:03.640]  Потому что одна из на самом деле любимых байк моего
[02:43:03.640 --> 02:43:08.960]  научного руководителя на самом деле заключается
[02:43:08.960 --> 02:43:14.440]  в том, что на самом деле один академик со своими учениками
[02:43:14.440 --> 02:43:20.920]  поводился писать статьи какого-то вида, там некоторое
[02:43:20.920 --> 02:43:26.340]  свойство каких-то там гиперкрафов с параметрами
[02:43:26.340 --> 02:43:27.340]  ИЖК.
[02:43:27.340 --> 02:43:31.960]  В чем ИЖК это я сказал, потому что статья с параметрами
[02:43:31.960 --> 02:43:41.080]  5, 6, 9, потом пришло через год, то же самое 5, 7, 11 и так
[02:43:41.080 --> 02:43:42.080]  далее.
[02:43:43.080 --> 02:43:46.240]  То есть реально там в Шуралдоклада академии наук там было
[02:43:46.240 --> 02:43:49.600]  просто десятками, едва ли не десятками исчислялась
[02:43:49.600 --> 02:43:52.560]  статьи с ним, с его учениками, кто-то даже кандидатский
[02:43:52.560 --> 02:43:53.560]  защитил.
[02:43:53.560 --> 02:43:58.520]  Ну вот, нет, это просто, он академик, поэтому заходил
[02:43:58.520 --> 02:43:59.520]  в нот.
[02:43:59.520 --> 02:44:00.520]  Нет, поэтому нот.
[02:44:00.520 --> 02:44:02.520]  Хотя нет, или академик, или что-то.
[02:44:02.520 --> 02:44:06.000]  Поэтому там в итоге пришлось принять меры, то есть пришлось
[02:44:06.000 --> 02:44:10.800]  принять меры для того, чтобы подобное не заходило.
[02:44:11.280 --> 02:44:13.960]  Вот, к сожалению, я забыл, то есть это вот, пожалуйста,
[02:44:13.960 --> 02:44:16.240]  так что если встретите там вот, собственно, моего
[02:44:16.240 --> 02:44:18.160]  научного руководителя, то есть он там вам с удовольствием.
[02:44:18.160 --> 02:44:19.160]  Это очень под...
[02:44:19.160 --> 02:44:23.040]  Нет, как-то вот товарища зовут я, к сожалению, не знаю.
[02:44:23.040 --> 02:44:26.120]  Нет, по-моему, его зовут Махнёп, потому что он его
[02:44:26.120 --> 02:44:27.120]  зовут Махнёп.
[02:44:27.120 --> 02:44:28.800]  Научного руководителя зовут Алексей Яклечко, Нель
[02:44:28.800 --> 02:44:30.560]  Белов, соответственно.
[02:44:30.560 --> 02:44:32.640]  Вот, ну собственно, он любит эту историю.
[02:44:32.640 --> 02:44:34.520]  Так что есть те, кто с ним знаком, вполне вероятно,
[02:44:34.520 --> 02:44:35.520]  что вы её уже слышали.
[02:44:35.520 --> 02:44:36.520]  Вот.
[02:44:36.520 --> 02:44:39.800]  Ну, если кто в комбалке был бы, я думаю, почти наверное,
[02:44:39.800 --> 02:44:49.160]  вот но то есть это так что соответственно так вот ладно ну у нас тут слава богу мы
[02:44:49.160 --> 02:44:56.320]  сейчас без этого обойдемся так а теперь как вы думаете от чему у нас равно
[02:44:56.320 --> 02:45:01.600]  количество а если я тут вот возьму z
[02:45:01.840 --> 02:45:06.120]  как вы думаете
[02:45:06.120 --> 02:45:11.760]  до вашей ставки
[02:45:11.760 --> 02:45:18.440]  подтверждение так глядя на доску может догадаться можно догадаться
[02:45:18.440 --> 02:45:35.320]  да почему бы ему не быть нет ну давайте внимательно смотреть что это смотрите
[02:45:35.320 --> 02:45:41.600]  например значит логика та же жил был с этого сперта то есть это с первого ряда у нас нет то
[02:45:41.600 --> 02:45:47.680]  есть нас интересует те кто даже в зад плюс первый ряд не попал в эти зэпы то есть это означает что
[02:45:47.680 --> 02:46:01.120]  любое такое ребро оно делает перескок нас этом ряду вот причем более но вот причем что важно
[02:46:01.120 --> 02:46:06.200]  каждый такой перескок так это не последний ребро то при файне значит у нас оно начинает
[02:46:06.200 --> 02:46:10.200]  перескакивать уже не через одну чиселка там сначала через два потом через три и так далее
[02:46:10.200 --> 02:46:17.880]  вот поэтому здесь ответ соответственно должен быть очевидно но для каждой вершины на сколько
[02:46:17.880 --> 02:46:22.920]  перескоков можно сделать из одной вершины а сколько их можно сделать а сделать их можно не
[02:46:22.920 --> 02:46:30.600]  более чем а сколько у нас чиселок в последнем ряду а теперь как вы думаете сколько у нас
[02:46:30.600 --> 02:46:40.680]  чиселок последнем ряду нас интересует да а малая да а малая от чего я утверждаю что в явном
[02:46:40.680 --> 02:46:49.960]  виде а малая от z и n прям в явном виде почему потому что заметим что ранги у нас не превосходят
[02:46:49.960 --> 02:46:57.840]  именно логарифма то есть вот почему у нас в тэшке именно логарифм стоит видите да нет нет именно
[02:46:57.840 --> 02:47:03.280]  потому что как бы мы знаем что если тут в ряду появилось число больше логарифма значит перескока
[02:47:03.280 --> 02:47:09.360]  через него не будет уже никогда то есть нас интересует только числа не превосходящие логарифма
[02:47:09.360 --> 02:47:15.440]  поэтому вот эта ашка это соответственно и символизирует а сколько у нас чисел там не
[02:47:15.440 --> 02:47:26.760]  превосходят логарифма вот так что вот такая вот радость ну что так но кажется кажется нам
[02:47:27.240 --> 02:47:33.000]  кажется нам этого должно быть достаточно достаточно для того чтобы скомпоновать результат то есть
[02:47:33.000 --> 02:47:36.320]  так значит какой у нас соответственно результат
[02:47:36.320 --> 02:47:49.720]  да читерский результат значит серияма 13 модуль f не превосходит чего
[02:47:49.720 --> 02:48:04.760]  но нет смотрите нет я как это да песня была написана в несойсную нам манере вот и значит
[02:48:04.760 --> 02:48:11.200]  соответственно поэтому я не буду пока писать ответ потому что ответ не тривиальный то есть нет
[02:48:11.200 --> 02:48:17.280]  тут не будет это вот этого обычно вот это 57 179 там вот это вот вот как всегда не вот
[02:48:17.280 --> 02:48:27.280]  нет но давайте смотреть нет просто применяем технологию f равно шить такое сумма элитах плюс
[02:48:27.280 --> 02:48:38.000]  сумма элитах без элит логично да и равно от нуля до z плюс один и равно от нуля до z плюс один так
[02:48:38.000 --> 02:48:44.440]  вот у нас тут целых четыре леммы написаны очень удобно это не превосходит чего это не
[02:48:44.440 --> 02:48:52.120]  происходит м на z плюс два нет я вот отсюда взял да так вот тут уже чуть не тривиально да что я
[02:48:52.120 --> 02:49:08.120]  тут должен написать n плюс что еще должен взять 7 36 n на z будь здоров да тут прям да и а от z
[02:49:08.120 --> 02:49:21.880]  вот что вот нет она для нулевой оценки но нет ведь у нас тут круче оценка просто да пока
[02:49:21.880 --> 02:49:31.640]  тут было бы там 8 н она была бы не нужна но у нас вот так то есть в общем вот такой кофец так ну
[02:49:31.640 --> 02:49:42.520]  теперь давайте смотреть вот ну теперь давайте думать нет думать надо вот о чем то есть теперь
[02:49:42.520 --> 02:49:55.520]  надо думать какой z подогнать потому что смотрите какая ситуация да ну давайте не вспомним что
[02:49:55.520 --> 02:50:02.400]  такое помните давайте помню а это значит минимально вот такой же очевидно чем и больше чем же меньше
[02:50:02.400 --> 02:50:12.080]  правда то есть но то есть наоборот это но то есть получается чем z больше чем эта штука убывает то
[02:50:12.080 --> 02:50:16.800]  есть у нас типичная то есть типичная наша вот эта ситуация из нашей корневухи или четырех русских
[02:50:16.800 --> 02:50:23.280]  то есть z возрастает эту штуку убывает вот как бы ее нам подогнать
[02:50:23.280 --> 02:50:41.440]  так так слушайте как интересно вот давайте просто а давайте действительно может только давайте
[02:50:41.440 --> 02:50:48.400]  посмотрим вот если подставим z равно 2 что получится получится 4 м плюс n плюс там сколько
[02:50:48.400 --> 02:51:01.280]  7 18 н плюс n на так чему у нас равно от 2 n на лог звездочка n ой нет потому что я тут крючок
[02:51:01.280 --> 02:51:10.400]  не дописал так так пожалуйста то есть равно от м плюс н лог звездочка n так круто мы уже
[02:51:10.400 --> 02:51:23.960]  победили то что было раньше нельзя но потому что у нас есть тарьян который у него был круче
[02:51:23.960 --> 02:51:29.160]  как бы скажем так но тут вот тут начинается балансный момент у него как бы явно спожарированный
[02:51:29.160 --> 02:51:35.520]  результат так что не очень интересно вот значит потому что тот предлагается действительно
[02:51:36.240 --> 02:51:43.720]  потому что чтобы нам вообще от этого z хотелось то есть до это функция работает очень-очень-очень-очень-очень-очень
[02:51:43.720 --> 02:51:54.040]  очень медленно вот то есть но то есть где тут возникает вопрос где ее можно прижать но
[02:51:54.040 --> 02:52:02.320]  ее можно прижать так ну чтобы ну скажем так насколько тут можно за увеличить вот этот вот z
[02:52:02.320 --> 02:52:16.840]  но вот нет но на или или наоборот зауменьшить да тут-то наоборот ведь и так как функцию было тут
[02:52:16.840 --> 02:52:22.880]  как бы ведь и функция там растет тут функцию бывает поэтому тут наоборот то есть получается там
[02:52:22.880 --> 02:52:29.520]  м да вот то есть в принципе нам желательно нам хочется чтобы вот то есть действительно чтобы
[02:52:29.520 --> 02:52:37.160]  вот это слакаемая оказалась в районе где-то здесь в районе но заметим что при этом если это z как-то
[02:52:37.160 --> 02:52:44.200]  буду брать это м на это z домножим да но первое заметим следующее что если я возьму да то есть
[02:52:44.200 --> 02:52:51.080]  ну чисто теоретически я мог бы взять м равно вот от единицы вот например 2 да но при этом я уже
[02:52:51.080 --> 02:52:56.200]  замечу что константа нам не подойдет что ну как не подойдет в принципе ну то есть у нас получится
[02:52:56.200 --> 02:53:03.880]  м против вот м лог звездочек кто больше ну вопрос да м чаще всего конечно больше хотя если м равно
[02:53:03.880 --> 02:53:13.160]  n то там конечно уже но вот но и ладно если мы но если мы нацеливаемся на что-то более точное да
[02:53:13.160 --> 02:53:20.960]  в чем и в общем случае то наверное придется брать наверное какую-то не константу но тут логично ну
[02:53:21.320 --> 02:53:27.840]  что-то хочется применить но логично наверное было бы чтобы вот эта вот штука наверное где-то
[02:53:27.840 --> 02:53:38.160]  была ну не больше м где-нибудь или хотя бы вот м правда вот поэтому надо подобрать такое z то есть
[02:53:38.160 --> 02:53:46.160]  хочется подобрать такое z чтобы вот эта штука не превосходила там 2 м поделить на и вот хотелось бы
[02:53:46.160 --> 02:54:01.480]  где-то вот тогда так вот или даже четырех но вот хотя но вот нет то действительно но
[02:54:01.480 --> 02:54:11.200]  давайте вот скажем скажем давайте так и скажем что пусть скажем что альфа тм это пусть это будет
[02:54:11.200 --> 02:54:24.120]  такое минимальное допустим z там больше либо равные единицы такое что ну короче говоря а от
[02:54:24.120 --> 02:54:37.160]  z было там значит там больше чем 2 м поделить на это ладно ладно тут почему-то заказали 4 я не знаю
[02:54:37.160 --> 02:54:54.600]  почему но давайте такое возьмем что тогда можно сказать тогда заменю но вот так вот давайте скажем
[02:54:54.600 --> 02:55:12.120]  что вот сейчас нет давайте думать можно ли в таком виде сказать нет но не так что нет
[02:55:12.120 --> 02:55:19.640]  давайте так вот допустим мы скажем что ладно тут давайте вместо за это напишу x все-таки а теперь
[02:55:19.640 --> 02:55:25.880]  я скажу что пусть у меня z я просто хочу сказать чтобы z у меня был равен альфа тм вот прям мне
[02:55:25.880 --> 02:55:36.200]  вот очень очень хочется и теперь я хочу понять отчего меня это приведет да приведет ли это меня
[02:55:36.200 --> 02:55:45.200]  к чему-нибудь да само ну само с точки зрения верхней оценки пока по моему меня это не приведет
[02:55:45.200 --> 02:55:52.040]  не особо к чему потому что если я по определению подставлю такое альфа вот сюда то что у меня
[02:55:52.040 --> 02:56:01.160]  получится что получится у меня что-то больше чем 4 поэтому давайте так попробуем можно попробовать
[02:56:01.160 --> 02:56:12.000]  по-другому то есть максимальная такой и что было все-таки вот так вот ну допустим да может
[02:56:12.000 --> 02:56:22.400]  быть даже больше либо равно нуля просто если я себе такой подставлю что нет просто если я
[02:56:22.400 --> 02:56:30.840]  себе такое подставлю то получится то тогда все честно пишем то есть это не более чем там значит
[02:56:30.840 --> 02:56:46.720]  м на вот эту вот получается альфа от мн плюс ничего нас тут плюс 2 м плюс
[02:56:47.080 --> 02:57:01.160]  плюс 7 36 тоже n опять же на эту же альфу плюс сколько там получилось 4 м это не превосходит ну
[02:57:01.160 --> 02:57:07.880]  короче говоря если раз вот там можно паться там можно еще ну значит получается значит м плюс
[02:57:07.880 --> 02:57:21.160]  7 36 значит альфа от мн плюс 6 м плюс вот можно было бы так ну конечно это не совсем канонично
[02:57:21.160 --> 02:57:39.960]  получилось потому что она вот но чего тарья так нет просто вот нет просто да просто так нет
[02:57:39.960 --> 02:57:46.480]  он просто альфу другую вводит он просто почему-то для удобства пишет что это минимальное такое x
[02:57:46.480 --> 02:57:58.600]  больше либо равного одного что а от x и 4 м делить на n вот почему-то он пишет больше чем лог 2
[02:57:58.600 --> 02:58:10.240]  м так но правда это похоже на правда это заметим что это просто идентична от от чего-то
[02:58:10.240 --> 02:58:37.160]  до x и вот это вот вот вот что-то сейчас не понял от x и 4 м
[02:58:40.720 --> 02:58:53.440]  у нас же определение так сейчас где у нас там определение было не вижу а ты же да
[02:58:53.440 --> 02:59:09.120]  а это прям а потому что это все да то есть то есть альфа от мн получается что такое это
[02:59:09.120 --> 02:59:28.000]  просто а то есть вот так получается да то есть понятно то есть в явном виде сейчас сейчас
[02:59:28.000 --> 02:59:37.400]  погодите нет только у нас бежит то вот этот констант они вот это вот условия а тикс 4 м да
[02:59:37.400 --> 02:59:50.960]  но эквивалентно условию а и к сенте меньше либо равно 4 так вот это а так чему это эквалентно
[02:59:50.960 --> 03:00:05.360]  еще раз так а и к сент что что к моменту 4 что к моменту 4 м она уже перевалила за лабиринт
[03:00:05.360 --> 03:00:14.880]  так нет что-то у меня по конец ситуации так ладно берем значит а ты не значит это мы
[03:00:14.880 --> 03:00:30.320]  то есть там ну скажем та сейчас нет вообще не то же самое вот вот так ну мы это может их
[03:00:30.320 --> 03:00:38.200]  ану хотим и что так перевел перевалил зала грифа да но там просто там что-то они это там вот
[03:00:38.200 --> 03:00:44.080]  n стоит просто слева тут нет но вот а тут как-то вот стоит что-то другое и не весь минимум
[03:00:44.080 --> 03:00:53.240]  равен а а условия написано вот это вот а и с 4 м больше 2 м эквивалентно тому что а и к сент
[03:00:53.240 --> 03:01:01.120]  меньше 4 м а я хочу сказать что а то что то что написано у вас ну да я сам пытаюсь это понять
[03:01:01.120 --> 03:01:07.040]  но у меня в счет пока то есть вот то есть утверждаешь что это то есть вот это вот утверждает вот это
[03:01:07.040 --> 03:01:22.360]  вот эквивалентно тому так давайте разбираться что что что а от xn меньше либо равно 4 вот это
[03:01:22.360 --> 03:01:34.200]  так что так ну нет смотря как нет вот ну раз рассмотрим вот это нет вот это условия от сейчас
[03:01:34.200 --> 03:01:47.040]  нет нет кайфе смотрите потому что но нет давайте так но вот нет ну давайте так нет ну давайте так
[03:01:47.040 --> 03:01:54.280]  что такое от xn то есть от xn это минимальное такое же чтобы от xg а большое ты же было
[03:01:54.280 --> 03:02:01.960]  больше логарифма да минимально но тогда начать вот вот это вот утверждение в принципе означает
[03:02:01.960 --> 03:02:09.920]  что 4 м дилит на n это оно либо равно этому же либо даже больше его потому что там здесь нас интересует
[03:02:09.920 --> 03:02:15.120]  первый момент когда оно переводится логарифм вот да а вот это условие означает что к моменту
[03:02:15.120 --> 03:02:22.720]  4 м дилит на н перевал произошел вот поэтому вприня на поэтому вот при так о да поэтому при
[03:02:22.720 --> 03:02:29.520]  такой альфе действительно получается вот подставлять можно и поэтому давайте мы это убьем так все вот
[03:02:29.520 --> 03:02:38.560]  поэтому поэтому канон такой да а может и то же самое в общем-то да ну просто скажем так спойлер
[03:02:38.560 --> 03:02:44.160]  так весь мир под альфой будет подразумевать первую очередь вот это нет просто весь мир под
[03:02:44.400 --> 03:02:51.720]  альфой будет подразумевать вот это почему потому что так сказал тарьян нет нет это тоже самое но
[03:02:51.720 --> 03:02:56.280]  я же рассказываю это тоже самое как давайте возрапить что я не признаю числа пи потому
[03:02:56.280 --> 03:03:00.720]  что она определенно неправильно потому что звать так потому что там какой-то там дебил в древности
[03:03:00.720 --> 03:03:05.060]  стал делить там длину окружности на диаметр они как нормальные они как нормально надо сделать на
[03:03:05.060 --> 03:03:10.800]  радиус да может так делать лучше двое по убивается дай все такое только маленькая проблема весь мир уже
[03:03:10.800 --> 03:03:16.220]  как бы пользуется числом пи все там вся литература пишется про пи там все формулы и вообще по числу пи
[03:03:16.220 --> 03:03:23.400]  то есть да число того есть но все живут через пи так что уже ничего не поделаешь то есть как бы скажем так
[03:03:23.400 --> 03:03:28.760]  миру конечно можно объяснять что вы все дебилы но с другой стороны тут как бы есть одна проблема вы
[03:03:28.760 --> 03:03:35.920]  можете быть сколько угодно умны но с другой стороны там как минимум вот то есть но с другой
[03:03:35.920 --> 03:03:43.240]  стороны есть один звать еще там по 18 веке по моему собственно был была была замечательно написано
[03:03:43.240 --> 03:03:48.080]  замечательная пица горе от ума называется да фратором там один товарищ возможно подробно тоже
[03:03:48.080 --> 03:03:53.800]  всем там пытался объяснить что они там все тупые но называется они не прониклись он вынужден был
[03:03:53.800 --> 03:04:01.680]  расстроенных к юстер слинять соответственно но хотя может быть он там был и правда но только
[03:04:01.680 --> 03:04:05.880]  маленькая проблема да может быть да может мы все неправильно живем но мы так живем уже ничего не
[03:04:05.880 --> 03:04:13.920]  поделаешь вот то есть да может быть неправильно можно бесконечно долго это обсуждать но только
[03:04:13.920 --> 03:04:21.200]  вот соответственно вот поэтому на самом деле поэтому лучше тут следовать вот брать такое хотя
[03:04:21.200 --> 03:04:27.120]  тут действительно по разному то есть на поверку может оказаться что действительно там разных алгоритмах
[03:04:27.120 --> 03:04:34.600]  на самом деле альфа могут быть потом вы там появится по разному потому что видите да потому что да ну
[03:04:34.600 --> 03:04:41.480]  собственно теперь можно да теперь это аккуратно написать так сколько у нас там получилось давайте
[03:04:41.480 --> 03:04:47.640]  в нашем виде напишем шутер я на конечно тут 5 восьмых было написано да но мы молодцы мы и тут
[03:04:47.640 --> 03:04:55.400]  было 10 м они 6 но мы молодцы мы написали круче потом может может как всегда софт хиппи да может
[03:04:55.400 --> 03:05:01.160]  как софт хиппе кто-нибудь кто-нибудь из вас собственно будет это рассказывать на экзамене и расскажет
[03:05:01.160 --> 03:05:09.400]  где тут бага но софт хиппом в прошлый раз так было ну пожалуйста если там да если потом богу не
[03:05:09.400 --> 03:05:15.360]  найдут вакей но собственно хотя хотя суть хотя сутьевой баги тут не будет а может там конкретная
[03:05:15.360 --> 03:05:21.920]  константа да тут это тут не 7 36 а 8 29 поэтому ваша доказательства не захитывается да ну как бы
[03:05:21.920 --> 03:05:37.320]  ну понятно это не на нашем предмете такое будет ну вот ну как сказать ну можно написать про ну
[03:05:37.320 --> 03:05:43.440]  давайте так можно написать на m плюс n хотя ну просто обычно мы подозреваем м больше либо равно
[03:05:43.440 --> 03:05:49.160]  n поэтому на пуды поэтому нам по барабану а если м меньше чем он то нужно внимать но можно внимательно
[03:05:49.160 --> 03:05:55.520]  задуматься а где он вот а где мы собственно пользовались тем что м больше либо равно n по
[03:05:55.520 --> 03:06:09.040]  моему более менее нигде а смотри ну вот вопрос вопрос тогда что считать нет вопрос что считать
[03:06:09.040 --> 03:06:14.320]  потому что если юнион там допустим заведомо вызывается там от двух корней то он делается
[03:06:14.320 --> 03:06:20.320]  за единицу вот но вот а если через файлы но тогда это тоже учитывается в этих м файндах
[03:06:20.320 --> 03:06:25.040]  автоматически отсюда получается больше либо равно даже больше поэтому поэтому это не так
[03:06:25.040 --> 03:06:33.280]  принципиально да легче просто больше либо равно н и уже там не парится вот вот так что
[03:06:33.280 --> 03:06:36.520]  видите да то есть на самом деле видите то есть альфа откуда взялась то есть видите то есть на
[03:06:36.520 --> 03:06:49.000]  самом деле мы попытались просто значит поуписывать логику ну мне кажется нормально
[03:06:49.000 --> 03:06:58.320]  нет ну как сказать но понятно это скорее психологически да я имею про да формально мы
[03:06:58.320 --> 03:07:03.480]  конечно с точки зрения наших с вами конечно опять же мы должны писать о это будет как бы
[03:07:03.480 --> 03:07:14.600]  то же самое идейно то но это просто психолог нет ну да нет идейно нам остается но идейно
[03:07:14.600 --> 03:07:18.920]  самое интересное было бы сказать что это просто интересно было бы задуматься действительно а
[03:07:18.920 --> 03:07:23.880]  насколько вообще это оценка точная потому что как бы мы тут брали брали одну функцию получился
[03:07:23.880 --> 03:07:28.800]  лоб звездочка взяли вот какую-то вон это было называется более экзотическую функцию скажем
[03:07:28.800 --> 03:07:34.720]  аккуратно и получили но вот и но ты неожиданно упихали еще теперь это текает вопрос а нельзя
[03:07:34.720 --> 03:07:40.480]  ли взять там еще более экзотическую функцию чем вот это но вот и получить что-нибудь еще
[03:07:40.480 --> 03:07:47.000]  да возможно фарон возможно реальный ответ выдает вопрос действительно от черта его
[03:07:47.000 --> 03:08:02.320]  знает пошепчет вот что-то уже даже тарьян усомнился хотя нет хотя но да а фредмана сакс нет как они
[03:08:02.320 --> 03:08:07.040]  утверждают нет вреда тут нет они-то то есть они-то доказали заново просто как бы в этой же статье
[03:08:07.040 --> 03:08:22.600]  тарьян доказал что быстрее не получится нет вот это и прикол что тарян заявил у себя в статье что
[03:08:22.600 --> 03:08:28.320]  как бы нет все вот это реально идеальная симпатика именно сына не он там не он не утверждал что как
[03:08:28.320 --> 03:08:33.760]  бы из этого мета мы больше ничего не упихаем тем более что обычно эти вещи так и не делают обычно
[03:08:33.760 --> 03:08:37.920]  эти вещи делают по принципу то есть если есть только верхняя оценка то мы честно пишем верхняя
[03:08:37.920 --> 03:08:43.560]  оценка то есть там а до самом деле там часто в статье опускает что там на самом деле мы тут вы что
[03:08:43.560 --> 03:08:51.760]  из этого меда выжили максимум нет ну то есть обычно это перепробирает потому что тут уже есть
[03:08:51.760 --> 03:08:56.840]  какая-нибудь нет тут уже есть какая-нибудь там там любимая байка уже андрей михалыч
[03:08:56.840 --> 03:09:02.120]  оригородского как он там просто решал какую-то задачу и где-то вот он что-то не досмотрел про
[03:09:02.120 --> 03:09:07.080]  оптимальную функцию поэтому его там быстренько обогнали но та фишка была там докажите что
[03:09:07.080 --> 03:09:12.200]  существует множество состоящие там не более чем там n объектов удовлетворяющий какого-то
[03:09:12.200 --> 03:09:16.640]  свойства неважно там в чем интересно было долго пытались доказать что его не существует в природе
[03:09:16.640 --> 03:09:22.960]  там а потом произошел прорыв там какие-то изолетяне доказали что что там может в общем множество там
[03:09:22.960 --> 03:09:27.560]  размера не более чем там полторы тысячи или что-то в этом роде и дальше начался чемпионат по упихаем
[03:09:27.560 --> 03:09:34.040]  не говорит что там по но потом по енот что-то потом появился в айтам что-то было в дом байзбах
[03:09:34.040 --> 03:09:42.520]  и доказал что там что-то 750 потом появился я и доказал что там их не более чем 581 вайзбах
[03:09:42.520 --> 03:09:48.640]  не сдавался так вот он посмотрел мою статью обнаружил там не то что сделал точной оценки и
[03:09:48.640 --> 03:09:58.400]  доказал что там 580 нету не важно потом их там уверенно уедет там текущий рекорд там 149
[03:09:58.400 --> 03:10:07.560]  или что-то вроде но вот ну вот мы не досмотрел ну вот так что тоже вот такая так что как
[03:10:07.560 --> 03:10:16.600]  происходить что рекорд был за вами они вот на халяву вот но соответственно но вот не но это
[03:10:16.640 --> 03:10:21.440]  такое конечно да не но это не но это такая забавняшка но обычно такая локальность уже нет
[03:10:21.440 --> 03:10:25.800]  просто вы что это придет тому что просто один математ скорее всего то есть много статей не
[03:10:25.800 --> 03:10:30.840]  будет потому что один математик и сядет там просто упихает до максимума и как бы рекорд будет его
[03:10:30.840 --> 03:10:41.360]  это ну то что в том плане что ну а нет а лучше по идее это как бы это но это ой ну тогда как
[03:10:41.360 --> 03:10:48.080]  если кто-то заподозрит он кто-то сядет и просто сделает это за вас так что так что нет и потом
[03:10:48.080 --> 03:10:57.280]  тут и потом но тут но тут это называется возникает вопроса надо ли это и главное для чего ладно так
[03:10:57.280 --> 03:11:02.080]  ну ладно значит смотрите ладно очень конечно отдельная песни действительно потому что там
[03:11:02.080 --> 03:11:08.880]  видимо много вопросов все это оптимальная это оценка или нет вот ну как бы может быть в какой-то
[03:11:08.880 --> 03:11:15.240]  момент и это но ладно сегодня мы этого делать уже не будем так ручок хотя конечно сколько там
[03:11:15.240 --> 03:11:24.240]  у нас времени нет ну как сказать сейчас 12 54 то есть в принципе до после этого перерыва
[03:11:24.240 --> 03:11:31.360]  в принципе у нас останется получается сколько ну там почетки полчаса ну ладно нет нет мы не
[03:11:31.360 --> 03:11:36.240]  начнем не то ни другое потому что есть на самом деле называется еще одна тема которую надо
[03:11:36.240 --> 03:11:44.040]  обсудить а там кое-что есть называется основные деревья вот так что соответственно так что вот так
[03:11:44.040 --> 03:11:48.400]  что не обещаю что в полчаса там не обещаю что в полчаса но как бы тут ну кое-что интересное
[03:11:48.400 --> 03:11:55.520]  там есть вот то есть до каскала мы крышу же доказали но но но тем не менее прикольный алгоритм будет
[03:11:55.520 --> 03:12:05.080]  так что мы не расходимся и и барубка тоже но там будет круче не ладно анонс у нас будет алгоритм
[03:12:05.080 --> 03:12:11.440]  который будет работать во первых за м лог звездочка нет это не краскал ну краскал как вы помните
[03:12:11.440 --> 03:12:17.720]  за им логом работает да вот но он будет начать и мы который всегда работает за им лог звездочка
[03:12:17.720 --> 03:12:26.400]  и при этом еще и с оговоркой что если м больше чем n лог лог лог n тогда наш алгоритм будет
[03:12:26.400 --> 03:12:39.600]  работать за от м просто за линию да да пока нет это это обычная тельная песня да это как я
[03:12:39.600 --> 03:12:43.880]  уже сказал это это этот алгоритм использующий софт хипп он по сложности сопоставим самим
[03:12:43.880 --> 03:12:53.200]  софт хиппом ну окей вы нет вызов принят хорошо хорошо вот но причем надо подумать потому что
[03:12:53.200 --> 03:12:58.240]  конечно да потому что я очень хочется это рассказывать конечно замутать и рассказывать
[03:12:58.240 --> 03:13:04.280]  но первых я как бы не знаю насколько это мне за неделю у нас это во первых то есть когда вот
[03:13:04.280 --> 03:13:09.080]  это проще но тем более что спасибо с таким тарьяном который вот так вот лему скрупулезно
[03:13:09.080 --> 03:13:16.720]  прописывал ну да вот жалко картинки не рисовал но это ладно вот остальное но вот а так просто
[03:13:16.720 --> 03:13:20.760]  отходим что в какой-то какой-то момент хотелось бы это рассмотреть но как бы ну то есть не
[03:13:20.760 --> 03:13:28.560]  фига обсуждать тоже надо вот ладно так ладно давайте пока перейдем ладно все давайте быстренько
[03:13:28.560 --> 03:13:34.400]  простовки поговорим так ну что надо поговорить ну ладно формулировать задачу я думаю не нужно
[03:13:34.400 --> 03:13:39.480]  ладно единственное говорили все что все где мы будем говорить все-таки о неориентированных
[03:13:39.480 --> 03:13:47.360]  графа в принципе есть а стол и вот ориентированных графа определяются также но в обеих это ну можете
[03:13:47.360 --> 03:13:53.280]  считать что это граф и потоку управления и нас интересует остов то есть как множество из
[03:13:53.280 --> 03:13:58.200]  n минус одного ребра из которого из корня может дойти докуда угодно но тоже взвешенные минимального
[03:13:58.200 --> 03:14:05.760]  веса соответственно вот они так но нас будут не ориентированы остовы так но давайте но алгоритмов
[03:14:05.760 --> 03:14:10.760]  как раз масс тут как раз огромное количество алгоритмов чем даже с разными подходами но все
[03:14:10.760 --> 03:14:16.560]  они базируются на примерно одном и том же факте значит для этого мы впервые в нашем курсе
[03:14:16.560 --> 03:14:28.000]  ведем понятие разрез что такое разрез в случае потоков значит здесь у нас есть граф вот этот
[03:14:29.000 --> 03:14:44.440]  то разрез это представление в виде двух то есть разбирение в на два что важно не пустых множество
[03:14:44.440 --> 03:14:51.600]  здесь все да это важно в потоках тут еще дополнительные условия там что-то присток и
[03:14:51.600 --> 03:14:55.800]  сток будет но сейчас у нас никого стока и стока нет разбиваем на любые два множества
[03:14:55.800 --> 03:15:04.320]  вот понятно да но и будем говорить что там допустим ребро пересекает разрез если у
[03:15:04.320 --> 03:15:11.720]  него две вершины лежат там в двух разных долях но это не хочется это прописывать потому что вот
[03:15:11.720 --> 03:15:17.920]  значит давайте сразу ключевая лемма на которой базируется там чуть более чем все алгоритмы
[03:15:17.920 --> 03:15:24.840]  поиска минимального стола значит я и буду значит она будет называться либо те рема
[03:15:24.840 --> 03:15:35.440]  разрезе либо лемма о безопасном ребре ну да сейчас будет тоже немножко сложиться сложно
[03:15:35.440 --> 03:15:42.840]  сочиненное там может быть где-то там условия но тем не менее значит но зато по камере надежно
[03:15:42.840 --> 03:15:56.920]  верно и найти то что нельзя запутаться смотрите теперь такая значит пусть у нас пусть допустим
[03:15:56.920 --> 03:16:20.760]  f под множество ребер ребер внимание какого-то мина стола какого-то минимального стола а ст
[03:16:20.760 --> 03:16:48.320]  разрез который не пересекает ни одно ребро из f конечно вот
[03:16:51.200 --> 03:17:02.960]  значит пусть е это минимальное по весу ребро
[03:17:02.960 --> 03:17:15.840]  пересекающий разрез это значит что две вершины этого разреза лежат в разных две вершины
[03:17:15.840 --> 03:17:27.760]  ребра лежат в разных долях вот тут это вот эти вот максимально вот то есть максимально
[03:17:27.760 --> 03:17:31.840]  аккуратно надо потому что того максимально не аккуратно сформулируете и получится формально
[03:17:31.840 --> 03:17:57.480]  тогда f объединенное с е является под множеством ребер какого-то опять же минимального разреза
[03:17:57.480 --> 03:18:10.840]  то есть обратите внимание возможно уже возможно не того же что здесь было такое бывает ну конечно
[03:18:10.840 --> 03:18:16.160]  забегая вперед скажем что если все рел проповез по парно различный то минус то вообще один но
[03:18:16.160 --> 03:18:21.520]  это время вас ждет домашнем задании кстати да на эту тему да на эту тему тоже есть теоретические
[03:18:21.520 --> 03:18:36.560]  задачи я думаю они появятся сегодня вот единственность нет нет алгорита сейчас да сейчас дойдем
[03:18:36.560 --> 03:18:46.560]  ну да да да но тогда вам придется ввести так как у нас теории было матроид вам придется ввести
[03:18:46.560 --> 03:19:02.240]  тогда понятие матроид и доказать все теории банзаплагиат ну и потом и потом нет в общем
[03:19:02.240 --> 03:19:12.080]  но вот значит смотреть и так является под дождь понимание так значит давайте ладно
[03:19:12.400 --> 03:19:20.440]  дакажем быстренько значит почему это вообще так хорошо так как удобно вообще что-то себе
[03:19:20.440 --> 03:19:27.240]  гиги маркером пишу все так удобно вот теперь пришло время достать второй и так смотреть
[03:19:27.240 --> 03:19:36.000]  жил был то есть жил был разрез жил было 100 то есть у него тут вот то есть это вот множество
[03:19:36.000 --> 03:19:51.120]  вот но давайте думать но давайте себе представим что да был тут какой-то у нас
[03:19:51.120 --> 03:20:01.040]  минус 100 ну там какой-нибудь вот такой вот и предположим что вот это вот минимальное
[03:20:01.040 --> 03:20:16.520]  ребро пересекающий разрез неожиданно туда не попало вот но тогда смотрите какая ситуация
[03:20:16.520 --> 03:20:27.720]  тогда в том самом минимальном остове вот этом первом от этой вершины до этой был путь тут
[03:20:28.680 --> 03:20:38.080]  потому что очень соблазнительно тут сказать провести рассуждение вида там так ну смотрите
[03:20:38.080 --> 03:20:42.880]  но ведь какой-то ребро из этого а 100 это пересекает разрез ну да ну давайте выкинем его добавим это
[03:20:42.880 --> 03:20:50.040]  получится кайф да получится кайф только по моделю того что да пока вас не спросит а кто он а кто
[03:20:50.040 --> 03:20:55.720]  сказал что когда вы то выкинете это добавите получится дерево вообще а то там всякая была
[03:20:55.720 --> 03:21:01.480]  но то там всякие подлянки случаются вот поэтому нужно быть аккуратнее аккуратно
[03:21:01.480 --> 03:21:08.120]  и так рассмотрим вот путь по вон там у сам по тому дерево от этой вершины до этой хотя бы один
[03:21:08.120 --> 03:21:18.440]  раз этот путь разрез пересечет а может и 3 а может и 5 а может и 57 но не два вот что приятный не
[03:21:18.440 --> 03:21:27.000]  218 вот как говорится ничего личного просто четкость вот соответственно значит какой-то хотя бы одно
[03:21:27.000 --> 03:21:34.480]  ребро найдется но вот это ребро как но как раз это то ребро выкинуть можно и добавить это вообще
[03:21:34.480 --> 03:21:41.600]  добавить это получится цикл и вот то ребро выкинуть и тогда заметим что как бы вес остого от этого
[03:21:41.600 --> 03:21:46.120]  не уменьшить не увеличился но так как тот был минимальный значит наверное не увеличился значит
[03:21:46.120 --> 03:21:53.720]  тут наверно была ничья значит была тут такая боевая ничья но вот но в любом случае из этого
[03:21:53.720 --> 03:22:00.000]  следует что мы выкинули это добавили это и получили просто другой минимальный остов вот
[03:22:00.000 --> 03:22:06.560]  в общем-то теорема доказан да то есть такая простая вот теорема то там в разные есть формулировки
[03:22:06.560 --> 03:22:12.920]  то есть там кто-то больше вводит понятия кто-то меньше но не важно но из этой теории но вот но
[03:22:13.000 --> 03:22:18.880]  в принципе но теперь остальные алгоритмы на самом деле во многом сводится к тому как находить
[03:22:18.880 --> 03:22:26.960]  правильно разрезы и добавлять ребра вот ну какие нот как это можно сделать но давайте ладно чем
[03:22:26.960 --> 03:22:31.640]  сам вас простого чтобы это не обсуждать алгоритм краскала вот который мы упоминали который тут
[03:22:31.640 --> 03:22:37.480]  упоминал в чем заключается алгоритм краскала алгоритм краскала говорит а давайте-ка отсортируем
[03:22:37.480 --> 03:22:42.600]  ребра по весу и дальше просто будем идти и пытаться добавить ребра бостов не будем
[03:22:42.600 --> 03:22:49.560]  добавлять только в том случае если уже просто стянет цикл но стандартный алгоритм так на всякий
[03:22:49.560 --> 03:22:57.880]  случае поднимите руки кто его хоть когда-нибудь писал быстрее чем за мн ну мало нет ну просто если
[03:22:57.880 --> 03:23:05.480]  в тупую делать да ну понятно все спасибо то есть сортировка это будет за млогом логично логично
[03:23:05.480 --> 03:23:15.000]  вот ну вот но потом эти это просто как дальше как дальше светить что там ребро там если там что
[03:23:15.000 --> 03:23:20.600]  ребро там допустим оно застягивает цикл или нет от проверить что эти две вершины в одной компоненте
[03:23:20.600 --> 03:23:26.560]  связанности ли не в одной в тупую это делается там в тупую получится за мн если вы каждый раз
[03:23:26.560 --> 03:23:33.720]  будете дофэз вот можно делать не в тупую для каждой вершины писать номер компонента тогда
[03:23:34.080 --> 03:23:40.000]  нужно объединять хопа появилась система не пересекающихся может вот она зачем если ввести
[03:23:40.000 --> 03:23:44.600]  только весовую в ристику но то есть переводи говоря или наоборот подливать меньше большему то
[03:23:44.600 --> 03:23:50.320]  получится кстати те же млогом и получится но есть ввести снм то это вторая часть будет работать
[03:23:50.320 --> 03:23:55.400]  быстро поэтому там узкое место становится сортировка если вы умеете быстро сортировать
[03:23:55.400 --> 03:24:02.000]  быстрее чем за млогом то вы и остов найдете быстрее что правда вы быстрее сортировать не умеете
[03:24:02.280 --> 03:24:11.440]  ну да ну хорошо ладно если веса целая то можно там млог логм там сделать вот или что-нибудь
[03:24:11.440 --> 03:24:19.000]  еще в этом но это уже не будем сейчас это обсуждать об этом об этом суждать другое да это у нас был
[03:24:19.000 --> 03:24:27.800]  краска правда сам по себе к сожалению но почему это алгоритм вообще работает нет никаких матроидов
[03:24:27.800 --> 03:24:32.800]  на самом деле потому что у нас просто аккуратненько по индукции работает тирема лемма
[03:24:32.800 --> 03:24:38.480]  безопасном ребре почему ну просто индукция заключается в том что когда мы ребра уже добавили
[03:24:38.480 --> 03:24:42.920]  у нас как бы вот уже компоненты какие-то вот есть и это действительно под множество какого-то
[03:24:42.920 --> 03:24:49.320]  минус стола то есть когда нам приходит новый ребро который мы хотим добавить все что нам
[03:24:49.320 --> 03:24:55.480]  остается это провести какой-нибудь то есть чтобы доказать что это ребро можно добавить и страшно
[03:24:55.480 --> 03:25:01.600]  не будет то надо просто найти какой-нибудь разрез чтобы ты пробовала минимально вот но давайте
[03:25:01.600 --> 03:25:08.520]  разрез просто одна компонента из компонент который идет и все остальное вот это минимальный это в
[03:25:08.520 --> 03:25:16.240]  принципе минимальный ребро среди всех кого сюда нельзя добавить вот поэтому алгоритм карпинала
[03:25:16.240 --> 03:25:24.520]  но откуда здесь следует что как бы тут какая-то единственная состава не очевидно само по себе
[03:25:24.520 --> 03:25:31.160]  пока еще да то есть надо еще там да можно как бы соглашусь кем можно там допилить додумать
[03:25:31.160 --> 03:25:38.680]  принципе можно но то есть это надо сделать еще там как бы нигде не ошибись будьте внимание но это
[03:25:38.680 --> 03:25:46.720]  алгоритм краска вот важную конечно важнейшее значение конечно в теории на самом деле является
[03:25:46.720 --> 03:25:52.920]  алгоритм баруфки да такой самый неизвестный на самом деле может быть в олимпиады среди алгоритм
[03:25:52.920 --> 03:25:59.760]  в олимпиадах обычно там прим краскал и все в принципе хотя да хотя в принципе да и хотя
[03:25:59.760 --> 03:26:04.760]  на самом деле есть одна как минимум задача в которой алгоритм баруфки неожиданно помогает так кто
[03:26:04.760 --> 03:26:12.680]  знает алгоритм баруфки давайте так популярно окей нет услышать можно было что я как минимум
[03:26:12.680 --> 03:26:20.240]  анонсировал потому что да на самом деле интерес просто в том что это это файл но просто
[03:26:20.720 --> 03:26:28.600]  алгоритм датируется на самом деле 1926 годом или что-то в этом роде так компов не было алгоритм
[03:26:28.600 --> 03:26:34.200]  уже был но там история гласит что по этому того да просто этому товарищу дали себе дали
[03:26:34.200 --> 03:26:40.640]  задачу вот тебе вот тебе чехсловакия вот тебе города соедини их пожалуйста в сеть электрическими
[03:26:40.640 --> 03:26:48.160]  проводами вот хочется сделать это за как бы чтобы были суммарной длины поменьше ну вот поехали
[03:26:48.160 --> 03:26:53.600]  что предложено значит спрашивать как себе как соединять хочется как-то еще параллельно делать
[03:26:53.600 --> 03:26:59.600]  его и возникает есть такое естественная жадность а давайте каждый город значит что предлагает
[03:26:59.600 --> 03:27:14.640]  алгоритм баруфки соединил тупо с ближайшим этот город еще ближайшим вот и для каждого
[03:27:14.640 --> 03:27:19.520]  города просто вот найдем ближайшим что может быть это дает а для бюджета уже этот мог быть
[03:27:19.520 --> 03:27:27.480]  но все окей значит тут заткнулись вот получилось то есть получились вот такие цепочки правда тут
[03:27:27.480 --> 03:27:32.840]  еще вопрос что как бы если при равенстве любой не выберешь потому что если выбирать совсем любой
[03:27:32.840 --> 03:27:38.520]  то может произойти за цикл поэтому видимо при равенство надо выбирать какой-нибудь там минимальность
[03:27:38.520 --> 03:27:46.360]  города там лишь что-нибудь еще в этом рот вот такой технический момент так вот но остается но вот
[03:27:46.360 --> 03:27:52.840]  но остается только заметить что да если добавляйте ребра по очереди то в принципе можно аккуратно
[03:27:52.840 --> 03:27:58.400]  применять вот эту лему и показать что действительно под дождями на стола но на каждом шаре понятно что
[03:27:58.400 --> 03:28:03.760]  здесь разрез будет там сначала вот такой потом вот такой там потом вот такой потому что вот это
[03:28:03.960 --> 03:28:08.520]  меньше всех ребер которые торчат здесь потому что раз это ребро меньше вот этого и от минимальная
[03:28:08.520 --> 03:28:20.280]  поэтому получается вот это еще так дальше она что вот значит ну и здесь ну здесь на сам деле тоже
[03:28:20.280 --> 03:28:28.120]  теперь можно вот но нет в принципе знаете что еще может быть в принципе еще может быть вполне
[03:28:28.120 --> 03:28:33.560]  себе ситуации тоже надо не помешает там может быть где-то учесть потому что иногда бывает вот
[03:28:33.560 --> 03:28:40.520]  такое то есть можно старые вершины неожиданно упереться такое тоже бывает вот если я вот так
[03:28:40.520 --> 03:28:45.480]  ориентированно нарисую откуда мы это взяли то в принципе вот все возможно то есть получится
[03:28:45.480 --> 03:28:56.240]  формально говоря подвешенные деревья вот вот ой нет не так не так не так не так наоборот я имел
[03:28:56.240 --> 03:29:01.640]  виду сейчас наоборот вот так вот так вот вот но здесь в общем суть в общем-то там более-менее та же
[03:29:01.640 --> 03:29:10.640]  то есть начало было вот так тут получится вот так вот так там вот так вот но и так далее вот ну и
[03:29:10.640 --> 03:29:14.880]  так далее то есть очень аккуратненько применить можно сейчас давайте для краткости расписывать
[03:29:14.880 --> 03:29:20.280]  подробно не буду но суть том что у нас то есть получились какие-то подмножатся в чем в каждой
[03:29:20.280 --> 03:29:24.760]  компоненте связанности что приятно хотя бы две вершины что из каждой вершины что-нибудь доторчит
[03:29:24.760 --> 03:29:36.960]  это так вот это операция делается за от я и называется она шаг баруфки значит я себе на
[03:29:36.960 --> 03:29:44.120]  будущее пропишу потому что у некоторых алгоритмов действительно есть просто операция там составляющие
[03:29:44.120 --> 03:29:53.160]  сделаем там шаг баруфки или 3 шага баруфки вот так вот чем приятен алгоритм приятен тем что после
[03:29:53.160 --> 03:29:59.760]  этого шага количество вершин уменьшится хотя бы в два раза но идея такая то есть ну после того
[03:29:59.760 --> 03:30:04.520]  как мы сожмем эти компоненты связанности да ну понятно сожмем компоненты повторим и так пока
[03:30:04.520 --> 03:30:12.880]  не останется одна вершина и того получается е лог сколько там лог бы вот критик тоже не
[03:30:12.880 --> 03:30:18.600]  самая плохая симпатика на самом деле но жалко быть спряли быстрее конечно тут сделать сложно
[03:30:18.600 --> 03:30:23.400]  если базироваться только на этом но с другой стороны можно сказать а давайте сделаем сколько-то
[03:30:23.400 --> 03:30:31.000]  шагов баруфки а потом за бабахом и другой алгоритм ну почему же краскала можно краскала
[03:30:31.000 --> 03:30:37.200]  но если это поможет да зафиксируя нет причина да зафиксируем как который выберем позже и
[03:30:37.200 --> 03:30:45.400]  попытаемся упихать только там все равно е логе поэтому не поможет вот поэтому надежды у нас
[03:30:45.400 --> 03:30:50.160]  но другой алгоритм чем парадокс том да что алгоритмы прямые краскала кстати это датируется
[03:30:50.160 --> 03:30:59.680]  50 годами до краскала мы уже обсудили или к русскала тут вопрос конечно вот так ладно
[03:30:59.680 --> 03:31:15.240]  по баруфке есть вопрос так сколько у нас времени то вообще а кайфит в смысле ну нет
[03:31:15.240 --> 03:31:20.000]  посадку и да для каждой вершины мы выбираем минимальное ребро торчащие тупо из нее и
[03:31:20.000 --> 03:31:35.080]  добавляем его все для каждой вершины а так ну просто вот мы набрали какие-то ребра они
[03:31:35.080 --> 03:31:43.440]  автоматически объединили объединяет вершины в какие-то компоненты а дальше на усадке просто
[03:31:44.040 --> 03:31:50.680]  мы просто сжимаем эти вершины в единые компоненты и все то есть получится такой мета там граф с мета
[03:31:50.680 --> 03:32:03.120]  вершины на втором шаге уже да и на третьем шагов будет не более чем логве ну на самом деле более
[03:32:03.120 --> 03:32:07.840]  ну скажи так если брать именно такой алгоритм в общем-то легко привести пример когда там будет
[03:32:07.840 --> 03:32:16.960]  реально логовая вот поехали но теперь самый интересный на самом деле для нас как это не
[03:32:16.960 --> 03:32:27.280]  странно алгоритм сейчас будет очень смешной ладно не самый смешной но как бы у нас значит вас
[03:32:27.280 --> 03:32:36.000]  приветствует при который предлагает делать просто так ладно берем одну вершину и давайте
[03:32:36.000 --> 03:32:42.600]  расширяться просто от нее то чем предлагает так давай сначала минимальное ребро торчащие из
[03:32:42.600 --> 03:32:48.440]  нее потом минимальное ребро торчащие из этих двух то есть вот так как то то есть слоиста как-то
[03:32:48.440 --> 03:33:05.800]  получится ой еще не рассказал да нет но нам придет нет мы селали что дейкс из
[03:33:06.000 --> 03:33:17.920]  кучи должна работать за е плюс логовая да да да нет но поверить нет нет нет нет честно скажем
[03:33:17.920 --> 03:33:23.320]  нет ладно я скажу так нет формально нам придется ну просто придется по этому делу пробежаться
[03:33:23.320 --> 03:33:28.720]  когда-то потому что мы должны это знать ну и потом кстати да на самом деле просто есть есть еще
[03:33:28.720 --> 03:33:35.000]  один эпический алгоритм на самом деле то есть то есть еще более эпический чем вот это все алгоритм
[03:33:35.000 --> 03:33:41.560]  называется найдите кратчайшее расстояние от вершины до всех остальных заве плюс е значит заве
[03:33:41.560 --> 03:33:54.640]  плюс е если все веса целые не отрицательные да вот это реально расстрел да что нет я так
[03:33:55.640 --> 03:34:09.400]  на волка сейчас за полтора часа все рассказали там все понятно ну вот ладно поэтому давайте так
[03:34:09.400 --> 03:34:14.240]  ладно давайте вернемся к чему попроще значит пока у нас прим то есть предлагается вот так как вообще
[03:34:14.240 --> 03:34:21.520]  реализуют так кто когда-нибудь реализовал такой алгоритм в любой его модификации так ладно
[03:34:21.520 --> 03:34:27.800]  алгоритм-то понятия на чем вот так как его обычно реализует начну на всякий случай напомним что
[03:34:27.800 --> 03:34:34.360]  реализуется он так что давайте для каждой вершины в будем хранить там что-то типа д от в это вес
[03:34:34.360 --> 03:34:40.880]  минимально это минимальное ребро которым можно прицепить это ребро к этой компоненте то есть
[03:34:40.880 --> 03:34:46.040]  работает это в итоге по принципу что то есть на каждом шаге мы пробираемся по вершинам в
[03:34:46.240 --> 03:34:52.520]  еще сюда не попали выбираем лучшую и после ну вот и после этого присоединяем эту вершину
[03:34:52.520 --> 03:35:00.520]  из нее прибираемся по ребрам и апдейтим дешки за сколько это работает нет пока нет потому что
[03:35:00.520 --> 03:35:08.000]  если прибегаться в тупую то будет работать заве квадрат плюс е и если не равно в квадрат это
[03:35:08.000 --> 03:35:14.920]  между прочим неплохо потому что эффект тот же как в двести на самом деле потому что если в
[03:35:14.920 --> 03:35:23.240]  тупую делать так если вы все эти дешки храните в какой-нибудь куче или в каком-то сете да то
[03:35:23.240 --> 03:35:32.000]  тогда это будет работать за формально скажу так f на файнд мим ладно на файла на экстракт мне
[03:35:32.000 --> 03:35:44.760]  если быть точнее плюс е декрис киев но не давайте для простоты сейчас предположим что мы изначально
[03:35:44.760 --> 03:35:49.840]  все вершины попихали просто некоторые плюс бесконечность ну как некоторые все кроме
[03:35:49.840 --> 03:35:56.080]  стартовый а старый вот вот то есть формально вот такая симптомика получается потому что
[03:35:56.080 --> 03:36:04.480]  можно если в тупую то экстракт мим можно делать заве одекриски за единицу значит это если тупо то
[03:36:04.480 --> 03:36:15.680]  есть если делать просто классический там хип сек хип или там сет или даже там или даже до ладно ст
[03:36:15.680 --> 03:36:23.280]  то тогда получается вэплю то есть такая наиболее популярно в олимпиадной среде
[03:36:23.280 --> 03:36:33.240]  получится в плюсе налог в вот заметим да при е равно в квадрат это хуже то есть там есть
[03:36:33.240 --> 03:36:39.040]  даже на это специальная задача где там вершин 5000 а ребра это типа а вес ребра это расстояние
[03:36:39.040 --> 03:36:44.880]  междувершины как раз дистанционный граф ну правда там на дистанционных графах конечно есть вероятность
[03:36:44.880 --> 03:36:51.200]  что там а стол и можно и побыстрее искать ну причастные с геометрией может быть тоже было бы
[03:36:51.200 --> 03:36:55.960]  интересно хотя другой страны полнощение что эти вот когда-нибудь да вот заботать огромное
[03:36:55.960 --> 03:37:00.280]  количество алгоритмов и объявить давайте четвертый семей там четвертый семестр хотя бы хотя бы
[03:37:00.280 --> 03:37:11.480]  в виде спецкурса нет там не жесть там как бы можно что-то в конце концов на самом деле пока не особо
[03:37:11.480 --> 03:37:17.640]  изведаны для меня мир к сожалению это а какие алгоритмы зарабатываются прямо сейчас они такие есть
[03:37:17.640 --> 03:37:21.920]  вот я собственный дорога и ну не просто так вспомнил потому что как раз поехал в университет
[03:37:21.920 --> 03:37:25.920]  в котором это походу реально занимается потому что там но я уже рассказывал там на финал приехал
[03:37:25.920 --> 03:37:30.280]  человек который просто читал лекцию на тему того что сеч там на тему того что есть прямо сейчас
[03:37:30.280 --> 03:37:35.760]  разведом разрабатывается и что мы тут в двадцать третьем году вот мы тут какой-то апдейт какого-то
[03:37:35.760 --> 03:37:42.560]  алгоритма на потоке за бабах или вероятность того вот так что как бы нет этот как бы дел такой
[03:37:42.560 --> 03:37:50.520]  то есть как бы наука не стоит на месте вот значит далее но значит да я вот к сожалению забыл
[03:37:50.520 --> 03:37:57.000]  обсказывать что на перемене желательно вспомнить что такое куча фибоначи да к сожалению она пока
[03:37:57.000 --> 03:38:02.400]  к сожалению она пока все еще вопросов на отл почему к сожалению потому что кто-то из вас может
[03:38:02.400 --> 03:38:09.000]  так благополучно и не знать что это такое вот но напомню что суть ее заключалась в том что у
[03:38:09.000 --> 03:38:16.160]  нее декоризки работает не за логарифом как в обычных кучах а за единицу и вставка за единицу
[03:38:16.160 --> 03:38:23.000]  а вот доставание вот экстракт мин за логарифом приводит к это к асимптотике которая бьет и
[03:38:23.000 --> 03:38:34.920]  этих и этих зея плюс в логве неплохто но дальше там да то есть при желании так что при желании
[03:38:34.920 --> 03:38:40.360]  можете писать собственно примутно с этой кучей тем более что в каких-то гнушных компиляторах
[03:38:40.360 --> 03:38:50.200]  она вроде даже есть вот значит это у нас такая куча фибоначи дать сливаемая на счетом за
[03:38:50.200 --> 03:38:59.640]  единицу ночью в общем счастье полные штаны называется да вот так но соответственно как
[03:38:59.800 --> 03:39:04.360]  да было говорит хорошо но с другой стороны можно ли было бы обойтись как-нибудь за
[03:39:04.360 --> 03:39:11.600]  побыстрее но давайте все-таки закончим мы сегодня тем что попробуем придумать значит как у пиха
[03:39:11.600 --> 03:39:22.160]  значит что тут можно сделать еще а таки можно смотрите как так ну ладно лему о безопасном ребре
[03:39:22.160 --> 03:39:43.480]  уже убирать значит смотрите да значит внимание вас приветствует значит тоже алгоритм
[03:39:43.480 --> 03:39:54.120]  двух авторов это уже упоминавшийся фреддман и уже надеюсь что полюбившийся если еще не
[03:39:54.120 --> 03:40:04.120]  доевший вам тарьян да без тарьяна даже тут не пойдем сюда значит смотрите предлагают они
[03:40:04.120 --> 03:40:15.400]  следующую версию значит смотрите зафиксируем значит возьмем мистическое как нет-нет-нет все
[03:40:15.400 --> 03:40:25.240]  по первому выберем позже во-вторых оно будет меняться сейчас я расскажу то что можно определить
[03:40:25.240 --> 03:40:34.680]  как официально как шаг фреддман фреддман тарьяна значит чит следующий я просто хочу найти
[03:40:34.680 --> 03:40:43.160]  миностов что буду делать ну не в смысле скрипеть доски конечно нет я буду делать я буду делать
[03:40:43.160 --> 03:40:54.480]  веселее значит я буду делать prima я буду делать prima делаем prima prima prima prima prima prima
[03:40:54.800 --> 03:41:02.120]  prima prima prima prima prima prima prima prima prima prima prima prima primaрыво у меня тут не станет ковершин
[03:41:02.120 --> 03:41:15.520]  но типа, вот как только у меня тут станет ковершин в компоненте я скажу так стоп! слишком много
[03:41:15.520 --> 03:41:25.520]  так давайте-ка я пойду теперь в другую вершину да и буду делать prima prima prima prima prima prima prima
[03:41:25.520 --> 03:41:34.520]  prima prima prima prima prima prima prima prima prima prima prima prima prima УПС! спокойно, сейчас все будет
[03:41:34.520 --> 03:41:40.880]  сейчас вы да смотрите потом еще контешим есть она еще там осталось и будем это
[03:41:40.880 --> 03:41:46.440]  делать прямо-примо-примо-примо-примо-примо-примо-примо-примо-примо при
[03:41:46.440 --> 03:41:50.780]  прицепились к соседней компоненте то ничего страшного нет, это нормально
[03:41:50.780 --> 03:41:54.720]  так ну очевидно что, ну я думаю достаточно очевидно что 10 векторе я делаю
[03:41:54.720 --> 03:42:00.220]  с точки там потери меня разрезе вполне валидной, так вот у меня таким образом
[03:42:00.220 --> 03:42:09.960]  образуются компоненты. У меня, значит, таким образом образуются компоненты,
[03:42:09.960 --> 03:42:20.440]  каждая из которых размера хотя бы так. Так, ну давайте подумаем, кстати,
[03:42:20.440 --> 03:42:26.360]  да, но одна из идей. За какую симпатику я могу такое забабахать? Так вот, очень
[03:42:26.360 --> 03:42:36.540]  хочется забабахать не за е плюс в лог в, а именно за е плюс в, именно лог к, потому что мне очень
[03:42:36.540 --> 03:42:43.240]  хочется сказать, что у меня типа вершин в куче все равно будет не более чем к, поэтому хочется
[03:42:43.240 --> 03:42:49.720]  забабахать так. Но, к сожалению, в реальности придется чуть подумать, потому что из того,
[03:42:49.720 --> 03:42:54.920]  что в каждой компоненте у вас к вершин, из этого никак не будет следовать, что, то есть вы же как
[03:42:54.920 --> 03:42:59.960]  будете хранить типа всех соседей и из них выбирать минимум, правда? Поэтому есть подозрение,
[03:42:59.960 --> 03:43:08.880]  что как бы вершин тут соседей может быть и побольше, чем к. Вот возникает вопрос, как же нам выкрутить?
[03:43:08.880 --> 03:43:24.160]  Вот какие варианты? Ну, то есть здесь, конечно, надежно, что заменят. Нет, ну туда выкрутится,
[03:43:24.160 --> 03:43:35.760]  может, туда-тут. Нет, ладно, давайте все-таки две минуты, все-таки подумаем. Так, сейчас,
[03:43:35.760 --> 03:43:41.280]  а каким образом отрезать? Если мы храним кучу на минимум, то как бы максимум мы там искать вроде как
[03:43:41.280 --> 03:43:49.920]  не убьем. Как не добавлять? Нет, понимаешь, да, зато, как бы было у тебя ка элементов,
[03:43:49.920 --> 03:43:53.200]  ты добавил ка плюс первый, который там меньше половины из них, то есть максимум все равно
[03:43:53.200 --> 03:44:12.720]  придется удалить. Так что-то не все так просто. И хорошо, чем это поможет? Да, но тогда проблема,
[03:44:12.720 --> 03:44:18.160]  если вы будете удалять этот максимум, как из кучи на максимум и так из этой на минимум,
[03:44:19.040 --> 03:44:30.920]  то это будет лишним логарифом, и тогда у вас получив выплывет еловка. Ну вот, ну тут я,
[03:44:30.920 --> 03:44:39.760]  тут честно говоря, ладно. Ну да, то есть там придется думать, ладно, потому что, не знаю,
[03:44:39.760 --> 03:44:43.680]  может быть, потому что я подозреваю, что в оригинале было что-то более простое, но вот мы там,
[03:44:43.680 --> 03:44:50.000]  тоже в прошлом семестре тоже думали, но придумалось, значит, только одно. Давайте поддерживаем
[03:44:50.000 --> 03:45:01.400]  вариант, что у нас размер кучи не более чем 2к, и при этом, как только он стал 2к. Чего? Нет,
[03:45:01.400 --> 03:45:07.040]  тогда мы просто, честно, ну смотрите, куча иначе мы умеем выписать все алгоритмы, все элементы
[03:45:07.040 --> 03:45:13.880]  прям за линию, правда? Прямо за 2к. Так вот, выпишем их, честно найдем, ко максимуму, за отка,
[03:45:13.880 --> 03:45:21.280]  а мы умеем это делать. Ну, найдя там карту и порядковую статистику, да? И из них уже создадим
[03:45:21.280 --> 03:45:31.120]  новую кучу фибоначи. Да, из каминимов, да. То есть, заметим, что это будет, то есть, скажем так,
[03:45:31.120 --> 03:45:37.000]  можно ввести, то есть, можно ввести тут небольшую амортизацию, сказав, что, соответственно,
[03:45:37.000 --> 03:45:43.280]  что это мы сделаем за бесплатно. Там просто идея такая, что каждый раз, когда вы добавляете
[03:45:43.280 --> 03:45:48.520]  элемент сверху, ну, когда вы добавляете элемент, вы кладете на него, допустим, монетку. И как вы
[03:45:48.520 --> 03:45:57.640]  получаете, что вы тратите ка монеток на отка действий? Ну, можно, пожалуйста, можете две. Вот,
[03:45:57.640 --> 03:46:01.720]  поэтому, то есть, как бы, то есть, в принципе, ладно, на уровне теории выкрутиться можно. Я
[03:46:01.720 --> 03:46:06.880]  подозреваю, что там в оригинале был какой-то другой выкрутас, но не важно. Как бы, приятно,
[03:46:06.880 --> 03:46:15.840]  да, что мы обрубить кучу там в половину раз можем за лигию, да. Так вот, так вот, значит, для какого
[03:46:15.840 --> 03:46:24.280]  така мы умеем делать, работать за е плюс в локка. Более того, следующий шаг, так вот, идея, на самом
[03:46:24.280 --> 03:46:29.680]  деле, будет такая. Я буду делать последовательность таких шагов, пока у меня все это не схлопкиться.
[03:46:29.680 --> 03:46:42.640]  Причем последовательность у меня будет, давайте рассмотрим, к1, к2, к3, к4, к5 и так далее. Ну, пока
[03:46:42.640 --> 03:46:49.000]  просто последовательность кашек, да. Нет, значит, работать это будет так. Это будет работать е плюс
[03:46:49.000 --> 03:47:00.040]  в лок к1, но следующий шаг будет е плюс в делить на к1 лок к2. Следующий будет е плюс в, даже на
[03:47:00.040 --> 03:47:15.760]  там к1 к2, там получается лок к3. Ну, не ребра, а вершина у нас уменьшается. Ну, ребра не факт,
[03:47:15.760 --> 03:47:21.000]  потому что их значительно больше, чем в, и как бы может убиваются только конкретно эти. Так что,
[03:47:21.000 --> 03:47:26.560]  поэтому не факт. Но это нам и не понадобится, смотрите. Значит, теперь давайте думать, как же это,
[03:47:26.560 --> 03:47:38.120]  как же сделать хорошо? Ну вот, нет, то идея такая, значит, обычно берут так. Ладно, необычно. Но на
[03:47:38.120 --> 03:47:45.160]  самом деле вот я предложил вот так взять. Вот к1 начнем просто с 2 в степени 2m поделить на n.
[03:47:45.160 --> 03:47:56.600]  М количество. Да, хорошо. 2e поделить на v. Это я для чего делаю? Для того, чтобы у меня вот этот
[03:47:56.600 --> 03:48:04.160]  шаг автоматически превратился в o от e. А теперь смотрите, что нужно сделать дальше? Хочется,
[03:48:04.160 --> 03:48:10.160]  чтобы в принципе нас удовлетворить, если вот это k сократится с вот этим логарифмом. Тогда
[03:48:10.160 --> 03:48:21.040]  тут будет e плюс v. Тогда идея такая, каждое следующее k, это будет 2 в степени предыдущего. То есть вот
[03:48:21.040 --> 03:48:31.760]  такой неожиданный рэп. Тогда, смотрите, это получится o от e плюс v. Это получится o от e плюс v. Ну там
[03:48:32.200 --> 03:48:44.680]  и так далее. Но e плюс v. Здесь это точно o от e, да? Ну тут получится... Нет, смотрите,
[03:48:44.680 --> 03:48:50.080]  тут k2 сократится с... Ну лог k3 это будет k2, поэтому шлеп-шлеп, и тут останется v поделить
[03:48:50.080 --> 03:48:57.800]  даже на k1. А это все равно o от e плюс v. Так что даже еще круче. Нет, это вообще кайфец,
[03:48:57.800 --> 03:49:04.840]  потому что смотрите, к чему нас это приводит? То есть сколько у нас тогда шагов будет? Ну
[03:49:04.840 --> 03:49:10.640]  очевидно, что как только k достигнет n, тогда это будет последняя фаза. Но так как у нас каждое
[03:49:10.640 --> 03:49:20.480]  следующее 2 в предыдущем, то получается... Получается, если бы мы тут начинали хотя бы
[03:49:20.480 --> 03:49:27.200]  с единицы, то нам получается до n, мы дойдем залог звездочка шагов. Но на самом деле можно
[03:49:27.200 --> 03:49:35.360]  теперь воспользоваться, что стартуем-то мы не с единички, а с 2e поделить на v. То есть фактически
[03:49:35.360 --> 03:49:42.160]  количество шагов у нас будет... Можно это оценить как o от... То есть там количество шагов o от 1 плюс
[03:49:42.160 --> 03:49:54.600]  лог звездочка v минус лог звездочка... Там вот это вот 2e поделить на v. Ну или e поделить на v можно
[03:49:54.600 --> 03:50:02.420]  просто. Ну потому что что такое лог звездочка? Это сколько раз надо делать таких шагов,
[03:50:02.420 --> 03:50:08.560]  чтобы из единицы получилось двойка? А теперь сколько надо делать шагов, чтобы не из единицы
[03:50:08.560 --> 03:50:13.960]  получилось n, а из этого получилось n? Ну нужно взять лог звездочка, то есть сколько с единицы,
[03:50:13.960 --> 03:50:22.200]  и вычесть сколько шагов нам надо было, чтобы достичь этого. Ну там плюс-минус 1. Вот. То есть
[03:50:22.200 --> 03:50:32.720]  по-хорошему вот так. Что? Нет, это я оценил количество шагов именно. Да, в 8 точке будет
[03:50:32.720 --> 03:50:41.280]  e на количество шагов. Что? Почему многовато? Лог звездочка. То есть в принципе уже сказали,
[03:50:41.280 --> 03:50:51.160]  что общая 7 точка e лог звездочка v. Чего, почему? Ну e плюс v это есть z, потому что e как минимум v
[03:50:51.160 --> 03:51:01.600]  минус 1. Нет, мы не делаем e шагов, мы каждый шаг делаем за e плюс сколько. То есть каждый шаг мы
[03:51:01.600 --> 03:51:08.160]  делаем за e. Поэтому у нас а тем точка будет e на вот это. Но мало того, что вот можно сказать,
[03:51:08.160 --> 03:51:14.160]  что алгоритм у нас за столько работает. Но теперь дополнительная фишка. Тут, видите, тут очень важно,
[03:51:14.160 --> 03:51:20.840]  откуда мы стартуем. И тогда чем больше у нас e, тем с большей позиции мы стартуем и тем меньше шагов.
[03:51:20.840 --> 03:51:30.760]  То есть в качестве иллюстрации, если e оказалось больше, чем v лог лог лог v, то количество шагов
[03:51:30.760 --> 03:51:39.240]  вот это вот 1 плюс лог звездочка v там минус лог звездочка там 2e делить на v. Даже e делить на v
[03:51:39.240 --> 03:51:49.160]  можно. Это что такое? Это меньше либо равно, чем 1 плюс лог звездочка v минус лог звездочка от
[03:51:49.160 --> 03:51:59.000]  лог лог лог v. А что такое лог звездочка от лог лог лог v? Это в точности, это просто точности,
[03:51:59.000 --> 03:52:13.080]  это лог звездочка v минус 3. То есть это равно просто 4. Вот так, потому что там единиц. Да,
[03:52:13.080 --> 03:52:21.320]  я мог вместо лог лог лог написать просто лог лог лог лог лог лог. А потому что чем больше
[03:52:21.320 --> 03:52:28.200]  я тут логов напишу, тем как бы круче отсадка будет. Я могу такое сформулировать просто для,
[03:52:28.200 --> 03:52:38.600]  ну как вы знаете, для любого. Не, не надо. Нет, к сожалению, я не скажу, что из этого я не выведу,
[03:52:38.600 --> 03:52:48.480]  что алгоритм работает за v плюс e, конечно. В общем, к сожалению, но тем не менее. Нет,
[03:52:48.480 --> 03:52:54.640]  выведется так, для любого k, верно, что если e больше либо равно, чем v умножить на вот лог лог
[03:52:54.640 --> 03:53:02.720]  лог k раз v, но k это константа, тогда алгоритм будет работать за v плюс e. Да, то есть это то же самое,
[03:53:02.720 --> 03:53:08.040]  что как оптимизировать каратсубу, да, симпотики от n в степени 1 плюс епсел. Для любого епсел он больше нуля.
[03:53:08.040 --> 03:53:18.640]  Нет, ну тогда это не найдется, к сожалению, это ну как бы константа не найдется, а если нет,
[03:53:18.640 --> 03:53:23.800]  просто если это просто придется не считать константы, тогда ее придется здесь учитывать.
[03:53:23.800 --> 03:53:32.920]  Но это да, но это и будет в точности вот эта разность. Поэтому как бы формальная симпотика
[03:53:32.920 --> 03:53:37.400]  вот такая. Просто да, то есть, но видите, то есть это как бы на практике это оказывается,
[03:53:37.400 --> 03:53:43.080]  что как бы если e хоть насколько-то больше v, вот так вот, то как бы у вас уже линейный алгоритм вы
[03:53:43.080 --> 03:53:51.320]  победили. Вот, значит, тут еще, значит, да, что-то нас пока не выгоняют, вот, потому что нет, но просто
[03:53:51.320 --> 03:53:55.680]  не хочется в следующий раз к этим основам возвращаться, потому что можно, потому что можно
[03:53:55.680 --> 03:54:01.680]  еще круче сделать. Потому что, помните, у нас в прошлом году была еще такая штука, как atomic hip.
[03:54:01.680 --> 03:54:09.960]  Была-была-была. Не-не-не, не уходите тут. Не уходите тут, сейчас весело будет.
[03:54:09.960 --> 03:54:17.680]  Потому что это, ну вот. Нет, смотрите, чем она отличалась? Ну, она отличалась тем, что мы говорим,
[03:54:17.680 --> 03:54:23.880]  что пусть у нас Куча делает то же самое, что Куча Фибоначчи. Ладно, только, возможно, без мержей,
[03:54:23.880 --> 03:54:29.680]  но нам тут мержи не нужны. И еще она работает на целых числах, которые влезают в процессор,
[03:54:29.680 --> 03:54:37.360]  помните, да? Но тогда оказывалось, что она все умеет делать зоо от единицы, а экстракт мин делался
[03:54:37.360 --> 03:54:50.040]  за асимптутику log n делить на log log n. Неплохо, да? А теперь давайте себе представим. Предположим,
[03:54:50.040 --> 03:54:55.840]  что нам повезло, и ребра оказались именно этого типа, любимого нами типа, что нередко, в общем-то,
[03:54:55.840 --> 03:55:04.600]  наблюдается. А давайте подумаем, а какую асимптутику выжмем мы в этой ситуации? Потому что если тут
[03:55:04.600 --> 03:55:14.800]  log n поделить на log log n, то как бы шаг у нас теперь делается за зеа плюс ве на, там, сколько там?
[03:55:14.800 --> 03:55:35.320]  Получается, можно на даже log k делить на log log k. Вот. Вот. Да, ну просто теперь давайте посмотрим.
[03:55:35.320 --> 03:55:43.000]  Нет, ну можно, как всегда, первое k сказать, что k1... Нет, а давайте... Нет, ну что тут можно сказать?
[03:55:43.280 --> 03:55:50.080]  А что тут можно сказать-то вообще? Нет, ну можно, как бы сказать, что, да, как всегда, 2 в степени, там,
[03:55:50.080 --> 03:56:09.960]  2e делить на v. Можно такое сказать? Вот, можно, да, действительно. Вот. Ну вот. Ну тогда смотрите,
[03:56:09.960 --> 03:56:16.400]  что у нас тогда получится? Если нам такое сказать, то на следующем шаге для k2 мы будем работать за что?
[03:56:16.400 --> 03:56:30.680]  Мы будем работать за e плюс v делить на 2 в степени, там, 2e делить на v на какой-то log k2 делить на log log k2. Да?
[03:56:30.680 --> 03:56:44.240]  Нет, ну теперь, да, теперь вот может возникнуть, да, действительно, такой естественный вопрос.
[03:56:44.240 --> 03:56:54.040]  Ну почему? Нет, спокойствие. Нет, ну чего вы так сразу? Зачем? Нет, просто утверждается,
[03:56:54.040 --> 03:56:58.560]  что как бы этот к2 можно сделать более крутым, чем вот это вот, и будет кайф.
[03:56:58.560 --> 03:57:08.520]  Потому что, смотрите, просто действительно, какое к2 хочется сделать? Ну, на самом деле, ну, скажем так,
[03:57:08.520 --> 03:57:12.960]  ну, заметим, что 2e делить на v можно было, наверное, покруче сделать, да?
[03:57:12.960 --> 03:57:26.160]  Вот. Нет, ну давайте так. Нет, давайте подумаем, сколько мы тут вообще могли сделать, чтобы тут
[03:57:26.160 --> 03:57:37.600]  сохранилось, чтобы тут сохранилось то, что нам надо. Ну вот, ну, на самом деле, мы тут могли поупихивать
[03:57:37.600 --> 03:57:47.080]  и сказать, что k1 мог быть тут, в принципе, еще и 2e делить на v. Могли такое сказать? Вот, да. Да,
[03:57:47.080 --> 03:57:58.720]  мы действительно упихаем нот. Да, да, прям умножить. Но потому что, смотрите, нет, ну а в чем проблема?
[03:57:58.720 --> 03:58:08.080]  Давайте посмотрим, сколько тут будет? e плюс v на сколько там вот? То есть лог k получится в точности там,
[03:58:08.080 --> 03:58:21.200]  там 2e делить на v, плюс, значит, плюс какая-то мелочь, да? Ну, давайте так, ладно, плюс логарифом 2e делить на v, да?
[03:58:21.200 --> 03:58:27.520]  Ну, все это, да, хорошо, v плюс вот эта штука, это само по себе не мелочь, поэтому не могли мы так,
[03:58:27.520 --> 03:58:35.400]  просто взять это и сделать. Но мы могли бы, но мы ее поделим на лог-лог. А чему равно лог-лог?
[03:58:35.400 --> 03:58:49.320]  Лог-лог равен лог 2e делить на v, плюс, значит, нот. Нот, сейчас, нет. Нет, лог-лог равен чему?
[03:58:49.320 --> 03:59:03.800]  Сейчас он равен лог от, значит, он равен лог от. Лог 2e делить на v, плюс, плюс что? Нет, лог,
[03:59:03.880 --> 03:59:17.320]  вот так надо писать. 2 в степени e делить на v, плюс лог 2e делить на v. Вот. Вот, но заметим,
[03:59:17.320 --> 03:59:21.520]  что это можно, как бы вот эту штуку с точки зрения оценки сверху можно и выкинуть,
[03:59:21.520 --> 03:59:27.240]  и тогда, ну вот, и тогда здесь получится в точности лог 2e делить на v, эта штука убьется.
[03:59:27.240 --> 03:59:43.080]  На какое умножить? Нет, сражаемся мы за следующее. Мы сражаемся за то,
[03:59:43.080 --> 03:59:48.320]  чтобы на второй итерации закончить алгоритм и сказать, что мы теперь умеем за v, плюс e.
[03:59:48.320 --> 04:00:07.520]  Ставка вот такая. Ну, можно и умножить, да. Так, степень домножать?
[04:00:07.520 --> 04:00:20.880]  Ну, это тоже самое, 2 в степени, вот так, да. Но это тоже, это идентично? Это и вот это,
[04:00:20.880 --> 04:00:32.280]  это одно и то же? Нет? Нет. А, хорошо. А, вот, да, вы правы, хорошо. Давайте. Ладно, давайте. Да,
[04:00:32.280 --> 04:00:40.840]  веселиться так веселиться. Так, ну давайте так. Так, то есть если я это подставлю, то у меня
[04:00:40.840 --> 04:00:50.520]  получается e плюс v на сколько там? Ну, фактически, лог 2e делить на v плюс, ну какая-то мелочь,
[04:00:50.520 --> 04:00:59.960]  вроде мелочи лог-лог, да? А нет, подойдите. Нет, подойдите, нет, стоп, неправ. Лог этой штуки
[04:00:59.960 --> 04:01:07.080]  это просто 2e делить на v на лог 2e делить на v. А если мы берем от этого лог-лог, то есть вот от
[04:01:07.080 --> 04:01:12.520]  этого всего лог получается лог 2e делить на v плюс какая-то мелочь. Ну, мелочь это лог-лог.
[04:01:12.520 --> 04:01:25.240]  Так, вот тогда получается тут шлёп-шлёп, шлёп-шлёп от e. Так, теперь выясняется вопрос, да, что мы
[04:01:25.240 --> 04:01:31.560]  делаем на следующем шаге. А теперь, к сожалению, такое. Давайте когда в следующем шаге просто
[04:01:31.560 --> 04:01:42.880]  попробуем сделать, к2 равно v. Что получится? Значит, получится. Значит, здесь мы делим,
[04:01:42.880 --> 04:01:49.840]  значит, тут получается 2 в степени k1, да, то есть вот этого вот. Умножить на, тут получается,
[04:01:49.840 --> 04:02:08.000]  лог v делить на... Да, получается просто лог v делить на лог-лог v. Что? Просто k1. Так, ну вот.
[04:02:08.000 --> 04:02:24.000]  Так, просто k1. А можно сказать просто 2 в степени 2e делить на v, логарифм двоичный на 2e делить на v.
[04:02:24.000 --> 04:02:36.400]  Так. Так, ну вот. Да, теперь в идеале хочется, чтобы действительно вот эта вот штука, вот этой
[04:02:36.400 --> 04:02:52.720]  вот, вот эта вот штука, вот этой вот как-то убилась или хотя бы осталась е. Да. Да. Нет, пока. Чего? Так, ну-ка, давайте.
[04:02:52.720 --> 04:03:10.200]  Ну и где? Так, если z равно v, то что? Ну да, если да, если да, если да, действительно заметим,
[04:03:10.200 --> 04:03:18.480]  что да, если z равно v, то да, конечно, у нас какие-то проблемы. Или z равно 2v, то да, у нас тут какие-то
[04:03:18.480 --> 04:03:27.280]  проблемы. Поэтому да, просто так не получается. Три, нет, там, нет, нет, там было два. Может быть,
[04:03:27.280 --> 04:03:34.840]  может мы помним их, может мы асимптотику помним неправильно. Нет, там, там все, там все делать,
[04:03:34.840 --> 04:03:42.760]  да. Да, там все делать за константу, только выпил делался за сколько? За... Нет, выпил же вроде
[04:03:42.760 --> 04:03:53.040]  за столько делался. Да. Ну да, да, да, да, да. Вот просто утверждалось, что второй шаг можно делать
[04:03:53.040 --> 04:04:06.880]  вот за вот эти вот v, там за вот это вот v и в принципе уже все. Ну не знаю, потому что там просто
[04:04:06.880 --> 04:04:13.040]  предлагалось, типа берем v и не паримся. Ну хорошо, а нам это сильно поможет? Ну возможно. А чем?
[04:04:13.040 --> 04:04:25.080]  Нет, ладно, нет, при большом желании, пожалуйста, можно и так. Ну просто, просто как говорится...
[04:04:25.080 --> 04:04:49.360]  Сейчас где k2 на k1? Я здесь просто k1 и написал. Ой, а, уже должна быть? Ну ладно, ладно,
[04:04:49.360 --> 04:04:50.960]  добьем тогда, хорошо. Так.
