[00:00.000 --> 00:10.960]  вот курс введения пла тех ну тут есть содержание то о чем вы сегодня говорить
[00:10.960 --> 00:15.600]  ну если коротко это некие азы которые позволят уже сегодняшнего дня вам что-то печатать
[00:15.600 --> 00:22.000]  но сначала хочется немного поговорить ну чем мотивация вообще выбирать тех
[00:22.000 --> 00:27.440]  перед другими аналогами ну тем же там вордом или там рукопистами записи ну вот
[00:27.440 --> 00:33.240]  первых я нашел такой классный график что график того как зависит объем усилий от
[00:33.240 --> 00:38.520]  сложности документа которым хочется подготовить видим некий скачок в начале
[00:38.520 --> 00:43.760]  который как бы говорит о том что в тех не очень просто вкатиться нужно наверное иметь
[00:43.760 --> 00:48.720]  хоть какой-то минимально оба спрограммирование чтобы понимать как устроенец и к разметке но
[00:48.720 --> 00:52.240]  при этом когда лишь заходят каких-то больших проектах которых нужно настраивать какой-то
[00:52.240 --> 00:57.200]  сложное форматирование или в которых много математики который ворд не очень поддерживает ну понятно что
[00:57.200 --> 01:04.520]  у тех имеет огромное преимущество ну и наверное где-то примерно рядом с вордом проходит график
[01:04.520 --> 01:09.960]  отвечающий рукописным записям который тоже понятно что может делать кто угодно но чем
[01:09.960 --> 01:14.160]  больше становится объем работы тем сложнее наверное такую штуку вести в хорошем качестве
[01:14.160 --> 01:23.840]  вот что еще можно сказать про лотех ну язык довольно старый ему лет 20 или 30 его начал
[01:23.840 --> 01:30.000]  разрабатывать еще до 0 минут который наверное известен до сих пор язык живет развивается
[01:30.000 --> 01:35.320]  дополняется кем-то расширениями но из-за этого возникают некие проблемы что на самом деле вот
[01:35.320 --> 01:39.200]  кто-то может быть же пытался поставить себе техно компьютер какой-нибудь дистрибутив тех
[01:39.200 --> 01:45.120]  лайва или там мегтех а и вы могли заметить то что он там довольно большое по объему выставят его
[01:45.120 --> 01:51.640]  многим тем что как бы вот есть базовости таксист теха который не очень сложный и его ограниченное
[01:51.640 --> 01:57.280]  количество на изучу много расширений которые решают какие-то задачи более простым путем какой-то
[01:57.280 --> 02:03.360]  набор годы инкапсулирует уже в новой команды но насколько эти расширения делать уже разные люди
[02:03.360 --> 02:08.560]  то ну в общем возникает много расширений которые решает похожие задачи которые друг другом
[02:08.560 --> 02:13.840]  конфликтует более того возникает какой-то legacy код который вообще все еще работает но ему уже
[02:13.840 --> 02:19.320]  не следовало бы какие-то решения он продвигает которые сейчас уже считается в общем не очень
[02:19.320 --> 02:24.680]  правильными и которые могут возить проблемы в долгосрочном перспективе и поэтому когда начинаешь
[02:24.680 --> 02:28.800]  гуглить что-то связанное с теком довольно легко потеряться скажем находишь какие-то посты на
[02:28.800 --> 02:34.640]  форумах 2008 года который какой-то вообще не такой какой у тебя и тебе приходится под него
[02:34.640 --> 02:39.800]  подстраиваться если ты не можешь найти другого решения но вот хочется сделать так чтобы вы знали
[02:39.800 --> 02:45.640]  какие-то самые современные разумные подходы к тому как делать какие-то вещи в документах
[02:45.640 --> 02:52.360]  наверное будем сразу приступать я заготовил сразу маленький документ в котором буду что-то
[02:52.360 --> 02:57.840]  писать по мере того будем смотреть на новые примеры кода ну вот простейшее что можно было
[02:57.840 --> 03:03.360]  написать на лотехе выглядит таким вот образом кто-нибудь кстати ну поставил себе ваш редактор и
[03:03.360 --> 03:05.280]  может прямо сейчас пробовать у себя код
[03:13.120 --> 03:20.680]  тишина видимо руки пока не дошли ну во всяком случае это будет происходить еще здесь а вот
[03:20.680 --> 03:26.720]  вопрос по этому поводу крас можно да конечно вот есть же оверлиг да вроде бы называть да есть
[03:26.720 --> 03:35.600]  ну а какой редактор оффлайн можно поставить то есть я большое полотно на эту тему выкатил в
[03:35.600 --> 03:43.000]  нашем канале вот там под разной операционки какие бывают сетапы лотеха которые можно сделать там
[03:43.000 --> 03:50.680]  есть тех студию есть в эскоде можно делать много вариантов потом почитайте что-нибудь наверняка
[03:50.680 --> 03:57.960]  ну я думаю да такие вещи мы обсудим уже после спрятательной части да и что-то
[03:57.960 --> 04:02.840]  меня это имеет такой вид уже здесь наверное можно начать проникаться тем как имеет какой
[04:02.840 --> 04:07.000]  вид имеет инфы с лотеха но ведь примерно такой что вот здесь очень много команд которые
[04:07.000 --> 04:11.960]  имеют вид бэкслэш и какое-то слово возможно потом какие-то параметры причем в разных видов
[04:11.960 --> 04:16.600]  скобочек мы потом разберемся почему они разные ну и вот на языке этих команд протестировать
[04:16.600 --> 04:22.920]  иметь такой вид я продублировал его здесь а что-то происходит срочка document класс это
[04:22.920 --> 04:30.040]  неизбежно начало либо у тегмента лотехи поскольку ну она объявляет собственно формат файла которые
[04:30.040 --> 04:36.280]  далее будет заполняться контентом здесь мы уточняем что это будет бумага формата 4 12 шрифт
[04:36.280 --> 04:42.560]  его можно варьировать там 90 14 как выводно но это считается стандартным решением то же самое
[04:42.560 --> 04:47.400]  бумага и понятно что 4 единицы формата это все гуглится какие там опции бывают но этих обычно
[04:47.400 --> 04:56.360]  хватает article это мы дальше об этом поговорим в общем один из один из типов документов
[04:56.360 --> 05:02.200]  который определяет какие виды заголовков у них есть распоряжение но это будет есть какой-то
[05:02.200 --> 05:07.240]  очень большой документ там книга там хочется чтобы были там и главы и какие-то подглавы и разделы
[05:07.880 --> 05:14.480]  ну мы об этом подробно поговорим пока можно не заморачиваться ну вот article и пусть и вот все
[05:14.480 --> 05:21.440]  содержательное что происходит документе пишется в рамках окружения document ну про окружение мы тоже
[05:21.440 --> 05:25.720]  будем говорить что это такое но пока это может быть некоторой мантрой что вот есть нечто
[05:25.720 --> 05:30.520]  называемое документом и мы должны его открыть и беги нам закрыть вендом и все что происходит
[05:30.600 --> 05:37.920]  оно происходит внутри этого окружения чем-то похоже как-то делается в html наверное сталкивался
[05:37.920 --> 05:42.320]  что там есть тег body открывающий тег закрывающий и вот все что на сайте происходит он пишется
[05:42.320 --> 05:48.960]  внутри этого тега та же самая история ну понятно что этого мало хочется писать какие-то более
[05:48.960 --> 05:53.560]  сражательные вещи но начать хочется наверно с того чтобы у нас был русский язык распоряжение и
[05:53.560 --> 06:02.640]  вот если мы попробуем прямо сейчас написать здесь вместо hello world привет мир и заделать
[06:02.640 --> 06:08.440]  комплировать то нам скорее всего пожалуются ну видим некий большой набор жалоб но в целом
[06:08.440 --> 06:12.200]  есть подозрение что это связано с кодировками да из-за того что написано какие-то вот такие
[06:12.200 --> 06:19.360]  вещи но как это решается кодировки нужно прописать как прописываются кодировки написано прям здесь
[06:19.360 --> 06:25.920]  это снова ну тоже пока некая мантра которую лучше запомнить потом обсудим почему это работает
[06:25.920 --> 06:34.560]  именно так но вот нужно подключить пакеты команда use package пакеты label это пакет для
[06:34.560 --> 06:39.960]  работы с языком в том плане что как контролировать переноса слов с одной строки на другую как
[06:39.960 --> 06:45.320]  правильно форматировать текст ну то есть все вот такие правила которые для каждого языка
[06:45.320 --> 06:51.680]  специфично они хранятся в этом пакете и его подключение с опцией русского языка позволит
[06:51.680 --> 07:00.040]  теху работать с русским языком корректно так как мы от него это ожидаем вот и теперь пакеты фонтен
[07:00.040 --> 07:08.400]  и input и ну и это encoding и отсюда понятно что они делают фонд это кодировка шрифта документа того
[07:08.400 --> 07:13.560]  что происходит вот скажем тут на превью странички пока ничего не происходит потому что все поломалось
[07:13.560 --> 07:21.600]  но это кодировка в которой пишется уже документ формате pdf вот input и это кодировка в которой мы
[07:21.600 --> 07:27.040]  пишем сам текст ну и нам хочется чтобы у тех понимал русские буквы как следствие мы подключаем
[07:27.040 --> 07:32.800]  utf и уникод и униколь русские буквы точно есть ну и я прям не глядя могу скопировать эти три
[07:32.800 --> 07:38.600]  строчки это частая практика что некоторые вещи кода которые предваряют документ типа вот таких
[07:38.600 --> 07:43.480]  построек кодировки на самом деле они в их один раз в жизни сделали и с тех пор вы просто
[07:43.480 --> 07:48.680]  копируете из документа документ они работают слава богу не потому что они какие-то сложные
[07:48.680 --> 07:53.880]  а скорее потому что там много тонкостей строчек 100 которые непонятно зачем будет перенабирать
[07:53.880 --> 07:59.240]  каждый раз заново пока не ясно откуда тут за строчкам тут их всего 5 но по мере нашего
[07:59.240 --> 08:04.120]  погружения в новый новый материал будет возникать новая вещь кто-то сюда хочется внести
[08:04.120 --> 08:18.640]  ну как видим мы уже добились того чтобы у нас поддерживаются русские буквы ну здорово да и
[08:18.640 --> 08:25.400]  что я хочу сказать поводу всего что происходило вот до begin document весь этот код который как-то
[08:25.400 --> 08:31.480]  говорит там вот он какого формата у нас документ какой там у него размер всякие там поля колонт
[08:31.480 --> 08:37.000]  титулы какой там язык какие кодировки и к ним свои команды которые потом будем разбирать все
[08:37.000 --> 08:41.640]  этот побочная информация которая конечно к документу имеет отношение но при этом сама никак не
[08:41.640 --> 08:46.040]  отражается в тексте вот это все называется преамбулы и вообще считается хорошим тоном ее
[08:46.040 --> 08:52.080]  выносить в отдельный файл как это делается мы будем потом подробно говорить пока просто покажу
[08:52.080 --> 08:59.440]  что вот есть команда input который мы вбиваем имя файлов которые мы хотим подключить пока вы не
[08:59.440 --> 09:06.160]  созданы попробовать создать его поместить то что было в преамбуле сделать команду что будет
[09:06.160 --> 09:13.000]  происходить на стадии компиляции то что было написано в файле преамбул просто заменит то
[09:13.000 --> 09:19.320]  что было написано здесь в инпуте ну примерно как defined c++ если вы с этим сталкивались вот и
[09:19.320 --> 09:25.320]  ну просто с кодом после замены будет работать компилятор и в общем будет тот же самый результат
[09:25.320 --> 09:33.840]  ничего не изменится здесь наверное что что хотел сказать но презентация конечно потом будет
[09:33.840 --> 09:39.240]  в общем доступе вы сможете ее почитать но да наверное прокомментирует также что такое
[09:39.240 --> 09:45.000]  usepackage все-таки как я уже говорил лотех это штука которая работает с большим количеством людей
[09:45.000 --> 09:53.440]  да вопрос к расчете презентации будет ли да будет для тех разобраться большим количеством людей
[09:53.440 --> 10:01.320]  они делали разные расширения которые собираюсь пакеты и вот каждый пакет package он вырез
[10:01.320 --> 10:06.400]  некоторые задачи решать там может какие-то команды добавлять которые какое-то форматирование
[10:06.400 --> 10:12.320]  делают который у нас раньше не было или там задание кодировки может и столкнулись и вот все такие
[10:12.320 --> 10:19.160]  вещи они по умолчанию ну чтобы документ не перегружать чтобы у компилятора было ну вы
[10:19.160 --> 10:23.880]  наверно понимаете чем больше у компилятора команд нужно поддерживать тем будет сложнее устроена
[10:23.880 --> 10:28.680]  компиляция тем будет там больше дерево разбора поэтому по умолчанию они все не подключен конечно
[10:28.680 --> 10:35.080]  и чтобы мы указали чтоб конкретном документе мы хотим чтобы эти пакеты использовались мы пишем
[10:35.560 --> 10:47.160]  мы будем постоянно встречать вот двигаемся дальше ну да хочется начать писать математическое
[10:47.160 --> 10:52.520]  потому что наверное мы здесь заить у тех нужен для того чтобы писать какие-то формулы и есть два
[10:52.520 --> 10:58.720]  режима набора форму как я в предметашке написал можно набирать формулы в рамках знаков доллара
[10:58.720 --> 11:05.760]  можно набирать формулы ограниченные квадратными скобками но вот экранированными бэкслэшем в чем
[11:05.760 --> 11:13.800]  разница то что набрано в рамках знаков одного доллара оно называется формулой внутри строки
[11:13.800 --> 11:24.120]  и то есть если мы попробуем это тоже скопировать код прямо в основной документ то мы увидим что
[11:24.120 --> 11:31.360]  вот это вот образовар равно 4 оно будет помещено прям таки саму строку с текстом не будет вынесено
[11:31.360 --> 11:37.600]  никак отдельно будет иметь такой же размер шрифта ну и так далее если мы сделаем второй вариант
[11:37.600 --> 11:49.800]  который предлагается сравнение оба ставлю в рамках одного документа то вот я утверждаю что он выйдет
[11:49.800 --> 11:56.240]  новую строку будет отцентрирован и будет даже шрифт наверное побольше ну в общем наверное понятно
[11:56.240 --> 12:01.200]  в чем принципиальная разница хочется наверное какие-то ключевые вещи которые должны быть на
[12:01.200 --> 12:08.280]  виду у читателя выносить концентрированном виде в отдалении от всего можно будет настраивать
[12:08.280 --> 12:14.600]  какие-то рамочки обводилась мы потом поговорим как такие вещи делать ну а вот такие промежуточные
[12:14.600 --> 12:20.600]  выгодки которые нам не хотелось бы чтобы они лишний раз отсекали на себя внимание но в лучших
[12:20.600 --> 12:26.560]  рамках самого текста помещать вот для этого есть 20 разных подходов если кто-то уже сталкивался с
[12:26.560 --> 12:32.760]  техом то он наверное слышал что есть ну как будто бы третий вариант набора формул двойные доллары
[12:32.760 --> 12:40.640]  они имеют на самом деле такой же эффект как эффект скобочек квадратных но это считается
[12:40.640 --> 12:47.040]  тоже вторевшей практикой сейчас в общем новые фичи которые возникают уже не предполагает чтобы
[12:47.040 --> 12:53.520]  это поддерживалась и лучше так не делать можете потом погуглить это там миллион есть вопросов
[12:53.520 --> 13:00.320]  нас так оверфол почему лучше делать скобочки квадратные они доллары но локально пока мы делаем
[13:00.320 --> 13:06.000]  что-то простое а для нас не будет но однако чтобы сразу привыкать к хорошему стилю будем делать так
[13:06.000 --> 13:20.760]  пока не очень быстро все понятно хорошо ага ну далее как мы могли заметить у нас уже возникали
[13:20.760 --> 13:28.760]  какие-то команды use package document class но вот у тех он весь построен на работе с командами команды
[13:28.760 --> 13:35.080]  которые будем в тексте использовать признак правила регенерировать некий символ которого
[13:35.080 --> 13:40.080]  у нас нет на клавиатуре но который при этом очень естественно было бы использовать если мы
[13:40.080 --> 13:45.880]  пытаемся какую-то формулу набрать ну тут вот есть пример я наверное звучит аж не буду локопировать
[13:45.880 --> 13:52.160]  просто перенаберу наверно чтобы подчеркнуть что это не так сложно как кажется на первый взгляд вот
[13:52.160 --> 13:58.360]  мы хотим написать что-то такое что интеграл от минус конечности для бесконечности такой функции
[13:59.360 --> 14:06.520]  интеграл басона известные вещи и предположим что я уже знаю какие-то команды теха и знаю как все
[14:06.520 --> 14:11.640]  реализуется тогда мы действия довольно простые я говорю но значок интеграла это команда и начал
[14:11.640 --> 14:17.640]  минус бесконечности но это минус и знак бесконечности это команда инфе то же самое с плюсом плюс и
[14:17.640 --> 14:22.760]  команда инфе индексация верхняя нижняя вот таким вот символом мы это потом повторим пока можете
[14:22.760 --> 14:27.080]  не заморачиваться далее что мы хотим но вот функцию экспоненты которые казали какой-то вот
[14:27.080 --> 14:33.160]  минус квадрат пополам но это значит е степени степень это верхний индекс поэтому за комплекс
[14:33.160 --> 14:46.080]  внутри дробь дробь команда фрэкшн тут минус минус x квадрате пополам а ну кстати dx раз мы говорим
[14:46.080 --> 14:52.080]  про интеграл но это все равно чему корень из двух п корень от команды скорости 2 бит
[14:52.080 --> 15:00.600]  команда пай и это должно скомплиироваться вот можно было даже не подсматривая просто глядя
[15:00.600 --> 15:05.520]  что мы хотим сделать добиться такого результата некий набор команд можем смотреться генерировал
[15:05.520 --> 15:10.120]  нам но по символе то что мы хотели мы хотели интеграл мы сделали команду и мы хотели
[15:10.120 --> 15:15.800]  бесконечности мы сделали команду инфе ну и так далее мы потом подробно обсудим какие бывают
[15:15.800 --> 15:21.880]  команды где их можно искать как их запоминать но общая идея вообще всего что будет происходить
[15:21.880 --> 15:27.200]  далее примерно такая есть некий набор команд который мы учимся пользоваться и как только мы
[15:27.200 --> 15:30.920]  руку набили мы делаем довольно быстро и при этом получается какой-то довольно красивый
[15:30.920 --> 15:41.800]  результат в том шефорде наверное это было бы не так то реально сделать ну да тут есть
[15:41.800 --> 15:46.960]  сразу ссылочка на сайт из презентации она ведет но можем посмотреть если есть желание сайт
[15:46.960 --> 15:54.120]  detoxify он позволяет по нарисованной картинке определять какой символ в техе мог бы это быть
[15:54.120 --> 16:03.080]  ну допустим я хочу символ изоморфизма равенство и она волнистая линия над ним я бы нарисую и
[16:03.080 --> 16:11.360]  подожду что мне выдаст ну вот он нашел на символ конк который мне как раз таки хотелось и это
[16:11.360 --> 16:16.040]  более-менее для всего верно когда вы знаете что вы конкретно хотите написать но не знаете
[16:16.040 --> 16:21.560]  как реализовать можете пойти в google обязательно подскажут вот если речь именно об а символьном
[16:21.560 --> 16:26.880]  наборе то символы можно искать здесь есть приложение которые прям таки печатный текст
[16:26.880 --> 16:32.480]  прям целые формулы преобразуют в тех какой-то может быть нейронкой это тоже гуглица тоже
[16:32.480 --> 16:41.320]  вещь хорошая может пригодится но мы сейчас не столько об этом секунду закрыть лишнее интересно
[16:41.320 --> 17:00.760]  как это сделать ясно пресса презентации ну в общем-то мы ничего не пропустили вот есть
[17:00.760 --> 17:06.000]  разные сайты и на них можно сказать разные симптомы вот теперь постараемся как-то по полотенце
[17:06.000 --> 17:11.000]  или разложить то что происходило вот с этой вот формулой какие бывают разные так сказать
[17:11.000 --> 17:16.560]  категории команд в техе для набора формул ну это может на первый взгляд казаться немножко
[17:16.560 --> 17:23.000]  страшающий или может быть беремоска но по мере практики как-то они быстро запоминаются ну и
[17:23.000 --> 17:28.080]  тем более что они все делают примерно ровно то что в них написано в этом плане их довольно
[17:28.720 --> 17:34.840]  ну например до индексации вы наверняка слухивались таким что верхний индекс и
[17:34.840 --> 17:42.000]  нижний индекс и выделяется нижним прочерком и зеркал флекс вот некие примеры кода как это
[17:42.000 --> 17:47.640]  будет реализовано можете вчитаться и если есть вопрос это сказать что не так
[17:47.640 --> 18:05.480]  вопрос немножко не поэтому там в начале прям были 12 секунды единиц размер шрифта да да все так
[18:05.480 --> 18:15.920]  ну я его поменял он мне короче не поменялся а ты должен был заново скомплиировать файл а я
[18:15.920 --> 18:23.080]  скомплиировал ставил 100 и оно ничего не произошло знаешь им дело ну не все размер шрифт которые мы
[18:23.080 --> 18:28.840]  ожидаем поддерживать слоте там по умолчанию и штук 10 там 10 12 какие-то такие типичные может
[18:28.840 --> 18:33.400]  быть 8 надо поискать какие-то рядом поддерживаются прям сейчас чтобы поддерживать другие нужны
[18:33.400 --> 18:38.360]  отдельные пакеты если хочешь можешь их поискать честно сказать никогда никогда не
[18:38.360 --> 18:44.600]  предназвался как менять размер шрифта не глобально во всем документе а там для конкретной строчки мы
[18:44.600 --> 18:50.920]  довольно скоро поговорим поэтому ну не возникает в разумной ситуации нужды делать шрифт всего
[18:50.920 --> 18:59.320]  документа сотом это очень много это пара букв на строчку и как раз с этим расчетом что это
[18:59.320 --> 19:07.720]  обычно не возникает нужды это не поддерживается по умолчанию вот хотелось бы уточнить как записать
[19:07.720 --> 19:14.600]  возведение в степени индексированного сверху какого-то элемента имеешь в виду если у нас в
[19:14.600 --> 19:21.840]  степени еще степень ну фактически если у нас есть индексированный сверху до какой-то там x и
[19:21.840 --> 19:30.840]  мы хотим показать что он взойдет степень а ну тут наверное простейший вариант такой лучше всего чтобы
[19:30.840 --> 19:36.360]  тебя точно все поняли просто скобочки сделать что у нас есть x в степени n и даже не степени
[19:36.360 --> 19:43.320]  этого я про индексированный индексом и и все это в степени так точно будет понятно в техе
[19:43.320 --> 19:48.640]  насколько я знаю нет так сказать возможности делать прямо многоэтажные конструкции такого
[19:48.640 --> 20:02.960]  вида но вроде результат разумный какой мы ожидали да благодарю хорошо а если сделать x в степени
[20:02.960 --> 20:10.080]  n в степени n ну то что n в степени n было а ну такое возможно это запросто но для этого нам
[20:10.080 --> 20:16.080]  потребуются фигурные скобочки я про это внимание раньше не обращал можем считать даже вот эти
[20:16.080 --> 20:20.660]  вот команды индексации это вот нижний прочер церковь flex тоже ну как бы командами лотеха которые
[20:20.660 --> 20:25.680]  принимают какие-то аргументы аргументы команд если они не односимбльные заворачиваются фигурные
[20:25.680 --> 20:30.360]  скобки ну знаете как в плюсах если у нас там в цикле больше одной строки надо тоже это
[20:30.360 --> 20:34.640]  заворачивать и у нас тут мы хотим чтобы у нас в индексе верхнем было аж какая-то конструкция
[20:34.640 --> 20:40.240]  сложная степени n поэтому мы все то что будет в индексе заворачиваем фигурные скобки а тут уже
[20:40.240 --> 20:45.800]  пишем n степени мы могли бы эту n тоже завернуть фигурные скобки но это бы не имело никакого
[20:45.800 --> 20:49.760]  эффекта потому что всего один символ ну получено то что мы хотели полагаю
[20:49.760 --> 21:00.760]  да да все понятно спасибо вот наверное поэтому слайда все что я хотел сказать что вот так есть
[21:00.760 --> 21:06.560]  в яхте нижние индексы и если у нас много символов сразу хочется уместить этот индекс мы заворачиваем
[21:06.560 --> 21:13.800]  скобочки теперь греческий алфавит как я уже говорил в лотехе все команды ну они делают более
[21:13.800 --> 21:18.280]  менее то что в них написано если мы хотим греческую букву альфа маленькую мы пишем альфа со
[21:18.280 --> 21:22.920]  страшной буквы хотим заглавную греческую букву гамма пишем гамма но уже заглавной буквы чтобы
[21:22.920 --> 21:29.080]  буквы заглавных но как видим все работает дает какие-то греческие буквы вопрос на засыпку такой
[21:29.080 --> 21:34.560]  почему команды альфа большое не поддерживается вот если я попробую набрать тут альфа большое ну
[21:34.560 --> 21:41.080]  то есть альфа заглавной буквы мне скажут я не знаю такой команды есть идея
[21:46.200 --> 21:50.960]  она выглядит также как уже имеющийся какой-то символ который можно набрать проще да все так
[21:50.960 --> 21:56.440]  заглавная альфа это просто латинская буква а и было бы странно под латинской буквы а звать
[21:56.440 --> 22:04.000]  отдельную команду мы так и можем набрать да спасибо ну и в общем более-менее также любые
[22:04.000 --> 22:08.400]  спецсимволы которые нам нужны вызываются мы хотим квантер какой-нибудь существования мы пишем
[22:08.400 --> 22:13.600]  экзис опять же очень естественно как называется то и делаем хотим квантер всеобщести пишем
[22:13.600 --> 22:20.600]  порол и он даст нам нужен нам квантер вот опять же как только у нас возникает символ который
[22:20.600 --> 22:25.440]  мы раньше писать не умели описать его хочется если он есть в техе мы можем найти его на сайте
[22:25.440 --> 22:32.120]  детек сифа или там полистать какие-нибудь мануалы ну если его нет придется делать его самому это
[22:32.120 --> 22:37.320]  посложнее мы сегодня не будем обсуждать но глобально будем может быть цачу занятия можем
[22:37.320 --> 22:46.120]  учесть занятия тут наверное тоже все понятно и вот тут я сразу две темы поднимаю в следующем
[22:46.120 --> 22:52.320]  слайде вот у нас встречалась формулке которая была для примера дробь вот хочу еще раз закрепить
[22:52.520 --> 22:59.800]  работать команда фрэк но слово fraction дает нам дробь из числителей знаменателя его у нее два
[22:59.800 --> 23:05.200]  аргумента повторюсь каждый аргумент команды заворачивается в фигурной скобке если он не
[23:05.200 --> 23:10.800]  односимбльный то есть даже если он односимбльный тоже можно но по крайней мере не обязательно но
[23:10.800 --> 23:15.280]  если символов несколько ваш в аргументах команды то точно заворачивайте здесь нас два
[23:15.280 --> 23:22.960]  аргумента 4 знаменатель допустим мы хотим 15 26 это надо генерирует дробь в которой будет
[23:22.960 --> 23:29.680]  здесь какой нам надо это тоже какой нам надо еще раз подчеркну если бы мы не использовали
[23:29.680 --> 23:36.520]  фигурные скобки то было бы что-то странное но бы я во первых даже такая запись непонятно что
[23:36.520 --> 23:42.760]  означает но как было тех кто распрасил он бы подумал ага у меня есть два аргумента по одному
[23:42.760 --> 23:47.000]  символу потому что нет фигурных скобок это 1 и 5 я из них соберу дробь а дальше разбирать
[23:47.000 --> 23:56.600]  сами потом 2 и 6 их просто печата вот и здесь есть такой примерчик в котором есть пример
[23:56.600 --> 24:02.320]  применения фрака и фигурными скобками и без них ну то есть как видим у нас аргументы односимбльные
[24:02.320 --> 24:07.840]  3 и 4 поэтому они преобразуются в дробь 3 четвертых как мы как мы бы хотели если на что-то более
[24:07.840 --> 24:12.680]  сложная скажем у нас сложим числитель который аж сумма дробей то мы конечно заворачиваем и
[24:12.680 --> 24:18.520]  получаем ожидаем результат вот понятно ли по этой строке что произошло
[24:23.680 --> 24:29.480]  да понятно хорошо вот ну и стоит еще подчеркнуть тут он встретился впервые символа центральной
[24:29.480 --> 24:35.560]  точке си дот ну понятно что он делает он делает точку по центру строки им можно
[24:35.560 --> 24:41.640]  вражать умножение если это удобно может там еще какие-то операции может конкатонацию строк
[24:41.640 --> 24:46.920]  что-нибудь такое но вот идея в том что он немножко отличается от других операторов которые у нас
[24:46.920 --> 24:52.480]  раньше были продон не операторов других команд раньше у нас были команды вида там омега большое
[24:52.480 --> 24:59.320]  генерила просто символ омега большое и все и дальше текст шел как обычно а команды другой
[24:59.320 --> 25:05.520]  категории которые бинарные операции например как все дот они отличаются тем что они вокруг себя
[25:05.520 --> 25:14.600]  еще генерят небольшие пробелечки чтобы отделить себя от двух оперантов этой операции то есть если
[25:14.600 --> 25:27.280]  мы написали давайте какой-нибудь дурацкий пример допустим вот мы хотим там один exists ну это что-то
[25:27.280 --> 25:31.920]  не осмысленное конечно но вот у нас есть два символа обычного языка и между ними символ
[25:31.920 --> 25:37.640]  который пенерица команды нам просто клад и регист встала ровно между ними да сколько бы
[25:37.640 --> 25:43.600]  пробелов я не поставил на тех их все сожмет до одного тоже примерно как в плюсах вы же знаете что
[25:43.600 --> 25:49.120]  там тоже может стать сколько угодно пробелов или новых строк все равно не все схлопываются в один
[25:49.120 --> 25:55.840]  пробел или в одну новую строку то же самое здесь вот как видим не возникают пробелов но если я
[25:55.840 --> 26:00.720]  хочу их родить какой-то команды которая бинарная операция например команда times это команда
[26:00.720 --> 26:07.000]  умножения крестиком ну типа times тоже в английском умножить как видим не просто тут стал крестик он
[26:07.000 --> 26:13.800]  еще и пробел и проставил между собой и единицей нолем чтобы это выглядело красиво в техе почти
[26:13.800 --> 26:21.520]  все про красоту мы это снова блюда тоже много есть разных гонорных операторов можно гуглить я
[26:21.520 --> 26:27.600]  парочек примеров привел что вот есть умножение есть операторы сравнения g это greater or equal
[26:27.600 --> 26:34.360]  делает опять же ровно то что написано конк это congruent или изоморфный там о плац это как бы
[26:34.360 --> 26:39.440]  плюс завернутый и в о ну или в кружочек там знак прямой суммы если угодно ну и там similar
[26:39.440 --> 26:46.400]  дает нам вот такое вот волнистую линию их масса самых разных они все легко гулятся но самые
[26:46.400 --> 26:55.160]  основные их может быть штука 5 запоминаются буквально за пару документов практики ну и
[26:55.160 --> 26:59.640]  следующий очень похожий тип команд это операторы вот бинарные операции ставили
[26:59.640 --> 27:05.240]  пробелы и слева от себя и справа от себя оператор эту штуку принимающие только один аргумент ну
[27:05.240 --> 27:10.800]  например там синус косинус какой-нибудь или оператор ранга в алгебре если вы скил сталкивались
[27:10.800 --> 27:16.000]  или там размерности или там ядро или образ в общем это все операторы ну то есть это нечто
[27:16.000 --> 27:19.960]  принимающая на вход один аргумент что-то него характерно перед аргументом хватит ставить
[27:19.960 --> 27:26.000]  пробел чтобы отделить текст название оператора вот его аргумент вот для этого но в латехе есть
[27:26.000 --> 27:30.240]  отдельная категория в команд который генериат символ и пробел после него называемый оператор
[27:30.240 --> 27:38.520]  ну вот оператор синуса это то что мы видим здесь это опять же команда sin очень ожидаемая которая
[27:38.520 --> 27:43.800]  в качестве аргумента принимает x и ставит разумного размера пробел между с минусом и x если
[27:43.800 --> 27:48.320]  мы попытались набрать просто sin x ну в плане без команд без всего просто текстов то он подумал
[27:48.320 --> 27:52.000]  что это все как бы однобуквенные переменные набрал бы другим шрифтом и вообще было бы некрасиво
[27:52.000 --> 27:58.560]  и непонятно вот если мы захотели набрать скинуть даже другим шрифтом который нам подходит мы потом
[27:58.560 --> 28:02.760]  поговорим как шрифты менять пока не очень важно если мы просто набрали у этим шрифтом дальше
[28:02.760 --> 28:07.640]  поставили истон вы конечно все нам как надо отрисовал но пробел не поставил ну и тоже это как-то
[28:07.640 --> 28:14.120]  не очень лицеприятно правильный подход это использовать команду sin и как видим что мы
[28:14.120 --> 28:20.280]  хотели то и получить да они все операторы которые нам встретиться в жизни золотехи уже забиты
[28:20.280 --> 28:24.840]  потому что как правило такие там многобуквенные сочетания не очень еще видны их легко создавать
[28:24.840 --> 28:30.600]  самому вот я пару примеров накидал какие мне встречались на практике которые делал сам ну
[28:30.600 --> 28:37.080]  я про это тоже поговорим попозже видимо в следующем занятии на самых таких ранних порах нам
[28:37.080 --> 28:42.120]  не пригодится просто ну пусть будет понимание того что если чего-то нет это
[28:42.120 --> 28:50.840]  можно создать вот их всегда просто не всегда очень просто но еще немножко о вид скобах пока что
[28:50.840 --> 28:59.120]  нас была ситуация что вот мы пытались возвести индексированный икс еще какой-то степень ну
[28:59.120 --> 29:06.640]  да скобки бывают разные их техи много во первых да это чтобы вас не путала скобки как бы
[29:06.640 --> 29:12.400]  отделяющей среду разработки ну вернее среду текущей формулы что вот есть 1 кранированная
[29:12.400 --> 29:16.520]  квадратная 2 кранированная квадратная на эти вы пока забейте вот а что происходит с держательного
[29:16.520 --> 29:22.600]  у нас есть просто круглые скобки держащие дробь и пополам есть скобки которые добавляется
[29:22.600 --> 29:28.160]  некоторые префиксы префиксы манифицирующие ее размер если скобкам тут дорисую префикс big
[29:28.160 --> 29:38.440]  причем давайте к одной просто big в которой будет 2g смотрим что будет нам генерировался такое
[29:38.440 --> 29:43.760]  странное выражение в котором каждая из скобок больше своего обычного размера но при этом левая
[29:43.760 --> 29:49.040]  но не много больше правая прям сильно больше это из наших префиксов которые манифицируют
[29:49.040 --> 29:55.840]  размер мы в разумной ситуации конечно лучше делать согласованными big тут big здесь тогда получится
[29:55.840 --> 30:01.720]  какой-то ожидаемый результат но как видим здесь это был некий оверкил очень большие скобки такие
[30:01.720 --> 30:06.760]  нам на практике конечно не нужны крайне для такого выражения чтобы сказать лотеху типа подстрой
[30:06.760 --> 30:12.400]  размера скобок сам префикс используются такие используются к левой скобке префикс левт правой
[30:12.400 --> 30:17.360]  скобки префикс райт что опять же довольно ожидаем тогда он сам поймет какого размера скобки
[30:17.360 --> 30:24.800]  ему нужны чтобы это было наиболее благозвучно и такие поставит вот имеем такой результат здесь
[30:24.800 --> 30:29.960]  пример такой тоже привезен у нас был скобка большая дробь и полом и вот он большой дробь
[30:29.960 --> 30:34.920]  подобрал оптимальный размер скобок вот в такой ситуации как видим big просто слишком маленькие
[30:34.920 --> 30:42.080]  big 2g слишком большие а вот левт-райт прям оптимально подобрали ну и в общем хорошая
[30:42.080 --> 30:47.240]  практика является в любой ситуации левт-райт если у вас скобок что-то сложнее чем просто
[30:47.240 --> 30:51.840]  односимильные переменные там какие-то может быть знаки суммы там может быть дроби и экспоненты
[30:51.840 --> 30:57.320]  правило это увеличивает размер строки и приходится как скобки модифицировать значит будет некрасиво ну
[30:57.320 --> 31:04.600]  что еще бывает бывает фигурные скобки бывают квадратные скобки бывают скобки округления вниз или
[31:04.600 --> 31:11.160]  вверх соответственно округление вниз это floor как вы знаете английского языка поэтому команды
[31:12.160 --> 31:22.520]  генерирует нужные символы а вверх это и сейл ну а слово силин сейчас я даже скажу вот сейл там
[31:22.520 --> 31:38.080]  дробь а на б и пер сейл а как видим мы получили нужный символ но он опять плохого размера и
[31:38.080 --> 31:48.480]  мы уже знаем как это решать может быть скажете ну да все так припишем рефиксы скажем теху разберись
[31:48.480 --> 31:57.000]  с размерами символов он разберется сделает хорошо как мы хотели здорово тут наверное все что хотел
[31:57.000 --> 32:02.480]  сказать ну разве что отмечу заметьте фигурные скобки тут не простые а экранированные тоже
[32:02.480 --> 32:07.520]  бэкслэшами почему так но вы уже заметили что обычные фигурные скобки в лотеке имеют
[32:07.520 --> 32:12.880]  значение аргумента команд то есть ну он их считает что вот мы пытаемся какую-то команду
[32:12.880 --> 32:18.560]  сделать это какой-то аргумент скобках подон и чтобы не было синактическая противоречия нужно
[32:18.560 --> 32:23.120]  такие спец символы которые имеют свое значение экранировать и бэкслэш я про это еще поговорю
[32:23.120 --> 32:30.000]  отдельно но идей такая я прямо сейчас про это говорю как удобно вот есть всякие спец символы
[32:30.000 --> 32:37.000]  которые мы уже встречали доллар ну это вы уже заметили окружение формулы внутри строки бэкслэш
[32:37.000 --> 32:42.400]  ну это просто спец символ который команд все объявляют есть фигурные скобки а персанды мы
[32:42.400 --> 32:47.880]  их пока не встречали как спец символа но еще встретим и то же самое с этими хэштегами нижнее
[32:47.880 --> 32:53.120]  подчеркивание встречали как нижний индекс и процент это знак комментария в техе то что
[32:53.120 --> 32:57.600]  начинается процента и до конца строки считается комментариям не комплинируется если мы хотим
[32:57.760 --> 33:05.000]  написать то мы кронируем слешом и получаем опять что то что хотели ну почему у нас тут не
[33:05.000 --> 33:12.280]  двойной бэкслэш бэкслэш и набранный текстом бэкслэш ну потому что было бы странно и кронировать
[33:12.280 --> 33:17.600]  бэкслэш бэкслэш согласитесь и тем более что двойная бэкслэш имеет в техе свое уникальное
[33:17.600 --> 33:22.080]  значение которое мы пока не встречали наверное сегодня не встретим но в общем мы про него
[33:22.840 --> 33:28.720]  вот это более-менее все что касается касалось простого набора формул то есть на самом деле
[33:28.720 --> 33:32.840]  то что он рассказал хватает чтобы какие-то такие штуки набирать ну или что-то что
[33:32.840 --> 33:37.520]  встречается на вашей практике какие-то сложные техники у нас еще будут наверное будут только
[33:37.520 --> 33:41.720]  на третьем занятии а вот сейчас хочется немного поговорить о том как собственно документы красиво
[33:41.720 --> 33:46.800]  организовывать как форматировать текст у них в общем как делать презентабельные работы и
[33:46.800 --> 33:53.560]  этом будет довольно много времени посвящено и начнем мы просто с этих там форматирование текста вот
[33:53.560 --> 33:59.720]  ну первое естественное желание если вы допустим пишете большой конспект по курсу то наверное
[33:59.720 --> 34:05.480]  хочется разбивать вон какие-то кусочки там как я уже говорил главы раздела подразделы ну вот
[34:05.480 --> 34:11.720]  реализуется это техи командами section subsection subsection sub subsection это если мы
[34:12.720 --> 34:18.920]  артикул я напомню вот мы прям были написали вот есть вот артикул поэтому у нас только в
[34:18.920 --> 34:24.880]  распоряжении такие команды если бы написали бук то были бы что-то типа chapter или может
[34:24.880 --> 34:33.120]  быть part ну в общем какие-то больше единицы текста которые тоже имеют свое название ну во всяком
[34:33.120 --> 34:38.360]  случае тут нам такого точно хватает мне не для одного курса не пригождалось иметь больше
[34:38.360 --> 34:44.720]  уровня вложенности поэтому всем рекомендую этим ограничиваться ну тут нет примера как
[34:44.720 --> 34:54.080]  это будет выглядеть давайте скопирую код посмотрим не очень понятно собственно в чем
[34:54.080 --> 35:03.320]  вообще результат но вот команда section и не рит таким заголовавшим шрифтом то но тот текст
[35:03.320 --> 35:07.240]  который мы написали в качестве аргумента и при этом номирует его то есть секции все
[35:07.240 --> 35:15.600]  номированные если я тут сделаю вторую секцию напишут скажем вторая секция то вот он добавит ее
[35:15.600 --> 35:22.840]  снизу уже с номером 2 ну и тем же шрифтом что и первая секция подразделы поменьше и шрифты
[35:22.840 --> 35:27.280]  там поменьше соответственно и номерация вложена в номерацию секции то есть все подразделы одной
[35:27.280 --> 35:34.040]  секции имеют первое одно и то же первое число если мне хотим номерации мы делаем команду там
[35:34.040 --> 35:38.720]  секшен или сапсекшен со звездой звезда говорит номерация нам сейчас не нужна для этого
[35:38.720 --> 35:43.840]  раздела и более того номерация дальше не ломается то есть пусть у нас был ненумерованный раздел
[35:43.840 --> 35:47.840]  дальше будет не один три а все-таки 1 2 потому что мы вот этот номерованный просто никак не
[35:47.840 --> 35:56.960]  учитывали вот тогда немного поговорим про всякий стиль текста ну типичное наше желание текст
[35:56.960 --> 36:03.320]  курсивный подчеркнутый все как всегда всех это тоже можно делать есть разные опции есть два
[36:03.320 --> 36:08.960]  таких глобальных подхода которые друг друга отличаются подход командный и подход через
[36:08.960 --> 36:14.320]  модификатора но командно это то что мы уже что мы уже умеем мы знаем что бывают команды
[36:14.320 --> 36:22.880]  которые какие-то аргументы с этим аргументом что-то делают вот есть скажем команда текст текст
[36:22.880 --> 36:31.960]  бф которая то что внутри него делать жирным вот я и напишу тут черный текст утверждаю что
[36:31.960 --> 36:36.800]  тоже с комбилицией будет черным черистом написано ну кажется каким-то громоздким целых
[36:36.800 --> 36:43.120]  шассимволов чтобы сделать но можно делать легче выделяем шлифт сделаем контрол б контрол
[36:43.120 --> 36:48.920]  б сам генерит этот набор который нам нужен техи вообще много макросов мы можем даже делать
[36:48.920 --> 36:54.240]  свои макросы под наши нужды но при этом мы тоже будем позже говорить ну не сегодня нам пригодится
[36:54.240 --> 37:02.800]  ну даже история с курсивом есть у нас текст и то слово италик курсивный текст
[37:09.800 --> 37:14.320]  ну как мы ожидали получили классивный текст а если мы хотим сделать чтобы было
[37:14.320 --> 37:25.560]  другое и наши действия будут но ежедневно и курсивный просто рядом их поставить ну практически
[37:25.560 --> 37:32.760]  так вот прям так все-таки наверное не сработает не хочу рисковать но сработает точно вот так то
[37:32.760 --> 37:37.360]  есть все что является аргументом текст бф будет черным а его аргументом является уже курсивный
[37:37.360 --> 37:45.440]  то есть как бы друг на друга не просто ложится это довольно громоздка что сникает два уровня
[37:45.440 --> 37:50.000]  вложенности фигурных скобок это не очень красиво для такой ситуации второй подход который
[37:50.000 --> 37:56.320]  модификаторных как это работает на самом деле каждый пара фигурных скобок задает некую область
[37:56.320 --> 38:01.360]  видимости внутри этой области работают какие-то модификаторы стиля возможно если мы их напишем
[38:01.360 --> 38:07.600]  и по окончании этой области по выходе из него все эти модификаторы убираются но точно так же
[38:07.600 --> 38:15.160]  как скопы программирование плюсов питание то же самое все вот тут будет какой-то текст мы
[38:15.160 --> 38:20.400]  можем навесить внутри этого блока видимости сколько угодно модификаторов но проблема в том
[38:20.400 --> 38:25.960]  что модификатор это не команды они имеют немножко другое написание чтобы друг друга отличать то
[38:25.960 --> 38:31.240]  есть уже не так с бэйфа бэйф сериус не знаю для него макроса но не очень сложно написание
[38:31.240 --> 38:38.920]  дальше италья пишется вот так и шейп ну и если хотим можем еще сделать большой шрифт я про это
[38:38.920 --> 38:44.080]  потом буду говорить но вот есть модификатор large который делает шрифт большим или даже очень большим
[38:44.080 --> 38:53.440]  вот долго комплиировал но сгенерировал то что мы хотели он все три модификатора сложил
[38:53.440 --> 39:00.520]  вместе и до конца области видимости их применял текст у нас и большой и курсивный и жирный а тут
[39:00.520 --> 39:10.200]  обычный текст может мы вышли из области видимости и модификаторы убить больше не работают вот здесь
[39:10.200 --> 39:16.720]  наверное все что сказать да вот типичные полезные модификаторы во первых модификаторы размера
[39:16.720 --> 39:24.240]  можете посмотреть какой это имеет эффект у них к сожалению нет аналога через команды размеры
[39:24.240 --> 39:28.600]  представляется только модификаторами поэтому если вы хотите ставить размер какого-то блока текста
[39:28.600 --> 39:33.920]  то либо блок заворачивайте скобки чтобы не повлиять на весь документ либо по окончании блока
[39:33.920 --> 39:37.840]  пишите снова тот размер который был изначально чтобы ничего не испортить ну то есть был large
[39:37.840 --> 39:42.640]  прописали текст который должен быть large допустим хочется чтобы дальше его не было пишите
[39:42.640 --> 39:48.840]  обратно команду normal size давайте отрезюми какие бывают команды бывает huge бывает large
[39:48.840 --> 40:03.800]  капсу бывает large просто заглавный бывает large бывает какой normal size small ну и так далее я
[40:03.800 --> 40:10.440]  поставлю точки до команды dot с команды точек ну и в общем это будут разные размеры шрифта
[40:10.440 --> 40:16.480]  построенные уже на основе текущего основного размера основной размер у нас там был двенадцатый
[40:16.480 --> 40:22.480]  когда допустим но смола то десятый 16 ну и так далее там примерно какие-то вот такие почеты
[40:22.480 --> 40:28.040]  производится это всегда работает ну и заметим так как только команда huge модификатор сменилась
[40:28.040 --> 40:34.080]  команды large ну следующий аж к столу меньше потому что модификатор один того же типа перекрывает
[40:34.080 --> 40:39.120]  другой все модификаторы размера это модификатор одного типа может быть не больше одного одновременно
[40:39.680 --> 40:47.480]  и еще модификатор шрифта и ну шрифты к счастью можно менять еще и командами вот мы встречали как-то
[40:47.480 --> 40:53.400]  раз когда мы там синус обрабатывали разные подходы к написанию синуса вот там был модификатор
[40:53.400 --> 40:58.200]  шрифта навешан на один подходов к синусу но это вот так делается если шрифт завернуть
[40:58.200 --> 41:03.040]  такую команду то он будет написать немножко по-другому тут за засечками тут без засечек тут
[41:03.040 --> 41:07.720]  вообще какой-то странный а тут так сказать капитальный вариант но это когда у нас строчные
[41:07.720 --> 41:16.400]  буквы по размеру как заглавный но маленький гоня в 2 3 размера что-то вот такое в целом
[41:16.400 --> 41:20.800]  довольно редкая вещь мне никогда не пригождалась на практике но она существует этим можно
[41:20.800 --> 41:25.880]  пользоваться вернее такие штуки нужны когда мы набираем формулы некоторые название требует
[41:25.880 --> 41:31.800]  конкретного шрифта скажем название задачи сложности вычисления принта писать шрифтом
[41:31.800 --> 41:40.120]  вот этим вот текст сф или скажем от ожидания дисперсию значки принято писать шейстом текст
[41:40.120 --> 41:48.120]  сф а например ну оператор принадлежит писать шрифтом вот этим вот рм но в общем есть разные
[41:48.120 --> 41:53.400]  вариации мы с этим еще оттолкнемся успеем поговорить но вообще это все гуглится шрифта
[41:53.400 --> 41:59.400]  удовольствия много они все есть в интернете ну и последнее что хочется сегодня рассказать
[41:59.400 --> 42:06.080]  такая техника окружение вот мы говорили по всяким модификаторе стиля его добыть нам хочется ну
[42:06.080 --> 42:11.360]  много разных команд которые как то стилизуют текст завернуть воедино вот допустим мы хотим
[42:11.360 --> 42:16.260]  далее одной командой всегда делать так чтобы рамка блока был и шириной и курсивной и большой
[42:16.260 --> 42:21.320]  текст и мы не хотим писать каждый раз это заново для этого есть окружение окружение такая штука
[42:21.320 --> 42:27.080]  которая прямо были объявляется мы сегодня не будем делать свои окружение не будем сами писать
[42:27.080 --> 42:33.080]  но в общем можно тут что-то написать в преампле как-то объявить каким-то названием назвать
[42:33.080 --> 42:39.160]  допустим my environment и с тех пор когда мы хотим модифицировать какой-то текст по стилю мы
[42:39.160 --> 42:48.000]  пишем begin my environment ну и там тоже самое и конечно у меня так жалуются потому что я такой
[42:48.000 --> 42:52.680]  следы не объявлял он его не знает но вот если бы была какая-то среда которая существует
[42:52.680 --> 42:57.160]  внутри нее бы просто все модификаторы стили которые нужны применились сами и на этом все
[42:57.160 --> 43:04.280]  закончились чтобы примеры хоть какие-то были есть уже строенные среды например среда центр делает
[43:04.280 --> 43:12.520]  вы можете наверное угадать что она центрирует текст который написан здесь то есть текст по
[43:12.520 --> 43:18.480]  умолчанию у нас по ширине выравнивается а вот центр среда она говорит выравнивают по центру
[43:18.480 --> 43:33.720]  или например окружение флажрайт оно делает текст выровненный право наверное так это пишется
[43:33.720 --> 43:42.240]  тоже ожидаемо флажрайт он то и делает текст упирается правую сторону строки ну кстати мы
[43:42.240 --> 43:48.240]  еще можем заметить что у нас довольно странные поля какие-то большие и строка довольно короткая
[43:48.240 --> 43:53.200]  мы с этим сегодня бороться не будем пока мы смиримся с форматированием по умолчанию
[43:53.200 --> 43:59.440]  этой страницы это будет на следующем занятии но просто чтобы не перегружать сегодня вот так
[43:59.440 --> 44:05.480]  есть окружение и вот важный подвид окружений это окружение называемый теоремами что они
[44:05.480 --> 44:14.240]  делают вот часто вы встречали каких-то учебниках там выражение вид теорема там 5 выполним тот и тот
[44:14.240 --> 44:19.840]  вот вот ну чтобы не писать каждый раз теорема и еще и вспоминать какого он должен быть номера
[44:19.840 --> 44:28.340]  люди придумали окружение и теорем чтобы они работали нужно использовать пакет а и мс от слова
[44:28.340 --> 44:33.600]  американская мессиатрица сайти у амс общедованы много пакетов для тех они как правило все
[44:33.600 --> 44:42.560]  полезные потом про это поговорим ну вот есть такой пакет который отвечает за теорема вот мы
[44:42.560 --> 44:47.960]  этот пакет подключим какую теорема объявим вот такую пока не очень важно что есть символы
[44:47.960 --> 44:53.240]  значит мы об этом будем подробно говорить завтра ну завтра через неделю но в общем можно сказать что
[44:53.240 --> 44:59.560]  вот мы хотим теорема такого стиля плейм и хотим чтобы она называлась теорема и с тех пор если мы
[44:59.560 --> 45:08.600]  будем говорить бегин феерам что-то писать будет что-то элементарное то вот это теорема она будет
[45:08.600 --> 45:15.680]  произварена текстом теорема номер такой-то жирным шрифтом все как полагается тут допустим 5
[45:15.680 --> 45:23.800]  посмотрим что будет но все работает нам за нас написали слово теорема оставили правильный
[45:23.800 --> 45:31.120]  номер все как у людей можно делать не номерованные теорема то есть как всегда вот у нас было с
[45:31.120 --> 45:34.200]  экшен звездочка без звездочки номерованная неномерованная то что мы здесь звездочка
[45:34.200 --> 45:38.760]  делает теорема неномерованная но хочу предостеречь звездочка лотихия много значений
[45:38.760 --> 45:43.200]  имеет вот в этом случае звездочка означает нашему номерации отключили а есть команда у
[45:43.200 --> 45:47.960]  которой звездочка имеет какой-то другой модификации поведения но всегда идея в том что звездочка
[45:47.960 --> 45:53.800]  говорит что как бы эта команда имеет немножко другую логику не как оригинал вот в нашем случае
[45:53.800 --> 45:59.560]  номерацию убирает если мы хотим другое название ради бога можно назвать это ляма ну то есть будет
[45:59.560 --> 46:05.560]  вырисовать текст ляма а можно даже переименовать назвать его ляма что довольно естественно
[46:05.560 --> 46:22.840]  если мы так написали вот так поменять значение сработает до основу все то что мы ожидали вот
[46:22.840 --> 46:28.600]  примерно такой инструмент очень нужный встречается постоянно если вы пишите это конспекта
[46:28.600 --> 46:34.880]  ну конечно хочется больше власти на теку какого стиля будет то что написано внутри мы поговорим
[46:34.880 --> 46:44.440]  о том как делать свои теоремы но там попозже это довольно просто но опять сегодня перегружать на
[46:44.440 --> 46:48.640]  самом деле на сегодня как бы основной материал уже почти закончился я сейчас некие замечания
[46:48.640 --> 46:56.200]  приведу которые могут помочь первых да есть пакеты которые вы подключили раз в жизни и забыли
[46:57.080 --> 47:02.440]  например пакеты от амс они просто дают нам какие-то новые символы математические какие-то новые
[47:02.440 --> 47:09.200]  шрифты теоремки в общем одни плюсы нам это будет всегда пригождаться поэтому можно вообще не
[47:09.200 --> 47:15.120]  глядя в любую преамбула копировать строки вот эту use package все подряд что бы написано у нас
[47:15.120 --> 47:22.240]  преамбула будет разрастаться до больших размеров я забыл что я ляма уже ударил из преамбулы и он
[47:22.240 --> 47:26.800]  не понимает что я хочу вот будут пакеты которые постоянно прикажется мы не будем
[47:26.800 --> 47:31.240]  убирать в целом это нормальная практика что у вас есть там 1 2 преамбулы на всю жизнь и вы
[47:31.240 --> 47:37.120]  просто их переиспользуете из раза в раз может быть как-то дополняя под конкретный случай что
[47:37.120 --> 47:41.600]  еще хочется сказать вот такое типографское замечание вот их и много разных тираж есть
[47:41.600 --> 47:48.800]  тиражки длинные которые выражаются тремя дефисами но при этом есть просто тиражка длинная а есть
[47:48.800 --> 47:53.280]  тиражка длинная с кавычкой спереди это такая российская тиражка чтобы отделять подержащий
[47:53.280 --> 47:58.960]  отсказуемого у них там немножко другие правила как таять пробелы это конечно совсем ерунда но
[47:58.960 --> 48:04.680]  я как-то привык что для чешуя сказуемо отделяются тиражкой с кавычками а другой ситуации тиражка
[48:04.680 --> 48:11.400]  вот такая есть тире покороче оно нужно вроде как только личных промежутков не знаю больше мест
[48:11.400 --> 48:16.400]  применения но есть обычный дефис чтобы слова друг друга отделять ну и понятно что нужно
[48:16.400 --> 48:21.120]  путать это с минусом который режим математическом там вообще свои правила немножко свой мир
[48:21.120 --> 48:28.280]  про формулы всякие разные сложные техники через два занятия наверное и через занятия но во всяком
[48:28.280 --> 48:34.320]  случае минус который в долларах это уже минус математически но то есть даже среда открытая
[48:34.320 --> 48:39.000]  математическая всего на один символ она уж на это символ точно влияет давайте сравним тут
[48:39.000 --> 48:45.840]  напишем минус а просто минуса в рамках окружения математического ну легко видеть что это
[48:45.840 --> 48:52.760]  прям сильно разные начертания да вот и поэтому везде где встречается какие-то переменные это числа
[48:52.760 --> 48:58.160]  это знаки вот всегда это задарачивайте в доллара даже если это один символ потому что это будет
[48:58.160 --> 49:05.520]  по-другому написано будет куда приятнее но потому что будет выделяться из остального текста что
[49:05.520 --> 49:10.720]  еще тут я написал да про точки я сказал что вместо многоточия лучше ставить команду dots
[49:10.720 --> 49:15.920]  который стоит правильная типографская многоточие есть разные вариации которые математически мы про
[49:15.920 --> 49:20.600]  них позже будем говорить ну и вот есть тоже встроенные кавычки чтобы не писать кавычки которые
[49:20.600 --> 49:26.080]  по умолчанию есть есть лапки они ставится как два знака больше два знака меньше но на печати
[49:26.080 --> 49:38.880]  преобразуются уже в красивые кавычки какое-то название давайте посмотрим на них вот ну да
[49:38.880 --> 49:44.840]  наверное это все что сегодня рассказать есть какие-то вопросы после них наверное поговорим там про
[49:44.840 --> 49:50.680]  то что будет дальше на курсе происходить и на этом закончим но вопрос насчет модификаторов и команд
[49:50.680 --> 49:56.840]  то что там шрифт текста стиль когда лучше использовать модификатор это команда ну я бы так
[49:56.840 --> 50:01.600]  сказал когда у тебя нужно сразу много разных модификаторов на весь вернее много разных
[50:01.600 --> 50:05.480]  эффектов тексту применить наверное тебе не хочется что у тебя было много слоев фигурных
[50:05.480 --> 50:10.960]  скобочек поэтому ты делаешь один блок и тут напишешь один блок внутри напишешь всем нужные
[50:10.960 --> 50:16.320]  те модификаторы какие-то там потом будешь набирать весь текст если у тебя какой-то нужно одно
[50:16.320 --> 50:21.160]  применить что-то допустим жирный шрифт как часто бывает тут набираешь текст и наверное тебе
[50:21.160 --> 50:27.440]  хочется не париться блоками сделать просто вот это ну то есть они раньше никакой не имеют что
[50:27.440 --> 50:33.360]  то что то это применение к некоторому блоку текста некоторого эффекта но лично мне кажется что как-то
[50:33.360 --> 50:38.800]  приятнее глазу когда один модификатор пишется вот так а много модификаторов пишется через
[50:38.800 --> 50:42.200]  модификатор спасибо
