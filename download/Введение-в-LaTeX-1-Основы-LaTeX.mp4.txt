[00:00.000 --> 00:09.840]  Рад всех приветствовать на первом занятии курса по теху. Чуть-чуть представлюсь. Зовут меня Даня,
[00:09.840 --> 00:14.360]  я с четвертого курса по МАИ, тоже отсюда. Занимаюсь клубом теха уже, получается,
[00:14.360 --> 00:19.080]  третий год. Это вторая итерация курса, в рамках которой мы хотим поправить всякие разные ошибки,
[00:19.080 --> 00:24.280]  которые были в прошлом семестре. Ну и глобально наша цель такая, чтобы вы с нуля, даже если у вас нет
[00:24.280 --> 00:29.080]  тихого уровня сейчас на входе, на выходе вы могли писать прям полноценную работу на техе,
[00:29.080 --> 00:34.480]  там и для учебных целей, может быть и с нами как-то коллаборировать, если вам очень захочется. Ну,
[00:34.480 --> 00:38.920]  в общем, постарайтесь как можно больше всего выбрать. И с техом возникает такая проблема часто,
[00:38.920 --> 00:45.160]  что это в общем очень большое собрание технологий, которые запиханы все в одну систему, там много
[00:45.160 --> 00:50.560]  пакетов, много людей вписало, в них бывает очень трудно разобраться с нуля самому. И скажем,
[00:50.560 --> 00:54.680]  у меня была такая проблема в классе в 11-м, когда я только начинал всем заниматься и как-то
[00:54.680 --> 01:00.640]  изучать. И вот надеюсь, что в рамках одного курса мы сможем осадить все так, чтобы у вас потом не
[01:00.640 --> 01:04.880]  возникало вопросов и чтобы вы шли в Google уже с пониманием, что вам нужно, даже если вы туда идете.
[01:04.880 --> 01:15.400]  Хорошо. Немножко про структуру курса, вообще какие конкретно будем вещи покрывать. Ну,
[01:15.400 --> 01:20.080]  во-первых, то, ради чего мы все здесь в техе записывается всякая математика и хочется научиться
[01:20.080 --> 01:26.440]  набирать формулы разности по несложности. Там довольно много разных приемов, будет несколько
[01:26.440 --> 01:31.840]  уровней погружения, как мы будем в этом копаться. Но вот по отначанию, наверное, занятия третьего
[01:31.840 --> 01:38.600]  с этим пунктом у нас точно будет все. Поговорим про управление оформлением документа. В этом,
[01:38.600 --> 01:43.760]  наверное, фундаментальная преимущество тех, и перед там вордом или чем угодно еще, что он
[01:43.760 --> 01:50.120]  позволяет буквально паре строчек кода изменить стиль всего документа. И в течение всей вашей
[01:50.120 --> 01:55.040]  работы, когда вы что-то пишете, не задумываться о том, как это будет выглядеть, с пониманием,
[01:55.040 --> 02:02.480]  что вы сможете это поменять очень малыми усилиями. И так, наверное, больше ничто не умеет. И об этом
[02:02.480 --> 02:08.200]  мы поговорим, наверное, в следующем занятии. Поговорим про окружение и теоремы. Это техпсичная
[02:08.200 --> 02:11.960]  вещь. Ну, наверное, когда вы читали какую-то литературу по математике, видели там блоки,
[02:12.320 --> 02:18.560]  определение, номер такое-то, далее по тексту. Или там теорема такая-то, там такое-то. Это все
[02:18.560 --> 02:23.480]  можно делать автоматически со своими наборами стиля для каждого такого блока текста именованного.
[02:23.480 --> 02:31.000]  При этом мы будем много говорить на этом занятии и на следующем. И это, наверное, особенно важно в
[02:31.000 --> 02:36.080]  контексте того, что если кто-то из вас хочет сделать какие-то конспекты, вот это прямо москав.
[02:36.080 --> 02:41.000]  И хочется это пораньше осветить. Поговорим про всякие продвинутые штуки вроде создания своих
[02:41.000 --> 02:46.600]  символов и команд. Да, так бывает, что тех умеет делать не все, что нужно нам, но он при этом дает
[02:46.600 --> 02:51.640]  довольно гибкий инструментарий, которым можно пользоваться, если покопаться. Этым будет посвящено
[02:51.640 --> 02:57.920]  следующее занятие и то, что чуть после него. Поговорим, как вставлять файлы, всякие картинки и
[02:57.920 --> 03:04.360]  таблицы и управлять их с положением документа. Наверное, многие помнят боль в ворде, что происходит,
[03:04.360 --> 03:10.720]  если двигаешь картинку, и там сразу летит все. И вот тех так не умеет. Ну, не умеет так сильно
[03:10.720 --> 03:15.680]  все портить. И даже умеет настраивать так, чтобы не портилось вообще ничего и получался хороший
[03:15.680 --> 03:21.200]  результат. Потом поговорим про водительские приложения, например, как делать всякую векторную
[03:21.200 --> 03:28.120]  графику в техе. Это актуально для всякой геометрии, может быть физики и постоянно используется в таких
[03:28.120 --> 03:32.960]  областях. Потом поговорим, как делать презентации вроде той, которую вы сейчас видите, она тоже на
[03:32.960 --> 03:39.440]  техе сделана. Это будет, наверное, пятое занятие. И поговорим про что-то, что потребуется, если вам
[03:39.440 --> 03:44.400]  вдруг хочется писать какие-то свои книги, то нам потребуется большое содержание, список литературы,
[03:44.400 --> 03:49.560]  библиография. И вот такие тонкости мы сходим уже под конец курса. Вот, план примерно такой.
[03:49.560 --> 03:56.400]  Да, тут еще есть слова о том, что, ну, как вообще курс будет устроен. В прошлом севесторе мы пытались
[03:56.400 --> 04:01.600]  делать какие-то домашки. Ну, то есть, не прямо домашки, я рекомендовал там что-то записывать и
[04:01.600 --> 04:06.880]  мне отправлять, чтобы я почитал и мог на какие-то начеты указать. Это как-то спроса не нашло. В целом,
[04:06.880 --> 04:12.360]  по понятным причинам, у вас, наверное, так хватает домашек, да. Но хочется отметить, что в техе не
[04:12.360 --> 04:17.280]  разобраться без практики. Нужно прям дофига писать, особенно на первых парах, чтобы потом у вас не
[04:17.280 --> 04:21.160]  возникало ступора, когда вам нужно набрать какую-то команду и вы забыли, как она пишется. И, в общем,
[04:21.160 --> 04:27.560]  ходить в Google на каждой строчке это очень некомфортно. Хочется этот этап преодолеть. И вот этой целью
[04:27.560 --> 04:33.520]  нужно много техать. И вот есть у вас такая опция на халяву получить какой-нибудь фидбэк, если вы
[04:33.520 --> 04:38.680]  будете сейчас что-то записывать, вы там пишите, я готов с вами это обсуждать и указывать, где можно
[04:38.680 --> 04:43.720]  что-то улучшить, чтобы вам просто потом было легче, если вы захотите этим дальше заниматься. Вот. Ну
[04:43.720 --> 04:47.720]  и у нескольких часткурсов, к которым, видимо, вы все состоите, раз вы сюда пришли, там тоже можно
[04:47.720 --> 04:52.920]  спрашивать вопросы, я стараюсь его мониторить и как-то отвечать. Ну, и, соответственно, сегодня,
[04:52.920 --> 04:57.400]  после лекции, видимо, у кого-то остались вопросы, как поставить тех и вообще начинать им что-то
[04:57.400 --> 05:03.360]  делать. Вот, надеюсь, что мы сегодня после занятий все это дело покроем. Еще один вступительный слайд.
[05:03.360 --> 05:12.200]  Еще один вступительный слайд о том, ну, к чему вообще преимущество теха. Тут перед вордом сказано,
[05:12.200 --> 05:15.560]  но понятно, что это будет верно более-менее для любой системы, в которой можно писать какие-то
[05:15.560 --> 05:20.600]  конспекты или какую-то литературу. Даже рукописные записи, наверное, ну, такая же закоммерция будет
[05:20.600 --> 05:25.960]  выполняться. Ну, идея в том, что в техе есть некий порог вхождения, вот это вот первый пик,
[05:25.960 --> 05:31.240]  на котором сильно выше, чем график ворда. Но чем более сложная задача вам нужно решить,
[05:31.240 --> 05:36.160]  тем больше для этого подходит тех и тем меньше дополнительных усилий приходится для этого прилагать.
[05:36.160 --> 05:42.280]  И вот, наверное, точка пересечения — это какие-то там документики в пару страниц,
[05:42.280 --> 05:47.600]  вот после которых точно тех это ваш друг, и вы наверняка в этом в ходе учебы убедитесь.
[05:47.600 --> 05:54.360]  Мантизовская часть закончилась, теперь давайте говорить уже по технические вещи. Правда ли,
[05:54.360 --> 05:59.880]  что у многих здесь уже стоит прям среда разработки, вы готовы прямо сейчас что-то записывать?
[05:59.880 --> 06:09.680]  Я рассчитывал на оверлип, но... Я когда записывал, я не понимаю, как тут сделать все. Я поставил
[06:09.680 --> 06:16.760]  вайс-код, поставил мики-тех и все. Я писала текстутию и все. Я тоже. Ага. Хорошо,
[06:16.760 --> 06:21.120]  тогда, видимо, интерактивную часть мы оставим на следующие разы. Сейчас, если у кого-то уже
[06:21.120 --> 06:26.320]  получается, это здорово. У кого не получается, поговорим после занятия, но просто будут какие-то
[06:26.320 --> 06:31.080]  примеры кода, которые хочется убедиться, что у вас тоже будут запускаться. Ну, в целом,
[06:31.080 --> 06:33.680]  приятно создавать, что у вас запускается что-то, что показывается на презентации,
[06:33.680 --> 06:38.360]  но при необходимости я буду писать просто у себя и показывать, как это выглядит. Думаю,
[06:38.360 --> 06:43.040]  с этим проблемы не будет. Кстати, у меня тоже, да, вайс-код с миктехом, и в этом плане те,
[06:43.040 --> 06:47.240]  кто поставили, вам будет немножко полегче, потому что проблемы у нас будут, скорее всего, одинаковые,
[06:47.240 --> 06:54.200]  будем одновременно решать. Здорово. Самые основы. Вот как выглядит буквально Hello World на техе.
[06:54.200 --> 07:01.960]  Вот такой набор кода. Есть пока загадочная для нас строчка document class, в котором какие-то
[07:01.960 --> 07:07.880]  параметры, о которых пока предлагаю не задумываться, но вот они есть. Для тех характерно,
[07:07.880 --> 07:11.480]  что в нем довольно много разных строчек, которые ты раз в жизни пишешь, а потом копируешь из
[07:11.480 --> 07:15.480]  документов документ, особо не задумываясь. Вот это одна из таких, мы и попозже расшифруем,
[07:15.480 --> 07:22.400]  но мораль примерно в том, что мы задаем как бы формат всего документа. Ну, бумага А4 понятно,
[07:22.400 --> 07:28.120]  размер шеста понятно. Что такое article? Ну, об этом попозже. Это один из разных как бы классов
[07:28.120 --> 07:33.000]  документа, которые влияют немножко на форматирование, немножко на набор заголовков,
[07:33.000 --> 07:41.640]  но вот на тонкости, о которых мы пока не хотим задумываться. Ну и сам документ. В этом... Как
[07:41.640 --> 07:48.520]  запустить компиляцию? У вас наверняка у многих редактор есть какая-нибудь или вот зеленый значок
[07:48.520 --> 07:55.400]  play, как у меня, или что-то в таком духе, или какая-нибудь там, ну скажем, тут у вас есть в менюшке
[07:55.400 --> 08:00.200]  там build и можно нажать на кнопку build. От редактора, конечно, зависит, нет общего рецепта, но...
[08:00.200 --> 08:14.440]  Оставил ли ты расширение для теха в VS Code? Ну, вот если пройти в расширение VS Code вот сюда,
[08:14.440 --> 08:24.840]  в extensions и ввести LaTeX, то вот... Ну, значит, с такой проблем мы тоже разберемся попозже. Она тут
[08:24.840 --> 08:31.120]  должна быть. Ну, он... VS Code должен догадываться, что вы открыли прям теховый файл и делать и
[08:31.120 --> 08:37.760]  по ссылке синтаксиса, и всякие там техспецифичные штучки типа того же play показывать. Если этого нет,
[08:37.760 --> 08:41.880]  то это что-то странное, но мы с этим разберемся попозже. Ну, давайте я тоже тут напишу. Примерно
[08:41.880 --> 08:50.760]  то же самое, что было в презентации. Будет, наверное, наглядно. Я в целом тоже иногда забываю,
[08:50.760 --> 09:07.160]  как конкретно пишутся команды. Это как бы не порок. Ну и да. Давайте я немножко договорю,
[09:07.160 --> 09:12.840]  закончу мысль, а потом продолжим обсуждение. Текстура документов в техе похожа глобально
[09:12.840 --> 09:18.520]  на что-то, что, возможно, видели в ht-мейле. Что вот есть некие блоки, которые в ht-мейле называются
[09:18.520 --> 09:25.520]  тегами. И вот в рамках блоков пишется какой-то контент, и по правилам всего блока он как-то
[09:25.520 --> 09:30.840]  обрабатывается. Блок, который нам типично будет нужен всегда, это document. Просто все содержимое
[09:30.840 --> 09:39.040]  документа пишется в нем. Ну, чтобы открыть блок, нужно сделать begin, фигурные скобки и название
[09:39.040 --> 09:46.320]  среды. Дальше включится document. Ну и вот он сам за меня дополнил. И внутри него мы начинаем писать
[09:46.320 --> 10:00.680]  что-то, что потом попадет в наш pdf, который соберется в итогом компиляции. Сделаем. Наверное,
[10:00.680 --> 10:25.400]  так должно быть хорошо. Да, не пугайтесь, у меня стоит темная тема на всем. То, что у вас документы
[10:25.400 --> 10:31.440]  с белым фоном и черным текстом, это совершенно нормально. Вообще-то у меня тоже просто я прикрутил
[10:31.440 --> 10:37.200]  к ВСКоду штучку, которая инвертирует цвета на превью документа. Ну, так как-то приятнее выглядит,
[10:37.200 --> 10:44.040]  если мы как сейчас сидим в темноте, например. Давайте я сделаю приближение. Ну, кто бы мог подумать,
[10:44.040 --> 10:49.240]  наш текст перенесся в pdfник и приобрел какой-то симпатичный шрифт, который был техостроенный.
[10:49.240 --> 11:00.640]  Нет, техкостропов вообще не чувствителен, это не питон, но в целом так просто любое документное
[11:00.640 --> 11:05.760]  сочетание, если каждый следующий блок, который вложен в предыдущий, будет на еще одну табуляцию
[11:05.760 --> 11:14.120]  дальше. Более того, их может быть даже несколько, в том плане, что они схлопнутся. Для тех,
[11:14.120 --> 11:18.040]  любое повторение нескольких пробелов, нескольких новых строк, они все эквалентны,
[11:18.040 --> 11:22.320]  они склопываются в одну новую строку и один пробел. Мы об этом попозже поговорим, когда это будет
[11:22.320 --> 11:29.560]  более уместно. Ну, хорошо, с Hello World мы справились. Хочется теперь разобраться,
[11:29.560 --> 11:35.600]  как писать на русском языке, наверное. И хотелось бы верить, что буквально такое изменение в коде
[11:35.600 --> 11:39.640]  решит нашу проблему. Если мы просто напишем «Привет, мир», то все сработает.
[11:39.640 --> 11:53.680]  Но да, возникает ошибка. Говорят, что уникодные какие-то символы, если не умею работать,
[11:53.680 --> 12:00.760]  это нормально. По умолчанию тех поддерживает, ну, в виде маски кодировку или в общем что-то такое,
[12:00.760 --> 12:06.040]  довольно узкий класс символов. И чтобы писать, ну скажем, на русском языке или там использовать
[12:06.040 --> 12:11.600]  еще какие-то символы, которых по умолчанию в тех и нет, нужно указать явно ту кодировку,
[12:11.600 --> 12:16.800]  в которую вы пишете файл, и ту кодировку, в которую вы ожидаете полученную PDF-ку. Это
[12:16.800 --> 12:21.560]  два разных параметра. Они указываются вот такой командой. Пока опять не очень важно,
[12:21.560 --> 12:26.640]  почему это именно так пишется, почему мы пишем use package, почему порядок фигурных скобок и
[12:26.640 --> 12:30.160]  квадратных скобок. Ну вот есть такая мантра, к которой можно воспользоваться.
[12:30.160 --> 12:33.600]  Потому что позволение, я просто скопирую свой документ, чтобы не перепечатать.
[12:33.600 --> 12:46.920]  Ну опять же, если у вас уже стоит что-то теховое, наверняка оно предлагает всякое
[12:46.920 --> 12:52.600]  автодополнение текста. И в частности, видит, если вы начнете писать use, он наверно подскажет
[12:52.600 --> 12:59.800]  package, вы как-то сэкономите набранные символы. Сейчас разберемся, сейчас все это прокомментирую.
[12:59.800 --> 13:02.920]  Сначала давайте проверим, что это расчел нашу проблему, что документ скомпилируется,
[13:02.920 --> 13:10.360]  и что-то получится. Это старая ошибка, она уже не верна. Ура, получили привет мир. Что произошло?
[13:10.360 --> 13:16.120]  Большая часть всего, что происходит в техе, прикручивается всякими расширениями,
[13:16.120 --> 13:20.440]  которые называются пакетами. Что мы сейчас сделали? Мы подключили три пакета с помощью
[13:20.440 --> 13:27.960]  команды use package. Очень характерное название. И что они делают? Пакет Babel — это штука,
[13:27.960 --> 13:32.640]  которая нужна для работы с разными языками. Там в него включены всякие правила, вроде
[13:32.640 --> 13:38.280]  как правильно ставить отступы между предложениями и словами. Есть разные типографские правила в
[13:38.280 --> 13:44.260]  разных языках, и в него это собрано. Как правильно переносить слова на новую строку, где ставить
[13:44.260 --> 13:49.320]  дефисы. Вот это все имеет Babel. Ну, естественно, я явно указываю, что я буду писать на русском языке,
[13:49.480 --> 13:53.720]  чтобы он нужные правила подгрузил и дальше ими пользовался. Разумеется, на больших документах
[13:53.720 --> 14:02.000]  возникают переносы слов. Ну, потому что, наверное, мне может пригодиться также информация
[14:02.000 --> 14:06.320]  английского языка тоже, если я буду что-то на нем писать. Думаю, что от порядка ничего не зависит,
[14:06.320 --> 14:11.840]  но если я оставлю только Russian, то, скорее всего, у меня пропадут правила английского языка и не
[14:11.840 --> 14:20.200]  хочется так делать. Вот. Далее. Второй пакет фонд-энк. Это буквально фонд-энкодинг. Это
[14:20.200 --> 14:33.680]  какая кодировка будет у текста, который получится на выходе в PDF. Чтобы эта кодировка не была не
[14:33.680 --> 14:39.320]  очень важна, все время можно ее использовать. Я сам не очень в этом силен, но, видимо, это что-то
[14:39.320 --> 14:46.400]  около юни-кода. Боюсь обмануть. Ну, а что происходит ниже? Это input-eng. Это кодировка входного
[14:46.400 --> 14:50.720]  документа. Это какие символы вы используете, собственно, в теховом файле, который потом компьютеру
[14:50.720 --> 14:55.920]  нужно будет как-то обработать. Вот. Та жалоба, которую мы видели на моем экране, что вот какие-то
[14:55.920 --> 15:01.240]  юни-кодные символы, с ними не умею работать, она решалась именно что пакетом input-eng. Но если
[15:01.240 --> 15:07.560]  включить только его, были бы другие проблемы. Нужно купить сразу все три. Ну и, в общем, мы явно
[15:07.560 --> 15:15.240]  указали, что мы работаем с юни-кодом, и те должны быть к этому готов. Вот. Наверное, пока все понятно.
[15:15.240 --> 15:29.120]  Хорошо. Стоит оставить также такой комментарий. Вообще говоря, то, что мы писали, вот, здесь вот
[15:29.120 --> 15:35.360]  перед началом самого документа называется преамбулой. Вернусь обратно на слайд. Когда документ
[15:35.360 --> 15:39.640]  становится большим, скажем, это какой-то там к аспект курса, то и то же самое. Там возникает куча
[15:39.640 --> 15:44.760]  разных пакетов, но ваших кастомных обозначений. Мы поговорим о том, как все создается. В общем,
[15:44.760 --> 15:50.520]  эта штука возрастается строг до 100 до 150, и становится ее как-то неуместно хранить в том же файле,
[15:50.520 --> 15:56.560]  что и ваш основной текст. И хочется это как-то декомпозировать на файлы поменьше. И вот рекомендуется
[15:56.560 --> 16:01.000]  для этого использовать команду input. Сейчас я покажу, как она действует. Мы подробно поговорим,
[16:01.000 --> 16:06.440]  как декомпозировать большие проекты на файлы поменьше. Ну, попозже. Пока что просто вот то,
[16:06.440 --> 16:11.880]  что касается преамбула. Почти всегда вы хотите, чтобы ваш документ принял такой вид. Чтобы все,
[16:11.880 --> 16:24.760]  что до Begin Document было собрано в отдельный файл, который можно так и назвать преамбула. А чтобы
[16:24.760 --> 16:29.480]  использовать тот код, который вы там написали в вашем основном файле, вы используете команду input.
[16:29.480 --> 16:37.080]  И он прям видит нужный файлик. Можно с расширением точки тех, можно без него. Он догадается,
[16:37.080 --> 16:42.560]  что других файлов у него нет в качестве кандидатов. И ничего не изменится. Ну,
[16:42.560 --> 16:49.680]  собственно, этого мы и ожидали. Что произошло? Команда input, она буквально берет код из файла,
[16:49.680 --> 16:55.120]  который вы указали в качестве параметра, и вставляет его сюда. И работает уже с тем,
[16:55.120 --> 17:02.160]  что получилось. Ну, примерно как Define в C. Просто берут и подставляют код еще до стадии компиляции.
[17:02.160 --> 17:21.960]  А что он говорит? Хорошо. Я могу утверждать, что я буквально в прошлой интервью этого курса
[17:21.960 --> 17:28.720]  показывал на TechStudio, как это все устроено. И у меня все работало в таком же виде. Попробуйте
[17:28.720 --> 17:34.200]  написать там тоже UTF-8. Это может, наверное, помочь. Если не поможет, будем разбираться тоже после
[17:34.200 --> 17:44.480]  занятия. Еще вариант. Вы к TechStudio прикрутили, скажем, какую-то маленькую версию самого
[17:44.480 --> 17:53.480]  дистрибутива теха. Вы как с линукса сидите? И вы настроили TechLife Base, правильно? Вот я подозреваю,
[17:53.480 --> 17:59.520]  что в TechLife Base просто нет этих кодировок, и нужно их поставить отдельно. Вот. Ну, я думаю,
[17:59.520 --> 18:04.760]  это гуглится. Должно быть несложно. Кстати, попозже разберемся. Пока можете или попробовать
[18:04.760 --> 18:10.080]  написать UTF-8. И если поможет, то слава богу. А если нет, то, ну, значит, просто попишите на
[18:10.080 --> 18:13.640]  английском в чине этого занятия. У нас не будет много русского текста. По крайней мере не будет
[18:13.640 --> 18:18.520]  ничего, что критично требовало именно русский текст. В качестве примера от английского хуже не
[18:18.520 --> 18:25.480]  станет. Хорошо. Здесь примерно то же самое, что я и сказал, что вот действительно преамблу рекомендуется
[18:25.480 --> 18:30.600]  выделять в отдельный файл, и что мы впоследствии еще разберемся более подробно, как это устроено,
[18:30.600 --> 18:36.000]  какие еще какие-то другие методы вставления кода из разных источников в одно место есть.
[18:36.000 --> 18:42.600]  Честно, это не очень важно. Ну и хочется приступить к тому, собственно, что мы собираемся
[18:42.760 --> 18:47.680]  больше времени делать, писать какие-то формулы, какую-то математику. И вот в техе есть два режима,
[18:47.680 --> 18:55.320]  как это устроено. Есть два класса формул. Под формулой я здесь и далее буду понимать специальное
[18:55.320 --> 19:01.720]  математическое окружение, в котором есть несколько другие правила, не как в обычном языке. Свои
[19:01.720 --> 19:06.600]  команды, которых не было в обычном языке, и которые будут выкидывать ошибку, если потом применить вне
[19:06.600 --> 19:17.720]  формулы свое начертание и слов и цифр. И вот есть два основных класса формул. Формул внутрисрочная,
[19:17.720 --> 19:23.840]  которые заворачиваются в единичный доллар. Ну то есть среда формулы внутрисрочной помечается,
[19:23.840 --> 19:31.080]  как все, что внутри денежных долларов, как на слайде. И давайте тоже в качестве примера
[19:31.080 --> 19:56.920]  я напишу какую-нибудь формулу. Это должно сработать. Да, все так. В техе более-менее все
[19:56.920 --> 20:01.600]  ограничители двусторонние. Все, что внутри долларов находится, будет считаться формулой.
[20:01.600 --> 20:10.000]  Сейчас я немножко разберусь с зумаутом. Да, ура. Произвелся текст, который я ожидал. И как мы можем
[20:10.000 --> 20:18.240]  видеть уже сейчас, текст, который написан обычным, и текст, который написан внутри окружение
[20:18.240 --> 20:23.720]  формулы, отличается даже по начертанию. Ну появляется курсив. Отличия довольно много,
[20:23.720 --> 20:32.920]  мы их еще увидим. Но вот первое, которое образуется в глаза, оно такое. Да, разумеется,
[20:32.920 --> 20:36.920]  можно указывать буквально там для каждого символа, каким шрифтом он будет написан. Мы
[20:36.920 --> 20:46.000]  об этом попозже поговорим, но не сегодня, пока нам это не пригодится. Ну думаю тут вопросу
[20:46.000 --> 20:52.520]  быть не должно, все очень прозрачно. И сразу упомяну второй режим написания формул. Это режим
[20:52.520 --> 20:57.960]  кажется, он называется выключенные формулы, по-научному говоря. Ну в общем, это формулы,
[20:57.960 --> 21:03.800]  которые располагаются по центру новой строки, там вдалеке от всего текста. Они заключаются в
[21:03.800 --> 21:10.640]  квадратной скобке, но не простые, а и кронированные бэкслэшем. Почему так? Ну видимо так исторически
[21:10.640 --> 21:14.880]  сложилось. Считается, что обычные квадратные скобки нужны, например, для того, чтобы указать
[21:14.880 --> 21:20.760]  аргументы функций. Мы об этом опять же еще поговорим. Или буквально обозначать сами себя. Считается,
[21:20.760 --> 21:26.680]  что видимо такой юзкий за них более предпочтительен, поэтому для формул решили
[21:26.680 --> 21:31.720]  завести значение именно кронирования квадратных скобок. Эквивалентный этому подход — это писать
[21:31.720 --> 21:37.680]  удвоенные доллары вместо одинарных. Тоже кажется естественным, как будто усиленное окружение
[21:37.680 --> 21:43.000]  формулы в сравнении с одинарными долларами. Но вот если попытаться погуглить, в чем разница,
[21:43.000 --> 21:47.240]  вы скорее всего увидите, что разницы почти нет. А во-вторых, увидите какие-нибудь комментарии на
[21:47.240 --> 21:52.400]  форму 2010 года, почему лучше делать квадратные скобки, а не двойные доллары. Мы не будем
[21:52.400 --> 21:57.440]  этим заморачиваться. В латехе много всяких исторических вещей, много всякого legacy контента.
[21:57.440 --> 22:02.560]  Ну вот если вы будете использовать квадратные скобки, вы точно ничего не поломаете. Вот такая
[22:02.560 --> 22:09.160]  рекомендация. Да, ну и давайте тоже напишу еще какую-то формулу.
[22:17.240 --> 22:26.360]  Ой, клавиша залипла, всякое бывает. Я могу перейти на новую строку, могу этого не делать.
[22:26.360 --> 22:31.720]  Это окружение само сообразит, что его нужно выделить в новую строчку, центрировать все такое. Но
[22:31.720 --> 22:40.760]  просто чтобы код был читаемый, я сам сделаю один enter. Не, не, не. Две точки это не влияет, влияет
[22:40.760 --> 22:50.520]  именно что вот эти вот скобочки. Да, backslash и квадратная скобка. Да, об этом, наверное, стоило
[22:50.520 --> 22:55.480]  поговорить пораньше. Мы подробно будем говорить про всякие там поведения строк в следующий раз,
[22:55.480 --> 23:02.520]  но для теха одинарный enter ничего не значит. Он его считается за пробел. Чтобы сделать переход
[23:02.520 --> 23:09.920]  на новую строчку, ну типа символ slash and поставить, нужно сделать два enter. И что характерно,
[23:09.920 --> 23:16.520]  как я уже упоминал, много enter хоть столько, эквалентно одному. Много новых строк от этого
[23:16.520 --> 23:27.200]  не станет. Может в этом убедиться. Я тоже попробую скомплировать так. Да, как видим, он буквально
[23:27.200 --> 23:33.920]  сделал один переход на новую строчку и забил на все остальные slash and, которые я проставил. Это
[23:33.920 --> 23:39.440]  бывает удобно. Скажем, вам хочется ну просто визуально декомбозировать ваш текст на какие-то
[23:39.440 --> 23:44.760]  смысловые блоки и вам хочется, чтобы они друг от друга сильно отстояли в вашем исходном коде,
[23:44.760 --> 23:50.640]  там строчки на три, но вам не хочется, чтобы это также оказывало влияние на ваш документ.
[23:50.640 --> 23:55.600]  Возможно мотивация за этим такая, возможно другая, тут я не могу сказать, но во всяком случае
[23:55.600 --> 24:01.560]  оно работает вот так. И мы можем убедиться, что действительно наша формула в квадратных скобках,
[24:01.560 --> 24:06.560]  она оказалась на, во-первых, поскольку я тут замына делаю, не очень понятно, но если я покажу
[24:06.560 --> 24:13.560]  весь документ целиком, то вот она по центру строки, она на новой строке и в общем так рекомендуется
[24:13.560 --> 24:20.240]  выделять что-то, что довольно большого размера и требуется тебе какого-то особого внимания. Мы
[24:20.240 --> 24:26.520]  еще поговорим, какие есть разные способы как-то вынести что-то важное на новую строчку и как
[24:26.520 --> 24:30.320]  спровести к этому внимание. Поговорим о том, какие есть различия стилевые, между тем, что
[24:30.320 --> 24:38.840]  происходит вот формуля второго вида и первого вида различия есть, но первоочередно, что стоит
[24:38.840 --> 24:43.680]  запомнить, что вот есть формулы внутри строки, это доллары, а есть формулы на новой строке, это
[24:43.680 --> 24:51.600]  квадратные скобки. Да, я не упомянул, я уже сделал тут какой-то верхний индекс, двойку,
[24:51.600 --> 25:00.160]  это делается Zergoflex, но это просто вперед забежал, про это, разумеется, еще будет сказано. Да,
[25:00.160 --> 25:08.800]  наконец-то. Как набирать всякое разное в техе? Вам часто в математике прикажется всякие спецсимволы,
[25:08.800 --> 25:13.800]  которых нет на клавиатуре, ну скажем там число p или там знак умножения крестиком или квадратный
[25:13.800 --> 25:18.720]  корень или интеграл, в общем, что угодно. Понятно, что это все на клавиатуре нет и хочется это как-то
[25:18.720 --> 25:25.480]  набирать быстрее, чем просто накликать руками к какому-нибудь там редакторе. Быстрее, чем накликать
[25:25.480 --> 25:30.800]  руками, это примерно теховские команды. У них, как правило, вот такой интерфейс, как вы уже заметили
[25:30.800 --> 25:39.240]  в техе много выражений вида бэкслэш, какое-то слово, все это называется командами, и вот то,
[25:39.240 --> 25:44.560]  что происходит после написания команды в фигурных скобках, называется ее аргументом, а то,
[25:44.560 --> 25:49.600]  что в квадратных скобках, это, в общем-то, тоже аргумент, но как бы опциональный, то есть он может
[25:49.600 --> 25:54.840]  там быть, может не быть, его наличие просто как-то меняет поведение команды, но при этом тех не
[25:54.840 --> 25:58.680]  поругается, если вы вообще ничего там не укажете. Типичный, например, квадратный корень, мы про него
[25:58.680 --> 26:05.080]  еще поговорим. Ну и вот, чтобы просто показать сразу много возможностей теха, то есть я не
[26:05.080 --> 26:09.640]  призываю вас сразу писать, типа, такие вещи и все понимать, что происходит, ну просто такая
[26:09.640 --> 26:14.720]  иллюстрация, что вот типичное написание больших форм, оно выглядит вот так. Давайте просто буквально
[26:14.720 --> 26:21.960]  по символу разберем, что происходит. Вот есть команда int, которая рисует интеграл, вот буквально
[26:21.960 --> 26:27.640]  символ int перевелся в интеграл. У него есть верхний и нижний предел интегрирования, в данном случае
[26:27.640 --> 26:33.120]  плюс-минус бесконечность. Верхние и нижние пределы, ну они же верхние и нижние просто индексы предыдущего
[26:33.120 --> 26:42.280]  символа, делаются как что-то после нижнего прочерка и что-то после циркум флекса. Почему оно
[26:42.280 --> 26:48.760]  в фигурных скобках? Вообще-то в техе у любой команды может на вход подаваться аргумент из одного
[26:48.760 --> 26:54.560]  символа. В таком случае фигурные скобки можно опускать, можно просто писать command, ну там символ
[26:54.560 --> 26:58.800]  a, ну через пробел. Если без пробела, там подумать, что такое название, удлинённое на день символ,
[26:58.800 --> 27:08.040]  ну ничего не сработает. Вот тут, наверное, нужен какой-то пример. Например, хочется написать
[27:08.040 --> 27:19.360]  квадратный корень из числа 2. Я делаю окружение под формулу и пишу команду sqrt, square root. И вот,
[27:19.360 --> 27:26.240]  чтобы нам показать, что именно попадет под этот символ корня, мы пишем что-то в аргументе этой
[27:26.240 --> 27:32.080]  команды. Вообще-то должны были бы написать фигурные скобки, а в них двойку, ну явно указав,
[27:32.080 --> 27:41.120]  что вот двойка – это аргумент команды sqrt. Ну действительно, так оно и есть, оно сработало,
[27:41.120 --> 27:49.640]  но при этом, если бы я эти скобки убрал, ничего бы не изменилось. Причем, поскольку двойка – это,
[27:49.640 --> 27:55.720]  ну не символ латиницы, то можно даже пробел не ставить, он всё равно сообразит. Ну лучше всё
[27:55.720 --> 28:02.360]  время ставить пробел, чтобы было немножко понятнее. Одна символиная штука, он по умолчанию считает
[28:02.360 --> 28:07.240]  аргументами. Если, конечно, команда, которая этому предшествует, она вообще требует аргумента.
[28:07.240 --> 28:14.040]  У sqrt там железно написано, что вот без аргументов он не работает. Если я его уберу, то оно либо не
[28:14.040 --> 28:19.840]  скомпилится, либо получится какое-то неопределенное поведение, в общем, мы этого не хотим. Давайте
[28:19.840 --> 28:25.520]  посмотрим, почему нет. Ну и мечта, конечно, не сработает. Да, он просто не сработал, он говорит,
[28:25.520 --> 28:31.640]  вот мне нужен аргумент, пожалуйста, а ты мне его не предоставил. Да, он как бы предположил,
[28:31.640 --> 28:36.080]  что дальше должен быть аргумент и попытался вставить сам фигурные скобки, и у него ничего не
[28:36.080 --> 28:44.320]  получилось. Главное, чтобы поругался, мораль такая, и просто потому что нужно было что-то написать.
[28:44.320 --> 28:51.280]  Но при этом мы видели, есть такая штука квадратные скобки, в них заворачиваются аргументы опциональные,
[28:51.280 --> 28:57.680]  если, конечно, у команды они есть. У корня такой аргумент есть, он указывает корень, в какой степени
[28:57.680 --> 29:04.560]  извлекается из доленнего текста. Кстати, просто проиллюстрировать. Во-первых, аргументы могут
[29:04.560 --> 29:10.880]  быть многосимволными, скажем. Ну, много цифр я напишу в одни фигурные скобки, ну вот он их все
[29:10.880 --> 29:16.880]  сочет с аргументом и все завернутся в один квадратный корень. Ожидаемое проведение. Ну так вот,
[29:16.880 --> 29:22.880]  если я захочу извлечь корень в какой-то другой степени, то я сделаю аргумент опциональный в
[29:22.880 --> 29:31.120]  квадратных скобках, ну, в степени 3, например. И оно сработало, он поместил тройку там, где вы
[29:31.120 --> 29:39.560]  обычно видели ее в всякой литературе. Насколько мне известно, да. Можем попробовать, сработает ли иначе.
[29:39.560 --> 29:51.160]  Что-то мне, конечно, не должно. Да, он, ну как бы, если он начал партить обязательные аргументы,
[29:51.160 --> 29:55.200]  он посчитал, что после этого команда вообще кончилась, и дальше квадратные скобки уже имеют
[29:55.200 --> 30:00.160]  свое обычное значение, значение просто скобок в тексте. Поэтому нужно было стоять в другом порядке,
[30:00.160 --> 30:07.600]  как изначально и было. Хорошо, разобрались. Чтобы их использовать просто так, их нужно
[30:07.600 --> 30:11.320]  экранировать. Возможно, здесь мы что-то какие-то другие языки программирования, что вот есть
[30:11.320 --> 30:15.640]  спецсимволы, в которых есть какое-то значение в коде, но если хочется, чтобы его не было этого
[30:15.640 --> 30:20.280]  значения, нужно из символа экранировать. Вот та же самая история здесь, экранированная скобка,
[30:20.280 --> 30:30.400]  ну и такая, и другая. Я их, опять же, заворачиваю в доллары, потому что считается, что это ну какое-то
[30:30.400 --> 30:38.760]  матокружение, типа там символ множества, например. Скорее всего, вне долларов оно не сработает. Вот.
[30:38.760 --> 30:45.360]  Вернемся к формуле, которую пытались мы разобрать. Что-то о чем происходило. Да, верхние и нижние
[30:45.360 --> 30:53.240]  индексы. Они делаются нижним прочерком и циркуфлексом. Они тоже являются своего рода командами, которые к
[30:53.240 --> 31:00.400]  символу, который перед ними прорисовывает индекс или снизу, или сверху. И прорисовывает он именно
[31:00.400 --> 31:04.560]  то, что является аргументом этой команды. В данном случае, аргумент для нижнего прочерка – это
[31:04.560 --> 31:11.280]  минус бесконечности, ну то есть минус backslash infty. Infty – это просто команда, чтобы нарисовать
[31:11.280 --> 31:17.120]  бесконечность в техе. А аргументом для циркуфлекса является плюс инфти. Ну и вот он их, собственно,
[31:17.120 --> 31:24.160]  взял в качестве аргументов и поставил верхними и нижними пределами. Как мы бы и ожидали. Ну хорошо.
[31:24.160 --> 31:32.080]  Дальше число E. Ничего удивительного, просто символ E ему и соответствует. И вот хочется его в какой-то
[31:32.080 --> 31:41.200]  степени написать. Ну, например, вот как здесь в степени минус x квадрат пополам. Возникает новая
[31:41.200 --> 31:47.280]  штука степень, ой, новая штука дробь x квадрат пополам. Это делается командой freq, а слово fraction.
[31:47.280 --> 31:52.760]  У нее аргументов обязательных два. Все это – частитель и знаменатель. Он берет частитель и знаменатель,
[31:52.760 --> 31:57.240]  ставит их друг на другом, рисует черту. Вот все сделает эта команда. В данном случае, частителем
[31:57.240 --> 32:00.480]  является x квадрат, знаменателем – 2. Так он их совмещает.
[32:00.480 --> 32:18.040]  А крышечка является не разделителем аргументов. Это самостоятельная команда
[32:18.040 --> 32:29.000]  crcflex. Тут, наверное, нужно грамотно объяснить. В общем, что нижний прочерк, что crcflex, он же крышечка,
[32:29.000 --> 32:34.880]  сами по себе команды, которые принимают ровно один аргумент. Это парсится однозначно следующим
[32:34.880 --> 32:38.920]  образом. Вот нижний прочерк, значит, дальше должен быть аргумент нижний прочерк. Он его прочитал,
[32:38.920 --> 32:44.040]  все, команда кончилась, зарисовал нижний индекс. Чисается новая команда, крышечка читает ее аргумент,
[32:44.040 --> 32:47.680]  зарисовал верхний индекс. Вот. Это не разделитель, это самостоятельная вещь.
[32:47.680 --> 32:54.560]  А вот если аргументов много, то да. Стоит еще раз повторить, аргументы пишутся подряд,
[32:54.560 --> 32:57.280]  но в правильном порядке. Порядка аргументов, разумеется, важна.
[32:57.280 --> 33:07.960]  Которая точечкой – это команда backslash c dot. Точка по центру. Еще есть команда times,
[33:07.960 --> 33:13.160]  которая делает крестик. Вот. Оба они сейчас на экране.
[33:13.160 --> 33:27.360]  Хорошо. Кажется, левую часть уравнения мы разобрали. В правой части, в общем-то,
[33:27.360 --> 33:31.680]  то, что мы уже видели. Команда квадратного корня, у которой аргументом несколько символов,
[33:31.680 --> 33:37.000]  в данном случае это 2P. Они все завернуты в фигурные скобки, отвечающие данной команде.
[33:37.000 --> 33:42.400]  Ну и, может быть, стоит прокомментировать, да, как команда backslash p рисует число p.
[33:42.400 --> 33:57.040]  Есть ли вопросы по-разному? Квадратные.
[33:57.040 --> 34:05.000]  Не-не-не. Интеграл, в данном случае это, ну типа, эта команда отрисовывает ровно символ
[34:05.000 --> 34:08.680]  интеграла и больше ничего. А не все выражение вида интеграл чего-то там,
[34:08.680 --> 34:16.160]  D, D что-то там. Это просто команда, рисующая вот такой значок, и уже после которой можно ожидать,
[34:16.160 --> 34:20.080]  что у него будут какие-то верхние-нижние индексы, которые тоже самостоятельные команды,
[34:20.080 --> 34:23.080]  к нему отношения не имеющие. Интеграл на этом уже кончился. Вот.
[34:23.080 --> 34:29.280]  То есть эти фигурные скобочки можно ставить просто, без всего, и они будут как…
[34:29.280 --> 34:34.040]  Да. Хотя, наверное, стоит еще дать такой комментарий.
[34:34.040 --> 34:38.320]  Вообще-то фигурные скобки можно просто использовать, чтобы заворачивать штуки в блоке.
[34:38.320 --> 34:43.000]  То есть сами по себе они вообще никакой семантики не имеют. Они имеют семантику,
[34:43.000 --> 34:50.000]  когда отделяют друг от друга аргументы какой-то команды, которые весят много символов сразу.
[34:50.000 --> 34:55.760]  Вот как мы, скажем, видели до этого, что вот у команды SQRT длинный аргумент, несколько символов.
[34:55.760 --> 35:01.160]  Чтобы подать ему на вход целиком все эти символы, их заворачивают в один блок фигурных скобок.
[35:01.160 --> 35:09.320]  И уже потом подают на вход. Если бы их не было, то ожидаемый эффект, он воспринят
[35:09.320 --> 35:15.480]  аргументом SQRT только двойку. А дальнейшая, ну, просто идет само по себе и уже не
[35:15.480 --> 35:21.360]  обрабатывается командой SQRT. Фигурные скобки без бэкслэша, без всего, без экранирования – это
[35:21.360 --> 35:29.000]  просто собиратели символов в блоке, в рапках теха. Кстати, мы это уже видели, скажем, в
[35:29.000 --> 35:34.200]  begin, document, end, document. Те же самые фигурные скобки, внутри которых уже пишется какой-то
[35:34.200 --> 35:38.840]  набор символов, означающих, скажем, идентификатор среды, которую мы открываем, в данном случае документа.
[35:38.840 --> 35:49.080]  Тут, думаю, что все. Я сейчас не ожидаю, что вы это все запомнили и готовы воспроизвести.
[35:49.080 --> 35:54.760]  Это просто иллюстрация, ну вот, типичная из записей в техе, если вы пишете какой-то матан.
[35:54.760 --> 36:00.360]  Кстати, мы забыли DX в интеграле. В следующий год я обязательно эту презентацию исправлю.
[36:00.360 --> 36:07.240]  Да, теперь мы постараемся закрепить то, что происходило, и как это структурировать.
[36:07.240 --> 36:15.220]  Вот про индексацию. Как я уже говорил, есть нижний прочерк, нижний индекс, есть циркумфлекс,
[36:15.220 --> 36:18.840]  верхний индекс. Можно использовать только нижний прочерк, только нижний индекс.
[36:18.840 --> 36:22.960]  Можно использовать только циркумфлекс, только верхний индекс. Можно их оба, можно в любом порядке,
[36:22.960 --> 36:26.360]  в порядке, сначала верхний, потом нижний, можно наоборот,
[36:26.360 --> 36:30.920]  можно делать много символов, он прямо тебе, пожалуйста,
[36:30.920 --> 36:34.960]  double subscript, я так не умею, типа, попытка два раза
[36:34.960 --> 36:41.480]  написать нижний индекс, ошибка. Если тебе захочется,
[36:41.480 --> 36:44.760]  чтобы у тебя была, скажем, подпоследовательность
[36:44.760 --> 36:47.600]  в xn, там, скажем, xnkt и тебе хочется, чтобы у тебя был
[36:47.600 --> 36:51.760]  нижний индекс k, у числа n, делается это, да, и вам
[36:51.760 --> 36:57.920]  нужно выделить вот этот nkt в качестве одного большого
[36:57.920 --> 37:00.960]  аргумента, то есть x, нижний прочерк, далее большой
[37:00.960 --> 37:06.080]  аргумент, чтобы в его нижнем индексе, а будет там nkt,
[37:06.080 --> 37:09.000]  и его же внутри этих скобочек заново можно применять нижний
[37:09.000 --> 37:11.800]  прочерк, потому что здесь он уже имеет значение, какой
[37:11.800 --> 37:15.920]  будет нижний индекс у n. В принципе, это можно делать
[37:15.920 --> 37:18.880]  неограниченно вниз, там будет лезинга вырастать, но
[37:18.880 --> 37:21.400]  это не очень симпатично, лучше так не делать, лучше
[37:21.400 --> 37:22.400]  стараться искать обходные пути.
[37:22.400 --> 37:25.400]  — А, вопрос у нас. — Да.
[37:25.400 --> 37:29.400]  — А как в subscript закинуть все русские символы? Оно
[37:29.400 --> 37:31.640]  типа на русские символы рукает. — Да, с русскими символами
[37:31.640 --> 37:35.960]  проблема, мы про них попозже поговорим. Если хочется
[37:35.960 --> 37:38.120]  прямо сейчас это сделать, есть такая штучка — команда
[37:38.120 --> 37:41.560]  текст. Она говорит, что вот то, что дальше, это не
[37:41.560 --> 37:44.960]  формульные, а просто буквально текст, любой набор символов,
[37:44.960 --> 37:47.880]  хоть русских, хоть английских, хоть знаки припинания. Вообще
[37:47.880 --> 37:51.320]  я по поводу ее случайным образом. Да ну, не сработало.
[37:51.320 --> 37:58.560]  Русская, может быть. А, я понял. Нам потребует еще
[37:58.560 --> 38:03.720]  один пакет. Почему я ошибся? Потому что у меня тоже в
[38:03.720 --> 38:06.440]  типичной работе есть прямвол на 100 строк, в который все
[38:06.440 --> 38:09.200]  уже прописано, и которым нужно еще заново писать.
[38:09.200 --> 38:12.000]  Есть какой-то пакет, который подключает русские символы
[38:12.000 --> 38:15.400]  во всякую математику, но это прям экзотика, это практически
[38:15.400 --> 38:17.840]  никогда не нужно, и сейчас я по этому сходу его названия
[38:17.840 --> 38:23.240]  не помню, к сожалению. О, круто. Давайте попробуем.
[38:23.240 --> 38:28.880]  Почему нет? Вот было сказано, что есть такой пакет math.txt.
[38:28.880 --> 38:36.520]  Вот так, что ли? Как будто он его не обнаруживал, в плане
[38:36.520 --> 38:44.920]  не пытался подсказать. А, math.txt. Сейчас посмотрим.
[38:44.920 --> 38:49.120]  Ну, возможно, это оно. Ну, это уже какое-то рукомахание.
[38:49.120 --> 38:51.680]  Нет, это все-таки не оно. В общем, этим вопросом я займусь
[38:51.680 --> 38:54.280]  попозже и отвечу. Сейчас я дать ответ не готов.
[38:54.280 --> 39:02.600]  Хорошо, давайте попробуем хотя бы без кириллицы. Это
[39:02.600 --> 39:07.200]  отдельная проблема. Ага, как будто проблема даже не
[39:07.200 --> 39:13.280]  в ней. Он не узнал даже команду текст. Проблема была даже
[39:13.280 --> 39:15.920]  не в этом, а в том, что сама команда текст приезжает
[39:15.920 --> 39:18.320]  с каким-то пакетом. Скорее всего, с каким-то из пакетов
[39:18.320 --> 39:23.920]  от АМС, Американского Привидического Общества. Эти пакеты мы подключим
[39:23.920 --> 39:27.840]  уже сегодня в конце занятия. Попробуй текст БФ.
[39:27.840 --> 39:31.040]  Текст БФ – это просто ширина шрифта. Три скобочек.
[39:31.040 --> 39:34.040]  Ничего, давайте не будем сейчас кладывать лишнего,
[39:35.040 --> 39:45.160]  сделаем. В общем, да, проблема с русским языком есть. Она
[39:45.160 --> 39:48.960]  решается. Мы ее попозже решим. Давайте, пожалуйста, потише.
[39:48.960 --> 39:53.520]  Трудно говорить. Ну, вроде как с индексацией понятно.
[39:53.520 --> 39:57.480]  Мы ее, как могли, осветили. Следующие – это всякие греческие
[39:57.480 --> 40:02.280]  буквы. Как они пишутся буквально текстом. Берется
[40:02.280 --> 40:05.360]  команда, ну, то есть, что-то, начинающееся с бакслеша,
[40:05.360 --> 40:08.920]  и дальше выражение, обозначающее данную греческую букву.
[40:08.920 --> 40:12.720]  Там альфа, бета, гамма, ро, тета. Ну, парочку примеров
[40:12.720 --> 40:20.240]  я тут накидал. Что характерно, скажем, команды фи и эпсилон
[40:20.240 --> 40:23.480]  дают непривычные нам фи и эпсилон, а немножко другое
[40:23.480 --> 40:26.800]  их начертание. Мы эту проблему чуть позже решим.
[40:26.800 --> 40:34.320]  Стандартные по умолчанию пишутся командами вар-фи,
[40:34.320 --> 40:37.320]  вар-эпсилон, ну, то есть, типа, вариант написания.
[40:37.320 --> 40:39.800]  Первые три символа еще добавляются. Мы потом это
[40:39.800 --> 40:44.360]  исправим, но попозже. Кстати, такой вопрос на засыпку
[40:44.360 --> 40:47.320]  я в прошлый раз задавал в прошлом году. А почему не
[40:47.320 --> 40:49.600]  сработает команда альфа заглавной буквы, если я
[40:49.600 --> 40:55.280]  ее напишу? Ну да, потому что это буквально заглавная
[40:55.280 --> 40:57.720]  буква А из латиницы. Было бы странно, если бы под нее
[40:57.720 --> 41:00.760]  еще была какая-то команда. Сэкономили это название,
[41:00.760 --> 41:03.600]  его потом можно самим использовать под другие нужды.
[41:03.600 --> 41:10.760]  Просто? Ну не знаю, если в виде греческих алфавит,
[41:10.760 --> 41:13.280]  ну, часто там в классах школьных по физике висят греческие
[41:13.280 --> 41:19.000]  алфавиты, там, да, обычно рисуют. Ну и есть вот кванторы,
[41:19.000 --> 41:23.000]  вы все уже видели кванторы. Квантор общности, ну, который
[41:23.000 --> 41:29.480]  переводит это команда for all для всех. Квантор существования
[41:29.480 --> 41:36.960]  это команда exists. Тоже комментарии думаю излишне. Да, сама презентажка
[41:36.960 --> 41:40.960]  я ее скину, она у вас будет, можете не переживать. Это
[41:40.960 --> 41:46.720]  не пропадет. Немножко про дроби. У нас уже были дроби
[41:46.720 --> 41:50.600]  в рамках одного примерчика их сотрат пополам. Вот,
[41:51.600 --> 41:55.360]  Да, есть такая команда frac, которая означает fraction, чтобы
[41:55.360 --> 41:58.600]  рисовать дроби. У нее два аргумента, 4 знаменатель.
[41:58.600 --> 42:02.120]  Что можно тут пронаблюдать? Вот, есть честная дробь,
[42:02.120 --> 42:05.840]  одна вторая. Буквально аргумент в скобках фигурных 1, потом
[42:05.840 --> 42:09.480]  скобках фигурных 2. И вот он берет 1, 2, друг на другом,
[42:09.480 --> 42:13.120]  нижняя черта, все как полагается. То же самое можно сделать
[42:13.120 --> 42:16.280]  без фигурных скобок, поскольку аргументы односимпольные.
[42:16.280 --> 42:21.040]  Пример прямо дальше. Вот такое выражение, frac и просто
[42:21.040 --> 42:24.280]  пробил 3, 4, он его правильно распарсит. Что вот есть команда,
[42:24.280 --> 42:27.040]  у которой два обязательных аргумента, и он датчик будет
[42:27.040 --> 42:29.680]  искать по тексту. Ну, значит, берет следующие два символа
[42:29.680 --> 42:32.040]  и в качестве аргументов использует 3, 4.
[42:32.040 --> 42:36.320]  Можно было бы использовать фигурицу только в одном
[42:36.320 --> 42:38.760]  месте. Скажем, это завернуть, а это не завернуть. Это тоже
[42:38.760 --> 42:41.280]  бы сработало. Но зависит от тех, это просто эквивалентная
[42:41.280 --> 42:43.760]  вещь. Блок из одного символа, это точно то же самое, что
[42:43.760 --> 42:48.800]  один символ. Ну, и дроби могут быть вложенными. Вот
[42:48.800 --> 42:52.240]  есть дроби, звук дробей друг на другом. Это совершенно
[42:52.240 --> 42:55.560]  нормально. Это так же, как мы видели с этими нижними
[42:55.560 --> 42:59.640]  индексами. Что вот есть xnk, t и в рамках одного, в рамках
[42:59.640 --> 43:01.920]  нового блока, который уже является аргументом одной
[43:01.920 --> 43:03.880]  команды нижнего индекса. Можно писать снова нижний
[43:03.880 --> 43:05.760]  индекс. Тут то же самое с дробями, проблемы никакой
[43:05.760 --> 43:09.320]  нет. Больше тут, кажется, ничего нового не появилось.
[43:09.320 --> 43:14.360]  Мы рады, что символ обнажения, но его уже выспрашивали.
[43:14.360 --> 43:17.920]  Вот он снова встретился, это c.dot, он призвоит точечку.
[43:17.920 --> 43:20.000]  Есть куча разных бинарных операций, которые полезно
[43:20.000 --> 43:23.400]  уметь рисовать. Вот эту парочку я перечислил. Вот есть
[43:23.400 --> 43:27.920]  еще обнажение хрестиком. Есть ge greater or equal, больше
[43:27.920 --> 43:35.720]  или равно. Меньше или равно le, less or equal. Да, есть еще
[43:35.720 --> 43:39.200]  там dexland, lexland. Это более симпатичный вариант на
[43:39.200 --> 43:41.920]  чертание, который характерен для русского языка. Мы при
[43:41.920 --> 43:43.720]  этом поговорим в следующий раз, пока можно об этом
[43:43.720 --> 43:46.400]  не заморачиваться. Ну и всякие другие символы.
[43:46.400 --> 43:49.160]  Есть conco, слово congruent, есть sima, слово similar, есть
[43:49.160 --> 43:53.320]  o plus, ну типа плюс в кружочке. Там нужен для прямой суммы,
[43:53.320 --> 43:58.000]  тезерная сумма, все такое. Ну вот просто какой-то
[43:58.000 --> 44:00.640]  набор команд, вот они есть. Вообще, команд очень много
[44:00.640 --> 44:03.360]  в техе, надо к этому привыкнуть. Если вы хотите что-то нарисовать,
[44:03.360 --> 44:06.400]  скорее, ну не нарисовать, произвести какой-то символ
[44:06.400 --> 44:08.960]  из математики, скорее всего он существует в техе,
[44:08.960 --> 44:11.920]  нужно погуглить, наверняка нужная команда найдется.
[44:11.920 --> 44:17.160]  Есть что-то еще такое сайте, Detoxify. Блин, интернета нет.
[44:17.160 --> 44:20.240]  В общем, есть такой сайт Detoxify, я скил на него ссылочку
[44:20.240 --> 44:23.440]  в чат, в котором можно прям рисовать мышкой символ
[44:23.440 --> 44:25.920]  и он попытается найти что-то наиболее похожее из теха,
[44:25.920 --> 44:29.200]  что такой символ производит. Вот. Это бывает полезно.
[44:29.200 --> 44:34.000]  А мы двигаемся чуть-чуть дальше. Следующий уровень
[44:34.000 --> 44:37.040]  написания формул это использование операторов. Под операторами
[44:37.200 --> 44:40.880]  в техе понимаются некие команды из математики,
[44:40.880 --> 44:44.560]  которые пишут какой-то текст специальным шрифтом
[44:44.560 --> 44:48.080]  и принимают в ход один аргумент. Ну вот, например,
[44:48.080 --> 44:51.120]  всем вам точно уже известны операторы синуса, косинуса,
[44:51.120 --> 44:54.840]  логарифма. Это все специально написано на английском
[44:54.840 --> 44:57.080]  языке, которое потом принимает какой-то аргумент.
[44:57.080 --> 45:00.880]  И вот есть некие правила начертания этих операторов.
[45:00.880 --> 45:04.680]  Вот давайте сравним три записи. Есть просто написанная
[45:04.680 --> 45:10.240]  в латиницей sin и x. Есть, не важно сейчас, что это значит,
[45:10.240 --> 45:14.160]  есть некая команда masterm, которая присваивает синусу
[45:14.160 --> 45:17.680]  специальный шрифт, а потом дорисовывает x. А есть прям
[45:17.680 --> 45:21.320]  оператор синуса. Почему оператор? Потому что это команда.
[45:21.320 --> 45:24.520]  Начинается с bx-l. Вот. Оператор это тоже команда. Есть прямо
[45:24.520 --> 45:26.280]  оператор синуса, который принимает на ход аргумент
[45:26.280 --> 45:30.360]  x. Все три результата, как видим, разные. И, как видим,
[45:30.360 --> 45:34.520]  их симпатичность возрастает слева-направо. Писать
[45:34.520 --> 45:37.640]  ни первый, ни второй варианта не рекомендуется вообще,
[45:37.640 --> 45:40.760]  потому что если у вас есть какой-то оператор в тексте
[45:40.760 --> 45:44.200]  и вы его не используете, значит, вы делаете что-то неправильно.
[45:44.200 --> 45:46.600]  Ну согласитесь, в первом случае вообще сильно сливается
[45:46.600 --> 45:49.320]  с x, ну потому что буквально они пишут один и тот же шрифт,
[45:49.320 --> 45:52.040]  а это довольно странно. В втором случае нет пробела,
[45:52.040 --> 45:56.160]  тоже как-то восприятие мешает. Кажется, что... Ну, не, шрифт
[45:56.160 --> 45:59.200]  как раз-таки во втором зрителе случаи одинаковый. Они отличаются
[45:59.200 --> 46:00.200]  именно что пробелом.
[46:00.880 --> 46:04.880]  А обмах, этом ermy мы не сможем как-то пропилочевывать?
[46:04.880 --> 46:07.880]  Сможем, но это такой костыль и непонятно, зачем таки
[46:07.880 --> 46:11.000]  веселее предлагать, если можно делать просто вот буквально
[46:11.000 --> 46:17.520]  sin x. Вот. Бывает такое, что операторы, которые вам нужны,
[46:17.520 --> 46:20.880]  их нет в техе, можно делать свои. Скажем, в алгебре это
[46:20.880 --> 46:23.560]  будет постоянно нужно, там возникают штуки типа размерности,
[46:23.560 --> 46:26.800]  ранги и куча разных обозначений такого операторного вида,
[46:26.800 --> 46:30.160]  и теха знает не все. Их легко вводить самому, мы это научимся
[46:30.160 --> 46:31.720]  в следующий раз. Сейчас не будем грузиться.
[46:33.720 --> 46:36.720]  Скопки. У нас такого еще, кажется, не встречалось.
[46:36.720 --> 46:39.720]  В общем, помимо того, что в техе есть скопки, кто бы мог
[46:39.720 --> 46:42.720]  подумать, скопки можно модифицировать в точки зрения их
[46:42.720 --> 46:46.720]  размера. Тут куча примеров таки дана. Есть модификаторы
[46:46.720 --> 46:49.720]  размера, это буквально тоже команды, у которых на вход
[46:49.720 --> 46:52.720]  принимается один аргумент. И они тут все эти аргументы
[46:52.720 --> 46:55.720]  односимвольные, поэтому я их еще в скопку не заворачиваю.
[46:55.720 --> 46:58.720]  Просто пишу там какой-то модификатор и скопка.
[46:59.280 --> 47:06.280]  Есть big, есть big-zoom-hg, есть left, и его парная команда right.
[47:06.280 --> 47:11.280]  Да и вроде бы все. Что такое команды big разного вида?
[47:11.280 --> 47:13.280]  Кажется, есть что-то big за главные буквы, тоже какой-то
[47:13.280 --> 47:16.280]  свой эффект имеют, они на какой-то фиксированный
[47:16.280 --> 47:20.280]  процент масштабируют символ. Не очень удобно. А вот
[47:20.280 --> 47:23.280]  что удобно, так это парная команда left-right со скобочками.
[47:23.280 --> 47:27.280]  Она смотрит на содержимое между этими скобочками и
[47:27.840 --> 47:30.840]  выбирает оптимальный размер, чтобы это выглядело красиво.
[47:30.840 --> 47:34.840]  Скажем, мы видим дробь P пополам, она довольно большая,
[47:34.840 --> 47:36.840]  больше обычного текста. И поэтому скобочку нужно
[47:36.840 --> 47:39.840]  явно растягивать. Насколько именно, нам как-то не хочется
[47:39.840 --> 47:45.840]  считать. Вот эти два явно не залет. Обычная скобка
[47:45.840 --> 47:48.840]  и скобка с модификатором big. А скобка с модификатором
[47:48.840 --> 47:51.840]  big-zoom-hg уже слишком большая. А вот если хочется прям
[47:51.840 --> 47:54.840]  оптимальную, пишем left-right, и само все выберет и красиво
[47:55.400 --> 48:00.400]  рисует. Это везде нужно. Для Visual Studio можно сделать
[48:00.400 --> 48:05.400]  свои макросы, которые позволят не писать каждый раз left-right.
[48:05.400 --> 48:10.400]  Вот давайте, раз уж мы затронули тему макросов, я немножечко
[48:10.400 --> 48:16.400]  скажу. Или вам еще нужно посмотреть на этот набор
[48:16.400 --> 48:20.400]  кода. Тут чего интересного не происходит, просто разные
[48:20.400 --> 48:22.960]  скобки, разного вида, них заворачивает sweep пополам.
[48:22.960 --> 48:30.960]  Да, sorry, не уточнил. Да, есть команды, но это просто
[48:30.960 --> 48:33.960]  квадратные скобки. А вот округление вниз, это квадратные
[48:33.960 --> 48:37.960]  скобки, только нижняя черточка есть. Это L floor, левая такая
[48:37.960 --> 48:40.960]  скобка, R floor, правая такая скобка. Ну floor от слова
[48:40.960 --> 48:44.960]  округления вниз по-английски буквально. Да, и такие тоже
[48:44.960 --> 48:48.360]  есть, это только верхняя черточка, без нижней. Бывает
[48:48.360 --> 48:53.360]  полезно, в всяком там укрытой ча, вот такие числовые вещи.
[48:53.360 --> 48:58.360]  Вот. Чисто давайте гальтабнусь, тут правда ничего интересного
[48:58.360 --> 49:00.360]  больше происходить не будет. Вот макросы хочется показать.
[49:00.360 --> 49:03.360]  Мы про них подробно еще поговорим, но вот так, в качестве спойлера.
[49:03.360 --> 49:09.360]  Если, конечно, смогу это быстро найти, но кажется, должен.
[49:19.360 --> 49:23.360]  Ну-ка, это чисто Visual Studio штучка.
[49:32.360 --> 49:36.360]  Да, в Tech Studio это тоже можно делать. Вот, блин, я здесь это быстро найду.
[49:36.360 --> 49:38.360]  Shortcos, может быть.
[49:38.360 --> 49:43.360]  А как шрифт увеличить в документе?
[49:43.360 --> 49:47.360]  Имеешь в виду в документе, который производится после компиляции?
[49:47.360 --> 49:55.360]  Для этого проходим в преамбулу, и мы тут указывали 12 пунктов
[49:55.360 --> 50:01.360]  размер шрифта, можно другой, там 14-16. Если не работает,
[50:01.360 --> 50:05.360]  смотрите, не все размеры шрифтов поддерживаются по умолчанию
[50:05.360 --> 50:08.360]  По анатекам можно погуглить, какие именно умолчания есть,
[50:08.360 --> 50:12.360]  по-моему, 10, 12 и еще какой-то. Чтобы поддерживать нестандартные,
[50:12.360 --> 50:15.360]  нужно подключить какой-то пакет, по-моему, X-Sizes.
[50:15.360 --> 50:17.360]  Мы про него еще поговорим, но в следующий раз.
[50:17.360 --> 50:20.360]  А в чем разница с Larch?
[50:20.360 --> 50:22.360]  Ну, Larch и Bot.
[50:22.360 --> 50:25.360]  А, смотри, это модификатор на чертание, про него тоже будем
[50:25.360 --> 50:28.360]  говорить потом, очень много спойлеров. Он модифицирует только
[50:28.360 --> 50:31.360]  конкретную строчку и конкретный блок. А если хочется сразу
[50:31.360 --> 50:35.360]  в общем документы поменять, то тогда уже нужны такие вещи.
[50:35.360 --> 50:39.360]  Да, к сожалению, сейчас еще макросов найти не могу.
[50:39.360 --> 50:42.360]  В общем, у VSCode есть настройка, там можно сделать свой
[50:42.360 --> 50:45.360]  JSON, которым прям набор макросов, и вот у меня стоит такая
[50:45.360 --> 50:50.360]  настройка, что CTRL-SHIFT и девятка, то есть то, что с шифтом
[50:50.360 --> 50:54.360]  дает просто левую скобочку, а вот CTRL-SHIFT-девятка дает
[50:54.360 --> 50:58.360]  LEFT-скобочка и RIGHT-скобочка, и содержимое заворачивает
[50:58.360 --> 51:02.360]  в них выделенное. Очень удобно. В 5 раз это покажу.
[51:02.360 --> 51:05.360]  Sorry, немножко не подготовился.
[51:05.360 --> 51:08.360]  Ну, видимо, когда про макросов будем говорить, там это и будет уместно.
[51:08.360 --> 51:12.360]  Надеюсь, думаю, вопросов уже быть не должно.
[51:12.360 --> 51:16.360]  Да, вот уже был вопрос про фигурные скобочки.
[51:16.360 --> 51:18.360]  Можно ли их как-то нарисовать?
[51:18.360 --> 51:20.360]  Была проблема в том, что это спецсимвол, мы ее решили тем,
[51:20.360 --> 51:24.360]  что мы это экранировали. Это решается для всех таких штук.
[51:24.360 --> 51:26.360]  В тех есть спецсимволы, которые хочется иногда рисовать,
[51:26.360 --> 51:31.360]  тот же самый доллар или амперсант. Они свое значение имеют.
[51:31.360 --> 51:35.360]  Кстати, к слову, какое? Ну вот доллар мы уже видели.
[51:35.360 --> 51:38.360]  Это окружение формулы. Бэкслэш мы увидели.
[51:38.360 --> 51:41.360]  Это вообще начало любой команды.
[51:41.360 --> 51:44.360]  Да, вот бэкслэш. Нужно прям писать бэкслэш.
[51:44.360 --> 51:46.360]  Развращается это с обычным бэкслэшом?
[51:46.360 --> 51:50.360]  Ничем. Просто обычный бэкслэш зарезервированный под экранирование.
[51:51.360 --> 51:55.360]  И поэтому, чтобы не было каких-то там не состыковок синтезиса,
[51:55.360 --> 51:58.360]  решили сделать просто вот команду бэкслэш.
[51:58.360 --> 52:02.360]  По-моему, эквивалентна ей еще команда сет минус.
[52:02.360 --> 52:05.360]  Ну, то есть разность множеств.
[52:05.360 --> 52:07.360]  Но это же тоже бэкслэш, по сути.
[52:07.360 --> 52:09.360]  Потом скобки фигурные мы видели для чего.
[52:09.360 --> 52:12.360]  Амперсант – это служебный символ, который нужен будет для рисования таблицы.
[52:12.360 --> 52:14.360]  По таблице попозже поговорим.
[52:14.360 --> 52:17.360]  Хэштег. Что-то я сходу подзабыл.
[52:17.360 --> 52:20.360]  А, он указывает количество аргументов кословных команд.
[52:20.360 --> 52:21.360]  Тоже пригодится потом.
[52:21.360 --> 52:23.360]  Нижний прожиг мы видели. Почему он спецсимвол?
[52:23.360 --> 52:25.360]  Потому что это спецсимвол нижнего индекса.
[52:25.360 --> 52:27.360]  А процент – это комментарий в техе.
[52:27.360 --> 52:33.360]  Все, что начинается с процента и далее считается комментарием и не компилируется.
[52:33.360 --> 52:35.360]  Вот.
[52:35.360 --> 52:37.360]  Но если нужен процент, мы его экранируем.
[52:40.360 --> 52:42.360]  Это стоит запомнить.
[52:42.360 --> 52:44.360]  Да, немножко форматирование текста.
[52:45.360 --> 52:52.360]  Ну, во-первых, вы, наверное, часто видели во всяких там конспектах, что есть какие-то там главы, подглавы.
[52:52.360 --> 52:55.360]  И хочется уметь это производить более-менее стимитизировано.
[52:55.360 --> 53:00.360]  И можно, конечно, было бы сначала пойти разобраться, как устроены модификаторы начертания.
[53:00.360 --> 53:05.360]  Ну, то есть, как сделать конкретный блок текста, скажем, жирным, большего шрифта и все такое.
[53:05.360 --> 53:07.360]  И только этим пользоваться.
[53:07.360 --> 53:08.360]  Это не очень удобно.
[53:08.360 --> 53:13.360]  Есть специальные инструментарии, называются секцией, подсекцией, им подобные.
[53:13.360 --> 53:15.360]  Есть еще под-под секции, sub-subsection.
[53:15.360 --> 53:17.360]  Что они делают?
[53:17.360 --> 53:22.360]  Эта команда применяет к тексту, который подан в качестве аргумента, нужный модификатор.
[53:22.360 --> 53:24.360]  Ну, там делает его побольше.
[53:24.360 --> 53:27.360]  Ну, знаете, как хедеры в HTML, там много разных хедеров.
[53:27.360 --> 53:30.360]  И вот тут примерно такая же механика.
[53:30.360 --> 53:36.360]  Но помимо того, что он применяет нужный модификатор начертания, он еще и собирает все такие штучки,
[53:36.360 --> 53:41.360]  поданные на вход в разных секциях, в таблицу table of contents, содержание.
[53:41.360 --> 53:46.360]  И потом мы сможем его отрисовать, и он нам отрисует, там, какая секция была на какой странице.
[53:46.360 --> 53:48.360]  Мы это в следующий раз увидим.
[53:48.360 --> 53:50.360]  И вот в частности по этому это полезно.
[53:50.360 --> 53:56.360]  Еще один плюс у секций, sub-секций и прочего, стройная нумерация.
[53:56.360 --> 54:06.360]  И чтобы, если вдруг не хотим нумерации, нам потребуется использовать команды section, sub-section и так далее, но со звездочкой.
[54:06.360 --> 54:10.360]  В техе типично, что есть команда, а есть команда звездочка.
[54:10.360 --> 54:11.360]  Здесь команда звездочка.
[54:11.360 --> 54:14.360]  И они друг от друга отличаются каким-то минорным различиям поведения.
[54:14.360 --> 54:16.360]  Делаем более-менее одно и то же.
[54:16.360 --> 54:20.360]  В случае секций и прочего, звездочка говорит, вот, не нумеровать.
[54:20.360 --> 54:22.360]  Давайте посмотрим на примере.
[54:22.360 --> 54:24.360]  Я буквально скопирую этот текст, с ваших позволения.
[54:24.360 --> 54:25.360]  Какой дотс?
[54:25.360 --> 54:29.360]  Дотс? Ой, не уточнил. Дотс это буквально многоточие.
[54:29.360 --> 54:31.360]  Ну, три точки.
[54:31.360 --> 54:36.360]  Просто я, типа, сымитировать какой-то текст, мне было для него писать, я написал просто дотс.
[54:36.360 --> 54:40.360]  И стоит отметить, тут встретились комментарии,
[54:40.360 --> 54:46.360]  потому что мне хотелось как-то прокомментировать каждый из эффектов по отдельности.
[54:57.360 --> 54:59.360]  Ну, эффект примерно следующий.
[54:59.360 --> 55:05.360]  Команда section сделала мой раздел, прям большой шрифт, и дала ему номер один.
[55:05.360 --> 55:09.360]  Считается, что секция, по крайней мере, в рамках класса документов article, в котором мы находимся,
[55:09.360 --> 55:13.360]  мы пока не будем других находиться, и, наверное, вообще не будем других находиться.
[55:13.360 --> 55:14.360]  Это самый удобный.
[55:14.360 --> 55:17.360]  Здесь это главный элемент номерации, они просто по порядку идут.
[55:17.360 --> 55:19.360]  Первый, второй, третий.
[55:19.360 --> 55:21.360]  Подразделы номируются так.
[55:21.360 --> 55:25.360]  Берется номер текущего раздела, и в рамках него номерация запускается с нуля.
[55:25.360 --> 55:27.360]  Ну, с единицей, извиняюсь.
[55:27.360 --> 55:29.360]  Вот такой эффект имеем.
[55:29.360 --> 55:30.360]  Сейчас вопросик.
[55:30.360 --> 55:31.360]  Да.
[55:31.360 --> 55:35.360]  У меня сама section со звездочкой, а с obsession внутри без звездочки.
[55:35.360 --> 55:39.360]  Он подтянет ближайшую сверху секцию, которая была номерованной.
[55:39.360 --> 55:42.360]  Если их не было, будет нулевая вообще.
[55:42.360 --> 55:43.360]  Т.е. типа 0.1?
[55:43.360 --> 55:44.360]  Да, все так.
[55:44.360 --> 55:45.360]  Хочешь, проверим?
[55:50.360 --> 55:53.360]  Да, видишь, 0.1, 0.2.
[55:53.360 --> 55:54.360]  Повтори просто вопрос.
[55:54.360 --> 55:57.360]  Как это написать посередине страницы?
[55:57.360 --> 55:59.360]  Есть модификатор начертания centering.
[55:59.360 --> 56:02.360]  И есть штучка begin center, end center.
[56:02.360 --> 56:05.360]  Ну, давайте, чтобы хоть что-то одно зафиксировалось.
[56:05.360 --> 56:08.360]  Вот есть такая штука centering.
[56:08.360 --> 56:10.360]  Что она делает?
[56:10.360 --> 56:11.360]  Это модификатор начертания.
[56:11.360 --> 56:16.360]  Он говорит все, что до конца блока, т.е. текущий фигурный скобок, пишется по центру.
[56:16.360 --> 56:18.360]  Мы про них подробно еще поговорим.
[56:18.360 --> 56:19.360]  Но тоже такой спойлер.
[56:19.360 --> 56:21.360]  Такой вопрос возник.
[56:21.360 --> 56:23.360]  Осторожнее, пожалуйста.
[56:23.360 --> 56:25.360]  В общем, делается это вот так.
[56:28.360 --> 56:30.360]  В плане, еще уровень ниже.
[56:30.360 --> 56:32.360]  Делаешь sub-subsection.
[56:32.360 --> 56:34.360]  Это тоже работает.
[56:34.360 --> 56:36.360]  Если sub-sub-subsection, я не знаю.
[56:36.360 --> 56:38.360]  Можно проверить, но что-то, мне кажется, вряд ли.
[56:38.360 --> 56:40.360]  Как-то слишком глубоко.
[56:42.360 --> 56:43.360]  Ну да.
[56:43.360 --> 56:45.360]  Ну, т.е. это точно сработает.
[56:45.360 --> 56:47.360]  Давайте скомпилирую, чтобы проверить.
[56:50.360 --> 56:51.360]  Отлично.
[56:51.360 --> 56:53.360]  А вот если я сделаю еще глубже?
[56:54.360 --> 56:56.360]  Даже с тремя sub?
[56:56.360 --> 56:57.360]  Да ну.
[56:57.360 --> 56:58.360]  Да быть не может.
[56:58.360 --> 56:59.360]  Ну нет.
[56:59.360 --> 57:00.360]  Такого он уже не знает.
[57:00.360 --> 57:01.360]  Ну и слава богу, на самом деле.
[57:01.360 --> 57:04.360]  Если вам в документе потребовалась татуризация на 4 уровня,
[57:04.360 --> 57:05.360]  это какой-то гигантский документ.
[57:05.360 --> 57:07.360]  Не знаю, вы пишете книгу всего мира, может быть...
[57:07.360 --> 57:08.360]  Цепные дроби.
[57:08.360 --> 57:09.360]  Цепные дроби.
[57:09.360 --> 57:12.360]  Для этого нужно как-то иначе это форматировать.
[57:12.360 --> 57:17.360]  И точно это будут дроби, состоящие не из заголовков, а наверное...
[57:17.360 --> 57:19.360]  Ну, в общем, как-то иначе они будут устроены.
[57:19.360 --> 57:22.360]  А как делаешь, чтобы был не 1,1, а 2,1?
[57:22.360 --> 57:23.360]  А, смотри.
[57:23.360 --> 57:28.360]  Дело в том, что он подтягивает первое число в нумерации
[57:28.360 --> 57:30.360]  как номер ближайшей сверху секции.
[57:30.360 --> 57:33.360]  Если мы хотим в следующую секцию, мы делаем снова секшн.
[57:35.360 --> 57:38.360]  И это уже будет вторая секция, и вот он уже будет за ней все нумеровать.
[57:38.360 --> 57:40.360]  Все начиная с двойки.
[57:40.360 --> 57:44.360]  А как можно сделать так, чтобы он не показал номер секции,
[57:44.360 --> 57:46.360]  а однако же продолжал нумерацию?
[57:46.360 --> 57:48.360]  Это уже более тонкие настройки нумерации.
[57:48.360 --> 57:51.360]  Мы про них поговорим, когда будем говорить про счетчики, занятия через два.
[57:51.360 --> 57:53.360]  Это не очень просто, но это возможно.
[57:53.360 --> 57:55.360]  Сейчас я не готов на это отвечать, надо поговорить самому.
[57:55.360 --> 57:56.360]  Могу позабыть.
[57:56.360 --> 57:57.360]  Вот.
[57:57.360 --> 57:59.360]  Но в целом это все очень гибкая система,
[57:59.360 --> 58:00.360]  можно по-разному настраивать.
[58:00.360 --> 58:02.360]  Можно сказать, чтобы была нумерация, скажем, не числами,
[58:02.360 --> 58:05.360]  а типа латиницей, ABC, или римскими цифрами,
[58:05.360 --> 58:06.360]  или как угодно еще.
[58:06.360 --> 58:07.360]  Куча разных способов.
[58:07.360 --> 58:10.360]  А можно начать ее, скажем, с десяти нумерации, а не с одного.
[58:10.360 --> 58:12.360]  Это тоже мне очень трудно сделать.
[58:12.360 --> 58:14.360]  И бывают необходимость так делать иногда.
[58:14.360 --> 58:17.360]  Но мы при этом потом поговорим, не сейчас.
[58:17.360 --> 58:20.360]  С этим, думаю, понятно, с этой частью, да?
[58:21.360 --> 58:22.360]  Вот.
[58:22.360 --> 58:23.360]  Модификатор начертания.
[58:23.360 --> 58:25.360]  Как было обещано.
[58:27.360 --> 58:28.360]  Да.
[58:28.360 --> 58:32.360]  Как делать всякий там жирный шрифт, курсивный шрифт и все такое.
[58:32.360 --> 58:38.360]  Есть команда TextBF, BoldFontBF, TextIt, Italic.
[58:38.360 --> 58:42.360]  Первая команда принимает на вход один аргумент,
[58:42.360 --> 58:44.360]  и все, что аргумент, делает жирным.
[58:44.360 --> 58:47.360]  Вторая команда все, что аргумент, делает курсивным.
[58:47.360 --> 58:49.360]  Результат видите на слайде.
[58:50.360 --> 58:56.360]  При этом есть такая штука модификатора начертания.
[58:56.360 --> 58:58.360]  BF Series and Shape.
[58:58.360 --> 59:02.360]  Почему они именно такие обозначения выбраны, не очень понятно.
[59:02.360 --> 59:03.360]  Лично для меня.
[59:03.360 --> 59:05.360]  В общем, раз BF и там, и там.
[59:05.360 --> 59:08.360]  Но вот эффект должен быть тот же самый, казалось бы.
[59:08.360 --> 59:10.360]  Просто BF точно работает.
[59:10.360 --> 59:11.360]  Просто BF.
[59:11.360 --> 59:12.360]  Для меня это новость.
[59:12.360 --> 59:16.360]  Но давайте, чтобы точно не поломаться, скажем, что вот такие модификаторы существуют.
[59:16.360 --> 59:18.360]  Что такое модификатор начертания?
[59:18.360 --> 59:19.360]  Модификатор начертания.
[59:19.360 --> 59:24.360]  В отличие от команды, которая принимает аргумент, модифицирует аргумент.
[59:24.360 --> 59:29.360]  Модификатор начертания модифицирует все, что находится в рамках данного блока.
[59:29.360 --> 59:32.360]  Да, и просто BF, и просто It, оно все равно.
[59:32.360 --> 59:33.360]  Круто.
[59:33.360 --> 59:37.360]  Говорят, что в качестве модификатора можно писать не BF Series, а просто BF,
[59:37.360 --> 59:39.360]  а вместо It Shape просто It.
[59:39.360 --> 59:41.360]  Вот повторюсь, что делает модификатор.
[59:41.360 --> 59:47.360]  Он все, что, начиная с его конца и заканчивая концом блока фигурной скобочкой,
[59:47.360 --> 59:49.360]  применяет это вот к нему.
[59:49.360 --> 59:54.360]  В данном случае вот здесь выделенное оказалось в блоке с двумя модификаторами,
[59:54.360 --> 59:55.360]  и жирным, и курсивным.
[59:55.360 --> 59:57.360]  Они оба к нему применились.
[59:58.360 --> 01:00:00.360]  Понятно ли, что произошло?
[01:00:00.360 --> 01:00:02.360]  Старого.
[01:00:02.360 --> 01:00:05.360]  Мне, чисто идеологически, не очень нравятся модификаторы,
[01:00:05.360 --> 01:00:07.360]  потому что у них какой-то непонятный синтексис.
[01:00:07.360 --> 01:00:10.360]  Они модифицируют какой-то кусочек, начиная с себя, там, фигурной скобки,
[01:00:10.360 --> 01:00:11.360]  я им никогда не пользуюсь.
[01:00:11.360 --> 01:00:14.360]  Мне кажется, что команда почти всегда интуитивнее,
[01:00:14.360 --> 01:00:17.360]  и почти все задачи они решают уж точно.
[01:00:17.360 --> 01:00:20.360]  Единственное, что они не решают, это размер шрифта.
[01:00:30.360 --> 01:00:31.360]  А, в этом плане.
[01:00:31.360 --> 01:00:34.360]  Мы просто берем вот этот вот текстит с текстом и заворачиваем.
[01:00:34.360 --> 01:00:36.360]  Это все в качестве аргумента?
[01:00:36.360 --> 01:00:38.360]  Так тоже можно.
[01:00:38.360 --> 01:00:40.360]  Вложенные функции вполне поддерживаются.
[01:00:40.360 --> 01:00:43.360]  То же, что касалось индексов, то же, что касалось дробей.
[01:00:43.360 --> 01:00:44.360]  Все то же самое.
[01:00:46.360 --> 01:00:48.360]  Думаю, тут должно быть понятно.
[01:00:48.360 --> 01:00:51.360]  И давайте посмотрим, что еще мы заказали сегодня.
[01:00:51.360 --> 01:00:53.360]  Во, модификаторы размера.
[01:01:00.360 --> 01:01:01.360]  Для этого есть разные команды.
[01:01:01.360 --> 01:01:03.360]  Есть команда Par, команда New Line.
[01:01:03.360 --> 01:01:05.360]  Они немножко отличаются.
[01:01:05.360 --> 01:01:07.360]  Я про них в следующий раз тоже поговорю.
[01:01:07.360 --> 01:01:11.360]  Так можно, но все-таки лучше делать двойные Enter.
[01:01:13.360 --> 01:01:14.360]  Так читай мне.
[01:01:14.360 --> 01:01:17.360]  Я видел работы, в которых все переносы строк делаются командами.
[01:01:17.360 --> 01:01:19.360]  Это ужасно трудно читать.
[01:01:19.360 --> 01:01:21.360]  Вроде бы два бэкслэша тоже работают.
[01:01:21.360 --> 01:01:22.360]  Два бэкслэша.
[01:01:22.360 --> 01:01:23.360]  Там немножко другой эффект.
[01:01:23.360 --> 01:01:24.360]  Там есть разница.
[01:01:24.360 --> 01:01:27.360]  Я вот это все упомяну в следующий раз, но тоже надо подготовиться.
[01:01:27.360 --> 01:01:31.360]  Я сам не всегда помню, какие там отличия есть, но нюансы технически возникают.
[01:01:31.360 --> 01:01:32.360]  Хорошо.
[01:01:32.360 --> 01:01:34.360]  Модификаторы размера.
[01:01:34.360 --> 01:01:37.360]  Я, к сожалению, не знаю, и кажется, что вообще не существует
[01:01:37.360 --> 01:01:40.360]  способа модифицировать размер командами.
[01:01:40.360 --> 01:01:41.360]  Только модификаторами.
[01:01:41.360 --> 01:01:45.360]  Просто команда Larch, как раз она работает, она модифицирует размер.
[01:01:45.360 --> 01:01:46.360]  Да ну.
[01:01:46.360 --> 01:01:49.360]  Ну, типа...
[01:01:49.360 --> 01:01:51.360]  Ну да, команда Larch.
[01:01:51.360 --> 01:01:53.360]  И потом эти вот.
[01:01:53.360 --> 01:01:57.360]  Что-то мне кажется, что она там сработала просто так же, как модификатор.
[01:01:57.360 --> 01:01:59.360]  В каком-то конкретном специалистическом кейсе.
[01:01:59.360 --> 01:02:04.360]  Ну я типа вообще все документы последние два года писал с этой командой Larch.
[01:02:04.360 --> 01:02:07.360]  Нет, ты просто писал ее, и дальше ничего не делал.
[01:02:07.360 --> 01:02:11.360]  Я писал ее вместе с Begin-документ.
[01:02:11.360 --> 01:02:12.360]  И весь документ...
[01:02:12.360 --> 01:02:13.360]  А, смотри.
[01:02:13.360 --> 01:02:17.360]  В том и дело, что ты буквально использовал этот модификатор, но на весь документ.
[01:02:17.360 --> 01:02:19.360]  То есть блок просто никогда не кончился.
[01:02:19.360 --> 01:02:21.360]  Он шел до конца документа и весь документ модифицировал.
[01:02:21.360 --> 01:02:25.360]  Я именно типа сначала писал Slash и Larch, а потом уже открывал скобочки.
[01:02:25.360 --> 01:02:27.360]  Это интересно.
[01:02:27.360 --> 01:02:28.360]  Это стоит отучить.
[01:02:28.360 --> 01:02:31.360]  Возможно, у тебя какой-то клевый компилятор, который умеет чуть больше.
[01:02:31.360 --> 01:02:32.360]  Ну да, и BF.
[01:02:32.360 --> 01:02:36.360]  То есть BF, например, команды он не находит, но если просто написать, то и работает.
[01:02:36.360 --> 01:02:40.360]  Возможно, у тебя правда какой-то клевый компилятор, который чуть-чуть больше умеет, чем обычно тех.
[01:02:40.360 --> 01:02:46.360]  Но по умолчанию, как я всегда видел этот мир, все размеры шрифтов это модификаторы.
[01:02:48.360 --> 01:02:52.360]  В общем, делается это всякими командами виды Larch, Small.
[01:02:52.360 --> 01:02:56.360]  Есть команды еще там Normal Size, Footnote Size, Script Size.
[01:02:56.360 --> 01:02:58.360]  Они гуглятся.
[01:02:58.360 --> 01:03:01.360]  Вам скорее всего они будут редко пригождаться, потому что...
[01:03:01.360 --> 01:03:04.360]  Ну типа обычный шрифт он вроде как почти везде нужен.
[01:03:04.360 --> 01:03:07.360]  А где он не нужен, такая-то эзотическая ситуация.
[01:03:07.360 --> 01:03:09.360]  Но модификаторы есть, и им можно пользоваться.
[01:03:09.360 --> 01:03:15.360]  Да, вам они пригождались бы, если бы у нас не было средств от секций, сапсекций и прочего для заголовков.
[01:03:15.360 --> 01:03:17.360]  Но мы их уже умеем производить более удобно.
[01:03:17.360 --> 01:03:19.360]  И тут они как-то оказывается не нужны.
[01:03:19.360 --> 01:03:22.360]  Может, поэтому для них нет хорошего интерфейса, не знаю.
[01:03:22.360 --> 01:03:24.360]  Есть модификаторы начертания шрифта.
[01:03:24.360 --> 01:03:26.360]  Вот буквально меняющий шрифт.
[01:03:26.360 --> 01:03:30.360]  К счастью, тут я прям могу гарантировать, есть и модификаторы, и команды.
[01:03:30.360 --> 01:03:32.360]  Радиться, вы уже запомнили, да?
[01:03:32.360 --> 01:03:35.360]  Команда действует на аргумент, модификатор на все, что до конца блока.
[01:03:35.360 --> 01:03:36.360]  Вот.
[01:03:36.360 --> 01:03:39.360]  Есть вот такие вот модификаторы и команды, вот такие результаты.
[01:03:39.360 --> 01:03:41.360]  Есть RM.
[01:03:41.360 --> 01:03:44.360]  Это такой шрифт с засечками.
[01:03:44.360 --> 01:03:47.360]  Он обычный, но...
[01:03:47.360 --> 01:03:49.360]  Для чего это полезно?
[01:03:49.360 --> 01:03:52.360]  Скажем, по умолчанию в математике, ну вот, формулах,
[01:03:52.360 --> 01:03:55.360]  текст курсивный, чтобы это исправить, там нужно применить какой-то модификатор.
[01:03:55.360 --> 01:03:57.360]  Вот в частности вот такой сработает.
[01:03:57.360 --> 01:04:02.360]  Ну, там потребуется уже не прям он, а его версия Math RM,
[01:04:02.360 --> 01:04:04.360]  которая для математики нужна.
[01:04:04.360 --> 01:04:06.360]  Небольшая разница, про это потом поговорим.
[01:04:06.360 --> 01:04:08.360]  В общем, это обычный шрифт.
[01:04:08.360 --> 01:04:11.360]  Есть шрифт SF вообще без засечек, без всего.
[01:04:11.360 --> 01:04:13.360]  Тоже бывает нужен.
[01:04:13.360 --> 01:04:16.360]  Тоже есть у него версия, которая работает в математике, Math SF.
[01:04:16.360 --> 01:04:18.360]  Поговорим попозже.
[01:04:18.360 --> 01:04:20.360]  Есть вот такой непонятный шрифт, с которым я ни разу не пользовался,
[01:04:20.360 --> 01:04:23.360]  но вот он в документации был, я решил его указать.
[01:04:23.360 --> 01:04:25.360]  Я не знаю, зачем он может быть нужен.
[01:04:25.360 --> 01:04:28.360]  Как будто какой-то он моноширинный, что ли.
[01:04:28.360 --> 01:04:30.360]  Да, ну типа так, моноширинные печатные машинки.
[01:04:30.360 --> 01:04:32.360]  Да, вот, да.
[01:04:32.360 --> 01:04:34.360]  Есть SC.
[01:04:34.360 --> 01:04:36.360]  Решифровать не могу, но в общем, это такой капитальный шрифт,
[01:04:36.360 --> 01:04:38.360]  который берет все строчные буквы,
[01:04:38.360 --> 01:04:40.360]  заменяет их на маленькие заглавные.
[01:04:40.360 --> 01:04:42.360]  Ну, уменьшенные заглавные.
[01:04:42.360 --> 01:04:44.360]  Вот видите, такой эффект.
[01:04:44.360 --> 01:04:46.360]  Это прикольно, наверное, так можно выделять какие-то определения.
[01:04:46.360 --> 01:04:50.360]  Ну, там какие-то ключевые слова, которые вам хочется сделать заметными.
[01:04:50.360 --> 01:04:52.360]  Ни разу так не делал, но почему бы нет?
[01:04:52.360 --> 01:04:54.360]  Неплохо звучит.
[01:04:54.360 --> 01:04:56.360]  Да.
[01:05:00.360 --> 01:05:02.360]  Боюсь, что никак.
[01:05:02.360 --> 01:05:04.360]  Комментарий, он тоже, если угодно, модификатор.
[01:05:04.360 --> 01:05:06.360]  Он работает до конца,
[01:05:06.360 --> 01:05:08.360]  только не блок, а до конца строки.
[01:05:08.360 --> 01:05:10.360]  Если написать на следующей строке без этого.
[01:05:10.360 --> 01:05:12.360]  Да, да, да.
[01:05:12.360 --> 01:05:14.360]  Без переноса.
[01:05:14.360 --> 01:05:16.360]  Правильная мысль.
[01:05:16.360 --> 01:05:18.360]  Мы уже поняли, что перенос прям строки на новую строку,
[01:05:18.360 --> 01:05:20.360]  это два энтера.
[01:05:20.360 --> 01:05:22.360]  Поэтому сделать один энтер – это не проблема.
[01:05:22.360 --> 01:05:24.360]  Подложь-то та же самая твоя строка.
[01:05:24.360 --> 01:05:26.360]  И с учетом уже того комментария все будет хорошо.
[01:05:28.360 --> 01:05:30.360]  Быстро.
[01:05:30.360 --> 01:05:32.360]  Так.
[01:05:32.360 --> 01:05:34.360]  Я уже упоминал такая штука как окружение.
[01:05:34.360 --> 01:05:36.360]  В контексте есть beginDocument и endDocument.
[01:05:36.360 --> 01:05:38.360]  Все, что внутри – это документ.
[01:05:38.360 --> 01:05:40.360]  И вот именно это подается к компилятору на вход.
[01:05:40.360 --> 01:05:42.360]  Окружение бывает разное, глобальное.
[01:05:42.360 --> 01:05:44.360]  Суть в том, чтобы инкапсулировать
[01:05:44.360 --> 01:05:46.360]  какие-то модификаторы стиля
[01:05:46.360 --> 01:05:48.360]  для всего большого блока текста.
[01:05:48.360 --> 01:05:50.360]  И чтобы это было наглядно,
[01:05:50.360 --> 01:05:52.360]  чтобы это было наглядно
[01:05:52.360 --> 01:05:54.360]  завернуть его все в какое-то отдельное,
[01:05:54.360 --> 01:05:56.360]  в какую-то отдельную среду.
[01:05:56.360 --> 01:05:58.360]  Environment.
[01:06:02.360 --> 01:06:04.360]  В общем, не трудно как-то по этому поводу что-то сказать.
[01:06:04.360 --> 01:06:06.360]  Так просто будет нагляднее.
[01:06:06.360 --> 01:06:08.360]  Например, будет понятно.
[01:06:08.360 --> 01:06:10.360]  Тут буквально то же самое, что я сказал, написано.
[01:06:12.360 --> 01:06:14.360]  Хочется нам как-то инкапсулировать
[01:06:14.360 --> 01:06:16.360]  такую функцию,
[01:06:16.360 --> 01:06:18.360]  центрировать текст.
[01:06:18.360 --> 01:06:20.360]  Весь большой блок текста, в котором много строк,
[01:06:20.360 --> 01:06:22.360]  он весь шел по центру.
[01:06:22.360 --> 01:06:24.360]  Есть такая штука – среда, центр.
[01:06:24.360 --> 01:06:26.360]  Все, что внутри нее, будет по центру.
[01:06:28.360 --> 01:06:30.360]  Давайте проверим.
[01:06:30.360 --> 01:06:32.360]  Я не уверен...
[01:06:32.360 --> 01:06:34.360]  Наверное, это сработает даже с секциями внутри.
[01:06:34.360 --> 01:06:36.360]  Давайте попробуем прямо с ними.
[01:06:38.360 --> 01:06:40.360]  Огонь.
[01:06:40.360 --> 01:06:42.360]  Сентеринг уберем, чтобы нас не смущали.
[01:06:42.360 --> 01:06:44.360]  Мы теперь пытаемся жить без них.
[01:06:44.360 --> 01:06:46.360]  Ну и без всяких модификаторов.
[01:06:46.360 --> 01:06:48.360]  Правильный подход.
[01:06:48.360 --> 01:06:50.360]  Что мы делаем?
[01:06:50.360 --> 01:06:52.360]  Мы говорим Begin,
[01:06:52.360 --> 01:06:54.360]  какая-то среда, в нашем случае центр.
[01:06:54.360 --> 01:06:56.360]  Он даже мне ее подсказывает
[01:06:56.360 --> 01:06:58.360]  и за меня закончит, и EndCenter
[01:06:58.360 --> 01:07:00.360]  поставит.
[01:07:00.360 --> 01:07:02.360]  Все эти дириметры здесь парные.
[01:07:02.360 --> 01:07:04.360]  Begin, End.
[01:07:04.360 --> 01:07:06.360]  И вот я утверждаю, все, что скомпилируется,
[01:07:06.360 --> 01:07:08.360]  будет по центру.
[01:07:10.360 --> 01:07:12.360]  Да, действительно все сработало.
[01:07:12.360 --> 01:07:14.360]  Вот такой вот окружение Center, оно очень полезное,
[01:07:14.360 --> 01:07:16.360]  чтобы там всякие ваши
[01:07:16.360 --> 01:07:18.360]  какие-нибудь картиночки, которые вы вставляете,
[01:07:18.360 --> 01:07:20.360]  какие-нибудь таблички.
[01:07:20.360 --> 01:07:22.360]  Вот такие вещи центрировать.
[01:07:22.360 --> 01:07:24.360]  Удобнее всего делать это Begin, EndCenter.
[01:07:24.360 --> 01:07:26.360]  Мы про это еще поговорим, когда будут картиночки и таблички.
[01:07:26.360 --> 01:07:28.360]  Ну вот, такая штука.
[01:07:30.360 --> 01:07:32.360]  Еще есть окружение FlashRight.
[01:07:32.360 --> 01:07:34.360]  Ему симметричная FlashLeft.
[01:07:34.360 --> 01:07:36.360]  Это окружение, отвечающее за
[01:07:36.360 --> 01:07:38.360]  выравнивание по правому и по левому краю, соответственно.
[01:07:40.360 --> 01:07:42.360]  Функциональность абсолютно такая же.
[01:07:42.360 --> 01:07:44.360]  Внутри
[01:07:44.360 --> 01:07:46.360]  выравниваются так, как мы написали.
[01:07:46.360 --> 01:07:48.360]  Окружение тоже можно комбинировать.
[01:07:48.360 --> 01:07:50.360]  В плане друг друга вкладывать,
[01:07:50.360 --> 01:07:52.360]  можно сделать Begin.
[01:07:52.360 --> 01:07:54.360]  Разве что вот эти два вряд ли хорошо
[01:07:54.360 --> 01:07:56.360]  скомбинируются, потому что они делают противоречащие функции.
[01:07:56.360 --> 01:07:58.360]  Одно выравнивает по центру, а другое вправо.
[01:07:58.360 --> 01:08:00.360]  Скорее всего это сломается.
[01:08:00.360 --> 01:08:02.360]  Но бывают разные окружения,
[01:08:02.360 --> 01:08:04.360]  которые друг другу можно вкладывать
[01:08:04.360 --> 01:08:06.360]  с разными целями, чтобы совместить их функции.
[01:08:06.360 --> 01:08:08.360]  Если не, конечно, совместимы.
[01:08:08.360 --> 01:08:10.360]  В данном случае просто не совместимы.
[01:08:12.360 --> 01:08:14.360]  Расмеры вроде я сейчас выдал, типа, Huge.
[01:08:14.360 --> 01:08:16.360]  То есть можно, типа, в центр
[01:08:16.360 --> 01:08:18.360]  в положение в Huge какой-нибудь, чтобы
[01:08:18.360 --> 01:08:20.360]  размер вымаривать.
[01:08:20.360 --> 01:08:22.360]  В плане... В центр...
[01:08:22.360 --> 01:08:24.360]  Что я пишу? Есть еще какие-то скобочки дополнительные?
[01:08:24.360 --> 01:08:26.360]  Я вот пишу Begin,
[01:08:26.360 --> 01:08:28.360]  у меня еще выдает какой-то Huge,
[01:08:28.360 --> 01:08:30.360]  Large, Abstract, Ray.
[01:08:30.360 --> 01:08:32.360]  Сейчас посмотрим. Прямо в Begin, да?
[01:08:32.360 --> 01:08:34.360]  Да, вот Huge.
[01:08:34.360 --> 01:08:36.360]  Не, мне не предлагает.
[01:08:36.360 --> 01:08:38.360]  Что-то мне кажется, это неправда.
[01:08:38.360 --> 01:08:40.360]  Не, у меня работает.
[01:08:40.360 --> 01:08:42.360]  Удивительно. В общем, видимо, есть еще и окружения,
[01:08:42.360 --> 01:08:44.360]  которые делают
[01:08:44.360 --> 01:08:46.360]  весь текст внутри, скажем,
[01:08:46.360 --> 01:08:48.360]  очень большого шрифта, который Huge.
[01:08:48.360 --> 01:08:50.360]  Прикольно.
[01:08:50.360 --> 01:08:52.360]  Ну, мне такого никогда не прикаждалось, потому что
[01:08:52.360 --> 01:08:54.360]  я вообще модификаторами шрифта очень мало пользуюсь.
[01:08:54.360 --> 01:08:56.360]  Но вот, видимо,
[01:08:56.360 --> 01:08:58.360]  можно пользоваться, по крайней мере, с какими-то компиляторами уж точно.
[01:08:58.360 --> 01:09:00.360]  Не могу говорить сразу за все.
[01:09:00.360 --> 01:09:02.360]  Про окружение у нас еще будет
[01:09:02.360 --> 01:09:04.360]  много разговоров, у них много разных функций есть полезных.
[01:09:04.360 --> 01:09:06.360]  Наверное, сейчас будет
[01:09:06.360 --> 01:09:08.360]  про теоремы, как такое самое яркое
[01:09:08.360 --> 01:09:10.360]  применение.
[01:09:10.360 --> 01:09:12.360]  То, что я уже много раз упоминал,
[01:09:12.360 --> 01:09:14.360]  вот есть такая штука там
[01:09:14.360 --> 01:09:16.360]  теорема.
[01:09:16.360 --> 01:09:18.360]  В контексте теха это следующее значение
[01:09:18.360 --> 01:09:20.360]  имеет.
[01:09:20.360 --> 01:09:22.360]  Какой-то блок текста, хочется предварить
[01:09:22.360 --> 01:09:24.360]  фразой, вида, теорема, номер
[01:09:24.360 --> 01:09:26.360]  такой-то, и
[01:09:26.360 --> 01:09:28.360]  теорема номер такой-то выделить жирным шрифтом,
[01:09:28.360 --> 01:09:30.360]  но при этом не хочется каждый раз
[01:09:30.360 --> 01:09:32.360]  заново писать теорема,
[01:09:32.360 --> 01:09:34.360]  еще и номер такой-то, чтобы там была согласованная номерация,
[01:09:34.360 --> 01:09:36.360]  следить. Это некоторые усилия,
[01:09:36.360 --> 01:09:38.360]  ведь не хочется заниматься, поэтому
[01:09:38.360 --> 01:09:40.360]  люди придумали окружение,
[01:09:40.360 --> 01:09:42.360]  которое называется теоремой.
[01:09:42.360 --> 01:09:44.360]  Пока что мы не заморачиваемся, почему это так пишется.
[01:09:44.360 --> 01:09:46.360]  Пишется это вот так.
[01:09:46.360 --> 01:09:48.360]  Я сразу в представлении скопирую то, что тут написано.
[01:09:48.360 --> 01:09:50.360]  Это тоже,
[01:09:50.360 --> 01:09:52.360]  как я упоминал,
[01:09:52.360 --> 01:09:54.360]  код их числа такого, который вы раз в жизни
[01:09:54.360 --> 01:09:56.360]  копируете в преамбулу, а потом все время пользуетесь.
[01:09:56.360 --> 01:09:58.360]  Поэтому в целом не очень страшно, если вы сейчас
[01:09:58.360 --> 01:10:00.360]  не очень вникнете.
[01:10:00.360 --> 01:10:02.360]  Но идея, даже не буду
[01:10:02.360 --> 01:10:04.360]  в преамбулы писать, поскольку, как
[01:10:04.360 --> 01:10:06.360]  мы помним, input, он просто подставит то, что там-сюда,
[01:10:06.360 --> 01:10:08.360]  то есть это будут эквивалентные записи.
[01:10:08.360 --> 01:10:10.360]  Что я напишу это здесь, что в преамбуле,
[01:10:10.360 --> 01:10:12.360]  это будут эквивалентные записи просто для наглядности.
[01:10:12.360 --> 01:10:14.360]  Что происходит?
[01:10:14.360 --> 01:10:16.360]  Мы подключаем пакет
[01:10:16.360 --> 01:10:18.360]  ams.fm. Это пакет
[01:10:18.360 --> 01:10:20.360]  американского физического общества
[01:10:20.360 --> 01:10:22.360]  ams, который заключен теоремом.
[01:10:22.360 --> 01:10:24.360]  Ну, fm.
[01:10:24.360 --> 01:10:26.360]  Синтаксис объявления теорем такой.
[01:10:26.360 --> 01:10:28.360]  Пишется команда theorem-style,
[01:10:28.360 --> 01:10:30.360]  у нее есть некоторые встроенные аргументы,
[01:10:30.360 --> 01:10:32.360]  по-моему plane, note и remark, что-то такое,
[01:10:32.360 --> 01:10:34.360]  разные есть. Ну, для примера plane.
[01:10:34.360 --> 01:10:36.360]  Можно погулять, какие есть еще.
[01:10:36.360 --> 01:10:38.360]  Более того, можно делать свои, это тоже потом поговорим.
[01:10:38.360 --> 01:10:40.360]  Есть стиль plane.
[01:10:40.360 --> 01:10:42.360]  Что это за стиль? Он говорит, что
[01:10:42.360 --> 01:10:44.360]  теорема номер такой, это пишется жирным
[01:10:44.360 --> 01:10:46.360]  и только им, а то, что
[01:10:46.360 --> 01:10:48.360]  после, обычный текст пишется просто обычным
[01:10:48.360 --> 01:10:50.360]  средством без модификаций. Разные вариации
[01:10:50.360 --> 01:10:52.360]  говорят, что пусть это что-то пишется курсивым,
[01:10:52.360 --> 01:10:54.360]  а это не курсивым, это жирным, а это не жирным,
[01:10:54.360 --> 01:10:56.360]  разные комбинации есть.
[01:10:56.360 --> 01:10:58.360]  Plane довольно удобен.
[01:10:58.360 --> 01:11:00.360]  И дальше объявляется некоторое
[01:11:00.360 --> 01:11:02.360]  количество окружений,
[01:11:02.360 --> 01:11:04.360]  которые немножко разные и имеют функциональность.
[01:11:04.360 --> 01:11:06.360]  То есть, они будут
[01:11:06.360 --> 01:11:08.360]  предварять текст каким-то
[01:11:08.360 --> 01:11:10.360]  своим текстом, который вот здесь
[01:11:10.360 --> 01:11:12.360]  теорема, а вот здесь лемма, но просто
[01:11:12.360 --> 01:11:14.360]  текст будет немножко разный. И в рамках
[01:11:14.360 --> 01:11:16.360]  отдельной
[01:11:16.360 --> 01:11:18.360]  теорем и отдельной лемм будет своя
[01:11:18.360 --> 01:11:20.360]  номерация. Теорема в рамках вся поддерживает
[01:11:20.360 --> 01:11:22.360]  одну и ту же голосовную номерацию. Давайте проверим.
[01:11:22.360 --> 01:11:24.360]  Все так.
[01:11:24.360 --> 01:11:26.360]  Про это тоже надо обязательно сказать.
[01:11:26.360 --> 01:11:28.360]  Давайте проверим, что это вообще работает.
[01:11:30.360 --> 01:11:32.360]  Ну, какие есть теоремы,
[01:11:32.360 --> 01:11:34.360]  которые можно быстро записать?
[01:11:34.360 --> 01:11:36.360]  Это которая про
[01:11:36.360 --> 01:11:38.360]  дефантовое приближение?
[01:11:38.360 --> 01:11:40.360]  У нее много теорем.
[01:11:42.360 --> 01:11:44.360]  Да, конечно.
[01:11:54.360 --> 01:11:56.360]  Это
[01:11:56.360 --> 01:11:58.360]  аргументы дополнительные, я про них
[01:11:58.360 --> 01:12:00.360]  говорю, когда будем это подробно изучать.
[01:12:00.360 --> 01:12:02.360]  Это основальные вещи, которые регулируют
[01:12:02.360 --> 01:12:04.360]  номерацию. Давайте пока не будем. Это довольно
[01:12:04.360 --> 01:12:06.360]  запарная тема.
[01:12:06.360 --> 01:12:08.360]  Пока в первом приближении вот так.
[01:12:08.360 --> 01:12:10.360]  Ну, ладно, давайте не будем придумывать сложные
[01:12:10.360 --> 01:12:12.360]  теоремы. Напишу два плюс два. Это же тоже утверждение
[01:12:12.360 --> 01:12:14.360]  верное, правильно? Его можно назвать теоремой.
[01:12:14.360 --> 01:12:16.360]  Отлично.
[01:12:16.360 --> 01:12:18.360]  Годится. Даже
[01:12:18.360 --> 01:12:20.360]  только больше нуля. Если мы, конечно, не в поле
[01:12:20.360 --> 01:12:22.360]  из одного элемента.
[01:12:28.360 --> 01:12:30.360]  Огонь. Что произошло?
[01:12:30.360 --> 01:12:32.360]  Он предварил наш текст,
[01:12:32.360 --> 01:12:34.360]  который, кстати, формульный. Предварил словом
[01:12:34.360 --> 01:12:36.360]  теорема, присвоил какой-то номер
[01:12:36.360 --> 01:12:38.360]  и написал все
[01:12:38.360 --> 01:12:40.360]  правильным форматом. Мы могли бы
[01:12:40.360 --> 01:12:42.360]  изменить, продублировать.
[01:12:44.360 --> 01:12:46.360]  Я утверждаю, что получится теоремы
[01:12:46.360 --> 01:12:48.360]  два и теоремы три, которые говорят то же самое.
[01:12:48.360 --> 01:12:50.360]  Ну, потому что мы текст не меняли.
[01:12:50.360 --> 01:12:52.360]  Но вот номерация осталась согласованной.
[01:12:52.360 --> 01:12:54.360]  При этом
[01:12:54.360 --> 01:12:56.360]  у нас есть окружение лемма, которое делает немножко
[01:12:56.360 --> 01:12:58.360]  другое. Попробуем написать его.
[01:12:58.360 --> 01:13:00.360]  Скажем, вместо теоремы посередине
[01:13:00.360 --> 01:13:02.360]  напишем лемма. Кстати,
[01:13:02.360 --> 01:13:04.360]  вообще, тут у меня полетела эта
[01:13:04.360 --> 01:13:06.360]  индентация. Хочется ее исправить.
[01:13:06.360 --> 01:13:08.360]  Он ругается на русский букв внутри теоремы.
[01:13:08.360 --> 01:13:10.360]  Внутри теоремы? Сейчас.
[01:13:12.360 --> 01:13:14.360]  Написать, что если в поле
[01:13:14.360 --> 01:13:16.360]  больше одного элемента.
[01:13:16.360 --> 01:13:18.360]  Этого такого быть не должно.
[01:13:18.360 --> 01:13:20.360]  Ты точно подключил пакет, который был
[01:13:20.360 --> 01:13:22.360]  про кодировки?
[01:13:22.360 --> 01:13:24.360]  Нет, а который input tank?
[01:13:24.360 --> 01:13:26.360]  Да.
[01:13:26.360 --> 01:13:28.360]  И он...
[01:13:28.360 --> 01:13:30.360]  И все равно жалуются.
[01:13:30.360 --> 01:13:32.360]  Это очень странно. Мы разбираемся
[01:13:32.360 --> 01:13:34.360]  после занятия. Давайте посмотрим, что хотя бы это работает.
[01:13:36.360 --> 01:13:38.360]  Ну, ожидаемый эффект.
[01:13:38.360 --> 01:13:40.360]  Вместо теоремы написали лемма.
[01:13:40.360 --> 01:13:42.360]  Нумерация у них своя.
[01:13:42.360 --> 01:13:44.360]  Все же начинается съединиться.
[01:13:44.360 --> 01:13:46.360]  А теорема была по счету третья, стала вторая.
[01:13:46.360 --> 01:13:48.360]  Потому что теперь она по порядку
[01:13:48.360 --> 01:13:50.360]  просто вторая.
[01:13:50.360 --> 01:13:52.360]  Эту номерацию тоже можно управлять.
[01:13:52.360 --> 01:13:54.360]  Мы про это потом поговорим.
[01:13:54.360 --> 01:13:56.360]  Но это тоже такая запарная вещь.
[01:13:56.360 --> 01:13:58.360]  В первом приближении, если вы хотите
[01:13:58.360 --> 01:14:00.360]  прямо сейчас идти, хоть какие-то реакции ваши,
[01:14:00.360 --> 01:14:02.360]  то вам этого в принципе хватит.
[01:14:02.360 --> 01:14:04.360]  Сделать окружение, скажем, теорема, лемма,
[01:14:04.360 --> 01:14:06.360]  определение, замечание,
[01:14:06.360 --> 01:14:08.360]  всякие такие штуки.
[01:14:08.360 --> 01:14:10.360]  И можно идти писать, и все это будет работать.
[01:14:10.360 --> 01:14:12.360]  Другое дело, что вам, возможно,
[01:14:12.360 --> 01:14:14.360]  не захочется их нумеровать.
[01:14:14.360 --> 01:14:16.360]  Как нумерацию отключить?
[01:14:16.360 --> 01:14:18.360]  Делаем вместо New Serum New Serum со звездочкой.
[01:14:18.360 --> 01:14:20.360]  Сейчас разберемся.
[01:14:20.360 --> 01:14:22.360]  Вот.
[01:14:22.360 --> 01:14:24.360]  Звездочка в данном случае меняется
[01:14:24.360 --> 01:14:26.360]  по действующим образом.
[01:14:26.360 --> 01:14:28.360]  Она говорит, что вот теперь это окружение ненумерованное.
[01:14:28.360 --> 01:14:30.360]  Теперь будет только текст.
[01:14:30.360 --> 01:14:32.360]  Ну, как-то правильно оформатированный, скажем,
[01:14:32.360 --> 01:14:34.360]  журналистом. И все.
[01:14:34.360 --> 01:14:36.360]  Больше ничего.
[01:14:36.360 --> 01:14:38.360]  Хорошо.
[01:14:38.360 --> 01:14:40.360]  Не уверен.
[01:14:40.360 --> 01:14:42.360]  Надо поэкспериментировать.
[01:14:42.360 --> 01:14:44.360]  Кажется, что нет.
[01:14:44.360 --> 01:14:46.360]  Кажется, это не правда.
[01:14:46.360 --> 01:14:48.360]  Я бы на твоем месте сделал два отдельных окружения.
[01:14:48.360 --> 01:14:50.360]  Одно нумерованное, скажем, Serum Numbered,
[01:14:50.360 --> 01:14:52.360]  а другое ненумерованное,
[01:14:52.360 --> 01:14:54.360]  уже без звездочки.
[01:14:54.360 --> 01:14:56.360]  И пользовался ими по отдельности.
[01:14:56.360 --> 01:14:58.360]  Вот.
[01:14:58.360 --> 01:15:00.360]  Тоже можно поэкспериментировать, но тебе глобально,
[01:15:00.360 --> 01:15:02.360]  скорее всего, в рамках одного документа это не потребуется.
[01:15:02.360 --> 01:15:04.360]  В рамках одного документа у тебя будут, наверное,
[01:15:04.360 --> 01:15:06.360]  согласованы. Или все нумерованные, и все ненумерованные.
[01:15:06.360 --> 01:15:08.360]  Этим ты можешь вправлять.
[01:15:08.360 --> 01:15:10.360]  Ну, типа, сейчас не было цели показать
[01:15:10.360 --> 01:15:12.360]  все ваши теории.
[01:15:12.360 --> 01:15:14.360]  Их довольно много, они довольно сложные.
[01:15:14.360 --> 01:15:16.360]  Сейчас не будем.
[01:15:16.360 --> 01:15:18.360]  Пока просто такой пример.
[01:15:18.360 --> 01:15:20.360]  Вот так можно.
[01:15:20.360 --> 01:15:22.360]  Ну, и вот последнее, что на сегодня
[01:15:22.360 --> 01:15:24.360]  хочется сказать.
[01:15:24.360 --> 01:15:26.360]  Ну, только предположение, что, возможно,
[01:15:26.360 --> 01:15:28.360]  кто-то из вас вообще потом ходить не захочет,
[01:15:28.360 --> 01:15:30.360]  и ему хочется прямо сейчас идти, хоть.
[01:15:30.360 --> 01:15:32.360]  Вот, в принципе, это какое-то терминум мы уже получили.
[01:15:32.360 --> 01:15:34.360]  Вот просто какие-то замечания,
[01:15:34.360 --> 01:15:36.360]  что еще вам может пригодиться.
[01:15:36.360 --> 01:15:38.360]  Что есть куча пакетов американского
[01:15:38.360 --> 01:15:40.360]  фитнес-общества, они полезные,
[01:15:40.360 --> 01:15:42.360]  ими стоит пользоваться.
[01:15:42.360 --> 01:15:44.360]  Ну, то есть, если вы их подключите,
[01:15:44.360 --> 01:15:46.360]  вам хуже не станет.
[01:15:46.360 --> 01:15:48.360]  Но, зато, многие функции, о которых мы будем дальше говорить,
[01:15:48.360 --> 01:15:50.360]  у вас точно сработают.
[01:15:50.360 --> 01:15:52.360]  Скажем, вот про теоремы мы говорили, вот он тут тоже,
[01:15:52.360 --> 01:15:54.360]  в частности, в этом списке есть.
[01:15:54.360 --> 01:15:56.360]  Если бы мы его не подключили, теоремы, скорее всего, не работали.
[01:15:56.360 --> 01:15:58.360]  Еще есть нюанс.
[01:15:58.360 --> 01:16:00.360]  Есть разные терешки, разные дефисы.
[01:16:00.360 --> 01:16:02.360]  И вот мне
[01:16:02.360 --> 01:16:04.360]  часто режут глаза, когда я вижу неправильные
[01:16:04.360 --> 01:16:06.360]  терешки, неправильные дефисы, стоит, наверное, прокомментировать.
[01:16:06.360 --> 01:16:08.360]  Русской типографики
[01:16:08.360 --> 01:16:10.360]  есть длинная
[01:16:10.360 --> 01:16:12.360]  терешка, у которой
[01:16:12.360 --> 01:16:14.360]  не очень большие пробелы
[01:16:14.360 --> 01:16:16.360]  между нее и словами. Эта терешка
[01:16:16.360 --> 01:16:18.360]  отделяющая подлежащие сказуемые.
[01:16:18.360 --> 01:16:20.360]  В техе она пишется вот так.
[01:16:20.360 --> 01:16:22.360]  Кавычка и три дефиса.
[01:16:22.360 --> 01:16:24.360]  Есть просто длинная терешка.
[01:16:24.360 --> 01:16:26.360]  Она просто длинная, там пробелы по обычным правилам.
[01:16:26.360 --> 01:16:28.360]  Есть терешка поменьше,
[01:16:28.360 --> 01:16:30.360]  средняя. Ее указывает
[01:16:30.360 --> 01:16:32.360]  каждый человек промежутки.
[01:16:32.360 --> 01:16:34.360]  Или когда у вас там теорема двух авторов,
[01:16:34.360 --> 01:16:36.360]  типа теорема Хана Банаха,
[01:16:36.360 --> 01:16:38.360]  вот Хана Банаха пишется через
[01:16:38.360 --> 01:16:40.360]  терешку из двух дефисов.
[01:16:40.360 --> 01:16:42.360]  Или такая.
[01:16:42.360 --> 01:16:44.360]  Есть просто дефисы,
[01:16:44.360 --> 01:16:46.360]  которые как они есть, так они и есть.
[01:16:46.360 --> 01:16:48.360]  Но в математике обычно
[01:16:48.360 --> 01:16:50.360]  дефис имеет немножко другое значение, там он преобразуется в минус.
[01:16:50.360 --> 01:16:52.360]  Это еще одно очертание,
[01:16:52.360 --> 01:16:54.360]  которое раньше не было. Давайте проверим,
[01:16:56.360 --> 01:16:58.360]  что вот действительно
[01:16:58.360 --> 01:17:00.360]  все терешки,
[01:17:00.360 --> 01:17:02.360]  они какой-то разный эффект
[01:17:02.360 --> 01:17:04.360]  имеют.
[01:17:08.360 --> 01:17:10.360]  Ну, вот так.
[01:17:12.360 --> 01:17:14.360]  Блин, как же так?
[01:17:14.360 --> 01:17:16.360]  А, потому что я этот
[01:17:16.360 --> 01:17:18.360]  до беги-документ. Соря.
[01:17:18.360 --> 01:17:20.360]  Это моя ошибка.
[01:17:20.360 --> 01:17:22.360]  Этого, может, я думаю, не нужно,
[01:17:22.360 --> 01:17:24.360]  в качестве примера.
[01:17:32.360 --> 01:17:34.360]  Да. Нет.
[01:17:34.360 --> 01:17:36.360]  Вот тут чуть-чуть меньше
[01:17:36.360 --> 01:17:38.360]  пробелы.
[01:17:38.360 --> 01:17:40.360]  Да, это вообще мелочь,
[01:17:40.360 --> 01:17:42.360]  и вы можете вообще никогда не париться,
[01:17:42.360 --> 01:17:44.360]  и писать просто длинную терешку,
[01:17:44.360 --> 01:17:46.360]  тремя дефисами, ради бога.
[01:17:46.360 --> 01:17:48.360]  Но вообще-то по правилам русского языка
[01:17:48.360 --> 01:17:50.360]  терешка, которая именно между прочими
[01:17:50.360 --> 01:17:52.360]  сказуемым, пишется вот так.
[01:17:52.360 --> 01:17:54.360]  Про матрицу поговорим потом,
[01:17:54.360 --> 01:17:56.360]  это довольно сложно.
[01:17:58.360 --> 01:18:00.360]  Ну, и вот еще комментарий,
[01:18:00.360 --> 01:18:02.360]  что есть правильные многоточие,
[01:18:02.360 --> 01:18:04.360]  не ставить три точки подряд,
[01:18:04.360 --> 01:18:06.360]  есть правильные кавычки,
[01:18:06.360 --> 01:18:08.360]  это не кавычки, которые прямые,
[01:18:08.360 --> 01:18:10.360]  которые на клавиатуре,
[01:18:10.360 --> 01:18:12.360]  а два знака меньше, два знака больше.
[01:18:12.360 --> 01:18:14.360]  Они в техе коллапсируют в кавычке.
[01:18:14.360 --> 01:18:16.360]  Кажется, на сегодня все.
[01:18:16.360 --> 01:18:18.360]  Больше ничего не планировал.
[01:18:18.360 --> 01:18:20.360]  Да, огонь. Ура. Спасибо.
